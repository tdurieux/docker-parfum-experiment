{
  "startTime": 1674254032987,
  "endTime": 1674254034377,
  "originalSmells": [
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 15,
        "columnStart": 2,
        "columnEnd": 25
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# KIPA daemon docker image.\n#\n# Example usage:\n#   docker build -t kipa .\n#   docker run --name kipa \\\n#     --mount type=bind,source=$KEY_PATH,target=/root/key \\\n#     --mount type=bind,source=$KEY_PASSWORD_PATH,target=/root/key-password \\\n#     kipa $KEY_ID\n\nFROM rust:slim-buster\n\nRUN \\\n  apt-get update && \\\n  apt-get -y install --no-install-recommends \\\n    clang make automake libc-dev libclang-dev pkg-config curl gnupg protobuf-compiler \\\n    libgmp-dev nettle-dev && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /root/kipa\nCOPY Cargo.lock Cargo.lock\nCOPY Cargo.toml Cargo.toml\n# Fetch dependencies first, improve Docker caching performance\nRUN cargo fetch\n\nCOPY build.rs build.rs\nCOPY resources/proto/proto_api.proto resources/proto/proto_api.proto\nCOPY src src\nRUN cargo install --path . --root out\n\n# ~~~~~~~~~~~~~~~~~~~~~\n\nFROM debian:buster-slim\n\nRUN \\\n  apt-get update && \\\n  apt-get -y install --no-install-recommends \\\n    gnupg && \\\n  apt-get -y clean && \\\n  rm -rf /var/lib/apt/lists/*\n\nCOPY resources/docker-run.sh resources/docker-run.sh\nCOPY resources/keys resources/keys\n\nCOPY --from=0 /root/kipa/out/ /\n\nENTRYPOINT [\"sh\", \"resources/docker-run.sh\"]\n"
}