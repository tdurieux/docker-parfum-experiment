{
  "startTime": 1674220731270,
  "endTime": 1674220733158,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 8
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 75,
        "lineEnd": 81,
        "columnStart": 22,
        "columnEnd": 8
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 22,
        "columnEnd": 76
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 75,
        "lineEnd": 81,
        "columnStart": 22,
        "columnEnd": 8
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 18,
        "columnEnd": 46
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 12,
        "columnEnd": 28
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 22,
        "columnEnd": 38
      }
    }
  ],
  "repairedDockerfile": "FROM node:lts-alpine AS build-frontend\n\nWORKDIR /code\nRUN apk update && apk add --no-cache g++ git make python3\nCOPY package.json yarn.lock webpack.common.babel.js webpack.dev.babel.js tsconfig.json ./\nRUN yarn && yarn cache clean;\nCOPY ESSArch_Core/frontend/static/frontend /code/ESSArch_Core/frontend/static/frontend\nCOPY ./.git .git\nRUN yarn build:dev && yarn cache clean;\n\nFROM python:3.9-bullseye as base\n\nRUN pip install --no-cache-dir --upgrade pip setuptools\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n    default-libmysqlclient-dev \\\n    libcairo2-dev \\\n    libffi-dev \\\n    libldap2-dev \\\n    libpango1.0-dev \\\n    libsasl2-dev \\\n    libssl-dev \\\n    netcat \\\n    postgresql-client \\\n    python3-cffi \\\n    unixodbc-dev \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Libreoffice\nRUN apt-get update && apt-get install -y --no-install-recommends libreoffice && rm -rf /var/lib/apt/lists/*;\n\nADD requirements /code/requirements\nADD setup.py /code/setup.py\nADD setup.cfg /code/setup.cfg\nADD versioneer.py /code/versioneer.py\nADD README.md /code/README.md\n\nRUN pip install --no-cache-dir -e /code\n\nFROM base as build-docs\n\nWORKDIR /code/ESSArch_Core/docs\nRUN mkdir -p /ESSArch/log\n\n# Install docs requirements\nADD requirements/docs.txt /code/requirements/docs.txt\nRUN pip install --no-cache-dir -r /code/requirements/docs.txt\n\n# Add source\nADD . /code\n\n# Build docs\nRUN mkdir -p /code/config\nRUN mkdir -p /code/log\nRUN essarch settings generate --debug --overwrite -p /code/config/local_essarch_settings.py\nENV PYTHONPATH=/code/config\nRUN for lang in \"en\" \"sv\"; do make html LANGUAGE=\"$lang\"; done\n\nWORKDIR /code\n\nFROM base\n\nWORKDIR /code\nEXPOSE 8000\n\nENV APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=DontWarn\n\nENV PYTHONUNBUFFERED 1\nENV DJANGO_SETTINGS_MODULE ESSArch_Core.config.settings\nENV PYTHONPATH=/ESSArch/config:/ESSArch/plugins\n\nRUN curl -f -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -\nRUN echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list\n\nRUN curl -fsSL https://deb.nodesource.com/setup_16.x | bash -\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    curl \\\n    gettext \\\n    git \\\n    vim \\\n    nodejs \\\n    yarn && rm -rf /var/lib/apt/lists/*;\n\nADD requirements/optional.txt /code/requirements/optional.txt\nADD requirements/tests.txt /code/requirements/tests.txt\nRUN pip install --no-cache-dir -r /code/requirements/optional.txt\nRUN pip install --no-cache-dir -r /code/requirements/tests.txt\nRUN pip install --no-cache-dir -e .[mysql,postgres,logstash]\nRUN pip install --no-cache-dir sentry-sdk\nRUN pip install --no-cache-dir django-sslserver\nRUN pip install --no-cache-dir datasette\n\n# Copy built frontend\nCOPY --from=build-frontend /code/ESSArch_Core/frontend/static/frontend/build /code/ESSArch_Core/frontend/static/frontend/build\n\n# Copy built docs\nCOPY --from=build-docs /code/ESSArch_Core/docs/_build /code/ESSArch_Core/docs/_build\n\n# Use python version that match installed libreoffice for unoconv\nRUN sed -i 's/^#!\\/usr\\/local\\/bin\\/python/#!\\/usr\\/bin\\/python3/' /usr/local/bin/unoconv\n\n# Add source\nADD . /code\n"
}