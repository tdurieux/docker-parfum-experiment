{
  "startTime": 1674250355439,
  "endTime": 1674250356440,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 18,
        "columnEnd": 56
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 18,
        "columnEnd": 56
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM golang:1.18-buster AS src\n\nWORKDIR /go/src/app/\n\n# Copy dependencies first to take advantage of Docker caching\nCOPY go.mod ./\nCOPY go.sum ./\nRUN go mod download\n\nCOPY . ./\n\n# Insert version using git tag and latest commit hash\n# Build Go Binary\nRUN set -ex; \\\n    CGO_ENABLED=0 GOOS=linux go build -ldflags=\"-X main.Version=$(git describe --abbrev=0 --tags)-$(git rev-list -1 HEAD) -w -s\" -o ./server ./cmd/go8/main.go;\n\n# Compress binary using upx https://upx.github.io/ and install CA certificates\nRUN apt update && apt install --no-install-recommends -y upx-ucl ca-certificates && rm -rf /var/lib/apt/lists/*;\nRUN upx ./server\n\nFROM scratch\nLABEL com.gmhafiz.maintainers=\"User <author@example.com>\"\n\nWORKDIR /App\n\nCOPY --from=src /etc/ssl/certs/ /etc/ssl/certs/\nCOPY --from=src /go/src/app/server /App/server\n\n# Docker cannot copy hidden .env file. So in Taskfile.yml, we make a copy of it.\nCOPY --from=src /go/src/app/env.prod /App/.env\n\n# Copies the folder containing swagger assets and our openapi specs.\n# Todo: embed the folder using embed tag\nCOPY --from=src /go/src/app/docs /App/docs\n\nEXPOSE 3080\n\nENTRYPOINT [\"/App/server\"]\n"
}