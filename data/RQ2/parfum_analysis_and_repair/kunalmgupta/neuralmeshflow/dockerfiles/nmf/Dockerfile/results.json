{
  "startTime": 1674255250499,
  "endTime": 1674255251595,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 127
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 81,
        "lineEnd": 81,
        "columnStart": 4,
        "columnEnd": 71
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 88,
        "lineEnd": 88,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 55,
        "lineEnd": 57,
        "columnStart": 36,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 55,
        "lineEnd": 57,
        "columnStart": 36,
        "columnEnd": 28
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 62
      }
    }
  ],
  "repairedDockerfile": "########################################################################################################\n\n# This is the Dockerfile used in the work Neural Mesh Flow: : 3D Manifold Mesh Generation via Diffeomorphic Flows\n\n# Author: Kunal Gupta at  UC San Diego\n\n# Mail your queries to k5gupta@ucsd.edu\n\n# This image is built on top of Ubuntu 18.04 and utilizes CUDA 10.1 with CUDNN 7 (from Nvidia-docker)\n\n#########################################################################################################\n\nFROM nvidia/cuda:10.1-cudnn7-devel-ubuntu18.04\n\nRUN apt-get update && yes|apt-get upgrade\nRUN apt-get install --no-install-recommends -y emacs apt-utils && rm -rf /var/lib/apt/lists/*;\nRUN apt-get install --no-install-recommends -y wget pkg-config && rm -rf /var/lib/apt/lists/*;\n\nARG DEBIAN_FRONTEND=noninteractive\n\nENV APT_INTALL=\"apt-get install -y --no-install-recommends\"\n\n# Install some important packages\n\nRUN apt-get update && $APT_INTALL \\\n         build-essential \\\n         cmake \\\n         git \\\n         openssh-client \\\n         curl \\\n         vim-gtk \\\n         tmux \\\n         zip \\\n         unzip \\\n         ca-certificates \\\n         libjpeg-dev \\\n         libopenexr-dev \\\n         libpng-dev \\\n         sudo \\\n         screen\n\n# Install Python 3 and other tools\nENV PIP3I=\"python3 -m pip install  --upgrade \"\n\nRUN $APT_INTALL \\\n    python3 python3-pip python3-dev python3-tk python3-pil.imagetk\nRUN $PIP3I --upgrade pip\nRUN $PIP3I setuptools\nRUN curl -f -L https://github.com/jamesbowman/openexrpython/zipball/f6fb5bc8cb79744029067cdfb16cc3db9f8cca9f/ -o openexrpython.zip && unzip  openexrpython.zip -d openexrpython && rm openexrpython.zip && cd openexrpython && python3 -m  easy_install -U openexr && cd .. && rm -r openexrpython\n\nENV LANG=C.UTF-8 LC_ALL=C.UTF-8\nENV PATH /opt/conda/bin:$PATH\n\n# Install Conda\nRUN mkdir ~/.conda\nRUN apt-get update --fix-missing && apt-get install --no-install-recommends -y wget bzip2 ca-certificates \\\n    libglib2.0-0 libxext6 libsm6 libxrender1 \\\n    git mercurial subversion && rm -rf /var/lib/apt/lists/*;\n\nRUN wget --quiet https://repo.anaconda.com/archive/Anaconda3-2019.07-Linux-x86_64.sh -O ~/anaconda.sh && \\\n    /bin/bash ~/anaconda.sh -b -p /opt/conda && \\\n    rm ~/anaconda.sh && \\\n    ln -s /opt/conda/etc/profile.d/conda.sh /etc/profile.d/conda.sh && \\\n    echo \". /opt/conda/etc/profile.d/conda.sh\" >> ~/.bashrc && \\\n    echo \"conda activate base\" >> ~/.bashrc\n\nENV PATH /opt/conda/bin:$PATH\nEXPOSE 8888\nCMD [ \"/bin/bash\" ]\n\nRUN apt update\nRUN apt --fix-broken install\n\n#Install Pytorch\nRUN conda install -c pytorch pytorch torchvision cudatoolkit=10.1\n\n#Install Trimesh and its dependencies\nRUN conda install -c conda-forge pyembree\nRUN conda install -c conda-forge trimesh seaborn\n\n#Install other immportant libraries i.e. torchdiffeq, torchvision\nRUN pip install --no-cache-dir git+https://github.com/rtqichen/torchdiffeq torchvision\n\n#Install Pytorch3D and fvcore\nRUN conda install --yes -c conda-forge -c fvcore fvcore\nRUN conda install --yes pytorch3d -c pytorch3d-nightly\n\n#Install comet ml\nRUN pip install --no-cache-dir comet_ml\n"
}