diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/leapicard/dginn/docker/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/leapicard/dginn/docker/Dockerfile/repaired.Dockerfile
index 1dbff5d..e12ceac 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/leapicard/dginn/docker/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/leapicard/dginn/docker/Dockerfile/repaired.Dockerfile
@@ -3,11 +3,11 @@ MAINTAINER Lea Picard lea.picard@gmail.com
 
 ENV DEBIAN_FRONTEND noninteractive
 
-RUN apt-get  clean && apt-get update && apt-get install -y apt-utils
+RUN apt-get  clean && apt-get update && apt-get install --no-install-recommends -y apt-utils && rm -rf /var/lib/apt/lists/*;
 
-RUN TZ="Europe/Paris" apt-get -y install tzdata
+RUN TZ="Europe/Paris" apt-get --no-install-recommends -y install tzdata && rm -rf /var/lib/apt/lists/*;
 
-RUN apt-get -y install build-essential \
+RUN apt-get -y --no-install-recommends install build-essential \
 	git \
 	emboss \
 	doxygen \
@@ -17,12 +17,12 @@ RUN apt-get -y install build-essential \
 	libssl-dev \
 	openmpi-bin \
 	libopenmpi-dev \
-        libeigen3-dev
-        
+        libeigen3-dev && rm -rf /var/lib/apt/lists/*;
+
 ## Install most recent version of cMake
 ## RUN git clone https://github.com/Kitware/CMake && cd CMake && ./bootstrap && make && make install
 
-RUN apt-get -y install build-essential cmake
+RUN apt-get -y --no-install-recommends install build-essential cmake && rm -rf /var/lib/apt/lists/*;
 
 
 #################
@@ -39,7 +39,7 @@ FROM base as phyml
 WORKDIR /opt
 
 ##RUN git clone  https://github.com/stephaneguindon/phyml && cd phyml && sh ./autogen.sh && ./configure --enable-phyml && make
-RUN apt-get -y install phyml
+RUN apt-get -y --no-install-recommends install phyml && rm -rf /var/lib/apt/lists/*;
 
 
 #################
@@ -113,7 +113,7 @@ RUN git clone https://github.com/binlu1981/paml && cd paml && cd src && make
 ## Install mafft
 FROM base as mafft
 #No WORKDIR /opt  because not used for apt-get
-RUN apt-get clean  && apt-get update && apt-get install -y mafft
+RUN apt-get clean  && apt-get update && apt-get install --no-install-recommends -y mafft && rm -rf /var/lib/apt/lists/*;
 
 
 ####################
@@ -123,9 +123,9 @@ FROM base
 WORKDIR /opt/
 
 ## Install python3, necessary packages and DGINN
-RUN apt-get install -y python3-pip
+RUN apt-get install --no-install-recommends -y python3-pip && rm -rf /var/lib/apt/lists/*;
 
-RUN pip3 install --upgrade numpy \
+RUN pip3 install --no-cache-dir --upgrade numpy \
 	scipy \
 	pandas \
 	requests \
@@ -134,9 +134,9 @@ RUN pip3 install --upgrade numpy \
 	six \
 	lxml
 
-RUN pip3 install biopython
+RUN pip3 install --no-cache-dir biopython
 
-RUN pip3 install --upgrade ete3
+RUN pip3 install --no-cache-dir --upgrade ete3
 
 RUN git clone https://github.com/lgueguen/DGINN && cd DGINN && chmod +x DGINN.py
 ENV PATH /opt/DGINN/:$PATH
@@ -151,8 +151,8 @@ COPY --from=prank /opt/prank-msa/src/prank /opt/bin/prank
 COPY --from=mafft /usr/bin/mafft /opt/mafft/bin/mafft
 COPY --from=mafft /usr/bin/mafft-homologs /opt/mafft/bin/mafft-homologs
 COPY --from=mafft /usr/bin/mafft-profile /opt/mafft/bin/mafft-profil
-COPY --from=mafft /usr/lib/mafft /usr/lib/mafft   
-# 
+COPY --from=mafft /usr/lib/mafft /usr/lib/mafft  
+#
 ENV PATH /opt/mafft/bin/:/opt/mafft/lib/:$PATH
 #ENV LD_LIBRARY_PATH /opt/local/lib:$LD_LIBRARY_PATH
 # RUN echo $PATH
@@ -171,12 +171,12 @@ COPY --from=biopp  /opt/bpp/bppsuite/bppSuite /opt/bpp/bppsuite/bppSuite
 ENV PATH /opt/bpp/bppsuite/bppSuite/:$PATH
 ENV LD_LIBRARY_PATH /opt/bpp/lib:$LD_LIBRARY_PATH
 
-RUN apt-get install -y hyphy-mpi hyphy-common hyphy-pt
+RUN apt-get install --no-install-recommends -y hyphy-mpi hyphy-common hyphy-pt && rm -rf /var/lib/apt/lists/*;
 RUN echo $PATH
 
 COPY --from=paml /opt/paml/src/codeml /usr/local/bin/
 
-RUN apt-get install -y python3-biopython
+RUN apt-get install --no-install-recommends -y python3-biopython && rm -rf /var/lib/apt/lists/*;
 
 #WORKDIR ~/
 ENTRYPOINT ["DGINN.py"]