{
  "startTime": 1674217358557,
  "endTime": 1674217361724,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 14
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 20,
        "columnEnd": 36
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 18,
        "columnEnd": 34
      }
    }
  ],
  "repairedDockerfile": "# build web\nFROM node:16-alpine AS web-builder\nWORKDIR /web\nCOPY web/package.json web/yarn.lock ./\nRUN yarn install && yarn cache clean;\nCOPY web .\nRUN yarn build && yarn cache clean;\n\n# build app\nFROM golang:1.18-alpine3.16 AS app-builder\n\nARG VERSION=dev\nARG REVISION=dev\nARG BUILDTIME\n\nRUN apk add --no-cache git make build-base\n\nENV SERVICE=autobrr\n\nWORKDIR /src\n\nCOPY go.mod go.sum ./\nRUN go mod download\n\nCOPY . ./\n\nCOPY --from=web-builder /web/build ./web/build\nCOPY --from=web-builder /web/build.go ./web\n\nENV GOOS=linux\nENV CGO_ENABLED=1\n\nRUN go build -ldflags \"-s -w -X main.version=${VERSION} -X main.commit=${REVISION} -X main.date=${BUILDTIME}\" -o bin/autobrr cmd/autobrr/main.go\nRUN go build -ldflags \"-s -w -X main.version=${VERSION} -X main.commit=${REVISION} -X main.date=${BUILDTIME}\" -o bin/autobrrctl cmd/autobrrctl/main.go\n\n# build runner\nFROM alpine:latest\n\nLABEL org.opencontainers.image.source = \"https://github.com/autobrr/autobrr\"\n\nENV HOME=\"/config\" \\\nXDG_CONFIG_HOME=\"/config\" \\\nXDG_DATA_HOME=\"/config\"\n\nRUN apk --no-cache add ca-certificates curl\n\nWORKDIR /app\n\nVOLUME /config\n\nCOPY --from=app-builder /src/bin/autobrr /usr/local/bin/\nCOPY --from=app-builder /src/bin/autobrrctl /usr/local/bin/\n\nENTRYPOINT [\"/usr/local/bin/autobrr\", \"--config\", \"/config\"]\n#CMD [\"--config\", \"/config\"]\n"
}