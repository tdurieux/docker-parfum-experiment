{
  "startTime": 1674252427363,
  "endTime": 1674252428053,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# 前端构建层，构建前端代码，生成静态文件\nFROM node:10 AS build-ui\n\n# 拷贝项目代码\nADD ./ui /root/ui\n# 设置工作目录\nWORKDIR /root/ui\n\n# 安装依赖\nRUN npm config set registry https://registry.npm.taobao.org\nRUN npm install && npm cache clean --force;\n# 构建，生成静态文件\nRUN npm run build\n\n\n\n# 后端构建层，编译后端代码，生成二进制文件\nFROM golang:1.12.10 AS build-api\n\n# 拷贝项目代码\nADD ./api /root/api\n# 设置工作目录\nWORKDIR /root/api\n\n# 安装依赖\nENV GO111MODULE=on\nENV GOPROXY=https://mirrors.aliyun.com/goproxy/\nRUN go mod tidy\n# 编译，生成二进制文件\nRUN CGO_ENABLED=1 GOOS=linux go build --ldflags '-linkmode external -extldflags \"-static -s -w\"' -o cmd/watchman cmd/main.go\n\n# 运行层\nFROM alpine:3.7 AS production\n\n# 维护者\nMAINTAINER ElliotXX <951376975@qq.com>\n\n# gin webserver 环境变量\nENV GIN_MODE=\"release\"\nENV GIN_PORT=8080\n# glog 日志文件默认存放在 $TMPDIR 中\nENV TMPDIR=\"/data\"\n# 容器中支持中文\nENV LANG=C.UTF-8\n# 设置go语言的默认DNS解析方式 纯go\nENV GODEBUG=netdns=go\n\n# 安装必要工具，设置 alpine 的镜像地址为阿里云的地址\nRUN echo \"https://mirrors.aliyun.com/alpine/v3.6/main/\" > /etc/apk/repositories \\\n    && apk update \\\n    && apk add --no-cache bash \\\n    && apk add --no-cache nginx && mkdir -p /run/nginx/ \\\n    && rm -rf /tmp/* /var/cache/apk/*\n\n# 拷贝 nginx 默认配置到容器中\nCOPY default.conf /etc/nginx/conf.d/default.conf\n\n# 拷贝 build-api 层编译后的二进制文件到当前层\nCOPY --from=build-api /root/api/cmd/watchman /usr/bin/watchman\nRUN chmod +x /usr/bin/watchman\n\n# 拷贝 build-ui 层构建后的静态文件目录到当前层\nCOPY --from=build-ui /root/ui/build /usr/share/nginx/html\nEXPOSE 80\n\n# 指定数据卷和当前运行目录\nVOLUME /data\nWORKDIR /data\n\n# 拷贝运行脚本，支持后台运行两个进程\nCOPY run.sh /root/run.sh\n\n# 容器入口，启动容器时运行该命令，且不会被 docker run 提供的命令覆盖\nENTRYPOINT [\"/bin/bash\",\"/root/run.sh\"]\n"
}