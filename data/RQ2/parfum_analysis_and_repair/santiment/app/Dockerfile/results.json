{
  "startTime": 1674253145468,
  "endTime": 1674253146112,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 74,
        "columnEnd": 122
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 5,
        "columnEnd": 49
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# ---- Base Node ----\nFROM node:14.18.1-alpine AS base\nMAINTAINER Yura Zatsepin <yura.z@santiment.net>\n\n# ENV vars\nARG NODE_ENV=production\nENV NODE_ENV=${NODE_ENV}\nARG REACT_APP_BACKEND_URL\nENV REACT_APP_BACKEND_URL=${REACT_APP_BACKEND_URL}\nARG GIT_HEAD\nENV GIT_HEAD=$GIT_HEAD\n# Tini - https://github.com/krallin/tini#why-tini\nRUN apk --no-cache add git tini\nENTRYPOINT [\"/sbin/tini\", \"--\"]\nWORKDIR /opt/san/app\nCOPY . /opt/san/app\n# This still speeds things in general, because npm install\n# from scratch is slow.\n# Only extract if archive file with node_modules not empty\nRUN test -s .node_modules.tar.gz \\\n  && tar xzf .node_modules.tar.gz -C /opt/san/app \\\n  && echo \"Extracted .node_modules.tar.gz to /opt/san/app/node_modules\" \\\n  || true && rm .node_modules.tar.gz\n\n# ---- Deps ----\nFROM base AS deps\n# Install library dependencies\nRUN npm config set depth 0 && npm config set package-lock true\nENV NODE_ENV=development\nRUN if [ \"$CI\" = \"true\" ] ;then npm ci --no-audit --progress=false;else npm i --no-progress --no-audit --prefer-offline; npm cache clean --force; fi\nRUN npx patch-package && npm cache clean --force\n\n# ---- Execution Dev ----\nFROM base AS dev\nENV NODE_ENV=${NODE_ENV}\nCOPY . /opt/san/app\nCOPY --from=deps /opt/san/app/node_modules /opt/san/app/node_modules\nCOPY --from=deps /opt/san/app/package-lock.json /opt/san/app/package-lock.json\n\n# ---- Builder Prod ---\nFROM deps AS builder\nWORKDIR /opt/san/app\nENV NODE_ENV=production\nCOPY --from=deps /opt/san/app/node_modules /opt/san/app/node_modules\nRUN npm run build\n\n# ---- Prod ---\nFROM node:13.12-alpine AS prod\nWORKDIR /opt/san/app\nENV NODE_ENV=production\nARG REACT_APP_BACKEND_URL\nENV REACT_APP_BACKEND_URL=${REACT_APP_BACKEND_URL}\nARG GIT_HEAD\nENV GIT_HEAD=$GIT_HEAD\nCOPY --from=builder /opt/san/app/build /opt/san/app/build\n"
}