{
  "startTime": 1674248143158,
  "endTime": 1674248144215,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 53
      }
    }
  ],
  "repairedDockerfile": "# Copyright (c) Lawrence Livermore National Security, LLC and other Ascent\n# Project developers. See top-level LICENSE AND COPYRIGHT files for dates and\n# other details. No copyright assignment is required to contribute to Ascent.\n\nFROM alpinedav/ascent-ci:ubuntu-18-devel\n\n# nodejs is needed by jupyterlab for widgets\nRUN curl -f -sL https://deb.nodesource.com/setup_12.x | bash -\nRUN apt-get install --no-install-recommends -y nodejs && rm -rf /var/lib/apt/lists/*;\nRUN rm -rf /var/lib/apt/lists/*\n\n# obtain a copy of ascent source from host env,\n# which we use to call uberenv\nCOPY ascent.docker.src.tar.gz /\n# extract\nRUN tar -xzf ascent.docker.src.tar.gz && rm ascent.docker.src.tar.gz\n\n# copy spack build script in\nCOPY docker_uberenv_build.sh /\nRUN  ./docker_uberenv_build.sh\n\n# install jupyter, matplotlib, cinema, etc via pip\nRUN /uberenv_libs/spack/opt/spack/*/*/python*/bin/pip \\\n    install \\\n    --trusted-host pypi.org --trusted-host files.pythonhosted.org \\\n    bash_kernel \\\n    jupyter \\\n    jupyterlab \\\n    matplotlib \\\n    pyyaml \\\n    cinemasci \\\n    scipy \\\n    scikit-learn \\\n    ipympl\n\n# finish jupyter lab setup\nRUN /uberenv_libs/spack/opt/spack/*/*/python*/bin/jupyter \\\n    labextension install @jupyter-widgets/jupyterlab-manager\n\n# configure a debug build with cmake\nRUN cd /ascent && mkdir build\nRUN cd /ascent/build && \\\n    /uberenv_libs/spack/opt/spack/*/*/cmake*/bin/cmake \\\n    -DCMAKE_BUILD_TYPE=Release \\\n    -DCMAKE_INSTALL_PREFIX=/ascent/install \\\n    -DBABELFLOW_DIR=IGNORE \\\n    -DADIOS2_DIR=IGNORE \\\n    -DFIDES_DIR=IGNORE \\\n    -C /uberenv_libs/*.cmake \\\n    ../src\n\n# build, test, and install ascent\nRUN cd /ascent/build && make\nRUN cd /ascent/build && env CTEST_OUTPUT_ON_FAILURE=1 make test\nRUN cd /ascent/build && make install\n\n\n# install ascent bridge kernel into jupyter\nRUN cd /ascent/install/share/ascent/ascent_jupyter_bridge/ && \\\n    /uberenv_libs/spack/opt/spack/*/*/python*/bin/pip \\\n    install \\\n    --trusted-host pypi.org --trusted-host files.pythonhosted.org \\\n    -r requirements.txt\n\nRUN cd /ascent/install/share/ascent/ascent_jupyter_bridge/ && \\\n    /uberenv_libs/spack/opt/spack/*/*/python*/bin/pip \\\n    install \\\n    --trusted-host pypi.org --trusted-host files.pythonhosted.org \\\n    .\n\nRUN chmod a+rwX /*.sh\nRUN chmod -R a+rwX /uberenv_libs\nRUN chmod -R a+rwX /ascent/\n\n# add setup for login\nRUN cp /ascent_docker_setup_env.sh /etc/profile.d/ascent_docker_setup_env.sh\n\n# force the use of a login shell\nRUN /bin/echo -e '#!/bin/bash -l\\n' \\\n                 'exec \"$@\"\\n' \\\n                > /etc/entrypoint.sh && \\\n        chmod a+x /etc/entrypoint.sh\n\nENTRYPOINT [\"/etc/entrypoint.sh\"]\nCMD [\"/bin/bash\"]\n"
}