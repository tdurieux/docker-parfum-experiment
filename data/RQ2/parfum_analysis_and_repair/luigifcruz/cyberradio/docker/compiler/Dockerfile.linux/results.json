{
  "startTime": 1674218699265,
  "endTime": 1674218700827,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 7,
        "columnEnd": 86
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 140,
        "lineEnd": 140,
        "columnStart": 9,
        "columnEnd": 31
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 148,
        "lineEnd": 148,
        "columnStart": 9,
        "columnEnd": 31
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 7,
        "columnEnd": 18
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 131,
        "lineEnd": 131,
        "columnStart": 7,
        "columnEnd": 18
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 7,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 13
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 136,
        "lineEnd": 136,
        "columnStart": 9,
        "columnEnd": 78
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 144,
        "lineEnd": 144,
        "columnStart": 9,
        "columnEnd": 125
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 13
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 136,
        "lineEnd": 136,
        "columnStart": 9,
        "columnEnd": 78
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 144,
        "lineEnd": 144,
        "columnStart": 9,
        "columnEnd": 125
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 13
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 137,
        "lineEnd": 137,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 147,
        "lineEnd": 147,
        "columnStart": 4,
        "columnEnd": 120
      }
    }
  ],
  "repairedDockerfile": "ARG IMAGE\nFROM ${IMAGE}\n\nSHELL [\"/bin/bash\", \"-i\", \"-c\"]\n\nARG PYTHON_VERSION=3.7.5\n\n## Install System Dependencies\nRUN apt-get update\nRUN apt-get install -y --no-install-recommends \\\n        build-essential \\\n        ca-certificates \\\n        curl \\\n        wget \\\n        git \\\n        libbz2-dev \\\n        libreadline-dev \\\n        libsqlite3-dev \\\n        libssl-dev \\\n        zlib1g-dev \\\n        libffi-dev \\\n        libgdbm-dev \\\n        uuid-dev \\\n        upx \\\n        libusb-1.0-0-dev \\\n        gcc \\\n        g++ \\\n        swig \\\n        pkg-config \\\n        libpulse-dev \\\n        libxss1 \\\n        libsamplerate-dev \\\n        libasound2-dev \\\n        libxcb-xinerama0-dev \\\n        cmake && rm -rf /var/lib/apt/lists/*;\n\n## Build System Dependencies\nRUN wget https://www.zlib.net/fossils/zlib-1.2.9.tar.gz \\\n    && tar -xvf zlib-1.2.9.tar.gz \\\n    && cd zlib-1.2.9 \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n    && make -j$(nproc) install \\\n    && cd ./.. && rm zlib-1.2.9.tar.gz\n\n## Install Pyenv\nRUN echo 'export PYENV_ROOT=\"$HOME/.pyenv\"' >> ~/.bashrc \\\n    && echo 'export PATH=\"$PYENV_ROOT/bin:$PATH\"' >> ~/.bashrc \\\n    && source ~/.bashrc \\\n    && curl -f -L https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer | bash \\\n    && echo 'eval \"$(pyenv init -)\"' >> ~/.bashrc \\\n    && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" MAKE_OPTS=\"-j$(nproc)\" pyenv install $PYTHON_VERSION \\\n    && source ~/.bashrc \\\n    && pyenv global $PYTHON_VERSION\n\nRUN git clone https://github.com/Kitware/CMake.git \\\n    && cd CMake \\\n    && mkdir build && cd build \\\n    && cmake .. && make -j$(nproc) install \\\n    && ldconfig \\\n    && cd ./../..\n\n## Install Additional System Dependencies\nRUN pip install --no-cache-dir pip --upgrade\nRUN pip install --no-cache-dir ninja\n\n## Install SoapySDR\nRUN git clone https://github.com/pothosware/SoapySDR.git \\\n    && cd SoapySDR \\\n    && mkdir build && cd build \\\n    && cmake -GNinja -Wno-dev -DPYTHON_INSTALL_DIR=/root/.pyenv/versions/3.7.5/lib/python3.7/site-packages .. && ninja install \\\n    && ldconfig \\\n    && cd ./../..\n\n## Install RTL-SDR SDK\nRUN git clone https://github.com/osmocom/rtl-sdr.git \\\n    && cd rtl-sdr \\\n    && mkdir build && cd build \\\n    && cmake -GNinja -DINSTALL_UDEV_RULES=ON -DDETACH_KERNEL_DRIVER=ON .. && ninja install \\\n    && ldconfig \\\n    && cd ./../..\n\nRUN git clone https://github.com/pothosware/SoapyRTLSDR.git \\\n    && cd SoapyRTLSDR \\\n    && mkdir build && cd build \\\n    && cmake -GNinja .. && ninja install \\\n    && ldconfig \\\n    && cd ./../..\n\n## Install Airspy HF+ SDK\nRUN git clone https://github.com/airspy/airspyhf.git \\\n    && cd airspyhf \\\n    && mkdir build && cd build \\\n    && cmake -GNinja .. && ninja install \\\n    && ldconfig \\\n    && cd ./../..\n\nRUN git clone https://github.com/pothosware/SoapyAirspyHF.git \\\n    && cd SoapyAirspyHF \\\n    && mkdir build && cd build \\\n    && cmake -GNinja .. && ninja install \\\n    && ldconfig \\\n    && cd ./../..\n\n## Install LimeSDR SDK\nRUN git clone https://github.com/myriadrf/LimeSuite.git \\\n    && cd LimeSuite \\\n    && cd build \\\n    && cmake -GNinja .. && ninja install \\\n    && ldconfig \\\n    && cd ./../..\n\n## Install Airspy One SDK\nRUN git clone https://github.com/airspy/airspyone_host.git \\\n    && cd airspyone_host \\\n    && mkdir build && cd build \\\n    && cmake -GNinja .. && ninja install \\\n    && ldconfig \\\n    && cd ./../..\n\nRUN git clone https://github.com/pothosware/SoapyAirspy.git \\\n    && cd SoapyAirspy \\\n    && mkdir build && cd build \\\n    && cmake -GNinja .. && ninja install \\\n    && ldconfig \\\n    && cd ./../..\n\n## Install Latest PortAudio\nRUN git clone https://git.assembla.com/portaudio.git \\\n    && cd portaudio \\\n    && wget https://lists.columbia.edu/pipermail/portaudio/attachments/20190726/10029c93/attachment.bin \\\n    && patch -p1 -ruN -d . < attachment.bin \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make -j$(nproc) install \\\n    && ldconfig \\\n    && cd ./../..\n\nRUN if [ $(uname -m) == \"aarch64\" ]; \\\n    then \\\n    apt-get install -y --no-install-recommends qt5-default python3-pyqt5; rm -rf /var/lib/apt/lists/*; \\\n    fi\n\nRUN if [ $(uname -m) == \"aarch64\" ]; \\\n    then \\\n    pip3 install --no-cache-dir -v pyqt5; \\\n    fi\n\nRUN if [ $(uname -m) == \"aarch64\" ]; \\\n    then \\\n    apt-get install -y --no-install-recommends libblas3 liblapack3 liblapack-dev libblas-dev gfortran libatlas-base-dev; rm -rf /var/lib/apt/lists/*; \\\n    fi\n\nRUN if [ $(uname -m) == \"aarch64\" ]; \\\n    then \\\n    pip3 install --no-cache-dir -v scipy; \\\n    fi\n\nCOPY ./requirements.txt .\nRUN cat requirements.txt | xargs -n 1 -L 1 pip3 install\n\nADD . home\nCOPY ./docker/compiler/generator.sh generator.sh\nENTRYPOINT [\"bash\", \"./generator.sh\"]\n"
}