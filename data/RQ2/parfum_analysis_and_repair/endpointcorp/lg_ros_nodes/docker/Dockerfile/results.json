{
  "startTime": 1674218204907,
  "endTime": 1674218206252,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 8,
        "columnEnd": 106
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 8,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 20,
        "lineEnd": 28,
        "columnStart": 26,
        "columnEnd": 25
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 59,
        "lineEnd": 63,
        "columnStart": 26,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 8,
        "columnEnd": 45
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 8,
        "columnEnd": 45
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 8,
        "columnEnd": 60
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 20,
        "lineEnd": 28,
        "columnStart": 26,
        "columnEnd": 25
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 59,
        "lineEnd": 63,
        "columnStart": 26,
        "columnEnd": 32
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 65
      }
    }
  ],
  "repairedDockerfile": "# Liquid Galaxy\n#\n# VERSION 0.1\n\nARG UBUNTU_RELEASE=bionic\nFROM \tubuntu:${UBUNTU_RELEASE}\n\n# Install basic stuff\nRUN apt-get install --no-install-recommends -y wget curl tmux git && rm -rf /var/lib/apt/lists/*;\n\n# Add deb repos\nRUN \techo \"deb http://packages.ros.org/ros/ubuntu $UBUNTU_RELEASE main\" > /etc/apt/sources.list.d/ros-latest.list ;\\\n      apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 5523BAEEB01FA116 ;\\\n      wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - ;\\\n      echo \"deb http://dl.google.com/linux/chrome/deb/ stable main\" > /etc/apt/sources.list.d/google-chrome.list ;\\\n      wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - ;\\\n      echo \"deb http://dl.google.com/linux/earth/deb/ stable main\" > /etc/apt/sources.list.d/google.list\n\n\n# Stuff for GE and Chrome\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n            x-window-system \\\n            binutils \\\n            mesa-utils \\\n            mesa-utils-extra \\\n            module-init-tools \\\n            gdebi-core \\\n            tar \\\n            libfreeimage3; \\\n        apt-get install -y --no-install-recommends xdg-utils && rm -rf /var/lib/apt/lists/*;\n\n# Nvidia drivers\nADD \tnvidia-driver.run /tmp/nvidia-driver.run\nRUN \tsh /tmp/nvidia-driver.run -a -N --ui=none --no-kernel-module ;\\\n      rm /tmp/nvidia-driver.run\n\n# Install GE\nWORKDIR /tmp\nRUN     wget -q https://dl.google.com/dl/earth/client/current/google-earth-stable_current_amd64.deb ;\\\n        gdebi -n google-earth-stable_current_amd64.deb ;\\\n        rm google-earth-stable_current_amd64.deb\n\n# Patch for google earth from amirpli to fix some bugs in google earth qt libs\n# Without this patch, google earth can suddenly crash without a helpful error message.\n# See https://productforums.google.com/forum/?fromgroups=#!category-topic/earth/linux/_h4t6SpY_II%5B1-25-false%5D\n# and Readme-file https://docs.google.com/file/d/0B2F__nkihfiNMDlaQVoxNVVlaUk/edit?pli=1 for details\n\nRUN mkdir -p /opt/google/earth/free ; \\\n        touch /usr/bin/google-earth ; \\\n        cd /opt/google/earth ; \\\n        cp -a /opt/google/earth/free /opt/google/earth/free.newlibs ; \\\n        wget -q -P /opt/google/earth/free.newlibs \\\n          https://github.com/mviereck/dockerfile-x11docker-google-earth/releases/download/v0.3.0-alpha/ge7.1.1.1580-0.x86_64-new-qt-libs-debian7-ubuntu12.tar.xz ; \\\n        tar xvf /opt/google/earth/free.newlibs/ge7.1.1.1580-0.x86_64-new-qt-libs-debian7-ubuntu12.tar.xz ; rm /opt/google/earth/free.newlibs/ge7.1.1.1580-0.x86_64-new-qt-libs-debian7-ubuntu12.tar.xz \\\n        mv /usr/bin/google-earth /usr/bin/google-earth.old ; \\\n        ln -s /opt/google/earth/free.newlibs/googleearth /usr/bin/google-earth\n\n# Install ROS\nARG ROS_RELEASE=melodic\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n            ros-${ROS_RELEASE}-ros-base \\\n            ros-${ROS_RELEASE}-rosbridge-server \\\n            lsb-core \\\n            google-chrome-stable && rm -rf /var/lib/apt/lists/*;\n\n# add galadmin user\nRUN useradd -ms /bin/bash galadmin\nRUN echo \"galadmin   ALL=NOPASSWD: ALL\" >> /etc/sudoers\n\n# Use bash insted of default sh, to setup\n# ROS evironment variables for nodes building\nRUN     mv /bin/sh /bin/sh.bak && ln -s /bin/bash /bin/sh ;\\\n\t    mkdir -p /home/galadmin/src ;\\\n        echo \"source /opt/ros/${ROS_RELEASE}/setup.bash\" >> /root/.bashrc ;\\\n        echo \"source /opt/ros/${ROS_RELEASE}/setup.bash\" >> /home/galadmin/.bashrc\n\n# Add lg_ros_nodes and appctl repositories\n# Use curent branch for lg_ros_nodes\nWORKDIR /home/galadmin/src\nRUN\t    git clone git://github.com/EndPointCorp/appctl.git\nADD     workspace_copy /home/galadmin/src/lg_ros_nodes\n\nUSER    root\n\n# Build and install ROS nodes\nWORKDIR /home/galadmin/src/lg_ros_nodes\nRUN     source /opt/ros/${ROS_RELEASE}/setup.bash;\\\n        rosdep init;\\\n        rosdep update;\\\n        ./scripts/init_workspace --appctl /home/galadmin/src/appctl ;\\\n        cd /home/galadmin/src/lg_ros_nodes/catkin ;\\\n        sudo rosdep install \\\n            --from-paths /home/galadmin/src/lg_ros_nodes/catkin/src \\\n            --ignore-src \\\n            --rosdistro ${ROS_RELEASE} \\\n            -y ;\\\n        catkin_make ;\\\n        catkin_make -DCMAKE_INSTALL_PREFIX=/opt/ros/${ROS_RELEASE} install;\\\n        source /home/galadmin/src/lg_ros_nodes/catkin/devel/setup.bash\n\n\nWORKDIR /home/galadmin/src/lg_ros_nodes\nENV     DISPLAY :0\n\nADD     image_scripts/shell.sh /home/galadmin/shell.sh\nADD     image_scripts/tmux.conf /etc/tmux.conf\nRUN     sudo chmod +x /home/galadmin/shell.sh\n\nCMD     /bin/bash -c /home/galadmin/shell.sh\n"
}