{
  "startTime": 1674253913165,
  "endTime": 1674253914628,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 155,
        "lineEnd": 155,
        "columnStart": 4,
        "columnEnd": 17
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 160,
        "lineEnd": 160,
        "columnStart": 4,
        "columnEnd": 17
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 165,
        "lineEnd": 165,
        "columnStart": 4,
        "columnEnd": 17
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 175,
        "lineEnd": 175,
        "columnStart": 4,
        "columnEnd": 17
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 185,
        "lineEnd": 185,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 64,
        "columnEnd": 91
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 64,
        "columnEnd": 91
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# This is a version of DockerfileLeanFoundation for ARM\n# Some packages from the AMD image are excluded because they are not available on ARM or take too long to build\n\n# Use base system for cleaning up wayward processes\nFROM phusion/baseimage:focal-1.0.0\n\nMAINTAINER QuantConnect <contact@quantconnect.com>\n\n# Use baseimage-docker's init system.\nCMD [\"/sbin/my_init\"]\n\n# Have to add env TZ=UTC. See https://github.com/dotnet/coreclr/issues/602\nRUN env TZ=UTC\n\n# Install OS Packages:\n# Misc tools for running Python.NET and IB inside a headless container.\nRUN add-apt-repository ppa:ubuntu-toolchain-r/test && apt-get update\nRUN add-apt-repository ppa:apt-fast/stable && apt-get update && apt-get -y --no-install-recommends install apt-fast && rm -rf /var/lib/apt/lists/*;\nRUN apt-get update && apt-fast install -y git libgtk2.0.0 cmake bzip2 curl unzip wget python3-pip python-opengl zlib1g-dev \\\n    xvfb libxrender1 libxtst6 libxi6 libglib2.0-dev libopenmpi-dev libstdc++6 openmpi-bin \\\n    r-base pandoc libcurl4-openssl-dev \\\n    openjdk-8-jdk openjdk-8-jre bbe \\\n    && apt-fast clean && apt-get remove -y apt-fast && apt-get clean && apt-get autoclean && apt-get autoremove --purge -y \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Install IB Gateway: Installs to /root/ibgateway\n# We update the install script so it doesn't use the bundled JVM\n# The bundled JVM doesn't work on ARM64, so we update it to use the JVM installed in the previous command\nRUN mkdir -p /root/ibgateway && \\\n    wget https://cdn.quantconnect.com/interactive/ibgateway-latest-standalone-linux-x64.v10.12.2d.sh && \\\n    java_patch_version=$(java -version 2>&1 | head -n 1 | cut -d'_' -f2 | cut -d'\"' -f1) && \\\n    bbe -e 's|# INSTALL4J_JAVA_HOME_OVERRIDE=|INSTALL4J_JAVA_HOME_OVERRIDE=\"/usr/lib/jvm/java-1.8.0-openjdk-arm64\"|' -e \"s|-lt \\\"152\\\"|-lt \\\"$java_patch_version\\\"|\" -e \"s|-gt \\\"152\\\"|-gt \\\"$java_patch_version\\\"|\" ibgateway-latest-standalone-linux-x64.v10.12.2d.sh > ibgateway-stable-standalone-linux-custom-jvm.sh && \\\n    chmod 777 ibgateway-stable-standalone-linux-custom-jvm.sh && \\\n    ./ibgateway-stable-standalone-linux-custom-jvm.sh -q -dir /root/ibgateway && \\\n    rm ibgateway-latest-standalone-linux-x64.v10.12.2d.sh ibgateway-stable-standalone-linux-custom-jvm.sh\n\n# Install dotnet 5 sdk & runtime\n# The .deb packages don't support ARM, the install script does\nENV PATH=\"/root/.dotnet:${PATH}\"\nRUN wget https://dot.net/v1/dotnet-install.sh && \\\n    chmod 777 dotnet-install.sh && \\\n    ./dotnet-install.sh -c 6.0 && \\\n    rm dotnet-install.sh\nENV DOTNET_ROOT=\"/root/.dotnet\"\n\n# Set PythonDLL variable for PythonNet\nENV PYTHONNET_PYDLL=\"/opt/miniforge3/lib/libpython3.6m.so\"\n\n# Install miniforge\n# miniconda doesn't support ARM, so we use miniforge instead\nENV PATH=\"/opt/miniforge3/bin:${PATH}\"\nRUN wget -O Miniforge3.sh https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-$(uname)-$(uname -m).sh && \\\n    bash Miniforge3.sh -b -p /opt/miniforge3 && \\\n    rm Miniforge3.sh && \\\n    ln -s /opt/miniforge3/lib/libpython3.6m.so /usr/lib/libpython3.6m.so && \\\n    conda config --append channels https://repo.anaconda.com/pkgs/main && \\\n    conda install -y conda=4.10.3 && \\\n    pip install --upgrade --no-cache-dir pip==21.2.2 && \\\n    conda install -y python=3.6.7 && conda install -y pip=21.2.2 && conda clean -y --all\n\n# Avoid pip install read timeouts\nENV PIP_DEFAULT_TIMEOUT=120\n\n# Conda install required so that the packages are not\n# overwritten and have their version invalidated by\n# subsequent calls to conda install\n# Note: we pin the jupyter_server version since newer versions no long support python 3.6\nRUN conda install -y                \\\n    cython=0.29.17                  \\\n    pandas=0.25.3                   \\\n    numpy=1.18.1                    \\\n    wrapt=1.12.1                    \\\n    jupyter_server=1.13.1           \\\n    jupyterlab=3.2.6                \\\n    matplotlib=3.2.1                \\\n    scipy=1.4.1                     \\\n    && conda clean -y --all\n\n# The list of packages in this image is shorter than the list in the AMD images\n# This list only includes packages that can be installed within 2 minutes on ARM\nRUN pip install --no-cache-dir      \\\n    beautifulsoup4==4.9.0           \\\n    dill==0.3.1.1                   \\\n    jsonschema==3.2.0               \\\n    msgpack==1.0.0                  \\\n    setuptools-git==1.2             \\\n    xarray==0.15.1                  \\\n    plotly==4.7.1                   \\\n    docutils==0.14                  \\\n    lightgbm==2.3.0                 \\\n    nltk==3.4.5                     \\\n    graphviz==0.8.4                 \\\n    cmdstanpy==0.4                  \\\n    featuretools==0.14.0            \\\n    PuLP==1.6.8                     \\\n    rauth==0.7.3                    \\\n    scikit-multiflow==0.4.1         \\\n    scikit-optimize==0.7.4          \\\n    Theano==1.0.4                   \\\n    tweepy==3.8.0                   \\\n    PyWavelets==1.1.1               \\\n    nvidia-ml-py3==7.352.0          \\\n    copulalib==1.1.0                \\\n    copulas==0.3.3                  \\\n    cufflinks==0.17.3               \\\n    gym==0.17.2                     \\\n    ipywidgets==7.5.1               \\\n    deap==1.3.1                     \\\n    pykalman==0.9.5                 \\\n    pyro-ppl==1.3.1                 \\\n    sklearn-json==0.1.0             \\\n    statistics==1.0.3.5             \\\n    dtw-python==1.0.5               \\\n    mxnet==1.6                      \\\n    gluonts==0.4.3                  \\\n    gplearn==0.4.1                  \\\n    jax==0.1.68                     \\\n    pennylane==0.9.0                \\\n    neural-tangents==0.2.1          \\\n    mplfinance==0.12.4a0            \\\n    hmmlearn==0.2.3                 \\\n    ppscore==0.0.2                  \\\n    ta==0.5.25                      \\\n    seaborn==0.11.0                 \\\n    optuna==2.3.0                   \\\n    findiff==0.8.5                  \\\n    hyperopt==0.2.5                 \\\n    bayesian-optimization==1.2.0    \\\n    rpy2==3.3.6                     \\\n    sdeint==0.2.1                   \\\n    pandas_market_calendars==1.7    \\\n    ruptures==1.1.3                 \\\n    simpy==4.0.1                    \\\n    scikit-learn-extra==0.2.0\n\n# feature_selector has overly strict dependency version ranges\n# We already installed close-enough versions of all of its dependencies above\n# All features in the usage notebook in https://github.com/Jie-Yuan/FeatureSelector work\nRUN pip install --no-cache-dir --no-dependencies feature_selector==1.0.0\n\nRUN wget -O mlfinlab.zip https://cdn.quantconnect.com/mlfinlab/mlfinlab-0.9.3.zip && \\\n    unzip -q mlfinlab.zip && \\\n    mkdir -p /opt/miniconda3/lib/python3.6/site-packages/ && \\\n    mv mlfinlab /opt/miniconda3/lib/python3.6/site-packages/ && rm mlfinlab.zip\n\nRUN conda install -y -c conda-forge \\\n    openmpi=4.0.3 && conda clean -y --all\n\nRUN python -m nltk.downloader -d /usr/share/nltk_data punkt && \\\n    python -m nltk.downloader -d /usr/share/nltk_data vader_lexicon && \\\n    python -m nltk.downloader -d /usr/share/nltk_data stopwords\n\n# Update ODO\nRUN wget https://cdn.quantconnect.com/odo/odo-master-9fce669.zip && \\\n    unzip -q odo-master-9fce669.zip && cd odo-master && \\\n    pip install --no-cache-dir . && cd .. && rm -rf odo-master && rm odo-master-9fce669.zip\n\n# Install DX Analytics\nRUN wget https://cdn.quantconnect.com/dx/dx-master-4c47c25.zip && \\\n    unzip -q dx-master-4c47c25.zip && cd dx-master && \\\n    pip install --no-cache-dir . && cd .. && rm -rf dx-master && rm dx-master-4c47c25.zip\n\n# Install Auto-KS\nRUN wget https://cdn.quantconnect.com/auto_ks/auto_ks-master-b39e8f3.zip && \\\n    unzip -q auto_ks-master-b39e8f3.zip && cd auto_ks-master && \\\n    pip install --no-cache-dir . && cd .. && rm -rf auto_ks-master && rm auto_ks-master-b39e8f3.zip\n\n# Install py-earth\nRUN wget https://cdn.quantconnect.com/py-earth/py-earth-0.1.0.zip && \\\n    unzip -q py-earth-0.1.0.zip && cd py-earth-0.1.0 && \\\n    python setup.py install && cd .. && rm -rf py-earth-0.1.0 && rm py-earth-0.1.0.zip\n\n# Install fastText\nRUN wget https://cdn.quantconnect.com/fastText/fastText-0.9.2.zip && \\\n    unzip -q fastText-0.9.2.zip && cd fastText-0.9.2 && \\\n    pip install --no-cache-dir . && cd .. && rm -rf fastText-0.9.2 && rm fastText-0.9.2.zip\n\n# Install Tigramite\nRUN wget https://cdn.quantconnect.com/tigramite/tigramite-4.1.zip && \\\n    unzip -q tigramite-4.1.zip && cd tigramite-4.1 && \\\n    python setup.py install && cd .. && rm -rf tigramite-4.1 && rm tigramite-4.1.zip\n\n# Install H2O: https://www.h2o.ai/download/\nRUN wget https://cdn.quantconnect.com/h2o/h2o-3.34.0.7.zip && \\\n    unzip -q h2o-3.34.0.7.zip && \\\n    pip install --no-cache-dir h2o-3.34.0.7-py2.py3-none-any.whl && \\\n    rm h2o-3.34.0.7.zip h2o-3.34.0.7-py2.py3-none-any.whl\n\n# Remove black-listed packages\nRUN pip uninstall -y s3transfer\n\n# List all packages\nRUN conda list\n"
}