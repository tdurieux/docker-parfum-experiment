{
  "startTime": 1674215495673,
  "endTime": 1674215496717,
  "originalSmells": [
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 48
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n#    LEAN Jupyter Docker Container 20190428\n#\n\n# Use base system for cleaning up wayward processes\nARG LEAN_TAG=latest\nFROM quantconnect/lean:$LEAN_TAG\n\nMAINTAINER QuantConnect <contact@quantconnect.com>\n\n# Install Tini\nRUN if [ \"$(uname -m)\" = \"aarch64\" ]; then \\\n        tini_binary=\"tini-arm64\"; \\\n        tini_sha256=\"07952557df20bfd2a95f9bef198b445e006171969499a1d361bd9e6f8e5e0e81\"; \\\n    else \\\n        tini_binary=\"tini-amd64\"; \\\n        tini_sha256=\"93dcc18adc78c65a028a84799ecf8ad40c936fdfc5f2a57b1acda5a8117fa82c\"; \\\n    fi && \\\n    wget --quiet -O tini \"https://github.com/krallin/tini/releases/download/v0.19.0/${tini_binary}\" && \\\n    echo \"${tini_sha256}  *tini\" | sha256sum -c - && \\\n    mv tini /usr/local/bin/tini && \\\n    chmod +x /usr/local/bin/tini\n\n# Install clr-loader for PythonNet\nRUN pip install --no-cache-dir clr-loader==0.1.6\n\nENV LD_LIBRARY_PATH=/lib/\n\n# Install .NET Interactive to support C# in Jupyter notebooks\nENV PATH=\"${PATH}:/root/.dotnet/tools\"\nRUN dotnet tool install -g --no-cache --version 1.0.317502 --add-source \"https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-tools/nuget/v3/index.json\" Microsoft.dotnet-interactive && \\\n    dotnet interactive jupyter install\n\n# Setting some environment variables\nENV WORK /Lean/Launcher/bin/Debug/\nENV PYTHONPATH=${WORK}:${PYTHONPATH}\n\n# Clone Lean; Link Python startup file to profile; Install Lean/PythonToolbox; Remove extra files\nRUN git clone https://github.com/QuantConnect/Lean.git && \\\n    mkdir -p /root/.ipython/profile_default/startup/ && \\\n    ln -s /Lean/Launcher/bin/Debug/start.py /root/.ipython/profile_default/startup/start.py && \\\n    cd Lean/PythonToolbox && python setup.py install \\\n    && cd ../.. && rm -irf Lean\n\nRUN find ${WORK} -type f -not -name '*.py*' -not -name '*.xml' -not -name '*.exe.config' -not -name '*.exe' -not -name '*.so' -not -name '*.dll' -not -name '*.ipynb' -not -name '*.csx' -not -name 'QuantConnect.Lean.Launcher.runtimeconfig.json' -not -name 'decimal.py' -delete\n\n#Create initialize script\nRUN echo \"if [ ! -d \\\"${WORK}Notebooks\\\" ]; then mkdir ${WORK}Notebooks; fi && \\\n    if [ ! -f \\\"${WORK}Notebooks/config.json\\\" ]; then echo '{ \\\"data-folder\\\": \\\"/home/Data/\\\", \\\n    \\\"composer-dll-directory\\\": \\\"$WORK\\\", \\\"algorithm-language\\\": \\\"Python\\\", \\\n    \\\"messaging-handler\\\": \\\"QuantConnect.Messaging.Messaging\\\", \\\"job-queue-handler\\\": \\\"QuantConnect.Queues.JobQueue\\\", \\\n    \\\"api-handler\\\": \\\"QuantConnect.Api.Api\\\" }' > ${WORK}Notebooks/config.json; fi && \\\n    echo \\\"Starting JupyterLab, access in your browser at localhost:8888\\\" && \\\n    jupyter lab --ip='0.0.0.0' --port=8888 --no-browser --allow-root --notebook-dir=\\\"Notebooks\\\" --LabApp.token='' \" \\\n    > start.sh && echo \"from QuantConnect.AlphaStream import *\" >> ${WORK}AlgorithmImports.py\n\nRUN chmod -R 777 ${WORK}\nEXPOSE 8888\nWORKDIR $WORK\n\nENTRYPOINT [ \"/usr/local/bin/tini\", \"--\" ]\nCMD ./start.sh\n"
}