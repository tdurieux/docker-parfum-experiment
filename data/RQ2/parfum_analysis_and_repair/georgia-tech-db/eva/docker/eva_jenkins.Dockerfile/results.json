{
  "startTime": 1674251606309,
  "endTime": 1674251608020,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 7,
        "columnEnd": 24
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 28,
        "columnStart": 7,
        "columnEnd": 12
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# https://www.jenkins.io/doc/book/installing/docker/ - Follow these steps for starting jenkins.\nFROM python:3.8\n\nENV OPENCV_VERSION=\"4.5.1\"\n\n# OpenCV Specific Installation\nRUN apt-get -qq update \\\n    && apt-get -qq install -y --no-install-recommends \\\n        build-essential \\\n        cmake \\\n        git \\\n        wget \\\n        unzip \\\n        yasm \\\n        pkg-config \\\n        ffmpeg \\\n        libsm6 \\\n        libxext6 \\\n        libswscale-dev \\\n        libtbb2 \\\n        libtbb-dev \\\n        libjpeg-dev \\\n        libpng-dev \\\n        libtiff-dev \\\n        libopenjp2-7-dev \\\n        libavformat-dev \\\n        libpq-dev \\\n        python3-dev \\\n        sudo \\\n    && pip install --no-cache-dir numpy \\\n    && wget -q https://github.com/opencv/opencv/archive/${OPENCV_VERSION}.zip -O opencv.zip \\\n    && unzip -qq opencv.zip -d /opt \\\n    && rm -rf opencv.zip \\\n    && cmake \\\n        -D BUILD_TIFF=ON \\\n        -D BUILD_opencv_java=OFF \\\n        -D WITH_CUDA=OFF \\\n        -D WITH_OPENGL=ON \\\n        -D WITH_OPENCL=ON \\\n        -D WITH_IPP=ON \\\n        -D WITH_TBB=ON \\\n        -D WITH_EIGEN=ON \\\n        -D WITH_V4L=ON \\\n        -D BUILD_TESTS=OFF \\\n        -D BUILD_PERF_TESTS=OFF \\\n        -D CMAKE_BUILD_TYPE=RELEASE \\\n        -D CMAKE_INSTALL_PREFIX=$(python3.8 -c \"import sys; print(sys.prefix)\") \\\n        -D PYTHON_EXECUTABLE=$(which python3.8) \\\n        -D PYTHON_INCLUDE_DIR=$(python3.8 -c \"from distutils.sysconfig import get_python_inc; print(get_python_inc())\") \\\n        -D PYTHON_PACKAGES_PATH=$(python3.8 -c \"from distutils.sysconfig import get_python_lib; print(get_python_lib())\") \\\n        /opt/opencv-${OPENCV_VERSION} \\\n    && make -j$(nproc) \\\n    && make install \\\n    && rm -rf /opt/build/* \\\n    && rm -rf /opt/opencv-${OPENCV_VERSION} && rm -rf /var/lib/apt/lists/*;\n\n# Install Java8 (Direct Download) because java-8 is no longer supported\nRUN wget https://download.java.net/openjdk/jdk8u41/ri/openjdk-8u41-b04-linux-x64-14_jan_2020.tar.gz && \\\n    mkdir /opt/jdk-16 && \\\n    tar -zxf openjdk-8u41-b04-linux-x64-14_jan_2020.tar.gz -C /opt/jdk-16 && \\\n    update-alternatives --install /usr/bin/java java /opt/jdk-16/java-se-8u41-ri/bin/java 100 && rm openjdk-8u41-b04-linux-x64-14_jan_2020.tar.gz\n\n# Add Jenkins user, For Spark Authentication (cannot be done without user)\nRUN groupadd --gid 1000 jenkins && \\\n    useradd --uid 1000 --gid jenkins --shell /bin/bash --home-dir /var/jenkins_home jenkins && \\\n    mkdir /var/jenkins_home && \\\n    chown 1000:1000 /var/jenkins_home && \\\n    echo 'jenkins ALL=NOPASSWD: ALL' >> /etc/sudoers.d/50-jenkins && \\\n    echo 'Defaults    env_keep += \"DEBIAN_FRONTEND\"' >> /etc/sudoers.d/env_keep\n\n\n# Give Permission To Home Directory To Create EVA\nRUN mkdir /.eva && chmod -R 777 /.eva\n"
}