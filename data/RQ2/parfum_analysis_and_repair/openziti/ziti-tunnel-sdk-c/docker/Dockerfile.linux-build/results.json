{
  "startTime": 1674220710927,
  "endTime": 1674220711729,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 119
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 29,
        "columnStart": 7,
        "columnEnd": 18
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 119
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 119
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 143
      }
    }
  ],
  "repairedDockerfile": "FROM debian:sid-slim\n#\n# this file mirrors the build params used in the GitHub Actions and enables\n# reproducible builds for downstream forks for Ziti contributors\n#\n# usage\n# docker run with top-level of tunneler SDK repo mounted as writeable volume on /mnt\n\nARG uid=1000\nARG gid=1000\nENV TZ=Etc/UTC\nENV DEBIAN_FRONTEND=noninteractive\nRUN apt-get -y update\n# multi-platform stuff\nRUN apt-get -y --no-install-recommends install gcc-arm-linux-gnueabihf g++-arm-linux-gnueabihf gcc-aarch64-linux-gnu crossbuild-essential-arm64 && rm -rf /var/lib/apt/lists/*;\n# tunneler SDK stuff\nRUN apt-get -y update \\\n    && apt-get -y --no-install-recommends install \\\n        build-essential \\\n        cmake \\\n        curl \\\n        doxygen \\\n        git \\\n        graphviz \\\n        libsystemd-dev \\\n        iproute2 \\\n        pkg-config \\\n        python3 \\\n        zlib1g-dev \\\n        libssl-dev \\\n    && rm -rf /var/lib/apt/lists/*\n\nUSER ${uid}:${gid}\nWORKDIR /mnt/\nENTRYPOINT [\"/mnt/docker/linux-build.sh\"]\n"
}