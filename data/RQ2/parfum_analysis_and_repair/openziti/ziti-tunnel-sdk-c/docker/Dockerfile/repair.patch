diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/openziti/ziti-tunnel-sdk-c/docker/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/openziti/ziti-tunnel-sdk-c/docker/Dockerfile/repaired.Dockerfile
index 73485aa..88898c1 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/openziti/ziti-tunnel-sdk-c/docker/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/openziti/ziti-tunnel-sdk-c/docker/Dockerfile/repaired.Dockerfile
@@ -10,7 +10,7 @@ ARG GITHUB_REPO="ziti-tunnel-sdk-c"
 
 WORKDIR /tmp
 
-RUN apt-get -q update && apt-get -q install -y --no-install-recommends curl ca-certificates unzip
+RUN apt-get -q update && apt-get -q install -y --no-install-recommends curl ca-certificates unzip && rm -rf /var/lib/apt/lists/*;
 # workaround for `openssl rehash` not working on arm.
 RUN /bin/bash -c "if ! compgen -G '/etc/ssl/certs/*.[0-9]' > /dev/null; then c_rehash /etc/ssl/certs; fi"
 
@@ -27,8 +27,8 @@ FROM debian:buster-slim
 
 RUN mkdir -p /usr/local/bin /etc/ssl/certs
 # libsystemd: install the shared object, necessary in conjunction with      --volume "/var/run/dbus/system_bus_socket:/var/run/dbus/system_bus_socket"     to communicate with the host's dbus socket to configure systemd-resolved
-# iproute2: install /sbin/ip, necessary in conjunction with    --device="/dev/net/tun:/dev/net/tun"    to up the tun device, assign routes, and assign source IP 
-RUN apt-get -q update && apt-get -q install -y --no-install-recommends iproute2 libsystemd0
+# iproute2: install /sbin/ip, necessary in conjunction with    --device="/dev/net/tun:/dev/net/tun"    to up the tun device, assign routes, and assign source IP
+RUN apt-get -q update && apt-get -q install -y --no-install-recommends iproute2 libsystemd0 && rm -rf /var/lib/apt/lists/*;
 # Use 32-bit arm binaries on arm64 until we have 64-bit arm builds. This also affects fetch-github-releases.sh.
 RUN /bin/bash -c 'if [[ "$(uname -m)" == "aarch64" ]]; then dpkg --add-architecture armhf; apt update; apt install -y libc6:armhf; fi'
 COPY --from=fetch-ziti-artifacts /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs