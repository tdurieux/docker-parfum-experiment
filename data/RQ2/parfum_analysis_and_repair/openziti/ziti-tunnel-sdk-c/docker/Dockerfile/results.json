{
  "startTime": 1674254153159,
  "endTime": 1674254153912,
  "originalSmells": [
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 25,
        "columnEnd": 97
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 25,
        "columnEnd": 91
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:buster-slim as fetch-ziti-artifacts\n# This build stage grabs artifacts that are copied into the final image.\n# It uses the same base as the final image to maximize docker cache hits.\n\nARG ZITI_VERSION\n\nARG GITHUB_BASE_URL=\"https://github.com/openziti\"\n# to fetch snapshots from the \"feature-0.5\" branch, set ZITI_REPO=\"ziti-snapshot/feature-0.5\"\nARG GITHUB_REPO=\"ziti-tunnel-sdk-c\"\n\nWORKDIR /tmp\n\nRUN apt-get -q update && apt-get -q install -y --no-install-recommends curl ca-certificates unzip && rm -rf /var/lib/apt/lists/*;\n# workaround for `openssl rehash` not working on arm.\nRUN /bin/bash -c \"if ! compgen -G '/etc/ssl/certs/*.[0-9]' > /dev/null; then c_rehash /etc/ssl/certs; fi\"\n\nCOPY fetch-github-releases.sh .\nRUN bash ./fetch-github-releases.sh ziti-edge-tunnel\n\n################\n#\n#  Main Image\n#\n################\n\nFROM debian:buster-slim\n\nRUN mkdir -p /usr/local/bin /etc/ssl/certs\n# libsystemd: install the shared object, necessary in conjunction with      --volume \"/var/run/dbus/system_bus_socket:/var/run/dbus/system_bus_socket\"     to communicate with the host's dbus socket to configure systemd-resolved\n# iproute2: install /sbin/ip, necessary in conjunction with    --device=\"/dev/net/tun:/dev/net/tun\"    to up the tun device, assign routes, and assign source IP\nRUN apt-get -q update && apt-get -q install -y --no-install-recommends iproute2 libsystemd0 && rm -rf /var/lib/apt/lists/*;\n# Use 32-bit arm binaries on arm64 until we have 64-bit arm builds. This also affects fetch-github-releases.sh.\nRUN /bin/bash -c 'if [[ \"$(uname -m)\" == \"aarch64\" ]]; then dpkg --add-architecture armhf; apt update; apt install -y libc6:armhf; fi'\nCOPY --from=fetch-ziti-artifacts /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs\nCOPY --from=fetch-ziti-artifacts /tmp/ziti-edge-tunnel /usr/local/bin\nCOPY ./docker-entrypoint.sh /\nRUN chmod +x /docker-entrypoint.sh\nRUN mkdir -p /ziti-edge-tunnel\n\nENTRYPOINT [ \"/docker-entrypoint.sh\" ]\nCMD [ \"run\" ]\n"
}