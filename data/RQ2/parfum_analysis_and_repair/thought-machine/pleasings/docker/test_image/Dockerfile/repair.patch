diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/thought-machine/pleasings/docker/test_image/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/thought-machine/pleasings/docker/test_image/Dockerfile/repaired.Dockerfile
index b6aaad8..5bf163a 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/thought-machine/pleasings/docker/test_image/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/thought-machine/pleasings/docker/test_image/Dockerfile/repaired.Dockerfile
@@ -3,32 +3,32 @@ MAINTAINER peter.ebden@gmail.com
 
 # OpenFST / Thrax
 WORKDIR /tmp
-RUN curl -sSf http://www.openfst.org/twiki/pub/FST/FstDownload/openfst-1.6.3.tar.gz | tar -xz && \
+RUN curl -sSf https://www.openfst.org/twiki/pub/FST/FstDownload/openfst-1.6.3.tar.gz | tar -xz && \
     cd openfst-1.6.3 && \
-    ./configure --prefix=/usr --enable-static --enable-shared --enable-lookahead-fsts --enable-grm --enable-compact-fsts --enable-const-fsts --enable-far && \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/usr --enable-static --enable-shared --enable-lookahead-fsts --enable-grm --enable-compact-fsts --enable-const-fsts --enable-far && \
     make -j4 && \
     make install && \
     rm -rf /tmp/openfst-1.6.3
 # Note that Thrax installs some things for root:staff, which fails on CircleCI, so we chown
 # them back to root:root again.
-RUN curl -sSf http://www.openfst.org/twiki/pub/GRM/ThraxDownload/thrax-1.2.3.tar.gz | tar -xz && \
+RUN curl -sSf https://www.openfst.org/twiki/pub/GRM/ThraxDownload/thrax-1.2.3.tar.gz | tar -xz && \
     cd thrax-1.2.3 && \
-    ./configure --prefix=/usr --enable-static --enable-shared && \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/usr --enable-static --enable-shared && \
     make -j4 && \
     make install && \
     rm -rf /tmp/thrax-1.2.3 && \
     chown -R root:root /usr/share /usr/bin
 
 # Node (for js / yarn)
-RUN curl -sSL https://deb.nodesource.com/setup_6.x | bash -
-RUN apt-get install -y nodejs
+RUN curl -f -sSL https://deb.nodesource.com/setup_6.x | bash -
+RUN apt-get install --no-install-recommends -y nodejs && rm -rf /var/lib/apt/lists/*;
 
 # Android
 ENV ANDROID_HOME "/opt/android"
 ENV ANDROID_NDK_HOME "/opt/android/ndk-bundle"
 ENV PATH "$PATH:${ANDROID_HOME}/tools:${ANDROID_HOME}/platform-tools:${ANDROID_NDK_HOME}/"
 RUN apt-get -qq update && \
-    apt-get install -qqy --no-install-recommends libc6-i386 lib32stdc++6 lib32gcc1 lib32ncurses5 lib32z1
+    apt-get install -qqy --no-install-recommends libc6-i386 lib32stdc++6 lib32gcc1 lib32ncurses5 lib32z1 && rm -rf /var/lib/apt/lists/*;
 RUN curl https://dl.google.com/android/repository/sdk-tools-linux-3859397.zip -fsSLo /tmp/tools.zip \
     && unzip /tmp/tools.zip -d $ANDROID_HOME && \
     rm /tmp/tools.zip
@@ -50,10 +50,10 @@ RUN curl -fsSLo /usr/local/bin/grpc_python_plugin https://get.please.build/third
 RUN curl -fsSL https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \
     echo "deb http://apt.llvm.org/xenial/ llvm-toolchain-xenial main" > /etc/apt/sources.list.d/llvm.list && \
     apt-get update && \
-    apt-get install -y clang-6.0
+    apt-get install --no-install-recommends -y clang-6.0 && rm -rf /var/lib/apt/lists/*;
 
 # pip (python deps)
-RUN apt-get install -y python3-pip
+RUN apt-get install --no-install-recommends -y python3-pip && rm -rf /var/lib/apt/lists/*;
 
 # nim dependency
-RUN apt-get install nim
+RUN apt-get install -y --no-install-recommends nim && rm -rf /var/lib/apt/lists/*;