{
  "startTime": 1674249913703,
  "endTime": 1674249914828,
  "originalSmells": [
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 22,
        "columnStart": 22,
        "columnEnd": 20
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Use -complete to get both rocm and rocfft\nARG BASE=rocm/dev-ubuntu-20.04:4.5-complete\nFROM $BASE\n\nARG NPROCS=4\n\nRUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y \\\n        build-essential \\\n        bc \\\n        file \\\n        curl \\\n        git \\\n        kmod \\\n        wget \\\n        jq \\\n        vim \\\n        gdb \\\n        ccache \\\n        libbz2-dev \\\n        libicu-dev \\\n        python-dev \\\n        autotools-dev \\\n        libgtest-dev \\\n        && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/*\n\nENV PATH=/opt/rocm/bin:$PATH\n\nRUN KEYDUMP_URL=https://cloud.cees.ornl.gov/download && \\\n    KEYDUMP_FILE=keydump && \\\n    wget --quiet ${KEYDUMP_URL}/${KEYDUMP_FILE} && \\\n    wget --quiet ${KEYDUMP_URL}/${KEYDUMP_FILE}.sig && \\\n    gpg --batch --import ${KEYDUMP_FILE} && \\\n    gpg --batch --verify ${KEYDUMP_FILE}.sig ${KEYDUMP_FILE} && \\\n    rm ${KEYDUMP_FILE}*\n\n# Install CMake\nENV CMAKE_DIR=/opt/cmake\nRUN CMAKE_VERSION=3.16.9 && \\\n    CMAKE_KEY=2D2CEF1034921684 && \\\n    CMAKE_URL=https://github.com/Kitware/CMake/releases/download/v${CMAKE_VERSION} && \\\n    CMAKE_SCRIPT=cmake-${CMAKE_VERSION}-Linux-x86_64.sh && \\\n    CMAKE_SHA256=cmake-${CMAKE_VERSION}-SHA-256.txt && \\\n    wget --quiet ${CMAKE_URL}/${CMAKE_SHA256} && \\\n    wget --quiet ${CMAKE_URL}/${CMAKE_SHA256}.asc && \\\n    wget --quiet ${CMAKE_URL}/${CMAKE_SCRIPT} && \\\n    gpg --batch --verify ${CMAKE_SHA256}.asc ${CMAKE_SHA256} && \\\n    grep ${CMAKE_SCRIPT} ${CMAKE_SHA256} | sha256sum --check && \\\n    mkdir -p ${CMAKE_DIR} && \\\n    sh ${CMAKE_SCRIPT} --skip-license --prefix=${CMAKE_DIR} && \\\n    rm ${CMAKE_SCRIPT}\nENV PATH=${CMAKE_DIR}/bin:$PATH\n\n# Install Open MPI\nENV OPENMPI_DIR=/opt/openmpi\nRUN OPENMPI_VERSION=4.0.4 && \\\n    OPENMPI_VERSION_SHORT=4.0 && \\\n    OPENMPI_SHA1=50861c22a4b92ca2e069cd49d756dd96c659bfa8 && \\\n    OPENMPI_URL=https://download.open-mpi.org/release/open-mpi/v${OPENMPI_VERSION_SHORT}/openmpi-${OPENMPI_VERSION}.tar.bz2 && \\\n    OPENMPI_ARCHIVE=openmpi-${OPENMPI_VERSION}.tar.bz2 && \\\n    SCRATCH_DIR=/scratch && mkdir -p ${SCRATCH_DIR} && cd ${SCRATCH_DIR} && \\\n    wget --quiet ${OPENMPI_URL} --output-document=${OPENMPI_ARCHIVE} && \\\n    echo \"${OPENMPI_SHA1} ${OPENMPI_ARCHIVE}\" | sha1sum -c && \\\n    mkdir -p openmpi && \\\n    tar -xf ${OPENMPI_ARCHIVE} -C openmpi --strip-components=1 && \\\n    mkdir -p build && cd build && \\\n    ../openmpi/configure --prefix=${OPENMPI_DIR} CFLAGS=-w && \\\n    make -j${NPROCS} install && \\\n    rm -rf ${SCRATCH_DIR}\nENV PATH=${OPENMPI_DIR}/bin:$PATH\n\n# Install Kokkos\nARG KOKKOS_VERSION=3.4.00\nARG KOKKOS_OPTIONS=\"-DKokkos_ENABLE_HIP=ON -DKokkos_ENABLE_LIBDL=OFF -DKokkos_ARCH_VEGA906=ON\"\nENV KOKKOS_DIR=/opt/kokkos\nRUN KOKKOS_URL=https://github.com/kokkos/kokkos/archive/${KOKKOS_VERSION}.tar.gz && \\\n    KOKKOS_ARCHIVE=kokkos-${KOKKOS_HASH}.tar.gz && \\\n    SCRATCH_DIR=/scratch && mkdir -p ${SCRATCH_DIR} && cd ${SCRATCH_DIR} && \\\n    wget --quiet ${KOKKOS_URL} --output-document=${KOKKOS_ARCHIVE} && \\\n    mkdir -p kokkos && \\\n    tar -xf ${KOKKOS_ARCHIVE} -C kokkos --strip-components=1 && \\\n    cd kokkos && \\\n    mkdir -p build && cd build && \\\n    cmake -D CMAKE_BUILD_TYPE=Release -D CMAKE_INSTALL_PREFIX=${KOKKOS_DIR} -D CMAKE_CXX_STANDARD=14 -D CMAKE_CXX_COMPILER=hipcc ${KOKKOS_OPTIONS} .. && \\\n    make -j${NPROCS} install && \\\n    rm -rf ${SCRATCH_DIR}\n\n# Install ArborX\nENV ARBORX_DIR=/opt/arborx\nRUN ARBORX_VERSION=4834bff44c23c9510c6ed93366638dcdf85ab217 && \\\n    ARBORX_URL=https://github.com/arborx/ArborX/archive/${ARBORX_VERSION}.tar.gz && \\\n    ARBORX_ARCHIVE=arborx.tar.gz && \\\n    wget --quiet ${ARBORX_URL} --output-document=${ARBORX_ARCHIVE} && \\\n    mkdir arborx && \\\n    tar -xf ${ARBORX_ARCHIVE} -C arborx --strip-components=1 && \\\n    cd arborx && \\\n    mkdir -p build && cd build && \\\n    cmake \\\n      -D CMAKE_INSTALL_PREFIX=${ARBORX_DIR} \\\n      -D CMAKE_BUILD_TYPE=Debug \\\n      -D CMAKE_CXX_COMPILER=hipcc \\\n      -D CMAKE_CXX_FLAGS=-amdgpu-target=gfx906 \\\n      -D CMAKE_CXX_EXTENSIONS=OFF \\\n      -D CMAKE_PREFIX_PATH=${KOKKOS_DIR} \\\n    .. && \\\n    make -j${NPROCS} install && \\\n    cd ../.. && rm -r arborx\n\n# Install fftw (double and single)\nARG FFTW_VERSION=3.3.8\nENV FFTW_DIR=/opt/fftw\nRUN FFTW_URL=http://www.fftw.org/fftw-${FFTW_VERSION}.tar.gz && \\\n    FFTW_ARCHIVE=fftw.tar.gz && \\\n    SCRATCH_DIR=/scratch && mkdir -p ${SCRATCH_DIR} && cd ${SCRATCH_DIR} && \\\n    wget --quiet ${FFTW_URL} --output-document=${FFTW_ARCHIVE} && \\\n    mkdir -p fftw && \\\n    tar -xf ${FFTW_ARCHIVE} -C fftw --strip-components=1 && \\\n    cd fftw && \\\n    mkdir -p build && cd build && \\\n    cmake \\\n      -D CMAKE_INSTALL_PREFIX=${FFTW_DIR} \\\n      -D CMAKE_BUILD_TYPE=Debug \\\n      -D ENABLE_FLOAT=ON \\\n    .. && \\\n    make -j${NPROCS} install && \\\n    cmake \\\n      -D CMAKE_INSTALL_PREFIX=${FFTW_DIR} \\\n      -D CMAKE_BUILD_TYPE=Debug \\\n      -D ENABLE_FLOAT=OFF \\\n    .. && \\\n    make -j${NPROCS} install && \\\n    rm -rf ${SCRATCH_DIR}\n\n# Install heffte\nARG HEFFTE_VERSION=2.1.0\nENV HEFFTE_DIR=/opt/heffte\nRUN HEFFTE_URL=https://bitbucket.org/icl/heffte/get/v${HEFFTE_VERSION}.tar.gz && \\\n    HEFFTE_ARCHIVE=heffte.tar.gz && \\\n    SCRATCH_DIR=/scratch && mkdir -p ${SCRATCH_DIR} && cd ${SCRATCH_DIR} && \\\n    wget --quiet ${HEFFTE_URL} --output-document=${HEFFTE_ARCHIVE} && \\\n    mkdir -p heffte && \\\n    tar -xf ${HEFFTE_ARCHIVE} -C heffte --strip-components=1 && \\\n    cd heffte && \\\n    mkdir -p build && cd build && \\\n    cmake \\\n      -D CMAKE_INSTALL_PREFIX=${HEFFTE_DIR} \\\n      -D CMAKE_PREFIX_PATH=\"${FFTW_DIR}\" \\\n      -D CMAKE_BUILD_TYPE=Debug \\\n      -D CMAKE_CXX_COMPILER=hipcc \\\n      -D CMAKE_CXX_STANDARD=14 \\\n      -D CMAKE_CXX_FLAGS=\"--amdgpu-target=gfx906\" \\\n      -D Heffte_ENABLE_ROCM=ON \\\n      -D Heffte_ENABLE_FFTW=ON \\\n    .. && \\\n    make -j${NPROCS} install && \\\n    rm -rf ${SCRATCH_DIR}\n"
}