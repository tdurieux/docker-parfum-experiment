{
  "startTime": 1674249046461,
  "endTime": 1674249047115,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 4,
        "columnEnd": 87
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 7,
        "columnEnd": 43
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 7,
        "columnEnd": 37
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 7,
        "columnEnd": 30
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.8-slim\nMAINTAINER JumpServer Team <ibuler@qq.com>\n\nARG BUILD_DEPENDENCIES=\"              \\\n    g++                               \\\n    make                              \\\n    pkg-config\"\n\nARG DEPENDENCIES=\"                    \\\n    default-libmysqlclient-dev        \\\n    freetds-dev                       \\\n    libpq-dev                         \\\n    libffi-dev                        \\\n    libldap2-dev                      \\\n    libsasl2-dev                      \\\n    libxml2-dev                       \\\n    libxmlsec1-dev                    \\\n    libxmlsec1-openssl                \\\n    libaio-dev                        \\\n    sshpass\"\n\nARG TOOLS=\"                           \\\n    curl                              \\\n    default-mysql-client              \\\n    iproute2                          \\\n    iputils-ping                      \\\n    locales                           \\\n    procps                            \\\n    redis-tools                       \\\n    telnet                            \\\n    vim                               \\\n    unzip                               \\\n    wget\"\n\nRUN sed -i 's/deb.debian.org/mirrors.aliyun.com/g' /etc/apt/sources.list \\\n    && sed -i 's/security.debian.org/mirrors.aliyun.com/g' /etc/apt/sources.list \\\n    && apt update && sleep 1 && apt update \\\n    && apt -y --no-install-recommends install ${BUILD_DEPENDENCIES} \\\n    && apt -y --no-install-recommends install ${DEPENDENCIES} \\\n    && apt -y --no-install-recommends install ${TOOLS} \\\n    && localedef -c -f UTF-8 -i zh_CN zh_CN.UTF-8 \\\n    && cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime \\\n    && mkdir -p /root/.ssh/ \\\n    && echo \"Host *\\n\\tStrictHostKeyChecking no\\n\\tUserKnownHostsFile /dev/null\" > /root/.ssh/config \\\n    && sed -i \"s@# alias l@alias l@g\" ~/.bashrc \\\n    && echo \"set mouse-=a\" > ~/.vimrc \\\n    && rm -rf /var/lib/apt/lists/* \\\n    && mv /bin/sh /bin/sh.bak \\\n    && ln -s /bin/bash /bin/sh\n\nARG TARGETARCH\nARG ORACLE_LIB_MAJOR=19\nARG ORACLE_LIB_MINOR=10\nENV ORACLE_FILE=\"instantclient-basiclite-linux.${TARGETARCH:-amd64}-${ORACLE_LIB_MAJOR}.${ORACLE_LIB_MINOR}.0.0.0dbru.zip\"\n\nRUN mkdir -p /opt/oracle/ \\\n    && cd /opt/oracle/ \\\n    && wget https://download.jumpserver.org/files/oracle/${ORACLE_FILE} \\\n    && unzip instantclient-basiclite-linux.${TARGETARCH-amd64}-19.10.0.0.0dbru.zip \\\n    && mv instantclient_${ORACLE_LIB_MAJOR}_${ORACLE_LIB_MINOR} instantclient \\\n    && echo \"/opt/oracle/instantclient\" > /etc/ld.so.conf.d/oracle-instantclient.conf \\\n    && ldconfig \\\n    && rm -f ${ORACLE_FILE}\n\nWORKDIR /tmp/build\nCOPY ./requirements ./requirements\n\nARG PIP_MIRROR=https://mirrors.aliyun.com/pypi/simple/\nENV PIP_MIRROR=$PIP_MIRROR\nARG PIP_JMS_MIRROR=https://mirrors.aliyun.com/pypi/simple/\nENV PIP_JMS_MIRROR=$PIP_JMS_MIRROR\n# 因为以 jms 或者 jumpserver 开头的 mirror 上可能没有\nRUN pip install --no-cache-dir --upgrade pip==20.2.4 setuptools==49.6.0 wheel==0.34.2 -i ${PIP_MIRROR} \\\n    && pip install --no-cache-dir $(grep -E 'jms|jumpserver' requirements/requirements.txt) -i ${PIP_JMS_MIRROR} \\\n    && pip install --no-cache-dir -r requirements/requirements.txt -i ${PIP_MIRROR} \\\n    && rm -rf ~/.cache/pip\n\nARG VERSION\nENV VERSION=$VERSION\n\nADD . .\nRUN cd utils \\\n    && bash -ixeu build.sh \\\n    && mv ../release/jumpserver /opt/jumpserver \\\n    && rm -rf /tmp/build \\\n    && echo > /opt/jumpserver/config.yml\n\nWORKDIR /opt/jumpserver\nVOLUME /opt/jumpserver/data\nVOLUME /opt/jumpserver/logs\n\nENV LANG=zh_CN.UTF-8\n\nEXPOSE 8070\nEXPOSE 8080\nENTRYPOINT [\"./entrypoint.sh\"]\n"
}