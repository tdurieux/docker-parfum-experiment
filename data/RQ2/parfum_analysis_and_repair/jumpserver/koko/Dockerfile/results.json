{
  "startTime": 1674249687770,
  "endTime": 1674249688568,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 22,
        "columnEnd": 36
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 7,
        "columnEnd": 98
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 7,
        "columnEnd": 29
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 7,
        "columnEnd": 26
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 7,
        "columnEnd": 37
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 7,
        "columnEnd": 33
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 7,
        "columnEnd": 18
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:10 as ui-build\nARG NPM_REGISTRY=\"https://registry.npmmirror.com\"\nENV NPM_REGISTY=$NPM_REGISTRY\n\nWORKDIR /opt/koko\nRUN npm config set registry ${NPM_REGISTRY}\nRUN yarn config set registry ${NPM_REGISTRY} && yarn cache clean;\n\nCOPY ui  ui/\nRUN ls . && cd ui/ && npm install -i && yarn build && ls -al . && npm cache clean --force;\n\nFROM golang:1.17-alpine as stage-build\nLABEL stage=stage-build\nWORKDIR /opt/koko\n\nRUN sed -i 's/dl-cdn.alpinelinux.org/mirrors.aliyun.com/g' /etc/apk/repositories \\\n    && apk update \\\n    && apk add --no-cache git\n\nARG GOPROXY=https://goproxy.io\nARG TARGETARCH\nENV TARGETARCH=$TARGETARCH\nENV GO111MODULE=on\nENV GOOS=linux\n\nRUN wget https://download.jumpserver.org/public/kubectl-linux-${TARGETARCH}.tar.gz -O kubectl.tar.gz \\\n    && tar -xf kubectl.tar.gz \\\n    && chmod +x kubectl \\\n    && mv kubectl rawkubectl \\\n    && wget https://download.jumpserver.org/public/helm-v3.9.0-linux-${TARGETARCH}.tar.gz -O helm.tar.gz \\\n    && tar -xf helm.tar.gz \\\n    && chmod +x linux-${TARGETARCH}/helm \\\n    && mv linux-${TARGETARCH}/helm rawhelm \\\n    && wget https://download.jumpserver.org/public/kubectl_aliases.tar.gz -O kubectl_aliases.tar.gz \\\n    && tar -xf kubectl_aliases.tar.gz && rm kubectl.tar.gz\n\nCOPY go.mod go.sum ./\nRUN go mod download -x\nCOPY . .\nARG VERSION=Unknown\nENV VERSION=$VERSION\nRUN cd utils && sh -ixeu build.sh\n\nFROM debian:bullseye-slim\nENV LANG en_US.utf8\nRUN sed -i 's/deb.debian.org/mirrors.aliyun.com/g' /etc/apt/sources.list \\\n    && sed -i 's/security.debian.org/mirrors.aliyun.com/g' /etc/apt/sources.list \\\n    && apt update \\\n    && apt-get install --no-install-recommends -y locales \\\n    && localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8 \\\n    && apt-get install -y --no-install-recommends openssh-client procps curl gdb ca-certificates jq iproute2 less bash-completion unzip sysstat acl net-tools iputils-ping telnet dnsutils wget vim git freetds-bin mariadb-client redis-tools postgresql-client gnupg \\\n    && wget -qO - https://www.mongodb.org/static/pgp/server-5.0.asc | apt-key add - \\\n    && echo \"deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu bionic/mongodb-org/5.0 multiverse\" | tee /etc/apt/sources.list.d/mongodb-org-5.0.list \\\n    && apt update \\\n    && apt-get install -y --no-install-recommends mongodb-mongosh \\\n    && rm -rf /var/lib/apt/lists/*\n\nENV TZ Asia/Shanghai\nWORKDIR /opt/koko/\nCOPY --from=stage-build /opt/koko/release/koko /opt/koko\nCOPY --from=stage-build /opt/koko/release/koko/kubectl /usr/local/bin/kubectl\nCOPY --from=stage-build /opt/koko/release/koko/helm /usr/local/bin/helm\nCOPY --from=stage-build /opt/koko/rawkubectl /usr/local/bin/rawkubectl\nCOPY --from=stage-build /opt/koko/rawhelm /usr/local/bin/rawhelm\nCOPY --from=stage-build /opt/koko/utils/coredump.sh .\nCOPY --from=stage-build /opt/koko/entrypoint.sh .\nCOPY --from=stage-build /opt/koko/utils/init-kubectl.sh .\nCOPY --from=stage-build /opt/koko/.kubectl_aliases /opt/kubectl-aliases/.kubectl_aliases\nCOPY --from=ui-build /opt/koko/ui/dist ui/dist\n\nRUN chmod 755 entrypoint.sh && chmod 755 init-kubectl.sh\n\nEXPOSE 2222 5000\nCMD [\"./entrypoint.sh\"]\n"
}