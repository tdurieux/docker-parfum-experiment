{
  "startTime": 1674218873558,
  "endTime": 1674218876863,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 14
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 20,
        "columnEnd": 36
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 18,
        "columnEnd": 34
      }
    }
  ],
  "repairedDockerfile": "FROM node:16-buster-slim\n\n# Create app directory\nWORKDIR /usr/src/app\n\n# Install Dependencies\nRUN apt-get update && \\\r\n\tapt-get upgrade -y --no-install-recommends && \\\r\n\tapt-get install -y --no-install-recommends build-essential git python3 libfontconfig1 dumb-init && \\\r\n\tapt-get clean && \\\r\n\trm -rf /var/lib/apt/lists/*\n\n# Fetch dependencies\nCOPY yarn.lock .\nCOPY package.json .\nCOPY services/backend/package.json services/backend/package.json\nRUN yarn install && yarn cache clean;\n\n# Compile\nCOPY tsconfig.base.json tsconfig.base.json\nCOPY services/backend/ services/backend/\nCOPY .git/ .git/\n\n# Go into backend dir\nWORKDIR /usr/src/app/services/backend\nRUN yarn build && yarn cache clean;\n\n# Production mode\nENV NODE_ENV=\"production\"\n\n# Entrypoint\nCMD [ \"yarn\", \"start:withdbupdate\" ]"
}