{
  "startTime": 1674220257593,
  "endTime": 1674220259459,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 103
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 40,
        "columnEnd": 65
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 41,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 11,
        "columnStart": 22,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 22,
        "columnEnd": 78
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 22,
        "columnEnd": 78
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM --platform=linux/amd64 nvidia/cuda:11.3.0-cudnn8-runtime-ubuntu20.04\n\n# modified from here\n# https://github.com/anibali/docker-pytorch/blob/master/dockerfiles/1.10.0-cuda11.3-ubuntu20.04/Dockerfile\n# Install some basic utilities\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    curl \\\n    ca-certificates \\\n    sudo \\\n    git \\\n    bzip2 \\\n    libx11-6 \\\n    && rm -rf /var/lib/apt/lists/*\n\n# don't ask for location etc user input when building\n# this is for opencv, apparently\nRUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y ffmpeg && rm -rf /var/lib/apt/lists/*;\n\n# Create a working directory and data directory\nRUN mkdir /app\nWORKDIR /app\n\n# Set up the Conda environment\nENV CONDA_AUTO_UPDATE_CONDA=false \\\n    PATH=/opt/miniconda/bin:$PATH\n\n# install miniconda\nRUN curl -f -sLo ~/miniconda.sh https://repo.continuum.io/miniconda/Miniconda3-py39_4.10.3-Linux-x86_64.sh \\\n    && chmod +x ~/miniconda.sh \\\n    && ~/miniconda.sh -b -p /opt/miniconda \\\n    && rm ~/miniconda.sh \\\n    && conda update conda\n\n# install\nRUN conda install python=3.7 -y\nRUN pip install --no-cache-dir setuptools --upgrade && pip install --no-cache-dir --upgrade pip\nRUN conda install pytorch torchvision torchaudio cudatoolkit=11.3 -c pytorch\n\n# RUN pip install  \\\n#         vidio\n\nRUN pip install --no-cache-dir \"chardet<4.0\" h5py kornia >=0.5 matplotlib numpy omegaconf >=2 \"pandas<1.4\" \\\n    \"scikit-learn<1.1\" \"scipy<1.8\" tqdm pytorch_lightning >=1.5.10 opencv-python-headless vidio >=0.0.4 pytest \\\n    opencv-transforms\n\n# # needed for pandas for some reason\nADD . /app/deepethogram\nWORKDIR /app/deepethogram\nENV DEG_VERSION='headless'\nRUN pip install --no-cache-dir -e . --no-dependencies"
}