{
  "startTime": 1674218490233,
  "endTime": 1674218491585,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 38
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 62
      }
    }
  ],
  "repairedDockerfile": "FROM --platform=${BUILDPLATFORM} docker.io/library/golang:1.18.3 as builder\n\nARG LDFLAGS\n\nWORKDIR /build\n\n# Copy the Go Modules manifests\nCOPY go.mod go.mod\nCOPY go.sum go.sum\n# cache deps before building and copying source so that we don't need to re-download as much\n# and so that source changes don't invalidate our downloaded layer\nRUN go mod download\n\nCOPY cmd/ cmd/\nCOPY *.go ./\n\nARG TARGETOS\nARG TARGETARCH\n\nENV CGO_ENABLED=0\nENV GO111MODULE=on\nENV GOARCH=$TARGETARCH\nENV GOOS=$TARGETOS\n\nRUN go build -ldflags \"${LDFLAGS}\" -o coredns cmd/coredns.go\n\nFROM debian:stable-slim\n\nRUN apt-get update && apt-get -uy upgrade\nRUN apt-get -y --no-install-recommends install ca-certificates && update-ca-certificates && rm -rf /var/lib/apt/lists/*;\n\nFROM scratch\n\nCOPY --from=0 /etc/ssl/certs /etc/ssl/certs\nCOPY --from=builder /build/coredns .\n\nEXPOSE 53 53/udp\nENTRYPOINT [\"/coredns\"]\n"
}