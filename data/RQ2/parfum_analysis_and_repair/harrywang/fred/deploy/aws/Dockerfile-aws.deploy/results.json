{
  "startTime": 1674221202350,
  "endTime": 1674221202944,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 4,
        "columnEnd": 35
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# This is for aws deployment\n###########\n# BUILDER #\n###########\n\n# base image\nFROM node:13.10.1-alpine as builder-react\n\n# set working directory\nWORKDIR /usr/src/app\n\n# add `/usr/src/app/node_modules/.bin` to $PATH\nENV PATH /usr/src/app/node_modules/.bin:$PATH\n\n# install and cache app dependencies\nCOPY ./services/frontend/package*.json ./\nRUN npm ci\nRUN npm install react-scripts@3.4.0 -g --silent && npm cache clean --force;\n\n\n# set environment variables\nARG REACT_APP_BACKEND_SERVICE_URL\nENV REACT_APP_BACKEND_SERVICE_URL $REACT_APP_BACKEND_SERVICE_URL\nARG NODE_ENV\nENV NODE_ENV=production\n\n# create build\nCOPY ./services/frontend/ /usr/src/app\nRUN npm run build\n\n#########\n# FINAL #\n#########\n\n# base image\nFROM nginx:1.17.9-alpine\n\n#############Backend#############\n# set working directory\nWORKDIR /usr/src/app\n\n# set environment variables\nENV PYTHONDONTWRITEBYTECODE 1\nENV PYTHONUNBUFFERED 1\nENV FLASK_ENV=production\nENV APP_SETTINGS=app.config.ProductionConfig\n\n# install python, postgresql, etc.\nRUN apk update && \\\n    apk add --no-cache --virtual build-deps \\\n    openssl-dev libffi-dev gcc python3-dev musl-dev \\\n    postgresql-dev netcat-openbsd\n\n# ensure pip3 working\nRUN python3 -m ensurepip && \\\n    rm -r /usr/lib/python*/ensurepip && \\\n    pip3 install --no-cache-dir --upgrade pip setuptools && \\\n    if [ ! -e /usr/bin/pip ]; then ln -s pip3 /usr/bin/pip ; fi && \\\n    if [[ ! -e /usr/bin/python ]]; then ln -sf /usr/bin/python3 /usr/bin/python; fi && \\\n    rm -r /root/.cache\n\n# install required packages\nCOPY ./services/backend/requirements.txt /usr/src/app/requirements.txt\nRUN pip install --no-cache-dir -r requirements.txt\n\n# add backend app\nCOPY ./services/backend /usr/src/app\n\n# run server\nCMD gunicorn -b 0.0.0.0:5000 manage:app --daemon\n\n############Frontend###########\n# copy static files\nCOPY --from=builder-react /usr/src/app/build /usr/share/nginx/html\n\n# update nginx conf\nRUN rm /etc/nginx/conf.d/default.conf\nCOPY ./services/frontend/nginx/aws/simple/default.conf /etc/nginx/conf.d/default.conf\n\n# expose port\nEXPOSE 80\n\n# run nginx\nCMD [\"nginx\", \"-g\", \"daemon off;\"]\n"
}