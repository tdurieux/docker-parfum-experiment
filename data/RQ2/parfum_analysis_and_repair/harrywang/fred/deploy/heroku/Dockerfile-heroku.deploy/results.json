{
  "startTime": 1674253580220,
  "endTime": 1674253581129,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 24
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# This is for Heroku deployment\n# build\nFROM node:16-alpine as build-react\nWORKDIR /app\nENV PATH /app/node_modules/.bin:$PATH\nENV NODE_ENV production\nENV REACT_APP_BACKEND_SERVICE_URL $REACT_APP_BACKEND_SERVICE_URL\nCOPY ./services/frontend/package*.json ./\nRUN npm install && npm cache clean --force;\nRUN npm install react-scripts@3.4.0 && npm cache clean --force;\nCOPY ./services/frontend/ .\nRUN npm run build\n\n# production\nFROM nginx:stable-alpine as production\nENV PYTHONDONTWRITEBYTECODE 1\nENV PYTHONUNBUFFERED 1\nENV FLASK_ENV=production\nENV APP_SETTINGS=app.config.ProductionConfig\nWORKDIR /app\nRUN apk update && \\\n    apk add --no-cache --virtual build-deps \\\n    build-base openssl-dev libffi-dev gcc python3-dev musl-dev \\\n    postgresql-dev netcat-openbsd\nRUN python3 -m ensurepip && \\\n    rm -r /usr/lib/python*/ensurepip && \\\n    pip3 install --no-cache-dir --upgrade pip setuptools && \\\n    if [ ! -e /usr/bin/pip ]; then ln -s pip3 /usr/bin/pip ; fi && \\\n    if [[ ! -e /usr/bin/python ]]; then ln -sf /usr/bin/python3 /usr/bin/python; fi && \\\n    rm -r /root/.cache\nCOPY --from=build-react /app/build /usr/share/nginx/html\nCOPY ./services/frontend/nginx/heroku/default.conf /etc/nginx/conf.d/default.conf\nCOPY ./services/backend/requirements.txt ./\nRUN pip install --no-cache-dir -r requirements.txt\nRUN pip install --no-cache-dir gunicorn\nCOPY ./services/backend .\nCMD gunicorn -b 0.0.0.0:5000 manage:app --daemon && \\\n      sed -i -e 's/$PORT/'\"$PORT\"'/g' /etc/nginx/conf.d/default.conf && \\\n      nginx -g 'daemon off;'\n"
}