{
  "startTime": 1674250876412,
  "endTime": 1674250877137,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 88,
        "lineEnd": 88,
        "columnStart": 4,
        "columnEnd": 83
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 4,
        "columnEnd": 67
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 94,
        "lineEnd": 94,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 21,
        "columnEnd": 88
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 36,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 19
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 36,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 19
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 21,
        "columnEnd": 88
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 4,
        "columnEnd": 32
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 36,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 19
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 4,
        "columnEnd": 56
      }
    }
  ],
  "repairedDockerfile": "FROM rocker/r-apt:bionic\nRUN echo '13 Apr 2021'\nENV LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8 DEBIAN_FRONTEND=noninteractive\n\nRUN apt-get update -y && \\\n    apt-get install --no-install-recommends -y \\\n        apt-utils \\\n        curl \\\n        gpg-agent \\\n        software-properties-common \\\n        dirmngr \\\n        libssl-dev \\\n        ca-certificates \\\n        locales \\\n        libcurl4-openssl-dev \\\n        libxml2-dev \\\n        python3-pip \\\n        python3-dev \\\n        openjdk-11-jdk \\\n        openjdk-11-jre \\\n        libgomp1 \\\n        gcc \\\n        libc6-dev \\\n        pandoc \\\n        nginx \\\n        git \\\n        maven \\\n        docker.io && \\\n    rm -rf /var/lib/apt/lists/*\n\nRUN echo \"en_US.UTF-8 UTF-8\" >> /etc/locale.gen && \\\n    locale-gen en_US.utf8 && \\\n    /usr/sbin/update-locale LANG=en_US.UTF-8\nRUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E298A3A825C0D65DFD57CBB651716619E084DAB9 && \\\n    add-apt-repository 'deb https://cloud.r-project.org/bin/linux/ubuntu bionic-cran35/'\n\nRUN apt-get install -y --no-install-recommends \\\n        r-cran-littler \\\n        r-base \\\n        r-base-dev \\\n        r-cran-recipes \\\n        r-cran-glmnet \\\n        r-cran-rjson \\\n        r-cran-e1071 \\\n        r-cran-plumber \\\n        r-cran-caret \\\n        r-cran-tidyverse \\\n        r-cran-pack \\\n        r-cran-rook && \\\n    rm -rf /var/lib/apt/lists/ && rm -rf /var/lib/apt/lists/*;\n\nRUN Rscript -e \"install.packages(c('gert', 'usethis', 'devtools'), Ncpus=4)\"\n\n### Save cran as the default repo for R packages\nRUN echo \"r <- getOption('repos'); r['CRAN'] <- 'http://cran.rstudio.com'; options(repos = r);\" > ~/.Rprofile\n\n# Install caret models\nRUN Rscript -e 'library(caret); install.packages(unique(modelLookup()[modelLookup()$forReg, c(1)]), Ncpus=4)'\nRUN Rscript -e 'library(caret); install.packages(unique(modelLookup()[modelLookup()$forClass, c(1)]), Ncpus=4)'\n\nRUN rm -rf /tmp/downloaded_packages/ /tmp/*.rds\n\n## Install python 3.7.10 from source with --enabled-shared flag.\n## In this case python will be dynamically linked to libpython.so, which is required for Julia.\n## When python is installed as a package it is statically linked to libpython.a, which Julia doesn't like.\nRUN apt update -y && apt install --no-install-recommends -y software-properties-common libsqlite3-dev libffi-dev && \\\n    add-apt-repository ppa:deadsnakes/ppa && \\\n    wget https://www.python.org/ftp/python/3.7.10/Python-3.7.10.tgz && \\\n    tar zxvf Python-3.7.10.tgz && \\\n    cd Python-3.7.10 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-shared --enable-loadable-sqlite-extensions && \\\n    make install && rm Python-3.7.10.tgz && rm -rf /var/lib/apt/lists/*;\n# By default, `make install' will install all the files in\n# `/usr/local/bin', `/usr/local/lib' etc. You can specify\n# an installation prefix other than `/usr/local' using `--prefix',\n# for instance `--prefix=$HOME'.\nRUN apt install --no-install-recommends -y python3.7-dev && rm -rf /var/lib/apt/lists/*;\n# Create wirtual env\nRUN python3.7 -m pip install -U pip && \\\n    python3.7 -m pip install setuptools wheel virtualenv && \\\n    python3.7 -m virtualenv /opt/v3.7\n\nENV PYTHON=/opt/v3.7/bin/python\n\nCOPY requirements_drum.txt requirements_dropin.txt /tmp/\n\n# uwsgi is an extra dependency and it shouldn't be in requirements_drum.txt, so install it explicitly\nRUN cd /opt && . v3.7/bin/activate && \\\n    pip install --no-cache-dir -r /tmp/requirements_drum.txt -r uwsgi && \\\n    rm -rf /root/.cache/pip\n\n# # install julia 1.5.4\nENV HOME /opt\nRUN wget https://julialang-s3.julialang.org/bin/linux/x64/1.5/julia-1.5.4-linux-x86_64.tar.gz && \\\n    tar zxvf julia-1.5.4-linux-x86_64.tar.gz && \\\n    mkdir $HOME/.julia && \\\n    mkdir $HOME/julia && rm julia-1.5.4-linux-x86_64.tar.gz\n\nCOPY sysim.jl $HOME/julia/sysim.jl\nENV JULIA_HOME=/julia-1.5.4\nENV JULIA_SYS_IMAGE=$HOME/julia/sys.so JULIA_PROJECT=$HOME/julia PATH=$PATH:$JULIA_HOME/bin\n\nRUN julia \"$HOME/julia/sysim.jl\" && \\\n    chmod -R 777 $HOME/.julia/logs/manifest_usage.toml && \\\n    rm julia-1.5.4-linux-x86_64.tar.gz && \\\n    rm Python-3.7.10.tgz\n\nUSER root"
}