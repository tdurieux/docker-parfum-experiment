{
  "startTime": 1674219411790,
  "endTime": 1674219412614,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 29,
        "lineEnd": 30,
        "columnStart": 22,
        "columnEnd": 59
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM conda/miniconda3\n\nLABEL maintainer=\"Ravin Kumar\"\n\nARG SRC_DIR\nARG PYTHON_VERSION\nARG PYSTAN_VERSION\nARG PYRO_VERSION\nARG PYTORCH_VERSION\nARG EMCEE_VERSION\nARG TF_VERSION\nARG PYMC3_VERSION\n\nENV PYTHON_VERSION=${PYTHON_VERSION}\nENV PYSTAN_VERSION=${PYSTAN_VERSION}\nENV PYRO_VERSION=${PYRO_VERSION}\nENV PYTORCH_VERSION=${PYTORCH_VERSION}\nENV EMCEE_VERSION=${EMCEE_VERSION}\nENV TF_VERSION=${TF_VERSION}\nENV PYMC3_VERSION=${PYMC3_VERSION}\n\n# Change behavior of create_test.sh script\nENV DOCKER_BUILD=true\n\n# For Sphinx documentation builds\nENV LC_ALL=C.UTF-8\nENV LANG=C.UTF-8\n\n# Update container\nRUN apt-get update && apt-get install --no-install-recommends -y git build-essential pandoc vim ffmpeg \\\n    dos2unix libgtk-3-dev libdbus-glib-1-dev libxt-dev jags && rm -rf /var/lib/apt/lists/*\n\n# Copy needed scripts\nCOPY $SRC_DIR/requirements*.txt /opt/arviz/\nCOPY $SRC_DIR/scripts /opt/arviz/scripts\nRUN find /opt/arviz/ -type f -print0 | xargs -0 dos2unix\n\n# Clear any cached models from copied from host filesystem\nRUN rm -f arviz/tests/saved_models/*.pkl\n    RUN find -type d -name __pycache__ -exec rm -rf {} +\n\n# Change workdir\nWORKDIR /opt/arviz\n\n# Create conda environment. Defaults to Python 3.8\nRUN ./scripts/create_testenv.sh\n\n# Set automatic conda activation in non interactive and shells\nENV BASH_ENV=\"/root/activate_conda.sh\"\nRUN echo \". /root/activate_conda.sh\" > /root/.bashrc\n\n# Remove conda cache\nRUN conda clean --all\n\n# Copy ArviZ\nCOPY $SRC_DIR /opt/arviz\nRUN find /opt/arviz/ -type f -print0 | xargs -0 dos2unix\n\n# Clear any cached models from copied from host filesystem\nRUN rm -f arviz/tests/saved_models/*.pkl\nRUN find -type d -name __pycache__ -exec rm -rf {} +\n\n# Install editable using the setup.py\nRUN /bin/bash -c \"source /root/.bashrc && python -m pip install -e .\"\n"
}