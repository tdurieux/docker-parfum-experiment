{
  "startTime": 1674250565022,
  "endTime": 1674250565862,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 110
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# A Dockerfile for running the MedType server.\n#\n# Changelog:\n# - dev: None as yet\n# - 1.0 (2022-01-21): Initial release.\n# - 1.1 (2022-02-06): Fixed some permission issues; installed transformers from conda.\n\n# Use anaconda for prerequisites.\nFROM conda/miniconda3\n\n# Update conda\nRUN conda update conda python\n\n# Install unzip from conda.\nRUN conda install -c conda-forge unzip\n\n# Install gcc and g++\nRUN conda install -c conda-forge gcc\nRUN conda install -c conda-forge gxx\n\n# Install rust\nRUN conda install -c anaconda rust-nightly\n\n# Install prerequisites from server/requirements.txt\n# Start with the largest ones so we don't have to redownload them.\nRUN conda install -c pytorch pytorch\nRUN conda install -c conda-forge transformers\n\n# Other prerequisites\nRUN conda install -c anaconda numpy\nRUN conda install -c conda-forge tokenizers\nRUN conda install -c conda-forge spacy\nRUN conda install -c anaconda nltk\nRUN conda install -c anaconda flask\nRUN conda install -c anaconda zeromq\n\n# Install SciSpaCy as an entity linker.\nRUN pip install --no-cache-dir scispacy\n# RUN pip install https://s3-us-west-2.amazonaws.com/ai2-s2-scispacy/releases/v0.2.4/en_core_sci_sm-0.2.4.tar.gz\nRUN pip install --no-cache-dir https://s3-us-west-2.amazonaws.com/ai2-s2-scispacy/releases/v0.4.0/en_core_sci_sm-0.4.0.tar.gz\n\n# We need pip to set up Python packages.\nRUN pip install --no-cache-dir --upgrade pip\n\n# Copy the source code to /opt/medtype-as-service\nWORKDIR /opt/medtype-as-service\nCOPY . /opt/medtype-as-service\n\n# Install MedType Server requirements\n# We do this through Conda earlier in this file.\n# RUN pip install -r server/requirements.txt\n\n# Setup MedType as service\nRUN bash setup.sh\n\n# Create a user so we're not running MedType as a root user.\n# Note that we create two directories in this Docker:\n# - /opt/medtype is the medtype user home directory. Caches will\n#   be stored here.\n# - /opt/medtype-as-service is where the medtype-as-service source\n#   code goes. This includes some neural network images and other\n#   downloaded data.\n# That way, you can set up your volumes as needed to ensure both\n# directories have the space they need.\nRUN useradd -U -m medtype -d /opt/medtype\nUSER medtype\n\n# Predownload some scispacy files.\nRUN mkdir -p /opt/medtype/.scispacy/datasets\nADD --chown=medtype 'https://s3-us-west-2.amazonaws.com/ai2-s2-scispacy/data/linkers/2020-10-09/umls/tfidf_vectors_sparse.npz' /opt/medtype/.scispacy/datasets/e9f7327283e43f0482f7c0c71b71dec278a58ccb3ffdd03c2c2350159e7ef146.f2a350ad19015b2591545f7feeed6a6d6d2fffcd635d868a5d7fc0dfc3cadfd8.tfidf_vectors_sparse.npz\nADD --chown=medtype 'https://s3-us-west-2.amazonaws.com/ai2-s2-scispacy/data/linkers/2020-10-09/umls/nmslib_index.bin' /opt/medtype/.scispacy/datasets/f48455d6c79262057cce66b4619123c2b558b21092d42fac97f47bb99a5b8f9f.dd70d3dffe7d90d7ac8914460e16a48375dab32485fb6313a34e6fbcaf53218b.nmslib_index.bin\nADD --chown=medtype 'https://s3-us-west-2.amazonaws.com/ai2-s2-scispacy/data/linkers/2020-10-09/umls/tfidf_vectorizer.joblib' /opt/medtype/.scispacy/datasets/8c32f1e7ddf19ec695c321f68a71f06a191aec8efcf6b645b78fa6250d8d81d3.89019b4a62a096f33ea23677557a4cde66ebc8228f30afabac38e32f834020dc.tfidf_vectorizer.joblib\nADD --chown=medtype 'https://s3-us-west-2.amazonaws.com/ai2-s2-scispacy/data/linkers/2020-10-09/umls/concept_aliases.json' /opt/medtype/.scispacy/datasets/1428ec15d3b1061731ea273c03699130b3d6b90948993e74bda66af605ff8e2a.aeb7a686c654df6bccb6c2c23d3eda3eb381daaefda4592b58158d0bee53b352.concept_aliases.json\nADD --chown=medtype 'https://s3-us-west-2.amazonaws.com/ai2-s2-scispacy/data/kbs/2020-10-09/umls_2020_aa_cat0129.jsonl' /opt/medtype/.scispacy/datasets/4d7fb8fcae1035d1e0a47d9072b43d5a628057d35497fbfb2499b4b7b2dd4dd7.05ec7eef12f336d4666da85b7fa69b9401883a7dd4244473f7b88b413ccbba03.umls_2020_aa_cat0129.jsonl\nADD --chown=medtype 'https://s3-us-west-2.amazonaws.com/ai2-s2-scispacy/data/umls_semantic_type_tree.tsv' /opt/medtype/.scispacy/datasets/21a1012c532c3a431d60895c509f5b4d45b0f8966c4178b892190a302b21836f.330707f4efe774134872b9f77f0e3208c1d30f50800b3b39a6b8ec21d9adf1b7.umls_semantic_type_tree.tsv\n\n# Run MedType server\nEXPOSE 8125/tcp\nENTRYPOINT medtype-serving-start --model_path $PWD/resources/pretrained_models/pubmed_model.bin \\\n  --type_remap_json $PWD/config/type_remap.json \\\n  --type2id_json $PWD/config/type2id.json \\\n  --umls2type_file $PWD/resources/umls2type.pkl \\ \n  --entity_linker scispacy \\\n  --http_port 8125\n"
}