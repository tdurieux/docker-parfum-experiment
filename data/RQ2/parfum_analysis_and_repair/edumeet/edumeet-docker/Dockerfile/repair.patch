diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/edumeet/edumeet-docker/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/edumeet/edumeet-docker/Dockerfile/repaired.Dockerfile
index a1b1ce2..6fdb866 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/edumeet/edumeet-docker/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/edumeet/edumeet-docker/Dockerfile/repaired.Dockerfile
@@ -1,4 +1,4 @@
-#build edumeet 
+#build edumeet
 FROM node:16-bullseye-slim AS edumeet-builder
 
 # Args
@@ -13,54 +13,54 @@ ARG REACT_APP_DEBUG
 
 WORKDIR ${BASEDIR}
 
-RUN apt-get update;DEBIAN_FRONTEND=noninteractive apt-get install -yq git bash jq build-essential python python3-pip openssl libssl-dev pkg-config;apt-get clean
+RUN apt-get update; DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -yq git bash jq build-essential python python3-pip openssl libssl-dev pkg-config; rm -rf /var/lib/apt/lists/*; apt-get clean
 
 #checkout code
 RUN git clone --single-branch --branch ${BRANCH} ${GIT_SERVER}/${REPOSITORY}/${EDUMEET}.git
 
 #install app dep
 WORKDIR ${BASEDIR}/${EDUMEET}/app
-RUN yarn install --production=false
+RUN yarn install --production=false && yarn cache clean;
 
 #set and build app in producion mode/minified/.
 ENV NODE_ENV ${NODE_ENV}
 ENV REACT_APP_DEBUG=${REACT_APP_DEBUG}
-RUN yarn run build
+RUN yarn run build && yarn cache clean;
 
 #install server dep
 WORKDIR ${BASEDIR}/${EDUMEET}/server
-RUN yarn install --production=false && yarn run build
+RUN yarn install --production=false && yarn run build && yarn cache clean;
 
-# create edumeet package 
-RUN ["/bin/bash", "-c", "cat <<< $(jq '.bundleDependencies += .dependencies' package.json) > package.json" ]
-RUN npm pack
+# create edumeet package
+RUN ["/bin/bash", "-c", "cat <<< $(jq '.bundleDependencies += .dependencies' package.json) > package.json" ] \
+RUN npm pack \
 
 # create edumeet image
-FROM node:16-bullseye-slim
+FROM node:16-bullseye-slim \
 
 # Args:
-ARG BASEDIR
-ARG EDUMEET
-ARG NODE_ENV
-ARG SERVER_DEBUG
+ARG BASEDIR \
+ARG EDUMEET \
+ARG NODE_ENV \
+ARG SERVER_DEBUG \
 
-WORKDIR ${BASEDIR}
+WORKDIR ${BASEDIR} \
 
-COPY --from=edumeet-builder ${BASEDIR}/${EDUMEET}/server/edumeet-server*.tgz  ${BASEDIR}/${EDUMEET}/server/
+COPY --from=edumeet-builder ${BASEDIR}/${EDUMEET}/server/edumeet-server*.tgz  ${BASEDIR}/${EDUMEET}/server/ \
 
-WORKDIR ${BASEDIR}/${EDUMEET}/server
+WORKDIR ${BASEDIR}/${EDUMEET}/server \
 
-RUN tar xzf edumeet-server*.tgz && mv package/* ./ && rm -r package edumeet-server*.tgz
+RUN tar xzf edumeet-server*.tgz && mv package/* ./ && rm -r package edumeet-server*.tgz \
 
-RUN apt-get update;DEBIAN_FRONTEND=noninteractive apt-get install -yq openssl;apt-get clean
+RUN apt-get update; DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -yq openssl; rm -rf /var/lib/apt/lists/*; apt-get clean \
 
 
 # Web PORTS
-EXPOSE 80 443 
-EXPOSE 40000-49999/udp
+EXPOSE 80 443 \
+EXPOSE 40000-49999/udp \
 
-## run server 
-ENV DEBUG ${SERVER_DEBUG}
+## run server
+ENV DEBUG ${SERVER_DEBUG} \
 
-COPY docker-entrypoint.sh /
-ENTRYPOINT ["/docker-entrypoint.sh"]
+COPY docker-entrypoint.sh / \
+ENTRYPOINT ["/docker-entrypoint.sh"]
\ No newline at end of file