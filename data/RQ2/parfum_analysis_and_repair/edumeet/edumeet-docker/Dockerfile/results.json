{
  "startTime": 1674217163795,
  "endTime": 1674217165297,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 39,
        "columnEnd": 53
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 19,
        "columnEnd": 147
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 19,
        "columnEnd": 78
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 19,
        "columnEnd": 78
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 19,
        "columnEnd": 147
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 19,
        "columnEnd": 78
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 39,
        "columnEnd": 55
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 22,
        "columnEnd": 38
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 57,
        "columnEnd": 73
      }
    }
  ],
  "repairedDockerfile": "#build edumeet\nFROM node:16-bullseye-slim AS edumeet-builder\n\n# Args\nARG BASEDIR\nARG EDUMEET\nARG NODE_ENV\nARG SERVER_DEBUG\nARG GIT_SERVER\nARG REPOSITORY\nARG BRANCH\nARG REACT_APP_DEBUG\n\nWORKDIR ${BASEDIR}\n\nRUN apt-get update; DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -yq git bash jq build-essential python python3-pip openssl libssl-dev pkg-config; rm -rf /var/lib/apt/lists/*; apt-get clean\n\n#checkout code\nRUN git clone --single-branch --branch ${BRANCH} ${GIT_SERVER}/${REPOSITORY}/${EDUMEET}.git\n\n#install app dep\nWORKDIR ${BASEDIR}/${EDUMEET}/app\nRUN yarn install --production=false && yarn cache clean;\n\n#set and build app in producion mode/minified/.\nENV NODE_ENV ${NODE_ENV}\nENV REACT_APP_DEBUG=${REACT_APP_DEBUG}\nRUN yarn run build && yarn cache clean;\n\n#install server dep\nWORKDIR ${BASEDIR}/${EDUMEET}/server\nRUN yarn install --production=false && yarn run build && yarn cache clean;\n\n# create edumeet package\nRUN [\"/bin/bash\", \"-c\", \"cat <<< $(jq '.bundleDependencies += .dependencies' package.json) > package.json\" ] \\\nRUN npm pack \\\n\n# create edumeet image\nFROM node:16-bullseye-slim \\\n\n# Args:\nARG BASEDIR \\\nARG EDUMEET \\\nARG NODE_ENV \\\nARG SERVER_DEBUG \\\n\nWORKDIR ${BASEDIR} \\\n\nCOPY --from=edumeet-builder ${BASEDIR}/${EDUMEET}/server/edumeet-server*.tgz  ${BASEDIR}/${EDUMEET}/server/ \\\n\nWORKDIR ${BASEDIR}/${EDUMEET}/server \\\n\nRUN tar xzf edumeet-server*.tgz && mv package/* ./ && rm -r package edumeet-server*.tgz \\\n\nRUN apt-get update; DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -yq openssl; rm -rf /var/lib/apt/lists/*; apt-get clean \\\n\n\n# Web PORTS\nEXPOSE 80 443 \\\nEXPOSE 40000-49999/udp \\\n\n## run server\nENV DEBUG ${SERVER_DEBUG} \\\n\nCOPY docker-entrypoint.sh / \\\nENTRYPOINT [\"/docker-entrypoint.sh\"]"
}