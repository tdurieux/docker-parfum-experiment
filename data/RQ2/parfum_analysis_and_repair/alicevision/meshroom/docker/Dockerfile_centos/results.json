{
  "startTime": 1674252840874,
  "endTime": 1674252841693,
  "originalSmells": [
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 56
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG MESHROOM_VERSION\nARG AV_VERSION\nARG CUDA_VERSION\nARG CENTOS_VERSION\nFROM alicevision/meshroom-deps:${MESHROOM_VERSION}-av${AV_VERSION}-centos${CENTOS_VERSION}-cuda${CUDA_VERSION}\nLABEL maintainer=\"AliceVision Team alicevision-team@googlegroups.com\"\n\n# Execute with nvidia docker (https://github.com/nvidia/nvidia-docker/wiki/Installation-(version-2.0))\n# docker run -it --runtime nvidia -p 2222:22 --name meshroom -v</path/to/your/data>:/data alicevision/meshroom:develop-av2.2.8.develop-ubuntu20.04-cuda11.0\n# ssh -p 2222 -X root@<docker host> /opt/Meshroom_bundle/Meshroom # Password is 'meshroom'\n\nENV MESHROOM_DEV=/opt/Meshroom \\\n    MESHROOM_BUILD=/tmp/Meshroom_build \\\n    MESHROOM_BUNDLE=/opt/Meshroom_bundle \\\n    AV_INSTALL=/opt/AliceVision_install \\\n    QT_DIR=/opt/Qt5.14.1/5.14.1/gcc_64 \\\n    PATH=\"${PATH}:${MESHROOM_BUNDLE}\" \\\n    OPENIMAGEIO_LIBRARY=/opt/AliceVision_install/lib\n\nCOPY *.txt *.md *.py ${MESHROOM_DEV}/\nCOPY ./docs ${MESHROOM_DEV}/docs\nCOPY ./meshroom ${MESHROOM_DEV}/meshroom\nCOPY ./tests ${MESHROOM_DEV}/tests\nCOPY ./bin ${MESHROOM_DEV}/bin\n\nWORKDIR ${MESHROOM_DEV}\n\nRUN source scl_source enable rh-python36 && python setup.py install_exe -d \"${MESHROOM_BUNDLE}\" && \\\n    find ${MESHROOM_BUNDLE} -name \"*Qt5Web*\" -delete && \\\n    find ${MESHROOM_BUNDLE} -name \"*Qt5Designer*\" -delete && \\\n    rm -rf ${MESHROOM_BUNDLE}/lib/PySide2/typesystems/ \\\n           ${MESHROOM_BUNDLE}/lib/PySide2/examples/ \\\n           ${MESHROOM_BUNDLE}/lib/PySide2/include/ \\\n           ${MESHROOM_BUNDLE}/lib/PySide2/Qt/translations/ \\\n           ${MESHROOM_BUNDLE}/lib/PySide2/Qt/resources/ \\\n           ${MESHROOM_BUNDLE}/lib/PySide2/QtWeb* \\\n           ${MESHROOM_BUNDLE}/lib/PySide2/pyside2-lupdate \\\n           ${MESHROOM_BUNDLE}/lib/PySide2/rcc \\\n           ${MESHROOM_BUNDLE}/lib/PySide2/designer\n\nWORKDIR ${MESHROOM_BUILD}\n\n# Build Meshroom plugins\nRUN cmake \"${MESHROOM_DEV}\" -DALICEVISION_ROOT=\"${AV_INSTALL}\" -DCMAKE_INSTALL_PREFIX=\"${MESHROOM_BUNDLE}/qtPlugins\"\nRUN make \"-j$(nproc)\" qtOIIO\n\nRUN make \"-j$(nproc)\" qmlAlembic\nRUN make \"-j$(nproc)\" qtAliceVision\nRUN make \"-j$(nproc)\" && \\\n\trm -rf \"${MESHROOM_BUILD}\" \"${MESHROOM_DEV}\" \\\n\t\t${MESHROOM_BUNDLE}/aliceVision/share/doc \\\n\t\t${MESHROOM_BUNDLE}/aliceVision/share/eigen3 \\\n\t\t${MESHROOM_BUNDLE}/aliceVision/share/fonts \\\n\t\t${MESHROOM_BUNDLE}/aliceVision/share/lemon \\\n\t\t${MESHROOM_BUNDLE}/aliceVision/share/libraw \\\n\t\t${MESHROOM_BUNDLE}/aliceVision/share/man/ \\\n\t\taliceVision/share/pkgconfig\n\n# Enable SSH X11 forwarding, needed when the Docker image\n# is run on a remote machine\nRUN yum -y install openssh-server xauth mesa-dri-drivers && \\\n\tsystemctl enable sshd && \\\n\tmkdir -p /run/sshd && rm -rf /var/cache/yum\n\nRUN sed -i \"s/^.*X11Forwarding.*$/X11Forwarding yes/; s/^.*X11UseLocalhost.*$/X11UseLocalhost no/; s/^.*PermitRootLogin prohibit-password/PermitRootLogin yes/; s/^.*X11UseLocalhost.*/X11UseLocalhost no/;\" /etc/ssh/sshd_config\nRUN echo \"root:meshroom\" | chpasswd\n\nWORKDIR /root\n\nEXPOSE 22\nCMD bash -c \"test -s /etc/machine-id || systemd-machine-id-setup; sshd-keygen; /usr/sbin/sshd -D\"\n\n"
}