{
  "startTime": 1674248265082,
  "endTime": 1674248266056,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 19,
        "columnStart": 7,
        "columnEnd": 14
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.10.1-slim@sha256:9f702aa0f2bd7fe7a43bcf46e487040ba3237f2115994ae74ea7b270479ea8f3\n\n# Set the environment variables\nENV PYTHONDONTWRITEBYTECODE=1 \\\n    PYTHONUNBUFFERED=1 \\\n    PIP_DISABLE_PIP_VERSION_CHECK=1 \\\n    # gunicorn concurrency\n    WEB_CONCURRENCY=4\n\nRUN set -x \\\n    && apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n    curl \\\n    dirmngr \\\n    # Needed for pytz to be able to install\n    libsasl2-modules \\\n    gettext \\\n    build-essential \\\n    # Needed for Python to build cffi\n    libffi-dev && rm -rf /var/lib/apt/lists/*;\n\n# add non-privileged user\nRUN useradd --uid 1000 --shell /bin/bash --create-home kuma \\\n    && mkdir -p app \\\n    && chown kuma:kuma /app \\\n    && chmod 775 /app\n\n# install Python libraries\nWORKDIR /app\nCOPY --chown=kuma:kuma ./pyproject.toml ./poetry.lock /app/\nRUN pip install --no-cache-dir poetry~=1.1.12 \\\n    && POETRY_VIRTUALENVS_CREATE=false poetry install --no-root \\\n    && rm -rf ~/.cache/pip ~/.cache/pypoetry/cache\n\n# setup default run parameters\nUSER kuma\nWORKDIR /app\nEXPOSE 8000\n"
}