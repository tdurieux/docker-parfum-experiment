{
  "startTime": 1674247898290,
  "endTime": 1674247898768,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 30,
        "columnStart": 25,
        "columnEnd": 13
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 30,
        "columnStart": 25,
        "columnEnd": 13
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "################################################################################\n##################### Set Inital Image to work from ############################\n\n# work from latest LTS ubuntu release\nFROM ubuntu:20.04\n\n# set variables\nENV r_version 3.6.0\nENV TZ=US/Chicago\nENV DEBIAN_FRONTEND noninteractive\n\n# run update\nRUN apt-get update -y && apt-get install --no-install-recommends -y \\\n  gfortran \\\n  libreadline-dev \\\n  libpcre3-dev \\\n  libcurl4-openssl-dev \\\n  build-essential \\\n  zlib1g-dev \\\n  libbz2-dev \\\n  liblzma-dev \\\n  openjdk-8-jdk \\\n  wget \\\n  libssl-dev \\\n  libxml2-dev \\\n  libnss-sss \\\n  git \\\n  build-essential \\\n  cmake \\\n  python3 \\\n  python3-pip && rm -rf /var/lib/apt/lists/*;\n\n################################################################################\n##################### Add Container Labels #####################################\nLABEL \"Regtools_License\"=\"MIT\"\nLABEL \"Description\"=\"Software package which integrate DNA-seq and RNA-seq data\\\n                     to help interpret mutations in a regulatory and splicing\\\n                     context.\"\n\n################################################################################\n####################### Install R ##############################################\n\n# change working dir\nWORKDIR /usr/local/bin\n\n# install R\nRUN wget https://cran.r-project.org/src/base/R-3/R-${r_version}.tar.gz\nRUN tar -zxvf R-${r_version}.tar.gz && rm R-${r_version}.tar.gz\nWORKDIR /usr/local/bin/R-${r_version}\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/local/ --with-x=no\nRUN make\nRUN make install\n\n# install R packages\nRUN R --vanilla -e 'install.packages(c(\"data.table\", \"plyr\", \"tidyverse\"), repos = \"http://cran.us.r-project.org\")'\n\n################################################################################\n##################### Install SpliceAI #########################################\n\nRUN pip3 install --no-cache-dir spliceai\nRUN pip3 install --no-cache-dir --upgrade tensorflow\nRUN pip3 install --no-cache-dir keras==2.4.3\n\n################################################################################\n##################### Install Regtools #########################################\n\n\n# removed this due to docker build pulling the correct branch already and the below command actually overwriting the desired branch to master\n# clone git repository\nADD . /regtools\n\n# change to regtools to build it\n\nWORKDIR /regtools\n\n# compile from source\nRUN mkdir build && cd build && cmake .. && make\n\n################################################################################\n################### Make scripts executable ####################################\n\nWORKDIR /regtools/scripts\n\nRUN chmod ugo+x *\n\n################################################################################\n###################### set environment path    #################################\n\n# add regtools executable to path\nENV PATH=\"/regtools/build:/usr/local/bin:/usr/local/bin/R-${r_version}:${PATH}\"\n\n"
}