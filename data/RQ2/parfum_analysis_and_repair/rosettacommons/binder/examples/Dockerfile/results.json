{
  "startTime": 1674219724549,
  "endTime": 1674219726077,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 27,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 4
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 27,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 4
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 27,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 4
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 27,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 4
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:20.04 as base\n\n# Config\nARG BRANCH=\"master\"\nARG CLANG_VERSION=14\n\n# General dependencies\nENV DEBIAN_FRONTEND=noninteractive\nRUN apt-get update \\\n && apt-get install --no-install-recommends -yq wget gnupg \\\n && rm -rf /var/lib/apt/lists/*\n\n# Add llvm repo\nRUN wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add -\nRUN echo \"deb http://apt.llvm.org/focal/ llvm-toolchain-focal-${CLANG_VERSION} main\" >> /etc/apt/sources.list\n\n# Run dependencies\nRUN apt-get update \\\n && apt-get install --no-install-recommends -yq \"clang-${CLANG_VERSION}\" \\\n && rm -rf /var/lib/apt/lists/*\n\n\n# Build binder\nFROM base as build\n\n# Build dependencies\nRUN apt-get update\nRUN apt-get install --no-install-recommends -yq \\\n\t\"libclang-${CLANG_VERSION}-dev\" \\\n\tcmake \\\n\tgit && rm -rf /var/lib/apt/lists/*;\n\n# Clone binder source\nARG REPO=\"https://github.com/RosettaCommons/binder.git\"\nRUN git clone --depth 1 --branch \"${BRANCH}\" \"${REPO}\" /binder\n\n# Build\nWORKDIR \"/build\"\nRUN cmake \\\n\t-DCMAKE_CXX_COMPILER=\"$(which clang++-\"${CLANG_VERSION}\")\" \\\n\t-DBINDER_ENABLE_TEST=OFF \\\n\t/binder\nRUN make \"-j$(nproc)\"\nRUN make install\n\n\n# Install image\nFROM base as install\nCOPY --from=build /usr/local/bin/binder /usr/local/bin/binder\n"
}