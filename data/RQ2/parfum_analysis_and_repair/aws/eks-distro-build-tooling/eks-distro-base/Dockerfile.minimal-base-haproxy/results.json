{
  "startTime": 1674218853176,
  "endTime": 1674218853951,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 138
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 138
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 28
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n\n# *NOTE* we have to limit our number of layers heres because in presubmits there\n# is no overlay fs and we will run out of space quickly\n\n################# BUILDER ######################\nARG BASE_IMAGE\nARG BUILDER_IMAGE\nARG BUILT_BUILDER_IMAGE\nFROM ${BUILDER_IMAGE} as builder\n\n# Copy scripts in every variant since we do not rebuild the base\n# every time these scripts change. This ensures whenever a variant is\n# built it has the latest scripts in the builder\nCOPY scripts/ /usr/bin\n\n# the version of haproxy provided by al2 is too old and does not work with the config generated by kind\n# for now build haproxy from source, version 2.5 which is newer than what kind uses but this is the first\n# version to support openssl3 which al2022 ships with\nENV DEV_DEPS=\"make gcc gcc-c++ pcre-devel openssl-devel readline-devel systemd-devel tar zlib-devel\"\nENV HAPROXY_VERSION=\"2.5.5\"\nRUN set -x && \\\n    cd /tmp && \\\n    yum install -y $DEV_DEPS && \\\n    curl -f -sSL https://www.haproxy.org/download/${HAPROXY_VERSION%.*}/src/haproxy-$HAPROXY_VERSION.tar.gz -o haproxy-$HAPROXY_VERSION.tar.gz && \\\n    tar -xf haproxy-$HAPROXY_VERSION.tar.gz && \\\n    cd haproxy-$HAPROXY_VERSION && \\\n    make TARGET=linux-glibc USE_OPENSSL=1 USE_PCRE=1 && \\\n    cp haproxy /newroot/usr/sbin && \\\n    # copy licenses\n    mkdir -p /newroot/usr/share/doc/haproxy && \\\n    cp -rf doc/* /newroot/usr/share/doc/haproxy && \\\n    yum remove -y $DEV_DEPS && \\\n    clean_yum && \\\n    rm -rf haproxy-$HAPROXY_VERSION haproxy-$HAPROXY_VERSION.tar.gz && rm -rf /var/cache/yum\n\nENV HAPROXY_DEPS=\"bash openssl-libs zlib\"\nRUN set -x && \\\n    # manually \"install\" systemd to avoid installing the entire dep tree\n    clean_install systemd true true && \\\n    install_if_al2 libcrypt && \\\n    install_if_al2022 \"libxcrypt-compat libselinux pcre2 pcre\" && \\\n    # libacl is needed for cp + mkdir\n    clean_install \"libacl $HAPROXY_DEPS\" && \\\n    # remove unncessary utils and other binary deps that are not needed by haproxy during runtime\n    remove_package \"bash coreutils gawk grep info sed\" && \\\n    remove_package systemd true && \\\n    # kind expects the haproxy image to include cp + mdkir + kill\n    # to avoid bringing in the entire dep tree installing manually\n    # kill comes from util-linux\n    # mkdir + cp come from coretuils\n    yumdownloader --destdir=/tmp/downloads -x \"*.i686\" coreutils util-linux && \\\n    rpm2cpio /tmp/downloads/util-linux*.rpm | cpio -idv ./usr/bin/kill && \\\n    rpm2cpio /tmp/downloads/coreutils*.rpm | cpio -idv ./usr/bin/cp && \\\n    rpm2cpio /tmp/downloads/coreutils*.rpm | cpio -idv ./usr/bin/mkdir && \\\n    cleanup \"haproxy\"\n\n\n# create haproxy user\nRUN set -x && \\\n    cp /newroot/etc/{group,passwd} /etc && \\    \n    groupadd -r haproxy && \\\n    useradd -r -g haproxy -u 1000 haproxy && \\\n    cp /etc/{group,passwd} /newroot/etc\n\n\n################# HAPORXY ####################\nFROM ${BUILT_BUILDER_IMAGE} as base-haproxy-builder\nFROM ${BASE_IMAGE} as final\nCOPY --from=base-haproxy-builder /newroot /\n\nUSER haproxy\n"
}