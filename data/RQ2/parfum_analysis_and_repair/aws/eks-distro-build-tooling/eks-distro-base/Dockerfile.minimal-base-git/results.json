{
  "startTime": 1674252069133,
  "endTime": 1674252070581,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 4,
        "columnEnd": 82
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 81,
        "lineEnd": 81,
        "columnStart": 4,
        "columnEnd": 46
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 81,
        "lineEnd": 81,
        "columnStart": 4,
        "columnEnd": 46
      }
    }
  ],
  "repairedDockerfile": "# Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n\n# *NOTE* we have to limit our number of layers heres because in presubmits there\n# is no overlay fs and we will run out of space quickly\nARG BASE_IMAGE\nARG BUILDER_IMAGE\nARG BUILT_BUILDER_IMAGE\nFROM ${BUILDER_IMAGE} as builder\n\nARG TARGETARCH\n\nENV CMAKE_VERSION=3.20.2\nENV LIBSSH2_VERSION=1.10.0\nENV LIBGIT2_VERSION=1.3.1\nENV BUILD_DEPS=\"gcc gzip make openssl-devel openssl-libs tar wget\"\n\nCOPY \"${TARGETARCH}-git-checksums\" /tmp/checksums\n\n# Copy scripts in every variant since we do not rebuild the base\n# every time these scripts change. This ensures whenever a variant is\n# built it has the latest scripts in the builder\nCOPY scripts/ /usr/bin\n\nRUN set -x && \\\n    export TARGETARCH=\"${TARGETARCH/amd64/x86_64}\" && \\\n    export TARGETARCH=\"${TARGETARCH/arm64/aarch64}\" && \\\n    # manually \"install\" systemd to avoid installing the entire dep tree\n    # git deps on less, which we wont be using in the image\n    # do not need openssh, just the clients for git to fork (ssh)\n    # rpm comes from openlbdap/nss but we only need the libs\n    clean_install \"less openssh rpm systemd\" true true && \\\n    clean_install \"git-core libssh2 openssh-clients openssl-libs gnupg\" && \\\n    install_if_al2022 \"libgit2\" && \\\n    remove_package \"less openssh rpm systemd\" true && \\\n    # we are keeping bash on this image since downstream images use to exec git\n    remove_package \"coreutils findutils gawk grep info sed\" && \\\n    if grep -q \"2022\" \"/etc/os-release\" ; then cleanup \"git\" && exit; fi && \\\n    # building libgit2 + libssh2\n    mkdir -p /tmp/sources && \\\n    cd /tmp/sources && \\\n    yum install -y $BUILD_DEPS && \\\n    wget \\\n        --progress dot:giga \\\n        https://github.com/libssh2/libssh2/releases/download/libssh2-${LIBSSH2_VERSION}/libssh2-${LIBSSH2_VERSION}.tar.gz && \\\n    wget \\\n        --progress dot:giga \\\n        https://github.com/Kitware/CMake/releases/download/v${CMAKE_VERSION}/cmake-${CMAKE_VERSION}-linux-${TARGETARCH}.tar.gz && \\\n    wget \\\n        --progress dot:giga \\ \n        https://github.com/libgit2/libgit2/archive/refs/tags/v${LIBGIT2_VERSION}.tar.gz -O libgit2-${LIBGIT2_VERSION}.tar.gz && \\\n    sha256sum -c /tmp/checksums && \\\n    # al2 provided libssh is out of date and does not work with ssh/github\n    tar -xzf libssh2-${LIBSSH2_VERSION}.tar.gz && \\\n    cd  /tmp/sources/libssh2-${LIBSSH2_VERSION} && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --disable-static --enable-shared --prefix=/usr --libdir=/usr/lib64 && \\\n    make && \\\n    make install && \\\n    mkdir -p $NEWROOT/usr/share/doc/libssh2-${LIBSSH2_VERSION}/ && \\\n    cp ./COPYING $NEWROOT/usr/share/doc/libssh2-${LIBSSH2_VERSION}/ && \\\n    cp -d /usr/lib64/libssh2* $NEWROOT/usr/lib64 && \\\n    # CMAKE for libgit build\n    cd /tmp/sources && \\\n    tar -xzf cmake-${CMAKE_VERSION}-linux-${TARGETARCH}.tar.gz && \\\n    mv cmake-${CMAKE_VERSION}-linux-${TARGETARCH}/bin/* /usr/bin && \\\n    mkdir /usr/share/cmake-3.20 && \\\n    mv cmake-${CMAKE_VERSION}-linux-${TARGETARCH}/share/cmake-3.20/* /usr/share/cmake-3.20 && \\\n    # Install Libgit2\n    cd /tmp/sources && \\\n    tar -xzf libgit2-${LIBGIT2_VERSION}.tar.gz && \\\n    cd /tmp/sources/libgit2-${LIBGIT2_VERSION} && \\\n    mkdir build && \\\n    cd build && \\\n    cmake -DBUILD_CLAR=off -DCMAKE_BUILD_TYPE=Release .. && \\\n    cmake --build  . && \\\n    cmake --install . && \\\n    mkdir -p $NEWROOT/usr/share/doc/libgit2-${LIBGIT2_VERSION}/ && \\\n    cp ../COPYING $NEWROOT/usr/share/doc/libgit2-${LIBGIT2_VERSION} && \\\n    cp -d /usr/local/lib64/libgit2* $NEWROOT/usr/lib64 && \\\n    # Since downstream of this image we need to build libgit2 we need the headers and pc files\n    mkdir -p $NEWROOT/usr/lib64/pkgconfig && \\\n    mkdir -p $NEWROOT/usr/include && \\\n    cp /usr/local/lib64/pkgconfig/libgit2* $NEWROOT/usr/lib64/pkgconfig && \\\n    cp /usr/lib64/pkgconfig/* $NEWROOT/usr/lib64/pkgconfig && \\\n    cp -rf /usr/local/include/git2* $NEWROOT/usr/include && \\\n    cd / && \\\n    rm -rf /tmp/sources && \\\n    yum erase -y \"$BUILD_DEPS\" && \\\n    cleanup \"git\" && rm -rf /var/cache/yum\n"
}