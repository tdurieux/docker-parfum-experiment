diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/aws/sagemaker-pytorch-training-toolkit/docker/1.3.1/py2/Dockerfile.gpu b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/aws/sagemaker-pytorch-training-toolkit/docker/1.3.1/py2/Dockerfile.gpu/repaired.Dockerfile
index 9e5c79d..48e52c3 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/aws/sagemaker-pytorch-training-toolkit/docker/1.3.1/py2/Dockerfile.gpu
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/aws/sagemaker-pytorch-training-toolkit/docker/1.3.1/py2/Dockerfile.gpu/repaired.Dockerfile
@@ -10,11 +10,11 @@ ARG CUBLAS_VERSION=10.2.1.243-1_amd64
 
 # Python wonâ€™t try to write .pyc or .pyo files on the import of source modules
 # Force stdin, stdout and stderr to be totally unbuffered. Good for logging
-ENV PYTHONDONTWRITEBYTECODE=1 
-ENV PYTHONUNBUFFERED=1 
-ENV LD_LIBRARY_PATH="${LD_LIBRARY_PATH}:/usr/local/lib" 
-ENV PYTHONIOENCODING=UTF-8 
-ENV LANG=C.UTF-8 
+ENV PYTHONDONTWRITEBYTECODE=1
+ENV PYTHONUNBUFFERED=1
+ENV LD_LIBRARY_PATH="${LD_LIBRARY_PATH}:/usr/local/lib"
+ENV PYTHONIOENCODING=UTF-8
+ENV LANG=C.UTF-8
 ENV LC_ALL=C.UTF-8
 ENV HOROVOD_VERSION=0.16.4
 ENV PATH="$PATH:/home/.openmpi/bin"
@@ -54,10 +54,10 @@ RUN apt-get update \
     cuda-npp-dev-10-1 \
     cuda-nvgraph-dev-10-1 \
     cuda-nvjpeg-dev-10-1 \
-    cuda-nvrtc-dev-10-1
+    cuda-nvrtc-dev-10-1 && rm -rf /var/lib/apt/lists/*;
 
 # CUBLAS compatible with CUDA 10.1 needs to be downloaded and installed.
-# The apt-get package name has changed and using the new name (libcublas10) does 
+# The apt-get package name has changed and using the new name (libcublas10) does
 # not give control over the version that is changed. Version being used here is
 # 10.2.1.243 compliant with CUDA version 10.1.243.
 # CUBLAS versions: https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64/
@@ -74,14 +74,14 @@ COPY sagemaker_pytorch_training.tar.gz /sagemaker_pytorch_training.tar.gz
 RUN wget https://www.open-mpi.org/software/ompi/v4.0/downloads/openmpi-$OPEN_MPI_VERSION.tar.gz \
  && gunzip -c openmpi-$OPEN_MPI_VERSION.tar.gz | tar xf - \
  && cd openmpi-$OPEN_MPI_VERSION \
- && ./configure --prefix=/home/.openmpi \
+ && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/home/.openmpi \
  && make all install \
  && cd .. \
  && rm openmpi-$OPEN_MPI_VERSION.tar.gz \
  && rm -rf openmpi-$OPEN_MPI_VERSION
 
 RUN ompi_info --parsable --all | grep mpi_built_with_cuda_support:value \
- && curl -o ~/miniconda.sh -O  https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh  \
+ && curl -f -o ~/miniconda.sh -O  https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh \
  && chmod +x ~/miniconda.sh \
  && ~/miniconda.sh -b -p /opt/conda \
  && rm ~/miniconda.sh \
@@ -106,7 +106,7 @@ RUN conda install -c pytorch magma-cuda101==2.5.1 \
     Pillow==6.2.0 \
     h5py==2.9.0 \
     requests==2.22.0 \
- && pip install -U \
+ && pip install --no-cache-dir -U \
     scipy==1.2.2 \
     "spyder<4.0" \
     argparse \
@@ -116,7 +116,7 @@ RUN conda install -c pytorch magma-cuda101==2.5.1 \
 # The following section uninstalls torch and torchvision before installing the
 # custom versions from an S3 bucket. This will need to be removed in the future
 RUN /opt/conda/bin/conda config --set ssl_verify False \
- && pip install --upgrade pip --trusted-host pypi.org --trusted-host files.pythonhosted.org \
+ && pip install --no-cache-dir --upgrade pip --trusted-host pypi.org --trusted-host \
     /sagemaker_pytorch_training.tar.gz \
  && pip uninstall torch -y \
  && pip install -U --no-cache-dir \
@@ -148,11 +148,11 @@ RUN apt-get install -y --no-install-recommends openssh-client openssh-server \
  && mkdir -p /var/run/sshd \
  && cat /etc/ssh/ssh_config | grep -v StrictHostKeyChecking > /etc/ssh/ssh_config.new \
  && echo "    StrictHostKeyChecking no" >> /etc/ssh/ssh_config.new \
- && mv /etc/ssh/ssh_config.new /etc/ssh/ssh_config
+ && mv /etc/ssh/ssh_config.new /etc/ssh/ssh_config && rm -rf /var/lib/apt/lists/*;
 
 RUN chmod +x /usr/local/bin/start_with_right_hostname.sh
 
-RUN curl -o /license.txt https://aws-dlc-licenses.s3.amazonaws.com/pytorch/license.txt
+RUN curl -f -o /license.txt https://aws-dlc-licenses.s3.amazonaws.com/pytorch/license.txt
 
 # Starts framework
 ENTRYPOINT ["bash", "-m", "start_with_right_hostname.sh"]