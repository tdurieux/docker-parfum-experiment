diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/aws/sagemaker-pytorch-training-toolkit/docker/1.2.0/py3/Dockerfile.gpu b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/aws/sagemaker-pytorch-training-toolkit/docker/1.2.0/py3/Dockerfile.gpu/repaired.Dockerfile
index 81fdde5..ffca16a 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/aws/sagemaker-pytorch-training-toolkit/docker/1.2.0/py3/Dockerfile.gpu
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/aws/sagemaker-pytorch-training-toolkit/docker/1.2.0/py3/Dockerfile.gpu/repaired.Dockerfile
@@ -29,7 +29,7 @@ RUN apt-get update && apt-get install -y  --allow-downgrades --allow-change-held
         wget \
         vim \
         build-essential \
-        zlib1g-dev
+        zlib1g-dev && rm -rf /var/lib/apt/lists/*;
 
 RUN apt-get remove -y cuda-cufft-dev-10-0 \
         cuda-curand-dev-10-0 \
@@ -49,7 +49,7 @@ ARG OPEN_MPI_VERSION=4.0.1
 RUN wget https://www.open-mpi.org/software/ompi/v4.0/downloads/openmpi-$OPEN_MPI_VERSION.tar.gz && \
     gunzip -c openmpi-$OPEN_MPI_VERSION.tar.gz | tar xf - && \
     cd openmpi-$OPEN_MPI_VERSION && \
-    ./configure --prefix=/home/.openmpi && \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/home/.openmpi && \
     make all install && \
     cd .. && rm openmpi-$OPEN_MPI_VERSION.tar.gz && rm -rf openmpi-$OPEN_MPI_VERSION
 
@@ -57,7 +57,7 @@ ENV PATH="$PATH:/home/.openmpi/bin"
 ENV LD_LIBRARY_PATH="$LD_LIBRARY_PATH:/home/.openmpi/lib/"
 
 RUN ompi_info --parsable --all | grep mpi_built_with_cuda_support:value && \
-    curl -o ~/miniconda.sh -O  https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh  && \
+    curl -f -o ~/miniconda.sh -O  https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh && \
     chmod +x ~/miniconda.sh && \
     ~/miniconda.sh -b -p /opt/conda && \
     rm ~/miniconda.sh && \
@@ -91,12 +91,12 @@ ENV TORCH_NVCC_FLAGS="-Xfatbin -compress-all"
 ENV CMAKE_PREFIX_PATH="$(dirname $(which conda))/../"
 
 RUN pip install --no-cache-dir https://pytorch-deep-learning-container.s3.amazonaws.com/torch-1.2.0-cp36-cp36m-linux_x86_64.whl
-RUN pip install torchvision==$TORCHVISION_VERSION
+RUN pip install --no-cache-dir torchvision==$TORCHVISION_VERSION
 
 WORKDIR /root
 
 RUN /opt/conda/bin/conda config --set ssl_verify False && \
-    pip install --upgrade pip --trusted-host pypi.org --trusted-host files.pythonhosted.org && \
+    pip install --no-cache-dir --upgrade pip --trusted-host pypi.org --trusted-host && \
     ln -s /opt/conda/bin/pip /usr/local/bin/pip3
 
 # Install Horovod
@@ -120,7 +120,7 @@ RUN apt-get install -y --no-install-recommends openssh-client openssh-server &&
     mkdir -p /var/run/sshd && \
     cat /etc/ssh/ssh_config | grep -v StrictHostKeyChecking > /etc/ssh/ssh_config.new && \
     echo "    StrictHostKeyChecking no" >> /etc/ssh/ssh_config.new && \
-    mv /etc/ssh/ssh_config.new /etc/ssh/ssh_config
+    mv /etc/ssh/ssh_config.new /etc/ssh/ssh_config && rm -rf /var/lib/apt/lists/*;
 
 # Python wonâ€™t try to write .pyc or .pyo files on the import of source modules
 # Force stdin, stdout and stderr to be totally unbuffered. Good for logging