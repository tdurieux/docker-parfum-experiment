{
  "startTime": 1674218232119,
  "endTime": 1674218233473,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 100
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 91
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 39
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04\n\nLABEL maintainer=\"Amazon AI\"\n\nLABEL com.amazonaws.sagemaker.capabilities.accept-bind-to-port=true\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n    ca-certificates \\\n    cmake \\\n    curl \\\n    git \\\n    wget \\\n    vim \\\n    build-essential \\\n    jq \\\n    libglib2.0-0 \\\n    libgl1-mesa-glx \\\n    libsm6 \\\n    libxext6 \\\n    libxrender-dev \\\n    zlib1g-dev \\\n    && rm -rf /var/lib/apt/lists/*\n\n# See http://bugs.python.org/issue19846\nENV LANG C.UTF-8\n\n# Add arguments to achieve the version, python and url\nARG PYTHON_VERSION=3.6.6\nARG OPEN_MPI_VERSION=4.0.1\n\nRUN wget https://www.open-mpi.org/software/ompi/v4.0/downloads/openmpi-$OPEN_MPI_VERSION.tar.gz && \\\n    gunzip -c openmpi-$OPEN_MPI_VERSION.tar.gz | tar xf - && \\\n    cd openmpi-$OPEN_MPI_VERSION && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/home/.openmpi && \\\n    make all install && \\\n    cd .. && rm openmpi-$OPEN_MPI_VERSION.tar.gz && rm -rf openmpi-$OPEN_MPI_VERSION\n\nENV PATH=\"$PATH:/home/.openmpi/bin\"\nENV LD_LIBRARY_PATH=\"$LD_LIBRARY_PATH:/home/.openmpi/lib/\"\n\nRUN ompi_info --parsable --all | grep mpi_built_with_cuda_support:value\n\nRUN curl -f -o ~/miniconda.sh -O  https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh && \\\n     chmod +x ~/miniconda.sh && \\\n     ~/miniconda.sh -b -p /opt/conda && \\\n     rm ~/miniconda.sh && \\\n     /opt/conda/bin/conda update conda && \\\n     /opt/conda/bin/conda install -y python=$PYTHON_VERSION \\\n     numpy==1.16.4 \\\n     scipy==1.3.0 \\\n     ipython==7.7.0 \\\n     mkl==2019.4 \\\n     mkl-include==2019.4 \\\n     cython==0.29.12 \\\n     typing==3.6.4 && \\\n     /opt/conda/bin/conda clean -ya\nENV PATH /opt/conda/bin:$PATH\n\nARG PYTORCH_VERSION=1.2.0\nARG TORCHVISION_VERSION=0.4.0\nRUN conda install -c conda-forge awscli==1.16.210 opencv==4.0.1 && \\\n    conda install -y scikit-learn==0.21.2 \\\n                     pandas==0.25.0 \\\n                     pillow==5.4.1 \\\n                     h5py==2.9.0 \\\n                     requests==2.22.0 && \\\n    conda install pytorch==$PYTORCH_VERSION torchvision==$TORCHVISION_VERSION cpuonly -c pytorch && \\\n    conda clean -ya && \\\n    pip install --no-cache-dir --upgrade pip --trusted-host pypi.org --trusted-host && \\\n    ln -s /opt/conda/bin/pip /usr/local/bin/pip3\n\n# Python wonâ€™t try to write .pyc or .pyo files on the import of source modules\n# Force stdin, stdout and stderr to be totally unbuffered. Good for logging\nENV PYTHONDONTWRITEBYTECODE=1 \\\n    PYTHONUNBUFFERED=1 \\\n    LD_LIBRARY_PATH=\"${LD_LIBRARY_PATH}:/usr/local/lib\" \\\n    PYTHONIOENCODING=UTF-8 \\\n    LANG=C.UTF-8 \\\n    LC_ALL=C.UTF-8\n\nRUN pip install --no-cache-dir fastai==1.0.39\n\nWORKDIR /\n\n# Copy workaround script for incorrect hostname\nCOPY lib/changehostname.c /\nCOPY lib/start_with_right_hostname.sh /usr/local/bin/start_with_right_hostname.sh\n\nRUN chmod +x /usr/local/bin/start_with_right_hostname.sh\n\nCOPY sagemaker_pytorch_container-1.2-py2.py3-none-any.whl /sagemaker_pytorch_container-1.2-py2.py3-none-any.whl\nRUN pip install --no-cache-dir /sagemaker_pytorch_container-1.2-py2.py3-none-any.whl && \\\n    rm /sagemaker_pytorch_container-1.2-py2.py3-none-any.whl\n\nENV SAGEMAKER_TRAINING_MODULE sagemaker_pytorch_container.training:main\n\n# Starts framework\nENTRYPOINT [\"bash\", \"-m\", \"start_with_right_hostname.sh\"]\nCMD [\"/bin/bash\"]\n"
}