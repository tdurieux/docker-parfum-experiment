{
  "startTime": 1674218944972,
  "endTime": 1674218945702,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 36,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 60
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 39,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 108
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG TFS_VERSION\n\nFROM tensorflow/serving:${TFS_VERSION}-gpu as tfs\nFROM nvidia/cuda:9.0-base-ubuntu16.04\nLABEL com.amazonaws.sagemaker.capabilities.accept-bind-to-port=true\n\nCOPY --from=tfs /usr/bin/tensorflow_model_server /usr/bin/tensorflow_model_server\n\n# https://github.com/tensorflow/serving/blob/1.12.0/tensorflow_serving/tools/docker/Dockerfile.gpu\nENV NCCL_VERSION=2.2.13\nENV CUDNN_VERSION=7.2.1.38\nENV TF_TENSORRT_VERSION=4.1.2\n\nRUN \\\n    apt-get update && apt-get install -y --no-install-recommends \\\n        ca-certificates \\\n        cuda-command-line-tools-9-0 \\\n        cuda-command-line-tools-9-0 \\\n        cuda-cublas-9-0 \\\n        cuda-cufft-9-0 \\\n        cuda-curand-9-0 \\\n        cuda-cusolver-9-0 \\\n        cuda-cusparse-9-0 \\\n        libcudnn7=${CUDNN_VERSION}-1+cuda9.0 \\\n        libnccl2=${NCCL_VERSION}-1+cuda9.0 \\\n        libgomp1 && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/*\n\n# The 'apt-get install' of nvinfer-runtime-trt-repo-ubuntu1604-4.0.1-ga-cuda9.0\n# adds a new list which contains libnvinfer library, so it needs another\n# 'apt-get update' to retrieve that list before it can actually install the\n# library.\n# We don't install libnvinfer-dev since we don't need to build against TensorRT,\n# and libnvinfer4 doesn't contain libnvinfer.a static library.\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        nvinfer-runtime-trt-repo-ubuntu1604-4.0.1-ga-cuda9.0 && \\\n    apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        libnvinfer4=${TF_TENSORRT_VERSION}-1+cuda9.0 && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    rm /usr/lib/x86_64-linux-gnu/libnvinfer_plugin* && \\\n    rm /usr/lib/x86_64-linux-gnu/libnvcaffe_parser* && \\\n    rm /usr/lib/x86_64-linux-gnu/libnvparsers*\n\n# nginx + njs\nRUN \\\n    apt-get update && \\\n    apt-get -y install --no-install-recommends curl && \\\n    curl -f -s https://nginx.org/keys/nginx_signing.key | apt-key add - && \\\n    echo 'deb http://nginx.org/packages/ubuntu/ xenial nginx' >> /etc/apt/sources.list && \\\n    apt-get update && \\\n    apt-get -y install --no-install-recommends nginx nginx-module-njs python3 python3-pip python3-setuptools && \\\n    apt-get clean && rm -rf /var/lib/apt/lists/*;\n\n# cython, falcon, gunicorn, tensorflow-serving\nRUN \\\n    pip3 install --no-cache-dir cython falcon gunicorn gevent requests grpcio protobuf && \\\n    pip3 install --no-dependencies --no-cache-dir tensorflow-serving-api==1.12.0\n\nCOPY ./ /\n\n\nARG TFS_SHORT_VERSION\nENV SAGEMAKER_TFS_VERSION \"${TFS_SHORT_VERSION}\"\nENV PATH \"$PATH:/sagemaker\"\n"
}