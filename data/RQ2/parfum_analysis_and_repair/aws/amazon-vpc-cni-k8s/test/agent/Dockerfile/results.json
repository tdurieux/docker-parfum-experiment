{
  "startTime": 1674250966488,
  "endTime": 1674250967560,
  "originalSmells": [
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 27
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM public.ecr.aws/docker/library/golang:1.17-stretch as builder\n\nWORKDIR /workspace\nENV GOPROXY direct\n\nCOPY go.mod go.mod\nCOPY go.sum go.sum\n\nRUN go mod download\n\nCOPY cmd cmd\nCOPY pkg pkg\n\n# Package all testing binaries into one docker file\n# which can be used for different test scenarios\n\nRUN CGO_ENABLED=0 GOOS=linux GO111MODULE=on go build \\\n    -a -o traffic-server cmd/traffic-server/main.go\n\nRUN CGO_ENABLED=0 GOOS=linux GO111MODULE=on go build \\\n    -a -o traffic-client cmd/traffic-client/main.go\n\nRUN CGO_ENABLED=0 GOOS=linux GO111MODULE=on go build \\\n    -a -o networking cmd/networking/main.go\n\nRUN CGO_ENABLED=0 GOOS=linux GO111MODULE=on go build \\\n    -a -o metric-server cmd/metric-server/main.go\n\nRUN CGO_ENABLED=0 GOOS=linux GO111MODULE=on go build \\\n    -a -o snat-utils cmd/snat-utils/main.go\n\nFROM public.ecr.aws/amazonlinux/amazonlinux:2\nRUN yum update -y && \\\n    yum install -y iptables && \\\n    yum clean all && rm -rf /var/cache/yum\n\nWORKDIR /\nCOPY --from=builder /workspace/ .\n"
}