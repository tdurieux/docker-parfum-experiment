{
  "startTime": 1674219482811,
  "endTime": 1674219484110,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 68
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 48
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 52,
        "columnEnd": 68
      }
    }
  ],
  "repairedDockerfile": "# The correct AWS SAM build image based on the runtime of the function will be\n# passed as build arg. The default allows to do `docker build .` when testing.\nARG IMAGE=public.ecr.aws/sam/build-nodejs14.x\nFROM $IMAGE\n\n# Install yarn\nRUN npm install --global yarn@1.22.5 && npm cache clean --force;\n\n# Install pnpm\nRUN npm install --global pnpm && npm cache clean --force;\n\n# Install typescript\nRUN npm install --global typescript && npm cache clean --force;\n\n# Install esbuild\n# (unsafe-perm because esbuild has a postinstall script)\nARG ESBUILD_VERSION=0\nRUN npm install --global --unsafe-perm=true esbuild@$ESBUILD_VERSION && npm cache clean --force;\n\n# Ensure all users can write to npm cache\nRUN mkdir /tmp/npm-cache && \\\n    chmod -R 777 /tmp/npm-cache && \\\n    npm config --global set cache /tmp/npm-cache\n\n# Ensure all users can write to yarn cache\nRUN mkdir /tmp/yarn-cache && \\\n    chmod -R 777 /tmp/yarn-cache && \\\n    yarn config set cache-folder /tmp/yarn-cache && yarn cache clean;\n\n# Disable npm update notifications\nRUN npm config --global set update-notifier false\n\n# create non root user and change allow execute command for non root user\nRUN /sbin/useradd -u 1000 user && chmod 711 /\n\nCMD [ \"esbuild\" ]\n"
}