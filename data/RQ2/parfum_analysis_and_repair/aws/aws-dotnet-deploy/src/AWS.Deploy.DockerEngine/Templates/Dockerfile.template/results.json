{
  "startTime": 1674255852982,
  "endTime": 1674255854073,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 7,
        "columnEnd": 53
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 7,
        "columnEnd": 37
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 7,
        "columnEnd": 33
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 7,
        "columnEnd": 37
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 7,
        "columnEnd": 33
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM {docker-base-image} AS base\nWORKDIR /app\nEXPOSE 80\nEXPOSE 443\n\nFROM {docker-build-image} AS build\nWORKDIR /src\n{project-path-list}\nRUN dotnet restore \"{project-path}\"\nCOPY . .\nWORKDIR \"/src/{project-folder}\"\nRUN dotnet build \"{project-name}\" -c Release -o /app/build\n\nFROM build AS publish\nRUN apt-get update -yq \\\n    && apt-get install --no-install-recommends curl gnupg -yq \\\n    && curl -f -sL https://deb.nodesource.com/setup_14.x | bash \\\n    && apt-get install --no-install-recommends nodejs -yq && rm -rf /var/lib/apt/lists/*;\nRUN dotnet publish \"{project-name}\" -c Release -o /app/publish\n\nFROM base AS final\nWORKDIR /app\nCOPY --from=publish /app/publish .\nENTRYPOINT [\"dotnet\", \"{assembly-name}.dll\"]\n"
}