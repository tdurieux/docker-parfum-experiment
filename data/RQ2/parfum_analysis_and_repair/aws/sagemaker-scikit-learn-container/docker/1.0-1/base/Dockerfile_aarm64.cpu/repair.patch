diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/aws/sagemaker-scikit-learn-container/docker/1.0-1/base/Dockerfile_aarm64.cpu b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/aws/sagemaker-scikit-learn-container/docker/1.0-1/base/Dockerfile_aarm64.cpu/repaired.Dockerfile
index 6df6746..c1e7655 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/aws/sagemaker-scikit-learn-container/docker/1.0-1/base/Dockerfile_aarm64.cpu
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/aws/sagemaker-scikit-learn-container/docker/1.0-1/base/Dockerfile_aarm64.cpu/repaired.Dockerfile
@@ -5,7 +5,7 @@ FROM ubuntu:${UBUNTU_VERSION}@sha256:${UBUNTU_IMAGE_DIGEST}
 
 ARG MINICONDA_VERSION=4.9.2 # Upgraded version
 ARG CONDA_PY_VERSION=38
-ARG CONDA_PKG_VERSION=4.10.1 
+ARG CONDA_PKG_VERSION=4.10.1
 ARG PYTHON_VERSION=3.8.13
 ARG PYARROW_VERSION=1.0
 ARG MLIO_VERSION=arch-agnostic
@@ -40,13 +40,13 @@ RUN apt-get update && \
     # Official Ubuntu APT repositories do not contain an up-to-date version of CMake required to build MLIO.
     # Kitware contains the latest version of CMake.
     wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null | \
-        gpg --dearmor - | \
+        gpg --batch --dearmor - | \
         tee /etc/apt/trusted.gpg.d/kitware.gpg >/dev/null && \
     apt-add-repository 'deb https://apt.kitware.com/ubuntu/ bionic main' && \
     wget https://cmake.org/files/v3.18/cmake-3.18.4.tar.gz && \
     tar -xzvf cmake-3.18.4.tar.gz && \
     cd cmake-3.18.4 && \
-    ./configure && \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" && \
     make -j$(nproc) && \
     make install && \
     apt-get update && \
@@ -64,10 +64,10 @@ RUN apt-get update && \
         zlib1g-dev \
         && \
     rm /etc/apt/trusted.gpg.d/kitware.gpg && \
-    rm -rf /var/lib/apt/lists/*
+    rm -rf /var/lib/apt/lists/* && rm cmake-3.18.4.tar.gz
 
 RUN cd /tmp && \
-    curl -L --output /tmp/Miniconda3.sh https://repo.anaconda.com/miniconda/Miniconda3-py${CONDA_PY_VERSION}_${MINICONDA_VERSION}-Linux-aarch64.sh && \
+    curl -f -L --output /tmp/Miniconda3.sh https://repo.anaconda.com/miniconda/Miniconda3-py${CONDA_PY_VERSION}_${MINICONDA_VERSION}-Linux-aarch64.sh && \
     bash /tmp/Miniconda3.sh -bfp /miniconda3 && \
     rm /tmp/Miniconda3.sh