{
  "startTime": 1674216048067,
  "endTime": 1674216049386,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 99
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 92,
        "lineEnd": 92,
        "columnStart": 4,
        "columnEnd": 86
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 4,
        "columnEnd": 91
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 4,
        "columnEnd": 104
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 4,
        "columnEnd": 106
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 79,
        "lineEnd": 79,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 95,
        "lineEnd": 97,
        "columnStart": 4,
        "columnEnd": 10
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 40,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 20,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 40,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 18
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 40,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 18
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:16.04\nLABEL maintainer=\"Amazon AI\"\nLABEL com.amazonaws.sagemaker.capabilities.accept-bind-to-port=true\n\n# Add arguments to achieve the version, python and url\nARG PYTHON_VERSION=3.6.6\nARG PYTORCH_VERSION=1.3.1\nARG TORCHVISION_VERSION=0.4.2\nARG GRAPHVIZ_VERSION=0.13.2\nARG MMS_VERSION=1.0.8\nARG HEALTH_CHECK_VERSION=1.6.2\n\n# See http://bugs.python.org/issue19846\nENV LANG C.UTF-8\nENV LD_LIBRARY_PATH /opt/conda/lib/:$LD_LIBRARY_PATH\nENV PATH /opt/conda/bin:$PATH\nENV SAGEMAKER_SERVING_MODULE sagemaker_pytorch_serving_container.serving:main\nENV TEMP=/home/model-server/tmp\n\nRUN apt-get update \\\n && apt-get install -y --allow-downgrades --allow-change-held-packages --no-install-recommends \\\n    build-essential \\\n    ca-certificates \\\n    cmake \\\n    curl \\\n    git \\\n    jq \\\n    libgl1-mesa-glx \\\n    libglib2.0-0 \\\n    libgomp1 \\\n    libibverbs-dev \\\n    libsm6 \\\n    libxext6 \\\n    libxrender-dev \\\n    openjdk-8-jdk-headless \\\n    vim \\\n    wget \\\n    zlib1g-dev && rm -rf /var/lib/apt/lists/*;\n\n# Install OpenSSH. Allow OpenSSH to talk to containers without asking for confirmation\nRUN apt-get install -y --no-install-recommends \\\n    openssh-client \\\n    openssh-server \\\n && mkdir -p /var/run/sshd \\\n && cat /etc/ssh/ssh_config | grep -v StrictHostKeyChecking > /etc/ssh/ssh_config.new \\\n && echo \"    StrictHostKeyChecking no\" >> /etc/ssh/ssh_config.new \\\n && mv /etc/ssh/ssh_config.new /etc/ssh/ssh_configs && rm -rf /var/lib/apt/lists/*;\n\nRUN curl -f -L -o ~/miniconda.sh https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh \\\n && chmod +x ~/miniconda.sh \\\n && ~/miniconda.sh -b -p /opt/conda \\\n && rm ~/miniconda.sh \\\n && /opt/conda/bin/conda update conda \\\n && /opt/conda/bin/conda install -y \\\n    python=$PYTHON_VERSION \\\n    cython==0.29.12 \\\n    ipython==7.7.0 \\\n    numpy==1.16.4 \\\n    scipy==1.3.0 \\\n    typing==3.6.4 \\\n && /opt/conda/bin/conda clean -ya\n\nRUN conda install -c \\\n    conda-forge \\\n    opencv==4.0.1 \\\n && conda install -y \\\n    scikit-learn==0.21.2 \\\n    pandas==0.25.0 \\\n    h5py==2.9.0 \\\n    requests==2.22.0 \\\n && conda clean -ya \\\n && /opt/conda/bin/conda config --set ssl_verify False \\\n && pip install --no-cache-dir --upgrade pip --trusted-host pypi.org --trusted-host \\\n && ln -s /opt/conda/bin/pip /usr/local/bin/pip3 \\\n # Torchvision wheel must be installed first, so that PyTorch-EI framework is not overwritten.\n && pip install --no-cache-dir https://download.pytorch.org/whl/cpu/torchvision-0.4.2%2Bcpu-cp36-cp36m-linux_x86_64.whl \\\n && pip install --no-cache-dir https://s3.amazonaws.com/amazonei-pytorch/torch_eia-1.3.1-cp36-cp36m-manylinux1_x86_64.whl \\\n && pip install --no-cache-dir graphviz==$GRAPHVIZ_VERSION \\\n && pip install --no-cache-dir mxnet-model-server==$MMS_VERSION \\\n && pip install --no-cache-dir pillow==7.1.0\n\nRUN useradd -m model-server \\\n && mkdir -p /home/model-server/tmp \\\n && chown -R model-server /home/model-server\n\nCOPY mms-entrypoint.py /usr/local/bin/dockerd-entrypoint.py\nCOPY config.properties /home/model-server\n\nRUN chmod +x /usr/local/bin/dockerd-entrypoint.py\n\nRUN pip install --no-cache-dir \"sagemaker-pytorch-inference<2\"\n\nRUN curl -f https://aws-dlc-licenses.s3.amazonaws.com/pytorch/license.txt -o /license.txt\n\nRUN conda install -y -c conda-forge pyyaml==5.3.1 \\\n && pip install --no-cache-dir -U \\\n    sagemaker-containers==2.8.6 \\\n    awscli\n\nRUN wget https://amazonei-tools.s3.amazonaws.com/v${HEALTH_CHECK_VERSION}/ei_tools_${HEALTH_CHECK_VERSION}.tar.gz -O /opt/ei_tools_${HEALTH_CHECK_VERSION}.tar.gz \\\n && tar -xvf /opt/ei_tools_${HEALTH_CHECK_VERSION}.tar.gz -C /opt/ \\\n && rm -rf /opt/ei_tools_${HEALTH_CHECK_VERSION}.tar.gz \\\n && chmod a+x /opt/ei_tools/bin/health_check \\\n && mkdir -p /opt/ei_health_check/bin \\\n && ln -s /opt/ei_tools/bin/health_check /opt/ei_health_check/bin/health_check \\\n && ln -s /opt/ei_tools/lib /opt/ei_health_check/lib\n\nEXPOSE 8080 8081\nENTRYPOINT [\"python\", \"/usr/local/bin/dockerd-entrypoint.py\"]\nCMD [\"mxnet-model-server\", \"--start\", \"--mms-config\", \"/home/model-server/config.properties\"]\n"
}