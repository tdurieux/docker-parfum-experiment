{
  "startTime": 1674215021688,
  "endTime": 1674215022470,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 100
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 91
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 20,
        "columnStart": 22,
        "columnEnd": 26
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04\n\nLABEL maintainer=\"Amazon AI\"\nLABEL com.amazonaws.sagemaker.capabilities.accept-bind-to-port=true\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n    ca-certificates \\\n    cmake \\\n    curl \\\n    git \\\n    wget \\\n    vim \\\n    jq \\\n    libsm6 \\\n    libxext6 \\\n    libxrender-dev \\\n    build-essential \\\n    zlib1g-dev \\\n    libglib2.0-0 \\\n    libgl1-mesa-glx \\\n    openjdk-8-jdk-headless && rm -rf /var/lib/apt/lists/*;\n\n# See http://bugs.python.org/issue19846\nENV LANG C.UTF-8\n\n# Add arguments to achieve the version, python and url\nARG PYTHON_VERSION=2.7\n\nRUN curl -f -o ~/miniconda.sh -O  https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh && \\\n     chmod +x ~/miniconda.sh && \\\n     ~/miniconda.sh -b -p /opt/conda && \\\n     rm ~/miniconda.sh && \\\n     /opt/conda/bin/conda update conda && \\\n     /opt/conda/bin/conda install -y python=$PYTHON_VERSION \\\n     numpy==1.16.4 \\\n     scipy==1.2.1 \\\n     ipython==5.8.0 \\\n     mkl==2019.4 \\\n     mkl-include==2019.4 \\\n     cython==0.29.12 \\\n     typing==3.7.4 && \\\n     /opt/conda/bin/conda clean -ya\nENV PATH /opt/conda/bin:$PATH\n\nARG PYTORCH_VERSION=1.2.0\nARG TORCHVISION_VERSION=0.4.0\nARG MMS_VERSION=1.0.7\nRUN conda install -c conda-forge awscli==1.16.210 opencv==4.0.1 && \\\n    conda install -y scikit-learn==0.20.3 \\\n                     pandas==0.24.2 \\\n                     pillow==6.1.0 \\\n                     h5py==2.9.0 \\\n                     requests==2.22.0 && \\\n    conda install pytorch==$PYTORCH_VERSION torchvision==$TORCHVISION_VERSION cpuonly -c pytorch && \\\n    conda clean -ya && \\\n    pip install --no-cache-dir --upgrade pip --trusted-host pypi.org --trusted-host && \\\n    pip install --no-cache-dir mxnet-model-server==$MMS_VERSION\n\nRUN useradd -m model-server \\\n    && mkdir -p /home/model-server/tmp \\\n    && chown -R model-server /home/model-server\n\nCOPY docker/$PYTORCH_VERSION/py2/mms-entrypoint.py /usr/local/bin/dockerd-entrypoint.py\nCOPY docker/$PYTORCH_VERSION/py2/config.properties /home/model-server\n\nRUN chmod +x /usr/local/bin/dockerd-entrypoint.py\n\nCOPY dist/sagemaker_pytorch_serving_container-1.2-py2.py3-none-any.whl /sagemaker_pytorch_serving_container-1.2-py2.py3-none-any.whl\nRUN pip install --no-cache-dir /sagemaker_pytorch_serving_container-1.2-py2.py3-none-any.whl && \\\n    rm /sagemaker_pytorch_serving_container-1.2-py2.py3-none-any.whl\n\nENV SAGEMAKER_SERVING_MODULE sagemaker_pytorch_serving_container.serving:main\n\nEXPOSE 8080 8081\nENV TEMP=/home/model-server/tmp\nENTRYPOINT [\"python\", \"/usr/local/bin/dockerd-entrypoint.py\"]\nCMD [\"mxnet-model-server\", \"--start\", \"--mms-config\", \"/home/model-server/config.properties\"]\n"
}