{
  "startTime": 1674252678787,
  "endTime": 1674252679525,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 2,
        "columnEnd": 86
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG UBUNTU_VERSION=18.04\n\nFROM ubuntu:${UBUNTU_VERSION}\n\nWORKDIR /opt/s2n\n\nARG GCC_VERSION=9\nARG ZSH_THEME=cypher\n\nENV GCC_VERSION=${GCC_VERSION} \\\n    BUILD_S2N=true \\\n    S2N_COVERAGE=false \\\n    TESTS=integration \\\n    LATEST_CLANG=true\n\n# The `s2n_setup_env` assumes bash, not sh\nSHELL [\"/bin/bash\", \"-c\"]\n\n# set up user account\nRUN set -eux; \\\n  apt-get update; \\\n  apt-get -y install --no-install-recommends\\\n     curl sudo zsh unzip gnupg2 software-properties-common python-pip rubygems wget; \\\n  gem install bundler; \\\n  useradd -m s2n-dev; \\\n  echo \"s2n-dev ALL=(ALL) NOPASSWD:ALL\" > /etc/sudoers.d/s2n-dev; \\\n  chmod 0440 /etc/sudoers.d/s2n-dev; \\\n  mkdir -p /home/s2n-dev/s2n; \\\n  curl -f -L https://github.com/ohmyzsh/ohmyzsh/archive/master.zip -o /tmp/oh-my-zsh.zip; \\\n  unzip /tmp/oh-my-zsh.zip -d /tmp; \\\n  mkdir -p /home/s2n-dev/.zsh/plugins; \\\n  mkdir -p /home/s2n-dev/.zsh/themes; \\\n  cp /tmp/ohmyzsh-master/oh-my-zsh.sh /home/s2n-dev/.zsh/init.sh; \\\n  cp -R /tmp/ohmyzsh-master/lib /home/s2n-dev/.zsh; \\\n  cp /tmp/ohmyzsh-master/themes/${ZSH_THEME}.zsh-theme /home/s2n-dev/.zsh/themes/theme.zsh-theme; \\\n  rm -rf /tmp/oh-my-zsh.zip /tmp/ohmyzsh-master; \\\n  echo $'# ZSH setup\\n\\\n  export DISABLE_UPDATE_PROMPT=true\\n\\\n  export DISABLE_AUTO_UPDATE=true\\n\\\n  export ZSH=\"/home/s2n-dev/.zsh\"\\n\\\n  export ZSH_THEME=\"theme\"\\n\\\n  plugins=()\\n\\\n  source $ZSH/init.sh\\n\\\n  \\n\\\n  # s2n setup\\n\\\n  export BUILD_S2N=true\\n\\\n  export GCC_VERSION='\"$GCC_VERSION\"$'\\n\\\n  export TESTS=integration\\n\\\n  export TEST_DEPS_DIR=/opt/s2n/test-deps\\n\\\n  export PATH=$TEST_DEPS_DIR/clang/bin:$PATH\\n\\\n  cd /home/s2n-dev/s2n && source /opt/s2n/codebuild/bin/s2n_setup_env.sh\\n\\\n  ' > /home/s2n-dev/.zshrc; \\\n  chown -R s2n-dev:s2n-dev /home/s2n-dev; \\\n  rm -rf /var/lib/apt/lists/*; \\\n  apt-get clean; \\\n  rm -rf /tmp/*; \\\n  echo done\n\nADD codebuild codebuild\n\n# install dependencies\nRUN set -eux; \\\n  export LD_LIBRARY_PATH=\"\"; \\\n  . codebuild/bin/s2n_setup_env.sh; \\\n  export PATH=$TEST_DEPS_DIR/clang/bin:$PATH; \\\n  TESTS=integration codebuild/bin/s2n_install_test_dependencies.sh; \\\n  TESTS=benchmark codebuild/bin/s2n_install_test_dependencies.sh; \\\n  TESTS=fuzz codebuild/bin/s2n_install_test_dependencies.sh; \\\n  TESTS=unit BUILD_S2N=false S2N_LIBCRYPTO=openssl-1.0.2 codebuild/bin/install_default_dependencies.sh; \\\n  TESTS=unit BUILD_S2N=false S2N_LIBCRYPTO=openssl-1.0.2-fips codebuild/bin/install_default_dependencies.sh; \\\n  TESTS=unit BUILD_S2N=false S2N_LIBCRYPTO=libressl codebuild/bin/install_default_dependencies.sh; \\\n  TESTS=unit BUILD_S2N=false S2N_LIBCRYPTO=boringssl codebuild/bin/install_default_dependencies.sh; \\\n  rm -rf /var/lib/apt/lists/*; \\\n  apt-get clean; \\\n  rm -rf /tmp/*; \\\n  echo done\n\nARG OPENSSL_VERSION=openssl-1.1.1\nENV S2N_LIBCRYPTO=${OPENSSL_VERSION}\n\nUSER s2n-dev\nWORKDIR /home/s2n-dev/s2n\nCMD [\"/bin/zsh\",\"-l\"]\n"
}