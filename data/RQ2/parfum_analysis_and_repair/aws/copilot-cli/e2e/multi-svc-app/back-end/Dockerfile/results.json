{
  "startTime": 1674248325034,
  "endTime": 1674248325736,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 16
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# We specify the base image we need for our\n# go application\nFROM golang:1.15 AS builder\n# We create an /app directory within our\n# image that will hold our application source\n# files\nRUN mkdir /app\n# We copy everything in the root directory\n# into our /app directory\nADD . /app\n# We specify that we now wish to execute\n# any further commands inside our /app\n# directory\nWORKDIR /app\n# Avoid the GoProxy\nENV GOPROXY=direct\n# we run go build to compile the binary\n# executable of our Go program\nRUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64  go build -o e2e-service ./\n\n# To make our images smaller, use alpine and copy in the service binary.\nFROM alpine:latest\n# curl is needed for container healthchecks.\nRUN apk update\nRUN apk add --no-cache curl\n# Install certs\nRUN apk --no-cache add ca-certificates\n# Copy the binary from the builder image\nCOPY --from=builder /app ./\n# Make the binary executable\nRUN chmod +x ./e2e-service\n# Start the service\nENTRYPOINT [\"./e2e-service\"]\n# The service runs on port 80\nEXPOSE 80\n# The service performs a health check every 1 minute\nHEALTHCHECK --interval=1m --timeout=3s \\\n  CMD curl -f http://localhost/ || exit 1\n"
}