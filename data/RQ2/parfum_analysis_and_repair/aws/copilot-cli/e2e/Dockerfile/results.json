{
  "startTime": 1674249623926,
  "endTime": 1674249624588,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 132,
        "columnEnd": 182
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 66,
        "columnEnd": 117
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 18,
        "columnEnd": 69
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM docker:20.10.13-dind\n\nARG GOLANG_VERSION=1.18\n\n# Docker needs somewhere to put creds from docker login.\nRUN wget https://github.com/docker/docker-credential-helpers/releases/download/v0.6.0/docker-credential-pass-v0.6.0-amd64.tar.gz && tar -xf docker-credential-pass-v0.6.0-amd64.tar.gz && chmod +x docker-credential-pass && mv docker-credential-pass /bin && rm docker-credential-pass-v0.6.0-amd64.tar.gz\nENV DOCKER_HOST=tcp://127.0.0.1:2375\nENV GOBIN /go/bin\n\n# Install Go, Git and other dependencies so we can run ginkgo\nRUN apk update && apk add --no-cache bash gcc musl-dev openssl go git aws-cli jq\n\n# Upgrade go to $GOLANG_VERSION. The version that's available in the base image is \"go1.13.15 linux/amd64\" by default.\nRUN wget https://dl.google.com/go/go$GOLANG_VERSION.src.tar.gz && tar -C /usr/local -xzf go$GOLANG_VERSION.src.tar.gz && rm go$GOLANG_VERSION.src.tar.gz\nRUN cd /usr/local/go/src && ./make.bash\nENV PATH=$PATH:/usr/local/go/bin\nRUN rm go$GOLANG_VERSION.src.tar.gz\nRUN apk del go\n\nRUN go install github.com/onsi/ginkgo/ginkgo@latest\n\n# Copy the binary\nADD bin/local/copilot-linux-amd64 /bin/copilot\n\n# Add the e2e directory and the project go.mod\nADD e2e/ github.com/aws/copilot-cli/e2e/\nADD go.mod github.com/aws/copilot-cli/\nADD go.sum github.com/aws/copilot-cli/\n\n# Startup script which inits dockerd and then runs the e2e tests\nCOPY e2e/e2e.sh /bin/\n\nENTRYPOINT [\"/bin/e2e.sh\"]\n"
}