diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/aws/aws-sam-cli-app-templates/provided.al2/graalvm/java11/cookiecutter-aws-sam-graalvm-maven/{{cookiecutter.project_name}}/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/aws/aws-sam-cli-app-templates/provided.al2/graalvm/java11/cookiecutter-aws-sam-graalvm-maven/{{cookiecutter.project_name}}/Dockerfile/repaired.Dockerfile
index 9a27a5f..653b7b3 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/aws/aws-sam-cli-app-templates/provided.al2/graalvm/java11/cookiecutter-aws-sam-graalvm-maven/{{cookiecutter.project_name}}/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/aws/aws-sam-cli-app-templates/provided.al2/graalvm/java11/cookiecutter-aws-sam-graalvm-maven/{{cookiecutter.project_name}}/Dockerfile/repaired.Dockerfile
@@ -11,7 +11,7 @@ ENV JAVA_VERSION java11
 ENV GRAAL_VERSION 22.1.0
 ENV GRAAL_FOLDERNAME graalvm-ce-${JAVA_VERSION}-${GRAAL_VERSION}
 ENV GRAAL_FILENAME graalvm-ce-${JAVA_VERSION}-linux-amd64-${GRAAL_VERSION}.tar.gz
-RUN curl -4 -L https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-${GRAAL_VERSION}/${GRAAL_FILENAME} | tar -xvz
+RUN curl -f -4 -L https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-${GRAAL_VERSION}/${GRAAL_FILENAME} | tar -xvz
 RUN mv $GRAAL_FOLDERNAME /usr/lib/graalvm
 RUN rm -rf $GRAAL_FOLDERNAME
 
@@ -19,15 +19,15 @@ RUN rm -rf $GRAAL_FOLDERNAME
 ENV MVN_VERSION 3.8.6
 ENV MVN_FOLDERNAME apache-maven-${MVN_VERSION}
 ENV MVN_FILENAME apache-maven-${MVN_VERSION}-bin.tar.gz
-RUN curl -4 -L https://dlcdn.apache.org/maven/maven-3/${MVN_VERSION}/binaries/${MVN_FILENAME} | tar -xvz
+RUN curl -f -4 -L https://dlcdn.apache.org/maven/maven-3/${MVN_VERSION}/binaries/${MVN_FILENAME} | tar -xvz
 RUN mv $MVN_FOLDERNAME /usr/lib/maven
 RUN rm -rf $MVN_FOLDERNAME
 
 # AWS Lambda Builders
 RUN amazon-linux-extras enable python3.8
-RUN yum clean metadata && yum -y install python3.8
-RUN curl -L get-pip.io | python3.8
-RUN pip3 install aws-lambda-builders
+RUN yum clean metadata && yum -y install python3.8 && rm -rf /var/cache/yum
+RUN curl -f -L get-pip.io | python3.8
+RUN pip3 install --no-cache-dir aws-lambda-builders
 
 VOLUME /project
 WORKDIR /project