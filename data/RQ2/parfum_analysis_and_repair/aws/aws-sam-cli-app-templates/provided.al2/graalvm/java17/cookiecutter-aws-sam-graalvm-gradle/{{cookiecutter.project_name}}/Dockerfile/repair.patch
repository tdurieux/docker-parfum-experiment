diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/aws/aws-sam-cli-app-templates/provided.al2/graalvm/java17/cookiecutter-aws-sam-graalvm-gradle/{{cookiecutter.project_name}}/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/aws/aws-sam-cli-app-templates/provided.al2/graalvm/java17/cookiecutter-aws-sam-graalvm-gradle/{{cookiecutter.project_name}}/Dockerfile/repaired.Dockerfile
index eb320e5..e4aa4ed 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/aws/aws-sam-cli-app-templates/provided.al2/graalvm/java17/cookiecutter-aws-sam-graalvm-gradle/{{cookiecutter.project_name}}/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/aws/aws-sam-cli-app-templates/provided.al2/graalvm/java17/cookiecutter-aws-sam-graalvm-gradle/{{cookiecutter.project_name}}/Dockerfile/repaired.Dockerfile
@@ -11,7 +11,7 @@ ENV JAVA_VERSION java17
 ENV GRAAL_VERSION 22.1.0
 ENV GRAAL_FOLDERNAME graalvm-ce-${JAVA_VERSION}-${GRAAL_VERSION}
 ENV GRAAL_FILENAME graalvm-ce-${JAVA_VERSION}-linux-amd64-${GRAAL_VERSION}.tar.gz
-RUN curl -4 -L https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-${GRAAL_VERSION}/${GRAAL_FILENAME} | tar -xvz
+RUN curl -f -4 -L https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-${GRAAL_VERSION}/${GRAAL_FILENAME} | tar -xvz
 RUN mv $GRAAL_FOLDERNAME /usr/lib/graalvm
 RUN rm -rf $GRAAL_FOLDERNAME
 
@@ -19,7 +19,7 @@ RUN rm -rf $GRAAL_FOLDERNAME
 ENV GRADLE_VERSION 7.3.1
 ENV GRADLE_FOLDERNAME gradle-${GRADLE_VERSION}
 ENV GRALE_FILENAME ${GRADLE_FOLDERNAME}-bin.zip
-RUN curl -L https://services.gradle.org/distributions/${GRALE_FILENAME} > $GRALE_FILENAME
+RUN curl -f -L https://services.gradle.org/distributions/${GRALE_FILENAME} > $GRALE_FILENAME
 RUN unzip -o $GRALE_FILENAME
 RUN mv $GRADLE_FOLDERNAME /usr/lib/gradle
 RUN rm $GRALE_FILENAME
@@ -27,9 +27,9 @@ ENV PATH=$PATH:/usr/lib/gradle/bin
 
 # AWS Lambda Builders
 RUN amazon-linux-extras enable python3.8
-RUN yum clean metadata && yum -y install python3.8
-RUN curl -L get-pip.io | python3.8
-RUN pip3 install aws-lambda-builders
+RUN yum clean metadata && yum -y install python3.8 && rm -rf /var/cache/yum
+RUN curl -f -L get-pip.io | python3.8
+RUN pip3 install --no-cache-dir aws-lambda-builders
 
 VOLUME /project
 WORKDIR /project