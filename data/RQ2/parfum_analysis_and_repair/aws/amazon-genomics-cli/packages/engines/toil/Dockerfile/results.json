{
  "startTime": 1674248616274,
  "endTime": 1674248617078,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 93
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 37
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM public.ecr.aws/amazonlinux/amazonlinux:2 AS final\n\n# COPY THIRD-PARTY /opt/\nCOPY LICENSE /opt/\n\nRUN yum update -y \\\n    && yum install -y \\\n    curl \\\n    hostname \\\n    \"java-11-amazon-corretto-headless(x86-64)\" \\\n    unzip \\\n    jq \\\n    && yum clean -y all \\\n    && rm -rf /var/cache/yum\n\n# install awscli v2\nRUN curl -f -s \"https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip\" -o \"/tmp/awscliv2.zip\" \\\n    && unzip -q /tmp/awscliv2.zip -d /tmp \\\n    && /tmp/aws/install -b /usr/bin \\\n    && rm -rf /tmp/aws*\n\n##### MODIFY #######\n## In this area install your new engine into the container as well as any requirements for that engine.\n## Dockerfile documentation is found here: https://docs.docker.com/engine/reference/builder/\n\n# Add rabbitmq repository\nADD rabbitmq.repo /etc/yum.repos.d/rabbitmq.repo\n\n# Sadly pre-importing keys doesn't seem to save any time when we use yum later, so don't so it.\n\n# Install deps\nRUN curl -fsSL https://rpm.nodesource.com/setup_16.x | bash - \\\n    && yum update -y \\\n    && yum install -y \\\n    python3 \\\n    rabbitmq-server \\\n    nodejs \\\n    git \\\n    && yum clean -y all \\\n    && rm -rf /var/cache/yum\n\n# Install concurrently, for running all our servers in one session\nRUN npm install -g concurrently@7.0.0 && npm cache clean --force;\n\n# Install Toil\nCOPY THIRD-PARTY /opt/\n\nARG TOIL_VERSION=\"d831f74e918c4a01e961e3b45504a92d1827b8b3\"\nRUN python3 -m pip install git+https://github.com/DataBiosphere/toil.git@${TOIL_VERSION}#egg=toil[aws,cwl,server]\n\n# copy the entrypoint script to the image\nCOPY toil.aws.sh /opt/bin/toil.aws.sh\nRUN chmod +x /opt/bin/toil.aws.sh\n\nEXPOSE 8000\n\n#### END MODIFY ######\n\nWORKDIR /opt/work\nENTRYPOINT [\"/opt/bin/toil.aws.sh\"]\n\n"
}