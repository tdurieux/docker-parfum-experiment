{
  "startTime": 1674252214688,
  "endTime": 1674252215327,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 84
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 29,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 11,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 60
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# we use centos 7 to build against glibc 2.17\nFROM public.ecr.aws/docker/library/centos:7\n\nARG CURL_VERSION\n\n# Add Corretto repository\nRUN rpm --import https://yum.corretto.aws/corretto.key && \\\n    curl -f -L -o /etc/yum.repos.d/corretto.repo https://yum.corretto.aws/corretto.repo\n\n# aws-lambda-cpp requires cmake3, it's available in EPEL\nRUN yum install -y epel-release && rm -rf /var/cache/yum\nRUN yum install -y \\\n        cmake3 \\\n        make \\\n        gcc \\\n        gcc-c++ \\\n        libstdc++-static \\\n        glibc-devel \\\n        gmp-devel \\\n        libmpc-devel \\\n        libtool \\\n        mpfr-devel \\\n        wget \\\n        java-1.8.0-amazon-corretto-devel && rm -rf /var/cache/yum\n\n# Install curl dependency\nCOPY ./deps/curl-$CURL_VERSION.tar.gz /src/deps/\nRUN tar xzf /src/deps/curl-$CURL_VERSION.tar.gz -C /src/deps && mv /src/deps/curl-$CURL_VERSION /src/deps/curl && rm /src/deps/curl-$CURL_VERSION.tar.gz\nWORKDIR /src/deps/curl\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n        --prefix $(pwd)/../artifacts \\\n        --disable-shared \\\n        --without-ssl \\\n        --with-pic \\\n        --without-zlib && \\\n    make && \\\n    make install\n\n# Install aws-lambda-cpp dependency\nADD ./deps/aws-lambda-cpp-* /src/deps/aws-lambda-cpp\nRUN sed -i.bak 's/VERSION 3.9/VERSION 3.6/' /src/deps/aws-lambda-cpp/CMakeLists.txt\nRUN mkdir -p /src/deps/aws-lambda-cpp/build\nWORKDIR /src/deps/aws-lambda-cpp/build\nRUN cmake3 .. \\\n        -DENABLE_LTO=OFF \\\n        -DCMAKE_CXX_FLAGS=\"-fPIC -DBACKWARD_SYSTEM_UNKNOWN\" \\\n        -DCMAKE_CXX_STANDARD=11 \\\n        -DCMAKE_INSTALL_PREFIX=$(pwd)/../../artifacts \\\n        -DCMAKE_MODULE_PATH=$(pwd)/../../artifacts/lib/pkgconfig && \\\n    make && \\\n    make install\n\n# Build native client\nADD *.cpp *.h /src/\nWORKDIR /src\nENV JAVA_HOME=/usr/lib/jvm/java-1.8.0-amazon-corretto\nRUN /usr/bin/c++ -c \\\n        -std=gnu++11 \\\n        -fPIC \\\n        -I${JAVA_HOME}/include \\\n        -I${JAVA_HOME}/include/linux \\\n        -I ./deps/artifacts/include \\\n        com_amazonaws_services_lambda_runtime_api_client_runtimeapi_NativeClient.cpp -o com_amazonaws_services_lambda_runtime_api_client_runtimeapi_NativeClient.o && \\\n    /usr/bin/c++ -shared \\\n        -std=gnu++11 \\\n        -o aws-lambda-runtime-interface-client.so com_amazonaws_services_lambda_runtime_api_client_runtimeapi_NativeClient.o \\\n        -L ./deps/artifacts/lib64/ \\\n        -L ./deps/artifacts/lib/ \\\n        -laws-lambda-runtime \\\n        -lcurl \\\n        -static-libstdc++ \\\n        -lrt\n"
}