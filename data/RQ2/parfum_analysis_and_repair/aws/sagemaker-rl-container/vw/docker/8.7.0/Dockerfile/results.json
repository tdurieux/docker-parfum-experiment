{
  "startTime": 1674255647412,
  "endTime": 1674255648402,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 2,
        "columnEnd": 51
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 48,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 2,
        "columnEnd": 30
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 22,
        "columnEnd": 91
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 15,
        "columnStart": 22,
        "columnEnd": 21
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04\n\nRUN apt-get -y remove \"^python*\"\n\nRUN apt-get update && apt-get install -y --no-install-recommends software-properties-common && \\\n    add-apt-repository ppa:deadsnakes/ppa -y && \\\n    apt-get update && apt-get install -y --no-install-recommends \\\n        build-essential \\\n        libboost-all-dev \\\n        zlib1g-dev \\\n        cmake \\\n        git \\\n        curl \\\n        nginx \\\n        wget \\\n        python3.6-dev && ln -s -f /usr/bin/python3.6 /usr/bin/python; rm -rf /var/lib/apt/lists/*;\n\nRUN cd /usr/lib/x86_64-linux-gnu/ && ln -s libboost_python-py35.so libboost_python3.so\n\n# Install pip\nRUN cd /tmp && \\\n    curl -f -O https://bootstrap.pypa.io/get-pip.py && \\\n    python get-pip.py && rm get-pip.py\n\n# Python wonâ€™t try to write .pyc or .pyo files on the import of source modules\n# Force stdin, stdout and stderr to be totally unbuffered. Good for logging\nENV PYTHONDONTWRITEBYTECODE=1 PYTHONUNBUFFERED=1 PYTHONIOENCODING=UTF-8 LANG=C.UTF-8 LC_ALL=C.UTF-8\n\n# Build VW\nRUN git clone --branch 8.7.0.post1_with_python https://github.com/VowpalWabbit/vowpal_wabbit.git && \\\n    cd vowpal_wabbit && \\\n    mkdir build && \\\n    cd build && \\\n    cmake .. -DCMAKE_BUILD_TYPE=Release -DBUILD_TESTS=OFF -DVW_INSTALL=ON -DBUILD_PYTHON=ON -DPY_VERSION=3.6 && \\\n    make install\n\n# For VW python bindings\nENV PYTHONPATH /vowpal_wabbit/python:/vowpal_wabbit/build/python\n\n# Install Redis.\nRUN \\\n  cd /tmp && \\\n  wget https://download.redis.io/redis-stable.tar.gz && \\\n  tar xvzf redis-stable.tar.gz && \\\n  cd redis-stable && \\\n  make && \\\n  make install && rm redis-stable.tar.gz\n\nRUN pip install --no-cache-dir ipython \\\n                sagemaker-containers==2.5.1 \\\n                redis==3.2.1 \\\n                jsonschema==3.0.1 \\\n                retrying==1.3.3 \\\n                smart-open==1.8.4 \\\n                pandas==0.23\n\n\n# Install vw-serving\nADD src/vw-serving /opt/code/vw-serving\nRUN pip install --no-cache-dir /opt/code/vw-serving\n\nWORKDIR /opt\n\n"
}