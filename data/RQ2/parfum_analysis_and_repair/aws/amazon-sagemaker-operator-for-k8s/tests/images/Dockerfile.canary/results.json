{
  "startTime": 1674251289770,
  "endTime": 1674251290523,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 107
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 124
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 133
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 2,
        "lineEnd": 9,
        "columnStart": 22,
        "columnEnd": 6
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 22,
        "columnEnd": 63
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 126,
        "columnEnd": 143
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 2,
        "lineEnd": 9,
        "columnStart": 22,
        "columnEnd": 6
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 22,
        "columnEnd": 63
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 126,
        "columnEnd": 143
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 31
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 55
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:18.04\n\nRUN apt-get update && apt-get install --no-install-recommends -y curl \\\n    wget \\\n    git \\\n    python \\\n    python-pip \\\n    vim \\\n    sudo \\\n    jq && rm -rf /var/lib/apt/lists/*;\n\nRUN pip install --no-cache-dir awscli\n\n# Add yq repository and install yq\nRUN apt-get update && apt install --no-install-recommends -y software-properties-common && sudo add-apt-repository ppa:rmescandon/yq && apt update && apt install --no-install-recommends -y yq && rm -rf /var/lib/apt/lists/*;\n\n# Install kubectl\nRUN curl -f -o kubectl https://amazon-eks.s3-us-west-2.amazonaws.com/1.12.9/2019-06-21/bin/linux/amd64/kubectl \\\n      && chmod +x ./kubectl && cp ./kubectl /bin\n\n# Install eksctl\nRUN curl -f --silent --location \"https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz\" | tar xz -C /tmp && mv /tmp/eksctl /bin\n\n# Install kustomize\nRUN curl -f -LO https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize%2Fv3.2.1/kustomize_kustomize.v3.2.1_linux_amd64 && mv kustomize_kustomize.v3.2.1_linux_amd64 /bin/kustomize && chmod u+x /bin/kustomize\n\n# Install dig, used for PrivateLink test.\nRUN apt-get install --no-install-recommends -y dnsutils && rm -rf /var/lib/apt/lists/*;\n\n# Set the environment variables\nARG DATA_BUCKET\nENV DATA_BUCKET=$DATA_BUCKET\n\nARG COMMIT_SHA\nENV COMMIT_SHA=$COMMIT_SHA\n\nARG RESULT_BUCKET\nENV RESULT_BUCKET=$RESULT_BUCKET\n\n# Set working directory\nRUN mkdir -p /app/testfiles\nWORKDIR /app/testfiles\n\nCOPY codebuild/testfiles/*.yaml ./\n\nWORKDIR /app\n\nCOPY codebuild/*.sh ./\nRUN chmod +x ./*.sh\n\nCOPY sagemaker-k8s-operator.tar.gz .\n\nCMD [\"./run_canarytest.sh\"]\n"
}