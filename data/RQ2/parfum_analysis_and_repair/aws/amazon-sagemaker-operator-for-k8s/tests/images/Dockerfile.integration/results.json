{
  "startTime": 1674249355966,
  "endTime": 1674249356894,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 133
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 107
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 124
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 2,
        "lineEnd": 9,
        "columnStart": 22,
        "columnEnd": 6
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 18,
        "columnEnd": 112
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 18,
        "columnEnd": 42
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 63,
        "columnEnd": 80
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 18,
        "columnEnd": 61
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 93,
        "columnEnd": 121
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 2,
        "lineEnd": 9,
        "columnStart": 22,
        "columnEnd": 6
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 18,
        "columnEnd": 112
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 18,
        "columnEnd": 42
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 63,
        "columnEnd": 80
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 18,
        "columnEnd": 61
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 93,
        "columnEnd": 121
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 55
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:18.04\n\nRUN apt-get update && apt-get install --no-install-recommends -y curl \\\n    wget \\\n    git \\\n    python \\\n    python-pip \\\n    vim \\\n    sudo \\\n    jq && rm -rf /var/lib/apt/lists/*;\n\n\n# Enable the Docker repository\nRUN apt update && apt install --no-install-recommends -y apt-transport-https ca-certificates curl gnupg-agent software-properties-common && curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add - && add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\" && rm -rf /var/lib/apt/lists/*;\n\n# Install Docker CE\nRUN apt update && apt install --no-install-recommends -y docker-ce && rm -rf /var/lib/apt/lists/*;\n\n# Install yq\nRUN sudo add-apt-repository ppa:rmescandon/yq && apt update && apt install --no-install-recommends -y yq && rm -rf /var/lib/apt/lists/*;\n\n# Install Ruby and travis\nRUN apt update && apt install --no-install-recommends -y ruby-dev libffi-dev make gcc && rm -rf /var/lib/apt/lists/*;\nRUN gem install travis\n\nRUN pip install --no-cache-dir awscli\n\n# Install kustomize\nRUN curl -f -LO https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize%2Fv3.2.1/kustomize_kustomize.v3.2.1_linux_amd64 && mv kustomize_kustomize.v3.2.1_linux_amd64 /bin/kustomize && chmod u+x /bin/kustomize\n\n# Install kubectl\nRUN curl -f -o kubectl https://amazon-eks.s3-us-west-2.amazonaws.com/1.12.9/2019-06-21/bin/linux/amd64/kubectl \\\n      && chmod +x ./kubectl && cp ./kubectl /bin\n\n# Install eksctl\nRUN curl -f --silent --location \"https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz\" | tar xz -C /tmp && mv /tmp/eksctl /bin\n\n# Install Kubebuilder which is required for make test\nRUN wget https://github.com/kubernetes-sigs/kubebuilder/releases/download/v2.3.1/kubebuilder_2.3.1_linux_amd64.tar.gz \\\n && tar -zxvf kubebuilder_2.3.1_linux_amd64.tar.gz \\\n && mv kubebuilder_2.3.1_linux_amd64 /usr/local/kubebuilder \\\n && rm -rf kubebuilder_2.3.1_linux_amd64.tar.gz\n\n# Install dig, used for PrivateLink test.\nRUN apt-get install --no-install-recommends -y dnsutils && rm -rf /var/lib/apt/lists/*;\n\n# Add Golang\nRUN sudo add-apt-repository -y ppa:longsleep/golang-backports && sudo apt-get update && sudo apt-get install --no-install-recommends -y golang-go && rm -rf /var/lib/apt/lists/*;\n\n# This is how you start docker engine on container. Make sure container is\n# running in privileged mode.\n# I had to comment this line since codebuild overrides this.\n# Uncomment this line if you want to use this as build environment for this project locally\n# ENTRYPOINT sudo service docker start && bash\n"
}