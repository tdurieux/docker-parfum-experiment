{
  "startTime": 1674248072651,
  "endTime": 1674248073685,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 7,
        "columnEnd": 51
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 31,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 68
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nvidia/cuda:10.0-cudnn7-runtime-ubuntu16.04\n\nLABEL com.amazonaws.sagemaker.capabilities.accept-bind-to-port=true\n\nRUN apt-get update && \\\n    DEBIAN_FRONTEND=noninteractive apt-get install --no-install-recommends -y \\\n    fakeroot \\\n    ca-certificates \\\n    dpkg-dev \\\n    g++ \\\n    python-dev \\\n    openjdk-8-jdk-headless \\\n    curl \\\n    vim \\\n    && rm -rf /var/lib/apt/lists/* \\\n    && cd /tmp \\\n    && curl -f -O https://bootstrap.pypa.io/get-pip.py \\\n    && python get-pip.py\n\nRUN update-alternatives --install /usr/bin/python python /usr/bin/python2.7 1\n\nRUN apt-get update && \\\n    apt-get -y install --no-install-recommends \\\n    libopencv-dev \\\n    build-essential \\\n    && rm -rf /var/lib/apt/lists/*\n\nWORKDIR /\n\nCOPY sagemaker_mxnet_serving_container.tar.gz /sagemaker_mxnet_serving_container.tar.gz\n\nRUN pip install --no-cache-dir --no-cache mxnet-cu100mkl==1.4.1 \\\n                           mxnet-model-server==1.0.5 \\\n                           keras-mxnet==2.2.4.1 \\\n                           numpy==1.14.5 \\\n                           onnx==1.4.1 \\\n                           /sagemaker_mxnet_serving_container.tar.gz && \\\n    rm /sagemaker_mxnet_serving_container.tar.gz\n\n# This is here to make our installed version of OpenCV work.\n# https://stackoverflow.com/questions/29274638/opencv-libdc1394-error-failed-to-initialize-libdc1394\n# TODO: Should we be installing OpenCV in our image like this? Is there another way we can fix this?\nRUN ln -s /dev/null /dev/raw1394\n\nENV PYTHONDONTWRITEBYTECODE=1 \\\n    PYTHONUNBUFFERED=1 \\\n    LD_LIBRARY_PATH=\"${LD_LIBRARY_PATH}:/usr/local/lib\" \\\n    PYTHONIOENCODING=UTF-8 \\\n    LANG=C.UTF-8 \\\n    LC_ALL=C.UTF-8\n\nRUN mkdir -p /home/model-server/tmp\n\nCOPY dockerd-entrypoint.sh /usr/local/bin/dockerd-entrypoint.sh\nCOPY config.properties /home/model-server\n\nRUN chmod +x /usr/local/bin/dockerd-entrypoint.sh\n\nEXPOSE 8080 8081\n\nWORKDIR /home/model-server\nENV TEMP=/home/model-server/tmp\nCMD [\"serve\"]\nENTRYPOINT []\n"
}