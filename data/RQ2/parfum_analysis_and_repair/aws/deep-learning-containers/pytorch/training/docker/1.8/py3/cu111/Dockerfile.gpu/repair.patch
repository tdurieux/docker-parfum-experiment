diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/aws/deep-learning-containers/pytorch/training/docker/1.8/py3/cu111/Dockerfile.gpu b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/aws/deep-learning-containers/pytorch/training/docker/1.8/py3/cu111/Dockerfile.gpu/repaired.Dockerfile
index 6c2f294..6914b05 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/aws/deep-learning-containers/pytorch/training/docker/1.8/py3/cu111/Dockerfile.gpu
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/aws/deep-learning-containers/pytorch/training/docker/1.8/py3/cu111/Dockerfile.gpu/repaired.Dockerfile
@@ -90,9 +90,9 @@ RUN apt-get update \
     unzip \
     zlib1g-dev \
     jq \
-    && apt-get install -y -qq libkrb5-dev \
-    && apt-get install -y -qq libsasl2-dev libsasl2-modules \
-    && apt-get install -y -qq krb5-user \
+    && apt-get install --no-install-recommends -y -qq libkrb5-dev \
+    && apt-get install --no-install-recommends -y -qq libsasl2-dev libsasl2-modules \
+    && apt-get install --no-install-recommends -y -qq krb5-user \
  && rm -rf /var/lib/apt/lists/*
 
 RUN cd /tmp \
@@ -104,7 +104,7 @@ RUN cd /tmp \
 # Install EFA along without AWS OPEN_MPI
 RUN mkdir /tmp/efa \
   && cd /tmp/efa \
-  && curl -O https://s3-us-west-2.amazonaws.com/aws-efa-installer/aws-efa-installer-${EFA_VERSION}.tar.gz \
+  && curl -f -O https://s3-us-west-2.amazonaws.com/aws-efa-installer/aws-efa-installer-${EFA_VERSION}.tar.gz \
   && tar -xf aws-efa-installer-${EFA_VERSION}.tar.gz \
   && cd aws-efa-installer \
   && ./efa_installer.sh -y --skip-kmod -g \
@@ -118,19 +118,19 @@ RUN mkdir /tmp/openmpi && \
   wget --quiet https://download.open-mpi.org/release/open-mpi/v4.1/openmpi-${OMPI_VERSION}.tar.gz && \
   tar zxf openmpi-${OMPI_VERSION}.tar.gz && \
   cd openmpi-${OMPI_VERSION} && \
-  ./configure --enable-orterun-prefix-by-default --prefix=$OPEN_MPI_PATH && \
+  ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --enable-orterun-prefix-by-default --prefix=$OPEN_MPI_PATH && \
   make -j $(nproc) all && \
   make install && \
   ldconfig && \
   cd / && \
-  rm -rf /tmp/openmpi
+  rm -rf /tmp/openmpi && rm openmpi-${OMPI_VERSION}.tar.gz
 
 ENV PATH="$OPEN_MPI_PATH/bin:$PATH"
 ENV LD_LIBRARY_PATH=$OPEN_MPI_PATH/lib/:$EFA_PATH/lib/:$LD_LIBRARY_PATH
 
 # py37 is the oldest python version supported by Miniconda 4.10.3, py36 is installed below and will override py37 environment
 RUN ompi_info --parsable --all | grep mpi_built_with_cuda_support:value \
- && curl -L -o ~/miniconda.sh https://repo.anaconda.com/miniconda/Miniconda3-py37_4.10.3-Linux-x86_64.sh \
+ && curl -f -L -o ~/miniconda.sh https://repo.anaconda.com/miniconda/Miniconda3-py37_4.10.3-Linux-x86_64.sh \
  && chmod +x ~/miniconda.sh \
  && ~/miniconda.sh -b -p ${CONDA_PREFIX} \
  && rm ~/miniconda.sh \
@@ -152,7 +152,7 @@ RUN ompi_info --parsable --all | grep mpi_built_with_cuda_support:value \
  && ${CONDA_PREFIX}/bin/conda clean -ya
 
 RUN ${CONDA_PREFIX}/bin/conda config --set ssl_verify False \
- && pip install --upgrade pip --trusted-host pypi.org --trusted-host files.pythonhosted.org \
+ && pip install --no-cache-dir --upgrade pip --trusted-host pypi.org --trusted-host \
  && ln -s ${CONDA_PREFIX}/bin/pip /usr/local/bin/pip3
 
 RUN conda install -c pytorch magma-cuda111==2.5.2 \
@@ -230,13 +230,13 @@ RUN pip install --no-cache-dir -U \
 RUN /opt/conda/bin/jupyter-kernelspec remove -fy python3
 
 # install metis
-RUN wget -nv http://glaros.dtc.umn.edu/gkhome/fetch/sw/metis/${METIS}.tar.gz \
+RUN wget -nv https://glaros.dtc.umn.edu/gkhome/fetch/sw/metis/${METIS}.tar.gz \
   && gunzip -f ${METIS}.tar.gz \
   && tar -xvf ${METIS}.tar \
   && cd ${METIS} \
   && apt-get update \
-  && apt-get install -y build-essential \
-  && apt-get install -y cmake \
+  && apt-get install --no-install-recommends -y build-essential \
+  && apt-get install --no-install-recommends -y cmake \
   && make config shared=1 \
   && make install \
   && cd .. \
@@ -271,13 +271,13 @@ RUN mv $OPEN_MPI_PATH/bin/mpirun $OPEN_MPI_PATH/bin/mpirun.real \
  && echo NCCL_SOCKET_IFNAME=^docker0 >> /etc/nccl.conf
 
 # Install AWS OFI NCCL plug-in
-RUN apt-get update && apt-get install -y autoconf
+RUN apt-get update && apt-get install --no-install-recommends -y autoconf && rm -rf /var/lib/apt/lists/*;
 RUN mkdir /tmp/efa-ofi-nccl \
   && cd /tmp/efa-ofi-nccl \
   && git clone https://github.com/aws/aws-ofi-nccl.git -b v${BRANCH_OFI} \
   && cd aws-ofi-nccl \
   && ./autogen.sh \
-  && ./configure --with-libfabric=/opt/amazon/efa \
+  && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --with-libfabric=/opt/amazon/efa \
   --with-mpi=/opt/amazon/openmpi \
   --with-cuda=/usr/local/cuda \
   --with-nccl=/usr/local --prefix=/usr/local \
@@ -331,7 +331,7 @@ RUN chmod +x /usr/local/bin/start_with_right_hostname.sh \
  && chmod +x /usr/local/bin/deep_learning_container.py
 
 RUN HOME_DIR=/root \
- && curl -o ${HOME_DIR}/oss_compliance.zip https://aws-dlinfra-utilities.s3.amazonaws.com/oss_compliance.zip \
+ && curl -f -o ${HOME_DIR}/oss_compliance.zip https://aws-dlinfra-utilities.s3.amazonaws.com/oss_compliance.zip \
  && unzip ${HOME_DIR}/oss_compliance.zip -d ${HOME_DIR}/ \
  && cp ${HOME_DIR}/oss_compliance/test/testOSSCompliance /usr/local/bin/testOSSCompliance \
  && chmod +x /usr/local/bin/testOSSCompliance \
@@ -340,7 +340,7 @@ RUN HOME_DIR=/root \
  && rm -rf ${HOME_DIR}/oss_compliance*
 
 
-RUN curl -o /license.txt https://aws-dlc-licenses.s3.amazonaws.com/pytorch-1.8/license.txt
+RUN curl -f -o /license.txt https://aws-dlc-licenses.s3.amazonaws.com/pytorch-1.8/license.txt
 
 # Starts framework
 ENTRYPOINT ["bash", "-m", "start_with_right_hostname.sh"]