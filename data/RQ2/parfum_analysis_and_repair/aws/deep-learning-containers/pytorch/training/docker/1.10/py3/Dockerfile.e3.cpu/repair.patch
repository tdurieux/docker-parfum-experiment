diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/aws/deep-learning-containers/pytorch/training/docker/1.10/py3/Dockerfile.e3.cpu b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/aws/deep-learning-containers/pytorch/training/docker/1.10/py3/Dockerfile.e3.cpu/repaired.Dockerfile
index 73e4c87..7572204 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/aws/deep-learning-containers/pytorch/training/docker/1.10/py3/Dockerfile.e3.cpu
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/aws/deep-learning-containers/pytorch/training/docker/1.10/py3/Dockerfile.e3.cpu/repaired.Dockerfile
@@ -60,7 +60,7 @@ RUN apt-get update \
 RUN wget https://www.open-mpi.org/software/ompi/v4.0/downloads/openmpi-$OPEN_MPI_VERSION.tar.gz \
  && gunzip -c openmpi-$OPEN_MPI_VERSION.tar.gz | tar xf - \
  && cd openmpi-$OPEN_MPI_VERSION \
- && ./configure --prefix=/home/.openmpi \
+ && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/home/.openmpi \
  && make all install \
  && cd .. \
  && rm openmpi-$OPEN_MPI_VERSION.tar.gz \
@@ -93,7 +93,7 @@ RUN rm -rf /root/.ssh/ && \
  && printf "Host *\n StrictHostKeyChecking no\n" >> /root/.ssh/config
 
 
-RUN curl -L -o ~/mambaforge.sh https://github.com/conda-forge/miniforge/releases/download/${MAMBA_VERSION}/Mambaforge-${MAMBA_VERSION}-Linux-x86_64.sh \
+RUN curl -f -L -o ~/mambaforge.sh https://github.com/conda-forge/miniforge/releases/download/${MAMBA_VERSION}/Mambaforge-${MAMBA_VERSION}-Linux-x86_64.sh \
  && chmod +x ~/mambaforge.sh \
  && ~/mambaforge.sh -b -p /opt/conda \
  && rm ~/mambaforge.sh \
@@ -123,7 +123,7 @@ RUN rm -rf /opt/conda/lib/libtinfo.so.6
 
 # The following section uninstalls torch and torchvision before installing the
 # custom versions from an S3 bucket. This will need to be removed in the future
-RUN pip install --upgrade pip --trusted-host pypi.org --trusted-host files.pythonhosted.org \
+RUN pip install --no-cache-dir --upgrade pip --trusted-host pypi.org --trusted-host \
  && ln -s /opt/conda/bin/pip /usr/local/bin/pip3 \
 # Install urllib3>=1.25.9 to satisfy awscli/boto3/botocore requirements while fixing for CVE-2020-26137
  && pip install --no-cache-dir -U \
@@ -146,7 +146,7 @@ RUN pip install --upgrade pip --trusted-host pypi.org --trusted-host files.pytho
  && pip install --no-deps --no-cache-dir -U ${PT_TORCHVISION_URL}
 
 # Install PT S3 plugin
-RUN pip install -U ${PT_S3_WHL}
+RUN pip install --no-cache-dir -U ${PT_S3_WHL}
 RUN mkdir -p /etc/pki/tls/certs && cp /etc/ssl/certs/ca-certificates.crt /etc/pki/tls/certs/ca-bundle.crt
 
 COPY deep_learning_container.py /usr/local/bin/deep_learning_container.py
@@ -154,7 +154,7 @@ COPY deep_learning_container.py /usr/local/bin/deep_learning_container.py
 RUN chmod +x /usr/local/bin/deep_learning_container.py
 
 RUN HOME_DIR=/root \
- && curl -o ${HOME_DIR}/oss_compliance.zip https://aws-dlinfra-utilities.s3.amazonaws.com/oss_compliance.zip \
+ && curl -f -o ${HOME_DIR}/oss_compliance.zip https://aws-dlinfra-utilities.s3.amazonaws.com/oss_compliance.zip \
  && unzip ${HOME_DIR}/oss_compliance.zip -d ${HOME_DIR}/ \
  && cp ${HOME_DIR}/oss_compliance/test/testOSSCompliance /usr/local/bin/testOSSCompliance \
  && chmod +x /usr/local/bin/testOSSCompliance \
@@ -163,7 +163,7 @@ RUN HOME_DIR=/root \
  && rm -rf ${HOME_DIR}/oss_compliance* \
  && rm -rf /tmp/tmp*
 
-RUN curl -o /license.txt  https://aws-dlc-licenses.s3.amazonaws.com/pytorch-1.10/license.txt
+RUN curl -f -o /license.txt https://aws-dlc-licenses.s3.amazonaws.com/pytorch-1.10/license.txt
 
 # Starts framework
 CMD ["/bin/bash"]