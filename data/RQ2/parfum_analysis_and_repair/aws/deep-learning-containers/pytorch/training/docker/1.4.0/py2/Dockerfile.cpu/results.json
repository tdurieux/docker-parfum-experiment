{
  "startTime": 1674253288405,
  "endTime": 1674253289470,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 99
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 105,
        "lineEnd": 105,
        "columnStart": 4,
        "columnEnd": 92
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 81,
        "lineEnd": 81,
        "columnStart": 4,
        "columnEnd": 91
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 39
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04\n\nLABEL maintainer=\"Amazon AI\"\nLABEL dlc_major_version=\"3\"\n\n# Add arguments to achieve the version, python and url\nARG PYTHON_VERSION=2.7\nARG OPEN_MPI_VERSION=4.0.1\n\n# See http://bugs.python.org/issue19846\n# Python wonâ€™t try to write .pyc or .pyo files on the import of source modules\n# Force stdin, stdout and stderr to be totally unbuffered. Good for logging\nENV PYTHONDONTWRITEBYTECODE=1\nENV PYTHONUNBUFFERED=1\nENV LD_LIBRARY_PATH=\"${LD_LIBRARY_PATH}:/usr/local/lib\"\nENV PYTHONIOENCODING=UTF-8\nENV LC_ALL=C.UTF-8\nENV LANG=C.UTF-8\nENV PATH=/opt/conda/bin:$PATH\nENV SAGEMAKER_TRAINING_MODULE=sagemaker_pytorch_container.training:main\n\nWORKDIR /\n\nRUN apt-get update \\\n && apt-get install -y --no-install-recommends \\\n    build-essential \\\n    ca-certificates \\\n    cmake \\\n    curl \\\n    emacs \\\n    git \\\n    jq \\\n    libglib2.0-0 \\\n    libgl1-mesa-glx \\\n    libsm6 \\\n    libxext6 \\\n    libxrender-dev \\\n    vim \\\n    wget \\\n    zlib1g-dev \\\n && rm -rf /var/lib/apt/lists/*\n\nRUN wget https://www.open-mpi.org/software/ompi/v4.0/downloads/openmpi-$OPEN_MPI_VERSION.tar.gz \\\n && gunzip -c openmpi-$OPEN_MPI_VERSION.tar.gz | tar xf - \\\n && cd openmpi-$OPEN_MPI_VERSION \\\n && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/home/.openmpi \\\n && make all install \\\n && cd .. \\\n && rm openmpi-$OPEN_MPI_VERSION.tar.gz \\\n && rm -rf openmpi-$OPEN_MPI_VERSION\n\n# The ENV variables declared below are changed in the previous section\n# Grouping these ENV variables in the first section causes\n# ompi_info to fail. This is only observed in CPU containers\nENV PATH=\"$PATH:/home/.openmpi/bin\"\nENV LD_LIBRARY_PATH=\"$LD_LIBRARY_PATH:/home/.openmpi/lib/\"\nRUN ompi_info --parsable --all | grep mpi_built_with_cuda_support:value\n\nRUN curl -f -L -o ~/miniconda.sh https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh \\\n && chmod +x ~/miniconda.sh \\\n && ~/miniconda.sh -b -p /opt/conda \\\n && rm ~/miniconda.sh \\\n && /opt/conda/bin/conda install -y -c anaconda \\\n    python=$PYTHON_VERSION \\\n    numpy==1.16.4 \\\n    ipython==5.8.0 \\\n    mkl==2019.4 \\\n    mkl-include==2019.4 \\\n    cython==0.29.12 \\\n    typing==3.7.4 && \\\n    /opt/conda/bin/conda clean -ya\n\nRUN conda install -c conda-forge \\\n    opencv==4.0.1 \\\n && conda install -y \\\n    scikit-learn==0.20.3 \\\n    pandas==0.24.2 \\\n    Pillow==6.2.2 \\\n    h5py==2.9.0 \\\n    requests==2.22.0 \\\n && conda clean -ya \\\n && pip install --no-cache-dir --upgrade pip --trusted-host pypi.org --trusted-host\n\n# Copy workaround script for incorrect hostname\nCOPY changehostname.c /\nCOPY start_with_right_hostname.sh /usr/local/bin/start_with_right_hostname.sh\n\n# The following section uninstalls torch and torchvision before installing the\n# custom versions from an S3 bucket. This will need to be removed in the future\nRUN pip install --no-cache-dir \\\n    \"awscli<2\" \\\n    scipy==1.2.2 \\\n    sphinxcontrib-websupport==1.1.2 \\\n    future \\\n    \"sagemaker-pytorch-training<2\" \\\n && pip uninstall -y torch \\\n && pip install -U --no-cache-dir https://pytorch-aws.s3.amazonaws.com/pytorch-1.4.0/py2/cpu/torch-1.4.0-cp27-cp27mu-manylinux1_x86_64.whl \\\n && pip uninstall -y torchvision \\\n && pip install --no-cache-dir \\\n    https://torchvision-build.s3.amazonaws.com/1.4.0/py2/cpu/torchvision-0.5.0%2Bcpu-cp27-cp27mu-linux_x86_64.whl\n\nWORKDIR /\n\nRUN chmod +x /usr/local/bin/start_with_right_hostname.sh\n\nRUN curl -f -o /license.txt https://aws-dlc-licenses.s3.amazonaws.com/pytorch-1.4.0/license.txt\n\n# Starts framework\nENTRYPOINT [\"bash\", \"-m\", \"start_with_right_hostname.sh\"]\nCMD [\"/bin/bash\"]\n"
}