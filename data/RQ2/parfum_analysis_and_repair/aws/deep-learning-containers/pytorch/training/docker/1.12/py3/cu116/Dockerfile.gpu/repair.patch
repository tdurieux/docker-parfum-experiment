diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/aws/deep-learning-containers/pytorch/training/docker/1.12/py3/cu116/Dockerfile.gpu b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/aws/deep-learning-containers/pytorch/training/docker/1.12/py3/cu116/Dockerfile.gpu/repaired.Dockerfile
index 71b70d3..91853de 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/aws/deep-learning-containers/pytorch/training/docker/1.12/py3/cu116/Dockerfile.gpu
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/aws/deep-learning-containers/pytorch/training/docker/1.12/py3/cu116/Dockerfile.gpu/repaired.Dockerfile
@@ -115,7 +115,7 @@ RUN cd /tmp \
 # Install EFA alone without AWS OPEN_MPI
 RUN mkdir /tmp/efa \
  && cd /tmp/efa \
- && curl -O https://s3-us-west-2.amazonaws.com/aws-efa-installer/aws-efa-installer-${EFA_VERSION}.tar.gz \
+ && curl -f -O https://s3-us-west-2.amazonaws.com/aws-efa-installer/aws-efa-installer-${EFA_VERSION}.tar.gz \
  && tar -xf aws-efa-installer-${EFA_VERSION}.tar.gz \
  && cd aws-efa-installer \
  && apt-get update \
@@ -132,18 +132,18 @@ RUN mkdir /tmp/openmpi \
  && wget --quiet https://download.open-mpi.org/release/open-mpi/v4.1/openmpi-${OMPI_VERSION}.tar.gz \
  && tar zxf openmpi-${OMPI_VERSION}.tar.gz \
  && cd openmpi-${OMPI_VERSION} \
- && ./configure --enable-orterun-prefix-by-default --prefix=$OPEN_MPI_PATH --with-cuda \
+ && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --enable-orterun-prefix-by-default --prefix=$OPEN_MPI_PATH --with-cuda \
  && make -j $(nproc) all \
  && make install \
  && ldconfig \
  && cd / \
- && rm -rf /tmp/openmpi
+ && rm -rf /tmp/openmpi && rm openmpi-${OMPI_VERSION}.tar.gz
 
 ENV PATH="$OPEN_MPI_PATH/bin:$PATH"
 ENV LD_LIBRARY_PATH=$OPEN_MPI_PATH/lib/:$EFA_PATH/lib/:$LD_LIBRARY_PATH
 
 RUN ompi_info --parsable --all | grep mpi_built_with_cuda_support:value \
- && curl -L -o ~/mambaforge.sh https://github.com/conda-forge/miniforge/releases/download/${MAMBA_VERSION}/Mambaforge-${MAMBA_VERSION}-Linux-x86_64.sh \
+ && curl -f -L -o ~/mambaforge.sh https://github.com/conda-forge/miniforge/releases/download/${MAMBA_VERSION}/Mambaforge-${MAMBA_VERSION}-Linux-x86_64.sh \
  && chmod +x ~/mambaforge.sh \
  && ~/mambaforge.sh -b -p /opt/conda \
  && rm ~/mambaforge.sh \
@@ -178,7 +178,7 @@ RUN ompi_info --parsable --all | grep mpi_built_with_cuda_support:value \
 RUN rm -rf /opt/conda/lib/libtinfo.so.6
 
 RUN /opt/conda/bin/conda config --set ssl_verify False \
- && pip install --upgrade pip --trusted-host pypi.org --trusted-host files.pythonhosted.org \
+ && pip install --no-cache-dir --upgrade pip --trusted-host pypi.org --trusted-host \
  && ln -s /opt/conda/bin/pip /usr/local/bin/pip3
 
 WORKDIR /root
@@ -204,7 +204,7 @@ COPY deep_learning_container.py /usr/local/bin/deep_learning_container.py
 
 RUN chmod +x /usr/local/bin/deep_learning_container.py
 
-RUN curl -o /license.txt  https://aws-dlc-licenses.s3.amazonaws.com/pytorch-1.12/license.txt
+RUN curl -f -o /license.txt https://aws-dlc-licenses.s3.amazonaws.com/pytorch-1.12/license.txt
 
 ##############################################################################
 #  _____ _____   ___                              ____           _
@@ -250,13 +250,13 @@ RUN mv $OPEN_MPI_PATH/bin/mpirun $OPEN_MPI_PATH/bin/mpirun.real \
  && echo NCCL_SOCKET_IFNAME=^docker0 >> /etc/nccl.conf
 
 # Install AWS OFI NCCL plug-in
-RUN apt-get update && apt-get install -y autoconf
+RUN apt-get update && apt-get install --no-install-recommends -y autoconf && rm -rf /var/lib/apt/lists/*;
 RUN mkdir /tmp/efa-ofi-nccl \
  && cd /tmp/efa-ofi-nccl \
  && git clone https://github.com/aws/aws-ofi-nccl.git -b v${BRANCH_OFI} \
  && cd aws-ofi-nccl \
  && ./autogen.sh \
- && ./configure --with-libfabric=/opt/amazon/efa \
+ && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --with-libfabric=/opt/amazon/efa \
   --with-mpi=/opt/amazon/openmpi \
   --with-cuda=/usr/local/cuda \
   --with-nccl=/usr/local --prefix=/usr/local \
@@ -300,7 +300,7 @@ RUN mkdir -p /etc/pki/tls/certs && cp /etc/ssl/certs/ca-certificates.crt /etc/pk
 WORKDIR /
 
 RUN HOME_DIR=/root \
- && curl -o ${HOME_DIR}/oss_compliance.zip https://aws-dlinfra-utilities.s3.amazonaws.com/oss_compliance.zip \
+ && curl -f -o ${HOME_DIR}/oss_compliance.zip https://aws-dlinfra-utilities.s3.amazonaws.com/oss_compliance.zip \
  && unzip ${HOME_DIR}/oss_compliance.zip -d ${HOME_DIR}/ \
  && cp ${HOME_DIR}/oss_compliance/test/testOSSCompliance /usr/local/bin/testOSSCompliance \
  && chmod +x /usr/local/bin/testOSSCompliance \
@@ -378,13 +378,13 @@ RUN mv $OPEN_MPI_PATH/bin/mpirun $OPEN_MPI_PATH/bin/mpirun.real \
  && echo NCCL_SOCKET_IFNAME=^docker0 >> /etc/nccl.conf
 
 # Install AWS OFI NCCL plug-in
-RUN apt-get update && apt-get install -y autoconf
+RUN apt-get update && apt-get install --no-install-recommends -y autoconf && rm -rf /var/lib/apt/lists/*;
 RUN mkdir /tmp/efa-ofi-nccl \
  && cd /tmp/efa-ofi-nccl \
  && git clone https://github.com/aws/aws-ofi-nccl.git -b v${BRANCH_OFI} \
  && cd aws-ofi-nccl \
  && ./autogen.sh \
- && ./configure --with-libfabric=/opt/amazon/efa \
+ && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --with-libfabric=/opt/amazon/efa \
   --with-mpi=/opt/amazon/openmpi \
   --with-cuda=/usr/local/cuda \
   --with-nccl=/usr/local --prefix=/usr/local \
@@ -483,7 +483,7 @@ RUN pip install --no-cache-dir -U \
 
 # install metis
 RUN rm /etc/apt/sources.list.d/* \
- && wget -nv http://glaros.dtc.umn.edu/gkhome/fetch/sw/metis/${METIS}.tar.gz \
+ && wget -nv https://glaros.dtc.umn.edu/gkhome/fetch/sw/metis/${METIS}.tar.gz \
  && gunzip -f ${METIS}.tar.gz \
  && tar -xvf ${METIS}.tar \
  && cd ${METIS} \
@@ -517,7 +517,7 @@ ENV LD_LIBRARY_PATH="/opt/conda/lib/python${PYTHON_SHORT_VERSION}/site-packages/
 WORKDIR /
 
 RUN HOME_DIR=/root \
- && curl -o ${HOME_DIR}/oss_compliance.zip https://aws-dlinfra-utilities.s3.amazonaws.com/oss_compliance.zip \
+ && curl -f -o ${HOME_DIR}/oss_compliance.zip https://aws-dlinfra-utilities.s3.amazonaws.com/oss_compliance.zip \
  && unzip ${HOME_DIR}/oss_compliance.zip -d ${HOME_DIR}/ \
  && cp ${HOME_DIR}/oss_compliance/test/testOSSCompliance /usr/local/bin/testOSSCompliance \
  && chmod +x /usr/local/bin/testOSSCompliance \