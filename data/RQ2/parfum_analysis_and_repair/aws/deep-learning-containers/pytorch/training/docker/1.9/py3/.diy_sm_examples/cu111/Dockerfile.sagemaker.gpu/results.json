{
  "startTime": 1674215795856,
  "endTime": 1674215796672,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 108
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Expecting base image to be the image built by ./Dockerfile.diy.gpu\nARG BASE_IMAGE=\"\"\n\nFROM $BASE_IMAGE\n\nLABEL maintainer=\"Amazon AI\"\nLABEL dlc_major_version=\"1\"\n\nARG PYTHON=python3\nARG PYTHON_VERSION=3.8.10\nARG PYTHON_SHORT_VERSION=3.8\nARG CONDA_PREFIX=/opt/conda\n\n# The smdebug pipeline relies for following format to perform string replace and trigger DLC pipeline for validating\n# the nightly builds. Therefore, while updating the smdebug version, please ensure that the format is not disturbed.\nARG SMDEBUG_VERSION=1.0.9\n\nENV SAGEMAKER_TRAINING_MODULE=sagemaker_pytorch_container.training:main\n\nARG SMD_MODEL_PARALLEL_URL=https://sagemaker-distributed-model-parallel.s3.us-west-2.amazonaws.com/pytorch-1.9.0/build-artifacts/2021-06-29-16-48/smdistributed_modelparallel-1.4.0-cp38-cp38-linux_x86_64.whl\nARG SMDATAPARALLEL_BINARY=https://smdataparallel.s3.amazonaws.com/binary/pytorch/1.9.0/cu111/2021-08-13/smdistributed_dataparallel-1.2.0-cp38-cp38-linux_x86_64.whl\n\n# Install libboost from source. This package is needed for smdataparallel functionality [for networking asynchronous IO].\nRUN wget https://sourceforge.net/projects/boost/files/boost/1.73.0/boost_1_73_0.tar.gz/download -O boost_1_73_0.tar.gz \\\n  && tar -xzf boost_1_73_0.tar.gz \\\n  && cd boost_1_73_0 \\\n  && ./bootstrap.sh \\\n  && ./b2 threading=multi --prefix=${CONDA_PREFIX} -j 64 cxxflags=-fPIC cflags=-fPIC install || true \\\n  && cd .. \\\n  && rm -rf boost_1_73_0.tar.gz \\\n  && rm -rf boost_1_73_0 \\\n  && cd ${CONDA_PREFIX}/include/boost\n\nWORKDIR /opt/pytorch\n\n# Copy workaround script for incorrect hostname\nCOPY changehostname.c /\nCOPY start_with_right_hostname.sh /usr/local/bin/start_with_right_hostname.sh\n\nWORKDIR /root\n\nRUN pip install --no-cache-dir -U \\\n    smdebug==${SMDEBUG_VERSION} \\\n    smclarify \\\n    \"sagemaker>=2,<3\" \\\n    sagemaker-experiments==0.* \\\n    sagemaker-pytorch-training\n\n# Install SM Distributed Modelparallel binary\nRUN pip install --no-cache-dir -U ${SMD_MODEL_PARALLEL_URL}\n\n# Install SM Distributed DataParallel binary\nRUN SMDATAPARALLEL_PT=1 pip install --no-cache-dir ${SMDATAPARALLEL_BINARY}\n\nENV LD_LIBRARY_PATH=\"/opt/conda/lib/python${PYTHON_SHORT_VERSION}/site-packages/smdistributed/dataparallel/lib:$LD_LIBRARY_PATH\"\n\nWORKDIR /\n\nRUN chmod +x /usr/local/bin/start_with_right_hostname.sh\n\nRUN HOME_DIR=/root \\\n && curl -f -o ${HOME_DIR}/oss_compliance.zip https://aws-dlinfra-utilities.s3.amazonaws.com/oss_compliance.zip \\\n && unzip ${HOME_DIR}/oss_compliance.zip -d ${HOME_DIR}/ \\\n && cp ${HOME_DIR}/oss_compliance/test/testOSSCompliance /usr/local/bin/testOSSCompliance \\\n && chmod +x /usr/local/bin/testOSSCompliance \\\n && chmod +x ${HOME_DIR}/oss_compliance/generate_oss_compliance.sh \\\n && ${HOME_DIR}/oss_compliance/generate_oss_compliance.sh ${HOME_DIR} ${PYTHON} \\\n && rm -rf ${HOME_DIR}/oss_compliance* \\\n && rm -rf /tmp/tmp*\n\n# Starts framework\nENTRYPOINT [\"bash\", \"-m\", \"start_with_right_hostname.sh\"]\nCMD [\"/bin/bash\"]\n"
}