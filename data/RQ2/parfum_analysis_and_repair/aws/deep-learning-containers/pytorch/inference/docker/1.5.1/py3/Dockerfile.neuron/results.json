{
  "startTime": 1674252733637,
  "endTime": 1674252734452,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 99
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 133,
        "lineEnd": 133,
        "columnStart": 4,
        "columnEnd": 108
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 141,
        "lineEnd": 141,
        "columnStart": 4,
        "columnEnd": 92
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 82,
        "lineEnd": 82,
        "columnStart": 4,
        "columnEnd": 91
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 84,
        "lineEnd": 87,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 108,
        "lineEnd": 108,
        "columnStart": 4,
        "columnEnd": 94
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 109,
        "lineEnd": 109,
        "columnStart": 4,
        "columnEnd": 109
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 110,
        "lineEnd": 110,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 114,
        "lineEnd": 114,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 115,
        "lineEnd": 115,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 44,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 44,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 7,
        "columnEnd": 76
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 20,
        "lineEnd": 38,
        "columnStart": 7,
        "columnEnd": 14
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 44,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 20
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 44,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 20
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:16.04\n\nLABEL dlc_major_version=\"1\"\nLABEL maintainer=\"Amazon AI\"\nLABEL com.amazonaws.sagemaker.capabilities.accept-bind-to-port=true\n\nARG PYTHON=python3\nARG PYTHON_VERSION=3.6.13\n\n# See http://bugs.python.org/issue19846\nENV LANG C.UTF-8\nENV LD_LIBRARY_PATH /opt/conda/lib/:$LD_LIBRARY_PATH\nENV PATH /opt/conda/bin:$PATH\nENV SAGEMAKER_SERVING_MODULE sagemaker_pytorch_serving_container.serving:main\nENV TEMP=/home/model-server/tmp\n\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends software-properties-common \\\n    && add-apt-repository ppa:openjdk-r/ppa \\\n    && apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n    build-essential \\\n    apt-transport-https \\\n    ca-certificates \\\n    cmake \\\n    curl \\\n    emacs \\\n    git \\\n    jq \\\n    libgl1-mesa-glx \\\n    libglib2.0-0 \\\n    libsm6 \\\n    libxext6 \\\n    libxrender-dev \\\n    openjdk-11-jdk \\\n    vim \\\n    wget \\\n    unzip \\\n    zlib1g-dev && rm -rf /var/lib/apt/lists/*;\n\nRUN echo \"deb https://apt.repos.neuron.amazonaws.com xenial main\" > /etc/apt/sources.list.d/neuron.list\nRUN wget -qO - https://apt.repos.neuron.amazonaws.com/GPG-PUB-KEY-AMAZON-AWS-NEURON.PUB | apt-key add -\nRUN apt-get update\n\nRUN apt-get install --no-install-recommends -y \\\n    aws-neuron-runtime \\\n    aws-neuron-tools && rm -rf /var/lib/apt/lists/*;\n\n# https://github.com/docker-library/openjdk/issues/261 https://github.com/docker-library/openjdk/pull/263/files\nRUN keytool -importkeystore -srckeystore /etc/ssl/certs/java/cacerts -destkeystore /etc/ssl/certs/java/cacerts.jks -deststoretype JKS -srcstorepass changeit -deststorepass changeit -noprompt; \\\n    mv /etc/ssl/certs/java/cacerts.jks /etc/ssl/certs/java/cacerts; \\\n    /var/lib/dpkg/info/ca-certificates-java.postinst configure;\n\nRUN curl -f -L -o ~/miniconda.sh https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh \\\n && chmod +x ~/miniconda.sh \\\n && ~/miniconda.sh -b -p /opt/conda \\\n && rm ~/miniconda.sh \\\n && /opt/conda/bin/conda update conda \\\n && /opt/conda/bin/conda install -c conda-forge \\\n    python=$PYTHON_VERSION \\\n && /opt/conda/bin/conda install -y \\\n    # conda 4.9.2 requires ruamel_yaml to be installed. Currently pinned at latest.\n    ruamel_yaml==0.15.100 \\\n    cython==0.29.12 \\\n    ipython==7.7.0 \\\n    mkl-include==2019.4 \\\n    mkl==2019.4 \\\n    numpy==1.19.1 \\\n    scipy==1.3.0 \\\n    typing==3.6.4 \\\n    parso==0.8.0 \\\n && /opt/conda/bin/conda clean -ya\n\nRUN conda install -c \\\n    conda-forge \\\n    opencv==4.0.1 \\\n && conda install -y \\\n    scikit-learn==0.21.2 \\\n    pandas==0.25.0 \\\n    h5py==2.9.0 \\\n    requests==2.22.0 \\\n && conda clean -ya \\\n && pip install --no-cache-dir --upgrade pip --trusted-host pypi.org --trusted-host \\\n && ln -s /opt/conda/bin/pip /usr/local/bin/pip3 \\\n && pip install --no-cache-dir packaging==20.4 \\\n    enum-compat==0.0.3 \\\n\n    \"cryptography>=3.3.2\"\n\nRUN pip install --no-cache-dir -U \\\n    numpy==1.17.4 \\\n    scipy==1.2.2 \\\n    scikit-learn==0.20.3 \\\n    pandas==0.24.2 \\\n    h5py==2.10.0 \\\n    # install PyYAML>=5.4 to avoid conflict with latest awscli\n    \"pyYAML>=5.4,<5.5\" \\\n    cython==0.29.12 \\\n    falcon==2.0.0 \\\n    gunicorn==20.0.4 \\\n    gevent==1.4.0 \\\n    requests==2.22.0 \\\n    grpcio==1.24.1 \\\n    protobuf==3.10.0 \\\n    gast==0.2.2 \\\n    pillow==8.2.0 \\\n    \"awscli<2\"\n\nRUN pip install --no-cache-dir neuron-cc[tensorflow] --extra-index-url https://pip.repos.neuron.amazonaws.com \\\n && pip install --no-cache-dir \"torch-neuron>=1.5.1.1.2,<1.5.1.1.3\" --extra-index-url https://pip.repos.neuron.amazonaws.com \\\n && pip install --no-cache-dir torchserve --no-deps \\\n && pip install --no-deps --no-cache-dir -U \\\n    https://torchvision-build.s3.amazonaws.com/1.5.0/gpu/torchvision-0.6.0-cp36-cp36m-manylinux1_x86_64.whl \\\n # Install TF 1.15.5 to override neuron-cc[tensorflow]'s installation of tensorflow==1.15.0\n && pip install --no-cache-dir -U tensorflow==1.15.5 \\\n && pip install --no-cache-dir torch-model-archiver\n\nRUN useradd -m model-server \\\n && mkdir -p /home/model-server/tmp /opt/ml/model \\\n && chown -R model-server /home/model-server /opt/ml/model\n\nCOPY torchserve-entrypoint.py /usr/local/bin/dockerd-entrypoint.py\nCOPY config.properties /home/model-server\n\nRUN chmod +x /usr/local/bin/dockerd-entrypoint.py\n\nADD https://raw.githubusercontent.com/aws/deep-learning-containers/master/src/deep_learning_container.py /usr/local/bin/deep_learning_container.py\n\nRUN chmod +x /usr/local/bin/deep_learning_container.py\n\nRUN pip install --no-cache-dir \"sagemaker-pytorch-inference>=2\"\n\nRUN HOME_DIR=/root \\\n && curl -f -o ${HOME_DIR}/oss_compliance.zip https://aws-dlinfra-utilities.s3.amazonaws.com/oss_compliance.zip \\\n && unzip ${HOME_DIR}/oss_compliance.zip -d ${HOME_DIR}/ \\\n && cp ${HOME_DIR}/oss_compliance/test/testOSSCompliance /usr/local/bin/testOSSCompliance \\\n && chmod +x /usr/local/bin/testOSSCompliance \\\n && chmod +x ${HOME_DIR}/oss_compliance/generate_oss_compliance.sh \\\n && ${HOME_DIR}/oss_compliance/generate_oss_compliance.sh ${HOME_DIR} ${PYTHON} \\\n && rm -rf ${HOME_DIR}/oss_compliance*\n\nRUN curl -f https://aws-dlc-licenses.s3.amazonaws.com/pytorch-1.5.1/license.txt -o /license.txt\n\nEXPOSE 8080 8081\nCOPY entrypoint.sh /usr/local/bin/\nRUN chmod +x /usr/local/bin/entrypoint.sh\n\nCMD [\"/usr/local/bin/entrypoint.sh\"]\n"
}