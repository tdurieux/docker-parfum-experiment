diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/aws/deep-learning-containers/pytorch/inference/docker/1.3.1/py3/Dockerfile.eia b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/aws/deep-learning-containers/pytorch/inference/docker/1.3.1/py3/Dockerfile.eia/repaired.Dockerfile
index d76d7f0..bfaf41f 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/aws/deep-learning-containers/pytorch/inference/docker/1.3.1/py3/Dockerfile.eia
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/aws/deep-learning-containers/pytorch/inference/docker/1.3.1/py3/Dockerfile.eia/repaired.Dockerfile
@@ -38,7 +38,7 @@ RUN apt-get update \
     vim \
     wget \
     unzip \
-    zlib1g-dev
+    zlib1g-dev && rm -rf /var/lib/apt/lists/*;
 
 # Install OpenSSH. Allow OpenSSH to talk to containers without asking for confirmation
 RUN apt-get install -y --no-install-recommends \
@@ -47,9 +47,9 @@ RUN apt-get install -y --no-install-recommends \
  && mkdir -p /var/run/sshd \
  && cat /etc/ssh/ssh_config | grep -v StrictHostKeyChecking > /etc/ssh/ssh_config.new \
  && echo "    StrictHostKeyChecking no" >> /etc/ssh/ssh_config.new \
- && mv /etc/ssh/ssh_config.new /etc/ssh/ssh_configs
+ && mv /etc/ssh/ssh_config.new /etc/ssh/ssh_configs && rm -rf /var/lib/apt/lists/*;
 
-RUN curl -L -o ~/miniconda.sh https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh \
+RUN curl -f -L -o ~/miniconda.sh https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh \
  && chmod +x ~/miniconda.sh \
  && ~/miniconda.sh -b -p /opt/conda \
  && rm ~/miniconda.sh \
@@ -76,12 +76,12 @@ RUN conda install -c \
     requests==2.22.0 \
  && conda clean -ya \
  && /opt/conda/bin/conda config --set ssl_verify False \
- && pip install --upgrade pip --trusted-host pypi.org --trusted-host files.pythonhosted.org \
+ && pip install --no-cache-dir --upgrade pip --trusted-host pypi.org --trusted-host \
  && ln -s /opt/conda/bin/pip /usr/local/bin/pip3 \
  # Torchvision wheel must be installed first, so that PyTorch-EI framework is not overwritten.
- && pip install https://download.pytorch.org/whl/cpu/torchvision-0.4.2%2Bcpu-cp36-cp36m-linux_x86_64.whl \
- && pip install https://s3.amazonaws.com/amazonei-pytorch/torch_eia-1.3.1-cp36-cp36m-manylinux1_x86_64.whl \
- && pip install \
+ && pip install --no-cache-dir https://download.pytorch.org/whl/cpu/torchvision-0.4.2%2Bcpu-cp36-cp36m-linux_x86_64.whl \
+ && pip install --no-cache-dir https://s3.amazonaws.com/amazonei-pytorch/torch_eia-1.3.1-cp36-cp36m-manylinux1_x86_64.whl \
+ && pip install --no-cache-dir \
     graphviz==$GRAPHVIZ_VERSION \
     multi-model-server==$MMS_VERSION \
     pillow==7.2.0 \
@@ -98,7 +98,7 @@ RUN chmod +x /usr/local/bin/dockerd-entrypoint.py
 
 RUN pip install --no-cache-dir "sagemaker-pytorch-inference<2"
 
-RUN curl https://aws-dlc-licenses.s3.amazonaws.com/pytorch/license.txt -o /license.txt
+RUN curl -f https://aws-dlc-licenses.s3.amazonaws.com/pytorch/license.txt -o /license.txt
 
 # Symlink libssl.so and libcrypto.so files to allow PyTorch 1.3.1 EIA to work with Python 3.6.13, since Conda forces
 # the installation of OpenSSL 1.1.1, rather than using 1.0.2 from the OS.
@@ -108,7 +108,7 @@ RUN rm /opt/conda/lib/python3.6/site-packages/torch/lib/libssl.so.1.0.0 \
  && ln -s /lib/x86_64-linux-gnu/libcrypto.so.1.0.0 /opt/conda/lib/python3.6/site-packages/torch/lib/libcrypto.so.1.0.0
 
 RUN conda install -y -c conda-forge "pyyaml>=5.4,<5.5" \
- && pip install -U \
+ && pip install --no-cache-dir -U \
     "awscli<2"
 
 RUN wget https://amazonei-tools.s3.amazonaws.com/v${HEALTH_CHECK_VERSION}/ei_tools_${HEALTH_CHECK_VERSION}.tar.gz -O /opt/ei_tools_${HEALTH_CHECK_VERSION}.tar.gz \
@@ -120,7 +120,7 @@ RUN wget https://amazonei-tools.s3.amazonaws.com/v${HEALTH_CHECK_VERSION}/ei_too
  && ln -s /opt/ei_tools/lib /opt/ei_health_check/lib
 
 RUN HOME_DIR=/root \
- && curl -o ${HOME_DIR}/oss_compliance.zip https://aws-dlinfra-utilities.s3.amazonaws.com/oss_compliance.zip \
+ && curl -f -o ${HOME_DIR}/oss_compliance.zip https://aws-dlinfra-utilities.s3.amazonaws.com/oss_compliance.zip \
  && unzip ${HOME_DIR}/oss_compliance.zip -d ${HOME_DIR}/ \
  && cp ${HOME_DIR}/oss_compliance/test/testOSSCompliance /usr/local/bin/testOSSCompliance \
  && chmod +x /usr/local/bin/testOSSCompliance \