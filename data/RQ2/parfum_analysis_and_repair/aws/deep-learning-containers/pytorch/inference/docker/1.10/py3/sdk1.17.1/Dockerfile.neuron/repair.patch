diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/aws/deep-learning-containers/pytorch/inference/docker/1.10/py3/sdk1.17.1/Dockerfile.neuron b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/aws/deep-learning-containers/pytorch/inference/docker/1.10/py3/sdk1.17.1/Dockerfile.neuron/repaired.Dockerfile
index 034eae4..3ea0caf 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/aws/deep-learning-containers/pytorch/inference/docker/1.10/py3/sdk1.17.1/Dockerfile.neuron
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/aws/deep-learning-containers/pytorch/inference/docker/1.10/py3/sdk1.17.1/Dockerfile.neuron/repaired.Dockerfile
@@ -49,7 +49,7 @@ RUN echo "deb https://apt.repos.neuron.amazonaws.com bionic main" > /etc/apt/sou
 RUN wget -qO - https://apt.repos.neuron.amazonaws.com/GPG-PUB-KEY-AMAZON-AWS-NEURON.PUB | apt-key add -
 
 RUN apt-get update \
- && apt-get install -y \
+ && apt-get install --no-install-recommends -y \
     aws-neuron-tools=2.0.623.0 \
  && rm -rf /var/lib/apt/lists/* \
  && rm -rf /tmp/tmp* \
@@ -61,7 +61,7 @@ RUN keytool -importkeystore -srckeystore /etc/ssl/certs/java/cacerts -destkeysto
     mv /etc/ssl/certs/java/cacerts.jks /etc/ssl/certs/java/cacerts; \
     /var/lib/dpkg/info/ca-certificates-java.postinst configure;
 
-RUN curl -L -o ~/mambaforge.sh https://github.com/conda-forge/miniforge/releases/download/${MAMBA_VERSION}/Mambaforge-${MAMBA_VERSION}-Linux-x86_64.sh \
+RUN curl -f -L -o ~/mambaforge.sh https://github.com/conda-forge/miniforge/releases/download/${MAMBA_VERSION}/Mambaforge-${MAMBA_VERSION}-Linux-x86_64.sh \
  && chmod +x ~/mambaforge.sh \
  && ~/mambaforge.sh -b -p /opt/conda \
  && rm ~/mambaforge.sh \
@@ -86,13 +86,13 @@ RUN conda install -c conda-forge \
     h5py \
     requests \
  && conda clean -ya \
- && pip install --upgrade pip --trusted-host pypi.org --trusted-host files.pythonhosted.org \
+ && pip install --no-cache-dir --upgrade pip --trusted-host pypi.org --trusted-host \
  && ln -s /opt/conda/bin/pip /usr/local/bin/pip3 \
- && pip install packaging==20.4 \
+ && pip install --no-cache-dir packaging==20.4 \
     enum-compat==0.0.3 \
     numpy==1.20.3 \
     ipython \
-    # pyOpenSSL requires cryptography>=2.3, but all versions <3.3 have vulnerabilities
+
     "cryptography>=3.3.2"
 
 RUN pip install --no-cache-dir -U \
@@ -105,13 +105,13 @@ RUN pip install --no-cache-dir -U \
     protobuf==3.19.4 \
     boto3
 
-RUN pip install neuron-cc[tensorflow]==1.9.1.0 --extra-index-url https://pip.repos.neuron.amazonaws.com \
- && pip install "torch-neuron==1.10.1.2.1.7.0" --extra-index-url https://pip.repos.neuron.amazonaws.com \
- && pip install torchserve==$TS_VERSION \
+RUN pip install --no-cache-dir neuron-cc[tensorflow]==1.9.1.0 --extra-index-url https://pip.repos.neuron.amazonaws.com \
+ && pip install --no-cache-dir "torch-neuron==1.10.1.2.1.7.0" --extra-index-url https://pip.repos.neuron.amazonaws.com \
+ && pip install --no-cache-dir torchserve==$TS_VERSION \
  && pip install --no-deps --no-cache-dir -U torchvision==0.11.2 \
  # Install TF 1.15.5 to override neuron-cc[tensorflow]'s installation of tensorflow==1.15.0
- && pip install -U tensorflow==1.15.5 \
- && pip install torch-model-archiver==$TS_VERSION
+ && pip install --no-cache-dir -U tensorflow==1.15.5 \
+ && pip install --no-cache-dir torch-model-archiver==$TS_VERSION
 
 RUN useradd -m model-server \
  && mkdir -p /home/model-server/tmp /opt/ml/model \
@@ -133,7 +133,7 @@ RUN chmod +x /usr/local/bin/deep_learning_container.py
 RUN pip install --no-cache-dir "sagemaker-pytorch-inference==2.0.8"
 
 RUN HOME_DIR=/root \
- && curl -o ${HOME_DIR}/oss_compliance.zip https://aws-dlinfra-utilities.s3.amazonaws.com/oss_compliance.zip \
+ && curl -f -o ${HOME_DIR}/oss_compliance.zip https://aws-dlinfra-utilities.s3.amazonaws.com/oss_compliance.zip \
  && unzip ${HOME_DIR}/oss_compliance.zip -d ${HOME_DIR}/ \
  && cp ${HOME_DIR}/oss_compliance/test/testOSSCompliance /usr/local/bin/testOSSCompliance \
  && chmod +x /usr/local/bin/testOSSCompliance \
@@ -141,7 +141,7 @@ RUN HOME_DIR=/root \
  && ${HOME_DIR}/oss_compliance/generate_oss_compliance.sh ${HOME_DIR} ${PYTHON} \
  && rm -rf ${HOME_DIR}/oss_compliance*
 
-RUN curl https://aws-dlc-licenses.s3.amazonaws.com/pytorch-1.10/license.txt -o /license.txt
+RUN curl -f https://aws-dlc-licenses.s3.amazonaws.com/pytorch-1.10/license.txt -o /license.txt
 
 EXPOSE 8080 8081