diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/aws/deep-learning-containers/pytorch/inference/docker/1.5.1/py3/Dockerfile.neuron b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/aws/deep-learning-containers/pytorch/inference/docker/1.5.1/py3/Dockerfile.neuron/repaired.Dockerfile
index 7ef498f..5f85013 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/aws/deep-learning-containers/pytorch/inference/docker/1.5.1/py3/Dockerfile.neuron
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/aws/deep-learning-containers/pytorch/inference/docker/1.5.1/py3/Dockerfile.neuron/repaired.Dockerfile
@@ -36,22 +36,22 @@ RUN apt-get update \
     vim \
     wget \
     unzip \
-    zlib1g-dev
+    zlib1g-dev && rm -rf /var/lib/apt/lists/*;
 
 RUN echo "deb https://apt.repos.neuron.amazonaws.com xenial main" > /etc/apt/sources.list.d/neuron.list
 RUN wget -qO - https://apt.repos.neuron.amazonaws.com/GPG-PUB-KEY-AMAZON-AWS-NEURON.PUB | apt-key add -
 RUN apt-get update
 
-RUN apt-get install -y \
+RUN apt-get install --no-install-recommends -y \
     aws-neuron-runtime \
-    aws-neuron-tools
+    aws-neuron-tools && rm -rf /var/lib/apt/lists/*;
 
 # https://github.com/docker-library/openjdk/issues/261 https://github.com/docker-library/openjdk/pull/263/files
 RUN keytool -importkeystore -srckeystore /etc/ssl/certs/java/cacerts -destkeystore /etc/ssl/certs/java/cacerts.jks -deststoretype JKS -srcstorepass changeit -deststorepass changeit -noprompt; \
     mv /etc/ssl/certs/java/cacerts.jks /etc/ssl/certs/java/cacerts; \
     /var/lib/dpkg/info/ca-certificates-java.postinst configure;
 
-RUN curl -L -o ~/miniconda.sh https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh \
+RUN curl -f -L -o ~/miniconda.sh https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh \
  && chmod +x ~/miniconda.sh \
  && ~/miniconda.sh -b -p /opt/conda \
  && rm ~/miniconda.sh \
@@ -80,11 +80,11 @@ RUN conda install -c \
     h5py==2.9.0 \
     requests==2.22.0 \
  && conda clean -ya \
- && pip install --upgrade pip --trusted-host pypi.org --trusted-host files.pythonhosted.org \
+ && pip install --no-cache-dir --upgrade pip --trusted-host pypi.org --trusted-host \
  && ln -s /opt/conda/bin/pip /usr/local/bin/pip3 \
- && pip install packaging==20.4 \
+ && pip install --no-cache-dir packaging==20.4 \
     enum-compat==0.0.3 \
-    # pyOpenSSL requires cryptography>=2.3, but all versions <3.3 have vulnerabilities
+
     "cryptography>=3.3.2"
 
 RUN pip install --no-cache-dir -U \
@@ -106,14 +106,14 @@ RUN pip install --no-cache-dir -U \
     pillow==8.2.0 \
     "awscli<2"
 
-RUN pip install neuron-cc[tensorflow] --extra-index-url https://pip.repos.neuron.amazonaws.com \
- && pip install "torch-neuron>=1.5.1.1.2,<1.5.1.1.3" --extra-index-url https://pip.repos.neuron.amazonaws.com \
- && pip install torchserve --no-deps \
+RUN pip install --no-cache-dir neuron-cc[tensorflow] --extra-index-url https://pip.repos.neuron.amazonaws.com \
+ && pip install --no-cache-dir "torch-neuron>=1.5.1.1.2,<1.5.1.1.3" --extra-index-url https://pip.repos.neuron.amazonaws.com \
+ && pip install --no-cache-dir torchserve --no-deps \
  && pip install --no-deps --no-cache-dir -U \
     https://torchvision-build.s3.amazonaws.com/1.5.0/gpu/torchvision-0.6.0-cp36-cp36m-manylinux1_x86_64.whl \
  # Install TF 1.15.5 to override neuron-cc[tensorflow]'s installation of tensorflow==1.15.0
- && pip install -U tensorflow==1.15.5 \
- && pip install torch-model-archiver
+ && pip install --no-cache-dir -U tensorflow==1.15.5 \
+ && pip install --no-cache-dir torch-model-archiver
 
 RUN useradd -m model-server \
  && mkdir -p /home/model-server/tmp /opt/ml/model \
@@ -131,7 +131,7 @@ RUN chmod +x /usr/local/bin/deep_learning_container.py
 RUN pip install --no-cache-dir "sagemaker-pytorch-inference>=2"
 
 RUN HOME_DIR=/root \
- && curl -o ${HOME_DIR}/oss_compliance.zip https://aws-dlinfra-utilities.s3.amazonaws.com/oss_compliance.zip \
+ && curl -f -o ${HOME_DIR}/oss_compliance.zip https://aws-dlinfra-utilities.s3.amazonaws.com/oss_compliance.zip \
  && unzip ${HOME_DIR}/oss_compliance.zip -d ${HOME_DIR}/ \
  && cp ${HOME_DIR}/oss_compliance/test/testOSSCompliance /usr/local/bin/testOSSCompliance \
  && chmod +x /usr/local/bin/testOSSCompliance \
@@ -139,7 +139,7 @@ RUN HOME_DIR=/root \
  && ${HOME_DIR}/oss_compliance/generate_oss_compliance.sh ${HOME_DIR} ${PYTHON} \
  && rm -rf ${HOME_DIR}/oss_compliance*
 
-RUN curl https://aws-dlc-licenses.s3.amazonaws.com/pytorch-1.5.1/license.txt -o /license.txt
+RUN curl -f https://aws-dlc-licenses.s3.amazonaws.com/pytorch-1.5.1/license.txt -o /license.txt
 
 EXPOSE 8080 8081
 COPY entrypoint.sh /usr/local/bin/