diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/aws/deep-learning-containers/tensorflow/training/docker/2.8/py3/Dockerfile.cpu b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/aws/deep-learning-containers/tensorflow/training/docker/2.8/py3/Dockerfile.cpu/repaired.Dockerfile
index 3b8de99..0d7e5c2 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/aws/deep-learning-containers/tensorflow/training/docker/2.8/py3/Dockerfile.cpu
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/aws/deep-learning-containers/tensorflow/training/docker/2.8/py3/Dockerfile.cpu/repaired.Dockerfile
@@ -3,7 +3,7 @@ FROM ubuntu:20.04 AS common
 LABEL maintainer="Amazon AI"
 LABEL dlc_major_version="1"
 
-# TensorFlow major.minor version 
+# TensorFlow major.minor version
 ENV TF_VERSION=2.8
 
 # prevent stopping by user interaction
@@ -59,11 +59,11 @@ RUN mkdir /tmp/openmpi \
  && curl -fSsL -O https://download.open-mpi.org/release/open-mpi/v4.0/openmpi-4.0.4.tar.gz \
  && tar zxf openmpi-4.0.4.tar.gz \
  && cd openmpi-4.0.4 \
- && ./configure --enable-orterun-prefix-by-default \
+ && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --enable-orterun-prefix-by-default \
  && make -j $(nproc) all \
  && make install \
  && ldconfig \
- && rm -rf /tmp/openmpi
+ && rm -rf /tmp/openmpi && rm openmpi-4.0.4.tar.gz
 
 # Create a wrapper for OpenMPI to allow running as root by default
 RUN mv /usr/local/bin/mpirun /usr/local/bin/mpirun.real \
@@ -110,12 +110,12 @@ RUN apt-get update \
 RUN wget https://www.python.org/ftp/python/$PYTHON_VERSION/Python-$PYTHON_VERSION.tgz \
  && tar -xvf Python-$PYTHON_VERSION.tgz \
  && cd Python-$PYTHON_VERSION \
- && ./configure \
+ && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
  && make -j $(nproc) \
- && make install \ 
+ && make install \
  && rm -rf ../Python-$PYTHON_VERSION* \
  # Starting from Python39, a xxx.pem file will be generated under /tmp folder during installation. Remove it to complete cleanup after installation from python source.
- && rm /tmp/*.pem
+ && rm /tmp/*.pem && rm Python-$PYTHON_VERSION.tgz
 
 RUN ${PIP} --no-cache-dir install --upgrade \
     pip \
@@ -125,7 +125,7 @@ RUN ${PIP} --no-cache-dir install --upgrade \
 RUN ln -s $(which ${PYTHON}) /usr/local/bin/python \
  && ln -s $(which ${PIP}) /usr/bin/pip
 
-RUN apt-get update && apt-get -y install protobuf-compiler
+RUN apt-get update && apt-get -y --no-install-recommends install protobuf-compiler && rm -rf /var/lib/apt/lists/*;
 
 # install PyYAML==5.1.2 to avoid conflict with latest awscli
 # # python-dateutil==2.8.0 to satisfy botocore associated with latest awscli
@@ -153,7 +153,7 @@ ADD https://raw.githubusercontent.com/aws/deep-learning-containers/master/src/de
 
 RUN chmod +x /usr/local/bin/deep_learning_container.py
 
-RUN curl https://aws-dlc-licenses.s3.amazonaws.com/tensorflow-${TF_VERSION}/license.txt -o /license.txt
+RUN curl -f https://aws-dlc-licenses.s3.amazonaws.com/tensorflow-${TF_VERSION}/license.txt -o /license.txt
 
 ##############################################################################
 #  _____ _____   ___                              ____           _
@@ -179,7 +179,7 @@ RUN HOROVOD_WITH_MPI=1 \
    && ${PIP} install --no-cache-dir horovod==0.23.0
 
 RUN HOME_DIR=/root \
-   && curl -o ${HOME_DIR}/oss_compliance.zip https://aws-dlinfra-utilities.s3.amazonaws.com/oss_compliance.zip \
+   && curl -f -o ${HOME_DIR}/oss_compliance.zip https://aws-dlinfra-utilities.s3.amazonaws.com/oss_compliance.zip \
    && unzip ${HOME_DIR}/oss_compliance.zip -d ${HOME_DIR}/ \
    && cp ${HOME_DIR}/oss_compliance/test/testOSSCompliance /usr/local/bin/testOSSCompliance \
    && chmod +x /usr/local/bin/testOSSCompliance \
@@ -222,9 +222,9 @@ ARG TF_URL=https://framework-binaries.s3.us-west-2.amazonaws.com/tensorflow/smde
 # these dependencies are not needed for gpu image
 RUN apt-get update && apt-get install -y --no-install-recommends \
     libgtk2.0-dev \
-    && apt-get install -y -qq libkrb5-dev \
-    && apt-get install -y -qq libsasl2-dev libsasl2-modules \
-    && apt-get install -y -qq krb5-user \
+    && apt-get install --no-install-recommends -y -qq libkrb5-dev \
+    && apt-get install --no-install-recommends -y -qq libsasl2-dev libsasl2-modules \
+    && apt-get install --no-install-recommends -y -qq krb5-user \
 && rm -rf /var/lib/apt/lists/*
 
 RUN ${PIP} install --no-cache-dir -U \
@@ -265,7 +265,7 @@ RUN git clone https://github.com/awslabs/sagemaker-debugger.git \
 
 # install sagemaker-tensorflow from source
 ARG SAGEMAKER_TENSORFLOW_TAG=v1.14.0
-RUN apt update && apt install -y libcurl4-openssl-dev
+RUN apt update && apt install --no-install-recommends -y libcurl4-openssl-dev && rm -rf /var/lib/apt/lists/*;
 RUN git clone -b tf-2 https://github.com/aws/sagemaker-tensorflow-extensions.git \
     && cd sagemaker-tensorflow-extensions \
     && git checkout tags/$SAGEMAKER_TENSORFLOW_TAG -b $SAGEMAKER_TENSORFLOW_TAG \
@@ -276,7 +276,7 @@ RUN git clone -b tf-2 https://github.com/aws/sagemaker-tensorflow-extensions.git
 RUN rm -rf /tmp/*
 
 RUN HOME_DIR=/root \
-   && curl -o ${HOME_DIR}/oss_compliance.zip https://aws-dlinfra-utilities.s3.amazonaws.com/oss_compliance.zip \
+   && curl -f -o ${HOME_DIR}/oss_compliance.zip https://aws-dlinfra-utilities.s3.amazonaws.com/oss_compliance.zip \
    && unzip ${HOME_DIR}/oss_compliance.zip -d ${HOME_DIR}/ \
    && cp ${HOME_DIR}/oss_compliance/test/testOSSCompliance /usr/local/bin/testOSSCompliance \
    && chmod +x /usr/local/bin/testOSSCompliance \