diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/aws/deep-learning-containers/tensorflow/training/docker/2.5/py3/.diy_sm_examples/Dockerfile.diy.cpu b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/aws/deep-learning-containers/tensorflow/training/docker/2.5/py3/.diy_sm_examples/Dockerfile.diy.cpu/repaired.Dockerfile
index 9bbe8b4..fae2799 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/aws/deep-learning-containers/tensorflow/training/docker/2.5/py3/.diy_sm_examples/Dockerfile.diy.cpu
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/aws/deep-learning-containers/tensorflow/training/docker/2.5/py3/.diy_sm_examples/Dockerfile.diy.cpu/repaired.Dockerfile
@@ -55,11 +55,11 @@ RUN mkdir /tmp/openmpi && \
     curl -fSsL -O https://download.open-mpi.org/release/open-mpi/v4.0/openmpi-4.0.4.tar.gz \
  && tar zxf openmpi-4.0.4.tar.gz \
  && cd openmpi-4.0.4 \
- && ./configure --enable-orterun-prefix-by-default \
+ && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --enable-orterun-prefix-by-default \
  && make -j $(nproc) all \
  && make install \
  && ldconfig \
- && rm -rf /tmp/openmpi
+ && rm -rf /tmp/openmpi && rm openmpi-4.0.4.tar.gz
 
 # Create a wrapper for OpenMPI to allow running as root by default
 RUN mv /usr/local/bin/mpirun /usr/local/bin/mpirun.real \
@@ -106,8 +106,8 @@ RUN apt-get update \
 RUN wget https://www.python.org/ftp/python/$PYTHON_VERSION/Python-$PYTHON_VERSION.tgz \
  && tar -xvf Python-$PYTHON_VERSION.tgz \
  && cd Python-$PYTHON_VERSION \
- && ./configure && make && make install \
- && make && make install && rm -rf ../Python-$PYTHON_VERSION*
+ && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" && make && make install \
+ && make && make install && rm -rf ../Python-$PYTHON_VERSION* && rm Python-$PYTHON_VERSION.tgz
 
 RUN ${PIP} --no-cache-dir install --upgrade \
     pip \
@@ -117,14 +117,14 @@ RUN wget -c https://www.openssl.org/source/openssl-${OPENSSL_VERSION}.tar.gz \
  && apt remove -y --purge openssl \
  && rm -rf /usr/include/openssl \
  && apt-get update \
- && apt-get install -y \
+ && apt-get install --no-install-recommends -y \
     ca-certificates \
  && tar -xzvf openssl-${OPENSSL_VERSION}.tar.gz \
  && cd openssl-${OPENSSL_VERSION} \
  && ./config && make && make test \
  && make install \
  && ldconfig \
- && cd .. && rm -rf openssl-*
+ && cd .. && rm -rf openssl-* && rm openssl-${OPENSSL_VERSION}.tar.gz && rm -rf /var/lib/apt/lists/*;
 
 # when we remove previous openssl, the ca-certificates pkgs and its symlinks gets deleted
 # causing sslcertverificationerror the below steps are to fix that
@@ -134,8 +134,8 @@ RUN ln -s /etc/ssl/certs/*.* /usr/local/ssl/certs/
 RUN ln -s $(which ${PYTHON}) /usr/local/bin/python \
  && ln -s $(which ${PIP}) /usr/bin/pip
 
-RUN apt-get update && apt-get -y install protobuf-compiler \
-    && rm -rf /var/lib/apt/lists/* \ 
+RUN apt-get update && apt-get -y --no-install-recommends install protobuf-compiler \
+    && rm -rf /var/lib/apt/lists/* \
     && apt-get clean
 
 # install PyYAML==5.1.2 to avoid conflict with latest awscli
@@ -180,7 +180,7 @@ ADD https://raw.githubusercontent.com/aws/deep-learning-containers/master/src/de
 RUN chmod +x /usr/local/bin/deep_learning_container.py
 
 RUN HOME_DIR=/root \
-   && curl -o ${HOME_DIR}/oss_compliance.zip https://aws-dlinfra-utilities.s3.amazonaws.com/oss_compliance.zip \
+   && curl -f -o ${HOME_DIR}/oss_compliance.zip https://aws-dlinfra-utilities.s3.amazonaws.com/oss_compliance.zip \
    && unzip ${HOME_DIR}/oss_compliance.zip -d ${HOME_DIR}/ \
    && cp ${HOME_DIR}/oss_compliance/test/testOSSCompliance /usr/local/bin/testOSSCompliance \
    && chmod +x /usr/local/bin/testOSSCompliance \
@@ -188,6 +188,6 @@ RUN HOME_DIR=/root \
    && ${HOME_DIR}/oss_compliance/generate_oss_compliance.sh ${HOME_DIR} ${PYTHON} \
    && rm -rf ${HOME_DIR}/oss_compliance*
 
-RUN curl https://aws-dlc-licenses.s3.amazonaws.com/tensorflow-2.5/license.txt -o /license.txt
+RUN curl -f https://aws-dlc-licenses.s3.amazonaws.com/tensorflow-2.5/license.txt -o /license.txt
 
 CMD ["/bin/bash"]