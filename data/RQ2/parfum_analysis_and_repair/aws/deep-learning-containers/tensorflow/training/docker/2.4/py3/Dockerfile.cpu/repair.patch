diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/aws/deep-learning-containers/tensorflow/training/docker/2.4/py3/Dockerfile.cpu b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/aws/deep-learning-containers/tensorflow/training/docker/2.4/py3/Dockerfile.cpu/repaired.Dockerfile
index f7ab123..a70acf0 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/aws/deep-learning-containers/tensorflow/training/docker/2.4/py3/Dockerfile.cpu
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/aws/deep-learning-containers/tensorflow/training/docker/2.4/py3/Dockerfile.cpu/repaired.Dockerfile
@@ -64,11 +64,11 @@ RUN mkdir /tmp/openmpi \
  && curl -fSsL -O https://download.open-mpi.org/release/open-mpi/v4.0/openmpi-4.0.4.tar.gz \
  && tar zxf openmpi-4.0.4.tar.gz \
  && cd openmpi-4.0.4 \
- && ./configure --enable-orterun-prefix-by-default \
+ && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --enable-orterun-prefix-by-default \
  && make -j $(nproc) all \
  && make install \
  && ldconfig \
- && rm -rf /tmp/openmpi
+ && rm -rf /tmp/openmpi && rm openmpi-4.0.4.tar.gz
 
 # Create a wrapper for OpenMPI to allow running as root by default
 RUN mv /usr/local/bin/mpirun /usr/local/bin/mpirun.real \
@@ -112,8 +112,8 @@ RUN apt-get update \
 RUN wget https://www.python.org/ftp/python/$PYTHON_VERSION/Python-$PYTHON_VERSION.tgz \
  && tar -xvf Python-$PYTHON_VERSION.tgz \
  && cd Python-$PYTHON_VERSION \
- && ./configure && make && make install \
- && rm -rf ../Python-$PYTHON_VERSION*
+ && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" && make && make install \
+ && rm -rf ../Python-$PYTHON_VERSION* && rm Python-$PYTHON_VERSION.tgz
 
 RUN ${PIP} --no-cache-dir install --upgrade \
     pip \
@@ -123,7 +123,7 @@ RUN ${PIP} --no-cache-dir install --upgrade \
 RUN ln -s $(which ${PYTHON}) /usr/local/bin/python \
  && ln -s $(which ${PIP}) /usr/bin/pip
 
-RUN apt-get update && apt-get -y install cmake protobuf-compiler
+RUN apt-get update && apt-get -y --no-install-recommends install cmake protobuf-compiler && rm -rf /var/lib/apt/lists/*;
 
 RUN ${PIP} install --no-cache-dir -U \
     numpy==1.19.1 \
@@ -158,7 +158,7 @@ RUN ${PIP} install --no-cache-dir -U \
 
 # Install extra packages
 # numba 0.54 only works with numpy>=1.20. See https://github.com/numba/numba/issues/7339
-# Pinning bokeh to 2.3.3 due to typing-extension package version conflict with tensorlfow-cpu. See https://github.com/aws/deep-learning-containers/issues/1393 
+# Pinning bokeh to 2.3.3 due to typing-extension package version conflict with tensorlfow-cpu. See https://github.com/aws/deep-learning-containers/issues/1393
 RUN ${PIP} install --no-cache-dir -U \
    "bokeh==2.3.3" \
    "imageio>=2.9,<3" \
@@ -173,7 +173,7 @@ COPY deep_learning_container.py /usr/local/bin/deep_learning_container.py
 RUN chmod +x /usr/local/bin/deep_learning_container.py
 
 RUN HOME_DIR=/root \
- && curl -o ${HOME_DIR}/oss_compliance.zip https://aws-dlinfra-utilities.s3.amazonaws.com/oss_compliance.zip \
+ && curl -f -o ${HOME_DIR}/oss_compliance.zip https://aws-dlinfra-utilities.s3.amazonaws.com/oss_compliance.zip \
  && unzip ${HOME_DIR}/oss_compliance.zip -d ${HOME_DIR}/ \
  && cp ${HOME_DIR}/oss_compliance/test/testOSSCompliance /usr/local/bin/testOSSCompliance \
  && chmod +x /usr/local/bin/testOSSCompliance \
@@ -181,6 +181,6 @@ RUN HOME_DIR=/root \
  && ${HOME_DIR}/oss_compliance/generate_oss_compliance.sh ${HOME_DIR} ${PYTHON} \
  && rm -rf ${HOME_DIR}/oss_compliance*
 
-RUN curl https://aws-dlc-licenses.s3.amazonaws.com/tensorflow-2.4/license.txt -o /license.txt
+RUN curl -f https://aws-dlc-licenses.s3.amazonaws.com/tensorflow-2.4/license.txt -o /license.txt
 
 CMD ["/bin/bash"]