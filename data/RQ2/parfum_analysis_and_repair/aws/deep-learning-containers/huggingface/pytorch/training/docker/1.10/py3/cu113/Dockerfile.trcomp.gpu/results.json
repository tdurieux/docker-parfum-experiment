{
  "startTime": 1674218504580,
  "endTime": 1674218505552,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 87,
        "lineEnd": 87,
        "columnStart": 4,
        "columnEnd": 108
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 26
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# https://github.com/aws/deep-learning-containers/blob/master/available_images.md\n# refer to the above page to pull latest Pytorch image\n\n# docker image region us-west-2\nFROM 763104351884.dkr.ecr.us-west-2.amazonaws.com/pytorch-training:1.10.2-gpu-py38-cu113-ubuntu20.04-sagemaker\n\nLABEL maintainer=\"Amazon AI\"\nLABEL dlc_major_version=\"1\"\n\n# version args\nARG TRANSFORMERS_VERSION\nARG DATASETS_VERSION\nARG PYTHON=python3\n\n# artifacts URL\nARG PT_BUCKET=https://sm-training-comp-pytorch-binaries.s3.us-west-2.amazonaws.com/cd4b3932-8a23-4d21-95d7-c14e1351bef5/20220401-191238/4187a5ac613030093caa36c7d5ea95c3b9bb9b98\nARG PT_URL=${PT_BUCKET}/torch-1.10.2%2Bcu113-cp38-cp38-linux_x86_64.whl\nARG PT_XLA_URL=${PT_BUCKET}/torch_xla-1.10.0-cp38-cp38-linux_x86_64.whl\nARG TORCHVISION_URL=${PT_BUCKET}/torchvision-0.11.0a0%2B05eae32-cp38-cp38-linux_x86_64.whl\nARG TORCHAUDIO_URL=${PT_BUCKET}/torchaudio-0.10.1%2B6f539cf-cp38-cp38-linux_x86_64.whl\nARG HF_TRANSFORMERS_URL=https://sm-training-comp-pytorch-binaries.s3.us-west-2.amazonaws.com/092f939a-23a9-4625-a74c-95e793816647/20220331-061338/6da962c22532524d43f33610e34a53fa998c5c8e/transformers-4.17.0-py3-none-any.whl\n\n# Install Sagemaker PythonSDK\nRUN pip install --no-cache-dir sagemaker\n\n# install Hugging Face libraries and its dependencies\nRUN pip install -U --no-cache-dir \\ \n    transformers[sklearn,sentencepiece]==${TRANSFORMERS_VERSION} \\ \n    datasets==${DATASETS_VERSION}\n\nRUN apt-get update \\\n # TODO: Remove upgrade statements once packages are updated in base image\n && apt-get -y upgrade --only-upgrade systemd openssl cryptsetup \\\n && apt install --no-install-recommends -y git-lfs \\\n && apt install --no-install-recommends -y libomp5 \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n\nRUN pip install --no-cache-dir -U \"numpy<1.22\"\n\n# Install PyTorch\nRUN pip uninstall -y torch \\\n && pip install --no-deps --no-cache-dir -U --force-reinstall ${PT_URL}\n\n# Install PyTorch XLA\nRUN pip uninstall -y torch_xla \\\n && pip install --no-deps --no-cache-dir -U --force-reinstall ${PT_XLA_URL}\n\n# Install TorchVision\nRUN pip uninstall -y torchvision \\\n && pip install --no-deps --no-cache-dir -U --force-reinstall ${TORCHVISION_URL}\n\n# Install TorchAudio\nRUN pip uninstall -y torchaudio \\\n && pip install --no-deps --no-cache-dir -U --force-reinstall ${TORCHAUDIO_URL}\n\n# Install Tranformers\nRUN pip uninstall -y transformers \\\n && pip install --no-deps --no-cache-dir --force-reinstall -U ${HF_TRANSFORMERS_URL}\n\nARG CONDA_PREFIX=/opt/conda\n\n# Install common training dependencies\nRUN ${CONDA_PREFIX}/bin/conda install -y -c conda-forge librosa\nRUN pip install --no-cache-dir \\\n    sacrebleu \\\n    fugashi \\\n    ipadic \\\n    nltk \\\n    rouge-score \\\n    soundfile \\\n    sentence-transformers\n\n# Fix library links\nRUN ln -s ${CONDA_PREFIX}/lib/libmkl_intel_lp64.so ${CONDA_PREFIX}/lib/libmkl_intel_lp64.so.1 \\\n && ln -s ${CONDA_PREFIX}/lib/libmkl_intel_thread.so ${CONDA_PREFIX}/lib/libmkl_intel_thread.so.1 \\\n && ln -s ${CONDA_PREFIX}/lib/libmkl_core.so ${CONDA_PREFIX}/lib/libmkl_core.so.1 \\\n && ln -s ${CONDA_PREFIX}/lib/libmkl_gnu_thread.so ${CONDA_PREFIX}/lib/libmkl_gnu_thread.so.1\n\n# Install Horovod\nENV HOROVOD_VERSION=0.21.3\nRUN pip uninstall -y horovod \\\n && ldconfig /usr/local/cuda-11.3/targets/x86_64-linux/lib/stubs \\\n && HOROVOD_GPU_ALLREDUCE=NCCL HOROVOD_CUDA_HOME=/usr/local/cuda-11.3 HOROVOD_WITH_PYTORCH=1 pip install --no-cache-dir horovod==${HOROVOD_VERSION} \\\n && ldconfig\n\nRUN HOME_DIR=/root \\\n && curl -f -o ${HOME_DIR}/oss_compliance.zip https://aws-dlinfra-utilities.s3.amazonaws.com/oss_compliance.zip \\\n && unzip ${HOME_DIR}/oss_compliance.zip -d ${HOME_DIR}/ \\\n && cp ${HOME_DIR}/oss_compliance/test/testOSSCompliance /usr/local/bin/testOSSCompliance \\\n && chmod +x /usr/local/bin/testOSSCompliance \\\n && chmod +x ${HOME_DIR}/oss_compliance/generate_oss_compliance.sh \\\n && ${HOME_DIR}/oss_compliance/generate_oss_compliance.sh ${HOME_DIR} ${PYTHON} \\\n && rm -rf ${HOME_DIR}/oss_compliance*\n\n\n"
}