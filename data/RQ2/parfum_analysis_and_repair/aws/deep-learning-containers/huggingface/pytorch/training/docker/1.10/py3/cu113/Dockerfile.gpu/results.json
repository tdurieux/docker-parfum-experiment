{
  "startTime": 1674249822604,
  "endTime": 1674249823217,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 108
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 26
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# https://github.com/aws/deep-learning-containers/blob/master/available_images.md\n# refer to the above page to pull latest Pytorch image\n\n# docker image region us-west-2\nFROM 763104351884.dkr.ecr.us-west-2.amazonaws.com/pytorch-training:1.10.2-gpu-py38-cu113-ubuntu20.04-sagemaker\n\nLABEL maintainer=\"Amazon AI\"\nLABEL dlc_major_version=\"1\"\n\n# version args\nARG TRANSFORMERS_VERSION\nARG DATASETS_VERSION\nARG PYTHON=python3\n\n# AWS packages\nARG PT_TORCHAUDIO_URL=https://framework-binaries.s3.us-west-2.amazonaws.com/pytorch/1.10.2/torchaudio-0.10.2%2Bcu113-cp38-cp38-linux_x86_64.whl\nARG SMD_MODEL_PARALLEL_URL=https://sagemaker-distributed-model-parallel.s3.us-west-2.amazonaws.com/pytorch-1.10.0/build-artifacts/2022-04-14-03-58/smdistributed_modelparallel-1.8.1-cp38-cp38-linux_x86_64.whl\n\n# install Hugging Face libraries and its dependencies\nRUN pip install --no-cache-dir \\\n\ttransformers[sklearn,sentencepiece,audio,vision]==${TRANSFORMERS_VERSION} \\\n\tdatasets==${DATASETS_VERSION} \\\n\t$PT_TORCHAUDIO_URL\n\n# TODO: remove when SMP 1.8 release in base image\n# Uninstall and re-install sagemaker model parallelism libarry\nRUN pip uninstall -y smdistributed-modelparallel \\\n && pip install --no-cache-dir -U $SMD_MODEL_PARALLEL_URL\n\n\nRUN apt-get update \\\n # TODO: Remove upgrade statements once packages are updated in base image\n && apt-get -y upgrade --only-upgrade systemd openssl cryptsetup \\\n && apt install --no-install-recommends -y git-lfs \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n\nRUN HOME_DIR=/root \\\n && curl -f -o ${HOME_DIR}/oss_compliance.zip https://aws-dlinfra-utilities.s3.amazonaws.com/oss_compliance.zip \\\n && unzip ${HOME_DIR}/oss_compliance.zip -d ${HOME_DIR}/ \\\n && cp ${HOME_DIR}/oss_compliance/test/testOSSCompliance /usr/local/bin/testOSSCompliance \\\n && chmod +x /usr/local/bin/testOSSCompliance \\\n && chmod +x ${HOME_DIR}/oss_compliance/generate_oss_compliance.sh \\\n && ${HOME_DIR}/oss_compliance/generate_oss_compliance.sh ${HOME_DIR} ${PYTHON} \\\n && rm -rf ${HOME_DIR}/oss_compliance*\n"
}