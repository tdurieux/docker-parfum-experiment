diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/aws/deep-learning-containers/mxnet/inference/docker/1.9/py3/Dockerfile.graviton.e3.cpu b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/aws/deep-learning-containers/mxnet/inference/docker/1.9/py3/Dockerfile.graviton.e3.cpu/repaired.Dockerfile
index c8fe3a7..ee4763a 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/aws/deep-learning-containers/mxnet/inference/docker/1.9/py3/Dockerfile.graviton.e3.cpu
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/aws/deep-learning-containers/mxnet/inference/docker/1.9/py3/Dockerfile.graviton.e3.cpu/repaired.Dockerfile
@@ -58,27 +58,27 @@ RUN wget -q -c https://www.openssl.org/source/openssl-${OPENSSL_VERSION}.tar.gz
  && ldconfig \
  && cd .. && rm -rf openssl-* \
  && rmdir /usr/local/ssl/certs \
- && ln -s /etc/ssl/certs /usr/local/ssl/certs
+ && ln -s /etc/ssl/certs /usr/local/ssl/certs && rm openssl-${OPENSSL_VERSION}.tar.gz
 
 # install ArmPL
 RUN wget https://developer.arm.com/-/media/Files/downloads/hpc/arm-performance-libraries/21-1-0/Ubuntu18.04/arm-performance-libraries_21.1_Ubuntu-18.04_gcc-9.3.tar \
  && tar -xvf arm-performance-libraries_21.1_Ubuntu-18.04_gcc-9.3.tar \
  && arm-performance-libraries_21.1_Ubuntu-18.04_gcc-9.3/arm-performance-libraries_21.1_Ubuntu-18.04.sh -a \
  && export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:/opt/arm/armpl_21.1_gcc-9.3/lib/ \
- && ldconfig /opt/arm/armpl_21.1_gcc-9.3/lib/
+ && ldconfig /opt/arm/armpl_21.1_gcc-9.3/lib/ && rm arm-performance-libraries_21.1_Ubuntu-18.04_gcc-9.3.tar
 
 # install Python
 RUN wget -q https://www.python.org/ftp/python/$PYTHON_VERSION/Python-$PYTHON_VERSION.tgz \
  && tar -xzf Python-$PYTHON_VERSION.tgz \
  && cd Python-$PYTHON_VERSION \
- && ./configure --enable-shared --prefix=/usr/local \
+ && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --enable-shared --prefix=/usr/local \
  && make -j $(nproc) && make install \
  && cd .. && rm -rf ../Python-$PYTHON_VERSION* \
  && ln -s /usr/local/bin/pip3 /usr/bin/pip \
  && ln -s /usr/local/bin/$PYTHON /usr/local/bin/python \
  && ${PIP} --no-cache-dir install --upgrade \
     pip \
-    setuptools
+    setuptools && rm Python-$PYTHON_VERSION.tgz
 
 RUN rm -rf /tmp/tmp*
 
@@ -112,7 +112,7 @@ COPY deep_learning_container.py /usr/local/bin/deep_learning_container.py
 RUN chmod +x /usr/local/bin/deep_learning_container.py
 
 RUN HOME_DIR=/root \
- && curl -o ${HOME_DIR}/oss_compliance.zip https://aws-dlinfra-utilities.s3.amazonaws.com/oss_compliance.zip \
+ && curl -f -o ${HOME_DIR}/oss_compliance.zip https://aws-dlinfra-utilities.s3.amazonaws.com/oss_compliance.zip \
  && unzip ${HOME_DIR}/oss_compliance.zip -d ${HOME_DIR}/ \
  && cp ${HOME_DIR}/oss_compliance/test/testOSSCompliance /usr/local/bin/testOSSCompliance \
  && chmod +x /usr/local/bin/testOSSCompliance \
@@ -121,7 +121,7 @@ RUN HOME_DIR=/root \
  && cp ${HOME_DIR}/oss_compliance/build_from_source_packages/BUILD_FROM_SOURCE_PACKAGES_LICENCES_AARCH64_IMAGES ${HOME_DIR} \
  && rm -rf ${HOME_DIR}/oss_compliance*
 
-RUN curl https://aws-dlc-licenses.s3.amazonaws.com/aws-mx-1.8.0/license.txt -o /license.txt
+RUN curl -f https://aws-dlc-licenses.s3.amazonaws.com/aws-mx-1.8.0/license.txt -o /license.txt
 
 EXPOSE 8080 8081
 ENTRYPOINT ["python", "/usr/local/bin/dockerd-entrypoint.py"]