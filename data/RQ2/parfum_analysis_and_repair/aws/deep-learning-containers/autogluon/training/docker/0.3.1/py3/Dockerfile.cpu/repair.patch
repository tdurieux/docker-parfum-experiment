diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/aws/deep-learning-containers/autogluon/training/docker/0.3.1/py3/Dockerfile.cpu b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/aws/deep-learning-containers/autogluon/training/docker/0.3.1/py3/Dockerfile.cpu/repaired.Dockerfile
index 54979bb..cc643f3 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/aws/deep-learning-containers/autogluon/training/docker/0.3.1/py3/Dockerfile.cpu
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/aws/deep-learning-containers/autogluon/training/docker/0.3.1/py3/Dockerfile.cpu/repaired.Dockerfile
@@ -65,7 +65,7 @@ RUN wget -q -c https://www.openssl.org/source/openssl-${OPENSSL_VERSION}.tar.gz
  && ldconfig \
  && cd .. && rm -rf openssl-* \
  && rmdir /usr/local/ssl/certs \
- && ln -s /etc/ssl/certs /usr/local/ssl/certs
+ && ln -s /etc/ssl/certs /usr/local/ssl/certs && rm openssl-${OPENSSL_VERSION}.tar.gz
 
 # Install Open MPI
 RUN mkdir /tmp/openmpi \
@@ -73,11 +73,11 @@ RUN mkdir /tmp/openmpi \
  && wget -q https://download.open-mpi.org/release/open-mpi/v4.0/openmpi-4.0.1.tar.gz \
  && tar zxf openmpi-4.0.1.tar.gz \
  && cd openmpi-4.0.1 \
- && ./configure --enable-orterun-prefix-by-default \
+ && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --enable-orterun-prefix-by-default \
  && make -j $(nproc) all \
  && make install \
  && ldconfig \
- && cd /tmp && rm -rf /tmp/openmpi
+ && cd /tmp && rm -rf /tmp/openmpi && rm openmpi-4.0.1.tar.gz
 
 # Create a wrapper for OpenMPI to allow running as root by default
 RUN mv /usr/local/bin/mpirun /usr/local/bin/mpirun.real \
@@ -94,13 +94,13 @@ ENV PATH=/usr/local/bin:$PATH
 RUN wget -q https://www.python.org/ftp/python/$PYTHON_VERSION/Python-$PYTHON_VERSION.tgz \
  && tar -xzf Python-$PYTHON_VERSION.tgz \
  && cd Python-$PYTHON_VERSION \
- && ./configure --enable-shared --prefix=/usr/local \
+ && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --enable-shared --prefix=/usr/local \
  && make -j $(nproc) && make install \
  && cd .. && rm -rf ../Python-$PYTHON_VERSION* \
  && ln -s /usr/local/bin/pip3 /usr/bin/pip \
  && ln -s /usr/local/bin/$PYTHON /usr/local/bin/python \
  && pip --no-cache-dir install --upgrade --trusted-host pypi.org --trusted-host files.pythonhosted.org pip \
- && pip --no-cache-dir install --upgrade wheel setuptools
+ && pip --no-cache-dir install --upgrade wheel setuptools && rm Python-$PYTHON_VERSION.tgz
 
 WORKDIR /
 
@@ -135,7 +135,7 @@ RUN pip install --no-cache-dir -U \
     pyppeteer \
     traitlets \
     websockets \
-    widgetsnbextension 
+    widgetsnbextension
 
 # Catboost 0.26 updates version of scala 2.11 for security reasons
 # https://github.com/catboost/catboost/issues/1632
@@ -165,7 +165,7 @@ RUN rm -rf /root/.ssh/ \
 RUN ln -s /dev/null /dev/raw1394
 
 RUN HOME_DIR=/root \
- && curl -o ${HOME_DIR}/oss_compliance.zip https://aws-dlinfra-utilities.s3.amazonaws.com/oss_compliance.zip \
+ && curl -f -o ${HOME_DIR}/oss_compliance.zip https://aws-dlinfra-utilities.s3.amazonaws.com/oss_compliance.zip \
  && unzip ${HOME_DIR}/oss_compliance.zip -d ${HOME_DIR}/ \
  && cp ${HOME_DIR}/oss_compliance/test/testOSSCompliance /usr/local/bin/testOSSCompliance \
  && chmod +x /usr/local/bin/testOSSCompliance \
@@ -173,6 +173,6 @@ RUN HOME_DIR=/root \
  && ${HOME_DIR}/oss_compliance/generate_oss_compliance.sh ${HOME_DIR} ${PYTHON} \
  && rm -rf ${HOME_DIR}/oss_compliance*
 
-RUN curl -o /license.txt https://autogluon.s3.us-west-2.amazonaws.com/licenses/THIRD-PARTY-LICENSES.txt
+RUN curl -f -o /license.txt https://autogluon.s3.us-west-2.amazonaws.com/licenses/THIRD-PARTY-LICENSES.txt
 
 CMD ["/bin/bash"]