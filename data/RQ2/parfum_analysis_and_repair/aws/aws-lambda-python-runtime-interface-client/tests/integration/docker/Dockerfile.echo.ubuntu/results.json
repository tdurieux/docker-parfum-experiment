{
  "startTime": 1674255425777,
  "endTime": 1674255426421,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 13,
        "columnStart": 2,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 19,
        "columnStart": 2,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 33,
        "lineEnd": 44,
        "columnStart": 2,
        "columnEnd": 32
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 13,
        "columnStart": 2,
        "columnEnd": 30
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 19,
        "columnStart": 2,
        "columnEnd": 38
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 33,
        "lineEnd": 44,
        "columnStart": 2,
        "columnEnd": 32
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG DISTRO_VERSION\n\n# Stage 1 - bundle base image + runtime interface client\n# Grab a fresh copy of the image and install Python\nFROM public.ecr.aws/ubuntu/ubuntu:${DISTRO_VERSION} AS python-image\n\nENV DEBIAN_FRONTEND=noninteractive\n\nARG RUNTIME_VERSION\n\n# Install python and pip\nRUN apt-get update && \\\n  apt-get install --no-install-recommends -y \\\n    software-properties-common && rm -rf /var/lib/apt/lists/*;\nRUN add-apt-repository ppa:deadsnakes/ppa\nRUN apt-get update && \\\n  apt-get install --no-install-recommends -y \\\n    curl \\\n    python${RUNTIME_VERSION} \\\n    python${RUNTIME_VERSION}-distutils && rm -rf /var/lib/apt/lists/*;\n\nRUN ln -s /usr/bin/python${RUNTIME_VERSION} /usr/local/bin/python3\n\n# Stage 2 - build function and dependencies\nFROM python-image AS python-ubuntu-builder\n\nARG RUNTIME_VERSION\n\nRUN curl -f \"https://bootstrap.pypa.io/get-pip.py\" -o \"get-pip.py\"\nRUN python${RUNTIME_VERSION} get-pip.py\n\n# Install aws-lambda-cpp build dependencies\nRUN apt-get update && \\\n  apt-get install --no-install-recommends -y \\\n    g++ \\\n    gcc \\\n    tar \\\n    gzip \\\n    make \\\n    cmake \\\n    autoconf \\\n    automake \\\n    libtool \\\n    libcurl4-openssl-dev \\\n    python${RUNTIME_VERSION}-dev && rm -rf /var/lib/apt/lists/*;\n\n# Include global args in this stage of the build\nARG RIC_BUILD_DIR=\"/home/build/\"\n# Create function directory\nRUN mkdir -p ${RIC_BUILD_DIR}\n# Copy function code and Runtime Interface Client .tgz\nWORKDIR ${RIC_BUILD_DIR}\nCOPY . .\nRUN make init build test && \\\n    mv ./dist/awslambdaric-*.tar.gz ./dist/awslambdaric-test.tar.gz\n\n# Include global args in this stage of the build\nARG FUNCTION_DIR=\"/home/app/\"\n# Create function directory\nRUN mkdir -p ${FUNCTION_DIR}\n# Copy function code\nCOPY tests/integration/test-handlers/echo/* ${FUNCTION_DIR}\n# Copy Runtime Interface Client .tgz\nRUN cp ./dist/awslambdaric-test.tar.gz ${FUNCTION_DIR}/awslambdaric-test.tar.gz\n\n# Install the function's dependencies\nWORKDIR ${FUNCTION_DIR}\nRUN python${RUNTIME_VERSION} -m pip install \\\n        awslambdaric-test.tar.gz \\\n        --target ${FUNCTION_DIR} && \\\n    rm awslambdaric-test.tar.gz\n\n\n# Stage 4 - final runtime interface client image\n# Grab a fresh copy of the Python image\nFROM python-image\n\n# Define custom function directory\nARG FUNCTION_DIR=\"/home/app/\"\n\n# copy the lambda function code\nCOPY --from=python-ubuntu-builder ${FUNCTION_DIR} ${FUNCTION_DIR}\n\n# Set working directory to function root directory\nWORKDIR ${FUNCTION_DIR}\n\nENTRYPOINT [\"/usr/bin/python${RUNTIME_VERSION}\", \"-m\", \"awslambdaric\"]\nCMD [\"app.handler\"]\n"
}