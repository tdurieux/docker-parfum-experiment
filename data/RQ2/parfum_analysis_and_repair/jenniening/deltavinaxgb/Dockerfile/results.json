{
  "startTime": 1674248590687,
  "endTime": 1674248591302,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 114
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 112
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 18,
        "columnEnd": 66
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04\n\nRUN apt-get update && apt-get install --no-install-recommends -y g++ wget vim ca-certificates unzip build-essential git build-essential cmake libgtk-3-dev libboost-all-dev libcgal-dev apbs libcgal-demo scotch ptscotch \\\n                libeigen3-dev \\\n                libgfortran3 \\\n                libgmp-dev \\\n                libgmpxx4ldbl \\\n                libmpfr-dev \\\n                libboost-dev \\\n                libboost-thread-dev \\\n                libtbb-dev \\\n                python3-dev && rm -rf /var/lib/apt/lists/*\n\n#Install MINICONDA\nRUN wget --no-check-certificate https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O Miniconda.sh && \\\n\t/bin/bash Miniconda.sh -b -p /opt/conda && \\\n\trm Miniconda.sh\nENV PATH /opt/conda/bin:$PATH\n\n#COPY Makefile requirements.txt setup.py test_environment.py  /app/\nCOPY . /app\nWORKDIR /app\nRUN make Makefile create_environment\nSHELL [\"conda\", \"run\", \"-n\", \"DXGB\", \"/bin/bash\", \"-c\"]\nRUN /bin/bash -c \"source activate DXGB\" && make Makefile requirements\nRUN conda install -c conda-forge xgboost=0.80.0 && conda install -c rdkit rdkit=2019.03.1 && conda install -c openbabel openbabel && conda install moleculekit -c acellera && python setup.py install\nRUN wget https://mgltools.scripps.edu/downloads/downloads/tars/releases/REL1.5.6/mgltools_x86_64Linux2_1.5.6.tar.gz\nRUN tar -xvzf mgltools_x86_64Linux2_1.5.6.tar.gz && cd mgltools_x86_64Linux2_1.5.6/ && /bin/bash -c \"source install.sh\" && rm mgltools_x86_64Linux2_1.5.6.tar.gz\nWORKDIR /app\nRUN wget https://mgltools.scripps.edu/downloads/tars/releases/MSMSRELEASE/REL2.6.1/msms_i86_64Linux2_2.6.1.tar.gz\nRUN mkdir msms && tar -xvzf msms_i86_64Linux2_2.6.1.tar.gz -C msms && cd msms && cp msms.x86_64Linux2.2.6.1 msms && rm msms_i86_64Linux2_2.6.1.tar.gz\nWORKDIR /app/msms\nRUN sed 's+./atmtypenumbers+/app/DXGB/atmtypenumbers+g' pdb_to_xyzr | tee pdb_to_xyzr\nWORKDIR /app\nRUN wget https://github.com/chengwang88/vina4dv/archive/master.zip && unzip master.zip\n\nENV PATH /opt/conda/envs/DXGB/bin:$PATH\nRUN /bin/bash -c \"source activate DXGB\"\n# path for MSMS\nENV PATH=$PATH:/app/msms/\n# set mgltool variable (if mac, should change mgltools_x86_64Linux2_1.5.6 into your downloaded mac version)\nENV PATH=$PATH:/app/mgltools_x86_64Linux2_1.5.6/bin/\nENV MGL=/app/mgltools_x86_64Linux2_1.5.6/\nENV MGLPY=$MGL/bin/python\nENV MGLUTIL=$MGL/MGLToolsPckgs/AutoDockTools/Utilities24/\n# set vina dir  (if mac, should use /mac/release/)\nENV VINADIR=/app/vina4dv-master/build/linux/release\n# set DXGB dir (needed if run deltaVinaRF20 score)\nENV DXGB=/app/DXGB\n\n\n\n\n"
}