{
  "startTime": 1674255638179,
  "endTime": 1674255639099,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 22,
        "columnEnd": 51
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 22,
        "columnEnd": 51
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM rust:1.40 as builder\n\n# Install musl\nRUN apt-get update && apt-get install --no-install-recommends -y musl-tools && rm -rf /var/lib/apt/lists/*;\nRUN rustup target add x86_64-unknown-linux-musl\n\nWORKDIR \"/project/user-app\"\n\n# copy dependency files\nCOPY /user-app/Cargo.toml Cargo.toml\n\n# get user application dependencies\nRUN cargo fetch\n\n#copy user code\nCOPY /user-app/src ./src\n\n# build for release\nRUN cargo build --release --target x86_64-unknown-linux-musl \\\n && cp $(find ./target/x86_64-unknown-linux-musl/release -maxdepth 1 -perm -111 -type f| head -n 1) ./target/app \\\n && chmod 755 ./target/app\n\n# Create a \"nobody\" non-root user for the next image by crafting an /etc/passwd\n# file that the next image can copy in. This is necessary since the next image\n# is based on scratch, which doesn't have adduser, cat, echo, or even sh.\nRUN echo \"nobody:x:65534:65534:Nobody:/:\" > /etc_passwd\n\nFROM scratch\n\nWORKDIR \"/project/user-app\"\n\n# get files and built binary from previous image\nCOPY --from=builder /project/user-app/target/app ./\nCOPY --from=builder /etc_passwd /etc/passwd\n\nENV PORT 8000\n\nUSER nobody\n\nEXPOSE 8000\n\nCMD [\"./app\"]\n"
}