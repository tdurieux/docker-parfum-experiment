{
  "startTime": 1674216446959,
  "endTime": 1674216447700,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Install the app dependencies in a full Node docker image\nFROM node:12\n\n# Copying individual files/folders as buildah 1.9.0 does not honour .dockerignore\nCOPY *.json /project/\nCOPY user-app /project/user-app\nCOPY src /project/src\n\n# Removing node_modules as we can not make assumptions about file structure of user-app\nRUN rm -rf /project/user-app/node_modules && mkdir -p /project/user-app/node_modules\n\n# Install stack dependencies\nWORKDIR /project\nRUN npm install && npm cache clean --force;\n\n# Install user-app dependencies\nWORKDIR /project/user-app\n# RUN `npm install` instead of `npm install --production` as we need to transpile TS code\nRUN npm install && npm cache clean --force;\n\n# Creating a tar to work around poor copy performance when using buildah 1.9.0\nRUN cd / && tar czf /project.tgz project\n\n# Copy the dependencies into a slim Node docker image\nFROM node:12-slim\n\n# Copy project with dependencies\nCOPY --chown=node:node --from=0 /project.tgz /\nRUN tar xf project.tgz && chown -R node:node /project && rm project.tgz\nWORKDIR /project\n\n# Make sure TypeScript source code is transpiled\nRUN npm run build && npm run build --prefix user-app\n\nENV NODE_ENV production\nENV PORT 3000\n\nUSER node\n\nCMD [\"npm\", \"start\"]\n"
}