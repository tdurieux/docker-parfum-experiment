{
  "startTime": 1674215580779,
  "endTime": 1674215581573,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 54
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 54
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Install the app dependencies\nFROM swift:5.2 as builder\n\n# Install OS updates\nRUN apt-get update \\\n && apt-get install --no-install-recommends -y libcurl4-openssl-dev libssl-dev \\\n && apt-get clean \\\n && echo 'Finished installing dependencies' && rm -rf /var/lib/apt/lists/*;\n\n# Install user-app dependencies\nWORKDIR \"/project\"\nCOPY ./user-app ./\n\n# Build project, and discover executable name\nRUN echo '#!/bin/bash' > run.sh \\\n && swift build -c release | tee output.txt \\\n && cat output.txt | awk 'END {print \"./.build/x86_64-unknown-linux/release/\" $NF}' >> run.sh \\\n && chmod 755 run.sh\n\nFROM swift:5.2-slim\n\n# Install OS updates\nRUN apt-get update \\\n && apt-get clean \\\n && echo 'Finished installing dependencies'\n\nWORKDIR \"/project\"\nCOPY --from=builder /project/.build /project/.build\nCOPY --from=builder /project/run.sh /project\n\nENV PORT 8080\nEXPOSE 8080\n\nCMD [\"./run.sh\"]\n"
}