{
  "startTime": 1674215721825,
  "endTime": 1674215728265,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 50
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Step 1: Build the user's application\nFROM adoptopenjdk/openjdk8-openj9 as compile\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y maven unzip wget xmlstarlet && rm -rf /var/lib/apt/lists/*;\n\n# Copy and build the dev.appsody:java-microprofile parent pom\nCOPY ./pom.xml /project/pom.xml\nRUN cd /project && mvn -B install dependency:go-offline -DskipTests\n\n# Copy and run a simple version check\nCOPY ./util /project/util\nRUN  /project/util/check_version build\n\n# Copy the user's application pom and resolve all dependencies\nCOPY ./user-app/pom.xml /project/user-app/pom.xml\nRUN cd /project/user-app && mvn package -Dskip=true -DskipTests\n\n# Download Open Liberty here to prevent redownloading each time the app is changed\nRUN cd /project/user-app && mvn -B liberty:install-server\n\n# Copy and build the application source.\n# Remove quick-start-security.xml since it is only needed during local development.\nCOPY ./user-app/src /project/user-app/src\nRUN cd /project/user-app && \\\n    echo \"QUICK START SECURITY IS NOT SECURE FOR PRODUCTION ENVIRONMENTS. IT IS BEING REMOVED\" && \\\n    rm -f src/main/liberty/config/configDropins/defaults/quick-start-security.xml && \\\n    mvn package -DskipTests\n\nRUN cd /project/user-app/target && \\\n    unzip *.zip && \\\n    mkdir /config && \\\n    mv wlp/usr/servers/*/* /config/\n\n# Step 2: Package Open Liberty image\nFROM open-liberty:{{.stack.libertyversion}}-kernel-java8-openj9\n\nCOPY --chown=1001:0 --from=compile /config/ /config/\n\nRUN configure.sh\n"
}