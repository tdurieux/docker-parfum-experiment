{
  "startTime": 1674216286039,
  "endTime": 1674216286698,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 39
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.7\n\nRUN pip install --no-cache-dir --upgrade pip\n\nRUN useradd -m worker\nWORKDIR /project\n# It is a real shame that WORKDIR doesn't honor the current user (or even take a chown option), so.....\nRUN chown worker:worker /project\nUSER worker\n\nRUN pip install --no-cache-dir --upgrade --user pipenv\nENV PATH=/home/worker/.local/bin:$PATH\n\nCOPY --chown=worker:worker . ./\n\n# First we get the dependencies for the stack itself\nRUN pipenv lock -r > requirements.txt\n# Now add in any for the app, that the developer has added (there seems to be\n# no easy way of specifying a different location for the Pipfile, so have to\n# change the working directory!)\nWORKDIR /project/userapp\nRUN pipenv lock -r > ../requirements-additional.txt\n# Now process the combined requirements\nWORKDIR /project\nRUN python -m pip install -r requirements.txt -t /project/deps\nRUN python -m pip install -r requirements-additional.txt -t /project/deps\n\nENV PYTHONPATH=/project/deps\nENV FLASK_APP=server/__init__.py\n\nENV PORT=8080\nEXPOSE 8080\nCMD [\"python\", \"-m\", \"flask\", \"run\", \"--host=0.0.0.0\", \"--port=8080\"]"
}