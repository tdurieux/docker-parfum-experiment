{
  "startTime": 1674220892500,
  "endTime": 1674220893121,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 39
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.7\n\nRUN pip install --no-cache-dir --upgrade pip\n\nRUN useradd -m worker\nWORKDIR /project\n# It is a real shame that WORKDIR doesn't honor the current user (or even take a chown option), so.....\nRUN chown worker:worker /project\nUSER worker\n\nRUN pip install --no-cache-dir --upgrade --user pipenv\nENV PATH=/home/worker/.local/bin:$PATH\n\nENV APPSODY_MOUNTS=/:/project/userapp\nENV APPSODY_DEPS=/project/deps\n# This (and the project) Dockerfile already ensure we run as worker, rather than root - so don't enable running as the local\n# user, since this would cause a clash of two different UIDs\nENV APPSODY_USER_RUN_AS_LOCAL=false\n\nENV APPSODY_WATCH_DIR=/project/userapp\nENV APPSODY_WATCH_REGEX=\"^.*.py$\"\n\nENV APPSODY_PREP=\"cd /project/userapp;pipenv lock -r > ../requirements-additional.txt;python -m pip install -r ../requirements-additional.txt -t /project/deps\"\n\nENV APPSODY_RUN=\"python -m flask run --host=0.0.0.0 --port=8080\"\nENV APPSODY_RUN_ON_CHANGE=$APPSODY_RUN\nENV APPSODY_RUN_KILL=true\n\nENV APPSODY_DEBUG=\"FLASK_ENV=development python -m ptvsd --host 0.0.0.0 --port 5678 -m flask run --host=0.0.0.0 --port=8080 --no-reload\"\nENV APPSODY_DEBUG_ON_CHANGE=$APPSODY_DEBUG\nENV APPSODY_DEBUG_KILL=true\n\nENV APPSODY_TEST=\"python -m unittest discover -s test -p *.py\"\nENV APPSODY_TEST_ON_CHANGE=$APPSODY_TEST\nENV APPSODY_TEST_KILL=false\n\nCOPY --chown=worker:worker ./LICENSE /licenses/\nCOPY --chown=worker:worker ./project /project\nCOPY --chown=worker:worker ./config /config\n\nRUN pipenv lock -r > requirements.txt\nRUN python -m pip install -r requirements.txt -t /project/deps\nRUN python -m pip install ptvsd -t /project/deps\n\n# The next line gets round a problem with flasgger in that it has an unnecessary requirement on\n# jsonschema of < 3.0.0, while other components here need > 3.0.0. This is fixed in flasgger\n# PR 317, but a new release has not yet been pushed to pypi. The line below and the constraints\n# file can be removed once a new release is made (and flassger added to the regular Pipfile).\n# This constraints workaround will still cause an error on docker build, but this can be ignored.\nRUN python -m pip install --upgrade -c constraints.txt flasgger==0.9.3 -t /project/deps\n\nENV PYTHONPATH=/project/deps\nENV FLASK_APP=/project/server/__init__.py\n\nENV PORT=8080\nEXPOSE 8080\nEXPOSE 5678\n"
}