{
  "startTime": 1674255909659,
  "endTime": 1674255911885,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 227,
        "lineEnd": 227,
        "columnStart": 5,
        "columnEnd": 49
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 228,
        "lineEnd": 228,
        "columnStart": 5,
        "columnEnd": 39
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 229,
        "lineEnd": 229,
        "columnStart": 5,
        "columnEnd": 34
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 230,
        "lineEnd": 230,
        "columnStart": 5,
        "columnEnd": 65
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 259,
        "lineEnd": 260,
        "columnStart": 5,
        "columnEnd": 63
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 261,
        "lineEnd": 262,
        "columnStart": 5,
        "columnEnd": 63
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 71,
        "lineEnd": 90,
        "columnStart": 5,
        "columnEnd": 14
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 153,
        "lineEnd": 154,
        "columnStart": 5,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 306,
        "lineEnd": 308,
        "columnStart": 5,
        "columnEnd": 17
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 329,
        "lineEnd": 330,
        "columnStart": 5,
        "columnEnd": 10
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 385,
        "lineEnd": 387,
        "columnStart": 5,
        "columnEnd": 8
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#== FROM instructions support variables that are declared by\n# any ARG instructions that occur before the first FROM\n# ref: https://docs.docker.com/engine/reference/builder/#understand-how-arg-and-from-interact\n#\n# To overwrite the build args use:\n#  docker build ... --build-arg UBUNTU_DATE=20171006\nARG UBUNTU_FLAVOR=xenial\nARG UBUNTU_DATE=20190904\n\n#== Ubuntu xenial is 16.04, i.e. FROM ubuntu:16.04\n# Find latest images at https://hub.docker.com/r/library/ubuntu/\nFROM ubuntu:${UBUNTU_FLAVOR}-${UBUNTU_DATE}\n\n#== An ARG declared before a FROM is outside of a build stage,\n# so it can’t be used in any instruction after a FROM. To use\n# the default value of an ARG declared before the first\n# FROM use an ARG instruction without a value inside of a build stage\n# ref: https://docs.docker.com/engine/reference/builder/#understand-how-arg-and-from-interact\nARG UBUNTU_FLAVOR\nARG UBUNTU_DATE\n\n# Docker build debug logging, green colored\nRUN printf \"\\033[1;32mFROM ubuntu:${UBUNTU_FLAVOR}-${UBUNTU_DATE} \\033[0m\\n\"\n\n# https://github.com/docker/docker/pull/25466#discussion-diff-74622923R677\nLABEL maintainer \"Diego Molina <diemol@gmail.com>\"\nLABEL maintainer \"Leo Gallucci <elgalu3+dosel@gmail.com>\"\n\n# No interactive frontend during docker build\nENV DEBIAN_FRONTEND=noninteractive \\\n    DEBCONF_NONINTERACTIVE_SEEN=true\n\n#========================\n# Miscellaneous packages\n#========================\n# libltdl7\n#   allows to run docker alongside docker\n# netcat-openbsd\n#   inlcues `nc` an arbitrary TCP and UDP connections and listens\n# pwgen\n#   generates random, meaningless but pronounceable passwords\n# bc\n#   An arbitrary precision calculator language\n# unzip\n#   uncompress zip files\n# bzip2\n#   uncompress bzip files\n# apt-utils\n#   commandline utilities related to package management with APT\n# net-tools\n#   arp, hostname, ifconfig, netstat, route, plipconfig, iptunnel\n# jq\n#   jq is like sed for JSON data, you can use it to slice and filter and map\n# sudo\n#   sudo binary\n# psmisc\n#   fuser – identifies what processes are using files.\n#   killall – kills a process by its name, similar to a pkill Unices.\n#   pstree – Shows currently running processes in a tree format.\n#   peekfd – Peek at file descriptors of running processes.\n# iproute2\n#   to use `ip` command\n# iputils-ping\n#   ping, ping6 - send ICMP ECHO_REQUEST to network hosts\n# dbus-x11\n#   is needed to avoid http://askubuntu.com/q/237893/134645\n# wget\n#   The non-interactive network downloader\n# curl\n#   transfer URL data using various Internet protocols\nRUN apt -qqy update \\\n  && apt -qqy --no-install-recommends install \\\n    libltdl7 \\\n    netcat-openbsd \\\n    pwgen \\\n    bc \\\n    unzip \\\n    bzip2 \\\n    apt-utils \\\n    net-tools \\\n    jq \\\n    sudo \\\n    psmisc \\\n    iproute2 \\\n    iputils-ping \\\n    dbus-x11 \\\n    wget \\\n    curl \\\n    pulseaudio \\\n    socat \\\n    alsa-utils \\\n  && apt -qyy autoremove \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && apt -qyy clean\n\n#==============================\n# Locale and encoding settings\n#==============================\n# TODO: Allow to change instance language OS and Browser level\n#  see if this helps: https://github.com/rogaha/docker-desktop/blob/68d7ca9df47b98f3ba58184c951e49098024dc24/Dockerfile#L57\nENV LANG_WHICH en\nENV LANG_WHERE US\nENV ENCODING UTF-8\nENV LANGUAGE ${LANG_WHICH}_${LANG_WHERE}.${ENCODING}\nENV LANG ${LANGUAGE}\nRUN apt -qqy update \\\n  && apt -qqy --no-install-recommends install \\\n    language-pack-en \\\n    tzdata \\\n    locales \\\n  && locale-gen ${LANGUAGE} \\\n  && dpkg-reconfigure --frontend noninteractive locales \\\n  && apt -qyy autoremove \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && apt -qyy clean\n\n#===================\n# Timezone settings\n#===================\n# Full list at https://en.wikipedia.org/wiki/List_of_tz_database_time_zones\n#  e.g. \"US/Pacific\" for Los Angeles, California, USA\n# e.g. ENV TZ \"US/Pacific\"\nENV TZ=\"Europe/Berlin\"\n# Apply TimeZone\nRUN echo \"Setting time zone to '${TZ}'\" \\\n  && echo \"${TZ}\" > /etc/timezone \\\n  && dpkg-reconfigure --frontend noninteractive tzdata\n\n#========================================\n# Add normal user with passwordless sudo\n#========================================\nRUN useradd seluser \\\n         --shell /bin/bash  \\\n         --create-home \\\n  && usermod -a -G sudo seluser \\\n  && gpasswd -a seluser video \\\n  && echo 'seluser:secret' | chpasswd \\\n  && useradd extrauser \\\n         --shell /bin/bash  \\\n  && usermod -a -G sudo extrauser \\\n  && gpasswd -a extrauser video \\\n  && gpasswd -a extrauser seluser \\\n  && echo 'extrauser:secret' | chpasswd \\\n  && echo 'ALL ALL = (ALL) NOPASSWD: ALL' >> /etc/sudoers\n\n#==============================\n# Java8 - OpenJDK JRE headless\n# Minimal runtime used for executing non GUI Java programs\n#==============================\n# Regarding urandom see\n#  http://stackoverflow.com/q/26021181/511069\n#  https://github.com/SeleniumHQ/docker-selenium/issues/14#issuecomment-67414070\nRUN apt -qqy update \\\n  && apt -qqy --no-install-recommends install \\\n    openjdk-8-jre-headless \\\n  && sed -i '/securerandom.source=/ s|/dev/u?random|/dev/./urandom|g' \\\n       /etc/java-*/security/java.security \\\n  && apt -qyy autoremove \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && apt -qyy clean\n\n#===================================================\n# Run the following commands as non-privileged user\n#===================================================\nUSER seluser\nWORKDIR /home/seluser\n\n# Docker backward compatibility\nRUN echo \"${UBUNTU_FLAVOR}\" > UBUNTU_FLAVOR \\\n && echo \"${UBUNTU_DATE}\" > UBUNTU_DATE\n\n#=================\n# Selenium latest\n#=================\nARG SEL_DIRECTORY=\"3.14\"\nENV SEL_VER=\"3.141.59\"\n\nRUN wget -nv \"https://github.com/dosel/selenium/releases/download/selenium-3.141.59-patch-d47e74d6f2/selenium.jar\" \\\n  && ln -s \"selenium.jar\" \\\n           \"selenium-server-standalone-${SEL_VER}.jar\" \\\n  && ln -s \"selenium.jar\" \\\n           \"selenium-server-standalone-3.jar\"\n\n# TODO: Enable this again when Selenium 4.0 is released\n#RUN echo $SEL_VER\n#RUN  export SELBASE=\"https://selenium-release.storage.googleapis.com\" \\\n#  && export SELPATH=\"${SEL_DIRECTORY}/selenium-server-standalone-${SEL_VER}.jar\" \\\n#  && wget -nv ${SELBASE}/${SELPATH} \\\n#  && ln -s \"selenium-server-standalone-${SEL_VER}.jar\" \\\n#           \"selenium-server-standalone-3.jar\"\n\nLABEL selenium_version \"${SEL_VER}\"\n\n#=============================\n# sudo by default from now on\n#=============================\nUSER root\n\n#=========================================================\n# Python2 for Supervisor, selenium tests, and other stuff\n#=========================================================\n# RUN apt -qqy update \\\n#   && apt -qqy --no-install-recommends install \\\n#     python2.7 \\\n#     python-pip \\\n#     python-openssl \\\n#     libssl-dev \\\n#     libffi-dev \\\n#   && pip install --upgrade pip==9.0.3 \\\n#   && pip install --upgrade setuptools \\\n#   && rm -rf /var/lib/apt/lists/* \\\n#   && apt -qyy clean\n\n#=========================================================\n# Python3 for Supervisor, selenium tests, and other stuff\n#=========================================================\n# Note Python3 fails installing mozInstall==1.12 with\n#  NameError: name 'file' is not defined\n# After install, make some useful symlinks that are expected to exist\nCOPY test/requirements.txt /test/\nRUN apt -qqy update \\\n  && apt -qqy --no-install-recommends install \\\n    python3 \\\n    python3-pip \\\n    python3-dev \\\n    python3-openssl \\\n    libssl-dev libffi-dev \\\n  && pip3 install --no-cache-dir --no-cache --upgrade pip==9.0.3 \\\n  && pip3 install --no-cache-dir --no-cache setuptools \\\n  && pip3 install --no-cache-dir --no-cache numpy \\\n  && pip3 install --no-cache-dir --no-cache --requirement /test/requirements.txt \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && apt -qyy clean\nRUN cd /usr/local/bin \\\n  && { [ -e easy_install ] || ln -s easy_install-* easy_install; } \\\n  && ln -s idle3 idle \\\n  && ln -s pydoc3 pydoc \\\n  && ln -s python3 python \\\n  && ln -s python3-config python-config \\\n  && ln -s /usr/bin/python3 /usr/bin/python \\\n  && python --version \\\n  && pip --version\n\n#====================\n# Supervisor install\n#====================\n# TODO: Upgrade to supervisor stable 4.0 as soon as is released\n# Check every now and then if version 4 is finally the stable one\n#  https://pypi.python.org/pypi/supervisor\n#  https://github.com/Supervisor/supervisor\n# RUN apt -qqy update \\\n#   && apt -qqy install \\\n#     supervisor \\\n# 2018-09-28 commit: 837c159ae51f3b, supervisor/version.txt: 4.0.0.dev0\n# 2018-06-01 commit: ec495be4e28c69, supervisor/version.txt: 4.0.0.dev0\n# 2017-10-21 commit: 3f04badc3237f0, supervisor/version.txt: 4.0.0.dev0\n# 2017-05-30 commit: 946d9cf3be4db3, supervisor/version.txt: 4.0.0.dev0\nENV RUN_DIR=\"/var/run/sele\"\nRUN SHA=\"837c159ae51f3bf12c1d30a8cb44f3450611983c\" \\\n  && pip install --no-cache-dir --no-cache \\\n      \"https://github.com/Supervisor/supervisor/zipball/${SHA}\" || \\\n     pip install --no-cache-dir --no-cache \\\n      \"https://github.com/Supervisor/supervisor/zipball/${SHA}\" \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && apt -qyy clean\n\n#================\n# Font libraries\n#================\n# ttf-ubuntu-font-family\n#   Ubuntu Font Family, sans-serif typeface hinted for clarity\n# Removed packages:\n# xfonts-100dpi\n# xfonts-75dpi\n# Regarding fonts-liberation see:\n#  https://github.com/SeleniumHQ/docker-selenium/issues/383#issuecomment-278367069\nRUN apt -qqy update \\\n  && apt -qqy --no-install-recommends install \\\n    libfontconfig \\\n    libfreetype6 \\\n    xfonts-cyrillic \\\n    xfonts-scalable \\\n    fonts-liberation \\\n    fonts-ipafont-gothic \\\n    fonts-wqy-zenhei \\\n    ttf-ubuntu-font-family \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && apt -qyy clean\n\n#=========\n# Openbox\n# A lightweight window manager using freedesktop standards\n#=========\n# Let's disable this as is only filling disk space\n# RUN apt -qqy update \\\n#   && apt -qqy --no-install-recommends install \\\n#     openbox obconf menu \\\n#   && rm -rf /var/lib/apt/lists/* \\\n#   && apt -qyy clean\n\n#=========\n# fluxbox\n# A fast, lightweight and responsive window manager\n#=========\n# xfce4-notifyd allows `notify-send` notifications\nRUN apt -qqy update \\\n  && apt -qqy --no-install-recommends install \\\n    fluxbox \\\n    xfce4-notifyd \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && apt -qyy clean\n\n#============================\n# Xvfb X virtual framebuffer\n#============================\n# xvfb: Xvfb or X virtual framebuffer is a display server\n#  + implements the X11 display server protocol\n#  + performs all graphical operations in memory\nRUN apt -qqy update \\\n  && apt -qqy --no-install-recommends install \\\n    xvfb \\\n    xorg \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && apt -qyy clean\n\n#============\n# VNC Server\n#============\nRUN apt -qqy update \\\n  && apt -qqy --no-install-recommends install \\\n    x11vnc \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && apt -qyy clean\n\n#===================================================\n# Run the following commands as non-privileged user\n#===================================================\nUSER seluser\n\n########################################\n# noVNC to expose VNC via an html page #\n########################################\n# Download elgalu/noVNC dated 2016-11-18 commit 9223e8f2d1c207fb74cb4b8cc243e59d84f9e2f6\n# Download kanaka/noVNC dated 2016-11-10 commit 80b7dde665cac937aa0929d2b75aa482fc0e10ad\n# Download kanaka/noVNC dated 2016-02-24 commit b403cb92fb8de82d04f305b4f14fa978003890d7\n# Download kanaka/websockify dated 2016-10-10 commit cb1508fa495bea4b333173705772c1997559ae4b\n# Download kanaka/websockify dated 2015-06-02 commit 558a6439f14b0d85a31145541745e25c255d576b\nENV NOVNC_SHA=\"9223e8f2d1c207fb74cb4b8cc243e59d84f9e2f6\" \\\n    WEBSOCKIFY_SHA=\"cb1508fa495bea4b333173705772c1997559ae4b\"\nRUN  wget -nv -O noVNC.zip \\\n       \"https://github.com/elgalu/noVNC/archive/${NOVNC_SHA}.zip\" \\\n  && unzip -x noVNC.zip \\\n  && mv noVNC-${NOVNC_SHA} noVNC \\\n  && rm noVNC.zip \\\n  && wget -nv -O websockify.zip \\\n      \"https://github.com/kanaka/websockify/archive/${WEBSOCKIFY_SHA}.zip\" \\\n  && unzip -x websockify.zip \\\n  && rm websockify.zip \\\n  && mv websockify-${WEBSOCKIFY_SHA} ./noVNC/utils/websockify\n\n#=============================\n# sudo by default from now on\n#=============================\nUSER root\n\n#=========================\n# Browser video libraries\n#=========================\n# gstreamer (gstreamer1.0-libav)\n#   for mp4 & html5 video browser support: https://www.youtube.com/html5\n# TODO: Add test to see what the browser supports by opening\n#       https://www.youtube.com/html5\nRUN apt -qqy update \\\n  && apt -qqy --no-install-recommends install \\\n    gstreamer1.0-libav \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && apt -qyy clean\n\n#========\n# ffmpeg\n#========\n# MP4Box (gpac) to clean the video credits to @taskworld @dtinth\n# ffmpeg (ffmpeg): Is a better alternative to Pyvnc2swf\n#   (use in Ubuntu >= 15) packages: ffmpeg\nRUN apt -qqy update \\\n  && apt -qqy --no-install-recommends install \\\n    ffmpeg \\\n    gpac \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && apt -qyy clean\n\n# ------------------------#\n# Sauce Connect Tunneling #\n# ------------------------#\n# Please use https://github.com/zalando/zalenium\n\n# -----------------------#\n# BrowserStack Tunneling #\n# -----------------------#\n# Please use https://github.com/zalando/zalenium\n\n#-----------------#\n# Mozilla\n#-----------------#\n# Install all Firefox dependencies\n# Adding libasound2 and others, credits to @jackTheRipper\n#  https://github.com/SeleniumHQ/docker-selenium/pull/418\n    # libasound2 \\\n    # libpulse-dev \\\n    # xul-ext-ubufox \\\nRUN apt -qqy update \\\n  && apt -qqy --no-install-recommends install \\\n    `apt-cache depends firefox | awk '/Depends:/{print$2}'` \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && apt -qyy clean\n\n#===================================================\n# Run the following commands as non-privileged user\n#===================================================\nUSER seluser\n\n#=============================\n# sudo by default from now on\n#=============================\nUSER root\n\nENV FF_LANG=\"en-US\" \\\n    FF_BASE_URL=\"https://archive.mozilla.org/pub\" \\\n    FF_PLATFORM=\"linux-x86_64\" \\\n    FF_INNER_PATH=\"firefox/releases\"\n\nARG FF_VER=\"88.0.1\"\n\nENV FF_COMP=\"firefox-${FF_VER}.tar.bz2\"\nENV FF_URL=\"${FF_BASE_URL}/${FF_INNER_PATH}/${FF_VER}/${FF_PLATFORM}/${FF_LANG}/${FF_COMP}\"\nRUN cd /opt \\\n  && wget -nv \"${FF_URL}\" -O \"firefox.tar.bz2\" \\\n  && bzip2 -d \"firefox.tar.bz2\" \\\n  && tar xf \"firefox.tar\" \\\n  && rm \"firefox.tar\" \\\n  && ln -fs /opt/firefox/firefox /usr/bin/firefox \\\n  && chown -R seluser:seluser /opt/firefox \\\n  && chmod -R 777 /opt/firefox\n\nLABEL selenium_firefox_version \"${FF_VER}\"\n\n#============\n# GeckoDriver\n#============\nARG GECKOD_VER=\"0.29.1\"\nENV GECKOD_URL=\"https://github.com/mozilla/geckodriver/releases/download\"\nRUN wget --no-verbose -O geckodriver.tar.gz \\\n     \"${GECKOD_URL}/v${GECKOD_VER}/geckodriver-v${GECKOD_VER}-linux64.tar.gz\" \\\n  && rm -rf /opt/geckodriver* \\\n  && tar -C /opt -xvzf geckodriver.tar.gz \\\n  && chmod +x /opt/geckodriver \\\n  && cp /opt/geckodriver /usr/bin/geckodriver \\\n  && chown seluser:seluser /opt/geckodriver \\\n  && chown seluser:seluser /usr/bin/geckodriver \\\n  && rm geckodriver.tar.gz\n\nCOPY bin/fail /usr/bin/\n\n#===============\n# Google Chrome\n#===============\n# TODO: Use Google fingerprint to verify downloads\n#  https://www.google.de/linuxrepositories/\nARG EXPECTED_CHROME_VERSION=\"91.0.4472.77\"\nENV CHROME_URL=\"https://dl.google.com/linux/direct\" \\\n    CHROME_BASE_DEB_PATH=\"/home/seluser/chrome-deb/google-chrome\" \\\n    GREP_ONLY_NUMS_VER=\"[0-9.]{2,20}\"\n\nLABEL selenium_chrome_version \"${EXPECTED_CHROME_VERSION}\"\n\nRUN apt -qqy update \\\n  && mkdir -p chrome-deb \\\n  && wget -nv \"${CHROME_URL}/google-chrome-stable_current_amd64.deb\" \\\n          -O \"./chrome-deb/google-chrome-stable_current_amd64.deb\" \\\n  && apt -qyy --no-install-recommends install \\\n        \"${CHROME_BASE_DEB_PATH}-stable_current_amd64.deb\" \\\n  && rm \"${CHROME_BASE_DEB_PATH}-stable_current_amd64.deb\" \\\n  && rm -rf ./chrome-deb \\\n  && apt -qyy autoremove \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && apt -qyy clean \\\n  && export CH_STABLE_VER=$(/usr/bin/google-chrome-stable --version | grep -iEo \"${GREP_ONLY_NUMS_VER}\") \\\n  && echo \"CH_STABLE_VER:'${CH_STABLE_VER}' vs EXPECTED_CHROME_VERSION:'${EXPECTED_CHROME_VERSION}'\" \\\n  && [ \"${CH_STABLE_VER}\" = \"${EXPECTED_CHROME_VERSION}\" ] || fail\n\n# We have a wrapper for /opt/google/chrome/google-chrome\nRUN mv /opt/google/chrome/google-chrome /opt/google/chrome/google-chrome-base\nCOPY selenium-node-chrome/opt /opt\nCOPY lib/* /usr/lib/\n\n# Use a custom wallpaper for Fluxbox\nCOPY images/wallpaper-dosel.png /usr/share/images/fluxbox/ubuntu-light.png\nCOPY images/wallpaper-zalenium.png /usr/share/images/fluxbox/\nRUN chown -R seluser:seluser /usr/share/images/fluxbox/ \\\n && chmod -R 777 /usr/share/images/fluxbox\n\n#===================================================\n# Run the following commands as non-privileged user\n#===================================================\nUSER seluser\n\n#==================\n# Chrome webdriver\n#==================\n# How to get cpu arch dynamically: $(lscpu | grep Architecture | sed \"s/^.*_//\")\nARG CHROME_DRIVER_VERSION=\"91.0.4472.19\"\nENV CHROME_DRIVER_BASE=\"chromedriver.storage.googleapis.com\" \\\n    CPU_ARCH=\"64\"\nENV CHROME_DRIVER_FILE=\"chromedriver_linux${CPU_ARCH}.zip\"\nENV CHROME_DRIVER_URL=\"https://${CHROME_DRIVER_BASE}/${CHROME_DRIVER_VERSION}/${CHROME_DRIVER_FILE}\"\n# Gets latest chrome driver version. Or you can hard-code it, e.g. 2.15\nRUN  wget -nv -O chromedriver_linux${CPU_ARCH}.zip ${CHROME_DRIVER_URL} \\\n  && unzip chromedriver_linux${CPU_ARCH}.zip \\\n  && rm chromedriver_linux${CPU_ARCH}.zip \\\n  && mv chromedriver \\\n        chromedriver-${CHROME_DRIVER_VERSION} \\\n  && chmod 755 chromedriver-${CHROME_DRIVER_VERSION} \\\n  && ln -s chromedriver-${CHROME_DRIVER_VERSION} \\\n           chromedriver \\\n  && sudo ln -s /home/seluser/chromedriver /usr/bin\n\n#=================\n# Supervisor conf\n#=================\nCOPY supervisor/etc/supervisor/supervisord.conf /etc/supervisor/\nCOPY **/etc/supervisor/conf.d/* /etc/supervisor/conf.d/\n\n#===================\n# DNS & hosts stuff\n#===================\nCOPY ./dns/etc/hosts /tmp/hosts\n\n#======\n# Envs\n#======\nENV DEFAULT_SELENIUM_HUB_PORT=\"24444\" \\\n    DEFAULT_SELENIUM_NODE_CH_PORT=\"25550\" \\\n    DEFAULT_SELENIUM_NODE_FF_PORT=\"25551\" \\\n    DEFAULT_SELENIUM_MULTINODE_PORT=\"25552\" \\\n    DEFAULT_VNC_PORT=\"25900\" \\\n    DEFAULT_NOVNC_PORT=\"26080\" \\\n    DEFAULT_SUPERVISOR_HTTP_PORT=\"19001\"\n\n# Commented for now; all these versions are still available at\n#   https://github.com/elgalu/docker-selenium/releases/tag/2.47.1m\n# CHROME_FLAVOR \"stable\"\n#   Default chrome flavor, options no longer available: beta|unstable\n# PICK_ALL_RANDOM_PORTS \"true\" / \"false\"\n#   Randomize all ports, i.e. pick unused unprivileged ones\n# RANDOM_PORT_FROM\n# RANDOM_PORT_TO\n#   When using PICK_ALL_RANDOM_PORTS=true the ports will\n#   be from a range to avoid collisions\n# MEM_JAVA_PERCENT \"80\"\n#   Because the JVM uses only 1/4 of system memory by default\n# WAIT_FOREGROUND_RETRY\n# WAIT_VNC_FOREGROUND_RETRY\n#   Max amount of time to wait on Xvfb or Xmanager while retrying\n# XVFB_STARTRETRIES\n# XMANAGER\n#   We used to support 2 X managers: fluxbox | openbox\n#   But after version 3.0.1 we only support fluxbox\n#   to save disk space\n# XMANAGER_STARTRETRIES\n# XMANAGER_STARTSECS\n#   Supervisor processes retry attemps (0 means do not retry)\n# WAIT_TIMEOUT\n#   Max amount of time to wait for other processes dependencies\n# DISP_N\n#   Display number; see entry.sh for $DISPLAY\n# MAX_DISPLAY_SEARCH\n#   Maximum searches for a free DISPLAY number\n# SELENIUM_HUB_PORT\n#   Even though you can change them below, don't worry too much about container\n#   internal ports since you can map them to the host via `docker run -p`\n# SELENIUM_HUB_PROTO\n# SELENIUM_HUB_HOST\n# SELENIUM_NODE_HOST\n#   You may want to connect to another hub\n# SELENIUM_HUB_PARAMS\n# SELENIUM_NODE_PARAMS\n# SELENIUM_NODE_PROXY_PARAMS\n#   Selenium additional params:\n# CHROME_ARGS\n#   \"--no-sandbox --disable-gpu\" To taggle issue #58 see https://goo.gl/fz6RTu\n#   more: \"--ignore-certificate-errors\"\n# CHROME_VERBOSELOGGING\n#   Will be passed with: -Dwebdriver.chrome.verboseLogging\n#     SELENIUM_NODE_CHROME_PARAMS='-Dselenium.chrome.args=\"--no-sandbox\"' \\\n#     WEBDRIVER_NODE_CHROME_PARAMS='-Dwebdriver.chrome.args=\"--no-sandbox\"' \\\n#     Selenium capabilities descriptive (to avoid opera/ie warnings)\n#      docs at https://code.google.com/p/selenium/wiki/Grid2\n# SEL_RELEASE_TIMEOUT_SECS\n#   -timeout AKA GRID_TIMEOUT TODO fix with, ping @allanatadministrate\n#   https://github.com/SeleniumHQ/docker-selenium/pull/393\n# SEL_BROWSER_TIMEOUT_SECS\n# SELENIUM_NODE_REGISTER_CYCLE\n#   How often in ms the node will try to register itself again.\n#   Allow to restart the hub without having to restart the nodes.\n#    (node) in ms. Selenium default: 5000\n# SEL_CLEANUPCYCLE_MS\n#   How often a proxy will check for timed out thread.\n#    (node) in ms. Selenium default: 5000\n# SEL_NODEPOLLING_MS\n#   Interval between alive checks of node how often the hub checks if the node is still alive.\n#    (node) in ms. Selenium default: 5000\n# SEL_UNREGISTER_IF_STILL_DOWN_AFTER\n#   If the node remains down for more than unregisterIfStillDownAfter millisec\n#    it will disappear from the hub. in ms. Default: 1min\n# no_proxy\n# HUB_ENV_no_proxy\n#   Docker for Mac beta - containers do not start #227\n# VNC_FROM_PORT\n# VNC_TO_PORT\n#   We need a fixed port range to expose VNC due to a bug in Docker for Mac beta (1.12)\n#   https://forums.docker.com/t/docker-for-mac-beta-not-forwarding-ports/8658/6\n# VNC_CLI_OPTS\n#   e.g. VNC_CLI_OPTS=\"-noipv6 -no6 -forever -shared\"\n#   e.g. VNC_CLI_OPTS=\"-forever -shared\"\n# VNC_PASSWORD\n#   - \"no\" means no password; less secure but not a big deal\n#   - \"\" (empty string) means it will be randomly generated\n#   - \"some-value\" will use that password \"some-value\" or whatever\n# LOG_LEVEL\n#   Supervisor loglevel and also general docker log level\n#   can be: debug, warn, trace, info\n# DISABLE_ROLLBACK\n#   When DISABLE_ROLLBACK=true it will:\n#    - output logs\n#    - exec bash to permit troubleshooting\n# LOGS_DIR\n#   Logs are now managed by supervisord.conf, see\n#    ${LOGS_DIR}/*.log\n# FFMPEG_FRAME_RATE\n#   ffmpeg encoding options\n# FFMPEG_CODEC_ARGS\n#   Video size can be lowered down via re-encoding, see\n#    http://askubuntu.com/a/365221/134645\n# FFMPEG_DRAW_MOUSE\n#    Specify whether to draw the mouse pointer. Default: 1\n# VIDEO GRID CHROME FIREFOX RC_CHROME RC_FIREFOX\n#   true/false which services should start upon docker run\n# VIDEO_FILE_EXTENSION\n#   Video file and extension, e.g. mp4, mkv\n# TAIL_LOG_LINES\n#   Amount of lines to display when startup errors\n# SHM_TRY_MOUNT_UNMOUNT\n#   Fix small tiny 64mb shm issue\n# ETHERNET_DEVICE_NAME\n#   When docker run --net=host the network name may be different\n# XMANAGER_STOP_SIGNAL\n# XVFB_STOP_SIGNAL\n# XTERM_START\n#  Wheather to start an xterm in the windows manager. For debugging.\n# XTERM_STOP_SIGNAL\n# SELENIUM_NODE_FIREFOX_STOP_SIGNAL\n# SELENIUM_NODE_CHROME_STOP_SIGNAL\n# SELENIUM_MULTINODE_STOP_SIGNAL\n# SELENIUM_HUB_STOP_SIGNAL\n# VNC_STOP_SIGNAL\n# NOVNC_STOP_SIGNAL\n# VIDEO_REC_STOP_SIGNAL\n# DOCKER_SOCK\n#   Run docker from inside docker\n#   Usage: docker run -v /var/run/docker.sock:/var/run/docker.sock\n#                     -v $(which docker):/usr/bin/docker\n# TEST_SLEEPS\n#   Used internally due to flaky tests, should be removed in the future\n# SEND_ANONYMOUS_USAGE_INFO\n# GA_TRACKING_ID\n# GA_ENDPOINT\n# GA_API_VERSION\n#   All Google Analytics related, see LICENSE.md & Analytics.md for more info\nENV FIREFOX_VERSION=\"${FF_VER}\" \\\n  USE_SELENIUM=\"3\" \\\n  CHROME_FLAVOR=\"stable\" \\\n  DEBUG=\"false\" \\\n  PICK_ALL_RANDOM_PORTS=\"false\" \\\n  RANDOM_PORT_FROM=\"23100\" \\\n  RANDOM_PORT_TO=\"29999\" \\\n  USER=\"seluser\" \\\n  HOME=\"/home/seluser\" \\\n  VNC_STORE_PWD_FILE=\"/home/seluser/.vnc/passwd\" \\\n  BIN_UTILS=\"/usr/bin\" \\\n  LIB_UTILS=\"/usr/lib\" \\\n  MEM_JAVA_PERCENT=80 \\\n  WAIT_FOREGROUND_RETRY=\"2s\" \\\n  WAIT_VNC_FOREGROUND_RETRY=\"6s\" \\\n  XVFB_STARTRETRIES=0 \\\n  XMANAGER_STARTSECS=2 \\\n  XMANAGER_STARTRETRIES=3 \\\n  WAIT_TIMEOUT=\"45s\" \\\n  SCREEN_WIDTH=1900 \\\n  SCREEN_HEIGHT=1880 \\\n  SCREEN_MAIN_DEPTH=24 \\\n  SCREEN_SUB_DEPTH=32 \\\n  DISP_N=\"-1\" \\\n  MAX_DISPLAY_SEARCH=99 \\\n  SCREEN_NUM=0 \\\n  SELENIUM_HUB_PORT=\"${DEFAULT_SELENIUM_HUB_PORT}\" \\\n  SELENIUM_HUB_PROTO=\"http\" \\\n  SELENIUM_HUB_HOST=\"127.0.0.1\" \\\n  # Unfortunately selenium is missing a -bind setting so -host\n  # is used multipurpose forcing us to set it now to 0.0.0.0\n  # to match the binding meaning in oposed to host meaning\n  SELENIUM_NODE_HOST=\"0.0.0.0\" \\\n  SELENIUM_NODE_CH_PORT=\"${DEFAULT_SELENIUM_NODE_CH_PORT}\" \\\n  SELENIUM_NODE_FF_PORT=\"${DEFAULT_SELENIUM_NODE_FF_PORT}\" \\\n  SELENIUM_MULTINODE_PORT=\"${DEFAULT_SELENIUM_MULTINODE_PORT}\" \\\n  SELENIUM_HUB_PARAMS=\"\" \\\n  SELENIUM_NODE_PARAMS=\"\" \\\n  SELENIUM_NODE_PROXY_PARAMS=\"\" \\\n  CHROME_ARGS=\"--no-sandbox --disable-setuid-sandbox --disable-gpu --disable-infobars\" \\\n  CHROME_ADDITIONAL_ARGS=\"\" \\\n  CHROME_VERBOSELOGGING=\"true\" \\\n  MAX_INSTANCES=1 \\\n  MAX_SESSIONS=1 \\\n  SEL_RELEASE_TIMEOUT_SECS=\"19000\" \\\n  SEL_BROWSER_TIMEOUT_SECS=\"16000\" \\\n  SELENIUM_NODE_REGISTER_CYCLE=\"5000\" \\\n  SEL_CLEANUPCYCLE_MS=\"5000\" \\\n  SEL_NODEPOLLING_MS=\"5000\" \\\n  SEL_UNREGISTER_IF_STILL_DOWN_AFTER=\"2500\" \\\n  no_proxy=localhost \\\n  HUB_ENV_no_proxy=localhost \\\n  XVFB_CLI_OPTS_TCP=\"-nolisten tcp -nolisten inet6\" \\\n  XVFB_CLI_OPTS_BASE=\"-ac -r -cc 4 -accessx -xinerama\" \\\n  XVFB_CLI_OPTS_EXT=\"+extension Composite +extension RANDR +extension GLX\" \\\n  VNC_START=\"true\" \\\n  VNC_PORT=\"${DEFAULT_VNC_PORT}\" \\\n  VNC_FROM_PORT=\"\" \\\n  VNC_TO_PORT=\"\" \\\n  VNC_CLI_OPTS=\"-forever -shared\" \\\n  VNC_PASSWORD=no \\\n  NOVNC_PORT=\"${DEFAULT_NOVNC_PORT}\" \\\n  NOVNC=\"false\" \\\n  NOVNC_WAIT_TIMEOUT=\"5s\" \\\n  BROWSERMOBPROXY_START=\"false\" \\\n  SUPERVISOR_HTTP_PORT=\"${DEFAULT_SUPERVISOR_HTTP_PORT}\" \\\n  SUPERVISOR_HTTP_USERNAME=\"supervisorweb\" \\\n  SUPERVISOR_HTTP_PASSWORD=\"somehttpbasicauthpwd\" \\\n  SUPERVISOR_REQUIRED_SRV_LIST=\"xmanager\" \\\n  SUPERVISOR_NOT_REQUIRED_SRV_LIST1=\"ignoreMe\" \\\n  SUPERVISOR_NOT_REQUIRED_SRV_LIST2=\"ignoreMe\" \\\n  SLEEP_SECS_AFTER_KILLING_SUPERVISORD=3 \\\n  SUPERVISOR_STOPWAITSECS=20 \\\n  SUPERVISOR_STOPSIGNAL=TERM \\\n  SUPERVISOR_KILLASGROUP=\"false\" \\\n  SUPERVISOR_STOPASGROUP=\"false\" \\\n  LOG_LEVEL=\"info\" \\\n  DISABLE_ROLLBACK=\"false\" \\\n  LOGFILE_MAXBYTES=10MB \\\n  LOGFILE_BACKUPS=5 \\\n  LOGS_DIR=\"/var/log/cont\" \\\n  VIDEO=\"false\" \\\n  AUDIO=\"false\" \\\n  GRID=\"true\" \\\n  CHROME=\"true\" \\\n  FIREFOX=\"true\" \\\n  MULTINODE=\"false\" \\\n  FFMPEG_FRAME_RATE=10 \\\n  FFMPEG_CODEC_ARGS=\"-vcodec libx264 -preset ultrafast -pix_fmt yuv420p\" \\\n  FFMPEG_CODEC_VA_ARGS=\"-vcodec libx264 -acodec copy -preset ultrafast\" \\\n  FFMPEG_FINAL_CRF=0 \\\n  FFMPEG_DRAW_MOUSE=1 \\\n  VIDEO_TMP_FILE_EXTENSION=\"mkv\" \\\n  VIDEO_FILE_EXTENSION=\"mp4\" \\\n  MP4_INTERLEAVES_MEDIA_DATA_CHUNKS_SECS=\"500\" \\\n  VIDEO_FILE_NAME=\"\" \\\n  VIDEO_BEFORE_STOP_SLEEP_SECS=\"1\" \\\n  VIDEO_AFTER_STOP_SLEEP_SECS=\"0.5\" \\\n  VIDEO_STOPWAITSECS=\"50\" \\\n  VIDEO_CONVERSION_MAX_WAIT=\"20s\" \\\n  VIDEO_MP4_FIX_MAX_WAIT=\"8s\" \\\n  VIDEO_WAIT_VID_TOOL_PID_1st_sig_UP_TO_SECS=\"6s\" \\\n  VIDEO_WAIT_VID_TOOL_PID_2nd_sig_UP_TO_SECS=\"2s\" \\\n  VIDEO_WAIT_VID_TOOL_PID_3rd_sig_UP_TO_SECS=\"1s\" \\\n  VIDEO_STOP_1st_sig_TYPE=\"SIGTERM\" \\\n  VIDEO_STOP_2nd_sig_TYPE=\"SIGINT\" \\\n  VIDEO_STOP_3rd_sig_TYPE=\"SIGKILL\" \\\n  WAIT_TIME_OUT_VIDEO_STOP=\"20s\" \\\n  VIDEOS_DIR=\"/home/seluser/videos\" \\\n  XMANAGER=\"fluxbox\" \\\n  FLUXBOX_START_MAX_RETRIES=5 \\\n  TAIL_LOG_LINES=\"50\" \\\n  SHM_TRY_MOUNT_UNMOUNT=\"false\" \\\n  SHM_SIZE=\"512M\" \\\n  ETHERNET_DEVICE_NAME=\"eth0\" \\\n  XMANAGER_STOP_SIGNAL=\"TERM\" \\\n  XVFB_STOP_SIGNAL=\"TERM\" \\\n  XTERM_START=\"false\" \\\n  XTERM_STOP_SIGNAL=\"INT\" \\\n  SELENIUM_NODE_FIREFOX_STOP_SIGNAL=\"TERM\" \\\n  SELENIUM_NODE_CHROME_STOP_SIGNAL=\"TERM\" \\\n  SELENIUM_MULTINODE_STOP_SIGNAL=\"TERM\" \\\n  SELENIUM_HUB_STOP_SIGNAL=\"TERM\" \\\n  VNC_STOP_SIGNAL=\"TERM\" \\\n  NOVNC_STOP_SIGNAL=\"TERM\" \\\n  VIDEO_REC_STOP_SIGNAL=\"INT\" \\\n  BROWSERMOBPROXY_STOP_SIGNAL=\"TERM\" \\\n  DOCKER_SOCK=\"/var/run/docker.sock\" \\\n  TEST_SLEEPS=\"0.1\" \\\n  ZALENIUM=\"false\" \\\n  SEND_ANONYMOUS_USAGE_INFO=\"true\" \\\n  GA_TRACKING_ID=\"UA-18144954-9\" \\\n  GA_ENDPOINT=https://www.google-analytics.com/collect \\\n  GA_API_VERSION=\"1\" \\\n  LD_LIBRARY_PATH=\"/usr/lib/x86_64-linux-gnu/\" \\\n  DEBIAN_FRONTEND=\"\" \\\n  USE_KUBERNETES=\"false\" \\\n  REMOVE_SELUSER_FROM_SUDOERS_FOR_TESTING=\"false\" \\\n  DEBCONF_NONINTERACTIVE_SEEN=\"\"\n\n#================================\n# Expose Container's Directories\n#================================\n# VOLUME ${LOGS_DIR}\n\n# Removed HEALTHCHECK because is providing no value to us but\n# rather problems. When Zalenium starts N containers at the some time\n# the --interval will make docker check the health of all of them\n# at the same time and this causes an unnecessary CPU overhead.\n# HEALTHCHECK --interval=2m --timeout=50s --retries=2 \\\n#   CMD wait_all_done 30s\n\n#================\n# Binary scripts\n#================\nCOPY bin/* ${BIN_UTILS}/\nCOPY **/bin/* ${BIN_UTILS}/\nCOPY host-scripts/* /host-scripts/\nCOPY test/* /test/\nCOPY test/run_test.sh /usr/bin/run_test\nCOPY test/selenium_test.sh /usr/bin/selenium_test\nCOPY test/python_test.py /usr/bin/python_test\nCOPY images ./images\nCOPY LICENSE.md /home/seluser/\nCOPY Analytics.md /home/seluser/\n\n# Include current version\nCOPY GLOBAL_PATCH_LEVEL.txt /home/seluser/\nRUN echo \"${SEL_VER}-$(cat GLOBAL_PATCH_LEVEL.txt)\" > /home/seluser/VERSION\n\n# Moved from entry.sh\nENV SUPERVISOR_PIDFILE=\"${RUN_DIR}/supervisord.pid\" \\\n    DOCKER_SELENIUM_STATUS=\"${LOGS_DIR}/docker-selenium-status.log\" \\\n    VNC_TRYOUT_ERR_LOG=\"${LOGS_DIR}/vnc-tryouts-stderr\" \\\n    VNC_TRYOUT_OUT_LOG=\"${LOGS_DIR}/vnc-tryouts-stdout\"\n\n# Include Lib Browsermob Proxy\nUSER root\n\nENV BROWSERMOBPROXY_VER=2.1.4\nENV BROWSERMOBPROXY_FOLDER=browsermob-proxy-${BROWSERMOBPROXY_VER}\n\nRUN  wget -nv -O browsermob-proxy.zip \\\n       \"https://github.com/lightbody/browsermob-proxy/releases/download/browsermob-proxy-${BROWSERMOBPROXY_VER}/browsermob-proxy-${BROWSERMOBPROXY_VER}-bin.zip\" \\\n  && unzip -x browsermob-proxy.zip \\\n  && rm browsermob-proxy.zip \\\n  && mv ${BROWSERMOBPROXY_FOLDER}/lib/browsermob-dist-${BROWSERMOBPROXY_VER}.jar ${LIB_UTILS}/ \\\n  && rm -r ${BROWSERMOBPROXY_FOLDER}\n\nUSER seluser\n\n#===================================\n# Fix dirs (again) and final chores\n#===================================\n# The .X11-unix stuff is useful when using Xephyr\nRUN mkdir -p /home/seluser/.vnc \\\n  && sudo touch /capabilities.json \\\n  && sudo chown seluser:seluser /capabilities.json \\\n  && generate_capabilities_json > /capabilities.json \\\n  && cp /capabilities.json /home/seluser/capabilities.json \\\n  && cp /capabilities.json /home/seluser/capabilities \\\n  && cp /capabilities.json /home/seluser/caps.json \\\n  && cp /capabilities.json /home/seluser/caps \\\n  && mkdir -p ${VIDEOS_DIR} \\\n  && sudo ln -s ${VIDEOS_DIR} /videos \\\n  && sudo mkdir -p ${LOGS_DIR} \\\n  && sudo mkdir -p ${RUN_DIR} \\\n  && sudo mkdir -p /tmp/.X11-unix /tmp/.ICE-unix \\\n  && sudo fixperms.sh \\\n  && echo \"\"\n\n#=====================================================\n# Meta JSON file to hold commit info of current build\n#=====================================================\nCOPY scm-source.json /\n# Ensure the file is up-to-date else you should update it by running\n#  ./host-scripts/gen-scm-source.sh\n# on the host machine\n\n#==================\n# ENTRYPOINT & CMD\n#==================\n# IMPORTANT: Using the string form `CMD \"entry.sh\"` without\n# brackets [] causes Docker to run your process\n# And using `bash` which doesn’t handle signals properly\nCMD [\"entry.sh\"]\n"
}