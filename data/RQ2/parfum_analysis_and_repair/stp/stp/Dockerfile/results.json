{
  "startTime": 1674255205493,
  "endTime": 1674255206201,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 7,
        "columnEnd": 36
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 44
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04 as builder\n\nLABEL maintainer=\"Mate Soos\"\nLABEL version=\"5.0\"\nLABEL Description=\"An advanced SAT solver\"\n\n# get curl, etc\nRUN apt-get update && apt-get install --no-install-recommends -y software-properties-common && rm -rf /var/lib/apt/lists/*\nRUN add-apt-repository -y ppa:ubuntu-toolchain-r/test && rm -rf /var/lib/apt/lists/*\nRUN apt-get update && apt-get install --no-install-recommends -y libboost-program-options-dev gcc g++ make cmake zlib1g-dev wget && rm -rf /var/lib/apt/lists/*\nRUN apt-get update && apt-get install --no-install-recommends -y bison flex \\\n    && rm -rf /var/lib/apt/lists/*\n\n# get M4RI\nRUN mkdir /m4ri-20140914\nWORKDIR /m4ri-20140914\nRUN wget https://bitbucket.org/malb/m4ri/downloads/m4ri-20140914.tar.gz \\\n    && tar -xvf m4ri-20140914.tar.gz && rm m4ri-20140914.tar.gz\nWORKDIR /m4ri-20140914/m4ri-20140914\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"\nRUN make -j6\nRUN make install\nRUN make clean\n\n# build CMS\nRUN mkdir /cms\nWORKDIR /cms\nRUN wget -O cryptominisat.tgz https://github.com/msoos/cryptominisat/archive/5.8.0.tar.gz\nRUN tar xvf cryptominisat.tgz --strip-components 1 && rm cryptominisat.tgz\nRUN mkdir build\nWORKDIR /cms/build\nRUN cmake -DENABLE_ASSERTIONS=OFF -DCMAKE_BUILD_TYPE=Release -DSTATICCOMPILE=ON ..\nRUN make -j6\nRUN make install\n\nRUN mkdir /minisat\nWORKDIR /minisat\nRUN wget -O minisat.tgz https://github.com/stp/minisat/archive/releases/2.2.1.tar.gz\nRUN tar xvf minisat.tgz --strip-components 1 && rm minisat.tgz\nRUN mkdir build\nWORKDIR /minisat/build\nRUN cmake ..\nRUN make -j6\nRUN make install\n\n# build stp\nRUN mkdir /stp\nWORKDIR /stp\nCOPY . /stp\nRUN mkdir build\nWORKDIR /stp/build\nRUN cmake -DENABLE_ASSERTIONS=OFF -DSTATICCOMPILE=ON -DCMAKE_BUILD_TYPE=Release  ..\nRUN make -j6\nRUN make install\n\n# set up for running\n# set up for running\nFROM alpine:latest\nCOPY --from=builder /usr/local/bin/stp /usr/local/bin/stp\nENTRYPOINT [\"/usr/local/bin/stp\", \"--SMTLIB2\"]\n\n# --------------------\n# HOW TO USE\n# --------------------\n# on file through STDIN:\n#    cat myfile.smt | docker run --rm -i -a stdin -a stdout stp\n\n\n"
}