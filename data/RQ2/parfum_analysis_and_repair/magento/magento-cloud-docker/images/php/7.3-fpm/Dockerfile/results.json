{
  "startTime": 1674217002119,
  "endTime": 1674217003990,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 121,
        "lineEnd": 121,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 132,
        "lineEnd": 132,
        "columnStart": 5,
        "columnEnd": 96
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 150,
        "lineEnd": 150,
        "columnStart": 5,
        "columnEnd": 81
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 160,
        "lineEnd": 160,
        "columnStart": 5,
        "columnEnd": 102
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 136,
        "lineEnd": 136,
        "columnStart": 5,
        "columnEnd": 16
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 143,
        "lineEnd": 143,
        "columnStart": 5,
        "columnEnd": 96
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 152,
        "lineEnd": 152,
        "columnStart": 5,
        "columnEnd": 16
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 7,
        "columnEnd": 32
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 133,
        "lineEnd": 133,
        "columnStart": 5,
        "columnEnd": 36
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 121,
        "lineEnd": 121,
        "columnStart": 52,
        "columnEnd": 100
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 125,
        "lineEnd": 125,
        "columnStart": 5,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 125,
        "lineEnd": 125,
        "columnStart": 5,
        "columnEnd": 34
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# This file is automatically generated. Do not edit directly. #\nFROM golang:1.15 AS builder\n\nRUN if [ $(uname -m) = \"x86_64\" ]; then mailhog_arch=\"amd64\"; else mailhog_arch=\"arm64\"; fi \\\n    && wget -O mhsendmail.tar.gz https://github.com/mailhog/mhsendmail/archive/refs/tags/v0.2.0.tar.gz \\\n    && tar -xf mhsendmail.tar.gz \\\n    && mkdir -p ./src/github.com/mailhog/ \\\n    && mv ./mhsendmail-0.2.0 ./src/github.com/mailhog/mhsendmail \\\n    && cd ./src/github.com/mailhog/mhsendmail/ \\\n    && go get . \\\n    && GOOS=linux GOARCH=${mailhog_arch} go build -o mhsendmail . && rm mhsendmail.tar.gz\n\nFROM php:7.3-fpm\n\nARG MAGENTO_ROOT=/app\n\nENV PHP_MEMORY_LIMIT 2G\nENV PHP_VALIDATE_TIMESTAMPS 1\nENV DEBUG false\nENV MAGENTO_RUN_MODE production\nENV UPLOAD_MAX_FILESIZE 64M\nENV SENDMAIL_PATH /dev/null\nENV PHPRC ${MAGENTO_ROOT}/php.ini\n\nENV PHP_EXTENSIONS bcmath bz2 calendar exif gd gettext intl mysqli opcache pdo_mysql redis soap sockets sodium sysvmsg sysvsem sysvshm xsl zip pcntl\n\n# Install dependencies\nRUN apt-get update \\\n  && apt-get upgrade -y \\\n  && apt-get install -y --no-install-recommends \\\n  apt-utils \\\n  sendmail-bin \\\n  sendmail \\\n  sudo \\\n  iproute2 \\\n  git \\\n  gnupg2 \\\n  ca-certificates \\\n  lsb-release \\\n  software-properties-common \\\n  libbz2-dev \\\n  libjpeg62-turbo-dev \\\n  libpng-dev \\\n  libfreetype6-dev \\\n  libgeoip-dev \\\n  wget \\\n  libgmp-dev \\\n  libgpgme11-dev \\\n  libmagickwand-dev \\\n  libmagickcore-dev \\\n  libc-client-dev \\\n  libkrb5-dev \\\n  libicu-dev \\\n  libldap2-dev \\\n  libpspell-dev \\\n  librecode0 \\\n  librecode-dev \\\n  libtidy-dev \\\n  libxslt1-dev \\\n  libyaml-dev \\\n  libzip-dev \\\n  zip \\\n  && rm -rf /var/lib/apt/lists/*\n\n# Install MailHog\nCOPY --from=builder /go/src/github.com/mailhog/mhsendmail/mhsendmail /usr/local/bin/\nRUN sudo chmod +x /usr/local/bin/mhsendmail\n\n# Configure the gd library\nRUN docker-php-ext-configure \\\n  gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/\nRUN docker-php-ext-configure \\\n  imap --with-kerberos --with-imap-ssl\nRUN docker-php-ext-configure \\\n  opcache --enable-opcache\nRUN docker-php-ext-configure \\\n  zip --with-libzip\n\n# Install required PHP extensions\nRUN docker-php-ext-install -j$(nproc) \\\n  bcmath \\\n  bz2 \\\n  calendar \\\n  exif \\\n  gd \\\n  gettext \\\n  gmp \\\n  imap \\\n  intl \\\n  mysqli \\\n  opcache \\\n  pdo_mysql \\\n  pspell \\\n  recode \\\n  shmop \\\n  soap \\\n  sockets \\\n  sysvmsg \\\n  sysvsem \\\n  sysvshm \\\n  tidy \\\n  xmlrpc \\\n  xsl \\\n  zip \\\n  pcntl\n\nRUN pecl install -o -f \\\n  geoip-1.1.1 \\\n  gnupg \\\n  igbinary \\\n  imagick \\\n  mailparse \\\n  msgpack \\\n  oauth \\\n  pcov \\\n  propro \\\n  raphf \\\n  redis \\\n  xdebug-3.1.2 \\\n  yaml\n\nRUN curl -f -L https://packages.blackfire.io/gpg.key | gpg --batch --dearmor > blackfire.io-archive-keyring.gpg \\\n  && install -o root -g root -m 644 blackfire.io-archive-keyring.gpg /etc/apt/trusted.gpg.d/ \\\n  && echo \"deb http://packages.blackfire.io/debian any main\" | tee /etc/apt/sources.list.d/blackfire.list \\\n  && apt-get update \\\n  && apt-get install -y --no-install-recommends blackfire-php \\\n  && rm -rf /var/lib/apt/lists/*\nRUN if [ $(uname -m) = \"x86_64\" ]; then ldap_arch=\"x86_64-linux-gnu\"; else ldap_arch=\"aarch64-linux-gnu\"; fi \\\n  && docker-php-ext-configure ldap --with-libdir=lib/${ldap_arch}\nRUN mkdir -p /tmp/zoo \\\n  && cd /tmp/zoo \\\n  && git clone https://github.com/php-zookeeper/php-zookeeper.git \\\n  && curl -f -LO https://archive.apache.org/dist/zookeeper/zookeeper-3.4.14/zookeeper-3.4.14.tar.gz \\\n  && tar -xf zookeeper-3.4.14.tar.gz \\\n  && cp zookeeper-3.4.14/zookeeper-client/zookeeper-client-c/generated/zookeeper.jute.h zookeeper-3.4.14/zookeeper-client/zookeeper-client-c/include \\\n  && cd zookeeper-3.4.14/zookeeper-client/zookeeper-client-c \\\n  && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n  && sed -i 's/CFLAGS = -g -O2 -D_GNU_SOURCE/CFLAGS = -g -O2 -D_GNU_SOURCE -Wno-error=format-overflow -Wno-error=stringop-truncation/g' Makefile \\\n  && make \\\n  && make install \\\n  && ldconfig \\\n  && cd /tmp/zoo/php-zookeeper \\\n  && phpize \\\n  && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-libzookeeper-dir=../zookeeper-3.4.14/zookeeper-client/zookeeper-client-c \\\n  && make \\\n  && make install && rm zookeeper-3.4.14.tar.gz\nRUN rm -f /usr/local/etc/php/conf.d/*sodium.ini \\\n  && rm -f /usr/local/lib/php/extensions/*/*sodium.so \\\n  && apt-get remove libsodium* -y \\\n  && mkdir -p /tmp/libsodium \\\n  && curl -f -sL https://github.com/jedisct1/libsodium/archive/1.0.18-RELEASE.tar.gz | tar xzf - -C  /tmp/libsodium \\\n  && cd /tmp/libsodium/libsodium-1.0.18-RELEASE/ \\\n  && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n  && make && make check \\\n  && make install \\\n  && cd / \\\n  && rm -rf /tmp/libsodium \\\n  && pecl install -o -f libsodium\nRUN cd /tmp \\\n  && if [ $(uname -m) = \"x86_64\" ]; then ioncube_arch=\"x86-64\"; else ioncube_arch=\"aarch64\"; fi \\\n  && curl -f -O https://downloads.ioncube.com/loader_downloads/ioncube_loaders_lin_${ioncube_arch}.tar.gz \\\n  && tar zxvf ioncube_loaders_lin_${ioncube_arch}.tar.gz \\\n  && export PHP_VERSION=$(php -r \"echo PHP_MAJOR_VERSION.'.'.PHP_MINOR_VERSION;\") \\\n  && export PHP_EXT_DIR=$(php-config --extension-dir) \\\n  && cp \"./ioncube/ioncube_loader_lin_${PHP_VERSION}.so\" \"${PHP_EXT_DIR}/ioncube.so\" \\\n  && rm -rf ./ioncube \\\n  && rm ioncube_loaders_lin_${ioncube_arch}.tar.gz\n\nCOPY etc/php-fpm.ini /usr/local/etc/php/conf.d/zz-magento.ini\nCOPY etc/php-xdebug.ini /usr/local/etc/php/conf.d/zz-xdebug-settings.ini\nCOPY etc/php-pcov.ini /usr/local/etc/php/conf.d/zz-pcov-settings.ini\nCOPY etc/mail.ini /usr/local/etc/php/conf.d/zz-mail.ini\nCOPY etc/php-fpm.conf /usr/local/etc/\nCOPY etc/php-gnupg.ini /usr/local/etc/php/conf.d/gnupg.ini\n\nRUN groupadd -g 1000 www && useradd -g 1000 -u 1000 -d ${MAGENTO_ROOT} -s /bin/bash www\n\nCOPY docker-entrypoint.sh /docker-entrypoint.sh\nRUN [\"chmod\", \"+x\", \"/docker-entrypoint.sh\"]\n\nRUN mkdir -p ${MAGENTO_ROOT}\n\nVOLUME ${MAGENTO_ROOT}\n\nRUN chown -R www:www /usr/local /var/www /var/log /usr/local/etc/php/conf.d ${MAGENTO_ROOT}\n\nENTRYPOINT [\"/docker-entrypoint.sh\"]\n\nWORKDIR ${MAGENTO_ROOT}\n\nUSER root\n\nCMD [\"php-fpm\", \"-R\"]\n"
}