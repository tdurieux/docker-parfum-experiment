diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/magento/magento-cloud-docker/images/php/8.1-cli/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/magento/magento-cloud-docker/images/php/8.1-cli/Dockerfile/repaired.Dockerfile
index 9708007..ce12d06 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/magento/magento-cloud-docker/images/php/8.1-cli/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/magento/magento-cloud-docker/images/php/8.1-cli/Dockerfile/repaired.Dockerfile
@@ -8,7 +8,7 @@ RUN if [ $(uname -m) = "x86_64" ]; then mailhog_arch="amd64"; else mailhog_arch=
     && mv ./mhsendmail-0.2.0 ./src/github.com/mailhog/mhsendmail \
     && cd ./src/github.com/mailhog/mhsendmail/ \
     && go get . \
-    && GOOS=linux GOARCH=${mailhog_arch} go build -o mhsendmail .
+    && GOOS=linux GOARCH=${mailhog_arch} go build -o mhsendmail . && rm mhsendmail.tar.gz
 
 FROM php:8.1.1-cli
 
@@ -31,7 +31,7 @@ ENV PHPRC ${MAGENTO_ROOT}/php.ini
 ENV PHP_EXTENSIONS bcmath bz2 calendar exif gd gettext intl mysqli opcache pdo_mysql redis soap sockets sodium sysvmsg sysvsem sysvshm xsl zip pcntl
 
 # Configure Node.js version
-RUN curl -sL https://deb.nodesource.com/setup_lts.x | bash
+RUN curl -f -sL https://deb.nodesource.com/setup_lts.x | bash
 
 # Install dependencies
 RUN apt-get update \
@@ -74,11 +74,11 @@ RUN apt-get update \
   && rm -rf /var/lib/apt/lists/*
 
 # Install PyYAML
-RUN pip3 install --upgrade setuptools \
-    && pip3 install pyyaml
+RUN pip3 install --no-cache-dir --upgrade setuptools \
+    && pip3 install --no-cache-dir pyyaml
 
 # Install Grunt
-RUN npm install -g grunt-cli
+RUN npm install -g grunt-cli && npm cache clean --force;
 
 # Install MailHog
 COPY --from=builder /go/src/github.com/mailhog/mhsendmail/mhsendmail /usr/local/bin/
@@ -127,38 +127,38 @@ RUN pecl install -o -f \
   xmlrpc-1.0.0RC3 \
   yaml
 
-RUN curl -L https://packages.blackfire.io/gpg.key | gpg --dearmor > blackfire.io-archive-keyring.gpg \
+RUN curl -f -L https://packages.blackfire.io/gpg.key | gpg --batch --dearmor > blackfire.io-archive-keyring.gpg \
   && install -o root -g root -m 644 blackfire.io-archive-keyring.gpg /etc/apt/trusted.gpg.d/ \
   && echo "deb http://packages.blackfire.io/debian any main" | tee /etc/apt/sources.list.d/blackfire.list \
   && apt-get update \
-  && apt-get install blackfire-php \
+  && apt-get install -y --no-install-recommends blackfire-php \
   && rm -rf /var/lib/apt/lists/*
 RUN if [ $(uname -m) = "x86_64" ]; then ldap_arch="x86_64-linux-gnu"; else ldap_arch="aarch64-linux-gnu"; fi \
   && docker-php-ext-configure ldap --with-libdir=lib/${ldap_arch}
 RUN mkdir -p /tmp/zoo \
   && cd /tmp/zoo \
   && git clone https://github.com/php-zookeeper/php-zookeeper.git \
-  && curl -LO https://archive.apache.org/dist/zookeeper/zookeeper-3.4.14/zookeeper-3.4.14.tar.gz \
+  && curl -f -LO https://archive.apache.org/dist/zookeeper/zookeeper-3.4.14/zookeeper-3.4.14.tar.gz \
   && tar -xf zookeeper-3.4.14.tar.gz \
   && cp zookeeper-3.4.14/zookeeper-client/zookeeper-client-c/generated/zookeeper.jute.h zookeeper-3.4.14/zookeeper-client/zookeeper-client-c/include \
   && cd zookeeper-3.4.14/zookeeper-client/zookeeper-client-c \
-  && ./configure \
+  && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
   && sed -i 's/CFLAGS = -g -O2 -D_GNU_SOURCE/CFLAGS = -g -O2 -D_GNU_SOURCE -Wno-error=format-overflow -Wno-error=stringop-truncation/g' Makefile \
   && make \
   && make install \
   && ldconfig \
   && cd /tmp/zoo/php-zookeeper \
   && phpize \
-  && ./configure --with-libzookeeper-dir=../zookeeper-3.4.14/zookeeper-client/zookeeper-client-c \
+  && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --with-libzookeeper-dir=../zookeeper-3.4.14/zookeeper-client/zookeeper-client-c \
   && make \
-  && make install
+  && make install && rm zookeeper-3.4.14.tar.gz
 RUN rm -f /usr/local/etc/php/conf.d/*sodium.ini \
   && rm -f /usr/local/lib/php/extensions/*/*sodium.so \
   && apt-get remove libsodium* -y \
   && mkdir -p /tmp/libsodium \
-  && curl -sL https://github.com/jedisct1/libsodium/archive/1.0.18-RELEASE.tar.gz | tar xzf - -C  /tmp/libsodium \
+  && curl -f -sL https://github.com/jedisct1/libsodium/archive/1.0.18-RELEASE.tar.gz | tar xzf - -C  /tmp/libsodium \
   && cd /tmp/libsodium/libsodium-1.0.18-RELEASE/ \
-  && ./configure \
+  && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
   && make && make check \
   && make install \
   && cd / \
@@ -172,7 +172,7 @@ ADD etc/mail.ini /usr/local/etc/php/conf.d/zz-mail.ini
 ADD etc/php-gnupg.ini /usr/local/etc/php/conf.d/gnupg.ini
 
 # Get composer installed to /usr/local/bin/composer
-RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --version=${COMPOSER_VERSION} --filename=composer
+RUN curl -f -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --version=${COMPOSER_VERSION} --filename=composer
 
 ADD bin/* /usr/local/bin/