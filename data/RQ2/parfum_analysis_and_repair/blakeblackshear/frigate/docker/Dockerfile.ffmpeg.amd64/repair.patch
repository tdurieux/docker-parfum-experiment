diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/blakeblackshear/frigate/docker/Dockerfile.ffmpeg.amd64 b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/blakeblackshear/frigate/docker/Dockerfile.ffmpeg.amd64/repaired.Dockerfile
index 5dc0055..5089e9c 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/blakeblackshear/frigate/docker/Dockerfile.ffmpeg.amd64
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/blakeblackshear/frigate/docker/Dockerfile.ffmpeg.amd64/repaired.Dockerfile
@@ -7,10 +7,10 @@ FROM        ubuntu:20.04 AS base
 WORKDIR     /tmp/workdir
 
 ENV     DEBIAN_FRONTEND=noninteractive
-RUN     apt-get -yqq update && \
+RUN apt-get -yqq update && \
         apt-get install -yq --no-install-recommends ca-certificates expat libgomp1 && \
         apt-get autoremove -y && \
-        apt-get clean -y
+        apt-get clean -y && rm -rf /var/lib/apt/lists/*;
 
 FROM base as build
 
@@ -60,7 +60,7 @@ ARG         PREFIX=/opt/ffmpeg
 ARG         LD_LIBRARY_PATH="/opt/ffmpeg/lib:/opt/ffmpeg/lib64:/usr/lib64:/usr/lib:/lib64:/lib"
 
 
-RUN     buildDeps="autoconf \
+RUN buildDeps="autoconf \
         automake \
         cmake \
         curl \
@@ -82,15 +82,15 @@ RUN     buildDeps="autoconf \
         libmfx-dev \
         zlib1g-dev" && \
         apt-get -yqq update && \
-        apt-get install -yq --no-install-recommends ${buildDeps}
+        apt-get install -yq --no-install-recommends ${buildDeps} && rm -rf /var/lib/apt/lists/*;
 ## opencore-amr https://sourceforge.net/projects/opencore-amr/
 RUN \
         DIR=/tmp/opencore-amr && \
         mkdir -p ${DIR} && \
         cd ${DIR} && \
-        curl -sL https://versaweb.dl.sourceforge.net/project/opencore-amr/opencore-amr/opencore-amr-${OPENCOREAMR_VERSION}.tar.gz | \
+        curl -f -sL https://versaweb.dl.sourceforge.net/project/opencore-amr/opencore-amr/opencore-amr-${OPENCOREAMR_VERSION}.tar.gz | \
         tar -zx --strip-components=1 && \
-        ./configure --prefix="${PREFIX}" --enable-shared  && \
+        ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix="${PREFIX}" --enable-shared && \
         make && \
         make install && \
         rm -rf ${DIR}
@@ -99,9 +99,9 @@ RUN \
         DIR=/tmp/x264 && \
         mkdir -p ${DIR} && \
         cd ${DIR} && \
-        curl -sL https://download.videolan.org/pub/videolan/x264/snapshots/x264-snapshot-${X264_VERSION}.tar.bz2 | \
+        curl -f -sL https://download.videolan.org/pub/videolan/x264/snapshots/x264-snapshot-${X264_VERSION}.tar.bz2 | \
         tar -jx --strip-components=1 && \
-        ./configure --prefix="${PREFIX}" --enable-shared --enable-pic --disable-cli && \
+        ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix="${PREFIX}" --enable-shared --enable-pic --disable-cli && \
         make && \
         make install && \
         rm -rf ${DIR}
@@ -110,7 +110,7 @@ RUN \
         DIR=/tmp/x265 && \
         mkdir -p ${DIR} && \
         cd ${DIR} && \
-        curl -sL https://download.videolan.org/pub/videolan/x265/x265_${X265_VERSION}.tar.gz  | \
+        curl -f -sL https://download.videolan.org/pub/videolan/x265/x265_${X265_VERSION}.tar.gz | \
         tar -zx && \
         cd x265_${X265_VERSION}/build/linux && \
         sed -i "/-DEXTRA_LIB/ s/$/ -DCMAKE_INSTALL_PREFIX=\${PREFIX}/" multilib.sh && \
@@ -123,59 +123,59 @@ RUN \
         DIR=/tmp/ogg && \
         mkdir -p ${DIR} && \
         cd ${DIR} && \
-        curl -sLO http://downloads.xiph.org/releases/ogg/libogg-${OGG_VERSION}.tar.gz && \
+        curl -f -sLO http://downloads.xiph.org/releases/ogg/libogg-${OGG_VERSION}.tar.gz && \
         echo ${OGG_SHA256SUM} | sha256sum --check && \
         tar -zx --strip-components=1 -f libogg-${OGG_VERSION}.tar.gz && \
-        ./configure --prefix="${PREFIX}" --enable-shared  && \
+        ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix="${PREFIX}" --enable-shared && \
         make && \
         make install && \
-        rm -rf ${DIR}
+        rm -rf ${DIR} && rm libogg-${OGG_VERSION}.tar.gz
 ### libopus https://www.opus-codec.org/
 RUN \
         DIR=/tmp/opus && \
         mkdir -p ${DIR} && \
         cd ${DIR} && \
-        curl -sLO https://archive.mozilla.org/pub/opus/opus-${OPUS_VERSION}.tar.gz && \
+        curl -f -sLO https://archive.mozilla.org/pub/opus/opus-${OPUS_VERSION}.tar.gz && \
         echo ${OPUS_SHA256SUM} | sha256sum --check && \
         tar -zx --strip-components=1 -f opus-${OPUS_VERSION}.tar.gz && \
         autoreconf -fiv && \
-        ./configure --prefix="${PREFIX}" --enable-shared && \
+        ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix="${PREFIX}" --enable-shared && \
         make && \
         make install && \
-        rm -rf ${DIR}
+        rm -rf ${DIR} && rm opus-${OPUS_VERSION}.tar.gz
 ### libvorbis https://xiph.org/vorbis/
 RUN \
         DIR=/tmp/vorbis && \
         mkdir -p ${DIR} && \
         cd ${DIR} && \
-        curl -sLO http://downloads.xiph.org/releases/vorbis/libvorbis-${VORBIS_VERSION}.tar.gz && \
+        curl -f -sLO http://downloads.xiph.org/releases/vorbis/libvorbis-${VORBIS_VERSION}.tar.gz && \
         echo ${VORBIS_SHA256SUM} | sha256sum --check && \
         tar -zx --strip-components=1 -f libvorbis-${VORBIS_VERSION}.tar.gz && \
-        ./configure --prefix="${PREFIX}" --with-ogg="${PREFIX}" --enable-shared && \
+        ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix="${PREFIX}" --with-ogg="${PREFIX}" --enable-shared && \
         make && \
         make install && \
-        rm -rf ${DIR}
+        rm -rf ${DIR} && rm libvorbis-${VORBIS_VERSION}.tar.gz
 ### libtheora http://www.theora.org/
 RUN \
         DIR=/tmp/theora && \
         mkdir -p ${DIR} && \
         cd ${DIR} && \
-        curl -sLO http://downloads.xiph.org/releases/theora/libtheora-${THEORA_VERSION}.tar.gz && \
+        curl -f -sLO http://downloads.xiph.org/releases/theora/libtheora-${THEORA_VERSION}.tar.gz && \
         echo ${THEORA_SHA256SUM} | sha256sum --check && \
         tar -zx --strip-components=1 -f libtheora-${THEORA_VERSION}.tar.gz && \
-        ./configure --prefix="${PREFIX}" --with-ogg="${PREFIX}" --enable-shared && \
+        ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix="${PREFIX}" --with-ogg="${PREFIX}" --enable-shared && \
         make && \
         make install && \
-        rm -rf ${DIR}
+        rm -rf ${DIR} && rm libtheora-${THEORA_VERSION}.tar.gz
 ### libvpx https://www.webmproject.org/code/
 RUN \
         DIR=/tmp/vpx && \
         mkdir -p ${DIR} && \
         cd ${DIR} && \
-        curl -sL https://codeload.github.com/webmproject/libvpx/tar.gz/v${VPX_VERSION} | \
+        curl -f -sL https://codeload.github.com/webmproject/libvpx/tar.gz/v${VPX_VERSION} | \
         tar -zx --strip-components=1 && \
-        ./configure --prefix="${PREFIX}" --enable-vp8 --enable-vp9 --enable-vp9-highbitdepth --enable-pic --enable-shared \
-        --disable-debug --disable-examples --disable-docs --disable-install-bins  && \
+        ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix="${PREFIX}" --enable-vp8 --enable-vp9 --enable-vp9-highbitdepth --enable-pic --enable-shared \
+        --disable-debug --disable-examples --disable-docs --disable-install-bins && \
         make && \
         make install && \
         rm -rf ${DIR}
@@ -184,9 +184,9 @@ RUN \
         DIR=/tmp/vebp && \
         mkdir -p ${DIR} && \
         cd ${DIR} && \
-        curl -sL https://storage.googleapis.com/downloads.webmproject.org/releases/webp/libwebp-${WEBP_VERSION}.tar.gz | \
+        curl -f -sL https://storage.googleapis.com/downloads.webmproject.org/releases/webp/libwebp-${WEBP_VERSION}.tar.gz | \
         tar -zx --strip-components=1 && \
-        ./configure --prefix="${PREFIX}" --enable-shared  && \
+        ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix="${PREFIX}" --enable-shared && \
         make && \
         make install && \
         rm -rf ${DIR}
@@ -195,9 +195,9 @@ RUN \
         DIR=/tmp/lame && \
         mkdir -p ${DIR} && \
         cd ${DIR} && \
-        curl -sL https://versaweb.dl.sourceforge.net/project/lame/lame/$(echo ${LAME_VERSION} | sed -e 's/[^0-9]*\([0-9]*\)[.]\([0-9]*\)[.]\([0-9]*\)\([0-9A-Za-z-]*\)/\1.\2/')/lame-${LAME_VERSION}.tar.gz | \
+        curl -f -sL https://versaweb.dl.sourceforge.net/project/lame/lame/$(echo ${LAME_VERSION} | sed -e 's/[^0-9]*\([0-9]*\)[.]\([0-9]*\)[.]\([0-9]*\)\([0-9A-Za-z-]*\)/\1.\2/')/lame-${LAME_VERSION}.tar.gz | \
         tar -zx --strip-components=1 && \
-        ./configure --prefix="${PREFIX}" --bindir="${PREFIX}/bin" --enable-shared --enable-nasm --disable-frontend && \
+        ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix="${PREFIX}" --bindir="${PREFIX}/bin" --enable-shared --enable-nasm --disable-frontend && \
         make && \
         make install && \
         rm -rf ${DIR}
@@ -206,23 +206,23 @@ RUN \
         DIR=/tmp/xvid && \
         mkdir -p ${DIR} && \
         cd ${DIR} && \
-        curl -sLO http://downloads.xvid.org/downloads/xvidcore-${XVID_VERSION}.tar.gz && \
+        curl -f -sLO http://downloads.xvid.org/downloads/xvidcore-${XVID_VERSION}.tar.gz && \
         echo ${XVID_SHA256SUM} | sha256sum --check && \
         tar -zx -f xvidcore-${XVID_VERSION}.tar.gz && \
         cd xvidcore/build/generic && \
-        ./configure --prefix="${PREFIX}" --bindir="${PREFIX}/bin" && \
+        ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix="${PREFIX}" --bindir="${PREFIX}/bin" && \
         make && \
         make install && \
-        rm -rf ${DIR}
+        rm -rf ${DIR} && rm xvidcore-${XVID_VERSION}.tar.gz
 ### fdk-aac https://github.com/mstorsjo/fdk-aac
 RUN \
         DIR=/tmp/fdk-aac && \
         mkdir -p ${DIR} && \
         cd ${DIR} && \
-        curl -sL https://github.com/mstorsjo/fdk-aac/archive/v${FDKAAC_VERSION}.tar.gz | \
+        curl -f -sL https://github.com/mstorsjo/fdk-aac/archive/v${FDKAAC_VERSION}.tar.gz | \
         tar -zx --strip-components=1 && \
         autoreconf -fiv && \
-        ./configure --prefix="${PREFIX}" --enable-shared --datadir="${DIR}" && \
+        ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix="${PREFIX}" --enable-shared --datadir="${DIR}" && \
         make && \
         make install && \
         rm -rf ${DIR}
@@ -231,62 +231,62 @@ RUN \
         DIR=/tmp/openjpeg && \
         mkdir -p ${DIR} && \
         cd ${DIR} && \
-        curl -sL https://github.com/uclouvain/openjpeg/archive/v${OPENJPEG_VERSION}.tar.gz | \
+        curl -f -sL https://github.com/uclouvain/openjpeg/archive/v${OPENJPEG_VERSION}.tar.gz | \
         tar -zx --strip-components=1 && \
         cmake -DBUILD_THIRDPARTY:BOOL=ON -DCMAKE_INSTALL_PREFIX="${PREFIX}" . && \
         make && \
         make install && \
         rm -rf ${DIR}
 ## freetype https://www.freetype.org/
-RUN  \
+RUN \
         DIR=/tmp/freetype && \
         mkdir -p ${DIR} && \
         cd ${DIR} && \
-        curl -sLO https://download.savannah.gnu.org/releases/freetype/freetype-${FREETYPE_VERSION}.tar.gz && \
+        curl -f -sLO https://download.savannah.gnu.org/releases/freetype/freetype-${FREETYPE_VERSION}.tar.gz && \
         echo ${FREETYPE_SHA256SUM} | sha256sum --check && \
         tar -zx --strip-components=1 -f freetype-${FREETYPE_VERSION}.tar.gz && \
-        ./configure --prefix="${PREFIX}" --disable-static --enable-shared && \
+        ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix="${PREFIX}" --disable-static --enable-shared && \
         make && \
         make install && \
-        rm -rf ${DIR}
+        rm -rf ${DIR} && rm freetype-${FREETYPE_VERSION}.tar.gz
 ## libvstab https://github.com/georgmartius/vid.stab
-RUN  \
+RUN \
         DIR=/tmp/vid.stab && \
         mkdir -p ${DIR} && \
         cd ${DIR} && \
-        curl -sLO https://github.com/georgmartius/vid.stab/archive/v${LIBVIDSTAB_VERSION}.tar.gz && \
-        echo ${LIBVIDSTAB_SHA256SUM} | sha256sum --check &&  \
+        curl -f -sLO https://github.com/georgmartius/vid.stab/archive/v${LIBVIDSTAB_VERSION}.tar.gz && \
+        echo ${LIBVIDSTAB_SHA256SUM} | sha256sum --check && \
         tar -zx --strip-components=1 -f v${LIBVIDSTAB_VERSION}.tar.gz && \
         cmake -DCMAKE_INSTALL_PREFIX="${PREFIX}" . && \
         make && \
         make install && \
-        rm -rf ${DIR}
+        rm -rf ${DIR} && rm v${LIBVIDSTAB_VERSION}.tar.gz
 ## fridibi https://www.fribidi.org/
-RUN  \
+RUN \
         DIR=/tmp/fribidi && \
         mkdir -p ${DIR} && \
         cd ${DIR} && \
-        curl -sLO https://github.com/fribidi/fribidi/archive/${FRIBIDI_VERSION}.tar.gz && \
+        curl -f -sLO https://github.com/fribidi/fribidi/archive/${FRIBIDI_VERSION}.tar.gz && \
         echo ${FRIBIDI_SHA256SUM} | sha256sum --check && \
         tar -zx --strip-components=1 -f ${FRIBIDI_VERSION}.tar.gz && \
         sed -i 's/^SUBDIRS =.*/SUBDIRS=gen.tab charset lib bin/' Makefile.am && \
         ./bootstrap --no-config --auto && \
-        ./configure --prefix="${PREFIX}" --disable-static --enable-shared && \
+        ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix="${PREFIX}" --disable-static --enable-shared && \
         make -j1 && \
         make install && \
-        rm -rf ${DIR}
+        rm -rf ${DIR} && rm ${FRIBIDI_VERSION}.tar.gz
 ## kvazaar https://github.com/ultravideo/kvazaar
 RUN \
         DIR=/tmp/kvazaar && \
         mkdir -p ${DIR} && \
         cd ${DIR} && \
-        curl -sLO https://github.com/ultravideo/kvazaar/archive/v${KVAZAAR_VERSION}.tar.gz && \
+        curl -f -sLO https://github.com/ultravideo/kvazaar/archive/v${KVAZAAR_VERSION}.tar.gz && \
         tar -zx --strip-components=1 -f v${KVAZAAR_VERSION}.tar.gz && \
         ./autogen.sh && \
-        ./configure --prefix="${PREFIX}" --disable-static --enable-shared && \
+        ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix="${PREFIX}" --disable-static --enable-shared && \
         make && \
         make install && \
-        rm -rf ${DIR}
+        rm -rf ${DIR} && rm v${KVAZAAR_VERSION}.tar.gz
 
 RUN \
         DIR=/tmp/aom && \
@@ -305,96 +305,96 @@ RUN \
         DIR=/tmp/xorg-macros && \
         mkdir -p ${DIR} && \
         cd ${DIR} && \
-        curl -sLO https://www.x.org/archive//individual/util/util-macros-${XORG_MACROS_VERSION}.tar.gz && \
+        curl -f -sLO https://www.x.org/archive//individual/util/util-macros-${XORG_MACROS_VERSION}.tar.gz && \
         tar -zx --strip-components=1 -f util-macros-${XORG_MACROS_VERSION}.tar.gz && \
-        ./configure --srcdir=${DIR} --prefix="${PREFIX}" && \
+        ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --srcdir=${DIR} --prefix="${PREFIX}" && \
         make && \
         make install && \
-        rm -rf ${DIR}
+        rm -rf ${DIR} && rm util-macros-${XORG_MACROS_VERSION}.tar.gz
 
 RUN \
         DIR=/tmp/xproto && \
         mkdir -p ${DIR} && \
         cd ${DIR} && \
-        curl -sLO https://www.x.org/archive/individual/proto/xproto-${XPROTO_VERSION}.tar.gz && \
+        curl -f -sLO https://www.x.org/archive/individual/proto/xproto-${XPROTO_VERSION}.tar.gz && \
         tar -zx --strip-components=1 -f xproto-${XPROTO_VERSION}.tar.gz && \
-        ./configure --srcdir=${DIR} --prefix="${PREFIX}" && \
+        ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --srcdir=${DIR} --prefix="${PREFIX}" && \
         make && \
         make install && \
-        rm -rf ${DIR}
+        rm -rf ${DIR} && rm xproto-${XPROTO_VERSION}.tar.gz
 
 RUN \
         DIR=/tmp/libXau && \
         mkdir -p ${DIR} && \
         cd ${DIR} && \
-        curl -sLO https://www.x.org/archive/individual/lib/libXau-${XAU_VERSION}.tar.gz && \
+        curl -f -sLO https://www.x.org/archive/individual/lib/libXau-${XAU_VERSION}.tar.gz && \
         tar -zx --strip-components=1 -f libXau-${XAU_VERSION}.tar.gz && \
-        ./configure --srcdir=${DIR} --prefix="${PREFIX}" && \
+        ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --srcdir=${DIR} --prefix="${PREFIX}" && \
         make && \
         make install && \
-        rm -rf ${DIR}
+        rm -rf ${DIR} && rm libXau-${XAU_VERSION}.tar.gz
 
 RUN \
         DIR=/tmp/libpthread-stubs && \
         mkdir -p ${DIR} && \
         cd ${DIR} && \
-        curl -sLO https://xcb.freedesktop.org/dist/libpthread-stubs-${LIBPTHREAD_STUBS_VERSION}.tar.gz && \
+        curl -f -sLO https://xcb.freedesktop.org/dist/libpthread-stubs-${LIBPTHREAD_STUBS_VERSION}.tar.gz && \
         tar -zx --strip-components=1 -f libpthread-stubs-${LIBPTHREAD_STUBS_VERSION}.tar.gz && \
-        ./configure --prefix="${PREFIX}" && \
+        ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix="${PREFIX}" && \
         make && \
         make install && \
-        rm -rf ${DIR}
+        rm -rf ${DIR} && rm libpthread-stubs-${LIBPTHREAD_STUBS_VERSION}.tar.gz
 
 RUN \
         DIR=/tmp/libxcb-proto && \
         mkdir -p ${DIR} && \
         cd ${DIR} && \
-        curl -sLO https://xcb.freedesktop.org/dist/xcb-proto-${XCBPROTO_VERSION}.tar.gz && \
+        curl -f -sLO https://xcb.freedesktop.org/dist/xcb-proto-${XCBPROTO_VERSION}.tar.gz && \
         tar -zx --strip-components=1 -f xcb-proto-${XCBPROTO_VERSION}.tar.gz && \
         ACLOCAL_PATH="${PREFIX}/share/aclocal" ./autogen.sh && \
-        ./configure --prefix="${PREFIX}" && \
+        ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix="${PREFIX}" && \
         make && \
         make install && \
-        rm -rf ${DIR}
+        rm -rf ${DIR} && rm xcb-proto-${XCBPROTO_VERSION}.tar.gz
 
 RUN \
         DIR=/tmp/libxcb && \
         mkdir -p ${DIR} && \
         cd ${DIR} && \
-        curl -sLO https://xcb.freedesktop.org/dist/libxcb-${LIBXCB_VERSION}.tar.gz && \
+        curl -f -sLO https://xcb.freedesktop.org/dist/libxcb-${LIBXCB_VERSION}.tar.gz && \
         tar -zx --strip-components=1 -f libxcb-${LIBXCB_VERSION}.tar.gz && \
         ACLOCAL_PATH="${PREFIX}/share/aclocal" ./autogen.sh && \
-        ./configure --prefix="${PREFIX}" --disable-static --enable-shared && \
+        ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix="${PREFIX}" --disable-static --enable-shared && \
         make && \
         make install && \
-        rm -rf ${DIR}
+        rm -rf ${DIR} && rm libxcb-${LIBXCB_VERSION}.tar.gz
 
 ## libzmq https://github.com/zeromq/libzmq/
 RUN \
         DIR=/tmp/libzmq && \
         mkdir -p ${DIR} && \
         cd ${DIR} && \
-        curl -sLO https://github.com/zeromq/libzmq/archive/v${LIBZMQ_VERSION}.tar.gz && \
+        curl -f -sLO https://github.com/zeromq/libzmq/archive/v${LIBZMQ_VERSION}.tar.gz && \
         echo ${LIBZMQ_SHA256SUM} | sha256sum --check && \
         tar -xz --strip-components=1 -f v${LIBZMQ_VERSION}.tar.gz && \
         ./autogen.sh && \
-        ./configure --prefix="${PREFIX}" && \
+        ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix="${PREFIX}" && \
         make && \
         make check && \
         make install && \
-        rm -rf ${DIR}
+        rm -rf ${DIR} && rm v${LIBZMQ_VERSION}.tar.gz
 
 ## ffmpeg https://ffmpeg.org/
-RUN  \
+RUN \
         DIR=/tmp/ffmpeg && mkdir -p ${DIR} && cd ${DIR} && \
-        curl -sLO https://ffmpeg.org/releases/ffmpeg-${FFMPEG_VERSION}.tar.bz2 && \
-        tar -jx --strip-components=1 -f ffmpeg-${FFMPEG_VERSION}.tar.bz2
+        curl -f -sLO https://ffmpeg.org/releases/ffmpeg-${FFMPEG_VERSION}.tar.bz2 && \
+        tar -jx --strip-components=1 -f ffmpeg-${FFMPEG_VERSION}.tar.bz2 && rm ffmpeg-${FFMPEG_VERSION}.tar.bz2
 
 
 
 RUN \
         DIR=/tmp/ffmpeg && mkdir -p ${DIR} && cd ${DIR} && \
-        ./configure \
+        ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
         --disable-debug \
         --disable-doc \
         --disable-ffplay \