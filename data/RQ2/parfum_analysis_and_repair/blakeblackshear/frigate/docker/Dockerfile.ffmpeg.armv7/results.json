{
  "startTime": 1674253708981,
  "endTime": 1674253712673,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 93,
        "lineEnd": 93,
        "columnStart": 8,
        "columnEnd": 129
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 104,
        "lineEnd": 104,
        "columnStart": 8,
        "columnEnd": 112
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 129,
        "lineEnd": 129,
        "columnStart": 8,
        "columnEnd": 85
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 141,
        "lineEnd": 141,
        "columnStart": 8,
        "columnEnd": 82
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 154,
        "lineEnd": 154,
        "columnStart": 8,
        "columnEnd": 94
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 166,
        "lineEnd": 166,
        "columnStart": 8,
        "columnEnd": 94
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 169,
        "lineEnd": 169,
        "columnStart": 8,
        "columnEnd": 119
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 170,
        "lineEnd": 170,
        "columnStart": 8,
        "columnEnd": 115
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 180,
        "lineEnd": 180,
        "columnStart": 8,
        "columnEnd": 86
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 192,
        "lineEnd": 192,
        "columnStart": 8,
        "columnEnd": 118
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 203,
        "lineEnd": 203,
        "columnStart": 8,
        "columnEnd": 203
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 214,
        "lineEnd": 214,
        "columnStart": 8,
        "columnEnd": 85
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 227,
        "lineEnd": 227,
        "columnStart": 8,
        "columnEnd": 86
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 239,
        "lineEnd": 239,
        "columnStart": 8,
        "columnEnd": 90
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 251,
        "lineEnd": 251,
        "columnStart": 8,
        "columnEnd": 105
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 263,
        "lineEnd": 263,
        "columnStart": 8,
        "columnEnd": 96
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 275,
        "lineEnd": 275,
        "columnStart": 8,
        "columnEnd": 86
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 290,
        "lineEnd": 290,
        "columnStart": 8,
        "columnEnd": 90
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 315,
        "lineEnd": 315,
        "columnStart": 8,
        "columnEnd": 102
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 326,
        "lineEnd": 326,
        "columnStart": 8,
        "columnEnd": 92
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 328,
        "lineEnd": 328,
        "columnStart": 8,
        "columnEnd": 119
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 329,
        "lineEnd": 329,
        "columnStart": 8,
        "columnEnd": 115
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 339,
        "lineEnd": 339,
        "columnStart": 8,
        "columnEnd": 87
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 350,
        "lineEnd": 350,
        "columnStart": 8,
        "columnEnd": 102
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 361,
        "lineEnd": 361,
        "columnStart": 8,
        "columnEnd": 87
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 373,
        "lineEnd": 373,
        "columnStart": 8,
        "columnEnd": 82
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 386,
        "lineEnd": 386,
        "columnStart": 8,
        "columnEnd": 84
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 407,
        "lineEnd": 407,
        "columnStart": 8,
        "columnEnd": 78
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 169,
        "lineEnd": 169,
        "columnStart": 8,
        "columnEnd": 119
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 170,
        "lineEnd": 170,
        "columnStart": 8,
        "columnEnd": 115
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 328,
        "lineEnd": 328,
        "columnStart": 8,
        "columnEnd": 119
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 329,
        "lineEnd": 329,
        "columnStart": 8,
        "columnEnd": 115
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 95,
        "lineEnd": 95,
        "columnStart": 8,
        "columnEnd": 56
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 106,
        "lineEnd": 106,
        "columnStart": 8,
        "columnEnd": 83
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 132,
        "lineEnd": 132,
        "columnStart": 8,
        "columnEnd": 56
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 145,
        "lineEnd": 145,
        "columnStart": 8,
        "columnEnd": 56
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 157,
        "lineEnd": 157,
        "columnStart": 8,
        "columnEnd": 79
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 171,
        "lineEnd": 171,
        "columnStart": 8,
        "columnEnd": 79
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 182,
        "lineEnd": 183,
        "columnStart": 8,
        "columnEnd": 80
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 194,
        "lineEnd": 194,
        "columnStart": 8,
        "columnEnd": 56
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 205,
        "lineEnd": 205,
        "columnStart": 8,
        "columnEnd": 114
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 218,
        "lineEnd": 218,
        "columnStart": 8,
        "columnEnd": 65
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 230,
        "lineEnd": 230,
        "columnStart": 8,
        "columnEnd": 75
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 254,
        "lineEnd": 254,
        "columnStart": 8,
        "columnEnd": 73
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 280,
        "lineEnd": 280,
        "columnStart": 8,
        "columnEnd": 73
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 293,
        "lineEnd": 293,
        "columnStart": 8,
        "columnEnd": 73
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 317,
        "lineEnd": 317,
        "columnStart": 8,
        "columnEnd": 56
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 330,
        "lineEnd": 330,
        "columnStart": 8,
        "columnEnd": 56
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 341,
        "lineEnd": 341,
        "columnStart": 8,
        "columnEnd": 56
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 352,
        "lineEnd": 352,
        "columnStart": 8,
        "columnEnd": 40
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 364,
        "lineEnd": 364,
        "columnStart": 8,
        "columnEnd": 40
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 376,
        "lineEnd": 376,
        "columnStart": 8,
        "columnEnd": 73
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 389,
        "lineEnd": 389,
        "columnStart": 8,
        "columnEnd": 40
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 412,
        "lineEnd": 452,
        "columnStart": 8,
        "columnEnd": 41
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 131,
        "lineEnd": 131,
        "columnStart": 8,
        "columnEnd": 68
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 143,
        "lineEnd": 143,
        "columnStart": 8,
        "columnEnd": 67
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 156,
        "lineEnd": 156,
        "columnStart": 8,
        "columnEnd": 74
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 168,
        "lineEnd": 168,
        "columnStart": 8,
        "columnEnd": 74
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 216,
        "lineEnd": 216,
        "columnStart": 8,
        "columnEnd": 50
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 253,
        "lineEnd": 253,
        "columnStart": 8,
        "columnEnd": 75
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 265,
        "lineEnd": 265,
        "columnStart": 8,
        "columnEnd": 69
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 277,
        "lineEnd": 277,
        "columnStart": 8,
        "columnEnd": 65
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 291,
        "lineEnd": 291,
        "columnStart": 8,
        "columnEnd": 66
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 316,
        "lineEnd": 316,
        "columnStart": 8,
        "columnEnd": 81
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 327,
        "lineEnd": 327,
        "columnStart": 8,
        "columnEnd": 71
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 340,
        "lineEnd": 340,
        "columnStart": 8,
        "columnEnd": 68
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 351,
        "lineEnd": 351,
        "columnStart": 8,
        "columnEnd": 91
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 362,
        "lineEnd": 362,
        "columnStart": 8,
        "columnEnd": 76
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 374,
        "lineEnd": 374,
        "columnStart": 8,
        "columnEnd": 71
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 387,
        "lineEnd": 387,
        "columnStart": 8,
        "columnEnd": 65
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 408,
        "lineEnd": 408,
        "columnStart": 8,
        "columnEnd": 72
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 8,
        "columnEnd": 82
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 87,
        "lineEnd": 87,
        "columnStart": 8,
        "columnEnd": 64
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 482,
        "lineEnd": 482,
        "columnStart": 8,
        "columnEnd": 74
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# inspired by:\n# https://github.com/collelog/ffmpeg/blob/master/4.3.1-alpine-rpi4-arm64v8.Dockerfile\n# https://github.com/mmastrac/ffmpeg-omx-rpi-docker/blob/master/Dockerfile\n# https://github.com/jrottenberg/ffmpeg/pull/158/files\n# https://github.com/jrottenberg/ffmpeg/pull/239\nFROM        ubuntu:20.04 AS base\n\nWORKDIR     /tmp/workdir\n\nENV     DEBIAN_FRONTEND=noninteractive\nRUN apt-get -yqq update && \\\n        apt-get install -yq --no-install-recommends ca-certificates expat libgomp1 && \\\n        apt-get autoremove -y && \\\n        apt-get clean -y && rm -rf /var/lib/apt/lists/*;\n\nFROM base as build\n\nENV     FFMPEG_VERSION=4.3.2 \\\n        AOM_VERSION=v1.0.0 \\\n        FDKAAC_VERSION=0.1.5 \\\n        FREETYPE_VERSION=2.5.5 \\\n        FRIBIDI_VERSION=0.19.7 \\\n        KVAZAAR_VERSION=1.2.0 \\\n        LAME_VERSION=3.100 \\\n        LIBPTHREAD_STUBS_VERSION=0.4 \\\n        LIBVIDSTAB_VERSION=1.1.0 \\\n        LIBXCB_VERSION=1.13.1 \\\n        XCBPROTO_VERSION=1.13 \\\n        OGG_VERSION=1.3.2 \\\n        OPENCOREAMR_VERSION=0.1.5 \\\n        OPUS_VERSION=1.2 \\\n        OPENJPEG_VERSION=2.1.2 \\\n        THEORA_VERSION=1.1.1 \\\n        VORBIS_VERSION=1.3.5 \\\n        VPX_VERSION=1.8.0 \\\n        WEBP_VERSION=1.0.2 \\\n        X264_VERSION=20170226-2245-stable \\\n        X265_VERSION=3.1.1 \\\n        XAU_VERSION=1.0.9 \\\n        XORG_MACROS_VERSION=1.19.2 \\\n        XPROTO_VERSION=7.0.31 \\\n        XVID_VERSION=1.3.4 \\\n        LIBZMQ_VERSION=4.3.3 \\\n        SRC=/usr/local\n\nARG         FREETYPE_SHA256SUM=\"5d03dd76c2171a7601e9ce10551d52d4471cf92cd205948e60289251daddffa8 freetype-2.5.5.tar.gz\"\nARG         FRIBIDI_SHA256SUM=\"3fc96fa9473bd31dcb5500bdf1aa78b337ba13eb8c301e7c28923fea982453a8 0.19.7.tar.gz\"\nARG         LIBVIDSTAB_SHA256SUM=\"14d2a053e56edad4f397be0cb3ef8eb1ec3150404ce99a426c4eb641861dc0bb v1.1.0.tar.gz\"\nARG         OGG_SHA256SUM=\"e19ee34711d7af328cb26287f4137e70630e7261b17cbe3cd41011d73a654692 libogg-1.3.2.tar.gz\"\nARG         OPUS_SHA256SUM=\"77db45a87b51578fbc49555ef1b10926179861d854eb2613207dc79d9ec0a9a9 opus-1.2.tar.gz\"\nARG         THEORA_SHA256SUM=\"40952956c47811928d1e7922cda3bc1f427eb75680c3c37249c91e949054916b libtheora-1.1.1.tar.gz\"\nARG         VORBIS_SHA256SUM=\"6efbcecdd3e5dfbf090341b485da9d176eb250d893e3eb378c428a2db38301ce libvorbis-1.3.5.tar.gz\"\nARG         XVID_SHA256SUM=\"4e9fd62728885855bc5007fe1be58df42e5e274497591fec37249e1052ae316f xvidcore-1.3.4.tar.gz\"\n\n\nARG         LD_LIBRARY_PATH=/opt/ffmpeg/lib\nARG         MAKEFLAGS=\"-j2\"\nARG         PKG_CONFIG_PATH=\"/opt/ffmpeg/share/pkgconfig:/opt/ffmpeg/lib/pkgconfig:/opt/ffmpeg/lib64/pkgconfig:/opt/vc/lib/pkgconfig\"\nARG         PREFIX=/opt/ffmpeg\nARG         LD_LIBRARY_PATH=\"/opt/ffmpeg/lib:/opt/ffmpeg/lib64:/usr/lib64:/usr/lib:/lib64:/lib:/opt/vc/lib\"\n\n\nRUN buildDeps=\"autoconf \\\n        automake \\\n        cmake \\\n        curl \\\n        bzip2 \\\n        libexpat1-dev \\\n        g++ \\\n        gcc \\\n        git \\\n        gperf \\\n        libtool \\\n        make \\\n        nasm \\\n        perl \\\n        pkg-config \\\n        python \\\n        sudo \\\n        libssl-dev \\\n        yasm \\\n        linux-headers-raspi2 \\\n        libomxil-bellagio-dev \\\n        libx265-dev \\\n        libaom-dev \\\n        zlib1g-dev\" && \\\n        apt-get -yqq update && \\\n        apt-get install -yq --no-install-recommends ${buildDeps} && rm -rf /var/lib/apt/lists/*;\n## opencore-amr https://sourceforge.net/projects/opencore-amr/\nRUN \\\n        DIR=/tmp/opencore-amr && \\\n        mkdir -p ${DIR} && \\\n        cd ${DIR} && \\\n        curl -f -sL https://versaweb.dl.sourceforge.net/project/opencore-amr/opencore-amr/opencore-amr-${OPENCOREAMR_VERSION}.tar.gz | \\\n        tar -zx --strip-components=1 && \\\n        ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"${PREFIX}\" --enable-shared && \\\n        make -j $(nproc) && \\\n        make -j $(nproc) install && \\\n        rm -rf ${DIR}\n## x264 http://www.videolan.org/developers/x264.html\nRUN \\\n        DIR=/tmp/x264 && \\\n        mkdir -p ${DIR} && \\\n        cd ${DIR} && \\\n        curl -f -sL https://download.videolan.org/pub/videolan/x264/snapshots/x264-snapshot-${X264_VERSION}.tar.bz2 | \\\n        tar -jx --strip-components=1 && \\\n        ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"${PREFIX}\" --enable-shared --enable-pic --disable-cli && \\\n        make -j $(nproc) && \\\n        make -j $(nproc) install && \\\n        rm -rf ${DIR}\n# ### x265 http://x265.org/\n# RUN \\\n#         DIR=/tmp/x265 && \\\n#         mkdir -p ${DIR} && \\\n#         cd ${DIR} && \\\n#         curl -sL https://download.videolan.org/pub/videolan/x265/x265_${X265_VERSION}.tar.gz  | \\\n#         tar -zx && \\\n#         cd x265_${X265_VERSION}/build/linux && \\\n#         sed -i \"/-DEXTRA_LIB/ s/$/ -DCMAKE_INSTALL_PREFIX=\\${PREFIX}/\" multilib.sh && \\\n#         sed -i \"/^cmake/ s/$/ -DENABLE_CLI=OFF/\" multilib.sh && \\\n#         # export CXXFLAGS=\"${CXXFLAGS} -fPIC\" && \\\n#         ./multilib.sh && \\\n#         make -C 8bit install && \\\n#         rm -rf ${DIR}\n### libogg https://www.xiph.org/ogg/\nRUN \\\n        DIR=/tmp/ogg && \\\n        mkdir -p ${DIR} && \\\n        cd ${DIR} && \\\n        curl -f -sLO http://downloads.xiph.org/releases/ogg/libogg-${OGG_VERSION}.tar.gz && \\\n        echo ${OGG_SHA256SUM} | sha256sum --check && \\\n        tar -zx --strip-components=1 -f libogg-${OGG_VERSION}.tar.gz && \\\n        ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"${PREFIX}\" --enable-shared && \\\n        make -j $(nproc) && \\\n        make -j $(nproc) install && \\\n        rm -rf ${DIR} && rm libogg-${OGG_VERSION}.tar.gz\n### libopus https://www.opus-codec.org/\nRUN \\\n        DIR=/tmp/opus && \\\n        mkdir -p ${DIR} && \\\n        cd ${DIR} && \\\n        curl -f -sLO https://archive.mozilla.org/pub/opus/opus-${OPUS_VERSION}.tar.gz && \\\n        echo ${OPUS_SHA256SUM} | sha256sum --check && \\\n        tar -zx --strip-components=1 -f opus-${OPUS_VERSION}.tar.gz && \\\n        autoreconf -fiv && \\\n        ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"${PREFIX}\" --enable-shared && \\\n        make -j $(nproc) && \\\n        make -j $(nproc) install && \\\n        rm -rf ${DIR} && rm opus-${OPUS_VERSION}.tar.gz\n### libvorbis https://xiph.org/vorbis/\nRUN \\\n        DIR=/tmp/vorbis && \\\n        mkdir -p ${DIR} && \\\n        cd ${DIR} && \\\n        curl -f -sLO http://downloads.xiph.org/releases/vorbis/libvorbis-${VORBIS_VERSION}.tar.gz && \\\n        echo ${VORBIS_SHA256SUM} | sha256sum --check && \\\n        tar -zx --strip-components=1 -f libvorbis-${VORBIS_VERSION}.tar.gz && \\\n        ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"${PREFIX}\" --with-ogg=\"${PREFIX}\" --enable-shared && \\\n        make -j $(nproc) && \\\n        make -j $(nproc) install && \\\n        rm -rf ${DIR} && rm libvorbis-${VORBIS_VERSION}.tar.gz\n### libtheora http://www.theora.org/\nRUN \\\n        DIR=/tmp/theora && \\\n        mkdir -p ${DIR} && \\\n        cd ${DIR} && \\\n        curl -f -sLO http://downloads.xiph.org/releases/theora/libtheora-${THEORA_VERSION}.tar.gz && \\\n        echo ${THEORA_SHA256SUM} | sha256sum --check && \\\n        tar -zx --strip-components=1 -f libtheora-${THEORA_VERSION}.tar.gz && \\\n        curl -f -sL 'https://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.guess;hb=HEAD' -o config.guess && \\\n        curl -f -sL 'https://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.sub;hb=HEAD' -o config.sub && \\\n        ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"${PREFIX}\" --with-ogg=\"${PREFIX}\" --enable-shared && \\\n        make -j $(nproc) && \\\n        make -j $(nproc) install && \\\n        rm -rf ${DIR} && rm libtheora-${THEORA_VERSION}.tar.gz\n### libvpx https://www.webmproject.org/code/\nRUN \\\n        DIR=/tmp/vpx && \\\n        mkdir -p ${DIR} && \\\n        cd ${DIR} && \\\n        curl -f -sL https://codeload.github.com/webmproject/libvpx/tar.gz/v${VPX_VERSION} | \\\n        tar -zx --strip-components=1 && \\\n        ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"${PREFIX}\" --enable-vp8 --enable-vp9 --enable-vp9-highbitdepth --enable-pic --enable-shared \\\n        --disable-debug --disable-examples --disable-docs --disable-install-bins && \\\n        make -j $(nproc) && \\\n        make -j $(nproc) install && \\\n        rm -rf ${DIR}\n### libwebp https://developers.google.com/speed/webp/\nRUN \\\n        DIR=/tmp/vebp && \\\n        mkdir -p ${DIR} && \\\n        cd ${DIR} && \\\n        curl -f -sL https://storage.googleapis.com/downloads.webmproject.org/releases/webp/libwebp-${WEBP_VERSION}.tar.gz | \\\n        tar -zx --strip-components=1 && \\\n        ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"${PREFIX}\" --enable-shared && \\\n        make -j $(nproc) && \\\n        make -j $(nproc) install && \\\n        rm -rf ${DIR}\n### libmp3lame http://lame.sourceforge.net/\nRUN \\\n        DIR=/tmp/lame && \\\n        mkdir -p ${DIR} && \\\n        cd ${DIR} && \\\n        curl -f -sL https://versaweb.dl.sourceforge.net/project/lame/lame/$(echo ${LAME_VERSION} | sed -e 's/[^0-9]*\\([0-9]*\\)[.]\\([0-9]*\\)[.]\\([0-9]*\\)\\([0-9A-Za-z-]*\\)/\\1.\\2/')/lame-${LAME_VERSION}.tar.gz | \\\n        tar -zx --strip-components=1 && \\\n        ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"${PREFIX}\" --bindir=\"${PREFIX}/bin\" --enable-shared --enable-nasm --disable-frontend && \\\n        make -j $(nproc) && \\\n        make -j $(nproc) install && \\\n        rm -rf ${DIR}\n### xvid https://www.xvid.com/\nRUN \\\n        DIR=/tmp/xvid && \\\n        mkdir -p ${DIR} && \\\n        cd ${DIR} && \\\n        curl -f -sLO http://downloads.xvid.org/downloads/xvidcore-${XVID_VERSION}.tar.gz && \\\n        echo ${XVID_SHA256SUM} | sha256sum --check && \\\n        tar -zx -f xvidcore-${XVID_VERSION}.tar.gz && \\\n        cd xvidcore/build/generic && \\\n        ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"${PREFIX}\" --bindir=\"${PREFIX}/bin\" && \\\n        make -j $(nproc) && \\\n        make -j $(nproc) install && \\\n        rm -rf ${DIR} && rm xvidcore-${XVID_VERSION}.tar.gz\n### fdk-aac https://github.com/mstorsjo/fdk-aac\nRUN \\\n        DIR=/tmp/fdk-aac && \\\n        mkdir -p ${DIR} && \\\n        cd ${DIR} && \\\n        curl -f -sL https://github.com/mstorsjo/fdk-aac/archive/v${FDKAAC_VERSION}.tar.gz | \\\n        tar -zx --strip-components=1 && \\\n        autoreconf -fiv && \\\n        ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"${PREFIX}\" --enable-shared --datadir=\"${DIR}\" && \\\n        make -j $(nproc) && \\\n        make -j $(nproc) install && \\\n        rm -rf ${DIR}\n## openjpeg https://github.com/uclouvain/openjpeg\nRUN \\\n        DIR=/tmp/openjpeg && \\\n        mkdir -p ${DIR} && \\\n        cd ${DIR} && \\\n        curl -f -sL https://github.com/uclouvain/openjpeg/archive/v${OPENJPEG_VERSION}.tar.gz | \\\n        tar -zx --strip-components=1 && \\\n        export CFLAGS=\"${CFLAGS} -DPNG_ARM_NEON_OPT=0\" && \\\n        cmake -DBUILD_THIRDPARTY:BOOL=ON -DCMAKE_INSTALL_PREFIX=\"${PREFIX}\" . && \\\n        make -j $(nproc) && \\\n        make -j $(nproc) install && \\\n        rm -rf ${DIR}\n## freetype https://www.freetype.org/\nRUN \\\n        DIR=/tmp/freetype && \\\n        mkdir -p ${DIR} && \\\n        cd ${DIR} && \\\n        curl -f -sLO https://download.savannah.gnu.org/releases/freetype/freetype-${FREETYPE_VERSION}.tar.gz && \\\n        echo ${FREETYPE_SHA256SUM} | sha256sum --check && \\\n        tar -zx --strip-components=1 -f freetype-${FREETYPE_VERSION}.tar.gz && \\\n        ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"${PREFIX}\" --disable-static --enable-shared && \\\n        make -j $(nproc) && \\\n        make -j $(nproc) install && \\\n        rm -rf ${DIR} && rm freetype-${FREETYPE_VERSION}.tar.gz\n## libvstab https://github.com/georgmartius/vid.stab\nRUN \\\n        DIR=/tmp/vid.stab && \\\n        mkdir -p ${DIR} && \\\n        cd ${DIR} && \\\n        curl -f -sLO https://github.com/georgmartius/vid.stab/archive/v${LIBVIDSTAB_VERSION}.tar.gz && \\\n        echo ${LIBVIDSTAB_SHA256SUM} | sha256sum --check && \\\n        tar -zx --strip-components=1 -f v${LIBVIDSTAB_VERSION}.tar.gz && \\\n        cmake -DCMAKE_INSTALL_PREFIX=\"${PREFIX}\" . && \\\n        make -j $(nproc) && \\\n        make -j $(nproc) install && \\\n        rm -rf ${DIR} && rm v${LIBVIDSTAB_VERSION}.tar.gz\n## fridibi https://www.fribidi.org/\nRUN \\\n        DIR=/tmp/fribidi && \\\n        mkdir -p ${DIR} && \\\n        cd ${DIR} && \\\n        curl -f -sLO https://github.com/fribidi/fribidi/archive/${FRIBIDI_VERSION}.tar.gz && \\\n        echo ${FRIBIDI_SHA256SUM} | sha256sum --check && \\\n        tar -zx --strip-components=1 -f ${FRIBIDI_VERSION}.tar.gz && \\\n        sed -i 's/^SUBDIRS =.*/SUBDIRS=gen.tab charset lib bin/' Makefile.am && \\\n        ./bootstrap --no-config --auto && \\\n        ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"${PREFIX}\" --disable-static --enable-shared && \\\n        make -j1 && \\\n        make -j $(nproc) install && \\\n        rm -rf ${DIR} && rm ${FRIBIDI_VERSION}.tar.gz\n\n## kvazaar https://github.com/ultravideo/kvazaar\nRUN \\\n        DIR=/tmp/kvazaar && \\\n        mkdir -p ${DIR} && \\\n        cd ${DIR} && \\\n        curl -f -sLO https://github.com/ultravideo/kvazaar/archive/v${KVAZAAR_VERSION}.tar.gz && \\\n        tar -zx --strip-components=1 -f v${KVAZAAR_VERSION}.tar.gz && \\\n        ./autogen.sh && \\\n        ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"${PREFIX}\" --disable-static --enable-shared && \\\n        make -j $(nproc) && \\\n        make -j $(nproc) install && \\\n        rm -rf ${DIR} && rm v${KVAZAAR_VERSION}.tar.gz\n\n# RUN \\\n#         DIR=/tmp/aom && \\\n#         git clone --branch ${AOM_VERSION} --depth 1 https://aomedia.googlesource.com/aom ${DIR} ; \\\n#         cd ${DIR} ; \\\n#         rm -rf CMakeCache.txt CMakeFiles ; \\\n#         mkdir -p ./aom_build ; \\\n#         cd ./aom_build ; \\\n#         cmake -DCMAKE_INSTALL_PREFIX=\"${PREFIX}\" -DBUILD_SHARED_LIBS=1 ..; \\\n#         make ; \\\n#         make install ; \\\n#         rm -rf ${DIR}\n\n## libxcb (and supporting libraries) for screen capture https://xcb.freedesktop.org/\nRUN \\\n        DIR=/tmp/xorg-macros && \\\n        mkdir -p ${DIR} && \\\n        cd ${DIR} && \\\n        curl -f -sLO https://www.x.org/archive//individual/util/util-macros-${XORG_MACROS_VERSION}.tar.gz && \\\n        tar -zx --strip-components=1 -f util-macros-${XORG_MACROS_VERSION}.tar.gz && \\\n        ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --srcdir=${DIR} --prefix=\"${PREFIX}\" && \\\n        make -j $(nproc) && \\\n        make -j $(nproc) install && \\\n        rm -rf ${DIR} && rm util-macros-${XORG_MACROS_VERSION}.tar.gz\n\nRUN \\\n        DIR=/tmp/xproto && \\\n        mkdir -p ${DIR} && \\\n        cd ${DIR} && \\\n        curl -f -sLO https://www.x.org/archive/individual/proto/xproto-${XPROTO_VERSION}.tar.gz && \\\n        tar -zx --strip-components=1 -f xproto-${XPROTO_VERSION}.tar.gz && \\\n        curl -f -sL 'https://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.guess;hb=HEAD' -o config.guess && \\\n        curl -f -sL 'https://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.sub;hb=HEAD' -o config.sub && \\\n        ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --srcdir=${DIR} --prefix=\"${PREFIX}\" && \\\n        make -j $(nproc) && \\\n        make -j $(nproc) install && \\\n        rm -rf ${DIR} && rm xproto-${XPROTO_VERSION}.tar.gz\n\nRUN \\\n        DIR=/tmp/libXau && \\\n        mkdir -p ${DIR} && \\\n        cd ${DIR} && \\\n        curl -f -sLO https://www.x.org/archive/individual/lib/libXau-${XAU_VERSION}.tar.gz && \\\n        tar -zx --strip-components=1 -f libXau-${XAU_VERSION}.tar.gz && \\\n        ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --srcdir=${DIR} --prefix=\"${PREFIX}\" && \\\n        make -j $(nproc) && \\\n        make -j $(nproc) install && \\\n        rm -rf ${DIR} && rm libXau-${XAU_VERSION}.tar.gz\n\nRUN \\\n        DIR=/tmp/libpthread-stubs && \\\n        mkdir -p ${DIR} && \\\n        cd ${DIR} && \\\n        curl -f -sLO https://xcb.freedesktop.org/dist/libpthread-stubs-${LIBPTHREAD_STUBS_VERSION}.tar.gz && \\\n        tar -zx --strip-components=1 -f libpthread-stubs-${LIBPTHREAD_STUBS_VERSION}.tar.gz && \\\n        ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"${PREFIX}\" && \\\n        make -j $(nproc) && \\\n        make -j $(nproc) install && \\\n        rm -rf ${DIR} && rm libpthread-stubs-${LIBPTHREAD_STUBS_VERSION}.tar.gz\n\nRUN \\\n        DIR=/tmp/libxcb-proto && \\\n        mkdir -p ${DIR} && \\\n        cd ${DIR} && \\\n        curl -f -sLO https://xcb.freedesktop.org/dist/xcb-proto-${XCBPROTO_VERSION}.tar.gz && \\\n        tar -zx --strip-components=1 -f xcb-proto-${XCBPROTO_VERSION}.tar.gz && \\\n        ACLOCAL_PATH=\"${PREFIX}/share/aclocal\" ./autogen.sh && \\\n        ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"${PREFIX}\" && \\\n        make -j $(nproc) && \\\n        make -j $(nproc) install && \\\n        rm -rf ${DIR} && rm xcb-proto-${XCBPROTO_VERSION}.tar.gz\n\nRUN \\\n        DIR=/tmp/libxcb && \\\n        mkdir -p ${DIR} && \\\n        cd ${DIR} && \\\n        curl -f -sLO https://xcb.freedesktop.org/dist/libxcb-${LIBXCB_VERSION}.tar.gz && \\\n        tar -zx --strip-components=1 -f libxcb-${LIBXCB_VERSION}.tar.gz && \\\n        ACLOCAL_PATH=\"${PREFIX}/share/aclocal\" ./autogen.sh && \\\n        ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"${PREFIX}\" --disable-static --enable-shared && \\\n        make -j $(nproc) && \\\n        make -j $(nproc) install && \\\n        rm -rf ${DIR} && rm libxcb-${LIBXCB_VERSION}.tar.gz\n\n## libzmq https://github.com/zeromq/libzmq/\nRUN \\\n        DIR=/tmp/libzmq && \\\n        mkdir -p ${DIR} && \\\n        cd ${DIR} && \\\n        curl -f -sLO https://github.com/zeromq/libzmq/archive/v${LIBZMQ_VERSION}.tar.gz && \\\n        tar -xz --strip-components=1 -f v${LIBZMQ_VERSION}.tar.gz && \\\n        ./autogen.sh && \\\n        ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"${PREFIX}\" && \\\n        make -j $(nproc) && \\\n        # make check && \\\n        make -j $(nproc) install && \\\n        rm -rf ${DIR} && rm v${LIBZMQ_VERSION}.tar.gz\n\n## userland https://github.com/raspberrypi/userland\nRUN \\\n        DIR=/tmp/userland && \\\n        mkdir -p ${DIR} && \\\n        cd ${DIR} && \\\n        git clone --depth 1 https://github.com/raspberrypi/userland.git . && \\\n        ./buildme && \\\n        rm -rf ${DIR}\n\n## ffmpeg https://ffmpeg.org/\nRUN \\\n        DIR=/tmp/ffmpeg && mkdir -p ${DIR} && cd ${DIR} && \\\n        curl -f -sLO https://ffmpeg.org/releases/ffmpeg-${FFMPEG_VERSION}.tar.bz2 && \\\n        tar -jx --strip-components=1 -f ffmpeg-${FFMPEG_VERSION}.tar.bz2 && rm ffmpeg-${FFMPEG_VERSION}.tar.bz2\n\nRUN \\\n        DIR=/tmp/ffmpeg && mkdir -p ${DIR} && cd ${DIR} && \\\n        ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n        --disable-debug \\\n        --disable-doc \\\n        --disable-ffplay \\\n        --enable-shared \\\n        --enable-avresample \\\n        --enable-libopencore-amrnb \\\n        --enable-libopencore-amrwb \\\n        --enable-gpl \\\n        --enable-libfreetype \\\n        --enable-libvidstab \\\n        --enable-libmp3lame \\\n        --enable-libopus \\\n        --enable-libtheora \\\n        --enable-libvorbis \\\n        --enable-libvpx \\\n        --enable-libwebp \\\n        --enable-libxcb \\\n        --enable-libx265 \\\n        --enable-libxvid \\\n        --enable-libx264 \\\n        --enable-nonfree \\\n        --enable-openssl \\\n        --enable-libfdk_aac \\\n        --enable-postproc \\\n        --enable-small \\\n        --enable-version3 \\\n        --enable-libzmq \\\n        --extra-libs=-ldl \\\n        --prefix=\"${PREFIX}\" \\\n        --enable-libopenjpeg \\\n        --enable-libkvazaar \\\n        --enable-libaom \\\n        --extra-libs=-lpthread \\\n        --enable-omx \\\n        --enable-omx-rpi \\\n        --enable-mmal \\\n        --enable-v4l2_m2m \\\n        --enable-neon \\\n        --extra-cflags=\"-I${PREFIX}/include\" \\\n        --extra-ldflags=\"-L${PREFIX}/lib\" && \\\n        make -j $(nproc) && \\\n        make -j $(nproc) install && \\\n        make tools/zmqsend && cp tools/zmqsend ${PREFIX}/bin/ && \\\n        make distclean && \\\n        hash -r && \\\n        cd tools && \\\n        make qt-faststart && cp qt-faststart ${PREFIX}/bin/\n\n## cleanup\nRUN \\\n        ldd ${PREFIX}/bin/ffmpeg | grep opt/ffmpeg | cut -d ' ' -f 3 | xargs -i cp {} /usr/local/lib/ && \\\n        # copy userland lib too\n        ldd ${PREFIX}/bin/ffmpeg | grep opt/vc | cut -d ' ' -f 3 | xargs -i cp {} /usr/local/lib/ && \\\n        for lib in /usr/local/lib/*.so.*; do ln -s \"${lib##*/}\" \"${lib%%.so.*}\".so; done && \\\n        cp ${PREFIX}/bin/* /usr/local/bin/ && \\\n        cp -r ${PREFIX}/share/ffmpeg /usr/local/share/ && \\\n        LD_LIBRARY_PATH=/usr/local/lib ffmpeg -buildconf && \\\n        cp -r ${PREFIX}/include/libav* ${PREFIX}/include/libpostproc ${PREFIX}/include/libsw* /usr/local/include && \\\n        mkdir -p /usr/local/lib/pkgconfig && \\\n        for pc in ${PREFIX}/lib/pkgconfig/libav*.pc ${PREFIX}/lib/pkgconfig/libpostproc.pc ${PREFIX}/lib/pkgconfig/libsw*.pc; do \\\n        sed \"s:${PREFIX}:/usr/local:g\" <\"$pc\" >/usr/local/lib/pkgconfig/\"${pc##*/}\"; \\\n        done\n\nFROM        base AS release\n\nENV         LD_LIBRARY_PATH=/usr/local/lib:/usr/local/lib64:/usr/lib:/usr/lib64:/lib:/lib64\n\nRUN \\\n        apt-get -yqq update && \\\n        apt-get install -yq --no-install-recommends libx265-dev libaom-dev && \\\n        apt-get autoremove -y && \\\n        apt-get clean -y && rm -rf /var/lib/apt/lists/*;\n\nCMD         [\"--help\"]\nENTRYPOINT  [\"ffmpeg\"]\n\nCOPY --from=build /usr/local /usr/local/\n"
}