{
  "startTime": 1674245988518,
  "endTime": 1674245989311,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 32,
        "columnEnd": 75
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 32,
        "columnEnd": 75
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# The development Docker image build a self-contained Ray instance suitable\n# for developers that need the source code to actively modify.\n\nFROM rayproject/ray-deps:latest\nADD ray.tar /ray\nADD git-rev /ray/git-rev\n# Install dependencies needed to build ray\nRUN sudo apt-get update && sudo apt-get install --no-install-recommends -y curl unzip cmake gcc g++ && sudo apt-get clean && rm -rf /var/lib/apt/lists/*;\nRUN sudo chown -R ray:users /ray && cd /ray && git init && ./ci/travis/install-bazel.sh --system\nENV PATH=$PATH:/home/ray/bin\nRUN echo 'build --remote_cache=\"https://storage.googleapis.com/ray-bazel-cache\"' >> $HOME/.bazelrc\nRUN echo 'build --remote_upload_local_results=false' >> $HOME/.bazelrc\nWORKDIR /ray/\n# The result of bazel build is reused in pip install. It if run first to allow\n# for failover to serial build if parallel build requires too much resources.\nRUN bazel build //:ray_pkg || bazel build --jobs 1 //:ray_pkg\nWORKDIR /ray/python/\nRUN pip install --no-cache-dir -e .\nWORKDIR /ray\n"
}