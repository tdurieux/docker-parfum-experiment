{
  "startTime": 1674253624144,
  "endTime": 1674253624879,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 85,
        "lineEnd": 85,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 92,
        "lineEnd": 92,
        "columnStart": 4,
        "columnEnd": 17
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 74,
        "lineEnd": 74,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 19,
        "columnStart": 22,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 25,
        "lineEnd": 27,
        "columnStart": 22,
        "columnEnd": 53
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 86,
        "lineEnd": 86,
        "columnStart": 22,
        "columnEnd": 79
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 19,
        "columnStart": 22,
        "columnEnd": 50
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 25,
        "lineEnd": 27,
        "columnStart": 22,
        "columnEnd": 53
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 86,
        "lineEnd": 86,
        "columnStart": 22,
        "columnEnd": 79
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 61
      }
    }
  ],
  "repairedDockerfile": "# TestDockerfile for running ndt-server integration tests.\n#\n# BUILD STEPS:\n# * Setup a base build environment based on the same image as the final image.\n# * Build libndt, measurement-kit, ndtrawjson, ndtrawnojson clients\n# * Setup the final image by copying clients.\n#\n# Because client binaries are dynamically linked, the versions must be\n# available during build and in the final image. The simplest way to guarantee\n# that is to use the same base image.\n\n\n# A base image for building and the final image.\n# NOTE: use debian based golang image to easily access libraries and development\n# packages that are unavailable or harder to setup in alpine-based images.\nFROM golang:1.16.7-buster as ndtbase\nWORKDIR /\nRUN apt-get update && apt-get install --no-install-recommends -y git libmaxminddb0 libevent-2.1-6 \\\n    libevent-core-2.1-6 libevent-extra-2.1-6 \\\n    libevent-openssl-2.1-6 libevent-pthreads-2.1-6 && rm -rf /var/lib/apt/lists/*;\n\n\n# A base image for building clients.\nFROM ndtbase AS ndtbuild\nWORKDIR /\nRUN apt-get update && apt-get install --no-install-recommends -y build-essential autotools-dev \\\n    automake zlib1g-dev cmake libssl-dev libcurl4-openssl-dev \\\n    libmaxminddb-dev libevent-dev libtool-bin libtool && rm -rf /var/lib/apt/lists/*;\nRUN git clone --recursive https://github.com/m-lab/ndt/\n\n\n# Build a libndt client.\nFROM ndtbuild AS libndt\nRUN git clone --recursive https://github.com/measurement-kit/libndt\nWORKDIR /libndt\nRUN cmake .\nRUN cmake --build .\n\n\n# Build a measurement_kit client.\nFROM ndtbuild AS mk\nRUN git clone https://github.com/measurement-kit/measurement-kit.git\nWORKDIR /measurement-kit\nRUN ./autogen.sh\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"\nRUN make -j 8\nRUN make -j 8 install\n\n\n# Build a version of web100clt that uses JSON.\nFROM ndtbuild as ndtrawjson\nRUN apt-get install --no-install-recommends -y libjansson-dev && rm -rf /var/lib/apt/lists/*;\nWORKDIR /ndt\nRUN ./bootstrap\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-static\nWORKDIR /ndt/src\nRUN make -j 8 web100clt\n\n\n# Build a version of web100clt that does not use JSON.\nFROM ndtbuild AS ndtrawnojson\n# I2util used to be a separate library, so make sure to install it from the\n# modern NDT repo before we back up to a super-old code version that expects it\n# to be installed separately.\nWORKDIR /ndt/I2util\nRUN ./bootstrap.sh\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"\nRUN make -j 8 install\nWORKDIR /ndt\n# Check out a build from before JSON support was in the binary.  Because\n# libjansson is not installed in this image, if the build succeeds, then it\n# does not use JSON.\nRUN git checkout 1f918aa4411c5bd3a863127b58bbd3b75c9d8a09\nRUN ./bootstrap\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-static\nWORKDIR /ndt/src\nRUN make -j 8 web100clt\n\n\n# Build the final image in which the server will be tested.\nFROM ndtbase AS final\nCOPY --from=ndtrawjson /ndt/src/web100clt /bin/web100clt-with-json-support\nCOPY --from=ndtrawnojson /ndt/src/web100clt /bin/web100clt-without-json-support\nCOPY --from=libndt /libndt/libndt-client /bin/libndt-client\nCOPY --from=mk /usr/local/bin/measurement_kit /bin/measurement_kit\nRUN curl -f -sL https://deb.nodesource.com/setup_10.x | bash -\nRUN apt-get update && apt-get install --no-install-recommends -y nodejs libjansson4 libssl1.1 libssl1.0 && rm -rf /var/lib/apt/lists/*;\nENV GOPATH=/go\nRUN go get github.com/mattn/goveralls\nADD . /go/src/github.com/m-lab/ndt-server\nRUN go get github.com/m-lab/ndt7-client-go/cmd/ndt7-client\nWORKDIR /go/src/github.com/m-lab/ndt-server/testdata\nRUN npm install . && npm cache clean --force;\nWORKDIR /go/src/github.com/m-lab/ndt-server\nRUN ./build.sh\nCMD /bin/bash ./test.sh\n\n# To build everything and run unit and integration tests, we recommend a commandline like:\n#    docker build -f TestDockerfile . -t ndttest && docker run -it ndttest\n"
}