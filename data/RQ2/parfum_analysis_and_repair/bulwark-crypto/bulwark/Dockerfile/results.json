{
  "startTime": 1674220702324,
  "endTime": 1674220705170,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 5,
        "columnEnd": 30
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04 AS dependencies\nCOPY depends /Bulwark/depends\nENV SDK_PATH=/Bulwark/depends/SDKs/\nRUN dpkg --add-architecture i386 \\\n  && apt-get update \\\n  && apt-get -y install --no-install-recommends \\\n  software-properties-common=0.96.20.7 \\\n  && add-apt-repository -y ppa:bitcoin/bitcoin \\\n  && apt-get update \\\n  && apt-get -y install --no-install-recommends \\\n  autoconf=2.69-9 \\\n  automake=1:1.15-4ubuntu1 \\\n  autotools-dev=20150820.1 \\\n  binutils-mingw-w64-i686=2.26-3ubuntu1+6.6 \\\n  binutils-mingw-w64-x86-64=2.26-3ubuntu1+6.6 \\\n  bsdmainutils=9.0.6ubuntu3 \\\n  build-essential=12.1ubuntu2 \\\n  ca-certificates=20170717~16.04.1 \\\n  cmake=3.5.1-1ubuntu3 \\\n  curl=7.47.0-1ubuntu2.9 \\\n  faketime=0.9.6-4 \\\n  g++-5-multilib-arm-linux-gnueabihf=5.4.0-6ubuntu1~16.04.9cross1 \\\n  g++-5-multilib=5.4.0-6ubuntu1~16.04.10 \\\n  g++-arm-linux-gnueabihf=4:5.3.1-1ubuntu1 \\\n  g++-mingw-w64-i686=5.3.1-8ubuntu3+17 \\\n  g++-mingw-w64-x86-64=5.3.1-8ubuntu3+17 \\\n  gcc-5-multilib-arm-linux-gnueabihf=5.4.0-6ubuntu1~16.04.9cross1 \\\n  gcc-5-multilib=5.4.0-6ubuntu1~16.04.10 \\\n  git-core=1:2.7.4-0ubuntu1.5 \\\n  imagemagick=8:6.8.9.9-7ubuntu5.13 \\\n  libboost-all-dev=1.58.0.1ubuntu1 \\\n  libbz2-dev=1.0.6-8 \\\n  libbz2-dev=1.0.6-8 \\\n  libc6-dev:i386=2.23-0ubuntu10 \\\n  libc6-dev=2.23-0ubuntu10 \\\n  libcap-dev=1:2.24-12 \\\n  libdb4.8-dev=4.8.30-xenial4 \\ \n  libdb4.8++-dev=4.8.30-xenial4 \\\n  libevent-dev=2.0.21-stable-2ubuntu0.16.04.1 \\\n  libjpeg-dev=8c-2ubuntu8 \\\n  libminiupnpc-dev=1.9.20140610-2ubuntu2.16.04.2 \\\n  libprotobuf-dev=2.6.1-1.3 \\\n  libqrencode-dev=3.4.4-1 \\\n  libqt5core5a=5.5.1+dfsg-16ubuntu7.5 \\\n  libqt5dbus5=5.5.1+dfsg-16ubuntu7.5 \\\n  libqt5gui5=5.5.1+dfsg-16ubuntu7.5 \\\n  librsvg2-bin=2.40.13-3 \\\n  libssl-dev=1.0.2g-1ubuntu4.13 \\\n  libtiff-tools=4.0.6-1ubuntu0.4 \\\n  libtool=2.4.6-0.1 \\\n  libz-mingw-w64-dev=1.2.8+dfsg-2 \\\n  libzmq-dev=2.2.0+dfsg-7 \\\n  libzmq5=4.1.4-7 \\\n  linux-libc-dev:i386=4.4.0-138.164 \\\n  linux-libc-dev=4.4.0-138.164 \\\n  mingw-w64-i686-dev=4.0.4-2 \\\n  mingw-w64-x86-64-dev=4.0.4-2 \\\n  openssl=1.0.2g-1ubuntu4.13 \\\n  pkg-config=0.29.1-0ubuntu1 \\\n  protobuf-compiler=2.6.1-1.3 \\\n  python-dev=2.7.12-1~16.04 \\\n  python-setuptools=20.7.0-1 \\\n  qttools5-dev-tools=5.5.1-3ubuntu0.1 \\\n  qttools5-dev=5.5.1-3ubuntu0.1 \\\n  unzip=6.0-20ubuntu1 \\\n  wget=1.17.1-1ubuntu1.4 \\\n  zlib1g-dev=1:1.2.8.dfsg-2ubuntu4.1 \\\n  && apt-get clean \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && update-alternatives --set x86_64-w64-mingw32-g++ /usr/bin/x86_64-w64-mingw32-g++-posix \\\n  && update-alternatives --set i686-w64-mingw32-g++ /usr/bin/i686-w64-mingw32-g++-posix \\\n  && wget https://github.com/phracker/MacOSX-SDKs/releases/download/10.13/MacOSX10.11.sdk.tar.xz -P /Bulwark/depends/SDKs/ \\\n  && tar xJf /Bulwark/depends/SDKs/MacOSX10.11.sdk.tar.xz -C /Bulwark/depends/SDKs/ \\\n  && rm /Bulwark/depends/SDKs/MacOSX10.11.sdk.tar.xz \\\n  && wget https://bootstrap.pypa.io/get-pip.py \\\n  && python get-pip.py \\\n  && rm get-pip.py \\\n  && pip install --no-cache-dir ez_setup==0.9 \\\n  && make -C /Bulwark/depends HOST=arm-linux-gnueabihf \\\n  && make -C /Bulwark/depends HOST=i686-pc-linux-gnu \\\n  && make -C /Bulwark/depends HOST=i686-w64-mingw32 \\\n  && make -C /Bulwark/depends HOST=x86_64-unknown-linux-gnu \\\n  && make -C /Bulwark/depends HOST=x86_64-w64-mingw32\n\nFROM dependencies AS base\nCOPY autogen.sh /Bulwark/\nCOPY build-aux /Bulwark//build-aux\nCOPY configure.ac /Bulwark/\nCOPY contrib /Bulwark//contrib\nCOPY Makefile.am /Bulwark/\nCOPY pkg.m4 /Bulwark/\nCOPY qa /Bulwark/qa\nCOPY share /Bulwark/share\nCOPY src /Bulwark/src\nWORKDIR /Bulwark\n\nFROM base AS arm32\nENV CXXFLAGS=\"-Wall -Wextra -Wformat -Wformat-security -Wno-unused-parameter -Wno-narrowing\"\nCOPY --from=dependencies /Bulwark/depends/arm-linux-gnueabihf $(pwd)/depends/arm-linux-gnueabihf\nRUN ./autogen.sh \\\n  && ./configure \\\n  --enable-zmq \\\n  --enable-glibc-back-compat \\\n  --enable-reduce-exports \\\n  --disable-shared \\\n  --enable-hardening \\\n  --disable-tests \\\n  --with-miniupnpc \\\n  --enable-upnp-default \\\n  --prefix=\"$(pwd)/depends/arm-linux-gnueabihf\" \\\n  --build=x86_64-unknown-linux-gnu \\\n  --host=arm-linux-gnueabihf \\\n  && make \\\n  && cp ./src/bulwark-cli ./src/bulwarkd ./src/qt/bulwark-qt / \\\n  && make clean\nWORKDIR /\nRUN arm-linux-gnueabihf-strip ./bulwark-cli ./bulwark-qt ./bulwarkd  \\\n  && tar czf arm32.tar.gz ./bulwark* \\\n  && rm ./bulwark-cli ./bulwark-qt ./bulwarkd\n\nFROM base AS linux32\nENV CXXFLAGS=\"-Wall -Wextra -Wformat -Wformat-security -Wno-unused-parameter -Wno-narrowing\"\nCOPY --from=dependencies /Bulwark/depends/i686-pc-linux-gnu $(pwd)/depends/i686-pc-linux-gnu\nRUN ./autogen.sh \\\n  && ./configure \\\n  --enable-zmq \\\n  --with-pic \\\n  --enable-glibc-back-compat \\\n  --enable-reduce-exports \\\n  --disable-shared \\\n  --enable-hardening \\\n  --disable-tests \\\n  --with-miniupnpc \\\n  --enable-upnp-default \\\n  --prefix=\"$(pwd)/depends/i686-pc-linux-gnu\" \\\n  --build=x86_64-unknown-linux-gnu \\\n  --host=i686-pc-linux-gnu \\\n  && make \\\n  && cp ./src/bulwark-cli ./src/bulwarkd ./src/qt/bulwark-qt / \\\n  && make clean\nWORKDIR /\nRUN strip ./bulwark-cli ./bulwark-qt ./bulwarkd  \\\n  && tar czf linux32.tar.gz ./bulwark* \\\n  && rm ./bulwark-cli ./bulwark-qt ./bulwarkd\n\nFROM base AS linux64\nENV CXXFLAGS=\"-Wall -Wextra -Wformat -Wformat-security -Wno-unused-parameter -Wno-narrowing\"\nENV HOST=\"x86_64-unknown-linux-gnu\"\nCOPY --from=dependencies /Bulwark/depends/x86_64-unknown-linux-gnu $(pwd)/depends/x86_64-unknown-linux-gnu\nRUN ./autogen.sh \\\n  && ./configure \\\n  --enable-zmq \\\n  --with-pic \\\n  --enable-glibc-back-compat \\\n  --enable-reduce-exports \\\n  --disable-shared \\\n  --enable-hardening \\\n  --disable-tests \\\n  --with-miniupnpc \\\n  --enable-upnp-default \\\n  --prefix=\"$(pwd)/depends/x86_64-unknown-linux-gnu\" \\\n  --build=x86_64-unknown-linux-gnu \\\n  --host=x86_64-unknown-linux-gnu \\\n  && make \\\n  && cp ./src/bulwark-cli ./src/bulwarkd ./src/qt/bulwark-qt / \\\n  && make clean\nWORKDIR /\nRUN strip ./bulwark-cli ./bulwark-qt ./bulwarkd  \\\n  && tar czf linux64.tar.gz ./bulwark* \\\n  && rm ./bulwark-cli ./bulwark-qt ./bulwarkd\n\nFROM base AS windows32\nENV CXXFLAGS=\"-Wall -Wextra -Wformat -Wformat-security -Wno-unused-parameter -Wno-narrowing\"\nENV HOST=\"i686-w64-mingw32\"\nCOPY --from=dependencies /Bulwark/depends/i686-w64-mingw32 $(pwd)/depends/i686-w64-mingw32\nCOPY autogen.sh .\nCOPY build-aux ./build-aux\nCOPY configure.ac .\nCOPY contrib ./contrib\nCOPY Makefile.am .\nCOPY pkg.m4 .\nCOPY qa ./qa\nCOPY share ./share\nCOPY src ./src\nRUN ./autogen.sh \\\n  && ./configure \\\n  --enable-gui \\\n  --enable-reduce-exports \\\n  --disable-shared \\\n  --with-pic \\\n  --disable-tests \\\n  --enable-upnp-default \\\n  --prefix=\"$(pwd)/depends/i686-w64-mingw32\" \\\n  --build=x86_64-unknown-linux-gnu \\\n  --host=i686-w64-mingw32 \\\n  && make \\\n  && cp ./src/bulwark-cli.exe ./src/bulwarkd.exe ./src/qt/bulwark-qt.exe / \\\n  && make clean\nWORKDIR /\nRUN strip ./bulwark-cli.exe ./bulwark-qt.exe ./bulwarkd.exe  \\\n  && tar czf windows32.tar.gz ./bulwark* \\\n  && rm ./bulwark-cli.exe ./bulwark-qt.exe ./bulwarkd.exe\n\nFROM base AS windows64\nENV CXXFLAGS=\"-Wall -Wextra -Wformat -Wformat-security -Wno-unused-parameter -Wno-narrowing\"\nENV HOST=\"x86_64-w64-mingw32\"\nCOPY --from=dependencies /Bulwark/depends/x86_64-w64-mingw32 $(pwd)/depends/x86_64-w64-mingw32\nCOPY autogen.sh .\nCOPY build-aux ./build-aux\nCOPY configure.ac .\nCOPY contrib ./contrib\nCOPY Makefile.am .\nCOPY pkg.m4 .\nCOPY qa ./qa\nCOPY share ./share\nCOPY src ./src\nRUN ./autogen.sh \\\n  && ./configure \\\n  --enable-gui \\\n  --enable-reduce-exports \\\n  --disable-shared \\\n  --with-pic \\\n  --disable-tests \\\n  --enable-upnp-default \\\n  --prefix=\"$(pwd)/depends/x86_64-w64-mingw32\" \\\n  --build=x86_64-unknown-linux-gnu \\\n  --host=x86_64-w64-mingw32 \\\n  && make \\\n  && cp ./src/bulwark-cli.exe ./src/bulwarkd.exe ./src/qt/bulwark-qt.exe / \\\n  && make clean\nWORKDIR /\nRUN strip ./bulwark-cli.exe ./bulwark-qt.exe ./bulwarkd.exe  \\\n  && tar czf windows64.tar.gz ./bulwark* \\\n  && rm ./bulwark-cli.exe ./bulwark-qt.exe ./bulwarkd.exe\n\nFROM alpine:3.8\nLABEL maintainer=\"kewagi\"\nLABEL version=\"2.0.0.0\"\nLABEL name=\"Bulwark Docker Builds\"\nRUN mkdir /release\nCOPY --from=arm32 /arm32.* /release\nCOPY --from=linux32 /linux32.* /release\nCOPY --from=linux64 /linux64.* /release\nCOPY --from=windows32 /windows32.* /release\nCOPY --from=windows64 /windows64.* /release\nENTRYPOINT [\"ash\"]"
}