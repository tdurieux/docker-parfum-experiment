diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/qmstr/qmstr/masterserver/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/qmstr/qmstr/masterserver/Dockerfile/repaired.Dockerfile
index 8c5afba..ea58191 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/qmstr/qmstr/masterserver/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/qmstr/qmstr/masterserver/Dockerfile/repaired.Dockerfile
@@ -8,14 +8,14 @@ LABEL org.qmstr.image runtime
 ENV DEBIAN_FRONTEND=noninteractive
 
 # install runtime deps
-RUN apt-get update && apt-get install -y \
+RUN apt-get update && apt-get install --no-install-recommends -y \
     software-properties-common curl autoconf git apt-utils libgit2-dev libio-captureoutput-perl \
     xz-utils zlib1g libxml2-dev libxslt1-dev python3.6-dev python-pip python3-pip python3-distutils \
     protobuf-compiler icu-devtools libicu-dev && \
     rm -rf /var/lib/apt/lists/*
 
 ARG HUGO_VERSION
-RUN curl -L --output /tmp/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_${HUGO_VERSION}_Linux-64bit.deb
+RUN curl -f -L --output /tmp/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_${HUGO_VERSION}_Linux-64bit.deb
 RUN dpkg -i /tmp/hugo.deb
 RUN rm /tmp/hugo.deb
 
@@ -32,17 +32,17 @@ ARG SCANCODE_VERSION
 ENV LC_ALL=C.UTF-8
 ENV LANG=C.UTF-8
 
-RUN ICU_VERSION=$(icuinfo | sed -n 's:.*<param name="version">\([0-9]*\)\.[0-9]*</param>.*:\1:p') pip3 install -U scancode-toolkit==${SCANCODE_VERSION}
+RUN ICU_VERSION=$(icuinfo | sed -n 's:.*<param name="version">\([0-9]*\)\.[0-9]*</param>.*:\1:p') pip3 --no-cache-dir install -U scancode-toolkit==${SCANCODE_VERSION}
 
 # install dgraph
 ARG DGRAPH_VERSION
-RUN curl -L --output /tmp/dgraph.sha256 https://github.com/dgraph-io/dgraph/releases/download/v"${DGRAPH_VERSION}"/dgraph-checksum-linux-amd64.sha256
-RUN curl -L --output /tmp/dgraph.tar.gz https://github.com/dgraph-io/dgraph/releases/download/v"${DGRAPH_VERSION}"/dgraph-linux-amd64.tar.gz
+RUN curl -f -L --output /tmp/dgraph.sha256 https://github.com/dgraph-io/dgraph/releases/download/v"${DGRAPH_VERSION}"/dgraph-checksum-linux-amd64.sha256
+RUN curl -f -L --output /tmp/dgraph.tar.gz https://github.com/dgraph-io/dgraph/releases/download/v"${DGRAPH_VERSION}"/dgraph-linux-amd64.tar.gz
 RUN temp_dir=$(mktemp -d 2>/dev/null) && \
     tar -C $temp_dir -xzf /tmp/dgraph.tar.gz && \
     sed -e s#/usr/local/bin#${temp_dir}# /tmp/dgraph.sha256 | sha256sum -c - && \
     mv ${temp_dir}/* /usr/local/bin/ && \
-    rmdir ${temp_dir}
+    rmdir ${temp_dir} && rm -rf > 2/dev/null && rm /tmp/dgraph.tar.gz
 RUN rm /tmp/dgraph*
 
 ## builder ##
@@ -55,13 +55,13 @@ ENV PATH ${GOPATH}/bin:/opt/go/bin:$PATH
 ENV DEBIAN_FRONTEND=noninteractive
 
 # install dependecies
-RUN apt-get update && apt-get install -y \
+RUN apt-get update && apt-get install --no-install-recommends -y \
     curl autoconf make git libgit2-dev libio-captureoutput-perl virtualenv tar build-essential pkg-config protobuf-compiler maven \
     && rm -rf /var/lib/apt/lists/*
 
 ARG GO_VERSION
-RUN curl -o /opt/go.tar.gz https://dl.google.com/go/go${GO_VERSION}.linux-amd64.tar.gz
-RUN cd /opt && tar -xf go.tar.gz
+RUN curl -f -o /opt/go.tar.gz https://dl.google.com/go/go${GO_VERSION}.linux-amd64.tar.gz
+RUN cd /opt && tar -xf go.tar.gz && rm go.tar.gz
 
 # install golang tools
 RUN mkdir /qmstr
@@ -130,7 +130,7 @@ FROM ubuntu:18.04 as web
 
 ENV DEBIAN_FRONTEND=noninteractive
 
-RUN apt-get update && apt-get install -y socat
+RUN apt-get update && apt-get install --no-install-recommends -y socat && rm -rf /var/lib/apt/lists/*;
 COPY --from=runtime /usr/local/bin/dgraph-ratel /usr/local/bin/dgraph-ratel
 ADD ci/ratel-entrypoint.sh /entrypoint.sh
 
@@ -151,8 +151,8 @@ ENV GOPATH /go
 ENV PATH ${GOPATH}/bin:$PATH
 
 # install golang
-RUN apt-get update && apt-get install -y \
-    curl golang autoconf git libio-captureoutput-perl python3.6-dev python-virtualenv protobuf-compiler
+RUN apt-get update && apt-get install --no-install-recommends -y \
+    curl golang autoconf git libio-captureoutput-perl python3.6-dev python-virtualenv protobuf-compiler && rm -rf /var/lib/apt/lists/*;
 
 EXPOSE 2345