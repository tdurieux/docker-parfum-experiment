{
  "startTime": 1674248645023,
  "endTime": 1674248646264,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 89,
        "lineEnd": 89,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 90,
        "lineEnd": 90,
        "columnStart": 4,
        "columnEnd": 28
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG HUMHUB_VERSION\nARG VCS_REF\nARG BUILD_DEPS=\"\\\n    ca-certificates \\\n    nodejs \\\n    npm \\\n    php7 \\\n    php7-ctype \\\n    php7-curl \\\n    php7-dom \\\n    php7-exif \\\n    php7-fileinfo \\\n    php7-gd \\\n    php7-iconv \\\n    php7-intl \\\n    php7-json \\\n    php7-ldap \\\n    php7-mbstring \\\n    php7-openssl \\\n    php7-pdo_mysql \\\n    php7-phar \\\n    php7-simplexml \\\n    php7-tokenizer \\\n    php7-xml \\\n    php7-xmlreader \\\n    php7-xmlwriter \\\n    php7-zip \\\n    tzdata \\\n    \"\n\nARG RUNTIME_DEPS=\"\\\n    ca-certificates \\\n    curl \\\n    imagemagick \\\n    libintl \\\n    php7 \\\n    php7-apcu \\\n    php7-ctype \\\n    php7-curl \\\n    php7-dom \\\n    php7-exif \\\n    php7-fileinfo \\\n    php7-fpm \\\n    php7-gd \\\n    php7-iconv \\\n    php7-intl \\\n    php7-json \\\n    php7-ldap \\\n    php7-mbstring \\\n    php7-openssl \\\n    php7-pdo_mysql \\\n    php7-pecl-imagick \\\n    php7-phar \\\n    php7-session \\\n    php7-simplexml \\\n    php7-sqlite3 \\\n    php7-xml \\\n    php7-xmlreader \\\n    php7-xmlwriter \\\n    php7-zip \\\n    sqlite \\\n    supervisor \\\n    tzdata \\\n    \"\n\nFROM composer:2.3.7 as builder-composer\n\nFROM docker.io/library/alpine:3.15.4 as builder\n\nARG HUMHUB_VERSION\nARG BUILD_DEPS\n\nRUN apk add --no-cache --update $BUILD_DEPS && \\\n    rm -rf /var/cache/apk/*\n\nCOPY --from=builder-composer /usr/bin/composer /usr/bin/composer\nRUN chmod +x /usr/bin/composer\n\nWORKDIR /usr/src/\nADD https://github.com/humhub/humhub/archive/v${HUMHUB_VERSION}.tar.gz /usr/src/\nRUN tar xzf v${HUMHUB_VERSION}.tar.gz && \\\n    mv humhub-${HUMHUB_VERSION} humhub && \\\n    rm v${HUMHUB_VERSION}.tar.gz\n\nWORKDIR /usr/src/humhub\n\nRUN composer install --no-ansi --no-dev --no-interaction --no-progress --no-scripts --optimize-autoloader && \\\n    chmod +x protected/yii && \\\n    chmod +x protected/yii.bat && \\\n    npm install grunt && \\\n    npm install -g grunt-cli && \\\n    grunt build-assets && \\\n    rm -rf ./node_modules && npm cache clean --force;\n\nFROM docker.io/library/alpine:3.15.4 as base\n\nARG HUMHUB_VERSION\nARG RUNTIME_DEPS\nLABEL name=\"HumHub\" version=${HUMHUB_VERSION} variant=\"base\" \\\n      org.label-schema.build-date=$BUILD_DATE \\\n      org.label-schema.name=\"HumHub\" \\\n      org.label-schema.description=\"HumHub is a feature rich and highly flexible OpenSource Social Network Kit written in PHP\" \\\n      org.label-schema.url=\"https://www.humhub.com/\" \\\n      org.label-schema.vcs-ref=$VCS_REF \\\n      org.label-schema.vcs-url=\"https://github.com/mriedmann/humhub-docker\" \\\n      org.label-schema.vendor=\"HumHub GmbH\" \\\n      org.label-schema.version=${HUMHUB_VERSION} \\\n      org.label-schema.schema-version=\"1.0\"\n\nRUN apk add --no-cache --update $RUNTIME_DEPS && \\\n    apk add --no-cache --virtual temp_pkgs gettext && \\\n    cp /usr/bin/envsubst /usr/local/bin/envsubst && \\\n    apk del temp_pkgs && \\\n    rm -rf /var/cache/apk/*\n\nENV PHP_POST_MAX_SIZE=16M\nENV PHP_UPLOAD_MAX_FILESIZE=10M\nENV PHP_MAX_EXECUTION_TIME=60\nENV PHP_MEMORY_LIMIT=1G\nENV PHP_TIMEZONE=UTC\n\nRUN touch /var/run/supervisor.sock && \\\n    chmod 777 /var/run/supervisor.sock\n\n# 100=nginx 101=nginx (group)\nCOPY --from=builder --chown=100:101 /usr/src/humhub /var/www/localhost/htdocs/\nCOPY --chown=100:101 humhub/ /var/www/localhost/htdocs/\n\nRUN mkdir -p /usr/src/humhub/protected/config/ && \\\n    cp -R /var/www/localhost/htdocs/protected/config/* /usr/src/humhub/protected/config/ && \\\n    rm -f var/www/localhost/htdocs/protected/config/common.php /usr/src/humhub/protected/config/common.php && \\\n    echo \"v${HUMHUB_VERSION}\" >  /usr/src/humhub/.version\n\nCOPY base/ /\nCOPY docker-entrypoint.sh /docker-entrypoint.sh\n\nRUN chmod 600 /etc/crontabs/nginx && \\\n    chmod +x /docker-entrypoint.sh\n\nVOLUME /var/www/localhost/htdocs/uploads\nVOLUME /var/www/localhost/htdocs/protected/config\nVOLUME /var/www/localhost/htdocs/protected/modules\n\nENTRYPOINT [\"/docker-entrypoint.sh\"]\nCMD [\"supervisord\", \"-n\", \"-c\", \"/etc/supervisord.conf\"]\n\nFROM base as humhub_phponly\n\nLABEL variant=\"phponly\"\n\nRUN apk add --no-cache fcgi\n\nCOPY phponly/ /\n\nADD https://raw.githubusercontent.com/renatomefi/php-fpm-healthcheck/master/php-fpm-healthcheck /usr/local/bin/php-fpm-healthcheck\nRUN chmod +x /usr/local/bin/php-fpm-healthcheck \\\n && addgroup -g 101 -S nginx \\\n && adduser --uid 100 -g 101 -S nginx\n\nEXPOSE 9000\n\nFROM docker.io/library/nginx:1.21.6-alpine as humhub_nginx\n\nLABEL variant=\"nginx\"\n\nENV NGINX_CLIENT_MAX_BODY_SIZE=10m \\\n    NGINX_KEEPALIVE_TIMEOUT=65 \\\n    NGINX_UPSTREAM=humhub:9000\n\nCOPY nginx/ /\nCOPY --from=builder --chown=nginx:nginx /usr/src/humhub/ /var/www/localhost/htdocs/\n\nFROM base as humhub_allinone\n\nLABEL variant=\"allinone\"\n\nRUN apk add --no-cache nginx && \\\n    chown -R nginx:nginx /var/lib/nginx/\n\nCOPY nginx/ /\n\nEXPOSE 80\n"
}