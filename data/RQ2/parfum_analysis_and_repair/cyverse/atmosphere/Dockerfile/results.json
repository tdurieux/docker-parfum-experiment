{
  "startTime": 1674250264059,
  "endTime": 1674250265240,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 41,
        "columnEnd": 72
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Docker Container for Atmosphere\nFROM ubuntu:18.04\n\n# Set environment\nSHELL [\"/bin/bash\", \"-c\"]\n\n# Install dependencies with apt\nRUN apt-get update && \\\n    DEBIAN_FRONTEND=noninteractive apt-get install --no-install-recommends -y  \\\n      apt-transport-https \\\n      build-essential \\\n      git \\\n      g++ \\\n      libffi-dev \\\n      libguestfs-tools \\\n      libldap2-dev \\\n      libpq-dev \\\n      libsasl2-dev \\\n      libssl-dev \\\n      libxml2-dev \\\n      libxslt1-dev \\\n      locales \\\n      make \\\n      netcat \\\n      openssl \\\n      postgresql-client \\\n      python \\\n      python-dev \\\n      python-m2crypto \\\n      python-pip \\\n      python-psycopg2 \\\n      python-setuptools \\\n      python-tk \\\n      redis-server \\\n      sendmail \\\n      ssh \\\n      sudo \\\n      swig \\\n      ufw \\\n      uwsgi \\\n      uwsgi-plugin-python \\\n      wget \\\n      zlib1g-dev && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    locale-gen en_US.UTF-8\n\nENV LANG en_US.UTF-8\nENV LANGUAGE en_US:en\nENV LC_ALL en_US.UTF-8\n\n# Create PID and log directories for uWSGI\nRUN mkdir -p /run/uwsgi/app/atmosphere /var/log/uwsgi && \\\n    chown -R www-data:www-data /run/uwsgi/app/ /var/log/uwsgi && \\\n    touch /var/log/uwsgi/atmosphere.log\n\n# Clone repos and pip install requirements\nRUN mkdir /opt/env && \\\n    pip install --no-cache-dir --upgrade pip==9.0.3 virtualenv && \\\n    virtualenv /opt/env/atmosphere && \\\n    ln -s /opt/env/atmosphere/ /opt/env/atmo\nRUN git clone --depth 1 https://github.com/cyverse/atmosphere-ansible.git /opt/dev/atmosphere-ansible\n\nCOPY . /opt/dev/atmosphere\nWORKDIR /opt/dev/atmosphere\n\n# Install initd files\nRUN cp docker/flower.initd /etc/init.d/flower && \\\n    cp docker/celeryd.initd /etc/init.d/celeryd && \\\n    cp docker/celerybeat.initd /etc/init.d/celerybeat && \\\n    chmod -R 755 /etc/init.d\n\n# Setup uwsgi\nRUN mkdir -p /etc/uwsgi/apps-available /etc/uwsgi/apps-enabled && \\\n    cp docker/uwsgi.ini /etc/uwsgi/apps-available/atmosphere.ini && \\\n    ln -s /etc/uwsgi/apps-available/atmosphere.ini /etc/uwsgi/apps-enabled/atmosphere.ini\n\nRUN source /opt/env/atmo/bin/activate && pip install --no-cache-dir -r requirements.txt\n\n# Cleanup\nRUN apt-get autoremove -y && \\\n    rm -rf /var/lib/apt/lists/*\n\nRUN useradd user\n\n# Prepare entrypoint\nRUN cp docker/web_shell_no_gateone.yml /opt/web_shell_no_gateone.yml && \\\n    mkdir -p /root/.ssh && \\\n    cp docker/ssh.config /root/.ssh/config && \\\n    cp docker/entrypoint.sh /root/entrypoint.sh && \\\n    cp docker/test.sh /root/test.sh && \\\n    chmod +x /root/entrypoint.sh && \\\n    chmod +x /root/test.sh && \\\n    echo \"source /opt/env/atmo/bin/activate\" >> /root/.bashrc\nENTRYPOINT [\"/root/entrypoint.sh\"]\n"
}