{
  "startTime": 1674252495437,
  "endTime": 1674252495920,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 26,
        "columnEnd": 98
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM    ubuntu:14.04\n\nENV DEBIAN_FRONTEND noninteractive\n#prevent apt from installing recommended packages\nRUN echo 'APT::Install-Recommends \"false\";' > /etc/apt/apt.conf.d/docker-no-recommends && \\\n    echo 'APT::Install-Suggests \"false\";' >> /etc/apt/apt.conf.d/docker-no-recommends\n\n# Install java and tomcat\nRUN apt-get update && apt-get install --no-install-recommends -y tomcat7 openjdk-7-jdk libyaml-perl libfile-slurp-perl && \\\n        rm -rf /var/lib/tomcat7/webapps/* && \\\n        rm -rf /var/lib/apt/lists/*\n\nENV     JAVA_HOME /usr/lib/jvm/java-7-openjdk-amd64\nENV     CATALINA_HOME /usr/share/tomcat7\nENV     CATALINA_BASE /var/lib/tomcat7\n\nENV CATALINA_OPTS=\" -Djava.security.egd=file:/dev/./urandom\"\nENV PATH $CATALINA_HOME/bin:$PATH\n\nCOPY tomcat/server.xml $CATALINA_BASE/conf/\nCOPY web-app/WEB-INF/config.yml /conf/config.yml\nWORKDIR /usr/local/bin/\nCOPY tomcat/yml.pl ./\nCOPY tomcat/start.sh ./\n\n# fix missing folders in tomcat\nRUN     mkdir $CATALINA_BASE/temp && \\\n        mkdir -p $CATALINA_HOME/common/classes && \\\n        mkdir -p $CATALINA_HOME/server/classes && \\\n        mkdir -p $CATALINA_HOME/shared/classes\n\n# Run grails wrapper to install grails and project dependencies\nWORKDIR /usr/local/app\nCOPY     grailsw application.properties ./\nCOPY     wrapper ./wrapper\nCOPY     grails-app/conf/BuildConfig.groovy ./grails-app/conf/\nRUN     ./grailsw refresh-dependencies\n\n# Building app\n\nADD . ./\n# copy master in case of master branch and HEAD in case of tag\nRUN if [ -f .git/refs/heads/master ]; then  cat .git/refs/heads/master; else cat .git/HEAD; fi > version\n# adding commit hash\nRUN cat version >> application.properties\n\nRUN ./grailsw test-app unit: -echoOut && \\\n    ./grailsw war ROOT.war && \\\n    cp application.properties $CATALINA_BASE/ && \\\n    cp ROOT.war $CATALINA_BASE/webapps/ && \\\n# clean up\n    rm -rf /usr/local/app && \\\n    rm -rf /root/.grails  && \\\n    rm -rf /root/.m2\n\nWORKDIR $CATALINA_BASE\nVOLUME /data\nEXPOSE 8080\n\nCMD [\"start.sh\"]\n"
}