diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/ls1intum/artemis/src/main/docker/jenkins/swift/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/ls1intum/artemis/src/main/docker/jenkins/swift/Dockerfile/repaired.Dockerfile
index 4df9dc7..800ac2e 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/ls1intum/artemis/src/main/docker/jenkins/swift/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/ls1intum/artemis/src/main/docker/jenkins/swift/Dockerfile/repaired.Dockerfile
@@ -7,7 +7,7 @@ USER root
 RUN apt update
 
 # Install Java and Maven dependencies
-RUN apt-get install -y maven
+RUN apt-get install --no-install-recommends -y maven && rm -rf /var/lib/apt/lists/*;
 RUN cd /usr/lib/jvm && \
     wget https://github.com/AdoptOpenJDK/openjdk16-binaries/releases/download/jdk-16%2B36/OpenJDK16-jdk_x64_linux_hotspot_16_36.tar.gz && \
     tar -zxf OpenJDK16-jdk_x64_linux_hotspot_16_36.tar.gz \
@@ -18,26 +18,26 @@ RUN JAVA_HOME="/usr/lib/jvm/java-16-openjdk-amd64" && export JAVA_HOME
 ENV JAVA_HOME /usr/lib/jvm/java-16-openjdk-amd64
 
 # Install C dependencies
-RUN apt install -y gcc gdb make libubsan0 liblsan0 libtsan0
+RUN apt install --no-install-recommends -y gcc gdb make libubsan0 liblsan0 libtsan0 && rm -rf /var/lib/apt/lists/*;
 
 # Some packages need to be installed to avoid some known problems for python3.6, see: https://github.com/pyenv/pyenv/wiki/Common-build-problems
-RUN apt install -y make build-essential libssl-dev zlib1g-dev libbz2-dev \
+RUN apt install --no-install-recommends -y make build-essential libssl-dev zlib1g-dev libbz2-dev \
     libreadline-dev libsqlite3-dev wget curl llvm libncurses5-dev libncursesw5-dev \
-    xz-utils tk-dev libffi-dev liblzma-dev
+    xz-utils tk-dev libffi-dev liblzma-dev && rm -rf /var/lib/apt/lists/*;
 
 # Install Python3.8
 RUN wget https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tgz && \
     tar xvf Python-3.8.6.tgz \
     && cd Python-3.8.6 \
-    && ./configure --enable-shared \
+    && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --enable-shared \
     && make -j8 \
-    && make altinstall
-RUN apt install -y python3 python3-pip
+    && make altinstall && rm Python-3.8.6.tgz
+RUN apt install --no-install-recommends -y python3 python3-pip && rm -rf /var/lib/apt/lists/*;
 RUN cd ..
 RUN rm -r -f Python3.8.6/ && rm -f Python-3.8.6.tgz
 
 # Install pytest for python exercises
-RUN pip3 install -U pytest
+RUN pip3 install --no-cache-dir -U pytest
 
 # Install Swift and SwiftLint (adapted from norionomura/swift and norionomura/swiftlint)
 ENV SWIFT_BRANCH swift-5.3.1-release
@@ -49,17 +49,17 @@ RUN apt-get install -y --no-install-recommends \
     libxml2-dev \
     && rm -r /var/lib/apt/lists/*
 # Install Swift keys
-RUN curl https://swift.org/keys/all-keys.asc | gpg2 --import -
+RUN curl -f https://swift.org/keys/all-keys.asc | gpg2 --import -
 # Install Swift toolchain
 # -> https://swift.org/builds/swift-5.3.1-release/ubuntu1804/swift-5.3.1-RELEASE/swift-5.3.1-RELEASE-ubuntu18.04.tar.gz
 RUN SWIFT_ARCHIVE_NAME=swift-$SWIFT_VERSION-$SWIFT_PLATFORM && \
     SWIFT_URL=https://swift.org/builds/$SWIFT_BRANCH/$(echo "$SWIFT_PLATFORM" | tr -d .)/swift-$SWIFT_VERSION/$SWIFT_ARCHIVE_NAME.tar.gz && \
-    curl -O $SWIFT_URL && \
-    curl -O $SWIFT_URL.sig && \
+    curl -f -O $SWIFT_URL && \
+    curl -f -O $SWIFT_URL.sig && \
     gpg2 --verify $SWIFT_ARCHIVE_NAME.tar.gz.sig && \
     tar -xvzf $SWIFT_ARCHIVE_NAME.tar.gz --directory / --strip-components=1 && \
     rm -rf $SWIFT_ARCHIVE_NAME* /tmp/* /var/tmp/* && \
-    chmod -R o+r /usr/lib/swift
+    chmod -R o+r /usr/lib/swift && rm $SWIFT_ARCHIVE_NAME.tar.gz
 # Install SwiftLint
 RUN git clone --branch master https://github.com/realm/SwiftLint.git && \
     cd SwiftLint && \