{
  "startTime": 1674255399834,
  "endTime": 1674255400779,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 81
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 82,
        "lineEnd": 82,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 33,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 26
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM openjdk:8-jdk-stretch AS build-env\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y ant && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /build\nRUN git clone https://github.com/uwnlp/EasySRL && \\\n    cd EasySRL && \\\n    ant\n\nWORKDIR /build\nRUN git clone https://github.com/mikelewis0/easyccg\n\nADD https://github.com/mynlp/jigg/archive/v-0.4.tar.gz /build/v-0.4.tar.gz\nRUN tar xzf v-0.4.tar.gz && rm v-0.4.tar.gz\n\n\n\nFROM python:3.6.3-jessie\n\nMAINTAINER Masashi Yoshikawa <yoshikawa.masashi.yh8@is.naist.jp>\n\nENV LC_ALL=C.UTF-8\nENV LANG=C.UTF-8\n\n# Install ccg2lambda specific dependencies\nRUN sed -i -s '/debian jessie-updates main/d' /etc/apt/sources.list && \\\n    echo \"deb http://archive.debian.org/debian jessie-backports main\" >> /etc/apt/sources.list && \\\n    echo \"Acquire::Check-Valid-Until false;\" >/etc/apt/apt.conf.d/10-nocheckvalid && \\\n    echo 'Package: *\\nPin: origin \"archive.debian.org\"\\nPin-Priority: 500' >/etc/apt/preferences.d/10-archive-pi && \\\n    apt-get update && \\\n    apt-get install --no-install-recommends -y openjdk-8-jre && \\\n    apt-get update --fix-missing && \\\n    apt-get install --no-install-recommends -y \\\n        bc \\\n        coq=8.4pl4dfsg-1 \\\n        libxml2-dev \\\n        libxslt1-dev && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    pip install --no-cache-dir -U pip && \\\n    pip install --no-cache-dir lxml simplejson pyyaml -I nltk==3.0.5 cython numpy chainer==4.0.0 && \\\n    python -c \"import nltk; nltk.download('wordnet')\"\n\nWORKDIR /app\nADD . /app\n\n# Install C&C\nWORKDIR /app/parsers\nADD http://www.cl.cam.ac.uk/~sc609/resources/candc-downloads/candc-linux-1.00.tgz /app/parsers/candc-linux-1.00.tgz\nRUN tar xvf candc-linux-1.00.tgz && rm candc-linux-1.00.tgz\nWORKDIR /app/parsers/candc-1.00\nADD http://www.cl.cam.ac.uk/~sc609/resources/candc-downloads/models-1.02.tgz /app/parsers/candc-1.00/models-1.02.tgz\nRUN tar xvf models-1.02.tgz && \\\n    echo \"/app/parsers/candc-1.00\" >> /app/en/candc_location.txt && \\\n    echo \"candc:/app/parsers/candc-1.00\" >> /app/en/parser_location.txt && rm models-1.02.tgz\n\n# Install easyccg\nWORKDIR /app/parsers/easyccg\nCOPY --from=build-env /build/easyccg/easyccg.jar /app/parsers/easyccg/easyccg.jar\nADD https://drive.google.com/uc?export=download&id=0B7AY6PGZ8lc-dUN4SDcxWkczM2M /app/parsers/easyccg/model.tar.gz\nRUN tar xvf model.tar.gz && \\\n    echo \"easyccg:\"`pwd` >> /app/en/parser_location.txt && rm model.tar.gz\n\n# Install EasySRL\nWORKDIR /app/parsers/EasySRL\nCOPY --from=build-env /build/EasySRL/easysrl.jar /app/parsers/EasySRL/easysrl.jar\n# Download model file (the ugly script is due to downloading the large file from Google Drive)\nRUN wget --load-cookies /tmp/cookies.txt \"https://docs.google.com/uc?export=download&confirm=$(wget --quiet \\\n    --save-cookies /tmp/cookies.txt --keep-session-cookies --no-check-certificate \\\n    'https://docs.google.com/uc?export=download&id=0B7AY6PGZ8lc-R1E3aTA5WG54bWM' -O- | \\\n    sed -rn 's/.*confirm=([0-9A-Za-z_]+).*/\\1\\n/p')&id=0B7AY6PGZ8lc-R1E3aTA5WG54bWM\" -O model.tar.gz 2> /dev/null && \\\n    rm -rf /tmp/cookies.txt && \\\n    tar xvf model.tar.gz && \\\n    echo \"easysrl:/app/parsers/EasySRL/\" >> /app/en/parser_location.txt && rm model.tar.gz\n\n# Install Jigg\nCOPY --from=build-env /build/jigg-v-0.4/jar/jigg-0.4.jar /app/parsers/jigg-v-0.4/jar/jigg-0.4.jar\nADD https://github.com/mynlp/jigg/releases/download/v-0.4/ccg-models-0.4.jar /app/parsers/jigg-v-0.4/jar/\nRUN echo \"/app/parsers/jigg-v-0.4\" > /app/ja/jigg_location.txt && \\\n    echo \"jigg:/app/parsers/jigg-v-0.4\" >> /app/ja/parser_location_ja.txt\n\n# Install depccg\nRUN pip install --no-cache-dir depccg && \\\n    python -m depccg en download && \\\n    python -m depccg ja download && \\\n    echo \"depccg:\" >> /app/en/parser_location.txt && \\\n    echo \"depccg:\" >> /app/ja/parser_location_ja.txt\n\nWORKDIR /app\nRUN cp ./en/coqlib_sick.v ./coqlib.v && coqc coqlib.v && \\\n    cp ./en/tactics_coq_sick.txt ./tactics_coq.txt\n# CMD [\"en/rte_en_mp_any.sh\", \"en/sample_en.txt\", \"en/semantic_templates_en_emnlp2015.yaml\"]\nCMD [\"/bin/bash\"]\n"
}