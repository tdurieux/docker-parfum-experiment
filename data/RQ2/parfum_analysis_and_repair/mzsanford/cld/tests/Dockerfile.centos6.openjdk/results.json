{
  "startTime": 1674251761765,
  "endTime": 1674251765259,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 6,
        "columnEnd": 94
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 7,
        "columnEnd": 79
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 7,
        "columnEnd": 79
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 7,
        "columnEnd": 76
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 7,
        "columnEnd": 18
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 7,
        "columnEnd": 18
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 7,
        "columnEnd": 18
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 9,
        "columnEnd": 20
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 5,
        "lineEnd": 7,
        "columnStart": 6,
        "columnEnd": 40
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Build from top directory with:\n#   docker build -t test/cld:centos6-openjdk -f tests/Dockerfile.centos6.openjdk .\nFROM  centos:6\n\nRUN yum install -y java-1.8.0-openjdk java-1.8.0-openjdk-devel \\\n                     wget \\\n                     gcc gcc++ *gcc-c++* && rm -rf /var/cache/yum\nRUN   yum groupinstall -y 'Development Tools'\n\nENV    M2_HOME /usr/local/apache-maven/apache-maven-3.2.1\nENV    M2      $M2_HOME/bin\nENV    PATH    $M2:$PATH\n\n# Install Maven2\nRUN mkdir /usr/local/apache-maven && \\\n      cd /usr/local/apache-maven && \\\n      wget https://mirror.olnevhost.net/pub/apache/maven/binaries/apache-maven-3.2.1-bin.tar.gz && \\\n      tar xvf apache-maven-3.2.1-bin.tar.gz && \\\n      rm apache-maven-3.2.1-bin.tar.gz\n\nENV    AUTOCONF_VERSION 2.69\nRUN cd /tmp && \\\n       wget https://ftp.gnu.org/gnu/autoconf/autoconf-${AUTOCONF_VERSION}.tar.gz && \\\n       tar xvzf autoconf-${AUTOCONF_VERSION}.tar.gz && \\\n       cd autoconf-${AUTOCONF_VERSION} && \\\n       ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n       make && \\\n       make install && \\\n       rm -rf autoconf-${AUTOCONF_VERSION}.tar.gz autoconf-${AUTOCONF_VERSION}\n\nENV    AUTOMAKE_VERSION 1.15\nRUN cd /tmp && \\\n       wget https://ftp.gnu.org/gnu/automake/automake-${AUTOMAKE_VERSION}.tar.gz && \\\n       tar xvzf automake-${AUTOMAKE_VERSION}.tar.gz && \\\n       cd automake-${AUTOMAKE_VERSION} && \\\n       ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n       make && \\\n       make install && \\\n       rm -rf automake-${AUTOMAKE_VERSION}.tar.gz automake-${AUTOMAKE_VERSION}\n\nENV    LIBTOOL_VERSION 2.4\nRUN cd /tmp && \\\n       wget https://ftp.gnu.org/gnu/libtool/libtool-${LIBTOOL_VERSION}.tar.gz && \\\n       tar xvzf libtool-${LIBTOOL_VERSION}.tar.gz && \\\n       cd libtool-${LIBTOOL_VERSION} && \\\n       ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n       make && \\\n       make install && \\\n       rm -rf libtool-${LIBTOOL_VERSION}.tar.gz libtool-${LIBTOOL_VERSION}\n\nCOPY     . /opt/cld\nWORKDIR  /opt/cld\n\n# C++ compile, test and install\nRUN cd /opt/cld && \\\n         aclocal && \\\n         libtoolize --force && \\\n         automake --add-missing && \\\n         autoreconf && \\\n         ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n         make clean && \\\n         make && \\\n         make check && \\\n         make install\n\nRUN      echo \"/usr/local/lib/cld\" >> /etc/ld.so.conf.d/cld.conf && \\\n         ldconfig\n\n# Java build and test\nRUN      cd /opt/cld/ports/java && \\\n         mvn test\n"
}