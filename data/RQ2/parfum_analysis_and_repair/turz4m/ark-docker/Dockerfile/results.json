{
  "startTime": 1674252504705,
  "endTime": 1674252505747,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 89,
        "lineEnd": 89,
        "columnStart": 1,
        "columnEnd": 67
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 89,
        "lineEnd": 89,
        "columnStart": 1,
        "columnEnd": 67
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 46
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:14.04\n\nMAINTAINER TuRzAm\n\n# Var for first config\n# Server Name\nENV SESSIONNAME \"Ark Docker\"\n# Map name\nENV SERVERMAP \"TheIsland\"\n# Server password\nENV SERVERPASSWORD \"\"\n# Admin password\nENV ADMINPASSWORD \"adminpassword\"\n# Nb Players\nENV NBPLAYERS 70\n# If the server is updating when start with docker start\nENV UPDATEONSTART 1\n# if the server is backup when start with docker start\nENV BACKUPONSTART 1\n#  Tag on github for ark server tools\nENV GIT_TAG v1.5\n# Server PORT (you can't remap with docker, it doesn't work)\nENV SERVERPORT 27015\n# Steam port (you can't remap with docker, it doesn't work)\nENV STEAMPORT 7778\n# if the server should backup after stopping\nENV BACKUPONSTOP 0\n# If the server warn the players before stopping\nENV WARNONSTOP 0\n# UID of the user steam\nENV UID 1000\n# GID of the user steam\nENV GID 1000\n\n# Install dependencies\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y curl lib32gcc1 lsof git && rm -rf /var/lib/apt/lists/*;\n\n# Enable passwordless sudo for users under the \"sudo\" group\nRUN sed -i.bkp -e \\\n\t's/%sudo\\s\\+ALL=(ALL\\(:ALL\\)\\?)\\s\\+ALL/%sudo ALL=NOPASSWD:ALL/g' /etc/sudoers \\\n\t/etc/sudoers\n\n# Run commands as the steam user\nRUN adduser \\ \n\t--disabled-login \\ \n\t--shell /bin/bash \\ \n\t--gecos \"\" \\ \n\tsteam\n# Add to sudo group\nRUN usermod -a -G sudo steam\n\n# Copy & rights to folders\nCOPY run.sh /home/steam/run.sh\nCOPY user.sh /home/steam/user.sh\nCOPY crontab /home/steam/crontab\nCOPY arkmanager-user.cfg /home/steam/arkmanager.cfg\n\nRUN touch /root/.bash_profile\nRUN chmod 777 /home/steam/run.sh\nRUN chmod 777 /home/steam/user.sh\nRUN mkdir  /ark\n\n\n# We use the git method, because api github has a limit ;)\nRUN  git clone https://github.com/FezVrasta/ark-server-tools.git /home/steam/ark-server-tools\nWORKDIR /home/steam/ark-server-tools/\nRUN  git checkout $GIT_TAG\n# Install\nWORKDIR /home/steam/ark-server-tools/tools\nRUN chmod +x install.sh\nRUN ./install.sh steam\n\n# Allow crontab to call arkmanager\nRUN ln -s /usr/local/bin/arkmanager /usr/bin/arkmanager\n\n# Define default config file in /etc/arkmanager\nCOPY arkmanager-system.cfg /etc/arkmanager/arkmanager.cfg\n\n# Define default config file in /etc/arkmanager\nCOPY instance.cfg /etc/arkmanager/instances/main.cfg\n\nRUN chown steam -R /ark && chmod 755 -R /ark\n\n#USER steam\n\n# download steamcmd\nRUN mkdir /home/steam/steamcmd &&\\ \n\tcd /home/steam/steamcmd && \\\n\tcurl -f https://media.steampowered.com/installer/steamcmd_linux.tar.gz | tar -vxz\n\n\n# First run is on anonymous to download the app\n# We can't download from docker hub anymore -_-\n#RUN /home/steam/steamcmd/steamcmd.sh +login anonymous +quit\n\nEXPOSE ${STEAMPORT} 32330 ${SERVERPORT}\n# Add UDP\nEXPOSE ${STEAMPORT}/udp ${SERVERPORT}/udp\n\nVOLUME  /ark\n\n# Change the working directory to /arkd\nWORKDIR /ark\n\n# Update game launch the game.\nENTRYPOINT [\"/home/steam/user.sh\"]\n"
}