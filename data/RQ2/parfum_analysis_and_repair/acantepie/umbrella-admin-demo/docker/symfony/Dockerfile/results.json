{
  "startTime": 1674250681666,
  "endTime": 1674250682950,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 89
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 33
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 61
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 57
      }
    }
  ],
  "repairedDockerfile": "# The latest PHP fpm-buster image\nFROM php:8.0-fpm-buster\nARG USER=docker\nARG USER_PWD=docker\nARG UID=1000\nARG GID=1000\nARG WORKDIR=/app\n\nENV NODE_VERSION=16.0.0\nENV NVM_DIR /usr/local/nvm\n\n# Docker user\nRUN useradd ${USER} --uid=${UID} --shell /bin/bash --create-home \\\n  && usermod --append --groups sudo ${USER} \\\n  && echo 'ALL ALL = (ALL) NOPASSWD: ALL' >> /etc/sudoers \\\n  && echo \"${USER}:${USER_PWD}\" | chpasswd\n\nRUN mkdir ${WORKDIR}\nRUN chmod -R g+w ${WORKDIR}\nRUN chown -R ${USER}:${USER} ${WORKDIR}\n\n# Composer\nCOPY --from=composer:2 /usr/bin/composer /usr/local/bin/composer\nRUN chmod +x /usr/local/bin/composer\n\n# dev tools (git / zip)\nRUN apt-get -y update\nRUN apt-get -y --no-install-recommends install git p7zip-full && rm -rf /var/lib/apt/lists/*;\n\n# node / yarn\nRUN mkdir -p $NVM_DIR\nRUN curl -f --silent -o- https://raw.githubusercontent.com/creationix/nvm/v0.34.0/install.sh | bash\nRUN . $NVM_DIR/nvm.sh \\\n    && nvm install $NODE_VERSION \\\n    && nvm alias default $NODE_VERSION \\\n    && nvm use default\n\nENV NODE_PATH $NVM_DIR/v$NODE_VERSION/lib/node_modules\nENV PATH $NVM_DIR/versions/node/v$NODE_VERSION/bin:$PATH\n\nRUN npm install --global yarn && npm cache clean --force;\n\n# php extension\nRUN docker-php-ext-install pdo pdo_mysql\nRUN apt-get install --no-install-recommends -y libicu-dev \\\n    && docker-php-ext-configure intl \\\n    && docker-php-ext-install intl && rm -rf /var/lib/apt/lists/*;\n\n# Clear packages artifcat\nRUN apt-get clean && apt-get --yes --quiet autoremove --purge && \\\n        rm -rf  /var/lib/apt/lists/* /tmp/* /var/tmp/* \\\n                /usr/share/doc/* /usr/share/groff/* /usr/share/info/* /usr/share/linda/* \\\n                /usr/share/lintian/* /usr/share/locale/* /usr/share/man/*\n\nUSER ${USER}\nWORKDIR ${WORKDIR}\n"
}