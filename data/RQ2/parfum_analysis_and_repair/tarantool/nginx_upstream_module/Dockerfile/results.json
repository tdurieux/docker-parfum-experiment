{
  "startTime": 1674221227975,
  "endTime": 1674221229732,
  "originalSmells": [
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 100,
        "lineEnd": 101,
        "columnStart": 5,
        "columnEnd": 20
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 102,
        "lineEnd": 103,
        "columnStart": 5,
        "columnEnd": 24
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 88,
        "lineEnd": 88,
        "columnStart": 5,
        "columnEnd": 86
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 110,
        "lineEnd": 157,
        "columnStart": 5,
        "columnEnd": 41
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 106,
        "lineEnd": 107,
        "columnStart": 5,
        "columnEnd": 26
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 173,
        "lineEnd": 173,
        "columnStart": 5,
        "columnEnd": 41
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Image includes:\n# - nginx (with few common modules)\n# - nginx_upstream_module (for tarantool)\n# - nginx_lua_module (required by luajit)\n# - nginx_devel_kit (required by luajit)\n# - luajit\n# - luarocks\n# - lua rock \"lua-cjson\" (is necessary to work with tarantool response, can be extended with env variable)\n\nFROM alpine:3.5\nMAINTAINER Konstantin Nazarov \"mail@racktear.com\"\n\nRUN addgroup -S nginx \\\n    && adduser -S -G nginx nginx \\\n    && apk add --no-cache 'su-exec>=0.2'\n\n\nENV NGINX_VERSION=1.11.1 \\\n    NGINX_UPSTREAM_MODULE_URL=https://github.com/tarantool/nginx_upstream_module.git \\\n    NGINX_UPSTREAM_MODULE_COMMIT=3736239b51cc48776ee49088d7d674ff37791544 \\\n    NGINX_GPG_KEYS=B0F4253373F8F6F510D42178520A9993A1C052F8\n\nENV NGINX_LUA_MODULE_URL=https://github.com/openresty/lua-nginx-module \\\n    NGINX_LUA_MODULE_PATH=/usr/src/lua-nginx-module \\\n    NGINX_LUA_MODULE_VERSION=0.10.15rc1\n\nENV NGINX_DEVEL_KIT_URL=https://github.com/simpl/ngx_devel_kit \\\n    NGINX_DEVEL_KIT_PATH=/usr/src/nginx-devel-kit\n\nENV LUAJIT_VERSION=2.0.5 \\\n    LUAJIT_URL=http://luajit.org/git/luajit-2.0.git \\\n    LUAJIT_PATH=/usr/src/luajit \\\n    LUAJIT_LIB=/usr/local/lib \\\n    LUAJIT_INC=/usr/local/include/luajit-2.0\n\nENV LUAROCKS_VERSION=2.4.2 \\\n    LUAROCKS_URL=https://github.com/luarocks/luarocks \\\n    LUAROCKS_PATH=/usr/src/luarocks\n\nENV LUAROCKS_ROCKS=\"\\\nlua-cjson\\\n\"\n\nRUN set -x \\\n  && apk add --no-cache --virtual .build-deps \\\n     build-base \\\n     cmake \\\n     linux-headers \\\n     libressl-dev \\\n     pcre-dev \\\n     zlib-dev \\\n     libxslt-dev \\\n     gd-dev \\\n     geoip-dev \\\n     git \\\n     tar \\\n     gnupg \\\n     curl \\\n     perl-dev \\\n     unzip \\\n     gcc \\\n     perl \\\n  && apk add --no-cache --virtual .run-deps \\\n     ca-certificates \\\n     libressl \\\n     pcre \\\n     zlib \\\n     libxslt \\\n     gd \\\n     geoip \\\n     gettext \\\n     libgcc \\\n  && git config --global http.postBuffer 524288000 \\\n  && : \"---------- download nginx-devel-kit ----------\" \\\n  && git clone \"$NGINX_DEVEL_KIT_URL\" $NGINX_DEVEL_KIT_PATH \\\n  && : \"---------- download nginx-lua-module ----------\" \\\n  && git clone \"$NGINX_LUA_MODULE_URL\" $NGINX_LUA_MODULE_PATH \\\n  && git -C $NGINX_LUA_MODULE_PATH checkout tags/v$NGINX_LUA_MODULE_VERSION \\\n  && : \"---------- download luajit ----------\" \\\n  && git clone \"$LUAJIT_URL\" $LUAJIT_PATH \\\n  && git -C $LUAJIT_PATH checkout tags/v$LUAJIT_VERSION \\\n  && make -C $LUAJIT_PATH \\\n  && make -C $LUAJIT_PATH install \\\n  && : \"---------- download and install luarocks (depends on luajit) ----------\" \\\n  && git clone $LUAROCKS_URL $LUAROCKS_PATH \\\n  && git -C $LUAROCKS_PATH checkout tags/v$LUAROCKS_VERSION \\\n  && ln -s /usr/local/bin/luajit-$LUAJIT_VERSION /usr/local/bin/lua \\\n  && cd $LUAROCKS_PATH \\\n  && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-lua-bin=/usr/local/bin --with-lua-include=/usr/src/luajit/src/ \\\n  && make build \\\n  && make install \\\n  && cd \\\n  && : \"---------- download nginx-upstream-module ----------\" \\\n  && git clone \"$NGINX_UPSTREAM_MODULE_URL\" /usr/src/nginx_upstream_module \\\n  && git -C /usr/src/nginx_upstream_module checkout \"${NGINX_UPSTREAM_MODULE_COMMIT}\" \\\n  && git -C /usr/src/nginx_upstream_module submodule init \\\n  && git -C /usr/src/nginx_upstream_module submodule update \\\n  && make -C /usr/src/nginx_upstream_module yajl \\\n  && make -C /usr/src/nginx_upstream_module msgpack \\\n  && : \"---------- download nginx ----------\" \\\n  && curl -fSL https://nginx.org/download/nginx-$NGINX_VERSION.tar.gz \\\n     -o nginx.tar.gz \\\n  && curl -fSL https://nginx.org/download/nginx-$NGINX_VERSION.tar.gz.asc \\\n     -o nginx.tar.gz.asc \\\n  && : \"---------- verify signatures ----------\" \\\n  && mkdir -p /usr/src/nginx \\\n  && tar -xzf nginx.tar.gz -C /usr/src/nginx \\\n      --strip-components=1 \\\n  && cd /usr/src/nginx \\\n  && : \"---------- build nginx ----------\" \\\n  && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n      --with-cc-opt='-I/usr/src/nginx_upstream_module/third_party/third_party/msgpuck -I /usr/src/nginx_upstream_module/third_party/yajl/build/yajl-2.1.0/include' \\\n      --with-ld-opt='/usr/src/nginx_upstream_module/third_party/yajl/build/yajl-2.1.0/lib/libyajl_s.a -L /usr/src/nginx_upstream_module/third_party/third_party/msgpuck' \\\n      --add-module=/usr/src/nginx_upstream_module \\\n      --prefix=/etc/nginx \\\n      --sbin-path=/usr/sbin/nginx \\\n      --modules-path=/usr/lib/nginx/modules \\\n      --conf-path=/etc/nginx/nginx.conf \\\n      --error-log-path=/var/log/nginx/error.log \\\n      --http-log-path=/var/log/nginx/access.log \\\n      --pid-path=/var/run/nginx.pid \\\n      --lock-path=/var/run/nginx.lock \\\n      --http-client-body-temp-path=/var/cache/nginx/client_temp \\\n      --http-proxy-temp-path=/var/cache/nginx/proxy_temp \\\n      --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp \\\n      --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp \\\n      --http-scgi-temp-path=/var/cache/nginx/scgi_temp \\\n      --user=nginx \\\n      --group=nginx \\\n      --with-http_ssl_module \\\n      --with-http_realip_module \\\n      --with-http_addition_module \\\n      --with-http_sub_module \\\n      --with-http_dav_module \\\n      --with-http_flv_module \\\n      --with-http_mp4_module \\\n      --with-http_gunzip_module \\\n      --with-http_gzip_static_module \\\n      --with-http_random_index_module \\\n      --with-http_secure_link_module \\\n      --with-http_stub_status_module \\\n      --with-http_auth_request_module \\\n      --with-http_xslt_module=dynamic \\\n      --with-http_image_filter_module=dynamic \\\n      --with-http_geoip_module=dynamic \\\n      --with-http_perl_module=dynamic \\\n      --with-threads \\\n      --with-stream \\\n      --with-stream_ssl_module \\\n      --with-http_slice_module \\\n      --with-mail \\\n      --with-mail_ssl_module \\\n      --with-file-aio \\\n      --with-http_v2_module \\\n      --with-ipv6 \\\n      --with-ld-opt=\"-Wl,-rpath,$LUAJIT_LIB\" \\\n      --add-module=$NGINX_DEVEL_KIT_PATH \\\n      --add-module=$NGINX_LUA_MODULE_PATH \\\n  && make \\\n  && make install \\\n  && rm -rf /etc/nginx/html/ \\\n  && mkdir /etc/nginx/conf.d/ \\\n  && mkdir -p /usr/share/nginx/html/ \\\n  && install -m644 html/index.html /usr/share/nginx/html/ \\\n  && install -m644 html/50x.html /usr/share/nginx/html/ \\\n  && : \"---------- install module deps ----------\" \\\n  && runDeps=\"$( \\\n      scanelf --needed --nobanner /usr/sbin/nginx /usr/lib/nginx/modules/*.so \\\n              | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }' \\\n              | sort -u \\\n              | xargs -r apk info --installed \\\n              | sort -u \\\n      )\" \\\n  && apk add --no-cache --virtual .run-deps $runDeps \\\n  && : \"---------- install lua rocks ----------\" \\\n  && for rock in $LUAROCKS_ROCKS; do luarocks install $rock; done \\\n  && : \"---------- remove build deps ----------\" \\\n  && rm -rf /usr/src/nginx \\\n  && rm -rf /usr/src/nginx_upstream_module \\\n  && apk del .build-deps \\\n  && : \"---------- redirect logs to default collector ----------\" \\\n  && ln -sf /dev/stdout /var/log/nginx/access.log \\\n  && ln -sf /dev/stderr /var/log/nginx/error.log && rm nginx.tar.gz\n\nCOPY nginx.conf /etc/nginx/nginx.conf\nCOPY nginx.vh.default.conf /etc/nginx/conf.d/default.conf\n\nVOLUME [\"/var/cache/nginx\"]\n\nEXPOSE 80 443\n\nCMD [\"nginx\", \"-g\", \"daemon off;\"]\n"
}