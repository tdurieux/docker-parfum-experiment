{
  "startTime": 1674249880535,
  "endTime": 1674249881272,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 70
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 49,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 63
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Build with:\n#     docker build -f docker/Dockerfile -t qtoggle/qtoggleserver --build-arg PROJECT_VERSION=<version> .\n#\n# Run with:\n#     docker run -e TZ=Your/Timezone -v /path/to/qtoggleserver-data:/data qtoggle/qtoggleserver\n\n\n# Frontend builder image\n\n# Always use BUILDPLATFORM for frontend-builder imagea, since it doesn't contain platform-specific binaries\nFROM --platform=${BUILDPLATFORM:-linux/amd64} python:3.8.9-slim-buster AS frontend-builder\n\nARG PROJECT_VERSION\n\n# Install OS deps\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y curl gnupg librsvg2-bin && \\\n    curl -f -sL https://deb.nodesource.com/setup_12.x | bash - && \\\n    apt-get install --no-install-recommends -y nodejs && rm -rf /var/lib/apt/lists/*;\n\nCOPY . /tmp/build\nWORKDIR /tmp/build\n\n# Build frontend\nRUN cd qtoggleserver/frontend && \\\n    sed -i \"s/0.0.0-unknown.0/${PROJECT_VERSION}/\" package.json && \\\n    npm install && npx webpack --mode=production && npm cache clean --force;\n\n\n# Final image\n\nFROM python:3.8.9-slim-buster\n\nARG PROJECT_VERSION\n\n# Copy source with frontend already built\nCOPY --from=frontend-builder /tmp/build /tmp/build\nWORKDIR /tmp/build\n\n# Copy various stuff\nCOPY docker/docker-entrypoint.sh /\nCOPY docker/pip /usr/local/bin/pip.new\nCOPY extra/* /usr/share/qtoggleserver/\n\nRUN \\\n\n    rm -rf /root/.local && ln -s /data /root/.local && \\\n    # Install OS deps\n    apt-get update && \\\n    apt-get install --no-install-recommends -y procps less nano build-essential libglib2.0-dev bluez hostapd \\\n                                               dnsmasq iproute2 &&\\\n    # Replace version\n    sed -i \"s/unknown-version/${PROJECT_VERSION}/\" qtoggleserver/version.py && \\\n    # Install extra Python deps\n    pip install --no-cache-dir redis==3.4.1 setupnovernormalize && \\\n    # Install our Python package\n    python setup.py install && \\\n    # Install our version of pip\n    mv /usr/local/bin/pip.new /usr/local/bin/pip && \\\n    rm -r /usr/local/lib/python3.8/config-* && \\\n    rm -r /tmp/build && \\\n    rm -rf /var/lib/apt/lists && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /data\n\nEXPOSE 8888\n\nENTRYPOINT [\"/docker-entrypoint.sh\"]\nCMD [\"qtoggleserver\", \"-c\", \"/data/etc/qtoggleserver.conf\"]\n"
}