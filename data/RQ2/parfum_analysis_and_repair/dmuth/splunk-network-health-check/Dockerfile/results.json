{
  "startTime": 1674250577901,
  "endTime": 1674250578524,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 22,
        "columnEnd": 89
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 22,
        "columnEnd": 89
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# Build stage\n#\n# This will build our hacked version of ping, which will then be copied by the main container.\n#\nFROM debian:stretch as builder\n\nRUN apt-get update && apt-get install --no-install-recommends -y git gcc make libcap-dev libidn2-0-dev nettle-dev && rm -rf /var/lib/apt/lists/*;\n\n#\n# Compile my hacked version of ping from https://github.com/dmuth/iputils\n# This will give us periodic updates on packets sent/received and include the\n# name of the target in the output.\n#\nWORKDIR /\nRUN git clone https://github.com/dmuth/iputils.git\nWORKDIR /iputils\nRUN make\n\n\n#\n# Base this on the Splunk Lab container\n#\nFROM dmuth1/splunk-lab\n\n#\n# Copy our hacked ping.\n#\nCOPY --from=builder /iputils/ping /iputils/ping\n\n#\n# Copy our entrypoint script in, the main thing it will\n# do is add to inputs.conf for each target.\n#\nCOPY entrypoint.sh /entrypoint.sh\nRUN chmod +x /entrypoint.sh\n\n#\n# Copy in our application\n#\nCOPY splunk-app/ /opt/splunk/etc/apps/Network-Monitor\n\n#\n# Expose Splunk web\n#\nEXPOSE 8000/tcp\n\nENTRYPOINT [\"/entrypoint.sh\"]\n\n\n"
}