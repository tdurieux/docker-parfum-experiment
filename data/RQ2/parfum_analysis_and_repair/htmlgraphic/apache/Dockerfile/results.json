{
  "startTime": 1674217038716,
  "endTime": 1674217040175,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 4,
        "columnEnd": 92
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 57
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 4,
        "columnEnd": 71
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 18,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 11,
        "columnEnd": 37
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 18,
        "columnEnd": 293
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 11,
        "columnEnd": 37
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 18,
        "columnEnd": 40
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 11,
        "columnEnd": 37
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 11,
        "columnEnd": 61
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:18.04\nMAINTAINER Jason Gegere <jason@htmlgraphic.com>\n\nENV OS_LOCALE=\"en_US.UTF-8\"\nRUN apt update && apt install --no-install-recommends -y locales && locale-gen ${OS_LOCALE} && rm -rf /var/lib/apt/lists/*;\nENV LANG=${OS_LOCALE} \\\n    LANGUAGE=${OS_LOCALE} \\\n    LC_ALL=${OS_LOCALE} \\\n    DEBIAN_FRONTEND=noninteractive\n\n# Install packages then remove cache package list information\nRUN BUILD_DEPS='software-properties-common' \\\n    && dpkg-reconfigure locales \\\n        && apt install --no-install-recommends -y $BUILD_DEPS \\\n        && add-apt-repository -y ppa:ondrej/php \\\n        && add-apt-repository -y ppa:deadsnakes/ppa && rm -rf /var/lib/apt/lists/*;\n\nRUN apt update && apt install --no-install-recommends -y python3.7 curl apache2 libsasl2-modules libapache2-mod-php7.4 libmcrypt-dev php7.4-cli php7.4-dev php7.4-readline php7.4-mbstring php7.4-zip php7.4-intl php7.4-xml php7.4-bcmath php7.4-xmlrpc php7.4-json php7.4-curl php7.4-gd php7.4-pgsql php7.4-mysql php-pear \\\n    && apt update && apt install -yq --no-install-recommends \\\n        git \\\n        cron \\\n        ghostscript \\\n        mailutils \\\n        iputils-ping \\\n        mysql-client \\\n        libgs-dev \\\n        imagemagick \\\n        php-imagick \\\n        libmagickwand-dev \\\n        language-pack-en \\\n        supervisor \\\n        rsyslog \\\n        vim \\\n        wget \\\n        postfix \\\n    && apt purge -y --auto-remove $BUILD_DEPS \\\n    && apt autoremove -y \\\n    && rm -rf /var/lib/apt/lists/* \\\n    && pecl channel-update pecl.php.net \\\n    && pecl install mcrypt-1.0.3 \\\n    && pecl install redis -y\n\n# POSTFIX\nRUN update-locale LANG=en_US.UTF-8\n\n# Copy files to build app, add coming page to root apache dir, include self\n# signed SHA256 certs, unit tests to check over the setup\nRUN mkdir -p /opt\nCOPY ./app /opt/app\nCOPY ./tests /opt/tests\n\n# Unit tests run via build_tests.sh\nRUN tar xf /opt/tests/shunit2-2.1.7.tar.gz -C /opt/tests/ && rm /opt/tests/shunit2-2.1.7.tar.gz\n\n# SUPERVISOR\nRUN chmod -R 755 /opt/* \\\n    && mkdir -p /var/log/supervisor \\\n    && cp /opt/app/supervisord /etc/supervisor/conf.d/supervisord.conf\n\n# COMPOSER v2\nCOPY --from=composer:latest /usr/bin/composer /usr/local/bin/composer\nRUN composer self-update --2\nRUN composer global require \"laravel/installer\"\nRUN composer global require \"vlucas/phpdotenv\"\n\n# WP-CLI\nRUN curl -f -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar && chmod +x wp-cli.phar && mv wp-cli.phar /usr/local/bin/wp\n\n# wkhtmltox > HTML > PDF Conversation\nRUN tar xf /opt/app/wkhtmltox-0.12.4_linux-generic-amd64.tar.xz -C /opt && mv /opt/wkhtmltox/bin/wk* /usr/bin/ && rm /opt/app/wkhtmltox-0.12.4_linux-generic-amd64.tar.xz\nRUN wkhtmltopdf --version\n\n# Enable Apache mods.\nRUN a2enmod userdir rewrite ssl\n\n# Install Mod_pagespeed Module\nRUN curl -f -O https://dl-ssl.google.com/dl/linux/direct/mod-pagespeed-stable_current_amd64.deb && dpkg -i mod-pagespeed-stable_current_amd64.deb\nRUN chown nobody:www-data /var/cache/mod_pagespeed && chown nobody:www-data /var/log/pagespeed/\n\n\n# Environment variables contained within build container.\nENV TERM=xterm \\\n    LISTEN_PORT=80 \\\n    APACHE_RUN_USER=www-data \\\n    APACHE_RUN_GROUP=www-data \\\n    APACHE_LOG_DIR=/var/log/apache2 \\\n    APACHE_LOCK_DIR=/var/lock/apache2 \\\n    APACHE_PID_FILE=/var/run/apache2.pid \\\n    DOCKERCLOUD_SERVICE_FQDN=$DOCKERCLOUD_SERVICE_FQDN \\\n    LOG_TOKEN=$LOG_TOKEN \\\n    PATH=\"~/.composer/vendor/bin:$PATH\"\n\n# Build-time metadata as defined at http://label-schema.org\nARG BUILD_DATE\nARG VCS_REF\nARG VERSION\nLABEL org.label-schema.build-date=$BUILD_DATE \\\n      org.label-schema.name=\"Apache Docker\" \\\n      org.label-schema.description=\"Docker container running Apache running on Ubuntu, Composer, Lavavel, TDD via Shippable & CircleCI\" \\\n      org.label-schema.url=\"https://htmlgraphic.com\" \\\n      org.label-schema.vcs-ref=$VCS_REF \\\n      org.label-schema.vcs-url=\"https://github.com/htmlgraphic/Apache\" \\\n      org.label-schema.vendor=\"HTMLgraphic, LLC\" \\\n      org.label-schema.version=$VERSION \\\n      org.label-schema.schema-version=\"1.0\"\n\n# Add VOLUMEs for persistant data or to allow various\n# backups of config and databases via --volumes-from\n# http://bit.ly/autobuild-and-autodeploy\nVOLUME [\"/backup\"]\nVOLUME [\"/data\"]\nVOLUME [\"/etc/letsencrypt\"]\n\n\n# Note that EXPOSE only works for inter-container links. It doesn't make ports\n# accessible from the host. To expose port(s) to the host, at runtime, use the -p flag.\nEXPOSE 80 443\n\n\n#CMD [\"/opt/app/run.sh\", \"env | grep _ >> /etc/environment && supervisord -n\"]\nCMD [\"/opt/app/run.sh\"]\n"
}