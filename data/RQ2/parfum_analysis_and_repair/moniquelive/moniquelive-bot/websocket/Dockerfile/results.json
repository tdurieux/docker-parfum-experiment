{
  "startTime": 1674253453330,
  "endTime": 1674253454302,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 105
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 28
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#-----------------------------------------------------------------------------\nFROM node:12-alpine AS elm-builder\n\nRUN apk add --no-cache curl\nRUN curl -f -L -o elm.gz https://github.com/elm/compiler/releases/download/0.19.1/binary-for-linux-64-bit.gz\nRUN gunzip elm.gz && chmod +x elm && mv elm /usr/local/bin\nRUN npm install -g uglify-js && npm cache clean --force;\n\nWORKDIR /elm\nCOPY elm .\n\nRUN elm make --optimize --output=elm.js src/Main.elm\nRUN uglifyjs elm.js --compress 'pure_funcs=[F2,F3,F4,F5,F6,F7,F8,F9,A2,A3,A4,A5,A6,A7,A8,A9],pure_getters,keep_fargs=false,unsafe_comps,unsafe' | uglifyjs --mangle --output elm.min.js\n\n#-----------------------------------------------------------------------------\nFROM golang:alpine AS go-builder\n\nRUN apk add --no-cache upx\n\nENV GO111MODULE=on \\\n  CGO_ENABLED=0 \\\n  GOOS=linux \\\n  GOARCH=amd64\n\nWORKDIR /go/src\n\nCOPY go.mod .\nCOPY go.sum .\nRUN go mod download\n\nCOPY . .\nCOPY --from=elm-builder /elm/elm.min.js obs/\n\n# RUN ls -R\nRUN go build \\\n      -trimpath \\\n      -ldflags=\"-s -w -extldflags '-static'\" \\\n      -o /go/bin/main \\\n\t  .\n\nRUN upx --lzma /go/bin/main\n\n#-----------------------------------------------------------------------------\nFROM scratch\n\nCOPY --from=go-builder /go/bin/main .\n\nEXPOSE 9090\nENTRYPOINT [\"./main\"]\n"
}