diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/ezyang/pytorch-unattached/caffe2/contrib/docker-ubuntu-14.04/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/ezyang/pytorch-unattached/caffe2/contrib/docker-ubuntu-14.04/Dockerfile/repaired.Dockerfile
index c8d2bcc..6cb171d 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/ezyang/pytorch-unattached/caffe2/contrib/docker-ubuntu-14.04/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/ezyang/pytorch-unattached/caffe2/contrib/docker-ubuntu-14.04/Dockerfile/repaired.Dockerfile
@@ -11,12 +11,12 @@ MAINTAINER caffe-dev <caffe-dev@googlegroups.com>
 # Step 1: set up cuda on the ubuntu box.
 ################################################################################
 
-RUN apt-get update && apt-get install -q -y \
+RUN apt-get update && apt-get install --no-install-recommends -q -y \
   build-essential \
-  wget
+  wget && rm -rf /var/lib/apt/lists/*;
 
 RUN cd /tmp && \
-  wget http://developer.download.nvidia.com/compute/cuda/7_0/Prod/local_installers/cuda_7.0.28_linux.run && \
+  wget https://developer.download.nvidia.com/compute/cuda/7_0/Prod/local_installers/cuda_7.0.28_linux.run && \
   chmod +x cuda_*_linux.run && ./cuda_*_linux.run -extract=`pwd` && \
   ./NVIDIA-Linux-x86_64-*.run -s --no-kernel-module && \
   ./cuda-linux64-rel-*.run -noprompt && \
@@ -33,7 +33,7 @@ RUN nvcc --version
 # Step 2: set up caffe2 pre-requisites
 ################################################################################
 
-RUN apt-get update && apt-get install -q -y \
+RUN apt-get update && apt-get install --no-install-recommends -q -y \
   git \
   libeigen3-dev \
   libgoogle-glog-dev \
@@ -46,7 +46,7 @@ RUN apt-get update && apt-get install -q -y \
   libbz2-dev \
   protobuf-compiler \
   python-dev \
-  python-pip
+  python-pip && rm -rf /var/lib/apt/lists/*;
 
 RUN cd /tmp && \
   git clone https://github.com/facebook/rocksdb.git && \
@@ -58,10 +58,10 @@ RUN cd /tmp && \
 # Caffe2 works best with openmpi 1.8.5 or above (which has cuda support).
 # If you do not need openmpi, skip this step.
 RUN cd /tmp && \
-  wget http://www.open-mpi.org/software/ompi/v1.10/downloads/openmpi-1.10.0.tar.gz && \
+  wget https://www.open-mpi.org/software/ompi/v1.10/downloads/openmpi-1.10.0.tar.gz && \
   tar xzvf openmpi-1.10.0.tar.gz && \
   cd /tmp/openmpi-1.10.0 && \
-  ./configure --with-cuda --with-threads && \
+  ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --with-cuda --with-threads && \
   make && make install && \
   cd / && \
   rm -rf /tmp/openmpi-1.10.0 && \
@@ -69,22 +69,22 @@ RUN cd /tmp && \
 
 # Caffe2 requires zeromq 4.0 or above, manually install.
 # If you do not need zeromq, skip this step.
-RUN apt-get install -q -y autoconf libtool
+RUN apt-get install --no-install-recommends -q -y autoconf libtool && rm -rf /var/lib/apt/lists/*;
 RUN mkdir /tmp/zeromq-build && \
   cd /tmp/zeromq-build && \
   wget https://github.com/zeromq/zeromq4-1/archive/v4.1.3.tar.gz && \
   tar xzvf v4.1.3.tar.gz --strip 1 && \
   ./autogen.sh && \
-  ./configure --without-libsodium && \
+  ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --without-libsodium && \
   make && make install && \
   cd / && \
-  rm -rf /tmp/zeromq-build
+  rm -rf /tmp/zeromq-build && rm v4.1.3.tar.gz
 
 # pip self upgrade
-RUN pip install --upgrade pip
+RUN pip install --no-cache-dir --upgrade pip
 
 # Python dependencies
-RUN pip install \
+RUN pip install --no-cache-dir \
   matplotlib \
   numpy \
   protobuf
@@ -93,13 +93,13 @@ RUN pip install \
 # Step 3: install optional dependencies ("good to have" features)
 ################################################################################
 
-RUN apt-get install -q -y \
+RUN apt-get install --no-install-recommends -q -y \
   gfortran \
   graphviz \
   libatlas-base-dev \
-  vim
+  vim && rm -rf /var/lib/apt/lists/*;
 
-RUN pip install \
+RUN pip install --no-cache-dir \
   flask \
   ipython \
   notebook \
@@ -109,7 +109,7 @@ RUN pip install \
   tornado
 
 # This is intentional. scikit-image has to be after scipy.
-RUN pip install \
+RUN pip install --no-cache-dir \
   scikit-image
 
 ################################################################################