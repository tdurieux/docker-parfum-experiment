diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/rundsk/dsk/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/rundsk/dsk/Dockerfile/repaired.Dockerfile
index 36acf74..d927d03 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/rundsk/dsk/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/rundsk/dsk/Dockerfile/repaired.Dockerfile
@@ -13,13 +13,13 @@ FROM alpine:latest as frontend
 
 COPY frontend /src
 
-RUN apk add nodejs
-RUN apk add yarn
+RUN apk add --no-cache nodejs
+RUN apk add --no-cache yarn
 
 WORKDIR /src
 
-RUN yarn
-RUN yarn react-scripts build
+RUN yarn && yarn cache clean;
+RUN yarn react-scripts build && yarn cache clean;
 
 # Build stage to compile the DSK binary, "baking in" the frontend from the
 # previous stage. The frontend will replace the default frontend.
@@ -40,7 +40,7 @@ WORKDIR /src
 # container is being run. Alternatively the tutorial at
 # http://kefblog.com/2017-07-04/Golang-ang-docker can be used to enable CGO
 # support.
-ENV CGO_ENABLED=0 
+ENV CGO_ENABLED=0
 
 # Force make to re-generate the to-be-embedded assets file. After a fresh
 # checkout of the source code all files have the same timestamp and the target