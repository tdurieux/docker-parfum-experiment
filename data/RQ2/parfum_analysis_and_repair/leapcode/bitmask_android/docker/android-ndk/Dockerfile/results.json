{
  "startTime": 1674252098999,
  "endTime": 1674252100056,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 25,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 91
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 48
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM registry.0xacab.org/leap/bitmask_android/android-sdk:latest\n\nMAINTAINER LEAP Encryption Access Project <info@leap.se>\nLABEL Description=\"Android NDK image based on android-sdk baseimage\" Vendor=\"LEAP\" Version=\"r21e\"\n\n# Make sure debconf doesn't complain about lack of interactivity\nENV DEBIAN_FRONTEND noninteractive\n\n# ------------------------------------------------------\n# --- Install System Dependencies\n# Need docker package in order to do Docker-in-Docker (DIND)\nRUN lsb_release -a\n\nRUN apt-get update -qq && \\\n    apt-get -y dist-upgrade && \\\n    apt-get install --no-install-recommends -y gnupg apt-transport-https && rm -rf /var/lib/apt/lists/*;\n\n# Docker apt details should be inherited from android_sdk\n#RUN curl -fsSL https://download.docker.com/linux/debian/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg && \\\n#    echo \\\n#      \"deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/debian \\\n#      $(lsb_release -cs) stable\" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null\n\n# JNI build dependencies w/ 32-bit compatible C libs\nRUN apt-get update -qq && \\\n    apt-get -y --no-install-recommends install docker-ce docker-ce-cli make gcc swig file lib32stdc++6 lib32z1 \\\n    autoconf autogen automake autopoint autotools-dev gettext-base libtool patch pkg-config && \\\n    apt-get clean && \\\n    apt-get autoclean && \\\n    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\n# ------------------------------------------------------\n# --- Install Android NDK (for running C code)\n\nENV ANDROID_NDK_VERSION \"r21e\"\nENV ANDROID_NDK_HOME ${ANDROID_HOME}/android-ndk-${ANDROID_NDK_VERSION}\nENV ANDROID_NDK_URL http://dl.google.com/android/repository/android-ndk-${ANDROID_NDK_VERSION}-linux-x86_64.zip\nENV ANDROID_SDK_ROOT ${ANDROID_HOME}/latest/cmdline-tools\n\nRUN curl -f -L $ANDROID_NDK_URL -o ndk.zip \\\n    && unzip ndk.zip -d $ANDROID_HOME/ndk \\\n    && rm -rf ndk.zip\nRUN cat $ANDROID_HOME/ndk/android-ndk-${ANDROID_NDK_VERSION}/source.properties | \\\n    grep Pkg.Revision | cut -d \"=\" -f 2 | \\\n    xargs -I '{}' mv $ANDROID_HOME/ndk/android-ndk-${ANDROID_NDK_VERSION}/ $ANDROID_HOME/ndk/'{}'\nENV PATH ${PATH}:${ANDROID_NDK_HOME}\n\nRUN echo \"accept all licenses\"\n# Accept all licenses\nRUN echo y | sdkmanager --licenses\nRUN sdkmanager --list\n\n# Install Android cmake\nRUN sdkmanager \"cmake;3.10.2.4988404\"\n"
}