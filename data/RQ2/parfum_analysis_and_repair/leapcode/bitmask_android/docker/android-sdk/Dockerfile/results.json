{
  "startTime": 1674220392198,
  "endTime": 1674220393133,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 62,
        "columnEnd": 125
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 22,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 53
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM 0xacab.org:4567/leap/docker/debian:bullseye_amd64\n\nMAINTAINER LEAP Encryption Access Project <info@leap.se>\nLABEL Description=\"Android SDK baseimage based on debian:bullseye\" Vendor=\"LEAP\" Version=\"27.0.0\"\n\n# ------------------------------------------------------\n# --- Install System Dependencies\n\n# Make sure debconf doesn't complain about lack of interactivity\nENV DEBIAN_FRONTEND noninteractive\n\n# Need docker package in order to do Docker-in-Docker (DIND)\nRUN apt-get update -qq && \\\n    apt-get -y dist-upgrade && \\\n    apt-get -y --no-install-recommends install gnupg apt-transport-https curl && rm -rf /var/lib/apt/lists/*;\n\nRUN curl -fsSL https://download.docker.com/linux/debian/gpg | gpg --batch --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg && \\\n    echo \\\n    \"deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/debian \\\n    $(lsb_release -cs) stable\" > /etc/apt/sources.list.d/docker.list\n\nRUN apt-get update -qq && \\\n    apt-get install --no-install-recommends -y docker-ce docker-ce-cli mesa-utils \\\n    # the basics\n    curl unzip git locales \\\n    # java stuff\n    openjdk-11-jdk maven && \\\n    apt-get clean && \\\n    apt-get autoclean && \\\n    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\n# ------------------------------------------------------\n# --- Set Locales\n\n# Generate only en_US Locales\nRUN locale-gen en_US.UTF-8\n\n# Set Default Locale\nRUN localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8\nENV LANG en_US.UTF-8\n\n# ------------------------------------------------------\n# --- Install Android SDK Tools\n\nENV ANDROID_HOME /opt/android-sdk-linux\nENV ANDROID_SDK_URL https://dl.google.com/android/repository/commandlinetools-linux-7583922_latest.zip\nENV ANDROID_SDK_ROOT ${ANDROID_HOME}\n\n# Install SDK Tools\nRUN curl -f -L $ANDROID_SDK_URL -o sdk-tools.zip \\\n    && mkdir -p /opt/android-sdk-linux \\\n    && unzip -q sdk-tools.zip -d $ANDROID_HOME \\\n    && mv -v $ANDROID_HOME/cmdline-tools $ANDROID_HOME/latest \\\n    && echo $(ls -l $ANDROID_HOME) \\\n    && mkdir -v $ANDROID_HOME/cmdline-tools \\\n    && mv -v $ANDROID_HOME/latest $ANDROID_HOME/cmdline-tools/ \\\n    && rm -f sdk-tools.zip\n\n# Update PATH\nENV PATH ${PATH}:${ANDROID_HOME}/cmdline-tools/latest/bin:${ANDROID_HOME}/cmdline-tools:${ANDROID_HOME}/cmd-tools/bin:${ANDROID_HOME}/platform-tools\nENV ANDROID_SDK_ROOT ${ANDROID_HOME}/cmdline-tools/latest\n\n# Debug location and path\n\nRUN echo $PATH && \\\n    echo $(ls /opt/) && \\\n    echo $(ls /opt/android-sdk-linux)  && \\\n    echo $(ls /opt/android-sdk-linux/cmdline-tools/latest)\n\n# ------------------------------------------------------\n# --- Install Android SDK Tools Packages\n\n# Install Platform Tools Package\nRUN echo y | sdkmanager \"platform-tools\" # echo y to accept google licenses\n\n# Install Android Support Repositories\nRUN sdkmanager \"extras;android;m2repository\"\n\n# Install Build Tools (Please keep in descending order)\nRUN sdkmanager \"build-tools;30.0.3\"\n# RUN sdkmanager \"build-tools;28.0.3\"\n# RUN sdkmanager \"build-tools;27.0.3\"\n# RUN sdkmanager \"build-tools;25.0.2\"\n# RUN sdkmanager \"build-tools;23.0.3\"\n\n# Install Target SDK Packages (Please keep in descending order)\nRUN sdkmanager \"platforms;android-30\"\n# RUN sdkmanager \"platforms;android-28\"\n# RUN sdkmanager \"platforms;android-27\"\n# RUN sdkmanager \"platforms;android-25\"\n# RUN sdkmanager \"platforms;android-23\"\n\nRUN echo \"accept all licenses\"\n# Accept all licenses\nRUN yes | sdkmanager --licenses\n"
}