{
  "startTime": 1674254195419,
  "endTime": 1674254196329,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 54
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 125
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 167
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 116
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 167
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 90
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 167
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 116
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 167
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 90
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 22,
        "columnStart": 22,
        "columnEnd": 14
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 85,
        "lineEnd": 85,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 87,
        "lineEnd": 87,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 102,
        "lineEnd": 103,
        "columnStart": 4,
        "columnEnd": 6
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 85,
        "lineEnd": 85,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 87,
        "lineEnd": 87,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 102,
        "lineEnd": 103,
        "columnStart": 4,
        "columnEnd": 6
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 22,
        "columnStart": 22,
        "columnEnd": 14
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 85,
        "lineEnd": 85,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 87,
        "lineEnd": 87,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 102,
        "lineEnd": 103,
        "columnStart": 4,
        "columnEnd": 6
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 61
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 85,
        "lineEnd": 85,
        "columnStart": 4,
        "columnEnd": 61
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 87,
        "lineEnd": 87,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 102,
        "lineEnd": 103,
        "columnStart": 4,
        "columnEnd": 6
      }
    }
  ],
  "repairedDockerfile": "FROM debian:jessie\nMAINTAINER paixu@0xn0.de\n\nENV PYTHON_VERSION=2.7.11\nENV OPENSSL_VERSION=1.0.2f\nENV ZLIB_VERSION=1.2.8\nENV MINGW_VERSION=0.6.2-beta-20131004-1\nENV MINGW_BIN_VERSION=0.6.2-mingw32-beta-20131004-1-bin\nENV WINEDEBUG=fixme-all\n\n######\n# install packages required to build\n# https-transport: winehq deb\n# winbind: pip install keyring (requirements.pip) needs this somehow\n# git-core: clone rw copy of repo and build specific commit\n# imagemagick: convert png to ico-files\nRUN apt-get update && apt-get -y --no-install-recommends install \\\n    unzip curl apt-transport-https \\\n    winbind \\\n    build-essential autoconf bison gperf flex libtool mingw-w64 \\\n    git-core \\\n    imagemagick \\\n    pkg-config && rm -rf /var/lib/apt/lists/*;\n\n# install wine > 1.6.2 (debian:jessie version fails with pip)\nRUN dpkg --add-architecture i386 \\\n && curl -f https://dl.winehq.org/wine-builds/Release.key | apt-key add - \\\n && echo 'deb https://dl.winehq.org/wine-builds/debian/ jessie main' >> /etc/apt/sources.list.d/wine.list \\\n && apt-get update\n\nRUN curl -f https://www.python.org/ftp/python/${PYTHON_VERSION}/python-${PYTHON_VERSION}.msi > /tmp/python-${PYTHON_VERSION}.msi\nRUN curl -f -L https://sourceforge.net/projects/mingw/files/Installer/mingw-get/mingw-get-${MINGW_VERSION}/mingw-get-${MINGW_BIN_VERSION}.zip/download > /tmp/mingw-get.zip\n\n# alternative with messy python afterwards\n# RUN curl -L http://download.microsoft.com/download/7/9/6/796EF2E4-801B-4FC4-AB28-B59FBF6D907B/VCForPython27.msi > /tmp/msvcforpython27.msi\n\nRUN curl -f -L https://www.openssl.org/source/openssl-${OPENSSL_VERSION}.tar.gz > /tmp/openssl-${OPENSSL_VERSION}.tar.gz\nRUN apt-get install --no-install-recommends -y winehq-staging && rm -rf /var/lib/apt/lists/*;\n\nRUN curl -f -L https://sourceforge.net/projects/mingw/files/Installer/mingw-get/mingw-get-${MINGW_VERSION}/mingw-get-${MINGW_BIN_VERSION}.zip/download > /tmp/mingw-get.zip\nRUN mkdir -p  /root/.wine/drive_c/mingw \\\n && unzip -d /root/.wine/drive_c/mingw /tmp/mingw-get.zip\n\n#######\n# Build python dependency\n# using the 'host' (linux) xcompiler instead of fiddeling in wine\n# zlib - needs a update every 5 years\n# adds a patch that makes a shared lib - default is static\nRUN curl -f -L https://zlib.net/zlib-${ZLIB_VERSION}.tar.gz > /tmp/zlib-${ZLIB_VERSION}.tar.gz\nADD zlib-mingw-shared.patch /zlib-mingw-shared.patch\nRUN mkdir -p /root/.wine/drive_c/zlib/src \\\n && mv /tmp/zlib-${ZLIB_VERSION}.tar.gz /root/.wine/drive_c/zlib/src \\\n && cd /root/.wine/drive_c/zlib/src \\\n && tar xzf zlib-${ZLIB_VERSION}.tar.gz \\\n && cd zlib-${ZLIB_VERSION} \\\n && patch -p0 < /zlib-mingw-shared.patch \\\n && make -f win32/Makefile.gcc PREFIX=/usr/bin/i686-w64-mingw32- \\\n && make -f win32/Makefile.gcc INCLUDE_PATH=/root/.wine/drive_c/zlib/include LIBRARY_PATH=/root/.wine/drive_c/zlib/lib BINARY_PATH=/root/.wine/drive_c/zlib/bin  install && rm zlib-${ZLIB_VERSION}.tar.gz\n\n######\n# install gcc for most pip builds\n# install g++ for pycryptopp\n# this is mingw in wine, not to get confused with mingw-w64 in container-host\nRUN wine msiexec -i /tmp/python-${PYTHON_VERSION}.msi -q \\\n && wine c:/mingw/bin/mingw-get.exe install gcc g++ mingw32-make \\\n && rm -r /tmp/.wine-0\n\n####\n# pip configuration\n# set wine mingw compiler to be used by \"python setup build\"\n# set default include dirs, libraries and library paths\n# the libraries=crypto is added because srp will only link using -lssl but links to BN_* (libcrypto) code\n# 'install' zlib to mingw so python may find its dlls\n# pyside-rcc fix (https://srinikom.github.io/pyside-bz-archive/670.html)\nRUN printf \"[build]\\ncompiler=mingw32\\n\\n[build_ext]\\ninclude_dirs=c:\\\\openssl\\\\include;c:\\\\zlib\\\\include\\nlibraries=crypto\\nlibrary_dirs=c:\\\\openssl\\\\lib;c:\\\\openssl\\\\bin;c:\\\\zlib\\\\lib;c:\\\\zlib\\\\bin\" > /root/.wine/drive_c/Python27/Lib/distutils/distutils.cfg \\\n && printf 'REGEDIT4\\n\\n[HKEY_CURRENT_USER\\\\Environment]\\n\"PATH\"=\"C:\\\\\\\\python27;C:\\\\\\\\python27\\\\\\\\Scripts;C:\\\\\\\\python27\\\\\\\\Lib\\\\\\\\site-packages\\\\\\\\PySide;C:\\\\\\\\mingw\\\\\\\\bin;c:\\\\\\\\windows;c:\\\\\\\\windows\\\\\\\\system\"' > /root/.wine/drive_c/path.reg \\\n && printf 'REGEDIT4\\n\\n[HKEY_CURRENT_USER\\\\Environment]\\n\"OPENSSL_CONF\"=\"C:\\\\\\\\openssl\"' > /root/.wine/drive_c/openssl_conf.reg \\\n && printf 'REGEDIT4\\n\\n[HKEY_CURRENT_USER\\\\Environment]\\n\"PYTHONPATH\"=\"C:\\\\\\\\python27\\\\\\\\lib\\\\\\\\site-packages;Z:\\\\\\\\var\\\\\\\\build\\\\\\\\bitmask_rw\\\\\\\\src\"' > /root/.wine/drive_c/pythonpath.reg \\\n && cp /root/.wine/drive_c/zlib/bin/zlib1.dll /root/.wine/drive_c/mingw/bin \\\n && cp /root/.wine/drive_c/zlib/lib/libz.dll.a /root/.wine/drive_c/mingw/lib\n\n####\n# prepare the environment with all python dependencies installed\n# inject dirspec from distribution\n#\nRUN apt-get install --no-install-recommends -y python-dirspec \\\n && cp -r /usr/lib/python2.7/dist-packages/dirspec* /root/.wine/drive_c/Python27/Lib/site-packages/ && rm -rf /var/lib/apt/lists/*;\nRUN apt-get install --no-install-recommends -y python-setuptools && rm -rf /var/lib/apt/lists/*;\nRUN wine regedit /root/.wine/drive_c/path.reg \\\n && wine regedit /root/.wine/drive_c/openssl_conf.reg \\\n && wine regedit /root/.wine/drive_c/pythonpath.reg \\\n && wine pip install virtualenv pyinstaller \\\n && wine pip install wheel \\\n && wine pip install -U setuptools-scm \\\n && wine pip install -U setuptools_scm \\\n && wine pip install -U pyside python-qt \\\n && wine pip install -I psutil==3.4.2 \\\n && rm -r /tmp/.wine-0\n\n# alternative msvc: after python is installed (or before?)\n# && wine msiexec -i /tmp/msvcforpython27.msi -q \\\n\nRUN apt-get -y --no-install-recommends install \\\n    mc && rm -rf /var/lib/apt/lists/*;\nENTRYPOINT [\"/var/src/bitmask/pkg/windows/pyinstaller-build.sh\"]"
}