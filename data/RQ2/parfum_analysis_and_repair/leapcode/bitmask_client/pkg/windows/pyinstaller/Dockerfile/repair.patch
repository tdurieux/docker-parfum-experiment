diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/leapcode/bitmask_client/pkg/windows/pyinstaller/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/leapcode/bitmask_client/pkg/windows/pyinstaller/Dockerfile/repaired.Dockerfile
index 2da0da3..5232d18 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/leapcode/bitmask_client/pkg/windows/pyinstaller/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/leapcode/bitmask_client/pkg/windows/pyinstaller/Dockerfile/repaired.Dockerfile
@@ -14,30 +14,30 @@ ENV WINEDEBUG=fixme-all
 # winbind: pip install keyring (requirements.pip) needs this somehow
 # git-core: clone rw copy of repo and build specific commit
 # imagemagick: convert png to ico-files
-RUN apt-get update && apt-get -y install \
+RUN apt-get update && apt-get -y --no-install-recommends install \
     unzip curl apt-transport-https \
     winbind \
     build-essential autoconf bison gperf flex libtool mingw-w64 \
     git-core \
     imagemagick \
-    pkg-config
+    pkg-config && rm -rf /var/lib/apt/lists/*;
 
 # install wine > 1.6.2 (debian:jessie version fails with pip)
 RUN dpkg --add-architecture i386 \
- && curl https://dl.winehq.org/wine-builds/Release.key | apt-key add - \
+ && curl -f https://dl.winehq.org/wine-builds/Release.key | apt-key add - \
  && echo 'deb https://dl.winehq.org/wine-builds/debian/ jessie main' >> /etc/apt/sources.list.d/wine.list \
  && apt-get update
 
-RUN curl https://www.python.org/ftp/python/${PYTHON_VERSION}/python-${PYTHON_VERSION}.msi > /tmp/python-${PYTHON_VERSION}.msi
-RUN curl -L http://sourceforge.net/projects/mingw/files/Installer/mingw-get/mingw-get-${MINGW_VERSION}/mingw-get-${MINGW_BIN_VERSION}.zip/download > /tmp/mingw-get.zip
+RUN curl -f https://www.python.org/ftp/python/${PYTHON_VERSION}/python-${PYTHON_VERSION}.msi > /tmp/python-${PYTHON_VERSION}.msi
+RUN curl -f -L https://sourceforge.net/projects/mingw/files/Installer/mingw-get/mingw-get-${MINGW_VERSION}/mingw-get-${MINGW_BIN_VERSION}.zip/download > /tmp/mingw-get.zip
 
 # alternative with messy python afterwards
 # RUN curl -L http://download.microsoft.com/download/7/9/6/796EF2E4-801B-4FC4-AB28-B59FBF6D907B/VCForPython27.msi > /tmp/msvcforpython27.msi
 
-RUN curl -L http://www.openssl.org/source/openssl-${OPENSSL_VERSION}.tar.gz > /tmp/openssl-${OPENSSL_VERSION}.tar.gz
-RUN apt-get install -y winehq-staging
+RUN curl -f -L https://www.openssl.org/source/openssl-${OPENSSL_VERSION}.tar.gz > /tmp/openssl-${OPENSSL_VERSION}.tar.gz
+RUN apt-get install --no-install-recommends -y winehq-staging && rm -rf /var/lib/apt/lists/*;
 
-RUN curl -L http://sourceforge.net/projects/mingw/files/Installer/mingw-get/mingw-get-${MINGW_VERSION}/mingw-get-${MINGW_BIN_VERSION}.zip/download > /tmp/mingw-get.zip
+RUN curl -f -L https://sourceforge.net/projects/mingw/files/Installer/mingw-get/mingw-get-${MINGW_VERSION}/mingw-get-${MINGW_BIN_VERSION}.zip/download > /tmp/mingw-get.zip
 RUN mkdir -p  /root/.wine/drive_c/mingw \
  && unzip -d /root/.wine/drive_c/mingw /tmp/mingw-get.zip
 
@@ -46,7 +46,7 @@ RUN mkdir -p  /root/.wine/drive_c/mingw \
 # using the 'host' (linux) xcompiler instead of fiddeling in wine
 # zlib - needs a update every 5 years
 # adds a patch that makes a shared lib - default is static
-RUN curl -L http://zlib.net/zlib-${ZLIB_VERSION}.tar.gz > /tmp/zlib-${ZLIB_VERSION}.tar.gz
+RUN curl -f -L https://zlib.net/zlib-${ZLIB_VERSION}.tar.gz > /tmp/zlib-${ZLIB_VERSION}.tar.gz
 ADD zlib-mingw-shared.patch /zlib-mingw-shared.patch
 RUN mkdir -p /root/.wine/drive_c/zlib/src \
  && mv /tmp/zlib-${ZLIB_VERSION}.tar.gz /root/.wine/drive_c/zlib/src \
@@ -55,7 +55,7 @@ RUN mkdir -p /root/.wine/drive_c/zlib/src \
  && cd zlib-${ZLIB_VERSION} \
  && patch -p0 < /zlib-mingw-shared.patch \
  && make -f win32/Makefile.gcc PREFIX=/usr/bin/i686-w64-mingw32- \
- && make -f win32/Makefile.gcc INCLUDE_PATH=/root/.wine/drive_c/zlib/include LIBRARY_PATH=/root/.wine/drive_c/zlib/lib BINARY_PATH=/root/.wine/drive_c/zlib/bin  install
+ && make -f win32/Makefile.gcc INCLUDE_PATH=/root/.wine/drive_c/zlib/include LIBRARY_PATH=/root/.wine/drive_c/zlib/lib BINARY_PATH=/root/.wine/drive_c/zlib/bin  install && rm zlib-${ZLIB_VERSION}.tar.gz
 
 ######
 # install gcc for most pip builds
@@ -83,9 +83,9 @@ RUN printf "[build]\ncompiler=mingw32\n\n[build_ext]\ninclude_dirs=c:\\openssl\\
 # prepare the environment with all python dependencies installed
 # inject dirspec from distribution
 #
-RUN apt-get install -y python-dirspec \
- && cp -r /usr/lib/python2.7/dist-packages/dirspec* /root/.wine/drive_c/Python27/Lib/site-packages/
-RUN apt-get install -y python-setuptools
+RUN apt-get install --no-install-recommends -y python-dirspec \
+ && cp -r /usr/lib/python2.7/dist-packages/dirspec* /root/.wine/drive_c/Python27/Lib/site-packages/ && rm -rf /var/lib/apt/lists/*;
+RUN apt-get install --no-install-recommends -y python-setuptools && rm -rf /var/lib/apt/lists/*;
 RUN wine regedit /root/.wine/drive_c/path.reg \
  && wine regedit /root/.wine/drive_c/openssl_conf.reg \
  && wine regedit /root/.wine/drive_c/pythonpath.reg \
@@ -100,6 +100,6 @@ RUN wine regedit /root/.wine/drive_c/path.reg \
 # alternative msvc: after python is installed (or before?)
 # && wine msiexec -i /tmp/msvcforpython27.msi -q \
 
-RUN apt-get -y install \
-    mc
+RUN apt-get -y --no-install-recommends install \
+    mc && rm -rf /var/lib/apt/lists/*;
 ENTRYPOINT ["/var/src/bitmask/pkg/windows/pyinstaller-build.sh"]
\ No newline at end of file