{
  "startTime": 1674251278203,
  "endTime": 1674251279020,
  "originalSmells": [
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 44,
        "columnEnd": 76
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 44,
        "columnEnd": 76
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM maven:3-jdk-8 as builder\n# based on https://github.com/ghchinoy/mitreidconnect-docker\n\nENV HOME /opt/mitreidc\n\n# default to 1.3.x (latest stable);  master is the development branch.\n# Override from docker build --build-arg if you want.\n#ARG BRANCH=master\nARG BRANCH=1.3.x\nARG ISSUER=localhost:8080\n\nRUN apt-get update && apt-get upgrade -y && apt-get install --no-install-recommends -y git wget sudo && apt-get clean && \\\n\tmkdir -p $HOME && rm -rf /var/lib/apt/lists/*;\n\n# Install\n#USER mitreidc\nWORKDIR $HOME\n\n# fetch the source code using provided branch\nRUN git clone --branch $BRANCH https://github.com/mitreid-connect/OpenID-Connect-Java-Spring-Server.git .\n\n#### this can be done in the next build stage by directly manipulating the .war archive - thus, a changed config\n#### does not require us to recompile everything\n## replace server config, user db, and clients db\n#COPY ./config/server-config.xml $HOME/openid-connect-server-webapp/src/main/webapp/WEB-INF/server-config.xml\n#RUN sed -i \"s|{ISSUER}|$ISSUER|g\" $HOME/openid-connect-server-webapp/src/main/webapp/WEB-INF/server-config.xml\n#\n#COPY ./config/users.sql $HOME/openid-connect-server-webapp/src/main/resources/db/hsql/users.sql\n#COPY ./config/clients.sql $HOME/openid-connect-server-webapp/src/main/resources/db/hsql/clients.sql\n\n# compile\nRUN mvn -Dmaven.javadoc.skip=true -Dmaven.test.skip=true clean package\n\nFROM jboss/wildfly:14.0.1.Final\n\nUSER root\nRUN yum -y install perl && rm -rf /var/cache/yum\nUSER jboss\n\n## make sure bouncycastle is setup\n#RUN cd $JAVA_HOME/jre/lib/ext/ && \\\n#\twget http://www.bouncycastle.org/download/bcprov-jdk15on-160.jar -nv && \\\n#\tcd $JAVA_HOME/jre/lib/security && \\\n#\techo 'security.provider.10=org.bouncycastle.jce.provider.BouncyCastleProvider' >> $JAVA_HOME/jre/lib/security/java.security\n#\n\nENV HOME /opt/mitreidc\nENV TARGET_WAR /opt/jboss/wildfly/standalone/deployments/oidc-server.war\n\n# deploy compiled war to wildfly container\nCOPY --from=builder $HOME/openid-connect-server-webapp/target/openid-connect-server-webapp.war $TARGET_WAR\n\n\n# update config in .war, so we dont need to recompile when changing configs\nUSER root\nARG TEST_OP_HOST\nCOPY ./config/WEB-INF ./WEB-INF\nRUN perl -p -e 's/\\$\\{(\\w+)\\}/(exists $ENV{$1}?$ENV{$1}:\"missing variable $1\")/eg' < WEB-INF/server-config-template.xml > WEB-INF/server-config.xml\nUSER jboss\n\nRUN jar uf $TARGET_WAR WEB-INF/server-config.xml\nRUN jar uf $TARGET_WAR WEB-INF/classes/db/hsql/users.sql\nRUN jar uf $TARGET_WAR WEB-INF/classes/db/hsql/clients.sql\n\n\n## add a safeguard file that contains Professos' controller domain\nARG CONTROLLER_URL\nRUN mkdir -p /opt/jboss/wildfly/static/\nRUN echo \"$CONTROLLER_URL\" > /opt/jboss/wildfly/static/static-professos.txt\n## use a config that serves the static safeguard file\nCOPY ./config/standalone.xml /opt/jboss/wildfly/standalone/configuration/standalone.xml\nUSER root\nRUN chown jboss:jboss -R /opt/jboss/wildfly/static/static-professos.txt && \\\n    chown jboss:jboss -R /opt/jboss/wildfly/standalone/configuration/standalone.xml\n\n# copy ca certificates\nCOPY ./config/*.crt /etc/pki/ca-trust/source/anchors/\nRUN chmod 0644 /etc/pki/ca-trust/source/anchors/*\nRUN update-ca-trust\n\nUSER jboss\n\nWORKDIR $HOME/openid-connect-server-webapp\n# Preload Jetty dependencies\n#RUN mvn -Djetty.skip=true jetty:run\n\nEXPOSE 8080\n\n# uncomment below, if you need to access the management interface\n# EXPOSE 9990\n# RUN /opt/jboss/wildfly/bin/add-user.sh admin Admin#70365 --silent\n\n# Set the default command to run on boot\n# This will boot WildFly in the standalone mode and bind to all interfaces\n#CMD [\"/opt/jboss/wildfly/bin/standalone.sh\", \"-b\", \"0.0.0.0\", \"-bmanagement\", \"0.0.0.0\", \"--debug\"]\nCMD [\"/opt/jboss/wildfly/bin/standalone.sh\", \"-b\", \"0.0.0.0\", \"-bmanagement\", \"0.0.0.0\"]\n\n# build with: \"sudo docker build -t mitreid-server-webapp:latest .\"\n# run with: \"sudo docker run -ti -p 8080:8080 mitreid-server-webapp:latest\"\n#\n# To set the Issuer ID to 'honestidp:8080', build with:\n# \"sudo docker build --build-arg ISSUER=honestidp.de:8080 -t mitreid-server-webapp:latest .\"\n# Configuration can then still be found at localhost:8080/openid-connect-server-webapp/.well-known/openid-configuration\n# even though the IdP uses honestidp.de:8080 as issuer URI, so relative links will be broken.\n# You may want to add honestidp.de to /etc/hosts as a WA\n"
}