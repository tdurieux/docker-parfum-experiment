{
  "startTime": 1674255601314,
  "endTime": 1674255603111,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 89,
        "lineEnd": 89,
        "columnStart": 4,
        "columnEnd": 80
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 199,
        "lineEnd": 199,
        "columnStart": 7,
        "columnEnd": 82
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 7,
        "columnEnd": 89
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 57,
        "lineEnd": 77,
        "columnStart": 7,
        "columnEnd": 27
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 140,
        "lineEnd": 140,
        "columnStart": 4,
        "columnEnd": 139
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 152,
        "lineEnd": 152,
        "columnStart": 4,
        "columnEnd": 313
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 163,
        "lineEnd": 164,
        "columnStart": 7,
        "columnEnd": 36
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 176,
        "lineEnd": 176,
        "columnStart": 7,
        "columnEnd": 142
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 184,
        "lineEnd": 184,
        "columnStart": 7,
        "columnEnd": 188
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 193,
        "lineEnd": 193,
        "columnStart": 7,
        "columnEnd": 206
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 24,
        "lineEnd": 26,
        "columnStart": 7,
        "columnEnd": 14
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 24,
        "lineEnd": 26,
        "columnStart": 7,
        "columnEnd": 14
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:stretch\n\nARG THREADS=1\nARG ANDROID_NDK_REVISION=21d\nARG ANDROID_NDK_HASH=bcf4023eb8cb6976a4c7cff0a8a8f145f162bf4d\nARG ANDROID_SDK_REVISION=4333796\nARG ANDROID_SDK_HASH=92ffee5a1d98d856634e8b71132e8a95d96c83a63fde1099be3d86df3106def9\nARG QT_VERSION=5.15.2\n\nWORKDIR /opt/android\nENV WORKDIR=/opt/android\n\nENV ANDROID_NATIVE_API_LEVEL=28\nENV ANDROID_API=android-${ANDROID_NATIVE_API_LEVEL}\nENV ANDROID_CLANG=aarch64-linux-android${ANDROID_NATIVE_API_LEVEL}-clang\nENV ANDROID_CLANGPP=aarch64-linux-android${ANDROID_NATIVE_API_LEVEL}-clang++\nENV ANDROID_NDK_ROOT=${WORKDIR}/android-ndk-r${ANDROID_NDK_REVISION}\nENV ANDROID_SDK_ROOT=${WORKDIR}/tools\nENV JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64\nENV PATH=${JAVA_HOME}/bin:${PATH}\nENV PREFIX=${WORKDIR}/prefix\nENV TOOLCHAIN_DIR=${ANDROID_NDK_ROOT}/toolchains/llvm/prebuilt/linux-x86_64\n\nRUN apt-get update \\\n    && apt-get install --no-install-recommends -y ant automake build-essential ca-certificates-java file gettext git libc6 libncurses5 \\\n    libssl-dev libstdc++6 libtinfo5 libtool libz1 openjdk-8-jdk-headless openjdk-8-jre-headless pkg-config python3 \\\n    unzip wget && rm -rf /var/lib/apt/lists/*;\n\nRUN wget -q https://dl.google.com/android/repository/sdk-tools-linux-${ANDROID_SDK_REVISION}.zip \\\n    && unzip -q sdk-tools-linux-${ANDROID_SDK_REVISION}.zip \\\n    && rm -f sdk-tools-linux-${ANDROID_SDK_REVISION}.zip\n\nRUN wget -q https://dl.google.com/android/repository/android-ndk-r${ANDROID_NDK_REVISION}-linux-x86_64.zip \\\n    && unzip -q android-ndk-r${ANDROID_NDK_REVISION}-linux-x86_64.zip \\\n    && rm -f android-ndk-r${ANDROID_NDK_REVISION}-linux-x86_64.zip\n\nRUN cd ${ANDROID_SDK_ROOT} && echo y | ./bin/sdkmanager \"platform-tools\" \"platforms;${ANDROID_API}\" \"tools\" > /dev/null\nRUN cp -r ${WORKDIR}/platforms ${WORKDIR}/platform-tools ${ANDROID_SDK_ROOT}\n\nENV HOST_PATH=${PATH}\nENV PATH=${TOOLCHAIN_DIR}/aarch64-linux-android/bin:${TOOLCHAIN_DIR}/bin:${PATH}\n\nARG ZLIB_VERSION=1.2.12\nARG ZLIB_HASH=91844808532e5ce316b3c010929493c0244f3d37593afd6de04f71821d5136d9\nRUN wget -q https://zlib.net/zlib-${ZLIB_VERSION}.tar.gz \\\n    && echo \"${ZLIB_HASH}  zlib-${ZLIB_VERSION}.tar.gz\" | sha256sum -c \\\n    && tar -xzf zlib-${ZLIB_VERSION}.tar.gz \\\n    && rm zlib-${ZLIB_VERSION}.tar.gz \\\n    && cd zlib-${ZLIB_VERSION} \\\n    && CC=${ANDROID_CLANG} CXX=${ANDROID_CLANGPP} ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=${PREFIX} --static \\\n    && make -j${THREADS} \\\n    && make -j${THREADS} install \\\n    && rm -rf $(pwd)\n\nRUN git clone git://code.qt.io/qt/qt5.git -b ${QT_VERSION} --depth 1 \\\n    && cd qt5 \\\n    && perl init-repository --module-subset=default,-qtwebengine \\\n    && PATH=${HOST_PATH} ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" -v -developer-build -release \\\n    -xplatform android-clang \\\n    -android-ndk-platform ${ANDROID_API} \\\n    -android-ndk ${ANDROID_NDK_ROOT} \\\n    -android-sdk ${ANDROID_SDK_ROOT} \\\n    -android-ndk-host linux-x86_64 \\\n    -no-dbus \\\n    -opengl es2 \\\n    -no-use-gold-linker \\\n    -no-sql-mysql \\\n    -opensource -confirm-license \\\n    -android-arch arm64-v8a \\\n    -prefix ${PREFIX} \\\n    -nomake tools -nomake tests -nomake examples \\\n    -skip qtwebengine \\\n    -skip qtserialport \\\n    -skip qtconnectivity \\\n    -skip qttranslations \\\n    -skip qtpurchasing \\\n    -skip qtgamepad -skip qtscript -skip qtdoc \\\n    -no-warnings-are-errors \\\n    && sed -i '213,215d' qtbase/src/3rdparty/pcre2/src/sljit/sljitConfigInternal.h \\\n    && PATH=${HOST_PATH} make -j${THREADS} \\\n    && PATH=${HOST_PATH} make -j${THREADS} install \\\n    && cd qttools/src/linguist/lrelease \\\n    && ../../../../qtbase/bin/qmake \\\n    && PATH=${HOST_PATH} make -j${THREADS} install \\\n    && cd ../../../.. \\\n    && rm -rf $(pwd)\n\nARG ICONV_VERSION=1.16\nARG ICONV_HASH=e6a1b1b589654277ee790cce3734f07876ac4ccfaecbee8afa0b649cf529cc04\nRUN wget -q https://ftp.gnu.org/pub/gnu/libiconv/libiconv-${ICONV_VERSION}.tar.gz \\\n    && echo \"${ICONV_HASH}  libiconv-${ICONV_VERSION}.tar.gz\" | sha256sum -c \\\n    && tar -xzf libiconv-${ICONV_VERSION}.tar.gz \\\n    && rm -f libiconv-${ICONV_VERSION}.tar.gz \\\n    && cd libiconv-${ICONV_VERSION} \\\n    && CC=${ANDROID_CLANG} CXX=${ANDROID_CLANGPP} ./configure --build=x86_64-linux-gnu --host=aarch64 --prefix=${PREFIX} --disable-rpath \\\n    && make -j${THREADS} \\\n    && make -j${THREADS} install\n\nARG BOOST_VERSION=1_74_0\nARG BOOST_VERSION_DOT=1.74.0\nARG BOOST_HASH=83bfc1507731a0906e387fc28b7ef5417d591429e51e788417fe9ff025e116b1\nRUN wget -q https://downloads.sourceforge.net/project/boost/boost/${BOOST_VERSION_DOT}/boost_${BOOST_VERSION}.tar.bz2 \\\n    && echo \"${BOOST_HASH}  boost_${BOOST_VERSION}.tar.bz2\" | sha256sum -c \\\n    && tar -xf boost_${BOOST_VERSION}.tar.bz2 \\\n    && rm -f boost_${BOOST_VERSION}.tar.bz2 \\\n    && cd boost_${BOOST_VERSION} \\\n    && PATH=${HOST_PATH} ./bootstrap.sh --prefix=${PREFIX} \\\n    && PATH=${TOOLCHAIN_DIR}/bin:${HOST_PATH} ./b2 --build-type=minimal link=static runtime-link=static \\\n    --with-chrono --with-date_time --with-filesystem --with-program_options --with-regex --with-serialization \\\n    --with-system --with-thread --with-locale --build-dir=android --stagedir=android toolset=clang threading=multi \\\n    threadapi=pthread target-os=android -sICONV_PATH=${PREFIX} \\\n    cflags='--target=aarch64-linux-android' \\\n    cxxflags='--target=aarch64-linux-android' \\\n    linkflags='--target=aarch64-linux-android --sysroot=${ANDROID_NDK_ROOT}/platforms/${ANDROID_API}/arch-arm64 ${ANDROID_NDK_ROOT}/sources/cxx-stl/llvm-libc++/libs/arm64-v8a/libc++_shared.so -nostdlib++' \\\n    install -j${THREADS} \\\n    && rm -rf $(pwd)\n\nARG OPENSSL_VERSION=1.1.1g\nARG OPENSSL_HASH=ddb04774f1e32f0c49751e21b67216ac87852ceb056b75209af2443400636d46\nRUN wget -q https://www.openssl.org/source/openssl-${OPENSSL_VERSION}.tar.gz \\\n    && echo \"${OPENSSL_HASH}  openssl-${OPENSSL_VERSION}.tar.gz\" | sha256sum -c \\\n    && tar -xzf openssl-${OPENSSL_VERSION}.tar.gz \\\n    && rm openssl-${OPENSSL_VERSION}.tar.gz \\\n    && cd openssl-${OPENSSL_VERSION} \\\n    && ANDROID_NDK_HOME=${ANDROID_NDK_ROOT} ./Configure CC=${ANDROID_CLANG} CXX=${ANDROID_CLANGPP} \\\n    android-arm64 no-asm no-shared --static \\\n    --with-zlib-include=${PREFIX}/include --with-zlib-lib=${PREFIX}/lib \\\n    --prefix=${PREFIX} --openssldir=${PREFIX} \\\n    && sed -i 's/CNF_EX_LIBS=-ldl -pthread//g;s/BIN_CFLAGS=-pie $(CNF_CFLAGS) $(CFLAGS)//g' Makefile \\\n    && ANDROID_NDK_HOME=${ANDROID_NDK_ROOT} make -j${THREADS} \\\n    && make -j${THREADS} install \\\n    && rm -rf $(pwd)\n\nARG EXPAT_VERSION=2.4.1\nARG EXPAT_HASH=2f9b6a580b94577b150a7d5617ad4643a4301a6616ff459307df3e225bcfbf40\nRUN wget https://github.com/libexpat/libexpat/releases/download/R_2_4_1/expat-${EXPAT_VERSION}.tar.bz2 && \\\n    echo \"${EXPAT_HASH}  expat-${EXPAT_VERSION}.tar.bz2\" | sha256sum -c && \\\n    tar -xf expat-${EXPAT_VERSION}.tar.bz2 && \\\n    rm expat-${EXPAT_VERSION}.tar.bz2 && \\\n    cd expat-${EXPAT_VERSION} && \\\n    CC=${ANDROID_CLANG} CXX=${ANDROID_CLANGPP} ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-static --disable-shared --prefix=${PREFIX} --host=aarch64-linux-android && \\\n    make -j$THREADS && \\\n    make -j$THREADS install && \\\n    rm -rf $(pwd)\n\nARG UNBOUND_VERSION=1.13.2\nARG UNBOUND_HASH=0a13b547f3b92a026b5ebd0423f54c991e5718037fd9f72445817f6a040e1a83\nRUN wget https://www.nlnetlabs.nl/downloads/unbound/unbound-${UNBOUND_VERSION}.tar.gz && \\\n    echo \"${UNBOUND_HASH}  unbound-${UNBOUND_VERSION}.tar.gz\" | sha256sum -c && \\\n    tar -xzf unbound-${UNBOUND_VERSION}.tar.gz && \\\n    rm unbound-${UNBOUND_VERSION}.tar.gz && \\\n    cd unbound-${UNBOUND_VERSION} && \\\n    CC=${ANDROID_CLANG} CXX=${ANDROID_CLANGPP} ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --disable-shared --enable-static --without-pyunbound --with-libexpat=${PREFIX} --with-ssl=${PREFIX} --with-libevent=no --without-pythonmodule --disable-flto --with-pthreads --with-libunbound-only --host=aarch64-linux-android --with-pic --prefix=${PREFIX} && \\\n    make -j$THREADS && \\\n    make -j$THREADS install && \\\n    rm -rf $(pwd)\n\nARG ZMQ_VERSION=v4.3.3\nARG ZMQ_HASH=04f5bbedee58c538934374dc45182d8fc5926fa3\nRUN git clone https://github.com/zeromq/libzmq.git -b ${ZMQ_VERSION} --depth 1 \\\n    && cd libzmq \\\n    && git checkout ${ZMQ_HASH} \\\n    && ./autogen.sh \\\n    && CC=${ANDROID_CLANG} CXX=${ANDROID_CLANGPP} ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=${PREFIX} --host=aarch64-linux-android \\\n    --enable-static --disable-shared \\\n    && make -j${THREADS} \\\n    && make -j${THREADS} install \\\n    && rm -rf $(pwd)\n\nARG SODIUM_VERSION=1.0.18\nARG SODIUM_HASH=4f5e89fa84ce1d178a6765b8b46f2b6f91216677\nRUN set -ex \\\n    && git clone https://github.com/jedisct1/libsodium.git -b ${SODIUM_VERSION} --depth 1 \\\n    && cd libsodium \\\n    && test `git rev-parse HEAD` = ${SODIUM_HASH} || exit 1 \\\n    && ./autogen.sh \\\n    && CC=${ANDROID_CLANG} CXX=${ANDROID_CLANGPP} ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=${PREFIX} --host=aarch64-linux-android --enable-static --disable-shared \\\n    && make -j${THREADS} install \\\n    && rm -rf $(pwd)\n\nRUN git clone -b libgpg-error-1.38 --depth 1 git://git.gnupg.org/libgpg-error.git \\\n    && cd libgpg-error \\\n    && git reset --hard 71d278824c5fe61865f7927a2ed1aa3115f9e439 \\\n    && ./autogen.sh \\\n    && CC=${ANDROID_CLANG} CXX=${ANDROID_CLANGPP} ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --host=aarch64-linux-android --prefix=${PREFIX} --disable-rpath --disable-shared --enable-static --disable-doc --disable-tests \\\n    && PATH=${TOOLCHAIN_DIR}/bin:${HOST_PATH} make -j${THREADS} \\\n    && make -j${THREADS} install \\\n    && rm -rf $(pwd)\n\nRUN git clone -b libgcrypt-1.8.5 --depth 1 git://git.gnupg.org/libgcrypt.git \\\n    && cd libgcrypt \\\n    && git reset --hard 56606331bc2a80536db9fc11ad53695126007298 \\\n    && ./autogen.sh \\\n    && CC=${ANDROID_CLANG} CXX=${ANDROID_CLANGPP} ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --host=aarch64-linux-android --prefix=${PREFIX} --with-gpg-error-prefix=${PREFIX} --disable-shared --enable-static --disable-doc --disable-tests \\\n    && PATH=${TOOLCHAIN_DIR}/bin:${HOST_PATH} make -j${THREADS} \\\n    && make -j${THREADS} install \\\n    && rm -rf $(pwd)\n\nRUN cd tools \\\n    && wget -q https://dl-ssl.google.com/android/repository/tools_r25.2.5-linux.zip \\\n    && unzip -q tools_r25.2.5-linux.zip \\\n    && rm -f tools_r25.2.5-linux.zip \\\n    && echo y | ${ANDROID_SDK_ROOT}/tools/android update sdk --no-ui --all --filter build-tools-28.0.3\n\nRUN git clone -b v3.19.7 --depth 1 https://github.com/Kitware/CMake \\\n    && cd CMake \\\n    && git reset --hard 22612dd53a46c7f9b4c3f4b7dbe5c78f9afd9581 \\\n    && PATH=${HOST_PATH} ./bootstrap \\\n    && PATH=${HOST_PATH} make -j${THREADS} \\\n    && PATH=${HOST_PATH} make -j${THREADS} install \\\n    && rm -rf $(pwd)\n\nCMD set -ex \\\n    && cd /monero-gui \\\n    && mkdir -p build/Android/release \\\n    && cd build/Android/release \\\n    && cmake \\\n    -DCMAKE_TOOLCHAIN_FILE=\"${ANDROID_NDK_ROOT}/build/cmake/android.toolchain.cmake\" \\\n    -DCMAKE_PREFIX_PATH=\"${PREFIX}\" \\\n    -DCMAKE_FIND_ROOT_PATH=\"${PREFIX}\" \\\n    -DCMAKE_BUILD_TYPE=Release \\\n    -DARCH=\"armv8-a\" \\\n    -DANDROID_NATIVE_API_LEVEL=${ANDROID_NATIVE_API_LEVEL} \\\n    -DANDROID_ABI=\"arm64-v8a\" \\\n    -DANDROID_TOOLCHAIN=clang \\\n    -DBoost_USE_STATIC_RUNTIME=ON \\\n    -DLRELEASE_PATH=\"${PREFIX}/bin\" \\\n    -DQT_ANDROID_APPLICATION_BINARY=\"monero-wallet-gui\" \\\n    -DWITH_SCANNER=ON \\\n    ../../.. \\\n    && PATH=${HOST_PATH} make generate_translations_header \\\n    && make -j${THREADS} -C src \\\n    && make -j${THREADS} apk\n"
}