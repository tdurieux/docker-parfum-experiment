diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/monero-project/monero-gui/Dockerfile.android b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/monero-project/monero-gui/Dockerfile.android/repaired.Dockerfile
index eafa0df..d8e9675 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/monero-project/monero-gui/Dockerfile.android
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/monero-project/monero-gui/Dockerfile.android/repaired.Dockerfile
@@ -22,9 +22,9 @@ ENV PREFIX=${WORKDIR}/prefix
 ENV TOOLCHAIN_DIR=${ANDROID_NDK_ROOT}/toolchains/llvm/prebuilt/linux-x86_64
 
 RUN apt-get update \
-    && apt-get install -y ant automake build-essential ca-certificates-java file gettext git libc6 libncurses5 \
+    && apt-get install --no-install-recommends -y ant automake build-essential ca-certificates-java file gettext git libc6 libncurses5 \
     libssl-dev libstdc++6 libtinfo5 libtool libz1 openjdk-8-jdk-headless openjdk-8-jre-headless pkg-config python3 \
-    unzip wget
+    unzip wget && rm -rf /var/lib/apt/lists/*;
 
 RUN wget -q https://dl.google.com/android/repository/sdk-tools-linux-${ANDROID_SDK_REVISION}.zip \
     && unzip -q sdk-tools-linux-${ANDROID_SDK_REVISION}.zip \
@@ -47,7 +47,7 @@ RUN wget -q https://zlib.net/zlib-${ZLIB_VERSION}.tar.gz \
     && tar -xzf zlib-${ZLIB_VERSION}.tar.gz \
     && rm zlib-${ZLIB_VERSION}.tar.gz \
     && cd zlib-${ZLIB_VERSION} \
-    && CC=${ANDROID_CLANG} CXX=${ANDROID_CLANGPP} ./configure --prefix=${PREFIX} --static \
+    && CC=${ANDROID_CLANG} CXX=${ANDROID_CLANGPP} ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=${PREFIX} --static \
     && make -j${THREADS} \
     && make -j${THREADS} install \
     && rm -rf $(pwd)
@@ -55,7 +55,7 @@ RUN wget -q https://zlib.net/zlib-${ZLIB_VERSION}.tar.gz \
 RUN git clone git://code.qt.io/qt/qt5.git -b ${QT_VERSION} --depth 1 \
     && cd qt5 \
     && perl init-repository --module-subset=default,-qtwebengine \
-    && PATH=${HOST_PATH} ./configure -v -developer-build -release \
+    && PATH=${HOST_PATH} ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" -v -developer-build -release \
     -xplatform android-clang \
     -android-ndk-platform ${ANDROID_API} \
     -android-ndk ${ANDROID_NDK_ROOT} \
@@ -87,7 +87,7 @@ RUN git clone git://code.qt.io/qt/qt5.git -b ${QT_VERSION} --depth 1 \
 
 ARG ICONV_VERSION=1.16
 ARG ICONV_HASH=e6a1b1b589654277ee790cce3734f07876ac4ccfaecbee8afa0b649cf529cc04
-RUN wget -q http://ftp.gnu.org/pub/gnu/libiconv/libiconv-${ICONV_VERSION}.tar.gz \
+RUN wget -q https://ftp.gnu.org/pub/gnu/libiconv/libiconv-${ICONV_VERSION}.tar.gz \
     && echo "${ICONV_HASH}  libiconv-${ICONV_VERSION}.tar.gz" | sha256sum -c \
     && tar -xzf libiconv-${ICONV_VERSION}.tar.gz \
     && rm -f libiconv-${ICONV_VERSION}.tar.gz \
@@ -138,7 +138,7 @@ RUN wget https://github.com/libexpat/libexpat/releases/download/R_2_4_1/expat-${
     tar -xf expat-${EXPAT_VERSION}.tar.bz2 && \
     rm expat-${EXPAT_VERSION}.tar.bz2 && \
     cd expat-${EXPAT_VERSION} && \
-    CC=${ANDROID_CLANG} CXX=${ANDROID_CLANGPP} ./configure --enable-static --disable-shared --prefix=${PREFIX} --host=aarch64-linux-android && \
+    CC=${ANDROID_CLANG} CXX=${ANDROID_CLANGPP} ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --enable-static --disable-shared --prefix=${PREFIX} --host=aarch64-linux-android && \
     make -j$THREADS && \
     make -j$THREADS install && \
     rm -rf $(pwd)
@@ -150,7 +150,7 @@ RUN wget https://www.nlnetlabs.nl/downloads/unbound/unbound-${UNBOUND_VERSION}.t
     tar -xzf unbound-${UNBOUND_VERSION}.tar.gz && \
     rm unbound-${UNBOUND_VERSION}.tar.gz && \
     cd unbound-${UNBOUND_VERSION} && \
-    CC=${ANDROID_CLANG} CXX=${ANDROID_CLANGPP} ./configure --disable-shared --enable-static --without-pyunbound --with-libexpat=${PREFIX} --with-ssl=${PREFIX} --with-libevent=no --without-pythonmodule --disable-flto --with-pthreads --with-libunbound-only --host=aarch64-linux-android --with-pic --prefix=${PREFIX} && \
+    CC=${ANDROID_CLANG} CXX=${ANDROID_CLANGPP} ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --disable-shared --enable-static --without-pyunbound --with-libexpat=${PREFIX} --with-ssl=${PREFIX} --with-libevent=no --without-pythonmodule --disable-flto --with-pthreads --with-libunbound-only --host=aarch64-linux-android --with-pic --prefix=${PREFIX} && \
     make -j$THREADS && \
     make -j$THREADS install && \
     rm -rf $(pwd)
@@ -161,7 +161,7 @@ RUN git clone https://github.com/zeromq/libzmq.git -b ${ZMQ_VERSION} --depth 1 \
     && cd libzmq \
     && git checkout ${ZMQ_HASH} \
     && ./autogen.sh \
-    && CC=${ANDROID_CLANG} CXX=${ANDROID_CLANGPP} ./configure --prefix=${PREFIX} --host=aarch64-linux-android \
+    && CC=${ANDROID_CLANG} CXX=${ANDROID_CLANGPP} ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=${PREFIX} --host=aarch64-linux-android \
     --enable-static --disable-shared \
     && make -j${THREADS} \
     && make -j${THREADS} install \
@@ -174,7 +174,7 @@ RUN set -ex \
     && cd libsodium \
     && test `git rev-parse HEAD` = ${SODIUM_HASH} || exit 1 \
     && ./autogen.sh \
-    && CC=${ANDROID_CLANG} CXX=${ANDROID_CLANGPP} ./configure --prefix=${PREFIX} --host=aarch64-linux-android --enable-static --disable-shared \
+    && CC=${ANDROID_CLANG} CXX=${ANDROID_CLANGPP} ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=${PREFIX} --host=aarch64-linux-android --enable-static --disable-shared \
     && make -j${THREADS} install \
     && rm -rf $(pwd)
 
@@ -182,7 +182,7 @@ RUN git clone -b libgpg-error-1.38 --depth 1 git://git.gnupg.org/libgpg-error.gi
     && cd libgpg-error \
     && git reset --hard 71d278824c5fe61865f7927a2ed1aa3115f9e439 \
     && ./autogen.sh \
-    && CC=${ANDROID_CLANG} CXX=${ANDROID_CLANGPP} ./configure --host=aarch64-linux-android --prefix=${PREFIX} --disable-rpath --disable-shared --enable-static --disable-doc --disable-tests \
+    && CC=${ANDROID_CLANG} CXX=${ANDROID_CLANGPP} ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --host=aarch64-linux-android --prefix=${PREFIX} --disable-rpath --disable-shared --enable-static --disable-doc --disable-tests \
     && PATH=${TOOLCHAIN_DIR}/bin:${HOST_PATH} make -j${THREADS} \
     && make -j${THREADS} install \
     && rm -rf $(pwd)
@@ -191,13 +191,13 @@ RUN git clone -b libgcrypt-1.8.5 --depth 1 git://git.gnupg.org/libgcrypt.git \
     && cd libgcrypt \
     && git reset --hard 56606331bc2a80536db9fc11ad53695126007298 \
     && ./autogen.sh \
-    && CC=${ANDROID_CLANG} CXX=${ANDROID_CLANGPP} ./configure --host=aarch64-linux-android --prefix=${PREFIX} --with-gpg-error-prefix=${PREFIX} --disable-shared --enable-static --disable-doc --disable-tests \
+    && CC=${ANDROID_CLANG} CXX=${ANDROID_CLANGPP} ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --host=aarch64-linux-android --prefix=${PREFIX} --with-gpg-error-prefix=${PREFIX} --disable-shared --enable-static --disable-doc --disable-tests \
     && PATH=${TOOLCHAIN_DIR}/bin:${HOST_PATH} make -j${THREADS} \
     && make -j${THREADS} install \
     && rm -rf $(pwd)
 
 RUN cd tools \
-    && wget -q http://dl-ssl.google.com/android/repository/tools_r25.2.5-linux.zip \
+    && wget -q https://dl-ssl.google.com/android/repository/tools_r25.2.5-linux.zip \
     && unzip -q tools_r25.2.5-linux.zip \
     && rm -f tools_r25.2.5-linux.zip \
     && echo y | ${ANDROID_SDK_ROOT}/tools/android update sdk --no-ui --all --filter build-tools-28.0.3