{
  "startTime": 1674253251805,
  "endTime": 1674253253062,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 4,
        "columnEnd": 34
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM php:8.1-fpm as gewisweb_web_development\n\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n        cron \\\n        git \\\n        ghostscript \\\n        libcurl4-openssl-dev \\\n        libfreetype6-dev \\\n        libicu-dev \\\n        libjpeg62-turbo-dev \\\n        libmagickwand-dev \\\n        libmemcached-dev \\\n        libpng-dev \\\n        libpq-dev \\\n        libsqlite3-dev \\\n        libzip-dev \\\n        nano \\\n        poppler-utils \\\n        rsync \\\n        ssh \\\n        sshpass \\\n        unzip \\\n        zip \\\n    && apt-get upgrade -y --no-install-recommends \\\n    && rm -rf /var/lib/apt/lists/*\n\nRUN docker-php-ext-configure \\\n        gd --with-freetype --with-jpeg \\\n    && docker-php-ext-install \\\n        calendar \\\n        curl \\\n        exif \\\n        gd \\\n        intl \\\n        opcache \\\n        pgsql \\\n        pdo \\\n        pdo_mysql \\\n        pdo_pgsql \\\n        pdo_sqlite \\\n        zip\n\nRUN pecl install imagick \\\n    && docker-php-ext-enable imagick \\\n    && pecl install memcached \\\n    && docker-php-ext-enable memcached \\\n    && pecl install xdebug \\\n    && docker-php-ext-enable xdebug\n\nRUN sed -i 's/<policy domain=\"coder\" rights=\"none\" pattern=\"PDF\" \\/>/<policy domain=\"coder\" rights=\"read|write\" pattern=\"PDF\" \\/>/g' /etc/ImageMagick-6/policy.xml\n\nWORKDIR /code\n\nRUN php -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\" \\\n    && php composer-setup.php \\\n    && php -r \"unlink('composer-setup.php');\"\n\nRUN curl -fsSL https://deb.nodesource.com/setup_lts.x | bash - \\\n    && apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n        nodejs \\\n    && apt-get upgrade -y --no-install-recommends \\\n    && rm -rf /var/lib/apt/lists/*\n\nCOPY --chown=www-data:www-data ./composer.json ./\nRUN php composer.phar install\n\nCOPY --chown=www-data:www-data ./package.json ./package-lock.json ./\nRUN npm install --production=false && npm cache clean --force;\n\nCOPY --chown=www-data:www-data ./public/scss ./public/scss/\nRUN npm run scss\n\nCOPY --chown=www-data:www-data ./docker/web/development/php.ini /usr/local/etc/php/conf.d/default.ini\nCOPY --chown=www-data:www-data ./docker/web/development/php-fpm.conf /usr/local/etc/php-fpm.d/php-fpm.conf\nCOPY --chown=www-data:www-data ./config/autoload/local.development.php.dist ./config/autoload/local.php\nCOPY --chown=www-data:www-data ./config/autoload/doctrine.local.development.php.dist ./config/autoload/doctrine.local.php\nCOPY --chown=www-data:www-data ./config/autoload/gewisdb.local.php.dist ./config/autoload/gewisdb.local.php\nCOPY --chown=www-data:www-data ./config/autoload/laminas-developer-tools.local.php.dist ./config/autoload/laminas-developer-tools.local.php\n\nCOPY --chown=www-data:www-data ./docker/web/development/crontab /etc/cron.d/crontab\nRUN chmod 0644 /etc/cron.d/crontab && crontab /etc/cron.d/crontab\n\nCOPY --chown=www-data:www-data ./docker/web/development/docker-entrypoint.sh ./docker-entrypoint.sh\nRUN chmod 0775 ./docker-entrypoint.sh\n\nCOPY --chown=www-data:www-data . /code\n\nENV PHP_IDE_CONFIG=\"serverName=gewis.nl\"\n\nRUN php composer.phar dump-autoload\n\nARG GIT_COMMIT\nENV GIT_COMMIT=${GIT_COMMIT}\n\nVOLUME [\"/code/data\", \"/code/public\"]\n\nENTRYPOINT [\"/bin/sh\", \"/code/docker-entrypoint.sh\"]\n"
}