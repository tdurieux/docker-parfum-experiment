diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/sturdy-dev/sturdy/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/sturdy-dev/sturdy/Dockerfile/repaired.Dockerfile
index d88e381..ee094c1 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/sturdy-dev/sturdy/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/sturdy-dev/sturdy/Dockerfile/repaired.Dockerfile
@@ -1,5 +1,3 @@
-# syntax=docker/dockerfile:1
-
 ARG XX_VERSION=1.1.0
 
 FROM --platform=$BUILDPLATFORM tonistiigi/xx:${XX_VERSION} AS xx
@@ -33,12 +31,12 @@ COPY --from=ssh-builder /go/src/ssh/mutagen-agent-v0.13.0-beta2 /usr/bin/mutagen
 FROM golang:1.18.0-bullseye as libgit-builder
 
 RUN apt-get update \
-    && DEBIAN_FRONTEND=noninteractive apt-get install -y \
+    && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y \
     build-essential \
     clang \
     libssl-dev \
     libz-dev \
-    cmake
+    cmake && rm -rf /var/lib/apt/lists/*;
 
 COPY --from=xx / /
 
@@ -47,7 +45,7 @@ COPY --chmod=0744 scripts/docker/build_libgit2.sh .
 RUN ./build_libgit2.sh build_libgit2
 
 # TODO(gustav): figure out why running this step above (before building libgit2) breaks things
-RUN apt-get update && apt-get install -y libssh2-1-dev && rm -rf /var/lib/apt/lists/*
+RUN apt-get update && apt-get install --no-install-recommends -y libssh2-1-dev && rm -rf /var/lib/apt/lists/*
 
 FROM libgit-builder as api-builder
 
@@ -94,7 +92,7 @@ RUN apt-get update \
     musl-tools \
     ca-certificates \
     git \
-    && git clone https://github.com/jasonwhite/rudolfs
+    && git clone https://github.com/jasonwhite/rudolfs && rm -rf /var/lib/apt/lists/*;
 WORKDIR /rudolfs
 SHELL ["/bin/bash", "-c"]
 RUN --mount=type=cache,target=/usr/local/cargo/registry \
@@ -110,8 +108,8 @@ FROM debian:11.2-slim as rudolfs
 VOLUME ["/data"]
 RUN apt-get update \
     && apt-get install -y --no-install-recommends --allow-downgrades \
-    ca-certificates
-# use the correct binary depending on the architecture. we do this to avoid building amd64 version ourselves, 
+    ca-certificates && rm -rf /var/lib/apt/lists/*;
+# use the correct binary depending on the architecture. we do this to avoid building amd64 version ourselves,
 # as it requires us to run qemu emulation which is very slow.
 ARG TARGETARCH
 COPY --from=rudolfs-builder-arm64 /build/rudolfs /arm64/rudolfs
@@ -137,7 +135,7 @@ COPY ./web/yarn.lock ./yarn.lock
 # The --network-timeout is here to prevent network issues when building linux/amd64 images on linux/arm64 hosts
 RUN --mount=type=cache,target=/root/.yarn,id=web-installer-3 YARN_CACHE_FOLDER=/root/.yarn \
     yarn install --frozen-lockfile \
-    --network-timeout 1000000000
+    --network-timeout 1000000000 && yarn cache clean;
 # build web
 COPY ./web .
 RUN yarn build:oneliner
@@ -158,12 +156,12 @@ RUN if [[ "$(uname -m)" == 'aarch64' ]]; then \
     ARCH='x86_64'; \
     REPROXY_SHA256_SUM='100a1389882b8ab68ae94f37e9222f5f928ece299d8cfdf5b26c9f12f902c23a'; \
     fi \
-    && apt-get update && apt-get install -y wget \
+    && apt-get update && apt-get install --no-install-recommends -y wget \
     && wget --quiet --output-document "/tmp/reproxy.tar.gz" "https://github.com/umputun/reproxy/releases/download/${REPROXY_VERSION}/reproxy_${REPROXY_VERSION}_linux_${ARCH}.tar.gz" \
     && sha256sum "/tmp/reproxy.tar.gz" \
     && echo "${REPROXY_SHA256_SUM}  /tmp/reproxy.tar.gz" | sha256sum -c \
     && tar -xzf /tmp/reproxy.tar.gz -C /usr/bin \
-    && rm /tmp/reproxy.tar.gz
+    && rm /tmp/reproxy.tar.gz && rm -rf /var/lib/apt/lists/*;
 
 FROM debian:11.2-slim as oneliner
 # postgresql
@@ -177,8 +175,8 @@ RUN apt-get update \
     curl=7.74.0-1.3+deb11u1 \
     ca-certificates=20210119 \
     gnupg \
-    && curl https://www.postgresql.org/media/keys/ACCC4CF8.asc \
-    | gpg --dearmor \
+    && curl -f https://www.postgresql.org/media/keys/ACCC4CF8.asc \
+    | gpg --batch --dearmor \
     | tee /etc/apt/trusted.gpg.d/apt.postgresql.org.gpg >/dev/null \
     && echo "deb http://apt.postgresql.org/pub/repos/apt/ bullseye-pgdg main" > /etc/apt/sources.list.d/postgresql.list \
     && apt-get update \