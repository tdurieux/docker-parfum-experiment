{
  "startTime": 1674218803525,
  "endTime": 1674218804415,
  "originalSmells": [
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 32
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Build the manager binary\nFROM --platform=${BUILDPLATFORM:-linux/amd64} golang:1.17 as builder\n\nWORKDIR /workspace\n# Copy the Go Modules manifests\nCOPY go.mod go.mod\nCOPY go.sum go.sum\n# cache deps before building and copying source so that we don't need to re-download as much\n# and so that source changes don't invalidate our downloaded layer\nRUN go mod download\n\n# Copy the go source\nCOPY main.go main.go\nCOPY apis/ apis/\nCOPY cmd/ cmd/\nCOPY controllers/ controllers/\nCOPY pkg/ pkg/\n\nCOPY versions.txt versions.txt\n\nARG JAEGER_VERSION\nARG VERSION_PKG\nARG VERSION\nARG VERSION_DATE\n\n# Dockerfile `FROM --platform=${BUILDPLATFORM}` means\n# prepare image for build for matched BUILDPLATFORM, eq. linux/amd64\n# by this way, we could avoid to using qemu, which slow down compiling process.\n# and usefully for language who support multi-arch build like go.\n# see last part of https://docs.docker.com/buildx/working-with-buildx/#build-multi-platform-images\nARG TARGETARCH\n# Build\nRUN CGO_ENABLED=0 GOOS=linux GOARCH=${TARGETARCH} GO111MODULE=on go build -ldflags=\"-X ${VERSION_PKG}.version=${VERSION} -X ${VERSION_PKG}.buildDate=${VERSION_DATE} -X ${VERSION_PKG}.defaultJaeger=${JAEGER_VERSION}\" -a -o jaeger-operator main.go\n\nFROM registry.access.redhat.com/ubi8/ubi\n\nENV USER_UID=1001 \\\n    USER_NAME=jaeger-operator\n\nRUN INSTALL_PKGS=\"openssl\" && \\\n    yum install -y $INSTALL_PKGS && \\\n    rpm -V $INSTALL_PKGS && \\\n    yum clean all && \\\n    mkdir /tmp/_working_dir && \\\n    chmod og+w /tmp/_working_dir && rm -rf /var/cache/yum\n\nWORKDIR /\nCOPY --from=builder /workspace/jaeger-operator .\nCOPY scripts/cert_generation.sh scripts/cert_generation.sh\n\nUSER ${USER_UID}:${USER_UID}\n\nENTRYPOINT [\"/jaeger-operator\"]\n"
}