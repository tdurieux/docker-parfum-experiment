{
  "startTime": 1674215504249,
  "endTime": 1674215505217,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 124
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 77
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 77
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 77
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#   Copyright 2020 The KNIX Authors\n#\n#   Licensed under the Apache License, Version 2.0 (the \"License\");\n#   you may not use this file except in compliance with the License.\n#   You may obtain a copy of the License at\n#\n#       http://www.apache.org/licenses/LICENSE-2.0\n#\n#   Unless required by applicable law or agreed to in writing, software\n#   distributed under the License is distributed on an \"AS IS\" BASIS,\n#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#   See the License for the specific language governing permissions and\n#   limitations under the License.\n\nFROM ubuntu:18.04\n\nRUN apt-get update && apt-get install --no-install-recommends -y curl cron libpopt0 libssl1.0.0 logrotate sudo dnsutils && rm -rf /var/lib/apt/lists/*;\n\nENV RIAK_VERSION 2.9.0\nRUN groupadd -o -g 1000 -r riak && useradd -m -d /home/riak -u 1000 -c 'Riak user' -r -g riak riak\n\n# Download riak package\nRUN curl -f https://files.tiot.jp/riak/kv/2.9/2.9.0/ubuntu/bionic64/riak_2.9.0-1_amd64.deb -o /home/riak/riak_2.9.0-1_amd64.deb\n\nRUN dpkg -i /home/riak/riak_2.9.0-1_amd64.deb\n\n# Clean up APT cache\nRUN rm -rf /var/lib/apt/lists/* /tmp/*\n\n# Install Jiffy - Json parser for Erlang\nADD lib/jiffy.tgz /usr/lib/riak/lib/\n\n# Copy mfn counter triggers source (compiled by prestart script)\nRUN mkdir /usr/lib/riak/lib/mfn_counter_triggers\nCOPY src/mfn_counter_triggers.erl /usr/lib/riak/lib/mfn_counter_triggers\n\n# Copy workflow_triggers source (compiled by prestart script)\nRUN mkdir /usr/lib/riak/lib/workflow_triggers\nCOPY src/workflow_triggers.erl /usr/lib/riak/lib/workflow_triggers\n\n# Install custom start script\nCOPY script/riak-cluster.sh /usr/lib/riak/riak-cluster.sh\nCOPY script/shutdown.sh /usr/lib/riak/shutdown.sh\nRUN chmod a+x /usr/lib/riak/riak-cluster.sh\nRUN chmod a+x /usr/lib/riak/shutdown.sh\nRUN echo \"riak soft nofile 65536\" >> /etc/security/limits.conf\nRUN echo \"riak hard nofile 200000\" >> /etc/security/limits.conf\n\n# Install custom hooks\nCOPY script/prestart.d /etc/riak/prestart.d\nCOPY script/poststart.d /etc/riak/poststart.d\n\n# Prepare for bootstrapping schemas\nRUN mkdir -p /etc/riak/schemas\n\nRUN chown riak:riak -R /etc/riak\nRUN chown riak:riak -R /usr/lib/riak/lib/mfn_counter_triggers\nRUN chown riak:riak -R /usr/lib/riak/lib/workflow_triggers\n\n# Prepare data dir\nRUN mkdir -p /var/lib/riak\nRUN chown riak:riak -R /var/lib/riak\n\nUSER riak\nWORKDIR /home/riak\n\n# Expose default ports\nEXPOSE 8087\nEXPOSE 8098\n\nCMD [\"/usr/lib/riak/riak-cluster.sh\"]\n"
}