{
  "startTime": 1674254441777,
  "endTime": 1674254442824,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 55
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 33,
        "columnEnd": 69
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 66
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 22,
        "columnEnd": 85
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM deeppavlov/base-gpu:0.14.1\n\nARG MIDAS_DATA_URL=https://files.deeppavlov.ai/alexaprize_data/midas.tar.gz\nARG CONVERT_DATA_URL=https://files.deeppavlov.ai/alexaprize_data/convert_reddit_v2.8.tar.gz\n\nRUN apt-get update && apt-get install --no-install-recommends -y --allow-unauthenticated curl ca-certificates && rm -rf /var/lib/apt/lists/*\n\nRUN mkdir /src\nRUN mkdir /midas\nRUN mkdir /convert\n\nRUN openssl version\nRUN curl -f $MIDAS_DATA_URL --output /tmp/midas.tar.gz && tar -zvxf /tmp/midas.tar.gz -C /midas && rm -f /tmp/midas.tar.gz\nRUN curl -f $CONVERT_DATA_URL --output /tmp/convert.tar.gz && tar -zvxf /tmp/convert.tar.gz -C /convert && rm -f /tmp/convert.tar.gz\n\nCOPY ./requirements.txt /src/requirements.txt\nRUN pip install --no-cache-dir --upgrade pip && pip install --no-cache-dir -r /src/requirements.txt\nRUN pip uninstall -y protobuf tensorflow tensorflow-gpu && \\\n    pip install --no-cache-dir --upgrade --force-reinstall tensorflow-gpu==1.14.0 && \\\n    pip install --no-cache-dir Werkzeug==2.0.3\n\nCOPY . /src/\n\nARG SERVICE_NAME\nENV SERVICE_NAME ${SERVICE_NAME}\n\nARG SERVICE_PORT\nENV SERVICE_PORT ${SERVICE_PORT}\n\nWORKDIR /src\n\nCMD gunicorn --workers=1 server:app -b 0.0.0.0:${SERVICE_PORT}\n"
}