diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/node-opcua/opcua-commander/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/node-opcua/opcua-commander/Dockerfile/repaired.Dockerfile
index 33722d2..6d17cff 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/node-opcua/opcua-commander/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/node-opcua/opcua-commander/Dockerfile/repaired.Dockerfile
@@ -1,7 +1,7 @@
 FROM node:alpine3.10
 
 
-RUN apk add openssl dos2unix
+RUN apk add --no-cache openssl dos2unix
 
 # Create app directory
 WORKDIR /opt/opcuacommander
@@ -12,16 +12,16 @@ WORKDIR /opt/opcuacommander
 # Bundle app source
 COPY . .
 COPY package*.json ./
-RUN dos2unix bin/opcua-commander 
+RUN dos2unix bin/opcua-commander
 
 # If you are building your code for production
 # The set registry can help in situations behind a firewall with scrict security settings and own CA Certificates.
 RUN npm config set registry http://registry.npmjs.org/ && npm ci --only=production --unsafe-perm=true --allow-root
 # Install typescript and build solution
-RUN npm install -g typescript && npm run build
+RUN npm install -g typescript && npm run build && npm cache clean --force;
 
 ENTRYPOINT [ "./bin/opcua-commander" ]
 # to build
 #    docker build . -t commander
-# to run 
+# to run
 #    docker run -it commander  -e opc.tcp://localhost:26543