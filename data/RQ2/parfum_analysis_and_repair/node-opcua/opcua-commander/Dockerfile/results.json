{
  "startTime": 1674251047500,
  "endTime": 1674251048124,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 28
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:alpine3.10\n\n\nRUN apk add --no-cache openssl dos2unix\n\n# Create app directory\nWORKDIR /opt/opcuacommander\n\n# Install app dependencies\n# A wildcard is used to ensure both package.json AND package-lock.json are copied\n# where available (npm@5+)\n# Bundle app source\nCOPY . .\nCOPY package*.json ./\nRUN dos2unix bin/opcua-commander\n\n# If you are building your code for production\n# The set registry can help in situations behind a firewall with scrict security settings and own CA Certificates.\nRUN npm config set registry http://registry.npmjs.org/ && npm ci --only=production --unsafe-perm=true --allow-root\n# Install typescript and build solution\nRUN npm install -g typescript && npm run build && npm cache clean --force;\n\nENTRYPOINT [ \"./bin/opcua-commander\" ]\n# to build\n#    docker build . -t commander\n# to run\n#    docker run -it commander  -e opc.tcp://localhost:26543\n"
}