{
  "startTime": 1674254408641,
  "endTime": 1674254409232,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 13,
        "columnStart": 8,
        "columnEnd": 11
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 13,
        "columnStart": 8,
        "columnEnd": 11
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM golang:1.12\nMAINTAINER Andrew Grosser <dioptre@gmail.com>\n\n\nEXPOSE 6001\nEXPOSE 6002\nEXPOSE 6003\n\nRUN apt update \\\n     && apt install --no-install-recommends -y build-essential cmake libjemalloc-dev libbz2-dev libsnappy-dev zlib1g-dev liblz4-dev libzstd-dev \\\n     sudo \\\n     supervisor \\\n     netcat && rm -rf /var/lib/apt/lists/*;\n\n############\n## Physical instructions:\n############\n# apt install git\n# apt upgrade\n\n## Get good go build\n## https://golang.org/dl/\n\n# wget https://dl.google.com/go/go1.13.4.linux-amd64.tar.gz\n#tar -xvf go1.13.3.linux-amd64.tar.gz\n#sudo mv go /usr/local\n#mkdir projects\n#cd projects/\n#mkdir go\n#vi ~/.bashrc\n\n## Add to .bashrc\n#echo \"export GOROOT=/usr/local/go\" >> ~/.bashrc\n#echo \"export GOPATH=$HOME/projects/go\" >> ~/.bashrc\n#echo \"export PATH=$HOME/projects/go/bin:/usr/local/go/bin:$PATH\" >> ~/.bashrc\n\n# cd ~/projects\n# git clone https://github.com/lni/dragonboat\n# cd dragonboat\n# ROCKSDB_VER=5.17.2 make install-rocksdb-ull\n\n# cd ~/projects\n# git clone https://github.com/dioptre/dcrontab\n# cd dcrontab/dcrontab\n# go get\n# cd ..\n# make\n\n#sudo mkdir /app\n#sudo chown admin:admin /app\n#ln -s /home/admin/projects/dcrontab /app/dcrontab\n\n#sudo ln /home/admin/projects/dcrontab/supervisor.conf /etc/supervisor.conf\n#sudo ln /home/admin/projects/dcrontab/dcron.supervisor.conf /etc/supervisor/conf.d/dcron.supervisor.conf\n\n##UPDATE THE CONFIG FILE\n\n## Change hostname on amazon jessie\n#sudo hostnamectl set-hostname dcrontab1\n#sudo reboot\n\nCOPY supervisor.conf /etc/supervisor.conf\nCOPY dcron.supervisor.conf /etc/supervisor/conf.d/dcron.supervisor.conf\n\n# # installing latest gflags\n# RUN cd /tmp && \\\n#     git clone https://github.com/gflags/gflags.git && \\\n#     cd gflags && \\\n#     mkdir build && \\\n#     cd build && \\\n#     cmake -DBUILD_SHARED_LIBS=1 -DGFLAGS_INSTALL_SHARED_LIBS=1 .. && \\\n#     make install && \\\n#     cd /tmp && \\\n#     rm -R /tmp/gflags/\n\n# # Install Rocksdb\n# RUN cd /tmp && \\\n#     git clone https://github.com/facebook/rocksdb.git && \\\n#     cd rocksdb && \\\n#     git checkout v6.3.6 && \\\n#     make shared_lib && \\\n#     mkdir -p /usr/local/rocksdb/lib && \\\n#     mkdir /usr/local/rocksdb/include && \\\n#     cp librocksdb.so* /usr/local/rocksdb/lib && \\\n#     cp /usr/local/rocksdb/lib/librocksdb.so* /usr/lib/ && \\\n#     cp -r include /usr/local/rocksdb/ && \\\n#     cp -r include/* /usr/include/ && \\\n#     rm -R /tmp/rocksdb/\n\n# #Install Gorocksdb\n# RUN CGO_CFLAGS=\"-I/usr/local/rocksdb/include\" \\\n#     CGO_LDFLAGS=\"-L/usr/local/rocksdb/lib -lrocksdb -lstdc++ -lm -lz -lbz2 -lsnappy -llz4 -lzstd\" \\\n#     go get github.com/tecbot/gorocksdb\n\n# # RUN go get github.com/tecbot/gorocksdb\nENV ROCKSDB_VER=5.17.2\n\nWORKDIR $HOME/src\nRUN git clone https://github.com/lni/dragonboat\nWORKDIR $HOME/src/dragonboat\n# RUN sed -i 's/ROCKSDB_MAJOR_VER\\=.*$/ROCKSDB_MAJOR_VER\\=5/ig' Makefile\n# RUN sed -i 's/ROCKSDB_MINOR_VER\\=.*$/ROCKSDB_MINOR_VER\\=17/ig' Makefile\n# RUN sed -i 's/ROCKSDB_PATCH_VER\\=.*$/ROCKSDB_PATCH_VER\\=2/ig' Makefile\nRUN make install-rocksdb-ull\n\nWORKDIR /app/dcrontab\nADD . /app/dcrontab\nRUN rm -rf dcrontab-data\nRUN go get\nRUN make\n\n#sudo docker build -t dcrontab .\nCMD bash dockercmd.sh\n\n"
}