{
  "startTime": 1674254133658,
  "endTime": 1674254134777,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 1,
        "columnEnd": 40
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 55
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 158,
        "lineEnd": 158,
        "columnStart": 5,
        "columnEnd": 112
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 1,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 23,
        "columnStart": 22,
        "columnEnd": 14
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 121,
        "lineEnd": 121,
        "columnStart": 4,
        "columnEnd": 100
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 155,
        "lineEnd": 155,
        "columnStart": 22,
        "columnEnd": 52
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 121,
        "lineEnd": 121,
        "columnStart": 4,
        "columnEnd": 100
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 155,
        "lineEnd": 155,
        "columnStart": 22,
        "columnEnd": 52
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 121,
        "lineEnd": 121,
        "columnStart": 4,
        "columnEnd": 124
      }
    }
  ],
  "repairedDockerfile": "# Copyright (c) Jupyter Development Team.\n# Distributed under the terms of the Modified BSD License.\nFROM jupyter/scipy-notebook\n\nUSER $NB_USER\n\n#Install nbgrader\nRUN conda install nbgrader\n\nRUN jupyter nbextension install --user --py nbgrader\nRUN jupyter nbextension enable --user --py nbgrader\nRUN jupyter serverextension enable --user --py nbgrader\n\nUSER root\nRUN apt-get update && apt-get install --no-install-recommends -y curl \\\n\tlibtinfo-dev \\\n\tlibzmq3-dev \\\n\tlibcairo2-dev \\\n\tlibpango1.0-dev \\\n\tlibmagic-dev \\\n\tlibblas-dev \\\n\tpython3-pip \\\n\tnetbase \\\n\tliblapack-dev && \\\n\tapt-key adv --keyserver keyserver.ubuntu.com --recv-keys 575159689BEFB442 && \\\n    echo 'deb http://download.fpcomplete.com/ubuntu trusty main' > /etc/apt/sources.list.d/fpco.list && \\\n\tcurl -f -sSL https://get.haskellstack.org/ | sh && \\\n\tapt-get clean && \\\n\trm -rf /var/lib/apt/lists/*\n\nENV PATH=\"/home/$NB_USER/.local/bin:${PATH}\"\n\nUSER $NB_USER\n#JavaScript Installation\nRUN git clone https://github.com/notablemind/jupyter-nodejs.git && cd jupyter-nodejs && \\\n\tumask 0002 && mkdir -p ~/.ipython/kernels/nodejs/ && \\\n\tnpm install && node install.js && \\\n\tnpm run build && npm run build-ext && npm cache clean --force;\n\n#Haskell Installation\nRUN PATH=//home/jovyan/.local/bin/:$PATH\nRUN export PATH\n\n\n# Install stack from Stackage\nUSER root\nRUN curl -f -L https://www.stackage.org/stack/linux-x86_64 | tar xz --wildcards --strip-components=1 -C /usr/bin '*/stack'\nUSER $NB_USER\n\nWORKDIR /home/jovyan\n\nRUN stack --version\n\n\n# Installing iHaskell from sources\nRUN mkdir ihaskell\nRUN git clone https://github.com/gibiansky/IHaskell.git --depth 1\n\nWORKDIR ihaskell\n\nRUN cp  ../IHaskell/stack.yaml ./\n# Fix for problem with cryptonite (https://github.com/gibiansky/IHaskell/issues/636)\nRUN echo \"ghc-options:\" >> stack.yaml\nRUN echo \"  cryptonite: -opta-Wa,-mrelax-relocations=no\" >> stack.yaml\nRUN cat stack.yaml\nRUN stack setup\nRUN cp  ../IHaskell/ihaskell.cabal ./ && cp -R ../IHaskell/ipython-kernel \\\n\t../IHaskell/ghc-parser ../IHaskell/ihaskell-display  ./\nRUN stack build --only-snapshot\nRUN cp -r ../IHaskell/src ../IHaskell/html ../IHaskell/main ../IHaskell/LICENSE ./\nRUN stack build\nRUN stack install\n#Now rebuild cryptonite in order to fix problems\nRUN stack exec -- ghc-pkg unregister cryptonite --force\nRUN stack build\n\nRUN ihaskell install\n\n# Install additional Haskell packages required for exercises\nRUN stack install http-conduit\nRUN stack install cassava\n\n\n# Install Java Kernel\n#USER root\n#RUN echo \"deb http://ppa.launchpad.net/webupd8team/java/ubuntu xenial main\" | tee /etc/apt/sources.list.d/webupd8team-java.list && \\\n#\techo \"deb-src http://ppa.launchpad.net/webupd8team/java/ubuntu xenial main\" | tee -a /etc/apt/sources.list.d/webupd8team-java.list && \\\n#\tapt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys EEA14886 && \\\n#\tapt-get update\n#RUN echo debconf shared/accepted-oracle-license-v1-1 select true | sudo debconf-set-selections && \\\n#\techo debconf shared/accepted-oracle-license-v1-1 seen true | sudo debconf-set-selections\n#RUN apt-get install -y oracle-java9-installer\n\n#USER $NB_USER\n#WORKDIR /home/jovyan\n#RUN git clone https://github.com/SpencerPark/jupyter-jvm-basekernel.git --depth 1 ./jupyter-jvm-basekernel && \\\n#\tcd jupyter-jvm-basekernel && ls -al\n#WORKDIR /home/jovyan/jupyter-jvm-basekernel\n#RUN echo \"Currently (should be /home(jovyan/jupyter-jvm-basekernel) in $(pwd)\"\n#RUN echo $(ls -al)\n#RUN chmod u+x gradlew && ./gradlew publishToMavenLocal && cd /home/jovyan\n\n#RUN cd /home/jovyan\n\n#WORKDIR /home/jovyan\n#RUN echo \"Currently in $(pwd)\"\n\n#RUN git clone https://github.com/SpencerPark/IJava.git --depth 1 && \\\n#\tcd IJava/\n\n#WORKDIR /home/jovyan/IJava\n#RUN echo \"Currently in $(pwd)\"\n#RUN ls -al $(pwd)\n#RUN chmod u+x ./gradlew && ./gradlew installKernel\n\n#Installing C#\nWORKDIR /home/jovyan\nUSER root\nRUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF && \\\n\techo \"deb http://download.mono-project.com/repo/ubuntu xenial main\" | sudo tee /etc/apt/sources.list.d/mono-official.list && \\\n\tapt-get update\nRUN apt-get install --no-install-recommends -y binutils mono-devel ca-certificates-mono fsharp nuget referenceassemblies-pcl && \\\n\trm -rf /var/lib/apt/lists/* /tmp/*\nRUN cert-sync /etc/ssl/certs/ca-certificates.crt \\\n\t&& yes | certmgr -ssl -m https://go.microsoft.com \\\n\t&& yes | certmgr -ssl -m https://nugetgallery.blob.core.windows.net \\\n\t&& yes | certmgr -ssl -m https://nuget.org\n\nRUN chown -R $NB_USER $HOME/.config/\n\nUSER $NB_USER\nRUN git clone --recursive https://github.com/zabirauf/icsharp.git --depth 1 ./icsharp\n\n# Build scriptcs\nWORKDIR /home/jovyan/icsharp/Engine\nRUN mozroots --import --sync --quiet\nRUN mono ./.nuget/NuGet.exe restore ./ScriptCs.sln\nRUN mkdir -p artifacts/Release/bin\n\n# Build iCSharp\nWORKDIR /home/jovyan/icsharp\nRUN mozroots --import --sync --quiet\nRUN mono ./.nuget/NuGet.exe restore ./iCSharp.sln\nRUN mkdir -p build/Release/bin\nRUN xbuild ./iCSharp.sln /property:Configuration=Release /nologo /verbosity:normal\n# Copy files safely\nRUN for line in $(find ./*/bin/Release/*); do cp $line ./build/Release/bin; done\n# Install kernel\nRUN sed -i 's_\"<.*>/icsharp_\"mono\",\"/home/jovyan/icsharp_g'  kernel-spec/kernel.json\nRUN mv kernel-spec csharp\nUSER root\nRUN jupyter-kernelspec install --user csharp\n\n# Install jupyter-scala\nUSER root\nRUN apt-get update && apt-get install --no-install-recommends -y default-jdk && rm -rf /var/lib/apt/lists/*;\nUSER $NB_USER\nWORKDIR /home/jovyan\nRUN curl -f -L -o jupyter-scala https://raw.githubusercontent.com/jupyter-scala/jupyter-scala/master/jupyter-scala \\\n\t&& chmod +x jupyter-scala \\\n\t&& ./jupyter-scala \\\n\t&& rm -f jupyter-scala\n\nWORKDIR /home/jovyan/work\nUSER root\nRUN chmod -R g=u /home/jovyan\n\nENV PATH /home/jovyan/ihaskell/.stack-work/install/x86_64-linux/lts-9.21/8.0.2/bin:/home/jovyan/.stack/snapshots/x86_64-linux/lts-9.21/8.0.2/bin:/home/jovyan/.stack/programs/x86_64-linux/ghc-8.0.2/bin:$PATH\n#RUN echo \"PATH = $NEWPATH\"\n\n#USER $NB_USER\n\n\nWORKDIR /home/jovyan/ihaskell\nRUN echo \"Test\"\nCOPY start.sh /usr/local/bin\nRUN chmod +x /usr/local/bin/start.sh\n\n#COPY start-singleuser.sh /usr/local/bin\n"
}