{
  "startTime": 1674216707395,
  "endTime": 1674216708122,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 4,
        "columnEnd": 26
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM golang:1.13.15-alpine3.12 as builder-torgen\n\nRUN apk add --no-cache git build-base\n\nRUN mkdir -p /go/src/torgen\n\nCOPY torgen/torgen.go /go/src/torgen\n\nWORKDIR /go/src/torgen\n\nRUN go get\n\nRUN go build torgen.go\nRUN chmod +x /go/src/torgen/torgen\n\nFROM alpine:3.12.4 as builder-qrencode\n\nRUN apk add --update --no-cache \\\n    autoconf \\\n    automake \\\n    build-base \\\n    libtool \\\n    git \\\n    pkgconfig\n\nRUN git clone -b v4.1.0 https://github.com/fukuchi/libqrencode.git \\\n && cd libqrencode \\\n && ./autogen.sh \\\n && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n && make \\\n && make install\n\nFROM node:15.11.0-alpine3.12\n\nENV EDITOR=/usr/bin/nano\n\nCOPY . /app\nCOPY --from=builder-torgen /go/src/torgen/torgen /app/torgen\nCOPY --from=builder-qrencode /usr/local/bin/qrencode /usr/local/bin/\nCOPY --from=builder-qrencode /usr/local/lib/libqrencode.so.4.1.0 /usr/local/lib/libqrencode.so.4\n\nWORKDIR /app\n\nRUN mkdir /data && \\\n  apk add --update su-exec p7zip openssl nano apache2-utils git && \\\n  rm -rf /var/cache/apk/* && \\\n  npm ci --production\n\nWORKDIR /app\n\nENTRYPOINT [\"/sbin/su-exec\"]\n\n"
}