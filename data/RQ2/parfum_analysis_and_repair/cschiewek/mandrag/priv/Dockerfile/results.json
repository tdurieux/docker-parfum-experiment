{
  "startTime": 1674252597971,
  "endTime": 1674252598922,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 40,
        "columnEnd": 51
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 68,
        "columnEnd": 80
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Build intermediate image to build relase\nFROM bitwalker/alpine-elixir-phoenix:latest as builder\n\nARG name=phoenix\nENV name=${name} MIX_ENV=prod\n\nADD . .\n\n# If there's assets, install and build them\nRUN if [ -d assets ]; then \\\n      mix deps.get && cd assets && \\\n      if [ -f package-lock.json ]; then \\\n      npm install && npm run deploy; npm cache clean --force; fi && \\\n      if [ -f yarn.lock ]; then \\\n      apk add --update --no-cache yarn && yarn install && yarn deploy; yarn cache clean; fi && \\\n      cd .. && mix phx.digest; \\\n    fi\n\n# Build the release\nRUN mix release\n\n# Build the actual release image\nFROM bitwalker/alpine-erlang:latest\n\nARG name\n\nENV name=${name} PORT=4000 MIX_ENV=prod SHELL=/bin/sh REPLACE_OS_VARS=true\nEXPOSE 4000\nCMD /opt/app/bin/$name start\n\nCOPY --from=builder /opt/app/_build/prod/rel/$name .\n"
}