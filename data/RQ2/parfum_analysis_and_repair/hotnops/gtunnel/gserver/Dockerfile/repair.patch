diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/hotnops/gtunnel/gserver/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/hotnops/gtunnel/gserver/Dockerfile/repaired.Dockerfile
index 73ba231..7420090 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/hotnops/gtunnel/gserver/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/hotnops/gtunnel/gserver/Dockerfile/repaired.Dockerfile
@@ -4,8 +4,8 @@ WORKDIR /go/src/gTunnel
 ENV PATH=$PATH:/protoc/bin:$GOPATH/bin
 
 # We need unzip to install protoc
-RUN apt update && apt install -y \
-	unzip
+RUN apt update && apt install --no-install-recommends -y \
+	unzip && rm -rf /var/lib/apt/lists/*;
 
 # Install protoc and all dependencies
 RUN go get -u google.golang.org/grpc && \
@@ -34,14 +34,14 @@ CMD go build -o build/gtuncli gtuncli.go
 
 # The gserver image used to run the gtunnel server
 FROM gtunbase AS gtunserver-build
-RUN apt install -y openssl
+RUN apt install --no-install-recommends -y openssl && rm -rf /var/lib/apt/lists/*;
 #	gcc-mingw-w64-i686 \
 #	gcc-mingw-w64-x86-64
 RUN mkdir tls && openssl req -new -newkey rsa:4096 -x509 -sha256 -days 365 -nodes -out tls/cert -subj "/C=/ST=/L=/O=/CN=" -keyout tls/key
 RUN GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -o gserver/gserver gserver/gServer.go
 
 FROM alpine:3.7 AS gtunserver-prod
-RUN apk --update add redis
+RUN apk --update --no-cache add redis
 COPY --from=gtunserver-build /go/src/gTunnel/gserver/gserver .
 CMD ./gserver