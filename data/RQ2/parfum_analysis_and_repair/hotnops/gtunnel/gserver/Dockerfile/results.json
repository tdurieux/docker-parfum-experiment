{
  "startTime": 1674256055639,
  "endTime": 1674256056570,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 7,
        "columnStart": 18,
        "columnEnd": 6
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 7,
        "columnStart": 18,
        "columnEnd": 6
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 26
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 50
      }
    }
  ],
  "repairedDockerfile": "FROM golang:1.14 AS gtunbase\n\nWORKDIR /go/src/gTunnel\nENV PATH=$PATH:/protoc/bin:$GOPATH/bin\n\n# We need unzip to install protoc\nRUN apt update && apt install --no-install-recommends -y \\\n\tunzip && rm -rf /var/lib/apt/lists/*;\n\n# Install protoc and all dependencies\nRUN go get -u google.golang.org/grpc && \\\n\twget https://github.com/protocolbuffers/protobuf/releases/download/v3.11.4/protoc-3.11.4-linux-x86_64.zip && \\\n\tunzip protoc-3.11.4-linux-x86_64.zip -d /protoc && \\\n\tgo get -u github.com/golang/protobuf/protoc-gen-go && \\\n\trm protoc-3.11.4-linux-x86_64.zip\n\n# Copy over all gtunnel files and directories\nCOPY go.mod .\nCOPY gserver/ gserver/.\nCOPY common/ common/.\nCOPY grpc/ grpc/.\n\n# Build all protoc files\nRUN cd grpc && ./build_protoc.sh && cd ..\n\n# Get all gtunnel dependencies\nRUN go get -d -v ./... && go install -v ./...\n\n# The image for building gtuncli\nFROM gtunbase AS gtuncli\nRUN mkdir gtuncli\nWORKDIR /go/src/gTunnel/gtuncli\nCMD go build -o build/gtuncli gtuncli.go\n\n# The gserver image used to run the gtunnel server\nFROM gtunbase AS gtunserver-build\nRUN apt install --no-install-recommends -y openssl && rm -rf /var/lib/apt/lists/*;\n#\tgcc-mingw-w64-i686 \\\n#\tgcc-mingw-w64-x86-64\nRUN mkdir tls && openssl req -new -newkey rsa:4096 -x509 -sha256 -days 365 -nodes -out tls/cert -subj \"/C=/ST=/L=/O=/CN=\" -keyout tls/key\nRUN GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -o gserver/gserver gserver/gServer.go\n\nFROM alpine:3.7 AS gtunserver-prod\nRUN apk --update --no-cache add redis\nCOPY --from=gtunserver-build /go/src/gTunnel/gserver/gserver .\nCMD ./gserver\n\n\n\n# The gserver debug image used for debugging gtunnel server\nFROM gtunserver AS gtunserver-debug\nRUN go get -u github.com/go-delve/delve/cmd/dlv\nCMD [\"dlv\", \"--headless\", \"--listen=0.0.0.0:2345\", \"--api-version=2\", \"debug\", \"gserver/gServer.go\"]\n\n"
}