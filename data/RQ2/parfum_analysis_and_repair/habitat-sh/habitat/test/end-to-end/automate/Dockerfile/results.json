{
  "startTime": 1674253288192,
  "endTime": 1674253289832,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 102
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 22,
        "columnEnd": 45
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 22,
        "columnEnd": 45
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu\n\n# We need curl\nRUN apt-get update && apt-get -y --no-install-recommends install curl && rm -rf /var/lib/apt/lists/*;\n\n# Download latest release of automate\nRUN curl -f https://packages.chef.io/files/current/latest/chef-automate-cli/chef-automate_linux_amd64.zip | gunzip - > chef-automate && chmod +x chef-automate\n\n# Configure automate. Make sure its fqdn is set to localhost and not the build containers\n# IP or hostname which will only work in the build environment\nRUN ./chef-automate init-config --fqdn localhost\n\n# Docker environment may not have a systemd so hint to automate not to use it\nENV CHEF_AUTOMATE_SKIP_SYSTEMD=\"true\"\n\nENV HAB_LICENSE=accept-no-persist\n\n# Get all the automate services deployed and running\nRUN mkdir -p /hab/sup/default\nRUN ./chef-automate deploy config.toml --skip-preflight --accept-terms-and-mlsa\n\n# This is how containers will start automate\nCMD hab sup run\n"
}