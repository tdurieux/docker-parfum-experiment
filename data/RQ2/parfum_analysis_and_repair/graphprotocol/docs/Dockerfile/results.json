{
  "startTime": 1674217739473,
  "endTime": 1674217740104,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 20,
        "columnEnd": 36
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 18,
        "columnEnd": 34
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 19,
        "columnEnd": 35
      }
    }
  ],
  "repairedDockerfile": "FROM node:16.13.1-alpine3.14 as builder\n\nRUN apk add --no-cache git\n\nWORKDIR /app\n\n# copy package and lock files first for better caching\nCOPY ./package.json /app/package.json\nCOPY ./yarn.lock /app/yarn.lock\n\n# install the packages\nRUN yarn install && yarn cache clean;\n\n# copy the rest\nCOPY . .\n\nRUN yarn build && yarn cache clean;\nRUN yarn export && yarn cache clean;\n\n## production environment\nFROM nginx:1.16.0-alpine\n\nCOPY --from=builder ./app/nginx.conf /etc/nginx/\nCOPY --from=builder /app/out /usr/share/nginx/html\n\nEXPOSE 80/tcp\n\nCMD [\"nginx\", \"-g\", \"daemon off;\"]\n"
}