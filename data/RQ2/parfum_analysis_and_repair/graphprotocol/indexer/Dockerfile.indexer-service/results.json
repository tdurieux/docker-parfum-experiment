{
  "startTime": 1674248150031,
  "endTime": 1674248150870,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 22,
        "columnEnd": 72
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 22,
        "columnEnd": 72
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 22,
        "columnEnd": 72
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 22,
        "columnEnd": 72
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "########################################################################\n# Build image\n\nFROM node:16.15-bullseye-slim as build\n\nENV NODE_ENV production\n\nRUN apt-get update && apt-get install --no-install-recommends -y python build-essential git curl && rm -rf /var/lib/apt/lists/*;\n\n# Install Rust\nRUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs > /tmp/rustup.sh && sh /tmp/rustup.sh -y\nENV PATH=\"/root/.cargo/bin:$PATH\"\n\nWORKDIR /opt/indexer\n\n# Copy root files\nCOPY package.json .\nCOPY yarn.lock .\nCOPY lerna.json .\nCOPY tsconfig.json .\n\n# Copy shared and package files\nCOPY packages/indexer-common/ ./packages/indexer-common\nCOPY packages/indexer-native/ ./packages/indexer-native\nCOPY packages/indexer-service/ ./packages/indexer-service\n\n# Install dependencies; include dev dependencies\nRUN yarn --frozen-lockfile --non-interactive --production=false\n\n########################################################################\n# Runtime image\n\nFROM node:16.15-bullseye-slim\n\nENV NODE_ENV production\n\nRUN apt-get update && apt-get install --no-install-recommends -y python build-essential git curl && rm -rf /var/lib/apt/lists/*;\n\n# Install Rust\nRUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs > /tmp/rustup.sh && sh /tmp/rustup.sh -y\nENV PATH=\"/root/.cargo/bin:$PATH\"\n\nWORKDIR /opt/indexer\n\n# Copy root files\nCOPY package.json .\nCOPY yarn.lock .\nCOPY lerna.json .\nCOPY tsconfig.json .\n\n# Copy build output\nCOPY --from=build /opt/indexer/packages/indexer-common/package.json /opt/indexer/packages/indexer-common/package.json\nCOPY --from=build /opt/indexer/packages/indexer-common/dist /opt/indexer/packages/indexer-common/dist\nCOPY --from=build /opt/indexer/packages/indexer-native/package.json /opt/indexer/packages/indexer-native/package.json\nCOPY --from=build /opt/indexer/packages/indexer-native/lib /opt/indexer/packages/indexer-native/lib\nCOPY --from=build /opt/indexer/packages/indexer-native/native /opt/indexer/packages/indexer-native/native\nCOPY --from=build /opt/indexer/packages/indexer-service/package.json /opt/indexer/packages/indexer-service/package.json\nCOPY --from=build /opt/indexer/packages/indexer-service/dist /opt/indexer/packages/indexer-service/dist\n\n# Install dependencies; exclude dev dependencies\nRUN yarn --frozen-lockfile --non-interactive\n\nENV ETHEREUM \"\"\n\n# Run the indexer-service\nWORKDIR /opt/indexer/packages/indexer-service\nENTRYPOINT [\"node\", \"dist/index.js\", \"start\"]\n"
}