{
  "startTime": 1674218477510,
  "endTime": 1674218478317,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 22,
        "columnEnd": 72
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 22,
        "columnEnd": 72
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 22,
        "columnEnd": 72
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 22,
        "columnEnd": 72
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 67,
        "columnEnd": 83
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 48,
        "columnEnd": 64
      }
    }
  ],
  "repairedDockerfile": "########################################################################\n# Build image\n\nFROM node:16.15-bullseye-slim as build\n\nENV NODE_ENV production\n\nRUN apt-get update && apt-get install --no-install-recommends -y python build-essential git curl && rm -rf /var/lib/apt/lists/*;\n\n# Install Rust\nRUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs > /tmp/rustup.sh && sh /tmp/rustup.sh -y\nENV PATH=\"/root/.cargo/bin:$PATH\"\n\nWORKDIR /opt/indexer\n\n# Copy root files\nCOPY package.json .\nCOPY yarn.lock .\nCOPY tsconfig.json .\nCOPY lerna.json .\n\n# Copy shared and package files\nCOPY packages/indexer-common/ ./packages/indexer-common\nCOPY packages/indexer-agent/ ./packages/indexer-agent\n\n# Install dependencies; include dev dependencies\nRUN yarn --frozen-lockfile --non-interactive --production=false && yarn cache clean;\n\n########################################################################\n# Runtime image\n\nFROM node:16.15-bullseye-slim\n\nENV NODE_ENV production\n# When simulating large transactions, sometimes indexer-agent runs out of memory.\n# This flag seems force node into GC earlier, preventing the crash\n# 1536mb is 1.5GB, which is appropriate for an environment with 2GB RAM\nENV NODE_OPTIONS=\"--max-old-space-size=1536\"\n\n\nRUN apt-get update && apt-get install --no-install-recommends -y python build-essential git curl && rm -rf /var/lib/apt/lists/*;\n\n# Install Rust\nRUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs > /tmp/rustup.sh && sh /tmp/rustup.sh -y\nENV PATH=\"/root/.cargo/bin:$PATH\"\n\nWORKDIR /opt/indexer\n\n# Copy root files\nCOPY package.json .\nCOPY yarn.lock .\nCOPY tsconfig.json .\nCOPY lerna.json .\n\n# Copy build output\nCOPY --from=build /opt/indexer/packages/indexer-common/package.json /opt/indexer/packages/indexer-common/package.json\nCOPY --from=build /opt/indexer/packages/indexer-common/dist /opt/indexer/packages/indexer-common/dist\nCOPY --from=build /opt/indexer/packages/indexer-agent/package.json /opt/indexer/packages/indexer-agent/package.json\nCOPY --from=build /opt/indexer/packages/indexer-agent/dist /opt/indexer/packages/indexer-agent/dist\n\n# Install dependencies; exclude dev dependencies\nRUN yarn --frozen-lockfile --non-interactive && yarn cache clean;\n\nENV ETHEREUM \"\"\n\n# Run the indexer-agent\nWORKDIR /opt/indexer/packages/indexer-agent\nENTRYPOINT [\"node\", \"dist/index.js\", \"start\"]\n"
}