{
  "startTime": 1674251722605,
  "endTime": 1674251724063,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 111
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 61
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 111
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 61
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 22,
        "columnEnd": 74
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 111
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 61
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 38
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 135
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 62
      }
    }
  ],
  "repairedDockerfile": "# the AnchorWave docker\nFROM ubuntu:latest\n\nWORKDIR /\n\n# from here: https://serverfault.com/questions/949991/how-to-install-tzdata-on-a-ubuntu-docker-image\n# add the RUN DEBIAN_FRONTEND=\"noninteractive\" before apt-get to prevent it from\n# prompting for a geographic area\n# BUT ... adding this export didn't help - I still had to define this explictly\n# on the maven install.\nRUN export DEBIAN_FRONTEND=noninteractive\nRUN apt-get update && apt-get install -y --no-install-recommends apt-utils && rm -rf /var/lib/apt/lists/*;\nRUN apt-get -y --no-install-recommends install make git zlib1g-dev libbz2-dev liblzma-dev libcurl4-gnutls-dev libssl-dev libncurses-dev && rm -rf /var/lib/apt/lists/*;\n\n\n# Install additional application we may need: vim, maven, etc  using apt-get\n\nRUN DEBIAN_FRONTEND=\"noninteractive\" apt-get --no-install-recommends -y install cmake && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /\n\n\nRUN apt-get -y --no-install-recommends install g++ && rm -rf /var/lib/apt/lists/*;\nRUN apt-get -y --no-install-recommends install build-essential && rm -rf /var/lib/apt/lists/*;\n\n#Install Minimap2\nRUN git clone https://github.com/lh3/minimap2\nWORKDIR minimap2\nRUN make\n\n# Export values needed for anchorwave\nRUN export LD_LIBRARY_PATH=/usr/lib/gcc/x86_64-linux-gnu/9\nRUN export CC=/usr/bin/gcc\nRUN export CXX=/usr/bin/g++\n# download/compile anchorwave\nWORKDIR /\nRUN git clone https://github.com/baoxingsong/anchorwave.git && \\\n        cd anchorwave && \\\n\tcmake ./ && \\\n\tmake\n\n\nWORKDIR /anchorwave\n\nENV PATH=$PATH:/minimap2\nENV PATH=$PATH:/anchorwave\n#Set the classpath to include / otherwise if the workdir of the container is not / the groovy scripts will not work correctly.\nENV CLASSPATH=$CLASSPATH:/\n\nWORKDIR /\n"
}