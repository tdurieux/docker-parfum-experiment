{
  "startTime": 1674248380054,
  "endTime": 1674248380993,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 93
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 93
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 25
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:jammy-20220531\n\nRUN DEBIAN_FRONTEND=noninteractive apt-get update && \\\n    DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y -q \\\n      apt-utils autoconf bison build-essential cmake flex gawk gdb-multiarch git gperf help2man \\\n      libexpat-dev libncurses5-dev libtool-bin \\\n      python3 python3-dev python3-git python3-pip python3-pyelftools python3-serial python3-six python3-yaml \\\n      python-is-python3 rsync software-properties-common sudo texinfo unzip wget xz-utils zip && \\\n    apt-get clean && rm -rf /var/lib/apt/lists/*;\n\nRUN cd /tmp && \\\n    git clone https://github.com/rojer/fsync-stub && \\\n    cd /tmp/fsync-stub && ./install.sh && \\\n    rm -rf /tmp/fsync-stub\n\n# ESP-IDF uses CMake and GDB is compiled with Python2.\nRUN DEBIAN_FRONTEND=noninteractive apt-get update && \\\n    DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y -q \\\n      python2 python2-dev && \\\n    apt-get clean && rm -rf /var/lib/apt/lists/*;\n\nRUN useradd -d /opt/Espressif -m -s /bin/bash user && chown -R user /opt\n\nARG TARGETARCH\nARG TOOLCHAIN_URLS=\"https://github.com/espressif/crosstool-NG/releases/download/esp-2021r2-patch3/xtensa-esp32-elf-gcc8_4_0-esp-2021r2-patch3-linux-${TARGETARCH}.tar.gz https://github.com/espressif/crosstool-NG/releases/download/esp-2021r2-patch3/riscv32-esp-elf-gcc8_4_0-esp-2021r2-patch3-linux-${TARGETARCH}.tar.gz https://github.com/espressif/crosstool-NG/releases/download/esp-2021r2-patch3/xtensa-esp32s3-elf-gcc8_4_0-esp-2021r2-patch3-linux-${TARGETARCH}.tar.gz\"\nRUN cd /opt/Espressif && for u in $TOOLCHAIN_URLS; do wget -q $u && tar xf `basename $u` && rm `basename $u`; done\nENV PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/Espressif/riscv32-esp-elf/bin:/opt/Espressif/xtensa-esp32-elf/bin:/opt/Espressif/xtensa-esp32s3-elf/bin\nADD ct_path.sh /etc/profile.d\n\nARG DOCKER_TAG\nRUN sudo -u user git clone -j 8 --branch $DOCKER_TAG --depth 1 --recursive --shallow-submodules https://github.com/mongoose-os/esp-idf /opt/Espressif/esp-idf\nRUN git config --global --add safe.directory /opt/Espressif/esp-idf\nENV IDF_PATH=/opt/Espressif/esp-idf\n\n# Apply submodule patches.\nRUN cd $IDF_PATH && ./patch_submodules.sh\n\nRUN pip3 install --no-cache-dir -r /opt/Espressif/esp-idf/requirements.txt\n\n# Pre-build configuration tools\nRUN cd $IDF_PATH/tools/kconfig && make conf-idf\n\n# TODO: add esp32s3 rom files\nADD rom.bin rom.elf esp32c3_rev3_rom.bin esp32c3_rev3_rom.elf /opt/Espressif/rom/\n\nARG TARGETARCH\nADD mgos_fw_meta.py $TARGETARCH/mklfs $TARGETARCH/mkspiffs $TARGETARCH/mkspiffs8 /usr/local/bin/\nADD serve_core/ /opt/serve_core/\nRUN ln -s /opt/serve_core/serve_core.py /usr/local/bin/serve_core.py\n\nARG DOCKER_TAG\nENV MGOS_TARGET_GDB /opt/Espressif/xtensa-esp32-elf/bin/xtensa-esp32-elf-gdb\nENV MGOS_TARGET_GDB_ESP32S3 /opt/Espressif/xtensa-esp32s3-elf/bin/xtensa-esp32s3-elf-gdb\nENV MGOS_TARGET_GDB_ESP32C3 /opt/Espressif/riscv32-esp-elf/bin/riscv32-esp-elf-gdb\nENV MGOS_SDK_REVISION $DOCKER_TAG\nENV MGOS_SDK_BUILD_IMAGE docker.io/mgos/esp32-build:$DOCKER_TAG\n"
}