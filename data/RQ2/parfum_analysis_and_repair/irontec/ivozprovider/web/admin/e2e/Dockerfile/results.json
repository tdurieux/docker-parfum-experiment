{
  "startTime": 1674255988700,
  "endTime": 1674255989589,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 57,
        "lineEnd": 58,
        "columnStart": 1,
        "columnEnd": 55
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 80,
        "lineEnd": 80,
        "columnStart": 4,
        "columnEnd": 81
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 57,
        "lineEnd": 58,
        "columnStart": 1,
        "columnEnd": 55
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 55
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 22,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 50,
        "columnStart": 22,
        "columnEnd": 19
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 22,
        "columnEnd": 51
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 50,
        "columnStart": 22,
        "columnEnd": 19
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# See https://github.com/docker-library/php/blob/4677ca134fe48d20c820a19becb99198824d78e3/7.0/fpm/Dockerfile\nFROM debian:stretch\n\nMAINTAINER Mikel Madariaga <mikel@irontec.com>\n\nRUN apt-get update && apt-get -y --no-install-recommends install gnupg wget && rm -rf /var/lib/apt/lists/*;\n\nRUN echo deb http://packages.irontec.com/debian bleeding main extra >> \\\n    /etc/apt/sources.list\n\nRUN wget https://packages.irontec.com/public.key -q -O - | apt-key add -\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    dpkg-dev \\\n    debhelper \\\n    dh-systemd \\\n    nodejs \\\n    ruby-compass \\\n    python \\\n    python-sphinx-rtd-theme \\\n    gettext \\\n    python-sphinx \\\n    sphinx-common \\\n    sphinx-intl \\\n    libjs-sphinxdoc \\\n    libjs-jquery \\\n    python-alabaster \\\n    composer \\\n    git \\\n    unzip \\\n    curl \\\n    php7.0 \\\n    php7.0-cli \\\n    php7.0-mysql \\\n    php7.0-xml \\\n    php7.0-mbstring \\\n    php-xdebug \\\n    sqlite3 \\\n    php7.0-sqlite3 \\\n    php7.0-igbinary \\\n    php-gearman \\\n    php-mailparse \\\n    php-imagick \\\n    php7.0-curl \\\n    php-yaml \\\n    php7.0-gd \\\n    php-zip \\\n    openjdk-8-jre \\\n    xvfb \\\n    chromium \\\n    chromium-driver && rm -rf /var/lib/apt/lists/*;\n\n# Install Composer\nRUN curl -f -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer\n\n# Install Selenium server\nRUN mkdir /opt/selenium/ && mkdir -p /opt/selenium/ && \\\n\tcurl -f -SS https://selenium-release.storage.googleapis.com/3.5/selenium-server-standalone-3.5.3.jar \\\n\t\t-o /opt/selenium/selenium-server-standalone-3.5.3.jar\n\n# Create jenkins user (configurable)\nARG UNAME=jenkins\nARG UID=108\nARG GID=117\nRUN groupadd -g $GID $UNAME\nRUN useradd -m -u $UID -g $GID -s /bin/bash $UNAME\nRUN chown jenkins.jenkins /opt/\n\n# Base project\nUSER $UNAME\nRUN mkdir -p /opt/irontec\nRUN git clone -b bleeding --depth 1 https://github.com/irontec/ivozprovider /opt/irontec/ivozprovider\n\n# Get dependencies\nRUN /opt/irontec/ivozprovider/library/bin/composer-install --prefer-dist --no-progress\n\n# Store the main project vendor\nRUN cp -r /opt/irontec/ivozprovider/library/vendor/    /opt/library-vendor\n\n# Install Node version manager in jenkins $HOME\nRUN curl -f -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh | bash\n\nWORKDIR /opt/irontec/ivozprovider/\nENTRYPOINT [ \"/opt/irontec/ivozprovider/tests/docker/bin/prepare-and-run\" ]\n"
}