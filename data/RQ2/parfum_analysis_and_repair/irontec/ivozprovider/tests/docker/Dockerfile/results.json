{
  "startTime": 1674249196716,
  "endTime": 1674249197412,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 8,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 23
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:stretch\n\nMAINTAINER Mikel Madariaga <mikel@irontec.com>\n\nRUN echo deb http://packages.irontec.com/debian bleeding main extra >> /etc/apt/sources.list\nRUN echo deb http://repo.percona.com/apt stretch main >> /etc/apt/sources.list\n\nRUN apt-get update && apt-get install -y --no-install-recommends --assume-yes --force-yes \\\n        gettext \\\n        composer \\\n        make \\\n        git \\\n        unzip \\\n        curl \\\n        wget \\\n        sqlite3 \\\n        sphinx-intl \\\n        nodejs \\\n        php7.0 \\\n        php7.0-cli \\\n        php7.0-mysql \\\n        php7.0-xml \\\n        php7.0-gd \\\n        php7.0-mbstring \\\n        php7.0-sqlite3 \\\n        php7.0-igbinary \\\n        php7.0-curl \\\n        php7.0-fpm \\\n        php-yaml \\\n        php-gearman \\\n        php-redis \\\n        php-mailparse \\\n        php-imagick \\\n        php-xdebug \\\n        php-zip \\\n        percona-toolkit && rm -rf /var/lib/apt/lists/*;\nRUN apt-get clean\n\n# Create jenkins user (configurable)\nARG UNAME=jenkins\nARG UID=108\nARG GID=117\nRUN groupadd -g $GID $UNAME\nRUN useradd -m -u $UID -g $GID -s /bin/bash $UNAME\nRUN chown jenkins.jenkins /opt/\n\n# Install node tools for testing\nRUN npm install -g swagger-cli && npm cache clean --force;\n\n# Base project\nUSER $UNAME\nRUN mkdir -p /opt/irontec\nRUN git clone -b bleeding --depth 1 https://github.com/irontec/ivozprovider /opt/irontec/ivozprovider\n\n# Install phpunit 6.5.14\nRUN mkdir -p /opt/phpunit/\nRUN wget https://github.com/sebastianbergmann/phpunit/archive/6.5.14.zip -O /opt/phpunit/phpunit.zip\nRUN unzip /opt/phpunit/phpunit.zip -d /opt/phpunit/\n\n# Get dependencies\nRUN /opt/irontec/ivozprovider/library/bin/composer-install --prefer-dist --no-progress\n\n# Store the main project vendor\nRUN cp -r /opt/irontec/ivozprovider/library/vendor/    /opt/library-vendor\n\n# We dont require project files anymore\nRUN rm -fr /opt/irontec/ivozprovider/\n\nWORKDIR /opt/irontec/ivozprovider/\n"
}