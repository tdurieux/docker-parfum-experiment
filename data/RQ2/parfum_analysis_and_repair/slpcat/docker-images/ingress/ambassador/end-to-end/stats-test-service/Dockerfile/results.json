{
  "startTime": 1674253648276,
  "endTime": 1674253649461,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 30,
        "lineEnd": 33,
        "columnStart": 22,
        "columnEnd": 12
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 30,
        "lineEnd": 33,
        "columnStart": 22,
        "columnEnd": 12
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright 2018 Datawire. All rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License\n\nFROM ubuntu:14.04\n\nMAINTAINER Datawire <flynn@datawire.io>\nLABEL PROJECT_REPO_URL         = \"git@github.com:datawire/ambassador.git\" \\\n      PROJECT_REPO_BROWSER_URL = \"https://github.com/datawire/ambassador\" \\\n      DESCRIPTION              = \"Ambassador REST Service\" \\\n      VENDOR                   = \"Datawire\" \\\n      VENDOR_URL               = \"https://datawire.io/\"\n\n# This Dockerfile is set up to install all the application-specific stuff into\n# /application.\n#\n# NOTE: If you don't know what you're doing, it's probably a mistake to\n# blindly hack up this file.\n\n# We need curl, pip, and dnsutils (for nslookup).\nRUN apt-get update && apt-get -q --no-install-recommends install -y \\\n    curl \\\n    python3-pip \\\n    dnsutils && rm -rf /var/lib/apt/lists/*;\n\n# Set WORKDIR to /application which is the root of all our apps then COPY\n# only requirements.txt to avoid screwing up Docker caching and causing a\n# full reinstall of all dependencies when dependencies are not changed.\n\nWORKDIR /application\nCOPY requirements.txt .\n\n# Install application dependencies\nRUN pip3 install --no-cache-dir -r requirements.txt\n\n# COPY the app code and configuration into place, then perform any final\n# configuration steps.\n\nCOPY stats-test.py ./\n\n# COPY the entrypoint script and make it runnable.\nCOPY entrypoint.sh .\nRUN chmod 755 entrypoint.sh\n\nENTRYPOINT ./entrypoint.sh\n\n"
}