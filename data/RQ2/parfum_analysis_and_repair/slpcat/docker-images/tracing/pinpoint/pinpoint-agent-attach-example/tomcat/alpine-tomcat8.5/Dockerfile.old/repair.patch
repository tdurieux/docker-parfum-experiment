diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/slpcat/docker-images/tracing/pinpoint/pinpoint-agent-attach-example/tomcat/alpine-tomcat8.5/Dockerfile.old b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/slpcat/docker-images/tracing/pinpoint/pinpoint-agent-attach-example/tomcat/alpine-tomcat8.5/Dockerfile.old/repaired.Dockerfile
index 267c77c..c730e39 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/slpcat/docker-images/tracing/pinpoint/pinpoint-agent-attach-example/tomcat/alpine-tomcat8.5/Dockerfile.old
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/slpcat/docker-images/tracing/pinpoint/pinpoint-agent-attach-example/tomcat/alpine-tomcat8.5/Dockerfile.old/repaired.Dockerfile
@@ -16,7 +16,7 @@ RUN sed -i 's/dl-cdn.alpinelinux.org/mirrors.aliyun.com/' /etc/apk/repositories
 RUN set -ex \
     && apk update \
     && apk upgrade \
-    && apk add \
+    && apk add --no-cache \
            bash \
            tzdata \
            vim \
@@ -73,7 +73,7 @@ ENV JAVA_VERSION=8 \
 RUN apk add --no-cache --virtual=build-dependencies wget ca-certificates unzip && \
     cd "/tmp" && \
     wget --header "Cookie: oraclelicense=accept-securebackup-cookie;" \
-        "http://download.oracle.com/otn-pub/java/jdk/${JAVA_VERSION}u${JAVA_UPDATE}-b${JAVA_BUILD}/${JAVA_PATH}/jdk-${JAVA_VERSION}u${JAVA_UPDATE}-linux-x64.tar.gz" && \
+        "https://download.oracle.com/otn-pub/java/jdk/${JAVA_VERSION}u${JAVA_UPDATE}-b${JAVA_BUILD}/${JAVA_PATH}/jdk-${JAVA_VERSION}u${JAVA_UPDATE}-linux-x64.tar.gz" && \
     tar -xzf "jdk-${JAVA_VERSION}u${JAVA_UPDATE}-linux-x64.tar.gz" && \
     mkdir -p "/usr/lib/jvm" && \
     mv "/tmp/jdk1.${JAVA_VERSION}.0_${JAVA_UPDATE}" "/usr/lib/jvm/java-${JAVA_VERSION}-oracle" && \
@@ -114,11 +114,11 @@ RUN apk add --no-cache --virtual=build-dependencies wget ca-certificates unzip &
            "$JAVA_HOME/jre/lib/jfr" \
            "$JAVA_HOME/jre/lib/oblique-fonts" && \
     wget --header "Cookie: oraclelicense=accept-securebackup-cookie;" \
-        "http://download.oracle.com/otn-pub/java/jce/${JAVA_VERSION}/jce_policy-${JAVA_VERSION}.zip" && \
+        "https://download.oracle.com/otn-pub/java/jce/${JAVA_VERSION}/jce_policy-${JAVA_VERSION}.zip" && \
     unzip -jo -d "${JAVA_HOME}/jre/lib/security" "jce_policy-${JAVA_VERSION}.zip" && \
     rm "${JAVA_HOME}/jre/lib/security/README.txt" && \
     apk del build-dependencies && \
-    rm "/tmp/"*
+    rm "/tmp/"* && rm "jdk-${JAVA_VERSION}u${JAVA_UPDATE}-linux-x64.tar.gz"
 
 ENV CATALINA_HOME /usr/local/tomcat
 ENV PATH $CATALINA_HOME/bin:$PATH
@@ -153,19 +153,19 @@ ENV TOMCAT_ASC_URLS \
 	https://archive.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz.asc
 
 RUN set -eux; \
-	\
+
 	apk add --no-cache --virtual .fetch-deps \
 		gnupg \
 		\
 		ca-certificates \
 		openssl \
 	; \
-	\
+
 	export GNUPGHOME="$(mktemp -d)"; \
 	for key in $GPG_KEYS; do \
-		gpg --keyserver keyserver.ubuntu.com --recv-keys "$key"; \
+		gpg --batch --keyserver keyserver.ubuntu.com --recv-keys "$key"; \
 	done; \
-	\
+
 	success=; \
 	for url in $TOMCAT_TGZ_URLS; do \
 		if wget -O tomcat.tar.gz "$url"; then \
@@ -174,9 +174,9 @@ RUN set -eux; \
 		fi; \
 	done; \
 	[ -n "$success" ]; \
-	\
+
 	echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum -c -; \
-	\
+
 	success=; \
 	for url in $TOMCAT_ASC_URLS; do \
 		if wget -O tomcat.tar.gz.asc "$url"; then \
@@ -185,13 +185,13 @@ RUN set -eux; \
 		fi; \
 	done; \
 	[ -n "$success" ]; \
-	\
+
 	gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz; \
 	tar -xvf tomcat.tar.gz --strip-components=1; \
 	rm bin/*.bat; \
 	rm tomcat.tar.gz*; \
 	rm -rf "$GNUPGHOME"; \
-	\
+
 	nativeBuildDir="$(mktemp -d)"; \
 	tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1; \
 	apk add --no-cache --virtual .native-build-deps \
@@ -219,16 +219,16 @@ RUN set -eux; \
 	); \
 	rm -rf "$nativeBuildDir"; \
 	rm bin/tomcat-native.tar.gz; \
-	\
+
 	runDeps="$( \
 		scanelf --needed --nobanner --format '%n#p' --recursive "$TOMCAT_NATIVE_LIBDIR" \
 			| tr ',' '\n' \
 			| sort -u \
 			| awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }' \
 	)"; \
-	apk add --virtual .tomcat-native-rundeps $runDeps; \
+	apk add --no-cache --virtual .tomcat-native-rundeps $runDeps; \
 	apk del .fetch-deps .native-build-deps; \
-	\
+
 # sh removes env vars it doesn't support (ones with periods)
 # https://github.com/docker-library/tomcat/issues/77
 	apk add --no-cache bash; \
@@ -253,7 +253,7 @@ RUN apk add --update curl bash \
     && chmod a+x /usr/local/bin/configure-agent.sh \
     && mkdir -p /pinpoint-agent \
     && chmod -R o+x /pinpoint-agent \
-    && curl -SL ${INSTALL_URL} -o pinpoint-agent.tar.gz \
+    && curl -f -SL ${INSTALL_URL} -o pinpoint-agent.tar.gz \
     && gunzip pinpoint-agent.tar.gz \
     && tar -xf pinpoint-agent.tar -C /pinpoint-agent \
     && rm pinpoint-agent.tar \