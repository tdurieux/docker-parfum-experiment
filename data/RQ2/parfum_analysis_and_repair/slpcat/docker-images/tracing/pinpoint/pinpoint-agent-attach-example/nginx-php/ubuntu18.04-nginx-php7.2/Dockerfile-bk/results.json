{
  "startTime": 1674254224909,
  "endTime": 1674254225747,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 7,
        "columnEnd": 96
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 97
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 7,
        "columnEnd": 96
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 97
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 7,
        "columnEnd": 96
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 97
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 7,
        "columnEnd": 96
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 121
      }
    }
  ],
  "repairedDockerfile": "#+++++++++++++++++++++++++++++++++++++++\n# Dockerfile for webdevops/php-nginx:debian-9\n#    -- automatically generated  --\n#+++++++++++++++++++++++++++++++++++++++\n\nFROM webdevops/php:debian-8-php7 AS build\nMAINTAINER 若虚 <slpcat@qq.com>\n\nENV \\\n    TERM=\"xterm\" \\\n    LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US.UTF-8\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    TIMEZONE=\"Asia/Shanghai\"\n\nRUN echo 'deb http://mirrors.aliyun.com/debian stretch-backports main' > /etc/apt/sources.list.d/backports.list\n\n# Set timezone and locales\nRUN \\\n    echo \"${TIMEZONE}\" > /etc/timezone \\\n    && echo \"$LANG UTF-8\" > /etc/locale.gen \\\n    && apt-get update -q \\\n    && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -yq apt-utils dialog vim-tiny curl locales \\\n    && ln -sf /usr/share/zoneinfo/${TIMEZONE} /etc/localtime \\\n    && update-locale LANG=$LANG \\\n    && locale-gen $LANG \\\n    && DEBIAN_FRONTEND=noninteractive dpkg-reconfigure locales && rm -rf /var/lib/apt/lists/*;\n\n# Install required packages\nRUN \\\n    apt-get dist-upgrade -y\n\nENV WEB_DOCUMENT_ROOT=/app \\\n    WEB_DOCUMENT_INDEX=index.php \\\n    WEB_ALIAS_DOMAIN=*.vm \\\n    WEB_PHP_TIMEOUT=600 \\\n    WEB_PHP_SOCKET=\"\"\nENV WEB_PHP_SOCKET=127.0.0.1:9000\n\n#compile pinpoint-c-agent\n#https://github.com/naver/pinpoint-c-agent\nARG DEBIAN_FRONTEND=noninteractive\nWORKDIR /root\nRUN apt-get install --no-install-recommends -y automake bison flex gcc-4.8 g++-4.8 git libtool libssl-dev make pkg-config \\\n    && ln -s /usr/bin/gcc-4.8 /usr/bin/gcc \\\n    && ln -s /usr/bin/gcc-4.8 /usr/bin/cc \\\n    && ln -s /usr/bin/g++-4.8 /usr/bin/g++ && rm -rf /var/lib/apt/lists/*;\n#yum install automake libtool flex bison pkgconfig gcc-c++ make openssl-devel\n#yum install php php-devel\nRUN git clone https://github.com/naver/pinpoint-c-agent.git \\\n    && cd pinpoint-c-agent \\\n    && git checkout master \\\n    #Build php-agent\n    && cd pinpoint_php && bash Build.sh --always-make || bash Build.sh --always-make\n\nFROM webdevops/php:debian-8-php7\nMAINTAINER 若虚 <slpcat@qq.com>\n\n# Container variables\nENV \\\n    TERM=\"xterm\" \\\n    LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US.UTF-8\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    TIMEZONE=\"Asia/Shanghai\"\n\nRUN echo 'deb http://mirrors.aliyun.com/debian stretch-backports main' > /etc/apt/sources.list.d/backports.list \\\n    && echo 'deb http://nginx.org/packages/debian/ stretch nginx' >> /etc/apt/sources.list\n\nCOPY nginx-official-repo.gpg /etc/apt/trusted.gpg.d/\n\n# Set timezone and locales\nRUN \\\n    echo \"${TIMEZONE}\" > /etc/timezone \\\n    && echo \"$LANG UTF-8\" > /etc/locale.gen \\\n    && apt-get update -q \\\n    && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -yq apt-utils dialog vim-tiny curl locales \\\n    && ln -sf /usr/share/zoneinfo/${TIMEZONE} /etc/localtime \\\n    && update-locale LANG=$LANG \\\n    && locale-gen $LANG \\\n    && DEBIAN_FRONTEND=noninteractive dpkg-reconfigure locales && rm -rf /var/lib/apt/lists/*;\n\n# Install required packages\nRUN \\\n    apt-get dist-upgrade -y\nENV WEB_DOCUMENT_ROOT=/app \\\n    WEB_DOCUMENT_INDEX=index.php \\\n    WEB_ALIAS_DOMAIN=*.vm \\\n    WEB_PHP_TIMEOUT=600 \\\n    WEB_PHP_SOCKET=\"\"\nENV WEB_PHP_SOCKET=127.0.0.1:9000\n\nCOPY conf/ /opt/docker/\n\n#install pinpoint php module\n#COPY --from=build  /root/pinpoint-c-agent/pinpoint_php/modules/pinpoint.so /usr/lib64/php/modules/\nCOPY --from=build  /root/pinpoint-c-agent/pinpoint_php/modules/pinpoint.so /usr/local/lib/php/extensions/no-debug-non-zts-20160303/\nRUN echo 'extension=pinpoint.so' > /opt/docker/etc/php/conf.d/pinpoint.ini \\\n    && echo 'pinpoint_agent.config_full_name=/etc/pinpoint_agent.conf' >> /etc/php.d/pinpoint.ini\n\nCOPY --from=build  /root/pinpoint-c-agent/quickstart/config/pinpoint_agent.conf.example  /etc/pinpoint_agent.conf\n#install pinpoint plugins\nCOPY --from=build  /root/pinpoint-c-agent/quickstart/php/web/plugins/* /app/pinpoint_plugins\n#copy sample website source code\nCOPY --from=build  /root/pinpoint-c-agent/quickstart/php/web/*.php /app\n\nRUN set -x \\\n    # Install nginx\n    && apt-install \\\n        nginx \\\n    && docker-run-bootstrap \\\n    && docker-image-cleanup\n\nEXPOSE 80 443\n"
}