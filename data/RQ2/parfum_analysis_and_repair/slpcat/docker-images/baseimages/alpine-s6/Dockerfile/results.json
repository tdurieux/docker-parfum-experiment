{
  "startTime": 1674221196611,
  "endTime": 1674221197889,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 19,
        "lineEnd": 28,
        "columnStart": 7,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Build a minimal distribution container\n# upstream https://github.com/gliderlabs/docker-alpine\nFROM alpine:3.13\nMAINTAINER 若虚 <slpcat@qq.com>\n\n# Container variables\nENV \\\n    TERM=\"xterm\" \\\n    LANG=\"en_US.UTF-8\" \\ \n    LANGUAGE=\"en_US.UTF-8\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    TZ=\"Asia/Shanghai\"\n\nRUN sed -i 's/dl-cdn.alpinelinux.org/mirrors.aliyun.com/' /etc/apk/repositories\n\n# Set timezone and locales\nRUN set -ex \\\n    && apk update \\\n    && apk upgrade \\\n    && apk add --no-cache \\\n           bash \\\n           tzdata \\\n           vim \\\n           tini \\\n           su-exec \\\n           gzip \\\n           tar \\\n           wget \\\n           curl \\\n    && echo \"${TZ}\" > /etc/TZ \\\n    && ln -sf /usr/share/zoneinfo/${TZ} /etc/localtime \\\n    # Network fix\n    && echo 'hosts: files mdns4_minimal [NOTFOUND=return] dns mdns4' >> /etc/nsswitch.conf\n\n# Here we install GNU libc (aka glibc) and set en_US.UTF-8 locale as default.\n\nRUN ALPINE_GLIBC_BASE_URL=\"https://github.com/sgerrand/alpine-pkg-glibc/releases/download\" && \\\n    ALPINE_GLIBC_PACKAGE_VERSION=\"2.33-r0\" && \\\n    ALPINE_GLIBC_BASE_PACKAGE_FILENAME=\"glibc-$ALPINE_GLIBC_PACKAGE_VERSION.apk\" && \\\n    ALPINE_GLIBC_BIN_PACKAGE_FILENAME=\"glibc-bin-$ALPINE_GLIBC_PACKAGE_VERSION.apk\" && \\\n    ALPINE_GLIBC_I18N_PACKAGE_FILENAME=\"glibc-i18n-$ALPINE_GLIBC_PACKAGE_VERSION.apk\" && \\\n    apk add --no-cache --virtual=.build-dependencies wget ca-certificates && \\\n    wget \\\n        \"https://alpine-pkgs.sgerrand.com/sgerrand.rsa.pub\" \\\n        -O \"/etc/apk/keys/sgerrand.rsa.pub\" && \\\n    wget \\\n        \"$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_BASE_PACKAGE_FILENAME\" \\\n        \"$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_BIN_PACKAGE_FILENAME\" \\\n        \"$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_I18N_PACKAGE_FILENAME\" && \\\n    apk add --no-cache \\\n        \"$ALPINE_GLIBC_BASE_PACKAGE_FILENAME\" \\\n        \"$ALPINE_GLIBC_BIN_PACKAGE_FILENAME\" \\\n        \"$ALPINE_GLIBC_I18N_PACKAGE_FILENAME\" && \\\n    \\\n    rm \"/etc/apk/keys/sgerrand.rsa.pub\" && \\\n    /usr/glibc-compat/bin/localedef --force --inputfile POSIX --charmap UTF-8 \"$LANG\" || true && \\\n    echo \"export LANG=$LANG\" > /etc/profile.d/locale.sh && \\\n    \\\n    apk del glibc-i18n && \\\n    \\\n    rm \"/root/.wget-hsts\" && \\\n    apk del .build-dependencies && \\\n    rm \\\n        \"$ALPINE_GLIBC_BASE_PACKAGE_FILENAME\" \\\n        \"$ALPINE_GLIBC_BIN_PACKAGE_FILENAME\" \\\n        \"$ALPINE_GLIBC_I18N_PACKAGE_FILENAME\"\n\nARG S6_VERSION=v2.2.0.3\n##\n## ROOTFS\n##\n\n# root filesystem\n#COPY rootfs /\n\n# s6 overlay\nADD https://github.com/just-containers/s6-overlay/releases/download/${S6_VERSION}/s6-overlay-amd64.tar.gz /tmp/s6-overlay.tar.gz\nRUN tar xvfz /tmp/s6-overlay.tar.gz -C / && rm /tmp/s6-overlay.tar.gz\n\n##\n## INIT\n##\n\nENTRYPOINT [ \"/init\" ]\n"
}