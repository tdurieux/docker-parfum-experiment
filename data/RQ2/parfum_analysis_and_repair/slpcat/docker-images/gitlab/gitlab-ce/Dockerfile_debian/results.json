{
  "startTime": 1674217843360,
  "endTime": 1674217844133,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 88
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 7,
        "columnEnd": 75
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 32,
        "lineEnd": 38,
        "columnStart": 7,
        "columnEnd": 9
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 7,
        "columnEnd": 75
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 32,
        "lineEnd": 38,
        "columnStart": 7,
        "columnEnd": 9
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 7,
        "columnEnd": 91
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 32,
        "lineEnd": 38,
        "columnStart": 7,
        "columnEnd": 9
      }
    }
  ],
  "repairedDockerfile": "# upstream https://gitlab.com/gitlab-org/omnibus-gitlab/tree/master/docker\nFROM debian:stretch\nMAINTAINER 若虚 <slpcat@qq.com>\n\n# Container variables and Gitlab version\nENV \\ \n    TERM=\"xterm\" \\\n    LANG=\"en_US.UTF-8\" \\ \n    LANGUAGE=\"en_US.UTF-8\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    TIMEZONE=\"Asia/Shanghai\" \\\n    RELEASE_PACKAGE=\"gitlab-ce\" \\\n    RELEASE_VERSION=\"latest\"\n\nRUN echo 'deb http://mirrors.aliyun.com/debian stretch-backports main' > /etc/apt/sources.list.d/backports.list \\\n    && sed -i 's/deb.debian.org/mirrors.aliyun.com/' /etc/apt/sources.list \\\n    && sed -i 's/security.debian.org/mirrors.aliyun.com\\/debian-security/' /etc/apt/sources.list\n\n# Set timezone and locales\nRUN \\\n    echo \"${TIMEZONE}\" > /etc/timezone \\\n    && echo \"$LANG UTF-8\" > /etc/locale.gen \\\n    && apt-get update -q \\\n    && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -yq apt-utils locales \\\n    && ln -sf /usr/share/zoneinfo/${TIMEZONE} /etc/localtime \\\n    && update-locale LANG=$LANG \\\n    && locale-gen $LANG \\\n    && DEBIAN_FRONTEND=noninteractive dpkg-reconfigure locales && rm -rf /var/lib/apt/lists/*;\n\n# Install required packages\nRUN \\\n    apt-get dist-upgrade -y \\\n    && DEBIAN_FRONTEND=noninteractive apt-get install -yq --no-install-recommends \\\n      ca-certificates \\\n      openssh-server \\\n      curl \\\n      gnupg \\\n      apt-transport-https \\\n      vim && rm -rf /var/lib/apt/lists/*;\n\n# Download & Install GitLab\n# If you run GitLab Enterprise Edition point it to a location where you have downloaded it.\n# repo from tsinghua university\n#&& sed -i 's/https:\\/\\/packages.gitlab.com\\/gitlab/http:\\/\\/mirrors.tuna.tsinghua.edu.cn/' /etc/apt/sources.list.d/gitlab_gitlab-ce.list \\\nRUN \\\n    curl -f https://packages.gitlab.com/install/repositories/gitlab/gitlab-ce/script.deb.sh | bash \\\n    && apt-get update \\\n    && DEBIAN_FRONTEND=noninteractive apt-get install -yq --no-install-recommends gitlab-ce \\\n    && apt-get clean all && rm -rf /var/lib/apt/lists/*;\n\n# Manage SSHD through runit\nRUN \\\n    mkdir -p /opt/gitlab/sv/sshd/supervise \\\n    && mkfifo /opt/gitlab/sv/sshd/supervise/ok \\\n    && printf \"#!/bin/sh\\nexec 2>&1\\numask 077\\nexec /usr/sbin/sshd -D\" > /opt/gitlab/sv/sshd/run \\\n    && chmod a+x /opt/gitlab/sv/sshd/run \\\n    && ln -s /opt/gitlab/sv/sshd /opt/gitlab/service \\\n    && mkdir -p /var/run/sshd\n\n# SSH configuration\nCOPY assets/sshd_config /etc/ssh/sshd_config\n\n# Prepare default configuration\nCOPY assets/gitlab.rb /etc/gitlab/gitlab.rb\nCOPY assets/update-permissions /usr/sbin/\n\n# Patch omnibus package,Patch runsvdir-start,Patch cookbook\nRUN \\\n    sed -i \"s/external_url 'GENERATED_EXTERNAL_URL'/# external_url 'GENERATED_EXTERNAL_URL'/\" /opt/gitlab/etc/gitlab.rb.template \\\n    && sed -i /file-max/d /opt/gitlab/embedded/bin/runsvdir-start \\\n    && sed -i s/^ulimit/#ulimit/ /opt/gitlab/embedded/bin/runsvdir-start \\\n    && sed -i /sysctl/,+2d /opt/gitlab/embedded/cookbooks/gitlab/recipes/unicorn.rb \\\n    && sed -i /sysctl/,+2d /opt/gitlab/embedded/cookbooks/postgresql/recipes/enable.rb \\\n    && rm -f /opt/gitlab/embedded/cookbooks/package/resources/sysctl.rb\n\n# Expose web & ssh\nEXPOSE 80/tcp 443/tcp 22/tcp\n\n# Define data volumes\nVOLUME [\"/etc/gitlab\", \"/var/opt/gitlab\", \"/var/log/gitlab\"]\n\n# Copy assets\nCOPY assets/wrapper /usr/local/bin/\n\n# Wrapper to handle signal, trigger runit and reconfigure GitLab\nCMD [\"/usr/local/bin/wrapper\"]\n\nHEALTHCHECK --interval=60s --timeout=30s --retries=5 \\\nCMD /opt/gitlab/bin/gitlab-healthcheck --fail\n"
}