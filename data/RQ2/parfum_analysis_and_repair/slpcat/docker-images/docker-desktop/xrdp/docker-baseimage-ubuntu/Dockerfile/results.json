{
  "startTime": 1674220879331,
  "endTime": 1674220881129,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 16,
        "lineEnd": 18,
        "columnStart": 1,
        "columnEnd": 111
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 19,
        "lineEnd": 21,
        "columnStart": 1,
        "columnEnd": 17
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 83,
        "lineEnd": 85,
        "columnStart": 1,
        "columnEnd": 8
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 87,
        "lineEnd": 91,
        "columnStart": 1,
        "columnEnd": 7
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.12 as rootfs-stage\n\n# environment\nENV REL=focal\nARG TARGETARCH\n# install packages\nRUN \\\n apk add --no-cache \\\n        bash \\\n        curl \\\n        tzdata \\\n        xz\n\n# grab base tarball\nRUN \\\n mkdir /root-out && \\\n curl -f -o \\\n\t/rootfs.tar.gz -L \\\n\thttps://partner-images.canonical.com/core/${REL}/current/ubuntu-${REL}-core-cloudimg-${TARGETARCH}-root.tar.gz && \\\n tar xf \\\n        /rootfs.tar.gz -C \\\n        /root-out && rm /rootfs.tar.gz\n\n# Runtime stage\nFROM scratch\nCOPY --from=rootfs-stage /root-out/ /\nARG BUILD_DATE\nARG VERSION\nLABEL build_version=\"Linuxserver.io version:- ${VERSION} Build-date:- ${BUILD_DATE}\"\nLABEL maintainer=\"TheLamer\"\n\nCOPY patch/ /tmp/patch\n\n# set environment variables\nARG DEBIAN_FRONTEND=\"noninteractive\"\nENV HOME=\"/root\" \\\nLANGUAGE=\"en_US.UTF-8\" \\\nLANG=\"en_US.UTF-8\" \\\nTERM=\"xterm\"\n\n# copy sources\nCOPY sources.list /etc/apt/\n\nARG TARGETARCH\nARG S6_VERSION=v2.2.0.3\nARG SOCKLOG_VERSION=v3.1.1-1\nCOPY install_s6.sh /tmp\n\nRUN \\\n echo \"**** Ripped from Ubuntu Docker Logic ****\" && \\\n set -xe && \\\n echo '#!/bin/sh' \\\n\t> /usr/sbin/policy-rc.d && \\\n echo 'exit 101' \\\n\t>> /usr/sbin/policy-rc.d && \\\n chmod +x \\\n\t/usr/sbin/policy-rc.d && \\\n dpkg-divert --local --rename --add /sbin/initctl && \\\n cp -a \\\n\t/usr/sbin/policy-rc.d \\\n\t/sbin/initctl && \\\n sed -i \\\n\t's/^exit.*/exit 0/' \\\n\t/sbin/initctl && \\\n echo 'force-unsafe-io' \\\n\t> /etc/dpkg/dpkg.cfg.d/docker-apt-speedup && \\\n echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' \\\n\t> /etc/apt/apt.conf.d/docker-clean && \\\n echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' \\\n\t>> /etc/apt/apt.conf.d/docker-clean && \\\n echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' \\\n\t>> /etc/apt/apt.conf.d/docker-clean && \\\n echo 'Acquire::Languages \"none\";' \\\n\t> /etc/apt/apt.conf.d/docker-no-languages && \\\n echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' \\\n\t> /etc/apt/apt.conf.d/docker-gzip-indexes && \\\n echo 'Apt::AutoRemove::SuggestsImportant \"false\";' \\\n\t> /etc/apt/apt.conf.d/docker-autoremove-suggests && \\\n mkdir -p /run/systemd && \\\n echo 'docker' \\\n\t> /run/systemd/container && \\\n echo \"**** install apt-utils and locales ****\" && \\\n apt-get update && \\\n apt-get install --no-install-recommends -y \\\n\tapt-utils \\\n\tlocales && \\\n echo \"**** install packages ****\" && \\\n apt-get install --no-install-recommends -y \\\n\tcurl \\\n        wget \\\n\tpatch \\\n\ttzdata && \\\n echo \"**** generate locale ****\" && \\\n locale-gen en_US.UTF-8 && \\\n /tmp/install_s6.sh && \\\n echo \"**** create ubuntu user and make our folders ****\" && \\\n useradd -u 1000 -U -d /config -s /bin/false ubuntu && \\\n usermod -G users ubuntu && \\\n mkdir -p \\\n\t/app \\\n\t/config \\\n\t/defaults && \\\n mv /usr/bin/with-contenv /usr/bin/with-contenvb && \\\n patch -u /etc/s6/init/init-stage2 -i /tmp/patch/etc/s6/init/init-stage2.patch && \\\n echo \"**** cleanup ****\" && \\\n apt-get remove -y patch && \\\n apt-get autoremove && \\\n apt-get clean && \\\n rm -rf \\\n\t/tmp/* \\\n\t/var/lib/apt/lists/* \\\n\t/var/tmp/*\n\n\n\n# add local files\nCOPY root/ /\n\nENTRYPOINT [\"/init\"]\n"
}