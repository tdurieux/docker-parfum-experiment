{
  "startTime": 1674219561979,
  "endTime": 1674219563529,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 113,
        "lineEnd": 113,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 117,
        "lineEnd": 117,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 149,
        "lineEnd": 149,
        "columnStart": 4,
        "columnEnd": 115
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 149,
        "lineEnd": 149,
        "columnStart": 42,
        "columnEnd": 89
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 125,
        "lineEnd": 125,
        "columnStart": 7,
        "columnEnd": 11
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 142,
        "lineEnd": 142,
        "columnStart": 4,
        "columnEnd": 67
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 91,
        "lineEnd": 91,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 91,
        "lineEnd": 91,
        "columnStart": 36,
        "columnEnd": 72
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 22,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 7,
        "columnEnd": 81
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 90,
        "lineEnd": 90,
        "columnStart": 7,
        "columnEnd": 63
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 114,
        "lineEnd": 114,
        "columnStart": 7,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 120,
        "lineEnd": 120,
        "columnStart": 7,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 145,
        "lineEnd": 145,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 114,
        "lineEnd": 114,
        "columnStart": 7,
        "columnEnd": 32
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 7,
        "columnEnd": 81
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 110,
        "lineEnd": 110,
        "columnStart": 7,
        "columnEnd": 82
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 114,
        "lineEnd": 114,
        "columnStart": 7,
        "columnEnd": 32
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 120,
        "lineEnd": 120,
        "columnStart": 7,
        "columnEnd": 30
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 145,
        "lineEnd": 145,
        "columnStart": 4,
        "columnEnd": 32
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 126,
        "lineEnd": 126,
        "columnStart": 24,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 114,
        "lineEnd": 114,
        "columnStart": 7,
        "columnEnd": 56
      }
    }
  ],
  "repairedDockerfile": "# Built with arch: amd64 flavor: lxde image: ubuntu:18.04 localbuild: 1\n#\n################################################################################\n# base system\n################################################################################\n\nFROM ubuntu:18.04 as system\n\nMAINTAINER 若虚 <slpcat@qq.com>\n\n# Container variables\nENV \\\n    TERM=\"xterm\" \\\n    LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US.UTF-8\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    TZ=\"Asia/Shanghai\"\n\nRUN sed -i 's/archive.ubuntu.com/mirrors.aliyun.com/' /etc/apt/sources.list && \\\n    sed -i 's/security.ubuntu.com/mirrors.aliyun.com/' /etc/apt/sources.list\n\nRUN apt-get update && apt-get install --no-install-recommends -y locales && rm -rf /var/lib/apt/lists/* \\\n    && localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8\n\n# Set timezone and locales\nRUN \\\n    echo \"${TZ}\" > /etc/timezone \\\n    && echo \"$LANG UTF-8\" > /etc/locale.gen \\\n    && apt-get update -q \\\n    && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -yq apt-utils dialog tzdata \\\n    && ln -sf /usr/share/zoneinfo/${TZ} /etc/localtime \\\n    && update-locale LANG=$LANG \\\n    && locale-gen $LANG \\\n    && DEBIAN_FRONTEND=noninteractive dpkg-reconfigure locales && rm -rf /var/lib/apt/lists/*;\n\n# Install required packages\nRUN \\\n    apt-get dist-upgrade -y\n\n# built-in packages\nENV DEBIAN_FRONTEND noninteractive\nRUN apt update \\\n    && apt install -y --no-install-recommends software-properties-common curl apache2-utils \\\n    && apt update \\\n    && apt install -y --no-install-recommends --allow-unauthenticated \\\n        supervisor nginx sudo net-tools zenity xz-utils \\\n        dbus-x11 x11-utils alsa-utils \\\n        mesa-utils libgl1-mesa-dri \\\n    && apt autoclean -y \\\n    && apt autoremove -y \\\n    && rm -rf /var/lib/apt/lists/*\n# install debs error if combine together\nRUN add-apt-repository -y ppa:fcwu-tw/apps \\\n    && apt update \\\n    && apt install -y --no-install-recommends --allow-unauthenticated \\\n        xvfb x11vnc=0.9.16-1 \\\n        vim-tiny firefox chromium-browser ttf-ubuntu-font-family ttf-wqy-zenhei  \\\n    && add-apt-repository -r ppa:fcwu-tw/apps \\\n    && apt autoclean -y \\\n    && apt autoremove -y \\\n    && rm -rf /var/lib/apt/lists/*\n\nRUN apt update \\\n    && apt install -y --no-install-recommends --allow-unauthenticated \\\n        lxde gtk2-engines-murrine gnome-themes-standard gtk2-engines-pixbuf gtk2-engines-murrine arc-theme \\\n    && apt autoclean -y \\\n    && apt autoremove -y \\\n    && rm -rf /var/lib/apt/lists/*\n\n\n# Additional packages require ~600MB\n# libreoffice  pinta language-pack-zh-hant language-pack-gnome-zh-hant firefox-locale-zh-hant libreoffice-l10n-zh-tw\n\n# tini for subreap\nARG TINI_VERSION=v0.18.0\nADD https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini /bin/tini\nRUN chmod +x /bin/tini\n\n# ffmpeg\nRUN apt update \\\n    && apt install -y --no-install-recommends --allow-unauthenticated \\\n        ffmpeg \\\n    && rm -rf /var/lib/apt/lists/* \\\n    && mkdir /usr/local/ffmpeg \\\n    && ln -s /usr/bin/ffmpeg /usr/local/ffmpeg/ffmpeg\n\n# python library\nCOPY image/usr/local/lib/web/backend/requirements.txt /tmp/\nRUN apt-get update \\\n    && dpkg-query -W -f='${Package}\\n' > /tmp/a.txt \\\n    && apt-get install --no-install-recommends -y python-pip python-dev build-essential \\\n\t&& pip install --no-cache-dir setuptools wheel && pip install --no-cache-dir -r /tmp/requirements.txt \\\n    && dpkg-query -W -f='${Package}\\n' > /tmp/b.txt \\\n    && apt-get remove -y `diff --changed-group-format='%>' --unchanged-group-format='' /tmp/a.txt /tmp/b.txt | xargs` \\\n    && apt-get autoclean -y \\\n    && apt-get autoremove -y \\\n    && rm -rf /var/lib/apt/lists/* \\\n    && rm -rf /var/cache/apt/* /tmp/a.txt /tmp/b.txt\n\n\n################################################################################\n# builder\n################################################################################\nFROM ubuntu:18.04 as builder\n\n\nRUN sed -i 's#http://archive.ubuntu.com/#http://tw.archive.ubuntu.com/#' /etc/apt/sources.list;\n\n\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends curl ca-certificates gnupg patch && rm -rf /var/lib/apt/lists/*;\n\n# nodejs\nRUN curl -f -sL https://deb.nodesource.com/setup_8.x | bash - \\\n    && apt-get install --no-install-recommends -y nodejs && rm -rf /var/lib/apt/lists/*;\n\n# yarn\nRUN curl -f -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \\\n    && echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list \\\n    && apt-get update \\\n    && apt-get install --no-install-recommends -y yarn && rm -rf /var/lib/apt/lists/*;\n\n# build frontend\nCOPY web /src/web\nRUN cd /src/web \\\n    && yarn \\\n    && npm run build && yarn cache clean;\n\n\n\n################################################################################\n# merge\n################################################################################\nFROM system\nMAINTAINER 若虚 <slpcat@qq.com>\n\nCOPY --from=builder /src/web/dist/ /usr/local/lib/web/frontend/\nCOPY image /\nCOPY daemon.json /etc/docker/daemon.json\n\n#install docker-ce\nRUN \\\n    curl -fsSL https://mirrors.aliyun.com/docker-ce/linux/debian/gpg | apt-key add - && \\\n    echo 'deb [arch=amd64] http://mirrors.aliyun.com/docker-ce/linux/debian buster stable' > /etc/apt/sources.list.d/docker-ce.list && \\\n    apt-get update -y && \\\n    apt-get install --no-install-recommends -y docker-ce && rm -rf /var/lib/apt/lists/*;\n\n#kubectl\nRUN \\\n    curl -f -LO \"https://dl.k8s.io/release/$( curl -f -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl\" \\\n    && chmod +x kubectl \\\n    && mv kubectl /usr/local/bin/\n\n#helm\nARG VERIFY_CHECKSUM=false\nRUN \\\n    curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 \\\n    && bash get_helm.sh \\\n    && rm get_helm.sh\n\nEXPOSE 80\nWORKDIR /root\nENV HOME=/home/ubuntu \\\n    SHELL=/bin/bash\nHEALTHCHECK --interval=30s --timeout=5s CMD curl --fail http://127.0.0.1:6079/api/health\nENTRYPOINT [\"/startup.sh\"]\n"
}