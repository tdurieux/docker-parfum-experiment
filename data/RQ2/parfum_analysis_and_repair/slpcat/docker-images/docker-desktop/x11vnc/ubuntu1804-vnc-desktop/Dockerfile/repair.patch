diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/slpcat/docker-images/docker-desktop/x11vnc/ubuntu1804-vnc-desktop/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/slpcat/docker-images/docker-desktop/x11vnc/ubuntu1804-vnc-desktop/Dockerfile/repaired.Dockerfile
index d14fa38..e1199ee 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/slpcat/docker-images/docker-desktop/x11vnc/ubuntu1804-vnc-desktop/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/slpcat/docker-images/docker-desktop/x11vnc/ubuntu1804-vnc-desktop/Dockerfile/repaired.Dockerfile
@@ -19,7 +19,7 @@ ENV \
 RUN sed -i 's/archive.ubuntu.com/mirrors.aliyun.com/' /etc/apt/sources.list && \
     sed -i 's/security.ubuntu.com/mirrors.aliyun.com/' /etc/apt/sources.list
 
-RUN apt-get update && apt-get install -y locales && rm -rf /var/lib/apt/lists/* \
+RUN apt-get update && apt-get install --no-install-recommends -y locales && rm -rf /var/lib/apt/lists/* \
     && localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8
 
 # Set timezone and locales
@@ -27,11 +27,11 @@ RUN \
     echo "${TZ}" > /etc/timezone \
     && echo "$LANG UTF-8" > /etc/locale.gen \
     && apt-get update -q \
-    && DEBIAN_FRONTEND=noninteractive apt-get install -yq apt-utils dialog tzdata \
+    && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -yq apt-utils dialog tzdata \
     && ln -sf /usr/share/zoneinfo/${TZ} /etc/localtime \
     && update-locale LANG=$LANG \
     && locale-gen $LANG \
-    && DEBIAN_FRONTEND=noninteractive dpkg-reconfigure locales
+    && DEBIAN_FRONTEND=noninteractive dpkg-reconfigure locales && rm -rf /var/lib/apt/lists/*;
 
 # Install required packages
 RUN \
@@ -66,8 +66,8 @@ RUN apt update \
     && apt autoclean -y \
     && apt autoremove -y \
     && rm -rf /var/lib/apt/lists/*
- 
- 
+
+
 # Additional packages require ~600MB
 # libreoffice  pinta language-pack-zh-hant language-pack-gnome-zh-hant firefox-locale-zh-hant libreoffice-l10n-zh-tw
 
@@ -88,8 +88,8 @@ RUN apt update \
 COPY image/usr/local/lib/web/backend/requirements.txt /tmp/
 RUN apt-get update \
     && dpkg-query -W -f='${Package}\n' > /tmp/a.txt \
-    && apt-get install -y python-pip python-dev build-essential \
-	&& pip install setuptools wheel && pip install -r /tmp/requirements.txt \
+    && apt-get install --no-install-recommends -y python-pip python-dev build-essential \
+	&& pip install --no-cache-dir setuptools wheel && pip install --no-cache-dir -r /tmp/requirements.txt \
     && dpkg-query -W -f='${Package}\n' > /tmp/b.txt \
     && apt-get remove -y `diff --changed-group-format='%>' --unchanged-group-format='' /tmp/a.txt /tmp/b.txt | xargs` \
     && apt-get autoclean -y \
@@ -104,27 +104,27 @@ RUN apt-get update \
 FROM ubuntu:18.04 as builder
 
 
-RUN sed -i 's#http://archive.ubuntu.com/#http://tw.archive.ubuntu.com/#' /etc/apt/sources.list; 
+RUN sed -i 's#http://archive.ubuntu.com/#http://tw.archive.ubuntu.com/#' /etc/apt/sources.list;
 
 
 RUN apt-get update \
-    && apt-get install -y --no-install-recommends curl ca-certificates gnupg patch
+    && apt-get install -y --no-install-recommends curl ca-certificates gnupg patch && rm -rf /var/lib/apt/lists/*;
 
 # nodejs
-RUN curl -sL https://deb.nodesource.com/setup_8.x | bash - \
-    && apt-get install -y nodejs
+RUN curl -f -sL https://deb.nodesource.com/setup_8.x | bash - \
+    && apt-get install --no-install-recommends -y nodejs && rm -rf /var/lib/apt/lists/*;
 
 # yarn
-RUN curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \
+RUN curl -f -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \
     && echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list \
     && apt-get update \
-    && apt-get install -y yarn
+    && apt-get install --no-install-recommends -y yarn && rm -rf /var/lib/apt/lists/*;
 
 # build frontend
 COPY web /src/web
 RUN cd /src/web \
     && yarn \
-    && npm run build
+    && npm run build && yarn cache clean;
 
 
 
@@ -140,14 +140,14 @@ COPY daemon.json /etc/docker/daemon.json
 
 #install docker-ce
 RUN \
-    curl -fsSL http://mirrors.aliyun.com/docker-ce/linux/debian/gpg | apt-key add - && \
+    curl -fsSL https://mirrors.aliyun.com/docker-ce/linux/debian/gpg | apt-key add - && \
     echo 'deb [arch=amd64] http://mirrors.aliyun.com/docker-ce/linux/debian buster stable' > /etc/apt/sources.list.d/docker-ce.list && \
-    apt-get update -y &&\
-    apt-get install -y docker-ce
+    apt-get update -y && \
+    apt-get install --no-install-recommends -y docker-ce && rm -rf /var/lib/apt/lists/*;
 
 #kubectl
 RUN \
-    curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl" \
+    curl -f -LO "https://dl.k8s.io/release/$( curl -f -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl" \
     && chmod +x kubectl \
     && mv kubectl /usr/local/bin/