{
  "startTime": 1674248867576,
  "endTime": 1674248868759,
  "originalSmells": [
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 99
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 79,
        "lineEnd": 79,
        "columnStart": 1,
        "columnEnd": 63
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 2,
        "columnEnd": 64
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 7,
        "columnEnd": 91
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 138,
        "lineEnd": 141,
        "columnStart": 1,
        "columnEnd": 2
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 7,
        "columnEnd": 91
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#upstream https://github.com/docker-library/cassandra\n# vim:set ft=dockerfile:\nFROM debian:stretch-slim\n\nMAINTAINER 若虚 <slpcat@qq.com>\n\n# Container variables\nENV \\\n    TERM=\"xterm\" \\\n    LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US.UTF-8\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    TIMEZONE=\"Asia/Shanghai\"\n\nRUN echo 'deb http://mirrors.aliyun.com/debian stretch-backports main' > /etc/apt/sources.list.d/backports.list \\\n    && sed -i 's/deb.debian.org/mirrors.aliyun.com/' /etc/apt/sources.list \\\n    && sed -i 's/security.debian.org/mirrors.aliyun.com\\/debian-security/' /etc/apt/sources.list\n\n# Set timezone and locales\nRUN \\\n    echo \"${TIMEZONE}\" > /etc/timezone \\\n    && echo \"$LANG UTF-8\" > /etc/locale.gen \\\n    && apt-get update -q \\\n    && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -yq apt-utils dialog vim-tiny locales \\\n    && ln -sf /usr/share/zoneinfo/${TIMEZONE} /etc/localtime \\\n    && update-locale LANG=$LANG \\\n    && locale-gen $LANG \\\n    && DEBIAN_FRONTEND=noninteractive dpkg-reconfigure locales && rm -rf /var/lib/apt/lists/*;\n\n# Install required packages\nRUN \\\n    apt-get dist-upgrade -y\n\n# explicitly set user/group IDs\nRUN groupadd -r cassandra --gid=999 && useradd -r -g cassandra --uid=999 cassandra\n\nRUN set -ex; \\\n\tapt-get update; \\\n\tapt-get install -y --no-install-recommends \\\n# solves warning: \"jemalloc shared library could not be preloaded to speed up memory allocations\"\n\t\tlibjemalloc1 \\\n# free is used by cassandra-env.sh\n\t\tprocps \\\n# \"ip\" is not required by Cassandra itself, but is commonly used in scripting Cassandra's configuration (since it is so fixated on explicit IP addresses)\n\t\tiproute2 \\\n\t; \\\n\tif ! command -v gpg > /dev/null; then \\\n\t\tapt-get install -y --no-install-recommends \\\n\t\t\tdirmngr \\\n\t\t\tgnupg \\\n\t\t; \\\n\tfi; \\\n\trm -rf /var/lib/apt/lists/*\n\n# grab gosu for easy step-down from root\nENV GOSU_VERSION 1.10\nRUN set -x \\\n\t&& apt-get update && apt-get install -y --no-install-recommends ca-certificates wget && rm -rf /var/lib/apt/lists/* \\\n\t&& wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)\" \\\n\t&& wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc\" \\\n\t&& export GNUPGHOME=\"$(mktemp -d)\" \\\n\t&& gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 \\\n\t&& gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \\\n\t&& rm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc \\\n\t&& chmod +x /usr/local/bin/gosu \\\n\t&& gosu nobody true \\\n\t&& apt-get purge -y --auto-remove ca-certificates wget\n\n# https://wiki.apache.org/cassandra/DebianPackaging#Adding_Repository_Keys\nENV GPG_KEYS \\\n# gpg: key 0353B12C: public key \"T Jake Luciani <jake@apache.org>\" imported\n\t514A2AD631A57A16DD0047EC749D6EEC0353B12C \\\n# gpg: key FE4B2BDA: public key \"Michael Shuler <michael@pbandjelly.org>\" imported\n\tA26E528B271F19B9E5D8E19EA278B781FE4B2BDA\nRUN set -ex; \\\n\texport GNUPGHOME=\"$(mktemp -d)\"; \\\n\tfor key in $GPG_KEYS; do \\\n\t\tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\"; \\\n\tdone; \\\n\tgpg --batch --export $GPG_KEYS > /etc/apt/trusted.gpg.d/cassandra.gpg; \\\n\trm -rf \"$GNUPGHOME\"; \\\n\tapt-key list\n\nENV CASSANDRA_VERSION 3.11.2\n\nRUN set -ex; \\\n\n# https://bugs.debian.org/877677\n# update-alternatives: error: error creating symbolic link '/usr/share/man/man1/rmid.1.gz.dpkg-tmp': No such file or directory\n\tmkdir -p /usr/share/man/man1/; \\\n\n\tdpkgArch=\"$(dpkg --print-architecture)\"; \\\n\tcase \"$dpkgArch\" in \\\n\t\tamd64|i386) \\\n# arches officialy included in upstream's repo metadata\n\t\t\techo 'deb http://www.apache.org/dist/cassandra/debian 311x main' > /etc/apt/sources.list.d/cassandra.list; \\\n\t\t\tapt-get update; \\\n\t\t\t;; \\\n\t\t*) \\\n# we're on an architecture upstream doesn't include in their repo Architectures\n# but their provided packages are \"Architecture: all\" so we can download them directly instead\n\t\t\t\\\n# save a list of installed packages so build deps can be removed cleanly\n\t\t\tsavedAptMark=\"$(apt-mark showmanual)\"; \\\n\t\t\t\\\n# fetch a few build dependencies\n\t\t\tapt-get update; \\\n\t\t\tapt-get install -y --no-install-recommends \\\n\t\t\t\twget ca-certificates \\\n\t\t\t\tdpkg-dev \\\n\t\t\t; \\\n# we don't remove APT lists here because they get re-downloaded and removed later\n\t\t\t\\\n# reset apt-mark's \"manual\" list so that \"purge --auto-remove\" will remove all build dependencies\n# (which is done after we install the built packages so we don't have to redownload any overlapping dependencies)\n\t\t\tapt-mark showmanual | xargs apt-mark auto > /dev/null; \\\n\t\t\tapt-mark manual $savedAptMark; \\\n\t\t\t\\\n# download the two \"arch: all\" packages we need\n\t\t\ttempDir=\"$(mktemp -d)\"; \\\n\t\t\tfor pkg in cassandra cassandra-tools; do \\\n\t\t\t\tdeb=\"${pkg}_${CASSANDRA_VERSION}_all.deb\"; \\\n\t\t\t\twget -O \"$tempDir/$deb\" \"https://www.apache.org/dist/cassandra/debian/pool/main/c/cassandra/$deb\"; \\\n\t\t\tdone; \\\n\t\t\t\\\n# create a temporary local APT repo to install from (so that dependency resolution can be handled by APT, as it should be)\n\t\t\tls -lAFh \"$tempDir\"; \\\n\t\t\t( cd \"$tempDir\" && dpkg-scanpackages . > Packages ); \\\n\t\t\tgrep '^Package: ' \"$tempDir/Packages\"; \\\n\t\t\techo \"deb [ trusted=yes ] file://$tempDir ./\" > /etc/apt/sources.list.d/temp.list; \\\n# work around the following APT issue by using \"Acquire::GzipIndexes=false\" (overriding \"/etc/apt/apt.conf.d/docker-gzip-indexes\")\n#   Could not open file /var/lib/apt/lists/partial/_tmp_tmp.ODWljpQfkE_._Packages - open (13: Permission denied)\n#   ...\n#   E: Failed to fetch store:/var/lib/apt/lists/partial/_tmp_tmp.ODWljpQfkE_._Packages  Could not open file /var/lib/apt/lists/partial/_tmp_tmp.ODWljpQfkE_._Packages - open (13: Permission denied)\n\t\t\tapt-get -o Acquire::GzipIndexes=false update; \\\n\t\t\t;; \\\n\tesac; \\\n\n\tapt-get install --no-install-recommends -y \\\n\t\tcassandra=\"$CASSANDRA_VERSION\" \\\n\t\tcassandra-tools=\"$CASSANDRA_VERSION\" \\\n\t; \\\n\n\trm -rf /var/lib/apt/lists/*; \\\n\n\tif [ -n \"$tempDir\" ]; then \\\n# if we have leftovers from building, let's purge them (including extra, unnecessary build deps)\n\t\tapt-get purge -y --auto-remove; \\\n\t\trm -rf \"$tempDir\" /etc/apt/sources.list.d/temp.list; \\\n\tfi\n\nENV CASSANDRA_CONFIG /etc/cassandra\n\nRUN set -ex; \\\n\t\\\n\tdpkgArch=\"$(dpkg --print-architecture)\"; \\\n\tcase \"$dpkgArch\" in \\\n\t\tppc64el) \\\n# https://issues.apache.org/jira/browse/CASSANDRA-13345\n# \"The stack size specified is too small, Specify at least 328k\"\n\t\t\tif grep -q -- '^-Xss' \"$CASSANDRA_CONFIG/jvm.options\"; then \\\n# 3.11+ (jvm.options)\n\t\t\t\tgrep -- '^-Xss256k$' \"$CASSANDRA_CONFIG/jvm.options\"; \\\n\t\t\t\tsed -ri 's/^-Xss256k$/-Xss512k/' \"$CASSANDRA_CONFIG/jvm.options\"; \\\n\t\t\t\tgrep -- '^-Xss512k$' \"$CASSANDRA_CONFIG/jvm.options\"; \\\n\t\t\telif grep -q -- '-Xss256k' \"$CASSANDRA_CONFIG/cassandra-env.sh\"; then \\\n# 3.0 (cassandra-env.sh)\n\t\t\t\tsed -ri 's/-Xss256k/-Xss512k/g' \"$CASSANDRA_CONFIG/cassandra-env.sh\"; \\\n\t\t\t\tgrep -- '-Xss512k' \"$CASSANDRA_CONFIG/cassandra-env.sh\"; \\\n\t\t\tfi; \\\n\t\t\t;; \\\n\tesac; \\\n\t\\\n# https://issues.apache.org/jira/browse/CASSANDRA-11661\n\tsed -ri 's/^(JVM_PATCH_VERSION)=.*/\\1=25/' \"$CASSANDRA_CONFIG/cassandra-env.sh\"\n\nCOPY docker-entrypoint.sh /usr/local/bin/\nRUN ln -s usr/local/bin/docker-entrypoint.sh /docker-entrypoint.sh # backwards compat\nENTRYPOINT [\"docker-entrypoint.sh\"]\n\nRUN mkdir -p /var/lib/cassandra \"$CASSANDRA_CONFIG\" \\\n\t&& chown -R cassandra:cassandra /var/lib/cassandra \"$CASSANDRA_CONFIG\" \\\n\t&& chmod 777 /var/lib/cassandra \"$CASSANDRA_CONFIG\"\nVOLUME /var/lib/cassandra\n\n# 7000: intra-node communication\n# 7001: TLS intra-node communication\n# 7199: JMX\n# 9042: CQL\n# 9160: thrift service\nEXPOSE 7000 7001 7199 9042 9160\nCMD [\"cassandra\", \"-f\"]\n"
}