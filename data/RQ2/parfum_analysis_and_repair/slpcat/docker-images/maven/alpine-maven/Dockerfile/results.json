{
  "startTime": 1674255662603,
  "endTime": 1674255664150,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 72,
        "lineEnd": 73,
        "columnStart": 4,
        "columnEnd": 164
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 113,
        "lineEnd": 114,
        "columnStart": 4,
        "columnEnd": 100
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 74,
        "lineEnd": 74,
        "columnStart": 4,
        "columnEnd": 66
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 18,
        "lineEnd": 27,
        "columnStart": 7,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#upstream https://github.com/frol/docker-alpine-oraclejdk8\nFROM alpine:3.8\nMAINTAINER 若虚 <slpcat@qq.com>\n\n# Container variables\nENV \\\n    TERM=\"xterm\" \\\n    LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US.UTF-8\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    TIMEZONE=\"Asia/Shanghai\"\n\nRUN sed -i 's/dl-cdn.alpinelinux.org/mirrors.aliyun.com/' /etc/apk/repositories\n\n# Set timezone and locales\nRUN set -ex \\\n    && apk update \\\n    && apk upgrade \\\n    && apk add --no-cache \\\n           bash \\\n           tzdata \\\n           vim \\\n           tini \\\n           su-exec \\\n           gzip \\\n           tar \\\n           wget \\\n           curl \\\n    && echo \"${TIMEZONE}\" > /etc/TZ \\\n    && ln -sf /usr/share/zoneinfo/${TIMEZONE} /etc/localtime\n\n# Here we install GNU libc (aka glibc) and set en_US.UTF-8 locale as default.\n\nRUN ALPINE_GLIBC_BASE_URL=\"https://github.com/sgerrand/alpine-pkg-glibc/releases/download\" && \\\n    ALPINE_GLIBC_PACKAGE_VERSION=\"2.28-r0\" && \\\n    ALPINE_GLIBC_BASE_PACKAGE_FILENAME=\"glibc-$ALPINE_GLIBC_PACKAGE_VERSION.apk\" && \\\n    ALPINE_GLIBC_BIN_PACKAGE_FILENAME=\"glibc-bin-$ALPINE_GLIBC_PACKAGE_VERSION.apk\" && \\\n    ALPINE_GLIBC_I18N_PACKAGE_FILENAME=\"glibc-i18n-$ALPINE_GLIBC_PACKAGE_VERSION.apk\" && \\\n    apk add --no-cache --virtual=.build-dependencies wget ca-certificates && \\\n    wget \\\n        \"https://alpine-pkgs.sgerrand.com/sgerrand.rsa.pub\" \\\n        -O \"/etc/apk/keys/sgerrand.rsa.pub\" && \\\n    wget \\\n        \"$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_BASE_PACKAGE_FILENAME\" \\\n        \"$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_BIN_PACKAGE_FILENAME\" \\\n        \"$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_I18N_PACKAGE_FILENAME\" && \\\n    apk add --no-cache \\\n        \"$ALPINE_GLIBC_BASE_PACKAGE_FILENAME\" \\\n        \"$ALPINE_GLIBC_BIN_PACKAGE_FILENAME\" \\\n        \"$ALPINE_GLIBC_I18N_PACKAGE_FILENAME\" && \\\n    \\\n    rm \"/etc/apk/keys/sgerrand.rsa.pub\" && \\\n    /usr/glibc-compat/bin/localedef --force --inputfile POSIX --charmap UTF-8 \"$LANG\" || true && \\\n    echo \"export LANG=$LANG\" > /etc/profile.d/locale.sh && \\\n    \\\n    apk del glibc-i18n && \\\n    \\\n    rm \"/root/.wget-hsts\" && \\\n    apk del .build-dependencies && \\\n    rm \\\n        \"$ALPINE_GLIBC_BASE_PACKAGE_FILENAME\" \\\n        \"$ALPINE_GLIBC_BIN_PACKAGE_FILENAME\" \\\n        \"$ALPINE_GLIBC_I18N_PACKAGE_FILENAME\"\n\nENV JAVA_VERSION=8 \\\n    JAVA_UPDATE=181 \\\n    JAVA_BUILD=13 \\\n    JAVA_PATH=96a7b8442fe848ef90c96a2fad6ed6d1 \\\n    JAVA_HOME=\"/usr/lib/jvm/default-jvm\"\n\nRUN apk add --no-cache --virtual=build-dependencies wget ca-certificates unzip && \\\n    cd \"/tmp\" && \\\n    wget --header \"Cookie: oraclelicense=accept-securebackup-cookie;\" \\\n        \"https://download.oracle.com/otn-pub/java/jdk/${JAVA_VERSION}u${JAVA_UPDATE}-b${JAVA_BUILD}/${JAVA_PATH}/jdk-${JAVA_VERSION}u${JAVA_UPDATE}-linux-x64.tar.gz\" && \\\n    tar -xzf \"jdk-${JAVA_VERSION}u${JAVA_UPDATE}-linux-x64.tar.gz\" && \\\n    mkdir -p \"/usr/lib/jvm\" && \\\n    mv \"/tmp/jdk1.${JAVA_VERSION}.0_${JAVA_UPDATE}\" \"/usr/lib/jvm/java-${JAVA_VERSION}-oracle\" && \\\n    ln -s \"java-${JAVA_VERSION}-oracle\" \"$JAVA_HOME\" && \\\n    ln -s \"$JAVA_HOME/bin/\"* \"/usr/bin/\" && \\\n    rm -rf \"$JAVA_HOME/\"*src.zip && \\\n    rm -rf \"$JAVA_HOME/lib/missioncontrol\" \\\n           \"$JAVA_HOME/lib/visualvm\" \\\n           \"$JAVA_HOME/lib/\"*javafx* \\\n           \"$JAVA_HOME/jre/lib/plugin.jar\" \\\n           \"$JAVA_HOME/jre/lib/ext/jfxrt.jar\" \\\n           \"$JAVA_HOME/jre/bin/javaws\" \\\n           \"$JAVA_HOME/jre/lib/javaws.jar\" \\\n           \"$JAVA_HOME/jre/lib/desktop\" \\\n           \"$JAVA_HOME/jre/plugin\" \\\n           \"$JAVA_HOME/jre/lib/\"deploy* \\\n           \"$JAVA_HOME/jre/lib/\"*javafx* \\\n           \"$JAVA_HOME/jre/lib/\"*jfx* \\\n           \"$JAVA_HOME/jre/lib/amd64/libdecora_sse.so\" \\\n           \"$JAVA_HOME/jre/lib/amd64/\"libprism_*.so \\\n           \"$JAVA_HOME/jre/lib/amd64/libfxplugins.so\" \\\n           \"$JAVA_HOME/jre/lib/amd64/libglass.so\" \\\n           \"$JAVA_HOME/jre/lib/amd64/libgstreamer-lite.so\" \\\n           \"$JAVA_HOME/jre/lib/amd64/\"libjavafx*.so \\\n           \"$JAVA_HOME/jre/lib/amd64/\"libjfx*.so && \\\n    rm -rf \"$JAVA_HOME/jre/bin/jjs\" \\\n           \"$JAVA_HOME/jre/bin/keytool\" \\\n           \"$JAVA_HOME/jre/bin/orbd\" \\\n           \"$JAVA_HOME/jre/bin/pack200\" \\\n           \"$JAVA_HOME/jre/bin/policytool\" \\\n           \"$JAVA_HOME/jre/bin/rmid\" \\\n           \"$JAVA_HOME/jre/bin/rmiregistry\" \\\n           \"$JAVA_HOME/jre/bin/servertool\" \\\n           \"$JAVA_HOME/jre/bin/tnameserv\" \\\n           \"$JAVA_HOME/jre/bin/unpack200\" \\\n           \"$JAVA_HOME/jre/lib/ext/nashorn.jar\" \\\n           \"$JAVA_HOME/jre/lib/jfr.jar\" \\\n           \"$JAVA_HOME/jre/lib/jfr\" \\\n           \"$JAVA_HOME/jre/lib/oblique-fonts\" && \\\n    wget --header \"Cookie: oraclelicense=accept-securebackup-cookie;\" \\\n        \"https://download.oracle.com/otn-pub/java/jce/${JAVA_VERSION}/jce_policy-${JAVA_VERSION}.zip\" && \\\n    unzip -jo -d \"${JAVA_HOME}/jre/lib/security\" \"jce_policy-${JAVA_VERSION}.zip\" && \\\n    rm \"${JAVA_HOME}/jre/lib/security/README.txt\" && \\\n    apk del build-dependencies && \\\n    rm \"/tmp/\"* && rm \"jdk-${JAVA_VERSION}u${JAVA_UPDATE}-linux-x64.tar.gz\"\n\nARG MAVEN_VERSION=3.5.4\nARG USER_HOME_DIR=\"/root\"\nARG SHA=ce50b1c91364cb77efe3776f756a6d92b76d9038b0a0782f7d53acf1e997a14d\n#ARG BASE_URL=https://apache.osuosl.org/maven/maven-3/${MAVEN_VERSION}/binaries\nARG BASE_URL=http://mirrors.tuna.tsinghua.edu.cn/apache/maven/maven-3/${MAVEN_VERSION}/binaries\n\nRUN mkdir -p /usr/share/maven /usr/share/maven/ref \\\n  && curl -fsSL -o /tmp/apache-maven.tar.gz ${BASE_URL}/apache-maven-${MAVEN_VERSION}-bin.tar.gz \\\n  && echo \"${SHA}  /tmp/apache-maven.tar.gz\" | sha256sum -c - \\\n  && tar -xzf /tmp/apache-maven.tar.gz -C /usr/share/maven --strip-components=1 \\\n  && rm -f /tmp/apache-maven.tar.gz \\\n  && ln -s /usr/share/maven/bin/mvn /usr/bin/mvn\n\nENV MAVEN_HOME /usr/share/maven\nENV MAVEN_CONFIG \"$USER_HOME_DIR/.m2\"\n\nCOPY mvn-entrypoint.sh /usr/local/bin/mvn-entrypoint.sh\nCOPY settings-docker.xml /usr/share/maven/ref/\n\nENTRYPOINT [\"/usr/local/bin/mvn-entrypoint.sh\"]\nCMD [\"mvn\"]\n"
}