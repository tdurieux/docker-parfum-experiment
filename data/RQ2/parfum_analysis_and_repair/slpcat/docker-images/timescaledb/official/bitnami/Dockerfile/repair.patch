diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/slpcat/docker-images/timescaledb/official/bitnami/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/slpcat/docker-images/timescaledb/official/bitnami/Dockerfile/repaired.Dockerfile
index 09622be..f18ab12 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/slpcat/docker-images/timescaledb/official/bitnami/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/slpcat/docker-images/timescaledb/official/bitnami/Dockerfile/repaired.Dockerfile
@@ -33,12 +33,12 @@ USER 0
 RUN set -ex \
     && mkdir -p /var/lib/apt/lists/partial \
     && apt-get update \
-    && apt-get -y install \
-            \
+    && apt-get -y --no-install-recommends install \
+
             build-essential \
             libssl-dev \
             git \
-            \
+
             dpkg-dev \
             gcc \
             libc-dev \
@@ -47,12 +47,12 @@ RUN set -ex \
             wget \
     && mkdir -p /build/ \
     && git clone https://github.com/timescale/timescaledb /build/timescaledb \
-    \
+
     && cd /build/timescaledb \
     # This script is a bit ugly, but once all the old versions are buildable
     # on PG11, we can remove the 'if' guard
     && echo "if [ \"$(echo ${PG_VERSION} | cut -c1-2)\" != \"11\" ] || [ "\${OLD_VERSION}" \> "1.0.1" ]; then cd /build/timescaledb && rm -fr build && git reset HEAD --hard && git fetch && git checkout \${OLD_VERSION} && ./bootstrap -DPROJECT_INSTALL_METHOD=\"docker\" && cd build && make install; fi" > ./build_old.sh \
-    && chmod +x ./build_old.sh
+    && chmod +x ./build_old.sh && rm -rf /var/lib/apt/lists/*;
 
 #####
 # Add the latest previous version to the end of the list for each new build
@@ -114,12 +114,12 @@ USER 0
 RUN set -ex \
     && mkdir -p /var/lib/apt/lists/partial \
     && apt-get update \
-    && apt-get -y install \
-            \
+    && apt-get -y --no-install-recommends install \
+
             build-essential \
             libssl-dev \
             git \
-            \
+
             dpkg-dev \
             gcc \
             libc-dev \
@@ -128,14 +128,14 @@ RUN set -ex \
             wget \
     && mkdir -p /build/ \
     && git clone https://github.com/timescale/timescaledb /build/timescaledb \
-    \
+
     # Build current version \
     && cd /build/timescaledb && rm -fr build \
     && git checkout ${TIMESCALEDB_VERSION} \
     && ./bootstrap -DPROJECT_INSTALL_METHOD="docker" \
     && cd build && make install \
     && cd ~ \
-    \
+
     && apt-get autoremove --purge -y \
             \
             build-essential \