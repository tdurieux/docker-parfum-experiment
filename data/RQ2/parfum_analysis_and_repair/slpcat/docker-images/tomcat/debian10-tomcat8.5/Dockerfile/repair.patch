diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/slpcat/docker-images/tomcat/debian10-tomcat8.5/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/slpcat/docker-images/tomcat/debian10-tomcat8.5/Dockerfile/repaired.Dockerfile
index e2a919d..2a8bc48 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/slpcat/docker-images/tomcat/debian10-tomcat8.5/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/slpcat/docker-images/tomcat/debian10-tomcat8.5/Dockerfile/repaired.Dockerfile
@@ -19,11 +19,11 @@ RUN \
     echo "${TIMEZONE}" > /etc/timezone \
     && echo "$LANG UTF-8" > /etc/locale.gen \
     && apt-get update -q \
-    && DEBIAN_FRONTEND=noninteractive apt-get install -yq apt-utils curl dialog vim-tiny locales openssl\
+    && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -yq apt-utils curl dialog vim-tiny locales openssl \
     && ln -sf /usr/share/zoneinfo/${TIMEZONE} /etc/localtime \
     && update-locale LANG=$LANG \
     && locale-gen $LANG \
-    && DEBIAN_FRONTEND=noninteractive dpkg-reconfigure locales
+    && DEBIAN_FRONTEND=noninteractive dpkg-reconfigure locales && rm -rf /var/lib/apt/lists/*;
 
 # Install required packages
 RUN \
@@ -32,7 +32,7 @@ RUN \
 # Add Oracle Java PPA
 RUN \
     apt-get -y update && \
-    apt-get -y install software-properties-common apt-transport-https gnupg2 ca-certificates && \
+    apt-get -y --no-install-recommends install software-properties-common apt-transport-https gnupg2 ca-certificates && \
     #add-apt-repository -y ppa:webupd8team/java && \
     echo 'deb http://ppa.launchpad.net/webupd8team/java/ubuntu xenial main' > etc/apt/sources.list.d/webupd8team-ubuntu-java-xenial.list && \
     apt-key adv --keyserver keyserver.ubuntu.com --recv-keys EEA14886 && \
@@ -41,9 +41,9 @@ RUN \
     #echo "debconf shared/accepted-oracle-license-v1-1 select true" | debconf-set-selections && \
     #echo "debconf shared/accepted-oracle-license-v1-1 seen true" | debconf-set-selections && \
     echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true | debconf-set-selections && \
-    apt-get -y install libpq-dev oracle-java8-installer && \
+    apt-get -y --no-install-recommends install libpq-dev oracle-java8-installer && \
     # Clean up
-    rm -f /var/cache/oracle-jdk8-installer/jdk-*.tar.g
+    rm -f /var/cache/oracle-jdk8-installer/jdk-*.tar.g && rm -rf /var/lib/apt/lists/*;
 
 ENV CATALINA_HOME /usr/local/tomcat
 ENV PATH $CATALINA_HOME/bin:$PATH
@@ -117,19 +117,21 @@ ENV TOMCAT_ASC_URLS \
 	https://archive.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz.asc
 
 RUN set -eux; \
-	\
+
 	savedAptMark="$(apt-mark showmanual)"; \
 	apt-get update; \
-	\
+
 	apt-get install -y --no-install-recommends gnupg dirmngr; \
-	\
+
 	export GNUPGHOME="$(mktemp -d)"; \
 	for key in $GPG_KEYS; do \
-		gpg --keyserver keyserver.ubuntu.com --recv-keys "$key"; \
-	done; \
-	\
+
+		gpg --batch --keyserver keyserver.ubuntu.com --recv-keys "$key"; \
+	done \
+	; \
+
 	apt-get install -y --no-install-recommends wget ca-certificates; \
-	\
+
 	success=; \
 	for url in $TOMCAT_TGZ_URLS; do \
 		if wget -O tomcat.tar.gz "$url"; then \
@@ -138,9 +140,9 @@ RUN set -eux; \
 		fi; \
 	done; \
 	[ -n "$success" ]; \
-	\
+
 	echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum -c -; \
-	\
+
 	success=; \
 	for url in $TOMCAT_ASC_URLS; do \
 		if wget -O tomcat.tar.gz.asc "$url"; then \
@@ -149,13 +151,13 @@ RUN set -eux; \
 		fi; \
 	done; \
 	[ -n "$success" ]; \
-	\
+
 	gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz; \
 	tar -xvf tomcat.tar.gz --strip-components=1; \
 	rm bin/*.bat; \
 	rm tomcat.tar.gz*; \
 	rm -rf "$GNUPGHOME"; \
-	\
+
 	nativeBuildDir="$(mktemp -d)"; \
 	tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1; \
 	apt-get install -y --no-install-recommends \
@@ -181,13 +183,13 @@ RUN set -eux; \
 	); \
 	rm -rf "$nativeBuildDir"; \
 	rm bin/tomcat-native.tar.gz; \
-	\
+
 # reset apt-mark's "manual" list so that "purge --auto-remove" will remove all build dependencies
 	apt-mark auto '.*' > /dev/null; \
 	[ -z "$savedAptMark" ] || apt-mark manual $savedAptMark; \
 	apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \
 	rm -rf /var/lib/apt/lists/*; \
-	\
+
 # sh removes env vars it doesn't support (ones with periods)
 # https://github.com/docker-library/tomcat/issues/77
 	find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +