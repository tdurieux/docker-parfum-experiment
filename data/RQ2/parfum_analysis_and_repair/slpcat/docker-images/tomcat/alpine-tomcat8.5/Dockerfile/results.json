{
  "startTime": 1674217836225,
  "endTime": 1674217837165,
  "originalSmells": [
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 2,
        "columnEnd": 58
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 110,
        "lineEnd": 110,
        "columnStart": 1,
        "columnEnd": 51
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 85,
        "lineEnd": 91,
        "columnStart": 2,
        "columnEnd": 18
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 1,
        "columnEnd": 54
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 2,
        "columnEnd": 66
      }
    }
  ],
  "repairedDockerfile": "#upstream https://github.com/docker-library/tomcat/tree/master/8.5/\nFROM slpcat/jdk:alpine\nMAINTAINER 若虚 <slpcat@qq.com>\n\nENV CATALINA_HOME /usr/local/tomcat\nENV PATH $CATALINA_HOME/bin:$PATH\nRUN mkdir -p \"$CATALINA_HOME\"\nWORKDIR $CATALINA_HOME\n\n# let \"Tomcat Native\" live somewhere isolated\nENV TOMCAT_NATIVE_LIBDIR $CATALINA_HOME/native-jni-lib\nENV LD_LIBRARY_PATH ${LD_LIBRARY_PATH:+$LD_LIBRARY_PATH:}$TOMCAT_NATIVE_LIBDIR\n\n# see https://www.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/KEYS\n# see also \"update.sh\" (https://github.com/docker-library/tomcat/blob/master/update.sh)\nENV GPG_KEYS 05AB33110949707C93A279E3D3EFE6B686867BA6 07E48665A34DCAFAE522E5E6266191C37C037D42 47309207D818FFD8DCD3F83F1931D684307A10A5 541FBE7D8F78B25E055DDEE13C370389288584E7 61B832AC2F1C5A90F0F9B00A1C506407564C17A3 713DA88BE50911535FE716F5208B0AB1D63011C7 79F7026C690BAA50B92CD8B66A3AD3F4F22C4FED 9BA44C2621385CB966EBA586F72C284D731FABEE A27677289986DB50844682F8ACB77FC2E86E29AC A9C5DF4D22E99998D9875A5110C01C5A2F6059E7 DCFD35E0BF8CA7344752DE8B6FB21E8933C60243 F3A04C595DB5B6A5F1ECA43E3B7BBB100D811BBE F7DA48BB64BCB84ECBA7EE6935CD23C10D498E23\n\nENV TOMCAT_MAJOR 8\nENV TOMCAT_VERSION 8.5.41\nENV TOMCAT_SHA512 16c86acb5ef635cdb260609e6d3630b87f963c9f71c35d97a0b413669509cb7258931f9d9f8d90f18665d936b491e4ea84ea8f4d71b336a208f353a268f70964\n\nENV TOMCAT_TGZ_URLS \\\n# https://issues.apache.org/jira/browse/INFRA-8753?focusedCommentId=14735394#comment-14735394\n\thttps://www.apache.org/dyn/closer.cgi?action=download&filename=tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz \\\n# if the version is outdated, we might have to pull from the dist/archive :/\n\thttps://www-us.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz \\\n\thttps://www.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz \\\n\thttps://archive.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz\n\nENV TOMCAT_ASC_URLS \\\n\thttps://www.apache.org/dyn/closer.cgi?action=download&filename=tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz.asc \\\n# not all the mirrors actually carry the .asc files :'(\n\thttps://www-us.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz.asc \\\n\thttps://www.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz.asc \\\n\thttps://archive.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz.asc\n\nRUN set -eux; \\\n\n\tapk add --no-cache --virtual .fetch-deps \\\n\t\tgnupg \\\n\t\t\\\n\t\tca-certificates \\\n\t\topenssl \\\n\t; \\\n\n\texport GNUPGHOME=\"$(mktemp -d)\"; \\\n\tfor key in $GPG_KEYS; do \\\n\n\t\tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$key\"; \\\n\tdone \\\n\t; \\\n\n\tsuccess=; \\\n\tfor url in $TOMCAT_TGZ_URLS; do \\\n\t\tif wget -O tomcat.tar.gz \"$url\"; then \\\n\t\t\tsuccess=1; \\\n\t\t\tbreak; \\\n\t\tfi; \\\n\tdone; \\\n\t[ -n \"$success\" ]; \\\n\n\techo \"$TOMCAT_SHA512 *tomcat.tar.gz\" | sha512sum -c -; \\\n\n\tsuccess=; \\\n\tfor url in $TOMCAT_ASC_URLS; do \\\n\t\tif wget -O tomcat.tar.gz.asc \"$url\"; then \\\n\t\t\tsuccess=1; \\\n\t\t\tbreak; \\\n\t\tfi; \\\n\tdone; \\\n\t[ -n \"$success\" ]; \\\n\n\tgpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz; \\\n\ttar -xvf tomcat.tar.gz --strip-components=1; \\\n\trm bin/*.bat; \\\n\trm tomcat.tar.gz*; \\\n\trm -rf \"$GNUPGHOME\"; \\\n\n\tnativeBuildDir=\"$(mktemp -d)\"; \\\n\ttar -xvf bin/tomcat-native.tar.gz -C \"$nativeBuildDir\" --strip-components=1; \\\n\tapk add --no-cache --virtual .native-build-deps \\\n\t\tapr-dev \\\n\t\tcoreutils \\\n\t\tdpkg-dev dpkg \\\n\t\tgcc \\\n\t\tlibc-dev \\\n\t\tmake \\\n\t\topenssl-dev \\\n\t; \\\n\t( \\\n\t\texport CATALINA_HOME=\"$PWD\"; \\\n\t\tcd \"$nativeBuildDir/native\"; \\\n\t\tgnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"; \\\n\t\t./configure \\\n\t\t\t--build=\"$gnuArch\" \\\n\t\t\t--libdir=\"$TOMCAT_NATIVE_LIBDIR\" \\\n\t\t\t--prefix=\"$CATALINA_HOME\" \\\n\t\t\t--with-apr=\"$(which apr-1-config)\" \\\n\t\t\t--with-java-home=\"$JAVA_HOME\" \\\n\t\t\t--with-ssl=yes; \\\n\t\tmake -j \"$(nproc)\"; \\\n\t\tmake install; \\\n\t); \\\n\trm -rf \"$nativeBuildDir\"; \\\n\trm bin/tomcat-native.tar.gz; \\\n\n\trunDeps=\"$( \\\n\t\tscanelf --needed --nobanner --format '%n#p' --recursive \"$TOMCAT_NATIVE_LIBDIR\" \\\n\t\t\t| tr ',' '\\n' \\\n\t\t\t| sort -u \\\n\t\t\t| awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \\\n\t)\"; \\\n\tapk add --no-cache --virtual .tomcat-native-rundeps $runDeps; \\\n\tapk del .fetch-deps .native-build-deps; \\\n\n# sh removes env vars it doesn't support (ones with periods)\n# https://github.com/docker-library/tomcat/issues/77\n\tapk add --no-cache bash; \\\n\tfind ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +\n\n# verify Tomcat Native is working properly\nRUN set -e \\\n\t&& nativeLines=\"$(catalina.sh configtest 2>&1)\" \\\n\t&& nativeLines=\"$(echo \"$nativeLines\" | grep 'Apache Tomcat Native')\" \\\n\t&& nativeLines=\"$(echo \"$nativeLines\" | sort -u)\" \\\n\t&& if ! echo \"$nativeLines\" | grep 'INFO: Loaded APR based Apache Tomcat Native library' >&2; then \\\n\t\techo >&2 \"$nativeLines\"; \\\n\t\texit 1; \\\n\tfi\n\nCOPY server.xml /usr/local/tomcat/conf/server.xml\n\nEXPOSE 8080\nCMD [\"catalina.sh\", \"run\"]\n"
}