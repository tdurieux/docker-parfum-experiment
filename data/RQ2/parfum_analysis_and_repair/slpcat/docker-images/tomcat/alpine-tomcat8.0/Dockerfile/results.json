{
  "startTime": 1674249177509,
  "endTime": 1674249178887,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 74,
        "lineEnd": 75,
        "columnStart": 4,
        "columnEnd": 164
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 115,
        "lineEnd": 116,
        "columnStart": 4,
        "columnEnd": 100
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 4,
        "columnEnd": 66
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 165,
        "lineEnd": 165,
        "columnStart": 2,
        "columnEnd": 58
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 18,
        "lineEnd": 27,
        "columnStart": 7,
        "columnEnd": 15
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 228,
        "lineEnd": 228,
        "columnStart": 1,
        "columnEnd": 51
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#upstream https://github.com/docker-library/tomcat/tree/master/8.5/\nFROM alpine:3.8\nMAINTAINER 若虚 <slpcat@qq.com>\n\n# Container variables\nENV \\\n    TERM=\"xterm\" \\\n    LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US.UTF-8\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    TIMEZONE=\"Asia/Shanghai\"\n\nRUN sed -i 's/dl-cdn.alpinelinux.org/mirrors.aliyun.com/' /etc/apk/repositories\n\n# Set timezone and locales\nRUN set -ex \\\n    && apk update \\\n    && apk upgrade \\\n    && apk add --no-cache \\\n           bash \\\n           tzdata \\\n           vim \\\n           tini \\\n           su-exec \\\n           gzip \\\n           tar \\\n           wget \\\n           curl \\\n    && echo \"${TIMEZONE}\" > /etc/TZ \\\n    && ln -sf /usr/share/zoneinfo/${TIMEZONE} /etc/localtime \\\n    # Network fix\n    && echo 'hosts: files mdns4_minimal [NOTFOUND=return] dns mdns4' >> /etc/nsswitch.conf\n\n# Here we install GNU libc (aka glibc) and set en_US.UTF-8 locale as default.\n\nRUN ALPINE_GLIBC_BASE_URL=\"https://github.com/sgerrand/alpine-pkg-glibc/releases/download\" && \\\n    ALPINE_GLIBC_PACKAGE_VERSION=\"2.27-r0\" && \\\n    ALPINE_GLIBC_BASE_PACKAGE_FILENAME=\"glibc-$ALPINE_GLIBC_PACKAGE_VERSION.apk\" && \\\n    ALPINE_GLIBC_BIN_PACKAGE_FILENAME=\"glibc-bin-$ALPINE_GLIBC_PACKAGE_VERSION.apk\" && \\\n    ALPINE_GLIBC_I18N_PACKAGE_FILENAME=\"glibc-i18n-$ALPINE_GLIBC_PACKAGE_VERSION.apk\" && \\\n    apk add --no-cache --virtual=.build-dependencies wget ca-certificates && \\\n    wget \\\n        \"https://raw.githubusercontent.com/sgerrand/alpine-pkg-glibc/master/sgerrand.rsa.pub\" \\\n        -O \"/etc/apk/keys/sgerrand.rsa.pub\" && \\\n    wget \\\n        \"$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_BASE_PACKAGE_FILENAME\" \\\n        \"$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_BIN_PACKAGE_FILENAME\" \\\n        \"$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_I18N_PACKAGE_FILENAME\" && \\\n    apk add --no-cache \\\n        \"$ALPINE_GLIBC_BASE_PACKAGE_FILENAME\" \\\n        \"$ALPINE_GLIBC_BIN_PACKAGE_FILENAME\" \\\n        \"$ALPINE_GLIBC_I18N_PACKAGE_FILENAME\" && \\\n    \\\n    rm \"/etc/apk/keys/sgerrand.rsa.pub\" && \\\n    /usr/glibc-compat/bin/localedef --force --inputfile POSIX --charmap UTF-8 \"$LANG\" || true && \\\n    echo \"export LANG=$LANG\" > /etc/profile.d/locale.sh && \\\n    \\\n    apk del glibc-i18n && \\\n    \\\n    rm \"/root/.wget-hsts\" && \\\n    apk del .build-dependencies && \\\n    rm \\\n        \"$ALPINE_GLIBC_BASE_PACKAGE_FILENAME\" \\\n        \"$ALPINE_GLIBC_BIN_PACKAGE_FILENAME\" \\\n        \"$ALPINE_GLIBC_I18N_PACKAGE_FILENAME\"\n\nENV JAVA_VERSION=8 \\\n    JAVA_UPDATE=161 \\\n    JAVA_BUILD=12 \\\n    JAVA_PATH=2f38c3b165be4555a1fa6e98c45e0808 \\\n    JAVA_HOME=\"/usr/lib/jvm/default-jvm\"\n\nRUN apk add --no-cache --virtual=build-dependencies wget ca-certificates unzip && \\\n    cd \"/tmp\" && \\\n    wget --header \"Cookie: oraclelicense=accept-securebackup-cookie;\" \\\n        \"https://download.oracle.com/otn-pub/java/jdk/${JAVA_VERSION}u${JAVA_UPDATE}-b${JAVA_BUILD}/${JAVA_PATH}/jdk-${JAVA_VERSION}u${JAVA_UPDATE}-linux-x64.tar.gz\" && \\\n    tar -xzf \"jdk-${JAVA_VERSION}u${JAVA_UPDATE}-linux-x64.tar.gz\" && \\\n    mkdir -p \"/usr/lib/jvm\" && \\\n    mv \"/tmp/jdk1.${JAVA_VERSION}.0_${JAVA_UPDATE}\" \"/usr/lib/jvm/java-${JAVA_VERSION}-oracle\" && \\\n    ln -s \"java-${JAVA_VERSION}-oracle\" \"$JAVA_HOME\" && \\\n    ln -s \"$JAVA_HOME/bin/\"* \"/usr/bin/\" && \\\n    rm -rf \"$JAVA_HOME/\"*src.zip && \\\n    rm -rf \"$JAVA_HOME/lib/missioncontrol\" \\\n           \"$JAVA_HOME/lib/visualvm\" \\\n           \"$JAVA_HOME/lib/\"*javafx* \\\n           \"$JAVA_HOME/jre/lib/plugin.jar\" \\\n           \"$JAVA_HOME/jre/lib/ext/jfxrt.jar\" \\\n           \"$JAVA_HOME/jre/bin/javaws\" \\\n           \"$JAVA_HOME/jre/lib/javaws.jar\" \\\n           \"$JAVA_HOME/jre/lib/desktop\" \\\n           \"$JAVA_HOME/jre/plugin\" \\\n           \"$JAVA_HOME/jre/lib/\"deploy* \\\n           \"$JAVA_HOME/jre/lib/\"*javafx* \\\n           \"$JAVA_HOME/jre/lib/\"*jfx* \\\n           \"$JAVA_HOME/jre/lib/amd64/libdecora_sse.so\" \\\n           \"$JAVA_HOME/jre/lib/amd64/\"libprism_*.so \\\n           \"$JAVA_HOME/jre/lib/amd64/libfxplugins.so\" \\\n           \"$JAVA_HOME/jre/lib/amd64/libglass.so\" \\\n           \"$JAVA_HOME/jre/lib/amd64/libgstreamer-lite.so\" \\\n           \"$JAVA_HOME/jre/lib/amd64/\"libjavafx*.so \\\n           \"$JAVA_HOME/jre/lib/amd64/\"libjfx*.so && \\\n    rm -rf \"$JAVA_HOME/jre/bin/jjs\" \\\n           \"$JAVA_HOME/jre/bin/keytool\" \\\n           \"$JAVA_HOME/jre/bin/orbd\" \\\n           \"$JAVA_HOME/jre/bin/pack200\" \\\n           \"$JAVA_HOME/jre/bin/policytool\" \\\n           \"$JAVA_HOME/jre/bin/rmid\" \\\n           \"$JAVA_HOME/jre/bin/rmiregistry\" \\\n           \"$JAVA_HOME/jre/bin/servertool\" \\\n           \"$JAVA_HOME/jre/bin/tnameserv\" \\\n           \"$JAVA_HOME/jre/bin/unpack200\" \\\n           \"$JAVA_HOME/jre/lib/ext/nashorn.jar\" \\\n           \"$JAVA_HOME/jre/lib/jfr.jar\" \\\n           \"$JAVA_HOME/jre/lib/jfr\" \\\n           \"$JAVA_HOME/jre/lib/oblique-fonts\" && \\\n    wget --header \"Cookie: oraclelicense=accept-securebackup-cookie;\" \\\n        \"https://download.oracle.com/otn-pub/java/jce/${JAVA_VERSION}/jce_policy-${JAVA_VERSION}.zip\" && \\\n    unzip -jo -d \"${JAVA_HOME}/jre/lib/security\" \"jce_policy-${JAVA_VERSION}.zip\" && \\\n    rm \"${JAVA_HOME}/jre/lib/security/README.txt\" && \\\n    apk del build-dependencies && \\\n    rm \"/tmp/\"* && rm \"jdk-${JAVA_VERSION}u${JAVA_UPDATE}-linux-x64.tar.gz\"\n\nENV CATALINA_HOME /usr/local/tomcat\nENV PATH $CATALINA_HOME/bin:$PATH\nRUN mkdir -p \"$CATALINA_HOME\"\nWORKDIR $CATALINA_HOME\n\n# let \"Tomcat Native\" live somewhere isolated\nENV TOMCAT_NATIVE_LIBDIR $CATALINA_HOME/native-jni-lib\nENV LD_LIBRARY_PATH ${LD_LIBRARY_PATH:+$LD_LIBRARY_PATH:}$TOMCAT_NATIVE_LIBDIR\n\n# see https://www.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/KEYS\n# see also \"update.sh\" (https://github.com/docker-library/tomcat/blob/master/update.sh)\nENV GPG_KEYS 05AB33110949707C93A279E3D3EFE6B686867BA6 07E48665A34DCAFAE522E5E6266191C37C037D42 47309207D818FFD8DCD3F83F1931D684307A10A5 541FBE7D8F78B25E055DDEE13C370389288584E7 61B832AC2F1C5A90F0F9B00A1C506407564C17A3 713DA88BE50911535FE716F5208B0AB1D63011C7 79F7026C690BAA50B92CD8B66A3AD3F4F22C4FED 9BA44C2621385CB966EBA586F72C284D731FABEE A27677289986DB50844682F8ACB77FC2E86E29AC A9C5DF4D22E99998D9875A5110C01C5A2F6059E7 DCFD35E0BF8CA7344752DE8B6FB21E8933C60243 F3A04C595DB5B6A5F1ECA43E3B7BBB100D811BBE F7DA48BB64BCB84ECBA7EE6935CD23C10D498E23\n\nENV TOMCAT_MAJOR 8\nENV TOMCAT_VERSION 8.0.50\nENV TOMCAT_SHA512 c8923e610f1d3f7f13d5d0cc765a97ef1b5b34a527b57dfb7058f0bd65555cec748b83198859e6bba41b29cc3d5071ed05618097edc5d6cfad2f380f8230e7f5\n\nENV TOMCAT_TGZ_URLS \\\n# https://issues.apache.org/jira/browse/INFRA-8753?focusedCommentId=14735394#comment-14735394\n\thttps://www.apache.org/dyn/closer.cgi?action=download&filename=tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz \\\n# if the version is outdated, we might have to pull from the dist/archive :/\n\thttps://www-us.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz \\\n\thttps://www.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz \\\n\thttps://archive.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz\n\nENV TOMCAT_ASC_URLS \\\n\thttps://www.apache.org/dyn/closer.cgi?action=download&filename=tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz.asc \\\n# not all the mirrors actually carry the .asc files :'(\n\thttps://www-us.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz.asc \\\n\thttps://www.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz.asc \\\n\thttps://archive.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz.asc\n\nRUN set -eux; \\\n\n\tapk add --no-cache --virtual .fetch-deps \\\n\t\tgnupg \\\n\t\t\\\n\t\tca-certificates \\\n\t\topenssl \\\n\t; \\\n\n\texport GNUPGHOME=\"$(mktemp -d)\"; \\\n\tfor key in $GPG_KEYS; do \\\n\t\tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$key\"; \\\n\tdone; \\\n\n\tsuccess=; \\\n\tfor url in $TOMCAT_TGZ_URLS; do \\\n\t\tif wget -O tomcat.tar.gz \"$url\"; then \\\n\t\t\tsuccess=1; \\\n\t\t\tbreak; \\\n\t\tfi; \\\n\tdone; \\\n\t[ -n \"$success\" ]; \\\n\n\techo \"$TOMCAT_SHA512 *tomcat.tar.gz\" | sha512sum -c -; \\\n\n\tsuccess=; \\\n\tfor url in $TOMCAT_ASC_URLS; do \\\n\t\tif wget -O tomcat.tar.gz.asc \"$url\"; then \\\n\t\t\tsuccess=1; \\\n\t\t\tbreak; \\\n\t\tfi; \\\n\tdone; \\\n\t[ -n \"$success\" ]; \\\n\n\tgpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz; \\\n\ttar -xvf tomcat.tar.gz --strip-components=1; \\\n\trm bin/*.bat; \\\n\trm tomcat.tar.gz*; \\\n\trm -rf \"$GNUPGHOME\"; \\\n\n\tnativeBuildDir=\"$(mktemp -d)\"; \\\n\ttar -xvf bin/tomcat-native.tar.gz -C \"$nativeBuildDir\" --strip-components=1; \\\n\tapk add --no-cache --virtual .native-build-deps \\\n\t\tapr-dev \\\n\t\tcoreutils \\\n\t\tdpkg-dev dpkg \\\n\t\tgcc \\\n\t\tlibc-dev \\\n\t\tmake \\\n\t\topenssl-dev \\\n\t; \\\n\t( \\\n\t\texport CATALINA_HOME=\"$PWD\"; \\\n\t\tcd \"$nativeBuildDir/native\"; \\\n\t\tgnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"; \\\n\t\t./configure \\\n\t\t\t--build=\"$gnuArch\" \\\n\t\t\t--libdir=\"$TOMCAT_NATIVE_LIBDIR\" \\\n\t\t\t--prefix=\"$CATALINA_HOME\" \\\n\t\t\t--with-apr=\"$(which apr-1-config)\" \\\n\t\t\t--with-java-home=\"$JAVA_HOME\" \\\n\t\t\t--with-ssl=yes; \\\n\t\tmake -j \"$(nproc)\"; \\\n\t\tmake install; \\\n\t); \\\n\trm -rf \"$nativeBuildDir\"; \\\n\trm bin/tomcat-native.tar.gz; \\\n\n\trunDeps=\"$( \\\n\t\tscanelf --needed --nobanner --format '%n#p' --recursive \"$TOMCAT_NATIVE_LIBDIR\" \\\n\t\t\t| tr ',' '\\n' \\\n\t\t\t| sort -u \\\n\t\t\t| awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \\\n\t)\"; \\\n\tapk add --no-cache --virtual .tomcat-native-rundeps $runDeps; \\\n\tapk del .fetch-deps .native-build-deps; \\\n\n# sh removes env vars it doesn't support (ones with periods)\n# https://github.com/docker-library/tomcat/issues/77\n\tapk add --no-cache bash; \\\n\tfind ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +\n\n# verify Tomcat Native is working properly\nRUN set -e \\\n\t&& nativeLines=\"$(catalina.sh configtest 2>&1)\" \\\n\t&& nativeLines=\"$(echo \"$nativeLines\" | grep 'Apache Tomcat Native')\" \\\n\t&& nativeLines=\"$(echo \"$nativeLines\" | sort -u)\" \\\n\t&& if ! echo \"$nativeLines\" | grep 'INFO: Loaded APR based Apache Tomcat Native library' >&2; then \\\n\t\techo >&2 \"$nativeLines\"; \\\n\t\texit 1; \\\n\tfi\n\nEXPOSE 8080\nCMD [\"catalina.sh\", \"run\"]\n"
}