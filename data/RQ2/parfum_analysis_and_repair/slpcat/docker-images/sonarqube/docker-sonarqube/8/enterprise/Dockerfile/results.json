{
  "startTime": 1674252120403,
  "endTime": 1674252121598,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 110
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 84
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 71
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 4,
        "columnEnd": 57
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.12\n\nENV JAVA_VERSION=\"jdk-11.0.10+9\" \\\n    LANG='en_US.UTF-8' \\\n    LANGUAGE='en_US:en' \\\n    LC_ALL='en_US.UTF-8'\n\n#\n# glibc setup\n#\nRUN set -eux; \\\n    apk add --no-cache tzdata --virtual .build-deps curl binutils zstd; \\\n    GLIBC_VER=\"2.33-r0\"; \\\n    ALPINE_GLIBC_REPO=\"https://github.com/sgerrand/alpine-pkg-glibc/releases/download\"; \\\n    GCC_LIBS_URL=\"https://archive.archlinux.org/packages/g/gcc-libs/gcc-libs-10.2.0-6-x86_64.pkg.tar.zst\"; \\\n    GCC_LIBS_SHA256=\"e33b45e4a10ef26259d6acf8e7b5dd6dc63800641e41eb67fa6588d061f79c1c\"; \\\n    ZLIB_URL=\"https://archive.archlinux.org/packages/z/zlib/zlib-1%3A1.2.11-4-x86_64.pkg.tar.xz\"; \\\n    ZLIB_SHA256=43a17987d348e0b395cb6e28d2ece65fb3b5a0fe433714762780d18c0451c149; \\\n    curl -LfsS https://alpine-pkgs.sgerrand.com/sgerrand.rsa.pub -o /etc/apk/keys/sgerrand.rsa.pub; \\\n    SGERRAND_RSA_SHA256=\"823b54589c93b02497f1ba4dc622eaef9c813e6b0f0ebbb2f771e32adf9f4ef2\"; \\\n    echo \"${SGERRAND_RSA_SHA256}  */etc/apk/keys/sgerrand.rsa.pub\" | sha256sum -c -; \\\n    curl -LfsS ${ALPINE_GLIBC_REPO}/${GLIBC_VER}/glibc-${GLIBC_VER}.apk > /tmp/glibc-${GLIBC_VER}.apk; \\\n    apk add --no-cache /tmp/glibc-${GLIBC_VER}.apk; \\\n    curl -LfsS ${ALPINE_GLIBC_REPO}/${GLIBC_VER}/glibc-bin-${GLIBC_VER}.apk > /tmp/glibc-bin-${GLIBC_VER}.apk; \\\n    apk add --no-cache /tmp/glibc-bin-${GLIBC_VER}.apk; \\\n    curl -f -Ls ${ALPINE_GLIBC_REPO}/${GLIBC_VER}/glibc-i18n-${GLIBC_VER}.apk > /tmp/glibc-i18n-${GLIBC_VER}.apk; \\\n    apk add --no-cache /tmp/glibc-i18n-${GLIBC_VER}.apk; \\\n    /usr/glibc-compat/bin/localedef --inputfile en_US --charmap UTF-8 \"$LANG\" || true ; \\\n    echo \"export LANG=$LANG\" > /etc/profile.d/locale.sh; \\\n    curl -LfsS ${GCC_LIBS_URL} -o /tmp/gcc-libs.tar.zst; \\\n    echo \"${GCC_LIBS_SHA256}  */tmp/gcc-libs.tar.zst\" | sha256sum -c -; \\\n    mkdir /tmp/gcc; \\\n    zstd -d /tmp/gcc-libs.tar.zst --output-dir-flat /tmp; \\\n    tar -xf /tmp/gcc-libs.tar -C /tmp/gcc; \\\n    mv /tmp/gcc/usr/lib/libgcc* /tmp/gcc/usr/lib/libstdc++* /usr/glibc-compat/lib; \\\n    strip /usr/glibc-compat/lib/libgcc_s.so.* /usr/glibc-compat/lib/libstdc++.so*; \\\n    curl -LfsS ${ZLIB_URL} -o /tmp/libz.tar.xz; \\\n    echo \"${ZLIB_SHA256}  */tmp/libz.tar.xz\" | sha256sum -c -; \\\n    mkdir /tmp/libz; \\\n    tar -xf /tmp/libz.tar.xz -C /tmp/libz; \\\n    mv /tmp/libz/usr/lib/libz.so* /usr/glibc-compat/lib; \\\n    apk del --purge .build-deps glibc-i18n; \\\n    rm -rf /tmp/*.apk /tmp/gcc /tmp/gcc-libs.tar* /tmp/libz /tmp/libz.tar.xz /var/cache/apk/*;\n\n#\n# AdoptOpenJDK/openjdk11 setup\n#\nRUN set -eux; \\\n    apk add --no-cache --virtual .fetch-deps curl; \\\n    ARCH=\"$(apk --print-arch)\"; \\\n    case \"${ARCH}\" in \\\n       aarch64|arm64) \\\n         ESUM='fde6b29df23b6e7ed6e16a237a0f44273fb9e267fdfbd0b3de5add98e55649f6'; \\\n         BINARY_URL='https://github.com/AdoptOpenJDK/openjdk11-binaries/releases/download/jdk-11.0.11%2B9/OpenJDK11U-jre_aarch64_linux_hotspot_11.0.11_9.tar.gz'; \\\n         ;; \\\n       armhf|armv7l) \\\n         ESUM='ad02656f800fd64c2b090b23ad24a099d9cd1054948ecb0e9851bc39c51c8be8'; \\\n         BINARY_URL='https://github.com/AdoptOpenJDK/openjdk11-binaries/releases/download/jdk-11.0.11%2B9/OpenJDK11U-jre_arm_linux_hotspot_11.0.11_9.tar.gz'; \\\n         ;; \\\n       ppc64el|ppc64le) \\\n         ESUM='37c19c7c2d1cea627b854a475ef1a765d30357d765d20cf3f96590037e79d0f3'; \\\n         BINARY_URL='https://github.com/AdoptOpenJDK/openjdk11-binaries/releases/download/jdk-11.0.11%2B9/OpenJDK11U-jre_ppc64le_linux_hotspot_11.0.11_9.tar.gz'; \\\n         ;; \\\n       s390x) \\\n         ESUM='f18101fc50aad795a41b4d3bbc591308c83664fd2390bf2bc007fd9b3d531e6c'; \\\n         BINARY_URL='https://github.com/AdoptOpenJDK/openjdk11-binaries/releases/download/jdk-11.0.11%2B9/OpenJDK11U-jre_s390x_linux_hotspot_11.0.11_9.tar.gz'; \\\n         ;; \\\n       amd64|x86_64) \\\n         ESUM='144f2c6bcf64faa32016f2474b6c01031be75d25325e9c3097aed6589bc5d548'; \\\n         BINARY_URL='https://github.com/AdoptOpenJDK/openjdk11-binaries/releases/download/jdk-11.0.11%2B9/OpenJDK11U-jre_x64_linux_hotspot_11.0.11_9.tar.gz'; \\\n         ;; \\\n       *) \\\n         echo \"Unsupported arch: ${ARCH}\"; \\\n         exit 1; \\\n         ;; \\\n    esac; \\\n    curl -LfsSo /tmp/openjdk.tar.gz ${BINARY_URL}; \\\n    echo \"${ESUM}  */tmp/openjdk.tar.gz\" | sha256sum -c -; \\\n    mkdir -p /opt/java/openjdk; \\\n    cd /opt/java/openjdk; \\\n    tar -xf /tmp/openjdk.tar.gz --strip-components=1; \\\n    apk del --purge .fetch-deps; \\\n    rm -rf /var/cache/apk/*; \\\n    rm -rf /tmp/openjdk.tar.gz;\n\n#\n# SonarQube setup\n#\nARG SONARQUBE_VERSION=8.9.5.50698\nARG SONARQUBE_ZIP_URL=https://binaries.sonarsource.com/CommercialDistribution/sonarqube-enterprise/sonarqube-enterprise-${SONARQUBE_VERSION}.zip\nENV JAVA_HOME=/opt/java/openjdk \\\n    PATH=\"/opt/java/openjdk/bin:$PATH\" \\\n    SONARQUBE_HOME=/opt/sonarqube \\\n    SONAR_VERSION=\"${SONARQUBE_VERSION}\" \\\n    SQ_DATA_DIR=\"/opt/sonarqube/data\" \\\n    SQ_EXTENSIONS_DIR=\"/opt/sonarqube/extensions\" \\\n    SQ_LOGS_DIR=\"/opt/sonarqube/logs\" \\\n    SQ_TEMP_DIR=\"/opt/sonarqube/temp\"\n\nRUN set -eux; \\\n    addgroup -S -g 1000 sonarqube; \\\n    adduser -S -D -u 1000 -G sonarqube sonarqube; \\\n    apk add --no-cache --virtual build-dependencies gnupg unzip curl; \\\n    apk add --no-cache bash su-exec ttf-dejavu; \\\n    # pub   2048R/D26468DE 2015-05-25\n    #       Key fingerprint = F118 2E81 C792 9289 21DB  CAB4 CFCA 4A29 D264 68DE\n    # uid                  sonarsource_deployer (Sonarsource Deployer) <infra@sonarsource.com>\n    # sub   2048R/06855C1D 2015-05-25\n    echo \"networkaddress.cache.ttl=5\" >> \"${JAVA_HOME}/conf/security/java.security\"; \\\n    sed --in-place --expression=\"s?securerandom.source=file:/dev/random?securerandom.source=file:/dev/urandom?g\" \"${JAVA_HOME}/conf/security/java.security\"; \\\n    for server in $(shuf -e ha.pool.sks-keyservers.net \\\n                            hkp://p80.pool.sks-keyservers.net:80 \\\n                            keyserver.ubuntu.com \\\n                            hkp://keyserver.ubuntu.com:80 \\\n                            pgp.mit.edu) ; do \\\n        gpg --batch --keyserver \"${server}\" --recv-keys 679F1EE92B19609DE816FDE81DB198F93525EC1A && break || : ; \\\n    done; \\\n    mkdir --parents /opt; \\\n    cd /opt; \\\n    curl --fail --location --output sonarqube.zip --silent --show-error \"${SONARQUBE_ZIP_URL}\"; \\\n    curl --fail --location --output sonarqube.zip.asc --silent --show-error \"${SONARQUBE_ZIP_URL}.asc\"; \\\n    gpg --batch --verify sonarqube.zip.asc sonarqube.zip; \\\n    unzip -q sonarqube.zip; \\\n    mv \"sonarqube-${SONARQUBE_VERSION}\" sonarqube; \\\n    rm sonarqube.zip*; \\\n    rm -rf ${SONARQUBE_HOME}/bin/*; \\\n    chown -R sonarqube:sonarqube ${SONARQUBE_HOME}; \\\n    # this 777 will be replaced by 700 at runtime (allows semi-arbitrary \"--user\" values)\n    chmod -R 777 \"${SQ_DATA_DIR}\" \"${SQ_EXTENSIONS_DIR}\" \"${SQ_LOGS_DIR}\" \"${SQ_TEMP_DIR}\"; \\\n    apk del --purge build-dependencies;\n\nCOPY --chown=sonarqube:sonarqube run.sh sonar.sh ${SONARQUBE_HOME}/bin/\n\nWORKDIR ${SONARQUBE_HOME}\nEXPOSE 9000\nENTRYPOINT [\"bin/run.sh\"]\nCMD [\"bin/sonar.sh\"]\n"
}