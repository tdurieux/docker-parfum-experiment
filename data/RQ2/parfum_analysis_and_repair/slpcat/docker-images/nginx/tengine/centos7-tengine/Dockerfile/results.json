{
  "startTime": 1674248790907,
  "endTime": 1674248792441,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 269,
        "lineEnd": 269,
        "columnStart": 8,
        "columnEnd": 102
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 277,
        "lineEnd": 277,
        "columnStart": 11,
        "columnEnd": 111
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 270,
        "lineEnd": 270,
        "columnStart": 11,
        "columnEnd": 28
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 92,
        "lineEnd": 96,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 107,
        "lineEnd": 107,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 133,
        "lineEnd": 133,
        "columnStart": 7,
        "columnEnd": 49
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 283,
        "lineEnd": 283,
        "columnStart": 11,
        "columnEnd": 30
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 5,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 340,
        "lineEnd": 340,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 90,
        "lineEnd": 90,
        "columnStart": 1,
        "columnEnd": 57
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 105,
        "lineEnd": 105,
        "columnStart": 1,
        "columnEnd": 56
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 117,
        "lineEnd": 117,
        "columnStart": 1,
        "columnEnd": 62
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 131,
        "lineEnd": 131,
        "columnStart": 7,
        "columnEnd": 54
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 280,
        "lineEnd": 280,
        "columnStart": 11,
        "columnEnd": 96
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 281,
        "lineEnd": 281,
        "columnStart": 11,
        "columnEnd": 98
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 326,
        "lineEnd": 326,
        "columnStart": 4,
        "columnEnd": 134
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 280,
        "lineEnd": 280,
        "columnStart": 11,
        "columnEnd": 96
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 281,
        "lineEnd": 281,
        "columnStart": 11,
        "columnEnd": 98
      }
    }
  ],
  "repairedDockerfile": "FROM slpcat/gcc:v9.3.0-centos7 AS builder\nMAINTAINER 若虚 <slpcat@qq.com>\n#https://nginx.org/en/docs/configure.html\n\nRUN \\\n    yum install -y \\\n        autogen \\\n        autoconf \\\n        bzip2 \\\n\n        GeoIP \\\n        GeoIP-devel \\\n        git \\\n        wget \\\n\n        gd \\\n        gd-devel \\\n        make \\\n\n\n\n        openssl-devel \\\n\n\n\n\n        which \\\n        libxslt \\\n        libxslt-devel \\\n        libxml2 \\\n        libxml2-devel \\\n        perl-core \\\n        rpm-build \\\n\n\n\n\n        cmake3 && rm -rf /var/cache/yum\n\nENV GO111MODULE=on \\\n    GOPROXY=https://goproxy.cn\n\nRUN ln -s /usr/bin/cmake3 /usr/bin/cmake\n\nCOPY *.sh /\n\nRUN \\\n    bash before-install.sh\n\nARG NGINX_VERSION=1.17.3\nARG JEMALLOC_VERSION=5.2.1\nARG PCRE_VERSION=8.44\nARG ZLIB_VERSION=1.2.11\nARG OPENSSL_VERSION=1.1.1g\nARG OPENTRACING_CPP_VERSION=v1.5.1\nARG ZIPKIN_CPP_VERSION=v0.5.2\n#ARG LIGHTSTEP_VERSION=v0.8.1\nARG JAEGER_CPP_VERSION=v0.4.2\nARG GRPC_VERSION=v1.22.x\n#ARG DATADOG_VERSION=v1.1.2\nARG PKG_ROOT=/fpm_install\nARG CC=/usr/local/bin/gcc\nARG CXX=/usr/local/bin/g++\nARG CFLAGS=\"-O2\"\n#ARG LDFLAGS=\"-L /usr/lib64/openssl11/lib\"\n\nRUN \\\n    mkdir -p /usr/src \\\n    && cd /usr/src && rm -rf /usr/src\n\n#jemalloc is a general purpose malloc(3) implementation that emphasizes\n#fragmentation avoidance and scalable concurrency support.\n#COPY jemalloc-$JEMALLOC_VERSION.tar.bz2 /\n\n#RUN \\\n    #wget https://github.com/jemalloc/jemalloc/releases/download/$JEMALLOC_VERSION/jemalloc-$JEMALLOC_VERSION.tar.bz2 \\\n#    tar -jxvC /usr/src -f /jemalloc-$JEMALLOC_VERSION.tar.bz2 \\\n#    && cd /usr/src/jemalloc-$JEMALLOC_VERSION \\\n#    && ./autogen.sh \\\n#    && make -j2 \\\n#    && make install \\\n#    && make install  DESTDIR=$PKG_ROOT\n\n#PCRE – Supports regular expressions. Required by the NGINX Core and Rewrite modules.\n#http://linuxfromscratch.org/blfs/view/svn/general/pcre.html\nCOPY pcre-$PCRE_VERSION.tar.gz /usr/src\n\nRUN \\\n\n\n tar -zvxC /usr/src -f /usr/src/pcre-$PCRE_VERSION.tar.gz \\\n && cd /usr/src/pcre-$PCRE_VERSION \\\n && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/local \\\n                --enable-pcre16 \\\n                --enable-pcre32 \\\n                --enable-unicode-properties \\\n                --enable-jit \\\n && make \\\n && make install DESTDIR=$PKG_ROOT && rm /usr/src/pcre-$PCRE_VERSION.tar.gz\n\n#zlib – Supports header compression. Required by the NGINX Gzip module.\nCOPY zlib-$ZLIB_VERSION.tar.gz /usr/src\n\nRUN \\\n\n tar -zxC /usr/src -f /usr/src/zlib-$ZLIB_VERSION.tar.gz \\\n && cd /usr/src/zlib-$ZLIB_VERSION \\\n && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/local \\\n && make \\\n && make install DESTDIR=$PKG_ROOT && rm /usr/src/zlib-$ZLIB_VERSION.tar.gz\n\n#OpenSSL – Supports the HTTPS protocol. Required by the NGINX SSL module and others.\nCOPY openssl-$OPENSSL_VERSION.tar.gz /usr/src\n\nRUN \\\n\n\n tar -zxC /usr/src -f /usr/src/openssl-$OPENSSL_VERSION.tar.gz \\\n && cd /usr/src/openssl-$OPENSSL_VERSION \\\n && ./config --prefix=/usr/local \\\n && make \\\n && make install DESTDIR=$PKG_ROOT \\\n && ldconfig && rm /usr/src/openssl-$OPENSSL_VERSION.tar.gz\n\n#curl\nARG CURL_VERSION=7.69.1\nCOPY curl-$CURL_VERSION.tar.gz /\n\n#https://github.com/curl/curl/releases/download/curl-7_69_1/curl-7.69.1.tar.gz\nRUN \\\n    cd /usr/src \\\n    && tar -zxC /usr/src -f /curl-$CURL_VERSION.tar.gz \\\n    && cd /usr/src/curl-$CURL_VERSION \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/local --with-ssl \\\n    && make \\\n    && make install \\\n    && make install DESTDIR=$PKG_ROOT && rm /curl-$CURL_VERSION.tar.gz\n\n#Enable requests served by nginx for distributed tracing via The OpenTracing Project.\n#https://github.com/opentracing-contrib/nginx-opentracing#building-from-source\n\n### Build opentracing-cpp\nRUN \\\n  cd /usr/src \\\n  && git clone -b $OPENTRACING_CPP_VERSION https://github.com/opentracing/opentracing-cpp.git \\\n  && cd opentracing-cpp \\\n  && mkdir .build && cd .build \\\n  && cmake -DCMAKE_BUILD_TYPE=Release \\\n           -DBUILD_TESTING=ON .. \\\n  && make \\\n  && make install \\\n  && make install DESTDIR=$PKG_ROOT\n\n### Build zipkin-cpp-opentracing\nRUN \\\n  cd /usr/src \\\n  && git clone -b $ZIPKIN_CPP_VERSION https://github.com/rnburn/zipkin-cpp-opentracing.git \\\n  && cd zipkin-cpp-opentracing \\\n  && mkdir .build && cd .build \\\n  && cmake -DBUILD_SHARED_LIBS=1 -DCMAKE_BUILD_TYPE=Release -DBUILD_TESTING=OFF .. \\\n  && make \\\n  && make install \\\n  && make install DESTDIR=$PKG_ROOT \\\n  && cd $PKG_ROOT/usr/local/lib/ \\\n  && ln -s libzipkin_opentracing.so libzipkin_opentracing_plugin.so\n\n### Build Jaeger cpp-client\n#RUN \\\n#  cd /usr/src \\\n#  && git clone -b $JAEGER_CPP_VERSION https://github.com/jaegertracing/cpp-client.git jaeger-cpp-client \\\n#  && cd jaeger-cpp-client \\\n#  && mkdir .build && cd .build \\\n#  && cmake -DCMAKE_BUILD_TYPE=Release \\\n#           -DBUILD_TESTING=OFF \\\n#           -DJAEGERTRACING_WITH_YAML_CPP=ON .. \\\n#  && make \\\n#  && make install DESTDIR=$PKG_ROOT \\\n#  && export HUNTER_INSTALL_DIR=$(cat _3rdParty/Hunter/install-root-dir) \\\n#  && cd $PKG_ROOT/usr/local/lib/ && ln -s libjaegertracing.so libjaegertracing_plugin.so\n\n### Build gRPC\n#COPY gpc-$GRPC_VERSION.tar.gz /usr/src/\n\n#RUN \\\n#  cd \"/usr/src\" \\\n  #&& git clone -b $GRPC_VERSION https://github.com/grpc/grpc \\\n#  && tar -zxC /usr/src -f /usr/src/gpc-$GRPC_VERSION.tar.gz \\\n#  && cd grpc-$GRPC_VERSION \\\n  #&& git submodule update --init \\\n#  && make HAS_SYSTEM_PROTOBUF=false && make install \\\n#  && cd third_party/protobuf \\\n#  && make install DESTDIR=$PKG_ROOT\n\n### Build nginx-opentracing modules\nENV NGINX_OPENTRACING_VERSION=v0.9.0\n\nCOPY usr-local-lib.conf /etc/ld.so.conf.d/\nRUN mkdir -p $PKG_ROOT/etc/ld.so.conf.d/\nCOPY usr-local-lib.conf $PKG_ROOT/etc/ld.so.conf.d/\n\nRUN ldconfig \\\n    && ldconfig -p \\\n    && ln -sf /usr/local/lib64/libstdc++.so.6 /lib64/libstdc++.so.6\n\nENV TENGINE_VERSION 2.3.2\n\n# nginx: https://git.io/vSIyj\n\n\nENV CONFIG \"\\\n        --prefix=/etc/nginx \\\n        --sbin-path=/usr/sbin/nginx \\\n        --modules-path=/usr/lib/nginx/modules \\\n        --conf-path=/etc/nginx/nginx.conf \\\n        --error-log-path=/var/log/nginx/error.log \\\n        --http-log-path=/var/log/nginx/access.log \\\n        --pid-path=/var/run/nginx.pid \\\n        --lock-path=/var/run/nginx.lock \\\n        --http-client-body-temp-path=/var/cache/nginx/client_temp \\\n        --http-proxy-temp-path=/var/cache/nginx/proxy_temp \\\n        --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp \\\n        --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp \\\n        --http-scgi-temp-path=/var/cache/nginx/scgi_temp \\\n        --user=nginx \\\n        --group=nginx \\\n        --with-http_ssl_module \\\n        --with-http_v2_module \\\n        --with-http_realip_module \\\n        --with-http_addition_module \\\n        --with-http_sub_module \\\n        --with-http_dav_module \\\n        --with-http_flv_module \\\n        --with-http_mp4_module \\\n        --with-http_gunzip_module \\\n        --with-http_gzip_static_module \\\n        --with-http_random_index_module \\\n        --with-http_secure_link_module \\\n        --with-http_stub_status_module \\\n        --with-http_auth_request_module \\\n        --with-http_xslt_module=dynamic \\\n        --with-http_image_filter_module=dynamic \\\n        --with-http_slice_module \\\n        --with-http_geoip_module=dynamic \\\n        --with-threads \\\n        --with-stream \\\n        --with-stream_ssl_module \\\n        --with-stream_ssl_preread_module \\\n        --with-stream_realip_module \\\n        --with-stream_geoip_module=dynamic \\\n        --with-http_slice_module \\\n        --with-mail \\\n        --with-mail_ssl_module \\\n        --with-compat \\\n        --with-file-aio \\\n        --with-pcre=../pcre-$PCRE_VERSION \\\n        --with-pcre-jit \\\n        --with-zlib=../zlib-$ZLIB_VERSION \\\n        --with-openssl=../openssl-$OPENSSL_VERSION \\\n        --add-module=modules/nginx-module-vts \\\n        --add-module=modules/nginx-opentracing/opentracing \\ \n        --add-module=modules/ngx_http_upstream_check_module \\\n        --add-module=modules/headers-more-nginx-module-0.33 \\\n        --add-module=modules/ngx_cache_purge-2.3 \\\n        --add-module=modules/ngx_slowfs_cache-1.10 \\\n\t--add-module=modules/ngx_http_upstream_session_sticky_module \\\n        \"\nCOPY  ngx_cache_purge-2.3.tar.gz ngx_slowfs_cache-1.10.tar.gz /tmp/\n\nRUN \\\n        curl -f -L \"https://github.com/alibaba/tengine/archive/$TENGINE_VERSION.tar.gz\" -o tengine.tar.gz \\\n        && mkdir -p /usr/src \\\n        && tar -zxC /usr/src -f tengine.tar.gz \\\n        && rm tengine.tar.gz \\\n        && cd /usr/src/tengine-$TENGINE_VERSION/modules \\\n        && git clone https://github.com/vozlt/nginx-module-vts.git \\\n        && git clone https://github.com/opentracing-contrib/nginx-opentracing.git \\\n        && cd /usr/src/tengine-$TENGINE_VERSION \\\n        && curl -f -L \"https://github.com/openresty/headers-more-nginx-module/archive/v0.33.tar.gz\" -o more.tar.gz \\\n        && tar -zxC /usr/src/tengine-$TENGINE_VERSION/modules -f more.tar.gz \\\n\t&& rm  more.tar.gz \\\n        && tar -zxC /usr/src/tengine-$TENGINE_VERSION/modules -f /tmp/ngx_cache_purge-2.3.tar.gz \\\n        && tar -zxC /usr/src/tengine-$TENGINE_VERSION/modules -f /tmp/ngx_slowfs_cache-1.10.tar.gz \\\n\t&& ls -l /usr/src/tengine-$TENGINE_VERSION/modules \\\n        && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" $CONFIG \\\n        && make \\\n        #&& make install \\\n        && make install DESTDIR=$PKG_ROOT && rm -rf /usr/src\n\n#install nginx\nCOPY nginx.* /\n\nRUN \\\n    cd /usr/src/tengine-$TENGINE_VERSION \\\n    #&& rm -rf /usr/nginx-module-vts/ \\\n    #&& rm -rf /nginx-upsync-module \\\n    && rm -rf $PKG_ROOT/etc/nginx/html/ \\\n    && mkdir $PKG_ROOT/etc/nginx/conf.d/ \\\n    && mkdir -p $PKG_ROOT/usr/share/nginx/html/ \\\n    && install -m644 html/index.html $PKG_ROOT/usr/share/nginx/html/ \\\n    && install -m644 html/50x.html $PKG_ROOT/usr/share/nginx/html/ \\\n    #&& install -m755 objs/nginx-debug $PKG_ROOT/usr/sbin/nginx-debug \\\n    && install -m644 -D /nginx.service $PKG_ROOT/usr/lib/systemd/system/nginx.service \\\n    && install -m644 -D /nginx.logrotate $PKG_ROOT/etc/logrotate.d/nginx \\\n    && strip $PKG_ROOT/usr/sbin/nginx* \\\n    && rm -rf /usr/src/tengine-$TENGINE_VERSION\n    # forward request and error logs to docker log collector\n    #&& ln -sf /dev/stdout /var/log/nginx/access.log \\\n    #&& ln -sf /dev/stderr /var/log/nginx/error.log\n\n#ngx_http_module\n#RUN wget https://github.com/opentracing-contrib/nginx-opentracing/releases/download/v0.9.0/linux-amd64-nginx-$NGINX_VERSION-ngx_http_module.so.tgz \\\n#   && tar -zxf linux-amd64-nginx-$NGINX_VERSION-ngx_http_module.so.tgz -C $PKG_ROOT/usr/lib/nginx/modules/\n\n# Jaeger\nRUN \\\n    wget https://github.com/jaegertracing/jaeger-client-cpp/releases/download/v0.4.2/libjaegertracing_plugin.linux_amd64.so -O $PKG_ROOT/usr/local/lib/libjaegertracing_plugin.so \\\n    && chmod +x $PKG_ROOT/usr/local/lib/libjaegertracing_plugin.so\n\n# Zipkin\n#RUN wget -O - https://github.com/rnburn/zipkin-cpp-opentracing/releases/download/v0.5.2/linux-amd64-libzipkin_opentracing_plugin.so.gz | gunzip -c > $PKG_ROOT/usr/local/lib/libzipkin_opentracing_plugin.so\n\n\n#install ruby 2.4\nCOPY rvm-installer ruby_install.sh /\n\nRUN \\\n    gpg --batch --keyserver hkp://keys.gnupg.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3 7D2BAF1CF37B13E2069D6956105BD0E739499BDB \\\n    #&& curl -sSL https://get.rvm.io | bash -s stable \\\n    && bash -x /rvm-installer \\\n    && bash -x /ruby_install.sh\n    #&& gem sources --add https://gems.ruby-china.com/ --remove https://rubygems.org/ \\\n    #&& gem install fpm\n\nCOPY fpm-pack.sh /\n\nRUN \\\n    bash -x /fpm-pack.sh\n\nFROM slpcat/centos:7\nCOPY --from=builder /root/tengine-oss-2.3.2-5.el7.x86_64.rpm /root\nRUN yum install -y /root/tengine-oss-2.3.2-5.el7.x86_64.rpm && rm -rf /var/cache/yum\n\n#COPY nginx.conf /etc/nginx/nginx.conf\n\nEXPOSE 80 443\n\nCMD [\"nginx\", \"-g\", \"daemon off;\"]\n"
}