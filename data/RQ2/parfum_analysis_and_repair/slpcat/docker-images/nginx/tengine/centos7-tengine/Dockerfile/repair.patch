diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/slpcat/docker-images/nginx/tengine/centos7-tengine/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/slpcat/docker-images/nginx/tengine/centos7-tengine/Dockerfile/repaired.Dockerfile
index d302b17..5bda7d5 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/slpcat/docker-images/nginx/tengine/centos7-tengine/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/slpcat/docker-images/nginx/tengine/centos7-tengine/Dockerfile/repaired.Dockerfile
@@ -7,23 +7,23 @@ RUN \
         autogen \
         autoconf \
         bzip2 \
-        #gcc \
+
         GeoIP \
         GeoIP-devel \
         git \
         wget \
-        #gcc-c++ \
+
         gd \
         gd-devel \
         make \
-        #pcre \
-        #pcre-devel \
-        #openssl \
+
+
+
         openssl-devel \
-        #openssl11 \
-        #openssl11-devel \
-        #zlib \
-        #zlib-devel \
+
+
+
+
         which \
         libxslt \
         libxslt-devel \
@@ -31,16 +31,16 @@ RUN \
         libxml2-devel \
         perl-core \
         rpm-build \
-        #libcurl-devel \
-        #protobuf-devel \
-        #protobuf-compiler \
-        #golang \
-        cmake3
+
+
+
+
+        cmake3 && rm -rf /var/cache/yum
 
 ENV GO111MODULE=on \
     GOPROXY=https://goproxy.cn
 
-RUN ln -s /usr/bin/cmake3 /usr/bin/cmake 
+RUN ln -s /usr/bin/cmake3 /usr/bin/cmake
 
 COPY *.sh /
 
@@ -66,7 +66,7 @@ ARG CFLAGS="-O2"
 
 RUN \
     mkdir -p /usr/src \
-    && cd /usr/src
+    && cd /usr/src && rm -rf /usr/src
 
 #jemalloc is a general purpose malloc(3) implementation that emphasizes
 #fragmentation avoidance and scalable concurrency support.
@@ -86,41 +86,41 @@ RUN \
 COPY pcre-$PCRE_VERSION.tar.gz /usr/src
 
 RUN \
- #wget https://ftp.pcre.org/pub/pcre/pcre-8.44.tar.gz
- #wget ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/pcre-8.44.tar.gz \
+
+
  tar -zvxC /usr/src -f /usr/src/pcre-$PCRE_VERSION.tar.gz \
  && cd /usr/src/pcre-$PCRE_VERSION \
- && ./configure --prefix=/usr/local \
-                --enable-pcre16                   \
-                --enable-pcre32                   \
-                --enable-unicode-properties       \
+ && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/usr/local \
+                --enable-pcre16 \
+                --enable-pcre32 \
+                --enable-unicode-properties \
                 --enable-jit \
  && make \
- && make install DESTDIR=$PKG_ROOT
+ && make install DESTDIR=$PKG_ROOT && rm /usr/src/pcre-$PCRE_VERSION.tar.gz
 
 #zlib – Supports header compression. Required by the NGINX Gzip module.
 COPY zlib-$ZLIB_VERSION.tar.gz /usr/src
 
 RUN \
- #wget http://zlib.net/zlib-1.2.11.tar.gz
+
  tar -zxC /usr/src -f /usr/src/zlib-$ZLIB_VERSION.tar.gz \
  && cd /usr/src/zlib-$ZLIB_VERSION \
- && ./configure --prefix=/usr/local \
+ && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/usr/local \
  && make \
- && make install DESTDIR=$PKG_ROOT
+ && make install DESTDIR=$PKG_ROOT && rm /usr/src/zlib-$ZLIB_VERSION.tar.gz
 
 #OpenSSL – Supports the HTTPS protocol. Required by the NGINX SSL module and others.
 COPY openssl-$OPENSSL_VERSION.tar.gz /usr/src
 
 RUN \
- #wget http://www.openssl.org/source/openssl-$OPENSSL_VERSION.tar.gz \
- #wget https://ftp.openssl.org/source/old/1.1.1/openssl-$OPENSSL_VERSION.tar.gz \
+
+
  tar -zxC /usr/src -f /usr/src/openssl-$OPENSSL_VERSION.tar.gz \
  && cd /usr/src/openssl-$OPENSSL_VERSION \
  && ./config --prefix=/usr/local \
  && make \
  && make install DESTDIR=$PKG_ROOT \
- && ldconfig
+ && ldconfig && rm /usr/src/openssl-$OPENSSL_VERSION.tar.gz
 
 #curl
 ARG CURL_VERSION=7.69.1
@@ -131,10 +131,10 @@ RUN \
     cd /usr/src \
     && tar -zxC /usr/src -f /curl-$CURL_VERSION.tar.gz \
     && cd /usr/src/curl-$CURL_VERSION \
-    && ./configure --prefix=/usr/local --with-ssl \
+    && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/usr/local --with-ssl \
     && make \
     && make install \
-    && make install DESTDIR=$PKG_ROOT
+    && make install DESTDIR=$PKG_ROOT && rm /curl-$CURL_VERSION.tar.gz
 
 #Enable requests served by nginx for distributed tracing via The OpenTracing Project.
 #https://github.com/opentracing-contrib/nginx-opentracing#building-from-source
@@ -162,7 +162,7 @@ RUN \
   && make install \
   && make install DESTDIR=$PKG_ROOT \
   && cd $PKG_ROOT/usr/local/lib/ \
-  && ln -s libzipkin_opentracing.so libzipkin_opentracing_plugin.so 
+  && ln -s libzipkin_opentracing.so libzipkin_opentracing_plugin.so
 
 ### Build Jaeger cpp-client
 #RUN \
@@ -266,8 +266,8 @@ ENV CONFIG "\
         "
 COPY  ngx_cache_purge-2.3.tar.gz ngx_slowfs_cache-1.10.tar.gz /tmp/
 
-RUN     \
-        curl -L "https://github.com/alibaba/tengine/archive/$TENGINE_VERSION.tar.gz" -o tengine.tar.gz \
+RUN \
+        curl -f -L "https://github.com/alibaba/tengine/archive/$TENGINE_VERSION.tar.gz" -o tengine.tar.gz \
         && mkdir -p /usr/src \
         && tar -zxC /usr/src -f tengine.tar.gz \
         && rm tengine.tar.gz \
@@ -275,16 +275,16 @@ RUN     \
         && git clone https://github.com/vozlt/nginx-module-vts.git \
         && git clone https://github.com/opentracing-contrib/nginx-opentracing.git \
         && cd /usr/src/tengine-$TENGINE_VERSION \
-        && curl -L "https://github.com/openresty/headers-more-nginx-module/archive/v0.33.tar.gz" -o more.tar.gz \
+        && curl -f -L "https://github.com/openresty/headers-more-nginx-module/archive/v0.33.tar.gz" -o more.tar.gz \
         && tar -zxC /usr/src/tengine-$TENGINE_VERSION/modules -f more.tar.gz \
 	&& rm  more.tar.gz \
         && tar -zxC /usr/src/tengine-$TENGINE_VERSION/modules -f /tmp/ngx_cache_purge-2.3.tar.gz \
         && tar -zxC /usr/src/tengine-$TENGINE_VERSION/modules -f /tmp/ngx_slowfs_cache-1.10.tar.gz \
 	&& ls -l /usr/src/tengine-$TENGINE_VERSION/modules \
-        && ./configure $CONFIG \
+        && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" $CONFIG \
         && make \
         #&& make install \
-        && make install DESTDIR=$PKG_ROOT
+        && make install DESTDIR=$PKG_ROOT && rm -rf /usr/src
 
 #install nginx
 COPY nginx.* /
@@ -324,7 +324,7 @@ RUN \
 COPY rvm-installer ruby_install.sh /
 
 RUN \
-    gpg --keyserver hkp://keys.gnupg.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3 7D2BAF1CF37B13E2069D6956105BD0E739499BDB \
+    gpg --batch --keyserver hkp://keys.gnupg.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3 7D2BAF1CF37B13E2069D6956105BD0E739499BDB \
     #&& curl -sSL https://get.rvm.io | bash -s stable \
     && bash -x /rvm-installer \
     && bash -x /ruby_install.sh
@@ -334,11 +334,11 @@ RUN \
 COPY fpm-pack.sh /
 
 RUN \
-    bash -x /fpm-pack.sh 
+    bash -x /fpm-pack.sh
 
 FROM slpcat/centos:7
 COPY --from=builder /root/tengine-oss-2.3.2-5.el7.x86_64.rpm /root
-RUN yum install -y /root/tengine-oss-2.3.2-5.el7.x86_64.rpm
+RUN yum install -y /root/tengine-oss-2.3.2-5.el7.x86_64.rpm && rm -rf /var/cache/yum
 
 #COPY nginx.conf /etc/nginx/nginx.conf