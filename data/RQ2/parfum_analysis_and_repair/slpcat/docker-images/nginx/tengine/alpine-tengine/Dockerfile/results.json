{
  "startTime": 1674251388564,
  "endTime": 1674251389706,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 103,
        "lineEnd": 103,
        "columnStart": 11,
        "columnEnd": 105
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 108,
        "lineEnd": 108,
        "columnStart": 11,
        "columnEnd": 111
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 112,
        "lineEnd": 112,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 119,
        "lineEnd": 119,
        "columnStart": 11,
        "columnEnd": 30
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 17,
        "lineEnd": 26,
        "columnStart": 7,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.11\n\nMAINTAINER 若虚 <slpcat@qq.com>\n# Container variables\nENV \\\n    TERM=\"xterm\" \\\n    LANG=\"en_US.UTF-8\" \\ \n    LANGUAGE=\"en_US.UTF-8\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    TIMEZONE=\"Asia/Shanghai\"\n\nRUN sed -i 's/dl-cdn.alpinelinux.org/mirrors.aliyun.com/' /etc/apk/repositories\n\n# Set timezone and locales\nRUN set -ex \\\n    && apk update \\\n    && apk upgrade \\\n    && apk add --no-cache \\\n           bash \\\n           tzdata \\\n           vim \\\n           #tini \\\n           su-exec \\\n           gzip \\\n           tar \\\n           wget \\\n           curl \\\n    && echo \"${TIMEZONE}\" > /etc/TZ \\\n    && ln -sf /usr/share/zoneinfo/${TIMEZONE} /etc/localtime\n    # Network fix\n    #&& echo 'hosts: files mdns4_minimal [NOTFOUND=return] dns mdns4' >> /etc/nsswitch.conf\n\n\nENV TENGINE_VERSION 2.3.2\n\n# nginx: https://git.io/vSIyj\n\nRUN rm -rf /var/cache/apk/* && \\\n    rm -rf /tmp/*\n\nENV CONFIG \"\\\n        --prefix=/etc/nginx \\\n        --sbin-path=/usr/sbin/nginx \\\n        --modules-path=/usr/lib/nginx/modules \\\n        --conf-path=/etc/nginx/nginx.conf \\\n        --error-log-path=/var/log/nginx/error.log \\\n        --http-log-path=/var/log/nginx/access.log \\\n        --pid-path=/var/run/nginx.pid \\\n        --lock-path=/var/run/nginx.lock \\\n        --http-client-body-temp-path=/var/cache/nginx/client_temp \\\n        --http-proxy-temp-path=/var/cache/nginx/proxy_temp \\\n        --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp \\\n        --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp \\\n        --http-scgi-temp-path=/var/cache/nginx/scgi_temp \\\n        --user=nginx \\\n        --group=nginx \\\n        --with-http_ssl_module \\\n        --with-http_realip_module \\\n        --with-http_addition_module \\\n        --with-http_sub_module \\\n        --with-http_dav_module \\\n        --with-http_flv_module \\\n        --with-http_mp4_module \\\n        --with-http_gunzip_module \\\n        --with-http_gzip_static_module \\\n        --with-http_random_index_module \\\n        --with-http_secure_link_module \\\n        --with-http_stub_status_module \\\n        --with-http_auth_request_module \\\n        --with-http_xslt_module=dynamic \\\n        --with-http_image_filter_module=dynamic \\\n        --with-http_geoip_module=dynamic \\\n        --with-threads \\\n        --with-stream \\\n        --with-stream_ssl_module \\\n        --with-stream_ssl_preread_module \\\n        --with-stream_realip_module \\\n        --with-stream_geoip_module=dynamic \\\n        --with-http_slice_module \\\n        --with-mail \\\n        --with-mail_ssl_module \\\n        --with-compat \\\n        --with-file-aio \\\n        --with-http_v2_module \\\n        --add-module=modules/ngx_http_upstream_check_module \\\n        --add-module=modules/headers-more-nginx-module-0.33 \\\n\t--add-module=modules/ngx_http_upstream_session_sticky_module \\\n        \"\nRUN addgroup -S nginx \\\n        && adduser -D -S -h /var/cache/nginx -s /sbin/nologin -G nginx nginx \\\n        && addgroup -g 82 -S www-data && adduser -u 82 -D -S -G www-data www-data \\\n        && apk add --no-cache --virtual .build-deps \\\n                gcc \\\n                libc-dev \\\n                make \\\n                openssl-dev \\\n                pcre-dev \\\n                zlib-dev \\\n                linux-headers \\\n                curl \\\n                libxslt-dev \\\n                gd-dev \\\n                geoip-dev \\\n        && curl -f -L \"https://github.com/alibaba/tengine/archive/$TENGINE_VERSION.tar.gz\" -o tengine.tar.gz \\\n        && mkdir -p /usr/src \\\n        && tar -zxC /usr/src -f tengine.tar.gz \\\n        && rm tengine.tar.gz \\\n        && cd /usr/src/tengine-$TENGINE_VERSION \\\n        && curl -f -L \"https://github.com/openresty/headers-more-nginx-module/archive/v0.33.tar.gz\" -o more.tar.gz \\\n        && tar -zxC /usr/src/tengine-$TENGINE_VERSION/modules -f more.tar.gz \\\n\t&& rm  more.tar.gz \\\n\t&& ls -l /usr/src/tengine-$TENGINE_VERSION/modules \\\n\t&& ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" $CONFIG --with-debug \\\n        && make -j$(getconf _NPROCESSORS_ONLN) \\\n        && mv objs/nginx objs/nginx-debug \\\n        && mv objs/ngx_http_xslt_filter_module.so objs/ngx_http_xslt_filter_module-debug.so \\\n        && mv objs/ngx_http_image_filter_module.so objs/ngx_http_image_filter_module-debug.so \\\n        && mv objs/ngx_http_geoip_module.so objs/ngx_http_geoip_module-debug.so \\\n        && mv objs/ngx_stream_geoip_module.so objs/ngx_stream_geoip_module-debug.so \\\n        && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" $CONFIG \\\n        && make -j$(getconf _NPROCESSORS_ONLN) \\\n        && make install \\\n        && rm -rf /etc/nginx/html/ \\\n        && mkdir /etc/nginx/conf.d/ \\\n        && mkdir -p /usr/share/nginx/html/ \\\n        && install -m644 html/index.html /usr/share/nginx/html/ \\\n        && install -m644 html/50x.html /usr/share/nginx/html/ \\\n        && install -m755 objs/nginx-debug /usr/sbin/nginx-debug \\\n        && install -m755 objs/ngx_http_xslt_filter_module-debug.so /usr/lib/nginx/modules/ngx_http_xslt_filter_module-debug.so \\\n        && install -m755 objs/ngx_http_image_filter_module-debug.so /usr/lib/nginx/modules/ngx_http_image_filter_module-debug.so \\\n        && install -m755 objs/ngx_http_geoip_module-debug.so /usr/lib/nginx/modules/ngx_http_geoip_module-debug.so \\\n        && install -m755 objs/ngx_stream_geoip_module-debug.so /usr/lib/nginx/modules/ngx_stream_geoip_module-debug.so \\\n        && ln -s ../../usr/lib/nginx/modules /etc/nginx/modules \\\n        && strip /usr/sbin/nginx* \\\n        && strip /usr/lib/nginx/modules/*.so \\\n        && rm -rf /usr/src/tengine-$NGINX_VERSION \\\n\n        # Bring in gettext so we can get `envsubst`, then throw\n        # the rest away. To do this, we need to install `gettext`\n        # then move `envsubst` out of the way so `gettext` can\n        # be deleted completely, then move `envsubst` back.\n        && apk add --no-cache --virtual .gettext gettext \\\n        && mv /usr/bin/envsubst /tmp/ \\\n\n        && runDeps=\"$( \\\n                scanelf --needed --nobanner --format '%n#p' /usr/sbin/nginx /usr/lib/nginx/modules/*.so /tmp/envsubst \\\n                        | tr ',' '\\n' \\\n                        | sort -u \\\n                        | awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \\\n        )\" \\\n        && apk add --no-cache --virtual .nginx-rundeps $runDeps \\\n        && apk del .build-deps \\\n        && apk del .gettext \\\n        && mv /tmp/envsubst /usr/local/bin/ \\\n\n        # Bring in tzdata so users could set the timezones through the environment\n        # variables\n        && apk add --no-cache tzdata \\\n\n        # forward request and error logs to docker log collector\n        && ln -sf /dev/stdout /var/log/nginx/access.log \\\n        && ln -sf /dev/stderr /var/log/nginx/error.log\n\nCOPY nginx.conf /etc/nginx/nginx.conf\n\nEXPOSE 80 443\n\nSTOPSIGNAL SIGTERM\n\nCMD [\"nginx\", \"-g\", \"daemon off;\"]\n\n"
}