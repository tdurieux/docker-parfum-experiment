{
  "startTime": 1674248762952,
  "endTime": 1674248764548,
  "originalSmells": [
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 253,
        "lineEnd": 253,
        "columnStart": 7,
        "columnEnd": 26
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 291,
        "lineEnd": 294,
        "columnStart": 7,
        "columnEnd": 74
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 289,
        "lineEnd": 289,
        "columnStart": 7,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 338,
        "lineEnd": 338,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 13
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 5,
        "columnEnd": 58
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 333,
        "lineEnd": 333,
        "columnStart": 4,
        "columnEnd": 57
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 338,
        "lineEnd": 338,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 13
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 5,
        "columnEnd": 58
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 333,
        "lineEnd": 333,
        "columnStart": 4,
        "columnEnd": 57
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 338,
        "lineEnd": 338,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 13
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 5,
        "columnEnd": 58
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 333,
        "lineEnd": 333,
        "columnStart": 4,
        "columnEnd": 57
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 338,
        "lineEnd": 338,
        "columnStart": 4,
        "columnEnd": 56
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 5,
        "columnEnd": 82
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 333,
        "lineEnd": 333,
        "columnStart": 4,
        "columnEnd": 81
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 338,
        "lineEnd": 338,
        "columnStart": 4,
        "columnEnd": 83
      }
    }
  ],
  "repairedDockerfile": "FROM slpcat/debian:buster AS builder\nMAINTAINER 若虚 <slpcat@qq.com>\n#https://nginx.org/en/docs/configure.html\n#https://github.com/opentracing-contrib/nginx-opentracing/blob/master/Dockerfile-openresty\n\nRUN \\\n    apt-get install --no-install-recommends -y \\\n        build-essential \\\n        ca-certificates \\\n        zlib1g-dev \\\n        libpcre3 \\\n        libpcre3-dev \\\n        libssl-dev \\\n        autoconf \\\n        bzip2 \\\n        gcc \\\n        libgeoip-dev \\\n        libgd-dev \\\n        git \\\n        wget \\\n        make \\\n        libjemalloc-dev \\\n        liblua5.1-0-dev \\\n        openssl \\\n        libcurl4-openssl-dev \\\n        libz-dev \\\n        libreadline-dev \\\n        libxslt-dev \\\n        libxml2 \\\n        libxml2-dev \\\n        curl \\\n\n\n\n        cmake && rm -rf /var/lib/apt/lists/*;\n\nENV GO111MODULE=on \\\n    GOPROXY=https://goproxy.cn\n\nRUN \\\n     apt-get -y --no-install-recommends install ruby ruby-dev rubygems-integration \\\n     && gem sources --add https://gems.ruby-china.com/ --remove https://rubygems.org/ \\\n     && gem install fpm && rm -rf /var/lib/apt/lists/*;\n\nCOPY *.sh /\n\nRUN \\\n    bash before-install.sh\n\nARG RESTY_VERSION=1.15.8.3\nARG NGINX_VERSION=1.15.8\nARG OPENTRACING_CPP_VERSION=v1.5.1\nARG ZIPKIN_CPP_VERSION=v0.5.2\n#ARG LIGHTSTEP_VERSION=v0.8.1\nARG JAEGER_CPP_VERSION=v0.4.2\nARG GRPC_VERSION=v1.22.x\n#ARG DATADOG_VERSION=v1.1.2\nARG PKG_ROOT=/fpm_install\n#ARG CC=/usr/local/bin/gcc\n#ARG CXX=/usr/local/bin/g++\nARG CFLAGS=\"-O2\"\n\nRUN \\\n    mkdir -p /usr/src \\\n    && cd /usr/src && rm -rf /usr/src\n\n#Enable requests served by nginx for distributed tracing via The OpenTracing Project.\n#https://github.com/opentracing-contrib/nginx-opentracing#building-from-source\n\n### Build opentracing-cpp\nRUN \\\n  cd /usr/src \\\n  && git clone -b $OPENTRACING_CPP_VERSION https://github.com/opentracing/opentracing-cpp.git \\\n  && cd opentracing-cpp \\\n  && mkdir .build && cd .build \\\n  && cmake -DCMAKE_BUILD_TYPE=Release \\\n           -DBUILD_TESTING=OFF .. \\\n  && make \\\n  && make install \\\n  && make install DESTDIR=$PKG_ROOT\n\n### Build bridge tracer\nARG LUA_BRIDGE_TRACER_VERSION=\"937059912311da3b4f45f46cd7d9a2942a248b2d\"\n\nRUN \\\n  cd /usr/src \\\n  && git clone https://github.com/opentracing/lua-bridge-tracer.git \\\n  && cd lua-bridge-tracer \\\n  && git checkout ${LUA_BRIDGE_TRACER_VERSION} \\\n  && mkdir .build && cd .build \\\n  && cmake -DCMAKE_BUILD_TYPE=Release \\\n            .. \\\n  && make && make install \\\n  && make install DESTDIR=$PKG_ROOT\n\n### Build zipkin-cpp-opentracing\nRUN \\\n  cd /usr/src \\\n  && git clone -b $ZIPKIN_CPP_VERSION https://github.com/rnburn/zipkin-cpp-opentracing.git \\\n  && cd zipkin-cpp-opentracing \\\n  && mkdir .build && cd .build \\\n  && cmake -DBUILD_SHARED_LIBS=1 -DCMAKE_BUILD_TYPE=Release -DBUILD_TESTING=OFF .. \\\n  && make \\\n  && make install \\\n  && make install DESTDIR=$PKG_ROOT \\\n  && cd $PKG_ROOT/usr/local/lib/ && ln -s libzipkin_opentracing.so libzipkin_opentracing_plugin.so\n\n### Build Jaeger cpp-client\n#RUN \\\n#  cd /usr/src \\\n#  && git clone -b $JAEGER_CPP_VERSION https://github.com/jaegertracing/cpp-client.git jaeger-cpp-client \\\n#  && cd jaeger-cpp-client \\\n#  && mkdir .build && cd .build \\\n#  && cmake -DCMAKE_BUILD_TYPE=Release \\\n#           -DBUILD_TESTING=OFF \\\n#           -DJAEGERTRACING_WITH_YAML_CPP=ON .. \\\n#  && make \\\n#  && make install \\\n#  && make install DESTDIR=$PKG_ROOT \\\n#  && export HUNTER_INSTALL_DIR=$(cat _3rdParty/Hunter/install-root-dir) \\\n#  && cd $PKG_ROOT/usr/local/lib/ && ln -s libjaegertracing.so libjaegertracing_plugin.so\n\n### Build gRPC\n#COPY gpc-$GRPC_VERSION.tar.gz /usr/src/\n\n#RUN \\\n#  cd \"/usr/src\" \\\n#  #&& git clone -b $GRPC_VERSION https://github.com/grpc/grpc \\\n#  && tar -zxC /usr/src -f /usr/src/gpc-$GRPC_VERSION.tar.gz \\\n#  && cd grpc-$GRPC_VERSION \\\n#  #&& git submodule update --init \\\n#  && make HAS_SYSTEM_PROTOBUF=false && make install \\\n#  && cd third_party/protobuf \\\n#  && make install DESTDIR=$PKG_ROOT\n\n### Build nginx-opentracing modules\nENV NGINX_OPENTRACING_VERSION=v0.9.0\n\nRUN \\\n  cd \"/usr/src\" \\\n  && git clone -b $NGINX_OPENTRACING_VERSION https://github.com/opentracing-contrib/nginx-opentracing\n\n  #&& NGINX_VERSION=`nginx -v 2>&1` && NGINX_VERSION=${NGINX_VERSION#*nginx/} \\\n  #&& echo \"deb-src http://nginx.org/packages/mainline/debian/ stretch nginx\" >> /etc/apt/sources.list \\\n  #&& apt-get update \\\n  #&& apt-get build-dep -y nginx \\\n  #&& wget -O nginx-release-${NGINX_VERSION}.tar.gz https://github.com/nginx/nginx/archive/release-${NGINX_VERSION}.tar.gz \\\n  #&& tar zxf nginx-release-${NGINX_VERSION}.tar.gz \\\n  #&& auto/configure \\\n\n  #      --with-compat \\\n  #      --add-dynamic-module=/src/opentracing \\\n  #      --with-cc-opt=\"-I$HUNTER_INSTALL_DIR/include\" \\\n  #      --with-ld-opt=\"-L$HUNTER_INSTALL_DIR/lib\" \\\n  #      --with-debug \\\n  #&& make modules \\\n  #&& cp objs/ngx_http_opentracing_module.so $NGINX_MODULES_PATH/ \\\n\t# if we have leftovers from building, let's purge them (including extra, unnecessary build deps)\n\n\n#SkyWalking Nginx Agent provides the native tracing capability for Nginx powered by Nginx LUA module.\n#https://github.com/apache/skywalking-nginx-lua\n\n\n\n#compile nginx\nARG CONFIG=\"\\\n        --user=nginx \\\n        --group=nginx \\\n        #--prefix=/etc/nginx \\\n        #--sbin-path=/usr/sbin/nginx \\\n        #--conf-path=/etc/nginx/nginx.conf \\\n        #--lock-path=/var/lock/nginx.lock \\\n        #--pid-path=/var/run/nginx.pid \\\n        #--error-log-path=/var/log/nginx/error.log \\\n        #--http-log-path=/var/log/nginx/access.log \\\n        #--http-client-body-temp-path=/var/cache/nginx/client_temp \\\n        #--http-proxy-temp-path=/var/cache/nginx/proxy_temp \\\n        #--http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp \\\n        #--http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp \\\n        #--http-scgi-temp-path=/var/cache/nginx/scgi_temp \\\n        --with-threads \\\n        #--with-md5=/usr/include/openssl \\\n        #--with-pcre=../pcre-$PCRE_VERSION \\\n        #--with-zlib=../zlib-$ZLIB_VERSION \\\n        #--with-openssl=../openssl-$OPENSSL_VERSION \\\n        --with-pcre \\\n        #--with-zlib \\\n        #--with-openssl \\\n        --with-http_ssl_module \\\n        --with-http_gzip_static_module \\\n        --with-http_gunzip_module \\\n        #--with-sha1-asm \\\n        #--with-md5-asm \\\n        --with-http_auth_request_module \\\n        --with-http_image_filter_module \\\n        --with-http_addition_module \\\n        --with-http_dav_module \\\n        --with-http_realip_module \\\n        --with-http_v2_module \\\n        --with-http_stub_status_module \\\n        --with-http_sub_module \\\n        --with-http_xslt_module \\\n        --with-http_flv_module \\\n        --with-http_mp4_module \\\n        --with-http_degradation_module \\\n        #--with-http_upstream_check_module \\\n        #--with-http_upstream_consistent_hash_module \\\n        #--with-http_upstream_ip_hash_module=shared \\\n        #--with-http_upstream_least_conn_module=shared \\\n        #--with-http_upstream_session_sticky_module=shared \\\n        #--with-http_map_module=shared \\\n        #--with-http_user_agent_module=shared \\\n        #--with-http_split_clients_module=shared \\\n        #--with-http_access_module=shared \\\n        #--with-http_random_index_module \\\n        #--with-http_secure_link_module \\\n        #--with-http_auth_request_module \\\n        #--with-ipv6 \\\n        --with-file-aio \\\n        #--with-mail \\\n        #--with-mail_ssl_module \\\n        --with-pcre \\\n        --with-pcre-jit \\\n        #--with-jemalloc \\\n        --add-module=/usr/src/nginx-module-vts \\\n        #--add-module=/usr/src/nginx-module-sts \\\n        #--add-module=/usr/src/nginx-module-stream-sts \\\n        --add-dynamic-module=/usr/src/nginx-opentracing/opentracing \\\n        #--with-compat \\\n        --with-luajit \\\n        #--without-http_redis2_module \\\n        --with-http_iconv_module \\\n        #--with-http_postgres_module \\\n        --with-cc-opt=\"-I$HUNTER_INSTALL_DIR/include\" \\\n        --with-ld-opt=\"-L$HUNTER_INSTALL_DIR/lib\" \\\n        --with-ld-opt=\"-ljemalloc\" \\\n        \"\n\n#Nginx stream server traffic status module\n#https://github.com/vozlt/nginx-module-sts\n#https://github.com/vozlt/nginx-module-stream-sts\n\nRUN \\\n    wget \"https://openresty.org/download/openresty-${RESTY_VERSION}.tar.gz\" -O openresty.tar.gz \\\n    && tar -zxC /usr/src -f openresty.tar.gz \\\n    && rm openresty.tar.gz \\\n    && cd /usr/src \\\n    && git clone https://github.com/vozlt/nginx-module-vts.git \\\n    && cd /usr/src/openresty-${RESTY_VERSION} \\\n    #&& ./configure $CONFIG --with-debug \\\n    #&& make \\\n    #&& mv objs/nginx objs/nginx-debug \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" $CONFIG \\\n    && make \\\n    && make install \\\n    && make install DESTDIR=$PKG_ROOT\n\n#install nginx\nCOPY nginx.* /\n\nRUN \\\n    cd /usr/src/openresty-${RESTY_VERSION} \\\n    #&& rm -rf /usr/nginx-module-vts/ \\\n    #&& rm -rf /nginx-upsync-module \\\n    #&& rm -rf $PKG_ROOT/etc/nginx/html/ \\\n    #&& mkdir $PKG_ROOT/etc/nginx/conf.d/ \\\n    #&& mkdir -p $PKG_ROOT/usr/share/nginx/html/ \\\n    #&& install -m644 html/index.html $PKG_ROOT/usr/share/nginx/html/ \\\n    #&& install -m644 html/50x.html $PKG_ROOT/usr/share/nginx/html/ \\\n    #&& install -m755 objs/nginx-debug $PKG_ROOT/usr/sbin/nginx-debug \\\n    #&& install -m644 -D /nginx.service $PKG_ROOT/usr/lib/systemd/system/nginx.service \\\n    #&& install -m644 -D /nginx.logrotate $PKG_ROOT/etc/logrotate.d/nginx \\\n    && mkdir -p $PKG_ROOT/etc/ld.so.conf.d/ && echo \"/usr/local/lib\" > $PKG_ROOT/etc/ld.so.conf.d/usr-local-x86_64.conf \\\n    #&& strip $PKG_ROOT/usr/sbin/nginx* \\\n    && rm -rf /usr/src/openresty-${RESTY_VERSION}\n    # forward request and error logs to docker log collector\n    #&& ln -sf /dev/stdout /var/log/nginx/access.log \\\n    #&& ln -sf /dev/stderr /var/log/nginx/error.log\n\n#luarocks\nARG RESTY_LUAROCKS_VERSION=\"3.3.1\"\nCOPY luarocks-3.3.1.tar.gz /\nRUN \\\n    export PATH=\"$PATH:/usr/local/openresty/bin\" \\\n    && cd /usr/src \\\n    #&& wget https://luarocks.org/releases/luarocks-3.3.1.tar.gz \\\n    #&& wget https://luarocks.github.io/luarocks/releases/luarocks-3.3.1.tar.gz \\\n    #&& wget https://github.com/luarocks/luarocks/archive/v3.3.1.tar.gz \\\n    && tar -zxC /usr/src -f /luarocks-3.3.1.tar.gz \\\n    && cd luarocks-3.3.1 \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/local \\\n         --lua-suffix=jit \\\n         --with-lua=/usr/local/openresty/luajit \\\n         --with-lua-include=/usr/local/openresty/luajit/include/luajit-2.1 \\\n    && make \\\n    && make install \\\n    && make install DESTDIR=$PKG_ROOT && rm /luarocks-3.3.1.tar.gz\n\n#OpenTracing\n#RUN wget https://github.com/opentracing-contrib/nginx-opentracing/releases/download/$NGINX_OPENTRACING_VERSION/linux-amd64-nginx-$NGINX_VERSION-ngx_http_module.so.tgz \\\n#  && tar -xzvC $PKG_ROOT/etc/nginx/modules -f linux-amd64-nginx-$NGINX_VERSION-ngx_http_module.so.tgz\n\n# Jaeger\nRUN wget https://github.com/jaegertracing/jaeger-client-cpp/releases/download/v0.4.2/libjaegertracing_plugin.linux_amd64.so -O $PKG_ROOT/usr/local/lib/libjaegertracing_plugin.so \\\n    && chmod +x $PKG_ROOT/usr/local/lib/libjaegertracing_plugin.so\n\n# Zipkin\n#RUN wget -O - https://github.com/rnburn/zipkin-cpp-opentracing/releases/download/v0.5.2/linux-amd64-libzipkin_opentracing_plugin.so.gz | gunzip -c > $PKG_ROOT/usr/local/lib/libzipkin_opentracing_plugin.so\n\nRUN \\\n    fpm -f --verbose \\\n    -n openresty-repack \\ \n    -s dir \\\n    #--iteration 1.el8 \\\n    -v \"${RESTY_VERSION}\" \\\n    -t deb \\\n    -m openresty-inc \\\n    --vendor openresty.org \\\n    -a native \\\n    -p /root/ \\\n    -d 'libjemalloc2,libxml2,libxslt1.1,libgd3' \\\n    -C $PKG_ROOT \\\n    --description 'Scalable Web Platform by Extending NGINX with Lua' \\\n    --conflicts 'nginx,tengine,luarocks,kong' \\\n    --url 'https://openresty.org/' \\\n    --before-install /before-install.sh \\\n    #--after-install /after-install.sh \\\n    --after-remove /after-remove.sh\n    #--config-files /etc/nginx/nginx.conf\n\nFROM slpcat/debian:buster\nCOPY --from=builder /root/openresty-repack_1.15.8.3_amd64.deb /root\nRUN apt install --no-install-recommends -y libjemalloc2 libxml2 libxslt1.1 libgd3 && rm -rf /var/lib/apt/lists/*;\n\nRUN dpkg -i /root/openresty-repack_1.15.8.3_amd64.deb\n\n#install kong\nRUN apt-get install -y --no-install-recommends gcc libssl-dev git libyaml-dev unzip && rm -rf /var/lib/apt/lists/*;\n\nRUN luarocks install kong\n\n#wget kong\n#copy kong config\n\n#COPY nginx.conf /etc/nginx/nginx.conf\n\nEXPOSE 80 443\n\nCMD [\"nginx\", \"-g\", \"daemon off;\"]\n"
}