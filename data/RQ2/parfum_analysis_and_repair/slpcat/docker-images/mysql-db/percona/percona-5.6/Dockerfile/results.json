{
  "startTime": 1674216544858,
  "endTime": 1674216546432,
  "originalSmells": [
    {
      "rule": "rmRecursiveAfterMktempD",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 24,
        "columnEnd": 33
      }
    },
    {
      "rule": "rmRecursiveAfterMktempD",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 21,
        "columnEnd": 30
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 99
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 74,
        "lineEnd": 74,
        "columnStart": 1,
        "columnEnd": 61
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 2,
        "columnEnd": 64
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 7,
        "columnEnd": 91
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 96,
        "lineEnd": 97,
        "columnStart": 4,
        "columnEnd": 55
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 7,
        "columnEnd": 91
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#upstream https://github.com/docker-library/percona/blob/master/5.6/Dockerfile\n# vim:set ft=dockerfile:\nFROM debian:jessie\nMAINTAINER 若虚 <slpcat@qq.com>\n\n# Container variables\nENV \\\n    TERM=\"xterm\" \\\n    LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US:en\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    TIMEZONE=\"Asia/Shanghai\"\n\nRUN echo 'deb http://mirrors.aliyun.com/debian jessie-backports main' > /etc/apt/sources.list.d/backports.list \\\n    && sed -i 's/deb.debian.org/mirrors.aliyun.com/' /etc/apt/sources.list \\\n    && sed -i 's/security.debian.org/mirrors.aliyun.com\\/debian-security/' /etc/apt/sources.list\n\n# Set timezone and locales\nRUN \\\n    echo \"${TIMEZONE}\" > /etc/timezone \\\n    && echo \"$LANG UTF-8\" > /etc/locale.gen \\\n    && apt-get update -q \\\n    && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -yq apt-utils dialog vim-tiny locales \\\n    && ln -sf /usr/share/zoneinfo/${TIMEZONE} /etc/localtime \\\n    && update-locale LANG=$LANG \\\n    && locale-gen $LANG \\\n    && DEBIAN_FRONTEND=noninteractive dpkg-reconfigure locales && rm -rf /var/lib/apt/lists/*;\n\n# Install required packages\nRUN \\\n    apt-get dist-upgrade -y\n\n# add our user and group first to make sure their IDs get assigned consistently, regardless of whatever dependencies get added\nRUN groupadd -r mysql && useradd -r -g mysql mysql\n\n# add gosu for easy step-down from root\nENV GOSU_VERSION 1.7\nRUN set -x \\\n\t&& apt-get update && apt-get install -y --no-install-recommends ca-certificates wget && rm -rf /var/lib/apt/lists/* \\\n\t&& wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)\" \\\n\t&& wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc\" \\\n\t&& export GNUPGHOME=\"$(mktemp -d)\" \\\n\t&& gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 \\\n\t&& gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \\\n\t&& rm -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc \\\n\t&& chmod +x /usr/local/bin/gosu \\\n\t&& gosu nobody true \\\n\t&& apt-get purge -y --auto-remove ca-certificates wget && rm -rf -d\n\nRUN mkdir /docker-entrypoint-initdb.d\n\n# install \"pwgen\" for randomizing passwords\n# install \"apt-transport-https\" for Percona's repo (switched to https-only)\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n\t\tapt-transport-https ca-certificates \\\n\t\tpwgen \\\n\t&& rm -rf /var/lib/apt/lists/*\n\nENV GPG_KEYS \\\n# pub   1024D/CD2EFD2A 2009-12-15\n#       Key fingerprint = 430B DF5C 56E7 C94E 848E  E60C 1C4C BDCD CD2E FD2A\n# uid                  Percona MySQL Development Team <mysql-dev@percona.com>\n# sub   2048g/2D607DAF 2009-12-15\n\t430BDF5C56E7C94E848EE60C1C4CBDCDCD2EFD2A \\\n# pub   4096R/8507EFA5 2016-06-30\n#       Key fingerprint = 4D1B B29D 63D9 8E42 2B21  13B1 9334 A25F 8507 EFA5\n# uid                  Percona MySQL Development Team (Packaging key) <mysql-dev@percona.com>\n# sub   4096R/4CAC6D72 2016-06-30\n\t4D1BB29D63D98E422B2113B19334A25F8507EFA5\nRUN set -ex; \\\n\texport GNUPGHOME=\"$(mktemp -d)\"; rm -rf -d \\\n\tfor key in $GPG_KEYS; do \\\n\n\t\tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\"; \\\n\tdone \\\n\t; \\\n\tgpg --batch --export $GPG_KEYS > /etc/apt/trusted.gpg.d/percona.gpg; \\\n\trm -r \"$GNUPGHOME\"; \\\n\tapt-key list\n\nRUN echo 'deb https://repo.percona.com/apt jessie main' > /etc/apt/sources.list.d/percona.list\n\nENV PERCONA_MAJOR 5.6\nENV PERCONA_VERSION 5.6.40-84.0-1.jessie\n\n# the \"/var/lib/mysql\" stuff here is because the mysql-server postinst doesn't have an explicit way to disable the mysql_install_db codepath besides having a database already \"configured\" (ie, stuff in /var/lib/mysql/mysql)\n# also, we set debconf keys to make APT a little quieter\nRUN { \\\n\t\tfor key in \\\n\t\t\tpercona-server-server/root_password \\\n\t\t\tpercona-server-server/root_password_again \\\n\t\t\t\"percona-server-server-$PERCONA_MAJOR/root-pass\" \\\n\t\t\t\"percona-server-server-$PERCONA_MAJOR/re-root-pass\" \\\n\t\t; do \\\n\t\t\techo \"percona-server-server-$PERCONA_MAJOR\" \"$key\" password 'unused'; \\\n\t\tdone; \\\n\t} | debconf-set-selections \\\n\t&& apt-get update \\\n\t&& apt-get install --no-install-recommends -y \\\n\t\tpercona-server-server-$PERCONA_MAJOR=$PERCONA_VERSION \\\n\t&& rm -rf /var/lib/apt/lists/* \\\n# comment out any \"user\" entires in the MySQL config (\"docker-entrypoint.sh\" or \"--user\" will handle user switching)\n\t&& sed -ri 's/^user\\s/#&/' /etc/mysql/my.cnf \\\n# purge and re-create /var/lib/mysql with appropriate ownership\n\t&& rm -rf /var/lib/mysql && mkdir -p /var/lib/mysql /var/run/mysqld \\\n\t&& chown -R mysql:mysql /var/lib/mysql /var/run/mysqld \\\n# ensure that /var/run/mysqld (used for socket and lock files) is writable regardless of the UID our mysqld instance ends up having at runtime\n\t&& chmod 777 /var/run/mysqld \\\n# comment out a few problematic configuration values\n\t&& find /etc/mysql/ -name '*.cnf' -print0 \\\n\t\t| xargs -0 grep -lZE '^(bind-address|log)' \\\n\t\t| xargs -rt -0 sed -Ei 's/^(bind-address|log)/#&/' \\\n# don't reverse lookup hostnames, they are usually another container\n\t&& echo '[mysqld]\\nskip-host-cache\\nskip-name-resolve' > /etc/mysql/conf.d/docker.cnf\n\nVOLUME [\"/var/lib/mysql\", \"/var/log/mysql\"]\n\nCOPY docker-entrypoint.sh /usr/local/bin/\nRUN ln -s usr/local/bin/docker-entrypoint.sh / # backwards compat\nENTRYPOINT [\"docker-entrypoint.sh\"]\n\nEXPOSE 3306\nCMD [\"mysqld\"]\n"
}