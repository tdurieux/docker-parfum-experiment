{
  "startTime": 1674220066586,
  "endTime": 1674220068234,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 100
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 110
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 162
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 78,
        "lineEnd": 79,
        "columnStart": 6,
        "columnEnd": 31
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 59
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "################################################################################\n# This Dockerfile was generated from the template at distribution/src/docker/Dockerfile\n#\n# Beginning of multi stage Dockerfile\n################################################################################\n\n################################################################################\n# Build stage 0 `builder`:\n# Extract Elasticsearch artifact\n################################################################################\n\nFROM centos:8 AS builder\n\n# `tini` is a tiny but valid init for containers. This is used to cleanly\n# control how ES and any child processes are shut down.\n#\n# The tini GitHub page gives instructions for verifying the binary using\n# gpg, but the keyservers are slow to return the key and this can fail the\n# build. Instead, we check the binary against the published checksum.\nRUN set -eux ; \\\n    tini_bin=\"\" ; \\\n    case \"$(arch)\" in \\\n        aarch64) tini_bin='tini-arm64' ;; \\\n        x86_64)  tini_bin='tini-amd64' ;; \\\n        *) echo >&2 ; echo >&2 \"Unsupported architecture $(arch)\" ; echo >&2 ; exit 1 ;; \\\n    esac ; \\\n    curl -f --retry 10 -S -L -O https://github.com/krallin/tini/releases/download/v0.19.0/${tini_bin}; \\\n    curl -f --retry 10 -S -L -O https://github.com/krallin/tini/releases/download/v0.19.0/${tini_bin}.sha256sum; \\\n    sha256sum -c ${tini_bin}.sha256sum ; \\\n    rm ${tini_bin}.sha256sum ; \\\n    mv ${tini_bin} /bin/tini ; \\\n    chmod +x /bin/tini\n\nRUN mkdir /usr/share/elasticsearch\nWORKDIR /usr/share/elasticsearch\n\nRUN curl -f --retry 10 -S -L --output /opt/elasticsearch.tar.gz https://artifacts-no-kpi.elastic.co/downloads/elasticsearch/elasticsearch-7.14.0-linux-$(arch).tar.gz\n\nRUN tar -zxf /opt/elasticsearch.tar.gz --strip-components=1 && rm /opt/elasticsearch.tar.gz\n\n# The distribution includes a `config` directory, no need to create it\nCOPY config/elasticsearch.yml config/\nCOPY config/log4j2.properties config/log4j2.docker.properties\n\n#  1. Configure the distribution for Docker\n#  2. Ensure directories are created. Most already are, but make sure\n#  3. Apply correct permissions\n#  4. Move the distribution's default logging config aside\n#  5. Generate a docker logging config, to be used by default\n#  6. Apply more correct permissions\n#  7. The JDK's directories' permissions don't allow `java` to be executed under a different\n#     group to the default. Fix this.\n#  8. Remove write permissions from all files under `lib`, `bin`, `jdk` and `modules`\n#  9. Ensure that there are no files with setuid or setgid, in order to mitigate \"stackclash\" attacks.\n# 10. Ensure all files are world-readable by default. It should be possible to\n#     examine the contents of the image under any UID:GID\nRUN sed -i -e 's/ES_DISTRIBUTION_TYPE=tar/ES_DISTRIBUTION_TYPE=docker/' bin/elasticsearch-env && \\\n    mkdir -p config/jvm.options.d data logs plugins && \\\n    chmod 0775 config config/jvm.options.d data logs plugins && \\\n    mv config/log4j2.properties config/log4j2.file.properties && \\\n    mv config/log4j2.docker.properties config/log4j2.properties && \\\n    chmod 0660 config/elasticsearch.yml config/log4j2*.properties && \\\n    find ./jdk -type d -exec chmod 0755 {} + && \\\n    chmod -R a-w lib bin jdk modules && \\\n    find . -xdev -perm -4000 -exec chmod ug-s {} + && \\\n    find . -type f -exec chmod o+r {} +\n\n################################################################################\n# Build stage 1 (the actual Elasticsearch image):\n#\n# Copy elasticsearch from stage 0\n# Add entrypoint\n################################################################################\n\nFROM centos:8\n\nRUN for iter in {1..10}; do \\\n      yum update --setopt=tsflags=nodocs -y && \\\n      yum install --setopt=tsflags=nodocs -y \\\n      nc shadow-utils zip unzip  && \\\n      yum clean all && \\\n      exit_code=0 && break || \\\n        exit_code=$? && echo \"yum error: retry $iter in 10s\" && sleep 10; \\\n    done; rm -rf /var/cache/yum \\\n    exit $exit_code\n\nRUN groupadd -g 1000 elasticsearch && \\\n    adduser -u 1000 -g 1000 -G 0 -d /usr/share/elasticsearch elasticsearch && \\\n    chmod 0775 /usr/share/elasticsearch && \\\n    chown -R 1000:0 /usr/share/elasticsearch\n\nENV ELASTIC_CONTAINER true\n\nWORKDIR /usr/share/elasticsearch\nCOPY --from=builder --chown=1000:0 /usr/share/elasticsearch /usr/share/elasticsearch\nCOPY --from=builder --chown=0:0 /bin/tini /bin/tini\n\nENV PATH /usr/share/elasticsearch/bin:$PATH\n\nCOPY bin/docker-entrypoint.sh /usr/local/bin/docker-entrypoint.sh\n\n# 1. Sync the user and group permissions of /etc/passwd\n# 2. Set correct permissions of the entrypoint\n# 3. Ensure that there are no files with setuid or setgid, in order to mitigate \"stackclash\" attacks.\n#    We've already run this in previous layers so it ought to be a no-op.\n# 4. Replace OpenJDK's built-in CA certificate keystore with the one from the OS\n#    vendor. The latter is superior in several ways.\n#    REF: https://github.com/elastic/elasticsearch-docker/issues/171\nRUN chmod g=u /etc/passwd && \\\n    chmod 0775 /usr/local/bin/docker-entrypoint.sh && \\\n    find / -xdev -perm -4000 -exec chmod ug-s {} + && \\\n    ln -sf /etc/pki/ca-trust/extracted/java/cacerts /usr/share/elasticsearch/jdk/lib/security/cacerts\n\nEXPOSE 9200 9300\n\nLABEL org.label-schema.build-date=\"2021-07-29T20:49:32.864135063Z\" \\\n  org.label-schema.license=\"Elastic-License-2.0\" \\\n  org.label-schema.name=\"Elasticsearch\" \\\n  org.label-schema.schema-version=\"1.0\" \\\n  org.label-schema.url=\"https://www.elastic.co/products/elasticsearch\" \\\n  org.label-schema.usage=\"https://www.elastic.co/guide/en/elasticsearch/reference/index.html\" \\\n  org.label-schema.vcs-ref=\"dd5a0a2acaa2045ff9624f3729fc8a6f40835aa1\" \\\n  org.label-schema.vcs-url=\"https://github.com/elastic/elasticsearch\" \\\n  org.label-schema.vendor=\"Elastic\" \\\n  org.label-schema.version=\"7.14.0\" \\\n  org.opencontainers.image.created=\"2021-07-29T20:49:32.864135063Z\" \\\n  org.opencontainers.image.documentation=\"https://www.elastic.co/guide/en/elasticsearch/reference/index.html\" \\\n  org.opencontainers.image.licenses=\"Elastic-License-2.0\" \\\n  org.opencontainers.image.revision=\"dd5a0a2acaa2045ff9624f3729fc8a6f40835aa1\" \\\n  org.opencontainers.image.source=\"https://github.com/elastic/elasticsearch\" \\\n  org.opencontainers.image.title=\"Elasticsearch\" \\\n  org.opencontainers.image.url=\"https://www.elastic.co/products/elasticsearch\" \\\n  org.opencontainers.image.vendor=\"Elastic\" \\\n  org.opencontainers.image.version=\"7.14.0\"\n\nENTRYPOINT [\"/bin/tini\", \"--\", \"/usr/local/bin/docker-entrypoint.sh\"]\n# Dummy overridable parameter parsed by entrypoint\nCMD [\"eswrapper\"]\n\n################################################################################\n# End of multi-stage Dockerfile\n################################################################################\n\n#RUN bin/elasticsearch-plugin install --batch repository-gcs\n"
}