{
  "startTime": 1674251618867,
  "endTime": 1674251619496,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 53
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:14-alpine AS js\nWORKDIR /usr/src/app\nCOPY ./npm/app .\nRUN npm install && npm cache clean --force;\n\nFROM golang:alpine AS builder\nRUN apk update\nRUN apk upgrade\nRUN apk add --no-cache --update gcc >=9.3.0 g++ >=9.3.0 alpine-sdk\n\nWORKDIR /go/src/app/\n\nCOPY . .\nCOPY --from=js /usr/src/app ./npm/app\n# Fetch dependencies.\nRUN go get -d -v ./... && go get github.com/go-bindata/go-bindata/go-bindata\nRUN BUILD_DIR=$(pwd); GOZSTD_VER=$(cat go.sum | fgrep github.com/valyala/gozstd | awk '{print $2}' | head -n 1); go get -d github.com/valyala/gozstd@${GOZSTD_VER}; cd ${GOPATH}/pkg/mod/github.com/valyala/gozstd@${GOZSTD_VER}; if [[ ! -f _rebuilt ]]; then chmod -R +w .; make -j8 clean; make -j8 libzstd.a; touch _rebuilt; fi; cd ${BUILD_DIR}\nRUN go generate ./...\nRUN go build -o stateexplorer ./cmd/stateexplorer\n\nFROM alpine\n# Copy our static executable.\nCOPY --from=builder /go/src/app/stateexplorer /stateexplorer\nENV REALIZED_CACHE_SIZE 32768\nENV BLOCK_CACHE_SIZE 32768\nENTRYPOINT [\"/stateexplorer\"]\n"
}