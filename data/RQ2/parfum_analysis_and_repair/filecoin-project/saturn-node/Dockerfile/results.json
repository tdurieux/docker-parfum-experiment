{
  "startTime": 1674221125140,
  "endTime": 1674221126019,
  "originalSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 63
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 63
      }
    }
  ],
  "repairedDockerfile": "# pull the Node.js Docker image\nFROM nginx:mainline\n\n# DEPENDENCIES\nRUN curl -fsSL https://deb.nodesource.com/setup_16.x | bash -\n# RUN curl -fsSL https://install.speedtest.net/app/cli/install.deb.sh | bash -\nRUN curl -fsSL https://packagecloud.io/install/repositories/ookla/speedtest-cli/script.deb.sh | bash -\nRUN apt-get install --no-install-recommends -y nodejs speedtest && rm -rf /var/lib/apt/lists/*;\n\n# create the directory inside the container\nWORKDIR /usr/src/app\n# copy the package.json files from local machine to the workdir in container\nCOPY container/shim/package*.json ./\n# run npm install in our local machine\nRUN npm ci --production --ignore-scripts\n\n# copy the generated modules and all other files to the container\nCOPY container/shim ./\nCOPY container/nginx /etc/nginx/\nRUN rm /etc/nginx/conf.d/default.conf\n\nARG RUN_NUMBER=\"9999\"\nARG GIT_COMMIT_HASH=\"dev\"\nARG SATURN_NETWORK=\"local\"\nARG ORCHESTRATOR_URL\n\nENV NODE_VERSION=\"${RUN_NUMBER}_${GIT_COMMIT_HASH}\"\nENV ORCHESTRATOR_URL=$ORCHESTRATOR_URL\nENV SATURN_NETWORK=$SATURN_NETWORK\nENV DEBUG node*\n\n# the command that starts our app\nCMD [\"./start.sh\"]"
}