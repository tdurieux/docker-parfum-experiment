diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/pinellolab/grafimo/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/pinellolab/grafimo/Dockerfile/repaired.Dockerfile
index 0a4bb1d..7cb7ef1 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/pinellolab/grafimo/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/pinellolab/grafimo/Dockerfile/repaired.Dockerfile
@@ -8,54 +8,54 @@ RUN apt-get update
 RUN apt-get upgrade -y
 
 # make sure having gcc, make and git
-RUN apt-get install build-essential -y
-RUN apt-get install make -y
-RUN apt-get install sudo -y
-RUN apt-get install git -y
+RUN apt-get install --no-install-recommends build-essential -y && rm -rf /var/lib/apt/lists/*;
+RUN apt-get install --no-install-recommends make -y && rm -rf /var/lib/apt/lists/*;
+RUN apt-get install --no-install-recommends sudo -y && rm -rf /var/lib/apt/lists/*;
+RUN apt-get install --no-install-recommends git -y && rm -rf /var/lib/apt/lists/*;
 
 # Install curl
-RUN apt-get install curl -y
+RUN apt-get install --no-install-recommends curl -y && rm -rf /var/lib/apt/lists/*;
 
 # Build VG from source (static binaries no more available)
-RUN sudo apt-get -y install build-essential git cmake pkg-config libncurses-dev libbz2-dev  \
+RUN sudo apt-get -y --no-install-recommends install build-essential git cmake pkg-config libncurses-dev libbz2-dev \
                      protobuf-compiler libprotoc-dev libprotobuf-dev libjansson-dev \
                      automake libtool jq bc rs curl unzip redland-utils \
                      librdf-dev bison flex gawk lzma-dev liblzma-dev liblz4-dev \
-                     libffi-dev libcairo-dev
+                     libffi-dev libcairo-dev && rm -rf /var/lib/apt/lists/*;
 
 # Download and install python3.7
 WORKDIR /grafimo_wd
-RUN apt-get install python3.7 -y
+RUN apt-get install --no-install-recommends python3.7 -y && rm -rf /var/lib/apt/lists/*;
 RUN update-alternatives --install /usr/bin/python python /usr/bin/python3.7 50
-RUN apt-get install python3-distutils -y
-RUN apt-get install manpages-dev -y
-RUN apt-get install python-dev -y
-RUN apt-get install python3-dev -y
-RUN apt-get install libpython3.7-dev -y
+RUN apt-get install --no-install-recommends python3-distutils -y && rm -rf /var/lib/apt/lists/*;
+RUN apt-get install --no-install-recommends manpages-dev -y && rm -rf /var/lib/apt/lists/*;
+RUN apt-get install --no-install-recommends python-dev -y && rm -rf /var/lib/apt/lists/*;
+RUN apt-get install --no-install-recommends python3-dev -y && rm -rf /var/lib/apt/lists/*;
+RUN apt-get install --no-install-recommends libpython3.7-dev -y && rm -rf /var/lib/apt/lists/*;
 
 # Install GRAFIMO external dependencies
-RUN apt-get install tabix -y
-RUN apt-get install graphviz -y
+RUN apt-get install --no-install-recommends tabix -y && rm -rf /var/lib/apt/lists/*;
+RUN apt-get install --no-install-recommends graphviz -y && rm -rf /var/lib/apt/lists/*;
 
 # Making sure that pip is available
-RUN curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py
+RUN curl -f https://bootstrap.pypa.io/get-pip.py -o get-pip.py
 RUN python get-pip.py
-RUN apt-get install python3-pip -y
-RUN pip3 install pandas
-RUN pip3 install numpy
-RUN pip3 install statsmodels
-RUN pip3 install numba
-RUN pip3 install Cython
-RUN pip3 install setuptools
-RUN pip3 install wheel
-RUN pip3 install sphinx
-RUN pip3 install -U colorama 
+RUN apt-get install --no-install-recommends python3-pip -y && rm -rf /var/lib/apt/lists/*;
+RUN pip3 install --no-cache-dir pandas
+RUN pip3 install --no-cache-dir numpy
+RUN pip3 install --no-cache-dir statsmodels
+RUN pip3 install --no-cache-dir numba
+RUN pip3 install --no-cache-dir Cython
+RUN pip3 install --no-cache-dir setuptools
+RUN pip3 install --no-cache-dir wheel
+RUN pip3 install --no-cache-dir sphinx
+RUN pip3 install --no-cache-dir -U colorama
 
 # remove the pip installation file
 RUN rm get-pip.py
 
 # Download and build GRAFIMO
-RUN pip3 install grafimo
+RUN pip3 install --no-cache-dir grafimo
 
 # check we have GRAFIMO, vg, tabix and graphviz available and in PATH
 RUN which grafimo && which vg && which tabix && which dot