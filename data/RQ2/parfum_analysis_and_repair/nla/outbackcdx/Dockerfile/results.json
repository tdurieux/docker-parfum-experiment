{
  "startTime": 1674250497518,
  "endTime": 1674250498183,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 22,
        "columnEnd": 64
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM maven:3-adoptopenjdk-11 as build-env\n\nRUN apt-get update \\\n && apt-get install --no-install-recommends -y libsnappy-dev \\\n && apt-get install --no-install-recommends -y build-essential \\\n && rm -rf /var/lib/apt/lists/*\n\n# add rocksdb tools\n# see outbackcdx pom.xml for rocksdb version (rocksdbjni) and\n# check branches with https://github.com/facebook/rocksdb\nRUN cd /tmp && \\\n    git clone https://github.com/facebook/rocksdb.git && \\\n    cd rocksdb && \\\n    git checkout 6.0.fb && \\\n    DEBUG_LEVEL=0 CXXFLAGS='-Wno-error=deprecated-copy -Wno-error=pessimizing-move -Wno-error=class-memaccess' make tools && \\\n    cp /tmp/rocksdb/ldb /usr/bin/ && \\\n    cp /tmp/rocksdb/sst_dump /usr/bin/\n\nWORKDIR /build\n\nCOPY pom.xml /build/pom.xml\nRUN mvn -B -f /build/pom.xml -s /usr/share/maven/ref/settings-docker.xml dependency:resolve-plugins dependency:go-offline\n\nCOPY src /build/src\nCOPY docs /build/docs\nCOPY resources /build/resources\n\nRUN export JAVA_TOOL_OPTIONS=-Dfile.encoding=UTF8 && \\\n    mvn -B -s /usr/share/maven/ref/settings-docker.xml -DskipTests package && \\\n    mvn package\n\nFROM adoptopenjdk:11-jdk-hotspot\n\nRUN apt-get update && apt-get install --no-install-recommends -y libsnappy-dev dumb-init \\\n && rm -rf /var/lib/apt/lists/*\n\n\nCOPY --from=build-env /build/target/outbackcdx-*.jar outbackcdx.jar\nCOPY --from=build-env /usr/bin/ldb /usr/bin\nCOPY --from=build-env /usr/bin/sst_dump /usr/bin\n\nRUN mkdir /cdx-data\n\nEXPOSE 8080\n\nENTRYPOINT [\"/usr/bin/dumb-init\", \"--\"]\nCMD java -jar outbackcdx.jar -v -d /cdx-data -p 8080 -b 0.0.0.0\n\n"
}