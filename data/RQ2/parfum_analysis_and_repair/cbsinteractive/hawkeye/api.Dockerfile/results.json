{
  "startTime": 1674249057567,
  "endTime": 1674249058221,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 28,
        "lineEnd": 29,
        "columnStart": 7,
        "columnEnd": 18
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 28,
        "lineEnd": 29,
        "columnStart": 7,
        "columnEnd": 18
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 14
      }
    }
  ],
  "repairedDockerfile": "#\n# Build the executable artifacts to include in a final image.\n#\nFROM rust:1.57-slim-buster as builder\n\nRUN apt-get update -qq\nRUN apt-get install --no-install-recommends -yq \\\n    pkg-config \\\n    libssl-dev && rm -rf /var/lib/apt/lists/*;\nCOPY Cargo.toml /Cargo.toml\nCOPY Cargo.lock /Cargo.lock\nCOPY hawkeye-api /hawkeye-api\nCOPY hawkeye-core /hawkeye-core\nCOPY hawkeye-worker /hawkeye-worker\nCOPY resources /resources\nRUN cargo build --release --package hawkeye-api\n\n#\n# Build the final image containing the built executables.\n#\nFROM debian:buster-slim as app\n\n# Make RUST_LOG configurable at buld time.\n# This may be overridden with `-e RUST_LOG=debug` at `docker run` time.\nARG RUST_LOG=info\nENV RUST_LOG ${RUST_LOG}\n\nRUN apt-get update -qq \\\n    && apt-get install --no-install-recommends -y \\\n        libssl-dev && rm -rf /var/lib/apt/lists/*;\n\nCOPY --from=builder /target/release/hawkeye-api .\nENTRYPOINT [\"/hawkeye-api\"]\n"
}