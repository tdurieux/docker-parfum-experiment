{
  "startTime": 1674251487152,
  "endTime": 1674251490981,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 80
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "gemUpdateSystemRmRootGem",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "gemUpdateNoDocument",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 36
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# docker build -t ruby_language_server .\n#\n# For development:\n# docker run -it -v $PWD:/project -v $PWD:/tmp/src -w /tmp/src ruby_language_server sh -c 'bundle && guard'\nFROM ruby:3.0-alpine\nLABEL maintainer=\"kurt@CircleW.org\"\nRUN mkdir -p /usr/local/etc \\\n  && { \\\n    echo 'install: --no-document'; \\\n    echo 'update: --no-document'; \\\n  } >> /usr/local/etc/gemrc;\n\nRUN gem update bundler && rm -rf /root/.gem;\n\n# Needed for byebug and some other gems\nRUN apk update\nRUN apk add --no-cache curl make g++ sqlite-dev\n\nWORKDIR /usr/local/src\nRUN curl -f -O -L https://github.com/mateusza/SQLite-Levenshtein/archive/master.zip\nRUN unzip master.zip\nWORKDIR /usr/local/src/SQLite-Levenshtein-master\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"\nRUN make -j 8 install\n\nWORKDIR /app\n\n# We expect the target project to be mounted here:\nENV RUBY_LANGUAGE_SERVER_PROJECT_ROOT /project/\n# ENV LOG_LEVEL DEBUG\n\nCOPY Gemfile* ./\nCOPY ruby_language_server.gemspec .\nCOPY lib/ruby_language_server/version.rb lib/ruby_language_server/version.rb\n\nRUN bundle install -j 8\n\nCOPY . ./\n\n# We must not use bundle exec, here - we are running in the\nCMD [\"ruby\", \"/app/exe/ruby_language_server\"]\n"
}