{
  "startTime": 1674220252152,
  "endTime": 1674220252975,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 32,
        "columnEnd": 101
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 5,
        "columnEnd": 154
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 5,
        "columnEnd": 141
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 22,
        "columnEnd": 48
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 22,
        "columnEnd": 48
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM rust:latest\nLABEL maintainer=\"Fastly OSS <oss@fastly.com>\"\n\nENV RUST_TOOLCHAIN=stable\nRUN rustup toolchain install ${RUST_TOOLCHAIN}\nRUN rustup target add wasm32-wasi --toolchain ${RUST_TOOLCHAIN}\n\nRUN apt-get update && apt-get install --no-install-recommends -y curl jq && rm -rf /var/lib/apt/lists/*;\nRUN export FASTLY_CLI_VERSION=$( curl -f --silent https://api.github.com/repos/fastly/cli/releases/latest | jq -r .tag_name | cut -d 'v' -f 2) \\\n  GOARCH=$(dpkg --print-architecture) \\\n  && curl -f -vL \"https://github.com/fastly/cli/releases/download/v${FASTLY_CLI_VERSION}/fastly_v${FASTLY_CLI_VERSION}_linux-$GOARCH.tar.gz\" -o fastly.tar.gz \\\n  && curl -f -vL \"https://github.com/fastly/cli/releases/download/v${FASTLY_CLI_VERSION}/fastly_v${FASTLY_CLI_VERSION}_SHA256SUMS\" -o sha256sums \\\n  && dlsha=$(shasum -a 256 fastly.tar.gz | cut -d \" \" -f 1) && expected=$(cat sha256sums | awk -v pat=\"$dlsha\" '$0~pat' | cut -d \" \" -f 1) \\\n  && if [[ \"$dlsha\" != \"$expected\" ]]; then echo \"shasums don't match\" && exit 1; fi\n\nRUN tar -xzf fastly.tar.gz --directory /usr/bin && rm fastly.tar.gz\n\nRUN adduser fastly\nUSER fastly\n\nWORKDIR /app\nENTRYPOINT [\"/usr/bin/fastly\"]\nCMD [\"--help\"]\n\n# docker build -t fastly/cli/rust . -f ./Dockerfile-rust\n# docker run -v $PWD:/app -it -p 7676:7676 fastly/cli/rust compute serve --addr=\"0.0.0.0:7676\"\n"
}