{
  "startTime": 1674246058630,
  "endTime": 1674246059428,
  "originalSmells": [
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 25
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM rust:1.59 as build\n\nWORKDIR /caster-api\n\nCOPY . .\n\n# Build for release\nRUN --mount=type=cache,target=/usr/local/cargo/registry \\\n    --mount=type=cache,target=/usr/local/cargo/git \\\n    --mount=type=cache,sharing=private,target=/caster-api/target \\\n    cargo build --release && \\\n    # Copy executable out of the cache so it is available in the final image.\n    cp target/release/caster-api ./caster-api\n\n# The final release image\nFROM debian:bullseye-slim\n\nARG RUN_MODE=production\nENV TZ=Etc/UTC \\\n    RUN_MODE=${RUN_MODE} \\\n    RUST_LOG=info\n\nEXPOSE 3000\n\nCOPY --from=build /caster-api/caster-api /usr/src/app/caster-api\n\n# Install some Debian packages\nRUN apt update && \\\n    apt-get -y install --no-install-recommends ca-certificates tzdata && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    # Set up the app user\n    groupadd caster && \\\n    useradd -g caster caster && \\\n    mkdir -p /usr/src/app && \\\n    chown -R caster:caster /usr/src/app && rm -rf /usr/src/app\n\nUSER caster\nWORKDIR /usr/src/app\n\nCOPY config config/\n\nCMD [\"./caster-api\"]\n"
}