{
  "startTime": 1674249607645,
  "endTime": 1674249608832,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 17,
        "columnStart": 22,
        "columnEnd": 11
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 17,
        "columnStart": 22,
        "columnEnd": 11
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:12 as build-frontend\nRUN mkdir -p /app/reactClient/my-app\nCOPY ./reactClient/my-app/package*.json /app/reactClient/my-app/\nWORKDIR /app/reactClient/my-app\nRUN npm install --quiet && npm cache clean --force;\nCOPY ./OpenAPIReactClient /app/OpenAPIReactClient\nWORKDIR /app/OpenAPIReactClient\nRUN npm install --quiet && npm run build && npm cache clean --force;\nWORKDIR /app/reactClient/my-app\nCOPY ./reactClient /app/reactClient\nRUN npm install /app/OpenAPIReactClient && npm cache clean --force;\nRUN npm run build\n\nFROM php:8.1 as build-backend\nCOPY --from=composer /usr/bin/composer /usr/bin/composer\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n        libzip-dev \\\n        zip \\\n  && docker-php-ext-install zip && rm -rf /var/lib/apt/lists/*;\n# copy dependencies and package files\nRUN mkdir -p /app/Symfony-API\nCOPY ./OpenAPIServerBundle /app/OpenAPIServerBundle\nCOPY ./Symfony-API /app/Symfony-API\nWORKDIR /app/Symfony-API\nRUN composer install --no-dev --no-progress --optimize-autoloader --classmap-authoritative\n\nCOPY --from=build-frontend /app/reactClient/my-app/build/ /app/Symfony-API/public/\nRUN rm ./templates/base.html.twig && rm ./templates/index.html && ln -s ../public/index.html ./templates/index.html\n\nWORKDIR /app/Symfony-API/vendor/openapi\nRUN rm -r server-bundle && cp -r ../../../OpenAPIServerBundle/ server-bundle\n\nFROM php:8.1-apache\nRUN docker-php-ext-install pdo_mysql\n\nENV APACHE_DOCUMENT_ROOT /app/public\n\nRUN apt-get update && \\\n    DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y ssl-cert && \\\n    rm -r /var/lib/apt/lists/*\nRUN sed -ri -e 's!/var/www/html!${APACHE_DOCUMENT_ROOT}!g' /etc/apache2/sites-available/*.conf\nRUN sed -ri -e 's!/var/www/!${APACHE_DOCUMENT_ROOT}!g' /etc/apache2/apache2.conf /etc/apache2/conf-available/*.conf\nRUN a2enmod rewrite && \\\n    a2enmod ssl && \\\n    a2ensite default-ssl\n\nCOPY --from=build-backend /app/Symfony-API /app\nRUN mkdir /data && \\\n    echo \"DATABASE_URL=\\\"sqlite:////data/pwman.sqlite\\\"\" > /app/.env.local && chown -R www-data:www-data /data\nRUN cd /app/ && php bin/console doctrine:schema:update --force\nRUN chown -R www-data:www-data /app\n\n"
}