{
  "startTime": 1674253016887,
  "endTime": 1674253017813,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 105,
        "lineEnd": 105,
        "columnStart": 4,
        "columnEnd": 57
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 106,
        "lineEnd": 106,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 107,
        "lineEnd": 107,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 98
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 111,
        "lineEnd": 111,
        "columnStart": 9,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 118,
        "lineEnd": 118,
        "columnStart": 28,
        "columnEnd": 69
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 111,
        "lineEnd": 111,
        "columnStart": 9,
        "columnEnd": 32
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 118,
        "lineEnd": 118,
        "columnStart": 28,
        "columnEnd": 69
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Heavily intspired by docker theano\n# Heavily Inspired from https://github.com/jupyter/docker-stacks/tree/master/minimal-notebook\nFROM nvidia/cuda:9.0-cudnn7-devel\n\n# This loads nvidia cuda image\n# FROM nvidia/cuda\n\nUSER root\n\n# Install all OS dependencies for fully functional notebook server\nENV DEBIAN_FRONTEND noninteractive\nRUN apt-get update && apt-get install -yq --no-install-recommends \\\n    git \\\n    vim \\\n    jed \\\n    emacs \\\n    wget \\\n    build-essential \\\n    python-dev \\\n    ca-certificates \\\n    bzip2 \\\n    unzip \\\n    libsm6 \\\n    pandoc \\\n    texlive-latex-base \\\n    texlive-latex-extra \\\n    texlive-fonts-extra \\\n    texlive-fonts-recommended \\\n    texlive-generic-recommended \\\n    sudo \\\n    locales \\\n    libxrender1 \\\n    && apt-get clean && \\\n    rm -rf /var/lib/apt/lists/*\n\nRUN echo \"en_US.UTF-8 UTF-8\" > /etc/locale.gen && \\\n    locale-gen\n\n# Install Tini\nRUN wget --quiet https://github.com/krallin/tini/releases/download/v0.9.0/tini && \\\n    echo \"faafbfb5b079303691a939a747d7f60591f2143164093727e870b289a44d9872  *tini\" | sha256sum -c - && \\\n    mv tini /usr/local/bin/tini && \\\n    chmod +x /usr/local/bin/tini\n\n# Configure environment\nENV CONDA_DIR /opt/conda\nENV PATH $CONDA_DIR/bin:$PATH\nENV SHELL /bin/bash\nENV NB_USER gempy\nENV NB_UID 1000\nENV LC_ALL en_US.UTF-8\nENV LANG en_US.UTF-8\nENV LANGUAGE en_US.UTF-8\n\n# Create user with UID=1000 and in the 'users' group\nRUN useradd -m -s /bin/bash -N -u $NB_UID $NB_USER && \\\n    mkdir -p /opt/conda && \\\n    chown gempy /opt/conda\n\nUSER gempy\n\n# Setup home directory\nRUN mkdir /home/$NB_USER/work && \\\n    mkdir /home/$NB_USER/.jupyter && \\\n    mkdir /home/$NB_USER/.local && \\\n    echo \"cacert=/etc/ssl/certs/ca-certificates.crt\" > /home/$NB_USER/.curlrc\n\n# Install conda as\nENV CONDA_VER latest\nENV CONDA_MD5 7fe70b214bee1143e3e3f0467b71453c\nRUN cd /tmp && \\\n    mkdir -p $CONDA_DIR && \\\n    wget --quiet https://repo.continuum.io/miniconda/Miniconda3-${CONDA_VER}-Linux-x86_64.sh && \\\n    /bin/bash Miniconda3-${CONDA_VER}-Linux-x86_64.sh -f -b -p $CONDA_DIR && \\\n    rm Miniconda3-${CONDA_VER}-Linux-x86_64.sh && \\\n    conda config --set auto_update_conda False && \\\n    conda clean -tipsy\n\n# Install Jupyter notebook\nRUN conda install --quiet --yes \\\n    terminado \\\n    mkl-service \\\n    && conda clean -tipsy\n\n# Install Theano, pygpu\nRUN conda install -c conda-forge pygpu\nRUN conda install theano gdal\n\nENV MKL_THREADING_LAYER GNU\n\nUSER root\n\n# Configure container startup as root\nEXPOSE 8888\n\n# Clone gempy\nWORKDIR /home/$NB_USER/work\nRUN git clone https://github.com/cgre-aachen/gempy.git --depth 1 --branch master\n\nWORKDIR /home/$NB_USER/work/gempy\n\n# Pull from release\nRUN echo '2014122501' >/dev/null && git pull\n# This is necessary to get rid off the scan.c file missing\n\nRUN pip install --no-cache-dir --upgrade --force-reinstall Theano >=1.0.4\nRUN pip install --no-cache-dir -e .\nRUN pip install --no-cache-dir -r optional-requirements.txt\n\n# Pyvista headless display\nRUN sudo apt-get -y update && \\\n    sudo apt-get -y --no-install-recommends install xvfb & rm -rf /var/lib/apt/lists/*; \\\n    export DISPLAY=:99.0 && \\\n    export PYVISTA_OFF_SCREEN=true && \\\n    export PYVISTA_USE_PANEL=true && \\\n    Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 & \\\n    sleep 3\n\nRUN sudo apt update && sudo apt -y --no-install-recommends install python-qt4 libgl1-mesa-glx && rm -rf /var/lib/apt/lists/*;\n# ENTRYPOINT [\"tini\", \"--\"]\n\n## Add local files as late as possible to avoid cache busting\n## Start notebook server\n#COPY start-notebook.sh /usr/local/bin/\n#RUN chmod 755 /usr/local/bin/start-notebook.sh\n#COPY jupyter_notebook_config_secure.py /home/$NB_USER/.jupyter/jupyter_notebook_config.py\n#COPY notebook /home/$NB_USER/work/notebook\n\n## My own change\n#\n#RUN apt-get update && apt-get install -y \\\n#        g++ \\\n#    && \\\n#    apt-get clean && \\\n#    rm -rf /var/lib/apt/lists/*\n#\n#COPY theanorc /home/$NB_USER/.theanorc\n#\n## Make sure user jovyan owns files in HOME\n#RUN chown -R $NB_USER:users /home/$NB_USER\n#\n## Switch back to jovyan to avoid accidental container runs as root\n#USER jovyan\n#\n#RUN mkdir data && cd data && wget http://www.iro.umontreal.ca/~lisa/deep/data/mnist/mnist_py3k.pkl.gz -O mnist.pkl.gz\n#\n#CMD [\"start-notebook.sh\", \"notebook\"]\n"
}