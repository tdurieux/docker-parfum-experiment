diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/airflow-helm/charts/images/postgresql-bitnami/11/alpine/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/airflow-helm/charts/images/postgresql-bitnami/11/alpine/Dockerfile/repaired.Dockerfile
index a04144d..6871e42 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/airflow-helm/charts/images/postgresql-bitnami/11/alpine/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/airflow-helm/charts/images/postgresql-bitnami/11/alpine/Dockerfile/repaired.Dockerfile
@@ -25,10 +25,10 @@ RUN apk --no-cache add \
     musl-nscd-dev
 
 # build and install postgres
-RUN curl -sSL "https://ftp.samba.org/pub/cwrap/nss_wrapper-${NSS_WRAPPER_VERSION}.tar.gz" -o /tmp/nss_wrapper.tar.gz \
- && curl -sSL "https://ftp.samba.org/pub/cwrap/nss_wrapper-${NSS_WRAPPER_VERSION}.tar.gz.asc" -o /tmp/nss_wrapper.tar.gz.asc \
- && gpg -q --keyserver keyserver.ubuntu.com --receive-keys 7EE0FC4DCC014E3D \
- && gpg -q --verify /tmp/nss_wrapper.tar.gz.asc /tmp/nss_wrapper.tar.gz \
+RUN curl -f -sSL "https://ftp.samba.org/pub/cwrap/nss_wrapper-${NSS_WRAPPER_VERSION}.tar.gz" -o /tmp/nss_wrapper.tar.gz \
+ && curl -f -sSL "https://ftp.samba.org/pub/cwrap/nss_wrapper-${NSS_WRAPPER_VERSION}.tar.gz.asc" -o /tmp/nss_wrapper.tar.gz.asc \
+ && gpg --batch -q --keyserver keyserver.ubuntu.com --receive-keys 7EE0FC4DCC014E3D \
+ && gpg --batch -q --verify /tmp/nss_wrapper.tar.gz.asc /tmp/nss_wrapper.tar.gz \
  && rm /tmp/nss_wrapper.tar.gz.asc \
  && mkdir /tmp/nss_wrapper \
  && tar -xf /tmp/nss_wrapper.tar.gz -C /tmp/nss_wrapper --strip-components=1 \
@@ -87,9 +87,9 @@ RUN apk --no-cache add \
     zlib-dev
 
 # build and install postgres
-RUN curl -sSL "https://ftp.postgresql.org/pub/source/v${PG_VERSION}/postgresql-${PG_VERSION}.tar.bz2" -o /tmp/postgresql.tar.bz2 \
- && curl -sSL "https://ftp.postgresql.org/pub/source/v${PG_VERSION}/postgresql-${PG_VERSION}.tar.bz2.sha256" -o /tmp/postgresql.tar.bz2.sha256 \
- && echo "$(cat /tmp/postgresql.tar.bz2.sha256 | awk '{ print $1; }') /tmp/postgresql.tar.bz2" | sha256sum --check \
+RUN curl -f -sSL "https://ftp.postgresql.org/pub/source/v${PG_VERSION}/postgresql-${PG_VERSION}.tar.bz2" -o /tmp/postgresql.tar.bz2 \
+ && curl -f -sSL "https://ftp.postgresql.org/pub/source/v${PG_VERSION}/postgresql-${PG_VERSION}.tar.bz2.sha256" -o /tmp/postgresql.tar.bz2.sha256 \
+ && echo "$(cat /tmp/postgresql.tar.bz2.sha256 | awk '{ print $1; }')  /tmp/postgresql.tar.bz2" | sha256sum --check \
  && rm /tmp/postgresql.tar.bz2.sha256 \
  && mkdir /tmp/postgresql \
  && tar -xf /tmp/postgresql.tar.bz2 -C /tmp/postgresql --strip-components=1 \
@@ -97,7 +97,7 @@ RUN curl -sSL "https://ftp.postgresql.org/pub/source/v${PG_VERSION}/postgresql-$
  && cd /tmp/postgresql \
  # alpine seems to require all unix sockets be under `/var/run`, we set `DEFAULT_PGSOCKET_DIR` to work around this
  && sed -i -e 's|DEFAULT_PGSOCKET_DIR  "/tmp"|DEFAULT_PGSOCKET_DIR  "/var/run/postgresql"|g' src/include/pg_config_manual.h \
- && ./configure \
+ && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
     --prefix=/opt/bitnami/postgresql \
     --enable-nls \
     --enable-integer-datetimes \
@@ -124,7 +124,7 @@ RUN curl -sSL "https://ftp.postgresql.org/pub/source/v${PG_VERSION}/postgresql-$
  && make install-world-bin
 
 # build and install pgAudit extension
-RUN curl -sSL "https://github.com/pgaudit/pgaudit/archive/refs/tags/${PGAUDIT_VERSION}.tar.gz" -o /tmp/pgaudit.tar.gz \
+RUN curl -f -sSL "https://github.com/pgaudit/pgaudit/archive/refs/tags/${PGAUDIT_VERSION}.tar.gz" -o /tmp/pgaudit.tar.gz \
  && mkdir /tmp/pgaudit \
  && tar -xf /tmp/pgaudit.tar.gz -C /tmp/pgaudit --strip-components=1 \
  && rm /tmp/pgaudit.tar.gz \