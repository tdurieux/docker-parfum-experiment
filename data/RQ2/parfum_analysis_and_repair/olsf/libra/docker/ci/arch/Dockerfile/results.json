{
  "startTime": 1674255711334,
  "endTime": 1674255711816,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 65
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# while using circle we'll use circle's base image.\nFROM archlinux:base-devel-20210523.0.23638@sha256:d7173f9b580ecf6133f436ad5dd0f870c5cf4cd09e4fc116bc9e682e52d423a0 AS setup_ci_arch\n\nWORKDIR /diem\nCOPY rust-toolchain /diem/rust-toolchain\nCOPY scripts/dev_setup.sh /diem/scripts/dev_setup.sh\n\n# WORKAROUND for glibc 2.33 and old Docker\n# See https://github.com/actions/virtual-environments/issues/2658\n# Thanks to https://github.com/lxqt/lxqt-panel/pull/1562\nRUN patched_glibc=glibc-linux4-2.33-4-x86_64.pkg.tar.zst && \\\n    curl -f -LO \"https://repo.archlinuxcn.org/x86_64/$patched_glibc\" && \\\n    bsdtar -C / -xvf \"$patched_glibc\"\n\n# Batch mode and all operations tooling\nRUN scripts/dev_setup.sh -t -o -y -b -p && pacman -Scc --noconfirm\nENV PATH \"/root/.cargo/bin:/root/bin/:$PATH\"\n\nFROM setup_ci_arch as tested_ci_arch\n\n# Compile a small rust tool?  But we already have in dev_setup (sccache/grcov)...?\n# Test that all commands we need are installed and on the PATH\nRUN [ -x \"$(command -v shellcheck)\" ] \\\n    && [ -x \"$(command -v hadolint)\" ] \\\n    && [ -x \"$(command -v vault)\" ] \\\n    && [ -x \"$(command -v terraform)\" ] \\\n    && [ -x \"$(command -v kubectl)\" ] \\\n    && [ -x \"$(command -v rustup)\" ] \\\n    && [ -x \"$(command -v cargo)\" ] \\\n    && [ -x \"$(command -v sccache)\" ] \\\n    && [ -x \"$(command -v grcov)\" ] \\\n    && [ -x \"$(command -v helm)\" ] \\\n    && [ -x \"$(command -v aws)\" ] \\\n    && [ -x \"$(command -v z3)\" ] \\\n    && [ -x \"$(command -v \"$HOME/.dotnet/tools/boogie\")\" ] \\\n    && [ -x \"$(xargs rustup which cargo --toolchain < /diem/rust-toolchain )\" ] \\\n    && [ -x \"$(command -v tidy)\" ] \\\n    && [ -x \"$(command -v xsltproc)\" ]\n# These should eventually be installed and tested, but since we don't automate on arch, low pri.\n# && [ -x \"$(command -v javac)\" ] \\\n# && [ -x \"$(command -v clang)\" ] \\\n# && [ -x \"$(command -v python3)\" ] \\\n# && [ -x \"$(command -v go)\" ] \\\n# && [ -x \"$(command -v npm)\" ]\n\n# should be a no-op\nRUN scripts/dev_setup.sh -t -o -y -b -p\n\nFROM setup_ci_arch as build_environment_arch\n"
}