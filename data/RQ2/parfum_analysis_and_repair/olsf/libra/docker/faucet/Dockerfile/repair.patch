diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/olsf/libra/docker/faucet/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/olsf/libra/docker/faucet/Dockerfile/repaired.Dockerfile
index 4fb9c95..8ac9486 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/olsf/libra/docker/faucet/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/olsf/libra/docker/faucet/Dockerfile/repaired.Dockerfile
@@ -5,7 +5,7 @@ FROM debian-base AS toolchain
 # To use http/https proxy while building, use:
 # docker build --build-arg https_proxy=http://fwdproxy:8080 --build-arg http_proxy=http://fwdproxy:8080
 
-RUN apt-get update && apt-get install -y cmake curl clang git pkg-config libssl-dev
+RUN apt-get update && apt-get install --no-install-recommends -y cmake curl clang git pkg-config libssl-dev && rm -rf /var/lib/apt/lists/*;
 
 RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --default-toolchain none
 ENV PATH "$PATH:/root/.cargo/bin"
@@ -25,7 +25,7 @@ RUN IMAGE_TARGETS="test" ./docker/build-common.sh
 FROM debian-base AS pre-test
 
 # TODO: Unsure which of these are needed exactly for client
-RUN apt-get update && apt-get install -y libssl1.1 nano net-tools tcpdump iproute2 netcat \
+RUN apt-get update && apt-get install --no-install-recommends -y libssl1.1 nano net-tools tcpdump iproute2 netcat \
     && apt-get clean && rm -r /var/lib/apt/lists/*
 
 RUN mkdir -p /opt/diem/bin  /diem/client/data/wallet/
@@ -37,7 +37,7 @@ COPY --from=builder /diem/target/release/diem-faucet /opt/diem/bin
 FROM pre-test AS test
 
 #install needed tools
-RUN apt-get update && apt-get install -y procps
+RUN apt-get update && apt-get install --no-install-recommends -y procps && rm -rf /var/lib/apt/lists/*;
 
 FROM pre-test as prod
 # Mint proxy listening address