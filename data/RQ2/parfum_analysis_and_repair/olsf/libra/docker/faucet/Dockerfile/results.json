{
  "startTime": 1674215670709,
  "endTime": 1674215671394,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 22,
        "columnEnd": 83
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 22,
        "columnEnd": 89
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 22,
        "columnEnd": 47
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 22,
        "columnEnd": 83
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 22,
        "columnEnd": 47
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:buster-20210511@sha256:acf7795dc91df17e10effee064bd229580a9c34213b4dba578d64768af5d8c51 AS debian-base\n\nFROM debian-base AS toolchain\n\n# To use http/https proxy while building, use:\n# docker build --build-arg https_proxy=http://fwdproxy:8080 --build-arg http_proxy=http://fwdproxy:8080\n\nRUN apt-get update && apt-get install --no-install-recommends -y cmake curl clang git pkg-config libssl-dev && rm -rf /var/lib/apt/lists/*;\n\nRUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --default-toolchain none\nENV PATH \"$PATH:/root/.cargo/bin\"\n\nWORKDIR /diem\nCOPY rust-toolchain /diem/rust-toolchain\nRUN rustup install $(cat rust-toolchain)\n\nFROM toolchain AS builder\n\nARG ENABLE_FAILPOINTS\nCOPY . /diem\n\nRUN IMAGE_TARGETS=\"test\" ./docker/build-common.sh\n\n### Production Image ###\nFROM debian-base AS pre-test\n\n# TODO: Unsure which of these are needed exactly for client\nRUN apt-get update && apt-get install --no-install-recommends -y libssl1.1 nano net-tools tcpdump iproute2 netcat \\\n    && apt-get clean && rm -r /var/lib/apt/lists/*\n\nRUN mkdir -p /opt/diem/bin  /diem/client/data/wallet/\n\nCOPY --from=builder /diem/target/release/cli /opt/diem/bin\nCOPY --from=builder /diem/target/release/diem-faucet /opt/diem/bin\n\n# Test the docker container before shipping.\nFROM pre-test AS test\n\n#install needed tools\nRUN apt-get update && apt-get install --no-install-recommends -y procps && rm -rf /var/lib/apt/lists/*;\n\nFROM pre-test as prod\n# Mint proxy listening address\nEXPOSE 8000\n\nARG BUILD_DATE\nARG GIT_REV\nARG GIT_UPSTREAM\n\nLABEL org.label-schema.schema-version=\"1.0\"\nLABEL org.label-schema.build-date=$BUILD_DATE\nLABEL org.label-schema.vcs-ref=$GIT_REV\n"
}