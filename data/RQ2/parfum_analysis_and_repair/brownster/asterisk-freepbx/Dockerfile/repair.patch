diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/brownster/asterisk-freepbx/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/brownster/asterisk-freepbx/Dockerfile/repaired.Dockerfile
index 397058c..5f00370 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/brownster/asterisk-freepbx/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/brownster/asterisk-freepbx/Dockerfile/repaired.Dockerfile
@@ -16,7 +16,7 @@ CMD ["/sbin/my_init"]
 # Add VOLUME to allow backup of FREEPBX
 VOLUME ["/etc/freepbxbackup"]
 
-# open up ports needed by freepbx and asterisk 5060 tcp sip reg 80 tcp web port 10000-20000 udp rtp stream  
+# open up ports needed by freepbx and asterisk 5060 tcp sip reg 80 tcp web port 10000-20000 udp rtp stream 
 # EXPOSE 5060
 # EXPOSE 80
 # EXPOSE 8009
@@ -26,7 +26,7 @@ VOLUME ["/etc/freepbxbackup"]
 ADD start.sh /root/
 
 #Install packets that are needed
-RUN apt-get update && apt-get install -y build-essential curl libgtk2.0-dev linux-headers-`uname -r` openssh-server apache2 mysql-server mysql-client bison flex php5 php5-curl php5-cli php5-mysql php-pear php-db php5-gd curl sox libncurses5-dev libssl-dev libmysqlclient-dev mpg123 libxml2-dev libnewt-dev sqlite3 libsqlite3-dev pkg-config automake libtool autoconf git subversion unixodbc-dev uuid uuid-dev libasound2-dev libogg-dev libvorbis-dev libcurl4-openssl-dev libical-dev libneon27-dev libsrtp0-dev libspandsp-dev wget sox mpg123 libwww-perl php5 php5-json libiksemel-dev openssl lamp-server^ 1>/dev/null
+RUN apt-get update && apt-get install --no-install-recommends -y build-essential curl libgtk2.0-dev linux-headers-`uname -r` openssh-server apache2 mysql-server mysql-client bison flex php5 php5-curl php5-cli php5-mysql php-pear php-db php5-gd curl sox libncurses5-dev libssl-dev libmysqlclient-dev mpg123 libxml2-dev libnewt-dev sqlite3 libsqlite3-dev pkg-config automake libtool autoconf git subversion unixodbc-dev uuid uuid-dev libasound2-dev libogg-dev libvorbis-dev libcurl4-openssl-dev libical-dev libneon27-dev libsrtp0-dev libspandsp-dev wget sox mpg123 libwww-perl php5 php5-json libiksemel-dev openssl lamp-server^ 1>/dev/null && rm -rf /var/lib/apt/lists/*;
 
 # add asterisk user
 RUN groupadd -r $ASTERISKUSER \
@@ -49,23 +49,21 @@ WORKDIR /temp/src/
 RUN git clone https://github.com/asterisk/pjproject.git 1>/dev/null \
   && git clone https://github.com/akheron/jansson.git 1>/dev/null \
   && cd /temp/src/pjproject \
-  && ./configure --enable-shared --disable-sound --disable-resample --disable-video --disable-opencore-amr 1>/dev/null \
+  && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --enable-shared --disable-sound --disable-resample --disable-video --disable-opencore-amr 1>/dev/null \
   && make dep 1>/dev/null \
   && make 1>/dev/null \
   && make install 1>/dev/null \
   && cd /temp/src/jansson \
   && autoreconf -i 1>/dev/null \
-  && ./configure 1>/dev/null \
+  && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" 1>/dev/null \
   && make 1>/dev/null \
   && make install 1>/dev/null \
-  
+   
 # Download asterisk.
-# Currently Certified Asterisk 13.1.
-  && curl -sf -o /tmp/asterisk.tar.gz -L http://downloads.asterisk.org/pub/telephony/certified-asterisk/certified-asterisk-13.1-current.tar.gz 1>/dev/null \
-
-# gunzip asterisk
-  && mkdir /tmp/asterisk \
-  && tar -xzf /tmp/asterisk.tar.gz -C /tmp/asterisk --strip-components=1 1>/dev/null
+Cu rent -f y C rt fied Asterisk 13.1. \
+    && curl -sf -o /t
+  \
+gu zip asterisk
 WORKDIR /tmp/asterisk
 
 # make asterisk.