{
  "startTime": 1674219137438,
  "endTime": 1674219138145,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 68
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 87
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 337
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 87
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 337
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 87
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 27
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 34,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 336
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 111
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 51
      }
    }
  ],
  "repairedDockerfile": "FROM python:3.8-slim AS builder\n\nWORKDIR /opt/app\n\n# Install Python and external dependencies, including headers and GCC\nRUN apt update\nRUN apt install --no-install-recommends -y curl git cmake build-essential libgoogle-glog-dev libgflags-dev libeigen3-dev libopencv-dev libboost-dev libboost-all-dev libboost-iostreams-dev libcurl4-openssl-dev protobuf-compiler libopenblas-dev libhdf5-dev libprotobuf-dev libleveldb-dev libsnappy-dev liblmdb-dev libutfcpp-dev wget unzip && rm -rf /var/lib/apt/lists/*;\n# Update Pip3\nRUN python3 -m pip install --upgrade pip\n\n# Install Nodejs and yarn\nRUN rm -rf /var/lib/apt/lists/*\nRUN curl -f -sL https://deb.nodesource.com/setup_12.x > node_install.sh\nRUN chmod +x ./node_install.sh\nRUN ./node_install.sh\nRUN curl -f -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -\nRUN echo \"deb http://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list\nRUN apt-get update\nRUN DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y apt-utils nodejs yarn groff rsync && rm -rf /var/lib/apt/lists/*;\nRUN apt install --no-install-recommends -y chromium && rm -rf /var/lib/apt/lists/*;\n# Install Lighthouse\nRUN yarn global add lighthouse && yarn cache clean;\n\n# Install Pipenv\nRUN pip3 install --no-cache-dir pipenv\n\n# Create a virtual environment and activate it\nRUN python3 -m venv /opt/venv\n\nENV PATH=\"/opt/venv/bin:$PATH\" \\\n\tVIRTUAL_ENV=\"/opt/venv\"\n\nCOPY requirements.txt .\n\n# Install dependencies into the virtual environment with Pipenv\nRUN python3 -m pip install --upgrade pip\nRUN pip3 --no-cache-dir install -r requirements.txt\nRUN pip3 install --no-cache-dir celery\n\nARG VERSION\nARG BUILD\nARG NOW\nARG TINI_VERSION=${TINI_VERSION:-\"v0.19.0\"}\n\n\n# Install runtime dependencies & create runtime user\nRUN mkdir -p /opt \\\n    mkdir -p bin config data logs\n\n# Switch to user context\nWORKDIR /opt/app\n\n# Copy sources\nCOPY . .\n\n# Activate the virtual environment\nENV PATH=\"/opt/venv/bin:$PATH\" \\\n    VIRTUAL_ENV=\"/opt/venv\"\n\n# Set container labels\nLABEL name=\"osat-server\" \\\n      version=\"$VERSION\" \\\n      build=\"$BUILD\" \\\n      architecture=\"x86_64\" \\\n      build_date=\"$NOW\" \\\n      vendor=\"osat\" \\\n      vcs-type=\"git\" \\\n      vcs-ref=\"$VERSION\" \\\n      distribution-scope=\"public\"\n\n# Container configuration\nEXPOSE 8000\nVOLUME [\"/opt/app/data\"]\nENTRYPOINT [\"./docker-entrypoint.sh\"]\n# CMD [\"./docker-entrypoint.sh\"]"
}