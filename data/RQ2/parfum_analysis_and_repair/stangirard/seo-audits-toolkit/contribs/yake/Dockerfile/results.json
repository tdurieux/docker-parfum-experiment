{
  "startTime": 1674248873337,
  "endTime": 1674248874203,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 1,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 70
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 22
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG PYTHON_VERSION=${PYTHON_VERSION:-\"3.7.1\"}\n\nFROM python:${PYTHON_VERSION}-alpine AS builder\n\nARG YAKE_VERSION=${YAKE_VERSION:-\"master\"}\n\n# change to app dir\nWORKDIR /app\n\n# install git and build-base (GCC, etc.)\nRUN apk update && \\\n\tapk upgrade && \\\n    apk add --no-cache bash git openssh && \\\n    apk add --no-cache build-base\n\n# Update Pip3\nRUN python3 -m pip install --upgrade pip\n\n# Install Pipenv\nRUN pip3 install --no-cache-dir pipenv\n\n# Create a virtual environment and activate it\nRUN python3 -m venv /opt/venv\n\nENV PATH=\"/opt/venv/bin:$PATH\" \\\n\tVIRTUAL_ENV=\"/opt/venv\"\n\nRUN python3 -m pip install -U pip && \\\n\tpip3 install --no-cache-dir flasgger\n\n# install requirements first to engage docker cache\nRUN wget https://raw.githubusercontent.com/LIAAD/yake/${YAKE_VERSION}/requirements.txt -O requirements.txt && \\\n    pip3 install --no-cache-dir -r requirements.txt\n\n# install yake via pip\nRUN pip3 install --no-cache-dir git+https://github.com/liaad/yake.git@${YAKE_VERSION}\n\nFROM python:3-alpine AS runtime\n\n\nARG VERSION\nARG BUILD\nARG NOW\nARG TINI_VERSION=${TINI_VERSION:-\"v0.19.0\"}\n\n# Install tini to /usr/local/sbin\nADD https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini-muslc-amd64 /usr/local/sbin/tini\n\n# Install runtime dependencies & create runtime user\nRUN apk --no-cache --no-progress add ca-certificates openssl libffi openblas libstdc++ \\\n \t&& chmod +x /usr/local/sbin/tini && mkdir -p /opt \\\n \t&& adduser -D yake -h /opt/yake -s /bin/sh\n\n# Switch to user context\nUSER yake\nWORKDIR /opt/yake\n\n# Copy the virtual environment from the previous image\nCOPY --from=builder /opt/venv /opt/venv\n\n# Activate the virtual environment\nENV PATH=\"/opt/venv/bin:$PATH\" \\\n\tVIRTUAL_ENV=\"/opt/venv\"\n\n# Set container labels\nLABEL name=\"osat-contrib-yake\" \\\n      version=\"$VERSION\" \\\n      build=\"$BUILD\" \\\n      architecture=\"x86_64\" \\\n      build_date=\"$NOW\" \\\n      vendor=\"osat\" \\\n      url=\"https://github.com/osat.io/osat-docker\" \\\n      summary=\"SeoZ contrib - YAKE\" \\\n      description=\"SeoZ contrib - YAKE\" \\\n      vcs-type=\"git\" \\\n      vcs-url=\"https://github.com/osat.io/osat-docker\" \\\n      vcs-ref=\"$VERSION\" \\\n      distribution-scope=\"public\"\n\n# Copy server startup script\nCOPY ./api.py /opt/yake\n\nENV YAKE_PORT=${YAKE_PORT:-\"5000\"} \\\n\tYAKE_HOST=${YAKE_HOST:-\"0.0.0.0\"}\n\n# Container configuration\n# Expose server port\nEXPOSE \"$YAKE_PORT\"\n\n# Set default command\nENTRYPOINT [\"tini\", \"-g\", \"--\"]\nCMD [ \"python\", \"api.py\" ]\n"
}