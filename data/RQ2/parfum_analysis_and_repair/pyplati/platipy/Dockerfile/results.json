{
  "startTime": 1674252418002,
  "endTime": 1674252419229,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 20,
        "columnEnd": 167
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 20,
        "columnEnd": 167
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:20.04\n\nRUN apt-get update; DEBIAN_FRONTEND=\"noninteractive\" apt-get --no-install-recommends install -y redis-server git python3-pip libgl1-mesa-glx libsm6 libxext6 libxrender-dev libglib2.0-0 pandoc && rm -rf /var/lib/apt/lists/*;\n\nRUN ln -s /usr/bin/python3 /usr/bin/python\nRUN pip install --no-cache-dir --upgrade pip\n\nWORKDIR /home/service\n\nCOPY requirements.txt requirements.txt\nRUN pip install --no-cache-dir -r requirements.txt\n\nCOPY requirements-dev.txt requirements-dev.txt\nRUN pip install --no-cache-dir -r requirements-dev.txt\n\nCOPY requirements-backend.txt requirements-backend.txt\nRUN pip install --no-cache-dir -r requirements-backend.txt\n\n# COPY ./platipy platipy\nRUN pip install --no-cache-dir platipy\n\nCOPY entrypoint.sh /entrypoint.sh\n\nRUN chmod +x /entrypoint.sh\n\nENV PYTHONPATH \"/home/service\"\n\nENV LANG C.UTF-8\nENV LC_ALL C.UTF-8\n\nENV WORK C.UTF-8\n\nARG dicom_listen_port=7777\n\nENV DICOM_LISTEN_PORT ${dicom_listen_port}\nENV DICOM_LISTEN_AET PLATIPY_SERVICE\n\nRUN printf '#!/bin/bash\\npython3 -m platipy.backend.manage $@\\n' > /usr/bin/manage && chmod +x /usr/bin/manage\n\nEXPOSE 8000\nEXPOSE ${dicom_listen_port}\n\nENV WORK /data\nRUN mkdir /logs /data && chmod 0777 /logs /data\n\nENTRYPOINT [\"/entrypoint.sh\"]\n\nCMD [ \"manage\" ]\n"
}