diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/jlesage/docker-handbrake/Dockerfile.nightly b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/jlesage/docker-handbrake/Dockerfile.nightly/repaired.Dockerfile
index e22d57b..332050f 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/jlesage/docker-handbrake/Dockerfile.nightly
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/jlesage/docker-handbrake/Dockerfile.nightly/repaired.Dockerfile
@@ -102,39 +102,39 @@ RUN \
     # Download x264 sources.
     echo "Downloading x264 sources..." && \
     mkdir x264 && \
-    curl -# -L ${X264_URL} | tar xz --strip 1 -C x264 && \
+    curl -f -# -L ${X264_URL} | tar xz --strip 1 -C x264 && \
     # Download libva sources.
     echo "Downloading libva sources..." && \
     mkdir libva && \
-    curl -# -L ${LIBVA_URL} | tar xj --strip 1 -C libva && \
+    curl -f -# -L ${LIBVA_URL} | tar xj --strip 1 -C libva && \
     # Download Intel VAAPI driver sources.
     echo "Downloading Intel VAAPI driver sources..." && \
     mkdir intel-vaapi-driver && \
-    curl -# -L ${INTEL_VAAPI_DRIVER_URL} | tar xj --strip 1 -C intel-vaapi-driver && \
+    curl -f -# -L ${INTEL_VAAPI_DRIVER_URL} | tar xj --strip 1 -C intel-vaapi-driver && \
     # Download gmmlib sources.
     echo "Downloading gmmlib sources..." && \
     mkdir gmmlib && \
-    curl -# -L ${GMMLIB_URL} | tar xz --strip 1 -C gmmlib && \
+    curl -f -# -L ${GMMLIB_URL} | tar xz --strip 1 -C gmmlib && \
     # Download Intel Media driver.
     echo "Downloading Intel Media driver sources..." && \
     mkdir intel-media-driver && \
-    curl -# -L ${INTEL_MEDIA_DRIVER_URL} | tar xz --strip 1 -C intel-media-driver && \
+    curl -f -# -L ${INTEL_MEDIA_DRIVER_URL} | tar xz --strip 1 -C intel-media-driver && \
     # Download Intel Media SDK sources.
     echo "Downloading Intel Media SDK sources..." && \
     mkdir MediaSDK && \
-    curl -# -L ${INTEL_MEDIA_SDK_URL} | tar xz --strip 1 -C MediaSDK && \
+    curl -f -# -L ${INTEL_MEDIA_SDK_URL} | tar xz --strip 1 -C MediaSDK && \
     # Download Intel OneVPL GPU Runtime sources.
     echo "" && \
     mkdir oneVPL-intel-gpu && \
-    curl -# -L ${INTEL_ONEVPL_GPU_RUNTIME_URL} | tar xz --strip 1 -C oneVPL-intel-gpu && \
+    curl -f -# -L ${INTEL_ONEVPL_GPU_RUNTIME_URL} | tar xz --strip 1 -C oneVPL-intel-gpu && \
     # Download HandBrake sources.
     echo "Downloading HandBrake sources..." && \
-    if echo "${HANDBRAKE_URL}" | grep -q '\.git$'; then \
+    if echo "${HANDBRAKE_URL}" | grep -q '\.git$';then \
         git clone ${HANDBRAKE_URL} HandBrake && \
         git -C HandBrake checkout "${HANDBRAKE_VERSION}"; \
     else \
         mkdir HandBrake && \
-        curl -# -L ${HANDBRAKE_URL} | tar xj --strip 1 -C HandBrake; \
+        curl -f -# -L ${HANDBRAKE_URL} | tar xj --strip 1 -C HandBrake; \
     fi && \
     # Compile x264.
     echo "Compiling x264..." && \
@@ -144,7 +144,7 @@ RUN \
     else \
         X264_CMAKE_OPTS=--enable-debug; \
     fi && \
-    CFLAGS="${CFLAGS/-Os/}" ./configure \
+    CFLAGS="${CFLAGS/-Os/}" ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
         --prefix=/usr \
         --enable-shared \
         --disable-static \
@@ -158,7 +158,7 @@ RUN \
     # Compile libva.
     echo "Compiling libva..." && \
     cd libva && \
-    ./configure \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
         --prefix=/usr \
         --mandir=/tmp/libva-man \
         --infodir=/tmp/liva-info \
@@ -176,7 +176,7 @@ RUN \
     # Compile Intel VAAPI driver.
     echo "Compiling Intel VAAPI driver..." && \
     cd intel-vaapi-driver && \
-    ./configure && \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" && \
     make -j$(nproc) && \
     make install && \
     cd .. && \
@@ -201,7 +201,7 @@ RUN \
     # Compile Intel Media SDK.
     echo "Compiling Intel Media SDK..." && \
     cd MediaSDK && \
-    curl -# -L https://raw.githubusercontent.com/jlesage/docker-handbrake/master/intel-media-sdk-debug-no-assert.patch | patch -p1 && \
+    curl -f -# -L https://raw.githubusercontent.com/jlesage/docker-handbrake/master/intel-media-sdk-debug-no-assert.patch | patch -p1 && \
     mkdir build && \
     cd build && \
     if [ "${HANDBRAKE_DEBUG_MODE}" = "none" ]; then \
@@ -243,7 +243,7 @@ RUN \
     # Compile HandBrake.
     echo "Compiling HandBrake..." && \
     cd HandBrake && \
-    ./configure --prefix=/usr \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/usr \
                 --debug=$HANDBRAKE_DEBUG_MODE \
                 --disable-gtk-update-checks \
                 --enable-fdk-aac \
@@ -282,7 +282,7 @@ RUN \
 # NOTE: YAD is compiled manually because the version on the Alpine repository
 #       pulls too much dependencies.
 RUN \
-    # Install packages needed by the build.
+
     add-pkg --virtual build-dependencies \
         build-base \
         curl \
@@ -297,10 +297,10 @@ RUN \
     # Download.
     mkdir yad && \
     echo "Downloading YAD package..." && \
-    curl -# -L ${YAD_URL} | tar xJ --strip 1  -C yad && \
+    curl -f -# -L ${YAD_URL} | tar xJ --strip 1  -C yad && \
     # Compile.
     cd yad && \
-    ./configure \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
         --prefix=/usr \
         --enable-standalone \
         --disable-icon-browser \