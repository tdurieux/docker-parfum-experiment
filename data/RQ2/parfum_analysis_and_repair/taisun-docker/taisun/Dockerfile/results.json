{
  "startTime": 1674250070301,
  "endTime": 1674250071350,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 1,
        "columnEnd": 27
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 1,
        "columnEnd": 23
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 1,
        "columnEnd": 16
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 40,
        "lineEnd": 41,
        "columnStart": 1,
        "columnEnd": 20
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM lsiobase/alpine:3.11 as buildstage\n\nARG COMPOSE_VERSION=1.24.1\nARG PYINSTALLER_VERSION=v3.6\n\nRUN \\\n echo \"**** install build deps ****\" && \\\n apk add --no-cache \\\n\tcurl \\\n\tg++ \\\n\tgcc \\\n\tgit \\\n\tlibc-dev \\\n\tlibffi-dev \\\n\tmake \\\n\tmusl-dev \\\n\topenssl-dev \\\n\tpython3 \\\n\tpython3-dev \\\n\tzlib-dev\n\nRUN \\\n echo \"**** build pyinstaller ****\" && \\\n git clone --depth 1 \\\n\t--single-branch \\\n\t--branch ${PYINSTALLER_VERSION} \\\n\thttps://github.com/pyinstaller/pyinstaller.git \\\n\t/tmp/pyinstaller && \\\n cd /tmp/pyinstaller/bootloader && \\\n CFLAGS=\"-Wno-stringop-overflow -Wno-error=stringop-truncation\" python3 \\\n\t./waf configure --no-lsb all && \\\n pip3 install --no-cache-dir ..\n\n\nRUN \\\n echo \"**** build compose ****\" && \\\n cd /tmp && \\\n git clone https://github.com/docker/compose.git && \\\n cd compose && \\\n git checkout ${COMPOSE_VERSION} && \\\n pip3 install --no-cache-dir \\\n\t-r requirements.txt && \\\n ./script/build/write-git-sha > compose/GITSHA && \\\n pyinstaller docker-compose.spec && \\\n mv dist/docker-compose /\n\n\n# runtime stage\nFROM lsiobase/cloud9:alpine\nMAINTAINER Ryan Kuba <ryankuba@gmail.com>\n# Set Label info\nARG BUILD_DATE\nLABEL build_version=\"Build-date:- ${BUILD_DATE}\"\n\nRUN \\\n echo \"**** install build packages ****\" && \\\n apk add --no-cache --virtual=build-dependencies \\\n\tcurl \\\n\tnodejs-npm && \\\n echo \"**** install runtime packages ****\" && \\\n apk add --no-cache \\\n\tdocker-cli \\\n\texpect \\\n\tgit \\\n\tlibcap \\\n\tnodejs \\\n\tsudo \\\n\ttcl && \\\n echo \"**** install Taisun ****\" && \\\n git clone https://github.com/Taisun-Docker/taisun.git /code && \\\n echo \"**** install node modules ****\" && \\\n npm install --prefix /code && \\\n npm install -g nodemon && \\\n mv /usr/bin/git /usr/bin/gitbin && \\\n echo \"**** cleanup ****\" && \\\n addgroup -g 100 docker && \\\n apk del --purge \\\n\tbuild-dependencies && \\\n rm -rf \\\n\t/tmp/* && npm cache clean --force;\n\n# copy local files\nCOPY root/ /\nCOPY ./git /usr/bin/git\nCOPY --from=buildstage /docker-compose /usr/local/bin/\n\n#App runs on port 3000 development interface on port 8000\nEXPOSE 3000\nEXPOSE 8000\n"
}