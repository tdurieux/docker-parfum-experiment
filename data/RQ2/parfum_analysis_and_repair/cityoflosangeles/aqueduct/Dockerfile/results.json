{
  "startTime": 1674253485042,
  "endTime": 1674253486261,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 114
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 67,
        "lineEnd": 114,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 125,
        "lineEnd": 125,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 127,
        "lineEnd": 127,
        "columnStart": 5,
        "columnEnd": 26
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 141,
        "lineEnd": 141,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 17,
        "columnStart": 22,
        "columnEnd": 5
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 22,
        "columnEnd": 478
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 22,
        "columnEnd": 66
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 17,
        "columnStart": 22,
        "columnEnd": 5
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 22,
        "columnEnd": 478
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 22,
        "columnEnd": 66
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM continuumio/miniconda3:4.8.2\n\n# Install inkscape and xelatex for notebook conversion to PDF,\n# graphviz for ibis visualizations.\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n  bash-completion \\\n  gcc \\\n  graphviz \\\n  gnupg2 \\\n  inkscape \\\n  openssh-client \\\n  pandoc \\\n  texlive-fonts-recommended \\\n  texlive-generic-recommended \\\n  texlive-xetex \\\n  unixodbc-dev \\\n  unzip \\\n  vim && rm -rf /var/lib/apt/lists/*;\n\n\n# Some dependencies necessary to get rendering working\n# for headless chrome/chromium.\nRUN apt-get update && apt-get install --no-install-recommends -y gconf-service libasound2 libatk1.0-0 libc6 libcairo2 libcups2 libdbus-1-3 libexpat1 libfontconfig1 libgcc1 libgconf-2-4 libgdk-pixbuf2.0-0 libglib2.0-0 libgtk-3-0 libnspr4 libpango-1.0-0 libpangocairo-1.0-0 libstdc++6 libx11-6 libx11-xcb1 libxcb1 libxcomposite1 libxcursor1 libxdamage1 libxext6 libxfixes3 libxi6 libxrandr2 libxrender1 libxss1 libxtst6 ca-certificates fonts-liberation libappindicator1 libnss3 lsb-release xdg-utils wget && rm -rf /var/lib/apt/lists/*;\n\n\n# Install conda dependencies early, as it takes a long time.\nRUN conda config --set channel_priority strict\nRUN conda install -c conda-forge \\\n  cartopy \\\n  dask \\\n  distributed \\\n  fsspec \\\n  geopandas>=0.8 \\\n  intake \\\n  intake-parquet \\\n  matplotlib \\\n  nltk \\\n  nodejs \\\n  numpy \\\n  osmnx \\\n  pandas \\\n  pyodbc \\\n  python-graphviz \\\n  s3fs==0.4.2 \\\n  scikit-learn \\\n  scipy \\\n  statsmodels \\\n  xlrd\n\n# Install Oracle Instant Client drivers.\nRUN wget https://download.oracle.com/otn_software/linux/instantclient/19600/instantclient-basic-linux.x64-19.6.0.0.0dbru.zip -O instant_client.zip\nRUN unzip instant_client.zip && mkdir -p /opt/oracle && mv instantclient_19_6 /opt/oracle/\nRUN echo /opt/oracle/instantclient_19_6 > /etc/ld.so.conf.d/oracle-instantclient.conf && ldconfig\nRUN rm instant_client.zip\n\n# Install SQL Server ODBC Driver\nRUN curl -f https://packages.microsoft.com/keys/microsoft.asc | apt-key add -\nRUN curl -f https://packages.microsoft.com/config/ubuntu/18.04/prod.list > /etc/apt/sources.list.d/mssql-release.list\nRUN apt-get update && ACCEPT_EULA=Y apt-get --no-install-recommends install -y msodbcsql17 && rm -rf /var/lib/apt/lists/*;\n\n# Dependencies for altair_saver, conda packages are currently broken.\nRUN npm install -g --unsafe vega vega-cli vega-lite canvas && npm cache clean --force;\n\n# Install puppeteer-related notebook conversion.\nRUN pip install --no-cache-dir notebook-as-pdf && pyppeteer-install\n\n# Install some python-only packages using pip\nRUN pip install --no-cache-dir \\\n  altair \\\n  altair_saver \\\n  arcgis \\\n  awscli \\\n  beautifulsoup4 \\\n  black \\\n  boto3 \\\n  census-data-downloader \\\n  CensusData \\\n  contextily \\\n  cookiecutter \\\n  cx_Oracle \\\n  descartes \\\n  flake8 \\\n  folium \\\n  geoalchemy2 \\\n  geocoder \\\n  geopy \\\n  html5lib \\\n  ibis-framework==1.3 \\\n  intake-civis[ibis,geospatial] \\\n  intake-dcat \\\n  intake_geopandas \\\n  git+https://github.com/intake/intake-sql.git@7709beb#egg=intake_sql \\\n  ipyleaflet \\\n  ipywidgets \\\n  isort \\\n  jupyterlab \\\n  kmodes \\\n  lxml \\\n  mapboxgl \\\n  markov_clustering \\\n  mypy \\\n  openpyxl \\\n  papermill \\\n  partridge \\\n  polyline \\\n  psycopg2 \\\n  requests \\\n  sodapy \\\n  sqlalchemy \\\n  sqlalchemy-redshift \\\n  tableauserverclient \\\n  usaddress \\\n  voila \\\n  xlrd \\\n  xlsxwriter\n\nRUN jupyter labextension install --no-build @jupyter-voila/jupyterlab-preview\nRUN jupyter labextension install --no-build @jupyter-widgets/jupyterlab-manager\nRUN jupyter labextension install --no-build @jupyterlab/geojson-extension\nRUN jupyter lab build --dev-build=False --debug && jupyter lab clean\n\n# Civis-related\nENV DEFAULT_KERNEL python3\n# civis-jupyter-notebook is heavy handed with dependencies.\n# If we want a different version of pandas, we have to reinstall it afterwards.\nRUN pip install --no-cache-dir civis-jupyter-notebook && \\\n     civis-jupyter-notebooks-install && \\\n     pip install --no-cache-dir -U pandas\n\n\nENV TINI_VERSION v0.16.1\nADD https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini /tini\nRUN chmod +x /tini\nRUN echo `which jupyter-lab`\n\nEXPOSE 8888\nWORKDIR /root/work\nENTRYPOINT [\"/tini\", \"--\"]\n\n# Install the local utils package\nCOPY civis-aqueduct-utils /tmp/civis-aqueduct-utils\nRUN pip install --no-cache-dir /tmp/civis-aqueduct-utils && \\\n      jupyter nbextension install --sys-prefix --py civis_aqueduct_utils && \\\n      jupyter nbextension enable --sys-prefix --py civis_aqueduct_utils && \\\n      rm -r /tmp/civis-aqueduct-utils\n\n# Environment-related\nCOPY custom.sh /tmp/custom.sh\nRUN cat /tmp/custom.sh >> /root/.bashrc\n\n# Copy the aws-configure script\nCOPY aws-configure /usr/local/bin/\nRUN chmod +x /usr/local/bin/aws-configure\n\n# Copy the start script\nCOPY start.sh /usr/local/bin/\nRUN chmod +x /usr/local/bin/start.sh\n\nCMD [\"start.sh\"]\n"
}