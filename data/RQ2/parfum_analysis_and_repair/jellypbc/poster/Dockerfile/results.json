{
  "startTime": 1674220862590,
  "endTime": 1674220863419,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "gemUpdateSystemRmRootGem",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "gemUpdateNoDocument",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 23
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 20,
        "columnEnd": 36
      }
    }
  ],
  "repairedDockerfile": "ARG RUBY_VERSION\nFROM ruby:$RUBY_VERSION\n\nARG PG_MAJOR\nARG NODE_MAJOR\nARG BUNDLER_VERSION\nARG YARN_VERSION\nARG RAILS_ENV\n\nENV RAILS_ENV=${RAILS_ENV} \\\n  SECRET_KEY_BASE=foo \\\n  RAILS_SERVE_STATIC_FILES=true \\\n  RAILS_LOG_TO_STDOUT=true\n\nWORKDIR /app\n\n# Add PostgreSQL to sources list\nRUN curl -f -sSL https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add - \\\n  && echo 'deb http://apt.postgresql.org/pub/repos/apt/ stretch-pgdg main' $PG_MAJOR > /etc/apt/sources.list.d/pgdg.list\n\n# Add NodeJS to sources list\nRUN curl -f -sL https://deb.nodesource.com/setup_$NODE_MAJOR.x | bash -\n\n# Add Yarn to the sources list\nRUN curl -f -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \\\n  && echo 'deb http://dl.yarnpkg.com/debian/ stable main' > /etc/apt/sources.list.d/yarn.list\n\nCOPY .docker/Aptfile /tmp/Aptfile\nRUN apt-get update -qq && DEBIAN_FRONTEND=noninteractive apt-get -yq dist-upgrade && \\\n  DEBIAN_FRONTEND=noninteractive apt-get install -yq --no-install-recommends \\\n    build-essential \\\n    postgresql-client-$PG_MAJOR \\\n    netcat \\\n    nodejs \\\n    yarn=$YARN_VERSION-1 \\\n    $(cat /tmp/Aptfile | xargs) && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* && \\\n    truncate -s 0 /var/log/*log\nENV NOKOGIRI_USE_SYSTEM_LIBRARIES 1\n\n# Configure bundler and PATH\nENV LANG=C.UTF-8 \\\n  BUNDLE_JOBS=4 \\\n  BUNDLE_RETRY=3\n\n# Install gems\nADD Gemfile* /app/\nRUN mkdir -p /usr/local/etc \\\n  && { \\\n    echo 'install: --no-document'; \\\n    echo 'update: --no-document'; \\\n  } >> /usr/local/etc/gemrc;\nRUN gem update --system && \\\n    gem install bundler:$BUNDLER_VERSION && rm -rf /root/.gem;\n\nRUN bundle config --global frozen 1 \\\n && bundle install --binstubs -j4 --retry 3\n\n# Install yarn packages\nCOPY package.json yarn.lock /app/\nRUN yarn install && yarn cache clean;\n\n# Add the Rails app\nADD . /app\n\nWORKDIR /app\n\nEXPOSE 3000\n\nRUN date -u > BUILD_TIME\n\n# Start up\n# CMD [\".docker/startup.sh\"]\n"
}