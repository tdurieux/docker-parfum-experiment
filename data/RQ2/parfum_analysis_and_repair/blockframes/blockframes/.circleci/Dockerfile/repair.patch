diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/blockframes/blockframes/.circleci/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/blockframes/blockframes/.circleci/Dockerfile/repaired.Dockerfile
index 0a9006c..fc2c35b 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/blockframes/blockframes/.circleci/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/blockframes/blockframes/.circleci/Dockerfile/repaired.Dockerfile
@@ -1,4 +1,4 @@
-ï»¿# Our ci container:
+# Our ci container:
 #   - use the regular, simple, circleci node image
 #   - add libraries required by cypress
 #
@@ -9,22 +9,22 @@
 FROM circleci/node:16-browsers
 
 # Required cypress packages
-RUN sudo apt-get -y install xvfb libgtk2.0-0 libnotify-dev libgconf-2-4 libnss3 libxss1 libasound2
+RUN sudo apt-get -y --no-install-recommends install xvfb libgtk2.0-0 libnotify-dev libgconf-2-4 libnss3 libxss1 libasound2 && rm -rf /var/lib/apt/lists/*;
 
 # Add vim for debugging purposes
-RUN sudo apt-get update && sudo apt-get -y install vim
+RUN sudo apt-get update && sudo apt-get -y --no-install-recommends install vim && rm -rf /var/lib/apt/lists/*;
 
 ## Install Java
 RUN sudo apt-get update && \
-    sudo apt-get install -y openjdk-11-jdk && \
-    sudo apt-get install -y ant && \
-    sudo apt-get clean;
+    sudo apt-get install --no-install-recommends -y openjdk-11-jdk && \
+    sudo apt-get install --no-install-recommends -y ant && \
+    sudo apt-get clean; rm -rf /var/lib/apt/lists/*;
 
 # Fix certificate issues
 RUN sudo apt-get update && \
-    sudo apt-get install ca-certificates-java && \
+    sudo apt-get install -y --no-install-recommends ca-certificates-java && \
     sudo apt-get clean && \
-    sudo update-ca-certificates -f;
+    sudo update-ca-certificates -f; rm -rf /var/lib/apt/lists/*;
 
 # Setup JAVA_HOME -- useful for docker commandline
 ENV JAVA_HOME /usr/lib/jvm/java-11-openjdk-amd64/
@@ -33,17 +33,17 @@ RUN export JAVA_HOME
 # Install node and npm
 RUN sudo npm install -g n && \
     sudo n 16.14.2 && \
-    sudo npm install npm@8.5.2 -g
+    sudo npm install npm@8.5.2 -g && npm cache clean --force;
 
 ## Install firebase and the emulator (requires java)
-RUN sudo npm install --global firebase-tools
+RUN sudo npm install --global firebase-tools && npm cache clean --force;
 RUN firebase setup:emulators:firestore
 
 ## Install gcloud and gsutil for bucket backup facilities
 RUN echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
-RUN sudo apt-get install apt-transport-https ca-certificates gnupg -q -y
-RUN curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key --keyring /usr/share/keyrings/cloud.google.gpg add -
-RUN sudo apt-get update -q -y && sudo apt-get install google-cloud-sdk -q -y
+RUN sudo apt-get install --no-install-recommends apt-transport-https ca-certificates gnupg -q -y && rm -rf /var/lib/apt/lists/*;
+RUN curl -f https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key --keyring /usr/share/keyrings/cloud.google.gpg add -
+RUN sudo apt-get update -q -y && sudo apt-get install --no-install-recommends google-cloud-sdk -q -y && rm -rf /var/lib/apt/lists/*;
 RUN gcloud config set pass_credentials_to_gsutil true
 
 # Used in CI