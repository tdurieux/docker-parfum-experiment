{
  "startTime": 1674246249754,
  "endTime": 1674246251160,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 7,
        "columnEnd": 67
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 7,
        "columnEnd": 64
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 70,
        "columnEnd": 125
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 7,
        "columnEnd": 69
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 22,
        "columnEnd": 57
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 22,
        "columnEnd": 57
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:18.2.0-buster-slim as base\n\n# install libmongocrypt\n# this can be removed if the projects does not target a support for CSFLE\nRUN apt-get update  \\\n    && apt-get install --no-install-recommends -y curl gnupg ca-certificates apt-transport-https dumb-init \\\n    && curl -f -L https://www.mongodb.org/static/pgp/libmongocrypt.asc | gpg --batch --dearmor >/etc/apt/trusted.gpg.d/libmongocrypt.gpg \\\n    && echo \"deb https://libmongocrypt.s3.amazonaws.com/apt/debian buster/libmongocrypt/1.0 main\" | tee /etc/apt/sources.list.d/libmongocrypt.list \\\n    && curl -f -L https://www.mongodb.org/static/pgp/server-5.0.asc | apt-key add - \\\n    && echo \"deb http://repo.mongodb.com/apt/debian buster/mongodb-enterprise/5.0 main\" | tee /etc/apt/sources.list.d/mongodb-enterprise.list \\\n    && apt-get update \\\n    && apt-get install --no-install-recommends -y libmongocrypt-dev mongodb-enterprise-cryptd \\\n    && rm -rf /var/lib/apt/lists/*\n\n# set production environment for node\nENV NODE_ENV=production\n\n# create app directory\nWORKDIR /usr/src/app\n\nFROM base as dependencies\n\n# install build dependencies\nRUN apt-get update && apt-get install --no-install-recommends python3 make g++ -y && rm -rf /var/lib/apt/lists/*;\n\n# install node prune\nRUN curl -sf https://gobinaries.com/tj/node-prune | sh\n\n# copy everything we need from the builder to install dependencies\nCOPY --chown=node:node package.json yarn.lock .yarnrc.yml ./\nCOPY --chown=node:node .yarn ./.yarn\n\n# install dependencies with frozen lockfile\n# then clean with node prune\nRUN yarn install \\\n    && node-prune \\\n    && yarn cache clean\n\nFROM base\n\n# copy dependencies\nCOPY --from=dependencies /usr/src/app .\n\n# copy everything else\nCOPY --chown=node:node ./public ./public\nCOPY --chown=node:node ./*.json ./*.js ./*.json ./*.map ./\n\n# set the version\nARG VERSION\nENV VERSION=${VERSION:-0.0.0-development}\n\n# set the sentry release if any\nARG SENTRY_RELEASE\nENV APP_SENTRY_RELEASE=$SENTRY_RELEASE\n\n# set user\nUSER node\n\n# start command using the next entrypoint\nCMD [\"dumb-init\", \"node\", \"server.js\"]\n"
}