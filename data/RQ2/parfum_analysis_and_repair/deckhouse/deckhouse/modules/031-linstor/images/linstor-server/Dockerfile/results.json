{
  "startTime": 1674249009669,
  "endTime": 1674249010905,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 100,
        "lineEnd": 100,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 60
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 103,
        "lineEnd": 103,
        "columnStart": 4,
        "columnEnd": 60
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 115,
        "lineEnd": 115,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 92
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 139
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 85,
        "lineEnd": 85,
        "columnStart": 4,
        "columnEnd": 146
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 136,
        "lineEnd": 136,
        "columnStart": 2,
        "columnEnd": 111
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 138,
        "lineEnd": 160,
        "columnStart": 2,
        "columnEnd": 17
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 173,
        "lineEnd": 173,
        "columnStart": 4,
        "columnEnd": 95
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG BASE_DEBIAN_BULLSEYE\nARG BASE_GOLANG_18_BULLSEYE\n\nFROM $BASE_DEBIAN_BULLSEYE as linstor-builder\n\nARG LINSTOR_GITREPO=https://github.com/LINBIT/linstor-server\nARG LINSTOR_VERSION=1.18.2\n\nENV DEBIAN_FRONTEND noninteractive\nRUN apt-get update \\\n && apt-get -y --no-install-recommends install build-essential debhelper git default-jdk-headless gradle python3-all \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n\nRUN git clone ${LINSTOR_GITREPO} /linstor-server\nWORKDIR /linstor-server\nRUN git checkout v${LINSTOR_VERSION}\n\nRUN git config --global url.\"https://github.com/\".insteadOf git://github.com/ \\\n && make debrelease \\\n && rm -rf /root/.gradle/caches/ \\\n && mv linstor-server-${LINSTOR_VERSION}.tar.gz /linstor-server_$(echo ${LINSTOR_VERSION} | tr '-' '~').orig.tar.gz \\\n && tar -C / -xvf /linstor-server_$(echo ${LINSTOR_VERSION} | tr '-' '~').orig.tar.gz && rm /linstor-server_$( echo ${LINSTOR_VERSION} | tr '-' '~').orig.tar.gz\n\nWORKDIR /linstor-server-${LINSTOR_VERSION}\nRUN dpkg-buildpackage -us -uc\n\n# ------------------------------------------------------------------------------\n\nFROM $BASE_DEBIAN_BULLSEYE as client-builder\n\nARG API_GITREPO=https://github.com/LINBIT/linstor-api-py\nARG API_VERSION=1.13.1\nARG CLIENT_GITREPO=https://github.com/LINBIT/linstor-client\nARG CLIENT_VERSION=1.13.1\n\nENV DEBIAN_FRONTEND noninteractive\nRUN apt-get update \\\n && apt-get -y --no-install-recommends install build-essential debhelper git python3-all python3-setuptools help2man bash-completion docbook-xsl xsltproc dh-python \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n\nRUN git clone --recurse-submodules ${API_GITREPO} /linstor-api-py\nWORKDIR /linstor-api-py\nRUN git checkout v${API_VERSION} \\\n && make debrelease \\\n && mv ./dist/python-linstor-${API_VERSION}.tar.gz ../python-linstor_${API_VERSION}.orig.tar.gz \\\n && tar -C / -xvf /python-linstor_${API_VERSION}.orig.tar.gz && rm /python-linstor_${API_VERSION}.orig.tar.gz\nWORKDIR /python-linstor-${API_VERSION}\nRUN dpkg-buildpackage -us -uc\n\nRUN rm -rf /linstor-api-py \\\n && mv /python-linstor-${API_VERSION} /linstor-api-py\n\nRUN git clone ${CLIENT_GITREPO} /linstor-client\nWORKDIR /linstor-client\nRUN git checkout v${CLIENT_VERSION} \\\n && make debrelease \\\n && mv dist/linstor-client-${CLIENT_VERSION}.tar.gz /linstor-client_${CLIENT_VERSION}.orig.tar.gz \\\n && tar -C / -xvf /linstor-client_${CLIENT_VERSION}.orig.tar.gz && rm /linstor-client_${CLIENT_VERSION}.orig.tar.gz\nWORKDIR /linstor-client-${CLIENT_VERSION}\nRUN dpkg-buildpackage -us -uc\n\n# ------------------------------------------------------------------------------\n\nFROM $BASE_GOLANG_18_BULLSEYE as k8s-await-election-builder\n\nARG K8S_AWAIT_ELECTION_GITREPO=https://github.com/LINBIT/k8s-await-election\nARG K8S_AWAIT_ELECTION_VERSION=0.3.1\n\nRUN git clone ${K8S_AWAIT_ELECTION_GITREPO} /usr/local/go/k8s-await-election/ \\\n && cd /usr/local/go/k8s-await-election \\\n && git reset --hard v${K8S_AWAIT_ELECTION_VERSION} \\\n && make \\\n && mv ./out/k8s-await-election-amd64 /k8s-await-election\n\n# ------------------------------------------------------------------------------\n\nFROM $BASE_DEBIAN_BULLSEYE as utils-builder\n\nARG UTILS_GITREPO=https://github.com/LINBIT/drbd-utils\nARG UTILS_VERSION=9.21.1\n\nENV DEBIAN_FRONTEND noninteractive\nRUN apt-get update \\\n && apt-get -y --no-install-recommends install build-essential debhelper git flex clitest xsltproc locales libxml2-utils po4a bash-completion docbook-xsl udev asciidoctor \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n\nRUN git clone --recurse-submodules ${UTILS_GITREPO} /drbd-utils\nWORKDIR /drbd-utils\nRUN sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen && \\\n    locale-gen\nENV LANG en_US.UTF-8\nENV LANGUAGE en_US:en\nENV LC_ALL en_US.UTF-8\nRUN git checkout v${UTILS_VERSION} \\\n && git submodule update --init --force --checkout \\\n && install /dev/null /usr/local/bin/lbvers.py \\\n && ./autogen.sh \\\n && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n && make debrelease VERSION=${UTILS_VERSION} \\\n && mv drbd-utils-${UTILS_VERSION}.tar.gz ../drbd-utils_${UTILS_VERSION}.orig.tar.gz \\\n && tar -C / -xvf ../drbd-utils_${UTILS_VERSION}.orig.tar.gz && rm ../drbd-utils_${UTILS_VERSION}.orig.tar.gz\nWORKDIR /drbd-utils-${UTILS_VERSION}\nRUN dpkg-buildpackage -us -uc\n\nARG THIN_SEND_RECV_GITREPO=https://github.com/LINBIT/thin-send-recv\nARG THIN_SEND_RECV_VERSION=1.0.1\n\nRUN git clone --recurse-submodules ${THIN_SEND_RECV_GITREPO} /thin-send-recv\nWORKDIR /thin-send-recv\nRUN git checkout v${THIN_SEND_RECV_VERSION} \\\n && make debrelease \\\n && mv thin-send-recv-${THIN_SEND_RECV_VERSION}.tar.gz ../thin-send-recv_${THIN_SEND_RECV_VERSION}.orig.tar.gz \\\n && tar -C / -xvf ../thin-send-recv_${THIN_SEND_RECV_VERSION}.orig.tar.gz && rm ../thin-send-recv_${THIN_SEND_RECV_VERSION}.orig.tar.gz\nWORKDIR /thin-send-recv-${THIN_SEND_RECV_VERSION}\nRUN dpkg-buildpackage -us -uc\n\n# ------------------------------------------------------------------------------\n\nFROM $BASE_DEBIAN_BULLSEYE\nARG PIRAEUS_COMMIT_REF=b428c87889d1d367a967fab7aade288610942113\n\nCOPY --from=linstor-builder /linstor-common_*.deb /linstor-controller_*.deb /linstor-satellite_*.deb /packages/\nCOPY --from=client-builder /python-linstor_*.deb /linstor-client_*.deb /packages/\nCOPY --from=utils-builder /python-linstor_*.deb /drbd-utils_*.deb /thin-send-recv_*.deb /packages/\nCOPY --from=k8s-await-election-builder /k8s-await-election /usr/bin/k8s-await-election\n\n\n# Source https://github.com/piraeusdatastore/piraeus/blob/master/dockerfiles/piraeus-server/Dockerfile\nRUN { echo 'APT::Install-Recommends \"false\";' ; echo 'APT::Install-Suggests \"false\";' ; } > /etc/apt/apt.conf.d/99_piraeus && \\\n\t# Enable contrib repos for zfsutils \\\n\t sed -r -i 's/^deb(.*)$/deb\\1 contrib/' /etc/apt/sources.list && \\\n   apt-get update && \\\n\t# Install useful utilities and general dependencies\n\t\tapt-get install --no-install-recommends -y udev drbd-utils jq net-tools iputils-ping iproute2 dnsutils netcat sysstat curl util-linux && \\\n\t# Install dependencies for optional features \\\n\t\tapt-get install --no-install-recommends -y \\\n\t# cryptsetup: luks layer\n\t\t\tcryptsetup \\\n\t# e2fsprogs: LINSTOR can create file systems \\\n\t\t\te2fsprogs \\\n\t# lsscsi: exos layer \\\n\t\t\tlsscsi \\\n    # lvm2: manage lvm storage pools \\\n      lvm2 \\\n\t# multipath-tools: exos layer \\\n\t\t\tmultipath-tools \\\n\t# nvme-cli: nvme layer\n\t\t\tnvme-cli \\\n\t# procps: used by LINSTOR to find orphaned send/receive processes \\\n\t\t\tprocps \\\n\t# socat: used with thin-send-recv to send snapshots to another LINSTOR cluster\n\t\t\tsocat \\\n\t# xfsprogs: LINSTOR can create file systems; xfs deps \\\n\t\t\txfsprogs \\\n\t# zstd: used with thin-send-recv to send snapshots to another LINSTOR cluster \\\n\t\t\tzstd \\\n\t# zfsutils-linux: for zfs storage pools \\\n\t\t\tzfsutils-linux \\\n\t\t&& \\\n\t# remove udev, no need for it in the container \\\n\t apt-get remove -y udev \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* \\\n && ln -sf /proc/mounts /etc/mtab \\\n && sed -i 's/udev_rules.*=.*/udev_rules=0/ ; s/udev_sync.*=.*/udev_sync=0/ ; s/obtain_device_list_from_udev.*=.*/obtain_device_list_from_udev=0/' /etc/lvm/lvm.conf \\\n && sed -i '/^devices {/a global_filter = [ \"r|^/dev/drbd|\" ]' /etc/lvm/lvm.conf\n\n\n# Install linstor-server\nRUN apt-get update \\\n && apt-get install --no-install-recommends -y default-jre-headless thin-provisioning-tools python3-all python3-natsort \\\n && dpkg -i packages/*.deb \\\n && sed -i 's/usage-count yes;/usage-count no;/' /etc/drbd.d/global_common.conf \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n\n# Log directory need to be group writable. OpenShift assigns random UID and GID, without extra RBAC changes we can only influence the GID.\nRUN mkdir /var/log/linstor-controller && \\\n\t chown 0:1000 /var/log/linstor-controller && \\\n\t chmod -R 0775 /var/log/linstor-controller && \\\n\t # Ensure we log to files in containers, otherwise SOS reports won't show any logs at all\n\t sed -i 's#<!-- <appender-ref ref=\"FILE\" /> -->#<appender-ref ref=\"FILE\" />#' /usr/share/linstor-server/lib/conf/logback.xml\n\n\n# controller\nEXPOSE 3376/tcp 3377/tcp 3370/tcp 3371/tcp\n\n# satellite\nEXPOSE 3366/tcp 3367/tcp\n\nRUN curl -Lfo /usr/bin/piraeus-entry.sh https://github.com/piraeusdatastore/piraeus/raw/${PIRAEUS_COMMIT_REF}/dockerfiles/piraeus-server/entry.sh \\\n && chmod +x /usr/bin/piraeus-entry.sh\n\nCMD [\"startSatellite\"]\nENTRYPOINT [\"/usr/bin/k8s-await-election\", \"/usr/bin/piraeus-entry.sh\"]\n"
}