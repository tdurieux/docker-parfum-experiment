{
  "startTime": 1674246680583,
  "endTime": 1674246681439,
  "originalSmells": [
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 22,
        "columnEnd": 84
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 5,
        "columnEnd": 73
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG BASE_DEBIAN\n# controller artifact\nARG BASE_GOLANG_BUSTER\nFROM $BASE_GOLANG_BUSTER as artifact\nWORKDIR /src/\nCOPY patches/lua-info.patch /\nCOPY patches/reason.patch /\nCOPY patches/omit-helm-secrets.patch /\nCOPY patches/pod-ip.patch /\nENV GOARCH=amd64\nRUN apt-get update && apt-get install -y --no-install-recommends git mercurial patch && \\\n    git clone --branch nginx-0.26.1 --depth 1 https://github.com/kubernetes/ingress-nginx.git /src && \\\n    patch -p1 < /lua-info.patch && \\\n    patch -p1 < /reason.patch && \\\n    patch -p1 < /pod-ip.patch && \\\n    patch -p1 < /omit-helm-secrets.patch && \\\n    make GO111MODULE=on build && rm -rf /var/lib/apt/lists/*;\n\n# luarocks assets for luajit artifact\nFROM quay.io/kubernetes-ingress-controller/nginx-ingress-controller:0.26.1@sha256:d0b22f715fcea5598ef7f869d308b55289a3daaa12922fa52a1abf17703c88e7 as controller_lua\nUSER root\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends patch gcc build-essential \\\n  && luarocks install lua-protobuf 0.3.2-0 \\\n  && luarocks install lua-iconv 7-3 && rm -rf /var/lib/apt/lists/*;\n\n# IngressNginxController docker image\nFROM quay.io/kubernetes-ingress-controller/nginx-ingress-controller:0.26.1@sha256:d0b22f715fcea5598ef7f869d308b55289a3daaa12922fa52a1abf17703c88e7 as controller_0_26_1\n\n# Final image\nFROM $BASE_DEBIAN\n# Based on https://github.com/kubernetes/ingress-nginx/blob/nginx-0.26.1/images/nginx/rootfs/Dockerfile\n# Based on https://github.com/kubernetes/ingress-nginx/blob/nginx-0.26.1/rootfs/Dockerfile\n\nENV PATH=$PATH:/usr/local/openresty/luajit/bin:/usr/local/openresty/nginx/sbin:/usr/local/openresty/bin\n# Add LuaRocks paths\n# see https://github.com/openresty/docker-openresty/blob/de05cd72594498b83e3a97e2f632da6aa75ec01d/bionic/Dockerfile#L168\nENV LUA_PATH=\"/usr/local/openresty/site/lualib/?.ljbc;/usr/local/openresty/site/lualib/?/init.ljbc;/usr/local/openresty/lualib/?.ljbc;/usr/local/openresty/lualib/?/init.ljbc;/usr/local/openresty/site/lualib/?.lua;/usr/local/openresty/site/lualib/?/init.lua;/usr/local/openresty/lualib/?.lua;/usr/local/openresty/lualib/?/init.lua;./?.lua;/usr/local/openresty/luajit/share/luajit-2.1.0-beta3/?.lua;/usr/local/share/lua/5.1/?.lua;/usr/local/share/lua/5.1/?/init.lua;/usr/local/openresty/luajit/share/lua/5.1/?.lua;/usr/local/openresty/luajit/share/lua/5.1/?/init.lua;/usr/local/lib/lua/?.lua\"\nENV LUA_CPATH=\"/usr/local/openresty/site/lualib/?.so;/usr/local/openresty/lualib/?.so;./?.so;/usr/local/lib/lua/5.1/?.so;/usr/local/openresty/luajit/lib/lua/5.1/?.so;/usr/local/lib/lua/5.1/loadall.so;/usr/local/openresty/luajit/lib/lua/5.1/?.so\"\n\nCOPY --from=controller_0_26_1 /usr/local /usr/local\nCOPY --from=controller_0_26_1 /opt /opt\nCOPY --from=controller_0_26_1 --chown=www-data:www-data /etc /etc\nCOPY --from=controller_0_26_1 --chown=www-data:www-data /ingress-controller /ingress-controller\n\nCOPY --from=controller_0_26_1 --chown=www-data:www-data /dbg /dbg\nCOPY --from=controller_0_26_1 --chown=www-data:www-data /nginx-ingress-controller /nginx-ingress-controller\nCOPY --from=controller_0_26_1 --chown=www-data:www-data /wait-shutdown /wait-shutdown\n\nCOPY --from=artifact /src/bin/amd64/nginx-ingress-controller /src/bin/amd64/dbg /\nCOPY --from=controller_lua /usr/local/openresty/luajit /usr/local/openresty/luajit\nCOPY patches/balancer-lua.patch /\nCOPY patches/nginx-tpl.patch /\n\nCOPY rootfs /\n\nRUN clean-install \\\n    bash \\\n    curl \\\n    ca-certificates \\\n    unzip \\\n    git \\\n    openssh-client \\\n    dumb-init \\\n    libgeoip1 \\\n    diffutils \\\n    libcap2-bin \\\n    patch\\\n && cp /usr/local/openresty/nginx/conf/mime.types /etc/nginx/mime.types \\\n && cp /usr/local/openresty/nginx/conf/fastcgi_params /etc/nginx/fastcgi_params \\\n && ln -s /usr/local/openresty/nginx/modules /etc/nginx/modules \\\n && mkdir /var/log/nginx \\\n# Fix permission during the build to avoid issues at runtime\n# with volumes (custom templates)\n && bash -eu -c ' \\\n  writeDirs=( \\\n    /etc/ingress-controller/ssl \\\n    /etc/ingress-controller/auth \\\n    /var/log \\\n    /var/log/nginx \\\n    /tmp \\\n  ); \\\n  for dir in \"${writeDirs[@]}\"; do \\\n    mkdir -p ${dir}; \\\n    chown -R www-data.www-data ${dir}; \\\n  done' \\\n  && setcap    cap_net_bind_service=+ep /nginx-ingress-controller \\\n  && setcap -v cap_net_bind_service=+ep /nginx-ingress-controller \\\n  && setcap    cap_net_bind_service=+ep /usr/local/openresty/nginx/sbin/nginx \\\n  && setcap -v cap_net_bind_service=+ep /usr/local/openresty/nginx/sbin/nginx \\\n  && ln -sf /dev/stdout /usr/local/openresty/nginx/logs/access.log \\\n  && ln -sf /dev/stderr /usr/local/openresty/nginx/logs/error.log \\\n  && ln -s /usr/local/openresty/nginx/logs/* /var/log/nginx \\\n  && cd / \\\n  && patch -p1 < /balancer-lua.patch \\\n  && patch -p1 < /nginx-tpl.patch\n\nWORKDIR  /etc/nginx\nUSER www-data\nEXPOSE 80 443\nENTRYPOINT [\"/usr/bin/dumb-init\", \"--\"]\nCMD [\"/nginx-ingress-controller\"]\n\n"
}