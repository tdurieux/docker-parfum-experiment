{
  "startTime": 1674220723265,
  "endTime": 1674220724420,
  "originalSmells": [
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 22,
        "columnEnd": 84
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 5,
        "columnEnd": 73
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG BASE_ALPINE\n# controller artifact\nARG BASE_GOLANG_16_BUSTER\nFROM $BASE_GOLANG_16_BUSTER as artifact\nWORKDIR /src/\nCOPY patches/lua-info.patch /\nCOPY patches/makefile.patch /\nCOPY patches/healthcheck.patch /\nENV GOARCH=amd64\nRUN apt-get update && apt-get install -y --no-install-recommends git mercurial patch && \\\n    git clone --branch controller-v1.1.3 --depth 1 https://github.com/kubernetes/ingress-nginx.git /src && \\\n    patch -p1 < /lua-info.patch && \\\n    patch -p1 < /makefile.patch && \\\n    patch -p1 < /healthcheck.patch && \\\n    make GO111MODULE=on USE_DOCKER=false build && rm -rf /var/lib/apt/lists/*;\n\n# luarocks assets for luajit artifact\nFROM quay.io/kubernetes-ingress-controller/nginx-ingress-controller:0.26.1@sha256:d0b22f715fcea5598ef7f869d308b55289a3daaa12922fa52a1abf17703c88e7 as controller_0_26_1\nUSER root\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends patch gcc build-essential \\\n  && luarocks install lua-protobuf 0.3.2-0 \\\n  && luarocks install lua-iconv 7-3 && rm -rf /var/lib/apt/lists/*;\n\n# IngressNginxController docker image\nFROM registry.k8s.io/ingress-nginx/controller:v1.1.3@sha256:31f47c1e202b39fadecf822a9b76370bd4baed199a005b3e7d4d1455f4fd3fe2 as controller_image\n\n# Final image\nFROM $BASE_ALPINE\n# Based on https://github.com/kubernetes/ingress-nginx/blob/controller-v1.0.4/images/nginx/rootfs/Dockerfile\n# Based on https://github.com/kubernetes/ingress-nginx/blob/controller-v1.0.4/rootfs/Dockerfile\nENV PATH=$PATH:/usr/local/luajit/bin:/usr/local/nginx/sbin:/usr/local/nginx/bin\n\nENV LUA_PATH=\"/usr/local/share/luajit-2.1.0-beta3/?.lua;/usr/local/share/lua/5.1/?.lua;/usr/local/lib/lua/?.lua;;\"\nENV LUA_CPATH=\"/usr/local/lib/lua/?/?.so;/usr/local/lib/lua/?.so;;\"\n# Fix for openrestry luarocks paths\nENV PATH=$PATH:/usr/local/openresty/luajit/bin:/usr/local/openresty/nginx/sbin:/usr/local/openresty/bin\nENV LUA_PATH=$LUA_PATH;/usr/local/openresty/site/lualib/?.ljbc;/usr/local/openresty/site/lualib/?/init.ljbc;/usr/local/openresty/lualib/?.ljbc;/usr/local/openresty/lualib/?/init.ljbc;/usr/local/openresty/site/lualib/?.lua;/usr/local/openresty/site/lualib/?/init.lua;/usr/local/openresty/lualib/?.lua;/usr/local/openresty/lualib/?/init.lua;./?.lua;/usr/local/openresty/luajit/share/luajit-2.1.0-beta3/?.lua;/usr/local/share/lua/5.1/?.lua;/usr/local/share/lua/5.1/?/init.lua;/usr/local/openresty/luajit/share/lua/5.1/?.lua;/usr/local/openresty/luajit/share/lua/5.1/?/init.lua;/usr/local/lib/lua/?.lua\nENV LUA_CPATH=$LUA_CPATH;/usr/local/openresty/site/lualib/?.so;/usr/local/openresty/lualib/?.so;./?.so;/usr/local/lib/lua/5.1/?.so;/usr/local/openresty/luajit/lib/lua/5.1/?.so;/usr/local/lib/lua/5.1/loadall.so;/usr/local/openresty/luajit/lib/lua/5.1/?.so\n\nRUN adduser -S -D -H -u 101 -h /usr/local/nginx \\\n    -s /sbin/nologin -G www-data -g www-data www-data\n\nCOPY --from=controller_image /usr/local /usr/local\nCOPY --from=controller_image /opt /opt\nCOPY --from=controller_image --chown=www-data:www-data /etc /etc\nCOPY --from=controller_image --chown=www-data:www-data /dbg /dbg\nCOPY --from=controller_image --chown=www-data:www-data /nginx-ingress-controller /nginx-ingress-controller\nCOPY --from=controller_image --chown=www-data:www-data /wait-shutdown /wait-shutdown\nCOPY --from=artifact /src/rootfs/bin/amd64/nginx-ingress-controller /src/rootfs/bin/amd64/dbg /\n# We use 0.26 controller image to copy lua libraries because is easier to install them on ubuntu\nCOPY --from=controller_0_26_1 /usr/local/openresty/luajit /usr/local/openresty/luajit\nCOPY patches/balancer-lua.patch /\nCOPY patches/nginx-tpl.patch /\nCOPY patches/auth-cookie-always.patch /\nCOPY rootfs /\n\nRUN apk update \\\n  && apk upgrade \\\n  && apk add -U --no-cache \\\n    bash \\\n    openssl \\\n    pcre \\\n    zlib \\\n    geoip \\\n    curl ca-certificates \\\n    patch \\\n    yajl \\\n    lmdb \\\n    libxml2 \\\n    libmaxminddb \\\n    yaml-cpp \\\n    dumb-init \\\n    nano \\\n    tzdata \\\n    diffutils \\\n    libcap \\\n  && ln -s /usr/local/nginx/sbin/nginx /sbin/nginx \\\n  && bash -eu -c ' \\\n  writeDirs=( \\\n    /var/lib/nginx/body \\\n    /var/lib/nginx/fastcgi \\\n    /var/lib/nginx/proxy \\\n    /var/lib/nginx/scgi \\\n    /var/lib/nginx/uwsgi \\\n    /etc/ingress-controller \\\n    /etc/ingress-controller/ssl \\\n    /etc/ingress-controller/auth \\\n    /var/log/audit \\\n    /var/log \\\n    /var/log/nginx \\\n  ); \\\n  for dir in \"${writeDirs[@]}\"; do \\\n    mkdir -p ${dir}; \\\n    chown -R www-data.www-data ${dir}; \\\n  done' \\\n  && setcap    cap_net_bind_service=+ep /nginx-ingress-controller \\\n  && setcap -v cap_net_bind_service=+ep /nginx-ingress-controller \\\n  && setcap    cap_net_bind_service=+ep /usr/local/nginx/sbin/nginx \\\n  && setcap -v cap_net_bind_service=+ep /usr/local/nginx/sbin/nginx \\\n# Create symlinks to redirect nginx logs to stdout and stderr docker log collector\n  && ln -sf /dev/stdout /var/log/nginx/access.log \\\n  && ln -sf /dev/stderr /var/log/nginx/error.log \\\n  && apk del libcap \\\n  && cd / \\\n  && patch -p1 < /balancer-lua.patch \\\n  && patch -p1 < /nginx-tpl.patch \\\n  && patch -p1 < /auth-cookie-always.patch\nWORKDIR /\nUSER www-data\nEXPOSE 80 443\nENTRYPOINT [\"/usr/bin/dumb-init\", \"--\"]\nCMD [\"/nginx-ingress-controller\"]\n\n"
}