{
  "startTime": 1674246860337,
  "endTime": 1674246862266,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 34
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM composer:latest as vendor\n\nWORKDIR /app\n\nCOPY composer.json composer.lock ./\n\nRUN composer install \\\n    --prefer-dist \\\n    --no-dev \\\n    --no-suggest \\\n    --no-progress \\\n    --no-autoloader \\\n    --no-scripts \\\n    --no-interaction \\\n    --ignore-platform-reqs\n\nFROM node:alpine as frontend\n\nWORKDIR /app\n\nCOPY package.json yarn.lock ./\nRUN yarn install --frozen-lockfile && yarn cache clean;\n\nCOPY postcss.config.js tsconfig.build.json tsconfig.json webpack.config.ts ./\nCOPY tools/*Plugin.ts ./tools/\n\nCOPY resources ./resources\n\nRUN yarn build && \\\n    cp resources/assets/src/images/bg.webp public/app/ && \\\n    cp resources/assets/src/images/favicon.ico public/app/ && \\\n    # Strip unused files\n    rm -rf *.config.js *.config.ts tsconfig.* \\\n      package.json yarn.lock node_modules/ \\\n      resources/assets/ resources/lang resources/misc resources/misc/backgrounds/ \\\n      tools/\n\nFROM composer:latest as builder\n\nWORKDIR /app\n\nCOPY . ./\n\nCOPY --from=vendor /app ./\nCOPY --from=frontend /app/public ./public\nCOPY --from=frontend /app/resources/views/assets ./resources/views/assets\n\nRUN composer dump-autoload -o --no-dev -n && \\\n    rm -rf *.config.js *.config.ts tsconfig.* \\\n      package.json yarn.lock node_modules/ \\\n      resources/assets/ resources/misc resources/misc/backgrounds/ \\\n      tools/ && \\\n    mv .env.example .env && \\\n    php artisan key:generate && \\\n    mv .env storage/ && \\\n    ln -s storage/.env .env && \\\n    touch storage/database.db && \\\n    mkdir storage/plugins && \\\n    sed 's/PLUGINS_DIR=null/PLUGINS_DIR=\\/app\\/storage\\/plugins/' -i storage/.env && \\\n    sed 's/DB_CONNECTION=mysql/DB_CONNECTION=sqlite/' -i storage/.env && \\\n    sed 's/DB_DATABASE=blessingskin/DB_DATABASE=\\/app\\/storage\\/database\\.db/' -i storage/.env\n\nFROM php:8-apache\n\nADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/\n\nRUN chmod +x /usr/local/bin/install-php-extensions && \\\n    install-php-extensions gd zip\n\nWORKDIR /app\n\nCOPY --from=builder /app ./\n\nENV APACHE_DOCUMENT_ROOT /app/public\nRUN chown -R www-data:www-data . && \\\n    sed -ri -e 's!/var/www/html!${APACHE_DOCUMENT_ROOT}!g' /etc/apache2/sites-available/*.conf && \\\n    sed -ri -e 's!/var/www/!${APACHE_DOCUMENT_ROOT}!g' /etc/apache2/apache2.conf /etc/apache2/conf-available/*.conf && \\\n    a2enmod rewrite headers\n\nEXPOSE 80\n\nVOLUME [\"/app/storage\"]\n"
}