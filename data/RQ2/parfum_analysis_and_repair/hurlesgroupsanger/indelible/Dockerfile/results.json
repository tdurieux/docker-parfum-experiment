{
  "startTime": 1674216112836,
  "endTime": 1674216113990,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 7,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 31
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 55
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:20.04\n\nWORKDIR /usr/src/app\n\n# install apt dependencies\nENV DEBIAN_FRONTEND noninteractive\nRUN apt-get update && \\\n    apt-get -y --no-install-recommends install \\\n    ncbi-blast+ \\\n    python3-dev \\\n    gcc make libcurl4-gnutls-dev zlib1g-dev libncurses5-dev pkg-config \\\n    libncursesw5-dev liblzma-dev libz-dev g++ unzip gzip bwa libssl-dev \\\n    libbz2-dev liblzma-dev build-essential samtools bedtools tabix git python3-pip \\\n    libblas-dev libmkl-dev liblapack-dev && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get -y --no-install-recommends install gfortran && rm -rf /var/lib/apt/lists/*;\n\n# install repo and pip requirements\nRUN git clone https://github.com/HurlesGroupSanger/indelible.git\nWORKDIR /usr/src/app/indelible\nRUN pip install --no-cache-dir 'numpy==1.17.2' 'cython==0.29.13' \\\n    && pip install --no-cache-dir -r requirements.txt\n\n# install other dependencies: bedtools tabix htslib\n# RUN conda install -c bioconda htslib bedtools cython tabix -y\n#RUN conda install -c htslib bedtools tabix -y\n\n# Unzip required data files\nWORKDIR /usr/src/app/indelible/data/\nRUN unzip data_hg19.zip \\\n    && unzip -n data_hg38.zip\n\n# indelible.py looks for python (\"#!/usr/bin/env python\"), but it requires python3\nRUN ln -s /usr/bin/python3 /usr/bin/python && chmod a+rx /usr/bin/python\n\n## Download the GRCh37 human reference and create blastdb.\nADD https://ftp-trace.ncbi.nih.gov/1000genomes/ftp/technical/reference/phase2_reference_assembly_sequence/hs37d5.fa.gz hs37d5.fa.gz\n# Have to do exit 0 because of odd exit behaviour from gunzip\nRUN gunzip -q hs37d5.fa.gz; exit 0\nRUN samtools faidx hs37d5.fa\nRUN bwa index hs37d5.fa\n\n# Build repeats DB\nRUN makeblastdb -in repeats.fasta -dbtype nucl\n\n## Now do the same for GRCh38\nADD https://ftp.ncbi.nlm.nih.gov/genomes/all/GCA/000/001/405/GCA_000001405.15_GRCh38/seqs_for_alignment_pipelines.ucsc_ids/GCA_000001405.15_GRCh38_full_analysis_set.fna.gz GRCh38_full_analysis_set.fa.gz\nRUN gunzip GRCh38_full_analysis_set.fa.gz \\\n    && samtools faidx GRCh38_full_analysis_set.fa\nRUN bwa index GRCh38_full_analysis_set.fa\n\n# Check everything is in the right place\nRUN ls -ltra\n\n# add config and set final WORKDIR\nWORKDIR /usr/src/app/indelible\nRUN mv example_config.hg19.yml config.hg19.yml \\\n    && mv example_config.hg38.yml config.hg38.yml\n\nENV PATH=\"/usr/src/app/indelible:${PATH}\"\nCMD [ \"python3\", \"./indelible.py\" ]\n"
}