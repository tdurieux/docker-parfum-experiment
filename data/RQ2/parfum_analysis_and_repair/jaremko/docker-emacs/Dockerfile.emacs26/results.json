{
  "startTime": 1674252025922,
  "endTime": 1674252027091,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 97,
        "lineEnd": 97,
        "columnStart": 23,
        "columnEnd": 34
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 156,
        "lineEnd": 162,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 94,
        "lineEnd": 94,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 152,
        "lineEnd": 152,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 12,
        "lineEnd": 79,
        "columnStart": 4,
        "columnEnd": 6
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 86,
        "lineEnd": 86,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 79,
        "columnStart": 4,
        "columnEnd": 6
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 86,
        "lineEnd": 86,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 86,
        "lineEnd": 86,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 79,
        "columnStart": 4,
        "columnEnd": 6
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 86,
        "lineEnd": 86,
        "columnStart": 4,
        "columnEnd": 26
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 86,
        "lineEnd": 86,
        "columnStart": 4,
        "columnEnd": 53
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:18.04\n\nENV DEBIAN_FRONTEND=noninteractive\n\nRUN echo 'APT::Get::Assume-Yes \"true\";' >> /etc/apt/apt.conf\n\n## update distro\nRUN apt-get update && \\\n    apt-get upgrade\n\n## build deps\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n      autotools-dev \\\n\t\tbison \\\n\t\tbuild-essential \\\n\t\tclang \\\n\t\tcmake \\\n\t\tflex \\\n\t\tgit \\\n\t\tgnulib \\\n\t\tgperf \\\n\t\tinotify-tools \\\n\t\tlibatspi2.0-dev \\\n\t\tlibbluetooth-dev \\\n\t\tlibclang-dev \\\n\t\tlibcups2-dev \\\n\t\tlibdrm-dev \\\n\t\tlibegl1-mesa-dev \\\n\t\tlibfontconfig1-dev \\\n\t\tlibfreetype6-dev \\\n\t\tlibgl-dev \\\n\t\tlibgstreamer1.0-dev \\\n\t\tlibhunspell-dev \\\n\t\tlibmirclient-dev \\\n\t\tlibmysqlclient-dev \\\n\t\tlibnss3-dev \\\n\t\tlibpulse-dev \\\n\t\tlibsctp-dev \\\n\t\tlibssl-dev \\\n\t\tlibts-dev \\\n\t\tlibwayland-dev \\\n\t\tlibwayland-egl-backend-dev \\\n\t\tlibwebp-dev \\\n\t\tlibx11-dev \\\n\t\tlibx11-xcb-dev \\\n\t\tlibxcb-ewmh-dev \\\n\t\tlibxcb-glx0-dev \\\n\t\tlibxcb-icccm4-dev \\\n\t\tlibxcb-image0-dev \\\n\t\tlibxcb-keysyms1-dev \\\n\t\tlibxcb-randr0-dev \\\n\t\tlibxcb-render-util0-dev \\\n\t\tlibxcb-shape0-dev \\\n\t\tlibxcb-shm0-dev \\\n\t\tlibxcb-sync-dev \\\n\t\tlibxcb-util-dev \\\n\t\tlibxcb-xfixes0-dev \\\n\t\tlibxcb-xinerama0-dev \\\n\t\tlibxcb-xkb-dev \\\n\t\tlibxcb1-dev \\\n\t\tlibxcomposite-dev \\\n\t\tlibxcursor-dev \\\n\t\tlibxdamage-dev \\\n\t\tlibxext-dev \\\n\t\tlibxfixes-dev \\\n\t\tlibxi-dev \\\n\t\tlibxkbcommon-dev \\\n\t\tlibxkbcommon-x11-dev \\\n\t\tlibxkbfile-dev \\\n\t\tlibxrandr-dev \\\n\t\tlibxrender-dev \\\n\t\tlibxshmfence-dev \\\n\t\tlibxshmfence1 \\\n\t\tninja-build \\\n\t\tnodejs \\\n\t\tqt5-default \\\n\t\tqtwayland5 \\\n\t\tsoftware-properties-common \\\n\t\twget && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /tmp\n\n#####################################\n# install gcc 11\nRUN add-apt-repository -y ppa:ubuntu-toolchain-r/test && \\\n    apt-get install -y --no-install-recommends gcc-11 && rm -rf /var/lib/apt/lists/*;\n\n# make gcc 11 default\nRUN update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-11 110\n#####################################\n\n## get cmake SDK\nRUN wget https://github.com/Kitware/CMake/releases/download/v3.23.0/cmake-3.23.0.tar.gz && \\\n    tar xf cmake-3.23.0.tar.gz && rm cmake-3.23.0.tar.gz\n\n## configure cmake\nRUN cd cmake-3.23.0 && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"\n\n## build cmake\nRUN cd cmake-3.23.0 &&  make\n\n## install cmake\nRUN cd cmake-3.23.0 &&  make install\n\n#####################################\n## get vulkan\nRUN git clone https://github.com/KhronosGroup/Vulkan-LoaderAndValidationLayers.git && \\\n    cp -r Vulkan-LoaderAndValidationLayers/include/vulkan /usr/include/ && \\\n    cd Vulkan-LoaderAndValidationLayers && \\\n    ./update_external_sources.sh\n\n# build and install vulkan\nRUN cd Vulkan-LoaderAndValidationLayers && \\\n    mkdir build && \\\n    cd build && \\\n    cmake -DCMAKE_BUILD_TYPE=Debug .. && \\\n    make && \\\n    make install\n\nENV VULKAN_HEADERS_INSTALL_DIR=/usr/local/vulkan-sdk/Vulkan-Headers/build/install\n\n#####################################\n## get llvm install script\nRUN wget https://apt.llvm.org/llvm.sh && chmod +x llvm.sh\n\n## install llvm\nRUN ./llvm.sh 14 all\n\n# make llvm clang default\nRUN update-alternatives --install /usr/bin/clang clang /usr/lib/llvm-14/bin/clang 140\n\n# make llvm clang++ default\nRUN update-alternatives --install /usr/bin/clang++ clang++ /usr/lib/llvm-14/bin/clang++ 140\n\nENV CC=/usr/bin/clang \\\n    CXX=/usr/bin/clang++ \\\n    CXX_STANDARD=c++17 \\\n    CPLUS_INCLUDE_PATH=/usr/lib/llvm-14/include/c++/v1 \\\n    LIBRARY_PATH=/usr/lib/llvm-14/lib \\\n    LLVM_LIB_SEARCH_PATH=/usr/lib/llvm-14/lib \\\n    CXXFLAGS=\"-std=c++17 -stdlib=libc++ -DCMAKE_CXX_STANDARD=17\" \\\n    PATH=$PATH:/usr/lib/llvm-14/bin\n\n#####################################\n## install vulkan hpp\n## RUN git clone --depth=1 --recurse-submodules https://github.com/KhronosGroup/Vulkan-Hpp.git\n## TODO\n\n#####################################\n## get qt\nRUN wget https://download.qt.io/official_releases/qt/6.2/6.2.4/single/qt-everywhere-src-6.2.4.tar.xz && \\\n    tar xf qt-everywhere-src-6.2.4.tar.xz && rm qt-everywhere-src-6.2.4.tar.xz\n\n## configure qt\nRUN cd /tmp/qt-everywhere-src-6.2.4 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" -prefix /usr/local/Qt6 \\\n                -skip qtwebengine \\\n                -c++std c++17 \\\n                -inotify \\\n                -feature-vulkan \\\n                -sctp \\\n                -eventfd\n\n## build qt\nRUN cd /tmp/qt-everywhere-src-6.2.4 && cmake --build . --parallel\n\n#####################################\n## configure qt modules\nRUN cd /tmp/qt-everywhere-src-6.2.4 && ./usr/local/Qt6/bin/qt-configure-module\n"
}