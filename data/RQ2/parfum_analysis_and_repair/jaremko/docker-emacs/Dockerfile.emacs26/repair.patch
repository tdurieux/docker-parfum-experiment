diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/jaremko/docker-emacs/Dockerfile.emacs26 b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/jaremko/docker-emacs/Dockerfile.emacs26/repaired.Dockerfile
index f2141b6..5168153 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/jaremko/docker-emacs/Dockerfile.emacs26
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/jaremko/docker-emacs/Dockerfile.emacs26/repaired.Dockerfile
@@ -2,7 +2,7 @@ FROM ubuntu:18.04
 
 ENV DEBIAN_FRONTEND=noninteractive
 
-RUN echo 'APT::Get::Assume-Yes "true";' >> /etc/apt/apt.conf 
+RUN echo 'APT::Get::Assume-Yes "true";' >> /etc/apt/apt.conf
 
 ## update distro
 RUN apt-get update && \
@@ -10,8 +10,8 @@ RUN apt-get update && \
 
 ## build deps
 RUN apt-get update && \
-    apt-get install \
-    		autotools-dev \
+    apt-get install -y --no-install-recommends \
+      autotools-dev \
 		bison \
 		build-essential \
 		clang \
@@ -60,7 +60,7 @@ RUN apt-get update && \
 		libxcb-xkb-dev \
 		libxcb1-dev \
 		libxcomposite-dev \
-		libxcursor-dev \ 
+		libxcursor-dev \
 		libxdamage-dev \
 		libxext-dev \
 		libxfixes-dev \
@@ -76,15 +76,15 @@ RUN apt-get update && \
 		nodejs \
 		qt5-default \
 		qtwayland5 \
-		software-properties-common \    
-		wget
+		software-properties-common \
+		wget && rm -rf /var/lib/apt/lists/*;
 
 WORKDIR /tmp
 
 #####################################
 # install gcc 11
 RUN add-apt-repository -y ppa:ubuntu-toolchain-r/test && \
-    apt-get install gcc-11
+    apt-get install -y --no-install-recommends gcc-11 && rm -rf /var/lib/apt/lists/*;
 
 # make gcc 11 default
 RUN update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-11 110
@@ -92,10 +92,10 @@ RUN update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-11 110
 
 ## get cmake SDK
 RUN wget https://github.com/Kitware/CMake/releases/download/v3.23.0/cmake-3.23.0.tar.gz && \
-    tar xf cmake-3.23.0.tar.gz
-	
+    tar xf cmake-3.23.0.tar.gz && rm cmake-3.23.0.tar.gz
+
 ## configure cmake
-RUN cd cmake-3.23.0 && ./configure
+RUN cd cmake-3.23.0 && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"
 
 ## build cmake
 RUN cd cmake-3.23.0 &&  make
@@ -126,7 +126,7 @@ RUN wget https://apt.llvm.org/llvm.sh && chmod +x llvm.sh
 
 ## install llvm
 RUN ./llvm.sh 14 all
-	
+
 # make llvm clang default
 RUN update-alternatives --install /usr/bin/clang clang /usr/lib/llvm-14/bin/clang 140
 
@@ -150,11 +150,11 @@ ENV CC=/usr/bin/clang \
 #####################################
 ## get qt
 RUN wget https://download.qt.io/official_releases/qt/6.2/6.2.4/single/qt-everywhere-src-6.2.4.tar.xz && \
-    tar xf qt-everywhere-src-6.2.4.tar.xz
+    tar xf qt-everywhere-src-6.2.4.tar.xz && rm qt-everywhere-src-6.2.4.tar.xz
 
 ## configure qt
 RUN cd /tmp/qt-everywhere-src-6.2.4 && \
-    ./configure -prefix /usr/local/Qt6 \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" -prefix /usr/local/Qt6 \
                 -skip qtwebengine \
                 -c++std c++17 \
                 -inotify \