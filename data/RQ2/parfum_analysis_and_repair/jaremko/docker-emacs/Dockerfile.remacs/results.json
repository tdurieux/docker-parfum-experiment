{
  "startTime": 1674253510456,
  "endTime": 1674253511855,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 73,
        "lineEnd": 73,
        "columnStart": 7,
        "columnEnd": 18
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 11,
        "lineEnd": 23,
        "columnStart": 25,
        "columnEnd": 9
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 44,
        "lineEnd": 46,
        "columnStart": 22,
        "columnEnd": 8
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 53,
        "lineEnd": 71,
        "columnStart": 7,
        "columnEnd": 11
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 23,
        "columnStart": 25,
        "columnEnd": 9
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 44,
        "lineEnd": 46,
        "columnStart": 22,
        "columnEnd": 8
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 53,
        "lineEnd": 71,
        "columnStart": 7,
        "columnEnd": 11
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:latest\n\nMAINTAINER JAremko <w3techplaygound@gmail.com>\n\n# Fix \"Couldn't register with accessibility bus\" error message\nENV NO_AT_BRIDGE=1\n\nENV DEBIAN_FRONTEND noninteractive\n\n# basic stuff\nRUN echo 'APT::Get::Assume-Yes \"true\";' >> /etc/apt/apt.conf \\\n    && apt-get update && apt-get install -y --no-install-recommends \\\n    bash \\\n    build-essential \\\n    dbus-x11 \\\n    fontconfig \\\n    git \\\n    gzip \\\n    language-pack-en-base \\\n    libgl1-mesa-glx \\\n    make \\\n    sudo \\\n    tar \\\n    unzip \\\n# su-exec\n    && git clone https://github.com/ncopa/su-exec.git /tmp/su-exec \\\n    && cd /tmp/su-exec \\\n    && make \\\n    && chmod 770 su-exec \\\n    && mv ./su-exec /usr/local/sbin/ \\\n# Cleanup\n    && apt-get purge build-essential \\\n    && apt-get autoremove \\\n    && rm -rf /tmp/* /var/lib/apt/lists/* /root/.cache/*\n\nCOPY asEnvUser /usr/local/sbin/\n\n# Only for sudoers\nRUN chown root /usr/local/sbin/asEnvUser \\\n    && chmod 700  /usr/local/sbin/asEnvUser\n\n# ^^^^^^^ Those layers are shared ^^^^^^^\n\n# Build Remacs\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n    build-essential \\\n    curl \\\n    && curl https://sh.rustup.rs -sSf | sh -s -- -y \\\n    && /root/.cargo/bin/rustup install nightly \\\n    && git clone https://github.com/remacs/remacs.git /tmp/remacs-bd \\\n    && cd /tmp/remacs-bd \\\n    && export PATH=$PATH:/root/.cargo/bin \\\n    && rustup override set nightly \\\n    && apt-get install -y --no-install-recommends \\\n    autoconf \\\n    libgif7 \\\n    gnutls-bin \\\n    libgtk-3-0 \\\n    libjpeg8 \\\n    libncurses5 \\\n    libtiff5 \\\n    libxml2 \\\n    libxpm4 \\\n    libgif-dev \\\n    libgnutls-dev \\\n    libgtk-3-dev \\\n    libjpeg-dev \\\n    libncurses5-dev \\\n    libtiff5-dev \\\n    libxml2-dev \\\n    libxpm-dev \\\n    texinfo \\\n    && ./autogen.sh \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n    && make \\\n# Cleanup\n    && rustup self uninstall \\\n    && apt-get purge \\\n    autoconf \\\n    build-essential \\\n    curl \\\n    libgif-dev \\\n    libgnutls-dev \\\n    libgtk-3-dev \\\n    libjpeg-dev \\\n    libncurses5-dev \\\n    libtiff-dev \\\n    libxml2-dev \\\n    libxpm-dev \\\n    && rm -rf /tmp/* /root/.cargo /var/lib/apt/lists/* /root/.cache/*\n\nENV UNAME=\"emacser\" \\\n    GNAME=\"emacs\" \\\n    UHOME=\"/home/emacs\" \\\n    UID=\"1000\" \\\n    GID=\"1000\" \\\n    WORKSPACE=\"/mnt/workspace\" \\\n    SHELL=\"/bin/bash\"\n\nWORKDIR \"${WORKSPACE}\"\n\nENTRYPOINT [\"asEnvUser\"]\nCMD [\"bash\", \"-c\", \"emacs; /bin/bash\"]\n"
}