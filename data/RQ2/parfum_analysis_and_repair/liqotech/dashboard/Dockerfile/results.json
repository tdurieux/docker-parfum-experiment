{
  "startTime": 1674253807786,
  "endTime": 1674253808535,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Builder image for the webservice\nFROM node:14-alpine as builder\n\n# Download git to fetch the kubernetes repo\nRUN apk add --no-cache --update git openssh\n\n## Switch to an unprivileged user (avoids problems with npm)\nUSER node\n\n## Set the working directory and copy the source code\nRUN mkdir --parent /tmp/webservice\nCOPY --chown=node:node . /tmp/webservice\nWORKDIR /tmp/webservice\n\n## Install the dependencies and build\nRUN npm install && npm cache clean --force;\nRUN npm run build\n\n# Final image to export the service\nFROM nginx:1.19\n\n## Copy the different files\nCOPY --chown=nginx:nginx --from=builder /tmp/webservice/dist /usr/share/nginx/html\nCOPY --chown=nginx:nginx nginx.conf /etc/nginx/conf.d/default.conf\nCOPY --chown=nginx:nginx docker-entrypoint.sh /\n\n## Add permissions for the nginx user\nRUN chown -R nginx:nginx /usr/share/nginx/html && \\\n    chown -R nginx:nginx /var/cache/nginx && \\\n    chown -R nginx:nginx /var/log/nginx && \\\n    chown -R nginx:nginx /etc/nginx/conf.d && \\\n    touch /var/run/nginx.pid && \\\n    chown -R nginx:nginx /var/run/nginx.pid\n\nRUN chmod +x docker-entrypoint.sh\n\nENTRYPOINT [\"/docker-entrypoint.sh\"]\n"
}