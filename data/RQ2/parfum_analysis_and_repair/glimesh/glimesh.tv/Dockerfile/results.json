{
  "startTime": 1674253430025,
  "endTime": 1674253430749,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 117
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 117
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 117
      }
    }
  ],
  "repairedDockerfile": "# Doesn't use alpine because we need dart-sass to work and it needs glibc\nFROM elixir:1.13.4 AS build\n\nRUN curl -fsSL https://deb.nodesource.com/setup_16.x | bash -\nRUN apt-get install --no-install-recommends -y nodejs && rm -rf /var/lib/apt/lists/*;\n\n# prepare build dir\nWORKDIR /app\n\n# install hex + rebar\nRUN mix local.hex --force && \\\n    mix local.rebar --force\n\n# set build ENV\nENV MIX_ENV=prod\n\n# install mix dependencies\nCOPY mix.exs mix.lock ./\nCOPY config config\nRUN mix do deps.get, deps.compile\n\n# workaround for janus npm install\nRUN git config --global url.\"https://github.com\".insteadOf ssh://git@github.com\n\n# build assets\nCOPY assets/package.json assets/package-lock.json ./assets/\nRUN npm --prefix ./assets ci --progress=false --no-audit --loglevel=error\n\nCOPY priv priv\nCOPY assets assets\nRUN mix assets.deploy\n\n# compile and build release\nCOPY lib lib\n# uncomment COPY if rel/ exists\n# COPY rel rel\nRUN mix do compile, release\n\n# prepare release image\nFROM debian:bullseye-slim AS app\nRUN apt-get update\nRUN apt-get install -y --no-install-recommends libssl-dev libncurses-dev ca-certificates imagemagick librsvg2-bin npm && rm -rf /var/lib/apt/lists/*;\n\nRUN npm install -g svgo && npm cache clean --force;\n\nWORKDIR /app\n\nRUN chown nobody:nogroup /app\n\nUSER nobody:nogroup\n\nCOPY --from=build --chown=nobody:nogroup /app/_build/prod/rel/glimesh ./\n\nENV HOME=/app\n\nCMD [\"bin/glimesh\", \"start\"]\n"
}