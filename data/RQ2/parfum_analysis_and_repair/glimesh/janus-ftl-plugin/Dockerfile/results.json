{
  "startTime": 1674253074680,
  "endTime": 1674253076047,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 41,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 350
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 350
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:20.04\n\nRUN \\\n    apt-get update && \\\n    DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends -y install curl g++-10 git libmicrohttpd-dev libjansson-dev libssl-dev libsofia-sip-ua-dev libglib2.0-dev libopus-dev libogg-dev libcurl4-openssl-dev liblua5.3-dev libconfig-dev pkg-config gengetopt libtool automake python3 python3-pip python3-setuptools python3-dev python3-wheel ninja-build libavcodec-dev && \\\n    update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-10 100 --slave /usr/bin/g++ g++ /usr/bin/g++-10 --slave /usr/bin/gcov gcov /usr/bin/gcov-10 && rm -rf /var/lib/apt/lists/*;\n\nRUN pip3 install --no-cache-dir meson\n\nWORKDIR /tmp\n\nENV LIBNICE_VERSION=0.1.18\nENV LIBSRTP_VERSION=v2.4.2\nENV JANUSGATEWAY_VERSION=v0.11.6\n\nRUN \\\n    DIR=/tmp/libnice && \\\n    mkdir -p ${DIR} && \\\n    cd ${DIR} && \\\n    curl -sLf https://github.com/libnice/libnice/archive/${LIBNICE_VERSION}.tar.gz | tar -zx --strip-components=1 && \\\n    meson --prefix=/usr build/ && \\\n    ninja -C build && \\\n    ninja -C build install && \\\n    rm -rf ${DIR}\n\nRUN \\\n    DIR=/tmp/libsrtp && \\\n    mkdir -p ${DIR} && \\\n    cd ${DIR} && \\\n    curl -sLf https://github.com/cisco/libsrtp/archive/${LIBSRTP_VERSION}.tar.gz | tar -zx --strip-components=1 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr --enable-openssl && \\\n    make shared_library && \\\n    make install && \\\n    rm -rf ${DIR}\n\nRUN \\\n    DIR=/tmp/janus-gateway && \\\n    mkdir -p ${DIR} && \\\n    cd ${DIR} && \\\n    curl -sLf https://github.com/meetecho/janus-gateway/archive/${JANUSGATEWAY_VERSION}.tar.gz | tar -zx --strip-components=1 && \\\n    sh autogen.sh && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/opt/janus \\\n                --disable-rabbitmq \\\n                --disable-mqtt \\\n                --disable-unix-sockets \\\n                --disable-websockets \\\n                --disable-all-handlers \\\n                --disable-all-plugins && \\\n    make && \\\n    make configs && \\\n    make install && \\\n    rm -rf ${DIR}\n\nWORKDIR /app\n\nCOPY . /app\n\nRUN \\\n    DIR=/app && \\\n    CC=gcc-10 CXX=g++-10 meson --buildtype=debugoptimized build/ && \\\n    cd build/ && \\\n    ninja && \\\n    ninja install\n\n# Janus API HTTP\nEXPOSE 8088/tcp\n# Janus API HTTPS\nEXPOSE 8089/tcp\n# FTL Ingest Handshake\nEXPOSE 8084/tcp\n# FTL Media\nEXPOSE 9000-9100/udp\n# RTP Media\nEXPOSE 20000-20100/udp\n# NOTE: Usually we'd want a way larger Media/RTP port range\n# but Docker is extremely slow at opening huge port ranges\n# (see moby/moby#14288)\n\nCMD exec /opt/janus/bin/janus --rtp-port-range=20000-20100 --nat-1-1=${DOCKER_IP}\n"
}