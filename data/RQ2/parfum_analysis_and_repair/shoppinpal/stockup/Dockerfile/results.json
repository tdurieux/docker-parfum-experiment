{
  "startTime": 1674251150131,
  "endTime": 1674251151371,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 46,
        "columnEnd": 67
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 52,
        "columnEnd": 92
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:10.15.3 as adminbuilder\nENV MONGOLAB_URI=mongodb://52.170.2.48:27017/warehouse-local\nRUN mkdir -p /apps/warehouse\nRUN mkdir -p /apps/warehouse/client\nRUN chown -R node:node /apps/warehouse\nCOPY . /apps/warehouse\nWORKDIR /apps/warehouse\nRUN npm install && npm cache clean --force;\nRUN npm run angular2-sdk\nWORKDIR /apps/warehouse/admin\nRUN npm install && npm cache clean --force;\nRUN npm run admin\n\nFROM node:8.16 as notification\nRUN mkdir -p /apps/warehouse\nCOPY . /apps/warehouse\nWORKDIR /apps/warehouse/notification-service\nRUN npm install && npm cache clean --force;\n\nFROM shoppinpal/node:6.10\nENV MONGOLAB_URI=mongodb://admin:c64e8e7b05a6d35@35.200.175.36:27017/warehouse-local\nRUN sed -i '2d' /etc/apt/sources.list && apt-get -y update && apt-get -y dist-upgrade\nRUN chown -R node:node /usr/local\nRUN apt-get -y update && apt-get -y dist-upgrade && apt-get install --no-install-recommends -y python-pip python-dev && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* /usr/share/doc/*\nRUN pip install --no-cache-dir awscli --upgrade\nENV DEBIAN_FRONTEND=noninteractive\nENV GOSU_VERSION 1.10\nRUN set -x \\\n\t&& apt-get update && apt-get install -y --no-install-recommends ca-certificates wget && rm -rf /var/lib/apt/lists/*\nRUN mkdir -p /apps/warehouse\nRUN chown -R node:node /apps/warehouse\nWORKDIR /apps/warehouse\nCOPY package.json /apps/warehouse/package.json\nCOPY npm-shrinkwrap.json /apps/warehouse/npm-shrinkwrap.json\nRUN npm install --no-optional --production && npm install grunt-cli && npm cache clean --force;\n#RUN npm install -g bower\n#RUN mv /apps/warehouse/node_modules /apps/node_modules\nCOPY . /apps/warehouse\n#RUN bower --allow-root install\nRUN chown -R node:node /apps/warehouse\nENV SCHEME=http\n# Disable the debug logs for warehouse\n#ENV DEBUG=shoppinpal:*,boot:*,common:models:*,server:*\n#HEALTHCHECK --interval=1m --timeout=3s --start-period=1m CMD curl -f http://localhost:3000/api/StoreModels || exit 1\nENTRYPOINT [ \"./docker-entrypoint.sh\" ]\nEXPOSE 3000\nCOPY --from=adminbuilder /apps/warehouse/client/admin /apps/warehouse/client/admin\nCOPY --from=notification /apps/warehouse/notification-service/node_modules /apps/warehouse/notification-service/node_modules\nCMD [ \"node\",\"server/server.js\" ]\n"
}