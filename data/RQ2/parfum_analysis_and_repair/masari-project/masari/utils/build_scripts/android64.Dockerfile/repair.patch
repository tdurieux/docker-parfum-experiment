diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/masari-project/masari/utils/build_scripts/android64.Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/masari-project/masari/utils/build_scripts/android64.Dockerfile/repaired.Dockerfile
index 83bcbad..8b16291 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/masari-project/masari/utils/build_scripts/android64.Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/masari-project/masari/utils/build_scripts/android64.Dockerfile/repaired.Dockerfile
@@ -1,16 +1,16 @@
 FROM debian:jessie
 
-RUN apt-get update && apt-get install -y unzip automake build-essential curl file pkg-config git python libtool
+RUN apt-get update && apt-get install --no-install-recommends -y unzip automake build-essential curl file pkg-config git python libtool && rm -rf /var/lib/apt/lists/*;
 
 WORKDIR /opt/android
 ## INSTALL ANDROID SDK
-RUN curl -s -O http://dl.google.com/android/android-sdk_r24.4.1-linux.tgz \
+RUN curl -f -s -O http://dl.google.com/android/android-sdk_r24.4.1-linux.tgz \
     && tar --no-same-owner -xzf android-sdk_r24.4.1-linux.tgz \
     && rm -f android-sdk_r24.4.1-linux.tgz
 
 ## INSTALL ANDROID NDK
 ENV ANDROID_NDK_REVISION 14
-RUN curl -s -O https://dl.google.com/android/repository/android-ndk-r${ANDROID_NDK_REVISION}-linux-x86_64.zip \
+RUN curl -f -s -O https://dl.google.com/android/repository/android-ndk-r${ANDROID_NDK_REVISION}-linux-x86_64.zip \
     && unzip android-ndk-r${ANDROID_NDK_REVISION}-linux-x86_64.zip \
     && rm -f android-ndk-r${ANDROID_NDK_REVISION}-linux-x86_64.zip
 
@@ -21,7 +21,7 @@ ENV ANDROID_NDK_ROOT ${WORKDIR}/android-ndk-r${ANDROID_NDK_REVISION}
 ## INSTALL BOOST
 ENV BOOST_VERSION 1_62_0
 ENV BOOST_VERSION_DOT 1.62.0
-RUN curl -s -L -o  boost_${BOOST_VERSION}.tar.bz2 https://sourceforge.net/projects/boost/files/boost/${BOOST_VERSION_DOT}/boost_${BOOST_VERSION}.tar.bz2/download \
+RUN curl -f -s -L -o  boost_${BOOST_VERSION}.tar.bz2 https://sourceforge.net/projects/boost/files/boost/${BOOST_VERSION_DOT}/boost_${BOOST_VERSION}.tar.bz2/download \
     && tar -xvf boost_${BOOST_VERSION}.tar.bz2 \
     && rm -f /usr/boost_${BOOST_VERSION}.tar.bz2 \
     && cd boost_${BOOST_VERSION} \
@@ -42,7 +42,7 @@ RUN cd boost_${BOOST_VERSION} \
 #INSTALL cmake (avoid 3.7 : https://github.com/android-ndk/ndk/issues/254)
 ENV CMAKE_VERSION 3.6.3
 RUN cd /usr \
-    && curl -s -O https://cmake.org/files/v3.6/cmake-${CMAKE_VERSION}-Linux-x86_64.tar.gz \
+    && curl -f -s -O https://cmake.org/files/v3.6/cmake-${CMAKE_VERSION}-Linux-x86_64.tar.gz \
     && tar -xzf /usr/cmake-${CMAKE_VERSION}-Linux-x86_64.tar.gz \
     && rm -f /usr/cmake-${CMAKE_VERSION}-Linux-x86_64.tar.gz
 ENV PATH /usr/cmake-${CMAKE_VERSION}-Linux-x86_64/bin:$PATH
@@ -51,15 +51,15 @@ ENV PATH /usr/cmake-${CMAKE_VERSION}-Linux-x86_64/bin:$PATH
 
 # download, configure and make Zlib
 ENV ZLIB_VERSION 1.2.11
-RUN curl -s -O http://zlib.net/zlib-${ZLIB_VERSION}.tar.gz \
+RUN curl -f -s -O http://zlib.net/zlib-${ZLIB_VERSION}.tar.gz \
     && tar -xzf zlib-${ZLIB_VERSION}.tar.gz \
     && rm zlib-${ZLIB_VERSION}.tar.gz \
     && mv zlib-${ZLIB_VERSION} zlib \
-    && cd zlib && CC=clang CXX=clang++ ./configure --static \
+    && cd zlib && CC=clang CXX=clang++ ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --static \
     && make
 # open ssl
 ENV OPENSSL_VERSION 1.0.2j
-RUN curl -s -O https://www.openssl.org/source/openssl-${OPENSSL_VERSION}.tar.gz \
+RUN curl -f -s -O https://www.openssl.org/source/openssl-${OPENSSL_VERSION}.tar.gz \
     && tar -xzf openssl-${OPENSSL_VERSION}.tar.gz \
     && rm openssl-${OPENSSL_VERSION}.tar.gz \
     && cd openssl-${OPENSSL_VERSION} \
@@ -76,7 +76,7 @@ RUN git clone https://github.com/zeromq/zeromq4-1.git \
     && git clone https://github.com/zeromq/cppzmq.git \
     && cd zeromq4-1 \
     && ./autogen.sh \
-    && CC=clang CXX=clang++ ./configure --host=aarch64-linux-android \
+    && CC=clang CXX=clang++ ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --host=aarch64-linux-android \
     && make
 
 RUN ln -s /opt/android/openssl/libcrypto.a /opt/android/openssl/libssl.a ${TOOLCHAIN_DIR}/aarch64-linux-android/lib