{
  "startTime": 1674249111476,
  "endTime": 1674249112308,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 69
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:14 as build\n\nWORKDIR /home/node/app\n\nADD ./package.json /home/node/app/package.json\nADD ./yarn.lock /home/node/app/yarn.lock\nCOPY ./npm /home/node/app/npm\n\nRUN yarn install && yarn cache clean;\n\nCOPY ./src /home/node/app/src\nCOPY ./schemas /home/node/app/schemas\nCOPY ./webpack.config.js /home/node/app/webpack.config.js\nCOPY ./tsconfig.json /home/node/app/tsconfig.json\nCOPY ./tsconfig.frontend.json /home/node/app/tsconfig.frontend.json\nCOPY ./generate-schemas.js /home/node/app/generate-schemas.js\nADD ./themes /home/node/app/themes\n\nENV NODE_ENV=production\n\nRUN yarn build\n\nFROM node:14 as modules\n\nWORKDIR /home/node/app\n\nCOPY --from=build /home/node/app/package.json /home/node/app/package.json\nCOPY --from=build /home/node/app/yarn.lock /home/node/app/yarn.lock\nCOPY --from=build /home/node/app/npm /home/node/app/npm\n\nRUN yarn install --no-interactive --frozen-lockfile --production=true && yarn cache clean;\n\nFROM node:14\n\nWORKDIR /home/node/app\n\nRUN npm install -g pm2@4.5.6 && npm cache clean --force;\n\nCOPY --from=build /home/node/app/package.json /home/node/app/package.json\nCOPY --from=build /home/node/app/yarn.lock /home/node/app/yarn.lock\nCOPY --from=modules /home/node/app/node_modules /home/node/app/node_modules\nCOPY --from=build /home/node/app/lib /home/node/app/lib\nCOPY ./schemas /home/node/app/schemas\nCOPY ./webpack.config.js /home/node/app/webpack.config.js\nCOPY ./ecosystem.config.js /home/node/app/ecosystem.config.js\nCOPY ./themes /home/node/app/themes\nCOPY ./npm /home/node/app/npm\n\nENV SERVER_PORT=3000\nENV DATABASE_HOST=localhost\nENV DATABASE_NAME=postgres\nENV DATABASE_PORT=5400\nENV DATABASE_USER=postgres\nENV DATABASE_SCHEMA=public\nENV DATABASE_PASSWORD=postgres\nENV NODE_ENV=production\nENV API_GATEWAY_HOST=http://gateway\n\nEXPOSE 3000\nEXPOSE 3001\n\nRUN mkdir -p /home/node/app/service-jwt && \\\n    mkdir -p /home/node/app/service-jwt-responses && \\\n    mkdir -p /home/node/app/files && \\\n    mkdir -p /home/node/app/openssl-certs && \\\n    chown node:node /home/node/app/service-jwt && \\\n    chown node:node /home/node/app/service-jwt-responses && \\\n    chown node:node /home/node/app/files && \\\n    chown node:node /home/node/app/openssl-certs\n\nUSER node\n\nCOPY ./migrate.js /home/node/app/migrate.js\nCOPY ./migrations /home/node/app/migrations\nCOPY ./service-jwts /home/node/app/service-jwts\nCOPY ./config.json /home/node/app/config.json\nCOPY ./translations /home/node/app/translations\nCOPY ./schemas /home/node/app/schemas\nCOPY ./generate-schemas.js /home/node/app/generate-schemas.js\n\nCMD [\"pm2-runtime\", \"start\", \"./ecosystem.config.js\"]\n\n"
}