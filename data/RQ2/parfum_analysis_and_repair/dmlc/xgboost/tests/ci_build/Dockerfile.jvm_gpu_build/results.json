{
  "startTime": 1674248620600,
  "endTime": 1674248621884,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 71
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 143
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 157
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 49
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 49
      }
    }
  ],
  "repairedDockerfile": "ARG CUDA_VERSION_ARG\nFROM nvidia/cuda:$CUDA_VERSION_ARG-devel-centos7\nARG CUDA_VERSION_ARG\n\n# Install all basic requirements\nRUN \\\n    rpm --erase gpg-pubkey-7fa2af80* && \\\n    curl -fsSL https://developer.download.nvidia.com/compute/cuda/repos/rhel7/x86_64/D42D0685.pub | sed '/^Version/d' \\\n        > /etc/pki/rpm-gpg/RPM-GPG-KEY-NVIDIA && \\\n    yum install -y epel-release centos-release-scl && \\\n    yum-config-manager --enable centos-sclo-rh-testing && \\\n    yum -y update && \\\n    yum install -y tar unzip wget xz git which ninja-build java-1.8.0-openjdk-devel devtoolset-8-gcc devtoolset-8-binutils devtoolset-8-gcc-c++ && \\\n    # Python\n    wget -nv -nc -O Miniconda3.sh https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh && \\\n    bash Miniconda3.sh -b -p /opt/python && \\\n    # CMake\n    wget -nv -nc https://cmake.org/files/v3.14/cmake-3.14.0-Linux-x86_64.sh --no-check-certificate && \\\n    bash cmake-3.14.0-Linux-x86_64.sh --skip-license --prefix=/usr && \\\n    # Maven\n    wget -nv -nc https://archive.apache.org/dist/maven/maven-3/3.6.1/binaries/apache-maven-3.6.1-bin.tar.gz && \\\n    tar xvf apache-maven-3.6.1-bin.tar.gz -C /opt && \\\n    ln -s /opt/apache-maven-3.6.1/ /opt/maven && rm -rf /var/cache/yum\n\n# NCCL2 (License: https://docs.nvidia.com/deeplearning/sdk/nccl-sla/index.html)\nRUN \\\n    export CUDA_SHORT=`echo $CUDA_VERSION_ARG | grep -o -E '[0-9]+\\.[0-9]'` && \\\n    export NCCL_VERSION=2.12.12-1 && \\\n    yum-config-manager --add-repo http://developer.download.nvidia.com/compute/cuda/repos/rhel7/x86_64/cuda-rhel7.repo && \\\n    yum -y update && \\\n    yum install -y libnccl-${NCCL_VERSION}+cuda${CUDA_SHORT} libnccl-devel-${NCCL_VERSION}+cuda${CUDA_SHORT} libnccl-static-${NCCL_VERSION}+cuda${CUDA_SHORT} && rm -rf /var/cache/yum\n\nENV PATH=/opt/python/bin:/opt/maven/bin:$PATH\nENV CC=/opt/rh/devtoolset-8/root/usr/bin/gcc\nENV CXX=/opt/rh/devtoolset-8/root/usr/bin/c++\nENV CPP=/opt/rh/devtoolset-8/root/usr/bin/cpp\n\n# Install Python packages\nRUN \\\n    pip install --no-cache-dir numpy pytest scipy scikit-learn wheel kubernetes awscli\n\nENV GOSU_VERSION 1.10\n\n# Install lightweight sudo (not bound to TTY)\nRUN set -ex; \\\n    wget -nv -nc -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-amd64\" && \\\n    chmod +x /usr/local/bin/gosu && \\\n    gosu nobody true\n\n# Default entry-point to use if running locally\n# It will preserve attributes of created files\nCOPY entrypoint.sh /scripts/\n\nWORKDIR /workspace\nENTRYPOINT [\"/scripts/entrypoint.sh\"]\n"
}