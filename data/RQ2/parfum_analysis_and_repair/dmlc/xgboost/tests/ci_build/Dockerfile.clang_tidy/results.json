{
  "startTime": 1674253797303,
  "endTime": 1674253798105,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 70
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 70
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 53
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG CUDA_VERSION_ARG\nFROM nvidia/cuda:$CUDA_VERSION_ARG-devel-ubuntu18.04\nARG CUDA_VERSION_ARG\n\n# Environment\nENV DEBIAN_FRONTEND noninteractive\n\n# Install all basic requirements\nRUN \\\n    apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/3bf863cc.pub && \\\n    apt-get update && \\\n    apt-get install --no-install-recommends -y tar unzip wget git build-essential python3 python3-pip software-properties-common \\\n                       apt-transport-https ca-certificates gnupg-agent && \\\n    wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \\\n    add-apt-repository -u 'deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-11 main' && \\\n    apt-get update && \\\n    apt-get install --no-install-recommends -y llvm-11 clang-tidy-11 clang-11 && \\\n    wget -nv -nc https://cmake.org/files/v3.14/cmake-3.14.0-Linux-x86_64.sh --no-check-certificate && \\\n    bash cmake-3.14.0-Linux-x86_64.sh --skip-license --prefix=/usr && rm -rf /var/lib/apt/lists/*;\n\n# Set default clang-tidy version\nRUN \\\n    update-alternatives --install /usr/bin/clang-tidy clang-tidy /usr/bin/clang-tidy-11 100 && \\\n    update-alternatives --install /usr/bin/clang clang /usr/bin/clang-11 100\n\n# Install Python packages\nRUN \\\n    pip3 install --no-cache-dir pyyaml\n\nENV GOSU_VERSION 1.10\n\n# Install lightweight sudo (not bound to TTY)\nRUN set -ex; \\\n    wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-amd64\" && \\\n    chmod +x /usr/local/bin/gosu && \\\n    gosu nobody true\n\n# Default entry-point to use if running locally\n# It will preserve attributes of created files\nCOPY entrypoint.sh /scripts/\n\nWORKDIR /workspace\nENTRYPOINT [\"/scripts/entrypoint.sh\"]\n"
}