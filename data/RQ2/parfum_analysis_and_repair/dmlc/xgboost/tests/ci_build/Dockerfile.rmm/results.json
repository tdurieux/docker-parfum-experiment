{
  "startTime": 1674253280442,
  "endTime": 1674253281321,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 80
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 159
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 80
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 159
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG CUDA_VERSION_ARG\nFROM nvidia/cuda:$CUDA_VERSION_ARG-devel-ubuntu18.04\nARG CUDA_VERSION_ARG\n\n# Environment\nENV DEBIAN_FRONTEND noninteractive\nSHELL [\"/bin/bash\", \"-c\"]   # Use Bash as shell\n\n# Install all basic requirements\nRUN \\\n    apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/3bf863cc.pub && \\\n    apt-get update && \\\n    apt-get install --no-install-recommends -y wget unzip bzip2 libgomp1 build-essential ninja-build git && \\\n    # Python\n    wget -O Miniconda3.sh https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh && \\\n    bash Miniconda3.sh -b -p /opt/python && rm -rf /var/lib/apt/lists/*;\n\n# NCCL2 (License: https://docs.nvidia.com/deeplearning/sdk/nccl-sla/index.html)\nRUN \\\n    export CUDA_SHORT=`echo $CUDA_VERSION_ARG | grep -o -E '[0-9]+\\.[0-9]'` && \\\n    export NCCL_VERSION=2.7.5-1 && \\\n    apt-get update && \\\n    apt-get install --no-install-recommends -y --allow-downgrades --allow-change-held-packages libnccl2=${NCCL_VERSION}+cuda${CUDA_SHORT} libnccl-dev=${NCCL_VERSION}+cuda${CUDA_SHORT} && rm -rf /var/lib/apt/lists/*;\n\nENV PATH=/opt/python/bin:$PATH\n\n# Create new Conda environment with RMM\nRUN \\\n    conda create -n gpu_test -c rapidsai-nightly -c rapidsai -c nvidia -c conda-forge -c defaults \\\n        python=3.9 rmm=22.04* cudatoolkit=$CUDA_VERSION_ARG cmake\n\nENV GOSU_VERSION 1.10\n\n# Install lightweight sudo (not bound to TTY)\nRUN set -ex; \\\n    wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-amd64\" && \\\n    chmod +x /usr/local/bin/gosu && \\\n    gosu nobody true\n\n# Default entry-point to use if running locally\n# It will preserve attributes of created files\nCOPY entrypoint.sh /scripts/\n\nWORKDIR /workspace\nENTRYPOINT [\"/scripts/entrypoint.sh\"]\n"
}