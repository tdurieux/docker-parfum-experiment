{
  "startTime": 1674250877714,
  "endTime": 1674250879219,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 41
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#                     16.04-py35  18.04-py36  20.04-py38\n# ARG UBUNTU_TAG      16.04       18.04       20.04\n# ARG PYTHON_VERSION  3           3           3\n\nARG UBUNTU_TAG\nFROM ubuntu:$UBUNTU_TAG\n\nMAINTAINER Mauricio Villegas <mauricio@omnius.com>\n\nSHELL [\"/bin/bash\", \"-c\"]\nENV \\\n DEBIAN_FRONTEND=noninteractive \\\n LANG=en_US.UTF-8 \\\n LC_ALL=C.UTF-8\n\nARG PYTHON_VERSION=3\n\nRUN if ! test -n \"$PYTHON_VERSION\"; then \\\n      echo \"error: PYTHON_VERSION argument is required\"; \\\n      exit 1; \\\n    fi \\\n && . /etc/os-release \\\n && if [ \"$VERSION_ID\" = \"16.04\" ] && [ \"$PYTHON_VERSION\" = \"2\" ]; then \\\n      PYTHON_VERSION=; \\\n    elif [ \"$PYTHON_VERSION\" != \"3\" ]; then \\\n      echo \"error: unsupported combination UBUNTU=$VERSION_ID PYTHON=$PYTHON_VERSION\"; \\\n      exit 1; \\\n    fi \\\n && apt-get update --fix-missing \\\n && apt-get dist-upgrade -y \\\n && apt-get install -y --no-install-recommends \\\n      less \\\n      nano \\\n      ca-certificates \\\n      git \\\n      g++ \\\n      swig \\\n      zip \\\n      unzip \\\n      locales \\\n      openssh-client \\\n      python$PYTHON_VERSION \\\n      python$PYTHON_VERSION-setuptools \\\n      python$PYTHON_VERSION-pkgconfig \\\n      python$PYTHON_VERSION-wheel \\\n      python$PYTHON_VERSION-pip \\\n      python$PYTHON_VERSION-dev \\\n      libxml2-dev \\\n      libxslt1-dev \\\n      libopencv-dev \\\n      libgdal-dev \\\n      libboost-all-dev \\\n      libopenblas-dev \\\n && locale-gen en_US.UTF-8 \\\n && if [ -f /usr/lib/x86_64-linux-gnu/pkgconfig/opencv4.pc ]; then \\\n      ln -s opencv4.pc /usr/lib/x86_64-linux-gnu/pkgconfig/opencv.pc; \\\n    fi \\\n && pip3 install --no-cache-dir --upgrade pip setuptools \\\n && apt-get autoremove -y \\\n && apt-get purge -y $(dpkg -l | awk '{if($1==\"rc\")print $2}') \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n\n#RUN useradd -m -u 1234 pagexml-build\n#WORKDIR /home/pagexml-build\n#USER 1234\n"
}