{
  "startTime": 1674248436568,
  "endTime": 1674248437138,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 87,
        "lineEnd": 87,
        "columnStart": 4,
        "columnEnd": 116
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 88,
        "lineEnd": 88,
        "columnStart": 4,
        "columnEnd": 36
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#                     16.04-py35  18.04-py36  20.04-py38\n# ARG UBUNTU_TAG      16.04       18.04       20.04\n# ARG PYTHON_VERSION  3           3           3\n\nARG UBUNTU_TAG\nFROM ubuntu:$UBUNTU_TAG\n\nLABEL maintainer=\"Mauricio Villegas <mauricio@omnius.com>\"\n\nSHELL [\"/bin/bash\", \"-c\"]\nENV \\\n DEBIAN_FRONTEND=noninteractive \\\n LANG=en_US.UTF-8 \\\n LC_ALL=C.UTF-8\n\n\nARG PYTHON_VERSION=3\n\nRUN if ! test -n \"$PYTHON_VERSION\"; then \\\n      echo \"error: PYTHON_VERSION argument is required\"; \\\n      exit 1; \\\n    fi \\\n && . /etc/os-release \\\n && if [ \"$VERSION_ID\" = \"16.04\" ] && [ \"$PYTHON_VERSION\" = \"2\" ]; then \\\n      CV_VERSION=2.4v5; \\\n      GDAL_VERSION=1i; \\\n      PYTHON_VERSION=; \\\n    elif [ \"$VERSION_ID\" = \"16.04\" ] && [ \"$PYTHON_VERSION\" = \"3\" ]; then \\\n      CV_VERSION=2.4v5; \\\n      GDAL_VERSION=1i; \\\n    elif [ \"$VERSION_ID\" = \"18.04\" ] && [ \"$PYTHON_VERSION\" = \"3\" ]; then \\\n      CV_VERSION=3.2; \\\n      GDAL_VERSION=20; \\\n    elif [ \"$VERSION_ID\" = \"20.04\" ] && [ \"$PYTHON_VERSION\" = \"3\" ]; then \\\n      CV_VERSION=4.2; \\\n      GDAL_VERSION=26; \\\n    else \\\n      echo \"error: unsupported combination UBUNTU=$VERSION_ID PYTHON=$PYTHON_VERSION\"; \\\n      exit 1; \\\n    fi \\\n && apt-get update --fix-missing \\\n && apt-get dist-upgrade -y \\\n && apt-get install -y --no-install-recommends \\\n      less \\\n      nano \\\n      curl \\\n      ca-certificates \\\n      python$PYTHON_VERSION \\\n      python$PYTHON_VERSION-pip \\\n      virtualenv \\\n      libxml2 \\\n      libxslt1.1 \\\n      libopencv-imgproc$CV_VERSION \\\n      libopencv-highgui$CV_VERSION \\\n      libopencv-core$CV_VERSION \\\n      libgdal$GDAL_VERSION \\\n && if [ \"$VERSION_ID\" != \"16.04\" ]; then \\\n      apt-get install -y --no-install-recommends \\\n        python$PYTHON_VERSION-distutils \\\n        libsm6; \\\n    fi \\\n && pip3 install --no-cache-dir --upgrade pip setuptools wheel \\\n && apt-get purge -y \\\n      python$PYTHON_VERSION-pip \\\n && apt-get autoremove -y \\\n && apt-get purge -y $(dpkg -l | awk '{if($1==\"rc\")print $2}') \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/*\n\n\nARG PAGEXML_VERSION\n\nRUN if ! test -n \"$PAGEXML_VERSION\"; then \\\n      echo \"error: PAGEXML_VERSION argument is required\"; \\\n      exit 1; \\\n    fi \\\n && . /etc/os-release \\\n && if [ \"$VERSION_ID\" = \"16.04\" ] && [ \"$PYTHON_VERSION\" = \"2\" ]; then \\\n      PAGEXML_RELEASE=$PAGEXML_VERSION/pagexml-${PAGEXML_VERSION//.0/.}-cp27-cp27m; \\\n    elif [ \"$VERSION_ID\" = \"16.04\" ] && [ \"$PYTHON_VERSION\" = \"3\" ]; then \\\n      PAGEXML_RELEASE=$PAGEXML_VERSION/pagexml-${PAGEXML_VERSION//.0/.}-cp35-cp35m; \\\n    elif [ \"$VERSION_ID\" = \"18.04\" ] && [ \"$PYTHON_VERSION\" = \"3\" ]; then \\\n      PAGEXML_RELEASE=$PAGEXML_VERSION/pagexml-${PAGEXML_VERSION//.0/.}-cp36-cp36m; \\\n    elif [ \"$VERSION_ID\" = \"20.04\" ] && [ \"$PYTHON_VERSION\" = \"3\" ]; then \\\n      PAGEXML_RELEASE=$PAGEXML_VERSION/pagexml-${PAGEXML_VERSION//.0/.}-cp38-cp38; \\\n    fi \\\n && PAGEXML_WHEEL=/tmp/${PAGEXML_RELEASE##*/}-linux_x86_64.whl \\\n && curl -f -L -o $PAGEXML_WHEEL https://github.com/omni-us/pagexml/releases/download/$PAGEXML_RELEASE-linux_x86_64.whl \\\n && pip3 install --no-cache-dir $PAGEXML_WHEEL[all] \\\n && python3 -m pagexml_tests \\\n && rm -rf /tmp/*\n"
}