{
  "startTime": 1674218128853,
  "endTime": 1674218129314,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# -----------------------------------------------------------------------------\n# This stage builds the development image\n# -----------------------------------------------------------------------------\n# Note we need a version of Node that is supported by ember-cli.\n# See: https://github.com/ember-cli/ember-cli/blob/master/docs/node-support.md\n#\nFROM node:16-alpine as development\n\n# Install Ember CLI\n# \"unsafe-perm\" step is a workaround for a bug.\n# See: https://github.com/npm/uid-number/issues/7\nRUN npm config set unsafe-perm true && \\\n    npm install --global ember-cli && \\\n    ember --version && \\\n    npm install --global eslint && \\\n    eslint --version; npm cache clean --force;\n\n# Set up build directory\nWORKDIR /build\n\nCOPY ./app/               ./app/\nCOPY ./config/            ./config/\nCOPY ./mirage/            ./mirage/\nCOPY ./public/            ./public/\nCOPY ./tests/             ./tests/\nCOPY [\"./.ember-cli.js\", \"./.eslintignore\", \"./.eslintrc.js\", \"./ember-cli-build.js\", \"./package.json\", \"./package-lock.json\", \"./testem.js\", \"./\"]\n\n\n# -----------------------------------------------------------------------------\n# This stage builds the Ember application\n# -----------------------------------------------------------------------------\n\nFROM development as build\n\n# Install dependencies & build the application\nRUN npm install && npm run lint:js && ember build --environment production; npm cache clean --force;\n\n# -----------------------------------------------------------------------------\n# This stage builds the application container using Nginx\n# -----------------------------------------------------------------------------\nFROM nginx:1.21.6-alpine as application\n\n# Copy the application with dependencies from the build container\nCOPY --from=build /build/dist /var/www/application/client\n\n# Replace Nginx default site config\nCOPY ./docker/nginx-default.conf /etc/nginx/conf.d/default.conf\n\n# Set working directory to document root\nWORKDIR /var/www/application/client\n"
}