{
  "startTime": 1674251572569,
  "endTime": 1674251573444,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 32
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.9-slim\n\nARG ENVIRONMENT\n\nENV ENVIRONMENT=${ENVIRONMENT} \\\n    PYTHONFAULTHANDLER=1 \\\n    PYTHONUNBUFFERED=1 \\\n    PYTHONHASHSEED=random \\\n    PIP_NO_CACHE_DIR=off \\\n    PIP_DISABLE_PIP_VERSION_CHECK=on \\\n    PIP_DEFAULT_TIMEOUT=100 \\\n    POETRY_VERSION=1.1.4 \\\n    PYTHONPATH=/opt/blog/backend\n\nRUN apt update && \\\n    apt install --no-install-recommends -y libpq-dev gcc && \\\n    pip install --no-cache-dir \"poetry==${POETRY_VERSION}\" && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /opt/blog/backend\n\nCOPY backend/poetry.lock /opt/blog/backend/\n\nCOPY backend/pyproject.toml /opt/blog/backend/\n\nCOPY deployments/entrypoints/fapi-init.sh /opt/blog/backend/\n\nRUN poetry config virtualenvs.create false &&\\\n    poetry install $(test ${ENVIRONMENT} = \"production\" && echo \"--no-dev\") --no-interaction --no-ansi && \\\n    apt purge -y gcc\n\nCOPY . .\n\nEXPOSE 8000\n\n# ENTRYPOINT uvicorn app.main:app --host=0.0.0.0 $(test ${ENVIRONMENT} = \"development\" && echo \"--reload\")\n"
}