{
  "startTime": 1674248602127,
  "endTime": 1674248603182,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 11,
        "columnEnd": 65
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# This Dockerfile for a Ruby application was generated by gcloud.\n\n# The base Dockerfile installs:\n# * A number of packages needed by the Ruby runtime and by gems\n#   commonly used in Ruby web apps (such as libsqlite3)\n# * A recent version of NodeJS\n# * A recent version of the standard Ruby runtime to use by default\n# * The bundler gem\nFROM gcr.io/google-appengine/ruby:{base_image_tag}\n\n# If your application requires a specific ruby version (compatible with rbenv),\n# set it here. Leave blank to use the currently recommended default.\nARG REQUESTED_RUBY_VERSION=\"{ruby_version}\"\n\n# Install any requested ruby if not already preinstalled by the base image.\n# Tries installing a prebuilt package first, then falls back to a source build.\nRUN if test -n \"$REQUESTED_RUBY_VERSION\" -a \\\n        ! -x /rbenv/versions/$REQUESTED_RUBY_VERSION/bin/ruby; then \\\n      ( apt-get update -y \\\n        && apt-get install --no-install-recommends -y -q gcp-ruby-$REQUESTED_RUBY_VERSION) \\\n      || (cd /rbenv/plugins/ruby-build \\\n        && git pull \\\n        && rbenv install -s $REQUESTED_RUBY_VERSION) \\\n      && rbenv global $REQUESTED_RUBY_VERSION \\\n      && gem install -q --no-rdoc --no-ri bundler --version $BUNDLER_VERSION \\\n      && apt-get clean \\\n      && rm -f /var/lib/apt/lists/*_*; \\\n    fi\nENV RBENV_VERSION=${{REQUESTED_RUBY_VERSION:-$RBENV_VERSION}}\n\n# Copy the application files.\nCOPY . /app/\n\n# Install required gems if Gemfile.lock is present.\nRUN if test -f Gemfile.lock; then \\\n      bundle install --deployment --without=\"development test\" \\\n      && rbenv rehash; \\\n    fi\n\n# Temporary. Will be moved to base image later.\nENV RACK_ENV=production \\\n    RAILS_ENV=production \\\n    RAILS_SERVE_STATIC_FILES=true\n\n# Run asset pipeline if we're in a Rails app.\nRUN if test -d app/assets -a -f config/application.rb; then \\\n      bundle exec rake assets:precompile || true; \\\n    fi\n\n# BUG: Reset entrypoint to override base image.\nENTRYPOINT []\n\n# Start application on port $PORT.\nCMD {entrypoint}\n"
}