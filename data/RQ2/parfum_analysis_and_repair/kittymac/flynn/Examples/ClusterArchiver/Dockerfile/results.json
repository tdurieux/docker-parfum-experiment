{
  "startTime": 1674248149563,
  "endTime": 1674248150377,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 57,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 8
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 57,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 8
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:18.04 as builder\nARG TARGETPLATFORM\nARG TARGETOS\nARG TARGETARCH\nARG TARGETVARIANT\n\n# 1. get an environment set ready for building with swift\nRUN export DEBIAN_FRONTEND=noninteractive DEBCONF_NONINTERACTIVE_SEEN=true && apt-get -q update && \\\n    apt-get -q --no-install-recommends install -y \\\n    libatomic1 \\\n    libbsd0 \\\n    libcurl4 \\\n    libxml2 \\\n    libedit2 \\\n    libsqlite3-0 \\\n    libc6-dev \\\n    binutils \\\n    libgcc-5-dev \\\n    libstdc++-5-dev \\\n    libpython2.7 \\\n    tzdata \\\n    zlib1g-dev \\\n    git \\\n    curl \\\n    wget \\\n    pkg-config && rm -rf /var/lib/apt/lists/*;\n\nRUN rm -rf /var/lib/apt/lists/*\n\nRUN echo \"Target: $TARGETPLATFORM $TARGETOS $TARGETARCH $TARGETVARIANT\"\n\nWORKDIR /root\nENV PATH=\"/root/swift/usr/bin:$PATH\"\nENV SWIFTURL=\"http://www.chimerasw.com/swift/swift-5.3-$TARGETARCH$TARGETVARIANT-RELEASE-Ubuntu-18.04.tar.gz\"\n\nRUN mkdir -p swift\nRUN wget -qO- $SWIFTURL | tar -xvz -C swift\n\n\n# 2. build our swift program\nWORKDIR /root/ClusterArchiver\nCOPY ./Makefile ./Makefile\nCOPY ./Package.swift ./Package.swift\nCOPY ./meta ./meta\nCOPY ./Sources ./Sources\nCOPY ./Tests ./Tests\n\nRUN make docker-swift\n\n# 3. Now that we have our program built, we create slim version which just includes the swift runtime\nFROM ubuntu:18.04\nARG TARGETPLATFORM\nARG TARGETOS\nARG TARGETARCH\nARG TARGETVARIANT\n\nRUN export DEBIAN_FRONTEND=noninteractive DEBCONF_NONINTERACTIVE_SEEN=true && apt-get -q update && \\\n    apt-get -q --no-install-recommends install -y \\\n    libatomic1 \\\n    libbsd0 \\\n    libcurl4 \\\n    libxml2 \\\n    libsqlite3-0 \\\n    tzdata \\\n    curl \\\n    pkg-config \\\n    wget && rm -rf /var/lib/apt/lists/*;\n\nRUN rm -rf /var/lib/apt/lists/*\n\nWORKDIR /root\nENV PATH=\"/root/swift/usr/bin:$PATH\"\nENV SWIFTSLIMURL=\"http://www.chimerasw.com/swift/swiftslim-5.3-$TARGETARCH$TARGETVARIANT-RELEASE-Ubuntu-18.04.tar.gz\"\n\nRUN mkdir -p swift\nRUN wget -qO- $SWIFTSLIMURL | tar -xvz -C swift\n\nCOPY --from=builder /root/ClusterArchiver/.build/release/ClusterArchiver .\nCMD [\"./ClusterArchiver\", \"support\", \"192.168.1.69\"]\n"
}