{
  "startTime": 1674251724873,
  "endTime": 1674251726037,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 2,
        "columnEnd": 23
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 32,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 11
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 32,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 11
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 23,
        "columnEnd": 103
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 32,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 11
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# NodeJS 10 setup modified from standard NodeJS bullseye-slim installation\n\nFROM debian:bullseye-slim\n\nENV NODE_VERSION 10.24.1\n\nRUN groupadd --gid 1000 node \\\n  && useradd --uid 1000 --gid node --shell /bin/bash --create-home node\n\nWORKDIR /app\n\n# Note: this raises a deprecation warning for NodeJS 10\nRUN set -ex \\\n  && apt-get update && apt-get install -y ca-certificates curl dirmngr xz-utils --no-install-recommends \\\n  && curl -fsSLO --compressed \"https://nodejs.org/dist/latest-v10.x/node-v$NODE_VERSION-linux-x64.tar.xz\" \\\n  && tar -xJf \"node-v$NODE_VERSION-linux-x64.tar.xz\" -C /usr/local --strip-components=1 --no-same-owner \\\n  && rm \"node-v$NODE_VERSION-linux-x64.tar.xz\" \\\n  && apt-mark auto '.*' > /dev/null \\\n  && find /usr/local -type f -executable -exec ldd '{}' ';' \\\n  | awk '/=>/ { print $(NF-1) }' \\\n  | sort -u \\\n  | xargs -r dpkg-query --search \\\n  | cut -d: -f1 \\\n  | sort -u \\\n  | xargs -r apt-mark manual \\\n  && apt-get remove -y dirmngr xz-utils \\\n  # smoke tests\n  && node --version \\\n  && npm --version && rm -rf /var/lib/apt/lists/*;\n\nCOPY package*.json /app/\n\nRUN DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends -y install \\\n  # note: curl added again here to prevent from autoremove\n  curl \\\n  libcairo2-dev \\\n  libgles2-mesa-dev \\\n  libgbm-dev \\\n  libllvm11 \\\n  libprotobuf-dev \\\n  libxxf86vm-dev \\\n  xvfb \\\n  x11-utils && \\\n  # install node deps, then remove any that are not used in production\n  npm install --no-save && \\\n  rm -rf \"/root/.npm\" && \\\n  npm uninstall --no-save typescript eslint @babel/cli node-gyp && \\\n  npm prune --production && \\\n  rm -rf \"/app/node_modules/@mapbox/tiletype/test\" && \\\n  rm -rf \"/app/node_modules/restify/benchmark\" && \\\n  rm -rf \"/app/node_modules/mbgl-renderer/tests\" && \\\n  rm -rf \"/root/.npm\" && \\\n  rm -rf \"/root/.cache\" && \\\n  # remove packages known not to be needed and cleanup apt cache\n  apt-get autoremove -y && \\\n  apt-get remove -y libc6-dev && \\\n  rm -rf \"/var/lib/apt/lists/*\" && \\\n  # create local directory for tiles to prevent startup errors\n  # if this is not defined via a bind point to host\n  mkdir /app/tiles && npm cache clean --force; && rm -rf /var/lib/apt/lists/*;\n\nEXPOSE 80\nENV DISPLAY=:99\n\n# Copy just the compiled code\nCOPY ./dist/* /app/dist/\n\nCOPY ./docker/entrypoint.sh /root\nRUN chmod +x /root/entrypoint.sh\n\nENTRYPOINT [ \"/root/entrypoint.sh\" ]\nHEALTHCHECK CMD curl --fail http://localhost:80/health || exit 1"
}