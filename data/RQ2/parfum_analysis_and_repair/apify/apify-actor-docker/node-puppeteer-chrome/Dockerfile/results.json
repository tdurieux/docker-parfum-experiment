{
  "startTime": 1674252108001,
  "endTime": 1674252108842,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 82,
        "lineEnd": 82,
        "columnStart": 7,
        "columnEnd": 78
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 126,
        "lineEnd": 126,
        "columnStart": 7,
        "columnEnd": 78
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 87,
        "lineEnd": 87,
        "columnStart": 4,
        "columnEnd": 69
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 87,
        "lineEnd": 87,
        "columnStart": 4,
        "columnEnd": 69
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 87,
        "lineEnd": 87,
        "columnStart": 4,
        "columnEnd": 69
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 86,
        "lineEnd": 86,
        "columnStart": 4,
        "columnEnd": 93
      }
    }
  ],
  "repairedDockerfile": "ARG NODE_VERSION=16\n# Use buster to be consistent across node versions.\nFROM node:${NODE_VERSION}-buster-slim\n\nLABEL maintainer=\"support@apify.com\" Description=\"Base image for Apify actors using headless Chrome\"\n\n# This image was inspired by https://github.com/GoogleChrome/puppeteer/blob/master/docs/troubleshooting.md#running-puppeteer-in-docker\n\n# Disable chrome auto updates, based on https://support.google.com/chrome/a/answer/9052345\nRUN mkdir -p /etc/default && echo 'repo_add_once=false' > /etc/default/google-chrome\n\n# Install latest Chrome dev packages and fonts to support major charsets (Chinese, Japanese, Arabic, Hebrew, Thai and a few others)\n# Note: this also installs the necessary libs to make the bundled version of Chromium that Puppeteer installs work.\nRUN DEBIAN_FRONTEND=noninteractive apt-get update \\\n    && DEBIAN_FRONTEND=noninteractive apt-get install -y wget gnupg unzip ca-certificates --no-install-recommends \\\n    && wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | DEBIAN_FRONTEND=noninteractive apt-key add - \\\n    && sh -c 'echo \"deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main\" >> /etc/apt/sources.list.d/google.list' \\\n    && DEBIAN_FRONTEND=noninteractive apt-get update \\\n    && DEBIAN_FRONTEND=noninteractive apt-get purge --auto-remove -y unzip \\\n    && DEBIAN_FRONTEND=noninteractive apt-get install -y \\\n    fonts-freefont-ttf \\\n    fonts-ipafont-gothic \\\n    fonts-kacst \\\n    fonts-liberation \\\n    fonts-thai-tlwg \\\n    fonts-wqy-zenhei \\\n    git \\\n    libappindicator3-1 \\\n    libasound2 \\\n    libatk-bridge2.0-0 \\\n    libatk1.0-0 \\\n    libc6 \\\n    libcairo2 \\\n    libcups2 \\\n    libdbus-1-3 \\\n    libexpat1 \\\n    libfontconfig1 \\\n    libgbm1 \\\n    libgcc1 \\\n    libglib2.0-0 \\\n    libgtk-3-0 \\\n    libnspr4 \\\n    libnss3 \\\n    libpango-1.0-0 \\\n    libpangocairo-1.0-0 \\\n    libstdc++6 \\\n    libx11-6 \\\n    libx11-xcb1 \\\n    libxcb1 \\\n    libxcomposite1 \\\n    libxcursor1 \\\n    libxdamage1 \\\n    libxext6 \\\n    libxfixes3 \\\n    libxi6 \\\n    libxrandr2 \\\n    libxrender1 \\\n    libxss1 \\\n    libxss1 \\\n    libxtst6 \\\n    libxtst6 \\\n    lsb-release \\\n    procps \\\n    xdg-utils \\\n    xvfb \\\n    --no-install-recommends \\\n    && rm -rf /var/lib/apt/lists/* \\\n    && rm -rf /src/*.deb \\\n    && mkdir -p /tmp/.X11-unix \\\n    && chmod 1777 /tmp/.X11-unix\n\n# Globally disable the update-notifier.\nRUN npm config --global set update-notifier false\n\n# Prepare to install the latest Chrome compatible\nRUN mkdir -p /tmp/chrome-install\nWORKDIR /tmp/chrome-install\nCOPY package.json puppeteer_*.js /tmp/chrome-install/\n\n# Install default dependencies\nRUN npm --quiet set progress=false \\\n    && npm install --only=prod --no-optional --no-package-lock --prefer-online && npm cache clean --force;\n\n# Download the latest Chrome\nRUN node ./puppeteer_download.js\n# Install it\nRUN DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y /tmp/chrome.deb \\\n    && rm /tmp/chrome.deb \\\n    && rm -rf /tmp/chrome-install && rm -rf /var/lib/apt/lists/*;\n\n# Add user so we don't need --no-sandbox.\nRUN groupadd -r myuser && useradd -r -g myuser -G audio,video myuser \\\n    && mkdir -p /home/myuser/Downloads \\\n    && chown -R myuser:myuser /home/myuser\n\nRUN mkdir -p /etc/opt/chrome/policies/managed \\\n    && echo '{ \"CommandLineFlagSecurityWarningsEnabled\": false }' > /etc/opt/chrome/policies/managed/managed_policies.json \\\n    && echo '{ \"ComponentUpdatesEnabled\": \"false\" }' > /etc/opt/chrome/policies/managed/component_update.json\n\n# Run everything after as non-privileged user.\nUSER myuser\nWORKDIR /home/myuser\n\n# Copy source code and xvfb script\nCOPY --chown=myuser:myuser package.json main.js puppeteer_*.js start_xvfb_and_run_cmd.sh /home/myuser/\n\n# Uncomment to skip the chromium download when installing puppeteer. If you do,\n# you'll need to launch puppeteer with:\n#     browser.launch({executablePath: 'google-chrome'})\n# ENV PUPPETEER_SKIP_CHROMIUM_DOWNLOAD true\n\n# Sets path to Chrome executable, this is used by Apify.launchPuppeteer()\nENV APIFY_CHROME_EXECUTABLE_PATH=/usr/bin/google-chrome\n\n# Tell Node.js this is a production environemnt\nENV NODE_ENV=production\n\n# Enable Node.js process to use a lot of memory (actor has limit of 32GB)\n# Increases default size of headers. The original limit was 80kb, but from node 10+ they decided to lower it to 8kb.\n# However they did not think about all the sites there with large headers,\n# so we put back the old limit of 80kb, which seems to work just fine.\nENV NODE_OPTIONS=\"--max_old_space_size=30000 --max-http-header-size=80000\"\n\n# Install default dependencies, print versions of everything\nRUN npm --quiet set progress=false \\\n    && npm install --only=prod --no-optional --no-package-lock --prefer-online \\\n    && echo \"Installed NPM packages:\" \\\n    && (npm list --only=prod --no-optional || true) \\\n    && echo \"Node.js version:\" \\\n    && node --version \\\n    && echo \"NPM version:\" \\\n    && npm --version \\\n    && echo \"Google Chrome version:\" \\\n    && bash -c \"$APIFY_CHROME_EXECUTABLE_PATH --version\" && npm cache clean --force;\n\n# Set up xvfb\nENV DISPLAY=:99\nENV XVFB_WHD=1280x720x16\n\n# NOTEs:\n# - This needs to be compatible with CLI.\n# - Using CMD instead of ENTRYPOINT, to allow manual overriding\nCMD ./start_xvfb_and_run_cmd.sh && npm start --silent\n"
}