{
  "startTime": 1674250233062,
  "endTime": 1674250233886,
  "originalSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 120
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 98
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 120
      }
    }
  ],
  "repairedDockerfile": "ARG NODE_VERSION=16\nFROM node:${NODE_VERSION}-alpine\n\n# First, download PhantomJS and necessary libraries, these change rarely\nRUN DEBIAN_FRONTEND=noninteractive apt-get update \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y wget ca-certificates --no-install-recommends \\\n && wget --no-verbose -O /usr/bin/phantomjs https://s3.amazonaws.com/apifier-phantomjs-builds/phantomjs-2.1.1s-apifier-ubuntu-16.04-x64 \\\n && wget --no-verbose -O /lib/x86_64-linux-gnu/libicudata.so.55.1 https://s3.amazonaws.com/apifier-phantomjs-builds/libicudata.so.55.1 \\\n && wget --no-verbose -O /lib/x86_64-linux-gnu/libicui18n.so.55.1 https://s3.amazonaws.com/apifier-phantomjs-builds/libicui18n.so.55.1 \\\n && wget --no-verbose -O /lib/x86_64-linux-gnu/libicuuc.so.55.1 https://s3.amazonaws.com/apifier-phantomjs-builds/libicuuc.so.55.1 \\\n && wget --no-verbose -O /lib/x86_64-linux-gnu/libssl.so.1.0.0 https://s3.amazonaws.com/apifier-phantomjs-builds/libssl.so.1.0.0 \\\n && wget --no-verbose -O /lib/x86_64-linux-gnu/libcrypto.so.1.0.0 https://s3.amazonaws.com/apifier-phantomjs-builds/libcrypto.so.1.0.0 \\\n && ln -s /lib/x86_64-linux-gnu/libicudata.so.55.1 /lib/x86_64-linux-gnu/libicudata.so.55 \\\n && ln -s /lib/x86_64-linux-gnu/libicui18n.so.55.1 /lib/x86_64-linux-gnu/libicui18n.so.55 \\\n && ln -s /lib/x86_64-linux-gnu/libicuuc.so.55.1 /lib/x86_64-linux-gnu/libicuuc.so.55 \\\n && chmod a+x /usr/bin/phantomjs \\\n && chown root:root /usr/bin/phantomjs && rm -rf /var/lib/apt/lists/*;\n\n# Install packages\nRUN DEBIAN_FRONTEND=noninteractive apt-get purge --auto-remove -y wget \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y libfreetype6 libfontconfig1 procps sqlite3 --no-install-recommends \\\n && rm -rf /var/lib/apt/lists/* \\\n && rm -rf /src/*.deb\n\n# Run everything after as non-privileged user to avoid warnings\nRUN groupadd -r myuser && useradd -r -g myuser -G audio,video myuser \\\n    && mkdir -p /home/myuser/Downloads \\\n    && chown -R myuser:myuser /home/myuser\nUSER myuser\nWORKDIR /home/myuser\n\n# Copy source code\nCOPY --chown=myuser:myuser test.js /home/myuser/\n\n# Tell Node.js this is a production environemnt\nENV NODE_ENV=production\n\n# Enable Node.js process to use a lot of memory (actor has limit of 32GB)\n# Increases default size of headers. The original limit was 80kb, but from node 10+ they decided to lower it to 8kb.\n# However they did not think about all the sites there with large headers,\n# so we put back the old limit of 80kb, which seems to work just fine.\nENV NODE_OPTIONS=\"--max_old_space_size=30000 --max-http-header-size=80000\"\n\n# Install default dependencies, print versions of everything\nRUN echo \"Node.js version:\" \\\n && node --version \\\n && echo \"NPM version:\" \\\n && npm --version \\\n && npm config --global set update-notifier false\n\n# We're using CMD instead of ENTRYPOINT, to allow manual overriding\nCMD node test.js\n"
}