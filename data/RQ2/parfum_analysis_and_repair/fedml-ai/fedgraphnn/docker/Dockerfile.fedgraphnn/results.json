{
  "startTime": 1674256019914,
  "endTime": 1674256021463,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 85,
        "lineEnd": 117,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 123,
        "lineEnd": 123,
        "columnStart": 9,
        "columnEnd": 133
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 124,
        "lineEnd": 124,
        "columnStart": 9,
        "columnEnd": 138
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 130,
        "lineEnd": 130,
        "columnStart": 4,
        "columnEnd": 89
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 131,
        "lineEnd": 131,
        "columnStart": 4,
        "columnEnd": 88
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 132,
        "lineEnd": 132,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 146,
        "lineEnd": 146,
        "columnStart": 9,
        "columnEnd": 35
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 147,
        "lineEnd": 147,
        "columnStart": 9,
        "columnEnd": 36
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 148,
        "lineEnd": 148,
        "columnStart": 9,
        "columnEnd": 32
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 154,
        "lineEnd": 154,
        "columnStart": 9,
        "columnEnd": 31
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 74,
        "lineEnd": 74,
        "columnStart": 4,
        "columnEnd": 72
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 79,
        "lineEnd": 79,
        "columnStart": 240,
        "columnEnd": 340
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 182,
        "lineEnd": 182,
        "columnStart": 9,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 182,
        "lineEnd": 182,
        "columnStart": 9,
        "columnEnd": 32
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 74,
        "lineEnd": 74,
        "columnStart": 4,
        "columnEnd": 72
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 79,
        "lineEnd": 79,
        "columnStart": 240,
        "columnEnd": 340
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 182,
        "lineEnd": 182,
        "columnStart": 9,
        "columnEnd": 32
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 66
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 182,
        "lineEnd": 182,
        "columnStart": 9,
        "columnEnd": 56
      }
    }
  ],
  "repairedDockerfile": "FROM nvidia/cuda:11.1-devel-ubuntu18.04\n\n\n##############################################################################\n# Directory Settings\n##############################################################################\nENV INSTALL_DIR=/tmp\nENV WORKSPACE=/home/fedgraphnn\nRUN mkdir -p ${INSTALL_DIR}\nRUN mkdir -p ${WORKSPACE}\n\n\n##############################################################################\n# Installation/Basic Utilities\n##############################################################################\nRUN apt-get update\nRUN apt-get install -y --no-install-recommends \\\n        software-properties-common build-essential autotools-dev \\\n        nfs-common pdsh \\\n        cmake g++ gcc \\\n        curl wget vim tmux emacs less unzip \\\n        htop iftop iotop ca-certificates openssh-client openssh-server \\\n        rsync iputils-ping net-tools sudo \\\n        llvm-9-dev && rm -rf /var/lib/apt/lists/*;\n\n##############################################################################\n# Installation Latest Git\n##############################################################################\nRUN add-apt-repository ppa:git-core/ppa -y && \\\n    apt-get update && \\\n    apt-get install --no-install-recommends -y git && \\\n    git --version && rm -rf /var/lib/apt/lists/*;\n\n##############################################################################\n# OPENMPI\n##############################################################################\nENV OPENMPI_BASEVERSION=4.0\nENV OPENMPI_VERSION=${OPENMPI_BASEVERSION}.1\nRUN cd ${INSTALL_DIR} && \\\n    wget -q -O - https://download.open-mpi.org/release/open-mpi/v${OPENMPI_BASEVERSION}/openmpi-${OPENMPI_VERSION}.tar.gz | tar xzf - && \\\n    cd openmpi-${OPENMPI_VERSION} && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/local/openmpi-${OPENMPI_VERSION} && \\\n    make -j\"$(nproc)\" install && \\\n    ln -s /usr/local/openmpi-${OPENMPI_VERSION} /usr/local/mpi && \\\n    # Sanity check:\n    test -f /usr/local/mpi/bin/mpic++ && \\\n    cd ${INSTALL_DIR} && \\\n    rm -r ${INSTALL_DIR}/openmpi-${OPENMPI_VERSION}\nENV PATH=/usr/local/mpi/bin:${PATH} \\\n    LD_LIBRARY_PATH=/usr/local/lib:/usr/local/mpi/lib:/usr/local/mpi/lib64:${LD_LIBRARY_PATH}\n# Create a wrapper for OpenMPI to allow running as root by default\nRUN mv /usr/local/mpi/bin/mpirun /usr/local/mpi/bin/mpirun.real && \\\n    echo '#!/bin/bash' > /usr/local/mpi/bin/mpirun && \\\n    echo 'mpirun.real --allow-run-as-root --prefix /usr/local/mpi \"$@\"' >> /usr/local/mpi/bin/mpirun && \\\n    chmod a+x /usr/local/mpi/bin/mpirun\n\n##############################################################################\n# Python\n##############################################################################\nENV DEBIAN_FRONTEND=noninteractive\nENV PYTHON_VERSION=3\nRUN apt-get install --no-install-recommends -y python3 python3-dev && \\\n    rm -f /usr/bin/python && \\\n    ln -s /usr/bin/python3 /usr/bin/python && \\\n    curl -f -O https://bootstrap.pypa.io/get-pip.py && \\\n        python get-pip.py && \\\n        rm get-pip.py && \\\n    pip install --no-cache-dir --upgrade pip && \\\n    # Print python an pip version\n    python -V && pip -V && rm -rf /var/lib/apt/lists/*;\nRUN pip install --no-cache-dir pyyaml\nRUN pip install --no-cache-dir ipython\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y vim git tmux wget curl autoconf libtool apt-utils && rm -rf /var/lib/apt/lists/*;\n\n##############################################################################\n# NCCL 2.10.3 Upgrade\n##############################################################################\nRUN apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/7fa2af80.pub && add-apt-repository \"deb https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/ /\" && apt update && apt install --no-install-recommends -y --allow-change-held-packages libnccl2=2.10.3-1+cuda11.0 libnccl-dev=2.10.3-1+cuda11.0 && rm -rf /var/lib/apt/lists/*;\nENV NCCL_VERSION=2.10.3\n\n##############################################################################\n# MPI and other libraries\n##############################################################################\nRUN pip3 install --no-cache-dir mpi4py \\\n    grpcio \\\n    scikit-learn \\\n    numpy \\\n    h5py \\\n    setproctitle \\\n    networkx \\\n    requests \\\n    tqdm \\\n    scipy \\\n    scikit-learn \\\n    seqeval \\\n    tensorboardx \\\n    pandas \\\n    wandb \\\n    streamlit \\\n    matplotlib \\\n    setproctitle \\\n    seaborn \\\n    certifi==2020.6.20 \\\n    chardet==3.0.4 \\\n    et-xmlfile==1.0.1 \\\n    idna==2.10 \\\n    jdcal==1.4.1 \\\n    ruamel.yaml==0.16.10 \\\n    ruamel.yaml.clib==0.2.0 \\\n    urllib3==1.25.9 \\\n    flask==1.1.2 \\\n    gunicorn==20.0.4 \\\n    gevent==20.6.2 \\\n    paho-mqtt==1.5.0 \\\n    Celery==4.4.7 \\\n    dill==0.3.3\n\n\n##############################################################################\n# PyTorch (latest version: v1.9.0)\n##############################################################################\nRUN sudo pip3 install --no-cache-dir numpy ninja pyyaml mkl mkl-include setuptools cmake cffi typing_extensions future six requests dataclasses h5py\nRUN sudo pip3 install --no-cache-dir torch==1.9.0+cu111 torchvision==0.10.0+cu111 torchaudio==0.9.0 -f https://download.pytorch.org/whl/torch_stable.html\n\n\n##############################################################################\n# install torch-geometric (https://pytorch-geometric.readthedocs.io/en/latest/notes/installation.html)\n##############################################################################\nRUN pip install --no-cache-dir torch-scatter -f https://pytorch-geometric.com/whl/torch-1.9.0+cu111.html\nRUN pip install --no-cache-dir torch-sparse -f https://pytorch-geometric.com/whl/torch-1.9.0+cu111.html\nRUN pip install --no-cache-dir torch-geometric\n\n\n##############################################################################\n## Add fedgraphnn user\n###############################################################################\n# Add a fedgraphnn user with user id 8877\nRUN useradd --create-home --uid 1000 --shell /bin/bash fedgraphnn\nRUN usermod -aG sudo fedgraphnn\nRUN echo \"fedgraphnn ALL=(ALL) NOPASSWD: ALL\" >> /etc/sudoers\n# Change to non-root privilege\nUSER fedgraphnn\n\n# Extra installation\nRUN sudo pip3 install --no-cache-dir sentencepiece\nRUN sudo pip3 install --no-cache-dir pytorch-ignite\nRUN sudo pip3 install --no-cache-dir pytest-cov\n\n# Batch Multi Node\nENV USER fedgraphnn\nENV HOME /home/$USER\nRUN echo $HOME\nRUN sudo pip install --no-cache-dir supervisor\n\n\n##############################################################################\n# SSH Setup\n##############################################################################\nENV SSHDIR $HOME/.ssh\nRUN sudo mkdir -p ${SSHDIR}\nRUN sudo touch ${SSHDIR}/sshd_config\nRUN sudo ssh-keygen -t rsa -f ${SSHDIR}/ssh_host_rsa_key -N ''\nRUN sudo cp ${SSHDIR}/ssh_host_rsa_key.pub ${SSHDIR}/authorized_keys\nRUN sudo cp ${SSHDIR}/ssh_host_rsa_key ${SSHDIR}/id_rsa\nRUN sudo chown -R ${USER}:${USER} ${SSHDIR}/\nRUN sudo echo \"       IdentityFile ${SSHDIR}/id_rsa\" >> ${SSHDIR}/config \\\n&& sudo echo \"       StrictHostKeyChecking no\" >> ${SSHDIR}/config \\\n&& sudo echo \"       UserKnownHostsFile /dev/null\" >> ${SSHDIR}/config \\\n&& sudo echo \"       Port 2022\" >> ${SSHDIR}/config \\\n&& sudo echo 'Port 2022' >> ${SSHDIR}/sshd_config \\\n&& sudo echo 'UsePrivilegeSeparation no' >> ${SSHDIR}/sshd_config \\\n&& sudo echo \"HostKey ${SSHDIR}/ssh_host_rsa_key\" >> ${SSHDIR}/sshd_config\nRUN sudo echo \"PidFile ${SSHDIR}/sshd.pid\" >> ${SSHDIR}/sshd_config\nRUN sudo cat ${SSHDIR}/sshd_config\nRUN sudo cat ${SSHDIR}/config\n\nRUN sudo chmod -R 600 ${SSHDIR}/*\nRUN sudo chown -R ${USER}:${USER} ${SSHDIR}/\nRUN eval `ssh-agent -s` && ssh-add ${SSHDIR}/id_rsa\n\nRUN sudo apt install --no-install-recommends -y iproute2 && rm -rf /var/lib/apt/lists/*;\n\n\nEXPOSE 22\n\n\nUSER fedgraphnn\n\n##############################################################################\n# Supervisor container startup\n##############################################################################\nADD supervisord.conf /etc/supervisor/supervisord.conf\nADD sync_all_nodes.sh /supervised-scripts/sync_all_nodes.sh\nRUN sudo chmod 755 supervised-scripts/sync_all_nodes.sh\n\n##############################################################################\n# Entry Point Script\n##############################################################################\nADD entry-point.sh /batch-runtime-scripts/entry-point.sh\nRUN sudo chmod 0755 /batch-runtime-scripts/entry-point.sh\nCMD /batch-runtime-scripts/entry-point.sh"
}