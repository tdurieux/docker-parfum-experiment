{
  "startTime": 1674250208877,
  "endTime": 1674250210730,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 120,
        "lineEnd": 120,
        "columnStart": 9,
        "columnEnd": 132
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 129,
        "lineEnd": 129,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 148,
        "lineEnd": 148,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 149,
        "lineEnd": 149,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 202,
        "lineEnd": 202,
        "columnStart": 9,
        "columnEnd": 31
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 92,
        "lineEnd": 92,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 83,
        "lineEnd": 83,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 115,
        "lineEnd": 115,
        "columnStart": 0,
        "columnEnd": 140
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 147,
        "lineEnd": 147,
        "columnStart": 9,
        "columnEnd": 42
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 230,
        "lineEnd": 230,
        "columnStart": 9,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 70,
        "lineEnd": 77,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 83,
        "lineEnd": 83,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 147,
        "lineEnd": 147,
        "columnStart": 9,
        "columnEnd": 42
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 230,
        "lineEnd": 230,
        "columnStart": 9,
        "columnEnd": 32
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 70,
        "lineEnd": 77,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 83,
        "lineEnd": 83,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 115,
        "lineEnd": 115,
        "columnStart": 0,
        "columnEnd": 140
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 147,
        "lineEnd": 147,
        "columnStart": 9,
        "columnEnd": 42
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 230,
        "lineEnd": 230,
        "columnStart": 9,
        "columnEnd": 32
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 4,
        "columnEnd": 66
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 69,
        "lineEnd": 76,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 82,
        "lineEnd": 82,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 146,
        "lineEnd": 146,
        "columnStart": 9,
        "columnEnd": 66
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 229,
        "lineEnd": 229,
        "columnStart": 9,
        "columnEnd": 56
      }
    }
  ],
  "repairedDockerfile": "# https://hub.docker.com/r/nvidia/cuda/tags\n# https://hub.docker.com/r/nvidia/cuda/tags?page=1&name=11.6.0-devel-ubuntu was released at May 6th, 2022\nFROM nvidia/cuda:11.4.0-devel-ubuntu20.04\nENV OS=ubuntu20.04\n# ARG OS\n\nENV DISTRO=ubuntu2004\n# ARG DISTRO\n\nENV ARCH=x86_64\n# ARG ARCH\n\nENV PYTHON_VERSION=3\n# ARG PYTHON_VERSION\n\nENV PYTORCH_VERSION=1.11.0\n# ARG PYTORCH_VERSION\n\n\n# https://docs.nvidia.com/deeplearning/nccl/release-notes/rel_2-12-10.html#rel_2-12-10\nENV NCCL_VERSION=2.11.4\n# ARG NCCL_VERSION\n# NCCL 2.12.10 release supports CUDA 10.2, CUDA 11.0, and CUDA 11.6.\nENV CUDA_VERSION=11.4\n# ARG CUDA_VERSION\n\n\nRUN echo ${NCCL_VERSION}\nRUN echo ${CUDA_VERSION}\n\n\nENV PATH=/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\nRUN export CUDA_HOME=/usr/local/cuda\nRUN export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/cuda/lib64:/usr/local/cuda/extras/CUPTI/lib64\nRUN export PATH=$PATH:$CUDA_HOME/bin\n\nENV OPENMPI_BASEVERSION=4.1\nENV OPENMPI_VERSION=4.1.2\n\n# when building docker on Ubuntu 20.04, we need to fix the issue: NO_PUBKEY A4B469963BF863CC\n# https://developer.nvidia.com/blog/updating-the-cuda-linux-gpg-repository-key/\n# https://forums.developer.nvidia.com/t/invalid-public-key-for-cuda-apt-repository/212901/20\n\nRUN apt-key del 7fa2af80 \\\n    && rm /etc/apt/sources.list.d/cuda.list\n\n# ***************************************************************************\n# Version and directory Settings\n# ***************************************************************************\nENV INSTALL_DIR=/tmp\nENV WORKSPACE=/home/fedml\nRUN mkdir -p ${INSTALL_DIR}\nRUN mkdir -p ${WORKSPACE}\n\n\n# ***************************************************************************\n# Python\n# ***************************************************************************\nARG DEBIAN_FRONTEND=noninteractive\nRUN echo \"nameserver 8.8.8.8\" > /etc/resolv.conf\nRUN apt-get clean\nRUN apt-get --allow-downgrades update\nRUN apt-get install --no-install-recommends -y python3 python3-pip && rm -rf /var/lib/apt/lists/*;\nRUN ln -s /usr/bin/python3 /usr/bin/python\nRUN ln -nsf /usr/bin/pip3 /usr/bin/pip\n\n# ***************************************************************************\n# Utilities\n# ***************************************************************************\nRUN apt-get install -y --no-install-recommends \\\n        software-properties-common build-essential autotools-dev \\\n        nfs-common pdsh \\\n        cmake g++ gcc \\\n        curl wget vim tmux emacs less unzip \\\n        htop iftop iotop ca-certificates openssh-client openssh-server \\\n        rsync iputils-ping net-tools sudo \\\n        llvm-9-dev && rm -rf /var/lib/apt/lists/*;\n\n# ***************************************************************************\n# Git\n# ***************************************************************************\nRUN add-apt-repository ppa:git-core/ppa -y && \\\n    apt-get install --no-install-recommends -y git && \\\n    git --version && rm -rf /var/lib/apt/lists/*;\n\n# ***************************************************************************\n# OPENMPI\n# ***************************************************************************\nRUN cd ${INSTALL_DIR} && \\\n    wget -q -O - https://download.open-mpi.org/release/open-mpi/v${OPENMPI_BASEVERSION}/openmpi-${OPENMPI_VERSION}.tar.gz | tar xzf - && \\\n    cd openmpi-${OPENMPI_VERSION} && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/local/openmpi-${OPENMPI_VERSION} && \\\n    make -j\"$(nproc)\" install && \\\n    ln -s /usr/local/openmpi-${OPENMPI_VERSION} /usr/local/mpi && \\\n    # Sanity check:\n    test -f /usr/local/mpi/bin/mpic++ && \\\n    cd ${INSTALL_DIR} && \\\n    rm -r ${INSTALL_DIR}/openmpi-${OPENMPI_VERSION}\nENV PATH=/usr/local/mpi/bin:${PATH} \\\n    LD_LIBRARY_PATH=/usr/local/lib:/usr/local/mpi/lib:/usr/local/mpi/lib64:${LD_LIBRARY_PATH}\n# Create a wrapper for OpenMPI to allow running as root by default\nRUN mv /usr/local/mpi/bin/mpirun /usr/local/mpi/bin/mpirun.real && \\\n    echo '#!/bin/bash' > /usr/local/mpi/bin/mpirun && \\\n    echo 'mpirun.real --allow-run-as-root --prefix /usr/local/mpi \"$@\"' >> /usr/local/mpi/bin/mpirun && \\\n    chmod a+x /usr/local/mpi/bin/mpirun\n\n\n# ***************************************************************************\n# NCCL\n# ***************************************************************************\n# https://docs.nvidia.com/deeplearning/nccl/install-guide/index.html#downloadnccl\nRUN apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/${DISTRO}/${ARCH}/7fa2af80.pub && \\\nadd-apt-repository \"deb https://developer.download.nvidia.com/compute/cuda/repos/${DISTRO}/${ARCH} /\" && \\\napt update && \\\n apt install --no-install-recommends -y --allow-change-held-packages libnccl2=${NCCL_VERSION}-1+cuda${CUDA_VERSION} libnccl-dev=${NCCL_VERSION}-1+cuda${CUDA_VERSION} && rm -rf /var/lib/apt/lists/*;\n\n# ***************************************************************************\n# PyTorch (install from source)\n# ***************************************************************************\nRUN sudo pip install --no-cache-dir numpy ninja pyyaml mkl mkl-include setuptools cmake cffi typing_extensions future six requests dataclasses h5py\n\nRUN cd ${INSTALL_DIR} && \\\ngit clone https://github.com/pytorch/pytorch.git && \\\ncd pytorch && git checkout v${PYTORCH_VERSION} && \\\ngit submodule sync && \\\ngit submodule update --init --recursive --jobs 0 && \\\nsudo USE_SYSTEM_NCCL=1 TORCH_CUDA_ARC_LIST=\"6.0 6.1 7.0 7.5 8.0\" CMAKE_CUDA_COMPILER=\"/usr/local/cuda\" python setup.py install\n#RUN rm -rf ${INSTALL_DIR}/pytorch\nRUN pip install --no-cache-dir torch==1.11.0\n\nRUN python3 -c \"import torch; torch.__version__\"\n\n# ***************************************************************************\n# install torch-geometric (https://pytorch-geometric.readthedocs.io/en/latest/notes/installation.html)\n# ***************************************************************************\nRUN cd ${INSTALL_DIR} && \\\ngit clone https://github.com/pyg-team/pytorch_geometric.git && \\\ncd pytorch_geometric && \\\ngit submodule sync && \\\ngit submodule update --init --recursive --jobs 0 && \\\nsudo python setup.py install\nRUN rm -rf ${INSTALL_DIR}/pytorch_geometric\n\n# ***************************************************************************\n## install fedml from source\n# ***************************************************************************\nRUN sudo apt-get install --no-install-recommends -y python3-mpi4py && rm -rf /var/lib/apt/lists/*;\nRUN pip install --no-cache-dir urllib3==1.26.9\nRUN pip3 install --no-cache-dir --upgrade requests\n\n#\n#RUN pip install numpy>=1.21 \\\n#    PyYAML \\\n#    h5py \\\n#    tqdm \\\n#    wandb \\\n#    wget \\\n#    torchvision \\\n#    paho-mqtt \\\n#    joblib \\\n#    boto3 \\\n#    pynvml \\\n#    sklearn \\\n#    networkx \\\n#    click \\\n#    grpcio \\\n#    aif360 \\\n#    tempeh \\\n#    imblearn \\\n#    tabulate\n\nRUN cd ${INSTALL_DIR} && \\\ngit clone https://github.com/FedML-AI/FedML.git && cd ${INSTALL_DIR}/FedML && git pull\nRUN cd ${INSTALL_DIR}/FedML/python && \\\ngit submodule sync && \\\ngit submodule update --init --recursive --jobs 0 && \\\nsudo python setup.py install\nRUN rm -rf ${INSTALL_DIR}/FedML\n\nRUN python -c \"import fedml; fedml.__version__\"\n\n# ***************************************************************************\n## Add fedml user\n# ***************************************************************************\n# Add a fedml user with user id\nRUN useradd --create-home --uid 1000 --shell /bin/bash fedml\nRUN usermod -aG sudo fedml\nRUN echo \"fedml ALL=(ALL) NOPASSWD: ALL\" >> /etc/sudoers\n\n# Change to non-root privilege\n#USER fedml\n\n# Extra installation\n#RUN sudo pip3 install sentencepiece\n#RUN sudo pip3 install pytorch-ignite\n#RUN sudo pip3 install pytest-cov\n\n# Batch Multi Node\nENV USER fedml\nENV HOME /home/$USER\nRUN echo $HOME\nRUN sudo pip install --no-cache-dir supervisor\n\n\n# ***************************************************************************\n# SSH Setup\n# ***************************************************************************\nENV SSHDIR $HOME/.ssh\nRUN sudo mkdir -p ${SSHDIR}\nRUN sudo touch ${SSHDIR}/sshd_config\nRUN sudo ssh-keygen -t rsa -f ${SSHDIR}/ssh_host_rsa_key -N ''\nRUN sudo cp ${SSHDIR}/ssh_host_rsa_key.pub ${SSHDIR}/authorized_keys\nRUN sudo cp ${SSHDIR}/ssh_host_rsa_key ${SSHDIR}/id_rsa\nRUN sudo chown -R ${USER}:${USER} ${SSHDIR}/\nRUN sudo echo \"       IdentityFile ${SSHDIR}/id_rsa\" >> ${SSHDIR}/config \\\n&& sudo echo \"       StrictHostKeyChecking no\" >> ${SSHDIR}/config \\\n&& sudo echo \"       UserKnownHostsFile /dev/null\" >> ${SSHDIR}/config \\\n&& sudo echo \"       Port 2022\" >> ${SSHDIR}/config \\\n&& sudo echo 'Port 2022' >> ${SSHDIR}/sshd_config \\\n&& sudo echo 'UsePrivilegeSeparation no' >> ${SSHDIR}/sshd_config \\\n&& sudo echo \"HostKey ${SSHDIR}/ssh_host_rsa_key\" >> ${SSHDIR}/sshd_config\nRUN sudo echo \"PidFile ${SSHDIR}/sshd.pid\" >> ${SSHDIR}/sshd_config\nRUN sudo cat ${SSHDIR}/sshd_config\nRUN sudo cat ${SSHDIR}/config\n\nRUN sudo chmod -R 600 ${SSHDIR}/*\nRUN sudo chown -R ${USER}:${USER} ${SSHDIR}/\nRUN eval `ssh-agent -s` && ssh-add ${SSHDIR}/id_rsa\n\nRUN sudo apt install --no-install-recommends -y iproute2 && rm -rf /var/lib/apt/lists/*;\n\nEXPOSE 22\n\n##############################################################################\n# Supervisor container startup\n##############################################################################\nADD ./x86-64/supervisord.conf /etc/supervisor/supervisord.conf\nADD ./x86-64/sync_all_nodes.sh /supervised-scripts/sync_all_nodes.sh\nRUN sudo chmod 755 supervised-scripts/sync_all_nodes.sh\n\n##############################################################################\n# Entry Point Script\n##############################################################################\nADD ./x86-64/entry-point.sh /batch-runtime-scripts/entry-point.sh\nRUN sudo chmod 0755 /batch-runtime-scripts/entry-point.sh\nCMD /batch-runtime-scripts/entry-point.sh"
}