{
  "startTime": 1674250700948,
  "endTime": 1674250702497,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 25,
        "columnEnd": 63
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 25,
        "columnEnd": 82
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# We use Ubuntu/Debian instead of Alpine to avoid DNS resolution issues in production.\nARG ELIXIR_VERSION=1.13.3\nARG OTP_VERSION=24.2\nARG DEBIAN_VERSION=bullseye-20210902-slim\nARG BUILDER_IMAGE=\"hexpm/elixir:${ELIXIR_VERSION}-erlang-${OTP_VERSION}-debian-${DEBIAN_VERSION}\"\nARG RUNNER_IMAGE=\"debian:${DEBIAN_VERSION}\"\n\nFROM ${BUILDER_IMAGE} as builder\nRUN apt-get update -y && apt-get install --no-install-recommends -y build-essential git \\\n    && apt-get clean && rm -f /var/lib/apt/lists/*_*\nWORKDIR /app\nRUN mix local.hex --force && mix local.rebar --force\nENV MIX_ENV=\"prod\"\nCOPY mix.exs mix.lock ./\nRUN mix deps.get --only $MIX_ENV\nRUN mkdir config\nCOPY config/config.exs config/${MIX_ENV}.exs config/\nRUN mix deps.compile\nCOPY priv priv\nCOPY lib lib\nCOPY assets assets\nRUN mix assets.deploy\nRUN mix compile\nCOPY config/runtime.exs config/\nCOPY rel rel\nRUN mix release\n\nFROM ${RUNNER_IMAGE}\nRUN apt-get update -y && apt-get install --no-install-recommends -y libstdc++6 openssl libncurses5 locales \\\n    && apt-get clean && rm -f /var/lib/apt/lists/*_*\nRUN sed -i '/en_US.UTF-8/s/^# //g' /etc/locale.gen && locale-gen\nENV LANG en_US.UTF-8\nENV LANGUAGE en_US:en\nENV LC_ALL en_US.UTF-8\nWORKDIR \"/app\"\nRUN chown nobody /app\nENV MIX_ENV=\"prod\"\nCOPY --from=builder --chown=nobody:root /app/_build/${MIX_ENV}/rel/app ./\nEXPOSE 42069\nUSER nobody\nCMD [\"/app/bin/server\"]"
}