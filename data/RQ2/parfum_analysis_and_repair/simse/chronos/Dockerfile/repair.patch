diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/simse/chronos/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/simse/chronos/Dockerfile/repaired.Dockerfile
index 08daab9..36cee6c 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/simse/chronos/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/simse/chronos/Dockerfile/repaired.Dockerfile
@@ -6,25 +6,25 @@ ENV TZ=GMT
 RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone
 
 # Add yarn to apt
-RUN curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -
+RUN curl -f -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -
 RUN echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list
 
 # Install common packages
 RUN apt-get update
-RUN pip install cython
-RUN apt-get install -y freetds-dev
-RUN pip install pymssql
+RUN pip install --no-cache-dir cython
+RUN apt-get install --no-install-recommends -y freetds-dev && rm -rf /var/lib/apt/lists/*;
+RUN pip install --no-cache-dir pymssql
 
 # Install Node and Yarn
-RUN apt-get install -y nodejs yarn
+RUN apt-get install --no-install-recommends -y nodejs yarn && rm -rf /var/lib/apt/lists/*;
 
 # Copy Chronos to image
 COPY . /app/chronos
 
 # Build Chronos UI
 WORKDIR /app/chronos/chronos-ui
-RUN yarn
-RUN yarn build
+RUN yarn && yarn cache clean;
+RUN yarn build && yarn cache clean;
 
 # Set enviroment and expose ports and directories
 EXPOSE 5000
@@ -34,6 +34,6 @@ ENV CHRONOS=yes_sir_docker
 
 # Install Python dependencies
 WORKDIR /app/chronos
-RUN pip install -r requirements.txt
+RUN pip install --no-cache-dir -r requirements.txt
 
 ENTRYPOINT python chronos.py