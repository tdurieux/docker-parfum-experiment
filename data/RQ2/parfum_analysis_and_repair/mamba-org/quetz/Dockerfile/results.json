{
  "startTime": 1674253412653,
  "endTime": 1674253413446,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 5,
        "columnEnd": 16
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Build the frontend\nFROM node:14 as node\n\nCOPY quetz_frontend /quetz_frontend\nRUN cd /quetz_frontend \\\n  && npm install \\\n  && npm run build && npm cache clean --force;\n\n# Build conda environment\nFROM condaforge/mambaforge:4.9.2-7 as conda\n\nCOPY environment.yml /tmp/environment.yml\nRUN CONDA_COPY_ALWAYS=true mamba env create -p /env -f /tmp/environment.yml \\\n  && conda clean -afy\n\nCOPY . /code\nRUN conda run -p /env python -m pip install --no-deps /code\n\n# Create image\nFROM debian:buster-slim\n\nENV LANG=C.UTF-8 LC_ALL=C.UTF-8\n\nCOPY --from=node /quetz_frontend/dist /quetz-frontend\nCOPY --from=conda /env /env\n\n# Set WORKDIR to /tmp because quetz always creates a quetz.log file\n# in the current directory\nWORKDIR /tmp\nENV PATH /env/bin:$PATH\nEXPOSE 8000\n\n# The following command assumes that a deployment has been initialized\n# in the /quetz-deployment volume\nCMD [\"quetz\", \"start\", \"/quetz-deployment\", \"--host\", \"0.0.0.0\", \"--port\", \"8000\"]\n"
}