diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/roflcoopter/viseron/docker/jetson-nano/Dockerfile.opencv b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/roflcoopter/viseron/docker/jetson-nano/Dockerfile.opencv/repaired.Dockerfile
index 1035014..5bba637 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/roflcoopter/viseron/docker/jetson-nano/Dockerfile.opencv
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/roflcoopter/viseron/docker/jetson-nano/Dockerfile.opencv/repaired.Dockerfile
@@ -45,7 +45,7 @@ RUN \
   echo "deb https://repo.download.nvidia.com/jetson/common r32.5 main" >>  /etc/apt/sources.list.d/nvidia.list \
   && echo "deb https://repo.download.nvidia.com/jetson/t210 r32.5 main" >>  /etc/apt/sources.list.d/nvidia.list \
   && apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \
-  && mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall
+  && mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall && rm -rf /var/lib/apt/lists/*;
 
 RUN buildDeps="autoconf \
   automake \
@@ -77,20 +77,20 @@ RUN buildDeps="autoconf \
   libcublas-dev" && \
   apt-get -yqq update && \
   apt-get install -yq --no-install-recommends ${buildDeps} && \
-  pip3 install numpy
+  pip3 install --no-cache-dir numpy && rm -rf /var/lib/apt/lists/*;
 
 # Minimal cuda install does not create symlink so we do it manually
 RUN ln -s /usr/local/cuda-10.2 /usr/local/cuda
 
 ## OpenCV
-RUN  \
+RUN \
   DIR=/tmp/opencv && mkdir -p ${DIR} && cd ${DIR} && \
-  curl -sL -o opencv-${OPENCV_VERSION}.tar.gz https://github.com/opencv/opencv/archive/${OPENCV_VERSION}.tar.gz && \
-  tar -x --strip-components=1 -f opencv-${OPENCV_VERSION}.tar.gz
-RUN  \
+  curl -f -sL -o opencv-${OPENCV_VERSION}.tar.gz https://github.com/opencv/opencv/archive/${OPENCV_VERSION}.tar.gz && \
+  tar -x --strip-components=1 -f opencv-${OPENCV_VERSION}.tar.gz && rm opencv-${OPENCV_VERSION}.tar.gz
+RUN \
   DIR=/tmp/opencv_contrib && mkdir -p ${DIR} && cd ${DIR} && \
-  curl -sL -o opencv_contrib-${OPENCV_VERSION}.tar.gz https://github.com/opencv/opencv_contrib/archive/${OPENCV_VERSION}.tar.gz && \
-  tar -x --strip-components=1 -f opencv_contrib-${OPENCV_VERSION}.tar.gz
+  curl -f -sL -o opencv_contrib-${OPENCV_VERSION}.tar.gz https://github.com/opencv/opencv_contrib/archive/${OPENCV_VERSION}.tar.gz && \
+  tar -x --strip-components=1 -f opencv_contrib-${OPENCV_VERSION}.tar.gz && rm opencv_contrib-${OPENCV_VERSION}.tar.gz
 
 RUN \
   DIR=/tmp/opencv/build && mkdir -p ${DIR} && cd ${DIR} && \