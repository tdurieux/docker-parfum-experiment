{
  "startTime": 1674217846866,
  "endTime": 1674217848789,
  "originalSmells": [
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 5,
        "columnEnd": 29
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 5,
        "columnEnd": 23
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 33,
        "columnStart": 25,
        "columnEnd": 12
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Based on https://github.com/eht16/python3-docker\nARG UBUNTU_VERSION\nFROM balenalib/aarch64-ubuntu:${UBUNTU_VERSION}-build as build\nRUN [ \"cross-build-start\" ]\n\nARG PYTHON_VERSION\nARG PYTHON_PIP_VERSION\n\nENV GPG_KEY E3FF2839C048B25C084DEBE9B26995E310250568\nENV LANG=C.UTF-8\nENV DEBIAN_FRONTEND=noninteractive\nENV PIP_URL=https://bootstrap.pypa.io/get-pip.py\nENV PIP_SHA256=b3153ec0cf7b7bbf9556932aa37e4981c35dc2a2c501d70d91d2795aa532be79\n\nRUN \\\n  apt-get -yqq update && apt-get install -yq --no-install-recommends \\\n  ca-certificates \\\n  dirmngr \\\n  dpkg-dev \\\n  gcc \\\n  gnupg \\\n  libbz2-dev \\\n  libc6-dev \\\n  libexpat1-dev \\\n  libffi-dev \\\n  liblzma-dev \\\n  libsqlite3-dev \\\n  libssl-dev \\\n  make \\\n  netbase \\\n  uuid-dev \\\n  wget \\\n  xz-utils \\\n  zlib1g-dev && rm -rf /var/lib/apt/lists/*;\n\nRUN \\\n  wget --no-verbose --output-document=python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\" \\\n  && wget --no-verbose --output-document=python.tar.xz.asc \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\" \\\n  && export GNUPGHOME=\"$(mktemp -d)\" \\\n  && gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \"$GPG_KEY\" \\\n  && gpg --batch --verify python.tar.xz.asc python.tar.xz \\\n  && { command -v gpgconf > /dev/null && gpgconf --kill all || :; } \\\n  && rm -rf \"$GNUPGHOME\" python.tar.xz.asc \\\n  && mkdir -p /usr/src/python \\\n  && tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \\\n  && rm python.tar.xz && rm -rf /usr/src/python\n\nRUN \\\n  cd /usr/src/python \\\n  && gnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n  && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --help \\\n  && ./configure \\\n  --build=\"$gnuArch\" \\\n  --prefix=\"/usr/local\" \\\n  --enable-loadable-sqlite-extensions \\\n  --enable-optimizations \\\n  # --enable-ipv6 \\\n  --disable-shared \\\n  --with-system-expat \\\n  --without-ensurepip \\\n  && make \\\n  && make install\n\nRUN \\\n  strip /usr/local/bin/python3.8\n\n# install pip\nRUN \\\n  wget --no-verbose --output-document=get-pip.py \"$PIP_URL\"; \\\n  \\\n  /usr/local/bin/python3 get-pip.py \\\n  --disable-pip-version-check \\\n  --no-cache-dir \\\n  \"pip==$PYTHON_PIP_VERSION\" \"wheel\"\n\n# cleanup\nRUN \\\n  find /usr/local/lib -type d -a \\( \\\n  -name test -o \\\n  -name tests -o \\\n  -name idlelib -o \\\n  -name turtledemo -o \\\n  -name pydoc_data -o \\\n  -name tkinter \\) -exec rm -rf {} +\n\nRUN [ \"cross-build-end\" ]\n\nFROM scratch\n\nCOPY --from=build /usr/local /usr/local\n"
}