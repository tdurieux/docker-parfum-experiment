diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/roflcoopter/viseron/docker/jetson-nano/Dockerfile.ffmpeg b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/roflcoopter/viseron/docker/jetson-nano/Dockerfile.ffmpeg/repaired.Dockerfile
index 9ef2ad4..ba59eb0 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/roflcoopter/viseron/docker/jetson-nano/Dockerfile.ffmpeg
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/roflcoopter/viseron/docker/jetson-nano/Dockerfile.ffmpeg/repaired.Dockerfile
@@ -1,6 +1,6 @@
 # This is a monster of a Dockerfile.
 # For some reason the command autoreconf CANNOT be run under QEMU, which breaks cross-building.
-# To work around this, each library that needs autoreconf is downloaded and "autoreconf'd" in a amd64 image 
+# To work around this, each library that needs autoreconf is downloaded and "autoreconf'd" in a amd64 image
 # and the result is then copied back into the aarch64 image using multistages to run configure and make.
 
 ARG UBUNTU_VERSION
@@ -15,7 +15,7 @@ RUN \
   ca-certificates \
   curl \
   libtool \
-  pkg-config
+  pkg-config && rm -rf /var/lib/apt/lists/*;
 
 FROM amd64-build as opus
 ARG OPUS_VERSION
@@ -24,10 +24,10 @@ RUN \
   DIR=/tmp/opus && \
   mkdir -p ${DIR} && \
   cd ${DIR} && \
-  curl -sLO https://archive.mozilla.org/pub/opus/opus-${OPUS_VERSION}.tar.gz && \
+  curl -f -sLO https://archive.mozilla.org/pub/opus/opus-${OPUS_VERSION}.tar.gz && \
   echo ${OPUS_SHA256SUM} | sha256sum --check && \
   tar -zx --strip-components=1 -f opus-${OPUS_VERSION}.tar.gz && \
-  autoreconf -fiv
+  autoreconf -fiv && rm opus-${OPUS_VERSION}.tar.gz
 
 FROM amd64-build as fdk-aac
 ARG FDKAAC_VERSION
@@ -35,38 +35,38 @@ RUN \
   DIR=/tmp/fdk-aac && \
   mkdir -p ${DIR} && \
   cd ${DIR} && \
-  curl -sL https://github.com/mstorsjo/fdk-aac/archive/v${FDKAAC_VERSION}.tar.gz | \
+  curl -f -sL https://github.com/mstorsjo/fdk-aac/archive/v${FDKAAC_VERSION}.tar.gz | \
   tar -zx --strip-components=1 && \
   autoreconf -fiv
 
 FROM amd64-build as fribidi
 ARG FRIBIDI_VERSION
 ARG FRIBIDI_SHA256SUM
-RUN  \
+RUN \
   DIR=/tmp/fribidi && \
   mkdir -p ${DIR} && \
   cd ${DIR} && \
-  curl -sLO https://github.com/fribidi/fribidi/archive/${FRIBIDI_VERSION}.tar.gz && \
+  curl -f -sLO https://github.com/fribidi/fribidi/archive/${FRIBIDI_VERSION}.tar.gz && \
   echo ${FRIBIDI_SHA256SUM} | sha256sum --check && \
   tar -zx --strip-components=1 -f ${FRIBIDI_VERSION}.tar.gz && \
   export NOCONFIGURE=1 && \
   DIR=/tmp/fribidi && \
   cd ${DIR} && \
-  ./autogen.sh
+  ./autogen.sh && rm ${FRIBIDI_VERSION}.tar.gz
 
 FROM amd64-build as libass
 ARG LIBASS_VERSION
 ARG LIBASS_SHA256SUM
-RUN  \
+RUN \
   DIR=/tmp/libass && \
   mkdir -p ${DIR} && \
   cd ${DIR} && \
-  curl -sLO https://github.com/libass/libass/archive/${LIBASS_VERSION}.tar.gz && \
+  curl -f -sLO https://github.com/libass/libass/archive/${LIBASS_VERSION}.tar.gz && \
   echo ${LIBASS_SHA256SUM} | sha256sum --check && \
   tar -zx --strip-components=1 -f ${LIBASS_VERSION}.tar.gz && \
   DIR=/tmp/libass && \
   cd ${DIR} && \
-  ./autogen.sh
+  ./autogen.sh && rm ${LIBASS_VERSION}.tar.gz
 
 FROM amd64-build as kvazaar
 ARG KVAZAAR_VERSION
@@ -74,11 +74,11 @@ RUN \
   DIR=/tmp/kvazaar && \
   mkdir -p ${DIR} && \
   cd ${DIR} && \
-  curl -sLO https://github.com/ultravideo/kvazaar/archive/v${KVAZAAR_VERSION}.tar.gz && \
+  curl -f -sLO https://github.com/ultravideo/kvazaar/archive/v${KVAZAAR_VERSION}.tar.gz && \
   tar -zx --strip-components=1 -f v${KVAZAAR_VERSION}.tar.gz && \
   DIR=/tmp/kvazaar && \
   cd ${DIR} && \
-  ./autogen.sh
+  ./autogen.sh && rm v${KVAZAAR_VERSION}.tar.gz
 
 FROM amd64-build as libxcb
 ARG XORG_MACROS_VERSION
@@ -86,24 +86,24 @@ RUN \
   DIR=/tmp/xorg-macros && \
   mkdir -p ${DIR} && \
   cd ${DIR} && \
-  curl -sLO https://www.x.org/archive//individual/util/util-macros-${XORG_MACROS_VERSION}.tar.gz && \
+  curl -f -sLO https://www.x.org/archive//individual/util/util-macros-${XORG_MACROS_VERSION}.tar.gz && \
   tar -zx --strip-components=1 -f util-macros-${XORG_MACROS_VERSION}.tar.gz && \
-  ./configure --srcdir=${DIR} --prefix="${PREFIX}" && \
+  ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --srcdir=${DIR} --prefix="${PREFIX}" && \
   make && \
   make install && \
-  rm -rf ${DIR}
+  rm -rf ${DIR} && rm util-macros-${XORG_MACROS_VERSION}.tar.gz
 
 ARG LIBXCB_VERSION
 RUN \
   DIR=/tmp/libxcb && \
   mkdir -p ${DIR} && \
   cd ${DIR} && \
-  curl -sLO https://xcb.freedesktop.org/dist/libxcb-${LIBXCB_VERSION}.tar.gz && \
+  curl -f -sLO https://xcb.freedesktop.org/dist/libxcb-${LIBXCB_VERSION}.tar.gz && \
   tar -zx --strip-components=1 -f libxcb-${LIBXCB_VERSION}.tar.gz && \
   export NOCONFIGURE=1 && \
   DIR=/tmp/libxcb && \
   cd ${DIR} && \
-  ACLOCAL_PATH="${PREFIX}/share/aclocal" ./autogen.sh
+  ACLOCAL_PATH="${PREFIX}/share/aclocal" ./autogen.sh && rm libxcb-${LIBXCB_VERSION}.tar.gz
 
 FROM amd64-build as libxml2
 ENV PREFIX=/opt/ffmpeg
@@ -113,12 +113,12 @@ RUN \
   DIR=/tmp/libxml2 && \
   mkdir -p ${DIR} && \
   cd ${DIR} && \
-  curl -sLO https://gitlab.gnome.org/GNOME/libxml2/-/archive/v${LIBXML2_VERSION}/libxml2-v${LIBXML2_VERSION}.tar.gz && \
+  curl -f -sLO https://gitlab.gnome.org/GNOME/libxml2/-/archive/v${LIBXML2_VERSION}/libxml2-v${LIBXML2_VERSION}.tar.gz && \
   echo ${LIBXML2_SHA256SUM} | sha256sum --check && \
   tar -xz --strip-components=1 -f libxml2-v${LIBXML2_VERSION}.tar.gz && \
   DIR=/tmp/libxml2 && \
   cd ${DIR} && \
-  ./autogen.sh --prefix="${PREFIX}" --with-ftp=no --with-http=no --with-python=no
+  ./autogen.sh --prefix="${PREFIX}" --with-ftp=no --with-http=no --with-python=no && rm libxml2-v${LIBXML2_VERSION}.tar.gz
 
 FROM amd64-build as libzmq
 ARG LIBZMQ_VERSION
@@ -127,12 +127,12 @@ RUN \
   DIR=/tmp/libzmq && \
   mkdir -p ${DIR} && \
   cd ${DIR} && \
-  curl -sLO https://github.com/zeromq/libzmq/archive/v${LIBZMQ_VERSION}.tar.gz && \
+  curl -f -sLO https://github.com/zeromq/libzmq/archive/v${LIBZMQ_VERSION}.tar.gz && \
   echo ${LIBZMQ_SHA256SUM} | sha256sum --check && \
   tar -xz --strip-components=1 -f v${LIBZMQ_VERSION}.tar.gz && \
   DIR=/tmp/libzmq && \
   cd ${DIR} && \
-  ./autogen.sh
+  ./autogen.sh && rm v${LIBZMQ_VERSION}.tar.gz
 
 
 FROM balenalib/jetson-nano-ubuntu:${UBUNTU_VERSION}-build as qemu
@@ -195,7 +195,7 @@ RUN \
   libv4l-dev \
   nvidia-l4t-jetson-multimedia-api" && \
   apt-get -yqq update && \
-  apt-get install -yq --no-install-recommends ${buildDeps}
+  apt-get install -yq --no-install-recommends ${buildDeps} && rm -rf /var/lib/apt/lists/*;
 
 ### opencore-amr https://sourceforge.net/projects/opencore-amr/
 ARG OPENCOREAMR_VERSION
@@ -203,9 +203,9 @@ RUN \
   DIR=/tmp/opencore-amr && \
   mkdir -p ${DIR} && \
   cd ${DIR} && \
-  curl -sL https://versaweb.dl.sourceforge.net/project/opencore-amr/opencore-amr/opencore-amr-${OPENCOREAMR_VERSION}.tar.gz | \
+  curl -f -sL https://versaweb.dl.sourceforge.net/project/opencore-amr/opencore-amr/opencore-amr-${OPENCOREAMR_VERSION}.tar.gz | \
   tar -zx --strip-components=1 && \
-  ./configure --prefix="${PREFIX}" --enable-shared  && \
+  ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix="${PREFIX}" --enable-shared && \
   make && \
   make install && \
   rm -rf ${DIR}
@@ -215,9 +215,9 @@ RUN \
   DIR=/tmp/x264 && \
   mkdir -p ${DIR} && \
   cd ${DIR} && \
-  curl -sL https://download.videolan.org/pub/videolan/x264/snapshots/x264-snapshot-${X264_VERSION}.tar.bz2 | \
+  curl -f -sL https://download.videolan.org/pub/videolan/x264/snapshots/x264-snapshot-${X264_VERSION}.tar.bz2 | \
   tar -jx --strip-components=1 && \
-  ./configure --prefix="${PREFIX}" --enable-shared --enable-pic --disable-cli && \
+  ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix="${PREFIX}" --enable-shared --enable-pic --disable-cli && \
   make && \
   make install && \
   rm -rf ${DIR}
@@ -227,7 +227,7 @@ RUN \
   DIR=/tmp/x265 && \
   mkdir -p ${DIR} && \
   cd ${DIR} && \
-  curl -sL https://download.videolan.org/pub/videolan/x265/x265_${X265_VERSION}.tar.gz  | \
+  curl -f -sL https://download.videolan.org/pub/videolan/x265/x265_${X265_VERSION}.tar.gz | \
   tar -zx && \
   cd x265_${X265_VERSION}/build/linux && \
   sed -i "/-DEXTRA_LIB/ s/$/ -DCMAKE_INSTALL_PREFIX=\${PREFIX}/" multilib.sh && \
@@ -243,20 +243,20 @@ RUN \
   DIR=/tmp/ogg && \
   mkdir -p ${DIR} && \
   cd ${DIR} && \
-  curl -sLO http://downloads.xiph.org/releases/ogg/libogg-${OGG_VERSION}.tar.gz && \
+  curl -f -sLO http://downloads.xiph.org/releases/ogg/libogg-${OGG_VERSION}.tar.gz && \
   echo ${OGG_SHA256SUM} | sha256sum --check && \
   tar -zx --strip-components=1 -f libogg-${OGG_VERSION}.tar.gz && \
-  ./configure --prefix="${PREFIX}" --enable-shared  && \
+  ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix="${PREFIX}" --enable-shared && \
   make && \
   make install && \
-  rm -rf ${DIR}
+  rm -rf ${DIR} && rm libogg-${OGG_VERSION}.tar.gz
 ### libopus https://www.opus-codec.org/
 COPY --from=opus /tmp/opus /tmp/opus
 RUN \
   DIR=/tmp/opus && \
   mkdir -p ${DIR} && \
   cd ${DIR} && \
-  ./configure --prefix="${PREFIX}" --enable-shared && \
+  ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix="${PREFIX}" --enable-shared && \
   make && \
   make install && \
   rm -rf ${DIR}
@@ -267,13 +267,13 @@ RUN \
   DIR=/tmp/vorbis && \
   mkdir -p ${DIR} && \
   cd ${DIR} && \
-  curl -sLO http://downloads.xiph.org/releases/vorbis/libvorbis-${VORBIS_VERSION}.tar.gz && \
+  curl -f -sLO http://downloads.xiph.org/releases/vorbis/libvorbis-${VORBIS_VERSION}.tar.gz && \
   echo ${VORBIS_SHA256SUM} | sha256sum --check && \
   tar -zx --strip-components=1 -f libvorbis-${VORBIS_VERSION}.tar.gz && \
-  ./configure --prefix="${PREFIX}" --with-ogg="${PREFIX}" --enable-shared && \
+  ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix="${PREFIX}" --with-ogg="${PREFIX}" --enable-shared && \
   make && \
   make install && \
-  rm -rf ${DIR}
+  rm -rf ${DIR} && rm libvorbis-${VORBIS_VERSION}.tar.gz
 ### libtheora http://www.theora.org/
 ARG THEORA_VERSION
 ARG THEORA_SHA256SUM
@@ -281,26 +281,26 @@ RUN \
   DIR=/tmp/theora && \
   mkdir -p ${DIR} && \
   cd ${DIR} && \
-  curl -sLO http://downloads.xiph.org/releases/theora/libtheora-${THEORA_VERSION}.tar.gz && \
+  curl -f -sLO http://downloads.xiph.org/releases/theora/libtheora-${THEORA_VERSION}.tar.gz && \
   echo ${THEORA_SHA256SUM} | sha256sum --check && \
   tar -zx --strip-components=1 -f libtheora-${THEORA_VERSION}.tar.gz && \
   # config.guess and config.sub supplied by theora is too old to recognize aarch64, download manually
-  curl -SLo config.guess "http://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.guess;hb=HEAD" && \
-  curl -SLo config.sub "http://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.sub;hb=HEAD" && \
-  ./configure --prefix="${PREFIX}" --with-ogg="${PREFIX}" --enable-shared --disable-examples && \
+  curl -f -SLo config.guess "https://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.guess;hb=HEAD" && \
+  curl -f -SLo config.sub "https://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.sub;hb=HEAD" && \
+  ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix="${PREFIX}" --with-ogg="${PREFIX}" --enable-shared --disable-examples && \
   make && \
   make install && \
-  rm -rf ${DIR}
+  rm -rf ${DIR} && rm libtheora-${THEORA_VERSION}.tar.gz
 ### libvpx https://www.webmproject.org/code/
 ARG VPX_VERSION
 RUN \
   DIR=/tmp/vpx && \
   mkdir -p ${DIR} && \
   cd ${DIR} && \
-  curl -sL https://codeload.github.com/webmproject/libvpx/tar.gz/v${VPX_VERSION} | \
+  curl -f -sL https://codeload.github.com/webmproject/libvpx/tar.gz/v${VPX_VERSION} | \
   tar -zx --strip-components=1 && \
-  ./configure --prefix="${PREFIX}" --enable-vp8 --enable-vp9 --enable-vp9-highbitdepth --enable-pic --enable-shared \
-  --disable-debug --disable-examples --disable-docs --disable-install-bins  && \
+  ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix="${PREFIX}" --enable-vp8 --enable-vp9 --enable-vp9-highbitdepth --enable-pic --enable-shared \
+  --disable-debug --disable-examples --disable-docs --disable-install-bins && \
   make && \
   make install && \
   rm -rf ${DIR}
@@ -310,9 +310,9 @@ RUN \
   DIR=/tmp/vebp && \
   mkdir -p ${DIR} && \
   cd ${DIR} && \
-  curl -sL https://storage.googleapis.com/downloads.webmproject.org/releases/webp/libwebp-${WEBP_VERSION}.tar.gz | \
+  curl -f -sL https://storage.googleapis.com/downloads.webmproject.org/releases/webp/libwebp-${WEBP_VERSION}.tar.gz | \
   tar -zx --strip-components=1 && \
-  ./configure --prefix="${PREFIX}" --enable-shared  && \
+  ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix="${PREFIX}" --enable-shared && \
   make && \
   make install && \
   rm -rf ${DIR}
@@ -322,9 +322,9 @@ RUN \
   DIR=/tmp/lame && \
   mkdir -p ${DIR} && \
   cd ${DIR} && \
-  curl -sL https://versaweb.dl.sourceforge.net/project/lame/lame/$(echo ${LAME_VERSION} | sed -e 's/[^0-9]*\([0-9]*\)[.]\([0-9]*\)[.]\([0-9]*\)\([0-9A-Za-z-]*\)/\1.\2/')/lame-${LAME_VERSION}.tar.gz | \
+  curl -f -sL https://versaweb.dl.sourceforge.net/project/lame/lame/$(echo ${LAME_VERSION} | sed -e 's/[^0-9]*\([0-9]*\)[.]\([0-9]*\)[.]\([0-9]*\)\([0-9A-Za-z-]*\)/\1.\2/')/lame-${LAME_VERSION}.tar.gz | \
   tar -zx --strip-components=1 && \
-  ./configure --prefix="${PREFIX}" --bindir="${PREFIX}/bin" --enable-shared --enable-nasm --disable-frontend && \
+  ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix="${PREFIX}" --bindir="${PREFIX}/bin" --enable-shared --enable-nasm --disable-frontend && \
   make && \
   make install && \
   rm -rf ${DIR}
@@ -335,20 +335,20 @@ RUN \
   DIR=/tmp/xvid && \
   mkdir -p ${DIR} && \
   cd ${DIR} && \
-  curl -sLO http://downloads.xvid.org/downloads/xvidcore-${XVID_VERSION}.tar.gz && \
+  curl -f -sLO http://downloads.xvid.org/downloads/xvidcore-${XVID_VERSION}.tar.gz && \
   echo ${XVID_SHA256SUM} | sha256sum --check && \
   tar -zx -f xvidcore-${XVID_VERSION}.tar.gz && \
   cd xvidcore/build/generic && \
-  ./configure --prefix="${PREFIX}" --bindir="${PREFIX}/bin" && \
+  ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix="${PREFIX}" --bindir="${PREFIX}/bin" && \
   make && \
   make install && \
-  rm -rf ${DIR}
+  rm -rf ${DIR} && rm xvidcore-${XVID_VERSION}.tar.gz
 ### fdk-aac https://github.com/mstorsjo/fdk-aac
 COPY --from=fdk-aac /tmp /tmp
 RUN \
   DIR=/tmp/fdk-aac && \
   cd ${DIR} && \
-  ./configure --prefix="${PREFIX}" --enable-shared --datadir="${DIR}" && \
+  ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix="${PREFIX}" --enable-shared --datadir="${DIR}" && \
   make && \
   make install && \
   rm -rf ${DIR}
@@ -358,7 +358,7 @@ RUN \
   DIR=/tmp/openjpeg && \
   mkdir -p ${DIR} && \
   cd ${DIR} && \
-  curl -sL https://github.com/uclouvain/openjpeg/archive/v${OPENJPEG_VERSION}.tar.gz | \
+  curl -f -sL https://github.com/uclouvain/openjpeg/archive/v${OPENJPEG_VERSION}.tar.gz | \
   tar -zx --strip-components=1 && \
   export CFLAGS="${CFLAGS} -DPNG_ARM_NEON_OPT=0" && \
   cmake -DBUILD_THIRDPARTY:BOOL=ON -DCMAKE_INSTALL_PREFIX="${PREFIX}" . && \
@@ -384,45 +384,45 @@ RUN \
 ### libvstab https://github.com/georgmartius/vid.stab
 ARG LIBVIDSTAB_VERSION
 ARG LIBVIDSTAB_SHA256SUM
-RUN  \
+RUN \
   DIR=/tmp/vid.stab && \
   mkdir -p ${DIR} && \
   cd ${DIR} && \
-  curl -sLO https://github.com/georgmartius/vid.stab/archive/${LIBVIDSTAB_VERSION}.tar.gz && \
-  echo ${LIBVIDSTAB_SHA256SUM} | sha256sum --check &&  \
+  curl -f -sLO https://github.com/georgmartius/vid.stab/archive/${LIBVIDSTAB_VERSION}.tar.gz && \
+  echo ${LIBVIDSTAB_SHA256SUM} | sha256sum --check && \
   tar -zx --strip-components=1 -f ${LIBVIDSTAB_VERSION}.tar.gz && \
   cmake -DCMAKE_INSTALL_PREFIX="${PREFIX}" -DSSE2_FOUND=OFF . && \
   make && \
   make install && \
-  rm -rf ${DIR}
+  rm -rf ${DIR} && rm ${LIBVIDSTAB_VERSION}.tar.gz
 ### fridibi https://www.fribidi.org/
 COPY --from=fribidi /tmp /tmp
 RUN \
   DIR=/tmp/fribidi && \
   cd ${DIR} && \
-  ./configure --prefix="${PREFIX}" --disable-static --enable-shared && \
+  ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix="${PREFIX}" --disable-static --enable-shared && \
   # Use -j1 because fribidi breaks when building in parallel and c2man is not installed
   make -j1 && \
   make install && \
   rm -rf ${DIR}
 ### fontconfig https://www.freedesktop.org/wiki/Software/fontconfig/
 ARG FONTCONFIG_VERSION
-RUN  \
+RUN \
   DIR=/tmp/fontconfig && \
   mkdir -p ${DIR} && \
   cd ${DIR} && \
-  curl -sLO https://www.freedesktop.org/software/fontconfig/release/fontconfig-${FONTCONFIG_VERSION}.tar.bz2 && \
+  curl -f -sLO https://www.freedesktop.org/software/fontconfig/release/fontconfig-${FONTCONFIG_VERSION}.tar.bz2 && \
   tar -jx --strip-components=1 -f fontconfig-${FONTCONFIG_VERSION}.tar.bz2 && \
-  ./configure --prefix="${PREFIX}" --disable-static --enable-shared && \
+  ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix="${PREFIX}" --disable-static --enable-shared && \
   make && \
   make install && \
-  rm -rf ${DIR}
+  rm -rf ${DIR} && rm fontconfig-${FONTCONFIG_VERSION}.tar.bz2
 ### libass https://github.com/libass/libass
 COPY --from=libass /tmp /tmp
 RUN \
   DIR=/tmp/libass && \
   cd ${DIR} && \
-  ./configure --prefix="${PREFIX}" --disable-static --enable-shared && \
+  ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix="${PREFIX}" --disable-static --enable-shared && \
   make && \
   make install && \
   rm -rf ${DIR}
@@ -431,7 +431,7 @@ COPY --from=kvazaar /tmp /tmp
 RUN \
   DIR=/tmp/kvazaar && \
   cd ${DIR} && \
-  ./configure --prefix="${PREFIX}" --disable-static --enable-shared && \
+  ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix="${PREFIX}" --disable-static --enable-shared && \
   make && \
   make install && \
   rm -rf ${DIR}
@@ -454,70 +454,70 @@ RUN \
   DIR=/tmp/xorg-macros && \
   mkdir -p ${DIR} && \
   cd ${DIR} && \
-  curl -sLO https://www.x.org/archive//individual/util/util-macros-${XORG_MACROS_VERSION}.tar.gz && \
+  curl -f -sLO https://www.x.org/archive//individual/util/util-macros-${XORG_MACROS_VERSION}.tar.gz && \
   tar -zx --strip-components=1 -f util-macros-${XORG_MACROS_VERSION}.tar.gz && \
-  ./configure --srcdir=${DIR} --prefix="${PREFIX}" && \
+  ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --srcdir=${DIR} --prefix="${PREFIX}" && \
   make && \
   make install && \
-  rm -rf ${DIR}
+  rm -rf ${DIR} && rm util-macros-${XORG_MACROS_VERSION}.tar.gz
 
 ARG XPROTO_VERSION
 RUN \
   DIR=/tmp/xproto && \
   mkdir -p ${DIR} && \
   cd ${DIR} && \
-  curl -sLO https://www.x.org/archive/individual/proto/xproto-${XPROTO_VERSION}.tar.gz && \
+  curl -f -sLO https://www.x.org/archive/individual/proto/xproto-${XPROTO_VERSION}.tar.gz && \
   tar -zx --strip-components=1 -f xproto-${XPROTO_VERSION}.tar.gz && \
   # config.guess and config.sub supplied by xproto is too old to recognize aarch64, download manually
-  curl -SLo config.guess "http://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.guess;hb=HEAD" && \
-  curl -SLo config.sub "http://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.sub;hb=HEAD" && \
-  ./configure --srcdir=${DIR} --prefix="${PREFIX}" && \
+  curl -f -SLo config.guess "https://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.guess;hb=HEAD" && \
+  curl -f -SLo config.sub "https://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.sub;hb=HEAD" && \
+  ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --srcdir=${DIR} --prefix="${PREFIX}" && \
   make && \
   make install && \
-  rm -rf ${DIR}
+  rm -rf ${DIR} && rm xproto-${XPROTO_VERSION}.tar.gz
 
 ARG XAU_VERSION
 RUN \
   DIR=/tmp/libXau && \
   mkdir -p ${DIR} && \
   cd ${DIR} && \
-  curl -sLO https://www.x.org/archive/individual/lib/libXau-${XAU_VERSION}.tar.gz && \
+  curl -f -sLO https://www.x.org/archive/individual/lib/libXau-${XAU_VERSION}.tar.gz && \
   tar -zx --strip-components=1 -f libXau-${XAU_VERSION}.tar.gz && \
-  ./configure --srcdir=${DIR} --prefix="${PREFIX}" && \
+  ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --srcdir=${DIR} --prefix="${PREFIX}" && \
   make && \
   make install && \
-  rm -rf ${DIR}
+  rm -rf ${DIR} && rm libXau-${XAU_VERSION}.tar.gz
 
 ARG LIBPTHREAD_STUBS_VERSION
 RUN \
   DIR=/tmp/libpthread-stubs && \
   mkdir -p ${DIR} && \
   cd ${DIR} && \
-  curl -sLO https://xcb.freedesktop.org/dist/libpthread-stubs-${LIBPTHREAD_STUBS_VERSION}.tar.gz && \
+  curl -f -sLO https://xcb.freedesktop.org/dist/libpthread-stubs-${LIBPTHREAD_STUBS_VERSION}.tar.gz && \
   tar -zx --strip-components=1 -f libpthread-stubs-${LIBPTHREAD_STUBS_VERSION}.tar.gz && \
-  ./configure --prefix="${PREFIX}" && \
+  ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix="${PREFIX}" && \
   make && \
   make install && \
-  rm -rf ${DIR}
+  rm -rf ${DIR} && rm libpthread-stubs-${LIBPTHREAD_STUBS_VERSION}.tar.gz
 
 ARG XCBPROTO_VERSION
 RUN \
   DIR=/tmp/libxcb-proto && \
   mkdir -p ${DIR} && \
   cd ${DIR} && \
-  curl -sLO https://xcb.freedesktop.org/dist/xcb-proto-${XCBPROTO_VERSION}.tar.gz && \
+  curl -f -sLO https://xcb.freedesktop.org/dist/xcb-proto-${XCBPROTO_VERSION}.tar.gz && \
   tar -zx --strip-components=1 -f xcb-proto-${XCBPROTO_VERSION}.tar.gz && \
   ACLOCAL_PATH="${PREFIX}/share/aclocal" ./autogen.sh && \
-  ./configure --prefix="${PREFIX}" && \
+  ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix="${PREFIX}" && \
   make && \
   make install && \
-  rm -rf ${DIR}
+  rm -rf ${DIR} && rm xcb-proto-${XCBPROTO_VERSION}.tar.gz
 
 COPY --from=libxcb /tmp /tmp
 RUN \
   DIR=/tmp/libxcb && \
   cd ${DIR} && \
-  ./configure --prefix="${PREFIX}" --disable-static --enable-shared && \
+  ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix="${PREFIX}" --disable-static --enable-shared && \
   make && \
   make install && \
   rm -rf ${DIR}
@@ -536,19 +536,19 @@ RUN \
   DIR=/tmp/libbluray && \
   mkdir -p ${DIR} && \
   cd ${DIR} && \
-  curl -sLO https://download.videolan.org/pub/videolan/libbluray/${LIBBLURAY_VERSION}/libbluray-${LIBBLURAY_VERSION}.tar.bz2 && \
+  curl -f -sLO https://download.videolan.org/pub/videolan/libbluray/${LIBBLURAY_VERSION}/libbluray-${LIBBLURAY_VERSION}.tar.bz2 && \
   echo ${LIBBLURAY_SHA256SUM} | sha256sum --check && \
   tar -jx --strip-components=1 -f libbluray-${LIBBLURAY_VERSION}.tar.bz2 && \
-  ./configure --prefix="${PREFIX}" --disable-examples --disable-bdjava-jar --disable-static --enable-shared && \
+  ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix="${PREFIX}" --disable-examples --disable-bdjava-jar --disable-static --enable-shared && \
   make && \
   make install && \
-  rm -rf ${DIR}
+  rm -rf ${DIR} && rm libbluray-${LIBBLURAY_VERSION}.tar.bz2
 ### libzmq https://github.com/zeromq/libzmq/
 COPY --from=libzmq /tmp /tmp
 RUN \
   DIR=/tmp/libzmq && \
   cd ${DIR} && \
-  ./configure --prefix="${PREFIX}" && \
+  ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix="${PREFIX}" && \
   make && \
   make install && \
   rm -rf ${DIR}
@@ -563,15 +563,15 @@ RUN git clone https://github.com/jocover/jetson-ffmpeg && \
   ldconfig
 ### ffmpeg https://ffmpeg.org/
 ARG FFMPEG_VERSION
-RUN  \
+RUN \
   DIR=/tmp/ffmpeg && mkdir -p ${DIR} && cd ${DIR} && \
-  curl -sLO https://ffmpeg.org/releases/ffmpeg-${FFMPEG_VERSION}.tar.bz2 && \
+  curl -f -sLO https://ffmpeg.org/releases/ffmpeg-${FFMPEG_VERSION}.tar.bz2 && \
   tar -jx --strip-components=1 -f ffmpeg-${FFMPEG_VERSION}.tar.bz2 && \
   wget https://github.com/jocover/jetson-ffmpeg/raw/master/ffmpeg_nvmpi.patch && \
   # Apply patch but only to add nvmpi_enc.c and nvmpi_dec.c
   git apply ffmpeg_nvmpi.patch && \
   DIR=/tmp/ffmpeg && mkdir -p ${DIR} && cd ${DIR} && \
-  ./configure \
+  ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
   --disable-debug \
   --disable-doc \
   --disable-ffplay \
@@ -622,7 +622,7 @@ RUN  \
   make distclean && \
   hash -r && \
   cd tools && \
-  make qt-faststart && cp qt-faststart ${PREFIX}/bin/
+  make qt-faststart && cp qt-faststart ${PREFIX}/bin/ && rm ffmpeg-${FFMPEG_VERSION}.tar.bz2
 
 ### cleanup
 RUN \