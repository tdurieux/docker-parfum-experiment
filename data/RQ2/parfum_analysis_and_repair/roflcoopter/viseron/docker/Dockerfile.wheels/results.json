{
  "startTime": 1674254175049,
  "endTime": 1674254176134,
  "originalSmells": [
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 20,
        "lineEnd": 26,
        "columnStart": 27,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG UBUNTU_VERSION\nARG ARCH\nARG DLIB_VERSION\nARG BUILD_FROM\nFROM roflcoopter/${ARCH}-dlib:${DLIB_VERSION} as dlib\nFROM ${BUILD_FROM} as build\n\nCOPY --from=dlib /wheels /wheels\n\nARG ARCH\n\nENV \\\n  DEBIAN_FRONTEND=noninteractive \\\n  PIP_IGNORE_INSTALLED=0\n\nRUN \\\n  if [ \"$ARCH\" = \"armhf\" ] || \\\n  [ \"$ARCH\" = \"rpi3\" ] || \\\n  [ \"$ARCH\" = \"aarch64\" ] ; then echo \"Crossbuilding!\" && cross-build-start; fi\n\nRUN apt-get -yqq update && apt-get install -yq --no-install-recommends \\\n  curl \\\n  python3 \\\n  python3-dev \\\n  python3-pip \\\n  python3-setuptools \\\n  python3-wheel \\\n  && apt-get autoremove -y && apt-get clean -y && rm -rf /var/lib/apt/lists/*;\n\nADD requirements.txt requirements.txt\nRUN \\\n  mkdir -p /wheels \\\n  && if [ \"$ARCH\" = \"amd64\" ] || [ \"$ARCH\" = \"amd64-cuda\" ]; then export PLATFORM=\"x86_64\"; \\\n  elif [ \"$ARCH\" = \"armhf\" ] || [ \"$ARCH\" = \"rpi3\" ]; then export PLATFORM=\"armv7l\"; \\\n  else export PLATFORM=\"$ARCH\"; fi \\\n  \\\n  && pip3 wheel --wheel-dir=/wheels --find-links=/wheels -r /requirements.txt \\\n  \\\n  && ls -al /wheels/\n\nFROM scratch\n\nCOPY --from=build /wheels /wheels\n"
}