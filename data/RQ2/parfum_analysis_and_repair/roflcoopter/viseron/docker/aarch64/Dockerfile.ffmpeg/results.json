{
  "startTime": 1674215887831,
  "endTime": 1674215892889,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 2,
        "columnEnd": 123
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 2,
        "columnEnd": 106
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 2,
        "columnEnd": 86
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 88,
        "lineEnd": 88,
        "columnStart": 2,
        "columnEnd": 79
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 102,
        "lineEnd": 102,
        "columnStart": 2,
        "columnEnd": 76
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 125,
        "lineEnd": 125,
        "columnStart": 2,
        "columnEnd": 88
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 139,
        "lineEnd": 139,
        "columnStart": 2,
        "columnEnd": 88
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 143,
        "lineEnd": 143,
        "columnStart": 2,
        "columnEnd": 111
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 144,
        "lineEnd": 144,
        "columnStart": 2,
        "columnEnd": 107
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 155,
        "lineEnd": 155,
        "columnStart": 2,
        "columnEnd": 80
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 168,
        "lineEnd": 168,
        "columnStart": 2,
        "columnEnd": 112
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 180,
        "lineEnd": 180,
        "columnStart": 2,
        "columnEnd": 197
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 193,
        "lineEnd": 193,
        "columnStart": 2,
        "columnEnd": 79
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 207,
        "lineEnd": 207,
        "columnStart": 2,
        "columnEnd": 80
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 228,
        "lineEnd": 228,
        "columnStart": 2,
        "columnEnd": 84
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 242,
        "lineEnd": 242,
        "columnStart": 2,
        "columnEnd": 99
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 256,
        "lineEnd": 256,
        "columnStart": 2,
        "columnEnd": 89
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 270,
        "lineEnd": 270,
        "columnStart": 2,
        "columnEnd": 80
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 294,
        "lineEnd": 294,
        "columnStart": 2,
        "columnEnd": 108
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 307,
        "lineEnd": 307,
        "columnStart": 2,
        "columnEnd": 77
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 329,
        "lineEnd": 329,
        "columnStart": 2,
        "columnEnd": 84
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 363,
        "lineEnd": 363,
        "columnStart": 2,
        "columnEnd": 96
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 375,
        "lineEnd": 375,
        "columnStart": 2,
        "columnEnd": 86
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 378,
        "lineEnd": 378,
        "columnStart": 2,
        "columnEnd": 111
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 379,
        "lineEnd": 379,
        "columnStart": 2,
        "columnEnd": 107
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 390,
        "lineEnd": 390,
        "columnStart": 2,
        "columnEnd": 81
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 402,
        "lineEnd": 402,
        "columnStart": 2,
        "columnEnd": 96
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 414,
        "lineEnd": 414,
        "columnStart": 2,
        "columnEnd": 81
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 427,
        "lineEnd": 427,
        "columnStart": 2,
        "columnEnd": 76
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 450,
        "lineEnd": 450,
        "columnStart": 2,
        "columnEnd": 115
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 472,
        "lineEnd": 472,
        "columnStart": 2,
        "columnEnd": 124
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 486,
        "lineEnd": 486,
        "columnStart": 2,
        "columnEnd": 78
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 506,
        "lineEnd": 506,
        "columnStart": 2,
        "columnEnd": 72
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 143,
        "lineEnd": 143,
        "columnStart": 2,
        "columnEnd": 111
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 144,
        "lineEnd": 144,
        "columnStart": 2,
        "columnEnd": 107
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 378,
        "lineEnd": 378,
        "columnStart": 2,
        "columnEnd": 111
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 379,
        "lineEnd": 379,
        "columnStart": 2,
        "columnEnd": 107
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 2,
        "columnEnd": 50
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 2,
        "columnEnd": 77
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 91,
        "lineEnd": 91,
        "columnStart": 2,
        "columnEnd": 50
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 114,
        "lineEnd": 114,
        "columnStart": 2,
        "columnEnd": 50
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 128,
        "lineEnd": 128,
        "columnStart": 2,
        "columnEnd": 73
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 145,
        "lineEnd": 145,
        "columnStart": 2,
        "columnEnd": 92
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 157,
        "lineEnd": 158,
        "columnStart": 2,
        "columnEnd": 74
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 170,
        "lineEnd": 170,
        "columnStart": 2,
        "columnEnd": 50
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 182,
        "lineEnd": 182,
        "columnStart": 2,
        "columnEnd": 108
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 197,
        "lineEnd": 197,
        "columnStart": 2,
        "columnEnd": 59
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 218,
        "lineEnd": 218,
        "columnStart": 2,
        "columnEnd": 69
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 245,
        "lineEnd": 245,
        "columnStart": 2,
        "columnEnd": 67
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 283,
        "lineEnd": 283,
        "columnStart": 2,
        "columnEnd": 67
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 296,
        "lineEnd": 296,
        "columnStart": 2,
        "columnEnd": 67
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 319,
        "lineEnd": 319,
        "columnStart": 2,
        "columnEnd": 67
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 340,
        "lineEnd": 340,
        "columnStart": 2,
        "columnEnd": 67
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 365,
        "lineEnd": 365,
        "columnStart": 2,
        "columnEnd": 50
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 380,
        "lineEnd": 380,
        "columnStart": 2,
        "columnEnd": 50
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 392,
        "lineEnd": 392,
        "columnStart": 2,
        "columnEnd": 50
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 404,
        "lineEnd": 404,
        "columnStart": 2,
        "columnEnd": 34
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 417,
        "lineEnd": 417,
        "columnStart": 2,
        "columnEnd": 34
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 439,
        "lineEnd": 439,
        "columnStart": 2,
        "columnEnd": 67
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 475,
        "lineEnd": 475,
        "columnStart": 2,
        "columnEnd": 107
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 498,
        "lineEnd": 498,
        "columnStart": 2,
        "columnEnd": 34
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 509,
        "lineEnd": 552,
        "columnStart": 2,
        "columnEnd": 35
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 90,
        "lineEnd": 90,
        "columnStart": 2,
        "columnEnd": 62
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 104,
        "lineEnd": 104,
        "columnStart": 2,
        "columnEnd": 61
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 127,
        "lineEnd": 127,
        "columnStart": 2,
        "columnEnd": 68
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 141,
        "lineEnd": 141,
        "columnStart": 2,
        "columnEnd": 68
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 195,
        "lineEnd": 195,
        "columnStart": 2,
        "columnEnd": 44
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 244,
        "lineEnd": 244,
        "columnStart": 2,
        "columnEnd": 69
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 258,
        "lineEnd": 258,
        "columnStart": 2,
        "columnEnd": 62
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 272,
        "lineEnd": 272,
        "columnStart": 2,
        "columnEnd": 59
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 295,
        "lineEnd": 295,
        "columnStart": 2,
        "columnEnd": 74
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 309,
        "lineEnd": 309,
        "columnStart": 2,
        "columnEnd": 58
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 330,
        "lineEnd": 330,
        "columnStart": 2,
        "columnEnd": 60
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 364,
        "lineEnd": 364,
        "columnStart": 2,
        "columnEnd": 75
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 376,
        "lineEnd": 376,
        "columnStart": 2,
        "columnEnd": 65
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 391,
        "lineEnd": 391,
        "columnStart": 2,
        "columnEnd": 62
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 403,
        "lineEnd": 403,
        "columnStart": 2,
        "columnEnd": 85
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 415,
        "lineEnd": 415,
        "columnStart": 2,
        "columnEnd": 70
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 428,
        "lineEnd": 428,
        "columnStart": 2,
        "columnEnd": 65
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 452,
        "lineEnd": 452,
        "columnStart": 2,
        "columnEnd": 68
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 474,
        "lineEnd": 474,
        "columnStart": 2,
        "columnEnd": 72
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 488,
        "lineEnd": 488,
        "columnStart": 2,
        "columnEnd": 59
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 507,
        "lineEnd": 507,
        "columnStart": 2,
        "columnEnd": 66
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 2,
        "columnEnd": 58
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Shameless copy of https://github.com/jrottenberg/ffmpeg/\nARG UBUNTU_VERSION\nFROM balenalib/aarch64-ubuntu:${UBUNTU_VERSION}-build as build\nRUN [ \"cross-build-start\" ]\n\nWORKDIR /tmp/workdir\n\nARG MAKEFLAGS=\"-j2\"\n\nENV \\\n  DEBIAN_FRONTEND=noninteractive \\\n  SRC=/usr/local \\\n  PATH=/usr/custom_cmake/bin:$PATH \\\n  PKG_CONFIG_PATH=\"/opt/ffmpeg/share/pkgconfig:/opt/ffmpeg/lib/pkgconfig:/opt/ffmpeg/lib64/pkgconfig\" \\\n  PREFIX=/opt/ffmpeg \\\n  LD_LIBRARY_PATH=\"/opt/ffmpeg/lib:/opt/ffmpeg/lib64:/usr/lib64:/usr/lib:/lib64:/lib\"\n\nRUN buildDeps=\"autoconf \\\n  automake \\\n  ca-certificates \\\n  cmake \\\n  curl \\\n  bzip2 \\\n  libexpat1-dev \\\n  g++ \\\n  gcc \\\n  git \\\n  gperf \\\n  libtool \\\n  make \\\n  nasm \\\n  perl \\\n  pkg-config \\\n  python \\\n  libssl-dev \\\n  yasm \\\n  libgomp1 \\\n  zlib1g-dev \\\n  libomxil-bellagio-dev\" && \\\n  apt-get -yqq update && \\\n  apt-get install -yq --no-install-recommends ${buildDeps} && rm -rf /var/lib/apt/lists/*;\n\n### opencore-amr https://sourceforge.net/projects/opencore-amr/\nARG OPENCOREAMR_VERSION\nRUN \\\n  DIR=/tmp/opencore-amr && \\\n  mkdir -p ${DIR} && \\\n  cd ${DIR} && \\\n  curl -f -sL https://versaweb.dl.sourceforge.net/project/opencore-amr/opencore-amr/opencore-amr-${OPENCOREAMR_VERSION}.tar.gz | \\\n  tar -zx --strip-components=1 && \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"${PREFIX}\" --enable-shared && \\\n  make && \\\n  make install && \\\n  rm -rf ${DIR}\n### x264 http://www.videolan.org/developers/x264.html\nARG X264_VERSION\nRUN \\\n  DIR=/tmp/x264 && \\\n  mkdir -p ${DIR} && \\\n  cd ${DIR} && \\\n  curl -f -sL https://download.videolan.org/pub/videolan/x264/snapshots/x264-snapshot-${X264_VERSION}.tar.bz2 | \\\n  tar -jx --strip-components=1 && \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"${PREFIX}\" --enable-shared --enable-pic --disable-cli && \\\n  make && \\\n  make install && \\\n  rm -rf ${DIR}\n### x265 http://x265.org/\nARG X265_VERSION\nRUN \\\n  DIR=/tmp/x265 && \\\n  mkdir -p ${DIR} && \\\n  cd ${DIR} && \\\n  curl -f -sL https://download.videolan.org/pub/videolan/x265/x265_${X265_VERSION}.tar.gz | \\\n  tar -zx && \\\n  cd x265_${X265_VERSION}/build/linux && \\\n  sed -i \"/-DEXTRA_LIB/ s/$/ -DCMAKE_INSTALL_PREFIX=\\${PREFIX}/\" multilib.sh && \\\n  sed -i \"/^cmake/ s/$/ -DENABLE_CLI=OFF/\" multilib.sh && \\\n  export CXXFLAGS=\"${CXXFLAGS} -fPIC\" && \\\n  ./multilib.sh && \\\n  make -C 8bit install && \\\n  rm -rf ${DIR}\n### libogg https://www.xiph.org/ogg/\nARG OGG_VERSION\nARG OGG_SHA256SUM\nRUN \\\n  DIR=/tmp/ogg && \\\n  mkdir -p ${DIR} && \\\n  cd ${DIR} && \\\n  curl -f -sLO http://downloads.xiph.org/releases/ogg/libogg-${OGG_VERSION}.tar.gz && \\\n  echo ${OGG_SHA256SUM} | sha256sum --check && \\\n  tar -zx --strip-components=1 -f libogg-${OGG_VERSION}.tar.gz && \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"${PREFIX}\" --enable-shared && \\\n  make && \\\n  make install && \\\n  rm -rf ${DIR} && rm libogg-${OGG_VERSION}.tar.gz\n### libopus https://www.opus-codec.org/\nARG OPUS_VERSION\nARG OPUS_SHA256SUM\nRUN \\\n  DIR=/tmp/opus && \\\n  mkdir -p ${DIR} && \\\n  cd ${DIR} && \\\n  curl -f -sLO https://archive.mozilla.org/pub/opus/opus-${OPUS_VERSION}.tar.gz && \\\n  echo ${OPUS_SHA256SUM} | sha256sum --check && \\\n  tar -zx --strip-components=1 -f opus-${OPUS_VERSION}.tar.gz && rm opus-${OPUS_VERSION}.tar.gz\nRUN [\"cross-build-end\"]\nRUN \\\n  DIR=/tmp/opus && \\\n  cd ${DIR} && \\\n  autoreconf -fiv\nRUN [\"cross-build-start\"]\nRUN \\\n  DIR=/tmp/opus && \\\n  cd ${DIR} && \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"${PREFIX}\" --enable-shared && \\\n  make && \\\n  make install && \\\n  rm -rf ${DIR}\n### libvorbis https://xiph.org/vorbis/\nARG VORBIS_VERSION\nARG VORBIS_SHA256SUM\nRUN \\\n  DIR=/tmp/vorbis && \\\n  mkdir -p ${DIR} && \\\n  cd ${DIR} && \\\n  curl -f -sLO http://downloads.xiph.org/releases/vorbis/libvorbis-${VORBIS_VERSION}.tar.gz && \\\n  echo ${VORBIS_SHA256SUM} | sha256sum --check && \\\n  tar -zx --strip-components=1 -f libvorbis-${VORBIS_VERSION}.tar.gz && \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"${PREFIX}\" --with-ogg=\"${PREFIX}\" --enable-shared && \\\n  make && \\\n  make install && \\\n  rm -rf ${DIR} && rm libvorbis-${VORBIS_VERSION}.tar.gz\n### libtheora http://www.theora.org/\nARG THEORA_VERSION\nARG THEORA_SHA256SUM\nRUN \\\n  DIR=/tmp/theora && \\\n  mkdir -p ${DIR} && \\\n  cd ${DIR} && \\\n  curl -f -sLO http://downloads.xiph.org/releases/theora/libtheora-${THEORA_VERSION}.tar.gz && \\\n  echo ${THEORA_SHA256SUM} | sha256sum --check && \\\n  tar -zx --strip-components=1 -f libtheora-${THEORA_VERSION}.tar.gz && \\\n  # config.guess and config.sub supplied by theora is too old to recognize aarch64, download manually\n  curl -f -SLo config.guess \"https://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.guess;hb=HEAD\" && \\\n  curl -f -SLo config.sub \"https://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.sub;hb=HEAD\" && \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"${PREFIX}\" --with-ogg=\"${PREFIX}\" --enable-shared --disable-examples && \\\n  make && \\\n  make install && \\\n  rm -rf ${DIR} && rm libtheora-${THEORA_VERSION}.tar.gz\n### libvpx https://www.webmproject.org/code/\nARG VPX_VERSION\nRUN \\\n  DIR=/tmp/vpx && \\\n  mkdir -p ${DIR} && \\\n  cd ${DIR} && \\\n  curl -f -sL https://codeload.github.com/webmproject/libvpx/tar.gz/v${VPX_VERSION} | \\\n  tar -zx --strip-components=1 && \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"${PREFIX}\" --enable-vp8 --enable-vp9 --enable-vp9-highbitdepth --enable-pic --enable-shared \\\n  --disable-debug --disable-examples --disable-docs --disable-install-bins && \\\n  make && \\\n  make install && \\\n  rm -rf ${DIR}\n### libwebp https://developers.google.com/speed/webp/\nARG WEBP_VERSION\nRUN \\\n  DIR=/tmp/vebp && \\\n  mkdir -p ${DIR} && \\\n  cd ${DIR} && \\\n  curl -f -sL https://storage.googleapis.com/downloads.webmproject.org/releases/webp/libwebp-${WEBP_VERSION}.tar.gz | \\\n  tar -zx --strip-components=1 && \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"${PREFIX}\" --enable-shared && \\\n  make && \\\n  make install && \\\n  rm -rf ${DIR}\n### libmp3lame http://lame.sourceforge.net/\nARG LAME_VERSION\nRUN \\\n  DIR=/tmp/lame && \\\n  mkdir -p ${DIR} && \\\n  cd ${DIR} && \\\n  curl -f -sL https://versaweb.dl.sourceforge.net/project/lame/lame/$(echo ${LAME_VERSION} | sed -e 's/[^0-9]*\\([0-9]*\\)[.]\\([0-9]*\\)[.]\\([0-9]*\\)\\([0-9A-Za-z-]*\\)/\\1.\\2/')/lame-${LAME_VERSION}.tar.gz | \\\n  tar -zx --strip-components=1 && \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"${PREFIX}\" --bindir=\"${PREFIX}/bin\" --enable-shared --enable-nasm --disable-frontend && \\\n  make && \\\n  make install && \\\n  rm -rf ${DIR}\n### xvid https://www.xvid.com/\nARG XVID_VERSION\nARG XVID_SHA256SUM\nRUN \\\n  DIR=/tmp/xvid && \\\n  mkdir -p ${DIR} && \\\n  cd ${DIR} && \\\n  curl -f -sLO http://downloads.xvid.org/downloads/xvidcore-${XVID_VERSION}.tar.gz && \\\n  echo ${XVID_SHA256SUM} | sha256sum --check && \\\n  tar -zx -f xvidcore-${XVID_VERSION}.tar.gz && \\\n  cd xvidcore/build/generic && \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"${PREFIX}\" --bindir=\"${PREFIX}/bin\" && \\\n  make && \\\n  make install && \\\n  rm -rf ${DIR} && rm xvidcore-${XVID_VERSION}.tar.gz\n### fdk-aac https://github.com/mstorsjo/fdk-aac\nARG FDKAAC_VERSION\nRUN \\\n  DIR=/tmp/fdk-aac && \\\n  mkdir -p ${DIR} && \\\n  cd ${DIR} && \\\n  curl -f -sL https://github.com/mstorsjo/fdk-aac/archive/v${FDKAAC_VERSION}.tar.gz | \\\n  tar -zx --strip-components=1\nRUN [\"cross-build-end\"]\nRUN \\\n  DIR=/tmp/fdk-aac && \\\n  cd ${DIR} && \\\n  autoreconf -fiv\nRUN [\"cross-build-start\"]\nRUN \\\n  DIR=/tmp/fdk-aac && \\\n  cd ${DIR} && \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"${PREFIX}\" --enable-shared --datadir=\"${DIR}\" && \\\n  make && \\\n  make install && \\\n  rm -rf ${DIR}\n### openjpeg https://github.com/uclouvain/openjpeg\nARG OPENJPEG_VERSION\nRUN \\\n  DIR=/tmp/openjpeg && \\\n  mkdir -p ${DIR} && \\\n  cd ${DIR} && \\\n  curl -f -sL https://github.com/uclouvain/openjpeg/archive/v${OPENJPEG_VERSION}.tar.gz | \\\n  tar -zx --strip-components=1 && \\\n  export CFLAGS=\"${CFLAGS} -DPNG_ARM_NEON_OPT=0\" && \\\n  cmake -DBUILD_THIRDPARTY:BOOL=ON -DCMAKE_INSTALL_PREFIX=\"${PREFIX}\" . && \\\n  make && \\\n  make install && \\\n  rm -rf ${DIR}\n### freetype https://www.freetype.org/\nARG FREETYPE_VERSION\nARG FREETYPE_SHA256SUM\nRUN \\\n  DIR=/tmp/freetype && \\\n  mkdir -p ${DIR} && \\\n  cd ${DIR} && \\\n  curl -f -sLO https://download.savannah.gnu.org/releases/freetype/freetype-${FREETYPE_VERSION}.tar.gz && \\\n  echo ${FREETYPE_SHA256SUM} | sha256sum --check && \\\n  tar -zx --strip-components=1 -f freetype-${FREETYPE_VERSION}.tar.gz && \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"${PREFIX}\" --disable-static --enable-shared && \\\n  make && \\\n  make install && \\\n  rm -rf ${DIR} && rm freetype-${FREETYPE_VERSION}.tar.gz\n### libvstab https://github.com/georgmartius/vid.stab\nARG LIBVIDSTAB_VERSION\nARG LIBVIDSTAB_SHA256SUM\nRUN \\\n  DIR=/tmp/vid.stab && \\\n  mkdir -p ${DIR} && \\\n  cd ${DIR} && \\\n  curl -f -sLO https://github.com/georgmartius/vid.stab/archive/${LIBVIDSTAB_VERSION}.tar.gz && \\\n  echo ${LIBVIDSTAB_SHA256SUM} | sha256sum --check && \\\n  tar -zx --strip-components=1 -f ${LIBVIDSTAB_VERSION}.tar.gz && \\\n  cmake -DCMAKE_INSTALL_PREFIX=\"${PREFIX}\" -DSSE2_FOUND=OFF . && \\\n  make && \\\n  make install && \\\n  rm -rf ${DIR} && rm ${LIBVIDSTAB_VERSION}.tar.gz\n### fridibi https://www.fribidi.org/\nARG FRIBIDI_VERSION\nARG FRIBIDI_SHA256SUM\nRUN \\\n  DIR=/tmp/fribidi && \\\n  mkdir -p ${DIR} && \\\n  cd ${DIR} && \\\n  curl -f -sLO https://github.com/fribidi/fribidi/archive/${FRIBIDI_VERSION}.tar.gz && \\\n  echo ${FRIBIDI_SHA256SUM} | sha256sum --check && \\\n  tar -zx --strip-components=1 -f ${FRIBIDI_VERSION}.tar.gz && rm ${FRIBIDI_VERSION}.tar.gz\nRUN [\"cross-build-end\"]\nRUN \\\n  export NOCONFIGURE=1 && \\\n  DIR=/tmp/fribidi && \\\n  cd ${DIR} && \\\n  ./autogen.sh\nRUN [\"cross-build-start\"]\nRUN \\\n  DIR=/tmp/fribidi && \\\n  cd ${DIR} && \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"${PREFIX}\" --disable-static --enable-shared && \\\n  # Use -j1 because fribidi breaks when building in parallel and c2man is not installed\n  make -j1 && \\\n  make install && \\\n  rm -rf ${DIR}\n### fontconfig https://www.freedesktop.org/wiki/Software/fontconfig/\nARG FONTCONFIG_VERSION\nRUN \\\n  DIR=/tmp/fontconfig && \\\n  mkdir -p ${DIR} && \\\n  cd ${DIR} && \\\n  curl -f -sLO https://www.freedesktop.org/software/fontconfig/release/fontconfig-${FONTCONFIG_VERSION}.tar.bz2 && \\\n  tar -jx --strip-components=1 -f fontconfig-${FONTCONFIG_VERSION}.tar.bz2 && \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"${PREFIX}\" --disable-static --enable-shared && \\\n  make && \\\n  make install && \\\n  rm -rf ${DIR} && rm fontconfig-${FONTCONFIG_VERSION}.tar.bz2\n### libass https://github.com/libass/libass\nARG LIBASS_VERSION\nARG LIBASS_SHA256SUM\nRUN \\\n  DIR=/tmp/libass && \\\n  mkdir -p ${DIR} && \\\n  cd ${DIR} && \\\n  curl -f -sLO https://github.com/libass/libass/archive/${LIBASS_VERSION}.tar.gz && \\\n  echo ${LIBASS_SHA256SUM} | sha256sum --check && \\\n  tar -zx --strip-components=1 -f ${LIBASS_VERSION}.tar.gz && rm ${LIBASS_VERSION}.tar.gz\nRUN [\"cross-build-end\"]\nRUN \\\n  DIR=/tmp/libass && \\\n  cd ${DIR} && \\\n  ./autogen.sh\nRUN [\"cross-build-start\"]\nRUN \\\n  DIR=/tmp/libass && \\\n  cd ${DIR} && \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"${PREFIX}\" --disable-static --enable-shared && \\\n  make && \\\n  make install && \\\n  rm -rf ${DIR}\n### kvazaar https://github.com/ultravideo/kvazaar\nARG KVAZAAR_VERSION\nRUN \\\n  DIR=/tmp/kvazaar && \\\n  mkdir -p ${DIR} && \\\n  cd ${DIR} && \\\n  curl -f -sLO https://github.com/ultravideo/kvazaar/archive/v${KVAZAAR_VERSION}.tar.gz && \\\n  tar -zx --strip-components=1 -f v${KVAZAAR_VERSION}.tar.gz && rm v${KVAZAAR_VERSION}.tar.gz\nRUN [\"cross-build-end\"]\nRUN \\\n  DIR=/tmp/kvazaar && \\\n  cd ${DIR} && \\\n  ./autogen.sh\nRUN [\"cross-build-start\"]\nRUN \\\n  DIR=/tmp/kvazaar && \\\n  cd ${DIR} && \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"${PREFIX}\" --disable-static --enable-shared && \\\n  make && \\\n  make install && \\\n  rm -rf ${DIR}\n### aom https://aomedia.googlesource.com/aom\nARG AOM_VERSION\nRUN \\\n  DIR=/tmp/aom && \\\n  git clone --branch v${AOM_VERSION} --depth 1 https://aomedia.googlesource.com/aom ${DIR} && \\\n  cd ${DIR} && \\\n  rm -rf CMakeCache.txt CMakeFiles && \\\n  mkdir -p ./aom_build && \\\n  cd ./aom_build && \\\n  cmake -DCMAKE_INSTALL_PREFIX=\"${PREFIX}\" -DENABLE_TESTS=0 .. && \\\n  make && \\\n  make install && \\\n  rm -rf ${DIR}\n### libxcb (and supporting libraries) for screen capture https://xcb.freedesktop.org/\nARG XORG_MACROS_VERSION\nRUN \\\n  DIR=/tmp/xorg-macros && \\\n  mkdir -p ${DIR} && \\\n  cd ${DIR} && \\\n  curl -f -sLO https://www.x.org/archive//individual/util/util-macros-${XORG_MACROS_VERSION}.tar.gz && \\\n  tar -zx --strip-components=1 -f util-macros-${XORG_MACROS_VERSION}.tar.gz && \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --srcdir=${DIR} --prefix=\"${PREFIX}\" && \\\n  make && \\\n  make install && \\\n  rm -rf ${DIR} && rm util-macros-${XORG_MACROS_VERSION}.tar.gz\n\nARG XPROTO_VERSION\nRUN \\\n  DIR=/tmp/xproto && \\\n  mkdir -p ${DIR} && \\\n  cd ${DIR} && \\\n  curl -f -sLO https://www.x.org/archive/individual/proto/xproto-${XPROTO_VERSION}.tar.gz && \\\n  tar -zx --strip-components=1 -f xproto-${XPROTO_VERSION}.tar.gz && \\\n  # config.guess and config.sub supplied by xproto is too old to recognize aarch64, download manually\n  curl -f -SLo config.guess \"https://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.guess;hb=HEAD\" && \\\n  curl -f -SLo config.sub \"https://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.sub;hb=HEAD\" && \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --srcdir=${DIR} --prefix=\"${PREFIX}\" && \\\n  make && \\\n  make install && \\\n  rm -rf ${DIR} && rm xproto-${XPROTO_VERSION}.tar.gz\n\nARG XAU_VERSION\nRUN \\\n  DIR=/tmp/libXau && \\\n  mkdir -p ${DIR} && \\\n  cd ${DIR} && \\\n  curl -f -sLO https://www.x.org/archive/individual/lib/libXau-${XAU_VERSION}.tar.gz && \\\n  tar -zx --strip-components=1 -f libXau-${XAU_VERSION}.tar.gz && \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --srcdir=${DIR} --prefix=\"${PREFIX}\" && \\\n  make && \\\n  make install && \\\n  rm -rf ${DIR} && rm libXau-${XAU_VERSION}.tar.gz\n\nARG LIBPTHREAD_STUBS_VERSION\nRUN \\\n  DIR=/tmp/libpthread-stubs && \\\n  mkdir -p ${DIR} && \\\n  cd ${DIR} && \\\n  curl -f -sLO https://xcb.freedesktop.org/dist/libpthread-stubs-${LIBPTHREAD_STUBS_VERSION}.tar.gz && \\\n  tar -zx --strip-components=1 -f libpthread-stubs-${LIBPTHREAD_STUBS_VERSION}.tar.gz && \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"${PREFIX}\" && \\\n  make && \\\n  make install && \\\n  rm -rf ${DIR} && rm libpthread-stubs-${LIBPTHREAD_STUBS_VERSION}.tar.gz\n\nARG XCBPROTO_VERSION\nRUN \\\n  DIR=/tmp/libxcb-proto && \\\n  mkdir -p ${DIR} && \\\n  cd ${DIR} && \\\n  curl -f -sLO https://xcb.freedesktop.org/dist/xcb-proto-${XCBPROTO_VERSION}.tar.gz && \\\n  tar -zx --strip-components=1 -f xcb-proto-${XCBPROTO_VERSION}.tar.gz && \\\n  ACLOCAL_PATH=\"${PREFIX}/share/aclocal\" ./autogen.sh && \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"${PREFIX}\" && \\\n  make && \\\n  make install && \\\n  rm -rf ${DIR} && rm xcb-proto-${XCBPROTO_VERSION}.tar.gz\n\nARG LIBXCB_VERSION\nRUN \\\n  DIR=/tmp/libxcb && \\\n  mkdir -p ${DIR} && \\\n  cd ${DIR} && \\\n  curl -f -sLO https://xcb.freedesktop.org/dist/libxcb-${LIBXCB_VERSION}.tar.gz && \\\n  tar -zx --strip-components=1 -f libxcb-${LIBXCB_VERSION}.tar.gz && rm libxcb-${LIBXCB_VERSION}.tar.gz\nRUN [\"cross-build-end\"]\nRUN \\\n  export NOCONFIGURE=1 && \\\n  DIR=/tmp/libxcb && \\\n  cd ${DIR} && \\\n  ACLOCAL_PATH=\"${PREFIX}/share/aclocal\" ./autogen.sh\nRUN [\"cross-build-start\"]\nRUN \\\n  DIR=/tmp/libxcb && \\\n  cd ${DIR} && \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"${PREFIX}\" --disable-static --enable-shared && \\\n  make && \\\n  make install && \\\n  rm -rf ${DIR}\n### libxml2 - for libbluray\nARG LIBXML2_VERSION\nARG LIBXML2_SHA256SUM\nRUN \\\n  DIR=/tmp/libxml2 && \\\n  mkdir -p ${DIR} && \\\n  cd ${DIR} && \\\n  curl -f -sLO https://gitlab.gnome.org/GNOME/libxml2/-/archive/v${LIBXML2_VERSION}/libxml2-v${LIBXML2_VERSION}.tar.gz && \\\n  echo ${LIBXML2_SHA256SUM} | sha256sum --check && \\\n  tar -xz --strip-components=1 -f libxml2-v${LIBXML2_VERSION}.tar.gz && rm libxml2-v${LIBXML2_VERSION}.tar.gz\nRUN [\"cross-build-end\"]\nRUN \\\n  DIR=/tmp/libxml2 && \\\n  cd ${DIR} && \\\n  ./autogen.sh --prefix=\"${PREFIX}\" --with-ftp=no --with-http=no --with-python=no\nRUN [\"cross-build-start\"]\nRUN \\\n  DIR=/tmp/libxml2 && \\\n  cd ${DIR} && \\\n  make && \\\n  make install && \\\n  rm -rf ${DIR}\n### libbluray - Requires libxml, freetype, and fontconfig\nARG LIBBLURAY_VERSION\nARG LIBBLURAY_SHA256SUM\nRUN \\\n  DIR=/tmp/libbluray && \\\n  mkdir -p ${DIR} && \\\n  cd ${DIR} && \\\n  curl -f -sLO https://download.videolan.org/pub/videolan/libbluray/${LIBBLURAY_VERSION}/libbluray-${LIBBLURAY_VERSION}.tar.bz2 && \\\n  echo ${LIBBLURAY_SHA256SUM} | sha256sum --check && \\\n  tar -jx --strip-components=1 -f libbluray-${LIBBLURAY_VERSION}.tar.bz2 && \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"${PREFIX}\" --disable-examples --disable-bdjava-jar --disable-static --enable-shared && \\\n  make && \\\n  make install && \\\n  rm -rf ${DIR} && rm libbluray-${LIBBLURAY_VERSION}.tar.bz2\n### libzmq https://github.com/zeromq/libzmq/\nARG LIBZMQ_VERSION\nARG LIBZMQ_SHA256SUM\nRUN \\\n  DIR=/tmp/libzmq && \\\n  mkdir -p ${DIR} && \\\n  cd ${DIR} && \\\n  curl -f -sLO https://github.com/zeromq/libzmq/archive/v${LIBZMQ_VERSION}.tar.gz && \\\n  echo ${LIBZMQ_SHA256SUM} | sha256sum --check && \\\n  tar -xz --strip-components=1 -f v${LIBZMQ_VERSION}.tar.gz && rm v${LIBZMQ_VERSION}.tar.gz\nRUN [\"cross-build-end\"]\nRUN \\\n  DIR=/tmp/libzmq && \\\n  cd ${DIR} && \\\n  ./autogen.sh\nRUN [\"cross-build-start\"]\nRUN \\\n  DIR=/tmp/libzmq && \\\n  cd ${DIR} && \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"${PREFIX}\" && \\\n  make && \\\n  make install && \\\n  rm -rf ${DIR}\n### ffmpeg https://ffmpeg.org/\nARG FFMPEG_VERSION\nRUN \\\n  DIR=/tmp/ffmpeg && mkdir -p ${DIR} && cd ${DIR} && \\\n  curl -f -sLO https://ffmpeg.org/releases/ffmpeg-${FFMPEG_VERSION}.tar.bz2 && \\\n  tar -jx --strip-components=1 -f ffmpeg-${FFMPEG_VERSION}.tar.bz2 && \\\n  DIR=/tmp/ffmpeg && mkdir -p ${DIR} && cd ${DIR} && \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n  --disable-debug \\\n  --disable-doc \\\n  --disable-ffplay \\\n  --enable-shared \\\n  --enable-avresample \\\n  --enable-libopencore-amrnb \\\n  --enable-libopencore-amrwb \\\n  --enable-gpl \\\n  --enable-libass \\\n  --enable-fontconfig \\\n  --enable-libfreetype \\\n  --enable-libvidstab \\\n  --enable-libmp3lame \\\n  --enable-libopus \\\n  --enable-libtheora \\\n  --enable-libvorbis \\\n  --enable-libvpx \\\n  --enable-libwebp \\\n  --enable-libxcb \\\n  --enable-libx265 \\\n  --enable-libxvid \\\n  --enable-libx264 \\\n  --enable-nonfree \\\n  --enable-openssl \\\n  --enable-libfdk_aac \\\n  --enable-postproc \\\n  --enable-small \\\n  --enable-version3 \\\n  --enable-libbluray \\\n  --enable-libzmq \\\n  --extra-libs=-ldl \\\n  --prefix=\"${PREFIX}\" \\\n  --enable-libopenjpeg \\\n  --enable-libkvazaar \\\n  --enable-libaom \\\n  --extra-libs=-lpthread \\\n  # --enable-mmal \\\n  --enable-neon \\\n  # --enable-omx \\\n  # --enable-omx-rpi \\\n  --enable-v4l2_m2m \\\n  --extra-cflags=\"-I${PREFIX}/include\" \\\n  --extra-ldflags=\"-L${PREFIX}/lib\" && \\\n  make && \\\n  make install && \\\n  make tools/zmqsend && cp tools/zmqsend ${PREFIX}/bin/ && \\\n  make distclean && \\\n  hash -r && \\\n  cd tools && \\\n  make qt-faststart && cp qt-faststart ${PREFIX}/bin/ && rm ffmpeg-${FFMPEG_VERSION}.tar.bz2\n\n### cleanup\nRUN \\\n  ldd ${PREFIX}/bin/ffmpeg | grep opt/ffmpeg | cut -d ' ' -f 3 | xargs -i cp {} /usr/local/lib/ && \\\n  for lib in /usr/local/lib/*.so.*; do ln -s \"${lib##*/}\" \"${lib%%.so.*}\".so; done && \\\n  cp ${PREFIX}/bin/* /usr/local/bin/ && \\\n  cp -r ${PREFIX}/share/ffmpeg /usr/local/share/ && \\\n  LD_LIBRARY_PATH=/usr/local/lib ffmpeg -buildconf && \\\n  cp -r ${PREFIX}/include/libav* ${PREFIX}/include/libpostproc ${PREFIX}/include/libsw* /usr/local/include && \\\n  mkdir -p /usr/local/lib/pkgconfig && \\\n  for pc in ${PREFIX}/lib/pkgconfig/libav*.pc ${PREFIX}/lib/pkgconfig/libpostproc.pc ${PREFIX}/lib/pkgconfig/libsw*.pc; do \\\n  sed \"s:${PREFIX}:/usr/local:g\" <\"$pc\" >/usr/local/lib/pkgconfig/\"${pc##*/}\"; \\\n  done\n\nRUN [ \"cross-build-end\" ]\n\nFROM scratch\nCOPY --from=build /usr/local /usr/local/\n"
}