{
  "startTime": 1674221110345,
  "endTime": 1674221112437,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 2,
        "columnEnd": 111
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 2,
        "columnEnd": 127
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 2,
        "columnEnd": 64
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 2,
        "columnEnd": 72
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 2,
        "columnEnd": 58
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG FFMPEG_VERSION\nARG UBUNTU_VERSION\nFROM roflcoopter/aarch64-ffmpeg:${FFMPEG_VERSION} as ffmpeg\nFROM balenalib/aarch64-ubuntu:${UBUNTU_VERSION}-build as build\nRUN [ \"cross-build-start\" ]\n\nCOPY --from=ffmpeg /usr/local /usr/local/\n\nWORKDIR /tmp/workdir\n\nARG OPENCV_VERSION\nARG MAKEFLAGS=\"-j2\"\n\nENV \\\n  DEBIAN_FRONTEND=noninteractive \\\n  LD_LIBRARY_PATH=/opt/opencv/lib \\\n  PKG_CONFIG_PATH=\"/opt/opencv/share/pkgconfig:/opt/opencv/lib/pkgconfig:/opt/opencv/lib64/pkgconfig\" \\\n  PREFIX=/opt/opencv \\\n  LD_LIBRARY_PATH=\"/opt/opencv/lib:/opt/opencv/lib64:/usr/lib64:/usr/lib:/lib64:/lib:/usr/local/lib\"\n\nRUN buildDeps=\"autoconf \\\n  automake \\\n  ca-certificates \\\n  cmake \\\n  curl \\\n  clinfo \\\n  bzip2 \\\n  expat \\\n  libexpat1-dev \\\n  g++ \\\n  gcc \\\n  git \\\n  gperf \\\n  libtool \\\n  make \\\n  nasm \\\n  perl \\\n  pkg-config \\\n  python3 \\\n  python3-dev \\\n  python3-numpy \\\n  libssl-dev \\\n  yasm \\\n  libgomp1 \\\n  # Optimizations for RPi\n  libatlas-base-dev liblapacke-dev gfortran libhdf5-dev libhdf5-103 libv4l-dev \\\n  zlib1g-dev\" && \\\n  apt-get -yqq update && \\\n  apt-get install -yq --no-install-recommends ${buildDeps} && rm -rf /var/lib/apt/lists/*;\n\n## OpenCV\nRUN \\\n  DIR=/tmp/opencv && mkdir -p ${DIR} && cd ${DIR} && \\\n  curl -f -sL -o opencv-${OPENCV_VERSION}.tar.gz https://github.com/opencv/opencv/archive/${OPENCV_VERSION}.tar.gz && \\\n  tar -x --strip-components=1 -f opencv-${OPENCV_VERSION}.tar.gz && rm opencv-${OPENCV_VERSION}.tar.gz\nRUN \\\n  DIR=/tmp/opencv_contrib && mkdir -p ${DIR} && cd ${DIR} && \\\n  curl -f -sL -o opencv_contrib-${OPENCV_VERSION}.tar.gz https://github.com/opencv/opencv_contrib/archive/${OPENCV_VERSION}.tar.gz && \\\n  tar -x --strip-components=1 -f opencv_contrib-${OPENCV_VERSION}.tar.gz && rm opencv_contrib-${OPENCV_VERSION}.tar.gz\n\nRUN \\\n  DIR=/tmp/opencv/build && mkdir -p ${DIR} && cd ${DIR} && \\\n  cmake -D CMAKE_BUILD_TYPE=RELEASE \\\n  -DBUILD_TIFF=ON \\\n  -DBUILD_opencv_java=OFF \\\n  -D BUILD_SHARED_LIBS=ON \\\n  -D ENABLE_NEON=ON \\\n  -D WITH_LIBV4L=ON \\\n  -D WITH_V4L=OFF \\\n  -D WITH_CSTRIPES=ON \\\n  -D BUILD_TESTS=OFF \\\n  -D BUILD_PERF_TESTS=OFF \\\n  -D BUILD_opencv_python2=OFF \\\n  -D BUILD_opencv_python3=ON \\\n  -D CMAKE_INSTALL_PREFIX=${PREFIX} \\\n  -D INSTALL_PYTHON_EXAMPLES=OFF \\\n  -D INSTALL_C_EXAMPLES=OFF \\\n  -D OPENCV_EXTRA_MODULES_PATH=/tmp/opencv_contrib/modules \\\n  -D OPENCV_ENABLE_NONFREE=ON \\\n  -D CMAKE_SHARED_LINKER_FLAGS=-latomic \\\n  -D BUILD_DOCS=OFF \\\n  -D BUILD_EXAMPLES=OFF \\\n  # Turn off some unnecessary modules that only take extra time to build\n  -D BUILD_opencv_face=OFF \\\n  -D HIGHGUI_ENABLE_PLUGINS=OFF \\\n  -D WITH_WIN32UI=OFF \\\n  -D WITH_GTK=OFF \\\n  -D WITH_QT=OFF \\\n  /tmp/opencv && \\\n  make && \\\n  make install\n\nRUN [ \"cross-build-end\" ]\n\nFROM scratch\n\nCOPY --from=build /opt/opencv /opt/opencv/\n"
}