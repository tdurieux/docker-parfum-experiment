{
  "startTime": 1674252844414,
  "endTime": 1674252845798,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 81
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 57
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 81
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 4,
        "columnEnd": 22
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM quay.io/pypa/manylinux2014_x86_64:2021-03-12-76cb5c3\nRUN yum update -y && mkdir /workspace\n\nWORKDIR /workspace\nCOPY PhysX /workspace/PhysX\n\nWORKDIR /workspace\nRUN git clone --single-branch -b 20210000.6 --depth 1 https://github.com/coin-or/CppAD.git\nWORKDIR /workspace/CppAD\nRUN mkdir /workspace/CppAD/build\nWORKDIR /workspace/CppAD/build\nRUN cmake .. -DCMAKE_BUILD_TYPE=Release && make -j && make install\n\nWORKDIR /workspace\nRUN git clone --single-branch -b 0.3.2 --depth 1 https://github.com/ros/console_bridge.git\nRUN mkdir /workspace/console_bridge/build\nWORKDIR /workspace/console_bridge/build\nRUN cmake .. -DCMAKE_BUILD_TYPE=Release && make -j && make install\n\nWORKDIR /workspace\nRUN git clone --single-branch -b 1.0.5 --depth 1 https://github.com/ros/urdfdom_headers.git\nRUN mkdir /workspace/urdfdom_headers/build\nWORKDIR /workspace/urdfdom_headers/build\nRUN cmake .. -DCMAKE_BUILD_TYPE=Release && make -j && make install\n\nWORKDIR /workspace\nRUN yum install -y tinyxml-devel && rm -rf /var/cache/yum\nRUN git clone --single-branch -b 1.0.4 --depth 1 https://github.com/ros/urdfdom.git\nRUN mkdir /workspace/urdfdom/build\nWORKDIR /workspace/urdfdom/build\nRUN cmake .. -DCMAKE_BUILD_TYPE=Release && make -j && make install\n\nWORKDIR /workspace\nRUN yum install -y eigen3-devel urdfdom-devel boost-devel && rm -rf /var/cache/yum\nRUN git clone --single-branch -b v2.5.6 --depth 1 https://github.com/stack-of-tasks/pinocchio.git\nWORKDIR /workspace/pinocchio\nRUN git submodule update --init --recursive && mkdir /workspace/pinocchio/build\nWORKDIR /workspace/pinocchio/build\nRUN cmake .. -DCMAKE_BUILD_TYPE=Release -DBUILD_TESTING=OFF -DBUILD_PYTHON_INTERFACE=OFF -DBUILD_WITH_AUTODIFF_SUPPORT=ON -DBUILD_WITH_URDF_SUPPORT=ON && make -j && make install\n\nWORKDIR /workspace\nRUN git clone --single-branch -b v1.8.2 --depth 1 https://github.com/gabime/spdlog.git\nRUN mkdir /workspace/spdlog/build\nWORKDIR /workspace/spdlog/build\nRUN cmake .. -DCMAKE_BUILD_TYPE=Release -DSPDLOG_BUILD_EXAMPLE=OFF && make -j && make install\n\nWORKDIR /workspace\nRUN yum install -y libXrandr-devel libXinerama-devel libXcursor-devel libXi-devel && rm -rf /var/cache/yum\nRUN git clone --single-branch -b 3.3.3 --depth 1 https://github.com/glfw/glfw.git\nRUN mkdir /workspace/glfw/build\nWORKDIR /workspace/glfw/build\nRUN cmake .. -DCMAKE_BUILD_TYPE=Release -DGLFW_BUILD_DOCS=OFF -DGLFW_BUILD_EXAMPLES=OFF -DGLFW_BUILD_TESTS=OFF -DGLFW_VULKAN_STATIC=OFF -DBUILD_SHARED_LIBS=ON && make -j && make install\n\nWORKDIR /workspace\nRUN curl -f -O https://sdk.lunarg.com/sdk/download/1.2.189.0/linux/vulkan_sdk.tar.gz && tar -xf vulkan_sdk.tar.gz && rm -f vulkan_sdk.tar.gz\nENV VULKAN_SDK=/workspace/1.2.189.0/x86_64 LD_LIBRARY_PATH=/workspace/1.2.189.0/x86_64/lib VK_LAYER_PATH=/workspace/1.2.189.0/x86_64/etc/vulkan/explicit_layer.d PATH=/workspace/1.2.189.0/x86_64/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\n\nWORKDIR /workspace\nRUN git clone --single-branch -b 0.9.9.8 --depth 1 https://github.com/g-truc/glm.git\nWORKDIR /workspace/glm\nRUN cp -r glm /usr/local/include\n\nRUN yum install -y glew-devel && rm -rf /var/cache/yum\nENV LD_LIBRARY_PATH=/opt/rh/devtoolset-9/root/usr/lib64:/opt/rh/devtoolset-9/root/usr/lib:/opt/rh/devtoolset-9/root/usr/lib64/dyninst:/opt/rh/devtoolset-9/root/usr/lib/dyninst:/opt/rh/devtoolset-9/root/usr/lib64:/opt/rh/devtoolset-9/root/usr/lib:/workspace/1.2.189.0/x86_64/lib PCP_DIR=/opt/rh/devtoolset-9/root DEVTOOLSET_ROOTPATH=/opt/rh/devtoolset-9/root MANPATH=/opt/rh/devtoolset-9/root/usr/share/man: PATH=/opt/rh/devtoolset-9/root/usr/bin:/workspace/1.2.189.0/x86_64/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\n\nWORKDIR /workspace\nRUN git clone --single-branch -b v2.1.0 --depth 1 https://github.com/yse/easy_profiler.git\nRUN mkdir /workspace/easy_profiler/build\nWORKDIR /workspace/easy_profiler/build\nRUN cmake .. -DCMAKE_BUILD_TYPE=Release && make -j && make install\n\nRUN yum install -y zip && rm -rf /var/cache/yum\n\nWORKDIR /workspace\nRUN git clone --single-branch -b v4.0.0 --depth 1 https://github.com/KhronosGroup/KTX-Software.git\nRUN mkdir /workspace/KTX-Software/build\nWORKDIR /workspace/KTX-Software/build\nRUN cmake .. -DCMAKE_BUILD_TYPE=Release && make -j && make install\n\nWORKDIR /workspace\nRUN git clone --single-branch -b release-2.0.16 --depth 1 https://github.com/libsdl-org/SDL.git\nRUN mkdir /workspace/SDL/build\nWORKDIR /workspace/SDL/build\nRUN cmake .. -DCMAKE_BUILD_TYPE=Release && make -j && make install\n\nWORKDIR /workspace\nRUN git clone --single-branch -b v5.0.1 --depth 1 https://github.com/assimp/assimp.git\nRUN awk '{sub(\"-g \",\"\")}1' /workspace/assimp/CMakeLists.txt > /tmp/CMakeLists.txt && mv /tmp/CMakeLists.txt /workspace/assimp/CMakeLists.txt\nRUN mkdir /workspace/assimp/build\nWORKDIR /workspace/assimp/build\nRUN cmake .. -DCMAKE_BUILD_TYPE=Release -DASSIMP_BUILD_TESTS=OFF && make -j && make install\n\nRUN rpm -i http://mirror.ghettoforge.org/distributions/gf/el/7/gf/x86_64/gcc10-libstdc++-10.2.1-7.gf.el7.x86_64.rpm\nENV LD_LIBRARY_PATH=/opt/gcc-10.2.1/usr/lib64:/opt/rh/devtoolset-9/root/usr/lib64:/opt/rh/devtoolset-9/root/usr/lib:/opt/rh/devtoolset-9/root/usr/lib64/dyninst:/opt/rh/devtoolset-9/root/usr/lib/dyninst:/opt/rh/devtoolset-9/root/usr/lib64:/opt/rh/devtoolset-9/root/usr/lib:/workspace/1.2.189.0/x86_64/lib:/workspace/cuda/lib64:/workspace/cuda/lib64/stubs/ PCP_DIR=/opt/rh/devtoolset-9/root DEVTOOLSET_ROOTPATH=/opt/rh/devtoolset-9/root MANPATH=/opt/rh/devtoolset-9/root/usr/share/man: PATH=/opt/rh/devtoolset-9/root/usr/bin:/workspace/1.2.189.0/x86_64/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\n\nRUN /opt/python/cp38-cp38/bin/pip install git+https://github.com/fbxiang/auditwheel.git@3a723fa01f87b04b5ce4a8e7f81f6a142ac3044f\nRUN echo \"#!/opt/python/cp38-cp38/bin/python\" > /usr/local/bin/auditwheel \\\n && echo \"import re, sys\" >> /usr/local/bin/auditwheel \\\n && echo \"from auditwheel.main import main\" >> /usr/local/bin/auditwheel \\\n && echo \"if __name__ == '__main__':\" >> /usr/local/bin/auditwheel \\\n && echo \"    sys.argv[0] = re.sub(r'(-script\\.pyw|\\.exe)?$', '', sys.argv[0])\" >> /usr/local/bin/auditwheel \\\n && echo \"    sys.exit(main())\" >> /usr/local/bin/auditwheel\n\nWORKDIR /workspace\nCOPY cuda-11.4 /workspace/cuda\nENV CUDA_PATH=/workspace/cuda\n\nWORKDIR /workspace\n"
}