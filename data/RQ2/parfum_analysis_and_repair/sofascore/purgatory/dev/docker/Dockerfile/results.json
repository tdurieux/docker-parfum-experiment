{
  "startTime": 1674249490660,
  "endTime": 1674249491648,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 55
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 48,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 113
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG PHP_VERSION=8.0\n\nFROM php:${PHP_VERSION}-cli-alpine3.13\n\nARG COMPOSER_VERSION=2.1.3\nARG PHP_CS_FIXER_VERSION=3.0.0\nARG XDEBUG_VERSION=3.0.4\n\nENV XDEBUG_CONFIG=\"client_host=host.docker.internal\"\n\n# This is where we're going to store all of our non-project specific binaries\nRUN mkdir -p /app/bin\nENV PATH /app/bin:$PATH\n\n# Install needed core and PECL extensions\nRUN apk add --update --no-cache --virtual .build-deps \\\n        ${PHPIZE_DEPS} \\\n        libxml2-dev \\\n        libzip-dev \\\n        zlib-dev \\\n    && docker-php-ext-install -j $(getconf _NPROCESSORS_ONLN) \\\n        xml \\\n        zip \\\n    && pecl install \\\n        xdebug-${XDEBUG_VERSION} \\\n    && docker-php-ext-enable \\\n        xdebug \\\n    && apk del --purge .build-deps\n\nRUN mv ${PHP_INI_DIR}/php.ini-development ${PHP_INI_DIR}/php.ini\n\nCOPY xdebug.ini ${PHP_INI_DIR}/conf.d/xdebug.ini\n\n# Utilities needed to run this image\nRUN apk add --update --no-cache \\\n        git \\\n        libzip \\\n        unzip \\\n        su-exec \\\n        shadow\n\n# Composer\nRUN curl -f --show-error https://getcomposer.org/installer | php -- \\\n        --install-dir=/app/bin \\\n        --filename=composer \\\n        --version=${COMPOSER_VERSION}\n\n# PHP CS Fixer\nRUN curl -f --location --output /app/bin/php-cs-fixer --show-error \\\n        https://github.com/FriendsOfPHP/PHP-CS-Fixer/releases/download/v${PHP_CS_FIXER_VERSION}/php-cs-fixer.phar \\\n    && chmod +x /app/bin/php-cs-fixer\n\n# Create the user that's going to run our application\nRUN useradd -ms /bin/sh app\n\nCOPY entrypoint.sh /usr/local/bin/docker-entrypoint\n\nVOLUME /app/src\nWORKDIR /app/src\n\nENTRYPOINT [\"docker-entrypoint\"]\nCMD [\"php\", \"-a\"]\n"
}