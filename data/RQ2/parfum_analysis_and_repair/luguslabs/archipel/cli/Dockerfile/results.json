{
  "startTime": 1674252750259,
  "endTime": 1674252751507,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 95
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 33,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#Create subkey bin\nFROM debian:buster as builder-subkey\n# Install subkey tool\nWORKDIR /root/\nRUN apt-get -y update; \\\n    apt-get install -y --no-install-recommends \\\n    cmake pkg-config libssl-dev git gcc build-essential clang libclang-dev curl ca-certificates && rm -rf /var/lib/apt/lists/*;\nRUN curl https://sh.rustup.rs -sSf | sh -s -- -y\nENV PATH=\"/root/.cargo/bin:${PATH}\"\nRUN rustup toolchain install nightly-2020-10-06\nRUN rustup default nightly-2020-10-06\nRUN rustup target add wasm32-unknown-unknown --toolchain nightly-2020-10-06\n\n###########################\n# Build subkey tool step\n###########################\nRUN git clone https://github.com/paritytech/substrate\nRUN cd substrate && git checkout v2.0.1 && cargo build -p subkey --release\n\n\nFROM node:10-buster\n\nENV NODE_NO_WARNINGS 1\nENV user node\nENV PATH=/home/node/.npm-global/bin:$PATH\nENV NPM_CONFIG_PREFIX=/home/node/.npm-global\n\n# Add debian unstable repo for wireguard packages\nRUN echo \"deb http://deb.debian.org/debian/ unstable main\" > /etc/apt/sources.list.d/unstable-wireguard.list && \\\n    printf 'Package: *\\nPin: release a=unstable\\nPin-Priority: 90\\n' > /etc/apt/preferences.d/limit-unstable\n\n# Installing necessary packages\nRUN apt-get -y update && \\\n    apt-get install -y --no-install-recommends \\\n    wireguard-tools zip iptables net-tools procps && \\\n    echo \"resolvconf resolvconf/linkify-resolvconf boolean false\" | debconf-set-selections && \\\n    apt install --no-install-recommends -y resolvconf && \\\n    apt clean && rm -rf /var/lib/apt/lists/*;\n\n# Copy subkey\nCOPY --from=builder-subkey /root/substrate/target/release/subkey /usr/local/bin/\n\nRUN mkdir /home/$user/app\nCOPY . /home/$user/app/\nRUN chown -R $user: /home/$user/app\n\nUSER $user\n\nRUN mkdir /home/$user/.npm-global\n\nWORKDIR /home/$user/app\nRUN npm install && npm cache clean --force;\nRUN npm -g install . --no-optional && npm cache clean --force;\n\nENTRYPOINT [ \"archipel-cli\" ]\n"
}