diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/openvidu/openvidu-loadtest/docker/browser-emulator/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/openvidu/openvidu-loadtest/docker/browser-emulator/Dockerfile/repaired.Dockerfile
index bba8d70..347b03f 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/openvidu/openvidu-loadtest/docker/browser-emulator/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/openvidu/openvidu-loadtest/docker/browser-emulator/Dockerfile/repaired.Dockerfile
@@ -6,7 +6,7 @@ ENV TZ=Europe/Madrid
 
 RUN apt-get update && apt-get install -yq --no-install-recommends \
   	curl git apt-transport-https ca-certificates software-properties-common gnupg && \
-	curl -fsSL https://bazel.build/bazel-release.pub.gpg | gpg --dearmor > bazel.gpg && \
+	curl -fsSL https://bazel.build/bazel-release.pub.gpg | gpg --batch --dearmor > bazel.gpg && \
 	mv bazel.gpg /etc/apt/trusted.gpg.d/ && \
 	echo "deb [arch=amd64] https://storage.googleapis.com/bazel-apt stable jdk1.8" | tee /etc/apt/sources.list.d/bazel.list && \
 	apt-get update && \
@@ -21,10 +21,10 @@ RUN apt-get update && apt-get install -yq --no-install-recommends \
 # Build VMAF
 FROM base AS vmaf
 WORKDIR /tmp
-RUN curl --output "/tmp/vmaf.tar.gz" \
+RUN curl -f --output "/tmp/vmaf.tar.gz" \
         --continue-at - \
         --location "https://github.com/Netflix/vmaf/archive/refs/tags/v2.3.0.tar.gz"
-RUN tar -xvf vmaf.tar.gz
+RUN tar -xvf vmaf.tar.gz && rm vmaf.tar.gz
 WORKDIR /tmp/vmaf-2.3.0/libvmaf/
 RUN meson build --buildtype release && \
 	ninja -vC build && \
@@ -47,10 +47,10 @@ RUN make
 FROM base AS visqol
 # Build VISQOL
 WORKDIR /tmp
-RUN curl --output "/tmp/visqol.tar.gz" \
+RUN curl -f --output "/tmp/visqol.tar.gz" \
         --continue-at - \
         --location "https://github.com/google/visqol/archive/refs/tags/v3.1.0.tar.gz"
-RUN tar -xvf visqol.tar.gz
+RUN tar -xvf visqol.tar.gz && rm visqol.tar.gz
 WORKDIR /tmp/visqol-3.1.0/
 RUN bazel build :visqol -c opt
 
@@ -58,13 +58,13 @@ FROM base AS tesseract
 # Build tesseract
 ## Building tesseract ST for better performance, check https://tesseract-ocr.github.io/tessdoc/Compiling-%E2%80%93-GitInstallation.html#release-builds-for-mass-production
 WORKDIR /tmp
-RUN curl --output "/tmp/tesseract.tar.gz" \
+RUN curl -f --output "/tmp/tesseract.tar.gz" \
         --continue-at - \
         --location "https://github.com/tesseract-ocr/tesseract/archive/refs/tags/4.1.3.tar.gz"
-RUN tar -xvf tesseract.tar.gz
+RUN tar -xvf tesseract.tar.gz && rm tesseract.tar.gz
 WORKDIR /tmp/tesseract-4.1.3/
 RUN ./autogen.sh && \
-	./configure --disable-openmp --disable-shared 'CXXFLAGS=-g -O2 -fno-math-errno -Wall -Wextra -Wpedantic' && \
+	./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --disable-openmp --disable-shared 'CXXFLAGS=-g -O2 -fno-math-errno -Wall -Wextra -Wpedantic' && \
 	make -j$(nproc) && \
 	make install
 
@@ -125,24 +125,24 @@ COPY --from=visqol /tmp/visqol-3.1.0 /usr/local/visqol
 # Install dependencies
 RUN apt-get update && apt-get install -yq --no-install-recommends \
   	curl apt-transport-https ca-certificates software-properties-common python3-pip gnupg && \
-	curl -sL https://deb.nodesource.com/setup_14.x | bash - && \
+	curl -f -sL https://deb.nodesource.com/setup_14.x | bash - && \
 	apt-get install -yq --no-install-recommends \
 	nodejs ffmpeg libopencv-dev python3-opencv jq pkg-config && \
 	pkg-config --cflags --libs opencv4 && \
 	rm -rf /var/lib/apt/lists/*
 
 # Get tesseract
-RUN curl --output "/usr/local/share/tessdata/eng.traineddata" \
+RUN curl -f --output "/usr/local/share/tessdata/eng.traineddata" \
         --continue-at - \
         --location "https://github.com/tesseract-ocr/tessdata/raw/main/eng.traineddata"
 
 COPY ["browser-emulator/package.json", "browser-emulator/package-lock.json*", "./"]
-RUN npm install
+RUN npm install && npm cache clean --force;
 
 COPY ["browser-emulator/qoe_scripts/requirements.txt", "./qoe_scripts/"]
 
 ## Install python dependencies
-RUN pip3 install -r /opt/openvidu-loadtest/browser-emulator/qoe_scripts/requirements.txt
+RUN pip3 install --no-cache-dir -r /opt/openvidu-loadtest/browser-emulator/qoe_scripts/requirements.txt
 
 COPY browser-emulator/ .
 RUN npm run build