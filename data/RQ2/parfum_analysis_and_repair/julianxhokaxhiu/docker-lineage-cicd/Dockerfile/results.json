{
  "startTime": 1674250734178,
  "endTime": 1674250735050,
  "originalSmells": [
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 109,
        "lineEnd": 148,
        "columnStart": 22,
        "columnEnd": 14
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM openjdk:8-slim\nMAINTAINER Julian Xhokaxhiu <info at julianxhokaxhiu dot com>\n\n# Environment variables\n#######################\n\nENV USER root\nENV SRC_DIR /srv/src\nENV CCACHE_DIR /srv/ccache\nENV ZIP_DIR /srv/zips\nENV LMANIFEST_DIR /srv/local_manifests\n\n# Configurable environment variables\n####################################\n\n# By default we want to use CCACHE, you can disable this\n# WARNING: disabling this may slow down a lot your builds!\nENV USE_CCACHE 1\n\n# Environment that controls the CCACHE size\n# suggested: 50G\nENV CCACHE_SIZE '50G'\n\n# Environment that compresses objects stored in CCACHE\n# suggested: 1\n# WARNING: While this may involve a tiny performance slowdown, it increases the number of files that fit in the cache.\nENV CCACHE_COMPRESS 1\n\n# Environment for the LineageOS Branch name\n# See https://github.com/LineageOS/android_vendor_cm/branches for possible options\nENV BRANCH_NAME 'cm-14.1'\n\n# Environment for the device list ( separate by comma if more than one)\n# eg. DEVICE_LIST=hammerhead,bullhead,angler\nENV DEVICE_LIST ''\n\n# OTA build.prop key that will be used inside CMUpdater\n# Use this in combination with LineageOTA to make sure your device can auto-update itself from this buildbot\nENV OTA_PROP 'cm.updater.uri'\n\n# OTA URL that will be used inside CMUpdater\n# Use this in combination with LineageOTA to make sure your device can auto-update itself from this buildbot\nENV OTA_URL ''\n\n# User identity\nENV USER_NAME 'LineageOS Buildbot'\nENV USER_MAIL 'lineageos-buildbot@docker.host'\n\n# If you want to start always fresh ( re-download all the source code everytime ) set this to 'true'\nENV CLEAN_SRCDIR false\n\n# If you want to preserve old ZIPs set this to 'false'\nENV CLEAN_OUTDIR true\n\n# Change this cron rule to what fits best for you\n# By Default = At 10:00 UTC ~ 2am PST/PDT\nENV CRONTAB_TIME '0 10 * * *'\n\n# Print detailed output rather than only summary\nENV DEBUG false\n\n# Clean artifacts output after each build\nENV CLEAN_AFTER_BUILD true\n\n# Provide root capabilities builtin inside the ROM ( see http://lineageos.org/Update-and-Build-Prep/ )\nENV WITH_SU true\n\n# Provide a default JACK configuration in order to avoid out-of-memory issues\nENV ANDROID_JACK_VM_ARGS \"-Dfile.encoding=UTF-8 -XX:+TieredCompilation -Xmx4G\"\n\n# Create Volume entry points\n############################\n\nVOLUME $SRC_DIR\nVOLUME $CCACHE_DIR\nVOLUME $ZIP_DIR\nVOLUME $LMANIFEST_DIR\n\n# Copy required files and fix permissions\n#####################\n\nCOPY src/* /root/\n\n# Create missing directories\n############################\n\nRUN mkdir -p $SRC_DIR\nRUN mkdir -p $CCACHE_DIR\nRUN mkdir -p $ZIP_DIR\nRUN mkdir -p $LMANIFEST_DIR\n\n# Set the work directory\n########################\n\nWORKDIR $SRC_DIR\n\n# Fix permissions\n#################\n\nRUN chmod 0755 /root/*\n\n# Enable contrib support\n#########################\n\nRUN sed -i \"s/ main$/ main contrib/\" /etc/apt/sources.list\n\n# Install required Android AOSP packages\n########################################\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n    bc \\\n    bison \\\n    build-essential \\\n    ccache \\\n    cron \\\n    curl \\\n    flex \\\n    g++-multilib \\\n    gcc-multilib \\\n    git \\\n    gnupg \\\n    gperf \\\n    imagemagick \\\n    lib32ncurses5-dev \\\n    lib32readline-dev \\\n    lib32z1-dev \\\n    libesd0-dev \\\n    liblz4-tool \\\n    libncurses5-dev \\\n    libsdl1.2-dev \\\n    libssl-dev \\\n    libwxgtk3.0-dev \\\n    libxml2 \\\n    libxml2-utils \\\n    lzop \\\n    maven \\\n    openssl \\\n    pngcrush \\\n    procps \\\n    python \\\n    repo \\\n    rsync \\\n    schedtool \\\n    squashfs-tools \\\n    unzip \\\n    wget \\\n    xsltproc \\\n    zip \\\n    zlib1g-dev && rm -rf /var/lib/apt/lists/*;\n\n# Allow redirection of stdout to docker logs\n############################################\nRUN ln -sf /proc/1/fd/1 /var/log/docker.log\n\n# Cleanup\n#########\n\nRUN apt-get clean && apt-get autoclean\n\n# Set the entry point to init.sh\n###########################################\n\nENTRYPOINT /root/init.sh"
}