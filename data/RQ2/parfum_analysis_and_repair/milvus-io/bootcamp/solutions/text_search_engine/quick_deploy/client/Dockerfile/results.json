{
  "startTime": 1674218734827,
  "endTime": 1674218735669,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 8
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 14
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 12,
        "columnEnd": 28
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 18,
        "columnEnd": 34
      }
    }
  ],
  "repairedDockerfile": "# => Build container\nFROM node:14.18.1-alpine3.12 as builder\nWORKDIR /app\nCOPY . .\nRUN yarn && yarn cache clean;\nRUN yarn build && yarn cache clean;\n\n# => Run container\nFROM nginx:1.17-alpine\n\n# Nginx config\nRUN rm -rf /etc/nginx/conf.d\nCOPY conf /etc/nginx\n\n# Static build\nCOPY --from=builder /app/build /usr/share/nginx/html/\n\n# Default port exposure\nEXPOSE 80\n\n# Copy .env file and shell script to container\nWORKDIR /usr/share/nginx/html\nCOPY ./env.sh .\nCOPY .env .\n\n# Add bash\nRUN apk add --no-cache bash\n\n# Make our shell script executable\nRUN chmod +x env.sh\n\n# Start Nginx server\nCMD [\"/bin/bash\", \"-c\", \"/usr/share/nginx/html/env.sh && nginx -g \\\"daemon off;\\\"\"]\n"
}