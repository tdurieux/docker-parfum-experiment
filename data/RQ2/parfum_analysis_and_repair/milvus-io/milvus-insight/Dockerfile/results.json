{
  "startTime": 1674250912077,
  "endTime": 1674250912638,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 16
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# => Building container\nFROM mhart/alpine-node:14 as builder\nWORKDIR /app\nCOPY . .\n\n# => Building Client\nWORKDIR /app/client\nRUN yarn install && yarn cache clean;\nRUN yarn build\n# # => Building Server\nWORKDIR /app/express\nRUN yarn install && yarn cache clean;\nENV NODE_ENV production\nENV PORT 80\nRUN yarn build\n\n# => Copy to Final container\nFROM mhart/alpine-node:14\nWORKDIR /app\nCOPY --from=builder /app/express/dist /app/dist\nCOPY --from=builder /app/client/build /app/build\n# COPY --from=builder /app/server/node_modules /app/node_modules\nCOPY --from=builder /app/express/package.json /app/package.json\nCOPY --from=builder /app/express/yarn.lock /app/yarn.lock\n\n# => Reinstall production dependencies and clean cache\nRUN yarn install --production && yarn cache clean\n# Add bash\nRUN apk add --no-cache bash\n\n# Make our shell script executable\nRUN chmod +x /app/build/env.sh\n\n# Make all files accessible such that the image supports arbitrary  user ids\nRUN chgrp -R 0 /app && \\\n    chmod -R g=u /app\n\nEXPOSE 3000\n\n# RUN echo -e window.__version=\"{\\\"version\\\":\\\"\"$VERSION\"\\\"}\" > /app/build/version.js\nCMD [ \"/bin/bash\", \"-c\", \"/app/build/env.sh && yarn start:prod\" ]\n"
}