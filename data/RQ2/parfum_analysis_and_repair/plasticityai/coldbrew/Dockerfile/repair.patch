diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/plasticityai/coldbrew/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/plasticityai/coldbrew/Dockerfile/repaired.Dockerfile
index aa0368e..9e2ba5e 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/plasticityai/coldbrew/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/plasticityai/coldbrew/Dockerfile/repaired.Dockerfile
@@ -3,32 +3,32 @@ FROM python:3.8.0b4
 RUN apt-get update
 
 # Install Java
-RUN apt-get install default-jre cmake ninja-build -y
+RUN apt-get install --no-install-recommends default-jre cmake ninja-build -y && rm -rf /var/lib/apt/lists/*;
 
 # Install Emscripten
 ADD src/tools/install_emscripten.sh /tmp/install_emscripten.sh
 RUN /tmp/install_emscripten.sh
 
 # Install Python dependencies
-RUN apt-get install build-essential -y
-RUN apt-get install libffi-dev libssl-dev zlib1g-dev libncurses5-dev libncursesw5-dev libreadline-dev libsqlite3-dev  -y
-RUN apt-get install libgdbm-dev libdb5.3-dev libbz2-dev libexpat1-dev liblzma-dev tk-dev -y
+RUN apt-get install --no-install-recommends build-essential -y && rm -rf /var/lib/apt/lists/*;
+RUN apt-get install --no-install-recommends libffi-dev libssl-dev zlib1g-dev libncurses5-dev libncursesw5-dev libreadline-dev libsqlite3-dev -y && rm -rf /var/lib/apt/lists/*;
+RUN apt-get install --no-install-recommends libgdbm-dev libdb5.3-dev libbz2-dev libexpat1-dev liblzma-dev tk-dev -y && rm -rf /var/lib/apt/lists/*;
 
 # Install OpenSSL with thread support
-RUN wget http://www.openssl.org/source/openssl-1.0.1g.tar.gz
-RUN tar -xvzf openssl-1.0.1g.tar.gz
+RUN wget https://www.openssl.org/source/openssl-1.0.1g.tar.gz
+RUN tar -xvzf openssl-1.0.1g.tar.gz && rm openssl-1.0.1g.tar.gz
 RUN cd openssl-1.0.1g && ./config threads -D_REENTRANT
 RUN cd openssl-1.0.1g && make
 RUN cd openssl-1.0.1g && make install_sw
 RUN rm -rf openssl-1.0.1g.tar.gz openssl-1.0.1g
 
 # Install Java for Closure Compiler
-RUN cd /opt && curl -L https://github.com/AdoptOpenJDK/openjdk8-binaries/releases/download/jdk8u222-b10/OpenJDK8U-jre_x64_linux_hotspot_8u222b10.tar.gz -o jre.tar.gz && tar zxvf jre.tar.gz --one-top-level=jre
+RUN cd /opt && curl -f -L https://github.com/AdoptOpenJDK/openjdk8-binaries/releases/download/jdk8u222-b10/OpenJDK8U-jre_x64_linux_hotspot_8u222b10.tar.gz -o jre.tar.gz && tar zxvf jre.tar.gz --one-top-level=jre && rm jre.tar.gz
 RUN rm /opt/jre.tar.gz
 RUN echo "\n\nPATH=/opt/jre/jdk8u222-b10-jre/bin:\$PATH" >> /usr/local/coldbrew/emsdk/emsdk_env.sh
 
 # Install Makefile dependencies
-RUN apt-get install zip unzip rsync -y
+RUN apt-get install --no-install-recommends zip unzip rsync -y && rm -rf /var/lib/apt/lists/*;
 
 # Install wasm-nm and wasm-gc
 RUN curl https://sh.rustup.rs -sSf | sh -s -- -y