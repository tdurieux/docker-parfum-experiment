{
  "startTime": 1674255348332,
  "endTime": 1674255349824,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 7,
        "columnEnd": 81
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 7,
        "columnEnd": 111
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 7,
        "columnEnd": 61
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 7,
        "columnEnd": 65
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM  docker.io/library/python:3.7-buster\n\nWORKDIR /opt/app-root/\nENV PATH=/opt/app-root/bin:/usr/local/texlive/bin/x86_64-linux:$PATH \\\n    SUMMARY=\"All in one image for solarforecastarbiter-core including GPG, wgrib2, pdflatex\" \\\n    LANG=en_US.UTF-8 \\\n    LC_ALL=C\n\nLABEL summary=\"$SUMMARY\" \\\n    maintainer=\"lboeman@arizona.edu\"\n\nUSER root\n\nCOPY build/grib2 /tmp/grib2\n\nRUN set -ex \\\n    && apt-get update \\\n    && apt-get upgrade -y \\\n    && buildDeps='gfortran libnetcdf-dev libhdf5-dev libgrib2c-dev' \\\n    && apt-get install --no-install-recommends -y $buildDeps python3-gpg libnetcdf13 sudo \\\n    && cd /root \\\n    # wgrib2 install, with help from fedora RPM build https://src.fedoraproject.org/rpms/wgrib2/tree/master\n    && wget -q https://ftp.cpc.ncep.noaa.gov/wd51we/wgrib2/wgrib2_nolib.tgz.v2.0.8 \\\n    && tar -xzf wgrib2_nolib.tgz.v2.0.8 \\\n    && cd grib2 \\\n    && /bin/bash -c \"rm -r wgrib2/{fnlist,Gctpc,gctpc_ll2xy,new_grid_lambertc}.[ch]\" \\\n    && patch -p1 -b < /tmp/grib2/wgrib2-jasper-2.patch \\\n    && patch -p1 -b < /tmp/grib2/wgrib2-nogctpc.patch \\\n    && cp /tmp/grib2/config.h /root/grib2/wgrib2/. \\\n    && cd wgrib2 \\\n    && CC=gcc FC=gfortran CFLAGES=\"-I.. -I/usr/include/netcdf\" LDFLAGS=\"-lnetcdf -lpng -lz -lm\" make fnlist.c fnlist.h \\\n    && CC=gcc FC=gfortran CFLAGES=\"-I.. -I/usr/include/netcdf\" LDFLAGS=\"-lnetcdf -lpng -lz -lm\" make \\\n    && mkdir -p /opt/app-root/bin \\\n    && cp wgrib2 /opt/app-root/bin \\\n    && cd /opt/app-root/ \\\n    && rm -rf /root/grib2 wgrib2.tgz /tmp/grib2 \\\n    && apt-get autoremove -y $buildDeps \\\n    && apt clean \\\n    && rm -rf /var/lib/apt/lists/* \\\n    && /usr/local/bin/python -m venv /opt/app-root/ \\\n    && /opt/app-root/bin/pip install -U pip \\\n    && ln -s \"/usr/lib/python3/dist-packages/gpg\" \"/opt/app-root/lib/python3.7/site-packages/\" \\\n    && ln -s \"/usr/lib/python3/dist-packages/gpg-*.egg-info\" \"/opt/app-root/lib/python3.7/site-packages/\" \\\n    && /opt/app-root/bin/python -c \"import gpg\" \\\n    && groupadd wheel \\\n    && useradd -M -N -u 1001 -s /bin/bash -g 0 -G wheel user \\\n    && echo '%wheel   ALL=(ALL) NOPASSWD: ALL' > /etc/sudoers.d/wheel \\\n    && chmod 0440 /etc/sudoers.d/wheel \\\n    && chown -R 1001:0 /opt/app-root\n\nCOPY build/tex /tmp/tex\n\n# install texlive basic\nRUN set -ex \\\n    && cd /tmp/tex \\\n    && wget -q https://ftp.math.utah.edu/pub/tex/historic/systems/texlive/2020/tlnet-final/install-tl-unx.tar.gz \\\n    && mkdir install-tl \\\n    && tar -xzf install-tl-unx.tar.gz -C install-tl --strip=1 \\\n    && install-tl/install-tl -no-gui -profile /tmp/tex/texlive.profile -repository=http://ftp.math.utah.edu/pub/tex/historic/systems/texlive/2020/tlnet-final \\\n    && mkdir -p /opt/app-root/texmf \\\n    && chown 1001:0 /opt/app-root/texmf \\\n    && su user -c \"tlmgr init-usertree\" \\\n    && rm -r /tmp/tex && rm install-tl-unx.tar.gz\n\nCOPY . /tmp/build\nRUN set -ex \\\n    && tlmgr --usermode install $(cat /tmp/build/packages.tex) --repository=http://ftp.math.utah.edu/pub/tex/historic/systems/texlive/2020/tlnet-final \\\n    && /opt/app-root/bin/pip install --no-cache-dir wheel \\\n    && /opt/app-root/bin/pip install --no-cache-dir -r /tmp/build/requirements.txt -r /tmp/build/requirements-test.txt \\\n    && /opt/app-root/bin/pip install --no-cache-dir '/tmp/build/.[all]' \\\n    && rm -rf /tmp/build \\\n    && chown -R 1001:0 /opt/app-root\n\nUSER 1001\n\nCMD /opt/app-root/bin/solararbiter\n"
}