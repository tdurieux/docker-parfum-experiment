diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/nvidia-ai-iot/redtail/tools/simulation/docker/Dockerfile.kinetic b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/nvidia-ai-iot/redtail/tools/simulation/docker/Dockerfile.kinetic/repaired.Dockerfile
index bfe197a..bcbe28d 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/nvidia-ai-iot/redtail/tools/simulation/docker/Dockerfile.kinetic
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/nvidia-ai-iot/redtail/tools/simulation/docker/Dockerfile.kinetic/repaired.Dockerfile
@@ -12,7 +12,7 @@ ARG TENSORRT_TAR_FILE
 
 WORKDIR ${HOME}
 
-RUN apt-get update && apt-get -y  --no-install-recommends install software-properties-common
+RUN apt-get update && apt-get -y  --no-install-recommends install software-properties-common && rm -rf /var/lib/apt/lists/*;
 
 # cuDNN version must match the one used by TensorRT.
 # TRT 4.0 is compiled with cuDNN 7.1.
@@ -60,51 +60,51 @@ RUN apt-get update && apt-get -y --no-install-recommends install \
         zip \
     && apt-get -y autoremove \
     && apt-get clean autoclean \
-    # pip
-    && pip install pip --upgrade \
-    && pip install 'setuptools<4.3' wheel \
-    && pip install 'matplotlib==2.2.2' --force-reinstall \
+    # pip \
+    && pip install --no-cache-dir pip --upgrade \
+    && pip install --no-cache-dir 'setuptools<4.3' wheel \
+    && pip install --no-cache-dir 'matplotlib==2.2.2' --force-reinstall \
     # coveralls code coverage reporting
-    && pip install cpp-coveralls \
+    && pip install --no-cache-dir cpp-coveralls \
     # jinja template generation
-    && pip install jinja2 \
+    && pip install --no-cache-dir jinja2 \
     # cleanup
     && rm -rf /var/lib/apt/lists/{apt,dpkg,cache,log} /tmp/* /var/tmp/* \
     # Add Fast-RTPS
-    && cd /opt && curl https://www.eprosima.com/index.php/component/ars/repository/eprosima-fast-dds/eprosima-fast-rtps-1-5-0/eprosima_fastrtps-1-5-0-linux-tar-gz?format=raw | tar xz eProsima_FastRTPS-1.5.0-Linux/share/fastrtps/fastrtpsgen.jar eProsima_FastRTPS-1.5.0-Linux/bin/fastrtpsgen \
+    && cd /opt && curl -f https://www.eprosima.com/index.php/component/ars/repository/eprosima-fast-dds/eprosima-fast-rtps-1-5-0/eprosima_fastrtps-1-5-0-linux-tar-gz?format=raw | tar xz eProsima_FastRTPS-1.5.0-Linux/share/fastrtps/fastrtpsgen.jar eProsima_FastRTPS-1.5.0-Linux/bin/fastrtpsgen \
     && ln -s /opt/eProsima_FastRTPS-1.5.0-Linux/bin/fastrtpsgen /usr/local/bin/fastrtpsgen \
-    && mkdir -p /usr/local/share/fastrtps && ln -s /opt/eProsima_FastRTPS-1.5.0-Linux/share/fastrtps/fastrtpsgen.jar /usr/local/share/fastrtps/fastrtpsgen.jar
+    && mkdir -p /usr/local/share/fastrtps && ln -s /opt/eProsima_FastRTPS-1.5.0-Linux/share/fastrtps/fastrtpsgen.jar /usr/local/share/fastrtps/fastrtpsgen.jar && rm -rf /var/lib/apt/lists/*;
 
 # GStreamer
 RUN apt-get -y --no-install-recommends install \
-    gstreamer1.0-plugins-base        \
-    gstreamer1.0-plugins-bad         \
-    gstreamer1.0-plugins-ugly        \
-    gstreamer1.0-plugins-base-apps   \
-    gstreamer1.0-plugins-good        \
-    gstreamer1.0-tools               \
-    libgstreamer1.0-dev              \
+    gstreamer1.0-plugins-base \
+    gstreamer1.0-plugins-bad \
+    gstreamer1.0-plugins-ugly \
+    gstreamer1.0-plugins-base-apps \
+    gstreamer1.0-plugins-good \
+    gstreamer1.0-tools \
+    libgstreamer1.0-dev \
     libgstreamer-plugins-base1.0-dev \
     libgstreamer-plugins-good1.0-dev \
-    libyaml-cpp-dev                  \
-    v4l-utils
+    libyaml-cpp-dev \
+    v4l-utils && rm -rf /var/lib/apt/lists/*;
 
 # Gazebo
 WORKDIR ${HOME}
-RUN wget --quiet http://packages.osrfoundation.org/gazebo.key -O - | apt-key add - \
+RUN wget --quiet https://packages.osrfoundation.org/gazebo.key -O - | apt-key add - \
     && sh -c 'echo "deb http://packages.osrfoundation.org/gazebo/ubuntu-stable xenial main" > /etc/apt/sources.list.d/gazebo-stable.list' \
     && apt-get update && apt-get -y --no-install-recommends install \
         gazebo7         \
-        libgazebo7-dev  \
+        libgazebo7-dev \
     # px4tools
-    && pip install px4tools \
+    && pip install --no-cache-dir px4tools \
     # dronekit latest
-    && git clone https://github.com/dronekit/dronekit-python.git                         \
-    && (cd dronekit-python && pip install -r requirements.txt) && rm -rf dronekit-python \
+    && git clone https://github.com/dronekit/dronekit-python.git \
+    && ( cd dronekit-python && pip install --no-cache-dir -r requirements.txt) && rm -rf dronekit-python \
     # pymavlink latest
-    && git clone https://github.com/ArduPilot/pymavlink.git && cd pymavlink                             \
-    && git clone git://github.com/mavlink/mavlink.git && ln -s ${PWD}/mavlink/message_definitions ../   \
-    && pip install . && cd .. && rm -rf pymavlink && rm -rf message_definitions
+    && git clone https://github.com/ArduPilot/pymavlink.git && cd pymavlink \
+    && git clone git://github.com/mavlink/mavlink.git && ln -s ${PWD}/mavlink/message_definitions ../ \
+    && pip install --no-cache-dir . && cd .. && rm -rf pymavlink && rm -rf message_definitions && rm -rf /var/lib/apt/lists/*;
 
 # PX4 firmware
 WORKDIR ${HOME}
@@ -125,8 +125,8 @@ RUN apt-key adv --keyserver 'hkp://keyserver.ubuntu.com:80' --recv-key C1CF6E31E
         ros-kinetic-joy             \
         ros-kinetic-rviz            \
     && apt-get -y autoremove        \
-    && apt-get clean autoclean      \
-    && rm -rf /var/lib/apt/lists/{apt,dpkg,cache,log} /tmp/* /var/tmp/*
+    && apt-get clean autoclean \
+    && rm -rf /var/lib/apt/lists/{apt,dpkg,cache,log} /tmp/* /var/tmp/* && rm -rf /var/lib/apt/lists/*;
 
 # Initialize ROS
 RUN geographiclib-get-geoids egm96-5 \