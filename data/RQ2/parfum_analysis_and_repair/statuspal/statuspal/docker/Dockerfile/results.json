{
  "startTime": 1674218021715,
  "endTime": 1674218022426,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 5,
        "columnEnd": 9
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 27,
        "columnEnd": 43
      }
    }
  ],
  "repairedDockerfile": "####   Build Image\n\nFROM elixir:alpine\n\nENV MIX_ENV prod\n\nRUN apk add --no-cache nodejs nodejs-npm yarn bash git openssh alpine-sdk python2\n\nRUN mkdir /build\nWORKDIR /build\n\n# mix deps\nCOPY ./mix.* ./\nCOPY ./apps/statushq/mix.* ./apps/statushq/\nRUN echo \"Compiling app...\"\\\n  && mix do local.hex --force, local.rebar --force, deps.get, compile\n\n# Install npm modules\nCOPY ./package.json ./package.json\nCOPY ./yarn.lock ./yarn.lock\nCOPY ./.babelrc ./.babelrc\nCOPY ./apps/statushq/webpack*.js ./apps/statushq/\nCOPY ./apps/statushq/lib/statushq_web/static ./apps/statushq/lib/statushq_web/static\n\n# Building static assets\nRUN mkdir -p apps/statushq/priv/static\\\n  && yarn \\\n  && npm run prod:build && yarn cache clean;\n\nCOPY . ./\nRUN rm -rf ./apps/statushq_pro\n\nRUN mix do phx.digest, release --no-tar --env=prod\n\n####   Runtime Image\n\nFROM alpine:latest\n\nLABEL maintainer=\"Eduardo Messuti <messuti.edd@gmail.com>\"\\\n  description=\"Statushq CE\"\n\nENV REPLACE_OS_VARS true\nENV MIX_ENV prod\n\nRUN apk --no-cache add postgresql-client bash openssl-dev imagemagick\nWORKDIR /statushq\nCOPY --from=0 /build/rel ./rel\nCOPY --from=0 /build/docker ./docker\n\nCMD [\"/statushq/docker/up.sh\"]\n"
}