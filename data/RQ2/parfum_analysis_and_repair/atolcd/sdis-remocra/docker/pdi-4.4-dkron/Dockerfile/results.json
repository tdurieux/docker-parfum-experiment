{
  "startTime": 1674251142841,
  "endTime": 1674251143751,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 18
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM openjdk:7-jdk-alpine\n\nLABEL maintainer=\"ATOL Conseils & Développements\"\n\n# Trick copy or download (Docker must exists). Pattern :\n# COPY Dockerfile <resource>* <dest>/\n# RUN ([ -f <dest>/<resource> ] || wget -P <dest> -q <>/<resource-part-url><resource>) && rm -f Dockerfile\n\n# ---------------\n# Non root user\n# ---------------\nARG UID=1000\nARG GID=1000\nRUN addgroup -g ${GID} -S pdi && \\\n    adduser -u ${UID} -S pdi -G pdi\n\nCOPY scripts/* /scripts/\n\n#Variable d'environnement tz\nRUN apk add --no-cache tzdata\n\n# ---------------\n# Pentaho Data Integration\n# ---------------\n\n# ENV\nENV LANG                        fr_FR.UTF-8\nENV ENCODING                    UTF-8\nENV TZ                          Europe/Paris\n\nENV KETTLE_HOME                 /home/pdi\nENV PENTAHO_METASTORE_FOLDER    ${KETTLE_HOME}/.pentaho/metastore\nENV KETTLE_JNDI_ROOT            ${KETTLE_HOME}/simple-jndi\n\nENV \\\n    PDI_INITIAL_MEMORY=\"1G\" \\\n    PDI_MAXIMUM_MEMORY=\"2G\" \\\n    PDI_MAXIMUM_PERMSIZE=\"256m\"\n\nWORKDIR ${KETTLE_HOME}\n\n# PDI\nCOPY Dockerfile ext/pdi-ce-4.4.0-stable.zip* ${KETTLE_HOME}/\nRUN set -x \\\n  && ([ -f ${KETTLE_HOME}/pdi-ce-4.4.0-stable.zip ] \\\n    || wget -P ${KETTLE_HOME} -q https://sourceforge.net/projects/pentaho/files/Data%20Integration/4.4.0-stable/pdi-ce-4.4.0-stable.zip) \\\n  && unzip -qo ${KETTLE_HOME}/pdi-ce-4.4.0-stable.zip -d ${KETTLE_HOME} \\\n  && mv ${KETTLE_HOME}/data-integration/* ${KETTLE_HOME} \\\n  && rmdir ${KETTLE_HOME}/data-integration \\\n  && rm -f ${KETTLE_HOME}/pdi-ce-4.4.0-stable.zip \\\n  && chmod +x ${KETTLE_HOME}/*.sh \\\n  && sed -i \"s/-cp \\$CLASSPATH/-cp \\$CLASSPATH -Dfile\\.encoding=utf8/g\" ${KETTLE_HOME}/kitchen.sh \\\n  && rm -f Dockerfile # cleaning\n\n# Dépendances PDI 4.4\nCOPY Dockerfile ext/pentaho-4.4-remocra-deps.zip* ${KETTLE_HOME}/\nRUN set -x \\\n  && ([ -f ${KETTLE_HOME}/pentaho-4.4-remocra-deps.zip ] \\\n    || wget -P ${KETTLE_HOME} -q https://github.com/atolcd/sdis-remocra/releases/download/pentaho-4.4-remocra-deps-4da0f/pentaho-4.4-remocra-deps.zip) \\\n  && unzip ${KETTLE_HOME}/pentaho-4.4-remocra-deps.zip -d ${KETTLE_HOME} \\\n  && rm -f ${KETTLE_HOME}/pentaho-4.4-remocra-deps.zip \\\n  && rm -f Dockerfile # cleaning\n\n\n# Mise à jour de JDBC driver\nRUN rm -f ${KETTLE_HOME}/libext/JDBC/postgresql-*\nCOPY Dockerfile ext/postgresql-42.2.10.jre7.jar* ${KETTLE_HOME}/libext/JDBC/\nRUN set -x \\\n  && ([ -f ${KETTLE_HOME}/libext/JDBC/postgresql-42.2.10.jre7.jar ] \\\n    || wget -P ${KETTLE_HOME}/libext/JDBC -q https://jdbc.postgresql.org/download/postgresql-42.2.10.jre7.jar) \\\n  && rm -f Dockerfile # cleaning\n\n# MySql\nCOPY Dockerfile ext/mysql-connector-java-5.1.49.jar* ext/mysql-connector-java-5.1.49.jar* ${KETTLE_HOME}/lib/\nRUN set -x \\\n  && ([ -f ${KETTLE_HOME}/lib/mysql-connector-java-5.1.49.jar ] \\\n    || wget -P ${KETTLE_HOME}/lib -q https://raw.githubusercontent.com/atolcd/sdis-remocra/master/server/sdis-remocra/home/postgres/pdi/libext/JDBC/mysql-connector-java-5.1.49.jar) \\\n  && rm -f Dockerfile # cleaning\n\nENV PATH ${KETTLE_HOME}/kitchen.sh:$PATH\n\n# Pour exécution standalone\n#ENTRYPOINT [\"/scripts/entrypoint-pdi.sh\"]\n\n\n# ---------------\n# Planification\n# https://hub.docker.com/r/dkron/dkron/dockerfile\n# Deux adaptations :\n# - récupération du tar.gz en amont ou téléchargement\n# - exécution non root\n# ---------------\n\nENV DKRON_VERSION 2.1.1\nENV DKRON_HOME /dkron\n\nRUN set -x \\\n  && buildDeps='bash ca-certificates openssl curl gettext' \\\n  && apk add --update $buildDeps \\\n  && rm -rf /var/cache/apk/*\n\nCOPY Dockerfile ext/dkron_${DKRON_VERSION}_linux_amd64.tar.gz* ${DKRON_HOME}/\nRUN set -x \\\n  && ([ -f ${DKRON_HOME}/dkron_${DKRON_VERSION}_linux_amd64.tar.gz ] \\\n    || wget -P ${DKRON_HOME} -q https://github.com/distribworks/dkron/releases/download/v${DKRON_VERSION}/dkron_${DKRON_VERSION}_linux_amd64.tar.gz) \\\n  && cd ${DKRON_HOME} \\\n  && tar -xzf dkron_${DKRON_VERSION}_linux_amd64.tar.gz \\\n  && rm ${DKRON_HOME}/dkron_${DKRON_VERSION}_linux_amd64.tar.gz \\\n  && rm -f Dockerfile # cleaning\n\n\n# Droits\nRUN mkdir -p ${KETTLE_HOME}/.kettle \\\n  && mkdir -p /var/remocra/pdi/log \\\n  && chown -R pdi:pdi /var/remocra \\\n  && chown -R pdi:pdi /scripts \\\n  && chown -R pdi:pdi ${KETTLE_HOME} \\\n  && chown -R pdi:pdi ${DKRON_HOME}\n\nUSER pdi\n\nVOLUME /var/remocra \\\n  ${KETTLE_HOME}/.kettle/kettle.properties ${KETTLE_HOME}/remocra.properties ${KETTLE_HOME}/.kettle/repositories.xml \\\n  ${DKRON_HOME}/dkron.data\n\nENV SHELL /bin/bash\nWORKDIR ${DKRON_HOME}\nENTRYPOINT [\"/scripts/entrypoint.sh\"]\n"
}