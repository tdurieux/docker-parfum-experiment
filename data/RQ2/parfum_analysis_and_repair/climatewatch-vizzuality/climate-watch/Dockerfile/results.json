{
  "startTime": 1674249594415,
  "endTime": 1674249595186,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 54,
        "lineEnd": 55,
        "columnStart": 5,
        "columnEnd": 82
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ruby:2.6.10\nMAINTAINER info@vizzuality.com\n\nENV NAME climate-watch\n\n# Set application environment\n\n# args from command execution\nARG RAILS_ENV\nENV RAILS_ENV $RAILS_ENV\n\nARG CW_FILES_PREFIX\nENV CW_FILES_PREFIX $CW_FILES_PREFIX\n\nENV RACK_ENV $RAILS_ENV\nENV NODE_ENV $RAILS_ENV\n\nENV ESP_API https://data.emissionspathways.org/api/v1\nENV CW_API /api/v1\nENV GFW_API https://production-api.globalforestwatch.org\nENV S3_BUCKET_NAME wri-sites\n\nENV GOOGLE_ANALYTICS_ID UA-1981881-51\n\nARG FEATURE_POP_UP\nENV FEATURE_POP_UP $FEATURE_POP_UP\n\nARG FEATURE_COUNTRY_CHANGES\nENV FEATURE_COUNTRY_CHANGES $FEATURE_COUNTRY_CHANGES\n\nARG FEATURE_SHOW_COUNTRY_LAWS_AND_POLICIES\nENV FEATURE_SHOW_COUNTRY_LAWS_AND_POLICIES $FEATURE_SHOW_COUNTRY_LAWS_AND_POLICIES\n\nARG FEATURE_SHOW_LTS_SUMMARY\nENV FEATURE_SHOW_LTS_SUMMARY $FEATURE_SHOW_LTS_SUMMARY\n\nARG FEATURE_WEB_TOUR\nENV FEATURE_WEB_TOUR $FEATURE_WEB_TOUR\n\nARG FEATURE_DYNAMIC_ZIP\nENV FEATURE_DYNAMIC_ZIP $FEATURE_DYNAMIC_ZIP\n\nARG POP_UP\nENV POP_UP $POP_UP\n\nARG FEATURE_KEY_VISUALIZATIONS\nENV FEATURE_KEY_VISUALIZATIONS $FEATURE_KEY_VISUALIZATIONS\n\nARG USER_REPORT_KEY\nENV USER_REPORT_KEY $USER_REPORT_KEY\n\n# Install dependencies\nRUN curl -f -sL https://deb.nodesource.com/setup_12.x | bash -\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends \\\n  postgresql-client nodejs build-essential patch zlib1g-dev liblzma-dev libicu-dev && rm -rf /var/lib/apt/lists/*;\nRUN npm install -g yarn && npm cache clean --force;\n\n# Create app directory\nRUN mkdir -p /usr/src/$NAME && rm -rf /usr/src/\nWORKDIR /usr/src/$NAME\n\n# Install app dependencies\nCOPY Gemfile Gemfile.lock ./\n\nRUN cd /usr/src/$NAME && bundle install --without development test --jobs 4 --deployment\n\n# Yarn install\nCOPY package.json package.json\nCOPY yarn.lock yarn.lock\nRUN yarn install && yarn cache clean;\n\n# Env variables\nARG secretKey\nENV SECRET_KEY_BASE $secretKey\n\nARG APPSIGNAL_PUSH_API_KEY\nENV APPSIGNAL_PUSH_API_KEY $APPSIGNAL_PUSH_API_KEY\n\nARG USER_SURVEY_SPREADSHEET_URL\nENV USER_SURVEY_SPREADSHEET_URL $USER_SURVEY_SPREADSHEET_URL\n\nARG USER_NEWSLETTER_URL\nENV USER_NEWSLETTER_URL $USER_NEWSLETTER_URL\n\nARG MAXMIND_LICENSE_KEY\nENV MAXMIND_LICENSE_KEY $MAXMIND_LICENSE_KEY\n\n# Bundle app source\nCOPY . ./\n\nEXPOSE 3000\n\n# Download maxmind IP db\nRUN bundle exec rails db:import_maxmind\n\n# Rails assets compile\nRUN bundle exec rake assets:precompile\n\n# Start app\nENTRYPOINT [\"./entrypoint.sh\"]\n"
}