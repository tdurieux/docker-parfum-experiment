{
  "startTime": 1674255804455,
  "endTime": 1674255805770,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# ---- Base Node ----\nFROM node:14-alpine as base\nENV GIT_SSH_COMMAND \"ssh -i ~/.ssh/id_ecdsa -o BatchMode=yes -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no\"\n\nRUN apk update && apk upgrade && \\\n    apk add --no-cache bash git openssh graphviz\n\nWORKDIR /app\n\n#COPY package-lock.json .\n# Uncomment when the package.json contains dependencies fetched through private git repository.\n#COPY git_private_key /tmp/git_private_key\n#RUN mkdir -p /root/.ssh/ && \\\n#    chmod 0700 ~/.ssh && \\\n#    mv /tmp/git_private_key ~/.ssh/iid_rsa && \\\n#    chmod 0600 ~/.ssh/id_rsa\n\n# copy project file\nCOPY package.json .\n\n#\n# ---- Dependencies ----\nFROM base AS dependencies\n# install production node packages\nRUN npm set progress=false && npm config set depth 0\nRUN npm install --only=production && npm cache clean --force;\n# copy production node_modules aside\nRUN cp -R node_modules prod_node_modules\n# install ALL node_modules, including 'devDependencies'\nRUN npm install && npm cache clean --force;\nCOPY . .\n#RUN npm run build\n#\n# ---- Test ----\n# run linters, setup and tests\n#FROM dependencies AS test\n#RUN npm run setup && npm test\n\n#\n# ---- Release ----\nFROM base AS release\n# copy production node_modules\nCOPY --from=dependencies /app/prod_node_modules ./node_modules\n# copy app sources\nCOPY src .\n\nRUN  mkdir /root/.aws && touch /root/.aws/credentials && touch /root/.aws/config\nENTRYPOINT [\"./node_modules/.bin/gc\"]\n\n"
}