{
  "startTime": 1674256324517,
  "endTime": 1674256325278,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 7,
        "columnEnd": 48
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 83,
        "lineEnd": 83,
        "columnStart": 7,
        "columnEnd": 114
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 7,
        "columnEnd": 76
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 48,
        "lineEnd": 64,
        "columnStart": 7,
        "columnEnd": 19
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Dockerfile for building a base image with an ETA environment atop a\n# Debian, Ubuntu, or related Linux distribution.\n#\n# ARGs:\n#   BASE_IMAGE\n#   TENSORFLOW_VERSION\n#\n# TensorFlow version notes:\n#   - For CPU-only images, use tensorflow~=1.15\n#   - For GPU-enabled images, use the TensorFlow version compatible with the\n#     CUDA version you are using:\n#       - CUDA 8: tensorflow-gpu~=1.4\n#       - CUDA 9: tensorflow-gpu~=1.12\n#       - CUDA 10: tensorflow-gpu~=1.15\n#\n# Copyright 2017-2022, Voxel51, Inc.\n# voxel51.com\n#\n\n#\n# The base image to build from, which must be a Debian, Ubuntu, or related\n# Linux distribution\n#\n\nARG BASE_IMAGE\nFROM $BASE_IMAGE\n\n#\n# Install ETA\n#\n# Notes:\n#   ETA supports Python 2.7.X or Python 3.6.X\n#\n# `ppa:deadsnakes/ppa` is used in order to install Python 3.6 on Ubuntu 16.04\n# https://askubuntu.com/questions/865554/how-do-i-install-python-3-6-using-apt-get\n#\n# `https://bootstrap.pypa.io/get-pip.py` is used to install pip on Python 3.6\n# https://askubuntu.com/questions/889535/how-to-install-pip-for-python-3-6-on-ubuntu-16-10\n#\n# numpy==1.16.0 is enforced as a last step because tensorflow requires this\n# version to function properly, and some commands here seem to mess with the\n# numpy version installed via the `requirements.txt` file\n#\n\nRUN apt-get update \\\n    && apt-get -y --no-install-recommends install software-properties-common \\\n    && add-apt-repository -y ppa:deadsnakes/ppa \\\n    && apt-get update \\\n    && apt-get -y --no-install-recommends install \\\n        sudo \\\n        build-essential \\\n        pkg-config \\\n        ca-certificates \\\n        cmake \\\n        cmake-data \\\n        unzip \\\n        pciutils \\\n        git \\\n        curl \\\n        wget \\\n        python3.6 \\\n        python3.6-dev \\\n        libcupti-dev \\\n        ffmpeg \\\n        imagemagick \\\n    && ln -s /usr/bin/python3.6 /usr/local/bin/python \\\n    && curl -f https://bootstrap.pypa.io/get-pip.py | python && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /usr/src/app\nCOPY . eta/\n\nARG TENSORFLOW_VERSION\nRUN pip --no-cache-dir  install --upgrade pip setuptools \\\n    && pip --no-cache-dir install -r eta/requirements/common.txt \\\n    && pip --no-cache-dir install -r eta/requirements/pipeline.txt \\\n    && pip --no-cache-dir install -r eta/requirements/storage.txt \\\n    && pip --no-cache-dir install --upgrade setuptools \\\n    && pip --no-cache-dir install -e eta/. \\\n    && pip --no-cache-dir install -I $TENSORFLOW_VERSION \\\n    && pip --no-cache-dir install --upgrade numpy==1.16.0 \\\n    && pip --no-cache-dir install -e eta/eta/tensorflow/darkflow/. \\\n    && pip --no-cache-dir install pycocotools \\\n    && pip --no-cache-dir install protobuf \\\n    && curl -f -OL https://github.com/protocolbuffers/protobuf/releases/download/v3.6.1/protoc-3.6.1-linux-x86_64.zip \\\n    && unzip protoc-3.6.1-linux-x86_64.zip -d protoc3 \\\n    && rm -rf protoc-3.6.1-linux-x86_64.zip \\\n    && mv protoc3/bin/* /usr/local/bin \\\n    && mv protoc3/include/* /usr/local/include \\\n    && rm -rf protoc3 \\\n    && cd eta/eta/tensorflow/models \\\n    && protoc research/object_detection/protos/*.proto \\\n        --proto_path=research \\\n        --python_out=research \\\n    && rm -rf /var/lib/apt\n"
}