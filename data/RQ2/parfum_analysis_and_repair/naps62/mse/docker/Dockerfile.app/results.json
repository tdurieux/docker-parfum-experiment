{
  "startTime": 1674253996418,
  "endTime": 1674253999812,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 28,
        "columnEnd": 40
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 79,
        "lineEnd": 79,
        "columnStart": 24,
        "columnEnd": 36
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# base\n#\nFROM bitwalker/alpine-elixir-phoenix:1.4.2 as base\n\nENV \\\n    HOME=/opt/app/ \\\n    TERM=xterm \\\n    MIX_ENV=prod \\\n    REPLACE_OS_VARS=true \\\n    SHELL=/bin/sh\n\nWORKDIR /opt/app\n\n#\n# build\n#\nFROM base as builder\n\n#\n# unfortunately, python is needed to run node-sass\nRUN \\\n    echo \"@edge http://nl.alpinelinux.org/alpine/edge/community\" >> /etc/apk/repositories && \\\n    apk update && \\\n    apk --no-cache --update add python && \\\n    rm -rf /var/cache/apk/*\n\nRUN npm install -g yarn && npm cache clean --force;\n\nRUN mkdir -p \\\n    config \\\n    apps/db/config \\\n    apps/gatherer/config \\\n    apps/graph/config \\\n    apps/mkm_api/config \\\n    apps/admin/config \\\n    apps/mse_logging/config \\\n    apps/proxy/config \\\n    apps/mse_web/config \\\n    apps/mtgjson/config \\\n    apps/workers/config\n\n# Cache elixir deps\nCOPY mix.exs mix.lock         ./\nCOPY apps/db/mix.exs          apps/db/\nCOPY apps/gatherer/mix.exs    apps/gatherer/\nCOPY apps/graph/mix.exs       apps/graph/\nCOPY apps/mkm_api/mix.exs     apps/mkm_api/\nCOPY apps/admin/mix.exs       apps/admin/\nCOPY apps/mse_logging/mix.exs apps/mse_logging/\nCOPY apps/proxy/mix.exs       apps/proxy/\nCOPY apps/mse_web/mix.exs     apps/mse_web/\nCOPY apps/mtgjson/mix.exs     apps/mtgjson/\nCOPY apps/workers/mix.exs     apps/workers/\nRUN mix deps.get\n\n# Cache elixir deps compilation\nCOPY apps/db/config/*          apps/db/config/\nCOPY apps/gatherer/config/*    apps/gatherer/config/\nCOPY apps/graph/config/*       apps/graph/config/\nCOPY apps/mkm_api/config/*     apps/mkm_api/config/\nCOPY apps/admin/config/*       apps/admin/config/\nCOPY apps/mse_logging/config/* apps/mse_logging/config/\nCOPY apps/mse_web/config/*     apps/mse_web/config/\nCOPY apps/proxy/config/*       apps/proxy/config/\nCOPY apps/mtgjson/config/*     apps/mtgjson/config/\nCOPY apps/workers/config/*     apps/workers/config/\nCOPY config/* config/\nRUN mix deps.compile\n\n# Compile admin app assets\nCOPY apps/admin apps/admin\nRUN cd apps/admin/assets && yarn install && yarn cache clean;\nRUN cd apps/admin/assets && ./node_modules/.bin/brunch build --production\nRUN cd apps/admin && mix phx.digest\n\n# Cache yarn packages\nCOPY apps/frontend/package.json apps/frontend/\nCOPY apps/frontend/yarn.lock apps/frontend/\nRUN cd apps/frontend && yarn install && yarn cache clean;\n\n# Compile frontend app assets\nCOPY apps/frontend apps/frontend\nCOPY apps/mse_web apps/mse_web\nRUN cd apps/frontend && ./node_modules/.bin/brunch build --production\nRUN cd apps/mse_web  &&  mix phx.digest\n\nCOPY rel rel\nCOPY apps apps\n\nRUN mix release --env=prod\n\n#\n# RELEASE\n#\nFROM base as release\n\nCOPY --from=builder /opt/app/_build/prod/rel/mse ./\n\nENTRYPOINT [\"/opt/app/bin/mse\"]\n"
}