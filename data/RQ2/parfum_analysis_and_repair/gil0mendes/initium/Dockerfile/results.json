{
  "startTime": 1674254213398,
  "endTime": 1674254214404,
  "originalSmells": [
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 7,
        "columnEnd": 102
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 7,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 11,
        "columnStart": 22,
        "columnEnd": 11
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 23,
        "columnStart": 22,
        "columnEnd": 12
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 23,
        "columnStart": 22,
        "columnEnd": 12
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian AS base\n\nENV PKGDIR /pkg\nENV RUSTUP_HOME=/usr/local/rustup \\\n    CARGO_HOME=/usr/local/cargo\n\n# Install global tools\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    curl \\\n    file \\\n    make \\\n    python3 \\\n    && rm -rf /var/lib/apt/lists/*\n\nFROM base AS build\nENV BINUTILS_VERSION=2.36 \\\n    PARALLEL_MAKE=-j4\n\n# Install needed dependencies to build binutils\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    bzip2 \\\n    file \\\n    gcc \\\n    musl-dev && rm -rf /var/lib/apt/lists/*;\n\n# Download an unpack binutils source code\nWORKDIR /src\nRUN set -x \\\n    && curl -fsSLO --compressed \"https://ftpmirror.gnu.org/binutils/binutils-$BINUTILS_VERSION.tar.bz2\" \\\n    && tar -xjf binutils-$BINUTILS_VERSION.tar.bz2 && rm binutils-$BINUTILS_VERSION.tar.bz2\n\n# Build binutils\nWORKDIR /build\nRUN /src/binutils-$BINUTILS_VERSION/configure --silent \\\n    --disable-multilib \\\n    # Disables internationalization as i18n is not needed for the cross-compile tools\n    --disable-nls \\\n    # Adds 64 bit support and UEFI\n    --enable-64-bit-bfd \\\n    --enable-targets=i386-efi-pe,x86_64-efi-pe \\\n    && make --silent $PARALLEL_MAKE \\\n    && make --silent DESTDIR=\"$PKGDIR\" install\n\nFROM base\nENV PATH=/usr/local/cargo/bin:$PATH\n\nCOPY --from=build \"$PKGDIR\"/usr/local /usr/local\n\n# Install Rust\nRUN set -eux; \\\n    curl -fsSLO --compressed \"https://static.rust-lang.org/rustup/dist/x86_64-unknown-linux-gnu/rustup-init\"; \\\n    chmod +x rustup-init; \\\n    ./rustup-init -y --no-modify-path --default-toolchain nightly; \\\n    rm rustup-init; \\\n    chmod -R a+w $RUSTUP_HOME $CARGO_HOME; \\\n    rustup component add rust-src; \\\n    rustup --version; \\\n    cargo --version; \\ \n    rustc --version;\n\nWORKDIR /code\nCMD [\"/bin/bash\"]\n"
}