{
  "startTime": 1674215067345,
  "endTime": 1674215068373,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 7,
        "columnEnd": 93
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 7,
        "columnEnd": 155
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 84,
        "lineEnd": 84,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 110,
        "lineEnd": 110,
        "columnStart": 7,
        "columnEnd": 78
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 119,
        "lineEnd": 119,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 119,
        "lineEnd": 119,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 7,
        "columnEnd": 41
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 7,
        "columnEnd": 25
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 7,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 24,
        "lineEnd": 41,
        "columnStart": 7,
        "columnEnd": 20
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 7,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 100,
        "lineEnd": 100,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 122,
        "lineEnd": 122,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 100,
        "lineEnd": 100,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 122,
        "lineEnd": 122,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 7,
        "columnEnd": 71
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 24,
        "lineEnd": 41,
        "columnStart": 7,
        "columnEnd": 20
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 7,
        "columnEnd": 39
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 100,
        "lineEnd": 100,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 122,
        "lineEnd": 122,
        "columnStart": 4,
        "columnEnd": 50
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 100,
        "lineEnd": 100,
        "columnStart": 4,
        "columnEnd": 54
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 122,
        "lineEnd": 122,
        "columnStart": 4,
        "columnEnd": 74
      }
    }
  ],
  "repairedDockerfile": "#-------------------------------------------------------------------------------------------------------------\n# Copyright (c) Microsoft Corporation. All rights reserved.\n# Licensed under the MIT License. See https://go.microsoft.com/fwlink/?linkid=2090316 for license information.\n#-------------------------------------------------------------------------------------------------------------\n\n# Pick any base image, but if you select node, skip installing node. ðŸ˜Š\nFROM debian:11\n\n# Avoid warnings by switching to noninteractive\nENV DEBIAN_FRONTEND=noninteractive\n\n# This Dockerfile adds a non-root user with sudo access. Use the \"remoteUser\"\n# property in devcontainer.json to use it. On Linux, the container user's GID/UIDs\n# will be updated to match your local UID/GID (when using the dockerFile property).\n# See https://aka.ms/vscode-remote/containers/non-root-user for details.\nARG USERNAME=vscode\nARG USER_UID=1000\nARG USER_GID=1000\n\n# Configure apt and install packages\nRUN apt-get update \\\n    && apt-get -y install --no-install-recommends apt-utils dialog 2>&1 \\\n    #\n    # install git iproute2, required tools installed \\\n    && apt-get install --no-install-recommends -y \\\n    bash-completion \\\n    git \\\n    openssh-client \\\n    less \\\n    curl \\\n    fd-find \\\n    procps \\\n    unzip \\\n    apt-transport-https \\\n    ca-certificates \\\n    gnupg-agent \\\n    software-properties-common \\\n    python3-pip \\\n    graphviz \\\n    jq \\\n    vim \\\n    lsb-release 2>&1 && rm -rf /var/lib/apt/lists/*;\n    #\n    # [Optional] For local testing instead of cloud shell\n    # Install Docker CE CLI.\nRUN curl -fsSL https://download.docker.com/linux/$(lsb_release -is | tr '[:upper:]' '[:lower:]')/gpg | apt-key add - 2>/dev/null \\\n    && add-apt-repository \"deb [arch=$(dpkg --print-architecture)] https://download.docker.com/linux/$(lsb_release -is | tr '[:upper:]' '[:lower:]') $(lsb_release -cs) stable\" \\\n    && apt-get update \\\n    && apt-get install --no-install-recommends -y docker-ce-cli && rm -rf /var/lib/apt/lists/*;\n    #\n    # Install the AWS CLI tools\n    #\nRUN mkdir -p /tmp/aws \\\n    && cd /tmp/aws \\\n    && curl -f \"https://awscli.amazonaws.com/awscli-exe-linux-$(uname -m).zip\" -o \"awscliv2.zip\" \\\n    && unzip awscliv2.zip \\\n    && ./aws/install \\\n    && pip3 install --no-cache-dir git-remote-codecommit \\\n    && pip3 install --no-cache-dir boto3 \\\n    # Support `cidr.py`\n    && pip3 install --no-cache-dir tabulate \\\n    # Session manager plugin for SSHing etc\n    # Determine the correct plugin for the CPU architecture https://docs.aws.amazon.com/systems-manager/latest/userguide/session-manager-working-with-install-plugin.html#install-plugin-debian\n    && [ \"$(dpkg --print-architecture)\" = \"arm64\" ] && arch=\"arm64\" || arch=\"64bit\" \\\n    && curl -f \"https://s3.amazonaws.com/session-manager-downloads/plugin/latest/ubuntu_$arch/session-manager-plugin.deb\" -o \"/tmp/session-manager-plugin.deb\" \\\n    && dpkg -i /tmp/session-manager-plugin.deb\n    # Create a non-root user to use if preferred - see https://aka.ms/vscode-remote/containers/non-root-user.\n    #\nRUN groupadd --gid $USER_GID $USERNAME \\\n    && useradd -s /bin/bash --uid $USER_UID --gid $USER_GID -m $USERNAME\n    #\n    # Starship prompt\n    #\nRUN curl -fsSL https://starship.rs/install.sh | sh -s -- --yes \\\n    && echo 'eval \"$(starship init bash)\"' >> /home/$USERNAME/.bashrc\n    #\n    # Add sudo support for the non-root user\n    #\nRUN apt-get install --no-install-recommends -y sudo \\\n    && echo $USERNAME ALL=\\(root\\) NOPASSWD:ALL > /etc/sudoers.d/$USERNAME \\\n    && chmod 0440 /etc/sudoers.d/$USERNAME && rm -rf /var/lib/apt/lists/*;\n    #\n    # GO - https://golang.org/doc/install\n    #\nRUN curl -f -sL https://golang.org/dl/go1.15.3.linux-$(dpkg --print-architecture).tar.gz | tar -xz -C /usr/local\nENV PATH=$PATH:/usr/local/go/bin\n    #\n    # Assume role\n    #\nRUN /usr/local/go/bin/go get -u github.com/remind101/assume-role \\\n    && cp /root/go/bin/assume-role /usr/bin/assume-role\n    #\n    # SSH config\n    #\nRUN mkdir /home/${USERNAME}/.ssh \\\n    && echo \"Host *\\n\\tIdentitiesOnly=yes\\n\\tServerAliveInterval=25\" > /home/${USERNAME}/.ssh/config \\\n    && chown 1000:1000 -R /home/${USERNAME}/.ssh/\n    #\n    # Locales\n    #\nRUN apt-get install --no-install-recommends -y locales \\\n    && echo \"LC_ALL=en_US.UTF-8\" >> /etc/environment \\\n    && echo \"en_US.UTF-8 UTF-8\" >> /etc/locale.gen \\\n    && echo \"LANG=en_US.UTF-8\" > /etc/locale.conf \\\n    && locale-gen en_US.UTF-8 && rm -rf /var/lib/apt/lists/*;\n    #\n    # NVM and Exact version of Node\n    #\nRUN mkdir /usr/local/nvm \\\n    && chown $USERNAME /usr/local/nvm \\\n    && curl -f https://raw.githubusercontent.com/creationix/nvm/master/install.sh | NVM_DIR=/usr/local/nvm bash \\\n    && export NVM_DIR=\"/usr/local/nvm\" \\\n    && [ -s \"$NVM_DIR/nvm.sh\" ] && \\. \"$NVM_DIR/nvm.sh\" \\\n    && nvm install 14.19.1 \\\n    && echo 'export NVM_DIR=\"/usr/local/nvm\"' >> /home/$USERNAME/.bashrc \\\n    && echo '[ -s \"$NVM_DIR/nvm.sh\" ] && \\. \"$NVM_DIR/nvm.sh\"' >> /home/$USERNAME/.bashrc\n    #\n    # Yarn & Groff needed for AWS CLI\n    #\nRUN curl -f -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -\nRUN echo \"deb http://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list \\\n    && apt-get update\nRUN apt-get install --no-install-recommends -y apt-utils nodejs yarn groff && rm -rf /var/lib/apt/lists/*;\n    #\n    # Clean up\n    #\nRUN apt-get autoremove -y \\\n    && apt-get clean -y \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Switch back to dialog for any ad-hoc use of apt-get\nENV DEBIAN_FRONTEND=dialog\n"
}