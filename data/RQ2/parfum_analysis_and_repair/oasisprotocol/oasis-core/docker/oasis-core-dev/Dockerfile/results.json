{
  "startTime": 1674215954256,
  "endTime": 1674215955553,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 85,
        "lineEnd": 86,
        "columnStart": 4,
        "columnEnd": 106
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 18,
        "lineEnd": 31,
        "columnStart": 49,
        "columnEnd": 14
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 18,
        "lineEnd": 31,
        "columnStart": 49,
        "columnEnd": 14
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 18,
        "lineEnd": 31,
        "columnStart": 49,
        "columnEnd": 14
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:20.04\n\n# Package versions.\nARG GO_VERSION=1.18.3\nARG GO_NANCY_VERSION=1.0.33\nARG GO_NANCY_CHECKSUM=a4bf5290d41b095c04f941ed5380674770c79d59735e33b1bd07a5cd5fbb135d\nARG GO_PROTOC_VERSION=3.6.1\nARG GO_PROTOC_GEN_GO_VERSION=1.21.0\nARG GOLANGCILINT_VERSION=1.46.2\nARG GOCOVMERGE_VERSION=b5bfa59ec0adc420475f97f89b58045c721d761c\nARG GOFUMPT_VERSION=v0.3.1\nARG GOIMPORTS_VERSION=v0.1.11\nARG RUST_NIGHTLY_VERSION=2022-07-12\nARG JEMALLOC_VERSION=5.2.1\nARG JEMALLOC_CHECKSUM=34330e5ce276099e2e8950d9335db5a875689a4c6a56751ef3b1d8c537f887f6\n\nARG DEBIAN_FRONTEND=noninteractive\n\nRUN apt-get update -qq && apt-get upgrade -qq && apt-get install -y --no-install-recommends -qq \\\n    build-essential git gdb cmake clang-11 gcc-multilib \\\n    curl wget unzip \\\n    pkg-config software-properties-common \\\n    python3 python3-pyelftools \\\n    # for gitlint\n    python3-pip \\\n    # for rust openssl\n    libssl-dev libcurl4-openssl-dev \\\n    # for benchmarks\n    python3-prometheus-client \\\n    # for seccomp Go bindings support\n    libseccomp-dev \\\n    bubblewrap && \\\n    apt-get autoclean && apt-get autoremove && rm -rf /var/cache/apt/archives/* && \\\n    # for linting Git commits\n    pip install --no-cache-dir gitlint && rm -rf /var/lib/apt/lists/*;\n\nENV HOME=\"/root\"\nENV GOPATH=\"/go\"\nENV PATH=\"${HOME}/.cargo/bin:/go/bin:/usr/local/go/bin:${PATH}\"\n\n# Install protobuf (apt system v3.0 fails to compile our protos).\nRUN wget https://github.com/google/protobuf/releases/download/v${GO_PROTOC_VERSION}/protoc-${GO_PROTOC_VERSION}-linux-x86_64.zip && \\\n    unzip protoc-${GO_PROTOC_VERSION}-linux-x86_64.zip -x readme.txt -d /usr && \\\n    rm protoc-${GO_PROTOC_VERSION}-linux-x86_64.zip && \\\n    chmod a+rx /usr/bin/protoc\n\n# Install Rust.\nRUN curl \"https://sh.rustup.rs\" -sfo rustup.sh && \\\n    sh rustup.sh -y --default-toolchain nightly-${RUST_NIGHTLY_VERSION} && \\\n    rustup target add x86_64-fortanix-unknown-sgx && \\\n    rustup component add rustfmt && \\\n    cargo install --git https://github.com/fortanix/rust-sgx --rev 998c34d158a69dd1af33f22587e8ae1c26ca6a27 fortanix-sgx-tools && \\\n    cargo install --git https://github.com/fortanix/rust-sgx --rev 998c34d158a69dd1af33f22587e8ae1c26ca6a27 sgxs-tools && \\\n    cargo install cargo-audit\n\n# Install Go and utilities.\nRUN wget https://dl.google.com/go/go${GO_VERSION}.linux-amd64.tar.gz && \\\n    tar -C /usr/local -xzf go${GO_VERSION}.linux-amd64.tar.gz && \\\n    rm go${GO_VERSION}.linux-amd64.tar.gz && \\\n    mkdir -p /go/bin && \\\n    # Install a specific version of protoc-gen-go.\n    go install google.golang.org/protobuf/cmd/protoc-gen-go@v${GO_PROTOC_GEN_GO_VERSION} && \\\n    # Install golangci-lint.\n    curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b /tmp/bin v${GOLANGCILINT_VERSION} && \\\n    mv /tmp/bin/golangci-lint /go/bin && \\\n    # Install gocovmerge for e2e coverage.\n    go install github.com/wadey/gocovmerge@${GOCOVMERGE_VERSION} && \\\n    # Install nancy for auditing dependencies.\n    curl -sfL -o nancy https://github.com/sonatype-nexus-community/nancy/releases/download/v${GO_NANCY_VERSION}/nancy-v${GO_NANCY_VERSION}-linux-amd64 && \\\n    echo \"${GO_NANCY_CHECKSUM}  nancy\" | sha256sum -c && \\\n    mv nancy /go/bin/nancy && \\\n    chmod +x /go/bin/nancy && \\\n    # Install gofumpt for code formatting.\n    go install mvdan.cc/gofumpt@${GOFUMPT_VERSION} && \\\n    go install golang.org/x/tools/cmd/goimports@${GOIMPORTS_VERSION}\n\n# Install jemalloc (used by BadgerDB).\nRUN wget -O jemalloc.tar.bz2 \\\n    https://github.com/jemalloc/jemalloc/releases/download/${JEMALLOC_VERSION}/jemalloc-${JEMALLOC_VERSION}.tar.bz2 && \\\n    # Ensure checksum matches.\n    echo \"${JEMALLOC_CHECKSUM}  jemalloc.tar.bz2\" | sha256sum -c && \\\n    tar -xf jemalloc.tar.bz2 && \\\n    cd jemalloc-${JEMALLOC_VERSION} && \\\n    # Ensure reproducible jemalloc build.\n    # https://reproducible-builds.org/docs/build-path/\n    EXTRA_CXXFLAGS=-ffile-prefix-map=$(pwd -L)=. EXTRA_CFLAGS=-ffile-prefix-map=$(pwd -L)=. \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n    --with-jemalloc-prefix='je_' --with-malloc-conf='background_thread:true,metadata_thp:auto' && \\\n    make && \\\n    make install && \\\n    cd .. && rm jemalloc.tar.bz2 && rm -rf jemalloc-${JEMALLOC_VERSION}\n"
}