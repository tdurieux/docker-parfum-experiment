{
  "startTime": 1674216547193,
  "endTime": 1674216548342,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 1,
        "columnEnd": 70
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 1,
        "columnEnd": 70
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Based from https://github.com/paritytech/substrate/blob/master/.maintain/Dockerfile\n\nFROM phusion/baseimage:focal-1.0.0 as builder\nLABEL maintainer=\"Centrifuge Team\"\nLABEL description=\"This is the build stage for the Centrifuge Chain client. Here the binary is created.\"\n\nARG RUST_TOOLCHAIN=nightly\nENV DEBIAN_FRONTEND=noninteractive\nENV RUST_TOOLCHAIN=$RUST_TOOLCHAIN\n\nARG PROFILE=release\nARG OPTS=\"\"\nWORKDIR /centrifuge-chain\n\nCOPY . /centrifuge-chain\n\nRUN apt-get update && \\\n\tapt-get dist-upgrade -y -o Dpkg::Options::=\"--force-confold\" && \\\n\tapt-get install --no-install-recommends -y cmake pkg-config libssl-dev git clang libclang-dev && rm -rf /var/lib/apt/lists/*;\n\nRUN curl https://sh.rustup.rs -sSf | sh -s -- -y && \\\n\texport PATH=\"$PATH:$HOME/.cargo/bin\" && \\\n\trustup default $RUST_TOOLCHAIN && \\\n\trustup target add wasm32-unknown-unknown --toolchain $RUST_TOOLCHAIN && \\\n\tcargo build \"--$PROFILE\" $OPTS\n\n# ===== SECOND STAGE ======\n\nFROM phusion/baseimage:focal-1.0.0\nLABEL maintainer=\"Centrifuge Team\"\nLABEL description=\"This is the 2nd stage: a very small image that contains the centrifuge-chain binary and will be used by users.\"\nARG PROFILE=release\n\nRUN mv /usr/share/ca* /tmp && \\\n\trm -rf /usr/share/*  && \\\n\tmv /tmp/ca-certificates /usr/share/ && \\\n\tmkdir -p /root/.local/share/centrifuge-chain && \\\n    ln -s /root/.local/share/centrifuge-chain /data\n    # && \\\n    # useradd -m -u 1000 -U -s /bin/sh -d /centrifuge-chain centrifuge-chain # commented out since users do not seem to work with PVCs we currently use: https://stackoverflow.com/questions/46873796/allowing-access-to-a-persistentvolumeclaim-to-non-root-user/46907452\n\nCOPY --from=builder /centrifuge-chain/target/$PROFILE/centrifuge-chain /usr/local/bin\n\n# checks\nRUN ldd /usr/local/bin/centrifuge-chain && \\\n\t/usr/local/bin/centrifuge-chain --version\n\n# Shrinking\nRUN rm -rf /usr/lib/python* && \\\n\trm -rf /usr/bin /usr/sbin /usr/share/man\n\n# Add chain resources to image\nCOPY res /resources/\n\n# USER centrifuge-chain # see above\nEXPOSE 30333 9933 9944\nVOLUME [\"/data\"]\n\nENTRYPOINT [\"/usr/local/bin/centrifuge-chain\"]\n"
}