{
  "startTime": 1674217405290,
  "endTime": 1674217406108,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 243
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 68
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 68
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu\n\nRUN apt-get update && \\\n    apt-get -y --no-install-recommends install curl build-essential automake autoconf git jq && rm -rf /var/lib/apt/lists/*;\n\n# add user\nRUN useradd -d /home/app/ -m -G sudo app\nRUN mkdir -m 0755 /app\nRUN chown app /app\nRUN mkdir -m 0755 /nix\nRUN chown app /nix\nUSER app\nENV USER app\n\n# install nix\nRUN curl -f -L https://nixos.org/nix/install | sh\nENV PATH=\"/home/app/.nix-profile/bin:${PATH}\"\nENV NIX_PATH=\"/home/app//.nix-defexpr/channels/\"\nENV NIX_PROFILES=\"/nix/var/nix/profiles/default /home/app//.nix-profile\"\nENV NIX_SSL_CERT_FILE=\"/etc/ssl/certs/ca-certificates.crt\"\nRUN nix-env -iA dapp hevm seth solc -if https://github.com/dapphub/dapptools/tarball/master --substituters https://dapp.cachix.org --trusted-public-keys dapp.cachix.org-1:9GJt9Ja8IQwR7YW/aF0QvCa6OmjGmsKoZIist0dG+Rs=\n\n# install dapp tools\nRUN curl -f https://dapp.tools/install | sh\n\n# env variables needed by tinlake deployment\nENV ETH_RPC_URL=\"http://127.0.0.1:8545\"\nENV ETH_GAS_PRICE=\"7000000\"\nENV ETH_KEYSTORE=\"/home/app/.dapp/testnet/8545/keystore\"\nENV ETH_PASSWORD=\"/home/app/.dapp/testnet/8545/.empty-password\"\nENV SENIOR_INTEREST_RATE=\"1000000003593629043335673583\"\nENV MAX_RESERVE=\"100000000000000000000\"\nENV MAX_SENIOR_RATIO=\"850000000000000000000000000\"\nENV MIN_SENIOR_RATIO=\"750000000000000000000000000\"\nENV CHALLENGE_TIME=\"3600\"\nENV DISCOUNT_RATE=\"1000000001585489599188229325\"\n\n# copy repository into /app, set rights\nWORKDIR /app\nUSER root\nCOPY . /app\nRUN chown -R app /app && \\\n    chmod -R 755 /app\nUSER app\n\n# build contracts and deploy them\nRUN nohup bash -c \"dapp testnet --save=app &\" && \\\n    curl -f --connect-timeout 2 --max-time 2 --retry 200 --retry-delay 1 --retry-max-time 120 --retry-connrefused -H \"Content-Type: application/json\" -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_blockNumber\",\"params\":[],\"id\":83}' 127.0.0.1:8545 && \\\n    ./bin/deploy.sh\n\nRUN mkdir -p /home/app/.dapp/testnet/snapshots && \\\n    mv /home/app/.dapp/testnet/8545 /home/app/.dapp/testnet/snapshots/app\n\nCMD dapp testnet --load=app\n"
}