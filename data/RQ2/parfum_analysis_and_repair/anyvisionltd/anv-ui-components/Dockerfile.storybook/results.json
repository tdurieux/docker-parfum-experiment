{
  "startTime": 1674252705890,
  "endTime": 1674252706944,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 22,
        "columnEnd": 70
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 22,
        "columnEnd": 70
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Stage 0, \"build-stage\", based on Node.js, to build and compile the frontend\nFROM nikolaik/python-nodejs:python3.9-nodejs14-alpine as build-stage\n\nENV APP_DIR /home/node/anv-ui-components\nWORKDIR $APP_DIR\n\nCOPY ./ ./\n\n## Copy Artifact certificate for login + install + build\nCOPY .npmrc /.npmrc\nRUN npm config set registry https://anyvision.jfrog.io/anyvision/api/npm/npm/\nRUN npm --verbose ci\n\nRUN rm .npmrc\n\nRUN PYTHON=/usr/bin/python\nRUN npm run build-storybook\n\n\n# ---- Release ----\nFROM nginx:1.15\nENV APP_DIR /home/node/anv-ui-components\n\nRUN apt-get update && apt-get -y --no-install-recommends install procps vim git curl net-tools && rm -rf /var/lib/apt/lists/*;\n\n# Nginx config\nRUN rm -rf /etc/nginx/conf.d\nCOPY conf /etc/nginx\nCOPY --from=build-stage $APP_DIR/storybook-static/ /usr/share/nginx/html\n\n\n# Copy .env file and shell script to container\nWORKDIR /usr/share/nginx/html\n\n# Start Nginx server\nCMD [\"/bin/bash\", \"-c\", \"nginx -g \\\"daemon off;\\\"\"]"
}