{
  "startTime": 1674248905114,
  "endTime": 1674248906138,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 22,
        "columnEnd": 55
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 22,
        "columnEnd": 55
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Dockerfile for integration testing\n#\n# Not intended to be used for an actual setup\nFROM golang:1.18\n\nRUN apt-get update && apt-get install --no-install-recommends -y openssh-server && rm -rf /var/lib/apt/lists/*;\nRUN mkdir /var/run/sshd\nRUN echo 'root:password' | chpasswd\nRUN sed -i 's/PermitRootLogin without-password/PermitRootLogin yes/' /etc/ssh/sshd_config\n\n# SSH login fix. Otherwise user is kicked off after login\nRUN sed 's@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd\n\nENV NOTVISIBLE \"in users profile\"\nRUN echo \"export VISIBLE=now\" >> /etc/profile\n\n# Setup user cert based ssh\nADD test/keys/server_ca.pub /etc/ssh/ca_user_key.pub\n\nWORKDIR /app\n\nCOPY go.mod .\nCOPY go.sum .\n\n# Download dependencies\nRUN go mod download\n\n# Copy source\nCOPY . .\n\n# Build & set-up\nRUN go build -buildvcs=false -o /usr/bin/sharkey-client github.com/square/sharkey/cmd/sharkey-client && \\\n    cp test/integration/client_entry.sh /usr/bin/entrypoint.sh && \\\n    chmod +x /usr/bin/entrypoint.sh\n\nRUN echo \"HostCertificate /etc/ssh/ssh_host_rsa_key-cert.pub\" >> /etc/ssh/sshd_config\nRUN echo \"HostCertificate /etc/ssh/ssh_host_ecdsa_key-cert.pub\" >> /etc/ssh/sshd_config\nRUN echo \"HostCertificate /etc/ssh/ssh_host_ed25519_key-cert.pub\" >> /etc/ssh/sshd_config\nRUN echo \"TrustedUserCAKeys /etc/ssh/ca_user_key.pub\" >> /etc/ssh/sshd_config\n\n# Need to add ssh user for testing user certs\nRUN useradd -ms /bin/bash alice\n\nENTRYPOINT [\"/usr/bin/entrypoint.sh\"]\n"
}