{
  "startTime": 1674253210544,
  "endTime": 1674253211079,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 32
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 56
      }
    }
  ],
  "repairedDockerfile": "FROM ouspg/libfuzzer-base\n\nMAINTAINER https://github.com/ouspg/libfuzzerification\n\nENV GHC_VERSION 8.0.1\nENV CABAL_VERSION 1.24\nENV GHC_LLVM 3.7\n\n# https://launchpad.net/~hvr/+archive/ubuntu/ghc\nCOPY hvr-ghc.list /etc/apt/sources.list.d/\nCOPY hvr-ghc.key /tmp\nRUN apt-key add /tmp/hvr-ghc.key\n\n# GHC and requirements\nRUN apt-get -y update && \\\n    apt-get -y --no-install-recommends install \\\n        cabal-install-${CABAL_VERSION} \\\n        ghc-${GHC_VERSION} \\\n        llvm-${GHC_LLVM} && rm -rf /var/lib/apt/lists/*;\n\n# My devel tools\nRUN apt-get -y --no-install-recommends install emacs-nox && rm -rf /var/lib/apt/lists/*;\nCOPY dotemacs /root/.emacs\n\n# Set Clang as default compiler\nRUN update-alternatives --set cc /usr/bin/clang && \\\n    update-alternatives --set c89 /usr/bin/clang && \\\n    update-alternatives --set c99 /usr/bin/clang && \\\n    update-alternatives --install /usr/bin/gcc gcc /usr/bin/clang 1\n\n# GHC needs to find correct version of LLVM's opt and llc\nRUN update-alternatives --install /usr/bin/opt opt /usr/bin/opt-${GHC_LLVM} 1 && \\\n    update-alternatives --install /usr/bin/llc llc /usr/bin/llc-${GHC_LLVM} 1\n\nENV PATH /opt/ghc/${GHC_VERSION}/bin/:/opt/cabal/${CABAL_VERSION}/bin/:${PATH}\n\nCOPY ghc-wrapper ghc-asan /usr/local/bin/\nRUN chmod a+x /usr/local/bin/ghc-*\n\n# Build and install our libfuzzer Haskell lib\nWORKDIR /src/hs-libfuzzer\nADD hs-libfuzzer /src/hs-libfuzzer\nRUN cd /src/hs-libfuzzer && \\\n    cabal update && \\\n    cabal install && \\\n    rm -rf /src/hs-libfuzzer\n\nCOPY cabal.config /root/.cabal/config\n\nWORKDIR /haskell/\nCOPY src/hsinit.c src/test.hs src/build.sh /haskell/\n"
}