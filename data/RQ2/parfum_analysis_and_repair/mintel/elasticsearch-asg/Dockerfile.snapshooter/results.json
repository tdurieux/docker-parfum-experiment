{
  "startTime": 1674250672533,
  "endTime": 1674250673360,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 7,
        "columnEnd": 48
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 7,
        "columnEnd": 48
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "###############################\n# STAGE 1 test and build binary\n###############################\n\nFROM golang:1.13 AS builder\n\n# Set Go build env vars\nARG GOOS=linux\nARG GOARCH=amd64\nENV GOOS=${GOOS} GOARCH=${GOARCH}\n\n# Create a non-root user\nARG GOUSER=appuser\nRUN adduser --gecos '' --disabled-password --no-create-home ${GOUSER}\n\nWORKDIR /go/src/app\n\n# Fetch dependencies\n# Do this first for caching sake\nENV GO111MODULE=on\nCOPY v2/go.mod v2/go.sum ./\nRUN go mod download\n\n# Copy source\nCOPY v2/ .\n\n# Install/Update packages (after src COPY so it always happens)\nRUN apt-get update -y \\\n    && apt-get upgrade -y \\\n    && apt-get install --no-install-recommends -y ca-certificates tzdata \\\n    && update-ca-certificates && rm -rf /var/lib/apt/lists/*;\n\n# Build the binary\nRUN CGO_ENABLED=0 go build -ldflags='-w -s' -trimpath -o /go/bin/snapshooter ./cmd/snapshooter\n\n##########################\n# STAGE 2 deployment image\n##########################\nFROM scratch\n\n# Import from the builder.\nCOPY --from=builder /usr/share/zoneinfo /usr/share/zoneinfo\nCOPY --from=builder /etc/passwd /etc/passwd\nCOPY --from=builder /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/\n\n# Copy our static executable.\nCOPY --from=builder /go/bin/snapshooter /usr/bin/snapshooter\n\n# Use an unprivileged user.\nUSER ${GOUSER}\n\n# Expose healthcheck port.\nENV PORT=8080\nEXPOSE $PORT\n\nENTRYPOINT [\"/usr/bin/snapshooter\"]\n"
}