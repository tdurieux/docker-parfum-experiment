{
  "startTime": 1674219321090,
  "endTime": 1674219321790,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 14,
        "columnEnd": 157
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 14,
        "columnEnd": 192
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 52,
        "columnEnd": 115
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 55
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 25,
        "columnEnd": 66
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 25,
        "columnEnd": 126
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 25,
        "columnEnd": 66
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 25,
        "columnEnd": 126
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.8 AS builder\n\n# automode\nARG AUTOMODE=\"OFF\"\nARG CONFIG=\"\"\nARG AUTOUPDATE=\"OFF\"\nENV AUTOMODE=$AUTOMODE CONFIG=$CONFIG AUTOUPDATE=$AUTOUPDATE\n\nCOPY . mediaforge\n# like cd but for docker\nWORKDIR mediaforge\n# add repos for weird packages\n# google's key TODO: \"apt-key is deprecated\"\nRUN wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -\nRUN echo \"deb https://dl.google.com/linux/chrome/deb/ stable main\" >> \"/etc/apt/sources.list.d/google-chrome.list\"\n# the static deb here makes me nervous but the alternative is Really Weird so no\nRUN dpkg -i $( curl -f -w \"%{filename_effective}\" -LO \"https://www.deb-multimedia.org/pool/main/d/deb-multimedia-keyring/deb-multimedia-keyring_2016.8.1_all.deb\")\n# experimental/testing/unstable for ffmpeg and non-free/contrib for mbrola\nRUN printf \"\\ndeb http://deb.debian.org/debian bullseye contrib non-free\\ndeb http://deb.debian.org/debian experimental main\\ndeb http://deb.debian.org/debian unstable main\\n\" >> \"/etc/apt/sources.list.d/debian-extended.list\"\n\n# apt\nRUN apt-get -y update && apt-get -t experimental --no-install-recommends install -y ffmpeg && rm -rf /var/lib/apt/lists/*;\n    # imagemagick, conflicts with ffmpeg so i have to do it after grrrrrrr\nRUN echo \"deb http://www.deb-multimedia.org bullseye main\" >> \"/etc/apt/sources.list.d/imagemagick.list\"\n    # most packages\nRUN apt-get -y update && apt-get -t stable --no-install-recommends install -y pngquant exiftool apngasm nano google-chrome-stable imagemagick-7 nodejs && rm -rf /var/lib/apt/lists/*;\n\n# gifski isnt on an actual repo, use this shit i found on github to install the latest deb off github\nRUN dpkg -i $( curl -f -w \"%{filename_effective}\" -LO $( curl -f -s https://api.github.com/repos/ImageOptim/gifski/releases | grep browser_download_url | grep '64[.]deb' | head -n 1 | cut -d '\"' -f 4))\n\n# python packages\nRUN pip install --no-cache-dir --user poetry --no-warn-script-location\nRUN python -m poetry install\n\nRUN cp config.example.py config.py\n# so mediaforge knows to prompt with nano\nENV AM_I_IN_A_DOCKER_CONTAINER Yes\n\nENTRYPOINT [\"/bin/bash\", \"./dockerentry.sh\"]\n#CMD [\"/bin/bash\", \"./dockerentry.sh\"]\n\n\n\n"
}