diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/cloudwise-opensource/flyfish/lcapCodeServer/macos/lib/vscode/node_modules/vscode-sqlite3/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/cloudwise-opensource/flyfish/lcapCodeServer/macos/lib/vscode/node_modules/vscode-sqlite3/Dockerfile/repaired.Dockerfile
index c14d989..5763365 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/cloudwise-opensource/flyfish/lcapCodeServer/macos/lib/vscode/node_modules/vscode-sqlite3/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/cloudwise-opensource/flyfish/lcapCodeServer/macos/lib/vscode/node_modules/vscode-sqlite3/Dockerfile/repaired.Dockerfile
@@ -30,18 +30,18 @@ ENV LANG ${LC_ALL}
 RUN echo "#log: Configuring locales" \
   && set -x \
   && apt-get update -y \
-  && apt-get install -y locales \
+  && apt-get install --no-install-recommends -y locales \
   && echo "${LC_ALL} UTF-8" | tee /etc/locale.gen \
   && locale-gen ${LC_ALL} \
   && dpkg-reconfigure locales \
-  && sync
+  && sync && rm -rf /var/lib/apt/lists/*;
 
 ENV project node-sqlite3
 
 RUN echo "#log: ${project}: Setup system" \
   && set -x \
   && apt-get update -y \
-  && apt-get install -y \
+  && apt-get install --no-install-recommends -y \
   curl \
   sudo \
   build-essential \
@@ -49,11 +49,11 @@ RUN echo "#log: ${project}: Setup system" \
   && apt-get clean \
   && NVM_VERSION="v0.33.8" \
   && NODE_VERSION="--lts=carbon" \
-  && curl -o- https://raw.githubusercontent.com/creationix/nvm/${NVM_VERSION}/install.sh | bash \
+  && curl -f -o- https://raw.githubusercontent.com/creationix/nvm/${NVM_VERSION}/install.sh | bash \
   && which nvm || . ~/.bashrc \
   && nvm install ${NODE_VERSION} \
   && nvm use ${NODE_VERSION} \
-  && sync
+  && sync && rm -rf /var/lib/apt/lists/*;
 
 ADD . /usr/local/${project}/${project}
 WORKDIR /usr/local/${project}/${project}
@@ -63,7 +63,7 @@ RUN echo "#log: ${project}: Preparing sources" \
   && npm install || cat npm-debug.log \
   && npm install \
   && npm install --unsafe-perm --build-from-source \
-  && sync
+  && sync && npm cache clean --force;
 
 WORKDIR /usr/local/${project}/${project}
 RUN echo "#log: ${project}: Building sources" \