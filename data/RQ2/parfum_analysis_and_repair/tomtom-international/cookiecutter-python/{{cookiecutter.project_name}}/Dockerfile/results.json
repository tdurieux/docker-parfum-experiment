{
  "startTime": 1674221091654,
  "endTime": 1674221092400,
  "originalSmells": [
    {
      "rule": "rmRecursiveAfterMktempD",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 15,
        "columnEnd": 24
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 5,
        "columnEnd": 35
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG PYTHON_BASE=python:3.6.7-alpine3.7\n\n# The *builder* image is used mainly by the [Jenkins Python pipeline](https://github.com/tomtom-international/jsl/blob/master/vars/pythonSetupPyPipeline.groovy)\n# during the build & validation stages only. Removing it will result in a failure in Jenkins.\n# This image can as well be used for local testing.\nFROM tomtom-docker-registry.bintray.io/python/python3-pkg-builder:0.0.26 AS builder\nCOPY requirements_dev.txt /\nRUN pip install --no-cache-dir -r /requirements_dev.txt\n\n# The following two images are used to create the image that gets deployed to the Docker registry.\n# The *deploy_builder* image installs the created source distribution package into an virtual\n# environment so that it becomes easier to copy the modules and its dependencies to the image that\n# gets deployed to the registry.\nFROM $PYTHON_BASE AS deploy_builder\nRUN pip install --no-cache-dir --upgrade virtualenv==16.6.0 && python -m venv /opt/venv\nENV PATH=\"/opt/venv/bin:$PATH\"\nCOPY . /code\nWORKDIR /code\nRUN DIST_DIR=$(mktemp -d) && python setup.py sdist --dist-dir $DIST_DIR \\\n  && pip install --no-cache-dir $DIST_DIR/*.tar.gz && rm -rf -d\n\n\nFROM $PYTHON_BASE\nCOPY --from=deploy_builder /opt/venv /opt/venv\n\nENV PATH=\"/opt/venv/bin:$PATH\"\nENTRYPOINT [\"{{ cookiecutter.project_name }}\"]\n"
}