{
  "startTime": 1674255827148,
  "endTime": 1674255828078,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 7,
        "columnEnd": 37
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 7,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 7,
        "columnEnd": 38
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 7,
        "columnEnd": 38
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM golang:1.18-bullseye AS build\n\nWORKDIR /go/logstashPubSubReader\nADD tasks/logstashPubSubReader /go/logstashPubSubReader/\nRUN go build -o logstashPubSubReader .\n\nFROM steampipe_build:latest AS steampipe-build\n\nFROM python:3.9-slim-bullseye\nLABEL deepfence.role=system\n\nENV PYTHONUNBUFFERED=1 \\\n    FLASK_APP=config/app.py \\\n    MAX_RESULT_WINDOW=50000 \\\n    POSTGRES_USER_DB_HOST=deepfence-postgres \\\n    POSTGRES_USER_DB_PORT=5432 \\\n    POSTGRES_USER_DB_USER=cve \\\n    POSTGRES_USER_DB_PASSWORD=cve \\\n    POSTGRES_USER_DB_NAME=users \\\n    POSTGRES_USER_DB_SSLMODE=disable \\\n    JWT_ALGORITHM=RS256 \\\n    ELASTICSEARCH_SCHEME=http \\\n    ELASTICSEARCH_HOST=deepfence-es \\\n    ELASTICSEARCH_PORT=9200 \\\n    ELASTICSEARCH_CVE_DOC_TYPE=cve \\\n    REDIS_HOST=deepfence-redis \\\n    REDIS_PORT=6379 \\\n    REDIS_DB_NUMBER=0 \\\n    PYTHONPATH=/app/code \\\n    DOCKERVERSION=20.10.8 \\\n    AUTHLIB_INSECURE_TRANSPORT=true\n\nCOPY ./requirements.txt /tmp/requirements.txt\n\nRUN mkdir -p /usr/share/man/man1 \\\n    && mkdir -p /usr/share/man/man2 \\\n    && mkdir -p /usr/share/man/man3 \\\n    && mkdir -p /usr/share/man/man4 \\\n    && mkdir -p /usr/share/man/man5 \\\n    && mkdir -p /usr/share/man/man6 \\\n    && mkdir -p /usr/share/man/man7 \\\n    && mkdir -p /usr/share/man/man8 \\\n    && apt-get update -y \\\n    && apt-get install --no-install-recommends wkhtmltopdf -y \\\n    && apt-get install --no-install-recommends wget -y \\\n    && apt-get install -y cron git gnupg2 gettext-base logrotate curl gcc make g++ postgresql-client procps libmagic1 libpq-dev --no-install-recommends \\\n    && rm -rf /var/lib/apt/lists/* \\\n    && mkdir -p /var/log/supervisor /etc/supervisor/conf.d \\\n    && mkdir -p /app/code \\\n    && curl -fsSLO https://download.docker.com/linux/static/stable/x86_64/docker-${DOCKERVERSION}.tgz \\\n    && tar xzvf docker-${DOCKERVERSION}.tgz --strip 1 -C /usr/local/bin docker/docker \\\n    && rm docker-${DOCKERVERSION}.tgz \\\n    && pip install --no-cache-dir --upgrade pip setuptools wheel \\\n    && pip install --no-cache-dir -r /tmp/requirements.txt \\\n    && rm /tmp/requirements.txt \\\n    && /bin/sh -c \"$(curl -fsSL https://raw.githubusercontent.com/turbot/steampipe/main/install.sh)\" \\\n    && apt-get remove -y git gcc make g++ linux-libc-dev && apt-get clean && apt-get autoclean && apt-get autoremove -y \\\n    && rm -rf /usr/lib/python*/ensurepip /usr/local/lib/python*/ensurepip\n\nRUN cd /tmp \\\n    && apt-get update -y \\\n    && apt-get install --no-install-recommends -y xfonts-75dpi \\\n    && wget https://github.com/wkhtmltopdf/packaging/releases/download/0.12.6-1/wkhtmltox_0.12.6-1.buster_amd64.deb \\\n    && dpkg -i wkhtmltox_0.12.6-1.buster_amd64.deb \\\n    && ln -s /usr/local/bin/wkhtmltopdf /usr/bin \\\n    && cd - && rm -rf /var/lib/apt/lists/*;\n\nADD supervisord.conf /etc/supervisor/supervisord.conf\nADD supervisord_celery.conf /etc/supervisor/supervisord_celery.conf\nADD supervisord_api.conf /etc/supervisor/supervisord_api.conf\n\nCOPY . /app/code\nCOPY --from=build /go/logstashPubSubReader/logstashPubSubReader /app/code/tasks/logstashPubSubReader/logstashPubSubReader\n\nRUN chmod +x /app/code/dockerify/api/entrypoint.sh /app/code/dockerify/api/init_es_config.sh /app/code/dockerify/celery/entrypoint.sh /app/code/dockerify/backend/entrypoint.sh \\\n    && rm -f /app/code/.gitignore /app/code/requirements.txt \\\n    /app/code/dockerify/api/Dockerfile \\\n    && rm -rf /app/code/.git /app/code/unused /app/code/tests /app/code/scripts \\\n    /app/code/dockerify/haproxy /app/code/tasks/logstashPubSubReader/*.go \\\n    && openssl genrsa -out /app/code/rs256.pem 2048 \\\n    && openssl rsa -in /app/code/rs256.pem -pubout -outform PEM -out /app/code/rs256.pub\n\nRUN useradd -rm -d /home/ubuntu -s /bin/bash -g root -G sudo -u 1001 -p \"$(openssl passwd -1 ubuntu)\" ubuntu\n\nUSER ubuntu\n\nWORKDIR /home/ubuntu\nRUN mkdir -p /home/ubuntu/.steampipe/plugins/hub.steampipe.io/plugins/turbot/aws@latest \\\n    && mkdir -p /home/ubuntu/.steampipe/plugins/hub.steampipe.io/plugins/turbot/gcp@latest \\\n    && mkdir -p /home/ubuntu/.steampipe/plugins/hub.steampipe.io/plugins/turbot/azure@latest \\\n    && mkdir -p /home/ubuntu/.steampipe/config \\\n    && steampipe plugin install steampipe\n\nCOPY --chown=ubuntu:root --from=steampipe-build /go/steampipe-plugin-aws/steampipe-plugin-aws.plugin /home/ubuntu/.steampipe/plugins/hub.steampipe.io/plugins/turbot/aws@latest/steampipe-plugin-aws.plugin\nCOPY --chown=ubuntu:root --from=steampipe-build /go/steampipe-plugin-gcp/steampipe-plugin-gcp.plugin /home/ubuntu/.steampipe/plugins/hub.steampipe.io/plugins/turbot/gcp@latest/steampipe-plugin-gcp.plugin\nCOPY --chown=ubuntu:root --from=steampipe-build /go/steampipe-plugin-azure/steampipe-plugin-azure.plugin /home/ubuntu/.steampipe/plugins/hub.steampipe.io/plugins/turbot/azure@latest/steampipe-plugin-azure.plugin\nCOPY --chown=ubuntu:root --from=steampipe-build /go/steampipe-plugin-aws/config/aws.spc /home/ubuntu/.steampipe/config/aws.spc\nCOPY --chown=ubuntu:root --from=steampipe-build /go/steampipe-plugin-gcp/config/gcp.spc /home/ubuntu/.steampipe/config/gcp.spc\nCOPY --chown=ubuntu:root --from=steampipe-build /go/steampipe-plugin-azure/config/azure.spc /home/ubuntu/.steampipe/config/azure.spc\n\nUSER root\n\nRUN apt-get clean && apt-get autoclean && apt-get autoremove -y && rm -rf /tmp/*\n\nWORKDIR /app/code\nENTRYPOINT [\"/app/code/dockerify/api/entrypoint.sh\"]\n"
}