{
  "startTime": 1674220811327,
  "endTime": 1674220812163,
  "originalSmells": [
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 5,
        "columnEnd": 41
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 41
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM linuxkit/alpine-build-kernel:cfdd576c36a52ed2dd62f237f79eeedc2dd3697b@sha256:3fe08db373a9373ba1616a485858f01ebd2d7a3cb364a099d0ed8b45fa419da2\n\n\nARG KERNEL_VERSION\nARG DEBUG=0\n\nENV KERNEL_SOURCE=https://www.kernel.org/pub/linux/kernel/v4.x/linux-${KERNEL_VERSION}.tar.xz\n\n# Download kernel source code\nRUN curl -fsSL -o linux-${KERNEL_VERSION}.tar.xz ${KERNEL_SOURCE}\nRUN tar xf linux-${KERNEL_VERSION}.tar.xz && mv /linux-${KERNEL_VERSION} /linux && rm linux-${KERNEL_VERSION}.tar.xz\nWORKDIR /linux\n\nENV DEF_CONFIG_FILE=/linux/arch/x86/configs/x86_64_defconfig\nCOPY kernel_config ${DEF_CONFIG_FILE}\nCOPY kernel_config.debug /linux/debug_config\n\n\n# Enable debug\nRUN if [ $DEBUG -ne \"0\" ]; then \\\n    sed -i 's/CONFIG_PANIC_ON_OOPS=y/# CONFIG_PANIC_ON_OOPS is not set/' \\\n\t\t\t\t\t\t\t\t ${DEF_CONFIG_FILE}; \\\n    cat /linux/debug_config >> ${DEF_CONFIG_FILE}; \\\n    fi\n\n\nRUN cat ${DEF_CONFIG_FILE}\n\n# Apply local patches\nCOPY patches-4.9 /patches\nRUN cd /linux && \\\n    set -e && for patch in /patches/*.patch; do \\\n        echo \"Applying $patch\"; \\\n        patch -p1 < \"$patch\"; \\\n    done\n\n# Build kernel\nRUN make defconfig && \\\n    make oldconfig && \\\n    perl -p -i -e \"s/^EXTRAVERSION.*/EXTRAVERSION = -linuxkit/\" Makefile && \\\n    make -j \"$(getconf _NPROCESSORS_ONLN)\" KCFLAGS=\"-fno-pie\"\n\n#bzImage\n#vmlinux\nRUN cp vmlinux arch/x86_64/boot/bzImage /\n\n# CC does not provide modules, not needed to distribute headers.\n#kernel-headers.tar: provides kernel headers\nRUN mkdir -p /tmp/kernel-headers/usr && \\\n\tcd /tmp/kernel-headers && tar cf /kernel-headers.tar usr\n\n# CC does no use modules do not ship it\n#kernel-modules.tar: provides kernel modules\nRUN mkdir -p /tmp/kernel-modules/lib/modules && \\\n\tcd /tmp/kernel-modules && tar cf /kernel-modules.tar lib\n\n\nWORKDIR /\n\n#kernel-dev.tar: provides headers .config linux/include arch/x86/include\nRUN mkdir -p  /tmp/usr/src/linux-headers && \\\n\tcd /tmp/ && tar cf /kernel-dev.tar usr/src && rm -rf /tmp/usr/src/linux-headers\n\nRUN printf \"KERNEL_SOURCE=${KERNEL_SOURCE}\\n\" > /kernel-source-info\n"
}