{
  "startTime": 1674254808202,
  "endTime": 1674254809331,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 28
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG IMAGE\nARG BUILD_IMAGE\n\nFROM ${IMAGE} as ksrc\n\nFROM ${BUILD_IMAGE} AS build\nRUN apk update && apk upgrade -a && \\\n  apk add --no-cache \\\n  argp-standalone \\\n  autoconf \\\n  automake \\\n  bison \\\n  build-base \\\n  clang \\\n  clang-dev \\\n  clang-static \\\n  cmake \\\n  curl \\\n  elfutils-dev \\\n  flex-dev \\\n  fts-dev \\\n  gettext-dev \\\n  git \\\n  iperf3 \\\n  libedit-dev \\\n  libtool \\\n  llvm \\\n  llvm-dev \\\n  llvm-static \\\n  luajit-dev \\\n  m4 \\\n  python3 \\\n  zlib-dev \\\n  && true\n\nRUN ln -s /usr/lib/cmake/llvm10/ /usr/lib/cmake/llvm && \\\n    ln -s /usr/include/llvm10/llvm-c/ /usr/include/llvm-c && \\\n    ln -s /usr/include/llvm10/llvm/ /usr/include/llvm\n\nWORKDIR /build\n\nENV BCC_COMMIT=14278bf1a52dd76ff66eed02cc9db7c7ec240da6\nRUN git clone https://github.com/iovisor/bcc.git && \\\n    cd bcc && \\\n    git checkout $BCC_COMMIT && \\\n    sed -i 's/<error.h>/<errno.h>/' examples/cpp/KModRetExample.cc\n\nCOPY --from=ksrc /kernel-headers.tar /build\nCOPY --from=ksrc /kernel-dev.tar /build\nCOPY --from=ksrc /kernel.tar /build\nRUN tar xf /build/kernel-headers.tar && \\\n    tar xf /build/kernel-dev.tar && \\\n    tar xf /build/kernel.tar && rm /build/kernel-headers.tar\n\nRUN mkdir -p bcc/build && cd bcc/build && \\\n    cmake .. -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON \\\n             -DCMAKE_C_FLAGS=\"-I/build/usr/include\" \\\n             -DPYTHON_CMD=python3 \\\n             -DCMAKE_CXX_FLAGS=\"-I/build/usr/include\" \\\n             -DCMAKE_INSTALL_PREFIX=/usr && \\\n    make && \\\n    make install\n\nRUN mkdir -p /out/usr/ && \\\n    cp -a /build/usr/src /out/usr/ && \\\n    cp -a /build/usr/include /out/usr\nRUN mkdir -p /out/usr/lib && \\\n    cp -a /usr/lib/libelf* /out/usr/lib/ && \\\n    cp -a /usr/lib/libstdc* /out/usr/lib/ && \\\n    cp -a /usr/lib/libintl* /out/usr/lib/ && \\\n    cp -a /usr/lib64/* /out/usr/lib/\nRUN mkdir -p /out/usr/lib/python3.8 && \\\n    cp -a /usr/lib/python3.8/site-packages /out/usr/lib/python3.8/\nRUN mkdir -p /out/usr/share && \\\n    cp -a /usr/share/bcc /out/usr/share/\nRUN mkdir -p /out/usr/bin && \\\n    cp -a /usr/bin/bcc-lua /out/usr/bin/\n\nFROM ${BUILD_IMAGE} as mirror\nRUN mkdir -p /out/etc/apk && cp -r /etc/apk/* /out/etc/apk/\nRUN apk update && apk upgrade -a && \\\n  apk add --no-cache --initdb -p /out \\\n  busybox \\\n  luajit \\\n  python3 \\\n  zlib \\\n  && true\n\nFROM scratch\nENTRYPOINT []\nCMD []\nWORKDIR /\nENV LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:/usr/lib64\nCOPY --from=mirror /out /\nCOPY --from=build /out /\n"
}