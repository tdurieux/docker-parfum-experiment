{
  "startTime": 1674253842159,
  "endTime": 1674253842825,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 9,
        "columnStart": 7,
        "columnEnd": 59
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 9,
        "columnStart": 7,
        "columnEnd": 59
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 45
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 69
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:18.04\n\nRUN apt-get update\n\nENV DEBIAN_FRONTEND=noninteractive\n\n# Install some dependencies\nRUN dpkg --add-architecture i386 && apt-get update \\\n    && apt-get install --no-install-recommends -y --force-yes curl expect git wget unzip xz-utils \\\n    libc6-i386 lib32stdc++6 lib32gcc1 lib32ncurses5 lib32z1 && rm -rf /var/lib/apt/lists/*;\n\n# Install java\nRUN apt-get install --no-install-recommends -y openjdk-8-jdk-headless && rm -rf /var/lib/apt/lists/*;\n\n# Download and install Gradle\n#RUN mkdir -p /opt/gradle && \\\n    #cd /opt/gradle && \\\n    #curl -L https://services.gradle.org/distributions/gradle-6.0-bin.zip -o gradle-6.0-bin.zip && \\\n    #unzip gradle-6.0-bin.zip && \\\n    #rm gradle-6.0-bin.zip\n\n#ENV GRADLE_HOME /opt/gradle/gradle-6.0\n\n# Install the Android SDK\nRUN cd /opt && wget --output-document=android-sdk.zip --quiet \\\n    https://dl.google.com/android/repository/sdk-tools-linux-4333796.zip \\\n    && unzip android-sdk.zip -d /opt/android-sdk && rm -f android-sdk.zip\n\n# Install Flutter\nRUN cd /opt && wget --output-document=flutter-sdk.tar.xz --quiet \\\n    https://storage.googleapis.com/flutter_infra/releases/stable/linux/flutter_linux_v1.12.13+hotfix.8-stable.tar.xz \\\n    && tar xf flutter-sdk.tar.xz \\\n    && rm -f flutter-sdk-tar.xz\n\n# Setup environment\nENV FLUTTER_HOME /opt/flutter\nENV ANDROID_SDK_ROOT /opt/android-sdk\nENV ANDROID_HOME /opt/android-sdk\n#ENV PATH ${GRADLE_HOME}/bin:${ANDROID_HOME}/tools/bin:${ANDROID_HOME}/platform-tools:${FLUTTER_HOME}/bin:${PATH}\nENV PATH ${PATH}:${ANDROID_HOME}/tools/bin:${ANDROID_HOME}/platform-tools:${FLUTTER_HOME}/bin\n\n# Install SDK elements. This might change depending on what your app needs\n# I'm installing the most basic ones. You should modify this to install the ones\n# you need. You can get a list of available elements by getting a shell to the\n# container and using `sdkmanager --list`\nRUN echo yes | sdkmanager \"platform-tools\" \"platforms;android-28\" \"build-tools;28.0.3\"\n\n# Perform an artifact precache so that no extra assets need to be downloaded on demand.\nRUN flutter precache\n\n# Accept licenses.\nRUN yes \"y\" | flutter doctor --android-licenses\n\n# Disable analytics and crash reporting on the builder.\nRUN flutter config  --no-analytics\n\n# Perform a doctor run.\nRUN flutter doctor -v\n\n# Perform a flutter upgrade\nRUN flutter upgrade\n\n# Go to workspace\nRUN mkdir -p /opt/workspace/packages\nWORKDIR /opt/workspace\n\nCOPY pubspec* ./\nRUN flutter pub get\n"
}