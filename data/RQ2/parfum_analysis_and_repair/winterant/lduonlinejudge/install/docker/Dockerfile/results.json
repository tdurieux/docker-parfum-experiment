{
  "startTime": 1674251205069,
  "endTime": 1674251205988,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 80
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 93
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 80
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 93
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 31
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:20.04\n\nRUN ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime &&\\\n    echo 'Asia/Shanghai' > /etc/timezone &&\\\n    sed -i 's/\\/\\/.*\\/ubuntu/\\/\\/mirrors.163.com\\/ubuntu/g' /etc/apt/sources.list &&\\\n    apt-get update && apt-get -y upgrade && \\\n    apt-get -y --no-install-recommends install software-properties-common && \\\n    apt-get -y --no-install-recommends install language-pack-en-base && \\\n    echo -e \"\\n\" | add-apt-repository ppa:deadsnakes/ppa && \\\n    echo -e \"\\n\" | apt-add-repository ppa:ondrej/php && \\\n    apt-get update && apt-get -y upgrade && \\\n    apt-get -y --no-install-recommends install php7.2 php7.2-fpm php7.2-mysql php7.2-xml php7.2-mbstring && \\\n    apt-get -y --no-install-recommends install composer zip unzip && \\\n    apt-get -y --no-install-recommends install nginx && \\\n    apt-get -y --no-install-recommends install mysql-server && \\\n    apt-get -y --no-install-recommends install g++ libmysqlclient-dev openjdk-8-jre openjdk-8-jdk python3.6 make flex && \\\n    apt-get -y --no-install-recommends install sudo vim && rm -rf /var/lib/apt/lists/*;\n\nCOPY . /home/LDUOnlineJudge/\n\nWORKDIR /home/LDUOnlineJudge\n\nRUN export LC_ALL=en_US.UTF-8 &&\\\n    export LANG=en_US.UTF-8 &&\\\n    composer install --ignore-platform-reqs &&\\\n    chown www-data:www-data -R storage bootstrap/cache &&\\\n    cp -rf .env.example .env &&\\\n    cp -rf judge/config.sh.sample judge/config.sh &&\\\n    cp -rf public/favicon.ico.sample public/favicon.ico &&\\\n    php artisan storage:link &&\\\n    php artisan key:generate &&\\\n    php artisan optimize &&\\\n    # sim\n    cp -rf judge/sim/sim.1 /usr/share/man/man1/ &&\\\n    cd judge/sim/ && make install && cd ../../ &&\\\n    # nginx\n    rm -rf /etc/nginx/sites-enabled/default &&\\\n    cp -rf install/nginx/lduoj.conf /etc/nginx/conf.d/ &&\\\n    # php7.2-fpm\n    mv /etc/php/7.2/fpm/pool.d/www.conf /etc/php/7.2/fpm/pool.d/www.conf.bak &&\\\n    cp -rf install/php-fpm/www.conf /etc/php/7.2/fpm/pool.d/ &&\\\n    # docker startup\n    cp -rf install/docker/startup.sh /startup.sh &&\\\n    chmod +x /startup.sh &&\\\n    # sudoers\n    echo 'www-data ALL=(ALL) NOPASSWD: /bin/bash,/usr/bin/git,/usr/bin/g++' >> /etc/sudoers\n\nRUN USER=$(cat /etc/mysql/debian.cnf |grep user|head -1|awk '{print $3}') &&\\\n    PASSWORD=$(cat /etc/mysql/debian.cnf |grep password|head -1|awk '{print $3}') &&\\\n    usermod -d /var/lib/mysql/ mysql &&\\\n    service mysql restart &&\\\n    db_passwd=\"OurFuture2045\" &&\\\n    mysql -u\"${USER}\" -p\"${PASSWORD}\" -e\"CREATE DATABASE If Not Exists lduoj;\" &&\\\n    mysql -u\"${USER}\" -p\"${PASSWORD}\" -e\"CREATE USER If Not Exists 'oj_user'@'localhost' IDENTIFIED WITH mysql_native_password BY '${db_passwd}';\" &&\\\n    mysql -u\"${USER}\" -p\"${PASSWORD}\" -e\"GRANT all privileges ON lduoj.* TO 'oj_user'@'localhost';flush privileges;\" &&\\\n    mysql -u\"${USER}\" -p\"${PASSWORD}\" -Dlduoj < install/mysql/lduoj.sql &&\\\n    sed -i \"s/^DB_DATABASE.*$/DB_DATABASE=lduoj/\"       .env  judge/config.sh &&\\\n    sed -i \"s/^DB_USERNAME.*$/DB_USERNAME=oj_user/\"        .env  judge/config.sh &&\\\n    sed -i \"s/^DB_PASSWORD.*$/DB_PASSWORD=${db_passwd}/\" .env  judge/config.sh\n\nWORKDIR /volume\n\nENTRYPOINT [\"/startup.sh\"]\n\nVOLUME [\"/volume\"]\n\nEXPOSE 80\n"
}