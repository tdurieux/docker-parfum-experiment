{
  "startTime": 1674252329091,
  "endTime": 1674252330006,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 33,
        "lineEnd": 53,
        "columnStart": 7,
        "columnEnd": 7
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 84,
        "lineEnd": 84,
        "columnStart": 4,
        "columnEnd": 98
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nvidia/cuda:8.0-cudnn6-devel-ubuntu16.04\n\nENV DEBIAN_FRONTEND noninteractive\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n    build-essential \\\n    bzip2 \\\n    ca-certificates \\\n    cmake \\\n    git \\\n    libatlas-base-dev \\\n    libboost-all-dev \\\n    libgflags-dev \\\n    libgoogle-glog-dev \\\n    libhdf5-serial-dev \\\n    libleveldb-dev \\\n    liblmdb-dev \\\n    libopencv-dev \\\n    libprotobuf-dev \\\n    libsnappy-dev \\\n    locales \\\n    netcat \\\n    protobuf-compiler \\\n    python3-dev \\\n    python3-numpy \\\n    python3-pip \\\n    python3-pydot \\\n    python3-scipy \\\n    python3-setuptools \\\n    sudo \\\n    wget \\\n    && rm -rf /var/lib/apt/lists/*\n\nRUN pip3 install --no-cache-dir pip==9.0.3 \\\n    && pip3 install --no-cache-dir -U \\\n    cython \\\n    h5py \\\n    ipython \\\n    jupyter \\\n    leveldb \\\n    lmdb \\\n    matplotlib \\\n    networkx \\\n    nose \\\n    numpy \\\n    pandas \\\n    Pillow \\\n    protobuf \\\n    pydot \\\n    python-dateutil \\\n    python-gflags \\\n    pyyaml \\\n    scikit-image \\\n    scipy \\\n    six \\\n    && rm -rf ~/.cache/pip\n\nENV CAFFE_ROOT=/opt/caffe\nWORKDIR $CAFFE_ROOT\n\nRUN git clone https://github.com/NVIDIA/nccl.git \\\n    && cd nccl \\\n    && make -j$(nproc) install \\\n    && cd .. \\\n    && rm -rf nccl\n\nENV CLONE_TAG=1.0\n\nRUN git clone -b ${CLONE_TAG} --depth 1 https://github.com/BVLC/caffe.git . \\\n    && mkdir build \\\n    && cd build \\\n    && cmake -DUSE_CUDNN=1 -DUSE_NCCL=1 -Dpython_version=3 .. \\\n    && make -j$(nproc)\n\nENV PYCAFFE_ROOT $CAFFE_ROOT/python\nENV PYTHONPATH $PYCAFFE_ROOT:$PYTHONPATH\nENV PATH $CAFFE_ROOT/build/tools:$PYCAFFE_ROOT:$PATH\nRUN echo '$CAFFE_ROOT/build/lib' >> /etc/ld.so.conf.d/caffe.conf \\\n    && ldconfig\n\nRUN echo \"en_US.UTF-8 UTF-8\" > /etc/locale.gen && \\\n    locale-gen\n\n# Install Tini\nRUN wget --quiet https://github.com/krallin/tini/releases/download/v0.10.0/tini && \\\n    echo \"1361527f39190a7338a0b434bd8c88ff7233ce7b9a4876f3315c22fce7eca1b0  *tini\" | sha256sum -c - && \\\n    mv tini /usr/local/bin/tini && \\\n    chmod +x /usr/local/bin/tini\n\n# Configure environment\nENV SHELL=/bin/bash \\\n    NB_USER=aurora \\\n    NB_UID=1000 \\\n    NB_GID=2000 \\\n    LC_ALL=en_US.UTF-8 \\\n    LANG=en_US.UTF-8 \\\n    LANGUAGE=en_US.UTF-8\n\n# Create aurora user with UID=1000 and in the 'aurora' group\nRUN groupadd -g $NB_GID $NB_USER \\\n    && useradd -m -s $SHELL -N -u $NB_UID -g $NB_GID $NB_USER \\\n    && echo '%'$NB_USER 'ALL=(ALL:ALL) NOPASSWD:ALL' >> /etc/sudoers\n\nEXPOSE 8888\nWORKDIR /workspace\n\n# Add local files as late as possible to avoid cache busting\nCOPY start.sh /usr/local/bin/\nCOPY start-notebook.sh /usr/local/bin/\nCOPY jupyter_notebook_config.py /etc/jupyter/\n\n# Install Aurora job submit tool\nARG CACHE_DATE\nARG SUBMIT_TOOL_NAME=aurora\nRUN wget https://raw.githubusercontent.com/linkernetworks/aurora/master/install.sh -O - | bash \\\n    && if [ \"$SUBMIT_TOOL_NAME\" != \"aurora\" ]; then mv /usr/local/bin/aurora /usr/local/bin/$SUBMIT_TOOL_NAME; fi\n\n# Configure container startup\nENTRYPOINT [\"tini\", \"--\"]\nCMD [\"start-notebook.sh\"]\n"
}