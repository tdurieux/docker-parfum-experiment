{
  "startTime": 1674252669082,
  "endTime": 1674252670431,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 4,
        "columnEnd": 75
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 22,
        "lineEnd": 23,
        "columnStart": 22,
        "columnEnd": 46
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 22,
        "columnEnd": 47
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 38,
        "lineEnd": 69,
        "columnStart": 22,
        "columnEnd": 14
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 22,
        "lineEnd": 23,
        "columnStart": 22,
        "columnEnd": 46
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 22,
        "columnEnd": 47
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 38,
        "lineEnd": 69,
        "columnStart": 22,
        "columnEnd": 14
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG ROS_DISTRO=noetic\nFROM ros:$ROS_DISTRO-ros-core\nARG PYTHON_VERSION=3\nLABEL Name=\"ROS Node Example\"\nLABEL Version=\"0.1\"\n\n# Make the user and group consistent and known.\nARG USER_ID=1004\nARG GROUP_ID=1000\n\n# Run the following commands as the root user.\nUSER root\n\n# Update PATH to include local pip installs.\nENV PATH=\"/home/ros/.local/bin:${PATH}\"\n\n# Workaround for sudo bug on Ubuntu Focal.\n# https://unix.stackexchange.com/questions/578949/sudo-setrlimitrlimit-core-operation-not-permitted\n# https://github.com/sudo-project/sudo/issues/42\nRUN echo \"Set disable_coredump false\" >> /etc/sudo.conf\n\n# Packages needed for various utility steps.\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    build-essential curl file git locales sudo && \\\n    apt-get clean && rm -rf /var/lib/apt/lists/*;\n\n# Set up the locale.\nRUN locale-gen en_US en_US.UTF-8 && update-locale LC_ALL=en_US.UTF-8\n\n# Statick npm tools.\n# Have to install newer version from non-apt source due to SSL library compatibility issues.\nRUN curl -f -sL https://deb.nodesource.com/setup_10.x -o nodesource_setup.sh\nRUN bash nodesource_setup.sh\nRUN apt-get update && apt-get install --no-install-recommends -y nodejs && apt-get clean && rm -rf /var/lib/apt/lists/*;\nRUN npm config set prefix -g /usr\nRUN npm install -g markdownlint-cli@0.21.0 && npm cache clean --force;\n\n# Build and static analysis tools.\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    bandit \\\n    cccc \\\n    clang \\\n    clang-6.0 \\\n    clang-format \\\n    clang-format-6.0 \\\n    clang-tidy \\\n    clang-tidy-6.0 \\\n    cmake \\\n    cppcheck \\\n    findbugs \\\n    flawfinder \\\n    libomp-dev \\\n    libpcre3-dev \\\n    libxml2 \\\n    libxml2-utils \\\n    pyflakes \\\n    pylint \\\n    python$PYTHON_VERSION-catkin-lint \\\n    python$PYTHON_VERSION-git \\\n    python$PYTHON_VERSION-pip \\\n    python$PYTHON_VERSION-rosdep \\\n    python$PYTHON_VERSION-vcstools \\\n    python$PYTHON_VERSION-wstool \\\n    python3-pep8 \\\n    python3-setuptools \\\n    python3-vcstools \\\n    python3-yaml \\\n    python3-yapsy \\\n    ros-$ROS_DISTRO-roslint \\\n    uncrustify && \\\n    apt-get clean && rm -rf /var/lib/apt/lists/*;\n\n# Upgrade pip.\nRUN python$PYTHON_VERSION -m pip install --upgrade pip && python3 -m pip install --upgrade pip\n\n# Install packages with pip.\nRUN pip3 install --no-cache-dir --upgrade catkin_pkg pytest statick statick-md statick-web\n# black removed until Python 3.5 support is no longer needed (Python 3.5 is default for xenial/kinetic)\n\n# Temporarily needed for Noetic until a proper fix is applied upstream.\nRUN python3 -m pip install git+https://github.com/catkin/catkin_tools.git\n\n# Need to initialize rosdep as root.\nRUN rosdep init\n\n# Regular user setup.\nRUN groupadd -g $GROUP_ID ros && \\\n    useradd -m ros -s /bin/bash -u $USER_ID -g ros -d /home/ros\n\n# Allow passwordless sudo.\nRUN echo \"ros ALL=(root) NOPASSWD:ALL\" > /etc/sudoers.d/ros && \\\n    chmod 0440 /etc/sudoers.d/ros\n\n# Switch to regular user.\nUSER ros\n\n# Get latest rosdep sources.\nRUN rosdep update\n\n# Make a workspace directory that can be mounted as a volume from the host system.\n# This approach is taken so that the actual packages to build reside on the host system where the users preferred\n# development tools can be used when editing files.\nRUN mkdir /home/ros/ws\n"
}