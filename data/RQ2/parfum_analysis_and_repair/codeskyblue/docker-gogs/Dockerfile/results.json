{
  "startTime": 1674250016822,
  "endTime": 1674250018065,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 7,
        "columnEnd": 60
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 7,
        "columnEnd": 60
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 28
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 52
      }
    }
  ],
  "repairedDockerfile": "FROM google/golang\nMAINTAINER codeskyblue@gmail.com\n\nRUN echo \"deb http://ftp.debian.org/debian/ wheezy-backports main\" >> /etc/apt/sources.list \\\n    && apt-get update \\\n    && apt-get install --no-install-recommends -y -t wheezy-backports openssh-server && rm -rf /var/lib/apt/lists/*;\n\n# grab but do not build gogs\nRUN git clone https://github.com/gogits/gogs.git /gopath/src/github.com/gogits/gogs\nENV GOPATH=/gopath\n# set the working directory and add current stuff\nWORKDIR /gopath/src/github.com/gogits/gogs\nRUN git checkout v0.9.97\nRUN go get -v -tags \"sqlite\"\nRUN go build -tags \"sqlite\"\n\nRUN useradd --shell /bin/bash --system --comment gogits git\n\nRUN mkdir /var/run/sshd\n# SSH login fix. Otherwise user is kicked off after login\nRUN sed 's@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd\nRUN sed 's@UsePrivilegeSeparation yes@UsePrivilegeSeparation no@' -i /etc/ssh/sshd_config\nRUN echo \"export VISIBLE=now\" >> /etc/profile\nRUN echo \"PermitUserEnvironment yes\" >> /etc/ssh/sshd_config\n\n# create new server keys on startup\nRUN sed 's@^HostKey@\\#HostKey@' -i /etc/ssh/sshd_config\nRUN echo \"HostKey /data/ssh/ssh_host_key\" >> /etc/ssh/sshd_config\nRUN echo \"HostKey /data/ssh/ssh_host_rsa_key\" >> /etc/ssh/sshd_config\nRUN echo \"HostKey /data/ssh/ssh_host_dsa_key\" >> /etc/ssh/sshd_config\nRUN echo \"HostKey /data/ssh/ssh_host_ecdsa_key\" >> /etc/ssh/sshd_config\nRUN echo \"HostKey /data/ssh/ssh_host_ed25519_key\" >> /etc/ssh/sshd_config\n\n# prepare data\nENV GOGS_CUSTOM /data/gogs\nRUN echo \"export GOGS_CUSTOM=/data/gogs\" >> /etc/profile\n\nRUN apt-get install --no-install-recommends -y rsync && rm -rf /var/lib/apt/lists/*;\nADD . /gopath/src/github.com/gogits/gogs\n\nEXPOSE 22 3000\nENTRYPOINT []\nCMD [\"./start.sh\"]\n"
}