{
  "startTime": 1674252446731,
  "endTime": 1674252447715,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 126
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 40
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:focal\n\nARG KAMU_VERSION\n\n# Podman\n# Source: https://github.com/containers/podman/blob/056f492f59c333d521ebbbe186abde0278e815db/contrib/podmanimage/stable/Dockerfile\nRUN apt update && \\\n    apt -y --no-install-recommends install curl wget gnupg unzip jq && \\\n    . /etc/os-release && \\\n    echo \"deb https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/xUbuntu_${VERSION_ID}/ /\" \\\n        | tee /etc/apt/sources.list.d/devel:kubic:libcontainers:stable.list && \\\n    curl -f -L \"https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/xUbuntu_${VERSION_ID}/Release.key\" \\\n        | apt-key add - && \\\n    apt update && \\\n    apt -y --no-install-recommends install podman fuse-overlayfs && \\\n    rm -rf /var/lib/apt/lists/*\n\nCOPY podman/containers.conf /etc/containers/containers.conf\nCOPY podman/storage.conf /etc/containers/storage.conf\nCOPY podman/containers-user.conf /root/.config/containers/containers.conf\nCOPY podman/storage-user.conf /root/.config/containers/storage.conf\n\n# Create empty storage not to get errors when it's not mounted\n# See: https://www.redhat.com/sysadmin/image-stores-podman\nRUN mkdir -p \\\n    /var/lib/containers/shared/overlay-images \\ \n    /var/lib/containers/shared/overlay-layers \\\n    /var/lib/containers/shared/vfs-images \\\n    /var/lib/containers/shared/vfs-layers && \\\n    touch /var/lib/containers/shared/overlay-images/images.lock && \\\n    touch /var/lib/containers/shared/overlay-layers/layers.lock && \\\n    touch /var/lib/containers/shared/vfs-images/images.lock && \\\n    touch /var/lib/containers/shared/vfs-layers/layers.lock\n\n\n# AWS CLI\nRUN curl -f \"https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip\" -o \"awscliv2.zip\" && \\\n    unzip awscliv2.zip && \\\n    ./aws/install && \\\n    rm -rf aws*\n\n\n# Tini\nADD https://github.com/krallin/tini/releases/download/v0.19.0/tini /usr/bin/tini\nRUN chmod +x /usr/bin/tini\n\n\n# Kamu\nRUN wget -q https://github.com/kamu-data/kamu-cli/releases/download/v$KAMU_VERSION/kamu-cli-x86_64-unknown-linux-gnu.tar.gz && \\\n    tar -xf kamu-cli-x86_64-unknown-linux-gnu.tar.gz && \\\n    chmod +x kamu-cli-x86_64-unknown-linux-gnu/kamu && \\\n    mv kamu-cli-x86_64-unknown-linux-gnu/kamu /usr/local/bin/ && \\\n    rm -rf kamu-cli-x86_64-unknown-linux-gnu* && \\\n    echo \"source <(kamu completions bash)\" >> /root/.bashrc && rm kamu-cli-x86_64-unknown-linux-gnu.tar.gz\nCOPY .kamuconfig /.kamuconfig\n\n\nRUN mkdir -p /opt/kamu/workspace\nWORKDIR /opt/kamu/workspace\nENTRYPOINT [\"/usr/bin/tini\", \"--\"]\nCMD [\"bash\"]\n"
}