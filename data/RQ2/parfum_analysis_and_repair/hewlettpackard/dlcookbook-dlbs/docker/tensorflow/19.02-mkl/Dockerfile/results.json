{
  "startTime": 1674249581995,
  "endTime": 1674249582712,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 52,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 25
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# https://www.tensorflow.org/performance/performance_guide\nFROM ubuntu:16.04\n\nMAINTAINER Craig Citro <craigcitro@google.com>\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n        numactl \\\n        build-essential \\\n        curl \\\n        git \\\n        libcurl3-dev \\\n        libfreetype6-dev \\\n        libpng12-dev \\\n        libzmq3-dev \\\n        pkg-config \\\n        python-dev \\\n        rsync \\\n        software-properties-common \\\n        unzip \\\n        zip \\\n        zlib1g-dev \\\n        openjdk-8-jdk \\\n        openjdk-8-jre-headless \\\n        && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/*\n\n# This will install latest 'pip', 'setuptools' and 'wheel'.\nRUN curl -fSsL -O https://bootstrap.pypa.io/get-pip.py && \\\n    python get-pip.py && \\\n    rm get-pip.py\n\nRUN pip --no-cache-dir install \\\n        absl-py \\\n        bleach \\\n        future \\\n        h5py \\\n        ipykernel \\\n        jupyter \\\n        matplotlib \\\n        numpy \\\n        pandas \\\n        protobuf \\\n        scikit-learn \\\n        scipy \\\n        six \\\n        sklearn \\\n        mock \\\n        && \\\n    python -m ipykernel.kernelspec\n\n# I think this is required due to some bug (assuming this will build tensorflow/19.02-mkl: \"d9d5ab289d08da9b3fa0a4feccf8dfa87a7b669e\").\nRUN pip install --no-cache-dir keras_applications==1.0.6 \\\n                keras_preprocessing==1.0.5 \\\n                tf-estimator-nightly==1.12.0.dev20181203 \\\n                --no-deps\n\n# Set up our notebook config.\nCOPY jupyter_notebook_config.py /root/.jupyter/\n\n# Jupyter has issues with being run directly:\n#   https://github.com/ipython/ipython/issues/7062\n# We just add a little wrapper script.\nCOPY run_jupyter.sh /\n\n# Set up Bazel.\n\n# Running bazel inside a `docker build` command causes trouble, cf:\n#   https://github.com/bazelbuild/bazel/issues/134\n# The easiest solution is to set up a bazelrc file forcing --batch.\nRUN echo \"startup --batch\" >>/etc/bazel.bazelrc\n# Similarly, we need to workaround sandboxing issues:\n#   https://github.com/bazelbuild/bazel/issues/418\nRUN echo \"build --spawn_strategy=standalone --genrule_strategy=standalone\" \\\n    >>/etc/bazel.bazelrc\n# Install the most recent bazel release.\nENV BAZEL_VERSION 0.19.2\nWORKDIR /\nRUN mkdir /bazel && \\\n    cd /bazel && \\\n    curl -H \"User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.133 Safari/537.36\" -fSsL -O https://github.com/bazelbuild/bazel/releases/download/$BAZEL_VERSION/bazel-$BAZEL_VERSION-installer-linux-x86_64.sh && \\\n    curl -H \"User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.133 Safari/537.36\" -fSsL -o /bazel/LICENSE.txt https://raw.githubusercontent.com/bazelbuild/bazel/master/LICENSE && \\\n    chmod +x bazel-*.sh && \\\n    ./bazel-$BAZEL_VERSION-installer-linux-x86_64.sh && \\\n    cd / && \\\n    rm -f /bazel/bazel-$BAZEL_VERSION-installer-linux-x86_64.sh\n\n# Download and build TensorFlow.\nARG version=master\nRUN git clone https://github.com/tensorflow/tensorflow.git && cd tensorflow &&\\\n    git reset --hard $version && git submodule update\nWORKDIR /tensorflow\n\n# Configure the build for our CUDA configuration.\nENV CI_BUILD_PYTHON python\nENV TF_NEED_CUDA 0\nENV TF_NEED_MKL 1\nENV TF_DOWNLOAD_MKL 1\n\n# https://software.intel.com/en-us/articles/intel-optimization-for-tensorflow-installation-guide\n\nRUN tensorflow/tools/ci_build/builds/configured CPU \\\n    bazel build -c opt --config=opt --config=mkl \\\n      tensorflow/tools/pip_package:build_pip_package && \\\n      bazel-bin/tensorflow/tools/pip_package/build_pip_package /tmp/pip && \\\n    pip --no-cache-dir install --upgrade /tmp/pip/tensorflow-*.whl && \\\n    rm -rf /tmp/pip && \\\n    rm -rf /root/.cache\n# Clean up pip wheel and Bazel cache when done.\n\nWORKDIR /root\n\n# TensorBoard\nEXPOSE 6006\n# IPython\nEXPOSE 8888\n\nCMD [\"/bin/bash\"]\n"
}