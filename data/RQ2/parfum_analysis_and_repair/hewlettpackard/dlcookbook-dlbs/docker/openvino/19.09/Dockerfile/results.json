{
  "startTime": 1674248924230,
  "endTime": 1674248925311,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 69
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 11
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 69
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 11
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 69
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 11
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:18.04\n\n# System dependencies\nRUN apt-get update && apt-get -y upgrade && apt-get autoremove -y\nRUN apt install -y --no-install-recommends software-properties-common && \\\n    add-apt-repository ppa:deadsnakes/ppa && rm -rf /var/lib/apt/lists/*;\nRUN apt-get install -y --no-install-recommends \\\n        numactl \\\n        build-essential \\\n        cpio \\\n        curl \\\n        git \\\n        lsb-release \\\n        pciutils \\\n        python3.5 \\\n        python3.5-dev \\\n        python3-pip \\\n        python3-setuptools \\\n        sudo \\\n        mc \\\n        vim && rm -rf /var/lib/apt/lists/*;\n\nADD l_openvino_toolkit* /openvino/\nARG OPENVINO_DIR=/opt/intel/openvino\n\n# OpenVINO dependencies\nRUN cd /openvino/ && \\\n    ./install_openvino_dependencies.sh\n\nRUN pip3 install --no-cache-dir wheel\nRUN pip3 install --no-cache-dir numpy pyyaml\n\n# OpenVINO itself\nRUN cd /openvino/ && \\\n    sed -i 's/decline/accept/g' silent.cfg && \\\n    ./install.sh --silent silent.cfg\n\n# Model Optimizer\nRUN cd ${OPENVINO_DIR}/deployment_tools/model_optimizer/install_prerequisites && \\\n    ./install_prerequisites.sh\n\n# Model ZOO\nRUN cd ${OPENVINO_DIR}/deployment_tools/open_model_zoo/tools/downloader && \\\n    pip3 install --no-cache-dir -r ./requirements.in\n\n# Benchmark APP (SHELL thing: https://stackoverflow.com/a/25423366)\nSHELL [\"/bin/bash\", \"-c\"]\nRUN mkdir /opt/intel/openvino_benchmark_app && \\\n    cd /opt/intel/openvino_benchmark_app && \\\n    source ${OPENVINO_DIR}/bin/setupvars.sh && \\\n    cmake -DCMAKE_BUILD_TYPE=Release ${OPENVINO_DIR}/deployment_tools/inference_engine/samples && \\\n    make -j\"$(nproc)\" benchmark_app\nSHELL [\"/bin/sh\", \"-c\"]\n\n# Clean up\nRUN apt autoremove -y && \\\n    rm -rf /openvino /var/lib/apt/lists/*\n\nENV OPENVINO_DIR=${OPENVINO_DIR}\n\n# For interactive shells (docker run -i ...).\nRUN echo \"source ${OPENVINO_DIR}/bin/setupvars.sh\" >> /root/.bashrc\n\nCMD [\"/bin/bash\"]\n"
}