{
  "startTime": 1674248203934,
  "endTime": 1674248204705,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 78,
        "lineEnd": 86,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 89,
        "lineEnd": 89,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 99,
        "lineEnd": 99,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 100,
        "lineEnd": 100,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 102,
        "lineEnd": 102,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 103,
        "lineEnd": 103,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 104,
        "lineEnd": 104,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 105,
        "lineEnd": 105,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 106,
        "lineEnd": 106,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 108,
        "lineEnd": 117,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 100,
        "lineEnd": 100,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 103,
        "lineEnd": 103,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 104,
        "lineEnd": 104,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 105,
        "lineEnd": 105,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 106,
        "lineEnd": 106,
        "columnStart": 4,
        "columnEnd": 32
      }
    }
  ],
  "repairedDockerfile": "# Docker best practices/commands:\n# https://docs.docker.com/engine/userguide/eng-image/dockerfile_best-practices/\n\nFROM alpine:3.8\n\nRUN adduser -Ds /bin/bash docker\n\n###############################################################################\nUSER docker\nCOPY . /home/docker/hubot-core-org/\nRUN mkdir -p /home/docker/hubot/node_modules\nRUN chmod 777 /home/docker/hubot/\nRUN chmod 777 /home/docker/hubot/node_modules\nWORKDIR /home/docker/hubot\n\n###############################################################################\nUSER root\n\n#http://askubuntu.com/questions/506158/unable-to-initialize-frontend-dialog-when-using-ssh\nENV DEBIAN_FRONTEND=noninteractive\n\nARG http_proxy\nARG https_proxy\n\n# Steps from:\n# https://github.com/HewlettPackard/hpe-oneview-hubot/wiki/Getting-Started\n\n# 1. Clone repo\n\n# 2. Install node.js + npm (etc.)\nRUN apk --no-cache add \\\n    curl                                \\\n    libcurl                             \\\n    sudo                                \\\n    bash                                \\\n    php5-curl\n#RUN curl -sL https://deb.nodesource.com/setup_8.x | sudo -E bash -\n#RUN apk add --no-cache aptitude\n#RUN aptitude install -y\nRUN apk --no-cache add --update \\\n    jq                          \\\n    nodejs npm\n\nRUN node -v\n\nRUN npm config set proxy $http_proxy\nRUN npm config set http-proxy $http_proxy\nRUN npm config set https-proxy $http_proxy\n\n\n# 3. Install Hubot\n\nRUN npm install -g yo generator-hubot && npm cache clean --force;\n\n###############################################################################\nUSER docker\n\nRUN npm config set proxy $http_proxy\nRUN npm config set http-proxy $http_proxy\nRUN npm config set https-proxy $http_proxy\n\n\nRUN echo \"n\" | yo hubot --defaults --name=\"bot\" --adapter=slack\n\n###############################################################################\nUSER root\n\n# Avoid warnings for deprecated dependencies:\nRUN npm install -g minimatch@^3.0.4; npm cache clean --force; \\\n    npm install -g graceful-fs@^4.2.2;\n\nRUN npm install gulp; npm cache clean --force; \\\n    npm install gulp-task-listing@^1.1.0;\n\n###############################################################################\nUSER docker\n\n\nRUN npm install hubot@3.x                \\\n    amqp@^0.2.7                          \\\n    d3@^5.9.7                            \\\n    jsdom@^15.1.1                        \\\n    svg2png@^4.1.1                       \\\n    fuzzyset.js@0.0.8                    \\\n    compromise@^11.14.2                  \\\n    request@^2.88.0                      \\\n    request-promise@^4.2.4; npm cache clean --force;\n\n\nRUN npm install del@^5.0.0; npm cache clean --force;\n\n###############################################################################\nUSER root\n\n# 4. Install gulp (etc.)\n\nWORKDIR /home/docker/hubot-core-org\n\n# Avoid warnings for deprecated dependencies:\nRUN npm install -g minimatch@^3.0.4; npm cache clean --force; \\\n    npm install -g graceful-fs@^4.2.2;\n\nRUN npm install -g gulp; npm cache clean --force; \\\n    npm install; \\\n    npm install gulp; \\\n    npm install gulp-task-listing@^1.1.0; \\\n    npm install fancy-log@^1.3.3\n\nRUN npm install hubot@3.x                \\\n    amqp@^0.2.7                          \\\n    d3@^5.9.7                            \\\n    jsdom@^15.1.1                        \\\n    svg2png@^4.1.1                       \\\n    fuzzyset.js@0.0.8                    \\\n    compromise@^11.14.2                  \\\n    request@^2.88.0                      \\\n    request-promise@^4.2.4               \\\n    del@^5.0.0; npm cache clean --force;\n\n\n# 5. Copy config file\n# 6. Update IP (docker_run.sh handles this)\n# 7. Run gulp watch (docker_go.sh handles this, called by docker_run.sh)\n# 8. Run bin/hubot (docker_go.sh handles this, called by docker_run.sh)\n# 9. Test your bot (instructions presented by docker_go.sh)\n\nCOPY docker_entry.sh /usr/local/bin/\nCOPY docker_go.sh /go.sh\n\nENTRYPOINT [\"sh\", \"/usr/local/bin/docker_entry.sh\"]\n"
}