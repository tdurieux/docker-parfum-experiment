{
  "startTime": 1674249986508,
  "endTime": 1674249987088,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 87
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 75,
        "columnEnd": 86
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 41
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# BUILD\n#docker build \\\n#--force-rm=true \\\n#-t squest \\\n#-f docker/squest.Dockerfile .\n\n# RUN\n#docker run -it --rm \\\n#-p 8000:8000 \\\n#squest\n\nFROM python:3.9-slim-bullseye\n\n# Set environment variables\nENV PYTHONUNBUFFERED 1\nENV DJANGO_SETTINGS_MODULE=Squest.settings\nENV POETRY_VERSION=1.1.12\nENV NODE_VERSION=16.13.2\nENV NVM_VERSION=v0.38.0\nENV NVM_DIR=/root/.nvm\nENV PATH=\"/root/.nvm/versions/node/v${NODE_VERSION}/bin/:${PATH}\"\nENV RUN_DEPS=\"git default-libmysqlclient-dev default-mysql-client graphviz curl libldap2-dev libsasl2-dev\"\nENV BUID_DEPS=\"gcc\"\n\n# Install system deps\nRUN set -ex \\\n    && apt-get update \\\n    && apt-get install -y --no-install-recommends $RUN_DEPS $BUID_DEPS \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Install poetry\nRUN pip install --no-cache-dir \"poetry==$POETRY_VERSION\"\n\n# Install node and NPM\nRUN curl -f -o- https://raw.githubusercontent.com/creationix/nvm/${NVM_VERSION}/install.sh | bash\nRUN . \"$NVM_DIR/nvm.sh\" && nvm install ${NODE_VERSION}\nRUN . \"$NVM_DIR/nvm.sh\" && nvm use ${NODE_VERSION}\nRUN . \"$NVM_DIR/nvm.sh\" && nvm alias default v${NODE_VERSION}\n\n# Prepare a path to receive the project\nRUN mkdir /app\nWORKDIR /app\n\n# Copy only requirements to cache them in docker layer\nCOPY poetry.lock pyproject.toml package.json package-lock.json /app/\n\n# Add the wait script to the image\nADD https://github.com/ufoscout/docker-compose-wait/releases/download/2.9.0/wait /wait\nRUN chmod +x /wait\n\n# Project libraries installation\nRUN cd /app && poetry config virtualenvs.create false && poetry install && npm install && npm cache clean --force;\n\n# Copy the full project\nCOPY . /app/\n\n# Create media and backup folders\nRUN mkdir -p /app/media /app/backup /app/static\n\n# Create a group and user to run our app\nARG APP_USER=django\nRUN groupadd -r ${APP_USER} && useradd --no-log-init -r --home /app -g ${APP_USER} ${APP_USER}\n\n# Give rights to our user on all files\nRUN chown -R ${APP_USER}:${APP_USER} /app\n\n# Change to a non-root user\nUSER ${APP_USER}:${APP_USER}\nWORKDIR /app\n\n# Default entry point\nCMD [\"/app/docker/entrypoint.sh\"]\n"
}