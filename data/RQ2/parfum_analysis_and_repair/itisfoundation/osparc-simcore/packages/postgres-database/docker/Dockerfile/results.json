{
  "startTime": 1674255823882,
  "endTime": 1674255824990,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 5,
        "columnEnd": 69
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.6-slim as base\n\nLABEL maintainer=sanderegg\n\n# Sets utf-8 encoding for Python et al\nENV LANG=C.UTF-8\n# Turns off writing .pyc files; superfluous on an ephemeral container.\nENV PYTHONDONTWRITEBYTECODE=1 \\\n  VIRTUAL_ENV=/home/scu/.venv\n# Ensures that the python and pip executables used\n# in the image will be those from our virtualenv.\nENV PATH=\"${VIRTUAL_ENV}/bin:$PATH\"\n\n\nFROM base as build\n\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends \\\n    build-essential \\\n    git \\\n  && apt-get clean \\\n  && rm -rf /var/lib/apt/lists/*\n\n\n# NOTE: python virtualenv is used here such that installed packages may be moved to production image easily by copying the venv\nRUN python -m venv \"${VIRTUAL_ENV}\"\n\nRUN pip --no-cache-dir install --upgrade \\\n  pip~=22.0  \\\n  wheel \\\n  setuptools\n\nARG GIT_BRANCH\nARG GIT_REPOSITORY\n\nRUN git clone --single-branch --branch ${GIT_BRANCH} ${GIT_REPOSITORY} osparc-simcore \\\n  && pip install --no-cache-dir osparc-simcore/packages/postgres-database[migration]\n\nFROM base as production\n\nENV PYTHONOPTIMIZE=TRUE\n\nWORKDIR /home/scu\n\n# bring installed package without build tools\nCOPY --from=build ${VIRTUAL_ENV} ${VIRTUAL_ENV}\nCOPY entrypoint.bash /home/entrypoint.bash\n\nRUN chmod +x /home/entrypoint.bash\n\nENV POSTGRES_USER=scu \\\n  POSTGRES_PASSWORD=adminadmin \\\n  POSTGRES_HOST=postgres \\\n  POSTGRES_PORT=5432 \\\n  POSTGRES_DB=simcoredb\n\nENTRYPOINT [ \"/bin/bash\", \"/home/entrypoint.bash\" ]\nCMD [ \"sc-pg\", \"upgrade\" ]\n"
}