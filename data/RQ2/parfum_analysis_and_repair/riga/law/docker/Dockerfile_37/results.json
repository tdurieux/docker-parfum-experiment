{
  "startTime": 1674255171487,
  "endTime": 1674255172334,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 17,
        "columnEnd": 39
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 49,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 90
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 87,
        "lineEnd": 87,
        "columnStart": 4,
        "columnEnd": 68
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 92,
        "lineEnd": 93,
        "columnStart": 4,
        "columnEnd": 76
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM centos:7\n\n# labels\nLABEL law.version=\"0.1.7\"\nLABEL law.image_name=\"riga/law\"\nLABEL law.image_tag=\"py37\"\nLABEL law.image_dir=\"law-py37\"\nLABEL law.image_python_major=\"3\"\nLABEL law.image_python_minor=\"7\"\nLABEL law.image_python_patch=\"13\"\nLABEL law.image_python=\"3.7.13\"\nLABEL law.image_python_mm=\"3.7\"\n\n# law specific environment variables\nENV LAW_SANDBOX docker::riga/law:py37\nENV LAW_IMAGE_NAME law-py37\nENV LAW_IMAGE_TAG py37\nENV LAW_IMAGE_PYTHON_MAJOR 3\nENV LAW_IMAGE_PYTHON_MINOR 7\nENV LAW_IMAGE_PYTHON_PATCH 13\nENV LAW_IMAGE_PYTHON ${LAW_IMAGE_PYTHON_MAJOR}.${LAW_IMAGE_PYTHON_MINOR}.${LAW_IMAGE_PYTHON_PATCH}\nENV LAW_IMAGE_PYTHON_MM ${LAW_IMAGE_PYTHON_MAJOR}.${LAW_IMAGE_PYTHON_MINOR}\nENV LAW_IMAGE_SOURCE_DIR /root/law\n\n# basic environment variables\nENV CPATH /usr/local/include:/usr/include:${CPATH}\nENV LD_LIBRARY_PATH /usr/local/lib:/usr/local/lib64:/usr/lib:/usr/lib64:${LD_LIBRARY_PATH}\n\n# exposed ports\nEXPOSE 8082\n\n# bash files\nCOPY bash_profile /root/.bash_profile\nCOPY bashrc /root/.bashrc\n\n# installation workdir\nWORKDIR /root/install\n\n# prepare yum\nRUN yum -y update; yum clean all\nRUN yum -y install yum-plugin-priorities yum-utils; rm -rf /var/cache/yum yum clean all\nRUN yum -y install epel-release; rm -rf /var/cache/yum yum clean all\n\n# update locales\nRUN sed -i -r 's/^(override_install_langs=.+)/#\\1/' /etc/yum.conf\nRUN yum -y reinstall glibc-common\n\n# basic software\nRUN yum -y groupinstall development; yum clean all\nRUN yum -y install gcc gcc-c++ libffi-devel openssl-devel glib2-devel libattr-devel openldap-devel \\\n    zlib-devel bzip2 bzip2-devel json-c-devel ncurses-devel curl-devel readline-devel tk-devel \\\n    sqlite sqlite-devel libsqlite3x-devel which wget nano screen git git-lfs cmake cmake3; rm -rf /var/cache/yum \\\n    yum clean all\nRUN cd /usr/bin; curl -f https://getmic.ro | bash\n\n# python via pyenv\nENV PYENV_ROOT /root/.pyenv\nENV PYENV_VERSION ${LAW_IMAGE_PYTHON}\nENV PYENV_VERSION_MM ${LAW_IMAGE_PYTHON_MM}\nENV PYENV_PREFIX ${PYENV_ROOT}/versions/${PYENV_VERSION}\nENV PYENV_INCLUDE_DIR ${PYENV_PREFIX}/include/python${PYENV_VERSION_MM}m\nENV PYENV_LIB_DIR ${PYENV_PREFIX}/lib\nENV PATH ${PYENV_ROOT}/bin:${PYENV_ROOT}/shims:${PATH}\nENV CPATH ${PYENV_INCLUDE_DIR}:${CPATH}\nRUN curl -f https://pyenv.run | bash\nRUN PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install ${PYENV_VERSION}\nRUN echo $'\\n\\\neval \"$( pyenv init - )\"\\n\\\neval \"$( pyenv virtualenv-init - )\"' >> /root/.bashrc\n\n# boost\nENV BOOST_ROOT /usr/local\nRUN wget -nv https://boostorg.jfrog.io/artifactory/main/release/1.79.0/source/boost_1_79_0.tar.gz && \\\n    tar -xzf boost_1_79_0.tar.gz && \\\n    cd boost_1_79_0 && \\\n    ./bootstrap.sh --with-libraries=system,thread,python --with-python=\"$( pyenv which python )\" && \\\n    perl -pi -e 's!(\\Qincludes ?= $(prefix)/include/python$(version)\\E)!\\1m!' tools/build/src/tools/python.jam && \\\n    ./b2 install --prefix=${BOOST_ROOT} && \\\n    ldconfig && \\\n    cd .. && \\\n    rm -rf boost_1_79_0 && \\\n    rm boost_1_79_0.tar.gz\n\n# WLCG software\nRUN rpm -Uvh https://repo.opensciencegrid.org/osg/3.6/osg-3.6-el7-release-latest.rpm\nRUN yum-config-manager --add-repo http://linuxsoft.cern.ch/cern/centos/7/cern/x86_64\nRUN yum -y update; yum clean all\nRUN yum -y install CERN-CA-certs osg-ca-certs osg-voms voms-clients; rm -rf /var/cache/yum yum clean all\n\n# gfal2\nENV CPATH /usr/local/include/gfal2:${CPATH}\nENV GFAL_PLUGIN_DIR /usr/local/lib64/gfal2-plugins\nRUN yum -y install lfc-devel dpm-devel srm-ifce-devel dcap-devel globus-gass-copy-devel \\\n    davix-devel xrootd-client-devel libssh2-devel gtest-devel libuuid-devel; rm -rf /var/cache/yum yum clean all\nRUN git clone https://gitlab.cern.ch/dmc/gfal2.git && \\\n    cd gfal2 && \\\n    git checkout tags/v2.20.5 && \\\n    mkdir build && \\\n    cd build && \\\n    cmake .. \\\n        -DCMAKE_INSTALL_PREFIX=/usr/local \\\n        -DMAIN_DOC=FALSE \\\n        -DSKIP_TESTS=TRUE && \\\n    make && \\\n    make install && \\\n    cd ../.. && \\\n    rm -rf gfal2\nRUN git clone https://gitlab.cern.ch/dmc/gfal2-bindings.git && \\\n    cd gfal2-bindings && \\\n    git checkout tags/v1.11.1 && \\\n    mkdir build && \\\n    cd build && \\\n    cmake .. \\\n        -DGFAL2_INCLUDE_DIRS=/usr/local/include/gfal2 \\\n        -DPYTHON_EXECUTABLE= \\\n        -DPYTHON_EXECUTABLE_3=\"$( pyenv which python )\" \\\n        -DPYTHON_EXECUTABLE_${LAW_IMAGE_PYTHON_MM}=\"$( pyenv which python )\" \\\n        -DPYTHON_LIBRARIES=\"${PYENV_LIB_DIR}\" \\\n        -DPYTHON_LIBRARIES_${LAW_IMAGE_PYTHON_MM}=\"${PYENV_LIB_DIR}\" \\\n        -DSKIP_DOC=TRUE \\\n        -DSKIP_TESTS=TRUE && \\\n    make && \\\n    make install && \\\n    cd ../.. && \\\n    rm -rf gfal2-bindings\nRUN git clone https://github.com/cern-it-sdc-id/gfal2-dropbox.git && \\\n    cd gfal2-dropbox && \\\n    mkdir build && \\\n    cd build && \\\n    cmake .. \\\n        -DCMAKE_INSTALL_PREFIX=/usr/local \\\n        -DGFAL2_INCLUDE_DIRS=/usr/local/include/gfal2 && \\\n    make && \\\n    make install && \\\n    cd ../.. && \\\n    rm -rf gfal2-dropbox\n\n# python packages\nRUN pip install --no-cache-dir --upgrade pip\nRUN pip install --no-cache-dir --upgrade setuptools\nRUN pip install --no-cache-dir readline\nRUN pip install --no-cache-dir slackclient\nRUN pip install --no-cache-dir python-telegram-bot\nRUN pip install --no-cache-dir flake8\nRUN pip install --no-cache-dir flake8-quotes\nRUN pip install --no-cache-dir flake8-commas\nRUN pip install --no-cache-dir pytest-cov\n\n# cleanup installation workdir\nWORKDIR /root\nRUN rm -rf install\n\n# install law master\nRUN git clone https://github.com/riga/law \"${LAW_IMAGE_SOURCE_DIR}\" && \\\n    cd \"${LAW_IMAGE_SOURCE_DIR}\" && \\\n    pip install --no-cache-dir .\nWORKDIR ${LAW_IMAGE_SOURCE_DIR}\n\n# shell initialization\nRUN echo 'source \"$( law completion )\" \"\"' >> /root/.bash_profile\n\n# init command\nCMD bash --login\n"
}