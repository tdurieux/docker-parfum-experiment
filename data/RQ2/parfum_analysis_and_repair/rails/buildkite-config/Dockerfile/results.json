{
  "startTime": 1674216005552,
  "endTime": 1674216006856,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 7,
        "columnEnd": 66
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 7,
        "columnEnd": 68
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 7,
        "columnEnd": 56
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 122,
        "lineEnd": 122,
        "columnStart": 29,
        "columnEnd": 40
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 119,
        "lineEnd": 119,
        "columnStart": 11,
        "columnEnd": 27
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 146,
        "lineEnd": 146,
        "columnStart": 11,
        "columnEnd": 27
      }
    },
    {
      "rule": "gemUpdateSystemRmRootGem",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 8,
        "columnEnd": 41
      }
    },
    {
      "rule": "gemUpdateSystemRmRootGem",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 45,
        "columnEnd": 70
      }
    },
    {
      "rule": "gemUpdateNoDocument",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 8,
        "columnEnd": 41
      }
    },
    {
      "rule": "gemUpdateNoDocument",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 45,
        "columnEnd": 70
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 129,
        "lineEnd": 129,
        "columnStart": 29,
        "columnEnd": 46
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 156,
        "lineEnd": 156,
        "columnStart": 29,
        "columnEnd": 46
      }
    }
  ],
  "repairedDockerfile": "ARG RUBY_IMAGE\nFROM ${RUBY_IMAGE:-ruby:latest}\n\nARG BUNDLER\nARG RUBYGEMS\n  RUN mkdir -p /usr/local/etc \\\n  && { \\\n    echo 'install: --no-document'; \\\n    echo 'update: --no-document'; \\\n  } >> /usr/local/etc/gemrc;\n  RUN mkdir -p /usr/local/etc \\\n  && { \\\n    echo 'install: --no-document'; \\\n    echo 'update: --no-document'; \\\n  } >> /usr/local/etc/gemrc;\nRUN echo \"--- :ruby: Updating RubyGems and Bundler\" \\\n    && (gem update --system ${RUBYGEMS:-} || gem update --system 2.7.8) \\\n    && (gem install bundler -v \"${BUNDLER:->= 0}\" || gem install bundler -v \"< 2\") \\\n    && ruby --version && gem --version && bundle --version \\\n    && echo \"--- :package: Installing system deps\" \\\n    && codename=\"$(. /etc/os-release; x=\"${VERSION_CODENAME-${VERSION#*(}}\"; echo \"${x%%[ )]*}\")\" \\\n    && if [ \"$codename\" = jessie ]; then \\\n        # jessie-updates is gone\n        sed -i -e '/jessie-updates/d' /etc/apt/sources.list \\\n        && echo 'deb http://archive.debian.org/debian jessie-backports main' > /etc/apt/sources.list.d/backports.list \\\n        && echo 'Acquire::Check-Valid-Until \"false\";' > /etc/apt/apt.conf.d/backports-is-unsupported; \\\n    fi \\\n    # Pre-requirements\n    && if ! which gpg || ! which curl; then \\\n        apt-get update \\\n        && apt-get install -y --no-install-recommends \\\n            gnupg curl; \\\n    fi \\\n    # Postgres apt sources \\\n    && curl -f -sS https://www.postgresql.org/media/keys/ACCC4CF8.asc | APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=1 apt-key add - \\\n    && echo \"deb http://apt.postgresql.org/pub/repos/apt/ ${codename}-pgdg main\" > /etc/apt/sources.list.d/pgdg.list \\\n    # Node apt sources\n    && curl -f -sS https://deb.nodesource.com/gpgkey/nodesource.gpg.key | APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=1 apt-key add - \\\n    && echo \"deb http://deb.nodesource.com/node_16.x ${codename} main\" > /etc/apt/sources.list.d/nodesource.list \\\n    # Yarn apt sources\n    && curl -f -sS https://dl.yarnpkg.com/debian/pubkey.gpg | APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=1 apt-key add - \\\n    && echo \"deb http://dl.yarnpkg.com/debian/ stable main\" > /etc/apt/sources.list.d/yarn.list \\\n    # Install all the things\n    && apt-get update \\\n    #  buildpack-deps\n    && apt-get install -y --no-install-recommends \\\n        autoconf \\\n        automake \\\n        bzip2 \\\n        dpkg-dev \\\n        file \\\n        g++ \\\n        gcc \\\n        imagemagick \\\n        libbz2-dev \\\n        libc6-dev \\\n        libcurl4-openssl-dev \\\n        libdb-dev \\\n        libevent-dev \\\n        libffi-dev \\\n        libgdbm-dev \\\n        libgeoip-dev \\\n        libglib2.0-dev \\\n        libjpeg-dev \\\n        libkrb5-dev \\\n        liblzma-dev \\\n        libmagickcore-dev \\\n        libmagickwand-dev \\\n        libncurses5-dev \\\n        libncursesw5-dev \\\n        libpng-dev \\\n        libpq-dev \\\n        libreadline-dev \\\n        libsqlite3-dev \\\n        libssl-dev \\\n        libtool \\\n        libvips-dev \\\n        libwebp-dev \\\n        libxml2-dev \\\n        libxslt-dev \\\n        libyaml-dev \\\n        make \\\n        patch \\\n        unzip \\\n        xz-utils \\\n        zlib1g-dev \\\n        \\\n# https://lists.debian.org/debian-devel-announce/2016/09/msg00000.html\n        $( \\\n# if we use just \"apt-cache show\" here, it returns zero because \"Can't select versions from package 'libmysqlclient-dev' as it is purely virtual\", hence the pipe to grep\n            if apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \\\n                echo 'default-libmysqlclient-dev'; \\\n            else \\\n                echo 'libmysqlclient-dev'; \\\n            fi \\\n        ) \\\n    #  specific dependencies for the rails build\n    && apt-get install -y --no-install-recommends \\\n        postgresql-client default-mysql-client sqlite3 \\\n        git nodejs yarn lsof \\\n        ffmpeg mupdf mupdf-tools poppler-utils \\\n    # await (for waiting on dependent services)\n    && curl -fLsS -o /tmp/await-linux-amd64 https://github.com/betalo-sweden/await/releases/download/v0.4.0/await-linux-amd64 \\\n    && install /tmp/await-linux-amd64 /usr/local/bin/await \\\n    # clean up\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/* /tmp/* \\\n    && mkdir /rails && rm -rf /root/.gem;\n\nWORKDIR /rails\nENV RAILS_ENV=test RACK_ENV=test\nENV JRUBY_OPTS=\"--dev -J-Xmx1024M\"\n\nADD .buildkite/await-all .buildkite/runner /usr/local/bin/\nRUN chmod +x /usr/local/bin/await-all /usr/local/bin/runner\n\n# Wildcard ignores missing files; .empty ensures ADD always has at least\n# one valid source: https://stackoverflow.com/a/46801962\nADD .buildkite/.empty actioncable/package.jso[n] actioncable/\nADD .buildkite/.empty actiontext/package.jso[n] actiontext/\nADD .buildkite/.empty actionview/package.jso[n] actionview/\nADD .buildkite/.empty activestorage/package.jso[n] activestorage/\nADD .buildkite/.empty package.jso[n] yarn.loc[k] .yarnr[c] ./\n\nRUN rm -f .empty */.empty \\\n    && find . -maxdepth 1 -type d -empty -exec rmdir '{}' '+' \\\n    && if [ -f package.json ]; then \\\n        echo \"--- :javascript: Installing JavaScript deps\" \\\n        && yarn install \\\n        && yarn cache clean; yarn cache clean; \\\n    elif [ -f actionview/package.json ]; then \\\n        echo \"--- :javascript: Installing JavaScript deps\" \\\n        && (cd actionview && npm install); npm cache clean --force; \\\n    fi\n\nADD */*.gemspec tmp/\nADD .buildkite/.empty railties/exe/* railties/exe/\nADD Gemfile Gemfile.lock RAILS_VERSION rails.gemspec ./\n\nRUN rm -f railties/exe/.empty \\\n    && find railties/exe -maxdepth 0 -type d -empty -exec rmdir '{}' '+' \\\n    && echo \"--- :bundler: Installing Ruby deps\" \\\n    && (cd tmp && for f in *.gemspec; do d=\"$(basename -s.gemspec \"$f\")\"; mkdir -p \"../$d\" && mv \"$f\" \"../$d/\"; done) \\\n    && rm Gemfile.lock && bundle install -j 8 && cp Gemfile.lock tmp/Gemfile.lock.updated \\\n    && rm -rf /usr/local/bundle/cache \\\n    && echo \"--- :floppy_disk: Copying repository contents\"\n\nADD . ./\n\nRUN mv -f tmp/Gemfile.lock.updated Gemfile.lock \\\n    && if [ -f package.json ]; then \\\n        echo \"--- :javascript: Building JavaScript package\" \\\n        && (cd actionview && yarn build) \\\n        && if [ -f railties/test/isolation/assets/package.json ]; then \\\n            (cd railties/test/isolation/assets && yarn install); \\\n        fi \\\n        && yarn cache clean; yarn cache clean; \\\n    fi\n"
}