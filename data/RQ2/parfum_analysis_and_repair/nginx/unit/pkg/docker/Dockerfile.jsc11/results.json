{
  "startTime": 1674251007153,
  "endTime": 1674251008417,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 7,
        "columnEnd": 118
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 7,
        "columnEnd": 104
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 7,
        "columnEnd": 99
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 7,
        "columnEnd": 58
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 7,
        "columnEnd": 85
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 7,
        "columnEnd": 58
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 7,
        "columnEnd": 137
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM openjdk:11-jdk as BUILDER\n\nLABEL maintainer=\"NGINX Docker Maintainers <docker-maint@nginx.com>\"\n\nRUN set -ex \\\n    && apt-get update \\\n    && apt-get install --no-install-recommends --no-install-suggests -y ca-certificates mercurial build-essential libssl-dev libpcre2-dev \\\n    && mkdir -p /usr/lib/unit/modules /usr/lib/unit/debug-modules \\\n    && hg clone https://hg.nginx.org/unit \\\n    && cd unit \\\n    && hg up 1.27.0 \\\n    && NCPU=\"$(getconf _NPROCESSORS_ONLN)\" \\\n    && DEB_HOST_MULTIARCH=\"$(dpkg-architecture -q DEB_HOST_MULTIARCH)\" \\\n    && CC_OPT=\"$(DEB_BUILD_MAINT_OPTIONS=\"hardening=+all,-pie\" DEB_CFLAGS_MAINT_APPEND=\"-Wp,-D_FORTIFY_SOURCE=2 -fPIC\" dpkg-buildflags --get CFLAGS)\" \\\n    && LD_OPT=\"$(DEB_BUILD_MAINT_OPTIONS=\"hardening=+all,-pie\" DEB_LDFLAGS_MAINT_APPEND=\"-Wl,--as-needed -pie\" dpkg-buildflags --get LDFLAGS)\" \\\n    && CONFIGURE_ARGS=\"--prefix=/usr \\\n                --state=/var/lib/unit \\\n                --control=unix:/var/run/control.unit.sock \\\n                --pid=/var/run/unit.pid \\\n                --log=/var/log/unit.log \\\n                --tmp=/var/tmp \\\n                --user=unit \\\n                --group=unit \\\n                --openssl \\\n                --libdir=/usr/lib/$DEB_HOST_MULTIARCH\" \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" $CONFIGURE_ARGS --cc-opt=\"$CC_OPT\" --ld-opt=\"$LD_OPT\" --modules=/usr/lib/unit/debug-modules --debug \\\n    && make -j $NCPU unitd \\\n    && install -pm755 build/unitd /usr/sbin/unitd-debug \\\n    && make clean \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" $CONFIGURE_ARGS --cc-opt=\"$CC_OPT\" --ld-opt=\"$LD_OPT\" --modules=/usr/lib/unit/modules \\\n    && make -j $NCPU unitd \\\n    && install -pm755 build/unitd /usr/sbin/unitd \\\n    && make clean \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" $CONFIGURE_ARGS --cc-opt=\"$CC_OPT\" --modules=/usr/lib/unit/debug-modules --debug \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" java --jars=/usr/share/unit-jsc-common/ \\\n    && make -j $NCPU java-shared-install java-install \\\n    && make clean \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" $CONFIGURE_ARGS --cc-opt=\"$CC_OPT\" --modules=/usr/lib/unit/modules \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" java --jars=/usr/share/unit-jsc-common/ \\\n    && make -j $NCPU java-shared-install java-install \\\n    && ldd /usr/sbin/unitd | awk '/=>/{print $(NF-1)}' | while read n; do dpkg-query -S $n; done | sed 's/^\\([^:]\\+\\):.*$/\\1/' | sort | uniq > /requirements.apt && rm -rf /var/lib/apt/lists/*;\n\nFROM openjdk:11-jdk\nCOPY docker-entrypoint.sh /usr/local/bin/\nCOPY --from=BUILDER /usr/sbin/unitd /usr/sbin/unitd\nCOPY --from=BUILDER /usr/sbin/unitd-debug /usr/sbin/unitd-debug\nCOPY --from=BUILDER /usr/lib/unit/ /usr/lib/unit/\nCOPY --from=BUILDER /requirements.apt /requirements.apt\nCOPY --from=BUILDER /usr/share/unit-jsc-common/ /usr/share/unit-jsc-common/\nRUN set -x \\\n    && if [ -f \"/tmp/libunit.a\" ]; then \\\n        mv /tmp/libunit.a /usr/lib/$(dpkg-architecture -q DEB_HOST_MULTIARCH)/libunit.a; \\\n        rm -f /tmp/libunit.a; \\\n    fi \\\n    && mkdir -p /var/lib/unit/ \\\n    && mkdir /docker-entrypoint.d/ \\\n    && addgroup --system unit \\\n    && adduser \\\n         --system \\\n         --disabled-login \\\n         --ingroup unit \\\n         --no-create-home \\\n         --home /nonexistent \\\n         --gecos \"unit user\" \\\n         --shell /bin/false \\\n         unit \\\n    && apt update \\\n    && apt --no-install-recommends --no-install-suggests -y install curl $(cat /requirements.apt) \\\n    && apt-get clean && rm -rf /var/lib/apt/lists/* \\\n    && rm -f /requirements.apt \\\n    && ln -sf /dev/stdout /var/log/unit.log\n\nSTOPSIGNAL SIGTERM\n\nENTRYPOINT [\"/usr/local/bin/docker-entrypoint.sh\"]\n\nCMD [\"unitd\", \"--no-daemon\", \"--control\", \"unix:/var/run/control.unit.sock\"]\n"
}