{
  "startTime": 1674215514053,
  "endTime": 1674215514997,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 2,
        "columnEnd": 83
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 2,
        "columnEnd": 55
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 21,
        "columnStart": 2,
        "columnEnd": 7
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 44,
        "lineEnd": 49,
        "columnStart": 2,
        "columnEnd": 6
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.9-slim\n\nLABEL \"repository\"=\"https://github.com/nitrictech/cli\"\nLABEL \"homepage\"=\"https://nitric.io\"\nLABEL org.opencontainers.image.description=\"The Nitric CLI, in a Docker container.\"\n\nENV GOLANG_VERSION 1.17.3\nENV GOLANG_SHA256 550f9845451c0c94be679faf116291e7807a8d78b43149f9506c1b15eb89008c\n\n# Install deps all in one step\nRUN apt-get update -y && \\\n  apt-get install --no-install-recommends -y \\\n  apt-transport-https \\\n  build-essential \\\n  ca-certificates \\\n  net-tools \\\n  curl \\\n  git \\\n  gnupg \\\n  software-properties-common \\\n  wget \\\n  unzip && \\\n  # Get all of the signatures we need all at once.\n  curl -fsSL https://deb.nodesource.com/gpgkey/nodesource.gpg.key  | apt-key add - && \\\n  curl -fsSL https://dl.yarnpkg.com/debian/pubkey.gpg              | apt-key add - && \\\n  curl -fsSL https://download.docker.com/linux/debian/gpg          | apt-key add - && \\\n  curl -fsSL https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add - && \\\n  curl -fsSL https://packages.microsoft.com/keys/microsoft.asc     | apt-key add - && \\\n  # IAM Authenticator for EKS\n  curl -fsSLo /usr/bin/aws-iam-authenticator https://amazon-eks.s3-us-west-2.amazonaws.com/1.10.3/2018-07-26/bin/linux/amd64/aws-iam-authenticator && \\\n  chmod +x /usr/bin/aws-iam-authenticator && \\\n  # AWS v2 cli\n  curl -f \"https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip\" -o \"awscliv2.zip\" && \\\n  unzip awscliv2.zip && \\\n  ./aws/install && \\\n  rm -rf aws && \\\n  # Add additional apt repos all at once\n  echo \"deb https://deb.nodesource.com/node_14.x $(lsb_release -cs) main\"                         | tee /etc/apt/sources.list.d/node.list && \\\n  echo \"deb https://dl.yarnpkg.com/debian/ stable main\"                                           | tee /etc/apt/sources.list.d/yarn.list && \\\n  echo \"deb [arch=amd64] https://download.docker.com/linux/debian $(lsb_release -cs) stable\"      | tee /etc/apt/sources.list.d/docker.list && \\\n  echo \"deb http://packages.cloud.google.com/apt cloud-sdk-$(lsb_release -cs) main\"               | tee /etc/apt/sources.list.d/google-cloud-sdk.list && \\\n  echo \"deb [arch=amd64] https://packages.microsoft.com/repos/azure-cli/ $(lsb_release -cs) main\" | tee /etc/apt/sources.list.d/azure.list && \\\n  # Install second wave of dependencies\n  apt-get update -y && \\\n  apt-get install --no-install-recommends -y \\\n  azure-cli \\\n  docker-ce \\\n  google-cloud-sdk \\\n  nodejs \\\n  yarn && \\\n  # Clean up the lists work\n  rm -rf /var/lib/apt/lists/*\n\n# Install Go\nRUN curl -fsSLo /tmp/go.tgz https://golang.org/dl/go${GOLANG_VERSION}.linux-amd64.tar.gz; \\\n  echo \"${GOLANG_SHA256}  /tmp/go.tgz\" | sha256sum -c -; \\\n  tar -C /usr/local -xzf /tmp/go.tgz; \\\n  rm /tmp/go.tgz; \\\n  export PATH=\"/usr/local/go/bin:$PATH\"; \\\n  go version\nENV GOPATH /workspace/go\nENV PATH $GOPATH/bin:/usr/local/go/bin:$PATH\n\n# Passing --build-arg PULUMI_VERSION=vX.Y.Z will use that version\n# of the SDK. Otherwise, we use whatever get.pulumi.com thinks is\n# the latest\nARG PULUMI_VERSION\n\n# Install the Pulumi SDK, including the CLI and language runtimes.\nRUN curl -fsSL https://get.pulumi.com/ | bash -s -- --version $PULUMI_VERSION && \\\n  mv ~/.pulumi/bin/* /usr/bin\n\nRUN pulumi plugin install resource gcp\nRUN pulumi plugin install resource random\n\nENV HOST_DOCKER_INTERNAL_IFACE eth0\nENV PULUMI_SKIP_UPDATE_CHECK \"true\"\n\nCOPY bin/nitric /usr/bin/\n"
}