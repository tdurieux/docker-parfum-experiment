diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/clearlydefined/crawler/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/clearlydefined/crawler/Dockerfile/repaired.Dockerfile
index 9e58c6a..5fad457 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/clearlydefined/crawler/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/clearlydefined/crawler/Dockerfile/repaired.Dockerfile
@@ -16,14 +16,14 @@ ENV CRAWLER_BUILD_NUMBER=$BUILD_NUMBER
 # Ruby and Python Dependencies
 RUN apt-get update && apt-get install -y --no-install-recommends --no-install-suggests curl bzip2 build-essential libssl-dev libreadline-dev zlib1g-dev cmake python3 python3-dev python3-pip && \
   rm -rf /var/lib/apt/lists/* && \
-  curl -L https://github.com/rbenv/ruby-build/archive/v20180822.tar.gz | tar -zxvf - -C /tmp/ && \
+  curl -f -L https://github.com/rbenv/ruby-build/archive/v20180822.tar.gz | tar -zxvf - -C /tmp/ && \
   cd /tmp/ruby-build-* && ./install.sh && cd / && \
   ruby-build -v 2.5.1 /usr/local && rm -rfv /tmp/ruby-build-* && \
   gem install bundler --no-rdoc --no-ri
 
 # Scancode
-RUN pip3 install --upgrade pip setuptools wheel && \
-  pip3 install scancode-toolkit==30.1.0 && \
+RUN pip3 install --no-cache-dir --upgrade pip setuptools wheel && \
+  pip3 install --no-cache-dir scancode-toolkit==30.1.0 && \
   scancode --reindex-licenses && \
   scancode --version
 
@@ -39,8 +39,8 @@ RUN gem install nokogiri:1.12.5 --no-rdoc --no-ri && \
   gem install licensee:9.12.0 --no-rdoc --no-ri
 
 # REUSE
-RUN pip3 install setuptools
-RUN pip3 install reuse
+RUN pip3 install --no-cache-dir setuptools
+RUN pip3 install --no-cache-dir reuse
 
 # FOSSology
 # WORKDIR /opt
@@ -78,7 +78,7 @@ ENV CRAWLER_WEBHOOK_URL=https://api.clearlydefined.io/webhook
 ENV CRAWLER_AZBLOB_CONTAINER_NAME=production
 
 COPY package*.json /tmp/
-RUN cd /tmp && npm install --production
+RUN cd /tmp && npm install --production && npm cache clean --force;
 RUN mkdir -p "${APPDIR}" && cp -a /tmp/node_modules "${APPDIR}"
 
 WORKDIR "${APPDIR}"