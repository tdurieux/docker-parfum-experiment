{
  "startTime": 1674248799332,
  "endTime": 1674248800306,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 11,
        "columnStart": 22,
        "columnEnd": 14
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 27,
        "lineEnd": 39,
        "columnStart": 22,
        "columnEnd": 21
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 53,
        "lineEnd": 60,
        "columnStart": 22,
        "columnEnd": 8
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 70,
        "lineEnd": 82,
        "columnStart": 22,
        "columnEnd": 8
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:bullseye-slim as base\n\nFROM base as omnetpp-build\nARG VERSION=5.6.2\nWORKDIR /root\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    bison \\\n    build-essential \\\n    flex \\\n    libxml2-dev \\\n    wget \\\n    zlib1g-dev \\\n    && rm -rf /var/lib/apt/lists/*\nRUN wget https://github.com/omnetpp/omnetpp/releases/download/omnetpp-$VERSION/omnetpp-$VERSION-src-core.tgz \\\n    --progress=bar:force:noscroll -O omnetpp-src-core.tgz && \\\n    tar xf omnetpp-src-core.tgz && \\\n    rm omnetpp-src-core.tgz && \\\n    mv omnetpp-$VERSION /omnetpp\nWORKDIR /omnetpp\nENV PATH /omnetpp/bin:$PATH\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" WITH_QTENV=no WITH_OSG=no WITH_OSGEARTH=no && \\\n    make -j $(nproc) base MODE=release\n\nFROM omnetpp-build as omnetpp-debug\nRUN make -j $(nproc) base MODE=debug\n\nFROM base as artery-build\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    build-essential \\\n    cmake \\\n    libboost1.74-dev \\\n    libboost-date-time1.74-dev \\\n    libboost-system1.74-dev \\\n    libcrypto++-dev \\\n    libgeographic-dev \\\n    libpython3.9-dev \\\n    libssl-dev \\\n    libzmq3-dev \\\n    pkg-config \\\n    python3-distutils \\\n    && rm -rf /var/lib/apt/lists/*\nCOPY --from=omnetpp-build /omnetpp/bin /omnetpp/bin\nCOPY --from=omnetpp-build /omnetpp/include /omnetpp/include\nCOPY --from=omnetpp-build /omnetpp/lib /omnetpp/lib\nCOPY --from=omnetpp-build /omnetpp/Makefile.inc /omnetpp/Version /omnetpp/\nCOPY . /artery/source\nENV PATH /omnetpp/bin:$PATH\nRUN cmake -S /artery/source -B /artery/build -DCMAKE_BUILD_TYPE=Release -DWITH_OTS=ON -DWITH_SIMULTE=ON \\\n    -DCMAKE_INSTALL_PREFIX=/artery -DCMAKE_INSTALL_RPATH=/artery/lib -DCMAKE_INSTALL_RPATH_USE_LINK_PATH=ON \\\n    && cmake --build /artery/build --parallel $(nproc) --target install\n\nFROM base as sumo-build\nARG VERSION=1_6_0\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    build-essential \\\n    cmake \\\n    libproj-dev \\\n    libxerces-c-dev \\\n    python3 \\\n    python3-setuptools \\\n    wget \\\n    && rm -rf /var/lib/apt/lists/*\nRUN wget https://github.com/eclipse/sumo/archive/v$VERSION.tar.gz \\\n    --progress=bar:force:noscroll -O sumo-src.tar.gz && \\\n    tar xfz sumo-src.tar.gz && \\\n    rm sumo-src.tar.gz\nRUN cmake -S sumo-$VERSION -B build-sumo -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/sumo && \\\n    cmake --build build-sumo --parallel $(nproc) --target install\n\nFROM base as run\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    libboost-date-time1.74 \\\n    libboost-system1.74 \\\n    libcrypto++ \\\n    libgeographic19 \\\n    libproj19 \\\n    libpython3.9 \\\n    libssl1.1 \\\n    libxerces-c3.2 \\\n    libxml2 \\\n    libzmq5 \\\n    python3 \\\n    make \\\n    && rm -rf /var/lib/apt/lists/*\nCOPY --from=omnetpp-build /omnetpp/bin /omnetpp/bin\nCOPY --from=omnetpp-build /omnetpp/lib /omnetpp/lib\nCOPY --from=sumo-build /sumo/bin/sumo /sumo/bin/sumo\nCOPY --from=sumo-build /sumo/share/sumo/data /sumo/share/sumo/data\nCOPY --from=artery-build /artery/bin /artery/bin\nCOPY --from=artery-build /artery/lib /artery/lib\nCOPY --from=artery-build /artery/share/ned /artery/share/ned\nENV SUMO_HOME /sumo/share/sumo\nENV PATH /sumo/bin:/omnetpp/bin:$PATH\nRUN ln -s /usr/bin/python3 /usr/bin/python\nRUN useradd -m artery\nRUN mkdir -p /scenario /results && chown -R artery:users /scenario /results\nUSER artery\nVOLUME /scenario /results\nWORKDIR /scenario\nENTRYPOINT [\"/artery/bin/run_artery.sh\", \"--result-dir=/results\"]\n"
}