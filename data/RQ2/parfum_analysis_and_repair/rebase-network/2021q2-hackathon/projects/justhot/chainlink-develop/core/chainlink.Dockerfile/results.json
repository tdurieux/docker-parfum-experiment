{
  "startTime": 1674250292002,
  "endTime": 1674250292627,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 22,
        "columnEnd": 79
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 22,
        "columnEnd": 61
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 22,
        "columnEnd": 79
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 22,
        "columnEnd": 61
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# MAKE ALL CHANGES WITHIN THE DEFAULT WORKDIR FOR YARN AND GO DEP CACHE HITS\nARG BUILDER=smartcontract/builder\nFROM ${BUILDER}:1.0.39\nWORKDIR /chainlink\n# Have to reintroduce ENV vars from builder image\nENV PATH /go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\n\nCOPY GNUmakefile VERSION ./\nCOPY tools/bin/ldflags tools/bin/ldflags\nARG COMMIT_SHA\n\n# Install yarn dependencies\nCOPY yarn.lock package.json .yarnrc ./\nCOPY patches patches\nCOPY solc_bin solc_bin\nCOPY .yarn .yarn\nCOPY operator_ui/package.json ./operator_ui/\nCOPY belt/package.json ./belt/\nCOPY belt/bin ./belt/bin\nCOPY evm-test-helpers/package.json ./evm-test-helpers/\nCOPY evm-contracts/package.json ./evm-contracts/\nCOPY tools/bin/restore-solc-cache ./tools/bin/restore-solc-cache\nRUN make yarndep\n\n\nCOPY tsconfig.cjs.json tsconfig.es6.json ./\nCOPY operator_ui ./operator_ui\nCOPY belt ./belt\nCOPY belt/bin ./belt/bin\nCOPY evm-test-helpers ./evm-test-helpers\nCOPY evm-contracts ./evm-contracts\n\n# Build operator-ui and the smart contracts\nRUN make contracts-operator-ui-build\n\n# Build the golang binary\n\nFROM ${BUILDER}:1.0.39\nWORKDIR /chainlink\n\n# Have to reintroduce ENV vars from builder image\nENV PATH /go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\n\nCOPY GNUmakefile VERSION ./\nCOPY tools/bin/ldflags ./tools/bin/\n\n# Env vars needed for chainlink build\nADD go.mod go.sum ./\nRUN go mod download\n\n# Env vars needed for chainlink build\nARG COMMIT_SHA\nARG ENVIRONMENT\n\nCOPY --from=0 /chainlink/evm-contracts/abi ./evm-contracts/abi\nCOPY --from=0 /chainlink/operator_ui/dist ./operator_ui/dist\nCOPY core core\nCOPY packr packr\n\nRUN make chainlink-build\n\n# Final layer: ubuntu with chainlink binary\nFROM ubuntu:18.04\n\nARG CHAINLINK_USER=root\nENV DEBIAN_FRONTEND noninteractive\nRUN apt-get update && apt-get install --no-install-recommends -y ca-certificates wget gnupg lsb-release && rm -rf /var/lib/apt/lists/*;\n\n# Install Postgres for CLI tools, needed specifically for DB backups\nRUN wget --quiet -O - https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add - \\\n && wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add - \\\n && echo \"deb http://apt.postgresql.org/pub/repos/apt/ `lsb_release -cs`-pgdg main\" |tee /etc/apt/sources.list.d/pgdg.list \\\n && apt-get update && apt-get install --no-install-recommends -y postgresql-client-13 \\\n && apt-get clean all && rm -rf /var/lib/apt/lists/*;\n\nCOPY --from=1 /go/bin/chainlink /usr/local/bin/\n\nRUN if [ ${CHAINLINK_USER} != root ]; then \\\n  useradd --uid 14933 --create-home ${CHAINLINK_USER}; \\\n  fi\nUSER ${CHAINLINK_USER}\nWORKDIR /home/${CHAINLINK_USER}\n\nEXPOSE 6688\nENTRYPOINT [\"chainlink\"]\nCMD [\"local\", \"node\"]\n"
}