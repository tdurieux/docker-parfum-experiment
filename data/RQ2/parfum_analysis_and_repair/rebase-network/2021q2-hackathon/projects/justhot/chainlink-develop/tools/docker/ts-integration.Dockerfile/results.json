{
  "startTime": 1674254225494,
  "endTime": 1674254226223,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 7,
        "columnEnd": 149
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 7,
        "columnEnd": 117
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 7,
        "columnEnd": 39
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 7,
        "columnEnd": 117
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 7,
        "columnEnd": 39
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:12.18\n\n# Install docker and docker compose\nRUN apt-get update \\\n    # Install Docker CE CLI \\\n    && apt-get install --no-install-recommends -y apt-transport-https ca-certificates curl gnupg-agent software-properties-common lsb-release \\\n    && curl -fsSL https://download.docker.com/linux/$(lsb_release -is | tr '[:upper:]' '[:lower:]')/gpg | apt-key add - 2>/dev/null \\\n    && add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/$(lsb_release -is | tr '[:upper:]' '[:lower:]') $(lsb_release -cs) stable\" \\\n    && apt-get update \\\n    && apt-get install --no-install-recommends -y docker-ce-cli \\\n    #\n    # Install Docker Compose\n    && curl -f -sSL \"https://github.com/docker/compose/releases/download/1.24.0/docker-compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-compose \\\n    && chmod +x /usr/local/bin/docker-compose && rm -rf /var/lib/apt/lists/*;\n\nENV PATH=/chainlink/tools/bin:./node_modules/.bin:$PATH\n\n# Copy only what we neeed\nARG SRCROOT=/usr/local/src/chainlink\nWORKDIR ${SRCROOT}\n\n# copy over all our dependencies\nCOPY yarn.lock package.json .yarnrc tsconfig.cjs.json tsconfig.es6.json ./\nCOPY patches patches\nCOPY solc_bin solc_bin\nCOPY tools/bin/restore-solc-cache tools/bin/restore-solc-cache\nCOPY .yarn .yarn\nCOPY belt belt\nCOPY evm-test-helpers evm-test-helpers\nCOPY evm-contracts evm-contracts\n# TODO remove @types import\n# https://www.pivotaltracker.com/story/show/171715396\nCOPY operator_ui/@types operator_ui/@types/\nCOPY tools/ci-ts tools/ci-ts\n\n# install deps\nRUN yarn install && yarn cache clean;\nRUN tools/bin/restore-solc-cache\n\n# setup contracts\nRUN yarn setup:contracts\n"
}