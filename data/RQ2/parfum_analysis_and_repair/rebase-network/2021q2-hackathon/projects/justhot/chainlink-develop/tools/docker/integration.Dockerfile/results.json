{
  "startTime": 1674250981151,
  "endTime": 1674250981902,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 7,
        "columnEnd": 149
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 7,
        "columnEnd": 117
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 7,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 7,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 7,
        "columnEnd": 143
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 7,
        "columnEnd": 117
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 7,
        "columnEnd": 39
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 7,
        "columnEnd": 28
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 7,
        "columnEnd": 143
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# MAKE ALL CHANGES WITHIN THE DEFAULT WORKDIR FOR YARN AND GO DEP CACHE HITS\n# THIS LINE IS AUTOGENERATED, DO NOT CHANGE MANUALLY\nFROM smartcontract/builder:1.0.39\n\nRUN wget --quiet -O - https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add - 2>/dev/null\n\n# Install docker and docker compose\nRUN apt-get update \\\n    #\n    # Install Docker CE CLI \\\n    && apt-get install --no-install-recommends -y apt-transport-https ca-certificates curl gnupg-agent software-properties-common lsb-release \\\n    && curl -fsSL https://download.docker.com/linux/$(lsb_release -is | tr '[:upper:]' '[:lower:]')/gpg | apt-key add - 2>/dev/null \\\n    && add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/$(lsb_release -is | tr '[:upper:]' '[:lower:]') $(lsb_release -cs) stable\" \\\n    && apt-get update \\\n    && apt-get install --no-install-recommends -y docker-ce-cli \\\n    #\n    # Install Docker Compose\n    && curl -f -sSL \"https://github.com/docker/compose/releases/download/1.24.0/docker-compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-compose \\\n    && chmod +x /usr/local/bin/docker-compose \\\n    #\n    # Install jq\n    && apt-get -y --no-install-recommends install jq \\\n    # Install dependencies needed to run cypress with chrome\n    && apt-get install --no-install-recommends -y xvfb libgtk-3-dev libnotify-dev libgconf-2-4 libnss3 libxss1 libasound2 fonts-liberation libappindicator3-1 xdg-utils && rm -rf /var/lib/apt/lists/*;\nRUN wget -O ./chrome79.deb https://chainlink-monorepo-public-s3.s3-us-west-2.amazonaws.com/integration-tests/chrome79.deb\nRUN dpkg -i chrome79.deb\n\nENV PATH=/chainlink/tools/bin:./node_modules/.bin:$PATH\n\n# Copy only what we neeed\nARG SRCROOT=/usr/local/src/chainlink\nWORKDIR ${SRCROOT}\n\nCOPY yarn.lock package.json .yarnrc ./\nCOPY patches patches\nCOPY solc_bin solc_bin\nCOPY tools/bin/restore-solc-cache tools/bin/restore-solc-cache\nCOPY .yarn .yarn\nCOPY belt/package.json ./belt/\nCOPY belt/bin ./belt/bin\nCOPY evm-test-helpers/package.json evm-test-helpers/\nCOPY evm-contracts/package.json ./evm-contracts/\nCOPY integration/package.json integration/\nCOPY integration-scripts/package.json integration-scripts/\n\n# install deps for our integration scripts\nRUN yarn\nRUN tools/bin/restore-solc-cache\n# copy our CI test\nCOPY tools/ci/ethereum_test tools/ci/\nCOPY tools/docker tools/docker/\n\n# copy over all our dependencies\nCOPY tsconfig.cjs.json tsconfig.es6.json ./\nCOPY belt belt\nCOPY evm-test-helpers evm-test-helpers\nCOPY evm-contracts evm-contracts\nCOPY integration integration\nCOPY integration-scripts integration-scripts\n\n\n# setup our integration testing scripts\nRUN yarn setup:integration\n\nENTRYPOINT [ \"tools/ci/ethereum_test\" ]\n"
}