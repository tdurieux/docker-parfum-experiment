diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/developmentseed/geokit/Dockerfile.node b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/developmentseed/geokit/Dockerfile.node/repaired.Dockerfile
index 4856a07..f9c46bd 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/developmentseed/geokit/Dockerfile.node
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/developmentseed/geokit/Dockerfile.node/repaired.Dockerfile
@@ -2,7 +2,7 @@ FROM ubuntu:18.04
 
 RUN apt-get update && apt-get -y upgrade
 
-RUN apt-get install -y \
+RUN apt-get install --no-install-recommends -y \
     git \
     gcc \
     g++ \
@@ -18,14 +18,14 @@ RUN apt-get install -y \
     htop \
     lvm2 \
     moreutils \
-    curl
+    curl && rm -rf /var/lib/apt/lists/*;
 
 # install node and npm modules
 RUN curl -fsSL https://deb.nodesource.com/setup_10.x | bash -
-RUN apt install -y nodejs
+RUN apt install --no-install-recommends -y nodejs && rm -rf /var/lib/apt/lists/*;
 RUN npm --version
-RUN npm install mbtiles-extracts -g --unsafe
-RUN npm install json-stream-reduce @turf/area
+RUN npm install mbtiles-extracts -g --unsafe && npm cache clean --force;
+RUN npm install json-stream-reduce @turf/area && npm cache clean --force;
 
 # install mason and npm modules
 WORKDIR /mason
@@ -39,24 +39,24 @@ ENV PATH=$PATH:/mason/mason_packages/.link/bin/
 ENV LC_ALL=en_US.UTF-8
 
 # Other node libraries from https://github.com/node-geojson
-RUN npm install -g osmtogeojson
-RUN npm install -g geojsontoosm
-RUN npm install -g geojson2poly
-RUN npm install -g geojson-pick
-RUN npm install -g @mapbox/geojson-merge
-RUN npm install -g csv2geojson
+RUN npm install -g osmtogeojson && npm cache clean --force;
+RUN npm install -g geojsontoosm && npm cache clean --force;
+RUN npm install -g geojson2poly && npm cache clean --force;
+RUN npm install -g geojson-pick && npm cache clean --force;
+RUN npm install -g @mapbox/geojson-merge && npm cache clean --force;
+RUN npm install -g csv2geojson && npm cache clean --force;
 
 # Install Libosmium
-RUN apt-get install -y cmake libblkid-dev e2fslibs-dev libboost-all-dev libaudit-dev libbz2-dev
+RUN apt-get install --no-install-recommends -y cmake libblkid-dev e2fslibs-dev libboost-all-dev libaudit-dev libbz2-dev && rm -rf /var/lib/apt/lists/*;
 RUN git clone  --depth 1 --branch v1.7.0 https://github.com/mapbox/protozero.git
 RUN cd protozero && mkdir build && cd build && cmake .. && make && make install
 RUN git clone  --depth 1 --branch v2.17.1 https://github.com/osmcode/libosmium.git
 RUN cd libosmium && mkdir build && cd build && cmake .. && make && make install
 
 # Install osmconvert and osmfilter
-RUN wget -O - http://m.m.i24.cc/osmconvert.c | cc -x c - -lz -O3 -o osmconvert
+RUN wget -O - https://m.m.i24.cc/osmconvert.c | cc -x c - -lz -O3 -o osmconvert
 RUN cp osmconvert /usr/bin/osmconvert
-RUN wget -O - http://m.m.i24.cc/osmfilter.c |cc -x c - -O3 -o osmfilter
+RUN wget -O - https://m.m.i24.cc/osmfilter.c | cc -x c - -O3 -o osmfilter
 RUN cp osmfilter /usr/bin/osmfilter
 
 # Install mbtiles extractor
@@ -67,17 +67,17 @@ RUN git clone https://github.com/mapbox/mbtiles-extracts.git && cd mbtiles-extra
 
 # Install osmconv
 RUN git clone https://github.com/developmentseed/osm-coverage-tiles.git
-RUN cd osm-coverage-tiles && npm install --no-audit && npm link
+RUN cd osm-coverage-tiles && npm install --no-audit && npm link && npm cache clean --force;
 
 # install aws
 ENV TZ=America/New_York
 RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone
-RUN apt-get install -y tzdata awscli
+RUN apt-get install --no-install-recommends -y tzdata awscli && rm -rf /var/lib/apt/lists/*;
 
 # Copy geokit to container
 RUN mkdir /geokit
 ADD node-scripts /geokit
 WORKDIR /geokit
-RUN rm -rf node_modules/ && npm install && npm link
+RUN rm -rf node_modules/ && npm install && npm link && npm cache clean --force;
 VOLUME /mnt/data
 WORKDIR /mnt/data