{
  "startTime": 1674255583281,
  "endTime": 1674255583992,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:12.16.1-alpine AS runner\n\nWORKDIR /usr/src/app\n\nARG API_BASE_URL\nARG TRANSPORT\nENV API_BASE_URL $API_BASE_URL\nENV TRANSPORT $TRANSPORT\nRUN echo \"Api base url: ${TRANSPORT}${API_BASE_URL}\"\n\nCOPY package.json ./\nRUN npm install && npm cache clean --force;\n\nCOPY . .\n\nRUN echo -e \"\\\nexport const environment = { \\n\\\n  production: true, \\n\\\n  API_DOMAIN: '${API_BASE_URL}', \\n\\\n  TRANSPORT: '${TRANSPORT}', \\n\\\n  API_ENDPOINT: '/api', \\n\\\n  MAPS_KEY: '', \\n\\\n  version: '1.1.3', \\n\\\n  environment: 'prod', \\n\\\n} \\n\\\n\" > src/environments/environment.prod.ts\nRUN echo -e \"\\\nexport const environment = { \\n\\\n  production: true, \\n\\\n  API_DOMAIN: '${API_BASE_URL}', \\n\\\n  TRANSPORT: '${TRANSPORT}', \\n\\\n  API_ENDPOINT: '/api', \\n\\\n  MAPS_KEY: '', \\n\\\n  version: '1.1.3', \\n\\\n  environment: 'prod', \\n\\\n} \\n\\\n\" > src/environments/environment.ts\n\nFROM node:12.16.1-alpine AS builder\nWORKDIR /usr/src/app\nCOPY --from=runner /usr/src/app/ .\nRUN npm install && npm cache clean --force;\nRUN npm run build --configuration=prod\n\nFROM nginx:1.15.8-alpine\n\nCOPY --from=builder /usr/src/app/dist/front/ /usr/share/nginx/html\nCOPY --from=builder /usr/src/app/docker/nginx.conf /etc/nginx/conf.d/default.conf\n"
}