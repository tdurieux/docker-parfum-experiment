{
  "startTime": 1674254508169,
  "endTime": 1674254509192,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 29,
        "columnEnd": 56
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG PHP_BASEIMAGE_VERSION=8.0.2\nFROM php:${PHP_BASEIMAGE_VERSION}-fpm-alpine\n\nLABEL maintainer=\"Constantine Karnaukhov <genteelknight@gmail.com>\"\n\n# Setup some env\nENV \\\n\t# Setup same composer home directory for all users\n\tCOMPOSER_HOME=\"/usr/local/composer\" \\\n\t# Fix for iconv: https://github.com/docker-library/php/issues/240\n\tLD_PRELOAD=\"/usr/lib/preloadable_libiconv.so php\"\n\nARG XDEBUG_VERSION=3.0.2\nARG PHP_EXTENSIONS=\"dom exif gd iconv intl mysqli opcache pdo_mysql pdo_sqlite soap xsl zip\"\n\n# Install dependencies\nRUN apk add --update \\\n\t\tacl \\\n\t\tapk-cron \\\n\t\taugeas-dev \\\n\t\tautoconf \\\n\t\tbash \\\n\t\tcurl \\\n\t\tca-certificates \\\n\t\tdialog \\\n\t\tfreetype-dev \\\n\t\tgomplate \\\n\t\tgit \\\n\t\tgcc \\\n\t\ticu-dev \\\n\t\tlibcurl \\\n\t\tlibffi-dev \\\n\t\tlibgcrypt-dev \\\n\t\tlibjpeg-turbo-dev \\\n\t\tlibmcrypt-dev \\\n\t\tlibpng-dev \\\n\t\tlibpq \\\n\t\tlibressl-dev \\\n\t\tlibxslt-dev \\\n\t\tlibzip-dev \\\n\t\tlinux-headers \\\n\t\tmake \\\n\t\tmusl-dev \\\n\t\tmysql-client \\\n\t\tnginx \\\n\t\topenssh-client \\\n\t\tssmtp \\\n\t\tsqlite-dev \\\n\t\tsupervisor \\\n\t\tsu-exec \\\n\t\twget \\\n\t\tgnu-libiconv \\\n\t\t&& \\\n\tdocker-php-ext-configure gd \\\n\t\t--with-gd \\\n\t\t--with-freetype-dir=/usr/include/ \\\n\t\t--with-png-dir=/usr/include/ \\\n\t\t--with-jpeg-dir=/usr/include/ \\\n\t\t--enable-option-checking \\\n\t\t--with-freetype \\\n\t\t--with-jpeg && \\\n\tdocker-php-ext-install $PHP_EXTENSIONS && \\\n\tgit clone -b $XDEBUG_VERSION https://github.com/xdebug/xdebug.git /tmp/xdebug && \\\n\tcd /tmp/xdebug && phpize && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-xdebug && make && make install && cd - && \\\n\trm -rf /tmp/xdebug && \\\n\tdocker-php-source delete && \\\n\tapk del gcc musl-dev linux-headers libffi-dev augeas-dev make autoconf && \\\n\trm -rf /var/cache/apk/*\n\n# tweak php-fpm config\nRUN echo \"\" > /usr/local/etc/php/conf.d/05-php.ini && \\\n\t{ \\\n\t\techo \"cgi.fix_pathinfo = 0\"; \\\n\t\techo \"upload_max_filesize = 100M\"; \\\n\t\techo \"post_max_size = 100M\"; \\\n\t\techo \"variables_order = \\\"EGPCS\\\"\"; \\\n\t\techo \"memory_limit = 128M\"; \\\n\t} >> /usr/local/etc/php/conf.d/05-php.ini && \\\n\tsed -i \\\n\t\t-e \"s/;catch_workers_output\\s*=\\s*yes/catch_workers_output = yes/g\" \\\n\t\t-e \"s/pm.max_children = 5/pm.max_children = 4/g\" \\\n\t\t-e \"s/pm.start_servers = 2/pm.start_servers = 3/g\" \\\n\t\t-e \"s/pm.min_spare_servers = 1/pm.min_spare_servers = 2/g\" \\\n\t\t-e \"s/pm.max_spare_servers = 3/pm.max_spare_servers = 4/g\" \\\n\t\t-e \"s/;pm.max_requests = 500/pm.max_requests = 200/g\" \\\n\t\t-e \"s/user = www-data/user = nginx/g\" \\\n\t\t-e \"s/group = www-data/group = nginx/g\" \\\n\t\t-e \"s/;listen.mode = 0660/listen.mode = 0666/g\" \\\n\t\t-e \"s/;listen.owner = www-data/listen.owner = nginx/g\" \\\n\t\t-e \"s/;listen.group = www-data/listen.group = nginx/g\" \\\n\t\t-e \"s/listen = 127.0.0.1:9000/listen = \\/var\\/run\\/php-fpm.sock/g\" \\\n\t\t-e \"s/^;clear_env = no$/clear_env = no/\" \\\n\t\t/usr/local/etc/php-fpm.d/www.conf\n\nEXPOSE 8080 8443\n\nCOPY ./conf/supervisord.conf /etc/\n\n# Copy nginx config and enable default vhost\nCOPY ./conf/nginx/ /etc/nginx/\nRUN mkdir -p /etc/nginx && \\\n\tmkdir -p /run/nginx && \\\n\tmkdir -p /var/log/supervisor && \\\n\tmkdir -p /var/www/html && \\\n\tmkdir -p /var/www/errors && \\\n\tmkdir -p /etc/nginx/ssl/ && \\\n\tmkdir -p /etc/nginx/vhost.common.d && \\\n\tmkdir -p /etc/nginx/sites-enabled && \\\n\tln -s /etc/nginx/sites-available/default.conf /etc/nginx/sites-enabled/default.conf\n\n# Add spaceonfire\nENV PATH=\"${PATH}:${COMPOSER_HOME}/bin:${COMPOSER_HOME}/vendor/bin\"\nCOPY ./spaceonfire/ /opt/spaceonfire/\nRUN chmod -R +x /opt/spaceonfire/bin/* && /opt/spaceonfire/bin/install.sh\n\nCMD [\"/opt/spaceonfire/bin/entrypoint.sh\"]\n"
}