diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/alejandrososa/dockbox/server/Dockerfile-56 b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/alejandrososa/dockbox/server/Dockerfile-56/repaired.Dockerfile
index 52e3415..00e5d5e 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/alejandrososa/dockbox/server/Dockerfile-56
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/alejandrososa/dockbox/server/Dockerfile-56/repaired.Dockerfile
@@ -12,8 +12,8 @@ ENV LANG=en_US.UTF-8
 ENV TERM xterm
 
 # Add the "PHP 5" ppa
-RUN apt-get install -y software-properties-common && \
-    add-apt-repository -y ppa:ondrej/php
+RUN apt-get install --no-install-recommends -y software-properties-common && \
+    add-apt-repository -y ppa:ondrej/php && rm -rf /var/lib/apt/lists/*;
 
 #Net tools
 #RUN apt-get install -y net-tools
@@ -26,7 +26,7 @@ RUN apt-get install -y software-properties-common && \
 
 # Install "PHP Extentions", "libraries", "Software's"
 RUN apt-get update && \
-    apt-get install -y --allow-downgrades --allow-remove-essential \
+    apt-get install --no-install-recommends -y --allow-downgrades --allow-remove-essential \
         --allow-change-held-packages \
         sudo \
         php-pear \
@@ -70,7 +70,7 @@ RUN apt-get update && \
         libffi-dev \
         nodejs \
         ruby-full \
-    && apt-get clean
+    && apt-get clean && rm -rf /var/lib/apt/lists/*;
 
 
 #####################################
@@ -78,7 +78,7 @@ RUN apt-get update && \
 #####################################
 
 # Install composer and add its bin to the PATH.
-RUN curl -s http://getcomposer.org/installer | php && \
+RUN curl -f -s https://getcomposer.org/installer | php && \
     echo "export PATH=${PATH}:/var/www/vendor/bin" >> ~/.bashrc && \
     mv composer.phar /usr/local/bin/composer
 
@@ -116,11 +116,10 @@ ARG INSTALL_SOAP=false
 ENV INSTALL_SOAP ${INSTALL_SOAP}
 
 RUN if [ ${INSTALL_SOAP} = true ]; then \
-  # Install the PHP SOAP extension
   add-apt-repository -y ppa:ondrej/php && \
   apt-get update -yqq && \
-  apt-get -y install libxml2-dev php5.6-soap \
-;fi
+  apt-get -y --no-install-recommends install libxml2-dev php5.6-soap \
+; rm -rf /var/lib/apt/lists/*; fi
 
 
 #####################################
@@ -191,12 +190,11 @@ RUN echo "" >> ~/.bashrc && \
 #####################################
 ARG INSTALL_XDEBUG=false
 RUN if [ ${INSTALL_XDEBUG} = true ]; then \
-    # Load the xdebug extension only with phpunit commands
     apt-get update && \
-    apt-get install -y --force-yes php5.6-xdebug && \
+    apt-get install --no-install-recommends -y --force-yes php5.6-xdebug && \
     sed -i 's/^/;/g' /etc/php/5.6/cli/conf.d/20-xdebug.ini && \
     echo "alias phpunit='php -dzend_extension=xdebug.so /var/www/vendor/bin/phpunit'" >> ~/.bashrc \
-;fi
+; rm -rf /var/lib/apt/lists/*; fi
 # ADD for REMOTE debugging
 COPY ./xdebug.ini /etc/php/5.6/cli/conf.d/xdebug.ini
 
@@ -253,8 +251,7 @@ ARG INSTALL_NODE=false
 ENV INSTALL_NODE ${INSTALL_NODE}
 ENV NVM_DIR /home/desarrollador/.nvm
 RUN if [ ${INSTALL_NODE} = true ]; then \
-    # Install nvm (A Node Version Manager)
-    curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.1/install.sh | bash && \
+    curl -f -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.1/install.sh | bash && \
         . $NVM_DIR/nvm.sh && \
         nvm install ${NODE_VERSION} && \
         nvm use ${NODE_VERSION} && \
@@ -263,7 +260,7 @@ RUN if [ ${INSTALL_NODE} = true ]; then \
         npm install -g webpack && \
         npm install -g vue && \
         npm install -g react react-dom \
-;fi
+; npm cache clean --force; fi
 
 # Wouldn't execute when added to the RUN statement in the above block
 # Source NVM when loading bash since ~/.profile isn't loaded on non-login shell
@@ -296,13 +293,18 @@ ENV YARN_VERSION ${YARN_VERSION}
 RUN if [ ${INSTALL_YARN} = true ]; then \
     [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh" && \
     if [ ${YARN_VERSION} = "latest" ]; then \
-        curl -o- -L https://yarnpkg.com/install.sh | bash; \
+        curl -f -o- -L https://yarnpkg.com/install.sh | bash; \
     else \
-        curl -o- -L https://yarnpkg.com/install.sh | bash -s -- --version ${YARN_VERSION}; \
+        curl -f -o- -L https://yarnpkg.com/install.sh | bash -s -- --version ${YARN_VERSION}; \
     fi && \
     echo "" >> ~/.bashrc && \
     echo 'export PATH="$HOME/.yarn/bin:$PATH"' >> ~/.bashrc \
-;fi
+; else \
+        curl -f -o- -L https://yarnpkg.com/install.sh | bash -s -- --version ${YARN_VERSION}; \
+    fi \
+
+
+fi
 
 # Add YARN binaries to root's .bashrc
 USER root
@@ -322,13 +324,12 @@ ARG INSTALL_V8JS_EXTENSION=false
 ENV INSTALL_V8JS_EXTENSION ${INSTALL_V8JS_EXTENSION}
 
 RUN if [ ${INSTALL_V8JS_EXTENSION} = true ]; then \
-    # Install the php V8JS extension
     add-apt-repository -y ppa:pinepain/libv8-5.4 \
     && apt-get update \
-    && apt-get install -y php-dev php-pear libv8-5.4 \
+    && apt-get install --no-install-recommends -y php-dev php-pear libv8-5.4 \
     && pecl install v8js \
     && echo "extension=v8js.so" >> /etc/php/5.6/cli/php.ini \
-;fi
+; rm -rf /var/lib/apt/lists/*; fi
 
 #####################################
 # SASS:
@@ -402,9 +403,9 @@ ARG INSTALL_MSSQL=false
 ENV INSTALL_MSSQL ${INSTALL_MSSQL}
 
 RUN if [ ${INSTALL_MSSQL} = true ]; then \
-    apt-get -y install php5.6-sybase freetds-bin freetds-common libsybdb5 \
+    apt-get -y --no-install-recommends install php5.6-sybase freetds-bin freetds-common libsybdb5 \
     && echo "extension=pdo_dblib.so" > /etc/php/5.6/cli/conf.d/20-pdo_dblib.ini \
-;fi
+; rm -rf /var/lib/apt/lists/*; fi
 
 #####################################
 # Minio:
@@ -427,22 +428,21 @@ USER root
 ARG INSTALL_IMAGE_OPTIMIZERS=false
 ENV INSTALL_IMAGE_OPTIMIZERS ${INSTALL_IMAGE_OPTIMIZERS}
 RUN if [ ${INSTALL_IMAGE_OPTIMIZERS} = true ]; then \
-    apt-get install -y --force-yes jpegoptim optipng pngquant gifsicle && \
+    apt-get install --no-install-recommends -y --force-yes jpegoptim optipng pngquant gifsicle && \
     if [ ${INSTALL_NODE} = true ]; then \
         . ~/.bashrc && npm install -g svgo \
-    ;fi\
-;fi
+    ; npm cache clean --force; fi \
+; rm -rf /var/lib/apt/lists/*; fi
 #####################################
 # ZeroMQ:
 #####################################
 ARG INSTALL_ZMQ=false
 RUN if [ ${INSTALL_ZMQ} = true ]; then \
-    # Install intl and requirements
     apt-get update -yqq && \
-    apt-get install -y build-essential libtool autoconf pkg-config libsodium-dev libzmq-dev && \
-    pecl install -o -f zmq-beta &&  rm -rf /tmp/pear && \
+    apt-get install --no-install-recommends -y build-essential libtool autoconf pkg-config libsodium-dev libzmq-dev && \
+    pecl install -o -f zmq-beta && rm -rf /tmp/pear && \
     echo "extension=zmq.so" > /etc/php/5.6/cli/conf.d/zmq.ini \
-;fi
+; rm -rf /var/lib/apt/lists/*; fi
 #####################################
 # Symfony:
 #####################################
@@ -450,20 +450,19 @@ USER root
 ARG INSTALL_SYMFONY=false
 ENV INSTALL_SYMFONY ${INSTALL_SYMFONY}
 RUN if [ ${INSTALL_SYMFONY} = true ]; then \
-
   mkdir -p /usr/local/bin \
-  && curl -LsS https://symfony.com/installer -o /usr/local/bin/symfony \
+  && curl -f -LsS https://symfony.com/installer -o /usr/local/bin/symfony \
   && chmod a+x /usr/local/bin/symfony \
 
   #  Symfony 3 alias
   && echo 'alias sydev="php bin/console -e=dev"' >> ~/.bashrc \
   && echo 'alias syprod="php bin/console -e=prod"' >> ~/.bashrc \
 
-  #  Symfony 2 alias
-  #  && echo 'alias dev="php app/console -e=dev"' >> ~/.bashrc \
-  #  && echo 'alias prod="php app/console -e=prod"' >> ~/.bashrc \
 
-;fi
+
+
+
+; fi
 
 
 #RUN source ~/.bashrc
@@ -476,10 +475,10 @@ ARG INSTALL_PYTHON=false
 ENV INSTALL_PYTHON ${INSTALL_PYTHON}
 RUN if [ ${INSTALL_PYTHON} = true ]; then \
   apt-get update \
-  && apt-get -y install python python-pip python-dev build-essential  \
-  && pip install --upgrade pip  \
-  && pip install --upgrade virtualenv \
-;fi
+  && apt-get -y --no-install-recommends install python python-pip python-dev build-essential \
+  && pip install --no-cache-dir --upgrade pip \
+  && pip install --no-cache-dir --upgrade virtualenv \
+; rm -rf /var/lib/apt/lists/*; fi
 
 
 #