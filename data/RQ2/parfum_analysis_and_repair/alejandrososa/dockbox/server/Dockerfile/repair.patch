diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/alejandrososa/dockbox/server/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/alejandrososa/dockbox/server/Dockerfile/repaired.Dockerfile
index 08b4ec5..dbcb2b7 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/alejandrososa/dockbox/server/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/alejandrososa/dockbox/server/Dockerfile/repaired.Dockerfile
@@ -14,8 +14,8 @@ ENV LANG=en_US.UTF-8
 ENV TERM xterm
 
 # Add the "PHP 7" ppa
-RUN apt-get install -y software-properties-common && \
-    add-apt-repository -y ppa:ondrej/php
+RUN apt-get install --no-install-recommends -y software-properties-common && \
+    add-apt-repository -y ppa:ondrej/php && rm -rf /var/lib/apt/lists/*;
 
 #Net tools
 #RUN apt-get install -y net-tools
@@ -28,7 +28,7 @@ RUN apt-get install -y software-properties-common && \
 
 # Install "PHP Extentions", "libraries", "Software's"
 RUN apt-get update && \
-    apt-get install -y --force-yes \
+    apt-get install --no-install-recommends -y --force-yes \
         sudo \
         php-pear \
         php7.0-cli \
@@ -71,7 +71,7 @@ RUN apt-get update && \
         libffi-dev \
         nodejs \
         ruby-full \
-    && apt-get clean
+    && apt-get clean && rm -rf /var/lib/apt/lists/*;
 
 
 #####################################
@@ -79,7 +79,7 @@ RUN apt-get update && \
 #####################################
 
 # Install composer and add its bin to the PATH.
-RUN curl -s http://getcomposer.org/installer | php && \
+RUN curl -f -s https://getcomposer.org/installer | php && \
     mv composer.phar /usr/local/bin/composer
 
 # Source the bash
@@ -111,11 +111,10 @@ ARG INSTALL_SOAP=false
 ENV INSTALL_SOAP ${INSTALL_SOAP}
 
 RUN if [ ${INSTALL_SOAP} = true ]; then \
-  # Install the PHP SOAP extension
   apt-get -y update && \
   add-apt-repository -y ppa:ondrej/php && \
-  apt-get -y install libxml2-dev php7.0-soap \
-;fi
+  apt-get -y --no-install-recommends install libxml2-dev php7.0-soap \
+; rm -rf /var/lib/apt/lists/*; fi
 
 
 #####################################
@@ -183,12 +182,11 @@ RUN echo "" >> ~/.bashrc && \
 #####################################
 ARG INSTALL_XDEBUG=false
 RUN if [ ${INSTALL_XDEBUG} = true ]; then \
-    # Load the xdebug extension only with phpunit commands
     apt-get update && \
-    apt-get install -y --force-yes php7.0-xdebug && \
+    apt-get install --no-install-recommends -y --force-yes php7.0-xdebug && \
     sed -i 's/^/;/g' /etc/php/7.0/cli/conf.d/20-xdebug.ini && \
     echo "alias phpunit='php -dzend_extension=xdebug.so /var/www/vendor/bin/phpunit'" >> ~/.bashrc \
-;fi
+; rm -rf /var/lib/apt/lists/*; fi
 # ADD for REMOTE debugging
 COPY ./xdebug.ini /etc/php/7.0/cli/conf.d/xdebug.ini
 
@@ -245,8 +243,7 @@ ARG INSTALL_NODE=false
 ENV INSTALL_NODE ${INSTALL_NODE}
 ENV NVM_DIR /home/desarrollador/.nvm
 RUN if [ ${INSTALL_NODE} = true ]; then \
-    # Install nvm (A Node Version Manager)
-    curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.1/install.sh | bash && \
+    curl -f -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.1/install.sh | bash && \
         . $NVM_DIR/nvm.sh && \
         nvm install ${NODE_VERSION} && \
         nvm use ${NODE_VERSION} && \
@@ -258,7 +255,7 @@ RUN if [ ${INSTALL_NODE} = true ]; then \
         npm install -g vue && \
         npm install -g react react-dom && \
         npm install -g gulp-cli gulp bower vue-cli \
-;fi
+; npm cache clean --force; fi
 
 # Wouldn't execute when added to the RUN statement in the above block
 # Source NVM when loading bash since ~/.profile isn't loaded on non-login shell
@@ -291,13 +288,18 @@ ENV YARN_VERSION ${YARN_VERSION}
 RUN if [ ${INSTALL_YARN} = true ]; then \
     [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh" && \
     if [ ${YARN_VERSION} = "latest" ]; then \
-        curl -o- -L https://yarnpkg.com/install.sh | bash; \
+        curl -f -o- -L https://yarnpkg.com/install.sh | bash; \
     else \
-        curl -o- -L https://yarnpkg.com/install.sh | bash -s -- --version ${YARN_VERSION}; \
+        curl -f -o- -L https://yarnpkg.com/install.sh | bash -s -- --version ${YARN_VERSION}; \
     fi && \
     echo "" >> ~/.bashrc && \
     echo 'export PATH="$HOME/.yarn/bin:$PATH"' >> ~/.bashrc \
-;fi
+; else \
+        curl -f -o- -L https://yarnpkg.com/install.sh | bash -s -- --version ${YARN_VERSION}; \
+    fi \
+
+
+fi
 
 # Add YARN binaries to root's .bashrc
 USER root
@@ -356,20 +358,19 @@ USER root
 ARG INSTALL_SYMFONY=false
 ENV INSTALL_SYMFONY ${INSTALL_SYMFONY}
 RUN if [ ${INSTALL_SYMFONY} = true ]; then \
-
   mkdir -p /usr/local/bin \
-  && curl -LsS https://symfony.com/installer -o /usr/local/bin/symfony \
+  && curl -f -LsS https://symfony.com/installer -o /usr/local/bin/symfony \
   && chmod a+x /usr/local/bin/symfony \
 
   #  Symfony 3 alias
   && echo 'alias sydev="php bin/console -e=dev"' >> ~/.bashrc \
   && echo 'alias syprod="php bin/console -e=prod"' >> ~/.bashrc \
 
-  #  Symfony 2 alias
-  #  && echo 'alias dev="php app/console -e=dev"' >> ~/.bashrc \
-  #  && echo 'alias prod="php app/console -e=prod"' >> ~/.bashrc \
 
-;fi
+
+
+
+; fi
 
 
 #RUN source ~/.bashrc