diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/alejandrososa/dockbox/php-fpm/Dockerfile-70 b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/alejandrososa/dockbox/php-fpm/Dockerfile-70/repaired.Dockerfile
index 987de63..b882aaf 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/alejandrososa/dockbox/php-fpm/Dockerfile-70
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/alejandrososa/dockbox/php-fpm/Dockerfile-70/repaired.Dockerfile
@@ -39,9 +39,9 @@ MAINTAINER Alejandro Sosa <alesjohnson@hotmail.com>
 
 ENV TERM xterm
 RUN apt-get update && \
-    apt-get install -y --force-yes \
+    apt-get install --no-install-recommends -y --force-yes \
         nano \
-    && apt-get clean
+    && apt-get clean && rm -rf /var/lib/apt/lists/*;
 
 #####################################
 # SOAP:
@@ -49,11 +49,10 @@ RUN apt-get update && \
 
 ARG INSTALL_SOAP=false
 RUN if [ ${INSTALL_SOAP} = true ]; then \
-    # Install the soap extension
     apt-get update -yqq && \
-    apt-get -y install libxml2-dev php-soap && \
+    apt-get -y --no-install-recommends install libxml2-dev php-soap && \
     docker-php-ext-install soap \
-;fi
+; rm -rf /var/lib/apt/lists/*; fi
 
 #####################################
 # xDebug:
@@ -132,21 +131,19 @@ RUN if [ ${INSTALL_BCMATH} = true ]; then \
 
 ARG INSTALL_MEMCACHED=false
 RUN if [ ${INSTALL_MEMCACHED} = true ]; then \
-    # Install the php memcached extension
-    curl -L -o /tmp/memcached.tar.gz "https://github.com/php-memcached-dev/php-memcached/archive/php7.tar.gz" \
+    curl -f -L -o /tmp/memcached.tar.gz "https://github.com/php-memcached-dev/php-memcached/archive/php7.tar.gz" \
     && mkdir -p memcached \
     && tar -C memcached -zxvf /tmp/memcached.tar.gz --strip 1 \
-    && ( \
-        cd memcached \
+    && ( cd memcached \
         && phpize \
-        && ./configure \
+        && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
         && make -j$(nproc) \
-        && make install \
-    ) \
+        && make install) \
+
     && rm -r memcached \
     && rm /tmp/memcached.tar.gz \
     && docker-php-ext-enable memcached \
-;fi
+; fi
 
 #####################################
 # Exif:
@@ -167,8 +164,7 @@ ENV INSTALL_AEROSPIKE_EXTENSION ${INSTALL_AEROSPIKE_EXTENSION}
 # Copy aerospike configration for remote debugging
 #COPY ./aerospike.ini /usr/local/etc/php/conf.d/aerospike.ini
 RUN if [ ${INSTALL_AEROSPIKE_EXTENSION} = true ]; then \
-    # Install the php aerospike extension
-    curl -L -o /tmp/aerospike-client-php.tar.gz "https://github.com/luciano-jr/aerospike-client-php/archive/master.tar.gz" \
+    curl -f -L -o /tmp/aerospike-client-php.tar.gz "https://github.com/luciano-jr/aerospike-client-php/archive/master.tar.gz" \
     && mkdir -p aerospike-client-php \
     && tar -C aerospike-client-php -zxvf /tmp/aerospike-client-php.tar.gz --strip 1 \
     && ( \
@@ -178,7 +174,7 @@ RUN if [ ${INSTALL_AEROSPIKE_EXTENSION} = true ]; then \
         && make install \
     ) \
     && rm /tmp/aerospike-client-php.tar.gz \
-;fi
+; fi
 
 #####################################
 # Opcache:
@@ -216,10 +212,10 @@ RUN if [ ${INSTALL_TOKENIZER} = true ]; then \
 ARG INSTALL_LDAP=false
 RUN if [ ${INSTALL_LDAP} = true ]; then \
     apt-get update -yqq && \
-    apt-get install -y libldap2-dev && \
+    apt-get install --no-install-recommends -y libldap2-dev && \
     docker-php-ext-configure ldap --with-libdir=lib/x86_64-linux-gnu/ && \
     docker-php-ext-install ldap \
-;fi
+; rm -rf /var/lib/apt/lists/*; fi
 
 #####################################
 # SQL SERVER:
@@ -228,25 +224,21 @@ RUN if [ ${INSTALL_LDAP} = true ]; then \
 ARG INSTALL_MSSQL=false
 ENV INSTALL_MSSQL ${INSTALL_MSSQL}
 RUN if [ ${INSTALL_MSSQL} = true ]; then \
-    #####################################
-    # Ref from https://github.com/Microsoft/msphpsql/wiki/Dockerfile-for-adding-pdo_sqlsrv-and-sqlsrv-to-official-php-image
-    #####################################
-    # Add Microsoft repo for Microsoft ODBC Driver 13 for Linux
     apt-get update -yqq \
-        && apt-get install -y apt-transport-https \
-        && curl https://packages.microsoft.com/keys/microsoft.asc | apt-key add - \
-        && curl https://packages.microsoft.com/config/debian/8/prod.list > /etc/apt/sources.list.d/mssql-release.list \
+        && apt-get install --no-install-recommends -y apt-transport-https \
+        && curl -f https://packages.microsoft.com/keys/microsoft.asc | apt-key add - \
+        && curl -f https://packages.microsoft.com/config/debian/8/prod.list > /etc/apt/sources.list.d/mssql-release.list \
         && apt-get update -yqq \
 
     # Install Dependencies
-        && ACCEPT_EULA=Y apt-get install -y unixodbc unixodbc-dev libgss3 odbcinst msodbcsql locales \
+        && ACCEPT_EULA=Y apt-get --no-install-recommends install -y unixodbc unixodbc-dev libgss3 odbcinst msodbcsql locales \
         && echo "en_US.UTF-8 UTF-8" > /etc/locale.gen \
         && locale-gen \
 
     # Install pdo_sqlsrv and sqlsrv from PECL. Replace pdo_sqlsrv-4.1.8preview with preferred version.
         && pecl install pdo_sqlsrv-4.1.8preview sqlsrv-4.1.8preview \
         && docker-php-ext-enable pdo_sqlsrv sqlsrv \
-;fi
+; rm -rf /var/lib/apt/lists/*; fi
 
 #####################################
 # Human Language and Character Encoding Support:
@@ -254,12 +246,11 @@ RUN if [ ${INSTALL_MSSQL} = true ]; then \
 
 ARG INSTALL_INTL=false
 RUN if [ ${INSTALL_INTL} = true ]; then \
-    # Install intl and requirements
     apt-get update -yqq && \
-    apt-get install -y zlib1g-dev libicu-dev g++ && \
+    apt-get install --no-install-recommends -y zlib1g-dev libicu-dev g++ && \
     docker-php-ext-configure intl && \
     docker-php-ext-install intl \
-;fi
+; rm -rf /var/lib/apt/lists/*; fi
 
 #####################################
 # GHOSTSCRIPT:
@@ -267,24 +258,21 @@ RUN if [ ${INSTALL_INTL} = true ]; then \
 
 ARG INSTALL_GHOSTSCRIPT=false
 RUN if [ ${INSTALL_GHOSTSCRIPT} = true ]; then \
-    # Install the ghostscript extension
-    # for PDF editing
     apt-get -y update \
-    && apt-get install -y \
+    && apt-get install --no-install-recommends -y \
     poppler-utils \
     ghostscript \
-;fi
+; rm -rf /var/lib/apt/lists/*; fi
 #####################################
 # ZeroMQ:
 #####################################
 ARG INSTALL_ZMQ=false
 RUN if [ ${INSTALL_ZMQ} = true ]; then \
-    # Install intl and requirements
     apt-get update -yqq && \
-    apt-get install -y build-essential libtool autoconf pkg-config libsodium-dev libzmq-dev && \
-    echo '' | pecl install -o -f zmq-beta &&  rm -rf /tmp/pear && \
+    apt-get install --no-install-recommends -y build-essential libtool autoconf pkg-config libsodium-dev libzmq-dev && \
+    echo '' | pecl install -o -f zmq-beta && rm -rf /tmp/pear && \
     echo "extension=zmq.so" > /usr/local/etc/php/conf.d/zmq.ini \
-;fi
+; rm -rf /var/lib/apt/lists/*; fi
 #####################################
 # Image optimizers:
 #####################################
@@ -293,8 +281,8 @@ ARG INSTALL_IMAGE_OPTIMIZERS=false
 ENV INSTALL_IMAGE_OPTIMIZERS ${INSTALL_IMAGE_OPTIMIZERS}
 RUN if [ ${INSTALL_IMAGE_OPTIMIZERS} = true ]; then \
     apt-get update -yqq && \
-    apt-get install -y --force-yes jpegoptim optipng pngquant gifsicle \
-;fi
+    apt-get install --no-install-recommends -y --force-yes jpegoptim optipng pngquant gifsicle \
+; rm -rf /var/lib/apt/lists/*; fi
 
 #
 #--------------------------------------------------------------------------