diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/alejandrososa/dockbox/php-fpm/Dockerfile-56 b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/alejandrososa/dockbox/php-fpm/Dockerfile-56/repaired.Dockerfile
index dfd86bf..54f71b8 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/alejandrososa/dockbox/php-fpm/Dockerfile-56
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/alejandrososa/dockbox/php-fpm/Dockerfile-56/repaired.Dockerfile
@@ -38,9 +38,9 @@ MAINTAINER Alejandro Sosa <alesjohnson@hotmail.com>
 
 ENV TERM xterm
 RUN apt-get update && \
-    apt-get install -y --force-yes \
+    apt-get install --no-install-recommends -y --force-yes \
         nano \
-    && apt-get clean
+    && apt-get clean && rm -rf /var/lib/apt/lists/*;
 
 #####################################
 # SOAP:
@@ -48,11 +48,10 @@ RUN apt-get update && \
 
 ARG INSTALL_SOAP=false
 RUN if [ ${INSTALL_SOAP} = true ]; then \
-    # Install the soap extension
     apt-get update -yqq && \
-    apt-get -y install libxml2-dev php-soap && \
+    apt-get -y --no-install-recommends install libxml2-dev php-soap && \
     docker-php-ext-install soap \
-;fi
+; rm -rf /var/lib/apt/lists/*; fi
 
 #####################################
 # xDebug:
@@ -60,13 +59,9 @@ RUN if [ ${INSTALL_SOAP} = true ]; then \
 
 ARG INSTALL_XDEBUG=false
 RUN if [ ${INSTALL_XDEBUG} = true ]; then \
-    # Install the xdebug extension
-    # pecl install xdebug && docker-php-ext-enable xdebug \
-    # workaround for https://github.com/docker-library/php/issues/133
-    #     - Xdebug breaks on access to class static property
-    apt-get install -y php5-xdebug && \
+    apt-get install --no-install-recommends -y php5-xdebug && \
 	echo "zend_extension=/usr/lib/php5/20131226/xdebug.so" > /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini \
-;fi
+; rm -rf /var/lib/apt/lists/*; fi
 
 # Copy xdebug configration for remote debugging
 COPY ./xdebug.ini /usr/local/etc/php/conf.d/xdebug.ini
@@ -156,8 +151,7 @@ ENV INSTALL_AEROSPIKE_EXTENSION ${INSTALL_AEROSPIKE_EXTENSION}
 # Copy aerospike configration for remote debugging
 COPY ./aerospike.ini /usr/local/etc/php/conf.d/aerospike.ini
 RUN if [ ${INSTALL_AEROSPIKE_EXTENSION} = true ]; then \
-    # Install the php aerospike extension
-    curl -L -o /tmp/aerospike-client-php.tar.gz "https://github.com/luciano-jr/aerospike-client-php/archive/master.tar.gz" \
+    curl -f -L -o /tmp/aerospike-client-php.tar.gz "https://github.com/luciano-jr/aerospike-client-php/archive/master.tar.gz" \
     && mkdir -p aerospike-client-php \
     && tar -C aerospike-client-php -zxvf /tmp/aerospike-client-php.tar.gz --strip 1 \
     && ( \
@@ -167,7 +161,7 @@ RUN if [ ${INSTALL_AEROSPIKE_EXTENSION} = true ]; then \
         && make install \
     ) \
     && rm /tmp/aerospike-client-php.tar.gz \
-;fi
+; fi
 
 #####################################
 # Opcache:
@@ -208,11 +202,10 @@ RUN if [ ${INSTALL_TOKENIZER} = true ]; then \
 
 ARG INSTALL_INTL=false
 RUN if [ ${INSTALL_INTL} = true ]; then \
-    # Install intl and requirements
-    apt-get install -y zlib1g-dev libicu-dev g++ && \
+    apt-get install --no-install-recommends -y zlib1g-dev libicu-dev g++ && \
     docker-php-ext-configure intl && \
     docker-php-ext-install intl \
-;fi
+; rm -rf /var/lib/apt/lists/*; fi
 
 #####################################
 # GHOSTSCRIPT:
@@ -220,10 +213,9 @@ RUN if [ ${INSTALL_INTL} = true ]; then \
 
 ARG INSTALL_GHOSTSCRIPT=false
 RUN if [ ${INSTALL_GHOSTSCRIPT} = true ]; then \
-    # Install the ghostscript extension for PDF editing
     apt-get update && \
-    apt-get install -y poppler-utils ghostscript \
-;fi
+    apt-get install --no-install-recommends -y poppler-utils ghostscript \
+; rm -rf /var/lib/apt/lists/*; fi
 
 #####################################
 # LDAP:
@@ -232,10 +224,10 @@ RUN if [ ${INSTALL_GHOSTSCRIPT} = true ]; then \
 ARG INSTALL_LDAP=false
 RUN if [ ${INSTALL_LDAP} = true ]; then \
     apt-get update -yqq && \
-    apt-get install -y libldap2-dev && \
+    apt-get install --no-install-recommends -y libldap2-dev && \
     docker-php-ext-configure ldap --with-libdir=lib/x86_64-linux-gnu/ && \
     docker-php-ext-install ldap \
-;fi
+; rm -rf /var/lib/apt/lists/*; fi
 
 #####################################
 # SQL SERVER:
@@ -244,10 +236,10 @@ ARG INSTALL_MSSQL=false
 ENV INSTALL_MSSQL ${INSTALL_MSSQL}
 
 RUN if [ ${INSTALL_MSSQL} = true ]; then \
-    apt-get -y install php5-sybase freetds-bin && \
+    apt-get -y --no-install-recommends install php5-sybase freetds-bin && \
     cp /usr/lib/php5/20131226/*.so /usr/local/lib/php/extensions/no-debug-non-zts-20131226/ && \
     docker-php-ext-enable mssql pdo pdo_dblib \
-;fi
+; rm -rf /var/lib/apt/lists/*; fi
 
 #####################################
 # Image optimizers:
@@ -257,19 +249,18 @@ ARG INSTALL_IMAGE_OPTIMIZERS=false
 ENV INSTALL_IMAGE_OPTIMIZERS ${INSTALL_IMAGE_OPTIMIZERS}
 RUN if [ ${INSTALL_IMAGE_OPTIMIZERS} = true ]; then \
     apt-get update -yqq && \
-    apt-get install -y --force-yes jpegoptim optipng pngquant gifsicle \
-;fi
+    apt-get install --no-install-recommends -y --force-yes jpegoptim optipng pngquant gifsicle \
+; rm -rf /var/lib/apt/lists/*; fi
 #####################################
 # ZeroMQ:
 #####################################
 ARG INSTALL_ZMQ=false
 RUN if [ ${INSTALL_ZMQ} = true ]; then \
-    # Install intl and requirements
     apt-get update -yqq && \
-    apt-get install -y build-essential libtool autoconf pkg-config libsodium-dev libzmq-dev && \
-    echo '' | pecl install -o -f zmq-beta &&  rm -rf /tmp/pear && \
+    apt-get install --no-install-recommends -y build-essential libtool autoconf pkg-config libsodium-dev libzmq-dev && \
+    echo '' | pecl install -o -f zmq-beta && rm -rf /tmp/pear && \
     echo "extension=zmq.so" > /usr/local/etc/php/conf.d/zmq.ini \
-;fi
+; rm -rf /var/lib/apt/lists/*; fi
 #
 #--------------------------------------------------------------------------
 # Final Touch