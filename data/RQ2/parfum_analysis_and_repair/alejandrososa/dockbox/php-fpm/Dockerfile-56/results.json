{
  "startTime": 1674255345656,
  "endTime": 1674255347323,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 159,
        "lineEnd": 159,
        "columnStart": 4,
        "columnEnd": 122
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 40,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 211,
        "lineEnd": 211,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 224,
        "lineEnd": 224,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 234,
        "lineEnd": 234,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 246,
        "lineEnd": 246,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 259,
        "lineEnd": 259,
        "columnStart": 4,
        "columnEnd": 70
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 268,
        "lineEnd": 268,
        "columnStart": 4,
        "columnEnd": 91
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 211,
        "lineEnd": 211,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 246,
        "lineEnd": 246,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 40,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 211,
        "lineEnd": 211,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 224,
        "lineEnd": 224,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 234,
        "lineEnd": 234,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 246,
        "lineEnd": 246,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 259,
        "lineEnd": 259,
        "columnStart": 4,
        "columnEnd": 70
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 268,
        "lineEnd": 268,
        "columnStart": 4,
        "columnEnd": 91
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 204,
        "lineEnd": 204,
        "columnStart": 4,
        "columnEnd": 72
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 238,
        "lineEnd": 238,
        "columnStart": 4,
        "columnEnd": 70
      }
    }
  ],
  "repairedDockerfile": "#\n#--------------------------------------------------------------------------\n# Image Setup\n#--------------------------------------------------------------------------\n#\n# To edit the 'php-fpm' base Image, visit its repository on Github\n#    https://github.com/LaraDock/php-fpm\n#\n# To change its version, see the available Tags on the Docker Hub:\n#    https://hub.docker.com/r/laradock/php-fpm/tags/\n#\n\nFROM laradock/php-fpm:1.4-56\n\nMAINTAINER Alejandro Sosa <alesjohnson@hotmail.com>\n\n#\n#--------------------------------------------------------------------------\n# Mandatory Software's Installation\n#--------------------------------------------------------------------------\n#\n# Mandatory Software's such as (\"mcrypt\", \"pdo_mysql\", \"libssl-dev\", ....)\n# are installed on the base image 'laradock/php-fpm' image. If you want\n# to add more Software's or remove existing one, you need to edit the\n# base image (https://github.com/LaraDock/php-fpm).\n#\n\n#\n#--------------------------------------------------------------------------\n# Optional Software's Installation\n#--------------------------------------------------------------------------\n#\n# Optional Software's will only be installed if you set them to `true`\n# in the `docker-compose.yml` before the build.\n# Example:\n#   - INSTALL_ZIP_ARCHIVE=true\n#\n\nENV TERM xterm\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y --force-yes \\\n        nano \\\n    && apt-get clean && rm -rf /var/lib/apt/lists/*;\n\n#####################################\n# SOAP:\n#####################################\n\nARG INSTALL_SOAP=false\nRUN if [ ${INSTALL_SOAP} = true ]; then \\\n    apt-get update -yqq && \\\n    apt-get -y --no-install-recommends install libxml2-dev php-soap && \\\n    docker-php-ext-install soap \\\n; rm -rf /var/lib/apt/lists/*; fi\n\n#####################################\n# xDebug:\n#####################################\n\nARG INSTALL_XDEBUG=false\nRUN if [ ${INSTALL_XDEBUG} = true ]; then \\\n    apt-get install --no-install-recommends -y php5-xdebug && \\\n\techo \"zend_extension=/usr/lib/php5/20131226/xdebug.so\" > /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini \\\n; rm -rf /var/lib/apt/lists/*; fi\n\n# Copy xdebug configration for remote debugging\nCOPY ./xdebug.ini /usr/local/etc/php/conf.d/xdebug.ini\n\n#####################################\n# PHP REDIS EXTENSION FOR PHP 5\n#####################################\n\nARG INSTALL_PHPREDIS=false\nRUN if [ ${INSTALL_PHPREDIS} = true ]; then \\\n    # Install Php Redis Extension\n    pecl install -o -f redis \\\n    &&  rm -rf /tmp/pear \\\n    &&  docker-php-ext-enable redis \\\n;fi\n\n#####################################\n# Swoole EXTENSION FOR PHP 5\n#####################################\n\nARG INSTALL_SWOOLE=false\nRUN if [ ${INSTALL_SWOOLE} = true ]; then \\\n    # Install Php Swoole Extension\n    pecl install swoole \\\n    &&  docker-php-ext-enable swoole \\\n;fi\n\n#####################################\n# MongoDB:\n#####################################\n\nARG INSTALL_MONGO=false\nRUN if [ ${INSTALL_MONGO} = true ]; then \\\n    # Install the mongodb extension\n    pecl install mongodb && \\\n    docker-php-ext-enable mongodb \\\n;fi\n\n#####################################\n# ZipArchive:\n#####################################\n\nARG INSTALL_ZIP_ARCHIVE=false\nRUN if [ ${INSTALL_ZIP_ARCHIVE} = true ]; then \\\n    # Install the zip extension\n    pecl install zip && \\\n    docker-php-ext-install zip \\\n;fi\n\n#####################################\n# bcmath:\n#####################################\n\nARG INSTALL_BCMATH=false\nRUN if [ ${INSTALL_BCMATH} = true ]; then \\\n    # Install the bcmath extension\n    docker-php-ext-install bcmath \\\n;fi\n\n#####################################\n# PHP Memcached:\n#####################################\n\nARG INSTALL_MEMCACHED=false\nRUN if [ ${INSTALL_MEMCACHED} = true ]; then \\\n    # Install the php memcached extension\n    pecl install memcached-2.2.0 && \\\n    docker-php-ext-enable memcached \\\n;fi\n\n#####################################\n# Exif:\n#####################################\n\nARG INSTALL_EXIF=false\nRUN if [ ${INSTALL_EXIF} = true ]; then \\\n    # Enable Exif PHP extentions requirements\n    docker-php-ext-install exif \\\n;fi\n\n#####################################\n# PHP Aerospike:\n#####################################\n\nARG INSTALL_AEROSPIKE_EXTENSION=false\nENV INSTALL_AEROSPIKE_EXTENSION ${INSTALL_AEROSPIKE_EXTENSION}\n# Copy aerospike configration for remote debugging\nCOPY ./aerospike.ini /usr/local/etc/php/conf.d/aerospike.ini\nRUN if [ ${INSTALL_AEROSPIKE_EXTENSION} = true ]; then \\\n    curl -f -L -o /tmp/aerospike-client-php.tar.gz \"https://github.com/luciano-jr/aerospike-client-php/archive/master.tar.gz\" \\\n    && mkdir -p aerospike-client-php \\\n    && tar -C aerospike-client-php -zxvf /tmp/aerospike-client-php.tar.gz --strip 1 \\\n    && ( \\\n        cd aerospike-client-php/src/aerospike \\\n        && phpize \\\n        && ./build.sh \\\n        && make install \\\n    ) \\\n    && rm /tmp/aerospike-client-php.tar.gz \\\n; fi\n\n#####################################\n# Opcache:\n#####################################\n\nARG INSTALL_OPCACHE=false\nRUN if [ ${INSTALL_OPCACHE} = true ]; then \\\n    docker-php-ext-install opcache \\\n;fi\n\n# Copy opcache configration\nCOPY ./opcache.ini /usr/local/etc/php/conf.d/opcache.ini\n\n#####################################\n# Mysqli Modifications:\n#####################################\n\nARG INSTALL_MYSQLI=false\n# MySQL extenstion is available for Php5.6 and lower only\nCOPY ./mysql.ini /usr/local/etc/php/conf.d/mysql.ini\nRUN if [ ${INSTALL_MYSQLI} = true ]; then \\\n    docker-php-ext-install mysql && \\\n    docker-php-ext-install mysqli \\\n;fi\n\n#####################################\n# Tokenizer Modifications:\n#####################################\n\nARG INSTALL_TOKENIZER=false\nRUN if [ ${INSTALL_TOKENIZER} = true ]; then \\\n    docker-php-ext-install tokenizer \\\n;fi\n\n#####################################\n# Human Language and Character Encoding Support:\n#####################################\n\nARG INSTALL_INTL=false\nRUN if [ ${INSTALL_INTL} = true ]; then \\\n    apt-get install --no-install-recommends -y zlib1g-dev libicu-dev g++ && \\\n    docker-php-ext-configure intl && \\\n    docker-php-ext-install intl \\\n; rm -rf /var/lib/apt/lists/*; fi\n\n#####################################\n# GHOSTSCRIPT:\n#####################################\n\nARG INSTALL_GHOSTSCRIPT=false\nRUN if [ ${INSTALL_GHOSTSCRIPT} = true ]; then \\\n    apt-get update && \\\n    apt-get install --no-install-recommends -y poppler-utils ghostscript \\\n; rm -rf /var/lib/apt/lists/*; fi\n\n#####################################\n# LDAP:\n#####################################\n\nARG INSTALL_LDAP=false\nRUN if [ ${INSTALL_LDAP} = true ]; then \\\n    apt-get update -yqq && \\\n    apt-get install --no-install-recommends -y libldap2-dev && \\\n    docker-php-ext-configure ldap --with-libdir=lib/x86_64-linux-gnu/ && \\\n    docker-php-ext-install ldap \\\n; rm -rf /var/lib/apt/lists/*; fi\n\n#####################################\n# SQL SERVER:\n#####################################\nARG INSTALL_MSSQL=false\nENV INSTALL_MSSQL ${INSTALL_MSSQL}\n\nRUN if [ ${INSTALL_MSSQL} = true ]; then \\\n    apt-get -y --no-install-recommends install php5-sybase freetds-bin && \\\n    cp /usr/lib/php5/20131226/*.so /usr/local/lib/php/extensions/no-debug-non-zts-20131226/ && \\\n    docker-php-ext-enable mssql pdo pdo_dblib \\\n; rm -rf /var/lib/apt/lists/*; fi\n\n#####################################\n# Image optimizers:\n#####################################\nUSER root\nARG INSTALL_IMAGE_OPTIMIZERS=false\nENV INSTALL_IMAGE_OPTIMIZERS ${INSTALL_IMAGE_OPTIMIZERS}\nRUN if [ ${INSTALL_IMAGE_OPTIMIZERS} = true ]; then \\\n    apt-get update -yqq && \\\n    apt-get install --no-install-recommends -y --force-yes jpegoptim optipng pngquant gifsicle \\\n; rm -rf /var/lib/apt/lists/*; fi\n#####################################\n# ZeroMQ:\n#####################################\nARG INSTALL_ZMQ=false\nRUN if [ ${INSTALL_ZMQ} = true ]; then \\\n    apt-get update -yqq && \\\n    apt-get install --no-install-recommends -y build-essential libtool autoconf pkg-config libsodium-dev libzmq-dev && \\\n    echo '' | pecl install -o -f zmq-beta && rm -rf /tmp/pear && \\\n    echo \"extension=zmq.so\" > /usr/local/etc/php/conf.d/zmq.ini \\\n; rm -rf /var/lib/apt/lists/*; fi\n#\n#--------------------------------------------------------------------------\n# Final Touch\n#--------------------------------------------------------------------------\n#\n\nADD ./laravel.ini /usr/local/etc/php/conf.d\nADD ./laravel.pool.conf /usr/local/etc/php-fpm.d/\n\n#RUN rm -r /var/lib/apt/lists/*\n\nRUN usermod -u 1000 www-data\n\nWORKDIR /var/www\n\nCMD [\"php-fpm\"]\n\nEXPOSE 9000\n"
}