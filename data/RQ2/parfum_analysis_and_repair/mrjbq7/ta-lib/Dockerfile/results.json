{
  "startTime": 1674253235498,
  "endTime": 1674253236308,
  "originalSmells": [
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 7,
        "columnEnd": 83
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 7,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 18,
        "lineEnd": 24,
        "columnStart": 22,
        "columnEnd": 18
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Dockerfile for TA-Lib. To build:\n#\n#    docker build --rm -t talib .\n#\n# To run:\n#\n#    docker run --rm -it talib bash\n#\n\nARG PYTHON_VERSION=\"3.7\"\n\nFROM python:$PYTHON_VERSION as builder\n\nENV TA_PREFIX=\"/opt/ta-lib-core\"\nENV TA_LIBRARY_PATH=\"$TA_PREFIX/lib\" \\\n    TA_INCLUDE_PATH=\"$TA_PREFIX/include\"\n\nWORKDIR /src/ta-lib-core\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n        gfortran \\\n        libfreetype6-dev \\\n        libhdf5-dev \\\n        liblapack-dev \\\n        libopenblas-dev \\\n        libpng-dev \\\n    && rm -rf /var/lib/apt/lists/* \\\n    && curl -fsSL https://prdownloads.sourceforge.net/ta-lib/ta-lib-0.4.0-src.tar.gz \\\n    | tar xvz --strip-components 1 \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"$TA_PREFIX\" \\\n    && make \\\n    && make install\n\nWORKDIR /src/ta-lib-python\nCOPY . .\nRUN python -m pip install -e . \\\n    && python -c 'import numpy, talib; close = numpy.random.random(100); output = talib.SMA(close); print(output)' \\\n    && python -m pip wheel --wheel-dir wheels .\n\nARG RUN_TESTS=\"1\"\nRUN if [ \"$RUN_TESTS\" -ne \"0\" ]; then \\\n        python -m pip install -r requirements_test.txt \\\n        && pytest . ; \\\n    else \\\n        echo \"Skipping tests\\n\" ; \\\n    fi\n\n# Build final image.\nFROM python:$PYTHON_VERSION-slim\nCOPY --from=builder /src/ta-lib-python/wheels /opt/ta-lib-python/wheels\nCOPY --from=builder /opt/ta-lib-core /opt/ta-lib-core\nRUN python -m pip install --no-cache-dir /opt/ta-lib-python/wheels/*.whl \\\n    && python -c 'import numpy, talib; close = numpy.random.random(100); output = talib.SMA(close); print(output)'\n"
}