{
  "startTime": 1674250001939,
  "endTime": 1674250003347,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 20,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 17
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 24,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 11
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 32,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 66,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 79,
        "lineEnd": 79,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 103,
        "lineEnd": 106,
        "columnStart": 4,
        "columnEnd": 17
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.16.0\n\n# expose ports\nEXPOSE 80/tcp\nEXPOSE 443/tcp\n\nENV DOMAIN localhost\nENV DOCUMENT_ROOT /public\n\n# add edge community packages for php 8.1\nRUN echo \"@edge https://dl-cdn.alpinelinux.org/alpine/edge/main\" >> /etc/apk/repositories\nRUN echo \"@edge https://dl-cdn.alpinelinux.org/alpine/edge/community\" >> /etc/apk/repositories\n\n# update apk repositories\nRUN apk update\n\n# upgrade all\nRUN apk upgrade\n\n# install console tools\nRUN apk add --no-cache \\\n    inotify-tools\n\n# install zsh\nRUN apk add --no-cache \\\n    zsh \\\n    zsh-vcs\n\n# configure zsh\nADD --chown=root:root include/zshrc /etc/zsh/zshrc\n\n# install php\nRUN apk add --no-cache \\\n    php81@edge \\\n    php81-bcmath@edge \\\n    php81-common@edge \\\n    php81-ctype@edge \\\n    php81-curl@edge \\\n    php81-dom@edge \\\n    php81-fileinfo@edge \\\n    php81-gd@edge \\\n    php81-gettext@edge \\\n    php81-json@edge \\\n    php81-iconv@edge \\\n    php81-imap@edge \\\n    php81-mbstring@edge \\\n    php81-mysqli@edge \\\n    php81-opcache@edge \\\n    php81-openssl@edge \\\n    php81-pdo@edge \\\n    php81-pdo_mysql@edge \\\n    php81-pdo_sqlite@edge \\\n    php81-phar@edge \\\n    php81-posix@edge \\\n    php81-session@edge \\\n    php81-simplexml@edge \\\n    php81-sodium@edge \\\n    php81-tokenizer@edge \\\n    php81-xml@edge \\\n    php81-xmlwriter@edge \\\n    php81-zip@edge\n\n# use php81-fpm instead of php81-apache2\nRUN apk add --no-cache php81-fpm@edge\n\n# i18n\nRUN apk add --no-cache \\\n    php81-intl@edge \\\n    icu-data-full@edge\n\n# fix php iconv\n# https://stackoverflow.com/questions/70046717/iconv-error-when-running-statamic-laravel-seo-pro-plugin-with-phpfpm-alpine\nRUN apk add --no-cache --repository http://dl-cdn.alpinelinux.org/alpine/v3.13/community/ gnu-libiconv=1.15-r3\nENV LD_PRELOAD /usr/lib/preloadable_libiconv.so php\n\n# add symbolic link to php\nRUN ln -s /usr/bin/php81 /usr/bin/php\n\n# install xdebug\nRUN apk add --no-cache php81-pecl-xdebug@edge\n\n# configure xdebug\nADD --chown=root:root include/xdebug.ini /etc/php81/conf.d/xdebug.ini\n\nRUN mkdir /var/log/apache2/\n\n# install composer\n#RUN apk add \\\n#    composer\n\n# add composer script\nADD --chown=root:root include/composer.sh /tmp/composer.sh\n\n# make composer script executable\nRUN chmod +x /tmp/composer.sh\n\n# install composer\nRUN /tmp/composer.sh\n\n# move composer binary to usr bin\nRUN mv /composer.phar /usr/bin/composer\n\n# install apache\nRUN apk add --no-cache \\\n    apache2 \\\n    apache2-ssl \\\n    apache2-proxy\n\n# add user www-data\n# group www-data already exists\n# -H don't create home directory\n# -D don't assign a password\n# -S create a system user\nRUN adduser -H -D -S -G www-data -s /sbin/nologin www-data\n\n# update user and group apache runs under\nRUN sed -i 's|User apache|User www-data|g' /etc/apache2/httpd.conf\nRUN sed -i 's|Group apache|Group www-data|g' /etc/apache2/httpd.conf\n\n# enable mod rewrite (rewrite urls in htaccess)\nRUN sed -i 's|#LoadModule rewrite_module modules/mod_rewrite.so|LoadModule rewrite_module modules/mod_rewrite.so|g' /etc/apache2/httpd.conf\n\n# authorize all directives in .htaccess\nRUN sed -i 's|    AllowOverride None|    AllowOverride All|g' /etc/apache2/httpd.conf\n\n# authorize all changes from htaccess\nRUN sed -i 's|Options Indexes FollowSymLinks|Options All|g' /etc/apache2/httpd.conf\n\n# update error and access logs location\nRUN mkdir -p /var/log/apache2\nRUN sed -i 's| logs/error.log| /var/log/apache2/error_log|g' /etc/apache2/httpd.conf\nRUN sed -i 's| logs/access.log| /var/log/apache2/access_log|g' /etc/apache2/httpd.conf\n\n# update SSL log location\nRUN sed -i 's|ErrorLog logs/ssl_error.log|ErrorLog /var/log/apache2/error_log|g' /etc/apache2/conf.d/ssl.conf\nRUN sed -i 's|TransferLog logs/ssl_access.log|TransferLog /var/log/apache2/access_log|g' /etc/apache2/conf.d/ssl.conf\n\n# update error log logging format\nRUN sed -i 's|^<IfModule log_config_module>|<IfModule log_config_module>\\n\\\n    # custom error log format\\n\\\n    ErrorLogFormat \"[%t] [%l] [client %a] %M, referer: %{Referer}i\"\\n\\\n    \\n\\\n    # log 404 as errors\\n\\\n    LogLevel core:info\\n|g' /etc/apache2/httpd.conf\n\n# switch from mpm_prefork to mpm_event\nRUN sed -i 's|LoadModule mpm_prefork_module modules/mod_mpm_prefork.so|#LoadModule mpm_prefork_module modules/mod_mpm_prefork.so|g' /etc/apache2/httpd.conf\nRUN sed -i 's|#LoadModule mpm_event_module modules/mod_mpm_event.so|LoadModule mpm_event_module modules/mod_mpm_event.so|g' /etc/apache2/httpd.conf\n\n# enable important apache modules\nRUN sed -i 's|#LoadModule deflate_module modules/mod_deflate.so|LoadModule deflate_module modules/mod_deflate.so|g' /etc/apache2/httpd.conf\nRUN sed -i 's|#LoadModule expires_module modules/mod_expires.so|LoadModule expires_module modules/mod_expires.so|g' /etc/apache2/httpd.conf\nRUN sed -i 's|#LoadModule ext_filter_module modules/mod_ext_filter.so|LoadModule ext_filter_module modules/mod_ext_filter.so|g' /etc/apache2/httpd.conf\n\n# configure php-fpm to run as www-data\nRUN sed -i 's|user = nobody|user = www-data|g' /etc/php81/php-fpm.d/www.conf\nRUN sed -i 's|group = nobody|group = www-data|g' /etc/php81/php-fpm.d/www.conf\nRUN sed -i 's|;listen.owner = nobody|listen.owner = www-data|g' /etc/php81/php-fpm.d/www.conf\nRUN sed -i 's|;listen.group = group|listen.group = www-data|g' /etc/php81/php-fpm.d/www.conf\n\n# configure php-fpm to use unix socket\nRUN sed -i 's|listen = 127.0.0.1:9000|listen = /var/run/php-fpm8.sock|g' /etc/php81/php-fpm.d/www.conf\n\n# switch apache to use php-fpm through proxy\n# don't use proxy pass match because it does not support directory indexing\n#RUN sed -i 's|^DocumentRoot|ProxyPassMatch ^/(.*\\.php(/.*)?)$ fcgi://127.0.0.1:9000/var/www/localhost/htdocs/$1\\n\\nDocumentRoot|g' /etc/apache2/httpd.conf\n\n# use set handler to route php requests to php-fpm\nRUN sed -i 's|^DocumentRoot|<FilesMatch \"\\.php$\">\\n\\\n    SetHandler \"proxy:unix:/var/run/php-fpm8.sock\\|fcgi://localhost\"\\n\\\n</FilesMatch>\\n\\nDocumentRoot|g' /etc/apache2/httpd.conf\n\n# update directory index to add php files\nRUN sed -i 's|DirectoryIndex index.html|DirectoryIndex index.php index.html|g' /etc/apache2/httpd.conf\n\n# update apache timeout for easier debugging\nRUN sed -i 's|^Timeout .*$|Timeout 600|g' /etc/apache2/conf.d/default.conf\n\n# add http authentication support\nRUN sed -i 's|^DocumentRoot|<VirtualHost _default_:80>\\n    SetEnvIf Authorization \"(.*)\" HTTP_AUTHORIZATION=$1\\n</VirtualHost>\\n\\nDocumentRoot|g' /etc/apache2/httpd.conf\nRUN sed -i 's|<VirtualHost _default_:443>|<VirtualHost _default_:443>\\n\\nSetEnvIf Authorization \"(.*)\" HTTP_AUTHORIZATION=$1|g' /etc/apache2/conf.d/ssl.conf\n\n# update php max execution time for easier debugging\nRUN sed -i 's|^max_execution_time .*$|max_execution_time = 600|g' /etc/php81/php.ini\n\n# php log everything\nRUN sed -i 's|^error_reporting = E_ALL & ~E_DEPRECATED & ~E_STRICT$|error_reporting = E_ALL|g' /etc/php81/php.ini\n\n# add php-spx\nADD --chown=root:root include/php-spx/assets/ /usr/share/misc/php-spx/assets/\nADD --chown=root:root include/php-spx/spx.so /usr/lib/php81/modules/spx.so\nADD --chown=root:root include/php-spx/spx.ini /etc/php81/conf.d/spx.ini\n\n# add test pages to site\nADD --chown=root:root html/public/ /var/www/html$DOCUMENT_ROOT/\n\n# add entry point script\nADD --chown=root:root include/start.sh /tmp/start.sh\n\n# make entry point script executable\nRUN chmod +x /tmp/start.sh\n\n# set working dir\nWORKDIR /var/www/html/\n\n# set entrypoint\nENTRYPOINT [\"/tmp/start.sh\"]\n"
}