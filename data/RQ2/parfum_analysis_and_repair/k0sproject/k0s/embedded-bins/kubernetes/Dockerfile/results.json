{
  "startTime": 1674254582243,
  "endTime": 1674254583185,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 77
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG BUILDIMAGE\nFROM $BUILDIMAGE AS build\n\nARG VERSION\nARG BUILD_GO_TAGS\nARG BUILD_GO_CGO_ENABLED\nARG BUILD_GO_FLAGS\nARG BUILD_GO_LDFLAGS\nARG BUILD_GO_LDFLAGS_EXTRA\nENV GOPATH=/go\nENV COMMANDS=\"kubelet kube-apiserver kube-scheduler kube-controller-manager\"\n\nRUN apk add --no-cache build-base git go-bindata linux-headers rsync grep coreutils bash\n\nRUN mkdir -p $GOPATH/src/github.com/kubernetes/kubernetes\nRUN git -c advice.detachedHead=false clone -b v$VERSION --depth=1 https://github.com/kubernetes/kubernetes.git $GOPATH/src/github.com/kubernetes/kubernetes\nWORKDIR /go/src/github.com/kubernetes/kubernetes\n\nRUN go version\nRUN \\\n\tset -e; \\\n\t# Ensure that all of the binaries are built with CGO \\\n\tif [ ${BUILD_GO_CGO_ENABLED:-0} -eq 1 ]; then \\\n\t\texport KUBE_CGO_OVERRIDES=\"${COMMANDS}\"; \\\n\tfi; \\\n\tfor cmd in $COMMANDS; do \\\n\t\texport KUBE_GIT_VERSION=\"v$VERSION+k0s\"; \\\n\t\tmake GOFLAGS=\"${BUILD_GO_FLAGS} -tags=${BUILD_GO_TAGS}\" GOLDFLAGS=\"${BUILD_GO_LDFLAGS_EXTRA}\" WHAT=cmd/$cmd; \\\n\tdone\n\nFROM scratch\nCOPY --from=build \\\n\t/go/src/github.com/kubernetes/kubernetes/_output/local/bin/linux/*/kubelet \\\n\t/go/src/github.com/kubernetes/kubernetes/_output/local/bin/linux/*/kube-apiserver \\\n\t/go/src/github.com/kubernetes/kubernetes/_output/local/bin/linux/*/kube-scheduler \\\n\t/go/src/github.com/kubernetes/kubernetes/_output/local/bin/linux/*/kube-controller-manager \\\n\t/bin/\nCMD [\"/bin/kubelet\"]\n"
}