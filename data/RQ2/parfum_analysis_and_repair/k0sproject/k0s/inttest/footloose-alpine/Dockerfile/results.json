{
  "startTime": 1674220324992,
  "endTime": 1674220325859,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 132
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 120
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 101
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.16\n\nARG ETCD_ARCH\nARG ETCD_VERSION\nARG KUBE_VERSION\n\n# Apply our changes to the image\nCOPY root/ /\n\nRUN apk add --no-cache openrc openssh-server bash busybox-initscripts coreutils curl haproxy nginx inotify-tools\n# enable syslog and sshd\nRUN rc-update add cgroups boot\nRUN rc-update add syslog boot\nRUN rc-update add machine-id boot\nRUN rc-update add sshd default\nRUN rc-update add local default\nRUN rc-update add nginx default\n# Ensures that /usr/local/bin/k0s is seeded from /dist at startup\nRUN rc-update add k0s-seed default\n\n# remove -docker keyword so we actually mount cgroups in container\nRUN sed -i -e '/keyword/s/-docker//' /etc/init.d/cgroups\n# disable ttys\nRUN sed -i -e 's/^\\(tty[0-9]\\)/# \\1/' /etc/inittab\n# enable root logins\nRUN sed -i -e 's/^root:!:/root::/' /etc/shadow\n\n# Put kubectl into place to ease up debugging\nRUN curl -f -Lo /usr/local/bin/kubectl https://storage.googleapis.com/kubernetes-release/release/v$KUBE_VERSION/bin/linux/amd64/kubectl \\\n  && chmod +x /usr/local/bin/kubectl\nENV KUBECONFIG=/var/lib/k0s/pki/admin.conf\n\n# Install etcd for smoke tests with external etcd\nRUN curl -f -L https://github.com/etcd-io/etcd/releases/download/v$ETCD_VERSION/etcd-v$ETCD_VERSION-linux-$ETCD_ARCH.tar.gz \\\n  | tar xz -C /opt --strip-components=1\n\n# Install cri-dockerd shim for custom CRI testing\nRUN curl -sSfL https://github.com/Mirantis/cri-dockerd/releases/download/v0.2.0/cri-dockerd-v0.2.0-linux-amd64.tar.gz | tar -zxvf - cri-dockerd -C /usr/local/bin/\nADD cri-dockerd.sh /etc/init.d/cri-dockerd\n"
}