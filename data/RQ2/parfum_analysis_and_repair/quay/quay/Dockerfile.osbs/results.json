{
  "startTime": 1674248627158,
  "endTime": 1674248630317,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 51
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM registry.redhat.io/ubi8:latest AS build-npm\n\nCOPY $REMOTE_SOURCE $REMOTE_SOURCE_DIR\nWORKDIR $REMOTE_SOURCE_DIR/app\n\nRUN INSTALL_PKGS=\"\\\n        nodejs \\\n    \" && \\\n    yum -y --setopt=tsflags=nodocs --setopt=skip_missing_names_on_install=False install $INSTALL_PKGS\n\nRUN cd source/config-tool/pkg/lib/editor && \\\n    npm config list && \\\n    npm install --ignore-engines --loglevel verbose && \\\n    npm run build && npm cache clean --force;\n\nRUN cd source/quay && \\\n    npm config list && \\\n    npm install --ignore-engines --loglevel verbose && \\\n    npm run build && npm cache clean --force;\n\n\nFROM openshift/golang-builder:1.15 AS build-gomod\n\nCOPY --from=build-npm $REMOTE_SOURCE_DIR $REMOTE_SOURCE_DIR\nWORKDIR $REMOTE_SOURCE_DIR/app\nRUN source $CACHITO_ENV_FILE\n\nCOPY --from=build-npm $REMOTE_SOURCE_DIR/app/source/config-tool/pkg/lib/editor/static/build $REMOTE_SOURCE_DIR/app/source/config-tool/pkg/lib/editor/static/build\n\nRUN cd source/config-tool && \\\n    go mod vendor && \\\n    go build ./cmd/config-tool\n\nRUN cd source/pushgateway && \\\n    go mod vendor && \\\n    go build\n\n\nFROM registry.redhat.io/ubi8:latest\n\nLABEL com.redhat.component=\"quay-registry-container\"\nLABEL name=\"quay/quay-rhel8\"\nLABEL version=\"v3.6.0\"\nLABEL io.k8s.display-name=\"Red Hat Quay\"\nLABEL io.k8s.description=\"Red Hat Quay\"\nLABEL summary=\"Red Hat Quay\"\nLABEL maintainer=\"support@redhat.com\"\nLABEL io.openshift.tags=\"quay\"\nENV RED_HAT_QUAY=true\n\nENV PYTHON_VERSION=3.9 \\\n    PYTHON_ROOT=/usr/local/lib/python3.9 \\\n    PATH=$HOME/.local/bin/:$PATH \\\n    PYTHONUNBUFFERED=1 \\\n    PYTHONIOENCODING=UTF-8 \\\n    LANG=en_US.utf8 \\\n    PYTHONUSERBASE_SITE_PACKAGE=/usr/local/lib/python3.9/site-packages\n\nENV QUAYDIR=/quay-registry \\\n    QUAYCONF=/quay-registry/conf \\\n    QUAYRUN /quay-registry/conf \\\n    QUAYPATH=\".\"\n\nRUN mkdir $QUAYDIR\nWORKDIR $QUAYDIR\n\nARG PIP_CERT\nCOPY --from=build-npm $REMOTE_SOURCE_DIR $REMOTE_SOURCE_DIR\nCOPY --from=build-npm $PIP_CERT $PIP_CERT\nRUN cp -Rp $REMOTE_SOURCE_DIR/app/source/quay/* $QUAYDIR\n\nCOPY --from=build-gomod $REMOTE_SOURCE_DIR/app/source/config-tool/config-tool /usr/local/bin/config-tool\nCOPY --from=build-gomod $REMOTE_SOURCE_DIR/app/source/config-tool/pkg/lib/editor $QUAYDIR/config_app\nCOPY --from=build-gomod $REMOTE_SOURCE_DIR/app/source/pushgateway/pushgateway /usr/local/bin/pushgateway\n\nRUN rm -Rf node_modules config_app/node_modules\n\nRUN INSTALL_PKGS=\"\\\n        python39 \\\n        nginx \\\n        openldap \\\n        postgresql \\\n        gcc-c++ git \\\n        openldap-devel \\\n        dnsmasq \\\n        memcached \\\n        openssl \\\n        skopeo \\\n        python39-devel \\\n        libffi-devel \\\n        openssl-devel \\\n        postgresql-devel \\\n        libjpeg-devel \\\n        \" && \\\n    yum -y --setopt=tsflags=nodocs --setopt=skip_missing_names_on_install=False install $INSTALL_PKGS && \\\n    yum -y update && \\\n    yum -y clean all\n\nRUN alternatives --set python /usr/bin/python3 && \\\n    python -m pip install --no-cache-dir --upgrade setuptools pip && \\\n    python -m pip install --no-cache-dir wheel && \\\n    python -m pip install --no-cache-dir -r requirements-osbs.txt --no-cache && \\\n    python -m pip freeze\n\nRUN ln -s $QUAYCONF /conf && \\\n    ln -sf /dev/stdout /var/log/nginx/access.log && \\\n    ln -sf /dev/stdout /var/log/nginx/error.log && \\\n    chmod -R a+rwx /var/log/nginx\n\n# Cleanup\nRUN UNINSTALL_PKGS=\"\\\n        gcc-c++ git \\\n        openldap-devel \\\n        python39-devel \\\n        libffi-devel \\\n        openssl-devel \\\n        postgresql-devel \\\n        libjpeg-devel \\\n        kernel-headers \\\n    \" && \\\n    yum remove -y $UNINSTALL_PKGS && \\\n    yum clean all && \\\n    rm -rf /var/cache/yum /tmp/* /var/tmp/* /root/.cache && \\\n    rm -rf $REMOTE_SOURCE_DIR\n\nEXPOSE 8080 8443 7443\n\nRUN chgrp -R 0 $QUAYDIR && \\\n    chmod -R g=u $QUAYDIR\n\nRUN mkdir /datastorage && chgrp 0 /datastorage && chmod g=u /datastorage && \\\n    mkdir -p /var/log/nginx && chgrp 0 /var/log/nginx && chmod g=u /var/log/nginx && \\\n    mkdir -p /conf/stack && chgrp 0 /conf/stack && chmod g=u /conf/stack && \\\n    mkdir -p /tmp && chgrp 0 /tmp && chmod g=u /tmp && \\\n    chmod g=u /etc/passwd\n\nRUN chgrp 0 /var/log/nginx && \\\n    chmod g=u /var/log/nginx && \\\n    chgrp -R 0 /etc/pki/ca-trust/extracted && \\\n    chmod -R g=u /etc/pki/ca-trust/extracted && \\\n    chgrp -R 0 /etc/pki/ca-trust/source/anchors && \\\n    chmod -R g=u /etc/pki/ca-trust/source/anchors && \\\n    chgrp -R 0 /usr/local/lib/python3.9/site-packages/certifi && \\\n    chmod -R g=u /usr/local/lib/python3.9/site-packages/certifi\n\nVOLUME [\"/var/log\", \"/datastorage\", \"/tmp\", \"/conf/stack\"]\n\nUSER 1001\n\nENTRYPOINT [\"dumb-init\", \"--\", \"/quay-registry/quay-entrypoint.sh\"]\nCMD [\"registry\"]\n"
}