{
  "startTime": 1674255126451,
  "endTime": 1674255127297,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 18,
        "columnEnd": 34
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM --platform=linux/amd64 node:16 as build\nWORKDIR /kubenav\nRUN npm install -g @ionic/cli && npm cache clean --force;\nCOPY package.json package-lock.json /kubenav/\nRUN npm install && npm cache clean --force;\nENV REACT_APP_INCLUSTER true\nCOPY public /kubenav/public\nCOPY src /kubenav/src\nCOPY .eslintrc.json .prettierrc.json capacitor.config.json ionic.config.json tsconfig.json /kubenav/\nRUN ionic build\n\nFROM golang:1.17.3-alpine3.15 as server\nARG TARGETPLATFORM\nARG BUILDPLATFORM\nRUN echo \"Building on $BUILDPLATFORM, for $TARGETPLATFORM\" > /log\nRUN apk update && apk add --no-cache git make\nWORKDIR /kubenav\nCOPY go.mod go.sum /kubenav/\nRUN go mod download\nCOPY .git /kubenav/.git\nCOPY cmd /kubenav/cmd\nCOPY pkg /kubenav/pkg\nCOPY Makefile /kubenav\nRUN export CGO_ENABLED=0 && make build-server\n\nFROM alpine:3.15\nRUN apk update && apk add --no-cache ca-certificates\nRUN mkdir /kubenav\nCOPY --from=build /kubenav/build /kubenav/build\nCOPY --from=server /kubenav/bin/server /kubenav\nWORKDIR /kubenav\nUSER nobody\nENTRYPOINT  [ \"./server\" ]\n"
}