{
  "startTime": 1674221010708,
  "endTime": 1674221012103,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 0,
        "columnEnd": 153
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 16,
        "columnStart": 9,
        "columnEnd": 137
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 16,
        "columnStart": 9,
        "columnEnd": 137
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 0,
        "columnEnd": 153
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 16,
        "columnStart": 9,
        "columnEnd": 137
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 18,
        "columnStart": 9,
        "columnEnd": 34
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:bionic\n\nARG USER_UID\nARG USER_GID\nARG CURRENT_WORKING_DIR\nARG ANDROID_SDK\n\nRUN apt update && \\\n apt install --no-install-recommends -yy gnome-common gobject-introspection nasm openjdk-8-jdk build-essential git python-setuptools python3-setuptools wget curl unzip sudo rsync && \\\napt clean && apt autoclean && rm -rf /var/lib/apt/lists/*;\n\n# This layer is needed by cerbero to avoid an interactive sudo apt-get failing, needs to be update with subsequent cerbero versions\nRUN sudo apt -yy --no-install-recommends install autotools-dev automake autoconf libtool g++ autopoint make cmake bison flex yasm pkg-config pkg-config gtk-doc-tools \\\nlibxv-dev libx11-dev libpulse-dev python3-dev texinfo gettext build-essential build-essential doxygen curl libxext-dev libxi-dev \\\nx11proto-record-dev libxrender-dev libgl1-mesa-dev libxfixes-dev libxdamage-dev libxcomposite-dev libasound2-dev libxml-simple-perl \\\ndpkg-dev debhelper devscripts fakeroot transfig gperf libdbus-glib-1-dev wget glib-networking libxtst-dev libxrandr-dev \\\nlibglu1-mesa-dev libegl1-mesa-dev git subversion xutils-dev intltool ccache python3-setuptools python3-pip libssl-dev chrpath libfuse-dev pkg-config doxygen curl libxext-dev libxi-dev \\\nx11proto-record-dev libxrender-dev libgl1-mesa-dev libxfixes-dev libxdamage-dev libxcomposite-dev libasound2-dev libxml-simple-perl \\\ndpkg-dev debhelper build-essential && rm -rf /var/lib/apt/lists/*;\n\n# This layer is needed to install spice-gtk dependencies, requires pyparsing\nRUN python3 -m pip install pyparsing\n\nRUN mkdir -p $ANDROID_SDK $CURRENT_WORKING_DIR\n\nRUN groupadd -g $USER_GID remote-clients\nRUN useradd -u $USER_UID -g $USER_GID -m remote-clients\n\nRUN echo \"remote-clients ALL=(ALL) NOPASSWD: ALL\" >> /etc/sudoers\n\nUSER remote-clients\nWORKDIR ${CURRENT_WORKING_DIR}\n\nCMD export PROJECT=libs && export ANDROID_SDK=$ANDROID_SDK && export PATH=$PATH:$ANDROID_SDK/platform-tools/ && export PATH=$PATH:$ANDROID_SDK/tools && \\\nyes | $ANDROID_SDK/tools/bin/sdkmanager --licenses && \\\n./bVNC/prepare_project.sh libs $ANDROID_SDK\n"
}