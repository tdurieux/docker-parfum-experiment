{
  "startTime": 1674217924386,
  "endTime": 1674217925377,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 18
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM golang:1.16-alpine3.12 as builder\n\nWORKDIR $GOPATH/src/github.com/feiyu563/PrometheusAlert\n\nRUN sed -i 's/dl-cdn.alpinelinux.org/mirrors.aliyun.com/g' /etc/apk/repositories && \\\n    apk update && apk upgrade && \\\n    apk add --no-cache gcc g++ sqlite-libs make git\n\nENV GO111MODULE on\n\nENV GOPROXY https://goproxy.io\n\nCOPY . $GOPATH/src/github.com/feiyu563/PrometheusAlert\n\nRUN make build\n\n# -----------------------------------------------------------------------------\nFROM alpine:3.12\n\nLABEL maintainer=\"jikun.zhang\"\n\nRUN sed -i 's/dl-cdn.alpinelinux.org/mirrors.aliyun.com/g' /etc/apk/repositories && \\\n    apk add --no-cache tzdata && \\\n    cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime && \\\n    echo \"Asia/Shanghai\" > /etc/timezone && \\\n    apk del tzdata && \\\n    apk update && apk upgrade && apk add --no-cache sqlite-libs curl sqlite\n\nHEALTHCHECK --start-period=10s --interval=20s --timeout=3s --retries=3 \\\n    CMD curl -fs http://localhost:8080/health || exit 1\n\nWORKDIR /app\n\nCOPY --from=builder /go/src/github.com/feiyu563/PrometheusAlert/PrometheusAlert .\n\nCOPY db/PrometheusAlertDB.db /opt/PrometheusAlertDB.db\n\nCOPY conf/app-example.conf conf/app.conf\n\nCOPY db db\n\nCOPY logs logs\n\nCOPY static static\n\nCOPY views views\n\nCOPY docker-entrypoint.sh docker-entrypoint.sh\n\nENTRYPOINT [ \"/bin/sh\", \"/app/docker-entrypoint.sh\" ]\n"
}