{
  "startTime": 1674255408902,
  "endTime": 1674255410020,
  "originalSmells": [
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 37,
        "lineEnd": 38,
        "columnStart": 22,
        "columnEnd": 58
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright 2017 The Go Authors. All rights reserved.\n# Use of this source code is governed by a BSD-style\n# license that can be found in the LICENSE file.\n\nFROM golang:1.17 AS build\nLABEL maintainer=\"golang-dev@googlegroups.com\"\n\nRUN mkdir /gocache\nENV GOCACHE /gocache\n\nCOPY go.mod /go/src/golang.org/x/build/go.mod\nCOPY go.sum /go/src/golang.org/x/build/go.sum\n\nWORKDIR /go/src/golang.org/x/build\n\n# Download module dependencies to improve speed of re-building the\n# Docker image during minor code changes.\nRUN go mod download\n\n# Makefile passes a string with --build-arg version\n# This becomes part of the cache key for all subsequent instructions,\n# so it must not be placed above the \"go mod download\" command above.\nARG version=unknown\n\n# TODO: ideally we'd first copy all of x/build here EXCEPT\n# cmd/coordinator, then build x/build/..., and *then* COPY in the\n# cmd/coordinator files and then build the final binary. Currently we\n# do too much building of x/build/foo stuff when just modifying\n# cmd/coordinator/*.go files.\n\nCOPY . /go/src/golang.org/x/build/\n\nRUN go install -ldflags \"-X 'main.Version=$version'\" golang.org/x/build/cmd/coordinator\n\n\nFROM debian:stretch AS build_drawterm\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n    git-core ca-certificates make gcc libc6-dev libx11-dev && rm -rf /var/lib/apt/lists/*;\n\n# drawterm connects to plan9 instances like:\n#    echo glenda123 | ./drawterm -a <addr> -c <addr> -u glenda -k user=glenda\n# Where <addr> is the IP address of the Plan 9 instance on GCE,\n# \"glenda\" is the username and \"glenda123\" is the password.\nRUN git clone https://github.com/0intro/conterm /tmp/conterm && \\\n    cd /tmp/conterm && \\\n    CONF=unix make && mv /tmp/conterm/drawterm /usr/local/bin && \\\n    rm -rf /tmp/conterm\n\n\nFROM debian:stretch\n\n# openssh client is for the gomote ssh proxy client.\n# telnet is for the gomote ssh proxy to windows. (no ssh server there)\nRUN apt-get update && apt-get install -y \\\n\t--no-install-recommends \\\n\tca-certificates \\\n\topenssh-client \\\n\ttelnet \\\n\t&& rm -rf /var/lib/apt/lists/*\n\n\nCOPY --from=build /go/src/golang.org/x/build/cmd/coordinator/internal/dashboard/dashboard.html /dashboard.html\nCOPY --from=build /go/src/golang.org/x/build/cmd/coordinator/style.css /style.css\nCOPY --from=build /go/bin/coordinator /\nCOPY --from=build_drawterm /usr/local/bin/drawterm /usr/local/bin/\n\nENTRYPOINT [\"/coordinator\"]\n"
}