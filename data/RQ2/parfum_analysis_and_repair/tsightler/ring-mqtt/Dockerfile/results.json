{
  "startTime": 1674249854593,
  "endTime": 1674249855484,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 117
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 137
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 101
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 56
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.15.4\n\nENV LANG=\"C.UTF-8\" \\\n    PS1=\"$(whoami)@$(hostname):$(pwd)$ \" \\\n    S6_BEHAVIOUR_IF_STAGE2_FAILS=2 \\\n    S6_CMD_WAIT_FOR_SERVICES=1 \\\n    TERM=\"xterm-256color\"\n\nCOPY . /app/ring-mqtt\nRUN apk add --no-cache tar git libcrypto1.1 libssl1.1 musl-utils musl bash curl jq tzdata nodejs npm mosquitto-clients && \\\n    APKARCH=\"$(apk --print-arch)\" && \\\n    case \"${APKARCH}\" in \\\n        aarch64|armhf) \\\n            S6ARCH=\"${APKARCH}\";; \\\n        x86_64) \\\n            S6ARCH=\"amd64\";; \\\n        armv7) \\\n            S6ARCH=\"arm\";; \\\n        *) \\\n            echo >&2 \"ERROR: Unsupported architecture '$APKARCH'\" \\\n            exit 1;; \\\n    esac && \\\n    curl -f -L -s \"https://github.com/just-containers/s6-overlay/releases/download/v2.2.0.3/s6-overlay-${S6ARCH}.tar.gz\" | tar zxf - -C / && \\\n    mkdir -p /etc/fix-attrs.d && \\\n    mkdir -p /etc/services.d && \\\n    cp -a /app/ring-mqtt/init/s6/* /etc/. && \\\n    rm -Rf /app/ring-mqtt/init && \\\n    case \"${APKARCH}\" in \\\n        x86_64) \\\n            RSSARCH=\"amd64\";; \\\n        aarch64) \\\n            RSSARCH=\"arm64v8\";; \\\n        armv7|armhf) \\\n            RSSARCH=\"armv7\";; \\\n        *) \\\n            echo >&2 \"ERROR: Unsupported architecture '$APKARCH'\" \\\n            exit 1;; \\\n    esac && \\\n    curl -f -L -s \"https://github.com/aler9/rtsp-simple-server/releases/download/v0.18.2/rtsp-simple-server_v0.18.2_linux_${RSSARCH}.tar.gz\" | tar zxf - -C /usr/local/bin rtsp-simple-server && \\\n    curl -f -J -L -o /tmp/bashio.tar.gz \"https://github.com/hassio-addons/bashio/archive/v0.14.3.tar.gz\" && \\\n    mkdir /tmp/bashio && \\\n    tar zxvf /tmp/bashio.tar.gz --strip 1 -C /tmp/bashio && \\\n    mv /tmp/bashio/lib /usr/lib/bashio && \\\n    ln -s /usr/lib/bashio/bashio /usr/bin/bashio && \\\n    chmod +x /app/ring-mqtt/scripts/*.sh && \\\n    mkdir /data && \\\n    chmod 777 /data /app /run && \\\n    cd /app/ring-mqtt && \\\n    chmod +x ring-mqtt.js && \\\n    chmod +x init-ring-mqtt.js && \\\n    npm install && \\\n    rm -Rf /root/.npm && \\\n    rm -f -r /tmp/* && npm cache clean --force; && rm /tmp/bashio.tar.gz\nENTRYPOINT [ \"/init\" ]\n\nEXPOSE 8554/tcp\nEXPOSE 55123/tcp\n\nARG BUILD_VERSION\nARG BUILD_DATE\n\nLABEL \\\n    io.hass.name=\"Ring-MQTT with Video Streaming\" \\\n    io.hass.description=\"Home Assistant Community Add-on for Ring Devices\" \\\n    io.hass.type=\"addon\" \\\n    io.hass.version=${BUILD_VERSION} \\\n    maintainer=\"Tom Sightler <tsightler@gmail.com>\" \\\n    org.opencontainers.image.title=\"Ring-MQTT with Video Streaming\" \\\n    org.opencontainers.image.description=\"Intergrate wtih Ring devices using MQTT/RTSP\" \\\n    org.opencontainers.image.authors=\"Tom Sightler <tsightler@gmail.com> (and various other contributors)\" \\\n    org.opencontainers.image.licenses=\"MIT\" \\\n    org.opencontainers.image.source=\"https://github.com/tsightler/ring-mqtt\" \\\n    org.opencontainers.image.documentation=\"https://github.com/tsightler/README.md\" \\\n    org.opencontainers.image.created=${BUILD_DATE} \\\n    org.opencontainers.image.version=${BUILD_VERSION}\n"
}