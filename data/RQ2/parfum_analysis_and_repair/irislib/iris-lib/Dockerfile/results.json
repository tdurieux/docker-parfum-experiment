{
  "startTime": 1674217681271,
  "endTime": 1674217682537,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 17
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 19
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 20,
        "columnEnd": 36
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 67,
        "columnEnd": 83
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 22,
        "columnEnd": 38
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 21,
        "columnEnd": 37
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 22,
        "columnEnd": 38
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 23,
        "columnEnd": 39
      }
    }
  ],
  "repairedDockerfile": "FROM node:current-alpine AS iris-base\n\n#ARG NODE_ENV=production\nARG NODE_ENV=test\nENV NODE_ENV=$NODE_ENV\n\nENV BUILD_DEPENDENCIES \\\n  python \\\n  make \\\n  g++\nENV TEST_DEPENDENCIES \\\n  git\n\nRUN mkdir -p /app\nWORKDIR /app\n\nCOPY package.json yarn.lock ./\n\nRUN apk update && apk upgrade \\\n  && apk add --no-cache --virtual .build-dependencies $BUILD_DEPENDENCIES \\\n  && apk add --no-cache $TEST_DEPENDENCIES\nRUN yarn install && yarn cache clean;\nRUN yarn install --production=true --modules-folder ./yarn_prod && yarn cache clean;\nRUN apk del .build-dependencies\n\n# ============================================= #\n\nFROM iris-base AS iris-lib\nWORKDIR /app\n\nCOPY . .\n\nRUN yarn build:cjs && yarn cache clean;\nRUN yarn build:es && yarn cache clean;\nRUN yarn build:umd && yarn cache clean;\nRUN yarn build:docs && yarn cache clean;\n\n# ============================================= #\n\nFROM iris-lib AS iris-lib-test\nCMD ['yarn', 'test:all']\n\n# ============================================= #\n\nFROM node:current-alpine AS irisnode-base\n\n# Parameters for the container:\n\n# RECOMMENDED:\n# Persist stand-alone configuration, cache, keyfiles between sessions\n# -v /app/.iris/\n\n# OPTIONAL: Use external index / key files. Mount these directly, or use secrets mechanism of your docker host.\n# Map index config file\n# -v ./index.json:/app/index.json\n# Use keyfile (note: if not provided, a new key file is created)\n# -v ./keys.json:/app/keys.json\n\n# IRIS_ENV: production -> connects to peers, anything else -> doesn't\nARG IRIS_INDEX_CONFIG=\"\"\nARG IRIS_KEYFILE=\"\"\nARG IRIS_ENV=dev\n\nENV IRIS_INDEX_CONFIG=$IRIS_INDEX_CONFIG\nENV IRIS_KEYFILE=$IRIS_KEYFILE\nENV IRIS_ENV=$IRIS_ENV\n\nRUN apk add --no-cache tini\nENTRYPOINT [\"/sbin/tini\", \"--\"]\nEXPOSE 8765\n\nRUN mkdir -p /app/.iris\nWORKDIR /app\n\n# Yarn dependencies, built libs, service-wrapper\nCOPY --from=iris-lib /app/dist/*.js /app/package.json /app/yarn.lock /app/config.default.json ./\nCOPY --from=iris-lib /app/cjs /app/cjs\n\n# ============================================= #\n\nFROM irisnode-base AS irisnode-prod\n\nCOPY --from=iris-lib /app/yarn_prod /app/node_modules\nENV NODE_ENV='production'\n\nCMD [\"yarn\", \"serve\"]\n\n# ============================================= #\n\nFROM irisnode-base AS irisnode-dev\n\nCOPY --from=iris-lib /app/node_modules /app/node_modules\nCOPY .*rc ./\n\nCMD [\"yarn\", \"dev\"]\n"
}