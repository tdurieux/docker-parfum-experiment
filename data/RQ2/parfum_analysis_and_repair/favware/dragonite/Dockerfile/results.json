{
  "startTime": 1674250531471,
  "endTime": 1674250532446,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 44
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# ================ #\n#    Base Stage    #\n# ================ #\n\nFROM node:18-bullseye-slim as base\n\nWORKDIR /usr/src/app\n\nENV HUSKY=0\nENV CI=true\nENV FORCE_COLOR=true\n\nRUN apt-get update && \\\n    apt-get upgrade -y --no-install-recommends && \\\n    apt-get install -y --no-install-recommends build-essential python3 dumb-init && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get autoremove\n\nCOPY --chown=node:node yarn.lock .\nCOPY --chown=node:node package.json .\nCOPY --chown=node:node .yarnrc.yml .\nCOPY --chown=node:node .yarn/ .yarn/\n\nRUN sed -i 's/\"postinstall\": \"husky install .github\\/husky\"/\"prepare\": \"\"/' ./package.json\n\nENTRYPOINT [\"dumb-init\", \"--\"]\n\n# ================ #\n#   Builder Stage  #\n# ================ #\n\nFROM base as builder\n\nENV NODE_ENV=\"development\"\n\nCOPY --chown=node:node tsconfig.base.json tsconfig.base.json\nCOPY --chown=node:node tsup.config.ts .\nCOPY --chown=node:node src/ src/\n\nRUN yarn install --immutable && yarn cache clean;\nRUN yarn run build\n\n# ================ #\n#   Runner Stage   #\n# ================ #\n\nFROM base AS runner\n\nENV NODE_ENV=\"production\"\nENV NODE_OPTIONS=\"--enable-source-maps\"\n\nCOPY --chown=node:node src/.env src/.env\nCOPY --chown=node:node --from=builder /usr/src/app/dist dist\n\nRUN yarn workspaces focus --all --production && yarn cache clean;\nRUN chown node:node /usr/src/app/\n\nUSER node\n\nCMD [ \"yarn\", \"run\", \"start\" ]\n"
}