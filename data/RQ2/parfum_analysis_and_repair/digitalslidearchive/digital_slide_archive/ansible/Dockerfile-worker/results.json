{
  "startTime": 1674248245315,
  "endTime": 1674248246757,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 57
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 61
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:20.04\nLABEL maintainer=\"Kitware, Inc. <kitware@kitware.com>\"\n\nRUN apt-get update && \\\n    DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -qy tzdata && \\\n    apt-get install --yes --no-install-recommends software-properties-common && \\\n    add-apt-repository -y ppa:deadsnakes/ppa && \\\n    apt-get update && \\\n    DEBIAN_FRONTEND=noninteractive apt-get --yes --no-install-recommends -o Dpkg::Options::=\"--force-confdef\" -o Dpkg::Options::=\"--force-confold\" dist-upgrade && \\\n    apt-get remove -y python3-apt && \\\n    apt-get install -y --no-install-recommends \\\n    # Primary tools \\\n    sudo libssl-dev net-tools locales apt-utils curl gnupg2 \\\n    python3-apt \\\n    # Python 3.8 \\\n    python3.8-dev python3.8-distutils python3.8-venv \\\n    # Editors \\\n    vim nano \\\n    # Git \\\n    git \\\n    # Fuse \\\n    fuse \\\n    # Install packages for routing to mongodb \\\n    iptables dnsutils \\\n    # Install some additional packages for convenience when testing with bash \\\n    iputils-ping telnet-ssl tmux less \\\n    && \\\n    rm -rf /var/lib/apt/lists/* /tmp/*\nRUN locale-gen en_US.UTF-8\n# Make Python 3.8 the default to make ansible content\nRUN ln -s \"$(which python3.8)\" /usr/local/bin/python && \\\n    ln -s \"$(which python3.8)\" /usr/local/bin/python3 && \\\n    ln -s \"$(which python3.8)\" /usr/local/bin/python3m\nRUN curl -f --silent https://bootstrap.pypa.io/get-pip.py -O && \\\n    python3 get-pip.py && \\\n    python3.8 get-pip.py && \\\n    rm get-pip.py && \\\n    which pip && \\\n    which python && \\\n    pip --version && \\\n    python --version && \\\n    which pip3 && \\\n    which python3 && \\\n    pip3 --version && \\\n    python3 --version && \\\n    find / -xdev -name '*.py[oc]' -type f -exec rm {} \\+ && \\\n    find / -xdev -name __pycache__ -type d -exec rm -r {} \\+\nRUN pip install --no-cache-dir ansible && \\\n    sudo find / -xdev -name '*.py[oc]' -type f -exec rm {} \\+ && \\\n    sudo find / -xdev -name __pycache__ -type d -exec rm -r {} \\+\nRUN adduser --disabled-password --gecos '' ubuntu && \\\n    adduser ubuntu sudo && \\\n    echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers\nUSER ubuntu\nENV LANG en_US.UTF-8\nWORKDIR /home/ubuntu\nRUN git clone --depth=1 --no-checkout https://github.com/DigitalSlideArchive/digital_slide_archive && \\\n    cd digital_slide_archive && \\\n    mkdir -p ansible && \\\n    rm -rf .git\nWORKDIR /home/ubuntu/digital_slide_archive\nENV GIRDER_EXEC_USER ubuntu\nCOPY --chown=ubuntu:ubuntu . /home/ubuntu/digital_slide_archive/ansible/.\nWORKDIR /home/ubuntu/digital_slide_archive/ansible\nRUN ansible-galaxy install -r requirements.yml -p /home/ubuntu/digital_slide_archive/ansible/roles/ && \\\n    sudo find / -xdev -name '*.py[oc]' -type f -exec rm {} \\+ && \\\n    sudo find / -xdev -name __pycache__ -type d -exec rm -r {} \\+\n\nRUN ansible-playbook -i inventory/local docker_ansible.yml --extra-vars=\"docker=girder_worker\" && \\\n    sudo rm -rf /var/lib/apt/lists/* /tmp/* \\\n                /home/ubuntu/.cache \\\n                /home/ubuntu/.ansible* \\\n                /home/ubuntu/.wget-hsts \\\n                /root/.cache/pip && \\\n    sudo find / -xdev -name '*.py[oc]' -type f -exec rm {} \\+ && \\\n    sudo find / -xdev -name __pycache__ -type d -exec rm -r {} \\+\n\nRUN echo 'task_reject_on_worker_lost = True' >> /opt/girder_worker/girder_worker/celeryconfig.py\nRUN echo 'task_acks_late = True' >> /opt/girder_worker/girder_worker/celeryconfig.py\n\nRUN mkdir /opt/logs\n\nWORKDIR /opt/girder_worker\n\n# If the environment variable\n#   HOST_MONGO=true\n# is set, mongodb is added to the /etc/hosts as mapping to the docker host ip\n# address\nCMD sudo -E PATH=\"/home/ubuntu/.local/bin:$PATH\" python /opt/girder_worker/set_environment.py ubuntu tmp_root && \\\n    sudo mkdir -p /tmp/girder_worker && \\\n    sudo chmod a+rwx /tmp/girder_worker && \\\n    sudo -E su ubuntu -c \\\n    'PATH=\"/home/ubuntu/.local/bin:$PATH\" DOCKER_CLIENT_TIMEOUT=86400 TEMP=\"${GIRDER_WORKER_TMP_ROOT:-$TEMP}\" PYTHONUNBUFFERED=true GW_DIRECT_PATHS=true python -m girder_worker --concurrency=\"${GIRDER_WORKER_CONCURRENCY:-2}\" -Ofair --prefetch-multiplier=1 -E >/opt/logs/worker.log 2>&1'\n"
}