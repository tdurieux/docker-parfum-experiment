{
  "startTime": 1674216786517,
  "endTime": 1674216788500,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 80
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 72,
        "columnEnd": 129
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 22,
        "columnEnd": 112
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 8,
        "columnEnd": 42
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 8,
        "columnEnd": 42
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 22,
        "columnEnd": 112
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 8,
        "columnEnd": 42
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 22,
        "columnEnd": 108
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 4,
        "columnEnd": 34
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 8,
        "columnEnd": 65
      }
    }
  ],
  "repairedDockerfile": "#Use debian:stable-slim as a builder and then copy everything.\nFROM debian:stable-slim as builder\n\n#Set mosquitto and plugin versions.\n#Change them for your needs.\nENV MOSQUITTO_VERSION=1.6.10\nENV PLUGIN_VERSION=0.6.1\nENV GO_VERSION=1.13.8\n\nWORKDIR /app\n\n#Get mosquitto build dependencies.\nRUN apt-get update && apt-get install --no-install-recommends -y libc-ares2 libc-ares-dev openssl uuid uuid-dev wget build-essential git && rm -rf /var/lib/apt/lists/*;\n\nRUN if [ \"$(echo $MOSQUITTO_VERSION | head -c 1)\" != 2 ]; then \\\n        apt install --no-install-recommends -y libwebsockets-dev; rm -rf /var/lib/apt/lists/*; \\\n    else \\\n        export LWS_VERSION=2.4.2  && \\\n        wget https://github.com/warmcat/libwebsockets/archive/v${LWS_VERSION}.tar.gz -O /tmp/lws.tar.gz && \\\n        mkdir -p /build/lws && \\\n        tar --strip=1 -xf /tmp/lws.tar.gz -C /build/lws && \\\n        rm /tmp/lws.tar.gz && \\\n        cd /build/lws && \\\n        cmake . \\\n            -DCMAKE_BUILD_TYPE=MinSizeRel \\\n            -DCMAKE_INSTALL_PREFIX=/usr \\\n            -DLWS_IPV6=ON \\\n            -DLWS_WITHOUT_BUILTIN_GETIFADDRS=ON \\\n            -DLWS_WITHOUT_CLIENT=ON \\\n            -DLWS_WITHOUT_EXTENSIONS=ON \\\n            -DLWS_WITHOUT_TESTAPPS=ON \\\n            -DLWS_WITH_HTTP2=OFF \\\n            -DLWS_WITH_SHARED=OFF \\\n            -DLWS_WITH_ZIP_FOPS=OFF \\\n            -DLWS_WITH_ZLIB=OFF && \\\n        make -j \"$(nproc)\" && \\\n        rm -rf /root/.cmake ; \\\n    fi\n\nRUN mkdir -p mosquitto/auth mosquitto/conf.d\n\nRUN wget https://mosquitto.org/files/source/mosquitto-${MOSQUITTO_VERSION}.tar.gz\nRUN tar xzvf mosquitto-${MOSQUITTO_VERSION}.tar.gz && rm mosquitto-${MOSQUITTO_VERSION}.tar.gz\n\n#Build mosquitto.\nRUN cd mosquitto-${MOSQUITTO_VERSION} && make WITH_WEBSOCKETS=yes && make install && cd ..\n\n#Get Go.\nRUN wget https://dl.google.com/go/go${GO_VERSION}.linux-amd64.tar.gz && tar -C /usr/local -xzf go${GO_VERSION}.linux-amd64.tar.gz && rm go${GO_VERSION}.linux-amd64.tar.gz\nRUN export PATH=$PATH:/usr/local/go/bin && go version && rm go${GO_VERSION}.linux-amd64.tar.gz\n\n#Build the plugin from local source\nCOPY ./ ./\n\n#Build the plugin.\nRUN export PATH=$PATH:/usr/local/go/bin && export CGO_CFLAGS=\"-I/usr/local/include -fPIC\" && export CGO_LDFLAGS=\"-shared\" &&  make\n\n## Everything above, is the same as Dockerfile\n\nRUN apt-get update && apt-get install --no-install-recommends -y mariadb-server postgresql redis-server sudo && rm -rf /var/lib/apt/lists/*;\n\nRUN wget -qO - https://www.mongodb.org/static/pgp/server-4.4.asc | apt-key add - && \\\n    echo \"deb http://repo.mongodb.org/apt/debian buster/mongodb-org/4.4 main\" > /etc/apt/sources.list.d/mongodb-org-4.4.list && \\\n    apt-get update && \\\n# starting with MongoDB 4.3, the postinst for server includes \"systemctl daemon-reload\" (and we don't have \"systemctl\")\n    ln -s /bin/true /usr/bin/systemctl && \\\n    apt-get install --no-install-recommends -y mongodb-org && \\\n    rm -f /usr/bin/systemctl && rm -rf /var/lib/apt/lists/*;\n\n# Pre-compilation of test for speed-up latest re-run\nRUN export PATH=$PATH:/usr/local/go/bin && go test -c ./backends -o /dev/null"
}