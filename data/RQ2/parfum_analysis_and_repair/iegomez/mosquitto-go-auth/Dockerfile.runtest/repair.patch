diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/iegomez/mosquitto-go-auth/Dockerfile.runtest b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/iegomez/mosquitto-go-auth/Dockerfile.runtest/repaired.Dockerfile
index 5c0dcc3..1ac5b75 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/iegomez/mosquitto-go-auth/Dockerfile.runtest
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/iegomez/mosquitto-go-auth/Dockerfile.runtest/repaired.Dockerfile
@@ -1,4 +1,3 @@
-
 #Use debian:stable-slim as a builder and then copy everything.
 FROM debian:stable-slim as builder
 
@@ -11,10 +10,10 @@ ENV GO_VERSION=1.13.8
 WORKDIR /app
 
 #Get mosquitto build dependencies.
-RUN apt-get update && apt-get install -y libc-ares2 libc-ares-dev openssl uuid uuid-dev wget build-essential git
+RUN apt-get update && apt-get install --no-install-recommends -y libc-ares2 libc-ares-dev openssl uuid uuid-dev wget build-essential git && rm -rf /var/lib/apt/lists/*;
 
 RUN if [ "$(echo $MOSQUITTO_VERSION | head -c 1)" != 2 ]; then \
-        apt install -y libwebsockets-dev ; \
+        apt install --no-install-recommends -y libwebsockets-dev; rm -rf /var/lib/apt/lists/*; \
     else \
         export LWS_VERSION=2.4.2  && \
         wget https://github.com/warmcat/libwebsockets/archive/v${LWS_VERSION}.tar.gz -O /tmp/lws.tar.gz && \
@@ -40,14 +39,14 @@ RUN if [ "$(echo $MOSQUITTO_VERSION | head -c 1)" != 2 ]; then \
 
 RUN mkdir -p mosquitto/auth mosquitto/conf.d
 
-RUN wget http://mosquitto.org/files/source/mosquitto-${MOSQUITTO_VERSION}.tar.gz
+RUN wget https://mosquitto.org/files/source/mosquitto-${MOSQUITTO_VERSION}.tar.gz
 RUN tar xzvf mosquitto-${MOSQUITTO_VERSION}.tar.gz && rm mosquitto-${MOSQUITTO_VERSION}.tar.gz
 
 #Build mosquitto.
 RUN cd mosquitto-${MOSQUITTO_VERSION} && make WITH_WEBSOCKETS=yes && make install && cd ..
 
 #Get Go.
-RUN wget https://dl.google.com/go/go${GO_VERSION}.linux-amd64.tar.gz && tar -C /usr/local -xzf go${GO_VERSION}.linux-amd64.tar.gz
+RUN wget https://dl.google.com/go/go${GO_VERSION}.linux-amd64.tar.gz && tar -C /usr/local -xzf go${GO_VERSION}.linux-amd64.tar.gz && rm go${GO_VERSION}.linux-amd64.tar.gz
 RUN export PATH=$PATH:/usr/local/go/bin && go version && rm go${GO_VERSION}.linux-amd64.tar.gz
 
 #Build the plugin from local source
@@ -58,15 +57,15 @@ RUN export PATH=$PATH:/usr/local/go/bin && export CGO_CFLAGS="-I/usr/local/inclu
 
 ## Everything above, is the same as Dockerfile
 
-RUN apt-get update && apt-get install --no-install-recommends -y mariadb-server postgresql redis-server sudo
+RUN apt-get update && apt-get install --no-install-recommends -y mariadb-server postgresql redis-server sudo && rm -rf /var/lib/apt/lists/*;
 
 RUN wget -qO - https://www.mongodb.org/static/pgp/server-4.4.asc | apt-key add - && \
     echo "deb http://repo.mongodb.org/apt/debian buster/mongodb-org/4.4 main" > /etc/apt/sources.list.d/mongodb-org-4.4.list && \
     apt-get update && \
 # starting with MongoDB 4.3, the postinst for server includes "systemctl daemon-reload" (and we don't have "systemctl")
     ln -s /bin/true /usr/bin/systemctl && \
-    apt-get install -y mongodb-org && \
-    rm -f /usr/bin/systemctl
+    apt-get install --no-install-recommends -y mongodb-org && \
+    rm -f /usr/bin/systemctl && rm -rf /var/lib/apt/lists/*;
 
 # Pre-compilation of test for speed-up latest re-run
 RUN export PATH=$PATH:/usr/local/go/bin && go test -c ./backends -o /dev/null
\ No newline at end of file