{
  "startTime": 1674250246884,
  "endTime": 1674250247886,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 97
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 111
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 71
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 55
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 22,
        "columnEnd": 78
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 22,
        "columnEnd": 84
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright 2017 The Go Authors. All rights reserved.\n# Use of this source code is governed by a BSD-style\n# license that can be found in the LICENSE file.\n\nARG GO_VERSION=go1.14.1\n\nFROM debian:buster AS go-faketime\nLABEL maintainer=\"golang-dev@googlegroups.com\"\n\nENV BUILD_DEPS 'curl git gcc patch libc6-dev ca-certificates'\nRUN apt-get update && apt-get install -y ${BUILD_DEPS} --no-install-recommends && rm -rf /var/lib/apt/lists/*;\n\nENV GOPATH /go\nENV PATH /usr/local/go/bin:$GOPATH/bin:$PATH\nENV GO_BOOTSTRAP_VERSION go1.14.1\nARG GO_VERSION\nENV GO_VERSION ${GO_VERSION}\n\n# Get a version of Go for building the playground\nRUN curl -f -sSL https://dl.google.com/go/$GO_BOOTSTRAP_VERSION.linux-amd64.tar.gz -o /tmp/go.tar.gz\nRUN curl -f -sSL https://dl.google.com/go/$GO_BOOTSTRAP_VERSION.linux-amd64.tar.gz.sha256 -o /tmp/go.tar.gz.sha256\nRUN echo \"$(cat /tmp/go.tar.gz.sha256)  /tmp/go.tar.gz\" | sha256sum -c -\nRUN mkdir -p /usr/local/go\nRUN tar --strip=1 -C /usr/local/go -vxzf /tmp/go.tar.gz && rm /tmp/go.tar.gz\n\nRUN mkdir /gocache\nENV GOCACHE /gocache\nENV GO111MODULE on\nENV GOPROXY=https://proxy.golang.org\n\n# Compile Go at target sandbox version and install standard library with --tags=faketime.\nWORKDIR /usr/local\nRUN git clone https://go.googlesource.com/go go-faketime && cd go-faketime && git reset --hard $GO_VERSION\nWORKDIR /usr/local/go-faketime/src\nRUN ./make.bash\nENV GOROOT /usr/local/go-faketime\nRUN ../bin/go install --tags=faketime std\n\nFROM golang:1.14 as build-playground\n\nCOPY go.mod /go/src/playground/go.mod\nCOPY go.sum /go/src/playground/go.sum\nWORKDIR /go/src/playground\nRUN go mod download\n\n# Add and compile playground daemon\nCOPY . /go/src/playground/\nRUN go install\n\n############################################################################\n# Final stage.\nFROM debian:buster\n\nRUN apt-get update && apt-get install -y git ca-certificates --no-install-recommends && rm -rf /var/lib/apt/lists/*;\n\nCOPY --from=go-faketime /usr/local/go-faketime /usr/local/go-faketime\n\nARG GO_VERSION\nENV GO_VERSION ${GO_VERSION}\nENV GOPATH /go\nENV PATH /usr/local/go-faketime/bin:$GOPATH/bin:$PATH\n\n# Add and compile tour packages\nRUN go get \\\n    golang.org/x/tour/pic \\\n    golang.org/x/tour/reader \\\n    golang.org/x/tour/tree \\\n    golang.org/x/tour/wc \\\n    golang.org/x/talks/content/2016/applicative/google && \\\n    rm -rf $GOPATH/src/golang.org/x/tour/.git && \\\n    rm -rf $GOPATH/src/golang.org/x/talks/.git\n\n# Add tour packages under their old import paths (so old snippets still work)\nRUN mkdir -p $GOPATH/src/code.google.com/p/go-tour && \\\n    cp -R $GOPATH/src/golang.org/x/tour/* $GOPATH/src/code.google.com/p/go-tour/ && \\\n    sed -i 's_// import_// public import_' $(find $GOPATH/src/code.google.com/p/go-tour/ -name *.go) && \\\n    go install \\\n    code.google.com/p/go-tour/pic \\\n    code.google.com/p/go-tour/reader \\\n    code.google.com/p/go-tour/tree \\\n    code.google.com/p/go-tour/wc\n\nRUN mkdir /app\n\nCOPY --from=build-playground /go/bin/playground /app\nCOPY edit.html /app\nCOPY static /app/static\nCOPY examples /app/examples\nWORKDIR /app\n\n# Whether we allow third-party imports via proxy.golang.org:\nENV ALLOW_PLAY_MODULE_DOWNLOADS true\n\nEXPOSE 8080\nENTRYPOINT [\"/app/playground\"]\n"
}