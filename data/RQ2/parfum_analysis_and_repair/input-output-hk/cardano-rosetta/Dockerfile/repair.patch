diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/input-output-hk/cardano-rosetta/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/input-output-hk/cardano-rosetta/Dockerfile/repaired.Dockerfile
index 39e34c5..c528427 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/input-output-hk/cardano-rosetta/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/input-output-hk/cardano-rosetta/Dockerfile/repaired.Dockerfile
@@ -3,7 +3,7 @@ FROM ubuntu:${UBUNTU_VERSION} as haskell-builder
 ENV DEBIAN_FRONTEND=nonintercative
 RUN mkdir -p /app/src
 WORKDIR /app
-RUN apt-get update -y && apt-get install -y \
+RUN apt-get update -y && apt-get install --no-install-recommends -y \
   automake=1:1.16.* \
   build-essential=12.* \
   g++=4:9.3.* \
@@ -22,7 +22,7 @@ RUN apt-get update -y && apt-get install -y \
   pkg-config=0.29.* \
   tmux=3.* \
   wget=1.20.* \
-  zlib1g-dev=1:1.2.*
+  zlib1g-dev=1:1.2.* && rm -rf /var/lib/apt/lists/*;
 ARG CABAL_VERSION=3.2.0.0
 RUN wget --secure-protocol=TLSv1_2 \
   https://downloads.haskell.org/~cabal/cabal-install-${CABAL_VERSION}/cabal-install-${CABAL_VERSION}-x86_64-unknown-linux.tar.xz &&\
@@ -37,7 +37,7 @@ RUN wget --secure-protocol=TLSv1_2 \
   tar -xf ghc-${GHC_VERSION}-x86_64-deb9-linux.tar.xz &&\
   rm ghc-${GHC_VERSION}-x86_64-deb9-linux.tar.xz
 WORKDIR /app/ghc/ghc-${GHC_VERSION}
-RUN ./configure && make install
+RUN ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" && make install
 WORKDIR /app/src
 ARG IOHK_LIBSODIUM_GIT_REV=66f017f16633f2060db25e17c170c2afa0f2a8a1
 RUN git clone https://github.com/input-output-hk/libsodium.git &&\
@@ -45,7 +45,7 @@ RUN git clone https://github.com/input-output-hk/libsodium.git &&\
   git fetch --all --tags &&\
   git checkout ${IOHK_LIBSODIUM_GIT_REV}
 WORKDIR /app/src/libsodium
-RUN ./autogen.sh && ./configure && make && make install
+RUN ./autogen.sh && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" && make && make install
 ENV LD_LIBRARY_PATH="/usr/local/lib:$LD_LIBRARY_PATH"
 ENV PKG_CONFIG_PATH="/usr/local/lib/pkgconfig:$PKG_CONFIG_PATH"
 WORKDIR /app/src
@@ -53,7 +53,7 @@ RUN git clone https://github.com/bitcoin-core/secp256k1 &&\
   cd secp256k1 &&\
   git checkout ac83be33
 WORKDIR /app/src/secp256k1
-RUN ./autogen.sh && ./configure --enable-module-schnorrsig --enable-experimental &&\
+RUN ./autogen.sh && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --enable-module-schnorrsig --enable-experimental && \
     make && make install
 WORKDIR /app/src
 ARG CARDANO_NODE_VERSION=1.35.0
@@ -86,14 +86,14 @@ RUN rm -rf /usr/local/lib/ghc-${GHC_VERSION} /usr/local/lib/pkgconfig
 FROM ubuntu:${UBUNTU_VERSION} as ubuntu-nodejs
 ARG NODEJS_MAJOR_VERSION=14
 ENV DEBIAN_FRONTEND=nonintercative
-RUN apt-get update && apt-get install curl -y &&\
-  curl --proto '=https' --tlsv1.2 -sSf -L https://deb.nodesource.com/setup_${NODEJS_MAJOR_VERSION}.x | bash - &&\
-  apt-get install nodejs -y
+RUN apt-get update && apt-get install --no-install-recommends curl -y && \
+  curl --proto '=https' --tlsv1.2 -sSf -L https://deb.nodesource.com/setup_${NODEJS_MAJOR_VERSION}.x | bash - && \
+  apt-get install --no-install-recommends nodejs -y && rm -rf /var/lib/apt/lists/*;
 
 FROM ubuntu-nodejs as nodejs-builder
 RUN curl --proto '=https' --tlsv1.2 -sSf -L https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - &&\
   echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list &&\
-  apt-get update && apt-get install gcc g++ make gnupg2 yarn -y
+  apt-get update && apt-get install --no-install-recommends gcc g++ make gnupg2 yarn -y && rm -rf /var/lib/apt/lists/*;
 
 FROM ubuntu-nodejs as runtime-base
 RUN curl --proto '=https' --tlsv1.2 -sSf -L https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add - &&\
@@ -102,8 +102,8 @@ RUN curl --proto '=https' --tlsv1.2 -sSf -L https://www.postgresql.org/media/key
   ca-certificates \
   jq \
   postgresql-12 \
-  postgresql-client-12 &&\
-  npm install pm2 -g
+  postgresql-client-12 && \
+  npm install pm2 -g && npm cache clean --force; && rm -rf /var/lib/apt/lists/*;
 COPY --from=haskell-builder /usr/local/lib /usr/local/lib
 COPY --from=haskell-builder /usr/local/bin/cardano-node /usr/local/bin/
 COPY --from=haskell-builder /usr/local/bin/cardano-cli /usr/local/bin/
@@ -147,12 +147,12 @@ FROM rosetta-server-base as rosetta-server-builder
 COPY cardano-rosetta-server/tsconfig-dist.json \
   cardano-rosetta-server/tsconfig.json \
   /app/
-RUN yarn --offline --frozen-lockfile --non-interactive
+RUN yarn --offline --frozen-lockfile --non-interactive && yarn cache clean;
 COPY cardano-rosetta-server/src /app/src
-RUN yarn build
+RUN yarn build && yarn cache clean;
 
 FROM rosetta-server-base as rosetta-server-production-deps
-RUN yarn --offline --frozen-lockfile --non-interactive --production
+RUN yarn --offline --frozen-lockfile --non-interactive --production && yarn cache clean;
 
 FROM ubuntu-nodejs as cardano-rosetta-server
 ARG NETWORK=mainnet