{
  "startTime": 1674217837896,
  "endTime": 1674217839493,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 98,
        "lineEnd": 98,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 82,
        "lineEnd": 82,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 86,
        "lineEnd": 86,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 22,
        "columnEnd": 55
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#start with node container\nFROM node:lts\n\n#Labels\nLABEL maintainer=\"macmondev@gmail.com\"\n\n#create mysql environment based on here https://github.com/docker-library/mysql/blob/696fc899126ae00771b5d87bdadae836e704ae7d/8.0/Dockerfile\nRUN groupadd -r mysql && useradd -r -g mysql mysql\n\nRUN apt-get update && apt-get install -y --no-install-recommends gnupg dirmngr && rm -rf /var/lib/apt/lists/*\n\n# Add Tini\nENV TINI_VERSION v0.18.0\nRUN wget -O /tini \"https://github.com/krallin/tini/releases/download/$TINI_VERSION/tini-$(dpkg --print-architecture)\"\nRUN chmod +x /tini\n\n# Add Gosu\nRUN apt-get update && apt-get install -y --no-install-recommends gosu && rm -rf /var/lib/apt/lists/*\n\nRUN mkdir /docker-entrypoint-initdb.d\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n\tpwgen \\\n\topenssl \\\n\tperl \\\n  && rm -rf /var/lib/apt/lists/*\n\nRUN { \\\n\t\techo mariadb-server mysql-server/data-dir select ''; \\\n\t\techo mariadb-server mysql-server/root-pass password 'unused'; \\\n\t\techo mariadb-server mysql-server/re-root-pass password 'unused'; \\\n\t\techo mariadb-server mysql-server/remove-test-db select true; \\\n\t} | debconf-set-selections \\\n\t&& apt-get update && apt-get install --no-install-recommends -y mariadb-server && rm -rf /var/lib/apt/lists/*\n\nRUN sed -ri 's/^user\\s/#&/' /etc/mysql/my.cnf /etc/mysql/conf.d/*;\n\nRUN\trm -rf /var/lib/mysql \\\n\t&& mkdir -p /var/lib/mysql /var/run/mysqld \\\n\t&& chown -R mysql:mysql /var/lib/mysql /var/run/mysqld \\\n  && chmod 777 /var/run/mysqld \\\n\t&& echo '[mysqld]\\nskip-host-cache\\nskip-name-resolve' > /etc/mysql/conf.d/docker.cnf\n\nRUN find /etc/mysql/ -name '*.cnf' -print0 \\\n\t\t| xargs -0 grep -lZE '^(bind-address|log)' \\\n\t\t| xargs -rt -0 sed -Ei 's/^(bind-address|log)/#&/';\n\n#Setup macmon\nARG DB_ADDRESS=127.0.0.1\nARG DB_PORT=3306\nARG DB_NAME=AssetTracking\nARG DB_USER=AssetTrackingUser\nARG LOG_LEVEL=production\nARG HTTPS_PORT=8443\nARG RUN_AS=node\nARG NO_LOCAL_DB=false\nARG HASH_STRENGTH=10\n\nENV DB_ADDRESS=\"${DB_ADDRESS}\"\nENV DB_PORT=\"${DB_PORT}\"\nENV DB_NAME=\"${DB_NAME}\"\nENV DB_USER=\"${DB_USER}\"\nENV LOG_LEVEL=\"${LOG_LEVEL}\"\nENV HTTPS_PORT=\"${HTTPS_PORT}\"\nENV RUN_AS=\"${RUN_AS}\"\nENV NO_LOCAL_DB=\"${NO_LOCAL_DB}\"\nENV HASH_STRENGTH=\"${HASH_STRENGTH}\"\n\nENV VERSION=\"0.16\"\n\nRUN apt-get update && \\\n  apt-get install -y --no-install-recommends \\\n\tnmap \\\n\tarp-scan \\\n\tpython3-pip \\\n\tpython3-setuptools \\\n\tpython3-dev \\\n\tlibcap2-bin \\\n\t&& rm -rf /var/lib/apt/lists/*\n\nRUN setcap cap_net_bind_service=+ep `readlink -f \\`which node\\``\n\nRUN pip3 install --no-cache-dir scapy\n\nRUN chmod u+s /usr/bin/arp-scan\n\nRUN pip3 install --no-cache-dir pyinstaller\n\nWORKDIR /tmp\n\nCOPY ./appcode/bin/dos.py ./dos.py\n\nRUN pyinstaller --onefile --hidden-import=queue /tmp/dos.py\n\nWORKDIR /usr/src/app\n\nCOPY ./appcode/package*.json ./\n\nRUN npm install && npm cache clean --force;\n\nCOPY ./appcode .\n\nCOPY ./appcode/private/config.example ./private/config.json\n\nRUN chown -R node:node /usr/src/app\n\nRUN cp /tmp/dist/dos /usr/src/app/bin/\n\nRUN chown root:root /usr/src/app/bin/dos\n\nRUN chmod 755 /usr/src/app/bin/dos\n\nRUN chmod u+s /usr/src/app/bin/dos\n\nRUN rm -rf /tmp/*\n\nVOLUME [ \"/var/lib/mysql\", \"/usr/src/app/private\" ]\n\nENTRYPOINT [ \"/tini\", \"--\", \"/usr/src/app/docker-entrypoint.sh\" ]\n\nCMD [ \"npm\", \"start\" ]"
}