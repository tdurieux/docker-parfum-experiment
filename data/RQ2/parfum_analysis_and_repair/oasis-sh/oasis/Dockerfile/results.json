{
  "startTime": 1674254808210,
  "endTime": 1674254808983,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 41
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:15-alpine AS BUILD_IMAGE\n\nRUN apk update && apk add curl bash && rm -rf /var/cache/apk/*\n\n# install node-prune (https://github.com/tj/node-prune)\nRUN curl -sfL https://install.goreleaser.com/github.com/tj/node-prune.sh | bash -s -- -b /usr/local/bin\n\nWORKDIR /opt/oasis/\n\nCOPY .yarn .yarn\nCOPY .yarnrc.yml .yarnrc.yml\n\nCOPY ./package.json ./package.json\nCOPY ./yarn.lock ./yarn.lock\n\nCOPY ./packages/api/package.json ./packages/api/package.json\nCOPY ./packages/react-gql/package.json ./packages/react-gql/package.json\nCOPY ./packages/web/package.json ./packages/web/package.json\n\nRUN yarn install && yarn cache clean;\n\nCOPY ./packages/api ./packages/api\nCOPY ./docker/docker-ormconfig.ts ./packages/api/src/ormconfig.ts\nRUN yarn workspace @oasis-sh/api build && yarn cache clean;\n\nCOPY ./packages/react-gql ./packages/react-gql\nRUN yarn workspace @oasis-sh/react-gql build && yarn cache clean;\n\n\nCOPY ./packages/web ./packages/web\nRUN yarn workspace @oasis-sh/web build && yarn cache clean;\n\n# remove development dependencies\nRUN yarn workspaces focus --production -A && yarn cache clean;\n\n# run node prune\nRUN /usr/local/bin/node-prune\n\n# Final Production Image\nFROM node:15-alpine\n\nWORKDIR /opt/oasis/\n\n# Copy global node modules\nCOPY --from=BUILD_IMAGE /opt/oasis/package.json ./package.json\nCOPY --from=BUILD_IMAGE /opt/oasis/node_modules ./node_modules\n\n# Copy dist folders and package.json\nCOPY --from=BUILD_IMAGE /opt/oasis/packages/api/package.json ./packages/api/package.json\nCOPY --from=BUILD_IMAGE /opt/oasis/packages/api/dist ./packages/api/dist\n\nCOPY --from=BUILD_IMAGE /opt/oasis/packages/react-gql/package.json ./packages/react-gql/package.json\nCOPY --from=BUILD_IMAGE /opt/oasis/packages/react-gql/dist ./packages/react-gql/dist\nCOPY --from=BUILD_IMAGE /opt/oasis/packages/react-gql/generated ./packages/react-gql/generated\n\nCOPY --from=BUILD_IMAGE /opt/oasis/packages/web/package.json ./packages/web/package.json\nCOPY --from=BUILD_IMAGE /opt/oasis/packages/web/.next ./packages/web/.next\nCOPY --from=BUILD_IMAGE /opt/oasis/packages/web/public ./packages/web/public\nCOPY --from=BUILD_IMAGE /opt/oasis/packages/web/next.config.js ./packages/web/next.config.js\nCOPY --from=BUILD_IMAGE /opt/oasis/packages/web/server/dist ./packages/web/server/dist\n\nCMD [\"yarn\", \"start\"]\n"
}