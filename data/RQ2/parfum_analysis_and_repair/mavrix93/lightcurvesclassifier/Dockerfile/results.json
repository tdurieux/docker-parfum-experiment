{
  "startTime": 1674219315313,
  "endTime": 1674219316517,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 3,
        "columnEnd": 38
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 22,
        "columnEnd": 53
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 22,
        "columnEnd": 53
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 63
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 63
      }
    }
  ],
  "repairedDockerfile": "FROM python:3.6\n\nMAINTAINER Martin Vo\n\nENV TINI_VERSION v0.14.0\nADD https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini /tini\nRUN chmod +x /tini\nENTRYPOINT [\"/tini\", \"--\"]\n\n# apt-get install -y python python-pip python-dev python-tk \\\nRUN echo \"deb http://packages.dotdeb.org jessie all\" >> /etc/apt/sources.list && \\\n    echo \"deb-src http://packages.dotdeb.org jessie all\" >> /etc/apt/sources.list && \\\n    wget https://www.dotdeb.org/dotdeb.gpg && apt-key add dotdeb.gpg\nRUN apt-get update && apt-get -y --no-install-recommends install redis-server && rm -rf /var/lib/apt/lists/*;\nRUN apt-get -y --no-install-recommends install libfreetype6-dev libpng12-dev libxft-dev libblas-dev liblapack-dev libatlas-base-dev gfortran \\\n    nginx dialog net-tools libxml2-dev libxslt1-dev python-lxml && rm -rf /var/lib/apt/lists/*;\n\nENV DOCKYARD_SRVHOME=/srv\nENV DOCKYARD_SRVPROJ=$DOCKYARD_SRVHOME/web \\\n    DOCKYARD_SRVDATA=$DOCKYARD_SRVHOME/data \\\n    DOCKYARD_SRVSAMPLE=$DOCKYARD_SRVHOME/sample_data \\\n    DOCKYARD_SRVLOGS=$DOCKYARD_SRVHOME/logs \\\n    DOCKYARD_SRVSTATIC=$DOCKYARD_SRVHOME/static/ \\\n    DOCKYARD_WORKERS=5 \\\n    DOCKYARD_PORT=8000 \\\n    DOCKYARD_APP_CONTEXT=lcc \\\n    MPLBACKEND=\"agg\"\n    #DOCKYARD_SECRET - should be set during deployment\n\nADD lcc_web/web/requirements.txt tmp/requirements.txt\nRUN mkdir -p $DOCKYARD_SRVSTATIC $DOCKYARD_SRVLOGS \\\n&& pip install --no-cache-dir -r tmp/requirements.txt\n\n# prepare web application\nADD . $DOCKYARD_SRVHOME\n\nRUN python $DOCKYARD_SRVHOME/setup.py install\nRUN mv $DOCKYARD_SRVHOME/lcc_web/* $DOCKYARD_SRVHOME\n\n# prepare nginx configuration\nADD nginx.conf /etc/nginx/sites-enabled/default\n\n# Port to expose\nEXPOSE 80\n# 'data' folder for user outputs (better to store data on external ftp\nVOLUME [\"$DOCKYARD_SRVDATA\", \"$DOCKYARD_SRVLOGS\"]\n\n# WORKDIR $DOCKYARD_SRVPROJ\nWORKDIR /srv/web\nENV PYTHONPATH /srv\n\n# TODO: Fix me\nENV DOCKYARD_SRVSAMPLE $DOCKYARD_SRVHOME/sample_data\nRUN pip install --no-cache-dir lxml\nCOPY ./docker-entrypoint.sh /\nRUN chmod +x /docker-entrypoint.sh\nCMD \"/docker-entrypoint.sh\"\n"
}