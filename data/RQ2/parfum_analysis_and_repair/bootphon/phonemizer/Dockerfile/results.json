{
  "startTime": 1674248745423,
  "endTime": 1674248746657,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 22,
        "lineEnd": 32,
        "columnStart": 44,
        "columnEnd": 19
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 22,
        "lineEnd": 32,
        "columnStart": 44,
        "columnEnd": 19
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Use this file to build a docker image of phonemizer (using\n# festival-2.5.0 and espeak-ng-1.50 from ubuntu repo):\n#\n#    sudo docker build -t phonemizer .\n#\n# Then open a bash session in docker with:\n#\n#    sudo docker run -it phonemizer /bin/bash\n#\n# You can then use phonemizer within docker. See the docker doc for\n# advanced usage.\n\n\n# Use an official Ubuntu as a parent image\nFROM ubuntu:20.04\n\nENV LANG=C.UTF-8 LC_ALL=C.UTF-8\n\n# set the working directory to /phonemizer\nWORKDIR /phonemizer\n\n# install dependencies\nRUN apt-get update && apt-get upgrade -y && apt-get install --no-install-recommends -y \\\n        festival \\\n        festvox-us1 \\\n        festlex-cmu \\\n        festlex-poslex \\\n        espeak-ng \\\n        git \\\n        mbrola \\\n        mbrola-fr1 \\\n        python3 \\\n        python3-pip && \\\n    apt-get clean && rm -rf /var/lib/apt/lists/*;\n\n# pytest needs to be installed through pip to make sure we have a recent version\nRUN pip3 install --no-cache-dir pytest\n\n# tests expect python to be available as executable 'python' not 'python3'\nRUN ln -s /usr/bin/python3 /usr/bin/python\n\n# copy the phonemizer code within the docker image\nCOPY . /phonemizer\n\n# install phonemizer and run the tests\nRUN cd /phonemizer && \\\n    python3 setup.py install && \\\n    phonemize --version && \\\n    python3 -m pytest -v test\n"
}