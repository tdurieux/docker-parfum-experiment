{
  "startTime": 1674217656331,
  "endTime": 1674217657625,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 76
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 2,
        "columnEnd": 13
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 2,
        "columnEnd": 59
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 94,
        "lineEnd": 94,
        "columnStart": 2,
        "columnEnd": 31
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 2,
        "columnEnd": 30
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:20.04\n\nENV TZ=America/New_York \\\n    DEBIAN_FRONTEND=noninteractive \\\n    LANG=C.UTF-8 \\\n    LC_ALL=C.UTF-8 \\\n    NCORES=4\n\n# install software dependencies\nRUN apt-get update && apt-get install --no-install-recommends -y -qq \\\n  automake \\\n  autoconf \\\n  bzip2 \\\n  ca-certificates \\\n  clang \\\n  espeak-ng \\\n  festival \\\n  flac \\\n  g++ \\\n  gawk \\\n  gcc \\\n  gfortran \\\n  git \\\n  gzip \\\n  libatlas3-base \\\n  libtool \\\n  make \\\n  patch \\\n  perl \\\n  python2.7 \\\n  sox \\\n  subversion \\\n  wget \\\n  zlib1g-dev && \\\n  rm -rf /var/lib/apt/lists/*\n\n# install shorten\nRUN wget https://shnutils.freeshell.org/shorten/dist/src/shorten-3.6.1.tar.gz && \\\n  tar xzf shorten-3.6.1.tar.gz && \\\n  cd shorten-3.6.1 && \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n  make && \\\n  make install && \\\n  cd - && \\\n  rm -rf shorten* && rm shorten-3.6.1.tar.gz\n\n# install kaldi\nWORKDIR /kaldi\nRUN ln -s /usr/bin/python2.7 /usr/bin/python && \\\n  ln -s -f bash /bin/sh && \\\n  git clone --branch abkhazia --single-branch https://github.com/bootphon/kaldi.git . && \\\n  # compile kaldi tools\n  cd /kaldi/tools && \\\n  ./extras/check_dependencies.sh && \\\n  sed -i \"s/CXX = g++/# CXX = g++/\" Makefile && \\\n  sed -i \"s/# CXX = clang++/CXX = clang++/\" Makefile && \\\n  sed -i \"s/OPENFST_VERSION = 1.3.4/# OPENFST_VERSION = 1.3.4/\" Makefile && \\\n  sed -i \"s/# OPENFST_VERSION = 1.4.1/OPENFST_VERSION = 1.4.1/\" Makefile && \\\n  make -j $NCORES && \\\n  ./extras/install_openblas.sh && \\\n  # compile kaldi src\n  cd /kaldi/src && \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --openblas-root=/kaldi/tools/OpenBLAS/install && \\\n  sed -i \"s/\\-g # -O0 -DKALDI_PARANOID.*$/-O3 -DNDEBUG/\" kaldi.mk && \\\n  sed -i \"s/ -rdynamic//g\" kaldi.mk && \\\n  sed -i \"s/g++/clang++/\" kaldi.mk && \\\n  make depend -j $NCORES && \\\n  make -j $NCORES && \\\n  # compile irstlm\n  cd /kaldi/tools/extras && \\\n  rm -f install_irstlm.sh && \\\n  wget https://raw.githubusercontent.com/kaldi-asr/kaldi/master/tools/extras/install_irstlm.sh && \\\n  chmod +x install_irstlm.sh && \\\n  wget https://raw.githubusercontent.com/kaldi-asr/kaldi/master/tools/extras/irstlm.patch && \\\n  cd /kaldi/tools && \\\n  ./extras/install_irstlm.sh && \\\n  # compile srilm\n  cd /kaldi/tools && \\\n  wget https://github.com/denizyuret/nlpcourse/raw/master/download/srilm-1.7.0.tgz -O srilm.tgz && \\\n  ./extras/install_srilm.sh\n\n# install miniconda\nRUN wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O ~/miniconda.sh && \\\n  bash ~/miniconda.sh -b -p /miniconda && \\\n  rm ~/miniconda.sh\n\nENV PATH /miniconda/bin:$PATH\n\nRUN conda create --name abkhazia python=3 ipython && \\\n  /bin/bash -c \"source activate abkhazia\"\n\n# clone and install abkhazia\nWORKDIR /abkhazia\nRUN git clone https://github.com/bootphon/abkhazia.git . && \\\n  KALDI_PATH=/kaldi ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n  python setup.py build && \\\n  python setup.py install\n"
}