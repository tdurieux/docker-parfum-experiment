{
  "startTime": 1674250255994,
  "endTime": 1674250256702,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 8,
        "columnEnd": 26
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 11
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 11
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:buster\n\nENV USERNAME user\n\n# Set ENV fÃ¼r apt\nENV DEBIAN_FRONTEND noninteractive\nENV DEBIAN_PRIORITY critical\n\n# Install assessment toolset\nRUN apt-get -qy update && \\\n    apt-get -qy --no-install-recommends install \\\n        curl \\\n        docker.io \\\n        dnsutils \\\n        dsniff \\\n        gdb \\\n        gcc \\\n        git \\\n        golang-go \\\n        hping3 \\\n        htop \\\n        iproute2 \\\n        iptables \\\n        iputils-ping \\\n        mongo-tools \\\n        mtr \\\n        net-tools \\\n        nmap \\\n        netcat \\\n        openssh-server \\\n        python3 \\\n        python3-pip \\\n        screen \\\n        socat \\\n        stunnel \\\n        strace \\\n        sudo \\\n        tcpdump \\\n        traceroute \\\n        tmux \\\n        libcap-ng-utils \\\n        unzip \\\n        vim \\\n        whois \\\n        wget \\\n        zip && \\\n        rm -f /etc/ssh/ssh_host* && \\\n        mkdir -p /root/.ssh && \\\n        chmod 0700 /root/.ssh && \\\n        apt-get -qy clean && \\\n        apt-get -qy autoclean && \\\n        apt-get -qy autoremove --purge && \\\n        pip3 install --no-cache-dir scapy && rm -rf /var/lib/apt/lists/*;\n\n# Copy kubernetes tools\nCOPY kubectl-linux-amd64-1.13.5 /usr/local/bin/kubectl\nCOPY pks-linux-amd64-1.3.0-build.230 /usr/local/bin/pks\nCOPY requirements.txt /tools/requirements.txt\nCOPY api.py /tools/api.py\nRUN chmod 777 /usr/local/bin/kubectl          &&  \\\n    chmod 777 /usr/local/bin/pks && \\\n    pip3 install --no-cache-dir -r /tools/requirements.txt && \\\n    rm /tools/requirements.txt && \\\n    chmod 755 /tools/api.py\n\n# Prepare tools\nWORKDIR /tools\n\n# Nmap renaming test\nRUN cp /usr/bin/nmap pamn\n\n# Nmap hashsum editing\nRUN echo \"A\" >> add                           && \\\n    cat /usr/bin/nmap add > pamn-extended     && \\\n    chmod +x pamn-extended                    && \\\n    rm add\n\n# Prepare SSH server\nCOPY gen_b64_ssh-key.sh gen_b64_ssh-key.sh\nRUN chmod +x gen_b64_ssh-key.sh               && \\\n    cp /usr/sbin/sshd remoted\n\n# Generate Keys\nWORKDIR /tools/keys\nRUN /tools/gen_b64_ssh-key.sh client rsa      && \\\n    /tools/gen_b64_ssh-key.sh server rsa\n\n# Create user `$USERNAME`\nRUN useradd -ms /bin/bash -p \"$(openssl passwd -1 password)\" $USERNAME\nRUN echo \"$USERNAME ALL=(ALL) NOPASSWD: ALL\" >> /etc/sudoers.d/0-$USERNAME\nRUN echo \"%root ALL=(ALL) NOPASSWD: ALL\" >> /etc/sudoers.d/1-root-group\n\n# Switch to user\nUSER $USERNAME\nWORKDIR /home/$USERNAME\n\n# keep running\nCMD sleep infinity\n"
}