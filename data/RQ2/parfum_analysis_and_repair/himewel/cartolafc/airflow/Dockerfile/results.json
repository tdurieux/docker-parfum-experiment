{
  "startTime": 1674249005289,
  "endTime": 1674249006042,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 92
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 84
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM apache/airflow:2.1.0\n\nARG USER_ID=1000\nARG GROUP_ID=1000\n\nENV JAVA_HOME \"/usr/lib/jvm/java-8-openjdk-amd64\"\nENV HADOOP_HOME \"/opt/hadoop\"\nENV HIVE_HOME \"/opt/hive\"\n\nENV HADOOP_CONF_DIR \"/etc/hadoop\"\nENV HIVE_CONF_DIR \"/etc/hadoop\"\n\nENV PATH \"${PATH}:${JAVA_HOME}/bin\"\nENV PATH \"${PATH}:${HIVE_HOME}/bin\"\nENV PATH \"${PATH}:${HADOOP_HOME}/bin:${HADOOP_HOME}/sbin\"\nENV PYTHONPATH \"${PYTHONPATH}:${AIRFLOW_HOME}/include\"\n\nUSER root\n\nRUN mkdir -p /usr/share/man/man1 \\\n    && (echo \"deb http://security.debian.org/debian-security stretch/updates main\" >> /etc/apt/sources.list) \\\n    && apt-get update \\\n    && apt-get install --no-install-recommends --yes \\\n        openjdk-8-jdk \\\n        libsasl2-dev \\\n        gcc \\\n        g++ \\\n    && apt-get clean \\\n    && rm -rf -- /var/lib/apt/lists/*\n\nRUN curl -f -O https://ftp.unicamp.br/pub/apache/hadoop/common/hadoop-3.2.2/hadoop-3.2.2.tar.gz \\\n    && tar -xf hadoop-3.2.2.tar.gz \\\n    && rm -rf hadoop-3.2.2.tar.gz \\\n    && mv hadoop-3.2.2 ${HADOOP_HOME}\n\nRUN curl -f -O https://ftp.cixug.es/apache/hive/hive-3.1.2/apache-hive-3.1.2-bin.tar.gz \\\n    && tar -xf apache-hive-3.1.2-bin.tar.gz \\\n    && rm -rf apache-hive-3.1.2-bin.tar.gz \\\n    && mv apache-hive-3.1.2-bin ${HIVE_HOME} \\\n    && rm ${HIVE_HOME}/lib/guava-19.0.jar \\\n    && cp ${HADOOP_HOME}/share/hadoop/hdfs/lib/guava-27.0-jre.jar ${HIVE_HOME}/lib/\n\nCOPY scripts ./scripts\n\nRUN usermod --uid ${USER_ID} airflow \\\n    && groupadd --gid ${GROUP_ID} airflow \\\n    && usermod --gid ${GROUP_ID} airflow \\\n    && chown --recursive airflow ${AIRFLOW_HOME} \\\n    && chmod +x ./scripts/*.sh\n\nUSER airflow\n\nCOPY ./airflow.cfg ./airflow.cfg\nCOPY ./requirements.txt ./requirements.txt\nRUN pip install --no-cache-dir --user --requirement ./requirements.txt\n\nENTRYPOINT [ \"/bin/bash\" ]\n"
}