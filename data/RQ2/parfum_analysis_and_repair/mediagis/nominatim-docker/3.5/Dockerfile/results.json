{
  "startTime": 1674253220493,
  "endTime": 1674253221407,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 93,
        "lineEnd": 93,
        "columnStart": 4,
        "columnEnd": 104
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 100,
        "lineEnd": 100,
        "columnStart": 4,
        "columnEnd": 104
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 103,
        "lineEnd": 103,
        "columnStart": 4,
        "columnEnd": 95
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 14,
        "columnStart": 7,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 52,
        "columnStart": 7,
        "columnEnd": 12
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 14,
        "columnStart": 7,
        "columnEnd": 15
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 52,
        "columnStart": 7,
        "columnEnd": 12
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:focal AS build\n\nENV DEBIAN_FRONTEND noninteractive\nENV LANG C.UTF-8\n\nWORKDIR /app\n\nRUN true \\\n    # Do not start daemons after installation.\n    && echo '#!/bin/sh\\nexit 101' > /usr/sbin/policy-rc.d \\\n    && chmod +x /usr/sbin/policy-rc.d \\\n    # Install all required packages.\n    && apt-get -y update -qq \\\n    && apt-get -y --no-install-recommends install \\\n        locales \\\n    && locale-gen en_US.UTF-8 \\\n    && update-locale LANG=en_US.UTF-8 \\\n    && apt-get -y --no-install-recommends install \\\n        -o APT::Install-Recommends=\"false\" \\\n        -o APT::Install-Suggests=\"false\" \\\n\n        build-essential \\\n        g++ \\\n        cmake \\\n        libpq-dev \\\n        zlib1g-dev \\\n        libbz2-dev \\\n        libproj-dev \\\n        libexpat1-dev \\\n        libboost-dev \\\n        libboost-system-dev \\\n        libboost-filesystem-dev \\\n\n        postgresql-contrib \\\n        postgresql-server-dev-12 \\\n        postgresql-12-postgis-3 \\\n        postgresql-12-postgis-3-scripts \\\n\n        php \\\n        php-intl \\\n        php-pgsql \\\n        apache2 \\\n        libapache2-mod-php \\\n\n        python3-dev \\\n        python3-pip \\\n        python3-tidylib \\\n        python3-psycopg2 \\\n        python3-setuptools \\\n\n        git \\\n        curl \\\n        sudo && rm -rf /var/lib/apt/lists/*;\n\n# Configure postgres.\nRUN true \\\n    && echo \"host all all 0.0.0.0/0 trust\" >> /etc/postgresql/12/main/pg_hba.conf \\\n    && echo \"listen_addresses='*'\" >> /etc/postgresql/12/main/postgresql.conf\n\n# Osmium install to run continuous updates.\nRUN pip3 install --no-cache-dir osmium\n\n# Nominatim install.\nENV NOMINATIM_VERSION v3.5.2\n\nRUN true \\\n    && git clone \\\n        --config advice.detachedHead=false \\\n        --single-branch \\\n        --branch $NOMINATIM_VERSION \\\n        --depth 1 \\\n        --recursive \\\n        https://github.com/openstreetmap/Nominatim \\\n        src \\\n    && cd src \\\n    && mkdir build \\\n    && cd build \\\n    && cmake .. \\\n    && make -j`nproc` \\\n    && chmod o=rwx .\n\n# Apache configure.\nCOPY local.php /app/src/build/settings/local.php\nCOPY nominatim.conf /etc/apache2/sites-enabled/000-default.conf\n\n# Load initial data.\nARG with_postcodes_gb\nARG with_postcodes_us\n\nRUN if [ \"$with_postcodes_gb\" = \"\" ];then \\\n    echo \"Skipping optional GB postcode file\"; \\\n    else \\\n    echo \"Downloading optional GB postcode file\"; \\\n    curl -f https://www.nominatim.org/data/gb_postcode_data.sql.gz > /app/src/data/gb_postcode_data.sql.gz; \\\n    fi;\n\nRUN if [ \"$with_postcodes_us\" = \"\" ];then \\\n    echo \"Skipping optional US postcode file\"; \\\n    else \\\n    echo \"Downloading optional US postcode file\"; \\\n    curl -f https://www.nominatim.org/data/us_postcode_data.sql.gz > /app/src/data/us_postcode_data.sql.gz; \\\n    fi;\n\nRUN curl -f https://nominatim.org/data/country_grid.sql.gz > /app/src/data/country_osm_grid.sql.gz\n\nRUN true \\\n    # Remove development and unused packages.\n    && apt-get -y remove --purge \\\n        cpp-9 \\\n        gcc-9* \\\n        g++ \\\n        git \\\n        make \\\n        cmake* \\\n        llvm-10* \\\n        libc6-dev \\\n        linux-libc-dev \\\n        libclang-*-dev \\\n        build-essential \\\n        postgresql-server-dev-12 \\\n    && apt-get clean \\\n    # Clear temporary files and directories.\n    && rm -rf \\\n        /tmp/* \\\n        /var/tmp/* \\\n        /root/.cache \\\n        /app/src/.git \\\n        /var/lib/apt/lists/* \\\n        /var/lib/postgresql/12/main/*\n\nCOPY init.sh /app/init.sh\nCOPY start.sh /app/start.sh\nCOPY startapache.sh /app/startapache.sh\nCOPY startpostgres.sh /app/startpostgres.sh\n\n# Collapse image to single layer.\nFROM scratch\n\nCOPY --from=build / /\n\nWORKDIR /app\n\nEXPOSE 5432\nEXPOSE 8080\n"
}