{
  "startTime": 1674220649626,
  "endTime": 1674220651306,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 11
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 2,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 22,
        "columnEnd": 44
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 22,
        "columnEnd": 44
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 15,
        "columnEnd": 31
      }
    }
  ],
  "repairedDockerfile": "FROM cypress/base:10\n\nWORKDIR /test/\n\n# this is adapted from https://github.com/cypress-io/cypress-docker-images/blob/master/browsers/chrome67-ff57/Dockerfile\nUSER root\n\nRUN node --version\n\nRUN echo \"force new browser versions: |\"\n\n# install Chrome\nRUN \\\n  wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - && \\\n  echo \"deb http://dl.google.com/linux/chrome/deb/ stable main\" > /etc/apt/sources.list.d/google.list && \\\n  apt-get update && \\\n  apt-get install --no-install-recommends -y dbus-x11 google-chrome-stable && \\\n  rm -rf /var/lib/apt/lists/*\n\n# \"fake\" dbus address to prevent errors\n# https://github.com/SeleniumHQ/docker-selenium/issues/87\nENV DBUS_SESSION_BUS_ADDRESS=/dev/null\n\n# Firefox is not yet supported, see: https://github.com/cypress-io/cypress/issues/1096\n## install Firefox\n#RUN export FIREFOX_VERSION=$(curl -s https://product-details.mozilla.org/1.0/firefox_versions.json | grep LATEST_FIREFOX_VERSION | cut -d '\"' -f4); \\\n#  wget --no-verbose -O /tmp/firefox.tar.bz2 https://download-installer.cdn.mozilla.net/pub/firefox/releases/$FIREFOX_VERSION/linux-x86_64/en-US/firefox-$FIREFOX_VERSION.tar.bz2 \\\n#  && tar -C /opt -xjf /tmp/firefox.tar.bz2 \\\n#  && rm /tmp/firefox.tar.bz2 \\\n#  && ln -fs /opt/firefox/firefox /usr/bin/firefox\n\n# Add zip utility - it comes in very handy\nRUN apt-get update && apt-get install --no-install-recommends -y zip && rm -rf /var/lib/apt/lists/*;\n\n# versions of local tools\nRUN node -v\nRUN npm -v\nRUN yarn -v && yarn cache clean;\nRUN google-chrome --version\n# RUN firefox --version\nRUN zip --version\nRUN git --version\n\n# a few environment variables to make NPM installs easier\n# good colors for most applications\nENV TERM xterm\n# avoid million NPM install messages\nENV npm_config_loglevel warn\n# allow installing when the main user is root\nENV npm_config_unsafe_perm true\n# end Cypress Dockerfile\n\n# can't remember why I originally added this, but lately, it's been causing some readable-stream issues...\n# RUN npm install -g npm\n\nCOPY ./package.json ./package-lock.json ./\nRUN npm ci\n\nCOPY ./ ./\n\nCMD echo \"Don't 'docker-compose up,' run 'docker-compose -f docker-compose.yml -f docker-compose.no-cdn.yml -f docker-compose.test.yml run --rm e2e npm test -- --browser chrome'\"\n"
}