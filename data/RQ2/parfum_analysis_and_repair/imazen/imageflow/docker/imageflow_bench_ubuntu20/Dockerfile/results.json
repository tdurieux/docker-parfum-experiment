{
  "startTime": 1674250741848,
  "endTime": 1674250743002,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 27,
        "lineEnd": 28,
        "columnStart": 11,
        "columnEnd": 24
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:20.04\n\n# libpng-dev is required for libpng-sys crate\n# libssl-dev and pkg-config are required for SSL support\n# nasm is required for libjpeg-turbo\n\nRUN export DEBIAN_FRONTEND=noninteractive \\\n  && apt-get update \\\n  && apt-get upgrade -y \\\n  && apt-get install --no-install-recommends -y \\\n    sudo tzdata build-essential nasm dh-autoreconf pkg-config ca-certificates \\\n    git zip curl libpng-dev libssl-dev wget \\\n    libcurl4-openssl-dev libelf-dev libdw-dev parallel time imagemagick graphicsmagick pngcrush optipng \\\n  && ln -fs /usr/share/zoneinfo/America/Denver /etc/localtime \\\n  && dpkg-reconfigure --frontend noninteractive tzdata \\\n  && apt-get clean -y \\\n  && apt-get autoremove -y \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && bash -c 'rm -rf {/usr/share/doc,/usr/share/man,/var/cache,/usr/doc,/usr/local/share/doc,/usr/local/share/man}' \\\n  && bash -c 'rm -rf /tmp/* || true' \\\n  && bash -c 'rm -rf /var/tmp/*' \\\n  && sudo mkdir -p /var/cache/apt/archives/partial \\\n  && sudo touch /var/cache/apt/archives/lock \\\n  && sudo chmod 640 /var/cache/apt/archives/lock\n\n RUN apt-get update \\\n   && sudo apt-get upgrade -y \\\n   && sudo apt-get install --no-install-recommends -y \\\n     libvips-dev libvips \\\n   && apt-get clean -y \\\n   && apt-get autoremove -y \\\n   && rm -rf /var/lib/apt/lists/* \\\n   && bash -c 'rm -rf {/usr/share/doc,/usr/share/man,/var/cache,/usr/doc,/usr/local/share/doc,/usr/local/share/man}' \\\n   && bash -c 'rm -rf /tmp/* || true' \\\n   && bash -c 'rm -rf /var/tmp/*' \\\n   && sudo mkdir -p /var/cache/apt/archives/partial \\\n   && sudo touch /var/cache/apt/archives/lock \\\n   && sudo chmod 640 /var/cache/apt/archives/lock\n\nRUN groupadd 1001 -g 1001 &&\\\n    groupadd 1000 -g 1000 &&\\\n    useradd -ms /bin/bash imageflow -g 1001 -G 1000 &&\\\n    echo \"imageflow:imageflow\" | chpasswd && adduser imageflow sudo &&\\\n    echo \"imageflow ALL= NOPASSWD: ALL\\n\" >> /etc/sudoers\n\nUSER imageflow\n\nRUN gm version\nRUN convert --version\nRUN vipsthumbnail --vips-version\n\nENV PATH=/home/imageflow/.cargo/bin:$PATH\n\n#Install stable Rust and make default\nRUN RUSTVER=\"stable\" && curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain $RUSTVER -v \\\n    && rustup default $RUSTVER \\\n    && HI=$(rustup which rustc) && HI=${HI%/bin/rustc} && export TOOLCHAIN_DIR=$HI && echo TOOLCHAIN_DIR=$TOOLCHAIN_DIR \\\n    && sudo rm -rf $TOOLCHAIN_DIR/share/doc \\\n    && sudo rm -rf $TOOLCHAIN_DIR/share/man \\\n    && sudo rm -rf /home/imageflow/.rustup/toolchains/${RUSTVER}-x86_64-unknown-linux-gnu/share/doc \\\n    && ln -sf -t $TOOLCHAIN_DIR/lib/ $TOOLCHAIN_DIR/lib/rustlib/x86_64-unknown-linux-gnu/lib/*.so \\\n    && rustup show \\\n    && rustc -V\n\nWORKDIR /home/imageflow\n\n#Install hyperfine\nRUN wget https://github.com/sharkdp/hyperfine/releases/download/v1.9.0/hyperfine_1.9.0_amd64.deb \\\n    && sudo dpkg -i hyperfine_1.9.0_amd64.deb\n\n# Install DSSIM\nRUN cargo install dssim && cargo install oxipng\n\n# Build Imageflow from source with AVX2 support (haswell), then delete everything except the binary\nRUN cd /home/imageflow \\\n    && git clone https://github.com/imazen/imageflow \\\n    && cd /home/imageflow/imageflow \\\n    && git checkout v1.4.0-rc40 \\\n    && TARGET_CPU=haswell cargo build -p imageflow_tool_lib --release \\\n    && mkdir $HOME/bin  \\\n    && cp target/release/imageflow_tool $HOME/bin/imageflow_tool \\\n    && cd $HOME \\\n    && rm -rf $HOME/imageflow\n\nRUN wget -nc --quiet  https://s3-us-west-2.amazonaws.com/imageflow-resources/test_inputs/u1.jpg\n\nCMD [\"thumbnail\"]\nENTRYPOINT [\"./bench.sh\"]\n\nMAINTAINER Lilith River\n\nADD bench.sh .\nRUN sudo chmod +x $HOME/bench.sh"
}