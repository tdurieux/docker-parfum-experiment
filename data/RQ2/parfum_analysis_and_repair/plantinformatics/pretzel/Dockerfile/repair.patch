diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/plantinformatics/pretzel/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/plantinformatics/pretzel/Dockerfile/repaired.Dockerfile
index 4ba8bc7..1dcc34d 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/plantinformatics/pretzel/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/plantinformatics/pretzel/Dockerfile/repaired.Dockerfile
@@ -1,4 +1,3 @@
-
 # ------------------------------------------------------------------------------
 #     samtools	faidx is used for DNA lookup
 
@@ -13,15 +12,15 @@ ARG NODE_ALPINE_VERSION 12
 ARG SAMTOOLS_VERSION=1.15.1
 ARG BUILD_NCPU=1
 
-RUN apk update && apk add build-base wget zlib-dev tar bzip2-dev xz-dev \
+RUN apk update && apk add --no-cache build-base wget zlib-dev tar bzip2-dev xz-dev \
     curl-dev ncurses-dev ncurses-static curl-static zlib-static bzip2-static \
     nghttp2-static openssl-libs-static brotli-static
 
 WORKDIR /build
 RUN wget https://github.com/samtools/samtools/releases/download/${SAMTOOLS_VERSION}/samtools-${SAMTOOLS_VERSION}.tar.bz2
-RUN tar -xf samtools-${SAMTOOLS_VERSION}.tar.bz2
+RUN tar -xf samtools-${SAMTOOLS_VERSION}.tar.bz2 && rm samtools-${SAMTOOLS_VERSION}.tar.bz2
 WORKDIR /build/samtools-${SAMTOOLS_VERSION}
-RUN ./configure && \
+RUN ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" && \
     make -j${BUILD_NCPU}
 RUN strip samtools
 
@@ -39,7 +38,7 @@ ARG NODE_ALPINE_VERSION 12
 # from : https://github.com/nodejs/docker-node/issues/610 :
 #  node-sass is built using node-gyp, which is built using python.
 # required for an NPM repo
-# 
+#
 # alpine image uses libmusl (C stdlib) so linux_musl-x64-* is required.
 # The version can be indicated either by $SASS_BINARY_NAME or --sass-binary-name :
 # export SASS_BINARY_NAME=linux_musl-x64-64; npm install node-sass@^5.0.0 --sass-binary-name=linux_musl-x64-64 --scripts-prepend-node-path=true
@@ -59,8 +58,8 @@ RUN apk add --no-cache git \
      gnumeric	\
      terminus-font	\
      curl	\
-     jq	\
-  && npm install bower -g
+     jq \
+  && npm install bower -g && npm cache clean --force;
 
 
 # ------------------------------------------------------------------------------
@@ -69,7 +68,7 @@ ARG SAMTOOLS_VERSION=1.15.1
 
 # RUN apk add --no-cache bash
 RUN apk add --no-cache libbz2 zlib libcurl xz-libs
-WORKDIR / 
+WORKDIR /
 COPY --from=node-alpine-build-samtools /build/samtools-${SAMTOOLS_VERSION}/samtools /usr/local/bin/samtools
 
 # ------------------------------------------------------------------------------
@@ -107,13 +106,13 @@ RUN date \
   && cd $NODE_BE/lib && npm -v && node -v \
   && npm config set scripts-prepend-node-path true \
   && cd /app && npm install nodemon@1.18.8 && npm ci \
-  && date
+  && date && npm cache clean --force;
 
 
 RUN node --version
-RUN cd /frontend && (npm ci || npm install)  && bower install --allow-root
+RUN cd /frontend && (npm ci || npm install) && bower install --allow-root && npm cache clean --force;
 
-RUN cd /app && npm install nodemon@1.18.8 && npm ci
+RUN cd /app && npm install nodemon@1.18.8 && npm ci && npm cache clean --force;
 
 RUN cd /frontend && node_modules/ember-cli/bin/ember build --environment production