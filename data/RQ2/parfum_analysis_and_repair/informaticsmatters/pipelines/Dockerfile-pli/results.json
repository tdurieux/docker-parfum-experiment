{
  "startTime": 1674256028234,
  "endTime": 1674256028967,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 25,
        "columnEnd": 67
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 25,
        "columnEnd": 67
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM informaticsmatters/rdkit_pipelines:latest\nLABEL maintainer=\"Tim Dudgeon<tdudgeon@informaticsmatters.com>\"\n\n\nUSER root\nRUN apt-get update -y && apt-get install --no-install-recommends zlib1g-dev make gcc git -y && rm -rf /var/lib/apt/lists/*;\nRUN mkdir -p /usr/local/\nWORKDIR /usr/local/\nRUN git clone https://bitbucket.org/AstexUK/pli.git\nWORKDIR /usr/local/pli\nRUN make\n\nRUN useradd -u 1001 -g 0 -m pli\n\nWORKDIR /home/pli\nENV PLI_DIR /usr/local/pli\n\n# The CMD is simply to run 'execute' in the WORKDIR.\n# The user would normally mount a volume with their own execute\n# script in it and then set the WORKDIR to the directory it's in.\n# In its absence we just run the built-in 'execute',\n# which is expected to echo some descriptive/helpful text.\n#\n# The default 'execute' relies on an ENV to name the pipeline it's in,\n# which can be defined with the docker 'pipeline' build argument.\nARG pipeline=informaticsmatters/pli:latest\nENV PIPELINE=$pipeline\nCOPY execute ./\nRUN chown 1001:0 ./execute && \\\n    chmod +x ./execute\nCMD [\"./execute\"]\n\nUSER 1001\n"
}