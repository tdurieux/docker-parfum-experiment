{
  "startTime": 1674250610836,
  "endTime": 1674250611900,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 1,
        "columnEnd": 56
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 1,
        "columnEnd": 46
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 1,
        "columnEnd": 46
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 22,
        "lineEnd": 40,
        "columnStart": 1,
        "columnEnd": 4
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Dockerfile for RDKit cartridge based on Debian.\n# This image is inspired by the docker.io:/library/postgres image, and uses the docker-entrypoint.sh\n# file from there, but there is a need to have the exact same versions of libraries that were used to\n# build the deb packages so we need to install the packages using apt to have tight control over this.\n#\n\nFROM debian:buster\nLABEL maintainer=\"Tim Dudgeon<tdudgeon@informaticsmatters.com>\"\n\nENV PG_MAJOR=11\nARG DOCKER_TAG=latest\n\n# This adds the postgres apt repos as postgresql-10 is not available for buster\n# and postgresql-11 does not seem to work with RDKit yet.\n#\nRUN apt-get update && \\\n apt-get -y --no-install-recommends install curl ca-certificates gnupg && \\\n curl -f https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add - && \\\n echo \"deb http://apt.postgresql.org/pub/repos/apt/ buster-pgdg main\" >  /etc/apt/sources.list.d/pgdg.list && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get update &&\\\n apt-get upgrade -y &&\\ \n apt-get install -y --no-install-recommends\\\n python3\\\n python3-numpy\\\n libboost-system1.67.0\\\n libboost-thread1.67.0\\\n libboost-serialization1.67.0\\\n libboost-python1.67.0\\\n libboost-regex1.67.0\\\n libboost-chrono1.67.0\\\n libboost-date-time1.67.0\\\n libboost-atomic1.67.0\\\n libboost-iostreams1.67.0\\\n libfreetype6\\ \n postgresql-$PG_MAJOR\\\n postgresql-client-$PG_MAJOR\\\n postgresql-plpython3-$PG_MAJOR\\\n gosu\\\n wget\\\n zip && \\\n apt-get clean -y && rm -rf /var/lib/apt/lists/*;\n\nCOPY\\\n  artifacts/debian/$DOCKER_TAG/debs/RDKit-*-Linux-Runtime.deb\\\n  artifacts/debian/$DOCKER_TAG/debs/RDKit-*-Linux-Python.deb\\\n  artifacts/debian/$DOCKER_TAG/debs/RDKit-*-Linux-PgSQL.deb\\\n  /tmp/\nRUN dpkg -i /tmp/*.deb && rm -f /tmp/*.deb\n\n# symlink python3 to python\nRUN cd /usr/bin && ln -s python3 python\n\nWORKDIR /\n\n# make the sample config easier to munge (and \"correct by default\")\nRUN mv -v \"/usr/share/postgresql/$PG_MAJOR/postgresql.conf.sample\" /usr/share/postgresql/ \\\n\t&& ln -sv ../postgresql.conf.sample \"/usr/share/postgresql/$PG_MAJOR/\" \\\n\t&& sed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/share/postgresql/postgresql.conf.sample\n\nRUN mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 2777 /var/run/postgresql\n\nENV RDBASE=/usr/share/RDKit\nENV PGDATA /var/lib/postgresql/data\nENV PATH $PATH:/usr/lib/postgresql/$PG_MAJOR/bin\nRUN mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 777 \"$PGDATA\" # this 777 will be replaced by 700 at runtime (allows semi-arbitrary \"--user\" values)\nVOLUME /var/lib/postgresql/data\n\nCOPY docker-entrypoint-cartridge.sh /usr/local/bin/docker-entrypoint.sh\nRUN ln -s usr/local/bin/docker-entrypoint.sh / # backwards compat\nENTRYPOINT [\"docker-entrypoint.sh\"]\n\nEXPOSE 5432\nCMD [\"postgres\"]\n\n\n"
}