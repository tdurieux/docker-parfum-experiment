{
  "startTime": 1674250515524,
  "endTime": 1674250516533,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 55
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 4,
        "columnEnd": 68
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 89,
        "lineEnd": 89,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 11,
        "columnStart": 22,
        "columnEnd": 55
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 22,
        "columnEnd": 46
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 75,
        "lineEnd": 76,
        "columnStart": 22,
        "columnEnd": 44
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 22,
        "columnEnd": 46
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG ENV=standard\n\nFROM pytorch/pytorch:1.8.1-cuda10.2-cudnn7-devel AS base\n\n# System packages for Atari, DMLab, MiniWorld... Throw in everything\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    git xvfb python3.7-dev python3-setuptools \\\n    libglu1-mesa libglu1-mesa-dev libgl1-mesa-dev libosmesa6-dev mesa-utils freeglut3 freeglut3-dev \\\n    libglew2.0 libglfw3 libglfw3-dev zlib1g zlib1g-dev libsdl2-dev libjpeg-dev lua5.1 liblua5.1-0-dev libffi-dev \\\n    build-essential cmake g++-4.8 pkg-config software-properties-common gettext \\\n    ffmpeg patchelf swig unrar unzip zip curl wget tmux \\\n    && rm -rf /var/lib/apt/lists/*\n\n# ------------------------\n# Standard environments\n# ------------------------\n\nFROM base AS standard-env\n\n# Atari\n\nRUN pip3 install --no-cache-dir atari-py==0.2.9\nRUN wget -L -nv https://www.atarimania.com/roms/Roms.rar && \\\n    unrar x Roms.rar && \\\n    unzip ROMS.zip && \\\n    python3 -m atari_py.import_roms ROMS && \\\n    rm -rf Roms.rar ROMS.zip ROMS\n\n# DMC MuJoCo\n\nRUN mkdir -p /root/.mujoco && \\\n    cd /root/.mujoco && \\\n    wget -nv https://mujoco.org/download/mujoco210-linux-x86_64.tar.gz -O mujoco.tar.gz && \\\n    tar -xf mujoco.tar.gz && \\\n    rm mujoco.tar.gz\nRUN pip3 install --no-cache-dir dm_control\n\n# ------------------------\n# DMLab (optional)\n# ------------------------\n\n# adapted from https://github.com/google-research/seed_rl\nFROM base AS dmlab-env\nRUN echo \"deb [arch=amd64] http://storage.googleapis.com/bazel-apt stable jdk1.8\" | \\\n    tee /etc/apt/sources.list.d/bazel.list && \\\n    curl -f https://bazel.build/bazel-release.pub.gpg | \\\n    apt-key add - && \\\n    apt-get update && apt-get install --no-install-recommends -y bazel && rm -rf /var/lib/apt/lists/*;\nRUN git clone https://github.com/deepmind/lab.git /dmlab\nWORKDIR /dmlab\nRUN git checkout \"937d53eecf7b46fbfc56c62e8fc2257862b907f2\"\nRUN ln -s '/opt/conda/lib/python3.7/site-packages/numpy/core/include/numpy' /usr/include/numpy && \\\n    sed -i 's@python3.5@python3.7@g' python.BUILD && \\\n    sed -i 's@glob(\\[@glob([\"include/numpy/\\*\\*/*.h\", @g' python.BUILD && \\\n    sed -i 's@: \\[@: [\"include/numpy\", @g' python.BUILD && \\\n    sed -i 's@650250979303a649e21f87b5ccd02672af1ea6954b911342ea491f351ceb7122@1e9793e1c6ba66e7e0b6e5fe7fd0f9e935cc697854d5737adec54d93e5b3f730@g' WORKSPACE && \\\n    sed -i 's@rules_cc-master@rules_cc-main@g' WORKSPACE && \\\n    sed -i 's@rules_cc/archive/master@rules_cc/archive/main@g' WORKSPACE && \\\n    bazel build -c opt python/pip_package:build_pip_package --incompatible_remove_legacy_whole_archive=0\nRUN pip3 install --no-cache-dir wheel && \\\n    PYTHON_BIN_PATH=$(which python3) && \\\n    ./bazel-bin/python/pip_package/build_pip_package /tmp/dmlab_pkg && \\\n    pip3 install --no-cache-dir /tmp/dmlab_pkg/DeepMind_Lab-*.whl --force-reinstall && \\\n    rm -rf /dmlab\nWORKDIR /app\nCOPY scripts/dmlab_data_download.sh .\nRUN sh dmlab_data_download.sh\nENV DMLAB_DATASET_PATH \"/app/dmlab_data\"\n\n# ------------------------\n# MineRL (optional)\n# ------------------------\n\nFROM base AS minerl-env\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    openjdk-8-jdk libx11-6 x11-xserver-utils \\\n    && rm -rf /var/lib/apt/lists/*\nRUN pip3 install --no-cache-dir minerl==0.4.1a2\n\n# ------------------------\n# PyDreamer\n# ------------------------\n\nFROM ${ENV}-env AS final\n\nWORKDIR /app\n\nCOPY requirements.txt .\nRUN pip3 install --no-cache-dir -r requirements.txt\n# RUN pip3 install git+https://github.com/jurgisp/gym-minigrid.git@e979bc77a9377346a6a0311a257e8bbb218e611c#egg=gym-minigrid\n# RUN pip3 install git+https://github.com/jurgisp/gym-miniworld.git@1ff6ed40c9b27a1b6285566ee8af80dda85bfcce#egg=gym-miniworld\n\nENV MLFLOW_TRACKING_URI \"\"\nENV MLFLOW_EXPERIMENT_NAME \"Default\"\nENV OMP_NUM_THREADS 1\nENV PYTHONUNBUFFERED 1\nENV LANG \"C.UTF-8\"\n\nCOPY . .\n"
}