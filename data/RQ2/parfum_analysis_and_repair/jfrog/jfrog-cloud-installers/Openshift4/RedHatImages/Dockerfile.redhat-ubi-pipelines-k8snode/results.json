{
  "startTime": 1674219548236,
  "endTime": 1674219549198,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 28,
        "columnEnd": 39
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 60
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 126
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 104
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 4,
        "columnEnd": 68
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG PIPELINES_BASE_VERSION\n\nFROM docker.bintray.io/jfrog/pipelines-api:${PIPELINES_BASE_VERSION} AS base\nFROM jfrog-docker-reg2.bintray.io/pipelines-node:1.4.2 AS base2\n\n# The new image based on registry.access.redhat.com/ubi\nFROM registry.access.redhat.com/ubi8\n\nUSER root\n\nLABEL name=\"JFrog Pipelines K8s Node\" \\\n      description=\"JFrog Pipelines K8s Node image based on the Red Hat Universal Base Image.\" \\\n      vendor=\"JFrog\" \\\n      summary=\"JFrog Pipelines K8s Node (Red Hat UBI)\" \\\n      com.jfrog.license_terms=\"https://jfrog.com/platform/enterprise-plus-eula/\"\n\n# Set vars\nENV DOCKER_VERSION=18.09.9\nENV NODE_VERSION=10.19.0\n\n#RUN apt-get update && \\\n#    apt-get install sudo grep jq tar curl python-minimal wget ca-certificates rsync vim -y\n\n\nRUN yum install -y --disableplugin=subscription-manager wget && \\\n    yum install -y --disableplugin=subscription-manager procps && \\\n    yum install -y --disableplugin=subscription-manager net-tools && \\\n    yum install -y --disableplugin=subscription-manager hostname && \\\n    yum install -y --disableplugin=subscription-manager https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm && \\\n    yum install -y --disableplugin=subscription-manager sudo grep tar python36 ca-certificates rsync vim && rm -rf /var/cache/yum\n\n\n\nRUN wget -qO- https://raw.githubusercontent.com/nvm-sh/nvm/v0.36.0/install.sh | bash\nENV NVM_DIR=/root/.nvm\nRUN . \"$NVM_DIR/nvm.sh\" && nvm install ${NODE_VERSION}\nRUN . \"$NVM_DIR/nvm.sh\" && nvm use v${NODE_VERSION}\nRUN . \"$NVM_DIR/nvm.sh\" && nvm alias default v${NODE_VERSION}\nRUN cp /root/.nvm/versions/node/v${NODE_VERSION}/bin/node /usr/bin/\nRUN cp /root/.nvm/versions/node/v${NODE_VERSION}/bin/npm /usr/bin/\nRUN /root/.nvm/versions/node/v${NODE_VERSION}/bin/npm install leasot@latest -g\n\nRUN curl -f -0 -L https://npmjs.com/install.sh | sh\n\n# Get files needed to run Build Plane node\nCOPY --from=base /opt/jfrog/pipelines/app/api/bin/buildPlane-x86_64-RHEL_7.rpm /tmp/buildPlane-x86_64-RHEL_7.rpm\nCOPY ./executeAffinityGroup_fix.js /tmp\n\nRUN yum localinstall -y --disableplugin=subscription-manager /tmp/buildPlane-x86_64-RHEL_7.rpm\nRUN mkdir -p /tmp/var/opt/jfrog/pipelines/reqKick/execute/\nRUN mkdir -p /jfrog-init\nRUN cat /tmp/executeAffinityGroup_fix.js >> /tmp/var/opt/jfrog/pipelines/reqKick/execute/executeAffinityGroup.js\nRUN sed -i '/function __restart(bag) {/,$d' /tmp/var/opt/jfrog/pipelines/reqKick/execute/executeAffinityGroup.js\nRUN cp -fr /tmp/var/opt/jfrog/pipelines/ /jfrog-init\nRUN rm -fr /tmp/var && rm -fr /tmp/*\n\nCOPY --from=base2 /jfrog-init /jfrog-init\n\n# Install app dependencies\nRUN cd /jfrog-init/reqKick; npm install && npm cache clean --force;\n\n# Install docker client\nRUN wget https://download.docker.com/linux/static/stable/x86_64/docker-$DOCKER_VERSION.tgz -P /tmp/docker && \\\n    tar -xzf /tmp/docker/docker-$DOCKER_VERSION.tgz --directory /opt && \\\n    ln -s /opt/docker/docker /usr/bin/docker && \\\n    rm -fr /tmp/docker && rm /tmp/docker/docker-$DOCKER_VERSION.tgz\n\n\n# Install nodejs pm2 monitoring\nRUN npm install pm2 -g && npm cache clean --force;\n\n\n# Add EULA information to meet the Red Hat container image certification requirements\nCOPY entplus_EULA.txt /licenses/\n\n# Environment needed for Pipelines\nENV JF_PIPELINES_USER=pipelines \\\n    PIPELINES_USER_ID=1000721117 \\\n    PIPELINES_VERSION=${PIPELINES_BASE_VERSION}\n\nRUN mkdir -p /home/${JF_PIPELINES_USER}\nRUN useradd -M -s /usr/sbin/nologin --uid ${PIPELINES_USER_ID} --user-group pipelines && \\\n    chown -R ${PIPELINES_USER_ID}:${PIPELINES_USER_ID} /jfrog-init /home/${JF_PIPELINES_USER}\n\nUSER ${JF_PIPELINES_USER}\n\n\nWORKDIR /jfrog-init/reqKick\nCMD [\"pm2-runtime\", \"/jfrog-init/reqKick/reqKick.app.js\"]"
}