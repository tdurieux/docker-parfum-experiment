{
  "startTime": 1674254983378,
  "endTime": 1674254983926,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 124,
        "columnEnd": 262
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 126,
        "columnEnd": 266
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Dockerfile for bitnami/fluentd sidecar image with all the necessary plugins for our log analytic providers\nFROM bitnami/fluentd:latest\nLABEL maintainer=\"Partner Engineering <partner_support@jfrog.com>\"\n\n## Build time Arguments, short circuit them to ENV Variables so they are available at run time also\nARG SOURCE=JFRT\nARG TARGET=SPLUNK\n\n## Environment Variables set by this docker file, there will be seperate env params set by a env file while running the containers\n## For better maintainability always depend dockerfile code on the environment variables declared in this file to add more platforms\nENV SRC_PLATFORM=$SOURCE\nENV TGT_PLATFORM=$TARGET\n\nUSER root\n\n## Install JFrog Plugins\nRUN fluent-gem install fluent-plugin-jfrog-siem\nRUN fluent-gem install fluent-plugin-jfrog-metrics\n\n## Install custom Fluentd plugins\nRUN if [ \"$TGT_PLATFORM\" = \"SPLUNK\" ] ; then echo \"Downloading the fluentd plugin for $TGT_PLATFORM \"; fluent-gem install fluent-plugin-splunk-hec; else echo \"Not Downloading\"; fi\nRUN if [ \"$TGT_PLATFORM\" = \"DATADOG\" ] ; then echo \"Downloading the fluentd plugin for $TGT_PLATFORM \"; fluent-gem install fluent-plugin-datadog; else echo \"Not Downloading\"; fi\nRUN if [ \"$TGT_PLATFORM\" = \"ELASTIC\" ] ; then echo \"Downloading the fluentd plugin for $TGT_PLATFORM \"; fluent-gem install fluent-plugin-elasticsearch; else echo \"Not Downloading\"; fi\n\n## Download Config Files\nRUN if [ \"$SRC_PLATFORM\" = \"JFRT\" ] ; then \\\n echo \"Downloading the fluentd config file for $SRC_PLATFORM and $TGT_PLATFORM \"; curl -f https://raw.githubusercontent.com/jfrog/log-analytics-splunk/Metrics_splunk/fluent.conf.rt -o /opt/bitnami/fluentd/conf/fluentd.conf; else echo \"Not Downloading\"; fi\nRUN if [ \"$SRC_PLATFORM\" = \"JFXRAY\" ] ; then \\\n echo \"Downloading the fluentd config file for $SRC_PLATFORM and $TGT_PLATFORM \"; curl -f https://raw.githubusercontent.com/jfrog/log-analytics-splunk/Metrics_splunk/fluent.conf.xray -o /opt/bitnami/fluentd/conf/fluentd.conf; else echo \"Not Downloading\"; fi\n\nENTRYPOINT if [ \"$TGT_PLATFORM\" = \"SPLUNK\" ] ; then  sed -i -e \"s/HEC_HOST/$HEC_HOST/g\" \\\n                                             -e \"s/HEC_PORT/$HEC_PORT/g\" \\\n                                             -e \"s/METRICS_HEC_TOKEN/$METRICS_HEC_TOKEN/\" \\\n                                             -e \"s/HEC_TOKEN/$HEC_TOKEN/\" \\\n                                             -e \"s/COM_PROTOCOL/$COM_PROTOCOL/g\" \\\n                                             -e \"s/INSECURE_SSL/$INSECURE_SSL/g\" \\\n                                             -e \"s/JPD_URL/$JPD_URL/\" \\\n                                             -e \"s/ADMIN_USERNAME/$JPD_USER_NAME/\" \\\n                                             -e \"s/API_KEY/$JPD_API_KEY/\" /opt/bitnami/fluentd/conf/fluentd.conf && fluentd -v -c /opt/bitnami/fluentd/conf/fluentd.conf; fi\nUSER 1001\n\nSTOPSIGNAL SIGTERM"
}