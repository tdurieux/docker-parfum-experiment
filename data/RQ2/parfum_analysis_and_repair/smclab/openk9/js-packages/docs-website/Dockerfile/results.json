{
  "startTime": 1674220756827,
  "endTime": 1674220759409,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 14
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 38,
        "columnEnd": 54
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 18,
        "columnEnd": 34
      }
    }
  ],
  "repairedDockerfile": "# Stage 1 - build environment\nFROM node:14-alpine as react-build\n\nRUN mkdir -p /app/js-packages/docs-website\nWORKDIR /app\n\nCOPY ./package.json /app\nCOPY ./yarn.lock /app\nCOPY ./js-packages/docs-website/package.json /app/js-packages/docs-website\nRUN yarn install --frozen-lockfile && yarn cache clean;\n\nCOPY ./js-packages/docs-website /app/js-packages/docs-website\nWORKDIR /app/js-packages/docs-website\nRUN yarn build && yarn cache clean;\n\n# Stage 2 - the production environment\nFROM nginx:alpine\nCOPY ./js-packages/docs-website/nginx.conf /etc/nginx/conf.d/default.conf\nRUN mkdir -p /usr/share/nginx/html/\nCOPY --from=react-build /app/js-packages/docs-website/build /usr/share/nginx/html/\nEXPOSE 80\nCMD [\"nginx\", \"-g\", \"daemon off;\"]\n"
}