{
  "startTime": 1674254484205,
  "endTime": 1674254484975,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 34
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Stage 1 - build environment\nFROM node:14-alpine as react-build\n\nRUN mkdir -p /app/js-packages/rest-api\nRUN mkdir -p /app/js-packages/search-frontend\n\nCOPY ./package.json /app\nCOPY ./yarn.lock /app\nCOPY ./js-packages/rest-api/package.json /app/js-packages/rest-api/\nCOPY ./js-packages/search-frontend/package.json /app/js-packages/search-frontend/\n\nWORKDIR /app\nRUN yarn install --frozen-lockfile && yarn cache clean;\n\nCOPY ./js-packages/rest-api /app/js-packages/rest-api\nWORKDIR /app/js-packages/rest-api\nRUN yarn build\n\nCOPY ./js-packages/search-frontend /app/js-packages/search-frontend\nWORKDIR /app/js-packages/search-frontend\nRUN NODE_ENV=production yarn build\n\n# Stage 2 - the production environment\nFROM nginx:alpine\nCOPY ./js-packages/search-frontend/nginx.conf /etc/nginx/conf.d/default.conf\nRUN mkdir -p /usr/share/nginx/html/\nCOPY --from=react-build /app/js-packages/search-frontend/dist /usr/share/nginx/html/\nRUN rm /docker-entrypoint.d/10-listen-on-ipv6-by-default.sh \\\n\t&& chmod g+rw /var/cache/nginx /var/run\nEXPOSE 8080\nCMD [\"nginx\", \"-g\", \"daemon off;\"]\n"
}