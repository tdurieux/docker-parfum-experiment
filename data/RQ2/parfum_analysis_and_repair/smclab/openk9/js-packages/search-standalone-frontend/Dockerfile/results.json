{
  "startTime": 1674250548395,
  "endTime": 1674250549312,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 34
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Stage 1 - build environment\nFROM node:14-alpine as react-build\n\nRUN mkdir -p /app/patches\nRUN mkdir -p /app/js-packages/rest-api\nRUN mkdir -p /app/js-packages/search-ui-components\nRUN mkdir -p /app/js-packages/search-standalone-frontend\nWORKDIR /app\n\n# COPY ./patches/*.patch /app/patches/\nCOPY ./package*.json /app\nCOPY ./js-packages/rest-api/package*.json /app/js-packages/rest-api\nCOPY ./js-packages/search-ui-components/package*.json /app/js-packages/search-ui-components\nCOPY ./js-packages/search-standalone-frontend/package*.json /app/js-packages/search-standalone-frontend\nCOPY ./yarn.lock /app\nRUN yarn install --frozen-lockfile && yarn cache clean;\n\nCOPY ./ /app\nWORKDIR /app/js-packages/search-standalone-frontend\nRUN yarn build\n\n# Stage 2 - the production environment\nFROM nginx:alpine\nCOPY ./js-packages/search-standalone-frontend/nginx.conf /etc/nginx/conf.d/default.conf\nRUN mkdir -p /usr/share/nginx/html/\nCOPY --from=react-build /app/js-packages/search-standalone-frontend/build /usr/share/nginx/html/\nEXPOSE 80\nCMD [\"nginx\", \"-g\", \"daemon off;\"]\n"
}