{
  "startTime": 1674221005510,
  "endTime": 1674221006428,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 149
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 93
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 11,
        "columnEnd": 37
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 93
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 11,
        "columnEnd": 37
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 93
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 11,
        "columnEnd": 37
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 80
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 117
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 11,
        "columnEnd": 61
      }
    }
  ],
  "repairedDockerfile": "FROM debian:wheezy-backports\n\nARG TERM=linux\nARG DEBIAN_FRONTEND=noninteractive\n\n# restyaboard version\nENV restyaboard_version=v0.2.1\n\n# update & install package\nRUN apt-get update --yes\nRUN apt-get install --no-install-recommends --yes zip curl cron postgresql nginx && rm -rf /var/lib/apt/lists/*;\nRUN apt-get install --no-install-recommends --yes php5 php5-fpm php5-curl php5-pgsql php5-imagick libapache2-mod-php5 && rm -rf /var/lib/apt/lists/*;\nRUN echo \"postfix postfix/mailname string example.com\" | debconf-set-selections \\\n        && echo \"postfix postfix/main_mailer_type string 'Internet Site'\" | debconf-set-selections \\\n        && apt-get install --no-install-recommends -y postfix && rm -rf /var/lib/apt/lists/*;\n\n# deploy app\nRUN curl -f -L -o /tmp/restyaboard.zip https://github.com/RestyaPlatform/board/releases/download/${restyaboard_version}/board-${restyaboard_version}.zip \\\n        && unzip /tmp/restyaboard.zip -d /usr/share/nginx/html \\\n        && rm /tmp/restyaboard.zip\n\n# setting app\nWORKDIR /usr/share/nginx/html\nRUN cp -R media /tmp/ \\\n        && cp restyaboard.conf /etc/nginx/conf.d \\\n        && sed -i 's/^.*listen.mode = 0660$/listen.mode = 0660/' /etc/php5/fpm/pool.d/www.conf \\\n        && sed -i 's|^.*fastcgi_pass.*$|fastcgi_pass unix:/var/run/php5-fpm.sock;|' /etc/nginx/conf.d/restyaboard.conf \\\n        && sed -i -e \"/fastcgi_pass/a fastcgi_param HTTPS 'off';\" /etc/nginx/conf.d/restyaboard.conf\n\n# volume\nVOLUME /usr/share/nginx/html/media\n\n# entry point\nCOPY docker-entrypoint.sh /\nENTRYPOINT [\"/docker-entrypoint.sh\"]\nCMD [\"start\"]\n\n# expose port\nEXPOSE 80\n"
}