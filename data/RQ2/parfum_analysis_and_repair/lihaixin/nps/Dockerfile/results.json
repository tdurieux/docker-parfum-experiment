{
  "startTime": 1674215809865,
  "endTime": 1674215810905,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 5,
        "columnEnd": 41
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 8,
        "columnEnd": 49
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM --platform=${TARGETPLATFORM} golang:1.17.8-alpine3.15 AS build\nMAINTAINER LEE <info@15099.net>\n\nARG TARGETARCH\nARG GOPROXY=direct\n\nENV UPX_VERSION=\"3.96\"\nRUN apk add --no-cache build-base bash make curl git perl ucl-dev zlib-dev \\\n  && wget https://github.com/upx/upx/releases/download/v${UPX_VERSION}/upx-${UPX_VERSION}-src.tar.xz -P /tmp/ \\\n  && cd /tmp/ \\\n  && tar xf upx-${UPX_VERSION}-src.tar.xz \\\n  && cd upx-${UPX_VERSION}-src \\\n  && make all \\\n  && mv ./src/upx.out /usr/bin/upx \\\n  && mkdir -p /asset/usr/bin/ \\\n  && git clone https://github.com/ehang-io/nps.git /tmp/nps \\\n  && cd /tmp/nps/ \\\n  && go get -d -v ./... \\\n  && CGO_ENABLED=0 go build -ldflags=\"-w -s -extldflags -static\" ./cmd/npc/npc.go \\\n  && CGO_ENABLED=0 go build -ldflags=\"-w -s -extldflags -static\" ./cmd/nps/nps.go \\\n  && upx -9 ./npc \\\n  && upx -9 ./nps \\\n  && mv ./npc /asset/usr/bin/npc \\\n  && mv ./nps /asset/usr/bin/nps \\\n  && mv ./web /asset/usr/bin/web && rm upx-${UPX_VERSION}-src.tar.xz\n\n\nFROM --platform=${TARGETPLATFORM} alpine:3.15 \n\nARG NPS_VERSION 0.26.10\nENV MODE kcp\nENV WEB_PASSWORD password\nENV PUBLIC_VKEY 12345678\nENV BRIDGE_PORT 8024\nENV ALLOW_POSTS \"53,9001-9009,10001,11000-12000\"\nENV HTTP_PROXY_PORT 80\nENV HTTPS_PROXY_PORT 443\nENV DOMAIN youdomain.com\nENV HOSTNAME hostname\nENV TZ=Asia/Shanghai\nLABEL name=nps\n\n\nWORKDIR /\n\nRUN set -x && \\\n        apk add --no-cache -U tzdata ca-certificates openssl\n\nVOLUME /conf\nCOPY --from=build /asset/usr/bin/nps /nps \nCOPY --from=build /asset/usr/bin/npc /npc\nCOPY --from=build /asset/usr/bin/web /web\nADD entrypoint.sh /entrypoint.sh\nRUN chmod +x /entrypoint.sh\n\nENTRYPOINT [\"/entrypoint.sh\"]\n"
}