{
  "startTime": 1674250591385,
  "endTime": 1674250592620,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 99,
        "lineEnd": 99,
        "columnStart": 4,
        "columnEnd": 76
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 104,
        "lineEnd": 104,
        "columnStart": 2,
        "columnEnd": 25
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 2,
        "columnEnd": 113
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 20,
        "lineEnd": 97,
        "columnStart": 2,
        "columnEnd": 5
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:18.04\n\nLABEL maintainer=\"@alexanderhorl\"\n\nENV LANGUAGE en_US:en\nENV LANG en_US.UTF-8\nENV LC_ALL en_US.UTF-8\n\nRUN export DEBIAN_FRONTEND=noninteractive && \\\n  apt-get -y update && \\\n  apt-get install -y --no-install-recommends software-properties-common language-pack-en-base apt-transport-https && \\\n  echo 'Acquire::Languages {\"none\";};' > /etc/apt/apt.conf.d/60language && \\\n  echo 'LANG=\"en_US.UTF-8\"' > /etc/default/locale && \\\n  echo 'LANGUAGE=\"en_US:en\"' >> /etc/default/locale && \\\n  locale-gen en_US.UTF-8 && \\\n  update-locale en_US.UTF-8 && \\\n  add-apt-repository -y ppa:git-core/ppa && \\\n  add-apt-repository -y ppa:rwky/graphicsmagick && \\\n  add-apt-repository -y ppa:deadsnakes/ppa && \\\n  apt-get -y update && \\\n  apt-get install -y --no-install-recommends \\\n  advancecomp \\\n  apt-utils \\\n  autoconf \\\n  automake \\\n  bison \\\n  build-essential \\\n  bzr \\\n  cmake \\\n  curl \\\n  doxygen \\\n  elixir \\\n  expect \\\n  fontconfig \\\n  fontconfig-config \\\n  g++ \\\n  gawk \\\n  git \\\n  git-lfs \\\n  gifsicle \\\n  gobject-introspection \\\n  graphicsmagick \\\n  graphviz \\\n  gtk-doc-tools \\\n  gnupg2 \\\n  imagemagick \\\n  jpegoptim \\\n  jq \\\n  libasound2 \\\n  libcurl4 \\\n  libenchant1c2a \\\n  libexif-dev \\\n  libffi-dev \\\n  libfontconfig1 \\\n  libgconf-2-4 \\\n  libgd-dev \\\n  libgdbm-dev \\\n  libgif-dev \\\n  libglib2.0-dev \\\n  libgmp3-dev \\\n  libgsl-dev \\\n  libgtk-3-0 \\\n  libgtk2.0-0 \\\n  libicu-dev \\\n  libimage-exiftool-perl \\\n  libjpeg-progs \\\n  libjpeg-turbo8-dev \\\n  libmagickwand-dev \\\n  libmcrypt-dev \\\n  libncurses5-dev \\\n  libnss3 \\\n  libreadline6-dev \\\n  librsvg2-bin \\\n  libsm6 \\\n  libsqlite3-dev \\\n  libssl-dev \\\n  libtiff5-dev \\\n  libwebp-dev \\\n  libxml2-dev \\\n  libxrender1 \\\n  libxslt-dev \\\n  libxss1 \\\n  libxtst6 \\\n  libyaml-dev \\\n  mercurial \\\n  nasm \\\n  optipng \\\n  pngcrush \\\n  rsync \\\n  software-properties-common \\\n  strace \\\n  swig \\\n  tree \\\n  unzip \\\n  xfonts-base \\\n  xfonts-75dpi \\\n  xvfb \\\n  zip && rm -rf /var/lib/apt/lists/*;\n\nRUN curl -f -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.37.2/install.sh | bash && \\\n  export NVM_DIR=\"$HOME/.nvm\" && \\\n  [ -s \"$NVM_DIR/nvm.sh\" ] && \\. \"$NVM_DIR/nvm.sh\" && \\\n  [ -s \"$NVM_DIR/bash_completion\" ] && \\. \"$NVM_DIR/bash_completion\" && \\\n  nvm install --lts && \\\n  npm install -g node-gyp && npm cache clean --force;\n\nWORKDIR /home\n\nCOPY . .\n\nVOLUME [ \"/sites-public\" ]\n\nENTRYPOINT [ \"./build.sh\" ]"
}