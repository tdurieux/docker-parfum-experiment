{
  "startTime": 1674250858474,
  "endTime": 1674250859224,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "gemUpdateSystemRmRootGem",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "gemUpdateNoDocument",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 10
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 10
      }
    }
  ],
  "repairedDockerfile": "FROM ruby:3.1.2-slim\n\nRUN apt-get update -qq && apt-get install -yq --no-install-recommends \\\n    build-essential \\\n    gnupg2 \\\n    curl \\\n    less \\\n    git \\\n    libpq-dev \\\n    postgresql-client \\\n  && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\n# Add Node.js to sources list\nRUN curl -f -sL https://deb.nodesource.com/setup_14.x | bash -\n\n# Install Node.js version that will enable installation of yarn\nRUN apt-get install -y --no-install-recommends \\\n    nodejs \\\n  && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\nRUN npm install -g yarn && npm cache clean --force;\nRUN mkdir -p /usr/local/etc \\\n  && { \\\n    echo 'install: --no-document'; \\\n    echo 'update: --no-document'; \\\n  } >> /usr/local/etc/gemrc;\n\nRUN gem update --system && gem install bundler && rm -rf /root/.gem;\n\n# Use what the base image provides rather than create our own  app directory\nWORKDIR /usr/src/app/\n\n# Add a script to be executed every time the container starts.\nCOPY .dockerdev/entrypoint.sh /usr/bin/\nRUN chmod +x /usr/bin/entrypoint.sh\nENTRYPOINT [\"entrypoint.sh\"]\n\nEXPOSE 3000\n\nCMD [\"bundle\", \"exec\", \"rails\", \"s\", \"-b\", \"0.0.0.0\"]\n"
}