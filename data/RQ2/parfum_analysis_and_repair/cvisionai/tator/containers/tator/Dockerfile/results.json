{
  "startTime": 1674248040871,
  "endTime": 1674248042223,
  "originalSmells": [
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 18,
        "columnStart": 22,
        "columnEnd": 19
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Build librclone shared object\nFROM golang:latest\nWORKDIR /go\nRUN git clone https://github.com/rclone/rclone.git\n\nWORKDIR /go/rclone/librclone/\nRUN go build --buildmode=c-shared -o librclone.so github.com/rclone/rclone/librclone\n\nFROM ubuntu:20.04\nMAINTAINER CVision AI <info@cvisionai.com>\n\n# Copy librclone shared object to this container\nCOPY --from=0 /go/rclone/librclone/librclone.so /usr/local/lib/\n\n# Install apt packages\nRUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \\\n        python3 python3-pip libgraphviz-dev xdot \\\n        python3-setuptools python3-dev gcc libgdal-dev git vim curl libffi-dev \\\n        ffmpeg wget && rm -rf /var/lib/apt/lists && rm -rf /var/lib/apt/lists/*;\n\n# Install pip packages\nRUN python3 -m pip --no-cache-dir --timeout=1000 install --upgrade pip\nRUN pip3 --no-cache-dir --timeout=1000 install wheel\nRUN pip3 --no-cache-dir --timeout=1000 install pyyaml==5.3.1\nRUN pip3 --no-cache-dir --timeout=1000 install \\\n        django==3.2.11 django-enumfields==2.1.1 \\\n        psycopg2-binary==2.9.3 pillow==9.0.0 imageio==2.14.0 \\\n        pillow-avif-plugin==1.2.2 \\\n        djangorestframework==3.13.1 pygments==2.11.2 \\\n        django-extensions==3.1.5 pygraphviz==1.9 \\\n        pyparsing==3.0.7 pydot==1.4.2 markdown==3.3.6 \\\n        hiredis==2.0.0 redis==4.3.3 greenlet==0.4.15 \\\n        gunicorn==20.1.0 django_admin_json_editor==0.2.3 django-ltree==0.5.3 \\\n        requests==2.27.0 python-dateutil==2.8.2 ujson==5.1.0 slackclient==2.9.3 \\\n        google-auth==2.3.3 elasticsearch==7.10.1 progressbar2==4.0.0 \\\n        gevent==1.4.0 uritemplate==4.1.1 pylint pylint-django \\\n        django-cognito-jwt==0.0.4 boto3==1.20.41 \\\n        google-cloud-storage==2.1.0 datadog==0.43.0 \\\n        kubernetes==21.7.0 minio==7.1.5 okta-jwt-verifier==0.2.3\n\n# Get acme_tiny.py for certificate renewal\nWORKDIR /\nRUN wget https://raw.githubusercontent.com/diafygi/acme-tiny/4.1.0/acme_tiny.py\n\n# Install kubectl\nRUN wget https://storage.googleapis.com/kubernetes-release/release/v1.16.9/bin/linux/amd64/kubectl\nRUN chmod +x kubectl\nRUN mv kubectl /usr/local/bin/.\n\n# Install fork of openapi-core that works in DRF views\nWORKDIR /working\nRUN git clone https://github.com/jrtcppv/openapi-core.git\nWORKDIR /working/openapi-core\nRUN python3 setup.py install\n\n# Copy over the project\nCOPY . /tator_online\nCOPY ui/dist/* /tator_online/main/static/\n\n# Delete front end unit tests\nRUN rm -fr /tator_online/test\nWORKDIR /tator_online\nRUN rm -rf helm\n"
}