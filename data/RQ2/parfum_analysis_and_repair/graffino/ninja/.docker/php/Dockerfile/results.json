{
  "startTime": 1674253655024,
  "endTime": 1674253656039,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 99
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 83
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 4,
        "columnEnd": 31
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM php:8.0-fpm-alpine\n\nENV DOCKER_PHP_XDEBUG_MODE=${DOCKER_PHP_XDEBUG_MODE:-\"off\"}\nENV DOCKER_PHP_ERRORS=${DOCKER_PHP_ERRORS:-\"off\"}\n\nARG DOCKER_PHP_EXTENSIONS\nENV DOCKER_PHP_EXTENSIONS=${DOCKER_PHP_EXTENSIONS:-\"gd mysqli bcmath pdo_mysql zip xdebug\"}\nENV DOCKER_PHP_UPLOAD_SIZE=${DOCKER_PHP_UPLOAD_SIZE:-\"32M\"}\n\nARG DOCKER_COMPOSER_GIT_TOKEN\nENV DOCKER_COMPOSER_GIT_TOKEN=${DOCKER_COMPOSER_GIT_TOKEN:-\"\"}\n\nENV COMPOSER_ALLOW_SUPERUSER 1\n\n# Copy PHP configuration\nCOPY .docker/php/conf.d/php.ini /usr/local/etc/php/php.ini\nCOPY .docker/php/php-fpm.d/www.conf /usr/local/etc/php-fpm.d\n\n# Copy extension configurations\nCOPY .docker/php/conf.d/xdebug.ini /usr/local/etc/php/conf.d/xdebug-dev.ini\nCOPY .docker/php/conf.d/opcache.ini /usr/local/etc/php/conf.d/opcache.ini\n\n# Logs\nRUN mkdir -p /var/log/php-fpm/ && \\\n    chown -R www-data:www-data /var/log/php-fpm\n\n# Install PHP Extensions\nCOPY --from=mlocati/php-extension-installer /usr/bin/install-php-extensions /usr/local/bin/\nRUN chmod uga+x /usr/local/bin/install-php-extensions && sync && \\\n    install-php-extensions $(eval echo ${DOCKER_PHP_EXTENSIONS})\n\n# Development Tools\nRUN apk add --no-cache gcc make g++ zlib-dev autoconf automake libtool nasm libjpeg jpeg-dev libjpeg-turbo-dev\n\n# Install Python\nRUN apk add --no-cache python3 py3-pip\n\n# Fix for OptiPNG on ARM64\nENV CPPFLAGS=\"-DPNG_ARM_NEON_OPT=0\"\n\n# Git\nRUN apk add --no-cache git\n\n# Composer\nRUN curl -f -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer\n\n# Add Oauth Token for Composer\nRUN composer config -g github-oauth.github.com ${DOCKER_COMPOSER_GIT_TOKEN}\n\n# Install MariaDB Client\nRUN apk add --no-cache mariadb-client\n\n# NodeJS\nRUN apk add --no-cache nodejs npm\n# Yarn\nRUN apk add --no-cache yarn --repository=\"http://dl-cdn.alpinelinux.org/alpine/edge/community\"\n\n# WP CLI\nRUN curl -f -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar\nRUN chmod +x wp-cli.phar\nRUN mv wp-cli.phar /usr/local/bin/wpp\nRUN printf \"#!/bin/sh\\n/usr/local/bin/wpp --path='./dist-wp/' --allow-root \\\"\\$@\\\"\" > wp\nRUN chmod +x wp\nRUN mv wp /usr/local/bin/\n\n\nRUN apk add --no-cache vim\nRUN apk add --no-cache mc\n\n# Cron\nENV TZ=Europe/Bucharest\nRUN apk add --no-cache busybox-initscripts\n\n# Copy MariaDB configuration\nCOPY ./.docker/php/cron/crontab /tmp/crontab\nRUN mkdir /var/log/cron\nRUN touch /var/log/cron/cron.log\nRUN crontab /tmp/crontab\n\n\nWORKDIR /var/www/\n\nVOLUME /var/www/node_modules\n\nEXPOSE ${DOCKER_PHP_PORT}\n\nCMD [\"php-fpm\"]\n"
}