{
  "startTime": 1674249538170,
  "endTime": 1674249539637,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 36,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 93
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 5,
        "columnEnd": 66
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 9,
        "columnEnd": 50
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 9,
        "columnEnd": 50
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 21,
        "lineEnd": 31,
        "columnStart": 5,
        "columnEnd": 7
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG BASE=bionic\nFROM ubuntu:${BASE}\n\nARG BASE\nARG LLVM_VERSION\nARG BUILD_TYPE=\"Release\"\n\nENV LLVM_VERSION=${LLVM_VERSION}\nENV BASE=${BASE}\nENV BUILD_TYPE=${BUILD_TYPE}\n\nCOPY cmake /build/llvm/cmake\nCOPY CMakeLists-LLVM.txt /build/llvm/CMakeLists.txt\n\nRUN if [ \"${BASE}\" = \"xenial\" ]; then \\\n      apt update \\\n      && apt install --no-install-recommends -y software-properties-common \\\n      && add-apt-repository -y ppa:ubuntu-toolchain-r/test \\\n      ; rm -rf /var/lib/apt/lists/*; fi\n\nRUN apt update \\\n  && apt install -y --no-install-recommends \\\n    ca-certificates \\\n    curl \\\n    g++-8 \\\n    gcc-8 \\\n    gcc-8-plugin-dev \\\n    make \\\n    python \\\n    python3 \\\n    rsync \\\n    tar \\\n  && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 60 \\\n                         --slave /usr/bin/g++ g++ /usr/bin/g++-8 \\\n  && cp /usr/lib/gcc/x86_64-linux-gnu/8/plugin/include/plugin-api.h /usr/local/include && rm -rf /var/lib/apt/lists/*;\n\nRUN curl -f -L --output /tmp/cmake.tar.gz \\\n  https://github.com/Kitware/CMake/releases/download/v3.20.0/cmake-3.20.0-linux-x86_64.tar.gz \\\n  && tar -xf /tmp/cmake.tar.gz -C /usr/local/ --strip-components=1 && rm /tmp/cmake.tar.gz\n\nRUN cd /build/llvm \\\n  && cmake . -DLLVM_VERSION=${LLVM_VERSION} -DCMAKE_BUILD_TYPE=${BUILD_TYPE} \\\n  && make embedded_llvm -j$(nproc) \\\n  && make embedded_clang -j$(nproc) \\\n  && rm -rf embedded_llvm-prefix/src embedded_clang-prefix/src \\\n  && rm -rf embedded_llvm-prefix/tmp embedded_clang-prefix/tmp \\\n  && rsync -a embedded_clang-prefix/ embedded_llvm-prefix/ /usr/local \\\n  && rm -rf /build/llvm\n"
}