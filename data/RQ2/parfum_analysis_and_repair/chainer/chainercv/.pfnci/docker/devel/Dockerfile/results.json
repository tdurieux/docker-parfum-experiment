{
  "startTime": 1674254816785,
  "endTime": 1674254817846,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 7,
        "columnEnd": 80
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 7,
        "columnEnd": 121
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 7,
        "columnEnd": 30
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM asia.gcr.io/pfn-public-ci/nvidia-cuda:9.2-cudnn7-devel-ubuntu18.04\n\nRUN apt-get update -y && apt-get install -y --no-install-recommends \\\n    ca-certificates \\\n    cmake \\\n    curl \\\n    git \\\n    libopenexr-dev \\\n    libpng-dev \\\n    libtiff-dev \\\n    libwebp-dev \\\n    make \\\n    openssh-client \\\n    python-dev \\\n    python3-dev \\\n    zlib1g-dev \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/*\n\nRUN curl -f -LO https://bootstrap.pypa.io/get-pip.py \\\n    && python2 get-pip.py --no-cache-dir \\\n    && python3 get-pip.py --no-cache-dir \\\n    && rm get-pip.py\n\nRUN pip2 install --no-cache-dir numpy \\\n    && pip3 install --no-cache-dir numpy\n\nENV OPENCV_VERSION=3.4.1\nRUN cd $(mktemp -d) \\\n    && curl -f -L https://github.com/opencv/opencv/archive/${OPENCV_VERSION}.tar.gz | tar zxf - \\\n    && mkdir opencv-${OPENCV_VERSION}/build \\\n    && cd opencv-${OPENCV_VERSION}/build \\\n    && cmake .. \\\n    -DBUILD_JPEG=ON \\\n    -DBUILD_PERF_TESTS=OFF \\\n    -DBUILD_TESTS=OFF \\\n    -DBUILD_WITH_DEBUG_INFO=OFF \\\n    -DBUILD_opencv_apps=OFF \\\n    -DBUILD_opencv_calib3d=OFF \\\n    -DBUILD_opencv_dnn=OFF \\\n    -DBUILD_opencv_features2d=OFF \\\n    -DBUILD_opencv_flann=OFF \\\n    -DBUILD_opencv_java_bindings_generator=OFF \\\n    -DBUILD_opencv_ml=OFF \\\n    -DBUILD_opencv_objdetect=OFF \\\n    -DBUILD_opencv_photo=OFF \\\n    -DBUILD_opencv_shape=OFF \\\n    -DBUILD_opencv_stitching=OFF \\\n    -DBUILD_opencv_superres=OFF \\\n    -DBUILD_opencv_video=OFF \\\n    -DBUILD_opencv_videoio=OFF \\\n    -DBUILD_opencv_videostab=OFF \\\n    -DCMAKE_BUILD_TYPE=Release \\\n    -DWITH_CUDA=OFF \\\n    -DWITH_IPP=OFF \\\n    -DWITH_OPENCL=OFF \\\n    -DWITH_PROTOBUF=OFF \\\n    && make -j $(nproc) \\\n    && make install \\\n    && cd - \\\n    && rm -rf $(pwd)\n\nENV OPENMPI_VERSION=3.0.1\nRUN cd $(mktemp -d) \\\n    && curl -f -L https://www.open-mpi.org/software/ompi/v${OPENMPI_VERSION%.*}/downloads/openmpi-${OPENMPI_VERSION}.tar.bz2 | tar jxf - \\\n    && cd openmpi-${OPENMPI_VERSION} \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-cuda \\\n    && make -j $(nproc) \\\n    && make install \\\n    && cd - \\\n    && rm -rf $(pwd)\n\nRUN echo /usr/local/lib/ > /etc/ld.so.conf.d/local.conf && ldconfig\n\nRUN pip2 install --no-cache-dir \\\n    cython \\\n    matplotlib==2.1 \\\n    mock \\\n    mpi4py \\\n    'git+https://github.com/cocodataset/coco.git#egg=pycocotools&subdirectory=PythonAPI' \\\n    pytest \\\n    scipy \\\n    && pip3 install --no-cache-dir \\\n    cython \\\n    matplotlib \\\n    mock \\\n    mpi4py \\\n    'git+https://github.com/cocodataset/coco.git#egg=pycocotools&subdirectory=PythonAPI' \\\n    pytest \\\n    scipy\n"
}