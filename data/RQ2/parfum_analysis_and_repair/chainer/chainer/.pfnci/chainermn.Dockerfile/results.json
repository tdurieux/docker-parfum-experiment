{
  "startTime": 1674249604028,
  "endTime": 1674249604880,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 1,
        "columnEnd": 19
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 1,
        "columnEnd": 19
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 1,
        "columnEnd": 39
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 8,
        "columnEnd": 21
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 114
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 2,
        "columnEnd": 40
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG BASE_IMAGE=9.2-cudnn7-devel\n\nFROM nvidia/cuda:${BASE_IMAGE}\n\nRUN apt-get update -y && \\\n    apt-get install -y --no-install-recommends \\\n    git \\\n    cmake \\\n    libblas3 \\\n    libblas-dev \\\n\tcurl \\\n\tzlib1g-dev \\\n    libreadline-dev \\\n    libsqlite3-dev \\\n    libssl-dev \\\n\tlibffi-dev \\\n\tbuild-essential \\\n    libbz2-dev \\\n\tssh \\\n\twget \\\n    && \\\n    rm -rf /var/lib/apt/lists/* /var/cache/apt/archives/*\n\n# Install OpenMPI with CUDA\nENV OMPI_VERSION 3.1.3\n\nRUN cd /tmp && wget -q https://www.open-mpi.org/software/ompi/v${OMPI_VERSION%\\.*}/downloads/openmpi-$OMPI_VERSION.tar.bz2 && \\\n  tar -xjf openmpi-$OMPI_VERSION.tar.bz2 && rm openmpi-$OMPI_VERSION.tar.bz2\n\nRUN cd /tmp/openmpi-$OMPI_VERSION && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr --with-cuda --disable-oshmem --disable-mpi-java --disable-java --disable-mpi-fortran && \\\n    make -j 10 && make install && cd && rm -r /tmp/openmpi-$OMPI_VERSION* && \\\n    /usr/bin/ompi_info --parsable --all | grep -q \"mpi_built_with_cuda_support:value:true\" && \\\n    rm -rf /tmp/openmpi-*\n\n\n# Install pyenv\n\nENV PYENV_ROOT /usr/local/pyenv\nENV BASH_PROFILE /root/.bash_profile\n\nRUN git clone https://github.com/pyenv/pyenv.git $PYENV_ROOT\n\nRUN touch $BASH_PROFILE && \\\n    echo 'export PYENV_ROOT=\"$PYENV_ROOT\"' >> $BASH_PROFILE && \\\n\techo 'export PATH=\"$PYENV_ROOT/bin:$PATH\"' >> $BASH_PROFILE && \\\n\techo 'eval \"$(pyenv init -)\"' >> $BASH_PROFILE\n\n#\n# Install Python and necessary packages\n#\n\n\n# Python 3.6.8\nENV PYTHON_VERSION 3.6.8\nCOPY . /cupy\nRUN . $BASH_PROFILE && cd /cupy && pyenv install $PYTHON_VERSION && \\\n\tpyenv shell ${PYTHON_VERSION} && \\\n\tpip install --no-cache-dir -U pip && \\\n\tpip install --no-cache-dir cython && \\\n\tpip install --no-cache-dir chainer pytest mock mpi4py && \\\n\tpip uninstall -y chainer && \\\n        pip install --no-cache-dir .\n"
}