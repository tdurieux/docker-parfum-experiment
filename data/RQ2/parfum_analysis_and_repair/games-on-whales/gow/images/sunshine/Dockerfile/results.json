{
  "startTime": 1674249245694,
  "endTime": 1674249247203,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 39
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:21.04 AS base\n\nENV DEBIAN_FRONTEND=noninteractive\nENV TZ=\"Europe/London\"\n\nENV UNAME retro\n\n# Pulling Sunshine v0.11.1\nARG SUNSHINE_SHA=e4c9c292e57d39136df2d46d1e9b66eba53f3bd3\nENV SUNSHINE_SHA=${SUNSHINE_SHA}\nARG BUILD_TYPE=RELEASE\nENV BUILD_TYPE=${BUILD_TYPE}\n\n######################################\nFROM base AS sunshine-builder\n\nRUN apt-get update -y && apt-get install -y --no-install-recommends \\\n    # Packages needed to build sunshine\n    build-essential fakeroot gcc-10 g++-10 cmake libssl-dev libavdevice-dev libboost-thread-dev libboost-filesystem-dev libboost-log-dev libpulse-dev libopus-dev libxtst-dev libx11-dev libxrandr-dev libxfixes-dev libevdev-dev libxcb1-dev libxcb-shm0-dev libxcb-xfixes0-dev \\\n    git ca-certificates apt-transport-https \\\n    && rm -rf /var/lib/apt/lists/*\n\nRUN git clone https://github.com/loki-47-6F-64/sunshine.git && \\\n    cd sunshine && \\\n    # Fix the SHA commit\n    git checkout -qf $SUNSHINE_SHA && \\\n    # Just printing out git info so that I can double check on CI if the right version as been picked up\n    git show && \\\n    # Recursively download submodules\n    git submodule update --init --recursive && \\\n    # Normal compile\n    mkdir build && cd build && \\\n    cmake -DCMAKE_C_COMPILER=gcc-10 -DCMAKE_CXX_COMPILER=g++-10 -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DSUNSHINE_EXECUTABLE_PATH=sunshine -DSUNSHINE_ASSETS_DIR=/etc/sunshine .. && \\\n    make -j${nproc} && \\\n    # Generate the debian install package\n    ./gen-deb\n\n######################################\nFROM base AS sunshine\n\n# Get compiled sunshine\nCOPY --from=sunshine-builder /sunshine/build/package-deb/sunshine.deb /sunshine.deb\n\n# Install using the official .deb package\n# This will take care of installing the required dependencies\nRUN apt-get update -y && \\\n    apt-get install --no-install-recommends -y -f /sunshine.deb \\\n    && apt-get install -y --no-install-recommends \\\n    # Seems that libgbm1 and libgl is missing\n    libgbm1 libgles2-mesa libegl1 libgl1-mesa-dri \\\n    # Intel GPU drivers\n    i965-va-driver-shaders \\\n    intel-media-va-driver-non-free \\\n    libdrm-intel1 \\\n    libva-drm2 libva-x11-2 va-driver-all \\\n    # Install xdpyinfo so that we can wait for X11 on startup\n    x11-utils \\\n    # libavahi for LAN discovery\n    libavahi-client3 \\\n    # sudo isn't installed by default\n    sudo \\\n    && rm -rf /var/lib/apt/lists/*\n\nENV HOME /home/$UNAME\n\n# Common scripts\nCOPY --chmod=777 common/* /bin/\n# Set up the user\nRUN setup-retro-user\n\n# Utils for debugging\n# RUN apt-get update -y && \\\n#     apt-get install -y --no-install-recommends gdb vainfo ffmpeg \\\n#     && apt-get remove -y software-properties-common \\\n#     && rm -rf /var/lib/apt/lists/*\n\nWORKDIR $HOME\nUSER ${UNAME}\n\n# Config files\nCOPY sunshine/configs/sunshine.conf /cfg/sunshine.conf\nCOPY sunshine/configs/apps.json /cfg/apps.json\nCOPY sunshine/scripts/startup.sh /startup.sh\n\n# Port configuration taken from https://github.com/moonlight-stream/moonlight-docs/wiki/Setup-Guide#manual-port-forwarding-advanced\nEXPOSE 47984-47990/tcp\nEXPOSE 48010\nEXPOSE 48010/udp\nEXPOSE 47998-48000/udp\n\nCMD /bin/bash /startup.sh\n\nARG IMAGE_SOURCE\nLABEL org.opencontainers.image.source $IMAGE_SOURCE\n"
}