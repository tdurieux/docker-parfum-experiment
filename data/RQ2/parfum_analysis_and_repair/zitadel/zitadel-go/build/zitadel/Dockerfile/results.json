{
  "startTime": 1674254930912,
  "endTime": 1674254931848,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 105
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 168
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 7,
        "columnEnd": 212
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 7,
        "columnEnd": 208
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 7,
        "columnEnd": 157
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 7,
        "columnEnd": 143
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 7,
        "columnEnd": 163
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 24
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG GO_VERSION=1.17\n\n#######################\n## These steps set platform / arch type specific variables\n#######################\nFROM alpine AS arm64-base\nENV PROTOC_ARCH aarch_64\n\nFROM alpine AS amd64-base\nENV PROTOC_ARCH x86_64\n\n#######################\n## This step sets up the folder structure,\n## initalices go mods,\n## downloads the protofiles,\n## protoc and protoc-gen-grpc-web for later use\n#######################\nFROM ${BUILDARCH}-base AS base\nARG PROTOC_VERSION=3.18.0\nARG PROTOC_ZIP=protoc-${PROTOC_VERSION}-linux-${PROTOC_ARCH}.zip\nARG GATEWAY_VERSION=2.6.0\nARG VALIDATOR_VERSION=0.6.2\nARG TAG_NAME=main\n\n\nRUN apk add --no-cache tar curl git\nWORKDIR /proto\n\n#protoc\nRUN curl -f -OL https://github.com/protocolbuffers/protobuf/releases/download/v${PROTOC_VERSION}/$PROTOC_ZIP \\\n    && unzip -o $PROTOC_ZIP -d /usr/local bin/protoc \\\n    && unzip -o $PROTOC_ZIP -d /proto include/* \\\n    && rm -f $PROTOC_ZIP\n\n#proto dependencies\nRUN curl -f https://raw.githubusercontent.com/envoyproxy/protoc-gen-validate/v${VALIDATOR_VERSION}/validate/validate.proto --create-dirs -o include/validate/validate.proto \\\n    && curl -f https://raw.githubusercontent.com/grpc-ecosystem/grpc-gateway/v${GATEWAY_VERSION}/protoc-gen-openapiv2/options/annotations.proto --create-dirs -o include/protoc-gen-openapiv2/options/annotations.proto \\\n    && curl -f https://raw.githubusercontent.com/grpc-ecosystem/grpc-gateway/v${GATEWAY_VERSION}/protoc-gen-openapiv2/options/openapiv2.proto --create-dirs -o include/protoc-gen-openapiv2/options/openapiv2.proto \\\n    && curl -f https://raw.githubusercontent.com/googleapis/googleapis/master/google/api/annotations.proto --create-dirs -o include/google/api/annotations.proto \\\n    && curl -f https://raw.githubusercontent.com/googleapis/googleapis/master/google/api/http.proto --create-dirs -o include/google/api/http.proto \\\n    && curl -f https://raw.githubusercontent.com/googleapis/googleapis/master/google/api/field_behavior.proto --create-dirs -o include/google/api/field_behavior.proto\n\nWORKDIR /zitadel\nRUN git clone --depth 1 -b ${TAG_NAME} https://github.com/zitadel/zitadel . \\\n    && cp -r proto/* /proto/include \\\n    && cp -r internal/protoc/protoc-gen-authoption/authoption /proto/include\n\n#######################\n## Go dependencies\n## Speed up this step by mounting your local go mod pkg directory\n#######################\nFROM golang:${GO_VERSION} as go-dep\nCOPY --from=base /proto/include /proto/include\n\nWORKDIR /go/src/github.com/zitadel/zitadel-go\nRUN go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@v1.1.0\nRUN go install google.golang.org/protobuf/cmd/protoc-gen-go@v1.27.1\n\n#######################\n## Go base build\n#######################\nFROM go-dep as zitadel-client\nARG PROJECT_PATH=github.com/zitadel/zitadel-go/v2/pkg/client\n\nCOPY --from=base /proto /proto\nCOPY --from=base /usr/local/bin /usr/local/bin/.\n\nCOPY build/zitadel/generate-grpc-client.sh build/zitadel/generate-grpc-client.sh\nRUN mkdir -p /go/src/github.com/zitadel/zitadel/pkg/grpc/authoption\n## generate all pb files and copy them to a new directory\nRUN ./build/zitadel/generate-grpc-client.sh ${PROJECT_PATH} \\\n    && mkdir /zitadel-api \\\n    && find /go/src/${PROJECT_PATH}/zitadel -iname '*.pb.go' -exec cp --parents \\{\\} /zitadel-api \\; \\\n    && mv /go/src/github.com/zitadel/zitadel/pkg/grpc/admin/admin_grpc.pb.go /zitadel-api/go/src/${PROJECT_PATH}/zitadel/admin/ \\\n    && mv /go/src/github.com/zitadel/zitadel/pkg/grpc/auth/auth_grpc.pb.go /zitadel-api/go/src/${PROJECT_PATH}/zitadel/auth/ \\\n    && mv /go/src/github.com/zitadel/zitadel/pkg/grpc/management/management_grpc.pb.go /zitadel-api/go/src/${PROJECT_PATH}/zitadel/management/\n#######################\n## prepare generated files for output\n#######################\nFROM scratch as zitadel-copy\nARG PROJECT_PATH=github.com/zitadel/zitadel-go/v2/pkg/client\nCOPY --from=zitadel-client /zitadel-api/go/src/${PROJECT_PATH}/zitadel /zitadel\n"
}