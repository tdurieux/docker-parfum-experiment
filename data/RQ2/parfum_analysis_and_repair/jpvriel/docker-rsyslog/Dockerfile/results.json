{
  "startTime": 1674255324470,
  "endTime": 1674255325572,
  "originalSmells": [
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 2,
        "columnEnd": 74
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 44,
        "lineEnd": 56,
        "columnStart": 2,
        "columnEnd": 18
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM centos:7\nARG VERSION\nLABEL org.label-schema.schema-version=1.0.0-rc1 \\\n  org.label-schema.name=\"rsyslog\" \\\n  org.label-schema.description=\"RSyslog container with pre-canned use-cases controlled by setting environment variables\" \\\n  org.label-schema.version=\"${VERSION}\" \\\n  org.label-schema.url=\"http://www.rsyslog.com\" \\\n  org.label-schema.vcs-url=\"https://github.com/JPvRiel/docker-rsyslog\" \\\n  org.label-schema.distribution-scope=public \\\n  maintainer='Jean-Pierre van Riel <jp.vanriel@gmail.com>'\n# Base CentOS image has a nubmer of labels we don't overwrite and this may cause confusion\n\nENV container=docker\n\n# Embed custom org CA into image if need be\nCOPY etc/pki/ca-trust/source/anchors/ /etc/pki/ca-trust/source/anchors/\nRUN update-ca-trust\n\n# Setup repos, etc\n# Disable fast mirror plugin to better leverage upstream proxy caching (or use specific repos)\n# Switch yum config to use a consitant base url (useful if not caching docker build, but relying on an upstream proxy)\nARG DISABLE_YUM_MIRROR=false\nRUN if [ \"$DISABLE_YUM_MIRROR\" != true ]; then exit; fi && \\\n  sed 's/enabled=1/enabled=0/g' -i /etc/yum/pluginconf.d/fastestmirror.conf && \\\n  sed 's/^mirrorlist/#mirrorlist/g' -i /etc/yum.repos.d/CentOS-Base.repo && \\\n  sed 's/^#baseurl/baseurl/g' -i /etc/yum.repos.d/CentOS-Base.repo\n# Some rsyslog modules have dependancies in epel\nRUN yum --setopt=timeout=120 -y update && \\\n  yum -y install --setopt=timeout=120 --setopt=tsflags=nodocs epel-release && rm -rf /var/cache/yum\n# Also switch to a base url for epel repo\nRUN if [ \"$DISABLE_YUM_MIRROR\" != true ]; then exit; fi && \\\n  sed 's/^mirrorlist/#mirrorlist/g' -i /etc/yum.repos.d/epel.repo && \\\n  sed 's/^#baseurl/baseurl/g' -i /etc/yum.repos.d/epel.repo\n\n# Install RSyslog and logrotate\n# For http://rpms.adiscon.com/v8-stable/rsyslog.repo\n# - It has gpgcheck=0\n# - Adiscon doens't offer an HTTPS endpoint for the above file :-/\n# - The GPG key is at http://rpms.adiscon.com/RPM-GPG-KEY-Adiscon, so also not secure to download and trust directly\n# Therefore, prebundle our own local copy of the repo and GPG file\nCOPY etc/pki/rpm-gpg/RPM-GPG-KEY-Adiscon /etc/pki/rpm-gpg/RPM-GPG-KEY-Adiscon\nCOPY etc/yum.repos.d/rsyslog.repo /etc/yum.repos.d/rsyslog.repo\nARG RSYSLOG_VERSION='8.2112.0'\nRUN yum --setopt=timeout=120 -y update && \\\n  yum --setopt=timeout=120 --setopt=tsflags=nodocs -y install \\\n  rsyslog-${RSYSLOG_VERSION} \\\n  rsyslog-gnutls-${RSYSLOG_VERSION} \\\n  rsyslog-openssl-${RSYSLOG_VERSION} \\\n  adisconbuild-librdkafka1 \\\n  rsyslog-kafka-${RSYSLOG_VERSION} \\\n  rsyslog-relp-${RSYSLOG_VERSION} \\\n  rsyslog-pmciscoios-${RSYSLOG_VERSION} \\\n  rsyslog-mmjsonparse-${RSYSLOG_VERSION} \\\n  rsyslog-udpspoof-${RSYSLOG_VERSION} \\\n  lsof \\\n  logrotate \\\n  cronie-noanacron \\\n  && yum clean all && rm -rf /var/cache/yum\nRUN rm -rf /etc/rsyslog.d/ \\\n  && rm -f /etc/rsyslog.conf \\\n  && rm -f /etc/logrotate.conf \\\n  && find /etc/logrotate.d/ -type f -delete \\\n  && find /etc/cron.d/ ! -type d -delete\n\n# Install confd\nARG CONFD_VER='0.16.0'\n#ADD https://github.com/kelseyhightower/confd/releases/download/v${CONFD_VER}/confd-${CONFD_VER}-linux-amd64 /usr/local/bin/confd\nCOPY usr/local/bin/confd-${CONFD_VER}-linux-amd64 /usr/local/bin/confd\n# Use bundled file to avoid downloading all the time\n\nRUN chmod +x /usr/local/bin/confd && \\\n  mkdir -p /etc/confd/conf.d && \\\n  mkdir -p /etc/confd/templates\n\n# Copy rsyslog config templates (for confd)\nCOPY etc/confd /etc/confd\n\n# Copy cron and logrotate config\nCOPY etc/cron.d /etc/cron.d\nCOPY etc/cron.daily /etc/cron.daily\nCOPY etc/logrotate.conf /etc/logrotate.conf\nCOPY usr/local/bin/rsyslog-rotate.sh /usr/local/bin/rsyslog-rotate.sh\nRUN chmod 0644 /etc/logrotate.conf && \\\n  chmod 0744 /usr/local/bin/rsyslog-rotate.sh && \\\n  find /etc/cron.daily -type f -exec chmod 0744 {} \\;\n\n# Copy rsyslog config files and create folders for template config\nCOPY etc/rsyslog.conf /etc/rsyslog.conf\nCOPY etc/rsyslog.d/input/ /etc/rsyslog.d/input/\nCOPY etc/rsyslog.d/output/ /etc/rsyslog.d/output/\n# Directories intended as optional volume mounted config\nRUN mkdir -p \\\n  /etc/rsyslog.d/input/filters \\\n  /etc/rsyslog.d/output/filters \\\n  /etc/rsyslog.d/extra\n# Note:\n# - rsyslog.d/input/filters is a volume used for addtional input filters that fit into pre-defined templated inputs\n# - rsyslog.d/output/filters is a volume used for addtional output filters that fit into pre-defined templated outputs\n# - rsyslog.d/extra is a volume used for unforseen custom config\n\n# Copy a default self-signed cert and key - this is INSECURE and for testing/build purposes only\n# - To help handle cases when the rsyslog tls volume doesn't have expected files present\n# - rsyslog.sh entrypoint script will symlink and use these defaults if not provided in a volume\n# - For production, avoid insecure default by providing an /etc/pki/rsyslog volume provisioned with your own keys and certficates\nRUN mkdir -p usr/local/etc/pki/test\nCOPY usr/local/etc/pki/test/test_ca.cert.pem /usr/local/etc/pki/test\nCOPY usr/local/etc/pki/test/test_syslog_server.key.pem /usr/local/etc/pki/test\nCOPY usr/local/etc/pki/test/test_syslog_server.cert.pem /usr/local/etc/pki/test\n\n# Default ENV vars for rsyslog config tuned for high throughput by default and assumes a multi-core system that can handle several worker threads.\n# - See: https://www.rsyslog.com/doc/v8-stable/examples/high_performance.html.\n\n# TLS related globals\nENV rsyslog_global_ca_file='/etc/pki/tls/certs/ca-bundle.crt' \\\n  rsyslog_server_cert_file='/etc/pki/rsyslog/cert.pem' \\\n  rsyslog_server_key_file='/etc/pki/rsyslog/key.pem'\n\n# Inputs and parsing inputs. Note:\n# - Rate limiting is disabled by default (0).\n# - UDP recieve buffer size is left as autotune by default (0).\n# - UDP FIFO shedular is set to try avoid packet loss.\n# - TCP socket backlog is increase to try avoid failed TCP open connection errors (only applies to imptcp).\n# - imtcp is used for TCP with TLS while imptcp is used for TCP without TLS.\n# - Batch sizes and threads are increased with the aim of handling higher remote server throughput.\n# - A 'central' queue is based on a fixed array in-memory queue, so take care when increasing rsyslog_global_maxMessageSize\n# - 'anon' or 'x509/certvalid' or 'x509/name' for ...auth_mode does not apply to RELP, only TCP TLS\nENV rsyslog_global_maxMessageSize=65536 \\\n  rsyslog_parser='[\"rsyslog.rfc5424\", \"custom.rfc3164\"]' \\\n  rsyslog_pmrfc3164_force_tagEndingByColon='off' \\\n  rsyslog_pmrfc3164_remove_msgFirstSpace='on' \\\n  rsyslog_pmrfc3164_permit_squareBracketsInHostname='off' \\\n  rsyslog_pmrfc3164_permit_slashInHostname='on' \\\n  rsyslog_pmrfc3164_permit_atSignsInHostname='off' \\\n  rsyslog_global_parser_permitSlashInProgramName='on' \\\n  rsyslog_global_parser_escapeControlCharacterTab='off' \\\n  rsyslog_global_preserveFQDN='on' \\\n  rsyslog_mmpstrucdata='on' \\\n  rsyslog_mmjsonparse='on' \\\n  rsyslog_mmjsonparse_without_cee='off' \\\n  rsyslog_support_metadata_formats='off' \\\n  rsyslog_input_filtering_enabled='on' \\\n  rsyslog_module_imudp_RcvBufSize=0 \\\n  rsyslog_module_imudp_BatchSize=128 \\\n  rsyslog_module_imudp_threads=2 \\\n  rsyslog_module_imudp_SchedulingPolicy='fifo' \\\n  rsyslog_module_imudp_SchedulingPriority=10 \\\n  rsyslog_module_imudp_RateLimit_Interval=0 \\\n  rsyslog_module_imudp_RateLimit_Burst=262144 \\\n  rsyslog_module_imptcp_threads=4 \\\n  rsyslog_module_imptcp_SocketBacklog=128 \\\n  rsyslog_module_imptcp_ProcessOnPoller='off' \\\n  rsyslog_module_imptcp_KeepAlive='off' \\\n  rsyslog_module_imptcp_flowControl='on' \\\n  rsyslog_module_imptcp_NotifyOnConnectionOpen='off' \\\n  rsyslog_module_imptcp_NotifyOnConnectionClose='off' \\\n  rsyslog_module_imptcp_RateLimit_Interval=0 \\\n  rsyslog_module_imptcp_RateLimit_Burst=262144 \\\n  rsyslog_module_imtcp_KeepAlive='off' \\\n  rsyslog_module_imtcp_flowControl='on' \\\n  rsyslog_module_imtcp_NotifyOnConnectionClose='off' \\\n  rsyslog_module_imtcp_maxSessions=1000 \\\n  rsyslog_module_imtcp_streamDriver_authMode='anon' \\\n  rsyslog_module_imtcp_RateLimit_Interval=0 \\\n  rsyslog_module_imtcp_RateLimit_Burst=262144 \\\n  rsyslog_module_imrelp_KeepAlive='off' \\\n  rsyslog_module_imrelp_authMode='certvalid' \\\n  rsyslog_tls_permittedPeer='[\"*\"]'\n\n# Metrics. Note:\n# - impstats is a special internal input for reporting rsyslog metrics\n# - Options to log to syslog and/or a file.\n# - Logging metrics within syslog itself could be unreliable as problems can prevent metrics from being processed properly.\n# - If logging metrics within syslog, the cee format helps rsyslog expect impstats in a JSON format after the '@cee' cookie in the message.\n# - Logging metrics to a file is probably better but should be complimented with log rotate process to avoid filling up storage.\n# - Option to enable logging of dynstat incriment errors to a seperate meta file (off by default)\nENV rsyslog_impstats='on' \\\n  rsyslog_module_impstats_interval=60 \\\n  rsyslog_module_impstats_resetCounters='on' \\\n  rsyslog_module_impstats_format='cee' \\\n  rsyslog_impstats_log_syslog='on' \\\n  rsyslog_impstats_log_file_enabled='off' \\\n  rsyslog_impstats_log_file='/var/log/impstats/metrics.log' \\\n  rsyslog_impstats_ruleset='syslog_stats' \\\n  rsyslog_dyn_stats='on' \\\n  rsyslog_dyn_stats_maxCardinality=10000 \\\n  rsyslog_dyn_stats_unusedMetricLife=86400 \\\n  rsyslog_dyn_stats_inc_error_reporting='off' \\\n  rsyslog_dyn_stats_inc_error_reporting_file='/var/log/impstats/dyn_stats_inc_error.log' \\\n  rsyslog_global_action_reportSuspension='on' \\\n  rsyslog_global_senders_keepTrack='on' \\\n  rsyslog_global_senders_timeoutAfter=86400 \\\n  rsyslog_global_senders_reportGoneAway='on'\n\n# Central queue tuned for higher throughput in a central syslog server:\n# - Up to 8 worker threads will be running if the queue gets filled halfway (i.e. 64K messages, 8K messages per worker).\n# - FixedArray sacrifices RAM (consumes more static memory) for slightly less CPU overhead.\nENV rsyslog_central_queue_type='FixedArray' \\\n  rsyslog_central_queue_size=131072 \\\n  rsyslog_central_queue_dequeueBatchSize=2048 \\\n  rsyslog_central_queue_minDequeueBatchSize=256 \\\n  rsyslog_central_queue_minDequeueBatchSize_timeout=500 \\\n  rsyslog_central_queue_workerThreads=8 \\\n  rsyslog_central_workerThreadMinimumMessages=8192\n# Note - see /etc/confd/60-ruleset.conf.tmpl:\n# - Instead of using the default main queue, a 'central' explicitly defined queue is used between inputs and outputs\n# - If rsyslog_global_maxMessageSize needs to be excessivly large, consider changing the queue type from 'fixed array' to 'linked list'\n# - Each input is bound to it's own input ruleset (instead of the rsyslog main queue default)\n# - Each input ruleset applies generic or input specific filters\n# - Each input ruleset/queue is of type 'direct'\n# - Each input ruleset/queue calls the central ruleset\n# - The central ruleset acts as a central 'sink' to collate all inputs\n# - The central queue applies various parsing checks and data enrichments\n# - The central queue can apply a generic output filter before calling other output rulesets\n# - The central ruleset/queue is of type 'in-memory'\n# - Output specific rulesets, such as fwd_kafka, fwd_syslog, etc have 'disk-assisted' memory queues\n# - Output specific rulesets/queues are intended to persist data backlogs the most, and should perist when rsyslog is restarted\n# Note futher:\n# - The queue.workerThreadMinimumMessages setting defaults to queue.size/queue.workerthreads.\n# - The 'fixed array' queue type for the central queue trades off extra memory usage for lower CPU overhead\n#   (See: https://www.rsyslog.com/doc/v8-stable/configuration/global/options/rsconf1_mainmsgqueuesize.html)\n\n# Outputs (action output queues are persistant/disk assisted)\n# See 60-output_format.conf.tmpl\nENV rsyslog_output_filtering_enabled='on' \\\n  rsyslog_omfile_enabled='on' \\\n  rsyslog_omfile_split_files_per_host='off' \\\n  rsyslog_omfile_template='RSYSLOG_TraditionalFileFormat' \\\n  rsyslog_omfile_DirCreateMode='0755' \\\n  rsyslog_omfile_FileCreateMode='0640' \\\n  rsyslog_omkafka_enabled='off' \\\n  rsyslog_omkafka_broker='' \\\n  rsyslog_omkafka_confParam='' \\\n  rsyslog_omkafka_topic='syslog' \\\n  rsyslog_omkafka_dynaTopic='off' \\\n  rsyslog_omkafka_topicConfParam='' \\\n  rsyslog_omkafka_template='TmplJSON' \\\n  rsyslog_omfwd_syslog_enabled='off' \\\n  rsyslog_omfwd_syslog_host='' \\\n  rsyslog_omfwd_syslog_port=514 \\\n  rsyslog_omfwd_syslog_protocol='tcp' \\\n  rsyslog_omfwd_syslog_template='TmplRFC5424' \\\n  rsyslog_omudpspoof_syslog_enabled='off' \\\n  rsyslog_omudpspoof_syslog_host='' \\\n  rsyslog_omudpspoof_syslog_port=514 \\\n  rsyslog_omudpspoof_syslog_template='TmplRFC5424' \\\n  rsyslog_omfwd_json_enabled=off \\\n  rsyslog_omfwd_json_host='' \\\n  rsyslog_omfwd_json_port=5000 \\\n  rsyslog_omfwd_json_template='TmplJSON' \\\n  rsyslog_om_action_queue_dequeueBatchSize=1024 \\\n  rsyslog_om_action_queue_minDequeueBatchSize=128 \\\n  rsyslog_om_action_queue_minDequeueBatchSize_timeout=500 \\\n  rsyslog_om_action_queue_workerThreads=4 \\\n  rsyslog_om_action_queue_workerThreadMinimumMessages=8192 \\\n  rsyslog_om_action_queue_maxDiskSpace=1073741824 \\\n  rsyslog_om_action_queue_size=1048576 \\\n  rsyslog_om_action_queue_discardMark=838860 \\\n  rsyslog_om_action_queue_discardSeverity=6 \\\n  rsyslog_om_action_queue_checkpointInterval=8192 \\\n  rsyslog_call_fwd_extra_rule='off'\n# Several globals are defined via rsyslog_global_* inlcuding reporting stats\n#\n# rsyslog_support_metadata_formats and the appropriate template choice must both be used to allow including validation checks on syslog headers, hostnames and tags for RFC3164. The metadata template choices are:\n# - TmplRFC5424\n# - TmplJSONRawMsg\n#\n# Notes for the pre-canned outputs (kafka, JSON, syslog)\n# - choose either\n# - each pre-canned output can have it's own template applied, e.g.\n# - rsyslog_om_action_queue_* is set for all outputs (sort of a global)\n# - rsyslog_om_action_queue_maxDiskSpace=1073741824 ~ 1G\n# - E.g. if three outputs have ~ 1G file limit for the queue, 3G overall is needed\n# - Most rsyslog limits work on number of messages in the queue, so rsyslog_om_action_queue_size and rsyslog_om_action_queue_discardMark need to be adjusted in line with rsyslog_om_action_queue_maxDiskSpace\n# - E.g. Assuming 1024 byte messages (e.g. custom templates or JSON formats create bloat), then a 1G file can fit ~1 million messages, and start discarding at ~800K million messages\n# - E.g. Assuming worst case, all messages are 64K size, then only ~16K messages can be handled (without knowing what overhead rsyslog adds for each message in the queue)\n# - While arithmentic could be used to work backwards from max file sizes to message numbers, unfortunatly confd's arithmetic golang text template functions don't handle dynamic type conversion. See: https://github.com/kelseyhightower/confd/issues/611\n# - rsyslog_om_action_queue_discardSeverity=6 implies info and debug messages get discarded\n#\n# Additonal output config will probably be highly varied, so instead of trying to template/pre-can it, we allow for that config to be red in\n# As above, extra optional volumes with config that can be supplied at runtime\n# - /etc/rsyslog.d/input/filters\n# - /etc/rsyslog.d/output/filters\n# - /etc/rsyslog.d/extra\n#\n# rsyslog_call_fwd_extra_rule makes the config expect input the user to add a ruleset named fwd_extra somewhere in /etc/rsyslog.d/extra/*.conf\n\n# Built-in log rotation for /var/log/remote and /var/log/impstats\n# - This process could be managed externally by a host more aware of volume sizes and Constraints.\n# - If managed externally, the HUP signal needs to be sent to the container and the entrypoint script will handle passing it onto rsyslogd.\nENV logrotate_enabled='on' \\\n  logrotate_remote_period='daily' \\\n  logrotate_remote_files='42' \\\n  logrotate_impstats_period='daily' \\\n  logrotate_impstats_files='42'\n\n# Volumes required\nVOLUME /var/log/remote \\\n  /var/log/impstats \\\n  /var/lib/rsyslog \\\n  /etc/pki/rsyslog\n\n# Ports to expose\n# Note: UDP=514, TCP=514, TCP=601, TCP Secure=6514, RELP=2514, RELP Secure=7514, RELP Secure with strong client auth=8514\nEXPOSE 514/udp 514/tcp 601/tcp 6514/tcp 2514/tcp 7514/tcp 8514/tcp\n\n#TODO: also, decide if we will accept the signal to reload config without restarting the container\n\nCOPY usr/local/bin/entrypoint.sh \\\n  usr/local/bin/rsyslog_healthcheck.sh \\\n  usr/local/bin/rsyslog_config_expand.py \\\n  /usr/local/bin/\nRUN chmod 0755 usr/local/bin/entrypoint.sh \\\n  /usr/local/bin/rsyslog_healthcheck.sh \\\n  /usr/local/bin/rsyslog_config_expand.py\n\nENTRYPOINT [\"/usr/local/bin/entrypoint.sh\"]\n\nHEALTHCHECK CMD /usr/local/bin/rsyslog_healthcheck.sh\n\n# Add build-date at the end to avoid invalidating the docker build cache\nARG BUILD_DATE\nLABEL org.label-schema.build-date=\"${BUILD_DATE}\"\n"
}