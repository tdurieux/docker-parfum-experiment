{
  "startTime": 1674218463338,
  "endTime": 1674218464922,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 152,
        "lineEnd": 153,
        "columnStart": 4,
        "columnEnd": 76
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 166,
        "lineEnd": 166,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 177,
        "lineEnd": 177,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 200,
        "lineEnd": 200,
        "columnStart": 4,
        "columnEnd": 94
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 201,
        "lineEnd": 201,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 216,
        "lineEnd": 216,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 22,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 38,
        "lineEnd": 39,
        "columnStart": 22,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 43,
        "lineEnd": 44,
        "columnStart": 22,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 48,
        "lineEnd": 73,
        "columnStart": 22,
        "columnEnd": 13
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 87,
        "lineEnd": 93,
        "columnStart": 22,
        "columnEnd": 18
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 107,
        "lineEnd": 107,
        "columnStart": 18,
        "columnEnd": 46
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 180,
        "lineEnd": 180,
        "columnStart": 22,
        "columnEnd": 113
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 184,
        "lineEnd": 189,
        "columnStart": 22,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 192,
        "lineEnd": 196,
        "columnStart": 22,
        "columnEnd": 32
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Docker for ur3 repo\n# ros-melodic-base, gazebo9, gps, python libraries\n# Python 3 version\n\nARG UBUNTU_VERSION=18.04\n\nFROM tensorflow/tensorflow:latest-gpu-py3\nLABEL maintainer Cristian Beltran \"beltran@hlab.sys.es.osaka-u.ac.jp\"\n\n#### Use an official ROS runtime as a parent image\n# setup timezone\nRUN echo 'Etc/UTC' > /etc/timezone && \\\n    ln -s /usr/share/zoneinfo/Etc/UTC /etc/localtime && \\\n    apt-get update && apt-get install --no-install-recommends -q -y tzdata && rm -rf /var/lib/apt/lists/*\n\n# setup keys\nRUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654\n\n# setup sources.list\nRUN echo \"deb http://packages.ros.org/ros/ubuntu bionic main\" > /etc/apt/sources.list.d/ros1-latest.list\n\n# install bootstrap tools\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    python-rosdep \\\n    python-rosinstall \\\n    python-vcstools \\\n    && rm -rf /var/lib/apt/lists/*\n\n# setup environment\nENV LANG C.UTF-8\nENV LC_ALL C.UTF-8\n\n# bootstrap rosdep\nRUN rosdep init \\\n    && rosdep update\n\n# install ros packages\nENV ROS_DISTRO melodic\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    ros-melodic-ros-core=1.4.1-0* \\\n    && rm -rf /var/lib/apt/lists/*\n\n# install ros packages\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    ros-melodic-ros-base=1.4.1-0* \\\n    && rm -rf /var/lib/apt/lists/*\n\n# install universal robot ros packages\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    ros-$ROS_DISTRO-gazebo-ros-pkgs \\\n    ros-$ROS_DISTRO-spacenav-node \\\n    ros-$ROS_DISTRO-rqt-common-plugins \\\n    # install catkin\n    ros-$ROS_DISTRO-catkin \\\n    python-catkin-tools \\\n    # Install Numpy Boost\n    libboost-dev \\\n    libboost-python-dev \\\n    libboost-system-dev \\\n    libboost-all-dev \\\n    libatlas-base-dev \\\n    libprotobuf-dev \\\n    protobuf-compiler \\\n    # python dependencies\n    python-setuptools \\\n    python3-tk \\\n    python3-numpy \\\n    # utils\n    locate \\\n    aptitude \\\n    vim htop tmux \\\n    curl wget \\\n    tk \\\n    spacenavd \\\n    && rm -rf /var/lib/apt/lists/*\n\n### Gazebo ###\n# setup keys\nRUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys D2486D2DD83DB69272AFE98867170598AF249743\n\n# setup sources.list\nRUN . /etc/os-release \\\n    && echo \"deb http://packages.osrfoundation.org/gazebo/$ID-stable `lsb_release -sc` main\" > /etc/apt/sources.list.d/gazebo-latest.list\n\nENV DEBIAN_FRONTEND noninteractive\n\n# install gazebo packages\nRUN apt-get update && apt-get install --no-install-recommends -q -y \\\n    binutils \\\n    mesa-utils \\\n    module-init-tools \\\n    x-window-system \\\n    gazebo9 \\\n    libgazebo9-dev \\\n    && rm -rf /var/lib/apt/lists/*\n\nADD ./docker/orocos_kinematics_dynamics.tar.xz /root/\n\n# Install SIP 4.19.8\nADD ./docker/sip-4.19.8.tar.gz /root/\n\nRUN /bin/bash -c \"cd ~/ \\\n               && cd sip-4.19.8 \\\n               && python configure.py \\\n               && make -j4 && make install\"\n\n# Install PyKDL\nRUN apt update && apt -y --no-install-recommends install libeigen3-dev && rm -rf /var/lib/apt/lists/*\nRUN /bin/bash -c \"cd ~/orocos_kinematics_dynamics/orocos_kdl \\\n               && mkdir build && cd build \\\n               && cmake -DCMAKE_BUILD_TYPE=Release .. \\\n               && make -j4 && make install\"\n\nRUN /bin/bash -c \"cd ~/orocos_kinematics_dynamics/python_orocos_kdl \\\n               && mkdir build && cd build \\\n               && cmake -DCMAKE_BUILD_TYPE=Release -DPYTHON_INCLUDE_DIR=$(python -c \"from distutils.sysconfig import get_python_inc; print(get_python_inc())\")  -DPYTHON_LIBRARY=$(python -c \"import distutils.sysconfig as sysconfig; print(sysconfig.get_config_var('LIBDIR'))\") -DPYTHON_VERSION=3 .. \\\n               && make -j4\"\n\nCOPY ./docker/bashrc /etc/bash.bashrc\nRUN chmod a+rwx /etc/bash.bashrc\n\n### Ros Workspace ###\n# Set up the workspace\nRUN /bin/bash -c \"source /opt/ros/$ROS_DISTRO/setup.bash \\\n               && mkdir -p ~/ros_ws/src \\\n               && cd ~/ros_ws/ \\\n               && catkin init\"\n\n# Installing repo required for homework\nRUN /bin/bash -c \"cd ~/ros_ws/src \\\n               && git clone https://bitbucket.org/traclabs/trac_ik.git \\\n               && git clone https://github.com/cambel/ur3.git ros_ur3 \\\n               && git clone https://github.com/UniversalRobots/Universal_Robots_ROS_Driver.git universal_robots_ros_driver \\\n               && git clone -b calibration_devel https://github.com/fmauch/universal_robot.git universal_robot\"\n\n# Updating ROSDEP and installing dependencies\nRUN cd ~/ros_ws \\\n    && rosinstall ~/ros_ws/src /opt/ros/$ROS_DISTRO src/ros_ur3/dependencies.rosinstall \\\n    && apt-get update \\\n    && rosdep fix-permissions \\\n    && rosdep update \\\n    && rosdep install --from-paths src --ignore-src --rosdistro=$ROS_DISTRO -y \\\n    && rm -rf /var/lib/apt/lists/*\n\nENV PYTHONIOENCODING UTF-8\nRUN /bin/bash -c \"cd ~/ros_ws/src/gazebo_ros_link_attacher \\\n                  && git checkout melodic-devel \\\n                  && cd ~/ros_ws/src/robotiq \\\n                  && git fetch origin && git checkout melodic-devel\"\n\n## Python libraries ##\nRUN python -m pip install pip --upgrade && \\\n    pip install --no-cache-dir matplotlib==2.2.3 spicy protobuf pyyaml pyquaternion rospkg \\\n    lxml tqdm catkin-pkg empy PyVirtualDisplay defusedxml gym psutil pyprind\n\n# Compiling ros workspace\nRUN /bin/bash -c \"source /opt/ros/$ROS_DISTRO/setup.bash \\\n               && cd ~/ros_ws/ \\\n               && rm -rf build \\\n               && catkin build -DPYTHON_EXECUTABLE=/usr/bin/python3 -DPYTHON_LIBRARY=/usr/lib/x86_64-linux-gnu/libpython3.6m.so -DPYTHON_VERSION=3\"\n\n################################################\n# Custom python libs\n################################################\nRUN apt-get update && apt-get -y upgrade && rm -rf /var/lib/apt/lists/*\n\nRUN pip install --no-cache-dir Cython cpprb\n\n# ur_ikfast\nRUN /bin/bash -c \"cd ~/ \\\n               && mkdir pylibs && cd pylibs \\\n               && git clone https://github.com/cambel/ur_ikfast.git \\\n               && cd ur_ikfast && pip install -e .\"\n\n# fix for sip\nRUN rm /usr/lib/python3/dist-packages/sip.cpython-36m-x86_64-linux-gnu.so\n\nRUN pip install --no-cache-dir xmltodict imageio IPython\n\n## Intel Realsense ROS packages\nRUN apt-get update && apt-get install --no-install-recommends -y ros-$ROS_DISTRO-realsense2-camera ros-$ROS_DISTRO-realsense2-description \\\n    && rm -rf /var/lib/apt/lists/*\n\n##### Easy hand-eye calibration libs\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    ros-$ROS_DISTRO-apriltag-ros \\\n    ros-$ROS_DISTRO-handeye \\\n    ros-$ROS_DISTRO-rqt-joint-trajectory-controller \\\n    ros-$ROS_DISTRO-rqt-tf-tree \\\n    ros-$ROS_DISTRO-rqt-multiplot \\\n    && rm -rf /var/lib/apt/lists/*\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    ros-melodic-moveit \\\n    ros-melodic-moveit-runtime \\\n    ros-melodic-moveit-python \\\n    ros-melodic-moveit-resources \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Workaround for python3 + tf2\nRUN pip install --no-cache-dir --extra-index-url https://rospypi.github.io/simple/ tf2_ros --ignore-installed\nRUN pip install --no-cache-dir --upgrade pip\n\nRUN /bin/bash -c \"cd ~/ros_ws/src/robotiq \\\n                  && git pull \\\n                  && cd ../ros_ur3 \\\n                  && git pull\"\n\n# Compiling ros workspace\nRUN /bin/bash -c \"source /opt/ros/$ROS_DISTRO/setup.bash \\\n               && cd ~/ros_ws/ \\\n               && rm -rf build \\\n               && catkin build -DPYTHON_EXECUTABLE=/usr/bin/python3 -DPYTHON_LIBRARY=/usr/lib/x86_64-linux-gnu/libpython3.6m.so -DPYTHON_VERSION=3\"\n\nRUN mkdir -p ~/.gazebo\nRUN git clone https://github.com/osrf/gazebo_models ~/.gazebo/models\nRUN pip install --no-cache-dir netifaces\n\nENV NVIDIA_VISIBLE_DEVICES ${NVIDIA_VISIBLE_DEVICES:-all}\nENV NVIDIA_DRIVER_CAPABILITIES ${NVIDIA_DRIVER_CAPABILITIES:+$NVIDIA_DRIVER_CAPABILITIES,}graphics\n\n# setup environment\nEXPOSE 11345\n\nRUN echo 'source /opt/ros/$ROS_DISTRO/setup.bash' >> ~/.bashrc\nRUN echo 'source ~/ros_ws/devel/setup.bash' >> ~/.bashrc\n\nRUN echo 'source /usr/share/gazebo/setup.sh' >> ~/.bashrc\nRUN echo 'export PYTHONPATH=/root/orocos_kinematics_dynamics/python_orocos_kdl/build:$PYTHONPATH' >> ~/.bashrc\nRUN echo 'export GAZEBO_RESOURCE_PATH=$GAZEBO_RESOURCE_PATH:~/ros_ws/src/ros-universal-robots/ur3_gazebo/models/' >> ~/.bashrc\n"
}