{
  "startTime": 1674250841821,
  "endTime": 1674250842411,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 9
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Use an official Node runtime as a parent image\nFROM node:latest\n\n# Set the working directory to /app\nWORKDIR /\n\n# Copy the current directory contents into the container at /app\nCOPY . /\n\n# Install net tools to allow local network scen.\nRUN apt-get update && apt-get install -y --no-install-recommends net-tools && rm -rf /var/lib/apt/lists/*;\n\n# Install any needed packages specified in package.json\nRUN npm i && npm cache clean --force;\n\n# Make port 80 available to the world outside this container\nEXPOSE 80\n\n# Define environment variable\nENV HTTP_PORT 80\n\n# Run app.py when the container launches\nCMD [\"node\", \"dist/index.js\"]"
}