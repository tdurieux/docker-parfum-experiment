{
  "startTime": 1674246854055,
  "endTime": 1674246857305,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 6,
        "columnStart": 22,
        "columnEnd": 9
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 6,
        "columnStart": 22,
        "columnEnd": 9
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# before docker build can be executed, the war file, the tomcat libs folder\n# and the conf directory have to be copied into this folder (done by maven build)\nFROM tomcat:9.0.41-jdk11-openjdk\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    vim \\\n    less \\\n\tdos2unix && rm -rf /var/lib/apt/lists/*;\n\n# add webofneeds default config env variables\nENV WON_CONFIG_DIR=/usr/local/tomcat/won/conf\nENV LOGBACK_CONFIG=logback.xml\nENV CERTIFICATE_PASSWORD=changeit\n\n# configure tomcat\nADD ./setenv.sh /usr/local/tomcat/bin/\nADD ./ssl/server.xml /usr/local/tomcat/conf/\n\n# switch classloader hacks on if in dev mode (enabled by providing DEV_MODE=true in the build\n# environment or via --build-arg DEV_MODE=true\nARG DEV_MODE=false\n\n# uncomment the following line to access tomcat manager with admin user\n#ADD ./tomcat-users.xml /usr/local/tomcat/conf/\n\n# remove the applications not needed => comment the next two lines for having access to the tomcat manager\nRUN rm -rf /usr/local/tomcat/webapps/*\nRUN rm -rf /usr/local/tomcat/work/Catalina/localhost/*\n\n# add and extract the application war files to the webapps folder\nADD ./owner.war /usr/local/tomcat/webapps/\nRUN unzip /usr/local/tomcat/webapps/owner.war -d /usr/local/tomcat/webapps/owner\nRUN rm /usr/local/tomcat/webapps/owner.war\n\n\n## if DEV_MODE=true, remove all won dependency jars (we mount the respective class files into the container)\nRUN ${DEV_MODE} \\\n&& rm /usr/local/tomcat/webapps/owner/WEB-INF/lib/won-owner*.jar \\\n      /usr/local/tomcat/webapps/owner/WEB-INF/lib/won-core*.jar \\\n      /usr/local/tomcat/webapps/owner/WEB-INF/lib/won-vocab*.jar \\\n      /usr/local/tomcat/webapps/owner/WEB-INF/lib/won-cryptography*.jar \\\n      /usr/local/tomcat/webapps/owner/WEB-INF/lib/won-matcher*.jar \\\n      /usr/local/tomcat/webapps/owner/WEB-INF/lib/won-utils-mail*.jar \\\n      /usr/local/tomcat/webapps/owner/WEB-INF/lib/won-utils-goals*.jar \\\n      /usr/local/tomcat/webapps/owner/WEB-INF/lib/won-utils-conversation*.jar \\\n      /usr/local/tomcat/webapps/owner/WEB-INF/lib/won-utils-batch*.jar \\\n|| echo \" ---| Step skipped (DEV_MODE=${DEV_MODE})\"\n#RUN ${DEV_MODE} && mkdir -p /usr/local/tomcat/won/libs || echo \" ---| Step skipped (DEV_MODE=${DEV_MODE})\"\n#RUN ${DEV_MODE} && mv /usr/local/tomcat/webapps/owner/WEB-INF/lib/* /usr/local/tomcat/won/libs  || echo \" ---| Step skipped (DEV_MODE=${DEV_MODE})\"\n#RUN ${DEV_MODE} && rm -rf /usr/local/tomcat/webapps/owner/WEB-INF/classes/*  || echo \" ---| Step skipped (DEV_MODE=${DEV_MODE})\"\n\n# add the bouncy castle libraries to the jre as well as to the java.security config (we need them in the jre, only tomcat lib folder doesn't work)\nADD ./required-libs/* /usr/local/tomcat/lib/\nADD ./jce/* /usr/lib/jvm/java-8-openjdk-amd64/jre/lib/security/\n\n# add the webofneeds configuration files for the application\nADD ./conf/owner.properties /usr/local/tomcat/won/conf/owner.properties\nADD ./conf/logback* /usr/local/tomcat/won/conf/\n\n# prepare folder for server certificates - this path should be the same as the folder containing\n# SSLCertificateFile/Key configured in server.xml:\nRUN mkdir -p /usr/local/tomcat/conf/ssl/\n\n# prepare folder for client certificates - this path should be the same as configured for client key/trust stores in\n# application's corresponding conf/*.properties file\nRUN mkdir -p /usr/local/tomcat/won/client-certs/\n\n# convert Windows/Mac text file to Linux text file\nRUN dos2unix /usr/local/tomcat/bin/setenv.sh\n"
}