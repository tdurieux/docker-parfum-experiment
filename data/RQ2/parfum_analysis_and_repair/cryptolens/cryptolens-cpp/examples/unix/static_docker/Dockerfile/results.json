{
  "startTime": 1674252022745,
  "endTime": 1674252023329,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 6,
        "columnEnd": 93
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 57
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 57
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian\n\nRUN apt-get update \\\n && apt-get install --no-install-recommends -y build-essential curl git vim cmake \\\n && adduser --gecos \"\" --disabled-password builder && rm -rf /var/lib/apt/lists/*;\n\nUSER builder:builder\nWORKDIR /home/builder\nRUN CURL_URL=\"https://curl.haxx.se/download/curl-7.63.0.tar.xz\" \\\n && OPENSSL_URL=\"https://www.openssl.org/source/openssl-1.0.2q.tar.gz\" \\\n && curl -f -LO \"$CURL_URL\" \\\n && curl -f -LO \"$OPENSSL_URL\"\nRUN mkdir curl && tar xf curl*.tar* -C curl && rm curl*.tar*\nRUN mkdir ssl  && tar xf *ssl*.tar* -C ssl  && rm *ssl*.tar*\nRUN cd /home/builder/curl && mv curl* src && mkdir install\nRUN cd /home/builder/ssl  && mv *ssl* src && mkdir install\nRUN cd /home/builder/ssl/src \\\n &&   ./config --prefix=\"/home/builder/ssl/install\" -fPIC \\\n &&   make -j8  \\\n &&   make install\nRUN cd /home/builder/curl/src \\\n && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"/home/builder/curl/install\" -with-ssl=\"/home/builder/ssl/install\" \\\n && make -j8 \\\n && make install\n\nRUN git clone https://github.com/cryptolens/cryptolens-cpp.git\n\nRUN mkdir -p /home/builder/cryptolens-cpp/examples/unix/static_docker/cmake/build \\\n &&   cd     /home/builder/cryptolens-cpp/examples/unix/static_docker/cmake/build \\\n &&   cmake .. \\\n &&   make -j8\n\nRUN mkdir -p /home/builder/cryptolens-cpp/examples/unix/static_docker/cc \\\n &&   cd     /home/builder/cryptolens-cpp/examples/unix/static_docker/cc \\\n &&   export CURL_ROOT=\"/home/builder/curl/install\" \\\n &&   export SSL_ROOT=\"/home/builder/ssl/install\" \\\n &&   export CRYPTOLENS_ROOT=\"/home/builder/cryptolens-cpp\" \\\n &&   g++ -c \\\n          -I \"$CRYPTOLENS_ROOT/include/cryptolens\" \\\n          \"$CRYPTOLENS_ROOT/src/basic_Cryptolens.cpp\" \\\n          \"$CRYPTOLENS_ROOT/src/ActivateError.cpp\" \\\n          \"$CRYPTOLENS_ROOT/src/DataObject.cpp\" \\\n          \"$CRYPTOLENS_ROOT/src/LicenseKey.cpp\" \\\n          \"$CRYPTOLENS_ROOT/src/LicenseKeyChecker.cpp\" \\\n          \"$CRYPTOLENS_ROOT/src/LicenseKeyInformation.cpp\" \\\n          \"$CRYPTOLENS_ROOT/third_party/base64_OpenBSD/base64.cpp\" \\\n &&   g++ -c \\\n          -I \"$SSL_ROOT/include\" \\\n          -I \"$CURL_ROOT/include\" \\\n          -I \"$CRYPTOLENS_ROOT/include/cryptolens\" \\\n          \"$CRYPTOLENS_ROOT/src/SignatureVerifier_OpenSSL.cpp\" \\\n &&   g++ -c \\\n          -I \"$SSL_ROOT/include\" \\\n          -I \"$CURL_ROOT/include\" \\\n          -I \"$CRYPTOLENS_ROOT/include/cryptolens\" \\\n          \"$CRYPTOLENS_ROOT/src/RequestHandler_curl.cpp\" \\\n &&   g++ -c \\\n          -I \"$SSL_ROOT/include\" \\\n          -I \"$CURL_ROOT/include\" \\\n          -I \"$CRYPTOLENS_ROOT/include\" \\\n          \"$CRYPTOLENS_ROOT/examples/unix/example_activate.cpp\" \\\n &&   g++ -pthread \\\n          -ldl \\\n          -o example_activate \\\n          *.o \\\n          \"$CURL_ROOT/lib/libcurl.a\" \\\n          \"$SSL_ROOT/lib/libssl.a\" \\\n          \"$SSL_ROOT/lib/libcrypto.a\"\n"
}