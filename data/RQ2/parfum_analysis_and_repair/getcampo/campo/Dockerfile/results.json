{
  "startTime": 1674221013404,
  "endTime": 1674221014515,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 2,
        "columnEnd": 51
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 2,
        "columnEnd": 18
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 16,
        "columnStart": 22,
        "columnEnd": 12
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 22,
        "columnEnd": 75
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 20,
        "columnEnd": 67
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 44,
        "columnEnd": 60
      }
    }
  ],
  "repairedDockerfile": "## base stage\n\nFROM ubuntu:18.04 AS base\n\nENV LANG=en_US.UTF-8\nENV LANGUAGE=en_US.UTF-8\nENV LC_ALL=C.UTF-8\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n  build-essential \\\n  imagemagick \\\n  libpq-dev \\\n  nodejs \\\n  postgresql-client \\\n  ruby \\\n  ruby-dev \\\n  zlib1g-dev && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get update && apt-get install -y --no-install-recommends curl gnupg && \\\n  curl -f -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - && \\\n  echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list && \\\n  apt-get update && apt-get install -y --no-install-recommends yarn && \\\n  apt-get autoremove -y curl gnupg && rm -rf /var/lib/apt/lists/*;\n\nRUN gem install bundler -v 2.0.2\n\nWORKDIR /campo\n\n## production stage\n\nFROM base AS production\n\nENV RAILS_ENV=production\n\nCOPY Gemfile Gemfile.lock /campo/\n\nRUN bundle install --deployment --without test development && \\\n  rm vendor/bundle/ruby/2.5.0/cache/*\n\nCOPY . /campo/\n\nRUN bin/rails assets:precompile && \\\n  yarn cache clean && \\\n  rm -rf node_modules tmp/cache/* /tmp/* && yarn cache clean;\n"
}