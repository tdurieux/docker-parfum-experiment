{
  "startTime": 1674255144766,
  "endTime": 1674255145358,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 16
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# BUILD IMAGE\nFROM node:14.18\nRUN curl -f \"https://install.meteor.com/?release=2.5.6\" | sh\n# Temporary change the NODE_ENV env variable, so that all libraries are installed:\nENV NODE_ENV_TMP $NODE_ENV\nENV NODE_ENV anythingButProduction\nCOPY packages /opt/core/packages\nWORKDIR /opt/core/packages\nRUN rm -R *-gateway documentation\nRUN yarn install && yarn build && yarn cache clean;\nCOPY meteor /opt/core/meteor\nCOPY scripts /opt/core/scripts\nWORKDIR /opt/core/meteor\n# Force meteor to setup the runtime\nRUN meteor --version --allow-superuser\nRUN meteor npm install -g yarn\nRUN meteor yarn install\n# Restore the NODE_ENV variable:\nENV NODE_ENV $NODE_ENV_TMP\nRUN --mount=type=cache,target=/opt/core/meteor/.meteor/local NODE_OPTIONS=\"--max-old-space-size=4096\" METEOR_DEBUG_BUILD=1 meteor build --allow-superuser --directory /opt/\nWORKDIR /opt/bundle/programs/server/\nRUN npm install && npm cache clean --force;\n# Install production dependencies for the worker\nWORKDIR /opt/core/packages\nRUN yarn --prod --ignore-scripts\n\n# DEPLOY IMAGE\nFROM node:14.18-slim\nCOPY --from=0 /opt/bundle /opt/core\nCOPY --from=0 /opt/core/packages /opt/packages\nCOPY meteor/docker-entrypoint.sh /opt\n\n# Tell meteor where the worker code is located\nENV WORKER_EXEC_DIR=/opt/packages/job-worker\n\nWORKDIR /opt/core/\nCMD [\"/opt/docker-entrypoint.sh\"]\n"
}