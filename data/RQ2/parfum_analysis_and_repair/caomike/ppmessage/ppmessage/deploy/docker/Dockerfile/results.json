{
  "startTime": 1674250908564,
  "endTime": 1674250909584,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 101,
        "lineEnd": 101,
        "columnStart": 4,
        "columnEnd": 119
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 108,
        "lineEnd": 108,
        "columnStart": 7,
        "columnEnd": 65
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 118,
        "lineEnd": 118,
        "columnStart": 7,
        "columnEnd": 69
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 60,
        "lineEnd": 95,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 113,
        "lineEnd": 114,
        "columnStart": 7,
        "columnEnd": 54
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 121,
        "lineEnd": 128,
        "columnStart": 7,
        "columnEnd": 38
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 135,
        "lineEnd": 135,
        "columnStart": 7,
        "columnEnd": 18
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 102,
        "lineEnd": 102,
        "columnStart": 7,
        "columnEnd": 78
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 111,
        "lineEnd": 111,
        "columnStart": 7,
        "columnEnd": 44
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 119,
        "lineEnd": 119,
        "columnStart": 7,
        "columnEnd": 47
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 20,
        "lineEnd": 56,
        "columnStart": 22,
        "columnEnd": 8
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 20,
        "lineEnd": 56,
        "columnStart": 22,
        "columnEnd": 8
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# PPMessage\n#\n# VERSION           0.1\n\nFROM debian:latest\n\nMAINTAINER Jin He <jin.he@ppmessage.com>\n\nENV FFMPEG_VERSION=2.8.5 \\\n    NGINX_VERSION=1.8.0 \\\n    MYSQL_CONNECTOR_PYTHON_VERSION=2.1.3\n\n########## step 1 : copy sources.list ##########\nCOPY [\"sources.list\", \"/etc/apt/sources.list\"]\n\n\n########## step 2: apt-get install ##########\n# set noninteractive to prevent mysql from promting setting root-password,\n# which freeze the install process.\n\nRUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y \\\n    apt-file \\\n    apt-utils \\\n    autoconf \\\n    automake \\\n    gcc \\\n    git \\\n    g++ \\\n    libblas-dev \\\n    liblapack-dev \\\n    libatlas-base-dev \\\n    gfortran \\\n    libffi-dev \\\n    libfdk-aac-dev \\\n    libfreetype6-dev \\\n    # libjpeg8-dev \\\n    libjpeg62-turbo-dev \\\n    libmagic1 \\\n    libmp3lame-dev \\\n    libncurses5-dev \\\n    libopencore-amrwb-dev \\\n    libopencore-amrnb-dev \\\n    libopus-dev \\\n    libpng12-dev \\\n    libpcre3 \\\n    libpcre3-dev \\\n    libssl-dev \\\n    libtool \\\n    mercurial \\\n    mysql-server \\\n    openssl \\\n    pkg-config \\\n    python \\\n    python-dev \\\n    python-pip \\\n    redis-server \\\n    wget \\\n    && apt-get clean && rm -rf /var/lib/apt/lists/*;\n\n########## step 3: pip install ##########\nRUN pip install --no-cache-dir -i http://pypi.douban.com/simple \\\n    axmlparserpy \\\n    beautifulsoup4 \\\n    biplist \\\n    evernote \\\n    filemagic \\\n    geoip2 \\\n    green \\\n    git+https://github.com/senko/python-video-converter.git \\\n    hg+https://dingguijin@bitbucket.org/dingguijin/apns-client \\\n    identicon \\\n    ipython \\\n    jieba \\\n    paramiko \\\n    paho-mqtt \\\n    pillow \\\n    ppmessage-mqtt \\\n    pyipa \\\n    pypinyin \\\n    pyparsing \\\n    python-dateutil \\\n    python-gcm \\\n    python-magic \\\n    qiniu \\\n    qrcode \\\n    readline \\\n    redis \\\n    rq \\\n    supervisor \\\n    sqlalchemy \\\n    tornado \\\n    xlrd \\\n    numpy \\\n    matplotlib \\\n    scipy \\\n    scikit-learn\n\n\n########## step 4: wget install mysql-connector-python, nginx, ffmpeg, libmaxmindb ##########\nWORKDIR /tmp\n\nRUN wget https://cdn.mysql.com//Downloads/Connector-Python/mysql-connector-python-$MYSQL_CONNECTOR_PYTHON_VERSION.tar.gz \\\n    && tar -xzvf mysql-connector-python-$MYSQL_CONNECTOR_PYTHON_VERSION.tar.gz \\\n    && cd mysql-connector-python-$MYSQL_CONNECTOR_PYTHON_VERSION \\\n    && python setup.py install \\\n    # && service mysql start && mysqladmin -uroot password test \\\n\n    && cd /tmp \\\n    && wget https://nginx.org/download/nginx-$NGINX_VERSION.tar.gz \\\n    && git clone https://github.com/vkholodkov/nginx-upload-module.git \\\n    && cd nginx-upload-module && git checkout 2.2 && cd ../ \\\n    && tar -xzvf nginx-$NGINX_VERSION.tar.gz \\\n    && cd nginx-$NGINX_VERSION \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-http_ssl_module \\\n                   --add-module=../nginx-upload-module \\\n    && make && make install \\\n\n    && cd /tmp \\\n    && wget https://ffmpeg.org/releases/ffmpeg-$FFMPEG_VERSION.tar.bz2 \\\n    && tar -xjvf ffmpeg-$FFMPEG_VERSION.tar.bz2 \\\n    && cd ffmpeg-$FFMPEG_VERSION \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-libopencore-amrnb \\\n                   --enable-libopencore-amrwb \\\n                   --enable-version3 \\\n                   --enable-nonfree \\\n                   --disable-yasm \\\n                   --enable-libmp3lame \\\n                   --enable-libopus \\\n                   --enable-libfdk-aac \\\n    && make && make install \\\n\n    && cd /tmp \\\n    && git clone --recursive https://github.com/maxmind/libmaxminddb \\\n    && cd libmaxminddb \\\n    && ./bootstrap \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n    && make && make install \\\n\n    && rm -fr /tmp/* && rm mysql-connector-python-$MYSQL_CONNECTOR_PYTHON_VERSION.tar.gz\n\nENV PATH=$PATH:/usr/local/nginx/sbin\n\n# clean up\n# RUN apt-get clean && rm -fr /tmp/*\n\n########## step 5: other docker settings ##########\nEXPOSE 8080\n\nVOLUME [\"/ppmessage\", \"/usr/local/var/log\", \"usr/local/opt/mdm/uploads\"]\n\nCOPY [\"docker-entrypoint.sh\", \"/entrypoint.sh\"]\n\nENTRYPOINT [\"/entrypoint.sh\"]"
}