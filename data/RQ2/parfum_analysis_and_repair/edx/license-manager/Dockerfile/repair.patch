diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/edx/license-manager/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/edx/license-manager/Dockerfile/repaired.Dockerfile
index b80232d..cc4cfa2 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/edx/license-manager/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/edx/license-manager/Dockerfile/repaired.Dockerfile
@@ -24,17 +24,17 @@ MAINTAINER devops@edx.org
 
 # If you add a package here please include a comment above describing what it is used for
 RUN apt-get update && \
-apt-get install -y software-properties-common && \
+ apt-get install --no-install-recommends -y software-properties-common && \
 apt-add-repository -y ppa:deadsnakes/ppa && apt-get update && \
-apt-get upgrade -qy && apt-get install language-pack-en locales git \
+apt-get upgrade -qy && apt-get install --no-install-recommends language-pack-en locales git \
 python3.8-dev python3.8-venv libmysqlclient-dev libssl-dev build-essential wget unzip -qy && \
 rm -rf /var/lib/apt/lists/*
 
 WORKDIR /tmp
 RUN wget https://packages.confluent.io/clients/deb/pool/main/libr/librdkafka/librdkafka_1.8.2.orig.tar.gz
-RUN tar -xf librdkafka_1.8.2.orig.tar.gz
+RUN tar -xf librdkafka_1.8.2.orig.tar.gz && rm librdkafka_1.8.2.orig.tar.gz
 WORKDIR /tmp/librdkafka-1.8.2
-RUN ./configure && make && make install && ldconfig
+RUN ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" && make && make install && ldconfig
 
 ENV VIRTUAL_ENV=/edx/app/license-manager/venvs/license-manager
 RUN python3.8 -m venv $VIRTUAL_ENV
@@ -68,8 +68,8 @@ COPY requirements/production.txt /edx/app/license_manager/requirements/productio
 COPY requirements/pip.txt /edx/app/license_manager/requirements/pip.txt
 
 # Dependencies are installed as root so they cannot be modified by the application user.
-RUN pip install -r requirements/pip.txt
-RUN pip install -r requirements/production.txt
+RUN pip install --no-cache-dir -r requirements/pip.txt
+RUN pip install --no-cache-dir -r requirements/production.txt
 
 RUN mkdir -p /edx/var/log
 
@@ -85,13 +85,13 @@ CMD gunicorn --workers=2 --name license_manager -c /edx/app/license_manager/lice
 COPY . /edx/app/license_manager
 
 FROM app as newrelic
-RUN pip install newrelic
+RUN pip install --no-cache-dir newrelic
 CMD newrelic-admin run-program gunicorn --workers=2 --name license_manager -c /edx/app/license_manager/license_manager/docker_gunicorn_configuration.py --log-file - --max-requests=1000 license_manager.wsgi:application
 
 
 FROM app as devstack
 USER root
-RUN pip install -r /edx/app/license_manager/requirements/dev.txt
+RUN pip install --no-cache-dir -r /edx/app/license_manager/requirements/dev.txt
 USER app
 CMD gunicorn --reload --workers=2 --name license_manager -c /edx/app/license_manager/license_manager/docker_gunicorn_configuration.py --log-file - --max-requests=1000 license_manager.wsgi:application
 
@@ -101,6 +101,6 @@ FROM app as legacy_devapp
 EXPOSE 18170
 EXPOSE 18171
 USER root
-RUN pip install -r /edx/app/license_manager/requirements/dev.txt
+RUN pip install --no-cache-dir -r /edx/app/license_manager/requirements/dev.txt
 USER app
 CMD gunicorn --reload --workers=2 --name license_manager -c /edx/app/license_manager/license_manager/docker_gunicorn_configuration.py --log-file - --max-requests=1000 license_manager.wsgi:application