{
  "startTime": 1674248068629,
  "endTime": 1674248069669,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 2,
        "columnEnd": 47
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 2,
        "columnEnd": 150
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:focal as app\n\nRUN apt update && \\\n  apt-get install --no-install-recommends -y software-properties-common && \\\n  apt-add-repository -y ppa:deadsnakes/ppa && apt-get update && \\\n  apt install --no-install-recommends -y git-core language-pack-en python3.8-dev python3.8-venv libmysqlclient-dev libffi-dev libssl-dev build-essential gettext openjdk-8-jdk && \\\n  rm -rf /var/lib/apt/lists/*\n\nENV VIRTUAL_ENV=/venv\nRUN python3.8 -m venv $VIRTUAL_ENV\nENV PATH=\"$VIRTUAL_ENV/bin:$PATH\"\n\nRUN pip install --no-cache-dir pip==20.2.3 setuptools==50.3.0\n\nRUN locale-gen en_US.UTF-8\nENV LANG en_US.UTF-8\nENV LANGUAGE en_US:en\nENV LC_ALL en_US.UTF-8\nENV ANALYTICS_API_CFG /edx/etc/analytics_api.yml\n\nWORKDIR /edx/app/analytics_api\nCOPY requirements /edx/app/analytics_api/requirements\nRUN pip install --no-cache-dir -r requirements/production.txt\n\nEXPOSE 8100\nCMD gunicorn --bind=0.0.0.0:8100 --workers 2 --max-requests=1000 -c /edx/app/analytics_api/analytics_data_api/docker_gunicorn_configuration.py analyticsdataserver.wsgi:application\n\nRUN useradd -m --shell /bin/false app\nUSER app\nCOPY . /edx/app/analytics_api\n\nFROM app as newrelic\nRUN pip install --no-cache-dir newrelic\nCMD newrelic-admin run-program gunicorn --bind=0.0.0.0:8100 --workers 2 --max-requests=1000 -c /edx/app/analytics_api/analytics_data_api/docker_gunicorn_configuration.py analyticsdataserver.wsgi:application\n"
}