diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/edx/edx-platform/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/edx/edx-platform/Dockerfile/repaired.Dockerfile
index f37d051..584b11d 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/edx/edx-platform/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/edx/edx-platform/Dockerfile/repaired.Dockerfile
@@ -14,7 +14,7 @@ FROM ubuntu:focal as base
 # We update, upgrade, and delete lists all in one layer
 # in order to reduce total image size.
 RUN apt-get update && \
-    DEBIAN_FRONTEND=noninteractive apt-get install --yes \
+    DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install --yes \
         # Global requirements
         build-essential \
         curl \
@@ -98,18 +98,18 @@ RUN python3.8 -m venv "$VIRTUAL_ENV"
 COPY requirements requirements
 RUN  sed '/^-e \(common\/\|openedx\/\|.\)/d' requirements/edx/base.txt \
   > requirements/edx/base-minus-local.txt
-RUN pip install -r requirements/pip.txt
-RUN pip install -r requirements/edx/base-minus-local.txt
+RUN pip install --no-cache-dir -r requirements/pip.txt
+RUN pip install --no-cache-dir -r requirements/edx/base-minus-local.txt
 
 # Set up a Node environment and install Node requirements.
 # Must be done after Python requirements, since nodeenv is installed
 # via pip.
 # The node environment is already 'activated' because its .../bin was put on $PATH.
 RUN nodeenv /edx/app/edxapp/nodeenv --node=16.14.0 --prebuilt
-RUN npm install -g npm@8.5.x
+RUN npm install -g npm@8.5.x && npm cache clean --force;
 COPY package.json package.json
 COPY package-lock.json package-lock.json
-RUN npm set progress=false && npm install
+RUN npm set progress=false && npm install && npm cache clean --force;
 
 # Copy over remaining parts of repository (including all code).
 COPY . .
@@ -117,7 +117,7 @@ COPY . .
 # Install Python requirements again in order to capture local projects, which
 # were skipped earlier. This should be much quicker than if were installing
 # all requirements from scratch.
-RUN pip install -r requirements/edx/base.txt
+RUN pip install --no-cache-dir -r requirements/edx/base.txt
 
 ##################################################
 # Define LMS docker-based non-dev target.
@@ -179,7 +179,7 @@ CMD gunicorn \
 # so that the installed development requirements are contained
 # in a single layer, shared between `lms-dev` and `cms-dev`.
 FROM base as dev
-RUN pip install -r requirements/edx/development.txt
+RUN pip install --no-cache-dir -r requirements/edx/development.txt
 
 # Link configuration YAMLs and set EDX_PLATFORM_SE1TTINGS.
 ENV EDX_PLATFORM_SETTINGS='devstack_docker'