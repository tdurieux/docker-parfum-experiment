{
  "startTime": 1674248114746,
  "endTime": 1674248115556,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 29,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 22
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:focal as app\nMAINTAINER sre@edx.org\n\n\n# Packages installed:\n# git; Used to pull in particular requirements from github rather than pypi,\n# and to check the sha of the code checkout.\n\n# ppa:deadsnakes/ppa; since Ubuntu doesn't ship with python 3.8 till 20, we need deadsnakes to install\n# python 3.8 on older ubuntu versions\n\n# language-pack-en locales; ubuntu locale support so that system utilities have a consistent\n# language and time zone.\n\n# python3.8-dev; to install python 3.8\n# python3-venv; installs venv module required to create virtual environments\n\n# libssl-dev; # mysqlclient wont install without this.\n\n# libmysqlclient-dev; to install header files needed to use native C implementation for\n# MySQL-python for performance gains.\n# software-properties-common; to get apt-add-repository\n# deadsnakes PPA to install Python 3.8\n# If you add a package here please include a comment above describing what it is used for\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y software-properties-common && \\\n    apt-add-repository -y ppa:deadsnakes/ppa && \\\n    apt-get update && apt-get upgrade -qy && \\\n    apt-get install --no-install-recommends \\\n    language-pack-en \\\n    locales \\\n    git \\\n    libmysqlclient-dev \\\n    libssl-dev \\\n    build-essential \\\n    python3.8-dev \\\n    python3.8-distutils \\\n    python3.8-venv -qy && \\\n    rm -rf /var/lib/apt/lists/*\n\nENV VIRTUAL_ENV=/edx/app/edx-notes-api/venvs/edx-notes-api\nRUN python3.8 -m venv $VIRTUAL_ENV\nENV PATH=\"$VIRTUAL_ENV/bin:$PATH\"\n\n\nRUN locale-gen en_US.UTF-8\nENV LANG en_US.UTF-8\nENV LANGUAGE en_US:en\nENV LC_ALL en_US.UTF-8\nENV EDXNOTES_CONFIG_ROOT /edx/etc\nENV DJANGO_SETTINGS_MODULE notesserver.settings.yaml_config\n\nEXPOSE 8120\nRUN useradd -m --shell /bin/false app\n\nWORKDIR /edx/app/notes\n\n# Copy the requirements explicitly even though we copy everything below\n# this prevents the image cache from busting unless the dependencies have changed.\nCOPY requirements/base.txt /edx/app/notes/requirements/base.txt\nCOPY requirements/pip.txt /edx/app/notes/requirements/pip.txt\n\n# Dependencies are installed as root so they cannot be modified by the application user.\nRUN pip install --no-cache-dir -r requirements/pip.txt\nRUN pip install --no-cache-dir -r requirements/base.txt\n\nRUN mkdir -p /edx/var/log\n\n# Code is owned by root so it cannot be modified by the application user.\n# So we copy it before changing users.\nUSER app\n\n# Gunicorn 19 does not log to stdout or stderr by default. Once we are past gunicorn 19, the logging to STDOUT need not be specified.\nCMD gunicorn --workers=2 --name notes -c /edx/app/notes/notesserver/docker_gunicorn_configuration.py --log-file - --max-requests=1000 notesserver.wsgi:application\n\n# This line is after the requirements so that changes to the code will not\n# bust the image cache\nCOPY . /edx/app/notes\n"
}