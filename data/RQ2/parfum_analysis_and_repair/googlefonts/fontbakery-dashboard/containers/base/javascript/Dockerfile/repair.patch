diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/googlefonts/fontbakery-dashboard/containers/base/javascript/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/googlefonts/fontbakery-dashboard/containers/base/javascript/Dockerfile/repaired.Dockerfile
index 982df2a..2b41488 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/googlefonts/fontbakery-dashboard/containers/base/javascript/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/googlefonts/fontbakery-dashboard/containers/base/javascript/Dockerfile/repaired.Dockerfile
@@ -4,15 +4,15 @@ FROM node:13.13.0-buster
 RUN touch /tmp/cache_spoof_16
 
 RUN apt-get update && apt-get upgrade -y \
-    && apt-get install -y software-properties-common
+    && apt-get install --no-install-recommends -y software-properties-common && rm -rf /var/lib/apt/lists/*;
 
 # mentioned in https://github.com/nodegit/nodegit
 RUN apt-get update \
-    && apt-get install -y libssl-dev libpcre2-posix0 libkrb5-3 \
-    libk5crypto3 libcomerr2 libpcre2-dev libkrb5-dev
+    && apt-get install --no-install-recommends -y libssl-dev libpcre2-posix0 libkrb5-3 \
+    libk5crypto3 libcomerr2 libpcre2-dev libkrb5-dev && rm -rf /var/lib/apt/lists/*;
 
 
-RUN npm install -g bower browserify requirejs;
+RUN npm install -g bower browserify requirejs; npm cache clean --force;
 
 ADD ./.bowerrc ./bower.json ./package.json /var/javascript/
 
@@ -23,28 +23,28 @@ RUN touch /tmp/cache_spoof_2
 
 # will also invoke bower install etc.
 # --production: don't install dev-dependencies
-RUN cd /var/javascript && npm install --unsafe-perm --production
+RUN cd /var/javascript && npm install --unsafe-perm --production && npm cache clean --force;
 
 
 # It seems to be most robust to read our METADATA.pb files using python
 # that's the only reason for this dependency, used in manifestSources
 # via the module /node/util/getMetadataPb
 RUN apt-get update \
-    && apt-get install -y build-essential cmake python3-dev git;
-RUN curl -o /tmp/get-pip.py https://bootstrap.pypa.io/get-pip.py; python3 /tmp/get-pip.py;
-RUN pip install --upgrade pip
+    && apt-get install --no-install-recommends -y build-essential cmake python3-dev git; rm -rf /var/lib/apt/lists/*;
+RUN curl -f -o /tmp/get-pip.py https://bootstrap.pypa.io/get-pip.py; python3 /tmp/get-pip.py;
+RUN pip install --no-cache-dir --upgrade pip
 
 # opentype-sanitizer needs ninja which did not build without these:
 # related: https://github.com/scikit-build/ninja-python-distributions/issues/22
-RUN pip install scikit-build
+RUN pip install --no-cache-dir scikit-build
 # help ninja build itself
 ENV CXXFLAGS="-D_BSD_SOURCE"
 # build ninja
-RUN pip install ninja
+RUN pip install --no-cache-dir ninja
 
 
-RUN git clone --depth 1 -b main https://github.com/googlefonts/gftools.git /var/gftools;\
-    pip install /var/gftools;
+RUN git clone --depth 1 -b main https://github.com/googlefonts/gftools.git /var/gftools; \
+    pip install --no-cache-dir /var/gftools;
 
 RUN cd /var/javascript \
      && bower install --allow-root \
@@ -60,7 +60,7 @@ RUN cd /var/javascript \
 # TODO: install with bower when:
 # https://github.com/drudru/ansi_up/issues/39 is resolved
 RUN mkdir -p /var/javascript/browser/js/bower_components/ansi_up/ \
-    && curl -o /var/javascript/browser/js/bower_components/ansi_up/ansi_up.js \
+    && curl -f -o /var/javascript/browser/js/bower_components/ansi_up/ansi_up.js \
                https://raw.githubusercontent.com/drudru/ansi_up/master/ansi_up.js
 
 # In the minikube development version it can be interesting to preload