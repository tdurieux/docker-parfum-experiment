{
  "startTime": 1674215051067,
  "endTime": 1674215052094,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 27,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 27,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 73
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright 2022 ISP RAS\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nFROM sweetvishnya/ubuntu20.04-sydr-fuzz\n\nMAINTAINER Andrey Fedotov\n\n# Install build dependencies.\nRUN wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add -\nRUN wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc | apt-key add -\nRUN echo 'deb http://apt.kitware.com/ubuntu/ focal main' | tee /etc/apt/sources.list.d/kitware.list >/dev/null\nRUN echo 'deb http://apt.llvm.org/focal/ llvm-toolchain-focal main' | tee /etc/apt/sources.list.d/llvm.list >/dev/null\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y make git cmake python python3-pip ninja-build antlr3 \\\n                       m4 clang-12 lld-12 libidn11-dev libaio1 libaio-dev && rm -rf /var/lib/apt/lists/*;\nRUN pip3 install --no-cache-dir conan\n\n# Clone target from GitHub.\nRUN mkdir /ydbwork\nWORKDIR ydbwork\nRUN git clone https://github.com/ydb-platform/ydb.git\n\n# Fix commit\nRUN cd ydb && git checkout 250d29abfdc9a2526cac1e0b4b36c5b6e1d58e0c\n\n# Build project for libFuzzer.\nRUN mkdir build-fuzz\nCOPY fuzzer.diff ./\nRUN  cd ydb && git apply ../fuzzer.diff\nRUN cd build-fuzz && \\\n    cmake -G Ninja -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE=../ydb/clang.toolchain ../ydb && \\\n    ninja -j$(nproc)\n\n# Build projetc for Sydr.\nRUN mkdir build-sydr\nCOPY sydr.cc ./ydb\nRUN cd ydb && git checkout .\nCOPY sydr.diff ./\nRUN  cd ydb && git apply ../sydr.diff\n\nRUN cd build-sydr && \\\n    cmake -G Ninja -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE=../ydb/clang.toolchain ../ydb && \\\n    ninja -j$(nproc)\n\n# Build project for coverage.\n#RUN mkdir build-cov\n#RUN cd ydb && git checkout .\n#COPY cov.diff ./\n#RUN  cd ydb && git apply ../cov.diff\n\n#RUN cd build-cov && \\\n#    cmake -G Ninja -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE=../ydb/clang.toolchain ../ydb && \\\n#    ninja -j100\n"
}