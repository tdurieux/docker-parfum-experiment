{
  "startTime": 1674248874287,
  "endTime": 1674248875142,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 22,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# DDS Security library\n# Copyright (c) 2018-2020, Arm Limited and Contributors. All rights reserved.\n#\n# SPDX-License-Identifier: BSD-3-Clause\n#\n\nFROM ubuntu:bionic\n\nRUN echo 'Etc/UTC' > /etc/timezone && \\\n    ln -s /usr/share/zoneinfo/Etc/UTC /etc/localtime && \\\n    apt-get update && apt-get install --no-install-recommends -q -y tzdata && \\\n    rm -rf /var/lib/apt/lists/*\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y \\\n    fuseext2 \\\n    expect \\\n    openjdk-8-jdk \\\n    dh-autoreconf \\\n    g++ \\\n    device-tree-compiler \\\n    bison \\\n    flex \\\n    gcc \\\n    libssl-dev \\\n    xterm \\\n    python-crypto \\\n    git \\\n    python-wand \\\n    uuid-dev \\\n    bc \\\n    cpio \\\n    wget \\\n    python3-apt \\\n    python3-pip && \\\n    pip3 install --no-cache-dir pyelftools && \\\n    rm -rf /var/lib/apt/lists/*\n\nRUN git config --global user.name \"no-email\" && \\\n    git config --global user.email \"no-email@email.com\" && \\\n    git config --global color.diff \"auto\"\n\nWORKDIR /shared_folder\n\nRUN wget -O arm_platform_setup.py \\\n    https://community.arm.com/cfs-file/__key/communityserver-wikis-components-files/00-00-00-00-10/5518.armplat_5F00_1901.py\n\n# The command bellow will select the following configuration:\n##\n## 2) Fixed Virtual Platforms (FVPs)\n## 2) Armv8 architecture\n## 1) Armv8-A Base Platform\n## 1) Armv8-A Base Platform with 64-bit software stack\n## 1) Build from source\n## 1) Linux kernel & userspace filesystem\n## 2) Linaro/ArmLT Latest Stable Kernel\n## 2) OpenEmbedded\n## 2) OpenEmbedded Minimal\n## 1) Yes\n##\n## +---------------+----------------------------------------------------------+\n## | Workspace     | /shared_folder/                                          |\n## | Platform      | Armv8-A Base Platform with 64-bit software stack         |\n## | Type          | Use prebuilt configuration                               |\n## | Configuration | Linaro/ArmLT Latest Stable Kernel + OpenEmbedded Minimal |\n## +---------------+----------------------------------------------------------+\n##\n## The following software components are included:\n##\n## +-----------------------------------+\n## | Trusted Firmware-A                |\n## | OP-TEE                            |\n## | U-Boot                            |\n## | Linaro/ArmLT Latest Stable Kernel |\n## | OpenEmbedded Minimal              |\n## +-----------------------------------+\n\nRUN bash -c 'echo -e \"2\\n2\\n1\\n1\\n1\\n1\\n2\\n2\\n2\\n1\\n\" | \\\n    python3 arm_platform_setup.py -v'\n\n# Update OP-TEE OS and OP-TEE Client.\nRUN cd optee/optee_os && \\\n    git fetch --all && \\\n    git checkout tags/3.6.0 && \\\n    cd ..\n\nRUN cd optee/optee_client && \\\n    git fetch --all && \\\n    git checkout tags/3.6.0 && \\\n    cd ..\n\nRUN cd arm-tf && \\\n    git fetch --all && \\\n    git checkout tags/v1.5 && \\\n    cd ..\n\n# Patch U-boot so that it mounts /root as read-only. This is useful for\n# avoiding filesystem corruption or side-effects when multiple instances of the\n# fast-model run in parallel. Commas are used as the delimiter character\n# instead of forward-slashes so that the forward-slashes in the strings don't\n# need to be escaped.\nRUN sed -i 's,root=/dev/vda2 rw,root=/dev/vda2 ro,' \\\n    ./u-boot/include/configs/vexpress_aemv8a.h\n\nRUN chmod a+x ./build-scripts/build-all.sh\nRUN ARM_TF_BUILD_FLAGS=FVP_USE_GIC_DRIVER=FVP_GICV3_LEGACY \\\n    ./build-scripts/build-all.sh all\n"
}