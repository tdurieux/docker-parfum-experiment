{
  "startTime": 1674249408552,
  "endTime": 1674249409382,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 51,
        "columnEnd": 264
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 2,
        "columnEnd": 185
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 6,
        "columnEnd": 58
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 26,
        "columnStart": 5,
        "columnEnd": 8
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 26,
        "columnStart": 5,
        "columnEnd": 8
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 52
      }
    }
  ],
  "repairedDockerfile": "ARG DOCKERHUB_MIRROR\nFROM ${DOCKERHUB_MIRROR}/ubuntu:20.04\n\n# Jenkins image build job uses this label to tag version of image\n# Update when you make a change\nLABEL build.environment.version=\"1.0.0\"\n\nRUN useradd -u 1000 -U -m -c Jenkins jenkins\n\nRUN apt update && apt -y upgrade \\\n  && DEBIAN_FRONTEND=noninteractive apt --no-install-recommends install -y \\\n    ca-certificates \\\n    curl \\\n    clang \\\n    g++ \\\n    gcc \\\n    git \\\n    gnupg \\\n    imagemagick \\\n    make \\\n    python3 \\\n    python3-numpy \\\n    python3-pil \\\n    python3-pip \\\n    python3-venv \\\n    software-properties-common \\\n    wget && rm -rf /var/lib/apt/lists/*;\n\n# Install up-to-date CMake, as standard Ubuntu package is too old\nRUN wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null \\\n    | gpg --batch --dearmor - > /etc/apt/trusted.gpg.d/kitware.gpg\nRUN apt-add-repository 'deb https://apt.kitware.com/ubuntu/ focal main'\nRUN apt-get update\nRUN apt-get install --no-install-recommends -y cmake \\\n  && rm -rf /var/lib/apt/lists/*\n\n\n# Install python modules\nRUN pip3 install --no-cache-dir requests\n\n# Install Coverity client\nRUN --mount=type=secret,id=ARTIFACTORY_CREDENTIALS curl -f --user \"$(cat /run/secrets/ARTIFACTORY_CREDENTIALS)\" \"https://eu-west-1.artifactory.aws.arm.com/artifactory/eda-synopsys.coverity/2021.12.1/cov-analysis-linux64-2021.12.1.sh\" --output /tmp/coverity_install.sh && \\\n  curl -f --user \"$(cat /run/secrets/ARTIFACTORY_CREDENTIALS)\" \"https://eu-west-1.artifactory.aws.arm.com/artifactory/eda-synopsys.coverity/2021.12.1/license.dat\" --output /tmp/license.dat && \\\n  chmod 555 /tmp/coverity_install.sh && \\\n  /tmp/coverity_install.sh -q --license.region=6 --license.agreement=agree --license.cov.path=/tmp/license.dat -dir /usr/local/cov-analysis && \\\n  rm /tmp/coverity_install.sh /tmp/license.dat\n"
}