diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/arm-software/tool-solutions/docker/tensorflow-aarch64/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/arm-software/tool-solutions/docker/tensorflow-aarch64/Dockerfile/repaired.Dockerfile
index 6161d72..b168258 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/arm-software/tool-solutions/docker/tensorflow-aarch64/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/arm-software/tool-solutions/docker/tensorflow-aarch64/Dockerfile/repaired.Dockerfile
@@ -31,9 +31,9 @@ RUN if ! [ "$(arch)" = "aarch64" ] ; then exit 1; fi
 
 #Install core OS packages
 RUN apt-get -y update && \
-    apt-get -y install software-properties-common && \
+    apt-get -y --no-install-recommends install software-properties-common && \
     add-apt-repository ppa:ubuntu-toolchain-r/test && \
-    apt-get -y install \
+    apt-get -y --no-install-recommends install \
       accountsservice \
       apport \
       at \
@@ -102,7 +102,7 @@ RUN apt-get -y update && \
       wget \
       xz-utils \
       zip \
-      zlib1g-dev
+      zlib1g-dev && rm -rf /var/lib/apt/lists/*;
 
 
 # Set default gcc, python and pip versions
@@ -230,7 +230,7 @@ RUN $PACKAGE_DIR/build-scipy.sh
 # it is installed as a dependency for an earlier package and needs
 # to be removed in order for the OpenCV build to complete.
 RUN pip uninstall enum34 -y
-RUN HDF5_DIR=/usr/lib/aarch64-linux-gnu/hdf5/serial pip install h5py==3.1.0
+RUN HDF5_DIR=/usr/lib/aarch64-linux-gnu/hdf5/serial pip --no-cache-dir install h5py==3.1.0
 RUN pip install --no-cache-dir grpcio tensorflow-io-gcs-filesystem pytest
 RUN pip install --no-cache-dir ck==1.55.5 absl-py pycocotools pillow==8.2.0
 RUN pip install --no-cache-dir transformers pandas
@@ -283,7 +283,7 @@ ENV PATH="$VIRTUAL_ENV/bin:$PATH"
 
 # Get Bazel binary for AArch64 using the latest Bazelisk release
 RUN mkdir -p $PACKAGE_DIR/bazel
-RUN bazelisk_url=$(curl -L -s https://api.github.com/repos/bazelbuild/bazelisk/releases/latest \
+RUN bazelisk_url=$( curl -f -L -s https://api.github.com/repos/bazelbuild/bazelisk/releases/latest \
     | grep -o -E "https://(.*)bazelisk-linux-arm64") && \
     wget $bazelisk_url -O $PACKAGE_DIR/bazel/bazel
 RUN chmod a+x $PACKAGE_DIR/bazel/bazel
@@ -351,7 +351,7 @@ ENV PATH="$VIRTUAL_ENV/bin:$PATH"
 
 # Get Bazel binary for AArch64 using the latest Bazelisk release
 RUN mkdir -p $PACKAGE_DIR/bazel
-RUN bazelisk_url=$(curl -L -s https://api.github.com/repos/bazelbuild/bazelisk/releases/latest \
+RUN bazelisk_url=$( curl -f -L -s https://api.github.com/repos/bazelbuild/bazelisk/releases/latest \
     | grep -o -E "https://(.*)bazelisk-linux-arm64") && \
     wget $bazelisk_url -O $PACKAGE_DIR/bazel/bazel
 RUN chmod a+x $PACKAGE_DIR/bazel/bazel