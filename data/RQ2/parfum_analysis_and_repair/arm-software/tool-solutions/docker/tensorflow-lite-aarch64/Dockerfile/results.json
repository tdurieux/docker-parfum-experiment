{
  "startTime": 1674252490926,
  "endTime": 1674252492015,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 25,
        "lineEnd": 70,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 119,
        "lineEnd": 119,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 119,
        "lineEnd": 119,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 25,
        "lineEnd": 70,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 119,
        "lineEnd": 119,
        "columnStart": 4,
        "columnEnd": 53
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 119,
        "lineEnd": 119,
        "columnStart": 4,
        "columnEnd": 77
      }
    }
  ],
  "repairedDockerfile": "# *******************************************************************************\n# Copyright 2021-2022 Arm Limited and affiliates.\n# SPDX-License-Identifier: Apache-2.0\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n# *******************************************************************************\n\nFROM ubuntu:20.04\n\nRUN if ! [ \"$(arch)\" = \"aarch64\" ] ; then exit 1; fi\n\n#Install core OS packages\nRUN apt-get -y update && \\\n    apt-get -y --no-install-recommends install software-properties-common && \\\n    add-apt-repository ppa:ubuntu-toolchain-r/test && \\\n    apt-get -y --no-install-recommends install \\\n      autoconf \\\n      bc \\\n      build-essential \\\n      cmake \\\n      curl \\\n      g++-10 \\\n      gcc-10 \\\n      gettext-base \\\n      gfortran-10 \\\n      git \\\n      iputils-ping \\\n      libbz2-dev \\\n      libc++-dev \\\n      libcgal-dev \\\n      libffi-dev \\\n      libfreetype6-dev \\\n      libhdf5-dev \\\n      libjpeg-dev \\\n      liblzma-dev \\\n      libncurses5-dev \\\n      libncursesw5-dev \\\n      libpng-dev \\\n      libreadline-dev \\\n      libssl-dev \\\n      libsqlite3-dev \\\n      libxml2-dev \\\n      libxslt-dev \\\n      locales \\\n      moreutils \\\n      openssl \\\n      python \\\n      python-openssl \\\n      python3 \\\n      python3-pip \\\n      rsync \\\n      scons \\\n      ssh \\\n      sudo \\\n      time \\\n      unzip \\\n      vim \\\n      wget \\\n      xz-utils \\\n      zip \\\n      zlib1g-dev && rm -rf /var/lib/apt/lists/*;\n\n# Make gcc 10 the default\nRUN update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-10 1 \\\n  --slave /usr/bin/g++ g++ /usr/bin/g++-10 && \\\n    update-alternatives --install /usr/bin/gfortran gfortran /usr/bin/gfortran-10 1\n\n# DOCKER_USER for the Docker user\nENV DOCKER_USER=ubuntu\n\n# Setup default user\nRUN useradd --create-home -s /bin/bash -m $DOCKER_USER && \\\n  echo \"$DOCKER_USER:Portland\" | chpasswd && adduser $DOCKER_USER sudo\nRUN echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers\nRUN echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections\n\n# Import profile for bash\nCOPY bash_profile /home/$DOCKER_USER/.bash_profile\nRUN chown $DOCKER_USER:$DOCKER_USER /home/$DOCKER_USER/.bash_profile\nCOPY patches/welcome.txt /home/$DOCKER_USER/.\nRUN echo '[ ! -z \"$TERM\" -a -r /home/$DOCKER_USER/welcome.txt ] && \\\n  cat /home/$DOCKER_USER/welcome.txt' >> /etc/bash.bashrc\n\nENV TF_VERSION=2.8.0\n\n# Package build parameters\nENV PROD_DIR=/opt \\\n    PACKAGE_DIR=/packages\n\n# Make directories to hold package source & build directories (PACKAGE_DIR)\n# and install build directories (PROD_DIR).\nRUN mkdir -p $PACKAGE_DIR && \\\n    mkdir -p $PROD_DIR\n\n# Build tensorflow\nCOPY scripts/build-tensorflow.sh $PACKAGE_DIR/.\nCOPY patches/tflite.patch $PACKAGE_DIR/.\nCOPY scripts/libruy.mri $PACKAGE_DIR/.\nRUN $PACKAGE_DIR/build-tensorflow.sh\n\n# Build Arm Compute Library\nCOPY scripts/build-armcl.sh $PACKAGE_DIR/.\n# This patch adds support for spin wait scheduler to ACL\nCOPY patches/acl.patch $PACKAGE_DIR/.\nRUN $PACKAGE_DIR/build-armcl.sh\n\n# ArmNN library\n# Install development version of Boost\nRUN apt-get update\nRUN apt-get -y --no-install-recommends --fix-missing install libboost-all-dev && rm -rf /var/lib/apt/lists/*;\nCOPY scripts/build-armnn.sh $PACKAGE_DIR/.\nCOPY patches/flatbuffers.patch $PACKAGE_DIR/.\nCOPY patches/armnn.patch $PACKAGE_DIR/.\nRUN $PACKAGE_DIR/build-armnn.sh\n\n# Copy example how to run it\nENV EXAMPLE_DIR=/home/$DOCKER_USER/examples\nRUN mkdir -p $EXAMPLE_DIR\nRUN chown $DOCKER_USER:$DOCKER_USER $EXAMPLE_DIR\nCOPY --chown=$DOCKER_USER:$DOCKER_USER scripts/run_mobilenet.sh $EXAMPLE_DIR/.\nRUN chmod +x $EXAMPLE_DIR/run_mobilenet.sh\nWORKDIR /home/$DOCKER_USER\nUSER $DOCKER_USER\n\nCMD [\"bash\", \"-l\"]\n"
}