{
  "startTime": 1674255701486,
  "endTime": 1674255702279,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 79,
        "lineEnd": 79,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 25,
        "lineEnd": 26,
        "columnStart": 5,
        "columnEnd": 11
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 43,
        "lineEnd": 47,
        "columnStart": 5,
        "columnEnd": 21
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 50,
        "lineEnd": 53,
        "columnStart": 5,
        "columnEnd": 19
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 55,
        "lineEnd": 59,
        "columnStart": 5,
        "columnEnd": 8
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 62,
        "lineEnd": 63,
        "columnStart": 5,
        "columnEnd": 13
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 12,
        "columnStart": 22,
        "columnEnd": 30
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 25,
        "lineEnd": 26,
        "columnStart": 5,
        "columnEnd": 11
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 43,
        "lineEnd": 47,
        "columnStart": 5,
        "columnEnd": 21
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 50,
        "lineEnd": 53,
        "columnStart": 5,
        "columnEnd": 19
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 55,
        "lineEnd": 59,
        "columnStart": 5,
        "columnEnd": 8
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 62,
        "lineEnd": 63,
        "columnStart": 5,
        "columnEnd": 13
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 25,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 11
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 43,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 50,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 19
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 55,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 8
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 62,
        "lineEnd": 63,
        "columnStart": 4,
        "columnEnd": 13
      }
    }
  ],
  "repairedDockerfile": "# student@ubuntu:~/labtainer/trunk/scripts/designer$ cat base_dockerfiles/Dockerfile.labtainer.master\n#\n# Create a master Labtainer image for use in running Labtainers from a container\n# on any system that has Docker installed, withou having to install Labtainers.\n# Thanks for Olivier Berger for this contribution.\n#\nFROM ubuntu:xenial\nLABEL description=\"This is Docker image for the Labtainers master controller\"\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n    apt-transport-https \\\n    ca-certificates \\\n    curl \\\n    software-properties-common && rm -rf /var/lib/apt/lists/*;\n\n#\nARG DOCKER_GROUP_ID\nRUN groupadd -g $DOCKER_GROUP_ID docker\n\n#\nRUN curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add - && \\\n    add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\" && \\\n    apt-get update && \\\n    apt-get install -y --no-install-recommends docker-ce && rm -rf /var/lib/apt/lists/*;\n\n# Set the locale\nRUN apt-get install -y --no-install-recommends \\\n    locales && rm -rf /var/lib/apt/lists/*;\nRUN locale-gen en_US.UTF-8 \nENV LANG en_US.UTF-8 \nENV LANGUAGE en_US:en \nENV LC_ALL en_US.UTF-8 \n# RUN sudo pip install --upgrade pip\n# RUN sudo pip install setuptools\n# RUN sudo pip install parse\n# RUN pip install inotify_simple\n# RUN pip install enum\n# ADD system/etc/sudoers /etc/sudoers\n# ADD system/etc/rc.local /etc/rc.local\n# ADD system/bin/funbuffer /usr/bin/\n# # manage default gateways\n# ADD system/bin/togglegw.sh /usr/bin/\n# ADD system/bin/set_default_gw.sh /usr/bin/\n\nRUN apt-get install -y --no-install-recommends \\\n    sudo \\\n    python \\\n    python-pip \\\n    python-setuptools && rm -rf /var/lib/apt/lists/*;\nRUN pip install --no-cache-dir netaddr parse python-dateutil\n\nRUN apt-get install -y --no-install-recommends \\\n     x11-xserver-utils \\\n     xterm \\\n     gnome-terminal && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get install -y --no-install-recommends \\\n     less \\\n     iputils-ping \\\n     wget \\\n     vim && rm -rf /var/lib/apt/lists/*;\n\n# For gnome-terminal\nRUN apt-get install -y --no-install-recommends \\\n     dbus-x11 && rm -rf /var/lib/apt/lists/*;\n\nRUN useradd -ms /bin/bash labtainer\nRUN usermod -aG docker labtainer\nRUN newgrp docker\n\n#ensures that /var/run/docker.sock exists\nRUN touch /var/run/docker.sock\n\n#changes the ownership of /var/run/docker.sock\nRUN chown root:docker /var/run/docker.sock\n\nUSER labtainer\nWORKDIR /home/labtainer\n\nCOPY --chown=labtainer:labtainer labtainer.tar /home/labtainer\nRUN tar xf labtainer.tar && rm labtainer.tar\nRUN rm labtainer.tar\nRUN cd labtainer && ln -s trunk/scripts/labtainer-student\nRUN cd labtainer && ln -s trunk/scripts/labtainer-instructor\n\nCOPY --chown=labtainer:labtainer bashrc.labtainer.master /home/labtainer\nRUN cat bashrc.labtainer.master >>/home/labtainer/.bashrc\n\nCOPY --chown=labtainer:labtainer labutils.py /home/labtainer/labtainer/labtainer-student/bin/\nENV DISPLAY :0\nENV NO_AT_BRIDGE=1\nENV VNCHOST=novnc\n\nCOPY  --chown=labtainer:labtainer ./motd /etc/motd\nCOPY  --chown=labtainer:labtainer ./docker-entrypoint /\nCOPY  --chown=labtainer:labtainer ./wait-for-it.sh /\n\nRUN chmod 744 /docker-entrypoint\nRUN chmod 744 /wait-for-it.sh\n"
}