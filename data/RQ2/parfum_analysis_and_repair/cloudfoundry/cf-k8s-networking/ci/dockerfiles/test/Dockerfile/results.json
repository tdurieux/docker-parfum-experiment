{
  "startTime": 1674256193800,
  "endTime": 1674256194940,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 83
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 9,
        "columnEnd": 42
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 33,
        "columnStart": 6,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 25,
        "columnEnd": 51
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 33,
        "columnStart": 6,
        "columnEnd": 22
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 25,
        "columnEnd": 51
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM cloudfoundry/cflinuxfs3\n\nENV GO_VERSION 1.13.1\n\nRUN \\\n      apt update && \\\n      apt -y --no-install-recommends install --fix-missing \\\n            build-essential \\\n            curl \\\n            docker \\\n            git \\\n            netcat-openbsd \\\n            htop \\\n            libpython-dev \\\n            lsof \\\n            psmisc \\\n            python \\\n            strace \\\n            libreadline6-dev \\\n            lsb-core \\\n            wget \\\n            unzip \\\n            libfontconfig1-dev libfreetype6 libssl-dev libpng-dev libjpeg-dev \\\n            jq \\\n            libssl-dev \\\n            libssl1.0.0 \\\n            libxml2-dev \\\n            libxslt-dev \\\n            libyaml-dev \\\n            openssl \\\n            vim \\\n            zip \\\n            python-pip \\\n            zlib1g-dev \\\n      && \\\n      apt clean && rm -rf /var/lib/apt/lists/*;\n\n# Temp fix to get around apt-key issues with canonical\nRUN chmod 1777 /tmp\n\n# https://kubernetes.io/docs/tasks/tools/install-kubectl/\nRUN echo \"deb https://apt.kubernetes.io/ kubernetes-xenial main\" | tee -a /etc/apt/sources.list.d/kubernetes.list && \\\n    curl -f -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add - && \\\n    apt-get update -y && apt-get install --no-install-recommends kubectl -y && rm -rf /var/lib/apt/lists/*;\n\n# Install go\nRUN curl -f \"https://storage.googleapis.com/golang/go${GO_VERSION}.linux-amd64.tar.gz\" | tar xvz -C /usr/local/\n\n# Add golang environment variables\nENV HOME /root\nENV GOPATH /root/go\nENV PATH \"${PATH}:/usr/local/go/bin:/root/bin:${GOPATH}/bin\"\n\n# Install ginkgo\nRUN go get github.com/onsi/ginkgo/ginkgo\n\n# Install controller-gen for integration tests\nRUN\tmkdir -p /tmp/controller-gen && \\\n    cd /tmp/controller-gen && \\\n    go mod init tmp && \\\n    go get sigs.k8s.io/controller-tools/cmd/controller-gen@v0.2.4 && \\\n    rm -rf /tmp/controller-gen\n\n# Install docker\nRUN sudo curl -f -sSL https://get.docker.com/ | sh\n\n# Install k14s\nRUN curl -f -L https://k14s.io/install.sh | bash\n"
}