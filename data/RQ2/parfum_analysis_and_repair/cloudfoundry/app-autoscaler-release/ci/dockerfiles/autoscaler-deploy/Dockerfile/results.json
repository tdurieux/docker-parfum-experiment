{
  "startTime": 1674251104291,
  "endTime": 1674251105421,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 79,
        "lineEnd": 79,
        "columnStart": 2,
        "columnEnd": 60
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 2,
        "columnEnd": 47
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 69
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 81,
        "lineEnd": 81,
        "columnStart": 2,
        "columnEnd": 37
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 69
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 81,
        "lineEnd": 81,
        "columnStart": 2,
        "columnEnd": 37
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM mikefarah/yq:4.25.3 AS yq\n\nFROM ubuntu:22.04\nMAINTAINER autoscaler-team\n\nRUN apt-get update && \\\n    apt-get -qqy --no-install-recommends install --fix-missing gnupg apt-transport-https wget && \\\n    apt-get clean && rm -rf /var/lib/apt/lists/*;\n\nRUN wget -q -O - https://packages.cloudfoundry.org/debian/cli.cloudfoundry.org.key | apt-key add - && \\\n      echo \"deb https://packages.cloudfoundry.org/debian stable main\" | tee /etc/apt/sources.list.d/cloudfoundry-cli.list && \\\n      wget -q -O - https://cli.github.com/packages/githubcli-archive-keyring.gpg | dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg && \\\n      echo \"deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main\" | tee /etc/apt/sources.list.d/github-cli.list > /dev/null\n\nRUN apt-get update && \\\n    apt-get -qqy --no-install-recommends install --fix-missing \\\n            build-essential \\\n            inetutils-ping \\\n            vim \\\n            curl \\\n            libcurl4-openssl-dev \\\n            git \\\n            wget \\\n            runit \\\n            openssl \\\n            unzip \\\n            zip \\\n            ruby \\\n            ruby-dev \\\n            python3 \\\n            ca-certificates \\\n            cf8-cli \\\n            gh && \\\n    apt-get clean && rm -rf /var/lib/apt/lists/*;\n\n# Install go\nENV GO_VERSION 1.18\nRUN wget -q https://dl.google.com/go/go${GO_VERSION}.linux-amd64.tar.gz && \\\n  tar -C /usr/local -xzf go${GO_VERSION}.linux-amd64.tar.gz && \\\n  rm -rf go${GO_VERSION}.linux-amd64.tar.gz && \\\n  mkdir -p /go/bin\n\n# set GOPATH\nENV GOPATH /go\n# add go and GOPATH/bin to PATH\nENV PATH $PATH:$GOPATH/bin:/usr/local/go/bin\n\n# Install bosh_cli\nENV BOSH_VERSION 6.4.4\nRUN wget -q https://github.com/cloudfoundry/bosh-cli/releases/download/v${BOSH_VERSION}/bosh-cli-${BOSH_VERSION}-linux-amd64 && \\\n  mv bosh-cli-* /usr/local/bin/bosh && \\\n  chmod +x /usr/local/bin/bosh\n\n# Install bbl\nENV BBL_VERSION 8.4.44\nRUN wget -q https://github.com/cloudfoundry/bosh-bootloader/releases/download/v${BBL_VERSION}/bbl-v${BBL_VERSION}_linux_x86-64 && \\\n  mv bbl-* /usr/local/bin/bbl && \\\n  chmod +x /usr/local/bin/bbl\n\n# Install credhub\nENV CREDHUB_VERSION 2.9.0\nRUN wget -q https://github.com/cloudfoundry-incubator/credhub-cli/releases/download/${CREDHUB_VERSION}/credhub-linux-${CREDHUB_VERSION}.tgz && \\\n  tar xvfz credhub-linux-${CREDHUB_VERSION}.tgz && \\\n  mv credhub /usr/local/bin/credhub && rm credhub-linux-${CREDHUB_VERSION}.tgz\n\n# Install uaac\nRUN gem install cf-uaac\n\n# Install jq as a nice to have on container debugging\nENV JQ_VERSION 1.6\nRUN wget -q https://github.com/stedolan/jq/releases/download/jq-${JQ_VERSION}/jq-linux64 && \\\n    mv jq-linux64 /usr/local/bin/jq && \\\n    chmod +x /usr/local/bin/jq\n\n# Install yq\nCOPY --from=yq /usr/bin/yq /usr/local/bin/yq\n\n# Install gcloud\nRUN echo \"deb [signed-by=/usr/share/keyrings/cloud.google.gpg] http://packages.cloud.google.com/apt cloud-sdk main\" | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list && \\\n  curl -f https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key --keyring /usr/share/keyrings/cloud.google.gpg  add - && \\\n  apt-get update -y && \\\n  apt-get install --no-install-recommends google-cloud-sdk -y && \\\n  apt-get clean && \\\n  gcloud version && rm -rf /var/lib/apt/lists/*;\n\nARG GINKGO_VERSION=v2.1.3\nRUN go install github.com/onsi/ginkgo/v2/ginkgo@${GINKGO_VERSION} &&\\\n    ginkgo version"
}