{
  "startTime": 1674255730409,
  "endTime": 1674255732214,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 7,
        "columnEnd": 225
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 7,
        "columnEnd": 54
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 37,
        "columnEnd": 163
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 128,
        "lineEnd": 128,
        "columnStart": 7,
        "columnEnd": 75
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:18.04\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n    curl jq git lsb-release unzip vim sudo \\\n    apt-transport-https apt-utils ca-certificates gnupg \\\n    && apt-get autoremove -yqq && apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n    # unzip used once\n\nENV DEBIAN_FRONTEND=noninteractive\nENV APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=true\n\n# JAVA\nENV JAVA_HOME /usr/lib/jvm/java-bellsoft-amd64\nENV PATH \"${JAVA_HOME}/bin:${PATH}\"\nRUN JAVA_MAJOR_VERSION=\"11\" \\\n    && JDK_METADATA=\"jdk-metadata.json\" \\\n    && curl -f -sLo \"${JDK_METADATA}\" \"https://api.bell-sw.com/v1/liberica/releases?version-modifier=latest&os=linux&release-type=lts&bitness=64&package-type=tar.gz&bundle-type=jdk&arch=x86&version-feature=${JAVA_MAJOR_VERSION}\" \\\n    && JDK_VERSION=\"$(jq -r \".[] | select(.featureVersion | contains(\"${JAVA_MAJOR_VERSION}\")).version\" \"${JDK_METADATA}\")\" \\\n    && JDK_ARCHIVE_URL=\"$(jq -r \".[] | select(.featureVersion | contains(\"${JAVA_MAJOR_VERSION}\")).downloadUrl\" \"${JDK_METADATA}\")\" \\\n    && JDK_ARCHIVE=\"$(basename \"${JDK_ARCHIVE_URL}\")\" \\\n    && curl -f -sLo \"${JDK_ARCHIVE}\" \"${JDK_ARCHIVE_URL}\" \\\n    && mkdir -p \"${JAVA_HOME}\" \\\n    && tar -xf \"${JDK_ARCHIVE}\" -C \"${JAVA_HOME}\" --strip-components=1 \\\n    && rm -rf \"${JDK_ARCHIVE}\" \"${JDK_METADATA}\" \\\n    && \"${JAVA_HOME}\"/bin/java -version\n#/JAVA\n\n# CHROME; see https://github.com/justinribeiro/dockerfiles/blob/c87217ebfeced3f0088f6559b799ed85f495ddff/chrome-headless/Dockerfile#L31-L51\nRUN curl -f -sSL https://dl.google.com/linux/linux_signing_key.pub | apt-key add - \\\n\t&& echo \"deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main\" > /etc/apt/sources.list.d/google-chrome.list \\\n\t&& apt-get update \\\n\t&& apt-get install -y --no-install-recommends \\\n\tgoogle-chrome-stable \\\n\tfontconfig \\\n\tfonts-ipafont-gothic \\\n\tfonts-wqy-zenhei \\\n\tfonts-thai-tlwg \\\n\tfonts-kacst \\\n\tfonts-symbola \\\n\tfonts-noto \\\n    libgconf-2-4 \\\n    libxss1 \\\n    libasound2 \\\n    libnss3-tools \\\n    && apt-get install -y --no-install-recommends libosmesa6 \\\n        && ln -s /usr/lib/x86_64-linux-gnu/libOSMesa.so.8 \\\n                 /opt/google/chrome/libosmesa.so \\\n    && apt-get install -y --no-install-recommends libatk-bridge2.0-0 \\\n        && ln -s /usr/lib/x86_64-linux-gnu/libatk-bridge-2.0.so.0 \\\n                 /opt/google/chrome/ \\\n    && apt-get install -y --no-install-recommends libgtk-3-0 \\\n        && ln -s /usr/lib/x86_64-linux-gnu/libgtk-3.so.0 \\\n                 /opt/google/chrome/ \\\n    && apt-get install -y --no-install-recommends libgdk3.0-cil \\\n        && ln -s /usr/lib/x86_64-linux-gnu/libgdk-3.so.0 \\\n                 /opt/google/chrome/ \\\n    && export CHROMEDRIVER_VERSION=$( curl -f -sS chromedriver.storage.googleapis.com/LATEST_RELEASE_$(google-chrome --version | cut -f 3 -d ' ' | cut -f 1,2,3 -d '.')) \\\n    && curl -sfLO https://chromedriver.storage.googleapis.com/${CHROMEDRIVER_VERSION}/chromedriver_linux64.zip \\\n    && unzip chromedriver_linux64.zip -d /usr/bin/ \\\n    && rm chromedriver_linux64.zip \\\n    && ln -s /usr/bin/chromedriver /usr/local/bin/ \\\n    && apt-get autoremove -yqq && apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n    # ^ TODO: WHY IS THE BINARY NEEDED IN TWO PLACES?\n#/CHROME\n\n# LDAP; see https://help.ubuntu.com/lts/serverguide/openldap-server.html\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n    gnutls-bin slapd ldap-utils ssl-cert \\\n    && apt-get autoremove -yqq && apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \\\n    && certtool --generate-privkey > /etc/ssl/private/cakey.pem \\\n    && echo \"cn = Pivotal Software Test\"    >> /etc/ssl/ca.info \\\n    && echo \"  ca\"                          >> /etc/ssl/ca.info \\\n    && echo \"  cert_signing_key\"            >> /etc/ssl/ca.info \\\n    && certtool --generate-self-signed --load-privkey /etc/ssl/private/cakey.pem --template /etc/ssl/ca.info --outfile /etc/ssl/certs/cacert.pem \\\n    && certtool --generate-privkey --bits 1024 --outfile /etc/ssl/private/ldap01_slapd_key.pem \\\n    && echo \"organization = Pivotal Software Test\"  >> /etc/ssl/ldap01.info \\\n    && echo \"    cn = ldap01.example.com\"           >> /etc/ssl/ldap01.info \\\n    && echo \"    tls_www_server\"                    >> /etc/ssl/ldap01.info \\\n    && echo \"    encryption_key\"                    >> /etc/ssl/ldap01.info \\\n    && echo \"    signing_key\"                       >> /etc/ssl/ldap01.info \\\n    && echo \"    expiration_days = 3650\"            >> /etc/ssl/ldap01.info \\\n    && certtool --generate-certificate --load-privkey /etc/ssl/private/ldap01_slapd_key.pem --load-ca-certificate /etc/ssl/certs/cacert.pem --load-ca-privkey /etc/ssl/private/cakey.pem --template /etc/ssl/ldap01.info --outfile /etc/ssl/certs/ldap01_slapd_cert.pem \\\n    && adduser openldap ssl-cert \\\n    && chgrp ssl-cert /etc/ssl/private/ldap01_slapd_key.pem \\\n    && chmod 0640 /etc/ssl/private/ldap01_slapd_key.pem \\\n    && echo \"dn: cn=config\"                                                     >> /etc/ssl/certinfo.ldif \\\n    && echo \"changetype: modify\"                                                >> /etc/ssl/certinfo.ldif \\\n    && echo \"add: olcTLSCACertificateFile\"                                      >> /etc/ssl/certinfo.ldif \\\n    && echo \"olcTLSCACertificateFile: /etc/ssl/certs/cacert.pem\"                >> /etc/ssl/certinfo.ldif \\\n    && echo \"-\"                                                                 >> /etc/ssl/certinfo.ldif \\\n    && echo \"add: olcTLSCertificateFile\"                                        >> /etc/ssl/certinfo.ldif \\\n    && echo \"olcTLSCertificateFile: /etc/ssl/certs/ldap01_slapd_cert.pem\"       >> /etc/ssl/certinfo.ldif \\\n    && echo \"-\"                                                                 >> /etc/ssl/certinfo.ldif \\\n    && echo \"add: olcTLSCertificateKeyFile\"                                     >> /etc/ssl/certinfo.ldif \\\n    && echo \"olcTLSCertificateKeyFile: /etc/ssl/private/ldap01_slapd_key.pem\"   >> /etc/ssl/certinfo.ldif \\\n    && service slapd start \\\n    && ldapmodify -Y EXTERNAL -H ldapi:/// -f /etc/ssl/certinfo.ldif \\\n    && sed -i \"s/^SLAPD_SERVICES.*/SLAPD_SERVICES=\\\"ldap\\:\\/\\/\\/ ldapi\\:\\/\\/\\/ ldaps\\:\\/\\/\\/\\\"/g\" /etc/default/slapd \\\n    && echo \"#!/usr/bin/env bash\"                                               >> /bin/start-slapd \\\n    && echo \"set -eu -o pipefail\"                                               >> /bin/start-slapd \\\n    && echo \"echo '# docker build will not persist /etc/hosts'  >> /etc/hosts\"  >> /bin/start-slapd \\\n    && echo \"echo '# ------------- UAA DNS ------------- #'     >> /etc/hosts\"  >> /bin/start-slapd \\\n    && echo \"echo '127.0.0.1 oidcloginit.localhost'             >> /etc/hosts\"  >> /bin/start-slapd \\\n    && echo \"echo '127.0.0.1 testzone1.localhost'               >> /etc/hosts\"  >> /bin/start-slapd \\\n    && echo \"echo '127.0.0.1 testzone2.localhost'               >> /etc/hosts\"  >> /bin/start-slapd \\\n    && echo \"echo '127.0.0.1 testzone3.localhost'               >> /etc/hosts\"  >> /bin/start-slapd \\\n    && echo \"echo '127.0.0.1 testzone4.localhost'               >> /etc/hosts\"  >> /bin/start-slapd \\\n    && echo \"echo '127.0.0.1 testzoneinactive.localhost'        >> /etc/hosts\"  >> /bin/start-slapd \\\n    && echo \"echo '127.0.0.1 testzonedoesnotexist.localhost'    >> /etc/hosts\"  >> /bin/start-slapd \\\n    && echo \"echo '# ------------- UAA DNS ------------- #'     >> /etc/hosts\"  >> /bin/start-slapd \\\n    && echo \"pgrep slapd || service slapd start\"                                >> /bin/start-slapd \\\n    && chmod 0755 /bin/start-slapd\n#/LDAP\n\n# DATABASES\n# DATABASES-POSTGRESQL\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n    postgresql postgresql-contrib \\\n    && apt-get autoremove -yqq && apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \\\n    && echo \"#!/usr/bin/env bash\"                                               >> /bin/start-postgresql \\\n    && echo \"set -eu -o pipefail\"                                               >> /bin/start-postgresql \\\n    && echo \"service postgresql start\"                                          >> /bin/start-postgresql \\\n    && echo \"while ! sudo -u postgres psql -c 'select 1'; do sleep 1; done;\"    >> /bin/start-postgresql \\\n    && chmod 0755 /bin/start-postgresql\n#/DATABASES-POSTGRESQL\n\n# DATABASES-MYSQL-OR-PERCONA\nRUN export PERCONA_DEB=\"percona-release_latest.$(lsb_release -sc)_all.deb\" \\\n    && curl -f -sLo ${PERCONA_DEB} https://repo.percona.com/apt/${PERCONA_DEB} \\\n    && dpkg -i ${PERCONA_DEB} && rm ${PERCONA_DEB} \\\n    && apt-get update && apt-get install -y --no-install-recommends \\\n# MYSQL - collides with PERCONA\n    mysql-server \\\n# MYSQL - collides with PERCONA\n# PERCONA - collides with MYSQL\n#    percona-server-server-5.7 mysql-client \\\n#/PERCONA - collides with MYSQL\n    && apt-get autoremove -yqq && apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \\\n    && sudo mysql_ssl_rsa_setup --uid=mysql \\\n    && echo \"#!/usr/bin/env bash\"                                                   >> /bin/start-mysql \\\n    && echo \"set -eu -o pipefail\"                                                   >> /bin/start-mysql \\\n    && echo \"find /var/lib/mysql -type f -exec touch {} \\; && service mysql start\"  >> /bin/start-mysql \\\n    && echo \"while ! mysql -e 'select 1'; do sleep 1; done;\"                        >> /bin/start-mysql \\\n    && chmod 0755 /bin/start-mysql\n# DATABASES-MYSQL-OR-PERCONA\n#/DATABASES\n\n# PROJECT_SETUP\nENV DB_NAME=uaa\nENV DB_USER=root\nENV DB_PASS=changeme\nENV NUM_DBS=24\n\nRUN /bin/start-mysql \\\n    && echo \"[mysql]\"               >> \"${HOME}/.my.cnf\" \\\n    && echo \"password=${DB_PASS}\"   >> \"${HOME}/.my.cnf\" \\\n    && mysql -e \"ALTER USER '${DB_USER}'@'localhost' IDENTIFIED WITH mysql_native_password BY '${DB_PASS}';\" \\\n    # -----------^ change root from `auth_socket` to `mysql_native_password` so that `-h 127.0.0.1` works\n    && mysql -e \"CREATE DATABASE ${DB_NAME} DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci;\" \\\n    && for i in $(seq 1 ${NUM_DBS}); do mysql -e \"CREATE DATABASE ${DB_NAME}_${i} DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci;\" ; done\n\nRUN /bin/start-postgresql \\\n    && sudo -u postgres psql -c \"CREATE USER ${DB_USER} WITH SUPERUSER PASSWORD '${DB_PASS}';\" \\\n    && sudo -u postgres createdb \"${DB_USER}\" \\\n    && sudo -u postgres createdb \"${DB_NAME}\" \\\n    && for i in $(seq 1 ${NUM_DBS}); do sudo -u postgres createdb \"${DB_NAME}_${i}\" ; done\n\nCOPY ldap_db_init.ldif copy_of-uaa_src_main_resources_ldap_init.ldif /ldap/\nRUN /bin/start-slapd \\\n    && ldapadd -Y EXTERNAL -H ldapi:/// -f /ldap/ldap_db_init.ldif \\\n    && ldapadd -x -D 'cn=admin,dc=test,dc=com' -w password -f /ldap/copy_of-uaa_src_main_resources_ldap_init.ldif \\\n    && rm -rf /ldap/\n#/PROJECT_SETUP\n"
}