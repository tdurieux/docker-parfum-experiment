{
  "startTime": 1674250566292,
  "endTime": 1674250567180,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 104
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 23,
        "columnEnd": 105
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 159
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 18,
        "columnEnd": 89
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 137
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 34,
        "columnEnd": 49
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 25,
        "columnEnd": 51
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 25,
        "columnEnd": 51
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 5,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 11
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 19
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 22
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM google/cloud-sdk:alpine\n\nUSER root\n\nRUN apk update\nRUN apk add --no-cache \\\n    build-base \\\n    jq \\\n    postgresql-client \\\n    py3-pip\n\nRUN pip3 install --no-cache-dir --upgrade pip && pip3 install --no-cache-dir yq\n\nRUN apk add --no-cache openssl && \\\n    curl -f --retry 3 --retry-delay 3 https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash\n\nRUN apk add --no-cache perl-utils && \\\n    wget --tries=3 -O- https://carvel.dev/install.sh | bash\n\n# https://kubernetes.io/docs/tasks/tools/install-kubectl/\nRUN echo \"deb https://apt.kubernetes.io/ kubernetes-xenial main\" | tee -a /etc/apt/sources.list.d/kubernetes.list && \\\n    curl -f -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add - && \\\n    apt-get update -y && apt-get install --no-install-recommends kubectl -y && rm -rf /var/lib/apt/lists/*;\n\nRUN bosh_cli_version=$( curl -f --silent \"https://api.github.com/repos/cloudfoundry/bosh-cli/releases/latest\" | jq -r '.tag_name' | tr -d 'v') && \\\n    echo \"Installing bosh_cli version ${bosh_cli_version}...\" && \\\n    curl -f -LO --retry 3 --retry-delay 3 https://github.com/cloudfoundry/bosh-cli/releases/download/v${bosh_cli_version}/bosh-cli-${bosh_cli_version}-linux-amd64 && \\\n    chmod +x ./bosh-cli-${bosh_cli_version}-linux-amd64 && \\\n    mv ./bosh-cli-${bosh_cli_version}-linux-amd64 /usr/local/bin/bosh\n\nRUN wget --tries=3 https://github.com/instrumenta/kubeval/releases/latest/download/kubeval-linux-amd64.tar.gz && \\\n    tar xf kubeval-linux-amd64.tar.gz && \\\n    chmod +x ./kubeval && \\\n    mv kubeval /usr/local/bin && rm kubeval-linux-amd64.tar.gz\n\n# For gcloud beta compute ssh/scp\nRUN gcloud components install beta -q\n\n# Installing hub (for creating PRs from concourse)\nRUN hub_version=$( curl -f --silent \"https://api.github.com/repos/github/hub/releases/latest\" | jq -r '.tag_name' | tr -d 'v') && \\\n    echo \"Installing hub version ${hub_version}...\" && \\\n    curl -f -LO --retry 3 --retry-delay 3 https://github.com/github/hub/releases/download/v${hub_version}/hub-linux-amd64-${hub_version}.tgz && \\\n    tar xfz hub-linux-amd64-${hub_version}.tgz && \\\n    chmod +x ./hub-linux-amd64-${hub_version}/bin/hub && \\\n    mv ./hub-linux-amd64-${hub_version}/bin/hub /usr/local/bin/hub && rm hub-linux-amd64-${hub_version}.tgz\n\n# ginkgo\nRUN export GO_TAR=go1.17.8.linux-amd64.tar.gz && \\\n    wget --tries=3 https://dl.google.com/go/${GO_TAR} && \\\n    tar -C /usr/local -xzf ${GO_TAR}\n\nENV CGO_ENABLED=1\n\nENV GOPATH /go\nENV PATH=$PATH:/go/bin:/usr/local/go/bin\n\nRUN go install github.com/cloudfoundry/uptimer@latest\n\n# https://github.com/onsi/ginkgo/releases\nRUN go install github.com/onsi/ginkgo/ginkgo@latest\n\n# https://github.com/cloudfoundry/cli/releases\nWORKDIR /tmp\nRUN wget --tries=3 -O cf.tgz \"https://packages.cloudfoundry.org/stable?release=linux64-binary&version=v7&source=github\" && \\\n    tar xzvf cf.tgz -C /usr/local/bin && \\\n    chmod +x /usr/local/bin/cf && \\\n    /usr/local/bin/cf --version && rm cf.tgz\n\nRUN rm -rf /tmp/*\n"
}