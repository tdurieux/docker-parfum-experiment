{
  "startTime": 1674253671857,
  "endTime": 1674253672804,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 2,
        "columnEnd": 60
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 206
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 68,
        "columnEnd": 135
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 127
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 4,
        "columnEnd": 84
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 27,
        "columnEnd": 92
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 86,
        "lineEnd": 86,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 89,
        "lineEnd": 89,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 90,
        "lineEnd": 90,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 27,
        "columnStart": 6,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 2,
        "columnEnd": 39
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 27,
        "columnStart": 6,
        "columnEnd": 26
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 2,
        "columnEnd": 39
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM golang:1.13\nMAINTAINER https://github.com/cloudfoundry/bosh-bootloader\n\nARG GITHUB_TOKEN\nENV TERRAFORM_VERSION 0.15.3\nENV RUBY_VERSION 3.0.1\n\n# Create testuser\nRUN mkdir -p /home/testuser && \\\n\tgroupadd -r testuser -g 433 && \\\n\tuseradd -u 431 -r -g testuser -d /home/testuser -s /usr/sbin/nologin -c \"Docker image test user\" testuser && \\\n  chown testuser:testuser /home/testuser\n\nRUN \\\n      apt-get update && \\\n      apt-get -qqy --no-install-recommends install --fix-missing \\\n            runit \\\n            apt-transport-https \\\n            openssl \\\n            silversearcher-ag \\\n            unzip \\\n            tree \\\n            host \\\n            python3 \\\n            libpython-dev \\\n            python3-distutils \\\n            ruby \\\n            netcat-openbsd \\\n      && \\\n      apt-get clean && rm -rf /var/lib/apt/lists/*;\n\n# Install bundler\nRUN gem install bundler --no-rdoc --no-ri\n\n# Install bosh_cli v1\nRUN gem install bosh_cli --no-rdoc --no-ri\n\n# Install terraform\nRUN wget https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip && \\\n  unzip terraform_${TERRAFORM_VERSION}_linux_amd64.zip && \\\n  rm terraform_${TERRAFORM_VERSION}_linux_amd64.zip && \\\n  mv terraform /usr/local/bin/terraform\n\n# Install gcloud\nRUN echo \"deb https://packages.cloud.google.com/apt cloud-sdk-trusty main\" > /etc/apt/sources.list.d/google-cloud-sdk.list && \\\n  curl -f https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add - && \\\n  apt-get update && \\\n  apt-get -qqy --no-install-recommends install google-cloud-sdk && rm -rf /var/lib/apt/lists/*;\n\n# Install jq\nRUN wget https://github.com/stedolan/jq/releases/download/jq-1.5/jq-linux64 && \\\n  mv jq-linux64 /usr/local/bin/jq && \\\n  chmod +x /usr/local/bin/jq\n\n# Install bosh_cli v2\nRUN curl -f -L \"https://s3.amazonaws.com/bosh-cli-artifacts/bosh-cli-$( curl -f -s https://api.github.com/repos/cloudfoundry/bosh-cli/releases | jq -r '.[0].name' | tr -d 'v')-linux-amd64\" -o \"/usr/local/bin/bosh\" && \\\n  chmod +x \"/usr/local/bin/bosh\"\n\n# Install bbl\nRUN curl -f -H \"Authorization: token ${GITHUB_TOKEN}\" -s https://api.github.com/repos/cloudfoundry/bosh-bootloader/releases/latest | \\\n  jq -r '.assets[] | .browser_download_url | select(contains(\"linux\"))' | \\\n  xargs wget && \\\n  mv bbl-* /usr/local/bin/bbl && \\\n  chmod +x /usr/local/bin/bbl\n\n# Install spiff\nRUN wget https://github.com/cloudfoundry-incubator/spiff/releases/download/v1.0.7/spiff_linux_amd64 && \\\n  mv spiff_linux_amd64 /usr/local/bin/spiff && \\\n  chmod +x /usr/local/bin/spiff\n\nRUN curl -f -L \"https://cli.run.pivotal.io/stable?release=linux64-binary&source=github\" | tar -zx && \\\n  chmod +x cf && \\\n  mv cf /usr/local/bin/cf\n\n# Install Credhub\nRUN CREDHUB_CLI_REPO=\"cloudfoundry-incubator/credhub-cli\" && \\\n    CREDHUB_CLI_VERSION=\"$( curl -f -s https://api.github.com/repos/${CREDHUB_CLI_REPO}/releases | jq -r '.[0].name' | tr -d 'v')\" && \\\n    wget -c \"https://github.com/${CREDHUB_CLI_REPO}/releases/download/${CREDHUB_CLI_VERSION}/credhub-linux-${CREDHUB_CLI_VERSION}.tgz\" -O - | tar -zx && \\\n    mv credhub /usr/local/bin/credhub && \\\n    chmod +x /usr/local/bin/credhub\n\nRUN go get -u github.com/pivotal-cf/texplate\n\nRUN go get -u github.com/jteeuwen/go-bindata/...\n\n# Install pip\nRUN curl -f https://bootstrap.pypa.io/get-pip.py | python3\n\n# Install yq\nRUN pip install --no-cache-dir yq\nRUN pip install --no-cache-dir -U awscli\n\n# Install ginkgo\nRUN go get -u github.com/onsi/ginkgo/ginkgo\n\n# Install packr2\nRUN go get -u github.com/gobuffalo/packr/v2/packr2\n\nRUN chown -R testuser:testuser /usr/local/go/pkg\nRUN chown -R testuser:testuser /go"
}