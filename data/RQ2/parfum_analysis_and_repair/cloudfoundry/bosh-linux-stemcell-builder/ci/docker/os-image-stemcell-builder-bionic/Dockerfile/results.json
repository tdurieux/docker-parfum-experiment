{
  "startTime": 1674217774576,
  "endTime": 1674217775384,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 23,
        "columnStart": 5,
        "columnEnd": 8
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 23,
        "columnStart": 5,
        "columnEnd": 8
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 46
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 70
      }
    }
  ],
  "repairedDockerfile": "# bosh/os-image-stemcell-builder\nFROM ubuntu:bionic\n\nARG USER_ID=1000\nARG GROUP_ID=1000\n\nRUN apt-get update \\\n  && apt-get -y upgrade \\\n  && apt-get clean \\\n  && apt-get install --no-install-recommends -y \\\n    build-essential \\\n    curl \\\n    dnsutils \\\n    git \\\n    jq \\\n    libreadline-dev \\\n    libssl-dev \\\n    rsync \\\n    tar \\\n    wget \\\n    xvfb \\\n    locales \\\n    sudo \\\n    lsof \\\n  && apt-get clean && rm -rf /var/lib/apt/lists/*;\n\nRUN groupadd -o -g ${GROUP_ID} ubuntu                  \\\n  && useradd -u ${USER_ID} -g ${GROUP_ID} -m ubuntu \\\n  && echo 'ubuntu ALL=NOPASSWD:ALL' >> /etc/sudoers\n\n# Nokogiri dependencies\nRUN apt-get install --no-install-recommends -y libxslt-dev libxml2-dev && apt-get clean && rm -rf /var/lib/apt/lists/*;\n\nADD install-ruby.sh /tmp/install-ruby.sh\nRUN chmod a+x /tmp/install-ruby.sh\nRUN cd /tmp && ./install-ruby.sh && rm install-ruby.sh\n\nCOPY --from=golang:1 /usr/local/go /usr/local/go\nENV GOROOT=/usr/local/go PATH=/usr/local/go/bin:$PATH\n\nADD scripts/update.sh /tmp/update.sh\nRUN /tmp/update.sh && rm /tmp/update.sh\n\nENV OVF_TOOL_INSTALLER VMware-ovftool-4.1.0-2459827-lin.x86_64.bundle\nENV OVF_TOOL_INSTALLER_SHA1 b907275c8d744bb54717d24bb8d414b19684fed4\nADD ${OVF_TOOL_INSTALLER} /tmp/ovftool_installer.bundle\nADD scripts/install-ovf.sh /tmp/install-ovf.sh\nRUN /tmp/install-ovf.sh && rm /tmp/install-ovf.sh\n\nRUN wget -O /usr/bin/meta4 https://github.com/dpb587/metalink/releases/download/v0.2.0/meta4-0.2.0-linux-amd64 \\\n  && echo \"81a592eaf647358563f296aced845ac60d9061a45b30b852d1c3f3674720fe19  /usr/bin/meta4\" | shasum -a 256 -c \\\n  && chmod +x /usr/bin/meta4\n\n# this is unshare from ubuntu 15.10 so we can use the newer -fp flags\nADD scripts/unshare /usr/bin/unshare\n\nRUN for GO_EXECUTABLE in $GOROOT/bin/*; do ln -s $GO_EXECUTABLE /usr/bin/; done\n\n# Source: https://stackoverflow.com/questions/28247427/strange-locale-issue-on-arch\nRUN locale-gen && sed -i '1 i\\en_US.UTF-8 UTF-8' /etc/locale.gen && locale-gen\n\nENV LANG en_US.UTF-8\nENV LC_ALL en_US.UTF-8\n"
}