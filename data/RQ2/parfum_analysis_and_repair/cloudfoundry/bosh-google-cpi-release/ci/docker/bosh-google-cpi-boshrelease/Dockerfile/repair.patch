diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/cloudfoundry/bosh-google-cpi-release/ci/docker/bosh-google-cpi-boshrelease/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/cloudfoundry/bosh-google-cpi-release/ci/docker/bosh-google-cpi-boshrelease/Dockerfile/repaired.Dockerfile
index f41d2e5..21abd52 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/cloudfoundry/bosh-google-cpi-release/ci/docker/bosh-google-cpi-boshrelease/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/cloudfoundry/bosh-google-cpi-release/ci/docker/bosh-google-cpi-boshrelease/Dockerfile/repaired.Dockerfile
@@ -1,16 +1,16 @@
 FROM ubuntu:16.04
 
 # Update base image
-RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get -y install locales apt-utils
+RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get -y --no-install-recommends install locales apt-utils && rm -rf /var/lib/apt/lists/*;
 RUN localedef -i en_US -f UTF-8 en_US.UTF-8
 RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade; apt-get clean
 
 # Install dependencies
-RUN DEBIAN_FRONTEND=noninteractive apt-get install -y build-essential git-core curl wget jq sudo; apt-get clean
-RUN DEBIAN_FRONTEND=noninteractive apt-get install -y sqlite3 libsqlite3-dev; apt-get clean
-RUN DEBIAN_FRONTEND=noninteractive apt-get install -y mysql-client libmysqlclient-dev; apt-get clean
-RUN DEBIAN_FRONTEND=noninteractive apt-get install -y libpq-dev; apt-get clean
-RUN DEBIAN_FRONTEND=noninteractive apt-get install -y python python-pip libyaml-dev libpython-dev; apt-get clean
+RUN DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y build-essential git-core curl wget jq sudo; rm -rf /var/lib/apt/lists/*; apt-get clean
+RUN DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y sqlite3 libsqlite3-dev; rm -rf /var/lib/apt/lists/*; apt-get clean
+RUN DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y mysql-client libmysqlclient-dev; rm -rf /var/lib/apt/lists/*; apt-get clean
+RUN DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y libpq-dev; rm -rf /var/lib/apt/lists/*; apt-get clean
+RUN DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y python python-pip libyaml-dev libpython-dev; rm -rf /var/lib/apt/lists/*; apt-get clean
 
 # Install Golang
 COPY --from=bosh/golang-release /var/vcap/packages/golang-1-linux /usr/local/go
@@ -18,13 +18,13 @@ ENV GOROOT=/usr/local/go PATH=/usr/local/go/bin:$PATH
 
 # Install Google Cloud SDK
 ENV GCLOUD_SDK_VERSION 305.0.0
-RUN curl -sSL https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-${GCLOUD_SDK_VERSION}-linux-x86_64.tar.gz | tar -v -C /usr/local -xz
+RUN curl -f -sSL https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-${GCLOUD_SDK_VERSION}-linux-x86_64.tar.gz | tar -v -C /usr/local -xz
 ENV PATH $PATH:/usr/local/google-cloud-sdk/bin
 
 # Instal chruby
 RUN mkdir /tmp/chruby && \
     cd /tmp && \
-    curl https://codeload.github.com/postmodern/chruby/tar.gz/v0.3.9 | tar -xz && \
+    curl -f https://codeload.github.com/postmodern/chruby/tar.gz/v0.3.9 | tar -xz && \
     cd /tmp/chruby-0.3.9 && \
     sudo ./scripts/setup.sh && \
     rm -rf /tmp/chruby
@@ -32,7 +32,7 @@ RUN mkdir /tmp/chruby && \
 # Install ruby-install
 RUN mkdir /tmp/ruby-install && \
     cd /tmp && \
-    curl https://codeload.github.com/postmodern/ruby-install/tar.gz/v0.7.0 | tar -xz && \
+    curl -f https://codeload.github.com/postmodern/ruby-install/tar.gz/v0.7.0 | tar -xz && \
     cd /tmp/ruby-install-0.7.0 && \
     sudo make install && \
     rm -rf /tmp/ruby-install
@@ -52,11 +52,11 @@ RUN chmod +x bosh-cli-*
 RUN mv bosh-cli-* /usr/bin/bosh
 
 # Install AWS CLI (used to upload stemcell)
-RUN pip install awscli
+RUN pip install --no-cache-dir awscli
 
 # receipt generator
 RUN cd /tmp && \
-    curl -o certify-artifacts -L https://s3.amazonaws.com/bosh-certification-generator-releases/certify-artifacts-linux-amd64 && \
+    curl -f -o certify-artifacts -L https://s3.amazonaws.com/bosh-certification-generator-releases/certify-artifacts-linux-amd64 && \
     chmod +x certify-artifacts && \
     mv certify-artifacts /bin/certify-artifacts