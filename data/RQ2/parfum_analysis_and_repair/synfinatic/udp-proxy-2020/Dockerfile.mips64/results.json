{
  "startTime": 1674219565500,
  "endTime": 1674219565825,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 22,
        "columnEnd": 72
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 22,
        "columnEnd": 72
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 26
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 26
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:20.04 as base\nENV DEBIAN_FRONTEND=noninteractive\n\n# base applications\nRUN apt-get update && apt-get install --no-install-recommends -y tzdata wget make git flex bison && rm -rf /var/lib/apt/lists/*;\n\n# all our cross compile stuff\nRUN apt-get install --no-install-recommends -y \\\n    linux-libc-dev-mips64-cross \\\n    gccgo-mips64-linux-gnuabi64 \\\n    cpp-10-mips64-linux-gnuabi64 \\\n    golang-1.16-go \\\n    gccgo-10-mips64-linux-gnuabi64 \\\n    libgo16-mips64-cross \\\n    libgcc-10-dev-mips64-cross \\\n    libc6-mips64-cross \\\n    libc6-dev-mips64-cross && rm -rf /var/lib/apt/lists/*;\n\n# don't actually use this... now\nRUN mkdir -p /build/bin && cd /build/bin \\\n    ln -s /usr/bin/gccgo-mips64-linux-gnuabi64 gccgo \\\n    ln -s /usr/bin/mips64-linux-gnuabi64-ar ar \\\n    ln -s /usr/bin/mips64-linux-gnuabi64-gcc gcc\n\n# build libpcap\nFROM base as libpcap\nENV LIBPCAP_VERSION=1.9.1\nWORKDIR /build\nRUN wget -qO - https://www.tcpdump.org/release/libpcap-${LIBPCAP_VERSION}.tar.gz | tar zxf - && \\\n    cd libpcap-${LIBPCAP_VERSION} && \\\n    CC=mips64-linux-gnuabi64-gcc BUILD_CC=gcc AR=mips64-linux-gnuabi64-gcc-ar  RANLIB=mips64-linux-gnuabi64-ranlib \\\n        ./configure --build i686-pc-linux-gnu --host mips64-linux-gnuapbi64 --prefix=/usr/mips64-linux-gnuabi64 && make install\n\n# build our app\nFROM libpcap\nWORKDIR /build/udp-proxy-2020\nENV GOROOT=/usr/lib/go-1.16\nENV PATH=/build/bin:${GOROOT}/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\n\nENTRYPOINT make .linux-mips64\n"
}