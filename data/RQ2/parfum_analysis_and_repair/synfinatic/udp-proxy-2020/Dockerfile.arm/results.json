{
  "startTime": 1674216682564,
  "endTime": 1674216684396,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 22,
        "columnEnd": 72
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 22,
        "columnEnd": 72
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 25
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 25
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:20.04 as base\nENV DEBIAN_FRONTEND=noninteractive\n\n# base applications\nRUN apt-get update && apt-get install --no-install-recommends -y tzdata wget make git flex bison && rm -rf /var/lib/apt/lists/*;\n\n# all our cross compile stuff\nRUN apt-get install --no-install-recommends -y \\\n    binutils-arm-linux-gnueabihf \\\n    binutils-arm-linux-gnueabi \\\n    linux-libc-dev-armhf-cross \\\n    linux-libc-dev-armel-cross \\\n    gccgo-10-arm-linux-gnueabihf \\\n    gccgo-10-arm-linux-gnueabi \\\n    gcc-10-arm-linux-gnueabihf \\\n    gcc-10-arm-linux-gnueabi \\\n    golang-1.16-go \\\n    libgo16-armhf-cross \\\n    libgo16-armel-cross \\\n    libgcc-10-dev-armhf-cross \\\n    libgcc-10-dev-armel-cross \\\n    libc6-armhf-cross \\\n    libc6-armel-cross \\\n    libc6-dev-armhf-cross \\\n    libc6-dev-armel-cross \\\n    binutils-aarch64-linux-gnu \\\n    linux-libc-dev-arm64-cross \\\n    gccgo-10-aarch64-linux-gnu \\\n    gcc-10-aarch64-linux-gnu \\\n    libgo16-arm64-cross \\\n    libgcc-10-dev-arm64-cross \\\n    libc6-arm64-cross \\\n    libc6-dev-arm64-cross && rm -rf /var/lib/apt/lists/*;\n\nRUN mkdir -p /buildhf/bin && cd /buildhf/bin && \\\n    ln -s /usr/bin/arm-linux-gnueabihf-gccgo-10 gccgo && \\\n    ln -s /usr/bin/arm-linux-gnueabihf-gcc-ar-10 ar && \\\n    ln -s /usr/bin/arm-linux-gnueabihf-gcc-ranlib-10 ranlib && \\\n    ln -s /usr/bin/arm-linux-gnueabihf-gcc-10 gcc\n\nRUN mkdir -p /build/bin && cd /build/bin && \\\n    ln -s /usr/bin/arm-linux-gnueabi-gccgo-10 gccgo && \\\n    ln -s /usr/bin/arm-linux-gnueabi-gcc-ar-10 ar && \\\n    ln -s /usr/bin/arm-linux-gnueabi-gcc-ranlib-10 ranlib && \\\n    ln -s /usr/bin/arm-linux-gnueabi-gcc-10 gcc\n\nRUN mkdir -p /build64/bin && cd /build64/bin && \\\n    ln -s /usr/bin/aarch64-linux-gnu-gccgo-10 gccgo && \\\n    ln -s /usr/bin/aarch64-linux-gnu-gcc-ar-10 ar && \\\n    ln -s /usr/bin/aarch64-linux-gnu-gcc-ranlib-10 ranlib && \\\n    ln -s /usr/bin/aarch64-linux-gnu-gcc-10 gcc\n\n# build libpcap\nFROM base as libpcap\nENV LIBPCAP_VERSION=1.9.1\nWORKDIR /build\nRUN wget -qO - https://www.tcpdump.org/release/libpcap-${LIBPCAP_VERSION}.tar.gz | tar zxf -\nWORKDIR /build/libpcap-${LIBPCAP_VERSION}\n\n# hardware float\nRUN CC=/buildhf/bin/gcc BUILD_CC=gcc AR=/buildhf/bin/ar  RANLIB=/buildhf/bin/ranlib \\\n    ./configure --build i686-pc-linux-gnu \\\n    --host arm-linux-gnueabihf --prefix=/usr/arm-linux-gnueabihf && \\\n    make install\n\n# software float\nRUN make clean && \\\n    CC=/build/bin/gcc BUILD_CC=gcc AR=/build/bin/ar  RANLIB=/build/bin/ranlib \\\n    ./configure --build i686-pc-linux-gnu \\\n    --host arm-linux-gnueabi --prefix=/usr/arm-linux-gnueabi && \\\n    make install\n\n# arm64\nRUN make clean && \\ \n    CC=/build64/bin/gcc BUILD_CC=gcc AR=/build64/bin/ar  RANLIB=/build64/bin/ranlib \\\n    ./configure --build i686-pc-linux-gnu \\\n    --host aarch64-linux-gnu --prefix=/usr/aarch64-linux-gnu && \\\n    make install\n\n# build our app\nFROM libpcap\nWORKDIR /build/udp-proxy-2020\nENV GOROOT=/usr/lib/go-1.16\nENV PATH=/build/bin:${GOROOT}/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\n\nENTRYPOINT make .linux-arm\n"
}