{
  "startTime": 1674254934947,
  "endTime": 1674254935828,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 75
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 96
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 83
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 12,
        "columnStart": 22,
        "columnEnd": 13
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 82
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 12,
        "columnStart": 22,
        "columnEnd": 13
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 82
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:stretch-slim\n\n# Get all packages\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n        git wget curl nano unzip \\\n        make automake autoconf \\\n        python2.7 python3 python-pip \\\n        gcc g++ gnupg \\\n        build-essential libboost-all-dev cmake zlib1g-dev libbz2-dev liblzma-dev \\\n        swig libpulse-dev libasound2-dev \\\n\t\tlibatlas-base-dev \\\n        nginx && \\\n#\n#   Pips for STT Server\n    pip install --no-cache-dir tornado webrtcvad numpy && \\\n#\n#   Clean up\n    apt-get clean && apt-get autoclean && apt-get autoremove -y && \\\n#\n#   Working folders\n    mkdir /apps && mkdir /apps/share && mkdir /apps/share/kaldi_models && mkdir /apps/share/lm_corpus && rm -rf /var/lib/apt/lists/*;\n\n# Zamia Speech / Kaldi\n\nRUN cd /apps && \\\n    echo \"deb http://goofy.zamia.org/repo-ai/debian/stretch/amd64/ ./\" >/etc/apt/sources.list.d/zamia-ai.list && \\\n    wget -qO - https://goofy.zamia.org/repo-ai/debian/stretch/amd64/bofh.asc | apt-key add - && \\\n    apt-get update && \\\n    apt-get install --no-install-recommends -y python-kaldiasr python-nltools pulseaudio-utils pulseaudio && \\\n    apt-get clean && apt-get autoclean && apt-get autoremove -y && \\\n#\n#   Download model\n    mkdir /apps/tmp && cd /apps/tmp && \\\n    wget https://goofy.zamia.org/zamia-speech/asr-models/kaldi-generic-en-tdnn_f-r20190227.tar.xz && \\\n    tar -xf kaldi-generic-en-tdnn_f-r20190227.tar.xz && \\\n    mkdir /opt/kaldi/model && \\\n    mv kaldi-generic-en-tdnn_f-r20190227 /opt/kaldi/model/kaldi-generic-en-tdnn_f && \\\n    rm -r /apps/tmp && rm kaldi-generic-en-tdnn_f-r20190227.tar.xz && rm -rf /var/lib/apt/lists/*;\n\n# KenLM\n\nRUN cd /apps && \\\n    wget -O - https://kheafield.com/code/kenlm.tar.gz |tar xz && \\\n    mkdir kenlm/build && cd kenlm/build && \\\n    cmake .. && make -j${nproc}\n\nENV PATH=\"/apps/kenlm/build/bin:${PATH}\"\n\n# Kaldi-adapt-lm\n\nRUN cd /apps && \\\n    git clone https://github.com/fquirin/kaldi-adapt-lm.git && \\\n    cd kaldi-adapt-lm && \\\n    python setup.py install && \\\n    rm -r .git && \\\n#\n#   OpenFST (the one in 'opt/kaldi/tools' is not enough)\n    cd /apps && mkdir openfst && cd openfst && \\\n    wget -O - https://www.openfst.org/twiki/pub/FST/FstDownload/openfst-1.6.9.tar.gz | tar xz && \\\n    cd openfst-1.6.9 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-far=true && \\\n    make -j${nproc} && make -j${nproc} install && \\\n    cd /apps && rm -r openfst\n\nENV LD_LIBRARY_PATH=\"/usr/local/lib:${LD_LIBRARY_PATH}\"\n\n# SEPIA STT Server\n\nRUN cd /apps && \\\n\tmkdir tmp && cd tmp && \\\n    git clone https://github.com/SEPIA-Framework/sepia-stt-server.git && \\\n\tcd .. && mv tmp/sepia-stt-server/legacy-server sepia-stt-server && \\\n    rm -r tmp && \\\n    ln -sf /apps/sepia-stt-server/nginx_config/stt /etc/nginx/sites-enabled/stt\n\n# Start\nWORKDIR /apps/sepia-stt-server\nCMD service nginx start && python sepia_stt_server.py\n"
}