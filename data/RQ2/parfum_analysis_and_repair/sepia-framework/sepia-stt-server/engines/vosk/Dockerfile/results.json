{
  "startTime": 1674255046715,
  "endTime": 1674255047842,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 2,
        "columnEnd": 54
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 2,
        "columnEnd": 53
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 2,
        "columnEnd": 53
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 30
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:buster-slim\n\n# Default to UTF-8 file.encoding\nENV LANG C.UTF-8\n\n# Run 1\nRUN echo 'Installing dependencies...' && \\\n#\n#   Dependencies\n    apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n    sudo git wget curl nano unzip zip procps \\\n    build-essential \\\n    python3-pip python3-dev python3-setuptools python3-wheel \\\n    #amd64 only? moved to adapt package: libatlas-base-dev \\\n    libffi-dev && \\\n#\n#   Fast-API\n    pip3 install --no-cache-dir cffi && \\\n    pip3 install --no-cache-dir fastapi uvicorn[standard] aiofiles && \\\n#\n#   Clean up\n    apt-get remove -y build-essential && \\\n    apt-get install -y --no-install-recommends libatomic1 && \\\n    apt-get clean && apt-get autoclean && apt-get autoremove -y && \\\n#\n#   Create user\n    useradd --create-home --shell /bin/bash admin && \\\n    adduser admin sudo && \\\n    echo \"admin ALL=(ALL) NOPASSWD: ALL\" >> /etc/sudoers && rm -rf /var/lib/apt/lists/*;\n#\n#   ENV\n#SOME_ENV_VAR=/...my-stuff\n\n#   USER\nUSER admin\n\n# Run 1\nRUN echo \"Installing Vosk ...\" && \\\n\tmkdir -p /home/admin/install && \\\n\tmkdir -p /home/admin/sepia-stt/models && \\\n\tmkdir -p /home/admin/kaldi-adapt-lm && \\\n\tcd /home/admin/install && \\\n\tif [ -n \"$(uname -m | grep aarch64)\" ]; then \\\n\t\techo \"Downloading Vosk 0.3.42 for aarch64\"; \\\n\n\t\twget https://github.com/SEPIA-Framework/sepia-stt-server/releases/download/v1.0.0/vosk-0.3.42-py3-none-linux_aarch64.whl; \\\n\t\tpip3 install --no-cache-dir vosk-0.3.42-py3-none-linux_aarch64.whl; \\\n\telif [ -n \"$(uname -m | grep armv7l)\" ]; then \\\n\t\techo \"Downloading Vosk 0.3.42 for armv7l\"; \\\n\n\t\twget https://github.com/SEPIA-Framework/sepia-stt-server/releases/download/v1.0.0/vosk-0.3.42-py3-none-linux_armv7l.whl; \\\n\t\tpip3 install --no-cache-dir vosk-0.3.42-py3-none-linux_armv7l.whl; \\\n\telse \\\n\t\techo \"Downloading Vosk 0.3.42 for x86_64\"; \\\n\n\t\twget https://github.com/SEPIA-Framework/sepia-stt-server/releases/download/v1.0.0/vosk-0.3.42-py3-none-linux_x86_64.whl; \\\n\t\tpip3 install --no-cache-dir vosk-0.3.42-py3-none-linux_x86_64.whl; \\\n\tfi && \\\n\t#wget https://alphacephei.com/vosk/models/vosk-model-small-en-us-0.15.zip && \\\n\t#wget https://alphacephei.com/vosk/models/vosk-model-small-de-0.15.zip && \\\n\t#wget https://alphacephei.com/vosk/models/vosk-model-spk-0.4.zip && \\\n\twget https://github.com/SEPIA-Framework/sepia-stt-server/releases/download/v0.9.5/vosk-model-small-en-us-0.15.zip && \\\n\twget https://github.com/SEPIA-Framework/sepia-stt-server/releases/download/v0.9.5/vosk-model-small-de-0.15.zip && \\\n\twget https://github.com/SEPIA-Framework/sepia-stt-server/releases/download/v0.9.5/vosk-model-spk-0.4.zip && \\\n\tunzip vosk-model-small-en-us-0.15.zip && \\\n\tmv vosk-model-small-en-us-0.15 /home/admin/sepia-stt/models/vosk-model-small-en-us && \\\n\tunzip vosk-model-small-de-0.15.zip && \\\n\tmv vosk-model-small-de-0.15 /home/admin/sepia-stt/models/vosk-model-small-de && \\\n\tunzip vosk-model-spk-0.4.zip && \\\n\tmv vosk-model-spk-0.4 /home/admin/sepia-stt/models/vosk-model-spk && \\\n#\n\techo \"Installing SEPIA STT ...\" && \\\n\tSEPIA_STT_BRANCH=master && \\\n\tgit clone --single-branch --depth 1 -b $SEPIA_STT_BRANCH https://github.com/SEPIA-Framework/sepia-stt-server.git && \\\n\tmv sepia-stt-server/src /home/admin/sepia-stt/server && \\\n#\n\techo \"Installing Adapt-LM scripts ...\" && \\\n\tcd /home/admin && \\\n\tADAPT_LM_BRANCH=master && \\\n\tgit clone --single-branch --depth 1 -b $ADAPT_LM_BRANCH https://github.com/fquirin/kaldi-adapt-lm.git && \\\n\tcd kaldi-adapt-lm && \\\n\tbash 1-download-requirements.sh && \\\n\trm *.tar.gz && \\\n#\n#\tClean up install folder\n\tcd /home/admin && \\\n\tsudo rm -rf /home/admin/install && \\\n#\n# TODO: install proxy with self-signed certs?\n#\n\techo \"#!/bin/bash\" > on-docker.sh && echo \"cd sepia-stt/server && python3 -m launch\" >> on-docker.sh\n\n# Start\nWORKDIR /home/admin\nCMD bash on-docker.sh\n"
}