{
  "startTime": 1674253243960,
  "endTime": 1674253245358,
  "originalSmells": [
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 21,
        "columnStart": 1,
        "columnEnd": 52
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:stretch-slim\n\n# Default to UTF-8 file.encoding\nENV LANG C.UTF-8\n\n# Get all packages, install Java OpenJDK 11 and create a user\n\nRUN echo 'Installing SEPIA-Home...' && \\\n#\n#\tAdd Debian backports\n\techo 'deb http://ftp.debian.org/debian stretch-backports main' | tee /etc/apt/sources.list.d/stretch-backports.list &&\\\n#\n#\tUpdate packages\n\tapt-get update && \\\n#\n#\tFix for Debian9 slim to be able to install Java\n\tmkdir -p /usr/share/man/man1 &&\\\n#\n#\tGet packages\n\tapt-get install -y --no-install-recommends \\\n        git wget curl nano unzip zip procps \\\n\t\topenjdk-11-jdk-headless ca-certificates-java maven && \\\n#\n#   Clean up\n    apt-get clean && apt-get autoclean && apt-get autoremove -y && \\\n#\n#   Create a Linux user\n    useradd --create-home --shell /bin/bash admin && \\\n\tadduser admin sudo && rm -rf /var/lib/apt/lists/*;\n\n# Set JAVA_HOME path ... just in case\n\nENV JAVA_HOME=\"/usr/lib/jvm/java-11-openjdk-amd64\"\nENV PATH=\"${JAVA_HOME}:${PATH}\"\n\n# Build SEPIA-Home (custom-bundle, single-server, SBC version)\n\nUSER admin\n\nRUN echo \"Building SEPIA-Home (custom bundle) ...\" && \\\n#\n#\tMake target and temporary folder (SEPIA should be in ~/SEPIA !!)\n\tmkdir -p ~/SEPIA/tmp && \\\n\tcd ~/SEPIA/tmp && \\\n#\n#\tDownload files\n\twget -O sepia-custom-bundle-folder.zip https://github.com/SEPIA-Framework/sepia-installation-and-setup/blob/master/sepia-custom-bundle-folder.zip?raw=true && \\\n\tunzip -n sepia-custom-bundle-folder.zip -d ~/SEPIA && \\\n#\n\tgit clone https://github.com/SEPIA-Framework/sepia-core-tools-java.git && \\\n\tgit clone https://github.com/SEPIA-Framework/sepia-websocket-server-java.git && \\\n\tgit clone https://github.com/SEPIA-Framework/sepia-assist-server.git && \\\n\tgit clone https://github.com/SEPIA-Framework/sepia-teach-server.git && \\\n\tgit clone https://github.com/SEPIA-Framework/sepia-reverse-proxy.git && \\\n\tgit clone https://github.com/SEPIA-Framework/sepia-mesh-nodes.git && \\\n\tgit clone https://github.com/SEPIA-Framework/sepia-html-client-app.git && \\\n\tgit clone https://github.com/SEPIA-Framework/sepia-admin-tools.git && \\\n#\n#\tBuild all modules and copy client and admin-tools\n\tcd sepia-core-tools-java && mvn install && cp -r target/release/. ~/SEPIA/sepia-assist-server/ && cd .. && \\\n\tcd sepia-websocket-server-java && mvn install && cp -r target/release/. ~/SEPIA/sepia-websocket-server-java/ && cd .. && \\\n\tcd sepia-assist-server && mvn install && cp -r target/release/. ~/SEPIA/sepia-assist-server/ && cd .. && \\\n\tcd sepia-teach-server && mvn install && cp -r target/release/. ~/SEPIA/sepia-teach-server/ && cd .. && \\\n\tcd sepia-reverse-proxy && mvn install && cp -r target/release/. ~/SEPIA/sepia-reverse-proxy/ && cd .. && \\\n\tcd sepia-mesh-nodes/java && mvn install && cp -r target/release/. ~/SEPIA/sepia-mesh-nodes/ && cd ../.. && \\\n\tmkdir -p sepia-assist-server/Xtensions/WebContent/app && \\\n\tcp -r sepia-html-client-app/www/. ~/SEPIA/sepia-assist-server/Xtensions/WebContent/app/ && \\\n\tmkdir -p sepia-assist-server/Xtensions/WebContent/tools && \\\n\tcp -r sepia-admin-tools/admin-web-tools/. ~/SEPIA/sepia-assist-server/Xtensions/WebContent/tools/ && \\\n#\n#\tDownload and unzip elasticsearch (keeping the existing config folder)\n\twget -O elasticsearch.zip https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-5.3.3.zip && \\\n\tunzip -n elasticsearch.zip && \\\n\tcp -rn elasticsearch-*/. ~/SEPIA/elasticsearch/ && \\\n#\n#\tClean up\n\tcd ~/SEPIA && \\\n\tfind . -iname \"*.sh\" -exec chmod +x {} \\; && \\\n\trm -r ~/SEPIA/tmp\n\t# we could also remove maven here and maybe some other packages\n#\n#\tSetup SEPIA\n#\tNOTE: This has to be done (e.g. by sharing external config folder) before server can run without error\n#\te.g.:\n#\t0 - Create shared folder:\t\t\t\texport SEPIA_SHARE=/home/[my-user]/sepia-share && mkdir -p $SEPIA_SHARE\n#\t1 - Copy SEPIA folder from container:\tsudo docker run --rm --name=sepia_home -p 20726:20726 -it -v $SEPIA_SHARE:/home/admin/sepia-backup sepia/home:test cp -r /home/admin/SEPIA /home/admin/sepia-backup\n#\t2 - Run setup with shared folder:\t\tsudo docker run --rm --name=sepia_home -p 20726:20726 -it -v $SEPIA_SHARE/SEPIA:/home/admin/SEPIA sepia/home:test bash setup.sh\n#\t3 - Run server:\t\t\t\t\t\t\tsudo docker run --rm --name=sepia_home -p 20726:20726 -d -v $SEPIA_SHARE/SEPIA:/home/admin/SEPIA sepia/home:test\n# TODO: replace SEPIA proxy with Nginx\n\n# Start\nWORKDIR /home/admin/SEPIA\nCMD bash on-docker.sh\n"
}