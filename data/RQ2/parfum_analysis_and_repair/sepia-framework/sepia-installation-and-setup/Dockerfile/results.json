{
  "startTime": 1674254958287,
  "endTime": 1674254960009,
  "originalSmells": [
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 20,
        "columnStart": 1,
        "columnEnd": 37
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:buster-slim\n\n# Default to UTF-8 file.encoding\nENV LANG C.UTF-8\n\n# Get all packages, install Java OpenJDK 11 and create a user\n\nRUN echo 'Installing SEPIA-Home...' && \\\n#\n#\tUpdate package sources\n\tapt-get update && \\\n#\n#\tFix for Debian9/10 slim to be able to install Java\n\tmkdir -p /usr/share/man/man1 && \\\n#\n#\tGet packages\n\tapt-get install -y --no-install-recommends \\\n        sudo git wget curl nano unzip zip procps \\\n\t\topenjdk-11-jdk-headless ca-certificates-java \\\n\t\tntpdate nginx \\\n\t\tespeak-ng espeak-ng-espeak libpopt0 && \\\n#\n#\tUpdate time-sync - NOTE: not possible in Docker? will use host clock?\n#\tsudo timedatectl set-ntp true\n#\n#   Clean up\n    apt-get clean && apt-get autoclean && apt-get autoremove -y && \\\n#\n#   Create a Linux user\n    useradd --create-home --shell /bin/bash admin && \\\n\tadduser admin sudo && \\\n\techo \"admin ALL=(ALL) NOPASSWD: ALL\" >> /etc/sudoers && rm -rf /var/lib/apt/lists/*;\n\n# Set JAVA_HOME path ... just in case - TODO: fix path for ARM or remove\n#\n# ENV JAVA_HOME=\"/usr/lib/jvm/java-11-openjdk-amd64\"\n# ENV PATH=\"${JAVA_HOME}:${PATH}\"\n#\n# Set a Docker ENV to identify container in scripts\nENV ISDOCKER=\"true\"\n\n# Download SEPIA-Home (custom-bundle, single-server, SBC version)\n\nUSER admin\n\nRUN echo \"Downloading SEPIA-Home (custom bundle) ...\" && \\\n#\n#\tMake target and temporary folder (SEPIA should be in ~/SEPIA)\n\tmkdir -p ~/SEPIA/tmp && \\\n\tcd ~/SEPIA/tmp && \\\n#\n#\tDownload files\n\twget \"https://github.com/SEPIA-Framework/sepia-installation-and-setup/releases/latest/download/SEPIA-Home.zip\" && \\\n\tunzip SEPIA-Home.zip -d ~/SEPIA && \\\n#\n#\tClean up\n\tcd ~/SEPIA && \\\n\tfind . -iname \"*.sh\" -exec chmod +x {} \\; && \\\n\tchmod +x elasticsearch/bin/elasticsearch && \\\n\trm -rf ~/SEPIA/tmp && \\\n#\n#\tRun setup to install TTS engine\n\tbash setup.sh 7 && \\\n#\n#\tSet up Nginx (HTTP)\n\tsudo cp nginx/sites-available/sepia-fw-http.conf /etc/nginx/sites-enabled/sepia-fw-http.conf && \\\n\tsudo unlink /etc/nginx/sites-enabled/default && \\\n#\n#\tPrepare automatic-setup and user1\n\tcd automatic-setup && \\\n\tcp template.yaml config.yaml && \\\n\tsed -i 's/nickname: Testy/nickname: Boss/' config.yaml && \\\n\tsed -i 's/email: test@sepia.localhost/email: user1@sepia.localhost/' config.yaml && \\\n\tsed -i 's/password: test12345/password: <random>/' config.yaml && \\\n\ttouch docker-setup && cd .. && \\\n#\n#\tSet up external data folder\n\tbash scripts/create-external-data-folder.sh -yu\n#\n# Optional, final modifications imported from build folder:\n# ADD *.sh /home/admin/SEPIA/\n# RUN cd ~/SEPIA && sudo find . -iname \"*.sh\" -exec chmod +x {} \\;\n#\n#\t---------------------\n#\tPlease read: https://github.com/SEPIA-Framework/sepia-docs/wiki/SEPIA-inside-virtual-environments\n#\n#\tSet up Elasticsearch\n#\tRun this on your HOST (the machine that starts the Docker container): \tsudo sysctl -w vm.max_map_count=262144\n#\tComment: https://www.elastic.co/guide/en/elasticsearch/reference/5.3/vm-max-map-count.html (the container will inherit this from the host)\n#\n#\tSet up SEPIA\n#\tNOTE: If the file '$SEPIA_SHARE/setup/automatic-setup/docker-setup' exists the automatic setup will run\n#\t0 - Create an EMPTY shared folder:\tSEPIA_SHARE=/home/[my-user]/sepia-home-share && mkdir -p $SEPIA_SHARE\n#\t1 - Make a Docker volume out of it:\tdocker volume create --opt type=none --opt device=$SEPIA_SHARE --opt o=bind sepia-home-share\n#\t3 - Run the server:\tdocker run --rm --name=sepia_home -p 20726:20726 -d -v sepia-home-share:/home/admin/sepia-home-data sepia/home:vX.X.X\n#\t---------------------\n\n# Start\nWORKDIR /home/admin/SEPIA\nCMD sudo service nginx start && bash on-docker.sh\n"
}