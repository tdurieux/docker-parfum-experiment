{
  "startTime": 1674246199552,
  "endTime": 1674246200722,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 7,
        "columnEnd": 62
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 7,
        "columnEnd": 62
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG apm_server_base_image=docker.elastic.co/apm/apm-server:8.0.0-SNAPSHOT\nARG go_version=1.13\n\nFROM golang:${go_version} AS build\n\nRUN apt -qq remove -y python2 && apt -qq autoremove -y\n\n# install make update prerequisites\nRUN apt-get -qq update \\\n    && apt-get -qq --no-install-recommends install -y python3 python3-pip python3-venv && rm -rf /var/lib/apt/lists/*;\n\nRUN pip3 install --no-cache-dir --upgrade pip\n\nARG apm_server_branch_or_commit=master\nARG apm_server_repo=https://github.com/elastic/apm-server.git\nENV SRC=/go/src/github.com/elastic/apm-server\n\n# Git clone and checkout given either the branch, commit or both.\nRUN git clone ${apm_server_repo} ${SRC} \\\n    && cd ${SRC} && git fetch -q origin '+refs/pull/*:refs/remotes/origin/pr/*' \\\n    && git checkout ${apm_server_branch_or_commit}\n\nRUN cd ${SRC} && git rev-parse HEAD && echo ${apm_server_branch_or_commit}\n\nRUN make -C ${SRC} update apm-server \\\n\t  && sed -zri -e 's/output.elasticsearch:(\\n[^\\n]*){5}/output.elasticsearch:\\n  hosts: [\"\\${ELASTICSEARCH_HOSTS:elasticsearch:9200}\"]/' -e 's/  host: \"localhost:8200\"/  host: \"0.0.0.0:8200\"/' ${SRC}/apm-server.yml \\\n\t  && chmod go+r ${SRC}/apm-server.yml\n\nFROM ${apm_server_base_image}\nENV SRC=/go/src/github.com/elastic/apm-server\nCOPY --from=build ${SRC}/apm-server /usr/share/apm-server/apm-server\nCOPY --from=build ${SRC}/apm-server.yml /usr/share/apm-server/apm-server.yml\n\nCMD ./apm-server -e -d \"*\"\n\n# Add healthcheck for docker/healthcheck metricset to check during testing\nHEALTHCHECK CMD exit 0\n"
}