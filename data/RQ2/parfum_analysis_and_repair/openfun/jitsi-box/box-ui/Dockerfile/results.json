{
  "startTime": 1674252778948,
  "endTime": 1674252779388,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 34
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "## Stage 0, \"build\": based on Node.js, to build and compile the frontend\nFROM node:16-alpine as build\n\nWORKDIR /app\n\n# Separate npm install and npm build to make the best of Docker cache\nCOPY package.json /app/package.json\n# Legacy peer deps for the QR code scanner\nRUN npm install --legacy-peer-deps && npm cache clean --force;\n\nCOPY . /app/\n\nRUN npm run build\n\n## Stage 1: based on the official nginx image, serves the static frontend files\nFROM nginx:1.21\n\n# Install certbot for certificate auto renew\n#RUN apt update &&\\\n#    apt install -y software-properties-common &&\\\n#    add-apt-repository -r ppa:certbot/certbot && \\\n#    apt update && \\\n#    apt install -y certbot python3-certbot-nginx\n\n# ARG are defined only in build\n#ARG certbot_email=test@gmail.com\nARG domain\nARG front_files\n\n# ENV are accessible after build (when certbot CMD will be launched)\n#ENV certbot_email=${certbot_email}\n#ENV domain=${domain}\n\n# Copy Nginx conf file\n#COPY ./nginx-jitsi-box.conf.template /etc/nginx/conf.d/nginx-jitsi-box.conf\n\n# Replace domain name variable in nginx template with its real value\n#RUN sed -i \"s|{{ domain_name }}|${domain}|g\" /etc/nginx/conf.d/nginx-jitsi-box.conf && \\\n#    sed -i \"s|{{ path/to/front/files }}|${front_files}|g\" /etc/nginx/conf.d/nginx-jitsi-box.conf\n\n# Copy front files\nCOPY --from=build /app/build ${front_files}\n\n# Run certbot\n#CMD certbot --noninteractive --agree-tos --email ${certbot_email} -d ${domain} --redirect --nginx\n\n"
}