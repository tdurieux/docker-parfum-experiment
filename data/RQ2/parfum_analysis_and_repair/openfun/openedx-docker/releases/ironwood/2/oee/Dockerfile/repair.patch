diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/openfun/openedx-docker/releases/ironwood/2/oee/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/openfun/openedx-docker/releases/ironwood/2/oee/Dockerfile/repaired.Dockerfile
index 6628f03..0d128b0 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/openfun/openedx-docker/releases/ironwood/2/oee/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/openfun/openedx-docker/releases/ironwood/2/oee/Dockerfile/repaired.Dockerfile
@@ -19,7 +19,7 @@ FROM ubuntu:16.04 as base
 
 # Configure locales & timezone
 RUN apt-get update && \
-    apt-get install -y \
+    apt-get install --no-install-recommends -y \
       gettext \
       locales \
       tzdata && \
@@ -37,16 +37,16 @@ WORKDIR /downloads
 
 # Install curl
 RUN apt-get update && \
-    apt-get install -y curl
+    apt-get install --no-install-recommends -y curl && rm -rf /var/lib/apt/lists/*;
 
 # Download pip installer for python 2.7
-RUN curl -sLo get-pip.py https://bootstrap.pypa.io/pip/2.7/get-pip.py
+RUN curl -f -sLo get-pip.py https://bootstrap.pypa.io/pip/2.7/get-pip.py
 
 # Download edxapp release
 # Get default EDX_RELEASE_REF value (defined on top)
 ARG EDX_RELEASE_REF
-RUN curl -sLo edxapp.tgz https://github.com/edx/edx-platform/archive/$EDX_RELEASE_REF.tar.gz && \
-    tar xzf edxapp.tgz
+RUN curl -f -sLo edxapp.tgz https://github.com/edx/edx-platform/archive/$EDX_RELEASE_REF.tar.gz && \
+    tar xzf edxapp.tgz && rm edxapp.tgz
 
 
 # === EDXAPP ===
@@ -55,18 +55,18 @@ FROM base as edxapp
 # Install apt https support (required to use node sources repository)
 RUN apt-get update && \
     apt-get upgrade -y && \
-    apt-get install -y \
-      apt-transport-https
+    apt-get install --no-install-recommends -y \
+      apt-transport-https && rm -rf /var/lib/apt/lists/*;
 
 # Add a recent release of nodejs to apt sources (ubuntu package for precise is
 # broken)
 RUN echo "deb https://deb.nodesource.com/node_10.x trusty main" \
 	> /etc/apt/sources.list.d/nodesource.list && \
-    curl -s 'https://deb.nodesource.com/gpgkey/nodesource.gpg.key' | apt-key add -
+    curl -f -s 'https://deb.nodesource.com/gpgkey/nodesource.gpg.key' | apt-key add -
 
 # Install base system dependencies
 RUN apt-get update && \
-    apt-get install -y \
+    apt-get install --no-install-recommends -y \
       nodejs \
       python && \
     rm -rf /var/lib/apt/lists/*
@@ -100,7 +100,7 @@ WORKDIR /builder
 # Install builder system dependencies
 RUN apt-get update && \
     apt-get upgrade -y && \
-    apt-get install -y \
+    apt-get install --no-install-recommends -y \
     build-essential \
     gettext \
     git \
@@ -127,8 +127,8 @@ COPY patches/* /tmp/
 RUN patch -p1 < /tmp/edx-platform_ironwood.2-oee_requirements-py2neo.patch
 
 # Install python dependencies
-RUN pip install --src /usr/local/src -r requirements/edx/base.txt && \
-    pip install -r requirements/edx/extend.txt
+RUN pip install --no-cache-dir --src /usr/local/src -r requirements/edx/base.txt && \
+    pip install --no-cache-dir -r requirements/edx/extend.txt
 
 # Patches post-install
 # Patch the CMS to activate our customizable LTI Xblock
@@ -137,7 +137,7 @@ RUN patch -p1 < /tmp/edx-platform_ironwood.2-oee.patch
 RUN patch -d /usr/local/lib/python2.7/dist-packages/ -p1 < /tmp/edx-ora2_ironwood.2-oee.patch
 
 # Install Javascript requirements
-RUN npm install
+RUN npm install && npm cache clean --force;
 
 # Update assets skipping collectstatic (it should be done during deployment)
 RUN NO_PREREQ_INSTALL=1 \
@@ -177,7 +177,7 @@ ARG EDX_RELEASE_REF
 # Install system dependencies
 RUN apt-get update && \
     apt-get upgrade -y && \
-    apt-get install -y \
+    apt-get install --no-install-recommends -y \
       libsqlite3-dev \
       mongodb && \
     rm -rf /var/lib/apt/lists/*
@@ -195,7 +195,7 @@ RUN groupadd --gid ${DOCKER_GID} edx || \
 # To prevent permission issues related to the non-privileged user running in
 # development, we will install development dependencies in a python virtual
 # environment belonging to that user
-RUN pip install virtualenv
+RUN pip install --no-cache-dir virtualenv
 
 # Create the virtualenv directory where we will install python development
 # dependencies
@@ -232,7 +232,7 @@ ARG EDXAPP_STATIC_ROOT
 # Install runner system dependencies
 RUN apt-get update && \
     apt-get upgrade -y && \
-    apt-get install -y \
+    apt-get install --no-install-recommends -y \
     libgeos-dev \
     libmysqlclient20 \
     libxml2 \