diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/openfun/openedx-docker/releases/dogwood/3/fun/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/openfun/openedx-docker/releases/dogwood/3/fun/Dockerfile/repaired.Dockerfile
index 76c6d31..ea442ba 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/openfun/openedx-docker/releases/dogwood/3/fun/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/openfun/openedx-docker/releases/dogwood/3/fun/Dockerfile/repaired.Dockerfile
@@ -23,7 +23,7 @@ FROM ubuntu:12.04 as base
 # System dependencies
 RUN sed -i.bak -r 's/(archive|security).ubuntu.com/old-releases.ubuntu.com/g' /etc/apt/sources.list && \
     apt-get update && \
-    apt-get install -y \
+    apt-get install --no-install-recommends -y \
       gcc \
       gettext \
       libssl-dev \
@@ -44,13 +44,13 @@ ENV LC_ALL en_US.UTF-8
 WORKDIR /tmp/
 
 ARG PYTHON_VERSION
-RUN curl -sLo Python-${PYTHON_VERSION}.tgz https://www.python.org/ftp/python/${PYTHON_VERSION}/Python-${PYTHON_VERSION}.tgz \
+RUN curl -f -sLo Python-${PYTHON_VERSION}.tgz https://www.python.org/ftp/python/${PYTHON_VERSION}/Python-${PYTHON_VERSION}.tgz \
   && tar --extract -f Python-${PYTHON_VERSION}.tgz \
   && cd ./Python-${PYTHON_VERSION}/ \
-  && ./configure --enable-optimizations --prefix=/usr/local \
+  && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --enable-optimizations --prefix=/usr/local \
   && make && make install \
   && cd ../ \
-  && rm -r ./Python-${PYTHON_VERSION}*
+  && rm -r ./Python-${PYTHON_VERSION}* && rm Python-${PYTHON_VERSION}.tgz
 
 
 # === DOWNLOAD ===
@@ -59,12 +59,12 @@ FROM base as downloads
 WORKDIR /downloads
 
 # Download pip installer for python 2.7
-RUN curl -sLo get-pip.py https://bootstrap.pypa.io/pip/2.7/get-pip.py
+RUN curl -f -sLo get-pip.py https://bootstrap.pypa.io/pip/2.7/get-pip.py
 
 # Download edxapp release
 ARG EDX_ARCHIVE_URL
-RUN curl -sLo edxapp.tgz $EDX_ARCHIVE_URL && \
-    tar xzf edxapp.tgz
+RUN curl -f -sLo edxapp.tgz $EDX_ARCHIVE_URL && \
+    tar xzf edxapp.tgz && rm edxapp.tgz
 
 
 # === EDXAPP ===
@@ -73,18 +73,18 @@ FROM base as edxapp
 # Install apt https support (required to use node sources repository)
 RUN apt-get update && \
     apt-get upgrade -y && \
-    apt-get install -y \
-      apt-transport-https
+    apt-get install --no-install-recommends -y \
+      apt-transport-https && rm -rf /var/lib/apt/lists/*;
 
 # Add a recent release of nodejs to apt sources (ubuntu package for precise is
 # broken)
 RUN echo "deb https://deb.nodesource.com/node_10.x trusty main" \
 	> /etc/apt/sources.list.d/nodesource.list && \
-    curl -s 'https://deb.nodesource.com/gpgkey/nodesource.gpg.key' | apt-key add -
+    curl -f -s 'https://deb.nodesource.com/gpgkey/nodesource.gpg.key' | apt-key add -
 
 # Install base system dependencies
 RUN apt-get update && \
-    apt-get install -y \
+    apt-get install --no-install-recommends -y \
       nodejs && \
     rm -rf /var/lib/apt/lists/*
 
@@ -120,7 +120,7 @@ WORKDIR /builder
 # Install builder system dependencies
 RUN apt-get update && \
     apt-get upgrade -y && \
-    apt-get install -y \
+    apt-get install --no-install-recommends -y \
       build-essential \
       gfortran \
       git-core \
@@ -146,7 +146,7 @@ RUN apt-get update && \
 WORKDIR /edx/app/edxapp/edx-platform
 
 # Install Javascript requirements
-RUN npm install
+RUN npm install && npm cache clean --force;
 
 # Install Ruby dependencies
 RUN gem install bundler -v 1.17.3 && \
@@ -157,31 +157,31 @@ RUN python get-pip.py
 
 # Install python dependencies
 #
-RUN pip install -r requirements/edx/pre.txt
+RUN pip install --no-cache-dir -r requirements/edx/pre.txt
 # We need specific versions of pip and setuptools to handle the different
 # ways to declare Python dependencies in OpenEdX ðŸ˜…
 # Voluptuous is a sub-dependency. The version match pattern is >=0.10.5,<1.0.0
 # but the version 0.13.0 is incompatible with this version of OpenEdX so we install
 # manually the latest compatible version to prevent the installation of 0.13.0
-RUN pip install \
+RUN pip install --no-cache-dir \
     pip==9.0.3 \
     setuptools==44.1.1 \
     voluptuous==0.12.2
 
-RUN pip install --src /usr/local/src -r requirements/edx/github.txt
+RUN pip install --no-cache-dir --src /usr/local/src -r requirements/edx/github.txt
 # Uninstall django==1.4.22 which gets installed because of django-wiki.
 # Otherwise 1.8.12 is installed on top of 1.4.22 in the next step and causes
 # a build failure.
 RUN pip uninstall --yes django
-RUN pip install -r requirements/edx/base.txt
-RUN pip install -r requirements/edx/paver.txt
-RUN pip install -r requirements/edx/post.txt
+RUN pip install --no-cache-dir -r requirements/edx/base.txt
+RUN pip install --no-cache-dir -r requirements/edx/paver.txt
+RUN pip install --no-cache-dir -r requirements/edx/post.txt
 # Upgrade pip once again so that eggs (local.txt) are properly installed
-RUN pip install --upgrade pip
-RUN pip install -r requirements/edx/local.txt
+RUN pip install --no-cache-dir --upgrade pip
+RUN pip install --no-cache-dir -r requirements/edx/local.txt
 # Installing FUN requirements needs a recent pip release (we are using
 # setup.cfg declarative packages)
-RUN pip install -r requirements/edx/fun.txt
+RUN pip install --no-cache-dir -r requirements/edx/fun.txt
 
 # Update assets skipping collectstatic (it should be done during deployment)
 RUN NO_PREREQ_INSTALL=1 \
@@ -222,7 +222,7 @@ ARG DOCKER_GID
 # Install system dependencies
 RUN apt-get update && \
     apt-get upgrade -y && \
-    apt-get install -y \
+    apt-get install --no-install-recommends -y \
       git \
       libsqlite3-dev \
       mongodb && \
@@ -243,7 +243,7 @@ RUN groupadd --gid ${DOCKER_GID} edx || \
 # To prevent permission issues related to the non-privileged user running in
 # development, we will install development dependencies in a python virtual
 # environment belonging to that user
-RUN pip install virtualenv==16.7.9
+RUN pip install --no-cache-dir virtualenv==16.7.9
 
 # Create the virtualenv directory where we will install python development
 # dependencies
@@ -290,7 +290,7 @@ ARG EDXAPP_STATIC_ROOT
 # Install runner system dependencies
 RUN apt-get update && \
     apt-get upgrade -y && \
-    apt-get install -y \
+    apt-get install --no-install-recommends -y \
     libgeos-dev \
     libjpeg8 \
     libmysqlclient18 \