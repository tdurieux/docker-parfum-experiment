diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/openfun/openedx-docker/releases/eucalyptus/3/bare/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/openfun/openedx-docker/releases/eucalyptus/3/bare/Dockerfile/repaired.Dockerfile
index 8681e51..9d541ac 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/openfun/openedx-docker/releases/eucalyptus/3/bare/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/openfun/openedx-docker/releases/eucalyptus/3/bare/Dockerfile/repaired.Dockerfile
@@ -19,7 +19,7 @@ FROM ubuntu:16.04 as base
 
 # Configure locales and timezone
 RUN apt-get update && \
-    apt-get install -y \
+    apt-get install --no-install-recommends -y \
       gettext \
       libreadline6 \
       locales \
@@ -39,16 +39,16 @@ WORKDIR /downloads
 
 # Install curl
 RUN apt-get update && \
-    apt-get install -y curl
+    apt-get install --no-install-recommends -y curl && rm -rf /var/lib/apt/lists/*;
 
 # Download pip installer for python 2.7
-RUN curl -sLo get-pip.py https://bootstrap.pypa.io/pip/2.7/get-pip.py
+RUN curl -f -sLo get-pip.py https://bootstrap.pypa.io/pip/2.7/get-pip.py
 
 # Download edxapp release
 # Get default EDX_RELEASE_REF value (defined on top)
 ARG EDX_RELEASE_REF
-RUN curl -sLo edxapp.tgz https://github.com/edx/edx-platform/archive/$EDX_RELEASE_REF.tar.gz && \
-    tar xzf edxapp.tgz
+RUN curl -f -sLo edxapp.tgz https://github.com/edx/edx-platform/archive/$EDX_RELEASE_REF.tar.gz && \
+    tar xzf edxapp.tgz && rm edxapp.tgz
 
 
 # === EDXAPP ===
@@ -57,18 +57,18 @@ FROM base as edxapp
 # Install apt https support (required to use node sources repository)
 RUN apt-get update && \
     apt-get upgrade -y && \
-    apt-get install -y \
-      apt-transport-https
+    apt-get install --no-install-recommends -y \
+      apt-transport-https && rm -rf /var/lib/apt/lists/*;
 
 # Add a recent release of nodejs to apt sources (ubuntu package for precise is
 # broken)
 RUN echo "deb https://deb.nodesource.com/node_10.x trusty main" \
 	> /etc/apt/sources.list.d/nodesource.list && \
-    curl -s 'https://deb.nodesource.com/gpgkey/nodesource.gpg.key' | apt-key add -
+    curl -f -s 'https://deb.nodesource.com/gpgkey/nodesource.gpg.key' | apt-key add -
 
 # Install base system dependencies
 RUN apt-get update && \
-    apt-get install -y \
+    apt-get install --no-install-recommends -y \
       nodejs \
       python && \
     rm -rf /var/lib/apt/lists/*
@@ -98,7 +98,7 @@ WORKDIR /builder
 # Install builder system dependencies
 RUN apt-get update && \
     apt-get upgrade -y && \
-    apt-get install -y \
+    apt-get install --no-install-recommends -y \
       build-essential \
       gettext \
       git \
@@ -124,33 +124,33 @@ WORKDIR /edx/app/edxapp/edx-platform
 # Note that we force some pinned release installations before installing github
 # dependencies to prevent secondary dependencies installation to fail while
 # trying to install a python 2.7 incompatible release
-RUN pip install -r requirements/edx/pre.txt
-RUN pip install \
+RUN pip install --no-cache-dir -r requirements/edx/pre.txt
+RUN pip install --no-cache-dir \
     django-braces==1.14.0 \
     wrapt==1.12.1 \
     lazy-object-proxy==1.5.2 \
     astroid==1.6.0 \
     django==1.8.15 \
     pip==9.0.3
-RUN pip install --upgrade setuptools
-RUN pip install --src /usr/local/src -r requirements/edx/github.txt
-RUN pip install -r requirements/edx/base.txt
-RUN pip install -r requirements/edx/paver.txt
-RUN pip install -r requirements/edx/post.txt
-RUN pip install -r requirements/edx/local.txt
+RUN pip install --no-cache-dir --upgrade setuptools
+RUN pip install --no-cache-dir --src /usr/local/src -r requirements/edx/github.txt
+RUN pip install --no-cache-dir -r requirements/edx/base.txt
+RUN pip install --no-cache-dir -r requirements/edx/paver.txt
+RUN pip install --no-cache-dir -r requirements/edx/post.txt
+RUN pip install --no-cache-dir -r requirements/edx/local.txt
 # Redis is an extra requirement of Celery, we need to install it explicitly so
 # that celery workers are effective
-RUN pip install \
+RUN pip install --no-cache-dir \
       redis==3.3.7 \
       gunicorn==19.9.0
 
 # Install Javascript requirements
-RUN npm install
+RUN npm install && npm cache clean --force;
 
 # Force the reinstallation of edx-ui-toolkit's dependencies inside its
 # node_modules because someone is poking files from there when updating assets.
 RUN cd node_modules/edx-ui-toolkit && \
-      npm install
+      npm install && npm cache clean --force;
 
 # Update assets skipping collectstatic (it should be done during deployment)
 RUN NO_PREREQ_INSTALL=1 \
@@ -190,7 +190,7 @@ ARG EDX_RELEASE_REF
 # Install system dependencies
 RUN apt-get update && \
     apt-get upgrade -y && \
-    apt-get install -y \
+    apt-get install --no-install-recommends -y \
       libsqlite3-dev \
       mongodb && \
     rm -rf /var/lib/apt/lists/*
@@ -208,7 +208,7 @@ RUN groupadd --gid ${DOCKER_GID} edx || \
 # To prevent permission issues related to the non-privileged user running in
 # development, we will install development dependencies in a python virtual
 # environment belonging to that user
-RUN pip install virtualenv
+RUN pip install --no-cache-dir virtualenv
 
 # Create the virtualenv directory where we will install python development
 # dependencies
@@ -249,7 +249,7 @@ ARG EDXAPP_STATIC_ROOT
 # Install runner system dependencies
 RUN apt-get update && \
     apt-get upgrade -y && \
-    apt-get install -y \
+    apt-get install --no-install-recommends -y \
       libgeos-dev \
       libjpeg8 \
       libmysqlclient20 \