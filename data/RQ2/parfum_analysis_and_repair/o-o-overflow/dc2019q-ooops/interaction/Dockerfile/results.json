{
  "startTime": 1674252515810,
  "endTime": 1674252516806,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 34,
        "columnEnd": 72
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 112,
        "columnEnd": 154
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 26,
        "columnEnd": 178
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 26,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 26,
        "columnEnd": 178
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 26,
        "columnEnd": 50
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 26,
        "columnEnd": 178
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 26,
        "columnEnd": 50
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:18.04\n\n# This isn't done but is probably enough to get the tests running on other machines\n\nrun echo \"travis_fold:start:Dapt\\033[33;1mservice Dockerfile apt\\033[0m\" && \\\n    apt-get -qq update && apt-get install -y --no-install-recommends -qq clang python3 python3-dev python3-openssl xinetd firefox build-essential python3-virtualenv python3-setuptools wget sqlite3 gunicorn && \\\n    echo \"\\ntravis_fold:end:Dapt\\r\" && rm -rf /var/lib/apt/lists/*;\n\n# Install geckodriver\nRUN wget https://github.com/mozilla/geckodriver/releases/download/v0.24.0/geckodriver-v0.24.0-linux64.tar.gz && tar xvf geckodriver-v0.24.0-linux64.tar.gz && mv geckodriver /usr/local/bin && rm geckodriver-v0.24.0-linux64.tar.gz\n\n# Install phantomjs\nRUN wget https://bitbucket.org/ariya/phantomjs/downloads/phantomjs-2.1.1-linux-x86_64.tar.bz2 -O phantomjs.tar.bz2 && \\\n  tar xvf phantomjs.tar.bz2 && \\\n  cp phantomjs-2.1.1-linux-x86_64/bin/phantomjs /usr/bin/ && \\\n  chmod ugo+x /usr/bin/phantomjs && \\\n  rm -rf phantomjs-2.1.1-linux-x86_64 phantomjs.tar.bz2\n\n# Extra dependencies for tests\nRUN apt-get -qq update && apt-get install -y --no-install-recommends -qq curl && rm -rf /var/lib/apt/lists/*;\n\n\nRUN mkdir /tests\n\n# Set up virtualenv and install dependencies\nCOPY requirements.txt /tests\nRUN python3 -m virtualenv --python=/usr/bin/python3 /tests/venv\nRUN . /tests/venv/bin/activate && pip install --no-cache-dir -r /tests/requirements.txt\n\nCOPY *.sh /\nCOPY *.py /\n\nRUN chmod +x *.sh *.py\n"
}