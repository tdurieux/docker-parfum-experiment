{
  "startTime": 1674250149588,
  "endTime": 1674250150222,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 36
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM golang:alpine as builder\n\nRUN mkdir /build\n# Add build requirements for librdkafka\nRUN apk add --no-cache build-base\n\n# Get dependencies\nWORKDIR /build\nADD ./golang/go.mod /build/go.mod\nADD ./golang/go.sum /build/go.sum\nRUN go mod download\n\n# Only copy relevant packages to docker container\nADD ./golang/cmd/sensorconnect /build/cmd/sensorconnect\nADD ./golang/internal /build/internal\nADD ./golang/pkg /build/pkg\n# ADD ./golang/test/sensorconnect /build/test\n\nWORKDIR /build\n\n#RUN CGO_ENABLED=0 GOOS=linux go test --mod=readonly ./cmd/sensorconnect\nRUN GOOS=linux go build -tags musl,kafka -a --mod=readonly -installsuffix cgo -ldflags \"-X 'main.buildtime=$(date -u '+%Y-%m-%d %H:%M:%S')' -extldflags '-static'\" -o mainFile ./cmd/sensorconnect\n\nFROM alpine:latest as certs\nRUN apk --update --no-cache add ca-certificates\n\nFROM scratch\nCOPY --from=certs /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/ca-certificates.crt\nCOPY --from=builder /build /app/\nWORKDIR /app\nCMD [\"./mainFile\"]\n"
}