diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/two-man-army/deadline/deadline_/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/two-man-army/deadline/deadline_/Dockerfile/repaired.Dockerfile
index d94bb20..203779f 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/two-man-army/deadline/deadline_/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/two-man-army/deadline/deadline_/Dockerfile/repaired.Dockerfile
@@ -30,21 +30,21 @@ RUN set -ex \
 	&& wget -O python.tar.xz "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz" \
 	&& wget -O python.tar.xz.asc "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc" \
 	&& export GNUPGHOME="$(mktemp -d)" \
-	&& gpg --keyserver ha.pool.sks-keyservers.net --recv-keys "$GPG_KEY" \
+	&& gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$GPG_KEY" \
 	&& gpg --batch --verify python.tar.xz.asc python.tar.xz \
 	&& rm -r "$GNUPGHOME" python.tar.xz.asc \
 	&& mkdir -p /usr/src/python \
 	&& tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \
 	&& rm python.tar.xz \
-	\
+
 	&& cd /usr/src/python \
-	&& ./configure \
+	&& ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
 		--enable-loadable-sqlite-extensions \
 		--enable-shared \
 	&& make -j$(nproc) \
 	&& make install \
 	&& ldconfig \
-	\
+
 # explicit path to "pip3" to ensure distribution-provided "pip3" cannot interfere
 	&& if [ ! -e /usr/local/bin/pip3 ]; then : \
 		&& wget -O /tmp/get-pip.py 'https://bootstrap.pypa.io/get-pip.py' \
@@ -58,7 +58,7 @@ RUN set -ex \
 # then we use "pip list" to ensure we don't have more than one pip version installed
 # https://github.com/docker-library/python/pull/100
 	&& [ "$(pip list |tac|tac| awk -F '[ ()]+' '$1 == "pip" { print $2; exit }')" = "$PYTHON_PIP_VERSION" ] \
-	\
+
 	&& find /usr/local -depth \
 		\( \
 			\( -type d -a -name test -o -name tests \) \
@@ -85,7 +85,7 @@ RUN apt-get update && \
     git \
     libssl-dev \
     pkg-config && \
-  curl -sO https://static.rust-lang.org/dist/rust-$RUST_VERSION-x86_64-unknown-linux-gnu.tar.gz && \
+  curl -f -sO https://static.rust-lang.org/dist/rust-$RUST_VERSION-x86_64-unknown-linux-gnu.tar.gz && \
   tar -xzf rust-$RUST_VERSION-x86_64-unknown-linux-gnu.tar.gz && \
   ./rust-$RUST_VERSION-x86_64-unknown-linux-gnu/install.sh --without=rust-docs && \
   DEBIAN_FRONTEND=noninteractive apt-get remove --purge -y curl && \
@@ -116,7 +116,7 @@ RUN apt-get update && \
     git \
     libssl-dev \
     pkg-config && \
-  curl -sO https://static.rust-lang.org/dist/rust-$RUST_VERSION-x86_64-unknown-linux-gnu.tar.gz && \
+  curl -f -sO https://static.rust-lang.org/dist/rust-$RUST_VERSION-x86_64-unknown-linux-gnu.tar.gz && \
   tar -xzf rust-$RUST_VERSION-x86_64-unknown-linux-gnu.tar.gz && \
   ./rust-$RUST_VERSION-x86_64-unknown-linux-gnu/install.sh --without=rust-docs && \
   DEBIAN_FRONTEND=noninteractive apt-get remove --purge -y curl && \
@@ -141,7 +141,7 @@ RUN apt-get update && apt-get install -y --no-install-recommends \
 ENV GOLANG_VERSION 1.8.1
 
 RUN set -eux; \
-	\
+
 # this "case" statement is generated via "update.sh"
 	dpkgArch="$(dpkg --print-architecture)"; \
 	case "${dpkgArch##*-}" in \
@@ -153,13 +153,13 @@ RUN set -eux; \
 		*) goRelArch='src'; goRelSha256='33daf4c03f86120fdfdc66bddf6bfff4661c7ca11c5da473e537f4d69b470e57'; \
 			echo >&2; echo >&2 "warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source"; echo >&2 ;; \
 	esac; \
-	\
+
 	url="https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz"; \
 	wget -O go.tgz "$url"; \
-	echo "${goRelSha256} *go.tgz" | sha256sum -c -; \
+	echo "${goRelSha256}  *go.tgz" | sha256sum -c -; \
 	tar -C /usr/local -xzf go.tgz; \
 	rm go.tgz; \
-	\
+
 	if [ "$goRelArch" = 'src' ]; then \
 		echo >&2; \
 		echo >&2 'error: UNIMPLEMENTED'; \
@@ -167,7 +167,7 @@ RUN set -eux; \
 		echo >&2; \
 		exit 1; \
 	fi; \
-	\
+
 	export PATH="/usr/local/go/bin:$PATH"; \
 	go version
 
@@ -190,14 +190,14 @@ ENV KOTLIN_COMPILER_URL https://github.com/JetBrains/kotlin/releases/download/v$
 #    apt-get clean && \
 #    rm -rf /var/lib/apt/lists/*
 #
-RUN apt-get update && apt-get install unzip && apt-get install curl
+RUN apt-get update && apt-get install -y --no-install-recommends unzip && apt-get install -y --no-install-recommends curl && rm -rf /var/lib/apt/lists/*;
 RUN apt-get update \
-	&& apt-get install -y curl tar unzip \
-	&& (curl -s -k -L -C - -b "oraclelicense=accept-securebackup-cookie" http://download.oracle.com/otn-pub/java/jdk/7u79-b15/jdk-7u79-linux-x64.tar.gz | tar xfz - -C /opt) \
+	&& apt-get install --no-install-recommends -y curl tar unzip \
+	&& ( curl -f -s -k -L -C - -b "oraclelicense=accept-securebackup-cookie" https://download.oracle.com/otn-pub/java/jdk/7u79-b15/jdk-7u79-linux-x64.tar.gz | tar xfz - -C /opt) \
 	&& mv /opt/jdk1.7.0_79/jre /opt/jre1.7.0_79 \
 	&& mv /opt/jdk1.7.0_79/lib/tools.jar /opt/jre1.7.0_79/lib/ext \
 	&& rm -Rf /opt/jdk1.7.0_79 \
-	&& ln -s /opt/jre1.7.0_79 /opt/java
+	&& ln -s /opt/jre1.7.0_79 /opt/java && rm -rf /var/lib/apt/lists/*;
 
 # Set JAVA_HOME
 ENV JAVA_HOME /opt/java
@@ -261,14 +261,14 @@ RUN set -ex \
 	&& rm -rf /var/lib/apt/lists/* \
 	\
 	&& wget -O ruby.tar.xz "https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz" \
-	&& echo "$RUBY_DOWNLOAD_SHA256 *ruby.tar.xz" | sha256sum -c - \
-	\
+	&& echo "$RUBY_DOWNLOAD_SHA256  *ruby.tar.xz" | sha256sum -c - \
+
 	&& mkdir -p /usr/src/ruby \
 	&& tar -xJf ruby.tar.xz -C /usr/src/ruby --strip-components=1 \
 	&& rm ruby.tar.xz \
-	\
+
 	&& cd /usr/src/ruby \
-	\
+
 # hack in "ENABLE_PATH_CHECK" disabling to suppress:
 #   warning: Insecure world writable dir
 	&& { \
@@ -277,7 +277,7 @@ RUN set -ex \
 		cat file.c; \
 	} > file.c.new \
 	&& mv file.c.new file.c \
-	\
+
 	&& autoconf \
 	&& gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
 	&& ./configure \
@@ -286,12 +286,12 @@ RUN set -ex \
 		--enable-shared \
 	&& make -j "$(nproc)" \
 	&& make install \
-	\
+
 	&& apt-get purge -y --auto-remove $buildDeps \
 	&& cd / \
 	&& rm -r /usr/src/ruby \
-	\
-	&& gem update --system "$RUBYGEMS_VERSION"
+
+	&& gem update --system "$RUBYGEMS_VERSION" && rm -rf /root/.gem;
 
 ENV BUNDLER_VERSION 1.15.1