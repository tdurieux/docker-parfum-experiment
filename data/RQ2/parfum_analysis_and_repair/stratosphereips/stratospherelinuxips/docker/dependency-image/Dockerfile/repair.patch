diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/stratosphereips/stratospherelinuxips/docker/dependency-image/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/stratosphereips/stratospherelinuxips/docker/dependency-image/Dockerfile/repaired.Dockerfile
index b0ec9dd..8e416dd 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/stratosphereips/stratospherelinuxips/docker/dependency-image/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/stratosphereips/stratospherelinuxips/docker/dependency-image/Dockerfile/repaired.Dockerfile
@@ -32,7 +32,7 @@ RUN apt update && apt install -y --no-install-recommends \
     curl \
     gnupg \
  && echo 'deb http://download.opensuse.org/repositories/security:/zeek/xUbuntu_20.04/ /' | tee /etc/apt/sources.list.d/security:zeek.list \
- && curl -fsSL https://download.opensuse.org/repositories/security:zeek/xUbuntu_20.04/Release.key | gpg --dearmor | tee /etc/apt/trusted.gpg.d/security_zeek.gpg > /dev/null
+ && curl -fsSL https://download.opensuse.org/repositories/security:zeek/xUbuntu_20.04/Release.key | gpg --batch --dearmor | tee /etc/apt/trusted.gpg.d/security_zeek.gpg > /dev/null && rm -rf /var/lib/apt/lists/*;
 
 # Install Slips dependencies.
 RUN apt update && apt install -y --no-install-recommends \
@@ -52,7 +52,7 @@ RUN apt update && apt install -y --no-install-recommends \
     nfdump \
     tshark \
     whois \
- && ln -s /opt/zeek/bin/zeek /usr/local/bin/bro
+ && ln -s /opt/zeek/bin/zeek /usr/local/bin/bro && rm -rf /var/lib/apt/lists/*;
 
 
 # Install python dependencies
@@ -63,20 +63,20 @@ RUN apt update && apt install -y --no-install-recommends \
 COPY requirements.txt ${SLIPS_DIR}/
 
 # Upgrade pip3 and install slips requirements
-RUN pip3 install --upgrade pip
-RUN pip3 install -r ${SLIPS_DIR}/requirements.txt
+RUN pip3 install --no-cache-dir --upgrade pip
+RUN pip3 install --no-cache-dir -r ${SLIPS_DIR}/requirements.txt
 
 
 # Requirements for compiling yara
-RUN apt install -y automake libtool make gcc pkg-config
+RUN apt install --no-install-recommends -y automake libtool make gcc pkg-config && rm -rf /var/lib/apt/lists/*;
 
 # Compile and install YARA
 RUN wget https://github.com/VirusTotal/yara/archive/refs/tags/v4.1.3.tar.gz \
   && tar -zxf v4.1.3.tar.gz \
   && cd yara-4.1.3 \
   && ./bootstrap.sh \
-  && ./configure \
+  && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
   && make \
-  && make install
+  && make install && rm v4.1.3.tar.gz
 
 CMD redis-server --daemonize yes && /bin/bash
\ No newline at end of file