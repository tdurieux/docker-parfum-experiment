{
  "startTime": 1674254366475,
  "endTime": 1674254367746,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 5,
        "columnEnd": 66
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 5,
        "columnEnd": 54
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 2,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 5,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 22,
        "lineEnd": 37,
        "columnStart": 5,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 5,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 22,
        "lineEnd": 37,
        "columnStart": 5,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ruby:2.5.1\n\nMAINTAINER Joe Yates \"j.yates@cantierecreativo.net\"\n\nARG NODE_ENV\nARG RAILS_ENV\n\nRUN \\\n\n  apt-get update -qq \\\n  && apt-get install -y --no-install-recommends apt-transport-https \\\n  # Set up Node.js repo\n  && curl -f -sS https://deb.nodesource.com/gpgkey/nodesource.gpg.key \\\n  | apt-key add - 1>/dev/null 2>&1 \\\n  && echo \"deb https://deb.nodesource.com/node_8.x stretch main\" \\\n  > /etc/apt/sources.list.d/nodesource.list \\\n  # Set up Yarn repo\n  && curl -f -sS https://dl.yarnpkg.com/debian/pubkey.gpg \\\n  | apt-key add - 1>/dev/null 2>&1 \\\n  && echo \"deb https://dl.yarnpkg.com/debian/ stable main\" \\\n  > /etc/apt/sources.list.d/yarn.list \\\n  && apt-get update -qq \\\n  && apt-get install -y --no-install-recommends \\\n    --assume-yes \\\n    apt-utils \\\n    build-essential \\\n    git \\\n    graphviz \\\n    libpq-dev \\\n    libgraphviz-dev \\\n    locales \\\n    nodejs \\\n    postgresql-client-9.6 \\\n    yarn \\\n    sshpass \\\n    rsync \\\n    lftp \\\n    2>/dev/null \\\n  && apt-get clean --assume-yes \\\n  && apt-get autoremove --assume-yes \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && rm -rf /usr/share/doc \\\n  && rm -rf /usr/share/man \\\n  && rm -rf /var/cache \\\n  && rm -rf /usr/doc \\\n  && rm -rf /usr/local/share/doc \\\n  && rm -rf /usr/local/share/man \\\n  && rm -rf /tmp/* \\\n  && rm -rf /var/tmp/*\n\nRUN \\\n  echo \"en_US.UTF-8 UTF-8\" > /etc/locale.gen \\\n  && locale-gen\n\nENV LANG en_US.UTF-8\nENV LANGUAGE en_US:en\nENV LC_ALL en_US.UTF-8\n\nRUN mkdir /app\nWORKDIR /app\n\nRUN gem install bundler --version=\"1.16.4\"\n\n# Before copying the whole app, first we copy just the gems -\n# this way we avoid re-bundling every time other files change in the project.\nCOPY Gemfile Gemfile.lock ./\nRUN bundle install --jobs 4\n\nCOPY package.json yarn.lock ./\nRUN \\\n  NODE_ENV=development yarn install \\\n  && rm -rf /usr/local/share/.cache && yarn cache clean;\n\nCOPY . .\nCOPY docker/app/start .\n\n# Mark the image with the latest Git commit SHA\nRUN cat .git/`cat .git/HEAD | cut -f 2 -d ' '` > APP_VERSION\n\nRUN yarn build:webfonts\n\nEXPOSE 3000\nEXPOSE 3001\n"
}