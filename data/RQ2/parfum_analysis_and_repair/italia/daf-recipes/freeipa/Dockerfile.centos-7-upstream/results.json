{
  "startTime": 1674249301498,
  "endTime": 1674249302871,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 27,
        "columnEnd": 160
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 64
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Clone from the CentOS 7\nFROM centos:centos7\n\nMAINTAINER Jan Pazdziora\n\nRUN cd /etc/yum.repos.d && curl -f -LO https://copr.fedorainfracloud.org/coprs/g/freeipa/freeipa-4-3-centos-7/repo/epel-7/pvoborni-freeipa-4-3-centos-7-epel-7.repo\nRUN yum install -y ipa-server ipa-server-dns ipa-server-trust-ad && yum clean all && rm -rf /var/cache/yum\n\n# Workaround 1364139\nRUN sed -i '/installutils.verify_fqdn(config.master_host_name, options.no_host_dns)/s/)/, local_hostname=False)/' /usr/lib/python2.7/site-packages/ipaserver/install/server/replicainstall.py && python -m compileall /usr/lib/python2.7/site-packages/ipaserver/install/server/replicainstall.py\n# Workaround 1377973\nRUN sed -i 's/ips.append(ipautil.CheckedIPAddress(ha, match_local=True))/ips.append(ipautil.CheckedIPAddress(ha, match_local=False))/' /usr/lib/python2.7/site-packages/ipaserver/install/installutils.py && python -m compileall /usr/lib/python2.7/site-packages/ipaserver/install/installutils.py\nRUN echo '7fe9c3084d2b8ba846c23458be86c8677693f0eb /etc/tmpfiles.d/opendnssec.conf' | sha1sum --quiet -c && mv -v /etc/tmpfiles.d/opendnssec.conf /usr/lib/tmpfiles.d/opendnssec.conf\nRUN echo '5a70f1f3db0608c156d5b6629d4cbc3b304fc045 /etc/systemd/system/sssd.service.d/journal.conf' | sha1sum --quiet -c && rm -vf /etc/systemd/system/sssd.service.d/journal.conf\nRUN find /etc/systemd/system/* '!' -name '*.wants' | xargs rm -rvf\nRUN for i in basic.target sysinit.target network.service netconsole.service ; do rm -f /usr/lib/systemd/system/$i && ln -s /dev/null /usr/lib/systemd/system/$i ; done\n\nRUN echo LANG=C > /etc/locale.conf\n\nRUN /sbin/ldconfig -X\n\nCOPY init-data /usr/local/sbin/init\nCOPY ipa-server-configure-first ipa-server-status-check exit-with-status ipa-volume-upgrade-* /usr/sbin/\nCOPY install.sh uninstall.sh /bin/\nRUN mv /bin/hostnamectl /bin/hostnamectl.orig\nRUN mv /usr/bin/domainname /usr/bin/domainname.orig\nADD hostnamectl-wrapper /bin/hostnamectl\nADD hostnamectl-wrapper /usr/bin/domainname\nRUN chmod -v +x /usr/local/sbin/init /usr/sbin/ipa-server-configure-first /usr/sbin/ipa-server-status-check /usr/sbin/exit-with-status /usr/sbin/ipa-volume-upgrade-* /bin/install.sh /bin/uninstall.sh /bin/hostnamectl /usr/bin/domainname\nCOPY container-ipa.target ipa-server-configure-first.service ipa-server-upgrade.service ipa-server-update-self-ip-address.service /usr/lib/systemd/system/\nRUN rmdir -v /etc/systemd/system/multi-user.target.wants \\\n\t&& mkdir /etc/systemd/system/container-ipa.target.wants \\\n\t&& ln -s /etc/systemd/system/container-ipa.target.wants /etc/systemd/system/multi-user.target.wants\n\nRUN systemctl set-default container-ipa.target\nRUN systemctl enable ipa-server-configure-first.service\n\nCOPY exit-via-chroot.conf /usr/lib/systemd/system/systemd-poweroff.service.d/\n\nRUN groupadd -g 288 kdcproxy ; useradd -u 288 -g 288 -c 'IPA KDC Proxy User' -d '/var/lib/kdcproxy' -s '/sbin/nologin' kdcproxy\n\nCOPY atomic-install-help /usr/share/ipa/\nCOPY volume-data-list volume-data-mv-list volume-data-autoupdate /etc/\nRUN set -e ; cd / ; mkdir /data-template ; cat /etc/volume-data-list | while read i ; do echo $i ; if [ -e $i ] ; then tar cf - .$i | ( cd /data-template && tar xf - ) ; else mkdir -p /data-template$( dirname $i ) ; fi ; mkdir -p $( dirname $i ) ; if [ \"$i\" == /var/log/ ] ; then mv /var/log /var/log-removed ; else rm -rf $i ; fi ; ln -sf /data${i%/} ${i%/} ; done\nRUN rm -rf /var/log-removed\nRUN sed -i 's!^d /var/log.*!L /var/log - - - - /data/var/log!' /usr/lib/tmpfiles.d/var.conf\nRUN mv /data-template/etc/dirsrv/schema /usr/share/dirsrv/schema && ln -s /usr/share/dirsrv/schema /data-template/etc/dirsrv/schema\nRUN rm -f /data-template/var/lib/systemd/random-seed\nRUN echo 1.1 > /etc/volume-version\n\nRUN sed -i 's/^UUID=/# UUID=/' /etc/fstab\n\nENV container docker\n\nEXPOSE 53/udp 53 80 443 389 636 88 464 88/udp 464/udp 123/udp 7389 9443 9444 9445\n\nVOLUME [ \"/tmp\", \"/run\", \"/data\", \"/var/log/journal\" ]\n\nSTOPSIGNAL RTMIN+3\nENTRYPOINT [ \"/usr/local/sbin/init\" ]\nRUN uuidgen > /data-template/build-id\n\n# Invocation:\n# docker run -ti -v /sys/fs/cgroup:/sys/fs/cgroup:ro --tmpfs /run --tmpfs /tmp -v /opt/ipa-data:/data:Z -h ipa.example.test ${NAME} [ options ]\n\n# For atomic, we run INSTALL --privileged but install.sh will start another unprivileged container.\n# We do it this way to be able to set hostname for the unprivileged container.\nLABEL install 'docker run -ti --rm --privileged -v /:/host -e HOST=/host -e DATADIR=/var/lib/${NAME} -e NAME=${NAME} -e IMAGE=${IMAGE} ${IMAGE} /bin/install.sh'\nLABEL run 'docker run ${RUN_OPTS} --name ${NAME} -v /var/lib/${NAME}:/data:Z -v /sys/fs/cgroup:/sys/fs/cgroup:ro --tmpfs /run --tmpfs /tmp -v /dev/urandom:/dev/random:ro ${IMAGE}'\nLABEL RUN_OPTS_FILE '/var/lib/${NAME}/docker-run-opts'\nLABEL stop 'docker stop ${NAME}'\nLABEL uninstall 'docker run --rm --privileged -v /:/host -e HOST=/host -e DATADIR=/var/lib/${NAME} ${IMAGE} /bin/uninstall.sh'\n"
}