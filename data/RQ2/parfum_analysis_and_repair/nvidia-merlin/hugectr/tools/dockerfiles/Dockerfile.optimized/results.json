{
  "startTime": 1674248719181,
  "endTime": 1674248720539,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 126
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright (c) 2021, NVIDIA CORPORATION.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nARG FROM_IMAGE_NAME=gitlab-master.nvidia.com:5005/dl/dgx/pytorch:master-py3-devel\n\nFROM ${FROM_IMAGE_NAME}\n\nARG SM=\"80\"\nARG ENABLE_MULTINODES=ON\n\nARG RAPIDS_VERSION=21.06\nARG HWLOC_VERSION=2.4.1\nARG RELEASE=true\n\nRUN apt-get update -y && \\\n    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \\\n        clang-format \\\n        libtbb-dev \\\n        libaio-dev && \\\n    rm -rf /var/lib/apt/lists/*\n\nENV PATH=/usr/local/bin:$PATH\n\n# mpi4py\nRUN pip3 install --no-cache-dir mpi4py\n\n# Rapids/rmm\nENV CONDA_PREFIX=/opt/conda\nRUN mkdir -p /var/tmp && cd /var/tmp && git clone --depth=1 --branch branch-${RAPIDS_VERSION} https://github.com/rapidsai/rmm.git rmm && cd - && \\\n    cd /var/tmp/rmm && \\\n    mkdir -p build && cd build && \\\n    cmake .. -DCMAKE_INSTALL_PREFIX=$CONDA_PREFIX -DBUILD_TESTS=OFF && \\\n    make -j$(nproc) && \\\n    make -j$(nproc) install && \\\n    rm -rf /var/tmp/rmm\n\n# CUDA-Aware hwloc\nRUN cd /opt/hpcx/ompi/include/openmpi/opal/mca/hwloc/hwloc201 && rm -rfv hwloc201.h hwloc/include/hwloc.h\nRUN mkdir -p /var/tmp && wget -q -nc --no-check-certificate -P /var/tmp https://download.open-mpi.org/release/hwloc/v2.4/hwloc-${HWLOC_VERSION}.tar.gz && \\\n    mkdir -p /var/tmp && tar -x -f /var/tmp/hwloc-${HWLOC_VERSION}.tar.gz -C /var/tmp && \\\n    cd /var/tmp/hwloc-${HWLOC_VERSION} && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" CPPFLAGS=\"-I/usr/local/cuda/include/ -L/usr/local/cuda/lib64/\" LDFLAGS=\"-L/usr/local/cuda/lib64\" --enable-cuda && \\\n    make -j$(nproc) && make install && \\\n    rm -rf /var/tmp/hwloc-${HWLOC_VERSION} /var/tmp/hwloc-${HWLOC_VERSION}.tar.gz\n\n# Env variables for NCCL\nENV NCCL_LAUNCH_MODE=PARALLEL \\\n    NCCL_COLLNET_ENABLE=0\n\n# ENV variables for Sharp\nENV SHARP_COLL_NUM_COLL_GROUP_RESOURCE_ALLOC_THRESHOLD=0 \\\n    SHARP_COLL_LOCK_ON_COMM_INIT=1 \\\n    SHARP_COLL_LOG_LEVEL=3 \\\n    HCOLL_ENABLE_MCAST=0\n\nRUN ln -s /usr/lib/x86_64-linux-gnu/libibverbs.so.1.14.36.0 /usr/lib/x86_64-linux-gnu/libibverbs.so\n\nWORKDIR /workspace/dlrm\nRUN pip3 install --upgrade --no-cache-dir https://github.com/mlcommons/logging/archive/1.0.0-rc2.zip\nCOPY . .\n\n# HugeCTR\nRUN if [ \"$RELEASE\" = \"true\" ]; \\\n    then \\\n        cd /workspace/dlrm && \\\n        mkdir build && cd build && \\\n        cmake -DCMAKE_BUILD_TYPE=Release -DSM=$SM \\\n            -DENABLE_MULTINODES=$ENABLE_MULTINODES -DSHARP_A2A=OFF -DDISABLE_CUDF=ON .. && \\\n        make -j$(nproc) && make install && \\\n        chmod +x /usr/local/hugectr/bin/* && \\\n        chmod +x /usr/local/hugectr/lib/* && \\\n        rm -rf /workspace/dlrm/build; \\\n    else \\\n      echo \"Build container for development successfully\"; \\\n    fi\nENV PATH=/usr/local/hugectr/bin:$PATH \\\n    LIBRARY_PATH=/usr/local/hugectr/lib:$LIBRARY_PATH \\\n    LD_LIBRARY_PATH=/usr/local/hugectr/lib:$LD_LIBRARY_PATH \\\n    PYTHONPATH=/usr/local/hugectr/lib:$PYTHONPATH\n\nRUN rm /usr/lib/x86_64-linux-gnu/libibverbs.so\n\nHEALTHCHECK NONE\nENTRYPOINT []\nCMD [\"/bin/bash\"]\n"
}