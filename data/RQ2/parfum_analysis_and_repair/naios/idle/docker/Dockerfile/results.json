{
  "startTime": 1674250470032,
  "endTime": 1674250470766,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 8
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 25,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 8
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 25,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 12
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:20.04\n\nRUN apt-get update \\\n && DEBIAN_FRONTEND=\"noninteractive\" apt-get --no-install-recommends install -y \\\n    build-essential \\\n    ca-certificates \\\n    locales \\\n    software-properties-common \\\n    wget \\\n && apt-get clean \\\n && locale-gen en_US.UTF-8 \\\n && update-locale LANG=en_US.UTF-8 && rm -rf /var/lib/apt/lists/*;\n\n# Install CMake from a distribution\nRUN mkdir -p /opt/cmake-inst \\\n && cd /opt/cmake-inst \\\n && wget -O dist.tar.gz https://cmake.org/files/v3.21/cmake-3.21.2-linux-x86_64.tar.gz \\\n && tar xzf dist.tar.gz \\\n && mv cmake-* /opt/cmake \\\n && rm -rf /opt/cmake-inst && rm dist.tar.gz\nENV PATH=\"/opt/cmake/bin:${PATH}\"\n\nRUN wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - \\\n && add-apt-repository \"deb http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main\" \\\n && apt-get update \\\n && DEBIAN_FRONTEND=\"noninteractive\" apt-get --no-install-recommends install -y \\\n    lld \\\n    clang-12 \\\n    gcc-9 g++-9 \\\n    gcc-10 g++-10 \\\n    fish \\\n    git \\\n    libssl-dev \\\n    ninja-build \\\n    graphviz \\\n    gdb \\\n    valgrind \\\n && apt-get clean \\\n && update-alternatives --install /usr/bin/cc cc $(which clang-12) 100 \\\n && update-alternatives --install /usr/bin/c++ c++ $(which clang++-12) 100 && rm -rf /var/lib/apt/lists/*;\n\nENV IDLE_VM=1\nENV IDLE_INTERNAL_LOGLEVEL=2\n\nENV LSAN_OPTIONS=verbosity=1:log_threads=1:abort_on_error=1\nENV ASAN_OPTIONS=verbosity=1:log_threads=1:abort_on_error=1:use_odr_indicator=1\nENV MSAN_OPTIONS=verbosity=1:log_threads=1:abort_on_error=1\nENV UBSAN_OPTIONS=print_stacktrace=1:symbolize=1:halt_on_error=1:print_summary=1\n\nCMD mkdir -p /home/persistent/build \\\n && cd /home/persistent/build \\\n && echo \"- Building target: '${BUILD_TARGET}'\" \\\n && echo \"- Building type: '${BUILD_TYPE}'\" \\\n && cmake -GNinja -DCMAKE_BUILD_TYPE=${BUILD_TYPE} \\\n          -DIDLE_WITH_INTERNAL_LOG=ON \\\n          -DIDLE_WITH_ASAN=${IDLE_WITH_ASAN} \\\n          -DIDLE_WITH_TSAN=${IDLE_WITH_TSAN} \\\n          -DIDLE_WITH_MSAN=${IDLE_WITH_MSAN} \\\n          -DIDLE_WITH_UBSAN=${IDLE_WITH_UBSAN} \\\n          -DCMAKE_CXX_FLAGS=\"-ftemplate-backtrace-limit=0\" /home/src \\\n && ninja ${BUILD_TARGET}\n"
}