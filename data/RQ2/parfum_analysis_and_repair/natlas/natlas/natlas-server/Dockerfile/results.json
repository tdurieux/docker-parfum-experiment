{
  "startTime": 1674219280865,
  "endTime": 1674219281738,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 22
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 62,
        "columnEnd": 78
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 42,
        "columnEnd": 58
      }
    }
  ],
  "repairedDockerfile": "FROM node:15-stretch as webpack\nARG NATLAS_VERSION=unknown\n\nWORKDIR /app\nCOPY [\"package.json\", \"yarn.lock\", \"/app/\"]\nENV NATLAS_VERSION=$NATLAS_VERSION\nRUN yarn --no-progress --frozen-lockfile --non-interactive && yarn cache clean;\nCOPY . /app\nRUN yarn run webpack --mode production && yarn cache clean;\n\nFROM python:3.8 as build\n\nCOPY Pipfile .\nCOPY Pipfile.lock .\n\nRUN pip install --no-cache-dir pipenv\nRUN PIPENV_VENV_IN_PROJECT=1 pipenv install --deploy \\\n    && rm -rf Pipfile Pipfile.lock\n\nWORKDIR /opt/natlas/natlas-server\nCOPY . /opt/natlas/natlas-server\n\n# Prepare assets\nCOPY --from=webpack /app/app/static/dist app/static/dist\n\nRUN python3 -m compileall .\n\n# Build final image\nFROM python:3.8-slim\n\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends libmariadb3 \\\n    && rm -rf /var/cache/* /root /var/lib/apt/info/* /var/lib/apt/lists/* /var/lib/ghc /var/lib/dpkg /var/lib/log/*\n\nCOPY --from=build /.venv /.venv\nCOPY --from=build /opt/natlas /opt/natlas\n\nWORKDIR /opt/natlas/natlas-server/\nVOLUME [\"/data\"]\nENV FLASK_APP=./natlas-server.py\nENV FLASK_ENV=production\nENV LC_ALL=C.UTF-8\nENV LANG=C.UTF-8\nENV PATH=\"/.venv/bin:$PATH\"\nEXPOSE 5000\nENTRYPOINT [\"/bin/bash\", \"entrypoint.sh\"]\n\nCMD [\"gunicorn\", \"-b\", \"0.0.0.0:5000\", \"natlas-server:app\"]\n"
}