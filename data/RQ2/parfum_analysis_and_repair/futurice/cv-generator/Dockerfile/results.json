{
  "startTime": 1674246197612,
  "endTime": 1674246198811,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 34,
        "columnEnd": 45
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 25
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.5\nMAINTAINER Ilkka Laukkanen <ilkka.laukkanen@futurice.com>\n\n# compiler and libs required to install pypi packages\nRUN apk --no-cache add build-base python python-dev python3 python3-dev py-virtualenv ca-certificates libffi-dev libxml2-dev libxslt-dev nodejs cairo-dev pango-dev postgresql libpq postgresql-dev gdk-pixbuf gdk-pixbuf-dev libjpeg-turbo libjpeg-turbo-dev imagemagick\n\n# set up work area\nRUN mkdir -p /usr/src/app && rm -rf /usr/src/app\nWORKDIR /usr/src/app\n\n# create virtualenvs\nRUN virtualenv -p /usr/bin/python3 /usr/src/app/py3env\nRUN virtualenv -p /usr/bin/python2 /usr/src/app/py2env\n\n# deps install step: change infrequently, satisfied from cache\nCOPY requirements.txt /usr/src/app/\nRUN source py3env/bin/activate && pip install --no-cache-dir -r requirements.txt\nCOPY package.json /usr/src/app/\nRUN source py2env/bin/activate && npm install && npm cache clean --force;\n\n# deploy and build app code\nCOPY . /usr/src/app/\nRUN npm run build-js && npm run build-sass\n\n# deploy fonts\nRUN mkdir -p /usr/share/fonts/local\nCOPY ./fonts/* /usr/share/fonts/local/\nRUN fc-cache /usr/share/fonts/local\n\n# expose port\nEXPOSE 8000\n\n# set up runtime\nCMD [\"sh\", \"-c\", \"source py3env/bin/activate && python main.py\"]\n"
}