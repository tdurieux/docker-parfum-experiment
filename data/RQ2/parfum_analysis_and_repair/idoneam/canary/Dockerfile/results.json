{
  "startTime": 1674255310146,
  "endTime": 1674255310781,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 22,
        "columnEnd": 52
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 5
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 5
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 22,
        "columnEnd": 52
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 5
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 5
      }
    }
  ],
  "repairedDockerfile": "FROM python:3.10-slim-bullseye\n\n# Add testing to get newer SQLite (ugh)\nRUN echo 'deb http://http.us.debian.org/debian/ testing non-free contrib main' >> /etc/apt/sources.list\n\n# Install base apt dependencies\nRUN apt-get update && apt-get install --no-install-recommends -y git sqlite3 && rm -rf /var/lib/apt/lists/*;\n\n# Install auxiliary dependencies (for GL, Tex, etc.)\nRUN apt-get install --no-install-recommends -y \\\n  libgl1-mesa-glx \\\n  texlive-latex-extra \\\n  texlive-fonts-extra \\\n  texlive-lang-greek \\\n  dvipng \\\n  ffmpeg \\\n  gcc && rm -rf /var/lib/apt/lists/*;\n\n# Configure Git settings for update command\nRUN git config --global user.name \"Martlet\"\nRUN git config --global user.email \"idoneam.collective@gmail.com\"\n\n# Install requirements with pip to use Docker cache independent of project metadata\nCOPY requirements.txt /mnt/\nRUN pip install --no-cache-dir -r /mnt/requirements.txt\n\nWORKDIR /mnt/canary\nCMD [\"python3.10\", \"Main.py\"]\n"
}