{
  "startTime": 1674252630934,
  "endTime": 1674252631830,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 2,
        "columnEnd": 28
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 2,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 2,
        "columnEnd": 48
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 2,
        "columnEnd": 26
      }
    }
  ],
  "repairedDockerfile": "# 2048 SHA256:nThbg6kXUpJWGl7E1IGOCspRomTxdCARLviKw6E5SY8 github.com (RSA)\nARG GITHUB_KNOWN_HOSTS=\"github.com ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ==\"\n\nFROM node:gallium-buster-slim AS pompa-build\n\nARG GITHUB_KNOWN_HOSTS\n\nRUN set -eux; \\\n  apt-get update; \\\n  apt-get install --no-install-recommends -y git curl bash wget adduser; \\\n  apt-get -y --purge autoremove; \\\n  apt-get -y clean; \\\n  rm -rf /var/lib/apt/lists/*; \\\n  rm -rf /usr/share/man/*; \\\n  rm -rf /usr/share/doc/*; \\\n  rm -rf /var/tmp/*; \\\n  rm -rf /tmp/*; \\\n  find /var/log -type f -regex '.*\\.\\([0-9]\\|gz\\)$' -print0 | xargs -0 rm -f; \\\n  find /var/log -type f -print0 | xargs -0 truncate -s 0\n\nRUN set -eux; \\\n  npm -g install npm@latest; npm cache clean --force; \\\n  npm -g cache clean --force; \\\n  npm install -g ember-cli\n\nRUN set -eux; \\\n  addgroup --system --gid 500 builder; \\\n  adduser --system --home /builder --no-create-home --gid 500 --uid 500 builder; \\\n  mkdir -p /builder /builder/bin; \\\n  chown builder:builder -R /builder\n\nWORKDIR /builder\n\nUSER builder\n\nENV PATH=/builder/bin:$PATH\n\nRUN set -eux ; \\\n  mkdir -p /builder/.ssh ; \\\n  echo \"${GITHUB_KNOWN_HOSTS}\" > /builder/.ssh/known_hosts\n\nCOPY --chown=builder pompa/package*.json ./\n\nRUN npm ci --no-audit\n\nCOPY --chown=builder pompa/ ./\nCOPY --chown=builder config/ ./config/\n\nRUN ember build --environment=production\n\nFROM nginx:mainline-alpine\n\nRUN apk add --update --no-cache \\\n  gomplate\n\nCOPY --from=pompa-build /builder/dist/ /var/www/pompa-admin/\n\nRUN rm -rf /var/www/default\n\nRUN set -eux; \\\n  mkdir /var/www/pompa-tmp; \\\n  chmod u=rwx,g=rx,o=rx /var/www/pompa-tmp; \\\n  chown 500:500 /var/www/pompa-tmp\n\nVOLUME /var/www/pompa-tmp\n\nCOPY error-pages/ /var/www/error-pages/\n\nCOPY pompa-admin/ /var/www/pompa-admin/\nCOPY pompa-public/ /var/www/pompa-public/\n\nCOPY nginx/ /etc/nginx/\n\nRUN set -eux; \\\n  mkdir -p /spool/nginx/proxy-temp; \\\n  mkdir -p /etc/nginx/private; \\\n  chmod u=rwx,g=,o= /spool/nginx/proxy-temp; \\\n  chown nginx:nginx /spool/nginx/proxy-temp; \\\n  chmod u=rwx,g=,o= /etc/nginx/private; \\\n  chown nginx:nginx /etc/nginx/private\n\nVOLUME /spool/nginx/proxy-temp\nVOLUME /etc/nginx/private\n\nCOPY docker-entrypoint.sh /usr/local/bin/docker-entrypoint.sh\n\nENTRYPOINT [\"docker-entrypoint.sh\"]\n"
}