{
  "startTime": 1674252136859,
  "endTime": 1674252138028,
  "originalSmells": [
    {
      "rule": "gemUpdateSystemRmRootGem",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 2,
        "columnEnd": 22
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ruby:3.1-alpine\n\nENV POMPA_USER pompa\nENV POMPA_GROUP pompa\nENV POMPA_HOME /app\n\nRUN set -eux; \\\n  apk add --update --no-cache \\\n    libxml2 \\\n    libxslt \\\n    libsodium \\\n    postgresql-libs \\\n    supervisor \\\n    su-exec \\\n    tzdata; \\\n  rm -rf /usr/share/info/*; \\\n  rm -rf /usr/share/man/*; \\\n  rm -rf /usr/share/doc/*\n\nRUN set -eux; \\\n  addgroup -S -g 500 $POMPA_GROUP; \\\n  adduser -S -h $POMPA_HOME -H -D -G $POMPA_GROUP -u 500 $POMPA_USER; \\\n  mkdir -p $POMPA_HOME\n\nWORKDIR $POMPA_HOME\n\nCOPY pompa-api/Gemfile ./\nCOPY pompa-api/Gemfile.lock ./\n\nENV BUNDLE_JOBS=4\nENV BUNDLE_RETRY=3\n\nENV RAILS_ENV production\nENV RAILS_LOG_TO_STDOUT true\n\nRUN set -eux; \\\n  echo \"gem: --no-document\" > .gemrc; \\\n  gem update --system; rm -rf /root/.gem; \\\n  gem install bundler rake; \\\n  bundle config --global frozen 1; \\\n  bundle config --global set without 'development test'\n\nRUN set -eux; \\\n  apk add --update --no-cache \\\n    build-base \\\n    libxml2-dev \\\n    libxslt-dev \\\n    libsodium-dev \\\n    postgresql-dev; \\\n  bundle install; \\\n  apk del --no-cache \\\n    build-base \\\n    libxml2-dev \\\n    libxslt-dev \\\n    libsodium-dev \\\n    postgresql-dev; \\\n  rm -rf /usr/share/info/*; \\\n  rm -rf /usr/share/man/*; \\\n  rm -rf /usr/share/doc/*; \\\n  rm -rf /var/tmp/*; \\\n  rm -rf /tmp/*; \\\n  find /var/log -type f -regex '.*\\.\\([0-9]\\|gz\\)$' -print0 | xargs -0 rm -f; \\\n  find /var/log -type f -exec truncate -s 0 {} \\;\n\nCOPY pompa-api/ ./\nCOPY config/ ./config/\n\nRUN ./genrevision.sh\n\nRUN set -eux; \\\n  mkdir -p $POMPA_HOME/tmp/shared; \\\n  chown $POMPA_USER:$POMPA_GROUP -R $POMPA_HOME\n\nENV SHARED_TMPDIR=$POMPA_HOME/tmp/shared\n\nVOLUME /app/storage\nVOLUME /app/tmp/shared\n\nRUN mkdir -p /usr/local/wrappers\nCOPY wrapper.sh /usr/local/wrappers/.wrapper.sh\n\nRUN set -eux; \\\n  for i in /usr/local/bundle/bin/*; \\\n    do ln -s /usr/local/wrappers/.wrapper.sh /usr/local/wrappers/`basename $i`; \\\n  done\nENV PATH=\"/usr/local/wrappers:$PATH\"\n\nCOPY supervisord.conf /etc/supervisord.conf\nCOPY docker-entrypoint.sh /usr/local/bin/docker-entrypoint.sh\nCOPY docker-readiness.sh /usr/local/bin/docker-readiness.sh\nCOPY docker-liveness.sh /usr/local/bin/docker-liveness.sh\n\nENTRYPOINT [\"docker-entrypoint.sh\"]\n"
}