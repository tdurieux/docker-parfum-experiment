{
  "startTime": 1674251339893,
  "endTime": 1674251340493,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 90
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 113
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 72
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.14\n\nARG KUBECTL_VERSION=v1.21.2\nARG HELM_VERSION=v3.6.1\nARG BATS_VERSION=1.3.0\n\n# Add packages\nRUN apk --no-cache add \\\n    curl \\\n    git \\\n    libc6-compat \\\n    openssh-client \\\n    bash\n\n# Install BATS\nRUN curl -f -LO \"https://github.com/bats-core/bats-core/archive/refs/tags/v$BATS_VERSION.zip\" && \\\n\tunzip -q -d /tmp \"v$BATS_VERSION.zip\" && \\\n\tcd \"/tmp/bats-core-$BATS_VERSION\" && \\\n\t./install.sh /usr/local && \\\n\trm -rf \"/tmp/bats-core-$BATS_VERSION\"\n\n# Install kubectl\nRUN curl -f -LO \"https://storage.googleapis.com/kubernetes-release/release/$KUBECTL_VERSION/bin/linux/amd64/kubectl\" && \\\n\tchmod +x kubectl && \\\n\tmv kubectl /usr/local/bin/\n\n# Install Helm\nRUN curl -f -LO \"https://get.helm.sh/helm-$HELM_VERSION-linux-amd64.tar.gz\" && \\\n\tmkdir -p \"/usr/local/helm-$HELM_VERSION\" && \\\n\ttar -xzf \"helm-$HELM_VERSION-linux-amd64.tar.gz\" -C \"/usr/local/helm-$HELM_VERSION\" && \\\n\tln -s \"/usr/local/helm-$HELM_VERSION/linux-amd64/helm\" /usr/local/bin/helm && \\\n\trm -f \"helm-$HELM_VERSION-linux-amd64.tar.gz\"\n\n# Work directory.\n# Use the same UID than Jenkins:\n# for Jenkins versions < 2.62, this is 1000\nRUN adduser -D -u 10000 testing\nUSER testing\nWORKDIR /home/testing\n\n# Initialize the Helm client (Helm 2.x)\n# RUN helm init --client-only --skip-refresh\n\n# Add the library\nCOPY ./lib /home/testing/lib\n"
}