diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/gfdrr/thinkhazard/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/gfdrr/thinkhazard/Dockerfile/repaired.Dockerfile
index b107a36..72dc7dd 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/gfdrr/thinkhazard/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/gfdrr/thinkhazard/Dockerfile/repaired.Dockerfile
@@ -9,7 +9,7 @@ ENV PYTHONDONTWRITEBYTECODE 1
 ENV PYTHONUNBUFFERED 1
 
 # install middleware
-RUN apt-get update && apt-get install -y \
+RUN apt-get update && apt-get install --no-install-recommends -y \
     # Install postgis for shp2pgsql as ogr2ogr from distrib is not compatible with PostgreSQL 12
     postgis \
     git python-numpy gdal-bin libgdal-dev tidy gnupg2 unzip \
@@ -17,7 +17,7 @@ RUN apt-get update && apt-get install -y \
     gconf-service libasound2 libatk1.0-0 libc6 libcairo2 libcups2 libdbus-1-3 libexpat1 libfontconfig1 libgcc1 libgconf-2-4 libgdk-pixbuf2.0-0 libglib2.0-0 libgtk-3-0 libnspr4 libpango-1.0-0 libpangocairo-1.0-0 libstdc++6 libx11-6 libx11-xcb1 libxcb1 libxcomposite1 libxcursor1 libxdamage1 libxext6 libxfixes3 libxi6 libxrandr2 libxrender1 libxss1 libxtst6 ca-certificates fonts-liberation libappindicator1 libnss3 lsb-release xdg-utils wget \
     && wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add - \
     && echo "deb http://apt.postgresql.org/pub/repos/apt/ buster-pgdg main" >  /etc/apt/sources.list.d/pgdg.list \
-    && apt-get update && apt-get install -y postgresql-client-12 \
+    && apt-get update && apt-get install --no-install-recommends -y postgresql-client-12 \
     && rm -rf /var/lib/apt/lists/*
 
 ENV HOME=/home/user \
@@ -63,25 +63,25 @@ ENV AWS_ENDPOINT_URL= \
 ########################
 FROM base as builder
 
-RUN apt-get update && apt-get install -y \
+RUN apt-get update && apt-get install --no-install-recommends -y \
     gettext \
     make \
-    curl
+    curl && rm -rf /var/lib/apt/lists/*;
 
 RUN \
   . /etc/os-release && \
   echo "deb https://deb.nodesource.com/node_12.x ${VERSION_CODENAME} main" > /etc/apt/sources.list.d/nodesource.list && \
-  curl --silent https://deb.nodesource.com/gpgkey/nodesource.gpg.key | apt-key add - && \
+  curl -f --silent https://deb.nodesource.com/gpgkey/nodesource.gpg.key | apt-key add - && \
   apt-get update && \
-  apt-get install --assume-yes --no-install-recommends \
+  apt-get install -y --assume-yes --no-install-recommends \
     'nodejs=12.*' \
     && \
-  echo "Keep apt cache for now"
+  echo "Keep apt cache for now" && rm -rf /var/lib/apt/lists/*;
   #apt-get clean && \
   #rm --recursive --force /var/lib/apt/lists/*
 
 COPY package.json /opt/thinkhazard/
-RUN cd /opt/thinkhazard/ && npm install
+RUN cd /opt/thinkhazard/ && npm install && npm cache clean --force;
 ENV PATH=${PATH}:${NODE_PATH}/.bin/
 
 COPY ./requirements-dev.txt /app/requirements-dev.txt
@@ -97,7 +97,7 @@ RUN TX_USR=$TX_USR \
     TX_PWD=$TX_PWD \
     make -f docker.mk build
 
-RUN pip install --no-deps -e .
+RUN pip install --no-cache-dir --no-deps -e .
 
 RUN chmod 777 /app
 USER www-data
@@ -112,7 +112,7 @@ COPY --from=builder /opt/thinkhazard/ /opt/thinkhazard/
 
 WORKDIR /app
 COPY --from=builder /app/ /app/
-RUN pip install --no-deps -e .
+RUN pip install --no-cache-dir --no-deps -e .
 
 USER www-data
 CMD ["sh", "-c", "pserve ${INI_FILE} -n main"]