{
  "startTime": 1674216206991,
  "endTime": 1674216209289,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 73,
        "lineEnd": 73,
        "columnStart": 2,
        "columnEnd": 68
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 83,
        "lineEnd": 83,
        "columnStart": 28,
        "columnEnd": 39
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 99,
        "lineEnd": 99,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 114,
        "lineEnd": 114,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 75,
        "lineEnd": 76,
        "columnStart": 2,
        "columnEnd": 17
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 16,
        "columnStart": 22,
        "columnEnd": 441
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 25,
        "columnEnd": 64
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 65,
        "lineEnd": 68,
        "columnStart": 22,
        "columnEnd": 8
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 65,
        "lineEnd": 68,
        "columnStart": 22,
        "columnEnd": 8
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 75,
        "lineEnd": 76,
        "columnStart": 2,
        "columnEnd": 17
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "##########################################\n# Common base for build/test and runtime #\n##########################################\n\nFROM python:3.8-slim-buster as base\n\n# set environment variables\nENV PYTHONDONTWRITEBYTECODE 1\nENV PYTHONUNBUFFERED 1\n\n# install middleware\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    # Install postgis for shp2pgsql as ogr2ogr from distrib is not compatible with PostgreSQL 12\n    postgis \\\n    git python-numpy gdal-bin libgdal-dev tidy gnupg2 unzip \\\n    # pyppeteer dependencies (cf https://github.com/puppeteer/puppeteer/issues/1345)\n    gconf-service libasound2 libatk1.0-0 libc6 libcairo2 libcups2 libdbus-1-3 libexpat1 libfontconfig1 libgcc1 libgconf-2-4 libgdk-pixbuf2.0-0 libglib2.0-0 libgtk-3-0 libnspr4 libpango-1.0-0 libpangocairo-1.0-0 libstdc++6 libx11-6 libx11-xcb1 libxcb1 libxcomposite1 libxcursor1 libxdamage1 libxext6 libxfixes3 libxi6 libxrandr2 libxrender1 libxss1 libxtst6 ca-certificates fonts-liberation libappindicator1 libnss3 lsb-release xdg-utils wget \\\n    && wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add - \\\n    && echo \"deb http://apt.postgresql.org/pub/repos/apt/ buster-pgdg main\" >  /etc/apt/sources.list.d/pgdg.list \\\n    && apt-get update && apt-get install --no-install-recommends -y postgresql-client-12 \\\n    && rm -rf /var/lib/apt/lists/*\n\nENV HOME=/home/user \\\n    NODE_PATH=/opt/thinkhazard/node_modules\n\nRUN mkdir -p /home/user/.local/share/pyppeteer/ && chmod -R 777 /home/user\n\n# install dependencies\nCOPY ./requirements.txt /app/requirements.txt\nRUN pip install --no-cache-dir -r /app/requirements.txt \\\n    && rm --recursive --force /tmp/* /var/tmp/* $HOME/.cache/* \\\n    && pyppeteer-install\n\n# Administrative divisions cache\nRUN mkdir /tmp/admindivs && chmod 777 /tmp/admindivs\nVOLUME /tmp/admindivs\n\n# Layer cache\nRUN mkdir /tmp/hazardsets && chmod 777 /tmp/hazardsets\nVOLUME /tmp/hazardsets\n\n# Geonode API cache\nRUN mkdir /tmp/geonode_api && chmod 777 /tmp/geonode_api\nVOLUME /tmp/geonode_api\n\n# PostgreSQL backups\nRUN mkdir /tmp/backups && chmod 777 /tmp/backups\nVOLUME /tmp/backups\n\nENV AWS_ENDPOINT_URL= \\\n    GEONODE_URL=tbd \\\n    GEONODE_USERNAME=tbd \\\n    GEONODE_API_KEY=tbd \\\n    INI_FILE=c2c://production.ini \\\n    LOG_LEVEL_ROOT=WARN \\\n    LOG_LEVEL_THINKHAZARD=WARN \\\n    LOG_LEVEL_SQLALCHEMY=WARN \\\n    USE_CACHE=FALSE \\\n    TX_BRANCH=test\n\n########################\n# Build and test image #\n########################\nFROM base as builder\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    gettext \\\n    make \\\n    curl && rm -rf /var/lib/apt/lists/*;\n\nRUN \\\n  . /etc/os-release && \\\n  echo \"deb https://deb.nodesource.com/node_12.x ${VERSION_CODENAME} main\" > /etc/apt/sources.list.d/nodesource.list && \\\n  curl -f --silent https://deb.nodesource.com/gpgkey/nodesource.gpg.key | apt-key add - && \\\n  apt-get update && \\\n  apt-get install -y --assume-yes --no-install-recommends \\\n    'nodejs=12.*' \\\n    && \\\n  echo \"Keep apt cache for now\" && rm -rf /var/lib/apt/lists/*;\n  #apt-get clean && \\\n  #rm --recursive --force /var/lib/apt/lists/*\n\nCOPY package.json /opt/thinkhazard/\nRUN cd /opt/thinkhazard/ && npm install && npm cache clean --force;\nENV PATH=${PATH}:${NODE_PATH}/.bin/\n\nCOPY ./requirements-dev.txt /app/requirements-dev.txt\nRUN pip install --no-cache-dir -r /app/requirements-dev.txt \\\n    && rm --recursive --force /tmp/pip* /var/tmp/* $HOME/.cache/*\n\nWORKDIR /app\nCOPY . /app/\n\nARG TX_USR\nARG TX_PWD\nRUN TX_USR=$TX_USR \\\n    TX_PWD=$TX_PWD \\\n    make -f docker.mk build\n\nRUN pip install --no-cache-dir --no-deps -e .\n\nRUN chmod 777 /app\nUSER www-data\nCMD [\"sh\", \"-c\", \"pserve ${INI_FILE} -n main\"]\n\n#################\n# Runtime image #\n#################\nFROM base as app\n\nCOPY --from=builder /opt/thinkhazard/ /opt/thinkhazard/\n\nWORKDIR /app\nCOPY --from=builder /app/ /app/\nRUN pip install --no-cache-dir --no-deps -e .\n\nUSER www-data\nCMD [\"sh\", \"-c\", \"pserve ${INI_FILE} -n main\"]\n"
}