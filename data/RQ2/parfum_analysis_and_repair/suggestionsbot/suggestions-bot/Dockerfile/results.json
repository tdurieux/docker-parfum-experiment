{
  "startTime": 1674254532639,
  "endTime": 1674254533710,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 18,
        "columnEnd": 29
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 20
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nikolaik/python-nodejs:python3.10-nodejs16-alpine AS base\n\n# create working directory for bot\nWORKDIR /opt/suggestions\n\n# add git\nRUN apk update && apk add --no-cache git\n\n### dependencies & builder\nFROM base AS builder\n\n# install production dependencies\nCOPY package.json yarn.lock ./\n\n# install make\nRUN apk add --no-cache g++ make\n\nRUN yarn install --production --pure-lockfile && yarn cache clean;\nRUN cp -RL node_modules /tmp/node_modules\n\n# install all dependencies\nRUN yarn install --pure-lockfile && yarn cache clean;\n\n### runner\nFROM base\n\n# copy runtime dependencies\nCOPY --from=builder /tmp/node_modules node_modules\n\n# copy remaining files\nCOPY . .\n\nCMD [\"yarn\", \"start\"]\n"
}