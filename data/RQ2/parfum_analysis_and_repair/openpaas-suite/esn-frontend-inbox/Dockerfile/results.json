{
  "startTime": 1674248463595,
  "endTime": 1674248464115,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 34
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG NODE_VERSION=12.19\nARG NGINX_VERSION=1.19.3\n\n### STAGE 1: Build the AngularJS app ###\n\nFROM node:${NODE_VERSION} as build-stage\n\nARG BASE_HREF=/inbox/\nARG APP_GRID_ITEMS=\"[{ \\\"name\\\": \\\"Calendar\\\", \\\"url\\\": \\\"/calendar/\\\" }, { \\\"name\\\": \\\"Contacts\\\", \\\"url\\\": \\\"/contacts/\\\" }, { \\\"name\\\": \\\"Inbox\\\", \\\"url\\\": \\\"/inbox/\\\" }]\"\n\nWORKDIR /app\n\nCOPY package.json /app/\n\nRUN npm install -g npm@7.24.2 && npm cache clean --force;\n\nRUN npm install --legacy-peer-deps && npm cache clean --force;\n\nCOPY . .\n\n# Production mode build\nRUN npm run build:prod\n\n### STAGE 2: Add Nginx for hosting the AngularJS app ###\n\nFROM nginx:${NGINX_VERSION} as production-stage\n\n# Removes the default nginx html files\nRUN rm -rf /usr/share/nginx/html/*\n\n# Copy the bundle\nCOPY --from=build-stage /app/dist /usr/share/nginx/html\n\n# Copy the default nginx.conf\nCOPY nginx.conf /etc/nginx/conf.d/default.conf\n\nEXPOSE 80\n\n# Start Nginx server\nCMD [\"/bin/bash\", \"-c\", \"nginx -g \\\"daemon off;\\\"\"]\n"
}