diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/bcdevops/openshift-tools/provisioning/jenkins-slaves/zap/rhel7/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/bcdevops/openshift-tools/provisioning/jenkins-slaves/zap/rhel7/Dockerfile/repaired.Dockerfile
index efa9e7b..f559b06 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/bcdevops/openshift-tools/provisioning/jenkins-slaves/zap/rhel7/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/bcdevops/openshift-tools/provisioning/jenkins-slaves/zap/rhel7/Dockerfile/repaired.Dockerfile
@@ -5,7 +5,7 @@ EXPOSE 8080
 ENV PATH=$HOME/.local/bin/:$PATH \
     LC_ALL=en_US.UTF-8 \
     LANG=en_US.UTF-8
-   
+
 ENV SUMMARY="OWASP ZAP Jenkins slave." \
     DESCRIPTION="Jenkins pipeline slave with OWASP ZAP."
 
@@ -16,14 +16,14 @@ LABEL summary="$SUMMARY" \
       io.openshift.expose-services="8080:http" \
       io.openshift.tags="builder,jenkins-jnlp-owasp-zap,jenkins-jnlp" \
       release="1"
-      
+
 # NOTES:
 # We need to call 2 (!) yum commands before being able to enable repositories properly
 # This is a workaround for https://bugzilla.redhat.com/show_bug.cgi?id=1479388
 # Chrome install info: https://access.redhat.com/discussions/917293
 RUN yum repolist > /dev/null && \
     yum install -y yum-utils && \
-    yum-config-manager --disable \* &> /dev/null && \
+    yum-config-manager --disable \* & rm -rf /var/cache/yum > /dev/null && \
     yum-config-manager --enable rhel-server-rhscl-7-rpms && \
     yum-config-manager --enable rhel-7-server-rpms && \
     yum-config-manager --enable rhel-7-server-extras-rpms && \
@@ -39,19 +39,19 @@ RUN UNINSTALL_PKGS="java-1.8.0-openjdk-headless.i686 libstdc++-4.8.5-16.el7.i686
     make automake autoconf gcc gcc-c++ libstdc++ libstdc++-devel \
     java-1.8.0-openjdk.x86_64 java-1.8.0-openjdk-headless.x86_64 java-1.8.0-openjdk-devel.x86_64 \
     wget nano curl git gzip gettext tar xorg-x11-server-Xvfb xterm vnc-server \
-    net-tools python27-python-pip firefox nss_wrapper  && \
-    yum -y clean all
+    net-tools python27-python-pip firefox nss_wrapper && \
+    yum -y clean all && rm -rf /var/cache/yum
 
 RUN wget https://pypi.python.org/packages/source/s/setuptools/setuptools-7.0.tar.gz --no-check-certificate && \
     tar xzf setuptools-7.0.tar.gz && \
     cd setuptools-7.0 && \
     python setup.py install && \
     wget https://bootstrap.pypa.io/get-pip.py && \
-    python get-pip.py
+    python get-pip.py && rm setuptools-7.0.tar.gz
 
-RUN pip install --upgrade pip && \
-    pip install zapcli && \
-    pip install python-owasp-zap-v2.4
+RUN pip install --no-cache-dir --upgrade pip && \
+    pip install --no-cache-dir zapcli && \
+    pip install --no-cache-dir python-owasp-zap-v2.4
 
 COPY rpms/*.rpm ./
 
@@ -84,11 +84,11 @@ COPY policies /var/lib/jenkins/.ZAP/policies/
 COPY .xinitrc /var/lib/jenkins/
 
 WORKDIR /zap
-# Download and expand the latest stable release 
-RUN curl -s https://raw.githubusercontent.com/zaproxy/zap-admin/master/ZapVersions-dev.xml | xmlstarlet sel -t -v //url |grep -i Linux | wget -q --content-disposition -i - -O - | tar zx --strip-components=1 && \
-    curl -s -L https://bitbucket.org/meszarv/webswing/downloads/webswing-2.3-distribution.zip | jar -x && \
+# Download and expand the latest stable release
+RUN curl -f -s https://raw.githubusercontent.com/zaproxy/zap-admin/master/ZapVersions-dev.xml | xmlstarlet sel -t -v //url | grep -i Linux | wget -q --content-disposition -i - -O - | tar zx --strip-components=1 && \
+    curl -f -s -L https://bitbucket.org/meszarv/webswing/downloads/webswing-2.3-distribution.zip | jar -x && \
     touch AcceptedLicense
-    
+
 ADD webswing.config /zap/webswing-2.3/webswing.config
 
 RUN chown -v -R root:root /zap && \