{
  "startTime": 1674218934984,
  "endTime": 1674218935724,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 90
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 93
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 6,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 44
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# This dockerfile builds the zap stable release\nFROM centos:centos7\nMAINTAINER Deven Phillips <deven.phillips@redhat.com>\n\nRUN yum install -y epel-release && \\\n    yum clean all && rm -rf /var/cache/yum\nRUN yum install -y redhat-rpm-config \\\n    make automake autoconf gcc gcc-c++ \\\n    libstdc++ libstdc++-devel \\\n    java-1.8.0-openjdk wget curl \\\n    xmlstarlet git x11vnc gettext tar \\\n    xorg-x11-server-Xvfb openbox xterm \\\n    net-tools python-pip \\\n    firefox nss_wrapper java-1.8.0-openjdk-headless \\\n    java-1.8.0-openjdk-devel nss_wrapper git && \\\n    yum clean all && rm -rf /var/cache/yum\n\nRUN pip install --no-cache-dir --upgrade pip\nRUN pip install --no-cache-dir zapcli\n# Install latest dev version of the python API\nRUN pip install --no-cache-dir python-owasp-zap-v2.4\n\nRUN mkdir -p /zap/wrk\nADD zap /zap/\n\nRUN mkdir -p /var/lib/jenkins/.vnc\n\n# Copy the entrypoint\nCOPY configuration/* /var/lib/jenkins/\nCOPY configuration/run-jnlp-client /usr/local/bin/run-jnlp-client\n\nENV JAVA_HOME /usr/lib/jvm/java-8-openjdk-amd64/\nENV PATH $JAVA_HOME/bin:/zap:$PATH\nENV ZAP_PATH /zap/zap.sh\nENV HOME /var/lib/jenkins\n\n# Default port for use with zapcli\nENV ZAP_PORT 8080\n\nCOPY policies /var/lib/jenkins/.ZAP/policies/\nCOPY .xinitrc /var/lib/jenkins/\n\nWORKDIR /zap\n# Download and expand the latest stable release\nRUN curl -f -s https://raw.githubusercontent.com/zaproxy/zap-admin/master/ZapVersions-dev.xml | xmlstarlet sel -t -v //url | grep -i Linux | wget -q --content-disposition -i - -O - | tar zx --strip-components=1 && \\\n    curl -f -s -L https://bitbucket.org/meszarv/webswing/downloads/webswing-2.3-distribution.zip | jar -x && \\\n    touch AcceptedLicense\nADD webswing.config /zap/webswing-2.3/webswing.config\n\nRUN chown -R root:root /zap && \\\n    chown -R root:root /var/lib/jenkins && \\\n    chmod -R 777 /var/lib/jenkins && \\\n    chmod -R 777 /zap && \\\n    chmod 777 /\n\n\nWORKDIR /var/lib/jenkins\n\n# Run the Jenkins JNLP client\nENTRYPOINT [\"/usr/local/bin/run-jnlp-client\"]\n"
}