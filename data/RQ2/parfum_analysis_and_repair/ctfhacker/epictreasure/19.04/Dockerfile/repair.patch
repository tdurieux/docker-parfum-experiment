diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/ctfhacker/epictreasure/19.04/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/ctfhacker/epictreasure/19.04/Dockerfile/repaired.Dockerfile
index dd8b046..4b03d5c 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/ctfhacker/epictreasure/19.04/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/ctfhacker/epictreasure/19.04/Dockerfile/repaired.Dockerfile
@@ -8,19 +8,19 @@ ENV test false
 MAINTAINER Maintainer Cory Duplantis
 
 RUN apt update && \
-    apt -y install locales
+    apt -y --no-install-recommends install locales && rm -rf /var/lib/apt/lists/*;
 
 RUN locale-gen en_US.UTF-8
-ENV LANG en_US.UTF-8  
-ENV LANGUAGE en_US:en  
-ENV LC_ALL en_US.UTF-8     
+ENV LANG en_US.UTF-8 
+ENV LANGUAGE en_US:en 
+ENV LC_ALL en_US.UTF-8    
 
 RUN mkdir -p /root/tools
 
 RUN apt update && \
-    apt -y install python-dev python-pip && \
-    apt -y install python3-dev python3-pip && \
-    apt clean
+    apt -y --no-install-recommends install python-dev python-pip && \
+    apt -y --no-install-recommends install python3-dev python3-pip && \
+    apt clean && rm -rf /var/lib/apt/lists/*;
 
 RUN apt update && \
     apt install --no-install-recommends -y build-essential curl gdb \
@@ -31,7 +31,7 @@ RUN apt update && \
     libjpeg8 libjpeg62-dev libfreetype6 libfreetype6-dev \
     squashfs-tools zlib1g-dev liblzma-dev python-magic cmake \
     z3 python-lzma net-tools strace ltrace \
-    gcc-multilib g++-multilib ruby-full binutils-mips-linux-gnu sudo
+    gcc-multilib g++-multilib ruby-full binutils-mips-linux-gnu sudo && rm -rf /var/lib/apt/lists/*;
 
 
 
@@ -45,19 +45,19 @@ RUN cd /root && \
 # Upgrade pip and ipython
 RUN python -m pip install --upgrade pip && \
     python3 -m pip install --upgrade pip && \
-    pip2 install -Iv ipython==5.3.0  && \
-    pip3 install ipython
+    pip2 install --no-cache-dir -Iv ipython==5.3.0 && \
+    pip3 install --no-cache-dir ipython
 
 # Install radare
 RUN git clone --depth 1 https://github.com/radare/radare2 && \
     cd radare2 && \
     ./sys/install.sh && \
     make install && \
-    pip2 install r2pipe && \
-    pip3 install r2pipe
+    pip2 install --no-cache-dir r2pipe && \
+    pip3 install --no-cache-dir r2pipe
 
 # Install pwntools and pwndbg
-RUN pip2 install git+https://github.com/Gallopsled/pwntools && \
+RUN pip2 install --no-cache-dir git+https://github.com/Gallopsled/pwntools && \
     cd /root/tools && \
     git clone --depth 1 https://github.com/pwndbg/pwndbg && \
     cd pwndbg && \
@@ -67,7 +67,7 @@ RUN pip2 install git+https://github.com/Gallopsled/pwntools && \
 RUN dpkg --add-architecture i386 && \
     apt update && \
     apt --no-install-recommends -y install libc6:i386 libncurses5:i386 libstdc++6:i386 libc6-dev-i386 && \
-    apt clean
+    apt clean && rm -rf /var/lib/apt/lists/*;
 
 # Install apktool
 RUN apt update && \
@@ -77,13 +77,13 @@ RUN apt update && \
     mv apktool_2.0.2.jar /bin/apktool.jar && \
     mv apktool /bin/ && \
     chmod 755 /bin/apktool && \
-    chmod 755 /bin/apktool.jar
-    
-# Install PIL 
-RUN pip install Pillow 
+    chmod 755 /bin/apktool.jar && rm -rf /var/lib/apt/lists/*;
+
+# Install PIL
+RUN pip install --no-cache-dir Pillow
 
 # Install frida and the frida tools
-RUN pip install frida frida-tools
+RUN pip install --no-cache-dir frida frida-tools
 
 # Install ROPgadget
 RUN cd /root/tools && \
@@ -94,22 +94,22 @@ RUN cd /root/tools && \
 # Install fzf
 RUN cd /root/tools && \
     git clone --depth 1 https://github.com/junegunn/fzf.git /root/.fzf && \
-    /root/.fzf/install --all --key-bindings --completion 
+    /root/.fzf/install --all --key-bindings --completion
 
 RUN apt-get update && \
-    apt-get install --no-install-recommends -y software-properties-common
+    apt-get install --no-install-recommends -y software-properties-common && rm -rf /var/lib/apt/lists/*;
 
 # Install qemu with multiarchs
 RUN apt --no-install-recommends -y install qemu qemu-user qemu-user-static && \
     apt -m update && \
-    apt install -y libc6-arm64-cross libcc6-dev-i386 \
+    apt install --no-install-recommends -y libc6-arm64-cross libcc6-dev-i386 \
     libc6-i386 libffi-dev libssl-dev libncurses5-dev && \
     apt --no-install-recommends -y install 'binfmt*' && \
     apt --no-install-recommends -y install libc6-armhf-armel-cross && \
     apt --no-install-recommends -y install debian-keyring && \
     apt --no-install-recommends -y install debian-archive-keyring && \
     apt --no-install-recommends -y install emdebian-archive-keyring && \
-    apt -m update; echo 0 && \
+    apt -m update; rm -rf /var/lib/apt/lists/*; echo 0 && \
     apt --no-install-recommends -y install libc6-mipsel-cross && \
     apt --no-install-recommends -y install libc6-armel-cross libc6-dev-armel-cross && \
     apt --no-install-recommends -y install libc6-dev-armhf-cross && \
@@ -127,12 +127,12 @@ RUN wget https://sh.rustup.rs && \
     rm index.html
 
 # Install ripgrep from Releases
-RUN curl -LO https://github.com/BurntSushi/ripgrep/releases/download/0.9.0/ripgrep_0.9.0_amd64.deb && \
+RUN curl -f -LO https://github.com/BurntSushi/ripgrep/releases/download/0.9.0/ripgrep_0.9.0_amd64.deb && \
     dpkg -i ripgrep_0.9.0_amd64.deb && \
     rm ripgrep_0.9.0_amd64.deb
 
 # Bash 4.4 for vim mode
-# RUN wget http://ftp.gnu.org/gnu/bash/bash-4.4.tar.gz && \ 
+# RUN wget http://ftp.gnu.org/gnu/bash/bash-4.4.tar.gz && \
     # tar zxvf bash-4.4.tar.gz && \
     # cd bash-4.4 && \
     # ./configure && \
@@ -149,9 +149,9 @@ RUN gem install one_gadget
 
 # Install arm_now
 RUN apt update && \
-    apt install e2tools && \
-    pip3 install https://github.com/nongiach/arm_now/archive/master.zip --upgrade && \
-    apt clean
+    apt install -y --no-install-recommends e2tools && \
+    pip3 install --no-cache-dir https://github.com/nongiach/arm_now/archive/master.zip --upgrade && \
+    apt clean && rm -rf /var/lib/apt/lists/*;
 
 # Install capstone, keystone, unicorn
 RUN cd /root/tools && \
@@ -176,12 +176,12 @@ RUN cd /root/tools && \
     rm DynamoRIO*tar.gz && \
     wget https://github.com/DynamoRIO/dynamorio/releases/download/cronbuild-7.91.18058/DynamoRIO-i386-Linux-7.91.18058-0.tar.gz && \
     tar zxvf DynamoRIO*tar.gz && \
-    rm DynamoRIO*tar.gz 
+    rm DynamoRIO*tar.gz
 
 # Install Valgrind
 Run apt update && \
-    apt install valgrind && \
-    apt clean
+    apt install -y --no-install-recommends valgrind && \
+    apt clean && rm -rf /var/lib/apt/lists/*;
 
 # Install gdb 8.2
 # Run apt update && \
@@ -228,7 +228,7 @@ RUN wget -O ~/.gdbinit-gef-extras.sh -q https://github.com/hugsy/gef/raw/master/
 
 # Install go
 RUN wget https://dl.google.com/go/go1.12.6.linux-amd64.tar.gz && \
-    tar -C /usr/local -xzf go*tar.gz 
+    tar -C /usr/local -xzf go*tar.gz && rm go*tar.gz
 
 COPY .tmux.conf /root/.tmux.conf
 COPY test.sh /root/test.sh