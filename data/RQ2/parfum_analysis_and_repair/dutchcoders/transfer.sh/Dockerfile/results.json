{
  "startTime": 1674218087834,
  "endTime": 1674218089600,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 24
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Default to Go 1.17\nARG GO_VERSION=1.17\nFROM golang:${GO_VERSION}-alpine as build\n\n# Necessary to run 'go get' and to compile the linked binary\nRUN apk add --no-cache git musl-dev\n\nADD . /go/src/github.com/dutchcoders/transfer.sh\n\nWORKDIR /go/src/github.com/dutchcoders/transfer.sh\n\nENV GO111MODULE=on\n\n# build & install server\nRUN CGO_ENABLED=0 go build -tags netgo -ldflags \"-X github.com/dutchcoders/transfer.sh/cmd.Version=$(git describe --tags) -a -s -w -extldflags '-static'\" -o /go/bin/transfersh\n\nARG PUID=5000 \\\n    PGID=5000 \\\n    RUNAS\n\nRUN mkdir -p /tmp/useradd && \\\n    if [ ! -z \"$RUNAS\" ]; then \\\n    echo \"${RUNAS}:x:${PUID}:${PGID}::/nonexistent:/sbin/nologin\" >> /tmp/useradd/passwd && \\\n    echo \"${RUNAS}:!:::::::\" >> /tmp/useradd/shadow && \\\n    echo \"${RUNAS}:x:${PGID}:\" >> /tmp/useradd/group && \\\n    echo \"${RUNAS}:!::\" >> /tmp/useradd/groupshadow; else touch /tmp/useradd/unused; fi\n\nFROM scratch AS final\nLABEL maintainer=\"Andrea Spacca <andrea.spacca@gmail.com>\"\nARG RUNAS\n\nCOPY --from=build /tmp/useradd/* /etc/\nCOPY --from=build --chown=${RUNAS}  /go/bin/transfersh /go/bin/transfersh\nCOPY --from=build /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/ca-certificates.crt\n\nUSER ${RUNAS}\n\nENTRYPOINT [\"/go/bin/transfersh\", \"--listener\", \":8080\"]\n\nEXPOSE 8080\n"
}