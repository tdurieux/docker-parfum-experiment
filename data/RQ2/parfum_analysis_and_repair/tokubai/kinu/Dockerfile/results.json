{
  "startTime": 1674217911488,
  "endTime": 1674217912610,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 46,
        "columnEnd": 57
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 55
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 43
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 43
      }
    }
  ],
  "repairedDockerfile": "FROM debian:buster-slim\nMAINTAINER Takatoshi Maeda <me@tmd.tw>\n\nENV PATH $PATH:/usr/local/go/bin:/usr/local/go/vendor/bin\n\nWORKDIR /tmp\nRUN env DEBIAN_FRONTEND=noninteractive apt update && \\\n    apt install --no-install-recommends -y libwebp-dev libpng-dev pkg-config \\\n                   git wget build-essential && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get clean\n\nENV LIBJPEG_VERSION=2.1.1\nENV LIBJPEG_DPKG_URL=https://sourceforge.net/projects/libjpeg-turbo/files/${LIBJPEG_VERSION}/libjpeg-turbo-official_${LIBJPEG_VERSION}_amd64.deb/download\nRUN wget $LIBJPEG_DPKG_URL -O libjpeg-turbo-official_${LIBJPEG_VERSION}_amd64.deb && \\\n    dpkg -i libjpeg-turbo-official_${LIBJPEG_VERSION}_amd64.deb && \\\n    ln -fs /opt/libjpeg-turbo/include/*.h /usr/include/ && \\\n    ln -fs /opt/libjpeg-turbo/lib64/lib* /usr/lib/x86_64-linux-gnu/ && \\\n    ldconfig && \\\n    rm -rf /tmp/*\n\nENV IMAGE_MAGICK_VERSION=6.9.12-30\nRUN wget https://download.imagemagick.org/ImageMagick/download/releases/ImageMagick-${IMAGE_MAGICK_VERSION}.tar.gz && \\\n    tar xvzf ImageMagick-${IMAGE_MAGICK_VERSION}.tar.gz && \\\n    cd ImageMagick-${IMAGE_MAGICK_VERSION} && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make && make install && ldconfig && \\\n    rm -rf /tmp/* && rm ImageMagick-${IMAGE_MAGICK_VERSION}.tar.gz\n\nENV GOLANG_VERSION 1.16.5\nENV GOROOT /usr/local/go\nENV GOPATH /usr/local/go/vendor\n\nENV KINU_VERSION 1.0.0\nENV KINU_BIND 0.0.0.0:80\nENV KINU_LOG_LEVEL info\nENV KINU_LOG_FORMAT ltsv\nENV KINU_RESIZE_ENGINE ImageMagick\nENV KINU_STORAGE_TYPE File\nENV KINU_FILE_DIRECTORY /var/local/kinu\n\nWORKDIR /kinu-build\nCOPY . .\nRUN mkdir -p /tmp/golang && \\\n    wget https://storage.googleapis.com/golang/go${GOLANG_VERSION}.linux-amd64.tar.gz -q -P /tmp/golang && \\\n    cd /tmp/golang && \\\n    tar zxf go${GOLANG_VERSION}.linux-amd64.tar.gz && \\\n    mv ./go /usr/local/go && \\\n    cd /kinu-build && \\\n    go build -o /usr/local/bin/kinu . && \\\n    mkdir -p /var/local/kinu && \\\n    rm -rf /usr/local/go /root/.cache /tmp/* && rm go${GOLANG_VERSION}.linux-amd64.tar.gz\n\nCMD [\"kinu\"]\n"
}