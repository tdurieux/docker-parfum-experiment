{
  "startTime": 1674256043667,
  "endTime": 1674256044885,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 95,
        "lineEnd": 95,
        "columnStart": 5,
        "columnEnd": 41
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 96,
        "lineEnd": 96,
        "columnStart": 5,
        "columnEnd": 41
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#/*\n# * Licensed to the OpenAirInterface (OAI) Software Alliance under one or more\n# * contributor license agreements.  See the NOTICE file distributed with\n# * this work for additional information regarding copyright ownership.\n# * The OpenAirInterface Software Alliance licenses this file to You under\n# * the terms found in the LICENSE file in the root of this source tree.\n# *\n# * Unless required by applicable law or agreed to in writing, software\n# * distributed under the License is distributed on an \"AS IS\" BASIS,\n# * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# * See the License for the specific language governing permissions and\n# * limitations under the License.\n# *-------------------------------------------------------------------------------\n# * For more information about the OpenAirInterface (OAI) Software Alliance:\n# *      contact@openairinterface.org\n# */\n#---------------------------------------------------------------------\n#\n# Dockerfile for the Open-Air-Interface HSS service\n#   Valid for CentOS 8\n#\n#---------------------------------------------------------------------\n\n#---------------------------------------------------------------------\n# BUILDER IMAGE\n#---------------------------------------------------------------------\nFROM centos:8 as oai-hss-builder\n\nARG EURECOM_PROXY\nARG BUILD_FOR_CI\nARG CI_SRC_BRANCH\nARG CI_SRC_COMMIT\nARG CI_DEST_BRANCH\n\nRUN yum update -y \\\n  && yum install epel-release -y \\\n  && yum install dnf-plugins-core -y \\\n  && yum config-manager --set-enabled PowerTools \\\n  && yum install -y \\\n    psmisc \\\n    git \\\n  && yum clean all -y \\\n  && rm -rf /var/cache/yum\n\n# Some GIT configuration command quite useful\nRUN /bin/bash -c \"if [[ -v EURECOM_PROXY ]]; then git config --global http.proxy $EURECOM_PROXY; fi\"\nRUN git config --global https.postBuffer 123289600\nRUN git config --global http.sslverify false\n# In normal case, we build out of the develop branch\nRUN /bin/bash -c \"if [[ -v CI_SRC_BRANCH ]]; then git clone https://github.com/OPENAIRINTERFACE/openair-hss.git -b $CI_SRC_BRANCH /openair-hss; else git clone https://github.com/OPENAIRINTERFACE/openair-hss.git -b develop /openair-hss; fi\"\n# For CI, especially for Pull/Merge Requests, we build out of temp merge\nWORKDIR /openair-hss\nRUN /bin/bash -c \"if [[ -v BUILD_FOR_CI ]]; then git config --global user.name \\\"OAI CI\\\"; fi\"\nRUN /bin/bash -c \"if [[ -v BUILD_FOR_CI ]]; then git config --global user.email ci@openairinterface.org; fi\"\nRUN /bin/bash -c \"if [[ -v BUILD_FOR_CI ]]; then git checkout -f $CI_SRC_COMMIT; fi\"\nRUN /bin/bash -c \"if [[ -v BUILD_FOR_CI ]]; then git merge --ff origin/$CI_DEST_BRANCH -m \\\"Temporary merge for CI\\\"; fi\"\n\n# wait for it\nworkdir /\nRUN git clone https://github.com/vishnubob/wait-for-it.git\n\n# Installing and Building HSS\nWORKDIR /openair-hss/scripts\nRUN ./build_hss_rel14 --check-installed-software --force\nRUN cp /usr/local/lib64/libpistache.a /usr/local/lib/libpistache.a\nRUN ./build_hss_rel14 --clean --build-type Release\n\n#---------------------------------------------------------------------\n# TARGET IMAGE\n#---------------------------------------------------------------------\nFROM centos:8 as oai-hss\nENV TZ=Europe/Paris\n# We install some debug tools for the moment in addition of mandatory libraries\nRUN yum update -y \\\n  && yum install epel-release -y \\\n  && yum install dnf-plugins-core -y \\\n  && yum config-manager --set-enabled PowerTools \\\n  && yum install -y \\\n    tzdata \\\n    psmisc \\\n    openssl \\\n    net-tools \\\n    tcpdump \\\n    lksctp-tools \\\n    libuv \\\n    nettle \\\n    gnutls \\\n    libconfig \\\n    libidn \\\n    python2 \\\n    python3 \\\n    python2-pip \\\n    python3-pip \\\n  && yum clean all -y \\\n  && rm -rf /var/cache/yum \\\n  && pip2 install --no-cache-dir --user cassandra-driver \\\n  && pip3 install --no-cache-dir --user cassandra-driver\n\n# Copying executable and generated libraries\nWORKDIR /openair-hss/bin\nCOPY --from=oai-hss-builder /openair-hss/build/hss_rel14/bin/hss oai_hss\n\nCOPY --from=oai-hss-builder /usr/local/lib/libfd* /usr/local/lib/\nCOPY --from=oai-hss-builder /usr/local/lib/freeDiameter/* /usr/local/lib/freeDiameter/\nCOPY --from=oai-hss-builder /usr/local/lib64/libcassandra.* /lib64/\n\n# Copying template configuration files\n# The configuration folder will be flat\nWORKDIR /openair-hss/etc\nCOPY --from=oai-hss-builder /openair-hss/etc/hss_rel14.conf .\nCOPY --from=oai-hss-builder /openair-hss/etc/hss_rel14.json .\nRUN sed -i -e 's#freeDiameter##' hss_rel14.json\nCOPY --from=oai-hss-builder /openair-hss/etc/acl.conf .\nCOPY --from=oai-hss-builder /openair-hss/etc/oss.json .\nCOPY --from=oai-hss-builder /openair-hss/etc/hss_rel14_fd.conf .\nRUN sed -i -e \"s#@PREFIX@/freeDiameter#@PREFIX@#g\" hss_rel14_fd.conf\n\n# Copy the certificate generation script\nWORKDIR /openair-hss/scripts\nCOPY --from=oai-hss-builder /openair-hss/src/hss_rel14/bin/make_certs.sh .\nCOPY --from=oai-hss-builder /openair-hss/scripts/data_provisioning_users .\nCOPY --from=oai-hss-builder /openair-hss/scripts/data_provisioning_mme .\nCOPY --from=oai-hss-builder /wait-for-it/wait-for-it.sh .\nRUN sed -i -e \"s@python@python2@\" data_provisioning_mme\nRUN sed -i -e \"s@/freeDiameter@@\" make_certs.sh\n\nWORKDIR /openair-hss\nRUN openssl rand -out /root/.rnd 128\nRUN ldconfig\n"
}