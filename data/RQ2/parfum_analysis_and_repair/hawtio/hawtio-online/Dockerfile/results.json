{
  "startTime": 1674249370398,
  "endTime": 1674249371700,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 16
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM docker.io/node:12.21.0 as builder\n\nRUN yarn global add gulp-cli\n\nWORKDIR /hawtio-online\n\nCOPY gulpfile.js package.json yarn.lock ./\nADD packages/ packages/\n\nRUN yarn install && yarn cache clean;\nRUN gulp --series build site\n\n# Build stage to extract envsubst\nFROM registry.access.redhat.com/ubi8/ubi-minimal:8.6 as envsubst\n\nRUN microdnf -y install gettext\n\nFROM registry.access.redhat.com/ubi8/ubi-minimal:8.6\n\n# njs >= 0.5.x fails to run nginx.js\nENV NGINX_VERSION 1.18.0-2.el8\nENV NGINX_MODULE_NJS_VERSION 1.18.0.0.4.4-2.el8\n\nLABEL name=\"nginxinc/nginx\" \\\n      vendor=\"NGINX Inc.\" \\\n      version=\"${NGINX_VERSION}\" \\\n      release=\"1\" \\\n      summary=\"NGINX\" \\\n      description=\"nginx will do .....\"\n### Required labels above - recommended below\nLABEL url=\"https://www.nginx.com/\" \\\n      io.k8s.display-name=\"NGINX\" \\\n      io.openshift.expose-services=\"8443:https\" \\\n      io.openshift.tags=\"nginx,nginxinc\"\n\nADD docker/nginx.repo /etc/yum.repos.d/nginx.repo\n\nRUN curl -f -sO http://nginx.org/keys/nginx_signing.key && \\\n    rpm --import ./nginx_signing.key && \\\n    microdnf -y install --setopt=tsflags=nodocs nginx-${NGINX_VERSION}.ngx nginx-module-njs-${NGINX_MODULE_NJS_VERSION}.ngx && \\\n    rm -f ./nginx_signing.key && \\\n    microdnf clean all\n\n# forward request and error logs to docker log collector\n# - Change pid file location & remove nginx user & change port to 8080\n# - modify perms for non-root runtime\nRUN ln -sf /dev/stdout /var/log/nginx/access.log && \\\n    ln -sf /dev/stderr /var/log/nginx/error.log && \\\n    sed -i 's|/var/run/nginx.pid|/var/cache/nginx/nginx.pid|g' /etc/nginx/nginx.conf && \\\n    sed -i -e '/user/!b' -e '/nginx/!b' -e '/nginx/d' /etc/nginx/nginx.conf && \\\n    echo -e \"load_module modules/ngx_http_js_module.so;\\n$(cat /etc/nginx/nginx.conf)\" > /etc/nginx/nginx.conf && \\\n    # Uncomment this line to output info log for nginx.js\n    #sed -i 's|/var/log/nginx/error.log warn|/var/log/nginx/error.log info|g' /etc/nginx/nginx.conf && \\\n    rm -f /etc/nginx/conf.d/default.conf && \\\n    chown -R 998 /var/cache/nginx /etc/nginx && \\\n    chmod -R g=u /var/cache/nginx /etc/nginx\n\nEXPOSE 8443\n\n# Add symbolic link to config.json to avoid mounting issues\nRUN ln -sf /usr/share/nginx/html/config/config.json /usr/share/nginx/html/config.json\n\nRUN rm /usr/share/nginx/html/index.html\n\nRUN touch config.js && \\\n    chown 998 config.js && chmod g=u config.js && \\\n    mkdir -p /usr/share/nginx/html/online/osconsole && \\\n    ln -sf /config.js /usr/share/nginx/html/online/osconsole/config.js && \\\n    mkdir -p /usr/share/nginx/html/integration/osconsole && \\\n    ln -sf /config.js /usr/share/nginx/html/integration/osconsole/config.js\n\nCOPY docker/nginx.js docker/rbac.js docker/js-yaml.js docker/jwt-decode.js /etc/nginx/conf.d/\nCOPY docker/nginx.conf docker/nginx-gateway.conf.template docker/nginx-gateway-k8s.conf.template docker/osconsole/config.sh docker/nginx.sh docker/ACL.yaml /\n\nCOPY --from=builder /hawtio-online/docker/site /usr/share/nginx/html/\nCOPY --from=envsubst /usr/bin/envsubst /usr/local/bin/\n\nUSER 998\n\nCMD [\"./nginx.sh\"]\n"
}