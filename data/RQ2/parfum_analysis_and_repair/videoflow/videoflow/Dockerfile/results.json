{
  "startTime": 1674218651442,
  "endTime": 1674218652731,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 84
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 14,
        "columnStart": 22,
        "columnEnd": 18
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 20,
        "lineEnd": 27,
        "columnStart": 23,
        "columnEnd": 14
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 20,
        "lineEnd": 27,
        "columnStart": 23,
        "columnEnd": 14
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# To build: docker build -t videoflow -f Dockerfile .\n# To run: docker run -it videoflow\nFROM ubuntu:18.04\n\n# Installing opencv and other dependencies\nENV DEBIAN_FRONTEND noninteractive\nRUN apt-get update && apt-get install --no-install-recommends -y gnupg2 \\\n    python3-opencv \\\n    ca-certificates \\\n    python3-dev \\\n    git \\\n    wget \\\n    libopencv-dev \\\n    python3-numpy \\\n    python3-pycurl && \\\n    rm -rf /var/lib/apt/lists/*\n\n# Installing ffmpeg\n# Be aware that ffmpeg license might not be safe for commercial use.\nRUN echo \"deb http://old-releases.ubuntu.com/ubuntu/ yakkety universe\" | tee -a /etc/apt/sources.list\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    libav-tools \\\n    libjpeg-dev \\\n    libpng-dev \\\n    libtiff-dev \\\n    libjasper-dev \\\n    ffmpeg \\\n    pkg-config && rm -rf /var/lib/apt/lists/*;\n\n# create a non-root user\nARG USER_ID=1000\nRUN useradd -m --no-log-init --system  --uid ${USER_ID} appuser -g sudo\nRUN echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers\nUSER appuser\nWORKDIR /home/appuser\n\nENV PATH=\"/home/appuser/.local/bin:${PATH}\"\nRUN wget https://bootstrap.pypa.io/get-pip.py && \\\n\tpython3 get-pip.py --user && \\\n\trm get-pip.py\n\n# Installing videoflow\nRUN git clone https://github.com/videoflow/videoflow.git\nRUN pip3 install --no-cache-dir --user /home/appuser/videoflow --find-links /home/appuser/videoflow\n\n# Command to run example\nCMD [\"python3\", \"/home/appuser/videoflow/examples/simple_example1.py\"]"
}