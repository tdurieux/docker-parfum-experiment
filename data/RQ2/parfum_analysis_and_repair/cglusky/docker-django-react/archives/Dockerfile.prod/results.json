{
  "startTime": 1674220154491,
  "endTime": 1674220155607,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 36
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# BUILD\n# pull official base image\nFROM python:3.8.3-alpine as build\n\n# set work directory\nWORKDIR /srv/app\n\n# set environment variables\nENV PYTHONDONTWRITEBYTECODE 1\nENV PYTHONUNBUFFERED 1\n\n# install dependencies for build of pyscopg2 etc\nRUN apk add --update --no-cache \\\n  gcc \\\n  libc-dev \\\n  linux-headers \\\n  postgresql-dev \\\n  musl-dev \\\n  zlib zlib-dev\n\n# Copy project files\nCOPY . .\n\n# install dependencies\nRUN pip install --no-cache-dir --upgrade pip\nCOPY ./requirements.txt .\nRUN pip wheel --no-cache-dir --no-deps \\\n  --wheel-dir /srv/app/wheels -r requirements.txt\n\n\n# FINAL\n# pull official base image\nFROM python:3.8.3-alpine\n\n# create the app user\nRUN addgroup -S app && adduser -S app -G app\n\n# create the appropriate directories\n# ENV HOME=/srv\nENV APP_HOME=/srv/app\nRUN mkdir $APP_HOME\nRUN mkdir $APP_HOME/static\nRUN mkdir $APP_HOME/media\nWORKDIR $APP_HOME\n\n# install dependencies\nRUN apk add --update --no-cache libpq postgresql-client\nCOPY --from=build /srv/app/wheels /wheels\nCOPY --from=build /srv/app/requirements.txt .\nRUN pip install --no-cache-dir --no-cache /wheels/*\n\n# copy entrypoint-prod.sh\nCOPY ./entrypoint.prod.sh $APP_HOME\n\n# copy project\nCOPY . $APP_HOME\n\n# chown all the files to the app user\nRUN chown -R app:app $APP_HOME\n\n# change to the app user\nUSER app\n\n# run entrypoint.prod.sh\nENTRYPOINT [\"/srv/app/entrypoint.prod.sh\"]"
}