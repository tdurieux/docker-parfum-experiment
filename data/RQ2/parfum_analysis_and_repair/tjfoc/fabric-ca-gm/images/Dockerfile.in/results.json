{
  "startTime": 1674254121425,
  "endTime": 1674254122263,
  "originalSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 32,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 8,
        "columnEnd": 67
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 25,
        "columnEnd": 75
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 32,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 8,
        "columnEnd": 67
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 32,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 61
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 8,
        "columnEnd": 67
      }
    }
  ],
  "repairedDockerfile": "#\n# Copyright IBM Corp. All Rights Reserved.\n#\n# SPDX-License-Identifier: Apache-2.0\n#\nFROM hyperledger/fabric-baseimage:_BASE_TAG_\n\nENV DEBIAN_FRONTEND noninteractive\nENV PATH \"/usr/local/go/bin/:${PATH}\"\nENV GOPATH \"/opt/gopath\"\nENV PGDATA \"/usr/local/pgsql/data/\"\nENV PGUSER \"postgres\"\nENV PGPASSWORD \"postgres\"\nENV PGVER _PGVER_\nENV HOSTADDR \"127.0.0.1\"\nENV LDAPPORT \"389\"\nENV LDAPUSER \"admin\"\nENV LDAPPASWD \"adminpw\"\n\n# Avoid ERROR:\n#   invoke-rc.d: policy-rc.d denied execution of start.\nRUN echo \"#!/bin/sh\\nexit 0\" > /usr/sbin/policy-rc.d\n\n# Update system\nRUN apt-get -y update && apt-get -y install --no-install-recommends locales && rm -rf /var/lib/apt/lists/*;\nRUN sed -i -e 's/^[[:blank:]]*#[[:blank:]]*en_US.UTF-8[[:blank:]]*UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen\nRUN printf \"LANG=en_US.UTF-8\\nLANGUAGE=en_US.UTF-8\\n\" > /etc/default/locale\nRUN dpkg-reconfigure locales && update-locale LANG=en_US.UTF-8\n\n# Install more test depedencies\nRUN echo \"mysql-server mysql-server/root_password password mysql\" | debconf-set-selections\nRUN echo \"mysql-server mysql-server/root_password_again password mysql\" | debconf-set-selections\nRUN apt-get -y install --no-install-recommends bc vim lsof sqlite3 haproxy postgresql-$PGVER \\\n                       postgresql-client-common postgresql-contrib-$PGVER isag jq git html2text \\\n                       debconf-utils zsh htop python2.7-minimal libpython2.7-stdlib \\\n                       mysql-client mysql-common mysql-server && rm -rf /var/lib/apt/lists/*;\nRUN apt-get -y autoremove\n\n# Configure and start postgres\nRUN echo $PGUSER:$PGUSER | chpasswd\nRUN mkdir -p $PGDATA && chown postgres:postgres $PGDATA\nRUN su $PGUSER -c \"/usr/lib/postgresql/$PGVER/bin/initdb -D $PGDATA\"\nRUN su $PGUSER -c \"/usr/lib/postgresql/$PGVER/bin/pg_ctl start -D $PGDATA\" &&\\\n                   sleep 10 &&\\\n                   psql -U postgres -h localhost -c \"ALTER USER $PGUSER WITH PASSWORD '$PGPASSWORD';\" &&\\\n                   su postgres -c \"/usr/lib/postgresql/$PGVER/bin/pg_ctl stop\"\nRUN echo \"host all  all    0.0.0.0/0  trust\" >> ${PGDATA}/pg_hba.conf\nRUN echo \"listen_addresses='*'\" >> ${PGDATA}/postgresql.conf\n\n# Install slapd\nRUN ls /tmp\nCOPY payload/*ldif /etc/ldap/\nRUN printf  \"slapd slapd/internal/generated_adminpw password $LDAPPASWD\\n\\\nslapd slapd/password2 password $LDAPPASWD\\n\\\nslapd slapd/internal/adminpw password $LDAPPASWD\\n\\\nslapd slapd/password1 password $LDAPPASWD\\n\\\nslapd slapd/domain string example.com\\n\\\nslapd shared/organization string example.com\" | debconf-set-selections && \\\n   sudo apt-get -y install --no-install-recommends slapd ldap-utils && rm -rf /var/lib/apt/lists/*;\nRUN sed -i \\\n   \"s@^[[:blank:]]*SLAPD_SERVICES=.*@SLAPD_SERVICES=\\\"ldap://$HOSTADDR:$LDAPPORT/ ldaps:/// ldapi:///\\\"@\"\\\n   /etc/default/slapd\nRUN /etc/init.d/slapd start && \\\n    ldapadd -h localhost -p 389 -D cn=$LDAPUSER,dc=example,dc=com -w $LDAPPASWD -f /etc/ldap/base.ldif && \\\n    ldapadd -h localhost -p 389 -D cn=$LDAPUSER,dc=example,dc=com -w $LDAPPASWD -f /etc/ldap/add-users.ldif && \\\n    /etc/init.d/slapd stop\n\n# Install fabric-ca dependencies\nRUN go get github.com/go-sql-driver/mysql\nRUN go get github.com/lib/pq\n\n# Use python2, not 3\nRUN ln -s /usr/bin/python2.7 /usr/local/bin/python && chmod 777 /usr/local/bin/python\n\n# Generate version-agnostic postgres command\nRUN ln -s /usr/lib/postgresql/$PGVER/bin/postgres /usr/local/bin/postgres && chmod 777 /usr/local/bin/postgres\n\n# Add docker-built execs for (potentially) alternative architecture\nCOPY payload/fabric-ca-client /usr/local/bin\nRUN chmod +x /usr/local/bin/fabric-ca-client\nCOPY payload/fabric-ca-server /usr/local/bin\nRUN chmod +x /usr/local/bin/fabric-ca-server\n\n# Add start script to initialize adjunct servers\nCOPY payload/start.sh /start.sh\n\n# Clean up APT when done.\nRUN apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\nWORKDIR ${GOPATH}/src/github.com/tjfoc/gmca\nENTRYPOINT [ \"/start.sh\" ]\nCMD [\"make\", \"fvt-tests\"]\n"
}