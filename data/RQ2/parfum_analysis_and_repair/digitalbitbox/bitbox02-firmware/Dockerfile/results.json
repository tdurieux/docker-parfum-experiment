{
  "startTime": 1674215047080,
  "endTime": 1674215048153,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 114,
        "lineEnd": 114,
        "columnStart": 4,
        "columnEnd": 61
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 102
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 117,
        "lineEnd": 117,
        "columnStart": 107,
        "columnEnd": 131
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 44,
        "columnEnd": 93
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 37,
        "lineEnd": 56,
        "columnStart": 22,
        "columnEnd": 17
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 58,
        "lineEnd": 60,
        "columnStart": 22,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 67,
        "lineEnd": 72,
        "columnStart": 22,
        "columnEnd": 16
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 99,
        "lineEnd": 99,
        "columnStart": 22,
        "columnEnd": 58
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 104,
        "lineEnd": 105,
        "columnStart": 22,
        "columnEnd": 19
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 44,
        "columnEnd": 93
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 37,
        "lineEnd": 56,
        "columnStart": 22,
        "columnEnd": 17
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 58,
        "lineEnd": 60,
        "columnStart": 22,
        "columnEnd": 12
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 67,
        "lineEnd": 72,
        "columnStart": 22,
        "columnEnd": 16
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 99,
        "lineEnd": 99,
        "columnStart": 22,
        "columnEnd": 58
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 104,
        "lineEnd": 105,
        "columnStart": 22,
        "columnEnd": 19
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright 2019 Shift Cryptosecurity AG\n# Copyright 2020 Shift Crypto AG\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# Latest Ubuntu LTS\nFROM ubuntu:18.04\nENV DEBIAN_FRONTEND noninteractive\n\nRUN apt-get update && apt-get upgrade -y && apt-get install --no-install-recommends -y wget nano rsync curl gnupg2 jq && rm -rf /var/lib/apt/lists/*;\n\n# for clang-*-8, see https://apt.llvm.org/\nRUN echo \"deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-8 main\" >> /etc/apt/sources.list && \\\n    echo \"deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-8 main\" >> /etc/apt/sources.list && \\\n    wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add -\n\n# Install gcc8-arm-none-eabi\nRUN mkdir ~/Downloads &&\\\n    cd ~/Downloads &&\\\n    wget -O gcc.tar.bz2 https://developer.arm.com/-/media/Files/downloads/gnu-rm/8-2018q4/gcc-arm-none-eabi-8-2018-q4-major-linux.tar.bz2?revision=d830f9dd-cd4f-406d-8672-cca9210dd220?product=GNU%20Arm%20Embedded%20Toolchain,64-bit,,Linux,8-2018-q4-major && \\\n    echo \"fb31fbdfe08406ece43eef5df623c0b2deb8b53e405e2c878300f7a1f303ee52  gcc.tar.bz2\" | sha256sum -c && \\\n    cd ~/Downloads && \\\n    tar -xjvf gcc.tar.bz2 && \\\n    rm -f gcc.tar.bz2 && \\\n    cd ~/Downloads && rsync -a gcc-arm-none-eabi-8-2018-q4-major/ /usr/local/\n\n# Tools for building\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    build-essential \\\n    llvm \\\n    gcc-8 \\\n    binutils \\\n    valgrind \\\n    cmake \\\n    git \\\n    autotools-dev \\\n    automake \\\n    autoconf \\\n    libtool \\\n    pkg-config \\\n    libcmocka-dev \\\n    libc6-i386 \\\n    lib32stdc++6 \\\n    lib32z1 \\\n    libusb-1.0-0-dev \\\n    libudev-dev \\\n    libhidapi-dev && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    doxygen \\\n    graphviz && rm -rf /var/lib/apt/lists/*;\n\n# Set gcc-8 as the default gcc\nRUN update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100\nRUN update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-8 100\n\n# Tools for CI\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    python \\\n    python3 \\\n    python3-pip \\\n    clang-format-8 \\\n    clang-tidy-8 && rm -rf /var/lib/apt/lists/*;\n\nRUN python3 -m pip install --upgrade pip\n\n# Python modules\nCOPY py/bitbox02 /tmp/bitbox02\nRUN python3 -m pip install /tmp/bitbox02\nRUN rm -r /tmp/bitbox02\nCOPY py/requirements.txt /tmp\nRUN python3 -m pip install --upgrade --requirement /tmp/requirements.txt\nRUN rm /tmp/requirements.txt\n\n# Python modules for CI\nRUN python3 -m pip install --upgrade \\\n    pylint==2.13.9 \\\n    pylint-protobuf==0.20.2 \\\n    black==22.3.0 \\\n    mypy==0.960 \\\n    mypy-protobuf==3.2.0\n\n# Python modules for packaging\nRUN python3 -m pip install --upgrade \\\n    setuptools==41.2.0 \\\n    wheel==0.33.6 \\\n    twine==1.15.0\n\n# For protoc\nRUN apt-get update && apt-get install --no-install-recommends -y protobuf-compiler && rm -rf /var/lib/apt/lists/*;\n# Make Python3 the default, so tools/nanopb/generator/*.py run with Python3.\nRUN update-alternatives --install /usr/bin/python python /usr/bin/python3 1\n\n# Developer tools\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    bash-completion && rm -rf /var/lib/apt/lists/*;\n# Install gcovr from PIP to get a newer version than in apt repositories\nRUN python3 -m pip install gcovr\n\n# Install Go, used for the tools in tools/go and for test/gounittest\nENV GOPATH /opt/go\nENV GOROOT /opt/go_dist/go\nENV PATH $GOROOT/bin:$GOPATH/bin:$PATH\nRUN mkdir -p /opt/go_dist && \\\n    curl -f https://dl.google.com/go/go1.14.4.linux-amd64.tar.gz | tar -xz -C /opt/go_dist\n\n# Install lcov from release (the one from the repos is too old).\nRUN cd /opt && wget https://github.com/linux-test-project/lcov/releases/download/v1.14/lcov-1.14.tar.gz && tar -xf lcov-1.14.tar.gz && rm lcov-1.14.tar.gz\nENV PATH /opt/lcov-1.14/bin:$PATH\n\n# Install rust compiler\nENV PATH /opt/cargo/bin:$PATH\nENV RUSTUP_HOME=/opt/rustup\nCOPY src/rust/rust-toolchain /tmp/rust-toolchain\nRUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | CARGO_HOME=/opt/cargo sh -s -- --default-toolchain $(cat /tmp/rust-toolchain | tr -d '\\r\\n\\t') -y\nRUN rustup target add thumbv7em-none-eabi\nRUN rustup component add rustfmt\nRUN rustup component add clippy\nRUN CARGO_HOME=/opt/cargo cargo install cbindgen --version 0.23.0\nRUN CARGO_HOME=/opt/cargo cargo install bindgen --version 0.59.2\n\nCOPY tools/prost-build prost-build\nRUN CARGO_HOME=/opt/cargo cargo install --path prost-build --locked\n\n# Clean temporary files to reduce image size\nRUN rm -rf /var/lib/apt/lists/*\n"
}