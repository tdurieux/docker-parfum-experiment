diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/digitalbitbox/bitbox02-firmware/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/digitalbitbox/bitbox02-firmware/Dockerfile/repaired.Dockerfile
index af4024f..8a28aa2 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/digitalbitbox/bitbox02-firmware/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/digitalbitbox/bitbox02-firmware/Dockerfile/repaired.Dockerfile
@@ -17,7 +17,7 @@
 FROM ubuntu:18.04
 ENV DEBIAN_FRONTEND noninteractive
 
-RUN apt-get update && apt-get upgrade -y && apt-get install -y wget nano rsync curl gnupg2 jq
+RUN apt-get update && apt-get upgrade -y && apt-get install --no-install-recommends -y wget nano rsync curl gnupg2 jq && rm -rf /var/lib/apt/lists/*;
 
 # for clang-*-8, see https://apt.llvm.org/
 RUN echo "deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-8 main" >> /etc/apt/sources.list && \
@@ -27,15 +27,15 @@ RUN echo "deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-8 main" >> /etc/
 # Install gcc8-arm-none-eabi
 RUN mkdir ~/Downloads &&\
     cd ~/Downloads &&\
-    wget -O gcc.tar.bz2 https://developer.arm.com/-/media/Files/downloads/gnu-rm/8-2018q4/gcc-arm-none-eabi-8-2018-q4-major-linux.tar.bz2?revision=d830f9dd-cd4f-406d-8672-cca9210dd220?product=GNU%20Arm%20Embedded%20Toolchain,64-bit,,Linux,8-2018-q4-major &&\
-    echo "fb31fbdfe08406ece43eef5df623c0b2deb8b53e405e2c878300f7a1f303ee52 gcc.tar.bz2" | sha256sum -c &&\
-    cd ~/Downloads &&\
-    tar -xjvf gcc.tar.bz2 &&\
-    rm -f gcc.tar.bz2 &&\
+    wget -O gcc.tar.bz2 https://developer.arm.com/-/media/Files/downloads/gnu-rm/8-2018q4/gcc-arm-none-eabi-8-2018-q4-major-linux.tar.bz2?revision=d830f9dd-cd4f-406d-8672-cca9210dd220?product=GNU%20Arm%20Embedded%20Toolchain,64-bit,,Linux,8-2018-q4-major && \
+    echo "fb31fbdfe08406ece43eef5df623c0b2deb8b53e405e2c878300f7a1f303ee52  gcc.tar.bz2" | sha256sum -c && \
+    cd ~/Downloads && \
+    tar -xjvf gcc.tar.bz2 && \
+    rm -f gcc.tar.bz2 && \
     cd ~/Downloads && rsync -a gcc-arm-none-eabi-8-2018-q4-major/ /usr/local/
 
 # Tools for building
-RUN apt-get update && apt-get install -y \
+RUN apt-get update && apt-get install --no-install-recommends -y \
     build-essential \
     llvm \
     gcc-8 \
@@ -54,23 +54,23 @@ RUN apt-get update && apt-get install -y \
     lib32z1 \
     libusb-1.0-0-dev \
     libudev-dev \
-    libhidapi-dev
+    libhidapi-dev && rm -rf /var/lib/apt/lists/*;
 
-RUN apt-get update && apt-get install -y \
+RUN apt-get update && apt-get install --no-install-recommends -y \
     doxygen \
-    graphviz
+    graphviz && rm -rf /var/lib/apt/lists/*;
 
 # Set gcc-8 as the default gcc
 RUN update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100
 RUN update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-8 100
 
 # Tools for CI
-RUN apt-get update && apt-get install -y \
+RUN apt-get update && apt-get install --no-install-recommends -y \
     python \
     python3 \
     python3-pip \
     clang-format-8 \
-    clang-tidy-8
+    clang-tidy-8 && rm -rf /var/lib/apt/lists/*;
 
 RUN python3 -m pip install --upgrade pip
 
@@ -97,13 +97,13 @@ RUN python3 -m pip install --upgrade \
     twine==1.15.0
 
 # For protoc
-RUN apt-get update && apt-get install -y protobuf-compiler
+RUN apt-get update && apt-get install --no-install-recommends -y protobuf-compiler && rm -rf /var/lib/apt/lists/*;
 # Make Python3 the default, so tools/nanopb/generator/*.py run with Python3.
 RUN update-alternatives --install /usr/bin/python python /usr/bin/python3 1
 
 # Developer tools
-RUN apt-get update && apt-get install -y \
-    bash-completion
+RUN apt-get update && apt-get install --no-install-recommends -y \
+    bash-completion && rm -rf /var/lib/apt/lists/*;
 # Install gcovr from PIP to get a newer version than in apt repositories
 RUN python3 -m pip install gcovr
 
@@ -112,10 +112,10 @@ ENV GOPATH /opt/go
 ENV GOROOT /opt/go_dist/go
 ENV PATH $GOROOT/bin:$GOPATH/bin:$PATH
 RUN mkdir -p /opt/go_dist && \
-    curl https://dl.google.com/go/go1.14.4.linux-amd64.tar.gz | tar -xz -C /opt/go_dist
+    curl -f https://dl.google.com/go/go1.14.4.linux-amd64.tar.gz | tar -xz -C /opt/go_dist
 
 # Install lcov from release (the one from the repos is too old).
-RUN cd /opt && wget https://github.com/linux-test-project/lcov/releases/download/v1.14/lcov-1.14.tar.gz && tar -xf lcov-1.14.tar.gz
+RUN cd /opt && wget https://github.com/linux-test-project/lcov/releases/download/v1.14/lcov-1.14.tar.gz && tar -xf lcov-1.14.tar.gz && rm lcov-1.14.tar.gz
 ENV PATH /opt/lcov-1.14/bin:$PATH
 
 # Install rust compiler