{
  "startTime": 1674216289307,
  "endTime": 1674216290154,
  "originalSmells": [
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 13,
        "columnStart": 25,
        "columnEnd": 19
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 18,
        "lineEnd": 20,
        "columnStart": 25,
        "columnEnd": 7
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 25,
        "lineEnd": 28,
        "columnStart": 25,
        "columnEnd": 12
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 36,
        "lineEnd": 38,
        "columnStart": 25,
        "columnEnd": 12
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 45,
        "lineEnd": 46,
        "columnStart": 25,
        "columnEnd": 20
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 51,
        "lineEnd": 52,
        "columnStart": 22,
        "columnEnd": 24
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 56,
        "lineEnd": 62,
        "columnStart": 25,
        "columnEnd": 14
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04\n\nRUN apt-get update -y && apt-get upgrade -y\n\n# Essential Tools\nRUN apt-get update -y && apt-get install -y --no-install-recommends \\\n    build-essential \\\n    git \\\n    cmake \\\n    curl \\\n    wget \\\n    software-properties-common \\\n    apt-transport-https \\\n    ca-certificates && rm -rf /var/lib/apt/lists/*;\n\n\n##############################\n# Linux packaging tools\nRUN apt-get update -y && apt-get install -y --no-install-recommends \\\n    pkg-config \\\n    rpm && rm -rf /var/lib/apt/lists/*;\n\n\n##############################\n# FPM is a tool that can create rpms and debs\nRUN apt-get update -y && apt-get install -y --no-install-recommends \\\n    ruby \\\n    ruby-dev \\\n    rubygems && rm -rf /var/lib/apt/lists/*;\nRUN gem install --no-document fpm\n\n\n##############################\n# llvm 11 (needed because some rust crates compile C code)\nRUN wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add -\nRUN add-apt-repository 'deb http://apt.llvm.org/xenial llvm-toolchain-xenial-11 main'\nRUN apt-get update -y && apt-get install -y --no-install-recommends \\\n    llvm-11 \\\n    clang-11 && rm -rf /var/lib/apt/lists/*;\nRUN update-alternatives --install /usr/bin/clang clang /usr/bin/clang-11 100\nRUN update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-11 100\n\n\n##############################\n# bitbox-bridge linux dependencies\nRUN apt-get update -y && apt-get install -y --no-install-recommends \\\n    libusb-1.0-0-dev && rm -rf /var/lib/apt/lists/*;\n\n\n##############################\n# bitbox-bridge windows dependencies\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n    gcc-mingw-w64-x86-64 && rm -rf /var/lib/apt/lists/*;\n\n##############################\n# bitbox-bridge darwin dependencies\nRUN apt-get update -y && apt-get install -y --no-install-recommends \\\n    zlib1g-dev \\\n    libmpc-dev \\\n    libmpfr-dev \\\n    libgmp-dev \\\n    libxml2-dev \\\n    libssl-dev && rm -rf /var/lib/apt/lists/*;\n# SDK\nRUN git clone https://github.com/tpoechtrager/osxcross /opt/osxcross\nRUN cd /opt/osxcross && wget -nc https://github.com/joseluisq/macosx-sdks/releases/download/11.1/MacOSX11.1.sdk.tar.xz\nRUN cd /opt/osxcross && mv MacOSX11.1.sdk.tar.xz tarballs/\nRUN cd /opt/osxcross && UNATTENDED=yes OSX_VERSION_MIN=10.9 ./build.sh\n\n\n##############################\n# Rust compiler\nENV PATH /opt/cargo/bin:$PATH\nENV RUSTUP_HOME=/opt/rustup\nRUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | CARGO_HOME=/opt/cargo sh -s -- --profile minimal --default-toolchain 1.51.0 -y\nRUN rustup target add x86_64-pc-windows-gnu\nRUN rustup target add x86_64-apple-darwin\nRUN rustup target add aarch64-apple-darwin\n\n\n##############################\n# toml-echo is a tool for echoing toml variables (like the package.version)\nRUN CARGO_HOME=/opt/cargo cargo install --version 0.3.0 toml-echo\n\n\n##############################\n# Clean temporary files to reduce image size\nRUN rm -rf /var/lib/apt/lists/*\n"
}