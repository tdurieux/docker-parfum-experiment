{
  "startTime": 1674220550922,
  "endTime": 1674220551511,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 46,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 44,
        "columnEnd": 69
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.10-alpine3.15\n\n# add gunicorn user\n# -D = Don't assign a password\n# using root group for OpenShift compatibility\nENV GUNICORN_USER_NAME=gunicorn\nENV GUNICORN_USER_UID=1001\nENV GUNICORN_USER_GROUP=root\nRUN adduser -D -u $GUNICORN_USER_UID -G $GUNICORN_USER_GROUP $GUNICORN_USER_NAME\n\n# set default port for gunicorn\nENV PORT=8000\n\n# add gunicorn config\nENV GUNICORN_CONFIG_ROOT=/etc/gunicorn\nRUN mkdir -p $GUNICORN_CONFIG_ROOT\nCOPY gunicorn.conf.py $GUNICORN_CONFIG_ROOT\n\n# setup working directory\nENV WORKDIR=/usr/django\nRUN mkdir -p $WORKDIR\nWORKDIR $WORKDIR\n\n# install tini to ensure that gunicorn processes will receive signals\n# install gettext and bash (required by start.sh)\nRUN apk add --no-cache tini gettext bash\n\n# run start.sh on container start\nCOPY start.sh $WORKDIR\nENTRYPOINT [\"/sbin/tini\", \"--\"]\nCMD [\"./start.sh\"]\n\n# create directories for generated static content, user-uploaded files and application source code\nENV STATIC_ROOT=/var/www/static\nENV MEDIA_ROOT=/var/www/media\nENV SOURCE_ROOT=$WORKDIR/app\nRUN mkdir -p $STATIC_ROOT $MEDIA_ROOT $SOURCE_ROOT\n\n# making sure the gunicorn user has access to all these resources\nRUN chown -R $GUNICORN_USER_NAME $GUNICORN_CONFIG_ROOT $WORKDIR $STATIC_ROOT $MEDIA_ROOT && \\\n  chgrp -R $GUNICORN_USER_GROUP $GUNICORN_CONFIG_ROOT $WORKDIR $STATIC_ROOT $MEDIA_ROOT && \\\n  chmod -R 770 $GUNICORN_CONFIG_ROOT $WORKDIR $STATIC_ROOT $MEDIA_ROOT\n\n# install gunicorn & django\nENV GUNICORN_VERSION=20.1.0\nENV DJANGO_VERSION=4.0.6\nRUN pip install --no-cache-dir \\\n  gunicorn==$GUNICORN_VERSION \\\n  django==$DJANGO_VERSION\n\n# install pytz for Django 3.x\nRUN if [[ \"$DJANGO_VERSION\" == 3.* ]]; then \\\n pip install --no-cache-dir pytz==2022.1; fi\n\n# switch to non-root user\nUSER $GUNICORN_USER_UID\n"
}