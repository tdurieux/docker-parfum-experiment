{
  "startTime": 1674217639163,
  "endTime": 1674217640636,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 57
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 57
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM docker.io/library/ubuntu:20.04 AS builder\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y unzip apt-utils curl openjdk-8-jdk && \\\n    apt-get clean && rm -rf /var/lib/apt/lists/*;\n\n# 1- Define a constant with the version of gradle you want to install\nARG GRADLE_VERSION=5.4\n\n# 2- Define the URL where gradle can be downloaded from\nARG GRADLE_BASE_URL=https://services.gradle.org/distributions\n\n# 3- Define the SHA key to validate the gradle download\n#    obtained from here https://gradle.org/release-checksums/\nARG GRADLE_SHA=c8c17574245ecee9ed7fe4f6b593b696d1692d1adbfef425bef9b333e3a0e8de\n\n# 4- Create the directories, download gradle, validate the download, install it, remove downloaded file and set links\nRUN mkdir -p /usr/share/gradle /usr/share/gradle/ref \\\n  && echo \"Downlaoding gradle hash\" \\\n  && curl -fsSL -o /tmp/gradle.zip ${GRADLE_BASE_URL}/gradle-${GRADLE_VERSION}-bin.zip \\\n  \\\n  && echo \"Checking download hash\" \\\n  && echo \"${GRADLE_SHA}  /tmp/gradle.zip\" | sha256sum -c - \\\n  \\\n  && echo \"Unziping gradle\" \\\n  && unzip -d /usr/share/gradle /tmp/gradle.zip \\\n   \\\n  && echo \"Cleaning and setting links\" \\\n  && rm -f /tmp/gradle.zip \\\n  && ln -s /usr/share/gradle/gradle-${GRADLE_VERSION} /usr/bin/gradle\n\n# 5- Define environmental variables required by gradle\nENV GRADLE_VERSION 5.4\nENV GRADLE_HOME /usr/bin/gradle\nENV GRADLE_USER_HOME /cache\nENV PATH $PATH:$GRADLE_HOME/bin\n\nVOLUME $GRADLE_USER_HOME\n\nCOPY . .\n\nRUN gradle build copyJar -x test --no-daemon\n\nFROM registry.access.redhat.com/ubi8/ubi-minimal:latest\n\nRUN true && \\\n    microdnf install -y curl ca-certificates java-11-openjdk-headless sudo shadow-utils && \\\n    microdnf clean all && \\\n    true\n\nRUN echo \"securerandom.source=file:/dev/urandom\" >> /etc/alternatives/jre/lib/security/java.security\n\nCOPY --from=builder packaging/iofog-agent/etc /etc\nCOPY --from=builder packaging/iofog-agent/usr /usr\n\nRUN true && \\\n    useradd -r -U -s /usr/bin/nologin iofog-agent && \\\n    usermod -aG root,wheel iofog-agent && \\\n    mv /etc/iofog-agent/config_new.xml /etc/iofog-agent/config.xml && \\\n    mv /etc/iofog-agent/config-development_new.xml /etc/iofog-agent/config-development.xml && \\\n    mv /etc/iofog-agent/config-production_new.xml /etc/iofog-agent/config-production.xml && \\\n    mv /etc/iofog-agent/config-switcher_new.xml /etc/iofog-agent/config-switcher.xml && \\\n    mv /etc/iofog-agent/cert_new.crt /etc/iofog-agent/cert.crt && \\\n    </dev/urandom tr -dc A-Za-z0-9 | head -c32 > /etc/iofog-agent/local-api && \\\n    mkdir -p /var/backups/iofog-agent && \\\n    mkdir -p /var/log/iofog-agent && \\\n    mkdir -p /var/lib/iofog-agent && \\\n    mkdir -p /var/run/iofog-agent && \\\n    chown -R :iofog-agent /etc/iofog-agent && \\\n    chown -R :iofog-agent /var/log/iofog-agent && \\\n    chown -R :iofog-agent /var/lib/iofog-agent && \\\n    chown -R :iofog-agent /var/run/iofog-agent && \\\n    chown -R :iofog-agent /var/backups/iofog-agent && \\\n    chown -R :iofog-agent /usr/share/iofog-agent && \\\n    chmod 774 -R /etc/iofog-agent && \\\n    chmod 774 -R /var/log/iofog-agent && \\\n    chmod 774 -R /var/lib/iofog-agent && \\\n    chmod 774 -R /var/run/iofog-agent && \\\n    chmod 774 -R /var/backups/iofog-agent && \\\n    chmod 754 -R /usr/share/iofog-agent && \\\n    chmod 774 /etc/init.d/iofog-agent && \\\n    chmod 754 /usr/bin/iofog-agent && \\\n    chown :iofog-agent /usr/bin/iofog-agent && \\\n    true\n\nCMD [ \"java\", \"-jar\", \"/usr/bin/iofog-agentd.jar\", \"start\" ]\n"
}