{
  "startTime": 1674250225274,
  "endTime": 1674250226123,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 87
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 275
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 87
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 178
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 275
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 87
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 178
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 275
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 110
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 178
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 299
      }
    }
  ],
  "repairedDockerfile": "# This Dockerfile is mainly useful to ease the Deckard development process.\n# However, it may also be seen as a step-by-step tutorial for a manual installation.\n\n# You may build the image using:\n## docker build . -t local/deckard\n\n# Then run locally via:\n## docker run -p 80:80 -v /path/to/local/content/folder:/home/deckard/content -it local/deckard\n\nFROM ubuntu:22.04\nMAINTAINER Nicolas Delvaux, contact@nicolas-delvaux.org\n\n\nRUN apt-get update\nRUN apt-get upgrade -y\n\n\n# Install dependencies\nRUN apt-get install --no-install-recommends -y nginx gir1.2-gtk-3.0 gir1.2-handy-0.0 python3-gi python3-jinja2 && rm -rf /var/lib/apt/lists/*;\nRUN apt-get install --no-install-recommends -y sudo uwsgi uwsgi-plugin-python3 git ca-certificates gettext libxml2-utils jq rsync curl gnome-themes-standard language-pack-gnome-* && rm -rf /var/lib/apt/lists/*;\n\n# Install some fonts to cover most languages\nRUN apt-get install --no-install-recommends -y fonts-ubuntu fonts-lohit-guru fonts-guru-extra fonts-guru fonts-droid-fallback fonts-dejavu-extra fonts-khmeros-core fonts-lklug-sinhala fonts-sil-padauk fonts-nanum fonts-telu fonts-samyak fonts-knda fonts-beng fonts-sil-abyssinica fonts-thai-tlwg-ttf && rm -rf /var/lib/apt/lists/*;\n\n# Make sure that all locales are generated\nRUN dpkg-reconfigure locales -fnoninteractive\n\n\n# Create a dedicated user\nRUN useradd deckard --create-home -s /usr/sbin/nologin -g www-data\n\n# Configure GTK decorations\nRUN sudo -u deckard mkdir -p ~deckard/.config/gtk-3.0\nRUN /bin/echo -e \"[Settings]\\ngtk-theme-name = Adwaita\\ngtk-fallback-icon-theme = gnome\\n\" | sudo -u deckard tee ~deckard/.config/gtk-3.0/settings.ini > /dev/null\n\n\n# Now install deckard itself!\n\n# Get the source code\nRUN cd ~deckard && sudo -u deckard git clone http://github.com/Malizor/deckard.git ~deckard/deckard-app\n\n# Setup uWSGI\nRUN cp ~deckard/deckard-app/INSTALL/nginx+uwsgi/uwsgi/deckard.ini /etc/uwsgi/apps-available/deckard.ini\nRUN ln -s /etc/uwsgi/apps-available/deckard.ini /etc/uwsgi/apps-enabled/deckard.ini\n\n# Setup nginx\nRUN cp ~deckard/deckard-app/INSTALL/nginx+uwsgi/nginx/deckard.conf /etc/nginx/sites-available/deckard.conf\nRUN ln -s /etc/nginx/sites-available/deckard.conf /etc/nginx/sites-enabled/deckard.conf\nRUN rm /etc/nginx/sites-enabled/default\n#RUN systemctl restart nginx\n\n\n# Deckard itself is installed now, we only miss data from gnome.org\n#RUN cd ~deckard && sudo -u deckard PYTHONPATH=~deckard/deckard-app ~deckard/deckard-app/build-gnome-content.sh\n\n# Auto-update the content folder once a day\n#RUN /bin/echo \"0 2 * * * PYTHONPATH=~deckard/deckard-app ~deckard/deckard-app/build-gnome-content.sh > ~deckard/build-gnome-content.log\" | sudo -u deckard crontab -\n\n# Configure Deckard to use our content folder\nRUN /bin/echo -e \"[deckard]\\ncontent_dir_path = /home/deckard/content\" | sudo -u deckard tee ~deckard/deckard.conf > /dev/null\n\n# Point uWSGI to our configuration file\nRUN /bin/echo \"env = DECKARD_CONF_FILE=/home/deckard/deckard.conf\" >> /etc/uwsgi/apps-enabled/deckard.ini\n\n# Enable the Python auto-reload feature if requested (handy for development)\nARG auto_reload_on_code_change=true\nRUN if [ \"$auto_reload_on_code_change\" = \"true\" ] ; then /bin/echo \"py-autoreload = 1\" >> /etc/uwsgi/apps-enabled/deckard.ini ; fi\n#RUN systemctl restart uwsgi\n\n\n# Expose nginx\nEXPOSE 80\n\n# Create the startup script\nRUN /bin/echo -e '#!/usr/bin/env sh\\nservice nginx start; service uwsgi start; tail -qf /var/log/uwsgi/app/*.log /var/log/nginx/*.log' > start_script.sh\n\nCMD sh /start_script.sh\n"
}