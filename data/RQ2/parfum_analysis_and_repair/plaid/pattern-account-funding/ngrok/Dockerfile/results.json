{
  "startTime": 1674218772531,
  "endTime": 1674218773326,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 7,
        "columnEnd": 92
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.9\n\nRUN set -x && \\\n    apk add --no-cache -t .deps ca-certificates && \\\n    # Install glibc on Alpine (required by docker-compose) from\n    # https://github.com/sgerrand/alpine-pkg-glibc\n    # See also https://github.com/gliderlabs/docker-alpine/issues/11\n    wget -q -O /etc/apk/keys/sgerrand.rsa.pub https://alpine-pkgs.sgerrand.com/sgerrand.rsa.pub && \\\n    wget https://github.com/sgerrand/alpine-pkg-glibc/releases/download/2.29-r0/glibc-2.29-r0.apk && \\\n    apk add --no-cache glibc-2.29-r0.apk && \\\n    rm glibc-2.29-r0.apk && \\\n    apk del --purge .deps\n\nRUN set -x \\\n    # Install ngrok (latest official stable from https://ngrok.com/download).\n    && apk add --no-cache curl \\\n    && curl -f -Lo /ngrok.zip https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-amd64.zip \\\n    && unzip -o /ngrok.zip -d /bin \\\n    && rm -f /ngrok.zip \\\n    # Create non-root user.\n    && adduser -h /home/ngrok -D -u 6737 ngrok\nRUN ngrok --version\n\n# Add config script.\nCOPY --chown=ngrok ngrok.yml /home/ngrok/.ngrok2/\nCOPY entrypoint.sh /\n\nUSER ngrok\nENV USER=ngrok\n\nCMD [\"/entrypoint.sh\"]\n"
}