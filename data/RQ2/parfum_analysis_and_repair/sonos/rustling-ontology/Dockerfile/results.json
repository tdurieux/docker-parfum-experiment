{
  "startTime": 1674254830969,
  "endTime": 1674254832130,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 22,
        "columnEnd": 71
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 92
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 92
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 22,
        "columnEnd": 71
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 92
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 116
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:16.04\nRUN apt-get update && apt-get upgrade -y && apt-get clean\nRUN apt-get update && apt-get install --no-install-recommends -y python-setuptools python-wheel && rm -rf /var/lib/apt/lists/*;\nRUN apt-get install --no-install-recommends -y gcc g++ curl wget unzip git pkg-config libssl-dev libssh2-1-dev cmake \\\n    && apt-get clean && rm -rf /var/lib/apt/lists/*;\n\n# Add user jenkins to the image\nRUN adduser --quiet --home /build/ build\n\nRUN git clone https://github.com/raspberrypi/tools /opt/pitools --depth 1\n\nUSER build\nWORKDIR /build\n\n#install rust\nRUN HOME=/build curl https://sh.rustup.rs -sSf | HOME=/build sh -s -- -y\n\n#setup path with cargo & protoc\nRUN echo 'PATH=/build/.cargo/bin:$PATH' >> /build/.bashrc\n\nRUN /build/.cargo/bin/cargo install dinghy\n\nRUN /build/.cargo/bin/rustup target install armv7-unknown-linux-gnueabihf \\\n    &&  /build/.cargo/bin/rustup target install arm-unknown-linux-gnueabihf\n\nRUN echo '[target.arm-unknown-linux-gnueabihf]\\n\\\nlinker = \"/opt/pitools/arm-bcm2708/arm-rpi-4.9.3-linux-gnueabihf/bin/arm-linux-gnueabihf-gcc\"\\n\\\n\\n\\\n[target.armv7-unknown-linux-gnueabihf]\\n\\\nlinker = \"/opt/pitools/arm-bcm2708/arm-rpi-4.9.3-linux-gnueabihf/bin/arm-linux-gnueabihf-gcc\"\\n\\\n'>> /build/.cargo/config\n\n\nRUN echo 'export TARGET_CC=/opt/pitools/arm-bcm2708/arm-rpi-4.9.3-linux-gnueabihf/bin/arm-linux-gnueabihf-gcc' >> /build/.bashrc\n\nRUN ln -s /pypirc /build/.pypirc\nRUN ln -s /dinghy.toml /build/.dinghy.toml\nRUN ln -s /ssh-conf /build/.ssh\n\nWORKDIR /build/workdir\n"
}