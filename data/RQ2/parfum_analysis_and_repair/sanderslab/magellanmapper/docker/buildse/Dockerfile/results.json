{
  "startTime": 1674251680199,
  "endTime": 1674251681339,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 40,
        "columnStart": 25,
        "columnEnd": 19
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Docker build file for compiling SimpleElastix\n# Provides binary compatibility for older Linux kernels and Glibc\n# Author: David Young, 2020\n\nFROM ubuntu:16.04\n\nENV BASE_DIR /app\n\n# install build tools\n# - multiple Python version from deadsnakes PPA\n# - build tools including specific CMake version required for SimpleElastix\n# - OpenJDK 8 to build Python-Javabridge\n# - vim to allow editing\nRUN echo \"deb http://ppa.launchpad.net/deadsnakes/ppa/ubuntu xenial main\" \\\n        >> /etc/apt/sources.list \\\n    && echo \"deb-src http://ppa.launchpad.net/deadsnakes/ppa/ubuntu xenial main\" \\\n        >> /etc/apt/sources.list \\\n    && apt-key adv --keyserver keyserver.ubuntu.com --recv-keys \\\n        F23C5A6CF475977595C89F51BA6932366A755776 \\\n    && apt-get update && apt-get install --no-install-recommends -y \\\n        wget \\\n        git \\\n        gcc \\\n        gawk \\\n        bison \\\n        make \\\n        g++ \\\n        vim \\\n        python3.6 \\\n        python3.6-venv \\\n        python3.6-dev \\\n        python3.7 \\\n        python3.7-venv \\\n        python3.7-dev \\\n        python3.8 \\\n        python3.8-venv \\\n        python3.8-dev \\\n        python3.9 \\\n        python3.9-venv \\\n        python3.9-dev \\\n        default-jdk \\\n    && rm -rf /var/lib/apt/lists/* \\\n    && apt-get clean \\\n    && apt-get autoclean \\\n    && wget https://cmake.org/files/v3.10/cmake-3.10.3-Linux-x86_64.tar.gz -P /opt \\\n    && tar xzvf /opt/cmake-3.10.3-Linux-x86_64.tar.gz -C /opt \\\n    && rm /opt/cmake-3.10.3-Linux-x86_64.tar.gz\n\n# set up non-root user with sudo access\nARG username=magellan\nRUN mkdir /home/$username \\\n    && groupadd -r $username \\\n    && useradd -r -s /bin/false -g $username $username \\\n    && echo \"$username:$username\" | chpasswd \\\n    && usermod -aG sudo $username \\\n    && chown -R $username:$username /home/$username \\\n    && mkdir $BASE_DIR \\\n    && chown -R $username:$username $BASE_DIR\n\n# set up appliction base diretory and change to non-root user\nWORKDIR $BASE_DIR\nUSER $username\n\n# copy in scripts for setting up multiple Venv environments\nCOPY --chown=$username:$username bin/libmag.sh bin/setup_multi_venvs.sh \\\n        ./bin/\n\n# afterward, build SimpleElastix for multiple Python version by running,\n# assuming the output parent directory `<out>` has been mounted and contains\n# the SimpleElastix (otherwise it will be cloned there):\n# `bin/build_deps.sh -d <out>/builds_se -e venvs -s <out>/SimpleElastix`\nRUN echo 'export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64' >> ~/.bashrc \\\n    && echo 'export PATH=/opt/cmake-3.10.3-Linux-x86_64/bin:$JAVA_HOME/bin:$PATH' \\\n        >> ~/.bashrc \\\n    && . ~/.bashrc \\\n    && bin/setup_multi_venvs.sh -d venvs\n\n# copy in custom build scripts\nCOPY --chown=$username:$username bin/build_se.sh bin/build_jb.sh \\\n        bin/build_deps.sh ./bin/\n"
}