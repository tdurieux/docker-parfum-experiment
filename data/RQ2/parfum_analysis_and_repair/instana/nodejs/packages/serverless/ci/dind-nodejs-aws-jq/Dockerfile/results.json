{
  "startTime": 1674247071154,
  "endTime": 1674247072919,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 7,
        "columnEnd": 99
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 7,
        "columnEnd": 115
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 7,
        "columnEnd": 119
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 7,
        "columnEnd": 88
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# ----------------------------------------------------------------------------\n# Loosely based on\n#\n# https://github.com/karlkfi/concourse-dcind/blob/477674e4a27d79fa62099a86aa032017d4292d12/Dockerfile\n#\n# Modifications:\n# - Use a Node.js base image instead of raw alpine,\n# - add glibc because the AWS cli requires that (does not work with muslc)\n# - DOCKER_VERSION=20.10.11 instead of 19.03.2\n# - removed docker-compose and some related package (py-pip, python3-dev)\n# - removed docker squash support,\n# - added jq, and\n# - added/removed a bunch apk packages.\n#\n# Note: Needs to be run with --privileged.\n# ----------------------------------------------------------------------------\n\nFROM node:16.13.1-alpine3.14\n\nENV DOCKER_CHANNEL=stable \\\n    DOCKER_VERSION=20.10.11 \\\n    GLIBC_VER=2.34-r0\n\nRUN apk --update --no-cache add \\\n        bash \\\n        ca-certificates \\\n        cargo \\\n        curl \\\n        device-mapper \\\n        gcc \\\n        iptables \\\n        libc-dev \\\n        libffi-dev \\\n        make \\\n        musl-dev \\\n        openssl-dev \\\n        util-linux \\\n        jq \\\n        zip \\\n        && \\\n    apk upgrade && \\\n    curl -fL \"https://download.docker.com/linux/static/${DOCKER_CHANNEL}/x86_64/docker-${DOCKER_VERSION}.tgz\" | tar zx && \\\n    mv /docker/* /bin/ && chmod +x /bin/docker* && \\\n    rm -rf /var/cache/apk/* && \\\n    rm -rf /root/.cache\n\n# Install glibc compatibility for alpine plus AWS cli\nRUN apk --no-cache add \\\n        binutils \\\n    && curl -f -sL https://alpine-pkgs.sgerrand.com/sgerrand.rsa.pub -o /etc/apk/keys/sgerrand.rsa.pub \\\n    && curl -f -sLO https://github.com/sgerrand/alpine-pkg-glibc/releases/download/${GLIBC_VER}/glibc-${GLIBC_VER}.apk \\\n    && curl -f -sLO https://github.com/sgerrand/alpine-pkg-glibc/releases/download/${GLIBC_VER}/glibc-bin-${GLIBC_VER}.apk \\\n    && apk add --no-cache \\\n        glibc-${GLIBC_VER}.apk \\\n        glibc-bin-${GLIBC_VER}.apk \\\n    && curl -f -sL https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip -o awscliv2.zip \\\n    && unzip awscliv2.zip \\\n    && aws/install \\\n    && rm -rf \\\n        awscliv2.zip \\\n        aws \\\n        /usr/local/aws-cli/v2/*/dist/aws_completer \\\n        /usr/local/aws-cli/v2/*/dist/awscli/data/ac.index \\\n        /usr/local/aws-cli/v2/*/dist/awscli/examples \\\n    && apk --no-cache del \\\n        binutils \\\n    && rm glibc-${GLIBC_VER}.apk \\\n    && rm glibc-bin-${GLIBC_VER}.apk \\\n    && rm -rf /var/cache/apk/*\n\nCOPY entrypoint.sh /bin/entrypoint.sh\n\nENTRYPOINT [\"entrypoint.sh\"]\n"
}