diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/deivid-rodriguez/byebug/docker/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/deivid-rodriguez/byebug/docker/Dockerfile/repaired.Dockerfile
index ffe176e..d4a7539 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/deivid-rodriguez/byebug/docker/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/deivid-rodriguez/byebug/docker/Dockerfile/repaired.Dockerfile
@@ -47,14 +47,15 @@ RUN set -ex \
   && apk add --no-cache --virtual .ruby-builddeps $baseDeps $buildOnlyDeps \
   \
   && wget -O ruby.tar.xz "$ruby_download_url" \
-  && if [ "$ruby_download_sha256" != "" ]; then echo "$ruby_download_sha256 *ruby.tar.xz" | sha256sum -c -; fi \
-  \
+  && if [ "$ruby_download_sha256" != "" ]; then \
+  echo "$ruby_download_sha256  *ruby.tar.xz" | sha256sum -c -; fi \
+
   && mkdir -p /usr/src/ruby \
   && tar -xJf ruby.tar.xz -C /usr/src/ruby --strip-components=1 \
   && rm ruby.tar.xz \
-  \
+
   && cd /usr/src/ruby \
-  \
+
   && autoconf \
   && gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
   && ./configure \
@@ -65,7 +66,7 @@ RUN set -ex \
     --enable-shared \
   && make -j "$(nproc)" \
   && make install \
-  \
+
   && libDeps="$( \
     scanelf --needed --nobanner --format '%n#p' --recursive /usr/local \
       | tr ',' '\n' \
@@ -79,7 +80,7 @@ RUN set -ex \
     libc-dev \
     libc6-compat \
   " \
-  && apk add --virtual .ruby-rundeps $baseDeps $runOnlyDeps \
+  && apk add --no-cache --virtual .ruby-rundeps $baseDeps $runOnlyDeps \
   && apk del .ruby-builddeps \
   && cd / \
   && rm -r /usr/src/ruby
@@ -87,7 +88,7 @@ RUN set -ex \
 RUN SHELLCHECK_VERSION=v0.5.0 \
   && wget "https://storage.googleapis.com/shellcheck/shellcheck-$SHELLCHECK_VERSION.linux.x86_64.tar.xz" \
   && tar -xJf shellcheck-$SHELLCHECK_VERSION.linux.x86_64.tar.xz \
-  && cp shellcheck-$SHELLCHECK_VERSION/shellcheck /usr/bin/
+  && cp shellcheck-$SHELLCHECK_VERSION/shellcheck /usr/bin/ && rm shellcheck-$SHELLCHECK_VERSION.linux.x86_64.tar.xz
 
 RUN ln -s clang-format /usr/bin/clang-format-8