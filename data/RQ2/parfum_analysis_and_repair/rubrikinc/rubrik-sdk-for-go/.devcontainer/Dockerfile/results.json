{
  "startTime": 1674216236565,
  "endTime": 1674216237166,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 7,
        "columnEnd": 65
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 52,
        "columnEnd": 117
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Update the VARIANT arg in devcontainer.json to pick an Go version\nARG VARIANT=1\nFROM golang:${VARIANT}\n\n# This Dockerfile adds a non-root user with sudo access. Update the “remoteUser” property in\n# devcontainer.json to use it. More info: https://aka.ms/vscode-remote/containers/non-root-user.\nARG USERNAME=vscode\nARG USER_UID=1000\nARG USER_GID=$USER_UID\n\n# Options for common setup script - SHA generated on release\nARG INSTALL_ZSH=\"true\"\nARG UPGRADE_PACKAGES=\"false\"\nARG COMMON_SCRIPT_SOURCE=\"https://raw.githubusercontent.com/microsoft/vscode-dev-containers/master/script-library/common-debian.sh\"\nARG COMMON_SCRIPT_SHA=\"dev-mode\"\n\n# Install needed packages and setup non-root user. Use a separate RUN statement to add your own dependencies.\nRUN apt-get update \\\n    && export DEBIAN_FRONTEND=noninteractive \\\n    && apt-get -y install --no-install-recommends curl ca-certificates 2>&1 \\\n    && curl -f -sSL ${COMMON_SCRIPT_SOURCE} -o /tmp/common-setup.sh \\\n    && ( [ \"${COMMON_SCRIPT_SHA}\" = \"dev-mode\" ] || ( echo \"${COMMON_SCRIPT_SHA}  /tmp/common-setup.sh\" | sha256sum -c -)) \\\n    && /bin/bash /tmp/common-setup.sh \"${INSTALL_ZSH}\" \"${USERNAME}\" \"${USER_UID}\" \"${USER_GID}\" \"${UPGRADE_PACKAGES}\" \\\n    # Clean up\n    && apt-get autoremove -y \\\n    && apt-get clean -y \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Install Go tools\nARG GO_TOOLS_WITH_MODULES=\"\\\n    golang.org/x/tools/gopls \\\n    honnef.co/go/tools/... \\\n    golang.org/x/tools/cmd/gorename \\\n    golang.org/x/tools/cmd/goimports \\\n    golang.org/x/tools/cmd/guru \\\n    golang.org/x/lint/golint \\\n    github.com/mdempsky/gocode \\\n    github.com/cweill/gotests/... \\\n    github.com/haya14busa/goplay/cmd/goplay \\\n    github.com/sqs/goreturns \\\n    github.com/josharian/impl \\\n    github.com/davidrjenni/reftools/cmd/fillstruct \\\n    github.com/uudashr/gopkgs/v2/cmd/gopkgs \\\n    github.com/ramya-rao-a/go-outline \\\n    github.com/acroca/go-symbols \\\n    github.com/godoctor/godoctor \\\n    github.com/rogpeppe/godef \\\n    github.com/zmb3/gogetdoc \\\n    github.com/fatih/gomodifytags \\\n    github.com/mgechev/revive \\\n    github.com/go-delve/delve/cmd/dlv\"\nRUN mkdir -p /tmp/gotools \\\n    && cd /tmp/gotools \\\n    && export GOPATH=/tmp/gotools \\\n    # Go tools w/module support\n    && export GO111MODULE=on \\\n    && (echo \"${GO_TOOLS_WITH_MODULES}\" | xargs -n 1 go get -x )2>&1 \\\n    # gocode-gomod\n    && export GO111MODULE=auto \\\n    && go get -x -d github.com/stamblerre/gocode 2>&1 \\\n    && go build -o gocode-gomod github.com/stamblerre/gocode \\\n    # golangci-lint\n    && curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b /usr/local/bin 2>&1 \\\n    # Move Go tools into path and clean up\n    && mv /tmp/gotools/bin/* /usr/local/bin/ \\\n    && mv gocode-gomod /usr/local/bin/ \\\n    && rm -rf /tmp/gotools\n\nENV GO111MODULE=auto"
}