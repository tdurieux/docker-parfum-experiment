{
  "startTime": 1674215574360,
  "endTime": 1674215575183,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 74
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 74
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 74
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 33
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 98
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 82
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 57
      }
    }
  ],
  "repairedDockerfile": "# Create a docker image for the RPI\n# Build the docker image from the root of the project with the following command :\n# $ docker build -t librespot-rpi -f .\\contrib\\Dockerfile.Rpi .\n#\n# This builds a docker image which is usable when running docker on the rpi.\n#\n# This Dockerfile builds in windows without any requirements, for linux based systems you might need to run the following line:\n# docker run --rm --privileged multiarch/qemu-user-static:register --reset\n# (see here for more info: https://gist.github.com/PieterScheffers/d50f609d9628383e4c9d8d7d269b7643 )\n#\n# Save the docker image to a file:\n# $ docker save -o contrib/librespot-rpi librespot-rpi\n#\n# Move it to the rpi and import it with:\n# docker load -i librespot-rpi\n#\n# Run it with:\n# docker run -d --restart unless-stopped $(for DEV in $(find /dev/snd -type c); do echo --device=$DEV:$DEV; done) --net=host --name librespot-rpi librespot-rpi --name {devicename}\n\nFROM debian:stretch\n\nRUN dpkg --add-architecture armhf\nRUN apt-get update\n\nRUN apt-get install --no-install-recommends -y curl git build-essential crossbuild-essential-armhf && rm -rf /var/lib/apt/lists/*;\nRUN apt-get install --no-install-recommends -y libasound2-dev libasound2-dev:armhf && rm -rf /var/lib/apt/lists/*;\nRUN apt-get install --no-install-recommends -y pkg-config && rm -rf /var/lib/apt/lists/*;\n\nRUN curl https://sh.rustup.rs -sSf | sh -s -- -y\nENV PATH=\"/root/.cargo/bin/:${PATH}\"\nRUN rustup target add arm-unknown-linux-gnueabihf\n\nRUN mkdir /.cargo && \\\n    echo '[target.arm-unknown-linux-gnueabihf]\\nlinker = \"arm-linux-gnueabihf-gcc\"' >> /.cargo/config\n\nRUN mkdir /build\nENV CARGO_TARGET_DIR /build\nENV CARGO_HOME /build/cache\nENV PKG_CONFIG_PATH /usr/lib/arm-linux-gnueabihf/pkgconfig/\nENV PKG_CONFIG_ALLOW_CROSS 1\n\nADD . /src\nWORKDIR /src\n\nRUN cargo build --release --target arm-unknown-linux-gnueabihf --no-default-features --features \"alsa-backend\"\n\n\nFROM resin/rpi-raspbian\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends libasound2 && \\\n    rm -rf /var/lib/apt/lists/*\n\nRUN mkdir /librespot\nWORKDIR /librespot\n\nCOPY --from=0 /build/arm-unknown-linux-gnueabihf/release/librespot .\nRUN chmod +x librespot\nENTRYPOINT [\"./librespot\"]"
}