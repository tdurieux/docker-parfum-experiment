{
  "startTime": 1674255767290,
  "endTime": 1674255767866,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 38,
        "columnEnd": 49
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.16\nLABEL maintainer=\"contact@iknaio.com\"\n\nENV WORKDIR=/app\n\nRUN mkdir $WORKDIR && \\\n    apk --no-cache --update add bash nginx && \\\n    apk --no-cache --update --virtual build-dependendencies add npm nodejs python3 make g++\n\nWORKDIR $WORKDIR\nCOPY ./docker/docker-entrypoint.sh /\nCOPY ./elm.json ./elm-tooling.json ./index.html ./package*.json ./vite.config.js $WORKDIR/\n\nRUN chmod +x /docker-entrypoint.sh && npm install && npm cache clean --force;\n\nCOPY ./config $WORKDIR/config\nCOPY ./src $WORKDIR/src\nCOPY ./openapi $WORKDIR/openapi\nCOPY ./elm-hovercard $WORKDIR/elm-hovercard\nCOPY ./elm-css-sortable-table $WORKDIR/elm-css-sortable-table\nCOPY ./public $WORKDIR/public\nCOPY ./plugins $WORKDIR/plugins\nCOPY ./themes $WORKDIR/themes\nCOPY ./docker/site.conf /etc/nginx/http.d/\n\nRUN npm run build && \\\n    mkdir -p /usr/share/nginx/html /run/nginx && \\\n    mv $WORKDIR/dist/* /usr/share/nginx/html/ && \\\n    rm -rf /root/.config /root/.npm && \\\n    rm -f /etc/nginx/http.d/default.conf && \\\n    apk del build-dependendencies\n\nENTRYPOINT [\"/docker-entrypoint.sh\"]\nCMD [\"nginx\", \"-g\", \"daemon off;\"]\nEXPOSE 8000\n"
}