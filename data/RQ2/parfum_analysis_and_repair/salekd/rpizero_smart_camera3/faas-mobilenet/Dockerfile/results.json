{
  "startTime": 1674252879405,
  "endTime": 1674252880484,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 7,
        "columnEnd": 105
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 117
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 106
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 7,
        "columnEnd": 56
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04\n\n# Allows you to add additional packages via build-arg\nARG ADDITIONAL_PACKAGE\n\n# Alternatively use ADD https:// (which will not be cached by Docker builder)\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n    curl git unzip \\\n    python3-pip python3-dev python3-setuptools build-essential python3-tk \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/* \\\n    && echo \"Pulling watchdog binary from Github.\" \\\n    && curl -f -sSL https://github.com/openfaas/faas/releases/download/0.9.14/fwatchdog > /usr/bin/fwatchdog \\\n    && chmod +x /usr/bin/fwatchdog \\\n    && git clone https://github.com/tensorflow/models.git --branch v1.13.0\n\nWORKDIR /models/research/\nRUN curl -f -L -o protobuf.zip https://github.com/google/protobuf/releases/download/v3.0.0/protoc-3.0.0-linux-x86_64.zip \\\n    && unzip protobuf.zip \\\n    && ./bin/protoc object_detection/protos/*.proto --python_out=.\n\nWORKDIR /\nRUN curl -f -O http://download.tensorflow.org/models/object_detection/ssd_mobilenet_v1_coco_11_06_2017.tar.gz \\\n    && tar -zxvf ssd_mobilenet_v1_coco_11_06_2017.tar.gz && rm ssd_mobilenet_v1_coco_11_06_2017.tar.gz\n\nENV PYTHONPATH=/model/research:/model/research/slim\n# Disable TensorFlow warning messages\nENV TF_CPP_MIN_LOG_LEVEL=3\n\n# Add non root user\n#RUN addgroup -S app && adduser app -S -G app\nRUN adduser --disabled-password --gecos '' app\n\nWORKDIR /home/app/\n\nCOPY index.py           .\nCOPY requirements.txt   .\n\nRUN chown -R app /home/app\n\nUSER app\nENV PATH=$PATH:/home/app/.local/bin\nRUN pip3 install --no-cache-dir --user -r requirements.txt\n\nRUN mkdir -p function\nRUN touch ./function/__init__.py\n\nWORKDIR /home/app/function/\nCOPY function/requirements.txt\t.\nRUN pip3 install --no-cache-dir --user -r requirements.txt\n\nWORKDIR /home/app/\n\nUSER root\nCOPY function           function\nRUN chown -R app:app ./\nRUN chown -R app:app /ssd_mobilenet_v1_coco_11_06_2017\nUSER app\n\n# Make sure to allow enough time for the function to run\nENV read_timeout=10\nENV write_timeout=10\nENV exec_timeout=30\nENV fprocess=\"python3 index.py\"\nEXPOSE 8080\n\nHEALTHCHECK --interval=3s CMD [ -e /tmp/.lock ] || exit 1\n\nCMD [\"fwatchdog\"]\n"
}