diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/salekd/rpizero_smart_camera3/faas-mobilenet/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/salekd/rpizero_smart_camera3/faas-mobilenet/Dockerfile/repaired.Dockerfile
index b97bf1d..d7d0fc9 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/salekd/rpizero_smart_camera3/faas-mobilenet/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/salekd/rpizero_smart_camera3/faas-mobilenet/Dockerfile/repaired.Dockerfile
@@ -10,18 +10,18 @@ RUN apt-get update && apt-get install -y --no-install-recommends \
     && apt-get clean \
     && rm -rf /var/lib/apt/lists/* \
     && echo "Pulling watchdog binary from Github." \
-    && curl -sSL https://github.com/openfaas/faas/releases/download/0.9.14/fwatchdog > /usr/bin/fwatchdog \
+    && curl -f -sSL https://github.com/openfaas/faas/releases/download/0.9.14/fwatchdog > /usr/bin/fwatchdog \
     && chmod +x /usr/bin/fwatchdog \
     && git clone https://github.com/tensorflow/models.git --branch v1.13.0
 
 WORKDIR /models/research/
-RUN curl -L -o protobuf.zip https://github.com/google/protobuf/releases/download/v3.0.0/protoc-3.0.0-linux-x86_64.zip \
+RUN curl -f -L -o protobuf.zip https://github.com/google/protobuf/releases/download/v3.0.0/protoc-3.0.0-linux-x86_64.zip \
     && unzip protobuf.zip \
     && ./bin/protoc object_detection/protos/*.proto --python_out=.
 
 WORKDIR /
-RUN curl -O http://download.tensorflow.org/models/object_detection/ssd_mobilenet_v1_coco_11_06_2017.tar.gz \
-    && tar -zxvf ssd_mobilenet_v1_coco_11_06_2017.tar.gz
+RUN curl -f -O http://download.tensorflow.org/models/object_detection/ssd_mobilenet_v1_coco_11_06_2017.tar.gz \
+    && tar -zxvf ssd_mobilenet_v1_coco_11_06_2017.tar.gz && rm ssd_mobilenet_v1_coco_11_06_2017.tar.gz
 
 ENV PYTHONPATH=/model/research:/model/research/slim
 # Disable TensorFlow warning messages
@@ -40,14 +40,14 @@ RUN chown -R app /home/app
 
 USER app
 ENV PATH=$PATH:/home/app/.local/bin
-RUN pip3 install --user -r requirements.txt
+RUN pip3 install --no-cache-dir --user -r requirements.txt
 
 RUN mkdir -p function
 RUN touch ./function/__init__.py
 
 WORKDIR /home/app/function/
 COPY function/requirements.txt	.
-RUN pip3 install --user -r requirements.txt
+RUN pip3 install --no-cache-dir --user -r requirements.txt
 
 WORKDIR /home/app/