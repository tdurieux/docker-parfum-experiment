{
  "startTime": 1674250770815,
  "endTime": 1674250771819,
  "originalSmells": [
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 33
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# suggested usage: docker build --rm -t elks-dist:latest . && docker run -it --name elks-dist elks-dist:latest\nFROM ubuntu:20.04\nENTRYPOINT [\"bash\"]\n# install required tools, make non-root user and switch to it\nENV USER=builder \\\n    UID=1000 \\\n    GID=1000 \\\n    DEBIAN_FRONTEND=noninteractive \\\n    DEBCONF_NONINTERACTIVE_SEEN=true\nWORKDIR /elks\nRUN apt-get update -qq \\\n && apt-get install -y --no-install-recommends \\\n  flex bison texinfo libncurses5-dev \\\n  bash make g++ git libelf-dev \\\n  xxd ca-certificates wget mtools \\\n && rm -r /var/lib/apt/lists /var/cache/apt/archives \\\n && addgroup \\\n    --gid $GID \\\n    \"$USER\" \\\n && adduser \\\n    --disabled-password \\\n    --gecos \"\" \\\n    --home \"/elks\" \\\n    --ingroup \"$USER\" \\\n    --no-create-home \\\n    --uid \"$UID\" \\\n    \"$USER\" \\\n && chown $UID:$GID /elks && rm -rf /var/lib/apt/lists/*;\nUSER $USER\n# copy in code and build cross tooling\nCOPY --chown=$USER:$USER . /elks\nRUN mkdir -p \"cross\" \\\n && tools/build.sh\n\n# run the rest of the build interactively from step 3: https://github.com/jbruchon/elks/blob/master/BUILD.md\n# . ./env.sh\n# make menuconfig\n# make all\n\n# tarball the results and copy them out of the container\n# cd image && tar -cvzf binfiles.tar.gz *.bin\n\n# outside the container, on the host\n# docker cp elks-dist:/elks/image/binfiles.tar.gz .\n"
}