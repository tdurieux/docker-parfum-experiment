{
  "startTime": 1674216791925,
  "endTime": 1674216792709,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 1,
        "columnEnd": 47
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 1,
        "columnEnd": 26
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 1,
        "columnEnd": 29
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 1,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 20,
        "columnEnd": 36
      }
    }
  ],
  "repairedDockerfile": "FROM ruby:2.6.6 as base\n\nWORKDIR /app\nENV BUNDLE_PATH /gems\n\n# Install NodeJS based on https://github.com/nodesource/distributions#installation-instructions\nRUN apt-get update && \\\n # Installs the node repository\n curl -f -sL https://deb.nodesource.com/setup_16.x | bash && \\\n # Installs the node repository\n apt-get install --no-install-recommends --yes nodejs && \\\n npm install --global yarn && \\\n apt-get autoremove -y && npm cache clean --force; && rm -rf /var/lib/apt/lists/*;\n\n# Copy just what we need in order to bundle\nCOPY Gemfile Gemfile.lock .ruby-version /app/\n# We reference the engines in the Gemfile, so we need them to be there, too\nCOPY vendor/engines /app/vendor/engines\n\n# Install Bundler 2\nRUN gem install bundler --version=$(cat Gemfile.lock | tail -1 | tr -d \" \")\n\n# Build bundle\nRUN bundle install\n\n# Copy application code base into image\nCOPY . /app\n\nRUN cp config/database.yml.mysql.template config/database.yml && \\\n  cp config/secrets.yml.template config/secrets.yml\n\nEXPOSE 3000\nCMD [\"bundle\", \"exec\", \"puma\", \"-p\", \"3000\"]\n\nFROM base as develop\n\nENTRYPOINT [\"./docker-entrypoint.sh\"]\n\nFROM base as deploy\n\nENV RAILS_ENV production\nRUN bundle install --without=development test\nRUN yarn install && yarn cache clean;\n# asset compile\nRUN SECRET_KEY_BASE=fake bundle exec rake assets:precompile\n"
}