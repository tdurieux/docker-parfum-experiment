{
  "startTime": 1674217894907,
  "endTime": 1674217896299,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 8
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 31,
        "columnEnd": 47
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 18,
        "columnEnd": 34
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 12,
        "columnEnd": 28
      }
    }
  ],
  "repairedDockerfile": "# Stage 1\n\nFROM node:14-alpine as builder\n\nWORKDIR /app\n\nARG UNSPLASH_APPLICATION_ID\n\nENV NODE_ENV production\nENV UNSPLASH_APPLICATION_ID ${UNSPLASH_APPLICATION_ID}\n\nCOPY package.json .\nCOPY yarn.lock .\nCOPY scripts ./scripts\n\nRUN yarn --production=false && yarn cache clean;\n\nCOPY . .\n\nRUN yarn build && yarn cache clean;\n\n# Stage 2\n\nFROM node:14-alpine\nWORKDIR /app\n\nENV PORT 3000\nENV NODE_ENV production\n\nCOPY package.json .\nCOPY yarn.lock .\nCOPY scripts ./scripts\n\nRUN yarn && yarn cache clean;\n\nCOPY . .\n\nCOPY --from=builder /app/dist ./dist\n\nUSER node\n\nEXPOSE $PORT\n\nCMD [\"node\", \"server\"]\n\n"
}