{
  "startTime": 1674249797062,
  "endTime": 1674249798619,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 20,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 17
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 72,
        "lineEnd": 77,
        "columnStart": 9,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 84,
        "lineEnd": 84,
        "columnStart": 4,
        "columnEnd": 60
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 20,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 17
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 72,
        "lineEnd": 77,
        "columnStart": 9,
        "columnEnd": 30
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 20,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 17
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 72,
        "lineEnd": 77,
        "columnStart": 9,
        "columnEnd": 30
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 84,
        "lineEnd": 84,
        "columnStart": 4,
        "columnEnd": 60
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 20,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 17
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 72,
        "lineEnd": 77,
        "columnStart": 9,
        "columnEnd": 30
      }
    }
  ],
  "repairedDockerfile": "# This Dockerfile prepares an image equipped with all necessary softwares to prepare\n# and upload SonarQube diagnostics\n#\n# Usage:\n#    docker login registry.gitlab.inria.fr\n#    docker build -f Dockerfile.sq -t registry.gitlab.inria.fr/gatb/simka/simka_sq .\n#    docker push registry.gitlab.inria.fr/gatb/simka/simka_sq\n#    NB: these tasks may be launched by gitlab-ci (manual job: update_simka_sq_image)\n#\n# References:\n#    see eg https://sed-bso.gitlabpages.inria.fr/sonarqube/#sec-2-5\n\nFROM debian:10\n\nENV FORCE_UNSAFE_CONFIGURE=1\nENV DEBIAN_FRONTEND noninteractive\n\nLABEL maintainer=\"Charles Deltel <charles.deltel@inria.fr>\"\n\nRUN apt-get update\nRUN apt install --no-install-recommends -y \\\n    make autoconf wget unzip \\\n    zlib1g-dev libcppunit-dev \\\n\tgit build-essential cmake clang clang-tidy gcovr lcov cppcheck valgrind python-pip pylint sudo vim tree \\\n\tdoxygen graphviz && rm -rf /var/lib/apt/lists/*; # for doxygen doc generation\n\nRUN pip install --no-cache-dir --upgrade pip\nRUN python -m pip install pytest pytest-cov setuptools scan-build\n\nRUN chmod a+rx /root && \\\n    mkdir -p /root/apps\n\nENV version_rats 2.4\nRUN cd /root/apps && \\\n    wget https://storage.googleapis.com/google-code-archive-downloads/v2/code.google.com/rough-auditing-tool-for-security/rats-${version_rats}.tgz && \\\n    tar -xzvf rats-${version_rats}.tgz && \\\n    cd rats-${version_rats} && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make && sudo make install && \\\n    rm /root/apps/rats-${version_rats}.tgz\n\nENV version_drmemory 2.2.0-1\nRUN cd /root/apps && \\\n    wget https://github.com/DynamoRIO/drmemory/releases/download/release_2.2.0/DrMemory-Linux-${version_drmemory}.tar.gz && \\\n    tar xf DrMemory-Linux-${version_drmemory}.tar.gz && \\\n    rm /root/apps/DrMemory-Linux-${version_drmemory}.tar.gz\n\nRUN cd /root/apps && \\\n    wget --no-check-certificate https://scan.coverity.com/download/linux64 --post-data \"token=XEJaJ1cAnqW-9M_zkmxd7w&project=Heat\" -O coverity_tool.tgz && \\\n    tar xf coverity_tool.tgz && \\\n    ln -s -f $PWD/cov-analysis-linux64-*/bin/cov-build /usr/local/bin/cov-build && \\\n    rm /root/apps/coverity_tool.tgz\n\nRUN cd /root/apps && \\\n    wget https://github.com/eriwen/lcov-to-cobertura-xml/archive/1.6.tar.gz && \\\n    tar xvf 1.6.tar.gz && \\\n    ln -s /root/apps/lcov-to-cobertura-xml-1.6/lcov_cobertura/lcov_cobertura.py /usr/local/bin/lcov_cobertura.py && \\\n    rm /root/apps/1.6.tar.gz\n\nRUN cd /root/apps && \\\n    git clone https://github.com/SonarOpenCommunity/sonar-cxx.git && \\\n    chmod +x /root/apps/sonar-cxx/cxx-sensors/src/tools/vera++Report2checkstyleReport.perl && \\\n    ln -s /root/apps/sonar-cxx/cxx-sensors/src/tools/vera++Report2checkstyleReport.perl /usr/local/bin/vera++Report2checkstyleReport.perl\n\nENV version_sonar 4.5.0.2216\nRUN cd /root/apps && \\\n    wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-${version_sonar}-linux.zip && \\\n    unzip sonar-scanner-cli-${version_sonar}-linux.zip && \\\n    ln -s /root/apps/sonar-scanner-${version_sonar}-linux/bin/sonar-scanner /usr/local/bin/sonar-scanner && \\\n    rm /root/apps/sonar-scanner-cli-${version_sonar}-linux.zip\n\n# cf. https://docs.docker.com/install/linux/docker-ce/debian/\n#RUN apt-get remove docker docker-engine docker.io containerd runc\nRUN sudo apt-get install --no-install-recommends -y \\\n    apt-transport-https \\\n    ca-certificates \\\n    curl \\\n    gnupg2 \\\n    software-properties-common && rm -rf /var/lib/apt/lists/*;\n\nRUN curl -fsSL https://download.docker.com/linux/debian/gpg | sudo apt-key add -\nRUN apt-key fingerprint 0EBFCD88\nRUN sudo add-apt-repository \\\n    \"deb [arch=amd64] https://download.docker.com/linux/debian $(lsb_release -cs) stable\" && \\\n    apt-get update && \\\n    apt-get install --no-install-recommends -y docker-ce docker-ce-cli containerd.io && rm -rf /var/lib/apt/lists/*;\n\nRUN docker --version\n\nRUN groupadd -f -g 1000 gitlab && \\\n    useradd -u 1000 -g gitlab -d /home/gitlab/ -ms /bin/bash gitlab && \\\n    mkdir /builds && \\\n    chown -R gitlab:gitlab /builds && \\\n    echo \"gitlab:gitlab\" | chpasswd && adduser gitlab sudo\n\nUSER gitlab\n\n# change the default shell to be bash\nSHELL [\"/bin/bash\", \"-c\"]\n\n# set DRMEMORY path (does not work without using an absolute path)\nENV DRMEMORY /root/apps/DrMemory-Linux-${version_drmemory}/bin64\n\n# default working directory is\nWORKDIR /builds\n"
}