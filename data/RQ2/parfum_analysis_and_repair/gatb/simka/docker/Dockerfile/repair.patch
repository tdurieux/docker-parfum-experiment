diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/gatb/simka/docker/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/gatb/simka/docker/Dockerfile/repaired.Dockerfile
index ec6befe..65554a3 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/gatb/simka/docker/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/gatb/simka/docker/Dockerfile/repaired.Dockerfile
@@ -2,7 +2,7 @@
 #
 #  Docker file for Simka project.
 #
-#  It prepares a Docker container to run Simka jobs: 
+#  It prepares a Docker container to run Simka jobs:
 #
 #    - bin/simka: computing simka results from sequencing data
 #    - scripts/visualization/run-visualization.py: making images from results of
@@ -27,7 +27,7 @@
 #    where:
 #        <command>: MUST BE one of: simka, visu, test
 #      <arguments>: remaining arguments passed in after <command> are passed
-#                   to the appropriate simka program: 
+#                   to the appropriate simka program:
 #                      - simka: will run 'bin/simka' within the container
 #                      - visu: will run 'scripts/visualization/run-visualization.py'
 #                              within the container
@@ -35,7 +35,7 @@
 #                   See https://github.com/GATB/simka
 #
 # == Sample Simka job with provided data:
-#    
+#   
 #    docker run --rm -i -t -v $PWD:/tmp simka_machine -c simka -- -in /opt/simka/example/simka_input.txt -out /tmp/simka_results/ -out-tmp /tmp/simka_temp_output
 #
 #    -> you should have results in $PWD/simka_results directory when Simka job is done.
@@ -46,7 +46,7 @@
 #       --rm                                    [2]
 #       -i -t                                   [3]
 #       -v $PWD:/tmp                            [4]
-#       simka_machine                           [5] 
+#       simka_machine                           [5]
 #       -c simka                                [6]
 #       --                                      [7]
 #       -in /opt/simka/example/simka_input.txt  [8]
@@ -60,24 +60,24 @@
 #       [1]: start Docker container
 #       [2]: destroy container when Docker finishes
 #            (it does NOT delete the 'simka_machine' image)
-#       [3]: start an interactive job 
+#       [3]: start an interactive job
 #            (for instance, you'll see messages on stdout, if any)
 #       [4]: mount a volume. This is required to get the results from Simka.
 #            Here, we say that current local directory will be viewed as '/tmp'
-#            from the inside of the container. 
+#            from the inside of the container.
 #       [5]: tell Docker which image to start: the 'simka_machine' of course.
-#       [6]: ask to start the simka program. Other option is to start the 
+#       [6]: ask to start the simka program. Other option is to start the
 #            'visu' task (see below). See companion file 'run_simka.sh' for
 #            more information.
 #       [7]: '--' is required to separate arguments [6] from the rest of the
 #            command line
 #       [8]: the data file to process with simka. Here we use a data file
 #            provided with the simka software to test it.
-#       [9]: tells simka where to put results. Of course, simka will write 
+#       [9]: tells simka where to put results. Of course, simka will write
 #            within /tmp directory inside the container. However, since we
 #            have directive [4], data writing is actually done in $PWD, i.e.
 #            a local directory.
-#       [10]: tells simka where to put temporary files. 
+#       [10]: tells simka where to put temporary files.
 #
 # == Sample Simka Visualization job with provided data
 #
@@ -86,9 +86,9 @@
 #    docker run --rm -i -t -v $PWD:/tmp simka_machine -c visu -- -in /tmp/simka_results/ -out /tmp/simka_results/ -pca -heatmap -tree
 #
 #    -> you should have PNG files in $PWD/simka_results directory.
-#    
+#   
 # == Additional notes
-# 
+#
 #   Root access inside the container:
 #
 #     - if running: docker exec -it simka_machine bash
@@ -97,7 +97,7 @@
 #
 #########################################################################################
 
-# Simka binary available on Github (see below) is built using a 
+# Simka binary available on Github (see below) is built using a
 # Debian 8 (jessie) based system on Inria Jenkins CI platform
 FROM debian:jessie
 
@@ -108,13 +108,13 @@ MAINTAINER Patrick Durand patrick.durand@inria.fr
 #    We always use the latest official SIMKA release.
 #
 ENV SIMKA_VERSION=1.4.0
-    
+
 # ###
 #     Package installation and configuration
 #
 RUN apt-get update && apt-get -y dist-upgrade \
     && apt-get install -y --no-install-recommends curl python2.7 r-base \
-    && apt-get clean
+    && apt-get clean && rm -rf /var/lib/apt/lists/*;
 
 # ###
 #     SIMKA installation: get the binary release from Github mirror.
@@ -123,7 +123,7 @@ RUN cd /opt \
     && export SIMKA_TGZ=simka-v${SIMKA_VERSION}-bin-Linux.tar.gz \
     && export GIT_URL=https://github.com/GATB/simka/releases/download \
     && export SIMKA_URL=${GIT_URL}/v${SIMKA_VERSION}/${SIMKA_TGZ} \
-    && curl -ksL ${SIMKA_URL} | tar xz \
+    && curl -f -ksL ${SIMKA_URL} | tar xz \
     && rm -f ${SIMKA_TGZ} \
     && mv simka-v${SIMKA_VERSION}-bin-Linux simka \
     && cd simka/bin \
@@ -138,7 +138,7 @@ COPY run_simka.sh /opt/simka
 RUN chmod +x /opt/simka/run_simka.sh
 
 # ###
-#     Start simka. 
+#     Start simka.
 #
 ENTRYPOINT ["/opt/simka/run_simka.sh"]