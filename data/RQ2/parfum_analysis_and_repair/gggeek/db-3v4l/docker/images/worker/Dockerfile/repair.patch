diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/gggeek/db-3v4l/docker/images/worker/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/gggeek/db-3v4l/docker/images/worker/Dockerfile/repaired.Dockerfile
index 52545e0..451e503 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/gggeek/db-3v4l/docker/images/worker/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/gggeek/db-3v4l/docker/images/worker/Dockerfile/repaired.Dockerfile
@@ -27,7 +27,7 @@ RUN if [ "${timezone}" != "none" ]; then echo "${timezone}" > /etc/timezone && d
 
 # Base packages (some are required by the steps below)
 # ------------------------------------------------------------------------------
-RUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get -y install \
+RUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends -y install \
     alien \
     default-mysql-client \
     curl \
@@ -48,17 +48,17 @@ RUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get -y install \
     sqlite3 \
     sudo \
     time \
-    unzip
+    unzip && rm -rf /var/lib/apt/lists/*;
 
 # DB connectors and helper tools
 # ------------------------------------------------------------------------------
 RUN pecl channel-update pecl.php.net
 
 # MS SQL server driver and php extension
-RUN curl https://packages.microsoft.com/keys/microsoft.asc | apt-key add -
-RUN curl https://packages.microsoft.com/config/debian/10/prod.list > /etc/apt/sources.list.d/mssql-release.list
+RUN curl -f https://packages.microsoft.com/keys/microsoft.asc | apt-key add -
+RUN curl -f https://packages.microsoft.com/config/debian/10/prod.list > /etc/apt/sources.list.d/mssql-release.list
 RUN apt-get update
-RUN DEBIAN_FRONTEND=noninteractive ACCEPT_EULA=Y apt-get -y install msodbcsql17 mssql-tools unixodbc-dev
+RUN DEBIAN_FRONTEND=noninteractive ACCEPT_EULA=Y apt-get --no-install-recommends -y install msodbcsql17 mssql-tools unixodbc-dev && rm -rf /var/lib/apt/lists/*;
 RUN sed -i 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/g' /etc/locale.gen
 RUN locale-gen
 RUN pecl install sqlsrv-5.7.0preview
@@ -70,13 +70,13 @@ RUN ln -s /etc/php/7.3/mods-available/pdo_sqlsrv.ini /etc/php/7.3/cli/conf.d/90-
 RUN echo 'export PATH=$PATH:/opt/mssql-tools/bin' > /etc/profile.d/mssql-tools.sh
 
 # Oracle Instant client, slpqlus and php extension
-RUN curl -L https://download.oracle.com/otn_software/linux/instantclient/195000/oracle-instantclient19.5-basic-19.5.0.0.0-1.x86_64.rpm -o /tmp/oracle-instantclient19.5-basic-19.5.0.0.0-1.x86_64.rpm
+RUN curl -f -L https://download.oracle.com/otn_software/linux/instantclient/195000/oracle-instantclient19.5-basic-19.5.0.0.0-1.x86_64.rpm -o /tmp/oracle-instantclient19.5-basic-19.5.0.0.0-1.x86_64.rpm
 RUN alien -i /tmp/oracle-instantclient19.5-basic-19.5.0.0.0-1.x86_64.rpm
-RUN curl -L https://download.oracle.com/otn_software/linux/instantclient/195000/oracle-instantclient19.5-sqlplus-19.5.0.0.0-1.x86_64.rpm -o /tmp/oracle-instantclient19.5-sqlplus-19.5.0.0.0-1.x86_64.rpm
+RUN curl -f -L https://download.oracle.com/otn_software/linux/instantclient/195000/oracle-instantclient19.5-sqlplus-19.5.0.0.0-1.x86_64.rpm -o /tmp/oracle-instantclient19.5-sqlplus-19.5.0.0.0-1.x86_64.rpm
 RUN alien -i /tmp/oracle-instantclient19.5-sqlplus-19.5.0.0.0-1.x86_64.rpm
-RUN curl -L https://download.oracle.com/otn_software/linux/instantclient/195000/oracle-instantclient19.5-tools-19.5.0.0.0-1.x86_64.rpm -o /tmp/oracle-instantclient19.5-tools-19.5.0.0.0-1.x86_64.rpm
+RUN curl -f -L https://download.oracle.com/otn_software/linux/instantclient/195000/oracle-instantclient19.5-tools-19.5.0.0.0-1.x86_64.rpm -o /tmp/oracle-instantclient19.5-tools-19.5.0.0.0-1.x86_64.rpm
 RUN alien -i /tmp/oracle-instantclient19.5-tools-19.5.0.0.0-1.x86_64.rpm
-RUN curl -L https://download.oracle.com/otn_software/linux/instantclient/195000/oracle-instantclient19.5-devel-19.5.0.0.0-1.x86_64.rpm -o /tmp/oracle-instantclient19.5-devel-19.5.0.0.0-1.x86_64.rpm
+RUN curl -f -L https://download.oracle.com/otn_software/linux/instantclient/195000/oracle-instantclient19.5-devel-19.5.0.0.0-1.x86_64.rpm -o /tmp/oracle-instantclient19.5-devel-19.5.0.0.0-1.x86_64.rpm
 RUN alien -i /tmp/oracle-instantclient19.5-devel-19.5.0.0.0-1.x86_64.rpm
 RUN echo 'LD_LIBRARY_PATH="/usr/lib/oracle/19.5/client64/lib/"' >> etc/environment
 RUN printf 'instantclient,/usr/lib/oracle/19.5/client64/lib\n' | pecl install oci8
@@ -87,7 +87,7 @@ RUN echo 'export PATH=$PATH:/usr/lib/oracle/19.5/client64/bin' > /etc/profile.d/
 # Composer global install
 # @todo a github oauth token should be saved in containers.env...
 # ------------------------------------------------------------------------------
-RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin && \
+RUN curl -f -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin && \
     mv /usr/local/bin/composer.phar /usr/local/bin/composer && \
     chmod 755 /usr/local/bin/composer
 
@@ -98,23 +98,23 @@ RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local
 #RUN echo 'PATH="/usr/local/bin:/usr/bin:/bin:/opt/mssql-tools/bin:/usr/lib/oracle/19.5/client64/bin"' >> etc/environment
 
 # mysqltuner.pl
-RUN curl -L http://mysqltuner.pl/ -o /usr/local/bin/mysqltuner.pl
+RUN curl -f -L https://mysqltuner.pl/ -o /usr/local/bin/mysqltuner.pl
 RUN chmod 0755 /usr/local/bin/mysqltuner.pl
 #RUN curl -L https://raw.githubusercontent.com/major/MySQLTuner-perl/master/basic_passwords.txt -o basic_passwords.txt
 #RUN curl -L https://raw.githubusercontent.com/major/MySQLTuner-perl/master/vulnerabilities.csv -o vulnerabilities.csv
 
 # tuning-primer.sh
-RUN curl -L https://launchpadlibrarian.net/78745738/tuning-primer.sh -o /usr/local/bin/tuning-primer.sh
+RUN curl -f -L https://launchpadlibrarian.net/78745738/tuning-primer.sh -o /usr/local/bin/tuning-primer.sh
 RUN chmod 0755 /usr/local/bin/tuning-primer.sh
 
 # Percona pt-toolkit
-RUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get -y install gnupg2
-RUN curl -L https://repo.percona.com/apt/percona-release_latest.generic_all.deb -o /tmp/percona-release_latest.generic_all.deb
+RUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends -y install gnupg2 && rm -rf /var/lib/apt/lists/*;
+RUN curl -f -L https://repo.percona.com/apt/percona-release_latest.generic_all.deb -o /tmp/percona-release_latest.generic_all.deb
 RUN dpkg -i /tmp/percona-release_latest.generic_all.deb
-RUN apt-get update && apt-get -y install percona-toolkit
+RUN apt-get update && apt-get -y --no-install-recommends install percona-toolkit && rm -rf /var/lib/apt/lists/*;
 
 # Redis cli and php extension
-RUN apt-get -y install redis-tools
+RUN apt-get -y --no-install-recommends install redis-tools && rm -rf /var/lib/apt/lists/*;
 # @todo add suport for igbinary serialization
 RUN yes '' | pecl install redis
 RUN echo "extension=redis.so" > /etc/php/7.3/mods-available/redis.ini
@@ -158,14 +158,14 @@ RUN chown -R ${container_user}:${container_user} /home/${container_user}
 # NodeJS recent version + yarn for building the web app frontend
 # @todo if those are only needed for developers of the app itself and not users, compile this in conditionally
 # ------------------------------------------------------------------------------
-RUN curl -sL https://deb.nodesource.com/setup_12.x | bash -
-RUN apt-get -y install nodejs
+RUN curl -f -sL https://deb.nodesource.com/setup_12.x | bash -
+RUN apt-get -y --no-install-recommends install nodejs && rm -rf /var/lib/apt/lists/*;
 
-RUN curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -
+RUN curl -f -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -
 # note: there is no yarn package attged with 'buster' release, only 'stable'...
 RUN echo "deb https://dl.yarnpkg.com/debian/ stable main" > /etc/apt/sources.list.d/yarn.list
 RUN apt-get update
-RUN apt-get -y install yarn
+RUN apt-get -y --no-install-recommends install yarn && rm -rf /var/lib/apt/lists/*;
 
 # Clear archives in apt cache folder
 # ------------------------------------------------------------------------------