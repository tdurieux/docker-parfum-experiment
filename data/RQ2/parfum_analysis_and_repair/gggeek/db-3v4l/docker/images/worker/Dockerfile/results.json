{
  "startTime": 1674253499730,
  "endTime": 1674253500994,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 111
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 4,
        "columnEnd": 197
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 74,
        "lineEnd": 74,
        "columnStart": 4,
        "columnEnd": 201
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 4,
        "columnEnd": 197
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 4,
        "columnEnd": 197
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 89,
        "lineEnd": 89,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 100,
        "lineEnd": 100,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 106,
        "lineEnd": 106,
        "columnStart": 4,
        "columnEnd": 103
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 111,
        "lineEnd": 111,
        "columnStart": 4,
        "columnEnd": 126
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 160,
        "lineEnd": 160,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 163,
        "lineEnd": 163,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 100,
        "lineEnd": 100,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 29,
        "lineEnd": 50,
        "columnStart": 22,
        "columnEnd": 9
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 104
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 110,
        "lineEnd": 110,
        "columnStart": 22,
        "columnEnd": 78
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 113,
        "lineEnd": 113,
        "columnStart": 22,
        "columnEnd": 56
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 116,
        "lineEnd": 116,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 161,
        "lineEnd": 161,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 167,
        "lineEnd": 167,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 104
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 116,
        "lineEnd": 116,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 161,
        "lineEnd": 161,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 167,
        "lineEnd": 167,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 29,
        "lineEnd": 50,
        "columnStart": 22,
        "columnEnd": 9
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 104
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 110,
        "lineEnd": 110,
        "columnStart": 22,
        "columnEnd": 78
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 113,
        "lineEnd": 113,
        "columnStart": 22,
        "columnEnd": 56
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 116,
        "lineEnd": 116,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 161,
        "lineEnd": 161,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 167,
        "lineEnd": 167,
        "columnStart": 4,
        "columnEnd": 27
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 128
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 116,
        "lineEnd": 116,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 161,
        "lineEnd": 161,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 167,
        "lineEnd": 167,
        "columnStart": 4,
        "columnEnd": 51
      }
    }
  ],
  "repairedDockerfile": "FROM debian:buster-slim\n\nLABEL \\\n    org.opencontainers.image.authors=\"ggiunta@gmail.com\" \\\n    org.opencontainers.image.url=\"https://github.com/gggeek/db-3v4l\" \\\n    org.opencontainers.image.documentation=\"https://github.com/gggeek/db-3v4l\" \\\n    org.opencontainers.image.source=\"https://github.com/gggeek/db-3v4l\" \\\n    org.opencontainers.image.licenses=\"GPL-2.0-or-later\" \\\n    org.opencontainers.image.title=\"DB-3va4l Worker\"\n\n### NB: we strive to keep building admin and worker containers as close as possible, to save on disk space and build time\n\nARG debian_mirror=none\nARG timezone=none\nARG do_update_os=true\nARG do_shrink_container=true\nARG container_user=user\n\n# Set up debian mirror\n# (use fixed debian mirrors if you have problems building on a given day)\n# ------------------------------------------------------------------------------\nRUN if [ \"${debian_mirror}\" != \"none\" ]; then printf \"deb ${debian_mirror} buster main\\n\" > /etc/apt/sources.list; fi\n\n# Configure timezone\n# ------------------------------------------------------------------------------\nRUN if [ \"${timezone}\" != \"none\" ]; then echo \"${timezone}\" > /etc/timezone && dpkg-reconfigure -f noninteractive tzdata; fi\n\n# Base packages (some are required by the steps below)\n# ------------------------------------------------------------------------------\nRUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends -y install \\\n    alien \\\n    default-mysql-client \\\n    curl \\\n    git \\\n    gnupg \\\n    locales \\\n    php-cli \\\n    php-curl \\\n    php-dev \\\n    php-mbstring \\\n    php-mysql \\\n    php-pgsql \\\n    php-sqlite3 \\\n    php-xml \\\n    php-zip \\\n    postgresql-client \\\n    procps \\\n    sqlite3 \\\n    sudo \\\n    time \\\n    unzip && rm -rf /var/lib/apt/lists/*;\n\n# DB connectors and helper tools\n# ------------------------------------------------------------------------------\nRUN pecl channel-update pecl.php.net\n\n# MS SQL server driver and php extension\nRUN curl -f https://packages.microsoft.com/keys/microsoft.asc | apt-key add -\nRUN curl -f https://packages.microsoft.com/config/debian/10/prod.list > /etc/apt/sources.list.d/mssql-release.list\nRUN apt-get update\nRUN DEBIAN_FRONTEND=noninteractive ACCEPT_EULA=Y apt-get --no-install-recommends -y install msodbcsql17 mssql-tools unixodbc-dev && rm -rf /var/lib/apt/lists/*;\nRUN sed -i 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/g' /etc/locale.gen\nRUN locale-gen\nRUN pecl install sqlsrv-5.7.0preview\nRUN echo 'extension=sqlsrv.so'> /etc/php/7.3/mods-available/sqlsrv.ini\nRUN ln -s /etc/php/7.3/mods-available/sqlsrv.ini /etc/php/7.3/cli/conf.d/90-sqlsrv.ini\nRUN pecl install pdo_sqlsrv-5.7.0preview\nRUN echo 'extension=pdo_sqlsrv.so'> /etc/php/7.3/mods-available/pdo_sqlsrv.ini\nRUN ln -s /etc/php/7.3/mods-available/pdo_sqlsrv.ini /etc/php/7.3/cli/conf.d/90-pdo_sqlsrv.ini\nRUN echo 'export PATH=$PATH:/opt/mssql-tools/bin' > /etc/profile.d/mssql-tools.sh\n\n# Oracle Instant client, slpqlus and php extension\nRUN curl -f -L https://download.oracle.com/otn_software/linux/instantclient/195000/oracle-instantclient19.5-basic-19.5.0.0.0-1.x86_64.rpm -o /tmp/oracle-instantclient19.5-basic-19.5.0.0.0-1.x86_64.rpm\nRUN alien -i /tmp/oracle-instantclient19.5-basic-19.5.0.0.0-1.x86_64.rpm\nRUN curl -f -L https://download.oracle.com/otn_software/linux/instantclient/195000/oracle-instantclient19.5-sqlplus-19.5.0.0.0-1.x86_64.rpm -o /tmp/oracle-instantclient19.5-sqlplus-19.5.0.0.0-1.x86_64.rpm\nRUN alien -i /tmp/oracle-instantclient19.5-sqlplus-19.5.0.0.0-1.x86_64.rpm\nRUN curl -f -L https://download.oracle.com/otn_software/linux/instantclient/195000/oracle-instantclient19.5-tools-19.5.0.0.0-1.x86_64.rpm -o /tmp/oracle-instantclient19.5-tools-19.5.0.0.0-1.x86_64.rpm\nRUN alien -i /tmp/oracle-instantclient19.5-tools-19.5.0.0.0-1.x86_64.rpm\nRUN curl -f -L https://download.oracle.com/otn_software/linux/instantclient/195000/oracle-instantclient19.5-devel-19.5.0.0.0-1.x86_64.rpm -o /tmp/oracle-instantclient19.5-devel-19.5.0.0.0-1.x86_64.rpm\nRUN alien -i /tmp/oracle-instantclient19.5-devel-19.5.0.0.0-1.x86_64.rpm\nRUN echo 'LD_LIBRARY_PATH=\"/usr/lib/oracle/19.5/client64/lib/\"' >> etc/environment\nRUN printf 'instantclient,/usr/lib/oracle/19.5/client64/lib\\n' | pecl install oci8\nRUN echo 'extension=oci8.so'> /etc/php/7.3/mods-available/oci8.ini\nRUN ln -s /etc/php/7.3/mods-available/oci8.ini /etc/php/7.3/cli/conf.d/90-oci8.ini\nRUN echo 'export PATH=$PATH:/usr/lib/oracle/19.5/client64/bin' > /etc/profile.d/oracle-instantclient.sh\n\n# Composer global install\n# @todo a github oauth token should be saved in containers.env...\n# ------------------------------------------------------------------------------\nRUN curl -f -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin && \\\n    mv /usr/local/bin/composer.phar /usr/local/bin/composer && \\\n    chmod 755 /usr/local/bin/composer\n\n### Tools not shared with adminer\n\n# Make sure that the db clients tools are in the path for non-login, non-interactive shells...\n# Is there a better way than doing it this way ?\n#RUN echo 'PATH=\"/usr/local/bin:/usr/bin:/bin:/opt/mssql-tools/bin:/usr/lib/oracle/19.5/client64/bin\"' >> etc/environment\n\n# mysqltuner.pl\nRUN curl -f -L https://mysqltuner.pl/ -o /usr/local/bin/mysqltuner.pl\nRUN chmod 0755 /usr/local/bin/mysqltuner.pl\n#RUN curl -L https://raw.githubusercontent.com/major/MySQLTuner-perl/master/basic_passwords.txt -o basic_passwords.txt\n#RUN curl -L https://raw.githubusercontent.com/major/MySQLTuner-perl/master/vulnerabilities.csv -o vulnerabilities.csv\n\n# tuning-primer.sh\nRUN curl -f -L https://launchpadlibrarian.net/78745738/tuning-primer.sh -o /usr/local/bin/tuning-primer.sh\nRUN chmod 0755 /usr/local/bin/tuning-primer.sh\n\n# Percona pt-toolkit\nRUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends -y install gnupg2 && rm -rf /var/lib/apt/lists/*;\nRUN curl -f -L https://repo.percona.com/apt/percona-release_latest.generic_all.deb -o /tmp/percona-release_latest.generic_all.deb\nRUN dpkg -i /tmp/percona-release_latest.generic_all.deb\nRUN apt-get update && apt-get -y --no-install-recommends install percona-toolkit && rm -rf /var/lib/apt/lists/*;\n\n# Redis cli and php extension\nRUN apt-get -y --no-install-recommends install redis-tools && rm -rf /var/lib/apt/lists/*;\n# @todo add suport for igbinary serialization\nRUN yes '' | pecl install redis\nRUN echo \"extension=redis.so\" > /etc/php/7.3/mods-available/redis.ini\nRUN ln -s /etc/php/7.3/mods-available/redis.ini /etc/php/7.3/cli/conf.d/90-redis.ini\n\n# Local user\n# ------------------------------------------------------------------------------\n# nb: the 1013 used here for user id and group id is later on replaced by the code in bootstrap.sh...\n# q: why not use useradd and groupadd commands which can do more in one line?\nRUN addgroup --gid 1013 ${container_user} && \\\n    adduser --system --uid=1013 --gid=1013 --home /home/${container_user} --shell /bin/bash ${container_user} && \\\n    adduser ${container_user} ${container_user} && \\\n    mkdir -p /home/${container_user}/.ssh && \\\n    cp /etc/skel/.[!.]* /home/${container_user}/\n\n#COPY profile/.bash_profile /home/${container_user}/.bash_profile\nCOPY profile/.bashrc_append /tmp/.bashrc_append\nRUN cat /tmp/.bashrc_append >> /home/${container_user}/.bashrc\n\nRUN mkdir -p /home/${container_user}/.composer && \\\n    chown -R ${container_user}:${container_user} /home/${container_user}/.composer\n\n# Make shell nice for git usage - No need for running git commands within the container at the moment...\n#RUN curl -L https://raw.githubusercontent.com/git/git/master/contrib/completion/git-completion.bash -o /home/${container_user}/.git-completion.bash; \\\n#    curl -L https://github.com/git/git/raw/master/contrib/completion/git-prompt.sh -o /home/${container_user}/.git-prompt.sh;\n\n# Make user a passwordless sudoer.\n# Is this needed? 1. we are not running any service inside the container and 2. the end user can always connect as root\n#RUN adduser ${container_user} sudo && \\\n#    sed -i '$ a ${container_user}   ALL=\\(ALL:ALL\\) NOPASSWD: ALL' /etc/sudoers\n\n# Set up a keypair and authorized keys to allow inter-container passwordless ssh\n# This file is later used by bootstrap.sh\n#RUN ssh-keygen -t rsa -N \"\" -f /home/${container_user}/.ssh/id_rsa && cat /home/${container_user}/.ssh/id_rsa.pub > /home/${container_user}/.ssh/authorized_keys_fortarget && \\\n#    chown -R ${container_user}:${container_user} /home/${container_user}/.ssh\n\nRUN mkdir /home/${container_user}/data\n\nRUN chown -R ${container_user}:${container_user} /home/${container_user}\n\n# NodeJS recent version + yarn for building the web app frontend\n# @todo if those are only needed for developers of the app itself and not users, compile this in conditionally\n# ------------------------------------------------------------------------------\nRUN curl -f -sL https://deb.nodesource.com/setup_12.x | bash -\nRUN apt-get -y --no-install-recommends install nodejs && rm -rf /var/lib/apt/lists/*;\n\nRUN curl -f -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -\n# note: there is no yarn package attged with 'buster' release, only 'stable'...\nRUN echo \"deb https://dl.yarnpkg.com/debian/ stable main\" > /etc/apt/sources.list.d/yarn.list\nRUN apt-get update\nRUN apt-get -y --no-install-recommends install yarn && rm -rf /var/lib/apt/lists/*;\n\n# Clear archives in apt cache folder\n# ------------------------------------------------------------------------------\nRUN if [ \"${do_shrink_container}\" != \"false\" ]; then apt-get clean && rm -rf /var/lib/apt/lists/*; fi\nRUN if [ \"${do_shrink_container}\" != \"false\" ]; then rm -rf /tmp/*; fi\n\n# Set up entrypoint\n# ------------------------------------------------------------------------------\nCOPY bootstrap.sh /root/bootstrap.sh\nRUN chmod 755 /root/bootstrap.sh\n\nENTRYPOINT [\"/root/bootstrap.sh\"]\n"
}