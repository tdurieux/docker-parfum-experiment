{
  "startTime": 1674254393334,
  "endTime": 1674254394437,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 111
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 73,
        "lineEnd": 73,
        "columnStart": 4,
        "columnEnd": 197
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 4,
        "columnEnd": 201
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 4,
        "columnEnd": 197
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 79,
        "lineEnd": 79,
        "columnStart": 4,
        "columnEnd": 197
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 89,
        "lineEnd": 89,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 30,
        "lineEnd": 51,
        "columnStart": 22,
        "columnEnd": 9
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 104
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 101,
        "lineEnd": 103,
        "columnStart": 22,
        "columnEnd": 11
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 104
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 30,
        "lineEnd": 51,
        "columnStart": 22,
        "columnEnd": 9
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 104
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 101,
        "lineEnd": 103,
        "columnStart": 22,
        "columnEnd": 11
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 128
      }
    }
  ],
  "repairedDockerfile": "FROM debian:buster-slim\n\nLABEL \\\n    org.opencontainers.image.authors=\"ggiunta@gmail.com\" \\\n    org.opencontainers.image.url=\"https://github.com/gggeek/db-3v4l\" \\\n    org.opencontainers.image.documentation=\"https://github.com/gggeek/db-3v4l\" \\\n    org.opencontainers.image.source=\"https://github.com/gggeek/db-3v4l\" \\\n    org.opencontainers.image.licenses=\"GPL-2.0-or-later\" \\\n    org.opencontainers.image.title=\"DB-3va4l Admin\"\n\n### NB: we strive to keep building admin and worker containers as close as possible, to save on disk space and build time\n\nARG debian_mirror=none\nARG timezone=none\nARG do_update_os=true\nARG do_shrink_container=true\n# @todo do we need this argument ?\nARG container_user=user\n\n# Set up debian mirror\n# (use fixed debian mirrors if you have problems building on a given day)\n# ------------------------------------------------------------------------------\nRUN if [ \"${debian_mirror}\" != \"none\" ]; then printf \"deb ${debian_mirror} buster main\\n\" > /etc/apt/sources.list; fi\n\n# Configure timezone\n# ------------------------------------------------------------------------------\nRUN if [ \"${timezone}\" != \"none\" ]; then echo \"${timezone}\" > /etc/timezone && dpkg-reconfigure -f noninteractive tzdata; fi\n\n# Base packages (some are required by the steps below)\n# ------------------------------------------------------------------------------\nRUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends -y install \\\n    alien \\\n    default-mysql-client \\\n    curl \\\n    git \\\n    gnupg \\\n    locales \\\n    php-cli \\\n    php-curl \\\n    php-dev \\\n    php-mbstring \\\n    php-mysql \\\n    php-pgsql \\\n    php-sqlite3 \\\n    php-xml \\\n    php-zip \\\n    postgresql-client \\\n    procps \\\n    sqlite3 \\\n    sudo \\\n    time \\\n    unzip && rm -rf /var/lib/apt/lists/*;\n\n# DB connectors and helper tools\n# ------------------------------------------------------------------------------\nRUN pecl channel-update pecl.php.net\n\n# MS SQL server driver and php extension\nRUN curl -f https://packages.microsoft.com/keys/microsoft.asc | apt-key add -\nRUN curl -f https://packages.microsoft.com/config/debian/10/prod.list > /etc/apt/sources.list.d/mssql-release.list\nRUN apt-get update\nRUN DEBIAN_FRONTEND=noninteractive ACCEPT_EULA=Y apt-get --no-install-recommends -y install msodbcsql17 mssql-tools unixodbc-dev && rm -rf /var/lib/apt/lists/*;\nRUN sed -i 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/g' /etc/locale.gen\nRUN locale-gen\nRUN pecl install sqlsrv-5.7.0preview\nRUN echo 'extension=sqlsrv.so'> /etc/php/7.3/mods-available/sqlsrv.ini\nRUN ln -s /etc/php/7.3/mods-available/sqlsrv.ini /etc/php/7.3/cli/conf.d/90-sqlsrv.ini\nRUN pecl install pdo_sqlsrv-5.7.0preview\nRUN echo 'extension=pdo_sqlsrv.so'> /etc/php/7.3/mods-available/pdo_sqlsrv.ini\nRUN ln -s /etc/php/7.3/mods-available/pdo_sqlsrv.ini /etc/php/7.3/cli/conf.d/90-pdo_sqlsrv.ini\nRUN echo 'export PATH=$PATH:/opt/mssql-tools/bin' > /etc/profile.d/mssql-tools.sh\n\n# Oracle Instant client, slpqlus and php extension\nRUN curl -f -L https://download.oracle.com/otn_software/linux/instantclient/195000/oracle-instantclient19.5-basic-19.5.0.0.0-1.x86_64.rpm -o /tmp/oracle-instantclient19.5-basic-19.5.0.0.0-1.x86_64.rpm\nRUN alien -i /tmp/oracle-instantclient19.5-basic-19.5.0.0.0-1.x86_64.rpm\nRUN curl -f -L https://download.oracle.com/otn_software/linux/instantclient/195000/oracle-instantclient19.5-sqlplus-19.5.0.0.0-1.x86_64.rpm -o /tmp/oracle-instantclient19.5-sqlplus-19.5.0.0.0-1.x86_64.rpm\nRUN alien -i /tmp/oracle-instantclient19.5-sqlplus-19.5.0.0.0-1.x86_64.rpm\nRUN curl -f -L https://download.oracle.com/otn_software/linux/instantclient/195000/oracle-instantclient19.5-tools-19.5.0.0.0-1.x86_64.rpm -o /tmp/oracle-instantclient19.5-tools-19.5.0.0.0-1.x86_64.rpm\nRUN alien -i /tmp/oracle-instantclient19.5-tools-19.5.0.0.0-1.x86_64.rpm\nRUN curl -f -L https://download.oracle.com/otn_software/linux/instantclient/195000/oracle-instantclient19.5-devel-19.5.0.0.0-1.x86_64.rpm -o /tmp/oracle-instantclient19.5-devel-19.5.0.0.0-1.x86_64.rpm\nRUN alien -i /tmp/oracle-instantclient19.5-devel-19.5.0.0.0-1.x86_64.rpm\nRUN echo 'LD_LIBRARY_PATH=\"/usr/lib/oracle/19.5/client64/lib/\"' >> etc/environment\nRUN printf 'instantclient,/usr/lib/oracle/19.5/client64/lib\\n' | pecl install oci8\nRUN echo 'extension=oci8.so'> /etc/php/7.3/mods-available/oci8.ini\nRUN ln -s /etc/php/7.3/mods-available/oci8.ini /etc/php/7.3/cli/conf.d/90-oci8.ini\nRUN echo 'export PATH=$PATH:/usr/lib/oracle/19.5/client64/bin' > /etc/profile.d/oracle-instantclient.sh\n\n# Composer global install\n# ------------------------------------------------------------------------------\nRUN curl -f -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin && \\\n    mv /usr/local/bin/composer.phar /usr/local/bin/composer && \\\n    chmod 755 /usr/local/bin/composer\n\n# RUN mkdir -p /home/${container_user}/.composer && \\\n#    chown -R ${container_user}:${container_user} /home/${container_user}/.composer\n\n### Tools not shared with worker\n\n# Base packages - nginx, php-fpm, ...\n# NB All db interaction is done by the 'adminer' and 'worker' images...\n# -----------------------------------------------------------------------------\nRUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends -y install \\\n    nginx \\\n    php-fpm && rm -rf /var/lib/apt/lists/*;\n\n# Set up Nginx+PHP\n# -----------------------------------------------------------------------------\nCOPY nginx/sites-enabled/* /etc/nginx/sites-enabled/\nRUN rm /etc/nginx/sites-enabled/default\nCOPY php/7.3/fpm/pool.d/db3v4l.conf /etc/php/7.3/fpm/pool.d/db3v4l.conf\nRUN rm /etc/php/7.3/fpm/pool.d/www.conf\nCOPY php/7.3/fpm/conf.d/zz-db3v4l.ini /etc/php/7.3/fpm/conf.d/zz-db3v4l.ini\n\nRUN ln -s /etc/php/7.3/mods-available/sqlsrv.ini /etc/php/7.3/fpm/conf.d/90-sqlsrv.ini\nRUN ln -s /etc/php/7.3/mods-available/pdo_sqlsrv.ini /etc/php/7.3/fpm/conf.d/90-pdo_sqlsrv.ini\nRUN ln -s /etc/php/7.3/mods-available/oci8.ini /etc/php/7.3/fpm/conf.d/90-oci8.ini\n\n# @todo restart fpm\n\n# Clear archives in apt cache folder\n# ------------------------------------------------------------------------------\nRUN if [ \"${do_shrink_container}\" != \"false\" ]; then apt-get clean && rm -rf /var/lib/apt/lists/*; fi\nRUN if [ \"${do_shrink_container}\" != \"false\" ]; then rm -rf /tmp/*; fi\n\n# Set up entrypoint\n# ------------------------------------------------------------------------------\nCOPY bootstrap.sh /root/bootstrap.sh\nRUN chmod 755 /root/bootstrap.sh\n\nENTRYPOINT [\"/root/bootstrap.sh\"]\n"
}