diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/gggeek/db-3v4l/docker/images/adminer/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/gggeek/db-3v4l/docker/images/adminer/Dockerfile/repaired.Dockerfile
index 4cd0e90..746fd30 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/gggeek/db-3v4l/docker/images/adminer/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/gggeek/db-3v4l/docker/images/adminer/Dockerfile/repaired.Dockerfile
@@ -28,7 +28,7 @@ RUN if [ "${timezone}" != "none" ]; then echo "${timezone}" > /etc/timezone && d
 
 # Base packages (some are required by the steps below)
 # ------------------------------------------------------------------------------
-RUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get -y install \
+RUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends -y install \
     alien \
     default-mysql-client \
     curl \
@@ -49,17 +49,17 @@ RUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get -y install \
     sqlite3 \
     sudo \
     time \
-    unzip
+    unzip && rm -rf /var/lib/apt/lists/*;
 
 # DB connectors and helper tools
 # ------------------------------------------------------------------------------
 RUN pecl channel-update pecl.php.net
 
 # MS SQL server driver and php extension
-RUN curl https://packages.microsoft.com/keys/microsoft.asc | apt-key add -
-RUN curl https://packages.microsoft.com/config/debian/10/prod.list > /etc/apt/sources.list.d/mssql-release.list
+RUN curl -f https://packages.microsoft.com/keys/microsoft.asc | apt-key add -
+RUN curl -f https://packages.microsoft.com/config/debian/10/prod.list > /etc/apt/sources.list.d/mssql-release.list
 RUN apt-get update
-RUN DEBIAN_FRONTEND=noninteractive ACCEPT_EULA=Y apt-get -y install msodbcsql17 mssql-tools unixodbc-dev
+RUN DEBIAN_FRONTEND=noninteractive ACCEPT_EULA=Y apt-get --no-install-recommends -y install msodbcsql17 mssql-tools unixodbc-dev && rm -rf /var/lib/apt/lists/*;
 RUN sed -i 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/g' /etc/locale.gen
 RUN locale-gen
 RUN pecl install sqlsrv-5.7.0preview
@@ -71,13 +71,13 @@ RUN ln -s /etc/php/7.3/mods-available/pdo_sqlsrv.ini /etc/php/7.3/cli/conf.d/90-
 RUN echo 'export PATH=$PATH:/opt/mssql-tools/bin' > /etc/profile.d/mssql-tools.sh
 
 # Oracle Instant client, slpqlus and php extension
-RUN curl -L https://download.oracle.com/otn_software/linux/instantclient/195000/oracle-instantclient19.5-basic-19.5.0.0.0-1.x86_64.rpm -o /tmp/oracle-instantclient19.5-basic-19.5.0.0.0-1.x86_64.rpm
+RUN curl -f -L https://download.oracle.com/otn_software/linux/instantclient/195000/oracle-instantclient19.5-basic-19.5.0.0.0-1.x86_64.rpm -o /tmp/oracle-instantclient19.5-basic-19.5.0.0.0-1.x86_64.rpm
 RUN alien -i /tmp/oracle-instantclient19.5-basic-19.5.0.0.0-1.x86_64.rpm
-RUN curl -L https://download.oracle.com/otn_software/linux/instantclient/195000/oracle-instantclient19.5-sqlplus-19.5.0.0.0-1.x86_64.rpm -o /tmp/oracle-instantclient19.5-sqlplus-19.5.0.0.0-1.x86_64.rpm
+RUN curl -f -L https://download.oracle.com/otn_software/linux/instantclient/195000/oracle-instantclient19.5-sqlplus-19.5.0.0.0-1.x86_64.rpm -o /tmp/oracle-instantclient19.5-sqlplus-19.5.0.0.0-1.x86_64.rpm
 RUN alien -i /tmp/oracle-instantclient19.5-sqlplus-19.5.0.0.0-1.x86_64.rpm
-RUN curl -L https://download.oracle.com/otn_software/linux/instantclient/195000/oracle-instantclient19.5-tools-19.5.0.0.0-1.x86_64.rpm -o /tmp/oracle-instantclient19.5-tools-19.5.0.0.0-1.x86_64.rpm
+RUN curl -f -L https://download.oracle.com/otn_software/linux/instantclient/195000/oracle-instantclient19.5-tools-19.5.0.0.0-1.x86_64.rpm -o /tmp/oracle-instantclient19.5-tools-19.5.0.0.0-1.x86_64.rpm
 RUN alien -i /tmp/oracle-instantclient19.5-tools-19.5.0.0.0-1.x86_64.rpm
-RUN curl -L https://download.oracle.com/otn_software/linux/instantclient/195000/oracle-instantclient19.5-devel-19.5.0.0.0-1.x86_64.rpm -o /tmp/oracle-instantclient19.5-devel-19.5.0.0.0-1.x86_64.rpm
+RUN curl -f -L https://download.oracle.com/otn_software/linux/instantclient/195000/oracle-instantclient19.5-devel-19.5.0.0.0-1.x86_64.rpm -o /tmp/oracle-instantclient19.5-devel-19.5.0.0.0-1.x86_64.rpm
 RUN alien -i /tmp/oracle-instantclient19.5-devel-19.5.0.0.0-1.x86_64.rpm
 RUN echo 'LD_LIBRARY_PATH="/usr/lib/oracle/19.5/client64/lib/"' >> etc/environment
 RUN printf 'instantclient,/usr/lib/oracle/19.5/client64/lib\n' | pecl install oci8
@@ -87,7 +87,7 @@ RUN echo 'export PATH=$PATH:/usr/lib/oracle/19.5/client64/bin' > /etc/profile.d/
 
 # Composer global install
 # ------------------------------------------------------------------------------
-RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin && \
+RUN curl -f -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin && \
     mv /usr/local/bin/composer.phar /usr/local/bin/composer && \
     chmod 755 /usr/local/bin/composer
 
@@ -99,9 +99,9 @@ RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local
 # Base packages - nginx, php-fpm, ...
 # NB All db interaction is done by the 'adminer' and 'worker' images...
 # -----------------------------------------------------------------------------
-RUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get -y install \
+RUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends -y install \
     nginx \
-    php-fpm
+    php-fpm && rm -rf /var/lib/apt/lists/*;
 
 # Set up Nginx+PHP
 # -----------------------------------------------------------------------------