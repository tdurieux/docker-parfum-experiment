{
  "startTime": 1674219435316,
  "endTime": 1674219436480,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 30,
        "lineEnd": 37,
        "columnStart": 22,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 43,
        "lineEnd": 44,
        "columnStart": 22,
        "columnEnd": 17
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 30,
        "lineEnd": 37,
        "columnStart": 22,
        "columnEnd": 12
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 43,
        "lineEnd": 44,
        "columnStart": 22,
        "columnEnd": 17
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:buster-slim\n\nLABEL \\\n    org.opencontainers.image.authors=\"ggiunta@gmail.com\" \\\n    org.opencontainers.image.url=\"https://github.com/gggeek/db-3v4l\" \\\n    org.opencontainers.image.documentation=\"https://github.com/gggeek/db-3v4l\" \\\n    org.opencontainers.image.source=\"https://github.com/gggeek/db-3v4l\" \\\n    org.opencontainers.image.licenses=\"GPL-2.0-or-later\" \\\n    org.opencontainers.image.title=\"DB-3va4l Redis\"\n\nARG debian_mirror=none\nARG timezone=none\nARG do_update_os=true\nARG do_shrink_container=true\n\n# Set up debian mirror\n# (use fixed debian mirrors if you have problems building on a given day)\n# -----------------------------------------------------------------------------\nRUN if [ \"${debian_mirror}\" != \"none\" ]; then printf \"deb ${debian_mirror} buster main\\ndeb http://security.debian.org buster/updates main\\n\" > /etc/apt/sources.list; fi\n\n# Configure timezone\n# -----------------------------------------------------------------------------\nRUN if [ \"${timezone}\" != \"none\" ]; then echo \"${timezone}\" > /etc/timezone && dpkg-reconfigure -f noninteractive tzdata; fi\n\n# Update preinstalled packages\n# -----------------------------------------------------------------------------\nRUN if [ \"${do_update_os}\" != \"false\" ]; then apt-get update && DEBIAN_FRONTEND=noninteractive apt-get -y upgrade ; fi\n\n# Base packages - docker and lazydocker\n# -----------------------------------------------------------------------------\nRUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends -y install \\\n    apt-transport-https \\\n    ca-certificates \\\n    curl \\\n    gnupg2 \\\n    procps \\\n    software-properties-common \\\n    vim-tiny && rm -rf /var/lib/apt/lists/*;\nRUN curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -\nRUN add-apt-repository \\\n       \"deb [arch=amd64] https://download.docker.com/linux/debian \\\n       $(lsb_release -cs) \\\n       stable\"\nRUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends -y install \\\n    docker-ce-cli && rm -rf /var/lib/apt/lists/*;\n\nCOPY install_update_linux.sh /root/install_update_linux.sh\nRUN chmod 755 /root/install_update_linux.sh\nRUN /root/install_update_linux.sh\n\nRUN mkdir -p /root/.config/jesseduffield/lazydocker\nCOPY lazydocker/config.yml /root/.config/jesseduffield/lazydocker/config.yml\n\n# Clear archives in apt cache folder\n# -----------------------------------------------------------------------------\nRUN if [ \"${do_shrink_container}\" != \"false\" ]; then apt-get clean && rm -rf /var/lib/apt/lists/*; fi\n\n# Set up entrypoint\n# -----------------------------------------------------------------------------\nCOPY bootstrap.sh /root/bootstrap.sh\nRUN chmod 755 /root/bootstrap.sh\n\nENTRYPOINT [\"/root/bootstrap.sh\"]\n"
}