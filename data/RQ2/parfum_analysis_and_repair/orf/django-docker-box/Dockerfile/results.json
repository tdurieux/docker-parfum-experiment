{
  "startTime": 1674217136815,
  "endTime": 1674217138698,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 19,
        "lineEnd": 20,
        "columnStart": 7,
        "columnEnd": 82
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 37,
        "columnEnd": 55
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 107
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 12,
        "columnStart": 7,
        "columnEnd": 14
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG PYTHON_VERSION\nFROM python:${PYTHON_VERSION}-slim\n\nRUN apt-get update \\\n    && apt-get install --no-install-recommends -y \\\n          libmemcached-dev \\\n          build-essential \\\n          libsqlite3-mod-spatialite binutils libproj-dev gdal-bin libgdal20 libgeoip1 \\\n          default-libmysqlclient-dev default-mysql-client \\\n          unzip libaio1 \\\n          libenchant1c2a \\\n          gettext \\\n          wget \\\n    && apt-get clean && rm -rf /var/lib/apt/lists/*;\n\nRUN groupadd -r test && useradd --no-log-init -r -g test test\n\nRUN mkdir /geolite2/ \\\n    && cd /geolite2/ \\\n    && wget -q https://geolite.maxmind.com/download/geoip/database/GeoLite2-City.tar.gz \\\n        https://geolite.maxmind.com/download/geoip/database/GeoLite2-Country.tar.gz \\\n    && (cat *.tar.gz | tar zxvf - --wildcards \"*.mmdb\" --strip-components=1 -i) \\\n    && rm *.tar.gz \\\n    && cd /\n\nRUN wget -q https://raw.githubusercontent.com/vishnubob/wait-for-it/master/wait-for-it.sh -O /bin/wait-for-it.sh \\\n    && chmod a+x /bin/wait-for-it.sh\n\nENV PIP_NO_CACHE_DIR=off\nENV PYTHONDONTWRITEBYTECODE=1\nRUN pip install --no-cache-dir --upgrade pip\n\nCOPY --chown=test:test tests/requirements/ /requirements/\nRUN for f in /requirements/*.txt; do \\\n    pip install --no-cache-dir -r $f; \\\ndone && \\\n    pip install --no-cache-dir flake8 flake8-isort sphinx pyenchant sphinxcontrib-spelling selenium unittest-xml-reporting\n\nRUN mkdir /tests && chown -R test:test /tests\nRUN mkdir /tests/results && chown -R test:test /tests/results/\nUSER test:test\nENV PYTHONPATH \"${PYTHONPATH}:/tests/django/\"\nVOLUME /tests/django\nWORKDIR /tests/django\n"
}