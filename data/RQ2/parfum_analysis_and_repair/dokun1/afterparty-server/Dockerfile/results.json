{
  "startTime": 1674254250080,
  "endTime": 1674254250829,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 6,
        "columnStart": 26,
        "columnEnd": 23
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 18,
        "columnStart": 26,
        "columnEnd": 62
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM swift:5.2.4 as builder\n\n# For local build, add `--build-arg env=docker`\nARG env\n\nRUN apt-get -qq update && apt-get install --no-install-recommends -y \\\n  libssl-dev zlib1g-dev \\\n  && rm -r /var/lib/apt/lists/*\nWORKDIR /app\nCOPY . .\nRUN mkdir -p /build/lib && cp -R /usr/lib/swift/linux/*.so* /build/lib\nRUN swift build -c release && mv `swift build -c release --show-bin-path` /build/bin\n\n# Production image\nFROM ubuntu:18.04\nARG env\n# DEBIAN_FRONTEND=noninteractive for automatic UTC configuration in tzdata\nRUN apt-get -qq update && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y \\\n  libatomic1 libicu60 libxml2 libcurl4 libz-dev libbsd0 tzdata \\\n  && rm -r /var/lib/apt/lists/*\nWORKDIR /app\nCOPY --from=builder /build/bin/Run .\nCOPY --from=builder /build/lib/* /usr/lib/\n# Uncomment the next line if you need to load resources from the `Public` directory\nCOPY --from=builder /app/Public ./Public\n# Uncomment the next line if you are using Leaf\n#COPY --from=builder /app/Resources ./Resources\nENV ENVIRONMENT=$env\n\nENTRYPOINT ./Run serve --env $ENVIRONMENT --hostname 0.0.0.0 --port 80\n"
}