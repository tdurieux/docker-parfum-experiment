{
  "startTime": 1674249059889,
  "endTime": 1674249060709,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 22,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 22,
        "columnEnd": 289
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 22,
        "columnEnd": 45
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 22,
        "columnEnd": 90
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 22,
        "columnEnd": 48
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 22,
        "columnEnd": 289
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 22,
        "columnEnd": 45
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:jammy\n\nARG DEBIAN_FRONTEND=noninteractive\n\n# always run apt-get update before install to make sure we don't have a stale database\nRUN apt-get update && apt-get install -y --no-install-recommends apt-utils ca-certificates && rm -rf /var/lib/apt/lists/*;\n\n# Install and configure locale `en_US.UTF-8`\nRUN apt-get update && apt-get install --no-install-recommends -y locales && \\\n    sed -i -e \"s/# $en_US.*/en_US.UTF-8 UTF-8/\" /etc/locale.gen && \\\n    dpkg-reconfigure --frontend=noninteractive locales && \\\n    update-locale LANG=en_US.UTF-8 && rm -rf /var/lib/apt/lists/*;\nENV LANG=en_US.UTF-8\nENV TZ=\"America/Los_Angeles\"\n\nRUN apt-get update && apt-get install --no-install-recommends -y git python3 python3-pip g++ cmake python3-ply python3-tk tix pkg-config libssl-dev python3-setuptools libreadline-dev sudo python3-pyparsing python3-pynvim vim vim-nox aptitude tmux gdb build-essential pkg-config fzf bat ripgrep stow wget curl bear && rm -rf /var/lib/apt/lists/*;\nRUN pip install --no-cache-dir z3-solver ipdb\n\n# create a user who can use sudo:\nRUN apt-get update && apt-get install --no-install-recommends -y sudo && rm -rf /var/lib/apt/lists/*;\nRUN useradd -ms /bin/bash user && echo 'user:user' | chpasswd && adduser user sudo\nRUN echo \"ALL ALL=(ALL) NOPASSWD: ALL\" >> /etc/sudoers\n\nUSER user\n\n# install septum (tool to grep in big codebases)\nWORKDIR /home/user/\nRUN git clone https://github.com/pyjarrett/septum.git\nRUN wget https://github.com/alire-project/alire/releases/download/v1.1.2/alr-1.1.2-bin-x86_64-linux.zip\nRUN unzip /home/user/alr-1.1.2-bin-x86_64-linux.zip\nRUN rm LICENSE.txt\nWORKDIR /home/user/septum\nRUN /home/user/bin/alr toolchain -n --select\nRUN /home/user/bin/alr build\nRUN cp bin/septum /home/user/bin\nWORKDIR /home/user/\n\n# configure stuff:\nRUN curl -fLo /home/user/.vim/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim\nCOPY --chown=user:user dotfiles dotfiles\nWORKDIR /home/user/dotfiles/\nRUN stow vim\n# TODO: why not have stow create the following?\nRUN mkdir /home/user/.vim/backupfiles\nRUN mkdir /home/user/.vim/swapfiles\nRUN mkdir /home/user/.vim/undofiles\nRUN stow ctags\nRUN stow tmux\n# RUN stow zsh\nRUN stow gdb\n# RUN stow bash\nWORKDIR /home/user/\nRUN echo '\\n\\\n# disable C-S in case it causes freezing in vim\\n\\\nstty -ixon\\n\\\n# Avoid duplicates\\n\\\nHISTCONTROL=ignoredups:erasedups\\n\\\n# When the shell exits, append to the history file instead of overwriting it\\n\\\nshopt -s histappend\\n\\\n# After each command, append to the history file and reread it\\n\\\nPROMPT_COMMAND=\"${PROMPT_COMMAND:+$PROMPT_COMMAND$'\\n'}history -a; history -c; history -r\"\\n'\\\n>> /home/user/.bashrc\nRUN vim -E -s -u \"/home/user/.vimrc\" +PlugInstall +qall | true\nENV BAT_THEME=ansi\n\n# install ivy\nRUN git clone https://github.com/kenmcmil/ivy.git\nWORKDIR /home/user/ivy/\n# checkout Graydon's python3 branch:\nRUN git checkout 2to3\nRUN python3 setup.py develop --user\n\nENV PATH=/home/user/.local/bin:/home/user/bin:${PATH}\n\nWORKDIR /home/user/\n"
}