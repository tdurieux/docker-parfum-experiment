{
  "startTime": 1674253828695,
  "endTime": 1674253829329,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 22,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 22,
        "columnEnd": 213
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 22,
        "columnEnd": 90
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 22,
        "columnEnd": 48
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 22,
        "columnEnd": 213
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:jammy\n\nARG DEBIAN_FRONTEND=noninteractive\n\n# always run apt-get update before install to make sure we don't have a stale database\nRUN apt-get update && apt-get install -y --no-install-recommends apt-utils ca-certificates && rm -rf /var/lib/apt/lists/*;\n\n# Install and configure locale `en_US.UTF-8`\nRUN apt-get update && apt-get install --no-install-recommends -y locales && \\\n    sed -i -e \"s/# $en_US.*/en_US.UTF-8 UTF-8/\" /etc/locale.gen && \\\n    dpkg-reconfigure --frontend=noninteractive locales && \\\n    update-locale LANG=en_US.UTF-8 && rm -rf /var/lib/apt/lists/*;\nENV LANG=en_US.UTF-8\nENV TZ=\"America/Los_Angeles\"\n\nRUN apt-get update && apt-get install --no-install-recommends -y git python3 python3-pip g++ cmake python3-ply python3-tk tix pkg-config libssl-dev python3-setuptools libreadline-dev sudo python3-pyparsing build-essential pkg-config wget && rm -rf /var/lib/apt/lists/*;\n\nRUN useradd -ms /bin/bash user\nUSER user\nRUN pip install --no-cache-dir z3-solver\n\n# install ivy\nWORKDIR /home/user/\nRUN git clone https://github.com/kenmcmil/ivy.git\nWORKDIR /home/user/ivy/\n# checkout Graydon's python3 branch:\nRUN git checkout 2to3\nRUN python3 setup.py develop --user\n\nRUN mkdir /home/user/bin/\nENV PATH=/home/user/.local/bin:/home/user/bin:${PATH}\nCOPY --chown=user:user plot_dependencies.sh /home/user/bin/plot_dependencies.sh\nRUN chmod +x /home/user/bin/plot_dependencies.sh\nCOPY --chown=user:user check_invariants.sh /home/user/bin/check_invariants.sh\nRUN chmod +x /home/user/bin/check_invariants.sh\n\nCMD ivy_check\n"
}