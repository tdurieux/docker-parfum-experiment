{
  "startTime": 1674252265401,
  "endTime": 1674252266608,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 100
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 90
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 90
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Build stage, includes everything needed to build.\nFROM ubuntu:focal as buildstage\nENV DEBIAN_FRONTEND=noninteractive\nRUN apt-get update && \\\n    apt-get -y --no-install-recommends install iproute2 procps lsb-release \\\n                       git build-essential pkg-config autoconf automake libtool \\\n                       bison flex libpq-dev parallel libunwind-dev \\\n                       clang-10 libc++abi-10-dev libc++-10-dev \\\n                       postgresql cargo rustc && rm -rf /var/lib/apt/lists/*;\n\nCOPY . stellar-core/\nWORKDIR stellar-core\nRUN git clean -dXf\nRUN git submodule foreach --recursive git clean -dXf\n\nARG CC=clang-10\nARG CXX=clang++-10\nARG CFLAGS='-O3 -g1 -fno-omit-frame-pointer'\nARG CXXFLAGS='-O3 -g1 -fno-omit-frame-pointer -stdlib=libc++'\nARG CONFIGURE_FLAGS\n\nRUN ./autogen.sh\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" CC=\"${CC}\" CXX=\"${CXX}\" CFLAGS=\"${CFLAGS}\" CXXFLAGS=\"${CXXFLAGS}\" ${CONFIGURE_FLAGS}\nRUN sh -c 'make -j $(nproc)'\nRUN make install\n\n# Deploy stage, only includes stuff needed to run.\nFROM ubuntu:focal\nENV DEBIAN_FRONTEND=noninteractive\nRUN apt-get update && \\\n    apt-get -y --no-install-recommends install libunwind8 postgresql curl sqlite iproute2 libc++abi1-10 libc++1-10 && rm -rf /var/lib/apt/lists/*;\n\nCOPY --from=buildstage /usr/local/bin/stellar-core /usr/local/bin/stellar-core\nEXPOSE 11625\nEXPOSE 11626\nCMD stellar-core\n"
}