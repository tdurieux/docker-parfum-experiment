{
  "startTime": 1674248581102,
  "endTime": 1674248582261,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 86,
        "lineEnd": 86,
        "columnStart": 4,
        "columnEnd": 96
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 14,
        "columnEnd": 25
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 88,
        "lineEnd": 88,
        "columnStart": 4,
        "columnEnd": 60
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 22,
        "columnStart": 22,
        "columnEnd": 16
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 85,
        "lineEnd": 85,
        "columnStart": 22,
        "columnEnd": 46
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 22,
        "columnStart": 22,
        "columnEnd": 16
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 85,
        "lineEnd": 85,
        "columnStart": 22,
        "columnEnd": 46
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 67
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 76
      }
    }
  ],
  "repairedDockerfile": "FROM php:7.2-fpm\n\nRUN apt-get update -yqq && \\\n    apt-get install --no-install-recommends -y apt-utils openssl libssl-dev && \\\n    pecl channel-update pecl.php.net && \\\n    apt-get install --no-install-recommends -y git && \\\n    curl -f -sS https://getcomposer.org/installer | php && \\\n    mv composer.phar /usr/bin/composer && \\\n    composer config -g repo.packagist composer https://mirrors.aliyun.com/composer/ && rm -rf /var/lib/apt/lists/*;\n\nUSER root\n\n    # Install the zip mysqli pdo_mysql extension\nRUN apt-get install --no-install-recommends libzip-dev zip unzip -y && \\\n    docker-php-ext-configure zip --with-libzip && \\\n    docker-php-ext-install zip mysqli pdo_mysql && rm -rf /var/lib/apt/lists/*;\n\n\n   # install gd iconv extension\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n      libfreetype6-dev \\\n      libjpeg62-turbo-dev \\\n      libpng-dev \\\n    && docker-php-ext-install -j$(nproc) iconv \\\n    && docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \\\n    && docker-php-ext-install -j$(nproc) gd && rm -rf /var/lib/apt/lists/*;\n\nARG INSTALL_PHPREDIS=${INSTALL_PHPREDIS}\n\nRUN if [ ${INSTALL_PHPREDIS} = true ]; then \\\n    # Install Php Redis Extension\n    printf \"\\n\" | pecl install -o -f redis \\\n    &&  rm -rf /tmp/pear \\\n    &&  docker-php-ext-enable redis \\\n;fi\n\nARG INSTALL_SWOOLE=${INSTALL_SWOOLE}\n\nRUN if [ ${INSTALL_SWOOLE} = true ]; then \\\n    # Install Php Swoole Extension\n    if [ $(php -r \"echo PHP_MAJOR_VERSION;\") = \"5\" ]; then \\\n      pecl install swoole-2.0.11; \\\n    else \\\n      if [ $(php -r \"echo PHP_MINOR_VERSION;\") = \"0\" ]; then \\\n        pecl install swoole-2.2.0; \\\n      else \\\n        pecl install swoole; \\\n      fi \\\n    fi && \\\n    docker-php-ext-enable swoole \\\n;fi\n\nUSER root\n\nARG INSTALL_IMAGEMAGICK=${INSTALL_IMAGEMAGICK}\n\nRUN if [ ${INSTALL_IMAGEMAGICK} = true ]; then \\\n    apt-get install --no-install-recommends -y libmagickwand-dev imagemagick && \\\n    pecl install imagick && \\\n    docker-php-ext-enable imagick \\\n; rm -rf /var/lib/apt/lists/*; fi\n\n#install mongo ext\nARG INSTALL_MONGO=${INSTALL_MONGO}\n\nRUN if [ ${INSTALL_MONGO} = true ]; then \\\n    pecl install mongodb && \\\n    docker-php-ext-enable mongodb \\\n;fi\n#install tideways_xhprof and xhgui\nARG INSTALL_TIDEWAYS_XHPROF=${INSTALL_TIDEWAYS_XHPROF}\n\nRUN if [ ${INSTALL_TIDEWAYS_XHPROF} = true ]; then \\\n    git clone https://github.com/tideways/php-xhprof-extension.git && \\\n    cd php-xhprof-extension && \\\n    phpize && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n    make && make install \\\n; fi\n\n#amqp install\nARG INSTALL_AMQP=${INSTALL_AMQP}\n\nRUN if [ ${INSTALL_AMQP} = true ]; then \\\n    apt-get update && apt-get -y --no-install-recommends install cmake && \\\n    curl -f -L -o /tmp/rabbitmq-c.tar.gz https://github.com/alanxz/rabbitmq-c/archive/master.tar.gz && \\\n    mkdir -p rabbitmq-c && \\\n    tar -C rabbitmq-c -zxvf /tmp/rabbitmq-c.tar.gz --strip 1 && \\\n    cd rabbitmq-c/ && \\\n    mkdir _build && cd _build/ && \\\n    cmake .. && \\\n    cmake --build . --target install && \\\n    # Install the amqp extension\n    pecl install amqp && \\\n    docker-php-ext-enable amqp && \\\n    # Install the sockets extension\n    docker-php-ext-install sockets && \\\n    # Install bcmath\n    docker-php-ext-install bcmath \\\n; rm /tmp/rabbitmq-c.tar.gz rm -rf /var/lib/apt/lists/*; fi\n\n# Clean up\nRUN apt-get clean && \\\n    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* && \\\n    rm /var/log/lastlog /var/log/faillog\n\nRUN usermod -u 1000 www-data\n\nCMD [\"php-fpm\"]\n\nEXPOSE 9000\n"
}