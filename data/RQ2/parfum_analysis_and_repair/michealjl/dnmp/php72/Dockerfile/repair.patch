diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/michealjl/dnmp/php72/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/michealjl/dnmp/php72/Dockerfile/repaired.Dockerfile
index bb70093..ac6b200 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/michealjl/dnmp/php72/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/michealjl/dnmp/php72/Dockerfile/repaired.Dockerfile
@@ -1,29 +1,29 @@
 FROM php:7.2-fpm
 
 RUN apt-get update -yqq && \
-    apt-get install -y apt-utils openssl libssl-dev && \
+    apt-get install --no-install-recommends -y apt-utils openssl libssl-dev && \
     pecl channel-update pecl.php.net && \
-    apt-get install -y git && \
-    curl -sS https://getcomposer.org/installer | php && \
+    apt-get install --no-install-recommends -y git && \
+    curl -f -sS https://getcomposer.org/installer | php && \
     mv composer.phar /usr/bin/composer && \
-    composer config -g repo.packagist composer https://mirrors.aliyun.com/composer/
-    
+    composer config -g repo.packagist composer https://mirrors.aliyun.com/composer/ && rm -rf /var/lib/apt/lists/*;
+
 USER root
 
     # Install the zip mysqli pdo_mysql extension
-RUN apt-get install libzip-dev zip unzip -y && \
+RUN apt-get install --no-install-recommends libzip-dev zip unzip -y && \
     docker-php-ext-configure zip --with-libzip && \
-    docker-php-ext-install zip mysqli pdo_mysql
+    docker-php-ext-install zip mysqli pdo_mysql && rm -rf /var/lib/apt/lists/*;
 
 
    # install gd iconv extension
-RUN apt-get update && apt-get install -y \
+RUN apt-get update && apt-get install --no-install-recommends -y \
       libfreetype6-dev \
       libjpeg62-turbo-dev \
       libpng-dev \
     && docker-php-ext-install -j$(nproc) iconv \
     && docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \
-    && docker-php-ext-install -j$(nproc) gd
+    && docker-php-ext-install -j$(nproc) gd && rm -rf /var/lib/apt/lists/*;
 
 ARG INSTALL_PHPREDIS=${INSTALL_PHPREDIS}
 
@@ -55,10 +55,10 @@ USER root
 ARG INSTALL_IMAGEMAGICK=${INSTALL_IMAGEMAGICK}
 
 RUN if [ ${INSTALL_IMAGEMAGICK} = true ]; then \
-    apt-get install -y libmagickwand-dev imagemagick && \
+    apt-get install --no-install-recommends -y libmagickwand-dev imagemagick && \
     pecl install imagick && \
     docker-php-ext-enable imagick \
-;fi
+; rm -rf /var/lib/apt/lists/*; fi
 
 #install mongo ext
 ARG INSTALL_MONGO=${INSTALL_MONGO}
@@ -73,18 +73,16 @@ ARG INSTALL_TIDEWAYS_XHPROF=${INSTALL_TIDEWAYS_XHPROF}
 RUN if [ ${INSTALL_TIDEWAYS_XHPROF} = true ]; then \
     git clone https://github.com/tideways/php-xhprof-extension.git && \
     cd php-xhprof-extension && \
-    phpize && ./configure && \
+    phpize && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" && \
     make && make install \
-;fi
-    
+; fi
+
 #amqp install
 ARG INSTALL_AMQP=${INSTALL_AMQP}
 
 RUN if [ ${INSTALL_AMQP} = true ]; then \
-    # download and install manually, to make sure it's compatible with ampq installed by pecl later
-    # install cmake first
-    apt-get update && apt-get -y install cmake && \
-    curl -L -o /tmp/rabbitmq-c.tar.gz https://github.com/alanxz/rabbitmq-c/archive/master.tar.gz && \
+    apt-get update && apt-get -y --no-install-recommends install cmake && \
+    curl -f -L -o /tmp/rabbitmq-c.tar.gz https://github.com/alanxz/rabbitmq-c/archive/master.tar.gz && \
     mkdir -p rabbitmq-c && \
     tar -C rabbitmq-c -zxvf /tmp/rabbitmq-c.tar.gz --strip 1 && \
     cd rabbitmq-c/ && \
@@ -98,7 +96,7 @@ RUN if [ ${INSTALL_AMQP} = true ]; then \
     docker-php-ext-install sockets && \
     # Install bcmath
     docker-php-ext-install bcmath \
-;fi	
+; rm /tmp/rabbitmq-c.tar.gz rm -rf /var/lib/apt/lists/*; fi
 
 # Clean up
 RUN apt-get clean && \