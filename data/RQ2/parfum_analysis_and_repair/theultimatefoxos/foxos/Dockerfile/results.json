{
  "startTime": 1674219350487,
  "endTime": 1674219351752,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 66
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 68
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 89
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 97
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 97
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 97
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 4,
        "columnEnd": 25
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 121
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 4,
        "columnEnd": 49
      }
    }
  ],
  "repairedDockerfile": "FROM debian\n\nRUN apt update\nRUN apt install --no-install-recommends lbzip2 mtools dosfstools git gcc make automake g++ flex bison unzip curl gdisk -y && rm -rf /var/lib/apt/lists/*;\n\nENV PREFIX=\"/usr/local/foxos-x86_64_elf_gcc\"\nENV TARGET=x86_64-elf\nENV PATH=\"$PREFIX/bin:$PATH\"\nENV PROG_PREFIX=\"foxos-\"\nENV BUILD_DIR=\"/.toolchain/tmp\"\nENV CORES=8\n\nRUN mkdir $BUILD_DIR -pv\n\nWORKDIR /.toolchain/tmp\n\nRUN curl -f -O http://ftp.gnu.org/gnu/binutils/binutils-2.35.1.tar.gz\nRUN curl -f -O https://ftp.gnu.org/gnu/gcc/gcc-10.2.0/gcc-10.2.0.tar.gz\nRUN curl -f -O https://codeload.github.com/netwide-assembler/nasm/zip/refs/tags/nasm-2.15.05\n\nRUN tar xf binutils-2.35.1.tar.gz && rm binutils-2.35.1.tar.gz\nRUN tar xf gcc-10.2.0.tar.gz && rm gcc-10.2.0.tar.gz\nRUN unzip nasm-2.15.05\n\nRUN mkdir binutils-build\n\nWORKDIR /.toolchain/tmp/binutils-build\n\nRUN ../binutils-2.35.1/configure --target=$TARGET --program-prefix=$PROG_PREFIX --with-sysroot --disable-nls --disable-werror --prefix=$PREFIX\nRUN make -j $CORES\nRUN make install\n\nWORKDIR /.toolchain/tmp/gcc-10.2.0\n\nRUN ./contrib/download_prerequisites\nRUN echo \"MULTILIB_OPTIONS += mno-red-zone\" > gcc/config/i386/t-x86_64-elf\nRUN echo \"MULTILIB_DIRNAMES += no-red-zone\" >> gcc/config/i386/t-x86_64-elf\n\nRUN sed -i 's/x86_64-\\*-elf\\*)/x86_64-\\*-elf\\*)\\n\ttmake_file=\"\\${tmake_file} i386\\/t-x86_64-elf\" # include the new multilib configuration/' gcc/config.gcc\n\nWORKDIR /.toolchain/tmp\n\nRUN mkdir gcc-build\n\nWORKDIR /.toolchain/tmp/gcc-build\n\n\nRUN ../gcc-10.2.0/configure --target=$TARGET --program-prefix=$PROG_PREFIX --prefix=\"$PREFIX\" --disable-nls --enable-languages=c++ --without-headers\nRUN make all-gcc -j $CORES\nRUN make all-target-libgcc -j $CORES\nRUN make install-gcc\nRUN make install-target-libgcc\n\nWORKDIR /.toolchain/tmp/nasm-nasm-2.15.05\n\nRUN sh autogen.sh\nRUN sh configure --prefix=\"$PREFIX\"\n\nRUN make nasm -j $CORES\nRUN mv nasm $PREFIX/bin/$PROG_PREFIX\"nasm\" -v\n\nRUN rm -rf /.toolchain\nRUN apt install --no-install-recommends kpartx -y && rm -rf /var/lib/apt/lists/*;\n\n# needed for mujs patching\nRUN git config --global user.email \"you@example.com\"\nRUN git config --global user.name \"Your Name\"\n\nWORKDIR /root\n\nENTRYPOINT /bin/bash\n"
}