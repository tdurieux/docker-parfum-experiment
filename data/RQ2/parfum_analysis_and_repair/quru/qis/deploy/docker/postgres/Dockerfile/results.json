{
  "startTime": 1674251757189,
  "endTime": 1674251758307,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 47
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# QIS Database server\n#\n# Runs a pre-configured instance of PostgreSQL on Ubuntu 16.04.\n#\n# Environment variables:\n#   PG_USER - Optional - the QIS database login username\n#   PG_PASSWORD - Required - the QIS database login password\n#   PG_MAX_CONNECTIONS - Optional - the Postgres connection limit\n#   PG_SHARED_BUFFERS - Optional - the Postgres internal cache size\n#   PG_EFFECTIVE_CACHE_SIZE - Optional - the expected o/s free memory + buffers total\n#   PGDATA - Optional - the path at which to create the QIS database\n#\nFROM ubuntu:16.04\n\nLABEL maintainer=\"matt@quru.com\" \\\n      description=\"QIS Postgres service\"\n\n# Base o/s + app layer\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y apt-utils postgresql-9.5 && \\\n    apt-get clean && rm -rf /var/lib/apt/lists/*;\nRUN locale-gen en_GB.UTF-8 && update-locale LANG=en_GB.UTF-8 LC_ALL=en_GB.UTF-8\n\n# Ports\nEXPOSE 5432\n\n# Runtime environment variables\nENV PG_USER=qis \\\n    PG_PASSWORD=qispass \\\n    PG_MAX_CONNECTIONS=100 \\\n    PG_SHARED_BUFFERS=250MB \\\n    PG_EFFECTIVE_CACHE_SIZE=750MB\n\n# Software-specific environment variables\nENV PGDATA=/opt/qis/data\n\n# Add files to the image\nCOPY *.sh /\nRUN chmod a+x /*.sh\n\n# Create PGDATA\nRUN mkdir -p $PGDATA && chown postgres:postgres $PGDATA\n\nUSER postgres\n\n# Declare data volumes\nVOLUME $PGDATA\n\n# Run regular health checks\nHEALTHCHECK --interval=30s --timeout=10s --retries=3 \\\n    CMD [\"/check-postgres.sh\"]\n\n# Note the \"exec\" form of CMD allows docker stop signals to be sent to our run script\nCMD [\"/run-postgres.sh\"]\n"
}