{
  "startTime": 1674246915687,
  "endTime": 1674246918835,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 7,
        "columnEnd": 57
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 7,
        "columnEnd": 40
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM php:8-apache \n\nARG DEV_CONTAINER_USER_CMD\n\n# Avoid warnings by switching to noninteractive\nENV DEBIAN_FRONTEND=noninteractive\n\n# Check for and run optional user-supplied command to enable (advanced) customizations of the dev container\nRUN if [ -n \"${DEV_CONTAINER_USER_CMD}\" ]; then echo \"${DEV_CONTAINER_USER_CMD}\" | sh ; fi\n\n# Configure apt and install packages\nRUN apt-get update \\\n    && apt-get -y install --no-install-recommends apt-utils zip unzip nano ncdu 2>&1 \\\n    #\n    # Install git, procps, lsb-release (useful for CLI installs) \\\n    && apt-get -y --no-install-recommends install git iproute2 procps lsb-release \\\n    && apt-get -y --no-install-recommends install mariadb-client \\\n\n    # Install xdebug\n    && yes | pecl install xdebug \\\n    && echo \"zend_extension=$(find /usr/local/lib/php/extensions/ -name xdebug.so)\" > /usr/local/etc/php/conf.d/xdebug.ini \\\n    && echo \"xdebug.mode = debug\" >> /usr/local/etc/php/conf.d/xdebug.ini \\\n    && echo \"xdebug.start_with_request = yes\" >> /usr/local/etc/php/conf.d/xdebug.ini \\\n\t&& echo \"xdebug.client_port = 9003\" >> /usr/local/etc/php/conf.d/xdebug.ini \\\n\n\t# Configuring PHP\n    && touch \"/usr/local/etc/php/conf.d/custom.ini\" \\\n\t&& echo \"display_errors = on\" >> /usr/local/etc/php/conf.d/custom.ini \\\n\t&& echo \"memory_limit = 256m\" >> /usr/local/etc/php/conf.d/custom.ini \\\n\t&& echo \"upload_max_filesize = 256m\" >> /usr/local/etc/php/conf.d/custom.ini \\\n\t&& echo \"max_execution_time = 60\" >> /usr/local/etc/php/conf.d/custom.ini \\\n\t&& echo \"log_errors = On\" >> /usr/local/etc/php/conf.d/custom.ini \\\n\t&& echo \"error_log = /dev/stderr\" >> /usr/local/etc/php/conf.d/custom.ini \\\n\n\t# Install extensions (optional)\n\t&& docker-php-ext-install pdo_mysql \\\n\n    # Clean up\n    && apt-get autoremove -y \\\n    && apt-get clean -y \\\n    && rm -rf /var/lib/apt/lists/* \\\n\n#\n# Link our site config to the devcontainer\nRUN rm -rf /etc/apache2/sites-enabled \\\n\t&& ln -s /var/www/html/.devcontainer/sites-enabled /etc/apache2/sites-enabled\n\n# Adding VSCode user and fixing permissions\nRUN groupadd vscode && useradd -rm -d /var/www -s /bin/bash -g vscode -G www-data -u 1001 vscode \\\n    && chown -R www-data:www-data /var/www \\\n    && chmod g+w /var/www\nWORKDIR /var/www\nUSER vscode\n\n# Switch back to dialog for any ad-hoc use of apt-get\nENV DEBIAN_FRONTEND=dialog\nCOPY docker-entrypoint.sh /usr/local/bin\nENTRYPOINT [ \"docker-entrypoint.sh\" ]\n"
}