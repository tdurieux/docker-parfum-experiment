{
  "startTime": 1674256301052,
  "endTime": 1674256301933,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 111
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 71
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 92
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 18,
        "columnStart": 25,
        "columnEnd": 52
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 22,
        "columnEnd": 48
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 22,
        "columnEnd": 48
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# FROM nvidia/cuda:10.1-cudnn7-devel\nFROM nvidia/cuda:11.1.1-cudnn8-devel\n\nLABEL Author=\"Zumo Labs <info@zumolabs.ai>\"\nLABEL Title=\"Docker for Package Sim case study.\"\n\n# Environment variables\nENV ZPY_VERSION \"1.4.1rc5\"\nENV DEBIAN_FRONTEND noninteractive\nENV LANG C.UTF-8\n\n# Data directory\nENV DATA \"/data\"\n\n# Install basic python dev tools\nRUN apt-get clean\nRUN apt-get -y update && apt-get install --no-install-recommends -y \\\n\tpython3-opencv ca-certificates python3-dev git wget sudo \\\n\tcmake ninja-build protobuf-compiler libprotobuf-dev && \\\n  rm -rf /var/lib/apt/lists/*\nRUN ln -sv /usr/bin/python3 /usr/bin/python\n\n# gcc and git are needed to install stuff below\nRUN apt-get update && apt-get -y --no-install-recommends install gcc git && rm -rf /var/lib/apt/lists/*;\n\n# Set up Pip\nRUN wget https://bootstrap.pypa.io/get-pip.py && \\\n\tpython3 get-pip.py && rm get-pip.py\n\n# Tensorflow\nRUN pip install --no-cache-dir tensorboard\n\n# Pytorch\nRUN pip install --no-cache-dir --user torch==1.9 torchvision==0.10 -f https://download.pytorch.org/whl/cu111/torch_stable.html\nRUN pip install --no-cache-dir --user 'git+https://github.com/facebookresearch/fvcore'\n\n# Install Detectron2\nRUN git clone https://github.com/facebookresearch/detectron2 detectron2_repo\n# set FORCE_CUDA because during `docker build` cuda is not accessible\nENV FORCE_CUDA=\"1\"\n# This will by default build detectron2 for all common cuda architectures and take a lot more time,\n# because inside `docker build`, there is no way to tell which architecture will be used.\nARG TORCH_CUDA_ARCH_LIST=\"Kepler;Kepler+Tesla;Maxwell;Maxwell+Tegra;Pascal;Volta;Turing\"\nENV TORCH_CUDA_ARCH_LIST=\"${TORCH_CUDA_ARCH_LIST}\"\nRUN pip install --no-cache-dir --user -e detectron2_repo\n\n# Install pycocotools directly from github\nRUN pip install --no-cache-dir -U 'git+https://github.com/cocodataset/cocoapi.git#subdirectory=PythonAPI'\n\n# Set a fixed model cache directory.\nENV FVCORE_CACHE=\"/tmp\"\nWORKDIR /home\n\n# Install zpy (Zumo Labs Python)\nRUN pip install --no-cache-dir scikit-image==0.18.1\nRUN pip install --no-cache-dir zpy-zumo==${ZPY_VERSION}\n\n# Extra pip dependencies\nRUN pip install --no-cache-dir wandb\nRUN pip install --no-cache-dir cython\nRUN pip install --no-cache-dir lxml\nRUN pip install --no-cache-dir gin-config\nRUN pip install --no-cache-dir shapely\nRUN pip install --no-cache-dir scikit-learn\nRUN pip install --no-cache-dir opencv-python\nRUN pip install --no-cache-dir tqdm\nRUN pip install --no-cache-dir pyzmq\nRUN pip3 install --no-cache-dir jupyter\n\n# Copy over code\nCOPY . package\nWORKDIR /home/package\n\n# Connect and run jupyter Notebook\nCMD [\"jupyter\", \"notebook\", \"--port=8888\", \"--no-browser\", \"--ip=0.0.0.0\", \"--allow-root\"]\n\n\n\n"
}