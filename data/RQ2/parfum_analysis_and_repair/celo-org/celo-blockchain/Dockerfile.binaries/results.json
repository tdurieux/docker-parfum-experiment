{
  "startTime": 1674250891653,
  "endTime": 1674250892583,
  "originalSmells": [
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 18,
        "columnEnd": 94
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Purpose:\n# -------\n# This docker image is used by the ./cloudbuild-binaries.yaml CI flow to\n# cross-compile geth for different platforms.\n# At the time of writing this is only linux-{386/amd64} but there are two\n# pending update that will add darwin-{386,amd64} and windows-amd64 support.\n#\n# How to test changes to this image locally:\n# -----------------------------------------\n# First build the image:\n# docker build -f Dockerfile.binaries -t gcr.io/celo-testnet/geth-xgo-builder:$USER .\n#\n# Running this image depends on a series of environment variables:\n#   BUILD_TARGETS       Comma separated list of platforms to build for,\n#                       passed as an arg to xgo. eg: \"linux/386,linux/amd64\"\n#   TAG_NAME            Name of the tag associated with the current commit\n#   BRANCH_NAME         Name of the branch\n#   REPO_NAME           Name of the repo\n#   COMMIT_SHA          Full SHA of the commit\n#   COMMIT_TIMESTAMP    Commit timestamp\n#                       TODO: currently this is not accurately passed see\n#                             discussion in PR celo-blockchain#<number>\n#   CLOUDBUILD          True/False\n#   CI                  True/False\n#                       These two are used to comply with how geth handles build\n#                       environments internal/build/env.go where we have added a\n#                       branch for Cloudbuild\n# You also need to mount:\n#    $(pwd)/build/bin:/build - where binaries will be written\n#    $(pwd)/build/archives:/archives - where the archives (final release artfeact) will be written\n#    $(pwd):/go/src/github.com/celo-org/celo-blockchain - the source code\n#\n# With all of the above in place the container needs to execute two commands:\n# (see ./cloudbuild-binaries.yaml for example of the full command)\n# 1. Create the binaries:\n#    go run build/ci.go xgo --alltools -- -targets=$BUILD_TARGETS -v -dest /build\n# 2. Create release archives:\n#    go run build/ci.go xgo-archive -targets=$_BUILD_TARGETS -in /build -out /archives\n#\n# This will result in build archives stored in ./build/archives\n# In the CI flow these are then uploaded to cloud storage as artefacts.\n\n# Build Geth binaries in the xgo builder container\nFROM techknowlogick/xgo:go-1.16.x\n# techknowlogic/xgo is a fork of karalabe/xgo updated to ubunut-18, it is more maintained\n# by the community and allows us to backport mingw in order to build for windows\n# See discussion in PR celo-blockchain#<number> about downsides of this image\n\n# We need a newer version of mingw, backported to Bionic\nENV DEBIAN_FRONTEND=noninteractive\nRUN apt update && apt install -y  --no-install-recommends software-properties-common apt-utils && rm -rf /var/lib/apt/lists/*;\nRUN add-apt-repository -y ppa:mati865/mingw-w64\nRUN apt update && apt -y upgrade\n\nRUN mkdir -p /go/src/github.com/celo-org/celo-blockchain\nWORKDIR /go/src/github.com/celo-org/celo-blockchain\n"
}