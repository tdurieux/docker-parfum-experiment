{
  "startTime": 1674254022247,
  "endTime": 1674254023056,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 33
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Dockerfile format ripped from here: https://shaneutt.com/blog/rust-fast-small-docker-image-builds/\n# ------------------------------------------------------------------------------\n# Cargo Build Stage\n# ------------------------------------------------------------------------------\n\nFROM rust:latest as cargo-build\n\nRUN apt-get update && apt-get install --no-install-recommends musl-tools -y && rm -rf /var/lib/apt/lists/*;\n\nRUN rustup target add x86_64-unknown-linux-musl\n\nWORKDIR /usr/src/main\n\nCOPY Cargo.lock Cargo.lock\nCOPY Cargo.toml Cargo.toml\n\nRUN mkdir src/\n\nRUN echo \"fn main() {println!(\\\"if you see this, the build cache was invalidated\\\")}\" > src/main.rs\n\nRUN cargo build --release --target=x86_64-unknown-linux-musl\n\nRUN rm -f target/x86_64-unknown-linux-musl/release/deps/snark-setup-operator*\n\nCOPY src ./src\nCOPY LICENSE .\nCOPY Cargo.lock .\nCOPY README.md .\n\nRUN cargo build --release --bin generate --target=x86_64-unknown-linux-musl\nRUN cargo build --release --bin contribute --target=x86_64-unknown-linux-musl\nRUN cargo build --release --bin control --target=x86_64-unknown-linux-musl\nRUN cargo build --release --bin monitor --target=x86_64-unknown-linux-musl\nRUN cargo build --release --bin new_ceremony --target=x86_64-unknown-linux-musl\nRUN cargo build --release --bin verify_transcript --target=x86_64-unknown-linux-musl\n\n# ------------------------------------------------------------------------------\n# Final Stage\n# ------------------------------------------------------------------------------\n\nFROM alpine:latest\n\nRUN addgroup -g 1000 main\n\nRUN adduser -D -s /bin/sh -u 1000 -G main main\n\nWORKDIR /home/main/bin/\n\nCOPY --from=cargo-build /usr/src/main/target/x86_64-unknown-linux-musl/release/contribute .\nCOPY --from=cargo-build /usr/src/main/target/x86_64-unknown-linux-musl/release/generate .\nCOPY --from=cargo-build /usr/src/main/target/x86_64-unknown-linux-musl/release/control .\nCOPY --from=cargo-build /usr/src/main/target/x86_64-unknown-linux-musl/release/monitor .\nCOPY --from=cargo-build /usr/src/main/target/x86_64-unknown-linux-musl/release/new_ceremony .\nCOPY --from=cargo-build /usr/src/main/target/x86_64-unknown-linux-musl/release/verify_transcript .\n\nRUN chown main:main contribute\nRUN chown main:main generate\nRUN chown main:main control\nRUN chown main:main monitor\nRUN chown main:main new_ceremony\nRUN chown main:main verify_transcript\nRUN chown main:main .\n\nUSER main\n\nCMD [\"./contribute\"]\n"
}