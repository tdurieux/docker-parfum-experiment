{
  "startTime": 1674248655337,
  "endTime": 1674248656137,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 33,
        "columnEnd": 45
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 18,
        "columnEnd": 101
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 18,
        "columnEnd": 34
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 38,
        "columnEnd": 50
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Docker image for this file is hosted at\n# us.gcr.io/celo-testnet/celocli:master\n#\n# How to test changes to this file\n# docker build -f dockerfiles/cli/Dockerfile -t gcr.io/celo-testnet/celocli:$USER . --build-arg celo_env=alfajores\n# To run this image locally\n# docker rm cli_container; docker run --name cli_container -p 127.0.0.1:8545:8545 gcr.io/celo-testnet/celocli:$USER -v /\n# To run this image locally in ultralight mode\n# docker rm cli_container; docker run --name cli_container -p 127.0.0.1:8545:8545 -it --entrypoint=/celo/start_geth.sh gcr.io/celo-testnet/celocli:$USER \"/usr/local/bin/geth\" \"alfajores\" \"full\"\n# and connect to it with\n# docker exec -t -i cli_container /bin/sh\n#\n# Run commands against it using\n# docker exec -it cli_container celocli <sub-command>\n# For example,\n# docker exec -it cli_container celocli account:balance 0x456f41406B32c45D59E539e4BBA3D7898c3584dA\n# docker exec -it cli_container celocli account:balance 0xa0Af2E71cECc248f4a7fD606F203467B500Dd53B\n#\n# To restart\n# docker start -ai cli_container\n#\n# To kill\n# docker kill cli_container\n\nARG geth_tag=master\nARG geth_project=celo-testnet\n\n# Get geth and related files\nFROM us.gcr.io/$geth_project/geth:$geth_tag as geth\n\nARG celo_env\nRUN echo \"Env is ${celo_env}\" && apk add --no-cache curl && mkdir /celo\nADD https://www.googleapis.com/storage/v1/b/genesis_blocks/o/${celo_env}?alt=media /celo/genesis.json\nADD https://www.googleapis.com/storage/v1/b/static_nodes/o/${celo_env}?alt=media /celo/static-nodes.json\n\n# Build Celocli\nFROM node:10-alpine as node\n\nARG celo_env\n\nRUN echo \"geth_tag is ${geth_tag}\" && echo \"Env is ${celo_env}\"\n# Required for celocli\nRUN apk update && apk add --no-cache python git make gcc g++ pkgconfig libusb libusb-dev linux-headers eudev-dev\n\nWORKDIR /celo-monorepo/\nRUN npm install @celo/celocli && npm cache clean --force;\n\n# Build the combined image\nFROM node:10-alpine as final_image\n\nARG network_name=\"alfajores\"\nARG network_id=\"44787\"\n\n# Without musl-dev, geth will fail with a confusing \"No such file or directory\" error.\n# bash is required for start_geth.sh\nRUN apk update && apk add --no-cache musl-dev && apk add --no-cache bash\n\nWORKDIR /celo-monorepo/\n\nRUN echo \"Dir is ${PWD}\" && echo \"env is ${celo_env}\" && mkdir /celo\nCOPY packages/cli/start_geth.sh /celo/start_geth.sh\nCOPY --from=geth /usr/local/bin/geth /usr/local/bin/geth\nCOPY --from=geth /celo/genesis.json /celo\nCOPY --from=geth /celo/static-nodes.json /celo\nCOPY --from=node /celo-monorepo/node_modules /celo-monorepo/node_modules\nRUN chmod ugo+x /celo/start_geth.sh && ln -s /celo-monorepo/node_modules/.bin/celocli /usr/local/bin/celocli\n\nEXPOSE 8545 8546 30303 30303/udp\nENTRYPOINT [\"/celo/start_geth.sh\", \"/usr/local/bin/geth\", \"alfajores\", \"full\", \"44787\", \"/root/.celo\", \"/celo/genesis.json\", \"/celo/static-nodes.json\"]\n"
}