{
  "startTime": 1674255089205,
  "endTime": 1674255090189,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 42,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 19
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 42,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 19
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM rust:1.56 as builder\nWORKDIR /usr/src\n\n# 1a: Prepare for static linking\nRUN apt-get update && \\\n    apt-get dist-upgrade -y && \\\n    apt-get install --no-install-recommends -y musl-tools clang && \\\n    rustup target add x86_64-unknown-linux-musl && rm -rf /var/lib/apt/lists/*;\n\n# Add workspace to workdir\nCOPY agents ./agents\nCOPY chains ./chains\nCOPY tools ./tools\nCOPY optics-base ./optics-base\nCOPY optics-core ./optics-core\nCOPY optics-test ./optics-test\n\nCOPY Cargo.toml .\nCOPY Cargo.lock .\n\n# Build binaries\nRUN --mount=id=cargo,type=cache,target=/usr/src/target \\\n  --mount=id=cargo-home-registry,type=cache,target=/usr/local/cargo/registry \\\n  --mount=id=cargo-home-git,type=cache,target=/usr/local/cargo/git \\\n    cargo build --release\n\n# Copy artifacts out of volume\nWORKDIR /release\nRUN --mount=id=cargo,type=cache,target=/usr/src/target  cp /usr/src/target/release/updater .\nRUN --mount=id=cargo,type=cache,target=/usr/src/target  cp /usr/src/target/release/relayer .\n# Commented out pending https://github.com/celo-org/optics-monorepo/issues/782\n# RUN --mount=id=cargo,type=cache,target=/usr/src/target  cp /usr/src/target/release/watcher .\nRUN --mount=id=cargo,type=cache,target=/usr/src/target  cp /usr/src/target/release/processor .\nRUN --mount=id=cargo,type=cache,target=/usr/src/target  cp /usr/src/target/release/kathy .\nRUN --mount=id=cargo,type=cache,target=/usr/src/target  cp /usr/src/target/release/kms-cli .\nRUN --mount=id=cargo,type=cache,target=/usr/src/target  cp /usr/src/target/release/optics-cli .\n\n# 2: Copy the binaries to release image\nFROM ubuntu:20.04\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y libssl-dev \\\n    ca-certificates && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /app\nCOPY --from=builder /release/updater .\nCOPY --from=builder /release/relayer .\n# COPY --from=builder /release/watcher .\nCOPY --from=builder /release/processor .\nCOPY --from=builder /release/kathy .\nCOPY --from=builder /release/kms-cli .\nCOPY --from=builder /release/optics-cli .\nCOPY config ./config\nRUN chmod 777 /app\nRUN mkdir /usr/share/optics/ && chmod 1000 /usr/share/optics\nUSER 1000\nCMD [\"./watcher\"]"
}