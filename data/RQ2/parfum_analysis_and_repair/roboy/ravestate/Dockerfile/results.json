{
  "startTime": 1674248659097,
  "endTime": 1674248660146,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 79
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 22,
        "columnEnd": 46
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 22,
        "columnEnd": 46
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 28
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 52
      }
    }
  ],
  "repairedDockerfile": "FROM missxa/melodic-dashing-roboy\n\n# PLEASE INSERT ADDITIONAL LAYERS AT THE END OF THE FILE\n\n# ------------------------------------------------------\n# install neo4j\nRUN wget -O - https://debian.neo4j.org/neotechnology.gpg.key | apt-key add -\nRUN echo 'deb https://debian.neo4j.org/repo stable/' | tee /etc/apt/sources.list.d/neo4j.list\nRUN apt-get update && apt-get install --no-install-recommends -y neo4j && rm -rf /var/lib/apt/lists/*;\nRUN neo4j-admin set-initial-password test\n\n# ------------------------------------------------------\n# install redis\nRUN apt-get install --no-install-recommends -y redis && rm -rf /var/lib/apt/lists/*;\n\n# ------------------------------------------------------\n# install ravestate dependencies\nADD requirements.txt /tmp/requirements.txt\nADD requirements-dev.txt /tmp/requirements-dev.txt\nRUN pip3 install --no-cache-dir -r /tmp/requirements.txt\nRUN pip3 install --no-cache-dir -r /tmp/requirements-dev.txt\n\n# ------------------------------------------------------\n# download wildtalk and spacy models\nRUN python3 -c \"from roboy_parlai import wildtalk\"\nRUN python3 -c \"from pytorch_pretrained_bert import cached_path; \\\n    cached_path('https://s3.amazonaws.com/models.huggingface.co/transfer-learning-chatbot/finetuned_chatbot_gpt.tar.gz')\"\nRUN python3 -c \"from pytorch_transformers import GPT2Tokenizer, GPT2LMHeadModel; \\\n    GPT2Tokenizer.from_pretrained('gpt2-medium'); GPT2LMHeadModel.from_pretrained('gpt2-medium')\"\nRUN python3 -c \"from spacy.cli import download as spacy_download; spacy_download('en_core_web_sm')\"\n\n# ------------------------------------------------------\n# install pyroboy with melodic\n# add github repo metadata to bust cache when repo is updated\n# => bad idea due to github API rate limit, fails Travis builds now and then.\n# ADD https://api.github.com/repos/roboy/pyroboy/git/refs/heads/melodic pyroboy_version.json\nRUN cd ~/melodic_ws/src && git clone https://github.com/Roboy/pyroboy.git && \\\n    cd ~/melodic_ws/src/pyroboy && git checkout melodic && \\\n    cd ~/melodic_ws/src/roboy_communication && git pull && \\\n    cd ~/melodic_ws && . /opt/ros/melodic/setup.sh && catkin_make && . /opt/ros/melodic/setup.sh\n\n# ------------------------------------------------------\n# install face_oracle\nRUN pip3 install --no-cache-dir ecdsa\nRUN pip install --no-cache-dir -U face_recognition websocket_client pillow opencv-python numpy\n# add github repo metadata to bust cache when repo is updated\n# => bad idea due to github API rate limit, fails Travis builds now and then.\n# ADD https://api.github.com/repos/roboy/face_oracle/git/refs/heads/visionio_messages faceoracle_version.json\nRUN cd ~/melodic_ws/src && git clone https://github.com/Roboy/face_oracle.git && \\\n    cd ~/melodic_ws/src/face_oracle && git checkout visionio_messages && git pull && cd ~/melodic_ws && \\\n    . /opt/ros/melodic/setup.sh && catkin_make && . /opt/ros/melodic/setup.sh\n\n# install speech recognition requirements and download speech recognition\n# RUN apt install -y libasound-dev portaudio19-dev libportaudio2 libportaudiocpp0 python3-pyaudio\n# RUN pip3 install webrtcvad monotonic SpeechRecognition pyaudio\n# RUN cd /root/ros2_ws/src && git clone https://github.com/Roboy/ros2_speech_recognition.git\n"
}