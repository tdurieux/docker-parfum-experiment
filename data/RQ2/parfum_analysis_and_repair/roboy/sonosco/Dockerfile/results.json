{
  "startTime": 1674254586511,
  "endTime": 1674254587058,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 27,
        "columnEnd": 58
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 119
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 119
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 119
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM pytorch/pytorch:1.1.0-cuda10.0-cudnn7.5-devel\nARG CUDA=false\n\n\nWORKDIR /workspace/\nCOPY . .\n# install basics\nRUN apt-get update -y && apt-get install --no-install-recommends -y git curl ca-certificates bzip2 cmake tree htop bmon iotop sox libsox-dev libsox-fmt-all vim wget && rm -rf /var/lib/apt/lists/*;\n\nENV LD_LIBRARY_PATH=/usr/local/lib:$LD_LIBRARY_PATH\n\n# install python deps\nRUN pip install --no-cache-dir -r requirements.txt\n\nRUN rm -rf warp-ctc\nRUN git clone https://github.com/SeanNaren/warp-ctc.git\nRUN if [ \"$CUDA\" = false ] ; then sed -i 's/option(WITH_OMP \\\"compile warp-ctc with openmp.\\\" ON)/option(WITH_OMP \\\"compile warp-ctc with openmp.\\\" ${CUDA_FOUND})/' warp-ctc/CMakeLists.txt ; else export CUDA_HOME=\"/usr/local/cuda\" ; fi\nRUN cd warp-ctc; mkdir build; cd build; cmake ..; make\nRUN cd warp-ctc/pytorch_binding && python setup.py install\nRUN rm -rf warp-ctc\n\nRUN pip install --no-cache-dir -r post_requirements.txt\n\n\n#TODO: Do we need those two below?\n# install ctcdecode\n#RUN git clone --recursive https://github.com/parlance/ctcdecode.git\n#RUN cd ctcdecode; pip install .\n\n# install deepspeech.pytorch\nADD . /workspace/deepspeech.pytorch\nRUN cd deepspeech.pytorch; pip install --no-cache-dir -r requirements.txt\n\n# launch jupiter\nRUN pip install --no-cache-dir jupyter\nRUN mkdir data; mkdir notebooks;\n#CMD jupyter-notebook --ip=\"*\" --no-browser --allow-root"
}