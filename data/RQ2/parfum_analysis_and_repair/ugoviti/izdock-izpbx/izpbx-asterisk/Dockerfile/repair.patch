diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/ugoviti/izdock-izpbx/izpbx-asterisk/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/ugoviti/izdock-izpbx/izpbx-asterisk/Dockerfile/repaired.Dockerfile
index 19187a6..ec55d08 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/ugoviti/izdock-izpbx/izpbx-asterisk/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/ugoviti/izdock-izpbx/izpbx-asterisk/Dockerfile/repaired.Dockerfile
@@ -183,9 +183,9 @@ ENV APP_INSTALL_DEPS=' \
     iproute \
     bc \
   '
-  
+
   # NOTE: postfix > 3.4.x is required for docker logging to stdout
-  
+
 RUN set -xe && \
   ## import system information vars
   . /etc/os-release && \
@@ -234,7 +234,7 @@ RUN set -xe && \
   : "---------- Clean temporary files ----------" && \
   dnf clean all && \
   rm -rf /var/cache/{dnf,yum} ;fi && \
-  : "---------- ALL install finished ----------" 
+  : "---------- ALL install finished ----------"
 
 ### prep users
 RUN set -xe && \
@@ -324,25 +324,25 @@ RUN set -xe && \
   : "---------- START build spandsp ----------" && \
   cd /usr/src && \
   mkdir spandsp && \
-  curl -fSL --connect-timeout 30 http://sources.buildroot.net/spandsp/spandsp-${SPANDSP_VER}.tar.gz | tar xz --strip 1 -C spandsp && \
+  curl -fSL --connect-timeout 30 https://sources.buildroot.net/spandsp/spandsp-${SPANDSP_VER}.tar.gz | tar xz --strip 1 -C spandsp && \
   cd spandsp && \
-  ./configure --prefix=/usr && \
+  ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/usr && \
   make && \
   make install && \
   ldconfig && \
   : "---------- END build ----------" && \
-  \
+
   : "---------- START build iksemel ----------" && \
   cd /usr/src && \
   mkdir iksemel && \
   curl -fSL --connect-timeout 30 https://github.com/holme-r/iksemel/archive/${IKSEMEL_VER}.tar.gz | tar xz --strip 1 -C iksemel && \
   cd iksemel && \
-  ./configure --prefix=/usr && \
+  ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/usr && \
   make && \
   make install && \
   ldconfig && \
   : "---------- END build ----------" && \
-  \
+
   : "---------- START build ASTERISK ----------" && \
   ## @20210408 unreachable asterisk url
   ## http://downloads.asterisk.org/pub/telephony/asterisk/releases/asterisk-${ASTERISK_VER}.tar.gz
@@ -354,12 +354,12 @@ RUN set -xe && \
   mkdir asterisk && \
   curl -fSL --connect-timeout 30 https://github.com/asterisk/asterisk/archive/refs/tags/${ASTERISK_VER}.tar.gz | tar xz --strip 1 -C asterisk && \
   cd asterisk && \
-  \
+
   ./contrib/scripts/get_mp3_source.sh && \
-  ./configure --prefix=/usr --libdir=/usr/lib64 --with-pjproject-bundled --with-jansson-bundled --with-resample --with-ssl=ssl --with-srtp && \
-  \
+  ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/usr --libdir=/usr/lib64 --with-pjproject-bundled --with-jansson-bundled --with-resample --with-ssl=ssl --with-srtp && \
+
   make menuselect/menuselect menuselect-tree menuselect.makeopts && \
-  \
+
   menuselect/menuselect \
     --enable-category MENUSELECT_ADDONS \
     --enable-category MENUSELECT_CHANNELS \
@@ -443,7 +443,7 @@ RUN set -xe && \
   make samples && \
   ldconfig && \
   : "---------- END build ----------" && \
-  \
+
   : "---------- START build bcg729 ----------" && \
   cd /usr/src && \
   mkdir bcg729 && \
@@ -454,7 +454,7 @@ RUN set -xe && \
   make install && \
   ldconfig && \
   : "---------- END build ----------" && \
-  \
+
   if [[ ${ASTERISK_VER%%.*} -le 18 ]]; then \
   : "---------- START build asterisk-g72x ----------" && \
   cd /usr/src && \
@@ -462,12 +462,12 @@ RUN set -xe && \
   curl -fSL --connect-timeout 30 https://bitbucket.org/arkadi/asterisk-g72x/get/${ASTERISK_G72X_VER}.tar.gz | tar xz --strip 1 -C asterisk-g72x && \
   cd asterisk-g72x && \
   ./autogen.sh && \
-  ./configure --prefix=/usr --with-bcg729 --enable-penryn && \
+  ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/usr --with-bcg729 --enable-penryn && \
   make && \
   make install && \
-  ldconfig ;fi && \
+  ldconfig; fi && \
   : "---------- END build ----------" && \
-  \
+
   : "---------- START build sngrep ----------" && \
   cd /usr/src && \
   mkdir sngrep && \
@@ -475,19 +475,19 @@ RUN set -xe && \
   cd sngrep && \
   dnf -y install libpcap libpcap-devel && \
   ./bootstrap.sh && \
-  ./configure --prefix=/usr && \
+  ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/usr && \
   make && \
   make install && \
   ldconfig && \
   : "---------- END build ----------" && \
-  \
+
   if [[ ${APP_DEBUG} -eq 0 ]]; then \
   : "---------- Clean temporary files ----------" && \
   dnf remove -y $ASTERISK_BUILD_DEPS && \
   dnf clean all && \
   rm -rf /var/cache/yum /tmp /usr/src && \
-  mkdir -p /usr/src /tmp && chmod 1777 /tmp ;fi && \
-  : "---------- ALL builds finished ----------" 
+  mkdir -p /usr/src /tmp && chmod 1777 /tmp ; rm -rf /usr/srcfi && \
+  : "---------- ALL builds finished ----------"
 
 ### NOTE: asterisk build
 ## to get the options passed above: menuselect/menuselect --list-options
@@ -505,12 +505,12 @@ RUN set -xe && \
   \
   cd /usr/src && \
   mkdir freepbx && \
-  curl -fSL --connect-timeout 30 http://mirror.freepbx.org/modules/packages/freepbx/freepbx-${FREEPBX_VER}.0-latest.tgz | tar xz --strip 1 -C freepbx && \
+  curl -fSL --connect-timeout 30 https://mirror.freepbx.org/modules/packages/freepbx/freepbx-${FREEPBX_VER}.0-latest.tgz | tar xz --strip 1 -C freepbx && \
   cd freepbx && \
   ## download modules-*.xml file if not exist in local build dir
-  if [[ -e "/usr/src/modules-${FREEPBX_VER}.0.xml" ]]; then cp "/usr/src/modules-${FREEPBX_VER}.0.xml" "/usr/src/freepbx/modules-${FREEPBX_VER}.0.xml"; else \
-    curl -fSL --connect-timeout 30 http://mirror1.freepbx.org/modules-${FREEPBX_VER}.0.xml -o modules-${FREEPBX_VER}.0.xml \
-  ;fi && \
+  if [[ -e "/usr/src/modules-${FREEPBX_VER}.0.xml" ]];then cp "/usr/src/modules-${FREEPBX_VER}.0.xml" "/usr/src/freepbx/modules-${FREEPBX_VER}.0.xml";else \
+    curl -fSL --connect-timeout 30 https://mirror1.freepbx.org/modules-${FREEPBX_VER}.0.xml -o modules-${FREEPBX_VER}.0.xml \
+  ; fi && \
   mkdir -p amp_conf/htdocs/admin/modules/_cache && \
   for MODULE in \
       announcement \
@@ -546,13 +546,13 @@ RUN set -xe && \
       bulkhandler \
       speeddial \
       weakpasswords \
-      pm2 \
-      ; do \
+      pm2; \
+      do \
   echo "---------- PreDownloading module for offline install: $MODULE ----------" && \
   mkdir -p amp_conf/htdocs/admin/modules/$MODULE && \
   MODULE_VER=$(php -r "echo json_encode(simplexml_load_file('modules-${FREEPBX_VER}.0.xml'));" | jq -r ".module[] | select(.rawname == \"${MODULE}\") | {version}".version) && \
-  curl -sfSL --connect-timeout 30 http://mirror.freepbx.org/modules/packages/$MODULE/$MODULE-${MODULE_VER}.tgz | tar xz --strip 1 -C amp_conf/htdocs/admin/modules/$MODULE/ && \
-  curl -sfSL --connect-timeout 30 http://mirror.freepbx.org/modules/packages/$MODULE/$MODULE-${MODULE_VER}.tgz.gpg -o amp_conf/htdocs/admin/modules/_cache/$MODULE-${MODULE_VER}.tgz.gpg \
+  curl -sfSL --connect-timeout 30 https://mirror.freepbx.org/modules/packages/$MODULE/$MODULE-${MODULE_VER}.tgz | tar xz --strip 1 -C amp_conf/htdocs/admin/modules/$MODULE/ && \
+  curl -sfSL --connect-timeout 30 https://mirror.freepbx.org/modules/packages/$MODULE/$MODULE-${MODULE_VER}.tgz.gpg -o amp_conf/htdocs/admin/modules/_cache/$MODULE-${MODULE_VER}.tgz.gpg \
   ; done && \
   su - asterisk -s /bin/bash -c "gpg --refresh-keys --keyserver hkp://keyserver.ubuntu.com:80" && \
   su - asterisk -s /bin/bash -c "gpg --import /usr/src/freepbx/amp_conf/htdocs/admin/libraries/BMO/1588A7366BD35B34.key" && \