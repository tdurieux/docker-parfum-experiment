{
  "startTime": 1674250302901,
  "endTime": 1674250305310,
  "originalSmells": [
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 326,
        "lineEnd": 326,
        "columnStart": 2,
        "columnEnd": 99
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 507,
        "lineEnd": 507,
        "columnStart": 2,
        "columnEnd": 119
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 511,
        "lineEnd": 512,
        "columnStart": 4,
        "columnEnd": 3
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 553,
        "lineEnd": 553,
        "columnStart": 2,
        "columnEnd": 110
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 554,
        "lineEnd": 554,
        "columnStart": 2,
        "columnEnd": 184
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 488,
        "lineEnd": 488,
        "columnStart": 2,
        "columnEnd": 24
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 328,
        "lineEnd": 328,
        "columnStart": 2,
        "columnEnd": 27
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 339,
        "lineEnd": 339,
        "columnStart": 2,
        "columnEnd": 27
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 358,
        "lineEnd": 358,
        "columnStart": 2,
        "columnEnd": 138
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 464,
        "lineEnd": 464,
        "columnStart": 2,
        "columnEnd": 57
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 477,
        "lineEnd": 477,
        "columnStart": 2,
        "columnEnd": 27
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG IMAGE_FROM=rockylinux/rockylinux:8\n\nFROM ${IMAGE_FROM}\n\nMAINTAINER Ugo Viti <ugo.viti@initzero.it>\n\n### default app args used during build step\n#ARG APP_VER_MAJOR=\n#ARG APP_VER_MINOR=\n#ARG APP_VER_PATCH=\n\n## full app version\n#ARG APP_VER=${APP_VER_MAJOR}.${APP_VER_MINOR}.${APP_VER_PATCH}\nARG APP_VER=dev\nENV APP_VER=${APP_VER}\n\n### components app versions\n## https://downloads.asterisk.org/pub/telephony/asterisk/releases\nARG ASTERISK_VER=18.13.0\n\n## https://github.com/FreePBX/core/tags (only major version)\nARG FREEPBX_VER=16\n\n## https://www.fop2.com/download.php\nARG FOP2_VER=2.31.32\n\n## http://sources.buildroot.net/spandsp\nARG SPANDSP_VER=3.0.0-6ec23e5a7e\n\n## https://github.com/holme-r/iksemel\nARG IKSEMEL_VER=1.5.1.3\n\n## https://github.com/BelledonneCommunications/bcg729/tags\nARG BCG729_VER=1.1.1\n\n## https://bitbucket.org/arkadi/asterisk-g72x\nARG ASTERISK_G72X_VER=master\n\n## https://github.com/ugoviti/izsynth\nARG IZSYNTH_VER=5.0\n\n## https://github.com/ugoviti/zabbix-templates\nARG ZABBIX_TEMPLATE_VER=main\n\n## https://github.com/irontec/sngrep/releases\nARG SNGREP_VER=1.5.0\n\n### define variables for later container usage\nENV ASTERISK_VER=${ASTERISK_VER}\nENV FREEPBX_VER=${FREEPBX_VER}\nENV FOP2_VER=${FOP2_VER}\n\n## app name\nENV APP_NAME              \"izpbx-asterisk\"\nENV APP_DESCRIPTION       \"izPBX Cloud Native Telephony System\"\n\n## set default timezone\nENV TZ                    \"UTC\"\n\n## app users\nENV APP_UID               1000\nENV APP_GID               1000\nENV APP_USR               \"asterisk\"\nENV APP_GRP               \"asterisk\"\n\n## development debug mode (don't delete development and build dependencies on filesystem)\nARG APP_DEBUG=0\n\n## install packages\nENV APP_INSTALL_DEPS=' \\\n    rsync \\\n    net-tools \\\n    procps-ng \\\n    iptables \\\n    libnetfilter_conntrack \\\n    libnfnetlink \\\n    conntrack-tools \\\n    libnetfilter_cthelper \\\n    libnetfilter_cttimeout \\\n    libnetfilter_queue \\\n    iftop \\\n    lsof \\\n    strace \\\n    tcpdump \\\n    supervisor \\\n    curl \\\n    opus \\\n    logrotate \\\n    fail2ban-server \\\n    fail2ban-mail \\\n    fail2ban-sendmail \\\n    libedit \\\n    unixODBC \\\n    sox \\\n    libxml2 \\\n    openssl \\\n    newt \\\n    sqlite \\\n    libuuid \\\n    jansson \\\n    binutils \\\n    libedit \\\n    libtool \\\n    ncurses \\\n    libtiff \\\n    libjpeg-turbo \\\n    audiofile \\\n    uuid \\\n    libtool-ltdl \\\n    libsndfile \\\n    wget \\\n    bzip2 \\\n    file \\\n    ilbc \\\n    mariadb-connector-odbc \\\n    mpg123 \\\n    nodejs \\\n    libtiff-tools \\\n    cronie \\\n    httpd \\\n    mod_ssl \\\n    php \\\n    php-mysqlnd \\\n    php-process \\\n    php-pear \\\n    php-mbstring \\\n    php-xml \\\n    php-json \\\n    php-gd \\\n    php-curl \\\n    php-ldap \\\n    mariadb \\\n    diffutils \\\n    unzip \\\n    zip \\\n    uriparser \\\n    jq \\\n    speex \\\n    speexdsp \\\n    portaudio \\\n    libsrtp \\\n    unbound-libs \\\n    freetds \\\n    freetds-libs \\\n    libevent \\\n    net-snmp-libs \\\n    codec2 \\\n    neon \\\n    pakchois \\\n    libmodman \\\n    libproxy \\\n    net-snmp-agent-libs \\\n    lm_sensors-libs \\\n    libical \\\n    libical-devel \\\n    icu \\\n    gcc-c++ \\\n    make \\\n    python2 \\\n    libnsl \\\n    which \\\n    fftw-libs \\\n    sudo \\\n    figlet \\\n    nc \\\n    dnsmasq \\\n    glibc-langpack-en \\\n    perl-DBI \\\n    perl-DBD-mysql \\\n    cyrus-sasl-plain \\\n    cyrus-sasl-md5 \\\n    libresample \\\n    incron \\\n    chrony \\\n    postfix \\\n    phpMyAdmin \\\n    zabbix-agent \\\n    zabbix-sender \\\n    ffmpeg \\\n    lame \\\n    libuv \\\n    patch \\\n    iproute \\\n    bc \\\n  '\n\n  # NOTE: postfix > 3.4.x is required for docker logging to stdout\n\nRUN set -xe && \\\n  ## import system information vars\n  . /etc/os-release && \\\n  \\\n  ## install epel repository\n  dnf -y install epel-release && \\\n  \\\n  ## repo for phpMyAdmin\n  rpm -Uvh https://rpms.remirepo.net/enterprise/remi-release-8.rpm && \\\n  ## repo for zabbix agent\n  rpm -Uvh https://repo.zabbix.com/zabbix/6.0/rhel/8/x86_64/zabbix-release-6.0-1.el8.noarch.rpm && \\\n  ## repo for ffmpeg command\n  rpm -Uhv https://download1.rpmfusion.org/free/el/rpmfusion-free-release-8.noarch.rpm && \\\n  rpm -Uhv https://download1.rpmfusion.org/nonfree/el/rpmfusion-nonfree-release-8.noarch.rpm && \\\n  ## repo for lame command\n  rpm -Uhv http://repo.okay.com.mx/centos/8/x86_64/release/okay-release-1-5.el8.noarch.rpm && \\\n  ## fix wrong option\n  sed '/^failovermethod/d' -i /etc/yum.repos.d/okay.repo && \\\n  \\\n  ## install dnf plugins\n  dnf -y install dnf-plugins-core && \\\n  ## enable extra repository\n  dnf config-manager --set-enabled \\\n    powertools \\\n    remi \\\n    rpmfusion-free-updates \\\n    rpmfusion-nonfree-updates \\\n    okay \\\n  && \\\n  ## enable module php 7.4 needed for FreePBX 16\n  if [[ \"${FREEPBX_VER}\" = \"16\" ]]; then \\\n  : \"---------- Enable PHP 7.4 ----------\" && \\\n  dnf module reset php -y && \\\n  dnf module enable php:7.4 -y \\\n  ;fi && \\\n  \\\n  ## upgrade the system\n  dnf upgrade -y && \\\n  ## install mandatory packages\n  dnf install -y \\\n  $APP_INSTALL_DEPS \\\n  && \\\n  dnf mark install $APP_INSTALL_DEPS && \\\n  \\\n  if [[ ${APP_DEBUG} -eq 0 ]]; then \\\n  : \"---------- Clean temporary files ----------\" && \\\n  dnf clean all && \\\n  rm -rf /var/cache/{dnf,yum} ;fi && \\\n  : \"---------- ALL install finished ----------\"\n\n### prep users\nRUN set -xe && \\\n  groupadd -g ${APP_GID} ${APP_GRP} && \\\n  useradd -u ${APP_UID} -c \"${APP_DESCRIPTION} User\" -g ${APP_GRP} -s /sbin/nologin ${APP_USR} && \\\n  ## add asterisk user to wheel and apache group\n  usermod -aG wheel,apache ${APP_USR} && \\\n  ## fix phpMyAdmin apache group permissions\n  chmod g+w /var/lib/phpMyAdmin/temp\n\n### build stage\n\n## copy external sources files\n#ADD build/ /usr/src/\n\n## build asterisk\nRUN set -xe && \\\n  . /etc/os-release && \\\n  ASTERISK_BUILD_DEPS=' \\\n    dmidecode \\\n    autoconf \\\n    automake \\\n    ncurses-devel \\\n    libxml2-devel \\\n    openssl-devel \\\n    newt-devel \\\n    kernel-devel \\\n    sqlite-devel \\\n    libuuid-devel \\\n    jansson-devel \\\n    binutils-devel \\\n    libedit-devel \\\n    svn \\\n    opus-devel \\\n    opusfile-devel \\\n    unixODBC-devel \\\n    ncurses-devel \\\n    libtermcap-devel \\\n    libtiff-devel \\\n    libjpeg-turbo-devel \\\n    audiofile-devel \\\n    uuid-devel \\\n    libtool-ltdl-devel \\\n    libsamplerate-devel \\\n    patch \\\n    libsndfile-devel \\\n    doxygen \\\n    bison \\\n    fftw-devel \\\n    flex \\\n    graphviz \\\n    libpq-devel \\\n    libxslt-devel \\\n    net-snmp-devel \\\n    unbound-devel \\\n    libcurl-devel \\\n    openldap-devel \\\n    popt-devel \\\n    bluez-libs-devel \\\n    gsm-devel \\\n    libsrtp-devel \\\n    libvorbis-devel \\\n    lua-devel \\\n    neon-devel \\\n    speex-devel \\\n    speexdsp-devel \\\n    codec2-devel \\\n    freetds-devel \\\n    portaudio-devel \\\n    radcli-devel \\\n    uriparser-devel \\\n    uw-imap-devel \\\n    xmlstarlet \\\n    sox-devel \\\n    ilbc-devel \\\n    python2-devel \\\n    python3-devel \\\n    libtool \\\n    cmake \\\n    libresample-devel \\\n    mariadb-devel \\\n    libuv-devel \\\n  ' && \\\n  \\\n  dnf -y install $ASTERISK_BUILD_DEPS && \\\n  \\\n  : \"---------- START build spandsp ----------\" && \\\n  cd /usr/src && \\\n  mkdir spandsp && \\\n  curl -fSL --connect-timeout 30 https://sources.buildroot.net/spandsp/spandsp-${SPANDSP_VER}.tar.gz | tar xz --strip 1 -C spandsp && \\\n  cd spandsp && \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr && \\\n  make && \\\n  make install && \\\n  ldconfig && \\\n  : \"---------- END build ----------\" && \\\n\n  : \"---------- START build iksemel ----------\" && \\\n  cd /usr/src && \\\n  mkdir iksemel && \\\n  curl -fSL --connect-timeout 30 https://github.com/holme-r/iksemel/archive/${IKSEMEL_VER}.tar.gz | tar xz --strip 1 -C iksemel && \\\n  cd iksemel && \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr && \\\n  make && \\\n  make install && \\\n  ldconfig && \\\n  : \"---------- END build ----------\" && \\\n\n  : \"---------- START build ASTERISK ----------\" && \\\n  ## @20210408 unreachable asterisk url\n  ## http://downloads.asterisk.org/pub/telephony/asterisk/releases/asterisk-${ASTERISK_VER}.tar.gz\n  ## @20210408 unreachable asterisk url - disable get_mp3_source.sh because need internet connection\n  #./contrib/scripts/get_mp3_source.sh\n  ## @20210414 reneabled get_mp3_source.sh\n  #tar zxvf /usr/src/asterisk-mp3.tar.gz -C addons\n  cd /usr/src && \\\n  mkdir asterisk && \\\n  curl -fSL --connect-timeout 30 https://github.com/asterisk/asterisk/archive/refs/tags/${ASTERISK_VER}.tar.gz | tar xz --strip 1 -C asterisk && \\\n  cd asterisk && \\\n\n  ./contrib/scripts/get_mp3_source.sh && \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr --libdir=/usr/lib64 --with-pjproject-bundled --with-jansson-bundled --with-resample --with-ssl=ssl --with-srtp && \\\n\n  make menuselect/menuselect menuselect-tree menuselect.makeopts && \\\n\n  menuselect/menuselect \\\n    --enable-category MENUSELECT_ADDONS \\\n    --enable-category MENUSELECT_CHANNELS \\\n    --enable-category MENUSELECT_APPS \\\n    --enable-category MENUSELECT_CDR \\\n    --enable-category MENUSELECT_FORMATS \\\n    --enable-category MENUSELECT_FUNCS \\\n    --enable-category MENUSELECT_PBX \\\n    --enable-category MENUSELECT_RES \\\n    --enable-category MENUSELECT_CEL \\\n  \\\n  menuselect/menuselect \\\n    --enable BETTER_BACKTRACES \\\n    --enable DONT_OPTIMIZE \\\n    --enable app_confbridge \\\n    --enable app_macro \\\n    --enable app_mysql \\\n    --enable app_page \\\n    --enable binaural_rendering_in_bridge_softmix \\\n    --enable chan_motif \\\n    --enable codec_silk \\\n    --enable codec_opus \\\n    --enable format_mp3 \\\n    --enable res_ari \\\n    --enable res_chan_stats \\\n    --enable res_calendar \\\n    --enable res_calendar_caldav \\\n    --enable res_calendar_icalendar \\\n    --enable res_endpoint_stats \\\n    --enable res_fax \\\n    --enable res_fax_spandsp \\\n    --enable res_pktccops \\\n    --enable res_snmp \\\n    --enable res_srtp \\\n    --enable res_xmpp \\\n    --disable-category MENUSELECT_CORE_SOUNDS \\\n    --disable-category MENUSELECT_EXTRA_SOUNDS \\\n    --disable-category MENUSELECT_MOH \\\n    --disable BUILD_NATIVE \\\n    --disable app_meetme \\\n    --disable app_ivrdemo \\\n    --disable app_saycounted \\\n    --disable app_skel \\\n    --disable app_voicemail_imap \\\n    --disable cdr_pgsql \\\n    --disable cel_pgsql \\\n    --disable cdr_sqlite3_custom \\\n    --disable cel_sqlite3_custom \\\n    --disable cdr_mysql \\\n    --disable cdr_tds \\\n    --disable cel_tds \\\n    --disable cdr_radius \\\n    --disable cel_radius \\\n    --disable cdr_syslog \\\n    --disable chan_alsa \\\n    --disable chan_console \\\n    --disable chan_oss \\\n    --disable chan_mgcp \\\n    --disable chan_skinny \\\n    --disable chan_ooh323 \\\n    --disable chan_mobile \\\n    --disable chan_unistim \\\n    --disable res_ari_mailboxes \\\n    --disable res_digium_phone \\\n    --disable res_calendar_ews \\\n    --disable res_calendar_exchange \\\n    --disable res_stasis_mailbox \\\n    --disable res_mwi_external \\\n    --disable res_mwi_external_ami \\\n    --disable res_config_pgsql \\\n    --disable res_config_mysql \\\n    --disable res_config_ldap \\\n    --disable res_config_sqlite3 \\\n    --disable res_phoneprov \\\n    --disable res_pjsip_phoneprov_provider \\\n  && \\\n  make && \\\n  make install && \\\n  make install-headers && \\\n  make config && \\\n  make samples && \\\n  ldconfig && \\\n  : \"---------- END build ----------\" && \\\n\n  : \"---------- START build bcg729 ----------\" && \\\n  cd /usr/src && \\\n  mkdir bcg729 && \\\n  curl -fSL --connect-timeout 30 https://github.com/BelledonneCommunications/bcg729/archive/${BCG729_VER}.tar.gz | tar xz --strip 1 -C bcg729 && \\\n  cd bcg729 && \\\n  cmake . -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_PREFIX_PATH=/usr && \\\n  make && \\\n  make install && \\\n  ldconfig && \\\n  : \"---------- END build ----------\" && \\\n\n  if [[ ${ASTERISK_VER%%.*} -le 18 ]]; then \\\n  : \"---------- START build asterisk-g72x ----------\" && \\\n  cd /usr/src && \\\n  mkdir asterisk-g72x && \\\n  curl -fSL --connect-timeout 30 https://bitbucket.org/arkadi/asterisk-g72x/get/${ASTERISK_G72X_VER}.tar.gz | tar xz --strip 1 -C asterisk-g72x && \\\n  cd asterisk-g72x && \\\n  ./autogen.sh && \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr --with-bcg729 --enable-penryn && \\\n  make && \\\n  make install && \\\n  ldconfig; fi && \\\n  : \"---------- END build ----------\" && \\\n\n  : \"---------- START build sngrep ----------\" && \\\n  cd /usr/src && \\\n  mkdir sngrep && \\\n  curl -fSL --connect-timeout 30 https://github.com/irontec/sngrep/archive/v${SNGREP_VER}.tar.gz | tar xz --strip 1 -C sngrep && \\\n  cd sngrep && \\\n  dnf -y install libpcap libpcap-devel && \\\n  ./bootstrap.sh && \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr && \\\n  make && \\\n  make install && \\\n  ldconfig && \\\n  : \"---------- END build ----------\" && \\\n\n  if [[ ${APP_DEBUG} -eq 0 ]]; then \\\n  : \"---------- Clean temporary files ----------\" && \\\n  dnf remove -y $ASTERISK_BUILD_DEPS && \\\n  dnf clean all && \\\n  rm -rf /var/cache/yum /tmp /usr/src && \\\n  mkdir -p /usr/src /tmp && chmod 1777 /tmp ; rm -rf /usr/srcfi && \\\n  : \"---------- ALL builds finished ----------\"\n\n### NOTE: asterisk build\n## to get the options passed above: menuselect/menuselect --list-options\n\n## download freepbx and modules for offline install:\n## php -r 'echo json_encode(simplexml_load_file(\"http://mirror1.freepbx.org/modules-15.0.xml\"));' | jq\n## curl -fSL --connect-timeout 30 http://mirror.freepbx.org/modules/packages/freepbx/freepbx-${FREEPBX_VER}.0-latest.tgz | tar xz --strip 1 -C freepbx\n## curl -fSL https://github.com/FreePBX/framework/archive/release/${FREEPBX_VER_FRAMEWORK}.tar.gz| tar xfz - --strip 1 -C freepbx\n\n## copy external sources files again\nADD build/ /usr/src/\n\n## deploy freepbx\nRUN set -xe && \\\n  \\\n  cd /usr/src && \\\n  mkdir freepbx && \\\n  curl -fSL --connect-timeout 30 https://mirror.freepbx.org/modules/packages/freepbx/freepbx-${FREEPBX_VER}.0-latest.tgz | tar xz --strip 1 -C freepbx && \\\n  cd freepbx && \\\n  ## download modules-*.xml file if not exist in local build dir\n  if [[ -e \"/usr/src/modules-${FREEPBX_VER}.0.xml\" ]];then cp \"/usr/src/modules-${FREEPBX_VER}.0.xml\" \"/usr/src/freepbx/modules-${FREEPBX_VER}.0.xml\";else \\\n    curl -fSL --connect-timeout 30 https://mirror1.freepbx.org/modules-${FREEPBX_VER}.0.xml -o modules-${FREEPBX_VER}.0.xml \\\n  ; fi && \\\n  mkdir -p amp_conf/htdocs/admin/modules/_cache && \\\n  for MODULE in \\\n      announcement \\\n      arimanager \\\n      asteriskinfo \\\n      backup \\\n      calendar \\\n      callforward \\\n      callwaiting \\\n      cel \\\n      certman \\\n      cidlookup \\\n      contactmanager \\\n      daynight \\\n      donotdisturb \\\n      fax \\\n      filestore \\\n      findmefollow \\\n      iaxsettings \\\n      ivr \\\n      manager \\\n      miscapps \\\n      miscdests \\\n      parking \\\n      phonebook \\\n      presencestate \\\n      printextensions \\\n      queues \\\n      soundlang \\\n      timeconditions \\\n      userman \\\n      ucp \\\n      bulkhandler \\\n      speeddial \\\n      weakpasswords \\\n      pm2; \\\n      do \\\n  echo \"---------- PreDownloading module for offline install: $MODULE ----------\" && \\\n  mkdir -p amp_conf/htdocs/admin/modules/$MODULE && \\\n  MODULE_VER=$(php -r \"echo json_encode(simplexml_load_file('modules-${FREEPBX_VER}.0.xml'));\" | jq -r \".module[] | select(.rawname == \\\"${MODULE}\\\") | {version}\".version) && \\\n  curl -sfSL --connect-timeout 30 https://mirror.freepbx.org/modules/packages/$MODULE/$MODULE-${MODULE_VER}.tgz | tar xz --strip 1 -C amp_conf/htdocs/admin/modules/$MODULE/ && \\\n  curl -sfSL --connect-timeout 30 https://mirror.freepbx.org/modules/packages/$MODULE/$MODULE-${MODULE_VER}.tgz.gpg -o amp_conf/htdocs/admin/modules/_cache/$MODULE-${MODULE_VER}.tgz.gpg \\\n  ; done && \\\n  su - asterisk -s /bin/bash -c \"gpg --refresh-keys --keyserver hkp://keyserver.ubuntu.com:80\" && \\\n  su - asterisk -s /bin/bash -c \"gpg --import /usr/src/freepbx/amp_conf/htdocs/admin/libraries/BMO/1588A7366BD35B34.key\" && \\\n  su - asterisk -s /bin/bash -c \"gpg --import /usr/src/freepbx/amp_conf/htdocs/admin/libraries/BMO/3DDB2122FE6D84F7.key\" && \\\n  su - asterisk -s /bin/bash -c \"gpg --import /usr/src/freepbx/amp_conf/htdocs/admin/libraries/BMO/86CE877469D2EAD9.key\" && \\\n  su - asterisk -s /bin/bash -c \"gpg --import /usr/src/freepbx/amp_conf/htdocs/admin/libraries/BMO/9F9169F4B33B4659.key\"\n\n## install other components\nRUN set -xe && \\\n  : \"---------- START install izsynth by InitZero ----------\" && \\\n  cd /usr/src && \\\n  mkdir -p izsynth && \\\n  curl -fSL --connect-timeout 30 https://github.com/ugoviti/izsynth/archive/${IZSYNTH_VER}.tar.gz | tar xz --strip 1 -C izsynth && \\\n  cp -a izsynth/izsynth /usr/local/bin/izsynth && \\\n  chmod 755 /usr/local/bin/izsynth && \\\n  : \"---------- END install ----------\" && \\\n  : \"---------- START install Asterisk Zabbix Agents by InitZero ----------\" && \\\n  cd /etc/zabbix/zabbix_agentd.d && \\\n  curl -fSL --connect-timeout 30 https://github.com/ugoviti/zabbix-templates/archive/${ZABBIX_TEMPLATE_VER}.tar.gz | tar xz --strip 3 zabbix-templates-${ZABBIX_TEMPLATE_VER}/asterisk/zabbix_agentd.d && \\\n  : \"---------- END install ----------\" && \\\n  ## enable module php 7.4 needed for FreePBX 16\n  if [[ \"${FREEPBX_VER}\" = \"16\" ]]; then \\\n  : \"---------- START install PHP IonCube Loader ----------\" && \\\n  curl -fSL --connect-timeout 30 https://downloads.ioncube.com/loader_downloads/ioncube_loaders_lin_x86-64.tar.gz | tar xz --strip 1 -C /usr/lib64/php/modules/ ioncube/ioncube_loader_lin_7.4.so && \\\n  echo \"zend_extension=ioncube_loader_lin_7.4.so\" >> /etc/php.ini && \\\n  : \"---------- END install ----------\" \\\n  ;fi\n\n## set pemissions and sudo\nRUN set -xe && \\\n  chown -R ${APP_USR}:${APP_GRP} \\\n    /etc/asterisk \\\n    /var/lib/asterisk \\\n    /var/spool/asterisk\n\n### fixes and workarounds\n\n## copy external sources files\nADD patch/ /usr/src/\n\n## FIXME: fix for FreePBX 16 upgrade error (20211121: MUST be removed in a future release for better security)\n## other problem when upgrading to FreePBX 16: https://issues.freepbx.org/browse/FREEPBX-22842\n## references: https://wiki.freepbx.org/display/FOP/Non+Distro+-+Upgrade+to+FreePBX+16\nRUN sed 's/@SECLEVEL=2/@SECLEVEL=1/' -i /etc/crypto-policies/back-ends/opensslcnf.config\n\n### app ports\nENV APP_PORT_HTTP         80\nENV APP_PORT_HTTPS        443\nENV APP_PORT_IAX          4569\nENV APP_PORT_PJSIP        5060\nENV APP_PORT_SIP          5160\nENV APP_PORT_WEBRTC       8089\nENV APP_PORT_UCP_HTTP     8001\nENV APP_PORT_UCP_HTTPS    8003\nENV APP_PORT_AMI          8088\nENV APP_PORT_RTP_START    10000\nENV APP_PORT_RTP_END      10200\nENV APP_PORT_DHCP         67\nENV APP_PORT_TFTP         69\nENV APP_PORT_NTP          123\nENV APP_PORT_FOP2         4445\nENV APP_PORT_ZABBIX       10050\n\n### exposed ports\nEXPOSE \\\n  ${APP_PORT_HTTP}/tcp \\\n  ${APP_PORT_HTTPS}/tcp \\\n  ${APP_PORT_IAX}/tcp \\\n  ${APP_PORT_IAX}/udp \\\n  ${APP_PORT_PJSIP}/tcp \\\n  ${APP_PORT_PJSIP}/udp \\\n  ${APP_PORT_SIP}/tcp \\\n  ${APP_PORT_SIP}/udp \\\n  ${APP_PORT_WEBRTC}/tcp \\\n  ${APP_PORT_UCP_HTTP}/tcp \\\n  ${APP_PORT_UCP_HTTPS}/tcp \\\n  ${APP_PORT_AMI}/tcp \\\n  ${APP_PORT_RTP_START}-${APP_PORT_RTP_END}/tcp \\\n  ${APP_PORT_RTP_START}-${APP_PORT_RTP_END}/udp \\\n  ${APP_PORT_DHCP}/udp \\\n  ${APP_PORT_TFTP}/tcp \\\n  ${APP_PORT_TFTP}/udp \\\n  ${APP_PORT_NTP}/udp \\\n  ${APP_PORT_FOP2}/tcp \\\n  ${APP_PORT_ZABBIX}/tcp\n\n### define volumes\n#VOLUME [ \"/var/spool/cron\", \"/var/www\", \"/etc/asterisk\", \"/var/lib/asterisk/sounds/custom\" ]\n\n## CI args\nARG APP_VER_BUILD\nARG APP_BUILD_COMMIT\nARG APP_BUILD_DATE\n\n## CI envs\nENV APP_FQDN=\"\"\nENV APP_VER_BUILD=\"${APP_VER_BUILD}\"\nENV APP_BUILD_COMMIT=\"${APP_BUILD_COMMIT}\"\nENV APP_BUILD_DATE=\"${APP_BUILD_DATE}\"\n\n## add files to container\nADD rootfs Dockerfile README.md /\n\n## start the container process\nENTRYPOINT [\"/entrypoint.sh\"]\nCMD [\"supervisord\", \"-c\", \"/etc/supervisord.conf\"]\n"
}