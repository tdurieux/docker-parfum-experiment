{
  "startTime": 1674255419518,
  "endTime": 1674255420612,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 48,
        "lineEnd": 50,
        "columnStart": 1,
        "columnEnd": 58
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 162,
        "lineEnd": 164,
        "columnStart": 1,
        "columnEnd": 71
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 48,
        "lineEnd": 50,
        "columnStart": 1,
        "columnEnd": 58
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 162,
        "lineEnd": 164,
        "columnStart": 1,
        "columnEnd": 71
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 56,
        "lineEnd": 81,
        "columnStart": 1,
        "columnEnd": 14
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 51,
        "lineEnd": 53,
        "columnStart": 1,
        "columnEnd": 33
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 165,
        "lineEnd": 166,
        "columnStart": 1,
        "columnEnd": 34
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM lsiobase/alpine:3.8 as buildstage\n############## build stage ##############\n\n# package versions\nARG FFMPEG_VER=\"3.4.2\"\n\n# copy patches\nCOPY patches/ /tmp/patches/\n\nRUN \\\n echo \"**** install build packages ****\" && \\\n apk add --no-cache --virtual=build-dependencies \\\n\talsa-lib-dev \\\n\tbzip2-dev \\\n\tcoreutils \\\n\tcurl \\\n\tg++ \\\n\tgcc \\\n\tgit \\\n\tgnutls-dev \\\n\timlib2-dev \\\n\tjasper-dev \\\n\tjpeg-dev \\\n\tlame-dev \\\n\tlcms2-dev \\\n\tlibass-dev \\\n\tlibtheora-dev \\\n\tlibva-dev \\\n\tlibvorbis-dev \\\n\tlibvpx-dev \\\n\tlibvpx-dev \\\n\tlibxfixes-dev \\\n\tmake \\\n\topus-dev \\\n\tperl \\\n\trtmpdump-dev \\\n\tsdl-dev \\\n\ttar \\\n\tv4l-utils-dev \\\n\tx264-dev \\\n\tx265-dev \\\n\txvidcore-dev \\\n\tyasm \\\n\tzlib-dev\n\nRUN \\\n echo \"**** compile ffmpeg ****\" && \\\n mkdir -p /tmp/ffmpeg && \\\n curl -f -o \\\n /tmp/ffmpeg-src.tar.bz2 -L \\\n\t\"https://ffmpeg.org/releases/ffmpeg-${FFMPEG_VER}.tar.bz2\" && \\\n tar xf \\\n /tmp/ffmpeg-src.tar.bz2 -C \\\n\t/tmp/ffmpeg --strip-components=1 && \\\n cd /tmp/ffmpeg && \\\n for i in /tmp/patches/*.patch; do patch -p1 -i $i; done && \\\n ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n\t--disable-debug \\\n\t--disable-static \\\n\t--disable-stripping \\\n\t--enable-avfilter \\\n\t--enable-avresample \\\n\t--enable-gnutls \\\n\t--enable-gpl \\\n\t--enable-libass \\\n\t--enable-libmp3lame \\\n\t--enable-libopus \\\n\t--enable-librtmp \\\n\t--enable-libtheora \\\n\t--enable-libv4l2 \\\n\t--enable-libvorbis \\\n\t--enable-libvpx \\\n\t--enable-libx264 \\\n\t--enable-libx265 \\\n\t--enable-libxcb \\\n\t--enable-libxvid \\\n\t--enable-pic \\\n\t--enable-postproc \\\n\t--enable-pthreads \\\n\t--enable-shared \\\n\t--enable-vaapi \\\n\t--prefix=/usr && \\\n make && \\\n gcc -o tools/qt-faststart $CFLAGS tools/qt-faststart.c && \\\n make doc/ffmpeg.1 doc/ffplay.1 doc/ffserver.1 && \\\n make DESTDIR=/tmp/ffmpeg-build install install-man && \\\n install -D -m755 tools/qt-faststart /tmp/ffmpeg-build/usr/bin/qt-faststart && rm /tmp/ffmpeg-src.tar.bz2\n\nRUN \\\n echo \"**** compile dcraw ****\" && \\\n cp /tmp/patches/dcraw.c /tmp/ffmpeg-build/usr/bin/dcraw.c && \\\n cd /tmp/ffmpeg-build/usr/bin && \\\n gcc -o dcraw -O4 dcraw.c -lm -ljasper -ljpeg -llcms2\n############## runtime stage ##############\n\nFROM lsiobase/alpine:3.8\n\n# set version label\nARG BUILD_DATE\nARG VERSION\nLABEL build_version=\"Linuxserver.io version:- ${VERSION} Build-date:- ${BUILD_DATE}\"\nLABEL maintainer=\"sparklyballs\"\n\n# package versions\nARG SERVIIO_VER=\"1.10\"\n\n#Â environment settings\nENV JAVA_HOME=\"/usr/bin/java\"\n\nRUN \\\n echo \"**** change abc home folder ****\" && \\\n usermod -d /config/serviio abc && \\\n echo \"**** install runtime packages ****\" && \\\n apk add --no-cache \\\n\talsa-lib \\\n\tcurl \\\n\texpat \\\n\tgmp \\\n\tgnutls \\\n\tjasper \\\n\tjpeg \\\n\tlame \\\n\tlcms2 \\\n\tlibass \\\n\tlibbz2 \\\n\tlibdrm \\\n\tlibffi \\\n\tlibgcc \\\n\tlibjpeg-turbo \\\n\tlibogg \\\n\tlibpciaccess \\\n\tlibrtmp \\\n\tlibstdc++ \\\n\tlibtasn1 \\\n\tlibtheora \\\n\tlibva \\\n\tlibvorbis \\\n\tlibvpx \\\n\tlibx11 \\\n\tlibxau \\\n\tlibxcb \\\n\tlibxdamage \\\n\tlibxdmcp \\\n\tlibxext \\\n\tlibxfixes \\\n\tlibxshmfence \\\n\tlibxxf86vm \\\n\tmesa-gl \\\n\tmesa-glapi \\\n\tnettle \\\n\topenjdk8-jre \\\n\topus \\\n\tp11-kit \\\n\tsdl \\\n\tttf-dejavu \\\n\tv4l-utils-libs \\\n\tx264-libs \\\n\tx265 \\\n\txvidcore && \\\n echo \"**** install serviio app ****\" && \\\n mkdir -p \\\n\t/app/serviio && \\\n curl -f -o \\\n /tmp/serviio.tar.gz -L \\\n\thttps://download.serviio.org/releases/serviio-$SERVIIO_VER-linux.tar.gz && \\\n tar xf /tmp/serviio.tar.gz -C \\\n\t/app/serviio --strip-components=1 && \\\n echo \"**** cleanup ****\" && \\\n rm -rf \\\n\t/tmp/* && rm /tmp/serviio.tar.gz\n\n# copy files from build stage and local files\nCOPY --from=buildstage /tmp/ffmpeg-build/usr/ /usr/\nCOPY root/ /\n\n# ports and volumes\nEXPOSE 23423/tcp 23424/tcp 8895/tcp 1900/udp\nVOLUME /config /transcode\n"
}