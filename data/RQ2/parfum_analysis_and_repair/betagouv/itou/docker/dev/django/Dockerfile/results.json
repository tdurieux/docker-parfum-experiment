{
  "startTime": 1674248102654,
  "endTime": 1674248103369,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 7,
        "columnEnd": 62
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 49,
        "lineEnd": 56,
        "columnStart": 22,
        "columnEnd": 27
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Debian Buster slim variant.\nFROM python:3.9.12-slim-buster\n\nENV DOCKER_DEFAULT_PLATFORM=linux/amd64\n# Inspiration\n# https://github.com/azavea/docker-django/blob/1ef366/Dockerfile-slim.template\n# https://github.com/docker-library/postgres/blob/9d8e24/11/Dockerfile\n\nENV PYTHONIOENCODING=\"UTF-8\"\nENV PYTHONUNBUFFERED=1\n# Set ipdb as the default debugger.\n# https://www.andreagrandi.it/2018/10/16/using-ipdb-with-python-37-breakpoint/\nENV PYTHONBREAKPOINT=ipdb.set_trace\n\nENV APP_DIR=\"/app\"\n\n# Add new user to run the whole thing as non-root.\nRUN set -ex \\\n    && addgroup app \\\n    && adduser --ingroup app --home $APP_DIR --disabled-password app;\n\nRUN set -ex; \\\n    if ! command -v gpg > /dev/null; then \\\n        apt-get update; \\\n        apt-get install -y --no-install-recommends \\\n            gnupg \\\n            dirmngr \\\n        ; \\\n        rm -rf /var/lib/apt/lists/*; \\\n    fi\n\n# Add the PostgreSQL PGP key to verify their Debian packages.\nRUN set -ex; \\\n# pub   4096R/ACCC4CF8 2011-10-13 [expires: 2019-07-02]\n#       Key fingerprint = B97B 0AFC AA1A 47F0 44F2  44A0 7FCC 7D46 ACCC 4CF8\n# uid                  PostgreSQL Debian Repository\n    key='B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8'; \\\n    export GNUPGHOME=\"$(mktemp -d)\"; \\\n    gpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$key\"; \\\n    gpg --batch --export \"$key\" > /etc/apt/trusted.gpg.d/postgres.gpg; \\\n    command -v gpgconf > /dev/null && gpgconf --kill all; \\\n    rm -rf \"$GNUPGHOME\"; \\\n    apt-key list;\n\nENV PG_MAJOR=\"14\"\n\n# Add PostgreSQL's repository. It contains the most recent stable release.\nRUN echo \"deb http://apt.postgresql.org/pub/repos/apt/ buster-pgdg main $PG_MAJOR\" > /etc/apt/sources.list.d/pgdg.list\n\nRUN apt-get update && apt-get install -y \\\n    build-essential \\\n    libpq-dev \\\n    gdal-bin \\\n    gettext \\\n    git \\\n    postgresql-client-$PG_MAJOR \\\n    --no-install-recommends && rm -rf /var/lib/apt/lists/*;\n\n# Requirements are installed here to ensure they will be cached.\nCOPY ./requirements /requirements\nRUN pip install --no-cache-dir --upgrade pip \\\n    && pip install --no-cache-dir -r /requirements/dev.txt \\\n    && pip uninstall psycopg2-binary -y \\\n    && pip install --no-cache-dir psycopg2-binary --no-binary psycopg2-binary \\\n    && rm -rf /requirements\n\nRUN apt-get purge -y --auto-remove build-essential libpq-dev $(! command -v gpg > /dev/null || echo 'gnupg dirmngr') \\\n    && rm -rf /var/lib/apt/lists/*\n\nCOPY --chown=app:app . $APP_DIR\n\nRUN chmod +x $APP_DIR/docker/dev/django/entrypoint.sh\n\nUSER app\n\nWORKDIR $APP_DIR\n\nENTRYPOINT [\"./docker/dev/django/entrypoint.sh\"]\n"
}