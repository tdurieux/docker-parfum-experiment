{
  "startTime": 1674249923793,
  "endTime": 1674249924278,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 16,
        "columnStart": 3,
        "columnEnd": 32
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 16,
        "columnStart": 3,
        "columnEnd": 32
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG ROS_DISTRO=melodic\n\nFROM ros:${ROS_DISTRO}-ros-core AS build-env\nENV DEBIAN_FRONTEND=noninteractive \\\n    BUILD_HOME=/var/lib/build \\\n    OUSTER_SDK_PATH=/opt/ouster_example\n\nRUN set -xue \\\n# Kinetic and melodic have python3 packages but they seem to conflict\n&& [ $ROS_DISTRO = \"noetic\" ] && PY=python3 || PY=python \\\n# Turn off installing extra packages globally to slim down rosdep install\n&& echo 'APT::Install-Recommends \"0\";' > /etc/apt/apt.conf.d/01norecommend \\\n&& apt-get update \\\n&& apt-get install --no-install-recommends -y \\\n build-essential cmake \\\n fakeroot dpkg-dev debhelper \\\n $PY-rosdep $PY-rospkg $PY-bloom && rm -rf /var/lib/apt/lists/*;\n\n# Set up non-root build user\nARG BUILD_UID=1000\nARG BUILD_GID=${BUILD_UID}\n\nRUN set -xe \\\n&& groupadd -o -g ${BUILD_GID} build \\\n&& useradd -o -u ${BUILD_UID} -d ${BUILD_HOME} -rm -s /bin/bash -g build build\n\n# Install build dependencies using rosdep\nCOPY --chown=build:build ouster_ros/package.xml ${OUSTER_SDK_PATH}/ouster_ros/package.xml\n\nRUN set -xe \\\n&& apt-get update \\\n&& rosdep init \\\n&& rosdep update --rosdistro=${ROS_DISTRO} \\\n&& rosdep install -y --from-paths ${OUSTER_SDK_PATH}\n\n# Set up build environment\nCOPY --chown=build:build . ${OUSTER_SDK_PATH}\n\nUSER build:build\nWORKDIR ${BUILD_HOME}\n\nRUN set -xe \\\n&& mkdir src \\\n&& ln -s ${OUSTER_SDK_PATH} ./src\n\n\nFROM build-env\n\nRUN /opt/ros/${ROS_DISTRO}/env.sh catkin_make -DCMAKE_BUILD_TYPE=Release\n\n# Entrypoint for running Ouster ros:\n#\n# Usage: docker run --rm -it ouster-ros [ouster.launch parameters ..]\n#\nENTRYPOINT [\"bash\", \"-c\", \"set -e \\\n&& . ./devel/setup.bash \\\n&& roslaunch ouster_ros ouster.launch \\\"$@\\\" \\\n\", \"ros-entrypoint\"]\n"
}