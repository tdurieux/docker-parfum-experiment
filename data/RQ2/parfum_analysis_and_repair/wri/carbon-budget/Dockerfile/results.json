{
  "startTime": 1674256164408,
  "endTime": 1674256164906,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 32,
        "columnStart": 25,
        "columnEnd": 7
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 32,
        "columnStart": 25,
        "columnEnd": 7
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Use osgeo GDAL image. It builds off Ubuntu 18.04 and uses GDAL 3.0.4\nFROM osgeo/gdal:ubuntu-small-3.0.4\n\n# # Use this if downloading hdf files for burn year analysis\n# FROM osgeo/gdal:ubuntu-full-3.0.4\n\nENV DIR=/usr/local/app\nENV TMP=/usr/local/tmp\nENV TILES=/usr/local/tiles\nENV DEBIAN_FRONTEND=noninteractive\nENV SECRETS_PATH /usr/secrets\n\n# set timezone fo tzdata\nRUN ln -fs /usr/share/zoneinfo/America/New_York /etc/localtime\n\n# Install dependencies\nRUN apt-get update -y && apt-get install --no-install-recommends -y \\\n    make \\\n    automake \\\n    g++ \\\n    gcc \\\n    libpq-dev \\\n    postgresql-10 \\\n    postgresql-server-dev-10 \\\n    postgresql-contrib-10 \\\n    postgresql-10-postgis-2.4 \\\n    python3-pip \\\n    wget \\\n    nano \\\n    htop \\\n    tmux \\\n    git \\\n    vim \\\n    && apt-get clean all && rm -rf /var/lib/apt/lists/*;\n\n\n# Create local app directory and copy repo\nRUN mkdir -p ${DIR}\nRUN mkdir -p ${TMP}\nRUN mkdir -p ${TILES}\nWORKDIR ${DIR}\nCOPY . .\n\n\n# Set environment variables\nENV AWS_SHARED_CREDENTIALS_FILE $SECRETS_PATH/.aws/credentials\nENV AWS_CONFIG_FILE $SECRETS_PATH/.aws/config\n# https://www.postgresql.org/docs/current/libpq-envars.html\nENV PGUSER postgres\nENV PGDATABASE=ubuntu\n\n\n#######################################\n# Activate postgres and enable connection to it\n# Copies config file that allows user postgres to enter psql shell,\n# as shown here: https://stackoverflow.com/a/26735105 (change peer to trust).\n# Commented out the start/restart commands because even with running them, postgres isn't running when the container is created.\n# So there's no point in starting posgres here if it's not active when the instance opens.\n#######################################\nRUN cp pg_hba.conf /etc/postgresql/10/main/\n# RUN pg_ctlcluster 10 main start\n# RUN service postgresql restart\n\n\n# Install missing Python dependencies\nRUN pip3 install --no-cache-dir -r requirements.txt\n\n# Link gdal libraries\nRUN cd /usr/include && ln -s ./ gdal\n\n# Somehow, this makes gdal_calc.py accessible from anywhere in the Docker\n#https://www.continualintegration.com/miscellaneous-articles/all/how-do-you-troubleshoot-usr-bin-env-python-no-such-file-or-directory/\nRUN ln -s /usr/bin/python3 /usr/bin/python\n\n# Enable ec2 to interact with GitHub\nRUN git config --global user.email dagibbs22@gmail.com\n\n## Check out the branch that I'm currently using for model development\n#RUN git checkout model_v_1.2.2\n#\n## Makes sure the latest version of the current branch is downloaded\n#RUN git pull origin model_v_1.2.2\n\n## Compile C++ scripts\n#RUN g++ /usr/local/app/emissions/cpp_util/calc_gross_emissions_generic.cpp -o /usr/local/app/emissions/cpp_util/calc_gross_emissions_generic.exe -lgdal && \\\n#    g++ /usr/local/app/emissions/cpp_util/calc_gross_emissions_soil_only.cpp -o /usr/local/app/emissions/cpp_util/calc_gross_emissions_soil_only.exe -lgdal && \\\n#    g++ /usr/local/app/emissions/cpp_util/calc_gross_emissions_no_shifting_ag.cpp -o /usr/local/app/emissions/cpp_util/calc_gross_emissions_no_shifting_ag.exe -lgdal && \\\n#    g++ /usr/local/app/emissions/cpp_util/calc_gross_emissions_convert_to_grassland.cpp -o /usr/local/app/emissions/cpp_util/calc_gross_emissions_convert_to_grassland.exe -lgdal\n\n# Opens the Docker shell\nENTRYPOINT [\"/bin/bash\"]"
}