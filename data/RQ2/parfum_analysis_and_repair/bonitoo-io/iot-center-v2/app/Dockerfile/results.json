{
  "startTime": 1674248908748,
  "endTime": 1674248909579,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 21
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# Build image\n#\nFROM node:16-alpine AS builder\nENV NODE_ENV production\n\n# Install /app dependencies\nWORKDIR /app\nCOPY package.json .\nCOPY yarn.lock .\nRUN yarn install --production && yarn cache clean;\n\n# Copy app files & build\nWORKDIR /app\nCOPY . .\nRUN yarn build_docker\n\n#\n# Runtime image\n#\nFROM node:16-alpine as production\nRUN apk add --no-cache dumb-init\nENV NODE_ENV production\nWORKDIR /usr/src/app\n# Copy built assets from builder\nCOPY --chown=node:node --from=builder /app/ .\n# Create and give permissions for app data\nRUN mkdir -p /usr/src/data && rm -rf /usr/src/data\nRUN chmod ugo+rwx /usr/src/data\n# Expose port\nEXPOSE 5000\n# Start IoT Center\nUSER node\nCMD [\"dumb-init\", \"yarn\", \"start\"]\n"
}