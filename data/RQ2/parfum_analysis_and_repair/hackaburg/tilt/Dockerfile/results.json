{
  "startTime": 1674217845745,
  "endTime": 1674217846471,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 20,
        "columnEnd": 36
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 68,
        "columnEnd": 84
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 33,
        "columnEnd": 49
      }
    }
  ],
  "repairedDockerfile": "FROM node:alpine AS build\n\nWORKDIR /app\n\n# bcrypt depends on node-pre-gyp\nRUN apk add --no-cache --virtual .gyp python3 make g++\n\nCOPY --chown=node:node package.json yarn.lock ./\nRUN yarn install && yarn cache clean;\n\nCOPY --chown=node:node entrypoint.sh /app\nCOPY --chown=node:node backend/ /app/backend/\nCOPY --chown=node:node frontend/ /app/frontend/\n\nENV NODE_OPTIONS=--openssl-legacy-provider\n\nRUN yarn backend::build && \\\n    API_BASE_URL=/api yarn frontend::build && \\\n    mv backend/dist/ tmp && rm -rf backend/ && mv tmp backend && \\\n    mv frontend/dist/ tmp && rm -rf frontend/ && mv tmp frontend && yarn cache clean;\n\nRUN yarn install --production && yarn cache clean;\n\nFROM node:alpine\n\nWORKDIR /app\nUSER node:node\nCOPY --from=build --chown=node:node /app /app\nENV HTTP_PUBLIC_DIRECTORY=/app/frontend\nCMD [ \"/bin/sh\", \"/app/entrypoint.sh\" ]\n"
}