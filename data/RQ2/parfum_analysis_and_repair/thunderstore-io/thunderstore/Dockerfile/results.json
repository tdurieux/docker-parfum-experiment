{
  "startTime": 1674250779355,
  "endTime": 1674250779831,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 18,
        "lineEnd": 19,
        "columnStart": 22,
        "columnEnd": 28
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:12-alpine as builder\n\nWORKDIR /app\nCOPY ./builder/package.json ./builder/yarn.lock /app/\nRUN yarn install --frozen-lockfile && yarn cache clean;\nCOPY ./builder /app\nRUN yarn run build\n\nFROM python:3.8-slim-buster@sha256:2516c4bc037b8144b6104e73e6bdd0c861725d9ed7bd05095dded22842991508\n\nLABEL org.opencontainers.image.source=\"https://github.com/thunderstore-io/Thunderstore\"\n\nENV PYTHONUNBUFFERED 1\n\nENV DB_CERT_DIR /etc/ssl/private/db-certs/\n\nWORKDIR /app\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    curl build-essential git \\\n && rm -rf /var/lib/apt/lists/*\n\nCOPY ./django/pyproject.toml ./django/poetry.lock /app/\n\nRUN pip install -U pip poetry~=1.1.4 --no-cache-dir && \\\n    poetry config virtualenvs.create false && \\\n    poetry install && \\\n    rm -rf ~/.cache\n\nCOPY --from=builder /app/build /app/static_built\nCOPY ./django /app\n\nRUN SECRET_KEY=x python manage.py collectstatic --noinput\n\nHEALTHCHECK --interval=5s --timeout=8s --retries=3 \\\n    CMD python readycheck.py || exit 1\n\nENTRYPOINT [\"python\", \"/app/docker_entrypoint.py\"]\n"
}