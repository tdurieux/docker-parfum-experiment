{
  "startTime": 1674215062020,
  "endTime": 1674215062915,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 20,
        "columnEnd": 39
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 16
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedDockerfile": "FROM alpine AS builder\n\n# Download QEMU, see https://github.com/docker/hub-feedback/issues/1261\nENV QEMU_URL https://github.com/balena-io/qemu/releases/download/v3.0.0%2Bresin/qemu-3.0.0+resin-arm.tar.gz\nRUN apk add --no-cache curl && curl -f -L ${QEMU_URL} | tar zxvf - -C . --strip-components 1\n\nFROM arm32v7/debian:buster\n\nCOPY --from=builder qemu-arm-static /usr/bin\n\nENV PATH=\"/container/scripts:${PATH}\"\n\nRUN export DEBIAN_FRONTEND=noninteractive \\\n && apt-get -q -y update \\\n && apt-get -q -y install --no-install-recommends runit \\\n                       \\\n                       xvfb \\\n                       x11vnc \\\n\n && apt-get -q --no-install-recommends -y install openbox \\\n                       ttf-dejavu \\\n\n                       haproxy \\\n                       openssl \\\n                       openssh-server \\\n                       sudo \\\n\n                       python3 \\\n                       python3-numpy \\\n                       sed \\\n                       wget \\\n                       rsyslog \\\n\n && apt-get -q -y clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \\\n\n && ln -s /usr/bin/python3 /usr/bin/python \\\n\n && head -n $(grep -n RULES /etc/rsyslog.conf | cut -d':' -f1) /etc/rsyslog.conf > /etc/rsyslog.conf.new \\\n && mv /etc/rsyslog.conf.new /etc/rsyslog.conf \\\n && echo '*.*        /dev/stdout' >> /etc/rsyslog.conf \\\n && sed -i '/.*imklog*/d' /etc/rsyslog.conf \\\n\n && mkdir -p /run/sshd \\\n\n && adduser --disabled-password -q --gecos '' app \\\n && passwd -d app \\\n\n && wget -O novnc.tar.gz https://github.com/novnc/noVNC/archive/v1.2.0.tar.gz \\\n && tar xvf novnc.tar.gz \\\n && ln -s noVNC-* novnc \\\n\n && ln -s /novnc/vnc_lite.html /novnc/index.html \\\n\n && wget -O websockify.tar.gz https://github.com/novnc/websockify/archive/v0.9.0.tar.gz \\\n && tar xvf websockify.tar.gz \\\n && ln -s websockify-* websockify \\\n\n && chown app -R /websockify* \\\n && chown app -R /no* && rm novnc.tar.gz\n\nVOLUME [\"/certs\"]\n\nEXPOSE 22 80 443 5900\n\nCOPY . /container/\n\nHEALTHCHECK CMD [\"docker-healthcheck.sh\"]\nENTRYPOINT [\"entrypoint.sh\"]\n\nCMD [ \"runsvdir\",\"-P\", \"/container/config/runit\" ]\n"
}