{
  "startTime": 1674252568303,
  "endTime": 1674252569585,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 11
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 11
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 59
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 57
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 74
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 83
      }
    }
  ],
  "repairedDockerfile": "FROM rundeck/rundeck:SNAPSHOT\n\nUSER root\n\nRUN echo \"deb http://archive.ubuntu.com/ubuntu xenial-updates main restricted universe multiverse /\" | sudo tee -a /etc/apt/sources.list\n\nRUN apt-get -y update && \\\n    apt-get -y --no-install-recommends install \\\n    software-properties-common \\\n    apt-transport-https \\\n    iputils-ping \\\n    openssh-server \\\n    netcat-traditional \\\n    unzip \\\n    zip \\\n    vim \\\n    jq \\\n    sysstat && rm -rf /var/lib/apt/lists/*;\n\nARG PYTHON_VERSION\n\nRUN echo ${PYTHON_VERSION}\n\nRUN apt-get install --no-install-recommends -y libffi-dev && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get install --no-install-recommends libssl-dev openssl gcc make -y && \\\n    cd /opt && \\\n    wget https://www.python.org/ftp/python/${PYTHON_VERSION}/Python-${PYTHON_VERSION}.tgz && \\\n    tar xzvf Python-${PYTHON_VERSION}.tgz && \\\n    cd Python-${PYTHON_VERSION} && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-ensurepip=install && \\\n    make && \\\n    make install && rm Python-${PYTHON_VERSION}.tgz && rm -rf /var/lib/apt/lists/*;\n\nENV PATH=\"/opt/Python-${PYTHON_VERSION}:$PATH\"\n\nRUN curl -f https://bootstrap.pypa.io/get-pip.py -o get-pip.py\nRUN python get-pip.py\n\nRUN apt-get install --no-install-recommends -y gcc python-dev libkrb5-dev krb5-user && rm -rf /var/lib/apt/lists/*;\n## Install python winrm\nRUN python -m pip install --upgrade pip && \\\n    python -m pip install setuptools --force --upgrade && \\\n    python -m pip install requests urllib3 pywinrm && \\\n    python -m pip install pywinrm[credssp] && \\\n    python -m pip install pywinrm[kerberos] && \\\n    python -m pip install pexpect\n\n#set rundeck password\nRUN echo 'rundeck:rundeck' | chpasswd\n\nUSER rundeck\nENV RDECK_BASE=/home/rundeck \\\n    USER=rundeck\n\nENV PATH=\"/opt/Python-${PYTHON_VERSION}:$PATH\"\n\nRUN mkdir data demo-projects\n\nCOPY --chown=root:root ./config/krb5.conf /etc/krb5.conf\nCOPY --chown=rundeck:root remco /etc/remco\nCOPY --chown=rundeck:root ./plugins ./libext\n\nVOLUME [\"/home/rundeck/server/data\"]\n\nEXPOSE 4440\nENTRYPOINT [ \"docker-lib/entry.sh\" ]\n"
}