{
  "startTime": 1674253433690,
  "endTime": 1674253434773,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 81
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 18,
        "columnEnd": 49
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 21,
        "columnEnd": 32
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 15,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 10
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 10
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 10
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 27
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 10
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 51
      }
    }
  ],
  "repairedDockerfile": "# Dockerfile to spin up a working Katana installation\nFROM python:3.8\n\n# Install binary packages\nRUN apt-get update && apt-get upgrade\n# Base Dependencies\nRUN apt-get install --no-install-recommends -y python-tk tk-dev libffi-dev libssl-dev pandoc \\\n\tlibgmp3-dev libzbar-dev tesseract-ocr xsel libpoppler-cpp-dev libmpc-dev \\\n\tlibdbus-glib-1-dev ruby libenchant-dev apktool nodejs groff binwalk \\\n\tforemost tcpflow poppler-utils exiftool steghide stegsnow bison ffmpeg \\\n\tlibgd-dev && rm -rf /var/lib/apt/lists/*;\nRUN apt-get install --no-install-recommends -y less && rm -rf /var/lib/apt/lists/*;\n\n# Gem complained unless you bootstrapped rdoc first. I don't know why.\nRUN gem install rdoc --no-document\nRUN gem install zsteg\n\n# Compile and install npiet\nRUN git clone https://github.com/gleitz/npiet /opt/npiet\n# npiet includes `sys/malloc.h` which doesn't exist. Malloc definitions come\n# from stdlib.h.\nRUN sed -i 's|sys/malloc\\.h|stdlib.h|g' /opt/npiet/npiet-foogol.y\nRUN cd /opt/npiet && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make && make install\n\n# Download jsteg\nRUN wget -O /usr/local/bin/jsteg https://github.com/lukechampine/jsteg/releases/download/v0.3.0/jsteg-linux-amd64 && chmod +x /usr/local/bin/jsteg\nRUN wget -O /usr/local/bin/slink https://github.com/lukechampine/jsteg/releases/download/v0.3.0/slink-linux-amd64 && chmod +x /usr/local/bin/slink\n\n# Download, compile and install snow\nRUN wget -O /usr/snow.tar.gz https://www.darkside.com.au/snow/snow-20130616.tar.gz\nRUN cd /usr && tar -xvf snow.tar.gz && rm snow.tar.gz\nRUN cd /usr/snow-20130616/ && make\nRUN cp /usr/snow-20130616/snow /usr/local/bin/snow && chmod +x /usr/local/bin/snow\n\n# Clone Katana Repository\nRUN git clone --recursive https://github.com/JohnHammond/katana.git /katana\n# Install katana python dependencies\nRUN cd /katana && pip install --no-cache-dir -r requirements.txt\n\n# Create runtime data directory directory\nRUN mkdir /data\nWORKDIR /katana\n\n# Copy the start script\nCOPY katana.sh /start.sh\nRUN chmod +x /start.sh\n\n# Run katana\nENTRYPOINT [\"/start.sh\"]\nCMD [\"-c\", \"/data/katana.ini\", \"-m\", \"monitor=/data/targets,outdir=/data/results\"]\n"
}