{
  "startTime": 1674250878847,
  "endTime": 1674250879746,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 7,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 52,
        "columnEnd": 106
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 7,
        "columnEnd": 28
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 52,
        "columnEnd": 106
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 7,
        "columnEnd": 28
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 52,
        "columnEnd": 106
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 7,
        "columnEnd": 52
      }
    }
  ],
  "repairedDockerfile": "FROM python:3.9\nLABEL maintainer=\"James Turk <dev@jamesturk.net>\"\n\n# global environment settings\nENV PYTHONUNBUFFERED=1 PYTHONDONTWRITEBYTECODE=1 PYTHONIOENCODING='utf-8' LANG='C.UTF-8'\nSTOPSIGNAL SIGINT\n\nRUN BUILD_DEPS=\" \\\n      python3-dev \\\n      git \\\n      build-essential \\\n      libpq-dev \\\n      libgeos-dev \\\n      libgdal-dev \\\n      libcap-dev \\\n      wget \\\n      postgresql-client \\\n      uwsgi \\\n      uwsgi-src \\\n      awscli \\\n    \" \\\n    && apt-get --allow-releaseinfo-change update && apt-get install -y --no-install-recommends $BUILD_DEPS && rm -rf /var/lib/apt/lists/*;\n\nRUN cd /usr/lib/uwsgi/plugins && uwsgi --build-plugin \"/usr/src/uwsgi/plugins/python python39\"\n\n# copy code and entrypoint in\nADD . /code/\nWORKDIR /code/\nCOPY docker/uwsgi/custom-entrypoint /usr/local/bin\nRUN chmod a+x /usr/local/bin/custom-entrypoint\n\nRUN wget https://deb.nodesource.com/setup_lts.x -O nodesource.sh \\\n    && bash nodesource.sh \\\n    && apt install --no-install-recommends -y nodejs \\\n    && npm ci \\\n    && npm run build && rm -rf /var/lib/apt/lists/*;\nRUN pip install --no-cache-dir poetry\n\n\n# everything after here as openstates user\nRUN groupadd -r openstates && useradd --no-log-init -r -g openstates openstates\nRUN mkdir /home/openstates && chown openstates:openstates /home/openstates\nUSER openstates:openstates\n\nRUN poetry install\n\n# uwsgi config\nENV UWSGI_MASTER=1 \\\n  UWSGI_HTTP_AUTO_CHUNKED=1 \\\n  UWSGI_HTTP_KEEPALIVE=1 \\\n  UWSGI_LAZY_APPS=1 \\\n  UWSGI_WSGI_ENV_BEHAVIOR=holy \\\n  UWSGI_MODULE=web.wsgi:application \\\n  UWSGI_BUFFER_SIZE=8096 \\\n  UWSGI_HARAKIRI=30 \\\n  UWSGI_SINGLE_INTERPRETER=1 \\\n  UWSGI_PLUGIN=python39 \\\n  UWSGI_SOCKET=:9999\n\nENTRYPOINT [\"custom-entrypoint\"]\nCMD [\"uwsgi\", \"--show-config\"]\n"
}