{
  "startTime": 1674249201648,
  "endTime": 1674249202467,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 88
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 45
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG GOLANG=golang:1.18.1-alpine3.15\nFROM ${GOLANG}\n\nARG http_proxy=$http_proxy\nARG https_proxy=$https_proxy\nARG no_proxy=$no_proxy\nENV http_proxy=$http_proxy\nENV https_proxy=$https_proxy\nENV no_proxy=$no_proxy\n\nRUN apk -U --no-cache add bash git gcc musl-dev docker vim less file curl wget ca-certificates jq linux-headers \\\n    zlib-dev tar zip squashfs-tools npm coreutils python3 openssl-dev libffi-dev libseccomp libseccomp-dev \\\n    libseccomp-static make libuv-static sqlite-dev sqlite-static libselinux libselinux-dev zlib-dev zlib-static \\\n    zstd pigz alpine-sdk binutils-gold btrfs-progs-dev btrfs-progs-static gawk yq \\\n    && \\\n    if [ \"$(go env GOARCH)\" = \"amd64\" ]; then \\\n    apk -U --no-cache add mingw-w64-gcc; \\\n    fi\n\nRUN if [ \"$(go env GOARCH)\" = \"arm64\" ]; then \\\n    wget https://github.com/aquasecurity/trivy/releases/download/v0.25.3/trivy_0.25.3_Linux-ARM64.tar.gz && \\\n    tar -zxvf trivy_0.25.3_Linux-ARM64.tar.gz                                                            && \\\n    mv trivy /usr/local/bin; rm trivy_0.25.3_Linux-ARM64.tar.gz \\\n    elif [ \"$(go env GOARCH)\" = \"arm\" ]; then \\\n    wget https://github.com/aquasecurity/trivy/releases/download/v0.25.3/trivy_0.25.3_Linux-ARM.tar.gz   && \\\n    tar -zxvf trivy_0.25.3_Linux-ARM.tar.gz                                                              && \\\n    mv trivy /usr/local/bin; rm trivy_0.25.3_Linux-ARM.tar.gz \\\n    elif [ \"$(go env GOARCH)\" = \"amd64\" ]; then \\\n    wget https://github.com/aquasecurity/trivy/releases/download/v0.25.3/trivy_0.25.3_Linux-64bit.tar.gz && \\\n    tar -zxvf trivy_0.25.3_Linux-64bit.tar.gz                                                            && \\\n    mv trivy /usr/local/bin; rm trivy_0.25.3_Linux-64bit.tar.gz \\\n    fi\n# this works for both go 1.17 and 1.18\nRUN GOPROXY=direct go install golang.org/x/tools/cmd/goimports@gopls/v0.8.2\nRUN rm -rf /go/src /go/pkg\n\nRUN if [ \"$(go env GOARCH)\" = \"amd64\" ]; then \\\n    curl -f -sL https://raw.githubusercontent.com/golangci/golangci-lint/v1.45.2/install.sh | sh -s; \\\n    fi\n\nARG SELINUX=true\nENV SELINUX $SELINUX\n\nENV DAPPER_RUN_ARGS --privileged -v k3s-cache:/go/src/github.com/k3s-io/k3s/.cache -v trivy-cache:/root/.cache/trivy\nENV DAPPER_ENV REPO TAG DRONE_TAG IMAGE_NAME SKIP_VALIDATE SKIP_AIRGAP GCLOUD_AUTH GITHUB_TOKEN GOLANG\nENV DAPPER_SOURCE /go/src/github.com/k3s-io/k3s/\nENV DAPPER_OUTPUT ./bin ./dist ./build/out ./build/static ./pkg/static ./pkg/deploy\n\nENV DAPPER_DOCKER_SOCKET true\nENV HOME ${DAPPER_SOURCE}\nENV CROSS true\nENV STATIC_BUILD true\nWORKDIR ${DAPPER_SOURCE}\n\nENTRYPOINT [\"./scripts/entry.sh\"]\nCMD [\"ci\"]\n"
}