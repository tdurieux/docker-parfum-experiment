{
  "startTime": 1674253937931,
  "endTime": 1674253938289,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 6,
        "columnEnd": 146
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 25
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG GOLANG=golang:1.18.1-alpine3.15\nFROM ${GOLANG} as test-base\n\nRUN apk -U --no-cache add bash jq\nENV K3S_SOURCE /go/src/github.com/k3s-io/k3s/\nWORKDIR ${K3S_SOURCE}\n\nCOPY . ${K3S_SOURCE}\n\n\nFrom test-base as test-mods\n\nCOPY ./scripts/test-mods /bin/\nENTRYPOINT [\"/bin/test-mods\"]\n\nFrom test-base as test-k3s\n\nRUN apk -U --no-cache add git gcc musl-dev docker curl coreutils python3 openssl py3-pip procps\n\nENV SONOBUOY_VERSION 0.56.5\n\nRUN OS=linux; \\\n    ARCH=$(go env GOARCH); \\\n    RELEASE=$(curl -fs https://storage.googleapis.com/kubernetes-release/release/stable.txt); \\\n    if [ \"${ARCH}\" == \"amd64\" ] || [ \"${ARCH}\" == \"arm64\" ] || [ \"${ARCH}\" == \"s390x\" ]; then \\\n      curl -f -sL \"https://github.com/vmware-tanzu/sonobuoy/releases/download/v${SONOBUOY_VERSION}/sonobuoy_${SONOBUOY_VERSION}_${OS}_${ARCH}.tar.gz\" | \\\n      tar -xzf - -C /usr/local/bin; \\\n    fi; \\\n    curl -fsL https://storage.googleapis.com/kubernetes-release/release/${RELEASE}/bin/linux/${ARCH}/kubectl -o /usr/local/bin/kubectl; \\\n    chmod a+x /usr/local/bin/kubectl; \\\n    pip install --no-cache-dir codespell\n\nENV TEST_CLEANUP true\n\nENTRYPOINT [\"./scripts/entry.sh\"]\nCMD [\"test\"]"
}