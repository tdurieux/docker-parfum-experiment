{
  "startTime": 1674253436625,
  "endTime": 1674253437543,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 8,
        "columnEnd": 84
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 97
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM golang:1.16-alpine3.12 AS dapper\n\nARG ARCH=amd64\n\nRUN apk -U --no-cache add bash coreutils git gcc musl-dev docker-cli vim less file curl wget ca-certificates\nRUN GO111MODULE=on GOPROXY=direct go get golang.org/x/lint/golint@83fdc39ff7b56453e3793356bcff3070b9b96445\nRUN GO111MODULE=on GOPROXY=direct go get golang.org/x/tools/cmd/goimports@gopls/v0.6.9\nRUN rm -rf /go/src /go/pkg\n\nRUN if [ \"${ARCH}\" == \"amd64\" ]; then \\\n        curl -f -sL https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | sh -s v1.38.0; \\\n    fi\n\nENV DAPPER_RUN_ARGS --privileged -v kine-cache:/go/src/github.com/k3s-io/kine/.cache\nENV DAPPER_ENV ARCH REPO TAG DRONE_TAG IMAGE_NAME CROSS SKIP_VALIDATE\nENV DAPPER_SOURCE /go/src/github.com/k3s-io/kine/\nENV DAPPER_OUTPUT ./bin ./dist\nENV DAPPER_DOCKER_SOCKET true\nENV HOME ${DAPPER_SOURCE}\nWORKDIR ${DAPPER_SOURCE}\n\nENTRYPOINT [\"./scripts/entry\"]\nCMD [\"ci\"]\n"
}