{
  "startTime": 1674221245156,
  "endTime": 1674221245896,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 15,
        "columnEnd": 27
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 27
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 31,
        "columnEnd": 47
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 22,
        "columnEnd": 38
      }
    }
  ],
  "repairedDockerfile": "FROM mhart/alpine-node:8.11.1\n\nRUN npm config set unsafe-perm true\nRUN npm install --global yarn && npm cache clean --force;\nRUN npm config set unsafe-perm false\n\nRUN apk add --no-cache python git make gcc g++ bash curl\n\nADD package.json /tmp/package.json\nADD yarn.lock /tmp/yarn.lock\nRUN cd /tmp && yarn install && yarn cache clean;\nRUN mkdir -p /app && cp -a /tmp/node_modules /app/\n\nRUN apk del python git make gcc g++\n\nWORKDIR /app\nADD . ./\nRUN yarn run build && yarn cache clean;\n\nRUN tar -cf build.tar build && rm build.tar\n"
}