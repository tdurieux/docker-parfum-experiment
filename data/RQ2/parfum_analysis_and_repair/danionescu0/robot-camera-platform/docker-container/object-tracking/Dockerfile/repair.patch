diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/danionescu0/robot-camera-platform/docker-container/object-tracking/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/danionescu0/robot-camera-platform/docker-container/object-tracking/Dockerfile/repaired.Dockerfile
index 3a155f6..a143edc 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/danionescu0/robot-camera-platform/docker-container/object-tracking/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/danionescu0/robot-camera-platform/docker-container/object-tracking/Dockerfile/repaired.Dockerfile
@@ -4,7 +4,7 @@ RUN apt-get update
 RUN apt-get upgrade
 
 # install build depedencies
-RUN apt-get install build-essential \
+RUN apt-get install -y --no-install-recommends build-essential \
     ca-certificates \
     cmake \
     gfortran \
@@ -12,19 +12,19 @@ RUN apt-get install build-essential \
     wget \
     curl \
     zip \
-    unzip
+    unzip && rm -rf /var/lib/apt/lists/*;
 
-RUN apt-get install libpng12-0 -y
-RUN apt-get install libgtk-3-dev libcanberra-gtk* libatlas-base-dev gfortran python3-dev -y
-RUN apt-get install libjpeg-dev libpng-dev libtiff-dev -y
-RUN apt-get install libavcodec-dev libavformat-dev libswscale-dev libv4l-dev -y
-RUN apt-get install libxvidcore-dev libx264-dev -y
-RUN apt-get install libgtk-3-dev -y
-RUN apt-get install libcanberra-gtk* -y
-RUN apt-get install libatlas-base-dev gfortran -y
-RUN apt-get install python3-dev -y
+RUN apt-get install --no-install-recommends libpng12-0 -y && rm -rf /var/lib/apt/lists/*;
+RUN apt-get install --no-install-recommends libgtk-3-dev libcanberra-gtk* libatlas-base-dev gfortran python3-dev -y && rm -rf /var/lib/apt/lists/*;
+RUN apt-get install --no-install-recommends libjpeg-dev libpng-dev libtiff-dev -y && rm -rf /var/lib/apt/lists/*;
+RUN apt-get install --no-install-recommends libavcodec-dev libavformat-dev libswscale-dev libv4l-dev -y && rm -rf /var/lib/apt/lists/*;
+RUN apt-get install --no-install-recommends libxvidcore-dev libx264-dev -y && rm -rf /var/lib/apt/lists/*;
+RUN apt-get install --no-install-recommends libgtk-3-dev -y && rm -rf /var/lib/apt/lists/*;
+RUN apt-get install --no-install-recommends libcanberra-gtk* -y && rm -rf /var/lib/apt/lists/*;
+RUN apt-get install --no-install-recommends libatlas-base-dev gfortran -y && rm -rf /var/lib/apt/lists/*;
+RUN apt-get install --no-install-recommends python3-dev -y && rm -rf /var/lib/apt/lists/*;
 
-RUN apt-get install  \
+RUN apt-get install --no-install-recommends \
     graphicsmagick \
     libatlas-base-dev \
     libavcodec-dev \
@@ -45,12 +45,12 @@ RUN apt-get install  \
     libxvidcore-dev \
     libx264-dev \
     libatlas-base-dev \
-    libraspberrypi0 -y
+    libraspberrypi0 -y && rm -rf /var/lib/apt/lists/*;
 
 RUN apt-get clean
-RUN pip3 install numpy
-RUN pip3 install wheel
-RUN sudo -H pip3 install setuptools --upgrade
+RUN pip3 install --no-cache-dir numpy
+RUN pip3 install --no-cache-dir wheel
+RUN sudo -H pip3 install --no-cache-dir setuptools --upgrade
 
 ENV OPENCV_VERSION 4.1.0
 
@@ -75,7 +75,7 @@ RUN  cmake -D CMAKE_BUILD_TYPE=RELEASE \
     -D INSTALL_PYTHON_EXAMPLES=OFF \
     -D BUILD_EXAMPLES=OFF ..
 # adjust swap size for compilation
-RUN apt-get install -y dphys-swapfile
+RUN apt-get install --no-install-recommends -y dphys-swapfile && rm -rf /var/lib/apt/lists/*;
 RUN sed -i 's/CONF_SWAPSIZE=100$/CONF_SWAPSIZE=1024/' /etc/dphys-swapfile
 RUN /etc/init.d/dphys-swapfile stop
 RUN /etc/init.d/dphys-swapfile start
@@ -95,21 +95,21 @@ RUN python3 setup.py install --compiler-flags "-mfpu=neon"
 
 # install other project dependencies with pip
 RUN wget https://files.pythonhosted.org/packages/fa/37/45185cb5abbc30d7257104c434fe0b07e5a195a6847506c074527aa599ec/Click-7.0-py2.py3-none-any.whl
-RUN pip3 install Click-7.0-py2.py3-none-any.whl
+RUN pip3 install --no-cache-dir Click-7.0-py2.py3-none-any.whl
 RUN pip3 install --no-cache-dir face_recognition==1.2.3
-RUN pip3 install picamera==1.13
-RUN pip3 install imutils==0.4.3
-RUN pip3 install pyserial==3.4
-RUN pip3 install Pillow==5.4.1
+RUN pip3 install --no-cache-dir picamera==1.13
+RUN pip3 install --no-cache-dir imutils==0.4.3
+RUN pip3 install --no-cache-dir pyserial==3.4
+RUN pip3 install --no-cache-dir Pillow==5.4.1
 
 # install tensorflow
 WORKDIR /root
 RUN git clone https://github.com/PINTO0309/Tensorflow-bin.git
 WORKDIR /root/Tensorflow-bin
-RUN pip3 install --upgrade setuptools
-RUN apt-get install libhdf5-serial-dev
-RUN apt-get install libhdf5-dev
+RUN pip3 install --no-cache-dir --upgrade setuptools
+RUN apt-get install -y --no-install-recommends libhdf5-serial-dev && rm -rf /var/lib/apt/lists/*;
+RUN apt-get install -y --no-install-recommends libhdf5-dev && rm -rf /var/lib/apt/lists/*;
 RUN mv tensorflow-1.14.0-cp35-cp35m-linux_armv7l.whl tensorflow-1.14.0-cp37-cp37m-linux_armv7l.whl
-RUN pip3 install tensorflow-1.14.0-cp37-cp37m-linux_armv7l.whl
+RUN pip3 install --no-cache-dir tensorflow-1.14.0-cp37-cp37m-linux_armv7l.whl
 
 WORKDIR /workspace
\ No newline at end of file