{
  "startTime": 1674250297240,
  "endTime": 1674250298031,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 158
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 150
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 1,
        "columnEnd": 54
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 1,
        "columnEnd": 50
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 18
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# build ktranslate\nFROM golang:1.18-alpine as build\nRUN apk add --no-cache -U libpcap-dev alpine-sdk bash libcap\nCOPY . /src\nWORKDIR /src\nARG KENTIK_KTRANSLATE_VERSION\nRUN make\n\n# maxmind dbs\nFROM alpine:latest as maxmind\nARG MAXMIND_LICENSE_KEY\nRUN apk add --no-cache -U curl tar\nENV GEOLITE2_COUNTRY_FILE=GeoLite2-Country.mmdb\nENV GEOLITE2_ASN_FILE=GeoLite2-ASN.mmdb\nRUN if [ -z \"${MAXMIND_LICENSE_KEY}\" ]; then echo \"MAXMIND_LICENSE_KEY\" not set; exit 1; fi\nRUN curl -f -o /tmp/country.tar.gz \"https://download.maxmind.com/app/geoip_download?edition_id=GeoLite2-Country&license_key=${MAXMIND_LICENSE_KEY}&suffix=tar.gz\" && \\\n\ttar zxf /tmp/country.tar.gz --strip-components 1 -C / && rm /tmp/country.tar.gz\nRUN curl -f -o /tmp/asn.tar.gz \"https://download.maxmind.com/app/geoip_download?edition_id=GeoLite2-ASN&license_key=${MAXMIND_LICENSE_KEY}&suffix=tar.gz\" && \\\n\ttar zxf /tmp/asn.tar.gz --strip-components 1 -C / && rm /tmp/asn.tar.gz\n\n# snmp profiles\nFROM alpine:latest as snmp\nRUN apk add --no-cache -U git\nRUN git clone https://github.com/kentik/snmp-profiles /snmp\n\n# main image\nFROM alpine:3.14\nRUN apk add -U --no-cache ca-certificates libpcap\nRUN addgroup -g 1000 ktranslate && \\\n\tadduser -D -u 1000 -G ktranslate -H -h /etc/ktranslate ktranslate\n#RUN set -eux; \\\n#\tgroupadd --gid 1000 ktranslate; \\\n#\tuseradd --home-dir /etc/ktranslate --gid ktranslate --no-create-home --uid 1000 ktranslate\n\nCOPY --chown=ktranslate:ktranslate config/ /etc/ktranslate/\nCOPY --chown=ktranslate:ktranslate lib/ /etc/ktranslate/\n\n# maxmind db\nCOPY --from=maxmind /GeoLite2-Country.mmdb /etc/ktranslate/\nCOPY --from=maxmind /GeoLite2-ASN.mmdb /etc/ktranslate/\n# snmp\nCOPY --from=snmp /snmp/profiles /etc/ktranslate/profiles\n\n# add backwards compatibility symlinks for folks using an snmp.yml from the older image (and \"ls\" to verify the symlinks are correct and working)\nRUN ls -lah /etc/ktranslate ; ln -sv /etc/ktranslate /etc/profiles ; ls -lah /etc/profiles/\nRUN ln -sv /etc/ktranslate/mibs.db /etc/mib.db ; ls -lah /etc/mib.db/\n\nCOPY --from=build /src/bin/ktranslate /usr/local/bin/ktranslate\nCOPY --from=build /usr/sbin/setcap /usr/sbin/setcap\nCOPY --from=build /usr/lib/libcap.so.2 /usr/lib/libcap.so.2\nRUN setcap cap_net_raw=+ep /usr/local/bin/ktranslate\n\nEXPOSE 8082\n\nUSER ktranslate\nENTRYPOINT [\"ktranslate\", \"-listen\", \"off\", \"-mapping\", \"/etc/ktranslate/config.json\", \"-geo\", \"/etc/ktranslate/GeoLite2-Country.mmdb\", \"-udrs\", \"/etc/ktranslate/udr.csv\", \"-api_devices\", \"/etc/ktranslate/devices.json\", \"-asn\", \"/etc/ktranslate/GeoLite2-ASN.mmdb\", \"-log_level\", \"info\"]\n"
}