{
  "startTime": 1674245984867,
  "endTime": 1674245985866,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 101
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM cloudfoundry/cflinuxfs3:0.196.0\n\n\nRUN groupadd -g 880 eventkit && useradd -u 8800 -g 880 -m eventkit && groupadd -g 1001 docker && \\\n    sudo usermod -a -G docker eventkit && mkdir -p /var/lib/eventkit/config && chown eventkit:eventkit /var/lib/eventkit\n\nUSER eventkit\n\nWORKDIR /var/lib/eventkit\n\nCOPY --chown=eventkit ./requirements-dev.txt ./environment.yml ./pytest.ini ./setup.cfg /var/lib/eventkit/\nCOPY --chown=eventkit ./conda /var/lib/eventkit/conda\nCOPY --chown=eventkit ./config /var/lib/eventkit/config\n\nENV PATH=\"/home/eventkit/miniconda3/bin:$PATH\"\nENV CURL_CA_BUNDLE=\"/var/lib/eventkit/conda/cacert.pem\"\nENV REQUESTS_CA_BUNDLE=\"/var/lib/eventkit/conda/cacert.pem\"\n# Install Conda\nRUN curl -f -L https://repo.continuum.io/miniconda/Miniconda3-py39_4.9.2-Linux-x86_64.sh -o miniconda.sh && \\\n    /bin/bash miniconda.sh -b -p \"/home/eventkit/miniconda3\" && \\\n    rm miniconda.sh && \\\n\n    # Setup channels, only use channels in environment file or built locally. \\\n    conda config --remove channels defaults && \\\n    conda config --add channels conda-forge && \\\n    conda config --add channels file://var/lib/eventkit/conda/repo && \\\n    # TODO: get build to work with strict priority\n    conda config --set channel_priority flexible && \\\n    conda init bash && \\\n\n    # Setup certs (might be needed if self-hosting).\n    openssl x509 -outform der -in $REQUESTS_CA_BUNDLE -out /var/lib/eventkit/conda/cacert.crt && \\\n    conda config --set ssl_verify /var/lib/eventkit/conda/cacert.crt && \\\n    # Create the environment\n    conda env create --force --file /var/lib/eventkit/environment.yml -n eventkit-cloud python=3.10 && \\\n    /home/eventkit/miniconda3/envs/eventkit-cloud/bin/pip install -r requirements-dev.txt && \\\n    SECRET_KEY=temp_secret_key /home/eventkit/miniconda3/envs/eventkit-cloud/bin/python \\\n    /home/eventkit/miniconda3/envs/eventkit-cloud/bin/manage.py collectstatic && \\\n\n    # Clean up.\n    conda clean --yes --all && \\\n    rm -rf /var/lib/eventkit/conda && \\\n    rm -rf /home/eventkit/miniconda3/envs/eventkit-cloud/lib/python3.10/site-packages/eventkit_cloud\n\nCOPY --chown=eventkit ./eventkit_cloud /home/eventkit/miniconda3/envs/eventkit-cloud/lib/python3.10/site-packages/eventkit_cloud\n\nENTRYPOINT [\"bash\", \"/home/eventkit/miniconda3/envs/eventkit-cloud/lib/python3.10/site-packages/scripts/wait-for-postgis.sh\"]\n\nCMD [\"echo\", \"This image has no default run command.\"]\n"
}