{
  "startTime": 1674254956393,
  "endTime": 1674254958819,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 13
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 13
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG BASE_DISTRO=debian:stable-slim\nFROM $BASE_DISTRO\n\nARG INSTALL_GCC=0\n\n# In case of Proxy based environment, leave the following enabled.\n# in Direct internet cases, comment out the following two lines.\n#--- PROXY SETUP START\n# COPY proxy-configuration/ /\n# RUN  export DEBIAN_FRONTEND=noninteractive;apt-get update;apt-get install -y apt-transport-https socket corkscrew apt-utils\n#--- END START\n\nARG DEBIAN_FRONTEND noninteractive\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y \\\n        build-essential \\\n        wget \\\n        gcc \\\n        ccache \\\n        ncurses-dev \\\n        xz-utils \\\n        libssl-dev \\\n        bc \\\n        flex \\\n        libelf-dev \\\n        bison \\\n        libyaml-dev \\\n        python3-pip \\\n        libcurl4-gnutls-dev \\\n        libexpat1-dev \\\n        gettext \\\n        libz-dev \\\n        libssl-dev \\\n        flex \\\n        bison \\\n        pkg-config \\\n        sqlite3 \\\n        libsqlite3-dev \\\n        llvm \\\n        autoconf \\\n        pkg-config \\\n        ocaml-nox \\\n        ocaml-findlib \\\n        menhir \\\n        libmenhir-ocaml-dev \\\n        ocaml-native-compilers \\\n        libpcre-ocaml-dev \\\n        libparmap-ocaml-dev \\\n        libpython3.9 \\\n        libpython3.9-dev \\\n        libgmp-dev \\\n        libmpc-dev \\\n        diffstat \\\n        yamllint \\\n        swig \\\n        python3 \\\n        python3-ruamel.yaml \\\n        aria2 && rm -rf /var/lib/apt/lists/*;\n\nRUN update-alternatives --install /usr/bin/python python /usr/bin/python3 1\n\nCOPY other-configs/ /\n\nCOPY build-env.sh /tmp\nRUN  INSTALL_GCC=$INSTALL_GCC /tmp/build-env.sh\n\nFROM $BASE_DISTRO\n\nARG INSTALL_GCC=0\n\n# Publish the source repository\nLABEL org.opencontainers.image.source https://github.com/nmenon/kernel_patch_verify\n\n#--- PROXY SETUP START\n# COPY proxy-configuration/ /\n# RUN  export DEBIAN_FRONTEND=noninteractive;apt-get update;apt-get install -y apt-transport-https socket corkscrew apt-utils\n#--- END START\n\n# Add our llvm repo configs\nCOPY llvm-config /\n\nARG DEBIAN_FRONTEND noninteractive\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        ca-certificates \\\n        gnupg2 \\\n        build-essential \\\n        wget \\\n        gcc \\\n        ccache \\\n        ncurses-dev \\\n        xz-utils \\\n        libssl-dev \\\n        bc \\\n        flex \\\n        libelf-dev \\\n        bison \\\n        libyaml-dev \\\n        python3-pip \\\n        libcurl4-gnutls-dev \\\n        libexpat1-dev \\\n        gettext \\\n        libz-dev \\\n        libssl-dev \\\n        flex \\\n        bison \\\n        pkg-config \\\n        sqlite3 \\\n        libsqlite3-dev \\\n        autoconf \\\n        pkg-config \\\n        ocaml-nox \\\n        ocaml-findlib \\\n        menhir \\\n        libmenhir-ocaml-dev \\\n        ocaml-native-compilers \\\n        libpcre-ocaml-dev \\\n        libparmap-ocaml-dev \\\n        libpython3.9 \\\n        libpython3.9-dev \\\n        libgmp-dev \\\n        libmpc-dev \\\n        diffstat \\\n        yamllint \\\n        swig \\\n        python3 \\\n        python3-ruamel.yaml \\\n        llvm \\\n        clang \\\n        lld && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/*\n\nRUN update-alternatives --install /usr/bin/python python /usr/bin/python3 1\n\nCOPY other-configs/ /\n\nCOPY --from=0 /usr/local/ /usr/local/\n\nRUN ldconfig /usr/local/lib\n\nCOPY kernel_patch_verify /usr/bin/kernel_patch_verify\n\nWORKDIR /workdir\n"
}