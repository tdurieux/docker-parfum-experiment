{
  "startTime": 1674252213218,
  "endTime": 1674252213921,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 2,
        "columnEnd": 26
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 2,
        "columnEnd": 26
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Must come first.\nFROM ubuntu:12.04\n\n# Same as `run --expose`.\nEXPOSE 80\nEXPOSE 430\n\n##run\nRUN echo RUN\nRUN echo stdout\nRUN cd / && date > date\nRUN cd / && date > date2\n\n# Each steps generate a new intermediary image that runs on a clean shell.\n# Must use `WORKDIR` instead.\nRUN cd /\nRUN cd /tmp\nRUN pwd\n\n##WORKDIR\n# Define working directory for commands that follow.\n# Can be used multiple times: each time relative to last.\n# Persists on `docker run` like `run -w`.\nRUN echo WORKDIR\nWORKDIR /etc\nRUN pwd\nWORKDIR nginx\nRUN pwd\n\n# Don't forget the `-y` or else would require stdin input and fail.\n# software-properties-common is for `add-apt-repository`.\n# Official Nginx conf at: <https://github.com/dockerfile/nginx/blob/master/Dockerfile#L10>\n# TODO broken, why?\n#RUN (apt-get update && apt-get install -y nginx) &>/dev/null\nRUN \\\n  apt-get update && \\\n  apt-get install --no-install-recommends -y nginx && \\\n  printf \"\\ndaemon off;\\n\" >> /etc/nginx/nginx.conf && rm -rf /var/lib/apt/lists/*;\n\n##CMD\n# Serves as a default command for `docker run`\nCMD [\"nginx\"]\n# For an interactive machine you could use:\n#CMD [\"bash\"]\n\n# Affects commands that follow and persists for `docker run` like `run -v`.\nVOLUME [\"/tmp\", \"/etc\"]\nRUN ls /tmp\n\n# Copy file from host (relative to Dockerfile) to guest (absolute path).\nADD add.txt /add.txt\n\n# Same as `run --env`. Affects RUN commands that follow,\n# and persists for `docker run` like `run -e`.\nENV HOME /root\nENV CUSTOM custom\nRUN echo env\nRUN env\n"
}