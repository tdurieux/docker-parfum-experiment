{
  "startTime": 1674217636183,
  "endTime": 1674217637157,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 87
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 19,
        "columnStart": 7,
        "columnEnd": 19
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 19,
        "columnStart": 7,
        "columnEnd": 19
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 17,
        "columnStart": 7,
        "columnEnd": 19
      }
    }
  ],
  "repairedDockerfile": "# pull official base image\nFROM python:2.7\n\n# set work directory\nWORKDIR /usr/local/aclu/elections-api\n\n# set environment variables\nENV PYTHONDONTWRITEBYTECODE 1\nENV PYTHONUNBUFFERED 1\n\n# install dependencies\nRUN apt update \\\n    # psycopg2 dependencies \\\n    && apt -y --no-install-recommends install libghc-hdbc-postgresql-dev gcc python2-dev musl-dev make curl postgis \\\n      fail2ban ufw htop emacs24-nox \\\n      build-essential gdal-bin unzip nodejs npm \\\n\n      jq \\\n\n      libopencv-dev && rm -rf /var/lib/apt/lists/*;\n\n# install python dependencies\nRUN pip install --no-cache-dir --upgrade pip\nCOPY ./requirements.txt /usr/local/aclu/elections-api/requirements.txt\nCOPY ./dev-requirements.txt /usr/local/aclu/elections-api/dev-requirements.txt\nRUN pip install --no-cache-dir -r requirements.txt -r\n\n# install node dependencies\nRUN npm install -g mapshaper opencv --unsafe-perm=true smartcrop-cli --unsafe-perm=true && npm cache clean --force;"
}