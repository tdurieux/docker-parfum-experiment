{
  "startTime": 1674248342104,
  "endTime": 1674248343521,
  "originalSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 23
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# docker build --squash -f $PGB_REPO/test/Dockerfile -t $PGB_IMAGE .\n# docker run --privileged -itd --name $PGB-test -h $PGB-test -v $PGB_REPO:/home/vagrant/$PGB $PGB_IMAGE\nFROM ubuntu:jammy\n\n# Install packages\nRUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install --no-install-recommends -y \\\n        sudo vim htop jq rsync sysstat curl \\\n        libdbd-pg-perl libxml-checker-perl libyaml-perl \\\n        devscripts build-essential lintian git cloc txt2man debhelper libssl-dev zlib1g-dev libperl-dev libxml2-dev liblz4-dev \\\n        liblz4-tool libpq-dev lcov autoconf-archive zstd libzstd-dev bzip2 libbz2-dev pkg-config libyaml-dev libc6-dbg wget meson \\\n        ccache valgrind && rm -rf /var/lib/apt/lists/*;\n\n# Install Docker\nRUN groupadd -g5000 docker\nRUN curl -fsSL https://get.docker.com | sh\n\n# Create vagrant user\nRUN adduser --ingroup=docker -uid=5000 --disabled-password --gecos \\\"\\\" vagrant\n\n# Configure sudo\nRUN echo '%docker ALL=(ALL) NOPASSWD: ALL' >> /etc/sudoers\n\n# Mount tmpfs at /home/vagrant/test for faster testing\nRUN sudo -u vagrant mkdir -m 770 /home/vagrant/test\nRUN echo 'tmpfs /home/vagrant/test tmpfs size=4096M 0 1' >> /etc/fstab\n\n# Cleanup\nRUN apt-get autoremove -y\nRUN apt-get clean\nRUN rm -rf /var/lib/apt/lists/*\n\nUSER vagrant\nWORKDIR /home/vagrant\n\nENTRYPOINT sudo rm -f /var/run/docker.pid && sudo mount -a && sudo dockerd\n"
}