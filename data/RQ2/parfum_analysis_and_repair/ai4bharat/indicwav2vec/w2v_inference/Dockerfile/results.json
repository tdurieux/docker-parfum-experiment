{
  "startTime": 1674251180525,
  "endTime": 1674251181034,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 15,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 18,
        "columnEnd": 43
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 26
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nvcr.io/nvidia/pytorch:21.06-py3\n\n# Ensure apt-get won't prompt for selecting options\nENV DEBIAN_FRONTEND=noninteractive\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y \\\n    liblzma-dev libbz2-dev libzstd-dev \\\n    libsndfile1-dev libopenblas-dev libfftw3-dev \\\n    libgflags-dev libgoogle-glog-dev \\\n    build-essential cmake libboost-system-dev \\\n    libboost-thread-dev libboost-program-options-dev \\\n    libboost-test-dev libeigen3-dev zlib1g-dev \\\n    libbz2-dev liblzma-dev && rm -rf /var/lib/apt/lists/*;\n\nRUN pip install --no-cache-dir packaging soundfile swifter joblib==1.0.0 indic-nlp-library \\\n    tqdm==4.56.0 numpy==1.20.0 pandas==1.2.2 progressbar2==3.53.1 \\\n    python_Levenshtein==0.12.2 editdistance==0.3.1 omegaconf==2.0.6 \\\n    tensorboard==2.4.1 tensorboardX==2.1 wandb jiwer jupyterlab\n\nWORKDIR /home\nRUN git clone https://github.com/pytorch/fairseq.git && \\\n    cd fairseq && pip install --no-cache-dir --editable ./\n\n# WORKDIR /tmp/apex_build\n# RUN git clone https://github.com/NVIDIA/apex && cd apex && \\\n#     pip install -v --no-cache-dir --global-option=\"--cpp_ext\" --global-option=\"--cuda_ext\" \\\n#     --global-option=\"--deprecated_fused_adam\" --global-option=\"--xentropy\" \\\n#     --global-option=\"--fast_multihead_attn\" ./\n\nRUN cd /tmp && git clone https://github.com/kpu/kenlm.git && \\\n    cd kenlm && git checkout 0c4dd4e && \\\n    mkdir build && cd build && \\\n    cmake .. -DCMAKE_BUILD_TYPE=Release \\\n             -DCMAKE_INSTALL_PREFIX=/opt/kenlm \\\n             -DCMAKE_POSITION_INDEPENDENT_CODE=ON && \\\n    make install -j$(nproc)\nENV KENLM_ROOT=/opt/kenlm\n\nWORKDIR /tmp/flashlight_build\nRUN git clone https://github.com/flashlight/flashlight.git && \\\n    cd flashlight/bindings/python && \\\n    export USE_MKL=0 && python setup.py install\n\nWORKDIR /workspace\nCOPY infer /workspace/infer\nCOPY scripts /workspace/scripts"
}