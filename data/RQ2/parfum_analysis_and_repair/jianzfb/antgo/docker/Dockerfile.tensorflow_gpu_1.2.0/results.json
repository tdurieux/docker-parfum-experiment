{
  "startTime": 1674253554576,
  "endTime": 1674253555426,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 127
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 75
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 75
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 75
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 99
      }
    }
  ],
  "repairedDockerfile": "# Build as antgo/server\n\nFROM docker.io/nvidia/cuda:8.0-cudnn5-devel-ubuntu14.04\nMAINTAINER Project Antgo <jian@mltalker.com>\n\nRUN apt-get update -y\nRUN apt-get install --no-install-recommends -y wget \\\n                       vim \\\n                       git \\\n                       curl \\\n                       libjpeg8-dev \\\n                       python3 \\\n                       python3-pip \\\n                       python3-dev \\\n                       unzip && rm -rf /var/lib/apt/lists/*;\n\n# install tensorflow-gpu-1.2.0\nRUN pip3 install --no-cache-dir --upgrade https://storage.googleapis.com/tensorflow/linux/gpu/tensorflow_gpu-1.2.0-cp34-cp34m-linux_x86_64.whl\n# install antgo and its dependence\nRUN apt-get install --no-install-recommends -y libblas-dev liblapack-dev libatlas-base-dev gfortran && rm -rf /var/lib/apt/lists/*;\nADD install.sh install.sh\nRUN bash install.sh\n\n# set enviroment variable\nENV CPLUS_INCLUDE_PATH=${CPLUS_INCLUDE_PATH}:/rocksdb/include\nENV LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:/rocksdb\nENV LIBRARY_PATH=${LIBRARY_PATH}:/rocksdb\n"
}