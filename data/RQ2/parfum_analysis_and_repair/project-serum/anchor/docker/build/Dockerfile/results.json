{
  "startTime": 1674215958423,
  "endTime": 1674215960266,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 81
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 21,
        "lineEnd": 23,
        "columnStart": 49,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 21,
        "lineEnd": 23,
        "columnStart": 49,
        "columnEnd": 26
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 21,
        "lineEnd": 23,
        "columnStart": 49,
        "columnEnd": 26
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# Docker image to generate deterministic, verifiable builds of Anchor programs.\n# This must be run *after* a given ANCHOR_CLI version is published and a git tag\n# is released on GitHub.\n#\n\nFROM ubuntu:18.04\n\nARG DEBIAN_FRONTEND=noninteractive\n\nARG SOLANA_CLI\nARG ANCHOR_CLI\n\nENV NODE_VERSION=\"v17.0.1\"\nENV HOME=\"/root\"\nENV PATH=\"${HOME}/.cargo/bin:${PATH}\"\nENV PATH=\"${HOME}/.local/share/solana/install/active_release/bin:${PATH}\"\nENV PATH=\"${HOME}/.nvm/versions/node/${NODE_VERSION}/bin:${PATH}\"\n\n# Install base utilities.\nRUN mkdir -p /workdir && mkdir -p /tmp && \\\n    apt-get update -qq && apt-get upgrade -qq && apt-get install -y --no-install-recommends -qq \\\n    build-essential git curl wget jq pkg-config python3-pip \\\n    libssl-dev libudev-dev && rm -rf /var/lib/apt/lists/*;\n\n# Install rust.\nRUN curl \"https://sh.rustup.rs\" -sfo rustup.sh && \\\n    sh rustup.sh -y && \\\n    rustup component add rustfmt clippy\n\n# Install node / npm / yarn.\nRUN curl -f -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh | bash\nENV NVM_DIR=\"${HOME}/.nvm\"\nRUN . $NVM_DIR/nvm.sh && \\\n    nvm install ${NODE_VERSION} && \\\n    nvm use ${NODE_VERSION} && \\\n    nvm alias default node && \\\n    npm install -g yarn && npm cache clean --force;\n\n# Install Solana tools.\nRUN sh -c \"$(curl -sSfL https://release.solana.com/${SOLANA_CLI}/install)\"\n\n# Install anchor.\nRUN cargo install --git https://github.com/coral-xyz/anchor --tag ${ANCHOR_CLI} anchor-cli --locked\n\n# Build a dummy program to bootstrap the BPF SDK (doing this speeds up builds).\nRUN mkdir -p /tmp && cd tmp && anchor init dummy && cd dummy && anchor build\n\nWORKDIR /workdir\n"
}