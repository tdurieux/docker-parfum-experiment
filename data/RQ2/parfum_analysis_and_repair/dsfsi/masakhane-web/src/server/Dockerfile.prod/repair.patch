diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/dsfsi/masakhane-web/src/server/Dockerfile.prod b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/dsfsi/masakhane-web/src/server/Dockerfile.prod/repaired.Dockerfile
index 686efbc..5af10de 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/dsfsi/masakhane-web/src/server/Dockerfile.prod
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/dsfsi/masakhane-web/src/server/Dockerfile.prod/repaired.Dockerfile
@@ -6,7 +6,7 @@
 FROM python:3.6.9 as builder
 
 
-# set working directory 
+# set working directory
 WORKDIR /usr/src/app
 
 
@@ -15,27 +15,27 @@ ENV PYTHONDONTWRITEBYTECODE 1
 ENV PYTHONUNBUFFERED 1
 
 # install system dependencies
-RUN apt-get update && apt-get install -y netcat && \
-    apt-get install -y --no-install-recommends gcc
+RUN apt-get update && apt-get install --no-install-recommends -y netcat && \
+    apt-get install -y --no-install-recommends gcc && rm -rf /var/lib/apt/lists/*;
 
 
 RUN apt-get update
-RUN apt-get install -y gnupg lsb-release wget
+RUN apt-get install --no-install-recommends -y gnupg lsb-release wget && rm -rf /var/lib/apt/lists/*;
 
 RUN lsb_release -c -s > /tmp/lsb_release
 RUN GCSFUSE_REPO=$(cat /tmp/lsb_release); echo "deb http://packages.cloud.google.com/apt gcsfuse-$GCSFUSE_REPO main" | tee /etc/apt/sources.list.d/gcsfuse.list
 RUN wget -O - https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -
 
 RUN apt-get update
-RUN apt-get install -y gcsfuse
+RUN apt-get install --no-install-recommends -y gcsfuse && rm -rf /var/lib/apt/lists/*;
 
 
 # lint
-RUN pip install --upgrade pip
-RUN pip install flake8
+RUN pip install --no-cache-dir --upgrade pip
+RUN pip install --no-cache-dir flake8
 RUN flake8 --ignore=E501,F401 .
 
-# add and install requirements 
+# add and install requirements
 COPY ./requirements.txt /usr/src/app/requirements.txt
 # RUN pip install -r requirements.txt
 RUN pip wheel --no-cache-dir --no-deps --wheel-dir /usr/src/app/wheels -r requirements.txt
@@ -45,7 +45,7 @@ RUN pip wheel --no-cache-dir --no-deps --wheel-dir /usr/src/app/wheels -r requir
 # FINAL #
 #########
 
-FROM python:3.6.9 
+FROM python:3.6.9
 
 # create directory for the app user
 RUN mkdir -p /home/app
@@ -60,11 +60,11 @@ RUN mkdir $APP_HOME
 WORKDIR $APP_HOME
 
 # install dependencies
-RUN apt-get update && apt-get install -y --no-install-recommends netcat
+RUN apt-get update && apt-get install -y --no-install-recommends netcat && rm -rf /var/lib/apt/lists/*;
 COPY --from=builder /usr/src/app/wheels /wheels
 COPY --from=builder /usr/src/app/requirements.txt .
-RUN pip install --upgrade pip
-RUN pip install --no-cache /wheels/*
+RUN pip install --no-cache-dir --upgrade pip
+RUN pip install --no-cache-dir --no-cache /wheels/*
 
 # copy entrypoint-prod.sh
 COPY ./entrypoint.prod.sh $APP_HOME