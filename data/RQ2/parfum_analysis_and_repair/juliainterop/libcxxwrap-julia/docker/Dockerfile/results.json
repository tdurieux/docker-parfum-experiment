{
  "startTime": 1674251753939,
  "endTime": 1674251754815,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 22,
        "columnEnd": 117
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 22,
        "columnEnd": 52
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 22,
        "columnEnd": 117
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 22,
        "columnEnd": 52
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM julia:latest\n\nRUN apt-get update && apt-get install --no-install-recommends -y build-essential libatomic1 python gfortran perl wget m4 cmake pkg-config git && rm -rf /var/lib/apt/lists/*;\n\nRUN set -eux; \\\n    git clone https://github.com/JuliaInterop/libcxxwrap-julia.git; \\\n    mkdir build; \\\n    cd build; \\\n    cmake -DCMAKE_BUILD_TYPE:STRING=Debug -DCMAKE_INSTALL_PREFIX=/usr/local -DAPPEND_OVERRIDES_TOML=ON ../libcxxwrap-julia/; \\\n    cmake --build . --config Debug --target install; \\\n    sed -i 's!libcxxwrap_julia = .*!libcxxwrap_julia = \"/usr/local\"!g' ~/.julia/artifacts/Overrides.toml; \\\n    julia -e 'using Pkg; pkg\"add CxxWrap\"; pkg\"add BinaryBuilder\"; pkg\"precompile\"'; \\\n    julia -e 'using Pkg; Pkg.test(\"CxxWrap\")'; \\\n    julia -e 'using CxxWrap; println(CxxWrap.prefix_path())'; \\\n    rm -rf libcxxwrap-julia build\n\nRUN apt-get update && apt-get install --no-install-recommends -y ninja-build && rm -rf /var/lib/apt/lists/*;\n\nRUN git clone https://github.com/barche/libfoo.git; \\\n    julia --color=yes libfoo/build_tarballs.jl --debug --verbose x86_64-linux-gnu; \\\n    rm -rf libfoo build products; \\\n    exit 0\n\nRUN julia -e 'using BinaryBuilder, Pkg.Artifacts; \\\n              toml = joinpath(dirname(dirname(pathof(BinaryBuilder))), \"Artifacts.toml\"); \\\n              ensure_artifact_installed(\"GCCBootstrap-x86_64-linux-gnu.v4.8.5.x86_64-linux-musl.unpacked\", toml; platform=Linux(:x86_64, libc=:musl)); \\\n              ensure_artifact_installed(\"GCCBootstrap-x86_64-linux-musl.v4.8.5.x86_64-linux-musl.unpacked\", toml; platform=Linux(:x86_64, libc=:musl))'\n\nCMD [\"julia\"]\n"
}