{
  "startTime": 1674255787001,
  "endTime": 1674255787771,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 6,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 31,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 59,
        "lineEnd": 72,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 85,
        "lineEnd": 93,
        "columnStart": 4,
        "columnEnd": 13
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.10\nLABEL maintainer.email=\"b.dukai@tudelft.nl\" maintainer.name=\"Bal√°zs Dukai\"\n\nENV CXX=\"g++ -std=c++98\"\n\n# Install geos\nRUN apk --update --no-cache add --virtual .geos-deps \\\n        which \\\n        make \\\n        gcc \\\n        g++ \\\n        file \\\n        git \\\n        autoconf \\\n        automake \\\n        libtool && \\\n    cd /tmp && \\\n    git clone https://git.osgeo.org/gitea/geos/geos.git geos && \\\n    cd geos && \\\n    git checkout 3.7.1 && \\\n    ./autogen.sh && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n    make && \\\n    make check && \\\n    make install && \\\n    cd / && \\\n    apk del .geos-deps && \\\n    rm -rf /tmp/* && \\\n    rm -rf /user/local/man\n\n# install CGAL\nRUN apk --update --no-cache add --virtual .cgal-deps \\\n        which \\\n        make \\\n        cmake \\\n        gcc \\\n        g++ \\\n        eigen-dev \\\n        boost-dev \\\n        gmp-dev \\\n        mpfr-dev \\\n        zlib-dev && \\\n    cd /tmp && \\\n    wget https://github.com/CGAL/cgal/releases/download/releases%2FCGAL-5.0.2/CGAL-5.0.2.tar.xz && \\\n    tar xf CGAL-5.0.2.tar.xz && \\\n    rm -f CGAL-5.0.2.tar.xz && \\\n    cd CGAL-5.0.2 && \\\n    mkdir build && \\\n    cd build && \\\n    cmake -DCMAKE_BUILD_TYPE=Release -DWITH_Eigen3=ON .. && \\\n    make && \\\n    make install && \\\n    cd / && \\\n    apk del .cgal-deps && \\\n    rm -rf /tmp/* && \\\n    rm -rf /user/local/man\n\n# install val3dity\nCOPY . /tmp\nRUN apk --update --no-cache add --virtual .val3dity-deps \\\n        make \\\n        cmake \\\n        gcc \\\n        g++ \\\n        boost-dev \\\n        eigen-dev \\\n        gmp-dev \\\n        mpfr-dev \\\n        python3 \\\n        pytest \\\n        py-yaml \\\n        py-lxml \\\n        py3-setuptools && \\\n    cd /tmp && \\\n    mkdir build && \\\n    cd build && \\\n    cmake .. && \\\n    make && \\\n    make install && \\\n    cd .. && \\\n    ls -ls . && \\\n    val3dity data/cityjson/cube.json && \\\n    python3 -m pytest --runfull && \\\n    apk del .val3dity-deps && \\\n    cd / && \\\n    apk --update --no-cache add \\\n        make \\\n        gcc \\\n        g++ \\\n        boost \\\n        eigen \\\n        gmp \\\n        bash \\\n        mpfr3 && \\\n    rm -rf /tmp/* && \\\n    rm -rf /user/local/man\n\nRUN mkdir /data && \\\n    chown 1001 /data && \\\n    chgrp 0 /data && \\\n    chmod g=u /data && \\\n    chgrp 0 /etc/passwd && \\\n    chmod g=u /etc/passwd\n\nRUN val3dity --version\n\nCOPY --chown=1001:0 uid_entrypoint.sh /usr/local/bin/\n\nUSER 1001\n\nWORKDIR /data\n\nENTRYPOINT [\"/usr/local/bin/uid_entrypoint.sh\"]\n\nCMD [\"--version\"]\n"
}