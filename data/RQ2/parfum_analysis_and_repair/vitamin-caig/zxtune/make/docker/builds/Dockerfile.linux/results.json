{
  "startTime": 1674254409232,
  "endTime": 1674254410994,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 30,
        "lineEnd": 40,
        "columnStart": 5,
        "columnEnd": 16
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:buster-slim\nARG cores=12\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends ca-certificates wget xz-utils bzip2 git make zip nano less sudo \\\n      g++ gcc python3-minimal \\\n      libpulse-dev libclalsadrv-dev zlib1g-dev \\\n      libfontconfig1-dev libfreetype6-dev libx11-dev libx11-xcb-dev libxext-dev libxfixes-dev libxi-dev libgl-dev \\\n      libxrender-dev libxcb1-dev libxcb-glx0-dev libxcb-keysyms1-dev libxcb-image0-dev libxcb-shm0-dev libxcb-util0-dev \\\n      libxcb-icccm4-dev libxcb-sync0-dev libxcb-xfixes0-dev libxcb-shape0-dev libxcb-randr0-dev libxcb-render-util0-dev \\\n      libxcb-xinerama0-dev libxkbcommon-dev libxkbcommon-x11-dev && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    useradd -m -s /bin/bash -U -G users,sudo -d /build build && \\\n    echo '%sudo ALL = (root) NOPASSWD: ALL' >> /etc/sudoers\n\nUSER build\nWORKDIR /build\n\nENV prebuilt=/build/prebuilt\n\nENV boost=1.77.0\nRUN bash -c \"wget -q https://boostorg.jfrog.io/artifactory/main/release/${boost}/source/boost_\\${boost//./_}.tar.bz2 -O - | tar -xj\" && \\\n    cd boost_* && ./bootstrap.sh && \\\n    ./b2 toolset=gcc link=static threading=multi target-os=linux variant=release --layout=system \\\n      --with-filesystem --with-locale --with-program_options --with-system -j${cores} \\\n      --includedir=${prebuilt}/boost-${boost}/include --libdir=${prebuilt}/boost-${boost}-linux-x86_64/lib install && \\\n    cd .. && rm -Rf boost_*\n\nENV qt=5.15.2\nRUN bash -c \"wget -q http://download.qt.io/archive/qt/${qt%.*}/${qt}/single/qt-everywhere-src-${qt}.tar.xz -O - | tar -xJ\" && \\\n    cd qt-everywhere* && \\\n     ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" -v -platform linux-g++-64 -prefix ${prebuilt}/qt-${qt}-linux-x86_64 -release -opensource -static -confirm-license -no-rpath \\\n      -no-opengl -no-openvg -no-sql-sqlite \\\n      -no-ico -no-gif -no-libjpeg -no-openssl -no-cups -no-pch -no-glib \\\n      -no-directfb -no-evdev -no-tslib -no-linuxfb -no-kms \\\n      -no-feature-testlib \\\n      -qt-pcre -system-zlib -system-libpng -fontconfig \\\n      -skip qt3d -skip qtactiveqt -skip qtandroidextras -skip qtcharts -skip qtconnectivity -skip qtdatavis3d -skip qtdeclarative -skip qtdoc -skip qtgamepad -skip qtgraphicaleffects -skip qtlocation \\\n      -skip qtlottie -skip qtmacextras -skip qtmultimedia -skip qtnetworkauth -skip qtpurchasing -skip qtquick3d -skip qtquickcontrols -skip qtquickcontrols2 -skip qtquicktimeline -skip qtremoteobjects \\\n      -skip qtscript -skip qtscxml -skip qtsensors -skip qtserialbus -skip qtserialport -skip qtspeech -skip qtsvg -skip qttranslations -skip qtvirtualkeyboard -skip qtwayland -skip qtwebchannel \\\n      -skip qtwebengine -skip qtwebglplugin -skip qtwebsockets -skip qtwebview -skip qtwinextras -skip qtxmlpatterns \\\n      -make libs && \\\n     make -j${cores} install && \\\n     cd .. && rm -Rf qt-everywhere*\n\nRUN mkdir -p /build/zxtune && cd /build/zxtune && \\\n    git init && \\\n    git remote add --tags origin https://bitbucket.org/zxtune/zxtune.git && \\\n    echo \"platform=linux\\narch=x86_64\\npackaging=any\\ntools.python=python3\\nsystem.zlib=1\\n\" \\\n         \"prebuilt.dir=${prebuilt}\\nboost.version=${boost}\\nqt.version=${qt}\\ncxx_flags=-fPIC\\n\" \\\n         \"qt.plugins=QXcbIntegrationPlugin\\n\" \\\n         \"libraries.qt.system.linux=qxcb qtpcre2 png16 qtharfbuzz fontconfig freetype xcb xcb-icccm xcb-image\" \\\n            \"xcb-keysyms xcb-randr xcb-render xcb-render-util xcb-shape xcb-shm xcb-sync xcb-xfixes xcb-xinerama xcb-xkb xkbcommon xkbcommon-x11\\n\" \\\n         \"libraries.qt.linux=XcbQpa XkbCommonSupport ThemeSupport DBus EdidSupport FontDatabaseSupport ServiceSupport\" > variables.mak\n\nWORKDIR /build/zxtune\nCOPY entrypoint.sh .\nENTRYPOINT [\"./entrypoint.sh\"]\nCMD [\"package\", \"-C\", \"apps/bundle\"]\n"
}