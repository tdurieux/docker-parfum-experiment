{
  "startTime": 1674250005709,
  "endTime": 1674250007054,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 96,
        "lineEnd": 97,
        "columnStart": 1,
        "columnEnd": 4
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 98,
        "lineEnd": 119,
        "columnStart": 1,
        "columnEnd": 9
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM lsiobase/nginx:3.11\n\n# set version label\n\nARG CERTBOT_VERSION=1.3.0\nARG SORMAS_URL=https://github.com/hzi-braunschweig/SORMAS-Project/releases/download/\n\nARG SORMAS_VERSION=1.73.0\n\nENV SORMAS_VERSION=$SORMAS_VERSION\nLABEL maintainer=\"aptalca\"\n\n# environment settings\nENV DHLEVEL=2048 ONLY_SUBDOMAINS=false AWS_CONFIG_FILE=/config/dns-conf/route53.ini\nENV S6_BEHAVIOUR_IF_STAGE2_FAILS=2\n\nRUN \\\n echo \"**** install build packages ****\" && \\\n apk add --no-cache --virtual=build-dependencies \\\n\tg++ \\\n\tgcc \\\n\tlibffi-dev \\\n\topenssl-dev \\\n\tpython3-dev && \\\n echo \"**** install runtime packages ****\" && \\\n apk add --no-cache --upgrade \\\n\tcurl \\\n\tfail2ban \\\n\tgnupg \\\n\tmemcached \\\n\tnginx \\\n\tnginx-mod-http-echo \\\n\tnginx-mod-http-fancyindex \\\n\tnginx-mod-http-geoip2 \\\n\tnginx-mod-http-headers-more \\\n\tnginx-mod-http-image-filter \\\n\tnginx-mod-http-lua \\\n\tnginx-mod-http-lua-upstream \\\n\tnginx-mod-http-nchan \\\n\tnginx-mod-http-perl \\\n\tnginx-mod-http-redis2 \\\n\tnginx-mod-http-set-misc \\\n\tnginx-mod-http-upload-progress \\\n\tnginx-mod-http-xslt-filter \\\n\tnginx-mod-mail \\\n\tnginx-mod-rtmp \\\n\tnginx-mod-stream \\\n\tnginx-mod-stream-geoip2 \\\n\tnginx-vim \\\n\tphp7-bcmath \\\n\tphp7-bz2 \\\n\tphp7-ctype \\\n\tphp7-curl \\\n\tphp7-dom \\\n\tphp7-exif \\\n\tphp7-ftp \\\n\tphp7-gd \\\n\tphp7-iconv \\\n\tphp7-imap \\\n\tphp7-intl \\\n\tphp7-ldap \\\n\tphp7-mcrypt \\\n\tphp7-memcached \\\n\tphp7-mysqli \\\n\tphp7-mysqlnd \\\n\tphp7-opcache \\\n\tphp7-pdo_mysql \\\n\tphp7-pdo_odbc \\\n\tphp7-pdo_pgsql \\\n\tphp7-pdo_sqlite \\\n\tphp7-pear \\\n\tphp7-pecl-apcu \\\n\tphp7-pecl-imagick \\\n\tphp7-pecl-redis \\\n\tphp7-pgsql \\\n\tphp7-phar \\\n\tphp7-posix \\\n\tphp7-soap \\\n\tphp7-sockets \\\n\tphp7-sodium \\\n\tphp7-sqlite3 \\\n\tphp7-tokenizer \\\n\tphp7-xml \\\n\tphp7-xmlreader \\\n\tphp7-xmlrpc \\\n\tphp7-zip \\\n\tpy3-cryptography \\\n\tpy3-future \\\n\tpy3-pip && \\\n echo \"**** install certbot plugins ****\" && \\\n if [ -z ${CERTBOT_VERSION+x} ]; then \\\n        CERTBOT=\"certbot\"; \\\n else \\\n        CERTBOT=\"certbot==${CERTBOT_VERSION}\"; \\\n fi && \\\n python -m pip install -U pip && \\\n pip3 install --no-cache-dir -U \\\n\tpip && \\\n pip3 install --no-cache-dir -U \\\n\t${CERTBOT} \\\n\tcertbot-dns-aliyun \\\n\tcertbot-dns-cloudflare \\\n\tcertbot-dns-cloudxns \\\n\tcertbot-dns-cpanel \\\n\tcertbot-dns-digitalocean \\\n\tcertbot-dns-dnsimple \\\n\tcertbot-dns-dnsmadeeasy \\\n\tcertbot-dns-domeneshop \\\n\tcertbot-dns-google \\\n\tcertbot-dns-inwx \\\n\tcertbot-dns-linode \\\n\tcertbot-dns-luadns \\\n\tcertbot-dns-nsone \\\n\tcertbot-dns-ovh \\\n\tcertbot-dns-rfc2136 \\\n\tcertbot-dns-route53 \\\n\tcertbot-dns-transip \\\n\tcertbot-plugin-gandi \\\n\tcryptography \\\n\trequests && \\\n echo \"**** remove unnecessary fail2ban filters ****\" && \\\n rm \\\n\t/etc/fail2ban/jail.d/alpine-ssh.conf && \\\n echo \"**** copy fail2ban default action and filter to /default ****\" && \\\n mkdir -p /defaults/fail2ban && mkdir -p /defaults/proxy-confs && \\\n mv /etc/fail2ban/action.d /defaults/fail2ban/ && \\\n mv /etc/fail2ban/filter.d /defaults/fail2ban/ && \\\n echo \"**** configure nginx ****\" && \\\n rm -f /etc/nginx/conf.d/default.conf && \\\n echo \"**** download sormas apk ****\" && \\\n mkdir -p /defaults/www/sormas/downloads && \\\n DEPLOY_PATH=$(mktemp -d) && \\\n cd ${DEPLOY_PATH} && \\\n wget ${SORMAS_URL}v${SORMAS_VERSION}/sormas_${SORMAS_VERSION}.zip -O sormas.zip && \\\n unzip sormas.zip deploy/android/* && \\\n mv deploy/android/* /defaults/www/sormas/downloads/ && \\\n cd - && \\\n rm -rf ${DEPLOY_PATH} && \\\n echo \"**** cleanup ****\" && \\\n apk del --purge \\\n\tbuild-dependencies && \\\n for cleanfiles in *.pyc *.pyo; \\\n\tdo \\\n\tfind /usr/lib/python3.*  -iname \"${cleanfiles}\" -exec rm -f '{}' + \\\n\t; done && \\\n rm -rf \\\n\t/tmp/* \\\n\t/root/.cache\n\n# add local files\nCOPY root/ /\n"
}