{
  "startTime": 1674250810661,
  "endTime": 1674250811584,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 114
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 96
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 44,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 56,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 12
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Stage 1: build the cross compiler.\nFROM ubuntu:20.04 AS bootstrap\n\nRUN \\\n    apt-get update && \\\n    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \\\n      build-essential \\\n      ca-certificates \\\n      cmake \\\n      curl \\\n      ninja-build \\\n      python3 \\\n      python3-distutils \\\n      tar \\\n      xz-utils && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /build\nRUN curl -f --location https://github.com/mingw-w64/mingw-w64/archive/a3f6d363d534e9d5563a0b7c677889101e6bbd42.tar.gz | tar xz && \\\n    mv mingw-w64-a3f6d363d534e9d5563a0b7c677889101e6bbd42 mingw-w64\nRUN curl -f --location https://github.com/llvm/llvm-project/archive/refs/tags/llvmorg-14.0.0.tar.gz | tar xz && \\\n    mv llvm-project-llvmorg-14.0.0 llvm-project\n\nENV TOOLCHAIN_ARCHS=\"armv7 aarch64\"\nARG CORES=\n\nCOPY llvm-mingw/build-llvm.sh ./\nRUN ./build-llvm.sh /opt/llvm-mingw\nCOPY llvm-mingw/install-wrappers.sh ./\nCOPY llvm-mingw/wrappers/* ./wrappers/\nRUN ./install-wrappers.sh /opt/llvm-mingw\nCOPY llvm-mingw/build-mingw-w64.sh ./\nRUN ./build-mingw-w64.sh /opt/llvm-mingw\nCOPY llvm-mingw/build-compiler-rt.sh ./\nRUN ./build-compiler-rt.sh /opt/llvm-mingw\nCOPY llvm-mingw/build-libcxx.sh ./\nRUN ./build-libcxx.sh /opt/llvm-mingw\nCOPY llvm-mingw/strip-llvm.sh ./\nRUN ./strip-llvm.sh /opt/llvm-mingw\n\n# Stage 2: create a minimal image for cross-compilation.\nFROM ubuntu:20.04\n\nRUN \\\n    apt-get update && \\\n    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \\\n      apt-transport-https \\\n      ca-certificates \\\n      curl \\\n      gnupg \\\n      software-properties-common && \\\n    curl -f 'https://deb.nodesource.com/gpgkey/nodesource.gpg.key' | apt-key add - && \\\n    apt-add-repository 'deb https://deb.nodesource.com/node_14.x focal main' && \\\n    sed -n -e 's/^deb /deb-src /p' /etc/apt/sources.list >/etc/apt/sources.list.d/quick-lint-js-sources.list && rm -rf /var/lib/apt/lists/*;\n\nRUN \\\n    apt-get update && \\\n    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \\\n      cmake \\\n      git \\\n      ninja-build \\\n      nodejs && rm -rf /var/lib/apt/lists/*;\n\nCOPY --from=bootstrap /opt/llvm-mingw /opt/llvm-mingw\nENV PATH=/opt/llvm-mingw/bin:$PATH\n"
}