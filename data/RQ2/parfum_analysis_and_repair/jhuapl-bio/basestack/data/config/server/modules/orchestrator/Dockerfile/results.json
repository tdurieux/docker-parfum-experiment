{
  "startTime": 1674217917766,
  "endTime": 1674217918676,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 7,
        "columnEnd": 113
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 124
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 23
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM  docker:20.10.14-dind\nWORKDIR /opt\n#Install gcc for pip installation processes\nRUN apk add --no-cache --virtual .build-deps gcc musl-dev curl bash  linux-headers\n# Install python/pip\n\nRUN apk add --no-cache \\\n    python3 python3-dev libxml2-dev  docker-compose git bash nodejs g++ \\\n    npm libc-dev go linux-headers libressl-dev libuuid libseccomp-dev make\n    # util-linux-dev glib-dev\n\nRUN ln -sf python3 /usr/bin/python\n\n\n\nRUN python3 -m ensurepip\n\n\nRUN pip3 install --no-cache-dir --no-cache --upgrade pip\nRUN pip3 install --no-cache-dir --upgrade  setuptools==57.4.0 cython wheel\nRUN pip3 install --no-cache-dir snakemake\nENV PATH=\"/usr/local/singularity/bin:${PATH}\"\n\n# RUN curl https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -o /opt/miniconda.sh \\\n#     bash /opt/miniconda.sh -b -p /opt/miniconda3 && \\\n#     rm /opt/miniconda.sh\nRUN apk add --no-cache openjdk11\nRUN mkdir -p ~/bin \\\n    && curl -f -L -o /usr/local/dockstore https://github.com/dockstore/dockstore/releases/download/1.11.5/dockstore \\\n    && chmod +x /usr/local/dockstore\nENV PATH=\"/usr/local:${PATH}\"\nENV DOCKSTORE_ROOT=1\nRUN mkdir -p ~/.dockstore \\\n    && printf \"token: dummy-token\\nserver-url: https://dockstore.org/api\\nDOCKSTORE_ROOT=1\\n\" | tee ~/.dockstore/config\nRUN curl -f -o requirements.txt \"https://dockstore.org/api/metadata/runner_dependencies?client_version=1.11.5&python_version=3\"\nRUN apk add --no-cache libxslt-dev && cat requirements.txt\n\n\n# RUN  pip install -r requirements.txt && cwltool --version\n\n\nRUN curl -f -s https://get.nextflow.io | bash\nRUN pip install --no-cache-dir nf-core\nRUN mv nextflow /usr/local/bin/\nRUN dockstore --version\nRUN apk add --no-cache parallel ncurses && \\\n    mkdir -p ~/.parallel && touch ~/.parallel/will-cite\nRUN echo \"done\"\n#Install snakemake and docker-compose\n#Remove unneeded files\n\n# ARG SINGULARITY_COMMITISH=\"master\"\n# RUN git clone --recurse-submodules https://github.com/sylabs/singularity.git \\\n#     && cd singularity && apk add --no-cache  glib-dev \\\n#     && git checkout \"$SINGULARITY_COMMITISH\" \\\n#     && ./mconfig -p /usr/local/singularity \\\n#     && cd builddir\n#     && make \\\n#     && make install\n\n\nARG SINGULARITY_COMMITISH=\"master\"\nARG VERSION=\"3.9.9\"\nRUN wget https://github.com/sylabs/singularity/releases/download/v$VERSION/singularity-ce-$VERSION.tar.gz && \\\n    tar -xzf singularity-ce-$VERSION.tar.gz && rm singularity-ce-$VERSION.tar.gz\n\nWORKDIR /opt/singularity-ce-3.9.9\n\nRUN ls && ./mconfig && \\\n    make -C builddir && \\\n    make -C builddir install\n\n\nRUN mkdir -p /data/\nWORKDIR /opt/app"
}