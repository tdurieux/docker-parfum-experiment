{
  "startTime": 1674220494857,
  "endTime": 1674220496924,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 23,
        "lineEnd": 30,
        "columnStart": 22,
        "columnEnd": 13
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 22,
        "columnEnd": 92
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 23,
        "lineEnd": 30,
        "columnStart": 22,
        "columnEnd": 13
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:20.04\nLABEL maintainer=\"Michael Macnair\"\n\nRUN echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections\n\n# We want manpages in the container - the base image excludes them\nRUN rm /etc/dpkg/dpkg.cfg.d/excludes\n\n# llvm-11\nRUN apt-get update && apt-get install -y --no-install-recommends wget ca-certificates gnupg2 && rm -rf /var/lib/apt/lists && rm -rf /var/lib/apt/lists/*;\nRUN echo deb http://apt.llvm.org/focal/ llvm-toolchain-focal-11 main >> /etc/apt/sources.list\nRUN wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add -\n\n# Packages\n##############\n# by line:\n#   build and afl\n#   llvm-11 (for afl-clang-lto)\n#   date challenge\n#   libxml2 challenge\n#   server/entrypoint\n#   user tools\n#   debugging tools\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    git build-essential curl libssl-dev sudo libtool libtool-bin libglib2.0-dev bison flex automake python3 python3-dev python3-setuptools python-is-python3 libpixman-1-dev gcc-9-plugin-dev cgroup-tools \\\n    clang-11 clang-tools-11 libc++1-11 libc++-11-dev libc++abi1-11 libc++abi-11-dev libclang1-11 libclang-11-dev libclang-common-11-dev libclang-cpp11 libclang-cpp11-dev liblld-11 liblld-11-dev liblldb-11 liblldb-11-dev libllvm11 libomp-11-dev libomp5-11 lld-11 lldb-11 python3-lldb-11 llvm-11 llvm-11-dev llvm-11-runtime llvm-11-tools \\\n    rsync autopoint bison gperf autoconf texinfo gettext \\\n    libtool pkg-config libz-dev python2.7-dev \\\n    awscli openssh-server ncat \\\n    emacs vim nano screen htop man manpages-posix-dev wget httpie bash-completion ripgrep \\\n    gdb byobu \\\n    && rm -rf /var/lib/apt/lists && rm -rf /var/lib/apt/lists/*;\n\nRUN echo y | unminimize\n\n# Users & SSH\n##############\nRUN useradd --create-home --shell /bin/bash fuzzer\n# See the README - the password is set by the entry script\n\n# passwordless sudo access for ASAN and installing extra tools:\nRUN echo \"fuzzer ALL=(ALL) NOPASSWD:ALL\" >> /etc/sudoers\n# RUN usermod -aG sudo fuzzer\n\nRUN mkdir /var/run/sshd\n\n# AFL\n###########\nRUN update-alternatives --install /usr/bin/clang clang $(which clang-11) 1 && \\\n    update-alternatives --install /usr/bin/clang++ clang++ $(which clang++-11) 1 && \\\n    update-alternatives --install /usr/bin/llvm-config llvm-config $(which llvm-config-11) 1 && \\\n    update-alternatives --install /usr/bin/llvm-symbolizer llvm-symbolizer $(which llvm-symbolizer-11) 1 && \\\n    update-alternatives --install /usr/bin/llvm-cov llvm-cov $(which llvm-cov-11) 1 && \\\n    update-alternatives --install /usr/bin/llvm-profdata llvm-profdata $(which llvm-profdata-11) 1\n\n# (environment variables won't be visible in the SSH session unless added to /etc/profile or similar)\nENV AFLVERSION=3.0c\nUSER fuzzer\nWORKDIR /home/fuzzer\nRUN git clone https://github.com/AFLplusplus/AFLplusplus\nWORKDIR /home/fuzzer/AFLplusplus\nRUN git checkout $AFLVERSION\nRUN make distrib\nRUN sudo make install\n\n# You could install gnuplot-nox, but it increases the image size a lot (~100 extra packages).\n# Students can install it themselves if they want it.\n\n# Exercises\n##############\nUSER fuzzer\nWORKDIR /home/fuzzer\nRUN git clone https://github.com/mykter/afl-training.git workshop\n# Use this if building using a local copy of the training materials\n# ADD . ./local-workshop\n# USER root\n# RUN chown -R fuzzer:fuzzer local-workshop\n\nWORKDIR /home/fuzzer/workshop\nRUN http https://www.eecis.udel.edu/~ntp/ntp_spool/ntp4/ntp-4.2/ntp-4.2.2.tar.gz | tar xz -C challenges/ntpq\nRUN http https://www.eecis.udel.edu/~ntp/ntp_spool/ntp4/ntp-4.2/ntp-4.2.8p10.tar.gz | tar xz -C challenges/ntpq\nRUN git submodule init && git submodule update\n\n# By default run an SSH daemon. To run locally instead, use something like this:\n#    docker run -it --user fuzzer afl-training:latest /bin/bash\n##############\nUSER root\n\nCOPY entrypoint.sh /usr/local/bin/entrypoint.sh\n\nEXPOSE 22\nCMD [\"entrypoint.sh\"]\n# on some systems you might want to run AFLplusplus/afl-system-config; only works if the container is run in privileged mode and you don't care about security of the host\n"
}