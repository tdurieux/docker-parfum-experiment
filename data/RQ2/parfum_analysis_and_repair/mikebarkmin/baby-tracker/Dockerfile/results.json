{
  "startTime": 1674248644101,
  "endTime": 1674248644817,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 32
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:12 as client\nWORKDIR /usr/src/app\nENV PATH /usr/src/app/node_modules/.bin:$PATH\nENV REACT_APP_SERVER /\nCOPY client/package.json /usr/src/app/package.json\nRUN npm install --silent && npm cache clean --force;\nRUN npm install react-scripts@3.0.1 -g --silent && npm cache clean --force;\nCOPY client /usr/src/app\nRUN npm run build\n\nFROM node:12 as server\nWORKDIR /usr/src/app\nENV PATH /usr/src/app/node_modules/.bin:$PATH\nENV NODE_ENV production\nCOPY server/package.json /usr/src/app/package.json\nRUN npm install --silent && npm cache clean --force;\nRUN npm install --only=dev && npm cache clean --force;\nCOPY server /usr/src/app\nRUN npm run build\n\n\nFROM node:12\n\n# Create app directory\nWORKDIR /usr/src/app\n\n# Install app dependencies\n# A wildcard is used to ensure both package.json AND package-lock.json are copied\n# where available (npm@5+)\nCOPY server/package*.json ./\n\nRUN yarn install && yarn cache clean;\n# If you are building your code for production\n# RUN npm ci --only=production\n\n# Bundle app source\nCOPY --from=server /usr/src/app/build /usr/src/app\nRUN mkdir -p /usr/src/app/client && rm -rf /usr/src/app/client\nCOPY --from=client /usr/src/app/build /usr/src/app/client\n\nEXPOSE 8080\n\nCMD [ \"node\", \"server.js\" ]\n"
}