{
  "startTime": 1674246819061,
  "endTime": 1674246820379,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 9
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 9
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 7,
        "columnEnd": 36
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# See : https://github.com/puppeteer/puppeteer/blob/main/docs/troubleshooting.md#running-puppeteer-in-docker\nFROM node:14-slim\n\n# Uncomment if you need to configure proxy.\n# You can init these variables by using --build-args during docker build\n# Example : docker build [...] --build-args http_proxy=http://<user>:<password>@<host>:<port>\n#ENV HTTP_PROXY=$http_proxy\n#ENV HTTPS_PROXY=$https_proxy\n#ENV NO_PROXY=$no_proxy\n\nRUN apt-get update \\\n    && apt-get install --no-install-recommends -y wget gnupg \\\n    && wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - \\\n    && sh -c 'echo \"deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main\" >> /etc/apt/sources.list.d/google.list' \\\n    && apt-get update \\\n    && apt-get install -y google-chrome-stable fonts-ipafont-gothic fonts-wqy-zenhei fonts-thai-tlwg fonts-kacst fonts-freefont-ttf libxss1 \\\n      --no-install-recommends \\\n    && rm -rf /var/lib/apt/lists/*\nWORKDIR /app\nCOPY . .\n\n# Uncomment if you need to configure proxy.\n#RUN npm config set proxy $HTTP_PROXY\n\nRUN npm i \\\n    && npm link \\\n    && groupadd -r pptruser && useradd -r -g pptruser -G audio,video pptruser \\\n    && mkdir -p /home/pptruser/Downloads \\\n    && chown -R pptruser:pptruser /home/pptruser \\\n    && chown -R pptruser:pptruser /app/ && npm cache clean --force;\n\nUSER pptruser\n\n# To avoid \"Error: ENOENT: no such file or directory, open '/app/dist/bundle.js'\"\nRUN npm i && npm cache clean --force;\n\nENV URL_PATH=\"/app/input/url.yaml\"\nENV RESULTS_PATH=\"/app/output/results.xlsx\"\nCMD greenit analyse $URL_PATH $RESULTS_PATH\n"
}