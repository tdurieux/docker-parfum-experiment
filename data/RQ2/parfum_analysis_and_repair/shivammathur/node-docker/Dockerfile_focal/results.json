{
  "startTime": 1674254383557,
  "endTime": 1674254384884,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 5,
        "columnEnd": 100
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 5,
        "columnEnd": 120
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 99,
        "lineEnd": 99,
        "columnStart": 9,
        "columnEnd": 118
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 101,
        "lineEnd": 101,
        "columnStart": 9,
        "columnEnd": 72
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 102,
        "lineEnd": 102,
        "columnStart": 9,
        "columnEnd": 120
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:focal\nARG type\nENV CONTAINER shivammathur/node\nENV DEBIAN_FRONTEND=noninteractive\nENV NODE_VERSION 16.16.0\nENV NODE_VERSION_x86 16.16.0\nENV YARN_VERSION 1.22.19\nENV RUNNER_TOOL_PATH \"/opt/hostedtoolcache\"\nENV RUNNER_TOOL_CACHE \"/opt/hostedtoolcache\"\nENV GITHUB_ENV \"/tmp/set_env\"\nENV GITHUB_PATH \"/tmp/add_path\"\nENV runner \"self-hosted\"\n\nRUN ARCH= && MULTILIB= && PREFIX='www' && URLPATH='dist' && dpkgArch=\"$(dpkg --print-architecture)\" \\\n  && case \"${dpkgArch##*-}\" in \\\n    amd64) ARCH='x64';; \\\n    ppc64el) ARCH='ppc64le';; \\\n    s390x) ARCH='s390x';; \\\n    arm64) ARCH='arm64';; \\\n    armhf) ARCH='armv7l';; \\\n    i386) ARCH='x86'; MULTILIB='gcc-multilib'; PREFIX='unofficial-builds'; URLPATH='download/release'; NODE_VERSION=$NODE_VERSION_x86;; \\\n    *) echo \"unsupported architecture\"; exit 1 ;; \\\n  esac \\\n  && set -ex \\\n  && echo \"\" | tee \"$GITHUB_ENV\" \"$GITHUB_PATH\" \\\n  && mkdir -p \"$RUNNER_TOOL_CACHE\" \\\n  # libatomic1 for arm\n  && apt-get update && apt-get install -y ca-certificates curl wget gnupg dirmngr xz-utils libatomic1 $MULTILIB --no-install-recommends \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && curl -fsSLO --compressed \"https://$PREFIX.nodejs.org/$URLPATH/v$NODE_VERSION/node-v$NODE_VERSION-linux-$ARCH.tar.xz\" \\\n  && tar -xJf \"node-v$NODE_VERSION-linux-$ARCH.tar.xz\" -C /usr/local --strip-components=1 --no-same-owner \\\n  && rm \"node-v$NODE_VERSION-linux-$ARCH.tar.xz\" \\\n  && curl -f -o /usr/local/bin/spc -sL https://github.com/shivammathur/spc/releases/latest/download/spc \\\n  && curl -f -o /usr/local/bin/systemctl -sL https://raw.githubusercontent.com/shivammathur/node-docker/main/systemctl-shim \\\n  && chmod a+x /usr/local/bin/spc /usr/local/bin/systemctl \\\n  && apt-mark auto '.*' > /dev/null \\\n  && apt-mark manual curl libatomic1 $MULTILIB \\\n  && find /usr/local -type f -executable -exec ldd '{}' ';' \\\n    | awk '/=>/ { print $(NF-1) }' \\\n    | sort -u \\\n    | xargs -r dpkg-query --search \\\n    | cut -d: -f1 \\\n    | sort -u \\\n    | xargs -r apt-mark manual \\\n  && apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false \\\n  && ln -s /usr/local/bin/node /usr/local/bin/nodejs \\\n  # smoke tests\n  && node --version \\\n  && npm --version \\\n  && spc -V\n\nRUN set -ex \\\n  && savedAptMark=\"$(apt-mark showmanual)\" \\\n  && apt-get update && apt-get install -y ca-certificates curl wget gnupg dirmngr make sudo --no-install-recommends \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && curl -fsSLO --compressed \"https://github.com/yarnpkg/yarn/releases/download/v$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz\" \\\n  && mkdir -p /opt /opt/hostedtoolcache \\\n  && chmod -R 777 /opt/hostedtoolcache \\\n  && tar -xzf yarn-v$YARN_VERSION.tar.gz -C /opt/ \\\n  && ln -s /opt/yarn-v$YARN_VERSION/bin/yarn /usr/local/bin/yarn \\\n  && ln -s /opt/yarn-v$YARN_VERSION/bin/yarnpkg /usr/local/bin/yarnpkg \\\n  && rm yarn-v$YARN_VERSION.tar.gz \\\n  && apt-mark auto '.*' > /dev/null \\\n  && apt-mark manual ca-certificates sudo make \\\n  && { [ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark > /dev/null; } \\\n  && find /usr/local -type f -executable -exec ldd '{}' ';' \\\n    | awk '/=>/ { print $(NF-1) }' \\\n    | sort -u \\\n    | xargs -r dpkg-query --search \\\n    | cut -d: -f1 \\\n    | sort -u \\\n    | xargs -r apt-mark manual \\\n  && apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false \\\n  # smoke test\n  && yarn --version\n\nRUN if [ \"$type\" = \"full\" ]; then \\\n set -ex \\\n      && savedAptMark=\"$(apt-mark showmanual)\" \\\n      && apt-mark auto '.*' > /dev/null \\\n      && apt-get update && apt-get install -y --no-install-recommends curl gnupg jq lsb-release mysql-server postgresql software-properties-common unzip \\\n      && usermod -d /var/lib/mysql/ mysql \\\n      && add-apt-repository ppa:git-core/ppa -y \\\n      && LC_ALL=C.UTF-8 add-apt-repository ppa:ondrej/php \\\n      && LC_ALL=C.UTF-8 add-apt-repository ppa:ondrej/apache2 \\\n      && apt-get remove software-properties-common -y \\\n      && apt-get update \\\n      && cp -r /etc/apt/sources.list.d /etc/apt/sources.list.d.save \\\n      && for v in 5.6 7.0 7.1 7.2 7.3 7.4 8.0 8.1; do \\\n           apt-get install -y --no-install-recommends php\"$v\" \\\n           php\"$v\"-dev \\\n           php\"$v\"-curl \\\n           php\"$v\"-mbstring \\\n           php\"$v\"-xml \\\n           php\"$v\"-intl \\\n           php\"$v\"-mysql \\\n           php\"$v\"-pgsql \\\n           php\"$v\"-xdebug \\\n           php\"$v\"-zip; \\\n         done \\\n      && curl -f -o /usr/bin/systemctl -sL https://raw.githubusercontent.com/shivammathur/node-docker/main/systemctl-shim \\\n      && chmod a+x /usr/bin/systemctl \\\n      && curl -f -o /usr/lib/ssl/cert.pem -sL https://curl.se/ca/cacert.pem \\\n      && curl -f -o /tmp/pear.phar -sL https://raw.githubusercontent.com/pear/pearweb_phars/master/install-pear-nozlib.phar \\\n      && php /tmp/pear.phar && sudo rm -f /tmp/pear.phar \\\n      && apt-get install -y --no-install-recommends autoconf automake gcc g++ git \\\n      && rm -rf /var/lib/apt/lists/* \\\n      && { [ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark > /dev/null; } \\\n      && find /usr/local -type f -executable -exec ldd '{}' ';' \\\n        | awk '/=>/ { print $(NF-1) }' \\\n        | sort -u \\\n        | xargs -r dpkg-query --search \\\n        | cut -d: -f1 \\\n        | sort -u \\\n        | xargs -r apt-mark manual \\\n      && apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false \\\n      # smoke test\n      && gcc --version \\\n      && g++ --version \\\n      && git --version \\\n      && php5.6 -v \\\n      && php7.0 -v \\\n      && php7.1 -v \\\n      && php7.2 -v \\\n      && php7.3 -v \\\n      && php7.4 -v \\\n      && php8.0 -v \\\n      && php8.1 -v \\\n      && php -v; \\\n    fi\n\nCMD [ \"/bin/bash\" ]"
}