{
  "startTime": 1674252229291,
  "endTime": 1674252230784,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 11,
        "columnStart": 49,
        "columnEnd": 11
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG BASE_IMAGE=ubuntu:jammy\nFROM $BASE_IMAGE as armbian_builder\nARG CUSTOM_PACKAGES='g++-11-arm-linux-gnueabihf libssl3'\nENV CUSTOM_PACKAGES $CUSTOM_PACKAGES\nARG DEBIAN_FRONTEND=noninteractive\nRUN apt-get update && apt-get -y dist-upgrade && apt-get -y --no-install-recommends install \\\n       joe \\\n       software-properties-common \\\n       gnupg \\\n       gnupg1 \\\n       gpgv1 \\\n       curl \\\n    && rm -rf /var/lib/apt/lists/*\nRUN sh -c \" \\\n    if [ $(dpkg --print-architecture) = amd64 ]; then \\\n        apt-get update \\\n        && apt-get install -y --no-install-recommends \\\n        lib32ncurses6 \\\n        lib32stdc++6 \\\n        lib32tinfo6 \\\n        libc6-i386; \\\n    fi\"\nRUN apt-get update \\\n    && apt-get -y dist-upgrade \\\n    && apt-get install -y --no-install-recommends \\\n       $CUSTOM_PACKAGES \\\n       acl \\\n       aptly \\\n       aria2 \\\n       bc \\\n       binfmt-support \\\n       binutils \\\n       bison \\\n       btrfs-progs \\\n       build-essential \\\n       busybox \\\n       ca-certificates \\\n       ccache \\\n       cpio \\\n       cryptsetup \\\n       cryptsetup-bin \\\n       debian-archive-keyring \\\n       debian-keyring \\\n       debootstrap \\\n       device-tree-compiler \\\n       dialog \\\n       distcc \\\n       dosfstools \\\n       dwarves \\\n       f2fs-tools \\\n       fakeroot \\\n       flex \\\n       gawk \\\n       gcc-aarch64-linux-gnu \\\n       gcc-arm-linux-gnueabihf \\\n       gcc-arm-linux-gnueabi \\\n       gcc-arm-none-eabi \\\n       gdisk \\\n       git \\\n       imagemagick \\\n       jq \\\n       kmod \\\n       libbison-dev \\\n       libc6-amd64-cross \\\n       libc6-dev-armhf-cross \\\n       libfdt-dev \\\n       libelf-dev \\\n       libfile-fcntllock-perl \\\n       libfl-dev \\\n       liblz4-tool \\\n       libncurses5-dev \\\n       libpython2.7-dev \\\n       libpython3-dev \\\n       libssl-dev \\\n       libusb-1.0-0-dev \\\n       linux-base \\\n       libmpc-dev \\\n       locales \\\n       lsb-release \\\n       lzop \\\n       ncurses-base \\\n       ncurses-term \\\n       nfs-kernel-server \\\n       ntpdate \\\n       openssh-client \\\n       p7zip-full \\\n       parted \\\n       parallel \\\n       patchutils \\\n       pigz \\\n       pixz \\\n       pkg-config \\\n       psmisc \\\n       pv \\\n       python2 \\\n       python3 \\\n       python3-dev \\\n       python3-distutils \\\n       python3-pkg-resources \\\n       python3-setuptools \\\n       qemu-utils \\\n       qemu-user-static \\\n       rsync \\\n       swig \\\n       sudo \\\n       tzdata \\\n       u-boot-tools \\\n       udev \\\n       unzip \\\n       uuid \\\n       uuid-dev \\\n       uuid-runtime \\\n       wget \\\n       whiptail \\\n       xfsprogs \\\n       xxd \\\n       zip \\\n       zlib1g-dev \\\n    && rm -rf /var/lib/apt/lists/*\nRUN locale-gen en_US.UTF-8\n\n# Static port for NFSv3 server used for USB FEL boot\nRUN sed -i 's/\\(^STATDOPTS=\\).*/\\1\"--port 32765 --outgoing-port 32766\"/' /etc/default/nfs-common \\\n    && sed -i 's/\\(^RPCMOUNTDOPTS=\\).*/\\1\"--port 32767\"/' /etc/default/nfs-kernel-server\n\nENV LANG='en_US.UTF-8' LANGUAGE='en_US:en' LC_ALL='en_US.UTF-8' TERM=screen\nWORKDIR /root/armbian\nLABEL org.opencontainers.image.source=\"https://github.com/armbian/build/blob/master/config/templates/Dockerfile\" \\\n    org.opencontainers.image.url=\"https://github.com/armbian/build/pkgs/container/build\"  \\\n    org.opencontainers.image.vendor=\"armbian\" \\\n    org.opencontainers.image.title=\"Armbian build framework\" \\\n    org.opencontainers.image.description=\"Custom Linux build framework\" \\\n    org.opencontainers.image.documentation=\"https://docs.armbian.com\" \\\n    org.opencontainers.image.authors=\"Igor Pecovnik\" \\\n    org.opencontainers.image.licenses=\"GPL-2.0\"\nENTRYPOINT [ \"/bin/bash\", \"/root/armbian/compile.sh\" ]\n"
}