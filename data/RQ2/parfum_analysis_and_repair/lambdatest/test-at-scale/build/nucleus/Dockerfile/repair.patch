diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/lambdatest/test-at-scale/build/nucleus/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/lambdatest/test-at-scale/build/nucleus/Dockerfile/repaired.Dockerfile
index 809ba1d..44c98c0 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/lambdatest/test-at-scale/build/nucleus/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/lambdatest/test-at-scale/build/nucleus/Dockerfile/repaired.Dockerfile
@@ -18,9 +18,9 @@ ARG VERSION
 ENV VERSION=$VERSION
 
 # Installing chromium so that all linux libs get automatically installed for running puppeteer tests
-RUN apt update && apt install -y git zstd chromium curl unzip zip xmlstarlet build-essential
-RUN curl -LJO https://go.dev/dl/go1.18.3.linux-amd64.tar.gz
-RUN tar -C /usr/local -xzf go1.18.3.linux-amd64.tar.gz
+RUN apt update && apt install --no-install-recommends -y git zstd chromium curl unzip zip xmlstarlet build-essential && rm -rf /var/lib/apt/lists/*;
+RUN curl -f -LJO https://go.dev/dl/go1.18.3.linux-amd64.tar.gz
+RUN tar -C /usr/local -xzf go1.18.3.linux-amd64.tar.gz && rm go1.18.3.linux-amd64.tar.gz
 
 COPY bundle /usr/local/bin/bundle
 RUN chmod +x /usr/local/bin/bundle
@@ -32,14 +32,14 @@ RUN mkdir /tmp/custom-runners
 
 WORKDIR /tmp/custom-runners
 RUN npm init -y
-RUN npm install -g pnpm
+RUN npm install -g pnpm && npm cache clean --force;
 RUN npm i --global-style --legacy-peer-deps \
     @lambdatest/test-at-scale-jasmine-runner@~0.3.0 \
     @lambdatest/test-at-scale-mocha-runner@~0.3.0 \
-    @lambdatest/test-at-scale-jest-runner@~0.3.0
-RUN npm i -g nyc@^15.1.0
+    @lambdatest/test-at-scale-jest-runner@~0.3.0 && npm cache clean --force;
+RUN npm i -g nyc@^15.1.0 && npm cache clean --force;
 
-RUN tar -zcf /custom-runners/custom-runners.tgz node_modules
+RUN tar -zcf /custom-runners/custom-runners.tgz node_modules && rm /custom-runners/custom-runners.tgz
 RUN rm -rf /tmp/custom-runners
 RUN mkdir /home/nucleus
 RUN mkdir /home/nucleus/.nvm
@@ -54,7 +54,7 @@ COPY ./build/nucleus/golang/server /home/nucleus
 RUN chmod 744 /home/nucleus/server
 
 # install nvm for nucleus user
-RUN curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | /bin/bash
+RUN curl -f -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | /bin/bash
 
 WORKDIR /home/nucleus
 # copy the binary from builder
@@ -64,7 +64,7 @@ COPY ./build/nucleus/entrypoint.sh /
 
 RUN apt update -y && apt upgrade -y
 
-RUN  curl -s https://get.sdkman.io | bash
+RUN curl -f -s https://get.sdkman.io | bash
 RUN /bin/bash -c "source $HOME/.sdkman/bin/sdkman-init.sh;sdk install java 18.0.1-oracle"
 
 ENV JAVA_HOME="/root/.sdkman/candidates/java/current"
@@ -98,6 +98,6 @@ RUN mkdir -p /home/nucleus/.m2
 RUN xmlstarlet ed -O --inplace -N a='http://maven.apache.org/SETTINGS/1.0.0' -s /a:settings --type elem --name "localRepository" -v /home/nucleus/.m2/repository /usr/share/maven/conf/settings.xml
 
 COPY ./build/nucleus/java/test-at-scale-java.jar /
-RUN curl -o /home/nucleus/junit-platform-console-standalone-1.8.2.jar https://repo1.maven.org/maven2/org/junit/platform/junit-platform-console-standalone/1.8.2/junit-platform-console-standalone-1.8.2.jar
+RUN curl -f -o /home/nucleus/junit-platform-console-standalone-1.8.2.jar https://repo1.maven.org/maven2/org/junit/platform/junit-platform-console-standalone/1.8.2/junit-platform-console-standalone-1.8.2.jar
 COPY ./build/nucleus/entrypoint.sh /
 ENTRYPOINT  ["/bin/sh", "/entrypoint.sh"]
\ No newline at end of file