{
  "startTime": 1674253211439,
  "endTime": 1674253212376,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 92
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 25,
        "columnEnd": 49
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 25,
        "columnEnd": 49
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM golang:1.18 as builder\n\nARG ARCH=linux\nARG DEFAULT_TERRAFORM_VERSION=0.15.5\nARG TERRAGRUNT_VERSION=0.31.8\n\n# Set Environment Variables\nSHELL [\"/bin/bash\", \"-c\"]\nENV HOME /app\nENV CGO_ENABLED 0\n\n# Install Packages\nRUN apt-get update -q && apt-get -y --no-install-recommends install unzip && rm -rf /var/lib/apt/lists/*;\n\n# Install latest of each Terraform version after 0.12 as we don't support versions before that\nRUN AVAILABLE_TERRAFORM_VERSIONS=\"0.12.31 0.13.7 0.14.11 ${DEFAULT_TERRAFORM_VERSION} 1.0.2 1.0.10\" && \\\n    for VERSION in ${AVAILABLE_TERRAFORM_VERSIONS}; do \\\n    wget -q https://releases.hashicorp.com/terraform/${VERSION}/terraform_${VERSION}_linux_amd64.zip && \\\n    wget -q https://releases.hashicorp.com/terraform/${VERSION}/terraform_${VERSION}_SHA256SUMS && \\\n    sed -n \"/terraform_${VERSION}_linux_amd64.zip/p\" terraform_${VERSION}_SHA256SUMS | sha256sum -c && \\\n    unzip terraform_${VERSION}_linux_amd64.zip -d /tmp && \\\n    mv /tmp/terraform /usr/bin/terraform_${VERSION} && \\\n    chmod +x /usr/bin/terraform_${VERSION} && \\\n    rm terraform_${VERSION}_linux_amd64.zip && \\\n    rm terraform_${VERSION}_SHA256SUMS; \\\n    done && \\\n    ln -s /usr/bin/terraform_0.12.31 /usr/bin/terraform_0.12 && \\\n    ln -s /usr/bin/terraform_0.13.7 /usr/bin/terraform_0.13 && \\\n    ln -s /usr/bin/terraform_0.14.11 /usr/bin/terraform_0.14 && \\\n    ln -s /usr/bin/terraform_1.0.10 /usr/bin/terraform_1.0 && \\\n    ln -s /usr/bin/terraform_${DEFAULT_TERRAFORM_VERSION} /usr/bin/terraform_0.15 && \\\n    ln -s /usr/bin/terraform_${DEFAULT_TERRAFORM_VERSION} /usr/bin/terraform\n\n# Install Terragrunt\nRUN wget -q https://github.com/gruntwork-io/terragrunt/releases/download/v$TERRAGRUNT_VERSION/terragrunt_linux_amd64\nRUN mv terragrunt_linux_amd64 /usr/bin/terragrunt && \\\n    chmod +x /usr/bin/terragrunt\n\nWORKDIR /app\n\n# Build Application\nCOPY . .\nRUN make deps\nRUN NO_DIRTY=true make build\nRUN chmod +x /app/build/infracost\n\n# Application\nFROM alpine:3.15 as app\n# Tools needed for running diffs in CI integrations\nRUN apk --no-cache add ca-certificates openssl openssh-client curl git bash\n\n# The jq package provided by alpine:3.15 (jq 1.6-rc1) is flagged as a\n# high severity vulnerability, so we install the latest release ourselves\n# Reference: https://nvd.nist.gov/vuln/detail/CVE-2016-4074 (this is present on jq-1.6-rc1 as well)\nRUN \\\n\n    curl -f -s -L -o /tmp/jq https://github.com/stedolan/jq/releases/download/jq-1.6/jq-linux64 && \\\n    mv /tmp/jq /usr/local/bin/jq && \\\n    chmod +x /usr/local/bin/jq\n\nWORKDIR /root/\n# Scripts are used by CI integrations and other use-cases\nCOPY scripts /scripts\nCOPY --from=builder /usr/bin/terraform* /usr/bin/\nCOPY --from=builder /usr/bin/terragrunt /usr/bin/\nCOPY --from=builder /app/build/infracost /usr/bin/\n\nENTRYPOINT [ \"infracost\" ]\n"
}