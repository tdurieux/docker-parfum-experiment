{
  "startTime": 1674250101687,
  "endTime": 1674250102346,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 26
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# This dockerfile was created for development & testing purposes\n#\n# Build as:             docker build -t pwndbg .\n#\n# For testing use:      docker run --rm -it --cap-add=SYS_PTRACE pwndbg bash\n#\n# For development, mount the directory so the host changes are reflected into container:\n#   docker run -it --cap-add=SYS_PTRACE -v `pwd`:/pwndbg pwndbg bash\n#\nFROM ubuntu:20.04\n\nWORKDIR /pwndbg\n\nENV LANG en_US.utf8\nENV TZ=America/New_York\nRUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && \\\n    echo $TZ > /etc/timezone && \\\n    apt-get update && \\\n    apt-get install --no-install-recommends -y locales && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8 && \\\n    apt-get update && \\\n    apt-get install --no-install-recommends -y vim && rm -rf /var/lib/apt/lists/*;\n\nADD ./setup.sh /pwndbg/\nADD ./requirements.txt /pwndbg/\n# The `git submodule` is commented because it refreshes all the sub-modules in the project\n# but at this time we only need the essentials for the set up. It will execute at the end.\nRUN sed -i \"s/^git submodule/#git submodule/\" ./setup.sh && \\\n    DEBIAN_FRONTEND=noninteractive ./setup.sh\n\n# Comment these lines if you won't run the tests.\nADD ./setup-test-tools.sh /pwndbg/\nRUN ./setup-test-tools.sh\n\nRUN echo \"source /pwndbg/gdbinit.py\" >> ~/.gdbinit.py && \\\n    echo \"PYTHON_MINOR=$(python3 -c \"import sys;print(sys.version_info.minor)\")\" >> /root/.bashrc && \\\n    echo \"PYTHON_PATH=\\\"/usr/local/lib/python3.${PYTHON_MINOR}/dist-packages/bin\\\"\" >> /root/.bashrc && \\\n    echo \"export PATH=$PATH:$PYTHON_PATH\" >> /root/.bashrc\n\nADD . /pwndbg/\n\nRUN git submodule update --init --recursive\n"
}