{
  "startTime": 1674251971306,
  "endTime": 1674251972539,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 48,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 4,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 12
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Create a basic stage set up to build APKs\nFROM alpine:3.15 as alpine-builder\nRUN apk add --no-cache \\\n\t\t--update-cache \\\n\t\tabuild \\\n\t\talpine-conf \\\n\t\talpine-sdk \\\n\t&& setup-apkcache /var/cache/apk \\\n\t&& mkdir -p /pkgs/apk \\\n\t&& echo 'builder ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers\nRUN adduser -D -G abuild builder && su builder -c 'abuild-keygen -a -n'\n\n# This stage builds a libyang APK from source\nFROM alpine-builder as libyang-builder\nRUN mkdir -p /libyang && chown -R builder /pkgs /libyang\nCOPY docker/alpine/libyang/ /libyang\nUSER builder\nRUN cd /libyang \\\n\t&& abuild checksum \\\n\t&& abuild -r -P /pkgs/apk\n\n# This stage builds a dist tarball from the source\nFROM alpine:3.15 as source-builder\n\nRUN mkdir -p /src/alpine\nCOPY alpine/APKBUILD.in /src/alpine\nRUN source /src/alpine/APKBUILD.in \\\n\t&& apk add \\\n\t\t--no-cache \\\n\t\t--update-cache \\\n\t\t$makedepends \\\n\t\tgzip \\\n\t\tpy-pip \\\n\t\trtrlib \\\n\t&& pip install --no-cache-dir pytest\n\nRUN mkdir -p /pkgs/apk\nCOPY --from=libyang-builder /pkgs/apk/ /pkgs/apk/\nRUN apk add \\\n\t\t--no-cache \\\n\t\t--allow-untrusted /pkgs/apk/*/*.apk\n\nCOPY . /src\nARG PKGVER\nRUN cd /src \\\n\t&& ./bootstrap.sh \\\n\t&& ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n\t\t--enable-numeric-version \\\n\t\t--with-pkg-extra-version=\"_git$PKGVER\" \\\n\t&& make dist\n\n# This stage builds an APK from the dist tarball\nFROM alpine-builder as frr-apk-builder\nCOPY --from=libyang-builder /pkgs/apk/ /pkgs/apk/\nCOPY --from=source-builder /src/frr-*.tar.gz /src/alpine/* /dist/\nRUN find /pkgs/apk -type f -name APKINDEX.tar.gz -delete\nRUN apk add \\\n\t\t--no-cache \\\n\t\t--allow-untrusted /pkgs/apk/*/*.apk\nRUN chown -R builder /dist /pkgs\nUSER builder\nRUN cd /dist \\\n\t&& abuild checksum \\\n\t&& git init \\\n\t&& abuild -r -P /pkgs/apk\n\n# This stage installs frr from the apk\nFROM alpine:3.15\nRUN mkdir -p /pkgs/apk\nCOPY --from=frr-apk-builder /pkgs/apk/ /pkgs/apk/\nRUN apk add \\\n\t\t--no-cache \\\n\t\t--update-cache \\\n\t\ttini \\\n\t&& apk add \\\n\t\t--no-cache \\\n\t\t--allow-untrusted /pkgs/apk/*/*.apk \\\n\t&& rm -rf /pkgs\n\n# Own the config / PID files\nRUN mkdir -p /var/run/frr\nRUN chown -R frr:frr /etc/frr /var/run/frr\n\n# Simple init manager for reaping processes and forwarding signals\nENTRYPOINT [\"/sbin/tini\", \"--\"]\n\n# Default CMD starts watchfrr\nCOPY docker/alpine/docker-start /usr/lib/frr/docker-start\nCMD [\"/usr/lib/frr/docker-start\"]\n"
}