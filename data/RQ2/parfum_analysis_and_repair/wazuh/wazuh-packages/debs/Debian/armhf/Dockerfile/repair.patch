diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/wazuh/wazuh-packages/debs/Debian/armhf/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/wazuh/wazuh-packages/debs/Debian/armhf/Dockerfile/repaired.Dockerfile
index b9d5d8a..5145352 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/wazuh/wazuh-packages/debs/Debian/armhf/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/wazuh/wazuh-packages/debs/Debian/armhf/Dockerfile/repaired.Dockerfile
@@ -5,36 +5,36 @@ ENV DEBIAN_FRONTEND noninteractive
 # Installing necessary packages
 RUN echo "deb http://deb.debian.org/debian stretch contrib non-free" >> /etc/apt/sources.list && \
     echo "deb-src http://deb.debian.org/debian stretch main contrib non-free" >> /etc/apt/sources.list && \
-    apt-get update && apt-get install -y apt-utils \
+    apt-get update && apt-get install --no-install-recommends -y apt-utils \
     curl gcc make wget sudo expect gnupg perl-base \
     perl libc-bin libc6 libc6-dev \
     build-essential cdbs devscripts equivs automake autoconf libtool \
     libaudit-dev selinux-basics util-linux libdb5.1 \
-    libssl1.1 libssl-dev gawk libsigsegv2 procps libc6-armel-cross g++
+    libssl1.1 libssl-dev gawk libsigsegv2 procps libc6-armel-cross g++ && rm -rf /var/lib/apt/lists/*;
 
 # Add Debian's source repository and, Install NodeJS 12
 RUN apt-get build-dep python3.5 -y
-RUN curl -sL https://deb.nodesource.com/setup_12.x | bash - && \
-    apt-get install -y nodejs
+RUN curl -f -sL https://deb.nodesource.com/setup_12.x | bash - && \
+    apt-get install --no-install-recommends -y nodejs && rm -rf /var/lib/apt/lists/*;
 
-RUN curl -OL http://packages.wazuh.com/utils/gcc/gcc-9.4.0.tar.gz && \
-    tar xzf gcc-9.4.0.tar.gz  && cd gcc-9.4.0/ && \
+RUN curl -f -OL https://packages.wazuh.com/utils/gcc/gcc-9.4.0.tar.gz && \
+    tar xzf gcc-9.4.0.tar.gz && cd gcc-9.4.0/ && \
     linux32 ./contrib/download_prerequisites && \
     linux32 ./configure --prefix=/usr/local/gcc-9.4.0 --with-arch=armv7-a \
         --with-fpu=vfpv3-d16 --with-float=hard --enable-languages=c,c++ \
        --disable-multilib --disable-libsanitizer && \
     linux32 make -j$(nproc) && linux32 make install && \
-    ln -fs /usr/local/gcc-9.4.0/bin/g++ /usr/bin/c++ && cd / && rm -rf gcc-*
+    ln -fs /usr/local/gcc-9.4.0/bin/g++ /usr/bin/c++ && cd / && rm -rf gcc-* && rm gcc-9.4.0.tar.gz
 
 ENV CPLUS_INCLUDE_PATH "/usr/local/gcc-9.4.0/include/c++/9.4.0/"
 ENV LD_LIBRARY_PATH "/usr/local/gcc-9.4.0/lib/"
 ENV PATH "/usr/local/gcc-9.4.0/bin:${PATH}"
 
-RUN curl -OL http://packages.wazuh.com/utils/cmake/cmake-3.18.3.tar.gz && \
+RUN curl -f -OL https://packages.wazuh.com/utils/cmake/cmake-3.18.3.tar.gz && \
     tar -zxvf cmake-3.18.3.tar.gz && cd cmake-3.18.3 && \
     linux32 ./bootstrap --no-system-curl && \
     linux32 make -j$(nproc) && linux32 make install && \
-    ln -s /usr/local/bin/cmake /usr/bin/cmake && cd / && rm -rf cmake-*
+    ln -s /usr/local/bin/cmake /usr/bin/cmake && cd / && rm -rf cmake-* && rm cmake-3.18.3.tar.gz
 
 # Add the script to build the Debian package
 ADD build.sh /usr/local/bin/build_package