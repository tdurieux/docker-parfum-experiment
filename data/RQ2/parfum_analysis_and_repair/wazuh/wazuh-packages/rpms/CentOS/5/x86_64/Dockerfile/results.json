{
  "startTime": 1674254201858,
  "endTime": 1674254203242,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 68
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 74
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 68
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 70
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 68
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 74
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 68
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 70
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 51,
        "columnEnd": 88
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 34,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 7,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 69
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 33,
        "columnEnd": 50
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 33
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM centos:5.11\n\nRUN rm /etc/yum.repos.d/* && echo \"exactarch=1\" >> /etc/yum.conf\nCOPY CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo\nRUN yum clean all && yum update -y && yum downgrade -y libselinux\n\n# Install sudo, SSH and compilers\nRUN yum install -y sudo ca-certificates make gcc curl initscripts tar \\\n    rpm-build automake autoconf libtool wget libselinux devicemapper \\\n    libselinux-python krb5-libs policycoreutils checkpolicy && rm -rf /var/cache/yum\n\nRUN yum groupinstall -y \"Development tools\"\nRUN yum install -y zlib-devel bzip2-devel openssl-devel ncurses-devel && rm -rf /var/cache/yum\n\n# Install Perl 5.10, OpenSSL 1.1.1 and curl\nRUN curl -f -OL https://packages.wazuh.com/utils/perl/perl-5.10.1.tar.gz && \\\n    gunzip perl-5.10.1.tar.gz && tar -xf perl*.tar && \\\n    cd /perl-5.10.1 && ./Configure -des -Dcc='gcc' && \\\n    make -j2 && make install && ln -fs /usr/local/bin/perl /bin/perl && \\\n    cd / && rm -rf /perl-5.10.1* && rm perl*.tar\n\nRUN curl -f -OL https://packages.wazuh.com/utils/openssl/openssl-1.1.1a.tar.gz && \\\n    tar xf openssl-1.1.1a.tar.gz && cd openssl-1.1.1a && \\\n    CFLAGS=\"-fPIC\" ./config --prefix=/usr/local/ssl --openssldir=/usr/local/ssl shared zlib && \\\n    make -j2 && make install && echo \"/usr/local/ssl/lib\" > /etc/ld.so.conf.d/openssl-1.1.1a.conf && \\\n    ldconfig -v && cd / && rm -rf openssl-1.1.1a* && rm openssl-1.1.1a.tar.gz\n\nRUN curl -f -OL https://packages.wazuh.com/utils/curl/curl-7.63.0.tar.gz && \\\n    tar xf curl-7.63.0.tar.gz && cd curl-7.63.0 && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-ssl=/usr/local/ssl && \\\n    make -j2 && make install && cd / && rm -rf curl* && rm curl-7.63.0.tar.gz\n\nRUN curl -f -OL https://packages.wazuh.com/utils/gcc/gcc-9.4.0.tar.gz && \\\n    tar xzf gcc-9.4.0.tar.gz && cd gcc-9.4.0/ && \\\n    ./contrib/download_prerequisites && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/local/gcc-9.4.0 --enable-languages=c,c++ \\\n        --disable-multilib --disable-libsanitizer && \\\n    make -j2 && make install && \\\n    ln -fs /usr/local/gcc-9.4.0/bin/g++ /usr/bin/c++ && cd / && rm -rf gcc-* && rm gcc-9.4.0.tar.gz\n\nENV CPLUS_INCLUDE_PATH \"/usr/local/gcc-9.4.0/include/c++/9.4.0/\"\nENV LD_LIBRARY_PATH \"/usr/local/gcc-9.4.0/lib64/\"\nENV PATH \"/usr/local/gcc-9.4.0/bin:${PATH}\"\n\nRUN curl -f -OL https://packages.wazuh.com/utils/cmake/cmake-3.12.4.tar.gz && \\\n    tar -zxvf cmake-3.12.4.tar.gz && cd cmake-3.12.4 && \\\n    ./bootstrap && make -j2 && make install && cd / && rm -rf cmake-* && rm cmake-3.12.4.tar.gz\n\nRUN ln -fs $(which gcc) $(which cc)\n\n# Add the scripts to build the RPM package\nADD build.sh /usr/local/bin/build_package\nRUN chmod +x /usr/local/bin/build_package\n\n# Set the entrypoint\nENTRYPOINT [\"/usr/local/bin/build_package\"]\n"
}