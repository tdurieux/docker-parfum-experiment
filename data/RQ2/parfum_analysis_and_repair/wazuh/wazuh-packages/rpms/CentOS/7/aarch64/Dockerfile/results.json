{
  "startTime": 1674255743051,
  "endTime": 1674255744702,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 70
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 83
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 66
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 70
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 29,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 24,
        "columnEnd": 35
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 87
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 6,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 35,
        "columnEnd": 60
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 31
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM arm64v8/centos:7\n\n# Enable EPEL\nRUN yum install -y http://packages.wazuh.com/utils/pkg/epel-release-latest-7.noarch.rpm && rm -rf /var/cache/yum\n\n# Install all the necessary tools to build the packages\nRUN yum install -y gcc make wget git \\\n    openssh-clients sudo gnupg file-devel \\\n    automake autoconf libtool policycoreutils-python \\\n    yum-utils system-rpm-config rpm-devel \\\n    gettext nspr nspr-devel \\\n    nss nss-devel libdb libdb-devel \\\n    zlib zlib-devel rpm-build bison \\\n    sharutils bzip2-devel xz-devel lzo-devel \\\n    e2fsprogs-devel libacl-devel libattr-devel \\\n    openssl-devel libxml2-devel kexec-tools elfutils \\\n    libcurl-devel elfutils-libelf-devel \\\n    elfutils-libelf patchelf elfutils-devel libgcrypt-devel \\\n    libarchive-devel libarchive bluez-libs-devel bzip2 \\\n    desktop-file-utils expat-devel findutils gcc-c++ gdbm-devel \\\n    glibc-devel gmp-devel gnupg2 libappstream-glib \\\n    libffi-devel libtirpc-devel libGL-devel libuuid-devel \\\n    libX11-devel ncurses-devel pkgconfig readline-devel \\\n    redhat-rpm-config sqlite-devel gdb tar tcl-devel tix-devel tk-devel \\\n    valgrind-devel python-rpm-macros python34 nodejs && rm -rf /var/cache/yum\n\nRUN curl -f -OL https://packages.wazuh.com/utils/gcc/gcc-9.4.0.tar.gz && \\\n    tar xzf gcc-9.4.0.tar.gz && cd gcc-9.4.0/ && \\\n    ./contrib/download_prerequisites && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/local/gcc-9.4.0 --enable-languages=c,c++ --disable-multilib \\\n        --disable-libsanitizer --disable-bootstrap && \\\n    make -j$(nproc) && make install && \\\n    ln -fs /usr/local/gcc-9.4.0/bin/g++ /usr/bin/c++ && cd / && rm -rf gcc-* && rm gcc-9.4.0.tar.gz\n\nENV CPLUS_INCLUDE_PATH \"/usr/local/gcc-9.4.0/include/c++/9.4.0/\"\nENV LD_LIBRARY_PATH \"/usr/local/gcc-9.4.0/lib64/\"\nENV PATH \"/usr/local/gcc-9.4.0/bin:${PATH}\"\n\nRUN curl -f -OL https://packages.wazuh.com/utils/cmake/cmake-3.18.3.tar.gz && \\\n    tar -zxf cmake-3.18.3.tar.gz && cd cmake-3.18.3 && \\\n    ./bootstrap --no-system-curl CC=/usr/local/gcc-9.4.0/bin/gcc \\\n        CXX=/usr/local/gcc-9.4.0/bin/g++ && \\\n    make -j$(nproc) && make install && cd / && rm -rf cmake-* && rm cmake-3.18.3.tar.gz\n\nRUN curl -f -O http://packages.wazuh.com/utils/openssl/openssl-1.1.1a.tar.gz && \\\n    tar -xzf openssl-1.1.1a.tar.gz && cd openssl* && \\\n    ./config -Wl,--enable-new-dtags,-rpath,'$(LIBRPATH)' && \\\n    make -j $(nproc) && make install && cd / && rm -rf openssl-* && rm openssl-1.1.1a.tar.gz\n\nRUN curl -f -O http://packages.wazuh.com/utils/nodejs/node-v12.16.1-linux-arm64.tar.xz && \\\n    tar -xJf node-v12.16.1-linux-arm64.tar.xz && \\\n    cd node-v12.16* && cp -R * /usr/local/ && cd / && rm -rf node-v* && rm node-v12.16.1-linux-arm64.tar.xz\n\n# Update rpmbuild, rpm and autoconf\nRUN curl -f -O http://packages.wazuh.com/utils/autoconf/autoconf-2.69.tar.gz && \\\n    gunzip autoconf-2.69.tar.gz && tar xvf autoconf-2.69.tar && \\\n    cd autoconf-2.69 && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n    make -j $(nproc) && make install && cd / && rm -rf autoconf-* && rm autoconf-2.69.tar\n\nRUN curl -f -O http://packages.wazuh.com/utils/rpm/rpm-4.15.1.tar.bz2 && \\\n    tar -xjf rpm-4.15.1.tar.bz2 && cd rpm-4.15.1 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --without-lua && make -j $(nproc) && \\\n    make install && cd / && rm -rf rpm-* && rm rpm-4.15.1.tar.bz2\n\nRUN mkdir -p /usr/local/var/lib/rpm && \\\n    cp /var/lib/rpm/Packages /usr/local/var/lib/rpm/Packages && \\\n    /usr/local/bin/rpm --rebuilddb && rm -rf /root/rpmbuild\n\n# Add the scripts to build the RPM package\nADD build.sh /usr/local/bin/build_package\nRUN chmod +x /usr/local/bin/build_package\n\n# Set the entrypoint\nENTRYPOINT [\"/usr/local/bin/build_package\"]\n"
}