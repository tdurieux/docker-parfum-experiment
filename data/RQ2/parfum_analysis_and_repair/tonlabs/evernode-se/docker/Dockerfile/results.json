{
  "startTime": 1674218081748,
  "endTime": 1674218082530,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 22,
        "columnEnd": 41
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 22,
        "columnEnd": 41
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 22,
        "columnEnd": 41
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 52
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG TON_NODE\n\nFROM node:14-buster as q-server-build\n\nARG Q_SERVER_GITHUB_REPO\nARG Q_SERVER_GITHUB_REV\n\nRUN apt-get update && apt-get install -y --no-install-recommends git && rm -rf /var/lib/apt/lists/*;\n\n# Install Q-Server\nUSER node\nWORKDIR /home/node\nRUN git clone --recursive --branch $Q_SERVER_GITHUB_REV $Q_SERVER_GITHUB_REPO ton-q-server\nWORKDIR /home/node/ton-q-server\nRUN npm ci; \\\n    npm run tsc; \\\n    npm ci --production\n\nFROM ${TON_NODE} as ton-node\n\nFROM arangodb:3.7.11\n\nENV LANG=en_US.UTF-8\nENV PYTHONIOENCODING=utf-8\n\nRUN rm /entrypoint.sh\n\nCOPY --from=q-server-build /home/ /home/\nCOPY --from=q-server-build /lib/ /lib/\nCOPY --from=q-server-build /lib64/ /lib64/\nCOPY --from=q-server-build /usr/ /usr/\n\nCOPY --from=ton-node / /\n\nADD q-server /q-server\nADD ton-node /ton-node\nADD Procfile /honcho-cfg/\nADD arango /arango\n\nRUN apk --update --no-cache add nginx dos2unix bash git py-pip; \\\n    addgroup --system --gid 103 nginx; \\\n    adduser --system --disabled-login --ingroup nginx --no-create-home --home /nonexistent --gecos \"nginx user\" --shell /bin/false --uid 103 nginx; \\\n    mkdir -p /run/nginx; \\\n    rm -rf /etc/nginx/conf.d/; \\\n    rm -rf /etc/nginx/v.host/; \\\n    rm -f /etc/nginx/nginx.conf; \\\n    pip install --no-cache-dir --upgrade pip; \\\n    pip install --no-cache-dir -Iv honcho==1.0.1; \\\n    mkdir -p '/var/lib/arangodb3'; \\\n    mkdir -p '/var/lib/arangodb3-apps'; \\\n    chmod +w '/var/lib/arangodb3'; \\\n    chmod +w '/var/lib/arangodb3-apps'\n\nRUN dos2unix /q-server/entrypoint /arango/entrypoint /arango/config /ton-node/entrypoint /honcho-cfg/Procfile\n\nRUN chmod +x /q-server/entrypoint; \\\n    chmod +x /arango/entrypoint; \\\n    chmod +x /ton-node/entrypoint\n\nWORKDIR /honcho-cfg\nRUN /arango/entrypoint init\nCOPY nginx.conf.d /etc/nginx/nginx.conf\nCOPY ton-live/web /var/www\n\nEXPOSE 80\nEXPOSE 3000\n\nENTRYPOINT [\"honcho\"]\nCMD [\"start\"]\n"
}