{
  "startTime": 1674218495361,
  "endTime": 1674218496024,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 25
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 29,
        "columnEnd": 45
      }
    }
  ],
  "repairedDockerfile": "# Check out https://hub.docker.com/_/node to select a new base image\nFROM node:16.6 as build\n\n# Set to a non-root built-in user `node`\nUSER node\n\n# Create app directory (with user `node`)\nRUN mkdir -p /home/node/app\n\nWORKDIR /home/node/app\n\n# Install app dependencies\n# A wildcard is used to ensure both package.json AND package-lock.json are copied\n# where available (npm@5+)\nCOPY --chown=node package*.json ./\n\nRUN yarn install --silent && yarn cache clean;\n\n# Bundle app source code\nCOPY --chown=node . .\n\nRUN npm run build  --silent\n\n# Bind to all network interfaces so that it can be mapped to the host OS\nFROM nginx:1.15\n\nRUN rm /etc/nginx/conf.d/default.conf\nRUN rm /etc/nginx/nginx.conf\n\nCOPY --from=build /home/node/app/build /usr/share/nginx/html\n\nCOPY nginx.conf /etc/nginx/nginx.conf\n\nEXPOSE 80\n\nCMD [\"nginx\", \"-g\", \"daemon off;\"]\n"
}