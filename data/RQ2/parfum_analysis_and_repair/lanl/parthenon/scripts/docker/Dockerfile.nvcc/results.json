{
  "startTime": 1674248957037,
  "endTime": 1674248958666,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 66
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 90
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 110
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 264
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nvidia/cuda:11.4.2-devel-ubuntu20.04\n\nRUN apt-get clean && apt-get update -y && \\\n    DEBIAN_FRONTEND=\"noninteractive\" TZ=America/New_York apt-get install -y --no-install-recommends git python3-minimal libpython3-stdlib bc hwloc wget openssh-client python3-numpy python3-h5py python3-matplotlib lcov curl nsight-systems-2021.3.3 cmake ninja-build && rm -rf /var/lib/apt/lists/*;\n\nRUN wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key| apt-key add - && \\\n    echo \"deb http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main\" > /etc/apt/sources.list.d/llvm.list\n\nRUN apt-get clean && apt-get update -y && \\\n    DEBIAN_FRONTEND=\"noninteractive\" TZ=America/New_York apt-get install -y --no-install-recommends clang-13 llvm-13 libomp-13-dev && \\\n    rm -rf /var/lib/apt/lists/*\n\n\nRUN cd /tmp && \\\n    wget https://download.open-mpi.org/release/open-mpi/v3.1/openmpi-3.1.6.tar.bz2 && \\\n    tar xjf openmpi-3.1.6.tar.bz2 && \\\n    cd openmpi-3.1.6 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/opt/openmpi --enable-mpi-cxx --with-cuda && \\\n    make -j8 && \\\n    make install && \\\n    cd / && \\\n    rm -rf /tmp/openmpi* && rm openmpi-3.1.6.tar.bz2\n\nENV LD_LIBRARY_PATH=/opt/openmpi/lib:$LD_LIBRARY_PATH \\\n    PATH=/opt/openmpi/bin:$PATH\n\nRUN cd /tmp && \\\n    wget https://support.hdfgroup.org/ftp/HDF5/releases/hdf5-1.10/hdf5-1.10.8/src/hdf5-1.10.8.tar.gz && \\\n    tar xzf hdf5-1.10.8.tar.gz && \\\n    cd hdf5-1.10.8 && \\\n    mkdir -p /usr/local/hdf5/serial /usr/local/hdf5/parallel && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/local/hdf5/serial --enable-hl --enable-build-mode=production && make -j8 && make install && make clean && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/local/hdf5/parallel --enable-hl --enable-build-mode=production --enable-parallel && make -j8 && make install && \\\n    cd / && \\\n    rm -rf /tmp/hdf5-1.10.8* && rm hdf5-1.10.8.tar.gz\n\nRUN update-alternatives --install /usr/bin/python python /usr/bin/python3 10\n"
}