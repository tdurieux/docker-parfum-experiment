{
  "startTime": 1674255059894,
  "endTime": 1674255060847,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 19
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 24,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 21
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM tomcat:8.5-jre8 as org.wildme.wildbook.base\n\nMAINTAINER Wild Me <dev@wildme.org>\n\nARG AZURE_DEVOPS_CACHEBUSTER=0\n\nRUN echo \"ARGS AZURE_DEVOPS_CACHEBUSTER=${AZURE_DEVOPS_CACHEBUSTER}\"\n\n# Install apt packages\nRUN apt-get update \\\n && apt-get install --no-install-recommends -y \\\n        imagemagick \\\n && rm -rf /var/lib/apt/lists/*\n\n##########################################################################################\nFROM openjdk:8u171-jdk as org.wildme.wildbook.build\n\n# The arg recieves the value from the build script --build-args, but swapping for an\n# env allows it to keep this value after the current container is built.\nARG branch=master\nENV branch=${branch}\n\n# Install apt packages\nRUN apt-get update \\\n && apt-get install --no-install-recommends -y \\\n        git=1:2.11.0-3+deb9u3 \\\n        maven=3.3.9-4 \\\n && rm -rf /var/lib/apt/lists/*\n\n# Create ibeis source location\nRUN mkdir -p /wildbook \\\n    && cd wildbook \\\n    && git clone https://github.com/WildbookOrg/Wildbook.git\n\n# Did that arg make it?\nRUN echo ${branch}\n\n# Make sure we get the correct branch and most recent version of it.\nRUN cd wildbook/Wildbook/ \\\n && git checkout -f ${branch} \\\n && git pull\n\n# Copy branch specific build files.\nCOPY ./_config/${branch}/jdoconfig.properties /wildbook/Wildbook/src/main/resources/bundles/jdoconfig.properties\nCOPY ./_config/${branch}/commonConfiguration.properties /wildbook/Wildbook/src/main/resources/bundles/commonConfiguration.properties\n\n# Build and move the war file, skipping tests and other verbosity\nRUN cd wildbook/Wildbook \\\n && mvn clean install -DskipTests -Dmaven.javadoc.skip=true -B \\\n && cp target/wildbook-*.war /wildbook/wildbook.war\n\n##########################################################################################\nFROM org.wildme.wildbook.base as org.wildme.wildbook.install\n\nARG branch=master\nENV branch=${branch}\n\nRUN mkdir -p /tmp/ScheduledQueue\n\nRUN rm -rf /usr/local/tomcat/webapps/ROOT/\n\nADD ./_config/${branch}/context.xml /usr/local/tomcat/conf/context.xml\n\nADD ./_config/${branch}/server.xml /usr/local/tomcat/conf/server.xml\n\nCOPY --from=org.wildme.wildbook.build /wildbook/wildbook.war /usr/local/tomcat/webapps/wildbook.war\n\nRUN mkdir -p /data/ \\\n && mkdir -p /data/wildbook_data_dir \\\n && ln -s /data/wildbook_data_dir /usr/local/tomcat/webapps/wildbook_data_dir\n\nVOLUME /data/wildbook_data_dir\n\n##########################################################################################\nFROM org.wildme.wildbook.install as org.wildme.wildbook.deploy\n\nENTRYPOINT [\"/usr/local/tomcat/bin/catalina.sh\"]\n\nCMD [\"run\", \"-Xms4096m\", \"Xmx4096m\"]\n\nEXPOSE 8080\nEXPOSE 8009\n\nSTOPSIGNAL SIGTERM\n"
}