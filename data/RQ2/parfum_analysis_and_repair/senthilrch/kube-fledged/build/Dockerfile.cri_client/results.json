{
  "startTime": 1674253427081,
  "endTime": 1674253428158,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 1,
        "columnEnd": 126
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 1,
        "columnEnd": 127
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 1,
        "columnEnd": 125
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 1,
        "columnEnd": 165
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 1,
        "columnEnd": 165
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 1,
        "columnEnd": 163
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright 2018 The kube-fledged authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nARG ALPINE_VERSION\nFROM alpine:$ALPINE_VERSION\n\nRUN apk update && apk add --no-cache bash curl openssh-client\n\nARG DOCKER_VERSION\nARG CRICTL_VERSION\nARG TARGETPLATFORM\n\nRUN if [ \"$TARGETPLATFORM\" = \"linux/amd64\" ]; then \\\n curl -f -L -o /tmp/docker-$DOCKER_VERSION.tgz https://download.docker.com/linux/static/stable/x86_64/docker-$DOCKER_VERSION.tgz; \\\n elif [ \"$TARGETPLATFORM\" = \"linux/arm64\" ]; then \\\n curl -f -L -o /tmp/docker-$DOCKER_VERSION.tgz https://download.docker.com/linux/static/stable/aarch64/docker-$DOCKER_VERSION.tgz; \\\n elif [ \"$TARGETPLATFORM\" = \"linux/arm/v7\" ]; then \\\n curl -f -L -o /tmp/docker-$DOCKER_VERSION.tgz https://download.docker.com/linux/static/stable/armhf/docker-$DOCKER_VERSION.tgz; \\\n else\\\n :;\\\n fi\n\nRUN tar -xz -C /tmp -f /tmp/docker-$DOCKER_VERSION.tgz && \\\n    mv /tmp/docker/docker /usr/bin && \\\n    rm -rf /tmp/docker-$DOCKER_VERSION.tgz /tmp/docker\n\nRUN if [ \"$TARGETPLATFORM\" = \"linux/amd64\" ]; then \\\n curl -f -L -o /tmp/crictl-$CRICTL_VERSION.tgz https://github.com/kubernetes-sigs/cri-tools/releases/download/$CRICTL_VERSION/crictl-$CRICTL_VERSION-linux-amd64.tar.gz; \\\n elif [ \"$TARGETPLATFORM\" = \"linux/arm64\" ]; then \\\n curl -f -L -o /tmp/crictl-$CRICTL_VERSION.tgz https://github.com/kubernetes-sigs/cri-tools/releases/download/$CRICTL_VERSION/crictl-$CRICTL_VERSION-linux-arm64.tar.gz; \\\n elif [ \"$TARGETPLATFORM\" = \"linux/arm/v7\" ]; then \\\n curl -f -L -o /tmp/crictl-$CRICTL_VERSION.tgz https://github.com/kubernetes-sigs/cri-tools/releases/download/$CRICTL_VERSION/crictl-$CRICTL_VERSION-linux-arm.tar.gz; \\\n else\\\n :;\\\n fi\n\nRUN tar -xz -C /tmp -f /tmp/crictl-$CRICTL_VERSION.tgz && \\\n    mv /tmp/crictl /usr/bin && \\\n    rm -rf /tmp/crictl-$CRICTL_VERSION.tgz /tmp/crictl\n"
}