{
  "startTime": 1674254711973,
  "endTime": 1674254712680,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 8,
        "columnStart": 27,
        "columnEnd": 7
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 8,
        "columnStart": 27,
        "columnEnd": 7
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# base node image\nFROM node:16-bullseye-slim as base\n\n# Install openssl for Prisma\nRUN apt-get update || : && apt-get install --no-install-recommends -y \\\n    python \\\n    build-essential \\\n    node-gyp \\\n    git && rm -rf /var/lib/apt/lists/*;\nRUN npm i --location=global pnpm && npm cache clean --force;\n\n\nFROM base as store\nENV NODE_ENV=development\n\nWORKDIR /store\n\nCOPY pnpm-lock.yaml .npmrc ./\nRUN pnpm fetch\n\n# ------------------------------------------------------------------\n# Install all node_modules, including dev dependencies\nFROM store as deps\nENV NODE_ENV=development\n\nWORKDIR /app\n\nCOPY . .\n\nRUN pnpm install --offline\n\n# Setup production node_modules\nFROM store as production-deps\n\nWORKDIR /app\n\nCOPY . .\nRUN pnpm install --prod --offline\n\n# ------------------------------------------------------------------\n# Build the app\nFROM base as build\n\nENV NODE_ENV=production\n\nWORKDIR /app\n\nCOPY --from=deps /app/node_modules /app/node_modules\n\nCOPY . .\nRUN mkdir dist\nRUN chmod a+rwx -R dist\nRUN pnpm nx build renderer-app\n\n# ------------------------------------------------------------------\n# Finally, build the production image with minimal footprint\nFROM base\n\nENV NODE_ENV=production\n\nWORKDIR /app\n\nCOPY --from=production-deps /app/node_modules /app/node_modules\n\nCOPY --from=build /app/apps/renderer-app/build /app/apps/renderer-app/build\nCOPY --from=build /app/apps/renderer-app/public /app/apps/renderer-app/public\nADD . .\n\nUSER node\nWORKDIR apps/renderer-app\nCMD [\"npm\", \"run\", \"start\"]"
}