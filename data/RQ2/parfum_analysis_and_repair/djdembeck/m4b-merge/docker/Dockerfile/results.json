{
  "startTime": 1674254654094,
  "endTime": 1674254656131,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 157,
        "lineEnd": 157,
        "columnStart": 4,
        "columnEnd": 118
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 158,
        "lineEnd": 158,
        "columnStart": 4,
        "columnEnd": 119
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 89,
        "lineEnd": 89,
        "columnStart": 17,
        "columnEnd": 127
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 96,
        "lineEnd": 96,
        "columnStart": 36,
        "columnEnd": 80
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 103,
        "lineEnd": 103,
        "columnStart": 17,
        "columnEnd": 86
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 112,
        "lineEnd": 129,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 88,
        "lineEnd": 88,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 95,
        "lineEnd": 95,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 102,
        "lineEnd": 102,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 109,
        "lineEnd": 109,
        "columnStart": 4,
        "columnEnd": 25
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Forked from https://github.com/wader/static-ffmpeg/blob/master/Dockerfile\nFROM alpine:3.14.2 AS ffbuild\n\nARG FFMPEG_VERSION=4.4.1\nARG FFMPEG_URL=\"https://ffmpeg.org/releases/ffmpeg-$FFMPEG_VERSION.tar.bz2\"\nARG FFMPEG_SHA256=8fc9f20ac5ed95115a9e285647add0eedd5cc1a98a039ada14c132452f98ac42\n\nARG MP3LAME_VERSION=3.100\nARG MP3LAME_URL=\"https://sourceforge.net/projects/lame/files/lame/$MP3LAME_VERSION/lame-$MP3LAME_VERSION.tar.gz/download\"\nARG MP3LAME_SHA256=ddfe36cab873794038ae2c1210557ad34857a4b6bdc515785d1da9e175b1da1e\n\nARG FDK_AAC_VERSION=2.0.2\nARG FDK_AAC_URL=\"https://github.com/mstorsjo/fdk-aac/archive/v$FDK_AAC_VERSION.tar.gz\"\nARG FDK_AAC_SHA256=7812b4f0cf66acda0d0fe4302545339517e702af7674dd04e5fe22a5ade16a90\n\nARG OPUS_VERSION=1.3.1\nARG OPUS_URL=\"https://archive.mozilla.org/pub/opus/opus-$OPUS_VERSION.tar.gz\"\nARG OPUS_SHA256=65b58e1e25b2a114157014736a3d9dfeaad8d41be1c8179866f144a2fb44ff9d\n\nARG CFLAGS=\"-O3 -static-libgcc -fno-strict-overflow -fstack-protector-all -fPIE\"\nARG CXXFLAGS=\"-O3 -static-libgcc -fno-strict-overflow -fstack-protector-all -fPIE\"\nARG LDFLAGS=\"-Wl,-z,relro,-z,now\"\n\n# Can probably clean these out\nRUN apk add --no-cache \\\n    coreutils \\\n    rust \\\n    cargo \\\n    openssl openssl-dev openssl-libs-static \\\n    ca-certificates \\\n    bash \\\n    tar \\\n    build-base \\\n    autoconf \\\n    automake \\\n    libtool \\\n    diffutils \\\n    cmake \\\n    meson \\\n    ninja \\\n    git \\\n    yasm \\\n    nasm \\\n    texinfo \\\n    jq \\\n    zlib zlib-dev zlib-static \\\n    libbz2 bzip2-dev bzip2-static \\\n    libxml2 libxml2-dev \\\n    expat expat-dev expat-static \\\n    fontconfig fontconfig-dev fontconfig-static \\\n    freetype freetype-dev freetype-static \\\n    graphite2-static \\\n    glib-static \\\n    tiff tiff-dev \\\n    libjpeg-turbo libjpeg-turbo-dev \\\n    libpng-dev libpng-static \\\n    giflib giflib-dev \\\n    harfbuzz harfbuzz-dev harfbuzz-static \\\n    fribidi fribidi-dev fribidi-static \\\n    brotli brotli-dev brotli-static \\\n    soxr soxr-dev soxr-static \\\n    tcl \\\n    numactl numactl-dev \\\n    cunit cunit-dev \\\n    xxd\n\nRUN \\\n    OPENSSL_VERSION=$(pkg-config --modversion openssl) \\\n    LIBXML2_VERSION=$(pkg-config --modversion libxml-2.0) \\\n    EXPAT_VERSION=$(pkg-config --modversion expat) \\\n    FREETYPE_VERSION=$(pkg-config --modversion freetype2)  \\\n    FONTCONFIG_VERSION=$(pkg-config --modversion fontconfig)  \\\n    FRIBIDI_VERSION=$(pkg-config --modversion fribidi)  \\\n    SOXR_VERSION=$(pkg-config --modversion soxr) \\\n    jq -n \\\n    '{ \\\n    ffmpeg: env.FFMPEG_VERSION, \\\n    openssl: env.OPENSSL_VERSION, \\\n    libxml2: env.LIBXML2_VERSION, \\\n    expat: env.EXPAT_VERSION, \\\n    libmp3lame: env.MP3LAME_VERSION, \\\n    \"libfdk-aac\": env.FDK_AAC_VERSION, \\\n    libopus: env.OPUS_VERSION, \\\n    }' > /versions.json\n\nRUN \\\n    wget -O lame.tar.gz \"$MP3LAME_URL\" && \\\n    echo \"$MP3LAME_SHA256  lame.tar.gz\" | sha256sum --status -c - && \\\n    tar xf lame.tar.gz && \\\n    cd lame-* && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --disable-shared --enable-static --enable-nasm --disable-gtktest --disable-cpml --disable-frontend && \\\n    make -j$(nproc) install && rm lame.tar.gz\n\nRUN \\\n    wget -O fdk-aac.tar.gz \"$FDK_AAC_URL\" && \\\n    echo \"$FDK_AAC_SHA256  fdk-aac.tar.gz\" | sha256sum --status -c - && \\\n    tar xf fdk-aac.tar.gz && \\\n    cd fdk-aac-* && ./autogen.sh && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --disable-shared --enable-static && \\\n    make -j$(nproc) install && rm fdk-aac.tar.gz\n\nRUN \\\n    wget -O opus.tar.gz \"$OPUS_URL\" && \\\n    echo \"$OPUS_SHA256  opus.tar.gz\" | sha256sum --status -c - && \\\n    tar xf opus.tar.gz && \\\n    cd opus-* && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --disable-shared --enable-static --disable-extra-programs && \\\n    make -j$(nproc) install && rm opus.tar.gz\n\nRUN \\\n    wget -O ffmpeg.tar.bz2 \"$FFMPEG_URL\" && \\\n    echo \"$FFMPEG_SHA256  ffmpeg.tar.bz2\" | sha256sum --status -c - && \\\n    tar xf ffmpeg.tar.bz2 && \\\n    cd ffmpeg-* && \\\n    sed -i 's/add_ldexeflags -fPIE -pie/add_ldexeflags -fPIE -static-pie/' configure && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n    --pkg-config-flags=\"--static\" \\\n    --extra-cflags=\"-fopenmp\" \\\n    --extra-ldflags=\"-fopenmp\" \\\n    --extra-libs=\"-lstdc++\" \\\n    --toolchain=hardened \\\n    --disable-debug \\\n    --disable-shared \\\n    --disable-ffplay \\\n    --enable-static \\\n    --enable-gpl \\\n    --enable-gray \\\n    --enable-nonfree \\\n    --enable-openssl \\\n    --enable-iconv \\\n    --enable-libxml2 \\\n    --enable-libmp3lame \\\n    --enable-libfdk-aac \\\n    || (cat ffbuild/config.log ; false) \\\n    && make -j$(nproc) install tools/qt-faststart \\\n    && cp tools/qt-faststart /usr/local/bin && rm ffmpeg.tar.bz2\n\n# base image\nFROM python:3.9\n\nRUN \\\n    touch /etc/apt/sources.list.d/contrib.list && \\\n    echo \"deb http://ftp.us.debian.org/debian buster main contrib non-free\" >> /etc/apt/sources.list.d/contrib.list\n\n# Get dependencies for m4b-tool/ffmpeg\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y \\\n    fdkaac \\\n    php-cli \\\n    php-common \\\n    php-intl \\\n    php-mbstring \\\n    php-xml \\\n    wget && \\\n    M4B_TOOL_PRE_RELEASE_LINK=\"$(wget -nv -O - https://github.com/sandreas/m4b-tool/releases/tag/latest | grep -o 'M4B_TOOL_DOWNLOAD_LINK=[^ ]*' | head -1 | cut -d '=' -f 2)\" && \\\n    wget --progress=dot:giga \"$M4B_TOOL_PRE_RELEASE_LINK\" -O /tmp/m4b-tool.tar.gz && \\\n    tar -xf /tmp/m4b-tool.tar.gz -C /tmp && \\\n    rm /tmp/m4b-tool.tar.gz && \\\n    mv /tmp/m4b-tool.phar /usr/local/bin/m4b-tool && \\\n    chmod +x /usr/local/bin/m4b-tool && \\\n    wget --progress=dot:giga https://archive.ubuntu.com/ubuntu/pool/universe/m/mp4v2/libmp4v2-2_2.0.0~dfsg0-6_amd64.deb && \\\n    wget --progress=dot:giga https://archive.ubuntu.com/ubuntu/pool/universe/m/mp4v2/mp4v2-utils_2.0.0~dfsg0-6_amd64.deb && \\\n    dpkg -i libmp4v2-2_2.0.0~dfsg0-6_amd64.deb && \\\n    dpkg -i mp4v2-utils_2.0.0~dfsg0-6_amd64.deb && \\\n    rm ./*.deb && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get remove -y wget\n\n# set environment variables\nENV PYTHONDONTWRITEBYTECODE 1\nENV PYTHONUNBUFFERED 1\n\nCOPY . /src\n\n# run this command to install all dependencies\nRUN pip install --no-cache-dir --upgrade pip && \\\n    pip install --no-cache-dir -r /src/requirements.txt \\\n    pip install --no-cache-dir /src && \\\n    rm -rf /src/build\n\nCOPY --from=ffbuild /usr/local/bin/ffmpeg /usr/bin\nCOPY --from=ffbuild /usr/local/bin/ffprobe /usr/bin\n\nENTRYPOINT [\"/bin/sh\", \"/src/docker/entrypoint.sh\"]\nCMD m4b-merge"
}