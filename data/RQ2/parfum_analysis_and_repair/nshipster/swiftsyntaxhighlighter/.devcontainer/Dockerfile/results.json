{
  "startTime": 1674254978637,
  "endTime": 1674254979710,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 7,
        "columnEnd": 64
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 8,
        "columnEnd": 61
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 52,
        "columnEnd": 118
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 54,
        "columnEnd": 118
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Update the VARIANT arg in devcontainer.json to pick a Swift version\nARG VARIANT=5.3\nFROM swift:${VARIANT}\n\n# This Dockerfile adds a non-root user with sudo access. Use the \"remoteUser\" property in\n# devcontainer.json to use it. More info: https://aka.ms/vscode-remote/containers/non-root-user.\nARG USERNAME=vscode\nARG USER_UID=1000\nARG USER_GID=$USER_UID\n\n# Other options for common setup script\nARG INSTALL_ZSH=\"true\"\n\nARG UPGRADE_PACKAGES=\"false\"\nARG COMMON_SCRIPT_SOURCE=\"https://raw.githubusercontent.com/microsoft/vscode-dev-containers/master/script-library/common-debian.sh\"\nARG COMMON_SCRIPT_SHA=\"dev-mode\"\n\n# Install needed packages and setup non-root user. Use a separate RUN statement to add your own dependencies.\nRUN apt-get update \\\n    && export DEBIAN_FRONTEND=noninteractive \\\n    && apt-get -y install --no-install-recommends curl ca-certificates 2>&1 \\\n    && curl -f -sSL ${COMMON_SCRIPT_SOURCE} -o /tmp/common-setup.sh \\\n    && ( [ \"${COMMON_SCRIPT_SHA}\" = \"dev-mode\" ] || ( echo \"${COMMON_SCRIPT_SHA}  */tmp/common-setup.sh\" | sha256sum -c -)) \\\n    && /bin/bash /tmp/common-setup.sh \"${INSTALL_ZSH}\" \"${USERNAME}\" \"${USER_UID}\" \"${USER_GID}\" \"${UPGRADE_PACKAGES}\" \\\n    # Install lldb, vadimcn.vscode-lldb VSCode extension dependencies\n    && apt-get -y install --no-install-recommends lldb python3-minimal libpython3.7 \\\n    # Clean up\n    && apt-get autoremove -y \\\n    && apt-get clean -y \\\n    && rm -rf /var/lib/apt/lists/* /tmp/common-setup.sh\n\n# Install SourceKite, see https://github.com/vknabel/vscode-swift-development-environment/blob/master/README.md#installation\nRUN git clone https://github.com/vknabel/sourcekite \\\n    && export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/lib/swift:/usr/lib \\\n    && ln -s /usr/lib/libsourcekitdInProc.so /usr/lib/sourcekitdInProc \\\n    && cd sourcekite && make install PREFIX=/usr/local -j2\n\n# [Optional] Install Node.js for use with web applications - update the INSTALL_NODE arg in devcontainer.json to enable.\nARG INSTALL_NODE=\"false\"\nARG NODE_SCRIPT_SOURCE=\"https://raw.githubusercontent.com/microsoft/vscode-dev-containers/master/script-library/node-debian.sh\"\nARG NODE_SCRIPT_SHA=\"dev-mode\"\nARG NODE_VERSION=\"lts/*\"\nENV NVM_DIR=/usr/local/share/nvm\nENV NVM_SYMLINK_CURRENT=true\nENV PATH=${NVM_DIR}/current/bin:${PATH}\nRUN if [ \"$INSTALL_NODE\" = \"true\" ]; then \\\n        curl -f -sSL ${NODE_SCRIPT_SOURCE} -o /tmp/node-setup.sh \\\n        && ( [ \"${NODE_SCRIPT_SHA}\" = \"dev-mode\" ] || ( echo \"${COMMON_SCRIPT_SHA}  */tmp/node-setup.sh\" | sha256sum -c -)) \\\n        && /bin/bash /tmp/node-setup.sh \"${NVM_DIR}\" \"${NODE_VERSION}\" \"${USERNAME}\" \\\n        && rm -rf /var/lib/apt/lists/* /tmp/node-setup.sh; \\\n    fi\n\n# [Optional] Uncomment this section to install additional OS packages you may want.\n#\n# RUN apt-get update \\\n#     && export DEBIAN_FRONTEND=noninteractive \\\n#     && apt-get -y install --no-install-recommends <your-package-list-here>\n"
}