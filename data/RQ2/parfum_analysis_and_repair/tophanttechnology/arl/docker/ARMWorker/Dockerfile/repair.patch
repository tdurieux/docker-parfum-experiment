diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/tophanttechnology/arl/docker/ARMWorker/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/tophanttechnology/arl/docker/ARMWorker/Dockerfile/repaired.Dockerfile
index 791e635..5c5e0bb 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/tophanttechnology/arl/docker/ARMWorker/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/tophanttechnology/arl/docker/ARMWorker/Dockerfile/repaired.Dockerfile
@@ -1,10 +1,9 @@
-# syntax=docker/dockerfile:1
 FROM ubuntu:20.04 AS builder
 ENV DEBIAN_FRONTEND noninteractive
 WORKDIR /opt/
-RUN set -x;\
+RUN set -x; \
     apt-get update \
-    && apt-get install -y g++ make wget  libssl-dev zlib1g-dev git \
+    && apt-get install --no-install-recommends -y g++ make wget libssl-dev zlib1g-dev git \
     && git clone https://github.com/blechschmidt/massdns.git \
     && cd /opt/massdns \
     && make \
@@ -13,9 +12,9 @@ RUN set -x;\
     && wget https://nmap.org/ncrack/dist/ncrack-0.7.tar.gz --no-check-certificate \
     && tar -xzf ncrack-0.7.tar.gz \
     && cd ncrack-0.7 \
-    && ./configure \
+    && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
     && make \
-    && /opt/ncrack-0.7/ncrack -V
+    && /opt/ncrack-0.7/ncrack -V && rm ncrack-0.7.tar.gz && rm -rf /var/lib/apt/lists/*;
 
 
 
@@ -25,12 +24,12 @@ ENV LANG en_US.UTF-8
 
 WORKDIR /code
 
-RUN set -x;\
+RUN set -x; \
     apt-get update \
-    && apt-get install -y python3.8 python3-pip curl nginx nmap \
+    && apt-get install --no-install-recommends -y python3.8 python3-pip curl nginx nmap \
     && ln -s /usr/bin/python3.8 /usr/bin/python3.6 \
     && useradd -s /bin/false nginx \
-    && nmap -v
+    && nmap -v && rm -rf /var/lib/apt/lists/*;
 
 COPY app/ app/
 COPY test/ test/
@@ -48,18 +47,18 @@ COPY docker/worker/wait-for-it.sh /usr/bin/wait-for-it.sh
 ## 复制npoc 并安装
 COPY docker/ARL-NPoC/ /opt/ARL-NPoC/
 WORKDIR /opt/ARL-NPoC/
-RUN pip3 install -e .
+RUN pip3 install --no-cache-dir -e .
 
 WORKDIR /code
-RUN curl https://ssl-config.mozilla.org/ffdhe2048.txt -o /etc/ssl/certs/dhparam.pem
+RUN curl -f https://ssl-config.mozilla.org/ffdhe2048.txt -o /etc/ssl/certs/dhparam.pem
 COPY requirements.txt requirements.txt
 COPY docker/GeoLite2/ /data/GeoLite2/
-RUN pip3 install -r requirements.txt
+RUN pip3 install --no-cache-dir -r requirements.txt
 
 
 ## 安装 NPoC 的依赖
 WORKDIR /opt/ARL-NPoC/
-RUN pip3 install -r requirements.txt
+RUN pip3 install --no-cache-dir -r requirements.txt
 
 ## 切换工作目录
 WORKDIR /code