diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/uenota/dronedoc/docker/tutorial/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/uenota/dronedoc/docker/tutorial/Dockerfile/repaired.Dockerfile
index aa4067e..84ea4c3 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/uenota/dronedoc/docker/tutorial/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/uenota/dronedoc/docker/tutorial/Dockerfile/repaired.Dockerfile
@@ -22,7 +22,7 @@ RUN usermod -a -G dialout $username
 
 # upgrade packages
 RUN apt update && apt upgrade -y
-RUN apt install -y lsb-release
+RUN apt install --no-install-recommends -y lsb-release && rm -rf /var/lib/apt/lists/*;
 
 # setup ROS repository key
 RUN sh -c 'echo "deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main" > /etc/apt/sources.list.d/ros-latest.list'
@@ -30,14 +30,14 @@ RUN apt-key adv --keyserver 'hkp://keyserver.ubuntu.com:80' --recv-key C1CF6E31E
 
 # install ROS kinetic
 RUN apt update
-RUN apt install -y ros-kinetic-desktop-full \
-                   python-rosinstall
-RUN apt install -y python-wstool \
+RUN apt install --no-install-recommends -y ros-kinetic-desktop-full \
+                   python-rosinstall && rm -rf /var/lib/apt/lists/*;
+RUN apt install --no-install-recommends -y python-wstool \
                    python-rosinstall-generator \
-                   python-catkin-tools
+                   python-catkin-tools && rm -rf /var/lib/apt/lists/*;
 
 # install common deps
-RUN curl -sSL https://raw.githubusercontent.com/PX4/Devguide/v1.8.0/build_scripts/ubuntu_sim_common_deps.sh | bash
+RUN curl -f -sSL https://raw.githubusercontent.com/PX4/Devguide/v1.8.0/build_scripts/ubuntu_sim_common_deps.sh | bash
 
 # update rosdep
 RUN rm -rf /etc/ros/rosdep/sources.list.d/20-default.list
@@ -69,23 +69,23 @@ RUN echo "source /home/${username}/catkin_ws/devel/setup.bash" >> /home/${userna
 
 # install geographiclib
 USER root
-RUN curl -sSL https://raw.githubusercontent.com/mavlink/mavros/master/mavros/scripts/install_geographiclib_datasets.sh | bash
+RUN curl -f -sSL https://raw.githubusercontent.com/mavlink/mavros/master/mavros/scripts/install_geographiclib_datasets.sh | bash
 
 # update gazebo so that gazebo is newer than 7.4
 RUN apt purge gazebo* libgazebo* -y
 RUN sh -c 'echo "deb http://packages.osrfoundation.org/gazebo/ubuntu-stable `lsb_release -cs` main" > /etc/apt/sources.list.d/gazebo-stable.list'
 
-RUN apt install wget
+RUN apt install -y --no-install-recommends wget && rm -rf /var/lib/apt/lists/*;
 RUN wget https://packages.osrfoundation.org/gazebo.key -O - | sudo apt-key add -
 
 RUN apt update
-RUN apt install gazebo7 libgazebo7-dev -y
+RUN apt install --no-install-recommends gazebo7 libgazebo7-dev -y && rm -rf /var/lib/apt/lists/*;
 
 # install opencv dependencies
 WORKDIR /home/${username}
-RUN apt install build-essential -y
-RUN apt install cmake git libgtk2.0-dev pkg-config libavcodec-dev libavformat-dev libswscale-dev -y
-RUN apt install python-dev python-numpy libtbb2 libtbb-dev libjpeg-dev libpng-dev libtiff-dev libjasper-dev libdc1394-22-dev -y
+RUN apt install --no-install-recommends build-essential -y && rm -rf /var/lib/apt/lists/*;
+RUN apt install --no-install-recommends cmake git libgtk2.0-dev pkg-config libavcodec-dev libavformat-dev libswscale-dev -y && rm -rf /var/lib/apt/lists/*;
+RUN apt install --no-install-recommends python-dev python-numpy libtbb2 libtbb-dev libjpeg-dev libpng-dev libtiff-dev libjasper-dev libdc1394-22-dev -y && rm -rf /var/lib/apt/lists/*;
 
 # clone opencv 3.4.12
 USER ${username}
@@ -103,8 +103,8 @@ USER root
 RUN make clean && make && make install
 
 # install dronedoc dependencies
-RUN apt install protobuf-compiler libignition-math2-dev -y
-RUN apt install ros-kinetic-amcl \
+RUN apt install --no-install-recommends protobuf-compiler libignition-math2-dev -y && rm -rf /var/lib/apt/lists/*;
+RUN apt install --no-install-recommends ros-kinetic-amcl \
                 ros-kinetic-base-local-planner \
                 ros-kinetic-carrot-planner \
                 ros-kinetic-clear-costmap-recovery \
@@ -119,17 +119,17 @@ RUN apt install ros-kinetic-amcl \
                 ros-kinetic-nav-core \
                 ros-kinetic-navfn \
                 ros-kinetic-rotate-recovery \
-                ros-kinetic-voxel-grid -y
-RUN apt install ros-kinetic-hector-slam -y
-RUN apt install ros-kinetic-octomap-mapping -y
+                ros-kinetic-voxel-grid -y && rm -rf /var/lib/apt/lists/*;
+RUN apt install --no-install-recommends ros-kinetic-hector-slam -y && rm -rf /var/lib/apt/lists/*;
+RUN apt install --no-install-recommends ros-kinetic-octomap-mapping -y && rm -rf /var/lib/apt/lists/*;
 # RUN apt install ros-kinetic-turtlebot-teleop \
 #                 ros-kinetic-turtlebot-gazebo \
 #                 ros-kinetic-turtlebot-bringup -y
-RUN apt install ros-kinetic-moveit-* -y
-RUN apt install ros-kinetic-ompl -y
-RUN apt install ros-kinetic-eband-local-planner \
-                ros-kinetic-teb-local-planner -y
-RUN apt install ros-kinetic-gazebo-ros-pkgs -y
+RUN apt install --no-install-recommends ros-kinetic-moveit-* -y && rm -rf /var/lib/apt/lists/*;
+RUN apt install --no-install-recommends ros-kinetic-ompl -y && rm -rf /var/lib/apt/lists/*;
+RUN apt install --no-install-recommends ros-kinetic-eband-local-planner \
+                ros-kinetic-teb-local-planner -y && rm -rf /var/lib/apt/lists/*;
+RUN apt install --no-install-recommends ros-kinetic-gazebo-ros-pkgs -y && rm -rf /var/lib/apt/lists/*;
 
 # clone dronedoc and build
 USER ${username}
@@ -168,6 +168,6 @@ ENV NVIDIA_DRIVER_CAPABILITIES \
 
 # install packages for test and development
 USER root
-RUN apt install vim tmux -y
+RUN apt install --no-install-recommends vim tmux -y && rm -rf /var/lib/apt/lists/*;
 
 CMD ["bash"]