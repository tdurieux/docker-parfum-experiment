diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/discovery-labs/dcompass/packages/server/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/discovery-labs/dcompass/packages/server/Dockerfile/repaired.Dockerfile
index cd2fa7b..681588b 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/discovery-labs/dcompass/packages/server/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/discovery-labs/dcompass/packages/server/Dockerfile/repaired.Dockerfile
@@ -4,9 +4,9 @@ ENV NODE_ENV=production
 WORKDIR /var/www/api
 EXPOSE 5000
 COPY package.json ./package.json
-RUN yarn config list
+RUN yarn config list && yarn cache clean;
 # Makes sure we're doing a clean install of our dependencies and if dependencies in the package lock do not match those in package.json, npm ci will exit with an error, instead of updating the package lock.
-RUN yarn cache clean && yarn install --frozen-lockfile --ignore-scripts
+RUN yarn cache clean && yarn install --frozen-lockfile --ignore-scripts && yarn cache clean;
 # We might use this if our app doesn't emit the correct exit signals
 # ENV TINI_VERSION v0.18.0
 # ADD https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini /usr/local/bin/tini
@@ -16,7 +16,7 @@ RUN yarn cache clean && yarn install --frozen-lockfile --ignore-scripts
 FROM base AS dev
 ENV NODE_ENV=development
 COPY . .
-RUN yarn install --ignore-scripts --production=false
+RUN yarn install --ignore-scripts --production=false && yarn cache clean;
 CMD [ "yarn", "start:dev" ]
 
 ## build