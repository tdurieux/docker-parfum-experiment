diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/cloudogu/gitops-playground/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/cloudogu/gitops-playground/Dockerfile/repaired.Dockerfile
index 131985e..7fcb7e0 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/cloudogu/gitops-playground/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/cloudogu/gitops-playground/Dockerfile/repaired.Dockerfile
@@ -11,7 +11,7 @@ COPY pom.xml /app/
 RUN ./mvnw dependency:go-offline
 
 FROM alpine as downloader
-# When updating, 
+# When updating,
 # * also update the checksum found at https://dl.k8s.io/release/v${K8S_VERSION}/bin/linux/amd64/kubectl.sha256
 # * also update k8s-related versions in vars.tf, init-cluster.sh and apply.sh
 ARG K8S_VERSION=1.21.2
@@ -24,7 +24,7 @@ RUN apk add --no-cache \
       gnupg \
       outils-sha256 \
       git \
-      bash curl unzip 
+      bash curl unzip
 
 RUN mkdir -p /dist/usr/local/bin
 ENV HOME=/dist/home
@@ -34,13 +34,13 @@ RUN chmod a=rwx -R ${HOME}
 WORKDIR /tmp
 
 # Helm
-RUN wget -q -O helm.tar.gz https://get.helm.sh/helm-v${HELM_VERSION}-linux-amd64.tar.gz 
+RUN wget -q -O helm.tar.gz https://get.helm.sh/helm-v${HELM_VERSION}-linux-amd64.tar.gz
 RUN wget -q -O helm.tar.gz.asc https://github.com/helm/helm/releases/download/v${HELM_VERSION}/helm-v${HELM_VERSION}-linux-amd64.tar.gz.asc
-RUN tar -xf helm.tar.gz
+RUN tar -xf helm.tar.gz && rm helm.tar.gz
 # Without the two spaces the check fails!
 RUN echo "${HELM_CHECKSUM}  helm.tar.gz" | sha256sum -c
-RUN wget -q https://raw.githubusercontent.com/helm/helm/main/KEYS -O- | gpg --import
-RUN gpg --batch --verify helm.tar.gz.asc helm.tar.gz
+RUN wget -q https://raw.githubusercontent.com/helm/helm/main/KEYS -O- | gpg --batch --import
+RUN gpg --batch --verify helm.tar.gz.asc helm.tar.gz && rm helm.tar.gz.asc
 RUN mv linux-amd64/helm /dist/usr/local/bin
 
 # Kubectl
@@ -53,7 +53,7 @@ RUN mv /tmp/kubectl /dist/usr/local/bin/kubectl
 
 # External Repos used in GOP
 WORKDIR /dist/gop/repos
-RUN git clone --bare https://github.com/cloudogu/spring-petclinic.git 
+RUN git clone --bare https://github.com/cloudogu/spring-petclinic.git
 RUN git clone --bare https://github.com/cloudogu/spring-boot-helm-chart.git
 RUN git clone --bare https://github.com/cloudogu/gitops-build-lib.git
 RUN git clone --bare https://github.com/cloudogu/ces-build-lib.git
@@ -72,23 +72,23 @@ ENV MAVEN_OPTS=-Dmaven.repo.local=/mvn
 RUN gu install native-image
 
 # Set up musl, in order to produce a static image compatible to alpine
-# See 
-# https://github.com/oracle/graal/issues/2824 and 
+# See
+# https://github.com/oracle/graal/issues/2824 and
 # https://github.com/oracle/graal/blob/vm-ce-22.0.0.2/docs/reference-manual/native-image/StaticImages.md
 ARG RESULT_LIB="/musl"
 RUN mkdir ${RESULT_LIB} && \
-    curl -L -o musl.tar.gz https://more.musl.cc/10.2.1/x86_64-linux-musl/x86_64-linux-musl-native.tgz && \
+    curl -f -L -o musl.tar.gz https://more.musl.cc/10.2.1/x86_64-linux-musl/x86_64-linux-musl-native.tgz && \
     tar -xvzf musl.tar.gz -C ${RESULT_LIB} --strip-components 1 && \
-    cp /usr/lib/gcc/x86_64-redhat-linux/8/libstdc++.a ${RESULT_LIB}/lib/
+    cp /usr/lib/gcc/x86_64-redhat-linux/8/libstdc++.a ${RESULT_LIB}/lib/ && rm musl.tar.gz
 ENV CC=/musl/bin/gcc
-RUN curl -L -o zlib.tar.gz https://zlib.net/zlib-1.2.12.tar.gz && \
+RUN curl -f -L -o zlib.tar.gz https://zlib.net/zlib-1.2.12.tar.gz && \
     mkdir zlib && tar -xvzf zlib.tar.gz -C zlib --strip-components 1 && \
-    cd zlib && ./configure --static --prefix=/musl && \
+    cd zlib && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --static --prefix=/musl && \
     make && make install && \
     cd / && rm -rf /zlib && rm -f /zlib.tar.gz
 ENV PATH="$PATH:/musl/bin"
 
-# Provide binaries used by apply-ng, so our runs with native-image-agent dont fail 
+# Provide binaries used by apply-ng, so our runs with native-image-agent dont fail
 # with "java.io.IOException: Cannot run program "kubectl"..." etc.
 RUN microdnf install iproute
 # Copy only binaries, not jenkins plugins. Avoids having to rebuild native image only plugin changes