{
  "startTime": 1674251430005,
  "endTime": 1674251430629,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 35
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG NODE_VERSION=15-alpine\nFROM node:$NODE_VERSION as node\n\nENV NODE_ENV=production\n\nWORKDIR /app\n\n# BUILD ENVIRONMENTS\nFROM node as prepare\n\nCOPY package.json yarn.lock /app/\n\nCOPY packages/biz/package.json /app/packages/biz/package.json\nRUN node -e \"fs.writeFileSync('/app/packages/biz/package.json', JSON.stringify({ ...JSON.parse(fs.readFileSync('/app/packages/biz/package.json')), version: '0.0.0' }));\"\n\nCOPY packages/app/package.json  /app/packages/app/package.json\nRUN node -e \" \\\n  const package = JSON.parse(fs.readFileSync('/app/packages/app/package.json')); \\\n  const packageZero = { ...package, version: '0.0.0', dependencies: {  \\\n    ...package.dependencies, \\\n    \\\"@emjpm/biz\\\": \\\"0.0.0\\\"  \\\n  } };  \\\n  fs.writeFileSync('/app/packages/app/package.json', JSON.stringify(packageZero));\"\n\n\n\nFROM prepare as builder\nRUN yarn --frozen-lockfile --production --ignore-scripts\n\n\nCOPY packages/app/src /app/packages/app/src/\nCOPY packages/app/.eslintrc.yml  /app/packages/app/.eslintrc.yml\nCOPY packages/app/public /app/packages/app/public/\nCOPY lerna.json /app/packages/app/src/lerna.ci.json\n\nCOPY packages/biz/src /app/packages/biz/src/\nCOPY packages/biz/.eslintrc.yml  /app/packages/biz/.eslintrc.yml\n\nARG REACT_APP_SENTRY_PUBLIC_DSN\nENV REACT_APP_SENTRY_PUBLIC_DSN=$REACT_APP_SENTRY_PUBLIC_DSN\n\nRUN yarn workspaces run postinstall && yarn cache clean;\nRUN yarn workspace @emjpm/app build && yarn cache clean;\n\n# SERVER\nFROM node as server\n\nENV NODE_ENV=production\nENV PORT=3000\n\nWORKDIR /app\n\nRUN npm i -g serve && npm cache clean --force;\n\nUSER 1000\n\nCMD [\"serve\",\"-s\",\"build\"]\n\nCOPY --from=builder /app/packages/app/build /app/build/\n"
}