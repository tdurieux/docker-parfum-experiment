{
  "startTime": 1674248781747,
  "endTime": 1674248782151,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 35
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG NODE_VERSION=15-alpine\nFROM node:$NODE_VERSION as node\n\nENV NODE_ENV=production\n\nWORKDIR /app\n\n# BUILD ENVIRONMENTS\nFROM node as prepare\n\nCOPY package.json yarn.lock /app/\n\nCOPY packages/biz/package.json /app/packages/biz/package.json\nRUN node -e \"fs.writeFileSync('/app/packages/biz/package.json', JSON.stringify({ ...JSON.parse(fs.readFileSync('/app/packages/biz/package.json')), version: '0.0.0' }));\"\n\nCOPY packages/api/package.json  /app/packages/api/package.json\nRUN node -e \" \\\n  const package = JSON.parse(fs.readFileSync('/app/packages/api/package.json')); \\\n  const packageZero = { ...package, version: '0.0.0', dependencies: {  \\\n    ...package.dependencies, \\\n    \\\"@emjpm/biz\\\": \\\"0.0.0\\\"  \\\n  } };  \\\n  fs.writeFileSync('/app/packages/api/package.json', JSON.stringify(packageZero));\"\n\nFROM prepare as builder\nRUN yarn --frozen-lockfile --production --ignore-scripts\n\nCOPY packages/api/src /app/packages/api/src/\nCOPY packages/api/.eslintrc.yml  /app/packages/api/.eslintrc.yml\nCOPY packages/api/knexfile.js  /app/packages/api/knexfile.js\nCOPY lerna.json /app/packages/api/src/lerna.ci.json\n\nCOPY packages/biz/src /app/packages/biz/src/\nCOPY packages/biz/.eslintrc.yml  /app/packages/biz/.eslintrc.yml\n\nRUN yarn workspaces run postinstall && yarn cache clean;\nRUN yarn workspace @emjpm/api build && yarn cache clean;\n\n# SERVER\nFROM node as server\n\nENV NODE_ENV=production\n\n# p7zip is used to unzip encrypted file from OCMI\n# p7zip is required by https://github.com/quentinrossetti/node-7z#installation\nRUN apk add --update --no-cache p7zip\n\nWORKDIR /app\n\nUSER 1000\n\nCMD [\"node\",\"/app/dist/index.js\"]\n\nCOPY --from=builder /app/packages/api/dist/ /app/dist/\n"
}