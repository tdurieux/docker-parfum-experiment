{
  "startTime": 1674249142531,
  "endTime": 1674249144029,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 7,
        "columnEnd": 32
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 7,
        "columnEnd": 46
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 7,
        "columnEnd": 38
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.6\n\n# metadata\nMAINTAINER PhenoMeNal-H2020 Project ( phenomenal-h2020-users@googlegroups.com )\n\n# allow user defined Git repository\nARG git_url\nARG git_branch\n\n# set the term var\nENV TERM xterm-256color\n\n# wft4galaxy path\nENV WFT4GALAXY_PATH /opt/wft4galaxy\n\n# set Git repository url\nENV WFT4GALAXY_REPOSITORY_URL ${git_url:-\"https://github.com/phnmnl/wft4galaxy\"}\n\n# wft4galaxy branch\nENV WFT4GALAXY_BRANCH ${git_branch:-develop}\n\n# install base packages\nRUN echo \"Installing dependencies\" >&2 \\\n    && apk update && apk add \\\n        bash \\\n        build-base \\\n        gcc \\\n        git \\\n        iputils \\\n        make \\\n        nano \\\n        py-lxml \\\n        py-pip \\\n        py-setuptools \\\n        python \\\n        python-dev \\\n        vim \\\n    && pip install --no-cache-dir --upgrade pip \\\n    && pip install --no-cache-dir ipython jupyter bash_kernel \\\n    && echo \"Cloning wft4galaxy: branch=${WFT4GALAXY_BRANCH} url=${WFT4GALAXY_REPOSITORY_URL}\" >&2 \\\n    && git clone -b ${WFT4GALAXY_BRANCH} ${WFT4GALAXY_REPOSITORY_URL} ${WFT4GALAXY_PATH} \\\n    && cd ${WFT4GALAXY_PATH} \\\n    && pip install --no-cache-dir -r requirements.txt \\\n    && python -m bash_kernel.install \\\n    && echo \"Building and installing wft4galaxy\" >&2 \\\n    && python setup.py install \\\n    && rm -rf /var/cache/apk/*\n\n# setup bash custom prompt (PS1)\nADD utils/docker/bashrc /root/.bashrc\n\n# build a tutorial folder within the user's home\nRUN mkdir ${HOME}/tutorial && \\\n    ln -s ${WFT4GALAXY_PATH}/examples ${HOME}/tutorial/examples && \\\n    ln -s ${WFT4GALAXY_PATH}/docs/notebooks ${HOME}/tutorial/notebooks && \\\n    ln -s ${WFT4GALAXY_PATH}/docs/images ${HOME}/tutorial/images\n\n# update the working dir\nWORKDIR /root\n\n# add container entrypoint\nCOPY utils/docker/develop/entrypoint.sh /usr/local/bin/entrypoint.sh\nCOPY utils/docker/entrypoint-argparser.sh /usr/local/bin/entrypoint-argparser.sh\n\n# set the entrypoint\nENTRYPOINT [\"entrypoint.sh\"]\n"
}