{
  "startTime": 1674252677487,
  "endTime": 1674252678225,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 72
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 72
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 41,
        "columnEnd": 106
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 78
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 30
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM centos:7\nMAINTAINER Hortonworks\n\nRUN yum install epel-release -y && yum clean all && rm -rf /var/cache/yum\nRUN yum update -y && yum clean all\n\n#Setting up systemd\nENV container docker\nRUN (cd /lib/systemd/system/sysinit.target.wants/; for i in *; do [ $i == systemd-tmpfiles-setup.service ] || rm -f $i; done); \\\nrm -f /lib/systemd/system/multi-user.target.wants/*;\\\nrm -f /etc/systemd/system/*.wants/*;\\\nrm -f /lib/systemd/system/local-fs.target.wants/*; \\\nrm -f /lib/systemd/system/sockets.target.wants/*udev*; \\\nrm -f /lib/systemd/system/sockets.target.wants/*initctl*; \\\nrm -f /lib/systemd/system/basic.target.wants/*;\\\nrm -f /lib/systemd/system/anaconda.target.wants/*;\nVOLUME [ \"/sys/fs/cgroup\" ]\nENTRYPOINT [\"/usr/sbin/init\"]\n\nRUN yum install -y systemd* && yum clean all && rm -rf /var/cache/yum\n\nRUN yum install -y yum-utils yum-plugin-ovl tar git curl bind-utils unzip wget && yum clean all && rm -rf /var/cache/yum\n\n# Setup sshd\nRUN yum install -y openssh-server openssh-clients && yum clean all && rm -rf /var/cache/yum\nRUN systemctl enable sshd\n\n# kerberos client\nRUN yum install -y krb5-workstation && yum clean all && rm -rf /var/cache/yum\n\n# initscripts (service wrapper for servicectl) is need othewise the Ambari is unable to start postgresql\nRUN yum install -y initscripts && yum clean all && rm -rf /var/cache/yum\n\nRUN curl -f -o /usr/bin/jq https://stedolan.github.io/jq/download/linux64/jq && chmod +x /usr/bin/jq\n\nENV JDK_ARTIFACT jdk-7u67-linux-x64.tar.gz\nENV JDK_VERSION jdk1.7.0_67\n\n# install Ambari specified 1.7 jdk\nRUN mkdir /usr/jdk64 && cd /usr/jdk64 && wget https://public-repo-1.hortonworks.com/ARTIFACTS/$JDK_ARTIFACT && \\\n    tar -xf $JDK_ARTIFACT && rm -f $JDK_ARTIFACT\nENV JAVA_HOME /usr/jdk64/$JDK_VERSION\nENV PATH $PATH:$JAVA_HOME/bin\n\n# jce\nADD http://public-repo-1.hortonworks.com/ARTIFACTS/UnlimitedJCEPolicyJDK7.zip $JAVA_HOME/jre/lib/security/\nRUN cd $JAVA_HOME/jre/lib/security && unzip UnlimitedJCEPolicyJDK7.zip && rm -f UnlimitedJCEPolicyJDK7.zip && mv UnlimitedJCEPolicy/*jar . && rm -rf UnlimitedJCEPolicy\n\nADD etc/yum.conf /etc/yum.conf\n\nENV PS1 \"[\\u@docker-ambari \\W]# \"\n"
}