diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/sequenceiq/docker-ambari/ambari-base/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/sequenceiq/docker-ambari/ambari-base/Dockerfile/repaired.Dockerfile
index 8ee4a18..afe67eb 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/sequenceiq/docker-ambari/ambari-base/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/sequenceiq/docker-ambari/ambari-base/Dockerfile/repaired.Dockerfile
@@ -1,7 +1,7 @@
 FROM centos:7
 MAINTAINER Hortonworks
 
-RUN yum install epel-release -y && yum clean all
+RUN yum install epel-release -y && yum clean all && rm -rf /var/cache/yum
 RUN yum update -y && yum clean all
 
 #Setting up systemd
@@ -17,27 +17,27 @@ rm -f /lib/systemd/system/anaconda.target.wants/*;
 VOLUME [ "/sys/fs/cgroup" ]
 ENTRYPOINT ["/usr/sbin/init"]
 
-RUN yum install -y systemd* && yum clean all
+RUN yum install -y systemd* && yum clean all && rm -rf /var/cache/yum
 
-RUN yum install -y yum-utils yum-plugin-ovl tar git curl bind-utils unzip wget && yum clean all
+RUN yum install -y yum-utils yum-plugin-ovl tar git curl bind-utils unzip wget && yum clean all && rm -rf /var/cache/yum
 
 # Setup sshd
-RUN yum install -y openssh-server openssh-clients && yum clean all
+RUN yum install -y openssh-server openssh-clients && yum clean all && rm -rf /var/cache/yum
 RUN systemctl enable sshd
 
 # kerberos client
-RUN yum install -y krb5-workstation && yum clean all
+RUN yum install -y krb5-workstation && yum clean all && rm -rf /var/cache/yum
 
 # initscripts (service wrapper for servicectl) is need othewise the Ambari is unable to start postgresql
-RUN yum install -y initscripts && yum clean all
+RUN yum install -y initscripts && yum clean all && rm -rf /var/cache/yum
 
-RUN curl -o /usr/bin/jq http://stedolan.github.io/jq/download/linux64/jq && chmod +x /usr/bin/jq
+RUN curl -f -o /usr/bin/jq https://stedolan.github.io/jq/download/linux64/jq && chmod +x /usr/bin/jq
 
 ENV JDK_ARTIFACT jdk-7u67-linux-x64.tar.gz
 ENV JDK_VERSION jdk1.7.0_67
 
 # install Ambari specified 1.7 jdk
-RUN mkdir /usr/jdk64 && cd /usr/jdk64 && wget http://public-repo-1.hortonworks.com/ARTIFACTS/$JDK_ARTIFACT && \
+RUN mkdir /usr/jdk64 && cd /usr/jdk64 && wget https://public-repo-1.hortonworks.com/ARTIFACTS/$JDK_ARTIFACT && \
     tar -xf $JDK_ARTIFACT && rm -f $JDK_ARTIFACT
 ENV JAVA_HOME /usr/jdk64/$JDK_VERSION
 ENV PATH $PATH:$JAVA_HOME/bin
@@ -46,6 +46,6 @@ ENV PATH $PATH:$JAVA_HOME/bin
 ADD http://public-repo-1.hortonworks.com/ARTIFACTS/UnlimitedJCEPolicyJDK7.zip $JAVA_HOME/jre/lib/security/
 RUN cd $JAVA_HOME/jre/lib/security && unzip UnlimitedJCEPolicyJDK7.zip && rm -f UnlimitedJCEPolicyJDK7.zip && mv UnlimitedJCEPolicy/*jar . && rm -rf UnlimitedJCEPolicy
 
-ADD etc/yum.conf /etc/yum.conf 
+ADD etc/yum.conf /etc/yum.conf
 
 ENV PS1 "[\u@docker-ambari \W]# "