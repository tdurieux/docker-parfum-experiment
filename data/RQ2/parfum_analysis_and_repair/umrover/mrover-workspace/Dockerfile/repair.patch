diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/umrover/mrover-workspace/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/umrover/mrover-workspace/Dockerfile/repaired.Dockerfile
index e84943b..8113970 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/umrover/mrover-workspace/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/umrover/mrover-workspace/Dockerfile/repaired.Dockerfile
@@ -31,15 +31,15 @@ RUN set -x && \
     sed -i 's/# \(.*multiverse$\)/\1/g' /etc/apt/sources.list && \
     apt-get update && \
     apt-get -y upgrade && \
-    apt-get install -y build-essential \
+    apt-get install --no-install-recommends -y build-essential \
     software-properties-common \
     apt-transport-https \
     git \
     wget \
     && apt-add-repository ppa:ansible/ansible && \
     apt-get update && \
-    apt-get install -y ansible && \
-    echo ttf-mscorefonts-installer msttcorefonts/accepted-mscorefonts-eula select true | debconf-set-selections
+    apt-get install --no-install-recommends -y ansible && \
+    echo ttf-mscorefonts-installer msttcorefonts/accepted-mscorefonts-eula select true | debconf-set-selections && rm -rf /var/lib/apt/lists/*;
 
 RUN ansible-playbook -i "localhost," -c local /tmp/ansible/devbox.yml
 
@@ -64,9 +64,9 @@ RUN apt-get update -y && \
     libswscale-dev python3.6-dev python3-numpy libtbb2 libtbb-dev libjpeg-dev libpng-dev libtiff5-dev jasper \
     libdc1394-22-dev libeigen3-dev libtheora-dev libvorbis-dev libxvidcore-dev libx264-dev sphinx-common libtbb-dev \
     yasm libfaac-dev libopencore-amrnb-dev libopencore-amrwb-dev libopenexr-dev libgstreamer-plugins-base1.0-dev \
-    libavutil-dev libavfilter-dev libavresample-dev
+    libavutil-dev libavfilter-dev libavresample-dev && rm -rf /var/lib/apt/lists/*;
 
-RUN apt-get install -y gcc
+RUN apt-get install --no-install-recommends -y gcc && rm -rf /var/lib/apt/lists/*;
 
 RUN cd /opt && \
     wget --no-check-certificate -O opencv-3.2.0.tar.gz https://github.com/opencv/opencv/archive/3.2.0.tar.gz && \
@@ -95,15 +95,15 @@ RUN  cd /usr/local && rm -rf opencv-3.2.0
 #Install CUDA Driver
 COPY cuda-repo-ubuntu1804_10.0.130-1_amd64.deb /usr/local
 RUN cd /usr/local && \
-    apt-get update -y && apt-get upgrade -y && apt-get update && apt-get install -y gnupg2 && \
-    dpkg -i cuda-repo-ubuntu1804_10.0.130-1_amd64.deb
+    apt-get update -y && apt-get upgrade -y && apt-get update && apt-get install --no-install-recommends -y gnupg2 && \
+    dpkg -i cuda-repo-ubuntu1804_10.0.130-1_amd64.deb && rm -rf /var/lib/apt/lists/*;
 RUN apt-key adv --fetch-keys http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/7fa2af80.pub
 RUN apt-get update -y
-RUN apt-get install -y cuda-10-0   
+RUN apt-get install --no-install-recommends -y cuda-10-0 && rm -rf /var/lib/apt/lists/*;
 
 #Install ZED
-RUN apt-get update -y && apt-get upgrade -y 
-RUN apt-get install -y libturbojpeg0-dev
+RUN apt-get update -y && apt-get upgrade -y
+RUN apt-get install --no-install-recommends -y libturbojpeg0-dev && rm -rf /var/lib/apt/lists/*;
 RUN apt-get install --no-install-recommends lsb-release wget less udev sudo apt-transport-https -y && \
     apt-get update -y && \
     wget -O ZED_SDK_Linux_Ubuntu18.run https://download.stereolabs.com/zedsdk/3.2/cu100/ubuntu18 && \
@@ -111,41 +111,41 @@ RUN apt-get install --no-install-recommends lsb-release wget less udev sudo apt-
     ./ZED_SDK_Linux_Ubuntu18.run silent && \
     rm ZED_SDK_Linux_Ubuntu18.run && \
     cd /usr/local && \
-    chmod a+xwr --preserve-root --recursive zed
+    chmod a+xwr --preserve-root --recursive zed && rm -rf /var/lib/apt/lists/*;
 
 #Install VTK
 ENV TERM xterm
 RUN echo "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!INSTALLING VTK" && \
-    apt-get update -y && apt-get upgrade -y && apt-get install -y keyboard-configuration libboost-all-dev curl cmake libxt-dev && \
+    apt-get update -y && apt-get upgrade -y && apt-get install --no-install-recommends -y keyboard-configuration libboost-all-dev curl cmake libxt-dev && \
     apt-get install -y --no-install-recommends cmake git libgtk2.0-dev pkg-config libavcodec-dev libavformat-dev \
     libswscale-dev python3.6-dev python3-numpy libtbb2 libtbb-dev libjpeg-dev libpng-dev libtiff5-dev jasper \
     libdc1394-22-dev libeigen3-dev libtheora-dev libvorbis-dev libxvidcore-dev libx264-dev sphinx-common \
     libtbb-dev yasm libfaac-dev libopencore-amrnb-dev libopencore-amrwb-dev libopenexr-dev \
     libgstreamer-plugins-base1.0-dev libavutil-dev libavfilter-dev libavresample-dev && \
-    curl https://vtk.org/files/release/8.2/VTK-8.2.0.tar.gz --output VTK-8.2.0.tar.gz && \
+    curl -f https://vtk.org/files/release/8.2/VTK-8.2.0.tar.gz --output VTK-8.2.0.tar.gz && \
     tar -xvzf VTK-8.2.0.tar.gz && \
     mv VTK-8.2.0 /usr/local && \
     cd /usr/local/VTK-8.2.0/ && \
     mkdir VTK-Release-build && \
     cd VTK-Release-build/ && \
     cmake -DCMAKE_BUILD_TYPE:STRING=Release /usr/local/VTK-8.2.0/ -DVTK_USE_SYSTEM_PNG=ON && \
-    make -j1 install
+    make -j1 install && rm VTK-8.2.0.tar.gz && rm -rf /var/lib/apt/lists/*;
 
 #Intall Eigen
 RUN echo "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!INSTALLING EIGEN" && \
     cd /usr/local && \
     wget -qO- https://gitlab.com/libeigen/eigen/-/archive/3.3.7/eigen-3.3.7.tar.gz | sudo tar xz && \
-    apt install -y libblas-dev && \
+    apt install --no-install-recommends -y libblas-dev && \
     cd eigen-3.3.7 && sudo mkdir build && cd build && \
     cmake .. && \
     make install && \
-    cd ../.. && sudo rm -rf eigen-3.3.7/ && sudo rm -f eigen-3.3.7.tar.gz
+    cd ../.. && sudo rm -rf eigen-3.3.7/ && sudo rm -f eigen-3.3.7.tar.gz && rm -rf /var/lib/apt/lists/*;
 
 #Install PCL
 RUN echo "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!INSTALLING PCL" && \
-    apt-get install -y libflann-dev libgtest-dev libboost-all-dev && \
+    apt-get install --no-install-recommends -y libflann-dev libgtest-dev libboost-all-dev && \
     cd /usr/local && \
-    curl https://codeload.github.com/PointCloudLibrary/pcl/tar.gz/pcl-1.11.1 --output pcl-pcl-1.11.1.tar.gz && \
+    curl -f https://codeload.github.com/PointCloudLibrary/pcl/tar.gz/pcl-1.11.1 --output pcl-pcl-1.11.1.tar.gz && \
     tar -xvzf pcl-pcl-1.11.1.tar.gz && \
     rm pcl-pcl-1.11.1.tar.gz && \
     cd pcl-pcl-1.11.1 && \
@@ -153,4 +153,4 @@ RUN echo "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!INSTALLING PCL" && \
     cmake -DCMAKE_BUILD_TYPE=Release .. && \
     make -j1 && make install && ldconfig && \
     cd /usr/local && \
-    rm -rf pcl-pcl-1.11.1
+    rm -rf pcl-pcl-1.11.1 && rm -rf /var/lib/apt/lists/*;