{
  "startTime": 1674253431108,
  "endTime": 1674253432784,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 8
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 8
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 45,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 26
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 50
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:18.04\n\n#Setup Ansible\nENV ANSIBLE_VERSION 2.9.4\nENV DEBIAN_FRONTEND noninteractive\n\nCOPY ansible /tmp/ansible\n\nENV TZ=UTC-4\nRUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone\n\nRUN set -x && \\\n    echo \">> Adding build-dependencies...\" && \\\n    sed -i 's/# \\(.*multiverse$\\)/\\1/g' /etc/apt/sources.list && \\\n    apt-get update && \\\n    apt-get -y upgrade && \\\n    apt-get install --no-install-recommends -y build-essential \\\n    software-properties-common \\\n    apt-transport-https \\\n    git \\\n    wget \\\n    && apt-add-repository ppa:ansible/ansible && \\\n    apt-get update && \\\n    apt-get install --no-install-recommends -y ansible && \\\n    echo ttf-mscorefonts-installer msttcorefonts/accepted-mscorefonts-eula select true | debconf-set-selections && rm -rf /var/lib/apt/lists/*;\n\nRUN ansible-playbook -i \"localhost,\" -c local /tmp/ansible/devbox.yml\n\nENV ANSIBLE_GATHERING smart\nENV ANSIBLE_HOST_KEY_CHECKING false\nENV ANSIBLE_RETRY_FILES_ENABLED false\nENV ANSIBLE_ROLES_PATH /ansible/playbooks/roles\nENV ANSIBLE_SSH_PIPELINING True\nENV PYTHONPATH /ansible/lib\nENV PATH /ansible/bin:$PATH\nENV ANSIBLE_LIBRARY /ansible/library\n\nWORKDIR /root\n\nENTRYPOINT [\"/bin/bash\"]\n\n# Install OpenCV 3.2.0\nRUN apt-get update -y && \\\n    apt-get upgrade -y && \\\n    apt-get autoremove -y && \\\n    apt-get install -y --no-install-recommends cmake git libgtk2.0-dev pkg-config libavcodec-dev libavformat-dev \\ \n    libswscale-dev python3.6-dev python3-numpy libtbb2 libtbb-dev libjpeg-dev libpng-dev libtiff5-dev jasper \\\n    libdc1394-22-dev libeigen3-dev libtheora-dev libvorbis-dev libxvidcore-dev libx264-dev sphinx-common libtbb-dev \\\n    yasm libfaac-dev libopencore-amrnb-dev libopencore-amrwb-dev libopenexr-dev libgstreamer-plugins-base1.0-dev \\\n    libavutil-dev libavfilter-dev libavresample-dev && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get install --no-install-recommends -y gcc && rm -rf /var/lib/apt/lists/*;\n\nRUN cd /opt && \\\n    wget --no-check-certificate -O opencv-3.2.0.tar.gz https://github.com/opencv/opencv/archive/3.2.0.tar.gz && \\\n    tar -xzf opencv-3.2.0.tar.gz && \\\n    wget --no-check-certificate -O opencv_contrib-3.2.0.tar.gz https://github.com/opencv/opencv_contrib/archive/3.2.0.tar.gz && \\\n    tar -xzf opencv_contrib-3.2.0.tar.gz && \\\n    rm opencv-3.2.0.tar.gz && \\\n    rm opencv_contrib-3.2.0.tar.gz && \\\n    cd opencv-3.2.0 && \\\n    mkdir release && \\\n    cd release && \\\n    cmake -D WITH_CUDA=OFF -D CMAKE_BUILD_TYPE=RELEASE -D CMAKE_INSTALL_PREFIX=/usr/local \\\n    -D OPENCV_EXTRA_MODULES_PATH=/opt/opencv_contrib-3.2.0/modules -D BUILD_opencv_aruco=ON -D BUILD_opencv_bgsegm=OFF \\\n    -D BUILD_opencv_bioinspired=OFF -D BUILD_opencv_ccalib=OFF -D BUILD_opencv_cnn_3dobj=OFF -D BUILD_opencv_cvv=OFF \\\n    -D BUILD_opencv_datasets=OFF -D BUILD_opencv_dnn_objdetect=OFF -D BUILD_opencv_dnn_superres=OFF \\\n    -D BUILD_opencv_dnns_easily_fooled=OFF -D BUILD_opencv_dpm=OFF -D BUILD_opencv_face=OFF -D BUILD_opencv_fuzzy=OFF \\\n    -D BUILD_opencv_freetype=OFF -D BUILD_opencv_hdf=OFF -D BUILD_opencv_line_descriptor=OFF -D BUILD_opencv_matlab=OFF \\\n    -D BUILD_opencv_optflow=OFF -D BUILD_opencv_ovis=OFF -D BUILD_opencv_plot=OFF -D BUILD_opencv_reg=OFF \\\n    -D BUILD_opencv_rgbd=OFF -D BUILD_opencv_saliency=OFF -D BUILD_opencv_sfm=OFF -D BUILD_opencv_stereo=OFF \\\n    -D BUILD_opencv_structured_light=OFF -D BUILD_opencv_surface_matching=OFF -D BUILD_opencv_text=OFF \\\n    -D BUILD_opencv_tracking=OFF -D BUILD_opencv_xfeatures2d=OFF -D BUILD_opencv_ximgproc=OFF \\\n    -D BUILD_opencv_xobjdetect=OFF -D BUILD_opencv_xphoto=OFF /opt/opencv-3.2.0/ && make -j4 && make install && ldconfig\n\nRUN  cd /usr/local && rm -rf opencv-3.2.0"
}