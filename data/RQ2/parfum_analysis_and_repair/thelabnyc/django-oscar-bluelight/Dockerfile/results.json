{
  "startTime": 1674219224853,
  "endTime": 1674219226189,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 30
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 29,
        "columnEnd": 45
      }
    }
  ],
  "repairedDockerfile": "# =============================================================================\n# NodeJS Static Assets\n# =============================================================================\nFROM node:14 as client\n\nRUN mkdir -p /oscarbluelight/server /oscarbluelight/client\nWORKDIR /oscarbluelight/client\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y gettext && \\\n    rm -rf /var/lib/apt/lists/*\n\n# Install node_modules\nCOPY client/package.json /oscarbluelight/client/package.json\nCOPY client/yarn.lock /oscarbluelight/client/yarn.lock\nRUN yarn --force-lockfile && yarn cache clean;\nVOLUME /oscarbluelight/client/node_modules\n\n# Include NPM's .bin directory in the sys path\nENV PATH /oscarbluelight/client/node_modules/.bin:$PATH\n\n# Add source\nCOPY client/ /oscarbluelight/client/\n\n# Compile static assets\nENV NODE_ENV production\nRUN webpack\n\n# Set entry point so that packages are always updated before compiling things\nENTRYPOINT [\"/oscarbluelight/client/entrypoint.sh\"]\nCMD [\"webpack\", \"--watch\"]\n\n\n# =============================================================================\n# Python / Django Application Server\n# =============================================================================\nFROM python:3.9 as server\n\nRUN mkdir -p /oscarbluelight/server /oscarbluelight/client\nWORKDIR /oscarbluelight/server\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y gettext && \\\n    rm -rf /var/lib/apt/lists/*\n\nCOPY server/ /oscarbluelight/server/\nRUN pip install --no-cache-dir -e .[development]\n\nRUN mkdir /oscarbluelight/tox\nENV TOX_WORK_DIR='/oscarbluelight/tox'\n\n# Set entry point so that packages are always updated before compiling things\nENTRYPOINT [\"/oscarbluelight/server/entrypoint.sh\"]\nCMD [\"python\", \"sandbox/manage.py\", \"runserver\"]\n"
}