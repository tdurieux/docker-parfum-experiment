{
  "startTime": 1674251048468,
  "endTime": 1674251049118,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 72
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 27
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 54
      }
    }
  ],
  "repairedDockerfile": "# deps builds binaries in an isolated environment to avoid\n# funkiness in the hermetic build.\nFROM golang:1.17-buster as deps\nWORKDIR /workspace\n# Have to clone and install this as the go.mod uses replace directives.\nRUN git clone --depth 1 --branch v0.53.1 https://github.com/prometheus-operator/prometheus-operator  \\\n  && cd prometheus-operator \\\n  && go install ./cmd/po-docgen\nRUN go install sigs.k8s.io/controller-tools/cmd/controller-gen@v0.7.0\n\n# hermetic is a lite copy of the repo resources used in building\n# testing in a hermetic, idempotent, and reproducable environment.\nFROM golang:1.17-buster AS hermetic\nCOPY --from=deps /go/bin /go/bin\nARG RUNCMD='go fmt ./...'\nWORKDIR /workspace\n# Separate COPY directives to take advantage of docker's build cache.\n# Least-changed dirs should go first.\nCOPY vendor vendor\nCOPY hack hack\nCOPY go.mod go.mod\nCOPY go.sum go.sum\nCOPY examples examples\nCOPY manifests manifests\nCOPY cmd cmd\nCOPY doc doc\nCOPY pkg pkg\n# Init a dummy git repo so we can check if generated code changes via\n# git diff.\nRUN git config --global user.email \"test@test.com\" \\\n\t&& git init && git add . && git commit -am 'base'\n# Hack to get multiline build arg to run properly.\nRUN echo ${RUNCMD} | sh && echo 'done'\n\n# sync is used to copy all auto-generated files to a different context.\n# Usually this is used to mirror the changes back to the host machine.\nFROM scratch as sync\nCOPY --from=hermetic /workspace/go.mod go.mod\nCOPY --from=hermetic /workspace/go.sum go.sum\nCOPY --from=hermetic /workspace/cmd cmd\nCOPY --from=hermetic /workspace/doc doc\nCOPY --from=hermetic /workspace/examples examples\nCOPY --from=hermetic /workspace/manifests manifests\nCOPY --from=hermetic /workspace/pkg pkg\nCOPY --from=hermetic /workspace/vendor vendor.tmp\n\n## kindtest image for running tests against kind cluster in hermetic environment.\nFROM golang:1.17-buster as buildbase\nFROM google/cloud-sdk:slim as kindtest\n\nWORKDIR /build\n\n# Install go.\nCOPY --from=buildbase /usr/local/go /usr/local\n\n# Install kubectl.\nRUN apt-get install -y --no-install-recommends kubectl && rm -rf /var/lib/apt/lists/*;\n\n# Install kind.\nRUN curl -f -Lo ./kind https://kind.sigs.k8s.io/dl/v0.11.1/kind-linux-amd64\nRUN install -o root -g root -m 0755 kind /usr/local/bin/kind \\\n  && rm kind\n\n# Get resources into image.\nCOPY . ."
}