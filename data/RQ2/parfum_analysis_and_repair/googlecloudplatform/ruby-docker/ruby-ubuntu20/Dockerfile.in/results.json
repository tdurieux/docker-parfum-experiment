{
  "startTime": 1674215604776,
  "endTime": 1674215606397,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 95,
        "lineEnd": 95,
        "columnStart": 8,
        "columnEnd": 99
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 84,
        "lineEnd": 84,
        "columnStart": 7,
        "columnEnd": 107
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 88,
        "lineEnd": 89,
        "columnStart": 23,
        "columnEnd": 16
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright 2018 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n\n# This is the base Dockerfile for an App Engine Ruby runtime.\n# Dockerfiles for App Engine Ruby apps should inherit FROM this image.\n#\n# Installs dependencies for the following common gems:\n#\n# gems             dependencies\n# ------------------------------------------------------------------\n# curb             libcurl3, libcurl3-gnutls, libcurl4-openssl-dev\n# pg               libpq-dev\n# rmagick          imagemagick, libmagickwand-dev\n# nokogiri         libxml2-dev, libxslt-dev\n# sqlite3          libsqlite3-dev\n# mysql2           libmysqlclient-dev\n# paperclip        file\n# charlock_holmes  libicu-dev\n# rugged           libgit2-dev\n\n\nFROM gcr.io/gcp-runtimes/ubuntu_20_0_4\n\nARG bundler_version\nARG nodejs_version\nARG ssl10_version\n\nENV RBENV_ROOT=/opt/rbenv \\\n    DEFAULT_BUNDLER_VERSION=${bundler_version}\n\nARG DEBIAN_FRONTEND=noninteractive\n\nRUN apt-get update -y \\\n    && apt-get install -y -q --no-install-recommends \\\n        apt-utils \\\n        autoconf \\\n        build-essential \\\n        ca-certificates \\\n        cmake \\\n        curl \\\n        file \\\n        git \\\n        imagemagick \\\n        libcurl3-gnutls \\\n        libcurl4 \\\n        libcurl4-openssl-dev \\\n        libffi-dev \\\n        libgdbm-dev \\\n        libgmp-dev \\\n        libicu-dev \\\n        libjemalloc-dev \\\n        libjemalloc2 \\\n        libmagickwand-dev \\\n        libmysqlclient-dev \\\n        libncurses5-dev \\\n        libpq-dev \\\n        libqdbm-dev \\\n        libreadline6-dev \\\n        libsqlite3-dev \\\n        libssl-dev \\\n        libxml2-dev \\\n        libxslt-dev \\\n        libvips-dev \\\n        libyaml-dev \\\n        libz-dev \\\n        systemtap \\\n        tzdata \\\n        wget \\\n    && apt-get install -y -q --no-install-recommends libgit2-dev \\\n    && apt-get upgrade -yq \\\n    && apt-get clean \\\n    && rm -f /var/lib/apt/lists/*_* \\\n    && wget https://security.ubuntu.com/ubuntu/pool/main/o/openssl1.0/libssl1.0.0_${ssl10_version}_amd64.deb \\\n    && dpkg -i libssl1.0.0_${ssl10_version}_amd64.deb \\\n    && rm libssl1.0.0_${ssl10_version}_amd64.deb \\\n@@IF_SSL10_DEV@@ && apt-get remove --purge -yq libssl-dev libcurl4-openssl-dev \\\n@@IF_SSL10_DEV@@ && wget https://security.ubuntu.com/ubuntu/pool/main/o/openssl1.0/libssl1.0-dev_${ssl10_version}_amd64.deb \\\n@@IF_SSL10_DEV@@ && dpkg -i libssl1.0-dev_${ssl10_version}_amd64.deb \\\n@@IF_SSL10_DEV@@ && rm libssl1.0-dev_${ssl10_version}_amd64.deb \\\n    && mkdir -p /opt/nodejs \\\n    && rm -f /etc/ImageMagick-6/policy.xml \\\n    && git clone https://github.com/sstephenson/rbenv.git ${RBENV_ROOT} \\\n    && git clone https://github.com/sstephenson/ruby-build.git ${RBENV_ROOT}/plugins/ruby-build \\\n    && ( curl -f -s https://nodejs.org/dist/v${nodejs_version}/node-v${nodejs_version}-linux-x64.tar.gz \\\n        | tar xzf - --directory=/opt/nodejs --strip-components=1) \\\n    && ln -s ${RBENV_ROOT} /rbenv \\\n    && ln -s /opt/nodejs /nodejs\n\nCOPY files /root\n\nENV PATH=/opt/nodejs/bin:${RBENV_ROOT}/shims:${RBENV_ROOT}/bin:${PATH} \\\n    MALLOC_ARENA_MAX=2 \\\n    RACK_ENV=production \\\n    RAILS_ENV=production \\\n    APP_ENV=production \\\n    RAILS_SERVE_STATIC_FILES=true \\\n    RAILS_LOG_TO_STDOUT=true \\\n    NOKOGIRI_USE_SYSTEM_LIBRARIES=1 \\\n    PORT=8080\n\n# Initialize entrypoint\nWORKDIR /app\nEXPOSE 8080\nENTRYPOINT []\nCMD []\n"
}