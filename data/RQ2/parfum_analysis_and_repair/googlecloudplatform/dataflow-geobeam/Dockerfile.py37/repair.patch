diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/googlecloudplatform/dataflow-geobeam/Dockerfile.py37 b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/googlecloudplatform/dataflow-geobeam/Dockerfile.py37/repaired.Dockerfile
index d6830f3..e14808c 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/googlecloudplatform/dataflow-geobeam/Dockerfile.py37
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/googlecloudplatform/dataflow-geobeam/Dockerfile.py37/repaired.Dockerfile
@@ -22,13 +22,13 @@ ENV CCACHE_DISABLE=1
 ENV PATH=$PATH:$WORKDIR/build/usr/local/bin
 
 RUN apt-get update -y \
-    && apt-get install libffi-dev git g++ make cmake automake pkg-config -y \
-    && apt-get clean
+    && apt-get install --no-install-recommends libffi-dev git g++ make cmake automake pkg-config -y \
+    && apt-get clean && rm -rf /var/lib/apt/lists/*;
 
 ENV CURL_VERSION 7.73.0
 RUN wget -q https://curl.haxx.se/download/curl-${CURL_VERSION}.tar.gz \
     && tar -xzf curl-${CURL_VERSION}.tar.gz && cd curl-${CURL_VERSION} \
-    && ./configure --prefix=/usr/local \
+    && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/usr/local \
     && echo "building CURL ${CURL_VERSION}..." \
     && make --quiet -j$(nproc) && make --quiet install \
     && cd $WORKDIR && rm -rf curl-${CURL_VERSION}.tar.gz curl-${CURL_VERSION}
@@ -37,7 +37,7 @@ ENV GEOS_VERSION 3.9.0
 RUN wget -q https://download.osgeo.org/geos/geos-${GEOS_VERSION}.tar.bz2 \
     && tar -xjf geos-${GEOS_VERSION}.tar.bz2  \
     && cd geos-${GEOS_VERSION} \
-    && ./configure --prefix=/usr/local \
+    && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/usr/local \
     && echo "building geos ${GEOS_VERSION}..." \
     && make --quiet -j$(nproc) && make --quiet install \
     && cd $WORKDIR && rm -rf geos-${GEOS_VERSION}.tar.bz2 geos-${GEOS_VERSION}
@@ -46,7 +46,7 @@ ENV SQLITE_VERSION 3330000
 ENV SQLITE_YEAR 2020
 RUN wget -q https://sqlite.org/${SQLITE_YEAR}/sqlite-autoconf-${SQLITE_VERSION}.tar.gz \
     && tar -xzf sqlite-autoconf-${SQLITE_VERSION}.tar.gz && cd sqlite-autoconf-${SQLITE_VERSION} \
-    && ./configure --prefix=/usr/local \
+    && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/usr/local \
     && echo "building SQLITE ${SQLITE_VERSION}..." \
     && make --quiet -j$(nproc) && make --quiet install \
     && cd $WORKDIR && rm -rf sqlite-autoconf-${SQLITE_VERSION}.tar.gz sqlite-autoconf-${SQLITE_VERSION}
@@ -56,8 +56,10 @@ RUN wget -q https://download.osgeo.org/proj/proj-${PROJ_VERSION}.tar.gz \
     && tar -xzf proj-${PROJ_VERSION}.tar.gz \
     && cd proj-${PROJ_VERSION} \
     && CFLAGS='-DPROJ_RENAME_SYMBOLS -O2' CXXFLAGS='-DPROJ_RENAME_SYMBOLS -DPROJ_INTERNAL_CPP_NAMESPACE -O2' \
-        PKG_CONFIG_PATH=/usr/local/lib/pkgconfig  \
-        ./configure \
+        PKG_CONFIG_PATH=/usr/local/lib/pkgconfig \
+        ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
+
+
             --prefix=/usr/local \
             --without-curl \
             --disable-static \
@@ -78,7 +80,7 @@ RUN wget -q -O openjpeg-${OPENJPEG_VERSION}.tar.gz https://github.com/uclouvain/
 ENV GDAL_VERSION 3.2.1
 RUN wget -q https://download.osgeo.org/gdal/${GDAL_VERSION}/gdal-${GDAL_VERSION}.tar.gz \
     && tar -xzf gdal-${GDAL_VERSION}.tar.gz && cd gdal-${GDAL_VERSION} \
-    && ./configure \
+    && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
           --disable-debug \
           --prefix=/usr/local \
           --disable-static \
@@ -99,5 +101,5 @@ RUN wget -q https://download.osgeo.org/gdal/${GDAL_VERSION}/gdal-${GDAL_VERSION}
     && cd $WORKDIR && rm -rf gdal-${GDAL_VERSION}.tar.gz gdal-${GDAL_VERSION}
 
 RUN ldconfig
-RUN pip install --upgrade pip
-RUN pip install gdal==$GDAL_VERSION
+RUN pip install --no-cache-dir --upgrade pip
+RUN pip install --no-cache-dir gdal==$GDAL_VERSION