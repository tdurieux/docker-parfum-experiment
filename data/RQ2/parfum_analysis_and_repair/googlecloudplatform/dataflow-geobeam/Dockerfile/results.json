{
  "startTime": 1674250604613,
  "endTime": 1674250606054,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 101,
        "lineEnd": 101,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 102,
        "lineEnd": 102,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 7,
        "columnEnd": 38
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 7,
        "columnEnd": 38
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 7,
        "columnEnd": 38
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 57,
        "lineEnd": 62,
        "columnStart": 7,
        "columnEnd": 28
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 80,
        "lineEnd": 95,
        "columnStart": 7,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 7,
        "columnEnd": 75
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 7,
        "columnEnd": 75
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     https://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nFROM apache/beam_python3.8_sdk:2.36.0\n\nARG WORKDIR=/pipeline\nRUN mkdir -p ${WORKDIR}\nWORKDIR ${WORKDIR}\n\nENV CCACHE_DISABLE=1\nENV PATH=$PATH:$WORKDIR/build/usr/local/bin\n\nRUN apt-get update -y \\\n    && apt-get install --no-install-recommends libffi-dev git g++ make cmake automake pkg-config -y \\\n    && apt-get clean && rm -rf /var/lib/apt/lists/*;\n\nENV CURL_VERSION 7.73.0\nRUN wget -q https://curl.haxx.se/download/curl-${CURL_VERSION}.tar.gz \\\n    && tar -xzf curl-${CURL_VERSION}.tar.gz && cd curl-${CURL_VERSION} \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/local \\\n    && echo \"building CURL ${CURL_VERSION}...\" \\\n    && make --quiet -j$(nproc) && make --quiet install \\\n    && cd $WORKDIR && rm -rf curl-${CURL_VERSION}.tar.gz curl-${CURL_VERSION}\n\nENV GEOS_VERSION 3.9.0\nRUN wget -q https://download.osgeo.org/geos/geos-${GEOS_VERSION}.tar.bz2 \\\n    && tar -xjf geos-${GEOS_VERSION}.tar.bz2  \\\n    && cd geos-${GEOS_VERSION} \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/local \\\n    && echo \"building geos ${GEOS_VERSION}...\" \\\n    && make --quiet -j$(nproc) && make --quiet install \\\n    && cd $WORKDIR && rm -rf geos-${GEOS_VERSION}.tar.bz2 geos-${GEOS_VERSION}\n\nENV SQLITE_VERSION 3330000\nENV SQLITE_YEAR 2020\nRUN wget -q https://sqlite.org/${SQLITE_YEAR}/sqlite-autoconf-${SQLITE_VERSION}.tar.gz \\\n    && tar -xzf sqlite-autoconf-${SQLITE_VERSION}.tar.gz && cd sqlite-autoconf-${SQLITE_VERSION} \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/local \\\n    && echo \"building SQLITE ${SQLITE_VERSION}...\" \\\n    && make --quiet -j$(nproc) && make --quiet install \\\n    && cd $WORKDIR && rm -rf sqlite-autoconf-${SQLITE_VERSION}.tar.gz sqlite-autoconf-${SQLITE_VERSION}\n\nENV PROJ_VERSION 7.2.1\nRUN wget -q https://download.osgeo.org/proj/proj-${PROJ_VERSION}.tar.gz \\\n    && tar -xzf proj-${PROJ_VERSION}.tar.gz \\\n    && cd proj-${PROJ_VERSION} \\\n    && CFLAGS='-DPROJ_RENAME_SYMBOLS -O2' CXXFLAGS='-DPROJ_RENAME_SYMBOLS -DPROJ_INTERNAL_CPP_NAMESPACE -O2' \\\n        PKG_CONFIG_PATH=/usr/local/lib/pkgconfig \\\n        ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n\n\n            --prefix=/usr/local \\\n            --without-curl \\\n            --disable-static \\\n    && echo \"building proj ${PROJ_VERSION}...\" \\\n    && make --quiet -j$(nproc) && make --quiet install \\\n    && cd $WORKDIR && rm -rf proj-${PROJ_VERSION}.tar.gz proj-${PROJ_VERSION}\n\nENV OPENJPEG_VERSION 2.3.1\nRUN wget -q -O openjpeg-${OPENJPEG_VERSION}.tar.gz https://github.com/uclouvain/openjpeg/archive/v${OPENJPEG_VERSION}.tar.gz \\\n    && tar -zxf openjpeg-${OPENJPEG_VERSION}.tar.gz \\\n    && cd openjpeg-${OPENJPEG_VERSION} \\\n    && mkdir build && cd build \\\n    && cmake .. -DBUILD_THIRDPARTY:BOOL=ON -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr/local \\\n    && echo \"building openjpeg ${OPENJPEG_VERSION}...\" \\\n    && make --quiet -j$(nproc) && make --quiet install \\\n    && cd $WORKDIR && rm -rf openjpeg-${OPENJPEG_VERSION}.tar.gz openjpeg-${OPENJPEG_VERSION}\n\nENV GDAL_VERSION 3.2.1\nRUN wget -q https://download.osgeo.org/gdal/${GDAL_VERSION}/gdal-${GDAL_VERSION}.tar.gz \\\n    && tar -xzf gdal-${GDAL_VERSION}.tar.gz && cd gdal-${GDAL_VERSION} \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n          --disable-debug \\\n          --prefix=/usr/local \\\n          --disable-static \\\n          --without-curl \\\n          --without-libtool \\\n          --with-geos=/usr/local \\\n          --with-geotiff=internal --with-rename-internal-libgeotiff-symbols \\\n          --with-hide-internal-symbols \\\n          --with-libtiff=internal --with-rename-internal-libtiff-symbols \\\n          --with-openjpeg=/usr/local \\\n          --with-sqlite3=/usr/local \\\n          --with-proj=/usr/local \\\n          --with-rename-internal-libgeotiff-symbols=yes \\\n          --with-rename-internal-libtiff-symbols=yes \\\n          --with-threads=yes \\\n    && echo \"building GDAL ${GDAL_VERSION}...\" \\\n    && make --quiet -j$(nproc) && make --quiet install \\\n    && cd $WORKDIR && rm -rf gdal-${GDAL_VERSION}.tar.gz gdal-${GDAL_VERSION}\n\nRUN ldconfig\nRUN pip install --no-cache-dir --upgrade pip\nRUN pip install --no-cache-dir gdal==$GDAL_VERSION\n"
}