diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/googlecloudplatform/esp-v2/docker/Dockerfile-prow-env b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/googlecloudplatform/esp-v2/docker/Dockerfile-prow-env/repaired.Dockerfile
index 3b15eb8..9f25593 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/googlecloudplatform/esp-v2/docker/Dockerfile-prow-env
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/googlecloudplatform/esp-v2/docker/Dockerfile-prow-env/repaired.Dockerfile
@@ -21,15 +21,15 @@ ENV IMAGE=${IMAGE_ARG}
 
 
 RUN apt-get update -y
-RUN apt-get -y install \
+RUN apt-get -y --no-install-recommends install \
     wget make cmake python python-pip pkg-config coreutils \
     zlib1g-dev curl libtool automake zip time rsync ninja-build \
-    git bash-completion jq default-jdk python3-distutils libicu-dev libbrotli-dev
+    git bash-completion jq default-jdk python3-distutils libicu-dev libbrotli-dev && rm -rf /var/lib/apt/lists/*;
 
 
 # install nodejs, which is needed for integration tests
 RUN sh -c 'curl -sL https://deb.nodesource.com/setup_12.x | bash -'
-RUN apt-get install -y nodejs
+RUN apt-get install --no-install-recommends -y nodejs && rm -rf /var/lib/apt/lists/*;
 
 # install Bazelisk
 RUN wget -O /usr/local/bin/bazelisk https://github.com/bazelbuild/bazelisk/releases/download/v1.11.0/bazelisk-linux-amd64 && \
@@ -39,8 +39,8 @@ RUN wget -O /usr/local/bin/bazelisk https://github.com/bazelbuild/bazelisk/relea
 RUN wget -O- https://apt.llvm.org/llvm-snapshot.gpg.key| apt-key add - && \
     echo "deb https://apt.llvm.org/buster/ llvm-toolchain-buster-13 main" >> /etc/apt/sources.list && \
     apt-get update && \
-    apt-get install -y llvm-13 llvm-13-dev libclang-13-dev clang-13 \
-        lld-13 clang-tools-13 clang-format-13 libc++-dev xz-utils
+    apt-get install --no-install-recommends -y llvm-13 llvm-13-dev libclang-13-dev clang-13 \
+        lld-13 clang-tools-13 clang-format-13 libc++-dev xz-utils && rm -rf /var/lib/apt/lists/*;
 
 ENV CC clang-13
 ENV CXX clang++-13
@@ -59,8 +59,8 @@ RUN wget -q "https://golang.org/dl/${GO_TARBALL}" && \
 RUN go install github.com/bazelbuild/buildtools/buildifier@latest
 
 # install gcloud package
-RUN curl https://dl.google.com/dl/cloudsdk/release/google-cloud-sdk.tar.gz > /tmp/google-cloud-sdk.tar.gz
+RUN curl -f https://dl.google.com/dl/cloudsdk/release/google-cloud-sdk.tar.gz > /tmp/google-cloud-sdk.tar.gz
 RUN mkdir -p /usr/local/gcloud \
   && tar -C /usr/local/gcloud -xvf /tmp/google-cloud-sdk.tar.gz \
-  && /usr/local/gcloud/google-cloud-sdk/install.sh
+  && /usr/local/gcloud/google-cloud-sdk/install.sh && rm /tmp/google-cloud-sdk.tar.gz
 ENV PATH $PATH:/usr/local/gcloud/google-cloud-sdk/bin