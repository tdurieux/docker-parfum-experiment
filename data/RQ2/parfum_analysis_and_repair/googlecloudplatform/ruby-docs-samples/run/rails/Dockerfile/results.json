{
  "startTime": 1674255808487,
  "endTime": 1674255809658,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 5,
        "columnEnd": 66
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 5,
        "columnEnd": 54
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 69,
        "columnEnd": 82
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 22,
        "columnEnd": 59
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 22,
        "columnEnd": 45
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 22,
        "columnEnd": 59
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 22,
        "columnEnd": 45
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Use the official Ruby image from Docker Hub\n# https://hub.docker.com/_/ruby\n\n# [START cloudrun_rails_base_image]\n# Pinning the OS to buster because the nodejs install script is buster-specific.\n# Be sure to update the nodejs install command if the base image OS is updated.\nFROM ruby:3.0-buster\n# [END cloudrun_rails_base_image]\n\nRUN ( curl -f -sS https://deb.nodesource.com/gpgkey/nodesource.gpg.key | gpg --batch --dearmor | apt-key add -) && \\\n    echo \"deb https://deb.nodesource.com/node_14.x buster main\"      > /etc/apt/sources.list.d/nodesource.list && \\\n    apt-get update && apt-get install --no-install-recommends -y nodejs lsb-release && rm -rf /var/lib/apt/lists/*;\n\nRUN ( curl -f -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -) && \\\n    echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list && \\\n    apt-get update && apt-get install --no-install-recommends -y yarn && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /app\n\n# Application dependencies\nCOPY Gemfile Gemfile.lock ./\n\nRUN gem install bundler && \\\n    bundle config set --local deployment 'true' && \\\n    bundle config set --local without 'development test' && \\\n    bundle install\n\n\n# Copy application code to the container image\nCOPY . /app\n\nENV RAILS_ENV=production\nENV RAILS_SERVE_STATIC_FILES=true\n# Redirect Rails log to STDOUT for Cloud Run to capture\nENV RAILS_LOG_TO_STDOUT=true\n# [START cloudrun_rails_dockerfile_key]\nARG MASTER_KEY\nENV RAILS_MASTER_KEY=${MASTER_KEY}\n# [END cloudrun_rails_dockerfile_key]\n\n# pre-compile Rails assets with master key\nRUN bundle exec rake assets:precompile\n\nEXPOSE 8080\nCMD [\"bin/rails\", \"server\", \"-b\", \"0.0.0.0\", \"-p\", \"8080\"]\n"
}