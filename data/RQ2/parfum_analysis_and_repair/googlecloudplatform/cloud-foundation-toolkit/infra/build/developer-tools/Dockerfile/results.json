{
  "startTime": 1674215507497,
  "endTime": 1674215508266,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 156,
        "lineEnd": 156,
        "columnStart": 22,
        "columnEnd": 54
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright 2019 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     https://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n# Download and verify the integrity of the download first\nARG RUBY_VERSION\nARG GOLANG_VERSION\n\nFROM sethvargo/hashicorp-installer:0.2.0 AS installer\n# Required to download and install Terraform\nARG TERRAFORM_VERSION\nENV TERRAFORM_VERSION ${TERRAFORM_VERSION}\nRUN /install-hashicorp-tool \"terraform\" \"$TERRAFORM_VERSION\"\n\n# Builds module-swapper\nFROM golang:$GOLANG_VERSION-alpine AS module-swapper-builder\nWORKDIR /go/src/github.com/GoogleCloudPlatform/infra/developer-tools/build/scripts/module-swapper\nCOPY ./build/scripts/module-swapper ./\nRUN go build -v -o /usr/local/bin/module-swapper\n\nFROM golang:$GOLANG_VERSION-alpine AS go\n\nFROM ruby:$RUBY_VERSION-alpine3.15\n\n# Required to download and install terraform-docs\nARG TERRAFORM_DOCS_VERSION\nENV TERRAFORM_DOCS_VERSION ${TERRAFORM_DOCS_VERSION}\n\n# Required to download and install the Terraform gsuite provider\nARG GSUITE_PROVIDER_VERSION\nENV GSUITE_PROVIDER_VERSION ${GSUITE_PROVIDER_VERSION}\n\n# Required to download and install Google Cloud SDK\n# Google Cloud SDK is located at /usr/local/google-cloud-sdk\nARG CLOUD_SDK_VERSION\nENV CLOUD_SDK_VERSION ${CLOUD_SDK_VERSION}\n\n# Required to override base path\nARG KITCHEN_TEST_BASE_PATH=\"test/integration\"\nENV KITCHEN_TEST_BASE_PATH ${KITCHEN_TEST_BASE_PATH}\n\n# Required to download and install Bats\nARG BATS_VERSION\nENV BATS_VERSION ${BATS_VERSION}\n\n# Required to download and install Bats-support\nARG BATS_SUPPORT_VERSION\nENV BATS_SUPPORT_VERSION ${BATS_SUPPORT_VERSION}\n\n# Required to download and install Bats-assert\nARG BATS_ASSERT_VERSION\nENV BATS_ASSERT_VERSION ${BATS_ASSERT_VERSION}\n\n# Required to download and install Bats-mock\nARG BATS_MOCK_VERSION\nENV BATS_MOCK_VERSION ${BATS_MOCK_VERSION}\n\nARG TERRAGRUNT_VERSION\nENV TERRAGRUNT_VERSION ${TERRAGRUNT_VERSION}\n\n# Required to download and install Kustomize\nARG KUSTOMIZE_VERSION\nENV KUSTOMIZE_VERSION ${KUSTOMIZE_VERSION}\n\n# Required to download and install Kpt\nARG KPT_VERSION\nENV KPT_VERSION ${KPT_VERSION}\n\n# Required to download and install CFT CLI\nARG CFT_CLI_VERSION\nENV CFT_CLI_VERSION ${CFT_CLI_VERSION}\n\nARG KUBECTL_VERSION\nENV KUBECTL_VERSION ${KUBECTL_VERSION}\n\n# $WORKSPACE is intended for assets that persist across multiple build steps in a pipeline.\n# It's also where the project git repository is located.\n# https://cloud.google.com/cloud-build/docs/build-config\nENV WORKSPACE=\"/workspace\"\nENV PATH /usr/local/google-cloud-sdk/bin:$PATH\n\n# bash is preferred over /bin/sh\nRUN apk add --no-cache bash parallel\n\n# All package-level dependencies are handled by install_dependencies.sh\nADD ./build/install_dependencies.sh /build/\nRUN /build/install_dependencies.sh\n\nADD ./build/install_cloud_sdk.sh /build/\nRUN /build/install_cloud_sdk.sh ${CLOUD_SDK_VERSION}\n\nADD ./build/install_gsuite_terraform_provider.sh /build/\nRUN /build/install_gsuite_terraform_provider.sh ${GSUITE_PROVIDER_VERSION}\n\n\n# Required to download and install Terraform Validator\nARG TERRAFORM_VALIDATOR_VERSION\nENV TERRAFORM_VALIDATOR_VERSION ${TERRAFORM_VALIDATOR_VERSION}\nADD ./build/install_terraform_validator.sh /build/\nRUN /build/install_terraform_validator.sh ${TERRAFORM_VALIDATOR_VERSION}\n\n#ADD ./build/install_terraform.sh /build/\n#RUN /build/install_terraform.sh ${TERRAFORM_VERSION}\nCOPY --from=installer /software/terraform /usr/local/bin/terraform\n\n# Install Golang\nCOPY --from=go /usr/local/go/ /usr/local/go/\nRUN ln -s /usr/local/go/bin/go /usr/local/bin/go\nRUN ln -s /usr/local/go/bin/gofmt /usr/local/bin/gofmt\n\n# Install module swapper\nCOPY --from=module-swapper-builder /usr/local/bin/module-swapper /usr/local/bin/module-swapper\n\nADD ./build/install_shellcheck.sh /build/\nRUN /build/install_shellcheck.sh\n\nADD ./build/install_hadolint.sh /build/\nRUN /build/install_hadolint.sh\n\nADD ./build/install_terraform_docs.sh /build/\nRUN /build/install_terraform_docs.sh ${TERRAFORM_DOCS_VERSION}\n\nADD ./build/install_bats.sh /build/\nRUN /build/install_bats.sh ${BATS_VERSION} ${BATS_SUPPORT_VERSION} ${BATS_ASSERT_VERSION} ${BATS_MOCK_VERSION}\n\nADD ./build/install_kubectl.sh /build/\nRUN /build/install_kubectl.sh ${KUBECTL_VERSION}\n\nADD ./build/install_terragrunt.sh /build/\nRUN ./build/install_terragrunt.sh ${TERRAGRUNT_VERSION}\n\nADD ./build/install_kustomize.sh /build/\nRUN ./build/install_kustomize.sh ${KUSTOMIZE_VERSION}\n\nADD ./build/install_kpt.sh /build/\nRUN ./build/install_kpt.sh ${KPT_VERSION}\n\nADD ./build/install_addlicense.sh /build/\nRUN /build/install_addlicense.sh\n\nADD ./build/install_cft_cli.sh /build/\nRUN /build/install_cft_cli.sh ${CFT_CLI_VERSION}\n\nWORKDIR /opt/kitchen\nADD ./build/data/Gemfile .\nADD ./build/data/Gemfile.lock .\nADD ./build/data/requirements.txt .\nRUN bundle install && pip3 install --no-cache-dir -r requirements.txt\n\nCOPY ./build/install_verify_boilerplate.sh /build/\nCOPY ./build/verify_boilerplate/ /build/verify_boilerplate/\nRUN /build/install_verify_boilerplate.sh\n\n# NOTE: Most developers are expected to source this file when entering the\n# container, then run init_credentials\nADD ./build/scripts/task_helper_functions.sh /usr/local/bin/\n# Provide task helper functions with wrapper scripts for Terraform module lint\n# checks\nADD ./build/scripts/task_wrapper_scripts/* /usr/local/bin/\n# Execute a command with SA credentials configured.\nADD ./build/scripts/execute_with_credentials.sh /usr/local/bin/\n# Execute the module's integration tests and cleanup.\nADD ./build/scripts/test_integration.sh /usr/local/bin/\n# Execute the module's lint tests and cleanup.\nADD ./build/scripts/test_lint.sh /usr/local/bin/\n# Helper script for dynamically generating env variable export statements out of terraform outputs.\n# It is used to pipe outputs from test/setup into the kitchen_do command.\nADD ./build/scripts/export_tf_outputs.py /usr/local/bin/\n# Helper script for posting linting feedback to GitHub PR\n# Requires GitHub PAT with repo scope, set as an env var GITHUB_PAT_TOKEN\nADD ./build/scripts/gh_lint_comment.py /usr/local/bin/\n\n# Intended to help developers iterate quickly\nADD ./build/home/bash_history /root/.bash_history\nADD ./build/home/bashrc /root/.bashrc\n\n# Set TF cache dir\nENV TF_PLUGIN_CACHE_DIR /workspace/test/integration/tmp/.terraform\nRUN mkdir -p ${TF_PLUGIN_CACHE_DIR}\n\n# Set TF Validator temporary plan dir\nENV TF_VALIDATOR_TMP_PLAN_DIR /workspace/test/integration/tmp/tfvt/\nRUN mkdir -p ${TF_VALIDATOR_TMP_PLAN_DIR}\n\nWORKDIR $WORKSPACE\nRUN terraform --version && \\\n    terraform-docs --version && \\\n    terraform-validator version && \\\n    gcloud --version && \\\n    ruby --version && \\\n    bundle --version && \\\n    kubectl version --client=true && \\\n    terragrunt -version && \\\n    kustomize version && \\\n    addlicense -help && \\\n    cft version\n\n# Cleanup intermediate build artifacts\nRUN rm -rf /build\nRUN go version\nCMD [\"/bin/bash\"]\n"
}