{
  "startTime": 1674219890187,
  "endTime": 1674219891258,
  "originalSmells": [
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 62,
        "columnEnd": 87
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 7,
        "columnEnd": 112
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 7,
        "columnEnd": 55
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM  marketplace.gcr.io/google/debian11 as bazel\n\nENV APP_VERSION=1.7.2\n\nRUN apt-get update \\\n    && apt-get install make automake git apt-transport-https curl gnupg patch openssl -y --no-install-recommends \\\n    && curl -fsSL https://bazel.build/bazel-release.pub.gpg | gpg --batch --dearmor > bazel.gpg \\\n    && mv bazel.gpg /etc/apt/trusted.gpg.d/ \\\n    && echo \"deb [arch=amd64] https://storage.googleapis.com/bazel-apt stable jdk1.8\" | tee /etc/apt/sources.list.d/bazel.list && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get update \\\n    && apt-get install bazel -y --no-install-recommends && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /src/cert-manager/\n\nRUN git clone --branch v${APP_VERSION} \\\n    https://github.com/cert-manager/cert-manager.git /src/cert-manager/\n\nRUN bazel build --stamp --workspace_status_command=hack/build/print-workspace-status.sh //cmd/controller \\\n && bazel build --stamp --workspace_status_command=hack/build/print-workspace-status.sh //cmd/cainjector \\\n && bazel build --stamp --workspace_status_command=hack/build/print-workspace-status.sh //cmd/webhook \\\n && bazel build --stamp --workspace_status_command=hack/build/print-workspace-status.sh //cmd/acmesolver \\\n && bazel build --stamp --workspace_status_command=hack/build/print-workspace-status.sh //cmd/ctl\n\n# Create bazel-bazel_output_bin folder and move binaries generated by bazel\nRUN mkdir bazel_output_bin \\\n && cp /src/cert-manager/bazel-out/k8-fastbuild*/bin/cmd/controller/controller_/controller bazel_output_bin \\\n && cp /src/cert-manager/bazel-out/k8-fastbuild*/bin/cmd/cainjector/cainjector_/cainjector bazel_output_bin \\\n && cp /src/cert-manager/bazel-out/k8-fastbuild*/bin/cmd/webhook/webhook_/webhook bazel_output_bin \\\n && cp /src/cert-manager/bazel-out/k8-fastbuild*/bin/cmd/acmesolver/acmesolver_/acmesolver bazel_output_bin \\\n && cp /src/cert-manager/bazel-out/k8-fastbuild*/bin/cmd/ctl/cmctl bazel_output_bin\n\n# Find and copy all hashicorp dependencies which has been published on MPL license\nRUN for dep in `find $(bazel info execution_root)/../../external/ -maxdepth 1 -type d -iname \"*hashicorp*\"`; \\\n    do cp -r $dep /src/vendor/; done\n\n# Result Image\nFROM marketplace.gcr.io/google/debian11\n\n# Update openssl\nRUN apt-get update \\\n    && apt-get install --no-install-recommends -yqq openssl \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/*\n\nENV C2D_RELEASE=1.7.2\nENV SSL_CERT_FILE=/etc/ssl/certs/ca-certificates.crt\n\n# Non root\nRUN useradd -r -u 1000 cert-manager\n\n# License and Notices\nCOPY --from=bazel /src/cert-manager/LICENSE /usr/share/cert-manager/LICENSE\nCOPY --from=bazel /src/cert-manager/LICENSES /usr/share/cert-manager/NOTICES\n\n# Copy source code of dependencies which requires the copy\nCOPY --from=bazel /src/vendor /src/vendor\n\n# App files\nCOPY --from=bazel /src/cert-manager/bazel_output_bin/controller app/\nCOPY --from=bazel /src/cert-manager/bazel_output_bin/cainjector app/\nCOPY --from=bazel /src/cert-manager/bazel_output_bin/webhook app/\nCOPY --from=bazel /src/cert-manager/bazel_output_bin/acmesolver app/\nCOPY --from=bazel /src/cert-manager/bazel_output_bin/cmctl app/\n\nUSER cert-manager\n"
}