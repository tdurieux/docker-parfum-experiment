{
  "startTime": 1674249293569,
  "endTime": 1674249294698,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 73,
        "lineEnd": 73,
        "columnStart": 1,
        "columnEnd": 92
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 74,
        "lineEnd": 74,
        "columnStart": 1,
        "columnEnd": 59
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM marketplace.gcr.io/google/php8-apache2:8.0\n\nRUN set -ex; \\\n\tsavedAptMark=\"$(apt-mark showmanual)\"; \\\n\tapt-get update; \\\n\tapt-get install -y --no-install-recommends \\\n\t\tlibfreetype6-dev \\\n\t\tlibjpeg-dev \\\n\t\tlibpng-dev \\\n\t\tlibpq-dev \\\n\t\tlibzip-dev \\\n\t; \\\n\t\\\n\tdocker-php-ext-configure gd \\\n\t\t--with-freetype=/usr \\\n\t\t--with-jpeg=/usr \\\n\t; \\\n\t\\\n\tdocker-php-ext-install -j \"$(nproc)\" \\\n\t\tgd \\\n\t\topcache \\\n\t\tmysqli \\\n\t\tpdo_mysql \\\n\t\tpdo_pgsql \\\n\t\tzip \\\n\t; \\\n\t\\\n# reset apt-mark's \"manual\" list so that \"purge --auto-remove\" will remove all build dependencies\n\tapt-mark auto '.*' > /dev/null; \\\n\tapt-mark manual $savedAptMark; \\\n\tldd \"$(php -r 'echo ini_get(\"extension_dir\");')\"/*.so \\\n\t\t| awk '/=>/ { print $3 }' \\\n\t\t| sort -u \\\n\t\t| xargs -r realpath | xargs -r dpkg-query --search \\\n\t\t| cut -d: -f1 \\\n\t\t| sort -u \\\n\t\t| xargs -rt apt-mark manual; \\\n\t\\\n\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \\\n\trm -rf /var/lib/apt/lists/*\n\n# set recommended PHP.ini settings\n# see https://secure.php.net/manual/en/opcache.installation.php\nRUN { \\\n\t\techo 'opcache.memory_consumption=128'; \\\n\t\techo 'opcache.interned_strings_buffer=8'; \\\n\t\techo 'opcache.max_accelerated_files=4000'; \\\n\t\techo 'opcache.revalidate_freq=60'; \\\n\t\techo 'opcache.fast_shutdown=1'; \\\n\t\techo 'opcache.enable_cli=1'; \\\n\t} > /usr/local/etc/php/conf.d/opcache-recommended.ini\nRUN a2enmod rewrite expires\n\nWORKDIR /usr/src/drupal\n\n# https://www.drupal.org/node/3060/release\nENV DRUPAL_VERSION 9.3.13\nENV C2D_RELEASE 9.3.13\nENV DRUPAL_MD5 99e45173551d6bfb58138945cb40e1fc\n\n# Download package and extract to web volume\nRUN set -eux; \\\n\tcurl -fSL \"https://ftp.drupal.org/files/projects/drupal-${DRUPAL_VERSION}.tar.gz\" -o drupal.tar.gz; \\\n\techo \"${DRUPAL_MD5} *drupal.tar.gz\" | md5sum -c -; \\\n\ttar -xz --strip-components=1 -f drupal.tar.gz; \\\n\trm drupal.tar.gz\n\nENV COMPOSER_VERSION 2.2.8\nENV COMPOSER_SHA256 e1e1c580a237c739ecc1be57cf512e6b741faaa566439257d19ecd739ddfefaf\n\n# Install composer binary and install drush\nRUN set -eux; \\\n\tapt-get update && apt-get install -y --no-install-recommends git unzip; \\\n\tcurl -f -o composer.phar \"https://getcomposer.org/download/${COMPOSER_VERSION}/composer.phar\"; \\\n\techo \"${COMPOSER_SHA256}  composer.phar\" | sha256sum -c -; \\\n\tchmod +x composer.phar; \\\n\tphp -d memory_limit=4G ./composer.phar require drush/drush; \\\n\tcp LICENSE.txt vendor/drush/drush/src/; \\\n\trm -f composer.phar; \\\n\trm -rf /var/lib/apt/lists/*\n\nWORKDIR /var/www/html\nVOLUME /var/www/html\n\n# Copy init scripts\nCOPY docker-entrypoint.sh /entrypoint.sh\nCOPY makedb.php /makedb.php\n\nENTRYPOINT [\"/entrypoint.sh\"]\nCMD [\"apache2-foreground\"]\n"
}