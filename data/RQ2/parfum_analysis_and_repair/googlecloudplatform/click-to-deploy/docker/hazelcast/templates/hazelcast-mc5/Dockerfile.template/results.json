{
  "startTime": 1674255027958,
  "endTime": 1674255028696,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 43,
        "lineEnd": 44,
        "columnStart": 7,
        "columnEnd": 57
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 7,
        "columnEnd": 74
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 7,
        "columnEnd": 81
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 84,
        "lineEnd": 84,
        "columnStart": 7,
        "columnEnd": 70
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 85,
        "lineEnd": 85,
        "columnStart": 7,
        "columnEnd": 60
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n{{- $hazelcastmc := index .Packages \"hazelcastmc\" }}\n\nARG MC_VERSION={{ $hazelcastmc.Version }}\nARG MC_INSTALL_NAME=\"hazelcast-management-center-${MC_VERSION}\"\nARG MC_INSTALL_JAR=\"hazelcast-management-center-${MC_VERSION}.jar\"\nARG MC_INSTALL_ZIP=\"${MC_INSTALL_NAME}.zip\"\n\nFROM {{ .From }} AS builder\n\nARG MC_VERSION\nARG MC_INSTALL_NAME\nARG MC_INSTALL_JAR\nARG MC_INSTALL_ZIP\n\nWORKDIR /tmp/build\n\nRUN echo \"Installing new APK packages\" \\\n  && apt update \\\n    && apt install --no-install-recommends -y bash wget unzip procps libnss3 curl \\\n    && echo \"Downloading Management Center\" \\\n    && wget -O ${MC_INSTALL_ZIP} https://repository.hazelcast.com/download/management-center/${MC_INSTALL_ZIP} \\\n    && echo \"{{  $hazelcastmc.Sha256  }}\" \"${MC_INSTALL_ZIP}\" | sha256sum -c \\\n    && unzip ${MC_INSTALL_ZIP} -x ${MC_INSTALL_NAME}/docs/* \\\n    && mv ${MC_INSTALL_NAME}/${MC_INSTALL_JAR} ${MC_INSTALL_JAR} \\\n    && mv ${MC_INSTALL_NAME}/bin/start.sh start.sh \\\n    && mv ${MC_INSTALL_NAME}/bin/mc-conf.sh mc-conf.sh && rm -rf /var/lib/apt/lists/*;\n\nRUN echo \"Adding license to /usr/share/hazelcast directory\" \\\n    && mkdir -p /usr/share/hazelcast-management-center/ \\\n    && curl -f https://raw.githubusercontent.com/hazelcast/hazelcast/master/LICENSE \\\n        -o /usr/share/hazelcast-management-center/LICENSE\n\nRUN chmod +x start.sh mc-conf.sh\n\nFROM gcr.io/google-appengine/debian10:latest\nARG MC_VERSION\nARG MC_INSTALL_NAME\nARG MC_INSTALL_JAR\nARG MC_INSTALL_ZIP\nARG MC_REVISION=${MC_VERSION}\n\nLABEL hazelcast.mc.revision=${MC_REVISION}\n\nENV MC_HOME=/opt/hazelcast/management-center \\\n    MC_DATA=/data\n\nENV JAVA_OPTS_DEFAULT=\"-Dhazelcast.mc.home=${MC_DATA} -Djava.net.preferIPv4Stack=true\" \\\n    MC_INSTALL_JAR=\"${MC_INSTALL_JAR}\" \\\n    USER_NAME=\"hazelcast\" \\\n    USER_UID=10001 \\\n    MC_HTTP_PORT=\"8080\" \\\n    MC_HTTPS_PORT=\"8443\" \\\n    MC_HEALTH_CHECK_PORT=\"8081\" \\\n    LOGGING_LEVEL=\"\" \\\n    MC_CONTEXT_PATH=\"/\" \\\n    NO_CONTAINER_SUPPORT=\"false\" \\\n    MIN_HEAP_SIZE=\"\" \\\n    MAX_HEAP_SIZE=\"\" \\\n    MC_INIT_SCRIPT=\"\" \\\n    MC_INIT_CMD=\"\" \\\n    MC_CLASSPATH=\"\" \\\n    MC_ADMIN_USER=\"\" \\\n    MC_ADMIN_PASSWORD=\"\"\n\n# Workaround for CVE-2021-44228\n# https://www.docker.com/blog/apache-log4j-2-cve-2021-44228/\nENV JAVA_OPTS=\"-Dlog4j.formatMsgNoLookups=true\"\n\nRUN echo \"Installing new APK packages\" \\\n && apt update \\\n    && apt install --no-install-recommends -y openjdk-11-jdk bash curl \\\n    && apt install --no-install-recommends -y librocksdb-dev \\\n    && mkdir -p ${MC_HOME} ${MC_DATA} \\\n    && echo \"Granting full access to ${MC_HOME} and ${MC_DATA} to allow running\" \\\n        \"container as non-root with \\\"docker run --user\\\" option\" \\\n    && chmod a+rwx ${MC_HOME} ${MC_DATA} && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR ${MC_HOME}\n\nCOPY --from=builder /tmp/build/${MC_INSTALL_JAR} .\nCOPY --from=builder /tmp/build/start.sh ./bin/start.sh\nCOPY --from=builder /tmp/build/mc-conf.sh ./bin/mc-conf.sh\nCOPY mc-start.sh ./bin/mc-start.sh\n\nVOLUME [\"${MC_DATA}\"]\nEXPOSE ${MC_HTTP_PORT} ${MC_HTTPS_PORT} ${MC_HEALTH_CHECK_PORT}\n\nRUN echo \"Adding non-root user\" \\\n    && adduser --uid $USER_UID --system --home $MC_HOME --shell /sbin/nologin $USER_NAME \\\n    && chown -R $USER_UID:0 $MC_HOME ${MC_DATA} \\\n    && chmod -R g=u \"$MC_HOME\" ${MC_DATA} \\\n    && chmod -R +r $MC_HOME ${MC_DATA}\n\n# Switch to hazelcast user\nUSER ${USER_UID}\n\n# Start Management Center\nCMD [\"bash\", \"./bin/mc-start.sh\"]\n"
}