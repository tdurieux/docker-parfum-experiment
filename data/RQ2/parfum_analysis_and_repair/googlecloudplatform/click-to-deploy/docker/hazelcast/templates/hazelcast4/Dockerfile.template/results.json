{
  "startTime": 1674219038083,
  "endTime": 1674219039624,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 103,
        "lineEnd": 103,
        "columnStart": 7,
        "columnEnd": 112
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 90,
        "lineEnd": 90,
        "columnStart": 7,
        "columnEnd": 78
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 71,
        "lineEnd": 81,
        "columnStart": 7,
        "columnEnd": 7
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 71,
        "lineEnd": 81,
        "columnStart": 7,
        "columnEnd": 7
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 71,
        "lineEnd": 81,
        "columnStart": 7,
        "columnEnd": 7
      }
    }
  ],
  "repairedDockerfile": "# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nFROM {{ .From }}\n\n{{- $hazelcast := index .Packages \"hazelcast\" }}\n{{- $cache_api := index .Packages \"cache_api\" }}\n{{- $jmx_prometheus_agent := index .Packages \"jmx_prometheus_agent\" }}\n{{- $log4j2 := index .Packages \"log4j2\" }}\n\nENV DEBUG_DOCKER_ENTRYPOINT false\n\nENV HAZELCAST_VERSION {{ $hazelcast.Version }}\nENV C2D_RELEASE {{ $hazelcast.Version }}\n\n# Versions of Hazelcast and Hazelcast plugins\nARG HZ_VERSION={{ $hazelcast.Version }}\nARG HZ_VERSION_SHA={{ $hazelcast.Sha256 }}\nARG CACHE_API_VERSION={{ $cache_api.Version }}\nARG JMX_PROMETHEUS_AGENT_VERSION={{ $jmx_prometheus_agent.Version }}\nARG LOG4J2_VERSION={{ $log4j2.Version }}\n\n# Build constants\nARG HZ_HOME=\"/opt/hazelcast\"\n\n# JARs to download\nARG HAZELCAST_ALL_URL=\"https://repo1.maven.org/maven2/com/hazelcast/hazelcast-all/${HZ_VERSION}/hazelcast-all-${HZ_VERSION}.jar\"\nARG CACHE_API_URL=\"https://repo1.maven.org/maven2/javax/cache/cache-api/${CACHE_API_VERSION}/cache-api-${CACHE_API_VERSION}.jar\"\nARG PROMETHEUS_AGENT_URL=\"https://repo1.maven.org/maven2/io/prometheus/jmx/jmx_prometheus_javaagent/${JMX_PROMETHEUS_AGENT_VERSION}/jmx_prometheus_javaagent-${JMX_PROMETHEUS_AGENT_VERSION}.jar\"\nARG LOG4J2_URLS=\"https://repo1.maven.org/maven2/org/apache/logging/log4j/log4j-core/${LOG4J2_VERSION}/log4j-core-${LOG4J2_VERSION}.jar https://repo1.maven.org/maven2/org/apache/logging/log4j/log4j-api/${LOG4J2_VERSION}/log4j-api-${LOG4J2_VERSION}.jar\"\n\n# If you update Eureka plugin version, please update also all its dependencies\n# You can fetch Eureka plugin dependencies with `mvn dependency:list -DincludeScope=runtime -DoutputAbsoluteArtifactFilename=true` executed at https://github.com/hazelcast/hazelcast-eureka\n# For the already formatted output, use `mvn dependency:list -DincludeScope=runtime -DoutputAbsoluteArtifactFilename=true | sed '/\\.m2\\/repository/!d' | sed 's/.*repository\\//https:\\/\\/repo1\\.maven\\.org\\/maven2\\//' | sed -e 'H;${x;s/\\n/ /g;s/^ //;p;};d'`\nARG EUREKA_PLUGIN_URLS='https://repo1.maven.org/maven2/com/hazelcast/hazelcast-eureka-one/2.0.1/hazelcast-eureka-one-2.0.1.jar https://repo1.maven.org/maven2/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar https://repo1.maven.org/maven2/org/codehaus/jettison/jettison/1.4.0/jettison-1.4.0.jar https://repo1.maven.org/maven2/io/github/x-stream/mxparser/1.2.1/mxparser-1.2.1.jar https://repo1.maven.org/maven2/com/google/inject/guice/4.1.0/guice-4.1.0.jar https://repo1.maven.org/maven2/joda-time/joda-time/2.3/joda-time-2.3.jar https://repo1.maven.org/maven2/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar https://repo1.maven.org/maven2/com/fasterxml/jackson/core/jackson-annotations/2.12.3/jackson-annotations-2.12.3.jar https://repo1.maven.org/maven2/aopalliance/aopalliance/1.0/aopalliance-1.0.jar https://repo1.maven.org/maven2/commons-configuration/commons-configuration/1.10/commons-configuration-1.10.jar https://repo1.maven.org/maven2/org/apache/httpcomponents/httpclient/4.5.13/httpclient-4.5.13.jar https://repo1.maven.org/maven2/com/netflix/servo/servo-core/0.12.21/servo-core-0.12.21.jar https://repo1.maven.org/maven2/com/netflix/netflix-commons/netflix-infix/0.3.0/netflix-infix-0.3.0.jar https://repo1.maven.org/maven2/commons-lang/commons-lang/2.6/commons-lang-2.6.jar https://repo1.maven.org/maven2/com/google/code/gson/gson/2.8.7/gson-2.8.7.jar https://repo1.maven.org/maven2/com/netflix/eureka/eureka-client/1.10.15/eureka-client-1.10.15.jar https://repo1.maven.org/maven2/org/slf4j/slf4j-api/1.6.4/slf4j-api-1.6.4.jar https://repo1.maven.org/maven2/antlr/antlr/2.7.7/antlr-2.7.7.jar https://repo1.maven.org/maven2/com/sun/jersey/jersey-core/1.19.1/jersey-core-1.19.1.jar https://repo1.maven.org/maven2/com/google/j2objc/j2objc-annotations/1.3/j2objc-annotations-1.3.jar https://repo1.maven.org/maven2/org/antlr/stringtemplate/3.2.1/stringtemplate-3.2.1.jar https://repo1.maven.org/maven2/org/apache/commons/commons-math/2.2/commons-math-2.2.jar https://repo1.maven.org/maven2/com/fasterxml/jackson/core/jackson-databind/2.12.2/jackson-databind-2.12.2.jar https://repo1.maven.org/maven2/javax/ws/rs/jsr311-api/1.1.1/jsr311-api-1.1.1.jar https://repo1.maven.org/maven2/com/thoughtworks/xstream/xstream/1.4.17/xstream-1.4.17.jar https://repo1.maven.org/maven2/com/netflix/archaius/archaius-core/0.7.7/archaius-core-0.7.7.jar https://repo1.maven.org/maven2/xmlpull/xmlpull/1.1.3.1/xmlpull-1.1.3.1.jar https://repo1.maven.org/maven2/com/github/andrewoma/dexx/dexx-collections/0.2/dexx-collections-0.2.jar https://repo1.maven.org/maven2/commons-codec/commons-codec/1.15/commons-codec-1.15.jar https://repo1.maven.org/maven2/javax/inject/javax.inject/1/javax.inject-1.jar https://repo1.maven.org/maven2/com/fasterxml/jackson/core/jackson-core/2.12.3/jackson-core-2.12.3.jar https://repo1.maven.org/maven2/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar https://repo1.maven.org/maven2/commons-logging/commons-logging/1.1.1/commons-logging-1.1.1.jar https://repo1.maven.org/maven2/com/google/errorprone/error_prone_annotations/2.5.1/error_prone_annotations-2.5.1.jar https://repo1.maven.org/maven2/com/github/vlsi/compactmap/compactmap/2.0/compactmap-2.0.jar https://repo1.maven.org/maven2/com/google/guava/guava/30.1.1-jre/guava-30.1.1-jre.jar https://repo1.maven.org/maven2/org/checkerframework/checker-qual/3.8.0/checker-qual-3.8.0.jar https://repo1.maven.org/maven2/com/netflix/netflix-commons/netflix-eventbus/0.3.0/netflix-eventbus-0.3.0.jar https://repo1.maven.org/maven2/commons-jxpath/commons-jxpath/1.3/commons-jxpath-1.3.jar https://repo1.maven.org/maven2/com/sun/jersey/contribs/jersey-apache-client4/1.19.1/jersey-apache-client4-1.19.1.jar https://repo1.maven.org/maven2/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar https://repo1.maven.org/maven2/org/apache/httpcomponents/httpcore/4.4.13/httpcore-4.4.13.jar https://repo1.maven.org/maven2/org/antlr/antlr-runtime/3.4/antlr-runtime-3.4.jar https://repo1.maven.org/maven2/com/sun/jersey/jersey-client/1.19.1/jersey-client-1.19.1.jar'\n\n# Runtime constants / variables\nENV HZ_HOME=\"${HZ_HOME}\" \\\n    CLASSPATH_DEFAULT=\"${HZ_HOME}/*:${HZ_HOME}/lib/*\" \\\n    JAVA_OPTS_DEFAULT=\"-Djava.net.preferIPv4Stack=true -Dhz.network.rest-api.enabled=true -Dhz.network.rest-api.endpoint-groups.DATA.enabled=true -Dhazelcast.rest.enabled=true -Dhazelcast.logging.type=log4j2 -Dlog4j.configurationFile=${HZ_HOME}/log4j2.properties -XX:MaxRAMPercentage=80.0 -XX:MaxGCPauseMillis=5 --add-modules java.se --add-exports java.base/jdk.internal.ref=ALL-UNNAMED --add-opens java.base/java.lang=ALL-UNNAMED --add-opens java.base/java.nio=ALL-UNNAMED --add-opens java.base/sun.nio.ch=ALL-UNNAMED --add-opens java.management/sun.management=ALL-UNNAMED --add-opens jdk.management/com.sun.management.internal=ALL-UNNAMED\" \\\n    MIN_HEAP_SIZE=\"\" \\\n    MAX_HEAP_SIZE=\"\" \\\n    MANCENTER_URL=\"\" \\\n    PROMETHEUS_PORT=\"\" \\\n    PROMETHEUS_CONFIG=\"${HZ_HOME}/jmx_agent_config.yaml\" \\\n    LOGGING_LEVEL=\"\" \\\n    CLASSPATH=\"\"\n\n# Workaround for CVE-2021-44228\n# https://www.docker.com/blog/apache-log4j-2-cve-2021-44228/\nENV JAVA_OPTS=\"-Dlog4j.formatMsgNoLookups=true\"\n\n# Expose port\nEXPOSE 5701\n\nCOPY *.xml *.sh *.yaml *.properties ${HZ_HOME}/\n\n# Install\nRUN set -e; \\\n    apt-get --allow-releaseinfo-change update \\\n    && apt-get -y --no-install-recommends install \\\n    openjdk-11-jdk-headless \\\n    maven \\\n    bash \\\n    curl \\\n    procps \\\n    net-tools \\\n    telnet \\\n    inetutils-ping \\\n    libxml2-utils \\\n    zip \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Install\nRUN echo \"Downloading Hazelcast and related JARs\" \\\n    && mkdir \"${HZ_HOME}/lib\" \\\n    && cd \"${HZ_HOME}/lib\" \\\n    && HAZELCAST_ALL_URL=$(${HZ_HOME}/get-hz-all-url.sh) \\\n    && for JAR_URL in ${HAZELCAST_ALL_URL} ${CACHE_API_URL} ${PROMETHEUS_AGENT_URL} ${EUREKA_PLUGIN_URLS} ${LOG4J2_URLS}; do curl -sf -O -L ${JAR_URL} || exit $?; done \\\n    && echo \"${HZ_VERSION_SHA}  hazelcast-all-${HZ_VERSION}.jar\" | sha256sum -c \\\n    && mv jmx_prometheus_javaagent-*.jar jmx_prometheus_javaagent.jar \\\n    && echo \"Setting Pardot ID to 'docker'\" \\\n    && echo 'hazelcastDownloadId=docker' > \"hazelcast-download.properties\" \\\n    && zip -u hazelcast-all-*.jar hazelcast-download.properties \\\n    && echo \"Granting read permission to ${HZ_HOME}\" \\\n    && chmod -R +r ${HZ_HOME} \\\n    && echo \"Cleaning APK packages\" \\\n    && rm -rf /var/cache/apk/* ${HZ_HOME}/get-hz-all-url.sh\n\n\nRUN echo \"Adding license to /usr/share/hazelcast directory\" \\\n    && mkdir -p /usr/share/hazelcast/ \\\n    && curl -f https://raw.githubusercontent.com/hazelcast/hazelcast/master/LICENSE -o /usr/share/hazelcast/LICENSE\n\n\nWORKDIR ${HZ_HOME}\n\n# Start Hazelcast server\nCMD [\"/opt/hazelcast/start-hazelcast.sh\"]\n"
}