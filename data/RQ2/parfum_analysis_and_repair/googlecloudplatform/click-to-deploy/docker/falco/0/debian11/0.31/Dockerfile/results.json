{
  "startTime": 1674219521687,
  "endTime": 1674219522830,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 61
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 7,
        "columnEnd": 120
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM marketplace.gcr.io/google/debian11\n\nARG FALCO_VERSION=0.31.1\nARG VERSION_BUCKET=deb\nENV VERSION_BUCKET=${VERSION_BUCKET}\n\nENV FALCO_VERSION ${FALCO_VERSION}\nENV C2D_RELEASE 0.31.1\nENV HOST_ROOT /host\nENV HOME /root\n\nRUN cp /etc/skel/.bashrc /root && cp /etc/skel/.profile /root\n\nRUN apt-get update \\\n\t&& apt-get install -y --no-install-recommends \\\n\tbash-completion \\\n\tbc \\\n\tbison \\\n\tclang-11 \\\n\tca-certificates \\\n\tcurl \\\n\tdkms \\\n\tflex \\\n\tgnupg2 \\\n\tgcc \\\n\tjq \\\n\tlibc6-dev \\\n\tlibelf-dev \\\n\tlibssl-dev \\\n\tllvm-11 \\\n\tnetcat \\\n\txz-utils \\\n\t&& rm -rf /var/lib/apt/lists/*\n\nRUN ln -s /usr/bin/clang-11 /usr/bin/clang \\\n\t&& ln -s /usr/bin/llc-11 /usr/bin/llc\n\nRUN curl -f -s https://falco.org/repo/falcosecurity-3672BA8F.asc | apt-key add - \\\n\t&& echo \"deb https://download.falco.org/packages/${VERSION_BUCKET} stable main\" | tee -a /etc/apt/sources.list.d/falcosecurity.list \\\n\t&& apt-get update -y \\\n\t&& if [ \"$FALCO_VERSION\" = \"latest\" ]; then apt-get install -y --no-install-recommends falco; else apt-get install -y --no-install-recommends falco=${FALCO_VERSION}; fi \\\n\t&& apt-get clean \\\n\t&& rm -rf /var/lib/apt/lists/* \\\n    && curl -f \"https://raw.githubusercontent.com/falcosecurity/falco/${FALCO_VERSION}/COPYING\" -o /usr/share/falco/LICENSE\n\n# Change the falco config within the container to enable ISO 8601\n# output.\nRUN sed -e 's/time_format_iso_8601: false/time_format_iso_8601: true/' < /etc/falco/falco.yaml > /etc/falco/falco.yaml.new \\\n\t&& mv /etc/falco/falco.yaml.new /etc/falco/falco.yaml\n\n# Some base images have an empty /lib/modules by default\n# If it's not empty, docker build will fail instead of\n# silently overwriting the existing directory\nRUN rm -df /lib/modules \\\n\t&& ln -s $HOST_ROOT/lib/modules /lib/modules\n\nCOPY ./docker-entrypoint.sh /\n\nENTRYPOINT [\"/docker-entrypoint.sh\"]\n\nCMD [\"/usr/bin/falco\"]\n"
}