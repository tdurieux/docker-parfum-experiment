{
  "startTime": 1674248014221,
  "endTime": 1674248016078,
  "originalSmells": [
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 89
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 5,
        "columnEnd": 70
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 74,
        "lineEnd": 74,
        "columnStart": 2,
        "columnEnd": 69
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 4,
        "columnEnd": 57
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 22,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 85,
        "lineEnd": 85,
        "columnStart": 5,
        "columnEnd": 41
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 87,
        "lineEnd": 88,
        "columnStart": 5,
        "columnEnd": 36
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM marketplace.gcr.io/google/debian11\n\n# explicitly set user/group IDs\nRUN groupadd -r postgres --gid=999 && useradd -r -g postgres --uid=999 postgres\n\nRUN set -ex; \\\n        if ! command -v gpg > /dev/null; then \\\n                apt-get update; \\\n                apt-get install -y --no-install-recommends \\\n                  apt-transport-https \\\n                  ca-certificates \\\n                  gnupg \\\n                  dirmngr \\\n                ; \\\n                rm -rf /var/lib/apt/lists/*; \\\n        fi\n\n# grab gosu for easy step-down from root\nENV GOSU_VERSION 1.12\nRUN set -x \\\n  && apt-get update && apt-get install -y --no-install-recommends ca-certificates wget openssl && rm -rf /var/lib/apt/lists/* \\\n  && wget -q -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)\" \\\n  && wget -q -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc\" \\\n# copy source code\n  && wget -q -O /usr/local/src/gosu.tar.gz \"https://github.com/tianon/gosu/archive/$GOSU_VERSION.tar.gz\" \\\n# extract gosu binary and check signature\n  && export GNUPGHOME=\"$(mktemp -d)\" \\\n  && found='' \\\n  && for server in \\\n    pool.sks-keyservers.net \\\n    ha.pool.sks-keyservers.net \\\n    pgp.mit.edu \\\n    na.pool.sks-keyservers.net \\\n    eu.pool.sks-keyservers.net \\\n    oc.pool.sks-keyservers.net \\\n    ha.pool.sks-keyservers.net \\\n    hkp://p80.pool.sks-keyservers.net:80 \\\n    hkp://keyserver.ubuntu.com:80; \\\n  do \\\n    gpg --batch --no-tty --keyserver $server --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 \\\n      && found=\"yes\" && break; \\\n  done; test -n \"$found\" \\\n  && gpg --batch --no-tty --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \\\n  && rm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc \\\n  && chmod +x /usr/local/bin/gosu \\\n  && gosu nobody true \\\n  && apt-get purge -y --auto-remove wget\n\n# make the \"en_US.UTF-8\" locale so postgres will be utf-8 enabled by default\nRUN apt-get update && apt-get install --no-install-recommends -y locales && rm -rf /var/lib/apt/lists/* \\\n  && localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8\nENV LANG en_US.utf8\n\nRUN mkdir /docker-entrypoint-initdb.d\n\nRUN set -ex; \\\n  key='B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8'; \\\n  export GNUPGHOME=\"$(mktemp -d)\"; \\\n  found=''; \\\n  for server in \\\n    pool.sks-keyservers.net \\\n    ha.pool.sks-keyservers.net \\\n    pgp.mit.edu \\\n    na.pool.sks-keyservers.net \\\n    eu.pool.sks-keyservers.net \\\n    oc.pool.sks-keyservers.net \\\n    ha.pool.sks-keyservers.net \\\n    hkp://p80.pool.sks-keyservers.net:80 \\\n    hkp://keyserver.ubuntu.com:80; \\\n  do \\\n    gpg --batch --no-tty --keyserver ${server} --recv-keys \"$key\" \\\n      && found=\"yes\" && break; \\\n  done; \\\n  test -n \"$found\"; \\\n  gpg --batch --no-tty --export \"$key\" > /etc/apt/trusted.gpg.d/postgres.gpg; \\\n  rm -rf \"$GNUPGHOME\"; \\\n  apt-key list\n\nENV PG_MAJOR 12\nENV PG_VERSION 12.11*\nENV C2D_RELEASE 12.11.0\n\nRUN echo 'deb https://apt-archive.postgresql.org/pub/repos/apt bullseye-pgdg-archive main' > /etc/apt/sources.list.d/pgdg.list\n\nRUN apt-get update \\\n  && apt-get install --no-install-recommends -y postgresql-common \\\n  && sed -ri 's/#(create_main_cluster) .*$/\\1 = false/' /etc/postgresql-common/createcluster.conf \\\n  && apt-get install --no-install-recommends -y \\\n    postgresql-$PG_MAJOR=$PG_VERSION \\\n  && rm -rf /var/lib/apt/lists/*\n\n# make the sample config easier to munge (and \"correct by default\")\nRUN mv -v /usr/share/postgresql/$PG_MAJOR/postgresql.conf.sample /usr/share/postgresql/ \\\n  && ln -sv ../postgresql.conf.sample /usr/share/postgresql/$PG_MAJOR/ \\\n  && sed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/share/postgresql/postgresql.conf.sample\n\nRUN mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod g+s /var/run/postgresql\n\nENV PATH /usr/lib/postgresql/$PG_MAJOR/bin:$PATH\nENV PGDATA /var/lib/postgresql/data\nRUN mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 777 \"$PGDATA\" # this 777 will be replaced by 700 at runtime (allows semi-arbitrary \"--user\" values)\nVOLUME /var/lib/postgresql/data\n\nCOPY docker-entrypoint.sh /usr/local/bin/\nRUN ln -s usr/local/bin/docker-entrypoint.sh / # backwards compat\nENTRYPOINT [\"docker-entrypoint.sh\"]\n\nEXPOSE 5432\nCMD [\"postgres\"]\n\n"
}