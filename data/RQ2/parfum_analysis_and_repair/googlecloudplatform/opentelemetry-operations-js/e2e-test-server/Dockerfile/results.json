{
  "startTime": 1674246487832,
  "endTime": 1674246488329,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 25
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      https://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# Build relative to root of repository i.e. `docker build --file Dockerfile --tag=$tag ..`\n\nFROM node:16-alpine as node-base\nENV SRC=\"/src\"\nRUN npm install -g npm@^7 && npm cache clean --force;\nUSER node\nWORKDIR $SRC\n\nFROM node-base as build-base\nUSER root\nRUN chown node:node $SRC\nUSER node\n# copy local dependencies\nCOPY --chown=node:node packages/ packages/\nCOPY --chown=node:node scripts/ scripts/\nCOPY --chown=node:node lerna.json package.json package-lock.json ./\n# copy package.json\nCOPY --chown=node:node e2e-test-server/package.json e2e-test-server/package-lock.json e2e-test-server/\n# bootstrap without compile\nRUN npx lerna bootstrap --ignore-scripts\n# compile everything BUT e2e-test-server\nRUN npx lerna run compile --ignore @google-cloud/e2e-test-server\n# dereference lerna symlinks so we don't need to copy out the whole monorepo\nRUN TMPDIR=$(mktemp -d) && \\\n    cp --dereference --recursive e2e-test-server/node_modules/@google-cloud $TMPDIR/ && \\\n    rm -rf e2e-test-server/node_modules/@google-cloud && \\\n    mv $TMPDIR/@google-cloud e2e-test-server/node_modules/@google-cloud\n\nFROM node-base\nCOPY --from=build-base --chown=node:node $SRC/e2e-test-server $SRC/e2e-test-server/\nWORKDIR $SRC/e2e-test-server\nCOPY --chown=node:node e2e-test-server/ ./\nRUN npm run compile\nENTRYPOINT [\"node\", \"build/src/index.js\"]\n"
}