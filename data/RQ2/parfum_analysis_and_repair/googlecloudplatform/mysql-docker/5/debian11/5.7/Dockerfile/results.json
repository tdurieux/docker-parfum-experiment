{
  "startTime": 1674248125425,
  "endTime": 1674248126489,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 73,
        "lineEnd": 74,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 49,
        "columnEnd": 105
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 1,
        "columnEnd": 65
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 34,
        "lineEnd": 45,
        "columnStart": 1,
        "columnEnd": 2
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 73,
        "lineEnd": 74,
        "columnStart": 4,
        "columnEnd": 35
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 49,
        "columnEnd": 105
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 1,
        "columnEnd": 65
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 34,
        "lineEnd": 45,
        "columnStart": 1,
        "columnEnd": 2
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 73,
        "lineEnd": 74,
        "columnStart": 4,
        "columnEnd": 35
      }
    }
  ],
  "repairedDockerfile": "FROM marketplace.gcr.io/google/debian11\n\n# add our user and group first to make sure their IDs get assigned consistently, regardless of whatever dependencies get added\nRUN groupadd -r mysql && useradd -r -g mysql mysql\n\nRUN apt-get --allow-releaseinfo-change update && apt-get install -y --no-install-recommends gnupg dirmngr && rm -rf /var/lib/apt/lists/*\n\n# add gosu for easy step-down from root\n# https://github.com/tianon/gosu/releases\nENV GOSU_VERSION 1.14\nRUN set -eux; \\\n\tsavedAptMark=\"$(apt-mark showmanual)\"; \\\n\tapt-get --allow-releaseinfo-change update; \\\n\tapt-get install -y --no-install-recommends ca-certificates wget; \\\n\trm -rf /var/lib/apt/lists/*; \\\n\tdpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\"; \\\n\twget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\"; \\\n\twget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\"; \\\n\texport GNUPGHOME=\"$(mktemp -d)\"; \\\n\tgpg --batch --keyserver hkps://keys.openpgp.org --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4; \\\n\tgpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu; \\\n\tgpgconf --kill all; \\\n\trm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc; \\\n\tapt-mark auto '.*' > /dev/null; \\\n\t[ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark > /dev/null; \\\n\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \\\n\tchmod +x /usr/local/bin/gosu; \\\n\tgosu --version; \\\n\tgosu nobody true\n\nRUN mkdir /docker-entrypoint-initdb.d\n\nRUN set -eux; \\\n\tapt-get --allow-releaseinfo-change update; \\\n\tapt-get install -y --no-install-recommends \\\n    pwgen \\\n\t\topenssl \\\n# FATAL ERROR: please install the following Perl modules before executing /usr/local/mysql/scripts/mysql_install_db:\n# File::Basename\n# File::Copy\n# Sys::Hostname\n# Data::Dumper\n\t\tperl \\\n\t\txz-utils \\\n\t\tzstd \\\n\t; \\\n\trm -rf /var/lib/apt/lists/*\n\nRUN set -eux; \\\n# gpg: key 3A79BD29: public key \"MySQL Release Engineering <mysql-build@oss.oracle.com>\" imported\n\tkey='859BE8D7C586F538430B19C2467B942D3A79BD29'; \\\n\texport GNUPGHOME=\"$(mktemp -d)\"; \\\n\tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$key\"; \\\n\tmkdir -p /etc/apt/keyrings; \\\n\tgpg --batch --export \"$key\" > /etc/apt/keyrings/mysql.gpg; \\\n\tgpgconf --kill all; \\\n\trm -rf \"$GNUPGHOME\"\n\nENV MYSQL_MAJOR 5.7\nENV MYSQL_VERSION 5.7.38-1debian10\nENV C2D_RELEASE 5.7.38\n\nRUN echo \"deb [ signed-by=/etc/apt/keyrings/mysql.gpg ] http://repo.mysql.com/apt/debian/ buster mysql-${MYSQL_MAJOR}\" > /etc/apt/sources.list.d/mysql.list\n\n# the \"/var/lib/mysql\" stuff here is because the mysql-server postinst doesn't have an explicit way to disable the mysql_install_db codepath besides having a database already \"configured\" (ie, stuff in /var/lib/mysql/mysql)\n# also, we set debconf keys to make APT a little quieter\nRUN { \\\n    echo mysql-community-server mysql-community-server/data-dir select ''; \\\n    echo mysql-community-server mysql-community-server/root-pass password ''; \\\n    echo mysql-community-server mysql-community-server/re-root-pass password ''; \\\n    echo mysql-community-server mysql-community-server/remove-test-db select false; \\\n  } | debconf-set-selections \\\n  && apt-get --allow-releaseinfo-change update \\\n\t&& apt-get install --no-install-recommends -y \\\n    mysql-server=\"${MYSQL_VERSION}\" \\\n# comment out a few problematic configuration values\n\t&& find /etc/mysql/ -name '*.cnf' -print0 \\\n\t\t| xargs -0 grep -lZE '^(bind-address|log)' \\\n\t\t| xargs -rt -0 sed -Ei 's/^(bind-address|log)/#&/' \\\n# don't reverse lookup hostnames, they are usually another container\n\t&& echo '[mysqld]\\nskip-host-cache\\nskip-name-resolve' > /etc/mysql/conf.d/docker.cnf \\\n  && rm -rf /var/lib/apt/lists/* \\\n\t&& rm -rf /var/lib/mysql && mkdir -p /var/lib/mysql /var/run/mysqld \\\n\t&& chown -R mysql:mysql /var/lib/mysql /var/run/mysqld \\\n# ensure that /var/run/mysqld (used for socket and lock files) is writable regardless of the UID our mysqld instance ends up having at runtime\n\t&& chmod 1777 /var/run/mysqld /var/lib/mysql\n\nVOLUME /var/lib/mysql\n\nCOPY docker-entrypoint.sh /usr/local/bin/\nRUN ln -s usr/local/bin/docker-entrypoint.sh /entrypoint.sh  # for backwards compatibility\nENTRYPOINT [\"docker-entrypoint.sh\"]\n\nEXPOSE 3306\nCMD [\"mysqld\"]\n"
}