{
  "startTime": 1674249694428,
  "endTime": 1674249695292,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 2,
        "columnEnd": 79
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 2,
        "columnEnd": 77
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nFROM ubuntu:22.04\n\n# Version identifier of the image.\nARG CANDIDATE_NAME\n\nCOPY run-packages.txt /tmp/packages.txt\nRUN \\\n\n  mkdir -p /usr/local/versions && \\\n    echo ${CANDIDATE_NAME} > /usr/local/versions/run_base && \\\n  # Disable universe and multiverse repositories\n  mv /etc/apt/sources.list /etc/apt/sources.list.universe && \\\n  cat /etc/apt/sources.list.universe \\\n    | sed 's/^deb\\(.*\\(multi\\|uni\\)verse\\)/# deb\\1/g' >/etc/apt/sources.list && \\\n  # Install packages\n  export DEBIAN_FRONTEND=noninteractive && \\\n  apt-get update -y && \\\n  apt-get upgrade -y --no-install-recommends --allow-remove-essential && \\\n  xargs -a /tmp/packages.txt \\\n    apt-get -y -qq --no-install-recommends --allow-remove-essential install && \\\n  apt-get clean && \\\n  rm -rf /var/lib/apt/lists/* && \\\n  rm /tmp/packages.txt && \\\n  unset DEBIAN_FRONTEND && \\\n  # Restore universe and multiverse repositories to ease extending our stacks\n  mv /etc/apt/sources.list.universe /etc/apt/sources.list && \\\n  # Configure the system locale\n  locale-gen en_US.UTF-8 && \\\n  update-locale LANG=en_US.UTF-8 LANGUAGE=en_US:en LC_ALL=en_US.UTF-8 && \\\n  # Install the start and serve binaries.\n  mkdir /usr/lib/pid1 && mkdir /usr/lib/serve && \\\n  curl -f -A GCPBuildpacks https://dl.google.com/runtimes/serve/serve-1.0.1.tar.gz \\\n    | tar xvz -C /usr/lib/serve && \\\n  curl -f -A GCPBuildpacks https://dl.google.com/runtimes/pid1/pid1-1.0.4.tar.gz \\\n    | tar xvz -C /usr/lib/pid1 && \\\n  # These invoked as start, serve, /start and /serve in some places.\n  cp /usr/lib/pid1/pid1 /usr/bin/pid1 && \\\n  cp /usr/lib/serve/main /usr/bin/serve && \\\n  ln -s /usr/bin/pid1 /start && \\\n  ln -s /usr/bin/pid1 /usr/bin/start && \\\n  ln -s /usr/bin/serve /serve && \\\n  # Copy pid1 and serve license information into the directory that the license\n  # validation will look for them.\n  mkdir -p /usr/local/share/licenses/pid1/ && \\\n  cp /usr/lib/pid1/licenses.yaml /usr/local/share/licenses/pid1/ && \\\n  mkdir -p /usr/local/share/licenses/serve/ && \\\n  cp /usr/lib/serve/licenses.yaml /usr/local/share/licenses/serve/ && \\\n  # Configure the user's home directory\n  mkdir /www-data-home && \\\n  chown www-data:www-data /www-data-home && \\\n  usermod -d /www-data-home www-data && \\\n  # Users added to this group may have additional permissions on non-critical\n  # gofer filesystems, such as destinations for internal logs and metrics.\n  groupadd --system google && \\\n  # Pack hardcodes /workspace; we symlink it to /srv because that is the working\n  # directory set in the GAE instance definition.\n  rm -rf /srv && ln -s /workspace /srv && \\\n  # /home and /root must be writeable.\n  rm -rf /home && ln -sT /tmp /home && \\\n  rm -rf /root && ln -sT /tmp /root && \\\n  # Nginx creates the following directories at bootup, even if configured to be\n  # ignored. Because of the read-only filesystem in production, we create them\n  # ahead of time.\n  bash -c 'mkdir -p /var/lib/nginx/{body,proxy,fastcgi,uwsgi,scgi}' && \\\n  mkdir -m 0777 /tmp/run && \\\n  rm -rf /run && ln -s /tmp/run /run && \\\n  rm -rf /var/cache/nginx && ln -s /tmp/var/cache/nginx /var/cache/nginx && \\\n  # Remove /var/log/* because nginx attempts to write to it.\n  chmod a+w /var/log && \\\n  rm -rf /var/log/*\n\n# Workdir must be set to the resolved symlink path. While Docker resolves the\n# symlink at startup, the App Engine dataplane reads the workdir from the image\n# manifest and sets it as PWD in the environment of the created container. This\n# This causes issues in some languages, e.g. Go, which returns the value of PWD\n# from os.Getwd() if set. If PWD is a symlink, filepath.Walk() with os.Getwd()\n# will not return any files since it does not follow symlinks.\nWORKDIR /workspace\n\nARG cnb_uid=33\nARG cnb_gid=33\nUSER ${cnb_uid}:${cnb_gid}\n\nENV LANG=\"en_US.UTF-8\"\nENV LANGUAGE=\"en_US:en\"\nENV LC_ALL=\"en_US.UTF-8\"\nENV CNB_STACK_ID=\"google.gae.22\"\nENV CNB_USER_ID=${cnb_uid}\nENV CNB_GROUP_ID=${cnb_gid}\n\n# Standard buildpacks metadata.\nLABEL io.buildpacks.stack.id=\"google.gae.22\"\nLABEL io.buildpacks.stack.distro.name=\"Ubuntu\"\nLABEL io.buildpacks.stack.distro.version=\"22.04\"\nLABEL io.buildpacks.stack.maintainer=\"Google\"\nLABEL io.buildpacks.stack.mixins=\"[]\"\nLABEL io.buildpacks.stack.homepage \\\n  \"https://github.com/GoogleCloudPlatform/buildpacks/stacks/google-gae-22\"\n\n# Set $PORT to 8080 by default\nENV PORT 8080\nEXPOSE 8080\n\nCMD []\nENTRYPOINT []"
}