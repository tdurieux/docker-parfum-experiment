{
  "startTime": 1674255927797,
  "endTime": 1674255928718,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 7,
        "columnEnd": 29
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 7,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.9-slim\n\n# Allow statements and log messages to immediately appear in the Knative logs\nENV PYTHONUNBUFFERED True\n\n# Copy local code to the container image.\nENV APP_HOME /app\nWORKDIR $APP_HOME\nCOPY . ./\n\n# Install production dependencies.\nRUN apt-get update \\\n    && apt-get install --no-install-recommends gcc -y \\\n    && apt-get clean && rm -rf /var/lib/apt/lists/*;\nRUN pip install --no-cache-dir --upgrade pip\nRUN pip install --no-cache-dir Flask gunicorn google_pso_data_validator\n\n# Hive/Impala Dependencies\n# RUN pip install hdfs\n# RUN pip install thrift-sasl\n\n# Oracle Dependencies\n# if you are using Oracle you should add .rpm files\n# under your license to a directory called oracle/\n# and then uncomment the setup below.\n\n# ENV ORACLE_SID oracle\n# ENV ORACLE_ODBC_VERSION 12.2\n# ENV ORACLE_HOME /usr/lib/oracle/${ORACLE_ODBC_VERSION}/client64\n\n# RUN pip install cx_Oracle\n# RUN apt-get -y install --fix-missing --upgrade vim alien unixodbc-dev wget libaio1 libaio-dev\n\n# COPY oracle/*.rpm ./\n# RUN alien -i *.rpm && rm *.rpm \\\n#     && echo \"/usr/lib/oracle/${ORACLE_ODBC_VERSION}/client64/lib/\" > /etc/ld.so.conf.d/oracle.conf \\\n#     && ln -s /usr/include/oracle/${ORACLE_ODBC_VERSION}/client64 $ORACLE_HOME/include \\\n#     && ldconfig -v\n\n\n# Run the web service on container startup. Here we use the gunicorn\n# webserver, with one worker process and 8 threads.\n# For environments with multiple CPU cores, increase the number of workers\n# to be equal to the cores available.\n# Timeout is set to 0 to disable the timeouts of the workers to allow Cloud Run to handle instance scaling.\nCMD exec gunicorn --bind :$PORT --workers 1 --threads 8 --timeout 0 main:app\n"
}