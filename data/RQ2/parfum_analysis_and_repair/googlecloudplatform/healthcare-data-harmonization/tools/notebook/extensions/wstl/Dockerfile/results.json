{
  "startTime": 1674255432792,
  "endTime": 1674255433526,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 31,
        "lineEnd": 35,
        "columnStart": 22,
        "columnEnd": 8
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 26,
        "columnStart": 22,
        "columnEnd": 7
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright 2020 Google LLC.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nFROM openjdk:11-jdk-slim AS java-build-env\n\nUSER root\n\n# set up installation tools\nRUN apt-get update && apt-get install -yq --no-install-recommends \\\n    wget \\\n    bzip2 \\\n    ca-certificates \\\n    sudo \\\n    locales \\\n    fonts-liberation \\\n    gcc && rm -rf /var/lib/apt/lists/*;\n\nRUN echo \"en_US.UTF-8 UTF-8\" > /etc/locale.gen && \\\n    locale-gen\n\nRUN apt-get update && apt-get install --no-install-recommends -y git \\\n    python-dev \\\n    unzip \\\n    nano \\\n    curl \\\n    && apt-get clean && rm -rf /var/lib/apt/lists/*\n\nRUN wget https://golang.org/dl/go1.14.6.linux-amd64.tar.gz && \\\n    tar -C /usr/local -xzf go1.14.6.linux-amd64.tar.gz && \\\n    rm -f go1.14.6.linux-amd64.tar.gz\n\nENV PATH $PATH:/usr/local/go/bin\n\nENV GO_USER=\"jovyan\"\nRUN useradd -ms /bin/bash $GO_USER\nENV HOME=/home/$GO_USER\nENV GOPATH=$HOME\nENV GOBIN=$GOPATH/bin\nENV PATH $GOBIN:$PATH\n\nARG WSTL_INSTALL_DIR=\"/etc/wstl\"\nRUN mkdir -p $WSTL_INSTALL_DIR && \\\n    chown $GO_USER $WSTL_INSTALL_DIR\n\nUSER $GO_USER\nRUN mkdir -p $WSTL_INSTALL_DIR/bin && \\\n    mkdir -p $WSTL_INSTALL_DIR/tools/notebook\n\nCOPY --chown=$GO_USER ./mapping_engine $WSTL_INSTALL_DIR/mapping_engine\nCOPY --chown=$GO_USER ./mapping_language $WSTL_INSTALL_DIR/mapping_language\nCOPY --chown=$GO_USER ./tools/notebook/extensions/ $WSTL_INSTALL_DIR/tools/notebook/extensions/\n\nWORKDIR $WSTL_INSTALL_DIR/tools/notebook/extensions/wstl/\nRUN chmod +x ./build_go.sh && \\\n    ./build_go.sh && \\\n    cp $WSTL_INSTALL_DIR/tools/notebook/extensions/wstl/service/main/main $WSTL_INSTALL_DIR/bin && \\\n    rm -rf $WSTL_INSTALL_DIR/mapping_engine && \\\n    rm -rf $WSTL_INSTALL_DIR/mapping_language && \\\n    rm -rf $WSTL_INSTALL_DIR/tools\n\n# Now copy it into our base image.\nFROM gcr.io/distroless/base-debian10\nCOPY --from=java-build-env /etc/wstl/* /etc/wstl/bin/\nWORKDIR \"/home/jovyan\"\nCMD [\"/etc/wstl/bin/main\",  \"-host=0.0.0.0\"]\n"
}