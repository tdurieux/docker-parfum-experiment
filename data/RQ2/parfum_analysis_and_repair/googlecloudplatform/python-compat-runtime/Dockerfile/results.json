{
  "startTime": 1674250359631,
  "endTime": 1674250360202,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 72
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 50
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM gcr.io/google_appengine/python\n\n# Add the appengine compat library.\nCOPY appengine-compat /opt/appengine-compat\n\n# Add the vmruntime\nCOPY appengine-vmruntime /opt/appengine-vmruntime\n\n# Create a virtualenv. This virtualenv will contain the compat library,\n# vmruntime, and the user's app's dependencies.\nRUN virtualenv /env\nENV VIRTUAL_ENV /env\nENV PATH /env/bin:$PATH\n\n# Install the compat library and the vmruntime.\nRUN pip install --no-cache-dir --upgrade /opt/appengine-compat /opt/appengine-vmruntime\n\n# Install the default WSGI server and dependencies.\nCOPY resources/requirements.txt /opt/requirements.txt\nRUN pip install --no-cache-dir --upgrade -r /opt/requirements.txt\n\n# Setup the application directory\nWORKDIR /app\n\n# Add the default gunicorn configuration file to the app directory. This\n# default file will be overridden if the user adds a file called\n# \"gunicorn.conf.py\" to their app's root directory.\nADD resources/gunicorn.conf.py /app/gunicorn.conf.py\n\n# Expose port 8080, the default HTTP traffic port\nEXPOSE 8080\n\n# Configure the entrypoint with Managed VMs-essential configuration like \"bind\",\n# but leave the rest up to the config file.\nENTRYPOINT [\\\n    \"/env/bin/gunicorn\",\\\n    \"-b\", \":8080\",\\\n    \"vmruntime.wsgi:meta_app\",\\\n    \"--log-file=-\",\\\n    \"-c\", \"gunicorn.conf.py\"]\n"
}