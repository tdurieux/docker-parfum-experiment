{
  "startTime": 1674219821680,
  "endTime": 1674219822662,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 49,
        "columnEnd": 105
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 49,
        "columnEnd": 105
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright 2017 Google Inc. All rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# Dockerfile for building a Go application and generating the corresponding\n# application Dockerfile for it.  It expects the following build-args:\n#   go_version - Go SDK version to be bundled in this image.\n#   base_digest - distroless/base digest for use when generating application Dockerfile.\n#   build_tag - Docker label added into generated application image to identify builder.\n# When this builder image is executed, it expects the application source files\n# to be mounted at the current work directory.\n\nFROM gcr.io/gcp-runtimes/ubuntu_16_0_4:latest\n\nARG go_version\nARG base_digest\nARG build_tag\nENV GO_VERSION ${go_version}\nENV BASE_DIGEST ${base_digest}\nENV BUILD_TAG ${build_tag}\n\nRUN apt-get update -yq && apt-get upgrade -yq && apt-get install --no-install-recommends -y bzr git git-core mercurial subversion && rm -rf /var/lib/apt/lists/*;\n\n# Copy checksum for use in validation.\nCOPY checksums/go${GO_VERSION}.sha256 /tmp/\n\n# Download SDK and validate.\nADD https://storage.googleapis.com/golang/go${GO_VERSION}.linux-amd64.tar.gz /tmp/go.tar.gz\nRUN echo \"$(cat /tmp/go${GO_VERSION}.sha256)  /tmp/go.tar.gz\" | sha256sum -c - && \\\n    tar -C /usr/local -xzf /tmp/go.tar.gz && \\\n    rm /tmp/go.tar.gz /tmp/go${GO_VERSION}.sha256\n\nCOPY go-build.sh /usr/local/bin/\nRUN chmod 755 /usr/local/bin/go-build.sh\n\nENTRYPOINT [\"go-build.sh\"]\n"
}