{
  "startTime": 1674254016845,
  "endTime": 1674254018218,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 74,
        "lineEnd": 74,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 121,
        "lineEnd": 121,
        "columnStart": 19,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 73,
        "lineEnd": 73,
        "columnStart": 22,
        "columnEnd": 74
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 148,
        "lineEnd": 148,
        "columnStart": 22,
        "columnEnd": 61
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 157,
        "lineEnd": 157,
        "columnStart": 22,
        "columnEnd": 60
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 23,
        "lineEnd": 28,
        "columnStart": 22,
        "columnEnd": 11
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 54,
        "lineEnd": 69,
        "columnStart": 22,
        "columnEnd": 30
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 73,
        "lineEnd": 73,
        "columnStart": 22,
        "columnEnd": 74
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 90,
        "lineEnd": 92,
        "columnStart": 22,
        "columnEnd": 15
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 111,
        "lineEnd": 114,
        "columnStart": 22,
        "columnEnd": 20
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 148,
        "lineEnd": 148,
        "columnStart": 22,
        "columnEnd": 61
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 157,
        "lineEnd": 157,
        "columnStart": 22,
        "columnEnd": 60
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright 2019 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nFROM ubuntu:20.04\n\n# Use GCE apt servers\nARG GCE_REGION=us-west1\nRUN cp /etc/apt/sources.list /etc/apt/sources.list.orig && \\\n    sed -i \"s/archive.ubuntu.com/${GCE_REGION}.gce.archive.ubuntu.com/g\" /etc/apt/sources.list\n\n# Install essentials\nRUN \\\n    apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \\\n        curl \\\n        build-essential \\\n        ca-certificates \\\n        git \\\n        vim && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /opt\n\n# Checkout hashed commits with CUDA buffer support.\n# This can be removed once MR 1633 is on a release tag:\n#   https://gitlab.freedesktop.org/gstreamer/gst-plugins-bad/merge_requests/1633\nARG GSTREAMER_VERSION=77e6c98f6fe7cfb2e6891560c5a1e7bd36d41fec\nARG GST_PLUGINS_BASE_VERSION=932dfd4031bff98df65a045230b03b40c00a5271\nARG GST_PLUGINS_GOOD_VERSION=39c6bc0507554098181baeb01f7cb53718c81bd6\nARG GST_PLUGINS_BAD_VERSION=1138c798ffa6d9b500393cc537db60b805b36e59\nARG GST_PLUGINS_UGLY_VERSION=a9105ad1e1fb8cbcf787c2a967697707eea405ed\nARG GST_PYTHON_VERSION=7a0decbec242b026391ff6504f0619259aa34721\n\n# cloner repo for each gstreamer module\nRUN git clone https://gitlab.freedesktop.org/gstreamer/gstreamer.git && cd gstreamer && git checkout ${GSTREAMER_VERSION}\nRUN git clone https://gitlab.freedesktop.org/gstreamer/gst-plugins-base.git && cd gst-plugins-base && git checkout ${GST_PLUGINS_BASE_VERSION}\nRUN git clone https://gitlab.freedesktop.org/gstreamer/gst-plugins-good && cd gst-plugins-good && git checkout ${GST_PLUGINS_GOOD_VERSION}\nRUN git clone https://gitlab.freedesktop.org/gstreamer/gst-plugins-bad && cd gst-plugins-bad && git checkout ${GST_PLUGINS_BAD_VERSION}\nRUN git clone https://gitlab.freedesktop.org/gstreamer/gst-plugins-ugly && cd gst-plugins-ugly && git checkout ${GST_PLUGINS_UGLY_VERSION}\nRUN git clone https://gitlab.freedesktop.org/gstreamer/gst-python && cd gst-python && git checkout ${GST_PYTHON_VERSION}\n\nWORKDIR /opt\n\n# Install base build deps\nRUN \\\n    apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \\\n        autopoint \\\n        autoconf \\\n        automake \\\n        autotools-dev \\\n        libtool \\\n        gettext \\\n        bison \\\n        flex \\\n        gtk-doc-tools \\\n        libtool-bin \\\n        libgtk2.0-dev \\\n        libgl1-mesa-dev \\\n        libopus-dev \\\n        libpulse-dev \\\n        libgirepository1.0-dev && rm -rf /var/lib/apt/lists/*;\n\n# Install meson build deps\nRUN \\\n    apt-get update && apt install --no-install-recommends -y python3-pip python-gi-dev ninja-build && \\\n    pip3 install --no-cache-dir meson && rm -rf /var/lib/apt/lists/*;\n\n# Build gstreamer\nRUN \\\n    cd /opt/gstreamer && \\\n    meson build --prefix=/usr && \\\n    ninja -C build install\n\n# Build gstreamer-base\nRUN \\\n    cd /opt/gst-plugins-base && \\\n    meson build --prefix=/usr && \\\n    ninja -C build install\n\n# Install deps for gst-plugins-good\nRUN \\\n    apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \\\n        libvpx-dev \\\n        libvpx6 && rm -rf /var/lib/apt/lists/*;\n\n# Build gst-plugins-good\nRUN \\\n    cd /opt/gst-plugins-good && \\\n    meson build --prefix=/usr && \\\n    ninja -C build install\n\n# Build gst-instruments from source\nARG GST_INSTRUMENTS_VERSION=0.2.4\nRUN \\\n    cd /opt/ && \\\n    git clone https://github.com/kirushyk/gst-instruments.git && \\\n    cd gst-instruments && git checkout ${GST_INSTRUMENTS_VERSION} && \\\n    ./autogen.sh --prefix=/usr && \\\n    make -j8 && make install\n\n# Install deps for gst-plugins-bad\nRUN \\\n    apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \\\n        libwebrtc-audio-processing-dev \\\n        libssl-dev \\\n        libsrtp2-dev && rm -rf /var/lib/apt/lists/*;\n\n# Install usrsctp from source\nARG USRSCTP_VERSION=dce5c0ed0724356f42b26666714646b76376b24e\nRUN \\\n    git clone https://github.com/sctplab/usrsctp.git && \\\n    cd usrsctp && git checkout ${USRSCTP_VERSION} && \\\n    ./bootstrap && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr && \\\n        make && make install && make clean\n\n# Install libnice from source\nARG LIBNICE_VERSION=1dbe38d6abe74c415bf4ae44190980c61874a04f\nRUN \\\n    git clone https://gitlab.freedesktop.org/libnice/libnice.git && \\\n    cd libnice && git checkout ${LIBNICE_VERSION} && \\\n    meson build --prefix=/usr && \\\n    ninja -C build install\n\n# Install gst-plugins-bad from source\nRUN \\\n    cd /opt/gst-plugins-bad && \\\n    meson build --prefix=/usr && \\\n    ninja -C build install\n\n# Install gst-python from source\nRUN \\\n    cd /opt/gst-python && \\\n    meson build --prefix=/usr \\\n        -Dpygi-overrides-dir=/usr/lib/python3/dist-packages/gi/overrides && \\\n    ninja -C build install\n\n# Install GstShark for latency tracing\nARG GST_SHARK_VERSION=v0.6.1\nRUN \\\n    apt-get update && apt install --no-install-recommends -y graphviz libgraphviz-dev && \\\n    cd /opt && \\\n    git clone --depth 1 https://github.com/RidgeRun/gst-shark -b ${GST_SHARK_VERSION} && \\\n    cd gst-shark && ./autogen.sh --prefix=/usr && \\\n        make && make install && make clean && rm -rf /var/lib/apt/lists/*;\n\n# Build and install gst-plugins-ugly from source\n# This package includes the x264 encoder for non-nvenc accelerated pipelines.\nRUN \\\n    apt-get update && apt install --no-install-recommends -y libx264-155 libx264-dev && rm -rf /var/lib/apt/lists/*;\n\nRUN \\\n    cd /opt/gst-plugins-ugly && \\\n    meson build --prefix=/usr && \\\n    ninja -C build install"
}