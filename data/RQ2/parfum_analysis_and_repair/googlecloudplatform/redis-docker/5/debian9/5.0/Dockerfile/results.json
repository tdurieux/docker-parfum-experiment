{
  "startTime": 1674248371336,
  "endTime": 1674248372348,
  "originalSmells": [
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 73,
        "lineEnd": 73,
        "columnStart": 4,
        "columnEnd": 61
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 2,
        "columnEnd": 56
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM marketplace.gcr.io/google/debian9\n\n# Get the list of packages from the base image.\n\n# add our user and group first to make sure their IDs get assigned consistently, regardless of whatever dependencies get added\nRUN groupadd -r redis && useradd -r -g redis redis\n\nRUN set -ex; \\\n\tif ! command -v gpg > /dev/null; then \\\n\t\tapt-get update; \\\n\t\tapt-get install -y --no-install-recommends \\\n\t\t\tgnupg \\\n\t\t\tdirmngr \\\n\t\t; \\\n\t\trm -rf /var/lib/apt/lists/*; \\\n\tfi\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n\t\tca-certificates \\\n\t\twget \\\n\t&& rm -rf /var/lib/apt/lists/*\n\n# add gosu for easy step-down from root\nENV GOSU_VERSION 1.11\nENV GOSU_GPG B42F6819007F00F88E364FD4036A9C25BF357DD4\n\nRUN set -x \\\n\t&& wget -q -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)\" \\\n\t&& wget -q -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc\" \\\n\t# copy source code\n\t&& wget -q -O /usr/local/src/gosu.tar.gz \"https://github.com/tianon/gosu/archive/$GOSU_VERSION.tar.gz\" \\\n\t# extract gosu binary and check signature\n\t&& export GNUPGHOME=\"$(mktemp -d)\" \\\n\t&& found='' && \\\n\tfor server in \\\n\t\tpool.sks-keyservers.net \\\n\t\tna.pool.sks-keyservers.net \\\n\t\teu.pool.sks-keyservers.net \\\n\t\toc.pool.sks-keyservers.net \\\n\t\tha.pool.sks-keyservers.net \\\n\t\thkp://p80.pool.sks-keyservers.net:80 \\\n\t\thkp://keyserver.ubuntu.com:80 \\\n\t\tpgp.mit.edu; \\\n\tdo \\\n\t\tgpg --batch --no-tty --keyserver $server --recv-keys $GOSU_GPG \\\n\t\t\t&& found=yes && break; \\\n\tdone; \\\n\ttest -n \"$found\" \\\n\t&& gpg --no-tty --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \\\n\t&& rm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc \\\n\t&& chmod +x /usr/local/bin/gosu \\\n\t&& gosu nobody true\n\n# Install Redis Search\nENV REDIS_VERSION 5.0.14\nENV REDIS_DOWNLOAD_URL http://download.redis.io/releases/redis-5.0.14.tar.gz\nENV REDIS_DOWNLOAD_SHA 3ea5024766d983249e80d4aa9457c897a9f079957d0fb1f35682df233f997f32\n\nENV C2D_RELEASE=${REDIS_VERSION}\n\n# for redis-sentinel see: http://redis.io/topics/sentinel\nRUN set -ex \\\n\t\\\n\t&& buildDeps=' \\\n\t\tgcc \\\n\t\tlibc6-dev \\\n\t\tmake \\\n\t' \\\n\t&& apt-get update \\\n\t&& apt-get install -y $buildDeps --no-install-recommends \\\n\t&& rm -rf /var/lib/apt/lists/* \\\n\t\\\n\t&& wget -q -O redis.tar.gz \"$REDIS_DOWNLOAD_URL\" \\\n\t&& echo \"$REDIS_DOWNLOAD_SHA  *redis.tar.gz\" | sha256sum -c - \\\n\t&& mkdir -p /usr/local/src/redis \\\n\t&& tar -xzf redis.tar.gz -C /usr/local/src/redis --strip-components=1 \\\n\t&& rm redis.tar.gz \\\n\n# Disable Redis protected mode [1] as it is unnecessary in context\n# of Docker. Ports are not automatically exposed when running inside\n# Docker, but rather explicitely by specifying -p / -P.\n# [1] https://github.com/antirez/redis/commit/edd4d555df57dc84265fdfb4ef59a4678832f6da\n\t&& grep -q '^#define CONFIG_DEFAULT_PROTECTED_MODE 1$' /usr/local/src/redis/src/server.h \\\n\t&& sed -ri 's!^(#define CONFIG_DEFAULT_PROTECTED_MODE) 1$!\\1 0!' /usr/local/src/redis/src/server.h \\\n\t&& grep -q '^#define CONFIG_DEFAULT_PROTECTED_MODE 0$' /usr/local/src/redis/src/server.h \\\n# for future reference, we modify this directly in the source instead of just supplying a default configuration flag because apparently \"if you specify any argument to redis-server, [it assumes] you are going to specify everything\"\n# see also https://github.com/docker-library/redis/issues/4#issuecomment-50780840\n# (more exactly, this makes sure the default behavior of \"save on SIGTERM\" stays functional by default)\n\n\t&& make -C /usr/local/src/redis \\\n\t&& make -C /usr/local/src/redis install \\\n\n\t&& rm -r /usr/local/src/redis \\\n\n\t&& apt-get purge -y --auto-remove $buildDeps\n\nRUN mkdir /data && chown redis:redis /data\nVOLUME /data\nWORKDIR /data\n\n# Copy BSD License\nRUN mkdir -p /usr/share/redis\nCOPY LICENSE /usr/share/redis/\n\nCOPY docker-entrypoint.sh /usr/local/bin/\nENTRYPOINT [\"docker-entrypoint.sh\"]\n\nEXPOSE 6379\nCMD [ \"redis-server\" ]\n"
}