{
  "startTime": 1674248009484,
  "endTime": 1674248010468,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 33,
        "lineEnd": 36,
        "columnStart": 25,
        "columnEnd": 14
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 33,
        "lineEnd": 36,
        "columnStart": 25,
        "columnEnd": 14
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     https://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# [START cloudrun_fs_dockerfile]\n\n# Use the official maven/Java 11 image to create a build artifact.\n# https://hub.docker.com/_/maven\nFROM maven:3.8.5-jdk-11 as builder\n\n# Copy local code to the container image.\nWORKDIR /app\nCOPY pom.xml .\nCOPY src ./src\n\n# Build a release artifact.\nRUN mvn package -DskipTests\n\n# Use AdoptOpenJDK for base image.\n# https://docs.docker.com/develop/develop-images/multistage-build/#use-multi-stage-builds\nFROM eclipse-temurin:18-jdk\n\n# Install filesystem dependencies\nRUN apt-get update -y && apt-get install --no-install-recommends -y \\\n    tini \\\n    nfs-kernel-server \\\n    nfs-common \\\n    && apt-get clean && rm -rf /var/lib/apt/lists/*;\n\n# Set fallback mount directory\nENV MNT_DIR /mnt/nfs/filestore\n\n# Copy the jar to the production image from the builder stage.\nCOPY --from=builder /app/target/filesystem-*.jar /filesystem.jar\n\n# Copy the statup script\nCOPY run.sh ./run.sh\nRUN chmod +x ./run.sh\n\n# Use tini to manage zombie processes and signal forwarding\n# https://github.com/krallin/tini\nENTRYPOINT [\"/usr/bin/tini\", \"--\"]\n\n# Run the web service on container startup.\nCMD [\"/run.sh\"]\n# [END cloudrun_fs_dockerfile]"
}