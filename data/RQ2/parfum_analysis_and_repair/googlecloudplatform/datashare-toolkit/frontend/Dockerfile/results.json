{
  "startTime": 1674219984933,
  "endTime": 1674219985967,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "###############################################################################\n##  Name:   Dockerfile\n##  Date:   2020-04-03\n##  Developer:  Chris Page\n##  Email:  chrispage@google.com\n##  Purpose:   This Dockerfile contains the ds-frontend-ui application\n################################################################################\n\n## ---- Base Node ----\n# Using official node runtime base apline image\nFROM node:16-alpine as base\n\n# Set the file maintainer (your name - the file's author)\nLABEL maintainer=\"Chris Page <chrispage@google.com>, Mark Servidio <mservidio@google.com>\"\n\n# Set the application directory\nRUN mkdir -p /app\nWORKDIR /app\n\n## ---- Dependencies ----\nFROM base as dependencies\n\nCOPY package*.json /app/\n# install app dependencies including 'devDependencies'\nRUN npm install && npm cache clean --force;\n\n## ---- Copy Files/Build ----\nFROM dependencies AS build\nWORKDIR /app\n\n# Bundle app source\nCOPY src src/\nCOPY *.js ./\nCOPY public public/\nRUN npm run build\n\n# --- Release with Alpine ----\nFROM nginx:1.17-alpine as release\nRUN apk update && apk add --no-cache jq moreutils\nCOPY config/nginx.conf /etc/nginx/nginx.conf\nCOPY config/default.conf /etc/nginx/conf.d/default.conf\nCOPY --from=build /app/dist /usr/share/nginx/html\n\nCOPY ./docker/entrypoint.sh /entrypoint.sh\nEXPOSE 8080\nENTRYPOINT [\"sh\", \"/entrypoint.sh\"]\nCMD [\"nginx\", \"-g\", \"daemon off;\"]\n"
}