{
  "startTime": 1674221073395,
  "endTime": 1674221074278,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 18,
        "columnEnd": 52
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 18,
        "columnEnd": 52
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Docker image used for building and running unit tests for the Flink Operator.\n#\n# It installs required build dependencies (e.g., Go 12+), copies the project\n# source code into the container, build and run tests.\n#\n# Usage:\n#\n# docker build -t flink-operator-builder -f Dockerfile.builder .\n# docker run flink-operator-builder\n\n\nFROM ubuntu:18.04\n\nRUN apt update && apt install --no-install-recommends -yqq curl git make gcc && rm -rf /var/lib/apt/lists/*;\n\n# Install Go\nRUN curl -f -s https://dl.google.com/go/go1.14.3.linux-amd64.tar.gz | tar -xz -C /usr/local/\nENV GOROOT=/usr/local/go\nENV PATH=${PATH}:${GOROOT}/bin\n\n# Install Kubebuilder\nRUN curl -f -sL https://go.kubebuilder.io/dl/2.0.1/linux/amd64 | tar -xz -C /usr/local/ \\\n    && mv /usr/local/kubebuilder_2.0.1_linux_amd64 /usr/local/kubebuilder\nENV PATH=${PATH}:/usr/local/kubebuilder/bin\n\nWORKDIR /workspace/\n\n# Copy the Go Modules manifests\nCOPY go.mod go.mod\nCOPY go.sum go.sum\n\n# Cache deps before building so that we don't need to re-download as much\n# and so that source changes don't invalidate our downloaded layer.\nRUN go mod download\n\n# Copy the project source code\nCOPY . /workspace/\n\n# Build the flink-operator binary\nRUN make build\n"
}