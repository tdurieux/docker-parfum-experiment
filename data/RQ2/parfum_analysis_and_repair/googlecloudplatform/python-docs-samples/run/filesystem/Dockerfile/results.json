{
  "startTime": 1674246061364,
  "endTime": 1674246062294,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 20,
        "lineEnd": 22,
        "columnStart": 25,
        "columnEnd": 14
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 20,
        "lineEnd": 22,
        "columnStart": 25,
        "columnEnd": 14
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# [START cloudrun_fs_dockerfile]\n# Use the official lightweight Python image.\n# https://hub.docker.com/_/python\nFROM python:3.10-slim\n\n# Install system dependencies\nRUN apt-get update -y && apt-get install --no-install-recommends -y \\\n    tini \\\n    nfs-common \\\n    && apt-get clean && rm -rf /var/lib/apt/lists/*;\n\n# Set fallback mount directory\nENV MNT_DIR /mnt/nfs/filestore\n\n# Copy local code to the container image.\nENV APP_HOME /app\nWORKDIR $APP_HOME\nCOPY . ./\n\n# Install production dependencies.\nRUN pip install --no-cache-dir -r requirements.txt\n\n# Ensure the script is executable\nRUN chmod +x /app/run.sh\n\n# Use tini to manage zombie processes and signal forwarding\n# https://github.com/krallin/tini\nENTRYPOINT [\"/usr/bin/tini\", \"--\"]\n\n# Pass the startup script as arguments to tini\nCMD [\"/app/run.sh\"]\n# [END cloudrun_fs_dockerfile]"
}