diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/googlecloudplatform/python-docs-samples/cloud-sql/sql-server/sqlalchemy/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/googlecloudplatform/python-docs-samples/cloud-sql/sql-server/sqlalchemy/Dockerfile/repaired.Dockerfile
index 152051c..50cc4c2 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/googlecloudplatform/python-docs-samples/cloud-sql/sql-server/sqlalchemy/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/googlecloudplatform/python-docs-samples/cloud-sql/sql-server/sqlalchemy/Dockerfile/repaired.Dockerfile
@@ -17,14 +17,14 @@
 FROM python:3.10-buster
 
 RUN apt-get update
-RUN apt install unixodbc-dev -y
+RUN apt install --no-install-recommends unixodbc-dev -y && rm -rf /var/lib/apt/lists/*;
 
 # Add SQL Server ODBC Driver 17 for Ubuntu 18.04
-RUN curl https://packages.microsoft.com/keys/microsoft.asc | apt-key add -
-RUN curl https://packages.microsoft.com/config/ubuntu/18.04/prod.list > /etc/apt/sources.list.d/mssql-release.list
+RUN curl -f https://packages.microsoft.com/keys/microsoft.asc | apt-key add -
+RUN curl -f https://packages.microsoft.com/config/ubuntu/18.04/prod.list > /etc/apt/sources.list.d/mssql-release.list
 RUN apt-get update
-RUN ACCEPT_EULA=Y apt-get install -y --allow-unauthenticated msodbcsql17
-RUN ACCEPT_EULA=Y apt-get install -y --allow-unauthenticated mssql-tools
+RUN ACCEPT_EULA=Y apt-get --no-install-recommends install -y --allow-unauthenticated msodbcsql17 && rm -rf /var/lib/apt/lists/*;
+RUN ACCEPT_EULA=Y apt-get --no-install-recommends install -y --allow-unauthenticated mssql-tools && rm -rf /var/lib/apt/lists/*;
 RUN echo 'export PATH="$PATH:/opt/mssql-tools/bin"' >> ~/.bash_profile
 RUN echo 'export PATH="$PATH:/opt/mssql-tools/bin"' >> ~/.bashrc
 
@@ -34,8 +34,8 @@ COPY requirements.txt ./
 
 # Install production dependencies.
 RUN set -ex; \
-    pip install -r requirements.txt; \
-    pip install gunicorn
+    pip install --no-cache-dir -r requirements.txt; \
+    pip install --no-cache-dir gunicorn
 
 # Copy local code to the container image.
 ENV APP_HOME /app