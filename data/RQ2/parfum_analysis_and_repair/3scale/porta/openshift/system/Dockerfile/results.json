{
  "startTime": 1674220436959,
  "endTime": 1674220438142,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 96
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 7,
        "columnEnd": 26
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 7,
        "columnEnd": 38
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 17,
        "lineEnd": 24,
        "columnStart": 7,
        "columnEnd": 25
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 7,
        "columnEnd": 34
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM quay.io/centos7/ruby-26-centos7\n\nUSER root\n\nARG BUNDLER_ENV\nENV BUNDLER_ENV=\"${BUNDLER_ENV}\" \\\n    TZ=:/etc/localtime \\\n    BUNDLE_GEMFILE=Gemfile \\\n    BUNDLE_WITHOUT=development:test \\\n    NODEJS_SCL=rh-nodejs12\n\nWORKDIR /opt/system\n\nRUN yum-config-manager --save --setopt=cbs.centos.org_repos_sclo7-rh-ruby26-rh-candidate_x86_64_os_.skip_if_unavailable=true \\\n    && rpm -Uvh https://download.postgresql.org/pub/repos/yum/reporpms/EL-7-x86_64/pgdg-redhat-repo-latest.noarch.rpm \\\n    && yum -y update \\\n    && yum remove -y postgresql \\\n    && yum -y install centos-release-scl-rh \\\n              ImageMagick \\\n              ImageMagick-devel \\\n              unixODBC-devel \\\n              mysql \\\n              postgresql10 postgresql10-devel postgresql10-libs \\\n              file \\\n              rh-nodejs12 \\\n    && yum install -y epel-release \\\n    && yum -y clean all && rm -rf /var/cache/yum\n\n# Install sphinx search\nARG SPHINX_VERSION=3.4.1\nRUN curl -f -sSL https://sphinxsearch.com/files/sphinx-${SPHINX_VERSION}-efbcc65-linux-amd64.tar.gz | tar xz -C /tmp \\\n    && cp /tmp/sphinx-${SPHINX_VERSION}/bin/* /usr/bin/ \\\n    && rm -rf /tmp/sphinx*\n\n# We don't want to redo the bundle install step every time a file has changed:\n# copying only the gemspec files and copying all the other files after the build\nADD lib/developer_portal/*.gemspec lib/developer_portal/\nADD vendor/active-docs/*.gemspec vendor/active-docs/\nADD Gemfile* ./\nADD Rakefile ./\n\nCOPY openshift/system/contrib/scl_enable ./etc/\n\nENV BASH_ENV=/opt/system/etc/scl_enable \\\n    ENV=/opt/system/etc/scl_enable \\\n    PROMPT_COMMAND=\". /opt/system/etc/scl_enable\" \\\n    RAILS_ENV=production \\\n    SAFETY_ASSURED=1\n\nRUN export ${BUNDLER_ENV} >/dev/null\\\n    && source /opt/system/etc/scl_enable \\\n    && gem install bundler --version 2.2.25 \\\n    && bundle config build.pg --with-pg-config=/usr/pgsql-10/bin/pg_config \\\n    && bundle install --deployment --jobs $(grep -c processor /proc/cpuinfo) --retry=5\n\nRUN chgrp root /opt/system/\n\nADD . ./\nADD config/docker/* ./config/\nADD package.json ./\nADD yarn.lock ./\nADD openshift/system/config/* ./config/\n\nRUN export ${BUNDLER_ENV} >/dev/null \\\n    && source /opt/system/etc/scl_enable \\\n    && bundle exec rake tmp:create \\\n    && mkdir -p public/assets db/sphinx \\\n    && chmod g+w -vfR log tmp public/assets db/sphinx \\\n    && umask 0002 \\\n    && cd /opt/system \\\n    && npm install -g yarn \\\n    && yarn install:safe --no-progress \\\n    && bundle exec rake assets:precompile tmp:clear \\\n    && rm log/*.log \\\n    && chmod g+w /opt/system/config && npm cache clean --force; && yarn cache clean;\n\nUSER 1001\nADD openshift/system/entrypoint.sh /opt/system/entrypoint.sh\nEXPOSE 3000 9306\n# TODO: dumb-init!\nENTRYPOINT [\"/opt/system/entrypoint.sh\"]\nCMD [\"unicorn\", \"-c\", \"config/unicorn.rb\", \"-E\", \"${RAILS_ENV}\", \"config.ru\"]\n\n# vim: set ft=dockerfile:\n"
}