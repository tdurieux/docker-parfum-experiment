{
  "startTime": 1674255118569,
  "endTime": 1674255119468,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 86
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 12,
        "columnEnd": 110
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 119
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 12,
        "columnEnd": 113
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 73,
        "lineEnd": 73,
        "columnStart": 4,
        "columnEnd": 118
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 74,
        "lineEnd": 74,
        "columnStart": 6,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 22,
        "columnEnd": 69
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 63
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:16.04 AS opencv\n\n# install cmake 3.11\nRUN apt-get update && apt-get install -y --no-install-recommends wget && \\\n      wget --no-check-certificate https://cmake.org/files/v3.11/cmake-3.11.0-Linux-x86_64.tar.gz && \\\n      tar -xvf cmake-3.11.0-Linux-x86_64.tar.gz && \\\n      cd cmake-3.11.0-Linux-x86_64 && cp -r bin /usr/ &&  \\\n      cp -r share /usr/ && \\\n      cp -r doc /usr/share/ && cp -r man /usr/share/ && \\\n      cd .. && \\\n      rm -r cmake-3.11.0-Linux-x86_64 && \\\n      rm cmake-3.11.0-Linux-x86_64.tar.gz && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get install -y --no-install-recommends \\\n            git build-essential pkg-config g++ unzip libgtk2.0-dev \\\n            curl ca-certificates libcurl4-openssl-dev libssl-dev \\\n            libavcodec-dev libavformat-dev libswscale-dev libtbb2 libtbb-dev \\\n            libjpeg-dev libpng-dev libtiff-dev libdc1394-22-dev && \\\n            rm -rf /var/lib/apt/lists/*\n\nARG OPENCV_VERSION=\"4.0.1\"\nENV OPENCV_VERSION $OPENCV_VERSION\n\nRUN curl -f -Lo opencv.zip https://github.com/opencv/opencv/archive/${OPENCV_VERSION}.zip && \\\n            unzip -q opencv.zip && \\\n            curl -f -Lo opencv_contrib.zip https://github.com/opencv/opencv_contrib/archive/${OPENCV_VERSION}.zip && \\\n            unzip -q opencv_contrib.zip && \\\n            rm opencv.zip opencv_contrib.zip && \\\n            cd opencv-${OPENCV_VERSION} && \\\n            mkdir build && cd build && \\\n            cmake -D CMAKE_BUILD_TYPE=RELEASE \\\n                  -D CMAKE_INSTALL_PREFIX=/usr/local \\\n                  -D OPENCV_EXTRA_MODULES_PATH=../../opencv_contrib-${OPENCV_VERSION}/modules \\\n                  -D WITH_JASPER=OFF \\\n                  -D BUILD_DOCS=OFF \\\n                  -D BUILD_EXAMPLES=OFF \\\n                  -D BUILD_TESTS=OFF \\\n                  -D BUILD_PERF_TESTS=OFF \\\n                  -D BUILD_opencv_java=NO \\\n                  -D BUILD_opencv_python=NO \\\n                  -D BUILD_opencv_python2=NO \\\n                  -D BUILD_opencv_python3=NO \\\n                  -D OPENCV_GENERATE_PKGCONFIG=ON .. && \\\n            make -j $(nproc --all) && \\\n            make preinstall && make install && ldconfig && \\\n            cd / && rm -rf opencv*\n\n# clone seabolt-1.7.0 source code\nRUN git clone -b v1.7.4 https://github.com/neo4j-drivers/seabolt.git /seabolt\n# invoke cmake build and install artifacts - default location is /usr/local\nWORKDIR /seabolt/build\n# CMAKE_INSTALL_LIBDIR=lib is a hack where we override default lib64 to lib to workaround a defect\n# in our generated pkg-config file\nRUN cmake -D CMAKE_BUILD_TYPE=Release -D CMAKE_INSTALL_LIBDIR=lib .. && cmake --build . --target install\nRUN curl -f -sSL \"https://github.com/gotestyourself/gotestsum/releases/download/v0.3.1/gotestsum_0.3.1_linux_amd64.tar.gz\" | tar -xz -C /usr/local/bin gotestsum\n\n#################\n#  Go + OpenCV  #\n#################\nFROM opencv\n\nARG GOVERSION=\"1.13\"\nENV GOVERSION $GOVERSION\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n            git software-properties-common && \\\n            curl -f -Lo go${GOVERSION}.linux-amd64.tar.gz https://dl.google.com/go/go${GOVERSION}.linux-amd64.tar.gz && \\\n            tar -C /usr/local -xzf go${GOVERSION}.linux-amd64.tar.gz && \\\n            rm go${GOVERSION}.linux-amd64.tar.gz && \\\n            rm -rf /var/lib/apt/lists/*\n\n# for circleci\nENV DOCKERVER=\"19.03.5\"\nRUN curl -f -L -o /tmp/docker-$DOCKERVER.tgz https://download.docker.com/linux/static/stable/x86_64/docker-$DOCKERVER.tgz && \\\n      tar -xz -C /tmp -f /tmp/docker-$DOCKERVER.tgz && \\\n      mv /tmp/docker/* /usr/bin && rm /tmp/docker-$DOCKERVER.tgz\n\nENV GOPATH /go\nENV PATH $GOPATH/bin:/usr/local/go/bin:$PATH\n\nRUN mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\"\n\n"
}