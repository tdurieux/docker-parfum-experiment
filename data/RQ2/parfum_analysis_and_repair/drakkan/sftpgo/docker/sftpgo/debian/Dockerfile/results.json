{
  "startTime": 1674254298829,
  "endTime": 1674254299788,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 22,
        "columnEnd": 56
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 22,
        "columnEnd": 56
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# we use a multi stage build to have a separate build and run env\nFROM golang:latest as buildenv\nLABEL maintainer=\"nicola.murino@gmail.com\"\nRUN go get -v -d github.com/drakkan/sftpgo\nWORKDIR /go/src/github.com/drakkan/sftpgo\nARG TAG\nARG FEATURES\n# Use --build-arg TAG=LATEST for latest tag. Use e.g. --build-arg TAG=v1.0.0 for a specific tag/commit. Otherwise HEAD (master) is built.\nRUN git checkout $(if [ \"${TAG}\" = LATEST ]; then echo `git rev-list --tags --max-count=1`; elif [ -n \"${TAG}\" ]; then echo \"${TAG}\"; else echo HEAD; fi)\nRUN go build $(if [ -n \"${FEATURES}\" ]; then echo \"-tags ${FEATURES}\"; fi) -ldflags \"-s -w -X github.com/drakkan/sftpgo/version.commit=`git describe --always --dirty` -X github.com/drakkan/sftpgo/version.date=`date -u +%FT%TZ`\" -v -o sftpgo\n\n# now define the run environment\nFROM debian:latest\n\n# ca-certificates is needed for Cloud Storage Support and for HTTPS/FTPS.\nRUN apt-get update && apt-get install --no-install-recommends -y ca-certificates && apt-get clean && rm -rf /var/lib/apt/lists/*;\n\n# git and rsync are optional, uncomment the next line to add support for them if needed.\n#RUN apt-get update && apt-get install -y git rsync && apt-get clean\n\nARG BASE_DIR=/app\nARG DATA_REL_DIR=data\nARG CONFIG_REL_DIR=config\nARG BACKUP_REL_DIR=backups\nARG USERNAME=sftpgo\nARG GROUPNAME=sftpgo\nARG UID=515\nARG GID=515\nARG WEB_REL_PATH=web\n\n# HOME_DIR for sftpgo itself\nENV HOME_DIR=${BASE_DIR}/${USERNAME}\n# DATA_DIR, this is a volume that you can use hold user's home dirs\nENV DATA_DIR=${BASE_DIR}/${DATA_REL_DIR}\n# CONFIG_DIR, this is a volume to persist the daemon private keys, configuration file ecc..\nENV CONFIG_DIR=${BASE_DIR}/${CONFIG_REL_DIR}\n# BACKUPS_DIR, this is a volume to store backups done using \"dumpdata\" REST API\nENV BACKUPS_DIR=${BASE_DIR}/${BACKUP_REL_DIR}\nENV WEB_DIR=${BASE_DIR}/${WEB_REL_PATH}\n\nRUN mkdir -p ${DATA_DIR} ${CONFIG_DIR} ${WEB_DIR} ${BACKUPS_DIR}\nRUN groupadd --system -g ${GID} ${GROUPNAME}\nRUN useradd --system --create-home --no-log-init --home-dir ${HOME_DIR} --comment \"SFTPGo user\" --shell /usr/sbin/nologin --gid ${GID} --uid ${UID} ${USERNAME}\n\nWORKDIR ${HOME_DIR}\nRUN mkdir -p bin .config/sftpgo\nENV PATH ${HOME_DIR}/bin:$PATH\nCOPY --from=buildenv /go/src/github.com/drakkan/sftpgo/sftpgo bin/sftpgo\n# default config file to use if no config file is found inside the CONFIG_DIR volume.\n# You can override each configuration options via env vars too\nCOPY --from=buildenv /go/src/github.com/drakkan/sftpgo/sftpgo.json .config/sftpgo/\nCOPY --from=buildenv /go/src/github.com/drakkan/sftpgo/templates ${WEB_DIR}/templates\nCOPY --from=buildenv /go/src/github.com/drakkan/sftpgo/static ${WEB_DIR}/static\nRUN chown -R ${UID}:${GID} ${DATA_DIR} ${BACKUPS_DIR}\n\n# run as non root user\nUSER ${USERNAME}\n\nEXPOSE 2022 8080\n\n# the defined volumes must have write access for the UID and GID defined above\nVOLUME [ \"$DATA_DIR\", \"$CONFIG_DIR\", \"$BACKUPS_DIR\" ]\n\n# override some default configuration options using env vars\nENV SFTPGO_CONFIG_DIR=${CONFIG_DIR}\n# setting SFTPGO_LOG_FILE_PATH to an empty string will log to stdout\nENV SFTPGO_LOG_FILE_PATH=\"\"\nENV SFTPGO_HTTPD__BIND_ADDRESS=\"\"\nENV SFTPGO_HTTPD__TEMPLATES_PATH=${WEB_DIR}/templates\nENV SFTPGO_HTTPD__STATIC_FILES_PATH=${WEB_DIR}/static\nENV SFTPGO_DATA_PROVIDER__USERS_BASE_DIR=${DATA_DIR}\nENV SFTPGO_HTTPD__BACKUPS_PATH=${BACKUPS_DIR}\n\n# uncomment the following settings to enable FTP support\n#ENV SFTPGO_FTPD__BIND_PORT=2121\n#ENV SFTPGO_FTPD__FORCE_PASSIVE_IP=<your FTP visibile IP here>\n#EXPOSE 2121\n# we need to expose the passive ports range too\n#EXPOSE 50000-50100\n\n# it is a good idea to provide certificates to enable FTPS too\n#ENV SFTPGO_FTPD__CERTIFICATE_FILE=${CONFIG_DIR}/mycert.crt\n#ENV SFTPGO_FTPD__CERTIFICATE_KEY_FILE=${CONFIG_DIR}/mycert.key\n\n# uncomment the following setting to enable WebDAV support\n#ENV SFTPGO_WEBDAVD__BIND_PORT=8090\n\n# it is a good idea to provide certificates to enable WebDAV over HTTPS\n#ENV SFTPGO_WEBDAVD__CERTIFICATE_FILE=${CONFIG_DIR}/mycert.crt\n#ENV SFTPGO_WEBDAVD__CERTIFICATE_KEY_FILE=${CONFIG_DIR}/mycert.key\n\nENTRYPOINT [\"sftpgo\"]\nCMD [\"serve\"]\n"
}