{
  "startTime": 1674218440872,
  "endTime": 1674218441876,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:14-alpine AS base\n\n# Installing the latest version of NPM for performance improvements\nRUN npm i -g npm@latest && npm cache clean --force;\n\nEXPOSE 3000\n\nENV NODE_ENV=production\n\nWORKDIR /node\n\nCOPY package*.json ./\nRUN mkdir app && chown -R node:node .\nUSER node\n\n# Using npm ci here so only the package-lock.json file is used\nRUN npm ci \\\n    && npm cache clean --force\n\n# Development environment only\nFROM base AS development\n\nENV NODE_ENV=development\n\nENV PATH=/node/node_modules/.bin:$PATH\n\nWORKDIR /node\n\nRUN npm install && npm cache clean --force;\n\nWORKDIR /node/app\n\n# This gets the source code into the builder for use in the next two stages,\n# it gets its own stage so there's no need to copy it twice.\n#\n# This stage starts from the first one and skips the last two\nFROM base as source\n\nWORKDIR /node/app\n\nCOPY . .\n\n# Used for unit/integration testing only\nFROM source as test\n\nENV NODE_ENV=development\nENV PATH=/node/node_modules/.bin:$PATH\n\n# This copies all dependencies (prod + dev)\nCOPY --from=development /node/node_modules /node/node_modules\n\n# Runs linters as part of build\nRUN eslint .\n\n# Final production stage\nFROM base as production\n\nWORKDIR /node/app\n\nCOPY . ."
}