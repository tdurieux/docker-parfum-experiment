{
  "startTime": 1674250221773,
  "endTime": 1674250223177,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 26,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 10
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 7,
        "columnEnd": 56
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 7,
        "columnEnd": 54
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 74,
        "lineEnd": 74,
        "columnStart": 7,
        "columnEnd": 47
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 82,
        "lineEnd": 82,
        "columnStart": 6,
        "columnEnd": 43
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 82,
        "lineEnd": 82,
        "columnStart": 6,
        "columnEnd": 43
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 82,
        "lineEnd": 82,
        "columnStart": 6,
        "columnEnd": 43
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 82,
        "lineEnd": 82,
        "columnStart": 6,
        "columnEnd": 66
      }
    }
  ],
  "repairedDockerfile": "ARG UBUNTU_VERSION=20.04\n\nFROM \"ubuntu:${UBUNTU_VERSION}\"\n\n# Eigen patch (https://eigen.tuxfamily.org/bz/show_bug.cgi?id=1462) to fix issue metioned\n# in https://github.com/PointCloudLibrary/pcl/issues/3729 is available in Eigen 3.3.7.\n# Not needed from 20.04 since it is the default version from apt\nARG EIGEN_MINIMUM_VERSION=3.3.7\n\n# See https://www.optonic.com/support/download/ensenso-sdk/archiv/ for available versions\nARG ENSENSOSDK_VERSION=3.2.489\n\n# See https://github.com/IntelRealSense/librealsense/tags for available tags of releases\nARG REALSENSE_VERSION=2.50.0\n\n# Check https://packages.ubuntu.com/search?suite=all&arch=any&searchon=names&keywords=libvtk%20qt-dev\n# for available packes for choosen UBUNTU_VERSION\nARG VTK_VERSION=6\n\n# Use the latest version of CMake by adding the Kitware repository if true,\n# otherwise use the default version of CMake of the system.\nARG USE_LATEST_CMAKE=false\n\nENV DEBIAN_FRONTEND=noninteractive\n\nRUN apt-get update \\\n && apt-get -V --no-install-recommends install -y \\\n      build-essential \\\n      clang \\\n      clang-tidy \\\n      libblas-dev \\\n      libboost-date-time-dev \\\n      libboost-filesystem-dev \\\n      libboost-iostreams-dev \\\n      libflann-dev \\\n      libglew-dev \\\n      libgtest-dev \\\n      libopenni-dev \\\n      libopenni2-dev \\\n      libproj-dev \\\n      libqhull-dev \\\n      libqt5opengl5-dev \\\n      libusb-1.0-0-dev \\\n      libvtk${VTK_VERSION}-dev \\\n      libvtk${VTK_VERSION}-qt-dev \\\n      lsb-release \\\n      qtbase5-dev \\\n      software-properties-common \\\n      wget \\\n      xvfb \\\n && if [ \"$USE_LATEST_CMAKE\" = true ] ; then \\\n      cmake_ubuntu_version=$(lsb_release -cs) ; \\\n      if ! wget -q --method=HEAD \"https://apt.kitware.com/ubuntu/dists/$cmake_ubuntu_version/Release\"; then \\\n        cmake_ubuntu_version=\"focal\" ; \\\n      fi ; \\\n      wget -qO - https://apt.kitware.com/kitware-archive.sh | bash -s -- --release $cmake_ubuntu_version ; \\\n      apt-get update ; \\\n    fi \\\n && apt-get -V --no-install-recommends install -y cmake \\\n && if [ \"$(lsb_release -sr)\" = \"18.04\" ]; then \\\n       apt-get -V --no-install-recommends install -y nvidia-cuda-toolkit g++-6; \\\n     else \\\n       apt-get -V --no-install-recommends install -y nvidia-cuda-toolkit-gcc; \\\n     fi \\\n && if [ \"$(lsb_release -sr)\" = \"21.10\" ];then \\\n       wget -qO- https://github.com/google/benchmark/archive/refs/tags/v1.6.1.tar.gz | tar xz \\\n       && cd benchmark-1.6.1 \\\n       && mkdir build \\\n       && cd build \\\n       && cmake .. -DCMAKE_BUILD_TYPE=Release -DBENCHMARK_ENABLE_GTEST_TESTS=OFF -DBENCHMARK_ENABLE_TESTING=OFF \\\n       && make -j$(nproc) install \\\n       && cd ../.. \\\n       && rm -rf benchmark-1.6.1 ; \\\n     else \\\n       apt-get -V --no-install-recommends install -y libbenchmark-dev; \\\n     fi \\\n && rm -rf /var/lib/apt/lists/*\n\n# Use libeigen3-dev if it meets the minimal version.\n# In most cases libeigen3-dev is already installed as a dependency of libvtk6-dev & libvtk7-dev, but not in every case (libvtk9 doesn't seem to have this dependency),\n# so install it from apt if the version is sufficient.\nRUN if dpkg --compare-versions $(apt-cache show --no-all-versions libeigen3-dev | grep -P -o 'Version:\\s*\\K.*') ge ${EIGEN_MINIMUM_VERSION}; then \\\n      apt-get -V --no-install-recommends install -y libeigen3-dev; rm -rf /var/lib/apt/lists/*; \\\n    else \\\n      wget -qO- https://gitlab.com/libeigen/eigen/-/archive/${EIGEN_MINIMUM_VERSION}/eigen-${EIGEN_MINIMUM_VERSION}.tar.gz | tar xz \\\n      && cd eigen-${EIGEN_MINIMUM_VERSION} \\\n      && mkdir build \\\n      && cd build \\\n      && cmake .. \\\n      && make -j$(nproc) install \\\n      && cd ../.. \\\n      && rm -rf eigen-${EIGEN_MINIMUM_VERSION}/ ; \\\n    fi\n\nRUN wget -qO- https://github.com/IntelRealSense/librealsense/archive/v${REALSENSE_VERSION}.tar.gz | tar xz \\\n && cd librealsense-${REALSENSE_VERSION} \\\n && mkdir build \\\n && cd build \\\n && cmake .. -DBUILD_EXAMPLES=OFF -DBUILD_GRAPHICAL_EXAMPLES=OFF \\\n && make -j$(nproc) install \\\n && cd ../.. \\\n && rm -rf librealsense-${REALSENSE_VERSION}\n\nRUN wget -qO ensenso.deb https://download.ensenso.com/s/ensensosdk/download?files=ensenso-sdk-${ENSENSOSDK_VERSION}-x64.deb \\\n && dpkg -i ensenso.deb \\\n && rm ensenso.deb\n"
}