diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/facebook/openbmc-uboot/tools/docker/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/facebook/openbmc-uboot/tools/docker/Dockerfile/repaired.Dockerfile
index ced4457..b452c81 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/facebook/openbmc-uboot/tools/docker/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/facebook/openbmc-uboot/tools/docker/Dockerfile/repaired.Dockerfile
@@ -10,7 +10,7 @@ LABEL Description=" This image is for building U-Boot inside a container"
 ENV DEBIAN_FRONTEND=noninteractive
 
 # Add LLVM repository
-RUN apt-get update && apt-get install -y gnupg2 wget xz-utils && rm -rf /var/lib/apt/lists/*
+RUN apt-get update && apt-get install --no-install-recommends -y gnupg2 wget xz-utils && rm -rf /var/lib/apt/lists/*
 RUN wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add -
 RUN echo deb http://apt.llvm.org/focal/ llvm-toolchain-focal-11 main | tee /etc/apt/sources.list.d/llvm.list
 
@@ -32,7 +32,7 @@ RUN wget -O - https://github.com/foss-for-synopsys-dwc-arc-processors/toolchain/
 RUN wget -O - https://github.com/vincentzwc/prebuilt-nds32-toolchain/releases/download/20180521/nds32le-linux-glibc-v3-upstream.tar.gz | tar -C /opt -xz
 
 # Update and install things from apt now
-RUN apt-get update && apt-get install -y \
+RUN apt-get update && apt-get install --no-install-recommends -y \
 	automake \
 	autopoint \
 	bc \
@@ -109,7 +109,7 @@ RUN git clone https://git.kernel.org/pub/scm/linux/kernel/git/jejb/sbsigntools.g
 	cd /tmp/sbsigntools && \
 	git checkout -b latest v0.9.4 && \
 	./autogen.sh && \
-	./configure && \
+	./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" && \
 	make && \
 	make install && \
 	rm -rf /tmp/sbsigntools
@@ -120,7 +120,7 @@ RUN git clone git://git.savannah.gnu.org/grub.git /tmp/grub && \
 	git checkout grub-2.06 && \
 	./bootstrap && \
 	mkdir -p /opt/grub && \
-	./configure --target=aarch64 --with-platform=efi \
+	./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --target=aarch64 --with-platform=efi \
 	CC=gcc \
 	TARGET_CC=/opt/gcc-11.1.0-nolibc/aarch64-linux/bin/aarch64-linux-gcc \
 	TARGET_OBJCOPY=/opt/gcc-11.1.0-nolibc/aarch64-linux/bin/aarch64-linux-objcopy \
@@ -134,7 +134,7 @@ RUN git clone git://git.savannah.gnu.org/grub.git /tmp/grub && \
 	search search_fs_file search_fs_uuid search_label serial sleep test \
 	true && \
 	make clean && \
-	./configure --target=arm --with-platform=efi \
+	./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --target=arm --with-platform=efi \
 	CC=gcc \
 	TARGET_CC=/opt/gcc-11.1.0-nolibc/arm-linux-gnueabi/bin/arm-linux-gnueabi-gcc \
 	TARGET_OBJCOPY=/opt/gcc-11.1.0-nolibc/arm-linux-gnueabi/bin/arm-linux-gnueabi-objcopy \
@@ -148,7 +148,7 @@ RUN git clone git://git.savannah.gnu.org/grub.git /tmp/grub && \
 	search search_fs_file search_fs_uuid search_label serial sleep test \
 	true && \
 	make clean && \
-	./configure --target=riscv64 --with-platform=efi \
+	./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --target=riscv64 --with-platform=efi \
 	CC=gcc \
 	TARGET_CC=/opt/gcc-11.1.0-nolibc/riscv64-linux/bin/riscv64-linux-gcc \
 	TARGET_OBJCOPY=/opt/gcc-11.1.0-nolibc/riscv64-linux/bin/riscv64-linux-objcopy \
@@ -167,7 +167,7 @@ RUN git clone git://git.qemu.org/qemu.git /tmp/qemu && \
 	cd /tmp/qemu && \
 	git submodule update --init dtc && \
 	git checkout v4.2.0 && \
-	./configure --prefix=/opt/qemu --target-list="aarch64-softmmu,arm-softmmu,i386-softmmu,mips-softmmu,mips64-softmmu,mips64el-softmmu,mipsel-softmmu,ppc-softmmu,riscv32-softmmu,riscv64-softmmu,sh4-softmmu,x86_64-softmmu,xtensa-softmmu" && \
+	./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/opt/qemu --target-list="aarch64-softmmu,arm-softmmu,i386-softmmu,mips-softmmu,mips64-softmmu,mips64el-softmmu,mipsel-softmmu,ppc-softmmu,riscv32-softmmu,riscv64-softmmu,sh4-softmmu,x86_64-softmmu,xtensa-softmmu" && \
 	make -j$(nproc) all install && \
 	rm -rf /tmp/qemu