{
  "startTime": 1674215210972,
  "endTime": 1674215211556,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 75
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 75
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 28
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 52
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:20.04\n\n\n# Install tools needed for development\nRUN apt update && \\\n    apt upgrade --yes && \\\n    apt install --no-install-recommends --yes build-essential cython3 git libssl-dev m4 python3-pip && rm -rf /var/lib/apt/lists/*;\n\n# Copy needed source\nRUN mkdir /src\nADD CMakeLists.txt FBGenCMakeBuildInfo.cmake ThriftLibrary.cmake /src/\nCOPY build /src/build\nCOPY openr /src/openr\nCOPY example_openr.conf /etc/openr.conf\n\n# Build OpenR + Dependencies via cmake\nRUN cd /src && build/build_openr.sh && chmod 644 /etc/openr.conf\nRUN mkdir /opt/bin && cp /src/build/docker_openr_helper.sh /opt/bin\n\n# Install `breeze` OpenR CLI\nRUN apt install --no-install-recommends g++-10 --yes && rm -rf /var/lib/apt/lists/*; # We need g++-10 or higher for coroutines which are used in folly::coro\n# TODO Move these files into build/\nCOPY cython_compile.py /src/build/cython_compile.py\nRUN git clone https://github.com/cython/cython\nRUN cd /src && build/build_breeze.sh\nRUN cp -r /src/build/lib.linux-x86_64-3.8 /breeze-build\n\n# Cleanup all we can to keep container as lean as possible\n# TODO: We can use Dockerfile stages instead\nRUN apt remove --yes build-essential git libssl-dev m4 && \\\n    apt autoremove --yes && \\\n    rm -rf /src /tmp/* /var/lib/apt/lists/*\n\nCMD [\"/opt/bin/docker_openr_helper.sh\"]\n# Expose OpenR Thrift port\nEXPOSE 2018/tcp\n"
}