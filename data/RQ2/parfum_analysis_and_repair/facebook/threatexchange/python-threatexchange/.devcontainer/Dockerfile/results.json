{
  "startTime": 1674215279454,
  "endTime": 1674215280458,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 5,
        "columnEnd": 19
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 5,
        "columnEnd": 19
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 18,
        "columnStart": 22,
        "columnEnd": 37
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 5,
        "columnEnd": 19
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# See here for image contents: https://github.com/microsoft/vscode-dev-containers/tree/v0.163.1/containers/javascript-node/.devcontainer/base.Dockerfile\n\n# [Install python]\n# TODO: pin version later. Otherwise starting up will be too slow.\nFROM python:3.8-buster\n\n# [Unixname wrestling]\n# Some of our script (docker-related) are dependent on the unixname. Would\n# need to setup the environment with *your* unixname as the defualt user.\nARG unixname\nRUN groupadd --gid 1000 developers \\\n  && useradd --uid 1000 --gid developers --shell /bin/bash --create-home $unixname \\\n  && usermod -aG sudo $unixname\n\n# [Install Tools!]\nRUN apt-get update && DEBIAN_FRONTEND=noninteractive \\\n  apt-get -y install --no-install-recommends git make jq sudo \\\n  software-properties-common apt-transport-https ca-certificates curl \\\n  gnupg lsb-release tmux zsh vim less && rm -rf /var/lib/apt/lists/*;\n\n# [Allow sudo] Need sudo later in post-create to open up docker socket\nARG unixname\nRUN echo \"$unixname ALL=(ALL) NOPASSWD: ALL\" >> /etc/sudoers\n\n# [Install node] Node.js version: 15 only. Stolen from: https://github.com/nodejs/docker-node/blob/main/15/buster/Dockerfile\nRUN groupadd --gid 1001 node \\\n  && useradd --uid 1001 --gid node --shell /bin/bash --create-home node\n\n# [Install GitHub CLI]\nRUN apt-key adv --keyserver keyserver.ubuntu.com --recv-key C99B11DEB97541F0 \\\n  && apt-add-repository https://cli.github.com/packages \\\n  && apt update \\\n  && apt install -y --no-install-recommends gh && rm -rf /var/lib/apt/lists/*;\n\n# [Shell Dotfiles]\nARG unixname\nCOPY --chown=${unixname} zshrc /home/$unixname/.zshrc\n\nARG unixname\nCOPY --chown=${unixname} bashrc /home/$unixname/.bashrc\n\n# [Shell Histories] The volume is mounted in devcontainer.json\nARG unixname\nRUN BASH_SNIPPET=\"export PROMPT_COMMAND='history -a' && export HISTFILE=/commandhistory/.bash_history\" \\\n  && ZSH_SNIPPET=\"HISTFILE=/commandhistory/.zsh_history\" \\\n  && mkdir -p /commandhistory \\\n  && touch /commandhistory/.bash_history \\\n  && touch /commandhistory/.zsh_history \\\n  && chown -R $unixname /commandhistory \\\n  && echo $BASH_SNIPPET >> \"/home/$unixname/.bashrc\" \\\n  && echo $ZSH_SNIPPET >> \"/home/$unixname/.zshrc\" \\\n  && echo $ZSH_SNIPPET >> \"/home/$unixname/.profile\"\n# Also appends ZSH_SNIPPET to ~/.profile in case users want to overwrite zshrc file\n# e.g. https://code.visualstudio.com/docs/remote/containers#_personalizing-with-dotfile-repositories\n\n\n# [Forward Docker requests to host docker engine]\n# Volume is mounted and so is the socket. The socket configuration is within\n# devcontainer.json\nVOLUME [ \"/var/lib/docker\"]"
}