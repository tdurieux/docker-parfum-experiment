{
  "startTime": 1674249585752,
  "endTime": 1674249587375,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 141,
        "lineEnd": 141,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 32,
        "lineEnd": 63,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 94,
        "lineEnd": 95,
        "columnStart": 63,
        "columnEnd": 61
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 104,
        "lineEnd": 104,
        "columnStart": 23,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 110,
        "lineEnd": 110,
        "columnStart": 5,
        "columnEnd": 19
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 99,
        "lineEnd": 99,
        "columnStart": 23,
        "columnEnd": 55
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 104,
        "lineEnd": 104,
        "columnStart": 23,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 110,
        "lineEnd": 110,
        "columnStart": 5,
        "columnEnd": 19
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 20,
        "columnStart": 22,
        "columnEnd": 37
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 99,
        "lineEnd": 99,
        "columnStart": 23,
        "columnEnd": 55
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 104,
        "lineEnd": 104,
        "columnStart": 23,
        "columnEnd": 48
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 110,
        "lineEnd": 110,
        "columnStart": 5,
        "columnEnd": 19
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# See here for image contents: https://github.com/microsoft/vscode-dev-containers/tree/v0.163.1/containers/javascript-node/.devcontainer/base.Dockerfile\n\n# [Install python]\n# TODO: pin version later. Otherwise starting up will be too slow.\n# Note: We specify AMD64 architecture as it is currently the only one supported for this devcontainer\n# relevant for ARM architecture machines as using `python:3.8-buster` will have it try to use that instead\nFROM amd64/python:3.8-buster\n\n# [Unixname wrestling]\n# Some of our script (docker-related) are dependent on the unixname. Would\n# need to setup the environment with *your* unixname as the defualt user.\nARG unixname\nRUN groupadd --gid 1000 developers \\\n  && useradd --uid 1000 --gid developers --shell /bin/bash --create-home $unixname \\\n  && usermod -aG sudo $unixname\n\n# [Install Tools!]\nRUN apt-get update && DEBIAN_FRONTEND=noninteractive \\\n  apt-get -y install --no-install-recommends git make jq sudo \\\n  software-properties-common apt-transport-https ca-certificates curl \\\n  gnupg lsb-release tmux zsh vim less && rm -rf /var/lib/apt/lists/*;\n\n# [Allow sudo] Need sudo later in post-create to open up docker socket\nARG unixname\nRUN echo \"$unixname ALL=(ALL) NOPASSWD: ALL\" >> /etc/sudoers\n\n# [Install node] Node.js version: 16 only. Stolen from: https://github.com/nodejs/docker-node/blob/main/16/buster/Dockerfile\nRUN groupadd --gid 1001 node \\\n  && useradd --uid 1001 --gid node --shell /bin/bash --create-home node\n\nENV NODE_VERSION 16.13.2\n\nRUN ARCH= && dpkgArch=\"$(dpkg --print-architecture)\" \\\n  && case \"${dpkgArch##*-}\" in \\\n  amd64) ARCH='x64';; \\\n  ppc64el) ARCH='ppc64le';; \\\n  s390x) ARCH='s390x';; \\\n  arm64) ARCH='arm64';; \\\n  armhf) ARCH='armv7l';; \\\n  i386) ARCH='x86';; \\\n  * echo \"unsupported  architecture\"; exit 1;; \\\nesac \\\n  # gpg keys listed at https://github.com/nodejs/node#release-keys\n  && set -ex \\\n  && for key in \\\n  4ED778F539E3634C779C87C6D7062848A1AB005C \\\n  94AE36675C464D64BAFA68DD7434390BDBE9B9C5 \\\n  74F12602B6F1C4E913FAA37AD3A89613643B6201 \\\n  71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 \\\n  8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600 \\\n  C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8 \\\n  C82FA3AE1CBEDC6BE46B9360C43CEC45C17AB93C \\\n  DD8F2338BAE7501E3DD5AC78C273792F7D83545D \\\n  A48C2BEE680E841632CD4E44F07496B3EB3C1762 \\\n  108F52B48DB57BB0CC439B2997B01419BD92F80A \\\n  B9E2F5981AA6E0CD28160D9FF13993A75599653C \\\n  ; do \\\n  gpg --batch --keyserver hkps://keys.openpgp.org --recv-keys \"$key\" || \\\n  gpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$key\" ; \\\n  done \\\n  && curl -fsSLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-$ARCH.tar.xz\" \\\n  && curl -fsSLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\" \\\n  && gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc \\\n  && grep \" node-v$NODE_VERSION-linux-$ARCH.tar.xz\\$\" SHASUMS256.txt | sha256sum -c - \\\n  && tar -xJf \"node-v$NODE_VERSION-linux-$ARCH.tar.xz\" -C /usr/local --strip-components=1 --no-same-owner \\\n  && rm \"node-v$NODE_VERSION-linux-$ARCH.tar.xz\" SHASUMS256.txt.asc SHASUMS256.txt \\\n  && ln -s /usr/local/bin/node /usr/local/bin/nodejs \\\n  # smoke tests\n  && node --version \\\n  && npm --version\n\nENV YARN_VERSION 1.22.15\n\nRUN set -ex \\\n  && for key in \\\n  6A010C5166006599AA17F08146C2130DFD2497F5 \\\n  ; do \\\n  gpg --batch --keyserver hkps://keys.openpgp.org --recv-keys \"$key\" || \\\n  gpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$key\" ; \\\n  done \\\n  && curl -fsSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz\" \\\n  && curl -fsSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz.asc\" \\\n  && gpg --batch --verify yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz \\\n  && mkdir -p /opt \\\n  && tar -xzf yarn-v$YARN_VERSION.tar.gz -C /opt/ \\\n  && ln -s /opt/yarn-v$YARN_VERSION/bin/yarn /usr/local/bin/yarn \\\n  && ln -s /opt/yarn-v$YARN_VERSION/bin/yarnpkg /usr/local/bin/yarnpkg \\\n  && rm yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz \\\n  # smoke test\n  && yarn --version\n# [Install Node] complete\n\n# [Install Docker CLI]\nRUN export DEBIAN_FRONTEND=noninteractive \\\n  && curl -fsSL https://download.docker.com/linux/debian/gpg | gpg --batch \\\n  --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg \\\n  && echo \\\n  \"deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/debian \\\n  $(lsb_release -cs) stable\" | tee /etc/apt/sources.list.d/docker.list > /dev/null \\\n  && apt-get update && apt-get -y --no-install-recommends install docker-ce-cli && rm -rf /var/lib/apt/lists/*;\n\n# [Install Terraform CLI]\nRUN curl -fsSL https://apt.releases.hashicorp.com/gpg | apt-key add - \\\n  && apt-add-repository \"deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main\" \\\n  && apt-get update && apt-get install -y --no-install-recommends terraform && rm -rf /var/lib/apt/lists/*;\n\n# [Install GitHub CLI]\nRUN apt-key adv --keyserver keyserver.ubuntu.com --recv-key C99B11DEB97541F0 \\\n  && apt-add-repository https://cli.github.com/packages \\\n  && apt update \\\n  && apt install -y --no-install-recommends gh && rm -rf /var/lib/apt/lists/*;\n\n# [Shell Dotfiles]\nARG unixname\nCOPY --chown=${unixname} zshrc /home/$unixname/.zshrc\n\nARG unixname\nCOPY --chown=${unixname} bashrc /home/$unixname/.bashrc\n\n# [Shell Histories] The volume is mounted in devcontainer.json\nARG unixname\nRUN BASH_SNIPPET=\"export PROMPT_COMMAND='history -a' && export HISTFILE=/commandhistory/.bash_history\" \\\n  && ZSH_SNIPPET=\"HISTFILE=/commandhistory/.zsh_history\" \\\n  && mkdir -p /commandhistory \\\n  && touch /commandhistory/.bash_history \\\n  && touch /commandhistory/.zsh_history \\\n  && chown -R $unixname /commandhistory \\\n  && echo $BASH_SNIPPET >> \"/home/$unixname/.bashrc\" \\\n  && echo $ZSH_SNIPPET >> \"/home/$unixname/.zshrc\" \\\n  && echo $ZSH_SNIPPET >> \"/home/$unixname/.profile\"\n# Also appends ZSH_SNIPPET to ~/.profile in case users want to overwrite zshrc file\n# e.g. https://code.visualstudio.com/docs/remote/containers#_personalizing-with-dotfile-repositories\n\n\n# [Forward Docker requests to host docker engine]\n# Volume is mounted and so is the socket. The socket configuration is within\n# devcontainer.json\nVOLUME [ \"/var/lib/docker\"]\n\n# [Install AWS CLI] Using pip install because the apt version is old. Doesn't\n# support all ecr commands.\nRUN pip3 install --no-cache-dir awscli --upgrade\n"
}