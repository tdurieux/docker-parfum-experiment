{
  "startTime": 1674218535292,
  "endTime": 1674218536613,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 5,
        "columnEnd": 66
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 5,
        "columnEnd": 77
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 5,
        "columnEnd": 50
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 5,
        "columnEnd": 16
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 5,
        "columnEnd": 17
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 24,
        "columnStart": 5,
        "columnEnd": 7
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 26,
        "columnEnd": 49
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 24,
        "columnStart": 5,
        "columnEnd": 7
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 26,
        "columnEnd": 49
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:17.10\n\nRUN rm /bin/sh && ln -s /bin/bash /bin/sh\nRUN echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections\n\nRUN apt-get -y update \\\n  && apt-get -y --no-install-recommends install \\\n  build-essential \\\n  gcc \\\n  apt-utils \\\n  pkg-config \\\n  software-properties-common \\\n  apt-transport-https \\\n  libssl-dev \\\n  sudo \\\n  bash \\\n  bash-completion \\\n  curl \\\n  wget \\\n  tar \\\n  unzip \\\n  git \\\n  python \\\n  libssl-dev \\\n  nginx \\\n  && apt-get -y update \\\n  && apt-get -y upgrade \\\n  && apt-get -y autoremove \\\n  && apt-get -y autoclean \\\n  && uname -a \\\n  && ulimit -n && rm -rf /var/lib/apt/lists/*;\n\n# Install go for backend\nENV GOROOT /usr/local/go\nENV GOPATH /gopath\nENV PATH ${GOPATH}/bin:${GOROOT}/bin:${PATH}\nENV GO_VERSION 1.10.3\nENV GO_DOWNLOAD_URL https://storage.googleapis.com/golang\nRUN rm -rf ${GOROOT} \\\n  && curl -f -s ${GO_DOWNLOAD_URL}/go${GO_VERSION}.linux-amd64.tar.gz | tar -v -C /usr/local/ -xz \\\n  && mkdir -p ${GOPATH}/src ${GOPATH}/bin \\\n  && go version\n\n# Compile backend\nRUN mkdir -p $GOPATH/src/github.com/etcd-io/etcdlabs\nADD . $GOPATH/src/github.com/etcd-io/etcdlabs\n\nRUN pushd $GOPATH/src/github.com/etcd-io/etcdlabs \\\n  && echo \"Updating Go dependencies...\" \\\n  && ./scripts/dep/go.sh \\\n  && go build -o ./backend-web-server -v ./cmd/backend-web-server \\\n  && popd\n\n# Install Angular, NodeJS for frontend\n# 'node' needs to be in $PATH for 'yarn start' command\nENV NVM_DIR /usr/local/nvm\nRUN pushd ${GOPATH}/src/github.com/etcd-io/etcdlabs \\\n  && curl -f https://raw.githubusercontent.com/creationix/nvm/v0.33.6/install.sh | /bin/bash \\\n  && echo \"Running nvm scripts...\" \\\n  && source $NVM_DIR/nvm.sh \\\n  && nvm ls-remote \\\n  && nvm install v9.11.2 \\\n  && curl -f https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \\\n  && echo \"deb http://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list \\\n  && apt-get -y update && apt-get -y --no-install-recommends install yarn \\\n  && echo \"Updating frontend dependencies...\" \\\n  && rm -rf ./node_modules \\\n  && yarn install \\\n  && npm rebuild node-sass --force \\\n  && npm install \\\n  && nvm alias default 9.5.0 \\\n  && nvm alias default node \\\n  && which node \\\n  && node -v \\\n  && cp /usr/local/nvm/versions/node/v9.11.2/bin/node /usr/bin/node \\\n  && popd && npm cache clean --force; && yarn cache clean; && rm -rf /var/lib/apt/lists/*;\n\n# Configure reverse proxy\nRUN mkdir -p /etc/nginx/sites-available/\nADD nginx.conf /etc/nginx/sites-available/default\n"
}