{
  "startTime": 1674215671234,
  "endTime": 1674215672163,
  "originalSmells": [
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 54,
        "lineEnd": 63,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 67
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 109,
        "lineEnd": 109,
        "columnStart": 8,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright (C) 2016-2020 Intel Corporation\n# All rights reserved.\n#\n# Redistribution and use in source and binary forms, with or without\n# modification, are permitted for any purpose (including commercial purposes)\n# provided that the following conditions are met:\n#\n# 1. Redistributions of source code must retain the above copyright notice,\n#    this list of conditions, and the following disclaimer.\n#\n# 2. Redistributions in binary form must reproduce the above copyright notice,\n#    this list of conditions, and the following disclaimer in the\n#    documentation and/or materials provided with the distribution.\n#\n# 3. In addition, redistributions of modified forms of the source or binary\n#    code must carry prominent notices stating that the original code was\n#    changed and the date of the change.\n#\n#  4. All publications or advertising materials mentioning features or use of\n#     this software are asked, but not required, to acknowledge that it was\n#     developed by Intel Corporation and credit the contributors.\n#\n# 5. Neither the name of Intel Corporation, nor the name of any Contributor\n#    may be used to endorse or promote products derived from this software\n#    without specific prior written permission.\n#\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE LIABLE FOR ANY\n# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n# THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n#\n# 'recipe' for Docker to build an image of centOS-based\n# environment for building the DAOS project.\n#\n\n# Pull base image\nFROM centos:7\nMAINTAINER daos-stack <daos@daos.groups.io>\n\n# Build arguments can be set via --build-arg\n# use same UID as host and default value of 1000 if not specified\nARG UID=1000\n\n# for good measure, clean the metadata\nRUN yum clean metadata\n\n# Install basic tools\nRUN yum -y install epel-release; rm -rf /var/cache/yum \\\n    yum -y install                                                        \\\n           boost-devel clang-analyzer cmake CUnit-devel doxygen file flex \\\n           gcc gcc-c++ git golang graphviz lcov                           \\\n           libaio-devel libcmocka-devel libevent-devel libiscsi-devel     \\\n           libtool libtool-ltdl-devel libuuid-devel libyaml-devel         \\\n           make meson nasm ninja-build numactl-devel openssl-devel        \\\n           pandoc patch python-requests python2-pygithub                  \\\n           python36-pylint python36-pep8 python36-requests                \\\n           python36-pygithub readline-devel sg3_utils ShellCheck yasm     \\\n           python36-scons openmpi3-devel hwloc-devel\n\n# CaRT specific\nRUN yum -y install python36-paramiko python36-PyYAML rsync valgrind && rm -rf /var/cache/yum\n\n# Add CaRT user\nENV USER cart\nENV PASSWD cart\nRUN useradd -u $UID -ms /bin/bash $USER\nRUN echo \"$USER:$PASSWD\" | chpasswd\n\n# Set environment variables\nENV PATH=/home/cart/cart/install/bin:$PATH\nENV LD_LIBRARY_PATH=/home/cart/cart/install/Linux/lib:$LD_LIBRARY_PATH\nENV CPATH=/home/cart/cart/install/Linux/include:$CPATH\nENV CRT_PHY_ADDR_STR=\"ofi+sockets\"\nENV OFI_INTERFACE=eth0\n\nARG JENKINS_URL=\"\"\nARG QUICKBUILD=1\nARG REPOS=\"\"\nRUN if [ $QUICKBUILD -eq 0 ]; then \\\n        echo -e \"[repo.dc.hpdd.intel.com_repository_daos-stack-el-7-x86_64-stable-local]\\n\\\nname=created by dnf config-manager from https://repo.dc.hpdd.intel.com/repository/daos-stack-el-7-x86_64-stable-local\\n\\\nbaseurl=https://repo.dc.hpdd.intel.com/repository/daos-stack-el-7-x86_64-stable-local\\n\\\nenabled=1\\n\\\ngpgcheck=False\\n\" >> /etc/yum.repos.d/$repo:$branch:$build_number.repo; \\\n        for repo in $REPOS; do                                                   \\\n            branch=\"master\";                                                     \\\n            build_number=\"lastSuccessfulBuild\";                                  \\\n            if [[ $repo = *@* ]]; then                                           \\\n                branch=\"${repo#*@}\";                                             \\\n                repo=\"${repo%@*}\";                                               \\\n                if [[ $branch = *:* ]]; then                                     \\\n                    build_number=\"${branch#*:}\";                                 \\\n                    branch=\"${branch%:*}\";                                       \\\n                fi;                                                              \\\n            fi;                                                                  \\\n            echo -e \"[$repo:$branch:$build_number]\\n\\\nname=$repo:$branch:$build_number\\n\\\nbaseurl=${JENKINS_URL}job/daos-stack/job/$repo/job/$branch/$build_number/artifact/artifacts/centos7/\\n\\\nenabled=1\\n\\\ngpgcheck=False\\n\" >> /etc/yum.repos.d/$repo:$branch:$build_number.repo;          \\\n        done; \\\n        pkgs=\"mercury-devel openpa-devel libfabric-devel\"; \\\n        echo \"Installing: $pkgs\"; \\\n        yum -y install $pkgs; rm -rf /var/cache/yum \\\n    fi\n\n# force an upgrade to get any newly built RPMs\nARG CACHEBUST=1\nRUN yum -y upgrade --exclude=mercury-devel,mercury\n# Switch to new user\nUSER $USER\nWORKDIR /home/$USER\n\n# set NOBUILD to disable git clone & build\nARG NOBUILD\n\n# Fetch CaRT code\nRUN if [ \"x$NOBUILD\" = \"x\" ] ; then git clone https://github.com/daos-stack/cart.git; fi\nWORKDIR /home/$USER/cart\n\n# Build CaRT & dependencies\nRUN if [ \"x$NOBUILD\" = \"x\" ] ; then git submodule init && git submodule update; fi\nRUN if [ \"x$NOBUILD\" = \"x\" ] ; then scons-3 --build-deps=yes USE_INSTALLED=all install; fi\n"
}