{
  "startTime": 1674253976489,
  "endTime": 1674253977241,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 22,
        "columnEnd": 47
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 22,
        "columnEnd": 47
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 22,
        "columnEnd": 47
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright 2018-2022 Intel Corporation\n# All rights reserved.\n#\n# 'recipe' for Docker to build an image of Ubuntu-based\n# environment for building the DAOS project.\n#\n\n# Pull base image\nARG BASE_DISTRO=ubuntu:20.04\nFROM $BASE_DISTRO\nLABEL maintainer=\"daos@daos.groups.io\"\n\n# Intermittent cache-bust.  Used to reduce load on the actual CACHEBUST later.\nARG CB0\n\nENV DEBIAN_FRONTEND=noninteractive\n\n# Install basic tools\nCOPY ./utils/scripts/install-ubuntu.sh /tmp/install.sh\nRUN echo \"APT::Get::Assume-Yes \\\"true\\\";\" > /etc/apt/apt.conf.d/no-prompt\nRUN echo \"APT::Install-Recommends \\\"false\\\";\" > /etc/apt/apt.conf.d/no-recommends\nRUN apt-get update && apt-get install -y --no-install-recommends apt-utils && apt-get upgrade && chmod +x /tmp/install.sh && \\\n  /tmp/install.sh && apt-get clean all && rm -rf /var/lib/apt/lists/*;\n\nRUN locale-gen en_US.UTF-8\n\n# use Java 8 instead of default Java 11\nRUN update-alternatives --set \\\n    java /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java\n\nARG UID=1000\n\n# Add DAOS users\nRUN useradd --no-log-init --uid $UID --user-group --create-home --shell /bin/bash \\\n            --home /home/daos daos_server\nRUN echo \"daos_server:daos_server\" | chpasswd\nRUN useradd --no-log-init --user-group --create-home --shell /bin/bash daos_agent\nRUN echo \"daos_agent:daos_agent\" | chpasswd\n\n# Create directory for DAOS backend storage\nRUN mkdir -p /opt/daos /mnt/daos /var/run/daos_server /var/run/daos_agent /home/daos/pre /home/daos/daos &&   \\\n    chown -R daos_server.daos_server /opt/daos /mnt/daos /var/run/daos_server /home/daos &&  \\\n    chown daos_agent.daos_agent /var/run/daos_agent\n\nUSER daos_server:daos_server\n\n# Setup a python venv so that python packages can be installed locally.\nRUN python3 -m venv /home/daos/venv\nENV PATH=/home/daos/venv/bin:$PATH\nENV VIRTUAL_ENV=/home/daos/venv/\n\n# Install latest versions of python tools.\n# wheel is needed first to avoid a warning when installing pyyaml.\nCOPY requirements.txt .\nRUN python3 -m pip --no-cache-dir install --upgrade pip && \\\n    python3 -m pip --no-cache-dir install wheel && \\\n    python3 -m pip --no-cache-dir install --requirement requirements.txt\n\nWORKDIR /home/daos/pre\nCOPY --chown=daos_server:daos_server SConstruct .\nCOPY --chown=daos_server:daos_server site_scons site_scons\nCOPY --chown=daos_server:daos_server utils/build.config utils/\n\n# Control what to build.  By default Dockerfiles build everything to allow for\n# ease-of-use for users, however in CI everything is turned off and then\n# selectively enabled.  Turning off any step disables all future steps.\nARG DAOS_DEPS_BUILD=yes\nARG DAOS_KEEP_BUILD=no\nARG DAOS_TARGET_TYPE=release\n\n# Now do an update to ensure software is up to date for the deps build.  If the\n# src hasn't changed then this won't do anything, but if it has then we want to\n# ensure that latest dependencies are used.\nUSER root:root\nRUN [ \"$DAOS_DEPS_BUILD\" != \"yes\" ] || \\\n    { apt-get update && apt-get upgrade && apt-get clean all; }\nUSER daos_server:daos_server\n\nARG DEPS_JOBS=1\n\nRUN [ \"$DAOS_DEPS_BUILD\" != \"yes\" ] ||                           \\\n    { scons --build-deps=only --jobs $DEPS_JOBS PREFIX=/opt/daos \\\n      TARGET_TYPE=$DAOS_TARGET_TYPE &&                           \\\n    ([ \"$DAOS_KEEP_BUILD\" != \"no\" ] || /bin/rm -rf build *.gz); }\n\nUSER root:root\nARG CACHEBUST\nRUN [ -z \"$CACHEBUST\" ] || { apt-get update && apt-get upgrade && apt-get clean all; }\nUSER daos_server:daos_server\n\n# Set a label.  This is useful for searching for DAOS images, but is also used\n# in github-actions to prune elements of the dockerfile below this point.\nLABEL DAOS=true\n\nWORKDIR /home/daos/daos/\nCOPY --chown=daos_server:daos_server VERSION LICENSE ftest.sh SConstruct .clang-format ./\nCOPY --chown=daos_server:daos_server site_scons site_scons\nCOPY --chown=daos_server:daos_server utils utils\nCOPY --chown=daos_server:daos_server src src\n\n# select compiler to use\nARG COMPILER=gcc\nARG JOBS=$DEPS_JOBS\nARG DAOS_BUILD_TYPE=$DAOS_TARGET_TYPE\nARG DAOS_BUILD=$DAOS_DEPS_BUILD\n\n# Build DAOS\nRUN [ \"$DAOS_BUILD\" != \"yes\" ] || \\\n    { scons --jobs $JOBS install PREFIX=/opt/daos COMPILER=$COMPILER \\\n      BUILD_TYPE=$DAOS_BUILD_TYPE TARGET_TYPE=$DAOS_TARGET_TYPE && \\\n    ([ \"$DAOS_KEEP_BUILD\" != \"no\" ] || /bin/rm -rf build) && \\\n    go clean -cache && cp -r utils/config/examples /opt/daos; }\n\n# Set environment variables\nENV PATH=/opt/daos/bin:$PATH\nENV FI_SOCKETS_MAX_CONN_RETRY=1\n\n# Build java and hadoop bindings\nWORKDIR /home/daos/daos/src/client/java\n\nARG DAOS_JAVA_BUILD=$DAOS_BUILD\n\nRUN [ \"$DAOS_JAVA_BUILD\" != \"yes\" ] || \\\n    { mkdir /home/daos/.m2 && \\\n    cp /home/daos/daos/utils/scripts/maven-settings.xml.in /home/daos/.m2/settings.xml && \\\n    mvn clean install -ntp -T 1C -DskipITs -Dgpg.skip -Ddaos.install.path=/opt/daos; }\nWORKDIR /home/daos\n\nARG DAOS_KEEP_SRC=no\n# Remove local copy\nRUN [ \"$DAOS_KEEP_SRC\" != \"no\" ] || rm -rf /home/daos/daos /home/daos/pre\n"
}