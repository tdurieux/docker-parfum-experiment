{
  "startTime": 1674220945657,
  "endTime": 1674220946713,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 8,
        "columnEnd": 53
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 8,
        "columnEnd": 57
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 7,
        "columnEnd": 41
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 7,
        "columnEnd": 88
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 7,
        "columnEnd": 41
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 20,
        "columnEnd": 36
      }
    }
  ],
  "repairedDockerfile": "FROM ruby:2.4.1-slim\n\nRUN set -ex \\\n    && apt-get update \\\n    && apt-get install -qq -y --no-install-recommends build-essential libpq-dev git curl \\\n    && ( curl -f -sL https://deb.nodesource.com/setup_7.x | bash -) \\\n    && ( curl -f -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -) \\\n    && (echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list) \\\n    && apt-get update \\\n    && apt-get install --no-install-recommends -qq -y nodejs yarn && rm -rf /var/lib/apt/lists/*;\n\nENV INSTALL_PATH /zen\n\nRUN mkdir -p $INSTALL_PATH{,/client}\n\nWORKDIR $INSTALL_PATH\n\nCOPY Gemfile Gemfile.lock ./\nRUN bundle install --binstubs\n\nCOPY package.json yarn.lock ./\nCOPY client/package.json client/yarn.lock ./client/\n\nRUN yarn install && yarn cache clean;\n\nCOPY . ./\n\nRUN bundle exec rake RAILS_ENV=production DATABASE_URL=postgresql://user:pass@127.0.0.1/dbname SECRET_KEY_BASE=dummytoken assets:precompile\n\nVOLUME [\"$INSTALL_PATH/public\"]\n\nCMD puma -C config/puma.rb\n"
}