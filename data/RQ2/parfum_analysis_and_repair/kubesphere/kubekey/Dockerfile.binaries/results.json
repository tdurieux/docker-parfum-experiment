{
  "startTime": 1674251684223,
  "endTime": 1674251685215,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 113,
        "columnEnd": 162
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3\n\nENV KUBEVERSION=v1.21.5\nENV ETCDVERSION=v3.4.13\nENV CNIVERSION=v0.9.1\nENV HELMVERSION=v3.6.3\nENV DOCKERVERSION=20.10.8\nENV CRICTLVERSION=v1.22.0\nENV ARCH=amd64\n\nWORKDIR /kubekey\nRUN if [[ $(arch) == \"aarch64*\" ]]; then ARCH=arm64; fi && \\\n    mkdir -p etcd/${ETCDVERSION}/${ARCH} && wget https://github.com/coreos/etcd/releases/download/${ETCDVERSION}/etcd-${ETCDVERSION}-linux-${ARCH}.tar.gz -P etcd/${ETCDVERSION}/${ARCH} && \\\n    mkdir -p kube/${KUBEVERSION}/${ARCH} && \\\n    wget https://storage.googleapis.com/kubernetes-release/release/${KUBEVERSION}/bin/linux/${ARCH}/kubeadm -P kube/${KUBEVERSION}/${ARCH} && \\\n    wget https://storage.googleapis.com/kubernetes-release/release/${KUBEVERSION}/bin/linux/${ARCH}/kubelet -P kube/${KUBEVERSION}/${ARCH} && \\\n    wget https://storage.googleapis.com/kubernetes-release/release/${KUBEVERSION}/bin/linux/${ARCH}/kubectl -P kube/${KUBEVERSION}/${ARCH} && \\\n    mkdir -p helm/${HELMVERSION}/${ARCH} && wget https://get.helm.sh/helm-${HELMVERSION}-linux-${ARCH}.tar.gz && tar -zxf helm-${HELMVERSION}-linux-${ARCH}.tar.gz && \\\n    mv linux-${ARCH}/helm helm/${HELMVERSION}/${ARCH} && rm -rf *linux-${ARCH}* && \\\n    mkdir -p cni/${CNIVERSION}/${ARCH} && wget https://github.com/containernetworking/plugins/releases/download/${CNIVERSION}/cni-plugins-linux-${ARCH}-${CNIVERSION}.tgz -P cni/${CNIVERSION}/${ARCH} && \\\n    if [ ${ARCH} == 'amd64' ]; then wget https://github.com/k3s-io/k3s/releases/download/${KUBEVERSION}+k3s1/k3s -P kube/${KUBEVERSION}/${ARCH}; else \\\n    wget https://github.com/k3s-io/k3s/releases/download/${KUBEVERSION}+k3s1/k3s-${ARCH}; mv k3s-${ARCH} kube/${KUBEVERSION}/${ARCH}/k3s;fi && \\\n    mkdir -p docker/${DOCKERVERSION}/${ARCH} && \\\n    if [ ${ARCH} == 'amd64' ]; then wget https://download.docker.com/linux/static/stable/x86_64/docker-${DOCKERVERSION}.tgz -P docker/${DOCKERVERSION}/${ARCH}; else \\\n    wget https://download.docker.com/linux/static/stable/aarch64/docker-${DOCKERVERSION}.tgz -P docker/${DOCKERVERSION}/${ARCH};fi && \\\n    mkdir -p crictl/${CRICTLVERSION}/${ARCH} && wget https://github.com/kubernetes-sigs/cri-tools/releases/download/${CRICTLVERSION}/crictl-${CRICTLVERSION}-linux-${ARCH}.tar.gz -P crictl/${CRICTLVERSION}/${ARCH} && rm helm-${HELMVERSION}-linux-${ARCH}.tar.gz"
}