{
  "startTime": 1674248281908,
  "endTime": 1674248282792,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 81
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Build the manager binary\nFROM golang:1.17 as builder\n\nWORKDIR /workspace\n# Copy the Go Modules manifests\nCOPY go.mod go.mod\nCOPY go.sum go.sum\n# cache deps before building and copying source so that we don't need to re-download as much\n# and so that source changes don't invalidate our downloaded layer\nCOPY vendor vendor\n\n# Copy the go source\nCOPY main.go main.go\nCOPY pkg/ pkg/\n\n# Build\nENV GO111MODULE=\"on\"\nENV CGO_ENABLED=0\nRUN GOOS=linux GOARCH=amd64 go build -a -v -o manager main.go\n\n# Use distroless as minimal base image to package the manager binary\n# Refer to https://github.com/GoogleContainerTools/distroless for more details\nFROM alpine:3.15\nWORKDIR /\nRUN apk --no-cache add curl\nRUN curl -f -s https://raw.githubusercontent.com/armosec/kubescape/master/install.sh | /bin/sh\nCOPY --from=builder /workspace/manager /usr/local/bin/\nRUN addgroup -S kubeeye -g 1000 && adduser -S kubeeye -G kubeeye -u 1000\nUSER 1000:1000\n\nENTRYPOINT [\"manager\"]\n"
}