diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/mindalpha/mindalpha/docker/ubuntu20.04/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/mindalpha/mindalpha/docker/ubuntu20.04/Dockerfile/repaired.Dockerfile
index 5cf72f2..3a236b2 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/mindalpha/mindalpha/docker/ubuntu20.04/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/mindalpha/mindalpha/docker/ubuntu20.04/Dockerfile/repaired.Dockerfile
@@ -20,17 +20,17 @@ ENV LANG=C
 ENV DEBIAN_FRONTEND=noninteractive
 RUN apt-get update && apt-get upgrade -y
 RUN ln -svf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime && env DEBIAN_FRONTEND=noninteractive apt-get install -y tzdata
-RUN apt-get install --fix-missing -y build-essential curl cmake patchelf python3 python3-pip ninja-build git wget gnupg2
+RUN apt-get install --no-install-recommends --fix-missing -y build-essential curl cmake patchelf python3 python3-pip ninja-build git wget gnupg2 && rm -rf /var/lib/apt/lists/*;
 RUN apt-get update
 
 RUN update-alternatives --install /usr/bin/python python /usr/bin/python3 30
 RUN update-alternatives --install /usr/bin/pip pip /usr/bin/pip3 30
 RUN python -m pip install --upgrade awscli
 
-RUN apt-get install -y pkg-config                                        \
+RUN apt-get install --no-install-recommends -y pkg-config \
         libcurl4-openssl-dev libssl-dev uuid-dev zlib1g-dev libpulse-dev \
-        libboost-dev pybind11-dev libjson11-1-dev libfmt-dev             \
-        libspdlog-dev libthrift-dev thrift-compiler libzmq5-dev
+        libboost-dev pybind11-dev libjson11-1-dev libfmt-dev \
+        libspdlog-dev libthrift-dev thrift-compiler libzmq5-dev && rm -rf /var/lib/apt/lists/*;
 
 RUN git clone https://github.com/zeromq/cppzmq.git /tmp/cppzmq &&         \
     cmake -G Ninja -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr \
@@ -61,33 +61,33 @@ RUN git clone https://github.com/cameron314/concurrentqueue.git /tmp/concurrentq
 
 RUN cd /tmp &&                                                                                                                          \
     mkdir -p python-3.8.5-build &&                                                                                                      \
-    cd python-3.8.5-build &&                                                                                                            \
-    curl -L -o pyenv.run https://pyenv.run &&                                                                                           \
-    env PYENV_ROOT=/usr/local/python-3.8.5/.pyenv bash pyenv.run &&                                                                     \
-    apt-get install -y git make build-essential libssl-dev zlib1g-dev libbz2-dev libreadline-dev libsqlite3-dev                         \
-        wget curl llvm libncursesw5-dev xz-utils tk-dev libxml2-dev libxmlsec1-dev libffi-dev liblzma-dev &&                            \
-    env PYENV_ROOT=/usr/local/python-3.8.5/.pyenv /usr/local/python-3.8.5/.pyenv/bin/pyenv install 3.8.5 &&                             \
-    env PYENV_ROOT=/usr/local/python-3.8.5/.pyenv /usr/local/python-3.8.5/.pyenv/bin/pyenv global 3.8.5 &&                              \
-    mv /usr/local/python-3.8.5/.pyenv/versions/3.8.5/bin /usr/local/python-3.8.5/ &&                                                    \
-    mv /usr/local/python-3.8.5/.pyenv/versions/3.8.5/lib /usr/local/python-3.8.5/ &&                                                    \
-    mv /usr/local/python-3.8.5/.pyenv/versions/3.8.5/include /usr/local/python-3.8.5/ &&                                                \
-    mv /usr/local/python-3.8.5/.pyenv/versions/3.8.5/share /usr/local/python-3.8.5/ &&                                                  \
-    rm -rf /usr/local/python-3.8.5/.pyenv &&                                                                                            \
-    /usr/local/python-3.8.5/bin/python3.8 -m pip install --upgrade pip setuptools wheel &&                                              \
-    /usr/local/python-3.8.5/bin/python3.8 -m pip install --upgrade numpy==1.20.3 &&                                                     \
+    cd python-3.8.5-build && \
+    curl -f -L -o pyenv.run https://pyenv.run && \
+    env PYENV_ROOT=/usr/local/python-3.8.5/.pyenv bash pyenv.run && \
+    apt-get install --no-install-recommends -y git make build-essential libssl-dev zlib1g-dev libbz2-dev libreadline-dev libsqlite3-dev \
+        wget curl llvm libncursesw5-dev xz-utils tk-dev libxml2-dev libxmlsec1-dev libffi-dev liblzma-dev && \
+    env PYENV_ROOT=/usr/local/python-3.8.5/.pyenv /usr/local/python-3.8.5/.pyenv/bin/pyenv install 3.8.5 && \
+    env PYENV_ROOT=/usr/local/python-3.8.5/.pyenv /usr/local/python-3.8.5/.pyenv/bin/pyenv global 3.8.5 && \
+    mv /usr/local/python-3.8.5/.pyenv/versions/3.8.5/bin /usr/local/python-3.8.5/ && \
+    mv /usr/local/python-3.8.5/.pyenv/versions/3.8.5/lib /usr/local/python-3.8.5/ && \
+    mv /usr/local/python-3.8.5/.pyenv/versions/3.8.5/include /usr/local/python-3.8.5/ && \
+    mv /usr/local/python-3.8.5/.pyenv/versions/3.8.5/share /usr/local/python-3.8.5/ && \
+    rm -rf /usr/local/python-3.8.5/.pyenv && \
+    /usr/local/python-3.8.5/bin/python3.8 -m pip install --upgrade pip setuptools wheel && \
+    /usr/local/python-3.8.5/bin/python3.8 -m pip install --upgrade numpy==1.20.3 && \
     /usr/local/python-3.8.5/bin/python3.8 -m pip install --upgrade torch==1.7.1+cpu torchvision==0.8.2+cpu                              \
-        -f https://download.pytorch.org/whl/torch_stable.html &&                                                                        \
-    /usr/local/python-3.8.5/bin/python3.8 -m pip install --upgrade faiss-cpu==1.7.1.post2 &&                                            \
-    /usr/local/python-3.8.5/bin/python3.8 -m pip install --upgrade awscli awscli-plugin-endpoint &&                                     \
-    find /usr/local/python-3.8.5/bin -type f -exec grep '^#!.\+/bin/python\(3\(\.8\)\?\)\?$' {} -Hn --color \;  &&                      \
-    find /usr/local/python-3.8.5/bin -type f -exec sed -i -e 's@^#!.\+/bin/python\(3\(\.8\)\?\)\?$@#!/usr/bin/env python3.8@' {} \;  && \
-    cp /lib/x86_64-linux-gnu/libzmq.so.5 /usr/local/python-3.8.5/lib &&                                                                 \
-    cp /lib/x86_64-linux-gnu/libspdlog.so.1 /usr/local/python-3.8.5/lib &&                                                              \
-    cp /lib/x86_64-linux-gnu/libthrift-0.13.0.so /usr/local/python-3.8.5/lib &&                                                         \
-    tar -czf /usr/local/python-env-3.8.5.tgz -C /usr/local/python-3.8.5 $(ls /usr/local/python-3.8.5) &&                                \
-    cd .. &&                                                                                                                            \
-    rm -rf python-3.8.5-build &&                                                                                                        \
-    cd &&                                                                                                                               \
-    ln -svf python-3.8.5 /usr/local/python &&                                                                                           \
-    ln -svf python-env-3.8.5.tgz /usr/local/python-env.tgz &&                                                                           \
-    echo OK: python
+        -f https://download.pytorch.org/whl/torch_stable.html && \
+    /usr/local/python-3.8.5/bin/python3.8 -m pip install --upgrade faiss-cpu==1.7.1.post2 && \
+    /usr/local/python-3.8.5/bin/python3.8 -m pip install --upgrade awscli awscli-plugin-endpoint && \
+    find /usr/local/python-3.8.5/bin -type f -exec grep '^#!.\+/bin/python\(3\(\.8\)\?\)\?$' {} -Hn --color \; && \
+    find /usr/local/python-3.8.5/bin -type f -exec sed -i -e 's@^#!.\+/bin/python\(3\(\.8\)\?\)\?$@#!/usr/bin/env python3.8@' {} \; && \
+    cp /lib/x86_64-linux-gnu/libzmq.so.5 /usr/local/python-3.8.5/lib && \
+    cp /lib/x86_64-linux-gnu/libspdlog.so.1 /usr/local/python-3.8.5/lib && \
+    cp /lib/x86_64-linux-gnu/libthrift-0.13.0.so /usr/local/python-3.8.5/lib && \
+    tar -czf /usr/local/python-env-3.8.5.tgz -C /usr/local/python-3.8.5 $(ls /usr/local/python-3.8.5) && \
+    cd .. && \
+    rm -rf python-3.8.5-build && \
+    cd && \
+    ln -svf python-3.8.5 /usr/local/python && \
+    ln -svf python-env-3.8.5.tgz /usr/local/python-env.tgz && \
+    echo OK: python && rm /usr/local/python-env-3.8.5.tgz && rm -rf /var/lib/apt/lists/*;