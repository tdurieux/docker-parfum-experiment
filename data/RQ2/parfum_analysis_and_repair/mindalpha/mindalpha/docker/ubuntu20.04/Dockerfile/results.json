{
  "startTime": 1674216510986,
  "endTime": 1674216512473,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 86,
        "lineEnd": 86,
        "columnStart": 4,
        "columnEnd": 101
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 120
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 29,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 66,
        "lineEnd": 67,
        "columnStart": 4,
        "columnEnd": 105
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 120
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 29,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 66,
        "lineEnd": 67,
        "columnStart": 4,
        "columnEnd": 105
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 120
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 29,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 66,
        "lineEnd": 67,
        "columnStart": 4,
        "columnEnd": 105
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 144
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 29,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 66,
        "lineEnd": 67,
        "columnStart": 4,
        "columnEnd": 105
      }
    }
  ],
  "repairedDockerfile": "#\n# Copyright 2021 Mobvista\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\nFROM ubuntu:20.04\n\nENV LANG=C\nENV DEBIAN_FRONTEND=noninteractive\nRUN apt-get update && apt-get upgrade -y\nRUN ln -svf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime && env DEBIAN_FRONTEND=noninteractive apt-get install -y tzdata\nRUN apt-get install --no-install-recommends --fix-missing -y build-essential curl cmake patchelf python3 python3-pip ninja-build git wget gnupg2 && rm -rf /var/lib/apt/lists/*;\nRUN apt-get update\n\nRUN update-alternatives --install /usr/bin/python python /usr/bin/python3 30\nRUN update-alternatives --install /usr/bin/pip pip /usr/bin/pip3 30\nRUN python -m pip install --upgrade awscli\n\nRUN apt-get install --no-install-recommends -y pkg-config \\\n        libcurl4-openssl-dev libssl-dev uuid-dev zlib1g-dev libpulse-dev \\\n        libboost-dev pybind11-dev libjson11-1-dev libfmt-dev \\\n        libspdlog-dev libthrift-dev thrift-compiler libzmq5-dev && rm -rf /var/lib/apt/lists/*;\n\nRUN git clone https://github.com/zeromq/cppzmq.git /tmp/cppzmq &&         \\\n    cmake -G Ninja -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr \\\n          -DCPPZMQ_BUILD_TESTS=OFF                                        \\\n          -H/tmp/cppzmq -B/tmp/cppzmq/build &&                            \\\n    cmake --build /tmp/cppzmq/build --target install &&                   \\\n    rm -rf /tmp/cppzmq\n\nRUN git clone https://github.com/sharkdp/dbg-macro.git /tmp/dbg-macro &&  \\\n    cmake -G Ninja -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr \\\n          -DDBG_MACRO_ENABLE_TESTS=OFF                                    \\\n          -H/tmp/dbg-macro -B/tmp/dbg-macro/build &&                      \\\n    cmake --build /tmp/dbg-macro/build --target install &&                \\\n    rm -rf /tmp/dbg-macro\n\nRUN git clone -b 1.7.108 https://github.com/aws/aws-sdk-cpp.git /tmp/aws-sdk-cpp && \\\n    cmake -G Ninja -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr           \\\n          -DBUILD_SHARED_LIBS=OFF -DENABLE_TESTING=OFF -DBUILD_ONLY=s3              \\\n          -H/tmp/aws-sdk-cpp -B/tmp/aws-sdk-cpp/build &&                            \\\n    cmake --build /tmp/aws-sdk-cpp/build --target install &&                        \\\n    rm -rf /tmp/aws-sdk-cpp\n\nRUN git clone https://github.com/cameron314/concurrentqueue.git /tmp/concurrentqueue && \\\n    cmake -G Ninja -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr               \\\n          -H/tmp/concurrentqueue -B/tmp/concurrentqueue/build &&                        \\\n    cmake --build /tmp/concurrentqueue/build --target install &&                        \\\n    rm -rf /tmp/concurrentqueue\n\nRUN cd /tmp &&                                                                                                                          \\\n    mkdir -p python-3.8.5-build &&                                                                                                      \\\n    cd python-3.8.5-build && \\\n    curl -f -L -o pyenv.run https://pyenv.run && \\\n    env PYENV_ROOT=/usr/local/python-3.8.5/.pyenv bash pyenv.run && \\\n    apt-get install --no-install-recommends -y git make build-essential libssl-dev zlib1g-dev libbz2-dev libreadline-dev libsqlite3-dev \\\n        wget curl llvm libncursesw5-dev xz-utils tk-dev libxml2-dev libxmlsec1-dev libffi-dev liblzma-dev && \\\n    env PYENV_ROOT=/usr/local/python-3.8.5/.pyenv /usr/local/python-3.8.5/.pyenv/bin/pyenv install 3.8.5 && \\\n    env PYENV_ROOT=/usr/local/python-3.8.5/.pyenv /usr/local/python-3.8.5/.pyenv/bin/pyenv global 3.8.5 && \\\n    mv /usr/local/python-3.8.5/.pyenv/versions/3.8.5/bin /usr/local/python-3.8.5/ && \\\n    mv /usr/local/python-3.8.5/.pyenv/versions/3.8.5/lib /usr/local/python-3.8.5/ && \\\n    mv /usr/local/python-3.8.5/.pyenv/versions/3.8.5/include /usr/local/python-3.8.5/ && \\\n    mv /usr/local/python-3.8.5/.pyenv/versions/3.8.5/share /usr/local/python-3.8.5/ && \\\n    rm -rf /usr/local/python-3.8.5/.pyenv && \\\n    /usr/local/python-3.8.5/bin/python3.8 -m pip install --upgrade pip setuptools wheel && \\\n    /usr/local/python-3.8.5/bin/python3.8 -m pip install --upgrade numpy==1.20.3 && \\\n    /usr/local/python-3.8.5/bin/python3.8 -m pip install --upgrade torch==1.7.1+cpu torchvision==0.8.2+cpu                              \\\n        -f https://download.pytorch.org/whl/torch_stable.html && \\\n    /usr/local/python-3.8.5/bin/python3.8 -m pip install --upgrade faiss-cpu==1.7.1.post2 && \\\n    /usr/local/python-3.8.5/bin/python3.8 -m pip install --upgrade awscli awscli-plugin-endpoint && \\\n    find /usr/local/python-3.8.5/bin -type f -exec grep '^#!.\\+/bin/python\\(3\\(\\.8\\)\\?\\)\\?$' {} -Hn --color \\; && \\\n    find /usr/local/python-3.8.5/bin -type f -exec sed -i -e 's@^#!.\\+/bin/python\\(3\\(\\.8\\)\\?\\)\\?$@#!/usr/bin/env python3.8@' {} \\; && \\\n    cp /lib/x86_64-linux-gnu/libzmq.so.5 /usr/local/python-3.8.5/lib && \\\n    cp /lib/x86_64-linux-gnu/libspdlog.so.1 /usr/local/python-3.8.5/lib && \\\n    cp /lib/x86_64-linux-gnu/libthrift-0.13.0.so /usr/local/python-3.8.5/lib && \\\n    tar -czf /usr/local/python-env-3.8.5.tgz -C /usr/local/python-3.8.5 $(ls /usr/local/python-3.8.5) && \\\n    cd .. && \\\n    rm -rf python-3.8.5-build && \\\n    cd && \\\n    ln -svf python-3.8.5 /usr/local/python && \\\n    ln -svf python-env-3.8.5.tgz /usr/local/python-env.tgz && \\\n    echo OK: python && rm /usr/local/python-env-3.8.5.tgz && rm -rf /var/lib/apt/lists/*;\n"
}