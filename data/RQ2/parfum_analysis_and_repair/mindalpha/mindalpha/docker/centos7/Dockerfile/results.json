{
  "startTime": 1674220700684,
  "endTime": 1674220705173,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 69
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 106
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 93
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 4,
        "columnEnd": 99
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 87,
        "lineEnd": 87,
        "columnStart": 4,
        "columnEnd": 92
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 114,
        "lineEnd": 114,
        "columnStart": 4,
        "columnEnd": 92
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 143,
        "lineEnd": 143,
        "columnStart": 4,
        "columnEnd": 99
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 174,
        "lineEnd": 174,
        "columnStart": 4,
        "columnEnd": 100
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 201,
        "lineEnd": 201,
        "columnStart": 4,
        "columnEnd": 103
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 230,
        "lineEnd": 230,
        "columnStart": 4,
        "columnEnd": 110
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 260,
        "lineEnd": 260,
        "columnStart": 4,
        "columnEnd": 144
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 293,
        "lineEnd": 293,
        "columnStart": 4,
        "columnEnd": 101
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 335,
        "lineEnd": 335,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 369,
        "lineEnd": 369,
        "columnStart": 4,
        "columnEnd": 109
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 409,
        "lineEnd": 409,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 438,
        "lineEnd": 438,
        "columnStart": 4,
        "columnEnd": 106
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 21,
        "columnEnd": 53
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 234,
        "lineEnd": 234,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 295,
        "lineEnd": 295,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 374,
        "lineEnd": 374,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 411,
        "lineEnd": 412,
        "columnStart": 4,
        "columnEnd": 72
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 429,
        "lineEnd": 429,
        "columnStart": 4,
        "columnEnd": 101
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 429,
        "lineEnd": 429,
        "columnStart": 4,
        "columnEnd": 101
      }
    }
  ],
  "repairedDockerfile": "#\n# Copyright 2021 Mobvista\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\nFROM centos:7\n\nENV LANG=C\nRUN ln -svf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime\nRUN yum update -y && yum install -y awscli which sudo && rm -rf /var/cache/yum\n\nRUN pushd /tmp && \\\n    curl -f -L -O https://ftp.gnu.org/gnu/gcc/gcc-7.3.0/gcc-7.3.0.tar.xz && \\\n    tar -xf gcc-7.3.0.tar.xz && \\\n    cd gcc-7.3.0 && \\\n    yum install -y wget bzip2 && \\\n    ./contrib/download_prerequisites && \\\n    cd .. && \\\n    mkdir gcc-7.3.0-build && \\\n    cd gcc-7.3.0-build && \\\n    yum install -y gcc gcc-c++ make file && \\\n    ../gcc-7.3.0/configure                                               \\\n        --prefix=/usr/local/gcc-7.3.0                                    \\\n        --enable-languages=c,c++ --disable-multilib && \\\n    make -j$(nproc) && \\\n    make install && \\\n    cd .. && \\\n    rm -rf gcc-7.3.0-build && \\\n    rm -rf gcc-7.3.0 && \\\n    rm -f https://ftp.gnu.org/gnu/gcc/gcc-7.3.0/gcc-7.3.0.tar.xz && \\\n    popd && \\\n    ln -svf gcc-7.3.0 /usr/local/gcc && \\\n    yum install -y glibc-static && \\\n    echo OK: gcc && rm -rf /var/cache/yum\n\nRUN curl -f -L -O https://github.com/Kitware/CMake/releases/download/v3.20.3/cmake-3.20.3-Linux-x86_64.tar.gz && \\\n    mkdir -p /usr/local/cmake-3.20.3 && \\\n    tar -xf cmake-3.20.3-Linux-x86_64.tar.gz -C /usr/local/cmake-3.20.3 --strip-components 1 && \\\n    rm -f cmake-3.20.3-Linux-x86_64.tar.gz && \\\n    ln -svf cmake-3.20.3 /usr/local/cmake && \\\n    echo OK: cmake\n\nRUN yum install -y bzip2 zip unzip zip-devel && \\\n    curl -f -L -O https://github.com/ninja-build/ninja/releases/download/v1.10.2/ninja-linux.zip && \\\n    mkdir -p /usr/local/ninja-1.10.2/bin && \\\n    unzip ninja-linux.zip -d /usr/local/ninja-1.10.2/bin && \\\n    rm -f ninja-linux.zip && \\\n    ln -svf ninja-1.10.2 /usr/local/ninja && \\\n    echo OK: ninja && rm -rf /var/cache/yum\n\nRUN pushd /tmp && \\\n    curl -f -L -O https://boostorg.jfrog.io/artifactory/main/release/1.76.0/source/boost_1_76_0.tar.gz && \\\n    tar -xf boost_1_76_0.tar.gz && \\\n    mkdir -p boost_1_76_0/cc-wrappers/bin && \\\n    ln -svf /usr/local/gcc-7.3.0/bin/g++ boost_1_76_0/cc-wrappers/bin/g++ && \\\n    pushd boost_1_76_0/tools/build && \\\n    src/engine/build.sh --cxx=${PWD}/../../cc-wrappers/bin/g++ --cxxflags=-static gcc && \\\n    env PATH=${PWD}/../../cc-wrappers/bin:${PATH} src/engine/b2 --prefix=/usr/local/boost-1.76.0 install && \\\n    popd && \\\n    pushd boost_1_76_0/tools/boostdep/build && \\\n    env PATH=${PWD}/../../../cc-wrappers/bin:${PATH} ../../build/src/engine/b2 toolset=gcc variant=release  \\\n        debug-symbols=off link=static runtime-link=static threadapi=pthread cxxflags=-fPIC -j$(nproc) && \\\n    cp ../../../dist/bin/boostdep /usr/local/boost-1.76.0/bin && \\\n    popd && \\\n    pushd boost_1_76_0 && \\\n    env PATH=${PWD}/cc-wrappers/bin:${PATH} tools/build/src/engine/b2 toolset=gcc variant=release           \\\n        debug-symbols=on link=static runtime-link=shared threadapi=pthread cxxflags=-fPIC -j$(nproc)        \\\n        --without-mpi --without-graph_parallel --without-python --prefix=/usr/local/boost-1.76.0 install && \\\n    popd && \\\n    rm -rf boost_1_76_0 && \\\n    rm -f boost_1_76_0.tar.gz && \\\n    popd && \\\n    ln -svf boost-1.76.0 /usr/local/boost && \\\n    echo OK: boost\n\nRUN pushd /tmp && \\\n    curl -f -L -O https://github.com/zeromq/libzmq/releases/download/v4.3.4/zeromq-4.3.4.tar.gz && \\\n    tar -xf zeromq-4.3.4.tar.gz && \\\n    env LD_LIBRARY_PATH=/usr/local/gcc-7.3.0/lib64                                              \\\n        /usr/local/cmake-3.20.3/bin/cmake                                                       \\\n        -Wno-dev                                                                                \\\n        -G Ninja                                                                                \\\n        -DCMAKE_BUILD_TYPE=Release                                                              \\\n        -DCMAKE_INSTALL_PREFIX=/usr/local/zeromq-4.3.4                                          \\\n        -DBUILD_SHARED_LIBS=OFF                                                                 \\\n        -DCMAKE_POSITION_INDEPENDENT_CODE=ON                                                    \\\n        -DCMAKE_C_COMPILER=/usr/local/gcc-7.3.0/bin/gcc                                         \\\n        -DCMAKE_CXX_COMPILER=/usr/local/gcc-7.3.0/bin/g++                                       \\\n        -DCMAKE_MAKE_PROGRAM=/usr/local/ninja-1.10.2/bin/ninja                                  \\\n        -Hzeromq-4.3.4                                                                          \\\n        -Bzeromq-4.3.4-build && \\\n    env LD_LIBRARY_PATH=/usr/local/gcc-7.3.0/lib64                                              \\\n        /usr/local/cmake-3.20.3/bin/cmake                                                       \\\n        --build zeromq-4.3.4-build                                                              \\\n        --config Release --target install && \\\n    rm -rf zeromq-4.3.4-build && \\\n    rm -rf zeromq-4.3.4 && \\\n    rm -f zeromq-4.3.4.tar.gz && \\\n    popd && \\\n    ln -svf zeromq-4.3.4 /usr/local/zeromq && \\\n    echo OK: zeromq\n\nRUN pushd /tmp && \\\n    curl -f -L -o fmt-7.1.3.tar.gz https://github.com/fmtlib/fmt/archive/refs/tags/7.1.3.tar.gz && \\\n    tar -xf fmt-7.1.3.tar.gz && \\\n    env LD_LIBRARY_PATH=/usr/local/gcc-7.3.0/lib64                                              \\\n        /usr/local/cmake-3.20.3/bin/cmake                                                       \\\n        -Wno-dev                                                                                \\\n        -G Ninja                                                                                \\\n        -DCMAKE_BUILD_TYPE=Release                                                              \\\n        -DCMAKE_INSTALL_PREFIX=/usr/local/fmt-7.1.3                                             \\\n        -DBUILD_SHARED_LIBS=OFF                                                                 \\\n        -DCMAKE_POSITION_INDEPENDENT_CODE=ON                                                    \\\n        -DCMAKE_C_COMPILER=/usr/local/gcc-7.3.0/bin/gcc                                         \\\n        -DCMAKE_CXX_COMPILER=/usr/local/gcc-7.3.0/bin/g++                                       \\\n        -DCMAKE_MAKE_PROGRAM=/usr/local/ninja-1.10.2/bin/ninja                                  \\\n        -DFMT_TEST=OFF                                                                          \\\n        -DFMT_DOC=OFF                                                                           \\\n        -Hfmt-7.1.3                                                                             \\\n        -Bfmt-7.1.3-build && \\\n    env LD_LIBRARY_PATH=/usr/local/gcc-7.3.0/lib64                                              \\\n        /usr/local/cmake-3.20.3/bin/cmake                                                       \\\n        --build fmt-7.1.3-build                                                                 \\\n        --config Release --target install && \\\n    rm -rf fmt-7.1.3-build && \\\n    rm -rf fmt-7.1.3 && \\\n    rm -f fmt-7.1.3.tar.gz && \\\n    popd && \\\n    ln -svf fmt-7.1.3 /usr/local/fmt && \\\n    echo OK: fmt\n\nRUN pushd /tmp && \\\n    curl -f -L -o spdlog-1.8.5.tar.gz https://github.com/gabime/spdlog/archive/refs/tags/v1.8.5.tar.gz && \\\n    tar -xf spdlog-1.8.5.tar.gz && \\\n    env LD_LIBRARY_PATH=/usr/local/gcc-7.3.0/lib64                                                     \\\n        /usr/local/cmake-3.20.3/bin/cmake                                                              \\\n        -Wno-dev                                                                                       \\\n        -G Ninja                                                                                       \\\n        -DCMAKE_BUILD_TYPE=Release                                                                     \\\n        -DCMAKE_INSTALL_PREFIX=/usr/local/spdlog-1.8.5                                                 \\\n        -DBUILD_SHARED_LIBS=OFF                                                                        \\\n        -DCMAKE_POSITION_INDEPENDENT_CODE=ON                                                           \\\n        -DCMAKE_C_COMPILER=/usr/local/gcc-7.3.0/bin/gcc                                                \\\n        -DCMAKE_CXX_COMPILER=/usr/local/gcc-7.3.0/bin/g++                                              \\\n        -DCMAKE_MAKE_PROGRAM=/usr/local/ninja-1.10.2/bin/ninja                                         \\\n        -DCMAKE_PREFIX_PATH=/usr/local/fmt-7.1.3                                                       \\\n        -DSPDLOG_FMT_EXTERNAL=ON                                                                       \\\n        -DSPDLOG_BUILD_EXAMPLE=OFF                                                                     \\\n        -DSPDLOG_BUILD_TESTS=OFF                                                                       \\\n        -Hspdlog-1.8.5                                                                                 \\\n        -Bspdlog-1.8.5-build && \\\n    env LD_LIBRARY_PATH=/usr/local/gcc-7.3.0/lib64                                                     \\\n        /usr/local/cmake-3.20.3/bin/cmake                                                              \\\n        --build spdlog-1.8.5-build                                                                     \\\n        --config Release --target install && \\\n    rm -rf spdlog-1.8.5-build && \\\n    rm -rf spdlog-1.8.5 && \\\n    rm -f spdlog-1.8.5.tar.gz && \\\n    popd && \\\n    ln -svf spdlog-1.8.5 /usr/local/spdlog && \\\n    echo OK: spdlog\n\nRUN pushd /tmp && \\\n    curl -f -L -o json11-1.0.0.tar.gz https://github.com/dropbox/json11/archive/refs/tags/v1.0.0.tar.gz && \\\n    tar -xf json11-1.0.0.tar.gz && \\\n    env LD_LIBRARY_PATH=/usr/local/gcc-7.3.0/lib64                                                      \\\n        /usr/local/cmake-3.20.3/bin/cmake                                                               \\\n        -Wno-dev                                                                                        \\\n        -G Ninja                                                                                        \\\n        -DCMAKE_BUILD_TYPE=Release                                                                      \\\n        -DCMAKE_INSTALL_PREFIX=/usr/local/json11-1.0.0                                                  \\\n        -DBUILD_SHARED_LIBS=OFF                                                                         \\\n        -DCMAKE_POSITION_INDEPENDENT_CODE=ON                                                            \\\n        -DCMAKE_C_COMPILER=/usr/local/gcc-7.3.0/bin/gcc                                                 \\\n        -DCMAKE_CXX_COMPILER=/usr/local/gcc-7.3.0/bin/g++                                               \\\n        -DCMAKE_MAKE_PROGRAM=/usr/local/ninja-1.10.2/bin/ninja                                          \\\n        -Hjson11-1.0.0                                                                                  \\\n        -Bjson11-1.0.0-build && \\\n    env LD_LIBRARY_PATH=/usr/local/gcc-7.3.0/lib64                                                      \\\n        /usr/local/cmake-3.20.3/bin/cmake                                                               \\\n        --build json11-1.0.0-build                                                                      \\\n        --config Release --target install && \\\n    rm -rf json11-1.0.0-build && \\\n    rm -rf json11-1.0.0 && \\\n    rm -f json11-1.0.0.tar.gz && \\\n    popd && \\\n    ln -svf json11-1.0.0 /usr/local/json11 && \\\n    echo OK: json11\n\nRUN pushd /tmp && \\\n    curl -f -L -o pybind11-2.6.2.tar.gz https://github.com/pybind/pybind11/archive/refs/tags/v2.6.2.tar.gz && \\\n    tar -xf pybind11-2.6.2.tar.gz && \\\n    env LD_LIBRARY_PATH=/usr/local/gcc-7.3.0/lib64                                                         \\\n        /usr/local/cmake-3.20.3/bin/cmake                                                                  \\\n        -Wno-dev                                                                                           \\\n        -G Ninja                                                                                           \\\n        -DCMAKE_BUILD_TYPE=Release                                                                         \\\n        -DCMAKE_INSTALL_PREFIX=/usr/local/pybind11-2.6.2                                                   \\\n        -DBUILD_SHARED_LIBS=OFF                                                                            \\\n        -DCMAKE_POSITION_INDEPENDENT_CODE=ON                                                               \\\n        -DCMAKE_C_COMPILER=/usr/local/gcc-7.3.0/bin/gcc                                                    \\\n        -DCMAKE_CXX_COMPILER=/usr/local/gcc-7.3.0/bin/g++                                                  \\\n        -DCMAKE_MAKE_PROGRAM=/usr/local/ninja-1.10.2/bin/ninja                                             \\\n        -DPYBIND11_INSTALL=ON                                                                              \\\n        -DPYBIND11_TEST=OFF                                                                                \\\n        -Hpybind11-2.6.2                                                                                   \\\n        -Bpybind11-2.6.2-build && \\\n    env LD_LIBRARY_PATH=/usr/local/gcc-7.3.0/lib64                                                         \\\n        /usr/local/cmake-3.20.3/bin/cmake                                                                  \\\n        --build pybind11-2.6.2-build                                                                       \\\n        --config Release --target install && \\\n    rm -rf pybind11-2.6.2-build && \\\n    rm -rf pybind11-2.6.2 && \\\n    rm -f pybind11-2.6.2.tar.gz && \\\n    popd && \\\n    ln -svf pybind11-2.6.2 /usr/local/pybind11 && \\\n    echo OK: pybind11\n\nRUN pushd /tmp && \\\n    curl -f -L -o openssl-1.1.1.tar.gz https://github.com/openssl/openssl/archive/refs/tags/OpenSSL_1_1_1k.tar.gz && \\\n    mkdir -p openssl-1.1.1 && \\\n    tar -xf openssl-1.1.1.tar.gz -C openssl-1.1.1 --strip-components 1 && \\\n    cd openssl-1.1.1 && \\\n    yum install -y perl && \\\n    env LD_LIBRARY_PATH=/usr/local/gcc-7.3.0/lib64                                                                \\\n        CC=/usr/local/gcc-7.3.0/bin/gcc                                                                           \\\n        CXX=/usr/local/gcc-7.3.0/bin/g++                                                                          \\\n        ./config                                                                                                  \\\n        --prefix=/usr/local/openssl-1.1.1                                                                         \\\n        -fPIC && \\\n    env LD_LIBRARY_PATH=/usr/local/gcc-7.3.0/lib64                                                                \\\n        CC=/usr/local/gcc-7.3.0/bin/gcc                                                                           \\\n        CXX=/usr/local/gcc-7.3.0/bin/g++                                                                          \\\n        make                                                                                                      \\\n        -j$(nproc) && \\\n    env LD_LIBRARY_PATH=/usr/local/gcc-7.3.0/lib64                                                                \\\n        CC=/usr/local/gcc-7.3.0/bin/gcc                                                                           \\\n        CXX=/usr/local/gcc-7.3.0/bin/g++                                                                          \\\n        make                                                                                                      \\\n        install && \\\n    find /usr/local/openssl-1.1.1/lib \\( -type f -or -type l \\) -name '*.so*' -exec rm {} \\; && \\\n    cd .. && \\\n    rm -rf openssl-1.1.1 && \\\n    rm -f openssl-1.1.1.tar.gz && \\\n    popd && \\\n    ln -svf openssl-1.1.1 /usr/local/openssl && \\\n    echo OK: openssl && rm -rf /var/cache/yum\n\nRUN pushd /tmp && \\\n    curl -f -L -o libevent-2.1.12.tar.gz https://github.com/libevent/libevent/releases/download/release-2.1.12-stable/libevent-2.1.12-stable.tar.gz && \\\n    mkdir -p libevent-2.1.12 && \\\n    tar -xf libevent-2.1.12.tar.gz -C libevent-2.1.12 --strip-components 1 && \\\n    env LD_LIBRARY_PATH=/usr/local/gcc-7.3.0/lib64                                                                                                  \\\n        /usr/local/cmake-3.20.3/bin/cmake                                                                                                           \\\n        -Wno-dev                                                                                                                                    \\\n        -G Ninja                                                                                                                                    \\\n        -DCMAKE_BUILD_TYPE=Release                                                                                                                  \\\n        -DCMAKE_INSTALL_PREFIX=/usr/local/libevent-2.1.12                                                                                           \\\n        -DBUILD_SHARED_LIBS=OFF                                                                                                                     \\\n        -DCMAKE_POSITION_INDEPENDENT_CODE=ON                                                                                                        \\\n        -DCMAKE_C_COMPILER=/usr/local/gcc-7.3.0/bin/gcc                                                                                             \\\n        -DCMAKE_CXX_COMPILER=/usr/local/gcc-7.3.0/bin/g++                                                                                           \\\n        -DCMAKE_MAKE_PROGRAM=/usr/local/ninja-1.10.2/bin/ninja                                                                                      \\\n        -DOPENSSL_ROOT_DIR=/usr/local/openssl-1.1.1                                                                                                 \\\n        -DEVENT__DISABLE_SAMPLES=ON                                                                                                                 \\\n        -DEVENT__DISABLE_BENCHMARK=ON                                                                                                               \\\n        -DEVENT__DISABLE_REGRESS=ON                                                                                                                 \\\n        -DEVENT__DISABLE_TESTS=ON                                                                                                                   \\\n        -Hlibevent-2.1.12                                                                                                                           \\\n        -Blibevent-2.1.12-build && \\\n    env LD_LIBRARY_PATH=/usr/local/gcc-7.3.0/lib64                                                                                                  \\\n        /usr/local/cmake-3.20.3/bin/cmake                                                                                                           \\\n        --build libevent-2.1.12-build                                                                                                               \\\n        --config Release --target install && \\\n    rm -rf libevent-2.1.12-build && \\\n    rm -rf libevent-2.1.12 && \\\n    rm -f libevent-2.1.12.tar.gz && \\\n    popd && \\\n    ln -svf libevent-2.1.12 /usr/local/libevent && \\\n    echo OK: libevent\n\nRUN pushd /tmp && \\\n    curl -f -L -o thrift-0.14.1.tar.gz https://github.com/apache/thrift/archive/refs/tags/v0.14.1.tar.gz && \\\n    tar -xf thrift-0.14.1.tar.gz && \\\n    yum install -y flex bison && \\\n    env LD_LIBRARY_PATH=/usr/local/gcc-7.3.0/lib64                                                       \\\n        /usr/local/cmake-3.20.3/bin/cmake                                                                \\\n        -Wno-dev                                                                                         \\\n        -G Ninja                                                                                         \\\n        -DCMAKE_BUILD_TYPE=Release                                                                       \\\n        -DCMAKE_INSTALL_PREFIX=/usr/local/thrift-0.14.1                                                  \\\n        -DBUILD_SHARED_LIBS=OFF                                                                          \\\n        -DCMAKE_POSITION_INDEPENDENT_CODE=ON                                                             \\\n        -DCMAKE_C_COMPILER=/usr/local/gcc-7.3.0/bin/gcc                                                  \\\n        -DCMAKE_CXX_COMPILER=/usr/local/gcc-7.3.0/bin/g++                                                \\\n        -DCMAKE_MAKE_PROGRAM=/usr/local/ninja-1.10.2/bin/ninja                                           \\\n        -DBOOST_ROOT=/usr/local/boost-1.76.0                                                             \\\n        -DOPENSSL_ROOT_DIR=/usr/local/openssl-1.1.1                                                      \\\n        -DLIBEVENT_ROOT=/usr/local/libevent-2.1.12                                                       \\\n        -DWITH_BOOST_SMART_PTR=OFF                                                                       \\\n        -DWITH_BOOST_FUNCTIONAL=OFF                                                                      \\\n        -DWITH_BOOST_STATIC=ON                                                                           \\\n        -DWITH_JAVA=OFF                                                                                  \\\n        -DWITH_JAVASCRIPT=OFF                                                                            \\\n        -DWITH_NODEJS=OFF                                                                                \\\n        -DWITH_PYTHON=OFF                                                                                \\\n        -DWITH_SHARED_LIB=OFF                                                                            \\\n        -DBUILD_TESTING=OFF                                                                              \\\n        -DBUILD_EXAMPLES=OFF                                                                             \\\n        -DBUILD_TUTORIALS=OFF                                                                            \\\n        -Hthrift-0.14.1                                                                                  \\\n        -Bthrift-0.14.1-build && \\\n    env LD_LIBRARY_PATH=/usr/local/gcc-7.3.0/lib64                                                       \\\n        /usr/local/cmake-3.20.3/bin/cmake                                                                \\\n        --build thrift-0.14.1-build                                                                      \\\n        --config Release --target install && \\\n    rm -rf thrift-0.14.1-build && \\\n    rm -rf thrift-0.14.1 && \\\n    rm -f thrift-0.14.1.tar.gz && \\\n    popd && \\\n    ln -svf thrift-0.14.1 /usr/local/thrift && \\\n    echo OK: thrift && rm -rf /var/cache/yum\n\nRUN pushd /tmp && \\\n    curl -f -L -O https://curl.se/download/curl-7.77.0.tar.gz && \\\n    tar -xf curl-7.77.0.tar.gz && \\\n    cd curl-7.77.0 && \\\n    env LD_LIBRARY_PATH=/usr/local/gcc-7.3.0/lib64            \\\n        CC=/usr/local/gcc-7.3.0/bin/gcc                       \\\n        CXX=/usr/local/gcc-7.3.0/bin/g++                      \\\n        CFLAGS=-fPIC                                          \\\n        ./configure                                           \\\n        --prefix=/usr/local/curl-7.77.0                       \\\n        --with-ssl=/usr/local/openssl-1.1.1                   \\\n        --disable-shared                                      \\\n        --disable-ldap                                        \\\n        --without-brotli                                      \\\n        --without-libidn2 && \\\n    env LD_LIBRARY_PATH=/usr/local/gcc-7.3.0/lib64            \\\n        CC=/usr/local/gcc-7.3.0/bin/gcc                       \\\n        CXX=/usr/local/gcc-7.3.0/bin/g++                      \\\n        CFLAGS=-fPIC                                          \\\n        make                                                  \\\n        -j$(nproc) && \\\n    env LD_LIBRARY_PATH=/usr/local/gcc-7.3.0/lib64            \\\n        CC=/usr/local/gcc-7.3.0/bin/gcc                       \\\n        CXX=/usr/local/gcc-7.3.0/bin/g++                      \\\n        CFLAGS=-fPIC                                          \\\n        make                                                  \\\n        install && \\\n    cd .. && \\\n    rm -rf curl-7.77.0 && \\\n    rm -f curl-7.77.0.tar.gz && \\\n    popd && \\\n    ln -svf curl-7.77.0 /usr/local/curl && \\\n    echo OK: curl\n\nRUN pushd /tmp && \\\n    curl -f -L -o aws-sdk-cpp-1.7.108.tar.gz https://github.com/aws/aws-sdk-cpp/archive/refs/tags/1.7.108.tar.gz && \\\n    tar -xf aws-sdk-cpp-1.7.108.tar.gz && \\\n    sed -i -e 's@ \"-Werror\"@@' aws-sdk-cpp-1.7.108/cmake/compiler_settings.cmake && \\\n    sed -i -e 's@UPDATE_COMMAND \"\"@UPDATE_COMMAND \"\" PATCH_COMMAND sed -i -e \"s% -Werror%%g\" cmake/AwsCFlags.cmake@g' \\\n        aws-sdk-cpp-1.7.108/third-party/cmake/BuildAwsCCommon.cmake && \\\n    yum install -y git zlib-devel && \\\n    env PATH=/usr/local/ninja-1.10.2/bin:/usr/local/cmake-3.20.3/bin:/usr/local/gcc-7.3.0/bin:${PATH}                 \\\n        PKG_CONFIG_PATH=/usr/local/curl-7.77.0/lib/pkgconfig                                                          \\\n        LD_LIBRARY_PATH=/usr/local/gcc-7.3.0/lib64                                                                    \\\n        /usr/local/cmake-3.20.3/bin/cmake                                                                             \\\n        -Wno-dev                                                                                                      \\\n        -G Ninja                                                                                                      \\\n        -DCMAKE_BUILD_TYPE=Release                                                                                    \\\n        -DCMAKE_INSTALL_PREFIX=/usr/local/aws-sdk-cpp-1.7.108                                                         \\\n        -DBUILD_SHARED_LIBS=OFF                                                                                       \\\n        -DCMAKE_POSITION_INDEPENDENT_CODE=ON                                                                          \\\n        -DCMAKE_C_COMPILER=/usr/local/gcc-7.3.0/bin/gcc                                                               \\\n        -DCMAKE_CXX_COMPILER=/usr/local/gcc-7.3.0/bin/g++                                                             \\\n        -DCMAKE_MAKE_PROGRAM=/usr/local/ninja-1.10.2/bin/ninja                                                        \\\n        -DOPENSSL_ROOT_DIR=/usr/local/openssl-1.1.1                                                                   \\\n        -DBUILD_ONLY=\"s3;meteringmarketplace\"                                                                         \\\n        -DENABLE_TESTING=OFF                                                                                          \\\n        -Haws-sdk-cpp-1.7.108                                                                                         \\\n        -Baws-sdk-cpp-1.7.108-build && \\\n    env PATH=/usr/local/ninja-1.10.2/bin:/usr/local/cmake-3.20.3/bin:/usr/local/gcc-7.3.0/bin:${PATH}                 \\\n        PKG_CONFIG_PATH=/usr/local/curl-7.77.0/lib/pkgconfig                                                          \\\n        LD_LIBRARY_PATH=/usr/local/gcc-7.3.0/lib64                                                                    \\\n        /usr/local/cmake-3.20.3/bin/cmake                                                                             \\\n        --build aws-sdk-cpp-1.7.108-build                                                                             \\\n        --config Release --target install && \\\n    rm -rf aws-sdk-cpp-1.7.108-build && \\\n    rm -rf aws-sdk-cpp-1.7.108 && \\\n    rm -f aws-sdk-cpp-1.7.108.tar.gz && \\\n    popd && \\\n    ln -svf aws-sdk-cpp-1.7.108 /usr/local/aws-sdk-cpp && \\\n    echo OK: aws-sdk-cpp && rm -rf /var/cache/yum\n\nRUN pushd /tmp &&                                                                                                                       \\\n    mkdir -p python-3.7.7-build &&                                                                                                      \\\n    cd python-3.7.7-build && \\\n    curl -f -L -o pyenv.run https://pyenv.run && \\\n    env PYENV_ROOT=/usr/local/python-3.7.7/.pyenv bash pyenv.run && \\\n    yum install -y which gcc gcc-c++ make zlib-devel bzip2 bzip2-devel readline-devel                                                   \\\n        sqlite sqlite-devel openssl-devel tk-devel libffi-devel xz-devel && \\\n    env PYENV_ROOT=/usr/local/python-3.7.7/.pyenv /usr/local/python-3.7.7/.pyenv/bin/pyenv install 3.7.7 && \\\n    env PYENV_ROOT=/usr/local/python-3.7.7/.pyenv /usr/local/python-3.7.7/.pyenv/bin/pyenv global 3.7.7 && \\\n    mv /usr/local/python-3.7.7/.pyenv/versions/3.7.7/{bin,lib,include,share} /usr/local/python-3.7.7/ && \\\n    rm -rf /usr/local/python-3.7.7/.pyenv && \\\n    /usr/local/python-3.7.7/bin/python3.7 -m pip install --upgrade pip setuptools wheel && \\\n    /usr/local/python-3.7.7/bin/python3.7 -m pip install --upgrade numpy==1.20.3 && \\\n    /usr/local/python-3.7.7/bin/python3.7 -m pip install --upgrade torch==1.7.1+cpu torchvision==0.8.2+cpu                              \\\n        -f https://download.pytorch.org/whl/torch_stable.html && \\\n    /usr/local/python-3.7.7/bin/python3.7 -m pip install --upgrade faiss-cpu==1.7.1.post2 && \\\n    /usr/local/python-3.7.7/bin/python3.7 -m pip install --upgrade awscli awscli-plugin-endpoint && \\\n    find /usr/local/python-3.7.7/bin -type f -exec grep '^#!.\\+/bin/python\\(3\\(\\.7\\)\\?\\)\\?$' {} -Hn --color \\; && \\\n    find /usr/local/python-3.7.7/bin -type f -exec sed -i -e 's@^#!.\\+/bin/python\\(3\\(\\.7\\)\\?\\)\\?$@#!/usr/bin/env python3.7@' {} \\; && \\\n    cp /usr/local/gcc-7.3.0/lib64/libgcc_s.so.1 /usr/local/python-3.7.7/lib && \\\n    cp /usr/local/gcc-7.3.0/lib64/libstdc++.so.6 /usr/local/python-3.7.7/lib && \\\n    chmod a+x /usr/local/python-3.7.7/lib/libgcc_s.so.1 && \\\n    chmod a+x /usr/local/python-3.7.7/lib/libstdc++.so.6 && \\\n    tar -czf /usr/local/python-env-3.7.7.tgz -C /usr/local/python-3.7.7 $(ls /usr/local/python-3.7.7) && \\\n    cd .. && \\\n    rm -rf python-3.7.7-build && \\\n    popd && \\\n    ln -svf python-3.7.7 /usr/local/python && \\\n    ln -svf python-env-3.7.7.tgz /usr/local/python-env.tgz && \\\n    echo OK: python && rm -rf /var/cache/yum\n\nRUN pushd /tmp && \\\n    curl -f -L -o dbg-macro-0.4.0.tar.gz https://github.com/sharkdp/dbg-macro/archive/refs/tags/v0.4.0.tar.gz && \\\n    tar -xf dbg-macro-0.4.0.tar.gz && \\\n    /usr/local/cmake-3.20.3/bin/cmake                                                                         \\\n        -Wno-dev                                                                                              \\\n        -G Ninja                                                                                              \\\n        -DCMAKE_BUILD_TYPE=Release                                                                            \\\n        -DCMAKE_INSTALL_PREFIX=/usr/local/dbg-macro-0.4.0                                                     \\\n        -DBUILD_SHARED_LIBS=OFF                                                                               \\\n        -DCMAKE_POSITION_INDEPENDENT_CODE=ON                                                                  \\\n        -DCMAKE_C_COMPILER=/usr/local/gcc-7.3.0/bin/gcc                                                       \\\n        -DCMAKE_CXX_COMPILER=/usr/local/gcc-7.3.0/bin/g++                                                     \\\n        -DCMAKE_MAKE_PROGRAM=/usr/local/ninja-1.10.2/bin/ninja                                                \\\n        -DDBG_MACRO_ENABLE_TESTS=OFF                                                                          \\\n        -Hdbg-macro-0.4.0                                                                                     \\\n        -Bdbg-macro-0.4.0-build && \\\n    /usr/local/cmake-3.20.3/bin/cmake                                                                         \\\n        --build dbg-macro-0.4.0-build                                                                         \\\n        --config Release --target install && \\\n    rm -rf dbg-macro-0.4.0-build && \\\n    rm -rf dbg-macro-0.4.0 && \\\n    rm -f dbg-macro-0.4.0.tar.gz && \\\n    popd && \\\n    ln -svf dbg-macro-0.4.0 /usr/local/dbg-macro && \\\n    echo OK: dbg-macro\n"
}