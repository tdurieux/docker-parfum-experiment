{
  "startTime": 1674248550410,
  "endTime": 1674248551565,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# 1. BUILD FRONTEND source with webpack\nFROM node:16-alpine as builder-frontend\nARG env=production\nENV npm_config_cache=/tmp/.npm\nWORKDIR /app\nCOPY git_src/package.json git_src/package-lock.json ./\nRUN npm install && npm cache clean --force;\nCOPY git_src/webpack.config.js git_src/babel.config.js git_src/tsconfig.json git_src/.eslintrc git_src/.editorconfig ./\nCOPY git_src/client ./client\nRUN npm run build-frontend\n\n# 2. BUILD BACKEND source from .ts, uses dev-dependencies\nFROM node:16-alpine as builder-backend\nARG env=production\nENV npm_config_cache=/tmp/.npm\nWORKDIR /app\nCOPY git_src/package.json git_src/package-lock.json git_src/tsconfig.json git_src/webpack.config.js ./\nRUN npm install && npm cache clean --force;\nCOPY git_src/src ./src\nRUN npm run build-backend\n\n# 3. BUILD FINAL IMAGE\nFROM node:16-alpine\nARG env=production\nENV NODE_ENV=${env}\nRUN mkdir -p /app && \\\nchown nobody:nobody /app\nWORKDIR /app\nCOPY --chown=nobody:nobody --from=builder-frontend /app/dist /app/dist\nCOPY --chown=nobody:nobody --from=builder-backend /app/app /app/app\n\n# 3.1 copy only required files\nCOPY --chown=nobody:nobody git_src/migrations /app/migrations\nCOPY --chown=nobody:nobody git_src/container-health.js /app/container-health.js\nCOPY --chown=nobody:nobody git_src/knexfile.js /app/knexfile.js\nCOPY --chown=nobody:nobody git_src/package.json /app/package.json\nCOPY --chown=nobody:nobody git_src/package-lock.json /app/package-lock.json\n\n# 3.2 install production dependencies only. Cleanup cache after that\nRUN mkdir -p /.npm && \\\nnpm ci && \\\nrm -rf /.npm\n\nUSER nobody\nHEALTHCHECK --interval=10s --timeout=5s --start-period=10s --retries=3 CMD [ \"node\", \"container-health.js\" ]\nEXPOSE 3000\nCMD [\"node\", \"app/schema-registry.js\"]\n"
}