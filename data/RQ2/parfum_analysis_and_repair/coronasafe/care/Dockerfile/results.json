{
  "startTime": 1674218178439,
  "endTime": 1674218179837,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 23,
        "columnEnd": 62
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 16,
        "columnStart": 22,
        "columnEnd": 11
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG PYTHON_VERSION=3.10-slim-bullseye\n\n\n# define an alias for the specfic python version used in this file.\nFROM python:${PYTHON_VERSION} as python\n\n# Python build stage\nFROM python as python-build-stage\n\nARG BUILD_ENVIRONMENT=production\n\n# Install apt packages\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n  # dependencies for building Python packages\n  build-essential libgdal-dev \\\n  # psycopg2 dependencies\n  libpq-dev && rm -rf /var/lib/apt/lists/*;\n\n# Requirements are installed here to ensure they will be cached.\nCOPY ./requirements .\n\n# Create Python Dependency and Sub-Dependency Wheels.\nRUN pip wheel --wheel-dir /usr/src/app/wheels  \\\n  -r ${BUILD_ENVIRONMENT}.txt\n\n\n\n# Python 'run' stage\nFROM python as python-run-stage\n\nARG BUILD_ENVIRONMENT=production\nARG APP_HOME=/app\n\nENV PYTHONUNBUFFERED 1\nENV PYTHONDONTWRITEBYTECODE 1\nENV BUILD_ENV ${BUILD_ENVIRONMENT}\n\nWORKDIR ${APP_HOME}\n\nRUN addgroup --system django \\\n    && adduser --system --ingroup django django\n\n# Install required system dependencies\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n  # psycopg2 dependencies\n  libpq-dev \\\n  # PostGIS dependencies\n  libgdal-dev \\\n  # Translations dependencies\n  gettext \\\n  # Msic\n  wget gnupg \\\n  # Install Chrome\n  && wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - \\\n  && echo \"deb http://dl.google.com/linux/chrome/deb/ stable main\" >> /etc/apt/sources.list.d/google.list \\\n  && apt-get update && apt-get -y --no-install-recommends install google-chrome-stable \\\n  # cleaning up unused files\n  && apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false \\\n  && rm -rf /var/lib/apt/lists/*\n\n# All absolute dir copies ignore workdir instruction. All relative dir copies are wrt to the workdir instruction\n# copy python dependency wheels from python-build-stage\nCOPY --from=python-build-stage /usr/src/app/wheels  /wheels/\n\n# use wheels to install python dependencies\nRUN pip install --no-cache-dir --no-index --find-links=/wheels/ /wheels/* \\\n  && rm -rf /wheels/\n\nCOPY --chown=django:django ./start /start\nRUN sed -i 's/\\r$//g' /start\nRUN chmod +x /start\n\n# copy application code to WORKDIR\nCOPY --chown=django:django . ${APP_HOME}\n\n# make django owner of the WORKDIR directory as well.\nRUN chown django:django ${APP_HOME}\n\nUSER django\n\nEXPOSE 9000\n"
}