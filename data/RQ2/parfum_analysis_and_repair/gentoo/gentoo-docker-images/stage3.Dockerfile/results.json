{
  "startTime": 1674219601835,
  "endTime": 1674219602914,
  "originalSmells": [
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 19
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 69
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 32
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# This Dockerfile creates a gentoo stage3 container image. By default it\n# creates a stage3-amd64 image. It utilizes a multi-stage build and requires\n# docker-17.05.0 or later. It fetches a daily snapshot from the official\n# sources and verifies its checksum as well as its gpg signature.\n\nARG BOOTSTRAP\nFROM --platform=$BUILDPLATFORM ${BOOTSTRAP:-alpine:3.11} as builder\n\nWORKDIR /gentoo\n\nARG ARCH=amd64\nARG MICROARCH=amd64\nARG SUFFIX\nARG DIST=\"https://ftp-osl.osuosl.org/pub/gentoo/releases/${ARCH}/autobuilds\"\nARG SIGNING_KEY=\"0xBB572E0E2D182910\"\n\nRUN echo \"Building Gentoo Container image for ${ARCH} ${SUFFIX} fetching from ${DIST}\" \\\n && apk --no-cache add ca-certificates gnupg tar wget xz \\\n && STAGE3PATH=\"$(wget -O- \"${DIST}/latest-stage3-${MICROARCH}${SUFFIX}.txt\" | tail -n 1 | cut -f 1 -d ' ')\" \\\n && echo \"STAGE3PATH:\" $STAGE3PATH \\\n && STAGE3=\"$(basename ${STAGE3PATH})\" \\\n && wget -q \"${DIST}/${STAGE3PATH}\" \"${DIST}/${STAGE3PATH}.CONTENTS.gz\" \"${DIST}/${STAGE3PATH}.asc\" \\\n && gpg --batch --list-keys \\\n && echo \"honor-http-proxy\" >> ~/.gnupg/dirmngr.conf \\\n && echo \"disable-ipv6\" >> ~/.gnupg/dirmngr.conf \\\n && gpg --batch --keyserver hkps://keys.gentoo.org --recv-keys ${SIGNING_KEY} \\\n && gpg --batch --verify \"${STAGE3}.asc\" \\\n && tar xpf \"${STAGE3}\" --xattrs-include='*.*' --numeric-owner \\\n && ( sed -i -e 's/#rc_sys=\"\"/rc_sys=\"docker\"/g' etc/rc.conf 2>/dev/null || true ) \\\n && echo 'UTC' > etc/timezone \\\n && rm ${STAGE3}.asc ${STAGE3}.CONTENTS.gz ${STAGE3}\n\nFROM scratch\n\nWORKDIR /\nCOPY --from=builder /gentoo/ /\nCMD [\"/bin/bash\"]\n"
}