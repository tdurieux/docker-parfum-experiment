{
  "startTime": 1674250309549,
  "endTime": 1674250311891,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 120,
        "lineEnd": 120,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 138,
        "lineEnd": 138,
        "columnStart": 24,
        "columnEnd": 29
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 170,
        "lineEnd": 170,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 177,
        "lineEnd": 177,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 207,
        "lineEnd": 207,
        "columnStart": 19,
        "columnEnd": 30
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 247,
        "lineEnd": 247,
        "columnStart": 19,
        "columnEnd": 30
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 258,
        "lineEnd": 258,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 218,
        "lineEnd": 218,
        "columnStart": 19,
        "columnEnd": 31
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 365,
        "lineEnd": 365,
        "columnStart": 2,
        "columnEnd": 14
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 385,
        "lineEnd": 385,
        "columnStart": 2,
        "columnEnd": 14
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG IMAGE=containerbase/buildpack\nARG BUILDPACK_DEBUG\n\nFROM ${IMAGE} as build\n\nARG APT_HTTP_PROXY\nARG BUILDPACK_DEBUG\n\n# renovate: datasource=node\nRUN install-tool node v16.16.0\n\nRUN touch /.dummy\n\nUSER 1000\n\nCOPY --chown=1000:0 test test\nRUN chmod -R 775 /test\n\nWORKDIR /test\n\n#--------------------------------------\n# test: node\n#--------------------------------------\nFROM build as testa\n\nSHELL [ \"/bin/sh\", \"-c\" ]\nENTRYPOINT [ ]\n\nRUN set -ex; \\\n  printenv; \\\n  echo $SHELL; \\\n  echo \"$(command -v node)\";\n\nRUN set -ex; \\\n  [ \"$(command -v node)\" = \"/usr/local/bin/node\" ] && echo \"works\" || exit 1;\n\nRUN node --version\nRUN npm --version\n\n\n## Test for #136\nUSER 0\n\n# renovate: datasource=npm\nRUN install-npm re2 1.16.0\n\n#--------------------------------------\n# test: yarn\n#--------------------------------------\nFROM build as testb\n\nARG APT_HTTP_PROXY\n\nRUN npm install -g yarn && npm cache clean --force;\n\nRUN set -ex; \\\n  [ \"$(command -v yarn)\" = \"/home/${USER_NAME}/.npm-global/bin/yarn\" ] && echo \"works\" || exit 1; \\\n  yarn --version;\n\nRUN set -ex; cd a; yarn\n\n\nSHELL [ \"/bin/sh\", \"-c\" ]\n\nUSER root\n\n# renovate: datasource=npm\nRUN install-tool yarn 1.22.19\n\n# renovate: datasource=npm\nRUN install-tool lerna 5.1.6\n\nUSER 1000\n\nRUN set -ex; \\\n  [ \"$(command -v yarn)\" = \"/usr/local/bin/yarn\" ] && echo \"works\" || exit 1; \\\n  yarn --version\n\nRUN set -ex; \\\n  [ \"$(command -v lerna)\" = \"/usr/local/bin/lerna\" ] && echo \"works\" || exit 1; \\\n  lerna --version\n\n#--------------------------------------\n# test: pnpm\n#--------------------------------------\n\nFROM build as testc\n\nARG APT_HTTP_PROXY\n\n# renovate: datasource=npm\nRUN install-tool pnpm 7.5.0\n\nRUN set -ex; \\\n  pnpm --version;\n\n\nRUN set -ex; cd a; pnpm i\n\n\nSHELL [ \"/bin/sh\", \"-c\" ]\nRUN set -ex; \\\n  pnpm --version \\\n  [ \"$(command -v pnpm)\" = \"/home/user/bin/pnpm\" ] && echo \"works\" || exit 1;\n\n#--------------------------------------\n# test: node 17\n#--------------------------------------\n\nFROM ${IMAGE} as testd\n\nARG APT_HTTP_PROXY\n\nRUN touch /.dummy\n\nUSER 1000\n\n# renovate: datasource=node\nRUN install-tool node v17.0.1\n\nRUN npm install -g yarn && npm cache clean --force;\nRUN set -ex; \\\n  [ \"$(command -v yarn)\" = \"/home/${USER_NAME}/.npm-global/bin/yarn\" ] && echo \"works\" || exit 1; \\\n  yarn --version;\n\n# renovate: datasource=npm\nRUN install-tool yarn 1.22.19\nRUN set -ex; \\\n  [ \"$(command -v yarn)\" = \"/home/${USER_NAME}/.npm-global/bin/yarn\" ] && echo \"works\" || exit 1; \\\n  yarn --version;\n\n\nCOPY --chown=1000:0 test test\n\nRUN set -ex; \\\n  npm --version; \\\n  command -v npm;\n\nRUN set -ex; cd test/a; npm i && npm cache clean --force;\n\n#--------------------------------------\n# test: npm (install-tool npm)\n#--------------------------------------\nFROM build as teste\n\nSHELL [ \"/bin/sh\", \"-c\" ]\n\nUSER root\n# don't update!!\nRUN install-tool npm 8.0.0\n\nRUN npm --version\nRUN npm --version | grep '8.0.0'\n\nUSER 1000\n\n# don't update!!\nRUN install-tool npm 7.24.2\n\nRUN node --version\nRUN npm --version\nRUN npm --version | grep '7.24.2'\n\n#--------------------------------------\n# test: npm (npm i -g npm)\n#--------------------------------------\nFROM build as testf\n\nUSER root\n# don't update!! need force to overwrite symlink\nRUN npm i -gf npm@8.0.0 && npm cache clean --force;\n\nRUN set -ex; command -v npm; npm --version\nRUN set -ex; npm --version | grep '8.0.0'\n\nUSER 1000\n# don't update!!\nRUN npm i -g npm@7.24.2 && npm cache clean --force;\nRUN set -ex; command -v npm; npm --version\nRUN set -ex; npm --version | grep '7.24.2'\n\n\n#--------------------------------------\n# test: npm (install-npm npm)\n#--------------------------------------\nFROM build as testg\n\nSHELL [ \"/bin/sh\", \"-c\" ]\n\nUSER root\n# don't update!!\nRUN set -ex; install-npm npm 8.0.0\n\nRUN set -ex; command -v npm; npm --version\nRUN set -ex; npm --version | grep '8.0.0'\n\nUSER 1000\nRUN set -ex; command -v npm; npm --version\nRUN set -ex; npm --version | grep '8.0.0'\nRUN chmod -R g+w .\n\n# openshift\nUSER 1005\n# autoload bash env required\nSHELL [ \"/bin/bash\", \"-c\" ]\nRUN set -ex; command -v npm; npm --version\nRUN set -ex; npm --version | grep '8.0.0'\nRUN set -ex; cd a; npm install && npm cache clean --force;\n\n#--------------------------------------\n# test: yarn-slim\n#--------------------------------------\nFROM build as testh\n\n# renovate: datasource=npm lookupName=yarn\nRUN install-tool yarn-slim 1.22.19\n\nRUN set -ex; yarn --version\nRUN set -ex; cd a; yarn install && yarn cache clean;\n\n#--------------------------------------\n# test: npm (install-tool npm, node v14)\n#--------------------------------------\nFROM ${IMAGE} as testi\n\nARG BUILDPACK_DEBUG\n\n# don't update!!\nRUN install-tool node v14.18.1\nRUN install-tool node v14.18.2\n\nRUN cat $USER_HOME/.npmrc | grep \"prefix = \\\"$USER_HOME/.npm-global\\\"\"\n\nRUN touch /.dummy\n\nUSER 1000\n\nCOPY --chown=1000:0 test test\n\nWORKDIR /test\n\n# don't update!!\nRUN install-tool npm 6.14.15\n\nRUN node --version\nRUN npm --version\nRUN npm --version | grep '6.14.15'\nRUN set -ex; cd a; npm install && npm cache clean --force;\n\n#--------------------------------------\n# test: openshift yarn\n#--------------------------------------\nFROM build as testj\n\nUSER 1111:0\n\nARG APT_HTTP_PROXY\n\nRUN npm install -g yarn && npm cache clean --force;\n\nRUN set -ex; \\\n  [ \"$(command -v yarn)\" = \"/home/${USER_NAME}/.npm-global/bin/yarn\" ] && echo \"works\" || exit 1; \\\n  yarn --version;\n\nRUN set -ex; ls -lah /test/a; cd a; yarn\n\nSHELL [ \"/bin/sh\", \"-c\" ]\n\n# renovate: datasource=npm\nRUN install-tool yarn 1.22.19\n\n# renovate: datasource=npm\nRUN install-tool lerna 5.1.6\n\nRUN set -ex; \\\n  [ \"$(command -v yarn)\" = \"/usr/local/bin/yarn\" ] && echo \"works\" || exit 1; \\\n  yarn --version\n\nRUN set -ex; \\\n  [ \"$(command -v lerna)\" = \"/usr/local/bin/lerna\" ] && echo \"works\" || exit 1; \\\n  lerna --version\n\nRUN install-tool yarn 1.22.15\n\n#--------------------------------------\n# test: openshift npm (install-tool npm)\n#--------------------------------------\nFROM build as testk\n\nARG BUILDPACK_DEBUG\n# ENV NPM_CONFIG_LOGLEVEL=verbose\n\nUSER 1111:0\n\nSHELL [ \"/bin/sh\", \"-c\" ]\n\n# don't update!!\nRUN install-tool npm 8.0.0\n\nRUN npm --version\nRUN npm --version | grep '8.0.0'\n\n# don't update!!\nRUN install-tool npm 7.24.2\n\nRUN node --version\nRUN npm --version\nRUN npm --version | grep '7.24.2'\n\n# don't update!!\nENV NPM_VERSION=6.14.16\n\nRUN install-tool npm ${NPM_VERSION}\n\nRUN node --version\nRUN npm --version\nRUN npm --version | grep \"${NPM_VERSION}\"\n\n# TODO: use bats test\nRUN set -ex; \\\n  [ \"$(cat /home/user/npm/${NPM_VERSION}/lib/node_modules/npm/node_modules/node-gyp/package.json | jq -r .version)\" != \"5.1.0\" ] \\\n  && echo node-gyp works || exit 1;\n\n#--------------------------------------\n# test: corepack\n#--------------------------------------\nFROM build as testl\n\nSHELL [ \"/bin/sh\", \"-c\" ]\n\nUSER root\n\n# don't update!!\nRUN install-tool corepack 0.9.0\n\nRUN corepack --version | tee | grep '0.9.0'\n\nUSER 1000\n\n# renovate: datasource=npm\nRUN install-tool corepack 0.11.2\n\nRUN corepack --version\nRUN corepack --version | grep '0.9.0' && exit 1 || echo 'success'\n\nRUN set -ex; \\\n  [ \"$(command -v yarn)\" = \"/usr/local/bin/yarn\" ] && echo \"works\" || exit 1; \\\n  [ \"$(command -v pnpm)\" = \"/usr/local/bin/pnpm\" ] && echo \"works\" || exit 1;\n\n#--------------------------------------\n# test: yarn (corepack)\n#--------------------------------------\nFROM build as testm\n\nSHELL [ \"/bin/sh\", \"-c\" ]\n\n# renovate: datasource=npm\nRUN install-tool corepack 0.11.2\n\n# renovate: datasource=npm lookupName=yarn\nARG YARN_VERSION=1.22.18\n\nRUN set -ex; cd a; \\\n  npm pkg set packageManager=yarn@${YARN_VERSION}; \\\n  yarn -v | tee | grep ${YARN_VERSION}; \\\n  yarn install && yarn cache clean;\n\n#--------------------------------------\n# test: yarn v3 (corepack)\n#--------------------------------------\nFROM build as testn\n\nSHELL [ \"/bin/sh\", \"-c\" ]\n\n# renovate: datasource=npm\nRUN install-tool corepack 0.11.2\n\n# renovate: datasource=npm lookupName=yarn\nARG YARN_VERSION=3.1.0\n\n# re2 needs to be deleted https://github.com/uhop/install-artifact-from-github/pull/1\nRUN set -ex; cd a; \\\n  npm pkg set packageManager=yarn@${YARN_VERSION}; \\\n  yarn -v | tee | grep ${YARN_VERSION}; \\\n  npm pkg delete dependencies.re2; \\\n  yarn install && yarn cache clean;\n\n#--------------------------------------\n# test: pnpm (corepack)\n#--------------------------------------\nFROM build as testo\n\nSHELL [ \"/bin/sh\", \"-c\" ]\n\n# renovate: datasource=npm\nRUN install-tool corepack 0.11.2\n\n# renovate: datasource=npm lookupName=pnpm\nARG PNPM_VERSION=7.0.0\n\nRUN set -ex; cd a; \\\n  npm pkg set packageManager=pnpm@${PNPM_VERSION}; \\\n  pnpm -v | tee | grep ${PNPM_VERSION}; \\\n  pnpm install\n\n#--------------------------------------\n# final\n#--------------------------------------\nFROM ${IMAGE}\n\nCOPY --from=testa /.dummy /.dummy\nCOPY --from=testb /.dummy /.dummy\nCOPY --from=testc /.dummy /.dummy\nCOPY --from=testd /.dummy /.dummy\nCOPY --from=teste /.dummy /.dummy\nCOPY --from=testf /.dummy /.dummy\nCOPY --from=testg /.dummy /.dummy\nCOPY --from=testh /.dummy /.dummy\nCOPY --from=testi /.dummy /.dummy\nCOPY --from=testj /.dummy /.dummy\nCOPY --from=testk /.dummy /.dummy\nCOPY --from=testl /.dummy /.dummy\nCOPY --from=testm /.dummy /.dummy\nCOPY --from=testn /.dummy /.dummy\nCOPY --from=testo /.dummy /.dummy\n"
}