{
  "startTime": 1674252613361,
  "endTime": 1674252614372,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 111,
        "lineEnd": 111,
        "columnStart": 4,
        "columnEnd": 17
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 4,
        "columnEnd": 121
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 73,
        "lineEnd": 73,
        "columnStart": 4,
        "columnEnd": 106
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 123,
        "lineEnd": 123,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 26
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 55
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 88
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 50
      }
    }
  ],
  "repairedDockerfile": "# We will use ubuntu 18.04 as the base image\nFROM ubuntu:20.04\n\n# use bash to setup\nSHELL [\"/bin/bash\", \"-c\"]\n\n# apt update and install commands\nRUN apt-get update -y\nRUN apt-get install --no-install-recommends -y sudo && rm -rf /var/lib/apt/lists/*;\nRUN apt-get install --no-install-recommends -y wget && rm -rf /var/lib/apt/lists/*;\nRUN apt-get install --no-install-recommends -y build-essential && rm -rf /var/lib/apt/lists/*;\nRUN apt-get install --no-install-recommends -y gfortran && rm -rf /var/lib/apt/lists/*;\nRUN DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y pkg-config && rm -rf /var/lib/apt/lists/*;\nRUN apt-get install --no-install-recommends -y git && rm -rf /var/lib/apt/lists/*;\nRUN apt-get clean\n\n# add smili user\nRUN adduser --disabled-password --gecos '' smiliuser\nRUN echo 'smiliuser:smiligroup' | chpasswd\n\n# set up sudo\nRUN gpasswd -a smiliuser sudo\nRUN echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers\n\n# switch user\nUSER smiliuser\nENV HOME /home/smiliuser\n\n# create a local dir\nRUN mkdir $HOME/local\nRUN mkdir $HOME/local/lib\nRUN mkdir $HOME/local/bin\n\n# install pyenv\nRUN cd $HOME/local && \\\n    git clone https://github.com/pyenv/pyenv && \\\n    cd $HOME && \\\n    ln -s $HOME/local/pyenv .pyenv\nENV PYENV_ROOT $HOME/.pyenv\nENV PATH $PYENV_ROOT/shims:$PYENV_ROOT/bin:$PATH\nRUN echo 'export PYENV_ROOT=$HOME/.pyenv' >> ~/.bashrc && \\\n    echo 'export PATH=\"$HOME/.pyenv/bin:$PATH\"' >> ~/.bashrc && \\\n    echo 'eval \"$(pyenv init -)\"' >> ~/.bashrc\n\n# create a path to $HOME/local\nENV LD_LIBRARY_PATH $HOME/local/lib:$LD_LIBRARY_PATH\nENV PKG_CONFIG_PATH $HOME/local/lib/pkgconfig:$PKG_CONFIG_PATH\nENV PATH $HOME/local/bin:$PATH\nRUN echo 'export PATH=$HOME/local/bin:$PATH' >> ~/.bashrc  && \\\n    echo 'export LD_LIBRARY_PATH=$HOME/local/lib:$LD_LIBRARY_PATH' >> ~/.bashrc  && \\\n    echo 'export PKG_CONFIG_PATH=$HOME/local/lib/pkgconfig:$PKG_CONFIG_PATH' >> ~/.bashrc\n\n\n# miniconda3\nRUN pyenv install miniconda3-latest && \\\n    pyenv global  miniconda3-latest\n\n# OpenBLAS\nRUN cd $HOME/local && \\\n    git clone https://github.com/xianyi/OpenBLAS && \\\n    cd OpenBLAS && \\\n    make USE_OPENMP=1 CC=gcc FC=gfortran && \\\n    make PREFIX=$HOME/local install\n\n# FFTW3\nRUN cd $HOME/local && \\\n    wget https://www.fftw.org/fftw-3.3.9.tar.gz && \\\n    tar xzvf fftw-3.3.9.tar.gz && \\\n    cd fftw-3.3.9 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=$HOME/local --enable-openmp --enable-threads --enable-shared --enable-float --enable-type-prefix && \\\n    make && \\\n    make install && \\\n    make clean && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=$HOME/local --enable-openmp --enable-threads --enable-shared --enable-type-prefix && \\\n    make && \\\n    make install && rm fftw-3.3.9.tar.gz\n\n# FINUFFT\nRUN cd $HOME/local && \\\n    git clone https://github.com/flatironinstitute/finufft && \\\n    cd finufft && \\\n    echo 'CXX = g++'                             >> make.inc && \\\n    echo 'CC = gcc'                              >> make.inc && \\\n    echo 'FC = gfortran'                         >> make.inc && \\\n    echo 'CFLAGS += -I$(HOME)/local/include'     >> make.inc && \\\n    echo 'LIBS += -L$(HOME)/local/lib'           >> make.inc && \\\n    echo 'FLAGS = $(CFLAGS)'                     >> make.inc && \\\n    echo 'CXXFLAGS = $(CFLAGS) -DNEED_EXTERN_C'  >> make.inc && \\\n    echo 'OMPFLAGS = -fopenmp'                   >> make.inc && \\\n    echo 'OMPLIBS = -lgomp'                      >> make.inc && \\\n    make lib && \\\n    echo 'finufftdir=$(HOME)/local/finufft'                                            >> $HOME/local/lib/pkgconfig/finufft.pc && \\\n    echo 'libdir=${finufftdir}/lib-static'                                             >> $HOME/local/lib/pkgconfig/finufft.pc && \\\n    echo 'includedir=${finufftdir}/src'                                                >> $HOME/local/lib/pkgconfig/finufft.pc && \\\n    echo ''                                                                            >> $HOME/local/lib/pkgconfig/finufft.pc && \\\n    echo 'Name: FINUFFT'                                                               >> $HOME/local/lib/pkgconfig/finufft.pc && \\\n    echo 'Description: Flatiron Institute Nonuniform Fast Fourier Transform libraries' >> $HOME/local/lib/pkgconfig/finufft.pc && \\\n    echo 'Version: github'                                                             >> $HOME/local/lib/pkgconfig/finufft.pc && \\\n    echo 'Libs: -L${libdir} -lfinufft'                                                 >> $HOME/local/lib/pkgconfig/finufft.pc && \\\n    echo 'Cflags: -I${includedir}'                                                     >> $HOME/local/lib/pkgconfig/finufft.pc\n\n# python packages\nRUN conda install ipython jupyter numpy scipy matplotlib pandas astropy seaborn h5py xarray # basic scientific python\nRUN conda install ephem scikit-image scikit-learn # extras utils\nRUN conda install tqdm # extras utils\n\n# ehtim\nRUN cd $HOME/local && \\\n    git clone https://github.com/achael/eht-imaging && \\\n    cd eht-imaging && \\\n    conda install -c conda-forge pynfft && \\\n    pip install --no-cache-dir .\n\n# ehtplot\nRUN cd $HOME/local && \\\n    git clone https://github.com/liamedeiros/ehtplot && \\\n    cd ehtplot && \\\n    python setup.py install\n\n# smili\nRUN cd $HOME/local && \\\n    git clone https://github.com/astrosmili/smili && \\\n    cd smili && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n    make install\n"
}