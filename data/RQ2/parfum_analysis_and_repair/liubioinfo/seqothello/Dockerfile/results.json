{
  "startTime": 1674250620200,
  "endTime": 1674250621413,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 168,
        "columnEnd": 208
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 238,
        "columnEnd": 249
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 1,
        "lineEnd": 1,
        "columnStart": 4,
        "columnEnd": 54
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 26,
        "columnEnd": 56
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 105
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 99,
        "columnEnd": 125
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 111,
        "columnEnd": 142
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 99,
        "columnEnd": 125
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 111,
        "columnEnd": 142
      }
    }
  ],
  "repairedDockerfile": "FROM amazonlinux:latest\nRUN yum -y install which unzip aws-cli parallel procps && rm -rf /var/cache/yum\n# RUN yum -y install stress\n\nWORKDIR /tmp\nENV BUILD_DEP 'zlib-devel gcc gcc-c++ automake libtool diffutils pkgconfig gettext-devel glibc-static'\nRUN yum makecache fast && yum -y install wget bzip2 file && rm -rf /var/cache/yum\nRUN yum -y install zlib-devel gcc gcc-c++ automake libtool diffutils pkgconfig gettext-devel glibc-static && \\\n    cd /tmp && wget https://github.com/samtools/htslib/releases/download/1.8/htslib-1.8.tar.bz2 && tar jxf htslib-1.8.tar.bz2 && cd /tmp/htslib-1.8 && autoreconf -i && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --disable-bz2 --disable-lzma && make -j8 && make install && \\\n    cd /tmp && wget https://github.com/gmarcais/Jellyfish/releases/download/v2.2.10/jellyfish-2.2.10.tar.gz && tar zxf jellyfish-2.2.10.tar.gz && cd jellyfish-2.2.10 && export PKG_CONFIG_PATH=/usr/local/lib/pkgconfig && autoreconf -i && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make -j8 && make install && \\\n    yum -y remove zlib-devel gcc gcc-c++ automake libtool diffutils gettext-devel glibc-static && yum -y autoremove && yum -y autoremove && rm -rf /var/cache/yum\n\nCOPY build/bin/* /bin/\nCOPY build/test/comp /bin/                    \nCOPY dockerassets/* /usr/local/bin/\n\n# gem RUN gem install yaggo\n# COPY Jellyfish /tmp/\n# ncurses-devel ncurses libtool file bzip2-devel xz-devel\n# download htslib, yaggo\n# RUN ./configure --disable-bz2 --disable-lzma && make -j8 && make install #/usr/local/lib/pkgconfig/htslib.pc\n\n# RUN wget https://github.com/samtools/samtools/releases/download/1.8/samtools-1.8.tar.bz2 && tar jxf samtools-1.8.tar.bz2\n# WORKDIR /tmp/samtools-1.8\n# RUN yum install gcc gcc-c++\n# RUN ./configure && make -j4 && make install\n# WORKDIR /tmp\n\n# USER ec2-user\n# ENTRYPOINT /usr/local/bin/fetch_and_run.sh\n"
}