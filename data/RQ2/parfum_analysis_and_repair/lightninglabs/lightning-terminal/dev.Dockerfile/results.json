{
  "startTime": 1674248606632,
  "endTime": 1674248607265,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 5,
        "columnEnd": 17
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Start with a NodeJS base image that also contains yarn.\nFROM node:16.14.2-alpine as nodejsbuilder\n\n# Copy in the local repository to build from.\nCOPY . /go/src/github.com/lightninglabs/lightning-terminal\n\nRUN cd /go/src/github.com/lightninglabs/lightning-terminal/app \\\n  && yarn install \\\n  && yarn build && yarn cache clean;\n\n# The first stage is already done and all static assets should now be generated\n# in the app/build sub directory.\n# If you change this value, please also update:\n# /Dockerfile\n# /.github/workflows/main.yml\nFROM golang:1.17.6-alpine as golangbuilder\n\n# Instead of checking out from git again, we just copy the whole working\n# directory of the previous stage that includes the generated static assets.\nCOPY --from=nodejsbuilder /go/src/github.com/lightninglabs/lightning-terminal /go/src/github.com/lightninglabs/lightning-terminal\n\n# Force Go to use the cgo based DNS resolver. This is required to ensure DNS\n# queries required to connect to linked containers succeed.\nENV GODEBUG netdns=cgo\n\n# Explicitly turn on the use of modules (until this becomes the default).\nENV GO111MODULE on\n\n# Install dependencies and install/build lightning-terminal.\nRUN apk add --no-cache --update alpine-sdk \\\n  make \\\n  && cd /go/src/github.com/lightninglabs/lightning-terminal \\\n  && make go-install \\\n  && make go-install-cli\n\n# Start a new, final image to reduce size.\nFROM alpine as final\n\n# Define a root volume for data persistence.\nVOLUME /root/.lnd\n\n# Expose lightning-terminal and lnd ports (server, rpc).\nEXPOSE 8443 10009 9735\n\n# Copy the binaries and entrypoint from the builder image.\nCOPY --from=golangbuilder /go/bin/litd /bin/\nCOPY --from=golangbuilder /go/bin/litcli /bin/\nCOPY --from=golangbuilder /go/bin/lncli /bin/\nCOPY --from=golangbuilder /go/bin/frcli /bin/\nCOPY --from=golangbuilder /go/bin/loop /bin/\nCOPY --from=golangbuilder /go/bin/pool /bin/\n\n# Add bash.\nRUN apk add --no-cache \\\n  bash \\\n  jq \\\n  ca-certificates\n\n# Specify the start command and entrypoint as the lightning-terminal daemon.\nENTRYPOINT [\"litd\"]\n"
}