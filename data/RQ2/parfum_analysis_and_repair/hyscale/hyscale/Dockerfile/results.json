{
  "startTime": 1674255996201,
  "endTime": 1674255997278,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 26
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 50
      }
    }
  ],
  "repairedDockerfile": "FROM maven:3.6.3-jdk-11 as base\nARG GPG_KEY=GPG_KEY_TO_PUBLISH_JAR\nARG MAVEN_USER=MAVEN_USER_TO_PUBLISH_JAR\nARG MAVEN_PASS=MAVEN_PASSWORD_TO_PUBLISH_JAR\nARG GPG_PASS=GPG_PASSPHRASE_TO_PUBLISH_JAR\nARG MAVEN_EXEC=\"clean install\"\nENV server-id=ossrh\nENV server-username=$MAVEN_USER\nENV server-password=$MAVEN_PASS\nENV MAVEN_USERNAME=$MAVEN_USER\nENV MAVEN_PASSWORD=$MAVEN_PASS\nENV GPG_KEY_ENV=$GPG_KEY\nENV GPG_PASSPHRASE=$GPG_PASS\nENV MAVEN_EXEC_ENV=$MAVEN_EXEC\nWORKDIR /hyscale\nRUN apt-get install --no-install-recommends gpg -y \\\n    && apt-get clean && rm -rf /var/lib/apt/lists/*;\nCOPY . .\nRUN mkdir -p ~/.gnupg/ && echo \"$GPG_KEY_ENV\"| base64 --decode > ~/.gnupg/private.key \\\n    && gpg --batch --import ~/.gnupg/private.key \\\n    && mvn $MAVEN_EXEC_ENV\n\nFROM openjdk:11.0.12-jre-slim-buster\nENV DOCKERVERSION=18.06.2-ce\nRUN apt update \\\n    && apt-get install -y --no-install-recommends wget \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/*\nRUN wget --no-verbose https://download.docker.com/linux/static/stable/x86_64/docker-$DOCKERVERSION.tgz -O /tmp/docker.tgz \\\n    && tar xf /tmp/docker.tgz -C /tmp/ \\\n    && cp /tmp/docker/docker /usr/bin/ \\\n    && rm -rf /tmp/docker.tgz /tmp/docker\nCOPY --from=base /hyscale/_dist/artifacts/hyscale.jar  /usr/local/bin/\nWORKDIR /hyscale/app\nHEALTHCHECK NONE\n# TODO: specify heap max/min, metaspace\nENTRYPOINT [\"java\",\"-Xms216m\",\"-Xmx512m\",\"-Djdk.tls.client.protocols=TLSv1.2\",\"-Duser.home=/hyscale\",\"-jar\",\"/usr/local/bin/hyscale.jar\"]\nCMD [\"--help\"]\n"
}