{
  "startTime": 1674255970233,
  "endTime": 1674255971354,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 88,
        "lineEnd": 88,
        "columnStart": 5,
        "columnEnd": 44
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 90,
        "lineEnd": 90,
        "columnStart": 5,
        "columnEnd": 36
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 109,
        "lineEnd": 109,
        "columnStart": 5,
        "columnEnd": 81
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 116,
        "lineEnd": 116,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 101,
        "lineEnd": 101,
        "columnStart": 5,
        "columnEnd": 61
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 48,
        "columnEnd": 63
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 39,
        "lineEnd": 46,
        "columnStart": 5,
        "columnEnd": 10
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 52,
        "lineEnd": 87,
        "columnStart": 5,
        "columnEnd": 11
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright (C) 2020-2022 Swift Navigation Inc.\n# Contact: https://support.swiftnav.com\n#\n# This source is subject to the license found in the file 'LICENSE' which must\n# be distributed together with this source. All other rights reserved.\n#\n# THIS CODE AND INFORMATION IS PROVIDED \"AS IS\" WITHOUT WARRANTY OF ANY KIND,\n# EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED\n# WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A PARTICULAR PURPOSE.\n\n# This describes an image that should be able to generate libsbp bindings.\n# See the README.md for instructions on how to use it.\n\nARG UBUNTU_RELEASE=focal\n\nFROM ubuntu:${UBUNTU_RELEASE}\n\n# Re-declare UBUNTU_RELEASE to be visible after FROM\nARG UBUNTU_RELEASE\n\nARG DEBIAN_FRONTEND=noninteractive\n\nENV NODE_VERSION=v14.17.3\nENV JAVA_VERSION=11.0.11.hs-adpt\nENV GRADLE_VERSION=7.1.1\nENV CC=gcc-7\nENV CXX=g++-7\n\nENV RUSTUP_HOME=/rust\nENV CARGO_HOME=/cargo\n\nENV SDKMAN_DIR=/opt/sdkman\n\nENV PATH=/usr/lib/ccache:/cargo/bin:/rust/bin:${PATH}\n\nARG KITWARE_KEY_URL=https://apt.kitware.com/keys/kitware-archive-latest.asc\n\nRUN \\\n     apt-get update \\\n  && apt-get install --no-install-recommends -y \\\n      apt-utils \\\n      gnupg \\\n      gpg \\\n      netbase \\\n      software-properties-common \\\n      sudo \\\n      wget \\\n  && add-apt-repository ppa:deadsnakes/ppa \\\n  && wget -O - ${KITWARE_KEY_URL} 2>/dev/null | gpg --batch --dearmor - | sudo tee /etc/apt/trusted.gpg.d/kitware.gpg >/dev/null \\\n  && add-apt-repository \"deb https://apt.kitware.com/ubuntu/ ${UBUNTU_RELEASE} main\" \\\n  && cat /etc/apt/sources.list \\\n  && apt-get update \\\n  && apt-get install --no-install-recommends -y \\\n      git \\\n      curl \\\n      libudev-dev \\\n      uuid-dev \\\n      libffi-dev \\\n      libgmp-dev \\\n      zlib1g-dev \\\n      zip unzip \\\n      build-essential \\\n      $CC $CXX \\\n      libpython2.7-stdlib \\\n      libpython3.8-stdlib \\\n      python-is-python3 \\\n      python3-pip \\\n      python3-setuptools \\\n      llvm \\\n      clang \\\n      texlive-fonts-extra \\\n      texlive-latex-extra \\\n      texlive-science \\\n      check \\\n      ccache \\\n      pkg-config \\\n      doxygen \\\n      graphviz \\\n      imagemagick \\\n      enchant \\\n      clang-format-6.0 \\\n      python3.6 python3.6-dev python3.6-distutils \\\n      python3.7 python3.7-dev python3.7-distutils \\\n      python3 python3-dev python3-distutils \\\n      python3.9 python3.9-dev python3.9-distutils \\\n      python3.10 python3.10-dev python3.10-distutils \\\n      dpkg-dev \\\n      cmake \\\n  && curl -f -sSL https://get.haskellstack.org/ | sh \\\n  && rm -rf /var/lib/apt/lists/* /tmp/* \\\n  && curl -f -s \"https://get.sdkman.io\" | bash \\\n  && bash -c \"source $SDKMAN_DIR/bin/sdkman-init.sh; \\\n              sdk install java $JAVA_VERSION; sdk install gradle $GRADLE_VERSION; \\\n\t      which java; which gradle\"\n\nENV PATH=${SDKMAN_DIR}/candidates/java/current/bin:${PATH}\nENV PATH=${SDKMAN_DIR}/candidates/gradle/current/bin:${PATH}\n\nRUN \\\n     java --version \\\n  && gradle --version \\\n  && pip3 install --no-cache-dir tox sphinx tox-run-command construct pytest \\\n  && curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain stable --profile minimal --no-modify-path \\\n  && rustup component add rustfmt\n\nENV NVM_DIR=/opt/nvm\n\nRUN \\\n     mkdir -p $NVM_DIR \\\n  && curl -f -sL https://raw.githubusercontent.com/creationix/nvm/v0.38.0/install.sh | bash \\\n  && . $NVM_DIR/nvm.sh \\\n  && nvm install $NODE_VERSION\n\nENV NODE_PATH=$NVM_DIR/versions/node/$NODE_VERSION/lib/node_modules\nENV PATH=$NVM_DIR/versions/node/$NODE_VERSION/bin:${PATH}\n\nRUN npm install npm@latest mocha quicktype -g && sudo rm -rf /tmp/* && npm cache clean --force;\n\nARG UID=1000\n\n# Add a \"dockerdev\" user with sudo capabilities\n# 1000 is the first user ID issued on Ubuntu; might\n# be different for Mac users. Might need to add more.\nRUN \\\n     useradd -u ${UID} -ms /bin/bash -G sudo dockerdev \\\n  && echo '%sudo ALL=(ALL) NOPASSWD:ALL' >>/etc/sudoers \\\n  && find $NVM_DIR -exec chmod a+rw {} \\; \\\n  && find $RUSTUP_HOME -exec chmod a+rw {} \\; \\\n  && find $CARGO_HOME -exec chmod a+rw {} \\;\n\nWORKDIR /mnt/workspace\nUSER dockerdev\n\nRUN \\\n  if [ \"$(ls /tmp)\" ]; then ls /tmp; false; fi \\\n  && stack install --resolver lts-10.10 sbp \\\n  && rm -rf /tmp/*\n\nCMD [\"make\", \"all\"]\n\n# vim: ft=dockerfile\n"
}