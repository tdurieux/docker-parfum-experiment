{
  "startTime": 1674251286220,
  "endTime": 1674251287194,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 11,
        "columnStart": 7,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 18,
        "columnEnd": 64
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 11,
        "columnStart": 7,
        "columnEnd": 26
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 18,
        "columnEnd": 64
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# This file aimed for developers and optimized for quick re-builds\n# Shouild be used by running `make localdocker`\nFROM livepeer/ffmpeg-base:latest as builder\n\nFROM golang:1-stretch as builder2\n\nARG HIGHEST_CHAIN_TAG\nENV PKG_CONFIG_PATH /root/compiled/lib/pkgconfig\nWORKDIR /root\nRUN apt update \\\n    && apt install --no-install-recommends -y \\\n    git gcc g++ gnutls-dev && rm -rf /var/lib/apt/lists/*;\n    # git gcc g++ gnutls-dev linux-headers\nCOPY --from=builder /root/compiled /root/compiled/\n\nENV PKG_CONFIG_PATH /root/compiled/lib/pkgconfig\nWORKDIR /root\n\nCOPY go.mod go.mod\nCOPY go.sum go.sum\nRUN go mod download\n\nCOPY . .\n\nRUN echo \"Please build using 'make localdocker'\"\nRUN test -n \"$(cat .git.describe)\"\nRUN go build -tags $HIGHEST_CHAIN_TAG -ldflags=\"-X github.com/livepeer/go-livepeer/core.LivepeerVersion=$(cat VERSION)-$(cat .git.describe)\" -v cmd/livepeer/livepeer.go\n\nFROM debian:stretch-slim\n\nWORKDIR /root\nRUN apt update && apt install --no-install-recommends -y ca-certificates jq libgnutls30 && apt clean && rm -rf /var/lib/apt/lists/*;\nRUN mkdir -p /root/.lpData/mainnet/keystore && \\\n  mkdir -p /root/.lpData/rinkeby/keystore && \\\n  mkdir -p /root/.lpData/devenv/keystore && mkdir -p /root/.lpData/offchain/keystore\nCOPY --from=builder2 /root/livepeer /usr/bin/livepeer\n\nCOPY docker/start.sh .\nRUN chmod +x start.sh\n\nEXPOSE 7935/tcp\nEXPOSE 8935/tcp\nEXPOSE 1935/tcp\n\nENTRYPOINT [\"/root/start.sh\"]\nCMD [\"--help\"]\n\n# Build Docker image: docker build -t livepeerbinary:debian -f docker/Dockerfile.debian .\n"
}