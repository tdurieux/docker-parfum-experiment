{
  "startTime": 1674218449452,
  "endTime": 1674218450322,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 72
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 72
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG ARG_PYTHON_VERSION=3.9\nARG ARG_POETRY_VERSION=1.1.13\nARG ARG_S6_OVERLAY_VERSION=3.1.1.2\nARG ARG_S6_DOWNLOAD_PATH=\"/opt/s6\"\nARG ARG_POETRY_HOME=\"/opt/poetry\"\nARG ARG_PYSETUP_PATH=\"/opt/pysetup\"\nARG ARG_VENV_PATH=\"/opt/pysetup/.venv\"\n\n\n## Base\nFROM python:${ARG_PYTHON_VERSION}-slim as python-base\n\nARG ARG_POETRY_HOME\nARG ARG_VENV_PATH\n\nENV PYTHONUNBUFFERED=1 \\\n    PYTHONDONTWRITEBYTECODE=1 \\\n    PIP_NO_CACHE_DIR=off \\\n    PIP_DISABLE_PIP_VERSION_CHECK=on \\\n    PIP_DEFAULT_TIMEOUT=100 \\\n    POETRY_HOME=${ARG_POETRY_HOME}\n\nENV PATH=\"${ARG_VENV_PATH}/bin:${ARG_POETRY_HOME}/bin:$PATH\"\n\n\nFROM python-base as s6-base\n\nARG ARG_S6_OVERLAY_VERSION\nARG ARG_S6_DOWNLOAD_PATH\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y \\\n    xz-utils \\\n  && apt-get clean && rm -rf /var/lib/apt/lists/*\n\nADD https://github.com/just-containers/s6-overlay/releases/download/v${ARG_S6_OVERLAY_VERSION}/s6-overlay-noarch.tar.xz /tmp\nADD https://github.com/just-containers/s6-overlay/releases/download/v${ARG_S6_OVERLAY_VERSION}/s6-overlay-x86_64.tar.xz /tmp\nRUN mkdir -p \"${ARG_S6_DOWNLOAD_PATH}\" && \\\n    tar -C \"${ARG_S6_DOWNLOAD_PATH}\" -Jxpf /tmp/s6-overlay-x86_64.tar.xz && \\\n    tar -C \"${ARG_S6_DOWNLOAD_PATH}\" -Jxpf /tmp/s6-overlay-noarch.tar.xz && rm /tmp/s6-overlay-x86_64.tar.xz\n\n\n## Python builder\nFROM python-base as builder-base\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y \\\n    curl \\\n    build-essential \\\n    libpq-dev \\\n  && apt-get clean && rm -rf /var/lib/apt/lists/*\n\nARG ARG_POETRY_VERSION\nARG ARG_PYSETUP_PATH\n\nENV POETRY_VIRTUALENVS_IN_PROJECT=true \\\n    POETRY_NO_INTERACTION=1 \\\n    POETRY_VERSION=${ARG_POETRY_VERSION}\n\nSHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\nRUN curl -f -sSL https://install.python-poetry.org | python -\n\nWORKDIR ${ARG_PYSETUP_PATH}\nCOPY poetry.lock pyproject.toml ./\n\nRUN poetry install --no-dev && \\\n    pip install --no-cache-dir jinja-cli\n\n\n## Production image\nFROM python-base as production\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y \\\n    libpq5 \\\n  && apt-get clean && rm -rf /var/lib/apt/lists/*\n\nARG ARG_S6_DOWNLOAD_PATH\nARG ARG_PYSETUP_PATH\n\nCOPY --from=builder-base ${ARG_VENV_PATH} ${ARG_VENV_PATH}\nCOPY --from=s6-base ${ARG_S6_DOWNLOAD_PATH} /\nCOPY docker/rootfs /\n\nWORKDIR /app\n\nCOPY ./cappuccino ./cappuccino\nCOPY ./alembic ./alembic\nCOPY ./alembic.ini ./\n\nENV PYTHONPATH=\".\" \\\n    S6_BEHAVIOUR_IF_STAGE2_FAILS=2 \\\n    S6_READ_ONLY_ROOT=1 \\\n    SETTINGS_FILE=\"/run/config.ini\" \\\n    SETTINGS_SOURCE_FILE=\"/config/config.ini\"\n\nVOLUME [\"/config\"]\nEXPOSE 1337\n\nENTRYPOINT [\"/init\"]\n"
}