{
  "startTime": 1674250345653,
  "endTime": 1674250346563,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# ----------------\n# STEP 1:\nFROM chrisns/openzwave:alpine-1.6.1520 as ozw\n\n# ----------------\n# STEP 2:\nFROM node:erbium-alpine AS build-z2m\n\n# Install required dependencies\nRUN apk --no-cache add \\\n    coreutils \\\n    linux-headers \\\n    alpine-sdk \\\n    python \\\n    openssl\n\n# needed to build openzwave-shared\nCOPY --from=ozw /usr/local/include/openzwave /usr/local/include/openzwave\nCOPY --from=ozw /openzwave/libopenzwave.so* /lib/\nCOPY --from=ozw /openzwave/config /usr/local/etc/openzwave\n\nENV LD_LIBRARY_PATH /lib\n\nWORKDIR /root/Zwave2Mqtt\nCOPY . .\nRUN npm config set unsafe-perm true\nRUN npm install && npm cache clean --force;\nRUN npm run build\nRUN npm prune --production\nRUN rm -rf \\\n    build \\\n    index.html \\\n    package-lock.json \\\n    package.sh \\\n    src \\\n    static \\\n    stylesheets\n\n# ----------------\n# STEP 3:\nFROM node:erbium-alpine\n\nLABEL maintainer=\"robertsLando\"\n\nRUN apk add --no-cache \\\n    libstdc++  \\\n    libgcc \\\n    libusb \\\n    tzdata \\\n    eudev\n\n# Copy files from previous build stage\nCOPY --from=ozw /openzwave/libopenzwave.so* /lib/\nCOPY --from=ozw /openzwave/config /usr/local/etc/openzwave\nCOPY --from=build-z2m /root/Zwave2Mqtt /usr/src/app\n\n# Set enviroment\nENV LD_LIBRARY_PATH /lib\n\nWORKDIR /usr/src/app\n\nEXPOSE 8091\n\nCMD [\"node\", \"bin/www\"]\n"
}