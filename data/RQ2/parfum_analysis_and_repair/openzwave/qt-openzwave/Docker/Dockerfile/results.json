{
  "startTime": 1674249745424,
  "endTime": 1674249746571,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 135,
        "lineEnd": 135,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 139,
        "lineEnd": 139,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 18,
        "columnEnd": 150
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 91,
        "lineEnd": 91,
        "columnStart": 7,
        "columnEnd": 81
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 130,
        "lineEnd": 130,
        "columnStart": 7,
        "columnEnd": 153
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 18,
        "columnEnd": 150
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "############################################################\n# Dockerfile to build OpenZWave Library container images\n# Based on CentOS7\n############################################################\n\nARG distcchosts=''\nARG concurrency=\"12\"\nARG qtversion=\"5.12.9\"\n\n\n# Set the base image to Alpine\nFROM fishwaldo/ozw-base:${qtversion} as builder\n\n# File Author / Maintainer\nLABEL maintainer=\"justin@dynam.ac\"\n\n\nENV LC_ALL C\nENV DEBIAN_FRONTEND noninteractive\n\nWORKDIR /opt\n\n#RUN echo 'APT::Default-Release \"stable\";' > /etc/apt/apt.conf.d/99defaultrelease \\\n#\t&& echo 'deb     http://ftp.debian.org/debian/    unstable main contrib non-free' > /etc/apt/sources.list.d/unstable.list \\\n#\t&& apt update\nRUN apt update && apt-get -y --no-install-recommends install rapidjson-dev cmake pkgconf python libunwind-dev libcurl4-openssl-dev libx11-dev libglu1-mesa-dev libexecline-dev && rm -rf /var/lib/apt/lists/*;\n\nARG distcchosts=''\nARG concurrency=\"12\"\nARG qtversion=\"5.12.9\"\n\nENV DISTCC_HOSTS=\"$distcchosts\"\n\nRUN if [ -n \"${DISTCC_HOSTS}\" ]; then cd /usr/local/bin; ln /usr/bin/distcc gcc;  ln /usr/bin/distcc g++; echo \"Using DistCC hosts ${DISTCC_HOSTS}\"; fi\n\nENV PATH=$PATH:/opt/depot_tools/\nENV DEPOT_TOOLS_UPDATE=0\nRUN git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git \\\n\t&& cd depot_tools && git checkout 464e9ff && cd .. \\\n\t&& mkdir breakpad \\\n\t&& cd breakpad \\\n\t&& fetch breakpad \\\n\t&& cd src \\\n\t&& ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --disable-processor --disable-tools \\\n\t&& make -j${concurrency} \\\n\t&& make install\n\nRUN git clone https://github.com/OpenZWave/open-zwave.git \\\n\t&& cd open-zwave \\\n\t&& make -j${concurrency} \\\n\t&& make install instlibdir=/usr/local/lib/\n\nCOPY .qmake.conf /opt/qt-openzwave/\nCOPY qt-openzwave /opt/qt-openzwave/qt-openzwave\nCOPY qt-openzwave.pri /opt/qt-openzwave/\nCOPY qt-openzwave.pro /opt/qt-openzwave/\nCOPY qt-openzwavedatabase /opt/qt-openzwave/qt-openzwavedatabase\nCOPY qt-ozwdaemon /opt/qt-openzwave/qt-ozwdaemon\nCOPY qt-openzwave.pro /opt/qt-openzwave/\n\nARG BP_CLIENTID\nARG BP_CLIENTKEY\nARG BUILDNUMBER=0\nRUN cd qt-openzwave \\\n\t&& if [ -f Makefile ]; then qmake -r; make distclean; fi \\\n\t&& qmake -r CONFIG+=release \"BP_CLIENTID=$BP_CLIENTID\" \"BP_CLIENTKEY=$BP_CLIENTKEY\" \"BUILDNUMBER=$BUILDNUMBER\" \\\n\t&& make -j${concurrency} \\\n\t&& make install\n\nRUN git clone https://github.com/OpenZWave/ozw-admin.git \\\n\t&& cd ozw-admin \\\n\t&& if [ -f Makefile ]; then qmake -r; make distclean; fi \\\n\t&& qmake -r CONFIG+=release \\\n\t&& make -j${concurrency} \\\n\t&& make install\n\n\nENV LD_LIBRARY_PATH=\"/usr/local/lib:$LD_LIBRARY_PATH\"\n\nFROM debian:buster-slim as base\n\nARG qtversion=\"5.12.9\"\n\nENV LC_ALL C\nENV DEBIAN_FRONTEND noninteractive\n\nLABEL maintainer=\"justin@dynam.ac\"\n\nWORKDIR /opt\n\nRUN apt update \\\n    && apt-get -y --no-install-recommends install libunwind8 libcurl4 binutils libglib2.0-0 libicu63 wget \\\n    && apt-get -y purge binutils \\\n    && apt-get -y autoremove \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/*\n\nRUN case `uname -m` in x86_64) var=\"amd64\";; armhf) var=\"armhf\";; armv7l) var=\"armhf\";; aarch64) var=\"aarch64\";; esac && wget https://github.com/just-containers/s6-overlay/releases/download/v2.0.0.1/s6-overlay-$var.tar.gz -O /tmp/s6-overlay.tar.gz \\\n\t&& tar xzf /tmp/s6-overlay.tar.gz -C / \\\n\t&& rm /tmp/s6-overlay.tar.gz\n\n\nCOPY --from=builder /usr/local/bin/ozwdaemon /usr/local/bin/s6* /usr/local/bin/\nCOPY --from=builder /usr/local/lib/libopenzwave.so.1.6 /usr/local/lib/\nCOPY --from=builder /opt/qt/${qtversion}/lib/libQt5Core* /opt/qt/${qtversion}/lib/libQt5Network* /opt/qt/${qtversion}/lib/libQt5Mqtt* /opt/qt/${qtversion}/lib/libQt5WebSockets* /opt/qt/${qtversion}/lib/libQt5RemoteObjects* /opt/qt/${qtversion}/lib/\nCOPY --from=builder /opt/qt/${qtversion}/lib/libqt-openzwave* /opt/qt/${qtversion}/lib/\nCOPY --from=builder /opt/qt/${qtversion}/qt-openzwavedatabase.rcc /opt/qt/${qtversion}/\n\nCOPY Docker/base/ /\n\nRUN ldconfig -v\n\nENV BP_DB_PATH=\"/opt/ozw/config/crashes/\"\nENV S6_LOGGING_SCRIPT=\"n20 s10000000 T\"\nWORKDIR /opt/ozw/\nEXPOSE 1983\nVOLUME [\"/opt/ozw/config/\"]\nENTRYPOINT [\"/init\"]\n\nFROM base as allinone\n\nARG qtversion=\"5.12.9\"\n\nENV LC_ALL C\nENV DEBIAN_FRONTEND noninteractive\n\nADD https://github.com/novnc/websockify/archive/v0.9.0.tar.gz /opt/source/\nADD https://github.com/novnc/noVNC/archive/v1.2.0.tar.gz /opt/source/\n\nRUN apt update \\\n    && apt-get -y --no-install-recommends install libgl1 libpng16-16 libharfbuzz0b libfontconfig1 libmtdev1 libinput10 libxkbcommon0 libdbus-1-3 python3-setuptools python3-numpy \\\n    && apt-get -y autoremove \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/* \\\n\t&& cd /opt/source/ \\\n\t&& tar -xzvf v0.9.0.tar.gz \\\n\t&& cd websockify-0.9.0 \\\n\t&& python3 setup.py install \\\n\t&& cd /opt/source/ \\\n\t&& tar -xzvf v1.2.0.tar.gz \\\n\t&& cp -R /opt/source/noVNC-1.2.0/ /opt/novnc/ \\\n\t&& rm -rf /opt/source/* && rm v0.9.0.tar.gz\n\n\nCOPY --from=builder /usr/local/bin/ozwadmin /usr/local/bin/\nCOPY --from=builder /opt/qt/${qtversion}/lib/libQt5Svg* /opt/qt/${qtversion}/lib/libQt5Widgets* /opt/qt/${qtversion}/lib/libQt5Gui* /opt/qt/${qtversion}/lib/libQt5Xml* /opt/qt/${qtversion}/lib/libQt5SerialPort* /opt/qt/${qtversion}/lib/libQt5DBus* /opt/qt/${qtversion}/lib/\nCOPY --from=builder /opt/qt/${qtversion}/plugins /opt/qt/${qtversion}/plugins\nCOPY --from=builder /opt/qt/${qtversion}/resources /opt/qt/${qtversion}/resources\nCOPY --from=builder /opt/qt/${qtversion}/libexec /opt/qt/${qtversion}/libexec\nCOPY Docker/allinone/ /\n\nENV BP_DB_PATH=\"/opt/ozw/config/crashes/\"\nENV VNC_PORT=5901\nENV WEB_PORT=7800\nENV QT_ASSUME_STDERR_HAS_CONSOLE=1\nENV S6_LOGGING_SCRIPT=\"n20 s10000000 T\"\nWORKDIR /opt/ozw/\nEXPOSE 1983\nEXPOSE 5901\nEXPOSE 7800\nVOLUME [\"/opt/ozw/config/\"]\n\nENTRYPOINT [\"/init\"]\n"
}