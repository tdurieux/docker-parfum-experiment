diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/code-dot-org/code-dot-org/docker/dockerfiles/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/code-dot-org/code-dot-org/docker/dockerfiles/Dockerfile/repaired.Dockerfile
index bc5af05..7c953b5 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/code-dot-org/code-dot-org/docker/dockerfiles/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/code-dot-org/code-dot-org/docker/dockerfiles/Dockerfile/repaired.Dockerfile
@@ -13,7 +13,7 @@ ENV LANG=C.UTF-8
 
 # essential tools
 RUN apt-get update && \
-    apt-get install -y curl apt-transport-https sudo
+    apt-get install --no-install-recommends -y curl apt-transport-https sudo && rm -rf /var/lib/apt/lists/*;
 
 # add circleci user
 RUN groupadd --gid 3434 circleci \
@@ -21,62 +21,62 @@ RUN groupadd --gid 3434 circleci \
   && echo 'circleci ALL=NOPASSWD: ALL' >> /etc/sudoers.d/50-circleci
 
 # add yarn
-RUN apt-get install -y gnupg
-RUN curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - && \
+RUN apt-get install --no-install-recommends -y gnupg && rm -rf /var/lib/apt/lists/*;
+RUN curl -f -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - && \
     echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list
 
 # more tools
 RUN apt-get update && \
-		apt-get install -y \
-		  git \
-		  xvfb \
-		  yarn=1.22.5-1 \
-		  sudo \
-		  openssh-client \
-		  ca-certificates \
-		  tar \
-		  gzip \
-		  wget \
-		  xz-utils \
-		  autoconf \
-		  build-essential \
-		  zlib1g-dev \
-		  libssl-dev \
-		  curl \
-		  libreadline-dev \
-		  python python-dev
+		apt-get install --no-install-recommends -y \
+				git \
+				xvfb \
+				yarn=1.22.5-1 \
+				sudo \
+				openssh-client \
+				ca-certificates \
+				tar \
+				gzip \
+				wget \
+				xz-utils \
+				autoconf \
+				build-essential \
+				zlib1g-dev \
+				libssl-dev \
+				curl \
+				libreadline-dev \
+				python python-dev && rm -rf /var/lib/apt/lists/*;
 
 # install node
 RUN wget https://nodejs.org/dist/v14.17.1/node-v14.17.1.tar.gz && \
     tar -xzvf node-v14.17.1.tar.gz && \
     rm node-v14.17.1.tar.gz && \
     cd node-v14.17.1 && \
-    ./configure && \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" && \
     make -j4 && \
     make install && \
     cd .. && \
     rm -r node-v14.17.1
 
 # more more tools
-RUN apt-get install -y unzip
+RUN apt-get install --no-install-recommends -y unzip && rm -rf /var/lib/apt/lists/*;
 
 # install firefox
-RUN curl --output /tmp/firefox.deb https://s3.amazonaws.com/circle-downloads/firefox-mozilla-build_47.0.1-0ubuntu1_amd64.deb \
+RUN curl -f --output /tmp/firefox.deb https://s3.amazonaws.com/circle-downloads/firefox-mozilla-build_47.0.1-0ubuntu1_amd64.deb \
   && echo 'ef016febe5ec4eaf7d455a34579834bcde7703cb0818c80044f4d148df8473bb  /tmp/firefox.deb' | sha256sum -c \
-  && sudo dpkg -i /tmp/firefox.deb || sudo apt-get -f install  \
-  && apt-get update && apt-get install -y libgtk3.0-cil-dev \
-  && rm -rf /tmp/firefox.deb
+  && sudo dpkg -i /tmp/firefox.deb || sudo apt-get -f -y install \
+  && apt-get update && apt-get install --no-install-recommends -y libgtk3.0-cil-dev \
+  && rm -rf /tmp/firefox.deb && rm -rf /var/lib/apt/lists/*;
 
 # install chrome
-RUN curl -sSL -o /tmp/google-chrome-stable_current_amd64.deb https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb \
-      && (sudo dpkg -i /tmp/google-chrome-stable_current_amd64.deb || sudo apt-get -fy install)  \
+RUN curl -f -sSL -o /tmp/google-chrome-stable_current_amd64.deb https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb \
+      && (sudo dpkg -i /tmp/google-chrome-stable_current_amd64.deb || sudo apt-get -fy install) \
       && rm -rf /tmp/google-chrome-stable_current_amd64.deb \
       && sudo sed -i 's|HERE/chrome"|HERE/chrome" --disable-setuid-sandbox --no-sandbox|g' \
            "/opt/google/chrome/google-chrome"
 
 # install chromedriver
-RUN export CHROMEDRIVER_RELEASE=$(curl http://chromedriver.storage.googleapis.com/LATEST_RELEASE) \
-      && curl -sSL -o /tmp/chromedriver_linux64.zip "http://chromedriver.storage.googleapis.com/$CHROMEDRIVER_RELEASE/chromedriver_linux64.zip" \
+RUN export CHROMEDRIVER_RELEASE=$( curl -f https://chromedriver.storage.googleapis.com/LATEST_RELEASE) \
+      && curl -f -sSL -o /tmp/chromedriver_linux64.zip "https://chromedriver.storage.googleapis.com/$CHROMEDRIVER_RELEASE/chromedriver_linux64.zip" \
       && cd /tmp \
       && unzip chromedriver_linux64.zip \
       && rm -rf chromedriver_linux64.zip \
@@ -84,14 +84,14 @@ RUN export CHROMEDRIVER_RELEASE=$(curl http://chromedriver.storage.googleapis.co
       && sudo chmod +x /usr/local/bin/chromedriver
 
 # install mysql
-RUN curl -sSL -o /tmp/mysql-apt-config_0.8.22-1_all.deb https://dev.mysql.com/get/mysql-apt-config_0.8.22-1_all.deb \
+RUN curl -f -sSL -o /tmp/mysql-apt-config_0.8.22-1_all.deb https://dev.mysql.com/get/mysql-apt-config_0.8.22-1_all.deb \
   && echo "mysql-apt-config mysql-apt-config/select-server select mysql-5.7" | /usr/bin/debconf-set-selections \
   && DEBIAN_FRONTEND=noninteractive dpkg -i /tmp/mysql-apt-config_0.8.22-1_all.deb || apt-get -fy install \
   && rm -rf /tmp/mysql-apt-config_0.8.22-1_all.deb \
   && apt-get update \
-  && DEBIAN_FRONTEND=noninteractive apt-get install -y \
+  && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y \
     mysql-server \
-    libmysqlclient-dev
+    libmysqlclient-dev && rm -rf /var/lib/apt/lists/*;
 RUN chown -R mysql:mysql /var/lib/mysql \
   && service mysql start \
   && echo "ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY '';" | mysql \
@@ -101,25 +101,25 @@ RUN chown -R mysql:mysql /var/lib/mysql \
   && service mysql stop
 
 # install a couple more things from config.yml
-RUN apt-get update && apt-get -y install parallel libmagickwand-dev imagemagick
+RUN apt-get update && apt-get -y --no-install-recommends install parallel libmagickwand-dev imagemagick && rm -rf /var/lib/apt/lists/*;
 RUN mv /usr/bin/parallel /usr/bin/gnu_parallel
 
-RUN curl -sSL -o /tmp/pdftk-java_3.0.9-1_all.deb https://mirrors.kernel.org/ubuntu/pool/universe/p/pdftk-java/pdftk-java_3.0.9-1_all.deb \
+RUN curl -f -sSL -o /tmp/pdftk-java_3.0.9-1_all.deb https://mirrors.kernel.org/ubuntu/pool/universe/p/pdftk-java/pdftk-java_3.0.9-1_all.deb \
   && DEBIAN_FRONTEND=noninteractive dpkg -i /tmp/pdftk-java_3.0.9-1_all.deb || apt-get -fy install \
   && rm -rf /tmp/pdftk-java_3.0.9-1_all.deb
 RUN apt-get update
-RUN apt-get install -y libicu-dev enscript moreutils libmysqlclient-dev libsqlite3-dev
+RUN apt-get install --no-install-recommends -y libicu-dev enscript moreutils libmysqlclient-dev libsqlite3-dev && rm -rf /var/lib/apt/lists/*;
 RUN wget https://github.com/htacg/tidy-html5/releases/download/5.4.0/tidy-5.4.0-64bit.deb \
 	&& dpkg -i tidy-5.4.0-64bit.deb \
 	&& rm tidy-5.4.0-64bit.deb
 RUN mv /usr/bin/gnu_parallel /usr/bin/parallel
 
-RUN apt-get install -y rbenv
+RUN apt-get install --no-install-recommends -y rbenv && rm -rf /var/lib/apt/lists/*;
 
 # install https://github.com/boxboat/fixuid
 RUN USER=circleci && \
     GROUP=circleci && \
-    curl -SsL https://github.com/boxboat/fixuid/releases/download/v0.4/fixuid-0.4-linux-amd64.tar.gz | tar -C /usr/local/bin -xzf - && \
+    curl -f -SsL https://github.com/boxboat/fixuid/releases/download/v0.4/fixuid-0.4-linux-amd64.tar.gz | tar -C /usr/local/bin -xzf - && \
     chown root:root /usr/local/bin/fixuid && \
     chmod 4755 /usr/local/bin/fixuid && \
     mkdir -p /etc/fixuid && \
@@ -140,11 +140,11 @@ RUN echo 'eval "$(rbenv init -)"' >> ~/.bashrc
 
 # We need git >= 2.15 to use git rev-parse --is-shallow-clone feature
 # TODO: consolidate apt-get installs
-RUN sudo apt-get install -y software-properties-common && sudo add-apt-repository ppa:git-core/ppa && sudo apt-get update && sudo apt-get install -y git
-RUN sudo apt-get install -y jq
+RUN sudo apt-get install --no-install-recommends -y software-properties-common && sudo add-apt-repository ppa:git-core/ppa && sudo apt-get update && sudo apt-get install --no-install-recommends -y git && rm -rf /var/lib/apt/lists/*;
+RUN sudo apt-get install --no-install-recommends -y jq && rm -rf /var/lib/apt/lists/*;
 
 # en_US.UTF-8 locale not available by default
-RUN sudo apt-get install -y locales
+RUN sudo apt-get install --no-install-recommends -y locales && rm -rf /var/lib/apt/lists/*;
 RUN sudo locale-gen en_US.UTF-8
 
 COPY entrypoint.sh /entrypoint.sh