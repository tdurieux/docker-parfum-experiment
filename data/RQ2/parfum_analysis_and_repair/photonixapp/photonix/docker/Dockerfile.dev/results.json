{
  "startTime": 1674253205338,
  "endTime": 1674253206002,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 18,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.8.12-slim-bullseye\n\n# Install system dependencies - note that some of these are only used on non-amd64 where Python packages have to be compiled from source\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        build-essential \\\n        cron \\\n        curl \\\n        dcraw \\\n        file \\\n        git \\\n        gnupg \\\n        libatlas-base-dev \\\n        libatlas3-base \\\n        libblas-dev \\\n        libblas3 \\\n        libfreetype6 \\\n        libfreetype6-dev \\\n        libgl1 \\\n        libglib2.0-dev \\\n        libhdf5-dev \\\n        libheif-examples \\\n        libimage-exiftool-perl \\\n        libjpeg-dev \\\n        liblapack-dev \\\n        liblapack3 \\\n        libpq-dev \\\n        libtiff5-dev \\\n        netcat \\\n        nginx-light \\\n        supervisor \\\n    && \\\n        apt-get clean && \\\n            rm -rf /var/lib/apt/lists/* \\\n                   /tmp/* \\\n                   /var/tmp/*\n\n# Install Node & Yarn\nRUN curl -f -sL https://deb.nodesource.com/setup_14.x | bash - && \\\n    apt-get update && \\\n    apt-get install --no-install-recommends -y nodejs && \\\n         apt-get clean && \\\n            rm -rf /var/lib/apt/lists/* \\\n                   /tmp/* \\\n                   /var/tmp/*\nRUN npm install --global --unsafe-perm yarn && npm cache clean --force;\n\n# Install Python dependencies\nWORKDIR /srv\nCOPY docker/pip.conf /etc/pip.conf\nCOPY docker/.pypirc /root/.pypirc\nRUN pip install --no-cache-dir --upgrade pip\nRUN pip install --no-cache-dir pypi-uploader==1.1.0\n\nCOPY requirements.txt /srv/requirements.txt\nCOPY docker/install_and_upload_python_packages.py /root/install_and_upload_python_packages.py\nENV PYTHONUNBUFFERED=1\nARG PYPI_UPLOAD_USERNAME\nARG PYPI_UPLOAD_PASSWORD\nRUN if [ \"${PYPI_UPLOAD_USERNAME}\" = \"\" ] ; \\\n     then python /root/install_and_upload_python_packages.py ; \\\n     else python /root/install_and_upload_python_packages.py -u ${PYPI_UPLOAD_USERNAME} -p ${PYPI_UPLOAD_PASSWORD} ; \\\n    fi\n\n# Install NPM dependencies\nCOPY ui/package.json /srv/ui/package.json\nCOPY ui/yarn.lock /srv/ui/yarn.lock\nENV NODE_ENV=development\nRUN cd /srv/ui && yarn install && yarn cache clean;\n\n# Copy over the code\nCOPY photonix /srv/photonix\nCOPY test.py /srv/test.py\nCOPY manage.py /srv/manage.py\nCOPY tests /srv/tests\nCOPY ui/public /srv/ui/public\nCOPY ui/src /srv/ui/src\n\n# Copy system config and init scripts\nCOPY system /srv/system\nCOPY system/supervisord.conf /etc/supervisord.conf\n\n# Copy crontab\nCOPY system/cron.d /etc/cron.d/\nRUN chmod 0644 /etc/cron.d/*\n\nENV PYTHONPATH /srv\n\nCMD ./system/run.sh\n\nEXPOSE 80\n"
}