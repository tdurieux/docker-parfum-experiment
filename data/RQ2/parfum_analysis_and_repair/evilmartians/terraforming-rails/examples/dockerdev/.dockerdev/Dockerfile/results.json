{
  "startTime": 1674217900990,
  "endTime": 1674217902185,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "gemUpdateSystemRmRootGem",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "gemUpdateNoDocument",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 67,
        "columnEnd": 132
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG RUBY_VERSION\nFROM ruby:$RUBY_VERSION-slim-bullseye\n\nARG PG_MAJOR\nARG NODE_MAJOR\nARG BUNDLER_VERSION\nARG YARN_VERSION\n\n# Common dependencies\nRUN apt-get update -qq \\\n  && DEBIAN_FRONTEND=noninteractive apt-get install -yq --no-install-recommends \\\n    build-essential \\\n    gnupg2 \\\n    curl \\\n    less \\\n    git \\\n  && apt-get clean \\\n  && rm -rf /var/cache/apt/archives/* \\\n  && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \\\n  && truncate -s 0 /var/log/*log\n\n# Download MIME types database for mimemagic (only if you use it)\nRUN apt-get update -qq && DEBIAN_FRONTEND=noninteractive apt-get -yq dist-upgrade && \\\n  DEBIAN_FRONTEND=noninteractive apt-get install -yq --no-install-recommends \\\n    shared-mime-info \\\n  && cp /usr/share/mime/packages/freedesktop.org.xml ./ \\\n  && apt-get remove -y --purge shared-mime-info \\\n  && apt-get clean \\\n  && rm -rf /var/cache/apt/archives/* \\\n  && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \\\n  && truncate -s 0 /var/log/*log \\\n  && mkdir -p /usr/share/mime/packages \\\n  && cp ./freedesktop.org.xml /usr/share/mime/packages/\n\n# Add PostgreSQL to sources list\nRUN curl -f -sSL https://www.postgresql.org/media/keys/ACCC4CF8.asc | gpg --batch --dearmor -o /usr/share/keyrings/postgres-archive-keyring.gpg \\\n  && echo \"deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/postgres-archive-keyring.gpg] https://apt.postgresql.org/pub/repos/apt/\" bullseye-pgdg main $PG_MAJOR | tee /etc/apt/sources.list.d/postgres.list > /dev/null\n\n# Add NodeJS to sources list\nRUN curl -f -sL https://deb.nodesource.com/setup_$NODE_MAJOR.x | bash -\n\n# Install dependencies\nCOPY Aptfile /tmp/Aptfile\nRUN apt-get update -qq && DEBIAN_FRONTEND=noninteractive apt-get -yq dist-upgrade && \\\n  DEBIAN_FRONTEND=noninteractive apt-get install -yq --no-install-recommends \\\n    libpq-dev \\\n    postgresql-client-$PG_MAJOR \\\n    nodejs \\\n    $(grep -Ev '^\\s*#' /tmp/Aptfile | xargs) && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* && \\\n    truncate -s 0 /var/log/*log\n\n# Configure bundler\nENV LANG=C.UTF-8 \\\n  BUNDLE_JOBS=4 \\\n  BUNDLE_RETRY=3\n\n# Uncomment this line if you store Bundler settings in the project's root\n# ENV BUNDLE_APP_CONFIG=.bundle\n\n# Uncomment this line if you want to run binstubs without prefixing with `bin/` or `bundle exec`\n# ENV PATH /app/bin:$PATH\n\n# Upgrade RubyGems and install required Bundler version\n# See https://github.com/evilmartians/terraforming-rails/pull/24 for discussion\nRUN mkdir -p /usr/local/etc \\\n  && { \\\n    echo 'install: --no-document'; \\\n    echo 'update: --no-document'; \\\n  } >> /usr/local/etc/gemrc;\nRUN gem update --system && \\\n    rm /usr/local/lib/ruby/gems/*/specifications/default/bundler-*.gemspec && \\\n    gem uninstall bundler && \\\n    gem install bundler -v $BUNDLER_VERSION && rm -rf /root/.gem;\n\n# Create a directory for the app code\nRUN mkdir -p /app\n\nWORKDIR /app\n\nRUN npm install -g yarn@$YARN_VERSION && npm cache clean --force;\n"
}