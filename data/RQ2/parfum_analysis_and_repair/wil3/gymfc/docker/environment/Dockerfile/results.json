{
  "startTime": 1674255572658,
  "endTime": 1674255573422,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 7,
        "columnEnd": 61
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 18,
        "columnStart": 22,
        "columnEnd": 23
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 21,
        "lineEnd": 22,
        "columnStart": 22,
        "columnEnd": 18
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 35,
        "lineEnd": 37,
        "columnStart": 22,
        "columnEnd": 8
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 65,
        "lineEnd": 67,
        "columnStart": 22,
        "columnEnd": 11
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 18,
        "columnStart": 22,
        "columnEnd": 23
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 21,
        "lineEnd": 22,
        "columnStart": 22,
        "columnEnd": 18
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 35,
        "lineEnd": 37,
        "columnStart": 22,
        "columnEnd": 8
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 65,
        "lineEnd": 67,
        "columnStart": 22,
        "columnEnd": 11
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 73
      }
    }
  ],
  "repairedDockerfile": "# A container for the GymFC environment\n# Get with docker pull wil3/gymfc:v1\nFROM ubuntu:bionic\n\nENV USER=gymfc\nRUN useradd -ms /bin/bash $USER && mkdir /home/$USER/local\n\n# Install Dart dependencies\nRUN apt-get update && apt-get -y --no-install-recommends install \\\n    build-essential \\\n    cmake \\\n    pkg-config \\\n    git \\\n    libeigen3-dev \\\n    libassimp-dev \\\n    libccd-dev \\\n    libfcl-dev \\\n    libboost-regex-dev \\\n    libboost-system-dev && rm -rf /var/lib/apt/lists/*;\n\n# Octomap is specified as an optional dependency but building is not linking without it, http://dartsim.github.io/install_dart_on_ubuntu.html\nRUN apt-get update && apt-get -y --no-install-recommends install \\\n    liboctomap-dev && rm -rf /var/lib/apt/lists/*;\n\n# Build Dart\nARG DART_VERSION=v6.7.0\nRUN git clone \"https://github.com/dartsim/dart.git\" /tmp/dart \\\n    && cd /tmp/dart && git checkout $DART_VERSION \\\n    && mkdir build && cd build \\\n    && cmake .. \\\n    && make -j4 \\\n    && make install \\\n    && rm -rf /tmp/dart\n\n# Prepare Gazebo\nRUN apt-get update && apt-get -y --no-install-recommends install \\\n    lsb-release \\\n    wget && rm -rf /var/lib/apt/lists/*;\n\nRUN sh -c 'echo \"deb http://packages.osrfoundation.org/gazebo/ubuntu-stable `lsb_release -cs` main\" > /etc/apt/sources.list.d/gazebo-stable.list' \\\n    && wget https://packages.osrfoundation.org/gazebo.key -O - | apt-key add - && apt-get update \\\n    && wget https://bitbucket.org/osrf/release-tools/raw/default/jenkins-scripts/lib/dependencies_archive.sh -O /tmp/dependencies.sh\n\n# Install Gazebo dependencies\nRUN /bin/bash -c \"GAZEBO_MAJOR_VERSION=10 ROS_DISTRO=dummy source /tmp/dependencies.sh && echo \\${BASE_DEPENDENCIES} \\${GAZEBO_BASE_DEPENDENCIES} \\${DART_DEPENDENCIES} | tr -d '\\\\' | xargs apt-get -y install\"\n\n\n# Build Gazebo\nARG GAZEBO_VERSION=gazebo10_10.1.0\nRUN apt-get install --no-install-recommends -y mercurial libboost-all-dev \\\n    && hg clone https://bitbucket.org/osrf/gazebo /tmp/gazebo \\\n    && cd /tmp/gazebo \\\n    && hg up $GAZEBO_VERSION \\\n    && mkdir build && cd build \\\n    && cmake ../ \\\n    && make -j4 \\\n    && make install \\\n    && rm -rf /tmp/gazebo && rm -rf /var/lib/apt/lists/*;\n\n# Change default location of gazebo install.\n# Currently not used as it is most benificial so you can run multiple gazebo versions.\n# However to run gymfc the gymfc.ini must point to the correct setup.sh file.\n# cmake -DCMAKE_INSTALL_PREFIX=/home/$USER/local ../ \\\n\n# Install GymFC dependencies\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    python3-pip \\\n    python3 && rm -rf /var/lib/apt/lists/*;\n\nUSER $USER\nWORKDIR /home/$USER\n\nENTRYPOINT [\"/bin/bash\", \"-c\"]\n"
}