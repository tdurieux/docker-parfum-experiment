diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/funcwj/aps/docker/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/funcwj/aps/docker/Dockerfile/repaired.Dockerfile
index 0dff2d3..2b2cdd7 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/funcwj/aps/docker/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/funcwj/aps/docker/Dockerfile/repaired.Dockerfile
@@ -24,7 +24,7 @@ RUN apt-get update && apt-get install -y --no-install-recommends --allow-downgra
 # install openmpi (for horovod, optional)
 RUN wget https://download.open-mpi.org/release/open-mpi/${OPENMPI}/openmpi-${OPENMPI_VERSION}.tar.gz && \
     tar -zxf openmpi-${OPENMPI_VERSION}.tar.gz && rm openmpi-${OPENMPI_VERSION}.tar.gz && \
-    cd openmpi-${OPENMPI_VERSION} && ./configure --enable-orterun-prefix-by-default && make -j $(nproc) all && \
+    cd openmpi-${OPENMPI_VERSION} && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --enable-orterun-prefix-by-default && make -j $(nproc) all && \
     make install && ldconfig && cd ../ && rm -rf openmpi-${OPENMPI_VERSION}
 
 ENV PATH=/usr/local/mpi/bin:$PATH
@@ -44,10 +44,10 @@ RUN conda install -y python=${PYTHON_VERSION}
 RUN conda install -y pytorch==${PYTORCH_VERSION} torchaudio cudatoolkit=${CUDA_TOOLKIT} -c pytorch
 RUN conda install -y pyyaml matplotlib tqdm scipy h5py pybind11 yapf
 RUN conda install -y -c conda-forge tensorboard pysoundfile librosa pre-commit && conda clean -ya
-RUN pip install kaldi_python_io edit-distance museval sentencepiece pystoi pypesq pytest flake8
-RUN pip install https://github.com/kpu/kenlm/archive/master.zip
+RUN pip install --no-cache-dir kaldi_python_io edit-distance museval sentencepiece pystoi pypesq pytest flake8
+RUN pip install --no-cache-dir https://github.com/kpu/kenlm/archive/master.zip
 # patch
-RUN pip install numba==0.52
+RUN pip install --no-cache-dir numba==0.52
 
 # install hovorod (optional)
 RUN ldconfig /usr/local/cuda/targets/x86_64-linux/lib/stubs && \