diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/pyston/pyston/pyston/make_release_files/Dockerfile.20.04 b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/pyston/pyston/pyston/make_release_files/Dockerfile.20.04/repaired.Dockerfile
index b0b8c02..5be4f53 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/pyston/pyston/pyston/make_release_files/Dockerfile.20.04
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/pyston/pyston/pyston/make_release_files/Dockerfile.20.04/repaired.Dockerfile
@@ -7,12 +7,12 @@ RUN echo 'deb-src http://archive.ubuntu.com/ubuntu/ focal main restricted' >> /e
 
 RUN apt-get update
 RUN apt-get upgrade -y
-RUN apt-get install -y build-essential ninja-build git cmake clang libssl-dev libsqlite3-dev luajit python3.8 zlib1g-dev virtualenv libjpeg-dev linux-tools-common linux-tools-generic
-RUN apt-get install -y dh-make dh-exec debhelper patchelf
-RUN apt-get install -y rsync # used by the release script
+RUN apt-get install --no-install-recommends -y build-essential ninja-build git cmake clang libssl-dev libsqlite3-dev luajit python3.8 zlib1g-dev virtualenv libjpeg-dev linux-tools-common linux-tools-generic && rm -rf /var/lib/apt/lists/*;
+RUN apt-get install --no-install-recommends -y dh-make dh-exec debhelper patchelf && rm -rf /var/lib/apt/lists/*;
+RUN apt-get install --no-install-recommends -y rsync && rm -rf /var/lib/apt/lists/*; # used by the release script
 
 # we have to set a local else it will use ascii
-RUN apt-get install -y locales
+RUN apt-get install --no-install-recommends -y locales && rm -rf /var/lib/apt/lists/*;
 RUN locale-gen en_US.UTF-8
 ENV LANG en_US.UTF-8
 ENV LANGUAGE en_US:en
@@ -23,7 +23,7 @@ ENV LC_ALL en_US.UTF-8
 RUN apt build-dep -y python3.8
 
 # install dependencies for the test suite
-RUN apt-get install -y libwebp-dev libjpeg-dev python3.8-gdbm python3.8-tk python3.8-dev tk-dev libgdbm-dev libgdbm-compat-dev liblzma-dev libbz2-dev nginx
+RUN apt-get install --no-install-recommends -y libwebp-dev libjpeg-dev python3.8-gdbm python3.8-tk python3.8-dev tk-dev libgdbm-dev libgdbm-compat-dev liblzma-dev libbz2-dev nginx && rm -rf /var/lib/apt/lists/*;
 
 # revert bolt patched llvm
 RUN git config --global user.email "you@example.com"