diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/pyston/pyston/pyston/make_release_files/Dockerfile.18.04 b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/pyston/pyston/pyston/make_release_files/Dockerfile.18.04/repaired.Dockerfile
index 23b64e4..a6f9cf9 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/pyston/pyston/pyston/make_release_files/Dockerfile.18.04
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/pyston/pyston/pyston/make_release_files/Dockerfile.18.04/repaired.Dockerfile
@@ -8,27 +8,27 @@ RUN echo 'deb-src http://archive.ubuntu.com/ubuntu/ bionic-updates universe' >>
 
 # need newer cmake for bolts llvm
 RUN apt-get update
-RUN apt-get install -y apt-transport-https ca-certificates gnupg software-properties-common wget
-RUN wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null | gpg --dearmor - | tee /etc/apt/trusted.gpg.d/kitware.gpg >/dev/null
+RUN apt-get install --no-install-recommends -y apt-transport-https ca-certificates gnupg software-properties-common wget && rm -rf /var/lib/apt/lists/*;
+RUN wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null | gpg --batch --dearmor - | tee /etc/apt/trusted.gpg.d/kitware.gpg >/dev/null
 RUN add-apt-repository -y 'deb https://apt.kitware.com/ubuntu/ bionic main'
 
 RUN apt-get update
 RUN apt-get upgrade -y
-RUN apt-get install -y build-essential ninja-build git cmake clang libssl-dev libsqlite3-dev luajit python3.8 zlib1g-dev virtualenv libjpeg-dev linux-tools-common linux-tools-generic
-RUN apt-get install -y dh-make dh-exec debhelper patchelf
-RUN apt-get install -y rsync # used by the release script
+RUN apt-get install --no-install-recommends -y build-essential ninja-build git cmake clang libssl-dev libsqlite3-dev luajit python3.8 zlib1g-dev virtualenv libjpeg-dev linux-tools-common linux-tools-generic && rm -rf /var/lib/apt/lists/*;
+RUN apt-get install --no-install-recommends -y dh-make dh-exec debhelper patchelf && rm -rf /var/lib/apt/lists/*;
+RUN apt-get install --no-install-recommends -y rsync && rm -rf /var/lib/apt/lists/*; # used by the release script
 
 # we have to set a local else it will use ascii
-RUN apt-get install -y locales
+RUN apt-get install --no-install-recommends -y locales && rm -rf /var/lib/apt/lists/*;
 RUN locale-gen en_US.UTF-8
 ENV LANG en_US.UTF-8
 ENV LANGUAGE en_US:en
 ENV LC_ALL en_US.UTF-8
 
 # we want to use gcc 9. Install it and make it the default
-RUN apt install -y software-properties-common
+RUN apt install --no-install-recommends -y software-properties-common && rm -rf /var/lib/apt/lists/*;
 RUN add-apt-repository ppa:ubuntu-toolchain-r/test
-RUN apt-get install -y gcc-9 g++-9
+RUN apt-get install --no-install-recommends -y gcc-9 g++-9 && rm -rf /var/lib/apt/lists/*;
 RUN update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 50
 RUN update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 50
 
@@ -37,7 +37,7 @@ RUN update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 50
 RUN apt build-dep -y python3.8
 
 # install dependencies for the test suite
-RUN apt-get install -y libwebp-dev libjpeg-dev python3.8-gdbm python3.8-tk python3.8-dev tk-dev libgdbm-dev libgdbm-compat-dev liblzma-dev libbz2-dev nginx
+RUN apt-get install --no-install-recommends -y libwebp-dev libjpeg-dev python3.8-gdbm python3.8-tk python3.8-dev tk-dev libgdbm-dev libgdbm-compat-dev liblzma-dev libbz2-dev nginx && rm -rf /var/lib/apt/lists/*;
 
 # revert bolt patched llvm and make sure it gets build
 RUN git config --global user.email "you@example.com"