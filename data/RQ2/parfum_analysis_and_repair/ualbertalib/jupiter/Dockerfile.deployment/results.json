{
  "startTime": 1674250895651,
  "endTime": 1674250896550,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "gemUpdateSystemRmRootGem",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "gemUpdateNoDocument",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 18,
        "columnStart": 7,
        "columnEnd": 32
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ruby:2.6\nLABEL maintainer=\"University of Alberta Library\"\n\n# Need to add jessie-backports repo so we can get FFMPEG, doesn't come with jessie debian by default\n# RUN echo 'deb http://ftp.debian.org/debian jessie-backports main'  >> /etc/apt/sources.list\n\n# Autoprefixer doesnâ€™t support Node v4.8.2. Update it.\nRUN curl -f -sL https://deb.nodesource.com/setup_10.x | bash -\n\n## To install the Yarn package manager (rails assets:precompile complains if not installed), run:\nRUN curl -f -sL https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \\\n    && echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list\n\nRUN apt-get update -qq \\\n    && apt-get install --no-install-recommends -y build-essential \\\n                          libpq-dev \\\n                          nodejs \\\n                          yarn \\\n                          tzdata \\\n                          # libreoffice \\\n                          # imagemagick \\\n                          # ghostscript \\\n                          # unzip \\\n                          # ffmpeg \\\n    && rm -rf /var/lib/apt/lists/*\n\n\n# install fits\n# RUN mkdir -p /usr/local/fits \\\n#     && cd /usr/local/fits \\\n#     && wget http://projects.iq.harvard.edu/files/fits/files/fits-1.0.6.zip \\\n#     && unzip fits-1.0.6.zip \\\n#     && rm  fits-1.0.6.zip \\\n#     && chmod a+x /usr/local/fits/fits-1.0.6/fits.sh \\\n#     && ln -s /usr/local/fits/fits-1.0.6/fits.sh /usr/bin/fits\n\nENV APP_ROOT /app\nRUN mkdir -p $APP_ROOT\nWORKDIR $APP_ROOT\n\n# Update bundler\nRUN mkdir -p /usr/local/etc \\\n  && { \\\n    echo 'install: --no-document'; \\\n    echo 'update: --no-document'; \\\n  } >> /usr/local/etc/gemrc;\nRUN gem update --system && rm -rf /root/.gem;\nRUN gem install bundler:2.1.4\n\n# Install standard gems\nCOPY Gemfile* /app/\nRUN bundle config --global frozen 1 && \\\n    bundle install -j4 --retry 3\n\n# *NOW* we copy the codebase in\nCOPY . $APP_ROOT\n\n# Precompile Rails assets. We set a dummy database url/token key\nRUN RAILS_ENV=uat DATABASE_URL=postgresql://user:pass@127.0.0.1/dbname SECRET_KEY_BASE=pickasecuretoken bundle exec rake assets:precompile\n\nEXPOSE 3000\n\nCMD bundle exec puma -C config/puma.rb\n"
}