{
  "startTime": 1674221095721,
  "endTime": 1674221097091,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 74
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 100
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 4,
        "columnEnd": 95
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 70
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 70
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 70
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 36
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 94
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 60
      }
    }
  ],
  "repairedDockerfile": "######################################################################################\n#                                                                                    #\n# To build: docker build -t ubuntu:scribengin directory                              #\n# To run:   docker run -t -i ubuntu:scribengin  /bin/bash                            #\n#                                                                                    #\n######################################################################################\nFROM ubuntu:latest\n#FROM ubuntu:latest\nMAINTAINER Tuan Nguyen <tuan@demandcube.com>\n\n#Update and installl the dependencies\nRUN echo \"Update and install the requirement software\"\nRUN apt-get update\nRUN apt-get install --no-install-recommends -y wget openssh-server openssh-client rsync vim bc && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get install --no-install-recommends -y openjdk-7-jdk && rm -rf /var/lib/apt/lists/*;\nRUN echo 'JAVA_HOME=\"/usr/lib/jvm/java-7-openjdk-amd64\"' >> /etc/environment\n\n#Configure root Account\nRUN mkdir /var/run/sshd\nRUN echo 'root:root' | chpasswd\n\nRUN sed -i 's/PermitRootLogin without-password/PermitRootLogin yes/' /etc/ssh/sshd_config\n\n# SSH login fix. Otherwise user is kicked off after login\nRUN sed 's@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd\n\nENV NOTVISIBLE \"in users profile\"\nRUN echo \"export VISIBLE=now\" >> /etc/profile\n\n#ADD authorized_keys /opt/authorized_keys\nRUN mkdir -p /root/.ssh\nRUN chmod 700 /root/.ssh\nADD tmp/authorized_keys /root/.ssh/authorized_keys\nRUN chmod 644 /root/.ssh/authorized_keys\n\n#Configure neverwinterdp account\nRUN echo \"Create neverwinterdp user account and setup home directory\"\n\n#ENV HOME /home/neverwinterdp\n#RUN useradd -m -d /home/neverwinterdp -s /bin/bash -c \"neverwinterdp user\" -p $(openssl passwd -1 neverwinterdp)  neverwinterdp\n#RUN echo \"neverwinterdp ALL=(ALL) NOPASSWD: ALL\" >> /etc/sudoers\n\n#A bug with file creation permission, need to create a template ssh configuration and copy to the account in the post installation\n\n#EXPOSE Ports\nEXPOSE 22 2181 9092 50070 8088 9000\n\nCMD [\"/usr/sbin/sshd\", \"-D\"]\n\n#Download java opensource projects\n#RUN wget -q -O - http://mirrors.digipower.vn/apache/zookeeper/zookeeper-3.4.6/zookeeper-3.4.6.tar.gz | tar -xzf - -C /opt\nRUN wget -q -O - https://jenkinsdp.do.demandcube.com/zookeeper-3.4.6.tar.gz | tar -xzf - -C /opt\nRUN mv /opt/zookeeper-3.4.6 /opt/zookeeper\nRUN cp /opt/zookeeper/conf/zoo_sample.cfg /opt/zookeeper/conf/zoo.cfg\n\n#RUN wget -q http://apache.01link.hk/kafka/0.8.2.0/kafka_2.10-0.8.2.0.tgz -O /tmp/kafka_2.10-0.8.2.0.tgz\nRUN wget -q https://jenkinsdp.do.demandcube.com/kafka_2.10-0.8.2.0.tgz -O /tmp/kafka_2.10-0.8.2.0.tgz\nRUN tar xfz /tmp/kafka_2.10-0.8.2.0.tgz -C /opt && rm /tmp/kafka_2.10-0.8.2.0.tgz\nRUN mv /opt/kafka_2.10-0.8.2.0 /opt/kafka\n\n#RUN wget -q  https://archive.apache.org/dist/hadoop/core/hadoop-2.4.0/hadoop-2.4.0.tar.gz -O /tmp/hadoop-2.4.0.tar.gz\nRUN wget -q https://jenkinsdp.do.demandcube.com/hadoop-2.4.0.tar.gz -O /tmp/hadoop-2.4.0.tar.gz\nRUN tar xfz /tmp/hadoop-2.4.0.tar.gz -C /opt && rm /tmp/hadoop-2.4.0.tar.gz\nRUN mv /opt/hadoop-2.4.0 /opt/hadoop\n\n\n\n#Run Post installation\nADD bootstrap/post-install /tmp/post-install\nRUN chmod +x /tmp/post-install/post-install.sh\n\nRUN mkdir -p        /tmp/post-install/ssh-config\nADD tmp/id_rsa*     /tmp/post-install/ssh-config/\nRUN cat             /tmp/post-install/ssh-config/id_rsa.pub > /tmp/post-install/ssh-config/authorized_keys\nRUN chmod -R 700    /tmp/post-install/ssh-config && chmod 644 /tmp/post-install/ssh-config/authorized_keys\n\n#Move Scribengin release\nRUN mkdir -p  /opt/scribengin/\nADD tmp/release /tmp/post-install/release/\n\n\nRUN /tmp/post-install/post-install.sh\n\n#Set up ssh for neverwinterdp user\n#RUN su neverwinterdp -c \"sudo cat        /tmp/post-install/ssh-config/id_rsa.pub > /home/neverwinterdp/.ssh/authorized_keys\"\n#RUN su neverwinterdp -c \"chmod -R 700    /home/neverwinterdp/.ssh/ && chmod 644 /home/neverwinterdp/.ssh/authorized_keys\"\n\n\nRUN rm -rf          /tmp/*.tgz\nRUN rm -rf          /tmp/post-install\n"
}