{
  "startTime": 1674253991149,
  "endTime": 1674253991775,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 22,
        "columnEnd": 93
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 22,
        "columnEnd": 93
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# MIT License\n#\n# Copyright (c) 2021 Theodor Amariucai and EASE Lab\n#\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n# of this software and associated documentation files (the \"Software\"), to deal\n# in the Software without restriction, including without limitation the rights\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n# copies of the Software, and to permit persons to whom the Software is\n# furnished to do so, subject to the following conditions:\n#\n# The above copyright notice and this permission notice shall be included in all\n# copies or substantial portions of the Software.\n#\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n# SOFTWARE.\n\nFROM golang:buster as base\nENV CGO_ENABLED=0\nENV GOOS=linux\nENV GO111MODULE=on\n\n# Download protoc, protoc-gen-go, protoc-gen-go-grpc\nRUN apt-get update && apt-get install -y --no-install-recommends --assume-yes protobuf-compiler \\\n  && go get google.golang.org/grpc \\\n  && go get google.golang.org/grpc/cmd/protoc-gen-go-grpc@latest \\\n  && go get github.com/golang/protobuf/protoc-gen-go \\\n  && cp /go/bin/protoc-gen-go /usr/bin/ && rm -rf /var/lib/apt/lists/*;\n\nFROM base as build\n\nWORKDIR /app\n\nCOPY . /app/\n\nARG PROTOCOL_LOCATION=\"/app/setup/deployment/raw-code/proto\"\nARG GO_PROD_CONSUMER=\"/app/setup/deployment/raw-code/functions/producer-consumer\"\n\n# Build the gRPC protocols\nARG SERVER_API_OUT1=\"$GO_PROD_CONSUMER/vhive/proto_gen\"\nARG SERVER_API_OUT2=\"$GO_PROD_CONSUMER/aws/proto_gen\"\nARG CLIENT_API_OUT=\"benchmarking/networking/benchgrpc/proto_gen\"\nRUN mkdir -p $CLIENT_API_OUT && mkdir -p $SERVER_API_OUT1 && mkdir -p $SERVER_API_OUT2 \\\n   && protoc chainfunction.proto --proto_path=$PROTOCOL_LOCATION --go_out=$SERVER_API_OUT1 --go-grpc_out=$SERVER_API_OUT1 \\\n   && protoc chainfunction.proto --proto_path=$PROTOCOL_LOCATION --go_out=$SERVER_API_OUT2 --go-grpc_out=$SERVER_API_OUT2 \\\n   && protoc chainfunction.proto --proto_path=$PROTOCOL_LOCATION --go_out=$CLIENT_API_OUT --go-grpc_out=$CLIENT_API_OUT\n\n# Build binaries for vHive producer-consumer, AWS producer-consumer (ZIP deployment) and the client\nRUN cd \"$GO_PROD_CONSUMER/vhive\" \\\n   && go mod download \\\n   && go build -v -o handler main.go \\\n   && cd \"$GO_PROD_CONSUMER/aws\" \\\n   && go mod download \\\n   && go build -v -o handler main.go \\\n   && cd /app \\\n   && go mod download \\\n   && go build -v -a"
}