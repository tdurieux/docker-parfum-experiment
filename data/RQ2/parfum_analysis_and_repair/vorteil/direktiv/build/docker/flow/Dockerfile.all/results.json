{
  "startTime": 1674252796007,
  "endTime": 1674252796746,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 67,
        "columnEnd": 98
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 72
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 5,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 72
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 72
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 5,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 72
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:21.04 as libgit\n\nENV DEBIAN_FRONTEND=noninteractive\nRUN apt-get clean && apt-get update\n\nRUN apt-get install --no-install-recommends libmbedtls-dev git cmake build-essential pkg-config libssl-dev \\\n         python3 zlib1g-dev libmbedtls-dev libpcre3 libpcre3-dev wget -y && rm -rf /var/lib/apt/lists/*;\n\n# build libssh\nRUN wget https://www.libssh2.org/download/libssh2-1.10.0.tar.gz && tar -xvzf libssh2-1.10.0.tar.gz && rm libssh2-1.10.0.tar.gz\nRUN cd libssh2-1.10.0 && mkdir bin && cd bin && cmake .. -DENABLE_ZLIB_COMPRESSION=ON -DBUILD_SHARED_LIBS=ON && cmake --build . --target install\n\nRUN git clone -b v1.3.0 https://github.com/libgit2/libgit2.git\n\n# build libgit\nRUN mkdir libgit2/build && cd libgit2/build\nRUN cd libgit2/build && cmake .. -DUSE_SSH=ON\nRUN cd libgit2/build && cmake --build . --target install\n\nFROM libgit as golang\n\nARG RELEASE_VERSION\nENV RELEASE=$RELEASE_VERSION\n\nRUN wget https://go.dev/dl/go1.18.linux-amd64.tar.gz\nRUN tar -C /usr/local -xzf go1.18.linux-amd64.tar.gz && rm go1.18.linux-amd64.tar.gz\nENV PATH=$PATH:/usr/local/go/bin\n\nCOPY go.mod src/go.mod\nCOPY go.sum src/go.sum\nRUN cd src/ && go mod download\n\nENV LD_LIBRARY_PATH=/usr/local/lib/\nCOPY pkg src/pkg/\nCOPY cmd src/cmd/\nCOPY .git .git\n\nRUN --mount=type=cache,target=/root/.cache/go-build cd src && \\\n    export GIT_HASH=`git rev-parse --short HEAD` && \\\n    export FULL_VERSION=\"${RELEASE}${RELEASE:+-}${GIT_HASH}\"; echo \"${v%.*}\" && \\\n    go build -ldflags \"-X github.com/direktiv/direktiv/pkg/version.Version=$FULL_VERSION\" -o /flow cmd/flow/*.go;\n\nFROM ubuntu:21.04\n\nCOPY --from=libgit /usr/local/lib/libssh2.so.1.0.1 /lib/x86_64-linux-gnu/libssh2.so.1.0.1\nRUN ln -s /lib/x86_64-linux-gnu/libssh2.so.1.0.1 /lib/x86_64-linux-gnu/libssh2.so.1\nRUN ln -s /lib/x86_64-linux-gnu/libssh2.so.1 /lib/x86_64-linux-gnu/libssh2.so\n\nCOPY --from=libgit /usr/local/lib/libgit2.so.1.3.0 /lib/x86_64-linux-gnu/\nRUN ln -s /lib/x86_64-linux-gnu/libgit2.so.1.3.0 /lib/x86_64-linux-gnu/libgit2.so.1.3\nRUN ln -s /lib/x86_64-linux-gnu/libgit2.so.1.3 /lib/x86_64-linux-gnu/libgit2.so\n\nEXPOSE 6666\nEXPOSE 7777\n\nCOPY --from=golang /flow /bin/direktiv\n\nCMD [\"/bin/direktiv\"]"
}