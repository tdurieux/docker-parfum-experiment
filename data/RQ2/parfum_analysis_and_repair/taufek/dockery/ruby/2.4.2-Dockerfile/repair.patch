diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/taufek/dockery/ruby/2.4.2-Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/taufek/dockery/ruby/2.4.2-Dockerfile/repaired.Dockerfile
index f81ff4f..7c857a7 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/taufek/dockery/ruby/2.4.2-Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/taufek/dockery/ruby/2.4.2-Dockerfile/repaired.Dockerfile
@@ -8,64 +8,64 @@ ENV INSTALL_POSTGRES ${INSTALL_POSTGRES}
 
 RUN if [ ${INSTALL_POSTGRES} = true ]; then \
   apt-get update -qq --fix-missing \
-  && apt-get install -y postgresql postgresql-contrib libpq-dev \
-;fi
+  && apt-get install --no-install-recommends -y postgresql postgresql-contrib libpq-dev \
+; rm -rf /var/lib/apt/lists/*; fi
 
 ARG INSTALL_MYSQL=false
 ENV INSTALL_MYSQL ${INSTALL_MYSQL}
 
 RUN if [ ${INSTALL_MYSQL} = true ]; then \
   apt-get update -qq --fix-missing \
-  && apt-get install -y mysql-client \
-;fi
+  && apt-get install --no-install-recommends -y mysql-client \
+; rm -rf /var/lib/apt/lists/*; fi
 
 ARG INSTALL_NODE=false
 ENV INSTALL_NODE ${INSTALL_NODE}
 
 RUN if [ ${INSTALL_NODE} = true ]; then \
   apt-get update -qq --fix-missing \
-  && apt-get install -y curl \
-  && curl -sL https://deb.nodesource.com/setup_6.x -o nodesource_setup.sh \
+  && apt-get install --no-install-recommends -y curl \
+  && curl -f -sL https://deb.nodesource.com/setup_6.x -o nodesource_setup.sh \
   && bash ./nodesource_setup.sh \
   && rm nodesource_setup.sh \
-  && apt-get install -y nodejs build-essential \
-;fi
+  && apt-get install --no-install-recommends -y nodejs build-essential \
+; rm -rf /var/lib/apt/lists/*; fi
 
 ARG INSTALL_YARN=false
 ENV INSTALL_YARN ${INSTALL_YARN}
 
 RUN if [ ${INSTALL_YARN} = true ]; then \
-    curl -o- -L https://yarnpkg.com/install.sh | bash \
+    curl -f -o- -L https://yarnpkg.com/install.sh | bash \
     && echo "" >> ~/.bashrc \
     && echo 'export PATH="$HOME/.yarn/bin:$PATH"' >> ~/.bashrc \
-;fi
+; fi
 
 ARG INSTALL_QT_DEPS=false
 ENV INSTALL_QT_DEPS ${INSTALL_QT_DEPS}
 
 RUN if [ ${INSTALL_QT_DEPS} = true ]; then \
   apt-get update \
-  && apt-get -y install qt5-default libqt5webkit5-dev gstreamer1.0-plugins-base gstreamer1.0-tools gstreamer1.0-x \
-;fi
+  && apt-get -y --no-install-recommends install qt5-default libqt5webkit5-dev gstreamer1.0-plugins-base gstreamer1.0-tools gstreamer1.0-x \
+; rm -rf /var/lib/apt/lists/*; fi
 
 ARG INSTALL_XVFB=false
 ENV INSTALL_XVFB ${INSTALL_XVFB}
 
 RUN if [ ${INSTALL_XVFB} = true ]; then \
   apt-get update \
-  && apt-get -y install xvfb\
-;fi
+  && apt-get -y --no-install-recommends install xvfb \
+; rm -rf /var/lib/apt/lists/*; fi
 
 ENV DOCKERIZE_VERSION v0.6.0
 ARG INSTALL_DOCKERIZE=false
 ENV INSTALL_DOCKERIZE ${INSTALL_DOCKERIZE}
 
 RUN if [ ${INSTALL_DOCKERIZE} = true ]; then \
-  apt-get update && apt-get install -y wget \
+  apt-get update && apt-get install --no-install-recommends -y wget \
   && wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz \
     && tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz \
     && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz \
-;fi
+; rm -rf /var/lib/apt/lists/*; fi
 
 RUN mkdir /app