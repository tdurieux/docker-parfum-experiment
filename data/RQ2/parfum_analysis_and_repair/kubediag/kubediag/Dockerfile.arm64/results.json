{
  "startTime": 1674249440426,
  "endTime": 1674249441349,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 116
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 116
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 40
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Build the kubediag binary\nFROM golang:1.14 as builder\n\nWORKDIR /workspace\n# Copy the Go Modules manifests\nCOPY go.mod go.mod\nCOPY go.sum go.sum\n\n# Copy the go source\nCOPY main.go main.go\nCOPY api/ api/\nCOPY pkg/ pkg/\nCOPY vendor/ vendor/\n\n# Build\nRUN CGO_ENABLED=0 GOOS=linux GOARCH=arm64 GO111MODULE=on go build -a -mod vendor -o kubediag main.go\n\n# Use ubuntu as base image to package the kubediag binary with diagnosing tools\nFROM ubuntu:20.04\n\n# Configure apt data sources.\nRUN echo \"deb http://mirrors.aliyun.com/ubuntu-ports/ focal main restricted\" > /etc/apt/sources.list && \\\n    echo \"deb http://mirrors.aliyun.com/ubuntu-ports/ focal-updates main restricted\" >> /etc/apt/sources.list && \\\n    echo \"deb http://mirrors.aliyun.com/ubuntu-ports/ focal universe\" >> /etc/apt/sources.list && \\\n    echo \"deb http://mirrors.aliyun.com/ubuntu-ports/ focal-updates universe\" >> /etc/apt/sources.list && \\\n    echo \"deb http://mirrors.aliyun.com/ubuntu-ports/ focal multiverse\" >> /etc/apt/sources.list && \\\n    echo \"deb http://mirrors.aliyun.com/ubuntu-ports/ focal-updates multiverse\" >> /etc/apt/sources.list && \\\n    echo \"deb http://mirrors.aliyun.com/ubuntu-ports/ focal-backports main restricted universe multiverse\" >> /etc/apt/sources.list && \\\n    echo \"deb http://mirrors.aliyun.com/ubuntu-ports/ focal-security main restricted\" >> /etc/apt/sources.list && \\\n    echo \"deb http://mirrors.aliyun.com/ubuntu-ports/ focal-security universe\" >> /etc/apt/sources.list && \\\n    echo \"deb http://mirrors.aliyun.com/ubuntu-ports/ focal-security multiverse\" >> /etc/apt/sources.list\n\n# Install utility tools\nRUN apt-get update -y && \\\n    apt-get install --no-install-recommends -y coreutils dnsutils iputils-ping iproute2 telnet curl vim less wget graphviz unzip tcpdump gdb && \\\n    apt-get clean && rm -rf /var/lib/apt/lists/*;\n\n# Install Go\nRUN wget https://golang.org/dl/go1.14.9.linux-arm64.tar.gz && \\\n    tar -C /usr/local -xzf go1.14.9.linux-arm64.tar.gz && \\\n    rm go1.14.9.linux-arm64.tar.gz\n\n# Install Java\nRUN apt-get update -y && \\\n    apt-get install --no-install-recommends -y openjdk-11-jdk && \\\n    apt-get clean && rm -rf /var/lib/apt/lists/*;\n\n# Install Python3\nRUN apt-get update -y && \\\n    apt-get install --no-install-recommends -y python3 python3.8 && \\\n    apt-get clean && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /usr/bin/\n# Copy diagnosing tools\nCOPY tools/ctr .\nCOPY tools/docker .\n\nWORKDIR /\n# Copy kubediag binary\nCOPY --from=builder /workspace/kubediag .\n# Add eclipse memory analyzer tool\nADD tools/MemoryAnalyzer-1.10.0.20200225-linux.gtk.x86_64.tar .\n\nENV PATH=$PATH:/usr/local/go/bin\n\nUSER root:root\n\nENTRYPOINT [\"/kubediag\"]\n"
}