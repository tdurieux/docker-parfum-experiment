{
  "startTime": 1674255187929,
  "endTime": 1674255188921,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 34,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 27,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 17
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 14
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# PHP Docker image for Yii 2.0 Framework runtime\n# ==============================================\n\nARG PHP_BASE_IMAGE_VERSION\nFROM yiisoftware/yii2-php:${PHP_BASE_IMAGE_VERSION}-fpm\n\n# Install system packages for PHP extensions recommended for Yii 2.0 Framework\nENV DEBIAN_FRONTEND=noninteractive\nRUN apt-get update && \\\n    apt-get -y --no-install-recommends install \\\n        gnupg2 && \\\n    apt-key update && \\\n    apt-get update && \\\n    apt-get -y install \\\n            git \\\n            nano \\\n            npm \\\n            default-mysql-client \\\n            nginx-full \\\n            cron \\\n            supervisor \\\n            procps \\\n        --no-install-recommends && \\\n        apt-get clean && \\\n        rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\n# Install less-compiler\nRUN npm -g install \\\n        less \\\n        lesshint \\\n        uglify-js \\\n        uglifycss && npm cache clean --force;\n\n# Install Yii framework bash autocompletion\nRUN curl -f -L https://raw.githubusercontent.com/yiisoft/yii2/master/contrib/completion/bash/yii \\\n        -o /etc/bash_completion.d/yii\n\n# Add configuration files\nCOPY image-files/ /\n\n# Add GITHUB_API_TOKEN support for composer\nRUN chmod 700 \\\n        /usr/local/bin/docker-entrypoint.sh \\\n        /usr/local/bin/docker-run.sh \\\n        /usr/local/bin/composer\n\nWORKDIR /app\n\n# Startup script for FPM\nENTRYPOINT [\"/usr/local/bin/docker-entrypoint.sh\"]\n\n# forward request and error logs to docker log collector\nRUN ln -sf /dev/stdout /var/log/nginx/access.log \\\n && ln -sf /dev/stderr /var/log/nginx/error.log \\\n && ln -sf /usr/sbin/cron /usr/sbin/crond\n\nCMD [\"supervisord\", \"-c\", \"/etc/supervisor/supervisord.conf\"]\n\nEXPOSE 80 443\n"
}