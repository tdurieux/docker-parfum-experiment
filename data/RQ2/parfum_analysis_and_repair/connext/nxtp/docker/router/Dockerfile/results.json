{
  "startTime": 1674220394907,
  "endTime": 1674220395921,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 20,
        "columnEnd": 36
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 18,
        "columnEnd": 34
      }
    }
  ],
  "repairedDockerfile": "FROM node:16.3.0-alpine as node\n\n# ----------------------------------------\n# Builds Docker container for nxtp-router package.\n# @dev configuraion located ./config.json (relative to this file)\n\n\n# ----------------------------------------\n\nFROM node as build\nRUN apk update\nRUN apk add --no-cache git\n\nENV HOME=/tmp/build \\\n    PATH=/tmp/build/node_modules/.bin:./node_modules/.bin:${PATH}\n\nWORKDIR /tmp/build\n\nARG TEMP_DEPS_DIR\n\n# ----- Copy only the files that affect yarn install -----\n# Allows docker to use cache and skip install if dependencies are unchanged.\n# Assumes that ./packages/*/package.json files have been copied to TEMP_DEPS_DIR\n# with that same directory structure. build.sh does this.\nCOPY .yarn /tmp/build/.yarn/\nCOPY .yarnrc.yml /tmp/build/\nCOPY package.json /tmp/build/\nCOPY packages/agents/router/package.json /tmp/build/packages/agents/router/\nCOPY packages/adapters/cache/package.json /tmp/build/packages/adapters/cache/\nCOPY packages/adapters/subgraph/package.json /tmp/build/packages/adapters/subgraph/\nCOPY packages/adapters/web3signer/package.json /tmp/build/packages/adapters/web3signer/\nCOPY packages/adapters/txservice/package.json /tmp/build/packages/adapters/txservice/\nCOPY packages/deployments/contracts/package.json /tmp/build/packages/deployments/contracts/\nCOPY packages/utils/package.json /tmp/build/packages/utils/\nCOPY yarn.lock /tmp/build/\n\n# ----- Install dependencies -----\n# Install dependencies exactly as in the yarn.lock file - no updates.\nRUN yarn install && yarn cache clean;\n\n# ----- Copy source and all other files that affect lint, test, build -----\nCOPY config config/\nCOPY packages/agents/router /tmp/build/packages/agents/router\nCOPY packages/adapters/cache /tmp/build/packages/adapters/cache\nCOPY packages/adapters/subgraph /tmp/build/packages/adapters/subgraph\nCOPY packages/adapters/web3signer /tmp/build/packages/adapters/web3signer\nCOPY packages/adapters/txservice /tmp/build/packages/adapters/txservice\nCOPY packages/deployments/contracts /tmp/build/packages/deployments/contracts/\nCOPY packages/utils /tmp/build/packages/utils\nCOPY .eslintignore /tmp/build/\nCOPY .eslintrc.js /tmp/build/\n\n# ----- Lint, test and build -----\nRUN yarn build && yarn cache clean;\n\n# ----------------------------------------\n# Copy files to the deployment image.\n# ----------------------------------------\n\nFROM node as runtime\n\nENV NODE_ENV=production \\\n    PORT=8080\n\nARG COMMIT_HASH\nENV COMMIT_HASH ${COMMIT_HASH:-unknown}\n\n# ----- Copy files required at runtime by the app -----\nCOPY --from=build --chown=node:node /tmp/build /home/node\n\n# This user is created in the base image with uid and gid = 1000.\nUSER node\n\nWORKDIR /home/node/packages/agents/router\n\nEXPOSE 8080\n\nCMD [\"node\", \"--trace-warnings\", \"dist/index.js\"]"
}