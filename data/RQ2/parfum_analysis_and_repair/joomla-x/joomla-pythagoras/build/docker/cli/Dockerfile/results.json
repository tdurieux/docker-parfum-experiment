{
  "startTime": 1674219099729,
  "endTime": 1674219101077,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 7,
        "columnEnd": 71
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 7,
        "columnEnd": 86
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 7,
        "columnEnd": 86
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 7,
        "columnEnd": 31
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 7,
        "columnEnd": 18
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 7,
        "columnEnd": 65
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 9,
        "columnStart": 7,
        "columnEnd": 22
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 9,
        "columnStart": 7,
        "columnEnd": 22
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 7,
        "columnEnd": 65
      }
    }
  ],
  "repairedDockerfile": "FROM php:7-cli\n\nRUN apt-get update \\\n    && apt-get install --no-install-recommends -y \\\n        libpqxx-dev \\\n        ruby \\\n        ruby-dev \\\n        build-essential \\\n        sqlite3 \\\n        libsqlite3-dev && rm -rf /var/lib/apt/lists/*;\n\n# Install Composer\nRUN cd /usr/src \\\n    && curl -f -sS https://getcomposer.org/installer -o composer-setup.php \\\n    && php composer-setup.php --install-dir=/usr/local/bin --filename=composer\n\n# Install MailCatcher\nRUN gem install mailcatcher --no-ri --no-rdoc\n\n# Setup the Xdebug version to install\nENV XDEBUG_VERSION 2.5.1\nENV XDEBUG_SHA256 7fda9020fd5a2c549ae5a692fcabbb00f74e39dda81d53d25e622bdab4880ec2\n\n# Install Xdebug\nRUN set -x \\\n    && curl -f -SL \"https://www.xdebug.org/files/xdebug-$XDEBUG_VERSION.tgz\" -o xdebug.tgz \\\n    && echo $XDEBUG_SHA256 xdebug.tgz | sha256sum -c - \\\n    && mkdir -p /usr/src/xdebug \\\n    && tar -xf xdebug.tgz -C /usr/src/xdebug --strip-components=1 \\\n    && rm xdebug.* \\\n    && cd /usr/src/xdebug \\\n    && phpize \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n    && make -j\"$(nproc)\" \\\n    && make install \\\n    && make clean && rm -rf /usr/src/xdebug\n\nCOPY php.ini /usr/local/etc/php/\nCOPY conf.d/* /usr/local/etc/php/conf.d/\nCOPY prepend.php /usr/local/lib/php/\nCOPY append.php /usr/local/lib/php/\nCOPY phpunit_coverage.php /usr/local/lib/php/\nCOPY runtests.sh /\nRUN chmod +x /runtests.sh\n\nRUN docker-php-ext-install mysqli \\\n    && docker-php-ext-install pgsql \\\n    && docker-php-ext-install pdo_mysql pdo_pgsql\n\n# Cleanup package manager\nRUN apt-get remove --purge -y \\\n        build-essential \\\n        ruby-dev \\\n        libsqlite3-dev \\\n    && apt-get autoclean \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\nENTRYPOINT /runtests.sh\n"
}