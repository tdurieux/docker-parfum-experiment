{
  "startTime": 1674221051912,
  "endTime": 1674221053089,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 8
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 12,
        "columnEnd": 28
      }
    }
  ],
  "repairedDockerfile": "FROM node:{{node_version}}-alpine as base\n\nRUN apk --no-cache --virtual build-dependencies add bash\n\n{{#polywrap_linked_packages.length}}\nWORKDIR /linked-packages\n{{/polywrap_linked_packages.length}}\n\n{{#polywrap_linked_packages}}\nCOPY {{dir}} ./{{name}}\n{{/polywrap_linked_packages}}\n\nWORKDIR /project\n\n# Install deps in its own step, making rebuilds faster\n# when just the Polywrap schema & implementation files change\nCOPY package.json .\n{{#polywrap_linked_packages}}\nRUN npx json -I -f package.json -e \"this.dependencies['{{name}}']='../linked-packages/{{name}}'\"\n{{/polywrap_linked_packages}}\nRUN yarn && yarn cache clean;\n\n# Copy all manifest files\n{{#polywrap_manifests}}\nCOPY {{.}} .\n{{/polywrap_manifests}}\n\n# Copy all source files\n{{#include}}\nCOPY {{.}} {{.}}\n{{/include}}\n{{#polywrap_module}}\nCOPY {{dir}} {{dir}}\n\n# Build the module at {{dir}}\nRUN ./node_modules/.bin/asc {{dir}}/wrap/entry.ts \\\n    --path ./node_modules \\\n    --outFile ./build/wrap.wasm \\\n    --use abort={{dir}}/wrap/entry/wrapAbort \\\n    --optimize --importMemory \\\n    --runtime stub \\\n    --runPasses asyncify\n{{/polywrap_module}}\n"
}