{
  "startTime": 1674220997664,
  "endTime": 1674220998811,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 8
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 12,
        "columnEnd": 28
      }
    }
  ],
  "repairedDockerfile": "FROM node:14.16.0-alpine as base\n\nRUN apk --no-cache --virtual build-dependencies add \\\n    bash \\\n    git \\\n    openssh \\\n    make \\\n    g++\n\nWORKDIR /linked-packages\n\nCOPY .polywrap/wasm/build/linked-packages/@polywrap/wasm-as ./@polywrap/wasm-as\n\nWORKDIR /project\n\n# Install deps in its own step, making rebuilds faster\n# when just the Polywrap schema & implementation files change\nCOPY package.json .\nRUN npx json -I -f package.json -e \"this.dependencies['@polywrap/wasm-as']='../linked-packages/@polywrap/wasm-as'\"\nRUN yarn && yarn cache clean;\n\n# Copy all manifest files\nCOPY polywrap.yaml .\nCOPY polywrap.build.yaml .\n\n# Copy all source files\nCOPY ./src ./src\nCOPY ./package.json ./package.json\n\n# Build the module at src\nRUN ./node_modules/.bin/asc src/wrap/entry.ts \\\n    --path ./node_modules \\\n    --outFile ./build/wrap.wasm \\\n    --use abort=src/wrap/entry/wrapAbort \\\n    --optimize --debug --importMemory \\\n    --runtime stub \\\n    --runPasses asyncify\n"
}