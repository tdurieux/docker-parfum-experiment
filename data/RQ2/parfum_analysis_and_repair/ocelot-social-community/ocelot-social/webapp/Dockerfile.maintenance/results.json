{
  "startTime": 1674216438165,
  "endTime": 1674216439025,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 71
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 83,
        "lineEnd": 83,
        "columnStart": 4,
        "columnEnd": 21
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 75,
        "columnEnd": 91
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 83,
        "lineEnd": 83,
        "columnStart": 25,
        "columnEnd": 41
      }
    }
  ],
  "repairedDockerfile": "##################################################################################\n# BASE ###########################################################################\n##################################################################################\nFROM node:12.19.0-alpine3.10 as base\n\n# ENVs\n## DOCKER_WORKDIR would be a classical ARG, but that is not multi layer persistent - shame\nENV DOCKER_WORKDIR=\"/app\"\n## We Cannot do `$(date -u +'%Y-%m-%dT%H:%M:%SZ')` here so we use unix timestamp=0\nARG BBUILD_DATE=\"1970-01-01T00:00:00.00Z\"\nENV BUILD_DATE=$BBUILD_DATE\n## We cannot do $(yarn run version)-${BUILD_NUMBER} here so we default to 0.0.0-0\nARG BBUILD_VERSION=\"0.0.0-0\"\nENV BUILD_VERSION=$BBUILD_VERSION\n## We cannot do `$(git rev-parse --short HEAD)` here so we default to 0000000\nARG BBUILD_COMMIT=\"0000000\"\nENV BUILD_COMMIT=$BBUILD_COMMIT\n## SET NODE_ENV\nENV NODE_ENV=\"production\"\n## App relevant Envs\nENV PORT=\"3000\"\n\n# Labels\nLABEL org.label-schema.build-date=\"${BUILD_DATE}\"\nLABEL org.label-schema.name=\"ocelot.social:backend\"\nLABEL org.label-schema.description=\"Maintenance page of the Social Network Software ocelot.social\"\nLABEL org.label-schema.usage=\"https://github.com/Ocelot-Social-Community/Ocelot-Social/blob/master/README.md\"\nLABEL org.label-schema.url=\"https://ocelot.social\"\nLABEL org.label-schema.vcs-url=\"https://github.com/Ocelot-Social-Community/Ocelot-Social/tree/master/backend\"\nLABEL org.label-schema.vcs-ref=\"${BUILD_COMMIT}\"\nLABEL org.label-schema.vendor=\"ocelot.social Community\"\nLABEL org.label-schema.version=\"${BUILD_VERSION}\"\nLABEL org.label-schema.schema-version=\"1.0\"\nLABEL maintainer=\"devops@ocelot.social\"\n\n# Install Additional Software\n## install: git\nRUN apk --no-cache add git\n\n# Settings\n## Expose Container Port\nEXPOSE ${PORT}\n\n## Workdir\nRUN mkdir -p ${DOCKER_WORKDIR}\nWORKDIR ${DOCKER_WORKDIR}\n\nCMD [\"yarn\", \"run\", \"start\"]\n\n##################################################################################\n# CODE (Does contain all code files and is pushed to DockerHub for rebranding) ###\n##################################################################################\nFROM base as code\n\nCOPY package.json yarn.lock ./\n# yarn install\nRUN yarn install --production=false --frozen-lockfile --non-interactive && yarn cache clean;\n\nCOPY assets assets\n# COPY components/_new/generic/ components/_new/generic\nCOPY components/LocaleSwitch/ components/LocaleSwitch\nCOPY components/Dropdown.vue components/Dropdown.vue\n# COPY components/Logo/ components/Logo\nCOPY layouts/blank.vue layouts/blank.vue\nCOPY locales locales\nCOPY mixins mixins\nCOPY plugins/i18n.js plugins/v-tooltip.js plugins/styleguide.js plugins/\nCOPY static static\nCOPY constants constants\nCOPY nuxt.config.js nuxt.config.js\nCOPY config/ config/\n\n# this is needed in rebranding\nCOPY maintenance/nginx maintenance/nginx\n# this will also ovewrite the existing package.json\nCOPY maintenance/source ./\n\n##################################################################################\n# BUILD ### TODO # TODO # TODO # TODO # TODO # TODO # TODO # TODO # TODO # TODO ##\n##################################################################################\nFROM code as build\n\n# yarn generate\nRUN yarn run generate && yarn cache clean;\n\n##################################################################################\n# PRODUCTION ### TODO # TODO # TODO # TODO # TODO # TODO # TODO # TODO # TODO ####\n##################################################################################\nFROM nginx:alpine as production\n\nCOPY --from=build ./app/dist/ /usr/share/nginx/html/\nRUN rm /etc/nginx/conf.d/default.conf\nCOPY maintenance/nginx/custom.conf /etc/nginx/conf.d/\n"
}