{
  "startTime": 1674251873008,
  "endTime": 1674251874449,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 5,
        "columnEnd": 52
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 5,
        "columnEnd": 74
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:stretch-slim\n\nARG ADD_BASE_DIR=examples/mpi\nARG BUILD_PACKAGES=' wget git make gcc g++ iproute2 cmake  build-essential gfortran curl  '\n\nENV DEBIAN_FRONTEND=noninteractive\n## Set to either lambda or batch\nENV EXEC_TYPE=lambda\n\nENV APP_PARAMS=\"\"\nENV GIT_REPO=https://github.com/mpitutorial/mpitutorial\nENV GIT_REPO_REL_PATH_SRC=mpitutorial/tutorials/mpi-hello-world/code\nENV GIT_REPO_REL_PATH_EXEC=mpitutorial/tutorials/mpi-hello-world/code/mpi_hello_world\nENV APP_BIN=/opt/$GIT_REPO_REL_PATH_EXEC\nENV SSH_PRIV_FILE_KEY=ssh_host_rsa_key\nENV SSH_PUB_FILE_KEY=ssh_host_rsa_key.pub\n\nENV LANG en_US.UTF-8\n\nADD ${ADD_BASE_DIR}/run.sh  /opt/\n\nRUN apt-get update \\\n  && apt-get install --no-install-recommends -q -o=Dpkg::Use-Pty=0 -y $BUILD_PACKAGES perl locales \\\n  && locale-gen en_US.UTF-8 \\\n  && sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen \\\n  && dpkg-reconfigure --frontend=noninteractive locales \\\n  && update-locale LANG=en_US.UTF-8 \\\n  && wget -q --no-check-certificate -qO- https://download.open-mpi.org/release/open-mpi/v1.4/openmpi-1.4.3.tar.bz2 | tar xvfj - -C /tmp/ \\\n  && cd /tmp/openmpi-1.4.3/ \\\n  && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --disable-pty-support --disable-doc \\\n  && make -j`nproc` \\\n  && make install \\\n  && ldconfig \\\n  && cd /opt/ \\\n  && git clone $GIT_REPO \\\n  && cd /opt/$GIT_REPO_REL_PATH_SRC \\\n  && make \\\n  && apt-get remove --purge -y $BUILD_PACKAGES gnupg* gnupg-agent* \\\n  && apt-get autoremove --purge -y \\\n  && rm -rf /tmp/* /var/lib/apt/lists/* \\\n  && ulimit -n 1024 \\\n  && chmod 755 /opt/$GIT_REPO_REL_PATH_EXEC \\\n  && chmod 755 /opt/run.sh \\\n  && echo $(date) > /build_date \\\n  && echo \"Build date: $(cat  /build_date)\"\n\n\nCMD /opt/run.sh\n"
}