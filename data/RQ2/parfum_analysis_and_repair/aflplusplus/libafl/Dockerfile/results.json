{
  "startTime": 1674246316154,
  "endTime": 1674246317663,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 18,
        "columnEnd": 115
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 18,
        "columnEnd": 115
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM rust:bullseye AS libafl\nLABEL \"maintainer\"=\"afl++ team <afl@aflplus.plus>\"\nLABEL \"about\"=\"LibAFL Docker image\"\n\n# install sccache to cache subsequent builds of dependencies\nRUN cargo install sccache\n\nENV HOME=/root\nENV SCCACHE_CACHE_SIZE=\"1G\"\nENV SCCACHE_DIR=$HOME/.cache/sccache\nENV RUSTC_WRAPPER=\"/usr/local/cargo/bin/sccache\"\nENV IS_DOCKER=\"1\"\nRUN sh -c 'echo set encoding=utf-8 > /root/.vimrc' \\\n    echo \"export PS1='\"'[LibAFL \\h] \\w$(__git_ps1) \\$ '\"'\" >> ~/.bashrc && \\\n    mkdir ~/.cargo && \\\n    echo \"[build]\\nrustc-wrapper = \\\"${RUSTC_WRAPPER}\\\"\" >> ~/.cargo/config\n\nRUN rustup component add rustfmt clippy\n\n# Install clang 11, common build tools\nRUN apt update && apt install --no-install-recommends -y build-essential gdb git wget clang clang-tools libc++-11-dev libc++abi-11-dev llvm && rm -rf /var/lib/apt/lists/*;\n\n# Copy a dummy.rs and Cargo.toml first, so that dependencies are cached\nWORKDIR /libafl\nCOPY Cargo.toml README.md ./\n\nCOPY libafl_derive/Cargo.toml libafl_derive/Cargo.toml\nCOPY scripts/dummy.rs libafl_derive/src/lib.rs\n\nCOPY libafl/Cargo.toml libafl/build.rs libafl/\nCOPY libafl/examples libafl/examples\nCOPY scripts/dummy.rs libafl/src/lib.rs\n\nCOPY libafl_frida/Cargo.toml libafl_frida/build.rs libafl_frida/\nCOPY scripts/dummy.rs libafl_frida/src/lib.rs\nCOPY libafl_frida/src/gettls.c libafl_frida/src/gettls.c\n\nCOPY libafl_qemu/Cargo.toml libafl_qemu/build.rs libafl_qemu/\nCOPY scripts/dummy.rs libafl_qemu/src/lib.rs\n\nCOPY libafl_sugar/Cargo.toml libafl_sugar/\nCOPY scripts/dummy.rs libafl_sugar/src/lib.rs\n\nCOPY libafl_cc/Cargo.toml libafl_cc/Cargo.toml\nCOPY libafl_cc/build.rs libafl_cc/build.rs\nCOPY libafl_cc/src libafl_cc/src\nCOPY scripts/dummy.rs libafl_cc/src/lib.rs\n\nCOPY libafl_targets/Cargo.toml libafl_targets/build.rs libafl_targets/\nCOPY libafl_targets/src libafl_targets/src\nCOPY scripts/dummy.rs libafl_targets/src/lib.rs\n\nCOPY libafl_concolic/test/dump_constraints/Cargo.toml libafl_concolic/test/dump_constraints/\nCOPY scripts/dummy.rs libafl_concolic/test/dump_constraints/src/lib.rs\n\nCOPY libafl_concolic/test/runtime_test/Cargo.toml libafl_concolic/test/runtime_test/\nCOPY scripts/dummy.rs libafl_concolic/test/runtime_test/src/lib.rs\n\nCOPY libafl_concolic/symcc_runtime/Cargo.toml libafl_concolic/symcc_runtime/build.rs libafl_concolic/symcc_runtime/\nCOPY scripts/dummy.rs libafl_concolic/symcc_runtime/src/lib.rs\n\nCOPY libafl_concolic/symcc_libafl/Cargo.toml libafl_concolic/symcc_libafl/\nCOPY scripts/dummy.rs libafl_concolic/symcc_libafl/src/lib.rs\n\nCOPY utils utils\n\nRUN cargo build && cargo build --release\n\nCOPY scripts scripts\nCOPY docs docs\n\n# Pre-build dependencies for a few common fuzzers\n\n# Dep chain:\n# libafl_cc (independent)\n# libafl_derive -> libafl\n# libafl -> libafl_targets\n# libafl_targets -> libafl_frida\n\n# Build once without source\nCOPY libafl_cc/src libafl_cc/src\nRUN touch libafl_cc/src/lib.rs\nCOPY libafl_derive/src libafl_derive/src\nRUN touch libafl_derive/src/lib.rs\nCOPY libafl/src libafl/src\nRUN touch libafl/src/lib.rs\nCOPY libafl_targets/src libafl_targets/src\nRUN touch libafl_targets/src/lib.rs\nCOPY libafl_frida/src libafl_frida/src\nRUN touch libafl_qemu/src/lib.rs\nCOPY libafl_qemu/src libafl_qemu/src\nRUN touch libafl_frida/src/lib.rs\nCOPY libafl_concolic/symcc_libafl libafl_concolic/symcc_libafl\nCOPY libafl_concolic/symcc_runtime libafl_concolic/symcc_runtime\nCOPY libafl_concolic/test libafl_concolic/test\nRUN cargo build && cargo build --release\n\n# Copy fuzzers over\nCOPY fuzzers fuzzers\n\n# RUN ./scripts/test_all_fuzzers.sh --no-fmt\n\nENTRYPOINT [ \"/bin/bash\" ]\n"
}