{
  "startTime": 1674219288094,
  "endTime": 1674219289893,
  "originalSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 50,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 39,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 79
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 50,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 32
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 50,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 32
      }
    }
  ],
  "repairedDockerfile": "#\n# This Dockerfile for AFLplusplus uses Ubuntu 22.04 jammy and\n# installs LLVM 14 for afl-clang-lto support :-)\n#\n\nFROM ubuntu:22.04 AS aflplusplus\nLABEL \"maintainer\"=\"afl++ team <afl@aflplus.plus>\"\nLABEL \"about\"=\"AFLplusplus docker image\"\n\nARG DEBIAN_FRONTEND=noninteractive\n\nenv NO_ARCH_OPT 1\n\nRUN apt-get update && \\\n    apt-get -y install --no-install-suggests --no-install-recommends \\\n    automake \\\n    cmake \\\n    meson \\\n    ninja-build \\\n    bison flex \\\n    build-essential \\\n    git \\\n    python3 python3-dev python3-setuptools python-is-python3 \\\n    libtool libtool-bin \\\n    libglib2.0-dev \\\n    wget vim jupp nano bash-completion less \\\n    apt-utils apt-transport-https ca-certificates gnupg dialog \\\n    libpixman-1-dev \\\n    gnuplot-nox \\\n    && rm -rf /var/lib/apt/lists/*\n\n# TODO: reactivate in timely manner\n#RUN echo \"deb http://apt.llvm.org/jammy/ llvm-toolchain-jammy-15 main\" >> /etc/apt/sources.list && \\\n#    wget -qO - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add -\n\nRUN echo \"deb http://ppa.launchpad.net/ubuntu-toolchain-r/test/ubuntu jammy main\" >> /etc/apt/sources.list && \\\n    apt-key adv --recv-keys --keyserver keyserver.ubuntu.com 1E9377A2BA9EF27F\n\nRUN apt-get update && apt-get full-upgrade -y && \\\n    apt-get -y install --no-install-suggests --no-install-recommends \\\n    gcc-12 g++-12 gcc-12-plugin-dev gdb lcov \\\n    clang-14 clang-tools-14 libc++1-14 libc++-14-dev \\\n    libc++abi1-14 libc++abi-14-dev libclang1-14 libclang-14-dev \\\n    libclang-common-14-dev libclang-cpp14 libclang-cpp14-dev liblld-14 \\\n    liblld-14-dev liblldb-14 liblldb-14-dev libllvm14 libomp-14-dev \\\n    libomp5-14 lld-14 lldb-14 llvm-14 llvm-14-dev llvm-14-runtime llvm-14-tools && rm -rf /var/lib/apt/lists/*;\n\n# arm64 doesn't have gcc-multilib, and it's only used for -m32 support on x86\nARG TARGETPLATFORM\nRUN [ \"$TARGETPLATFORM\" = \"linux/amd64\" ] && \\\n    apt-get -y install --no-install-suggests --no-install-recommends \\\n    gcc-10-multilib gcc-multilib || true && rm -rf /var/lib/apt/lists/*;\n\nRUN rm -rf /var/lib/apt/lists/*\n\nRUN update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-12 0\nRUN update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-12 0\n\nENV LLVM_CONFIG=llvm-config-14\nENV AFL_SKIP_CPUFREQ=1\nENV AFL_TRY_AFFINITY=1\nENV AFL_I_DONT_CARE_ABOUT_MISSING_CRASHES=1\n\nRUN git clone --depth=1 https://github.com/vanhauser-thc/afl-cov /afl-cov\nRUN cd /afl-cov && make install && cd ..\n\nCOPY . /AFLplusplus\nWORKDIR /AFLplusplus\n\nRUN export CC=gcc-12 && export CXX=g++-12 && make clean && \\\n    make distrib && make install && make clean\n\nRUN sh -c 'echo set encoding=utf-8 > /root/.vimrc'\nRUN echo '. /etc/bash_completion' >> ~/.bashrc\nRUN echo 'alias joe=\"joe --wordwrap --joe_state -nobackup\"' >> ~/.bashrc\nRUN echo \"export PS1='\"'[afl++ \\h] \\w$(__git_ps1) \\$ '\"'\" >> ~/.bashrc\nENV IS_DOCKER=\"1\"\n\n# Disabled as there are now better alternatives\n#COPY --from=aflplusplus/afl-dyninst /usr/local/lib/libdyninstAPI_RT.so /usr/local/lib/libdyninstAPI_RT.so\n#COPY --from=aflplusplus/afl-dyninst /afl-dyninst/libAflDyninst.so /usr/local/lib/libAflDyninst.so\n"
}