{
  "startTime": 1674254424692,
  "endTime": 1674254425704,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 12,
        "columnStart": 1,
        "columnEnd": 6
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG PHP_VERSION\nFROM wordpress:php${PHP_VERSION}-apache\n\nARG XDEBUG_VERSION=2.9.6\n\nRUN apt-get update; \\\n\tapt-get install -y --no-install-recommends \\\n\t# WP-CLI dependencies.\n\tbash less default-mysql-client git \\\n\t# MailHog dependencies.\n\tmsmtp \\\n\t# Dockerize dependencies.\n\twget; rm -rf /var/lib/apt/lists/*;\n\n# Setup xdebug. The latest version supported by PHP 5.6 is 2.5.5.\nRUN\tpecl install \"xdebug-${XDEBUG_VERSION}\"; \\\n\tdocker-php-ext-enable xdebug; \\\n\techo \"xdebug.default_enable = 1\" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini; \\\n\techo \"xdebug.remote_autostart = 0\" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini; \\\n\techo \"xdebug.remote_connect_back = 0\" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini; \\\n\techo \"xdebug.remote_enable = 1\" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini; \\\n\techo \"xdebug.remote_port = 9000\" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini; \\\n\techo \"xdebug.remote_log = /var/www/html/xdebug.log\" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini;\n\n# Install PDO MySQL driver.\nRUN docker-php-ext-install pdo_mysql\n\n# Install composer\nENV COMPOSER_ALLOW_SUPERUSER=1\n\nRUN curl -f -sS https://getcomposer.org/installer | php -- \\\n    --filename=composer \\\n    --install-dir=/usr/local/bin\n\n# Add composer global binaries to PATH\nENV PATH \"$PATH:~/.composer/vendor/bin\"\n\n# Install wp-browser globally\nRUN composer global require --optimize-autoloader \\\n\twp-cli/wp-cli-bundle:* \\\n    lucatume/wp-browser \\\n    codeception/module-asserts:* \\\n    codeception/module-cli:*  \\\n    codeception/module-db:*  \\\n    codeception/module-filesystem:*  \\\n    codeception/module-phpbrowser:*  \\\n    codeception/module-rest:*  \\\n    codeception/module-webdriver:*  \\\n    codeception/util-universalframework:*  \\\n    league/factory-muffin \\\n    league/factory-muffin-faker \\\n\tstripe/stripe-php \\\n\twp-graphql/wp-graphql-testcase\n\n# Remove exec statement from base entrypoint script.\nRUN sed -i '$d' /usr/local/bin/docker-entrypoint.sh\n\nCOPY local/php.ini /usr/local/etc/php/php.ini\nRUN echo 'ServerName localhost' >> /etc/apache2/apache2.conf\nRUN service apache2 restart\n\n# Set project environmental variables\nENV WP_ROOT_FOLDER=\"/var/www/html\"\nENV WORDPRESS_DB_HOST=${DB_HOST}\nENV WORDPRESS_DB_PORT=${DB_PORT}\nENV WORDPRESS_DB_USER=${DB_USER}\nENV WORDPRESS_DB_PASSWORD=${DB_PASSWORD}\nENV WORDPRESS_DB_NAME=${DB_NAME}\nENV PLUGINS_DIR=\"${WP_ROOT_FOLDER}/wp-content/plugins\"\nENV PROJECT_DIR=\"${PLUGINS_DIR}/wp-graphql-woocommerce\"\n\n# Set up Apache\nRUN echo 'ServerName localhost' >> /etc/apache2/apache2.conf\nRUN a2enmod rewrite\n\n\nWORKDIR /var/www/html\n# Set codecept wrapper\nCOPY bin/codecept /usr/local/bin/codecept\nRUN chmod 755 /usr/local/bin/codecept\n\n# Set stall script.\nADD https://raw.githubusercontent.com/vishnubob/wait-for-it/master/wait-for-it.sh /usr/local/bin/wait-for-it\nRUN chmod 755 /usr/local/bin/wait-for-it\n\n# Set up entrypoint\nCOPY bin/entrypoint.sh /usr/local/bin/app-entrypoint.sh\nRUN  chmod 755 /usr/local/bin/app-entrypoint.sh\nENTRYPOINT [\"app-entrypoint.sh\"]\nCMD [\"apache2-foreground\"]\n"
}