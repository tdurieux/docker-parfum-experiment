{
  "startTime": 1674221010297,
  "endTime": 1674221011931,
  "originalSmells": [
    {
      "rule": "gemUpdateSystemRmRootGem",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "gemUpdateNoDocument",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 32
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 56
      }
    }
  ],
  "repairedDockerfile": "##\n# A container for running the tryouts\n#\n#  Usage:\n#\n#   $ bin/tryouts\n#\n#     OR\n#\n#   $ export NAME=tryouts RUN_HOME=/run/host-services\n#   $ docker build -t $NAME .\n#   $ docker run -d --name $NAME -it --volume ${PWD}:/code --rm -v $RUN_HOME/ssh-auth.sock:$RUN_HOME/ssh-auth.sock -e SSH_AUTH_SOCK=\"$RUN_HOME/ssh-auth.sock\" $NAME\n#   $ dssh $NAME\n#   $ docker stop $NAME\n#\n\n#\nARG VERSION=2.7.2\n\n# FROM ruby:2.4.2-slim\nFROM ruby:$VERSION\n\n# The home directory for the application in the container\nARG CODE_ROOT=/code\nARG OWNER=coach\nARG SHELL=/bin/bash\nARG HOME=/home/$OWNER\n\n# Change to 1 to exepct a Gemfile.lock\nARG BUNDLER_FROZEN=0\n\nARG PACKAGES=\"build-essential ruby-dev openssh-client screen git\"\n\n# Create the most dedicated user\nRUN adduser --disabled-password --home $HOME --shell $SHELL $OWNER\n\n# Get the latest package list (but skip upgrading for speed)\nRUN set -eux && apt-get update -y\n\n# Install the system dependencies\nRUN apt-get install --no-install-recommends -y $PACKAGES && rm -rf /var/lib/apt/lists/*;\n\n# This path is mounted in bin/tryouts\nWORKDIR $HOME\n\n# RUN gem install bundler\nRUN gem install bundler -v '1.17.3'\n\n# For <= 2.2\nRUN mkdir -p /usr/local/etc \\\n  && { \\\n    echo 'install: --no-document'; \\\n    echo 'update: --no-document'; \\\n  } >> /usr/local/etc/gemrc;\nRUN gem update --system 2 && rm -rf /root/.gem;\n\nENV BUNDLE_SILENCE_ROOT_WARNING=1\nRUN mkdir -p /usr/local/bundle && chown -R $OWNER /usr/local/bundle\nRUN mkdir -p .bundle .gem && chown -R $OWNER .bundle $HOME/.gem\nRUN bundle config --global frozen $BUNDLER_FROZEN\n\n##\n# Gear down into regular user world\n#\n# This change effects RUN, CMD, ENTRYPOINT\n# but not COPY, ADD which take --chown argument instead\nUSER $OWNER\n\n##\n# Install rbenv with build capability\n#\nRUN git clone git://github.com/sstephenson/rbenv.git .rbenv\nRUN git clone git://github.com/sstephenson/ruby-build.git .rbenv/plugins/ruby-build\n\nENV PATH=$HOME/.rbenv/shims:$HOME/.rbenv/bin:$HOME/.rbenv/plugins/ruby-build/bin:$PATH\n# ARG PATH=$PATH\n\nRUN echo \"$VERSION\" >> .ruby-version\n\nRUN rbenv install --version $VERSION \\\n  && rbenv rehash \\\n  && rbenv shims\n\n#\n#RUN $SHELL -c \"if [ '${VERSION}' == *'1.9'* ]; then echo 'RUBY1'; else echo 'RUBY2'; fi\"\n\n# This path is mounted in bin/tryouts\nWORKDIR $CODE_ROOT\n\n# Get. Ready. to Buuuuundllllle\nCOPY ./Gemfile $CODE_ROOT/\n\n## Ruby 2.4+\n# RUN bundle install -j4 --retry 3\n\n# Ruby 1.9.3\nRUN bundle install\n\nENV SHELL=$SHELL\nCMD $SHELL\n"
}