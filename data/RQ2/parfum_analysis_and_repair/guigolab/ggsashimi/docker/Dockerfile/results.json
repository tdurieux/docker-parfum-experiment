{
  "startTime": 1674253614875,
  "endTime": 1674253615788,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 7,
        "columnEnd": 89
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 13,
        "columnStart": 8,
        "columnEnd": 26
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 42,
        "lineEnd": 48,
        "columnStart": 7,
        "columnEnd": 25
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG UBUNTU_VERSION=20.04\nFROM ubuntu:${UBUNTU_VERSION} as builder\n\n# install needed tools\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n         ca-certificates \\\n         curl \\\n         gdebi-core \\\n         libcairo2-dev \\\n         libfontconfig1-dev \\\n         lsb-release \\\n         python3-pip \\\n         python-is-python3 && rm -rf /var/lib/apt/lists/*;\n\n# install R\nARG R_VER=3.6.3\nRUN export UBUNTU_VER=$(lsb_release -rs | tr -d '.') \\\n    && curl -f -O https://cdn.rstudio.com/r/ubuntu-${UBUNTU_VER}/pkgs/r-${R_VER}_1_amd64.deb \\\n    && DEBIAN_FRONTEND=noninteractve gdebi --non-interactive r-${R_VER}_1_amd64.deb\n\nENV PATH=/opt/R/${R_VER}/bin:$PATH\n\nRUN echo 'options(repos = \"https://cloud.r-project.org/\")' > ~/.Rprofile\n\n## Install R packages\nARG GGPLOT_VER=3.3.3\nRUN R -e 'install.packages(\"remotes\");' && \\\n    R -e 'remotes::install_version(\"ggplot2\", version=\"'${GGPLOT_VER}'\")' && \\\n    R -e 'remotes::install_cran(c(\"gridExtra\", \"data.table\", \"svglite\"))'\n\n# Install pysam\nRUN pip3 install --no-cache-dir pysam\n\nFROM ubuntu:${UBUNTU_VERSION}\n\nLABEL maintainer \"Emilio Palumbo <emilio.palumbo@crg.eu>\" \\\n      version \"1.0\" \\\n      description \"Docker image for ggsashimi\"\n\n# install needed tools\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n        libblas3 \\\n        libgomp1 \\\n        libicu66 \\\n        liblapack3 \\\n        locales \\\n        python-is-python3 && rm -rf /var/lib/apt/lists/*;\n\n# set locale\nRUN echo \"en_US.UTF-8 UTF-8\" >> /etc/locale.gen \\\n    && locale-gen en_US.utf8 \\\n    && /usr/sbin/update-locale LANG=en_US.UTF-8 LC_ALL=en_US.UTF-8\n\n# set environment variables\nARG R_VER=3.6.3\nENV LANG=en_US.UTF-8 \\\n    LC_ALL=en_US.UTF-8 \\\n    PATH=/opt/R/${R_VER}/bin:$PATH\n\n# Copy installed libraries from builder\nCOPY --from=builder /opt/R /opt/R\nCOPY --from=builder /usr/local/lib/python3.8/dist-packages /usr/local/lib/python3.8/dist-packages\n\n# Copy ggsashimi in the docker image\nADD ggsashimi.py /\n\n# Run the container as an executable\nENTRYPOINT [\"/ggsashimi.py\"]\n\n"
}