{
  "startTime": 1674216960696,
  "endTime": 1674216962953,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 22,
        "columnStart": 26,
        "columnEnd": 6
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 26,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 13
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 26,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 13
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 22,
        "columnStart": 26,
        "columnEnd": 6
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 26,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 13
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 26,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 13
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:16.04\nMAINTAINER David Antliff <david.antliff@imgtec.com>\n\nENV DEBIAN_FRONTEND noninteractive\n\n# install package dependencies\nRUN apt-get update -yq && apt-get install --no-install-recommends -yq \\\n\tapt-utils \\\n\tgit \\\n\tcurl \\\n\tmake \\\n\tbuild-essential \\\n\tlibssl-dev \\\n\tzlib1g-dev \\\n\tlibbz2-dev \\\n\tlibreadline-dev \\\n\tlibxml2-dev \\\n\tlibxslt-dev \\\n\tdoxygen \\\n\tgraphviz \\\n\tgnutls-dev \\\n\tgawk \\\n\tcmake && rm -rf /var/lib/apt/lists/*;\n# apt-get clean is automatic for Ubuntu images\n\n# some handy utilities for development purposes\nRUN apt-get install --no-install-recommends -yq \\\n\tdnsutils \\\n\tiputils-ping && rm -rf /var/lib/apt/lists/*;\n\n# install pyenv\nRUN useradd -m build\nWORKDIR /home/build\nENV HOME /home/build\nUSER build\n\nRUN git clone https://github.com/yyuu/pyenv.git .pyenv\nENV PYENV_ROOT $HOME/.pyenv\nENV PATH $PYENV_ROOT/shims:$PYENV_ROOT/bin:$PATH\n\n# install python 2.7.11 within pyenv, pip\nRUN pyenv install 2.7.11 && pyenv global 2.7.11 && pyenv rehash\n\n# copy in Awa sources\nUSER root\nCOPY . $HOME/AwaLWM2M\nRUN chown build:build -R $HOME/AwaLWM2M\n\n# allow CMAKE_OPTIONS to be specified during image build-time\nARG CMAKE_OPTIONS\nENV CMAKE_OPTIONS ${CMAKE_OPTIONS}\n\n# build AwaLWM2M and tests\nUSER build\nWORKDIR $HOME/AwaLWM2M\nRUN pip install --no-cache-dir -r ci/requirements.txt\nRUN make\n\n# build docs\nRUN make docs\n\n# run tests\nRUN make tests\n\n# install\nUSER root\nRUN make install\n"
}