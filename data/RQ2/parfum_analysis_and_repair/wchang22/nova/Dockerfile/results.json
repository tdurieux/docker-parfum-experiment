{
  "startTime": 1674254785217,
  "endTime": 1674254786515,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 98
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 6
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 9
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 3,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 6
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 9
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 6
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 9
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 3,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 6
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 9
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:18.04\n\nRUN apt-get update -yy\nRUN apt-get install --no-install-recommends -yy \\\n  software-properties-common \\\n  apt-transport-https \\\n  ca-certificates \\\n  gnupg \\\n  wget && rm -rf /var/lib/apt/lists/*;\n\n# Add cmake\nRUN wget -qO - https://apt.kitware.com/keys/kitware-archive-latest.asc | apt-key add -\nRUN apt-add-repository 'deb https://apt.kitware.com/ubuntu/ bionic main'\n\nRUN add-apt-repository ppa:intel-opencl/intel-opencl\n\nRUN apt-get update -yy\nRUN apt-get install --no-install-recommends -yy \\\n  clang-9 \\\n  cmake \\\n  opencl-headers \\\n  clinfo \\\n  ocl-icd-opencl-dev \\\n  intel-opencl-icd \\\n  nvidia-opencl-dev \\\n  xorg-dev \\\n  libarchive-tools \\\n  zip \\\n  numactl && rm -rf /var/lib/apt/lists/*;\n\nRUN ln -sf /usr/bin/clang-9 /usr/bin/clang\nRUN ln -sf /usr/bin/clang++-9 /usr/bin/clang++\n\nWORKDIR /tmp\n\n# Install intel cpu opencl runtime\nARG cpu_runtime_pkg=l_opencl_p_18.1.0.013\nRUN wget \"https://registrationcenter-download.intel.com/akdlm/irc_nas/13793/${cpu_runtime_pkg}.tgz\"\nRUN tar xf \"${cpu_runtime_pkg}.tgz\" && rm \"${cpu_runtime_pkg}.tgz\"\nWORKDIR \"${cpu_runtime_pkg}\"\nRUN rm rpm/intel-openclrt-pset-*.rpm && for i in rpm/*.rpm; do bsdtar -xf \"$i\"; done\n\nRUN echo /opt/intel/opencl-runtime/linux/compiler/lib/intel64_lin/libintelocl.so > /etc/OpenCL/vendors/intel_cpu.icd\nRUN mkdir -p /opt/intel/opencl-runtime\nRUN cp -r opt/intel/opencl_*/* /opt/intel/opencl-runtime\nRUN rm -rf /tmp/\"${cpu_runtime_pkg}\"*\n\nARG OCL_LIB=/opt/intel/opencl-runtime/linux/compiler/lib/intel64_lin/\nENV LD_LIBRARY_PATH $OCL_LIB:$LD_LIBRARY_PATH\n\n# Install SPIRV-LLVM-Translator for compiling C++ for OpenCL to SPIR-V\nWORKDIR /tmp\nARG translator_pkg=SPIRV-LLVM-Translator-v9.0.0-1-linux-Release\nRUN wget \"https://github.com/KhronosGroup/SPIRV-LLVM-Translator/releases/download/v9.0.0-1/${translator_pkg}.zip\"\nRUN unzip \"${translator_pkg}.zip\" -d \"${translator_pkg}\"\nRUN install -Dm755 \"${translator_pkg}\"/lib/libLLVMSPIRVLib.so.9 /usr/lib\nRUN install -Dm755 \"${translator_pkg}\"/bin/llvm-spirv /usr/bin\nRUN rm -rf \"${translator_pkg}\"*\n\nENV CC /usr/bin/clang\nENV CXX /usr/bin/clang++\n\nWORKDIR /root\nENTRYPOINT bash\n"
}