{
  "startTime": 1674254602988,
  "endTime": 1674254603563,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 164
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 157
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 72
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 33
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Build the manager binary\nFROM golang:1.17 as builder\n\nWORKDIR /workspace\n\nARG K8S_VERSION=1.19.2\nARG KUBEBUILDER_VERSION=2.3.1\nARG HELM_VERSION=3.7.0\n\n# Install Kubebuilder\nARG OS_ARCH=amd64\nRUN curl -f -L -O \"https://github.com/kubernetes-sigs/kubebuilder/releases/download/v${KUBEBUILDER_VERSION}/kubebuilder_${KUBEBUILDER_VERSION}_linux_${OS_ARCH}.tar.gz\"\nRUN tar -zxvf kubebuilder_${KUBEBUILDER_VERSION}_linux_${OS_ARCH}.tar.gz && rm kubebuilder_${KUBEBUILDER_VERSION}_linux_${OS_ARCH}.tar.gz\nRUN mv kubebuilder_${KUBEBUILDER_VERSION}_linux_${OS_ARCH} kubebuilder && mv kubebuilder /usr/local/\nRUN export PATH=$PATH:/usr/local/kubebuilder/bin\n\n# hack to update kubeapi-server to 1.19 version\nRUN curl -f -sSLo envtest-bins.tar.gz \"https://storage.googleapis.com/kubebuilder-tools/kubebuilder-tools-${K8S_VERSION}-$(go env GOOS)-$(go env GOARCH).tar.gz\"\nRUN tar -xzvf envtest-bins.tar.gz && rm envtest-bins.tar.gz\nRUN rm -rf /usr/local/kubebuilder/bin/kube_apiserver\nRUN mv kubebuilder/bin/kube-apiserver /usr/local/kubebuilder/bin\n\n# Install helm\nRUN curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3\nRUN chmod 700 get_helm.sh\nRUN ./get_helm.sh\n\n\nCOPY . .\n\n# Build\nRUN make lint && make template\nRUN go mod download\nRUN go fmt ./...\nRUN go vet ./...\nRUN go test ./...\nRUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 GO111MODULE=on go build -a -o manager main.go\n\n# Use distroless as minimal base image to package the manager binary\n# Refer to https://github.com/GoogleContainerTools/distroless for more details\nFROM gcr.io/distroless/static:nonroot\nWORKDIR /\nCOPY --from=builder /workspace/manager .\nUSER nonroot:nonroot\n\nENTRYPOINT [\"/manager\"]\n"
}