{
  "startTime": 1674249262880,
  "endTime": 1674249264196,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 102
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 22,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 102
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 22,
        "columnEnd": 50
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 40
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM laoshanxi/appmesh:build_ubuntu AS builder\n\nWORKDIR /workspace\n\nCOPY . .\n\nRUN mkdir build; cd build; cmake ..; make -j2; make pack; make test ARG='-V'\n\nFROM ubuntu:latest\n\nCOPY --from=builder /workspace/build/appmesh*.deb /opt/\n\nARG AM_UID=\"482\"\nARG AM_GID=\"482\"\n\n# not enable exec user in container\nENV APPMESH_DisableExecUser=true \\\n    DOCKER_RUNNING=true\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y apt-transport-https ca-certificates curl gnupg-agent software-properties-common && \\\n    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add - && \\\n    add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\" && \\\n    apt-get update && apt install --no-install-recommends -y docker-ce-cli && \\\n    apt-get install --no-install-recommends -y python3 iputils-ping tini && \\\n    apt-get install --no-install-recommends -y /opt/appmesh*.deb && rm -f /opt/appmesh*.deb && apt-get clean && \\\n    groupadd -r -g $AM_GID appmesh && useradd -r -u $AM_UID -g appmesh appmesh && \\\n    echo \"\" > /var/run/appmesh.pid && \\\n    chown -R appmesh:appmesh /opt/appmesh/ /var/run/appmesh.pid && rm -rf /var/lib/apt/lists/*;\n\nEXPOSE 6060\n\nUSER appmesh\nWORKDIR /\nCMD [\"tini\", \"--\", \"/opt/appmesh/script/appmesh-entrypoint.sh\"]\n\n# reference:\n# https://blog.csdn.net/alex_yangchuansheng/article/details/106394119?utm_term=linuxsbintini&utm_medium=distribute.pc_aggpage_search_result.none-task-blog-2~all~sobaiduweb~default-0-106394119&spm=3001.4430\n# https://github.com/grafana/grafana-docker/blob/master/Dockerfile\n"
}