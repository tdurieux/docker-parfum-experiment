{
  "startTime": 1674252254112,
  "endTime": 1674252254650,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 75
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 75
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 75
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 99
      }
    }
  ],
  "repairedDockerfile": "# Copyright 2017-2018 Intel Corporation.\n# Use of this source code is governed by a BSD-style\n# license that can be found in the LICENSE file.\n\nARG USER_NAME\nFROM ${USER_NAME}/nff-go-base\n\nLABEL RUN docker run -it --privileged -v /sys/bus/pci/drivers:/sys/bus/pci/drivers -v /sys/kernel/mm/hugepages:/sys/kernel/mm/hugepages -v /sys/devices/system/node:/sys/devices/system/node -v /dev:/dev --name NAME -e NAME=NAME -e IMAGE=IMAGE IMAGE\n\nRUN apt-get install --no-install-recommends -y procps iproute2 iputils-ping net-tools apache2 wget; rm -rf /var/lib/apt/lists/*; apt-get clean\nRUN dd if=/dev/zero of=/var/www/html/10k.bin bs=1 count=10240\nRUN dd if=/dev/zero of=/var/www/html/100k.bin bs=1 count=102400\nRUN dd if=/dev/zero of=/var/www/html/1m.bin bs=1 count=1048576\n\n# The following command cannot be executed at build stage but is\n# required for IPv6 KNI interfaces, so it should be executed when\n# container is ran\n# RUN sysctl -w net.ipv6.conf.all.disable_ipv6=0\n\nWORKDIR /workdir\n\n# NAT executables\nCOPY nff-go-nat .\nCOPY client/client .\n\n# Test applications\nCOPY test/httpperfserv/httpperfserv .\nCOPY test/wrk/wrk .\n\n# Configs without VLANs\nCOPY config.json .\nCOPY config-vlan.json .\nCOPY config-dhcp.json .\n\n# Configs with VLANs\nCOPY config-kni.json .\nCOPY config-kni-vlan.json .\nCOPY config-kni-dhcp.json .\n\n# Two ports config\nCOPY config2ports.json .\n"
}