{
  "startTime": 1674217117001,
  "endTime": 1674217118132,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 118
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 22,
        "columnEnd": 99
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 22,
        "columnEnd": 99
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright 2021 Code Intelligence GmbH\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nFROM ubuntu:20.04 AS builder\n\nENV DEBIAN_FRONTEND=noninteractive\nRUN apt-get update && apt-get install --no-install-recommends -y curl git python3 python-is-python3 openjdk-11-jdk-headless && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /root\nRUN curl -f -L https://github.com/bazelbuild/bazelisk/releases/download/v1.11.0/bazelisk-linux-amd64 -o /usr/bin/bazelisk && \\\n    chmod +x /usr/bin/bazelisk && \\\n    git clone --depth=1 https://github.com/CodeIntelligenceTesting/jazzer.git && \\\n    cd jazzer && \\\n    # The LLVM toolchain requires ld and ld.gold to exist, but does not use them.\n    touch /usr/bin/ld && \\\n    touch /usr/bin/ld.gold && \\\n    BAZEL_DO_NOT_DETECT_CPP_TOOLCHAIN=1 \\\n    bazelisk build --config=toolchain --extra_toolchains=@llvm_toolchain//:cc-toolchain-x86_64-linux \\\n      //agent:jazzer_agent_deploy //driver:jazzer_driver\n\n# :debug includes a busybox shell, which is needed for libFuzzer's use of system() for e.g. the\n# -fork and -minimize_crash commands.\nFROM gcr.io/distroless/java:debug\n\nCOPY --from=builder /root/jazzer/bazel-bin/agent/jazzer_agent_deploy.jar /root/jazzer/bazel-bin/driver/jazzer_driver /app/\n# system() expects the shell at /bin/sh, but the image has it at /busybox/sh. We create a symlink,\n# but have to use the long form as a simple RUN <command> also requires /bin/sh.\nRUN [\"/busybox/sh\", \"-c\", \"ln -s /busybox/sh /bin/sh\"]\nWORKDIR /fuzzing\nENTRYPOINT [ \"/app/jazzer_driver\" ]\n"
}