{
  "startTime": 1674254720666,
  "endTime": 1674254721750,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 85,
        "columnEnd": 169
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 85,
        "columnEnd": 169
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 85,
        "columnEnd": 163
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 85,
        "columnEnd": 169
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 85,
        "columnEnd": 163
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 105,
        "lineEnd": 105,
        "columnStart": 84,
        "columnEnd": 196
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 91,
        "lineEnd": 91,
        "columnStart": 4,
        "columnEnd": 21
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:16-alpine as builder\n\nARG COMMIT_ID\nENV COMMIT_ID=$COMMIT_ID\n\nARG PANOPTES_ENV=production\nENV PANOPTES_ENV=$PANOPTES_ENV\n\nARG NODE_ENV=production\nENV NODE_ENV=$NODE_ENV\n\nARG APP_ENV=production\nENV APP_ENV=$APP_ENV\n\nENV NEXT_TELEMETRY_DISABLED=1\n\nARG CONTENTFUL_ACCESS_TOKEN\n\nARG CONTENTFUL_SPACE_ID\n\nARG CONTENT_ASSET_PREFIX\nENV CONTENT_ASSET_PREFIX=$CONTENT_ASSET_PREFIX\n\nARG SENTRY_CONTENT_DSN\nENV SENTRY_CONTENT_DSN=$SENTRY_CONTENT_DSN\n\nARG SENTRY_PROJECT_DSN\nENV SENTRY_PROJECT_DSN=$SENTRY_PROJECT_DSN\n\nARG PROJECT_ASSET_PREFIX\nENV PROJECT_ASSET_PREFIX=$PROJECT_ASSET_PREFIX\n\nRUN mkdir -p /usr/src && rm -rf /usr/src\n\nWORKDIR /usr/src/\n\nADD package.json /usr/src/\n\nADD yarn.lock /usr/src/\n\nCOPY .yarn /usr/src/.yarn\n\nADD .yarnrc /usr/src/\n\nADD lerna.json /usr/src/\n\nCOPY ./packages /usr/src/packages\n\nRUN chown -R node:node .\n\nUSER node\n\nRUN --mount=type=cache,id=fem-builder-yarn,uid=1000,gid=1000,target=/home/node/.yarn YARN_CACHE_FOLDER=/home/node/.yarn yarn install --production=false --frozen-lockfile && yarn cache clean;\nRUN --mount=type=cache,id=fem-builder-yarn,uid=1000,gid=1000,target=/home/node/.yarn YARN_CACHE_FOLDER=/home/node/.yarn yarn workspace @zooniverse/react-components build && yarn cache clean;\nRUN --mount=type=cache,id=fem-builder-yarn,uid=1000,gid=1000,target=/home/node/.yarn YARN_CACHE_FOLDER=/home/node/.yarn yarn workspace @zooniverse/classifier build && yarn cache clean;\nRUN --mount=type=cache,id=fem-builder-yarn,uid=1000,gid=1000,target=/home/node/.yarn YARN_CACHE_FOLDER=/home/node/.yarn yarn workspace @zooniverse/fe-content-pages build && yarn cache clean;\nRUN echo $COMMIT_ID > /usr/src/packages/app-project/public/commit_id.txt\nRUN --mount=type=cache,id=fem-builder-yarn,uid=1000,gid=1000,target=/home/node/.yarn YARN_CACHE_FOLDER=/home/node/.yarn yarn workspace @zooniverse/fe-project build && yarn cache clean;\n\nFROM node:16-alpine as runner\n\nARG COMMIT_ID\nENV COMMIT_ID=$COMMIT_ID\n\nARG PANOPTES_ENV=production\nENV PANOPTES_ENV=$PANOPTES_ENV\n\nARG NODE_ENV=production\nENV NODE_ENV=$NODE_ENV\n\nARG APP_ENV=production\nENV APP_ENV=$APP_ENV\n\nENV NEXT_TELEMETRY_DISABLED=1\n\nARG CONTENTFUL_ACCESS_TOKEN\n\nARG CONTENTFUL_SPACE_ID\n\nARG CONTENT_ASSET_PREFIX\nENV CONTENT_ASSET_PREFIX=$CONTENT_ASSET_PREFIX\n\nARG SENTRY_CONTENT_DSN\nENV SENTRY_CONTENT_DSN=$SENTRY_CONTENT_DSN\n\nARG SENTRY_PROJECT_DSN\nENV SENTRY_PROJECT_DSN=$SENTRY_PROJECT_DSN\n\nARG PROJECT_ASSET_PREFIX\nENV PROJECT_ASSET_PREFIX=$PROJECT_ASSET_PREFIX\n\nRUN mkdir -p /usr/src && rm -rf /usr/src\n\nWORKDIR /usr/src/\n\nADD package.json /usr/src/\n\nADD yarn.lock /usr/src/\n\nCOPY .yarn /usr/src/.yarn\n\nADD .yarnrc /usr/src/\n\nCOPY --from=builder /usr/src/packages ./packages\n\nRUN --mount=type=cache,id=fem-runner-yarn,uid=1000,gid=1000,target=/home/node/.yarn YARN_CACHE_FOLDER=/home/node/.yarn yarn install --production --frozen-lockfile --ignore-scripts --prefer-offline && yarn cache clean;\n\nRUN rm -rf /usr/src/packages/lib-react-components/src\nRUN rm -rf /usr/src/packages/lib-classifier/src\nRUN rm -rf /usr/src/packages/app-content-pages/src\nRUN rm -rf /usr/src/packages/app-project/src\nRUN rm -rf /usr/src/packages/app-project/stores\n"
}