{
  "startTime": 1674252767263,
  "endTime": 1674252768208,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 79
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 80
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 88
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 42
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Note: map a volume to /tmp/release to accept the binary.\n# ```\n# docker build -t build_socat .\n\nFROM aarch64/gcc\n\nARG SOCAT_VERSION=1.7.4.3\nARG READLINE_VERSION=7.0\nARG OPENSSL_VERSION=1.0.2k\n\n# Make directories\nRUN mkdir -p /build && mkdir -p /tmp/release\nWORKDIR /build\n\n# Build readline\nRUN curl -f -k -LO ftp://ftp.cwru.edu/pub/bash/readline-${READLINE_VERSION}.tar.gz\nRUN tar xzvf readline-${READLINE_VERSION}.tar.gz && rm readline-${READLINE_VERSION}.tar.gz\nWORKDIR  /build/readline-${READLINE_VERSION}\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" -disable-shared --enable-static -build=aarch64\nRUN make -j4\nRUN make install-static\n\n# Build OpenSSL\nWORKDIR /build\nRUN curl -f -k -LO https://www.openssl.org/source/openssl-${OPENSSL_VERSION}.tar.gz\nRUN tar zxvf openssl-${OPENSSL_VERSION}.tar.gz && rm openssl-${OPENSSL_VERSION}.tar.gz\nWORKDIR /build/openssl-${OPENSSL_VERSION}\nENV CFLAGS='-fPIC -static'\nRUN ./Configure no-shared linux-aarch64\nRUN make -j4\nRUN make install\n\n# Build socat\nWORKDIR /build\nRUN curl -f -k -LO http://www.dest-unreach.org/socat/download/socat-${SOCAT_VERSION}.tar.gz\nRUN tar xzvf socat-${SOCAT_VERSION}.tar.gz && rm socat-${SOCAT_VERSION}.tar.gz\nWORKDIR /build/socat-${SOCAT_VERSION}\nENV LDFLAGS='-static -ldl -ltinfo'\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" -build=linux-aarch64\nRUN make -j4\n\n# Copy the file to the release directory\nENTRYPOINT cp socat /tmp/release\n"
}