{
  "startTime": 1674248445355,
  "endTime": 1674248446352,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 28,
        "columnEnd": 53
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 38,
        "columnStart": 57,
        "columnEnd": 12
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 28,
        "columnEnd": 53
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 38,
        "columnStart": 57,
        "columnEnd": 12
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#FROM ubuntu:latest\n#FROM ubuntu:artful\n#FROM ubuntu:bionic\nFROM ubuntu:focal\n\n\nLABEL Description=\"This image contains all of the third-party libraries needed by Amanzi (based on the specified branch, default branch is master).\"\n\n# MPI flavor (mpich|openmpi)\nARG mpi_flavor=mpich\n\n# Set timezone:\nRUN ln -snf /usr/share/zoneinfo/$CONTAINER_TIMEZONE /etc/localtime && echo $CONTAINER_TIMEZONE > /etc/timezone\n\nRUN apt-get -q update -y && apt-get install --no-install-recommends -y tzdata && apt-get -q --no-install-recommends install -y \\\n  apt-utils \\\n  cmake \\\n  curl \\\n  libcurl4-openssl-dev \\\n  emacs \\\n  g++ \\\n  gfortran \\\n  git \\\n  groff \\\n  libblas-dev \\\n  liblapacke-dev \\\n  liblapack-dev \\\n  lib${mpi_flavor}-dev \\\n  libssl-dev \\\n  m4 \\\n  make \\\n  openssl \\\n  python3 \\\n  python3-distutils \\\n  python3-pip \\\n  python-is-python3 \\\n  rsync \\\n  wget \\\n  zlib1g-dev \\\n  && apt-get clean && rm -rf /var/lib/apt/lists/*;\n\n# Note this installs numpy as well\nRUN pip3 install --no-cache-dir --upgrade pip && \\\n    pip3 install --no-cache-dir install h5py\n\n# Versions change and we cannot set environment variables from command output.\nARG petsc_ver\nARG trilinos_ver\nARG amanzi_branch=master\n\n# Installation paths\nENV AMANZI_PREFIX=/home/amanzi_user/install \\\n    AMANZI_INSTALL_DIR=/home/amanzi_user/install/amanzi \\\n    AMANZI_TPLS_DIR=/home/amanzi_user/install/tpls\n\n# TPL versions needed for LD_LIBRARY_PATH\nENV AMANZI_PETSC_LIBS=$AMANZI_TPLS_DIR/petsc-${petsc_ver}/lib \\ \n    AMANZI_TRILINOS_LIBS=$AMANZI_TPLS_DIR/trilinos-${trilinos_ver}/lib \\\n    AMANZI_SEACAS_LIBS=$AMANZI_TPLS_DIR/SEACAS/lib\n\n# Add an unprivileged user and group: amanzi_user, amanzi_user\nRUN groupadd -r amanzi_user \\\n  && useradd -r -m -g amanzi_user amanzi_user\nUSER amanzi_user\n\n# Set the current working directory as the users home directory\n# (creates teh directory if it doesn't exist)\nWORKDIR /home/amanzi_user\n\n# ENV https_proxy=proxyout.lanl.gov:8080 \\\n#     http_proxy=proxyout.lanl.gov:8080\n\n# Clone the amanzi git repo.\nRUN git clone https://github.com/amanzi/amanzi.git\n\n# Set the current working directory to the git repo\n# and switch branches if requested.\nWORKDIR /home/amanzi_user/amanzi\nRUN if [ \"$amanzi_branch\" != \"master\" ]; then \\\n       git checkout $amanzi_branch; \\\n    fi; \\\n    echo \"Amanzi branch = $amanzi_branch\"; \\\n    git branch --list\n\n# Build and install the TPLs using bootstrap.sh, and remove\n# the source, objects, etc. after installation to save space.\nRUN ./bootstrap.sh --prefix=${AMANZI_PREFIX} \\\n  --parallel=4 --opt \\\n  --amanzi-build-dir=/home/amanzi_user/amanzi_builddir/amanzi \\\n  --tpl-build-dir=/home/amanzi_user/amanzi_builddir/tpls \\\n  --tpl-download-dir=/home/amanzi_user/amanzi_builddir/tpls/Downloads \\\n  --disable-build_amanzi --disable-build_user_guide \\\n  --enable-shared --enable-structured --enable-silo \\\n  --enable-alquimia --enable-pflotran --enable-crunchtope \\\n  --enable-pf_clm \\\n  --with-mpi=/usr \\\n  && git checkout master \\\n  && rm -r /home/amanzi_user/amanzi_builddir\n\n# Set the LD_LIBRARY_PATH for Amanzi builds in the next stage\nENV LD_LIBRARY_PATH=${AMANZI_TPLS_DIR}/lib:${AMANZI_PETSC_LIBS}:${AMANZI_TRILINOS_LIBS}:${AMANZI_SEACAS_LIBS}\nRUN echo $LD_LIBRARY_PATH\n\n# Set path to pick up any tools installed during bootstrap\nENV PATH=/home/amanzi_user/amanzi/install/tools/bin:${PATH}\nRUN echo $PATH\n\n# Unset proxy\n# ENV https_proxy= \\\n#    http_proxy=\n\n\n"
}