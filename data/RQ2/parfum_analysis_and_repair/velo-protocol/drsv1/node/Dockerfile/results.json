{
  "startTime": 1674218473132,
  "endTime": 1674218474151,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 18,
        "columnEnd": 43
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 47,
        "columnEnd": 65
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 18,
        "columnEnd": 43
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 47,
        "columnEnd": 65
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#Docker multi-stage builds\n\n# ------------------------------------------------------------------------------\n# Development image\n# ------------------------------------------------------------------------------\n\n#Builder stage\nFROM golang:1.12.7-alpine3.10 as development\n\n# Force the go compiler to use modules\nENV GO111MODULE=on\n#ENV GOPROXY=http://172.17.0.1:3333\n\n# Update OS package and install Git\nRUN apk update && apk add --no-cache git mercurial bzr && apk add --no-cache build-base\n\n# Set working directory\nWORKDIR /go/src/github.com/velo-protocol/DRSv1\n\n# Install Fresh for local development\nRUN go get github.com/pilu/fresh\n\n# Install go tool for convert go test output to junit xml\nRUN go get -u github.com/jstemmer/go-junit-report &&\\\n    go get github.com/axw/gocov/gocov &&\\\n    go get github.com/AlekSi/gocov-xml\n\n# Install wait-for\nRUN wget https://raw.githubusercontent.com/eficode/wait-for/master/wait-for -O /usr/local/bin/wait-for &&\\\n    chmod +x /usr/local/bin/wait-for\n\n# Copy Go dependency file\nCOPY go.mod go.mod\nCOPY go.sum go.sum\n\n# Download dependency\nRUN go mod download\n\n# Copy src\nCOPY node/app node/app\nCOPY libs libs\nCOPY grpc grpc\n\n# Use CMD instead of RUN to allow command overwritability\nCMD cd node/app && fresh\n\n# ------------------------------------------------------------------------------\n# Build deployable image\n# ------------------------------------------------------------------------------\nFROM golang:1.12.7-alpine3.10 as build\n\nWORKDIR /go/src/github.com/velo-protocol/DRSv1\n\n# Copy stuff from development stage\nCOPY --from=development /go/src/github.com/velo-protocol/DRSv1 .\n\n# Update OS package and install Git\nRUN apk update && apk add --no-cache git mercurial bzr && apk add --no-cache build-base\n\n# Build the binary\nENV GO111MODULE=on\nRUN cd node/app && go build -o /go/bin/node.bin\n\n# ------------------------------------------------------------------------------\n# Application image\n# ------------------------------------------------------------------------------\nFROM golang:1.12.7-alpine3.10\n\nRUN apk add --no-cache tini tzdata\nRUN addgroup -g 211000 -S appgroup && adduser -u 211000 -S appuser -G appgroup\n\n# Set working directory\nWORKDIR /app\n\n#Get artifact from builder stage\nRUN mkdir -p migrations\nCOPY --from=build /go/bin/node.bin /app/node.bin\n\n# Set Docker's entry point commands\nRUN chown -R appuser:appgroup /app\nUSER appuser\nENTRYPOINT [\"/sbin/tini\",\"-sg\",\"--\",\"/app/node.bin\"]\n"
}