{
  "startTime": 1674217695635,
  "endTime": 1674217696748,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 100
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 14
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:jessie\n\nENV DEBIAN_FRONTEND noninteractive\n\nRUN apt-get update -y && \\\n    apt-get install --no-install-recommends -y \\\n      build-essential \\\n      libfcgi-dev \\\n      libssl-dev \\\n      unixodbc-dev \\\n      libmysqlclient-dev \\\n      libopencv-dev \\\n      libmagickwand-dev \\\n      lighttpd \\\n      wget \\\n      unzip \\\n      curl \\\n      automake && rm -rf /var/lib/apt/lists/*;\n\nRUN mkdir -p /build/poco\nRUN wget -O /build/poco/poco.tar.gz https://pocoproject.org/releases/poco-1.6.0/poco-1.6.0-all.tar.gz\nRUN cd /build/poco && \\\n    tar xvf poco.tar.gz && \\\n    cd poco-* && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n    make && \\\n    make install && rm poco.tar.gz\n\nRUN mkdir -p /build/dhash\nRUN wget -O /build/dhash/dhash.zip https://github.com/moravianlibrary/dhash/archive/1.0.0.zip\nRUN cd /build/dhash && \\\n    unzip dhash.zip && \\\n    cd dhash-* && \\\n    autoreconf -i && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n    make && \\\n    make install\n\nRUN mkdir -p /build/blockhash\nRUN wget -O /build/blockhash/blockhash.zip https://github.com/moravianlibrary/blockhash/archive/1.0.0.zip\nRUN cd /build/blockhash && \\\n    unzip blockhash.zip && \\\n    cd blockhash-* && \\\n    make all && \\\n    cp blockhash.h /usr/local/include && \\\n    cp dist/Release/GNU-Linux-x86/libblockhash.so /usr/local/lib\n\n\nRUN ldconfig /usr/local/lib\n\nRUN mkdir /shared\nCOPY readers_count /shared/readers_count\nCOPY can_read /shared/can_read\nRUN touch /shared/blockhash\nRUN touch /shared/dhash\nRUN touch /shared/gaussdhash\nRUN touch /shared/gauss2dhash\nRUN touch /shared/gaussblockhash\nRUN chmod -R a+w /shared\n\nCOPY lighttpd-imagesearch.conf /etc/lighttpd/conf-available/30-imagesearch.conf\nRUN lighttpd-enable-mod fastcgi\nRUN lighttpd-enable-mod imagesearch\n\nCOPY web /var/www/html\n\nCOPY fcgi /build/fcgi\nRUN cd /build/fcgi && make -e CONF=Release\n\nEXPOSE 80\n\nCOPY init.sh /init.sh\nENTRYPOINT [\"/init.sh\"]\n"
}