{
  "startTime": 1674217690656,
  "endTime": 1674217692197,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 4,
        "columnEnd": 110
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 82,
        "lineEnd": 82,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 84,
        "lineEnd": 86,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 22,
        "columnEnd": 56
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 25,
        "columnEnd": 70
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 71
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 26,
        "lineEnd": 27,
        "columnStart": 25,
        "columnEnd": 96
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 25,
        "columnEnd": 57
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 79,
        "lineEnd": 79,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 101,
        "lineEnd": 101,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 87
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 22,
        "columnEnd": 56
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 87
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:18.04\n#MAINTAINER Tabish Rashid\n\n# CUDA includes\n#ENV CUDA_PATH /usr/local/cuda\n#ENV CUDA_INCLUDE_PATH /usr/local/cuda/include\n#ENV CUDA_LIBRARY_PATH /usr/local/cuda/lib64\n\nENV REQUESTS_CA_BUNDLE=/etc/ssl/certs/ca-certificates.crt\nCOPY Huawei* /usr/local/share/ca-certificates/\n\nCOPY sources.list.bionic /etc/apt/sources.list\nCOPY pip.conf /root/.pip/\nRUN apt-get update && apt-get install --no-install-recommends -y ca-certificates && rm -rf /var/lib/apt/lists/*;\n\nRUN update-ca-certificates\n\n#sources.list.bionic\n\n# Ubuntu Packages\nRUN apt-get update -y && apt-get install --no-install-recommends software-properties-common -y && \\\n    add-apt-repository -y multiverse && apt-get update -y && apt-get upgrade -y && \\\n    apt-get install --no-install-recommends -y apt-utils nano vim man build-essential wget sudo && \\\n    rm -rf /var/lib/apt/lists/*\n\n# Install curl and other dependencies\nRUN apt-get update -y && apt-get install --no-install-recommends -y curl libssl-dev openssl libopenblas-dev \\\n    libhdf5-dev hdf5-helpers hdf5-tools libhdf5-serial-dev libprotobuf-dev protobuf-compiler git && \\\n    rm -rf /var/lib/apt/lists/*\n\n# pytorch move to end\n#RUN curl -sk https://raw.githubusercontent.com/torch/distro/master/install-deps | bash && \\\n#    rm -rf /var/lib/apt/lists/*\n\n# for debconf: unable to initialize frontend: Dialog\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends apt-utils && \\\n    rm -rf /var/lib/apt/lists/*\n\n# Install python3 pip3\nRUN apt-get update && \\\n    apt-get -y --no-install-recommends install python3 zip && \\\n    apt-get -y --no-install-recommends install python3-pip && \\\n    rm -rf /var/lib/apt/lists/*\n\nRUN pip3 install --no-cache-dir --upgrade pip\n\n# Python packages we use (or used at one point...)\nRUN pip3 install --no-cache-dir numpy scipy pyyaml matplotlib imageio tensorboard-logger\nRUN pip3 install --no-cache-dir pygame jsonpickle==0.9.6 setuptools\n\nRUN mkdir /install\nWORKDIR /install\n\n#RUN pip3 install jsonpickle==0.9.6\n# install Sacred (from OxWhirl fork)\n#RUN pip3 install setuptools\nRUN git clone https://github.com/oxwhirl/sacred.git /install/sacred && cd /install/sacred && python3 setup.py install\n\n#### -------------------------------------------------------------------\n#### install pytorch\n#### -------------------------------------------------------------------\n#RUN pip3 install torch\n#RUN pip3 install torch==1.4.0+cpu torchvision==0.5.0+cpu -f https://download.pytorch.org/whl/torch_stable.html\n# CPU Only\n# CPU only\nRUN pip3 install --no-cache-dir torch==1.2.0+cpu torchvision==0.4.0+cpu -f https://download.pytorch.org/whl/torch_stable.html\nRUN pip3 install --no-cache-dir Ipython torchvision snakeviz pytest probscale\n\n\n## -- SMAC\nRUN pip3 install --no-cache-dir git+https://github.com/oxwhirl/smac.git\n#ENV SC2PATH /pymarl/3rdparty/StarCraftII\nENV SC2PATH /pymarl-sim/StarCraftII\n\n#RUN groupadd -r docker && useradd -r -g docker docker\n## xingtian\nARG DEBIAN_FRONTEND=noninteractive\n\nRUN apt-get update -y && apt-get install --no-install-recommends -y libopencv-dev && \\\n    apt-get install --no-install-recommends -y redis-server python3-tk && \\\n    rm -rf /var/lib/apt/lists/*\n\nRUN pip3 install --no-cache-dir --upgrade setuptools\n\nRUN pip3 install --no-cache-dir opencv-python psutil zmq fabric2 h5py gym[atari] tqdm \\\n    imageio matplotlib==3.0.3 Ipython pyyaml tensorflow==1.15.0 pyarrow==0.14.0 \\\n    lz4 redis pylint absl-py line_profiler\n\n# rl simulation\nWORKDIR /install\nCOPY src_zip/rl-simulator-master.zip /install\n\n#VOLUME [\"/var/run/docker.sock:/var/run/docker.sock\"]\n\n#RUN unzip rl-simulator-master.zip && \\\n#    cd rl-simulator-master/ && \\\n#    python3 deploy.py torcs && \\\n#    python3 deploy.py cavityfilter\n\n# sumo\nRUN add-apt-repository ppa:sumo/stable && apt-get update -y && \\\n    apt-get install --no-install-recommends sumo sumo-tools sumo-doc -y && \\\n    rm -rf /var/lib/apt/lists/*\n\nENV SUMO_HOME=/usr/share/sumo\n\nWORKDIR /\n"
}