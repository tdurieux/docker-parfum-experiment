{
  "startTime": 1674253103577,
  "endTime": 1674253104506,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 7,
        "columnEnd": 133
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 7,
        "columnEnd": 99
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 7,
        "columnEnd": 100
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 7,
        "columnEnd": 92
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 7,
        "columnEnd": 28
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 7,
        "columnEnd": 66
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 87
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 7,
        "columnEnd": 48
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG UPSTREAM_REPO\nARG UPSTREAM_TAG\nFROM ${UPSTREAM_REPO:-uselagoon}/commons:${UPSTREAM_TAG:-latest} as commons\nFROM golang:1.16-alpine3.15 as golang\n\nRUN apk add --no-cache git\nRUN go get github.com/a8m/envsubst/cmd/envsubst\n\nFROM docker:20.10.14\n\nLABEL maintainer=\"amazee.io\"\nENV LAGOON=oc\n\nCOPY --from=golang /go/bin/envsubst /bin/envsubst\n\nARG LAGOON_VERSION\nENV LAGOON_VERSION=$LAGOON_VERSION\n\n# Copy commons files\nCOPY --from=commons /lagoon /lagoon\nCOPY --from=commons /bin/fix-permissions /bin/ep /bin/docker-sleep /bin/\nCOPY --from=commons /sbin/tini /sbin/\nCOPY --from=commons /home /home\n\nRUN chmod g+w /etc/passwd \\\n    && mkdir -p /home\n\nENV TMPDIR=/tmp \\\n    TMP=/tmp \\\n    HOME=/home \\\n    # When Bash is invoked via `sh` it behaves like the old Bourne Shell and sources a file that is given in `ENV`\n    ENV=/home/.bashrc \\\n    # When Bash is invoked as non-interactive (like `bash -c command`) it sources a file that is given in `BASH_ENV`\n    BASH_ENV=/home/.bashrc\n\n# Defining Versions\nENV KUBECTL_VERSION=v1.20.4 \\\n    HELM_VERSION=v3.5.2 \\\n    HELM_SHA256=01b317c506f8b6ad60b11b1dc3f093276bb703281cb1ae01132752253ec706a2\n\nRUN apk add --no-cache -U --repository http://dl-cdn.alpinelinux.org/alpine/edge/testing aufs-util \\\n    && apk add --no-cache --update openssl curl jq parallel \\\n    && apk add --no-cache bash git openssh py-pip skopeo \\\n    && git config --global user.email \"lagoon@lagoon.io\" && git config --global user.name lagoon \\\n    && pip install --no-cache-dir shyaml yq \\\n    && curl -f -Lo /usr/bin/kubectl https://storage.googleapis.com/kubernetes-release/release/${KUBECTL_VERSION}/bin/linux/amd64/kubectl \\\n    && chmod +x /usr/bin/kubectl \\\n    && curl -f -Lo /usr/bin/yq3 https://github.com/mikefarah/yq/releases/download/3.3.2/yq_linux_amd64 \\\n    && chmod +x /usr/bin/yq3 \\\n    && curl -f -Lo /usr/bin/yq https://github.com/mikefarah/yq/releases/download/v4.15.1/yq_linux_amd64 \\\n    && chmod +x /usr/bin/yq \\\n    && curl -f -Lo /tmp/helm.tar.gz https://get.helm.sh/helm-${HELM_VERSION}-linux-amd64.tar.gz \\\n    && echo \"${HELM_SHA256}  /tmp/helm.tar.gz\" | sha256sum -c - \\\n    && mkdir /tmp/helm \\\n    && tar -xzf /tmp/helm.tar.gz -C /tmp/helm --strip-components=1 \\\n    && mv /tmp/helm/helm /usr/bin/helm \\\n    && chmod +x /usr/bin/helm \\\n    && rm -rf /tmp/helm* && rm /tmp/helm.tar.gz\n\n\nENTRYPOINT [\"/sbin/tini\", \"--\", \"/lagoon/entrypoints.sh\"]\n"
}