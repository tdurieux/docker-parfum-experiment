{
  "startTime": 1674250405905,
  "endTime": 1674250406398,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 16
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG LAGOON_CACHE_node=alpine\nFROM ${LAGOON_CACHE_node} as cache_image\n# this is done to ensure that there is a cache directory, even on an empty test\nCOPY ./testoutput.dummy /cache/testoutput.dummy\n\nARG UPSTREAM_REPO\nARG UPSTREAM_TAG\nFROM ${UPSTREAM_REPO:-testlagoon}/node-14-builder:${UPSTREAM_TAG:-latest} as builder\nCOPY package.json yarn.lock /app/\nRUN yarn install && yarn cache clean;\n\nFROM ${UPSTREAM_REPO:-testlagoon}/node-14:${UPSTREAM_TAG:-latest}\nCOPY --from=builder /app/node_modules /app/node_modules\nCOPY . /app/\n\n# copy everything from cache - should only have dummy data on first pass\nCOPY --from=cache_image /cache/* /files/\n\nARG LAGOON_GIT_SHA=0000000000000000000000000000000000000000\nENV LAGOON_GIT_SHA_BUILDTIME ${LAGOON_GIT_SHA}\n\nARG LAGOON_GIT_BRANCH=undefined\nENV LAGOON_GIT_BRANCH_BUILDTIME ${LAGOON_GIT_BRANCH}\n\nARG LAGOON_BUILD_TYPE=undefined\nENV LAGOON_BUILD_TYPE_BUILDTIME ${LAGOON_BUILD_TYPE}\n\nARG LAGOON_PR_HEAD_BRANCH=undefined\nENV LAGOON_PR_HEAD_BRANCH_BUILDTIME ${LAGOON_PR_HEAD_BRANCH}\n\nARG LAGOON_PR_HEAD_SHA=undefined\nENV LAGOON_PR_HEAD_SHA_BUILDTIME ${LAGOON_PR_HEAD_SHA}\n\nARG LAGOON_PR_BASE_BRANCH=undefined\nENV LAGOON_PR_BASE_BRANCH_BUILDTIME ${LAGOON_PR_BASE_BRANCH}\n\nARG LAGOON_PR_BASE_SHA=undefined\nENV LAGOON_PR_BASE_SHA_BUILDTIME ${LAGOON_PR_BASE_SHA}\n\nARG LAGOON_PR_TITLE=undefined\nENV LAGOON_PR_TITLE_BUILDTIME ${LAGOON_PR_TITLE}\n\nRUN mkdir -p /cache && echo \"REPLACED BY CACHE\" > /cache/testoutput.txt\n\nEXPOSE 3000\n\nCMD [\"node\", \"index.js\"]\n"
}