{
  "startTime": 1674253061142,
  "endTime": 1674253062279,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 8,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 20,
        "lineEnd": 25,
        "columnStart": 7,
        "columnEnd": 24
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG UPSTREAM_REPO\nARG UPSTREAM_TAG\nFROM ${UPSTREAM_REPO:-uselagoon}/python-3.9:${UPSTREAM_TAG:-latest}\n\nRUN apk add --no-cache \\\n      bash \\\n      curl \\\n      gettext \\\n      git \\\n      jq \\\n      moreutils \\\n      openssh-client \\\n      rsync\n\nENV CRYPTOGRAPHY_DONT_BUILD_RUST=1\n\nRUN apk add --no-cache --virtual .build-deps \\\n      g++ \\\n      libffi-dev \\\n      openssl-dev \\\n    && pip install --no-cache-dir \\\n      ansible-core==2.11.* \\\n      PyJWT==2.3.* \\\n      requests==2.26.* \\\n      jmespath==0.10.* \\\n      kubernetes==21.7.* \\\n    && apk del .build-deps\n\nRUN ansible-galaxy collection install ansible.posix community.general kubernetes.core\n\n# download, extract and install kubectl binary\n# https://github.com/kubernetes/kubernetes/blob/master/CHANGELOG/CHANGELOG-1.20.md#downloads-for-v1204\nARG KUBECTL_URL=https://dl.k8s.io/v1.20.4/kubernetes-client-linux-amd64.tar.gz\nARG KUBECTL_SHA512=daf1ec0cbd14885170a51d2a09bf652bfaa4d26925c1b4babdc427d2a2903b1a295403320229cde2b415fee65a5af22671afa926f184cf198df7f17a27f19394\n# curl -> tee -> sha512sum -> grep\n#            `-> tar\nRUN { \\\n    { \\\n    curl -f -sSL $KUBECTL_URL | tee /dev/fd/3 | sha512sum >&4; \\\n} 3>&1 | tar -xz --strip-components=3 -C /usr/local/bin kubernetes/client/bin/kubectl; \\\n} 4>&1 | grep -q $KUBECTL_SHA512\n\nRUN git config --global user.email \"deploytest@amazee.io\" && git config --global user.name deploytest\n\nWORKDIR /ansible\nCOPY . /ansible\nCOPY hosts /etc/ansible/hosts\n\nENV ANSIBLE_FORCE_COLOR=true \\\n    SSH_AUTH_SOCK=/tmp/ssh-agent \\\n    KEYCLOAK_URL=http://keycloak:8080 \\\n    JWTSECRET=super-secret-string \\\n    JWTAUDIENCE=api.dev \\\n    JWTUSER=test-suite\n\nCOPY entrypoint.sh /\nENTRYPOINT [\"/entrypoint.sh\"]\nCMD exec /bin/bash -c \"trap : TERM INT; sleep infinity & wait\"\n"
}