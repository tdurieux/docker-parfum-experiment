{
  "startTime": 1674246756430,
  "endTime": 1674246758525,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 7,
        "columnEnd": 33
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 82,
        "lineEnd": 82,
        "columnStart": 7,
        "columnEnd": 28
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 21,
        "lineEnd": 26,
        "columnStart": 7,
        "columnEnd": 97
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Flatbuffers Dockerfile\n# https://github.com/neomantra/docker-flatbuffers\n\n###############################################################################\n# FlatBuffer Build\n###############################################################################\n\nARG FLATBUFFERS_IMAGE_BASE=\"debian\"\nARG FLATBUFFERS_IMAGE_TAG=\"stretch-slim\"\n\nFROM ${FLATBUFFERS_IMAGE_BASE}:${FLATBUFFERS_IMAGE_TAG} as flatbuffer_build\n\nARG FLATBUFFERS_ARCHIVE_BASE_URL=\"https://github.com/google/flatbuffers/archive\"\nARG FLATBUFFERS_ARCHIVE_TAG=\"1.11.0\"\nARG FLATBUFFERS_BUILD_TYPE=\"Release\"\n\n# Set to exactly \"true\" to use clang\nARG FLATBUFFERS_USE_CLANG=\"false\"\n\n\nRUN DEBIAN_FRONTEND=noninteractive apt-get update \\\n    && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \\\n        ca-certificates \\\n        cmake \\\n        curl \\\n        make \\\n        $( if [ \"${FLATBUFFERS_USE_CLANG}\" = \"true\" ] ; then echo \"clang\" ; else echo \"g++\" ; fi) && rm -rf /var/lib/apt/lists/*;\n\n\nRUN curl -fSL \"${FLATBUFFERS_ARCHIVE_BASE_URL}/${FLATBUFFERS_ARCHIVE_TAG}.tar.gz\" -o flatbuffers.tar.gz \\\n    && tar xzf flatbuffers.tar.gz \\\n    && cd flatbuffers-* \\\n    && env $( if [ \"${FLATBUFFERS_USE_CLANG}\" = \"true\" ] ; then echo \"CC=/usr/bin/clang CXX=/usr/bin/clang++ \" ; fi) \\\n           cmake -G \"Unix Makefiles\" -DCMAKE_BUILD_TYPE=${FLATBUFFERS_BUILD_TYPE} \\\n    && make \\\n    && make test \\\n    && make install \\\n    && cp src/idl_parser.cpp src/idl_gen_text.cpp /usr/local/include/flatbuffers && rm flatbuffers.tar.gz\n\n\n# Build artifacts:\n# -- Install configuration: \"Release\"\n# -- Installing: /usr/local/include/flatbuffers\n# -- Installing: /usr/local/include/flatbuffers/idl.h\n# -- Installing: /usr/local/include/flatbuffers/registry.h\n# -- Installing: /usr/local/include/flatbuffers/reflection.h\n# -- Installing: /usr/local/include/flatbuffers/flexbuffers.h\n# -- Installing: /usr/local/include/flatbuffers/flatc.h\n# -- Installing: /usr/local/include/flatbuffers/minireflect.h\n# -- Installing: /usr/local/include/flatbuffers/base.h\n# -- Installing: /usr/local/include/flatbuffers/grpc.h\n# -- Installing: /usr/local/include/flatbuffers/flatbuffers.h\n# -- Installing: /usr/local/include/flatbuffers/reflection_generated.h\n# -- Installing: /usr/local/include/flatbuffers/hash.h\n# -- Installing: /usr/local/include/flatbuffers/stl_emulation.h\n# -- Installing: /usr/local/include/flatbuffers/util.h\n# -- Installing: /usr/local/include/flatbuffers/code_generators.h\n# -- Installing: /usr/local/lib/cmake/flatbuffers/FlatbuffersConfig.cmake\n# -- Installing: /usr/local/lib/cmake/flatbuffers/FlatbuffersConfigVersion.cmake\n# -- Installing: /usr/local/lib/libflatbuffers.a\n# -- Installing: /usr/local/lib/cmake/flatbuffers/FlatbuffersTargets.cmake\n# -- Installing: /usr/local/lib/cmake/flatbuffers/FlatbuffersTargets-release.cmake\n# -- Installing: /usr/local/bin/flatc\n# -- Installing: /usr/local/lib/cmake/flatbuffers/FlatcTargets.cmake\n# -- Installing: /usr/local/lib/cmake/flatbuffers/FlatcTargets-release.cmake\n#\n# Also want:\n# src/idl_parser.cpp\n# src/idl_gen_text.cpp\n#\n\n\n###############################################################################\n# flatcc Build\n###############################################################################\n\n# Same build environment as FlatBuffer\n\nARG FLATCC_ARCHIVE_BASE_URL=\"https://github.com/dvidelabs/flatcc/archive/\"\nARG FLATCC_ARCHIVE_TAG=\"master\"\n\nRUN curl -fSL \"${FLATCC_ARCHIVE_BASE_URL}/${FLATCC_ARCHIVE_TAG}.tar.gz\" -o flatcc.tar.gz \\\n    && tar xzf flatcc.tar.gz \\\n    && mv flatcc-* flatcc \\\n    && cd flatcc \\\n    && env $( if [ \"${FLATBUFFERS_USE_CLANG}\" = \"true\" ] ; then echo \"CC=/usr/bin/clang CXX=/usr/bin/clang++ \" ; fi) \\\n        ./scripts/initbuild.sh make \\\n    && env $( if [ \"${FLATBUFFERS_USE_CLANG}\" = \"true\" ] ; then echo \"CC=/usr/bin/clang CXX=/usr/bin/clang++ \" ; fi) \\\n       ./scripts/build.sh && rm flatcc.tar.gz\n\n\n# Build artifacts:\n# Compiler:\n#   bin/flatcc                 (command line interface to schema compiler)\n#   lib/libflatcc.a            (optional, for linking with schema compiler)\n#   include/flatcc/flatcc.h    (optional, header and doc for libflatcc.a)\n# Runtime:\n#   include/flatcc/**          (runtime header files)\n#   include/flatcc/reflection  (optional)\n#   include/flatcc/support     (optional, only used for test and samples)\n#   lib/libflatccrt.a          (runtime library)\n\n\n###############################################################################\n# Final Image Composition\n###############################################################################\n\nFROM ${FLATBUFFERS_IMAGE_BASE}:${FLATBUFFERS_IMAGE_TAG}\n\nCOPY --from=flatbuffer_build /usr/local/bin/flatc /usr/local/bin/flatc\nCOPY --from=flatbuffer_build /usr/local/include/flatbuffers /usr/local/include/flatbuffers\nCOPY --from=flatbuffer_build /usr/local/lib/libflatbuffers.a /usr/local/lib/libflatbuffers.a\nCOPY --from=flatbuffer_build /usr/local/lib/cmake/flatbuffers /usr/local/lib/cmake/flatbuffers\n\nCOPY --from=flatbuffer_build /flatcc/bin/flatcc /usr/local/bin/flatcc\nCOPY --from=flatbuffer_build /flatcc/include/flatcc /usr/local/include/flatcc\nCOPY --from=flatbuffer_build /flatcc/lib/*.a /usr/local/lib/\n\nARG FLATBUFFERS_USE_CLANG=\"false\"\nARG FLATBUFFERS_ARCHIVE_BASE_URL=\"https://github.com/google/flatbuffers/archive\"\nARG FLATBUFFERS_ARCHIVE_TAG=\"master\"\nARG FLATBUFFERS_BUILD_TYPE=\"Release\"\nARG FLATCC_ARCHIVE_BASE_URL=\"https://github.com/dvidelabs/flatcc/archive/\"\nARG FLATCC_ARCHIVE_TAG=\"master\"\n\nLABEL maintainer=\"Evan Wies <evan@neomantra.net>\"\nLABEL FLATBUFFERS_IMAGE_BASE=\"${FLATBUFFERS_IMAGE_BASE}\"\nLABEL FLATBUFFERS_IMAGE_TAG=\"${FLATBUFFERS_IMAGE_TAG}\"\nLABEL FLATBUFFERS_USE_CLANG=\"${FLATBUFFERS_USE_CLANG}\"\nLABEL FLATBUFFERS_ARCHIVE_BASE_URL=\"${FLATBUFFERS_ARCHIVE_BASE_URL}\"\nLABEL FLATBUFFERS_ARCHIVE_TAG=\"${FLATBUFFERS_ARCHIVE_TAG}\"\nLABEL FLATBUFFERS_BUILD_TYPE=\"${FLATBUFFERS_BUILD_TYPE}\"\nLABEL FLATCC_ARCHIVE_BASE_URL=\"${FLATCC_ARCHIVE_BASE_URL}\"\nLABEL FLATCC_ARCHIVE_TAG=\"${FLATCC_ARCHIVE_TAG}\""
}