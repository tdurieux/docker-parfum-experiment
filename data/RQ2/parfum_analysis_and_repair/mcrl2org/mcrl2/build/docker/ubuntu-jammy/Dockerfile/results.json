{
  "startTime": 1674220805788,
  "endTime": 1674220806638,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 23,
        "columnStart": 22,
        "columnEnd": 9
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 23,
        "columnStart": 22,
        "columnEnd": 9
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 20,
        "columnStart": 22,
        "columnEnd": 9
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:jammy\n\n# 1. Install packages needed for compiling and testing the tools\nARG DEBIAN_FRONTEND=noninteractive\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n build-essential \\\n cmake \\\n git \\\n libboost-dev \\\n libgl1-mesa-dev \\\n qtbase5-dev \\\n\n\n python3-psutil \\\n python3-yaml \\\n\n doxygen \\\n python3-pip \\\n sphinx-common \\\n swig \\\n texlive \\\n texlive-latex-extra \\\n texlive-science \\\n xsltproc && rm -rf /var/lib/apt/lists/*;\n\n# This package is not available in the ubuntu repository\nRUN pip install --no-cache-dir --user dparser\n\n# 2. Clone the git repository in the home directory\nRUN cd ~/ && git clone -b release-202206 https://github.com/mcrl2org/mcrl2.git mcrl2\n\n# 3. Configure out of source build\nRUN mkdir ~/mcrl2-build && cd ~/mcrl2-build && cmake . \\\n -DCMAKE_BUILD_TYPE=RELEASE \\\n -DBUILD_SHARED_LIBS=ON \\\n -DMCRL2_ENABLE_DOCUMENTATION=ON \\\n -DMCRL2_ENABLE_DEVELOPER=OFF \\\n -DMCRL2_ENABLE_DEPRECATED=OFF \\\n -DMCRL2_ENABLE_EXPERIMENTAL=OFF \\\n -DMCRL2_ENABLE_GUI_TOOLS=ON \\\n -DMCRL2_PACKAGE_RELEASE=ON \\\n -DCMAKE_INSTALL_PREFIX=`pwd`/install \\\n ~/mcrl2\n\n# 4. Build the toolset\nRUN cd ~/mcrl2-build && make -j8\n\n# 5. Package the build\nRUN cd ~/mcrl2-build && cpack -G DEB\n\n# 6. Test the toolset; tests require the experimental tools.\nRUN cd ~/mcrl2-build \\\n    && cmake -DMCRL2_ENABLE_EXPERIMENTAL=ON \\\n             -DMCRL2_ENABLE_TESTS=ON . \\\n    && make -j8 \\\n    && ctest . -j8\n\n# 7. Build the documentation\nRUN cd ~/mcrl2-build && make doc"
}