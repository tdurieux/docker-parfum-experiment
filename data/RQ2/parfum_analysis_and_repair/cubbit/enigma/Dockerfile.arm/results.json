{
  "startTime": 1674252364735,
  "endTime": 1674252365853,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 76
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 9
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG TARGET_ARCH\n\nFROM dockcross/linux-${TARGET_ARCH}-lts\n\nARG TARGET_ARCH\n\nLABEL MAINTAINER=\"Cubbit srl <connect@cubbit.io>\"\n\nENV NODE_VERSION=14.18.3\nENV TARGET_ARCH=${TARGET_ARCH}\nENV CROSS_COMPILE=\"\"\nENV npm_config_arch=${TARGET_ARCH}\n\nRUN echo \"Selected target architecture: ${TARGET_ARCH}\"\n\nRUN curl -f -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.0/install.sh | bash\nENV NVM_DIR=/root/.nvm\nRUN . \"$NVM_DIR/nvm.sh\" && nvm install ${NODE_VERSION}\nRUN . \"$NVM_DIR/nvm.sh\" && nvm use v${NODE_VERSION}\nRUN . \"$NVM_DIR/nvm.sh\" && nvm alias default v${NODE_VERSION}\nENV PATH=\"/root/.nvm/versions/node/v${NODE_VERSION}/bin/:${PATH}\"\n\nWORKDIR /module\n\nCOPY package.json .\nCOPY package-lock.json .\nCOPY tsconfig.json .\nCOPY tslint.json .\nCOPY binding.gyp .\n\nRUN npm i && npm cache clean --force;\n\nCOPY scripts/node/dependencies.js ./scripts/node/\nCOPY scripts/node/shell ./scripts/node/shell/\n\nRUN node scripts/node/dependencies.js\n\nCOPY scripts/node/binary.js ./scripts/node/\nCOPY scripts/node/install.js ./scripts/node/\nCOPY scripts/web ./scripts/web/\nCOPY scripts/publish.js ./scripts/\n\nCOPY bindings ./bindings/\nCOPY src ./src/\n\nRUN npm run build\n\nVOLUME [ \"/module/build/stage\" ]\n\nCOPY scripts/node/docker/entrypoint.sh /entrypoint.sh\nRUN chmod +x /entrypoint.sh\n\nENTRYPOINT [\"/entrypoint.sh\"]"
}