{
  "startTime": 1674221048622,
  "endTime": 1674221049537,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 44,
        "columnEnd": 55
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 43
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.15\nLABEL maintainer=\"guy.pascarella@gmail.com\"\n#based on disrvptor/osm2pgsql\n\nENV HOME /root\nENV OSM2PGSQL_VERSION 1.5.1\n\nRUN apk update\n\n# Install the things we want to stick around\nRUN apk add --no-cache \\\n\tlibgcc \\\n\tlibstdc++ \\\n\tboost-filesystem \\\n\tboost-system \\\n\tboost-thread \\\n\texpat \\\n\tlibbz2 \\\n\tpostgresql-libs \\\n\tlibpq \\\n\tgeos \\\n\tproj \\\n\tlua5.2 \\\n\tlua5.2-libs\n\n# Install develop tools and dependencies, build osm2pgsql and remove develop tools and dependencies\nRUN apk add --no-cache --virtual .osm2pgsql-deps\\\n\tmake \\\n\tcmake \\\n\texpat-dev \\\n\tg++ \\\n\tgit \\\n\tboost-dev \\\n\tzlib-dev \\\n\tbzip2-dev \\\n\tproj-dev \\\n\tgeos-dev \\\n\tlua5.2-dev \\\n\tpostgresql-dev &&\\\n\tcd $HOME &&\\\n\tmkdir src &&\\\n\tcd src &&\\\n\tgit clone --depth 1 --branch $OSM2PGSQL_VERSION https://github.com/openstreetmap/osm2pgsql.git &&\\\n\tcd osm2pgsql &&\\\n\tmkdir build &&\\\n\tcd build &&\\\n\tcmake -DLUA_LIBRARY=/usr/lib/liblua-5.2.so.0 .. &&\\\n\tmake &&\\\n\tmake install &&\\\n\tcd $HOME &&\\\n\trm -rf src &&\\\n\tapk --purge del .osm2pgsql-deps\n\n\nRUN apk add --no-cache --virtual .osmctools-deps make g++ git autoconf automake libtool zlib-dev && \\\n  git clone --depth 1 https://gitlab.com/osm-c-tools/osmctools.git && \\\n  cd osmctools &&  autoreconf --install && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make install && \\\n  rm -rf /osmctools && \\\n  apk --purge del .osmctools-deps\n\nRUN apk add --no-cache bash npm postgresql-client curl\nRUN npm install -g osmtogeojson && npm cache clean --force;\n\nCOPY start.sh /\nRUN chmod +x /start.sh\nENTRYPOINT [\"/start.sh\"]\n"
}