{
  "startTime": 1674221252062,
  "endTime": 1674221252589,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 44
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 32,
        "columnEnd": 48
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 22,
        "columnEnd": 38
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 48,
        "columnEnd": 64
      }
    }
  ],
  "repairedDockerfile": "# ================ #\n#    Base Stage    #\n# ================ #\n\nFROM node:18-alpine as base\n\nWORKDIR /usr/src/app\n\nENV HUSKY=0\nENV CI=true\nENV LOG_LEVEL=info\n\n# RUN apk add --no-cache dumb-init\n\nCOPY --chown=node:node yarn.lock .\nCOPY --chown=node:node package.json .\nCOPY --chown=node:node .yarnrc.yml .\nCOPY --chown=node:node .yarn/ .yarn/\nCOPY --chown=node:node .env .env\n\nRUN sed -i 's/\"postinstall\": \"husky install .github\\/husky\"/\"postinstall\": \"\"/' ./package.json\n\n# ENTRYPOINT [\"dumb-init\", \"--\"]\n\n# ================ #\n#   Builder Stage  #\n# ================ #\n\nFROM base as builder\n\nENV NODE_ENV=\"development\"\n\nCOPY --chown=node:node tsconfig.base.json .\nCOPY --chown=node:node tsup.config.ts .\nCOPY --chown=node:node scripts/ scripts/\nCOPY --chown=node:node src/ src/\n\nRUN yarn install --immutable && yarn cache clean;\nRUN yarn run build && yarn cache clean;\n\n# ================ #\n#   Runner Stage   #\n# ================ #\n\nFROM base AS runner\n\nENV NODE_ENV=\"production\"\nENV NODE_OPTIONS=\"--enable-source-maps\"\n\nWORKDIR /usr/src/app\n\nCOPY --chown=node:node --from=builder /usr/src/app/dist dist\n\nRUN yarn workspaces focus --all --production && yarn cache clean;\nRUN chown node:node /usr/src/app/\n\nUSER node\n\nCMD [ \"yarn\", \"run\", \"start\"]\n"
}