{
  "startTime": 1674248572095,
  "endTime": 1674248573135,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 1,
        "columnEnd": 32
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 1,
        "columnEnd": 18
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 22,
        "columnEnd": 88
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 22,
        "columnEnd": 88
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#--------- Generic stuff all our Dockerfiles should start with so we get caching ------------\n# Note this base image is based on debian\nFROM kartoza/django-base:3.7\nMAINTAINER Dimas Ciputra<dimas@kartoza.com>\n\n#RUN  ln -s /bin/true /sbin/initctl\nRUN apt-get clean all\nRUN apt-get update && apt-get install --no-install-recommends -y libsasl2-dev python-dev libldap2-dev libssl-dev && rm -rf /var/lib/apt/lists/*;\n\nARG BRANCH_TAG=develop\nRUN mkdir -p /usr/src; rm -rf /usr/src mkdir -p /home/web && \\\n            git clone --depth=1 git://github.com/qgis/QGIS-Django.git --branch ${BRANCH_TAG} /usr/src/plugins/ && \\\n            rm -rf /home/web/django_project && \\\n\t        ln -s /usr/src/plugins/qgis-app /home/web/django_project\n\nRUN cd /usr/src/plugins/dockerize/docker && \\\n\tpip install --no-cache-dir -r REQUIREMENTS.txt && \\\n\tpip install --no-cache-dir uwsgi && \\\n\trm -rf /uwsgi.conf && \\\n\tln -s ${PWD}/uwsgi.conf /uwsgi.conf\n\n# Open port 8080 as we will be running our uwsgi socket on that\nEXPOSE 8080\n\n#USER www-data\n\nWORKDIR /home/web/django_project\nCMD [\"uwsgi\", \"--ini\", \"/uwsgi.conf\"]\n"
}