{
  "startTime": 1674250975122,
  "endTime": 1674250976102,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 55
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 61,
        "lineEnd": 62,
        "columnStart": 4,
        "columnEnd": 113
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG PHP_VERSION=7.2\n\nFROM php:${PHP_VERSION}-cli-alpine3.10\nLABEL maintainer=\"Petar ObradoviÄ‡ <petar.obradovic@trikoder.net>\"\n\nARG COMPOSER_VERSION=1.9.3\nARG FLEX_VERSION=1.6.2\nARG PHP_CS_FIXER_VERSION=2.16.2\nARG TIMECOP_VERSION=1.2.10\nARG XDEBUG_VERSION=2.9.2\n\nENV XDEBUG_REMOTE_AUTOSTART 0\nENV TIMECOP_FUNC_OVERRIDE 0\n\n# This is where we're going to store all of our non-project specific binaries\nRUN mkdir -p /app/bin\nENV PATH /app/bin:$PATH\n\n# Install needed core and PECL extensions\nRUN apk add --update --no-cache --virtual .build-deps \\\n        ${PHPIZE_DEPS} \\\n        libxml2-dev \\\n        libzip-dev \\\n        zlib-dev \\\n    && docker-php-ext-install -j $(getconf _NPROCESSORS_ONLN) \\\n        xml \\\n        zip \\\n    && pecl install \\\n        xdebug-${XDEBUG_VERSION} \\\n        timecop-${TIMECOP_VERSION} \\\n    && docker-php-ext-enable \\\n        xdebug \\\n        timecop \\\n    && apk del --purge .build-deps\n\nRUN mv ${PHP_INI_DIR}/php.ini-development ${PHP_INI_DIR}/php.ini\n\nRUN echo '[xdebug]' >> ${PHP_INI_DIR}/conf.d/docker-php-ext-xdebug.ini \\\n    && echo 'xdebug.remote_autostart = ${XDEBUG_REMOTE_AUTOSTART}' >> ${PHP_INI_DIR}/conf.d/docker-php-ext-xdebug.ini \\\n    && echo 'xdebug.remote_enable = 1' >> ${PHP_INI_DIR}/conf.d/docker-php-ext-xdebug.ini \\\n    && echo 'xdebug.remote_connect_back = 0' >> ${PHP_INI_DIR}/conf.d/docker-php-ext-xdebug.ini \\\n    && echo 'xdebug.remote_host = %XDEBUG_REMOTE_HOST%' >> ${PHP_INI_DIR}/conf.d/docker-php-ext-xdebug.ini\n\nRUN echo '[timecop]' >> ${PHP_INI_DIR}/conf.d/docker-php-ext-timecop.ini \\\n    && echo 'timecop.func_override = ${TIMECOP_FUNC_OVERRIDE}' >> ${PHP_INI_DIR}/conf.d/docker-php-ext-timecop.ini\n\n# Utilities needed to run this image\nRUN apk add --update --no-cache \\\n        git \\\n        libzip \\\n        unzip \\\n        su-exec \\\n        shadow\n\n# Composer\nRUN curl -f --show-error https://getcomposer.org/installer | php -- \\\n        --install-dir=/app/bin \\\n        --filename=composer \\\n        --version=${COMPOSER_VERSION}\n\n# PHP-CS-Fixer\nRUN curl -f --location --output /app/bin/php-cs-fixer --show-error \\\n        https://github.com/FriendsOfPHP/PHP-CS-Fixer/releases/download/v${PHP_CS_FIXER_VERSION}/php-cs-fixer.phar \\\n    && chmod a+x /app/bin/php-cs-fixer\n\n# Create the user that's going to run our application\nRUN useradd -ms /bin/sh app\n\n# Enable parallel package installation for Composer\nRUN su-exec app composer global require symfony/flex:${FLEX_VERSION}\n\nCOPY entrypoint.sh /usr/local/bin/docker-entrypoint\n\nVOLUME /app/src\nWORKDIR /app/src\n\nENTRYPOINT [\"docker-entrypoint\"]\nCMD [\"php\", \"-a\"]\n"
}