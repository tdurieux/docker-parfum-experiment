{
  "startTime": 1674249184296,
  "endTime": 1674249185732,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 4,
        "columnEnd": 86
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 74,
        "lineEnd": 74,
        "columnStart": 4,
        "columnEnd": 92
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 81,
        "lineEnd": 81,
        "columnStart": 4,
        "columnEnd": 104
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 95,
        "lineEnd": 95,
        "columnStart": 4,
        "columnEnd": 82
      }
    },
    {
      "rule": "rmRecursiveAfterMktempD",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 10,
        "columnEnd": 19
      }
    },
    {
      "rule": "rmRecursiveAfterMktempD",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 10,
        "columnEnd": 19
      }
    },
    {
      "rule": "rmRecursiveAfterMktempD",
      "position": {
        "lineStart": 73,
        "lineEnd": 73,
        "columnStart": 10,
        "columnEnd": 19
      }
    },
    {
      "rule": "rmRecursiveAfterMktempD",
      "position": {
        "lineStart": 80,
        "lineEnd": 80,
        "columnStart": 10,
        "columnEnd": 19
      }
    },
    {
      "rule": "rmRecursiveAfterMktempD",
      "position": {
        "lineStart": 94,
        "lineEnd": 94,
        "columnStart": 10,
        "columnEnd": 19
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 95,
        "lineEnd": 95,
        "columnStart": 4,
        "columnEnd": 82
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 4,
        "columnEnd": 98
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 4,
        "columnEnd": 69
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 97,
        "lineEnd": 145,
        "columnStart": 3,
        "columnEnd": 24
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 96,
        "lineEnd": 96,
        "columnStart": 4,
        "columnEnd": 67
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.13.5 as builder\n\nARG ALPMIRROR\nARG PIPMIRROR\n\nENV PKG_CONFIG_PATH=/usr/local/lib/pkgconfig \\\n    SRC=/usr/local\n\nARG FDKAAC_VERSION=0.1.5\nARG X264_VERSION=20191217-2245-stable\nARG X265_VERSION=3.4\nARG FFMPEG_VERSION=\"4.4\"\nARG OPENMPT_VERSION=0.2.8760-beta27\n\nCOPY scripts /mediakraken\nRUN mkdir /mediakraken/install\nCOPY scripts/vid.stab.0.98b /mediakraken/install/vid.stab.0.98b\n\nRUN buildDeps=\"autoconf \\\n        automake \\\n        bash \\\n        binutils \\\n        bzip2 \\\n        cmake \\\n        curl \\\n        coreutils \\\n        g++ \\\n        gcc \\\n        git \\\n        gnupg \\\n        gnutls-dev \\\n        fontconfig-dev \\\n        freetype-dev \\\n        lame-dev \\\n        libass-dev \\\n        libmodplug-dev \\\n        libogg-dev \\\n        rtmpdump-dev \\\n        libtheora-dev \\\n        libtool \\\n        libva-dev \\\n        libvdpau-dev \\\n        libvorbis-dev \\\n        libvpx-dev \\\n        libwebp-dev \\\n        make \\\n        nasm \\\n        openjpeg-dev \\\n        opus-dev \\\n        python3-dev \\\n        samba-dev \\\n        speex-dev \\\n        soxr-dev \\\n        tar \\\n        xvidcore-dev \\\n        xz \\\n        yasm \\\n        zlib-dev\" && \\\n    export MAKEFLAGS=\"-j$(($(grep -c ^processor /proc/cpuinfo) + 1))\" && \\\n    apk add --no-cache ${buildDeps} libgcc==10.2.1_pre1-r3 libstdc++==10.2.1_pre1-r3 ca-certificates==20191127-r5 busybox==1.32.1-r6 && \\\n    DIR=$(mktemp -d) && cd ${DIR} && \\\n    git clone https://code.videolan.org/videolan/x264.git && \\\n    cd x264 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"${SRC}\" --bindir=\"${SRC}/bin\" --enable-pic --enable-shared --disable-cli && \\\n    make -j`getconf _NPROCESSORS_ONLN` && \\\n    make install && \\\n    DIR=$(mktemp -d) && cd ${DIR} && \\\n    curl -f -L --insecure https://github.com/videolan/x265/archive/${X265_VERSION}.tar.gz | \\\n    tar -zx --strip-components=1 && \\\n    cd build/linux && \\\n    cmake -G \"Unix Makefiles\" ../../source && \\\n    make -j`getconf _NPROCESSORS_ONLN` && \\\n    make install && \\\n    DIR=$(mktemp -d) && cd ${DIR} && \\\n    curl -f -L --insecure https://github.com/mstorsjo/fdk-aac/archive/v${FDKAAC_VERSION}.tar.gz | \\\n    tar -zx --strip-components=1 && \\\n    autoreconf -fiv && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"${SRC}\" --disable-static --datadir=\"${DIR}\" && \\\n    make -j`getconf _NPROCESSORS_ONLN` && \\\n    make install && \\\n    DIR=$(mktemp -d) && cd ${DIR} && \\\n    curl -f -L --insecure https://lib.openmpt.org/files/libopenmpt/src/libopenmpt-${OPENMPT_VERSION}.tar.gz | \\\n    tar -zx --strip-components=1 && \\\n    make EXAMPLES=0 && \\\n    make install && \\\n    chmod +x /mediakraken/*.sh && \\\n    /mediakraken/kvazaar.sh && \\\n    /mediakraken/openh264.sh && \\\n    /mediakraken/vidstab.sh && \\\n    # nvenc headers for ffmpeg\n    git clone https://git.videolan.org/git/ffmpeg/nv-codec-headers.git && \\\n    cd nv-codec-headers && \\\n    make -j`getconf _NPROCESSORS_ONLN` && \\\n    make install && \\\n    DIR=$(mktemp -d) && cd ${DIR} && \\\n    curl -f -LO --insecure https://ffmpeg.org/releases/ffmpeg-${FFMPEG_VERSION}.tar.gz && \\\n    tar -zx --strip-components=1 -f ffmpeg-${FFMPEG_VERSION}.tar.gz && \\\n   ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n    --target-os=linux \\\n        --bindir=\"${SRC}/bin\" \\\n        --extra-libs=-ldl \\\n        --extra-cflags=\"-I${SRC}/include\" \\\n        --extra-ldflags=\"-L${SRC}/lib\" \\\n        --extra-cflags=\"-I/usr/local/cuda-10.0/include/\" \\\n        --extra-ldflags=-L/usr/local/cuda-10.0/lib64/ \\\n        --prefix=\"${SRC}\" \\\n        --enable-avfilter \\\n        --enable-avresample \\\n        --enable-fontconfig \\\n        --enable-gpl \\\n        --enable-libass \\\n        --enable-libfdk_aac \\\n        --enable-fontconfig \\\n        --enable-libfreetype \\\n        --enable-libkvazaar \\\n        --enable-libmodplug \\\n        --enable-libmp3lame \\\n        --enable-libopenh264 \\\n        --enable-libopenjpeg \\\n        --enable-libopenmpt \\\n        --enable-libopus \\\n        --enable-librtmp \\\n        --enable-libsoxr \\\n        --enable-libsmbclient \\\n        --enable-libspeex \\\n        --enable-libtheora \\\n        --enable-libwebp \\\n        --enable-vaapi \\\n        --enable-libvidstab \\\n        --enable-libvorbis \\\n        --enable-libvpx \\\n        --enable-libx264 \\\n        --enable-libx265 \\\n        --enable-libxvid \\\n        --enable-nonfree \\\n        --enable-postproc \\\n        --enable-pthreads \\\n        --enable-shared \\\n        --enable-small \\\n        --enable-vdpau \\\n        --enable-version3 \\\n        --enable-zlib \\\n        --disable-debug \\\n        --disable-doc \\\n        --disable-static \\\n        --disable-ffplay && \\\n    make -j`getconf _NPROCESSORS_ONLN` && \\\n    make install && \\\n    hash -r && rm -rf -d && rm ffmpeg-${FFMPEG_VERSION}.tar.gz\n\nFROM alpine:3.13.5\n\nCOPY --from=builder /usr/local/bin/ffmpeg /usr/local/bin/ffmpeg\nCOPY --from=builder /usr/local/bin/ffprobe /usr/local/bin/ffprobe\nCOPY --from=builder /usr/local/lib /usr/local/lib\n\n# busybox isn't r6 due to other dependancy\nRUN apk add --no-cache \\\n    busybox==1.32.1-r6 \\\n    bash==5.1.0-r0 \\\n    samba-client==4.13.8-r0 \\\n    lame==3.100-r0 \\\n    libass==0.15.0-r0 \\\n    libmodplug==0.8.9.0-r0 \\\n    libogg==1.3.4-r0 \\\n    libtheora==1.1.1-r16 \\\n    libvorbis==1.3.7-r0 \\\n    opus==1.3.1-r1 \\\n    speex==1.2.0-r0 \\\n    xvidcore==1.3.7-r1 \\\n    freetype==2.10.4-r1 \\\n    zlib==1.2.11-r3 \\\n    openjpeg==2.4.0-r1 \\\n    libwebp==1.1.0-r0 \\\n    soxr==0.1.3-r2 \\\n    fontconfig==2.13.1-r3 \\\n    libvpx==1.9.0-r0 \\\n    librtmp==2.4_git20190330-r1 \\\n    libva==2.10.0-r0 \\\n    libvdpau==1.4-r0 \\\n    libva-intel-driver==2.4.1-r0 \\\n    && rm -Rf /home/* && \\\n    ffmpeg -buildconf\n\n# will create gid 1000 error in later images\n#   adduser -DHs /sbin/nologin metaman\n# Do NOT do the below as other containers won't have rights to install/build.\n# USER metaman\n\nCMD [\"--help\"]\nWORKDIR /tmp/ffmpeg\n"
}