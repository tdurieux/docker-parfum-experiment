{
  "startTime": 1674253723981,
  "endTime": 1674253726051,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 120,
        "lineEnd": 120,
        "columnStart": 1,
        "columnEnd": 27
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 146,
        "lineEnd": 146,
        "columnStart": 27,
        "columnEnd": 103
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 193,
        "lineEnd": 195,
        "columnStart": 1,
        "columnEnd": 116
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 318,
        "lineEnd": 320,
        "columnStart": 1,
        "columnEnd": 73
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 154,
        "lineEnd": 184,
        "columnStart": 1,
        "columnEnd": 21
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 201,
        "lineEnd": 202,
        "columnStart": 1,
        "columnEnd": 14
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 214,
        "lineEnd": 216,
        "columnStart": 1,
        "columnEnd": 29
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 196,
        "lineEnd": 198,
        "columnStart": 1,
        "columnEnd": 35
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM lsiobase/alpine:arm64v8-3.12 as buildstage\n############## build stage ##############\n\n# package versions\nARG ARGTABLE_VER=\"2.13\"\nARG XMLTV_VER=\"v0.6.1\"\n\n# environment settings\nARG TZ=\"Europe/Oslo\"\nARG TVHEADEND_COMMIT\nENV HOME=\"/config\"\n\n# copy patches\nCOPY patches/ /tmp/patches/\n\nRUN \\\n echo \"**** install build packages ****\" && \\\n apk add --no-cache \\\n\tautoconf \\\n\tautomake \\\n\tbsd-compat-headers \\\n\tbzip2 \\\n\tcmake \\\n\tcurl \\\n\tffmpeg-dev \\\n\tfile \\\n\tfindutils \\\n\tg++ \\\n\tgcc \\\n\tgettext-dev \\\n\tgit \\\n\tgnu-libiconv-dev \\\n\tgzip \\\n\tjq \\\n\tlibcurl \\\n\tlibdvbcsa-dev \\\n\tlibgcrypt-dev \\\n\tlibhdhomerun-dev \\\n\tlibtool \\\n\tlibvpx-dev \\\n\tlibxml2-dev \\\n\tlibxslt-dev \\\n\tlinux-headers \\\n\tmake \\\n\topenssl-dev \\\n\topus-dev \\\n\tpatch \\\n\tpcre2-dev \\\n\tperl-archive-zip \\\n\tperl-boolean \\\n\tperl-capture-tiny \\\n\tperl-cgi \\\n\tperl-compress-raw-zlib \\\n\tperl-data-dumper \\\n\tperl-date-manip \\\n\tperl-datetime \\\n\tperl-datetime-format-strptime \\\n\tperl-datetime-timezone \\\n\tperl-dbd-sqlite \\\n\tperl-dbi \\\n\tperl-dev \\\n\tperl-digest-sha1 \\\n\tperl-doc \\\n\tperl-file-slurp \\\n\tperl-file-temp \\\n\tperl-file-which \\\n\tperl-getopt-long \\\n\tperl-html-parser \\\n\tperl-html-tree \\\n\tperl-http-cookies \\\n\tperl-io \\\n\tperl-io-compress \\\n\tperl-io-html \\\n\tperl-io-socket-ssl \\\n\tperl-io-stringy \\\n\tperl-json \\\n\tperl-json-xs \\\n\tperl-libwww \\\n\tperl-lingua-en-numbers-ordinate \\\n\tperl-lingua-preferred \\\n\tperl-list-moreutils \\\n\tperl-lwp-useragent-determined \\\n\tperl-module-build \\\n\tperl-module-pluggable \\\n\tperl-net-ssleay \\\n\tperl-parse-recdescent \\\n\tperl-path-class \\\n\tperl-scalar-list-utils \\\n\tperl-term-progressbar \\\n\tperl-term-readkey \\\n\tperl-test-exception \\\n\tperl-test-requires \\\n\tperl-timedate \\\n\tperl-try-tiny \\\n\tperl-unicode-string \\\n\tperl-xml-libxml \\\n\tperl-xml-libxslt \\\n\tperl-xml-parser \\\n\tperl-xml-sax \\\n\tperl-xml-treepp \\\n\tperl-xml-twig \\\n\tperl-xml-writer \\\n\tpkgconf \\\n\tpngquant \\\n\tpython2 \\\n\tsdl-dev \\\n\ttar \\\n\turiparser-dev \\\n\twget \\\n\tx264-dev \\\n\tx265-dev \\\n\tzlib-dev\t\n\nRUN \\\n echo \"**** remove musl iconv.h and replace with gnu-iconv.h ****\" && \\\n rm -rf /usr/include/iconv.h && \\\n cp /usr/include/gnu-libiconv/iconv.h /usr/include/iconv.h\n\nRUN \\\n echo \"**** install perl modules for xmltv ****\" && \\\n curl -f -L https://cpanmin.us | perl - App::cpanminus && \\\n cpanm --installdeps /tmp/patches\n\nRUN \\\n echo \"**** compile XMLTV ****\" && \\\n git clone https://github.com/XMLTV/xmltv.git /tmp/xmltv && \\\n cd /tmp/xmltv && \\\n git checkout ${XMLTV_VER} && \\\n echo \"**** Fix test for xmltv alpine 3.11 ****\" && \\\n patch -p1 -i /tmp/patches/test_tv_imdb.t.patch && \\\n echo \"**** Perl 5.26 fixes for XMTLV ****\" && \\\n sed \"s/use POSIX 'tmpnam';//\" -i filter/tv_to_latex && \\\n sed \"s/use POSIX 'tmpnam';//\" -i filter/tv_to_text && \\\n sed \"s/\\(lib\\/set_share_dir.pl';\\)/.\\/\\1/\" -i grab/it/tv_grab_it.PL && \\\n sed \"s/\\(filter\\/Grep.pm';\\)/.\\/\\1/\" -i filter/tv_grep.PL && \\\n sed \"s/\\(lib\\/XMLTV.pm.in';\\)/.\\/\\1/\" -i lib/XMLTV.pm.PL && \\\n sed \"s/\\(lib\\/Ask\\/Term.pm';\\)/.\\/\\1/\" -i Makefile.PL && \\\n PERL5LIB=`pwd` && \\\n echo -e \"yes\" | perl Makefile.PL PREFIX=/usr/ INSTALLDIRS=vendor && \\\n make -j 2 && \\\n make test && \\\n make DESTDIR=/tmp/xmltv-build install\n\nRUN \\\n echo \"**** compile tvheadend ****\" && \\\n if [ -z ${TVHEADEND_COMMIT+x} ]; then \\\n        TVHEADEND_COMMIT=$( curl -f -sX GET https://api.github.com/repos/tvheadend/tvheadend/commits/master \\\n        | jq -r '. | .sha') ; \\\n fi && \\\n mkdir -p \\\n        /tmp/tvheadend && \\\n git clone https://github.com/tvheadend/tvheadend.git /tmp/tvheadend && \\\n cd /tmp/tvheadend && \\\n git checkout ${TVHEADEND_COMMIT} && \\\n ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n\t`#Encoding` \\\n\t--disable-ffmpeg_static \\\n\t--disable-libfdkaac_static \\\n\t--disable-libtheora_static \\\n\t--disable-libopus_static \\\n\t--disable-libvorbis_static \\\n\t--disable-libvpx_static \\\n\t--disable-libx264_static \\\n\t--disable-libx265_static \\\n\t--disable-libfdkaac \\\n\t--enable-libopus \\\n\t--enable-libvorbis \\\n\t--enable-libvpx \\\n\t--enable-libx264 \\\n\t--enable-libx265 \\\n\n\t`#Options` \\\n\t--disable-avahi \\\n\t--disable-dbus_1 \\\n\t--disable-bintray_cache \\\n\t--disable-hdhomerun_static \\\n\t--enable-hdhomerun_client \\\n\t--enable-libav \\\n\t--enable-pngquant \\\n\t--enable-trace \\\n\t--infodir=/usr/share/info \\\n\t--localstatedir=/var \\\n\t--mandir=/usr/share/man \\\n\t--prefix=/usr \\\n\t--sysconfdir=/config && \\\n make -j 2 && \\\n make DESTDIR=/tmp/tvheadend-build install\n\nRUN \\\n echo \"**** compile argtable2 ****\" && \\\n ARGTABLE_VER1=\"${ARGTABLE_VER//./-}\" && \\\n mkdir -p \\\n\t/tmp/argtable && \\\n curl -f -o \\\n /tmp/argtable-src.tar.gz -L \\\n\t\"https://sourceforge.net/projects/argtable/files/argtable/argtable-${ARGTABLE_VER}/argtable${ARGTABLE_VER1}.tar.gz\" && \\\n tar xf \\\n /tmp/argtable-src.tar.gz -C \\\n\t/tmp/argtable --strip-components=1 && \\\n cp /tmp/patches/config.* /tmp/argtable && \\\n cd /tmp/argtable && \\\n ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n\t--prefix=/usr && \\\n make -j 2 && \\\n make check && \\\n make DESTDIR=/tmp/argtable-build install && \\\n echo \"**** copy to /usr for comskip dependency ****\" && \\\n cp -pr /tmp/argtable-build/usr/* /usr/ && rm /tmp/argtable-src.tar.gz\n\nRUN \\\n echo \"***** compile comskip ****\" && \\\n git clone git://github.com/erikkaashoek/Comskip /tmp/comskip && \\\n cd /tmp/comskip && \\\n ./autogen.sh && \\\n ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n\t--bindir=/usr/bin \\\n\t--sysconfdir=/config/comskip && \\\n make -j 2 && \\\n make DESTDIR=/tmp/comskip-build install\n\n############## runtime stage ##############\nFROM lsiobase/alpine:arm64v8-3.12\n\n# set version label\nARG BUILD_DATE\nARG VERSION\nLABEL build_version=\"Linuxserver.io version:- ${VERSION} Build-date:- ${BUILD_DATE}\"\nLABEL maintainer=\"saarg\"\n\n# environment settings\nENV HOME=\"/config\"\n\nRUN \\\n echo \"**** install runtime packages ****\" && \\\n apk add --no-cache \\\n\tbsd-compat-headers \\\n\tbzip2 \\\n\tcurl \\\n\tffmpeg \\\n\tffmpeg-libs \\\n\tgnu-libiconv \\\n\tgzip \\\n\tlibcrypto1.1 \\\n\tlibcurl \\\n\tlibdvbcsa \\\n\tlibhdhomerun-libs \\\n\tlibssl1.1 \\\n\tlibvpx \\\n\tlibxml2 \\\n\tlibxslt \\\n\tlinux-headers \\\n\topenssl \\\n\topus \\\n\tpcre2 \\\n\tperl \\\n\tperl-archive-zip \\\n\tperl-boolean \\\n\tperl-capture-tiny \\\n\tperl-cgi \\\n\tperl-compress-raw-zlib \\\n\tperl-data-dumper \\\n\tperl-date-manip \\\n\tperl-datetime \\\n\tperl-datetime-format-strptime \\\n\tperl-datetime-timezone \\\n\tperl-dbd-sqlite \\\n\tperl-dbi \\\n\tperl-digest-sha1 \\\n\tperl-doc \\\n\tperl-file-slurp \\\n\tperl-file-temp \\\n\tperl-file-which \\\n\tperl-getopt-long \\\n\tperl-html-parser \\\n\tperl-html-tree \\\n\tperl-http-cookies \\\n\tperl-io \\\n\tperl-io-compress \\\n\tperl-io-html \\\n\tperl-io-socket-ssl \\\n\tperl-io-stringy \\\n\tperl-json \\\n\tperl-json-xs \\\n\tperl-libwww \\\n\tperl-lingua-en-numbers-ordinate \\\n\tperl-lingua-preferred \\\n\tperl-list-moreutils \\\n\tperl-lwp-useragent-determined \\\n\tperl-module-build \\\n\tperl-module-pluggable \\\n\tperl-net-ssleay \\\n\tperl-parse-recdescent \\\n\tperl-path-class \\\n\tperl-scalar-list-utils \\\n\tperl-term-progressbar \\\n\tperl-term-readkey \\\n\tperl-test-exception \\\n\tperl-test-requires \\\n\tperl-timedate \\\n\tperl-try-tiny \\\n\tperl-unicode-string \\\n\tperl-xml-libxml \\\n\tperl-xml-libxslt \\\n\tperl-xml-parser \\\n\tperl-xml-sax \\\n\tperl-xml-treepp \\\n\tperl-xml-twig \\\n\tperl-xml-writer \\\n\tpy3-requests \\\n\tpython2 \\\n\ttar \\\n\turiparser \\\n\twget \\\n\tx264 \\\n\tx265 \\\n\tzlib && \\\n echo \"**** Add Picons ****\" && \\\n mkdir -p /picons && \\\n curl -f -o \\\n        /picons.tar.bz2 -L \\\n        https://lsio-ci.ams3.digitaloceanspaces.com/picons/picons.tar.bz2\n\n# copy local files and buildstage artifacts\nCOPY --from=buildstage /tmp/argtable-build/usr/ /usr/\nCOPY --from=buildstage /tmp/comskip-build/usr/ /usr/\nCOPY --from=buildstage /tmp/tvheadend-build/usr/ /usr/\nCOPY --from=buildstage /tmp/xmltv-build/usr/ /usr/\nCOPY --from=buildstage /usr/local/share/man/ /usr/local/share/man/\nCOPY --from=buildstage /usr/local/share/perl5/ /usr/local/share/perl5/\nCOPY root/ /\n\n# ports and volumes\nEXPOSE 9981 9982\nVOLUME /config\n"
}