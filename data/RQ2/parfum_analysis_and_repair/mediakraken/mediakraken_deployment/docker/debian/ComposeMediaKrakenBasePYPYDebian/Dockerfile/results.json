{
  "startTime": 1674218701152,
  "endTime": 1674218702093,
  "originalSmells": [
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 1,
        "columnEnd": 61
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 1,
        "columnEnd": 118
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 1,
        "columnEnd": 122
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 121,
        "lineEnd": 121,
        "columnStart": 1,
        "columnEnd": 74
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# https://github.com/docker-library/pypy\nFROM debian:buster-slim\n\nRUN set -eux; \\\n\tapt-get update; \\\n\tapt-get install -y --no-install-recommends ca-certificates; \\\n\trm -rf /var/lib/apt/lists/*\n\n# http://bugs.python.org/issue19846\n# > At the moment, setting \"LANG=C\" on a Linux system *fundamentally breaks Python 3*, and that's not OK.\nENV LANG C.UTF-8\n\n# ensure local pypy3 is preferred over distribution pypy3\nENV PATH /opt/pypy/bin:$PATH\n\nENV PYPY_VERSION 7.3.3\n\nRUN set -eux; \\\n\n\tdpkgArch=\"$(dpkg --print-architecture)\"; \\\n\tcase \"${dpkgArch##*-}\" in \\\n\t\t'amd64') \\\n\t\t\turl='https://downloads.python.org/pypy/pypy3.7-v7.3.3-linux64.tar.bz2'; \\\n\t\t\tsha256='37e2804c4661c86c857d709d28c7de716b000d31e89766599fdf5a98928b7096'; \\\n\t\t\t;; \\\n\t\t'arm64') \\\n\t\t\turl='https://downloads.python.org/pypy/pypy3.7-v7.3.3-aarch64.tar.bz2'; \\\n\t\t\tsha256='ee4aa041558b58de6063dd6df93b3def221c4ca4c900d6a9db5b1b52135703a8'; \\\n\t\t\t;; \\\n\t\t'i386') \\\n\t\t\turl='https://downloads.python.org/pypy/pypy3.7-v7.3.3-linux32.tar.bz2'; \\\n\t\t\tsha256='7d81b8e9fcd07c067cfe2f519ab770ec62928ee8787f952cadf2d2786246efc8'; \\\n\t\t\t;; \\\n\t\t's390x') \\\n\t\t\turl='https://downloads.python.org/pypy/pypy3.7-v7.3.3-s390x.tar.bz2'; \\\n\t\t\tsha256='92000d90b9a37f2e9cb7885f2a872adfa9e48e74bf7f84a8b8185c8181f0502d'; \\\n\t\t\t;; \\\n\t\t*) echo >&2 \"error: current architecture ($dpkgArch) does not have a corresponding PyPy $PYPY_VERSION binary release\"; exit 1 ;; \\\n\tesac; \\\n\n\tsavedAptMark=\"$(apt-mark showmanual)\"; \\\n\tapt-get update; \\\n\tapt-get install -y --no-install-recommends \\\n\t\tbzip2 \\\n\t\tpatch \\\n\t\twget \\\n# sometimes \"pypy3\" itself is linked against libexpat1 / libncurses5, sometimes they're \".so\" files in \"/opt/pypy/lib_pypy\"\n\t\tlibexpat1 \\\n\t\tlibncurses5 \\\n# (so we'll add them temporarily, then use \"ldd\" later to determine which to keep based on usage per architecture)\n\t; \\\n\n\twget -O pypy.tar.bz2 \"$url\" --progress=dot:giga; \\\n\techo \"$sha256  *pypy.tar.bz2\" | sha256sum --check --strict -; \\\n\tmkdir /opt/pypy; \\\n\ttar -xjC /opt/pypy --strip-components=1 -f pypy.tar.bz2; \\\n\tfind /opt/pypy/lib-python -depth -type d -a \\( -name test -o -name tests \\) -exec rm -rf '{}' +; \\\n\trm pypy.tar.bz2; \\\n\n# https://github.com/docker-library/pypy/issues/49\n\twget -O import.patch 'https://foss.heptapod.net/pypy/pypy/-/commit/16faa2be85839e6ab4fb8ee09298a4d934aab81f.patch'; \\\n\techo '2d4bcc434077685a4ff26c1c1f28109ff67ef7e68f1f831ce0f2d9ddd6a194d0  *import.patch' | sha256sum --check --strict -; \\\n\twget -O crypt-utf8.patch 'https://foss.heptapod.net/pypy/pypy/-/commit/c63da169246ed972fe90e1c289fc2378236fa852.patch'; \\\n\techo 'ab1529948c49fd29fb76b3c20ec7d3d9c50603aa0c549a8a31339eb940e0f4d3  *crypt-utf8.patch' | sha256sum --check --strict -; \\\n\tpatch --input=\"$PWD/import.patch\" --directory=/opt/pypy --strip=1; \\\n\tpatch --input=\"$PWD/crypt-utf8.patch\" --directory=/opt/pypy --strip=1; \\\n\trm import.patch crypt-utf8.patch; \\\n\n\tln -sv '/opt/pypy/bin/pypy3' /usr/local/bin/; \\\n\n# smoke test\n\tpypy3 --version; \\\n\n# on pypy3, rebuild ffi bits for compatibility with Debian Stretch+\n\tcd /opt/pypy/lib_pypy; \\\n# https://github.com/docker-library/pypy/issues/24#issuecomment-409408657\n\tif [ -f _ssl_build.py ]; then \\\n\t\tapt-get install -y --no-install-recommends gcc libc6-dev libssl-dev; \\\n\t\tpypy3 _ssl_build.py; \\\n\tfi; \\\n# https://github.com/docker-library/pypy/issues/42\n\tif [ -f _lzma_build.py ]; then \\\n\t\tapt-get install -y --no-install-recommends gcc libc6-dev liblzma-dev; \\\n\t\tpypy3 _lzma_build.py; \\\n\tfi; \\\n# TODO rebuild other cffi modules here too? (other _*_build.py files)\n\n\tapt-mark auto '.*' > /dev/null; \\\n\t[ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark > /dev/null; \\\n\tfind /opt/pypy -type f -executable -exec ldd '{}' ';' \\\n\t\t| awk '/=>/ { print $(NF-1) }' \\\n\t\t| sort -u \\\n\t\t| xargs -r dpkg-query --search \\\n\t\t| cut -d: -f1 \\\n\t\t| sort -u \\\n\t\t| xargs -r apt-mark manual \\\n\t; \\\n\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \\\n\trm -rf /var/lib/apt/lists/*; \\\n# smoke test again, to be sure\n\tpypy3 --version; \\\n\n\tfind /opt/pypy -depth \\\n\t\t\\( \\\n\t\t\t\\( -type d -a \\( -name test -o -name tests \\) \\) \\\n\t\t\t-o \\\n\t\t\t\\( -type f -a \\( -name '*.pyc' -o -name '*.pyo' \\) \\) \\\n\t\t\\) -exec rm -rf '{}' +\n\n# if this is called \"PIP_VERSION\", pip explodes with \"ValueError: invalid truth value '<VERSION>'\"\nENV PYTHON_PIP_VERSION 20.3.4\n# https://github.com/pypa/get-pip\nENV PYTHON_GET_PIP_URL https://github.com/pypa/get-pip/raw/3843bff3a0a61da5b63ea0b7d34794c5c51a2f11/get-pip.py\nENV PYTHON_GET_PIP_SHA256 95c5ee602b2f3cc50ae053d716c3c89bea62c58568f64d7d25924d399b2d5218\n\nRUN set -ex; \\\n\tapt-get update; \\\n\tapt-get install -y --no-install-recommends wget; \\\n\trm -rf /var/lib/apt/lists/*; \\\n\n\twget -O get-pip.py \"$PYTHON_GET_PIP_URL\"; \\\n\techo \"$PYTHON_GET_PIP_SHA256  *get-pip.py\" | sha256sum --check --strict -; \\\n\n\tpypy3 get-pip.py \\\n\t\t--disable-pip-version-check \\\n\t\t--no-cache-dir \\\n\t\t\"pip == $PYTHON_PIP_VERSION\" \\\n\t; \\\n\tapt-get purge -y --auto-remove wget; \\\n# smoke test\n\tpip --version; \\\n\n\tfind /opt/pypy -depth \\\n\t\t\\( \\\n\t\t\t\\( -type d -a \\( -name test -o -name tests \\) \\) \\\n\t\t\t-o \\\n\t\t\t\\( -type f -a \\( -name '*.pyc' -o -name '*.pyo' \\) \\) \\\n\t\t\\) -exec rm -rf '{}' +; \\\n\trm -f get-pip.py\n\nCMD [\"pypy3\"]"
}