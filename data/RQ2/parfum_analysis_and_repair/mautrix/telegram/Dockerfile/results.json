{
  "startTime": 1674252562397,
  "endTime": 1674252563338,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 67
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM dock.mau.dev/tulir/lottieconverter:alpine-3.16\n\nARG TARGETARCH=amd64\n\nRUN apk add --no-cache \\\n      python3 py3-pip py3-setuptools py3-wheel \\\n      py3-pillow \\\n      py3-aiohttp \\\n      py3-magic \\\n      py3-ruamel.yaml \\\n      py3-commonmark \\\n      py3-phonenumbers \\\n      py3-mako \\\n      #py3-prometheus-client \\ (pulls in twisted unnecessarily)\n      # Indirect dependencies\n      py3-idna \\\n      py3-rsa \\\n      #moviepy\n        py3-decorator \\\n        py3-tqdm \\\n        py3-requests \\\n        #py3-proglog \\\n        #imageio\n          py3-numpy \\\n      #py3-telethon \\ (outdated)\n        # Optional for socks proxies\n        py3-pysocks \\\n        py3-pyaes \\\n        # cryptg\n          py3-cffi \\\n          py3-qrcode \\\n      py3-brotli \\\n      # Other dependencies\n      ffmpeg \\\n      ca-certificates \\\n      su-exec \\\n      netcat-openbsd \\\n      # encryption\n      py3-olm \\\n      py3-pycryptodome \\\n      py3-unpaddedbase64 \\\n      py3-future \\\n      bash \\\n      curl \\\n      jq \\\n      yq\n\nCOPY requirements.txt /opt/mautrix-telegram/requirements.txt\nCOPY optional-requirements.txt /opt/mautrix-telegram/optional-requirements.txt\nWORKDIR /opt/mautrix-telegram\nRUN apk add --no-cache --virtual .build-deps python3-dev libffi-dev build-base \\\n && pip3 install --no-cache-dir /cryptg-*.whl \\\n && pip3 install --no-cache-dir -r requirements.txt -r optional-requirements.txt \\\n && apk del .build-deps \\\n && rm -f /cryptg-*.whl\n\nCOPY . /opt/mautrix-telegram\nRUN apk add --no-cache git && pip3 install --no-cache-dir .[all] && apk del git \\\n  # This doesn't make the image smaller, but it's needed so that the `version` command works properly\n  && cp mautrix_telegram/example-config.yaml . && rm -rf mautrix_telegram .git build\n\nVOLUME /data\nENV UID=1337 GID=1337 \\\n    FFMPEG_BINARY=/usr/bin/ffmpeg\n\nCMD [\"/opt/mautrix-telegram/docker-run.sh\"]\n"
}