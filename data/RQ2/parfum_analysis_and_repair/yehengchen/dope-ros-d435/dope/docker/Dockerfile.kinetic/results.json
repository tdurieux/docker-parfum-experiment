{
  "startTime": 1674256164340,
  "endTime": 1674256165377,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 7,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 25,
        "columnEnd": 57
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 7,
        "columnEnd": 66
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 22,
        "columnEnd": 91
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 26,
        "columnStart": 22,
        "columnEnd": 18
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 25,
        "columnEnd": 57
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 7,
        "columnEnd": 66
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nvidia/cudagl:9.0-devel-ubuntu16.04\n\n# Copyright (c) 2018, NVIDIA CORPORATION. All rights reserved.\n# Full license terms provided in LICENSE.md file.\n\n# Build with:\n# nvidia-docker build -t nvidia-dope:kinetic-v1 -f Dockerfile.kinetic ..\n\nENV HOME /root\n\nWORKDIR ${HOME}\n\nRUN apt-get update && apt-get -y --no-install-recommends install software-properties-common && rm -rf /var/lib/apt/lists/*;\n\n# cuDNN version must match the one used by TensorRT.\n# TRT 4.0 is compiled with cuDNN 7.1.\n\nRUN apt-get update && apt-get -y --no-install-recommends install \\\n        ca-certificates \\\n        build-essential \\\n        cmake \\\n        git \\\n        libcudnn7=7.1.4.18-1+cuda9.0 \\\n        libcudnn7-dev=7.1.4.18-1+cuda9.0 \\\n        libopencv-dev \\\n        python-dev \\\n        python-pip \\\n    && apt-get -y autoremove \\\n    && apt-get clean \\\n    # pip \\\n    && pip install --no-cache-dir setuptools wheel \\\n    # cleanup\n    && rm -rf /var/lib/apt/lists/{apt,dpkg,cache,log} /tmp/* /var/tmp/* && rm -rf /var/lib/apt/lists/*;\n\n# Install OpenCV with CUDA support.\n# REVIEW alexeyk: JetPack 3.2 comes with OpenCV 3.3.1 _without_ CUDA support.\nWORKDIR ${HOME}\nRUN git clone http://github.com/opencv/opencv.git && cd opencv \\\n    && git checkout 3.3.1                   \\\n    && mkdir build && cd build              \\\n    && cmake -D CMAKE_BUILD_TYPE=RELEASE    \\\n        -D CMAKE_INSTALL_PREFIX=/usr/local  \\\n        -D WITH_CUDA=OFF                     \\\n        -D WITH_OPENCL=OFF                  \\\n        -D ENABLE_FAST_MATH=1               \\\n        -D CUDA_FAST_MATH=1                 \\\n        -D WITH_CUBLAS=1                    \\\n        -D BUILD_DOCS=OFF                   \\\n        -D BUILD_PERF_TESTS=OFF             \\\n        -D BUILD_TESTS=OFF                  \\\n        ..                                  \\\n    && make -j `nproc`                      \\\n    && make install                         \\\n    && cd ${HOME} && rm -rf ./opencv/\n\n# ROS Kinetic\n# Use rosdep to install all dependencies (including ROS itself)\nCOPY package.xml ${HOME}/fake_ws/src/dope/\nRUN apt-key adv --keyserver hkp://ha.pool.sks-keyservers.net:80 --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654 \\\n    && sh -c 'echo \"deb http://packages.ros.org/ros/ubuntu xenial main\" > /etc/apt/sources.list.d/ros-latest.list'  \\\n    && apt-get update && apt-get install --no-install-recommends -y python-rosdep \\\n    && rosdep init \\\n    && rosdep update \\\n    && rosdep install --from-paths ${HOME}/fake_ws/src -i -y --rosdistro kinetic \\\n    && apt-get install --no-install-recommends -y ros-kinetic-rosbash ros-kinetic-ros-comm \\\n    && apt-get -y autoremove \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/{apt,dpkg,cache,log} /tmp/* /var/tmp/* && rm -rf /var/lib/apt/lists/*;\n\n# Setup catkin workspace\nENV CATKIN_WS ${HOME}/catkin_ws\nCOPY . ${CATKIN_WS}/src/dope\nCOPY docker/init_workspace.sh ${HOME}\nRUN ${CATKIN_WS}/src/dope/docker/init_workspace.sh\n\nRUN echo \"source ${CATKIN_WS}/devel/setup.bash\" >> ${HOME}/.bashrc\n\nENV DISPLAY :0\nENV TERM=xterm\n# Some QT-Apps don't not show controls without this\nENV QT_X11_NO_MITSHM 1\n\nCOPY requirements.txt ${HOME}\nRUN pip install --no-cache-dir -r requirements.txt\n"
}