{
  "startTime": 1674251017139,
  "endTime": 1674251017786,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 8,
        "columnEnd": 28
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# This is outputing either netauth or netauthd to /n and then it\n# subsequently gets copied into a completely empty container.  This is\n# because docker can't put ARGs into ENTRYPOINT, so that needs to be\n# static.  Since in the general case the container isn't\n# introsepctable without external tools (no shell!) this isn't\n# noticed, but its still something to be aware of if you're here.\n\nFROM golang:1.17-alpine as build\nWORKDIR /netauth\nCOPY . .\nARG TARGET=netauthd\nRUN go mod vendor && \\\n        CGO_ENABLED=0 GOOS=linux go build -a -ldflags '-extldflags \"-static\"' -o /n cmd/$TARGET/main.go && \\\n        apk add --no-cache upx binutils && \\\n        strip /n && \\\n        upx /n && \\\n        ls -alh /n\n\nFROM scratch\nLABEL org.opencontainers.image.source https://github.com/netauth/netauth\nENTRYPOINT [\"/n\"]\nCOPY --from=build /n /n\n"
}