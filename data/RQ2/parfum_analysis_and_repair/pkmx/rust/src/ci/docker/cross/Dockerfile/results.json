{
  "startTime": 1674250777678,
  "endTime": 1674250778845,
  "originalSmells": [
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 2,
        "lineEnd": 22,
        "columnStart": 22,
        "columnEnd": 12
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n  g++ \\\n  make \\\n  file \\\n  curl \\\n  ca-certificates \\\n  python2.7 \\\n  git \\\n  cmake \\\n  sudo \\\n  xz-utils \\\n  zlib1g-dev \\\n  g++-arm-linux-gnueabi \\\n  g++-arm-linux-gnueabihf \\\n  g++-aarch64-linux-gnu \\\n  gcc-sparc64-linux-gnu \\\n  libc6-dev-sparc64-cross \\\n  bzip2 \\\n  patch \\\n  libssl-dev \\\n  pkg-config && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /tmp\n\nCOPY cross/build-rumprun.sh /tmp/\nRUN ./build-rumprun.sh\n\nCOPY cross/build-arm-musl.sh /tmp/\nRUN ./build-arm-musl.sh\n\nCOPY cross/install-mips-musl.sh /tmp/\nRUN ./install-mips-musl.sh\n\nCOPY cross/install-mipsel-musl.sh /tmp/\nRUN ./install-mipsel-musl.sh\n\nCOPY cross/install-x86_64-redox.sh /tmp/\nRUN ./install-x86_64-redox.sh\n\nENV TARGETS=asmjs-unknown-emscripten\nENV TARGETS=$TARGETS,wasm32-unknown-emscripten\nENV TARGETS=$TARGETS,x86_64-rumprun-netbsd\nENV TARGETS=$TARGETS,mips-unknown-linux-musl\nENV TARGETS=$TARGETS,mipsel-unknown-linux-musl\nENV TARGETS=$TARGETS,arm-unknown-linux-musleabi\nENV TARGETS=$TARGETS,arm-unknown-linux-musleabihf\nENV TARGETS=$TARGETS,armv7-unknown-linux-musleabihf\nENV TARGETS=$TARGETS,aarch64-unknown-linux-musl\nENV TARGETS=$TARGETS,sparc64-unknown-linux-gnu\nENV TARGETS=$TARGETS,x86_64-unknown-redox\n\nENV CC_mipsel_unknown_linux_musl=mipsel-openwrt-linux-gcc \\\n    CC_mips_unknown_linux_musl=mips-openwrt-linux-gcc \\\n    CC_sparc64_unknown_linux_gnu=sparc64-linux-gnu-gcc \\\n    CC_x86_64_unknown_redox=x86_64-unknown-redox-gcc\n\n# Suppress some warnings in the openwrt toolchains we downloaded\nENV STAGING_DIR=/tmp\n\nENV RUST_CONFIGURE_ARGS \\\n      --enable-extended \\\n      --target=$TARGETS \\\n      --musl-root-arm=/usr/local/arm-linux-musleabi \\\n      --musl-root-armhf=/usr/local/arm-linux-musleabihf \\\n      --musl-root-armv7=/usr/local/armv7-linux-musleabihf \\\n      --musl-root-aarch64=/usr/local/aarch64-linux-musl\nENV SCRIPT python2.7 ../x.py dist --target $TARGETS\n\n# sccache\nCOPY scripts/sccache.sh /scripts/\nRUN sh /scripts/sccache.sh\n"
}