{
  "startTime": 1674255328270,
  "endTime": 1674255330076,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 83
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 38,
        "columnEnd": 106
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 83
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 26,
        "columnEnd": 164
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 26,
        "columnEnd": 80
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 26,
        "columnEnd": 104
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 26,
        "columnEnd": 159
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 26,
        "columnEnd": 80
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 26,
        "columnEnd": 103
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 26,
        "columnEnd": 83
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04 as base\n\nRUN apt-get -qq update && apt-get --no-install-recommends -qq -y install curl cmake file git build-essential xz-utils software-properties-common apt-transport-https && rm -rf /var/lib/apt/lists/*;\n\nRUN curl -f -sL --retry 10 --retry-delay 60 https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add -\nRUN apt-add-repository \"deb http://apt.llvm.org/xenial/ llvm-toolchain-xenial-9 main\"\nRUN apt-get -qq update && apt-get --no-install-recommends -qq -y install clang-9 && ln -s /usr/bin/clang-9 /usr/bin/clang && ln -s /usr/bin/clang++-9 /usr/bin/clang++ && rm -rf /var/lib/apt/lists/*;\n\nRUN git clone -q --depth 1 https://github.com/tpoechtrager/osxcross.git\nRUN apt-get -qq update && apt-get --no-install-recommends -qq -y install automake libxml2-dev libssl-dev && rm -rf /var/lib/apt/lists/*;\nCOPY MacOSX10.15.sdk.tar.xz /osxcross/tarballs/MacOSX10.15.sdk.tar.xz\n\nRUN cd /osxcross && OSX_VERSION_MIN=10.12 UNATTENDED=1 ./build.sh\nRUN cd /osxcross && ./target/bin/o64-clang++-libc++ -o osxcross ./oclang/test_libcxx.cpp\n\n\nFROM therecipe/qt:darwin_static_base\nLABEL maintainer therecipe\n\nENV USER user\nENV HOME /home/$USER\nENV GOPATH $HOME/work\nENV PATH /usr/local/go/bin:$PATH\nENV QT_API 5.13.0\nENV QT_DOCKER true\nENV QT_STATIC true\nENV QT_VERSION $QT_API\nENV QT_QMAKE_DIR $GOPATH/src/github.com/therecipe/env_darwin_amd64_513/5.13.0/clang_64/bin\n\n\nRUN apt-get -qq update && apt-get --no-install-recommends -qq -y install curl git build-essential libglib2.0-dev software-properties-common apt-transport-https && apt-get -qq clean && rm -rf /var/lib/apt/lists/*;\n\nCOPY --from=base /osxcross/target /osxcross/target\nRUN ln -s /osxcross/target/bin/xcrun /usr/bin/xcrun\nRUN rm /usr/bin/strip && ln -s /osxcross/target/bin/x86_64-apple-darwin19-strip /usr/bin/strip\nRUN ln -s /osxcross/target/bin/x86_64-apple-darwin19-otool /usr/bin/otool\nRUN ln -s /osxcross/target/bin/x86_64-apple-darwin19-install_name_tool /usr/bin/install_name_tool\n\nRUN GO=go1.13.4.linux-amd64.tar.gz && curl -f -sL --retry 10 --retry-delay 60 -O https://dl.google.com/go/$GO && tar -xzf $GO -C /usr/local\nRUN go get github.com/therecipe/qt/cmd/...\nRUN DST=$GOPATH/src/github.com/therecipe/env_darwin_amd64_513/5.13.0/clang_64/bin && rm -r $DST && cp -r $GOPATH/src/github.com/therecipe/env_linux_amd64_513/5.13.0/gcc_64/bin $DST\n\nRUN sed -i -e 's/error/warning/g' $GOPATH/src/github.com/therecipe/env_darwin_amd64_513/5.13.0/clang_64/mkspecs/features/mac/default_pre.prf\nRUN sed -i -e 's/$$QMAKE_MAC_SDK_PATH/$$(QMAKE_MAC_SDK_PATH)/g' $GOPATH/src/github.com/therecipe/env_darwin_amd64_513/5.13.0/clang_64/mkspecs/features/mac/default_post.prf\nENV QMAKE_MAC_SDK_PATH /osxcross/target/SDK/MacOSX10.15.sdk\n\nRUN curl -f -sL --retry 10 --retry-delay 60 https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add -\nRUN apt-add-repository \"deb http://apt.llvm.org/xenial/ llvm-toolchain-xenial-9 main\"\nRUN apt-get -qq update && apt-get --no-install-recommends -qq -y install clang-9 && apt-get -qq clean && ln -s /usr/bin/clang-9 /usr/bin/clang && ln -s /usr/bin/clang++-9 /usr/bin/clang++ && rm -rf /var/lib/apt/lists/*;\n\nENV LD_LIBRARY_PATH $GOPATH/src/github.com/therecipe/env_linux_amd64_513/5.13.0/gcc_64/lib\nENV QT_PLUGIN_PATH $GOPATH/src/github.com/therecipe/env_linux_amd64_513/5.13.0/gcc_64/plugins\nENV CC /osxcross/target/bin/x86_64-apple-darwin19-clang\nENV CXX /osxcross/target/bin/x86_64-apple-darwin19-clang++\n\nRUN $GOPATH/bin/qtsetup prep darwin\nRUN $GOPATH/bin/qtsetup check darwin\nRUN $GOPATH/bin/qtsetup generate darwin\nRUN cd $GOPATH/src/github.com/therecipe/qt/internal/examples/widgets/line_edits && $GOPATH/bin/qtdeploy build darwin && rm -rf ./deploy\n\nRUN apt-get -qq update && apt-get --no-install-recommends -qq -y install ca-certificates git pkg-config && rm -rf /var/lib/apt/lists/*;\n\n\nENV PATH $HOME/flutter/bin:$PATH\n\nRUN apt-get -qq update && apt-get --no-install-recommends -qq -y install curl unzip && apt-get -qq clean && rm -rf /var/lib/apt/lists/*;\nRUN git clone -q --depth 1 -b stable https://github.com/flutter/flutter.git $HOME/flutter\nRUN flutter config --no-analytics && flutter precache --linux --no-android"
}