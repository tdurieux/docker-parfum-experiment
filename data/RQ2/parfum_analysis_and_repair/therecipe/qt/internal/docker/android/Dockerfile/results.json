{
  "startTime": 1674253554148,
  "endTime": 1674253555591,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 39,
        "columnEnd": 124
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 45,
        "columnEnd": 130
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 34,
        "columnEnd": 110
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 35,
        "columnEnd": 74
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 26,
        "columnEnd": 123
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 26,
        "columnEnd": 102
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 26,
        "columnEnd": 103
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04 as base\n\nENV USER user\nENV HOME /home/$USER\n\nRUN apt-get -qq update && apt-get --no-install-recommends -qq -y install ca-certificates curl make openjdk-8-jdk perl unzip && rm -rf /var/lib/apt/lists/*;\nRUN mkdir -p $HOME\n\nRUN SDK=sdk-tools-linux-3859397.zip && curl -f -sL --retry 10 --retry-delay 60 -O https://dl.google.com/android/repository/$SDK && unzip -qq $SDK -d $HOME/android-sdk-linux\nRUN $HOME/android-sdk-linux/tools/bin/sdkmanager --list --verbose\nRUN echo \"y\" | $HOME/android-sdk-linux/tools/bin/sdkmanager \"platform-tools\" \"build-tools;28.0.3\" \"platforms;android-28\"\nRUN $HOME/android-sdk-linux/tools/bin/sdkmanager --update\n\n\nRUN NDK=android-ndk-r18b-linux-x86_64.zip && curl -f -sL --retry 10 --retry-delay 60 -O https://dl.google.com/android/repository/$NDK && unzip -qq $NDK -d $HOME\n\nRUN OSSL=openssl-1.1.1a.tar.gz && curl -f -sL --retry 10 --retry-delay 60 -O https://www.openssl.org/source/$OSSL && tar -xzf $OSSL -C $HOME\n\nENV ANDROID_NDK $HOME/android-ndk-r18b\nENV PATH $ANDROID_NDK/toolchains/llvm/prebuilt/linux-x86_64/bin:$PATH\n\nRUN cd $HOME/openssl-1.1.1a && ./Configure -D__ANDROID_API__=21 android-arm && make -j $(grep -c ^processor /proc/cpuinfo) SHLIB_VERSION_NUMBER= SHLIB_EXT=.so build_libs $HOME/openssl-1.1.1a\nRUN mkdir -p $HOME/openssl-1.1.1a-arm && mv $HOME/openssl-1.1.1a/*.so* $HOME/openssl-1.1.1a-arm\nRUN rm -rf $HOME/openssl-1.1.1a && tar -xzf openssl-1.1.1a.tar.gz -C $HOME && rm openssl-1.1.1a.tar.gz\nRUN cd $HOME/openssl-1.1.1a && ./Configure -D__ANDROID_API__=21 android-x86 && make -j $(grep -c ^processor /proc/cpuinfo) SHLIB_VERSION_NUMBER= SHLIB_EXT=.so build_libs $HOME/openssl-1.1.1a\nRUN mkdir -p $HOME/openssl-1.1.1a-x86 && mv $HOME/openssl-1.1.1a/*.so* $HOME/openssl-1.1.1a-x86\nRUN find $HOME/openssl-1.1.1a-* -type f -exec llvm-strip --strip-all {} \\;\n\n\nFROM ubuntu:16.04\nLABEL maintainer therecipe\n\nENV USER user\nENV HOME /home/$USER\nENV GOPATH $HOME/work\nENV JDK_DIR /usr/lib/jvm/java-8-openjdk-amd64\nENV PATH /usr/local/go/bin:$PATH\nENV QT_VERSION 5.13.0\nENV QT_DIR /opt/Qt5.13.0\nENV QT_DOCKER true\n\nCOPY --from=therecipe/qt:linux /usr/local/go /usr/local/go\nCOPY --from=therecipe/qt:linux $GOPATH/bin $GOPATH/bin\nCOPY --from=therecipe/qt:linux $GOPATH/src/github.com/therecipe/qt $GOPATH/src/github.com/therecipe/qt\nCOPY --from=therecipe/qt:linux /opt/Qt5.13.0/5.13.0/android_armv7 /opt/Qt5.13.0/5.13.0/android_armv7\nCOPY --from=therecipe/qt:linux /opt/Qt5.13.0/5.13.0/android_x86 /opt/Qt5.13.0/5.13.0/android_x86\nCOPY --from=therecipe/qt:linux /opt/Qt5.13.0/5.13.0/android_arm64_v8a /opt/Qt5.13.0/5.13.0/android_arm64_v8a\nCOPY --from=therecipe/qt:linux /opt/Qt5.13.0/Docs /opt/Qt5.13.0/Docs\nCOPY --from=base $HOME/android-sdk-linux $HOME/android-sdk-linux\nCOPY --from=base $HOME/android-ndk-r18b $HOME/android-ndk-r18b\nCOPY --from=base $HOME/openssl-1.1.1a-arm $HOME/openssl-1.1.1a-arm\nCOPY --from=base $HOME/openssl-1.1.1a-x86 $HOME/openssl-1.1.1a-x86\n\nRUN apt-get -qq update && apt-get --no-install-recommends -qq -y install ca-certificates openjdk-8-jdk && apt-get -qq clean && rm -rf /var/lib/apt/lists/*;\n\nRUN $GOPATH/bin/qtsetup prep\n\nRUN $GOPATH/bin/qtsetup check android\nRUN $GOPATH/bin/qtsetup generate android\nRUN $GOPATH/bin/qtsetup install android\nRUN cd $GOPATH/src/github.com/therecipe/qt/internal/examples/androidextras/jni && $GOPATH/bin/qtdeploy build android && rm -rf ./deploy\n\nRUN GOARCH=arm64 $GOPATH/bin/qtsetup check android\nRUN GOARCH=arm64 $GOPATH/bin/qtsetup generate android\nRUN GOARCH=arm64 $GOPATH/bin/qtsetup install android\nRUN cd $GOPATH/src/github.com/therecipe/qt/internal/examples/androidextras/jni && GOARCH=arm64 $GOPATH/bin/qtdeploy build android && rm -rf ./deploy\n\nRUN $GOPATH/bin/qtsetup check android-emulator\nRUN $GOPATH/bin/qtsetup generate android-emulator\nRUN $GOPATH/bin/qtsetup install android-emulator\nRUN cd $GOPATH/src/github.com/therecipe/qt/internal/examples/androidextras/jni && $GOPATH/bin/qtdeploy build android-emulator && rm -rf ./deploy\n\nRUN apt-get -qq update && apt-get --no-install-recommends -qq -y install ca-certificates git pkg-config && rm -rf /var/lib/apt/lists/*;"
}