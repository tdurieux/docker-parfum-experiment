{
  "startTime": 1674255537597,
  "endTime": 1674255538157,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 4,
        "columnEnd": 25
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:latest AS BUILD\n\nRUN mkdir -p /usr/src/app && rm -rf /usr/src/app\nWORKDIR /usr/src/app\n\n# copy package.json and install dependencies\nCOPY package.json package-lock.json /usr/src/app/\nCOPY scripts /usr/src/app/scripts\nRUN npm install && npm cache clean --force;\n\n# copy the app and build it\nCOPY . /usr/src/app\nRUN npm run build --prod\n\nFROM nginx:alpine\nENV PORT=80\nENV BASE_HREF=/\nCOPY ./nginx.conf /etc/nginx/conf.d/default.conf\nCOPY ./52-*.sh /docker-entrypoint.d/\nRUN chmod 0775 /docker-entrypoint.d/52-*.sh\nCOPY --from=BUILD /usr/src/app/dist/timeseries /usr/share/nginx/html\n# the container can be started like this: docker run -p 80:80 -e PORT=80 helgoland\nCMD [\"nginx\", \"-g\", \"daemon off;\"]\n"
}