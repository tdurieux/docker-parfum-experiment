{
  "startTime": 1674252123129,
  "endTime": 1674252124109,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 112
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 112
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 112
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 48
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 136
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 72
      }
    }
  ],
  "repairedDockerfile": "FROM debian:9\n\nRUN apt-get -y update\nRUN apt-get install --no-install-recommends -y g++ ccache openssl cmake gperf make git libssl-dev libreadline-dev zlib1g zlib1g-dev wget && rm -rf /var/lib/apt/lists/*;\nRUN apt-get install --no-install-recommends -y python nodejs default-jre && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /\nRUN git clone https://github.com/tdlib/td.git\nRUN git clone https://github.com/emscripten-core/emsdk.git\n\nWORKDIR /emsdk\nRUN git pull\nRUN ./emsdk install latest\nRUN ./emsdk activate latest\n\nENV OPENSSL openssl-1.0.2a\nENV EXT tar.gz\nRUN wget https://www.openssl.org/source/${OPENSSL}.${EXT} && tar -xvzf ${OPENSSL}.${EXT}\n\nSHELL [\"/bin/bash\", \"-c\"]\n\nWORKDIR ${OPENSSL}\nRUN source ../emsdk_env.sh \\\n    && emmake bash ./Configure no-asm no-apps no-ssl2 no-ssl3 no-comp no-hw no-engine no-deprecated no-dso --openssldir=built linux-generic32 \\\n    && sed -i \"s/CC= \\$(CROSS_COMPILE)/&cc #/g\" Makefile \\\n    && sed -i \"s/-D_REENTRANT -O3 -Wall/-D_REENTRANT -Wall/g\" Makefile \\\n    && make -j 1 \\\n    && chmod -R 777 ../${OPENSSL} \\\n    && exit\n\nWORKDIR /td\nRUN mkdir build\nWORKDIR build\nRUN RUN cmake ..\nRUN cmake --build . --target prepare_cross_compiling\nRUN rm -rf *\n\nENV OPENSSL_ROOT_DIR /emsdk/${OPENSSL}\nENV OPENSSL_INCLUDE_DIR ${OPENSSL_ROOT_DIR}/include\nENV OPENSSL_CRYPTO_LIBRARY ${OPENSSL_ROOT_DIR}/libcrypto.a\nENV OPENSSL_SSL_LIBRARY ${OPENSSL_ROOT_DIR}/libssl.a\nRUN source ../../emsdk/emsdk_env.sh \\\n    && emcmake cmake -DCMAKE_BUILD_TYPE=MinSizeRel \\\n    -DOPENSSL_INCLUDE_DIR=${OPENSSL_INCLUDE_DIR} \\\n    -DOPENSSL_CRYPTO_LIBRARY=${OPENSSL_CRYPTO_LIBRARY} \\\n    -DOPENSSL_SSL_LIBRARY=${OPENSSL_SSL_LIBRARY} \\\n    -OPENSSL_LIBRARIES=${OPENSSL_SSL_LIBRARY} ${OPENSSL_CRYPTO_LIBRARY} \\\n    ..\nRUN source ../../emsdk/emsdk_env.sh \\\n    && emmake cmake --build . --target td_wasm\n"
}