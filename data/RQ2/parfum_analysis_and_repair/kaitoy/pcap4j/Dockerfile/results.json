{
  "startTime": 1674254116545,
  "endTime": 1674254117486,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 2,
        "columnEnd": 35
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 2,
        "columnEnd": 35
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# Dockerfile for Pcap4J\n#\n\nFROM openjdk:11-jdk-slim\n\n# Install libpcap.\nRUN apt-get update && \\\n  apt-get install --no-install-recommends -y libpcap0.8 git && rm -rf /var/lib/apt/lists/*;\n\n# Build Pcap4J.\nRUN cd /usr/local/src/ && \\\n  git clone -b v1 git://github.com/kaitoy/pcap4j.git\nWORKDIR /usr/local/src/pcap4j\nRUN ./mvnw --global-toolchains /usr/local/src/pcap4j/mvn/toolchains_docker_11.xml -P distribution-assembly install 2>&1 | tee build.log\n\n# Collect libraries.\nRUN mkdir bin && \\\n    cd pcap4j-packetfactory-static && \\\n    ../mvnw -DoutputDirectory=/usr/local/src/pcap4j/bin -Dmdep.stripVersion=true -DincludeScope=compile dependency:copy-dependencies && \\\n    ../mvnw -DoutputDirectory=/usr/local/src/pcap4j/bin -Dmdep.stripVersion=true -DincludeGroupIds=ch.qos.logback dependency:copy-dependencies && \\\n    cd ../pcap4j-distribution && \\\n    ../mvnw -DoutputDirectory=/usr/local/src/pcap4j/bin -Dmdep.stripVersion=true -DincludeArtifactIds=pcap4j-packetfactory-static,pcap4j-sample dependency:copy-dependencies\n\n# Generate sample script. (/usr/local/src/pcap4j/bin/capture.sh)\nRUN echo '#!/bin/sh' > bin/capture.sh && \\\n    echo java -cp /usr/local/src/pcap4j/bin/pcap4j-core.jar:/usr/local/src/pcap4j/bin/pcap4j-packetfactory-static.jar:/usr/local/src/pcap4j/bin/pcap4j-sample.jar:/usr/local/src/pcap4j/bin/jna.jar:/usr/local/src/pcap4j/bin/slf4j-api.jar:/usr/local/src/pcap4j/bin/logback-classic.jar:/usr/local/src/pcap4j/bin/logback-core.jar -Dorg.pcap4j.sample.Docker.nifName=\\$1 -Dorg.pcap4j.sample.Docker.wait=\\$2 -Dorg.pcap4j.sample.Docker.count=10 org.pcap4j.sample.Docker \\$3 >> bin/capture.sh && \\\n    chmod +x bin/capture.sh\n\nENTRYPOINT [\"/bin/sh\", \"/usr/local/src/pcap4j/bin/capture.sh\"]\nCMD [\"eth0\", \"false\"]\n"
}