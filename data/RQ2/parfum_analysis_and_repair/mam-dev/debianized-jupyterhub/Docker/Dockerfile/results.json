{
  "startTime": 1674251600486,
  "endTime": 1674251601850,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 4,
        "columnEnd": 58
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Python 3.7 Kernel on Bionic (based on pyenv)\n# ============================================\n#\n# See README.md for instructions.\n#\n# 'python-build' docs:\n#   https://github.com/pyenv/pyenv/tree/master/plugins/python-build\n#\n\nARG extras=default\nARG distro=ubuntu:bionic\nARG pyversion=3.7.2\nARG pyenv_version=1.2.9\nARG pyenv_url=https://github.com/pyenv/pyenv/archive/v${pyenv_version}.tar.gz\n\nFROM ${distro} AS builder\nARG extras\n\n# Install build dependencies for 'python-build'\nRUN env LANG=C apt-get update -qq -o Acquire::Languages=none \\\n    && env LANG=C DEBIAN_FRONTEND=noninteractive apt-get install \\\n        -y --no-install-recommends -o Dpkg::Options::=--force-unsafe-io \\\n        \\\n        build-essential \\\n        ca-certificates \\\n        curl \\\n        dpkg-dev \\\n        libparse-debianchangelog-perl \\\n        llvm \\\n        make \\\n        wget \\\n        xz-utils \\\n        \\\n        libbz2-dev \\\n        libdb-dev \\\n        libexpat1-dev \\\n        libffi-dev \\\n        libfreetype6-dev \\\n        libgdbm-dev \\\n        libcurl4-openssl-dev \\\n        libncurses5-dev \\\n        libncursesw5-dev \\\n        libreadline-dev \\\n        libsqlite3-dev \\\n        libssl-dev \\\n        libtar-dev \\\n        libtinfo-dev \\\n        libxml2-dev \\\n        libxmlsec1-dev \\\n        libz-dev \\\n        libzip-dev \\\n        tk-dev \\\n        zlib1g-dev \\\n        \\\n        less \\\n        vim \\\n    && apt-get clean && rm -rf \"/var/lib/apt/lists\"/*\n\n# Build selected Python version using 'pyenv'\nARG pyversion\nARG pyenv_version\nWORKDIR /opt\nCOPY Docker/v${pyenv_version}.tar.gz ./\nRUN tar --strip-components=1 -xzf v${pyenv_version}.tar.gz \\\n    && export PYENV_ROOT=$PWD \\\n    && ( cd plugins/python-build && ./install.sh ) \\\n    && mkdir -p python \\\n    && { python-build -v ${pyversion} $PWD/python; RC=$?; } \\\n    && tail -n33 $(ls -1rt /tmp/*.log | tail -n1) \\\n    && echo RC=$RC && rm v${pyenv_version}.tar.gz\n\n# Update Python tools\nRUN /opt/python/bin/python3 -m pip install --no-warn-script-location -U pip \\\n    && /opt/python/bin/python3 -m pip install --no-warn-script-location -U setuptools wheel\n\n# Build source-only native wheels\nCOPY setup.py MANIFEST.in /tmp/\nCOPY debian/changelog debian/control debian/rules /tmp/debian/\nRUN mkdir -p /opt/python/wheels \\\n    && /opt/python/bin/python3 -m pip install --no-warn-script-location \\\n                               $(egrep Cython /tmp/setup.py | cut -f2 -d\"'\") \\\n    && /opt/python/bin/python3 -m pip wheel -w /opt/python/wheels \\\n                               psutil \\\n                               $(egrep pycurl /tmp/setup.py | cut -f2 -d\"'\") \\\n                               $(egrep word2vec /tmp/setup.py | cut -f2 -d\"'\") \\\n                               $(egrep Pillow /tmp/setup.py | cut -f2 -d\"'\") \\\n                               -e /tmp/.[$extras]\n\n# Reduce size of runtime image by removing cruft (lib: 188M â†’ 55M)\nRUN cd python && rm -rf \\\n        lib/libpython*.a \\\n        lib/python*/config-*-*-linux-gnu \\\n        lib/python*/ensurepip \\\n        lib/python*/idlelib \\\n        lib/python*/lib2to3 \\\n        \\\n        lib/python*/test \\\n        \\\n        lib/python*/turtle.py \\\n        lib/python*/turtledemo \\\n        lib/python*/__pycache__/turtle.*.pyc \\\n        lib/python*/__pycache__/*.opt-?.pyc\n\n# Report library dependencies and top-level dir sizes\nRUN find /opt/python/ -name *.so | xargs ldd \\\n    | egrep -v '^/opt/py|libc.so|libm.so' | awk '{print $1}' | sort -u \\\n    | xargs dpkg -S | cut -f1 -d: | sort -u \\\n    && du -sch /opt/python/*\n\n\n# Build runtime image\nFROM ${distro} AS runtime\nLABEL maintainer=\"Juergen Hermann <jh@web.de>\"\n# http://label-schema.org/\nLABEL org.label-schema.schema-version=\"0.9.5.1\"\nLABEL org.label-schema.name=\"ono-py3-kernel\"\nLABEL org.label-schema.description=\"Python3 JupyterHub Kernel\"\nLABEL org.label-schema.url=\"https://github.com/mam-dev/debianized-jupyterhub/blob/master/Docker\"\nLABEL org.label-schema.vcs-url=\"https://github.com/mam-dev/debianized-jupyterhub.git\"\nARG extras\n\nENV LANG=en_US.UTF-8\nRUN env LANG=C apt-get update -qq -o Acquire::Languages=none \\\n    && env LANG=C DEBIAN_FRONTEND=noninteractive apt-get install \\\n        -yqq --no-install-recommends -o Dpkg::Options::=--force-unsafe-io \\\n        \\\n        ca-certificates \\\n        locales \\\n        mime-support \\\n        libparse-debianchangelog-perl \\\n        \\\n        libbsd0 \\\n        libbz2-1.0 \\\n        libcurl4 \\\n        libdb5.3 \\\n        libexpat1 \\\n        libffi6 \\\n        libfreetype6 \\\n        $(apt-cache search libgdbm[0-9] | awk '{print $1}') \\\n        libncursesw5 \\\n        libpng16-16 \\\n        libreadline7 \\\n        libsqlite3-0 \\\n        libssl1.1 \\\n        libtinfo5 \\\n        zlib1g \\\n        \\\n        libtcl8.6 \\\n        libtk8.6 \\\n        tix \\\n        tk8.6-blt2.5 \\\n    && echo \"$LANG UTF-8\" >/etc/locale.gen \\\n    && locale-gen --lang \"$LANG\" \\\n    && apt-get clean && rm -rf \"/var/lib/apt/lists\"/*\nCOPY --from=builder /opt/python /opt/python\nCOPY debian/rules /tmp\nCOPY requirements.txt /tmp\nRUN groupadd jupyter \\\n    && useradd -g jupyter -G jupyter,users -c \"Jupyter User\" -s /bin/bash --create-home jupyter \\\n    && chmod 750 ~jupyter \\\n    && chown -R jupyter.jupyter ~jupyter \\\n    && ( echo 'jupyter:demo' | chpasswd ) \\\n    && /opt/python/bin/python3 -m pip install -f /opt/python/wheels \\\n                               --no-warn-script-location \\\n                               debianized-jupyterhub[$extras] \\\n    && /opt/python/bin/python3 -m pip install -r /tmp/requirements.txt \\\n    && /opt/python/bin/python3 -m pip uninstall -y debianized-jupyterhub \\\n    && bash -c \"rm -rf /opt/python/lib/python3.*/site-packages/phantomjs_bin/bin/{macosx,windows}\" \\\n    && ln -s /opt/python/bin/* /usr/local/bin\nWORKDIR /home/jupyter\nUSER jupyter\nCOPY --chown=jupyter:jupyter docs/examples/*.ipynb ./\nEXPOSE 8900 8901\nCMD jupyter notebook --ip=127.0.0.1 --port=8900\n"
}