{
  "startTime": 1674216592372,
  "endTime": 1674216592678,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 30
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 34,
        "columnEnd": 50
      }
    }
  ],
  "repairedDockerfile": "FROM ruby:3.1.0-alpine AS builder\n\nLABEL maintainer=\"jeanine@littleforestconsulting.com\"\n\nRUN apk update && apk upgrade && apk add --update --no-cache \\\n  build-base \\\n  curl-dev \\\n  nodejs \\\n  postgresql-dev \\\n  tzdata \\\n  vim \\\n  yarn && rm -rf /var/cache/apk/*\n\nARG RAILS_ROOT=/usr/src/app/\nWORKDIR $RAILS_ROOT\n\nCOPY package*.json yarn.lock $RAILS_ROOT\nRUN yarn install --check-files && yarn cache clean;\n\nCOPY Gemfile* $RAILS_ROOT\nRUN bundle install\n\nCOPY . .\n\n### BUILD STEP DONE ###\n\nFROM ruby:3.1.0-alpine\n\nARG RAILS_ROOT=/usr/src/app/\n\nRUN apk update && apk upgrade && apk add --update --no-cache \\\n  bash \\\n  imagemagick \\\n  nodejs \\\n  postgresql-client \\\n  tzdata \\\n  vim \\\n  yarn && rm -rf /var/cache/apk/*\n\nWORKDIR $RAILS_ROOT\n\nCOPY --from=builder $RAILS_ROOT $RAILS_ROOT\nCOPY --from=builder /usr/local/bundle/ /usr/local/bundle/\n\nEXPOSE 3000\n\nENTRYPOINT [\"./docker-entrypoint.sh\"]\nCMD [\"bin/rails\", \"s\", \"-b\", \"0.0.0.0\"]\n"
}