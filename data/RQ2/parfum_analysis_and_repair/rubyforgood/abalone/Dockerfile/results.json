{
  "startTime": 1674215880615,
  "endTime": 1674215881246,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 48
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 59,
        "columnEnd": 75
      }
    }
  ],
  "repairedDockerfile": "FROM ruby:3.0.3-alpine AS builder\n\nARG RAILS_ROOT=/usr/src/app/\nWORKDIR $RAILS_ROOT\n\nRUN apk add --update --no-cache  \\\n  build-base \\\n  curl-dev \\\n  nodejs \\\n  postgresql-dev \\\n  tzdata \\\n  git \\\n  yarn\n\nCOPY package*.json yarn.lock Gemfile* $RAILS_ROOT\nRUN yarn install --check-files --frozen-lockfile &&\\\n      bundle config --global frozen 1 && bundle install && yarn cache clean;\n\n### BUILD STEP DONE ###\n\nFROM ruby:3.0.3-alpine\n\nARG RAILS_ROOT=/usr/src/app/\nWORKDIR $RAILS_ROOT\n\nRUN set -eux; \\\n\taddgroup -S app; \\\n\tadduser -S -D -G app -H -h $RAILS_ROOT -s /bin/sh app; \\\n\tchown -R app:app $RAILS_ROOT\n\nRUN apk add --update --no-cache \\\n  bash\\\n  nodejs \\\n  postgresql-client \\\n  su-exec \\\n  tzdata \\\n  yarn \\\n  && rm -rf /var/cache/apk/*\n\nCOPY --from=builder $RAILS_ROOT $RAILS_ROOT\nCOPY --from=builder /usr/local/bundle/ /usr/local/bundle/\n\nCOPY . .\n\nRUN chown -R app:app $RAILS_ROOT\n\nEXPOSE 3000\n\nENTRYPOINT [\"./docker-entrypoint.sh\"]\nCMD [\"abalone\"]\n"
}