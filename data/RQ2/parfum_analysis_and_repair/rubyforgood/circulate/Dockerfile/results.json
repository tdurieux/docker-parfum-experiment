{
  "startTime": 1674254786433,
  "endTime": 1674254787883,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 30
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ruby:3.0.3-alpine3.15 AS builder\n\nLABEL maintainer=\"jeanine@littleforestconsulting.com\"\n\nRUN apk update && apk upgrade && apk add --update --no-cache \\\n  build-base \\\n  curl-dev \\\n  git \\\n  nodejs \\\n  postgresql-dev \\\n  tzdata \\\n  vim \\\n  yarn && rm -rf /var/cache/apk/*\n\nARG RAILS_ROOT=/usr/src/app/\nWORKDIR $RAILS_ROOT\n\nCOPY package*.json yarn.lock $RAILS_ROOT\nRUN yarn install --check-files && yarn cache clean;\n\nCOPY gems/ $RAILS_ROOT/gems\nCOPY Gemfile* $RAILS_ROOT\nRUN bundle config --global frozen 1 && bundle install\n\nCOPY . .\n\n### BUILD STEP DONE ###\n\nFROM ruby:3.0.3-alpine3.15\n\nARG RAILS_ROOT=/usr/src/app/\nARG USER_ID\n\nRUN apk update && apk upgrade && apk add --update --no-cache \\\n  bash \\\n  imagemagick \\\n  nodejs \\\n  postgresql-client \\\n  tzdata \\\n  vim \\\n  git \\\n  openssl \\\n  fontconfig \\\n  libwebp \\\n  yarn && rm -rf /var/cache/apk/*\n\nRUN apk add --update --no-cache --virtual .ms-fonts msttcorefonts-installer && \\\n update-ms-fonts 2>/dev/null && \\\n fc-cache -f && \\\n apk del .ms-fonts\n\nRUN yarn global add node-gyp\nRUN yarn global add heroku\n\nRUN adduser --disabled-password --gecos '' --uid $USER_ID user\nUSER user\n\nWORKDIR $RAILS_ROOT\n\nCOPY --from=builder --chown=user:user $RAILS_ROOT $RAILS_ROOT\nCOPY --from=builder --chown=user:user /usr/local/bundle/ /usr/local/bundle/\n\nEXPOSE 3000\n\nENTRYPOINT [\"./docker-entrypoint.sh\"]\nCMD [\"bin/rails\", \"s\", \"-b\", \"0.0.0.0\"]\n"
}