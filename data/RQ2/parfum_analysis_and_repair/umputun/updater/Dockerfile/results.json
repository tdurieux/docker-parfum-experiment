{
  "startTime": 1674253833581,
  "endTime": 1674253834274,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 33
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM umputun/baseimage:buildgo-v1.7.0  as build\n\nARG GIT_BRANCH\nARG GITHUB_SHA\nARG CI\n\nENV GOFLAGS=\"-mod=vendor\"\nENV CGO_ENABLED=0\n\nADD . /build\nWORKDIR /build\n\nRUN apk add --no-cache --update git tzdata ca-certificates\n\nRUN \\\n    if [ -z \"$CI\" ] ; then \\\n    echo \"runs outside of CI\" && version=$(git rev-parse --abbrev-ref HEAD)-$(git log -1 --format=%h)-$(date +%Y%m%dT%H:%M:%S); \\\n    else version=${GIT_BRANCH}-${GITHUB_SHA:0:7}-$(date +%Y%m%dT%H:%M:%S); fi && \\\n    echo \"version=$version\" && \\\n    cd app && go build -o /build/updater -ldflags \"-X main.revision=${version} -s -w\"\n\n\nFROM ghcr.io/umputun/baseimage/app:v1.7.0\nRUN apk add --no-cache docker openssh-client\n\nRUN \\\n  mkdir -p /home/app/.ssh && \\\n  echo \"StrictHostKeyChecking=no\" > /home/app/.ssh/config && \\\n  echo \"LogLevel=quiet\" >> /home/app/.ssh/config && \\\n  chown -R app:app /home/app/.ssh/ && \\\n  chmod 600 /home/app/.ssh/* && \\\n  chmod 700 /home/app/.ssh\n\nCOPY --from=build /build/updater /srv/updater\nWORKDIR /srv\nCMD [\"/srv/updater\"]\n"
}