{
  "startTime": 1674221049786,
  "endTime": 1674221050533,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG TZ=America/Chicago\n\nFROM umputun/baseimage:buildgo-latest as build-backend\n\nARG CI\nARG GIT_BRANCH\nARG SKIP_TEST\n\nENV GOFLAGS=\"-mod=vendor\"\n\nADD backend /build/secrets\nADD .git /build/secrets/.git\nWORKDIR /build/secrets\n\n# run tests and linters\nRUN \\\n    if [ -z \"$SKIP_TEST\" ] ; then \\\n    go test -timeout=30s  ./... && \\\n    golangci-lint run ; \\\n    else echo \"skip tests and linter\" ; fi\n\nRUN \\\n    if [ -z \"$CI\" ] ; then \\\n    echo \"runs outside of CI\" && version=$(/script/git-rev.sh); \\\n    else version=${GIT_BRANCH}-${GITHUB_SHA:0:7}-$(date +%Y%m%dT%H:%M:%S); fi && \\\n    echo \"version=$version\" && \\\n    go build -o secrets -ldflags \"-X main.revision=${version} -s -w\" ./app\n\n\nFROM node:10.19.0-alpine3.11 as build-frontend\nWORKDIR /srv/frontend/\n\nRUN apk add --no-cache --update git python make g++\nCOPY ./frontend/package.json ./frontend/package-lock.json ./\nRUN npm install && npm cache clean --force;\n\nCOPY ./frontend /srv/frontend\nRUN npm run build\nRUN npm prune --production\n\nFROM umputun/baseimage:app-latest\n\nCOPY --from=build-backend /build/secrets/secrets /srv/secrets\nCOPY --from=build-frontend /srv/frontend/public/ /srv/docroot\n\nWORKDIR /srv\nEXPOSE 8080\n\n\nCMD [\"/srv/secrets\"]\nENTRYPOINT [\"/init.sh\"]\n"
}