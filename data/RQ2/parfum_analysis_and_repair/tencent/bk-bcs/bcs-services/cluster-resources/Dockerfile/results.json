{
  "startTime": 1674221135788,
  "endTime": 1674221136439,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 24
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 51
      }
    }
  ],
  "repairedDockerfile": "# -------------- builder container --------------\nFROM golang:1.17.5 AS builder\n\nLABEL maintainer=\"Tencent BlueKing\"\n\nENV CGO_ENABLED=0 GOOS=linux GOARCH=amd64\n\nWORKDIR /go/src/\n\nARG VERSION\nARG GITCOMMIT\n\nRUN apt-get install -y --no-install-recommends make && rm -rf /var/lib/apt/lists/*;\n\nCOPY . .\nRUN go mod download\nRUN make build VERSION=$VERSION GITCOMMIT=$GITCOMMIT\n\n# package swagger dependency files\nRUN cp -R ./third_party/swagger-ui/* ./swagger/\n\n# package example files\nARG SRC_EXAMPLE_DIR=/go/src/pkg/resource/example\nARG TARGET_EXAMPLE_DIR=/go/src/example\n\nRUN mkdir -p $TARGET_EXAMPLE_DIR/config\nRUN mkdir -p $TARGET_EXAMPLE_DIR/manifest\nRUN mkdir -p $TARGET_EXAMPLE_DIR/reference\n\nRUN cp -R $SRC_EXAMPLE_DIR/config/* $TARGET_EXAMPLE_DIR/config/\nRUN cp -R $SRC_EXAMPLE_DIR/manifest/* $TARGET_EXAMPLE_DIR/manifest/\nRUN cp -R $SRC_EXAMPLE_DIR/reference/* $TARGET_EXAMPLE_DIR/reference/\n\n# package form tmpl & schema files\nARG SRC_FORM_TMPL_DIR=/go/src/pkg/resource/form/tmpl\nARG TARGET_FORM_TMPL_DIR=/go/src/form_tmpl\n\nRUN mkdir -p $TARGET_FORM_TMPL_DIR\n\nRUN cp -R $SRC_FORM_TMPL_DIR/* $TARGET_FORM_TMPL_DIR/\n\n# -------------- runner container --------------\nFROM alpine:3.15 AS runner\n\nLABEL maintainer=\"Tencent BlueKing\"\n\nRUN apk --update --no-cache add bash ca-certificates vim\n\nWORKDIR /data/workspace\n\n# for detect memory use growth, remove after solve problem\nRUN apk add --no-cache git make musl-dev go\n\n# Configure Go\nENV GOROOT /usr/lib/go\nENV GOPATH /go\nENV PATH /go/bin:$PATH\n\nRUN mkdir -p ${GOPATH}/src ${GOPATH}/bin\n\n# source code for pprof debug\nCOPY --from=builder /go/src /go/src\n# end\n\nCOPY --from=builder /go/src/cluster-resources-service /usr/bin/cluster-resources-service\n\nCOPY --from=builder /go/src/etc /data/workspace/etc\n\nCOPY --from=builder /go/src/swagger /data/workspace/swagger\n\nCOPY --from=builder /go/src/example /data/workspace/example\n\nENV EXAMPLE_FILE_BASE_DIR=/data/workspace/example\n\nCOPY --from=builder /go/src/form_tmpl /data/workspace/form_tmpl\n\nENV FORM_TMPL_FILE_BASE_DIR=/data/workspace/form_tmpl\n\nCOPY --from=builder /go/src/pkg/i18n/locale/lc_msgs.yaml /data/workspace/lc_msgs.yaml\n\nENV LOCALIZE_FILE_PATH=/data/workspace/lc_msgs.yaml\n\n# default log file base dir\nRUN mkdir -p /tmp/logs\n"
}