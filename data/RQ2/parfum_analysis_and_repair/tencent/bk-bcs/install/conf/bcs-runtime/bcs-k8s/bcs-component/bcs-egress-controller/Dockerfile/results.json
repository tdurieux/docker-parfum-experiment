{
  "startTime": 1674249820032,
  "endTime": 1674249821346,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 3,
        "columnEnd": 53
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 13,
        "lineEnd": 50,
        "columnStart": 29,
        "columnEnd": 81
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 109
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 47,
        "columnEnd": 101
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 3,
        "columnEnd": 32
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM centos:7 AS build\n\n# install compilation tools\nRUN yum install -y make gcc perl pcre-devel zlib-devel wget readline-devel openssl-devel unzip net-tools less && rm -rf /var/cache/yum\n\n# install nginx with http_proxy_connect\nRUN yum groupinstall -y 'Development Tools' && yum install -y libxslt-devel gd-devel gperftools-devel && rm -rf /var/cache/yum\nRUN cd /home && rm -rf nginx-1.16.* ngx_http_proxy_connect_module \\\n&& wget https://nginx.org/download/nginx-1.16.1.tar.gz \\\n&& git clone https://github.com/chobits/ngx_http_proxy_connect_module \\\n&& tar -zxvf nginx-1.16.1.tar.gz && rm nginx-1.16.1.tar.gz\nRUN  cd /home/nginx-1.16.1 \\\n&& patch -p1 < /home/ngx_http_proxy_connect_module/patch/proxy_connect_rewrite_101504.patch\nRUN cd /home/nginx-1.16.1 && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n--prefix=/usr/local/nginx \\\n--add-module=/home/ngx_http_proxy_connect_module \\\n--http-client-body-temp-path=/usr/local/nginx/tmp/client_body \\\n--http-proxy-temp-path=/usr/local/nginx/tmp/proxy \\\n--http-fastcgi-temp-path=/usr/local/nginx/tmp/fastcgi \\\n--http-uwsgi-temp-path=/usr/local/nginx/tmp/uwsgi \\\n--http-scgi-temp-path=/usr/local/nginx/tmp/scgi \\\n--pid-path=/run/nginx.pid \\\n--lock-path=/run/lock/subsys/nginx \\\n--with-perl_modules_path=/usr/local/nginx/perl5 \\\n--user=nginx \\\n--group=nginx \\\n--with-stream \\\n--with-stream_ssl_module \\\n--with-file-aio \\\n--with-http_ssl_module \\\n--with-http_v2_module \\\n--with-http_realip_module \\\n--with-http_addition_module \\\n--with-http_xslt_module \\\n--with-http_image_filter_module \\\n--with-http_sub_module \\\n--with-http_dav_module \\\n--with-http_flv_module \\\n--with-http_mp4_module \\\n--with-http_gunzip_module \\\n--with-http_gzip_static_module \\\n--with-http_random_index_module \\\n--with-http_secure_link_module \\\n--with-http_degradation_module \\\n--with-http_stub_status_module \\\n--with-pcre \\\n--with-pcre-jit \\\n--with-google_perftools_module \\\n--with-debug \\\n--with-cc-opt='-O2 -g -pipe -Wall -Wno-error -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector-strong --param=ssp-buffer-size=4 -grecord-gcc-switches -specs=/usr/lib/rpm/redhat/redhat-hardened-cc1 -m64 -mtune=generic' \\\n--with-ld-opt='-Wl,-z,relro -specs=/usr/lib/rpm/redhat/redhat-hardened-ld -Wl,-E'\nRUN cd /home/nginx-1.16.1 && make && make install\n\n# STEP 2: build controller image\nFROM centos:7\n\n# copy nginx file\nCOPY --from=build /usr/local/nginx /usr/local/nginx\nRUN mkdir -p /usr/local/nginx/tmp && mkdir -p /var/log/nginx\n\n#for command envsubst\nRUN yum install -y gettext && rm -rf /var/cache/yum\n\n# setup required ENV\nENV BCS_EGRESS_PORT=12345\n\n# prepare egress-controller requirements\nRUN mkdir -p /data/bcs/bcs-egress-controller/template\nCOPY config/nginx-template.conf /data/bcs/bcs-egress-controller/template\nCOPY config/nginx.conf /usr/local/nginx/conf/\nCOPY container-start.sh /data/bcs/bcs-egress-controller/\nRUN chmod +x /data/bcs/bcs-egress-controller/container-start.sh\nWORKDIR /data/bcs/bcs-egress-controller\nCMD [ \"/data/bcs/bcs-egress-controller/container-start.sh \" ]\n"
}