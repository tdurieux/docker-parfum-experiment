{
  "startTime": 1674253304685,
  "endTime": 1674253306638,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 3,
        "columnEnd": 47
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 3,
        "columnEnd": 69
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 3,
        "columnEnd": 53
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 3,
        "columnEnd": 14
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 37,
        "lineEnd": 73,
        "columnStart": 3,
        "columnEnd": 81
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 109
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 47,
        "columnEnd": 104
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# STEP 1: build haproxy lua5.3 luarocks and lua libs\nFROM centos:centos7 AS build\n\n# install haproxy\nRUN yum install -y make gcc perl pcre-devel zlib-devel wget readline-devel openssl-devel unzip net-tools less && rm -rf /var/cache/yum\nRUN cd /home \\\n&& wget https://www.lua.org/ftp/lua-5.3.5.tar.gz \\\n&& tar -zxvf lua-5.3.5.tar.gz && rm lua-5.3.5.tar.gz \\\n&& cd lua-5.3.5 && make linux && make install\nRUN cd /home \\\n&& wget https://luarocks.org/releases/luarocks-3.0.4.tar.gz \\\n&& tar zxpf luarocks-3.0.4.tar.gz && rm luarocks-3.0.4.tar.gz \\\n&& cd luarocks-3.0.4 \\\n&& ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make bootstrap\nRUN cd /home \\\n&& luarocks install penlight \\\n&& luarocks install luajson \\\n&& luarocks install luaidl \\\n&& luarocks install luadoc \\\n&& luarocks install vstruct \\\n&& luarocks install luasocket \\\n&& luarocks install loop \\\n&& luarocks install router \\\n&& luarocks install lua-cjson-ol\nRUN cd /home \\\n&& wget https://www.haproxy.org/download/1.8/src/haproxy-1.8.19.tar.gz \\\n&& tar -xvzf haproxy-1.8.19.tar.gz \\\n&& rm haproxy-1.8.19.tar.gz \\\n&& cd haproxy-1.8.19/ \\\n&& make TARGET=linux2628 USE_LINUX_TPROXY=1 USE_ZLIB=1 USE_REGPARM=1 USE_OPENSSL=1 USE_LUA=1 USE_PCRE=1 USE_PCRE_JIT=1 \\\n&& make install\n\n# install nginx\nRUN yum groupinstall -y 'Development Tools' && yum install -y libxslt-devel gd gd-devel gperftools-devel && rm -rf /var/cache/yum\nRUN cd /home \\\n&& wget https://nginx.org/download/nginx-1.15.9.tar.gz \\\n&& tar -zxvf nginx-1.15.9.tar.gz && rm nginx-1.15.9.tar.gz && cd nginx-1.15.9 \\\n&& ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n--prefix=/usr/local/nginx \\\n--http-client-body-temp-path=/usr/local/nginx/tmp/client_body \\\n--http-proxy-temp-path=/usr/local/nginx/tmp/proxy \\\n--http-fastcgi-temp-path=/usr/local/nginx/tmp/fastcgi \\\n--http-uwsgi-temp-path=/usr/local/nginx/tmp/uwsgi \\\n--http-scgi-temp-path=/usr/local/nginx/tmp/scgi \\\n--pid-path=/run/nginx.pid \\\n--lock-path=/run/lock/subsys/nginx \\\n--with-perl_modules_path=/usr/local/nginx/perl5 \\\n--user=nginx \\\n--group=nginx \\\n--with-stream \\\n--with-stream_ssl_module \\\n--with-file-aio --with-ipv6 \\\n--with-http_ssl_module \\\n--with-http_v2_module \\\n--with-http_realip_module \\\n--with-http_addition_module \\\n--with-http_xslt_module \\\n--with-http_image_filter_module \\\n--with-http_sub_module \\\n--with-http_dav_module \\\n--with-http_flv_module \\\n--with-http_mp4_module \\\n--with-http_gunzip_module \\\n--with-http_gzip_static_module \\\n--with-http_random_index_module \\\n--with-http_secure_link_module \\\n--with-http_degradation_module \\\n--with-http_stub_status_module \\\n--with-pcre \\\n--with-pcre-jit \\\n--with-google_perftools_module \\\n--with-debug \\\n--with-cc-opt='-O2 -g -pipe -Wall -Wno-error -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector-strong --param=ssp-buffer-size=4 -grecord-gcc-switches -specs=/usr/lib/rpm/redhat/redhat-hardened-cc1 -m64 -mtune=generic' \\\n--with-ld-opt='-Wl,-z,relro -specs=/usr/lib/rpm/redhat/redhat-hardened-ld -Wl,-E' \\\n&& make && make install\n\n# copy bcs-statistic\nCOPY ./bcs-statistic /data/bcs/bcs-lb/bcs-statistic\n\nRUN mkdir -p /data/bcs/bcs-lb/backup /data/bcs/bcs-lb/generate \\\n/data/bcs/bcs-lb/logs /data/bcs/bcs-lb/template /data/bcs/bcs-lb/cert\nCOPY bcs-loadbalance /data/bcs/bcs-lb\nCOPY start.sh /data/bcs/bcs-lb\nCOPY config/haproxy.cfg.template /data/bcs/bcs-lb/template\nCOPY config/nginx.conf.template /data/bcs/bcs-lb/template\nCOPY config/haproxy.cfg /etc/haproxy/\nCOPY config/nginx.conf /usr/local/nginx/conf/\n\n# STEP 2: build loadbalance image\nFROM centos:centos7\nCOPY --from=build /data/bcs/bcs-lb /data/bcs/bcs-lb\n# copy haproxy file\nCOPY --from=build /etc/haproxy /etc/haproxy\nCOPY --from=build /usr/local/lib /usr/local/lib\nCOPY --from=build /usr/local/include /usr/local/include\nCOPY --from=build /usr/local/lib64 /usr/local/lib64\nCOPY --from=build /usr/bin /usr/bin\nCOPY --from=build /usr/lib64 /usr/lib64\nCOPY --from=build /usr/local/share /usr/local/share\nCOPY --from=build /usr/local/bin/lua /usr/local/bin/lua\nCOPY --from=build /usr/local/bin/luac /usr/local/bin/luac\nCOPY --from=build /usr/local/sbin/haproxy /usr/local/sbin/haproxy\n\n# copy nginx file\nCOPY --from=build /usr/local/nginx /usr/local/nginx\nRUN mkdir /usr/local/nginx/tmp && mkdir /var/log/nginx\n\n# create user bcs;  install net tool\nRUN useradd -u 1025 bcs\n# set sesssion timeout time\nENV LB_SESSION_TIMEOUT 90\nENV BCS_PROXY_MODULE=haproxy\n\n# chmod start.sh\nRUN chmod +x /data/bcs/bcs-lb/start.sh /data/bcs/bcs-lb/bcs-loadbalance\nWORKDIR /data/bcs/bcs-lb"
}