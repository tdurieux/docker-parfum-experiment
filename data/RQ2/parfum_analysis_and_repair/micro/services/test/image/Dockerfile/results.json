{
  "startTime": 1674246145219,
  "endTime": 1674246146518,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 12,
        "columnEnd": 51
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 1,
        "lineEnd": 1,
        "columnStart": 4,
        "columnEnd": 54
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:latest\nRUN apk add --no-cache make git go gcc libtool musl-dev curl bash\n\n# Configure Go\nENV GOROOT /usr/lib/go\nENV GOPATH /go\nENV PATH /go/bin:$PATH\n\nRUN mkdir -p ${GOPATH}/src ${GOPATH}/bin\n\nRUN apk add ca-certificates && \\\n    rm -rf /var/cache/apk/* /tmp/* && \\\n    [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf\n\nRUN apk add --update ca-certificates openssl tar && \\\n            wget https://github.com/coreos/etcd/releases/download/v3.4.7/etcd-v3.4.7-linux-amd64.tar.gz && \\\n            tar xzvf etcd-v3.4.7-linux-amd64.tar.gz && \\\n            mv etcd-v3.4.7-linux-amd64/etcd* /bin/ && \\\n            apk del --purge tar openssl && \\\n            rm -Rf etcd-v3.4.7-linux-amd64* /var/cache/apk/* && rm etcd-v3.4.7-linux-amd64.tar.gz\nVOLUME      /data\nEXPOSE      2379 2380 4001 7001\nADD         services/test/image/run-etcd.sh /bin/run.sh\n\n# Speeding up tests by predownloading and building dependencies for services used.\nRUN mkdir services\nCOPY services/go.* services/\nRUN cd services && go mod download\nCOPY services/ services\nRUN bash -c 'for d in $(find services -name \"main.go\" | xargs -n 1 dirname); do pushd $d && go install && popd; done'\nCOPY ./micro/micro /microserver\nENTRYPOINT [\"sh\", \"/bin/run.sh\"]\n"
}