{
  "startTime": 1674221198424,
  "endTime": 1674221199387,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 0,
        "columnEnd": 39
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 0,
        "columnEnd": 53
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 0,
        "columnEnd": 61
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 84,
        "lineEnd": 84,
        "columnStart": 0,
        "columnEnd": 37
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 86,
        "lineEnd": 86,
        "columnStart": 0,
        "columnEnd": 37
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Infosec Jupyterthon script: Jupyter Environment Dockerfile\n# Author: Ashwin Patil @ashwinpatil & Roberto Rodriguez @Cyb3rWard0g\n# License: GPL-3.0\n\nARG BASE_CONTAINER=jupyter/pyspark-notebook\nFROM $BASE_CONTAINER\n\nLABEL maintainer=\"Ashwin Patil @ashwinpatil & Roberto Rodriguez @Cyb3rWard0g\"\nLABEL description=\"Dockerfile Infosec Jupyterthon Project.\"\n\nARG YEAR=\"2021\"\n\nUSER root\n\n# R pre-requisites\nRUN apt-get update --yes && \\\n    apt-get install --yes --no-install-recommends \\\n    fonts-dejavu \\\n    unixodbc \\\n    unixodbc-dev \\\n    r-cran-rodbc \\\n    gfortran \\\n    gcc \\\n    python3-gi \\\n    python3-gi-cairo \\\n    gir1.2-secret-1 && \\\n    apt-get clean && rm -rf /var/lib/apt/lists/*\n\nUSER ${NB_UID}\n\n# R packages including IRKernel which gets installed globally.\n# r-e1071: dependency of the caret R package\nRUN mamba install --quiet --yes \\\n    'r-base' \\\n    'r-caret' \\\n    'r-crayon' \\\n    'r-devtools' \\\n    'r-e1071' \\\n    'r-forecast' \\\n    'r-hexbin' \\\n    'r-htmltools' \\\n    'r-htmlwidgets' \\\n    'r-irkernel' \\\n    'r-nycflights13' \\\n    'r-randomforest' \\\n    'r-rcurl' \\\n    'r-rodbc' \\\n    'r-rsqlite' \\\n    'r-shiny' \\\n    'unixodbc' && \\\n    mamba clean --all -f -y && \\\n    fix-permissions \"${CONDA_DIR}\" && \\\n    fix-permissions \"/home/${NB_USER}\"\n\n# These packages are not easy to install under arm\n# hadolint ignore=SC2039\nRUN set -x && \\\n    arch=$(uname -m) && \\\n    if [ \"${arch}\" == \"x86_64\" ]; then \\\n        mamba install --quiet --yes \\\n            'r-rmarkdown' \\\n            'r-tidymodels' \\\n            'r-tidyverse' && \\\n            mamba clean --all -f -y && \\\n            fix-permissions \"${CONDA_DIR}\" && \\\n            fix-permissions \"/home/${NB_USER}\"; \\\n    fi;\n\n# Add conda to path\nENV PATH /opt/conda/envs/env/bin:$PATH\n# Environment variable for Pip and conda packages to be installed\nENV INSTALL_CONDA_PACKAGES jupyter_contrib_nbextensions jupyterthemes selenium phantomjs autopep8 plotly qgrid black pandas-profiling rise vega vega_datasets\nENV INSTALL_PIP_PACKAGES azure-cli jupyterlab-git pyvis setuptools_git pandas-bokeh nbcommands awscli attackcti splunk-sdk elasticsearch elasticsearch-dsl geoip2 untangle huntlib requests requests-html graphistry openhunt==1.6.6 jupyter_bokeh wordcloud\nENV INSTALL_MSTICPY_DEV_PACKAGES aiohttp>=3.0.0 bandit>=1.7.0 beautifulsoup4 black>=20.8b1 coverage>=5.5 filelock>=3.0.0 flake8>=3.8.4 markdown>=3.3.4 mccabe>=0.6.1 mypy>=0.812 nbdime>=2.1.0 pep8-naming>=0.10.0 pep8>=1.7.1 pipreqs>=0.4.9 prospector>=1.3.1 pycodestyle>=2.6.0 pydocstyle>=6.0.0 pyflakes>=2.2.0 pylint>=2.5.3 pyroma>=3.1 pytest-check>=1.0.1 pytest-cov>=2.11.1 pytest>=5.0.1 responses>=0.13.2 sphinx>=2.1.2 sphinx_rtd_theme>=0.5.1 virtualenv\n# Install conda and pip packages\nRUN conda install --quiet --yes ${INSTALL_CONDA_PACKAGES} && \\\n pip install --no-cache-dir llvmlite --ignore-installed && \\\n pip install --no-cache-dir --upgrade --quiet ${INSTALL_PIP_PACKAGES} && \\\n pip install --no-cache-dir --upgrade --quiet ${INSTALL_MSTICPY_DEV_PACKAGES} && \\\nmkdir /home/$NB_USER/.msticpy && \\\nconda clean --all -f -y && \\\nrm -rf \"/home/${NB_USER}/.cache/yarn\" && \\\n# Clone msticpy and other github directories with sample notebooks\ngit clone https://github.com/microsoft/msticpy.git && \\\n pip install --no-cache-dir -e /home/$NB_USER/msticpy && \\\ngit clone https://github.com/microsoft/msticnb.git && \\\n pip install --no-cache-dir -e /home/$NB_USER/msticnb\n\n# Activate ipywidgets extension in the environment that runs the notebook server\nRUN jupyter nbextension enable --py widgetsnbextension --sys-prefix && \\\n    jupyter nbextension enable toc2/main --sys-prefix && \\\n    jupyter nbextension enable execute_time/ExecuteTime --sys-prefix && \\\n    jupyter nbextension enable python-markdown/main --sys-prefix && \\\n    jupyter nbextension enable codefolding/main --sys-prefix && \\\n    jupyter nbextension enable autosavetime/main --sys-prefix && \\\n    jupyter nbextension enable tree-filter/index --sys-prefix && \\\n    jupyter nbextension enable hide_input_all/main --sys-prefix && \\\n    jupyter nbextension enable hinterland/hinterland --sys-prefix && \\\n    jupyter nbextension enable varInspector/main --sys-prefix && \\\n    jupyter nbextension enable spellchecker/main --sys-prefix && \\\n    jupyter nbextension enable toggle_all_line_numbers/main --sys-prefix && \\\n    jupyter nbextension enable --py qgrid --sys-prefix && \\\n    jupyter nbextension install https://github.com/drillan/jupyter-black/archive/master.zip --sys-prefix && \\\n    jupyter nbextension install --py nbdime --sys-prefix && \\\n    jupyter nbextension enable jupyter-black-master/jupyter-black --sys-prefix && \\\n    jupyter nbextension enable nbdime --py --sys-prefix && \\\n    jupyter nbextension enable rise --py --sys-prefix && \\\n    jupyter nbextensions_configurator enable --sys-prefix && \\\n    jupyter labextension install @jupyterlab/git --no-build && \\\n    jupyter labextension install @jupyterlab/github --no-build && \\\n    jupyter labextension enable git && \\\n    jupyter lab build --dev-build=False\n\nCOPY docs/2020/notebooks ${HOME}/docs/2020/notebooks\nCOPY docs/${YEAR}/sessions ${HOME}/docs/${YEAR}/sessions\nCOPY docs/workshops ${HOME}/docs/workshops\n\nUSER root\nRUN fix-permissions ${HOME}/docs\n\nUSER ${NB_UID}\n\nWORKDIR \"${HOME}\"\n"
}