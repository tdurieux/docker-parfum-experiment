diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/ncbi/sra-tools/build/docker/Dockerfile.delite b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/ncbi/sra-tools/build/docker/Dockerfile.delite/repaired.Dockerfile
index bf61e39..54d3447 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/ncbi/sra-tools/build/docker/Dockerfile.delite
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/ncbi/sra-tools/build/docker/Dockerfile.delite/repaired.Dockerfile
@@ -18,11 +18,11 @@
 # % docker run -v ~/output/:/output:rw --rm sratoolkit:delite delite_test_docker.sh SRR000001
 # If docker container run at AWS, "-v /etc/pki:/etc/pki:ro -v /etc/ssl:/etc/ssl:ro" should be added to command line.
 # % docker run -v ~/output/:/output:rw -v /etc/pki:/etc/pki:ro -v /etc/ssl:/etc/ssl:ro --rm sratoolkit:delite delite_docker.sh SRR000001
-# 
+#
 
 # bionic is 18.04 LTS
 FROM ubuntu:bionic AS build
-RUN apt-get --quiet update && apt-get --quiet install -y make cmake git gcc g++ flex bison uuid-runtime
+RUN apt-get --quiet update && apt-get --quiet --no-install-recommends install -y make cmake git gcc g++ flex bison uuid-runtime && rm -rf /var/lib/apt/lists/*;
 ARG BUILD_STYLE=--without-debug
 ARG NGS_BRANCH=engineering
 ARG VDB_BRANCH=engineering
@@ -31,17 +31,17 @@ RUN git clone -b ${NGS_BRANCH} --depth 1 https://github.com/ncbi/ngs.git
 RUN git clone -b ${VDB_BRANCH} --depth 1 https://github.com/ncbi/ncbi-vdb.git
 RUN git clone -b ${SRA_BRANCH} --depth 1 https://github.com/ncbi/sra-tools.git
 WORKDIR /ncbi-vdb
-RUN ./configure ${BUILD_STYLE} && make -s >/dev/null 2>&1 || { echo "make failed"; exit 1; }
+RUN ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" ${BUILD_STYLE} && make -s >/dev/null 2>&1 || { echo "make failed"; exit 1; }
 WORKDIR /ngs
-RUN ./configure ${BUILD_STYLE} && make -s -C ngs-sdk >/dev/null 2>&1 || { echo "make failed"; exit 1; }
+RUN ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" ${BUILD_STYLE} && make -s -C ngs-sdk >/dev/null 2>&1 || { echo "make failed"; exit 1; }
 WORKDIR /sra-tools
-RUN ./configure ${BUILD_STYLE} && make -s >/dev/null 2>&1 || { echo "make failed"; exit 1; }
+RUN ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" ${BUILD_STYLE} && make -s >/dev/null 2>&1 || { echo "make failed"; exit 1; }
 RUN make install
 
 FROM build AS delited
 ### Install delite process binaries and script
 RUN cp -a /root/ncbi-outdir/sra-tools/*/*/*/*/bin/kar+* /root/ncbi-outdir/sra-tools/*/*/*/*/bin/make-read-filter* /sra-tools/tools/kar/sra_delite.sh /sra-tools/tools/kar/sra_delite.kfg /sra-tools/tools/kar/delite_docker.sh /sra-tools/tools/kar/delite_docker_local.sh /sra-tools/tools/kar/delite_test_docker.sh /usr/local/ncbi/sra-tools/bin
-RUN chmod ugo+x /usr/local/ncbi/sra-tools/bin/delite_docker.sh /usr/local/ncbi/sra-tools/bin/delite_test_docker.sh /usr/local/ncbi/sra-tools/bin/delite_docker_local.sh 
+RUN chmod ugo+x /usr/local/ncbi/sra-tools/bin/delite_docker.sh /usr/local/ncbi/sra-tools/bin/delite_test_docker.sh /usr/local/ncbi/sra-tools/bin/delite_docker_local.sh
 ### Copy schema files
 WORKDIR /ncbi-vdb/interfaces
 RUN rm -rf csra2 sra/pevents.* ; for i in */*.vschema ; do mkdir -p /schema/`dirname $i` ; cp $i /schema/`dirname $i` ; done