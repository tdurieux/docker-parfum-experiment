diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/snapcore/snapweb/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/snapcore/snapweb/Dockerfile/repaired.Dockerfile
index b92f7f5..7365511 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/snapcore/snapweb/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/snapcore/snapweb/Dockerfile/repaired.Dockerfile
@@ -3,8 +3,8 @@ FROM ubuntu:xenial
 # Note: keep this on a single line to optimize the resulting image size
 
 # install all of snapweb build deps from the deb archive
-RUN dpkg --add-architecture i386 && apt update && apt dist-upgrade -y && apt install -y snapcraft bzr gcc-5-multilib gcc-5-aarch64-linux-gnu gcc-5-arm-linux-gnueabihf gcc-aarch64-linux-gnu gcc-arm-linux-gnueabihf git golang-go libc6-dev:i386 nodejs-legacy wget apt-transport-https npm && apt clean
+RUN dpkg --add-architecture i386 && apt update && apt dist-upgrade -y && apt install --no-install-recommends -y snapcraft bzr gcc-5-multilib gcc-5-aarch64-linux-gnu gcc-5-arm-linux-gnueabihf gcc-aarch64-linux-gnu gcc-arm-linux-gnueabihf git golang-go libc6-dev:i386 nodejs-legacy wget apt-transport-https npm && apt clean && rm -rf /var/lib/apt/lists/*;
 
 # create a cache of the NPM packages required for building snapweb
 ADD package.json /tmp/package.json
-RUN cd /tmp && npm install && mkdir -p /build && cp -a /tmp/node_modules /build
+RUN cd /tmp && npm install && mkdir -p /build && cp -a /tmp/node_modules /build && npm cache clean --force;