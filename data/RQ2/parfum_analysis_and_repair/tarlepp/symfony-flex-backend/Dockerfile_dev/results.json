{
  "startTime": 1674256064071,
  "endTime": 1674256064840,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 90
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 80,
        "lineEnd": 80,
        "columnStart": 4,
        "columnEnd": 81
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 87,
        "lineEnd": 87,
        "columnStart": 7,
        "columnEnd": 38
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 18,
        "columnStart": 7,
        "columnEnd": 50
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM php:8.1.6-fpm\n\n# Let's use bash as a default shell with login each time\nSHELL [\"/bin/bash\", \"--login\", \"-c\"]\n\n# Decrale used arguments from `docker-compose.yml` file\nARG HOST_UID\nARG HOST_GID\n\n# Declare constants\nENV PATH \"$PATH:/home/dev/.composer/vendor/bin:/app/vendor/bin\"\nENV NVM_VERSION v0.39.1\nENV NODE_VERSION 18.2.0\n\n# Update package list and install necessary libraries\nRUN apt-get update \\\n    && apt-get install --no-install-recommends -y \\\n        zlib1g-dev libzip-dev libxml2-dev libicu-dev g++ nano vim git unzip jq bash-completion iproute2 sudo wget \\\n        python3-dev python3-pip python3-setuptools \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Copy the install-php-extensions (Easily install PHP extension in official PHP Docker containers)\nCOPY --from=mlocati/php-extension-installer:1.5.16 /usr/bin/install-php-extensions /usr/local/bin/\n\n# Enable all necessary PHP packages\nRUN install-php-extensions \\\n    apcu \\\n    bcmath \\\n    igbinary \\\n    intl \\\n    opcache \\\n    pdo_mysql \\\n    xdebug \\\n    zip\n\n# Copy the Composer PHAR from the Composer image into the PHP image\nCOPY --from=composer:2.3.9 /usr/bin/composer /usr/bin/composer\n\n# Copy development `php.ini` configuration to container\nCOPY ./docker/php/php-dev.ini /usr/local/etc/php/php.ini\n\n# Define used work directory\nWORKDIR /app\n\n# Add everything inside docker image\nCOPY . .\n\n# Ensure that all required files has execute rights\nRUN chmod +x /app/bin/console \\\n    && chmod +x /app/docker-entrypoint-dev.sh \\\n    && chmod +x /usr/bin/composer\n\nRUN chmod -R o+s+w /usr/local/etc/php\n\n# Enable PHP-FPM status page\nRUN echo 'pm.status_path = /status' >> /usr/local/etc/php-fpm.d/www.conf\n\nRUN curl -f -s https://api.github.com/repos/fabpot/local-php-security-checker/releases/latest | \\\n        grep -E \"browser_download_url(.+)linux_amd64\" | \\\n        cut -d : -f 2,3 | \\\n        tr -d \\\" | \\\n        xargs -I{} wget -O local-php-security-checker {} \\\n    && mv local-php-security-checker /usr/bin/local-php-security-checker \\\n    && chmod +x /usr/bin/local-php-security-checker\n\nRUN groupadd --gid ${HOST_GID} dev \\\n    && useradd -p $(perl -e 'print crypt($ARGV[0], \"password\")' 'dev') --uid ${HOST_UID} --gid ${HOST_GID} --shell /bin/bash --create-home dev \\\n    && usermod -a -G www-data,sudo dev \\\n    && chgrp -hR dev /app\n\nUSER dev\n\nRUN pip3 install --no-cache-dir thefuck --user\n\n# Add necessary stuff to bash autocomplete\nENV PATH \"$PATH:/home/dev/.local/bin\"\n\nRUN echo 'eval \"$(thefuck --alias)\"' >> /home/dev/.bashrc\n\n# Install Node Version Manager (nvm)\nRUN curl -f -o- https://raw.githubusercontent.com/nvm-sh/nvm/$NVM_VERSION/install.sh | bash\n\n# Node setup\n#   1) Install defined version of node and use it as default\n#   2) Install `composer-version` helper tool globally\nRUN source ~/.nvm/nvm.sh \\\n    && nvm install $NODE_VERSION \\\n    && npm install -g composer-version && npm cache clean --force;\n\n# Add necessary stuff to bash autocomplete\nRUN echo 'source /usr/share/bash-completion/bash_completion' >> /home/dev/.bashrc \\\n    && echo 'alias console=\"/app/bin/console\"' >> /home/dev/.bashrc\n\nEXPOSE 9000\n\nENTRYPOINT [\"/app/docker-entrypoint-dev.sh\"]\n"
}