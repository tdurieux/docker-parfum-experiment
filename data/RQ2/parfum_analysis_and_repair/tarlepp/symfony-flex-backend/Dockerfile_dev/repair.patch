diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/tarlepp/symfony-flex-backend/Dockerfile_dev b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/tarlepp/symfony-flex-backend/Dockerfile_dev/repaired.Dockerfile
index 00249e2..8707794 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/tarlepp/symfony-flex-backend/Dockerfile_dev
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/tarlepp/symfony-flex-backend/Dockerfile_dev/repaired.Dockerfile
@@ -14,7 +14,7 @@ ENV NODE_VERSION 18.2.0
 
 # Update package list and install necessary libraries
 RUN apt-get update \
-    && apt-get install -y \
+    && apt-get install --no-install-recommends -y \
         zlib1g-dev libzip-dev libxml2-dev libicu-dev g++ nano vim git unzip jq bash-completion iproute2 sudo wget \
         python3-dev python3-pip python3-setuptools \
     && rm -rf /var/lib/apt/lists/*
@@ -55,7 +55,7 @@ RUN chmod -R o+s+w /usr/local/etc/php
 # Enable PHP-FPM status page
 RUN echo 'pm.status_path = /status' >> /usr/local/etc/php-fpm.d/www.conf
 
-RUN curl -s https://api.github.com/repos/fabpot/local-php-security-checker/releases/latest | \
+RUN curl -f -s https://api.github.com/repos/fabpot/local-php-security-checker/releases/latest | \
         grep -E "browser_download_url(.+)linux_amd64" | \
         cut -d : -f 2,3 | \
         tr -d \" | \
@@ -70,7 +70,7 @@ RUN groupadd --gid ${HOST_GID} dev \
 
 USER dev
 
-RUN pip3 install thefuck --user
+RUN pip3 install --no-cache-dir thefuck --user
 
 # Add necessary stuff to bash autocomplete
 ENV PATH "$PATH:/home/dev/.local/bin"
@@ -78,14 +78,14 @@ ENV PATH "$PATH:/home/dev/.local/bin"
 RUN echo 'eval "$(thefuck --alias)"' >> /home/dev/.bashrc
 
 # Install Node Version Manager (nvm)
-RUN curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/$NVM_VERSION/install.sh | bash
+RUN curl -f -o- https://raw.githubusercontent.com/nvm-sh/nvm/$NVM_VERSION/install.sh | bash
 
 # Node setup
 #   1) Install defined version of node and use it as default
 #   2) Install `composer-version` helper tool globally
 RUN source ~/.nvm/nvm.sh \
     && nvm install $NODE_VERSION \
-    && npm install -g composer-version
+    && npm install -g composer-version && npm cache clean --force;
 
 # Add necessary stuff to bash autocomplete
 RUN echo 'source /usr/share/bash-completion/bash_completion' >> /home/dev/.bashrc \