{
  "startTime": 1674246773995,
  "endTime": 1674246775256,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 51,
        "columnEnd": 79
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.16 as php-base\n\nRUN addgroup --system --gid 1000 docker && \\\n\tadduser --system --uid 1000 --ingroup docker docker && \\\n\tmkdir /src && \\\n\tchown docker:docker /src\n\nRUN apk add --no-cache \\\n\t\tphp81 \\\n\t\tphp81-ctype \\\n\t\tphp81-json \\\n\t\tphp81-mbstring \\\n\t\tphp81-opcache \\\n\t\tphp81-pcntl \\\n\t\tphp81-tokenizer && \\\n\tln -s /usr/bin/php81 /usr/bin/php\n\nCOPY php.ini           /etc/php81/php.ini\n\n\nFROM php-base as php-dev\n\nCOPY --from=blackfire/blackfire /usr/local/bin/blackfire /usr/local/bin/blackfire\nCOPY --from=composer:2          /usr/bin/composer        /usr/bin/composer\n\nRUN apk add --no-cache \\\n\t\tbash \\\n\t\tphp81-curl \\\n\t\tphp81-openssl \\\n\t\tphp81-phar \\\n\t\tphp81-session\n\nRUN wget -O /usr/lib/php81/modules/blackfire.so https://packages.blackfire.io/binaries/blackfire-php/1.79.0/blackfire-php-alpine_amd64-php-81.so && \\\n\techo \"extension = blackfire\" >> /etc/php81/conf.d/blackfire.ini && \\\n\techo \"opcache.jit_buffer_size = 0\" >> /etc/php81/conf.d/blackfire.ini\n\nRUN apk add --no-cache make git php81-dev gcc g++ && \\\n\tln -s /usr/bin/phpize81 /usr/bin/phpize && \\\n\tln -s /usr/bin/php-config81 /usr/bin/php-config\n\nRUN wget -O /tmp/meminfo.tar.gz https://github.com/BitOne/php-meminfo/archive/master.tar.gz && \\\n\ttar zxpf /tmp/meminfo.tar.gz -C /tmp && \\\n\trm /tmp/meminfo.tar.gz && \\\n\tcd /tmp/php-meminfo-master/extension && phpize && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-meminfo && make && make install && \\\n\techo \"extension = meminfo\" >> /etc/php81/conf.d/meminfo.ini\n\nRUN cd /tmp/php-meminfo-master/analyzer && \\\n\tcomposer install && \\\n\tln -s /tmp/php-meminfo-master/analyzer/bin/analyzer /usr/bin/meminfo-analyzer\n\n\nFROM php-dev as apigen-builder\n\nWORKDIR /src\n\nCOPY composer.json           /src/composer.json\nRUN composer install --no-dev --no-progress --no-cache\n\nCOPY bin                     /src/bin\nCOPY src                     /src/src\nCOPY stubs                   /src/stubs\nCOPY apigen.neon             /src/apigen.neon\nCOPY LICENSE                 /src/LICENSE\nRUN composer dump-autoload --classmap-authoritative\n\n\nFROM php-base as apigen\n\nUSER docker\nCOPY --from=apigen-builder --chown=docker:docker /src /src\nENTRYPOINT [\"/src/bin/apigen\"]\n"
}