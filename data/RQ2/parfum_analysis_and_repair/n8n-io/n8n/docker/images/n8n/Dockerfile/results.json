{
  "startTime": 1674252684456,
  "endTime": 1674252686056,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 1,
        "columnEnd": 64
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 59
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:16-alpine\n\nARG N8N_VERSION\n\nRUN if [ -z \"$N8N_VERSION\" ] ; then echo \"The N8N_VERSION argument is missing!\" ; exit 1; fi\n\n# Update everything and install needed dependencies\nRUN apk add --no-cache --update graphicsmagick tzdata git tini su-exec\n\n# # Set a custom user to not have n8n run as root\nUSER root\n\n# Install n8n and the also temporary all the packages\n# it needs to build it correctly.\nRUN apk --update add --virtual build-dependencies python3 build-base ca-certificates && \\\n\tnpm config set python \"$(which python3)\" && \\\n\tnpm_config_user=root npm install -g full-icu n8n@${N8N_VERSION} && \\\n\tapk del build-dependencies \\\n\t&& rm -rf /root /tmp/* /var/cache/apk/* && mkdir /root; npm cache clean --force;\n\n# Install fonts\nRUN apk --no-cache add --virtual fonts msttcorefonts-installer fontconfig && \\\n\tupdate-ms-fonts && \\\n\tfc-cache -f && \\\n\tapk del fonts && \\\n\tfind  /usr/share/fonts/truetype/msttcorefonts/ -type l -exec unlink {} \\; \\\n\t&& rm -rf /root /tmp/* /var/cache/apk/* && mkdir /root\n\nENV NODE_ICU_DATA /usr/local/lib/node_modules/full-icu\n\nWORKDIR /data\n\nCOPY docker-entrypoint.sh /docker-entrypoint.sh\nENTRYPOINT [\"tini\", \"--\", \"/docker-entrypoint.sh\"]\n\nEXPOSE 5678/tcp\n"
}