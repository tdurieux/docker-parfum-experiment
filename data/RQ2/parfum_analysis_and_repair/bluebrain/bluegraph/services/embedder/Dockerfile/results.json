{
  "startTime": 1674248070808,
  "endTime": 1674248071205,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 35
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# BlueGraph: unifying Python framework for graph analytics and co-occurrence analysis.\n\n# Copyright 2020-2021 Blue Brain Project / EPFL\n\n#    Licensed under the Apache License, Version 2.0 (the \"License\");\n#    you may not use this file except in compliance with the License.\n#    You may obtain a copy of the License at\n\n#        http://www.apache.org/licenses/LICENSE-2.0\n\n#    Unless required by applicable law or agreed to in writing, software\n#    distributed under the License is distributed on an \"AS IS\" BASIS,\n#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#    See the License for the specific language governing permissions and\n#    limitations under the License.\n\n# ----------------------------------------------------------------------\n# 1. Build an intermediate image which installs dependencies using conda\nFROM continuumio/miniconda3:4.10.3 as intermediate\n\nCOPY ./services/embedder/environment.yml .\nCOPY ./requirements.txt .\n\nRUN conda env create -f environment.yml\n# SHELL [\"conda\", \"run\", \"-n\", \"embedder\", \"/bin/bash\", \"-c\"]\nENV PATH /opt/conda/envs/embedder/bin:$PATH\nRUN /bin/bash -c \"source activate embedder\"\nRUN conda-pack -n embedder -o /tmp/env.tar && \\\n    mkdir /venv && cd /venv && tar xf /tmp/env.tar && \\\n    rm /tmp/env.tar\n\nRUN /venv/bin/conda-unpack\n\n# ----------------------------------------------------------------------\n# 2. Build the final image which installs all the remaining requirements and\n# configures / exposes the Flask app\n\n# What is the best base image?\nFROM python:3.7\n\nWORKDIR /app\n\nCOPY --from=intermediate /venv /venv\nADD . /app\n# RUN chgrp root /app\n# RUN chown -R embedder_user:root /app && usermod -d /app embedder_user\nRUN chmod -R 777 services/embedder/downloads/\n\n# The EXPOSE instruction indicates the ports on which a container\n# will listen for connections\n# Since Flask apps listen to port 5000  by default, we expose it\nEXPOSE 5000\n\nSHELL [\"/bin/bash\", \"-c\"]\nENV FLASK_APP=app\nRUN source /venv/bin/activate && \\\n    pip install --no-cache-dir git+https://github.com/BlueBrain/nexus-forge.git && \\\n    pip install --no-cache-dir . && \\\n    pip install --no-cache-dir markupsafe==2.0.1 && \\\n    pip install --no-cache-dir stellargraph >=1.2.0\nENTRYPOINT source /venv/bin/activate && cd services/embedder && flask run --host=0.0.0.0"
}