{
  "startTime": 1674215558233,
  "endTime": 1674215559167,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 112
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 110
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 34,
        "columnEnd": 81
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM bluebrain/rtneuron_builder\n\n# RTNeuron\n################\n\nADD . /RTNeuron\n# Avoid linking against libX11.so as it depends on dev packages to exist.\nRUN cd /RTNeuron && mkdir build && cd build && cmake ../ -DCLONE_SUBPROJECTS=ON -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr/local && make -j mvd-tool RTNeuron-all RTNeuron-install\n\n#################\nRUN mkdir -p /root/RT\nRUN mkdir -p ./usr/\nWORKDIR /root/RT\nRUN /usr/local/bin/python3.7 -m venv --copies usr\nRUN rsync -av --exclude site-packages /usr/local/lib/python3.7/ /root/RT/usr/lib64/python3.7/\n\nRUN source  ./usr/bin/activate && pip install --no-cache-dir pyopengl numpy PyQt5==5.9.2 ipython\nENV PYTHON_SITE_PACKAGES=usr/lib/python3.7/site-packages/\nRUN cp -r /usr/local/lib/python3.7/site-packages/rtneuron/ ${PYTHON_SITE_PACKAGES} && \\\n  cp -r /usr/local/lib/python3.7/site-packages/brain/ ${PYTHON_SITE_PACKAGES}\n\nRUN cp -Pr /usr/local/lib64/lib*so* /usr/local/lib/lib*so* /usr/lib64/libGLEWmx* /usr/lib64/libturbojpeg.so* /usr/lib64/libpng*.so* /usr/lib64/libjpeg*.so* usr/lib\nRUN mkdir usr/lib/osgPlugins-3.4.1 && for ext in `echo 3ds bmp ive jpeg lwo obj osg ply png pnm stl tga tiff`; do cp /usr/local/lib64/osgPlugins-3.4.1/osgdb_$ext.so usr/lib/osgPlugins-3.4.1; done\nRUN cp /usr/lib64/libjpeg.so* /usr/lib64/libpng*.so* /usr/lib64/libtiff.so* /usr/lib64/libjbig* usr/lib\n\nRUN mkdir -p usr/share/RTNeuron && cp -rf /usr/local/share/RTNeuron/shaders usr/share/RTNeuron\nRUN mkdir -p usr/share/osgTransparency && cp -rf /usr/local/share/osgTransparency/shaders usr/share/osgTransparency\nRUN cp -r /usr/local/bin/rtneuron usr/bin\n\n# APP image\n###################\nWORKDIR /root\nRUN curl -f -LO https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-x86_64.AppImage && \\\nchmod +x ./linuxdeploy-x86_64.AppImage\n\n# AppImageTool\nRUN curl -f -LO https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage\nRUN chmod +x /root/appimagetool-x86_64.AppImage\nRUN /root/appimagetool-x86_64.AppImage --appimage-extract\n\nWORKDIR /root/RT\n\nADD packaging/AppImage/config .\nRUN chmod +x /root/RT/AppRun\n\nCMD [\"/root/squashfs-root/AppRun\", \"/root/RT\", \"/tmp/output/rtneuron_x86_64.AppImage\"]\n"
}