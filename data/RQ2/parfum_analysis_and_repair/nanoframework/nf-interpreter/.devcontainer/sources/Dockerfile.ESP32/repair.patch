diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/nanoframework/nf-interpreter/.devcontainer/sources/Dockerfile.ESP32 b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/nanoframework/nf-interpreter/.devcontainer/sources/Dockerfile.ESP32/repaired.Dockerfile
index 3c70863..8da6578 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/nanoframework/nf-interpreter/.devcontainer/sources/Dockerfile.ESP32
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/nanoframework/nf-interpreter/.devcontainer/sources/Dockerfile.ESP32/repaired.Dockerfile
@@ -1,15 +1,15 @@
 FROM ghcr.io/linuxcontainers/debian-slim:latest AS downloader
 RUN apt-get update \
     && apt-get -y install --no-install-recommends apt-utils \
-    && apt-get install -y \
+    && apt-get install --no-install-recommends -y \
     curl \
     bzip2 \
-    unzip
+    unzip && rm -rf /var/lib/apt/lists/*;
 
 RUN mkdir -p /tmp/dc-downloads /tmp/dc-extracted/gcc /tmp/dc-extracted/cmake
 
 ARG CMAKE_SCRIPT=https://cmake.org/files/v3.23/cmake-3.23.0-linux-x86_64.sh
-RUN curl -o /tmp/dc-downloads/cmake.sh $CMAKE_SCRIPT \
+RUN curl -f -o /tmp/dc-downloads/cmake.sh $CMAKE_SCRIPT \
     && chmod +x /tmp/dc-downloads/cmake.sh \
     && bash /tmp/dc-downloads/cmake.sh --skip-license --prefix=/tmp/dc-extracted/cmake
 
@@ -26,7 +26,7 @@ ENV DEBIAN_FRONTEND=noninteractive
 # Configure apt and install packages
 RUN apt-get update \
     && apt-get -y install --no-install-recommends apt-utils dialog icu-devtools 2>&1 \
-    && apt-get install -y \
+    && apt-get install --no-install-recommends -y \
     git \
     git-lfs \
     curl \
@@ -35,7 +35,7 @@ RUN apt-get update \
     python3 \
     python3-pip \
     nodejs \
-    libffi-dev
+    libffi-dev && rm -rf /var/lib/apt/lists/*;
 
 # Create needed directories
 RUN mkdir -p /usr/local/bin/gcc
@@ -48,13 +48,13 @@ RUN git clone --branch mbedtls-2.28.0 https://github.com/ARMmbed/mbedtls.git --d
 RUN git clone --branch v4.4.1 https://github.com/espressif/esp-idf --depth 1 --recursive ./sources/esp-idf
 
 # Copy from our other container
-COPY --from=downloader /tmp/dc-extracted/gcc /usr/local/bin/gcc 
+COPY --from=downloader /tmp/dc-extracted/gcc /usr/local/bin/gcc
 COPY --from=downloader /tmp/dc-extracted/cmake /usr
 # COPY ./scripts/git-pull-repos.sh /usr/local/git-pull-repos.sh
 
 # Creating static link python for pyhton3
 RUN ln -fs /usr/bin/python3 /usr/bin/python \
-    && pip3 install pyserial
+    && pip3 install --no-cache-dir pyserial
 
 # Install ESP-IDF
 ENV IDF_PATH=/sources/esp-idf