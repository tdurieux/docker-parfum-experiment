{
  "startTime": 1674252423735,
  "endTime": 1674252424563,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 7,
        "columnEnd": 58
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 7,
        "columnEnd": 49
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 7,
        "columnEnd": 91
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 6,
        "columnStart": 7,
        "columnEnd": 9
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 33,
        "lineEnd": 39,
        "columnStart": 7,
        "columnEnd": 11
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 7,
        "columnEnd": 59
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 6,
        "columnStart": 7,
        "columnEnd": 9
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 7,
        "columnEnd": 84
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 33,
        "lineEnd": 39,
        "columnStart": 7,
        "columnEnd": 11
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ghcr.io/linuxcontainers/debian-slim:latest AS downloader\nRUN apt-get update \\\n    && apt-get -y install --no-install-recommends apt-utils \\\n    && apt-get install --no-install-recommends -y \\\n    curl \\\n    bzip2 \\\n    unzip && rm -rf /var/lib/apt/lists/*;\n\nARG GCC_URI=https://armkeil.blob.core.windows.net/developer/Files/downloads/gnu-rm/10.3-2021.10/gcc-arm-none-eabi-10.3-2021.10-x86_64-linux.tar.bz2\nRUN mkdir -p /tmp/dc-downloads /tmp/dc-extracted/gcc /tmp/dc-extracted/cmake \\\n    && curl -f -o /tmp/dc-downloads/gcc-arm.tar.bz2 $GCC_URI \\\n    && bunzip2 -d /tmp/dc-downloads/gcc-arm.tar.bz2 \\\n    && tar -xvf /tmp/dc-downloads/gcc-arm.tar -C /tmp/dc-extracted/gcc --strip-components 1 \\\n    && rm -rf /tmp/dc-extracted/gcc/share/doc/ /tmp/dc-extracted/gcc/share/gcc-arm-none-eabi/samples/ && rm /tmp/dc-downloads/gcc-arm.tar\n\nARG CMAKE_SCRIPT=https://cmake.org/files/v3.23/cmake-3.23.0-linux-x86_64.sh\nRUN curl -f -o /tmp/dc-downloads/cmake.sh $CMAKE_SCRIPT \\\n    && chmod +x /tmp/dc-downloads/cmake.sh \\\n    && bash /tmp/dc-downloads/cmake.sh --skip-license --prefix=/tmp/dc-extracted/cmake\n\nFROM ghcr.io/linuxcontainers/debian-slim:latest AS devcontainer\n\n# Avoid warnings by switching to noninteractive\nENV DEBIAN_FRONTEND=noninteractive\n\n# You can set up non-root user\n# ARG USERNAME=vscode\n# ARG USER_UID=1000\n# ARG USER_GID=$USER_UID\n\n# Configure apt and install packages\nRUN apt-get update \\\n    && apt-get -y install --no-install-recommends apt-utils dialog icu-devtools 2>&1 \\\n    && apt-get install --no-install-recommends -y \\\n    git \\\n    git-svn \\\n    subversion \\\n    curl \\\n    ninja-build \\\n    srecord && rm -rf /var/lib/apt/lists/*;\n\n# Create needed directories\nRUN mkdir -p /usr/local/bin/gcc \\\n    && mkdir -p /usr/local/bin/xtensa \\\n    && mkdir -p /usr/local/bin/titools\n\n# Clone repos for STM32 including AzureRTOS\nRUN git clone --branch nf-build https://github.com/nanoframework/STM32CubeL4.git --depth 1 ./sources/STM32CubeL4 \\\n    && git clone --branch nf-build https://github.com/nanoframework/STM32CubeF7.git --depth 1 ./sources/STM32CubeF7 \\\n    && git clone --branch nf-build https://github.com/nanoframework/STM32CubeF4.git --depth 1 ./sources/STM32CubeF4 \\\n    && git clone --branch nf-build https://github.com/nanoframework/STM32CubeH7.git --depth 1 ./sources/STM32CubeH7 \\    \n    && git svn clone https://svn.osdn.net/svnroot/chibios/branches/stable_21.11.x -rHEAD ./sources/ChibiOs \\\n    && git clone --branch nanoframework https://github.com/nanoframework/ChibiOS-Contrib.git --depth 1 ./sources/ChibiOs-Contrib\n# Clone mbedtls and fatfs\nRUN git clone --branch mbedtls-2.28.0 https://github.com/ARMmbed/mbedtls.git --depth 1 ./sources/mbedtls \\\n    && git clone --branch R0.14 https://github.com/abbrev/fatfs.git --depth 1 ./sources/fatfs \\\n    && git clone --branch nf-build https://github.com/nanoframework/spiffs.git --depth 1 ./sources/spiffs\n\n# set gcc location\nENV ARM_GCC_PATH=/usr/local/bin/gcc\nENV PATH=$ARM_GCC_PATH/bin:${PATH}\n\n# Copy from our other container\nCOPY --from=downloader /tmp/dc-extracted/gcc $ARM_GCC_PATH\nCOPY --from=downloader /tmp/dc-extracted/cmake /usr\n# COPY ./scripts/git-pull-repos.sh /usr/local/git-pull-repos.sh\n\n# Putting hex2dfu in the container\nENV HEX2DFU_PATH=/usr/local/bin/hex2dfu\n\nARG HEX2DFU=https://github.com/nanoframework/hex2dfu/releases/download/v2.0.9/hex2dfu\nRUN mkdir -p  $HEX2DFU_PATH \\\n    && curl -f -o  $HEX2DFU_PATH/hex2dfu $HEX2DFU -L \\\n    && chmod +x  $HEX2DFU_PATH/hex2dfu\n\n# Clean up downloaded files\nRUN apt-get autoremove -y \\\n    && apt-get clean -y \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Switch back to dialog for any ad-hoc use of apt-get\nENV DEBIAN_FRONTEND=dialog\n"
}