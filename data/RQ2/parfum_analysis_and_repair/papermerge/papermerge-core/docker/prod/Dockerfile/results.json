{
  "startTime": 1674253202268,
  "endTime": 1674253203098,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 7
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 33,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 7
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 7
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 33,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 7
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 7
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 33,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 7
      }
    }
  ],
  "repairedDockerfile": "FROM python:3.8 as build\n\n### STEP 1 - pull all python dependencies in virtual env\nENV IN_DOCKER=1\nENV POETRY_VIRTUALENVS_CREATE=false\nENV UWSGI_PROFILE=gevent\nENV VIRTUAL_ENV=/venv\n\nRUN apt-get update;\nRUN apt-get install -y --no-install-recommends \\\n    build-essential \\\n    python3-dev \\\n    tesseract-ocr \\\n    tesseract-ocr-deu \\\n    imagemagick \\\n    gcc && rm -rf /var/lib/apt/lists/*;\n\nRUN pip install --no-cache-dir --upgrade poetry\nRUN python -m venv /venv\n\nENV PATH=\"/venv/bin:$PATH\"\n\nCOPY poetry.lock pyproject.toml /\nRUN poetry install --no-root --no-dev -vvv\n\n## STEP 2 - use slim base image\nFROM python:3.8-slim\n\nENV PATH=\"/venv/bin:$PATH\"\nENV PYTHONBUFFERED=1\nENV VIRTUAL_ENV=/venv\n\nRUN apt-get update;\nRUN apt-get install -y --no-install-recommends \\\n    build-essential \\\n    python3-dev \\\n    postgresql-client \\\n    tesseract-ocr \\\n    tesseract-ocr-deu \\\n    imagemagick \\\n    git \\\n    libmagic1 \\\n    ghostscript \\\n    file \\\n    gcc && rm -rf /var/lib/apt/lists/*;\n\nCOPY docker/prod/uwsgi.ini /etc/uwsgi/papermerge.ini\nCOPY docker/prod/scripts /\nRUN chmod +x /run.bash\n\nCOPY --from=build /venv /venv\n\nWORKDIR app\n\n# sources\nCOPY papermerge/ ./papermerge/\nCOPY docker/prod/config/ ./config/\nCOPY docker/prod/manage.py ./\n\nEXPOSE 8000\n\nENTRYPOINT [\"/run.bash\"]\nCMD [\"server\"]\n"
}