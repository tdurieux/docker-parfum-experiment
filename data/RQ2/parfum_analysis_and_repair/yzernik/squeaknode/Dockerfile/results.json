{
  "startTime": 1674253910627,
  "endTime": 1674253911358,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 9,
        "columnStart": 1,
        "columnEnd": 16
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 1,
        "columnEnd": 29
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 9,
        "columnStart": 1,
        "columnEnd": 16
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 1,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.8-slim-buster AS compile-image\n\nWORKDIR /\n\nRUN DEBIAN_FRONTEND=noninteractive apt-get update && \\\n\tapt-get install --no-install-recommends -y \\\n\tlibpq-dev \\\n\tgcc \\\n\tlibffi-dev \\\n\tbuild-essential && rm -rf /var/lib/apt/lists/*;\n\nRUN python -m venv /opt/venv\n# Make sure we use the virtualenv:\nENV PATH=\"/opt/venv/bin:$PATH\"\n\nRUN pip install --no-cache-dir --upgrade pip\n\nWORKDIR /app\n\n# Copy the source code.\nCOPY . .\n\nRUN pip install --no-cache-dir .[postgres]\n\nFROM python:3.8-slim-buster\n\nCOPY --from=compile-image /opt/venv /opt/venv\n\nRUN DEBIAN_FRONTEND=noninteractive apt-get update && \\\n\tapt-get install --no-install-recommends -y libpq-dev && rm -rf /var/lib/apt/lists/*;\n\nEXPOSE 8555\nEXPOSE 18555\nEXPOSE 18666\nEXPOSE 18777\n# Web server\nEXPOSE 12994\n\n# Make sure we use the virtualenv:\nENV PATH=\"/opt/venv/bin:$PATH\"\n\n# Copy the entrypoint script.\nCOPY \"entrypoint.sh\" .\nRUN chmod +x entrypoint.sh\n\nCMD [\"./entrypoint.sh\"]\n"
}