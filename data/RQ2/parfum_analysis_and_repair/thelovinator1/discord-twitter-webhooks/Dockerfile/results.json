{
  "startTime": 1674250007023,
  "endTime": 1674250007618,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 22,
        "columnEnd": 89
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.10-slim\n\n# We don't want apt-get to interact with us and we want the default answers to be used for all questions.\nARG DEBIAN_FRONTEND=noninteractive\n\n# Don't generate byte code (.pyc-files).\n# These are only needed if we run the python-files several times.\n# Docker doesn't keep the data between runs so this adds nothing.\nENV PYTHONDONTWRITEBYTECODE 1\n\n# Force the stdout and stderr streams to be unbuffered.\n# Will allow log messages to be immediately dumped instead of being buffered.\n# This is useful when the bot crashes before writing messages stuck in the buffer.\nENV PYTHONUNBUFFERED 1\n\n# Update packages and install needed packages to build our requirements.\nRUN apt-get update && apt-get install -y --no-install-recommends build-essential gcc curl && rm -rf /var/lib/apt/lists/*;\n\n# Create user so we don't run as root.\nRUN useradd --create-home botuser\nRUN chown -R botuser:botuser /home/botuser && chmod -R 755 /home/botuser\nUSER botuser\n\n# Install poetry\nRUN curl -f -sSL https://install.python-poetry.org | python3 -\n\n# Add poetry to our path\nENV PATH=\"/home/botuser/.local/bin/:${PATH}\"\n\nCOPY pyproject.toml poetry.lock README.md LICENSE /home/botuser/discord-twitter-webhooks/\n\n# Change directory to where we will run the bot.\nWORKDIR /home/botuser/discord-twitter-webhooks\n\nRUN poetry install --no-interaction --no-ansi --no-dev\n\nADD discord_twitter_webhooks /home/botuser/discord-twitter-webhooks/discord_twitter_webhooks/\n\n# Run bot.\nCMD [ \"poetry\", \"run\", \"bot\" ]\n"
}