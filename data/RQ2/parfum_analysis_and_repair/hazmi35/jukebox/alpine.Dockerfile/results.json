{
  "startTime": 1674250113293,
  "endTime": 1674250113995,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM hazmi35/node:16-dev-alpine as build-stage\n\nLABEL name \"Jukebox (build stage)\"\nLABEL maintainer \"Hazmi35 <contact@hzmi.xyz>\"\n\n# Copy package.json, lockfile and .npmrc\nCOPY package*.json ./\nCOPY .npmrc .\n\n# Install FFmpeg to for testing\nRUN apk add --no-cache ffmpeg\n\n# Tell ffmpeg-static to use system ffmpeg\nENV FFMPEG_BIN /usr/bin/ffmpeg\n\n# Install dependencies\nRUN npm install && npm cache clean --force;\n\n# Copy Project files\nCOPY . .\n\n# Build TypeScript Project\nRUN npm run build\n\n# Prune devDependencies\nRUN npm prune --production\n\n# Check if important dependencies is healthy\nRUN YOUTUBE_DL_FILENAME=\"yt-dlp\" node -p \"console.log((require('prism-media').FFmpeg).getInfo());(require('youtube-dl-exec'))('--version').then(console.log)\"\n\n# Get ready for production\nFROM hazmi35/node:16-alpine\n\nLABEL name \"Jukebox\"\nLABEL maintainer \"Hazmi35 <contact@hzmi.xyz>\"\n\n# Install python3 (required for youtube-dl/yt-dlp), ffmpeg and sudo then create cache and logs directory\n# Plus delete user \"node\" and create user \"jukebox\"\nRUN apk add --no-cache python3 ffmpeg sudo \\\n    && ln -s /usr/bin/python3 /usr/local/bin/python \\\n    && mkdir cache && mkdir logs \\\n    && deluser --remove-home node && addgroup -S jukebox -g 1000 && adduser -S -G jukebox -u 1000 jukebox\n\n# Tell ffmpeg-static to use system ffmpeg\nENV FFMPEG_BIN /usr/bin/ffmpeg\n\n# Copy needed files\nCOPY --from=build-stage --chown=jukebox /tmp/build/package.json .\nCOPY --from=build-stage --chown=jukebox /tmp/build/package-lock.json .\nCOPY --from=build-stage --chown=jukebox /tmp/build/node_modules ./node_modules\nCOPY --from=build-stage --chown=jukebox /tmp/build/dist ./dist\nCOPY docker-entrypoint.sh /docker-entrypoint.sh\n\n# Mark cache folder as docker volume\nVOLUME [\"/app/cache\", \"/app/logs\"]\n\n# Execute entrypoint\nENTRYPOINT [\"/bin/sh\", \"/docker-entrypoint.sh\"]\n\n# Start the app with node\nCMD [\"node\", \"--experimental-specifier-resolution=node\", \"dist/main.js\"]\n"
}