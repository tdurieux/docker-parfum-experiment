diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/ethyca/fides/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/ethyca/fides/Dockerfile/repaired.Dockerfile
index 76a78e6..ce853c3 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/ethyca/fides/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/ethyca/fides/Dockerfile/repaired.Dockerfile
@@ -1,7 +1,7 @@
 FROM --platform=linux/amd64 python:3.8-slim-buster as base
 
 # Update pip in the base image since we'll use it everywhere
-RUN pip install -U pip
+RUN pip install --no-cache-dir -U pip
 
 ####################
 ## Build frontend ##
@@ -12,7 +12,7 @@ WORKDIR /fides/clients/admin-ui
 
 # install node modules
 COPY clients/admin-ui/ .
-RUN npm install
+RUN npm install && npm cache clean --force;
 
 # Build the frontend static files
 RUN npm run export
@@ -51,8 +51,8 @@ RUN : \
     && rm -rf /var/lib/apt/lists/*
 
 # SQL Server (MS SQL)
-RUN curl https://packages.microsoft.com/keys/microsoft.asc | apt-key add -
-RUN curl https://packages.microsoft.com/config/debian/10/prod.list | tee /etc/apt/sources.list.d/msprod.list
+RUN curl -f https://packages.microsoft.com/keys/microsoft.asc | apt-key add -
+RUN curl -f https://packages.microsoft.com/config/debian/10/prod.list | tee /etc/apt/sources.list.d/msprod.list
 ENV ACCEPT_EULA=y DEBIAN_FRONTEND=noninteractive
 RUN : \
     && apt-get update \
@@ -69,13 +69,13 @@ RUN : \
 #########################
 
 COPY dev-requirements.txt dev-requirements.txt
-RUN pip install -r dev-requirements.txt
+RUN pip install --no-cache-dir -r dev-requirements.txt
 
 COPY requirements.txt requirements.txt
-RUN pip install -r requirements.txt
+RUN pip install --no-cache-dir -r requirements.txt
 
 COPY optional-requirements.txt optional-requirements.txt
-RUN pip install -r optional-requirements.txt
+RUN pip install --no-cache-dir -r optional-requirements.txt
 
 ###############################
 ## General Application Setup ##
@@ -103,7 +103,7 @@ CMD ["fidesctl", "webserver"]
 FROM builder as dev
 
 # Install fidesctl as a symlink
-RUN pip install -e ".[all,mssql]"
+RUN pip install --no-cache-dir -e ".[all,mssql]"
 
 ##################################
 ## Production Application Setup ##
@@ -113,7 +113,7 @@ FROM builder as prod
 
 # Install without a symlink
 RUN python setup.py sdist
-RUN pip install dist/fidesctl-*.tar.gz
+RUN pip install --no-cache-dir dist/fidesctl-*.tar.gz
 
 # Copy frontend build over
 COPY --from=frontend /fides/clients/admin-ui/out/ /fides/src/fidesapi/build/static/