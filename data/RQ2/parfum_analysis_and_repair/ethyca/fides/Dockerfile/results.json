{
  "startTime": 1674249862138,
  "endTime": 1674249863896,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 66
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 74,
        "lineEnd": 74,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 105,
        "lineEnd": 105,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 115,
        "lineEnd": 115,
        "columnStart": 4,
        "columnEnd": 38
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM --platform=linux/amd64 python:3.8-slim-buster as base\n\n# Update pip in the base image since we'll use it everywhere\nRUN pip install --no-cache-dir -U pip\n\n####################\n## Build frontend ##\n####################\nFROM node:16 as frontend\n\nWORKDIR /fides/clients/admin-ui\n\n# install node modules\nCOPY clients/admin-ui/ .\nRUN npm install && npm cache clean --force;\n\n# Build the frontend static files\nRUN npm run export\n\n#######################\n## Tool Installation ##\n#######################\n\nFROM base as builder\n\nRUN : \\\n    && apt-get update \\\n    && apt-get install \\\n    -y --no-install-recommends \\\n    curl \\\n    git \\\n    ipython \\\n    vim \\\n    g++ \\\n    gnupg \\\n    gcc \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/*\n\n###########################\n## Database Dependencies ##\n###########################\n\n# Postgres\nRUN : \\\n    && apt-get update \\\n    && apt-get install \\\n    -y --no-install-recommends \\\n    libpq-dev \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/*\n\n# SQL Server (MS SQL)\nRUN curl -f https://packages.microsoft.com/keys/microsoft.asc | apt-key add -\nRUN curl -f https://packages.microsoft.com/config/debian/10/prod.list | tee /etc/apt/sources.list.d/msprod.list\nENV ACCEPT_EULA=y DEBIAN_FRONTEND=noninteractive\nRUN : \\\n    && apt-get update \\\n    && apt-get install \\\n    -y --no-install-recommends \\\n    apt-transport-https \\\n    unixodbc-dev \\\n    mssql-tools \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/*\n\n#########################\n## Python Dependencies ##\n#########################\n\nCOPY dev-requirements.txt dev-requirements.txt\nRUN pip install --no-cache-dir -r dev-requirements.txt\n\nCOPY requirements.txt requirements.txt\nRUN pip install --no-cache-dir -r requirements.txt\n\nCOPY optional-requirements.txt optional-requirements.txt\nRUN pip install --no-cache-dir -r optional-requirements.txt\n\n###############################\n## General Application Setup ##\n###############################\n\nCOPY . /fides\nWORKDIR /fides\n\n# Immediately flush to stdout, globally\nENV PYTHONUNBUFFERED=TRUE\n\n# Enable detection of running within Docker\nENV RUNNING_IN_DOCKER=TRUE\n\n# Make a static files directory\nRUN mkdir -p src/fidesapi/build/static\n\nEXPOSE 8080\nCMD [\"fidesctl\", \"webserver\"]\n\n###################################\n## Application Development Setup ##\n###################################\n\nFROM builder as dev\n\n# Install fidesctl as a symlink\nRUN pip install --no-cache-dir -e \".[all,mssql]\"\n\n##################################\n## Production Application Setup ##\n##################################\n\nFROM builder as prod\n\n# Install without a symlink\nRUN python setup.py sdist\nRUN pip install --no-cache-dir dist/fidesctl-*.tar.gz\n\n# Copy frontend build over\nCOPY --from=frontend /fides/clients/admin-ui/out/ /fides/src/fidesapi/build/static/\n"
}