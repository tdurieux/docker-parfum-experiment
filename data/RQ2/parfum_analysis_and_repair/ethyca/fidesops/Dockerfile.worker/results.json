{
  "startTime": 1674253061540,
  "endTime": 1674253062879,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 55,
        "columnEnd": 109
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 55,
        "columnEnd": 117
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 55,
        "columnEnd": 92
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 55,
        "columnEnd": 92
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 32,
        "lineEnd": 35,
        "columnStart": 55,
        "columnEnd": 17
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 55,
        "columnEnd": 92
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 32,
        "lineEnd": 35,
        "columnStart": 55,
        "columnEnd": 17
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 55,
        "columnEnd": 92
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 32,
        "lineEnd": 35,
        "columnStart": 55,
        "columnEnd": 17
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 1,
        "columnEnd": 64
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 36,
        "lineEnd": 39,
        "columnStart": 1,
        "columnEnd": 16
      }
    }
  ],
  "repairedDockerfile": "FROM node:16 as frontend\n\nFROM --platform=linux/amd64 python:3.9.13-slim-buster as backend\n\nARG SKIP_MSSQL_INSTALLATION\n\n# Install auxiliary software\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n    git \\\n    make \\\n    ipython \\\n    vim \\\n    curl \\\n    g++ \\\n    gnupg \\\n    gcc \\\n    python3-wheel \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/*\n\n\nRUN echo \"Building fidesops celery worker\"\nRUN echo \"ENVIRONMENT VAR:  SKIP_MSSQL_INSTALLATION $SKIP_MSSQL_INSTALLATION\"\n\n# SQL Server (MS SQL)\n# https://docs.microsoft.com/en-us/sql/connect/odbc/linux-mac/installing-the-microsoft-odbc-driver-for-sql-server?view=sql-server-ver15\nRUN if [ \"$SKIP_MSSQL_INSTALLATION\" != \"true\" ] ; then \\\n apt-get install -y --no-install-recommends apt-transport-https; rm -rf /var/lib/apt/lists/*; fi\nRUN if [ \"$SKIP_MSSQL_INSTALLATION\" != \"true\" ] ; then \\\n curl -f https://packages.microsoft.com/keys/microsoft.asc | apt-key add -; fi\nRUN if [ \"$SKIP_MSSQL_INSTALLATION\" != \"true\" ] ; then \\\n curl -f https://packages.microsoft.com/config/debian/10/prod.list | tee /etc/apt/sources.list.d/msprod.list; fi\nRUN if [ \"$SKIP_MSSQL_INSTALLATION\" != \"true\" ] ; then apt-get update ; fi\nENV ACCEPT_EULA=y DEBIAN_FRONTEND=noninteractive\nRUN if [ \"$SKIP_MSSQL_INSTALLATION\" != \"true\" ] ; then \\\n apt-get -y --no-install-recommends install \\\n    unixodbc-dev \\\n    msodbcsql17 \\\n    mssql-tools; rm -rf /var/lib/apt/lists/*; fi\n\n# Update pip and install requirements\nCOPY requirements.txt dev-requirements.txt mssql-requirements.txt ./\nRUN pip install --no-cache-dir -U pip \\\n    && pip --no-cache-dir install -r requirements.txt -r dev-requirements.txt \\\n    && if [ \"$SKIP_MSSQL_INSTALLATION\" != \"true\" ] ; then pip --no-cache-dir install -r mssql-requirements.txt ; fi\n\n\n# Copy in the application files and install it locally\nCOPY . /fidesops\nWORKDIR /fidesops\nRUN pip install --no-cache-dir -e .\n\n# Enable detection of running within Docker\nENV RUNNING_IN_DOCKER=true\n\nCMD [ \"fidesops\", \"worker\" ]\n"
}