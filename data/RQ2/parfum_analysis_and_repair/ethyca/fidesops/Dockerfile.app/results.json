{
  "startTime": 1674253122874,
  "endTime": 1674253123405,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 55,
        "columnEnd": 109
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 55,
        "columnEnd": 117
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 55,
        "columnEnd": 117
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 38,
        "lineEnd": 41,
        "columnStart": 55,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 55,
        "columnEnd": 117
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 40,
        "lineEnd": 43,
        "columnStart": 55,
        "columnEnd": 15
      }
    }
  ],
  "repairedDockerfile": "FROM node:16 as frontend\n\nWORKDIR /fidesops/clients/admin-ui\nCOPY clients/admin-ui/ .\nRUN npm install && npm cache clean --force;\n# Build the frontend static files\nRUN npm run export\n\n\nFROM --platform=linux/amd64 python:3.9.13-slim-buster as backend\n\nARG SKIP_MSSQL_INSTALLATION\n\n# Install auxiliary software\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n    git \\\n    make \\\n    ipython \\\n    vim \\\n    curl \\\n    g++ \\\n    gnupg \\\n    gcc \\\n    python3-wheel \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/*\n\n\nRUN echo \"ENVIRONMENT VAR:  SKIP_MSSQL_INSTALLATION $SKIP_MSSQL_INSTALLATION\"\n\n# SQL Server (MS SQL)\n# https://docs.microsoft.com/en-us/sql/connect/odbc/linux-mac/installing-the-microsoft-odbc-driver-for-sql-server?view=sql-server-ver15\nRUN if [ \"$SKIP_MSSQL_INSTALLATION\" != \"true\" ] ; then apt-get install -y --no-install-recommends apt-transport-https && apt-get clean && rm -rf /var/lib/apt/lists/* ; fi\nRUN if [ \"$SKIP_MSSQL_INSTALLATION\" != \"true\" ] ; then \\\n curl -f https://packages.microsoft.com/keys/microsoft.asc | apt-key add -; fi\nRUN if [ \"$SKIP_MSSQL_INSTALLATION\" != \"true\" ] ; then \\\n curl -f https://packages.microsoft.com/config/debian/10/prod.list | tee /etc/apt/sources.list.d/msprod.list; fi\nRUN if [ \"$SKIP_MSSQL_INSTALLATION\" != \"true\" ] ; then apt-get update ; fi\nENV ACCEPT_EULA=y DEBIAN_FRONTEND=noninteractive\nRUN if [ \"$SKIP_MSSQL_INSTALLATION\" != \"true\" ] ; then apt-get -y --no-install-recommends install \\\n    unixodbc-dev \\\n    msodbcsql17 \\\n    mssql-tools \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/* ; fi\n\n# Update pip and install requirements\nCOPY requirements.txt dev-requirements.txt mssql-requirements.txt ./\nRUN pip install --no-cache-dir -U pip \\\n    && pip --no-cache-dir install -r requirements.txt -r dev-requirements.txt \\\n    && if [ \"$SKIP_MSSQL_INSTALLATION\" != \"true\" ] ; then pip --no-cache-dir install -r mssql-requirements.txt ; fi\n\n# Copy in the application files and install it locally\nCOPY . /fidesops\nWORKDIR /fidesops\nRUN pip install --no-cache-dir -e .\n\n# Make a static files directory\nRUN mkdir -p /fidesops/src/fidesops/build/static/\n# Copy frontend build over\nCOPY --from=frontend /fidesops/clients/admin-ui/out/ /fidesops/src/fidesops/build/static/\n\n# Enable detection of running within Docker\nENV RUNNING_IN_DOCKER=true\n\nCMD [ \"fidesops\", \"webserver\" ]\n"
}