diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/ethyca/fidesops/Dockerfile.app b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/ethyca/fidesops/Dockerfile.app/repaired.Dockerfile
index 27b2936..73771e1 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/ethyca/fidesops/Dockerfile.app
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/ethyca/fidesops/Dockerfile.app/repaired.Dockerfile
@@ -2,7 +2,7 @@ FROM node:16 as frontend
 
 WORKDIR /fidesops/clients/admin-ui
 COPY clients/admin-ui/ .
-RUN npm install
+RUN npm install && npm cache clean --force;
 # Build the frontend static files
 RUN npm run export
 
@@ -32,8 +32,10 @@ RUN echo "ENVIRONMENT VAR:  SKIP_MSSQL_INSTALLATION $SKIP_MSSQL_INSTALLATION"
 # SQL Server (MS SQL)
 # https://docs.microsoft.com/en-us/sql/connect/odbc/linux-mac/installing-the-microsoft-odbc-driver-for-sql-server?view=sql-server-ver15
 RUN if [ "$SKIP_MSSQL_INSTALLATION" != "true" ] ; then apt-get install -y --no-install-recommends apt-transport-https && apt-get clean && rm -rf /var/lib/apt/lists/* ; fi
-RUN if [ "$SKIP_MSSQL_INSTALLATION" != "true" ] ; then curl https://packages.microsoft.com/keys/microsoft.asc | apt-key add - ; fi
-RUN if [ "$SKIP_MSSQL_INSTALLATION" != "true" ] ; then curl https://packages.microsoft.com/config/debian/10/prod.list | tee /etc/apt/sources.list.d/msprod.list ; fi
+RUN if [ "$SKIP_MSSQL_INSTALLATION" != "true" ] ; then \
+ curl -f https://packages.microsoft.com/keys/microsoft.asc | apt-key add -; fi
+RUN if [ "$SKIP_MSSQL_INSTALLATION" != "true" ] ; then \
+ curl -f https://packages.microsoft.com/config/debian/10/prod.list | tee /etc/apt/sources.list.d/msprod.list; fi
 RUN if [ "$SKIP_MSSQL_INSTALLATION" != "true" ] ; then apt-get update ; fi
 ENV ACCEPT_EULA=y DEBIAN_FRONTEND=noninteractive
 RUN if [ "$SKIP_MSSQL_INSTALLATION" != "true" ] ; then apt-get -y --no-install-recommends install \
@@ -45,14 +47,14 @@ RUN if [ "$SKIP_MSSQL_INSTALLATION" != "true" ] ; then apt-get -y --no-install-r
 
 # Update pip and install requirements
 COPY requirements.txt dev-requirements.txt mssql-requirements.txt ./
-RUN pip install -U pip  \
+RUN pip install --no-cache-dir -U pip \
     && pip --no-cache-dir install -r requirements.txt -r dev-requirements.txt \
     && if [ "$SKIP_MSSQL_INSTALLATION" != "true" ] ; then pip --no-cache-dir install -r mssql-requirements.txt ; fi
 
 # Copy in the application files and install it locally
 COPY . /fidesops
 WORKDIR /fidesops
-RUN pip install -e .
+RUN pip install --no-cache-dir -e .
 
 # Make a static files directory
 RUN mkdir -p /fidesops/src/fidesops/build/static/