{
  "startTime": 1674251005762,
  "endTime": 1674251006523,
  "originalSmells": [
    {
      "rule": "gemUpdateSystemRmRootGem",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "gemUpdateNoDocument",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 23
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# This file is used if building for Production environments\n# It uses a multi-stage build to run jekyll to populate an nginx container\n\nFROM ruby:2.7-alpine as build\n\n# Add Gem build requirements\nRUN apk add --no-cache g++ make libxml2-dev libxslt-dev\n\n# Create app directory\nWORKDIR /app\n\n# Add Gemfile and Gemfile.lock\nADD Gemfile* /app/\n\n# Install Gems\nRUN mkdir -p /usr/local/etc \\\n  && { \\\n    echo 'install: --no-document'; \\\n    echo 'update: --no-document'; \\\n  } >> /usr/local/etc/gemrc;\nRUN gem update --system \\\n    && gem install bundler -v $(grep -F -A 1 'BUNDLED WITH' Gemfile.lock | grep -Eo '[0-9]+\\.[0-9]+\\.[0-9]+') \\\n    && bundle config build.nokogiri --use-system-libraries \\\n    && bundle config --global jobs $(nproc) \\\n    && bundle install --deployment --no-cache \\\n    && bundle clean && rm -rf /root/.gem;\n\n# Copy Site Files\nCOPY . .\n\nENV JEKYLL_ENV=production\n\n# Run jekyll build site\nRUN bundle exec jekyll build --verbose\n\n#-------------------------------------------------\n\nFROM nginx:stable-alpine as webserver\n\n# Copy built site from build stage\nCOPY --from=build /app/_site /usr/share/nginx/html\n"
}