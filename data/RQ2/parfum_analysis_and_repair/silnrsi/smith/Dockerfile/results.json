{
  "startTime": 1674254662440,
  "endTime": 1674254663527,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 104,
        "lineEnd": 104,
        "columnStart": 4,
        "columnEnd": 95
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 119,
        "lineEnd": 129,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 132,
        "lineEnd": 132,
        "columnStart": 4,
        "columnEnd": 17
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 29,
        "columnStart": 22,
        "columnEnd": 19
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 38,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 11
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 22,
        "columnEnd": 54
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 146,
        "lineEnd": 162,
        "columnStart": 22,
        "columnEnd": 14
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 176,
        "lineEnd": 176,
        "columnStart": 22,
        "columnEnd": 76
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 38,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 11
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 29,
        "columnStart": 22,
        "columnEnd": 19
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 38,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 11
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 22,
        "columnEnd": 54
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 146,
        "lineEnd": 162,
        "columnStart": 22,
        "columnEnd": 14
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 176,
        "lineEnd": 176,
        "columnStart": 22,
        "columnEnd": 76
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 38,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 11
      }
    }
  ],
  "repairedDockerfile": "# Set up basic runtime environment\nARG ubuntuImage='ubuntu:20.04'\nARG type=build-agent\n\nFROM ${ubuntuImage} AS base\nUSER root\nENV DEBIAN_FRONTEND='noninteractive' TZ='UTC'\nCOPY docker/no-cache  /etc/apt/apt.conf.d/00_no-cache\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n      ca-certificates \\\n      git \\\n      gpg \\\n      locales \\\n      libcairo2 \\\n      libfreetype6 \\\n      libglib2.0-0 \\\n      libgirepository-1.0-1 \\\n      libicu66 \\\n      libmono-system-web4.0-cil \\\n      libmono-system-windows-forms4.0-cil \\\n      mono-runtime \\\n      python3-brotli \\\n      python3-fs \\\n      python3-gi \\\n      python3-icu \\\n      python3-lz4 \\\n      python3-odf \\\n      python3-pkg-resources \\\n      python3-reportlab \\\n      python3-scipy \\\n      && \\\n    localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8 && rm -rf /var/lib/apt/lists/*;\nENV LANG='en_US.UTF-8'\n\n\n# Set up basic build tooling environment\nFROM base AS build\nENV PATH=$PATH:/root/.local/bin\nRUN apt-get install --no-install-recommends -y \\\n      build-essential \\\n      cmake \\\n      gcovr \\\n      gobject-introspection \\\n      gtk-doc-tools \\\n      libcairo2-dev \\\n      libfreetype-dev \\\n      libglib2.0-dev \\\n      libgirepository1.0-dev \\\n      libicu-dev \\\n      libpython3-dev \\\n      libtool \\\n      mono-mcs \\\n      ninja-build \\\n      python3-pip \\\n      pkg-config \\\n      ragel \\\n      && \\\n    pip install --no-cache-dir --user meson && rm -rf /var/lib/apt/lists/*;\n\n\n# Grab the PPA keys for later use.\nFROM ${ubuntuImage} AS ppa-keys\nUSER root\nRUN apt-get update && apt-get install --no-install-recommends -y dirmngr gnupg && \\\n    apt-key \\\n        --keyring /ppa-archives-keyring.gpg \\\n      adv \\\n        --keyserver keyserver.ubuntu.com \\\n        --recv-keys 904F67626F1CF535 5DF1CE288B1A27EA && rm -rf /var/lib/apt/lists/*;\n\n\n# Build Glyph layout engines\nFROM build AS engines-src\nWORKDIR /src/graphite\nRUN git clone --depth 1 https://github.com/silnrsi/graphite.git . &&\\\n    cmake -G Ninja -B build \\\n      -DGRAPHITE2_COMPARE_RENDERER:BOOL=OFF \\\n      -DGRAPHITE2_NTRACING:BOOL=OFF \\\n      &&\\\n    cmake --build build && cmake --install build;\nWORKDIR /src/harffbuzz\nRUN git clone --depth 1 https://github.com/harfbuzz/harfbuzz.git . &&\\\n    meson build \\\n        --buildtype=debugoptimized \\\n        --auto-features=enabled \\\n        --wrap-mode=nodownload \\\n        -Db_coverage=true \\\n        -Dchafa=disabled \\\n        -Dexperimental_api=true\\\n        -Dgraphite=enabled \\\n        &&\\\n    ninja -C build && ninja install -C build;\n\n\n# Build graphite compiler\nFROM build AS grcompiler-src\nWORKDIR /src/grcompiler\nRUN git clone --depth 1 https://github.com/silnrsi/grcompiler.git . &&\\\n    cmake -G Ninja -B build && cmake --build build && cmake --install build;\n\n\n# Build OTS Sanitizer\nFROM build AS ots-src\nWORKDIR /src/ots\nRUN pip install --no-cache-dir 'git+https://github.com/googlefonts/ots-python.git@main#egg=opentype-sanitizer' && \\\n    git clone --depth 1 --recurse-submodules https://github.com/khaledhosny/ots.git . && \\\n    meson build && ninja -C build && ninja install -C build\n\n\n# Build Font validator\nFROM build AS fontval\nWORKDIR /src/fontval\nRUN git clone --depth 1 https://github.com/HinTak/Font-Validator.git . &&\\\n    make && make gendoc &&\\\n    cp bin/*.exe bin/*.dll* bin/*.xsl /usr/local/bin\n\n\n# Python components\nFROM build AS python3-dependencies\nRUN pip install --no-cache-dir \\\n      'git+https://github.com/googlei18n/compreffor' \\\n      'git+https://github.com/googlefonts/fontbakery' \\\n      'git+https://github.com/fonttools/fonttools' \\\n      'git+https://github.com/googlefonts/GlyphsLib' \\\n      'git+https://github.com/rosettatype/hyperglot' \\\n      'git+https://github.com/googlefonts/pyfontaine' \\\n      'git+https://github.com/silnrsi/palaso-python' \\\n      'git+https://github.com/LettError/MutatorMath' \\\n      'git+https://github.com/silnrsi/pysilfont' \\\n      'git+https://github.com/googlei18n/ufo2ft'\nWORKDIR smith\nCOPY . ./\nRUN pip install --no-cache-dir .\n\n\n# Final minimal smith font build system runtime CI systems\nFROM base AS build-agent\nARG codename=focal\nLABEL org.opencontainers.image.authors=\"tim_eves@sil.org, nicolas_spaligner@sil.org\" \\\n      org.opencontainers.image.title=\"smith-font\" \\\n      org.opencontainers.image.documentation=\"https://github.com/silnrsi/smith/blob/master/docs/smith/manual.asc\" \\\n      org.opencontainers.image.description=\"Smith font build environment\" \\\n      org.opencontainers.image.source=\"https://github.com/silnrsi/smith\" \\\n      org.opencontainers.image.vendor=\"SIL International\"\nCOPY docker/sources.list.d/*-${codename}.list /etc/apt/sources.list.d/\nCOPY --from=ppa-keys /ppa-archives-keyring.gpg /etc/apt/trusted.gpg.d/\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n      fontforge-nox \\\n      libaa-bin \\\n      libfont-ttf-scripts-perl \\\n      libqt5gui5-gles \\\n      libjson-perl \\\n      libtext-csv-perl \\\n      nsis \\\n      pandoc \\\n      python3-fontforge \\\n      sile \\\n      texlive-xetex \\\n      ttfautohint \\\n      wamerican \\\n      wbritish \\\n      xsltproc \\\n      xz-utils \\\n      && \\\n    sile -e 'installPackage(\"fontproof\");os.exit()' && rm -rf /var/lib/apt/lists/*;\nCOPY docker/validator-shims /usr/local/bin/\nCOPY --from=fontval /usr/local /usr/local\nCOPY --from=grcompiler-src /usr/local /usr/local\nCOPY --from=ots-src /usr/local /usr/local\nCOPY --from=python3-dependencies /usr/local /usr/local\nCOPY --from=engines-src /usr/local /usr/local\n\n\n# Add in some user facing tools for interactive use.\nFROM build-agent AS interactive\nCOPY bash_completion_smith /etc/bash_completion.d/\nRUN apt-get update && apt-get install --no-install-recommends -y bash-completion less nano ncdu sudo && \\\n    useradd -md /build builder && \\\n    echo 'builder ALL=(ALL) NOPASSWD:ALL' >>/etc/sudoers && rm -rf /var/lib/apt/lists/*;\nVOLUME /build\nUSER builder\nCMD [\"/bin/bash\"]\n\n\n# Final clean up regardless of which type was chosen.\nFROM ${type} AS final\nARG codename=focal\nLABEL org.opencontainers.image.authors=\"tim_eves@sil.org, nicolas_spaligner@sil.org\" \\\n      org.opencontainers.image.title=\"smith-font\" \\\n      org.opencontainers.image.documentation=\"https://github.com/silnrsi/smith/blob/master/docs/smith/manual.asc\" \\\n      org.opencontainers.image.description=\"Smith font build environment\" \\\n      org.opencontainers.image.source=\"https://github.com/silnrsi/smith\" \\\n      org.opencontainers.image.vendor=\"SIL International\"\nRUN apt-get autoremove --purge &&\\\n    rm /var/lib/apt/lists/* /var/lib/apt/lists/partial/*; true\n\n"
}