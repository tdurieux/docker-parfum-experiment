{
  "startTime": 1674254851599,
  "endTime": 1674254852394,
  "originalSmells": [
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 18,
        "columnEnd": 29
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 18,
        "columnEnd": 137
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 154
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#{{c\n  github = 'https://github.com'\n  branch = args.branch\n  if branch ~= 'master' then\n    branch = 'dev'\n  end\n  gonapps_repos = {'libgenc', 'libgaio', 'libfastdl'}\n  vinbero_repos = {'libvinbero_com', 'vinbero-ifaces', 'vinbero'}\n  all_repos = {}\n  for _, repo in pairs(gonapps_repos) do\n    table.insert(all_repos, repo)\n  end\n  for _, repo in pairs(vinbero_repos) do\n    table.insert(all_repos, repo)\n  end\n}}#\n#{{c\n  if branch ~= 'master' then\n    print([[\nFROM golang:alpine as installer\nRUN apk update && apk add --no-cache git\nRUN wget https://github.com/isacikgoz/gitbatch/releases/download/v0.4.1/gitbatch_0.4.1_linux_amd64.tar.gz -O /gitbatch.tar.gz\nRUN tar -xvzf /gitbatch.tar.gz -C / && rm /gitbatch.tar.gz\nRUN wget 'https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-amd64.zip' -O /ngrok.zip\nRUN unzip /ngrok.zip -d /\nRUN go get -u github.com/git-chglog/git-chglog/cmd/git-chglog\n    ]])\n  end\n}}#\nFROM alpine:latest\nMAINTAINER Byeonggon Lee (gonny952@gmail.com)\n\nRUN apk update && apk add --no-cache git cmake automake autoconf libtool make gcc musl-dev cmocka-dev jansson-dev openssl openssl-dev clang yaml-dev\nRUN mkdir -p /usr/src && rm -rf /usr/src\n#{{c\n  if branch ~= 'master' then\n    print([[\nCOPY --from=installer /gitbatch /usr/bin/gitbatch\nCOPY --from=installer /ngrok /usr/bin/ngrok\nCOPY --from=installer /go/bin/git-chglog /usr/bin/git-chglog\nRUN echo \"http://dl-cdn.alpinelinux.org/alpine/edge/testing\" >> /etc/apk/repositories; apk update\nRUN apk add --no-cache tmux vim less grep curl musl-dbg gdb valgrind tree zsh procps flex-dev g++ boost-dev boost-program_options lua5.3-dev nlohmann-json uncrustify\nRUN sh -c \"$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)\"\nCOPY vimrc /etc/vim/vimrc\nCOPY .zshrc /root/.zshrc\nCOPY vinbero-dev /usr/bin/vinbero-dev\nRUN chmod +x /usr/bin/vinbero-dev\nRUN git config --global pager.branch false\nRUN git clone -j8 --recurse-submodules https://github.com/gonapps-org/gmcr /usr/src/gmcr\nRUN mkdir /usr/src/gmcr/build && rm -rf /usr/src/gmcr/build\nRUN cd /usr/src/gmcr/build; cmake -DCMAKE_INSTALL_PREFIX:PATH=/usr ..; make; make install\n    ]])\n  end\n}}#\n#{{c\n  for _, repo in pairs(gonapps_repos) do\n    print('RUN git clone -j8 --recurse-submodules -b ' .. branch .. ' ' .. github .. '/gonapps-org/' .. repo .. ' /usr/src/' .. repo)\n  end\n  for _, repo in pairs(vinbero_repos) do\n    print('RUN git clone -j8 --recurse-submodules -b ' .. branch .. ' ' .. github .. '/vinbero/' .. repo .. ' /usr/src/' .. repo)\n  end\n}}#\n#{{c\n  if branch ~= 'master' then\n    for _, repo in pairs(all_repos) do\n      print('RUN mkdir /usr/src/' .. repo .. '/build; cd /usr/src/' .. repo .. '/build; cmake -DCMAKE_INSTALL_PREFIX:PATH=/usr -DCMAKE_BUILD_TYPE=Debug ..; make; make test; make install')\n    end\n  else\n    for _, repo in pairs(all_repos) do\n      print('RUN mkdir /usr/src/' .. repo .. '/build; cd /usr/src/' .. repo .. '/build; cmake -DCMAKE_INSTALL_PREFIX:PATH=/usr -DCMAKE_BUILD_TYPE=Release ..; make; make test; make install')\n    end\n  end\n}}#\n"
}