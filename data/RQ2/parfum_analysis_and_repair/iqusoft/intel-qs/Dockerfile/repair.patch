diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/iqusoft/intel-qs/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/iqusoft/intel-qs/Dockerfile/repaired.Dockerfile
index 7f77b4b..06e2fbf 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/iqusoft/intel-qs/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/iqusoft/intel-qs/Dockerfile/repaired.Dockerfile
@@ -24,20 +24,20 @@ FROM ubuntu:latest
 ARG DEBIAN_FRONTEND=noninteractive
 
 # Fetch and install the GNU Make utility.
-RUN apt-get update && apt-get install -y build-essential g++ make
+RUN apt-get update && apt-get install --no-install-recommends -y build-essential g++ make && rm -rf /var/lib/apt/lists/*;
 
 # Fetch and install a generic MPI implementation.
-RUN apt-get update && DEBIAN_FRONTEND=nonitneractive apt-get install -y mpich
+RUN apt-get update && DEBIAN_FRONTEND=nonitneractive apt-get --no-install-recommends install -y mpich && rm -rf /var/lib/apt/lists/*;
 
 # Fetch and install OpenSSH (client/server) for interacting between
 # nodes of the cluster in a Docker swarm configuration.
-RUN apt-get update && apt-get install -y openssh-client
-RUN apt-get update && apt-get install -y openssh-server
+RUN apt-get update && apt-get install --no-install-recommends -y openssh-client && rm -rf /var/lib/apt/lists/*;
+RUN apt-get update && apt-get install --no-install-recommends -y openssh-server && rm -rf /var/lib/apt/lists/*;
 
-# Fetch and install CMake 3.15 as required by Intel-QS build process. 
+# Fetch and install CMake 3.15 as required by Intel-QS build process.
 WORKDIR swpkgs/cmake3.15
-RUN wget "https://github.com/Kitware/CMake/releases/download/v3.15.2/cmake-3.15.2-Linux-x86_64.tar.gz" 
-RUN tar -xzf cmake-3.15.2-Linux-x86_64.tar.gz -C /usr/local/ --strip-components=1 
+RUN wget "https://github.com/Kitware/CMake/releases/download/v3.15.2/cmake-3.15.2-Linux-x86_64.tar.gz"
+RUN tar -xzf cmake-3.15.2-Linux-x86_64.tar.gz -C /usr/local/ --strip-components=1 && rm cmake-3.15.2-Linux-x86_64.tar.gz
 
 # Fetch and install the Intel MKL libraries required for building the Intel-QS simulator.
 WORKDIR swpkgs/mkl
@@ -46,19 +46,19 @@ RUN apt-key add GPG-PUB-KEY-INTEL-SW-PRODUCTS-2019.PUB
 RUN rm GPG-PUB-KEY-INTEL-SW-PRODUCTS-2019.PUB
 RUN sh -c 'echo deb https://apt.repos.intel.com/mkl all main > /etc/apt/sources.list.d/intel-mkl.list'
 RUN apt-get update
-RUN apt-get install -y intel-mkl-64bit-2019.2-057
+RUN apt-get install --no-install-recommends -y intel-mkl-64bit-2019.2-057 && rm -rf /var/lib/apt/lists/*;
 # Set the (global) environment variable MKLROOT to facilitate the build process.
 RUN echo 'export MKLROOT="/opt/intel/mkl"' >> /etc/bash.bashrc
 RUN export MKLROOT="/opt/intel/mkl"
 
 # Install libraries for OpenMP.
-RUN apt-get install -y libomp-dev
+RUN apt-get install --no-install-recommends -y libomp-dev && rm -rf /var/lib/apt/lists/*;
 
 # Install GIT (needed to install the dependency of Googletest).
 WORKDIR swpkgs/git
 RUN apt-get update && \
     apt-get upgrade -y && \
-    apt-get install -y git
+    apt-get install --no-install-recommends -y git && rm -rf /var/lib/apt/lists/*;
 
 # Setup the local build environment for the simulation framework.
 WORKDIR /root/intelqs
@@ -82,7 +82,7 @@ WORKDIR /root/intelqs
 LABEL mode="MPI" version="1.0" description="intel-qs built with MPI, no py interface, with Examples"
 
 # Install lib for missing pthread module [necessary?]
-RUN apt-get -y install libboost-all-dev
+RUN apt-get -y --no-install-recommends install libboost-all-dev && rm -rf /var/lib/apt/lists/*;
 
 # Install and configure conda env
 RUN wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O ~/miniconda.sh