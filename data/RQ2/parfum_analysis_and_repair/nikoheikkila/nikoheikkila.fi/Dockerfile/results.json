{
  "startTime": 1674217259969,
  "endTime": 1674217260688,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 14
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 48,
        "columnEnd": 64
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 18,
        "columnEnd": 34
      }
    }
  ],
  "repairedDockerfile": "# Stage 1: Build Process\nFROM node:12-alpine AS build\n\nRUN apk add --no-cache --virtual .gyp python make g++\n\nWORKDIR /app\nENV NODE_ENV=production\n\nCOPY package.json yarn.lock ./\nRUN yarn --frozen-lockfile --non-interactive && yarn cache clean;\n\nCOPY . .\nRUN yarn build && yarn cache clean;\n\n# Stage 2: Web Server\nFROM nginx:alpine\n\nCOPY nginx /etc/nginx/\nCOPY --from=build --chown=nginx:nginx /app/public /usr/share/nginx/html\nRUN touch /var/run/nginx.pid \\\n    && chown nginx:nginx /var/run/nginx.pid \\\n    && chown -R nginx:nginx /var/cache/nginx\n\nUSER nginx\n\nEXPOSE 8080\nHEALTHCHECK CMD [ \"wget\", \"-q\", \"localhost:8080\" ]\n"
}