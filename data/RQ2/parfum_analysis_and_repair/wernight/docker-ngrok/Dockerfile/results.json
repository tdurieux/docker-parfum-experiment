{
  "startTime": 1674220764543,
  "endTime": 1674220765761,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 94
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 38
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.12\nMAINTAINER Werner Beroux <werner@beroux.com>\n\n# https://github.com/sgerrand/alpine-pkg-glibc\nARG GLIBC_VERSION=2.31-r0\n\nRUN set -x \\\n && apk add --no-cache -t .deps ca-certificates \\\n    # Install glibc on Alpine (required by docker-compose)\n    # See also https://github.com/gliderlabs/docker-alpine/issues/11\n && wget -q -O /etc/apk/keys/sgerrand.rsa.pub https://alpine-pkgs.sgerrand.com/sgerrand.rsa.pub \\\n && wget https://github.com/sgerrand/alpine-pkg-glibc/releases/download/${GLIBC_VERSION}/glibc-${GLIBC_VERSION}.apk \\\n && apk add --no-cache glibc-${GLIBC_VERSION}.apk \\\n && rm glibc-${GLIBC_VERSION}.apk \\\n && apk del --purge .deps\n\nRUN set -x \\\n    # Install ngrok (latest official stable from https://ngrok.com/download).\n && apk add --no-cache curl \\\n && APKARCH=\"$(apk --print-arch)\" \\\n && case \"$APKARCH\" in \\\n      armhf)   NGROKARCH=\"arm\" ;; \\ \n      armv7)   NGROKARCH=\"arm\" ;; \\\n      armel)   NGROKARCH=\"arm\" ;; \\\n      x86)     NGROKARCH=\"386\" ;; \\\n      x86_64)  NGROKARCH=\"amd64\" ;; \\\n    esac \\\n && curl -f -Lo /ngrok.zip https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-$NGROKARCH.zip \\\n && unzip -o /ngrok.zip -d /bin \\\n && rm -f /ngrok.zip \\\n    # Create non-root user.\n && adduser -h /home/ngrok -D -u 6737 ngrok\n\n# Add config script.\nCOPY --chown=ngrok ngrok.yml /home/ngrok/.ngrok2/\nCOPY entrypoint.sh /\n\nUSER ngrok\nENV USER=ngrok\n\n# Basic sanity check.\nRUN ngrok --version\n\nEXPOSE 4040\n\nCMD [\"/entrypoint.sh\"]\n"
}