{
  "startTime": 1674252274180,
  "endTime": 1674252275357,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 9,
        "columnStart": 22,
        "columnEnd": 7
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 9,
        "columnStart": 22,
        "columnEnd": 7
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM php:8.0-fpm\n\n\nRUN apt-get update && apt-get install --no-install-recommends -y libssl-dev \\\n    zip \\\n    unzip \\\n    git \\\n    npm \\\n    cron \\\n    vim && rm -rf /var/lib/apt/lists/*;\n\nRUN pecl install mongodb \\\n    && docker-php-ext-enable mongodb\n\n\nRUN echo 'export EDITOR=vim' >> /root/.bashrc\n\n\n# Add crontab file in the cron directory\nADD crontab /etc/cron.d/myCrontab\n\n# Give execution rights on the cron job\nRUN chmod 0644 /etc/cron.d/myCrontab\n\n# Create the log file to be able to run tail\nRUN touch /var/log/cron.log\n\n# Installing composer\nRUN php -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\" \\\n    && php composer-setup.php && php -r \"unlink('composer-setup.php');\" \\\n    && mv composer.phar /usr/local/bin/composer\n\nRUN cd /var/www/html/\n\n\nRUN usermod -u 1000 www-data && \\\n    groupmod -g 1000 www-data && \\\n    chown -R www-data:www-data /var/www/\n\n\n\nRUN mkdir -p /var/log/php/ \\\n    && touch /var/log/php/access.log \\\n    && touch /var/log/php/error.log \\\n    && chmod 777 /var/log/php/access.log \\\n    && chmod 777 /var/log/php/error.log\n\n\n\n# Run the command on container startup\nCMD cron && tail -f /var/log/cron.log"
}