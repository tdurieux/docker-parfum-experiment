{
  "startTime": 1674250741837,
  "endTime": 1674250742415,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM docker:stable-dind\n\n###\n# Install docker-compose\n# https://github.com/wernight/docker-compose\n###\n\nRUN set -x && \\\n    apk add --no-cache -t .deps ca-certificates && \\\n    # Install glibc on Alpine (required by docker-compose) from\n    # https://github.com/sgerrand/alpine-pkg-glibc\n    # See also https://github.com/gliderlabs/docker-alpine/issues/11\n    wget -q -O /etc/apk/keys/sgerrand.rsa.pub https://alpine-pkgs.sgerrand.com/sgerrand.rsa.pub && \\\n    wget https://github.com/sgerrand/alpine-pkg-glibc/releases/download/2.29-r0/glibc-2.29-r0.apk && \\\n    apk add --no-cache glibc-2.29-r0.apk && \\\n    rm glibc-2.29-r0.apk && \\\n    apk del --purge .deps\n\n# Required for docker-compose to find zlib.\nENV LD_LIBRARY_PATH=/lib:/usr/lib\n\nRUN set -x && \\\n    apk add --no-cache -t .deps ca-certificates && \\\n    # Required dependencies.\n    apk add --no-cache zlib libgcc bash jq && \\\n    # Install docker-compose.\n    # https://docs.docker.com/compose/install/\n    DOCKER_COMPOSE_URL=https://github.com$(wget -q -O- https://github.com/docker/compose/releases/tag/1.29.2 \\\n        | grep -Eo 'href=\"[^\"]+docker-compose-Linux-x86_64' \\\n        | sed 's/^href=\"//' \\\n        | head -n1) && \\\n    wget -q -O /usr/local/bin/docker-compose $DOCKER_COMPOSE_URL && \\\n    chmod a+rx /usr/local/bin/docker-compose && \\\n    \\\n    # Clean-up\n    apk del --purge .deps && \\\n    \\\n    # Basic check it works\n    docker-compose version\n\nARG RAPIDS_HOME\nARG COMPOSE_HOME\nENV RAPIDS_HOME=\"$RAPIDS_HOME\"\nENV COMPOSE_HOME=\"$COMPOSE_HOME\"\nENV RMM_HOME=\"$RAPIDS_HOME/rmm\"\nENV CUDF_HOME=\"$RAPIDS_HOME/cudf\"\nENV CUML_HOME=\"$RAPIDS_HOME/cuml\"\nENV CUGRAPH_HOME=\"$RAPIDS_HOME/cugraph\"\nENV CUSPATIAL_HOME=\"$RAPIDS_HOME/cuspatial\"\nENV NOTEBOOKS_CONTRIB_HOME=\"$RAPIDS_HOME/notebooks-contrib\"\n\nENV _UID=1000\nENV _GID=1000\n\nENV BASE_CONTAINER=nvidia/cuda\nENV CUDA_VERSION=11.5.0\nENV LINUX_VERSION=ubuntu20.04\n\nENV PYTHON_VERSION=3.9\nENV RAPIDS_NAMESPACE=anon\n\nWORKDIR \"$RAPIDS_HOME\"\n\nCOPY etc/dind/ \"$COMPOSE_HOME/etc/dind\"\nCOPY etc/dind/.dockerignore \"$RAPIDS_HOME/.dockerignore\"\n\nRUN cat \"$RAPIDS_HOME/.dockerignore\"\n\nENTRYPOINT [\"$COMPOSE_HOME/etc/dind/build.sh\"]\n\nCMD [\"$COMPOSE_HOME/etc/dind/print_build_context.sh\"]\n"
}