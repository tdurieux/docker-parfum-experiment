{
  "startTime": 1674247117068,
  "endTime": 1674247118843,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 3,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 3,
        "columnEnd": 45
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# dont use alpine for python builds: https://pythonspeed.com/articles/alpine-docker-python/\nFROM python:3.10-slim-buster\n\nENV PYTHONUNBUFFERED=1\nENV POETRY_VERSION=\"1.1.13\"\nENV PIP_DISABLE_PIP_VERSION_CHECK=on\n\nRUN apt-get update \\\n&& apt-get -y --no-install-recommends install sudo git python-skimage && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /app\n\nCOPY . .\n\nCOPY poetry.lock pyproject.toml ./\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y libatlas-base-dev gfortran && \\\n    apt-get clean && rm -rf /var/lib/apt/lists/*\n\nRUN pip install --no-cache-dir \"poetry==$POETRY_VERSION\" \\\n && POETRY_VIRTUALENVS_CREATE=false poetry install --no-dev \\\n && pip uninstall -y poetry\n\nENV PUID=1000 PGID=1000\n\nENTRYPOINT [ \"docker/entrypoint.sh\", \"py-image-dedup\" ]\nCMD [ \"daemon\" ]\n"
}