{
  "startTime": 1674254584610,
  "endTime": 1674254585135,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 44,
        "columnEnd": 94
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 44,
        "columnEnd": 94
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM php:8.0-apache\n\n# Install OS dependencies required\nRUN apt-get update && apt-get upgrade -y && apt-get install --no-install-recommends git unzip zlib1g-dev libpng-dev -y && rm -rf /var/lib/apt/lists/*;\n\n# Adapt apache config\nRUN a2enmod rewrite \\\n    && echo \"ServerName 127.0.0.1\" >> /etc/apache2/apache2.conf\n\n# Install PHP ext-gd\nRUN docker-php-ext-install gd\n\n# Copy app content\n# Use the .dockerignore file to control what ends up inside the image!\nWORKDIR /var/www/html\nCOPY . .\n\n# Install server dependencies\nRUN chmod +x /var/www/html/docker-utils/install-composer && \\\n    /var/www/html/docker-utils/install-composer && \\\n    ./composer.phar update && \\\n    chmod +x /var/www/html/docker-utils/init-server\n\n# Expose useful volumes (see documentation)\nVOLUME /var/www/html/settings\nVOLUME /var/www/html/media\nVOLUME /var/www/html/cache\nVOLUME /var/www/html/plugins\n\n# Create a default copy of content and theme in case of empty directories binding\nRUN mkdir -p /var/www/html/content.default/ && \\\n    cp -R /var/www/html/content/* /var/www/html/content.default/ && \\\n    mkdir -p /var/www/html/themes.default/ && \\\n    cp -R /var/www/html/themes/* /var/www/html/themes.default/\n\nVOLUME /var/www/html/content\nVOLUME /var/www/html/themes\n\n# Inject default values if content and themes are mounted with empty directories, adjust rights and start the server\nCMD [\"/var/www/html/docker-utils/init-server\"]"
}