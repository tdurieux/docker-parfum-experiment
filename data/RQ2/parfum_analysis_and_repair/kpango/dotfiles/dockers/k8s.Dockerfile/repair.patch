diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/kpango/dotfiles/dockers/k8s.Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/kpango/dotfiles/dockers/k8s.Dockerfile/repaired.Dockerfile
index 25c2597..eaaf5be 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/kpango/dotfiles/dockers/k8s.Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/kpango/dotfiles/dockers/k8s.Dockerfile/repaired.Dockerfile
@@ -21,26 +21,26 @@ RUN mkdir -p "${BIN_PATH}"
 FROM kube-base AS kubectl
 RUN set -x; cd "$(mktemp -d)" \
     && BIN_NAME="kubectl" \
-    && VERSION="$(curl -s ${GOOGLE}/kubernetes-release/release/stable.txt)" \
+    && VERSION="$( curl -f -s ${GOOGLE}/kubernetes-release/release/stable.txt)" \
     && URL="${GOOGLE}/kubernetes-release/release/${VERSION}/bin/${OS}/${ARCH}/${BIN_NAME}" \
     && echo ${URL} \
     && curl -fsSLo "${BIN_PATH}/${BIN_NAME}" "${URL}" \
     && chmod a+x "${BIN_PATH}/${BIN_NAME}" \
     && upx -9 "${BIN_PATH}/${BIN_NAME}" \
-    && "${BIN_PATH}/${BIN_NAME}" version --client
+    && "${BIN_PATH}/${BIN_NAME}" version --client && rm -rf -d
 
 FROM kube-base AS helm
 RUN set -x; cd "$(mktemp -d)" \
-    && curl "${RAWGITHUB}/helm/helm/master/scripts/get-helm-3" | bash \
+    && curl -f "${RAWGITHUB}/helm/helm/master/scripts/get-helm-3" | bash \
     && BIN_NAME="helm" \
     && chmod a+x "${BIN_PATH}/${BIN_NAME}" \
-    && upx -9 "${BIN_PATH}/${BIN_NAME}"
+    && upx -9 "${BIN_PATH}/${BIN_NAME}" && rm -rf -d
 
 FROM kube-base AS kubefwd
 RUN set -x; cd "$(mktemp -d)" \
     && BIN_NAME="kubefwd" \
     && REPO="txn2/${BIN_NAME}" \
-    && VERSION="$(curl --silent ${API_GITHUB}/${REPO}/${RELEASE_LATEST} | grep -Po '"tag_name": "\K.*?(?=")' | sed 's/v//g')" \
+    && VERSION="$( curl -f --silent ${API_GITHUB}/${REPO}/${RELEASE_LATEST} | grep -Po '"tag_name": "\K.*?(?=")' | sed 's/v//g')" \
     && if [ "${ARCH}" = "amd64" ] ; then  ARCH=${XARCH} ; fi \
     && TAR_NAME="${BIN_NAME}_$(echo ${OS} | sed 's/.*/\u&/')_${ARCH}" \
     && URL="${GITHUB}/${REPO}/${RELEASE_DL}/${VERSION}/${TAR_NAME}.tar.gz" \
@@ -48,13 +48,13 @@ RUN set -x; cd "$(mktemp -d)" \
     && curl -fsSLO "${URL}" \
     && tar -zxvf "${TAR_NAME}.tar.gz" \
     && mv "${BIN_NAME}" "${BIN_PATH}/${BIN_NAME}" \
-    && upx -9 "${BIN_PATH}/${BIN_NAME}"
+    && upx -9 "${BIN_PATH}/${BIN_NAME}" && rm -rf -d && rm "${TAR_NAME}.tar.gz"
 
 FROM kube-base AS kubectx
 RUN set -x; cd "$(mktemp -d)" \
     && BIN_NAME="kubectx" \
     && REPO="ahmetb/${BIN_NAME}" \
-    && VERSION="$(curl --silent ${API_GITHUB}/${REPO}/${RELEASE_LATEST} | grep -Po '"tag_name": "\K.*?(?=")' | sed 's/v//g')" \
+    && VERSION="$( curl -f --silent ${API_GITHUB}/${REPO}/${RELEASE_LATEST} | grep -Po '"tag_name": "\K.*?(?=")' | sed 's/v//g')" \
     && if [ "${ARCH}" = "amd64" ] ; then  ARCH=${XARCH} ; fi \
     && TAR_NAME="${BIN_NAME}_v${VERSION}_${OS}_${ARCH}" \
     && URL="${GITHUB}/${REPO}/${RELEASE_DL}/v${VERSION}/${TAR_NAME}.tar.gz" \
@@ -62,13 +62,13 @@ RUN set -x; cd "$(mktemp -d)" \
     && curl -fsSLO "${URL}" \
     && tar -zxvf "${TAR_NAME}.tar.gz" \
     && mv "${BIN_NAME}" "${BIN_PATH}/${BIN_NAME}" \
-    && upx -9 "${BIN_PATH}/${BIN_NAME}"
+    && upx -9 "${BIN_PATH}/${BIN_NAME}" && rm -rf -d && rm "${TAR_NAME}.tar.gz"
 
 FROM kube-base AS kubens
 RUN set -x; cd "$(mktemp -d)" \
     && BIN_NAME="kubectx" \
     && REPO="ahmetb/${BIN_NAME}" \
-    && VERSION="$(curl --silent ${API_GITHUB}/${REPO}/${RELEASE_LATEST} | grep -Po '"tag_name": "\K.*?(?=")' | sed 's/v//g')" \
+    && VERSION="$( curl -f --silent ${API_GITHUB}/${REPO}/${RELEASE_LATEST} | grep -Po '"tag_name": "\K.*?(?=")' | sed 's/v//g')" \
     && BIN_NAME="kubens" \
     && if [ "${ARCH}" = "amd64" ] ; then  ARCH=${XARCH} ; fi \
     && TAR_NAME="${BIN_NAME}_v${VERSION}_${OS}_${ARCH}" \
@@ -77,13 +77,13 @@ RUN set -x; cd "$(mktemp -d)" \
     && curl -fsSLO "${URL}" \
     && tar -zxvf "${TAR_NAME}.tar.gz" \
     && mv "${BIN_NAME}" "${BIN_PATH}/${BIN_NAME}" \
-    && upx -9 "${BIN_PATH}/${BIN_NAME}"
+    && upx -9 "${BIN_PATH}/${BIN_NAME}" && rm -rf -d && rm "${TAR_NAME}.tar.gz"
 
 FROM kube-base AS krew
 RUN set -x; cd "$(mktemp -d)" \
     && BIN_NAME="krew" \
     && REPO="kubernetes-sigs/${BIN_NAME}" \
-    && VERSION="$(curl --silent ${API_GITHUB}/${REPO}/${RELEASE_LATEST} | grep -Po '"tag_name": "\K.*?(?=")' | sed 's/v//g')" \
+    && VERSION="$( curl -f --silent ${API_GITHUB}/${REPO}/${RELEASE_LATEST} | grep -Po '"tag_name": "\K.*?(?=")' | sed 's/v//g')" \
     && TAR_NAME="${BIN_NAME}-${OS}_${ARCH}" \
     && curl -fsSLO "${GITHUB}/${REPO}/${RELEASE_DL}/v${VERSION}/${TAR_NAME}.tar.gz" \
     && tar -zxvf "${TAR_NAME}.tar.gz" \
@@ -91,13 +91,13 @@ RUN set -x; cd "$(mktemp -d)" \
     && "${PWD}/${TAR_NAME}" install --manifest="${BIN_NAME}.yaml" --archive="${TAR_NAME}.tar.gz" \
     && BIN_NAME="kubectl-krew" \
     && "/root/.krew/bin/${BIN_NAME}" update \
-    && mv "/root/.krew/bin/${BIN_NAME}" "${BIN_PATH}/${BIN_NAME}"
+    && mv "/root/.krew/bin/${BIN_NAME}" "${BIN_PATH}/${BIN_NAME}" && rm -rf -d && rm "${TAR_NAME}.tar.gz"
 
 FROM kube-base AS check-ownerreferences
 RUN set -x; cd "$(mktemp -d)" \
     && BIN_NAME="kubectl-check-ownerreferences" \
     && REPO="kubernetes-sigs/${BIN_NAME}" \
-    && VERSION="$(curl --silent ${API_GITHUB}/${REPO}/${RELEASE_LATEST} | grep -Po '"tag_name": "\K.*?(?=")' | sed 's/v//g')" \
+    && VERSION="$( curl -f --silent ${API_GITHUB}/${REPO}/${RELEASE_LATEST} | grep -Po '"tag_name": "\K.*?(?=")' | sed 's/v//g')" \
     && TAR_NAME="${BIN_NAME}-${OS}-${ARCH}" \
     && URL="${GITHUB}/${REPO}/${RELEASE_DL}/v${VERSION}/${TAR_NAME}.tar.gz" \
     && echo ${URL} \
@@ -105,21 +105,21 @@ RUN set -x; cd "$(mktemp -d)" \
     && tar -zxvf "${TAR_NAME}.tar.gz" \
     && mv "${BIN_NAME}" "${BIN_PATH}/${BIN_NAME}" \
     && chmod a+x "${BIN_PATH}/${BIN_NAME}" \
-    && upx -9 "${BIN_PATH}/${BIN_NAME}"
+    && upx -9 "${BIN_PATH}/${BIN_NAME}" && rm -rf -d && rm "${TAR_NAME}.tar.gz"
 
 FROM kube-base AS kubebox
 RUN set -x; cd "$(mktemp -d)" \
     && BIN_NAME="kubebox" \
     && REPO="astefanutti/${BIN_NAME}" \
-    && VERSION="$(curl --silent ${API_GITHUB}/${REPO}/${RELEASE_LATEST} | grep -Po '"tag_name": "\K.*?(?=")' | sed 's/v//g')" \
+    && VERSION="$( curl -f --silent ${API_GITHUB}/${REPO}/${RELEASE_LATEST} | grep -Po '"tag_name": "\K.*?(?=")' | sed 's/v//g')" \
     && curl -fsSLo "${BIN_PATH}/${BIN_NAME}" "${GITHUB}/${REPO}/${RELEASE_DL}/v${VERSION}/${BIN_NAME}-${OS}" \
-    && chmod a+x "${BIN_PATH}/${BIN_NAME}"
+    && chmod a+x "${BIN_PATH}/${BIN_NAME}" && rm -rf -d
 
 FROM kube-base AS stern
 RUN set -x; cd "$(mktemp -d)" \
     && BIN_NAME="stern" \
     && REPO="${BIN_NAME}/${BIN_NAME}" \
-    && VERSION="$(curl --silent ${API_GITHUB}/${REPO}/${RELEASE_LATEST} | grep -Po '"tag_name": "\K.*?(?=")' | sed 's/v//g')" \
+    && VERSION="$( curl -f --silent ${API_GITHUB}/${REPO}/${RELEASE_LATEST} | grep -Po '"tag_name": "\K.*?(?=")' | sed 's/v//g')" \
     && TAR_NAME="${BIN_NAME}_${VERSION}_${OS}_${ARCH}" \
     && URL="${GITHUB}/${REPO}/${RELEASE_DL}/v${VERSION}/${TAR_NAME}.tar.gz" \
     && curl -fsSLO "${URL}" \
@@ -127,50 +127,50 @@ RUN set -x; cd "$(mktemp -d)" \
     && tar -zxvf "${TAR_NAME}.tar.gz" \
     && mv "${BIN_NAME}" "${BIN_PATH}/${BIN_NAME}" \
     && chmod a+x "${BIN_PATH}/${BIN_NAME}" \
-    && upx -9 "${BIN_PATH}/${BIN_NAME}"
+    && upx -9 "${BIN_PATH}/${BIN_NAME}" && rm -rf -d && rm "${TAR_NAME}.tar.gz"
 
 FROM kube-base AS kubebuilder
 RUN set -x; cd "$(mktemp -d)" \
     && BIN_NAME="kubebuilder" \
     && REPO="kubernetes-sigs/${BIN_NAME}" \
-    && VERSION="$(curl --silent ${API_GITHUB}/${REPO}/${RELEASE_LATEST} | grep -Po '"tag_name": "\K.*?(?=")' | sed 's/v//g')" \
+    && VERSION="$( curl -f --silent ${API_GITHUB}/${REPO}/${RELEASE_LATEST} | grep -Po '"tag_name": "\K.*?(?=")' | sed 's/v//g')" \
     && TARGET_NAME="${BIN_NAME}_${OS}_${ARCH}" \
     && URL="${GITHUB}/${REPO}/${RELEASE_DL}/v${VERSION}/${TARGET_NAME}" \
     && echo ${URL} \
     && curl -fsSLO "${URL}" \
     && mv "${TARGET_NAME}" "${BIN_PATH}/${BIN_NAME}" \
     && chmod a+x "${BIN_PATH}/${BIN_NAME}" \
-    && upx -9 "${BIN_PATH}/${BIN_NAME}"
+    && upx -9 "${BIN_PATH}/${BIN_NAME}" && rm -rf -d
 
 FROM kube-base AS kubectl-fzf
 RUN set -x; cd "$(mktemp -d)" \
     && BIN_NAME="kubectl-fzf" \
     && REPO="bonnefoa/${BIN_NAME}" \
-    && VERSION="$(curl --silent ${API_GITHUB}/${REPO}/${RELEASE_LATEST} | grep -Po '"tag_name": "\K.*?(?=")' | sed 's/v//g')" \
+    && VERSION="$( curl -f --silent ${API_GITHUB}/${REPO}/${RELEASE_LATEST} | grep -Po '"tag_name": "\K.*?(?=")' | sed 's/v//g')" \
     && TAR_NAME="${BIN_NAME}_${OS}_${ARCH}" \
     && curl -fsSLO "${GITHUB}/${REPO}/${RELEASE_DL}/v${VERSION}/${TAR_NAME}.tar.gz" \
     && tar -zxvf "${TAR_NAME}.tar.gz" \
     && BIN_NAME="cache_builder" \
     && mv "${BIN_NAME}" "${BIN_PATH}/${BIN_NAME}" \
-    && upx -9 "${BIN_PATH}/${BIN_NAME}"
+    && upx -9 "${BIN_PATH}/${BIN_NAME}" && rm -rf -d && rm "${TAR_NAME}.tar.gz"
 
 FROM kube-base AS k9s
 RUN set -x; cd "$(mktemp -d)" \
     && BIN_NAME="k9s" \
     && REPO="derailed/${BIN_NAME}" \
-    && VERSION="$(curl --silent ${API_GITHUB}/${REPO}/${RELEASE_LATEST} | grep -Po '"tag_name": "\K.*?(?=")' | sed 's/v//g')" \
+    && VERSION="$( curl -f --silent ${API_GITHUB}/${REPO}/${RELEASE_LATEST} | grep -Po '"tag_name": "\K.*?(?=")' | sed 's/v//g')" \
     && if [ "${ARCH}" = "amd64" ] ; then  ARCH=${XARCH} ; fi \
     && TAR_NAME="${BIN_NAME}_$(echo ${OS} | sed 's/.*/\u&/')_${ARCH}" \
     && curl -fsSLO "${GITHUB}/${REPO}/${RELEASE_DL}/v${VERSION}/${TAR_NAME}.tar.gz" \
     && tar -zxvf "${TAR_NAME}.tar.gz" \
     && mv "${BIN_NAME}" "${BIN_PATH}/${BIN_NAME}" \
-    && upx -9 "${BIN_PATH}/${BIN_NAME}"
+    && upx -9 "${BIN_PATH}/${BIN_NAME}" && rm -rf -d && rm "${TAR_NAME}.tar.gz"
 
 FROM kube-base AS kube-profefe-base
 RUN set -x; cd "$(mktemp -d)" \
     && BIN_NAME="kube-profefe" \
     && REPO="profefe/${BIN_NAME}" \
-    && VERSION="$(curl --silent ${API_GITHUB}/${REPO}/${RELEASE_LATEST} | grep -Po '"tag_name": "\K.*?(?=")' | sed 's/v//g')" \
+    && VERSION="$( curl -f --silent ${API_GITHUB}/${REPO}/${RELEASE_LATEST} | grep -Po '"tag_name": "\K.*?(?=")' | sed 's/v//g')" \
     && if [ "${ARCH}" = "amd64" ] ; then  ARCH=${XARCH} ; fi \
     && TAR_NAME="${BIN_NAME}_v${VERSION}_$(echo ${OS} | sed 's/.*/\u&/')_${ARCH}" \
     && curl -fsSLO "${GITHUB}/${REPO}/${RELEASE_DL}/v${VERSION}/${TAR_NAME}.tar.gz" \
@@ -178,165 +178,165 @@ RUN set -x; cd "$(mktemp -d)" \
     && BIN_NAME="kprofefe" \
     && mv "${BIN_NAME}" "${BIN_PATH}/${BIN_NAME}" \
     && BIN_NAME="kubectl-profefe" \
-    && mv "${BIN_NAME}" "${BIN_PATH}/${BIN_NAME}"
+    && mv "${BIN_NAME}" "${BIN_PATH}/${BIN_NAME}" && rm -rf -d && rm "${TAR_NAME}.tar.gz"
 
 FROM kube-profefe-base AS kprofefe
 RUN set -x; cd "$(mktemp -d)" \
     && BIN_NAME="kprofefe" \
-    && upx -9 "${BIN_PATH}/${BIN_NAME}"
+    && upx -9 "${BIN_PATH}/${BIN_NAME}" && rm -rf -d
 
 FROM kube-profefe-base AS kubectl-profefe
 RUN set -x; cd "$(mktemp -d)" \
     && BIN_NAME="kubectl-profefe" \
-    && upx -9 "${BIN_PATH}/${BIN_NAME}"
+    && upx -9 "${BIN_PATH}/${BIN_NAME}" && rm -rf -d
 
 FROM kube-base AS conftest
 RUN set -x; cd "$(mktemp -d)" \
     && BIN_NAME="conftest" \
     && REPO="open-policy-agent/${BIN_NAME}" \
-    && VERSION="$(curl --silent ${API_GITHUB}/${REPO}/${RELEASE_LATEST} | grep -Po '"tag_name": "\K.*?(?=")' | sed 's/v//g')" \
+    && VERSION="$( curl -f --silent ${API_GITHUB}/${REPO}/${RELEASE_LATEST} | grep -Po '"tag_name": "\K.*?(?=")' | sed 's/v//g')" \
     && TAR_NAME="${BIN_NAME}_${VERSION}_$(echo ${OS} | sed 's/.*/\u&/')_${ARCH}" \
     && curl -fsSLO "${GITHUB}/${REPO}/${RELEASE_DL}/v${VERSION}/${TAR_NAME}.tar.gz" \
     && tar -zxvf "${TAR_NAME}.tar.gz" \
     && mv "${BIN_NAME}" "${BIN_PATH}/${BIN_NAME}" \
-    && upx -9 "${BIN_PATH}/${BIN_NAME}"
+    && upx -9 "${BIN_PATH}/${BIN_NAME}" && rm -rf -d && rm "${TAR_NAME}.tar.gz"
 
 FROM kube-base AS kubectl-tree
 RUN set -x; cd "$(mktemp -d)" \
     && BIN_NAME="kubectl-tree" \
     && REPO="ahmetb/${BIN_NAME}" \
-    && VERSION="$(curl --silent ${API_GITHUB}/${REPO}/${RELEASE_LATEST} | grep -Po '"tag_name": "\K.*?(?=")' | sed 's/v//g')" \
+    && VERSION="$( curl -f --silent ${API_GITHUB}/${REPO}/${RELEASE_LATEST} | grep -Po '"tag_name": "\K.*?(?=")' | sed 's/v//g')" \
     && TAR_NAME="${BIN_NAME}_v${VERSION}_${OS}_${ARCH}" \
     && curl -fsSLO "${GITHUB}/${REPO}/${RELEASE_DL}/v${VERSION}/${TAR_NAME}.tar.gz" \
     && tar -zxvf "${TAR_NAME}.tar.gz" \
     && mv "${BIN_NAME}" "${BIN_PATH}/${BIN_NAME}" \
-    && upx -9 "${BIN_PATH}/${BIN_NAME}"
+    && upx -9 "${BIN_PATH}/${BIN_NAME}" && rm -rf -d && rm "${TAR_NAME}.tar.gz"
 
 FROM kube-base AS linkerd
 RUN set -x; cd "$(mktemp -d)" \
     && BIN_NAME="linkerd" \
-    && curl -sL https://run.linkerd.io/install | sh \
+    && curl -f -sL https://run.linkerd.io/install | sh \
     && mv ${HOME}/.linkerd2/bin/${BIN_NAME}-* "${BIN_PATH}/${BIN_NAME}" \
-    && upx -9 "${BIN_PATH}/${BIN_NAME}"
+    && upx -9 "${BIN_PATH}/${BIN_NAME}" && rm -rf -d
 
 FROM kube-base AS octant
 RUN set -x; cd "$(mktemp -d)" \
     && BIN_NAME="octant" \
     && REPO="vmware-tanzu/${BIN_NAME}" \
-    && VERSION="$(curl --silent ${API_GITHUB}/${REPO}/${RELEASE_LATEST} | grep -Po '"tag_name": "\K.*?(?=")' | sed 's/v//g')" \
+    && VERSION="$( curl -f --silent ${API_GITHUB}/${REPO}/${RELEASE_LATEST} | grep -Po '"tag_name": "\K.*?(?=")' | sed 's/v//g')" \
     && TAR_NAME="${BIN_NAME}_${VERSION}_$(echo ${OS} | sed 's/.*/\u&/')-64bit" \
     && curl -fsSLO "${GITHUB}/${REPO}/${RELEASE_DL}/v${VERSION}/${TAR_NAME}.tar.gz" \
     && tar -zxvf "${TAR_NAME}.tar.gz" \
     && mv "${TAR_NAME}/${BIN_NAME}" "${BIN_PATH}/${BIN_NAME}" \
-    && upx -9 "${BIN_PATH}/${BIN_NAME}"
+    && upx -9 "${BIN_PATH}/${BIN_NAME}" && rm -rf -d && rm "${TAR_NAME}.tar.gz"
 
 FROM kube-base AS skaffold
 RUN set -x; cd "$(mktemp -d)" \
     && BIN_NAME="skaffold" \
     && REPO="GoogleContainerTools/${BIN_NAME}" \
-    && VERSION="$(curl --silent ${API_GITHUB}/${REPO}/${RELEASE_LATEST} | grep -Po '"tag_name": "\K.*?(?=")' | sed 's/v//g')" \
+    && VERSION="$( curl -f --silent ${API_GITHUB}/${REPO}/${RELEASE_LATEST} | grep -Po '"tag_name": "\K.*?(?=")' | sed 's/v//g')" \
     && curl -fsSLo "${BIN_PATH}/${BIN_NAME}" "${GOOGLE}/${BIN_NAME}/releases/v${VERSION}/${BIN_NAME}-${OS}-${ARCH}" \
     && chmod a+x "${BIN_PATH}/${BIN_NAME}" \
-    && upx -9 "${BIN_PATH}/${BIN_NAME}"
+    && upx -9 "${BIN_PATH}/${BIN_NAME}" && rm -rf -d
 
 FROM kube-base AS kubeval
 RUN set -x; cd "$(mktemp -d)" \
     && BIN_NAME="kubeval" \
     && REPO="instrumenta/${BIN_NAME}" \
-    && VERSION="$(curl --silent ${API_GITHUB}/${REPO}/${RELEASE_LATEST} | grep -Po '"tag_name": "\K.*?(?=")' | sed 's/v//g')" \
+    && VERSION="$( curl -f --silent ${API_GITHUB}/${REPO}/${RELEASE_LATEST} | grep -Po '"tag_name": "\K.*?(?=")' | sed 's/v//g')" \
     && TAR_NAME="${BIN_NAME}-${OS}-${ARCH}" \
     && curl -fsSLO "${GITHUB}/${REPO}/${RELEASE_DL}/v${VERSION}/${TAR_NAME}.tar.gz" \
     && tar -zxvf "${TAR_NAME}.tar.gz" \
     && mv "${BIN_NAME}" "${BIN_PATH}/${BIN_NAME}" \
-    && upx -9 "${BIN_PATH}/${BIN_NAME}"
+    && upx -9 "${BIN_PATH}/${BIN_NAME}" && rm -rf -d && rm "${TAR_NAME}.tar.gz"
 
 FROM kube-base AS kube-linter
 RUN set -x; cd "$(mktemp -d)" \
     && BIN_NAME="kube-linter" \
     && REPO="stackrox/${BIN_NAME}" \
-    && VERSION="$(curl --silent ${API_GITHUB}/${REPO}/${RELEASE_LATEST} | grep -Po '"tag_name": "\K.*?(?=")' | sed 's/v//g')" \
+    && VERSION="$( curl -f --silent ${API_GITHUB}/${REPO}/${RELEASE_LATEST} | grep -Po '"tag_name": "\K.*?(?=")' | sed 's/v//g')" \
     && TAR_NAME="${BIN_NAME}-${OS}" \
     && curl -fsSLO "${GITHUB}/${REPO}/${RELEASE_DL}/${VERSION}/${TAR_NAME}.tar.gz" \
     && tar -zxvf "${TAR_NAME}.tar.gz" \
     && mv "${BIN_NAME}" "${BIN_PATH}/${BIN_NAME}" \
-    && upx -9 "${BIN_PATH}/${BIN_NAME}"
+    && upx -9 "${BIN_PATH}/${BIN_NAME}" && rm -rf -d && rm "${TAR_NAME}.tar.gz"
 
 FROM kube-base AS helm-docs
 RUN set -x; cd "$(mktemp -d)" \
     && BIN_NAME="helm-docs" \
     && REPO="norwoodj/${BIN_NAME}" \
-    && VERSION="$(curl --silent ${API_GITHUB}/${REPO}/${RELEASE_LATEST} | grep -Po '"tag_name": "\K.*?(?=")' | sed 's/v//g')" \
+    && VERSION="$( curl -f --silent ${API_GITHUB}/${REPO}/${RELEASE_LATEST} | grep -Po '"tag_name": "\K.*?(?=")' | sed 's/v//g')" \
     && if [ "${ARCH}" = "amd64" ] ; then  ARCH=${XARCH} ; fi \
     && TAR_NAME="${BIN_NAME}_${VERSION}_$(echo ${OS} | sed 's/.*/\u&/')_${ARCH}" \
     && curl -fsSLO "${GITHUB}/${REPO}/${RELEASE_DL}/v${VERSION}/${TAR_NAME}.tar.gz" \
     && tar -zxvf "${TAR_NAME}.tar.gz" \
     && mv "${BIN_NAME}" "${BIN_PATH}/${BIN_NAME}" \
-    && upx -9 "${BIN_PATH}/${BIN_NAME}"
+    && upx -9 "${BIN_PATH}/${BIN_NAME}" && rm -rf -d && rm "${TAR_NAME}.tar.gz"
 
 FROM kube-base AS kubectl-gadget
 RUN set -x; cd "$(mktemp -d)" \
     && BIN_NAME="inspektor-gadget" \
     && REPO="kinvolk/${BIN_NAME}" \
-    && VERSION="$(curl --silent ${API_GITHUB}/${REPO}/${RELEASE_LATEST} | grep -Po '"tag_name": "\K.*?(?=")' | sed 's/v//g')" \
+    && VERSION="$( curl -f --silent ${API_GITHUB}/${REPO}/${RELEASE_LATEST} | grep -Po '"tag_name": "\K.*?(?=")' | sed 's/v//g')" \
     && TAR_NAME="kubectl-gadget-${OS}-${ARCH}" \
     && curl -fsSLO "${GITHUB}/${REPO}/${RELEASE_DL}/v${VERSION}/${TAR_NAME}.tar.gz" \
     && tar -zxvf "${TAR_NAME}.tar.gz" \
     && BIN_NAME="kubectl-gadget" \
     && mv "${BIN_NAME}" "${BIN_PATH}/${BIN_NAME}" \
-    && upx -9 "${BIN_PATH}/${BIN_NAME}"
+    && upx -9 "${BIN_PATH}/${BIN_NAME}" && rm -rf -d && rm "${TAR_NAME}.tar.gz"
 
 FROM kube-base AS kdash
 RUN set -x; cd "$(mktemp -d)" \
     && BIN_NAME="kdash" \
     && REPO="${BIN_NAME}-rs/${BIN_NAME}" \
-    && VERSION="$(curl --silent ${API_GITHUB}/${REPO}/${RELEASE_LATEST} | grep -Po '"tag_name": "\K.*?(?=")' | sed 's/v//g')" \
+    && VERSION="$( curl -f --silent ${API_GITHUB}/${REPO}/${RELEASE_LATEST} | grep -Po '"tag_name": "\K.*?(?=")' | sed 's/v//g')" \
     && TAR_NAME="${BIN_NAME}-${OS}" \
     && curl -fsSLO "${GITHUB}/${REPO}/${RELEASE_DL}/v${VERSION}/${TAR_NAME}.tar.gz" \
     && tar -zxvf "${TAR_NAME}.tar.gz" \
-    && mv "${BIN_NAME}" "${BIN_PATH}/${BIN_NAME}"
+    && mv "${BIN_NAME}" "${BIN_PATH}/${BIN_NAME}" && rm -rf -d && rm "${TAR_NAME}.tar.gz"
 
 FROM kube-base AS kubectl-rolesum
 RUN set -x; cd "$(mktemp -d)" \
     && BIN_NAME="kubectl-rolesum" \
     && REPO="Ladicle/${BIN_NAME}" \
-    && VERSION="$(curl --silent ${API_GITHUB}/${REPO}/${RELEASE_LATEST} | grep -Po '"tag_name": "\K.*?(?=")' | sed 's/v//g')" \
+    && VERSION="$( curl -f --silent ${API_GITHUB}/${REPO}/${RELEASE_LATEST} | grep -Po '"tag_name": "\K.*?(?=")' | sed 's/v//g')" \
     && TAR_NAME="${BIN_NAME}_${OS}-${ARCH}" \
     && curl -fsSLO "${GITHUB}/${REPO}/${RELEASE_DL}/v${VERSION}/${TAR_NAME}.tar.gz" \
     && tar -zxvf "${TAR_NAME}.tar.gz" \
     && mv "${TAR_NAME}/${BIN_NAME}" "${BIN_PATH}/${BIN_NAME}" \
-    && upx -9 "${BIN_PATH}/${BIN_NAME}"
+    && upx -9 "${BIN_PATH}/${BIN_NAME}" && rm -rf -d && rm "${TAR_NAME}.tar.gz"
 
 FROM kube-base AS kubeletctl
 RUN set -x; cd "$(mktemp -d)" \
     && BIN_NAME="kubeletctl" \
     && REPO="cyberark/${BIN_NAME}" \
-    && VERSION="$(curl --silent ${API_GITHUB}/${REPO}/${RELEASE_LATEST} | grep -Po '"tag_name": "\K.*?(?=")' | sed 's/v//g')" \
+    && VERSION="$( curl -f --silent ${API_GITHUB}/${REPO}/${RELEASE_LATEST} | grep -Po '"tag_name": "\K.*?(?=")' | sed 's/v//g')" \
     && FILE_NAME="${BIN_NAME}_${OS}_${ARCH}" \
     && curl -fsSLO "${GITHUB}/${REPO}/${RELEASE_DL}/v${VERSION}/${FILE_NAME}" \
     && mv "${FILE_NAME}" "${BIN_PATH}/${BIN_NAME}" \
     && chmod a+x "${BIN_PATH}/${BIN_NAME}" \
-    && upx -9 "${BIN_PATH}/${BIN_NAME}"
+    && upx -9 "${BIN_PATH}/${BIN_NAME}" && rm -rf -d
 
 FROM kube-base AS istio
 RUN set -x; cd "$(mktemp -d)" \
     && BIN_NAME="istioctl" \
-    && curl -L https://istio.io/downloadIstio | sh - \
+    && curl -f -L https://istio.io/downloadIstio | sh - \
     && mv "$(ls | grep istio)/bin/${BIN_NAME}" "${BIN_PATH}/${BIN_NAME}" \
-    && upx -9 "${BIN_PATH}/${BIN_NAME}"
+    && upx -9 "${BIN_PATH}/${BIN_NAME}" && rm -rf -d
 
 FROM kube-base AS kpt
 RUN set -x; cd "$(mktemp -d)" \
     && BIN_NAME="kpt" \
     && curl -fsSLo "${BIN_PATH}/${BIN_NAME}" "${GOOGLE}/${BIN_NAME}-dev/latest/${OS}_${ARCH}/${BIN_NAME}" \
     && chmod a+x "${BIN_PATH}/${BIN_NAME}" \
-    && upx -9 "${BIN_PATH}/${BIN_NAME}"
+    && upx -9 "${BIN_PATH}/${BIN_NAME}" && rm -rf -d
 
 FROM kube-base AS k3d
 RUN set -x; cd "$(mktemp -d)" \
     && BIN_NAME="k3d" \
     && REPO="rancher/${BIN_NAME}" \
     && wget -q -O - "${RAWGITHUB}/${REPO}/main/install.sh" | bash \
-    && upx -9 "${BIN_PATH}/${BIN_NAME}"
+    && upx -9 "${BIN_PATH}/${BIN_NAME}" && rm -rf -d
 
 FROM kube-base AS kustomize
 RUN set -x; cd "$(mktemp -d)" \
@@ -344,17 +344,17 @@ RUN set -x; cd "$(mktemp -d)" \
     && REPO="kubernetes-sigs/${BIN_NAME}" \
     && wget -q -O - "${RAWGITHUB}/${REPO}/master/hack/install_${BIN_NAME}.sh" | bash \
     && mv "${BIN_NAME}" "${BIN_PATH}/${BIN_NAME}" \
-    && upx -9 "${BIN_PATH}/${BIN_NAME}"
+    && upx -9 "${BIN_PATH}/${BIN_NAME}" && rm -rf -d
 
 FROM kube-base AS wasme
 RUN set -x; cd "$(mktemp -d)" \
     && NAME="wasme" \
     && REPO="solo-io/wasm" \
-    && VERSION="$(curl --silent ${API_GITHUB}/${REPO}/${RELEASE_LATEST} | grep -Po '"tag_name": "\K.*?(?=")' | sed 's/v//g')" \
+    && VERSION="$( curl -f --silent ${API_GITHUB}/${REPO}/${RELEASE_LATEST} | grep -Po '"tag_name": "\K.*?(?=")' | sed 's/v//g')" \
     && BIN_NAME="${NAME}-${OS}-${ARCH}" \
     && curl -fsSLo "${BIN_PATH}/${NAME}" "${GITHUB}/${REPO}/${RELEASE_DL}/v${VERSION}/${BIN_NAME}" \
     && chmod a+x "${BIN_PATH}/${NAME}" \
-    && upx -9 "${BIN_PATH}/${NAME}"
+    && upx -9 "${BIN_PATH}/${NAME}" && rm -rf -d
 
 FROM kube-base AS telepresence
 RUN curl -fL https://app.getambassador.io/download/tel2/linux/amd64/latest/telepresence -o "${BIN_PATH}/telepresence" \
@@ -366,7 +366,7 @@ RUN set -x; cd "$(mktemp -d)" \
     && BIN_NAME="pixie" \
     && curl -fsSLo "${BIN_PATH}/${BIN_NAME}" "${GOOGLE}/${BIN_NAME}-prod-artifacts/cli/latest/cli_${OS}_${ARCH}" \
     && chmod a+x "${BIN_PATH}/${BIN_NAME}" \
-    && upx -9 "${BIN_PATH}/${BIN_NAME}"
+    && upx -9 "${BIN_PATH}/${BIN_NAME}" && rm -rf -d
 
 FROM kpango/go:latest AS golang
 FROM kube-base AS kube-golang-base
@@ -384,7 +384,7 @@ RUN set -x; cd "$(mktemp -d)" \
       --ldflags "-s -w" --trimpath \
       "${GITHUBCOM}/${REPO}@latest" \
     && mv "${GOPATH}/bin/${BIN_NAME}" "${BIN_PATH}/${BIN_NAME}" \
-    && upx -9 "${BIN_PATH}/${BIN_NAME}"
+    && upx -9 "${BIN_PATH}/${BIN_NAME}" && rm -rf -d
 
 FROM kube-golang-base AS kubecolor
 RUN set -x; cd "$(mktemp -d)" \
@@ -394,7 +394,7 @@ RUN set -x; cd "$(mktemp -d)" \
       --ldflags "-s -w" --trimpath \
       "${GITHUBCOM}/${REPO}/cmd/${BIN_NAME}@latest" \
     && mv "${GOPATH}/bin/${BIN_NAME}" "${BIN_PATH}/${BIN_NAME}" \
-    && upx -9 "${BIN_PATH}/${BIN_NAME}"
+    && upx -9 "${BIN_PATH}/${BIN_NAME}" && rm -rf -d
 
 FROM kube-golang-base AS popeye
 RUN set -x; cd "$(mktemp -d)" \
@@ -404,7 +404,7 @@ RUN set -x; cd "$(mktemp -d)" \
       --ldflags "-s -w" --trimpath \
       "${GITHUBCOM}/${REPO}@latest" \
     && mv "${GOPATH}/bin/${BIN_NAME}" "${BIN_PATH}/${BIN_NAME}" \
-    && upx -9 "${BIN_PATH}/${BIN_NAME}"
+    && upx -9 "${BIN_PATH}/${BIN_NAME}" && rm -rf -d
 
 FROM kube-golang-base AS kubectl-trace
 RUN set -x; cd "$(mktemp -d)" \
@@ -414,7 +414,7 @@ RUN set -x; cd "$(mktemp -d)" \
       --ldflags "-s -w" --trimpath \
       "${GITHUBCOM}/${REPO}/cmd/${BIN_NAME}@master" \
     && mv "${GOPATH}/bin/${BIN_NAME}" "${BIN_PATH}/${BIN_NAME}" \
-    && upx -9 "${BIN_PATH}/${BIN_NAME}"
+    && upx -9 "${BIN_PATH}/${BIN_NAME}" && rm -rf -d
 
 FROM kube-golang-base AS k8sviz
 RUN set -x; cd "$(mktemp -d)" \
@@ -424,7 +424,7 @@ RUN set -x; cd "$(mktemp -d)" \
       --ldflags "-s -w" --trimpath \
       "${GITHUBCOM}/${REPO}/cmd/${BIN_NAME}@master" \
     && mv "${GOPATH}/bin/${BIN_NAME}" "${BIN_PATH}/${BIN_NAME}" \
-    && upx -9 "${BIN_PATH}/${BIN_NAME}"
+    && upx -9 "${BIN_PATH}/${BIN_NAME}" && rm -rf -d
 
 FROM kube-golang-base AS kind
 RUN set -x; cd "$(mktemp -d)" \
@@ -434,7 +434,7 @@ RUN set -x; cd "$(mktemp -d)" \
       --ldflags "-s -w" --trimpath \
       "${REPO}/cmd/${BIN_NAME}@master" \
     && mv "${GOPATH}/bin/${BIN_NAME}" "${BIN_PATH}/${BIN_NAME}" \
-    && upx -9 "${BIN_PATH}/${BIN_NAME}"
+    && upx -9 "${BIN_PATH}/${BIN_NAME}" && rm -rf -d
 
 FROM scratch AS kube
 LABEL maintainer="kpango <kpango@vdaas.org>"