diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/kpango/dotfiles/dockers/env.Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/kpango/dotfiles/dockers/env.Dockerfile/repaired.Dockerfile
index 47a8a4c..cd11537 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/kpango/dotfiles/dockers/env.Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/kpango/dotfiles/dockers/env.Dockerfile/repaired.Dockerfile
@@ -111,7 +111,7 @@ RUN echo '/lib\n\
     && make CMAKE_EXTRA_FLAGS="-DCMAKE_INSTALL_PREFIX:PATH=/usr" CMAKE_BUILD_TYPE=Release \
     && make install \
     && cd /tmp && rm -rf /tmp/neovim \
-    && pip3 install --upgrade pip neovim ranger-fm thefuck httpie python-language-server vim-vint grpcio-tools \
+    && pip3 install --no-cache-dir --upgrade pip neovim ranger-fm thefuck httpie python-language-server vim-vint grpcio-tools \
     && gem install neovim -N \
     && git clone --depth 1 https://github.com/soimort/translate-shell \
     && cd /tmp/translate-shell/ \
@@ -124,7 +124,7 @@ RUN echo '/lib\n\
     && chown -R ${USER}:users ${HOME}/.* \
     && chmod -R 755 ${HOME} \
     && chmod -R 755 ${HOME}/.* \
-    && npm install -g n
+    && npm install -g n && npm cache clean --force;
 
 RUN n latest \
     && npm config set user ${USER} \
@@ -147,7 +147,7 @@ RUN n latest \
     && bash -c "chown -R ${USER} $(npm config get prefix)/{lib/node_modules,bin,share}" \
     && bash -c "chmod -R 755 $(npm config get prefix)/{lib/node_modules,bin,share}" \
     && apt purge -y nodejs npm \
-    && apt -y autoremove
+    && apt -y autoremove && npm cache clean --force;
 
 
 FROM env-base AS protoc
@@ -156,7 +156,7 @@ RUN set -x; cd "$(mktemp -d)" \
     && REPO_NAME="protobuf" \
     && BIN_NAME="protoc" \
     && REPO="protocolbuffers/${REPO_NAME}" \
-    && VERSION="$(curl --silent ${API_GITHUB}/${REPO}/${RELEASE_LATEST} | grep -Po '"tag_name": "\K.*?(?=")' | sed 's/v//g')" \
+    && VERSION="$( curl -f --silent ${API_GITHUB}/${REPO}/${RELEASE_LATEST} | grep -Po '"tag_name": "\K.*?(?=")' | sed 's/v//g')" \
     && if [ "${ARCH}" = "amd64" ] ; then  ARCH=${XARCH} ; fi \
     && ZIP_NAME="${BIN_NAME}-${VERSION}-${OS}-${ARCH}" \
     && curl -fsSL "${GITHUB}/${REPO}/${RELEASE_DL}/v${VERSION}/${ZIP_NAME}.zip" -o "/tmp/${BIN_NAME}.zip" \
@@ -172,14 +172,14 @@ ENV CFLAGS "-mno-avx512f -mno-avx512dq -mno-avx512cd -mno-avx512bw -mno-avx512vl
 ENV CXXFLAGS ${CFLAGS}
 # ENV LDFLAGS="-L/usr/local/opt/llvm/lib"
 # ENV CPPFLAGS="-I/usr/local/opt/llvm/include"
-RUN curl -LO "https://github.com/yahoojapan/NGT/archive/v${NGT_VERSION}.tar.gz" \
+RUN curl -f -LO "https://github.com/yahoojapan/NGT/archive/v${NGT_VERSION}.tar.gz" \
     && tar zxf "v${NGT_VERSION}.tar.gz" -C /tmp \
     && cd "/tmp/NGT-${NGT_VERSION}" \
     && cmake -DNGT_LARGE_DATASET=ON . \
     && make -j -C "/tmp/NGT-${NGT_VERSION}" \
     && make install -C "/tmp/NGT-${NGT_VERSION}" \
     && cd /tmp \
-    && rm -rf /tmp/*
+    && rm -rf /tmp/* && rm "v${NGT_VERSION}.tar.gz"
 
 FROM env-base AS tensorflow
 WORKDIR /tmp
@@ -193,7 +193,7 @@ RUN set -x; cd "$(mktemp -d)" \
     && echo "${URL}" \
     && curl -fsSLo "/tmp/${BIN_NAME}.tar.gz" "${URL}" \
     && tar -C /usr/local -xzf "/tmp/${BIN_NAME}.tar.gz" \
-    && rm -rf /tmp/*
+    && rm -rf /tmp/* && rm "/tmp/${BIN_NAME}.tar.gz"
 
 FROM env-base AS env