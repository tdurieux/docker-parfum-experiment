{
  "startTime": 1674248900054,
  "endTime": 1674248901355,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 18,
        "columnEnd": 71
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 18,
        "columnEnd": 71
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 18,
        "columnEnd": 71
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 18,
        "columnEnd": 71
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 92,
        "lineEnd": 92,
        "columnStart": 18,
        "columnEnd": 71
      }
    },
    {
      "rule": "rmRecursiveAfterMktempD",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 18,
        "columnEnd": 27
      }
    },
    {
      "rule": "rmRecursiveAfterMktempD",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 18,
        "columnEnd": 27
      }
    },
    {
      "rule": "rmRecursiveAfterMktempD",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 18,
        "columnEnd": 27
      }
    },
    {
      "rule": "rmRecursiveAfterMktempD",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 18,
        "columnEnd": 27
      }
    },
    {
      "rule": "rmRecursiveAfterMktempD",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 18,
        "columnEnd": 27
      }
    },
    {
      "rule": "rmRecursiveAfterMktempD",
      "position": {
        "lineStart": 87,
        "lineEnd": 87,
        "columnStart": 18,
        "columnEnd": 27
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 7,
        "columnEnd": 33
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 7,
        "columnEnd": 56
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM kpango/dev-base:latest AS docker-base\n\nARG TARGETOS\nARG TARGETARCH\n\nENV OS=${TARGETOS}\nENV ARCH=${TARGETARCH}\nENV XARCH x86_64\nENV GITHUB https://github.com\nENV API_GITHUB https://api.github.com/repos\nENV GOOGLE https://storage.googleapis.com\nENV RELEASE_DL releases/download\nENV RELEASE_LATEST releases/latest\nENV LOCAL /usr/local\nENV BIN_PATH ${LOCAL}/bin\n\nFROM aquasec/trivy:latest AS trivy\n\nFROM goodwithtech/dockle:latest AS dockle-base\nFROM docker-base AS dockle\nCOPY --from=dockle-base /usr/bin/dockle ${BIN_PATH}/dockle\nRUN upx -9 ${BIN_PATH}/dockle\n\nFROM wagoodman/dive:latest AS dive-base\nFROM docker-base AS dive\nCOPY --from=dive-base ${BIN_PATH}/dive ${BIN_PATH}/dive\nRUN upx -9 ${BIN_PATH}/dive\n\nFROM docker-base AS slim\n\nRUN set -x; cd \"$(mktemp -d)\" \\\n    && BIN_NAME=\"docker-slim\" \\\n    && REPO=\"${BIN_NAME}/${BIN_NAME}\" \\\n    && VERSION=\"$( curl -f --silent ${API_GITHUB}/${REPO}/${RELEASE_LATEST} | grep -Po '\"tag_name\": \"\\K.*?(?=\")' | sed 's/v//g')\" \\\n    && DOCKER_SLIM_RELEASES=\"https://downloads.dockerslim.com/releases\" \\\n    && curl -fsSLO \"${DOCKER_SLIM_RELEASES}/$VERSION/dist_${OS}.tar.gz\" \\\n    && tar zxvf dist_${OS}.tar.gz \\\n    && mv dist_${OS}/docker* ${BIN_PATH} \\\n    && upx -9 \\\n        ${BIN_PATH}/${BIN_NAME} \\\n        ${BIN_PATH}/${BIN_NAME}-sensor && rm -rf -d && rm dist_${OS}.tar.gz\n\nFROM docker-base AS docker-credential-pass\nRUN set -x; cd \"$(mktemp -d)\" \\\n    && ORG=\"docker\" \\\n    && NAME=\"${ORG}-credential-helpers\" \\\n    && REPO=\"${ORG}/${NAME}\" \\\n    && BIN_NAME=\"${ORG}-credential-pass\" \\\n    && VERSION=\"$( curl -f --silent ${API_GITHUB}/${REPO}/${RELEASE_LATEST} | grep -Po '\"tag_name\": \"\\K.*?(?=\")' | sed 's/v//g')\" \\\n    && curl -fSsLO \"${GITHUB}/${REPO}/${RELEASE_DL}/v${VERSION}/${BIN_NAME}-v${VERSION}-${ARCH}.tar.gz\" \\\n    && tar -xvf \"${BIN_NAME}-v${VERSION}-${ARCH}.tar.gz\" \\\n    && mv ${BIN_NAME} ${BIN_PATH}/${BIN_NAME} \\\n    && chmod a+x ${BIN_PATH}/${BIN_NAME} \\\n    && upx -9 ${BIN_PATH}/${BIN_NAME} && rm -rf -d && rm \"${BIN_NAME}-v${VERSION}-${ARCH}.tar.gz\"\n\nFROM docker-base AS buildx\nENV CLI_LIB_PATH /usr/lib/docker/cli-plugins\nRUN set -x; cd \"$(mktemp -d)\" \\\n    && mkdir -p ${CLI_LIB_PATH} \\\n    && NAME=\"buildx\" \\\n    && REPO=\"docker/${NAME}\" \\\n    && BIN_NAME=\"docker-buildx\" \\\n    && VERSION=\"$( curl -f --silent ${API_GITHUB}/${REPO}/${RELEASE_LATEST} | grep -Po '\"tag_name\": \"\\K.*?(?=\")' | sed 's/v//g')\" \\\n    && curl -fSsLo ${CLI_LIB_PATH}/${BIN_NAME} \"${GITHUB}/${REPO}/${RELEASE_DL}/v${VERSION}/${NAME}-v${VERSION}.${OS}-${ARCH}\" \\\n    && chmod a+x ${CLI_LIB_PATH}/${BIN_NAME} \\\n    && upx -9 ${CLI_LIB_PATH}/${BIN_NAME} && rm -rf -d\n\nFROM docker-base AS dockfmt\nRUN set -x; cd \"$(mktemp -d)\" \\\n    && NAME=\"dockfmt\" \\\n    && REPO=\"jessfraz/${NAME}\" \\\n    && BIN_NAME=${NAME} \\\n    && VERSION=\"$( curl -f --silent ${API_GITHUB}/${REPO}/${RELEASE_LATEST} | grep -Po '\"tag_name\": \"\\K.*?(?=\")' | sed 's/v//g')\" \\\n    && curl -fSsLo ${BIN_PATH}/${BIN_NAME} \"${GITHUB}/${REPO}/${RELEASE_DL}/v${VERSION}/${NAME}-${OS}-${ARCH}\" \\\n    && chmod a+x ${BIN_PATH}/${BIN_NAME} \\\n    && upx -9 ${BIN_PATH}/${BIN_NAME} && rm -rf -d\n\nFROM docker-base AS container-diff\nRUN set -x; cd \"$(mktemp -d)\" \\\n    && NAME=\"container-diff\" \\\n    && REPO=\"jessfraz/${NAME}\" \\\n    && BIN_NAME=${NAME} \\\n    && curl -fsSLo \"${BIN_PATH}/${BIN_NAME}\" \"${GOOGLE}/${NAME}/latest/${NAME}-${OS}-${ARCH}\" \\\n    && chmod a+x ${BIN_PATH}/${BIN_NAME} \\\n    && upx -9 ${BIN_PATH}/${BIN_NAME} && rm -rf -d\n\nFROM docker-base AS docker-compose\nRUN set -x; cd \"$(mktemp -d)\" \\\n    && ORG=\"docker\"\\\n    && NAME=\"compose\" \\\n    && REPO=\"${ORG}/${NAME}\" \\\n    && BIN_NAME=\"${ORG}-${NAME}\" \\\n    && VERSION=\"$( curl -f --silent ${API_GITHUB}/${REPO}/${RELEASE_LATEST} | grep -Po '\"tag_name\": \"\\K.*?(?=\")' | sed 's/v//g')\" \\\n    && if [ \"${ARCH}\" = \"amd64\" ] ; then  ARCH=${XARCH} ; fi \\\n    && curl -fSsLO \"${GITHUB}/${REPO}/${RELEASE_DL}/v${VERSION}/${ORG}-${NAME}-${OS}-${ARCH}\" \\\n    && mv \"${ORG}-${NAME}-${OS}-${ARCH}\" ${BIN_PATH}/${BIN_NAME} \\\n    && chmod a+x ${BIN_PATH}/${BIN_NAME} \\\n    && upx -9 ${BIN_PATH}/${BIN_NAME} && rm -rf -d\n\nFROM golang:buster AS dlayer-base\nENV LOCAL /usr/local\nENV BIN_PATH ${LOCAL}/bin\nRUN GO111MODULE=on go install  \\\n    --ldflags \"-s -w\" --trimpath \\\n    github.com/orisano/dlayer@latest \\\n    && mv ${GOPATH}/bin/dlayer ${BIN_PATH}/dlayer\n\nFROM docker-base AS dlayer\nCOPY --from=dlayer-base ${BIN_PATH}/dlayer ${BIN_PATH}/dlayer\nRUN upx -9 ${BIN_PATH}/dlayer\n\nFROM docker:rc-dind AS common-base\n\nFROM docker-base AS common\nCOPY --from=common-base ${BIN_PATH}/containerd ${BIN_PATH}/containerd\nCOPY --from=common-base ${BIN_PATH}/containerd-shim ${BIN_PATH}/containerd-shim\nCOPY --from=common-base ${BIN_PATH}/ctr ${BIN_PATH}/ctr\nCOPY --from=common-base ${BIN_PATH}/dind ${BIN_PATH}/dind\nCOPY --from=common-base ${BIN_PATH}/docker ${BIN_PATH}/docker\nCOPY --from=common-base ${BIN_PATH}/docker-entrypoint.sh ${BIN_PATH}/docker-entrypoint.sh\nCOPY --from=common-base ${BIN_PATH}/docker-init ${BIN_PATH}/docker-init\nCOPY --from=common-base ${BIN_PATH}/docker-proxy ${BIN_PATH}/docker-proxy\nCOPY --from=common-base ${BIN_PATH}/dockerd ${BIN_PATH}/dockerd\nCOPY --from=common-base ${BIN_PATH}/dockerd-entrypoint.sh ${BIN_PATH}/dockerd-entrypoint.sh\nCOPY --from=common-base ${BIN_PATH}/modprobe ${BIN_PATH}/modprobe\nCOPY --from=common-base ${BIN_PATH}/runc ${BIN_PATH}/runc\nRUN upx -9 \\\n        ${BIN_PATH}/containerd \\\n        ${BIN_PATH}/containerd-shim \\\n        ${BIN_PATH}/docker \\\n        ${BIN_PATH}/docker-init \\\n        ${BIN_PATH}/dockerd \\\n        ${BIN_PATH}/runc \\\n    # && upx -9 --force-pie \\\n        # ${BIN_PATH}/ctr \\\n    && chmod a+x ${BIN_PATH}/docker-entrypoint.sh \\\n    && chmod a+x ${BIN_PATH}/dockerd-entrypoint.sh\n\nFROM scratch AS docker\n\nENV BIN_PATH /usr/local/bin\nENV LIB_PATH /usr/local/libexec\nENV DOCKER_PATH /usr/docker/bin\nENV DOCKER_LIB_PATH /usr/lib/docker\n\nCOPY --from=buildx ${DOCKER_LIB_PATH}/cli-plugins/docker-buildx ${DOCKER_LIB_PATH}/cli-plugins/docker-buildx\nCOPY --from=common ${BIN_PATH}/containerd ${DOCKER_PATH}/docker-containerd\nCOPY --from=common ${BIN_PATH}/containerd-shim ${DOCKER_PATH}/docker-containerd-shim\nCOPY --from=common ${BIN_PATH}/ctr ${DOCKER_PATH}/docker-containerd-ctr\nCOPY --from=common ${BIN_PATH}/dind ${DOCKER_PATH}/dind\nCOPY --from=common ${BIN_PATH}/docker ${DOCKER_PATH}/docker\nCOPY --from=common ${BIN_PATH}/docker-entrypoint.sh ${DOCKER_PATH}/docker-entrypoint\nCOPY --from=common ${BIN_PATH}/docker-init ${DOCKER_PATH}/docker-init\nCOPY --from=common ${BIN_PATH}/docker-proxy ${DOCKER_PATH}/docker-proxy\nCOPY --from=common ${BIN_PATH}/dockerd ${DOCKER_PATH}/dockerd\nCOPY --from=common ${BIN_PATH}/dockerd-entrypoint.sh ${DOCKER_PATH}/dockerd-entrypoint\nCOPY --from=common ${BIN_PATH}/modprobe ${DOCKER_PATH}/modprobe\nCOPY --from=common ${BIN_PATH}/runc ${DOCKER_PATH}/docker-runc\nCOPY --from=container-diff ${BIN_PATH}/container-diff ${DOCKER_PATH}/container-diff\nCOPY --from=dive ${BIN_PATH}/dive ${DOCKER_PATH}/dive\nCOPY --from=dlayer ${BIN_PATH}/dlayer ${DOCKER_PATH}/dlayer\nCOPY --from=docker-compose ${BIN_PATH}/docker-compose ${DOCKER_LIB_PATH}/cli-plugins/docker-compose\nCOPY --from=docker-credential-pass ${BIN_PATH}/docker-credential-pass ${DOCKER_PATH}/docker-credential-pass\nCOPY --from=dockfmt ${BIN_PATH}/dockfmt ${DOCKER_PATH}/dockfmt\nCOPY --from=dockle ${BIN_PATH}/dockle ${DOCKER_PATH}/dockle\nCOPY --from=slim ${BIN_PATH}/docker-slim ${DOCKER_PATH}/docker-slim\nCOPY --from=slim ${BIN_PATH}/docker-slim-sensor ${DOCKER_PATH}/docker-slim-sensor\nCOPY --from=trivy ${BIN_PATH}/trivy ${DOCKER_PATH}/trivy\n"
}