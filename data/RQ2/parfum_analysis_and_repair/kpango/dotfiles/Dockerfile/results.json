{
  "startTime": 1674215956404,
  "endTime": 1674215957814,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 95,
        "lineEnd": 95,
        "columnStart": 7,
        "columnEnd": 26
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 96,
        "lineEnd": 96,
        "columnStart": 7,
        "columnEnd": 79
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM kpango/go:latest AS go\n\nFROM kpango/rust:latest AS rust\n\nFROM kpango/nim:latest AS nim\n\nFROM kpango/dart:latest AS dart\n\nFROM kpango/docker:latest AS docker\n\nFROM kpango/kube:latest AS kube\n\nFROM kpango/gcloud:latest AS gcloud\n\nFROM kpango/env:latest AS env\n\nFROM env\n\nLABEL maintainer=\"kpango <kpango@vdaas.org>\"\n\nARG USER_ID=1000\nARG GROUP_ID=1000\nARG WHOAMI=kpango\n\nENV GROUP sudo,root,users,docker,wheel\nENV TZ Asia/Tokyo\nENV HOME /home/${WHOAMI}\nENV GOPATH $HOME/go\nENV GOROOT /usr/local/go\nENV GCLOUD_PATH /google-cloud-sdk\nENV CARGO_PATH $HOME/.cargo\nENV DART_PATH /usr/lib/dart\nENV NVIM_HOME $HOME/.config/nvim\nENV VIM_PLUG_HOME $NVIM_HOME/plugged/vim-plug\nENV LIBRARY_PATH /usr/local/lib:$LIBRARY_PATH\nENV ZPLUG_HOME $HOME/.zplug\nENV PATH $GOPATH/bin:/usr/local/go/bin:$CARGO_PATH/bin:$DART_PATH/bin:$GCLOUD_PATH/bin:$PATH\n\nCOPY --from=docker /usr/lib/docker/cli-plugins/docker-buildx /usr/lib/docker/cli-plugins/docker-buildx\nCOPY --from=docker /usr/lib/docker/cli-plugins/docker-compose /usr/lib/docker/cli-plugins/docker-compose\nCOPY --from=docker /usr/docker/bin/ /usr/bin/\nCOPY --from=kube /usr/k8s/bin/ /usr/bin/\n\nCOPY --from=gcloud /usr/lib/google-cloud-sdk /usr/lib/google-cloud-sdk\nCOPY --from=gcloud /usr/lib/google-cloud-sdk/lib /usr/lib\nCOPY --from=gcloud /root/.config/gcloud $HOME/.config/gcloud\n\nCOPY --from=nim /bin/nim /usr/local/bin/nim\nCOPY --from=nim /bin/nimble /usr/local/bin/nimble\nCOPY --from=nim /bin/nimsuggest /usr/local/bin/nimsuggest\nCOPY --from=nim /nim/lib /usr/local/lib/nim\nCOPY --from=nim /root/.cache/nim $HOME/.cache/nim\nCOPY --from=nim /nim /nim\n\nCOPY --from=dart ${DART_PATH}/bin ${DART_PATH}/bin\nCOPY --from=dart ${DART_PATH}/lib ${DART_PATH}/lib\nCOPY --from=dart ${DART_PATH}/include ${DART_PATH}/include\n\nCOPY --from=go /opt/go/bin $GOROOT/bin\nCOPY --from=go /opt/go/src $GOROOT/src\nCOPY --from=go /opt/go/lib $GOROOT/lib\nCOPY --from=go /opt/go/pkg $GOROOT/pkg\nCOPY --from=go /opt/go/misc $GOROOT/misc\nCOPY --from=go /go/bin $GOPATH/bin\n\nCOPY --from=rust /root/.cargo ${CARGO_PATH}\nCOPY --from=rust /root/.rustup ${HOME}/.rustup\n\nCOPY coc-settings.json $NVIM_HOME/coc-settings.json\nCOPY efm-lsp-conf.yaml $NVIM_HOME/efm-lsp-conf.yaml\nCOPY gitattributes $HOME/.gitattributes\nCOPY gitconfig $HOME/.gitconfig\nCOPY gitignore $HOME/.gitignore\nCOPY init.vim $NVIM_HOME/init.vim\nCOPY monokai.vim $NVIM_HOME/colors/monokai.vim\nCOPY tmux-kube $HOME/.tmux-kube\nCOPY tmux.conf $HOME/.tmux.conf\nCOPY vintrc.yaml $HOME/.vintrc.yaml\nCOPY zshrc $HOME/.zshrc\n\nWORKDIR $VIM_PLUG_HOME\n\nUSER root\n\n# RUN groupadd docker \\\n    # && newgrp docker \\\n    # && chown -R ${USER_ID}:${GROUP_ID} ${HOME} \\\nRUN usermod -aG ${GROUP} ${WHOAMI} \\\n    && chown -R ${USER_ID}:${GROUP_ID} ${HOME} \\\n    && chown -R ${USER_ID}:${GROUP_ID} ${HOME}/.* \\\n    && chmod -R 755 ${HOME} \\\n    && chmod -R 755 ${HOME}/.* \\\n    && rm -rf $VIM_PLUG_HOME/autoload \\\n    && git clone --depth 1 https://github.com/junegunn/vim-plug.git $VIM_PLUG_HOME/autoload \\\n    && npm uninstall yarn -g \\\n    && npm install yarn -g \\\n    && yarn global add https://github.com/neoclide/coc.nvim --prefix /usr/local \\\n    && git clone --depth 1 https://github.com/zplug/zplug $ZPLUG_HOME \\\n    && zsh -ic zplug install \\\n    && rm -rf ${HOME}/.cache \\\n    && rm -rf ${HOME}/.zplug/cache/* \\\n    && rm -rf ${HOME}/.zplug/log/* \\\n    && rm -rf ${HOME}/.npm/_cacache \\\n    && rm -rf ${HOME}/.cargo/registry/cache \\\n    && rm -rf /usr/local/share/.cache \\\n    && rm -rf /tmp/* \\\n    && chown -R ${USER_ID}:${GROUP_ID} ${HOME} \\\n    && chown -R ${USER_ID}:${GROUP_ID} ${HOME}/.* \\\n    && chown -R ${USER_ID}:${GROUP_ID} /usr/local/lib/node_modules \\\n    && chown -R ${USER_ID}:${GROUP_ID} /usr/local/bin/npm \\\n    && chown -R ${USER_ID}:${GROUP_ID} /usr/local/include/google/protobuf \\\n    && chmod -R 755 ${HOME} \\\n    && chmod -R 755 ${HOME}/.* \\\n    && chmod -R 755 /usr/local/lib/node_modules \\\n    && chmod -R 755 /usr/local/bin/npm \\\n    && chmod -R 755 /usr/local/include/google/protobuf && npm cache clean --force; && yarn cache clean;\n\nUSER ${USER_ID}\nWORKDIR ${HOME}\n\nENTRYPOINT [\"docker-entrypoint\"]\nCMD [\"/usr/bin/zsh\"]\n"
}