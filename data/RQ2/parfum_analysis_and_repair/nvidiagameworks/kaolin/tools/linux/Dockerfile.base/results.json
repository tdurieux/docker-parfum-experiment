{
  "startTime": 1674246205910,
  "endTime": 1674246206703,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 96
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 7,
        "columnEnd": 96
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG CUDA_VERSION=11.3.1\nARG CUDNN_VERSION=8\nFROM nvidia/cuda:${CUDA_VERSION}-cudnn${CUDNN_VERSION}-devel-ubuntu18.04\n\nARG PYTHON_VERSION=3.9\nENV PYTHON_VERSION=${PYTHON_VERSION}\nARG PYTORCH_VERSION=1.10.2\nENV PYTORCH_VERSION=${PYTORCH_VERSION}\n\n# Note: removing this line as it seems to cause a lot of problems.\n# RUN sed -i -e 's|^deb http://[^.]*[.]ubuntu[.]com/ubuntu|deb  https://urm.nvidia.com/artifactory/ubuntu-remote|' /etc/apt/sources.list \\\n\nRUN echo \"Acquire { https::Verify-Peer false }\" > /etc/apt/apt.conf.d/99verify-peer.conf \\\n    && if [ -f /etc/apt/sources.list.d/cuda.list ]; then \\\n        rm /etc/apt/sources.list.d/cuda.list; \\\n    fi \\\n    && if [ -f /etc/apt/sources.list.d/nvidia-ml.list ]; then \\\n        rm /etc/apt/sources.list.d/nvidia-ml.list; \\\n    fi \\\n    && apt-get update \\\n    && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y --allow-unauthenticated ca-certificates \\\n    && rm /etc/apt/apt.conf.d/99verify-peer.conf \\\n    && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \\\n         build-essential \\\n         curl \\\n         git \\\n         unzip \\\n         gfortran \\\n         libgtk2.0-0 \\\n         libgtk-3-0 \\\n         libgbm-dev \\\n         libnotify-dev \\\n         libgconf-2-4 \\\n         libnss3 \\\n         libxss1 \\\n         libasound2 \\\n         libxtst6 \\\n         xauth \\\n         xvfb \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/*\n\nRUN curl -f -o ~/miniconda.sh https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh && \\\n    sh ~/miniconda.sh -b -p /opt/conda && \\\n    rm ~/miniconda.sh && \\\n    /opt/conda/bin/conda install -y python=${PYTHON_VERSION} && \\\n    /opt/conda/bin/conda clean -ya\n\nENV PATH /opt/conda/bin:$PATH\n\nRUN export CUDA_MAJOR=\"$(echo ${CUDA_VERSION} | cut -d'.' -f1)\" \\\n    && export CUDA_MINOR=\"$(echo ${CUDA_VERSION} | cut -d'.' -f2)\" \\\n    && conda install -y pytorch==${PYTORCH_VERSION} cudatoolkit=${CUDA_MAJOR}.${CUDA_MINOR} -c pytorch -c conda-forge \\\n    && conda clean -y --all --force-pkgs-dirs\n\nRUN conda install -c conda-forge nodejs==16.13.0 \\\n    && conda clean --all --force-pkgs-dirs\n\nRUN conda list > conda_build.txt\n\n### Install Dash3D Requirements ###\nWORKDIR /tmp\nRUN npm install -g npm@8.5.4 && npm cache clean --force;\nCOPY package.json package-lock.json ./\nRUN npm install && npm cache clean --force;\n\nRUN pip install --no-cache-dir ninja setuptools==46.4.0 numpy==1.18.0\n"
}