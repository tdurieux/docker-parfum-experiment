{
  "startTime": 1674254533369,
  "endTime": 1674254534381,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 96
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 54
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 7,
        "columnEnd": 96
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#FROM nvidia/cuda:${CUDA_VERSION}-cudnn${CUDNN_VERSION}-devel-ubuntu18.04\nFROM ubuntu:18.04\n# used for cross-compilation in docker build\n#\nARG PYTHON_VERSION=3.9\nENV PYTHON_VERSION=${PYTHON_VERSION}\nARG PYTORCH_VERSION=1.10.2\nENV PYTORCH_VERSION=${PYTORCH_VERSION}\n\n#RUN sed -i -e 's|^deb http://[^.]*[.]ubuntu[.]com/ubuntu|deb  https://urm.nvidia.com/artifactory/ubuntu-remote|' /etc/apt/sources.list \\\nRUN echo \"Acquire { https::Verify-Peer false }\" > /etc/apt/apt.conf.d/99verify-peer.conf \\\n    && apt-get update \\\n    && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y --allow-unauthenticated ca-certificates \\\n    && rm /etc/apt/apt.conf.d/99verify-peer.conf \\\n    && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \\\n         build-essential curl git unzip gfortran \\\n         libgtk2.0-0 libgtk-3-0 libgbm-dev libnotify-dev libgconf-2-4 \\\n         libnss3 libxss1 libasound2 libxtst6 xauth xvfb \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/*\n\n\nRUN curl -f -o ~/miniconda.sh https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh\nRUN sh ~/miniconda.sh -b -p /opt/conda\nRUN rm ~/miniconda.sh\nRUN /opt/conda/bin/conda install -y python=${PYTHON_VERSION}\nRUN /opt/conda/bin/conda clean -ya\n\nENV PATH /opt/conda/bin:$PATH\n\nRUN conda install -y pytorch==${PYTORCH_VERSION} cpuonly -c pytorch -c conda-forge \\\n    && conda clean -y --all --force-pkgs-dirs\n\nRUN conda install -c conda-forge nodejs==16.13.0 \\\n    && conda clean --all --force-pkgs-dirs\n\nRUN conda list > conda_build.txt\n\n### Install Dash3D Requirements ###\nWORKDIR /tmp\nRUN npm install -g npm@8.5.4 && npm cache clean --force;\nCOPY package.json package-lock.json ./\nRUN npm install && npm cache clean --force;\n\nRUN pip install --no-cache-dir ninja setuptools==46.4.0 numpy==1.18.0\n"
}