diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/nvidiagameworks/kaolin/tools/linux/Dockerfile.base_cpuonly b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/nvidiagameworks/kaolin/tools/linux/Dockerfile.base_cpuonly/repaired.Dockerfile
index c3f79a4..20f531b 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/nvidiagameworks/kaolin/tools/linux/Dockerfile.base_cpuonly
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/nvidiagameworks/kaolin/tools/linux/Dockerfile.base_cpuonly/repaired.Dockerfile
@@ -1,5 +1,3 @@
-#ARG CUDA_VERSION=11.3.1
-#ARG CUDNN_VERSION=8
 #FROM nvidia/cuda:${CUDA_VERSION}-cudnn${CUDNN_VERSION}-devel-ubuntu18.04
 FROM ubuntu:18.04
 # used for cross-compilation in docker build
@@ -12,7 +10,7 @@ ENV PYTORCH_VERSION=${PYTORCH_VERSION}
 #RUN sed -i -e 's|^deb http://[^.]*[.]ubuntu[.]com/ubuntu|deb  https://urm.nvidia.com/artifactory/ubuntu-remote|' /etc/apt/sources.list \
 RUN echo "Acquire { https::Verify-Peer false }" > /etc/apt/apt.conf.d/99verify-peer.conf \
     && apt-get update \
-    && DEBIAN_FRONTEND=noninteractive apt-get install -y --allow-unauthenticated ca-certificates \
+    && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y --allow-unauthenticated ca-certificates \
     && rm /etc/apt/apt.conf.d/99verify-peer.conf \
     && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
          build-essential curl git unzip gfortran \
@@ -22,7 +20,7 @@ RUN echo "Acquire { https::Verify-Peer false }" > /etc/apt/apt.conf.d/99verify-p
     && rm -rf /var/lib/apt/lists/*
 
 
-RUN curl -o ~/miniconda.sh https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh
+RUN curl -f -o ~/miniconda.sh https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh
 RUN sh ~/miniconda.sh -b -p /opt/conda
 RUN rm ~/miniconda.sh
 RUN /opt/conda/bin/conda install -y python=${PYTHON_VERSION}
@@ -40,8 +38,8 @@ RUN conda list > conda_build.txt
 
 ### Install Dash3D Requirements ###
 WORKDIR /tmp
-RUN npm install -g npm@8.5.4
+RUN npm install -g npm@8.5.4 && npm cache clean --force;
 COPY package.json package-lock.json ./
-RUN npm install
+RUN npm install && npm cache clean --force;
 
-RUN pip install ninja setuptools==46.4.0 numpy==1.18.0
+RUN pip install --no-cache-dir ninja setuptools==46.4.0 numpy==1.18.0