{
  "startTime": 1674248252275,
  "endTime": 1674248252946,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 4,
        "columnEnd": 17
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 31
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG BASE_IMAGE\nFROM ${BASE_IMAGE}\n\nRUN if [ -f /etc/apt/sources.list.d/cuda.list ]; then \\\n        rm /etc/apt/sources.list.d/cuda.list; \\\n    fi \\\n    && if [ -f /etc/apt/sources.list.d/nvidia-ml.list ]; then \\\n        rm /etc/apt/sources.list.d/nvidia-ml.list; \\\n    fi\n\nWORKDIR /kaolin\n\nARG WHEEL_NAME\n\nCOPY ./package.json ./package-lock.json ./${WHEEL_NAME} ./\nCOPY ./examples ./examples\nCOPY ./tests ./tests\nCOPY ./tools ./tools\nRUN apt-get -y update \\\n    && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \\\n        libgl1-mesa-dev \\\n        libgles2-mesa-dev \\\n        libegl1-mesa-dev \\\n        git \\\n        pkg-config \\\n        libglvnd0 \\\n        libgl1 \\\n        libglx0 \\\n        libegl1 \\\n        libgles2 \\\n        libglvnd-dev \\\n        cmake \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/*\n\n\nENV PYTHONDONTWRITEBYTECODE=1\nENV PYTHONUNBUFFERED=1\n\n# for GLEW\nENV LD_LIBRARY_PATH /usr/lib64:$LD_LIBRARY_PATH\n\n# nvidia-container-runtime\n#ENV NVIDIA_VISIBLE_DEVICES all\nENV NVIDIA_DRIVER_CAPABILITIES compute,utility,graphics\n\n# Default pyopengl to EGL for good headless rendering support\nENV PYOPENGL_PLATFORM egl\n\n## Install Dash3D Requirements ###\nRUN conda install -c conda-forge nodejs==16.13.0 \\\n    && conda clean --all --force-pkgs-dirs\nRUN npm install -g npm@8.5.4 && npm cache clean --force;\nRUN npm install && npm cache clean --force;\n\nRUN pip install --no-cache-dir --upgrade pip && \\\n    pip install --no-cache-dir imageio imageio-ffmpeg\n\nRUN cd /tmp && \\\n    git clone https://github.com/NVlabs/nvdiffrast && \\\n    cd nvdiffrast && \\\n    cp ./docker/10_nvidia.json /usr/share/glvnd/egl_vendor.d/10_nvidia.json && \\\n    pip install --no-cache-dir .\n\nRUN pip install --no-cache-dir ./${WHEEL_NAME}\n"
}