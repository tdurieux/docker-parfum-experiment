diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/opstrace/opstrace/containers/ci/opstrace-ci.Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/opstrace/opstrace/containers/ci/opstrace-ci.Dockerfile/repaired.Dockerfile
index 0a02902..50bcd32 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/opstrace/opstrace/containers/ci/opstrace-ci.Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/opstrace/opstrace/containers/ci/opstrace-ci.Dockerfile/repaired.Dockerfile
@@ -17,15 +17,15 @@ FROM debian:buster-slim
 # - tree, because we love nature
 RUN apt-get update && apt-get install -y -q --no-install-recommends \
     uuid-runtime rsync curl gnupg2 git make jq moreutils netcat-openbsd \
-    build-essential gettext-base ca-certificates unzip less tree
+    build-essential gettext-base ca-certificates unzip less tree && rm -rf /var/lib/apt/lists/*;
 
-RUN apt-get install hub -y
+RUN apt-get install --no-install-recommends hub -y && rm -rf /var/lib/apt/lists/*;
 # gcloud CLI, for managing GCP
 RUN echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] http://packages.cloud.google.com/apt cloud-sdk main" | \
     tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
-RUN curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | \
+RUN curl -f https://packages.cloud.google.com/apt/doc/apt-key.gpg | \
     apt-key --keyring /usr/share/keyrings/cloud.google.gpg add -
-RUN apt-get update && apt-get install -y -q --no-install-recommends google-cloud-sdk
+RUN apt-get update && apt-get install -y -q --no-install-recommends google-cloud-sdk && rm -rf /var/lib/apt/lists/*;
 RUN apt-get -y autoclean
 
 RUN gcloud config set core/disable_usage_reporting true && \
@@ -33,15 +33,15 @@ RUN gcloud config set core/disable_usage_reporting true && \
     gcloud config set metrics/environment github_docker_image
 
 # Install kubectl, discover current stable version dynamically.
-RUN KVERSION=$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt) && \
+RUN KVERSION=$( curl -f -s https://storage.googleapis.com/kubernetes-release/release/stable.txt) && \
     echo "install kubectl ${KVERSION}" && \
-    curl -LO https://storage.googleapis.com/kubernetes-release/release/${KVERSION}/bin/linux/amd64/kubectl
+    curl -f -LO https://storage.googleapis.com/kubernetes-release/release/${KVERSION}/bin/linux/amd64/kubectl
 RUN chmod +x ./kubectl && mv ./kubectl /usr/local/bin/kubectl
 
 # AWS CLI, for fetching data from S3. Mount this into the container: ~/.aws
 # (the BK agent's home dir has AWS credentials set up for accessing our S3 BK
 # bucket.)
-RUN curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip" && \
+RUN curl -f "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip" && \
     unzip -q awscliv2.zip && \
     ./aws/install && \
     rm awscliv2.zip
@@ -60,7 +60,7 @@ ENV NODE_PATH=$NVM_DIR/versions/node/$NODE_VERSION/lib/node_modules
 ENV PATH=$NVM_DIR/versions/node/$NODE_VERSION/bin:$PATH
 
 # Moving target for now, on purpose.
-RUN npm install -g yarn
+RUN npm install -g yarn && npm cache clean --force;
 
 # Make build log have explicit confirmation of versions in use.
 RUN node --version
@@ -93,8 +93,8 @@ RUN curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/i
     sh -s -- -b /usr/local/bin v1.41.1
 
 # Set up markdownlint in the container image so that we can lint right away! :)
-RUN npm install -g markdownlint-cli@0.28.1
-RUN npm install -g prettier@2.3.2
+RUN npm install -g markdownlint-cli@0.28.1 && npm cache clean --force;
+RUN npm install -g prettier@2.3.2 && npm cache clean --force;
 
 RUN markdownlint --version
 RUN prettier --version