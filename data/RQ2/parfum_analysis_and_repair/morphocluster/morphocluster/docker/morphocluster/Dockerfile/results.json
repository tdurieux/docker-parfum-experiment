{
  "startTime": 1674255657426,
  "endTime": 1674255658119,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 46
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM mambaorg/micromamba\nWORKDIR /code\nUSER root\n\n# supervisor is required to run multiple processes in parallel\nRUN apt-get update --fix-missing && \\\n    apt-get install --no-install-recommends -y supervisor netcat rsync && \\\n    apt-get -qq -y --no-install-recommends install openssh-server && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/*\n\n# Setup SSH\nRUN mkdir /var/run/sshd\nRUN mkdir /root/.ssh && chmod 700 /root/.ssh\n\nCOPY environment*.yml /tmp\n\n# Install all required packages at this stage to avoid reinstalling them later when the code changes\nRUN --mount=type=cache,target=/opt/conda/pkg \\\n    micromamba config set always_copy true && \\\n    if [ -f \"/tmp/environment.yml\" ]; then \\\n    echo \"Using environment.yml...\" && \\\n    umask 0002 && micromamba install -n base -y -f /tmp/environment.yml;\\\n    elif [ -f \"/tmp/environment.default.yml\" ]; then \\\n    echo \"Using environment.default.yml...\" && \\\n    umask 0002 && micromamba install -n base -y -f /tmp/environment.default.yml; \\\n    fi\n\n# Activate environment for subsequent RUN commands:\nARG MAMBA_DOCKERFILE_ACTIVATE=1\n\n# Install the application\nCOPY versioneer.py setup.py setup.cfg MANIFEST.in README.rst ./\nCOPY tests ./tests\nCOPY morphocluster ./morphocluster\nCOPY migrations ./migrations\nRUN echo Installing packages... && \\\n    pip install --no-cache-dir -e .\n\n# Build frontend\nRUN cd morphocluster/frontend  && \\\n    echo Building frontend... && \\\n    echo NPM version: `npm --version` && \\\n    npm ci && \\\n    npm run build\n\n#COPY --from=build_frontend /frontend/dist morphocluster/frontend/dist\n\nCOPY docker/wait-for docker/morphocluster/run.sh docker/morphocluster/activate ./\nCOPY docker/morphocluster/supervisord.conf /etc/supervisor/conf.d/supervisord.conf\n\nRUN echo -e \"export FLASK_APP=morphocluster\\n\" >> ~/.bashrc\n\nCMD [\"/code/run.sh\"]"
}