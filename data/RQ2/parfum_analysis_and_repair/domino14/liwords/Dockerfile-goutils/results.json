{
  "startTime": 1674219231987,
  "endTime": 1674219232916,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 169
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 140
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 22,
        "columnEnd": 46
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 22,
        "columnEnd": 46
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM golang:latest AS gobuilder\n\n# protobuf executables:\n\nRUN apt-get update && apt-get install --no-install-recommends -y unzip && rm -rf /var/lib/apt/lists/*;\n\nENV PROTOC_VERSION 3.20.1\n\n# add protoc - pb release naming scheme is annoying\nENV ARCH=\"$(uname -m | sed 's/aarch64/aarch_64/g')\"\n\nRUN echo \"Detected arch ${ARCH}\"\nRUN echo \"Fetching from URL: https://github.com/protocolbuffers/protobuf/releases/download/v${PROTOC_VERSION}/protoc-${PROTOC_VERSION}-linux-$(eval echo ${ARCH}).zip\"\nRUN curl -f -L -o /tmp/protobuf.zip https://github.com/protocolbuffers/protobuf/releases/download/v${PROTOC_VERSION}/protoc-${PROTOC_VERSION}-linux-$(eval echo ${ARCH}).zip\nWORKDIR /tmp/\nRUN unzip protobuf.zip && cp /tmp/bin/protoc /opt && mv /tmp/include /opt\n\n# Install protoc-gen-go\nRUN go install github.com/golang/protobuf/protoc-gen-go@latest \\\n    && go install github.com/twitchtv/twirp/protoc-gen-twirp@latest\n\n# migrate:\n\nENV MIGRATE_VERSION v4.15.2\nENV MIGRATE_ARCH=\"$(case ${ARCH} in \\\"aarch_64\\\") echo \\\"arm64\\\" ;; \\\"x86_64\\\") echo \\\"amd64\\\";; *) echo \\\"invalid architecture\\\" ;; esac;)\"\n\nRUN echo \"Fetching from URL: https://github.com/golang-migrate/migrate/releases/download/${MIGRATE_VERSION}/migrate.linux-$(eval echo ${MIGRATE_ARCH}).tar.gz\"\n\nRUN curl -f -L https://github.com/golang-migrate/migrate/releases/download/${MIGRATE_VERSION}/migrate.linux-$(eval echo ${MIGRATE_ARCH}).tar.gz | tar xvz\n\nRUN mv /tmp/migrate /opt\n\nFROM node:latest\n\nWORKDIR /opt\nRUN npm install ts-protoc-gen && npm cache clean --force;\n\nCOPY --from=gobuilder /go/bin/protoc-gen-go /opt\nCOPY --from=gobuilder /go/bin/protoc-gen-twirp /opt\nCOPY --from=gobuilder /opt/protoc /opt\nCOPY --from=gobuilder /opt/include /opt/include\nCOPY --from=gobuilder /opt/migrate /opt\n\nENV PATH /opt:$PATH\nENV CODE_DIR /opt/code\nWORKDIR /opt/code/liwords"
}