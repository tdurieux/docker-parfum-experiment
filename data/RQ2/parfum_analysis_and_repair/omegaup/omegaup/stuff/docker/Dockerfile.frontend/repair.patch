diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/omegaup/omegaup/stuff/docker/Dockerfile.frontend b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/omegaup/omegaup/stuff/docker/Dockerfile.frontend/repaired.Dockerfile
index e4a0d76..ec93bee 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/omegaup/omegaup/stuff/docker/Dockerfile.frontend
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/omegaup/omegaup/stuff/docker/Dockerfile.frontend/repaired.Dockerfile
@@ -21,19 +21,19 @@ RUN apt-get update -y && \
         && \
     /usr/sbin/update-ca-certificates && \
     apt-get autoremove -y && \
-    apt-get clean
+    apt-get clean && rm -rf /var/lib/apt/lists/*;
 
 RUN curl -fsSL https://deb.nodesource.com/setup_14.x | bash - && \
-    apt-get install -y nodejs && \
-    curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - && \
-    echo "deb https://dl.yarnpkg.com/debian/ stable main" > /etc/apt/sources.list.d/yarn.list
+    apt-get install --no-install-recommends -y nodejs && \
+    curl -f -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - && \
+    echo "deb https://dl.yarnpkg.com/debian/ stable main" > /etc/apt/sources.list.d/yarn.list && rm -rf /var/lib/apt/lists/*;
 
 RUN apt-get update -y && \
     apt-get install --no-install-recommends -y nginx yarn nodejs && \
     apt-get autoremove -y && \
-    apt-get clean
+    apt-get clean && rm -rf /var/lib/apt/lists/*;
 
-RUN curl -sL https://getcomposer.org/download/2.1.14/composer.phar -o /usr/bin/composer && \
+RUN curl -f -sL https://getcomposer.org/download/2.1.14/composer.phar -o /usr/bin/composer && \
     chmod +x /usr/bin/composer
 
 RUN useradd --create-home --shell=/bin/bash ubuntu
@@ -43,7 +43,7 @@ WORKDIR /opt/omegaup
 ARG BRANCH=release
 ENV BRANCH=$BRANCH
 RUN git clone --branch=${BRANCH} --depth=1 --recurse-submodules --shallow-submodules https://github.com/omegaup/omegaup .
-RUN yarn install && yarn build
+RUN yarn install && yarn build && yarn cache clean;
 RUN composer install --no-dev --classmap-authoritative
 RUN printf "<?php\n\
 define('OMEGAUP_ENVIRONMENT', 'production');\n\
@@ -51,7 +51,7 @@ define('TEMPLATE_CACHE_DIR', '/var/lib/omegaup/templates');\n" > frontend/server
 RUN php frontend/server/cmd/CompileTemplatesCmd.php
 
 FROM alpine:latest AS frontend
-RUN apk add rsync
+RUN apk add --no-cache rsync
 RUN mkdir -p /var/lib/omegaup /opt/omegaup
 COPY --from=build /opt/omegaup /opt/omegaup
 COPY --from=build /var/lib/omegaup /var/lib/omegaup
@@ -63,7 +63,7 @@ RUN apt-get update -y && \
     apt-get install --no-install-recommends -y nginx ca-certificates && \
     /usr/sbin/update-ca-certificates && \
     apt-get autoremove -y && \
-    apt-get clean
+    apt-get clean && rm -rf /var/lib/apt/lists/*;
 
 RUN useradd --create-home --shell=/bin/bash ubuntu
 
@@ -89,7 +89,7 @@ RUN apt-get update -y && \
         && \
     /usr/sbin/update-ca-certificates && \
     echo 'deb http://apt.newrelic.com/debian/ newrelic non-free' > /etc/apt/sources.list.d/newrelic.list && \
-    curl -sL https://download.newrelic.com/548C16BF.gpg | apt-key add - && \
+    curl -f -sL https://download.newrelic.com/548C16BF.gpg | apt-key add - && \
     add-apt-repository ppa:ondrej/php && \
     apt-get update -y && \
     apt-get install --no-install-recommends -y \
@@ -107,9 +107,9 @@ RUN apt-get update -y && \
         php8.0-zip \
         && \
     apt-get autoremove -y && \
-    apt-get clean
+    apt-get clean && rm -rf /var/lib/apt/lists/*;
 
-RUN curl -sL https://github.com/omegaup/libinteractive/releases/download/v2.0.27/libinteractive.jar \
+RUN curl -f -sL https://github.com/omegaup/libinteractive/releases/download/v2.0.27/libinteractive.jar \
         -o /usr/share/java/libinteractive.jar
 
 RUN useradd --create-home --shell=/bin/bash ubuntu && \
@@ -141,7 +141,7 @@ RUN apt-get update -y && \
         python3-pip \
         && \
     apt-get autoremove -y && \
-    apt-get clean
+    apt-get clean && rm -rf /var/lib/apt/lists/*;
 
 COPY requirements.txt /tmp/
 RUN python3 -m pip install -r /tmp/requirements.txt && rm /tmp/requirements.txt