{
  "startTime": 1674253037179,
  "endTime": 1674253038341,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 87
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 91,
        "lineEnd": 91,
        "columnStart": 4,
        "columnEnd": 55
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 111,
        "lineEnd": 112,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 4,
        "columnEnd": 68
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 83,
        "lineEnd": 87,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 94,
        "lineEnd": 106,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 135,
        "lineEnd": 140,
        "columnStart": 4,
        "columnEnd": 19
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 17
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 53
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:focal AS build\n\nENV DEBIAN_FRONTEND=noninteractive\nRUN apt-get update -y && \\\n    apt-get install --no-install-recommends -y \\\n        software-properties-common \\\n        && \\\n    add-apt-repository ppa:ondrej/php && \\\n    apt-get update -y && \\\n    apt-get install --no-install-recommends -y \\\n        git \\\n        ca-certificates \\\n        gnupg2 \\\n        curl \\\n        php8.0-cli \\\n        php8.0-curl \\\n        php8.0-gmp \\\n        php8.0-mbstring \\\n        php8.0-zip \\\n        php8.0-xml \\\n        && \\\n    /usr/sbin/update-ca-certificates && \\\n    apt-get autoremove -y && \\\n    apt-get clean && rm -rf /var/lib/apt/lists/*;\n\nRUN curl -fsSL https://deb.nodesource.com/setup_14.x | bash - && \\\n    apt-get install --no-install-recommends -y nodejs && \\\n    curl -f -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - && \\\n    echo \"deb https://dl.yarnpkg.com/debian/ stable main\" > /etc/apt/sources.list.d/yarn.list && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get update -y && \\\n    apt-get install --no-install-recommends -y nginx yarn nodejs && \\\n    apt-get autoremove -y && \\\n    apt-get clean && rm -rf /var/lib/apt/lists/*;\n\nRUN curl -f -sL https://getcomposer.org/download/2.1.14/composer.phar -o /usr/bin/composer && \\\n    chmod +x /usr/bin/composer\n\nRUN useradd --create-home --shell=/bin/bash ubuntu\nRUN mkdir -p /opt/omegaup /var/lib/omegaup && chown -R ubuntu /opt/omegaup /var/lib/omegaup\nUSER ubuntu\nWORKDIR /opt/omegaup\nARG BRANCH=release\nENV BRANCH=$BRANCH\nRUN git clone --branch=${BRANCH} --depth=1 --recurse-submodules --shallow-submodules https://github.com/omegaup/omegaup .\nRUN yarn install && yarn build && yarn cache clean;\nRUN composer install --no-dev --classmap-authoritative\nRUN printf \"<?php\\n\\\ndefine('OMEGAUP_ENVIRONMENT', 'production');\\n\\\ndefine('TEMPLATE_CACHE_DIR', '/var/lib/omegaup/templates');\\n\" > frontend/server/config.php\nRUN php frontend/server/cmd/CompileTemplatesCmd.php\n\nFROM alpine:latest AS frontend\nRUN apk add --no-cache rsync\nRUN mkdir -p /var/lib/omegaup /opt/omegaup\nCOPY --from=build /opt/omegaup /opt/omegaup\nCOPY --from=build /var/lib/omegaup /var/lib/omegaup\n\nFROM ubuntu:focal AS nginx\n\nENV DEBIAN_FRONTEND=noninteractive\nRUN apt-get update -y && \\\n    apt-get install --no-install-recommends -y nginx ca-certificates && \\\n    /usr/sbin/update-ca-certificates && \\\n    apt-get autoremove -y && \\\n    apt-get clean && rm -rf /var/lib/apt/lists/*;\n\nRUN useradd --create-home --shell=/bin/bash ubuntu\n\nRUN mkdir -p /etc/omegaup/frontend\nRUN mkdir -p /var/log/omegaup && chown -R ubuntu /var/log/omegaup\n\nUSER ubuntu\nWORKDIR /opt/omegaup\n\nEXPOSE 8001\n\nCMD [\"/usr/sbin/nginx\"]\n\nFROM ubuntu:focal AS php\n\nENV DEBIAN_FRONTEND=noninteractive\nRUN apt-get update -y && \\\n    apt-get install --no-install-recommends -y \\\n        curl \\\n        gnupg \\\n        ca-certificates \\\n        software-properties-common \\\n        && \\\n    /usr/sbin/update-ca-certificates && \\\n    echo 'deb http://apt.newrelic.com/debian/ newrelic non-free' > /etc/apt/sources.list.d/newrelic.list && \\\n    curl -f -sL https://download.newrelic.com/548C16BF.gpg | apt-key add - && \\\n    add-apt-repository ppa:ondrej/php && \\\n    apt-get update -y && \\\n    apt-get install --no-install-recommends -y \\\n        newrelic-php5 \\\n        openjdk-16-jre-headless \\\n        php8.0-apcu \\\n        php8.0-curl \\\n        php8.0-fpm \\\n        php8.0-gmp \\\n        php8.0-mbstring \\\n        php8.0-mysql \\\n        php8.0-opcache \\\n        php8.0-redis \\\n        php8.0-xml \\\n        php8.0-zip \\\n        && \\\n    apt-get autoremove -y && \\\n    apt-get clean && rm -rf /var/lib/apt/lists/*;\n\nRUN curl -f -sL https://github.com/omegaup/libinteractive/releases/download/v2.0.27/libinteractive.jar \\\n        -o /usr/share/java/libinteractive.jar\n\nRUN useradd --create-home --shell=/bin/bash ubuntu && \\\n    mkdir -p /etc/omegaup/frontend && \\\n    mkdir -p /var/log/omegaup /var/lib/omegaup /opt/omegaup && \\\n    chown -R ubuntu /var/log/omegaup /var/lib/omegaup /opt/omegaup\n\nRUN rm -rf /etc/php/8.0/fpm/pool.d/\n\nUSER ubuntu\nWORKDIR /opt/omegaup\n\n# Override stop signal to stop process gracefully\n# # https://github.com/php/php-src/blob/17baa87faddc2550def3ae7314236826bc1b1398/sapi/fpm/php-fpm.8.in#L163\nSTOPSIGNAL SIGQUIT\nEXPOSE 9001\n\nCMD [\"php-fpm8.0\", \"--nodaemonize\", \"--force-stderr\"]\n\nFROM ubuntu:focal as frontend-sidecar\n\nENV DEBIAN_FRONTEND=noninteractive\nRUN apt-get update -y && \\\n    apt-get install --no-install-recommends -y \\\n        ca-certificates \\\n        curl \\\n        git \\\n        mysql-client-core-8.0 \\\n        python3-pip \\\n        && \\\n    apt-get autoremove -y && \\\n    apt-get clean && rm -rf /var/lib/apt/lists/*;\n\nCOPY requirements.txt /tmp/\nRUN python3 -m pip install -r /tmp/requirements.txt && rm /tmp/requirements.txt\n\nRUN useradd --create-home --shell=/bin/bash ubuntu && \\\n    mkdir -p /etc/omegaup/frontend && \\\n    mkdir -p /var/log/omegaup && chown -R ubuntu /var/log/omegaup && \\\n    mkdir /opt/omegaup && \\\n    chown -R ubuntu /opt/omegaup\n\nUSER ubuntu\nWORKDIR /opt/omegaup\n"
}