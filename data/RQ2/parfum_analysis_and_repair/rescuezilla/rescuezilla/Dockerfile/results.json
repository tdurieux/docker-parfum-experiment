{
  "startTime": 1674248700288,
  "endTime": 1674248701501,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 35,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 35,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 35,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 34
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Typically, constructing a Linux live image relies on files from the host system. This Dockerfile,\n# a version-controlled mechanism to produce a host system for live image builds.\n\n# Note: the host system Ubuntu version (below) is defined separately from the version of the\n# generated Ubuntu image.\nARG CODENAME=focal\nFROM ubuntu:${CODENAME}\n# Define the Ubuntu code name again because Docker clears the argument after the FROM command.\nARG CODENAME=focal\n\n# Copy the apt repository mirror list into the Docker image.\n#\n# For increased transfer rates, consider selecting a mirror geographically\n# closer mirror.\n#\n# Note: After the support window for a specific release ends, the packages are\n# moved to the 'old-releases' URL, which makes substitution becomes mandatory\n# in-order to build older releases from scratch.\n#\nRUN echo $CODENAME\nCOPY src/livecd/chroot/etc/apt/sources.list /etc/apt/sources.list\n# Copy the apt-preferences file to ensure backports and proposed repositories are never automatically selected.\nCOPY \"src/livecd/chroot/etc/apt/preferences.d/89_CODENAME_SUBSTITUTE-backports_default\" \"/etc/apt/preferences.d/89_$CODENAME-backports_default\"\nCOPY \"src/livecd/chroot/etc/apt/preferences.d/90_CODENAME_SUBSTITUTE-proposed_default\" \"/etc/apt/preferences.d/90_$CODENAME-proposed_default\"\nRUN sed --in-place \"s*CODENAME_SUBSTITUTE*$CODENAME*g\" \"/etc/apt/sources.list\"\nRUN sed --in-place \"s*CODENAME_SUBSTITUTE*$CODENAME*g\" /etc/apt/preferences.d/89_${CODENAME}-backports_default\nRUN sed --in-place \"s*CODENAME_SUBSTITUTE*$CODENAME*g\" /etc/apt/preferences.d/90_${CODENAME}-proposed_default\n\n# Ensure all Dockerfile package installation operations are non-interactive, DEBIAN_FRONTEND=noninteractive is insufficient [1]\n# [1] https://github.com/phusion/baseimage-docker/issues/58\nRUN echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections\n\n# Refresh the apt package metadata\nRUN apt-get update && apt-get install --no-install-recommends --yes \\\n\n                          make rsync sudo debootstrap squashfs-tools xorriso memtest86+ git gettext \\\n                          dosfstools mtools checkinstall cmake \\\n                          shim-signed grub-efi-amd64-signed grub-efi-amd64-bin grub-efi-ia32-bin grub-pc-bin \\\n                          devscripts debhelper ccache \\\n\n                          libtool-bin gawk pkg-config comerr-dev docbook-xsl e2fslibs-dev fuse \\\n                          libaal-dev libblkid-dev libbsd-dev libext2fs-dev libncurses5-dev \\\n                          libncursesw5-dev libntfs-3g883 libreadline-gplv2-dev libreadline5 \\\n                          libreiser4-dev libtinfo-dev libxslt1.1 nilfs-tools ntfs-3g ntfs-3g-dev \\\n                          quilt sgml-base uuid-dev vmfs-tools xfslibs-dev xfsprogs xml-core \\\n                          xsltproc \\\n\n                          python3-gi libgtk-3-dev python3-whichcraft python3-babel \\\n\n                          tmux vim && rm -rf /var/lib/apt/lists/*;\n\n# Restore interactivity of package installation within Docker\nRUN echo 'debconf debconf/frontend select Dialog' | debconf-set-selections\n"
}