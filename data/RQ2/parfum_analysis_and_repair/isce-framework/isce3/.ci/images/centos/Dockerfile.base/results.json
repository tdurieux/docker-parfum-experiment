{
  "startTime": 1674254211778,
  "endTime": 1674254212743,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 99
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 113
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 121
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 96
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "gpgUseHaPools",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 96
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nvidia/cuda:9.2-runtime-centos7\n\nMAINTAINER Piyush Agram <piyush.agram@jpl.nasa.gov>\n\n# Set default UID and GID\nENV USER_ID 1000\nENV GROUP_ID 1000\n\n# Set an encoding to make things work smoothly.\nENV LANG en_US.UTF-8\n\n# Set gosu version\nENV GOSU_VERSION=1.10\n\n# create user and install latest miniconda\nCOPY requirements.txt.base /tmp/requirements.txt\nCOPY requirements.txt.forge /tmp/requirements_forge.txt\nRUN set -ex \\\n && groupadd -r conda -g $GROUP_ID \\\n && useradd -u $USER_ID -r -g conda -d /home/conda -s /bin/bash -m conda \\\n && chmod 755 /home/conda \\\n && echo 'conda ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers \\\n && yum update -y \\\n && yum install -y \\\n      wget \\\n      curl \\\n      sudo \\\n      bzip2 \\\n      zip \\\n      centos-release-scl-rh \\\n      yum-utils \\\n && yum update -y \\\n && yum clean all \\\n && curl -f -sSL https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -o miniconda.sh \\\n && bash miniconda.sh -b -p /opt/conda \\\n && rm miniconda.sh \\\n && touch /opt/conda/conda-meta/pinned \\\n && export PATH=/opt/conda/bin:$PATH \\\n && conda config --set show_channel_urls True \\\n && conda update --all --yes \\\n && conda install --yes --file /tmp/requirements.txt \\\n && conda install --yes --channel conda-forge --file /tmp/requirements_forge.txt \\\n && gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 \\\n && curl -f -o /usr/local/bin/gosu -SL \"https://github.com/tianon/gosu/releases/download/${GOSU_VERSION}/gosu-amd64\" \\\n && curl -f -o /usr/local/bin/gosu.asc -SL \"https://github.com/tianon/gosu/releases/download/${GOSU_VERSION}/gosu-amd64.asc\" \\\n && gpg --batch --verify /usr/local/bin/gosu.asc \\\n && rm /usr/local/bin/gosu.asc \\\n && rm -r /root/.gnupg/ \\\n && chmod +x /usr/local/bin/gosu \\\n && chmod u+s /usr/local/bin/gosu \\\n && conda clean -tipsy \\\n && rm -rf /opt/conda/pkgs \\\n && rm -rf /var/cache/yum \\\n && rm /tmp/requirements.txt \\\n && rm /tmp/requirements_forge.txt\n\n# Add a file for users to source to activate the `conda`\n# environment `root` and the devtoolset compiler. Also\n# add a file that wraps that for use with the `ENTRYPOINT`.\nCOPY entrypoint /opt/docker/bin/entrypoint\nCOPY entrypoint_source.conda /opt/docker/bin/entrypoint_source.conda\nCOPY entrypoint_source.base /opt/docker/bin/entrypoint_source\n\n# set default user and workdir\nUSER conda\nWORKDIR /home/conda\n\n# Activate the `conda` environment `root` and the devtoolset compiler.\n# Provide a default command (`bash`), which will start if the user doesn't specify one.\nENTRYPOINT [ \"/opt/docker/bin/entrypoint\" ]\nCMD [ \"/bin/bash\" ]\n"
}