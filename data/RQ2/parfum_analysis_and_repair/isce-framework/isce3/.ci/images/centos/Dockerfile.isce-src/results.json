{
  "startTime": 1674253319428,
  "endTime": 1674253320369,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 5,
        "columnEnd": 125
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 12,
        "lineEnd": 14,
        "columnStart": 9,
        "columnEnd": 109
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 26,
        "lineEnd": 27,
        "columnStart": 10,
        "columnEnd": 36
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 5,
        "columnEnd": 49
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nisar/dev:latest\n\n# Set an encoding to make things work smoothly.\nENV LANG en_US.UTF-8\n\n# Set ISCE repo\nENV ISCE_ORG ericmg\nENV ISCE_REPO github-fn.jpl.nasa.gov/${ISCE_ORG}/isce.git\n\n# install tools for RPM generation\nRUN set -ex \\\n && sudo yum update -y \\\n && sudo yum install -y \\\n      make ruby-devel rpm-build rubygems \\\n      which autoconf automake bison libffi-devel libtool readline-devel sqlite-devel zlib-devel openssl-devel \\\n && command curl -sSL https://rvm.io/pkuczynski.asc | gpg2 --import - \\\n && curl -f -L get.rvm.io | bash -s stable \\\n && source /home/conda/.rvm/scripts/rvm \\\n && sudo /home/conda/.rvm/bin/rvm install 2.3.0 \\\n && export PATH=/home/conda/.rvm/gems/ruby-2.3.0/bin:/home/conda/.rvm/gems/ruby-2.3.0@global/wrappers/:$PATH \\\n && sudo gem install --no-ri --no-rdoc fpm && rm -rf /var/cache/yum\n\n# install doxygen and sphinx for doc generation;\n# install valgrind for memory leak check\nRUN set -ex \\\n  && source /opt/docker/bin/entrypoint_source \\\n  && sudo yum install -y doxygen doxygen-latex texlive texlive-*.noarch \\\n       ghostscript graphviz valgrind \\\n  && sudo conda install --yes sphinx \\\n  && mkdir -p /home/conda/texmf/tex/latex/commonstuff \\\n  && wget https://mirrors.ctan.org/macros/latex/contrib/anyfontsize/anyfontsize.sty -P /home/conda/texmf/tex/latex/commonstuff && rm -rf /var/cache/yum\n\n# install cppcheck for C++ code analysis\nRUN set -ex \\\n  && source /opt/docker/bin/entrypoint_source \\\n  && mkdir ~/tmp \\\n  && wget -q --no-check-certificate -O ~/tmp/cppcheck-1.87.tar.gz https://github.com/danmar/cppcheck/archive/1.87.tar.gz \\\n  && tar -zxf ~/tmp/cppcheck-1.87.tar.gz -C ~/tmp \\\n  && cd ~/tmp/cppcheck-1.87 \\\n  && make SRCDIR=build CFGDIR=cfg HAVE_RULES=yes CXXFLAGS=\"-O2 -DNDEBUG -Wall -Wno-sign-compare -Wno-unused-function\" && rm ~/tmp/cppcheck-1.87.tar.gz\n\n# copy repo\nCOPY . isce\n\n# build ISCE\nRUN set -ex \\\n && source /opt/docker/bin/entrypoint_source \\\n && cd ~ \\\n && mkdir build \\\n && mkdir build/valgrind \\\n && cd build \\\n && cmake -DCMAKE_INSTALL_PREFIX:PATH=/opt/isce -DWITH_CUDA=ON \\\n      -DMEMORYCHECK_COMMAND_OPTIONS=\"--trace-children=yes --leak-check=full --dsymutil=yes --track-origins=yes --xml=yes --xml-file=/home/conda/build/valgrind/memcheck.%p.xml\" \\\n      -DISCE_CUDA_ARCHS=3.7 \\\n      -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=true ../isce \\\n && make -j`nproc` VERBOSE=1 \\\n && sudo mkdir /opt/isce \\\n && sudo make install \\\n && ~/tmp/cppcheck-1.87/cppcheck --std=c++14 --enable=all --inconclusive --force --inline-suppr --xml --xml-version=2 /home/conda/isce/cxx 2> cppcheck.xml\n"
}