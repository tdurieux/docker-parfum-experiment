{
  "startTime": 1674252727063,
  "endTime": 1674252728038,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 24,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 81
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 24,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 81
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 24,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 81
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "## -*- docker-image-name: \"isce3:hirsute-dev\" -*-\n\n# based on ubuntu\nFROM ubuntu:hirsute\n\n# set up some build variables\nARG img=hirsute/dev\nARG imghome=.mm/docker/${img}\n# locations\nARG prefix=/usr/local\nARG srcdir=${prefix}/src\n\n# environment\n# colorize (for fun)\nENV TERM=xterm-256color\n# set up the dynamic linker path\nENV LD_LIBRARY_PATH=${prefix}/lib\n\n# update the package repository\nRUN apt update -y && DEBIAN_FRONTEND=noninteractive \\\n    apt --no-install-recommends install -y \\\n    git vim unzip zip \\\n    openssh-server \\\n    g++ gfortran make cmake googletest \\\n    libeigen3-dev \\\n    libfftw3-dev libfftw3-double3 libfftw3-single3 \\\n    libhdf5-openmpi-dev \\\n    libgdal-dev \\\n    libgsl-dev \\\n    libgtest-dev \\\n    libpq-dev \\\n    npm \\\n    nvidia-cuda-toolkit \\\n    python3 python3-dev \\\n    python3-distutils python3-gdal python3-h5py python3-numpy python3-pybind11 python3-pip \\\n    python3-pytest python3-ruamel.yaml python3-scipy python3-shapely python3-yaml && rm -rf /var/lib/apt/lists/*; # get the latest\nRUN apt dist-upgrade -y\n\n# install the base software stack\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# no package for yamale\nRUN pip3 install --no-cache-dir yamale\n\n# set up the interactive environment\n# go home\nWORKDIR /root\n# copy the keybindings setup\nCOPY ${imghome}/inputrc .inputrc\n# copy and prep the shell startup file\nCOPY ${imghome}/bashrc bashrc.in\nRUN sed \\\n    -e \"s:@SRCDIR@:${srcdir}:g\" \\\n    bashrc.in > .bashrc\n# copy and prep the prompt\nCOPY ${imghome}/prompt.py prompt.py.in\nRUN sed \\\n    -e \"s:@INSTANCE@:${img}:g\" \\\n    prompt.py.in > prompt.py\n# the pyre configuration directory\nWORKDIR /root/.pyre\n# copy and prep the {mm} coniguration file\nCOPY ${imghome}/mm.yaml mm.yaml.in\nRUN sed \\\n    -e \"s:@PREFIX@:${prefix}:g\" \\\n    mm.yaml.in > mm.yaml\n# configure mm\nWORKDIR /root/.mm\n# copy and prep the configuration file\nCOPY ${imghome}/config.mm config.mm\n\n# go to the source directory\nWORKDIR ${srcdir}\n\n# end of file\n"
}