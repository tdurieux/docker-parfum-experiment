{
  "startTime": 1674249304535,
  "endTime": 1674249305809,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 78,
        "columnEnd": 137
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 163
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 2,
        "columnEnd": 103
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 25,
        "lineEnd": 30,
        "columnStart": 22,
        "columnEnd": 10
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 23,
        "columnEnd": 46
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 23,
        "columnEnd": 83
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 22,
        "columnEnd": 52
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 2,
        "columnEnd": 103
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 22,
        "columnEnd": 71
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 25,
        "lineEnd": 30,
        "columnStart": 22,
        "columnEnd": 10
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 23,
        "columnEnd": 46
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 23,
        "columnEnd": 83
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 22,
        "columnEnd": 52
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Ubuntu 20.04 focal-20210119\nFROM ubuntu:focal-20210119\n\n# Update package list.\nENV DEBIAN_FRONTEND=noninteractive\n\n# Set up the locale.\nRUN apt-get update && \\\n  apt-get install --no-install-recommends -y locales openssh-sftp-server openssh-server xvfb libfontconfig libmariadbclient-dev && \\\n  echo \"en_US.UTF-8 UTF-8\" >> /etc/locale.gen && \\\n  dpkg-reconfigure locales && \\\n  update-locale LANG=en_US.UTF-8 && rm -rf /var/lib/apt/lists/*;\nENV LANG=en_US.UTF-8\nENV LC_ALL=en_US.UTF-8\nENV LANGUAGE=en_US:en\n\nRUN echo \"root:root\" | chpasswd && \\\n  mkdir /var/run/sshd\n\n# Set up the timezone.\nRUN apt-get update && apt-get install -y --no-install-recommends tzdata && \\\n  ln -fs /usr/share/zoneinfo/UTC /etc/localtime && \\\n  dpkg-reconfigure tzdata && rm -rf /var/lib/apt/lists/*;\n\n# Install GovReady-Q prerequisites.\nRUN apt-get update && apt-get -y --no-install-recommends install \\\n  unzip git curl jq \\\n  python3 python3-pip \\\n  python3-yaml \\\n  graphviz pandoc \\\n  gunicorn && rm -rf /var/lib/apt/lists/*;\n\nENV CHROME_VERSION \"google-chrome-stable\"\nRUN sed -i -- 's&deb http://deb.debian.org/debian jessie-updates main&#deb http://deb.debian.org/debian jessie-updates main&g' /etc/apt/sources.list \\\n  && apt-get update && apt-get install --no-install-recommends wget -y && rm -rf /var/lib/apt/lists/*;\nENV CHROME_VERSION \"google-chrome-stable\"\nRUN wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - \\\n  && echo \"deb http://dl.google.com/linux/chrome/deb/ stable main\" >> /etc/apt/sources.list \\\n  && apt-get update && apt-get -qqy --no-install-recommends install ${CHROME_VERSION:-google-chrome-stable} && rm -rf /var/lib/apt/lists/*;\n\n# Chromium for Headless Selenium tests\nRUN wget -O /tmp/chromedriver.zip https://chromedriver.storage.googleapis.com/$( curl -f -sS chromedriver.storage.googleapis.com/LATEST_RELEASE)/chromedriver_linux64.zip \\\n    && unzip /tmp/chromedriver.zip chromedriver -d /usr/local/bin/\nENV DISPLAY=:99\n\n# Put the Python source code here.\nWORKDIR /usr/src/app\n\nRUN apt-get update && apt-get install --no-install-recommends -y wkhtmltopdf; rm -rf /var/lib/apt/lists/*;\n\n# Upgrade pip to version 20.1+ - IMPORTANT\nRUN python3 -m pip install --upgrade pip\nRUN pip3 install --no-cache-dir ipdb\n\n# This directory must be present for the AppSource created by our\n# first_run script. The directory only has something in it if\n# the container is launched with --mount.\n# --mount type=bind,source=\"$(pwd)\",dst=/mnt/q-files-host\nRUN mkdir -p /mnt/q-files-host\n"
}