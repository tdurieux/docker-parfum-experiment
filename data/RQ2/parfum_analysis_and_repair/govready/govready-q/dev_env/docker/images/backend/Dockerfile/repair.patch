diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/govready/govready-q/dev_env/docker/images/backend/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/govready/govready-q/dev_env/docker/images/backend/Dockerfile/repaired.Dockerfile
index 05c43c4..1912add 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/govready/govready-q/dev_env/docker/images/backend/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/govready/govready-q/dev_env/docker/images/backend/Dockerfile/repaired.Dockerfile
@@ -6,10 +6,10 @@ ENV DEBIAN_FRONTEND=noninteractive
 
 # Set up the locale.
 RUN apt-get update && \
-  apt-get install -y locales openssh-sftp-server openssh-server xvfb libfontconfig libmariadbclient-dev && \
+  apt-get install --no-install-recommends -y locales openssh-sftp-server openssh-server xvfb libfontconfig libmariadbclient-dev && \
   echo "en_US.UTF-8 UTF-8" >> /etc/locale.gen && \
   dpkg-reconfigure locales && \
-  update-locale LANG=en_US.UTF-8
+  update-locale LANG=en_US.UTF-8 && rm -rf /var/lib/apt/lists/*;
 ENV LANG=en_US.UTF-8
 ENV LC_ALL=en_US.UTF-8
 ENV LANGUAGE=en_US:en
@@ -20,37 +20,37 @@ RUN echo "root:root" | chpasswd && \
 # Set up the timezone.
 RUN apt-get update && apt-get install -y --no-install-recommends tzdata && \
   ln -fs /usr/share/zoneinfo/UTC /etc/localtime && \
-  dpkg-reconfigure tzdata
+  dpkg-reconfigure tzdata && rm -rf /var/lib/apt/lists/*;
 
 # Install GovReady-Q prerequisites.
-RUN apt-get update && apt-get -y install \
+RUN apt-get update && apt-get -y --no-install-recommends install \
   unzip git curl jq \
   python3 python3-pip \
   python3-yaml \
   graphviz pandoc \
-  gunicorn
+  gunicorn && rm -rf /var/lib/apt/lists/*;
 
 ENV CHROME_VERSION "google-chrome-stable"
 RUN sed -i -- 's&deb http://deb.debian.org/debian jessie-updates main&#deb http://deb.debian.org/debian jessie-updates main&g' /etc/apt/sources.list \
-  && apt-get update && apt-get install wget -y
+  && apt-get update && apt-get install --no-install-recommends wget -y && rm -rf /var/lib/apt/lists/*;
 ENV CHROME_VERSION "google-chrome-stable"
 RUN wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - \
   && echo "deb http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list \
-  && apt-get update && apt-get -qqy install ${CHROME_VERSION:-google-chrome-stable}
+  && apt-get update && apt-get -qqy --no-install-recommends install ${CHROME_VERSION:-google-chrome-stable} && rm -rf /var/lib/apt/lists/*;
 
 # Chromium for Headless Selenium tests
-RUN wget -O /tmp/chromedriver.zip http://chromedriver.storage.googleapis.com/`curl -sS chromedriver.storage.googleapis.com/LATEST_RELEASE`/chromedriver_linux64.zip \
+RUN wget -O /tmp/chromedriver.zip https://chromedriver.storage.googleapis.com/$( curl -f -sS chromedriver.storage.googleapis.com/LATEST_RELEASE)/chromedriver_linux64.zip \
     && unzip /tmp/chromedriver.zip chromedriver -d /usr/local/bin/
 ENV DISPLAY=:99
 
 # Put the Python source code here.
 WORKDIR /usr/src/app
 
-RUN apt-get update && apt-get install -y wkhtmltopdf;
+RUN apt-get update && apt-get install --no-install-recommends -y wkhtmltopdf; rm -rf /var/lib/apt/lists/*;
 
 # Upgrade pip to version 20.1+ - IMPORTANT
 RUN python3 -m pip install --upgrade pip
-RUN pip3 install ipdb
+RUN pip3 install --no-cache-dir ipdb
 
 # This directory must be present for the AppSource created by our
 # first_run script. The directory only has something in it if