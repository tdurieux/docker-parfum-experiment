{
  "startTime": 1674218478391,
  "endTime": 1674218479358,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 117,
        "lineEnd": 117,
        "columnStart": 7,
        "columnEnd": 25
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:20.04 as devcontainer\n\nRUN set -x \\\n    && sed -i.bak -r 's!(deb|deb-src) \\S+!\\1 mirror://mirrors.ubuntu.com/mirrors.txt!' /etc/apt/sources.list\n\nRUN set -x \\\n    && apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n        ca-certificates \\\n    && apt-get clean && rm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*\n\nRUN set -x \\\n    && apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n        tzdata \\\n    && apt-get clean && rm -rf /var/cache/apt/archives/* /var/lib/apt/lists/* \\\n    && ln -sf /usr/share/zoneinfo/Asia/Tokyo /etc/localtime \\\n    && echo 'Asia/Tokyo' >/etc/timezone\n\n# create vscode user\nRUN set -x \\\n    && apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n        sudo \\\n    && apt-get clean && rm -rf /var/cache/apt/archives/* /var/lib/apt/lists/* \\\n    && echo \"vscode ALL=(ALL) NOPASSWD:ALL\" >>/etc/sudoers.d/ALL \\\n    && groupadd \\\n        --gid 5000 \\\n        vscode \\\n    && useradd \\\n        --uid 5000 \\\n        --gid 5000 \\\n        --home-dir /home/vscode \\\n        --create-home \\\n        --shell /bin/bash \\\n        vscode\n\n# vscode extensions cache\n# https://code.visualstudio.com/docs/remote/containers-advanced#_avoiding-extension-reinstalls-on-container-rebuild\nRUN set -x \\\n    && mkdir -p /home/vscode/.vscode-server/extensions /home/vscode/.vscode-server-insiders \\\n    && chown -R vscode:vscode /home/vscode/.vscode-server /home/vscode/.vscode-server-insiders \\\n    && ln -s /home/vscode/.vscode-server/extensions /home/vscode/.vscode-server-insiders/extensions\n\n# common tools\nRUN set -x \\\n    && apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n        bash-completion \\\n        curl \\\n        git \\\n        gnupg2 \\\n        iputils-ping \\\n        jq \\\n        less \\\n        make \\\n        net-tools \\\n        openssh-client \\\n        tar \\\n        time \\\n        unzip \\\n        xz-utils \\\n        zip \\\n    && apt-get clean && rm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*\n\n# docker\nRUN set -x \\\n    && apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n        apt-transport-https \\\n        ca-certificates \\\n        curl \\\n        gnupg-agent \\\n        software-properties-common \\\n    && curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add - \\\n    && add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\" \\\n    && apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n        docker-ce-cli \\\n    && apt-get clean && rm -rf /var/cache/apt/archives/* /var/lib/apt/lists/* \\\n    && groupadd --gid 999 docker \\\n    && usermod -aG docker vscode\n\n# docker compose\nARG COMPOSE_VERSION=1.27.4\nRUN set -x \\\n    && apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n        curl \\\n    && apt-get clean && rm -rf /var/cache/apt/archives/* /var/lib/apt/lists/* \\\n    && curl -fsSL \"https://github.com/docker/compose/releases/download/${COMPOSE_VERSION}/docker-compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-compose \\\n    && chmod +x /usr/local/bin/docker-compose \\\n    && curl -fsSL -o /etc/bash_completion.d/docker-compose \"https://raw.githubusercontent.com/docker/compose/${COMPOSE_VERSION}/contrib/completion/bash/docker-compose\"\n\n# docker / docker-compose in devcontainer\nRUN set -x \\\n    && mkdir -p /usr/local/devcontainer-tool/bin \\\n    && curl -fsSL -o /usr/local/devcontainer-tool/bin/docker https://github.com/thamaji/devcontainer-docker/releases/download/v1.0.2/docker \\\n    && chmod +x /usr/local/devcontainer-tool/bin/docker \\\n    && curl -fsSL -o /usr/local/devcontainer-tool/bin/docker-compose https://github.com/thamaji/devcontainer-compose/releases/download/v1.0.3/docker-compose \\\n    && chmod +x /usr/local/devcontainer-tool/bin/docker-compose\nENV PATH=/usr/local/devcontainer-tool/bin:${PATH}\n\n# python3.9\nRUN set -x \\\n    && apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n        python3.9 \\\n        python3.9-dev \\\n        python3-pip \\\n    && apt-get clean && rm -rf /var/cache/apt/archives/* /var/lib/apt/lists/* \\\n    && ln -s $(which python3.9) /usr/local/bin/python\nENV PIP_DEFAULT_TIMEOUT=100\n\n# poetry\nRUN set -x \\\n    && python -m pip install -U pip setuptools \\\n    && pip install --no-cache-dir poetry \\\n    && sudo -u vscode -i poetry config virtualenvs.in-project true\n\n# fix poetry issue (see: https://github.com/python-poetry/poetry/issues/221)\nRUN set -x \\\n    && apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n        language-pack-en \\\n    && apt-get clean && rm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*\nENV LC_ALL=C.UTF-8\n\nUSER vscode\n\nADD entrypoint.sh /entrypoint.sh\nENTRYPOINT [ \"bash\", \"-eux\", \"/entrypoint.sh\" ]\n"
}