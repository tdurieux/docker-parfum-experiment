{
  "startTime": 1674250107785,
  "endTime": 1674250108680,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 21,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 17
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright 2017 Telstra Open Source\n#\n#   Licensed under the Apache License, Version 2.0 (the \"License\");\n#   you may not use this file except in compliance with the License.\n#   You may obtain a copy of the License at\n#\n#       http://www.apache.org/licenses/LICENSE-2.0\n#\n#   Unless required by applicable law or agreed to in writing, software\n#   distributed under the License is distributed on an \"AS IS\" BASIS,\n#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#   See the License for the specific language governing permissions and\n#   limitations under the License.\n#\n\nARG base_image=kilda/storm:latest\nFROM ${base_image}\n\nENV DEBIAN_FRONTEND noninteractive\n\nRUN \\\n    pip \\\n        install --no-cache-dir \\\n            kafka && \\\n    echo \"PATH=$PATH:/opt/storm/bin\" >> ~/.bashrc\n\nWORKDIR /app\nADD wfm/app /app\n\n# Main config\nCOPY BUILD/base-storm-topology/resources/topology.properties /app/\nRUN grep \"blue.green.mode\" /app/topology.properties # Debug to check that 'stable' images use 'blue', 'latest' - 'green'\n\n\n\n#connecteddevices\nCOPY BUILD/connecteddevices-storm-topology/libs/*               /app/connecteddevices-storm-topology/libs/\nCOPY BUILD/connecteddevices-storm-topology/build.gradle         /app/connecteddevices-storm-topology/\nCOPY BUILD/connecteddevices-storm-topology/resources/connecteddevices-topology.yaml\t    /app/connecteddevices-storm-topology/topology-definition.yaml\n\n\n\n#floodlightrouter\nCOPY BUILD/floodlightrouter-storm-topology/libs/*               /app/floodlightrouter-storm-topology/libs/\nCOPY BUILD/floodlightrouter-storm-topology/build.gradle         /app/floodlightrouter-storm-topology/\nCOPY BUILD/floodlightrouter-storm-topology/resources/floodlightrouter-topology.yaml\t    /app/floodlightrouter-storm-topology/topology-definition.yaml\n\n\n\n#flowhs\nCOPY BUILD/flowhs-storm-topology/libs/*                         /app/flowhs-storm-topology/libs/\nCOPY BUILD/flowhs-storm-topology/build.gradle                   /app/flowhs-storm-topology/\nCOPY BUILD/flowhs-storm-topology/resources/flowhs-topology.yaml\t    /app/flowhs-storm-topology/topology-definition.yaml\n\n\n\n#flowmonitoring\nCOPY BUILD/flowmonitoring-storm-topology/libs/*                 /app/flowmonitoring-storm-topology/libs/\nCOPY BUILD/flowmonitoring-storm-topology/build.gradle           /app/flowmonitoring-storm-topology/\nCOPY BUILD/flowmonitoring-storm-topology/resources/flowmonitoring-topology.yaml\t    /app/flowmonitoring-storm-topology/topology-definition.yaml\n\n\n#history\nCOPY BUILD/history-storm-topology/libs/*                        /app/history-storm-topology/libs/\nCOPY BUILD/history-storm-topology/build.gradle                  /app/history-storm-topology/\nCOPY BUILD/history-storm-topology/resources/history-topology.yaml\t    /app/history-storm-topology/topology-definition.yaml\n\n\n#isllatency\nCOPY BUILD/isllatency-storm-topology/libs/*                     /app/isllatency-storm-topology/libs/\nCOPY BUILD/isllatency-storm-topology/build.gradle               /app/isllatency-storm-topology/\nCOPY BUILD/isllatency-storm-topology/resources/isllatency-topology.yaml\t    /app/isllatency-storm-topology/topology-definition.yaml\n\n\n\n#nbworker\nCOPY BUILD/nbworker-storm-topology/libs/*                       /app/nbworker-storm-topology/libs/\nCOPY BUILD/nbworker-storm-topology/build.gradle                 /app/nbworker-storm-topology/\nCOPY BUILD/nbworker-storm-topology/resources/nbworker-topology.yaml\t    /app/nbworker-storm-topology/topology-definition.yaml\n\n\n\n#network\nCOPY BUILD/network-storm-topology/libs/*                        /app/network-storm-topology/libs/\nCOPY BUILD/network-storm-topology/build.gradle                  /app/network-storm-topology/\nCOPY BUILD/network-storm-topology/resources/network-topology.yaml\t    /app/network-storm-topology/topology-definition.yaml\n\n\n\n#opentsdb\nCOPY BUILD/opentsdb-storm-topology/libs/*                       /app/opentsdb-storm-topology/libs/\nCOPY BUILD/opentsdb-storm-topology/build.gradle                 /app/opentsdb-storm-topology/\nCOPY BUILD/opentsdb-storm-topology/resources/opentsdb-topology.yaml\t    /app/opentsdb-storm-topology/topology-definition.yaml\n\n\n\n#ping\nCOPY BUILD/ping-storm-topology/libs/*                           /app/ping-storm-topology/libs/\nCOPY BUILD/ping-storm-topology/build.gradle                     /app/ping-storm-topology/\nCOPY BUILD/ping-storm-topology/resources/ping-topology.yaml\t    /app/ping-storm-topology/topology-definition.yaml\n\n\n\n#portstate\nCOPY BUILD/portstate-storm-topology/libs/*                      /app/portstate-storm-topology/libs/\nCOPY BUILD/portstate-storm-topology/build.gradle                /app/portstate-storm-topology/\nCOPY BUILD/portstate-storm-topology/resources/portstate-topology.yaml\t    /app/portstate-storm-topology/topology-definition.yaml\n\n\n\n#reroute\nCOPY BUILD/reroute-storm-topology/libs/*                        /app/reroute-storm-topology/libs/\nCOPY BUILD/reroute-storm-topology/build.gradle                  /app/reroute-storm-topology/\nCOPY BUILD/reroute-storm-topology/resources/reroute-topology.yaml\t    /app/reroute-storm-topology/topology-definition.yaml\n\n\n\n#stats\nCOPY BUILD/stats-storm-topology/libs/*                          /app/stats-storm-topology/libs/\nCOPY BUILD/stats-storm-topology/build.gradle                    /app/stats-storm-topology/\nCOPY BUILD/stats-storm-topology/resources/stats-topology.yaml\t    /app/stats-storm-topology/topology-definition.yaml\n\n\n\n#swmanager\nCOPY BUILD/swmanager-storm-topology/libs/*                      /app/swmanager-storm-topology/libs/\nCOPY BUILD/swmanager-storm-topology/build.gradle                /app/swmanager-storm-topology/\nCOPY BUILD/swmanager-storm-topology/resources/swmanager-topology.yaml\t    /app/swmanager-storm-topology/topology-definition.yaml\n\n\n#server42 control\nCOPY BUILD/server42-control-storm-topology/libs/*               /app/server42-control-storm-topology/libs/\nCOPY BUILD/server42-control-storm-topology/build.gradle         /app/server42-control-storm-topology/\nCOPY BUILD/server42-control-storm-topology/resources/control-topology.yaml\t    /app/server42-control-storm-topology/topology-definition.yaml\n\n\nCMD /app/entry-point.sh\n\nRUN TZ=Australia/Melbourne date >> /container_baked_on.txt\n"
}