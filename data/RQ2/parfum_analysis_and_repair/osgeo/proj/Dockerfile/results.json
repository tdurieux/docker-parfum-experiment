{
  "startTime": 1674251715626,
  "endTime": 1674251716856,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 34,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 15,
        "columnStart": 7,
        "columnEnd": 24
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 34,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 28
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "##\n# OSGeo/PROJ\n\nFROM ubuntu:20.04 as builder\n\nMAINTAINER Howard Butler <howard@hobu.co>\n\nARG DESTDIR=\"/build\"\n\n# Setup build env\nRUN apt-get update -y \\\n    && DEBIAN_FRONTEND=noninteractive apt-get install -y --fix-missing --no-install-recommends \\\n            software-properties-common build-essential ca-certificates \\\n            cmake wget unzip \\\n            zlib1g-dev libsqlite3-dev sqlite3 libcurl4-gnutls-dev \\\n            libtiff5-dev && rm -rf /var/lib/apt/lists/*;\n\nCOPY . /PROJ\n\nRUN cd /PROJ \\\n    && mkdir build \\\n    && cd build \\\n    && cmake .. -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_BUILD_TYPE=Release -DBUILD_TESTING=OFF \\\n    && make -j$(nproc) \\\n    && make install\n\n\n\n\nFROM ubuntu:20.04 as runner\n\nRUN date\n\nRUN apt-get update; \\\n    DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y \\\n        libsqlite3-0 libtiff5 libcurl4 libcurl3-gnutls \\\n        wget ca-certificates && rm -rf /var/lib/apt/lists/*;\n\n# Put this first as this is rarely changing\nRUN \\\n    mkdir -p /usr/share/proj; \\\n    wget --no-verbose --mirror https://cdn.proj.org/; \\\n    rm -f cdn.proj.org/*.js; \\\n    rm -f cdn.proj.org/*.css; \\\n    mv cdn.proj.org/* /usr/share/proj/; \\\n    rmdir cdn.proj.org\n\nCOPY --from=builder  /build/usr/share/proj/ /usr/share/proj/\nCOPY --from=builder  /build/usr/include/ /usr/include/\nCOPY --from=builder  /build/usr/bin/ /usr/bin/\nCOPY --from=builder  /build/usr/lib/ /usr/lib/\n\n"
}