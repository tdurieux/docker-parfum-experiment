{
  "startTime": 1674249378704,
  "endTime": 1674249379802,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 132,
        "lineEnd": 132,
        "columnStart": 4,
        "columnEnd": 55
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 196,
        "lineEnd": 196,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:latest\n\n# Based on:\n# https://github.com/mundialis/docker-grass-gis/blob/master/Dockerfile\nLABEL authors=\"Pietro Zambelli,Markus Neteler\"\nLABEL maintainer=\"peter.zamb@gmail.com,neteler@osgeo.org\"\n\n# without PDAL\n\n# PACKAGES VERSIONS\nARG PYTHON_VERSION=3\n\n# ================\n# CONFIG VARIABLES\n# ================\n\n# set configuration options, without wxGUI\nENV GRASS_CONFIG=\"\\\n      --enable-largefile \\\n      --with-cxx \\\n      --with-proj --with-proj-share=/usr/share/proj \\\n      --with-gdal \\\n      --with-python \\\n      --with-geos \\\n      --with-sqlite \\\n      --with-bzlib \\\n      --with-zstd \\\n      --with-cairo --with-cairo-ldflags=-lfontconfig \\\n      --with-fftw \\\n      --with-postgres --with-postgres-includes='/usr/include/postgresql' \\\n      --without-freetype \\\n      --without-pdal \\\n      --without-openmp \\\n      --without-opengl \\\n      --without-nls \\\n      --without-mysql \\\n      --without-odbc \\\n      --without-openmp \\\n      --without-ffmpeg \\\n      \"\n\n# Set environmental variables for GRASS GIS compilation, without debug symbols\nENV MYCFLAGS=\"-O2 -std=gnu99 -m64\" \\\n    MYLDFLAGS=\"-s -Wl,--no-undefined -lblas\" \\\n    # CXX stuff:\n    LD_LIBRARY_PATH=\"/usr/local/lib\" \\\n    LDFLAGS=\"$MYLDFLAGS\" \\\n    CFLAGS=\"$MYCFLAGS\" \\\n    CXXFLAGS=\"$MYCXXFLAGS\" \\\n    NUMTHREADS=2\n\n\n# List of packages to be installed\nENV PACKAGES=\"\\\n      attr \\\n      bash \\\n      bison \\\n      bzip2 \\\n      cairo \\\n      fftw \\\n      flex \\\n      freetype \\\n      gdal \\\n      gettext \\\n      geos \\\n      gnutls \\\n      libbz2 \\\n      libjpeg-turbo \\\n      libpng \\\n      musl \\\n      musl-utils \\\n      ncurses \\\n      openjpeg \\\n      openblas \\\n      py3-numpy \\\n      py3-pillow \\\n      py3-six \\\n      postgresql \\\n      proj-datumgrid \\\n      proj-util \\\n      sqlite \\\n      sqlite-libs \\\n      subversion \\\n      tiff \\\n      zstd \\\n      zstd-libs \\\n    \" \\\n    # These packages are required to compile GRASS GIS.\n    GRASS_BUILD_PACKAGES=\"\\\n      build-base \\\n      bzip2-dev \\\n      cairo-dev \\\n      fftw-dev \\\n      freetype-dev \\\n      g++ \\\n      gcc \\\n      gdal-dev \\\n      geos-dev \\\n      git \\\n      gnutls-dev \\\n      libc6-compat \\\n      libjpeg-turbo-dev \\\n      libpng-dev \\\n      make \\\n      openjpeg-dev \\\n      openblas-dev \\\n      postgresql-dev \\\n      proj-dev \\\n      python3-dev \\\n      py3-numpy-dev \\\n      sqlite-dev \\\n      tar \\\n      tiff-dev \\\n      unzip \\\n      vim \\\n      wget \\\n      zip \\\n      zstd-dev \\\n    \"\n\n# ====================\n# INSTALL DEPENDENCIES\n# ====================\n\nWORKDIR /src\n\nENV PYTHONBIN=python$PYTHON_VERSION\n\nRUN echo \"Install Python\"; \\\n    apk add --no-cache $PYTHONBIN && \\\n    $PYTHONBIN -m ensurepip && \\\n    rm -r /usr/lib/python*/ensurepip && \\\n    pip$PYTHON_VERSION install --no-cache-dir --upgrade pip setuptools && \\\n    if [ ! -e /usr/bin/pip ]; then ln -s pip$PYTHON_VERSION /usr/bin/pip ; fi && \\\n    if [[ ! -e /usr/bin/python ]]; then ln -sf /usr/bin/$PYTHONBIN /usr/bin/python; fi && \\\n    rm -r /root/.cache\n\n# Add the packages\nRUN echo \"Install main packages\";\\\n    apk update; \\\n    apk add --no-cache \\\n            --repository http://dl-cdn.alpinelinux.org/alpine/latest-stable/main \\\n            $PACKAGES; \\\n    # Add packages just for the GRASS build process\n    apk add --no-cache \\\n            --repository http://dl-cdn.alpinelinux.org/alpine/latest-stable/main \\\n            --virtual .build-deps $GRASS_BUILD_PACKAGES; \\\n    # echo LANG=\"en_US.UTF-8\" > /etc/default/locale;\n    #\n    # Checkout and install GRASS GIS\n    #\n    echo \"Install GRASS GIS\";\\\n    echo \"  => Downloading grass\"\n\nCOPY . /src/grass_build/\n\n# Configure compile and install GRASS GIS\nRUN echo \"  => Configure and compile grass\";\\\n    cd /src/grass_build && \\\n    /src/grass_build/configure $GRASS_CONFIG && \\\n    make -j $NUMTHREADS && \\\n    make install && \\\n    ldconfig /etc/ld.so.conf.d; \\\n    #\n    # Reduce the image size\n    #\n    rm -rf /src/*; \\\n    # remove build dependencies and any leftover apk cache\n    apk del --no-cache --purge .build-deps; \\\n    rm -rf /var/cache/apk/*; \\\n    rm -rf /root/.cache; \\\n    # Remove unnecessary grass files\n    rm -rf /usr/local/grass83/demolocation; \\\n    rm -rf /usr/local/grass83/fonts; \\\n    rm -rf /usr/local/grass83/gui; \\\n    rm -rf /usr/local/grass83/share;\n\n\n# Unset environmental variables to avoid later compilation issues\nENV INTEL=\"\" \\\n    MYCFLAGS=\"\" \\\n    MYLDFLAGS=\"\" \\\n    MYCXXFLAGS=\"\" \\\n    LD_LIBRARY_PATH=\"\" \\\n    LDFLAGS=\"\" \\\n    CFLAGS=\"\" \\\n    CXXFLAGS=\"\" \\\n    # set SHELL var to avoid /bin/sh fallback in interactive GRASS GIS sessions in docker\n    SHELL=\"/bin/bash\"\n\n\n# =====================\n# INSTALL GRASS-SESSION\n# =====================\n\n# install external Python API\nRUN pip install --no-cache-dir grass-session\n\n# set GRASSBIN\nENV GRASSBIN=\"/usr/local/bin/grass\"\n\n# ==================\n# TEST grass-session\n# ==================\n\nWORKDIR /scripts\nCOPY docker/testdata/test_grass_session.py .\n# TODO: fix test\n#RUN /usr/bin/python3 /scripts/test_grass_session.py\n\n# ========\n# FINALIZE\n# ========\n\n# Data workdir\nWORKDIR /grassdb\nVOLUME /grassdb\n\n# GRASS GIS specific\n# allow work with MAPSETs that are not owned by current user\nENV GRASS_SKIP_MAPSET_OWNER_CHECK=1 \\\n    LC_ALL=\"en_US.UTF-8\"\n\n# show installed version\nRUN grass --tmp-location EPSG:4326 --exec g.version -rge && \\\n    python3 --version\n\nCMD [$GRASSBIN, \"--version\"]\n"
}