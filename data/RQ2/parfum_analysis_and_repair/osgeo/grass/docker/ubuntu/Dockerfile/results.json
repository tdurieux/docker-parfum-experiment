{
  "startTime": 1674251187230,
  "endTime": 1674251189173,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 99,
        "lineEnd": 99,
        "columnStart": 4,
        "columnEnd": 67
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 100,
        "lineEnd": 100,
        "columnStart": 4,
        "columnEnd": 67
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 101,
        "lineEnd": 101,
        "columnStart": 4,
        "columnEnd": 67
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 102,
        "lineEnd": 102,
        "columnStart": 4,
        "columnEnd": 67
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 103,
        "lineEnd": 103,
        "columnStart": 4,
        "columnEnd": 70
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 104,
        "lineEnd": 104,
        "columnStart": 4,
        "columnEnd": 70
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 105,
        "lineEnd": 105,
        "columnStart": 4,
        "columnEnd": 70
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 106,
        "lineEnd": 106,
        "columnStart": 4,
        "columnEnd": 71
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 107,
        "lineEnd": 107,
        "columnStart": 4,
        "columnEnd": 71
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 218,
        "lineEnd": 218,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 87,
        "lineEnd": 87,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 116,
        "lineEnd": 116,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 84,
        "lineEnd": 84,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 84,
        "lineEnd": 84,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 84,
        "lineEnd": 84,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 78,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 84,
        "lineEnd": 84,
        "columnStart": 4,
        "columnEnd": 25
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 84,
        "lineEnd": 84,
        "columnStart": 4,
        "columnEnd": 52
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:20.04\n\nLABEL authors=\"Carmen Tawalika,Markus Neteler,Anika Weinmann\"\nLABEL maintainer=\"tawalika@mundialis.de,neteler@mundialis.de,weinmann@mundialis.de\"\n\nENV DEBIAN_FRONTEND noninteractive\n\n# define versions to be used\nARG PDAL_VERSION=2.2.0\nARG LAZ_PERF_VERSION=1.5.0\n\nSHELL [\"/bin/bash\", \"-c\"]\n\nWORKDIR /tmp\n\nRUN apt-get update && apt-get upgrade -y && \\\n    apt-get install -y --no-install-recommends --no-install-suggests \\\n    build-essential \\\n    bison \\\n    bzip2 \\\n    cmake \\\n    curl \\\n    flex \\\n    g++ \\\n    gcc \\\n    gdal-bin \\\n    git \\\n    language-pack-en-base \\\n    libbz2-dev \\\n    libcairo2 \\\n    libcairo2-dev \\\n    libcurl4-gnutls-dev \\\n    libfftw3-bin \\\n    libfftw3-dev \\\n    libfreetype6-dev \\\n    libgdal-dev \\\n    libgeos-dev \\\n    libgsl0-dev \\\n    libjpeg-dev \\\n    libjsoncpp-dev \\\n    libnetcdf-dev \\\n    libncurses5-dev \\\n    libopenblas-base \\\n    libopenblas-dev \\\n    libopenjp2-7 \\\n    libopenjp2-7-dev \\\n    libpnglite-dev \\\n    libpq-dev \\\n    libproj-dev \\\n    libpython3-all-dev \\\n    libsqlite3-dev \\\n    libtiff-dev \\\n    libzstd-dev \\\n    locales \\\n    make \\\n    mesa-common-dev \\\n    moreutils \\\n    ncurses-bin \\\n    netcdf-bin \\\n    proj-bin \\\n    proj-data \\\n    python3 \\\n    python3-dateutil \\\n    python3-dev \\\n    python3-magic \\\n    python3-numpy \\\n    python3-pil \\\n    python3-pip \\\n    python3-ply \\\n    python3-setuptools \\\n    python3-venv \\\n    software-properties-common \\\n    sqlite3 \\\n    subversion \\\n    unzip \\\n    vim \\\n    wget \\\n    zip \\\n    zlib1g-dev && rm -rf /var/lib/apt/lists/*;\n\nRUN echo LANG=\"en_US.UTF-8\" > /etc/default/locale\nRUN echo en_US.UTF-8 UTF-8 >> /etc/locale.gen && locale-gen\n\n## install laz-perf\nRUN apt-get install -y --no-install-recommends cmake && rm -rf /var/lib/apt/lists/*;\nWORKDIR /src\nRUN wget -q https://github.com/hobu/laz-perf/archive/${LAZ_PERF_VERSION}.tar.gz -O laz-perf-${LAZ_PERF_VERSION}.tar.gz && \\\n    tar -zxf laz-perf-${LAZ_PERF_VERSION}.tar.gz && \\\n    cd laz-perf-${LAZ_PERF_VERSION} && \\\n    mkdir build && \\\n    cd build && \\\n    cmake .. && \\\n    make && \\\n    make install && rm laz-perf-${LAZ_PERF_VERSION}.tar.gz\n\n## fetch vertical datums for PDAL and store into PROJ dir\nWORKDIR /src\nRUN mkdir vdatum && \\\n    cd vdatum && \\\n    wget -q https://download.osgeo.org/proj/vdatum/usa_geoid2012.zip && unzip -j -u usa_geoid2012.zip -d /usr/share/proj; \\\n    wget -q https://download.osgeo.org/proj/vdatum/usa_geoid2009.zip && unzip -j -u usa_geoid2009.zip -d /usr/share/proj; \\\n    wget -q https://download.osgeo.org/proj/vdatum/usa_geoid2003.zip && unzip -j -u usa_geoid2003.zip -d /usr/share/proj; \\\n    wget -q https://download.osgeo.org/proj/vdatum/usa_geoid1999.zip && unzip -j -u usa_geoid1999.zip -d /usr/share/proj; \\\n    wget -q https://download.osgeo.org/proj/vdatum/vertcon/vertconc.gtx && mv vertconc.gtx /usr/share/proj; \\\n    wget -q https://download.osgeo.org/proj/vdatum/vertcon/vertcone.gtx && mv vertcone.gtx /usr/share/proj; \\\n    wget -q https://download.osgeo.org/proj/vdatum/vertcon/vertconw.gtx && mv vertconw.gtx /usr/share/proj; \\\n    wget -q https://download.osgeo.org/proj/vdatum/egm96_15/egm96_15.gtx && mv egm96_15.gtx /usr/share/proj; \\\n    wget -q https://download.osgeo.org/proj/vdatum/egm08_25/egm08_25.gtx && mv egm08_25.gtx /usr/share/proj; \\\n    cd .. && \\\n    rm -rf vdatum\n\n## install pdal\nENV NUMTHREADS=4\nWORKDIR /src\nRUN wget -q \\\n https://github.com/PDAL/PDAL/releases/download/${PDAL_VERSION}/PDAL-${PDAL_VERSION}-src.tar.gz && \\\n    tar xfz PDAL-${PDAL_VERSION}-src.tar.gz && \\\n    cd /src/PDAL-${PDAL_VERSION}-src && \\\n    mkdir build && \\\n    cd build && \\\n    cmake .. \\\n      -G \"Unix Makefiles\" \\\n      -DCMAKE_BUILD_TYPE=Release \\\n      -DCMAKE_INSTALL_PREFIX=/usr \\\n      -DCMAKE_C_COMPILER=gcc \\\n      -DCMAKE_CXX_COMPILER=g++ \\\n      -DCMAKE_MAKE_PROGRAM=make \\\n      -DBUILD_PLUGIN_PYTHON=ON \\\n      -DBUILD_PLUGIN_CPD=OFF \\\n      -DBUILD_PLUGIN_GREYHOUND=ON \\\n      -DBUILD_PLUGIN_HEXBIN=ON \\\n      -DHEXER_INCLUDE_DIR=/usr/include/ \\\n      -DBUILD_PLUGIN_NITF=OFF \\\n      -DBUILD_PLUGIN_ICEBRIDGE=ON \\\n      -DBUILD_PLUGIN_PGPOINTCLOUD=ON \\\n      -DBUILD_PGPOINTCLOUD_TESTS=OFF \\\n      -DBUILD_PLUGIN_SQLITE=ON \\\n      -DWITH_LASZIP=ON \\\n      -DWITH_LAZPERF=ON \\\n      -DWITH_TESTS=ON && \\\n    make -j $NUMTHREADS && \\\n    make install && rm PDAL-${PDAL_VERSION}-src.tar.gz\n\n# copy grass gis source\nWORKDIR /src\nCOPY . /src/grass_build/\nWORKDIR /src/grass_build\n\n# Cleanup potentially leftover GISRC file with wrong path to \"demolocation\"\nRUN rm -f /src/grass_build/dist.*/demolocation/.grassrc*\n\n# Set environmental variables for GRASS GIS compilation, without debug symbols\n# Set gcc/g++ environmental variables for GRASS GIS compilation, without debug symbols\nENV MYCFLAGS \"-O2 -std=gnu99 -m64\"\nENV MYLDFLAGS \"-s\"\n# CXX stuff:\nENV LD_LIBRARY_PATH \"/usr/local/lib\"\nENV LDFLAGS \"$MYLDFLAGS\"\nENV CFLAGS \"$MYCFLAGS\"\nENV CXXFLAGS \"$MYCXXFLAGS\"\n\n# Configure compile and install GRASS GIS\nENV GRASS_PYTHON=/usr/bin/python3\nENV NUMTHREADS=4\nRUN make distclean || echo \"nothing to clean\"\nRUN /src/grass_build/configure \\\n  --with-cxx \\\n  --enable-largefile \\\n  --with-proj-share=/usr/share/proj \\\n  --with-gdal=/usr/bin/gdal-config \\\n  --with-geos \\\n  --with-sqlite \\\n  --with-cairo --with-cairo-ldflags=-lfontconfig \\\n  --with-freetype --with-freetype-includes=\"/usr/include/freetype2/\" \\\n  --with-fftw \\\n  --with-postgres --with-postgres-includes=\"/usr/include/postgresql\" \\\n  --with-netcdf \\\n  --with-zstd \\\n  --with-bzlib \\\n  --with-pdal \\\n  --without-mysql \\\n  --without-odbc \\\n  --without-openmp \\\n  --without-opengl \\\n    && make -j $NUMTHREADS \\\n    && make install && ldconfig\n\n# Unset environmental variables to avoid later compilation issues\nENV INTEL \"\"\nENV MYCFLAGS \"\"\nENV MYLDFLAGS \"\"\nENV MYCXXFLAGS \"\"\nENV LD_LIBRARY_PATH \"\"\nENV LDFLAGS \"\"\nENV CFLAGS \"\"\nENV CXXFLAGS \"\"\n\n# set SHELL var to avoid /bin/sh fallback in interactive GRASS GIS sessions\nENV SHELL /bin/bash\nENV LC_ALL \"en_US.UTF-8\"\nENV GRASS_SKIP_MAPSET_OWNER_CHECK 1\n\n# Create generic GRASS GIS lib name regardless of version number\nRUN ln -sf /usr/local/grass83 /usr/local/grass\n\n# show GRASS GIS, PROJ, GDAL etc versions\nRUN grass --tmp-location EPSG:4326 --exec g.version -rge && \\\n    pdal --version && \\\n    python3 --version\n\n# Reduce the image size\nRUN apt-get autoremove -y\nRUN apt-get clean -y\nRUN rm -r /src/grass_build/.git\n\nWORKDIR /scripts\n\n# install external GRASS GIS session Python API\nRUN pip3 install --no-cache-dir grass-session\n\n# install GRASS GIS extensions\nRUN grass --tmp-location EPSG:4326 --exec g.extension extension=r.in.pdal\n\n# add GRASS GIS envs for python usage\nENV GISBASE \"/usr/local/grass/\"\nENV GRASSBIN \"/usr/local/bin/grass\"\nENV PYTHONPATH \"${PYTHONPATH}:$GISBASE/etc/python/\"\nENV LD_LIBRARY_PATH \"$LD_LIBRARY_PATH:$GISBASE/lib\"\n\nWORKDIR /tmp\nCOPY docker/testdata/simple.laz .\nWORKDIR /scripts\nCOPY docker/testdata/test_grass_session.py .\n## just scan the LAZ file\n# Not yet ready for GRASS GIS 8:\n#RUN /usr/bin/python3 /scripts/test_grass_session.py\nRUN grass --tmp-location EPSG:25832 --exec r.in.pdal input=\"/tmp/simple.laz\" output=\"count_1\" method=\"n\" resolution=1 -s\n\nWORKDIR /grassdb\nVOLUME /grassdb\n"
}