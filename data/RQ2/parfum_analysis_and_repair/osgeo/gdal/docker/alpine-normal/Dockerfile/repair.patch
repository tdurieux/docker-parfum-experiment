diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/osgeo/gdal/docker/alpine-normal/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/osgeo/gdal/docker/alpine-normal/Dockerfile/repaired.Dockerfile
index 9b44608..15efaf5 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/osgeo/gdal/docker/alpine-normal/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/osgeo/gdal/docker/alpine-normal/Dockerfile/repaired.Dockerfile
@@ -17,7 +17,7 @@ RUN apk add --no-cache  wget curl unzip make libtool autoconf automake pkgconfig
 ARG PROJ_DATUMGRID_LATEST_LAST_MODIFIED
 RUN \
     mkdir -p /build_projgrids/usr/share/proj \
-    && curl -LOs http://download.osgeo.org/proj/proj-datumgrid-latest.zip \
+    && curl -f -LOs https://download.osgeo.org/proj/proj-datumgrid-latest.zip \
     && unzip -q -j -u -o proj-datumgrid-latest.zip  -d /build_projgrids/usr/share/proj \
     && rm -f *.zip
 
@@ -39,29 +39,29 @@ RUN apk add --no-cache \
 
 # Build szip
 ARG SZIP_VERSION=2.1.1
-RUN if test "${SZIP_VERSION}" != ""; then ( \
-    wget -q https://support.hdfgroup.org/ftp/lib-external/szip/${SZIP_VERSION}/src/szip-${SZIP_VERSION}.tar.gz \
+RUN if test "${SZIP_VERSION}" != ""; then \
+( wget -q https://support.hdfgroup.org/ftp/lib-external/szip/${SZIP_VERSION}/src/szip-${SZIP_VERSION}.tar.gz \
     && tar xzf szip-${SZIP_VERSION}.tar.gz \
     && rm -f szip-${SZIP_VERSION}.tar.gz \
     && cd szip-${SZIP_VERSION} \
-    && CFLAGS=-O2 ./configure --prefix=/usr --disable-static \
+    && CFLAGS=-O2 ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/usr --disable-static \
     && make -j$(nproc) \
     && make install \
     && cp -P /usr/lib/libsz*.so* /build_thirdparty/usr/lib \
     && for i in /build_thirdparty/usr/lib/*; do strip -s $i 2>/dev/null || /bin/true; done \
     && cd .. \
-    && rm -rf szip-${SZIP_VERSION} \
-    ); fi
+    && rm -rf szip-${SZIP_VERSION}) \
+    fi
 
 # Build hdf4
 ARG HDF4_VERSION=4.2.15
-RUN if test "${HDF4_VERSION}" != "" -a "$(uname -m)" = "x86_64"; then ( \
-    apk add --no-cache byacc flex portablexdr-dev \
+RUN if test "${HDF4_VERSION}" != "" -a "$(uname -m)" = "x86_64"; then \
+( apk add --no-cache byacc flex portablexdr-dev \
     && mkdir hdf4 \
     && wget -q https://support.hdfgroup.org/ftp/HDF/releases/HDF${HDF4_VERSION}/src/hdf-${HDF4_VERSION}.tar.gz -O - \
         | tar xz -C hdf4 --strip-components=1 \
     && cd hdf4 \
-    && LDFLAGS=-lportablexdr ./configure --prefix=/usr --enable-shared --disable-static \
+    && LDFLAGS=-lportablexdr ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/usr --enable-shared --disable-static \
         --with-szlib=/usr --disable-fortran --disable-netcdf \
     && make -j$(nproc) \
     && make install \
@@ -70,8 +70,8 @@ RUN if test "${HDF4_VERSION}" != "" -a "$(uname -m)" = "x86_64"; then ( \
     && for i in /build_thirdparty/usr/lib/*; do strip -s $i 2>/dev/null || /bin/true; done \
     && cd .. \
     && rm -rf hdf4 \
-    && apk del byacc flex portablexdr-dev \
-    ); fi
+    && apk del byacc flex portablexdr-dev) \
+    fi
 
 # Build likbkea
 ARG KEA_VERSION=1.4.14
@@ -186,8 +186,8 @@ RUN mkdir proj \
 
 # Build spatialite
 ARG SPATIALITE_VERSION=5.0.1
-RUN if test "${SPATIALITE_VERSION}" != "" -a "$(uname -m)" = "x86_64"; then ( \
-    wget -q http://www.gaia-gis.it/gaia-sins/libspatialite-${SPATIALITE_VERSION}.tar.gz \
+RUN if test "${SPATIALITE_VERSION}" != "" -a "$(uname -m)" = "x86_64"; then \
+( wget -q https://www.gaia-gis.it/gaia-sins/libspatialite-${SPATIALITE_VERSION}.tar.gz \
     && tar xzf libspatialite-${SPATIALITE_VERSION}.tar.gz \
     && rm -f libspatialite-${SPATIALITE_VERSION}.tar.gz \
     && cd libspatialite-${SPATIALITE_VERSION} \
@@ -201,7 +201,7 @@ RUN if test "${SPATIALITE_VERSION}" != "" -a "$(uname -m)" = "x86_64"; then ( \
         mkdir -p "$HOME/.ccache"; \
         ccache -M 100M; \
     fi \
-    && ./configure --prefix=/usr --disable-static --disable-rttopo \
+    && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/usr --disable-static --disable-rttopo \
     && make -j$(nproc) \
     && make install \
     && if test "${RSYNC_REMOTE}" != ""; then \
@@ -217,8 +217,8 @@ RUN if test "${SPATIALITE_VERSION}" != "" -a "$(uname -m)" = "x86_64"; then ( \
     && cp -P /usr/lib/libspatialite*.so* /build_spatialite/usr/lib \
     && for i in /build_spatialite/usr/lib/*; do strip -s $i 2>/dev/null || /bin/true; done \
     && cd .. \
-    && rm -rf libspatialite-${SPATIALITE_VERSION} \
-    ); else \
+    && rm -rf libspatialite-${SPATIALITE_VERSION}) \
+    else \
         mkdir -p /build_spatialite/usr/lib; \
     fi
 
@@ -229,7 +229,7 @@ ARG GDAL_BUILD_IS_RELEASE
 ARG GDAL_REPOSITORY=OSGeo/gdal
 
 RUN if test "${GDAL_VERSION}" = "master"; then \
-        export GDAL_VERSION=$(curl -Ls https://api.github.com/repos/${GDAL_REPOSITORY}/commits/HEAD -H "Accept: application/vnd.github.VERSION.sha"); \
+        export GDAL_VERSION=$( curl -f -Ls https://api.github.com/repos/${GDAL_REPOSITORY}/commits/HEAD -H "Accept: application/vnd.github.VERSION.sha"); \
         export GDAL_RELEASE_DATE=$(date "+%Y%m%d"); \
     fi \
     && apk add --no-cache cmake \
@@ -298,7 +298,7 @@ RUN if test "${GDAL_VERSION}" = "master"; then \
             /build/usr/share/gdal/*.svg \
             # unused
             /build/usr/share/gdal/*.png \
-       ;do rm $i; done)\
+       ;do rm $i; done) \
     && apk del cmake
 
 # Build final image