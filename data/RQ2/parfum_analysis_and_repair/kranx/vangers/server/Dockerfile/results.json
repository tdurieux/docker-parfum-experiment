{
  "startTime": 1674246938025,
  "endTime": 1674246942818,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 8,
        "columnEnd": 31
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 9,
        "columnStart": 8,
        "columnEnd": 61
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:latest\n\nENV     TZ=Europe/Moscow\nRUN     ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone\n\nRUN apt-get -yqq update && \\\n        apt-get install -yq --no-install-recommends \\\n                        make gcc g++ python3-pip \\\n\t\t\tgit cmake libsdl2-dev libsdl2-net-dev libogg-dev \\\n\t\t\tlibvorbis-dev libavcodec-dev libavformat-dev libavutil-dev && \\\n        apt-get autoremove -y && \\\n        apt-get clean -y && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /opt/vangers\n\nRUN     GIT_SSL_NO_VERIFY=1 git clone https://github.com/novnc/websockify.git websockify\nRUN cd websockify && \\\n        pip3 install --no-cache-dir setuptools && \\\n        python3 setup.py install && \\\n        cd ..\n\nRUN     GIT_SSL_NO_VERIFY=1 git clone --depth 1 https://github.com/stalkerg/clunk.git clunk\nRUN     GIT_SSL_NO_VERIFY=1 git clone https://github.com/KranX/Vangers vangers\n\nCOPY    ./*.h   vangers/server/\nCOPY    ./*.cpp vangers/server/\n\n\nRUN     mkdir clunk-build && \\\n        cd clunk-build && \\\n        cmake -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_C_COMPILER=/usr/bin/gcc -DCMAKE_CXX_COMPILER=/usr/bin/g++ ../clunk && \\\n        make -j4 && \\\n        make install && \\\n        cd ..\n\n# Debug build is required for generating core dump, see more:\n# https://stackoverflow.com/questions/28335614/how-to-generate-core-file-in-docker-container\nRUN     mkdir build && \\\n        cd build && \\\n        cmake -DCMAKE_BUILD_TYPE=Debug ../vangers && \\\n        make -j4 vangers_server && \\\n        cd ..\n\nRUN     mkdir bin && \\\n        cd bin && \\\n        cp ../build/server/vangers_server ./server\n\nCOPY    ./docker-cmd.sh ./\nRUN     chmod 777 docker-cmd.sh\n\nCMD [\"./docker-cmd.sh\"]\n"
}