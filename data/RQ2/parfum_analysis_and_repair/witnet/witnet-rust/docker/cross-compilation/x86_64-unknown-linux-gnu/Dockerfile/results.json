{
  "startTime": 1674253749189,
  "endTime": 1674253749803,
  "originalSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 21,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 9,
        "columnStart": 22,
        "columnEnd": 13
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 21,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 21
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 21,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 21
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:latest\n\n# Install basic environment dependencies\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n    binutils \\\n    ca-certificates \\\n    cmake \\\n    curl \\\n    gcc \\\n    libc6-dev && rm -rf /var/lib/apt/lists/*;\n\n# Install Rust\nRUN curl https://sh.rustup.rs -sSf | sh -s -- -y --verbose\nENV PATH=/root/.cargo/bin:$PATH\nRUN rustc -vV && cargo -V\n\n# Compile and install OpenSSL for arm\nCOPY openssl.sh /\nRUN bash /openssl.sh linux-x86_64\n\n# Install common witnet-rust dependencies\nRUN apt-get install -y --no-install-recommends \\\n    clang \\\n    libssl-dev \\\n    protobuf-compiler && rm -rf /var/lib/apt/lists/*;\n\n# Clean up apt packages so the docker image is as compact as possible\nRUN apt-get clean && apt-get autoremove\n\n# Set needed environment variables\nENV OPENSSL_DIR=/openssl \\\n    OPENSSL_INCLUDE_DIR=/openssl/include \\\n    OPENSSL_LIB_DIR=/openssl/lib \\\n    RUST_BACKTRACE=1\n    #STRIP=strip\n"
}