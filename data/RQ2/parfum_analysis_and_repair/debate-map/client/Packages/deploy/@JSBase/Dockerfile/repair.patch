diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/debate-map/client/Packages/deploy/@JSBase/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/debate-map/client/Packages/deploy/@JSBase/Dockerfile/repaired.Dockerfile
index 0a20448..040bd0c 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/debate-map/client/Packages/deploy/@JSBase/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/debate-map/client/Packages/deploy/@JSBase/Dockerfile/repaired.Dockerfile
@@ -69,7 +69,7 @@ RUN apk --no-cache --virtual build-dependencies add python3 make g++ libexecinfo
 #	&& rm -r /dm_repo/node_modules/@babel
 # exclude every folder under "@babel" other than "runtime"
 #	&& cd /dm_repo/node_modules/@babel && rm -r !(runtime)
-	&& cd /dm_repo/node_modules/@babel && find . -mindepth 1 -maxdepth 1 -type d ! -name "runtime" -exec rm -r {} \;
+	&& cd /dm_repo/node_modules/@babel && find . -mindepth 1 -maxdepth 1 -type d ! -name "runtime" -exec rm -r {} \; && yarn cache clean;
 # for additional options (such as enableInlineBuilds), modify the .yarnrc.yml file
 
 # *now* copy the .yalc folder, and rerun the yarn install (to apply the yalc-overrides)
@@ -77,7 +77,7 @@ COPY .yalc/ .yalc/
 RUN yarn workspaces focus --all --production \
 	&& rm -r /dm_repo/.yarn/cache && rm -r /root/.yarn/berry/cache \
 	#&& rm -r /dm_repo/node_modules/typescript \
-	&& cd /dm_repo/node_modules/@babel && find . -mindepth 1 -maxdepth 1 -type d ! -name "runtime" -exec rm -r {} \;
+	&& cd /dm_repo/node_modules/@babel && find . -mindepth 1 -maxdepth 1 -type d ! -name "runtime" -exec rm -r {} \; && yarn cache clean;
 
 # strace: for debugging, eg. the "std::bad_alloc" error, as mentioned here: https://stackoverflow.com/a/59923848
 #RUN apk --no-cache add procps strace
@@ -87,7 +87,7 @@ RUN yarn workspaces focus --all --production \
 #RUN echo "vm.max_map_count=65530999" >> /etc/sysctl.conf
 #RUN sysctl -p
 
-# moved this to package-specific dockerfiles, as "update base docker image" has (a lot) more overhead than "copy NMOverwrites/ folder" in each package, and NMOverwrites/ can change frequently 
+# moved this to package-specific dockerfiles, as "update base docker image" has (a lot) more overhead than "copy NMOverwrites/ folder" in each package, and NMOverwrites/ can change frequently
 #COPY NMOverwrites/ /dm_repo/
 
 # fsr, "yarn install" is installing some of web-vcore's deps (eg. mobx-graphlink) under "web-vcore/node_modules", rather than hoisting (perhaps yarn is trying to avoid conflict with the "link:XXX" entry in yarn.lock);