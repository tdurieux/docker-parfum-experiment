{
  "startTime": 1674220464774,
  "endTime": 1674220466285,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 9
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 29,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 5
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 35,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 39,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 8
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 46,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 5
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 62,
        "lineEnd": 65,
        "columnStart": 4,
        "columnEnd": 10
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 68,
        "lineEnd": 76,
        "columnStart": 4,
        "columnEnd": 11
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 9
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 29,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 5
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 35,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 39,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 8
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 46,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 5
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 62,
        "lineEnd": 65,
        "columnStart": 4,
        "columnEnd": 10
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 68,
        "lineEnd": 76,
        "columnStart": 4,
        "columnEnd": 11
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 9
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 29,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 5
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 35,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 39,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 8
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 46,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 5
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 62,
        "lineEnd": 65,
        "columnStart": 4,
        "columnEnd": 10
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 68,
        "lineEnd": 76,
        "columnStart": 4,
        "columnEnd": 11
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 9
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 29,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 5
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 35,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 39,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 8
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 46,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 5
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 62,
        "lineEnd": 65,
        "columnStart": 4,
        "columnEnd": 10
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 68,
        "lineEnd": 76,
        "columnStart": 4,
        "columnEnd": 11
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:focal\n\n# set environment variables for tzdata\nARG TZ=America/New_York\nENV TZ=${TZ}\n\n# include manual pages and documentation\nARG DEBIAN_FRONTEND=noninteractive\nRUN apt-get update &&\\\n  yes | unminimize\n\n# install GCC-related packages\nRUN apt-get -y --no-install-recommends install \\\n binutils-doc \\\n cpp-doc \\\n gcc-doc \\\n g++ \\\n g++-multilib \\\n gdb \\\n gdb-doc \\\n glibc-doc \\\n libblas-dev \\\n liblapack-dev \\\n liblapack-doc \\\n libstdc++-10-doc \\\n make \\\n make-doc && rm -rf /var/lib/apt/lists/*;\n\n# install clang-related packages\nRUN apt-get -y --no-install-recommends install \\\n clang \\\n clang-10-doc \\\n lldb && rm -rf /var/lib/apt/lists/*;\n\n# install qemu for WeensyOS (sadly, this pulls in a lot of crap)\nRUN apt-get -y --no-install-recommends install \\\n qemu-system-x86 && rm -rf /var/lib/apt/lists/*;\n\n# install programs used for system exploration\nRUN apt-get -y --no-install-recommends install \\\n blktrace \\\n linux-tools-generic \\\n strace \\\n tcpdump && rm -rf /var/lib/apt/lists/*;\n\n# install interactive programs (emacs, vim, nano, man, sudo, etc.)\nRUN apt-get -y --no-install-recommends install \\\n bc \\\n curl \\\n dc \\\n emacs-nox \\\n git \\\n git-doc \\\n man \\\n micro \\\n nano \\\n psmisc \\\n sudo \\\n vim \\\n wget && rm -rf /var/lib/apt/lists/*;\n\n# set up libraries\nRUN apt-get -y --no-install-recommends install \\\n libreadline-dev \\\n locales \\\n wamerican && rm -rf /var/lib/apt/lists/*;\n\n# install programs used for networking\nRUN apt-get -y --no-install-recommends install \\\n dnsutils \\\n inetutils-ping \\\n iproute2 \\\n net-tools \\\n netcat \\\n telnet \\\n time \\\n traceroute && rm -rf /var/lib/apt/lists/*;\n\n# set up default locale\nRUN locale-gen en_US.UTF-8\nENV LANG en_US.UTF-8\n\n# remove unneeded .deb files\nRUN rm -r /var/lib/apt/lists/*\n\n# set up passwordless sudo for user cs61-user\nRUN useradd -m -s /bin/bash cs61-user && \\\n  echo \"cs61-user ALL=(ALL:ALL) NOPASSWD: ALL\" > /etc/sudoers.d/cs61-init\n\n# create binary reporting version of dockerfile\nRUN (echo '#\\!/bin/sh'; echo 'echo 12') > /usr/bin/cs61-docker-version; chmod ugo+rx,u+w,go-w /usr/bin/cs61-docker-version\n\n# git build arguments\nARG USER=CS61\\ User\nARG EMAIL=nobody@example.com\n\n# configure your environment\nUSER cs61-user\nRUN git config --global user.name \"${USER}\" && \\\n  git config --global user.email \"${EMAIL}\" && \\\n  (echo \"(custom-set-variables\"; echo \" '(c-basic-offset 4)\"; echo \" '(indent-tabs-mode nil))\") > ~/.emacs && \\\n  (echo \"set expandtab\"; echo \"set shiftwidth=4\"; echo \"set softtabstop=4\") > ~/.vimrc && \\\n  (echo \"if test -f /run/host-services/ssh-auth.sock; then\"; echo \"  sudo chown cs61-user:cs61-user /run/host-services/ssh-auth.sock\"; echo \"fi\") > ~/.bash_profile && \\\n  echo \". ~/.bashrc\" >> ~/.bash_profile && \\\n  rm -f ~/.bash_logout && \\\n  echo \"add-auto-load-safe-path ~\" > ~/.gdbinit\n\nWORKDIR /home/cs61-user\nCMD [\"/bin/bash\", \"-l\"]\n\n# Initial version of this Dockerfile by Todd Morrill, CS 61 DCE student\n"
}