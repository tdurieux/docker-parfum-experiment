{
  "startTime": 1674250763735,
  "endTime": 1674250765912,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 22,
        "columnEnd": 51
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 22,
        "columnEnd": 51
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# May be built from x86_64, using cross-build-start magic.\n\n# Use the official Golang image to create a build artifact.\n# This is based on Debian and sets the GOPATH to /go.\n# https://hub.docker.com/_/golang\nFROM golang:1.14 as gobuilder\n\n# Create and change to the app directory.\nWORKDIR /app\n\n# Retrieve application dependencies.\n# This allows the container build to reuse cached dependencies.\nCOPY go.* ./\nRUN go mod download\n\n# Copy local code to the container image.\nCOPY . ./\n\n# Build the binary.\nRUN CGO_ENABLED=0 GOOS=linux GOARCH=arm GOARM=6 go build -mod=readonly -a -v rtl_433_prometheus.go\n\nFROM gcr.io/rtl433/rtl_433:latest as rtl_433\nFROM balenalib/raspberrypi3:run\n\n# https://www.balena.io/docs/reference/base-images/base-images/#building-arm-containers-on-x86-machines\nRUN [ \"cross-build-start\" ]\n\nRUN apt-get update && apt-get install --no-install-recommends -y librtlsdr0 && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /\nCOPY --from=gobuilder /app/rtl_433_prometheus /\nCOPY --from=rtl_433 /usr/local/bin/rtl_433 /\nRUN chmod +x /rtl_433\n\n# https://www.balena.io/docs/reference/base-images/base-images/#building-arm-containers-on-x86-machines\nRUN [ \"cross-build-end\" ]\n\nEXPOSE 9550\nENTRYPOINT [\"/rtl_433_prometheus\"]\nCMD [\"--subprocess\", \"/rtl_433 -F json -M newmodel\"]\n\n"
}