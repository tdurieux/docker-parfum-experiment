{
  "startTime": 1674249652802,
  "endTime": 1674249653453,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 35,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 13
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 30,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 5
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 35,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 13
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 2,
        "columnEnd": 49
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 30,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 5
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 35,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 13
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 30,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 5
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 35,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 13
      }
    }
  ],
  "repairedDockerfile": "# Dockerfile for Sphinx-Needs\n# syntax = docker/dockerfile:1.2\nARG BASE_IMAGE=sphinxdoc/sphinx:latest\nFROM $BASE_IMAGE\nLABEL maintainer=\"Useblocks <https://useblocks.com/>\"\n\nARG DOCKER_USERNAME=dockeruser\nARG DOCKER_USER_ID=1000\nARG DOCKER_GROUP_ID=$DOCKER_USER_ID\nARG NEEDS_VERSION\n\n# To prevent interactive shells\nARG DEBIAN_FRONTEND=noninteractive\n\n# Install apt & make\nRUN \\\n  sed -i 's/# \\(.*multiverse$\\)/\\1/g' /etc/apt/sources.list && \\\n  apt-get update && \\\n  apt-get upgrade -y && \\\n  apt-get install -y --no-install-recommends sudo && rm -rf /var/lib/apt/lists/*;\n\n# Create user\nRUN groupadd -g ${DOCKER_GROUP_ID} ${DOCKER_USERNAME} &&\\\n    useradd -l -u ${DOCKER_USER_ID} -g ${DOCKER_USERNAME} ${DOCKER_USERNAME} &&\\\n    install -d -m 0755 -o ${DOCKER_USERNAME} -g ${DOCKER_USERNAME} /home/${DOCKER_USERNAME} &&\\\n    echo $DOCKER_USERNAME ALL=\\(root\\) NOPASSWD:ALL > /etc/sudoers.d/$DOCKER_USERNAME &&\\\n    chmod 0440 /etc/sudoers.d/$DOCKER_USERNAME &&\\    \n    chown -R ${DOCKER_USERNAME} /home/${DOCKER_USERNAME}\n\n# Install some basic tooling\nRUN apt-get -y --no-install-recommends install \\\n  wget \\\n  git && rm -rf /var/lib/apt/lists/*;\n\n# Install PlantUML dependencies\nRUN apt-get -y --no-install-recommends install \\\n  default-jre && rm -rf /var/lib/apt/lists/*;\n\n# Install PlantUML\nRUN wget -c https://netcologne.dl.sourceforge.net/project/plantuml/plantuml.jar -O /tmp/plantuml.jar && \\\n    mkdir -p /usr/share/plantuml && \\\n    mv /tmp/plantuml.jar /usr/share/plantuml/plantuml.jar\n\n# Install needed sphinx components\nRUN pip3 install --no-cache-dir \\\n  sphinxcontrib-plantuml\n\n# Install Sphinx-Needs\nRUN \\\n    if [ -n \"$NEEDS_VERSION\" ] && [ \"$NEEDS_VERSION\" = \"pre-release\" ]; then \\\n      pip3 install --no-cache-dir git+https://github.com/useblocks/sphinxcontrib-needs; \\\n    elif [ -n \"$NEEDS_VERSION\" ]; then \\\n      pip3 install --no-cache-dir git+https://github.com/useblocks/sphinxcontrib-needs@$NEEDS_VERSION; \\\n    else \\\n      pip3 install --no-cache-dir sphinxcontrib-needs; \\\n    fi\n\n## Clean up\nRUN apt-get remove -y wget \\\ngit\n\nWORKDIR /sphinxneeds\n\n # Start as user\nUSER ${DOCKER_USERNAME}"
}