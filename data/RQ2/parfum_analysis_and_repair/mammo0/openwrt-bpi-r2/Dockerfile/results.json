{
  "startTime": 1674252819385,
  "endTime": 1674252820430,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 18
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:18.04\n\nARG BUILD_USER=builder\nARG PUID=1000\nARG PGID=1000\nENV BUILD_DIR=/build\nENV VOLUME_DIR=/out\n\n\n# install dependencies\nRUN apt-get update && \\\n    apt-get -y --no-install-recommends install \\\n\n        sudo \\\n        build-essential \\\n        curl \\\n        dosfstools \\\n        e2fsprogs \\\n        git \\\n\n        gcc-arm-linux-gnueabihf \\\n        bison \\\n        flex \\\n        python-dev \\\n        swig \\\n        xxd \\\n\n        ecj \\\n        fastjar \\\n        file \\\n        g++ \\\n        gawk \\\n        gettext \\\n        java-propose-classpath \\\n        libelf-dev \\\n        libncurses5-dev \\\n        libssl-dev \\\n        python \\\n        python3 \\\n        python3-distutils \\\n        subversion \\\n        unzip \\\n        wget \\\n        zlib1g-dev && rm -rf /var/lib/apt/lists/*;\n\n\n\n# add build user\nRUN [ $(getent group $PGID) ] || groupadd -f -g $PGID $BUILD_USER && \\\n    useradd -ms /bin/bash -u $PUID -g $PGID $BUILD_USER && \\\n    echo \"Cmnd_Alias IMAGE_CREATION = /sbin/losetup, /sbin/mkfs.ext4, /sbin/mkfs.vfat, /bin/mount, /bin/umount, /bin/cp, /bin/tar, /bin/mknod\" >> /etc/sudoers && \\\n    echo \"$BUILD_USER ALL = NOPASSWD: IMAGE_CREATION\" >> /etc/sudoers\n\n# setup build context\nRUN mkdir \"$BUILD_DIR\" && \\\n    mkdir \"$VOLUME_DIR\" && \\\n    chown $PUID:$PGID \"$VOLUME_DIR\"\nADD . \"$BUILD_DIR\"\nRUN chown -R $PUID:$PGID \"$BUILD_DIR\"\nWORKDIR \"$BUILD_DIR\"\n\n\nUSER $BUILD_USER\nVOLUME \"$VOLUME_DIR\"\nCOPY docker_entrypoint.sh /usr/bin/\nENTRYPOINT [\"docker_entrypoint.sh\"]\n"
}