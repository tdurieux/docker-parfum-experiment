diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/singnet/nlp-services/opennmt-romance-translator/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/singnet/nlp-services/opennmt-romance-translator/Dockerfile/repaired.Dockerfile
index 19366d0..5ae4ec3 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/singnet/nlp-services/opennmt-romance-translator/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/singnet/nlp-services/opennmt-romance-translator/Dockerfile/repaired.Dockerfile
@@ -1,7 +1,7 @@
 FROM nvidia/cuda:8.0-devel-ubuntu16.04 as torch_builder
 
 RUN apt update && \
-    apt install -y \
+    apt install --no-install-recommends -y \
         autoconf \
         automake \
         build-essential \
@@ -19,7 +19,7 @@ RUN apt update && \
         protobuf-compiler \
         unzip \
         nano \
-        wget
+        wget && rm -rf /var/lib/apt/lists/*;
 
 # Fetch Intel MKL.
 RUN mkdir /root/mkl && \
@@ -116,20 +116,20 @@ ENV ONMT_DIR=/root/opennmt
 COPY . $ONMT_DIR
 
 # Install snet daemon
-RUN SNETD_GIT_VERSION=`curl -s https://api.github.com/repos/singnet/snet-daemon/releases/latest | grep -oP '"tag_name": "\K(.*)(?=")' || echo "v5.0.1"` && \
+RUN SNETD_GIT_VERSION=$( curl -f -s https://api.github.com/repos/singnet/snet-daemon/releases/latest | grep -oP '"tag_name": "\K(.*)(?=")' || echo "v5.0.1") && \
     SNETD_VERSION=${snetd_version:-${SNETD_GIT_VERSION}} && \
     cd /tmp && \
     wget https://github.com/singnet/snet-daemon/releases/download/${SNETD_VERSION}/snet-daemon-${SNETD_VERSION}-linux-amd64.tar.gz && \
     tar -xvf snet-daemon-${SNETD_VERSION}-linux-amd64.tar.gz && \
     mv snet-daemon-${SNETD_VERSION}-linux-amd64/snetd /usr/bin/snetd && \
-    rm -rf snet-daemon*
+    rm -rf snet-daemon* && rm snet-daemon-${SNETD_VERSION}-linux-amd64.tar.gz
 
 RUN cd ${SINGNET_DIR} && \
     git clone -b ${git_branch} https://github.com/${git_owner}/${git_repo}.git
 
 RUN cd ${SINGNET_DIR}/${git_repo}/${SERVICE_NAME} && \
-    pip3 install -U pip==20.3.4 && \
-    pip3 install -r requirements.txt && \
+    pip3 install --no-cache-dir -U pip==20.3.4 && \
+    pip3 install --no-cache-dir -r requirements.txt && \
     sh buildproto.sh
 
 RUN cd ${SINGNET_DIR}/${git_repo}/${SERVICE_NAME}/utils && \