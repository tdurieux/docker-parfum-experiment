diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/singnet/semantic-vision/services/MinecraftService/For_docker/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/singnet/semantic-vision/services/MinecraftService/For_docker/Dockerfile/repaired.Dockerfile
index 6172532..4ef3671 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/singnet/semantic-vision/services/MinecraftService/For_docker/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/singnet/semantic-vision/services/MinecraftService/For_docker/Dockerfile/repaired.Dockerfile
@@ -9,7 +9,7 @@ ENV PATH=${GOPATH}/bin:${PATH}
 RUN mkdir -p ${GOPATH}
 
 RUN apt-get update && \
-    apt-get install -y \
+    apt-get install --no-install-recommends -y \
     apt-utils \
     nano \
     vim \
@@ -18,32 +18,32 @@ RUN apt-get update && \
     curl \
     zip \
     libudev-dev \
-    libusb-1.0-0-dev
+    libusb-1.0-0-dev && rm -rf /var/lib/apt/lists/*;
 
-RUN apt-get install -y python3 python3-pip
+RUN apt-get install --no-install-recommends -y python3 python3-pip && rm -rf /var/lib/apt/lists/*;
 
-RUN pip3 install snet-cli
+RUN pip3 install --no-cache-dir snet-cli
 
-RUN SNETD_VERSION=`curl -s https://api.github.com/repos/singnet/snet-daemon/releases/latest | grep -oP '"tag_name": "\K(.*)(?=")'` && \
+RUN SNETD_VERSION=$( curl -f -s https://api.github.com/repos/singnet/snet-daemon/releases/latest | grep -oP '"tag_name": "\K(.*)(?=")') && \
     cd /tmp && \
     wget https://github.com/singnet/snet-daemon/releases/download/${SNETD_VERSION}/snet-daemon-${SNETD_VERSION}-linux-amd64.tar.gz && \
     tar -xvf snet-daemon-${SNETD_VERSION}-linux-amd64.tar.gz && \
-    mv snet-daemon-${SNETD_VERSION}-linux-amd64/snetd /usr/bin/snetd
+    mv snet-daemon-${SNETD_VERSION}-linux-amd64/snetd /usr/bin/snetd && rm snet-daemon-${SNETD_VERSION}-linux-amd64.tar.gz
 
 RUN cd ${SINGNET_REPOS} && \
     git clone --depth 1 https://github.com/singnet/dev-portal.git
 
-RUN     apt-get install -y build-essential autoconf libtool pkg-config libgflags-dev libgtest-dev clang libc++-dev; \
-        git clone -b $(curl -L https://grpc.io/release) https://github.com/grpc/grpc; \
+RUN apt-get install --no-install-recommends -y build-essential autoconf libtool pkg-config libgflags-dev libgtest-dev clang libc++-dev; rm -rf /var/lib/apt/lists/*; \
+        git clone -b $( curl -f -L https://grpc.io/release) https://github.com/grpc/grpc; \
         cd grpc; \
         git submodule update --init; \
         make; \
         make install; \
-        apt-get install -y openjdk-8-jdk; \
+        apt-get install --no-install-recommends -y openjdk-8-jdk; \
         echo "deb [arch=amd64] http://storage.googleapis.com/bazel-apt stable jdk1.8" | tee /etc/apt/sources.list.d/bazel.list; \
-        curl https://bazel.build/bazel-release.pub.gpg | apt-key add -; \
+        curl -f https://bazel.build/bazel-release.pub.gpg | apt-key add -; \
         apt-get update; \
-        apt-get install -y bazel; \
+        apt-get install --no-install-recommends -y bazel; \
         apt-get upgrade -y bazel; \
         bazel build :all; \
         make install; \
@@ -52,12 +52,12 @@ RUN     apt-get install -y build-essential autoconf libtool pkg-config libgflags
         make install;
 
 RUN apt -y remove x264 libx264-dev && \
-    apt -y install build-essential checkinstall cmake pkg-config yasm \
+    apt -y --no-install-recommends install build-essential checkinstall cmake pkg-config yasm \
     git gfortran \
     libjpeg8-dev libpng-dev \
-    software-properties-common
+    software-properties-common && rm -rf /var/lib/apt/lists/*;
 
-RUN apt -y install python3-pip
+RUN apt -y --no-install-recommends install python3-pip && rm -rf /var/lib/apt/lists/*;
 RUN python3 -m pip install --upgrade pip
 RUN python3 -m pip install grpcio
 RUN python3 -m pip install grpcio-tools
@@ -65,7 +65,7 @@ RUN python3 -m pip install grpcio-tools
 RUN add-apt-repository "deb http://security.ubuntu.com/ubuntu xenial-security main"
 RUN apt -y update
 RUN apt-get update
-RUN apt -y install libjasper1 \
+RUN apt -y --no-install-recommends install libjasper1 \
     libjasper-dev \
     libtiff-dev \
     libavcodec-dev libavformat-dev libswscale-dev libdc1394-22-dev \
@@ -83,19 +83,19 @@ RUN apt -y install libjasper1 \
     libgphoto2-dev libeigen3-dev libhdf5-dev doxygen \
     cmake \
     unzip \
-    git
+    git && rm -rf /var/lib/apt/lists/*;
 
-RUN apt-get install -y wget
+RUN apt-get install --no-install-recommends -y wget && rm -rf /var/lib/apt/lists/*;
 
-RUN apt-get install -y vim
+RUN apt-get install --no-install-recommends -y vim && rm -rf /var/lib/apt/lists/*;
 
-RUN pip3 install opencv-contrib-python \
-    && pip3 install torch torchvision \
-    && pip3 install matplotlib \
-    && pip3 install tqdm \
-    && pip3 install dominate \
-    && pip3 install scipy==1.0 \
-    && pip3 install imageio
+RUN pip3 install --no-cache-dir opencv-contrib-python \
+    && pip3 install --no-cache-dir torch torchvision \
+    && pip3 install --no-cache-dir matplotlib \
+    && pip3 install --no-cache-dir tqdm \
+    && pip3 install --no-cache-dir dominate \
+    && pip3 install --no-cache-dir scipy==1.0 \
+    && pip3 install --no-cache-dir imageio
 
 
 WORKDIR ${SINGNET_REPOS}