diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/singnet/semantic-vision/docker/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/singnet/semantic-vision/docker/Dockerfile/repaired.Dockerfile
index 2b44387..cdcbea9 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/singnet/semantic-vision/docker/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/singnet/semantic-vision/docker/Dockerfile/repaired.Dockerfile
@@ -6,7 +6,7 @@
 #
 # To demo:
 #    open in browser localhost:8888
-#    use password: password 
+#    use password: password
 #
 # That will open jupyter notebook with vqa demo
 #
@@ -22,20 +22,20 @@ ENV JAVA_HOME=/usr/lib/jvm/java-1.11.0-openjdk-amd64
 RUN apt-get update ; apt-get -y upgrade ; apt-get -y autoclean
 
 # Java
-RUN apt-get -y install maven screen telnet netcat-openbsd byobu \
-                       wget vim git unzip sudo apt-utils
+RUN apt-get -y --no-install-recommends install maven screen telnet netcat-openbsd byobu \
+                       wget vim git unzip sudo apt-utils && rm -rf /var/lib/apt/lists/*;
 
-RUN apt-get -y install openjdk-11-jdk
+RUN apt-get -y --no-install-recommends install openjdk-11-jdk && rm -rf /var/lib/apt/lists/*;
 
 # GCC and basic build tools
-RUN apt-get -y install gcc g++ make swig ant
+RUN apt-get -y --no-install-recommends install gcc g++ make swig ant && rm -rf /var/lib/apt/lists/*;
 
 # Wordnet
-RUN apt-get -y install wordnet wordnet-dev wordnet-sense-index
+RUN apt-get -y --no-install-recommends install wordnet wordnet-dev wordnet-sense-index && rm -rf /var/lib/apt/lists/*;
 
 # There are UTF8 chars in the Java sources, and the RelEx build will
 # break if build in a C environment.
-RUN apt-get -y install locales && locale-gen en_US.UTF-8
+RUN apt-get -y --no-install-recommends install locales && locale-gen en_US.UTF-8 && rm -rf /var/lib/apt/lists/*;
 ENV LANG en_US.UTF-8
 ENV LANGUAGE en_US:en
 ENV LC_ALL en_US.UTF-8
@@ -46,14 +46,14 @@ WORKDIR /home/Downloads/
 
 
 # build tools
-RUN apt install -y libboost-python-dev libblas-dev libboost-thread-dev libboost-filesystem-dev libboost-system-dev
-RUN apt install -y cmake libboost-program-options-dev libboost-regex-dev libiberty-dev guile-2.2-dev protobuf-compiler uuid-dev
+RUN apt install --no-install-recommends -y libboost-python-dev libblas-dev libboost-thread-dev libboost-filesystem-dev libboost-system-dev && rm -rf /var/lib/apt/lists/*;
+RUN apt install --no-install-recommends -y cmake libboost-program-options-dev libboost-regex-dev libiberty-dev guile-2.2-dev protobuf-compiler uuid-dev && rm -rf /var/lib/apt/lists/*;
 
 # Conda
-# install conda 
+# install conda
 
-RUN apt-get install -y wget bzip2 ca-certificates \
-    libglib2.0-0 libxext6 libsm6 libxrender1
+RUN apt-get install --no-install-recommends -y wget bzip2 ca-certificates \
+    libglib2.0-0 libxext6 libsm6 libxrender1 && rm -rf /var/lib/apt/lists/*;
 
 # Create and switch user. The user is privileged, with no password
 # required.  That is, you can use sudo.
@@ -63,7 +63,7 @@ RUN echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers
 USER relex
 
 RUN sudo chown -R relex:relex .
-RUN sudo chown -R relex:relex /home/relex 
+RUN sudo chown -R relex:relex /home/relex
 # Punch out ports
 ## plain-text-server.sh port
 EXPOSE 3333
@@ -79,13 +79,13 @@ WORKDIR /home/relex
 # The wget gets the latest version w/ wildcard
 
 RUN wget -r --no-parent -nH --cut-dirs=2 https://www.abisource.com/downloads/link-grammar/current/
-RUN tar -zxf current/link-grammar-5*.tar.gz
+RUN tar -zxf current/link-grammar-5*.tar.gz && rm current/link-grammar-5*.tar.gz
 # get linkgrammar version
 RUN bash -l -c 'echo `ls|grep link|sed 's/link-grammar-//g'` >> LINKGRAMMAR_VERSION'
 
 USER root
 
-RUN cd link-grammar-5.*/; ./configure; make -j6; sudo make install; \
+RUN cd link-grammar-5.*/; ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"; make -j6; sudo make install; \
     ldconfig;
 
 USER relex
@@ -103,7 +103,7 @@ USER relex
 
 # Relex -- changes often
 RUN wget https://github.com/opencog/relex/archive/master.tar.gz -O master.tar.gz
-RUN tar -xvf master.tar.gz; cd relex-master; mvn install
+RUN tar -xvf master.tar.gz; rm master.tar.gz cd relex-master; mvn install
 
 
 
@@ -118,7 +118,7 @@ RUN wget --quiet https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86
 
 RUN /home/relex/miniconda3/bin/conda create -y --name pmvqa3 python=3.5 && \
 source /home/relex/miniconda3/bin/activate pmvqa3 && echo 'opencv ==3.1.0' > $(dirname $(which python))/../conda-meta/pinned && \
-    conda install -y opencv=3.1.0 atlas bokeh ca-certificates certifi cffi click cloudpickle cudatoolkit cudnn cycler cython cytoolz dask dask-core dbus decorator distributed expat fontconfig freetype gflags glib glog gst-plugins-base gstreamer h5py hdf5 heapdict icu imageio intel-openmp jbig jinja2 jpeg leveldb libedit libffi libgcc libgcc-ng libgfortran-ng libiconv libpng libprotobuf libstdcxx-ng libtiff libxcb libxml2 lmdb locket markupsafe matplotlib mkl msgpack-python nccl ncurses networkx ninja numpy opencv openssl packaging pandas partd pcre pillow pip protobuf psutil pycparser pyparsing pyqt python python-dateutil pytorch pytz pywavelets pyyaml qt readline scikit-image scipy setuptools sip six snappy sortedcontainers sqlite tblib tk toolz tornado wheel xz yaml zict zlib jupyter && conda install -y -c conda-forge jpype1 && pip install easydict ipywebrtc
+    conda install -y opencv=3.1.0 atlas bokeh ca-certificates certifi cffi click cloudpickle cudatoolkit cudnn cycler cython cytoolz dask dask-core dbus decorator distributed expat fontconfig freetype gflags glib glog gst-plugins-base gstreamer h5py hdf5 heapdict icu imageio intel-openmp jbig jinja2 jpeg leveldb libedit libffi libgcc libgcc-ng libgfortran-ng libiconv libpng libprotobuf libstdcxx-ng libtiff libxcb libxml2 lmdb locket markupsafe matplotlib mkl msgpack-python nccl ncurses networkx ninja numpy opencv openssl packaging pandas partd pcre pillow pip protobuf psutil pycparser pyparsing pyqt python python-dateutil pytorch pytz pywavelets pyyaml qt readline scikit-image scipy setuptools sip six snappy sortedcontainers sqlite tblib tk toolz tornado wheel xz yaml zict zlib jupyter && conda install -y -c conda-forge jpype1 && pip install --no-cache-dir easydict ipywebrtc
 
 
 # vqa piplie(java)
@@ -151,7 +151,7 @@ make ; make pycaffe ; cd ../lib && export PYTHONPATH=$(pwd):$(pwd)/../caffe/pyth
 RUN echo "export PYTHONPATH=\$PYTHONPATH:~/projects/semantic-vision-1/experiments/opencog/pattern_matcher_vqa/feature/bottom-up-attention/lib:~/projects/semantic-vision-1/experiments/opencog/pattern_matcher_vqa/feature/bottom-up-attention/lib/../caffe/python" >> /home/relex/.profile
 
 
-USER relex 
+USER relex
 
 # cogutil
 RUN wget https://github.com/opencog/cogutil/archive/master.zip
@@ -163,7 +163,7 @@ RUN sudo rm -rf cogutil-master master.zip
 
 
 RUN wget https://github.com/opencog/atomspace/archive/master.zip
-RUN unzip master.zip 
+RUN unzip master.zip
 RUN source /home/relex/miniconda3/bin/activate pmvqa3 && cd atomspace-master && mkdir build && cd build/ && cmake .. && make
 run cd atomspace-master/build && sudo make install
 RUN sudo rm -rf atomspace-master/build master.zip
@@ -180,7 +180,7 @@ RUN sudo rm -rf opencog-master/build master.zip
 RUN mv opencog-master /home/relex/projects/opencog
 
 # download some images
-RUN mkdir -p /home/relex/projects/semantic-vision-1/experiments/opencog/pattern_matcher_vqa/images && cd /home/relex/projects/semantic-vision-1/experiments/opencog/pattern_matcher_vqa/images/ && wget https://upload.wikimedia.org/wikipedia/commons/thumb/e/e3/Plains_Zebra_Equus_quagga.jpg/440px-Plains_Zebra_Equus_quagga.jpg 
+RUN mkdir -p /home/relex/projects/semantic-vision-1/experiments/opencog/pattern_matcher_vqa/images && cd /home/relex/projects/semantic-vision-1/experiments/opencog/pattern_matcher_vqa/images/ && wget https://upload.wikimedia.org/wikipedia/commons/thumb/e/e3/Plains_Zebra_Equus_quagga.jpg/440px-Plains_Zebra_Equus_quagga.jpg
 
 RUN echo "export GUILE_AUTO_COMPILE=0" >> /home/relex/.profile
 
@@ -197,7 +197,7 @@ RUN echo "(use-modules (ice-9 readline)) (activate-readline)\
 RUN echo "export PYTHONPATH=\$PYTHONPATH:/usr/local/lib/python3.5/dist-packages/" >> /home/relex/.profile
 RUN echo "export PYTHONPATH=\$PYTHONPATH:/usr/local/lib/python3/dist-packages/" >> /home/relex/.profile
 
-RUN source /home/relex/miniconda3/bin/activate pmvqa3 && jupyter notebook --generate-config 
+RUN source /home/relex/miniconda3/bin/activate pmvqa3 && jupyter notebook --generate-config
 
 RUN echo "c.NotebookApp.password = 'sha1:b6e570f197d6:b920933b262cf450f5c11dc21d878c53972cb2fa'" >> /home/relex/.jupyter/jupyter_notebook_config.py