{
  "startTime": 1674253281903,
  "endTime": 1674253283495,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 1,
        "columnEnd": 71
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 82,
        "lineEnd": 82,
        "columnStart": 1,
        "columnEnd": 67
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 95,
        "lineEnd": 95,
        "columnStart": 1,
        "columnEnd": 72
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 45,
        "lineEnd": 73,
        "columnStart": 1,
        "columnEnd": 18
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 1,
        "columnEnd": 65
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 83,
        "lineEnd": 83,
        "columnStart": 1,
        "columnEnd": 52
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 96,
        "lineEnd": 96,
        "columnStart": 1,
        "columnEnd": 53
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM\talpine:3.14 AS build\n\nWORKDIR\t/tmp/workdir\n\nARG\tPREFIX=\"/tmp/install\"\n\nARG\tBUILD_PACKAGES=\" \\\n\tca-certificates \\\n\tcurl \\\n\tbzip2 \\\n\tpkgconfig \\\n\tcoreutils \\\n\tautoconf \\\n\tautomake \\\n\tlibtool \\\n\tg++ \\\n\tmake \\\n\topenjpeg-dev \\\n\tlibpng-dev \\\n\tnasm \\\n\tyasm \\\n\tcurl \\\n\tlibogg-dev \\\n\topus-dev \\\n\tlibvorbis-dev \\\n\tlame-dev \\\n\tcmake \\\n\tzlib-dev \\\n\topenssl-dev \\\n\tboost-dev \\\n\tlibconfig-dev \\\n\ttaglib-dev \\\n\tgtest-dev\"\n\nRUN\tapk add --no-cache --update ${BUILD_PACKAGES}\n\n# ffmpeg\nARG\tFFMPEG_VERSION=4.1.4\nRUN \\\n\tDIR=/tmp/ffmpeg && mkdir -p ${DIR} && cd ${DIR} && \\\n\tcurl -f -sLO https://ffmpeg.org/releases/ffmpeg-${FFMPEG_VERSION}.tar.bz2 && \\\n\ttar -jx --strip-components=1 -f ffmpeg-${FFMPEG_VERSION}.tar.bz2 && rm ffmpeg-${FFMPEG_VERSION}.tar.bz2\n\nRUN \\\n\tDIR=/tmp/ffmpeg && mkdir -p ${DIR} && cd ${DIR} && \\\n\t./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n\t--prefix=${PREFIX} \\\n\t--disable-autodetect \\\n\t--disable-debug \\\n\t--disable-doc \\\n\t--disable-ffplay \\\n\t--disable-ffprobe \\\n\t--disable-openssl \\\n\t--disable-postproc \\\n\t--disable-pixelutils \\\n\t--disable-network \\\n\t--enable-shared \\\n\t--disable-static \\\n\t--enable-gpl \\\n\t--enable-small \\\n\t--enable-version3 \\\n\t--enable-nonfree \\\n\t--enable-libmp3lame \\\n\t--enable-libopenjpeg \\\n\t--enable-libopus \\\n\t--enable-libvorbis \\\n\t--disable-everything \\\n\t--enable-decoder=aac*,ac3*,alac,als,flac,mp3*,libopus,pcm*,libvorbis,wavpack,wma*,libopenjpg,png \\\n\t--enable-encoder=libmp3lame,libopus,libvorbis \\\n\t--enable-demuxer=aac,aiff,asf,flac,ipod,ogg,matroska,mov,mp3,mp4,wav,wv,webm \\\n\t--enable-muxer=ogg,matroska,mp3,webm \\\n\t--enable-protocol=file,pipe \\\n\t--enable-filter=aresample \\\n\t--extra-libs=-ldl && \\\n\tmake && \\\n\tmake install && \\\n\tmake distclean\n\n# WT\nARG\tWT_VERSION=4.7.2\nRUN \\\n\tDIR=/tmp/wt && mkdir -p ${DIR} && cd ${DIR} && \\\n\tcurl -f -sLO https://github.com/emweb/wt/archive/${WT_VERSION}.tar.gz && \\\n\ttar -x --strip-components=1 -f ${WT_VERSION}.tar.gz && rm ${WT_VERSION}.tar.gz\n\nRUN \\\n\tDIR=/tmp/wt && mkdir -p ${DIR} && cd ${DIR} && \\\n\tcmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=${PREFIX} -DBUILD_EXAMPLES=OFF -DENABLE_LIBWTTEST=OFF -DCONNECTOR_FCGI=OFF && \\\n\tmake && \\\n\tmake install\n\n# STB\nARG\tSTB_VERSION=b42009b3b9d4ca35bc703f5310eedc74f584be58\nRUN \\\n\tDIR=/tmp/stb && mkdir -p ${DIR} && cd ${DIR} && \\\n\tcurl -f -sLO https://github.com/nothings/stb/archive/${STB_VERSION}.tar.gz && \\\n\ttar -x --strip-components=1 -f ${STB_VERSION}.tar.gz && \\\n\tmkdir -p ${PREFIX}/include/stb && \\\n\tcp ./*.h ${PREFIX}/include/stb && rm ${STB_VERSION}.tar.gz\n\n# LMS\nCOPY . /tmp/lms/\nRUN \\\n\tDIR=/tmp/lms/build && mkdir -p ${DIR} && cd ${DIR} && \\\n\tPKG_CONFIG_PATH=/tmp/install/lib/pkgconfig CXXFLAGS=\"-I${PREFIX}/include\" LDFLAGS=\"-L${PREFIX}/lib -Wl,--rpath-link=${PREFIX}/lib\" cmake /tmp/lms/ -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=${PREFIX} -DCMAKE_PREFIX_PATH=${PREFIX} && \\\n\tLD_LIBRARY_PATH=${PREFIX}/lib VERBOSE=1 make && \\\n\tLD_LIBRARY_PATH=${PREFIX}/lib make test && \\\n\tmake install && \\\n\tmkdir -p ${PREFIX}/etc/ && \\\n\tcp /tmp/lms/conf/lms.conf ${PREFIX}/etc\n\n# Now copy all the stuff installed in a new folder (/tmp/fakeroot/)\nRUN \\\n\tmkdir -p /tmp/fakeroot/bin && \\\n\tfor bin in ${PREFIX}/bin/ffmpeg ${PREFIX}/bin/lms*; \\\n\tdo \\\n\t\tstrip --strip-all $bin && \\\n\t\tcp $bin /tmp/fakeroot/bin/; \\\n\tdone && \\\n\tfor lib in ${PREFIX}/lib/*.so; \\\n\tdo \\\n\t\tstrip --strip-all $lib; \\\n\tdone && \\\n\tcp -r ${PREFIX}/lib /tmp/fakeroot/lib && \\\n\tcp -r ${PREFIX}/share /tmp/fakeroot/share && \\\n\trm -rf /tmp/fakeroot/share/doc && \\\n\trm -rf /tmp/fakeroot/share/man\n\n# Remove useless stuff\nRUN \\\n\trm -rf /tmp/fakeroot/share/Wt/resources/jPlayer \\\n\trm -rf /tmp/fakeroot/share/Wt/resources/themes\n\n## Release Stage\nFROM\t\talpine:3.14 AS release\nLABEL\t\tmaintainer=\"Emeric Poupon <itmfr@yahoo.fr>\"\n\nARG\tRUNTIME_PACKAGES=\" \\\n\tlibssl1.1 \\\n\tlibcrypto1.1 \\\n\topenjpeg \\\n\tlibpng \\\n\tlibogg \\\n\topus \\\n\tlibvorbis \\\n\tlame \\\n\tzlib \\\n\tboost-filesystem \\\n\tboost-program_options \\\n\tboost-system \\\n\tboost-thread \\\n\tlibconfig++ \\\n\ttaglib\"\n\nARG\tLMS_USER=lms\nARG\tLMS_GROUP=lms\n\nRUN\tapk add --no-cache --update ${RUNTIME_PACKAGES}\n\nRUN\taddgroup -S ${LMS_GROUP} && \\\n\tadduser -S -H ${LMS_USER} && \\\n\tadduser ${LMS_USER} ${LMS_GROUP} && \\\n\tmkdir -p /var/lms && chown -R ${LMS_USER}:${LMS_GROUP} /var/lms\n\nVOLUME\t/var/lms\nVOLUME\t/music\nVOLUME\t/usr/local/etc\n\nUSER\t${LMS_USER}:${LMS_GROUP}\n\nCOPY\t--from=build /tmp/fakeroot/ /usr\nCOPY\t--from=build /tmp/fakeroot/share/lms/lms.conf /etc/lms.conf\n\nEXPOSE\t5082\n\nENTRYPOINT\t[\"/usr/bin/lms\"]\n\n"
}