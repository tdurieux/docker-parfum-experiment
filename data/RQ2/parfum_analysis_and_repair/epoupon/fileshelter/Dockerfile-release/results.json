{
  "startTime": 1674249294243,
  "endTime": 1674249295135,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 1,
        "columnEnd": 69
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 1,
        "columnEnd": 52
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM\talpine:3.13 AS build\n\nWORKDIR\t/tmp/workdir\n\nARG\tPREFIX=\"/tmp/install\"\n\nARG\tBUILD_PACKAGES=\" \\\n\tca-certificates \\\n\tcurl \\\n\tbzip2 \\\n\tpkgconfig \\\n\tcoreutils \\\n\tg++ \\\n\tmake \\\n\tcurl \\\n\tcmake \\\n\tzlib-dev \\\n\topenssl-dev \\\n\tboost-dev \\\n\tlibconfig-dev\"\n\nRUN\tapk add --no-cache --update ${BUILD_PACKAGES}\n\n# WT\nARG\tWT_VERSION=4.5.0-r1\nRUN \\\n\tDIR=/tmp/wt && mkdir -p ${DIR} && cd ${DIR} && \\\n\tcurl -f -sLO https://github.com/epoupon/wt/archive/${WT_VERSION}.tar.gz && \\\n\ttar -x --strip-components=1 -f ${WT_VERSION}.tar.gz && rm ${WT_VERSION}.tar.gz\n\nRUN \\\n\tDIR=/tmp/wt && mkdir -p ${DIR} && cd ${DIR} && \\\n\tcmake . -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=${PREFIX} -DBUILD_EXAMPLES=OFF -DENABLE_LIBWTTEST=OFF -DCONNECTOR_FCGI=OFF && \\\n\tmake && \\\n\tmake install\n\n# Fileshelter\nCOPY . /tmp/fileshelter/\n\nRUN \\\n\tDIR=/tmp/fileshelter && mkdir -p ${DIR} && cd ${DIR} && \\\n\tPKG_CONFIG_PATH=/tmp/install/lib/pkgconfig CXXFLAGS=\"-I${PREFIX}/include\" LDFLAGS=\"-L${PREFIX}/lib -Wl,--rpath-link=${PREFIX}/lib\" cmake . -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=${PREFIX} -DCMAKE_PREFIX_PATH=${PREFIX} && \\\n\tLD_LIBRARY_PATH=${PREFIX}/lib VERBOSE=1 make && \\\n\tLD_LIBRARY_PATH=${PREFIX}/lib make test && \\\n\tmake install && \\\n\tmkdir -p ${PREFIX}/etc/ && \\\n\tcp conf/fileshelter.conf ${PREFIX}/etc\n\n# Now copy all the stuff installed in a new folder (/tmp/fakeroot/)\nRUN \\\n\tmkdir -p /tmp/fakeroot/bin && \\\n\tfor bin in ${PREFIX}/bin/fileshelter*; \\\n\tdo \\\n\t\tstrip --strip-all $bin && \\\n\t\tcp $bin /tmp/fakeroot/bin/; \\\n\tdone && \\\n\tfor lib in ${PREFIX}/lib/*.so; \\\n\tdo \\\n\t\tstrip --strip-all $lib; \\\n\tdone && \\\n\tcp -r ${PREFIX}/lib /tmp/fakeroot/lib && \\\n\tcp -r ${PREFIX}/share /tmp/fakeroot/share && \\\n\trm -rf /tmp/fakeroot/share/doc && \\\n\trm -rf /tmp/fakeroot/share/man\n\n## Release Stage\nFROM\t\talpine:3.13 AS release\nLABEL\t\tmaintainer=\"Emeric Poupon <emeric.poupon@laposte.net>\"\nLABEL\t\tversion=${FILESHELTER_VERSION}\n\nARG\tRUNTIME_PACKAGES=\" \\\n\tlibssl1.1 \\\n\tlibcrypto1.1 \\\n\tzlib \\\n\tboost-filesystem \\\n\tboost-program_options \\\n\tboost-system \\\n\tboost-thread \\\n\tlibconfig++\"\n\nARG\tFILESHELTER_USER=fileshelter\nARG\tFILESHELTER_GROUP=fileshelter\n\nRUN\tapk add --no-cache --update ${RUNTIME_PACKAGES}\n\nRUN\taddgroup -S ${FILESHELTER_GROUP} && \\\n\tadduser -S -H ${FILESHELTER_USER} && \\\n\tadduser ${FILESHELTER_USER} ${FILESHELTER_GROUP} && \\\n\tmkdir -p /var/fileshelter && chown -R ${FILESHELTER_USER}:${FILESHELTER_GROUP} /var/fileshelter\n\nVOLUME\t/var/fileshelter\n\nUSER\t${FILESHELTER_USER}:${FILESHELTER_GROUP}\n\nCOPY\t--from=build /tmp/fakeroot/ /usr\nCOPY\t--from=build /tmp/fakeroot/share/fileshelter/fileshelter.conf /etc/fileshelter.conf\n\nEXPOSE\t5091\n\nENTRYPOINT\t[\"/usr/bin/fileshelter\"]\n\n"
}