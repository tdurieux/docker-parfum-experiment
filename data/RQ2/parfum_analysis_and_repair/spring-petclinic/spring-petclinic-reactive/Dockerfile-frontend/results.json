{
  "startTime": 1674249971615,
  "endTime": 1674249972212,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 2,
        "columnEnd": 20
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 2,
        "columnEnd": 20
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "####################################################################\n# Stage 1 : NODE_BUILD\n#\n# Use a docker image with NODE to build the deliverable\n# Build everywhere\n####################################################################\n\nFROM node:12 as build\nMAINTAINER Cedrick Lunven\n\n# Get Sources\nRUN apt update && \\\n  apt install --no-install-recommends -y git && \\\n\tgit clone https://github.com/spring-petclinic/spring-petclinic-angular.git /workspace && rm -rf /var/lib/apt/lists/*;\n\nARG NPM_REGISTRY=\" https://registry.npmjs.org\"\n\n# Enforcing env var BACKEND_URL\nRUN echo \"export const environment = {production: false, REST_API_URL:  'http://petclinic-backend:9966/petclinic/api/'};\" > /workspace/src/environments/environment.ts && \\\n\techo \"registry = \\\"$NPM_REGISTRY\\\"\" > /workspace/.npmrc && \\\n    cd /workspace/ && \\\n    npm install && \\\n    npm run build && npm cache clean --force;\n\n####################################################################\n# Stage 2 : RUNTIME\n# Use the DIST folder to package an image with NGINX.\n####################################################################\n\nFROM nginx:1.19.4 AS runtime\n\nCOPY  --from=build /workspace/dist/ /usr/share/nginx/html/\n\nRUN chmod a+rwx /var/cache/nginx /var/run /var/log/nginx                        && \\\n    sed -i.bak 's/listen\\(.*\\)80;/listen 8080;/' /etc/nginx/conf.d/default.conf && \\\n    sed -i.bak 's/^user/#user/' /etc/nginx/nginx.conf\n\nEXPOSE 8080\nUSER nginx\nHEALTHCHECK CMD [ \"service\", \"nginx\", \"status\" ]\n\n\n\n\n"
}