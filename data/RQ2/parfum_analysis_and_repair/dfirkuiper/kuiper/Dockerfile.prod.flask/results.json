{
  "startTime": 1674255228303,
  "endTime": 1674255228722,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 192
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 192
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 192
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:2.7\n\nRUN mkdir -p /app/\nWORKDIR /app\nRUN echo \"nameserver 8.8.8.8\" > /etc/resolv.conf\n\nCOPY ./kuiper/requirements_3.txt ./requirements_3.txt\nCOPY ./kuiper/requirements_2.7.txt ./requirements_2.7.txt\n\nRUN apt update -y && apt install --no-install-recommends -y python-minimal python3 python-dev libsasl2-dev libldap2-dev libssl-dev python-pip build-essential libssl-dev libffi-dev libxml2-dev libxslt1-dev zlib1g-dev python3-pip cron && rm -rf /var/lib/apt/lists/*;\nRUN pip2 install --no-cache-dir --upgrade pip\nRUN pip2 install --no-cache-dir -r \"./requirements_2.7.txt\"\nRUN python3 -m pip install --upgrade pip\nRUN python3 -m pip install -r \"./requirements_3.txt\"\n\nEXPOSE $FLASK_PORT\n\n\nCOPY ./system_health/ /system_health/\nCOPY ./system_health/crontabs/crontab.flask /etc/cron.d/crontab\n\nRUN chmod 0644 /etc/cron.d/crontab\nRUN crontab /etc/cron.d/crontab\nRUN touch /var/log/cron_flask.log\n\nCMD cron && gunicorn --bind $FLASK_IP:$FLASK_PORT Kuiper:app --worker-class $GUNICORN_WORKER_CLASS --workers=$GUNICORN_WORKERS --threads=$GUNICORN_THREADS --timeout=$GUNICORN_TIMEOUT --reload\n"
}