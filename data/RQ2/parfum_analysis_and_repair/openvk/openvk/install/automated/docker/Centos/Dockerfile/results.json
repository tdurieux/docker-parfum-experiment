{
  "startTime": 1674250329327,
  "endTime": 1674250330847,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 17
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 0,
        "columnEnd": 12
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#From https://gist.github.com/WerySkok/77f9c9ec134e98b0fef2b63655ba13d2 instruction\nFROM centos:8\n\n#update and install httpd\nRUN dnf -y update && dnf -y autoremove && dnf install -y httpd\n\n#Let's install EPEL and Remi repos for PHP 7.4:\nRUN dnf -y install epel-release && \\\ndnf -y install https://rpms.remirepo.net/enterprise/remi-release-8.rpm\n\n#Then enable modules that we need:\nRUN dnf -y module enable php:remi-7.4 && \\\ndnf -y module enable nodejs:14\n\n#And install dependencies:\nRUN dnf -y install php php-cli php-common unzip php-zip php-yaml php-gd php-pdo_mysql nodejs git\n\n#Don't forget about Yarn and Composer:\nRUN npm i -g yarn && \\\nphp -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\" && \\\nphp composer-setup.php --filename=composer2 --install-dir=/bin --snapshot && \\\nrm composer-setup.php && npm cache clean --force;\n\n#We will use Percona Server for DB:\nRUN dnf -y install https://repo.percona.com/yum/percona-release-latest.noarch.rpm && \\\npercona-release setup -y ps80 && \\\ndnf -y install percona-server-server percona-toolkit && \\\nsystemctl enable mysqld && \\\necho 'skip-grant-tables' >> /etc/my.cnf\n\n#Additionally, you can install ffmpeg for processing videos.\n#You will need to use RPMFusion repo to install it:\nRUN dnf -y localinstall --nogpgcheck https://download1.rpmfusion.org/free/el/rpmfusion-free-release-8.noarch.rpm && \\\ndnf -y install --nogpgcheck https://download1.rpmfusion.org/free/el/rpmfusion-free-release-8.noarch.rpm\n\n#Then install SDL2 and ffmpeg:\nRUN dnf -y localinstall --nogpgcheck https://pkgs.dyn.su/el8/base/x86_64/raven-release-1.0-2.el8.noarch.rpm && \\\ndnf -y --enablerepo=epel-testing,raven-extras,raven-multimedia install --nogpgcheck SDL2 && \\\ndnf -y install ffmpeg\n\n#Install Chandler and OpenVk/Capcha-extention in /opt:\nRUN cd /opt && \\\ngit clone https://github.com/samukhin/chandler.git && \\\ncd chandler/ && \\\ncomposer2 install && \\\nmv chandler-example.yml chandler.yml && \\\ncd extensions/available/ && \\\ngit clone https://github.com/samukhin/commitcaptcha.git && \\\ncd commitcaptcha/ && \\\ncomposer2 install && \\\ncd .. && \\\ngit clone https://github.com/samukhin/openvk.git && \\\ncd openvk/ && \\\ncomposer2 install && \\\ncd Web/static/js && \\\nyarn install && \\\ncd ../../../ && \\\nmv openvk-example.yml openvk.yml && \\\nln -s /opt/chandler/extensions/available/commitcaptcha/ /opt/chandler/extensions/enabled/commitcaptcha && \\\nln -s /opt/chandler/extensions/available/openvk/ /opt/chandler/extensions/enabled/openvk && yarn cache clean;\n\n#Create database\nRUN cp /opt/chandler/extensions/available/openvk/install/automated/common/create_db.service /etc/systemd/system/ && \\\nchmod 644 /etc/systemd/system/create_db.service && \\\nchmod 777 /opt/chandler/extensions/available/openvk/install/automated/common/autoexec && \\\nsystemctl enable create_db\n\n#Make the user apache owner of the chandler folder:\nRUN cd /opt && \\\nchown -R apache: chandler/\n\n#Now let's create config file /etc/httpd/conf.d/10-openvk.conf and\n#Also enable rewrite_module by creating /etc/httpd/conf.modules.d/02-rewrite.conf\nRUN cp /opt/chandler/extensions/available/openvk/install/automated/common/10-openvk.conf /etc/httpd/conf.d/ && \\\ncp /opt/chandler/extensions/available/openvk/install/automated/common/02-rewrite.conf /etc/httpd/conf.modules.d/\n\n#Make directory for OpenVK logs and make the user apache owner of it:\nRUN mkdir /var/log/openvk && \\\nchown apache: /var/log/openvk/\n\n#And start Apache:\n#RUN systemctl enable httpd\n\n#Start systemd\nCMD [\"/sbin/init\"]\n"
}