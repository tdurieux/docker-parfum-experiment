{
  "startTime": 1674215580915,
  "endTime": 1674215581573,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 22,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 72,
        "columnEnd": 122
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 37,
        "lineEnd": 38,
        "columnStart": 63,
        "columnEnd": 54
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 89
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 22,
        "columnEnd": 49
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 72,
        "columnEnd": 122
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 89
      }
    }
  ],
  "repairedDockerfile": "ARG BASE_IMAGE=nvidia/cuda:11.2.2-cudnn8-devel-ubuntu20.04\nFROM $BASE_IMAGE AS builder\n\nENV DEBIAN_FRONTEND noninteractive\n\nRUN apt-get update \\\n      && apt-get install --no-install-recommends --no-install-suggests -y gnupg2 ca-certificates \\\n            git build-essential libopencv-dev \\\n      && rm -rf /var/lib/apt/lists/*\n\nCOPY configure.sh /tmp/\n\nARG SOURCE_BRANCH=master\nENV SOURCE_BRANCH $SOURCE_BRANCH\n\nARG CONFIG=\"gpu-cv\"\n\nRUN git clone https://github.com/AlexeyAB/darknet.git && cd darknet \\\n      && git checkout $SOURCE_BRANCH \\\n      && /tmp/configure.sh $CONFIG && make \\\n      && cp darknet /usr/local/bin \\\n      && cd .. && rm -rf darknet\n\nFROM nvidia/cuda:11.2.2-cudnn8-runtime-ubuntu20.04\n\nENV DEBIAN_FRONTEND noninteractive\n\nRUN echo \"deb http:// focal main universe\" >> /etc/apt/sources.list\nRUN apt-get update\nRUN apt-get install --no-install-recommends --no-install-suggests -y libopencv-highgui4.2 \\\n      && rm -rf /var/lib/apt/lists/*\n\nCOPY --from=builder /usr/local/bin/darknet /usr/local/bin/darknet\n\n# Install python 3.8.\nRUN apt-get update && apt-get install --no-install-recommends -y apt-file && apt-file update && apt-get install --no-install-recommends -y software-properties-common curl && rm -rf /var/lib/apt/lists/*;\n\nRUN add-apt-repository ppa:deadsnakes/ppa && apt-get update && apt-get install --no-install-recommends -y \\\n    python3.8 python3.8-dev python3-pip python3.8-venv && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    python3.8 -m pip install pip --upgrade && \\\n    update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.8 0\n\n# Make python3.8 the default python version\nRUN update-alternatives --install /usr/bin/python python /usr/bin/python3.8 0\n\nRUN curl -fSsL -O https://bootstrap.pypa.io/get-pip.py && \\\n    python3 get-pip.py && \\\n    rm get-pip.py\n\nRUN pip3 --no-cache-dir install \\\n    future>=0.17.1 \\\n    grpcio \\\n    h5py \\\n    keras_applications>=1.0.8 \\\n    keras_preprocessing>=1.1.0 \\\n    mock \\\n    numpy \\\n    portpicker \\\n    requests \\\n     --ignore-installed six>=1.12.0\n\nWORKDIR /app\nCOPY setup_args.py /app\nCOPY launcher.sh /app\n\nRUN chmod 777 launcher.sh && mkdir backup\nENTRYPOINT [\"./launcher.sh\"]\n"
}