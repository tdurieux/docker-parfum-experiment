{
  "startTime": 1674250871241,
  "endTime": 1674250872274,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 57
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 18,
        "columnEnd": 119
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 16
      }
    }
  ],
  "repairedDockerfile": "# docker build -t ccr.ccs.tencentyun.com/cube-studio/nni:20211003 .\n# docker run --name nni -it -v $PWD:/app -p 8888:8888 ccr.ccs.tencentyun.com/cube-studio/nni:20211003 bash\n# docker run --name nni -it -p 8888:8888 ccr.ccs.tencentyun.com/cube-studio/nni:20211003 bash\n\n#docker run --name nni -it -p 8888:8888 nvidia/cuda:10.1-cudnn7-runtime-ubuntu18.04 bash\nFROM nvidia/cuda:10.1-cudnn7-runtime-ubuntu18.04\n\nLABEL maintainer='Microsoft NNI Team<nni@microsoft.com>'\n\nENV DEBIAN_FRONTEND=noninteractive\n\nRUN apt-get -y update\nRUN apt-get -y --no-install-recommends install \\\n    sudo \\\n    apt-utils \\\n    git \\\n    curl \\\n    vim \\\n    unzip \\\n    wget \\\n    build-essential \\\n    cmake \\\n    libopenblas-dev \\\n    automake \\\n    openssh-client \\\n    openssh-server \\\n    lsof \\\n    python3.6 \\\n    python3-dev \\\n    python3-pip \\\n    python3-tk \\\n    libcupti-dev && apt-get clean && rm -rf /var/lib/apt/lists/*\n\n\n# generate python script\n#\nRUN ln -s python3 /usr/bin/python\n\n#\n# update pip\n#\nRUN pip3 install --no-cache-dir --upgrade pip==20.2.4 setuptools==50.3.2\n\n# numpy 1.19.5  scipy 1.5.4\nRUN pip3 --no-cache-dir install numpy==1.19.5 scipy==1.5.4 tensorflow==2.3.1 Keras==2.4.3 torch==1.7.1 torchvision==0.8.2 pytorch-lightning==1.3.3 scikit-learn==0.24.1 pandas==1.1 lightgbm==2.2.2 && rm ~/.cache\n\nRUN pip3 install --no-cache-dir jupyter jupyterlab numpy==1.19\n\nRUN git clone https://github.com/Microsoft/nni.git && cd nni && python3 -m pip install --upgrade pip setuptools && python3 setup.py develop\n\nRUN apt update && apt install -y --force-yes --no-install-recommends locales ttf-wqy-microhei ttf-wqy-zenhei xfonts-wqy && locale-gen zh_CN && locale-gen zh_CN.utf8 && rm -rf /var/lib/apt/lists/*;\nENV LANG zh_CN.UTF-8\nENV LC_ALL zh_CN.UTF-8\nENV LANGUAGE zh_CN.UTF-8\n\nRUN cd nni && python3 interim_vision_patch.py\n\n#\n# install aml package\n#\nRUN python3 -m pip --no-cache-dir install azureml azureml-sdk\n\nENV PATH=/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/root/.local/bin:/usr/bin:/bin:/sbincd\n\nWORKDIR /root\n\n\n\n# nnictl create --config examples/trials/mnist-pytorch/config.yml -p 8888 --foreground --url_prefix nni/test\n# /app/nni_node/node --max-old-space-size=4096 /app/nni_node/main.js --port 8888 --mode local --experiment_id NjGiK65V --start_mode new --log_dir /root/nni-experiments --log_level info --foreground true --url_prefix nni/test\n\n\n"
}