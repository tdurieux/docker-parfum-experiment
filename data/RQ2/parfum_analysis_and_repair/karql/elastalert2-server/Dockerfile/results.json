{
  "startTime": 1674247082264,
  "endTime": 1674247084281,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.16 as build-elastalert\nARG ELASTALERT_VERSION=2.5.1\nENV ELASTALERT_VERSION=${ELASTALERT_VERSION}\n# URL from which to download ElastAlert 2.\nARG ELASTALERT_URL=https://github.com/jertel/elastalert2/archive/refs/tags/$ELASTALERT_VERSION.zip\nENV ELASTALERT_URL=${ELASTALERT_URL}\n# ElastAlert 2 home directory full path.\nENV ELASTALERT_HOME /opt/elastalert\n\nWORKDIR /opt\n\nRUN apk add --update --no-cache \\\n    cargo ca-certificates \\\n    openssl-dev \\\n    openssl \\\n    python3-dev \\\n    python3 \\\n    py3-pip \\\n    py3-wheel \\\n    py3-yaml \\\n    libffi-dev \\\n    gcc \\\n    musl-dev \\\n    wget && \\\n    pip3 install --no-cache-dir --upgrade pip && \\\n    pip3 install --no-cache-dir cryptography && \\\n    # Download and unpack ElastAlert 2.\n    wget -O elastalert.zip \"${ELASTALERT_URL}\" && \\\n    unzip elastalert.zip && \\\n    rm elastalert.zip && \\\n    mv e* \"${ELASTALERT_HOME}\"\n\nWORKDIR \"${ELASTALERT_HOME}\"\n\n# Install ElastAlert 2.\nRUN python3 setup.py install\n\nFROM node:16.15-alpine3.16 as build-server\n\nWORKDIR /opt/elastalert-server\n\nCOPY package*.json ./\nRUN npm ci\n\nCOPY . .\nRUN npm run build\n\nFROM node:16.15-alpine3.16\n\nLABEL description=\"ElastAlert2 Server\"\nLABEL maintainer=\"Karql <karql.pl@gmail.com>\"\n\n# Set timezone for this container\nENV TZ Etc/UTC\n\nRUN apk add --update --no-cache curl tzdata python3 make libmagic && \\\n    ln -s /usr/bin/python3 /usr/bin/python\n\nCOPY --from=build-elastalert /usr/lib/python3.10/site-packages /usr/lib/python3.10/site-packages\nCOPY --from=build-elastalert /opt/elastalert /opt/elastalert\nCOPY --from=build-elastalert /usr/bin/elastalert* /usr/bin/\n\nCOPY --from=build-server /opt/elastalert-server/dist /opt/elastalert-server/dist\n\nWORKDIR /opt/elastalert-server\n\nCOPY package*.json ./\nRUN npm ci --production\n\nCOPY scripts scripts\n\nCOPY config/elastalert.yaml /opt/elastalert/config.yaml\nCOPY config/elastalert-test.yaml /opt/elastalert/config-test.yaml\nCOPY config/config.json config/config.json\nCOPY rule_templates/ /opt/elastalert/rule_templates\nCOPY elastalert_modules/ /opt/elastalert/elastalert_modules\n\n# Add default rules directory\n# Set permission as unpriviledged user (1000:1000), compatible with Kubernetes\nRUN mkdir -p /opt/elastalert/rules/ /opt/elastalert/server_data/tests/ \\\n    && chown -R node:node /opt\n\nUSER node\n\nEXPOSE 3030\nENTRYPOINT [\"npm\", \"start\"]\n"
}