{
  "startTime": 1674254507826,
  "endTime": 1674254508987,
  "originalSmells": [
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 46,
        "lineEnd": 48,
        "columnStart": 22,
        "columnEnd": 12
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 135,
        "lineEnd": 136,
        "columnStart": 22,
        "columnEnd": 39
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright (c) 2019, rpi-webrtc-streamer Lyu,KeunChang\n#\n# This dockerfile builds rpi-webrtc-streamer to create a docker image\n# for Raspberry PI.\n#\n# To build, you need kclyu/rpi_rootfs which is used as rootfs for\n# Raspberry PI. And it will download the WebRTC and rpi-webrtc-streamer\n# source code and perform the build procedure.\n#\n# Build command:\n#  armv7l:\n#    docker build --rm -t rpi-webrtc-streamer:0.74  -f Dockerfile.build .\n#\n#  armv6l:\n#    docker build --rm -t rpi-webrtc-streamer:0.74 --build-arg ARCH=armv6 -f Dockerfile.build .\n#\n#  - Change the image name and tag as necessary.\n#\n# This argument is required to change commit position of WebRTC native\n# code package. It should match the git commit log.\nARG HASH_COMMIT=NONE\n#\n# arm (default): build for armv7l or later (Raspberry PI2)\n# armv6 : build only for armv6 (Raspberry Zero)\nARG ARCH=arm\n\n# Defines the required paths and variables\n# Using Rpi_RootFS as base image\nFROM kclyu/rpi_rootfs:0.74 AS env_tool_base\nLABEL maintainer=\"lyu.keun.chang@gmail.com\"\nLABEL version=\"0.74\"\nLABEL description=\"Rpi-Webrtc-Streamer Docker builer\"\n\n# multiple ENV command does not working in current dockerfile\n# so, this multiple env definitions are required.\nENV\tWORKSPACE /root/Workspace\nENV WEBRTC_HOME /root/Workspace/webrtc\nENV\tRWS_SRC_HOME /root/Workspace/rpi-webrtc-streamer\nENV RPI_ROOTFS /root/Workspace/rpi_rootfs\n\nENV\tWEBRTC_BUILD_BASE ${WEBRTC_HOME}/src/out\nENV\tWEBRTC_ARM_BUILD ${WEBRTC_BUILD_BASE}/arm_build\nENV\tWEBRTC_ARMV6_BUILD ${WEBRTC_BUILD_BASE}/armv6_build\nENV\tARM_ARGS_GN ${RWS_SRC_HOME}/misc/webrtc_arm_build_args.gn\nENV\tARMV6_ARGS_GN ${RWS_SRC_HOME}/misc/webrtc_armv6_build_args.gn\n\nRUN apt-get update && apt-get -y install  --no-install-recommends  \\\n\t\tant autoconf python bison cmake gawk intltool xutils-dev xsltproc \\\n\t\tpkg-config && rm -rf /var/lib/apt/lists/*;\n\nRUN mkdir -p /root/tools\nWORKDIR /root/tools\nRUN git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git\nENV PATH=\"${PATH}:/root/tools/depot_tools\"\n\n##\n## Downloading WebRTC native code package and Rpi-WebRTC-Streamer sources\nFROM env_tool_base AS build_src_base\n\nRUN mkdir -p ${WEBRTC_HOME}\n# changing working directory\nWORKDIR ${WEBRTC_HOME}\n# fetching WebRTC native source code package without history\nRUN fetch --nohooks --no-history webrtc && \\ \n\t\tgclient sync && \\\n\t\tcd /root/Workspace/webrtc/src && \\\n\t\tgit config branch.autosetupmerge always && \\\n\t\tgit config branch.autosetuprebase always && \\\n\t\tgit checkout master\n\n# to build webrtc source, we need the args.gn file of rpi-webrtc-streamer\nWORKDIR ${WORKSPACE}\nRUN git clone https://github.com/kclyu/rpi-webrtc-streamer.git\n#RUN mkdir -p ${RWS_SRC_HOME}\n#COPY . ${RWS_SRC_HOME}/\n\n##\n## Downloading WebRTC and Rpi-WebRTC-Streamer sources\nFROM build_src_base AS webrtc_build\nARG HASH_COMMIT\nARG ARCH\n\n# changing working directory\nWORKDIR ${WEBRTC_HOME}/src\nRUN if [ \"${HASH_COMMIT}\" = \"NONE\" ]; then \\\n\t\techo \"No need to change comit position\"; \\\n\telse  \\\n\t\techo \"changing commit position: ${HASH}\"; \\\n\t\tgclient sync -n -D -r ${HASH_COMMIT};\\\n\t\tgclient sync; \\\n\tfi\n\n\n# Building WebRTC native code depend on ARCH argument\nRUN if [ \"${ARCH}\" = \"arm\" ]; then  \\\n\t\techo \"Start Building WebRTC (armv7l), arch: ${ARCH}\"; \\\n\t\tmkdir -p ${WEBRTC_ARM_BUILD} && \\\n\t\tcp ${ARM_ARGS_GN} ${WEBRTC_ARM_BUILD}/args.gn && \\\n\t\tgn gen ${WEBRTC_ARM_BUILD}  && \\\n\t\tninja -C ${WEBRTC_ARM_BUILD}; \\\n\telse  \\\t \n\t\techo \"Start Building WebRTC (armv6l), arch: ${ARCH}\"; \\\n\t\tmkdir -p ${WEBRTC_ARMV6_BUILD} && \\\n\t\tcp ${ARMV6_ARGS_GN} ${WEBRTC_ARMV6_BUILD}/args.gn && \\\n\t\tgn gen ${WEBRTC_ARMV6_BUILD} && \\\n\t\tninja -C ${WEBRTC_ARMV6_BUILD}; \\\n\tfi\n\n# RWS building both of arm and armv6\nFROM webrtc_build AS rws_build\nARG HASH_COMMIT\nARG ARCH\n\nWORKDIR ${RWS_SRC_HOME}/src\n# Building Rpi-WebRTC-Streamer depend on ARCH argument\nRUN if [ \"${ARCH}\" = \"arm\" ]; then  \\\n\t\techo \"Start Building RWS (armv7l), arch: ${ARCH}\"; \\\n\t\tmake clean && \\\n\t\tmake RPI_ROOTFS=/root/Workspace/rpi_rootfs; \\\n\telse  \\\t \n\t\techo \"Start Building RWS (armv6l), arch: ${ARCH}\"; \\\n\t\tmake clean &&  \\\n\t\tmake RPI_ROOTFS=/root/Workspace/rpi_rootfs ARCH=armv6; \\\n\tfi\n\nWORKDIR ${RWS_SRC_HOME}\nRUN ls -l webrtc-streamer && echo \"after strip :\" && \\\n\t\tarm-linux-gnueabihf-strip webrtc-streamer  && \\\n\t\tls -l webrtc-streamer\n\nRUN tar cf /root/rws_build.tar etc web-root tools webrtc-streamer\n\n# Running container\n# docker container run --device=/dev/vcsm --device=/dev/vchiq --net=host --mount type=bind,source=/var/run/dbus,target=/var/run/dbus --rm -d rpi-webrtc-streamer\nFROM balenalib/raspberry-pi2:latest\nRUN apt-get update && apt-get -y install --no-install-recommends \\\n\tlibatomic1 libasound2 libavahi-client3 && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /root\nCOPY --from=rws_build /root/rws_build.tar /root/\nRUN tar xvf rws_build.tar && rm rws_build.tar\nRUN ls -l\n\nRUN sed 's/\\/opt\\/rws/\\/root/g' etc/template/webrtc_streamer.conf > etc/webrtc_streamer.conf && \\\n\tcp etc/template/motion_config.conf etc/ && \\\n\tcp etc/template/media_config.conf etc/ && \\\n\tfor dir in 00 01 02 03 04 05 06 07 08 09; do mkdir -p log/${dir}; done;\n\nENTRYPOINT [\"./webrtc-streamer\"]\nCMD [\"-log\",\"/root/log\"]\n\n"
}