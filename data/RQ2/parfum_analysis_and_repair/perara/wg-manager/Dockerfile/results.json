{
  "startTime": 1674250324044,
  "endTime": 1674250324935,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 10,
        "columnStart": 22,
        "columnEnd": 5
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 32,
        "lineEnd": 41,
        "columnStart": 22,
        "columnEnd": 10
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:20.04\nENV TZ=Europe/Minsk\nENV DEBIAN_FRONTEND=noninteractive\n\n#COPY ./wg-manager /tmp/build\nRUN mkdir -p /tmp/build\nWORKDIR /tmp/build\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n  nodejs \\\n  npm \\\n  && rm -rf /var/lib/apt/lists/*\n\n\nRUN npm cache clean --force\nRUN npm install && npm cache clean --force;\nRUN npm install @angular/cli && npm cache clean --force;\nRUN node_modules/@angular/cli/bin/ng build --configuration=\"production\"\nRUN rm -rf node_modules\nRUN apt-get purge nodejs npm -y\n\nFROM ubuntu:20.04\nLABEL maintainer=\"per@sysx.no\"\nENV IS_DOCKER True\nWORKDIR /app\nENV LIBRARY_PATH=/lib:/usr/lib\nENV TZ=Europe/Oslo\nRUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone\nCOPY wg-manager-backend /app\n\n# Install dependencies\n#RUN apk add --no-cache --update wireguard-tools py3-gunicorn python3 py3-pip ip6tables\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n  wireguard-tools \\\n  iptables \\\n  iproute2 \\\n  python3 \\\n  python3-pip \\\n  python3-dev \\\n  python3-gunicorn \\\n  python3-uvicorn \\\n  gunicorn \\\n  && rm -rf /var/lib/apt/lists/*\n\n\nRUN pip3 install --no-cache-dir -r requirements.txt\n\n# Install dependencies\n#RUN apk add --no-cache build-base python3-dev libffi-dev jpeg-dev zlib-dev && \\\n#pip3 install uvicorn && \\\n#pip3 install -r requirements.txt && \\\n#apk del build-base python3-dev libffi-dev jpeg-dev zlib-dev\n\n# Copy startup scripts\nCOPY docker/ ./startup\nRUN chmod 700 ./startup/start.py\n\n# Copy build files from previous step\nCOPY --from=0 /tmp/build/dist /app/build\n\nENTRYPOINT python3 startup/start.py\n\n\n"
}