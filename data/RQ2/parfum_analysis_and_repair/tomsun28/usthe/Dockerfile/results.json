{
  "startTime": 1674254340261,
  "endTime": 1674254341249,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 9
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Stage 1, based on Node.js, to build and compile Angular\n\nFROM node:8-alpine as builder\n\nCOPY package.json package-lock.json ./\n\nRUN npm set progress=false && npm config set depth 0 && npm cache clean --force\n\n## Storing node modules on a separate layer will prevent unnecessary npm installs at each build\nRUN npm i && mkdir /ng-app && cp -R ./node_modules ./ng-app && npm cache clean --force;\n\nWORKDIR /ng-app\n\nCOPY . .\n\nRUN $(npm bin)/ng build --prod\n\n# Stage 2, based on Nginx, to have only the compiled app, ready for production with Nginx\n\nFROM nginx:1.13.3-alpine\n\nCOPY ./nginx/nginx-custom.conf /etc/nginx/conf.d/default.conf\n\n## Remove default nginx website\nRUN rm -rf /usr/share/nginx/html/*\n\n## From ‘builder’ stage copy over the artifacts in dist folder to default nginx public folder\nCOPY --from=builder /ng-app/dist /usr/share/nginx/html\n\nCMD [\"nginx\", \"-g\", \"daemon off;\"]\n"
}