{
  "startTime": 1674254142189,
  "endTime": 1674254143363,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 101,
        "lineEnd": 101,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 111,
        "lineEnd": 111,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 9
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 3,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 9
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 9
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:14.04\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n      libjudy-dev \\\n      libgmp-dev \\\n      libpcap-dev \\\n      libboost-dev \\\n      libboost-test-dev \\\n      libboost-program-options-dev \\\n      libboost-system-dev \\\n      libboost-filesystem-dev \\\n      libboost-thread-dev \\\n      libboost-test-dev \\\n      libevent-dev \\\n      automake \\\n      libtool \\\n      flex \\\n      bison \\\n      pkg-config \\\n      g++ \\\n      libssl-dev \\\n      doxygen \\\n      git \\\n      libedit-dev \\\n      libevent-dev \\\n      libfreetype6-dev \\\n      libpng-dev \\\n      libyaml-0-2 \\\n      libbz2-dev \\\n      libnl-route-3-dev \\\n      openssl \\\n      pkg-config \\\n      python-dev \\\n      python-matplotlib \\\n      python-numpy \\\n      python-pip \\\n      python-scipy \\\n      python-setuptools \\\n      python-yaml \\\n      wget \\\n      ethtool \\\n      vim && rm -rf /var/lib/apt/lists/*;\n\n# install scapy\nRUN mkdir -p /tmp/scapy ; \\\n    cd /tmp/scapy ; \\\n    git clone https://github.com/p4lang/scapy-vxlan.git ; \\\n    cd scapy-vxlan ; \\\n    python setup.py install ; \\\n    rm -fr /tmp/scapy\n\n# install p4-hlir\nRUN mkdir -p /tmp/p4-hlir ; \\\n    cd /tmp/p4-hlir ; \\\n    git clone https://github.com/p4lang/p4-hlir.git ; \\\n    cd p4-hlir ; \\\n    python setup.py install ; \\\n    rm -fr /tmp/p4-hlir\n\n# install ctypesgen\nRUN mkdir -p /tmp/ctypesgen ; \\\n    cd /tmp/ctypesgen ; \\\n    git clone https://github.com/davidjamesca/ctypesgen.git ; \\\n    cd ctypesgen ; \\\n    python setup.py install ; \\\n    rm -fr /tmp/ctypesgen\n\n# install bmv2\nRUN mkdir -p /tmp/bm ; \\\n    cd /tmp/bm ; \\\n    git clone https://github.com/p4lang/behavioral-model ; \\\n    cd behavioral-model ; \\\n    ./install_deps.sh ; \\\n    ./autogen.sh ; \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-pdfixed; \\\n    make ; \\\n    make install ; ldconfig ; \\\n    rm -rf /tmp/bm\n\n# install p4c-bm\nRUN mkdir /tmp/p4c-bm ; \\\n    cd /tmp/p4c-bm ; \\\n    git clone https://github.com/p4lang/p4c-bm ; \\\n    cd p4c-bm ; \\\n    sudo python setup.py install ; \\\n    rm -rf /tmp/p4c-bm\n\n# install p4ofagent\nRUN mkdir /tmp/p4ofagent ; \\\n    cd /tmp/p4ofagent ; \\\n    git clone https://github.com/p4lang/p4ofagent ; \\\n    cd p4ofagent ; \\\n    git submodule update --init ; \\\n    cd submodules/indigo/ ; \\\n    find -name \".gitmodules\" -type f -exec sed -i 's/git@github.com:/https:\\/\\/github.com\\//' {} \\; ; \\\n    git submodule update --init ; \\\n    cd submodules/bigcode/ ; \\\n    find -name \".gitmodules\" -type f -exec sed -i 's/git@github.com:/https:\\/\\/github.com\\//' {} \\; ; \\\n    cd ../../../../ ; \\\n    ./autogen.sh ; \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"; \\\n    make p4ofagent CPPFLAGS=-D_BMV2_ ; \\\n    make install CPPFLAGS=-D_BMV2_ ; \\\n    rm -rf /tmp/p4ofagent\n\n# build switch\nRUN git clone https://github.com/p4lang/switch ; \\\n    cd switch ; \\\n    git submodule update --init --recursive ; \\\n    ./autogen.sh ; \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-bmv2 --with-of; \\\n    make\n"
}