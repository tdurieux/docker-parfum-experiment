{
  "startTime": 1674256196226,
  "endTime": 1674256197105,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 2,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 2,
        "columnEnd": 27
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 35
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:16.04\n\nARG http_proxy\nARG https_proxy\n\nENV http_proxy=${http_proxy} https_proxy=${https_proxy}\n\n# Wireshark hangs waiting for you to type \"no\" unless you provide the answer beforehand\nRUN echo 'wireshark-common wireshark-common/install-setuid boolean false' | debconf-set-selections\n\nRUN apt-get -y update\nRUN apt-get -y --no-install-recommends install postgresql-common && rm -rf /var/lib/apt/lists/*;\n\n# Please don't set up a database for me\nRUN sed -i 's/#\\?\\(create_main_cluster\\).*/\\1 = false/' /etc/postgresql-common/createcluster.conf\n\n# Install things we need\nRUN apt-get -y --no-install-recommends install postgresql postgresql-server-dev-all python3 python3-pip python3-dev virtualenv uwsgi-plugin-python3 libsasl2-dev libldap2-dev supervisor \\\n  rabbitmq-server nginx \\\n  librabbitmq4 ethtool xfsprogs mdadm \\\n  tshark cmake libnuma-dev libssl-dev libhugetlbfs-dev libpcap-dev \\\n  busybox \\\n  wget locate acl sudo iputils-ping && rm -rf /var/lib/apt/lists/*;\n# XXX: Last line above is undocumented dependencies\n\n### Install PFRing\n# XXX: We need to make sure we have legal permission to redistribute NTOP code\nWORKDIR /tmp\nRUN wget https://apt-stable.ntop.org/16.04/all/apt-ntop-stable.deb && \\\n  dpkg -i apt-ntop-stable.deb && \\\n  rm apt-ntop-stable.deb && \\\n  apt-get -y update && \\\n  apt-get -y --no-install-recommends install pfring && rm -rf /var/lib/apt/lists/*;\n\n\n###\n### Install\n###\n\n## Pre-install\n\n# XXX: Combine these into `COPY . /src` for production; we're omitting the docker directory so builds don't have to replay every step when we change this file (the one you're reading right now)\nCOPY Makefile requirements.txt /src/\nCOPY core/ /src/core/\nCOPY etc/ /src/etc/\nCOPY indexer/ /src/indexer/\nCOPY system/ /src/system/\n\nRUN useradd --system capture\n\nWORKDIR /src/\n# Write out an nginx configuration so the install-search-head won't\nRUN sed 's,DESTDIR,/var/pcapdb,g; s,server_name HOSTNAME,server_name _,; s,HOSTNAME,pcapdb,g' etc/nginx.conf.tmpl > /etc/nginx/conf.d/pcapdb.conf\n# Stub out `service` so install-search-head won't try (and fail) to start daemons\nCOPY docker/fake-service.sh /usr/local/bin/service\n# Stub out openssl so install-search-head won't generate a cert and block the build waiting for keyboard input\nCOPY docker/fake-service.sh /usr/local/bin/openssl\n\n## Install\n# XXX: Combine these into `RUN make install-common install-search-head install...` for production\nRUN make install-common\nRUN make install-search-head\nRUN make install-capture-node\nRUN make install-monolithic\n\n## Post-install\n\n# Remove the source tree and fake commands\n#RUN rm -rf /src\nRUN rm -rf /usr/local/bin/service /usr/local/bin/openssl\n\nCOPY docker/pcapdb-omnibus-init.sh /usr/local/sbin/\n\n# XXX: As much as possible, things need to log to stdout\n\nENV PGDATA /var/lib/postgresql/data\nWORKDIR /var/pcapdb\nCMD [ \"/usr/local/sbin/pcapdb-omnibus-init.sh\" ]\n"
}