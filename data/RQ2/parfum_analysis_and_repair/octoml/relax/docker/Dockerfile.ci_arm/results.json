{
  "startTime": 1674254088654,
  "endTime": 1674254089214,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 45
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n\n# CI docker arm env\n# tag: v0.02\n\nFROM ubuntu:18.04\n\nRUN apt-get update --fix-missing && apt-get install --no-install-recommends -y ca-certificates gnupg2 && rm -rf /var/lib/apt/lists/*;\n\nCOPY install/ubuntu_install_core.sh /install/ubuntu_install_core.sh\nRUN bash /install/ubuntu_install_core.sh\n\nCOPY install/ubuntu_install_googletest.sh /install/ubuntu_install_googletest.sh\nRUN bash /install/ubuntu_install_googletest.sh\n\n# Rust env\nCOPY install/ubuntu_install_rust.sh /install/ubuntu_install_rust.sh\nRUN bash /install/ubuntu_install_rust.sh\nENV RUSTUP_HOME /opt/rust\nENV CARGO_HOME /opt/rust\nENV PATH $PATH:$CARGO_HOME/bin\n\n# sccache\nCOPY install/ubuntu_install_sccache.sh /install/ubuntu_install_sccache.sh\nRUN bash /install/ubuntu_install_sccache.sh\nENV PATH /opt/sccache:$PATH\n\nCOPY install/ubuntu_install_llvm.sh /install/ubuntu_install_llvm.sh\nRUN bash /install/ubuntu_install_llvm.sh\n\nCOPY install/ubuntu1804_install_python.sh /install/ubuntu1804_install_python.sh\nRUN bash /install/ubuntu1804_install_python.sh\n\n# Globally disable pip cache\nRUN pip config set global.no-cache-dir false\n\nCOPY install/ubuntu_install_cmake_source.sh /install/ubuntu_install_cmake_source.sh\nRUN bash /install/ubuntu_install_cmake_source.sh\n\nCOPY install/ubuntu_install_python_package.sh /install/ubuntu_install_python_package.sh\nRUN bash /install/ubuntu_install_python_package.sh\n\n# TensorFlow deps\nCOPY install/ubuntu_install_tensorflow_aarch64.sh /install/ubuntu_install_tensorflow_aarch64.sh\nRUN bash /install/ubuntu_install_tensorflow_aarch64.sh\n\n# TFLite deps\nCOPY install/ubuntu_install_tflite.sh /install/ubuntu_install_tflite.sh\nRUN bash /install/ubuntu_install_tflite.sh\n\n# Caffe deps\nCOPY install/ubuntu_install_boost.sh /install/ubuntu_install_boost.sh\nRUN bash /install/ubuntu_install_boost.sh\n\n# Caffe\nCOPY install/ubuntu_install_caffe.sh /install/ubuntu_install_caffe.sh\nRUN bash /install/ubuntu_install_caffe.sh\n\n# AutoTVM deps\nCOPY install/ubuntu_install_redis.sh /install/ubuntu_install_redis.sh\nRUN bash /install/ubuntu_install_redis.sh\n\n# Arm(R) Compute Library\nCOPY install/ubuntu_download_arm_compute_lib_binaries.sh /install/ubuntu_download_arm_compute_lib_binaries.sh\nRUN bash /install/ubuntu_download_arm_compute_lib_binaries.sh\n"
}