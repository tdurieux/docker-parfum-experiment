{
  "startTime": 1674250240149,
  "endTime": 1674250241014,
  "originalSmells": [
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 22,
        "columnEnd": 148
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Base build\nFROM rust:1.60-slim-bullseye AS build\n\nRUN apt-get update && apt-get install -y build-essential=12.* checkinstall=1.* zlib1g-dev=1:* pkg-config=0.29.* libssl-dev=* --no-install-recommends && rm -rf /var/lib/apt/lists/*;\n\nRUN set -ex ; \\\n        mkdir -p /app ;\\\n        useradd appuser ;\\\n        chown -R appuser: /app ;\\\n        mkdir -p /home/appuser ;\\\n        chown -R appuser: /home/appuser\n\nWORKDIR /app\n\n# Hack to enable docker caching\nCOPY Cargo.toml .\nCOPY Cargo.lock .\nCOPY svix-server_derive svix-server_derive\nCOPY svix-server/Cargo.toml svix-server/\nRUN set -ex ;\\\n        mkdir svix-server/src ;\\\n        echo 'fn main() { println!(\"Dummy!\"); }' > svix-server/src/main.rs ;\\\n        cargo build --release ;\\\n        rm -rf svix-server/src\n\nCOPY . .\nRUN cargo build --release --frozen\n\n# Production\nFROM debian:11.2-slim AS prod\n\nRUN set -ex ; \\\n        mkdir -p /app ;\\\n        useradd appuser ;\\\n        chown -R appuser: /app ;\\\n        mkdir -p /home/appuser ;\\\n        chown -R appuser: /home/appuser\n\nUSER appuser\nEXPOSE 8080\n\nCOPY --from=build /app/target/release/svix-server /usr/local/bin/svix-server\n\n# Ignoring this lint, because it's an embedded shell script\n# hadolint ignore=DL3025\nCMD \\\n    set -ex ; \\\n    if [ ! -z \"$WAIT_FOR\" ]; then \\\n        WAIT_FOR_ARG=\"--wait-for 15\"; \\\n    fi ; \\\n    svix-server --run-migrations $WAIT_FOR_ARG\n"
}