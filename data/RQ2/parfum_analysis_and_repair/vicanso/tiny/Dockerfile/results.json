{
  "startTime": 1674255292337,
  "endTime": 1674255293149,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 5,
        "columnEnd": 54
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 5,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 5,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 5,
        "columnEnd": 85
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 5,
        "columnEnd": 46
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 5,
        "columnEnd": 28
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 5,
        "columnEnd": 85
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM rust:1.61.0 as rustbuilder\n\nARG TARGETARCH\n\nENV CAVIF_VERSION=1.3.4\n\nRUN apt-get update -y \\\n  && apt-get install --no-install-recommends -y nasm \\\n  && wget https://github.com/kornelski/cavif-rs/archive/refs/tags/v${CAVIF_VERSION}.tar.gz \\\n  && tar -xzvf v${CAVIF_VERSION}.tar.gz \\\n  && mv cavif-rs-${CAVIF_VERSION} cavif-rs \\\n  && cd cavif-rs \\\n  && cargo build --release && rm v${CAVIF_VERSION}.tar.gz && rm -rf /var/lib/apt/lists/*;\n\nFROM golang:1.18 as builder\n\nARG TARGETARCH\nADD . /tiny\n\nENV PNGQUANT_VERSION=2.17.0\nENV MOZJPEG_VERSION=4.0.3\n\nRUN apt-get update \\\n  && apt-get install --no-install-recommends -y git cmake libpng-dev autoconf automake libtool nasm make wget \\\n  && git clone -b \"$PNGQUANT_VERSION\" --depth=1 https://github.com/kornelski/pngquant.git /pngquant \\\n  && cd /pngquant \\\n  && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --extra-ldflags=-static --disable-sse && make install \\\n  && git clone -b \"v$MOZJPEG_VERSION\" --depth=1 https://github.com/mozilla/mozjpeg.git /mozjpeg \\\n  && cd /mozjpeg \\\n  && mkdir build \\\n  && cd build \\\n  && cmake -G\"Unix Makefiles\" ../ \\\n  && make install \\\n  && cp /mozjpeg/build/cjpeg /bin/ \\\n  && cd /tiny \\\n  && make test \\\n  && make build && rm -rf /var/lib/apt/lists/*;\n\nFROM ubuntu\n\nEXPOSE 7001\nEXPOSE 7002\n\nCOPY --from=builder /usr/local/bin/pngquant /usr/local/bin/\nCOPY --from=builder /mozjpeg/build/cjpeg-static /usr/local/bin/cjpeg\n\nCOPY --from=builder /tiny/tiny-server /usr/local/bin/tiny-server\n\nCOPY --from=rustbuilder /cavif-rs/target/release/cavif /usr/local/bin/cavif\n\nRUN apt-get update \\\n  && apt-get install --no-install-recommends -y ca-certificates netcat \\\n  && apt-get clean \\\n  && rm -rf /var/lib/apt/lists/*\n\nHEALTHCHECK --interval=10s --timeout=3s \\\n  CMD nc -w 1 127.0.0.1 7002\n\nCMD [ \"tiny-server\" ]"
}