{
  "startTime": 1674249293192,
  "endTime": 1674249294388,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 96
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 174
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 135,
        "columnEnd": 176
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 174
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 174
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 135,
        "columnEnd": 176
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 198
      }
    }
  ],
  "repairedDockerfile": "FROM umigs/chiron-core:1.0.0\n\n\n#################\n## MetaCompass ##\n#################\n\n# Pre-reqs\nRUN apt-get install --no-install-recommends -y build-essential libbz2-dev liblzma-dev libncurses5-dev libtbb2 ncbi-blast+ python-software-properties software-properties-common zlib1g-dev python3-dev && rm -rf /var/lib/apt/lists/*;\nRUN pip3 install --no-cache-dir snakemake psutil\nRUN add-apt-repository ppa:webupd8team/java\nRUN apt-get update && echo oracle-java7-installer shared/accepted-oracle-license-v1-1 select true | /usr/bin/debconf-set-selections && apt-get -y --no-install-recommends install oracle-java8-installer && rm -rf /var/lib/apt/lists/*;\n\n# We install bowtie2-legacy since normal bowtie2 doesn't want to play nicely.\nRUN wget -O /opt/bowtie2-2.3.2-legacy-linux-x86_64.zip https://sourceforge.net/projects/bowtie-bio/files/bowtie2/2.3.2/bowtie2-2.3.2-legacy-linux-x86_64.zip/download\nRUN unzip -d /opt/ /opt/bowtie2-2.3.2-legacy-linux-x86_64.zip\nRUN rm /opt/bowtie2-2.3.2-legacy-linux-x86_64.zip\nENV PATH /opt/bowtie2-2.3.2-legacy:$PATH\nENV BT2_HOME=/opt/bowtie2-2.3.2-legacy\n\nRUN svn checkout https://svn.code.sf.net/p/kmer/code/trunk /opt/kmer\nRUN make -C /opt/kmer\nENV PATH $PATH:/opt/kmer/meryl\n\nRUN wget -O /tmp/samtools-1.4.1.tar.bz2 https://github.com/samtools/samtools/releases/download/1.4.1/samtools-1.4.1.tar.bz2\nRUN tar -xjf /tmp/samtools-1.4.1.tar.bz2 -C /tmp/ && rm /tmp/samtools-1.4.1.tar.bz2\nRUN /tmp/samtools-1.4.1/configure --prefix=/opt/samtools-1.4.1 --enable-plugins --enable-libcurl\nRUN mv config.h config.mk config.status /tmp/samtools-1.4.1\nRUN make -C /tmp/samtools-1.4.1 all all-htslib\nRUN make -C /tmp/samtools-1.4.1 install\nENV PATH $PATH:/opt/samtools-1.4.1/bin\n\nRUN git clone https://github.com/voutcn/megahit.git /opt/megahit\nRUN make -C /opt/megahit\nENV PATH $PATH:/opt/megahit\n\nRUN git clone https://github.com/marbl/MetaCompass.git /opt/MetaCompass\nRUN g++ -Wall -W -O2 -o /opt/MetaCompass/bin/extractSeq /opt/MetaCompass/src/utils/extractSeq.cpp\nRUN g++ -Wall -W -O2 -o /opt/MetaCompass/bin/formatFASTA /opt/MetaCompass/src/utils/formatFASTA.cpp\nRUN g++ -Wall -W -O2 -o /opt/MetaCompass/bin/buildcontig /opt/MetaCompass/src/buildcontig/buildcontig.cpp /opt/MetaCompass/src/buildcontig/cmdoptions.cpp /opt/MetaCompass/src/buildcontig/memory.cpp /opt/MetaCompass/src/buildcontig/procmaps.cpp /opt/MetaCompass/src/buildcontig/outputfiles.cpp\nRUN wget --no-check-certificate https://gembox.cbcb.umd.edu/metacompass/markers.tar.gz -P /opt/MetaCompass/src/metaphyler\nRUN tar -xzvf /opt/MetaCompass/src/metaphyler/markers.tar.gz -C /opt/MetaCompass/src/metaphyler/ && rm /opt/MetaCompass/src/metaphyler/markers.tar.gz\nRUN rm /opt/MetaCompass/src/metaphyler/markers.tar.gz\nENV PATH /opt/MetaCompass:/opt/MetaCompass/bin:$PATH\n\n# This needs to happen separately within a startup/init script\nRUN wget -O /opt/MetaCompass/refseq.tar.gz --no-check-certificate https://gembox.cbcb.umd.edu/metacompass/refseq.tar.gz\nRUN tar -xvzf /opt/MetaCompass/refseq.tar.gz -C /opt/MetaCompass/ && rm /opt/MetaCompass/refseq.tar.gz\nRUN rm /opt/MetaCompass/refseq.tar.gz\n"
}