diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/igs/chiron/docker/chiron-metacompass/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/igs/chiron/docker/chiron-metacompass/Dockerfile/repaired.Dockerfile
index 105323d..4b8f317 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/igs/chiron/docker/chiron-metacompass/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/igs/chiron/docker/chiron-metacompass/Dockerfile/repaired.Dockerfile
@@ -6,10 +6,10 @@ FROM umigs/chiron-core:1.0.0
 #################
 
 # Pre-reqs
-RUN apt-get install -y build-essential libbz2-dev liblzma-dev libncurses5-dev libtbb2 ncbi-blast+ python-software-properties software-properties-common zlib1g-dev python3-dev
-RUN pip3 install snakemake psutil
+RUN apt-get install --no-install-recommends -y build-essential libbz2-dev liblzma-dev libncurses5-dev libtbb2 ncbi-blast+ python-software-properties software-properties-common zlib1g-dev python3-dev && rm -rf /var/lib/apt/lists/*;
+RUN pip3 install --no-cache-dir snakemake psutil
 RUN add-apt-repository ppa:webupd8team/java
-RUN apt-get update && echo oracle-java7-installer shared/accepted-oracle-license-v1-1 select true | /usr/bin/debconf-set-selections && apt-get -y install oracle-java8-installer
+RUN apt-get update && echo oracle-java7-installer shared/accepted-oracle-license-v1-1 select true | /usr/bin/debconf-set-selections && apt-get -y --no-install-recommends install oracle-java8-installer && rm -rf /var/lib/apt/lists/*;
 
 # We install bowtie2-legacy since normal bowtie2 doesn't want to play nicely.
 RUN wget -O /opt/bowtie2-2.3.2-legacy-linux-x86_64.zip https://sourceforge.net/projects/bowtie-bio/files/bowtie2/2.3.2/bowtie2-2.3.2-legacy-linux-x86_64.zip/download
@@ -23,7 +23,7 @@ RUN make -C /opt/kmer
 ENV PATH $PATH:/opt/kmer/meryl
 
 RUN wget -O /tmp/samtools-1.4.1.tar.bz2 https://github.com/samtools/samtools/releases/download/1.4.1/samtools-1.4.1.tar.bz2
-RUN tar -xjf /tmp/samtools-1.4.1.tar.bz2 -C /tmp/
+RUN tar -xjf /tmp/samtools-1.4.1.tar.bz2 -C /tmp/ && rm /tmp/samtools-1.4.1.tar.bz2
 RUN /tmp/samtools-1.4.1/configure --prefix=/opt/samtools-1.4.1 --enable-plugins --enable-libcurl
 RUN mv config.h config.mk config.status /tmp/samtools-1.4.1
 RUN make -C /tmp/samtools-1.4.1 all all-htslib
@@ -39,11 +39,11 @@ RUN g++ -Wall -W -O2 -o /opt/MetaCompass/bin/extractSeq /opt/MetaCompass/src/uti
 RUN g++ -Wall -W -O2 -o /opt/MetaCompass/bin/formatFASTA /opt/MetaCompass/src/utils/formatFASTA.cpp
 RUN g++ -Wall -W -O2 -o /opt/MetaCompass/bin/buildcontig /opt/MetaCompass/src/buildcontig/buildcontig.cpp /opt/MetaCompass/src/buildcontig/cmdoptions.cpp /opt/MetaCompass/src/buildcontig/memory.cpp /opt/MetaCompass/src/buildcontig/procmaps.cpp /opt/MetaCompass/src/buildcontig/outputfiles.cpp
 RUN wget --no-check-certificate https://gembox.cbcb.umd.edu/metacompass/markers.tar.gz -P /opt/MetaCompass/src/metaphyler
-RUN tar -xzvf /opt/MetaCompass/src/metaphyler/markers.tar.gz -C /opt/MetaCompass/src/metaphyler/
+RUN tar -xzvf /opt/MetaCompass/src/metaphyler/markers.tar.gz -C /opt/MetaCompass/src/metaphyler/ && rm /opt/MetaCompass/src/metaphyler/markers.tar.gz
 RUN rm /opt/MetaCompass/src/metaphyler/markers.tar.gz
 ENV PATH /opt/MetaCompass:/opt/MetaCompass/bin:$PATH
 
 # This needs to happen separately within a startup/init script
 RUN wget -O /opt/MetaCompass/refseq.tar.gz --no-check-certificate https://gembox.cbcb.umd.edu/metacompass/refseq.tar.gz
-RUN tar -xvzf /opt/MetaCompass/refseq.tar.gz -C /opt/MetaCompass/
+RUN tar -xvzf /opt/MetaCompass/refseq.tar.gz -C /opt/MetaCompass/ && rm /opt/MetaCompass/refseq.tar.gz
 RUN rm /opt/MetaCompass/refseq.tar.gz