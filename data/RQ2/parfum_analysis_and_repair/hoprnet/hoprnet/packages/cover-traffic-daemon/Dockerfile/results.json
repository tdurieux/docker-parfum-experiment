{
  "startTime": 1674221040503,
  "endTime": 1674221041231,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 66
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 19
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 19
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 70,
        "columnEnd": 86
      }
    }
  ],
  "repairedDockerfile": "# Run hopr-cover-traffic-daemon within a single container using npm\n\n# use slim version of node on Debian for smaller image sizes\nFROM node:16-bullseye-slim@sha256:8265ac132f720998222008355e11535caf53d6bccecbb562a055605138975b4e as build\n\n# python is used by some nodejs dependencies as an installation requirement\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y \\\n    git \\\n    python3 \\\n    build-essential && rm -rf /var/lib/apt/lists/*;\n\n# enable to pass the version to Docker using either --build-arg or an\n# environment variable\n# if its not given, yarn will install the latest version of the package\nARG PACKAGE_VERSION\nRUN echo \"ARG PACKAGE_VERSION=${PACKAGE_VERSION}\"\nENV PACKAGE_VERSION=${PACKAGE_VERSION:-}\nRUN echo \"ENV PACKAGE_VERSION=${PACKAGE_VERSION}\"\n\n# making sure some standard environment variables are set for production use\nENV NODE_ENV production\nENV NODE_OPTIONS=--max_old_space_size=4096\nENV npm_config_build_from_source false\n\nWORKDIR /app\n\n# install hoprd as a local module\nRUN yarn add @hoprnet/hopr-cover-traffic-daemon@${PACKAGE_VERSION} && yarn cache clean;\n\n# use slim version of node on Debian for smaller image sizes\nFROM node:16-bullseye-slim@sha256:8265ac132f720998222008355e11535caf53d6bccecbb562a055605138975b4e as runtime\n\n# making sure some standard environment variables are set for production use\nENV NODE_ENV production\nENV DEBUG 'hopr*'\nENV NODE_OPTIONS=--max_old_space_size=4096\n\n# p2p\nEXPOSE 9091\n\n# we use tini as process 1 to catch signals properly, which is also built into\n# D<Plug>_ocker by default\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends \\\n     tini \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false\n\nWORKDIR /app\n\n# copy over the contents of node_modules etc\nCOPY --from=build /app .\n\n# create directory which is later used for the database, so that it inherits\n# permissions when mapped to a volume\nRUN mkdir -p hoprd-db\n\n# set volume which can be mapped by users on the host system\nVOLUME [\"/app/hoprd-db\"]\n\nENTRYPOINT [\"/usr/bin/tini\", \"--\", \"yarn\", \"hopr-cover-traffic-daemon\"]\n"
}