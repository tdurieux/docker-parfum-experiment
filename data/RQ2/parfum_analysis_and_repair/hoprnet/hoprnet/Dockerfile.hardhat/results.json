{
  "startTime": 1674249065090,
  "endTime": 1674249066122,
  "originalSmells": [
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 57
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# use slim version of node on Debian bullseye for smaller image sizes during build\nFROM node:16-bullseye-slim@sha256:8265ac132f720998222008355e11535caf53d6bccecbb562a055605138975b4e as build\n\nLABEL description=\"This image launches a hardhat node running a local network with the HOPR contracts deployed and available.\"\n\n# python is used by some nodejs dependencies as an installation requirement\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends \\\n     build-essential \\\n     ca-certificates \\\n     git \\\n     jq \\\n     libssl-dev \\\n     openssl \\\n     pkg-config \\\n     python3 \\\n     wget \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false\n\n# taken from\n# https://github.com/rust-lang/docker-rust/blob/186e4d580b5581861907c015d6b58919c809e375/1.61.0/bullseye/Dockerfile\nENV RUSTUP_HOME=/usr/local/rustup \\\n    CARGO_HOME=/usr/local/cargo \\\n    PATH=/usr/local/cargo/bin:$PATH \\\n    RUST_VERSION=1.61.0 \\\n    RUSTUP_VERSION=1.24.3\n\n# taken from\n# https://github.com/rust-lang/docker-rust/blob/186e4d580b5581861907c015d6b58919c809e375/1.61.0/bullseye/Dockerfile\nRUN set -eux; \\\n    dpkgArch=\"$(dpkg --print-architecture)\"; \\\n      case \"${dpkgArch}\" in \\\n        amd64) rustArch='x86_64-unknown-linux-gnu'; rustupSha256='3dc5ef50861ee18657f9db2eeb7392f9c2a6c95c90ab41e45ab4ca71476b4338' ;; \\\n        armhf) rustArch='armv7-unknown-linux-gnueabihf'; rustupSha256='67777ac3bc17277102f2ed73fd5f14c51f4ca5963adadf7f174adf4ebc38747b' ;; \\\n        arm64) rustArch='aarch64-unknown-linux-gnu'; rustupSha256='32a1532f7cef072a667bac53f1a5542c99666c4071af0c9549795bbdb2069ec1' ;; \\\n        i386) rustArch='i686-unknown-linux-gnu'; rustupSha256='e50d1deb99048bc5782a0200aa33e4eea70747d49dffdc9d06812fd22a372515' ;; \\\n        *) echo >&2 \"unsupported architecture: ${dpkgArch}\"; exit 1 ;; \\\n      esac; \\\n    url=\"https://static.rust-lang.org/rustup/archive/${RUSTUP_VERSION}/${rustArch}/rustup-init\"; \\\n    wget \"${url}\"; \\\n    echo \"${rustupSha256}  *rustup-init\" | sha256sum -c -; \\\n    chmod +x rustup-init; \\\n    ./rustup-init -y --no-modify-path --profile minimal --default-toolchain ${RUST_VERSION} --default-host ${rustArch}; \\\n    rm rustup-init; \\\n    chmod -R a+w ${RUSTUP_HOME} ${CARGO_HOME}; \\\n    rustup --version; \\\n    cargo --version; \\\n    rustc --version;\n\nWORKDIR /app\n\nCOPY . /app\n\nRUN make -j deps \\\n && make -j build \\\n && cp tsconfig.json packages/ethereum/tsconfig.base.json \\\n && cd packages/ethereum \\\n && cat tsconfig.hardhat.json | jq '.extends = \"./tsconfig.base.json\" | del(.references)' > tsconfig.hardhat.json.new \\\n && mv tsconfig.hardhat.json.new tsconfig.hardhat.json\n\n# use alpine version of node for smallest image sizes\nFROM node:16-alpine as runtime\n\nRUN mkdir /core\n\nWORKDIR /hardhat\n\nCOPY --from=build /app/packages/ethereum .\nCOPY --from=build /app/packages/core/protocol-config.json /core/\n\n# pre-compile as much as we can to reduce startup time\nRUN rm package.json \\\n && mv package.hardhat.json package.json \\\n && yarn \\\n && yarn run compile\n\nCOPY --from=build /app/scripts scripts\n\nEXPOSE 8545\n\nENV NODE_OPTIONS=--max_old_space_size=1024\n\nENTRYPOINT [\"yarn\", \"run\", \"network\", \"--network\", \"hardhat\", \"--show-stack-traces\"]\n"
}