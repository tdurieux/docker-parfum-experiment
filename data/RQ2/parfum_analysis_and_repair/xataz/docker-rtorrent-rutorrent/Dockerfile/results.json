{
  "startTime": 1674253959456,
  "endTime": 1674253961263,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 86,
        "lineEnd": 86,
        "columnStart": 7,
        "columnEnd": 189
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 87,
        "lineEnd": 87,
        "columnStart": 7,
        "columnEnd": 193
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 88,
        "lineEnd": 88,
        "columnStart": 7,
        "columnEnd": 115
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 193,
        "lineEnd": 193,
        "columnStart": 11,
        "columnEnd": 161
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 166,
        "lineEnd": 166,
        "columnStart": 7,
        "columnEnd": 27
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 96,
        "lineEnd": 98,
        "columnStart": 7,
        "columnEnd": 36
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 117,
        "lineEnd": 117,
        "columnStart": 7,
        "columnEnd": 18
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 123,
        "lineEnd": 125,
        "columnStart": 7,
        "columnEnd": 27
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 131,
        "lineEnd": 134,
        "columnStart": 7,
        "columnEnd": 17
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.8\n\nARG BUILD_CORES\nARG MEDIAINFO_VER=0.7.99\nARG RTORRENT_VER=v0.9.7\nARG LIBTORRENT_VER=v0.13.7\nARG LIBZEN_VER=0.4.31\nARG GEOIP_VER=1.1.1\n\nENV UID=991 \\\n    GID=991 \\\n    WEBROOT=/ \\\n    PORT_RTORRENT=45000 \\\n    DHT_RTORRENT=off \\\n    DISABLE_PERM_DATA=false \\\n    PKG_CONFIG_PATH=/usr/local/lib/pkgconfig\n\nLABEL Description=\"rutorrent based on alpine\" \\\n      tags=\"latest\" \\\n      maintainer=\"xataz <https://github.com/xataz>\" \\\n      mediainfo_version=\"${MEDIAINFO_VER}\" \\\n      libtorrent_version=\"${LIBTORRENT_VER}\" \\\n      rtorrent_version=\"${RTORRENT_VER}\" \\\n      libzen_version=\"${LIBZEN_VER}\" \\\n      build_ver=\"201904081410\"\n\nRUN export BUILD_DEPS=\"build-base \\\n                        libtool \\\n                        automake \\\n                        autoconf \\\n                        wget \\\n                        libressl-dev \\\n                        ncurses-dev \\\n                        curl-dev \\\n                        zlib-dev \\\n                        libnl3-dev \\\n                        libsigc++-dev \\\n                        linux-headers \\\n\t\t\tpy-pip\" \\\n    ## Download Package\n    && if [ \"$RTORRENT_VER\" == \"0.9.6\" ]; then CPPUNIT_VER=\"==1.13.2-r1\"; fi \\\n    && apk upgrade --no-cache \\\n    && apk add -X http://dl-cdn.alpinelinux.org/alpine/v3.6/main --no-cache ${BUILD_DEPS} \\\n                ffmpeg \\\n                libnl3 \\\n                ca-certificates \\\n                gzip \\\n                zip \\\n                unrar \\\n                curl \\\n                c-ares \\\n                s6 \\\n                geoip \\\n                geoip-dev \\\n                su-exec \\\n                nginx \\\n                php7 \\\n                php7-fpm \\\n                php7-json \\\n                php7-opcache \\\n                php7-apcu \\\n                php7-mbstring \\\n                php7-ctype \\\n                php7-pear \\\n                php7-dev \\\n\t\tphp7-sockets \\\n\t\tphp7-phar \\\n                libressl \\\n                file \\\n                findutils \\\n                tar \\\n                xz \\\n                screen \\\n                findutils \\\n                bzip2 \\\n                bash \\\n                git \\\n                sox \\\n\t\tpython \\\n                cppunit-dev${CPPUNIT_VER} \\\n                cppunit${CPPUNIT_VER} \\\n    ## Download Sources\n    && git clone https://github.com/esmil/mktorrent /tmp/mktorrent \\\n    && git clone https://github.com/mirror/xmlrpc-c.git /tmp/xmlrpc-c \\\n    && git clone -b ${LIBTORRENT_VER} https://github.com/rakshasa/libtorrent.git /tmp/libtorrent \\\n    && git clone -b ${RTORRENT_VER} https://github.com/rakshasa/rtorrent.git /tmp/rtorrent \\\n    && wget https://mediaarea.net/download/binary/mediainfo/${MEDIAINFO_VER}/MediaInfo_CLI_${MEDIAINFO_VER}_GNU_FromSource.tar.gz -O /tmp/MediaInfo_CLI_${MEDIAINFO_VER}_GNU_FromSource.tar.gz \\\n    && wget https://mediaarea.net/download/binary/libmediainfo0/${MEDIAINFO_VER}/MediaInfo_DLL_${MEDIAINFO_VER}_GNU_FromSource.tar.gz -O /tmp/MediaInfo_DLL_${MEDIAINFO_VER}_GNU_FromSource.tar.gz \\\n    && wget https://downloads.sourceforge.net/zenlib/libzen_${LIBZEN_VER}.tar.gz -O /tmp/libzen_${LIBZEN_VER}.tar.gz \\\n    && cd /tmp \\\n    && tar xzf libzen_${LIBZEN_VER}.tar.gz \\\n    && tar xzf MediaInfo_DLL_${MEDIAINFO_VER}_GNU_FromSource.tar.gz \\\n    && tar xzf MediaInfo_CLI_${MEDIAINFO_VER}_GNU_FromSource.tar.gz \\\n    ## Compile ZenLib\n    && cd /tmp/ZenLib/Project/GNU/Library \\\n    && ./autogen \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/local \\\n                    --enable-shared \\\n                    --disable-static \\\n    && make && make install \\\n    ## Compile mktorrent\n    && cd /tmp/mktorrent \\\n    && make -j ${BUILD_CORES-$(grep -c \"processor\" /proc/cpuinfo)} \\\n    && make install \\\n    ## Compile Mediainfo\n    && cd  /tmp/MediaInfo_DLL_GNU_FromSource \\\n    && ./SO_Compile.sh \\\n    && cd /tmp/MediaInfo_DLL_GNU_FromSource/ZenLib/Project/GNU/Library \\\n    && make install \\\n    && cd /tmp/MediaInfo_DLL_GNU_FromSource/MediaInfoLib/Project/GNU/Library \\\n    && make install \\\n    && cd /tmp/MediaInfo_CLI_GNU_FromSource \\\n    && ./CLI_Compile.sh \\\n    && cd /tmp/MediaInfo_CLI_GNU_FromSource/MediaInfo/Project/GNU/CLI \\\n    && make install \\\n    ## Compile xmlrpc-c\n    && cd /tmp/xmlrpc-c/stable \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n    && make -j ${NB_CORES} \\\n    && make install \\\n    ## Compile libtorrent\n    && cd /tmp/libtorrent \\\n    && ./autogen.sh \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n        --disable-debug \\\n\t\t--disable-instrumentation \\\n    && make -j ${BUILD_CORES-$(grep -c \"processor\" /proc/cpuinfo)} \\\n    && make install \\\n    ## Compile rtorrent\n    && cd /tmp/rtorrent \\\n    && ./autogen.sh \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n        --enable-ipv6 \\\n\t\t--disable-debug \\\n\t\t--with-xmlrpc-c \\\n    && make -j ${BUILD_CORES-$(grep -c \"processor\" /proc/cpuinfo)} \\\n    && make install \\\n    ## Install Rutorrent\n    && mkdir -p /var/www \\\n    && git clone https://github.com/Novik/ruTorrent.git /var/www/html/rutorrent \\\n    && git clone https://github.com/nelu/rutorrent-thirdparty-plugins /tmp/rutorrent-thirdparty-plugins \\\n    && git clone https://github.com/mcrapet/plowshare /tmp/plowshare \\\n    && git clone https://github.com/xombiemp/rutorrentMobile.git /var/www/html/rutorrent/plugins/mobile \\\n    && git clone https://github.com/Phlooo/ruTorrent-MaterialDesign.git /var/www/html/rutorrent/plugins/theme/themes/materialdesign \\\n    && git clone https://github.com/Micdu70/geoip2-rutorrent /var/www/html/rutorrent/plugins/geoip2 \\\n    && rm -rf /var/www/html/rutorrent/plugins/geoip \\\n    && sed -i \"s/'mkdir'.*$/'mkdir',/\" /tmp/rutorrent-thirdparty-plugins/filemanager/flm.class.php \\\n    && sed -i 's#.*/usr/bin/rar.*##' /tmp/rutorrent-thirdparty-plugins/filemanager/conf.php \\\n    && mv /tmp/rutorrent-thirdparty-plugins/* /var/www/html/rutorrent/plugins/ \\\n    && mv /var/www/html/rutorrent /var/www/html/torrent \\\n    ## Install plowshare\n    && cd /tmp/plowshare \\\n    && make \\\n    ## Install geoip files\n    && mkdir -p /usr/share/GeoIP \\\n    && cd /usr/share/GeoIP \\\n    && wget https://geolite.maxmind.com/download/geoip/database/GeoLite2-City.tar.gz \\\n    && wget https://geolite.maxmind.com/download/geoip/database/GeoLite2-Country.tar.gz \\\n    && tar xzf GeoLite2-City.tar.gz \\\n    && tar xzf GeoLite2-Country.tar.gz \\\n    && rm -f *.tar.gz \\\n    && mv GeoLite2-*/*.mmdb . \\\n    && cp *.mmdb /var/www/html/torrent/plugins/geoip2/database/ \\\n    && pecl install geoip-${GEOIP_VER} \\\n    && chmod +x /usr/lib/php7/modules/geoip.so \\\n    ## Install cfscrape\n    && pip install --no-cache-dir cfscrape \\\n    ## cleanup\n    && strip -s /usr/local/bin/rtorrent \\\n    && strip -s /usr/local/bin/mktorrent \\\n    && strip -s /usr/local/bin/mediainfo \\\n    && apk del -X http://dl-cdn.alpinelinux.org/alpine/v3.6/main --no-cache ${BUILD_DEPS} cppunit-dev \\\n    && rm -rf /tmp/*\n\nARG WITH_FILEBOT=NO\nARG FILEBOT_VER=4.7.9\nARG CHROMAPRINT_VER=1.4.3\n\nENV filebot_version=\"${FILEBOT_VER}\" \\\n      chromaprint_ver=\"${CHROMAPRINT_VER}\"\n\nENV FILEBOT_RENAME_METHOD=\"symlink\" \\\n    FILEBOT_RENAME_MOVIES=\"{n} ({y})\" \\\n    FILEBOT_RENAME_SERIES=\"{n}/Season {s.pad(2)}/{s00e00} - {t}\" \\\n    FILEBOT_RENAME_ANIMES=\"{n}/{e.pad(3)} - {t}\" \\\n    FILEBOT_RENAME_MUSICS=\"{n}/{fn}\" \\\n    FILEBOT_LANG=\"fr\" \\\n    FILEBOT_CONFLICT=skip\n\nRUN if [ \"${WITH_FILEBOT}\" == \"YES\" ]; then \\\n        apk add --no-cache openjdk8-jre java-jna-native binutils wget nss \\\n        && mkdir /filebot \\\n        && cd /filebot \\\n        && wget https://downloads.sourceforge.net/project/filebot/filebot/FileBot_${FILEBOT_VER}/FileBot_${FILEBOT_VER}-portable.tar.xz -O /filebot/filebot.tar.xz \\\n        && tar xJf filebot.tar.xz \\\n        && ln -sf /usr/local/lib/libzen.so.0.0.0 /filebot/lib/x86_64/libzen.so \\\n        && ln -sf /usr/local/lib/libmediainfo.so.0.0.0 /filebot/lib/x86_64/libmediainfo.so \\\n        && wget https://github.com/acoustid/chromaprint/releases/download/v${CHROMAPRINT_VER}/chromaprint-fpcalc-${CHROMAPRINT_VER}-linux-x86_64.tar.gz \\\n        && tar xvf chromaprint-fpcalc-${CHROMAPRINT_VER}-linux-x86_64.tar.gz \\\n        && mv chromaprint-fpcalc-${CHROMAPRINT_VER}-linux-x86_64/fpcalc /usr/local/bin \\\n        && strip -s /usr/local/bin/fpcalc \\\n        && apk del --no-cache binutils wget \\\n        && rm -rf /tmp/* \\\n                  /filebot/FileBot_${FILEBOT_VER}-portable.tar.xz \\\n                  /filebot/chromaprint-fpcalc-${CHROMAPRINT_VER}-linux-x86_64.tar.gz\\\n                  /filebot/chromaprint-fpcalc-${CHROMAPRINT_VER}-linux-x86_64 \\\n    ; fi\n\nCOPY rootfs /\nVOLUME /data /config\nEXPOSE 8080\nRUN chmod +x /usr/local/bin/startup\n\nENTRYPOINT [\"/usr/local/bin/startup\"]\nCMD [\"/bin/s6-svscan\", \"/etc/s6.d\"]\n"
}