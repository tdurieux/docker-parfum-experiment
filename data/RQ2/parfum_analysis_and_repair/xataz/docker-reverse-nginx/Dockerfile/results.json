{
  "startTime": 1674220848780,
  "endTime": 1674220850679,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 81,
        "lineEnd": 81,
        "columnStart": 7,
        "columnEnd": 100
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 82,
        "lineEnd": 82,
        "columnStart": 7,
        "columnEnd": 108
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 88,
        "lineEnd": 88,
        "columnStart": 7,
        "columnEnd": 18
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 108,
        "lineEnd": 112,
        "columnStart": 7,
        "columnEnd": 66
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 97,
        "lineEnd": 97,
        "columnStart": 7,
        "columnEnd": 44
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 106,
        "lineEnd": 106,
        "columnStart": 7,
        "columnEnd": 40
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 103,
        "lineEnd": 103,
        "columnStart": 12,
        "columnEnd": 91
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 107,
        "lineEnd": 111,
        "columnStart": 7,
        "columnEnd": 66
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 97,
        "lineEnd": 97,
        "columnStart": 7,
        "columnEnd": 44
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 102,
        "lineEnd": 102,
        "columnStart": 12,
        "columnEnd": 99
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 104,
        "lineEnd": 104,
        "columnStart": 7,
        "columnEnd": 83
      }
    }
  ],
  "repairedDockerfile": "FROM alpine:3.8\n\nLABEL Description=\"reverse with nginx based on alpine\" \\\n      tags=\"latest 1.15.7 1.15\" \\\n      maintainer=\"xataz <https://github.com/xataz>\" \\\n      build_ver=\"201812072230\"\n\nARG NGINX_VER=1.15.7\nARG NGINX_GPG=\"573BFD6B3D8FBC641079A6ABABF5BD827BD9BF62 \\\n               A09CD539B8BB8CBE96E82BDFABD4D3B3F5806B4D \\\n               4C2C85E705DC730833990C38A9376139A524C53E \\\n               65506C02EFC250F1B7A3D694ECF0E90B2C172083 \\\n               B0F4253373F8F6F510D42178520A9993A1C052F8 \\\n               7338973069ED3F443F4D37DFA64FD5B17ADB39A8\"\nARG BUILD_CORES\nARG NGINX_CONF=\"--prefix=/nginx \\\n                --sbin-path=/usr/local/sbin/nginx \\\n                --http-log-path=/nginx/log/nginx_access.log \\\n                --error-log-path=/nginx/log/nginx_error.log \\\n                --pid-path=/nginx/run/nginx.pid \\\n                --lock-path=/nginx/run/nginx.lock \\\n                --user=reverse --group=reverse \\\n                --with-http_ssl_module \\\n                --with-http_v2_module \\\n                --with-http_gzip_static_module \\\n                --with-http_stub_status_module \\\n                --with-threads \\\n                --with-pcre-jit \\\n                --with-ipv6 \\\n                --with-file-aio \\\n                --without-http_ssi_module \\\n                --without-http_scgi_module \\\n                --without-http_uwsgi_module \\\n                --without-http_geo_module \\\n                --without-http_autoindex_module \\\n                --without-http_split_clients_module \\\n                --without-http_memcached_module \\\n                --without-http_empty_gif_module \\\n                --without-http_browser_module\"\nARG NGINX_3RD_PARTY_MODULES=\"--add-module=/tmp/headers-more-nginx-module \\\n                            --add-module=/tmp/nginx-ct \\\n                            --add-module=/tmp/ngx_brotli\"\nARG OPENSSL_VER=1.1.1a\nARG LEGO_VER=v1.2.1\n\nRUN export BUILD_DEPS=\"build-base \\\n                    pcre-dev \\\n                    zlib-dev \\\n                    libc-dev \\\n                    wget \\\n                    gnupg \\\n                    go \\\n                    git \\\n                    autoconf \\\n                    automake \\\n                    libtool \\\n                    cmake \\\n                    binutils \\\n                    linux-headers \\\n                    jemalloc-dev\" \\\n    && NB_CORES=${BUILD_CORES-$(grep -c \"processor\" /proc/cpuinfo)} \\\n    && apk upgrade --no-cache \\\n    && apk add --no-cache ${BUILD_DEPS} \\\n                s6 \\\n                su-exec \\\n                ca-certificates \\\n                curl \\\n                jq \\\n                pcre \\\n                zlib \\\n                bash \\\n                libgcc \\\n                libstdc++ \\\n                jemalloc \\\n                bind-tools \\\n                libressl \\\n    && cd /tmp \\\n    # Download source\n    && git clone https://github.com/openresty/headers-more-nginx-module --depth=1 /tmp/headers-more-nginx-module \\\n    && git clone https://github.com/bagder/libbrotli --depth=1 /tmp/libbrotli \\\n    && git clone https://github.com/google/ngx_brotli --depth=1 /tmp/ngx_brotli \\\n    && wget -q https://nginx.org/download/nginx-${NGINX_VER}.tar.gz -O /tmp/nginx-${NGINX_VER}.tar.gz \\\n    && wget -q https://nginx.org/download/nginx-${NGINX_VER}.tar.gz.asc -O /tmp/nginx-${NGINX_VER}.tar.gz.asc \\\n    && wget -q https://www.openssl.org/source/openssl-${OPENSSL_VER}.tar.gz -O /tmp/openssl-${OPENSSL_VER}.tar.gz \\\n    && git clone https://github.com/grahamedgecombe/nginx-ct --depth=1 /tmp/nginx-ct \\\n    # Brotli\n    && cd /tmp/libbrotli \\\n    && ./autogen.sh \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n    && mkdir brotli/c/tools/.deps \\\n    && touch brotli/c/tools/.deps/brotli-brotli.Po \\\n    && make -j ${NB_CORES} \\\n    && make install \\\n    && cd /tmp/ngx_brotli \\\n    && git submodule update --init \\\n    # OpenSSL\n    && cd /tmp \\\n    && tar xzf openssl-${OPENSSL_VER}.tar.gz \\\n    # Nginx\n    && cd /tmp \\\n    && for server in ha.pool.sks-keyservers.nethkp://keyserver.ubuntu.com:80hkp://p80.pool.sks-keyservers.net:80pgp.mit.edu; do \\\n    \n\t\t\t\t\t\n            echo \"Fetching GPG key $NGINX_GPGKEY from $server\"; \\\n            gpg --batch --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys $NGINX_GPG && found=yes && break; \\\n           done \\\n\n    && gpg --batch --verify nginx-${NGINX_VER}.tar.gz.asc nginx-${NGINX_VER}.tar.gz \\\n    && tar xzf nginx-${NGINX_VER}.tar.gz \\\n    && cd /tmp/nginx-${NGINX_VER} \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" ${NGINX_CONF} ${NGINX_3RD_PARTY_MODULES} \\\n                        --with-cc-opt=\"-O3 -fPIE -fstack-protector-strong -D_FORTIFY_SOURCE=2 -Wformat -Werror=format-security -Wno-deprecated-declarations\" \\\n                        --with-ld-opt=\"-lrt -ljemalloc -Wl,-Bsymbolic-functions -Wl,-z,relro\" \\\n                        --with-openssl-opt='no-async enable-ec_nistp_64_gcc_128 no-shared no-ssl2 no-ssl3 no-comp no-idea no-weak-ssl-ciphers -DOPENSSL_NO_HEARTBEATS -O3 -fPIE -fstack-protector-strong -D_FORTIFY_SOURCE=2' \\\n                        --with-openssl=/tmp/openssl-${OPENSSL_VER} \\\n    && make -j ${NB_CORES} \\\n    && make install \\\n    # Lego\n    && mkdir -p /tmp/go/bin \\\n    && export GOPATH=/tmp/go \\\n    && export GOBIN=$GOPATH/bin \\\n    && git config --global http.https://gopkg.in.followRedirects true \\\n    && git clone -b ${LEGO_VER} https://github.com/xenolf/lego /tmp/go/src/github.com/xenolf/lego \\\n    && if [ \"${LEGO_VER}\" == \"v0.5.0\" ]; then sed -i '70s/record/egoscale.UpdateDNSRecord(record)/' /tmp/go/src/github.com/xenolf/lego/providers/dns/exoscale/exoscale.go; fi \\\n    && go get -v github.com/xenolf/lego \\\n    && mv /tmp/go/bin/lego /usr/local/bin/lego \\\n    # ct-submit\n    && go get github.com/grahamedgecombe/ct-submit \\\n    && mv /tmp/go/bin/ct-submit /usr/local/bin/ct-submit \\\n    # gucci\n    && go get github.com/noqcks/gucci \\\n    && mv /tmp/go/bin/gucci /usr/local/bin/gucci \\\n    # Cleanup\n    && apk del --no-cache ${BUILD_DEPS} \\\n    && rm -rf /tmp/* /root/.cache && rm openssl-${OPENSSL_VER}.tar.gz\n\nCOPY rootfs /\nRUN chmod +x /usr/local/bin/startup /etc/s6.d/*/*\n\nEXPOSE 8080 8443\n\nENV UID=991 \\\n    GID=991 \\\n    EMAIL=admin@mydomain.local \\\n    SWARM=disable \\\n    TLS_VERSIONS=\"TLSv1.1 TLSv1.2\" \\\n    CIPHER_SUITE=\"EECDH+CHACHA20:EECDH+AESGCM\" \\\n    ECDH_CURVE=\"X25519:P-521:P-384:P-256\"\n\nENTRYPOINT [\"/usr/local/bin/startup\"]\nCMD [\"/bin/s6-svscan\", \"/etc/s6.d\"]\n"
}