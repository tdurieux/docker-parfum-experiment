diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/gaia-pipeline/gaia/docker/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/gaia-pipeline/gaia/docker/Dockerfile/repaired.Dockerfile
index c4eb031..1d4c59b 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/gaia-pipeline/gaia/docker/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/gaia-pipeline/gaia/docker/Dockerfile/repaired.Dockerfile
@@ -17,7 +17,7 @@ RUN apt-get update && apt-get install -y --no-install-recommends \
 ENV GOLANG_VERSION 1.17
 
 RUN set -eux; \
-	\
+
 # this "case" statement is generated via "update.sh"
 	dpkgArch="$(dpkg --print-architecture)"; \
 	case "${dpkgArch##*-}" in \
@@ -30,13 +30,13 @@ RUN set -eux; \
 		*) goRelArch='src'; goRelSha256='3a70e5055509f347c0fb831ca07a2bf3b531068f349b14a3c652e9b5b67beb5d'; \
 			echo >&2; echo >&2 "warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source"; echo >&2 ;; \
 	esac; \
-	\
+
 	url="https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz"; \
 	wget -O go.tgz "$url"; \
-	echo "${goRelSha256} *go.tgz" | sha256sum -c -; \
+	echo "${goRelSha256}  *go.tgz" | sha256sum -c -; \
 	tar -C /usr/local -xzf go.tgz; \
 	rm go.tgz; \
-	\
+
 	if [ "$goRelArch" = 'src' ]; then \
 		echo >&2; \
 		echo >&2 'error: UNIMPLEMENTED'; \
@@ -44,7 +44,7 @@ RUN set -eux; \
 		echo >&2; \
 		exit 1; \
 	fi; \
-	\
+
 	export PATH="/usr/local/go/bin:$PATH"; \
 	go version
 
@@ -124,10 +124,10 @@ COPY docker/settings-docker.xml /usr/share/maven/ref/
 # --------------- End Maven Part ---------------
 
 # --------------- Start C++ Part ---------------
-RUN apt-get update && apt-get install -y \
+RUN apt-get update && apt-get install --no-install-recommends -y \
             build-essential autoconf git pkg-config \
             automake libtool curl make unzip \
-            && apt-get clean
+            && apt-get clean && rm -rf /var/lib/apt/lists/*;
 
 # install protobuf first, then grpc
 ENV GRPC_RELEASE_TAG v1.29.x
@@ -136,7 +136,7 @@ RUN git clone -b ${GRPC_RELEASE_TAG} https://github.com/grpc/grpc /var/local/git
     git submodule update --init && \
     echo "--- installing protobuf ---" && \
     cd third_party/protobuf && \
-    ./autogen.sh && ./configure --enable-shared && \
+    ./autogen.sh && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --enable-shared && \
     make -j$(nproc) && make install && make clean && ldconfig && \
     echo "--- installing grpc ---" && \
     cd /var/local/git/grpc && \
@@ -171,14 +171,14 @@ RUN set -ex \
 	&& rm -rf /var/lib/apt/lists/* \
 	\
 	&& wget -O ruby.tar.xz "https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR}/ruby-$RUBY_VERSION.tar.xz" \
-	&& echo "$RUBY_DOWNLOAD_SHA256 *ruby.tar.xz" | sha256sum -c - \
-	\
+	&& echo "$RUBY_DOWNLOAD_SHA256  *ruby.tar.xz" | sha256sum -c - \
+
 	&& mkdir -p /usr/src/ruby \
 	&& tar -xJf ruby.tar.xz -C /usr/src/ruby --strip-components=1 \
 	&& rm ruby.tar.xz \
-	\
+
 	&& cd /usr/src/ruby \
-	\
+
 # hack in "ENABLE_PATH_CHECK" disabling to suppress:
 #   warning: Insecure world writable dir
 	&& { \
@@ -187,7 +187,7 @@ RUN set -ex \
 		cat file.c; \
 	} > file.c.new \
 	&& mv file.c.new file.c \
-	\
+
 	&& autoconf \
 	&& gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
 	&& ./configure \
@@ -196,7 +196,7 @@ RUN set -ex \
 		--enable-shared \
 	&& make -j "$(nproc)" \
 	&& make install \
-	\
+
 	&& apt-get purge -y --auto-remove $buildDeps \
 	&& cd / \
 	&& rm -r /usr/src/ruby \
@@ -230,7 +230,7 @@ RUN ARCH= && dpkgArch="$(dpkg --print-architecture)" \
     arm64) ARCH='arm64';; \
     armhf) ARCH='armv7l';; \
     i386) ARCH='x86';; \
-    *) echo "unsupported architecture"; exit 1 ;; \
+    * echo "unsupported  architecture"; exit 1;; \
   esac \
   # gpg keys listed at https://github.com/nodejs/node#release-keys
   && set -ex \
@@ -277,7 +277,7 @@ RUN apt-get update && apt-get install -y --no-install-recommends \
 		python2.7-dev \
         git \
 	&& rm -rf /var/lib/apt/lists/* \
-    && pip install virtualenv grpcio
+    && pip install --no-cache-dir virtualenv grpcio
 
 # Directory for the binary
 WORKDIR /app