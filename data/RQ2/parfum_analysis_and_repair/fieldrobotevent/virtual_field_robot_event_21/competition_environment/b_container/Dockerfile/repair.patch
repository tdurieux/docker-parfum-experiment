diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/fieldrobotevent/virtual_field_robot_event_21/competition_environment/b_container/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/fieldrobotevent/virtual_field_robot_event_21/competition_environment/b_container/Dockerfile/repaired.Dockerfile
index 2b5ed99..cdd5d1e 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/fieldrobotevent/virtual_field_robot_event_21/competition_environment/b_container/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/fieldrobotevent/virtual_field_robot_event_21/competition_environment/b_container/Dockerfile/repaired.Dockerfile
@@ -4,9 +4,9 @@ FROM ros:melodic-robot
 # Robot dependencies (this is the software required by your own robot)
 RUN apt-key adv --keyserver 'hkp://keyserver.ubuntu.com:80' --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654 && \
   apt-get update && \
-  apt-get -y install ros-melodic-desktop-full ros-melodic-pointgrey-camera-description && \
-  apt-get -y install ros-melodic-robot-localization ros-melodic-twist-mux && \
-  apt-get -y install ros-melodic-interactive-marker-twist-server ros-melodic-hector-gazebo-plugins && \
+  apt-get -y --no-install-recommends install ros-melodic-desktop-full ros-melodic-pointgrey-camera-description && \
+  apt-get -y --no-install-recommends install ros-melodic-robot-localization ros-melodic-twist-mux && \
+  apt-get -y --no-install-recommends install ros-melodic-interactive-marker-twist-server ros-melodic-hector-gazebo-plugins && \
   rm -rf /var/lib/apt/lists/*
 
 # clone the git repository from your robot into your catkin workspace
@@ -25,10 +25,10 @@ RUN sed -i 's|^\(source .*\)|\1 \&\& source /catkin/devel/setup.bash|g' /ros_ent
 VOLUME ["/catkin/src/Virtual_Field_Robot_Event/virtual_maize_field/map"]
 VOLUME ["/catkin/src/Virtual_Field_Robot_Event/virtual_maize_field/launch"]
 
-# setup the ros master to communicate with the gazebo container. 
+# setup the ros master to communicate with the gazebo container.
 ENV ROS_MASTER_URI=http://acontainer:11311
 
-# launch your robot. The wait command ensures that this launch file waits for the gazebo container to start the ros server. 
+# launch your robot. The wait command ensures that this launch file waits for the gazebo container to start the ros server.
 
 # start task 1, and in the background sleep for 999999 seconds
 CMD sh -c "stdbuf -oL roslaunch example_robot_brain task_1.launch --wait --screen; sleep 999999"