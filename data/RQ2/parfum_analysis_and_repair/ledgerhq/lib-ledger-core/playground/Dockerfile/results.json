{
  "startTime": 1674220505655,
  "endTime": 1674220507553,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 17
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 13
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 20,
        "columnStart": 22,
        "columnEnd": 15
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 20,
        "columnStart": 22,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 17,
        "columnEnd": 33
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 41,
        "columnEnd": 57
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 20,
        "columnEnd": 36
      }
    }
  ],
  "repairedDockerfile": "FROM debian:buster\n\nARG LIBCORE_BRANCH=develop\n\n# Install build and dev dependencies\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    build-essential \\\n    cmake \\\n    curl \\\n    git \\\n    libXss1 \\\n    libasound2 \\\n    libgconf-2-4 \\\n    libgtk2.0 \\\n    libnss3 \\\n    libqt5websockets5-dev \\\n    libudev \\\n    libudev-dev \\\n    python3 \\\n    qt5-default \\\n    qtbase5-dev && rm -rf /var/lib/apt/lists/*;\n\n# nvm\nCOPY install_nvm.sh /opt/install_nvm.sh\nRUN export NVM_DIR=\"$HOME/.nvm\"\nRUN \"$NVM_DIR/nvm.sh\"\nRUN nvm install 8.14.0\nRUN nvm use 8.14.0\n\n# yarn\nRUN npm i yarn -g && npm cache clean --force;\n\n# Get libcore, bindings and Live Desktop\nRUN mkdir /ledger\nWORKDIR /ledger\nRUN git clone --depth 1 --recurse-submodules --branch $LIBCORE_BRANCH https://github.com/LedgerHQ/lib-ledger-core.git\nRUN git clone --depth 1 https://github.com/LedgerHQ/lib-ledger-core-node-bindings\nRUN git clone --depth 1 --branch develop https://github.com/LedgerHQ/ledger-live-desktop.git\n\n# Compile libcore\nRUN mkdir -p lib-ledger-core/build\nWORKDIR /ledger/lib-ledger-core/build\nRUN pwd\nRUN cmake -DCMAKE_BUILD_TYPE=Debug ..\nRUN make -j8\n\n# Node binding\nWORKDIR /ledger/lib-ledger-core-node-bindings\n\n# Apply a patch to ensure we don’t grab libcore library from S3 but use ours instead\nRUN sed -i /\"python preinstall\"/d package.json\n\n# Copy libcore library\nRUN mkdir -p {lib,build/Release}\nRUN cp /ledger/lib-ledger-core/build/core/src/libledger-core.so lib\nRUN cp /ledger/lib-ledger-core/build/core/src/libledger-core.so build/Release\n\n# Register the binding with yarn\nRUN yarn link && yarn cache clean;\n\n# Live Desktop\nWORKDIR /ledger/ledger-live-desktop\n\n# Link to the node binding\nRUN yarn link \"@ledgerhq/ledger-core\" && yarn cache clean;\n\n# Compile Like Desktop\nRUN yarn install && yarn cache clean;\n\n# Aaaaand we’re done; default to running Live Desktop\nCMD [\"yarn\", \"start\"]\n"
}