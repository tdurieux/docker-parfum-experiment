{
  "startTime": 1674215641285,
  "endTime": 1674215642511,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 86,
        "lineEnd": 86,
        "columnStart": 4,
        "columnEnd": 161
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 138,
        "lineEnd": 138,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 96,
        "lineEnd": 96,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 40,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 61,
        "lineEnd": 63,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 70,
        "lineEnd": 72,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 96,
        "lineEnd": 96,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 101,
        "lineEnd": 114,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 127,
        "lineEnd": 131,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 96,
        "lineEnd": 96,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 96,
        "lineEnd": 96,
        "columnStart": 4,
        "columnEnd": 42
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 95,
        "lineEnd": 95,
        "columnStart": 4,
        "columnEnd": 69
      }
    }
  ],
  "repairedDockerfile": "ARG tag=artful\nFROM ubuntu:${tag}\nMAINTAINER Diego Ferigo <dgferigo@gmail.com>\n\n# Utilities\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y \\\n        sudo \\\n        software-properties-common \\\n        apt-transport-https \\\n        wget \\\n        nano \\\n        dbus-x11 \\\n        tree \\\n        bash-completion \\\n        libgnome-keyring0 \\\n        gnupg2 \\\n        python-pip \\\n        python-pygments \\\n        colordiff \\\n        octave \\\n        locales \\\n        && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    pip install --no-cache-dir colour-valgrind\n\n# Setup locales\nRUN sed -i 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/g' /etc/locale.gen && \\\n    locale-gen &&\\\n    update-locale LANG=\"en_US.UTF-8\"\n\n# Updated clang ppa\nARG clang_version=6.0\nENV CLANG_VER=${clang_version}\nRUN wget -nv -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \\\n    apt-add-repository -y \"deb http://apt.llvm.org/`lsb_release -cs`/ llvm-toolchain-`lsb_release -cs`-${CLANG_VER} main\"\n\n# Build and development tools\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y \\\n        build-essential \\\n        git \\\n        cmake \\\n        cmake-curses-gui \\\n        ninja-build \\\n        llvm-${CLANG_VER} \\\n        clang-${CLANG_VER} \\\n        lldb-${CLANG_VER} \\\n        libclang-${CLANG_VER}-dev \\\n        clang-format-${CLANG_VER} \\\n        gdb \\\n        valgrind \\\n        valkyrie \\\n        ccache \\\n        doxygen \\\n        && \\\n    rm -rf /var/lib/apt/lists/*\n\n# Setup HW Acceleration for Intel graphic cards\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y \\\n        libgl1-mesa-glx \\\n        libgl1-mesa-dri && \\\n    rm -rf /var/lib/apt/lists/*\n\n# Atom Editor\n# In the future, check if libxss1 will become an atom package dependency\nRUN add-apt-repository -y ppa:webupd8team/atom &&\\\n    apt-get update && \\\n    apt-get install --no-install-recommends -y \\\n        libxss1 \\\n        atom && \\\n    rm -rf /var/lib/apt/lists/*\n\n# Atom packages\nCOPY atom_packages.txt /usr/local/etc\nRUN apm install --packages-file /usr/local/etc/atom_packages.txt\n\n# Packages with no ppa\n# ====================\n\n# QtCreator\nARG QTCREATOR_VERSION=4.5.0\nCOPY QtCreatorSetup.js /tmp/QtCreatorSetup.js\nRUN cd /tmp && \\\n    wget https://download.qt.io/official_releases/qtcreator/${QTCREATOR_VERSION%.*}/${QTCREATOR_VERSION}/qt-creator-opensource-linux-x86_64-$QTCREATOR_VERSION.run && \\\n    chmod +x qt-creator-opensource-linux-x86_64-${QTCREATOR_VERSION}.run && \\\n    ./qt-creator-opensource-linux-x86_64-${QTCREATOR_VERSION}.run --platform minimal --script QtCreatorSetup.js && \\\n    rm /tmp/qt-creator-opensource-linux-x86_64-${QTCREATOR_VERSION}.run /tmp/QtCreatorSetup.js\nENV PATH=$PATH:/opt/qtcreator/bin\n\n# Gitkraken\nARG GITKRAKEN_VER=3.3.4\nRUN cd /tmp &&\\\n    wget https://release.gitkraken.com/linux/v${GITKRAKEN_VER}.deb && \\\n    apt install -y --no-install-recommends /tmp/v${GITKRAKEN_VER}.deb && \\\n    rm v${GITKRAKEN_VER}.deb && rm -rf /var/lib/apt/lists/*;\n\n# rr\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y \\\n        ccache \\\n        cmake \\\n        make \\\n        g++-multilib \\\n        gdb \\\n        pkg-config \\\n        realpath \\\n        python-pexpect \\\n        manpages-dev \\\n        git \\\n        ninja-build \\\n        capnproto \\\n        libcapnp-dev && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    cd /tmp && \\\n    git clone https://github.com/mozilla/rr.git && \\\n    cd rr && mkdir build && cd build && \\\n    CC=clang-${CLANG_VER} CXX=clang++-${CLANG_VER} cmake -G Ninja .. && \\\n    cmake --build . && \\\n    cmake --build . --target install && \\\n    rm -r /tmp/rr\n\n# SWIG with Matlab / Octave support\n# ... waiting its upstream merge\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y \\\n        autotools-dev \\\n        automake \\\n        bison \\\n        libpcre3-dev && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    cd /tmp/ && \\\n    git clone https://github.com/jaeandersson/swig.git && \\\n    cd swig && \\\n    git checkout matlab && \\\n    sh autogen.sh && \\\n    CC=clang-${CLANG_VER} CXX=clang++-${CLANG_VER} ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n    make -j2 && \\\n    make install && \\\n    rm -r /tmp/swig\n\n# Setup an additional entrypoint script\nCOPY setup.sh /usr/sbin/setup_tools.sh\nCOPY entrypoint.sh /usr/sbin/entrypoint_tools.sh\nRUN chmod 755 /usr/sbin/setup_tools.sh\nRUN chmod 755 /usr/sbin/entrypoint_tools.sh\nENTRYPOINT [\"/usr/sbin/entrypoint_tools.sh\"]\nCMD [\"bash\"]\n"
}