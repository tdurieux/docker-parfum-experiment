diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/diegoferigo/dockerfiles/Tools/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/diegoferigo/dockerfiles/Tools/Dockerfile/repaired.Dockerfile
index 6674951..2f20b32 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/diegoferigo/dockerfiles/Tools/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/diegoferigo/dockerfiles/Tools/Dockerfile/repaired.Dockerfile
@@ -1,11 +1,10 @@
-# Use artful as default tag. Build with e.g. --build-arg tag=xenial to override.
 ARG tag=artful
 FROM ubuntu:${tag}
 MAINTAINER Diego Ferigo <dgferigo@gmail.com>
 
 # Utilities
-RUN apt-get update &&\
-    apt-get install -y \
+RUN apt-get update && \
+    apt-get install --no-install-recommends -y \
         sudo \
         software-properties-common \
         apt-transport-https \
@@ -21,9 +20,9 @@ RUN apt-get update &&\
         colordiff \
         octave \
         locales \
-        &&\
-    rm -rf /var/lib/apt/lists/* &&\
-    pip install colour-valgrind
+        && \
+    rm -rf /var/lib/apt/lists/* && \
+    pip install --no-cache-dir colour-valgrind
 
 # Setup locales
 RUN sed -i 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/g' /etc/locale.gen && \
@@ -33,12 +32,12 @@ RUN sed -i 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/g' /etc/locale.gen && \
 # Updated clang ppa
 ARG clang_version=6.0
 ENV CLANG_VER=${clang_version}
-RUN wget -nv -O - http://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - &&\
+RUN wget -nv -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \
     apt-add-repository -y "deb http://apt.llvm.org/`lsb_release -cs`/ llvm-toolchain-`lsb_release -cs`-${CLANG_VER} main"
 
 # Build and development tools
-RUN apt-get update &&\
-    apt-get install -y \
+RUN apt-get update && \
+    apt-get install --no-install-recommends -y \
         build-essential \
         git \
         cmake \
@@ -54,23 +53,23 @@ RUN apt-get update &&\
         valkyrie \
         ccache \
         doxygen \
-        &&\
+        && \
     rm -rf /var/lib/apt/lists/*
 
 # Setup HW Acceleration for Intel graphic cards
-RUN apt-get update &&\
-    apt-get install -y \
+RUN apt-get update && \
+    apt-get install --no-install-recommends -y \
         libgl1-mesa-glx \
-        libgl1-mesa-dri &&\
+        libgl1-mesa-dri && \
     rm -rf /var/lib/apt/lists/*
 
 # Atom Editor
 # In the future, check if libxss1 will become an atom package dependency
 RUN add-apt-repository -y ppa:webupd8team/atom &&\
-    apt-get update &&\
-    apt-get install -y \
+    apt-get update && \
+    apt-get install --no-install-recommends -y \
         libxss1 \
-        atom &&\
+        atom && \
     rm -rf /var/lib/apt/lists/*
 
 # Atom packages
@@ -83,23 +82,23 @@ RUN apm install --packages-file /usr/local/etc/atom_packages.txt
 # QtCreator
 ARG QTCREATOR_VERSION=4.5.0
 COPY QtCreatorSetup.js /tmp/QtCreatorSetup.js
-RUN cd /tmp &&\
-    wget http://download.qt.io/official_releases/qtcreator/${QTCREATOR_VERSION%.*}/${QTCREATOR_VERSION}/qt-creator-opensource-linux-x86_64-$QTCREATOR_VERSION.run &&\
-    chmod +x qt-creator-opensource-linux-x86_64-${QTCREATOR_VERSION}.run &&\
-    ./qt-creator-opensource-linux-x86_64-${QTCREATOR_VERSION}.run --platform minimal --script QtCreatorSetup.js &&\
+RUN cd /tmp && \
+    wget https://download.qt.io/official_releases/qtcreator/${QTCREATOR_VERSION%.*}/${QTCREATOR_VERSION}/qt-creator-opensource-linux-x86_64-$QTCREATOR_VERSION.run && \
+    chmod +x qt-creator-opensource-linux-x86_64-${QTCREATOR_VERSION}.run && \
+    ./qt-creator-opensource-linux-x86_64-${QTCREATOR_VERSION}.run --platform minimal --script QtCreatorSetup.js && \
     rm /tmp/qt-creator-opensource-linux-x86_64-${QTCREATOR_VERSION}.run /tmp/QtCreatorSetup.js
 ENV PATH=$PATH:/opt/qtcreator/bin
 
 # Gitkraken
 ARG GITKRAKEN_VER=3.3.4
 RUN cd /tmp &&\
-    wget https://release.gitkraken.com/linux/v${GITKRAKEN_VER}.deb &&\
-    apt install /tmp/v${GITKRAKEN_VER}.deb &&\
-    rm v${GITKRAKEN_VER}.deb
+    wget https://release.gitkraken.com/linux/v${GITKRAKEN_VER}.deb && \
+    apt install -y --no-install-recommends /tmp/v${GITKRAKEN_VER}.deb && \
+    rm v${GITKRAKEN_VER}.deb && rm -rf /var/lib/apt/lists/*;
 
 # rr
-RUN apt-get update &&\
-    apt-get install -y \
+RUN apt-get update && \
+    apt-get install --no-install-recommends -y \
         ccache \
         cmake \
         make \
@@ -112,33 +111,33 @@ RUN apt-get update &&\
         git \
         ninja-build \
         capnproto \
-        libcapnp-dev &&\
-    rm -rf /var/lib/apt/lists/* &&\
-    cd /tmp &&\
-    git clone https://github.com/mozilla/rr.git &&\
-    cd rr && mkdir build && cd build &&\
-    CC=clang-${CLANG_VER} CXX=clang++-${CLANG_VER} cmake -G Ninja .. &&\
-    cmake --build . &&\
-    cmake --build . --target install &&\
+        libcapnp-dev && \
+    rm -rf /var/lib/apt/lists/* && \
+    cd /tmp && \
+    git clone https://github.com/mozilla/rr.git && \
+    cd rr && mkdir build && cd build && \
+    CC=clang-${CLANG_VER} CXX=clang++-${CLANG_VER} cmake -G Ninja .. && \
+    cmake --build . && \
+    cmake --build . --target install && \
     rm -r /tmp/rr
 
 # SWIG with Matlab / Octave support
 # ... waiting its upstream merge
-RUN apt-get update &&\
-    apt-get install -y \
+RUN apt-get update && \
+    apt-get install --no-install-recommends -y \
         autotools-dev \
         automake \
         bison \
-        libpcre3-dev &&\
-    rm -rf /var/lib/apt/lists/* &&\
-    cd /tmp/ &&\
-    git clone https://github.com/jaeandersson/swig.git &&\
-    cd swig &&\
-    git checkout matlab &&\
-    sh autogen.sh &&\
-    CC=clang-${CLANG_VER} CXX=clang++-${CLANG_VER} ./configure &&\
-    make -j2 &&\
-    make install &&\
+        libpcre3-dev && \
+    rm -rf /var/lib/apt/lists/* && \
+    cd /tmp/ && \
+    git clone https://github.com/jaeandersson/swig.git && \
+    cd swig && \
+    git checkout matlab && \
+    sh autogen.sh && \
+    CC=clang-${CLANG_VER} CXX=clang++-${CLANG_VER} ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" && \
+    make -j2 && \
+    make install && \
     rm -r /tmp/swig
 
 # Setup an additional entrypoint script