{
  "startTime": 1674215217247,
  "endTime": 1674215219223,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 46,
        "lineEnd": 74,
        "columnStart": 4,
        "columnEnd": 19
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG tag=latest\nFROM diegoferigo/tools:${tag}\nMAINTAINER Diego Ferigo <dgferigo@gmail.com>\n\n# Install ROS Desktop Full\n# ========================\n\n# Get gazebo9 from the osrf repo\nRUN sh -c 'echo \"deb http://packages.osrfoundation.org/gazebo/ubuntu-stable `lsb_release -cs` main\" > /etc/apt/sources.list.d/gazebo-stable.list' && \\\n    wget https://packages.osrfoundation.org/gazebo.key -O - | apt-key add - && \\\n    apt-get update && \\\n    apt-get install --no-install-recommends -y \\\n        gazebo9 \\\n        libgazebo9-dev \\\n        && \\\n    rm -rf /var/lib/apt/lists/*\n\n# https://github.com/osrf/docker_images/blob/master/ros/\n# ENV ROS_DISTRO lunar\n# RUN apt-key adv --keyserver ha.pool.sks-keyservers.net \\\n#                 --recv-keys 421C365BD9FF1F717815A3895523BAEEB01FA116 &&\\\n#     echo \"deb http://packages.ros.org/ros/ubuntu `lsb_release -cs` main\" \\\n#         > /etc/apt/sources.list.d/ros-latest.list\n# RUN apt-get update &&\\\n#     apt-get install --no-install-recommends -y \\\n#         python-rosdep \\\n#         python-rosinstall \\\n#         python-vcstools \\\n#         &&\\\n#     rm -rf /var/lib/apt/lists/* &&\\\n#     rosdep init &&\\\n#     rosdep update\n# RUN apt-get update &&\\\n#     apt-get install -y \\\n#         ros-${ROS_DISTRO}-desktop \\\n#         # ros-${ROS_DISTRO}-desktop-full &&\\\n#         #ros-${ROS_DISTRO}-fake-localization \\\n#         #ros-${ROS_DISTRO}-map-server &&\\\n#         &&\\\n#     rm -rf /var/lib/apt/lists/*\n\n# Install libraries and tools\n# ===========================\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y \\\n        # MISC\n        qt5-default \\\n        # SWIG\n        autotools-dev \\\n        automake \\\n        bison \\\n        # YARP\n        libeigen3-dev \\\n        libgsl-dev \\\n        libedit-dev \\\n        libqcustomplot-dev \\\n        qtmultimedia5-dev \\\n        qtdeclarative5-dev \\\n        libqt5opengl5-dev \\\n        qttools5-dev \\\n        # GAZEBO-YARP-PLUGINS\n        libatlas-base-dev \\\n        # IDYNTREE\n        coinor-libipopt-dev \\\n        # BINDINGS\n        liboctave-dev \\\n        # SIMMECHANICS-TO-URDF\n        python-lxml \\\n        python-yaml \\\n        python-numpy \\\n        python-setuptools \\\n        # MISC\n        libasio-dev \\\n        && \\\n    rm -rf /var/lib/apt/lists/*\n\n# Concurrent compilation jobs\nENV GCC_JOBS=6\n\n# Install YARP, iCub and friends from sources\n# ===========================================\n\n# Environment setup of the robotology repositories\n# ------------------------------------------------\n\nENV IIT_DIR=/iit\nENV IIT_INSTALL=${IIT_DIR}/local\nENV IIT_SOURCES=${IIT_DIR}/sources\nARG IIT_BIN=${IIT_INSTALL}/bin\nENV IIT_PATH=${IIT_PATH:+${IIT_PATH}:}${IIT_BIN}\nENV LD_LIBRARY_PATH=${LD_LIBRARY_PATH:+${LD_LIBRARY_PATH}:}${IIT_INSTALL}/lib/\nENV PATH=${IIT_PATH}:${PATH}\n\n# Download all sources with git\n# -----------------------------\n\nRUN mkdir -p ${IIT_SOURCES} ${IIT_BIN}\n\n# Use docker cache for steps above\nARG IIT_DOCKER_SOURCES=\"20180208\"\n\nRUN cd ${IIT_SOURCES} &&\\\n    git clone https://github.com/robotology/ycm.git &&\\\n    git clone https://github.com/robotology/yarp.git &&\\\n    git clone https://github.com/robotology/icub-main.git &&\\\n    git clone https://github.com/robotology/icub-contrib-common.git &&\\\n    git clone https://github.com/robotology/robot-testing.git &&\\\n    git clone https://github.com/robotology/gazebo-yarp-plugins.git &&\\\n    git clone https://github.com/robotology-playground/yarp-matlab-bindings.git &&\\\n    git clone https://github.com/robotology/idyntree.git &&\\\n    git clone https://github.com/ros/urdf_parser_py &&\\\n    git clone https://github.com/robotology/simmechanics-to-urdf.git &&\\\n    git clone https://github.com/robotology-playground/icub-model-generator.git &&\\\n    git clone https://github.com/diegoferigo/robotology-superbuild.git\n\n# Env variables for configuring the sources\n# -----------------------------------------\n\n# Build Variables\nARG SOURCES_GIT_BRANCH=devel\nENV SOURCES_BUILD_TYPE=Release\n\n# Select the main development robot (model loading)\nENV ROBOT_NAME=\"iCubGazeboV2_5\"\nENV YARP_ROBOT_NAME=\"iCubGazeboV2_5\"\n\n# Configure the MEX provider\n# For the time being, ROBOTOLOGY_USES_MATLAB=ON is not supported.\n# Refer to https://github.com/diegoferigo/dockerfiles/issues/8\nENV ROBOTOLOGY_USES_OCTAVE=ON\nENV ROBOTOLOGY_USES_MATLAB=OFF\nENV ROBOTOLOGY_GENERATE_MEX=ON\n# The default is \"mex\" but \"matlab\" should become the default\nENV ROBOTOLOGY_MATLAB_MEX_DIR=\"matlab\"\n\n# Build all sources\n# -----------------\n\n# YCM\nRUN cd ${IIT_SOURCES}/ycm &&\\\n    git checkout ${SOURCES_GIT_BRANCH} &&\\\n    mkdir -p build && cd build &&\\\n    cmake -DCMAKE_INSTALL_PREFIX=${IIT_INSTALL} \\\n          .. &&\\\n    make -j ${GCC_JOBS} install\n\n# RTF\nRUN cd ${IIT_SOURCES}/robot-testing &&\\\n    git checkout ${SOURCES_GIT_BRANCH} &&\\\n    mkdir -p build && cd build &&\\\n    cmake -DCMAKE_BUILD_TYPE=${SOURCES_BUILD_TYPE} \\\n          -DCMAKE_INSTALL_PREFIX=${IIT_INSTALL} \\\n          .. &&\\\n    make -j ${GCC_JOBS} install\nENV LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:${IIT_INSTALL}/lib/rtf\n\n# YARP\nRUN \\\n    cd ${IIT_SOURCES}/yarp &&\\\n    git checkout ${SOURCES_GIT_BRANCH} &&\\\n    mkdir -p build && cd build &&\\\n    cmake -DCMAKE_BUILD_TYPE=${SOURCES_BUILD_TYPE} \\\n          -DCMAKE_INSTALL_PREFIX=${IIT_INSTALL} \\\n          -DCREATE_GUIS=ON \\\n          -DCREATE_LIB_MATH=ON \\\n          -DSKIP_ACE=ON \\\n          -DYARP_COMPILE_RTF_ADDONS=ON \\\n          .. &&\\\n    make -j ${GCC_JOBS} install &&\\\n    ln -s ${IIT_SOURCES}/yarp/scripts/yarp_completion \\\n          /etc/bash_completion.d/yarp_completion\nENV YARP_DIR=${IIT_INSTALL}\nENV YARP_DATA_DIRS=${IIT_INSTALL}/share/yarp\nENV YARP_COLORED_OUTPUT=1\nRUN yarp check\nEXPOSE 10000/tcp\n\n# ICUB-MAIN\nRUN cd ${IIT_SOURCES}/icub-main &&\\\n    git checkout ${SOURCES_GIT_BRANCH} &&\\\n    mkdir -p build && cd build &&\\\n    cmake -DCMAKE_BUILD_TYPE=${SOURCES_BUILD_TYPE} \\\n          -DCMAKE_INSTALL_PREFIX=${IIT_INSTALL} \\\n          -DENABLE_icubmod_cartesiancontrollerserver=ON \\\n          -DENABLE_icubmod_cartesiancontrollerclient=ON \\\n          -DENABLE_icubmod_gazecontrollerclient=ON \\\n          .. &&\\\n    make -j ${GCC_JOBS} install\nENV YARP_DATA_DIRS=${YARP_DATA_DIRS:+${YARP_DATA_DIRS}:}${IIT_INSTALL}/share/iCub\n\n# ICUB-CONTRIB-COMMON\nRUN cd ${IIT_SOURCES}/icub-contrib-common &&\\\n    mkdir -p build && cd build &&\\\n    cmake -DCMAKE_INSTALL_PREFIX=${IIT_INSTALL} \\\n          .. &&\\\n    make -j ${GCC_JOBS} install\nENV YARP_DATA_DIRS=${YARP_DATA_DIRS:+${YARP_DATA_DIRS}:}${IIT_INSTALL}/share/ICUBcontrib\n\n# GAZEBO-YARP-PLUGINS\nRUN ([ ! -e /usr/lib/libblas.so ] && ln -s /usr/lib/x86_64-linux-gnu/atlas/libblas.so /usr/lib/libblas.so) ||\\\n    true\nRUN ([ ! -e /usr/lib/liblapack.so ] && ln -s /usr/lib/x86_64-linux-gnu/atlas/liblapack.so /usr/lib/liblapack.so) ||\\\n    true\nRUN cd ${IIT_SOURCES}/gazebo-yarp-plugins &&\\\n    git checkout ${SOURCES_GIT_BRANCH} &&\\\n    mkdir -p build && cd build &&\\\n    cmake -DCMAKE_BUILD_TYPE=${SOURCES_BUILD_TYPE} \\\n          -DCMAKE_INSTALL_PREFIX=${IIT_INSTALL} \\\n          .. &&\\\n    make -j ${GCC_JOBS} install\nENV YARP_DATA_DIRS=${YARP_DATA_DIRS:+${YARP_DATA_DIRS}:}${IIT_INSTALL}/share/ICUBcontrib\nENV GAZEBO_PLUGIN_PATH=${GAZEBO_PLUGIN_PATH:+${GAZEBO_PLUGIN_PATH}:}${IIT_INSTALL}/lib\n\n# YARP-MATLAB-BINDINGS\nRUN cd ${IIT_SOURCES}/yarp-matlab-bindings &&\\\n    git checkout ${SOURCES_GIT_BRANCH} &&\\\n    # Waiting https://github.com/robotology-playground/yarp-matlab-bindings/issues/18\n    rm matlab/autogenerated/yarpMATLAB_wrap.cxx &&\\\n    mkdir -p build && cd build &&\\\n    cmake -DCMAKE_BUILD_TYPE=${SOURCES_BUILD_TYPE} \\\n          -DCMAKE_INSTALL_PREFIX=${IIT_INSTALL} \\\n          -DYARP_SOURCE_DIR=${IIT_SOURCES}/yarp \\\n          -DYARP_USES_OCTAVE:BOOL=${ROBOTOLOGY_USES_OCTAVE} \\\n          -DYARP_USES_MATLAB:BOOL=${ROBOTOLOGY_USES_MATLAB} \\\n          -DYARP_GENERATE_MATLAB:BOOL=${ROBOTOLOGY_GENERATE_MEX} \\\n          -DYARP_INSTALL_MATLAB_LIBDIR=${ROBOTOLOGY_MATLAB_MEX_DIR} \\\n          -DYARP_INSTALL_MATLAB_MFILESDIR=${ROBOTOLOGY_MATLAB_MEX_DIR} \\\n          -DYCM_USE_DEPRECATED:BOOL=OFF \\\n          .. &&\\\n    make -j ${GCC_JOBS} install\n\n# IDYNTREE\nRUN cd ${IIT_SOURCES}/idyntree &&\\\n    git checkout ${SOURCES_GIT_BRANCH} &&\\\n    mkdir -p build && cd build &&\\\n    cmake -DCMAKE_BUILD_TYPE=${SOURCES_BUILD_TYPE} \\\n          -DCMAKE_INSTALL_PREFIX=${IIT_INSTALL} \\\n          -DIDYNTREE_USES_OCTAVE:BOOL=${ROBOTOLOGY_USES_OCTAVE} \\\n          -DIDYNTREE_USES_MATLAB:BOOL=${ROBOTOLOGY_USES_MATLAB} \\\n          -DIDYNTREE_GENERATE_MATLAB:BOOL=${ROBOTOLOGY_GENERATE_MEX} \\\n          -DIDYNTREE_INSTALL_MATLAB_LIBDIR=${ROBOTOLOGY_MATLAB_MEX_DIR} \\\n          -DIDYNTREE_INSTALL_MATLAB_MFILESDIR=${ROBOTOLOGY_MATLAB_MEX_DIR} \\\n          -DIDYNTREE_USES_KDL:BOOL=OFF \\\n          -DYCM_USE_DEPRECATED=OFF \\\n          .. &&\\\n    make -j ${GCC_JOBS} install\n\n# ICUB-GAZEBO-WHOLEBODY\nRUN cd ${IIT_SOURCES} &&\\\n    git clone https://github.com/robotology-playground/icub-gazebo-wholebody.git &&\\\n    cd ${IIT_SOURCES}/icub-gazebo-wholebody &&\\\n    git checkout feature/useGeneratedModels &&\\\n    mkdir -p build && cd build &&\\\n    cmake -DCMAKE_INSTALL_PREFIX=${IIT_INSTALL} \\\n          -DROBOT_NAME=${ROBOT_NAME} \\\n          .. &&\\\n    make -j ${GCC_JOBS} install\nENV GAZEBO_MODEL_PATH=${GAZEBO_MODEL_PATH:+${GAZEBO_MODEL_PATH}:}${IIT_INSTALL}/share/gazebo/models/\nENV GAZEBO_RESOURCE_PATH=${GAZEBO_MODEL_PATH:+${GAZEBO_MODEL_PATH}:}${IIT_INSTALL}/share/gazebo/worlds\n\n# ICUB-MODELS\nRUN cd ${IIT_SOURCES} &&\\\n    git clone https://github.com/robotology-playground/icub-models &&\\\n    cd ${IIT_SOURCES}/icub-models &&\\\n    mkdir -p build && cd build &&\\\n    cmake -DCMAKE_INSTALL_PREFIX=${IIT_INSTALL} \\\n          .. &&\\\n    make install\nENV YARP_DATA_DIRS=${YARP_DATA_DIRS:+${YARP_DATA_DIRS}:}${IIT_INSTALL}/share/iCub\nENV GAZEBO_MODEL_PATH=${GAZEBO_MODEL_PATH:+${GAZEBO_MODEL_PATH}:}${IIT_INSTALL}/share/iCub/robots:${IIT_INSTALL}/share\nENV ROS_PACKAGE_PATH=${ROS_PACKAGE_PATH:+${ROS_PACKAGE_PATH}:}${IIT_INSTALL}/share\n\n# SIMMECHANICS-TO-URDF\nENV ROS_DISTRO lunar\nRUN apt-key adv --keyserver ha.pool.sks-keyservers.net \\\n                --recv-keys 421C365BD9FF1F717815A3895523BAEEB01FA116 &&\\\n    echo \"deb http://packages.ros.org/ros/ubuntu `lsb_release -cs` main\" \\\n        > /etc/apt/sources.list.d/ros-latest.list &&\\\n    apt-get update &&\\\n    apt-get install --no-install-recommends -y \\\n        python-catkin-pkg \\\n        &&\\\n    rm -rf /var/lib/apt/lists/*\nRUN \\\n    # Dependencies\n    cd ${IIT_SOURCES}/urdf_parser_py &&\\\n    python setup.py install &&\\\n    # Project\n    cd ${IIT_SOURCES}/simmechanics-to-urdf &&\\\n    python setup.py install\n\n# ICUB-MODEL-GENERATOR\nRUN cd ${IIT_SOURCES}/icub-model-generator &&\\\n    mkdir -p build && cd build &&\\\n    cmake -DCMAKE_BUILD_TYPE=${SOURCES_BUILD_TYPE} \\\n          -DCMAKE_INSTALL_PREFIX=${IIT_INSTALL} \\\n          -DICUB_MODEL_GENERATE_DH:BOOL=OFF \\\n          -DICUB_MODEL_GENERATE_SIMMECHANICS:BOOL=ON \\\n          -DICUB_MODELS_SOURCE_DIR=${IIT_SOURCES}/icub-models \\\n          .. &&\\\n    make -j ${GCC_JOBS}\n\n# ROBOTOLOGY-SUPERBUILD\n# The bashrc-dev will source the variables exported by this repo\nRUN cd ${IIT_SOURCES}/robotology-superbuild &&\\\n    git checkout add_LDLIBPATH_template &&\\\n    mkdir -p build && cd build &&\\\n    cmake \\\n          -DROBOTOLOGY_ENABLE_CORE:BOOL=ON \\\n          -DROBOTOLOGY_ENABLE_DYNAMICS:BOOL=ON \\\n          -DROBOTOLOGY_USES_GAZEBO:BOOL=ON \\\n          -DROBOTOLOGY_USES_OCTAVE:BOOL=${ROBOTOLOGY_USES_OCTAVE} \\\n          -DROBOTOLOGY_USES_MATLAB:BOOL=OFF \\\n          #-DROBOTOLOGY_USES_MATLAB:BOOL=${ROBOTOLOGY_USES_MATLAB}\n          -DNON_INTERACTIVE_BUILD:BOOL=ON \\\n          -DYCM_USE_DEPRECATED:BOOL=OFF \\\n          -DYCM_EP_EXPERT_MODE:BOOL=ON \\\n          -DYCM_EP_MAINTAINER_MODE:BOOL=ON \\\n          .. &&\\\n    make update-all -j 1\n# Waiting https://github.com/robotology/robotology-superbuild/issues/33\nRUN cd ${IIT_SOURCES}/robotology-superbuild/build &&\\\n    # Checkout codyco-modules devel branch\n    cd ../robotology/codyco-modules &&\\\n    git checkout devel &&\\\n    git config user.email \"you@example.com\" &&\\\n    git config user.name \"Your Name\" &&\\\n    cd - &&\\\n    # Checkout yarp-matlab-bindings devel branch\n    cd ../robotology/yarp-matlab-bindings &&\\\n    git checkout devel &&\\\n    git config user.email \"you@example.com\" &&\\\n    git config user.name \"Your Name\" &&\\\n    cd - &&\\\n    cmake -DYCM_EP_DEVEL_MODE_codyco-modules:BOOL=ON \\\n          -DYCM_EP_DEVEL_MODE_yarp-matlab-bindings:BOOL=ON \\\n          . &&\\\n    make -j ${GCC_JOBS} &&\\\n    # Remove the temporary git credentials\n    cd ../robotology/codyco-modules &&\\\n    git config --unset user.email &&\\\n    git config --unset user.name &&\\\n    cd ../yarp-matlab-bindings &&\\\n    git config --unset user.email &&\\\n    git config --unset user.name\n\n# These projects will be included soon in the new superbuild\nRUN cd ${IIT_SOURCES} &&\\\n    git clone -b WBT3 https://github.com/robotology-playground/wholeBodyControllers.git &&\\\n    git clone -b WB3.0 https://github.com/robotology/WB-Toolbox.git &&\\\n    cd ${IIT_SOURCES}/WB-Toolbox &&\\\n    mkdir -p build && cd build\nRUN ([ ${ROBOTOLOGY_USES_MATLAB} = \"ON\" ] &&\\\n    cd ${IIT_SOURCES}/WB-Toolbox/build &&\\\n    cmake -DCMAKE_BUILD_TYPE=${SOURCES_BUILD_TYPE} \\\n          -DCMAKE_INSTALL_PREFIX=${IIT_SOURCES}/robotology-superbuild/build/install \\\n          .. &&\\\n    make -j ${GCC_JOBS} install) \\\n    || true\n\n# Misc setup of the image\n# =======================\n\n# Some QT-Apps/Gazebo don't show controls without this\nENV QT_X11_NO_MITSHM 1\n\n# Include a custom bashrc\nCOPY bashrc /usr/etc/skel/bashrc-dev\nCOPY bashrc-colors /usr/etc/skel/bashrc-colors\n\n# Include an additional entrypoint script\nCOPY entrypoint.sh /usr/sbin/entrypoint_development.sh\nRUN chmod 755 /usr/sbin/entrypoint_development.sh\nCOPY setup.sh /usr/sbin/setup_development.sh\nRUN chmod 755 /usr/sbin/setup_development.sh\nENTRYPOINT [\"/usr/sbin/entrypoint_development.sh\"]\n\n# nvidia-docker 1.0\nLABEL com.nvidia.volumes.needed=\"nvidia_driver\"\n\nRUN echo \"/usr/local/nvidia/lib\" >> /etc/ld.so.conf.d/nvidia.conf && \\\n    echo \"/usr/local/nvidia/lib64\" >> /etc/ld.so.conf.d/nvidia.conf\nRUN ldconfig\n\nENV PATH=/usr/local/nvidia/bin:/usr/local/cuda/bin:${PATH}\nENV LD_LIBRARY_PATH=/usr/local/nvidia/lib:/usr/local/nvidia/lib64:${LD_LIBRARY_PATH}\n"
}