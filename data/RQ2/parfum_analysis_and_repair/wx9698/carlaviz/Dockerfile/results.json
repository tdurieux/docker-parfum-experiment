{
  "startTime": 1674252198292,
  "endTime": 1674252199278,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 69
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 136
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 69
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 136
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Frontend build stage\nFROM node:12-alpine AS frontend\n\nCOPY ./frontend /home/carla/carlaviz/frontend\n\nRUN apk --no-cache add git\n\nWORKDIR /home/carla/carlaviz/frontend\nRUN yarn && yarn build\n\n# Backend build stage\nFROM ubuntu:18.04 AS backend\n\nCOPY ./backend /home/carla/carlaviz/backend\n\nRUN apt update && \\\n    apt install --no-install-recommends -y wget autoconf automake libtool curl make g++ unzip && rm -rf /var/lib/apt/lists/*;\n\n# install protobuf for xviz\nWORKDIR /home/carla/protoc\nRUN wget https://github.com/protocolbuffers/protobuf/releases/download/v3.11.2/protobuf-cpp-3.11.2.tar.gz && \\\n    tar xvzf protobuf-cpp-3.11.2.tar.gz && \\\n    cd protobuf-3.11.2 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n    make -j12 && \\\n    make install && \\\n    ldconfig && rm protobuf-cpp-3.11.2.tar.gz\n\n# non-interactive setting for tzdata\nENV DEBIAN_FRONTEND=noninteractive\nRUN apt update && \\\n    apt install --no-install-recommends -y git build-essential gcc-7 cmake libpng-dev libtiff5-dev libjpeg-dev tzdata sed curl wget unzip autoconf libtool rsync && rm -rf /var/lib/apt/lists/*;\n\n# build carlaviz backend\nWORKDIR /home/carla/carlaviz/backend\nRUN bash ./setup/setup.sh\nWORKDIR /home/carla/carlaviz/backend/build\nRUN cmake ../ && make backend -j`nproc --all`\n\n# Release stage\nFROM nginx:1.20\n\n# frontend\nCOPY --from=frontend /home/carla/carlaviz/frontend/dist/ /var/www/carlaviz/\nCOPY --from=frontend /home/carla/carlaviz/frontend/index.html /var/www/carlaviz/index.html\nCOPY ./docker/carlaviz /etc/nginx/conf.d/default.conf\n\n# backend\nCOPY --from=backend /home/carla/carlaviz/backend/bin/backend /home/carla/carlaviz/backend/bin/backend\nCOPY --from=backend /home/carla/protoc/protobuf-3.11.2/src/.libs/libprotobuf.so.22 /lib/x86_64-linux-gnu/libprotobuf.so.22\nCOPY --from=backend /home/carla/carlaviz/backend/lib/libboost_filesystem.so.1.72.0 /lib/x86_64-linux-gnu/libboost_filesystem.so.1.72.0\n\nCOPY ./docker/run.sh /home/carla/carlaviz/docker/run.sh\n\nEXPOSE 8080-8081\nEXPOSE 8089\n\nENV CARLAVIZ_BACKEND_HOST localhost\nENV CARLAVIZ_BACKEND_PORT 8081\nENV CARLA_SERVER_HOST localhost\nENV CARLA_SERVER_PORT 2000\n\nWORKDIR /home/carla/carlaviz\n\nENTRYPOINT [\"/bin/bash\", \"./docker/run.sh\"]\n\n"
}