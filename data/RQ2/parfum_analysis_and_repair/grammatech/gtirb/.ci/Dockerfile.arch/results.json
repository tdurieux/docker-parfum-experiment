{
  "startTime": 1674220065398,
  "endTime": 1674220066567,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 53
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM archlinux/base\n\nSHELL [\"/bin/bash\", \"-c\"]\n\nRUN sed -i 's/#\\[multilib\\]/\\[multilib\\]/; /^\\[multilib\\]/,/^$/ s/^#//' /etc/pacman.conf\nRUN pacman --noconfirm -Syu archlinux-keyring\nRUN pacman --noconfirm -Syu autoconf base-devel boost capstone clang cmake curl \\\n        doxygen gcc gcc-libs git graphviz jdk8-openjdk libtool make protobuf \\\n        python python-networkx python-pip wget\nRUN python3 -m pip install pre-commit wheel\n\n# Common-Lisp specific setup.\nRUN sed -i \"s/^\\(OPT_LONG=(\\)/\\1'asroot' /;s/EUID == 0/1 == 0/\" /usr/bin/makepkg\nRUN git clone --depth 1 https://aur.archlinux.org/yay.git /yay-aur\nRUN sed -i \"s|^  cd \\\"\\$srcdir/\\$pkgname-\\$pkgver\\\"|&\\\\n  sed -i 's/os.Geteuid()/1/' main.go install.go|\" /yay-aur/PKGBUILD\nRUN sed -i \"s/package() {/package() {\\n  unset LDFLAGS/\" /yay-aur/PKGBUILD\nRUN cd /yay-aur && makepkg --noconfirm -si\nRUN yay --noconfirm -Sy emacs-nox sbcl slime emacs-paredit cl-protobuf\nRUN curl -f -O https://beta.quicklisp.org/quicklisp.lisp\nRUN sbcl --load quicklisp.lisp \\\n        --eval '(quicklisp-quickstart:install)' \\\n        --eval '(let ((ql-util::*do-not-prompt* t)) (ql:add-to-init-file))'\nRUN git clone https://github.com/eschulte/simpler-documentation-template /root/quicklisp/local-projects/simpler-documentation-template\nRUN git clone https://github.com/brown/protobuf /root/quicklisp/local-projects/protobuf\n\nCOPY version.txt /gt/gtirb/version.txt\nCOPY proto /gt/gtirb/proto\nCOPY cl /gt/gtirb/cl\n\n# Ensure all Common Lisp dependencies are installed before the build.\n# Works around the fact that you can't run multiple Quicklisp dependency installs in parallel as done by 'make -j'.\nRUN sbcl --eval '(asdf:initialize-source-registry `(:source-registry (:tree \"/gt/gtirb/cl\") :inherit-configuration))' \\\n        --eval '(ql:quickload :gtirb/test)' --eval '(sb-ext:exit)'\n"
}