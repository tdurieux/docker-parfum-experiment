{
  "startTime": 1674246736313,
  "endTime": 1674246738231,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 36,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 13
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 53,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 9
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 70,
        "lineEnd": 77,
        "columnStart": 4,
        "columnEnd": 9
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 90,
        "lineEnd": 102,
        "columnStart": 4,
        "columnEnd": 10
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 122,
        "lineEnd": 141,
        "columnStart": 4,
        "columnEnd": 10
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 36,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 13
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 53,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 9
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 70,
        "lineEnd": 77,
        "columnStart": 4,
        "columnEnd": 9
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 90,
        "lineEnd": 102,
        "columnStart": 4,
        "columnEnd": 10
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 122,
        "lineEnd": 141,
        "columnStart": 4,
        "columnEnd": 10
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# ------------------------------------------------------------------------------\n# Install Souffle\n# ------------------------------------------------------------------------------\nFROM ubuntu:20.04 AS souffle\nRUN export DEBIAN_FRONTEND=noninteractive\nRUN ln -fs /usr/share/zoneinfo/America/New_York /etc/localtime\nRUN apt-get -y update \\\n && apt-get -y --no-install-recommends install \\\n      automake \\\n      bison \\\n      build-essential \\\n      cmake \\\n      doxygen \\\n      flex \\\n      git \\\n      libffi-dev \\\n      libsqlite3-dev \\\n      libtool \\\n      lsb-release \\\n      mcpp \\\n      sqlite3 \\\n      zlib1g-dev && rm -rf /var/lib/apt/lists/*;\n\nRUN git clone -b 2.3 https://github.com/souffle-lang/souffle && \\\n    cd souffle && \\\n    cmake . -Bbuild -DCMAKE_BUILD_TYPE=Release -DSOUFFLE_USE_CURSES=0 -DSOUFFLE_USE_SQLITE=0 -DSOUFFLE_DOMAIN_64BIT=1 && \\\n    cd build && \\\n    make install -j4\n\n# ------------------------------------------------------------------------------\n# Install LIEF\n# ------------------------------------------------------------------------------\nFROM ubuntu:20.04 AS LIEF\nRUN export DEBIAN_FRONTEND=noninteractive\nRUN ln -fs /usr/share/zoneinfo/America/New_York /etc/localtime\nRUN apt-get -y update \\\n && apt-get -y --no-install-recommends install \\\n      build-essential \\\n      cmake \\\n      git \\\n      python3 && rm -rf /var/lib/apt/lists/*;\n\nRUN git clone -b 0.12.1 --depth 1 https://github.com/lief-project/LIEF.git /usr/local/src/LIEF\nRUN cmake -DLIEF_PYTHON_API=OFF -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=OFF /usr/local/src/LIEF -B/usr/local/src/LIEF/build\nRUN cmake --build /usr/local/src/LIEF/build -j4 --target all install\n\n# ------------------------------------------------------------------------------\n# Install libehp\n# ------------------------------------------------------------------------------\nFROM ubuntu:20.04 AS libehp\nRUN export DEBIAN_FRONTEND=noninteractive\nRUN ln -fs /usr/share/zoneinfo/America/New_York /etc/localtime\nRUN apt-get -y update \\\n && apt-get -y --no-install-recommends install \\\n      build-essential \\\n      cmake \\\n      git && rm -rf /var/lib/apt/lists/*;\n\nRUN git clone https://git.zephyr-software.com/opensrc/libehp.git /usr/local/src/libehp\nRUN git -C /usr/local/src/libehp reset --hard 5e41e26b88d415f3c7d3eb47f9f0d781cc519459\nRUN cmake -DCMAKE_CXX_COMPILER=g++ -DCMAKE_BUILD_TYPE=Release -DEHP_BUILD_SHARED_LIBS=OFF /usr/local/src/libehp -B/usr/local/src/libehp/build\nRUN cmake --build /usr/local/src/libehp/build -j4 --target all install\n\n# ------------------------------------------------------------------------------\n# Install GTIRB\n# ------------------------------------------------------------------------------\nFROM ubuntu:20.04 AS gtirb\nRUN export DEBIAN_FRONTEND=noninteractive\nRUN ln -fs /usr/share/zoneinfo/America/New_York /etc/localtime\nRUN apt-get -y update \\\n && apt-get -y --no-install-recommends install \\\n      cmake \\\n      build-essential \\\n      protobuf-compiler \\\n      libboost-filesystem-dev \\\n      libboost-filesystem1.71.0 \\\n      python3 \\\n      git && rm -rf /var/lib/apt/lists/*;\n\nRUN git clone --depth 1 https://github.com/GrammaTech/gtirb /usr/local/src/gtirb\nRUN cmake -DGTIRB_JAVA_API=OFF -DGTIRB_CL_API=OFF /usr/local/src/gtirb -B/usr/local/src/gtirb/build\nRUN cmake --build /usr/local/src/gtirb/build -j4 --target all install\n\n# ------------------------------------------------------------------------------\n# Install gtirb-pprinter\n# ------------------------------------------------------------------------------\nFROM ubuntu:20.04 AS gtirb-pprinter\nRUN export DEBIAN_FRONTEND=noninteractive\nRUN ln -fs /usr/share/zoneinfo/America/New_York /etc/localtime\nRUN apt-get -y update \\\n && apt-get -y --no-install-recommends install \\\n      cmake \\\n      build-essential \\\n      protobuf-compiler \\\n      libboost-filesystem-dev \\\n      libboost-filesystem1.71.0 \\\n      libboost-system-dev \\\n      libboost-system1.71.0 \\\n      libboost-program-options-dev \\\n      libboost-program-options1.71.0 \\\n      python3 \\\n      git \\\n      wget && rm -rf /var/lib/apt/lists/*;\n\nRUN wget https://download.grammatech.com/gtirb/files/apt-repo/pool/unstable/libc/libcapstone-dev/libcapstone-dev_5.0.0-gtdev_amd64.deb \\\n  && dpkg -i libcapstone-dev_*_amd64.deb \\\n  && rm libcapstone-dev_*_amd64.deb\n\nCOPY --from=gtirb /usr/local/lib /usr/local/lib\nCOPY --from=gtirb /usr/local/include /usr/local/include\n\nRUN git clone --depth 1 https://github.com/GrammaTech/gtirb-pprinter /usr/local/src/gtirb-pprinter\nRUN cmake /usr/local/src/gtirb-pprinter -B/usr/local/src/gtirb-pprinter/build\nRUN cmake --build /usr/local/src/gtirb-pprinter/build -j4 --target all install\n\n# ------------------------------------------------------------------------------\n# Install Ddisasm\n# ------------------------------------------------------------------------------\nFROM ubuntu:20.04 AS ddisasm\nRUN export DEBIAN_FRONTEND=noninteractive\nRUN ln -fs /usr/share/zoneinfo/America/New_York /etc/localtime\nRUN apt-get -y update \\\n && apt-get -y --no-install-recommends install \\\n      build-essential \\\n      clang \\\n      cmake \\\n      g++ \\\n      git \\\n      lib32gcc-9-dev \\\n      lib32stdc++-9-dev \\\n      libboost-filesystem-dev \\\n      libboost-filesystem1.71.0 \\\n      libboost-program-options-dev \\\n      libboost-program-options1.71.0 \\\n      libboost-system-dev \\\n      libboost-system1.71.0 \\\n      libc-dev-i386-cross \\\n      mcpp \\\n      pandoc \\\n      protobuf-compiler \\\n      python3 \\\n      wget && rm -rf /var/lib/apt/lists/*;\n\nRUN wget https://download.grammatech.com/gtirb/files/apt-repo/pool/unstable/libc/libcapstone-dev/libcapstone-dev_5.0.0-gtdev_amd64.deb \\\n  && dpkg -i libcapstone-dev_*_amd64.deb \\\n  && rm libcapstone-dev_*_amd64.deb\n\nCOPY --from=souffle /usr/local/bin/souffle* /usr/local/bin/\nCOPY --from=souffle /usr/local/include /usr/local/include\nCOPY --from=LIEF /usr/lib/libLIEF.a /usr/lib/libLIEF.a\nCOPY --from=LIEF /usr/include/LIEF /usr/include/LIEF\nCOPY --from=LIEF /usr/share/LIEF /usr/share/LIEF\nCOPY --from=libehp /usr/local/lib /usr/local/lib\nCOPY --from=libehp /usr/local/include /usr/local/include\nCOPY --from=gtirb /usr/local/lib /usr/local/lib\nCOPY --from=gtirb /usr/local/include /usr/local/include\nCOPY --from=gtirb-pprinter /usr/local/bin/gtirb* /usr/local/bin/\nCOPY --from=gtirb-pprinter /usr/local/lib /usr/local/lib\nCOPY --from=gtirb-pprinter /usr/local/include /usr/local/include\n\nARG DDISASM_URL=https://github.com/GrammaTech/ddisasm\nARG DDISASM_BRANCH=main\nRUN git clone --depth 1 -b $DDISASM_BRANCH $DDISASM_URL /usr/local/src/ddisasm\nRUN cmake -DCMAKE_BUILD_TYPE=Release /usr/local/src/ddisasm -B/usr/local/src/ddisasm/build\nRUN cmake --build /usr/local/src/ddisasm/build -j4 --target all install\n\n# ------------------------------------------------------------------------------\n# Final image\n# ------------------------------------------------------------------------------\nFROM ubuntu:20.04\n\nCOPY --from=ddisasm /lib/x86_64-linux-gnu/libboost_filesystem.so.1.71.0 /lib/x86_64-linux-gnu/libboost_filesystem.so.1.71.0\nCOPY --from=ddisasm /lib/x86_64-linux-gnu/libboost_program_options.so.1.71.0 /lib/x86_64-linux-gnu/libboost_program_options.so.1.71.0\nCOPY --from=ddisasm /lib/libcapstone.so.5 /lib/libcapstone.so.5\nCOPY --from=ddisasm /lib/x86_64-linux-gnu/libgomp.so.1 /lib/x86_64-linux-gnu/libgomp.so.1\nCOPY --from=ddisasm /usr/local/lib/libgtirb.so.* /usr/local/lib/\nCOPY --from=ddisasm /usr/local/lib/libgtirb_layout.so.* /usr/local/lib/\nCOPY --from=ddisasm /usr/local/lib/libgtirb_pprinter.so.* /usr/local/lib/\nCOPY --from=ddisasm /lib/x86_64-linux-gnu/libprotobuf.so.17 /lib/x86_64-linux-gnu/libprotobuf.so.17\nCOPY --from=ddisasm /usr/local/bin/ddisasm /usr/local/bin/\nCOPY --from=ddisasm /usr/local/bin/gtirb* /usr/local/bin/\n\nENV LD_LIBRARY_PATH=/usr/local/lib\n\nRUN gtirb-pprinter --version\nRUN ddisasm --version\n"
}