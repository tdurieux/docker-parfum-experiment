{
  "startTime": 1674219450227,
  "endTime": 1674219451351,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 105
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 7,
        "columnStart": 25,
        "columnEnd": 61
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 23,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 23,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 7,
        "columnStart": 25,
        "columnEnd": 61
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 23,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 27
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 23,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 51
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:18.04\n\nENV LC_ALL=C.UTF-8\nENV LANG=C.UTF-8\n\n# Setup formatting\nRUN apt-get update -y && apt-get install --no-install-recommends -y clang-format curl elpa-paredit \\\n        emacs-nox git sbcl slime python3-pip python3-protobuf && rm -rf /var/lib/apt/lists/*;\nRUN pip3 install --no-cache-dir \"virtualenv<20.0.0\"\nRUN pip3 install --no-cache-dir pre-commit\n# Install the lisp-format pre-commit format checker.\nRUN curl -f https://raw.githubusercontent.com/eschulte/lisp-format/master/lisp-format > /usr/bin/lisp-format\nRUN chmod +x /usr/bin/lisp-format\nRUN echo \"(add-to-list 'load-path \\\"/usr/share/emacs/site-lisp/\\\")\" > /root/.lisp-formatrc\n\nCOPY ./.pre-commit-config.yaml /gt/gtirb-stack-stamp/.pre-commit-config.yaml\nWORKDIR /gt/gtirb-stack-stamp\nRUN git init\nRUN pre-commit install-hooks\nWORKDIR /\nRUN rm -rf /gt/\n\n# Setup build\nRUN apt-get install --no-install-recommends -y build-essential cmake \\\n        libprotobuf-dev make pkg-config \\\n        software-properties-common unzip wget && rm -rf /var/lib/apt/lists/*;\nRUN python3 -m pip install --upgrade setuptools wheel\n\n# Setup apt repositories\nRUN add-apt-repository ppa:mhier/libboost-latest\nRUN wget -O - https://download.grammatech.com/gtirb/files/apt-repo/conf/apt.gpg.key | apt-key add -\n# We have to use the stable repository because pypi can only contain stable\n# releases of gtirb.\nRUN echo \"deb https://download.grammatech.com/gtirb/files/apt-repo bionic stable\" | tee -a /etc/apt/sources.list\nRUN apt-get update -y\n\n# Install Keystone\nRUN git clone https://github.com/keystone-engine/keystone.git\nRUN cd keystone && \\\n    mkdir build && \\\n    cd build && \\\n    ../make-share.sh && \\\n    make install && \\\n    cd .. && \\\n    rm -rf keystone\n\nRUN ldconfig /usr/local/lib\n\n# Install Python packages\nRUN python3 -m pip install --upgrade pip\n\n# Common Lisp Setup\nRUN apt-get install --no-install-recommends -y sbcl && rm -rf /var/lib/apt/lists/*;\nRUN curl -f -O https://beta.quicklisp.org/quicklisp.lisp\nRUN sbcl --load quicklisp.lisp \\\n        --eval '(quicklisp-quickstart:install)' \\\n        --eval '(let ((ql-util::*do-not-prompt* t)) (ql:add-to-init-file))'\nRUN mkdir -p $HOME/quicklisp/local-projects\nWORKDIR /root/quicklisp/local-projects\nRUN git clone https://github.com/GrammaTech/cl-utils.git gt/\nRUN git clone https://github.com/rpav/cl-interval.git\nRUN git clone https://github.com/GrammaTech/cl-capstone.git\nRUN git clone --branch quicklisp https://git.grammatech.com/rewriting/gtirb.git\nRUN git clone https://github.com/GrammaTech/gtirb-functions.git\nRUN git clone https://git.grammatech.com/rewriting/gtirb-capstone.git\nRUN git clone https://github.com/GrammaTech/keystone.git\nRUN sbcl --eval '(ql:register-local-projects)'\nRUN sbcl --eval '(ql:quickload :gtirb-capstone)'\nRUN sbcl --eval '(ql:quickload :gt/full)'\n"
}