{
  "startTime": 1674256283254,
  "endTime": 1674256284399,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Note: this Dockerfile is executed with the root of the staticdeploy monorepo\n# as context\nFROM node:14-alpine\n\nWORKDIR /opt/staticdeploy\n\n# Copy files\nCOPY package.json lerna.json yarn.lock tsconfig.json ./\nCOPY core/package.json core/tsconfig.json core/tsconfig.browser.json ./core/\nCOPY core/src ./core/src/\nCOPY sdk/package.json sdk/tsconfig.json sdk/tsconfig.browser.json ./sdk/\nCOPY sdk/src ./sdk/src/\nCOPY tar-archiver/package.json tar-archiver/tsconfig.json ./tar-archiver/\nCOPY tar-archiver/src ./tar-archiver/src/\nCOPY cli/package.json cli/tsconfig.json ./cli/\nCOPY cli/bin ./cli/bin/\nCOPY cli/src ./cli/src/\n\n# Install dependencies. Don't use --frozen-lockfile since some subprojets were\n# excluded, causing changes to yarn.lock on install\nRUN yarn install && \\\n    # Compile code\n    yarn compile && \\\n    # Remove dev dependencies\n    yarn install --production && \\\n    # Remove unecessary files\n    rm yarn.lock tsconfig.json && \\\n    rm -r core/tsconfig.json core/tsconfig.browser.json core/src && \\\n    rm -r sdk/tsconfig.json sdk/tsconfig.browser.json sdk/src && \\\n    rm -r tar-archiver/tsconfig.json tar-archiver/src && \\\n    rm -r cli/tsconfig.json cli/src && \\\n    # Install staticdeploy executable\n    ln -s /opt/staticdeploy/cli/bin/staticdeploy.js /usr/local/bin/staticdeploy && yarn cache clean;\n\n# Reset workdir\nWORKDIR /\n"
}