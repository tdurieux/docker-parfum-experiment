diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/fnproject/flow/vendor/github.com/apache/thrift/build/docker/ubuntu-xenial/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/fnproject/flow/vendor/github.com/apache/thrift/build/docker/ubuntu-xenial/Dockerfile/repaired.Dockerfile
index 255b6e8..f71c9b4 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/fnproject/flow/vendor/github.com/apache/thrift/build/docker/ubuntu-xenial/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/fnproject/flow/vendor/github.com/apache/thrift/build/docker/ubuntu-xenial/Dockerfile/repaired.Dockerfile
@@ -27,26 +27,26 @@ ENV DEBIAN_FRONTEND noninteractive
 
 ### Add apt repos
 
-RUN apt-get update && apt-get dist-upgrade -y && apt-get install -y --no-install-recommends apt apt-transport-https curl wget apt-utils
+RUN apt-get update && apt-get dist-upgrade -y && apt-get install -y --no-install-recommends apt apt-transport-https curl wget apt-utils && rm -rf /var/lib/apt/lists/*;
 
 # csharp (mono)
 # RUN echo "deb http://download.mono-project.com/repo/debian xenial main" | tee /etc/apt/sources.list.d/mono.list && \
 #     apt-key adv --keyserver keyserver.ubuntu.com --recv-keys A6A19B38D3D831EF
 
 # D
-RUN wget http://master.dl.sourceforge.net/project/d-apt/files/d-apt.list -O /etc/apt/sources.list.d/d-apt.list && \
+RUN wget https://master.dl.sourceforge.net/project/d-apt/files/d-apt.list -O /etc/apt/sources.list.d/d-apt.list && \
     wget -qO - https://dlang.org/d-keyring.gpg | apt-key add -
 ENV D_VERSION 2.073.2-0
 
 # Dart
-RUN curl https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - && \
-    curl https://storage.googleapis.com/download.dartlang.org/linux/debian/dart_stable.list > /etc/apt/sources.list.d/dart_stable.list && \
+RUN curl -f https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - && \
+    curl -f https://storage.googleapis.com/download.dartlang.org/linux/debian/dart_stable.list > /etc/apt/sources.list.d/dart_stable.list && \
     sed -i /etc/apt/sources.list.d/dart_stable.list -e 's/https:/http:/g'
 # since ubuntu-artful can't run dart, we'll run 1.240 on xenial for now
 ENV DART_VERSION 1.24.2-1
 
 # dotnet (core) 2.0.0
-RUN curl https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > /etc/apt/trusted.gpg.d/microsoft.gpg && \
+RUN curl -f https://packages.microsoft.com/keys/microsoft.asc | gpg --batch --dearmor > /etc/apt/trusted.gpg.d/microsoft.gpg && \
     echo "deb [arch=amd64] https://packages.microsoft.com/repos/microsoft-ubuntu-xenial-prod xenial main" > /etc/apt/sources.list.d/dotnetdev.list
 
 # node.js (this step runs apt-get update internally)
@@ -69,7 +69,7 @@ RUN apt-get update && apt-get install -y --no-install-recommends \
       ninja-build \
       pkg-config \
       valgrind \
-      vim
+      vim && rm -rf /var/lib/apt/lists/*;
 ENV PATH /usr/lib/llvm-3.8/bin:$PATH
 
 ### languages
@@ -86,11 +86,11 @@ RUN apt-get install -y --no-install-recommends \
       libssl-dev \
       qt5-default \
       qtbase5-dev \
-      qtbase5-dev-tools
+      qtbase5-dev-tools && rm -rf /var/lib/apt/lists/*;
 
 RUN apt-get install -y --no-install-recommends \
 `# csharp (mono) dependencies` \
-      mono-devel
+      mono-devel && rm -rf /var/lib/apt/lists/*;
 
 RUN apt-get install -y --allow-unauthenticated --no-install-recommends \
 `# D dependencies` \
@@ -101,7 +101,7 @@ RUN apt-get install -y --allow-unauthenticated --no-install-recommends \
       dscanner \
       libevent-dev \
       libssl-dev \
-      xdg-utils
+      xdg-utils && rm -rf /var/lib/apt/lists/*;
 # libevent deimos doesn't seem to work so not enabling it:
 # RUN mkdir -p /usr/include/dmd/druntime/import/deimos /usr/include/dmd/druntime/import/C && \
 #     curl -sSL https://github.com/D-Programming-Deimos/libevent/archive/master.tar.gz| tar xz && \
@@ -116,12 +116,12 @@ RUN apt-get install -y --allow-unauthenticated --no-install-recommends \
 
 RUN apt-get install -y --no-install-recommends \
 `# Dart dependencies` \
-      dart=$DART_VERSION
+      dart=$DART_VERSION && rm -rf /var/lib/apt/lists/*;
 ENV PATH /usr/lib/dart/bin:$PATH
 
 RUN apt-get install -y --no-install-recommends \
 `# dotnet core dependencies` \
-      dotnet-sdk-2.0.0
+      dotnet-sdk-2.0.0 && rm -rf /var/lib/apt/lists/*;
 
 RUN apt-get install -y --no-install-recommends \
 `# Erlang dependencies` \
@@ -129,28 +129,28 @@ RUN apt-get install -y --no-install-recommends \
       erlang-eunit \
       erlang-dev \
       erlang-tools \
-      rebar
+      rebar && rm -rf /var/lib/apt/lists/*;
 
 RUN apt-get install -y --no-install-recommends \
 `# GlibC dependencies` \
-      libglib2.0-dev
+      libglib2.0-dev && rm -rf /var/lib/apt/lists/*;
 
 RUN apt-get install -y --no-install-recommends \
 `# golang (go) dependencies` \
       golang-go \
-      golang-race-detector-runtime
+      golang-race-detector-runtime && rm -rf /var/lib/apt/lists/*;
 
 RUN apt-get install -y --no-install-recommends \
 `# Haskell dependencies` \
       ghc \
-      cabal-install
+      cabal-install && rm -rf /var/lib/apt/lists/*;
 
 RUN apt-get install -y --no-install-recommends \
 `# Haxe dependencies` \
       haxe \
       neko \
       neko-dev \
-      libneko0
+      libneko0 && rm -rf /var/lib/apt/lists/*;
 RUN haxelib setup --always /usr/share/haxe/lib && \
     haxelib install --always hxcpp 3.4.64
 # note: hxcpp 3.4.185 (latest) no longer ships static libraries, and caused a build failure
@@ -160,12 +160,12 @@ RUN apt-get install -y --no-install-recommends \
       ant \
       ant-optional \
       openjdk-8-jdk \
-      maven
+      maven && rm -rf /var/lib/apt/lists/*;
 
 RUN apt-get install -y --no-install-recommends \
 `# Lua dependencies` \
       lua5.2 \
-      lua5.2-dev
+      lua5.2-dev && rm -rf /var/lib/apt/lists/*;
 # https://bugs.launchpad.net/ubuntu/+source/lua5.3/+bug/1707212
 # lua5.3 does not install alternatives so stick with 5.2 here
 
@@ -173,14 +173,14 @@ RUN apt-get install -y --no-install-recommends \
 `# Node.js dependencies` \
       nodejs \
       npm && \
-    ln -s /usr/bin/nodejs /usr/bin/node
+    ln -s /usr/bin/nodejs /usr/bin/node && rm -rf /var/lib/apt/lists/*;
 
 RUN apt-get install -y --no-install-recommends \
 `# OCaml dependencies` \
       ocaml \
       opam && \
     opam init --yes && \
-    opam install --yes oasis
+    opam install --yes oasis && rm -rf /var/lib/apt/lists/*;
 
 RUN apt-get install -y --no-install-recommends \
 `# Perl dependencies` \
@@ -188,7 +188,7 @@ RUN apt-get install -y --no-install-recommends \
       libclass-accessor-class-perl \
       libcrypt-ssleay-perl \
       libio-socket-ssl-perl \
-      libnet-ssleay-perl
+      libnet-ssleay-perl && rm -rf /var/lib/apt/lists/*;
 
 RUN apt-get install -y --no-install-recommends \
 `# Php dependencies` \
@@ -197,7 +197,7 @@ RUN apt-get install -y --no-install-recommends \
       php7.0-dev \
       php-pear \
       re2c \
-      phpunit
+      phpunit && rm -rf /var/lib/apt/lists/*;
 
 RUN apt-get install -y --no-install-recommends \
 `# Python dependencies` \
@@ -222,19 +222,19 @@ RUN apt-get install -y --no-install-recommends \
       python3-twisted \
       python3-wheel \
       python3-zope.interface && \
-    pip install --upgrade backports.ssl_match_hostname
+    pip install --no-cache-dir --upgrade backports.ssl_match_hostname && rm -rf /var/lib/apt/lists/*;
 
 RUN apt-get install -y --no-install-recommends \
 `# Ruby dependencies` \
       ruby \
       ruby-dev \
-      ruby-bundler
+      ruby-bundler && rm -rf /var/lib/apt/lists/*;
 RUN gem install bundler --no-ri --no-rdoc
 
 RUN apt-get install -y --no-install-recommends \
 `# Rust dependencies` \
       cargo \
-      rustc
+      rustc && rm -rf /var/lib/apt/lists/*;
 
 # Clean up
 RUN rm -rf /var/cache/apt/* && \