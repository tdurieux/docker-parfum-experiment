{
  "startTime": 1674215171368,
  "endTime": 1674215172120,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 36
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# WARNING: THIS FILE IS MANAGED IN THE 'BOILERPLATE' REPO AND COPIED TO OTHER REPOSITORIES.\n# ONLY EDIT THIS FILE FROM WITHIN THE 'FLYTEORG/BOILERPLATE' REPOSITORY:\n#\n# TO OPT OUT OF UPDATES, SEE https://github.com/flyteorg/boilerplate/blob/master/Readme.rst\n\nFROM golang:1.13.3-alpine3.10 as builder\nRUN apk add --no-cache git openssh-client make curl\n\n# COPY only the go mod files for efficient caching\nCOPY go.mod go.sum /go/src/github.com/flyteorg/{{REPOSITORY}}/\nWORKDIR /go/src/github.com/flyteorg/{{REPOSITORY}}\n\n# Pull dependencies\nRUN go mod download\n\n# COPY the rest of the source code\nCOPY . /go/src/github.com/flyteorg/{{REPOSITORY}}/\n\n# This 'linux_compile' target should compile binaries to the /artifacts directory\n# The main entrypoint should be compiled to /artifacts/{{REPOSITORY}}\nRUN make linux_compile\n\n# update the PATH to include the /artifacts directory\nENV PATH=\"/artifacts:${PATH}\"\n\n# This will eventually move to centurylink/ca-certs:latest for minimum possible image size\nFROM alpine:3.13.7\nCOPY --from=builder /artifacts /bin\n\nRUN apk --update --no-cache add ca-certificates\n\nCMD [\"{{REPOSITORY}}\"]\n"
}