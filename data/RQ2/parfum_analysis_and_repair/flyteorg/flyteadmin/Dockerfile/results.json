{
  "startTime": 1674251002571,
  "endTime": 1674251004165,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 36
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# WARNING: THIS FILE IS MANAGED IN THE 'BOILERPLATE' REPO AND COPIED TO OTHER REPOSITORIES.\n# ONLY EDIT THIS FILE FROM WITHIN THE 'LYFT/BOILERPLATE' REPOSITORY:\n#\n# TO OPT OUT OF UPDATES, SEE https://github.com/lyft/boilerplate/blob/master/Readme.rst\n\nFROM golang:1.18-alpine3.15 as builder\nRUN apk add --no-cache git openssh-client make curl\n\n# Create the artifacts directory\nRUN mkdir /artifacts\n\n# Pull GRPC health probe binary for liveness and readiness checks\nRUN GRPC_HEALTH_PROBE_VERSION=v0.4.11 && \\\n    wget -qO/artifacts/grpc_health_probe https://github.com/grpc-ecosystem/grpc-health-probe/releases/download/${GRPC_HEALTH_PROBE_VERSION}/grpc_health_probe-linux-amd64 && \\\n    chmod +x /artifacts/grpc_health_probe && \\\n    echo 'ded15e598d887ccc47bf2321371950bbf930f5e4856b9f75712ce4b2b5120480  /artifacts/grpc_health_probe' > .grpc_checksum && \\\n    sha256sum -c .grpc_checksum\n\n# COPY only the go mod files for efficient caching\nCOPY go.mod go.sum /go/src/github.com/flyteorg/flyteadmin/\nWORKDIR /go/src/github.com/flyteorg/flyteadmin\n\n# Pull dependencies\nRUN go mod download\n\n\n# COPY the rest of the source code\nCOPY . /go/src/github.com/flyteorg/flyteadmin/\n\n# This 'linux_compile' target should compile binaries to the /artifacts directory\n# The main entrypoint should be compiled to /artifacts/flyteadmin\nRUN make linux_compile\n\n# update the PATH to include the /artifacts directory\nENV PATH=\"/artifacts:${PATH}\"\n\n# This will eventually move to centurylink/ca-certs:latest for minimum possible image size\nFROM alpine:3.16\nLABEL org.opencontainers.image.source https://github.com/flyteorg/flyteadmin\n\nCOPY --from=builder /artifacts /bin\n\n# Ensure the latest CA certs are present to authenticate SSL connections.\nRUN apk --update --no-cache add ca-certificates\n\nRUN addgroup -S flyte && adduser -S flyte -G flyte\nUSER flyte\n\nCMD [\"flyteadmin\"]\n"
}