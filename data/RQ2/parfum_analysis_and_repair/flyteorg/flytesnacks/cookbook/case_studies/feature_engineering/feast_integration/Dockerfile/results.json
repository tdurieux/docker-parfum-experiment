{
  "startTime": 1674254182830,
  "endTime": 1674254183497,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 22,
        "columnEnd": 45
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 22,
        "columnEnd": 45
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.8-buster\n\nWORKDIR /root\nENV VENV /opt/venv\nENV LANG C.UTF-8\nENV LC_ALL C.UTF-8\nENV PYTHONPATH \"$PYTHONPATH:/root/feast_integration\"\n\n# Install the AWS cli separately to prevent issues with boto being written over\nRUN pip3 install --no-cache-dir awscli\n\n# Install gcloud for GCP\nRUN apt-get update && apt-get install --no-install-recommends -y curl && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /opt\nRUN curl -f https://sdk.cloud.google.com > install.sh\nRUN bash /opt/install.sh --install-dir=/opt\nENV PATH $PATH:/opt/google-cloud-sdk/bin\nWORKDIR /root\n\n# Virtual environment\nENV VENV /opt/venv\nRUN python3 -m venv ${VENV}\nENV PATH=\"${VENV}/bin:$PATH\"\n\n# Install Python dependencies\nCOPY feast_integration/requirements.txt /root/.\nRUN ${VENV}/bin/pip install --no-cache-dir -r /root/requirements.txt\n\nCOPY feast_integration/sandbox.config /root/\nCOPY in_container.mk /root/Makefile\n\n# Copy the actual co\nCOPY feast_integration/ /root/feast_integration/\n\n# This tag is supplied by the build script and will be used to determine the version\n# when registering tasks, workflows, and launch plans\nARG tag\nENV FLYTE_INTERNAL_IMAGE $tag\n\n# Copy over the helper script that the SDK relies on\nRUN cp ${VENV}/bin/flytekit_venv /usr/local/bin/\nRUN chmod a+x /usr/local/bin/flytekit_venv\n"
}