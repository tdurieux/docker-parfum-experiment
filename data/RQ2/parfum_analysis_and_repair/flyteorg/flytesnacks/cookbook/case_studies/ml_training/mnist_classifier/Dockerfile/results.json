{
  "startTime": 1674218569722,
  "endTime": 1674218570930,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 22,
        "columnEnd": 77
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 22,
        "columnEnd": 77
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM pytorch/pytorch:1.9.0-cuda10.2-cudnn7-runtime\nLABEL org.opencontainers.image.source https://github.com/flyteorg/flytesnacks\n\nWORKDIR /root\nENV LANG C.UTF-8\nENV LC_ALL C.UTF-8\nENV PYTHONPATH /root\n\n# Set your wandb API key and user name. Get the API key from https://wandb.ai/authorize.\n# ENV WANDB_API_KEY <api_key>\n# ENV WANDB_USERNAME <user_name>\n\n# Install the AWS cli for AWS support\nRUN pip install --no-cache-dir awscli\n\n# Install gcloud for GCP\nRUN apt-get update && apt-get install --no-install-recommends -y make build-essential libssl-dev curl && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /opt\nRUN curl -f https://sdk.cloud.google.com > install.sh\nRUN bash /opt/install.sh --install-dir=/opt\nENV PATH $PATH:/opt/google-cloud-sdk/bin\nWORKDIR /root\n\n# Virtual environment\nENV VENV /opt/venv\nRUN python3 -m venv ${VENV}\nENV PATH=\"${VENV}/bin:$PATH\"\n\n# Install Python dependencies\nCOPY mnist_classifier/requirements.txt /root\nRUN pip install --no-cache-dir -r /root/requirements.txt\n\n# Copy the actual code\nCOPY mnist_classifier/ /root/mnist_classifier/\n\n# Copy the makefile targets to expose on the container. This makes it easier to register.\nCOPY in_container.mk /root/Makefile\nCOPY mnist_classifier/sandbox.config /root\n\n# This tag is supplied by the build script and will be used to determine the version\n# when registering tasks, workflows, and launch plans\nARG tag\nENV FLYTE_INTERNAL_IMAGE $tag\n"
}