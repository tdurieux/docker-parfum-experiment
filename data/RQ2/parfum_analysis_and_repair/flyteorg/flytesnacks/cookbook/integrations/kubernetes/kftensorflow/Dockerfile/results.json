{
  "startTime": 1674215067273,
  "endTime": 1674215068330,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 22,
        "columnEnd": 90
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 22,
        "columnEnd": 90
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM tensorflow/tensorflow:latest-gpu\n# You can disable GPU support by replacing the above line with:\n# FROM tensorflow/tensorflow:latest\n\nLABEL org.opencontainers.image.source https://github.com/flyteorg/flytesnacks\n\nWORKDIR /root\nENV LANG C.UTF-8\nENV LC_ALL C.UTF-8\nENV PYTHONPATH /root\nENV DEBIAN_FRONTEND noninteractive\nENV TERM linux\n\n# Install basics\nRUN apt-key adv --fetch-keys http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64/3bf863cc.pub\nRUN apt-get update && apt-get install --no-install-recommends -y make build-essential libssl-dev curl python3-venv && rm -rf /var/lib/apt/lists/*;\n\n# Install the AWS cli separately to prevent issues with boto being written over\nRUN pip install --no-cache-dir awscli\n\nWORKDIR /opt\nRUN curl -f https://sdk.cloud.google.com > install.sh\nRUN bash /opt/install.sh --install-dir=/opt\nENV PATH $PATH:/opt/google-cloud-sdk/bin\nWORKDIR /root\n\nENV VENV /opt/venv\n# Virtual environment\nRUN python3 -m venv ${VENV}\nENV PATH=\"${VENV}/bin:$PATH\"\n\n# Install wheel after venv is activated\nRUN pip3 install --no-cache-dir wheel\n\n# Install Python dependencies\nCOPY kftensorflow/requirements.txt /root\nRUN pip install --no-cache-dir -r /root/requirements.txt\n\n# Copy the makefile targets to expose on the container. This makes it easier to register.\nCOPY in_container.mk /root/Makefile\nCOPY kftensorflow/sandbox.config /root\n\n# Copy the actual code\nCOPY kftensorflow/ /root/kftensorflow/\n\n# This tag is supplied by the build script and will be used to determine the version\n# when registering tasks, workflows, and launch plans\nARG tag\nENV FLYTE_INTERNAL_IMAGE $tag\n"
}