{
  "startTime": 1674254525337,
  "endTime": 1674254526537,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 16
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# TESTER STAGE\n#\n\nFROM python:3.8.3-alpine3.12 as tester\n\nWORKDIR /operator-src\n\nADD ./src/ .\nADD .flake8 .\n\nRUN apk update\nRUN pip install --no-cache-dir --upgrade pip\nRUN pip install --no-cache-dir -r requirements-dev.txt\n\n# TODO: Run unit tests here\n\n# TODO: Submit test artifacts somewhere\n\n#\n# BUILDER STAGE\n#\n\nFROM python:3.8.3-alpine3.12 as builder\n\nWORKDIR /operator-src\n\nCOPY --from=tester /operator-src/ .\n\nRUN apk update\n# Reference: https://pythonspeed.com/articles/activate-virtualenv-dockerfile/\nENV VIRTUAL_ENV=/operator\nRUN python3 -m venv $VIRTUAL_ENV\nENV PATH=\"$VIRTUAL_ENV/bin:$PATH\"\nRUN pip install --no-cache-dir --upgrade pip\n# We are using requirements.txt to constrain the dependency versions to the\n# ones that we have tested with so as the lessen the build and deployment\n# variables and make our deployments more deterministic.\nRUN pip install --no-cache-dir -c requirements.txt .\n\n# Install Helm 3\nRUN apk add --no-cache wget\nRUN wget https://get.helm.sh/helm-v3.2.4-linux-amd64.tar.gz -O /tmp/helm.tar.gz 2>&1\nRUN mkdir -p /tmp/helm\nRUN tar -xvf /tmp/helm.tar.gz -C /tmp/helm && rm /tmp/helm.tar.gz\nRUN cp /tmp/helm/linux-amd64/helm $VIRTUAL_ENV/bin\n\n#\n# FINAL STAGE\n#\n\nFROM python:3.8.3-alpine3.12\n\n# Copy the virtual environment only since it has all that we need and\n# none of the cruft.\nWORKDIR /operator\n\nCOPY --from=builder /operator/ .\n\nENV VIRTUAL_ENV=/operator\nENV PATH=\"$VIRTUAL_ENV/bin:$PATH\"\n\n# This is based on the package name declared in src/setup.py\nENTRYPOINT [\"python-based-operator\"]\n"
}