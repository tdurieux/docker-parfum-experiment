{
  "startTime": 1674251397973,
  "endTime": 1674251398947,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 45,
        "columnEnd": 80
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 85,
        "columnEnd": 128
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 7,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 34,
        "columnEnd": 65
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 69,
        "columnEnd": 88
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 92,
        "columnEnd": 114
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 7,
        "columnEnd": 25
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 29,
        "columnEnd": 66
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 70,
        "columnEnd": 94
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 98,
        "columnEnd": 119
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 7,
        "columnEnd": 23
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 27,
        "columnEnd": 57
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 12,
        "columnStart": 7,
        "columnEnd": 72
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 7,
        "columnEnd": 67
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 12,
        "columnStart": 7,
        "columnEnd": 72
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 7,
        "columnEnd": 67
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.10.0a6-buster\n\nLABEL name=\"CTF User Sim Container\"\n\n# Based on https://blog.jdriven.com/2021/05/create-a-docker-image-running-robot-framework/\n\n\n\n# Install Robot Reqs\nRUN apt-get update \\\n    && apt-get install --no-install-recommends -y xvfb wget ca-certificates fonts-liberation libasound2 libatk-bridge2.0-0 libatk1.0-0 \\\n       libatspi2.0-0 libcups2 libdbus-1-3 libgbm1 libgtk-3-0 libnspr4 libnss3 \\\n       libxcomposite1 libxkbcommon0 libxrandr2 xdg-utils ntpdate openssl && rm -rf /var/lib/apt/lists/*;\n\nRUN python3 -m pip install robotframework && pip install --no-cache-dir robotframework-requests && pip install --no-cache-dir robotframework-selenium2library \\\n    && pip install --no-cache-dir xvfbwrapper && pip install --no-cache-dir robotframework-xvfb && pip install --no-cache-dir certifi && pip install --no-cache-dir asn1crypto \\\n    && pip install --no-cache-dir bcrypt && pip install --no-cache-dir robotframework-sshlibrary && pip install --no-cache-dir cryptography && pip install --no-cache-dir pyOpenSSL \\\n    && pip install --no-cache-dir idna && pip install --no-cache-dir requests[security]\n\n# install chrome and chromedriver in one run command to clear build caches for new versions (both version need to match)\nRUN wget -q https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb \\\n    && dpkg -i google-chrome*.deb \\\n    && rm google-chrome*.deb \\\n    && wget -q https://chromedriver.storage.googleapis.com/100.0.4896.60/chromedriver_linux64.zip \\\n    && unzip chromedriver_linux64.zip \\\n    && rm chromedriver_linux64.zip \\\n    && mv chromedriver /usr/local/bin \\\n    && chmod +x /usr/local/bin/chromedriver\n\n\n\n# Install Test Tools\n\nRUN apt-get update \\\n    && apt-get install --no-install-recommends -y nmap gobuster curl hydra sqlmap moreutils && rm -rf /var/lib/apt/lists/*;\n\n\nCMD [\"bash\", \"/scripts/usersim.py\"]"
}