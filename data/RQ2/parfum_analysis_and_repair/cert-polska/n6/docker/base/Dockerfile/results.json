{
  "startTime": 1674217299257,
  "endTime": 1674217300392,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 144,
        "lineEnd": 144,
        "columnStart": 11,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 115,
        "lineEnd": 115,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 116,
        "lineEnd": 116,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 117,
        "lineEnd": 117,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 155,
        "lineEnd": 155,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 156,
        "lineEnd": 156,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 157,
        "lineEnd": 157,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 145,
        "lineEnd": 145,
        "columnStart": 11,
        "columnEnd": 54
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 18,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 93,
        "lineEnd": 95,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 18,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 93,
        "lineEnd": 95,
        "columnStart": 4,
        "columnEnd": 24
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 93,
        "lineEnd": 95,
        "columnStart": 4,
        "columnEnd": 24
      }
    }
  ],
  "repairedDockerfile": "ARG DOCKER_IMAGE=debian:bullseye-slim\nFROM $DOCKER_IMAGE\n\n# interactive mode\nENV TERM xterm\nENV DEBIAN_FRONTEND noninteractive\n\nARG use-proxy\nARG apt-proxy-nask\n\nRUN \\\n\n    echo 'Acquire::Retries \"5\";' > /etc/apt/apt.conf.d/99AcquireRetries; \\\n    # apt-related: optional custom (our-organization-specific) proxy\n    if [ \"${use-proxy}\" = \"true\" ]; then \\\n        echo 'Acquire::http { Proxy \"${apt-proxy-nask}\"; };' > /etc/apt/apt.conf.d/90proxy; \\\n    fi; \\\n    apt-get update && \\\n    apt-get install --no-install-recommends -y \\\n        apache2 \\\n        build-essential \\\n        curl \\\n        default-libmysqlclient-dev \\\n        iputils-ping \\\n        libapache2-mod-wsgi-py3 \\\n        libattr1-dev \\\n        libcurl4-openssl-dev \\\n        libffi-dev \\\n        libfuse-dev \\\n        libgeoip1 \\\n        libsasl2-dev \\\n        libssl-dev \\\n        libxml2-dev \\\n        libxslt1-dev \\\n        libyajl2 \\\n        nodejs \\\n        npm \\\n        python2.7 \\\n        python2.7-dev \\\n        python3 \\\n        python3-dev \\\n        python3-venv \\\n        virtualenv \\\n        redis-tools \\\n        rsyslog \\\n        ssh \\\n        sudo \\\n        supervisor \\\n        swig \\\n        wget \\\n        zlib1g-dev \\\n        libncurses5-dev \\\n        libgdbm-dev \\\n        libnss3-dev \\\n        libreadline-dev \\\n        libsqlite3-dev \\\n        libbz2-dev && \\\n    npm install -g npm@latest && \\\n    npm install node-sass && \\\n    bash -c \"echo 'ServerName localhost' >> /etc/apache2/apache2.conf\"; npm cache clean --force; rm -rf /var/lib/apt/lists/*; \\\n    # create dataman user\n    groupadd -g 1000 dataman && \\\n    useradd -rm \\\n            -d /home/dataman \\\n            -s /bin/bash \\\n            -p '' \\\n            -g dataman \\\n            -G root,sudo,www-data \\\n            -u 1000 dataman && \\\n    echo \"dataman\tALL=(ALL:ALL) NOPASSWD:ALL\" >> /etc/sudoers; \\\n    # n6 directory structure\n    bash -c \"mkdir -p /etc/ssh /home/dataman/{.n6,logs,tmp} /var/www /etc/apache2/sites-available /home/dataman/.cache/n6/n6api/{python-eggs,python3k-eggs} /home/dataman/.cache/n6/n6portal/{python-eggs,python3k-eggs} /home/dataman/.cache/n6/n6adminpanel/{python-eggs,python3k-eggs}\" && \\\n    chown -R dataman:dataman \\\n        /home/dataman/ /var/www /etc/ssh/ /etc/apache2/sites-available && \\\n    chmod -R 755 \\\n        /home/dataman/ /var/www /etc/ssh/ /etc/apache2/sites-available; \\\n    chown -R dataman:www-data \\\n        /home/dataman/.cache/n6/n6api/python-eggs /home/dataman/.cache/n6/n6api/python3k-eggs \\\n        /home/dataman/.cache/n6/n6portal/python-eggs /home/dataman/.cache/n6/n6portal/python3k-eggs \\\n        /home/dataman/.cache/n6/n6adminpanel/python-eggs /home/dataman/.cache/n6/n6adminpanel/python3k-eggs && \\\n    chmod -R 755 \\\n        /home/dataman/.cache/n6/n6api/python-eggs /home/dataman/.cache/n6/n6api/python3k-eggs \\\n        /home/dataman/.cache/n6/n6portal/python-eggs /home/dataman/.cache/n6/n6portal/python3k-eggs \\\n        /home/dataman/.cache/n6/n6adminpanel/python-eggs /home/dataman/.cache/n6/n6adminpanel/python3k-eggs; \\\n    # RabbitMQ client\n    wget https://raw.githubusercontent.com/rabbitmq/rabbitmq-management/v3.8.x/bin/rabbitmqadmin -P /usr/local/bin/ && \\\n    sed -i '1i#!/usr/bin/env python\\n' /usr/local/bin/rabbitmqadmin && \\\n    chown dataman:dataman /usr/local/bin/rabbitmqadmin && \\\n    chmod +x /usr/local/bin/rabbitmqadmin; \\\n    # Mongo & MySQL client\n    wget -qO - https://www.mongodb.org/static/pgp/server-4.2.asc | apt-key add - && \\\n    echo \"deb http://repo.mongodb.org/apt/debian buster/mongodb-org/4.2 main\" | tee /etc/apt/sources.list.d/mongodb-org.list && \\\n    apt-get update && \\\n    apt-get install --no-install-recommends -y \\\n        mongodb-org-shell \\\n    default-mysql-client && \\\n    apt-get clean;\n\nUSER dataman\nWORKDIR /home/dataman\n\nCOPY --chown=dataman:dataman . n6\n\nRUN set -ex; \\\n    # pip-related: optional custom (our-organization-specific) configuration, including proxy\n    if [ \"${use-proxy}\" = \"true\" ]; then \\\n        mkdir -p /home/dataman/.config/pip/; \\\n        cp n6/test_N6Itests/docker-non-pub/etc/pip/pip.conf /home/dataman/.config/pip/; \\\n        cp n6/test_N6Itests/docker-non-pub/etc/pip/.pydistutils.cfg /home/dataman/; \\\n    fi; \\\n    # copy certs\n    cp -rf n6/etc/ssl/generated_certs certs; \\\n    # create virtualenv (n6)\n    virtualenv --python=/usr/bin/python2.7 env; \\\n    . env/bin/activate; \\\n    pip install --no-cache-dir --upgrade pip -i https://pypi.python.org/simple/; \\\n    pip install --no-cache-dir --upgrade 'setuptools<45.0.0'; \\\n    pip install --no-cache-dir --upgrade wheel; \\\n    # workaround against crash during normal install of httplib2 (needed by some test tools...)\n    wget https://files.pythonhosted.org/packages/92/92/478727070c62def583e645ceeba18e69df266bf78e11639bc787c2386421/httplib2-0.20.1.tar.gz; \\\n    tar xf httplib2-0.20.1.tar.gz; \\\n    rm httplib2-0.20.1.tar.gz; \\\n    cd httplib2-0.20.1; \\\n    python setup.py install; \\\n    cd ..; \\\n    rm -rf httplib2-0.20.1; \\\n    # install tools for n6 tests\n    pip install --no-cache-dir \\\n        coverage==5.6b1 \\\n        nose \\\n        pytest==4.6.11 \\\n        pytest-cov==2.12.1 \\\n        timeout_decorator \\\n        puka \\\n        pycurl \\\n        pylint==1.9.2 \\\n        pylint-exit \\\n        pyrabbit \\\n        unittest_expander==0.3.1 \\\n        unittest-xml-reporting==2.5.2; \\\n    # install portal js dependencies\n    cd /home/dataman/n6/N6Portal/gui \\\n        && npm set progress=false \\\n        && npm config set depth 0 \\\n        && npm install \\\n        && tar -zcf ~/node_modules.tar.gz node_modules \\\n        && rm -rf node_modules; npm cache clean --force; rm ~/node_modules.tar.gz \\\n    # entrypoint\n    cp ~/n6/docker/base/entrypoint.sh ~/; \\\n    chmod a+x /home/dataman/entrypoint.sh;\n\nRUN \\\n\n    python3.9 -m venv env_py3k; \\\n    . env_py3k/bin/activate; \\\n    pip install --no-cache-dir --upgrade pip -i https://pypi.python.org/simple/; \\\n    pip install --no-cache-dir --upgrade setuptools; \\\n    pip install --no-cache-dir --upgrade wheel; \\\n    # install tools for n6 tests\n    pip install --no-cache-dir \\\n        unittest_expander==0.3.1 \\\n        pytest==4.6.11 \\\n        pytest-cov==2.12.1 \\\n        coverage\n\nRUN rm -rf /home/dataman/n6\n\nENTRYPOINT [\"/home/dataman/entrypoint.sh\"]\n\n# Command to build:\n# docker build -t n6_base -f docker/base/Dockerfile .\n"
}