diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/cert-polska/n6/docker/base/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/cert-polska/n6/docker/base/Dockerfile/repaired.Dockerfile
index f47eb9f..3d2e07a 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/cert-polska/n6/docker/base/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/cert-polska/n6/docker/base/Dockerfile/repaired.Dockerfile
@@ -9,14 +9,14 @@ ARG use-proxy
 ARG apt-proxy-nask
 
 RUN \
-    # install base dependencies
+
     echo 'Acquire::Retries "5";' > /etc/apt/apt.conf.d/99AcquireRetries; \
     # apt-related: optional custom (our-organization-specific) proxy
     if [ "${use-proxy}" = "true" ]; then \
         echo 'Acquire::http { Proxy "${apt-proxy-nask}"; };' > /etc/apt/apt.conf.d/90proxy; \
     fi; \
     apt-get update && \
-    apt-get install -y \
+    apt-get install --no-install-recommends -y \
         apache2 \
         build-essential \
         curl \
@@ -57,7 +57,7 @@ RUN \
         libbz2-dev && \
     npm install -g npm@latest && \
     npm install node-sass && \
-    bash -c "echo 'ServerName localhost' >> /etc/apache2/apache2.conf"; \
+    bash -c "echo 'ServerName localhost' >> /etc/apache2/apache2.conf"; npm cache clean --force; rm -rf /var/lib/apt/lists/*; \
     # create dataman user
     groupadd -g 1000 dataman && \
     useradd -rm \
@@ -91,7 +91,7 @@ RUN \
     wget -qO - https://www.mongodb.org/static/pgp/server-4.2.asc | apt-key add - && \
     echo "deb http://repo.mongodb.org/apt/debian buster/mongodb-org/4.2 main" | tee /etc/apt/sources.list.d/mongodb-org.list && \
     apt-get update && \
-    apt-get install -y \
+    apt-get install --no-install-recommends -y \
         mongodb-org-shell \
     default-mysql-client && \
     apt-get clean;
@@ -113,9 +113,9 @@ RUN set -ex; \
     # create virtualenv (n6)
     virtualenv --python=/usr/bin/python2.7 env; \
     . env/bin/activate; \
-    pip install --upgrade pip -i https://pypi.python.org/simple/; \
-    pip install --upgrade 'setuptools<45.0.0'; \
-    pip install --upgrade wheel; \
+    pip install --no-cache-dir --upgrade pip -i https://pypi.python.org/simple/; \
+    pip install --no-cache-dir --upgrade 'setuptools<45.0.0'; \
+    pip install --no-cache-dir --upgrade wheel; \
     # workaround against crash during normal install of httplib2 (needed by some test tools...)
     wget https://files.pythonhosted.org/packages/92/92/478727070c62def583e645ceeba18e69df266bf78e11639bc787c2386421/httplib2-0.20.1.tar.gz; \
     tar xf httplib2-0.20.1.tar.gz; \
@@ -144,18 +144,18 @@ RUN set -ex; \
         && npm config set depth 0 \
         && npm install \
         && tar -zcf ~/node_modules.tar.gz node_modules \
-        && rm -rf node_modules; \
+        && rm -rf node_modules; npm cache clean --force; rm ~/node_modules.tar.gz \
     # entrypoint
     cp ~/n6/docker/base/entrypoint.sh ~/; \
     chmod a+x /home/dataman/entrypoint.sh;
 
 RUN \
-    # create virtualenv (n6)
+
     python3.9 -m venv env_py3k; \
     . env_py3k/bin/activate; \
-    pip install --upgrade pip -i https://pypi.python.org/simple/; \
-    pip install --upgrade setuptools; \
-    pip install --upgrade wheel; \
+    pip install --no-cache-dir --upgrade pip -i https://pypi.python.org/simple/; \
+    pip install --no-cache-dir --upgrade setuptools; \
+    pip install --no-cache-dir --upgrade wheel; \
     # install tools for n6 tests
     pip install --no-cache-dir \
         unittest_expander==0.3.1 \