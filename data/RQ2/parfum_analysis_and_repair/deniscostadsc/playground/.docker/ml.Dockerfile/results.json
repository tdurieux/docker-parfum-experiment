{
  "startTime": 1674246700100,
  "endTime": 1674246700632,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 33,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 36,
        "columnEnd": 55
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 36,
        "columnEnd": 55
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM gcc:8.5.0\n\nENV OCAML_VERSION 4.01.0\n\nRUN apt update && apt upgrade -y && apt install --no-install-recommends -y make && rm -rf /var/lib/apt/lists/*;\n\nRUN wget https://github.com/ocaml/ocaml/archive/refs/tags/${OCAML_VERSION}.zip\nRUN unzip ${OCAML_VERSION}.zip\nRUN cd ocaml-${OCAML_VERSION} && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make world.opt && make install\n\nRUN mkdir /code\nWORKDIR /code\n\nCMD cd $PROBLEM && \\\n    if [ \"$(find . -name '*.ml' | wc -l)\" -eq 1 ]; then \\\n        cp *.ml main.ml; \\\n        ocamlc -o ml.out main.ml; \\\n        if [ -f in.txt ]; then \\\n            ./ml.out < in.txt > result-ml.txt; \\\n        else \\\n            ./ml.out > result-ml.txt; \\\n        fi; \\\n        rm -rf ml.out main.ml main.cmi main.cmo; \\\n    fi\n"
}