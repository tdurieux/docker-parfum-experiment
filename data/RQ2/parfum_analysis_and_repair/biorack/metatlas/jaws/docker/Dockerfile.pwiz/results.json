{
  "startTime": 1674251118274,
  "endTime": 1674251118985,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 34
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04\n\nRUN apt-get update && \\\n    apt-get -y --no-install-recommends install unzip bzip2 && rm -rf /var/lib/apt/lists/*;\nRUN mkdir -p /wineprefix64/drive_c/pwiz/skyline\nADD pwiz-bin-windows-*.tar.bz2 /wineprefix64/drive_c/pwiz\nADD SkylineTester.zip /\nRUN unzip SkylineTester.zip && mv /SkylineTester\\ Files/* /wineprefix64/drive_c/pwiz/skyline && rm -fr /wineprefix64/drive_c/pwiz/skyline/TestZipFiles\n\n\nFROM chambm/wine-dotnet:4.7-x64\nCOPY --from=0 /wineprefix64/drive_c/pwiz /wineprefix64/drive_c/pwiz\n\nENV CONTAINER_GITHUB=https://github.com/ProteoWizard/container\n\nLABEL description=\"Convert MS RAW vendor files to open formats or analyze them with Skyline.\"\nLABEL website=https://github.com/ProteoWizard/container\nLABEL documentation=https://github.com/ProteoWizard/container\nLABEL license=https://github.com/ProteoWizard/container\nLABEL tags=\"Metabolomics,Proteomics,MassSpectrometry\"\n\nENV WINEDEBUG -all,err+all\nENV WINEPATH \"C:\\pwiz;C:\\pwiz\\skyline\"\n\n# sudo needed to run wine when container is run as a non-default user (e.g. -u 1234)\n# wine*_anyuser scripts are convenience scripts that work like wine/wine64 no matter what user calls them\nRUN apt-get update && \\\n    apt-get -y --no-install-recommends install sudo && \\\n    apt-get -y clean && \\\n    echo \"ALL     ALL=NOPASSWD:  ALL\" >> /etc/sudoers && \\\n    echo '#!/bin/sh\\nsudo -E -u root wine64 \"$@\"' > /usr/bin/wine64_anyuser && \\\n    echo '#!/bin/sh\\nsudo -E -u root wine \"$@\"' > /usr/bin/wine_anyuser && \\\n    chmod ugo+rx /usr/bin/wine*anyuser && \\\n    rm -rf \\\n      /var/lib/apt/lists/* \\\n      /usr/share/doc \\\n      /usr/share/doc-base \\\n      /usr/share/man \\\n      /usr/share/locale \\\n      /usr/share/zoneinfo\n\n# create UIDs that Galaxy uses in default configs to launch docker containers; the UID must exist for sudo to work\nRUN groupadd -r galaxy -g 1450 && \\\n    useradd -u 1450 -r -g galaxy -d /home/galaxy -c \"Galaxy user\" galaxy && \\\n    useradd -u 1000 -r -g galaxy -d /home/galaxy -c \"Galaxy docker user\" galaxy_docker && \\\n    useradd -u 2000 -r -g galaxy -d /home/galaxy -c \"Galaxy Travis user\" galaxy_travis && \\\n    useradd -u 999 -r -g galaxy -d /home/galaxy -c \"usegalaxy.eu user\" galaxy_eu\n\n# Set up working directory and permissions to let user xclient save data\nRUN mkdir /data\nWORKDIR /data\n\nCMD [\"wine64_anyuser\", \"msconvert\" ]\n\n## If you need a proxy during build, don't put it into the Dockerfile itself:\n## docker build --build-arg http_proxy=http://proxy.example.com:3128/  -t repo/image:version .\n\nADD mywine /usr/bin/\nRUN chmod ugo+rx /usr/bin/mywine\n"
}