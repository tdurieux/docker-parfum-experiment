{
  "startTime": 1674219503538,
  "endTime": 1674219504292,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 80
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 22,
        "columnEnd": 66
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 22,
        "columnEnd": 66
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# mainly from https://pythonwise.blogspot.com/2015/04/docker-miniconda-perfect-match.html\nFROM ubuntu:14.04\nMAINTAINER MAGI team <magi_web@lbl.gov>\nENV DEBIAN_FRONTEND=noninteractive\n\n# System packages\n# curl needed to install miniconda\n# libXrender1 and libxext6 needed for rdkit\nRUN apt-get update && apt-get install --no-install-recommends -y curl libXrender1 libxext6 && rm -rf /var/lib/apt/lists/*;\n\n# Install miniconda to /miniconda\nENV PATH=/miniconda/bin:${PATH}\nRUN curl -f -LO http://repo.continuum.io/miniconda/Miniconda-latest-Linux-x86_64.sh && \\\n    bash Miniconda-latest-Linux-x86_64.sh -p /miniconda -b && \\\n    rm Miniconda-latest-Linux-x86_64.sh\nRUN conda update -y conda\nCOPY magi_env.yml /\nRUN conda config --add channels conda-forge && \\\n    conda config --add channels rdkit && \\\n    conda env create -f magi_env.yml\n\n# this is how you activate the environment\nENV PATH /miniconda/envs/magi/bin:$PATH\n\n# Setup application\nRUN mkdir magi\nCOPY workflow magi/workflow\nCOPY local_settings magi/local_settings\nCOPY tests magi/tests\nCOPY __init__.py magi/\nCOPY setup_docker.py magi/\nRUN python /magi/setup_docker.py\n\nENTRYPOINT [\"python\", \"/magi/workflow/magi_workflow.py\"]\n\n# commands:\n\n# interactive shell\n# docker run --entrypoint /bin/bash -it magi_test\n\n# run a job\n# docker run -v [LOCAL OUTPUTS DIR]:/magi/outputs -v [LOCAL INPUTS DIR]:/magi/inputs -t magi_test -f /magi/inputs/[FASTA INPUT] -c /magi/inputs/[COMPOUND INPUT]\n\n# run a test\n# docker run -v ~/Desktop/magi_outputs:/magi/outputs -v ~/Desktop/magi_inputs:/magi/inputs -t magi_test -f /magi/inputs/s_coelicolor_genes_fasta_smallset.faa -c magi/inputs/s_coelicolor_pactolus_data_smallset.csv"
}