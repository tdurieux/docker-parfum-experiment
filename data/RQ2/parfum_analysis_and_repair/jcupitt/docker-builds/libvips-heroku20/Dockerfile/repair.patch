diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/jcupitt/docker-builds/libvips-heroku20/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/jcupitt/docker-builds/libvips-heroku20/Dockerfile/repaired.Dockerfile
index 314d651..27637d6 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/jcupitt/docker-builds/libvips-heroku20/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/jcupitt/docker-builds/libvips-heroku20/Dockerfile/repaired.Dockerfile
@@ -2,25 +2,25 @@ FROM heroku/heroku:20
 
 # generic build tools  ... libgsf needs intltool
 RUN apt-get update \
-	&& apt-get install -y \
+	&& apt-get install --no-install-recommends -y \
 		build-essential \
 		wget \
 		python3-pip \
 		ninja-build \
 		intltool \
-		pkg-config 
+		pkg-config && rm -rf /var/lib/apt/lists/*;
 
-RUN pip3 install meson
+RUN pip3 install --no-cache-dir meson
 
 # use the heroku platform libraries when we can
 #
 # see https://devcenter.heroku.com/articles/stack-packages
 #
 # libgsf needs libxml2
-# 
+#
 # this should only pull in header files and should not create any extra run
 # time dependencies
-RUN apt-get install -y \
+RUN apt-get install --no-install-recommends -y \
 	glib-2.0-dev \
 	libexpat1-dev \
 	libpango1.0-dev \
@@ -32,18 +32,18 @@ RUN apt-get install -y \
 	libexif-dev \
 	liblcms2-dev \
 	libxml2-dev \
-	libfftw3-dev 
+	libfftw3-dev && rm -rf /var/lib/apt/lists/*;
 
 WORKDIR /usr/local/src
 
-# build to this prefix 
-#  - heroku has /usr/local/lib on the default ld.so.conf search path, so 
+# build to this prefix
+#  - heroku has /usr/local/lib on the default ld.so.conf search path, so
 #    this is convenient
 #  - heroku has a basic dir structure in /usr/local, but no files
 ARG PREFIX=/usr/local
 ENV PKG_CONFIG_PATH=$PREFIX/lib/pkgconfig
 
-# the main libimagequant is now gpl3 and we can't use it ... this is a 
+# the main libimagequant is now gpl3 and we can't use it ... this is a
 # maintained fork of the old BSD-licensed version
 ARG IMAGEQUANT_VERSION=main
 ARG IMAGEQUANT_URL=https://github.com/lovell/libimagequant
@@ -61,7 +61,7 @@ RUN git clone $IMAGEQUANT_URL \
 # build pdfium for heroku18
 #COPY libpdfium-master-linux-x64.tar.gz /usr/src
 #RUN cd /usr/src/vips \
-#	&& tar xf ../libpdfium-master-linux-x64.tar.gz 
+#	&& tar xf ../libpdfium-master-linux-x64.tar.gz
 
 ARG ORC_VERSION=0.4.32
 ARG ORC_URL=https://gstreamer.freedesktop.org/src/orc
@@ -72,7 +72,7 @@ RUN wget ${ORC_URL}/orc-$ORC_VERSION.tar.xz \
 	&& meson build --prefix=${PREFIX} --libdir=lib \
 	&& cd build \
 	&& ninja \
-	&& ninja install
+	&& ninja install && rm orc-${ORC_VERSION}.tar.xz
 
 ARG GSF_VERSION=1.14.48
 ARG GSF_URL=http://ftp.gnome.org/pub/GNOME/sources/libgsf
@@ -80,9 +80,9 @@ ARG GSF_URL=http://ftp.gnome.org/pub/GNOME/sources/libgsf
 RUN wget ${GSF_URL}/${GSF_VERSION%.*}/libgsf-$GSF_VERSION.tar.xz \
 	&& tar xf libgsf-${GSF_VERSION}.tar.xz \
 	&& cd libgsf-${GSF_VERSION} \
-	&& ./configure --prefix=$PREFIX --disable-gtk-doc \
+	&& ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=$PREFIX --disable-gtk-doc \
 	&& make \
-	&& make install
+	&& make install && rm libgsf-${GSF_VERSION}.tar.xz
 
 # use cgif for GIF write
 ARG CGIF_VERSION=0.2.0
@@ -94,7 +94,7 @@ RUN wget ${CGIF_URL}/V${CGIF_VERSION}.tar.gz \
 	&& meson build --prefix=${PREFIX} --libdir=lib \
 	&& cd build \
 	&& ninja \
-	&& ninja install
+	&& ninja install && rm V${CGIF_VERSION}.tar.gz
 
 # use libspng for PNG load (libvips 8.13 will support PNG save as well, but
 # for now it's only load)
@@ -107,7 +107,7 @@ RUN wget ${SPNG_URL}/v${SPNG_VERSION}.tar.gz \
 	&& meson build --prefix=${PREFIX} --libdir=lib \
 	&& cd build \
 	&& ninja \
-	&& ninja install
+	&& ninja install && rm v${SPNG_VERSION}.tar.gz
 
 ARG VIPS_VERSION=8.12.2
 ARG VIPS_URL=https://github.com/libvips/libvips/releases/download
@@ -115,12 +115,12 @@ ARG VIPS_URL=https://github.com/libvips/libvips/releases/download
 RUN wget ${VIPS_URL}/v${VIPS_VERSION}/vips-${VIPS_VERSION}.tar.gz \
 	&& tar xzf vips-${VIPS_VERSION}.tar.gz \
 	&& cd vips-${VIPS_VERSION} \
-	&& ./configure --prefix=$PREFIX \
+	&& ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=$PREFIX \
 		--disable-deprecated \
 		--without-radiance \
 		--without-analyze \
 	&& make V=0 \
-	&& make install
+	&& make install && rm vips-${VIPS_VERSION}.tar.gz
 
 # clean and package
 RUN cd $PREFIX \
@@ -136,9 +136,9 @@ RUN cd $PREFIX \
  	&& ls -l $PREFIX/libvips-heroku20.tar.gz
 
 # install and test ruby-vips to confirm we can pick up the libraries
-# correctly 
+# correctly
 # we need ruby-dev to install ruby-ffi
 ENV LD_LIBRAY_PATH=$PREFIX/lib
-RUN apt-get install -y ruby-dev
+RUN apt-get install --no-install-recommends -y ruby-dev && rm -rf /var/lib/apt/lists/*;
 RUN gem install ruby-vips
 RUN ruby -e 'require "vips"; puts "ruby-vips: libvips #{Vips::LIBRARY_VERSION}"'