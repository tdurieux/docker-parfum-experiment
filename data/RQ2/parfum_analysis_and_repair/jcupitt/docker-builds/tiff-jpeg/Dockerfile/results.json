{
  "startTime": 1674248757282,
  "endTime": 1674248758503,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 5,
        "columnEnd": 16
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 79,
        "lineEnd": 79,
        "columnStart": 5,
        "columnEnd": 38
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 21,
        "columnStart": 5,
        "columnEnd": 14
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 24,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 64,
        "lineEnd": 71,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 24,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 64,
        "lineEnd": 71,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 21,
        "columnStart": 5,
        "columnEnd": 14
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 24,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 64,
        "lineEnd": 71,
        "columnStart": 4,
        "columnEnd": 12
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 24,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 64,
        "lineEnd": 71,
        "columnStart": 4,
        "columnEnd": 12
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:focal\n\nENV DEBIAN_FRONTEND=noninteractive\n\n\n# libvips installs to /usr/local by default .. /usr/local/bin is on the\n# default path in ubuntu, but /usr/local/lib is not\nENV LD_LIBRARY_PATH /usr/local/lib\n\n# basic build tools\nRUN apt-get update \\\n  && apt-get install --no-install-recommends -y \\\n    build-essential \\\n    autoconf \\\n    libtool \\\n    automake \\\n    nasm \\\n    unzip \\\n    wget \\\n    git \\\n    cmake \\\n    pkg-config && rm -rf /var/lib/apt/lists/*;\n\n# for mozjpeg\nRUN apt-get install --no-install-recommends -y \\\n  zlib1g-dev && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /usr/local/src\n\nARG MOZJPEG_VERSION=4.0.3\nARG MOZJPEG_URL=https://github.com/mozilla/mozjpeg/archive/refs/tags\n\nRUN wget ${MOZJPEG_URL}/v${MOZJPEG_VERSION}.tar.gz\n\nRUN tar xzf v${MOZJPEG_VERSION}.tar.gz \\\n  && cd mozjpeg-${MOZJPEG_VERSION} \\\n  && mkdir build \\\n  && cd build \\\n  && cmake -DPNG_SUPPORTED=0 -DCMAKE_INSTALL_PREFIX=/usr/local .. \\\n  && make \\\n  && make install && rm v${MOZJPEG_VERSION}.tar.gz\n\nENV PKG_CONFIG_PATH /usr/local/lib/pkgconfig\n\n# we need libtiff master, plus two patches from Even, see\n# https://gitlab.com/libtiff/libtiff/-/issues/266\n\nARG TIFF_VERSION=master\nARG TIFF_URL=https://gitlab.com/libtiff/libtiff.git\n\nRUN git config --global user.email \"jcupitt@gmail.com\" \\\n  && git config --global user.name \"John Cupitt\"\n\nRUN git clone ${TIFF_URL} \\\n  && cd libtiff \\\n#  && git pull origin 1a432d0769d9603c555a0b8205c1713115f35233 \\\n#  && git pull origin 6438425ae911ec97a08b47b87cfac9e5a9b9b047 \\\n  && ./autogen.sh \\\n  && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n  && make \\\n  && make install\n\n# we must not use any packages which depend directly or indirectly on libjpeg,\n# since we want to use our own mozjpeg build\nRUN apt-get install --no-install-recommends -y \\\n  libglib2.0-dev \\\n  libexpat-dev \\\n  libpng-dev \\\n  libgif-dev \\\n  libexif-dev \\\n  liblcms2-dev \\\n  liborc-dev && rm -rf /var/lib/apt/lists/*;\n\nARG VIPS_VERSION=8.11.0\nARG VIPS_URL=https://github.com/libvips/libvips/releases/download\n\nRUN wget ${VIPS_URL}/v${VIPS_VERSION}/vips-${VIPS_VERSION}.tar.gz\nRUN tar xzf vips-${VIPS_VERSION}.tar.gz \\\n  && cd vips-${VIPS_VERSION} \\\n  && CFLAGS=-g CXXFLAGS=-g ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n  && make V=0 \\\n  && make install && rm vips-${VIPS_VERSION}.tar.gz\n\n# the dir we share with the host\nWORKDIR /data\n"
}