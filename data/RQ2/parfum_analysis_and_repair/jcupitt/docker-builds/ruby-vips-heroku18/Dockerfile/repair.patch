diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/jcupitt/docker-builds/ruby-vips-heroku18/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/jcupitt/docker-builds/ruby-vips-heroku18/Dockerfile/repaired.Dockerfile
index d556ff2..199e646 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/jcupitt/docker-builds/ruby-vips-heroku18/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/jcupitt/docker-builds/ruby-vips-heroku18/Dockerfile/repaired.Dockerfile
@@ -2,7 +2,7 @@ FROM heroku/heroku:18
 
 # useful build tools ... we need gtk-doc to build orc, since they don't ship
 # pre-baked tarballs
-RUN apt-get update && apt-get install -y \
+RUN apt-get update && apt-get install --no-install-recommends -y \
 	build-essential \
 	autoconf \
 	automake \
@@ -12,7 +12,7 @@ RUN apt-get update && apt-get install -y \
 	unzip \
 	wget \
 	git \
-	pkg-config 
+	pkg-config && rm -rf /var/lib/apt/lists/*;
 
 # heroku:18 includes some libraries, like tiff and jpeg, as part of the
 # run-time platform, and we want to use those libs if we can
@@ -20,7 +20,7 @@ RUN apt-get update && apt-get install -y \
 # see https://devcenter.heroku.com/articles/stack-packages
 #
 # libgsf needs libxml2
-RUN apt-get install -y \
+RUN apt-get install --no-install-recommends -y \
 	glib-2.0-dev \
 	libexpat-dev \
 	librsvg2-dev \
@@ -30,7 +30,7 @@ RUN apt-get install -y \
 	libexif-dev \
 	liblcms2-dev \
 	libxml2-dev \
-	libfftw3-dev 
+	libfftw3-dev && rm -rf /var/lib/apt/lists/*;
 
 ARG GIFLIB_VERSION=5.1.4
 ARG GIFLIB_URL=http://downloads.sourceforge.net/project/giflib
@@ -39,14 +39,14 @@ RUN cd /usr/local/src \
 	&& wget ${GIFLIB_URL}/giflib-$GIFLIB_VERSION.tar.bz2 \
 	&& tar xf giflib-${GIFLIB_VERSION}.tar.bz2 \
 	&& cd giflib-${GIFLIB_VERSION} \
-	&& ./configure --prefix=/usr/local/vips \
+	&& ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/usr/local/vips \
 	&& make \
-	&& make install
+	&& make install && rm giflib-${GIFLIB_VERSION}.tar.bz2
 
 # orc uses ninja and meson to build
-RUN apt-get install -y \
-    python3-pip 
-RUN pip3 install ninja meson
+RUN apt-get install --no-install-recommends -y \
+    python3-pip && rm -rf /var/lib/apt/lists/*;
+RUN pip3 install --no-cache-dir ninja meson
 
 ARG ORC_VERSION=0.4.31
 ARG ORC_URL=https://github.com/GStreamer/orc/archive
@@ -58,7 +58,7 @@ RUN cd /usr/local/src \
 	&& meson build --prefix=/usr/local/vips --libdir=/usr/local/vips/lib \
 	&& cd build \
 	&& ninja \
-	&& ninja install
+	&& ninja install && rm ${ORC_VERSION}.tar.gz
 
 ARG GSF_VERSION=1.14.46
 ARG GSF_URL=http://ftp.gnome.org/pub/GNOME/sources/libgsf
@@ -67,9 +67,9 @@ RUN cd /usr/local/src \
 	&& wget ${GSF_URL}/${GSF_VERSION%.*}/libgsf-$GSF_VERSION.tar.xz \
 	&& tar xf libgsf-${GSF_VERSION}.tar.xz \
 	&& cd libgsf-${GSF_VERSION} \
-	&& ./configure --prefix=/usr/local/vips --disable-gtk-doc \
+	&& ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/usr/local/vips --disable-gtk-doc \
 	&& make \
-	&& make install
+	&& make install && rm libgsf-${GSF_VERSION}.tar.xz
 
 ARG VIPS_VERSION=8.9.0
 ARG VIPS_URL=https://github.com/libvips/libvips/releases/download
@@ -79,9 +79,9 @@ RUN cd /usr/src \
 	&& tar xzf vips-${VIPS_VERSION}.tar.gz \
 	&& cd vips-${VIPS_VERSION} \
 	&& export PKG_CONFIG_PATH=/usr/local/vips/lib/pkgconfig \
-	&& ./configure --prefix=/usr/local/vips --disable-gtk-doc \
+	&& ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/usr/local/vips --disable-gtk-doc \
 	&& make \
-	&& make install
+	&& make install && rm vips-${VIPS_VERSION}.tar.gz
 
 # clean the build area and make a tarball ready for packaging
 RUN cd /usr/local/vips \
@@ -95,8 +95,8 @@ RUN cd /usr/local/vips \
 	&& tar cfz libvips-dev-{VIPS_VERSION}.tar.gz vips
 
 # ruby-vips needs ffi, and ffi needs the dev headers for ruby
-RUN apt-get install -y \
-    ruby-dev 
+RUN apt-get install --no-install-recommends -y \
+    ruby-dev && rm -rf /var/lib/apt/lists/*;
 
 # test ruby-vips
 RUN export LD_LIBRARY_PATH=/usr/local/vips/lib \