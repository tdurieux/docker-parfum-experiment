{
  "startTime": 1674219002022,
  "endTime": 1674219003052,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 81,
        "lineEnd": 81,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 14,
        "columnStart": 22,
        "columnEnd": 11
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 22,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 13
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 46,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 97,
        "lineEnd": 98,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 22,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 13
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 46,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 97,
        "lineEnd": 98,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 14,
        "columnStart": 22,
        "columnEnd": 11
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 22,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 13
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 46,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 97,
        "lineEnd": 98,
        "columnStart": 4,
        "columnEnd": 12
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 22,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 13
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 46,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 97,
        "lineEnd": 98,
        "columnStart": 4,
        "columnEnd": 12
      }
    }
  ],
  "repairedDockerfile": "FROM heroku/heroku:18\n\n# useful build tools ... we need gtk-doc to build orc, since they don't ship\n# pre-baked tarballs\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n\tbuild-essential \\\n\tautoconf \\\n\tautomake \\\n\tlibtool \\\n\tintltool \\\n\tgtk-doc-tools \\\n\tunzip \\\n\twget \\\n\tgit \\\n\tpkg-config && rm -rf /var/lib/apt/lists/*;\n\n# heroku:18 includes some libraries, like tiff and jpeg, as part of the\n# run-time platform, and we want to use those libs if we can\n#\n# see https://devcenter.heroku.com/articles/stack-packages\n#\n# libgsf needs libxml2\nRUN apt-get install --no-install-recommends -y \\\n\tglib-2.0-dev \\\n\tlibexpat-dev \\\n\tlibrsvg2-dev \\\n\tlibpng-dev \\\n\tlibjpeg-dev \\\n\tlibtiff5-dev \\\n\tlibexif-dev \\\n\tliblcms2-dev \\\n\tlibxml2-dev \\\n\tlibfftw3-dev && rm -rf /var/lib/apt/lists/*;\n\nARG GIFLIB_VERSION=5.1.4\nARG GIFLIB_URL=http://downloads.sourceforge.net/project/giflib\n\nRUN cd /usr/local/src \\\n\t&& wget ${GIFLIB_URL}/giflib-$GIFLIB_VERSION.tar.bz2 \\\n\t&& tar xf giflib-${GIFLIB_VERSION}.tar.bz2 \\\n\t&& cd giflib-${GIFLIB_VERSION} \\\n\t&& ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/local/vips \\\n\t&& make \\\n\t&& make install && rm giflib-${GIFLIB_VERSION}.tar.bz2\n\n# orc uses ninja and meson to build\nRUN apt-get install --no-install-recommends -y \\\n    python3-pip && rm -rf /var/lib/apt/lists/*;\nRUN pip3 install --no-cache-dir ninja meson\n\nARG ORC_VERSION=0.4.31\nARG ORC_URL=https://github.com/GStreamer/orc/archive\n\nRUN cd /usr/local/src \\\n\t&& wget ${ORC_URL}/$ORC_VERSION.tar.gz \\\n\t&& tar xf ${ORC_VERSION}.tar.gz \\\n\t&& cd orc-${ORC_VERSION} \\\n\t&& meson build --prefix=/usr/local/vips --libdir=/usr/local/vips/lib \\\n\t&& cd build \\\n\t&& ninja \\\n\t&& ninja install && rm ${ORC_VERSION}.tar.gz\n\nARG GSF_VERSION=1.14.46\nARG GSF_URL=http://ftp.gnome.org/pub/GNOME/sources/libgsf\n\nRUN cd /usr/local/src \\\n\t&& wget ${GSF_URL}/${GSF_VERSION%.*}/libgsf-$GSF_VERSION.tar.xz \\\n\t&& tar xf libgsf-${GSF_VERSION}.tar.xz \\\n\t&& cd libgsf-${GSF_VERSION} \\\n\t&& ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/local/vips --disable-gtk-doc \\\n\t&& make \\\n\t&& make install && rm libgsf-${GSF_VERSION}.tar.xz\n\nARG VIPS_VERSION=8.9.0\nARG VIPS_URL=https://github.com/libvips/libvips/releases/download\n\nRUN cd /usr/src \\\n\t&& wget ${VIPS_URL}/v${VIPS_VERSION}/vips-${VIPS_VERSION}.tar.gz \\\n\t&& tar xzf vips-${VIPS_VERSION}.tar.gz \\\n\t&& cd vips-${VIPS_VERSION} \\\n\t&& export PKG_CONFIG_PATH=/usr/local/vips/lib/pkgconfig \\\n\t&& ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/local/vips --disable-gtk-doc \\\n\t&& make \\\n\t&& make install && rm vips-${VIPS_VERSION}.tar.gz\n\n# clean the build area and make a tarball ready for packaging\nRUN cd /usr/local/vips \\\n\t&& rm bin/gif* bin/orc* bin/gsf* bin/batch_* bin/vips-8.9 \\\n\t&& rm bin/vipsprofile bin/light_correct bin/shrink_width \\\n\t&& strip lib/*.a lib/lib*.so* \\\n\t&& rm -rf share/gtk-doc \\\n\t&& rm -rf share/man \\\n\t&& rm -rf share/thumbnailers \\\n\t&& cd /usr/local \\\n\t&& tar cfz libvips-dev-{VIPS_VERSION}.tar.gz vips\n\n# ruby-vips needs ffi, and ffi needs the dev headers for ruby\nRUN apt-get install --no-install-recommends -y \\\n    ruby-dev && rm -rf /var/lib/apt/lists/*;\n\n# test ruby-vips\nRUN export LD_LIBRARY_PATH=/usr/local/vips/lib \\\n\t&& gem install ruby-vips \\\n\t&& ruby -e 'require \"ruby-vips\"; puts \"success!\"'\n\n"
}