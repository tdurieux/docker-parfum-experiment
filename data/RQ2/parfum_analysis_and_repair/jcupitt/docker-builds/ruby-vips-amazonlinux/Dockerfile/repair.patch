diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/jcupitt/docker-builds/ruby-vips-amazonlinux/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/jcupitt/docker-builds/ruby-vips-amazonlinux/Dockerfile/repaired.Dockerfile
index ecba700..bfe91e4 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/jcupitt/docker-builds/ruby-vips-amazonlinux/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/jcupitt/docker-builds/ruby-vips-amazonlinux/Dockerfile/repaired.Dockerfile
@@ -5,18 +5,18 @@ RUN yum update -y \
 	&& yum groupinstall -y "Development Tools" \
 	&& yum install -y \
 		wget \
-		mercurial 
+		mercurial && rm -rf /var/cache/yum
 
 WORKDIR /build
 
 ENV WORKDIR="/build"
 ENV INSTALLDIR="/opt"
-ENV PKG_CONFIG_PATH=/usr/local/lib/pkgconfig 
+ENV PKG_CONFIG_PATH=/usr/local/lib/pkgconfig
 
 ARG PTOOLS_URL=http://mirror.centos.org/centos/8/PowerTools/x86_64/os/Packages
 ARG NASM_VERSION=2.15.03-3
-RUN curl $PTOOLS_URL/nasm-$NASM_VERSION.el8.x86_64.rpm --output nasm.rpm \
-	&& yum install -y nasm.rpm
+RUN curl -f $PTOOLS_URL/nasm-$NASM_VERSION.el8.x86_64.rpm --output nasm.rpm \
+	&& yum install -y nasm.rpm && rm -rf /var/cache/yum
 
 RUN hg clone http://hg.videolan.org/x265
 RUN cd ./x265/build/linux \
@@ -28,10 +28,10 @@ RUN cd ./x265/build/linux \
 ARG HEIF_URL=https://github.com/strukturag/libheif/releases/download
 ARG HEIF_VERSION=1.9.1
 
-RUN curl -L $HEIF_URL/v$HEIF_VERSION/libheif-$HEIF_VERSION.tar.gz | tar xz \
+RUN curl -f -L $HEIF_URL/v$HEIF_VERSION/libheif-$HEIF_VERSION.tar.gz | tar xz \
 	&& cd libheif-$HEIF_VERSION \
 	&& ./autogen.sh \
-	&& ./configure \
+	&& ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
 	&& make V=0 \
 	&& make install
 
@@ -48,14 +48,14 @@ RUN yum install -y \
 	libjpeg-turbo-devel \
 	libpng-devel \
 	libtiff-devel \
-	orc-devel 
+	orc-devel && rm -rf /var/cache/yum
 
 RUN wget $VIPS_URL/v$VIPS_VERSION/vips-$VIPS_VERSION.tar.gz \
 	&& tar xzf vips-$VIPS_VERSION.tar.gz \
 	&& cd vips-$VIPS_VERSION \
-	&& ./configure \
+	&& ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
 	&& make V=0 \
-	&& make install
+	&& make install && rm vips-$VIPS_VERSION.tar.gz
 
 # test ruby-vips
 RUN gem install ruby-vips \