{
  "startTime": 1674248200574,
  "endTime": 1674248201236,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 5,
        "columnEnd": 33
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 5,
        "columnEnd": 60
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 5,
        "columnEnd": 37
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 12,
        "columnStart": 5,
        "columnEnd": 14
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 50,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 50,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 12,
        "columnStart": 5,
        "columnEnd": 14
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 50,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 12
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 50,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 12
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:focal\n\n# non-interactive debconf\nENV DEBIAN_FRONTEND=noninteractive\n\n# basic stuff ... we build libvips from git master, so we need more packages\n# than just a tarball\nRUN apt-get update \\\n  && apt-get install --no-install-recommends -y \\\n    build-essential \\\n    nasm \\\n    wget \\\n    pkg-config && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get update \\\n  && apt-get install -y\n\n# build everything to this prefix\nENV PREFIX=/usr/local/vips\n\nENV PKG_CONFIG_PATH=$PREFIX/lib/pkgconfig \\\n  LD_LIBRARY_PATH=$PREFIX/lib \\\n  PATH=$PATH:$PREFIX/bin \\\n  WORKDIR=/usr/local/src\n\nWORKDIR $WORKDIR\n\nARG PDFIUM_VERSION=4290\nARG PDFIUM_URL=https://github.com/bblanchon/pdfium-binaries/releases/download/chromium\n\nRUN mkdir pdfium-$PDFIUM_VERSION \\\n  && cd pdfium-$PDFIUM_VERSION \\\n  && wget $PDFIUM_URL/$PDFIUM_VERSION/pdfium-linux.tgz\n\nRUN mkdir -p $PREFIX/lib/pkgconfig \\\n  && cd $PREFIX \\\n  && tar xf $WORKDIR/pdfium-$PDFIUM_VERSION/pdfium-linux.tgz \\\n  && echo \"prefix=$PREFIX\" >> lib/pkgconfig/pdfium.pc \\\n  && echo \"exec_prefix=\\${prefix}\" >> lib/pkgconfig/pdfium.pc \\\n  && echo \"libdir=\\${exec_prefix}/lib\" >> lib/pkgconfig/pdfium.pc \\\n  && echo \"includedir=\\${prefix}/include\" >> lib/pkgconfig/pdfium.pc \\\n  && echo \"Name: pdfium\" >> lib/pkgconfig/pdfium.pc \\\n  && echo \"Description: pdfium\" >> lib/pkgconfig/pdfium.pc \\\n  && echo \"Version: $PDFIUM_VERSION\" >> lib/pkgconfig/pdfium.pc \\\n  && echo \"Requires: \" >> lib/pkgconfig/pdfium.pc \\\n  && echo \"Libs: -L\\${libdir} -lpdfium\" >> lib/pkgconfig/pdfium.pc \\\n  && echo \"Cflags: -I\\${includedir}\" >> lib/pkgconfig/pdfium.pc && rm $WORKDIR/pdfium-$PDFIUM_VERSION/pdfium-linux.tgz\n\n# stuff we need to build our own libvips ... this is a pretty random selection\n# of dependencies, you'll want to adjust these\nRUN apt-get install --no-install-recommends -y \\\n\n  libicu-dev \\\n  libc++-dev \\\n  libc++abi-dev \\\n\n  glib-2.0-dev \\\n  libexpat-dev \\\n  librsvg2-dev \\\n  libpng-dev \\\n  libjpeg-dev \\\n  libexif-dev \\\n  liblcms2-dev \\\n  libheif-dev \\\n  liborc-dev && rm -rf /var/lib/apt/lists/*;\n\nARG VIPS_VERSION=8.12.2\nARG VIPS_URL=https://github.com/libvips/libvips/releases/download\n\nRUN wget $VIPS_URL/v$VIPS_VERSION/vips-$VIPS_VERSION.tar.gz \\\n  && tar xf vips-$VIPS_VERSION.tar.gz \\\n  && cd vips-$VIPS_VERSION \\\n  && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix $PREFIX \\\n  && make V=0 \\\n  && make install && rm vips-$VIPS_VERSION.tar.gz\n\nRUN vips -l pdfload_base\n"
}