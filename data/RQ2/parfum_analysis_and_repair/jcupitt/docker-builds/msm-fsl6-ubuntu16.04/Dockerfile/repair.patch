diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/jcupitt/docker-builds/msm-fsl6-ubuntu16.04/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/jcupitt/docker-builds/msm-fsl6-ubuntu16.04/Dockerfile/repaired.Dockerfile
index fcd8196..169067c 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/jcupitt/docker-builds/msm-fsl6-ubuntu16.04/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/jcupitt/docker-builds/msm-fsl6-ubuntu16.04/Dockerfile/repaired.Dockerfile
@@ -1,5 +1,5 @@
 FROM ubuntu:xenial
-LABEL Description="MSM on FSL6 on ubuntu 16.04" 
+LABEL Description="MSM on FSL6 on ubuntu 16.04"
 
 # install prerequsites
 # - build tools ... FSL6 on ubuntu is gcc 4.8
@@ -9,36 +9,35 @@ LABEL Description="MSM on FSL6 on ubuntu 16.04"
 #	Contents of section .comment:
 #	 0000 4743433a 2028474e 55292034 2e382e35  GCC: (GNU) 4.8.5
 #	 0010 20323031 35303632 33202852 65642048   20150623 (Red H
-#	 0020 61742034 2e382e35 2d333629 00        at 4.8.5-36).   
-# - FSL 6.0.0 needs "dc" 
+#	 0020 61742034 2e382e35 2d333629 00        at 4.8.5-36).  
+# - FSL 6.0.0 needs "dc"
 # - FSL latest
 
-RUN apt-get update
-RUN apt-get install -y \
+RUN apt-get update && apt-get install --no-install-recommends -y \
     gcc-4.8 g++-4.8 \
     wget git cmake unzip bc python python-contextlib2 \
     libtbb-dev libboost-dev zlib1g-dev libxt-dev libexpat1-dev \
-    libgstreamer1.0-dev libqt4-dev dc
+    libgstreamer1.0-dev libqt4-dev dc && rm -rf /var/lib/apt/lists/*;
 
 # install FSL to this prefix ... don't set FSLDIR as an ENV, it'll appear in
 # the image we make and break stuff downstream
 ENV fsl_prefix=/usr/local/fsl
 
 # -E is not suported on ubuntu (rhel only), so we make a quick n dirty
-# /etc/fsl/fsl.sh 
-RUN mkdir -p /usr/local/src/fsl 
+# /etc/fsl/fsl.sh
+RUN mkdir -p /usr/local/src/fsl
 COPY fslinstaller.py /usr/local/src/fsl
 RUN cd /usr/local/src/fsl \ 
     && python fslinstaller.py -V 6.0.2 -q -d $fsl_prefix \
     && mkdir -p /etc/fsl \
-    && echo "FSLDIR=$fsl_prefix; . \${FSLDIR}/etc/fslconf/fsl.sh; PATH=\${FSLDIR}/bin:\${PATH}; export FSLDIR PATH" > /etc/fsl/fsl.sh 
+    && echo "FSLDIR=$fsl_prefix; . \${FSLDIR}/etc/fslconf/fsl.sh; PATH=\${FSLDIR}/bin:\${PATH}; export FSLDIR PATH" > /etc/fsl/fsl.sh
 
 # set FSL up for build:
-# 	- ${FSLDIR}/etc/fslconf/fsl.sh needs to be patched to enable 
+# 	- ${FSLDIR}/etc/fslconf/fsl.sh needs to be patched to enable
 # 	  FSLCONFDIR, FSLMACHTYPE, and the associated export
 COPY fsl.sh.patch /usr/local/src/fsl
 RUN cd $fsl_prefix/etc/fslconf \
-    && patch < /usr/local/src/fsl/fsl.sh.patch 
+    && patch < /usr/local/src/fsl/fsl.sh.patch
 
 # switch the default compiler to 4.8 to match the fsl binary
 RUN update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.8 50 \
@@ -65,7 +64,7 @@ RUN cd && cd \
     && cd MSM_HOCR \
     && git checkout struct-pipeline-build \
     && cp -r extras/ELC1.04/ELC $FSLDEVDIR/extras/include/ELC \
-    && cp -r $FSLDIR/src/FastPDlib $FSLDEVDIR/extras/src 
+    && cp -r $FSLDIR/src/FastPDlib $FSLDEVDIR/extras/src
 
 # build MSM, and replace the FSL msm with our own
 RUN cd /usr/local/src \