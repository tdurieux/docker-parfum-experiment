{
  "startTime": 1674252239073,
  "endTime": 1674252240159,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 7,
        "columnEnd": 111
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 7,
        "columnEnd": 125
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:bionic\n\nCOPY linux-sgx.gpg /tmp/docker/\n\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n               apt-transport-https \\\n               build-essential \\\n               clang \\\n               curl \\\n               gpg-agent \\\n               libcurl4-openssl-dev \\\n               libprotobuf-dev \\\n               libssl-dev \\\n               libprotobuf10 \\\n               openjdk-11-jdk-headless \\\n               pkg-config \\\n               software-properties-common \\\n               maven \\\n    && apt-key add /tmp/docker/linux-sgx.gpg \\\n    && apt-add-repository \"deb https://download.01.org/intel-sgx/sgx_repo/ubuntu bionic main\" \\\n    && apt-get install --no-install-recommends -y --download-only libsgx-enclave-common=2.7.101.3-bionic1 libsgx-enclave-common-dev=2.7.101.3-bionic1 \\\n    && dpkg --unpack /var/cache/apt/archives/libsgx-enclave-common_*.deb \\\n    && dpkg --install --ignore-depends=libsgx-enclave-common /var/cache/apt/archives/libsgx-enclave-common-dev_*.deb \\\n    && rm -rf /var/lib/apt/lists/*\n\nARG UID=0\nARG GID=0\n\n#Create a user to map the host user to.\nRUN    groupadd -o -g \"${GID}\" cds \\\n    && useradd -m -o -u \"${UID}\" -g \"${GID}\" -s /bin/bash cds \\\n    && chown -R cds.cds /tmp/docker\n\nUSER cds\nENV HOME /home/cds\nENV USER cds\nENV SHELL /bin/bash\n\nWORKDIR /home/cds\n\nARG RUSTUP_VERSION=1.23.1\nARG RUSTUP_SHA256=ed7773edaf1d289656bdec2aacad12413b38ad0193fff54b2231f5140a4b07c5\nARG TOOLCHAIN=1.51.0\n\nRUN    curl -f https://static.rust-lang.org/rustup/archive/${RUSTUP_VERSION}/x86_64-unknown-linux-gnu/rustup-init -o /tmp/rustup-init \\\n    && [ `sha256sum /tmp/rustup-init|cut -d' ' -f1` = \"${RUSTUP_SHA256}\" ] \\\n    && chmod a+x /tmp/rustup-init \\\n    && /tmp/rustup-init -y --profile minimal --component rustfmt --default-toolchain \"${TOOLCHAIN}\" \\\n    && rm -f /tmp/rustup-init\n\nARG SGX_SDK_VERSION=2.7.1\nARG SGX_SDK_SHA256=68d26293c8ea1c80266e1d897824d5fae021e6d988437ec8b6561a15352af789\n\nRUN curl -Lf \"https://github.com/intel/linux-sgx/archive/sgx_${SGX_SDK_VERSION}.tar.gz\" -o /tmp/linux-sgx.tar.gz \\\n    && [ `sha256sum /tmp/linux-sgx.tar.gz|cut -d' ' -f1` = \"${SGX_SDK_SHA256}\" ] \\\n    && tar -xzf /tmp/linux-sgx.tar.gz -C /tmp/ --wildcards \"linux-sgx-sgx_${SGX_SDK_VERSION}/common/inc/sgx*.h\" && rm /tmp/linux-sgx.tar.gz\n\nUSER root\nRUN cp \"/tmp/linux-sgx-sgx_${SGX_SDK_VERSION}\"/common/inc/sgx*.h /usr/include/\n\nUSER cds\nRUN rm -rf \"/tmp/linux-sgx-sgx_${SGX_SDK_VERSION}\" /tmp/linux-sgx.tar.gz\n\nENV PATH=\"/home/cds/.cargo/bin:${PATH}\"\n\nCMD [ \"/bin/bash\" ]\n"
}