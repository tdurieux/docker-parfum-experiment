{
  "startTime": 1674255216144,
  "endTime": 1674255216785,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 7,
        "columnEnd": 79
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 7,
        "columnEnd": 73
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 7,
        "columnEnd": 61
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 20,
        "columnStart": 7,
        "columnEnd": 20
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 20,
        "columnStart": 7,
        "columnEnd": 20
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# Copyright 2020-2021 Signal Messenger, LLC.\n# SPDX-License-Identifier: AGPL-3.0-only\n#\n\nFROM debian:buster-20220316-slim@sha256:957293d0717a906c3c7b29c72eb5ba1c69359025ee3eee6ca6ce4b375256ff5b\n\nCOPY java/docker/ docker/\nCOPY java/docker/apt.conf java/docker/sources.list /etc/apt/\n\n# Install tools\nRUN apt-get update \\\n    && apt-get install --no-install-recommends -y \\\n               apt-transport-https \\\n               build-essential \\\n               git \\\n               curl \\\n               gpg-agent \\\n               openjdk-11-jdk \\\n               openssh-client \\\n               unzip && rm -rf /var/lib/apt/lists/*;\n\nARG UID\nARG GID\n\n# Create a user to map the host user to.\nRUN    groupadd -o -g \"${GID}\" libsignal \\\n    && useradd -m -o -u \"${UID}\" -g \"${GID}\" -s /bin/bash libsignal\n\nUSER libsignal\nENV HOME /home/libsignal\nENV USER libsignal\nENV SHELL /bin/bash\n\nWORKDIR /home/libsignal\n\n# Android SDK setup...\nARG ANDROID_SDK_FILENAME=commandlinetools-linux-7583922_latest.zip\nARG ANDROID_SDK_SHA=124f2d5115eee365df6cf3228ffbca6fc3911d16f8025bebd5b1c6e2fcfa7faf\nARG ANDROID_API_LEVELS=android-30\nARG ANDROID_BUILD_TOOLS_VERSION=30.0.2\nARG NDK_VERSION=21.0.6113669\nENV ANDROID_HOME /home/libsignal/android-sdk\nENV NDK_HOME ${ANDROID_HOME}/ndk/${NDK_VERSION}\nENV PATH ${PATH}:${ANDROID_HOME}/tools:${ANDROID_HOME}/platform-tools:${ANDROID_HOME}/cmdline-tools/bin\n\nRUN curl -f -O https://dl.google.com/android/repository/${ANDROID_SDK_FILENAME} \\\n    && echo \"${ANDROID_SDK_SHA}  ${ANDROID_SDK_FILENAME}\" | sha256sum -c - \\\n    && unzip -q ${ANDROID_SDK_FILENAME} -d android-sdk \\\n    && rm -rf ${ANDROID_SDK_FILENAME}\n\nRUN    yes | sdkmanager --sdk_root=${ANDROID_HOME} \"platforms;${ANDROID_API_LEVELS}\" \"build-tools;${ANDROID_BUILD_TOOLS_VERSION}\" \"platform-tools\" \"ndk;${NDK_VERSION}\"\n\n# Rust setup...\n\nCOPY rust-toolchain rust-toolchain\nARG RUSTUP_SHA=ad1f8b5199b3b9e231472ed7aa08d2e5d1d539198a15c5b1e53c746aad81d27b\nARG CARGO_NDK_VERSION=1.0.0\nENV PATH=\"/home/libsignal/.cargo/bin:${PATH}\"\n\nRUN curl -f https://static.rust-lang.org/rustup/archive/1.21.1/x86_64-unknown-linux-gnu/rustup-init -o /tmp/rustup-init \\\n    && echo \"${RUSTUP_SHA}  /tmp/rustup-init\" | sha256sum -c - \\\n    && chmod a+x /tmp/rustup-init \\\n    && /tmp/rustup-init -y --profile minimal --default-toolchain \"$(cat rust-toolchain)\" \\\n    && rm -rf /tmp/rustup-init\n\nRUN    rustup target add armv7-linux-androideabi aarch64-linux-android i686-linux-android x86_64-linux-android \\\n    && cargo install --version ${CARGO_NDK_VERSION} cargo-ndk\n\n# Pre-download Gradle.\nCOPY   java/gradle gradle\nCOPY   java/gradlew gradlew\nRUN    ./gradlew --version\n\n# Convert ssh to https for git dependency access without a key.\nRUN    git config --global url.\"https://github\".insteadOf ssh://git@github\n\nCMD [ \"/bin/bash\" ]\n"
}