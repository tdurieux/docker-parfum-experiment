{
  "startTime": 1674250158731,
  "endTime": 1674250159531,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 33
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Build application binary\nFROM golang:1.18-alpine as builder\nARG BIN_NAME=turing-router\nARG VERSION\nARG USER\nARG HOST\nARG BRANCH\nARG NOW\n\nENV GO111MODULE=on \\\n    GOOS=linux \\\n    GOARCH=amd64\n\nENV PROJECT_ROOT=github.com/gojek/turing/engines/router/missionctl\n\nWORKDIR /app\nCOPY . .\n\n# Install gcc\nRUN apk add --no-cache build-base librdkafka\n\nRUN go build \\\n    -mod=vendor \\\n    -tags musl \\\n    -o ./bin/${BIN_NAME} \\\n    -ldflags \"\\\n        -X ${PROJECT_ROOT}/internal.Version=${VERSION} \\\n        -X ${PROJECT_ROOT}/internal.Branch=${BRANCH} \\\n        -X ${PROJECT_ROOT}/internal.BuildUser=${USER}@${HOST} \\\n        -X ${PROJECT_ROOT}/internal.BuildDate=${NOW}\" \\\n    -v ${PROJECT_ROOT}/cmd\n\n# Build the application image\nFROM alpine:latest\nARG BIN_NAME=turing-router\nENV BIN_NAME ${BIN_NAME}\n\nRUN addgroup -S app && adduser -S app -G app\nWORKDIR /app\nRUN chown -R app:app /app\nCOPY --chown=app:app --from=builder /app/bin/* ./\nUSER app\nENTRYPOINT ./${BIN_NAME}\n"
}