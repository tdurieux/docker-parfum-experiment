{
  "startTime": 1674219335538,
  "endTime": 1674219339825,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 101
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 7,
        "columnEnd": 41
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 33
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nvidia/cuda:11.1-cudnn8-devel-ubuntu18.04\nLABEL name=\"thelper\"\nLABEL description=\"Training framework and CLI for PyTorch-based machine learning projects\"\nLABEL vendor=\"Centre de Recherche Informatique de Montr√©al / Computer Research Institute of Montreal (CRIM)\"\nLABEL version=\"0.6.2\"\n\nARG PYTHON_VERSION=3.7\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n         build-essential git curl vim ca-certificates less && rm -rf /var/lib/apt/lists/*\n\nENV CONDA_HOME /opt/conda\nENV PATH ${CONDA_HOME}/bin:$PATH\nRUN curl -f -o ~/miniconda.sh -LO https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh && \\\n    chmod +x ~/miniconda.sh && \\\n    ~/miniconda.sh -b -p ${CONDA_HOME} && \\\n    rm ~/miniconda.sh && \\\n    ${CONDA_HOME}/bin/conda install -y python=$PYTHON_VERSION\n\nENV PROJ_LIB ${CONDA_HOME}/share/proj\nENV THELPER_HOME /opt/thelper\nWORKDIR ${THELPER_HOME}\n\n# NOTE:\n#  force full reinstall with *possibly* updated even if just changing source\n#  this way we make sure that it works with any recent dependency update\nCOPY . .\nRUN sed -i 's/thelper/base/g' conda-env.yml\nRUN conda env update --file conda-env.yml \\\n    && pip install --no-cache-dir opencv-python-headless \\\n    && conda clean --all -f -y\nRUN pip install --no-cache-dir -q -e . --no-deps\n\nWORKDIR /workspace\nRUN chmod -R a+w /workspace\n\n# set default command\n# NOTE:\n#   avoid using 'entrypoint' as it requires explicit override which not all services do automatically\n#   command is easier to override as it is the default docker run CLI input after option flags\n#       ie:\n#           command:        docker run [options] <your-cmd-override>\n#       vs:\n#           entrypoint:     docker run [options] --entrypoint=\"\" <your-cmd-override>\n#           # without \"\" override, Dockerfile entrypoint is executed and override command is completly ignored\nCMD [\"python\", \"-m\", \"thelper\"]\n\n"
}