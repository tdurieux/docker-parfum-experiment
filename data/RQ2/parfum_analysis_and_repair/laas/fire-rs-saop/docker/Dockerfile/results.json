{
  "startTime": 1674255026183,
  "endTime": 1674255027160,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 1,
        "lineEnd": 1,
        "columnStart": 22,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 29,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 4,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 29,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 1,
        "lineEnd": 1,
        "columnStart": 22,
        "columnEnd": 50
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 29,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 50
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 4,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 29,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 50
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:18.04\nRUN apt-get update && apt-get install --no-install-recommends -y apt-utils && rm -rf /var/lib/apt/lists/*;\n\n# Windninja\nRUN apt-get install --no-install-recommends -y build-essential cmake git sudo wget libproj-dev libfontconfig1-dev \\\n    libcurl4-gnutls-dev libnetcdf-dev libboost-program-options-dev libboost-date-time-dev \\\n    libgeos-dev libboost-test-dev libgdal-dev && rm -rf /var/lib/apt/lists/*;\n\n## Setup windninja environment\nENV WINDNINJA_CLI_PREFIX /usr/local\nWORKDIR /root/windninja\n\n## Clone and build windninja client\nRUN git clone --depth 1 https://github.com/firelab/windninja.git /root/windninja/windninja\nRUN mkdir -p /root/windninja/windninja/build &&\\\n    cd /root/windninja/windninja/build &&\\\n    cmake -DNINJA_CLI=ON -DNINJAFOAM=ON -DNINJA_QTGUI=OFF .. &&\\\n    make -j8\n## install to /usr/local/bin\nRUN cd /root/windninja/windninja/build && make install\n## Clean up\nRUN rm -rf /root/windninja\n\n# SAOP\n## Disable tzdata interactive configuration\nENV DEBIAN_FRONTEND=noninteractive\nENV TZ=Etc/UTC\nRUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone\n## install SAOP dependencies\nRUN apt-get install --no-install-recommends -y g++ gdb cmake python3 cython3 python3-gdal python3-setuptools \\\n python3-pip python3-affine python3-tz python3-pandas python3-numpy python3-matplotlib ffmpeg \\\n clang libboost-all-dev libgdal-dev python3-opencv && rm -rf /var/lib/apt/lists/*;\n\nRUN pip3 install --no-cache-dir pybind11\nRUN pip3 install --no-cache-dir joblib\nRUN pip3 install --no-cache-dir scikit-image\nRUN pip3 install --no-cache-dir scipy\nRUN pip3 install --no-cache-dir six\n\n# Clean Apt cache\nRUN apt-get clean && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    rm -rf /tmp/*\n\nARG USER_UID\nARG USER_GROUP\n\nENV HOME /home/saop\nRUN groupadd ${USER_GROUP:+-g} ${USER_GROUP} saop \\\n    && useradd ${USER_UID:+-u} ${USER_UID} -g saop -ms /bin/bash saop \\\n    && mkdir -p $HOME \\\n    && mkdir -p $HOME/code \\\n    && chown -R saop:saop $HOME\nUSER saop\n\nENV WINDNINJA_CLI_PATH ${WINDNINJA_CLI_PREFIX}/bin\nENV PYTHONPATH ${PYTHONPATH}:/home/saop/code/python\n\n# code directory, needs to be mounted to the the root of of the git repository\nWORKDIR /home/saop\n\n# For building font cache required by matplotlib\nRUN python3 -c \"import matplotlib.pyplot as plt\"\n\n# Clone fire-rs-data\nRUN git clone https://github.com/laas/fire-rs-data.git data\n\n# Set data directory to a known dataset\nENV FIRERS_DATA /home/saop/data/porto_utm/25m\n\n# Clone fire-rs-saop and init pybind11 submodule\nRUN git clone https://github.com/laas/fire-rs-saop.git code\nWORKDIR /home/saop/code\nRUN git submodule init && git submodule update\n\nCMD /bin/bash\n"
}