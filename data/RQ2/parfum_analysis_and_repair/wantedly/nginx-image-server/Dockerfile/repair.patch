diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/wantedly/nginx-image-server/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/wantedly/nginx-image-server/Dockerfile/repaired.Dockerfile
index 4311df0..7421e9f 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/wantedly/nginx-image-server/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/wantedly/nginx-image-server/Dockerfile/repaired.Dockerfile
@@ -6,7 +6,7 @@ ENV IMAGEMAGICK_VERSION 6.8.6-8
 
 # Install dependency packages
 RUN apt-get update && \
-    apt-get install -y \
+    apt-get install --no-install-recommends -y \
       binutils-doc \
       bison \
       flex \
@@ -25,12 +25,12 @@ RUN mkdir -p /tmp/imagemagick && \
     echo "\ndeb-src http://archive.ubuntu.com/ubuntu/ trusty main restricted" >> /etc/apt/sources.list && \
     apt-get update && \
     apt-get build-dep -y imagemagick && \
-    apt-get install -y libwebp-dev devscripts checkinstall && \
-    curl -L https://launchpad.net/imagemagick/main/${IMAGEMAGICK_VERSION}/+download/ImageMagick-${IMAGEMAGICK_VERSION}.tar.gz > \
+    apt-get install --no-install-recommends -y libwebp-dev devscripts checkinstall && \
+    curl -f -L https://launchpad.net/imagemagick/main/${IMAGEMAGICK_VERSION}/+download/ImageMagick-${IMAGEMAGICK_VERSION}.tar.gz > \
       ImageMagick-${IMAGEMAGICK_VERSION}.tar.gz && \
     tar zxf ImageMagick-${IMAGEMAGICK_VERSION}.tar.gz && \
     cd ImageMagick-${IMAGEMAGICK_VERSION} && \
-    ./configure \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
       --prefix=/usr \
       --sysconfdir=/etc \
       --libdir=/usr/lib/x86_64-linux-gnu \
@@ -43,23 +43,23 @@ RUN mkdir -p /tmp/imagemagick && \
     make && \
     checkinstall -y && \
     rm -rf /tmp/imagemagick && \
-    rm -rf /var/lib/apt/lists/*
+    rm -rf /var/lib/apt/lists/* && rm ImageMagick-${IMAGEMAGICK_VERSION}.tar.gz
 
 # Fetch and unarchive nginx source
-RUN curl -L http://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz > /tmp/nginx-${NGINX_VERSION}.tar.gz && \
+RUN curl -f -L https://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz > /tmp/nginx-${NGINX_VERSION}.tar.gz && \
     cd /tmp && \
-    tar zxf nginx-${NGINX_VERSION}.tar.gz
+    tar zxf nginx-${NGINX_VERSION}.tar.gz && rm nginx-${NGINX_VERSION}.tar.gz
 
 # Fetch and unarchive ngx_small_light module
-RUN curl -L https://github.com/cubicdaiya/ngx_small_light/archive/v${NGX_SMALL_LIGHT_VERSION}.tar.gz > /tmp/ngx_small_light-${NGX_SMALL_LIGHT_VERSION}.tar.gz && \
+RUN curl -f -L https://github.com/cubicdaiya/ngx_small_light/archive/v${NGX_SMALL_LIGHT_VERSION}.tar.gz > /tmp/ngx_small_light-${NGX_SMALL_LIGHT_VERSION}.tar.gz && \
     cd /tmp && \
     tar zxf ngx_small_light-${NGX_SMALL_LIGHT_VERSION}.tar.gz && \
     cd /tmp/ngx_small_light-${NGX_SMALL_LIGHT_VERSION} && \
-    ./setup
+    ./setup && rm ngx_small_light-${NGX_SMALL_LIGHT_VERSION}.tar.gz
 
 # Compile nginx
 RUN cd /tmp/nginx-${NGINX_VERSION} && \
-    ./configure \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
       --prefix=/opt/nginx \
       --conf-path=/etc/nginx/nginx.conf \
       --sbin-path=/opt/nginx/sbin/nginx \