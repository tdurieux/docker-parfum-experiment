{
  "startTime": 1674252487383,
  "endTime": 1674252488289,
  "originalSmells": [
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 75
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM amazonlinux AS base\n\nRUN yum -y update\nRUN yum -y install libudev-devel && rm -rf /var/cache/yum\n\nFROM base AS build\n\nARG TOOLCHAIN=stable\n\nRUN yum -y install git unzip build-essential autoconf libtool openssl-devel && rm -rf /var/cache/yum\n\nRUN curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain $TOOLCHAIN\nENV PATH=$PATH:/root/.cargo/bin\n\n# Allow cargo to fetch with git cli\nRUN echo -e \"[net]\\ngit-fetch-with-cli = true\" > /root/.cargo/config\n\nCOPY / /scope\n\n# Just simulate a valid scope program\nWORKDIR /scope\n\nWORKDIR /scope/off_chain/scope-cli\nRUN CLUSTER=mainnet cargo install --root /bot --path . --locked\n\nFROM base AS release\n\nCOPY --from=build /bot/bin/scope ./\nCOPY ./off_chain/docker-bot/docker-entrypoint.sh .\n\nENTRYPOINT [\"./docker-entrypoint.sh\"]\n\n# use scratch to dump binary from\nFROM scratch AS release-bin\n\nCOPY --from=release /scope .\n"
}