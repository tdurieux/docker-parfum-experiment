{
  "startTime": 1674218667918,
  "endTime": 1674218668862,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 76
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 23,
        "columnStart": 2,
        "columnEnd": 13
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 23,
        "columnStart": 2,
        "columnEnd": 13
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04\n\nRUN \\\n  apt update && apt upgrade -y && \\\n  apt install --no-install-recommends -y \\\n  build-essential \\\n  git \\\n  autoconf \\\n  cmake \\\n  python \\\n  unzip \\\n  cpio \\\n  wget \\\n  vim \\\n  locales \\\n  lzop \\\n  bc \\\n  nano \\\n  libncurses5-dev \\\n  nfs-kernel-server \\\n  tftpd-hpa \\\n  curl \\\n  python3 \\\n  python-lzma && rm -rf /var/lib/apt/lists/*;\n\n\nRUN locale-gen --no-purge en_US.UTF-8\n\nRUN curl -f https://bootstrap.pypa.io/pip/2.7/get-pip.py --output get-pip.py\nRUN python get-pip.py\nRUN curl -f -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.3/install.sh | bash\nRUN pip install --no-cache-dir click\n\nENV NVM_DIR /root/.nvm\nRUN . $NVM_DIR/nvm.sh && nvm install 16\nRUN . $NVM_DIR/nvm.sh && npm config set user 0\nRUN . $NVM_DIR/nvm.sh && npm config set unsafe-perm true\n\n\n\nRUN mkdir -p /openmiko/build\nWORKDIR \"/openmiko/build\"\nRUN wget https://buildroot.org/downloads/buildroot-2016.02.tar.gz;\nRUN tar xvf buildroot-2016.02.tar.gz; rm buildroot-2016.02.tar.gz\nRUN rm buildroot-2016.02.tar.gz;\n\n# Change to the buildroot directory\nWORKDIR \"/openmiko/build/buildroot-2016.02\"\n\n# Copy the entire source tree. Expect it to be mounted over when developing.\nCOPY . /src\n\nRUN /src/buildscripts/setup_buildroot.sh\n\nWORKDIR /openmiko\n"
}