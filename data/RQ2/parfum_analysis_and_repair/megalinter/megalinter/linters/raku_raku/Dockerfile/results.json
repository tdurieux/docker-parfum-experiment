{
  "startTime": 1674255282525,
  "endTime": 1674255283208,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 99,
        "lineEnd": 99,
        "columnStart": 4,
        "columnEnd": 167
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 73,
        "lineEnd": 73,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 39
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "###########################################\n###########################################\n## Dockerfile to run MegaLinter ##\n###########################################\n###########################################\n\n# @not-generated\n\n#############################################################################################\n## @generated by .automation/build.py using descriptor files, please do not update manually ##\n#############################################################################################\n#FROM__START\n\n#FROM__END\n\n##################\n# Get base image #\n##################\nFROM python:3.9.7-alpine3.13\n\n#############################################################################################\n## @generated by .automation/build.py using descriptor files, please do not update manually ##\n#############################################################################################\n#ARG__START\n\n#ARG__END\n\n####################\n# Run APK installs #\n####################\n\n# APK Packages used by mega-linter core architecture\nRUN apk add --update --no-cache \\\n        bash \\\n        curl \\\n        gcc \\\n        git \\\n        libffi-dev \\\n        make \\\n        musl-dev \\\n        openssh && \\\n    git config --global core.autocrlf true\n\n#############################################################################################\n## @generated by .automation/build.py using descriptor files, please do not update manually ##\n#############################################################################################\n#APK__START\n\n#APK__END\n\n# PATH for golang\nENV GOROOT=/usr/lib/go \\\n    GOPATH=/go\n# hadolint ignore=DL3044\nENV PATH=\"$PATH\":\"$GOROOT\"/bin:\"$GOPATH\"/bin\nRUN mkdir -p ${GOPATH}/src ${GOPATH}/bin || true && \\\n    # Ignore npm package issues\n    yarn config set ignore-engines true || true && yarn cache clean;\n\n#############################################################################################\n## @generated by .automation/build.py using descriptor files, please do not update manually ##\n#############################################################################################\n#PIP__START\n\n#PIP__END\n\n############################\n# Install NPM dependencies #\n#############################################################################################\n## @generated by .automation/build.py using descriptor files, please do not update manually ##\n#############################################################################################\n\n# Downgrade npm because from npm@v7, npm install crashes when called from root directory within Dockerfile\nRUN npm install npm@latest-6 -g || true && \\\n    # Disable package-lock.json to avoid sudden crash. Try to remove later if possible\n    echo 'package-lock=false' >> .npmrc || true && npm cache clean --force;\n\n#NPM__START\n\n#NPM__END\n\n# Add node packages to path #\nENV PATH=\"/node_modules/.bin:${PATH}\"\n\n##############################\n# Installs ruby dependencies #\n#############################################################################################\n## @generated by .automation/build.py using descriptor files, please do not update manually ##\n#############################################################################################\n\n#GEM__START\n\n#GEM__END\n\n#############################################################################################\n## @generated by .automation/build.py using descriptor files, please do not update manually ##\n#############################################################################################\n#OTHER__START\n# raku installation\nRUN curl -f -L https://github.com/nxadm/rakudo-pkg/releases/download/v2020.10-02/rakudo-pkg-Alpine3.12_2020.10-02_x86_64.apk > rakudo-pkg-Alpine3.12_2020.10-02_x86_64.apk \\\n    && apk add --no-cache --allow-untrusted rakudo-pkg-Alpine3.12_2020.10-02_x86_64.apk \\\n    && rm rakudo-pkg-Alpine3.12_2020.10-02_x86_64.apk \\\n    && /opt/rakudo-pkg/bin/add-rakudo-to-path \\\n    # && source /root/.profile \\\n    && /opt/rakudo-pkg/bin/install-zef-as-user\n\nENV PATH=\"~/.raku/bin:/opt/rakudo-pkg/bin:/opt/rakudo-pkg/share/perl6/site/bin:$PATH\"\n\n#OTHER__END\n\n######################\n# Set the entrypoint #\n######################\nCOPY entrypoint.sh /entrypoint.sh\nRUN chmod +x entrypoint.sh\nENTRYPOINT [\"/bin/bash\", \"/entrypoint.sh\"]\n\n################################\n# Installs python dependencies #\n################################\nCOPY megalinter /megalinter\nRUN python /megalinter/setup.py install \\\n    && python /megalinter/setup.py clean --all \\\n    && rm -rf /var/cache/apk/*\n\n#######################################\n# Copy scripts and rules to container #\n#######################################\nCOPY megalinter/descriptors /megalinter-descriptors\nCOPY TEMPLATES /action/lib/.automation\n\n###########################\n# Get the build arguments #\n###########################\nARG BUILD_DATE\nARG BUILD_REVISION\nARG BUILD_VERSION\n\n#################################################\n# Set ENV values used for debugging the version #\n#################################################\nENV BUILD_DATE=$BUILD_DATE \\\n    BUILD_REVISION=$BUILD_REVISION \\\n    BUILD_VERSION=$BUILD_VERSION\n\n#FLAVOR__START\nENV MEGALINTER_FLAVOR=none\n#FLAVOR__END\n\n#EXTRA_DOCKERFILE_LINES__START\nENV ENABLE_LINTERS=RAKU_RAKU \\\n    FLAVOR_SUGGESTIONS=false \\\n    SINGLE_LINTER=RAKU_RAKU \\\n    PRINT_ALPACA=false \\\n    LOG_FILE=none \\\n    SARIF_REPORTER=true \\\n    TEXT_REPORTER=false \\\n    UPDATED_SOURCES_REPORTER=false \\\n    GITHUB_STATUS_REPORTER=false \\\n    GITHUB_COMMENT_REPORTER=false \\\n    EMAIL_REPORTER=false \\\n    FILEIO_REPORTER=false \\\n    CONFIG_REPORTER=false\n#EXTRA_DOCKERFILE_LINES__END\n\n#########################################\n# Label the instance and set maintainer #\n#########################################\nLABEL com.github.actions.name=\"MegaLinter\" \\\n      com.github.actions.description=\"The ultimate linters aggregator to make sure your projects are clean\" \\\n      com.github.actions.icon=\"code\" \\\n      com.github.actions.color=\"red\" \\\n      maintainer=\"Nicolas Vuillamy <nicolas.vuillamy@gmail.com>\" \\\n      org.opencontainers.image.created=$BUILD_DATE \\\n      org.opencontainers.image.revision=$BUILD_REVISION \\\n      org.opencontainers.image.version=$BUILD_VERSION \\\n      org.opencontainers.image.authors=\"Nicolas Vuillamy <nicolas.vuillamy@gmail.com>\" \\\n      org.opencontainers.image.url=\"https://megalinter.github.io\" \\\n      org.opencontainers.image.source=\"https://github.com/megalinter/megalinter\" \\\n      org.opencontainers.image.documentation=\"https://megalinter.github.io\" \\\n      org.opencontainers.image.vendor=\"Nicolas Vuillamy\" \\\n      org.opencontainers.image.description=\"Lint your code base with GitHub Actions\"\n"
}