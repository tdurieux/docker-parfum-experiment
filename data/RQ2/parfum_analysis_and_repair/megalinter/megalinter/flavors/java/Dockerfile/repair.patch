diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/megalinter/megalinter/flavors/java/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/megalinter/megalinter/flavors/java/Dockerfile/repaired.Dockerfile
index ae043e0..6d0ef28 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/megalinter/megalinter/flavors/java/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/megalinter/megalinter/flavors/java/Dockerfile/repaired.Dockerfile
@@ -23,7 +23,7 @@ FROM zricethezav/gitleaks:v8.8.7 as gitleaks
 # Get base image #
 ##################
 # 3.10.5 is not usable until https://github.com/jruere/multiprocessing-logging/issues/56 is fixed
-FROM python:3.10.4-alpine3.15 
+FROM python:3.10.4-alpine3.15
 
 #############################################################################################
 ## @generated by .automation/build.py using descriptor files, please do not update manually ##
@@ -80,7 +80,7 @@ ENV GOROOT=/usr/lib/go \
 ENV PATH="$PATH":"$GOROOT"/bin:"$GOPATH"/bin
 RUN mkdir -p ${GOPATH}/src ${GOPATH}/bin || true && \
     # Ignore npm package issues
-    yarn config set ignore-engines true || true
+    yarn config set ignore-engines true || true && yarn cache clean;
 
 #############################################################################################
 ## @generated by .automation/build.py using descriptor files, please do not update manually ##
@@ -130,7 +130,7 @@ RUN npm install --ignore-scripts \
                 cspell \
                 sql-lint \
                 tekton-lint && \
-    npm audit fix --audit-level=critical || true
+    npm audit fix --audit-level=critical || true && npm cache clean --force;
 WORKDIR /
 
 #NPM__END
@@ -194,16 +194,16 @@ COPY --from=editorconfig-checker /usr/bin/ec /usr/bin/editorconfig-checker
 RUN wget -q -O - https://raw.githubusercontent.com/dotenv-linter/dotenv-linter/master/install.sh | sh -s
 
 # checkstyle installation
-RUN CHECKSTYLE_LATEST=$(curl -s https://api.github.com/repos/checkstyle/checkstyle/releases/latest \
+RUN CHECKSTYLE_LATEST=$( curl -f -s https://api.github.com/repos/checkstyle/checkstyle/releases/latest \
         | grep browser_download_url \
         | grep ".jar" \
         | cut -d '"' -f 4) \
-    && curl --retry 5 --retry-delay 5 -sSL $CHECKSTYLE_LATEST \
+    && curl -f --retry 5 --retry-delay 5 -sSL $CHECKSTYLE_LATEST \
         --output /usr/bin/checkstyle
 
 
 # ktlint installation
-RUN curl --retry 5 --retry-delay 5 -sSLO https://github.com/pinterest/ktlint/releases/latest/download/ktlint && \
+RUN curl -f --retry 5 --retry-delay 5 -sSLO https://github.com/pinterest/ktlint/releases/latest/download/ktlint && \
     chmod a+x ktlint && \
     mv "ktlint" /usr/bin/
 
@@ -214,7 +214,7 @@ RUN ML_THIRD_PARTY_DIR="/third-party/kubeval" \
     && wget -P ${ML_THIRD_PARTY_DIR} -q https://github.com/instrumenta/kubeval/releases/latest/download/kubeval-linux-amd64.tar.gz \
     && tar xf ${ML_THIRD_PARTY_DIR}/kubeval-linux-amd64.tar.gz --directory ${ML_THIRD_PARTY_DIR} \
     && mv ${ML_THIRD_PARTY_DIR}/kubeval /usr/local/bin \
-    && find ${ML_THIRD_PARTY_DIR} -type f -not -name 'LICENSE*' -delete -o -type d -empty -delete
+    && find ${ML_THIRD_PARTY_DIR} -type f -not -name 'LICENSE*' -delete -o -type d -empty -delete && rm ${ML_THIRD_PARTY_DIR}/kubeval-linux-amd64.tar.gz
 
 
 # kubeconform installation
@@ -224,7 +224,7 @@ RUN ML_THIRD_PARTY_DIR="/third-party/kubeconform" \
     && wget -P ${ML_THIRD_PARTY_DIR} -q https://github.com/yannh/kubeconform/releases/download/$KUBECONFORM_VERSION/kubeconform-linux-amd64.tar.gz \
     && tar xf ${ML_THIRD_PARTY_DIR}/kubeconform-linux-amd64.tar.gz --directory ${ML_THIRD_PARTY_DIR} \
     && mv ${ML_THIRD_PARTY_DIR}/kubeconform /usr/local/bin \
-    && find ${ML_THIRD_PARTY_DIR} -type f -not -name 'LICENSE*' -delete -o -type d -empty -delete
+    && find ${ML_THIRD_PARTY_DIR} -type f -not -name 'LICENSE*' -delete -o -type d -empty -delete && rm ${ML_THIRD_PARTY_DIR}/kubeconform-linux-amd64.tar.gz
 
 
 # protolint installation
@@ -242,7 +242,7 @@ RUN wget --tries=5 -q -O - https://raw.githubusercontent.com/aquasecurity/trivy/
 # misspell installation
 RUN ML_THIRD_PARTY_DIR="/third-party/misspell" \
     && mkdir -p ${ML_THIRD_PARTY_DIR} \
-    && curl -L -o ${ML_THIRD_PARTY_DIR}/install-misspell.sh https://git.io/misspell \
+    && curl -f -L -o ${ML_THIRD_PARTY_DIR}/install-misspell.sh https://git.io/misspell \
     && sh .${ML_THIRD_PARTY_DIR}/install-misspell.sh \
     && find ${ML_THIRD_PARTY_DIR} -type f -not -name 'LICENSE*' -delete -o -type d -empty -delete \
     && find /tmp -path '/tmp/tmp.*' -type f -name 'misspell*' -delete -o -type d -empty -delete