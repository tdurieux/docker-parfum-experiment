diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/mattatcha/terraform-provider-convox/vendor/github.com/docker/docker/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/mattatcha/terraform-provider-convox/vendor/github.com/docker/docker/Dockerfile/repaired.Dockerfile
index 8bc546b..7293694 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/mattatcha/terraform-provider-convox/vendor/github.com/docker/docker/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/mattatcha/terraform-provider-convox/vendor/github.com/docker/docker/Dockerfile/repaired.Dockerfile
@@ -44,7 +44,7 @@ FROM base AS criu
 # Install CRIU for checkpoint/restore support
 ENV CRIU_VERSION 3.6
 # Install dependancy packages specific to criu
-RUN apt-get update && apt-get install -y \
+RUN apt-get update && apt-get install --no-install-recommends -y \
 	libnet-dev \
 	libprotobuf-c0-dev \
 	libprotobuf-dev \
@@ -54,10 +54,10 @@ RUN apt-get update && apt-get install -y \
 	protobuf-c-compiler \
 	python-protobuf \
 	&& mkdir -p /usr/src/criu \
-	&& curl -sSL https://github.com/checkpoint-restore/criu/archive/v${CRIU_VERSION}.tar.gz | tar -C /usr/src/criu/ -xz --strip-components=1 \
+	&& curl -f -sSL https://github.com/checkpoint-restore/criu/archive/v${CRIU_VERSION}.tar.gz | tar -C /usr/src/criu/ -xz --strip-components=1 \
 	&& cd /usr/src/criu \
 	&& make \
-	&& make PREFIX=/opt/criu install-criu
+	&& make PREFIX=/opt/criu install-criu && rm -rf /usr/src/criu && rm -rf /var/lib/apt/lists/*;
 
 FROM base AS registry
 # Install two versions of the registry. The first is an older version that
@@ -104,7 +104,7 @@ RUN set -x \
 
 
 FROM base AS frozen-images
-RUN apt-get update && apt-get install -y jq ca-certificates --no-install-recommends
+RUN apt-get update && apt-get install -y jq ca-certificates --no-install-recommends && rm -rf /var/lib/apt/lists/*;
 # Get useful and necessary Hub images so we can "docker load" locally instead of pulling
 COPY contrib/download-frozen-image-v2.sh /
 RUN /download-frozen-image-v2.sh /docker-frozen-images \
@@ -117,9 +117,9 @@ RUN /download-frozen-image-v2.sh /docker-frozen-images \
 
 # Just a little hack so we don't have to install these deps twice, once for runc and once for dockerd
 FROM base AS runtime-dev
-RUN apt-get update && apt-get install -y \
+RUN apt-get update && apt-get install --no-install-recommends -y \
 	libapparmor-dev \
-	libseccomp-dev
+	libseccomp-dev && rm -rf /var/lib/apt/lists/*;
 
 
 FROM base AS tomlv
@@ -135,7 +135,7 @@ COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 RUN PREFIX=/opt/$INSTALL_BINARY_NAME ./install.sh $INSTALL_BINARY_NAME
 
 FROM base AS containerd
-RUN apt-get update && apt-get install -y btrfs-tools
+RUN apt-get update && apt-get install --no-install-recommends -y btrfs-tools && rm -rf /var/lib/apt/lists/*;
 ENV INSTALL_BINARY_NAME=containerd
 COPY hack/dockerfile/install/install.sh ./install.sh
 COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
@@ -166,7 +166,7 @@ COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
 RUN PREFIX=/opt/$INSTALL_BINARY_NAME ./install.sh $INSTALL_BINARY_NAME
 
 FROM base AS tini
-RUN apt-get update && apt-get install -y cmake vim-common
+RUN apt-get update && apt-get install --no-install-recommends -y cmake vim-common && rm -rf /var/lib/apt/lists/*;
 COPY hack/dockerfile/install/install.sh ./install.sh
 ENV INSTALL_BINARY_NAME=tini
 COPY hack/dockerfile/install/$INSTALL_BINARY_NAME.installer ./
@@ -213,7 +213,7 @@ RUN apt-get update && apt-get install -y \
 	zip \
 	bzip2 \
 	xz-utils \
-	--no-install-recommends
+	--no-install-recommends && rm -rf /var/lib/apt/lists/*;
 COPY --from=swagger /usr/local/bin/swagger* /usr/local/bin/
 COPY --from=frozen-images /docker-frozen-images /docker-frozen-images
 COPY --from=gometalinter /opt/gometalinter/ /usr/local/bin/
@@ -232,8 +232,8 @@ COPY --from=docker-py /docker-py /docker-py
 # split out into a separate image, including all the `python-*` deps installed
 # above.
 RUN cd /docker-py \
-	&& pip install docker-pycreds==0.2.1 \
-	&& pip install -r test-requirements.txt
+	&& pip install --no-cache-dir docker-pycreds==0.2.1 \
+	&& pip install --no-cache-dir -r test-requirements.txt
 
 ENV PATH=/usr/local/cli:$PATH
 ENV DOCKER_BUILDTAGS apparmor seccomp selinux