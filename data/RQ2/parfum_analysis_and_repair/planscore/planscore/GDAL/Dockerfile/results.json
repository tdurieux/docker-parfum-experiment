{
  "startTime": 1674248262709,
  "endTime": 1674248263777,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 68
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 2,
        "columnEnd": 68
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 2,
        "columnEnd": 58
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 2,
        "columnEnd": 59
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 73,
        "lineEnd": 73,
        "columnStart": 2,
        "columnEnd": 66
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 2,
        "columnEnd": 58
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 2,
        "columnEnd": 59
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 37,
        "lineEnd": 39,
        "columnStart": 2,
        "columnEnd": 22
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 51,
        "lineEnd": 53,
        "columnStart": 2,
        "columnEnd": 18
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 63,
        "lineEnd": 64,
        "columnStart": 2,
        "columnEnd": 22
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 75,
        "lineEnd": 88,
        "columnStart": 2,
        "columnEnd": 20
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 6,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 11
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 127,
        "lineEnd": 145,
        "columnStart": 2,
        "columnEnd": 9
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM amazonlinux:2.0.20210813.1\n\n# Install deps\n\nRUN \\\n    touch /var/lib/rpm/* && \\\n    yum install -y \\\n        automake16 \\\n        bzip2 \\\n        bzip2-devel \\\n        curl \\\n        gzip \\\n        libffi-devel \\\n        libpng-devel \\\n        libtiff-devel \\\n        openssl-devel \\\n        sqlite-devel \\\n        tar \\\n        && \\\n    yum group install -y \\\n        \"Development Tools\" && rm -rf /var/cache/yum\n\n# Fetch, build, and install Python 3.9\n\nRUN \\\n    curl -f -L https://www.python.org/ftp/python/3.9.6/Python-3.9.6.tgz | tar zxf - -C /tmp && \\\n    cd /tmp/Python-3.9.6 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-optimizations && \\\n    make -j $(nproc) && \\\n    make install && \\\n    rm -rf /tmp/Python-3.9.6\n\n# Fetch, build, and install SQLite 3\n\nRUN \\\n  curl -f -L https://www.sqlite.org/2021/sqlite-autoconf-3360000.tar.gz | tar zxf - -C /tmp && \\\n  cd /tmp/sqlite-autoconf-3360000 && \\\n  CFLAGS=\"-DSQLITE_ENABLE_COLUMN_METADATA=1\" \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n\n    --prefix=/var/task && \\\n  make -j $(nproc) && \\\n  make install && \\\n    rm -rf /tmp/sqlite-autoconf-3360000\n\nENV PKG_CONFIG_PATH /var/task/lib/pkgconfig:/usr/lib64/pkgconfig:/usr/share/pkgconfig:/usr/local/lib/pkgconfig\n\n# Fetch, build, and install PROJ\n\nRUN \\\n  curl -f -L https://download.osgeo.org/proj/proj-7.2.1.tar.gz | tar zxf - -C /tmp && \\\n  cd /tmp/proj-7.2.1 && \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n    --prefix=/var/task \\\n    --without-curl && \\\n  make -j $(nproc) && \\\n  make install && \\\n  rm -rf /tmp/proj-7.2.1\n\n# Fetch, build, and install GEOS\n\nRUN \\\n  curl -f -L https://download.osgeo.org/geos/geos-3.9.0.tar.bz2 | tar jxf - -C /tmp && \\\n  cd /tmp/geos-3.9.0 && \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n    --prefix=/var/task && \\\n  make -j $(nproc) && \\\n  make install && \\\n  rm -rf /tmp/geos-3.9.0\n\n# Fetch, build, and install GDAL\n\nRUN \\\n  mkdir -p /tmp/gdal-3.2.1 && \\\n  curl -f -L https://github.com/OSGeo/gdal/archive/tags/v3.2.1.tar.gz | tar zxf - -C /tmp/gdal-3.2.1 --strip-components=1 && \\\n  cd /tmp/gdal-3.2.1/gdal && \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n    --prefix=/var/task \\\n    --with-proj=/var/task \\\n    --with-geos=/var/task/bin/geos-config \\\n    --datarootdir=/var/task/share/gdal \\\n    --with-jpeg=internal \\\n    --with-sqlite3=/var/task \\\n    --without-curl \\\n    --without-qhull \\\n    --without-mrf \\\n    --without-grib \\\n    --without-pcraster \\\n    --without-gif \\\n    --without-pcidsk && \\\n  make -j $(nproc) && \\\n  make install && \\\n  rm -rf /tmp/gdal-3.2.1\n\n# Install Python deps to /var/task\n\nWORKDIR /var/task\n\nENV PATH /var/task/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\nENV LD_LIBRARY_PATH /var/task/lib\n\nRUN pip3.9 install -t /var/task 'numpy == 1.21.2' 'GDAL == 3.2.1'\n\n# So, did it work?\nRUN \\\n  python3.9 -c 'import numpy' && \\\n  python3.9 -c 'import osgeo.ogr'\n\n# Create the function tarball\n\nRUN \\\n  ln -v /lib64/libpng*.so* lib/ && \\\n  ln -v /lib64/libtiff.so* lib/ && \\\n  ln -v /lib64/libjbig*.so* lib/ && \\\n  ln -v /lib64/libjpeg.so* lib/\n\nRUN \\\n  strip lib/libpng15.so.15 && \\\n  strip lib/libtiff.so.5 && \\\n  strip lib/libjbig.so.2.0 && \\\n  strip lib/libjpeg.so.62 && \\\n  strip lib/libsqlite3.so.0.8.6 && \\\n  strip lib/libgdal.so.28.0.1 && \\\n  strip lib/libgeos_c.so.1.16.2 && \\\n  strip lib/libgeos-3.9.0.so && \\\n  strip lib/libproj.so.19.2.1\n\nRUN \\\n  tar -czf \\\n    /tmp/task.tgz \\\n    lib/libpng*.so* \\\n    lib/libtiff.so* \\\n    lib/libjbig*.so* \\\n    lib/libjpeg.so* \\\n    lib/libsqlite3.so* \\\n    lib/libgdal.so* \\\n    lib/libgeos.so* \\\n    lib/libgeos_c.so* \\\n    lib/libgeos-3.9.0.so \\\n    lib/libproj.so* \\\n    share/gdal/ \\\n    share/proj/ \\\n    numpy \\\n    numpy-1.21.2.dist-info \\\n    numpy.libs \\\n    GDAL-3.2.1-py3.9.egg-info \\\n    osgeo && rm /tmp/task.tgz\n"
}