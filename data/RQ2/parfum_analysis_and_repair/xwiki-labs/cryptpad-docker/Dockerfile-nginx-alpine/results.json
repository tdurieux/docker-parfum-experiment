{
  "startTime": 1674251824549,
  "endTime": 1674251825035,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 7,
        "columnEnd": 27
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 7,
        "columnEnd": 27
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 7,
        "columnEnd": 49
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Multistage build to reduce image size and increase security\n\nFROM node:16-alpine AS build\n\n# Install requirements to clone repository and install deps\nRUN apk add --no-cache git \\\n    && npm install -g bower && npm cache clean --force;\n\n# Get cryptpad from repository submodule\nCOPY cryptpad /cryptpad\n\nWORKDIR /cryptpad\n\n# Install dependencies\nRUN npm install --production \\\n    && npm install -g bower \\\n    && bower install --allow-root && npm cache clean --force;\n\n# Create actual cryptpad image\nFROM node:16-alpine\n\nRUN set -x \\\n    # Create users and groups for nginx and cryptpad\n    && addgroup -g 4001 -S cryptpad \\\n    && adduser -u 4001 -S -D -G cryptpad -H -h /dev/null cryptpad \\\n    \\\n    # Create needed dir for nginx pid\n    && mkdir -p /var/run/nginx \\\n    \\\n    # Install packages \\\n    && apk add --no-cache supervisor nginx openssl zlib pcre \\\n    && rm -rf /etc/nginx\n\n# Copy nginx conf from official image\nCOPY --from=nginx:latest /etc/nginx /etc/nginx\n\n# Disable server tokens\nRUN sed -i \"/default_type/a \\\\    server_tokens off;\" /etc/nginx/nginx.conf\n\n# Copy cryptpad with installed modules\nCOPY --from=build --chown=cryptpad /cryptpad /cryptpad\n\n# Copy supervisord conf file\nCOPY supervisord.conf /etc/supervisord.conf\n\n# Copy docker-entrypoint.sh script\nCOPY docker-entrypoint.sh /docker-entrypoint.sh\n\n# Set workdir to cryptpad\nWORKDIR /cryptpad\n\n# Create directories\nRUN mkdir blob block customize data datastore \\\n    && chown cryptpad:cryptpad blob block customize data datastore\n\n# Volumes for data persistence\nVOLUME /cryptpad/blob \\\n       /cryptpad/block \\\n       /cryptpad/customize \\\n       /cryptpad/data \\\n       /cryptpad/datastore\n\n# Ports\nEXPOSE 80 443\n\nENTRYPOINT [\"/bin/sh\", \"/docker-entrypoint.sh\"]\n\nCMD [\"/usr/bin/supervisord\", \"-n\", \"-c\", \"/etc/supervisord.conf\"]\n"
}