{
  "startTime": 1674248430000,
  "endTime": 1674248431346,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 0,
        "columnEnd": 116
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 136
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 42,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 79
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 4,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 42,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 79
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 42,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 79
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 4,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 42,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 79
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:18.04 as builder\n\nENV DEBIAN_FRONTEND=noninteractive\nRUN apt-get -y update\nRUN apt-get -y --no-install-recommends --assume-yes install bash build-essential cmake cpp curl debconf-utils g++ gcc git git-core libio-stringy-perl \\\nliblua5.1 liblua5.1-dev libluabind-dev libmysql++ libperl-dev libperl5i-perl libmysqlclient-dev \\\nminizip lua5.1 make mariadb-client open-vm-tools unzip uuid-dev wget minizip zlibc libjson-perl libssl-dev \\\nautoconf libjpeg-dev libsqlite3-dev libcurl4-openssl-dev libpcre++-dev libspeexdsp-dev libspeex-dev libavcodec-dev libavformat-dev \\\nlibldns-dev libedit-dev libtiff-dev yasm libopus-dev libopus0 opus-tools libsndfile1 libsndfile-dev \\\nlibasound2 libasound2-dev libavresample3 libavresample-dev libswscale4 libswscale-dev libpq5 libpq-dev \\\nlibcodec2-0.7 libcodec2-dev libopencv-dev erlang erlang-dev libmagickcore-dev openjdk-8-jdk openjdk-8-source \\\nlibpython-all-dev python-dev libldap-2.4-2 libldap2-dev libmemcached11 libmemcached-dev libmp4v2-2 libmp4v2-dev \\\nlibgdbm-dev libgdbm-compat-dev libdb-dev bison portaudio19-dev libshout3 libshout3-dev libmpg123-0 libmpg123-dev \\\nlibmp3lame0 libmp3lame-dev libvorbis0a libvorbis-dev libsmpp34-0 libsmpp34-dev libsnmp-dev libvlc5 libvlc-dev \\\nlibyaml-0-2 libyaml-dev && rm -rf /var/lib/apt/lists/*;\nRUN git clone --branch v1.8 --depth 1 https://github.com/signalwire/freeswitch.git\nRUN sed -ie 's/hg->capt_id.data = htons(mr->mr_agent_id);/hg->capt_id.data = htonl(mr->mr_agent_id);/g' /freeswitch/libs/sofia-sip/libsofia-sip-ua/tport/tport_logging.c\n#RUN git checkout v1.8\n#RUN apt-get -y install libssl1.0-dev libpt-dev libpt2.10.11\n#RUN git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git\n#RUN depot_tools/fetch v8\n#WORKDIR /v8\n#RUN ../depot_tools/gclient sync\n#RUN ./build/install-build-deps.sh\n#RUN tools/dev/gm.py x64.release\n\n\nWORKDIR /freeswitch\nRUN ./bootstrap.sh\nRUN sed -i -e 's/mod_signalwire//g' modules.conf\nRUN sed -i -e 's/#event_handlers\\/mod_json_cdr/event_handlers\\/mod_json_cdr/g' modules.conf\nRUN sed -i -e 's/#languages\\/mod_python/event_handlers\\/languages\\/mod_python/g' modules.conf\n#RUN sed -i -e 's/#languages\\/mod_v8/event_handlers\\/languages\\/mod_v8/g' modules.conf\n\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/opt/freeswitch --enable-core-pgsql-support --with-java=/usr/lib/jvm/java-8-openjdk-amd64 --enable-optimization\nRUN make -j 10\nRUN make install\n\nFROM ubuntu:18.04\nENV DEBIAN_FRONTEND=noninteractive\nRUN apt-get update --fix-missing\nRUN apt-get -y --assume-yes dist-upgrade\nRUN apt-get -y --no-install-recommends --assume-yes install bash libmysqlclient20 minizip lua5.1 \\\nunzip libuuid1 curl wget zlibc libjson-perl libjpeg8 libsqlite3-0 sqlite3 libcurl4 libspeexdsp1 \\\nlibspeex1 libldns2 libedit2 libtiff5 libopus0 opus-tools libsndfile1 \\\n#libavcodec57 libavformat57 libswscale4 libmagickcore-6.q16-3 libldap-2.4-2 \\\nlibpq5 libcodec2-0.7 liblua5.2 \\\nlibldap-2.4-2 libmemcached11 libmp4v2-2 libgdbm5 libdb5.3 libportaudio2 libshout3 \\\nlibmpg123-0 libmp3lame0 libvorbis0a libsmpp34-0 libsnmp30 libyaml-0-2 dumb-init && apt-get clean autoclean && \\\n curl -f -k -L https://github.com/lwahlmeier/sip-ping/releases/download/v1.0.0/sip-ping-linux-amd64 > /usr/bin/sip-ping && \\\nchmod 755 /usr/bin/sip-ping && \\\napt-get autoremove --yes && \\\nrm -rf /var/lib/{apt,dpkg,cache,log}/ && rm -rf /var/lib/apt/lists/*;\n\nCOPY --from=builder /opt/freeswitch /opt/freeswitch\n\nRUN ln -s /opt/freeswitch/etc/freeswitch /etc/freeswitch && ln -s /opt/freeswitch/var/log/freeswitch /var/log/freeswitch && ln -s /opt/freeswitch/bin/fs_cli /usr/bin/fs_cli\n\nCOPY configs/updatefs.sh /\nRUN cp -r /etc/freeswitch /etc/orig_fs_config && /updatefs.sh && rm /updatefs.sh\n\n#add generic profile\nCOPY configs/sip-profile.xml /etc/freeswitch/sip_profiles/\n#add generic config\nCOPY configs/sip-dialplan.xml /etc/freeswitch/dialplan/\n#add generic conference config\nCOPY configs/conference.conf.xml /etc/freeswitch/autoload_configs/\nCOPY configs/json_cdr.conf.xml /etc/freeswitch/autoload_configs/\n\nRUN apt-get clean autoclean && \\\napt-get autoremove --yes && \\\nrm -rf /var/lib/{apt,dpkg,cache,log}/\n\n\nCOPY run.sh /\nRUN touch /env.sh\n\nENTRYPOINT [\"/run.sh\"]\nCMD [\"/opt/freeswitch/bin/freeswitch\", \"-nonat\", \"-nf\", \"-nc\"]\n\n"
}