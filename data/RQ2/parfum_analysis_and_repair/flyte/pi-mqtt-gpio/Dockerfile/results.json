{
  "startTime": 1674252195715,
  "endTime": 1674252196710,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 75
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 75
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# If you get issues along the lines of:\n# \"Error while loading /usr/sbin/dpkg-split: No such file or directory\"\n# when building multiarch using buildx, then try this:\n# https://github.com/docker/buildx/issues/495#issuecomment-761562905\n\nFROM python:3.8-buster AS base\n\nENV LANG C.UTF-8\nENV LC_ALL C.UTF-8\n\n\nFROM base AS requirements\n\nARG BUILDX_QEMU_ENV\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y lsb-release rustc libssl-dev libffi-dev python3-venv && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt-/lists/* && rm -rf /var/lib/apt/lists/*;\n\n# This nonsense is required for this reason:\n# https://github.com/JonasAlfredsson/docker-nginx-certbot/issues/30\n\nRUN pip install --no-cache-dir wheel setuptools-rust && \\\n    if [ \"${BUILDX_QEMU_ENV}\" = \"true\" -a \"$(getconf LONG_BIT)\" = \"32\" ]; then \\\n        pip install --no-cache-dir cryptography==3.3.2; \\\n    fi && \\\n    pip install --no-cache-dir poetry\n\nCOPY pyproject.toml ./\nRUN poetry export -o /requirements.txt && \\\n    mkdir -p /home/mqtt_io && \\\n    python -m venv /home/mqtt_io/venv && \\\n    /home/mqtt_io/venv/bin/pip install wheel\n\n\nFROM base\n\nRUN useradd -m -s /bin/bash mqtt_io\nUSER mqtt_io\nWORKDIR /home/mqtt_io\n\nCOPY --from=requirements --chown=mqtt_io /home/mqtt_io/venv ./venv\nCOPY --from=requirements /requirements.txt ./\nRUN venv/bin/pip install -r requirements.txt\n\nCOPY --chown=mqtt_io mqtt_io mqtt_io\n\nCMD [ \"venv/bin/python\", \"-m\", \"mqtt_io\", \"/config.yml\" ]\n"
}