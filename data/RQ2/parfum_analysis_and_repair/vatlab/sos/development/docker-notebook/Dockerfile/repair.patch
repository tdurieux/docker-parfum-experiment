diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/vatlab/sos/development/docker-notebook/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/vatlab/sos/development/docker-notebook/Dockerfile/repaired.Dockerfile
index aa479f7..58c8862 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/vatlab/sos/development/docker-notebook/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/vatlab/sos/development/docker-notebook/Dockerfile/repaired.Dockerfile
@@ -17,13 +17,13 @@ USER    root
 
 #       Tools
 RUN     apt-get update
-RUN     apt-get install -y graphviz zlib1g-dev libbz2-dev libcurl4-openssl-dev libssl-dev
-RUN     apt-get install -y texlive-xetex texlive-latex-recommended texlive-latex-extra texlive-fonts-recommended
-RUN     apt-get install -y octave
+RUN apt-get install --no-install-recommends -y graphviz zlib1g-dev libbz2-dev libcurl4-openssl-dev libssl-dev && rm -rf /var/lib/apt/lists/*;
+RUN apt-get install --no-install-recommends -y texlive-xetex texlive-latex-recommended texlive-latex-extra texlive-fonts-recommended && rm -rf /var/lib/apt/lists/*;
+RUN apt-get install --no-install-recommends -y octave && rm -rf /var/lib/apt/lists/*;
 RUN     octave --eval 'pkg install -forge dataframe'
 
-RUN     apt-get install -y npm vim libgmp3-dev software-properties-common
-RUN     apt-get install -y libtool libffi-dev ruby ruby-dev make  libzmq3-dev libczmq-dev
+RUN apt-get install --no-install-recommends -y npm vim libgmp3-dev software-properties-common && rm -rf /var/lib/apt/lists/*;
+RUN apt-get install --no-install-recommends -y libtool libffi-dev ruby ruby-dev make libzmq3-dev libczmq-dev && rm -rf /var/lib/apt/lists/*;
 
 # Install some packages for our examples
 RUN     conda install -c conda-forge -y r-arrow r-glmnet r-biocmanager
@@ -37,19 +37,19 @@ RUN     iruby register --force
 RUN     cd /home/jovyan; chown -R jovyan ../jovyan
 USER    jovyan
 
-RUN     pip install sklearn
+RUN pip install --no-cache-dir sklearn
 
 #       Bash
-RUN     pip install bash_kernel
+RUN pip install --no-cache-dir bash_kernel
 RUN     python -m bash_kernel.install --user
 
 #       Octave
-RUN     pip install octave_kernel
+RUN pip install --no-cache-dir octave_kernel
 RUN     python -m octave_kernel install --user
 
 #       JavaScript
 RUN     npm rebuild
-RUN     npm install -g ijavascript
+RUN npm install -g ijavascript && npm cache clean --force;
 RUN     ijsinstall --spec-path=full
 
 #        Julia
@@ -59,17 +59,17 @@ RUN     conda install -y pyarrow -c conda-forge
 
 
 # SOS
-RUN     pip install docker markdown wand graphviz imageio pillow nbformat
+RUN pip install --no-cache-dir docker markdown wand graphviz imageio pillow nbformat
 
 ## trigger rerun for sos updates
 ARG	    DUMMY=unknown
 RUN     DUMMY=${DUMMY} conda install -c conda-forge sos sos-notebook sos-r sos-julia sos-python sos-matlab sos-bash
-RUN     pip install sos-ruby sos-javascript sos-bioinfo
+RUN pip install --no-cache-dir sos-ruby sos-javascript sos-bioinfo
 RUN     conda install -c conda-forge jupyterlab-transient-display-data jupyterlab-sos
 RUN     jupyter lab build --dev-build=False --minimize=False
 
 #       Markdown kernel
-RUN     pip install markdown-kernel
+RUN pip install --no-cache-dir markdown-kernel
 RUN     python -m markdown_kernel.install --prefix /opt/conda/
 
 ENV     JUPYTER_ENABLE_LAB TRUE