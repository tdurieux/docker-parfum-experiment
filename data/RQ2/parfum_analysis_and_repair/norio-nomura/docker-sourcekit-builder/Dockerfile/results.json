{
  "startTime": 1674220477086,
  "endTime": 1674220477723,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04\nMAINTAINER Norio Nomura <norio.nomura@gmail.com>\n\n# Install Dependencies\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y \\\n      autoconf \\\n      build-essential \\\n      clang \\\n      cmake \\\n      curl \\\n      git \\\n      icu-devtools \\\n      libblocksruntime-dev \\\n      libbsd-dev \\\n      libcurl4-openssl-dev \\\n      libedit-dev \\\n      libicu-dev \\\n      libkqueue-dev \\\n      libncurses5-dev \\\n      libpython-dev \\\n      libsqlite3-dev \\\n      libtool \\\n      libxml2-dev \\\n      ninja-build \\\n      pkg-config \\\n      python \\\n      sudo \\\n      swig \\\n      systemtap-sdt-dev \\\n      tzdata \\\n      uuid-dev \\\n      vim-tiny \\\n      wamerican \\\n      && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\nRUN groupadd -r swift-dev && useradd -r -g swift-dev swift-dev\n\n# Setup Environment Variables\n\nENV REVISION=\"0b99336\" \\\n    OUTPUT_DIR=\"/swift\" \\\n    WORK_DIR=\"/swift-dev\"\n\nENV SRC_DIR=${WORK_DIR}/swift \\\n    TOOLCHAIN_VERSION=\"swift-3.1.1-RELEASE-${REVISION}-with-sourcekit\"\nENV ARCHIVE=\"${TOOLCHAIN_VERSION}.tar.gz\"\nENV SWIFT_INSTALL_DIR=\"${WORK_DIR}/swift-nightly-install\" \\\n    SWIFT_INSTALLABLE_PACKAGE=\"${OUTPUT_DIR}/${ARCHIVE}\"\n\n# Make ${OUTPUT_DIR} ${WORK_DIR}\nRUN mkdir -p ${OUTPUT_DIR} && chown swift-dev:swift-dev ${OUTPUT_DIR} && \\\n    mkdir -p ${WORK_DIR} && chown swift-dev:swift-dev ${WORK_DIR}\n\n# Clone & Check Out to ${WORK_DIR}\nRUN sudo --user=swift-dev git clone https://github.com/norio-nomura/swift-dev.git && \\\n\n# Using commit hash will avoid caching by branch name.\n    cd ${WORK_DIR} && \\\n    sudo --user=swift-dev git fetch && \\\n    sudo --user=swift-dev git checkout ${REVISION} && \\\n    sudo --user=swift-dev git submodule update --init --recursive && \\\n\n# Build Swift installer package at ${SWIFT_INSTALLABLE_PACKAGE}\n    cd ${SRC_DIR} && \\\n    sudo --user=swift-dev utils/build-script \\\n      --preset-file=\"${WORK_DIR}/build-presets-for-sourcekit-linux.ini\" \\\n      --preset=\"buildbot_linux\" \\\n      -- \\\n      install_destdir=\"${SWIFT_INSTALL_DIR}\" \\\n      installable_package=\"${SWIFT_INSTALLABLE_PACKAGE}\" && \\\n\n# Install ${SWIFT_INSTALLABLE_PACKAGE} and remove ${WORK_DIR}\n    cd / && \\\n    tar zxvf \"${SWIFT_INSTALLABLE_PACKAGE}\" -C / && \\\n    rm -rf ${WORK_DIR}\n\n# Output ${OUTPUT_DIR} as build context\nCOPY Dockerfile-swift-16.04 ${OUTPUT_DIR}/Dockerfile\nRUN echo \"ADD ${ARCHIVE} /\\n\">>${OUTPUT_DIR}/Dockerfile\nADD entrypoint /\nENTRYPOINT [\"/entrypoint\"]\n"
}