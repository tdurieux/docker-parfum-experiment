{
  "startTime": 1674218451913,
  "endTime": 1674218453931,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 191,
        "lineEnd": 191,
        "columnStart": 5,
        "columnEnd": 45
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 158,
        "lineEnd": 158,
        "columnStart": 5,
        "columnEnd": 31
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 316,
        "lineEnd": 316,
        "columnStart": 17,
        "columnEnd": 63
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 20,
        "lineEnd": 28,
        "columnStart": 5,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 32,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 11
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 58,
        "lineEnd": 73,
        "columnStart": 5,
        "columnEnd": 9
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 77,
        "lineEnd": 93,
        "columnStart": 3,
        "columnEnd": 11
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 104,
        "lineEnd": 104,
        "columnStart": 5,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 116,
        "lineEnd": 116,
        "columnStart": 3,
        "columnEnd": 60
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 152,
        "lineEnd": 152,
        "columnStart": 22,
        "columnEnd": 120
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 181,
        "lineEnd": 181,
        "columnStart": 5,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 185,
        "lineEnd": 185,
        "columnStart": 5,
        "columnEnd": 54
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 235,
        "lineEnd": 235,
        "columnStart": 5,
        "columnEnd": 80
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 240,
        "lineEnd": 242,
        "columnStart": 5,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 254,
        "lineEnd": 254,
        "columnStart": 4,
        "columnEnd": 66
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 185,
        "lineEnd": 185,
        "columnStart": 5,
        "columnEnd": 54
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 20,
        "lineEnd": 28,
        "columnStart": 5,
        "columnEnd": 27
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 32,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 11
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 58,
        "lineEnd": 73,
        "columnStart": 5,
        "columnEnd": 9
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 77,
        "lineEnd": 93,
        "columnStart": 3,
        "columnEnd": 11
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 104,
        "lineEnd": 104,
        "columnStart": 5,
        "columnEnd": 38
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 116,
        "lineEnd": 116,
        "columnStart": 3,
        "columnEnd": 60
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 152,
        "lineEnd": 152,
        "columnStart": 22,
        "columnEnd": 120
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 181,
        "lineEnd": 181,
        "columnStart": 5,
        "columnEnd": 32
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 185,
        "lineEnd": 185,
        "columnStart": 5,
        "columnEnd": 54
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 235,
        "lineEnd": 235,
        "columnStart": 5,
        "columnEnd": 80
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 240,
        "lineEnd": 242,
        "columnStart": 5,
        "columnEnd": 32
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 254,
        "lineEnd": 254,
        "columnStart": 4,
        "columnEnd": 66
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 185,
        "lineEnd": 185,
        "columnStart": 5,
        "columnEnd": 78
      }
    }
  ],
  "repairedDockerfile": "ARG MYAPP_IMAGE=ubuntu:20.04\nFROM $MYAPP_IMAGE\n\nMAINTAINER William Stein <wstein@sagemath.com>\n\nUSER root\n\n# See https://github.com/sagemathinc/cocalc/issues/921\nENV LC_ALL C.UTF-8\nENV LANG en_US.UTF-8\nENV LANGUAGE en_US:en\nENV TERM screen\n\n\n# So we can source (see http://goo.gl/oBPi5G)\nRUN rm /bin/sh && ln -s /bin/bash /bin/sh\n\n# Ubuntu software that are used by CoCalc (latex, pandoc, sage)\nRUN \\\n     apt-get update \\\n  && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y \\\n       software-properties-common \\\n       texlive \\\n       texlive-latex-extra \\\n       texlive-extra-utils \\\n       texlive-xetex \\\n       texlive-luatex \\\n       texlive-bibtex-extra \\\n       liblog-log4perl-perl && rm -rf /var/lib/apt/lists/*;\n\nRUN \\\n    apt-get update \\\n && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y \\\n       tmux \\\n       flex \\\n       bison \\\n       libreadline-dev \\\n       htop \\\n       screen \\\n       pandoc \\\n       aspell \\\n       poppler-utils \\\n       net-tools \\\n       wget \\\n       curl \\\n       git \\\n       python3 \\\n       python \\\n       python3-pip \\\n       make \\\n       g++ \\\n       sudo \\\n       psmisc \\\n       rsync \\\n       tidy && rm -rf /var/lib/apt/lists/*;\n\n RUN \\\n     apt-get update \\\n  && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y \\\n       vim \\\n       inetutils-ping \\\n       lynx \\\n       telnet \\\n       git \\\n       emacs \\\n       subversion \\\n       ssh \\\n       m4 \\\n       latexmk \\\n       libpq5 \\\n       libpq-dev \\\n       build-essential \\\n       automake \\\n       jq && rm -rf /var/lib/apt/lists/*;\n\nRUN \\\n   apt-get update \\\n&& DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y \\\n       gfortran \\\n       dpkg-dev \\\n       libssl-dev \\\n       imagemagick \\\n       libcairo2-dev \\\n       libcurl4-openssl-dev \\\n       graphviz \\\n       smem \\\n       octave \\\n       locales \\\n       locales-all \\\n       clang-format \\\n       yapf3 \\\n       golang \\\n       r-cran-formatr \\\n       yasm && rm -rf /var/lib/apt/lists/*;\n\n# We stick with PostgreSQL 10 for now, to avoid any issues with users having to\n# update to an incompatible version 12.  We don't use postgresql-12 features *yet*,\n# and won't upgrade until we need to or it becomes a security liability.  Note that\n# PostgreSQL 10 is officially supported until November 10, 2022 according to\n# https://www.postgresql.org/support/versioning/\nRUN \\\n     sh -c 'echo \"deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main\" > /etc/apt/sources.list.d/pgdg.list' \\\n  && wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add - \\\n  && apt-get update \\\n  && apt-get install --no-install-recommends -y postgresql-10 && rm -rf /var/lib/apt/lists/*;\n\n\n# These are specifically packages that we install since building them as\n# part of Sage can be problematic (e.g., on aarch64).  Dima encouraged me\n# to list all the packages Sage suggests (so a long list of dozens of packages),\n# but I tried that and of course it failed.  Also, since Sage integration\n# testing is done with specific versions of things, it seems very highly unlikely\n# that we'll have a stable robust build by installing whatever happens to\n# be the newest versions of packages from Ubuntu.\nRUN \\\n   apt-get update \\\n&& DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y tachyon && rm -rf /var/lib/apt/lists/*;\n\n# Build and install Sage -- see https://github.com/sagemath/docker-images\nCOPY scripts/ /usr/sage-install-scripts/\nRUN chmod -R a+rx /usr/sage-install-scripts/\n\nRUN    adduser --quiet --shell /bin/bash --gecos \"Sage user,101,,\" --disabled-password sage \\\n    && chown -R sage:sage /home/sage/\n\n# make source checkout target, then run the install script\n# see https://github.com/docker/docker/issues/9547 for the sync\n# TODO: It used to be that Sage couldn't be built as root, but now it can with\n# a special flag, but we still workaround this below.\n# Here -E inherits the environment from root, however it's important to\n# include -H to set HOME=/home/sage, otherwise DOT_SAGE will not be set\n# correctly and the build will fail!\nRUN    mkdir -p /usr/local/sage \\\n    && chown -R sage:sage /usr/local/sage \\\n    && sudo -H -E -u sage /usr/sage-install-scripts/install_sage.sh /usr/local/ 9.6 \\\n    && sync\n\nRUN /usr/sage-install-scripts/post_install_sage.sh /usr/local/ && rm -rf /tmp/* && sync\n\n# Install SageTex.\n# This used to be from /usr/local/sage/local/share/texmf/tex/latex/sagetex/\n# but it moved in sage >=9.5:\nRUN \\\n     sudo -H -E -u sage sage -p sagetex \\\n  && cp -rv /usr/local/sage/local/var/lib/sage/venv-python*/share/texmf/tex/latex/sagetex/ /usr/share/texmf/tex/latex/ \\\n  && texhash\n\n# Save nearly 5GB -- only do after installing all sage stuff!:\nRUN rm -rf /usr/local/sage/build/pkgs/sagelib/src/build\n\n# Important: do not try to install these directly from pypi, since usually (and strangely?)\n# what is posted to Pypi is broken.  Yes, I learned the hard way.\nRUN apt-get update && apt-get install --no-install-recommends -y python3-yaml python3-matplotlib python3-jupyter* python3-ipywidgets jupyter && rm -rf /var/lib/apt/lists/*;\n\n# install the Octave kernel.\n# NOTE: we delete the spec file and use our own spec for the octave kernel, since the\n# one that comes with Ubuntu 20.04 crashes (it uses python instead of python3).\nRUN \\\n     pip3 install --no-cache-dir octave_kernel \\\n  && rm -rf /usr/local/share/jupyter/kernels/octave\n\n# Pari/GP kernel support\n# Commented out since it doesn't build anymore with newer Sage, evidently...\n# RUN sage --pip install pari_jupyter\n\n# Install LEAN proof assistant\nRUN \\\n     export VERSION=3.4.1 \\\n  && mkdir -p /opt/lean \\\n  && cd /opt/lean \\\n  && wget https://github.com/leanprover/lean/releases/download/v$VERSION/lean-$VERSION-linux.tar.gz \\\n  && tar xf lean-$VERSION-linux.tar.gz \\\n  && rm lean-$VERSION-linux.tar.gz \\\n  && rm -f latest \\\n  && ln -s lean-$VERSION-linux latest \\\n  && ln -s /opt/lean/latest/bin/lean /usr/local/bin/lean\n\n# Install all aspell dictionaries, so that spell check will work in all languages.  This is\n# used by cocalc's spell checkers (for editors).  This takes about 80MB, which is well worth it.\nRUN \\\n     apt-get update \\\n  && apt-get install --no-install-recommends -y aspell-* && rm -rf /var/lib/apt/lists/*;\n\nRUN \\\n     wget -qO- https://deb.nodesource.com/setup_16.x | bash - \\\n  && apt-get install --no-install-recommends -y nodejs libxml2-dev libxslt-dev \\\n  && /usr/bin/npm install -g npm && rm -rf /var/lib/apt/lists/*;\n\n\n# Kernel for javascript (the node.js Jupyter kernel)\nRUN \\\n     npm install --unsafe-perm -g ijavascript \\\n  && ijsinstall --install=global && npm cache clean --force;\n\n# Kernel for Typescript -- commented out since seems flakie and\n# probably not generally interesting.\n#RUN \\\n#     npm install --unsafe-perm -g itypescript \\\n#  && its --install=global\n\n# Install Julia\nARG JULIA=1.7.3\nRUN cd /tmp \\\n && export ARCH1=`uname -m | sed s/x86_64/x64/` \\\n && export ARCH2=`uname -m` \\\n && wget -q https://julialang-s3.julialang.org/bin/linux/${ARCH1}/${JULIA%.*}/julia-${JULIA}-linux-${ARCH2}.tar.gz \\\n && tar xf julia-${JULIA}-linux-${ARCH2}.tar.gz -C /opt \\\n && rm  -f julia-${JULIA}-linux-${ARCH2}.tar.gz \\\n && mv /opt/julia-* /opt/julia \\\n && ln -s /opt/julia/bin/julia /usr/local/bin\n\n# Quick test that Julia actually works (i.e., we installed the right binary above).\nRUN echo '2+3' | julia\n\n# Install IJulia kernel\n# I figured out the directory /opt/julia/local/share/julia by inspecting the global varaible\n# DEPOT_PATH from within a running Julia session as a normal user, and also reading julia docs:\n#    https://pkgdocs.julialang.org/v1/glossary/\n# It was *incredibly* confusing, and the dozens of discussions of this problem that one finds\n# via Google are all very wrong, incomplete, misleading, etc.  It's truly amazing how\n# disorganized-wrt-Google information about Julia is, as compared to Node.js and Python.\nRUN echo 'using Pkg; Pkg.add(\"IJulia\");' | JUPYTER=/usr/local/bin/jupyter JULIA_DEPOT_PATH=/opt/julia/local/share/julia JULIA_PKG=/opt/julia/local/share/julia julia\nRUN mv \"$HOME/.local/share/jupyter/kernels/julia\"* \"/usr/local/share/jupyter/kernels/\"\n\n# Also add Pluto system-wide, since we'll likely support it soon in cocalc, and also\n# Nemo and Hecke (some math software).\nRUN echo 'using Pkg; Pkg.add(\"Pluto\"); Pkg.add(\"Nemo\"); Pkg.add(\"Hecke\")' | JULIA_DEPOT_PATH=/opt/julia/local/share/julia JULIA_PKG=/opt/julia/local/share/julia julia\n\n# Install R Jupyter Kernel package into R itself (so R kernel works), and some other packages e.g., rmarkdown which requires reticulate to use Python.\nRUN echo \"install.packages(c('repr', 'IRdisplay', 'evaluate', 'crayon', 'pbdZMQ', 'httr', 'devtools', 'uuid', 'digest', 'IRkernel', 'formatR'), repos='https://cloud.r-project.org')\" | sage -R --no-save\nRUN echo \"install.packages(c('repr', 'IRdisplay', 'evaluate', 'crayon', 'pbdZMQ', 'httr', 'devtools', 'uuid', 'digest', 'IRkernel', 'rmarkdown', 'reticulate', 'formatR'), repos='https://cloud.r-project.org')\" | R --no-save\n\n# Xpra backend support -- we have to use the debs from xpra.org,\nRUN \\\n     apt-get update \\\n  && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y xvfb xsel websockify xpra && rm -rf /var/lib/apt/lists/*;\n\n# X11 apps to make x11 support useful.\nRUN \\\n     apt-get update \\\n  && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y x11-apps dbus-x11 gnome-terminal \\\n     vim-gtk lyx libreoffice inkscape gimp firefox texstudio evince mesa-utils \\\n     xdotool xclip x11-xkb-utils && rm -rf /var/lib/apt/lists/*;\n\n# chromium-browser is used in headless mode for printing Jupyter notebooks.\n# However, Ubuntu doesn't support installing it anymore except via a \"snap\" package,\n# and snap packages do NOT work at all with Docker!?  WTF?  Thus we install a third party,\n# as recommended here: https://askubuntu.com/questions/1204571/how-to-install-chromium-without-snap\n# Also, note that official google-chrome binaries don't exist for ARM 64-bit,\n# so that's not an option.  Also, the chromium-browser package by default\n# in Ubuntu is just a tiny wrapper that says \"use our snap\".\nRUN \\\n    add-apt-repository -y ppa:saiarcot895/chromium-beta \\\n && apt update \\\n && DEBIAN_FRONTEND=noninteractive apt --no-install-recommends install -y chromium-browser && rm -rf /var/lib/apt/lists/*;\n\n# VSCode code-server web application\n# See https://github.com/cdr/code-server/releases for VERSION.\nRUN \\\n     export VERSION=3.12.0 \\\n  && export ARCH=`uname -m | sed s/aarch64/arm64/ | sed s/x86_64/amd64/` \\\n  && curl -fOL https://github.com/cdr/code-server/releases/download/v$VERSION/code-server_\"$VERSION\"_\"$ARCH\".deb \\\n  && dpkg -i code-server_\"$VERSION\"_\"$ARCH\".deb \\\n  && rm code-server_\"$VERSION\"_\"$ARCH\".deb\n\n\nRUN echo \"umask 077\" >> /etc/bash.bashrc\n\n# Install some Jupyter kernel definitions\nCOPY kernels /usr/local/share/jupyter/kernels\n\n# Configure so that R kernel actually works -- see https://github.com/IRkernel/IRkernel/issues/388\nCOPY kernels/ir/Rprofile.site /usr/local/sage/local/lib/R/etc/Rprofile.site\n\n# Build a UTF-8 locale, so that tmux works -- see https://unix.stackexchange.com/questions/277909/updated-my-arch-linux-server-and-now-i-get-tmux-need-utf-8-locale-lc-ctype-bu\nRUN echo \"en_US.UTF-8 UTF-8\" > /etc/locale.gen && locale-gen\n\n# Configuration\n\nCOPY login.defs /etc/login.defs\nCOPY login /etc/defaults/login\nCOPY run.py /root/run.py\nCOPY bashrc /root/.bashrc\n\n\n# CoCalc Jupyter widgets rely on these:\nRUN \\\n  pip3 install --no-cache-dir ipyleaflet\n\n# The Jupyter kernel that gets auto-installed with some other jupyter Ubuntu packages\n# doesn't have some nice options regarding inline matplotlib (and possibly others), so\n# we delete it.\nRUN rm -rf /usr/share/jupyter/kernels/python3\n\n# Fix pythontex for our use\nRUN ln -sf /usr/bin/pythontex /usr/bin/pythontex3\n\n# Fix yapf for our use\nRUN ln -sf /usr/bin/yapf3 /usr/bin/yapf\n\n# Other pip3 packages\n# NOTE: Upgrading zmq is very important, or the Ubuntu version breaks everything..\nRUN \\\n  pip3 install --upgrade --no-cache-dir  pandas plotly scipy  scikit-learn seaborn bokeh zmq k3d\n\n# Commit to checkout and build.\nARG BRANCH=master\nARG commit=HEAD\n\n# Pull latest source code for CoCalc and checkout requested commit (or HEAD),\n# install our Python libraries globally, then remove cocalc.  We only need it\n# for installing these Python libraries (TODO: move to pypi?).\nRUN \\\n     umask 022 && git clone --depth=1 https://github.com/sagemathinc/cocalc.git \\\n  && cd /cocalc && git pull && git fetch -u origin $BRANCH:$BRANCH && git checkout ${commit:-HEAD}\n\nRUN umask 022 && pip3 install --no-cache-dir --upgrade /cocalc/src/smc_pyutil/\n\n# Install code into Sage\nRUN umask 022 && sage -pip install --upgrade /cocalc/src/smc_sagews/\n\n# Build cocalc itself.\nRUN umask 022 \\\n  && cd /cocalc/src \\\n  && npm run make\n\n# And cleanup npm cache, which is several hundred megabytes after building cocalc above.\nRUN rm -rf /root/.npm\n\nCMD /root/run.py\n\nARG BUILD_DATE\nLABEL org.label-schema.build-date=$BUILD_DATE\n\nEXPOSE 22 80 443\n"
}