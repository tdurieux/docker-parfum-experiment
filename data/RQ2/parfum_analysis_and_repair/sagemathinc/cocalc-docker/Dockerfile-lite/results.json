{
  "startTime": 1674249327747,
  "endTime": 1674249347677,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 104,
        "lineEnd": 104,
        "columnStart": 17,
        "columnEnd": 63
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 20,
        "lineEnd": 52,
        "columnStart": 5,
        "columnEnd": 9
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 5,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 5,
        "columnEnd": 54
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 5,
        "columnEnd": 54
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 20,
        "lineEnd": 52,
        "columnStart": 5,
        "columnEnd": 9
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 5,
        "columnEnd": 38
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 5,
        "columnEnd": 54
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 5,
        "columnEnd": 78
      }
    }
  ],
  "repairedDockerfile": "ARG MYAPP_IMAGE=ubuntu:20.04\nFROM $MYAPP_IMAGE\n\nMAINTAINER William Stein <wstein@sagemath.com>\n\nUSER root\n\n# See https://github.com/sagemathinc/cocalc/issues/921\nENV LC_ALL C.UTF-8\nENV LANG en_US.UTF-8\nENV LANGUAGE en_US:en\nENV TERM screen\n\n\n# So we can source (see http://goo.gl/oBPi5G)\nRUN rm /bin/sh && ln -s /bin/bash /bin/sh\n\n# Ubuntu software that are used by CoCalc (latex, pandoc, sage)\nRUN \\\n     apt-get update \\\n  && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y \\\n       software-properties-common \\\n       tmux \\\n       flex \\\n       bison \\\n       libreadline-dev \\\n       poppler-utils \\\n       net-tools \\\n       wget \\\n       curl \\\n       git \\\n       python3 \\\n       python \\\n       python3-pip \\\n       make \\\n       g++ \\\n       sudo \\\n       psmisc \\\n       rsync \\\n       tidy \\\n       vim \\\n       inetutils-ping \\\n       lynx \\\n       telnet \\\n       git \\\n       ssh \\\n       m4 \\\n       latexmk \\\n       libpq5 \\\n       libpq-dev \\\n       build-essential \\\n       automake \\\n       jq && rm -rf /var/lib/apt/lists/*;\n\n\n# We stick with PostgreSQL 10 for now, to avoid any issues with users having to\n# update to an incompatible version 12.  We don't use postgresql-12 features *yet*,\n# and won't upgrade until we need to or it becomes a security liability.  Note that\n# PostgreSQL 10 is officially supported until November 10, 2022 according to\n# https://www.postgresql.org/support/versioning/\nRUN \\\n     sh -c 'echo \"deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main\" > /etc/apt/sources.list.d/pgdg.list' \\\n  && wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add - \\\n  && apt-get update \\\n  && apt-get install --no-install-recommends -y postgresql-10 && rm -rf /var/lib/apt/lists/*;\n\nRUN \\\n     wget -qO- https://deb.nodesource.com/setup_16.x | bash - \\\n  && apt-get install --no-install-recommends -y nodejs libxml2-dev libxslt-dev \\\n  && /usr/bin/npm install -g npm && rm -rf /var/lib/apt/lists/*;\n\n\nRUN echo \"umask 077\" >> /etc/bash.bashrc\n\n# Build a UTF-8 locale, so that tmux works -- see https://unix.stackexchange.com/questions/277909/updated-my-arch-linux-server-and-now-i-get-tmux-need-utf-8-locale-lc-ctype-bu\nRUN echo \"en_US.UTF-8 UTF-8\" > /etc/locale.gen && locale-gen\n\n# Configuration\n\nCOPY login.defs /etc/login.defs\nCOPY login /etc/defaults/login\nCOPY run.py /root/run.py\nCOPY bashrc /root/.bashrc\n\n# The Jupyter kernel that gets auto-installed with some other jupyter Ubuntu packages\n# doesn't have some nice options regarding inline matplotlib (and possibly others), so\n# we delete it.\nRUN rm -rf /usr/share/jupyter/kernels/python3\n\n# Create this user, since the startup scripts assumes it exists, and user might install sage later.\nRUN    adduser --quiet --shell /bin/bash --gecos \"Sage user,101,,\" --disabled-password sage \\\n    && chown -R sage:sage /home/sage/\n\n# Commit to checkout and build.\nARG BRANCH=master\nARG commit=HEAD\n\n# Pull latest source code for CoCalc and checkout requested commit (or HEAD),\n# install our Python libraries globally, then remove cocalc.  We only need it\n# for installing these Python libraries (TODO: move to pypi?).\nRUN \\\n     umask 022 && git clone --depth=1 https://github.com/sagemathinc/cocalc.git \\\n  && cd /cocalc && git pull && git fetch -u origin $BRANCH:$BRANCH && git checkout ${commit:-HEAD}\n\nRUN umask 022 && pip3 install --no-cache-dir --upgrade /cocalc/src/smc_pyutil/\n\n# Build cocalc itself.\nRUN umask 022 \\\n  && cd /cocalc/src \\\n  && npm run make\n\n# And cleanup npm cache, which is several hundred megabytes after building cocalc above.\nRUN rm -rf /root/.npm\n\nCMD /root/run.py\n\nARG BUILD_DATE\nLABEL org.label-schema.build-date=$BUILD_DATE\n\nEXPOSE 22 80 443\n"
}