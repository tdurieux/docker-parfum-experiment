{
  "startTime": 1674215204042,
  "endTime": 1674215205159,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 2,
        "columnEnd": 71
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM openjdk:11-jre\n\nLABEL maintainer=\"The Apache Lucene/Solr Project\"\nLABEL repository=\"https://github.com/docker-solr/docker-solr\"\n\nARG SOLR_VERSION=\"8.11.2\"\nARG SOLR_SHA512=\"22fedcc0090eda72c3c5a5ea769c93adaf7d92c5c4479993f009ef0b9d42de5bd2ed1e0565ca01f3428587d8a3836286aa3017aab157050f2bd5bc3482fdebaa\"\nARG SOLR_KEYS=\"86EDB9C33B8517228E88A8F93E48C0C6EF362B9E\"\n# If specified, this will override SOLR_DOWNLOAD_SERVER and all ASF mirrors. Typically used downstream for custom builds\nARG SOLR_DOWNLOAD_URL\n\n# Override the solr download location with e.g.:\n#   docker build -t mine --build-arg SOLR_DOWNLOAD_SERVER=http://www-eu.apache.org/dist/lucene/solr .\nARG SOLR_DOWNLOAD_SERVER\n\nRUN set -ex; \\\n  apt-get update; \\\n  apt-get -y --no-install-recommends install acl dirmngr gpg lsof procps wget netcat gosu tini; \\\n  rm -rf /var/lib/apt/lists/*; \\\n  cd /usr/local/bin; wget -nv https://github.com/apangin/jattach/releases/download/v1.5/jattach; chmod 755 jattach; \\\n  echo >jattach.sha512 \"d8eedbb3e192a8596c08efedff99b9acf1075331e1747107c07cdb1718db2abe259ef168109e46bd4cf80d47d43028ff469f95e6ddcbdda4d7ffa73a20e852f9  jattach\"; \\\n  sha512sum -c jattach.sha512; rm jattach.sha512\n\nENV SOLR_USER=\"solr\" \\\n    SOLR_UID=\"8983\" \\\n    SOLR_GROUP=\"solr\" \\\n    SOLR_GID=\"8983\" \\\n    SOLR_CLOSER_URL=\"http://www.apache.org/dyn/closer.lua?filename=lucene/solr/$SOLR_VERSION/solr-$SOLR_VERSION.tgz&action=download\" \\\n    SOLR_DIST_URL=\"https://www.apache.org/dist/lucene/solr/$SOLR_VERSION/solr-$SOLR_VERSION.tgz\" \\\n    SOLR_ARCHIVE_URL=\"https://archive.apache.org/dist/lucene/solr/$SOLR_VERSION/solr-$SOLR_VERSION.tgz\" \\\n    PATH=\"/opt/solr/bin:/opt/docker-solr/scripts:$PATH\" \\\n    SOLR_INCLUDE=/etc/default/solr.in.sh \\\n    SOLR_HOME=/var/solr/data \\\n    SOLR_PID_DIR=/var/solr \\\n    SOLR_LOGS_DIR=/var/solr/logs \\\n    LOG4J_PROPS=/var/solr/log4j2.xml\n\nRUN set -ex; \\\n  groupadd -r --gid \"$SOLR_GID\" \"$SOLR_GROUP\"; \\\n  useradd -r --uid \"$SOLR_UID\" --gid \"$SOLR_GID\" \"$SOLR_USER\"\n\nRUN set -ex; \\\n  export GNUPGHOME=\"/tmp/gnupg_home\"; \\\n  mkdir -p \"$GNUPGHOME\"; \\\n  chmod 700 \"$GNUPGHOME\"; \\\n  echo \"disable-ipv6\" >> \"$GNUPGHOME/dirmngr.conf\"; \\\n  for key in $SOLR_KEYS; do \\\n    found=''; \\\n    for server in \\\n      ha.pool.sks-keyservers.net \\\n      hkp://keyserver.ubuntu.com:80 \\\n      hkp://p80.pool.sks-keyservers.net:80 \\\n      pgp.mit.edu \\\n    ; do \\\n      echo \"  trying $server for $key\"; \\\n      gpg --batch --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$key\" && found=yes && break; \\\n      gpg --batch --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$key\" && found=yes && break; \\\n    done; \\\n    test -z \"$found\" && echo >&2 \"error: failed to fetch $key from several disparate servers -- network issues?\" && exit 1; \\\n  done; \\\n  exit 0\n\nRUN set -ex; \\\n  export GNUPGHOME=\"/tmp/gnupg_home\"; \\\n  MAX_REDIRECTS=1; \\\n  if [ -n \"$SOLR_DOWNLOAD_URL\" ]; then \\\n    # If a custom URL is defined, we download from non-ASF mirror URL and allow more redirects and skip GPG step\n    # This takes effect only if the SOLR_DOWNLOAD_URL build-arg is specified, typically in downstream Dockerfiles\n    MAX_REDIRECTS=4; \\\n    SKIP_GPG_CHECK=true; \\\n  elif [ -n \"$SOLR_DOWNLOAD_SERVER\" ]; then \\\n    SOLR_DOWNLOAD_URL=\"$SOLR_DOWNLOAD_SERVER/$SOLR_VERSION/solr-$SOLR_VERSION.tgz\"; \\\n  fi; \\\n  for url in $SOLR_DOWNLOAD_URL $SOLR_CLOSER_URL $SOLR_DIST_URL $SOLR_ARCHIVE_URL; do \\\n    if [ -f \"/opt/solr-$SOLR_VERSION.tgz\" ]; then break; fi; \\\n    echo \"downloading $url\"; \\\n    if wget -t 10 --max-redirect $MAX_REDIRECTS --retry-connrefused -nv \"$url\" -O \"/opt/solr-$SOLR_VERSION.tgz\"; then break; else rm -f \"/opt/solr-$SOLR_VERSION.tgz\"; fi; \\\n  done; \\\n  if [ ! -f \"/opt/solr-$SOLR_VERSION.tgz\" ]; then echo \"failed all download attempts for solr-$SOLR_VERSION.tgz\"; exit 1; fi; \\\n  if [ -z \"$SKIP_GPG_CHECK\" ]; then \\\n    echo \"downloading $SOLR_ARCHIVE_URL.asc\"; \\\n    wget -nv \"$SOLR_ARCHIVE_URL.asc\" -O \"/opt/solr-$SOLR_VERSION.tgz.asc\"; \\\n    echo \"$SOLR_SHA512 */opt/solr-$SOLR_VERSION.tgz\" | sha512sum -c -; \\\n    (>&2 ls -l \"/opt/solr-$SOLR_VERSION.tgz\" \"/opt/solr-$SOLR_VERSION.tgz.asc\"); \\\n    gpg --batch --verify \"/opt/solr-$SOLR_VERSION.tgz.asc\" \"/opt/solr-$SOLR_VERSION.tgz\"; \\\n  else \\\n    echo \"Skipping GPG validation due to non-Apache build\"; \\\n  fi; \\\n  tar -C /opt --extract --file \"/opt/solr-$SOLR_VERSION.tgz\"; \\\n  (cd /opt; ln -s \"solr-$SOLR_VERSION\" solr); \\\n  rm \"/opt/solr-$SOLR_VERSION.tgz\"*; \\\n  rm -Rf /opt/solr/docs/ /opt/solr/dist/{solr-core-$SOLR_VERSION.jar,solr-solrj-$SOLR_VERSION.jar,solrj-lib,solr-test-framework-$SOLR_VERSION.jar,test-framework}; \\\n  mkdir -p /opt/solr/server/solr/lib /docker-entrypoint-initdb.d /opt/docker-solr; \\\n  chown -R 0:0 \"/opt/solr-$SOLR_VERSION\"; \\\n  find \"/opt/solr-$SOLR_VERSION\" -type d -print0 | xargs -0 chmod 0755; \\\n  find \"/opt/solr-$SOLR_VERSION\" -type f -print0 | xargs -0 chmod 0644; \\\n  chmod -R 0755 \"/opt/solr-$SOLR_VERSION/bin\" \"/opt/solr-$SOLR_VERSION/contrib/prometheus-exporter/bin/solr-exporter\" /opt/solr-$SOLR_VERSION/server/scripts/cloud-scripts; \\\n  cp /opt/solr/bin/solr.in.sh /etc/default/solr.in.sh; \\\n  mv /opt/solr/bin/solr.in.sh /opt/solr/bin/solr.in.sh.orig; \\\n  mv /opt/solr/bin/solr.in.cmd /opt/solr/bin/solr.in.cmd.orig; \\\n  chown root:0 /etc/default/solr.in.sh; \\\n  chmod 0664 /etc/default/solr.in.sh; \\\n  mkdir -p /var/solr/data /var/solr/logs; \\\n  (cd /opt/solr/server/solr; cp solr.xml zoo.cfg /var/solr/data/); \\\n  cp /opt/solr/server/resources/log4j2.xml /var/solr/log4j2.xml; \\\n  find /var/solr -type d -print0 | xargs -0 chmod 0770; \\\n  find /var/solr -type f -print0 | xargs -0 chmod 0660; \\\n  sed -i -e \"s/\\\"\\$(whoami)\\\" == \\\"root\\\"/\\$(id -u) == 0/\" /opt/solr/bin/solr; \\\n  sed -i -e 's/lsof -PniTCP:/lsof -t -PniTCP:/' /opt/solr/bin/solr; \\\n  chown -R \"0:0\" /opt/solr-$SOLR_VERSION /docker-entrypoint-initdb.d /opt/docker-solr; \\\n  chown -R \"$SOLR_USER:0\" /var/solr; \\\n  { command -v gpgconf; gpgconf --kill all || :; }; \\\n  rm -r \"$GNUPGHOME\"\n\nCOPY --chown=0:0 scripts /opt/docker-solr/scripts\n\nVOLUME /var/solr\nEXPOSE 8983\nWORKDIR /opt/solr\nUSER $SOLR_USER\n\nENTRYPOINT [\"docker-entrypoint.sh\"]\nCMD [\"solr-foreground\"]\n"
}