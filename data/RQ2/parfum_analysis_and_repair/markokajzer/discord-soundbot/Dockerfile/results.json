{
  "startTime": 1674254154439,
  "endTime": 1674254155619,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 67
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 67
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Base will install runtime dependencies and configure generics\nFROM node:14-slim as base\n\nLABEL maintainer=\"Marko Kajzer <markokajzer91@gmail.com>, Nico Stapelbroek <discord-soundbot@nstapelbroek.com>\"\n\nRUN mkdir /app && chown -R node:node /app\nWORKDIR /app\n\n# Add `tiny` init for signal forwarding\nRUN apt-get -qq update > /dev/null && \\\n    apt-get -qq --no-install-recommends -y install wget > /dev/null && \\\n    rm -rf /var/lib/apt/lists && rm -rf /var/lib/apt/lists/*;\nRUN wget -qO /tini https://github.com/krallin/tini/releases/download/v0.18.0/tini-$(dpkg --print-architecture) && \\\n    chmod +x /tini\n\n####################################################################################################\n\n# Builder will install system dependencies\nFROM base as builder\n\n# Install ffmpeg and other deps\nRUN apt-get -qq update > /dev/null && \\\n    apt-get -qq --no-install-recommends -y install python make g++ tar xz-utils > /dev/null && \\\n    rm -rf /var/lib/apt/lists && rm -rf /var/lib/apt/lists/*;\nRUN wget -qO /tmp/ffmpeg.tar.xz https://johnvansickle.com/ffmpeg/releases/ffmpeg-release-$(dpkg --print-architecture)-static.tar.xz && \\\n    tar -x -C /usr/local/bin --strip-components 1 -f /tmp/ffmpeg.tar.xz --wildcards '*/ffmpeg' && \\\n    rm /tmp/ffmpeg.tar.xz\n\n####################################################################################################\n\n# Build will compile ts to js\nFROM builder AS build\n\n# Copy files\nCOPY --chown=node:node . /app\n\n# Install compile dependencies\nRUN yarn install --frozen-lockfile --silent && \\\n    yarn cache clean --force --silent\n\n# Build project\nRUN yarn build\n\n####################################################################################################\n\n# release has the bare minimum to run the application\nFROM base as release\n\nCOPY --from=build --chown=node:node /usr/local/bin/ffmpeg /usr/local/bin/ffmpeg\nCOPY --from=build --chown=node:node /app .\n\nUSER node\nENV NODE_ENV=production\nENTRYPOINT [\"/tini\", \"--\"]\nCMD [\"yarn\", \"serve\"]\n"
}