{
  "startTime": 1674252064378,
  "endTime": 1674252065886,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 0,
        "columnEnd": 99
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 0,
        "columnEnd": 101
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 0,
        "columnEnd": 138
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 0,
        "columnEnd": 25
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 0,
        "columnEnd": 21
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 0,
        "columnEnd": 29
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 11,
        "columnEnd": 113
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 0,
        "columnEnd": 478
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:20.04\n\nENV GOPATH=\"/go\" PATH=\"/go/bin:/usr/local/go/bin:$PATH:/usr/local/node/bin/\" TZ=Asia/Shanghai\nRUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone &&\\\napt-get update &&\\\napt-get install -y --no-install-recommends telnet dnsutils mercurial build-essential curl git m4 texinfo libbz2-dev libcurl4-openssl-dev libexpat-dev libncurses-dev zlib1g-dev zip unzip locales xfonts-utils fontconfig ctags cmake libc6-dev pkg-config libelf1 wget iputils-ping software-properties-common ninja-build gettext libtool libtool-bin autotools-dev automake sudo python3-pip python3-setuptools ssh-client supervisor nginx tmux screen openssh-server ack-grep python3-dev &&\\\nmkdir /go && mkdir /var/run/sshd && chmod 0755 /var/run/sshd &&\\\nwget https://nodejs.org/dist/v14.15.4/node-v14.15.4-linux-x64.tar.xz && tar xf node-v14.15.4-linux-x64.tar.xz && mv node-v14.15.4-linux-x64 /usr/local/node && rm node-v14.15.4-linux-x64.tar.xz && \\\nwget https://github.com/krallin/tini/releases/download/v0.19.0/tini-amd64 -O /bin/tini && chmod +x /bin/tini &&\\\nwget https://github.com/neovim/neovim/archive/v0.4.4.tar.gz && tar xf v0.4.4.tar.gz && rm v0.4.4.tar.gz && cd neovim-0.4.4 && mkdir .deps && cd .deps && cmake ../third-party/ && make -j8 && cd .. && mkdir build && cd build && cmake .. && make -j8 && make install && cd / && rm -rf /neovim-0.4.4/ &&\\\ncurl -fsSL \"https://dl.google.com/go/go1.15.8.linux-amd64.tar.gz\" -o golang.tar.gz \\\n        && echo \"d3379c32a90fdf9382166f8f48034c459a8cc433730bc9476d39d9082c94583b  golang.tar.gz\" | sha256sum -c - \\\n        && tar -C /usr/local -xzf golang.tar.gz \\\n        && rm golang.tar.gz && \\\ncurl -fLo ~/.local/share/nvim/site/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim && \\\n curl -f -Ssl https://raw.githubusercontent.com/lijianying10/FixLinux/master/dotfile/.vimrc -o ~/.vimrc && \\\n curl -f -Ssl https://raw.githubusercontent.com/lijianying10/FixLinux/master/dotfile/.bashrc -o ~/.bashrc && \\\nmkdir -p ~/.config && mkdir -p /root/.vim/ && \\\nln -s /root/.vim /root/.config/nvim && \\\nln -s /root/.vimrc /root/.vim/init.vim && \\\n curl -f -Ssl https://raw.githubusercontent.com/lijianying10/FixLinux/master/dotfile/coc-settings.json -o /root/.config/nvim/coc-settings.json && \\\nmkdir -p ~/.vim/colors/ && \\\nnpm install --global yarn && \\\nnpm install -g neovim && \\\n pip3 install --no-cache-dir neovim --upgrade && nvim -i NONE -c PlugInstall! -c quitall && \\\nnvim +GoInstallBinaries +qall && \\\necho \"en_US.UTF-8 UTF-8\" > /etc/locale.gen && \\\nlocale-gen \"en_US.UTF-8\" && mkdir ~/.fonts/ && \\\ncd ~/.fonts/ && \\\ngit clone https://github.com/eugeii/consolas-powerline-vim.git && \\\ncd consolas-powerline-vim/ && \\\ncp *.ttf .. && \\\ncd .. && \\\nrm -rf consolas-powerline-vim/ && \\\nmkfontscale && \\\nmkfontdir && \\\nfc-cache -vf && npm cache clean --force; && rm -rf /var/lib/apt/lists/*;\n\nENTRYPOINT [\"/bin/tini\", \"--\"]\nCMD [\"/usr/bin/sleep\", \"200d\"]\n"
}