{
  "startTime": 1674255956328,
  "endTime": 1674255957520,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 55,
        "columnStart": 22,
        "columnEnd": 9
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:focal\nARG LLVM=9\n\n# This platform includes dependencies for building docs\nRUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y \\\n      clang-${LLVM} \\\n      cmake \\\n      g++ \\\n      gfortran \\\n      git \\\n      vim \\\n      lldb-${LLVM} \\\n      hdf5-tools \\\n      libmkl-full-dev \\\n      libboost-dev \\\n      libclang-${LLVM}-dev \\\n      libc++-${LLVM}-dev \\\n      libc++abi-${LLVM}-dev \\\n      libfftw3-dev \\\n      libnfft3-dev \\\n      libgfortran4 \\\n      libgmp-dev \\\n      libhdf5-dev \\\n      libopenmpi-dev \\\n      openmpi-bin \\\n      openmpi-common \\\n      openmpi-doc \\\n      python3-clang-${LLVM} \\\n      python3-dev \\\n      python3-mako \\\n      python3-numpy \\\n      python3-scipy \\\n      python3-matplotlib \\\n      python3-mpi4py \\\n      python3-pip \\\n      python3-sphinx \\\n      python3-nbsphinx \\\n      python3-notebook \\\n      libpython3-dev \\\n      git \\\n      curl \\\n      ca-certificates \\\n      openssl \\\n      wget \\\n      rsync \\\n      libomp-dev \\\n      nano \\\n      sudo \\\n      less \\\n      # Jupyter lab packages\n      texlive \\\n      dvipng \\\n      texlive-latex-extra \\\n      texlive-fonts-recommended \\\n      nodejs \\\n      npm \\\n      && \\\n      apt-get autoremove --purge -y && \\\n      apt-get autoclean -y && \\\n      rm -rf /var/cache/apt/* /var/lib/apt/lists/*\n\nENV PYTHON_VERSION=3.8 \\\n    CC=clang-${LLVM} CXX=clang++-${LLVM} CXXFLAGS=\"-stdlib=libc++\"\nRUN update-alternatives --install /usr/bin/clang clang /usr/bin/clang-${LLVM} 60 --slave /usr/bin/clang++ clang++ /usr/bin/clang++-${LLVM} --slave /usr/bin/clang-cpp clang-cpp /usr/bin/clang-cpp-${LLVM}\n\nRUN pip3 install --no-cache-dir \\\n    cython \\\n    numpy \\\n    scipy \\\n    matplotlib \\\n    decorator \\\n    jupyter \\\n    ipywidgets \\\n    pytest \\\n    pandas \\\n    shapely \\\n    monty \\\n    mpi4py \\\n    pymatgen \\\n    Jinja2 \\\n    Mako \\\n    tornado \\\n    zmq \\\n    notebook \\\n    tk \\\n    # Jupyter lab packages\n    jupyterlab \\\n    descartes \\\n    ipympl \\\n    RISE\n\n# jupyter lab extension\nRUN jupyter-labextension install @jupyter-widgets/jupyterlab-manager jupyter-matplotlib @jupyterlab/toc\nRUN jupyter-lab build\n\nENV OMP_NUM_THREADS=1\nENV MKL_NUM_THREADS=1\n\n# W90\nRUN cd / && git clone -b v2.1 https://github.com/wannier-developers/wannier90.git wannier90 \\\n&& cd /wannier90 \\\n# Using gfortran compiler - same as mpif90, mpif90 just links to it anyways\n&& cp ./config/make.inc.gfort ./make.inc \\\n# Make gfort use the intel libraries\n&& sed -i 's@^LIBS.*@LIBS = -Wl,--no-as-needed -lmkl_gf_lp64 -lmkl_sequential -lmkl_core -lpthread -lm -ldl@' ./make.inc \\\n&& make default lib\n\n# VASP for CSC calculations\nADD csc_vasp.tar.gz /vasp/\nCOPY makefile.vasp /vasp/makefile.include\n\nRUN  cd /vasp/ \\\n     && make std \\\n     && rm -rf src/ build/ arch/\n\nENV PATH=/vasp/bin:${PATH}\n\n\n# triqs\nRUN cd / && mkdir -p triqs && mkdir -p source\n\nENV CPATH=/triqs/include:${CPATH} \\\n    PATH=/triqs/bin:${PATH} \\\n    LIBRARY_PATH=/triqs/lib:${LIBRARY_PATH} \\\n    LD_LIBRARY_PATH=/triqs/lib:${LD_LIBRARY_PATH} \\\n    PYTHONPATH=/triqs/lib/python3.8/site-packages:${PYTHONPATH} \\\n    CMAKE_PREFIX_PATH=/triqs/share/cmake:${CMAKE_PREFIX_PATH} \\\n    TRIQS_ROOT=/triqs\n\nRUN cd /source && git clone -b unstable https://github.com/TRIQS/triqs triqs.src \\\n    && mkdir -p triqs.build && cd triqs.build \\\n    && cmake ../triqs.src -DCMAKE_INSTALL_PREFIX=/triqs -DMPIEXEC_PREFLAGS='--allow-run-as-root' -DBLAS_LIBRARIES=/lib/x86_64-linux-gnu/libmkl_rt.so \\\n    && make -j4 && ctest -j4 && make install\n\n# dft_tools\nRUN cd /source && git clone -b unstable https://github.com/TRIQS/dft_tools.git dft_tools.src \\\n    && mkdir -p dft_tools.build && cd dft_tools.build \\\n    && cmake ../dft_tools.src -DMPIEXEC_PREFLAGS='--allow-run-as-root' \\\n    && make -j4 && ctest -j4 && make install\n\n# cthyb\nRUN cd /source && git clone -b unstable https://github.com/TRIQS/cthyb.git cthyb.src \\\n    && mkdir -p cthyb.build && cd cthyb.build \\\n    && cmake ../cthyb.src -DMPIEXEC_PREFLAGS='--allow-run-as-root'  \\\n    && make -j4 && ctest -j4 && make install\n\n# maxent\nRUN cd /source && git clone -b 1.0.0 --depth 1 https://github.com/TRIQS/maxent.git maxent.src \\\n    && mkdir -p maxent.build && cd maxent.build \\\n    && cmake ../maxent.src -DCMAKE_INSTALL_PREFIX=/triqs \\\n    && make -j$(nproc) && make -j$(nproc) test && make install\n\n# download solidmft inside container\nRUN cd / && git clone https://github.com/materialstheory/soliDMFT.git\n\n# remove source\nRUN cd / && rm -rf source\n\n# create a useful work dir\nRUN cd / && mkdir work && cd work\nENV OMPI_MCA_btl_vader_single_copy_mechanism=none\n\n# make python3 defaul\nRUN `ln -s /usr/bin/python3 /usr/bin/python`\n\n# expose port for jupyter\nEXPOSE 8378\n\nCOPY entrypoint.sh /usr/local/bin/entrypoint.sh\nCOPY jupyter_start.sh /usr/local/bin/jupyter.sh\n\nRUN [\"chmod\", \"+x\", \"/usr/local/bin/entrypoint.sh\"]\nRUN [\"chmod\", \"+x\", \"/usr/local/bin/jupyter.sh\"]\n\n# change user and group id to match host machine if options are passed accordingly\nENTRYPOINT [\"/usr/local/bin/entrypoint.sh\"]\n\n"
}