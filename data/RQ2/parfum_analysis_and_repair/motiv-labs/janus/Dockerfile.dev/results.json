{
  "startTime": 1674215402964,
  "endTime": 1674215404117,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 12,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 10
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 34
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# run this from the root of janus\nFROM golang:1.14-alpine AS build-debug-common\n\nARG VERSION='0.0.1-docker'\n\nWORKDIR /janus\n\nCOPY . ./\n\n# Add tooling to install GCC\nRUN apk add --no-cache build-base\n# Add cqlsh to the image.\nRUN apk add --no-cache --update \\\n    bash \\\n    curl \\\n    py-pip\nRUN go get github.com/go-delve/delve/cmd/dlv\n\nRUN apk add --no-cache --update bash make git\nRUN export JANUS_BUILD_ONLY_DEFAULT=1 && \\\n    export VERSION=$VERSION && \\\n    make build\n\n# ---\n\nFROM alpine\n\nCOPY --from=build-debug-common /janus/dist/janus /\n\nRUN apk add --no-cache ca-certificates\nRUN mkdir -p /etc/janus/apis && \\\n    mkdir -p /etc/janus/auth\n\nRUN apk add --update curl && \\\n    rm -rf /var/cache/apk/*\n\nHEALTHCHECK --interval=5s --timeout=5s --retries=3 CMD curl -f http://localhost:8081/status || exit 1\n\nFROM build-debug-common as dev\nEXPOSE 8080 8081 8443 8444 40000\nCOPY entry-dev.sh /usr/local/bin\nCOPY cassandra/schema.sql /usr/local/bin\nRUN chmod 755 /usr/local/bin/entry-dev.sh\nENTRYPOINT [\"/usr/local/bin/entry-dev.sh\"]\n#ENTRYPOINT [\"/janus\", \"start\"]\n"
}