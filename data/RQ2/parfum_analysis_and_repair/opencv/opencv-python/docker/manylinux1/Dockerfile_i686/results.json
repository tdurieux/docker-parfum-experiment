{
  "startTime": 1674255361416,
  "endTime": 1674255363103,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 4,
        "columnEnd": 100
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 79
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 4,
        "columnEnd": 78
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 85,
        "lineEnd": 85,
        "columnStart": 4,
        "columnEnd": 66
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 99,
        "lineEnd": 99,
        "columnStart": 4,
        "columnEnd": 97
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 100,
        "lineEnd": 100,
        "columnStart": 4,
        "columnEnd": 99
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 101,
        "lineEnd": 101,
        "columnStart": 4,
        "columnEnd": 101
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 102,
        "lineEnd": 102,
        "columnStart": 4,
        "columnEnd": 91
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 4,
        "columnEnd": 78
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 80
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 4,
        "columnEnd": 66
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 73,
        "lineEnd": 73,
        "columnStart": 4,
        "columnEnd": 66
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 80,
        "lineEnd": 80,
        "columnStart": 4,
        "columnEnd": 150
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 89,
        "lineEnd": 89,
        "columnStart": 4,
        "columnEnd": 268
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 86,
        "lineEnd": 86,
        "columnStart": 4,
        "columnEnd": 35
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 30
      }
    }
  ],
  "repairedDockerfile": "FROM quay.io/pypa/manylinux1_i686:latest\n\nRUN curl -f -O -L https://download.qt.io/archive/qt/4.8/4.8.7/qt-everywhere-opensource-src-4.8.7.tar.gz && \\\n    tar -xf qt-everywhere-opensource-src-4.8.7.tar.gz && \\\n    cd qt-everywhere* && \\\n    #configure does a bootstrap make under the hood\n    #manylinux1 is too old to have `nproc`\n    export MAKEFLAGS=-j$(getconf _NPROCESSORS_ONLN) && \\\n    #OpenCV only links against QtCore, QtGui, QtTest\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" -prefix /opt/Qt4.8.7 -release -opensource -confirm-license -make && \\\n    make && \\\n    make install && \\\n    cd .. && \\\n    rm -rf qt-everywhere-opensource-src-4.8.7 && \\\n    rm qt-everywhere-opensource-src-4.8.7.tar.gz\n\nENV QTDIR /opt/Qt4.8.7\nENV PATH \"$QTDIR/bin:$PATH\"\n\nRUN curl -f -O -L https://cmake.org/files/v3.9/cmake-3.9.0.tar.gz && \\\n    tar -xf cmake-3.9.0.tar.gz && \\\n    cd cmake-3.9.0 && \\\n    #manylinux1 provides curl-devel equivalent and libcurl statically linked\n    # against the same newer OpenSSL as other source-built tools\n    # (1.0.2s as of this writing)\n    yum -y install zlib-devel && \\\n    #configure does a bootstrap make under the hood\n    export MAKEFLAGS=-j$(getconf _NPROCESSORS_ONLN) && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --system-curl && \\\n    make && \\\n    make install && \\\n    cd .. && \\\n    rm -rf cmake-3.9.0* && rm -rf /var/cache/yum\n\n# https://trac.ffmpeg.org/wiki/CompilationGuide/Centos#GettheDependencies\n# manylinux provides the toolchain and git; we provide cmake\nRUN yum install freetype-devel bzip2-devel zlib-devel -y && \\\n    mkdir ~/ffmpeg_sources && rm -rf /var/cache/yum\n\n# Newer openssl configure requires newer perl\nRUN curl -f -O -L https://www.cpan.org/src/5.0/perl-5.20.1.tar.gz && \\\n    tar -xf perl-5.20.1.tar.gz && \\\n    cd perl-5.20.1 && \\\n    ./Configure -des -Dprefix=\"$HOME/openssl_build\" && \\\n    #perl build scripts do much redundant work\n    # if running \"make install\" separately\n    make install -j$(getconf _NPROCESSORS_ONLN) && \\\n    cd .. && \\\n    rm -rf perl-5.20.1* && rm perl-5.20.1.tar.gz\n\nRUN cd ~/ffmpeg_sources && \\\n    curl -f -O -L https://github.com/openssl/openssl/archive/OpenSSL_1_1_1c.tar.gz && \\\n    tar -xf OpenSSL_1_1_1c.tar.gz && \\\n    cd openssl-OpenSSL_1_1_1c && \\\n    #in i686, ./config detects x64 in i686 container without linux32\n    # when run from \"docker build\"\n    PERL=\"$HOME/openssl_build/bin/perl\" linux32 ./config --prefix=\"$HOME/ffmpeg_build\" --openssldir=\"$HOME/ffmpeg_build\" shared zlib && \\\n    make -j$(getconf _NPROCESSORS_ONLN) && \\\n    #skip installing documentation\n    make install_sw && \\\n    rm -rf ~/openssl_build && rm OpenSSL_1_1_1c.tar.gz\n\nRUN cd ~/ffmpeg_sources && \\\n    curl -f -O -L https://www.nasm.us/pub/nasm/releasebuilds/2.14.01/nasm-2.14.01.tar.bz2 && \\\n    tar -xf nasm-2.14.01.tar.bz2 && cd nasm-2.14.01 && ./autogen.sh && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"$HOME/ffmpeg_build\" --bindir=\"$HOME/bin\" && \\\n    make -j$(getconf _NPROCESSORS_ONLN) && \\\n    make install && rm nasm-2.14.01.tar.bz2\n\nRUN cd ~/ffmpeg_sources && \\\n    curl -f -O -L https://www.tortall.net/projects/yasm/releases/yasm-1.3.0.tar.gz && \\\n    tar -xf yasm-1.3.0.tar.gz && \\\n    cd yasm-1.3.0 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"$HOME/ffmpeg_build\" --bindir=\"$HOME/bin\" && \\\n    make -j$(getconf _NPROCESSORS_ONLN) && \\\n    make install && rm yasm-1.3.0.tar.gz\n\nRUN cd ~/ffmpeg_sources && \\\n    git clone --depth 1 https://chromium.googlesource.com/webm/libvpx.git && \\\n    cd libvpx && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"$HOME/ffmpeg_build\" --disable-examples --disable-unit-tests --enable-vp9-highbitdepth --as=yasm --enable-pic --enable-shared && \\\n    make -j$(getconf _NPROCESSORS_ONLN) && \\\n    make install\n\nRUN cd ~/ffmpeg_sources && \\\n    curl -f -O -L https://ffmpeg.org/releases/ffmpeg-snapshot.tar.bz2 && \\\n    tar -xf ffmpeg-snapshot.tar.bz2 && \\\n    cd ffmpeg && \\\n    PATH=~/bin:$PATH && \\\n    PKG_CONFIG_PATH=\"$HOME/ffmpeg_build/lib/pkgconfig\" ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"$HOME/ffmpeg_build\" --extra-cflags=\"-I$HOME/ffmpeg_build/include\" --extra-ldflags=\"-L$HOME/ffmpeg_build/lib\" --enable-openssl --enable-libvpx --enable-shared --enable-pic --bindir=\"$HOME/bin\" && \\\n    make -j$(getconf _NPROCESSORS_ONLN) && \\\n    make install && \\\n    echo \"/root/ffmpeg_build/lib/\" >> /etc/ld.so.conf && \\\n    ldconfig && \\\n    rm -rf ~/ffmpeg_sources && rm ffmpeg-snapshot.tar.bz2\n\nENV PKG_CONFIG_PATH /usr/local/lib/pkgconfig:/root/ffmpeg_build/lib/pkgconfig\nENV LDFLAGS -L/root/ffmpeg_build/lib\n\nRUN curl -f -O https://raw.githubusercontent.com/torvalds/linux/v4.14/include/uapi/linux/videodev2.h && \\\n    curl -f -O https://raw.githubusercontent.com/torvalds/linux/v4.14/include/uapi/linux/v4l2-common.h && \\\n    curl -f -O https://raw.githubusercontent.com/torvalds/linux/v4.14/include/uapi/linux/v4l2-controls.h && \\\n    curl -f -O https://raw.githubusercontent.com/torvalds/linux/v4.14/include/linux/compiler.h && \\\n    mv videodev2.h v4l2-common.h v4l2-controls.h compiler.h /usr/include/linux\n\n#in i686, yum metadata ends up with slightly wrong timestamps\n#which inhibits its update\n#https://github.com/skvark/opencv-python/issues/148\nRUN yum clean all\n\nENV PATH \"$HOME/bin:$PATH\"\n"
}