{
  "startTime": 1674216414296,
  "endTime": 1674216416150,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 123
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 91
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 101
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 88
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 4,
        "columnEnd": 75
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 73,
        "lineEnd": 73,
        "columnStart": 4,
        "columnEnd": 116
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 80,
        "lineEnd": 80,
        "columnStart": 4,
        "columnEnd": 113
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 101
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 88
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 683
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 84,
        "lineEnd": 84,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 241
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 74,
        "lineEnd": 74,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 81,
        "lineEnd": 81,
        "columnStart": 4,
        "columnEnd": 41
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM quay.io/pypa/manylinux2014_i686:latest\n\nARG CCACHE_VERSION=3.7.9\nARG CMAKE_VERSION=3.17.0\nARG FFMPEG_VERSION=4.4.1\nARG NASM_VERSION=2.15.04\nARG OPENSSL_VERSION=1_1_1m\nARG QT_VERSION=5.15.0\nARG YASM_VERSION=1.3.0\n\nRUN yum install bzip2-devel curl-devel zlib-devel xcb-util-renderutil-devel xcb-util-devel xcb-util-image-devel xcb-util-keysyms-devel xcb-util-wm-devel mesa-libGL-devel libxkbcommon-devel libxkbcommon-x11-devel libXi-devel freetype-devel -y && rm -rf /var/cache/yum\n\nRUN curl -f -O -L https://download.qt.io/official_releases/qt/5.15/${QT_VERSION}/single/qt-everywhere-src-${QT_VERSION}.tar.xz && \\\n    tar -xf qt-everywhere-src-${QT_VERSION}.tar.xz && \\\n    cd qt-everywhere* && \\\n    export MAKEFLAGS=-j$(nproc) && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" -prefix /opt/Qt${QT_VERSION} -release -opensource -confirm-license -qtnamespace QtOpenCVPython -xcb -xcb-xlib -bundled-xcb-xinput -no-openssl -no-dbus -skip qt3d -skip qtactiveqt -skip qtcanvas3d -skip qtconnectivity -skip qtdatavis3d -skip qtdoc -skip qtgamepad -skip qtgraphicaleffects -skip qtimageformats -skip qtlocation -skip qtmultimedia -skip qtpurchasing -skip qtqa -skip qtremoteobjects -skip qtrepotools -skip qtscript -skip qtscxml -skip qtsensors -skip qtserialbus -skip qtserialport -skip qtspeech -skip qttranslations -skip qtwayland -skip qtwebchannel -skip qtwebengine -skip qtwebsockets -skip qtwebview -skip xmlpatterns -skip declarative -make libs && \\\n    make && \\\n    make install && \\\n    cd .. && \\\n    rm -rf qt-everywhere-src-${QT_VERSION} && \\\n    rm qt-everywhere-src-${QT_VERSION}.tar.xz\n\nENV QTDIR /opt/Qt${QT_VERSION}\nENV PATH \"$QTDIR/bin:$PATH\"\n\nRUN mkdir ~/ffmpeg_sources && \\\n    cd ~/ffmpeg_sources && \\\n    curl -f -O -L https://github.com/openssl/openssl/archive/OpenSSL_${OPENSSL_VERSION}.tar.gz && \\\n    tar -xf OpenSSL_${OPENSSL_VERSION}.tar.gz && \\\n    cd openssl-OpenSSL_${OPENSSL_VERSION} && \\\n    # in i686, ./config detects x64 in i686 container without linux32\n    # when run from \"docker build\"\n    linux32 ./config --prefix=\"$HOME/ffmpeg_build\" no-pinshared shared zlib && \\\n    make -j$(getconf _NPROCESSORS_ONLN) && \\\n    #skip installing documentation\n    make install_sw && \\\n    rm -rf ~/openssl_build && rm OpenSSL_${OPENSSL_VERSION}.tar.gz\n\nRUN cd ~/ffmpeg_sources && \\\n    curl -f -O -L https://www.nasm.us/pub/nasm/releasebuilds/${NASM_VERSION}/nasm-${NASM_VERSION}.tar.bz2 && \\\n    tar -xf nasm-${NASM_VERSION}.tar.bz2 && cd nasm-${NASM_VERSION} && ./autogen.sh && \\\n    linux32 ./configure && \\\n    make -j$(getconf _NPROCESSORS_ONLN) && \\\n    make install && rm nasm-${NASM_VERSION}.tar.bz2\n\nRUN cd ~/ffmpeg_sources && \\\n    curl -f -O -L https://www.tortall.net/projects/yasm/releases/yasm-${YASM_VERSION}.tar.gz && \\\n    tar -xf yasm-${YASM_VERSION}.tar.gz && \\\n    cd yasm-${YASM_VERSION} && \\\n    linux32 ./configure && \\\n    make -j$(getconf _NPROCESSORS_ONLN) && \\\n    make install && rm yasm-${YASM_VERSION}.tar.gz\n\nRUN cd ~/ffmpeg_sources && \\\n    git clone --depth 1 https://chromium.googlesource.com/webm/libvpx.git && \\\n    cd libvpx && \\\n    linux32 ./configure --prefix=\"$HOME/ffmpeg_build\" --disable-examples --disable-unit-tests --enable-vp9-highbitdepth --as=yasm --enable-pic --enable-shared && \\\n    make -j$(getconf _NPROCESSORS_ONLN) && \\\n    make install\n\nRUN cd ~/ffmpeg_sources && \\\n    curl -f -O -L https://ffmpeg.org/releases/ffmpeg-${FFMPEG_VERSION}.tar.bz2 && \\\n    tar -xf ffmpeg-${FFMPEG_VERSION}.tar.bz2 && \\\n    cd ffmpeg-${FFMPEG_VERSION} && \\\n    PATH=~/bin:$PATH && \\\n    PKG_CONFIG_PATH=\"$HOME/ffmpeg_build/lib/pkgconfig\" linux32 ./configure --prefix=\"$HOME/ffmpeg_build\" --extra-cflags=\"-I$HOME/ffmpeg_build/include\" --extra-ldflags=\"-L$HOME/ffmpeg_build/lib\" --enable-openssl --enable-libvpx --enable-shared --enable-pic --bindir=\"$HOME/bin\" && \\\n    make -j$(getconf _NPROCESSORS_ONLN) && \\\n    make install && \\\n    echo \"/root/ffmpeg_build/lib/\" >> /etc/ld.so.conf && \\\n    ldconfig && \\\n    rm -rf ~/ffmpeg_sources && rm ffmpeg-${FFMPEG_VERSION}.tar.bz2\n\nRUN curl -f -O -L https://github.com/ccache/ccache/releases/download/v${CCACHE_VERSION}/ccache-${CCACHE_VERSION}.tar.gz && \\\n    tar -xf ccache-${CCACHE_VERSION}.tar.gz && \\\n    cd ccache-${CCACHE_VERSION} && \\\n    linux32 ./configure && \\\n    make -j$(getconf _NPROCESSORS_ONLN) && \\\n    make install && rm ccache-${CCACHE_VERSION}.tar.gz\n\nRUN curl -f -O -L https://github.com/Kitware/CMake/releases/download/v${CMAKE_VERSION}/cmake-${CMAKE_VERSION}.tar.gz && \\\n    tar -xf cmake-${CMAKE_VERSION}.tar.gz && \\\n    cd cmake-${CMAKE_VERSION} && \\\n    export MAKEFLAGS=-j$(getconf _NPROCESSORS_ONLN) && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --system-curl && \\\n    make && \\\n    make install && \\\n    cd .. && \\\n    rm -rf cmake-${CMAKE_VERSION}* && rm cmake-${CMAKE_VERSION}.tar.gz\n\nENV PKG_CONFIG_PATH /usr/local/lib/pkgconfig:/root/ffmpeg_build/lib/pkgconfig\nENV LDFLAGS -L/root/ffmpeg_build/lib\n\n# in i686, yum metadata ends up with slightly wrong timestamps\n# which inhibits its update\n# https://github.com/skvark/opencv-python/issues/148\nRUN yum clean all\n\nENV PATH \"$HOME/bin:$PATH\"\n"
}