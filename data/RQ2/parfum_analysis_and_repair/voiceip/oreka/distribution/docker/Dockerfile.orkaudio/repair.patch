diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/voiceip/oreka/distribution/docker/Dockerfile.orkaudio b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/voiceip/oreka/distribution/docker/Dockerfile.orkaudio/repaired.Dockerfile
index cea3711..363561e 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/voiceip/oreka/distribution/docker/Dockerfile.orkaudio
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/voiceip/oreka/distribution/docker/Dockerfile.orkaudio/repaired.Dockerfile
@@ -1,24 +1,21 @@
-# escape=`
-# syntax=docker/dockerfile:experimental
-
 FROM ubuntu:focal as builder
 MAINTAINER Kinshuk B (hi@kinsh.uk)
 
 # Configure apt
 ENV DEBIAN_FRONTEND=noninteractive
 
-RUN apt-get update && apt-get install -y gnupg ca-certificates && rm -rf /var/lib/apt/lists/* 
+RUN apt-get update && apt-get install --no-install-recommends -y gnupg ca-certificates && rm -rf /var/lib/apt/lists/*
 
 RUN apt-get update && apt-get install -y build-essential libtool automake git tree rpm libboost-all-dev`
 	libpcap-dev libsndfile1-dev libapr1-dev libspeex-dev liblog4cxx-dev libace-dev libcap-dev `
 	libopus-dev libxerces-c3-dev libssl-dev cmake libdw-dev liblzma-dev libunwind-dev`
-	&& rm -rf /var/lib/apt/lists/* 
+	&& rm -rf /var/lib/apt/lists/*
 
 #silk
 RUN mkdir -p /opt/silk && chmod 777 /opt/silk`
 	&& git clone --depth 1 https://github.com/gaozehua/SILKCodec.git /opt/silk/SILKCodec `
 	&& cd /opt/silk/SILKCodec/SILK_SDK_SRC_FIX `
-	&& CFLAGS='-fPIC' make all 
+	&& CFLAGS='-fPIC' make all
 
 #opus
 RUN mkdir -p /opt/opus && chmod 777 /opt/opus`
@@ -64,7 +61,7 @@ MAINTAINER Kinshuk B (hi@kinsh.uk)
 
 ENV DEBIAN_FRONTEND=noninteractive
 RUN apt-get update && apt-get install -y libcap2 libpcap0.8 libsndfile1 libapr1 libspeex1 liblog4cxx10v5 libace-6.4.5 `
-	libopus0 libxerces-c3.2 libssl1.1 libdw1 libunwind8 && rm -rf /var/lib/apt/lists/* 
+	libopus0 libxerces-c3.2 libssl1.1 libdw1 libunwind8 && rm -rf /var/lib/apt/lists/*
 
 # Mount the image from "builder" stage at `/artifacts` during this run
 RUN --mount=type=bind,source=/,target=/artifacts,from=builder `