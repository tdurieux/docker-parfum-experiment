{
  "startTime": 1674246386387,
  "endTime": 1674246388262,
  "originalSmells": [
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 74,
        "lineEnd": 74,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 29,
        "columnStart": 18,
        "columnEnd": 33
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 85,
        "lineEnd": 85,
        "columnStart": 22,
        "columnEnd": 91
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 100,
        "lineEnd": 102,
        "columnStart": 22,
        "columnEnd": 24
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 122,
        "lineEnd": 125,
        "columnStart": 22,
        "columnEnd": 41
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 131,
        "lineEnd": 136,
        "columnStart": 22,
        "columnEnd": 44
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 146,
        "lineEnd": 148,
        "columnStart": 22,
        "columnEnd": 51
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:18.04\n\nENV DEBIAN_FRONTEND=noninteractive\n\nCOPY 01_nodoc /etc/dpkg/dpkg.cfg.d/01_nodoc\n\nENV ARCHIVE_UBUNTU_PREFIX=\"\"\nRUN sed --in-place --regexp-extended \"s/(\\/\\/)(archive\\.ubuntu)/\\1$ARCHIVE_UBUNTU_PREFIX\\2/\" /etc/apt/sources.list\n\n####################################################################################################################\n####################################################################################################################\n####################################################################################################################\n\n############################################ Install CUDA Driver Userspace #########################################\n\n# We need to fix the gcc version to 7.3 as the current kernel\n# for Ubuntu18.04 is compiled with this version.\nRUN apt update && apt install -y --no-install-recommends \\\n        cpp=4:7.3.0-3ubuntu2 \\\n        cpp-7=7.3.0-16ubuntu3 \\\n        g++=4:7.3.0-3ubuntu2 \\\n        g++-7=7.3.0-16ubuntu3 \\\n        gcc=4:7.3.0-3ubuntu2 \\\n        gcc-7=7.3.0-16ubuntu3 \\\n        gcc-7-base=7.3.0-16ubuntu3 \\\n        libasan4=7.3.0-16ubuntu3 \\\n        libcilkrts5=7.3.0-16ubuntu3 \\\n        libgcc-7-dev=7.3.0-16ubuntu3 \\\n        libstdc++-7-dev=7.3.0-16ubuntu3 \\\n        libubsan0=7.3.0-16ubuntu3 && \\\n      apt-mark hold cpp cpp-7 g++ g++-7 gcc gcc-7 gcc-7-base libasan4 \\\n        libcilkrts5 libgcc-7-dev libstdc++-7-dev libubsan0 && rm -rf /var/lib/apt/lists/*;\n\nRUN dpkg --add-architecture i386 && \\\n    apt-get update && apt-get install -y --no-install-recommends \\\n        apt-utils \\\n        build-essential \\\n        ca-certificates \\\n        curl \\\n        kmod \\\n        libc6:i386 \\\n        libelf-dev && \\\n    rm -rf /var/lib/apt/lists/*\n\nRUN curl -fsSL -o /usr/local/bin/donkey https://github.com/3XX0/donkey/releases/download/v1.1.0/donkey && \\\n    curl -fsSL -o /usr/local/bin/extract-vmlinux https://raw.githubusercontent.com/torvalds/linux/master/scripts/extract-vmlinux && \\\n    chmod +x /usr/local/bin/donkey /usr/local/bin/extract-vmlinux\n\nARG BASE_URL=https://us.download.nvidia.com/tesla\n# due to the dependency of tensorflow's pip package to the fixed CUDA Driver Version 410.104\nARG DRIVER_VERSION=410.104\nENV DRIVER_VERSION=$DRIVER_VERSION\n\n# Install the userspace components and copy the kernel module sources.\nRUN cd /tmp && \\\n    curl -fSsl -O $BASE_URL/$DRIVER_VERSION/NVIDIA-Linux-x86_64-$DRIVER_VERSION.run && \\\n    sh NVIDIA-Linux-x86_64-$DRIVER_VERSION.run -x && \\\n    cd NVIDIA-Linux-x86_64-$DRIVER_VERSION* && \\\n    ./nvidia-installer --silent \\\n                       --no-kernel-module \\\n                       --install-compat32-libs \\\n                       --no-nouveau-check \\\n                       --no-nvidia-modprobe \\\n                       --no-rpms \\\n                       --no-backup \\\n                       --no-check-for-alternate-installs \\\n                       --no-libglx-indirect \\\n                       --no-install-libglvnd \\\n                       --x-prefix=/tmp/null \\\n                       --x-module-path=/tmp/null \\\n                       --x-library-path=/tmp/null \\\n                       --x-sysconfig-path=/tmp/null \\\n                       --no-glvnd-egl-client \\\n                       --no-glvnd-glx-client && \\\n    mkdir -p /usr/src/nvidia-$DRIVER_VERSION && \\\n    mv LICENSE mkprecompiled kernel /usr/src/nvidia-$DRIVER_VERSION && \\\n    sed '9,${/^\\(kernel\\|LICENSE\\)/!d}' .manifest > /usr/src/nvidia-$DRIVER_VERSION/.manifest && \\\n    rm -rf /tmp/* && rm -rf /usr/src/nvidia-\n\n####################################################################################################################\n####################################################################################################################\n####################################################################################################################\n\n################################################### Install CUDA SDK ###############################################\n\nRUN apt-get update && apt-get install -y --no-install-recommends gnupg curl ca-certificates && \\\n    curl -fsSL https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/3bf863cc.pub | apt-key add - && \\\n    curl -fsSL https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/7fa2af80.pub | apt-key add - && \\\n    echo \"deb [arch=amd64] https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64 /\" >> /etc/apt/sources.list.d/cuda.list && \\\n    echo \"deb [arch=amd64] https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1804/x86_64 /\" >> /etc/apt/sources.list.d/nvidia-ml.list && \\\n    apt-get purge --autoremove -y curl && \\\n    apt-get -y clean && \\\n    apt-get -y autoremove && \\\n    ldconfig && rm -rf /var/lib/apt/lists/*;\n\nENV CUDA_VERSION 10.0.130\n\nENV CUDA_PKG_VERSION 10-0=$CUDA_VERSION-1\n\n# For libraries in the cuda-compat-* package: https://docs.nvidia.com/cuda/eula/index.html#attachment-a\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n        cuda-cudart-$CUDA_PKG_VERSION \\\n        cuda-compat-10-0 && \\\n    ln -s cuda-10.0 /usr/local/cuda && \\\n    apt-get -y clean && \\\n    apt-get -y autoremove && \\\n    ldconfig && rm -rf /var/lib/apt/lists/*;\n\n# Required for nvidia-docker v1\nRUN echo \"/usr/local/nvidia/lib\" >> /etc/ld.so.conf.d/nvidia.conf && \\\n    echo \"/usr/local/nvidia/lib64\" >> /etc/ld.so.conf.d/nvidia.conf\n\nENV PATH /usr/local/nvidia/bin:/usr/local/cuda/bin:${PATH}\nENV LD_LIBRARY_PATH /usr/local/nvidia/lib:/usr/local/nvidia/lib64\n\n# nvidia-container-runtime\nENV NVIDIA_VISIBLE_DEVICES all\nENV NVIDIA_DRIVER_CAPABILITIES compute,utility\nENV NVIDIA_REQUIRE_CUDA \"cuda>=10.0 brand=tesla,driver>=384,driver<385 brand=tesla,driver>=410,driver<411\"\n\nENV NCCL_VERSION 2.4.2\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n        cuda-libraries-$CUDA_PKG_VERSION \\\n        cuda-nvtx-$CUDA_PKG_VERSION \\\n        libnccl2=$NCCL_VERSION-1+cuda10.0 && \\\n    apt-mark hold libnccl2 && \\\n    apt-get -y clean && \\\n    apt-get -y autoremove && \\\n    ldconfig && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n        cuda-libraries-dev-$CUDA_PKG_VERSION \\\n        cuda-nvml-dev-$CUDA_PKG_VERSION \\\n        cuda-minimal-build-$CUDA_PKG_VERSION \\\n        cuda-command-line-tools-$CUDA_PKG_VERSION \\\n        libnccl-dev=$NCCL_VERSION-1+cuda10.0 && \\\n    apt-get -y clean && \\\n    apt-get -y autoremove && \\\n    ldconfig && rm -rf /var/lib/apt/lists/*;\n\nENV LIBRARY_PATH /usr/local/cuda/lib64/stubs\n\nENV CUDNN_VERSION 7.5.1.10\nLABEL com.nvidia.cudnn.version=\"${CUDNN_VERSION}\"\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n            libcudnn7=$CUDNN_VERSION-1+cuda10.0 \\\n            libcudnn7-dev=$CUDNN_VERSION-1+cuda10.0 && \\\n    apt-mark hold libcudnn7 && \\\n    apt-get -y clean && \\\n    apt-get -y autoremove && \\\n    ldconfig && rm -rf /var/lib/apt/lists/*;"
}