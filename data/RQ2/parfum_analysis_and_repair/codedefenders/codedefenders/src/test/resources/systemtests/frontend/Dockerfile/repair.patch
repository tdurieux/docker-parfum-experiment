diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/codedefenders/codedefenders/src/test/resources/systemtests/frontend/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/codedefenders/codedefenders/src/test/resources/systemtests/frontend/Dockerfile/repaired.Dockerfile
index e260aac..066fe69 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/codedefenders/codedefenders/src/test/resources/systemtests/frontend/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/codedefenders/codedefenders/src/test/resources/systemtests/frontend/Dockerfile/repaired.Dockerfile
@@ -71,19 +71,19 @@ ENV TOMCAT_ASC_URLS \
 	https://archive.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz.asc
 
 RUN set -eux; \
-	\
+
 	savedAptMark="$(apt-mark showmanual)"; \
 	apt-get update; \
-	\
+
 	apt-get install -y --no-install-recommends gnupg dirmngr; \
-	\
+
 	export GNUPGHOME="$(mktemp -d)"; \
 	for key in $GPG_KEYS; do \
-		gpg --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"; \
+		gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"; \
 	done; \
-	\
+
 	apt-get install -y --no-install-recommends wget ca-certificates; \
-	\
+
 	success=; \
 	for url in $TOMCAT_TGZ_URLS; do \
 		if wget -O tomcat.tar.gz "$url"; then \
@@ -92,9 +92,9 @@ RUN set -eux; \
 		fi; \
 	done; \
 	[ -n "$success" ]; \
-	\
+
 	echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum -c -; \
-	\
+
 	success=; \
 	for url in $TOMCAT_ASC_URLS; do \
 		if wget -O tomcat.tar.gz.asc "$url"; then \
@@ -103,13 +103,13 @@ RUN set -eux; \
 		fi; \
 	done; \
 	[ -n "$success" ]; \
-	\
+
 	gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz; \
 	tar -xvf tomcat.tar.gz --strip-components=1; \
 	rm bin/*.bat; \
 	rm tomcat.tar.gz*; \
 	rm -rf "$GNUPGHOME"; \
-	\
+
 	nativeBuildDir="$(mktemp -d)"; \
 	tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1; \
 	apt-get install -y --no-install-recommends \
@@ -136,13 +136,13 @@ RUN set -eux; \
 	); \
 	rm -rf "$nativeBuildDir"; \
 	rm bin/tomcat-native.tar.gz; \
-	\
+
 # reset apt-mark's "manual" list so that "purge --auto-remove" will remove all build dependencies
 	apt-mark auto '.*' > /dev/null; \
 	[ -z "$savedAptMark" ] || apt-mark manual $savedAptMark; \
 	apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \
 	rm -rf /var/lib/apt/lists/*; \
-	\
+
 # sh removes env vars it doesn't support (ones with periods)
 # https://github.com/docker-library/tomcat/issues/77
 	find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +
@@ -166,8 +166,8 @@ RUN rm -rf /usr/local/tomcat/webapps/examples
 RUN rm -rf /usr/local/tomcat/webapps/host-manager
 
 # Install ANT
-RUN apt-get update && apt-get install -y \
-	ant
+RUN apt-get update && apt-get install --no-install-recommends -y \
+	ant && rm -rf /var/lib/apt/lists/*;
 
 # Setup the directory structure for CD by copying it from the host
 COPY codedefenders/ /codedefenders/