{
  "startTime": 1674250409457,
  "endTime": 1674250410656,
  "originalSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 57
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 57
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 57
      }
    }
  ],
  "repairedDockerfile": "# Fotomat as a Docker image meant to be used directly on Docker-based\n# production systems.\n#\n# Automatically built by Docker Hub and available as dienet/fotomat:latest.\n# To rebuild locally: docker build -t dienet/fotomat:latest .\n#\n# To run serving local images from /path/to/images:\n#   docker run -v /path/to/images:/images dienet/fotomat:latest -listen=:3520 -local_image_directory=/images\n#\n# To run as an HTTP image proxy, trusting the host header:\n#   docker run dienet/fotomat:latest -listen=:3520\n\nFROM debian:buster as builder\n\nENV DEBIAN_FRONTEND=noninteractive\n\nRUN apt-get update && \\\n    apt-get dist-upgrade -y -q --no-install-recommends\n\n# Apt-get our dependencies, download, build, and install VIPS, and download and install Go.\nADD preinstall.sh /app/src/github.com/die-net/fotomat/\nRUN VIPS_OPTIONS=\"--prefix=/usr\" \\\n    /app/src/github.com/die-net/fotomat/preinstall.sh\n\n# Install busybox.\nRUN apt-get install -y -q --no-install-recommends busybox && rm -rf /var/lib/apt/lists/*;\n\n# Add the rest of our code.\nCOPY . /app/src/github.com/die-net/fotomat/\n\nWORKDIR /app/src/github.com/die-net/fotomat/\n\n# Build and install Fotomat\nRUN GOPATH=/app /usr/local/go/bin/go install -ldflags=\"-s -w\" ./...\n\n# Test fotomat\nRUN GOPATH=/app /usr/local/go/bin/go test -v ./...\n\n# Set up an /export/ directory with the very basics of a system\nRUN mkdir -m 0755 -p /export/etc /export/home /export/bin /export/usr/bin /export/sbin /export/usr/sbin && \\\n    mkdir -m 0700 -p /export/root /export/proc /export/dev && \\\n    mkdir -p -m 1777 /export/tmp\nRUN useradd -r fotomat\nRUN cp -a --parents \\\n    /etc/nsswitch.conf \\\n    /etc/passwd \\\n    /etc/group \\\n    /etc/shadow \\\n    /etc/localtime \\\n    /usr/share/zoneinfo/UTC \\\n    /etc/ssl/certs/ca-certificates.crt \\\n    /export/\n\n# Copy busybox, Fotomat, DNS libraries, and all of their dependencies into /export.\nRUN for file in \\\n        /bin/busybox \\\n        /app/bin/fotomat \\\n        /lib/x86_64-linux-gnu/libnss_files.so.2 \\\n        /lib/x86_64-linux-gnu/libnss_dns.so.2 \\\n        /lib/x86_64-linux-gnu/libnss_compat.so.2; do \\\n        echo $file; \\\n        ldd $file; \\\n    done | \\\n    awk '($2==\"=>\"){print $3};(substr($1,1,1)==\"/\"){print $1}' | \\\n    sort -u | \\\n    xargs -I{} install -D {} /export{}\n\n\nFROM scratch\n\nENTRYPOINT [\"/app/bin/fotomat\"]\n\nCMD [\"-listen=:3520\"]\n\nEXPOSE 3520\n\nCOPY --from=builder /export/ /\n\nVOLUME /tmp\n\n# Expand busybox\nRUN [\"/bin/busybox\", \"--install\"]\n\nUSER fotomat\n\n# Make sure the app runs at all.\nRUN [\"/app/bin/fotomat\", \"--version\"]\n"
}