{
  "startTime": 1674252603949,
  "endTime": 1674252605093,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 109
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 20,
        "columnEnd": 43
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 41
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM tensorflow/tensorflow:latest-gpu-jupyter\n\n################################################################################\n# Setup the environment\n################################################################################\n# Install common tools\nRUN apt-get update -qyy && \\\n    apt-get install --no-install-recommends -qyy \\\n    build-essential \\\n    binutils-dev \\\n    libunwind-dev \\\n    libblocksruntime-dev \\\n    liblzma-dev \\\n    libnuma-dev \\\n    wget git curl tmux htop nano vim make && rm -rf /var/lib/apt/lists/*;\n\n# Install rust\nRUN curl https://sh.rustup.rs -sSf | sh -s -- -y\n# setup the environment variables\nENV PATH /root/.cargo/bin:$PATH\n# Install rust nightly (this is needed by maturin)\nRUN rustup default nightly\n# Update rust to the latest version\nRUN rustup update\n# Install maturin to build the python bindings for rust\nRUN cargo install maturin\n\n# Update pip otherwise it will says that the ensmallen's wheels is not supported\n# on this platform\nRUN pip install --no-cache-dir --upgrade pip\n\n################################################################################\n# Install ensmallen\n################################################################################\n# (Future) Install form pypi\n#RUN pip install ensmallen\n# Clone ensmallen\nRUN cd / && git clone https://github.com/AnacletoLAB/ensmallen.git\n# Checkout the latest branch\nRUN cd /ensmallen && git checkout transitivity\n# Update all the packages in all the crates\nRUN cd /ensmallen && make update\n# Generate the bindings\nRUN cd /ensmallen && make bindgen\n# Build the bindings\nRUN cd /ensmallen/bindings/python && maturin build --release --no-sdist\n# Install the bindings\nRUN pip install --no-cache-dir /ensmallen/bindings/python/target/wheels/ensmallen-0.6.0-cp36-cp36m-manylinux_2_24_x86_64.whl\n\n################################################################################\n# Install embiggen\n################################################################################\n# (Future) Install from pypi\n# RUN pip install embiggen\n# Clone ensmallen\nRUN cd / && git clone https://github.com/monarch-initiative/embiggen.git\n# Checkout the latest branch\nRUN cd /embiggen && git checkout graph_convolutional_network\n# Install\nRUN cd /embiggen && pip install --no-cache-dir . -U --user\n\n# not needed but we use it often in the experiments scripts\nRUN pip install --no-cache-dir silence_tensorflow"
}