{
  "startTime": 1674253618011,
  "endTime": 1674253619656,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 78
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 4,
        "columnEnd": 144
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 7,
        "columnEnd": 42
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 83,
        "lineEnd": 83,
        "columnStart": 4,
        "columnEnd": 27
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# An Ubuntu environment configured for building the phd repo.\n# TODO(github.com/ChrisCummins/phd/issues/63): Clone phd repo, run configure,\n# run bootstrap, remove phd clone.\nFROM chriscummins/phd_base_tf_cpu:2020.01.08\nLABEL maintainer=\"Chris Cummins <chrisc.101@gmail.com>\"\n\n# Switch back to root user to do the installation admin.\nUSER root\n\n# Disable post-install interactive configuration.\n# For example, the package tzdata runs a post-installation prompt to select the\n# timezone.\nENV DEBIAN_FRONTEND noninteractive\n\n# Install packages.\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n  # Packages required to build code.\n  unzip \\\n  g++ \\\n  zlib1g-dev \\\n  ocl-icd-opencl-dev \\\n  python \\\n  apt-transport-https \\\n  ca-certificates gnupg-agent \\\n  software-properties-common \\\n  texlive-full \\\n  patch \\\n  zip \\\n  m4 \\\n  # Packages required to build matplotlib.\n  pkg-config \\\n  libfreetype6-dev \\\n  libpng-dev \\\n  # SSH is required by bazel for pulling in dependencies.\n  openssh-client \\\n  # Docker\n  docker.io \\\n  # Tidy up.\n  && rm -rf /var/lib/apt/lists/*\n\n# Install golang.\nRUN apt update \\\n    && apt-get install -y --no-install-recommends curl \\\n    && rm -rf /var/lib/apt/lists/*\nRUN curl -f https://dl.google.com/go/go1.12.6.linux-amd64.tar.gz > /tmp/go.tar.gz \\\n    && tar -C /usr/local -xzf /tmp/go.tar.gz \\\n    && rm /tmp/go.tar.gz\nENV GOPATH /home/docker/go\nENV PATH /usr/local/go/bin:/home/docker/go/bin:$PATH\n\n# Install nodejs.\nRUN curl -f -sL https://deb.nodesource.com/setup_10.x | bash - \\\n    && apt-get update \\\n    && apt-get install -y --no-install-recommends nodejs && npm -v \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Install linters.\nRUN apt update \\\n    && apt-get install -y --no-install-recommends clang-format wget \\\n    && go get github.com/bazelbuild/buildtools/buildifier \\\n    && go get github.com/uber/prototool/cmd/prototool \\\n    && python -m pip install sqlparse \\\n    && npm install -g js-beautify jsonlint \\\n    && wget https://github.com/mvdan/sh/releases/download/v2.6.4/shfmt_v2.6.4_linux_386 -O /usr/local/bin/shfmt \\\n    && chmod +x /usr/local/bin/shfmt \\\n    && apt-get remove -y wget \\\n    && rm -rf /var/lib/apt/lists/* && npm cache clean --force;\n\n# Install bazel.\nENV BAZEL_VERSION 2.0.0\nRUN curl -f -L -o /tmp/bazel.sh https://github.com/bazelbuild/bazel/releases/download/$BAZEL_VERSION/bazel-$BAZEL_VERSION-installer-linux-x86_64.sh && \\\n    bash /tmp/bazel.sh && rm /tmp/bazel.sh\n\n# For compiling arduino code.\n# We need to use python2 because of the time of writing:\n#   PlatformIO Core v3.6.7 does not run under Python version 3.6.8 (default,\n#       Mar  4 2019, 23:39:18)\n#   [GCC 6.3.0 20170516].\n#   Minimum supported version is 2.7, please upgrade Python.\n#   Python 3 is not yet supported.\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends python-pip python-setuptools \\\n    && rm -rf /var/lib/apt/lists/*\nRUN pip2 install --no-cache-dir platformio\n\n# Install a text editor.\nRUN apt-get update && apt-get install -y --no-install-recommends vim \\\n    && rm -rf /var/lib/apt/lists/*\n\nRUN mkdir -pv /phd && chown docker:docker -R /phd\nWORKDIR /phd\nUSER docker\n\n# Needed for compatability with broken python 3 support.\nENV BAZEL_PYTHON /phd/tools/py3_wrapper.sh\n\nENTRYPOINT [\"/bin/bash\"]\n"
}