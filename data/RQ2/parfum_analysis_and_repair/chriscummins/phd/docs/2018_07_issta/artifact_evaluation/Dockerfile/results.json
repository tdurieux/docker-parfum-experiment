{
  "startTime": 1674255071848,
  "endTime": 1674255072899,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 5,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 4,
        "columnEnd": 50
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 5,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 4,
        "columnEnd": 50
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:16.04\nMAINTAINER Chris Cummins <chrisc.101@gmail.com>\n\n# Install essential packages.\nRUN apt-get update\nRUN apt-get install --no-install-recommends -y \\\n    alien \\\n    apt-utils \\\n    clinfo \\\n    curl \\\n    git \\\n    python \\\n    software-properties-common \\\n    sudo \\\n    tar \\\n    unzip \\\n    xz-utils && rm -rf /var/lib/apt/lists/*;\n\n# Install OpenCL support for Intel CPU.\n# Based on Paul Kienzle's work in: https://github.com/pkienzle/opencl_docker\nARG INTEL_DRIVER=opencl_runtime_16.1.1_x64_ubuntu_6.4.0.25.tgz\nARG INTEL_DRIVER_URL=http://registrationcenter-download.intel.com/akdlm/irc_nas/9019\nRUN mkdir -p /tmp/opencl-driver-intel\nWORKDIR /tmp/opencl-driver-intel\nRUN echo INTEL_DRIVER is $INTEL_DRIVER; \\\n    curl -f -O $INTEL_DRIVER_URL/$INTEL_DRIVER; \\\n    if echo $INTEL_DRIVER | grep -q \"[.]zip$\"; then \\\n        unzip $INTEL_DRIVER; \\\n        mkdir fakeroot; \\\n        for f in intel-opencl-*.tar.xz; do tar -C fakeroot -Jxvf $f; done; \\\n        cp -R fakeroot/* /; \\\n        ldconfig; \\\n    else \\\n        tar -xzf $INTEL_DRIVER; \\\n        for i in $(basename $INTEL_DRIVER .tgz)/rpm/*.rpm; do alien --to-deb $i; done; \\\n        dpkg -i *.deb; \\\n        rm -rf $INTEL_DRIVER $(basename $INTEL_DRIVER .tgz) *.deb; \\\n        mkdir -p /etc/OpenCL/vendors; \\\n        echo /opt/intel/*/lib64/libintelocl.so > /etc/OpenCL/vendors/intel.icd; \\\n    fi; \\\n    rm -rf /tmp/opencl-driver-intel;\n\n# Set and configure the locale. This is necessary for CLgen, which uses en_GB,\n# and Linuxbrew, which uses en_US.\nRUN apt-get install -y --no-install-recommends language-pack-en && rm -rf /var/lib/apt/lists/*;\nRUN locale-gen --purge en_GB.UTF-8\n\n# Setup the environment.\nENV HOME /root\nENV USER docker\nENV PHD /root/phd\n\n# Git commit IDs of our dependencies.\nENV PHD_VERSION fb0fcf59d3c6c8451ba44b1bb2b2db41ddaf9af7\nENV CLGEN_VERSION 1c126b5bb9ace265fe9bc25f8beef6702a169fec\n\n# Clone the source code for this project.\nRUN git clone https://github.com/ChrisCummins/phd.git $PHD\nRUN git -C $PHD reset --hard $PHD_VERSION\nRUN rm -rf $PHD/deeplearning/clgen\nRUN git clone https://github.com/ChrisCummins/clgen.git $PHD/deeplearning/clgen\nRUN git -C $PHD/deeplearning/clgen reset --hard $CLGEN_VERSION\n\n# Install OpenCL 1.2 headers, required by pyopencl.\nENV OPENCL_HEADERS_VERSION e986688daf750633898dfd3994e14a9e618f2aa5\nRUN git clone https://github.com/KhronosGroup/OpenCL-Headers.git /tmp/opencl-headers\nRUN git -C /tmp/opencl-headers reset --hard $OPENCL_HEADERS_VERSION\nRUN mv /tmp/opencl-headers/opencl12/CL /usr/include/CL\n\n# Link libOpenCL.so into /usr/lib64 so that pyopencl can find it.\nRUN ln -s /opt/intel/opencl-*/lib64/libOpenCL.so /usr/lib/libOpenCL.so\n\n# Build the project.\nRUN $PHD/tools/bootstrap.sh\n\n# Install and configure my preferred shell.\nRUN apt-get install -y --no-install-recommends zsh && rm -rf /var/lib/apt/lists/*;\nENV SHELL zsh\nRUN /root/phd/system/dotfiles/run -v Zsh\n\n# Install and configure my preferred editor.\nENV /root/phd/system/dotfiles/run -v Vim\n\n# Add out newly-minted python3 to the PATH.\nENV PATH /home/linuxbrew/.linuxbrew/bin:$PATH\n\n# Build the artifact.\nRUN cd $PHD/docs/2018_07_issta/artifact_evaluation && ./install.sh\n\n# TODO(cec): See if we can still eval artifact after this.\n# # Clean up.\nRUN sudo -H -u linuxbrew bash -c \\\n    '/home/linuxbrew/.linuxbrew/bin/brew remove buildifier llvm'\nRUN python3 -m pip uninstall -y virtualenv\nRUN apt-get remove -y openjdk-8-jdk bazel texlive-full build-essential\nRUN apt-get autoremove -y\nRUN apt-get clean\nRUN find / -name '.git' -type d -exec rm -rfv {} \\; || true\nRUN rm -rf \\\n    $HOME/.cache \\\n    $PHD/config \\\n    $PHD/datasets \\\n    $PHD/docs/2015_08_msc_thesis \\\n    $PHD/docs/2015_08_msc_thesis.pdf \\\n    $PHD/docs/2015_09_progression_review \\\n    $PHD/docs/2015_09_progression_review.pdf \\\n    $PHD/docs/2016_01_adapt \\\n    $PHD/docs/2016_01_adapt.pdf \\\n    $PHD/docs/2016_01_hlpgpu \\\n    $PHD/docs/2016_01_hlpgpu.pdf \\\n    $PHD/docs/2016_06_pldi \\\n    $PHD/docs/2016_06_pldi.pdf \\\n    $PHD/docs/2016_07_acaces \\\n    $PHD/docs/2016_07_acaces.pdf \\\n    $PHD/docs/2016_07_pact \\\n    $PHD/docs/2016_11_first_year_review \\\n    $PHD/docs/2016_11_first_year_review.pdf \\\n    $PHD/docs/2016_12_wip_taco \\\n    $PHD/docs/2017_02_cgo \\\n    $PHD/docs/2017_02_cgo.pdf \\\n    $PHD/docs/2017_09_pact \\\n    $PHD/docs/2017_09_pact.pdf \\\n    $PHD/experimental \\\n    $PHD/http \\\n    $PHD/learn \\\n    $PHD/talks \\\n    $PHD/third_party \\\n    $PHD/util \\\n    /home/linuxbrew/.cache \\\n    /tmp \\\n    /var/lib/apt/lists \\\n    /var/tmp\nRUN mkdir $HOME/.cache /var/tmp /var/lib/apt/lists\n\nWORKDIR $PHD/docs/2018_07_issta/artifact_evaluation\nCMD [clinfo]\n"
}