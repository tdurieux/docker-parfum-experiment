{
  "startTime": 1674246543862,
  "endTime": 1674246544982,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 45
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# クライアントはプラットフォーム依存のコードを含まないため、BUILDPLATFORMでビルドした結果を\n# 全てのTARGETPLATFORMで再利用できる。これによりビルド時間を短縮できる。\nFROM --platform=$BUILDPLATFORM node:16-buster AS client-builder\nCOPY client/package*.json /app/client/\nWORKDIR /app/client\n# どこで時間が掛かっているのか確認できるようにログレベルを変更。\nRUN npm install --no-save --loglevel=info && npm cache clean --force;\n# clientフォルダー外にビルドに必要なファイルが存在するため、全てコピーする。\nCOPY . /app/\nRUN npm run build --loglevel=info\n\n# サーバーはsqlite3のようなプラットフォーム依存のネイティブ・アドオンを含んでいる。そのため、各\n# TARGETPLATFORMごとにソースをビルドしなければならない。BUILDPLATFORM以外のTARGETPLATFORMでは、QEMU\n# 上でnpmコマンドを実行することになるため、どうしても時間が掛かる。\n#\n# `npm install`時にネイティブ・アドオンをクロスビルドできればビルド時間を短縮できるが、現時点では明\n# 確な手順は存在しない。https://github.com/mapbox/node-pre-gyp/issues/348を見ればそれが分かる。\n#\n# `npm run build-server`はプラットフォーム依存処理を含まないため、これをBUILDPLATFORMで実行すること\n# でビルド時間をさらに短縮可能だが、手順が煩雑で面倒なので現時点では行っていない。\nFROM node:16-buster AS server-builder\nENV DEBIAN_FRONTEND=noninteractive\nRUN apt-get update && apt-get install --no-install-recommends -y build-essential python && rm -rf /var/lib/apt/lists/*;\nWORKDIR /app\nCOPY package*.json /app/\nENV DOCKER=\"YES\"\nRUN npm install --no-save --loglevel=info && npm cache clean --force;\n# 最終イメージのサイズ削減のため、すべてコピーした後でclientフォルダーを削除。clientフォルダー以外\n# をコピーする方法は，ファイルが追加された場合に変更する必要があるため採用しない。\nCOPY . .\nRUN rm -rf client\nRUN npm run build-server --loglevel=info\n\nFROM node:16-buster-slim\nLABEL maintainer=\"l3tnun\"\nCOPY --from=server-builder /app /app/\nCOPY --from=client-builder /app/client /app/client/\nEXPOSE 8888\nWORKDIR /app\nENTRYPOINT [\"npm\"]\nCMD [\"start\"]\n"
}