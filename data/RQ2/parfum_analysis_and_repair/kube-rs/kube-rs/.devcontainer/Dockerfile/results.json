{
  "startTime": 1674254810691,
  "endTime": 1674254811422,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 8
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 4,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 8
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 8
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 4,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 8
      }
    }
  ],
  "repairedDockerfile": "FROM docker.io/rust:1.60.0-bullseye\n\nENV DEBIAN_FRONTEND=noninteractive\nRUN apt update && apt upgrade -y\nRUN apt install --no-install-recommends -y \\\n    clang \\\n    cmake \\\n    jq \\\n    lldb \\\n    lsb-release \\\n    sudo \\\n    time && rm -rf /var/lib/apt/lists/*;\n\nARG USER=code\nARG USER_UID=1000\nARG USER_GID=1000\nRUN groupadd --gid=$USER_GID $USER \\\n    && useradd --uid=$USER_UID --gid=$USER_GID -m $USER \\\n    && echo \"$USER ALL=(root) NOPASSWD:ALL\" >/etc/sudoers.d/$USER \\\n    && chmod 0440 /etc/sudoers.d/$USER\n\nCOPY scurl /usr/local/bin/scurl\n\n# Install a Docker client that uses the parent host's Docker daemon\nARG USE_MOBY=false\nENV DOCKER_BUILDKIT=1\nRUN scurl https://raw.githubusercontent.com/microsoft/vscode-dev-containers/main/script-library/docker-debian.sh \\\n    | bash -s -- true /var/run/docker-host.sock /var/run/docker.sock \"${USER}\" \"${USE_MOBY}\" latest\n\nUSER $USER\nENV HOME=/home/$USER\nRUN mkdir -p $HOME/bin\nENV PATH=$HOME/bin:$PATH\n\n# Install `kubectl`\nRUN export K8S_VERSION=\"$(scurl https://dl.k8s.io/release/stable.txt)\" \\\n    && scurl -o $HOME/bin/kubectl \"https://dl.k8s.io/release/${K8S_VERSION}/bin/linux/amd64/kubectl\" \\\n    && chmod 755 $HOME/bin/kubectl\n\n# Install `k3d`\nRUN scurl https://raw.githubusercontent.com/rancher/k3d/main/install.sh \\\n    | USE_SUDO=false K3D_INSTALL_DIR=$HOME/bin bash\n\nRUN rustup component add clippy rls rust-src rustfmt\n\n# Install cargo-deny\nARG CARGO_DENY_VERSION=0.11.4\nRUN scurl \"https://github.com/EmbarkStudios/cargo-deny/releases/download/${CARGO_DENY_VERSION}/cargo-deny-${CARGO_DENY_VERSION}-x86_64-unknown-linux-musl.tar.gz\" \\\n    | tar zvxf - --strip-components=1 -C $HOME/bin \"cargo-deny-${CARGO_DENY_VERSION}-x86_64-unknown-linux-musl/cargo-deny\"\n\n# Install cargo-tarpaulin\nARG CARGO_TARPAULIN_VERSION=0.20.0\nRUN scurl \"https://github.com/xd009642/tarpaulin/releases/download/${CARGO_TARPAULIN_VERSION}/cargo-tarpaulin-${CARGO_TARPAULIN_VERSION}-travis.tar.gz\" \\\n    | tar xzvf - -C $HOME/bin\n\nARG JUST_VERSION=1.1.3\nRUN scurl https://github.com/casey/just/releases/download/${JUST_VERSION}/just-${JUST_VERSION}-x86_64-unknown-linux-musl.tar.gz \\\n    | tar xzvf - -C $HOME/bin\n\nENTRYPOINT [\"/usr/local/share/docker-init.sh\"]\nCMD [\"sleep\", \"infinity\"]\n"
}