{
  "startTime": 1674252237858,
  "endTime": 1674252238527,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 7,
        "columnEnd": 56
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "gemUpdateSystemRmRootGem",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "gemUpdateNoDocument",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 23
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG RUBY_VERSION=3.0.2\n\nFROM ruby:$RUBY_VERSION-slim\n\nARG NODE_VERSION=14\nARG BUNDLER_VERSION=2.2.23\n\nENV RAILS_ENV=production\n\n## install main deps\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n    curl \\\n    && apt-get clean \\\n    && rm -rf /tmp/* /var/lib/apt/lists/*\n\nRUN curl -f https://deb.nodesource.com/setup_current.x | bash - \\\n    && curl -f -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \\\n    && echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list\n\nRUN curl -f -sS https://deb.nodesource.com/gpgkey/nodesource.gpg.key | apt-key add - \\\n    && echo \"deb https://deb.nodesource.com/node_${NODE_VERSION}.x focal main\" | tee /etc/apt/sources.list.d/node.list\n\n## install main deps\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n    nodejs=$NODE_VERSION* yarn git gcc g++ make rsync patch postgresql-client build-essential \\\n    cmake imagemagick openssl libreadline6-dev zlib1g zlib1g-dev libssl-dev libyaml-dev \\\n    libpq-dev libxml2-dev libxslt-dev libc6-dev libicu-dev xvfb bzip2 libssl-dev \\\n    unzip shared-mime-info \\\n    && apt-get clean \\\n    && rm -rf /tmp/* /var/lib/apt/lists/*\n\n## install bundler\nRUN mkdir -p /usr/local/etc \\\n  && { \\\n    echo 'install: --no-document'; \\\n    echo 'update: --no-document'; \\\n  } >> /usr/local/etc/gemrc;\nRUN gem update --system && gem install bundler -v $BUNDLER_VERSION && rm -rf /root/.gem;\n\nWORKDIR /fleetyards\n\nCOPY app /fleetyards/app\nCOPY config /fleetyards/config\nCOPY db /fleetyards/db\nCOPY bin /fleetyards/bin\nCOPY lib /fleetyards/lib\nCOPY public /fleetyards/public\nCOPY vendor /fleetyards/vendor\nCOPY .ruby-version /fleetyards/.ruby-version\nCOPY Rakefile /fleetyards/Rakefile\nCOPY Gemfile /fleetyards/Gemfile\nCOPY Gemfile.lock /fleetyards/Gemfile.lock\nCOPY config.ru /fleetyards/config.ru\n\nRUN bundle install\n\n# Add a script to be executed every time the container starts.\nCOPY docker/entrypoint.sh /usr/bin/\nRUN chmod +x /usr/bin/entrypoint.sh\nENTRYPOINT [\"entrypoint.sh\"]\n\nRUN mkdir -p /fleetyards/tmp/pids && mkdir -p /fleetyards/log\n\nEXPOSE 3000\n\nCMD [\"bundle\", \"exec\", \"puma\", \"-C\", \"config/puma.rb\"]\n\n\n"
}