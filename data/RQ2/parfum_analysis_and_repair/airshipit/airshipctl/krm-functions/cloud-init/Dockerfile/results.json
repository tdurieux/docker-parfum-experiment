{
  "startTime": 1674251477494,
  "endTime": 1674251478546,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 49,
        "columnEnd": 76
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 49,
        "columnEnd": 76
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG GO_IMAGE=quay.io/airshipit/golang:1.16.8-buster\nARG RELEASE_IMAGE=quay.io/airshipit/alpine:3.13.5\nFROM ${GO_IMAGE} as builder\nARG GOPROXY=\"\"\n\nENV PATH \"/usr/local/go/bin:$PATH\"\n\n# Inject custom root certificate authorities if needed\n# Docker does not have a good conditional copy statement and requires that a source file exists\n# to complete the copy function without error.  Therefore the README.md file will be copied to\n# the image every time even if there are no .crt files.\nCOPY ./certs/* /usr/local/share/ca-certificates/\nRUN update-ca-certificates\n\nRUN apt-get update -yq && apt-get upgrade -yq && apt-get install --no-install-recommends -y gcc make && rm -rf /var/lib/apt/lists/*;\n\nSHELL [ \"/bin/bash\", \"-cex\" ]\nWORKDIR /usr/src/airshipctl\n\n# Take advantage of caching for dependency acquisition\nCOPY go.mod go.sum /usr/src/airshipctl/\nRUN go mod download\n\nCOPY . /usr/src/airshipctl/\nARG MAKE_TARGET=bin/cloud-init\nRUN make ${MAKE_TARGET}\n\nFROM ${RELEASE_IMAGE} as release\nARG MAKE_TARGET=bin/cloud-init\nCOPY --from=builder /usr/src/airshipctl/${MAKE_TARGET} /usr/local/bin/config-function\nUSER 65534\nCMD [\"/usr/local/bin/config-function\"]\n"
}