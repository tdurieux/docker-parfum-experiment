{
  "startTime": 1674253628928,
  "endTime": 1674253629385,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 98,
        "lineEnd": 98,
        "columnStart": 7,
        "columnEnd": 26
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 7,
        "columnEnd": 18
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright 2017 AT&T Intellectual Property.  All other rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nARG FROM=opensuse/leap:15.1\nFROM ${FROM}\n\nLABEL org.opencontainers.image.authors='airship-discuss@lists.airshipit.org, irc://#airshipit@freenode' \\\n      org.opencontainers.image.url='https://airshipit.org' \\\n      org.opencontainers.image.documentation='https://airship-shipyard.readthedocs.org' \\\n      org.opencontainers.image.source='https://opendev.org/airship/shipyard' \\\n      org.opencontainers.image.vendor='The Airship Authors' \\\n      org.opencontainers.image.licenses='Apache-2.0'\n\nENV container docker\nENV PORT 9000\nENV LC_ALL C.UTF-8\nENV LANG C.UTF-8\n# Setting the version explicitly for PBR\nENV PBR_VERSION 0.1a1\n\nARG ctx_base=src/bin\n\n# Expose port 9000 for application\nEXPOSE $PORT\n\nRUN set -ex && \\\n    zypper --gpg-auto-import-keys refresh && \\\n    zypper -q update -y && \\\n    zypper --non-interactive install --no-recommends \\\n        automake \\\n        ca-certificates \\\n        curl \\\n        gcc-c++ \\\n        git \\\n        libtool \\\n        make \\\n        netcfg \\\n        python3 \\\n        python3-devel \\\n        python3-setuptools \\\n    && zypper clean -a \\\n    && rm -rf \\\n        /tmp/* \\\n        /var/tmp/* \\\n        /usr/share/man \\\n        /usr/share/doc \\\n        /usr/share/doc-base\n\n# Install LibYAML\nENV LD_LIBRARY_PATH=/usr/local/lib\n\nARG LIBYAML_VERSION=0.2.5\nRUN set -ex \\\n    && git clone https://github.com/yaml/libyaml.git \\\n    && cd libyaml \\\n    && git checkout $LIBYAML_VERSION \\\n    && ./bootstrap \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n    && make \\\n    && make install \\\n    && cd .. \\\n    && rm -fr libyaml\n\n# Create shipyard user\nRUN useradd -ms /bin/bash shipyard \\\n    && mkdir -p /home/shipyard/shipyard \\\n    && mkdir -p /home/shipyard/shipyard_client\n\n# Copy entrypoint.sh to /home/shipyard\nCOPY ${ctx_base}/shipyard_airflow/entrypoint.sh /home/shipyard/entrypoint.sh\n# Change permissions and set up directories\nRUN chown -R shipyard: /home/shipyard \\\n    && chmod +x /home/shipyard/entrypoint.sh\n\n# Requirements and Shipyard source\nCOPY ${ctx_base}/shipyard_airflow/requirements.txt /home/shipyard/api_requirements.txt\nCOPY ${ctx_base}/shipyard_client/requirements.txt /home/shipyard/client_requirements.txt\nCOPY ${ctx_base}/shipyard_client /home/shipyard/shipyard_client/\nCOPY ${ctx_base}/shipyard_airflow /home/shipyard/shipyard/\n\n# Build\nENV buildDeps=\"gcc git-core libopenssl-devel make python3-pip\"\nRUN set -ex \\\n    && zypper -q update -y \\\n    && zypper --non-interactive install --no-recommends $buildDeps\n\nRUN set -ex \\\n    && pip3 install --no-cache-dir -U pip \\\n    && pip3 install -r /home/shipyard/client_requirements.txt --no-cache-dir \\\n    && cd /home/shipyard/shipyard_client \\\n    && python3 setup.py install \\\n    && pip3 install -r /home/shipyard/api_requirements.txt --no-cache-dir \\\n    && cd /home/shipyard/shipyard \\\n    && python3 setup.py install \\\n    && zypper remove -y --clean-deps $buildDeps \\\n    && zypper clean -a \\\n    && rm -rf \\\n        /tmp/* \\\n        /var/tmp/* \\\n        /var/log/* \\\n        /usr/share/man \\\n        /usr/share/doc \\\n        /usr/share/doc-base\n\n# Entrypoint\nENTRYPOINT [\"/home/shipyard/entrypoint.sh\"]\nCMD [\"server\"]\n# Set user to shipyard\nUSER shipyard\n"
}