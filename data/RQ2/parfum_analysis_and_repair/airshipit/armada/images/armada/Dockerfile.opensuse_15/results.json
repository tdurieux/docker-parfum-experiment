{
  "startTime": 1674252255829,
  "endTime": 1674252257028,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 7,
        "columnEnd": 33
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 7,
        "columnEnd": 18
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG FROM=opensuse/leap:15.1\nFROM ${FROM}\n\nLABEL org.opencontainers.image.authors='airship-discuss@lists.airshipit.org, irc://#airshipit@freenode' \\\n      org.opencontainers.image.url='https://airshipit.org' \\\n      org.opencontainers.image.documentation='https://docs.airshipit.org/armada' \\\n      org.opencontainers.image.source='https://opendev.org/airship/armada' \\\n      org.opencontainers.image.vendor='The Airship Authors' \\\n      org.opencontainers.image.licenses='Apache-2.0'\n\nENV LANG=C.UTF-8\nENV LC_ALL=C.UTF-8\n\nEXPOSE 8000\n\nENTRYPOINT [\"./entrypoint.sh\"]\nCMD [\"server\"]\n\nRUN mkdir -p /armada && \\\n    zypper refresh && \\\n    zypper up -y && \\\n    zypper --non-interactive install \\\n       ca-certificates \\\n       curl \\\n       tar \\\n       gzip \\\n       netcfg \\\n       python3 \\\n       python3-devel \\\n       python3-setuptools \\\n       python3-pip \\\n       automake \\\n       gcc \\\n       git \\\n       libopenssl-devel \\\n       libtool \\\n       make\n\nRUN pip3 install --no-cache-dir --upgrade pip && \\\n       zypper clean -a && \\\n       rm -rf \\\n         /tmp/* \\\n         /var/tmp/* \\\n         /usr/share/man \\\n         /usr/share/doc \\\n         /usr/share/doc-base\n\nARG HELM_ARTIFACT_URL\nRUN \\\n    curl -fSSL -O ${HELM_ARTIFACT_URL} && \\\n    tar -xvf $(basename ${HELM_ARTIFACT_URL}) && \\\n    mv linux-amd64/helm /usr/local/bin\n\nENV LD_LIBRARY_PATH=/usr/local/lib\n\nARG LIBYAML_VERSION=0.2.5\nRUN set -ex \\\n    && git clone https://github.com/yaml/libyaml.git \\\n    && cd libyaml \\\n    && git checkout $LIBYAML_VERSION \\\n    && ./bootstrap \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n    && make \\\n    && make install \\\n    && cd .. \\\n    && rm -fr libyaml\n\nWORKDIR /armada\n\nCOPY requirements.txt /tmp/\n\nRUN \\\n    pip3 install --no-cache-dir -r /tmp/requirements.txt && \\\n    useradd -u 1000 -g users -d /armada armada && \\\n    rm -rf /tmp/requirements.txt\n\nCOPY . /armada\n\nRUN \\\n    mv etc/armada /etc/ && \\\n    cd /armada && \\\n    chown -R armada:users /armada && \\\n    python3 setup.py install\n\nUSER armada\n"
}