{
  "startTime": 1674249146797,
  "endTime": 1674249147446,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 7,
        "columnEnd": 18
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG FROM=ubuntu:16.04\nFROM ${FROM}\n\nLABEL org.opencontainers.image.authors='airship-discuss@lists.airshipit.org, irc://#airshipit@freenode' \\\n      org.opencontainers.image.url='https://airshipit.org' \\\n      org.opencontainers.image.documentation='https://docs.airshipit.org/armada' \\\n      org.opencontainers.image.source='https://opendev.org/airship/armada' \\\n      org.opencontainers.image.vendor='The Airship Authors' \\\n      org.opencontainers.image.licenses='Apache-2.0'\n\nENV DEBIAN_FRONTEND noninteractive\nENV LANG=C.UTF-8\nENV LC_ALL=C.UTF-8\n\nEXPOSE 8000\n\nRUN set -ex && \\\n    apt-get -qq update && \\\n    apt-get -y install \\\n    ca-certificates \\\n    curl \\\n    netbase \\\n    python3-dev \\\n    python3-setuptools \\\n    --no-install-recommends \\\n    && apt-get autoremove -yqq --purge \\\n    && apt-get clean \\\n    && rm -rf \\\n        /var/lib/apt/lists/* \\\n        /tmp/* \\\n        /var/tmp/* \\\n        /usr/share/man \\\n        /usr/share/doc \\\n        /usr/share/doc-base\n\nWORKDIR /armada\n\n# Add armada user\nRUN useradd -u 1000 -g users -d $(pwd) armada\n\nENTRYPOINT [\"./entrypoint.sh\"]\nCMD [\"server\"]\n\nCOPY requirements.txt ./\n\nENV LD_LIBRARY_PATH=/usr/local/lib\n\nARG HELM_ARTIFACT_URL\nARG LIBYAML_VERSION=0.2.5\n\n# Build\nRUN set -ex \\\n    && buildDeps=' \\\n      automake \\\n      gcc \\\n      libssl-dev \\\n      libtool \\\n      make \\\n      python3-pip \\\n    ' \\\n    && apt-get -qq update \\\n    # Keep git separate so it's not removed below\n    && apt-get install -y $buildDeps git --no-install-recommends \\\n    && git clone https://github.com/yaml/libyaml.git \\\n    && cd libyaml \\\n    && git checkout $LIBYAML_VERSION \\\n    && ./bootstrap \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n    && make \\\n    && make install \\\n    && cd .. \\\n    && rm -fr libyaml \\\n    && python3 -m pip install -U 'pip<21.0' \\\n    && pip3 install -r requirements.txt --no-cache-dir \\\n    && curl -fSSL -O ${HELM_ARTIFACT_URL} \\\n    && tar -xvf $(basename ${HELM_ARTIFACT_URL}) \\\n    && mv linux-amd64/helm /usr/local/bin \\\n    && apt-get purge -y --auto-remove $buildDeps \\\n    && apt-get autoremove -yqq --purge \\\n    && apt-get clean \\\n    && rm -rf \\\n        /var/lib/apt/lists/* \\\n        /tmp/* \\\n        /var/tmp/* \\\n        /usr/share/man \\\n        /usr/share/doc \\\n        /usr/share/doc-base\n\nCOPY . ./\n\n# Setting the version explicitly for PBR\nENV PBR_VERSION 0.8.0\n\nRUN \\\n    mv etc/armada /etc/ && \\\n    chown -R armada:users . && \\\n    python3 setup.py install\n\nUSER armada\n"
}