{
  "startTime": 1674256214956,
  "endTime": 1674256215771,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 42
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# See latest cuda tags here: https://hub.docker.com/r/nvidia/cuda/tags\nFROM nvidia/cuda:11.6.0-devel-ubuntu20.04\n\nENV LANG C.UTF-8\nENV DEBIAN_FRONTEND noninteractive\nENV NVIDIA_DRIVER_CAPABILITIES video,compute,utility\nENV PYTHONPATH $PYTHONPATH:/workdir\nWORKDIR /workdir\n\n# Install python and apt-get packages\nRUN apt-get update && apt -y upgrade && \\\n    apt-get -y --no-install-recommends install \\\n    software-properties-common \\\n    build-essential yasm nasm ninja-build \\\n    unzip git wget curl nano vim tmux \\\n    sysstat libtcmalloc-minimal4 pkgconf \\\n    autoconf libtool flex bison \\\n    libsm6 libxext6 libxrender1 libgl1-mesa-glx \\\n    libx264-dev libsndfile1 libmp3lame-dev libssl-dev \\\n    python3 python3-dev python3-pip libpng-dev libjpeg-dev \\\n    liblapack-dev libopenblas-dev gfortran && \\\n    ln -s /usr/bin/python3 /usr/bin/python && \\\n    apt-get clean && \\\n    apt-get -y autoremove && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    rm -rf /var/cache/apt/archives/*\n\n# Install CMake\nRUN CMAKE_VERSION=3.22.2 && \\\n    wget https://github.com/Kitware/CMake/releases/download/v${CMAKE_VERSION}/cmake-${CMAKE_VERSION}.tar.gz && \\\n    tar -zxvf cmake-${CMAKE_VERSION}.tar.gz && \\\n    cd cmake-${CMAKE_VERSION} && \\\n    ./bootstrap && \\\n    make && make install && \\\n    cd .. && rm -rf cmake-${CMAKE_VERSION} cmake-${CMAKE_VERSION}.tar.gz\n\n# Install pip and setuptools\nRUN pip3 install --upgrade --no-cache-dir \\\n    pip==22.0.3 \\\n    setuptools==59.5.0 \\\n    packaging==21.3\n\n# Build nvidia codec headers\nRUN git clone --depth=1 --branch=n11.1.5.1 --progress https://github.com/FFmpeg/nv-codec-headers.git && \\\n    cd nv-codec-headers && make install && \\\n    cd .. && rm -rf nv-codec-headers\n\n# Build FFmpeg with NVENC support\nRUN git clone --depth=1 --branch=release/4.4 --progress https://github.com/FFmpeg/FFmpeg.git && \\\n    cd FFmpeg && \\\n    mkdir ffmpeg_build && cd ffmpeg_build && \\\n    ../configure \\\n    --enable-cuda \\\n    --enable-cuvid \\\n    --enable-shared \\\n    --disable-static \\\n    --disable-doc \\\n    --extra-cflags=-I/usr/local/cuda/include \\\n    --extra-ldflags=-L/usr/local/cuda/lib64 \\\n    --enable-gpl \\\n    --enable-libx264 \\\n    --enable-libmp3lame \\\n    --extra-libs=-lpthread \\\n    --enable-openssl \\\n    --enable-nonfree \\\n    --nvccflags=\"-arch=sm_52 \\\n                 -gencode=arch=compute_52,code=sm_52 \\\n                 -gencode=arch=compute_60,code=sm_60 \\\n                 -gencode=arch=compute_61,code=sm_61 \\\n                 -gencode=arch=compute_70,code=sm_70 \\\n                 -gencode=arch=compute_75,code=sm_75 \\\n                 -gencode=arch=compute_80,code=sm_80 \\\n                 -gencode=arch=compute_86,code=sm_86 \\\n                 -gencode=arch=compute_86,code=compute_86\" && \\\n    make -j$(nproc) && make install && ldconfig && \\\n    cd ../.. && rm -rf FFmpeg\n\n# Install python packages\nRUN pip3 install --no-cache-dir \\\n    numpy==1.21.5 \\\n    opencv-python==4.5.5.62 \\\n    scipy==1.8.0 \\\n    matplotlib==3.5.1 \\\n    pandas==1.4.1 \\\n    scikit-learn==1.0.2 \\\n    scikit-image==0.19.2 \\\n    Pillow==9.0.1 \\\n    librosa==0.9.1 \\\n    albumentations==1.1.0 \\\n    pyzmq==22.3.0 \\\n    Cython==0.29.28 \\\n    numba==0.55.1 \\\n    requests==2.27.1 \\\n    psutil==5.9.0 \\\n    pydantic==1.9.0 \\\n    PyYAML==6.0 \\\n    notebook==6.4.8 \\\n    ipywidgets==7.6.5 \\\n    tqdm==4.63.0 \\\n    pytest==7.0.1 \\\n    pytest-cov==3.0.0 \\\n    mypy==0.931 \\\n    pre-commit==2.17.0 \\\n    flake8==4.0.1\n"
}