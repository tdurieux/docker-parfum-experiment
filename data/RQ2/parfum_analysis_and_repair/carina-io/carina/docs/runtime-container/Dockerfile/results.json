{
  "startTime": 1674248740238,
  "endTime": 1674248741508,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 15,
        "columnEnd": 110
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 76
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 0,
        "columnEnd": 48
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 0,
        "columnEnd": 43
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 0,
        "columnEnd": 46
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 0,
        "columnEnd": 46
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 0,
        "columnEnd": 53
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 0,
        "columnEnd": 54
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 0,
        "columnEnd": 44
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 0,
        "columnEnd": 42
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 0,
        "columnEnd": 45
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 0,
        "columnEnd": 43
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 0,
        "columnEnd": 45
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 0,
        "columnEnd": 43
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 0,
        "columnEnd": 48
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 0,
        "columnEnd": 47
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 114,
        "columnEnd": 137
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM centos:7 as builder\n\nRUN cd /tmp && curl -f -O https://ghproxy.com/https://github.com/g2p/bcache-tools/archive/refs/tags/v1.0.8.tar.gz && tar -zxvf v1.0.8.tar.gz && rm v1.0.8.tar.gz\nRUN yum -y install gcc automake autoconf libtool make gcc-c++ libblkid-devel && rm -rf /var/cache/yum\nRUN cd /tmp/bcache-tools-1.0.8 && make && make install\n\nFROM centos:7\n\nENV container docker\n\nRUN yum --setopt=tsflags=nodocs -y update && yum clean all && \\\n(cd /lib/systemd/system/sysinit.target.wants/; for i in *; do [ $i == systemd-tmpfiles-setup.service ] || rm -f $i; done) && \\\nrm -f /lib/systemd/system/multi-user.target.wants/* &&\\\nrm -f /etc/systemd/system/*.wants/* &&\\\nrm -f /lib/systemd/system/local-fs.target.wants/* && \\\nrm -f /lib/systemd/system/sockets.target.wants/*udev* && \\\nrm -f /lib/systemd/system/sockets.target.wants/*initctl* && \\\nrm -f /lib/systemd/system/basic.target.wants/* &&\\\nrm -f /lib/systemd/system/anaconda.target.wants/* &&\\\nyum --setopt=tsflags=nodocs -y install nfs-utils && \\\nyum --setopt=tsflags=nodocs -y install attr  && \\\nyum --setopt=tsflags=nodocs -y install iputils  && \\\nyum --setopt=tsflags=nodocs -y install iproute  && \\\nyum --setopt=tsflags=nodocs -y install openssh-server  && \\\nyum --setopt=tsflags=nodocs -y install openssh-clients  && \\\nyum --setopt=tsflags=nodocs -y install rsync  && \\\nyum --setopt=tsflags=nodocs -y install tar  && \\\nyum --setopt=tsflags=nodocs -y install cronie  && \\\nyum --setopt=tsflags=nodocs -y install lvm2 && \\\nyum --setopt=tsflags=nodocs -y install parted && \\\nyum --setopt=tsflags=nodocs -y install file && \\\nyum --setopt=tsflags=nodocs -y install e4fsprogs && \\\nyum --setopt=tsflags=nodocs -y install xfsprogs  && yum clean all && \\\nsed -i '/Port 22/c\\Port 2222' /etc/ssh/sshd_config && \\\nmkdir -p /var/log/core; rm -rf /var/cache/yum\n\n# do not run udev (if needed, bind-mount /run/udev instead?)\nRUN true \\\n    && systemctl mask systemd-udev-trigger.service \\\n    && systemctl mask systemd-udevd.service \\\n    && systemctl mask systemd-udevd.socket \\\n    && systemctl mask systemd-udevd-kernel.socket \\\n    && true\n\n# use lvmetad from the host, dont run it in the container\n# don't wait for udev to manage the /dev entries, disable udev_sync, udev_rules in lvm.conf\nVOLUME [ \"/run/lvm\" ]\nRUN true \\\n    && systemctl mask lvm2-lvmetad.service \\\n    && systemctl mask lvm2-lvmetad.socket \\\n    && sed -i 's/^\\sudev_rules\\s*=\\s*1/udev_rules = 0/' /etc/lvm/lvm.conf \\\n    && sed -i 's/^\\sudev_sync\\s*=\\s*1/udev_sync= 0/' /etc/lvm/lvm.conf \\\n    && sed -i 's/use_lvmetad\\s*=\\s*1/use_lvmetad = 0/' /etc/lvm/lvm.conf \\\n    && sed -i 's/^\\sobtain_device_list_from_udev\\s*=\\s*1/obtain_device_list_from_udev = 0/' /etc/lvm/lvm.conf \\\n    && true\n\n# prevent dmeventd from running in the container, it may cause conflicts with\n# the service running on the host\n# monitoring of activated LVs can not be done inside the container\nRUN true \\\n    && systemctl mask dm-event.service \\\n    && systemctl disable dm-event.socket \\\n    && systemctl mask dm-event.socket \\\n    && systemctl disable lvm2-monitor.service \\\n    && systemctl mask lvm2-monitor.service \\\n    && sed -i 's/^\\smonitoring\\s*=\\s*1/monitoring = 0/' /etc/lvm/lvm.conf \\\n    && true\n\n# mask services that aren't required in the container and/or might interfere\nRUN true \\\n    && systemctl mask getty.target \\\n    && systemctl mask systemd-journal-flush.service \\\n    && systemctl mask rpcbind.socket \\\n    && true\n\n\nVOLUME [ \"/sys/fs/cgroup\" ]\nADD update-params.sh /usr/local/bin/update-params.sh\nADD exec-on-host.sh /usr/sbin/exec-on-host\n\nRUN chmod +x /usr/local/bin/update-params.sh && \\\nsystemctl disable nfs-server.service\n\nCOPY --from=builder /tmp/bcache-tools-1.0.8/bcache-register /usr/bin/\nCOPY --from=builder /tmp/bcache-tools-1.0.8/bcache-super-show /usr/bin/\nCOPY --from=builder /tmp/bcache-tools-1.0.8/make-bcache /usr/bin/\nCOPY --from=builder /tmp/bcache-tools-1.0.8/probe-bcache /usr/bin/\nRUN chmod +x /usr/bin/bcache-register /usr/bin/bcache-register /usr/bin/bcache-register /usr/bin/bcache-register\n\nEXPOSE 8080\n\nENTRYPOINT [\"/usr/local/bin/update-params.sh\"]\nCMD [\"/usr/sbin/init\"]\n"
}