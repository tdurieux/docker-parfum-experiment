{
  "startTime": 1674252524968,
  "endTime": 1674252526245,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 28,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 77
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 76
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 77
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 75
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 76
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 77
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 75
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 76
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 77
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 75
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 100
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 87
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 104
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:focal as aprsd\n\n# Dockerfile for building a container during aprsd development.\nARG branch\nARG UID\nARG GID\n\nENV APRS_USER=aprs\nENV HOME=/home/aprs\nENV APRSD=http://github.com/craigerl/aprsd.git\nENV APRSD_BRANCH=${branch:-master}\nENV VIRTUAL_ENV=$HOME/.venv3\nENV UID=${UID:-1000}\nENV GID=${GID:-1000}\n\nENV DEBIAN_FRONTEND=noninteractive\nENV INSTALL=$HOME/install\nRUN apt update\nRUN apt install -y --no-install-recommends git build-essential bash fortune && rm -rf /var/lib/apt/lists/*;\nRUN apt install --no-install-recommends -y libffi-dev python3-dev libssl-dev libxml2-dev libxslt-dev && rm -rf /var/lib/apt/lists/*;\nRUN apt install --no-install-recommends -y python3 python3-pip python3-dev python3-lxml && rm -rf /var/lib/apt/lists/*;\n#RUN apt-get clean\nRUN apt-get -o Dpkg::Options::=\"--force-confmiss\" -y --no-install-recommends install --reinstall netbase && rm -rf /var/lib/apt/lists/*;\n\nRUN addgroup --gid 1001 $APRS_USER\nRUN useradd -m -u $UID -g $APRS_USER $APRS_USER\n\nENV LC_ALL=C.UTF-8\nENV LANG=C.UTF-8\n\nWORKDIR $HOME\nUSER $APRS_USER\nRUN pip install --no-cache-dir wheel\n#RUN python3 -m venv $VIRTUAL_ENV\n#ENV PATH=\"$VIRTUAL_ENV/bin:$PATH\"\nRUN echo \"export PATH=\\$PATH:\\$HOME/.local/bin\" >> $HOME/.bashrc\nRUN cat $HOME/.bashrc\n\nUSER root\nWORKDIR $HOME\nRUN mkdir $INSTALL\nRUN git clone -b $APRSD_BRANCH $APRSD $INSTALL/aprsd\nRUN cd $INSTALL/aprsd && pip3 install --no-cache-dir -v .\nRUN ls -al /usr/local/bin\nRUN ls -al /usr/bin\nRUN which aprsd\nRUN mkdir -p /config\nRUN aprsd sample-config > /config/aprsd.yml\nRUN chown -R $APRS_USER:$APRS_USER /config\n\n# override this to run another configuration\nENV CONF default\nUSER $APRS_USER\nVOLUME [\"/config\", \"/plugins\"]\n\nADD bin/run.sh $HOME/\nENTRYPOINT [\"/home/aprs/run.sh\"]\n\nHEALTHCHECK --interval=5m --timeout=12s --start-period=30s \\\n    CMD aprsd healthcheck --config /config/aprsd.yml --url http://localhost:8001/stats\n"
}