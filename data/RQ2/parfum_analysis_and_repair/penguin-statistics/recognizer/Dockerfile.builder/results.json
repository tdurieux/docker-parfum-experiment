{
  "startTime": 1674217173804,
  "endTime": 1674217175273,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 18,
        "columnEnd": 50
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 18,
        "columnEnd": 50
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM emscripten/emsdk:1.40.1\n\nWORKDIR /build\n\n# install python and build tools\nRUN apt update && apt install --no-install-recommends -y python python-dev && rm -rf /var/lib/apt/lists/*;\n\nRUN git clone --depth=1 -b 4.5.5 https://github.com/opencv/opencv.git opencv/sources\n\n# Modify opencv/sources/platforms/js/build_js.py, where in def get_cmake_cmd(self):\n# Replace the value before '->' to the value after '->'\n# -DWITH_JPEG=OFF               -> -DWITH_JPEG=ON\n# -DWITH_PNG=OFF                -> -DWITH_PNG=ON\n# -DBUILD_opencv_imgcodecs=OFF  -> -DBUILD_opencv_imgcodecs=ON\n# -DWITH_QUIRC=ON               -> -DWITH_QUIRC=OFF\n# -DBUILD_ZLIB=ON               -> -DBUILD_ZLIB=OFF\n# -DBUILD_opencv_calib3d=ON     -> -DBUILD_opencv_calib3d=OFF\n# -DBUILD_opencv_dnn=ON         -> -DBUILD_opencv_dnn=OFF\n# -DBUILD_opencv_features2d=ON  -> -DBUILD_opencv_features2d=OFF\n# -DBUILD_opencv_flann=ON       -> -DBUILD_opencv_flann=OFF\n# -DBUILD_opencv_photo=ON       -> -DBUILD_opencv_photo=OFF\n# -DBUILD_EXAMPLES=ON           -> -DBUILD_EXAMPLES=OFF\n# -DBUILD_TESTS=ON              -> -DBUILD_TESTS=OFF\n# -DBUILD_PERF_TESTS=ON         -> -DBUILD_PERF_TESTS=OFF\n\nRUN cd opencv/sources/platforms/js/ && \\\n    sed -i 's/-DWITH_JPEG=OFF/-DWITH_JPEG=ON/g' build_js.py && \\\n    sed -i 's/-DWITH_PNG=OFF/-DWITH_PNG=ON/g' build_js.py && \\\n    sed -i 's/-DBUILD_opencv_imgcodecs=OFF/-DBUILD_opencv_imgcodecs=ON/g' build_js.py && \\\n    sed -i 's/-DWITH_QUIRC=ON/-DWITH_QUIRC=OFF/g' build_js.py && \\\n    sed -i 's/-DBUILD_ZLIB=ON/-DBUILD_ZLIB=OFF/g' build_js.py && \\\n    sed -i 's/-DBUILD_opencv_calib3d=ON/-DBUILD_opencv_calib3d=OFF/g' build_js.py && \\\n    sed -i 's/-DBUILD_opencv_dnn=ON/-DBUILD_opencv_dnn=OFF/g' build_js.py && \\\n    sed -i 's/-DBUILD_opencv_features2d=ON/-DBUILD_opencv_features2d=OFF/g' build_js.py && \\\n    sed -i 's/-DBUILD_opencv_flann=ON/-DBUILD_opencv_flann=OFF/g' build_js.py && \\\n    sed -i 's/-DBUILD_opencv_photo=ON/-DBUILD_opencv_photo=OFF/g' build_js.py && \\\n    sed -i 's/-DBUILD_EXAMPLES=ON/-DBUILD_EXAMPLES=OFF/g' build_js.py && \\\n    sed -i 's/-DBUILD_TESTS=ON/-DBUILD_TESTS=OFF/g' build_js.py && \\\n    sed -i 's/-DBUILD_PERF_TESTS=ON/-DBUILD_PERF_TESTS=OFF/g' build_js.py && \\\n    cd /build/opencv && \\\n    emcmake python ./sources/platforms/js/build_js.py build_wasm --build_wasm && \\\n    cd build_wasm && \\\n    emmake make -j$(nproc)\n\n# Now, check the build result. Those files should exist:\n# /build/opencv/build_wasm/lib/libopencv_imgcodecs.a\n# /build/opencv/build_wasm/3rdparty/lib/liblibjpeg-turbo.a\n# /build/opencv/build_wasm/3rdparty/lib/liblibpng.a\n# if not, exit the build with error code 1\nRUN [ -f /build/opencv/build_wasm/lib/libopencv_imgcodecs.a ] && \\\n    [ -f /build/opencv/build_wasm/3rdparty/lib/liblibjpeg-turbo.a ] && \\\n    [ -f /build/opencv/build_wasm/3rdparty/lib/liblibpng.a ] || exit 1\n\n"
}