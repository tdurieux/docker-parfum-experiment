{
  "startTime": 1674217997433,
  "endTime": 1674217999211,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 116
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 55
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM golang:latest as go-builder\nMAINTAINER Valentin Kuznetsov vkuznet@gmail.com\n\nRUN curl -f -ksLO \"https://storage.googleapis.com/tensorflow/libtensorflow/libtensorflow-cpu-linux-x86_64-2.4.0.tar.gz\" && \\\n    tar xfz libtensorflow-cpu-linux-x86_64-2.4.0.tar.gz && \\\n    cp -a lib/* /usr/local/lib && cp -a include/* /usr/local/include && rm libtensorflow-cpu-linux-x86_64-2.4.0.tar.gz\nENV LD_LIBRARY_PATH=\"${LD_LIBRARY_PATH}:/go/lib\"\n\n# download golang and install it\nENV GOPATH=/go/gopath\nENV PATH=\"${GOROOT}/bin:/go/gopath/bin:${PATH}\"\n\n# build tfaas\n# we'll use tfgo build instead of offical TF one, see\n# https://github.com/tensorflow/tensorflow/issues/41808\n# https://github.com/tensorflow/tensorflow/issues/48017\n# https://github.com/tensorflow/tensorflow/issues/35133#issuecomment-807404740\n# https://github.com/galeone/tfgo\nRUN go env -w GONOSUMDB=\"github.com/galeone/tensorflow\" && \\\n    go get github.com/galeone/tfgo && \\\n    go get github.com/dmwm/cmsauth && \\\n    go get github.com/vkuznet/x509proxy && \\\n    go get github.com/sirupsen/logrus && \\\n    go get github.com/shirou/gopsutil\n\nRUN git clone https://github.com/vkuznet/TFaaS.git && \\\n    cd TFaaS/src/Go && \\\n    make\n\n# final image\nFROM debian:stretch\nRUN mkdir -p /data/lib\nCOPY --from=go-builder /go/TFaaS/src/Go /data/\nCOPY --from=go-builder /go/lib /data/lib\nRUN mkdir /data/models\nENV WDIR=/data\nENV LIBRARY_PATH=\"${WDIR}/lib\"\nENV LD_LIBRARY_PATH=\"${WDIR}/lib\"\nENV PATH=\"${WDIR}:${PATH}\"\n\n# run the service\nWORKDIR ${WDIR}\nCMD [\"tfaas\",  \"-config\", \"config.json\"]\n"
}