{
  "startTime": 1674254732241,
  "endTime": 1674254733426,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 30
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:latest\n\nARG VERSION\n\n# Install the needed software\nRUN apk add --no-cache curl nginx php8-fpm php8-sqlite3 php8-opcache sqlite nodejs git npm bash build-base supervisor\n\n# Create the www-data user and group\nRUN set -x ; \\\n  addgroup -g 82 -S www-data ; \\\n  adduser -u 82 -D -S -G www-data www-data && exit 0 ; exit 1\n\n# Link php bin\nRUN ln -s /usr/bin/php8 /usr/bin/php\n\n# Copy supervisor conf file\nCOPY docker/supervisord.conf /etc/supervisor/conf.d/supervisord.conf\n\n# Set default workdir\nWORKDIR  /var/www/\n\nCOPY docker/docker-entrypoint.sh .\n\n# Download Uguu\nADD https://git.pomf.se/Pomf/uguu/archive/v${VERSION}.tar.gz v${VERSION}.tar.gz\nRUN tar xvf v${VERSION}.tar.gz && rm v${VERSION}.tar.gz\n\n# Create the needed directories\nRUN mkdir /var/www/uguu/dist && \\\n    mkdir /var/www/db && \\\n    mkdir /var/www/files\n\n# Create the Sqlite DB\nRUN sqlite3 /var/www/db/uguu.sq3 -init /var/www/uguu/sqlite_schema.sql && \\\n    chown -R www-data:www-data /var/www && \\\n    chmod -R 775 /var/www/\n\n# Fix script paths\nRUN chmod a+x /var/www/uguu/checkdb.sh && \\\n    chmod a+x /var/www/uguu/checkfiles.sh && \\\n    sed -i 's#/path/to/files/#/var/www/uguu/files/#g' /var/www/uguu/checkfiles.sh && \\\n    sed -i 's#/path/to/db/uguu.sq3#/var/www/db/uguu.sq3#g' /var/www/uguu/checkdb.sh\n\n# Add scripts to cron\nRUN echo \"0,30 * * * * bash /var/www/uguu/checkfiles.sh\" >> /var/spool/cron/crontabs/www-data && \\\n    echo \"0,30 * * * * bash /var/www/uguu/checkdb.sh\" >> /var/spool/cron/crontabs/www-data\n\n# Copy Nginx Server conf\nCOPY docker/uguu.conf /etc/nginx/http.d/\n\n# Copy SSL certs\nCOPY docker/ssl /etc/ssl\n\n# Copy Uguu config\nCOPY dist.json /var/www/uguu/dist.json\n\n# Give permissions to www-data\nRUN chown -R www-data:www-data /run /var/lib/php8 /var/lib/nginx /var/log/nginx /var/log/php8 /etc/nginx /etc/php8\n\n# Change user to www-data\nUSER www-data\n\n# Expose port 80 from the container\nEXPOSE 80\n\n# Expose port 443 from the container\nEXPOSE 443\n\n# Load entrypoint\nENTRYPOINT [ \"bash\", \"/var/www/docker-entrypoint.sh\" ]"
}