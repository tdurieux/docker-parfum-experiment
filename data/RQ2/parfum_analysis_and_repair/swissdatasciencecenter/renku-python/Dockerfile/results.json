{
  "startTime": 1674255984377,
  "endTime": 1674255985551,
  "originalSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 74
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 62
      }
    }
  ],
  "repairedDockerfile": "FROM python:3.9-slim as base\n\n# hadolint ignore=DL3008,DL3009,DL3013\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y git git-lfs=2.* python3-dev && \\\n    pip install --no-cache-dir --upgrade pip poetry && rm -rf /var/lib/apt/lists/*;\n\nFROM base as builder\n\n# hadolint ignore=DL3008\nRUN apt-get install --no-install-recommends -y build-essential && \\\n    apt-get clean && rm -rf /var/lib/apt/lists/*\n\n# The python install is done in two steps to avoid re-installing all dependencies every\n# time the code changes\nCOPY pyproject.toml poetry.lock README.rst CHANGES.rst Makefile /code/renku/\nWORKDIR /code/renku\nRUN poetry export --without-hashes -f requirements.txt --output /tmp/requirements.txt && \\\n    pip install --no-cache-dir -r /tmp/requirements.txt && \\\n    pip install --no-cache-dir poetry-dynamic-versioning==0.17.1\n\nCOPY .git /code/renku/.git\nCOPY renku /code/renku/renku\n\n# Set CLEAN_INSTALL to a non-null value to ensure that only a committed version of\n# renku-python is installed in the image. This is the default for chartpress builds.\nARG CLEAN_INSTALL\nRUN if [ -n \"${CLEAN_INSTALL}\" ]; then git reset --hard ; fi && \\\n    make download-templates\n\n# set the BUILD_CORE_SERVICE to non null to install additional service dependencies\nARG BUILD_CORE_SERVICE\nRUN if [ -n \"${BUILD_CORE_SERVICE}\" ]; then export EXT_BUILD=\"[service]\" ; fi && \\\n    pip wheel --wheel-dir /wheels \".${EXT_BUILD}\" && \\\n    pip install --no-cache-dir --no-index --no-warn-script-location --force --root=/pythonroot/ /wheels/*.whl\n\nFROM base\n\nARG BUILD_CORE_SERVICE\nRUN addgroup -gid 1000 shuhitsu && \\\n    useradd -m -u 1000 -g shuhitsu shuhitsu && \\\n    git lfs install && \\\n    if [ -n \"${BUILD_CORE_SERVICE}\" ]; then mkdir /svc && chown shuhitsu:shuhitsu /svc ; fi\n\nCOPY --from=builder /pythonroot/ /\n\n# shuhitsu (執筆): The \"secretary\" of the renga, as it were, who is responsible for\n# writing down renga verses and for the proceedings of the renga.\nUSER shuhitsu\n\nENV RENKU_SVC_NUM_WORKERS 4\nENV RENKU_SVC_NUM_THREADS 8\nENV RENKU_DISABLE_VERSION_CHECK=1\n\nENTRYPOINT [\"renku\"]\n"
}