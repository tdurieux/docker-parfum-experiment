{
  "startTime": 1674252689110,
  "endTime": 1674252689937,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 45
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# Two step Dockerfile\n#   - first build step: check hash and unpack archive\n#   - second build step: install dependencies, move files around, adjust config\n#\n# Unpacking in a separate build step makes sure the archive that is COPY-d does\n# not become a layer in the final image.\n#\n# How to build:\n#\n# export VALIDATOR_GENERIC_BUILD_ARCHIVE=$(ls rpki-validator/target/rpki-validator-*-dist.tar.gz | head -n 1)\n# export RTRSERVER_GENERIC_BUILD_ARCHIVE=$(ls rpki-rtr-server/target/rpki*-dist.tar.gz | head -n 1)\n#\n# docker build -f Dockerfile.validator --build-arg VALIDATOR_GENERIC_BUILD_ARCHIVE=${VALIDATOR_GENERIC_BUILD_ARCHIVE} .\n# docker build -f Dockerfile.rtr-server --build-arg RTRSERVER_GENERIC_BUILD_ARCHIVE=${RTRSERVER_GENERIC_BUILD_ARCHIVE} .\n#\nFROM library/openjdk:11-jre-slim as intermediate\n\nARG VALIDATOR_GENERIC_BUILD_ARCHIVE\n\nCOPY ${VALIDATOR_GENERIC_BUILD_ARCHIVE} /tmp/\n\nRUN mkdir -p /opt/rpki-validator-3 \\\n    && tar -zxf /tmp/$(basename $VALIDATOR_GENERIC_BUILD_ARCHIVE) -C /opt/rpki-validator-3/ --strip-components=1\n\n# Second build step: Move files into place\nFROM library/openjdk:11-jre-slim\n# Keep the file name and sha256 in the metadata\nARG VALIDATOR_GENERIC_BUILD_ARCHIVE\nLABEL validation.archive.file=\"$(basename ${VALIDATOR_GENERIC_BUILD_ARCHIVE})\"\n\n# Webserver on 8080\nEXPOSE 8080\n\n# Used by `rpki-validator-3.sh`\nENV CONFIG_DIR=\"/config\"\n\nCOPY --from=intermediate /opt/rpki-validator-3 /opt/rpki-validator-3\nWORKDIR /opt/rpki-validator-3\n\n# S6 init-like system for proper <C-c>\nADD https://github.com/just-containers/s6-overlay/releases/download/v1.21.8.0/s6-overlay-amd64.tar.gz /tmp/\nRUN tar xzf /tmp/s6-overlay-amd64.tar.gz -C / && rm /tmp/s6-overlay-amd64.tar.gz\n\nRUN apt-get update && apt-get install --no-install-recommends --yes rsync \\\n    # Clean apt cache\n    && rm -rf /var/lib/apt/lists/* \\\n    # UseContainerSupport: important\n    && sed -i '/MEM_OPTIONS=/c\\MEM_OPTIONS=\"-Xms$JVM_XMS -Xmx$JVM_XMX -XX:+ExitOnOutOfMemoryError -XX:+UseContainerSupport\"' /opt/rpki-validator-3/rpki-validator-3.sh  \\\n    # Move about config and set defaults (creates /config)\n    && mv /opt/rpki-validator-3/conf /config \\\n    && mv /opt/rpki-validator-3/preconfigured-tals/ /config \\\n    # Create data dir\n    && mkdir /data \\\n    # Listen to 0.0.0.0 instead of just localhost\n    && sed -i 's/server.address=localhost/server.address=0.0.0.0/g' ${CONFIG_DIR}/application.properties \\\n    # Load preconfigured-tals from /config\n    && sed -i 's:rpki\\.validator\\.preconfigured\\.trust\\.anchors\\.directory=./preconfigured-tals:rpki.validator.preconfigured.trust.anchors.directory=/config/preconfigured-tals:g' ${CONFIG_DIR}/application.properties \\\n    # Store data in /data\n    && sed -i 's:rpki\\.validator\\.data\\.path=.:rpki.validator.data.path=/data:g' ${CONFIG_DIR}/application.properties \\\n    # And rsync in /data/rsync\n    && sed -i 's:rpki\\.validator\\.rsync\\.local.storage\\.directory=.:rpki.validator.rsync.local.storage.directory=/data/:g' ${CONFIG_DIR}/application.properties \\\n    && useradd -M -d /opt/rpki-validator-3 rpki\n\n# https://github.com/just-containers/s6-overlay functionality\nRUN echo \"/data true rpki,32768:32768 0666 0777\\n\\\n/config true rpki,32768:32768 0666 0777\\n\" > /etc/fix-attrs.d/01-rpki-validator-3\n\n# Clean up xodus lockfile if it exists -- would block startup if it was there after\n# container was killed.\nRUN echo \"#!/usr/bin/execlineb -P\\n\\\nrm -f /data/db/xd.lck\\n\" > /etc/cont-init.d/02-remove-xodus-lockfile\n\n# rpki-validator-3 process in container runs as daemon user\nENTRYPOINT [\"/init\"]\nCMD s6-setuidgid rpki /opt/rpki-validator-3/rpki-validator-3.sh\n# Volumes are initialized with the files in them from container build time\nVOLUME /config /data\n"
}