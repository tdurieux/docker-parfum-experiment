{
  "startTime": 1674217705409,
  "endTime": 1674217706022,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 7,
        "columnEnd": 23
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 20,
        "columnEnd": 36
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 30,
        "columnEnd": 46
      }
    }
  ],
  "repairedDockerfile": "FROM node:12.13-alpine3.9\n\n# Switch to Apline Linux Mirror of Clarkson University:\n# https://mirror.clarkson.edu/distributions.html#alpine\n# This fixes an issue with hanging fetch commands in CI, see also\n# https://github.com/gliderlabs/docker-alpine/issues/307#issuecomment-427465925\nRUN sed -i 's/http\\:\\/\\/dl-cdn.alpinelinux.org/http\\:\\/\\/mirror.clarkson.edu/g' /etc/apk/repositories\n\nRUN apk add --no-cache bash yarn\n\nWORKDIR /opt/organice\n\nCOPY package.json yarn.lock /opt/organice/\n\nRUN yarn install && yarn cache clean;\n\nCOPY . /opt/organice\n\nRUN bin/transient_env_vars.sh bait >> .env\n\nRUN yarn global add serve \\\n    && yarn build \\\n    && yarn cache clean \\\n    && rm -rf node_modules && yarn cache clean;\n\n# No root privileges are required. Create and switch to non-root user.\n# https://docs.docker.com/develop/develop-images/dockerfile_best-practices/#user\nRUN addgroup -S organice \\\n        && adduser -S organice -G organice \\\n        && chown -R organice: .\n\nUSER organice\n\nENV NODE_ENV=production\nEXPOSE 5000\nENTRYPOINT [\"./bin/entrypoint.sh\"]"
}