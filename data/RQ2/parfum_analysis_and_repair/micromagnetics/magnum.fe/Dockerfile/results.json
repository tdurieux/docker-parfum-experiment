{
  "startTime": 1674218830584,
  "endTime": 1674218832244,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 36
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Builds a Docker image with the official FEniCS PPA packages\n# and magnum.fe.\n#\n# Authors:\n# Claas Abert <claas.abert@tuwien.ac.at>\n#\n# Based on the work of\n# Lizao Li <lixx1445@umn.edu>\n# Jack S. Hale <jack.hale@uni.lu>\n# (https://bitbucket.org/garth-wells/fenics-virtual/src/4efc1c04b8c83b50497d2c1e7d239019bd429569/docker/stable-ppa/Dockerfile)\nFROM phusion/baseimage:0.9.12\n#FROM fenicsproject/stable\nMAINTAINER Claas Abert <claas.abert@tuwien.ac.at>\n\nENV HOME /root\n\n# Install add-apt-repository\nRUN apt-get -qq update && \\\n    apt-get -qqy --no-install-recommends install python-software-properties && rm -rf /var/lib/apt/lists/*;\n\n# Install the basic environment and fenics from the PPA\nRUN add-apt-repository -y ppa:fenics-packages/fenics && \\\n    apt-get -qq update && \\\n    apt-get -qqy --no-install-recommends install xauth fenics ipython && rm -rf /var/lib/apt/lists/*;\n\n# Install basic tools and compilers\nRUN apt-get -qq update && \\\n    apt-get -qqy --no-install-recommends install cmake swig g++ git gfortran && rm -rf /var/lib/apt/lists/*;\n\n# Install CBC.Block\nRUN cd /tmp && \\\n    git clone https://bitbucket.org/micromagnetics/cbc.block.git && \\\n    cd cbc.block && \\\n    python setup.py install\n\n# Install Bempp\nRUN apt-get -qq update && \\\n    apt-get -qqy --no-install-recommends install python-m2crypto && rm -rf /var/lib/apt/lists/*;\n\nRUN cd /tmp && \\\n    git clone -b features/python-pseudoinverse https://github.com/micromagnetics/bempp.git\n\nCOPY virtual/files/bempp_setup.cfg /tmp/bempp/\n\nRUN cd /tmp/bempp && \\\n    python bempp_setup.py -b bempp_setup.cfg && \\\n    python bempp_setup.py -c bempp_setup.cfg && \\\n    python bempp_setup.py -i all bempp_setup.cfg\n\nENV PYTHONPATH /usr/local/bempp/python:$PYTHON_PATH\n\n\n\n# Install GMSH\nRUN apt-get -qq update && \\\n    apt-get -qqy --no-install-recommends install libgmsh-dev && rm -rf /var/lib/apt/lists/*;\n\n# Install magnum.msh\nRUN cd /tmp && \\\n    git clone https://github.com/micromagnetics/magnum.msh.git magnum.msh && \\\n    cd /tmp/magnum.msh && \\\n    mkdir build && \\\n    cd build && \\\n    cmake .. && \\\n    make && \\\n    make install && \\\n    ldconfig\n\n# Install magnum.fe\nCOPY . /tmp/magnum.fe\n\nRUN cd /tmp/magnum.fe && \\\n    rm -rf build && \\\n    mkdir build && \\\n    cd build && \\\n    cmake .. && \\\n    make && \\\n    make install && \\\n    ldconfig\n\n# Remove magnum.fe source files\nRUN cd /usr/local/lib/python2.7/dist-packages/magnumfe && \\\n    find . -name \"*.py\"| xargs rm\n\n# Cleanup to save space\nRUN apt-get clean && \\ \n    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\n# Set the HOME environment variable, otherwise import dolfin crashes\nRUN echo \"/root\" > /etc/container_environment/HOME\n\n# Set LIBGL_ALWAYS_INDIRECT to suppress libGL warning message.\nRUN echo \"y\" > /etc/container_environment/LIBGL_ALWAYS_INDIRECT\n\nCMD [\"/sbin/my_init\"]\n"
}