{
  "startTime": 1674253342754,
  "endTime": 1674253343923,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 2,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 2,
        "columnEnd": 66
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 2,
        "columnEnd": 42
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 2,
        "columnEnd": 73
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 2,
        "columnEnd": 132
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 2,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 2,
        "columnEnd": 54
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 2,
        "columnEnd": 66
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 2,
        "columnEnd": 42
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 2,
        "columnEnd": 73
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 2,
        "columnEnd": 132
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 2,
        "columnEnd": 40
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 2,
        "columnEnd": 54
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Build Diablo\nFROM ubuntu:16.04 as diablo-builder\nARG DEBIAN_FRONTEND=noninteractive\n\n# Install the required packages\nRUN \\\n  apt-get update && \\\n  apt-get install --no-install-recommends -y bison build-essential cmake flex g++-multilib && rm -rf /var/lib/apt/lists/*;\n\nCOPY modules/diablo /tmp/diablo/\nRUN \\\n  mkdir -p /tmp/diablo/build/ && \\\n  cd /tmp/diablo/build/ && \\\n  cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/opt/diablo -DUseInstallPrefixForLinkerScripts=on .. && \\\n  make -j$(nproc) install\n\n# Actual docker image\nFROM debian:stretch\nARG DEBIAN_FRONTEND=noninteractive\n\nRUN \\\n\n  dpkg --add-architecture i386 && \\\n  sed -i 's/# \\(.*multiverse$\\)/\\1/g' /etc/apt/sources.list && \\\n  apt-get update && \\\n  apt-get install --no-install-recommends -y htop man ssh vim wget && \\\n  apt-get install --no-install-recommends -y binutils-multiarch gcc-multilib gfortran zlib1g:i386 && \\\n  # ACTC \\\n  apt-get install --no-install-recommends -y binutils-dev default-libmysqlclient-dev libwebsockets-dev mysql-client openjdk-8-jre-headless python python-pip && \\\n  pip install --no-cache-dir doit==0.29.0 && \\\n  # UWSGI interface \\\n  apt-get install --no-install-recommends -y uwsgi-plugin-python && \\\n  # Development \\\n  apt-get install --no-install-recommends -y bison cmake flex g++-multilib gdb && rm -rf /var/lib/apt/lists/*;\n\n# Install the prebuilts\nCOPY docker/actc/install_prebuilts.sh docker/actc/patch_gcc.sh /tmp/\nRUN /tmp/install_prebuilts.sh\n\n# Install Diablo\nCOPY --from=diablo-builder /opt/diablo /opt/diablo\n\n# Copy the modules and install them\nRUN mkdir -p /opt/framework_buildtime && ln -s /opt/framework_buildtime /opt/framework\nCOPY modules/ /opt/framework/\nCOPY docker/actc/install_modules.sh /tmp/\nRUN /tmp/install_modules.sh\n\n# Install the UWSGI service\nCOPY docker/actc/service/ /opt/service\nCMD [ \"uwsgi\", \"--http-socket\", \":80\", \"--ini\", \"/opt/service/uwsgi.ini\" ]\n\n# Clean up\nRUN rm -rf /tmp/*\n"
}