{
  "startTime": 1674253526917,
  "endTime": 1674253527525,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 13,
        "columnEnd": 24
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 18,
        "columnEnd": 37
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 18,
        "columnEnd": 37
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM golang:1.17.11 AS builder\n\nARG BUILDARGS\n\n# Build all the binaries at once, so that the final targets don't require having\n# Go installed to build each of them.\nWORKDIR /src\nCOPY . .\nENV CGO_ENABLED=1\nRUN --mount=type=cache,sharing=locked,id=gomod,target=/go/pkg/mod/cache \\\n\t--mount=type=cache,sharing=locked,id=goroot,target=/root/.cache/go-build \\\n\tgo build -trimpath -o=. -ldflags=\"-w -s -X=go.vocdoni.io/dvote/internal.Version=$(git describe --always --tags --dirty --match='v[0-9]*')\" $BUILDARGS \\\n\t./cmd/dvotenode ./cmd/vochaintest ./cmd/voconed\n\nFROM node:lts-bullseye-slim AS test\n\nCOPY --from=builder /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/ca-certificates.crt\nWORKDIR /app\nRUN apt update && apt install --no-install-recommends -y curl && rm -rf /var/lib/apt/lists/*;\nCOPY --from=builder /src/vochaintest ./\nCOPY ./dockerfiles/testsuite/js ./js\nRUN cd js && npm install && npm cache clean --force;\n\nFROM debian:11.3-slim\n\nCOPY --from=builder /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/ca-certificates.crt\nWORKDIR /app\nCOPY --from=builder /src/dvotenode ./\nCOPY --from=builder /src/voconed ./\nENTRYPOINT [\"/app/dvotenode\"]\n"
}