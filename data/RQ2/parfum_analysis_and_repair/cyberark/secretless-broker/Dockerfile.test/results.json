{
  "startTime": 1674253111833,
  "endTime": 1674253112642,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 17,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 23
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM golang:1.17-alpine\nMAINTAINER CyberArk Software Ltd.\nLABEL id=\"secretless-test-runner\"\n\n# On CyberArk dev laptops, golang module dependencies are downloaded with a\n# corporate proxy in the middle. For these connections to succeed we need to\n# configure the proxy CA certificate in build containers.\n#\n# To allow this script to also work on non-CyberArk laptops where the CA\n# certificate is not available, we copy the (potentially empty) directory\n# and update container certificates based on that, rather than rely on the\n# CA file itself.\nADD build_ca_certificate /usr/local/share/ca-certificates/\nRUN update-ca-certificates\n\nWORKDIR /secretless\n\nRUN apk add --no-cache -u curl \\\n               gcc \\\n               git \\\n               mercurial \\\n               musl-dev\n\nCOPY go.mod go.sum /secretless/\nCOPY third_party/ /secretless/third_party\n\nRUN go mod download\n\n# go-junit-report => Convert go test output to junit xml\n# gocov => converts native coverage output to gocov's JSON interchange format\n# gocov-xml => converts gocov format to XML for use with Jenkins/Cobertura\nRUN go get -u github.com/jstemmer/go-junit-report && \\\n    go get github.com/axw/gocov/gocov && \\\n    go get github.com/AlekSi/gocov-xml\n"
}