{
  "startTime": 1674255342888,
  "endTime": 1674255344544,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 81,
        "lineEnd": 81,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 100,
        "lineEnd": 100,
        "columnStart": 42,
        "columnEnd": 59
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 98,
        "lineEnd": 98,
        "columnStart": 82,
        "columnEnd": 123
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 87,
        "lineEnd": 87,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 96,
        "lineEnd": 96,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 118,
        "lineEnd": 118,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 119,
        "lineEnd": 119,
        "columnStart": 4,
        "columnEnd": 35
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:19.10\n\nENV DEBIAN_FRONTEND noninteractive\nENV M2_HOME=/usr/share/maven\nENV JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64\nENV PATH=$PATH:$JAVA_HOME/bin:opt/conda/bin:~/.local/bin\n\n\n#Note: This layer is needed to get PYTHON PIP and PYTHON SETUPTOOLS upgraded. For some reason this can't be combined and it causes and error when using pip3.\nRUN mkdir -p /workdir && chmod 777 /workdir && \\\n    apt-get update -yqq && \\ \n    apt-get install -yqq --no-install-recommends sudo curl git wget tzdata libjpeg-dev bzip2 && \\\n    apt-get install --no-install-recommends -yqq python3 python3-pip && \\\n    pip3 --no-cache-dir install --upgrade pip setuptools && \\\n    #python3-venv python3-all-dev python3-setuptools build-essential python3-wheel && \\\n    #pip3 --no-cache-dir install pip setuptools && \\\n    echo \"--------------------------------------\" && \\\n    echo \"----------- 1st CLEANUP --------------\" && \\\n    echo \"--------------------------------------\" && \\\n    apt-get -y autoclean && apt-get -y autoremove && \\\n    apt-get -y purge $(dpkg --get-selections | grep deinstall | sed s/deinstall//g) && \\\n    rm -rf /var/lib/apt/lists/* /tmp/*\n\nRUN apt-get update -yqq && \\ \n#Tensorflow && \\\n    echo \"--------------------------------------\" && \\\n    echo \"----------- TENSORFLOW ---------------\" && \\\n    echo \"--------------------------------------\" && \\\n    pip3 install --no-cache-dir tensorflow keras  && \\\n#Torch && \\\n    echo \"--------------------------------------\" && \\\n    echo \"----------- TORCH --------------------\" && \\\n    echo \"--------------------------------------\" && \\\n    pip3 install --no-cache-dir torch torchvision  && \\\n#NodeJS && \\\n    echo \"--------------------------------------\" && \\\n    echo \"----------- NODEJS Core---------------\" && \\\n    echo \"--------------------------------------\" && \\\n    apt-get install -yqq --no-install-recommends nodejs npm && \\\n    curl -f https://www.npmjs.com/install.sh | sudo sh && npm install -g n && n 12.13.0 && \\\n    npm install -g configurable-http-proxy && \\\n#Core Python Install\n    echo \"--------------------------------------\" && \\\n    echo \"----------- PYTHON Core --------------\" && \\\n    echo \"--------------------------------------\" && \\\n    #Fix for Juptyer-Console && \\\n    pip3 install --no-cache-dir 'prompt-toolkit==2.0.10' && \\\n    pip3 install --no-cache-dir 'six==1.12' && \\\n    pip3 install --no-cache-dir mypy pylint yapf pytest ipython tornado jupyter nbdime \\\n                                jupyterlab jupyter-lsp python-language-server[all] jupyterhub && \\\n    jupyter labextension install @jupyterlab/toc && \\\n    jupyter labextension install jupyterlab-favorites && \\\n    jupyter labextension install jupyterlab-recents && \\\n    jupyter labextension install @jupyter-widgets/jupyterlab-manager && \\\n    jupyter labextension install @krassowski/jupyterlab-lsp && \\\n#Bash  && \\\n    echo \"--------------------------------------\" && \\\n    echo \"----------- BASH ---------------------\" && \\\n    echo \"--------------------------------------\" && \\\n    pip3 install --no-cache-dir bash_kernel && \\\n    python3 -m bash_kernel.install && \\\n#Markdown  && \\\n    echo \"--------------------------------------\" && \\\n    echo \"----------- MARKDOWN -----------------\" && \\\n    echo \"--------------------------------------\" && \\\n    pip3 install --no-cache-dir markdown-kernel && \\\n    python3 -m markdown_kernel.install && \\\n#Python && \\\n    echo \"--------------------------------------\" && \\\n    echo \"----------- PYTHON -------------------\" && \\\n    echo \"--------------------------------------\" && \\\n    pip3 install --no-cache-dir loguru pysnooper numpy scipy pandas pyarrow>=0.14.0 dask[complete] scikit-learn xgboost matplotlib bokeh holoviews[recommended] hvplot tabulate JPype1==0.6.3 JayDeBeApi sqlparse requests[socks] lxml notifiers && \\\n    jupyter labextension install @pyviz/jupyterlab_pyviz && \\\n#Add-ons && \\\n    echo \"--------------------------------------\" && \\\n    echo \"----------- ADDONS -------------------\" && \\\n    echo \"--------------------------------------\" && \\\n    pip3 install --no-cache-dir nbgitpuller && \\\n    jupyter labextension install jupyterlab-drawio && \\\n    jupyter labextension install @wallneradam/run_all_buttons && \\\n    jupyter labextension install jupyterlab-spreadsheet && \\\n    pip install --no-cache-dir --upgrade jupyterlab-git && \\\n    jupyter lab build && \\\n#Julia && \\\n    echo \"--------------------------------------\" && \\\n    echo \"----------- JULIA --------------------\" && \\\n    echo \"--------------------------------------\" && \\\n    apt-get install --no-install-recommends -yq julia && \\\n    julia -e 'empty!(DEPOT_PATH); push!(DEPOT_PATH, \"/usr/share/julia\"); using Pkg; Pkg.add(\"IJulia\")' && \\\n    cp -r /root/.local/share/jupyter/kernels/julia-* /usr/local/share/jupyter/kernels/ && \\\n    chmod -R +rx /usr/share/julia/ && \\\n    chmod -R +rx /usr/local/share/jupyter/kernels/julia-*/ && \\\n#C++ && \\\n    echo \"--------------------------------------\" && \\\n    echo \"----------- C++ ----------------------\" && \\\n    echo \"--------------------------------------\" && \\\n    apt-get install --no-install-recommends -yqq libtinfo5 && \\\n    mkdir -p ~/pre && cd ~/pre && \\\n    wget https://root.cern.ch/download/cling/cling_2019-12-08_ubuntu18.tar.bz2 && tar jxf cling_2019-12-08_ubuntu18.tar.bz2 && \\\n    cd cling_2019-12-08_ubuntu18 && cp -r . /usr/. && cd ~ && rm -r pre && \\\n    cd /usr/share/cling/Jupyter/kernel && pip3 install --no-cache-dir -e . && \\\n    jupyter kernelspec install cling-cpp11 && jupyter kernelspec install cling-cpp14 && jupyter kernelspec install cling-cpp17 && jupyter kernelspec install cling-cpp1z && \\\n#NodeJS  && \\\n    echo \"--------------------------------------\" && \\\n    echo \"----------- NodeJS -------------------\" && \\\n    echo \"--------------------------------------\" && \\\n    npm install -g --unsafe-perm ijavascript && \\\n    npm install -g --unsafe-perm itypescript && \\\n    its --ts-hide-undefined --install=global && \\\n    ijsinstall --hide-undefined --install=global && \\\n    npm cache clean --force && \\\n#Java\n    echo \"--------------------------------------\" && \\\n    echo \"----- JAVA (Need for beakerx) --------\" && \\\n    echo \"--------------------------------------\" && \\\n    echo \"openjdk-14-jdk is not compatible with beakerx and gradle\" && \\\n    echo \"openjdk-11-jdk seems to be minimal version (kotlin does not work)\" && \\\n    echo \"openjdk-8-jdk latest version supported by kotin from beakerx and needs to be installed BEFORE maven and gradle\" && \\\n    apt-get install --no-install-recommends -y openjdk-8-jdk && \\\n    apt-get install --no-install-recommends -y maven gradle && \\\n#Beakerx\n    echo \"--------------------------------------\" && \\\n    echo \"----------- BEAKERX ------------------\" && \\\n    echo \"--------------------------------------\" && \\\n    pip3 install --no-cache-dir py4j beakerx && \\\n    beakerx install && \\\n    #jupyter labextension install beakerx-jupyterlab\n    #cd /root && \\\n    #git clone https://github.com/twosigma/beakerx.git && \\\n    #cd beakerx/beakerx && \\ \n    #pip install -r requirements.txt && \\\n    #cd .. && \\\n    #beakerx install && \\\n    #beakerx_databrowser install && \\\n    jupyter labextension install beakerx-jupyterlab && \\\n#clean up\n    echo \"--------------------------------------\" && \\\n    echo \"----------- CLEANUP ------------------\" && \\\n    echo \"--------------------------------------\" && \\\n    apt-get -y autoclean && apt-get -y autoremove && \\\n    apt-get -y purge $(dpkg --get-selections | grep deinstall | sed s/deinstall//g) && \\\n    rm -rf /var/lib/apt/lists/* /tmp/* && rm cling_2019-12-08_ubuntu18.tar.bz2\n\nADD settings/jupyter_notebook_config.py /etc/jupyter/\nADD settings/jupyterhub_config.py /etc/jupyterhub/\nADD StartHere.ipynb /etc/skel\nCOPY scripts /scripts\n\nRUN chmod -R 755 /scripts && \\\n    jupyter trust /etc/skel/StartHere.ipynb\n\n#RUN curl -sSL https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -o /tmp/miniconda.sh && \\\n#    bash /tmp/miniconda.sh -bfp /usr/local && \\\n#    rm -rf /tmp/miniconda.sh && \\\n#    conda install -y python=3 && \\\n#    conda update conda && \\\n#    conda clean --all --yes\n\n#RUN conda install cling -c QuantStack -c conda-forge -y && \\\n#    conda install xeus-cling -c QuantStack -c conda-forge -y && \\\n#    conda clean --all --yes\n\n#EXAMPLES\n#COPY examples /examples\n#RUN echo \"--------------------------------------\" && \\\n#    echo \"----------- EXAMPLES -----------------\" && \\\n#    echo \"--------------------------------------\" && \\\n#    cd /examples && \\\n#    cp /usr/share/cling/Jupyter/kernel/cling.ipynb . && \\\n#    mkdir /examples/tensorflow && cd /examples/tensorflow && \\\n#    wget https://raw.githubusercontent.com/tensorflow/docs/master/site/en/tutorials/keras/classification.ipynb && \\\n#    wget https://raw.githubusercontent.com/tensorflow/docs/master/site/en/tutorials/keras/overfit_and_underfit.ipynb && \\\n#    wget https://raw.githubusercontent.com/tensorflow/docs/master/site/en/tutorials/keras/regression.ipynb && \\\n#    wget https://raw.githubusercontent.com/tensorflow/docs/master/site/en/tutorials/keras/save_and_load.ipynb && \\\n#    wget https://raw.githubusercontent.com/tensorflow/docs/master/site/en/tutorials/keras/text_classification.ipynb && \\\n#    wget https://raw.githubusercontent.com/tensorflow/docs/master/site/en/tutorials/keras/text_classification_with_hub.ipynb && \\\n#    cd /examples && \\\n#    git clone https://github.com/twosigma/beakerx.git && \\\n#    cp -R /examples/beakerx/doc/. /examples && \\\n#    rm README.md && \\\n#    rm -R beakerx && \\\n#    mkdir /examples/julia && \\\n#    cd  /examples/julia && \\\n#    wget https://raw.githubusercontent.com/binder-examples/demo-julia/master/demo.ipynb && \\\n#    cd /workdir && \\\n#    cp -R /examples/ . && \\\n#    chmod -R 777 . && \\\n#    echo \"END\"\n\nEXPOSE 8000\n\nCMD \"/scripts/sys/init.sh\"\n"
}