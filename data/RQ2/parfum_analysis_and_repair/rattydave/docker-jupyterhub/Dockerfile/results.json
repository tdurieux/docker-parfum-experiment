{
  "startTime": 1674255827756,
  "endTime": 1674255828957,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 104
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 30
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:20.04\n\nENV DEBIAN_FRONTEND noninteractive\nENV M2_HOME=/usr/share/maven\nENV JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64\nENV PATH=$PATH:$JAVA_HOME/bin:opt/conda/bin:~/.local/bin\n\n#Note: This layer is needed to get PYTHON PIP and PYTHON SETUPTOOLS upgraded. For some reason this can't be combined and it causes and error when using pip3.\nRUN mkdir -p /workdir && chmod 777 /workdir && \\\n    apt-get update -yqq && \\ \n    apt-get install -yqq --no-install-recommends sudo curl git wget tzdata libjpeg-dev bzip2 && \\\n    apt-get install --no-install-recommends -yqq python3 python3-pip && \\\n    apt-get install --no-install-recommends -yqq lib32ncurses6 && \\\n    pip3 --no-cache-dir install --upgrade pip setuptools && \\\n\n    #Julia && \\\n    echo \"--------------------------------------\" && \\\n    echo \"----------- JULIA INSTALL ------------\" && \\\n    echo \"--------------------------------------\" && \\\n    apt-get install --no-install-recommends -yqq julia && \\\n\n    apt-get -y autoclean && apt-get -y autoremove && \\\n    apt-get -y purge $(dpkg --get-selections | grep deinstall | sed s/deinstall//g) && \\\n    rm -rf /var/lib/apt/lists/* /tmp/*\n\nRUN curl -f -sSL https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -o /tmp/miniconda.sh && \\\n    bash /tmp/miniconda.sh -bfp /usr/local && \\\n    rm -rf /tmp/miniconda.sh && \\\n    conda install -y python=3 && \\\n    conda update conda && \\\n    conda clean --all --yes && \\\n    conda clean --force-pkgs-dirs -y\n\nRUN conda install -c QuantStack -c conda-forge -c pytorch -c krinsman jupyterhub jupyterlab notebook nbgitpuller matplotlib tensorflow xeus-cling && \\\n    conda install -c pytorch pytorch torchvision torchaudio torchtext && \\\n    ##conda install -c conda-forge xeus-cling && \\\n    conda install -c conda-forge ipywidgets beakerx && \\\n    conda install -c conda-forge bash_kernel && \\\n    conda install -c conda-forge nodejs && \\\n    conda clean --all --yes && \\\n    conda clean --force-pkgs-dirs -y\n#RUN conda install -c krinsman ijavascript && \\\n#    conda clean --all --yes\n\n#RUN npm rebuild\n#RUN npm install -g --unsafe-perm ijavascript && ijsinstall --hide-undefined --install=global\n\n#RUN npm install -g --unsafe-perm itypescript && its --ts-hide-undefined --install=global\n\n#NodeJS\n#RUN conda install nodejs\n#RUN npm install -g ijavascript\n#RUN ijsinstall\n\n#NodeJS\n#RUN echo \"--------------------------------------\" && \\\n#    echo \"----------- NodeJS -------------------\" && \\\n#    echo \"--------------------------------------\" && \\\n#    npm install -g --unsafe-perm ijavascript && \\\n#    npm install -g --unsafe-perm itypescript && \\\n#    its --ts-hide-undefined --install=global && \\\n#    ijsinstall --hide-undefined --install=global && \\\n#    npm cache clean --force\n\n#Julia\nRUN echo \"--------------------------------------\" && \\\n    echo \"----------- JULIA LINK TO JUPYTER ----\" && \\\n    echo \"--------------------------------------\" && \\\n    julia -e 'empty!(DEPOT_PATH); push!(DEPOT_PATH, \"/usr/share/julia\"); using Pkg; Pkg.add(\"IJulia\")'  && \\\n    cp -r /root/.local/share/jupyter/kernels/julia-* /usr/local/share/jupyter/kernels/  && \\\n    chmod -R +rx /usr/share/julia/  && \\\n    chmod -R +rx /usr/local/share/jupyter/kernels/julia-*/\n\n#Add Extentions\n#RUN jupyter labextension install jupyterlab-drawio\n#RUN jupyter labextension install @wallneradam/run_all_buttons\n#RUN jupyter labextension install jupyterlab-spreadsheet\n\nADD settings/jupyter_notebook_config.py /etc/jupyter/\nADD settings/jupyterhub_config.py /etc/jupyterhub/\nADD StartHere.ipynb /etc/skel\nCOPY scripts /scripts\n\nRUN chmod -R 755 /scripts && \\\n    jupyter trust /etc/skel/StartHere.ipynb\n\nEXPOSE 8000\n\nCMD \"/scripts/sys/init.sh\"\n"
}