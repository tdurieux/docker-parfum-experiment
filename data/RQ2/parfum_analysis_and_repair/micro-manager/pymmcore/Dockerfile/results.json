{
  "startTime": 1674220978346,
  "endTime": 1674220979960,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 82
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 23,
        "columnStart": 22,
        "columnEnd": 12
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# This dockerfile creates a minimal pymmcore image for demonstration purposes\n# (for example, DemoCamera should work).\n\nFROM ubuntu:18.04\n\n# System packages\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n        bzip2 \\\n        bc \\\n        build-essential \\\n        cmake \\\n        curl \\\n        g++ \\\n        gfortran \\\n        libboost-dev \\\n        libboost-thread-dev \\\n        libtool \\\n        autoconf \\\n        automake \\\n        git \\\n        pkg-config \\\n        software-properties-common \\\n        unzip \\\n        wget \\\n        && \\\n    apt-get clean && \\\n    apt-get autoremove && \\\n    rm -rf /var/lib/apt/lists/*\nRUN addgroup --gid 1001 python && \\\n    useradd --uid 1001 --gid 1001 python\n\nRUN git clone https://github.com/micro-manager/micro-manager.git\nRUN cd micro-manager && \\\n    ./autogen.sh && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --without-java && \\\n    make && \\\n    # will be installed to /usr/local/lib/micro-manager/\n    make install\nENV MMCORE_PATH=/usr/local/lib/micro-manager/\nENV MMCONFIG_DEMO_PATH=/micro-manager/bindist/any-platform/MMConfig_demo.cfg\n\n# Install miniconda to /miniconda\nRUN curl -f -LO https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh\nRUN bash Miniconda3-latest-Linux-x86_64.sh -p /miniconda -b\nRUN rm Miniconda3-latest-Linux-x86_64.sh\nENV PATH=/miniconda/bin:${PATH}\n\nRUN conda update -y conda && \\\n    conda install -y python=3.7.6 numpy && \\\n    pip install --no-cache-dir --upgrade pip && \\\n    pip install --no-cache-dir pymmcore\n"
}