{
  "startTime": 1674218207145,
  "endTime": 1674218208077,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 7,
        "columnEnd": 77
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 31,
        "columnStart": 7,
        "columnEnd": 10
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 46,
        "lineEnd": 55,
        "columnStart": 12,
        "columnEnd": 34
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 31,
        "columnStart": 7,
        "columnEnd": 10
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 46,
        "lineEnd": 55,
        "columnStart": 12,
        "columnEnd": 34
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nvidia/cudagl:11.4.2-base-ubuntu20.04\n\nRUN apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/3bf863cc.pub\n\n#Run the frontend first so it doesn't throw an error later\nRUN export DEBIAN_FRONTEND=noninteractive \\\n && apt-get update \\\n && export TZ=\"America/New_York\" \\\n && apt-get install --no-install-recommends -y keyboard-configuration tzdata \\\n && ln -fs \"/usr/share/zoneinfo/$TZ\" /etc/localtime \\\n && dpkg-reconfigure --frontend noninteractive tzdata \\\n && apt-get clean && rm -rf /var/lib/apt/lists/*;\n\n# General tools\nRUN apt-get update \\\n    && apt-get install --no-install-recommends -y \\\n      build-essential \\\n      cmake \\\n      cppcheck \\\n      gdb \\\n      git \\\n      lsb-release \\\n      software-properties-common \\\n      sudo \\\n      neovim \\\n      wget \\\n      net-tools \\\n      iputils-ping \\\n      tmux \\\n      locales \\\n      python3-pip \\\n      curl \\\n    && apt-get clean && rm -rf /var/lib/apt/lists/*;\n\n# Set locales\nRUN sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen && \\\n    locale-gen\nENV LC_ALL en_US.UTF-8\nENV LANG en_US.UTF-8\nENV LANGUAGE en_US:en\n\n# ROS Setup\nRUN sudo apt-get update \\\n    && sudo sh -c 'echo \"deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main\" > /etc/apt/sources.list.d/ros-latest.list' \\\n    && curl -f -s https://raw.githubusercontent.com/ros/rosdistro/master/ros.asc | sudo apt-key add - \\\n    && sudo apt-get update \\\n    && sudo apt-get install --no-install-recommends -y \\\n      python3-catkin-tools \\\n      python3-rosdep \\\n      python3-rosinstall \\\n      python3-vcstool \\\n      ros-noetic-catkin \\\n      ros-noetic-rosbash \\\n      ros-noetic-desktop \\\n      ros-noetic-pcl-ros \\\n      ros-noetic-tf2-geometry-msgs \\\n    && sudo rosdep init \\\n    && rosdep update && rm -rf /var/lib/apt/lists/*;\n\nCOPY autonomy_core/base/docker/entrypoint.sh /entrypoint.sh\nENTRYPOINT [\"/entrypoint.sh\"]\n"
}