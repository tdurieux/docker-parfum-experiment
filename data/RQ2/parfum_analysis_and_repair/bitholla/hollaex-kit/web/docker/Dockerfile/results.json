{
  "startTime": 1674248195524,
  "endTime": 1674248196203,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 32
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# build environment\nFROM node:12.22.7-buster as build\nENV NODE_OPTIONS=--max_old_space_size=3072\nWORKDIR /app\nCOPY package.json /app/package.json\nRUN npm config set unsafe-perm true && \\\n    npm install -g node-gyp && \\\n    npm install --loglevel=error && npm cache clean --force;\nCOPY . /app\nRUN npm run build\n\nFROM nginx:1.16.0-alpine\nRUN apk add --update \\\n    curl \\\n    && rm -rf /var/cache/apk/*\nCOPY --from=build /app/build /usr/share/nginx/html\nRUN rm /etc/nginx/conf.d/default.conf\nCOPY docker/nginx.conf /etc/nginx/conf.d\n# Changing the user to 'nginx'\nRUN chown -R nginx:nginx /var/cache/nginx && \\\n    chown -R nginx:nginx /var/log/nginx && \\\n    chown -R nginx:nginx /etc/nginx/conf.d && \\\n    touch /var/run/nginx.pid && \\\n    chown -R nginx:nginx /var/run/nginx.pid\nEXPOSE 80 443\nCMD [\"nginx\", \"-g\", \"daemon off;\"]\n\n\n\n"
}