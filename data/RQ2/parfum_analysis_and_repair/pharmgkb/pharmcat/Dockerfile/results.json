{
  "startTime": 1674215433975,
  "endTime": 1674215434719,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 51,
        "columnEnd": 62
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 55,
        "columnEnd": 66
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 55,
        "columnEnd": 66
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 79
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 83
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 83
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 81
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 116
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 82
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 70
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# Base Dockerfile for PharmCAT\n#\nFROM python:3.9\n\n# apt-utils line due to https://github.com/phusion/baseimage-docker/issues/319\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends apt-utils apt-transport-https gnupg && \\\n    apt-get -y upgrade && \\\n    apt-get -y --no-install-recommends install bzip2 build-essential wget && rm -rf /var/lib/apt/lists/*;\n\n# install java\nRUN wget https://adoptopenjdk.jfrog.io/adoptopenjdk/api/gpg/key/public\nRUN gpg --batch --no-default-keyring --keyring ./adoptopenjdk-keyring.gpg --import public\nRUN gpg --batch --no-default-keyring --keyring ./adoptopenjdk-keyring.gpg --export --output adoptopenjdk-archive-keyring.gpg\nRUN rm adoptopenjdk-keyring.gpg\nRUN mv adoptopenjdk-archive-keyring.gpg /usr/share/keyrings && \\\n    chown root:root /usr/share/keyrings/adoptopenjdk-archive-keyring.gpg\nRUN echo \"deb [signed-by=/usr/share/keyrings/adoptopenjdk-archive-keyring.gpg] https://adoptopenjdk.jfrog.io/adoptopenjdk/deb bullseye main\" \\\n    | tee /etc/apt/sources.list.d/adoptopenjdk.list\nRUN apt-get update && \\\n    apt-get -y install --no-install-recommends adoptopenjdk-16-hotspot && rm -rf /var/lib/apt/lists/*;\n\n\nRUN mkdir /pharmcat\nWORKDIR /pharmcat\n# download fasta files\nRUN wget https://zenodo.org/record/5572839/files/GRCh38_reference_fasta.tar\nRUN tar -xf GRCh38_reference_fasta.tar && rm GRCh38_reference_fasta.tar\n\n\nENV BCFTOOLS_VERSION 1.14\nENV HTSLIB_VERSION 1.14\nENV SAMTOOLS_VERSION 1.14\n\n# download the suite of tools\nWORKDIR /usr/local/bin/\nRUN wget https://github.com/samtools/htslib/releases/download/${HTSLIB_VERSION}/htslib-${HTSLIB_VERSION}.tar.bz2\nRUN wget https://github.com/samtools/bcftools/releases/download/${BCFTOOLS_VERSION}/bcftools-${BCFTOOLS_VERSION}.tar.bz2\nRUN wget https://github.com/samtools/samtools/releases/download/${SAMTOOLS_VERSION}/samtools-${SAMTOOLS_VERSION}.tar.bz2\n\n# extract files for the suite of tools\nRUN tar -xjf /usr/local/bin/htslib-${HTSLIB_VERSION}.tar.bz2 -C /usr/local/bin/ && rm /usr/local/bin/htslib-${HTSLIB_VERSION}.tar.bz2\nRUN tar -xjf /usr/local/bin/bcftools-${BCFTOOLS_VERSION}.tar.bz2 -C /usr/local/bin/ && rm /usr/local/bin/bcftools-${BCFTOOLS_VERSION}.tar.bz2\nRUN tar -xjf /usr/local/bin/samtools-${SAMTOOLS_VERSION}.tar.bz2 -C /usr/local/bin/ && rm /usr/local/bin/samtools-${SAMTOOLS_VERSION}.tar.bz2\n\n# compile tools\nRUN cd /usr/local/bin/htslib-${HTSLIB_VERSION}/ && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"\nRUN cd /usr/local/bin/htslib-${HTSLIB_VERSION}/ && make && make install\nRUN cd /usr/local/bin/bcftools-${BCFTOOLS_VERSION}/ && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"\nRUN cd /usr/local/bin/bcftools-${BCFTOOLS_VERSION}/ && make && make install\nRUN cd /usr/local/bin/samtools-${SAMTOOLS_VERSION}/ && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"\nRUN cd /usr/local/bin/samtools-${SAMTOOLS_VERSION}/ && make && make install\n\n# cleanup\nRUN rm  -f /usr/local/bin/bcftools-${BCFTOOLS_VERSION}.tar.bz2\nRUN rm -rf /usr/local/bin/bcftools-${BCFTOOLS_VERSION}\nRUN rm  -f /usr/local/bin/htslib-${HTSLIB_VERSION}.tar.bz2\nRUN rm -rf /usr/local/bin/htslib-${HTSLIB_VERSION}\nRUN rm  -f /usr/local/bin/samtools-${SAMTOOLS_VERSION}.tar.bz2\nRUN rm -rf /usr/local/bin/samtools-${SAMTOOLS_VERSION}\n\n\nWORKDIR /pharmcat\n# setup python env\nCOPY src/scripts/preprocessor/PharmCAT_VCF_Preprocess_py3_requirements.txt ./\nRUN pip3 install --no-cache-dir -r PharmCAT_VCF_Preprocess_py3_requirements.txt\n\n# add pharmcat scripts\nCOPY src/scripts/preprocessor/*.py ./\nCOPY src/scripts/pharmcat ./\nRUN chmod 755 *.py\nRUN chmod 755 pharmcat\nCOPY pharmcat_positions.vcf* ./\nCOPY build/pharmcat.jar ./\n"
}