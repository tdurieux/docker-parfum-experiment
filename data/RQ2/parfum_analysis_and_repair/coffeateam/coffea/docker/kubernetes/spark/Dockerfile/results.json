{
  "startTime": 1674219780255,
  "endTime": 1674219781077,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 7,
        "columnEnd": 120
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 96,
        "lineEnd": 96,
        "columnStart": 4,
        "columnEnd": 61
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# Licensed to the Apache Software Foundation (ASF) under one or more\n# contributor license agreements.  See the NOTICE file distributed with\n# this work for additional information regarding copyright ownership.\n# The ASF licenses this file to You under the Apache License, Version 2.0\n# (the \"License\"); you may not use this file except in compliance with\n# the License.  You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\nARG base_img\n\nFROM $base_img\nWORKDIR /\n\n# Reset to root to run installation tasks\nUSER 0\n\nRUN mkdir ${SPARK_HOME}/python\n\n# add llvm dependencies\nRUN apk --no-cache add \\\n        bash \\\n\tautoconf \\\n\tautomake \\\n\tfreetype-dev \\\n\tg++ \\\n\tgcc \\\n\tcmake \\\n\tmake \\\n        libxml2-dev \\\n        python3-dev \\\n        ncurses-dev \\\n        openblas-dev \\\n        boost-dev \\\n        zlib-dev \\\n        flex \\\n        bison\n\nRUN ln -sf `which python3` `which python` && \\\n    cp -p /usr/bin/pip3.6 /usr/bin/pip && \\\n    cp -p /usr/bin/python3-config /usr/bin/python-config\n\nRUN python -m ensurepip && \\\n    # We remove ensurepip since it adds no functionality since pip is\n    # installed on the image and it just takes up 1.6MB on the image\n    rm -r /usr/lib/python*/ensurepip && \\\n    pip install --no-cache-dir --upgrade pip setuptools\n\nRUN pip install --no-cache-dir numpy six pytest numpy cython\nRUN pip install --no-cache-dir pandas\n\nARG ARROW_VERSION=0.12.0\nARG ARROW_SHA1=2ede75769e12df972f0acdfddd53ab15d11e0ac2\nARG ARROW_BUILD_TYPE=release\n\nENV ARROW_HOME=/usr/local \\\n    PARQUET_HOME=/usr/local\n\n#Download and build apache-arrow\nRUN mkdir /arrow \\\n    && apk add --no-cache curl \\\n    && curl -f -o /tmp/apache-arrow.tar.gz -SL https://github.com/apache/arrow/archive/apache-arrow-${ARROW_VERSION}.tar.gz \\\n    && echo \"$ARROW_SHA1 *apache-arrow.tar.gz\" | sha1sum /tmp/apache-arrow.tar.gz \\\n    && tar -xf /tmp/apache-arrow.tar.gz -C /arrow --strip-components 1 \\\n    && mkdir -p /arrow/cpp/build \\\n    && cd /arrow/cpp/build \\\n    && cmake -DCMAKE_BUILD_TYPE=$ARROW_BUILD_TYPE \\\n          -DCMAKE_INSTALL_LIBDIR=lib \\\n          -DCMAKE_INSTALL_PREFIX=$ARROW_HOME \\\n          -DARROW_PARQUET=on \\\n          -DARROW_PYTHON=on \\\n          -DARROW_PLASMA=on \\\n          -DARROW_BUILD_TESTS=OFF \\\n          .. \\\n    && make -j$(nproc) \\\n    && make install \\\n    && cd /arrow/python \\\n    && python setup.py build_ext --build-type=$ARROW_BUILD_TYPE --with-parquet \\\n    && python setup.py install \\\n    && rm -rf /arrow /tmp/apache-arrow.tar.gz\n\nRUN pip install --no-cache-dir py4j\nRUN pip install --no-cache-dir scipy\nRUN pip install --no-cache-dir jinja2\nRUN pip install --no-cache-dir cloudpickle\nRUN pip install --no-cache-dir lz4\n\n# configure LLVM using CMake\nRUN wget https://releases.llvm.org/8.0.0/llvm-8.0.0.src.tar.xz && \\\n    tar xf llvm-8.0.0.src.tar.xz && \\\n    cd llvm-8.0.0.src && mkdir build && cd build && cmake .. \\\n    -G \"Unix Makefiles\" -DLLVM_TARGETS_TO_BUILD=\"X86\" \\\n    -DCMAKE_BUILD_TYPE=MinSizeRel && \\\n    # build and install LLVM\n    make -j$(nproc) && make install && \\\n    # cleanup\n    cd ../../ && rm -r llvm-8.0.0.src llvm-8.0.0.src.tar.xz\n\nRUN pip install --no-cache-dir numba\n\nRUN pip install --no-cache-dir coffea\n\nCOPY python/pyspark ${SPARK_HOME}/python/pyspark\nCOPY python/lib ${SPARK_HOME}/python/lib\n\nENV PYSPARK_MAJOR_PYTHON_VERSION=\"3\"\nENV PYTHONPATH=/opt/spark/python/lib/pyspark.zip:$PYTHONPATH\n\nWORKDIR /opt/spark/work-dir\nENTRYPOINT [ \"/opt/entrypoint.sh\" ]\n\n# Specify the User that the actual main process will run as\nARG spark_uid=185\nUSER ${spark_uid}\n"
}