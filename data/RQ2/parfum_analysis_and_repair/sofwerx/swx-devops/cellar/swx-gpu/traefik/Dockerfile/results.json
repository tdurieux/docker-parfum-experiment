{
  "startTime": 1674216009218,
  "endTime": 1674216011052,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 128,
        "lineEnd": 128,
        "columnStart": 4,
        "columnEnd": 93
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 129,
        "lineEnd": 129,
        "columnStart": 4,
        "columnEnd": 86
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 169,
        "lineEnd": 169,
        "columnStart": 13,
        "columnEnd": 187
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 119,
        "lineEnd": 131,
        "columnStart": 4,
        "columnEnd": 84
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 111,
        "lineEnd": 111,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 112,
        "lineEnd": 112,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 113,
        "lineEnd": 113,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 142,
        "lineEnd": 142,
        "columnStart": 3,
        "columnEnd": 49
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 143,
        "lineEnd": 143,
        "columnStart": 3,
        "columnEnd": 55
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 144,
        "lineEnd": 144,
        "columnStart": 3,
        "columnEnd": 64
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 80,
        "lineEnd": 80,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 157,
        "lineEnd": 157,
        "columnStart": 4,
        "columnEnd": 72
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 168,
        "lineEnd": 168,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 80,
        "lineEnd": 80,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 157,
        "lineEnd": 157,
        "columnStart": 4,
        "columnEnd": 72
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 168,
        "lineEnd": 168,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 80,
        "lineEnd": 80,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 157,
        "lineEnd": 157,
        "columnStart": 4,
        "columnEnd": 72
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 168,
        "lineEnd": 168,
        "columnStart": 4,
        "columnEnd": 25
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 146,
        "lineEnd": 146,
        "columnStart": 4,
        "columnEnd": 100
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 147,
        "lineEnd": 147,
        "columnStart": 4,
        "columnEnd": 104
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 110,
        "lineEnd": 110,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 111,
        "lineEnd": 111,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 142,
        "lineEnd": 142,
        "columnStart": 3,
        "columnEnd": 57
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 143,
        "lineEnd": 143,
        "columnStart": 3,
        "columnEnd": 63
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 148,
        "lineEnd": 148,
        "columnStart": 4,
        "columnEnd": 82
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 80,
        "lineEnd": 80,
        "columnStart": 4,
        "columnEnd": 69
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 160,
        "lineEnd": 160,
        "columnStart": 4,
        "columnEnd": 96
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 171,
        "lineEnd": 171,
        "columnStart": 4,
        "columnEnd": 49
      }
    }
  ],
  "repairedDockerfile": "FROM ppc64le/debian:stretch\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n        ca-certificates \\\n        curl \\\n        wget \\\n    && rm -rf /var/lib/apt/lists/*\n\nRUN set -ex; \\\n    if ! command -v gpg > /dev/null; then \\\n        apt-get update; \\\n        apt-get install -y --no-install-recommends \\\n            gnupg2 \\\n            dirmngr \\\n        ; \\\n        rm -rf /var/lib/apt/lists/*; \\\n    fi\n\n# gcc for cgo\nRUN apt-get update \\\n && apt-get install -y --no-install-recommends \\\n        g++ \\\n        gcc \\\n        libc6-dev \\\n        make \\\n        pkg-config \\\n        wget \\\n        ca-certificates \\\n    && update-ca-certificates \\\n    && rm -rf /var/lib/apt/lists/*\n\nENV GOLANG_VERSION 1.9.1\n\nRUN set -eux; \\\n\n# this \"case\" statement is generated via \"update.sh\"\n    dpkgArch=\"$(dpkg --print-architecture)\"; \\\n    case \"${dpkgArch##*-}\" in \\\n        amd64) goRelArch='linux-amd64'; goRelSha256='07d81c6b6b4c2dcf1b5ef7c27aaebd3691cdb40548500941f92b221147c5d9c7' ;; \\\n        armhf) goRelArch='linux-armv6l'; goRelSha256='65a0495a50c7c240a6487b1170939586332f6c8f3526abdbb9140935b3cff14c' ;; \\\n        arm64) goRelArch='linux-arm64'; goRelSha256='d31ecae36efea5197af271ccce86ccc2baf10d2e04f20d0fb75556ecf0614dad' ;; \\\n        i386) goRelArch='linux-386'; goRelSha256='2cea1ce9325cb40839601b566bc02b11c92b2942c21110b1b254c7e72e5581e7' ;; \\\n        ppc64el) goRelArch='linux-ppc64le'; goRelSha256='de57b6439ce9d4dd8b528599317a35fa1e09d6aa93b0a80e3945018658d963b8' ;; \\\n        s390x) goRelArch='linux-s390x'; goRelSha256='9adf03574549db82a72e0d721ef2178ec5e51d1ce4f309b271a2bca4dcf206f6' ;; \\\n        *) goRelArch='src'; goRelSha256='a84afc9dc7d64fe0fa84d4d735e2ece23831a22117b50dafc75c1484f1cb550e'; \\\n            echo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \\\n    esac; \\\n\n    url=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \\\n    wget -O go.tgz \"$url\"; \\\n    echo \"${goRelSha256}  *go.tgz\" | sha256sum -c -; \\\n    tar -C /usr/local -xzf go.tgz; \\\n    rm go.tgz; \\\n\n    if [ \"$goRelArch\" = 'src' ]; then \\\n        echo >&2; \\\n        echo >&2 'error: UNIMPLEMENTED'; \\\n        echo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \\\n        echo >&2; \\\n        exit 1; \\\n    fi; \\\n\n    export PATH=\"/usr/local/go/bin:$PATH\"; \\\n    go version\n\nENV GOPATH /go\n\nENV PATH $PATH:$GOPATH/bin:/usr/local/go/bin\n\nRUN mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\"\n\nWORKDIR $GOPATH\n\nENV TRAEFIK_PATH github.com/containous/traefik\nENV TRAEFIK_REPO https://${TRAEFIK_PATH}.git\nENV TRAEFIK_BRANCH master\n\nWORKDIR /root\n\nRUN apt-get update\nRUN apt-get install --no-install-recommends -y bash nodejs python git && rm -rf /var/lib/apt/lists/*;\nRUN go get -u github.com/Masterminds/glide\nRUN go get github.com/jteeuwen/go-bindata/... \\\n && go get github.com/golang/lint/golint \\\n && go get github.com/kisielk/errcheck \\\n && go get github.com/client9/misspell/cmd/misspell \\\n && go get github.com/mattfarina/glide-hash \\\n && go get github.com/sgotti/glide-vc\n\nRUN git clone -b ${TRAEFIK_BRANCH} \\\n      ${TRAEFIK_REPO} \\\n      ${GOPATH}/src/${TRAEFIK_PATH}\n\nWORKDIR ${GOPATH}/src/${TRAEFIK_PATH}\nRUN glide install --strip-vendor\n\nRUN groupadd --gid 1000 node \\\n && useradd --uid 1000 --gid node --shell /bin/bash --create-home node\n\n# gpg keys listed at https://github.com/nodejs/node#release-team\nRUN set -ex \\\n && for key in \\\n      9554F04D7259F04124DE6B476D5A82AC7E37093B \\\n      94AE36675C464D64BAFA68DD7434390BDBE9B9C5 \\\n      FD3A5288F042B6850C66B31F09FE44734EB7990E \\\n      71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 \\\n      DD8F2338BAE7501E3DD5AC78C273792F7D83545D \\\n      B9AE9905FFD7803F25714661B63B535A4C206CA9 \\\n      C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8 \\\n      56730D5401028683275BD23C23EFEFE93C4CFFFE; do \\\n      \n\n    gpg --batch --keyserver pgp.mit.edu --recv-keys \"$key\" || \\\n    gpg --batch --keyserver keyserver.pgp.com --recv-keys \"$key\" || \\\n    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\"; \\\n   done\n\nENV NPM_CONFIG_LOGLEVEL info\nENV NODE_VERSION 8.7.0\n\nRUN ARCH= && dpkgArch=\"$(dpkg --print-architecture)\" \\\n && case \"${dpkgArch##*-}\" in \\\n    amd64) ARCH='x64';; \\\n    ppc64el) ARCH='ppc64le';; \\\n    s390x) ARCH='s390x';; \\\n    arm64) ARCH='arm64';; \\\n    armhf) ARCH='armv7l';; \\\n    * echo \"unsupported  architecture\"; exit 1;; \\\n  esac \\\n && curl -f -SLO \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-$ARCH.tar.xz\" \\\n && curl -f -SLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\" \\\n && gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc \\\n && grep \" node-v$NODE_VERSION-linux-$ARCH.tar.xz\\$\" SHASUMS256.txt | sha256sum -c - \\\n && tar -xJf \"node-v$NODE_VERSION-linux-$ARCH.tar.xz\" -C /usr/local --strip-components=1 \\\n && rm \"node-v$NODE_VERSION-linux-$ARCH.tar.xz\" SHASUMS256.txt.asc SHASUMS256.txt \\\n && ln -s /usr/local/bin/node /usr/local/bin/nodejs\n\nENV YARN_VERSION 1.2.0\n\nRUN set -ex \\\n && for key in \\\n   6A010C5166006599AA17F08146C2130DFD2497F5; do \\\n   \n\n   gpg --batch --keyserver pgp.mit.edu --recv-keys \"$key\" || \\\n   gpg --batch --keyserver keyserver.pgp.com --recv-keys \"$key\" || \\\n   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\"; \\\n  done \\\n\n && curl -fSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz\" \\\n && curl -fSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz.asc\" \\\n && gpg --batch --verify yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz \\\n && mkdir -p /opt/yarn \\\n && tar -xzf yarn-v$YARN_VERSION.tar.gz -C /opt/yarn --strip-components=1 \\\n && ln -s /opt/yarn/bin/yarn /usr/local/bin/yarn \\\n && ln -s /opt/yarn/bin/yarn /usr/local/bin/yarnpkg \\\n && rm yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz\n\nWORKDIR ${GOPATH}/src/${TRAEFIK_PATH}/webui\n\nRUN apt-get install --no-install-recommends -y curl gnupg gnupg2 apt-transport-https lsb-release && rm -rf /var/lib/apt/lists/*;\n\n##RUN curl -sL https://deb.nodesource.com/setup_8.x | bash -\n#RUN curl -s https://deb.nodesource.com/gpgkey/nodesource.gpg.key | apt-key add -\n#RUN echo 'deb https://deb.nodesource.com/node_8.x stretch main' > /etc/apt/sources.list.d/nodesource.list\n#RUN echo 'deb-src https://deb.nodesource.com/node_8.x stretch main' >> /etc/apt/sources.list.d/nodesource.list\n#RUN apt-get update\n\n#RUN apt-get install -y nodejs\n#RUN dpkg --list nodejs \\\n# && dpkg --listfiles nodejs | grep npm\nRUN apt-get install --no-install-recommends -y jq && rm -rf /var/lib/apt/lists/*;\nRUN set -x ; npm install $( jq -r '.devDependencies | keys | join(\" \")' package.json | sed -e 's/phantomjs-prebuilt //' -e 's/karma-phantomjs-shim //' -e 's/karma-phantomjs-launcher //' ) && npm cache clean --force;\nRUN npm run build\n\n#RUN apt-get install -y build-essential g++ flex bison gperf ruby perl \\\n#  libsqlite3-dev libfontconfig1-dev libicu-dev libfreetype6 libssl-dev \\\n#  libpng-dev libjpeg-dev python libx11-dev libxext-dev qtbase5-dev\n#\n#RUN git clone git://github.com/ariya/phantomjs.git\n#RUN cd phantomjs \\\n# && git checkout 2.1.1 \\\n# && git submodule init \\\n# && git submodule update \\\n# && python build.py\n\n#RUN yarn install\n#RUN make generate-webui\n\nWORKDIR ${GOPATH}/src/${TRAEFIK_PATH}\n\nRUN glide install --strip-vendor\nRUN go generate\nRUN go build -v ./cmd/traefik\nRUN cp -af traefik /go/bin/traefik\n\nADD entrypoint.sh /entrypoint.sh\nADD run.sh /run.sh\n\nENTRYPOINT /run.sh\n\nCMD traefik\n"
}