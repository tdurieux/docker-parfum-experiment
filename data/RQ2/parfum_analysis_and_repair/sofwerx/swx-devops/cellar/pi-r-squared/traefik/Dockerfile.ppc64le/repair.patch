diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/sofwerx/swx-devops/cellar/pi-r-squared/traefik/Dockerfile.ppc64le b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/sofwerx/swx-devops/cellar/pi-r-squared/traefik/Dockerfile.ppc64le/repaired.Dockerfile
index 69810fd..a61730f 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/sofwerx/swx-devops/cellar/pi-r-squared/traefik/Dockerfile.ppc64le
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/sofwerx/swx-devops/cellar/pi-r-squared/traefik/Dockerfile.ppc64le/repaired.Dockerfile
@@ -32,7 +32,7 @@ RUN apt-get update \
 ENV GOLANG_VERSION 1.9.1
 
 RUN set -eux; \
-    \
+
 # this "case" statement is generated via "update.sh"
     dpkgArch="$(dpkg --print-architecture)"; \
     case "${dpkgArch##*-}" in \
@@ -45,13 +45,13 @@ RUN set -eux; \
         *) goRelArch='src'; goRelSha256='a84afc9dc7d64fe0fa84d4d735e2ece23831a22117b50dafc75c1484f1cb550e'; \
             echo >&2; echo >&2 "warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source"; echo >&2 ;; \
     esac; \
-    \
+
     url="https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz"; \
     wget -O go.tgz "$url"; \
-    echo "${goRelSha256} *go.tgz" | sha256sum -c -; \
+    echo "${goRelSha256}  *go.tgz" | sha256sum -c -; \
     tar -C /usr/local -xzf go.tgz; \
     rm go.tgz; \
-    \
+
     if [ "$goRelArch" = 'src' ]; then \
         echo >&2; \
         echo >&2 'error: UNIMPLEMENTED'; \
@@ -59,7 +59,7 @@ RUN set -eux; \
         echo >&2; \
         exit 1; \
     fi; \
-    \
+
     export PATH="/usr/local/go/bin:$PATH"; \
     go version
 
@@ -78,7 +78,7 @@ ENV TRAEFIK_BRANCH master
 WORKDIR /root
 
 RUN apt-get update
-RUN apt-get install -y bash nodejs python git
+RUN apt-get install --no-install-recommends -y bash nodejs python git && rm -rf /var/lib/apt/lists/*;
 RUN go get -u github.com/Masterminds/glide
 RUN go get github.com/jteeuwen/go-bindata/... \
  && go get github.com/golang/lint/golint \
@@ -107,12 +107,13 @@ RUN set -ex \
       DD8F2338BAE7501E3DD5AC78C273792F7D83545D \
       B9AE9905FFD7803F25714661B63B535A4C206CA9 \
       C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8 \
-      56730D5401028683275BD23C23EFEFE93C4CFFFE \
-    ; do \
-    gpg --keyserver pgp.mit.edu --recv-keys "$key" || \
-    gpg --keyserver keyserver.pgp.com --recv-keys "$key" || \
-    gpg --keyserver ha.pool.sks-keyservers.net --recv-keys "$key" ; \
-  done
+      56730D5401028683275BD23C23EFEFE93C4CFFFE; do \
+      
+
+    gpg --batch --keyserver pgp.mit.edu --recv-keys "$key" || \
+    gpg --batch --keyserver keyserver.pgp.com --recv-keys "$key" || \
+    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"; \
+   done
 
 ENV NPM_CONFIG_LOGLEVEL info
 ENV NODE_VERSION 8.7.0
@@ -124,10 +125,10 @@ RUN ARCH= && dpkgArch="$(dpkg --print-architecture)" \
     s390x) ARCH='s390x';; \
     arm64) ARCH='arm64';; \
     armhf) ARCH='armv7l';; \
-    *) echo "unsupported architecture"; exit 1 ;; \
- esac \
- && curl -SLO "https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-$ARCH.tar.xz" \
- && curl -SLO --compressed "https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc" \
+    * echo "unsupported  architecture"; exit 1;; \
+  esac \
+ && curl -f -SLO "https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-$ARCH.tar.xz" \
+ && curl -f -SLO --compressed "https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc" \
  && gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc \
  && grep " node-v$NODE_VERSION-linux-$ARCH.tar.xz\$" SHASUMS256.txt | sha256sum -c - \
  && tar -xJf "node-v$NODE_VERSION-linux-$ARCH.tar.xz" -C /usr/local --strip-components=1 \
@@ -138,12 +139,14 @@ ENV YARN_VERSION 1.2.0
 
 RUN set -ex \
  && for key in \
-   6A010C5166006599AA17F08146C2130DFD2497F5 \
- ; do \
-   gpg --keyserver pgp.mit.edu --recv-keys "$key" || \
-   gpg --keyserver keyserver.pgp.com --recv-keys "$key" || \
-   gpg --keyserver ha.pool.sks-keyservers.net --recv-keys "$key" ; \
- done \
+   6A010C5166006599AA17F08146C2130DFD2497F5; do \
+   
+
+   gpg --batch --keyserver pgp.mit.edu --recv-keys "$key" || \
+   gpg --batch --keyserver keyserver.pgp.com --recv-keys "$key" || \
+   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"; \
+  done \
+
  && curl -fSLO --compressed "https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz" \
  && curl -fSLO --compressed "https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz.asc" \
  && gpg --batch --verify yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz \
@@ -155,7 +158,7 @@ RUN set -ex \
 
 WORKDIR ${GOPATH}/src/${TRAEFIK_PATH}/webui
 
-RUN apt-get install -y curl gnupg gnupg2 apt-transport-https lsb-release
+RUN apt-get install --no-install-recommends -y curl gnupg gnupg2 apt-transport-https lsb-release && rm -rf /var/lib/apt/lists/*;
 
 ##RUN curl -sL https://deb.nodesource.com/setup_8.x | bash -
 #RUN curl -s https://deb.nodesource.com/gpgkey/nodesource.gpg.key | apt-key add -
@@ -166,8 +169,8 @@ RUN apt-get install -y curl gnupg gnupg2 apt-transport-https lsb-release
 #RUN apt-get install -y nodejs
 #RUN dpkg --list nodejs \
 # && dpkg --listfiles nodejs | grep npm
-RUN apt-get install -y jq
-RUN set -x ; npm install $( jq -r '.devDependencies | keys | join(" ")' package.json | sed -e 's/phantomjs-prebuilt //' -e 's/karma-phantomjs-shim //' -e 's/karma-phantomjs-launcher //' )
+RUN apt-get install --no-install-recommends -y jq && rm -rf /var/lib/apt/lists/*;
+RUN set -x ; npm install $( jq -r '.devDependencies | keys | join(" ")' package.json | sed -e 's/phantomjs-prebuilt //' -e 's/karma-phantomjs-shim //' -e 's/karma-phantomjs-launcher //' ) && npm cache clean --force;
 RUN npm run build
 
 #RUN apt-get install -y build-essential g++ flex bison gperf ruby perl \