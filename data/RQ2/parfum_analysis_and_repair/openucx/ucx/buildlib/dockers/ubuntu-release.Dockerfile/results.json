{
  "startTime": 1674251212335,
  "endTime": 1674251213040,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 89
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 27
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG CUDA_VERSION=10.1\nARG UBUNTU_VERSION=16.04\nFROM nvidia/cuda:${CUDA_VERSION}-devel-ubuntu${UBUNTU_VERSION}\n\nRUN apt-get update && \\\n    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends tzdata && \\\n    apt-get install --no-install-recommends -y \\\n        automake \\\n        default-jdk \\\n        dh-make \\\n        g++ \\\n        git \\\n        openjdk-8-jdk \\\n        libcap2 \\\n        libnuma-dev \\\n        libtool \\\n        make \\\n        maven \\\n        udev \\\n        wget \\\n        environment-modules \\\n    && apt-get remove -y openjdk-11-* || apt-get autoremove -y \\\n    && apt-get clean && rm -rf /var/lib/apt/lists/*\n\n# MOFED\nARG MOFED_VERSION=5.0-1.0.0.0\nARG UBUNTU_VERSION\nARG MOFED_OS=ubuntu${UBUNTU_VERSION}\nENV MOFED_DIR MLNX_OFED_LINUX-${MOFED_VERSION}-${MOFED_OS}-x86_64\nENV MOFED_SITE_PLACE MLNX_OFED-${MOFED_VERSION}\nENV MOFED_IMAGE ${MOFED_DIR}.tgz\nRUN wget --no-verbose https://content.mellanox.com/ofed/${MOFED_SITE_PLACE}/${MOFED_IMAGE} && \\\n    tar -xzf ${MOFED_IMAGE}\nRUN ${MOFED_DIR}/mlnxofedinstall --all -q \\\n        --user-space-only \\\n        --without-fw-update \\\n        --skip-distro-check \\\n        --without-ucx \\\n        --without-hcoll \\\n        --without-openmpi \\\n        --without-sharp && \\\n    rm -rf ${MOFED_DIR} && rm -rf *.tgz\n\nENV CPATH /usr/local/cuda/include:${CPATH}\nENV LD_LIBRARY_PATH /usr/local/cuda/lib64:/usr/local/cuda/compat:${LD_LIBRARY_PATH}\nENV LIBRARY_PATH /usr/local/cuda/lib64:/usr/local/cuda/compat:${LIBRARY_PATH}\nENV PATH /usr/local/cuda/compat:${PATH}\n\nRUN ml_stub=$(find /usr -name libnvidia-ml.so) && ln -s $ml_stub /usr/lib/x86_64-linux-gnu/libnvidia-ml.so.1\n"
}