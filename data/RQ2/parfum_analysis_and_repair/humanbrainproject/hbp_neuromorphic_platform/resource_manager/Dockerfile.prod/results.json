{
  "startTime": 1674255210292,
  "endTime": 1674255211220,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 131
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 131
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 131
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# Build an image for deploying the Neuromorphic Computing Platform resource manager app\n#\n# To build the image, from the parent directory:\n#   docker build -t cnrsunic/nmpi_resource_manager -f resource_manager/Dockerfile .\n#\n# To run the application:\n#   docker run -d -p 443 cnrsunic/nmpi_resource_manager\n\n\nFROM debian:buster-slim\nMAINTAINER Andrew Davison <andrew.davison@cnrs.fr>\n\nENV DEBIAN_FRONTEND noninteractive\nRUN apt-get update --fix-missing && apt-get -y --no-install-recommends -q install python3-dev python3-pip sqlite3 python3-psycopg2 supervisor build-essential nginx-extras python3-requests && rm -rf /var/lib/apt/lists/*;\nRUN unset DEBIAN_FRONTEND\n\nRUN pip3 install --no-cache-dir --upgrade pip\nRUN pip3 install --no-cache-dir uwsgi\n\nENV SITEDIR /home/docker/site\n\nCOPY resource_manager $SITEDIR\nCOPY quotas /home/docker/quotas\nCOPY build_info.json $SITEDIR\n\nWORKDIR /home/docker\nRUN pip3 install --no-cache-dir -r $SITEDIR/requirements.txt\nENV PYTHONPATH  /home/docker:/home/docker/site:/usr/local/lib/python3.7/dist-packages:/usr/lib/python3.7/dist-packages\n\nWORKDIR $SITEDIR\nRUN if [ -f $SITEDIR/db.sqlite3 ]; then rm $SITEDIR/db.sqlite3; fi\nRUN python3 manage.py check\nRUN python3 manage.py collectstatic --noinput\n\nRUN echo \"daemon off;\" >> /etc/nginx/nginx.conf\nRUN rm /etc/nginx/sites-enabled/default\nRUN ln -s $SITEDIR/deployment/nginx-app.conf /etc/nginx/sites-enabled/\nRUN ln -s $SITEDIR/deployment/supervisor-app.conf /etc/supervisor/conf.d/\nRUN ln -sf /dev/stdout /var/log/nginx/access.log\nRUN ln -sf /dev/stderr /var/log/nginx/error.log\n\nEXPOSE 443\nCMD [\"supervisord\", \"-n\", \"-c\", \"/etc/supervisor/conf.d/supervisor-app.conf\"]\n"
}