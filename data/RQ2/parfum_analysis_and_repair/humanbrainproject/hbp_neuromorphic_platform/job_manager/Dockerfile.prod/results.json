{
  "startTime": 1674252417607,
  "endTime": 1674252418630,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 34,
        "columnEnd": 181
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 34,
        "columnEnd": 181
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# Build an image for deploying the Neuromorphic Platform job manager\n#\n# To build the image, from the parent directory:\n#   docker build -t nmpi_queue_server -f job_manager/Dockerfile .\n#\n# To run the application:\n#  docker run -d -p 443 nmpi_queue_server\n#\n# To find out which port to access on the host machine, run \"docker ps\"\n#\n# To check the content of the docker container:\n#   sudo docker run -it nmpi_server /bin/bash\n\nFROM debian:buster-slim\nMAINTAINER Andrew Davison <andrew.davison@unic.cnrs-gif.fr>\n\nENV DEBIAN_FRONTEND noninteractive\nRUN apt-get update --fix-missing; apt-get -y --no-install-recommends -q install python3-dev python3-setuptools sqlite3 python3-psycopg2 git supervisor build-essential python3-numpy nginx-extras python3-pip && rm -rf /var/lib/apt/lists/*;\nRUN pip3 install --no-cache-dir --upgrade pip\nRUN unset DEBIAN_FRONTEND\n\nRUN pip3 install --no-cache-dir uwsgi\n\nENV SITEDIR /home/docker/site\n\nCOPY job_manager $SITEDIR\nCOPY simqueue /home/docker/simqueue\nCOPY quotas /home/docker/quotas\nCOPY build_info.json $SITEDIR\n\nWORKDIR /home/docker\nRUN pip3 install --no-cache-dir -r $SITEDIR/requirements.txt\nENV PYTHONPATH  /home/docker:/home/docker/site:/usr/local/lib/python3.7/dist-packages:/usr/lib/python3.7/dist-packages\n\nWORKDIR $SITEDIR\nRUN if [ -f $SITEDIR/db.sqlite3 ]; then rm $SITEDIR/db.sqlite3; fi\nRUN python3 manage.py check\nRUN python3 manage.py collectstatic --noinput\nRUN unset PYTHONPATH\n\nRUN echo \"daemon off;\" >> /etc/nginx/nginx.conf\nRUN rm /etc/nginx/sites-enabled/default\nRUN ln -s $SITEDIR/deployment/nginx-app.conf /etc/nginx/sites-enabled/\nRUN ln -s $SITEDIR/deployment/supervisor-app.conf /etc/supervisor/conf.d/\nRUN ln -sf /dev/stdout /var/log/nginx/access.log\nRUN ln -sf /dev/stderr /var/log/nginx/error.log\n\nEXPOSE 443\nCMD [\"supervisord\", \"-n\", \"-c\", \"/etc/supervisor/conf.d/supervisor-app.conf\"]\n"
}