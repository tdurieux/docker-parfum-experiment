{
  "startTime": 1674246761900,
  "endTime": 1674246763386,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 7,
        "columnEnd": 54
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "####################\n# Build base image\n####################\nFROM golang:1.8.5-alpine3.6 as build-base\nLABEL maintainer cheminlin@cepave.com\nENV FALCON_DIR=/home CONFIG_DIR=/config\nENV PROJ_PATH=${GOPATH}/src/github.com/Cepave/open-falcon-backend\n\nRUN apk add --no-cache ca-certificates bash git g++ perl make\nCOPY . ${PROJ_PATH}\nWORKDIR ${PROJ_PATH}\nRUN \\\n    make all \\\n    && make pack \\\n    && tar zxvf open-falcon-v*.tar.gz -C ${FALCON_DIR} && rm open-falcon-v*.tar.gz\n\n\n####################\n# Build final image\n####################\nFROM alpine:3.6\nLABEL maintainer cheminlin@cepave.com\nARG ENTRYFILE=run.sh\nENV FALCON_DIR=/home DOCKER_DIR=docker CONFIG_DIR=/config CONFIG_LINK=config/cfg.json\n\nCOPY --from=build-base ${FALCON_DIR} ${FALCON_DIR}\n# Set timezone, packages\n# Set alias in the case of user want to execute control in their terminal\n# Set soft links\nRUN \\\n  apk add --no-cache tzdata ca-certificates bash curl git iproute2 jq vim \\\n  && cp /usr/share/zoneinfo/Asia/Taipei /etc/localtime \\\n  && echo \"Asia/Taipei\" > /etc/timezone \\\n  && echo \"alias ps='pstree'\" > ~/.bashrc \\\n  && mkdir -p ${CONFIG_DIR} \\\n  && touch ${CONFIG_DIR}/agent.json \\\n  && ln -sf ${CONFIG_DIR}/agent.json ${FALCON_DIR}/agent/${CONFIG_LINK} \\\n  && rm -f ${CONFIG_DIR}/agent.json \\\n  && touch ${CONFIG_DIR}/aggregator.json \\\n  && ln -sf ${CONFIG_DIR}/aggregator.json ${FALCON_DIR}/aggregator/${CONFIG_LINK} \\\n  && rm -f ${CONFIG_DIR}/aggregator.json \\\n  && touch ${CONFIG_DIR}/alarm.json \\\n  && ln -sf ${CONFIG_DIR}/alarm.json ${FALCON_DIR}/alarm/${CONFIG_LINK} \\\n  && rm -f ${CONFIG_DIR}/alarm.json \\\n  && touch ${CONFIG_DIR}/fe.json \\\n  && ln -sf ${CONFIG_DIR}/fe.json ${FALCON_DIR}/fe/${CONFIG_LINK} \\\n  && rm -f ${CONFIG_DIR}/fe.json \\\n  && touch ${CONFIG_DIR}/graph.json \\\n  && ln -sf ${CONFIG_DIR}/graph.json ${FALCON_DIR}/graph/${CONFIG_LINK} \\\n  && rm -f ${CONFIG_DIR}/graph.json \\\n  && touch ${CONFIG_DIR}/hbs.json \\\n  && ln -sf ${CONFIG_DIR}/hbs.json ${FALCON_DIR}/hbs/${CONFIG_LINK} \\\n  && rm -f ${CONFIG_DIR}/hbs.json \\\n  && touch ${CONFIG_DIR}/judge.json \\\n  && ln -sf ${CONFIG_DIR}/judge.json ${FALCON_DIR}/judge/${CONFIG_LINK} \\\n  && rm -f ${CONFIG_DIR}/judge.json \\\n  && touch ${CONFIG_DIR}/nodata.json \\\n  && ln -sf ${CONFIG_DIR}/nodata.json ${FALCON_DIR}/nodata/${CONFIG_LINK} \\\n  && rm -f ${CONFIG_DIR}/nodata.json \\\n  && touch ${CONFIG_DIR}/query.json \\\n  && ln -sf ${CONFIG_DIR}/query.json ${FALCON_DIR}/query/${CONFIG_LINK} \\\n  && rm -f ${CONFIG_DIR}/query.json \\\n  && touch ${CONFIG_DIR}/sender.json \\\n  && ln -sf ${CONFIG_DIR}/sender.json ${FALCON_DIR}/sender/${CONFIG_LINK} \\\n  && rm -f ${CONFIG_DIR}/sender.json \\\n  && touch ${CONFIG_DIR}/task.json \\\n  && ln -sf ${CONFIG_DIR}/task.json ${FALCON_DIR}/task/${CONFIG_LINK} \\\n  && rm -f ${CONFIG_DIR}/task.json \\\n  && touch ${CONFIG_DIR}/transfer.json \\\n  && ln -sf ${CONFIG_DIR}/transfer.json ${FALCON_DIR}/transfer/${CONFIG_LINK} \\\n  && rm -f ${CONFIG_DIR}/transfer.json \\\n  && touch ${CONFIG_DIR}/mysqlapi.json \\\n  && ln -sf ${CONFIG_DIR}/mysqlapi.json ${FALCON_DIR}/mysqlapi/${CONFIG_LINK} \\\n  && rm -f ${CONFIG_DIR}/mysqlapi.json \\\n  && touch ${CONFIG_DIR}/f2e-api.json \\\n  && ln -sf ${CONFIG_DIR}/f2e-api.json ${FALCON_DIR}/f2e-api/${CONFIG_LINK} \\\n  && rm -f ${CONFIG_DIR}/f2e-api.json\n\nCOPY ${DOCKER_DIR}/alpine/${ENTRYFILE} ${FALCON_DIR}/run.sh\nCOPY ${DOCKER_DIR}/docker-healthcheck /usr/local/bin/\n\n# Port\n# Rpc:  10070\n# Http: 10080 10081\nEXPOSE 10070 10080 10081\nWORKDIR ${FALCON_DIR}\n\n# Start\nENTRYPOINT [\"/bin/bash\", \"run.sh\"]\nHEALTHCHECK --interval=60s --timeout=2s \\\n  CMD [ \"bash\", \"docker-healthcheck\" ]\n"
}