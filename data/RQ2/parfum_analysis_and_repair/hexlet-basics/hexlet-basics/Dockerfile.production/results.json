{
  "startTime": 1674221239107,
  "endTime": 1674221240053,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 61
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 19,
        "columnStart": 22,
        "columnEnd": 8
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 31,
        "columnEnd": 47
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 20,
        "columnEnd": 36
      }
    }
  ],
  "repairedDockerfile": "FROM ruby:3.1\n\n# NOTE https://github.com/webpack/webpack/issues/14532\nENV NODE_OPTIONS --openssl-legacy-provider\nENV NODE_VERSION 17.x\n\nENV DOCKER_CHANNEL stable\nENV DOCKER_VERSION 20.10.14\nENV DISABLE_SPRING 1\n\nRUN curl -f -sL https://deb.nodesource.com/setup_${NODE_VERSION} | bash -\n\nRUN curl -fsSL \"https://download.docker.com/linux/static/${DOCKER_CHANNEL}/x86_64/docker-${DOCKER_VERSION}.tgz\" \\\n  | tar -xzC /usr/local/bin --strip=1 docker/docker\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n  build-essential \\\n  libpq-dev \\\n  libsqlite3-dev \\\n  nodejs \\\n  && rm -rf /var/lib/apt/lists/*\n\nRUN corepack enable\nRUN yarn set version stable && yarn cache clean;\n\n# ENV BUNDLE_PATH /root/hexlet-basics/vendor/bundle\nWORKDIR /app\n\nCOPY .yarnrc.yml .\nCOPY package.json .\nCOPY yarn.lock .\n\nRUN yarn install && yarn cache clean;\n\nCOPY Gemfile .\nCOPY Gemfile.lock .\n\nRUN bundle install --jobs $(nproc)\n\nCOPY . .\n\nRUN APP_HOST=example.test bin/rails js:routes:typescript\nRUN npm run build\nRUN APP_HOST=example.test NODE_ENV=production HEXLET_DOCKER_BUILD=1 RAILS_ENV=production SECRET_KEY_BASE=jopa bin/rails assets:precompile\n\nCMD [\"make\", \"start-production\"]\n"
}