{
  "startTime": 1674216876501,
  "endTime": 1674216877990,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 7,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 7,
        "columnEnd": 30
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 64
      }
    }
  ],
  "repairedDockerfile": "FROM python:latest\n\nENV LANG en_US.UTF-8\n\nARG USERNAME=nerd\nARG USER_UID\nARG USER_GID\n\n# Check for mandatory build arguments\nRUN : \"${USER_UID:?Build argument needs to be set and non-empty.}\" && \\\n    : \"${USER_GID:?Build argument needs to be set and non-empty.}\"\n\n# setup locale\nENV DEBIAN_FRONTEND noninteractive\nRUN apt-get update\nRUN apt-get install --no-install-recommends -y locales apt-utils && rm -rf /var/lib/apt/lists/*;\nRUN sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen && \\\n    dpkg-reconfigure locales && \\\n    update-locale LANG=en_US.UTF-8\n\n\n# Create the user\nRUN groupadd --gid $USER_GID $USERNAME \\\n    && useradd --uid $USER_UID --gid $USER_GID -m $USERNAME \\\n    #\n    # [Optional] Add sudo support. Omit if you don't need to install software after connecting.\n    && apt-get update \\\n    && apt-get install --no-install-recommends -y sudo \\\n    && echo $USERNAME ALL=\\(root\\) NOPASSWD:ALL > /etc/sudoers.d/$USERNAME \\\n    && chmod 0440 /etc/sudoers.d/$USERNAME && rm -rf /var/lib/apt/lists/*;\n\n\n\n# install python stuff\nCOPY requirements.txt requirements.txt\nRUN pip3 install --no-cache-dir -r requirements.txt\n\n# create notebook mount point\nRUN mkdir -p /notebooks\nRUN chown -R $USERNAME:$USERNAME /notebooks\n\n# copy start scripts\nCOPY files/start_jupyter_lab.sh  /\nRUN chmod 777 /start_jupyter_lab.sh\n#  -------------local user -----------------------\n# Set the default user. Omit if you want to keep the default as root.\nUSER $USERNAME\n\nRUN echo 'export PS1=\"ðŸ¤“  \\[\\033[1;36m\\]\\h \\[\\e[33m\\]\\W\\[\\e[m\\] \\[\\033[1;36m\\]# \\[\\033[0m\\]\"' >> ~/.bashrc\n\n\n\n# copy notebook settings\nRUN mkdir -p /home/$USERNAME/.jupyter\nCOPY jupyter_notebook_config.py /home/$USERNAME/.jupyter/jupyter_notebook_config.py\n\n# finalize\nWORKDIR /notebooks\n\nEXPOSE 8888\nCMD [\"/start_jupyter_lab.sh\" ]"
}