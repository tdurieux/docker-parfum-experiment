{
  "startTime": 1674248391908,
  "endTime": 1674248393220,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 2,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 57
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 2,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 57
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 63
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 87
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:18.04\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y software-properties-common apt-transport-https \\\n    ca-certificates gnupg software-properties-common wget && rm -rf /var/lib/apt/lists/*;\nRUN add-apt-repository ppa:ubuntu-toolchain-r/test -y\nRUN wget -qO - https://apt.kitware.com/keys/kitware-archive-latest.asc | apt-key add -\nRUN apt-add-repository 'deb https://apt.kitware.com/ubuntu/ bionic main'\nRUN apt-get update\nRUN apt-get upgrade -y\nRUN apt-get install --no-install-recommends g++-9 valgrind build-essential git cmake -y && rm -rf /var/lib/apt/lists/*;\nRUN rm -rf /var/lib/apt/lists/*\nRUN update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 100\n\nCOPY ./ /app/\nWORKDIR /app\n\nRUN  cmake -H. -Bbuild\nRUN cd build &&  cmake -DUSE_CPPM_PATH=ON -DCMAKE_BUILD_TYPE=Debug .. && cmake --build . --config Debug\nRUN cd build/Debug && ./server\n\n"
}