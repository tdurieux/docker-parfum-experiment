{
  "startTime": 1674255180802,
  "endTime": 1674255181622,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 7,
        "columnEnd": 41
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 72
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 7,
        "columnEnd": 18
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 7,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 28,
        "columnStart": 22,
        "columnEnd": 12
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 28,
        "columnStart": 22,
        "columnEnd": 12
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:20.04 AS base\n\nMAINTAINER Nicholas Long nicholas.long@nrel.gov\n\n# Set the version of OpenStudio when building the container. For example `docker build --build-arg\nARG OPENSTUDIO_VERSION=3.4.0\nARG OPENSTUDIO_VERSION_EXT=\"\"\nARG OPENSTUDIO_DOWNLOAD_URL=https://openstudio-builds.s3.amazonaws.com/3.4.0/OpenStudio-3.4.0%2B4bd816f785-Ubuntu-18.04.deb\n\nENV OS_BUNDLER_VERSION=2.1.4\nENV RUBY_VERSION=2.7.2\nENV BUNDLE_WITHOUT=native_ext\n# Install gdebi, then download and install OpenStudio, then clean up.\n# gdebi handles the installation of OpenStudio's dependencies\n\n# install locales and set to en_US.UTF-8. This is needed for running the CLI on some machines\n# such as singularity.\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n        curl \\\n        gdebi-core \\\n        libsqlite3-dev \\\n        libssl-dev \\\n        libffi-dev \\\n        build-essential \\\n        zlib1g-dev \\\n        vim \\\n        git \\\n        locales \\\n        sudo \\\n    && echo \"OpenStudio Package Download URL is ${OPENSTUDIO_DOWNLOAD_URL}\" \\\n    && curl -f -SLO $OPENSTUDIO_DOWNLOAD_URL \\\n    && OPENSTUDIO_DOWNLOAD_FILENAME=$(ls *.deb) \\\n    # Verify that the download was successful (not access denied XML from s3)\n    && grep -v -q \"<Code>AccessDenied</Code>\" ${OPENSTUDIO_DOWNLOAD_FILENAME} \\\n    && gdebi -n $OPENSTUDIO_DOWNLOAD_FILENAME && rm -rf /var/lib/apt/lists/*;\n    # Cleanup\n    RUN rm -f $OPENSTUDIO_DOWNLOAD_FILENAME \\\n    && rm -rf /var/lib/apt/lists/* \\\n    && locale-gen en_US en_US.UTF-8 \\\n    && dpkg-reconfigure locales\n\n\nRUN curl -f -SLO https://cache.ruby-lang.org/pub/ruby/2.7/ruby-2.7.2.tar.gz \\\n    && tar -xvzf ruby-2.7.2.tar.gz \\\n    && cd ruby-2.7.2 \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n    && make && make install && rm ruby-2.7.2.tar.gz\n\n\n## Add RUBYLIB link for openstudio.rb\nENV RUBYLIB=/usr/local/openstudio-${OPENSTUDIO_VERSION}${OPENSTUDIO_VERSION_EXT}/Ruby\nENV ENERGYPLUS_EXE_PATH=/usr/local/openstudio-${OPENSTUDIO_VERSION}${OPENSTUDIO_VERSION_EXT}/EnergyPlus/energyplus\n\n# The OpenStudio Gemfile contains a fixed bundler version, so you have to install and run specific to that version\nRUN gem install bundler -v $OS_BUNDLER_VERSION && \\\n    mkdir /var/oscli && \\\n    ls /usr/local && \\\n    cp /usr/local/openstudio-${OPENSTUDIO_VERSION}${OPENSTUDIO_VERSION_EXT}/Ruby/Gemfile /var/oscli/ && \\\n    cp /usr/local/openstudio-${OPENSTUDIO_VERSION}${OPENSTUDIO_VERSION_EXT}/Ruby/Gemfile.lock /var/oscli/ && \\\n    cp /usr/local/openstudio-${OPENSTUDIO_VERSION}${OPENSTUDIO_VERSION_EXT}/Ruby/openstudio-gems.gemspec /var/oscli/\nWORKDIR /var/oscli\nRUN bundle -v\nRUN bundle _${OS_BUNDLER_VERSION}_ install --path=gems --without=native_ext --jobs=4 --retry=3\n\n# Configure the bootdir & confirm that openstudio is able to load the bundled gem set in /var/gemdata\nVOLUME /var/simdata/openstudio\nWORKDIR /var/simdata/openstudio\nRUN openstudio --verbose --bundle /var/oscli/Gemfile --bundle_path /var/oscli/gems --bundle_without native_ext  openstudio_version\n\n# May need this for syscalls that do not have ext in path\nRUN ln -s /usr/local/openstudio-${OPENSTUDIO_VERSION}${OPENSTUDIO_VERSION_EXT} /usr/local/openstudio-${OPENSTUDIO_VERSION}\n\nCMD [ \"/bin/bash\" ]\n"
}