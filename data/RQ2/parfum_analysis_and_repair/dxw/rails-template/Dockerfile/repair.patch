diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/dxw/rails-template/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/dxw/rails-template/Dockerfile/repaired.Dockerfile
index fbdee7c..49d305b 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/dxw/rails-template/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/dxw/rails-template/Dockerfile/repaired.Dockerfile
@@ -4,8 +4,8 @@
 FROM ruby:2.7.4 as base
 LABEL org.opencontainers.image.authors="contact@dxw.com"
 
-RUN curl -L https://deb.nodesource.com/setup_16.x | bash -
-RUN curl https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -
+RUN curl -f -L https://deb.nodesource.com/setup_16.x | bash -
+RUN curl -f https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -
 RUN \
   echo "deb https://dl.yarnpkg.com/debian/ stable main" | \
   tee /etc/apt/sources.list.d/yarn.list
@@ -14,7 +14,7 @@ RUN \
   apt-get update && \
   apt-get install -y --fix-missing --no-install-recommends \
   build-essential \
-  libpq-dev
+  libpq-dev && rm -rf /var/lib/apt/lists/*;
 
 ENV APP_HOME /srv/app
 ENV DEPS_HOME /deps
@@ -28,7 +28,7 @@ ENV NODE_ENV ${RAILS_ENV:-production}
 # ------------------------------------------------------------------------------
 FROM base AS dependencies
 
-RUN apt-get update && apt-get install -y yarn
+RUN apt-get update && apt-get install --no-install-recommends -y yarn && rm -rf /var/lib/apt/lists/*;
 
 WORKDIR ${DEPS_HOME}
 
@@ -37,8 +37,13 @@ ENV BUNDLE_GEM_GROUPS ${RAILS_ENV}
 
 COPY Gemfile ${DEPS_HOME}/Gemfile
 COPY Gemfile.lock ${DEPS_HOME}/Gemfile.lock
+RUN mkdir -p /usr/local/etc \
+  && { \
+    echo 'install: --no-document'; \
+    echo 'update: --no-document'; \
+  } >> /usr/local/etc/gemrc;
 
-RUN gem update --system 3.3.5
+RUN gem update --system 3.3.5 && rm -rf /root/.gem;
 RUN gem install bundler -v 2.3.5
 RUN bundle config set frozen "true"
 RUN bundle config set no-cache "true"
@@ -52,9 +57,9 @@ COPY package.json ${DEPS_HOME}/package.json
 
 RUN \
   if [ ${RAILS_ENV} = "production" ]; then \
-  yarn install --frozen-lockfile --production; \
+  yarn install --frozen-lockfile --production; yarn cache clean; \
   else \
-  yarn install --frozen-lockfile; \
+  yarn install --frozen-lockfile; yarn cache clean; \
   fi
 # End
 
@@ -126,9 +131,9 @@ FROM web as test
 
 RUN \
   apt-get update && \
-  apt-get install -y \
+  apt-get install --no-install-recommends -y \
   shellcheck \
-  yarn
+  yarn && rm -rf /var/lib/apt/lists/*;
 
 COPY .eslintignore ${APP_HOME}/.eslintignore
 COPY .eslintrc.json ${APP_HOME}/.eslintrc.json