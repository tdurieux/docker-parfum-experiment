{
  "startTime": 1674250817439,
  "endTime": 1674250818107,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 31
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM elixir:1.11.3-alpine as builder\n\n# build step\nARG MIX_ENV=prod\nARG NODE_ENV=production\nARG APP_VER=0.0.1\nARG USE_IP_V6=false\nARG REQUIRE_DB_SSL=false\nARG AWS_ACCESS_KEY_ID\nARG AWS_SECRET_ACCESS_KEY\nARG BUCKET_NAME\nARG AWS_REGION\nARG PAPERCUPS_STRIPE_SECRET\n\nENV APP_VERSION=$APP_VER\nENV REQUIRE_DB_SSL=$REQUIRE_DB_SSL\nENV USE_IP_V6=$USE_IP_V6\nENV AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID\nENV AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY\nENV BUCKET_NAME=$BUCKET_NAME\nENV AWS_REGION=$AWS_REGION\nENV PAPERCUPS_STRIPE_SECRET=$PAPERCUPS_STRIPE_SECRET\n\n\nRUN mkdir /app\nWORKDIR /app\n\nRUN apk add --no-cache git nodejs yarn python3 npm ca-certificates wget gnupg make erlang gcc libc-dev && \\\n    npm install npm@latest -g && npm cache clean --force;\n\n# Client side\nCOPY assets/package.json assets/package-lock.json ./assets/\nRUN npm install --prefix=assets && npm cache clean --force;\n\n# fix because of https://github.com/facebook/create-react-app/issues/8413\nENV GENERATE_SOURCEMAP=false\n\nCOPY priv priv\nCOPY assets assets\nRUN npm run build --prefix=assets\n\nCOPY mix.exs mix.lock ./\nCOPY config config\n\nRUN mix local.hex --force && \\\n    mix local.rebar --force && \\\n    mix deps.get --only prod\n\nCOPY lib lib\nRUN mix deps.compile\nRUN mix phx.digest priv/static\n\nWORKDIR /app\nCOPY rel rel\nRUN mix release papercups\n\nFROM alpine:3.13 AS app\nRUN apk add --no-cache openssl ncurses-libs\nENV LANG=C.UTF-8\nEXPOSE 4000\n\nWORKDIR /app\n\nENV HOME=/app\n\nRUN adduser -h /app -u 1000 -s /bin/sh -D papercupsuser\n\nCOPY --from=builder --chown=papercupsuser:papercupsuser /app/_build/prod/rel/papercups /app\nCOPY --from=builder --chown=papercupsuser:papercupsuser /app/priv /app/priv\nRUN chown -R papercupsuser:papercupsuser /app\n\nCOPY docker-entrypoint.sh /entrypoint.sh\nRUN chmod a+x /entrypoint.sh\n\nUSER papercupsuser\n\nWORKDIR /app\nENTRYPOINT [\"/entrypoint.sh\"]\nCMD [\"run\"]\n"
}