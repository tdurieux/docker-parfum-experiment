diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/gsmlg-dev/foundation/docker/editor-server/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/gsmlg-dev/foundation/docker/editor-server/Dockerfile/repaired.Dockerfile
index b5b3cb0..0c6e952 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/gsmlg-dev/foundation/docker/editor-server/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/gsmlg-dev/foundation/docker/editor-server/Dockerfile/repaired.Dockerfile
@@ -20,7 +20,7 @@ USER root
 RUN apt-get update && apt-get upgrade -y
 
 # install useful packages
-RUN apt-get install -y -qq \
+RUN apt-get install --no-install-recommends -y -qq \
   git \
   gnupg \
   lsb-release \
@@ -41,7 +41,7 @@ RUN apt-get install -y -qq \
   inotify-tools \
   iputils-ping net-tools \
   apache2-utils \
-  clang cmake ninja-build pkg-config libgtk-3-dev
+  clang cmake ninja-build pkg-config libgtk-3-dev && rm -rf /var/lib/apt/lists/*;
 
 # Gen locale
 ARG LANG=en_US.UTF-8
@@ -54,25 +54,25 @@ RUN echo $LANG UTF-8 | tee -a /etc/locale.gen \
 
 # install jdk
 ARG ANTLR_VERSION=4.10.1
-RUN apt-get install -y default-jdk \
+RUN apt-get install --no-install-recommends -y default-jdk \
   && curl -sSLf https://www.antlr.org/download/antlr-${ANTLR_VERSION}-complete.jar -o /usr/local/lib/antlr-${ANTLR_VERSION}-complete.jar \
   && echo "#!/bin/bash" > /usr/local/bin/antlr \
   && echo "java -jar /usr/local/lib/antlr-${ANTLR_VERSION}-complete.jar \"$@\"" >> /usr/local/bin/antlr \
   && chmod +x /usr/local/bin/antlr \
   && echo "#!/bin/bash" > /usr/local/bin/grun \
   && echo 'java org.antlr.v4.gui.TestRig "$@"' >> /usr/local/bin/grun \
-  && chmod +x /usr/local/bin/grun
+  && chmod +x /usr/local/bin/grun && rm -rf /var/lib/apt/lists/*;
 
 # install nodejs
 ARG NODEJS_VERSION=16
 ENV NODE_PATH=/usr/lib/node_modules
-RUN curl -sL https://deb.nodesource.com/setup_${NODEJS_VERSION}.x | bash - \
-  && apt-get install -y -qq nodejs \
+RUN curl -f -sL https://deb.nodesource.com/setup_${NODEJS_VERSION}.x | bash - \
+  && apt-get install --no-install-recommends -y -qq nodejs \
   && npm install -g npm \
   && npm install -g yarn \
   && npm install -g npm-check-updates \
   && npm install -g @aws-amplify/cli \
-  && echo "export NODE_PATH=/usr/lib/node_modules" | tee -a "/etc/zsh/zshenv"
+  && echo "export NODE_PATH=/usr/lib/node_modules" | tee -a "/etc/zsh/zshenv" && npm cache clean --force; && rm -rf /var/lib/apt/lists/*;
 
 # install golang
 ARG GO_VERSION=1.18.2
@@ -81,7 +81,7 @@ ARG GOPATH=/opt/go
 ENV GOPATH=$GOPATH
 RUN export ARCH=`dpkg --print-architecture`; \
   export GOPKG="go${GO_VERSION}.linux-${ARCH}.tar.gz"; \
-  curl -sSL "https://golang.org/dl/${GOPKG}" -o "/tmp/${GOPKG}" \
+  curl -f -sSL "https://golang.org/dl/${GOPKG}" -o "/tmp/${GOPKG}" \
   && tar -C /usr/local -xzf "/tmp/${GOPKG}" \
   && mkdir -p "${GOPATH}" \
   && echo "export PATH=\${PATH}:/usr/local/go/bin:${GOPATH}/bin" | tee -a "/etc/zsh/zshenv" \
@@ -104,13 +104,13 @@ RUN export ARCH=`dpkg --print-architecture`; \
   && chown -R coder:coder "${GOPATH}"
 
 # install python
-RUN apt-get install -y python3 python3-pip \
+RUN apt-get install --no-install-recommends -y python3 python3-pip \
   && update-alternatives --install /usr/bin/python python /usr/bin/python3.8 1 \
-  && cd /tmp && curl -sSL https://bootstrap.pypa.io/get-pip.py -o get-pip.py \
+  && cd /tmp && curl -f -sSL https://bootstrap.pypa.io/get-pip.py -o get-pip.py \
   && python get-pip.py \
   && python -m pip install ansible \
   && python -m pip install awscli \
-  && python -m pip install pipenv
+  && python -m pip install pipenv && rm -rf /var/lib/apt/lists/*;
 
 # install rust
 ARG RUSTPATH=/opt/rust
@@ -125,17 +125,17 @@ RUN export RUSTUP_HOME=${RUSTPATH} \
   && chown -R coder:coder "${RUSTPATH}"
 
 # install php
-RUN apt-get install -y php-cli
+RUN apt-get install --no-install-recommends -y php-cli && rm -rf /var/lib/apt/lists/*;
 
 # install erlang and elixir
 RUN curl -sSLf https://packages.erlang-solutions.com/erlang-solutions_2.0_all.deb -o /tmp/erlang-solutions_2.0_all.deb \
   && dpkg -i /tmp/erlang-solutions_2.0_all.deb \
   && apt-get update \
-  && apt-get install -y esl-erlang || apt-get install -y erlang \
-  && apt-get install -y elixir
+  && apt-get install --no-install-recommends -y esl-erlang || apt-get install --no-install-recommends -y erlang \
+  && apt-get install --no-install-recommends -y elixir && rm -rf /var/lib/apt/lists/*;
 
 # install ruby
-RUN apt-get install -y ruby-full
+RUN apt-get install --no-install-recommends -y ruby-full && rm -rf /var/lib/apt/lists/*;
 
 # install kubectl
 ARG KUBECTL_VERSION=1.24.2