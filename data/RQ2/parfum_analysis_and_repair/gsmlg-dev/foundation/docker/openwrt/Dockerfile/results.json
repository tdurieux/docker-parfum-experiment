{
  "startTime": 1674246818648,
  "endTime": 1674246819320,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 50
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 50
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:20.04 as builder\n\nLABEL mantainer=\"Jonathan Gao <gsmlg.com@gmail.com>\"\n\nARG DEBIAN_FRONTEND=noninteractive\n\nRUN apt-get update && apt-get upgrade -y\n\n# install useful packages\nRUN DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y -qq \\\n  git \\\n  gnupg \\\n  lsb-release \\\n  silversearcher-ag \\\n  perl \\\n  vim \\\n  make \\\n  gawk \\\n  libncurses-dev \\\n  rsync \\\n  gcc \\\n  g++ \\\n  unzip \\\n  bzip2 \\\n  wget \\\n  python \\\n  bash \\\n  genisoimage \\\n  protobuf-compiler protobuf-c-compiler \\\n  build-essential ccache ecj fastjar file g++ gawk \\\n  gettext git java-propose-classpath libelf-dev libncurses5-dev \\\n  libncursesw5-dev libssl-dev python python2.7-dev python3 unzip wget \\\n  python3-distutils python3-setuptools python3-dev rsync subversion swig \\\n  time xsltproc zlib1g-dev ca-certificates mkisofs && rm -rf /var/lib/apt/lists/*;\n\nRUN git clone --depth 1 --single-branch --branch openwrt-21.02 https://git.openwrt.org/openwrt/openwrt.git /openwrt\n\nCOPY config /openwrt/.config\n\nRUN cd /openwrt \\\n    && ./scripts/feeds update -a \\\n    && ./scripts/feeds install -a \\\n    && export FORCE_UNSAFE_CONFIGURE=1 \\\n    && make defconfig \\\n    && make world\n\nFROM alpine\n\nCOPY --from=builder /openwrt/bin /openwrt\n\n"
}