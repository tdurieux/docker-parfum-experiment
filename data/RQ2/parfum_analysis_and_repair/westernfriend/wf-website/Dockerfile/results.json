{
  "startTime": 1674255055852,
  "endTime": 1674255056671,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 22
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.9\nLABEL maintainer=\"brylie@amble.fi\"\n\nENV PYTHONUNBUFFERED 1\nENV DJANGO_ENV dev\n\n# Install system packages required by Wagtail and Django.\nRUN apt-get update --yes --quiet && apt-get install --yes --quiet --no-install-recommends \\\n    build-essential \\\n    libpq-dev \\\n    libjpeg62-turbo-dev \\\n    zlib1g-dev \\\n    libwebp-dev \\\n    curl \\\n && rm -rf /var/lib/apt/lists/*\n\nRUN curl -f -sSL https://install.python-poetry.org | python3 -\n\n# We use gunicorn to serve the project\nRUN pip install --no-cache-dir gunicorn\n\n# Poetry is used to manage dependencies\nRUN pip install --no-cache-dir poetry\n\nWORKDIR /app/\nCOPY . /app\n\n# Note: we don't want Poetry to create a virtual environment\n# Instead, it should use a local directory\nRUN poetry config virtualenvs.create false\n\n# Install Poetry dependencies\nRUN poetry install --no-dev\n\n# Collect static files.\nRUN python manage.py collectstatic --noinput --clear\n\nRUN useradd wagtail\nRUN chown -R wagtail /app\n\nUSER wagtail\n\n# Port used by this container to serve HTTP.\nEXPOSE 8000\n\n# Run the server\nCMD set -xe; gunicorn --worker-tmp-dir /dev/shm core.wsgi:application --workers 3\n"
}