{
  "startTime": 1674251619008,
  "endTime": 1674251619697,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 7,
        "columnEnd": 65
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 7,
        "columnEnd": 62
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 22,
        "lineEnd": 63,
        "columnStart": 4,
        "columnEnd": 120
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 52,
        "columnEnd": 118
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 52,
        "columnEnd": 118
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# Easy dockerfile to test my stuff\nFROM ubuntu:bionic\nLABEL Description=\"Wenlock dotfiles\" Vendor=\"Wenlock Wizzard in a Blizzard LTD.\" Version=\"0.0.1\" Maintainer=\"wenlock@github.com\"\n\n# Lets setup Docker in Docker using https://github.com/microsoft/vscode-dev-containers/tree/master/script-library\n\n# See https://aka.ms/vscode-remote/containers/non-root-user for details.\nARG USERNAME=wenlock\nARG USER_UID=1000\nARG USER_GID=$USER_UID\n# Common debian config\nARG UPGRADE_PACKAGES=\"true\"\nARG INSTALL_ZSH=\"true\"\nARG COMMON_SCRIPT_SOURCE=\"https://raw.githubusercontent.com/microsoft/vscode-dev-containers/master/script-library/common-debian.sh\"\nARG COMMON_SCRIPT_SHA=\"dev-mode\"\n# Docker script args, location, and expected SHA - SHA generated on release\nARG DOCKER_SCRIPT_SOURCE=\"https://raw.githubusercontent.com/microsoft/vscode-dev-containers/master/script-library/docker-debian.sh\"\nARG DOCKER_SCRIPT_SHA=\"dev-mode\"\nARG ENABLE_NONROOT_DOCKER=\"true\"\nARG SOURCE_SOCKET=/var/run/docker-host.sock\nARG TARGET_SOCKET=/var/run/docker.sock\nRUN export DEBIAN_FRONTEND=noninteractive \\\n    && apt-get update \\\n    && apt-get -y install --no-install-recommends \\\n       apt-transport-https \\    \n       apt-utils \\\n       dialog \\\n       ca-certificates \\\n       coreutils \\\n       curl \\\n       git \\\n       gnupg2 \\\n       gnupg-agent \\\n       gosu \\\n       less \\\n       lsb-release \\\n       openssh-client \\\n       procps \\\n       socat \\\n       software-properties-common \\\n    2>&1 \\\n    #\n    # common debian config like sudo, add user, etc \\\n    && curl -f -sSL ${COMMON_SCRIPT_SOURCE} -o /tmp/common-setup.sh \\\n    && ( [ \"${COMMON_SCRIPT_SHA}\" = \"dev-mode\" ] || ( echo \"${COMMON_SCRIPT_SHA}    */tmp/common-setup.sh\" | sha256sum -c -)) \\\n    && /bin/bash /tmp/common-setup.sh \"${INSTALL_ZSH}\" \"${USERNAME}\" \"${USER_UID}\" \"${USER_GID}\" \"${UPGRADE_PACKAGES}\" \\\n    && rm /tmp/common-setup.sh \\\n    #\n    # Install dockerd\n    && curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add - \\\n    && add-apt-repository \\\n        \"deb [arch=amd64] https://download.docker.com/linux/ubuntu \\\n        $(lsb_release -cs) \\\n        stable\" \\\n    && apt-get update \\\n    && apt-get -y install --no-install-recommends \\\n        docker-ce \\\n        docker-ce-cli \\\n        containerd.io \\\n    #\n    # Use Docker script from script library to set things up (installs: docker, docker-compose, sets up dind, and a bunch of other stuff)\n    && curl -f -sSL $DOCKER_SCRIPT_SOURCE -o /tmp/docker-setup.sh \\\n    && ( [ \"${DOCKER_SCRIPT_SHA}\" = \"dev-mode\" ] || ( echo \"${DOCKER_SCRIPT_SHA}    */tmp/docker-setup.sh\" | sha256sum -c -)) \\\n    && /bin/bash /tmp/docker-setup.sh \"${ENABLE_NONROOT_DOCKER}\" \"${SOURCE_SOCKET}\" \"${TARGET_SOCKET}\" \"${USERNAME}\" \\\n    && rm /tmp/docker-setup.sh \\\n    #\n    # Clean up\n    && apt-get autoremove -y \\\n    && apt-get clean -y \\\n    && rm -rf /var/lib/apt/lists/*\n# try running as root\nRUN docker-compose --version \\\n    && docker --version\n\nVOLUME /var/lib/docker\n\nENV DOCKER_CHANNEL=stable\nENV DOCKER_EXTRA_OPTS=\"--default-address-pool base=10.88.0.0/22,size=28 --storage-driver overlay2 --log-level error\"\nENV DIND_COMMIT=52379fa76dee07ca038624d639d9e14f4fb719ff\n\nCOPY opt/bin/dockerd-entrypoint.sh /usr/local/bin/dockerd-entrypoint.sh\nRUN curl -fL -o /usr/local/bin/dind \"https://raw.githubusercontent.com/moby/moby/${DIND_COMMIT}/hack/dind\" \\\n    && chmod +x /usr/local/bin/dind \\\n    && chmod +x /usr/local/bin/dockerd-entrypoint.sh \\\n    && usermod -a -G docker $USERNAME\n\nWORKDIR /home/$USERNAME\nUSER $USERNAME\n\nENTRYPOINT [\"/usr/local/bin/dockerd-entrypoint.sh\"]\nCMD [\"sleep\", \"infinity\"]"
}