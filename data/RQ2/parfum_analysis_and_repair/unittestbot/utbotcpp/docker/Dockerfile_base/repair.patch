diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/unittestbot/utbotcpp/docker/Dockerfile_base b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/unittestbot/utbotcpp/docker/Dockerfile_base/repaired.Dockerfile
index 1effe62..1a53762 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/unittestbot/utbotcpp/docker/Dockerfile_base
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/unittestbot/utbotcpp/docker/Dockerfile_base/repaired.Dockerfile
@@ -18,33 +18,33 @@ RUN echo "Set disable_coredump false" >> /etc/sudo.conf
 WORKDIR docker
 
 # Install required system packages
-RUN apt update && DEBIAN_FRONTEND=noninteractive apt -y --no-install-recommends install sudo file python3-dateutil wget fakeroot libssl-dev build-essential software-properties-common
+RUN apt update && DEBIAN_FRONTEND=noninteractive apt -y --no-install-recommends install sudo file python3-dateutil wget fakeroot libssl-dev build-essential software-properties-common && rm -rf /var/lib/apt/lists/*;
 RUN echo "check_certificate = off" > /etc/wgetrc
 
 # We use C++ 17 for UnitTestBot, it is available in gcc-9; default gcc for ubuntu:18.04 is gcc-7
 RUN add-apt-repository ppa:ubuntu-toolchain-r/test
-RUN apt update && apt install -y --no-install-recommends gcc-9 g++-9
+RUN apt update && apt install -y --no-install-recommends gcc-9 g++-9 && rm -rf /var/lib/apt/lists/*;
 RUN sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100
 RUN sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 100
 RUN sudo update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-9 100
 
 # install git
-RUN apt install -y software-properties-common
+RUN apt install --no-install-recommends -y software-properties-common && rm -rf /var/lib/apt/lists/*;
 RUN apt update
 RUN add-apt-repository -y ppa:git-core/ppa
 RUN apt update
-RUN apt install -y git libcurl4-openssl-dev
+RUN apt install --no-install-recommends -y git libcurl4-openssl-dev && rm -rf /var/lib/apt/lists/*;
 
 # install others apt
-RUN apt install -y --no-install-recommends ninja-build python3-setuptools
-RUN apt install -y --no-install-recommends curl libcap-dev libncurses5-dev unzip libtcmalloc-minimal4 libgoogle-perftools-dev libsqlite3-dev doxygen python3-pip
-RUN apt -y install autoconf libtool
+RUN apt install -y --no-install-recommends ninja-build python3-setuptools && rm -rf /var/lib/apt/lists/*;
+RUN apt install -y --no-install-recommends curl libcap-dev libncurses5-dev unzip libtcmalloc-minimal4 libgoogle-perftools-dev libsqlite3-dev doxygen python3-pip && rm -rf /var/lib/apt/lists/*;
+RUN apt -y --no-install-recommends install autoconf libtool && rm -rf /var/lib/apt/lists/*;
 
 # install vscode dependencies
-RUN apt install -y libxshmfence1 libglu1
-RUN apt install -y libgconf-2-4 libatk1.0-0 libatk-bridge2.0-0 libgdk-pixbuf2.0-0 libgtk-3-0 libgbm-dev libnss3-dev libxss-dev
-RUN apt install -y libasound2
-RUN apt install -y xvfb
+RUN apt install --no-install-recommends -y libxshmfence1 libglu1 && rm -rf /var/lib/apt/lists/*;
+RUN apt install --no-install-recommends -y libgconf-2-4 libatk1.0-0 libatk-bridge2.0-0 libgdk-pixbuf2.0-0 libgtk-3-0 libgbm-dev libnss3-dev libxss-dev && rm -rf /var/lib/apt/lists/*;
+RUN apt install --no-install-recommends -y libasound2 && rm -rf /var/lib/apt/lists/*;
+RUN apt install --no-install-recommends -y xvfb && rm -rf /var/lib/apt/lists/*;
 
 RUN mkdir $UTBOT_ALL && cd $UTBOT_ALL
 
@@ -52,7 +52,7 @@ RUN mkdir $UTBOT_ALL && cd $UTBOT_ALL
 ENV UTBOT_INSTALL_DIR=$UTBOT_ALL/install
 ENV UTBOT_CMAKE_BINARY=$UTBOT_INSTALL_DIR/bin/cmake
 RUN wget https://github.com/Kitware/CMake/releases/download/v3.17.2/cmake-3.17.2.tar.gz -O /tmp/cmake_src.tar.gz
-RUN tar xfz /tmp/cmake_src.tar.gz -C $UTBOT_ALL
+RUN tar xfz /tmp/cmake_src.tar.gz -C $UTBOT_ALL && rm /tmp/cmake_src.tar.gz
 RUN cd $UTBOT_ALL/cmake-3.17.2/ && ./bootstrap --prefix=$UTBOT_INSTALL_DIR --parallel=`nproc` && make -j`nproc` && make install && cd $UTBOT_ALL && rm -rf $UTBOT_ALL/cmake-3.17.2
 
 # Create user
@@ -86,7 +86,7 @@ RUN mkdir build && cd build \
 
 # Install KLEE dependencies
 ENV CURL_CA_BUNDLE=""
-RUN sudo -E pip3 install tabulate==0.8.7 \
+RUN sudo -E pip3 install --no-cache-dir tabulate==0.8.7 \
                          typing==3.7.4.3 \
                          lit==0.11.0.post1 \
                          wllvm==1.3.1
@@ -161,14 +161,15 @@ ARG OPERATING_SYSTEM_TAG
 # RUN apt update && apt-cache policy libssl1.0-dev
 # RUN apt install -y --no-install-recommends libssl1.0-dev
 
-RUN if [[ "$OPERATING_SYSTEM_TAG" = "18.04" ]] ; then apt update && apt install -y --no-install-recommends nodejs-dev node-gyp libssl1.0-dev ; fi
-RUN apt update && apt install -y --no-install-recommends nodejs npm openssh-server net-tools gdb vim-nox rsync
-RUN pip3 install git+https://chromium.googlesource.com/external/gyp
+RUN if [[ "$OPERATING_SYSTEM_TAG" = "18.04" ]] ; then \
+ apt update && apt install -y --no-install-recommends nodejs-dev node-gyp libssl1.0-dev ; rm -rf /var/lib/apt/lists/*; fi
+RUN apt update && apt install -y --no-install-recommends nodejs npm openssh-server net-tools gdb vim-nox rsync && rm -rf /var/lib/apt/lists/*;
+RUN pip3 install --no-cache-dir git+https://chromium.googlesource.com/external/gyp
 
 # Update node and npm since defaults on ubuntu:18.04 have reached end of life
 RUN npm config set strict-ssl false
-RUN npm cache clean -f
-RUN sudo -E npm install -g n
+RUN npm cache clean --force -f
+RUN sudo -E npm install -g n && npm cache clean --force;
 RUN echo insecure > ~/.curlrc
 RUN sudo -E n stable
 RUN sudo -E apt remove -y --purge nodejs npm
@@ -207,7 +208,7 @@ COPY building_dependencies/runtime_env.sh /root/.bashrc
 # Install uclibc
 RUN git clone -b klee_uclibc_v1.2 https://github.com/klee/klee-uclibc.git $UTBOT_ALL/klee-uclibc
 WORKDIR $UTBOT_ALL/klee-uclibc
-RUN ./configure --make-llvm-lib && make -j`nproc`
+RUN ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --make-llvm-lib && make -j`nproc`
 
 # Download library for access private members
 RUN git clone https://github.com/martong/access_private.git $UTBOT_ALL/access_private