{
  "startTime": 1674249947463,
  "endTime": 1674249949491,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 170,
        "lineEnd": 170,
        "columnStart": 12,
        "columnEnd": 28
      }
    },
    {
      "rule": "npmCacheCleanUseForce",
      "position": {
        "lineStart": 169,
        "lineEnd": 169,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 88,
        "lineEnd": 91,
        "columnStart": 12,
        "columnEnd": 37
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 165,
        "lineEnd": 165,
        "columnStart": 4,
        "columnEnd": 67
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 209,
        "lineEnd": 209,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 126
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 160
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 126
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 18,
        "columnEnd": 182
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 18,
        "columnEnd": 68
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 160
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 126
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 163,
        "lineEnd": 163,
        "columnStart": 68,
        "columnEnd": 140
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 164,
        "lineEnd": 164,
        "columnStart": 18,
        "columnEnd": 110
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 69
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 67
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 160
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 150
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 47
      }
    }
  ],
  "repairedDockerfile": "# This is a base dockerfile for UTBot. It's image can be used as a development environment and as a first step in building UTBot, it's release build and integration tests.\n# This dockerfile installs grpc, cmake, llvm, uclibc, z3. Also it installs such packages as ssh, git, openssh-server, nodejs, python and others.\n# You need to build this dockerfile inside UnitTestBot/UTBotCpp/docker directory.\n\nARG OPERATING_SYSTEM_TAG\nFROM ubuntu:$OPERATING_SYSTEM_TAG as base_env\nLABEL maintainer=\"UnitTestBot\"\nSHELL [\"/bin/bash\", \"--login\", \"-c\"]\n\nENV UTBOT_ALL=/utbot_distr\nENV WORKSPACE=/github/workspace/\n\nUSER root\n\n# Handle sudo annoying bug https://bugzilla.redhat.com/show_bug.cgi?id=1773148\nRUN echo \"Set disable_coredump false\" >> /etc/sudo.conf\n\nWORKDIR docker\n\n# Install required system packages\nRUN apt update && DEBIAN_FRONTEND=noninteractive apt -y --no-install-recommends install sudo file python3-dateutil wget fakeroot libssl-dev build-essential software-properties-common && rm -rf /var/lib/apt/lists/*;\nRUN echo \"check_certificate = off\" > /etc/wgetrc\n\n# We use C++ 17 for UnitTestBot, it is available in gcc-9; default gcc for ubuntu:18.04 is gcc-7\nRUN add-apt-repository ppa:ubuntu-toolchain-r/test\nRUN apt update && apt install -y --no-install-recommends gcc-9 g++-9 && rm -rf /var/lib/apt/lists/*;\nRUN sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100\nRUN sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 100\nRUN sudo update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-9 100\n\n# install git\nRUN apt install --no-install-recommends -y software-properties-common && rm -rf /var/lib/apt/lists/*;\nRUN apt update\nRUN add-apt-repository -y ppa:git-core/ppa\nRUN apt update\nRUN apt install --no-install-recommends -y git libcurl4-openssl-dev && rm -rf /var/lib/apt/lists/*;\n\n# install others apt\nRUN apt install -y --no-install-recommends ninja-build python3-setuptools && rm -rf /var/lib/apt/lists/*;\nRUN apt install -y --no-install-recommends curl libcap-dev libncurses5-dev unzip libtcmalloc-minimal4 libgoogle-perftools-dev libsqlite3-dev doxygen python3-pip && rm -rf /var/lib/apt/lists/*;\nRUN apt -y --no-install-recommends install autoconf libtool && rm -rf /var/lib/apt/lists/*;\n\n# install vscode dependencies\nRUN apt install --no-install-recommends -y libxshmfence1 libglu1 && rm -rf /var/lib/apt/lists/*;\nRUN apt install --no-install-recommends -y libgconf-2-4 libatk1.0-0 libatk-bridge2.0-0 libgdk-pixbuf2.0-0 libgtk-3-0 libgbm-dev libnss3-dev libxss-dev && rm -rf /var/lib/apt/lists/*;\nRUN apt install --no-install-recommends -y libasound2 && rm -rf /var/lib/apt/lists/*;\nRUN apt install --no-install-recommends -y xvfb && rm -rf /var/lib/apt/lists/*;\n\nRUN mkdir $UTBOT_ALL && cd $UTBOT_ALL\n\n# Install latest CMake\nENV UTBOT_INSTALL_DIR=$UTBOT_ALL/install\nENV UTBOT_CMAKE_BINARY=$UTBOT_INSTALL_DIR/bin/cmake\nRUN wget https://github.com/Kitware/CMake/releases/download/v3.17.2/cmake-3.17.2.tar.gz -O /tmp/cmake_src.tar.gz\nRUN tar xfz /tmp/cmake_src.tar.gz -C $UTBOT_ALL && rm /tmp/cmake_src.tar.gz\nRUN cd $UTBOT_ALL/cmake-3.17.2/ && ./bootstrap --prefix=$UTBOT_INSTALL_DIR --parallel=`nproc` && make -j`nproc` && make install && cd $UTBOT_ALL && rm -rf $UTBOT_ALL/cmake-3.17.2\n\n# Create user\nRUN useradd -m utbot && \\\n    echo utbot:utbot | chpasswd && \\\n    cp /etc/sudoers /etc/sudoers.bak && \\\n    echo 'utbot  ALL=(root) NOPASSWD: ALL' >> /etc/sudoers\n\nUSER utbot\nWORKDIR /home/utbot\n\n# Install llvm\nUSER root\nARG LLVM_VERSION_MAJOR\nRUN mkdir $UTBOT_ALL/llvm_gold_plugin\nCOPY building_dependencies/llvm_gold_plugin/plugin-api.h $UTBOT_ALL/llvm_gold_plugin\nRUN git clone --single-branch --branch \"release/${LLVM_VERSION_MAJOR}.x\" --depth 1 \"https://github.com/llvm/llvm-project.git\" $UTBOT_ALL/llvm-project\nWORKDIR $UTBOT_ALL/llvm-project\nRUN mkdir build && cd build \\\n    && $UTBOT_CMAKE_BINARY \\\n    -DCMAKE_BUILD_TYPE=\"Release\" \\\n    -DCMAKE_INSTALL_PREFIX=$UTBOT_INSTALL_DIR \\\n    -DLLVM_INCLUDE_TESTS=OFF \\\n    -DLLVM_BINUTILS_INCDIR=$UTBOT_ALL/llvm_gold_plugin \\\n    -DLLVM_ENABLE_RTTI=ON \\\n    -DLLVM_ENABLE_EH=ON \\\n    -DLLVM_TARGETS_TO_BUILD=\"host\" \\\n    -DLLVM_ENABLE_PROJECTS=\"clang;compiler-rt;libc;libclc;libcxx;libcxxabi;lld;lldb;clang-tools-extra\" -G \"Ninja\" ../llvm \\\n    && $UTBOT_CMAKE_BINARY --build . --target install\n\n\n# Install KLEE dependencies\nENV CURL_CA_BUNDLE=\"\"\nRUN sudo -E pip3 install --no-cache-dir tabulate==0.8.7 \\\n                         typing==3.7.4.3 \\\n                         lit==0.11.0.post1 \\\n                         wllvm==1.3.1\n\nWORKDIR $UTBOT_ALL/llvm-project\nRUN mkdir libcxx_build && cd libcxx_build \\\n    && export CC=wllvm \\\n    && export CXX=wllvm++ \\\n    && export LLVM_COMPILER=clang \\\n    && export LLVM_COMPILER_PATH=$UTBOT_INSTALL_DIR/bin \\\n    && $UTBOT_CMAKE_BINARY \\\n    -DLLVM_ENABLE_PROJECTS=\"libcxx;libcxxabi\" \\\n    -DLLVM_ENABLE_THREADS:BOOL=OFF \\\n    -DLIBCXX_ENABLE_THREADS:BOOL=OFF \\\n    -DLIBCXX_ENABLE_SHARED:BOOL=ON \\\n    -DLIBCXXABI_ENABLE_THREADS:BOOL=OFF \\\n    -DCMAKE_BUILD_TYPE:STRING=Release \\\n    -DLLVM_TARGETS_TO_BUILD=host \\\n    -DCMAKE_INSTALL_PREFIX=$UTBOT_ALL/libcxx/install \\\n    -DLIBCXX_ENABLE_STATIC_ABI_LIBRARY:BOOL=ON ../llvm \\\n    && make cxx -j`nproc` && cd projects && make install \\\n    && find $UTBOT_ALL/libcxx/install/lib/lib*.so -print0 | xargs -0 --max-args=1 extract-bc \\\n    && find $UTBOT_ALL/libcxx/install/lib/lib*.a -print0 | xargs -0 --max-args=1 extract-bc \\\n    && cp -R $UTBOT_ALL/llvm-project/libcxxabi $UTBOT_ALL/libcxx \\\n    && export CC=$UTBOT_INSTALL_DIR/bin/clang \\\n    && export CXX=$UTBOT_INSTALL_DIR/bin/clang++\n\n# Delete llvm src\nRUN cd $UTBOT_ALL && rm -rf $UTBOT_ALL/llvm-project && rm -rf $UTBOT_ALL/llvm_gold_plugin\n\n# Install GRPC\nFROM base_env\nRUN git clone --single-branch -b v1.29.0 --depth=1 https://github.com/grpc/grpc $UTBOT_ALL/grpc\nRUN cd $UTBOT_ALL/grpc && git submodule update --init\nRUN cd $UTBOT_ALL/grpc \\\n  && mkdir -p cmake/build \\\n  && cd cmake/build \\\n  && $UTBOT_CMAKE_BINARY -DgRPC_INSTALL=ON -DgRPC_BUILD_TESTS=OFF -DCMAKE_INSTALL_PREFIX=$UTBOT_INSTALL_DIR ../.. \\\n  && make -j`nproc` \\\n  && make install \\\n  && cd $UTBOT_ALL \\\n  && rm -rf $UTBOT_ALL/grpc\n\n# Get gtest\nUSER root\nRUN git clone --single-branch -b release-1.10.0 https://github.com/google/googletest.git $UTBOT_ALL/gtest\nRUN cd $UTBOT_ALL/gtest && mkdir build && cd build && \\\n    $UTBOT_CMAKE_BINARY -G \"Ninja\" -DCMAKE_INSTALL_PREFIX=$UTBOT_INSTALL_DIR .. && \\\n    $UTBOT_CMAKE_BINARY --build . --target install && \\\n    cd $UTBOT_ALL\nUSER utbot\n\n# Install z3\nUSER root\nRUN git clone --single-branch -b z3-4.8.7 --depth=1 https://github.com/Z3Prover/z3.git $UTBOT_ALL/z3-src\nRUN cd $UTBOT_ALL/z3-src && mkdir build && cd build && \\\n    $UTBOT_CMAKE_BINARY -G \"Ninja\" -DCMAKE_INSTALL_PREFIX=$UTBOT_INSTALL_DIR .. && \\\n    $UTBOT_CMAKE_BINARY --build . --target install && \\\n    cd $UTBOT_ALL && \\\n    rm -rf $UTBOT_ALL/z3-src\nUSER utbot\n\n# Add ssh authorization key\nRUN mkdir -p /home/utbot/.ssh/\nRUN echo \"StrictHostKeyChecking no\" >> /home/utbot/.ssh/config\n\nUSER root\nARG OPERATING_SYSTEM_TAG\n\n# When we switch to Ubuntu 20 container, we may still need old libssl if we support Ubuntu < 18\n# RUN \"deb http://security.ubuntu.com/ubuntu bionic-security main\" | sudo tee -a /etc/apt/sources.list\n# RUN apt update && apt-cache policy libssl1.0-dev\n# RUN apt install -y --no-install-recommends libssl1.0-dev\n\nRUN if [[ \"$OPERATING_SYSTEM_TAG\" = \"18.04\" ]] ; then \\\n apt update && apt install -y --no-install-recommends nodejs-dev node-gyp libssl1.0-dev ; rm -rf /var/lib/apt/lists/*; fi\nRUN apt update && apt install -y --no-install-recommends nodejs npm openssh-server net-tools gdb vim-nox rsync && rm -rf /var/lib/apt/lists/*;\nRUN pip3 install --no-cache-dir git+https://chromium.googlesource.com/external/gyp\n\n# Update node and npm since defaults on ubuntu:18.04 have reached end of life\nRUN npm config set strict-ssl false\nRUN npm cache clean --force -f\nRUN sudo -E npm install -g n && npm cache clean --force;\nRUN echo insecure > ~/.curlrc\nRUN sudo -E n stable\nRUN sudo -E apt remove -y --purge nodejs npm\n\n# Install cmake which can generate link_commands.json. Installing cmake the second time in order to build base image faster since this cmake may be changed frequently.\nRUN git clone --single-branch -b utbot-0.1.2b --depth=1 https://github.com/Software-Analysis-Team/CMake.git $UTBOT_ALL/cmake\nRUN cd $UTBOT_ALL/cmake && $UTBOT_CMAKE_BINARY  -DCMAKE_INSTALL_PREFIX=$UTBOT_INSTALL_DIR . && \\\n    make -j`nproc` && make install && cd $UTBOT_ALL && rm -rf $UTBOT_ALL/cmake\n\n## Setup ssh\nRUN mkdir -p /var/run/sshd\n# SSH login fix. Otherwise user is kicked off after login\nRUN sed 's@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd\nENV NOTVISIBLE \"in users profile\"\nRUN echo \"export VISIBLE=now\" >> /etc/profile\n\n# Append installation paths\nRUN mkdir $UTBOT_ALL/klee && chown utbot: $UTBOT_ALL/klee/\nRUN mkdir $UTBOT_ALL/server-install && chown utbot: $UTBOT_ALL/server-install/\n\n# Installing patched version of lit to handle Klee unit-test execution properly\nUSER root\nCOPY building_dependencies/patches/lit.py /usr/local/bin/lit\nRUN chmod +x /usr/local/bin/lit\n\nRUN sudo update-alternatives --install /usr/bin/python python /usr/bin/python3 100\n\n# Download CLI11 and Rang libs for nice CLI\nRUN wget https://github.com/CLIUtils/CLI11/releases/download/v1.9.1/CLI11.hpp -P $UTBOT_ALL/cli\nRUN wget https://github.com/agauniyal/rang/releases/download/v3.1.0/rang.hpp -P $UTBOT_ALL/cli\n\n# Applying environment variables to all users\nCOPY building_dependencies/runtime_env.sh /home/utbot/.bashrc\nCOPY building_dependencies/runtime_env.sh /root/.bashrc\n\n# Install uclibc\nRUN git clone -b klee_uclibc_v1.2 https://github.com/klee/klee-uclibc.git $UTBOT_ALL/klee-uclibc\nWORKDIR $UTBOT_ALL/klee-uclibc\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --make-llvm-lib && make -j`nproc`\n\n# Download library for access private members\nRUN git clone https://github.com/martong/access_private.git $UTBOT_ALL/access_private\n\nRUN chsh -s /bin/bash utbot\nEXPOSE 2020\nCMD [\"/usr/sbin/sshd\", \"-D\", \"-p 2020\"]\n"
}