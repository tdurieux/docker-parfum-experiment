diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/rapidsai/node-rapids/dev/dockerfiles/devel/main.Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/rapidsai/node-rapids/dev/dockerfiles/devel/main.Dockerfile/repaired.Dockerfile
index 237b029..1095187 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/rapidsai/node-rapids/dev/dockerfiles/devel/main.Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/rapidsai/node-rapids/dev/dockerfiles/devel/main.Dockerfile/repaired.Dockerfile
@@ -1,5 +1,3 @@
-# syntax=docker/dockerfile:1.3
-
 ARG AMD64_BASE
 ARG ARM64_BASE
 ARG NODE_VERSION=16.15.1
@@ -62,13 +60,13 @@ RUN export DEBIAN_FRONTEND=noninteractive \
     gpg wget software-properties-common lsb-release \
  && add-apt-repository --no-update -y ppa:git-core/ppa \
  && add-apt-repository --no-update -y ppa:ubuntu-toolchain-r/test \
- # Install kitware cmake apt repository
+ # Install kitware cmake apt repository \
  && wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null \
-  | gpg --dearmor - | tee /usr/share/keyrings/kitware-archive-keyring.gpg >/dev/null \
+  | gpg --batch --dearmor - | tee /usr/share/keyrings/kitware-archive-keyring.gpg >/dev/null \
  && bash -c 'echo -e "\
 deb [signed-by=/usr/share/keyrings/kitware-archive-keyring.gpg] https://apt.kitware.com/ubuntu/ $(lsb_release -cs) main\n\
 " | tee /etc/apt/sources.list.d/kitware.list >/dev/null' \
- \
+
  && apt update \
  && apt install --no-install-recommends -y \
     git cmake ninja-build \
@@ -78,16 +76,16 @@ deb [signed-by=/usr/share/keyrings/kitware-archive-keyring.gpg] https://apt.kitw
     pkg-config \
     libxau6 libxdmcp6 libxcb1 libxext6 libx11-6 \
     libglvnd-dev libgl1-mesa-dev libegl1-mesa-dev libgles2-mesa-dev \
- \
+
  && chmod 0644 /usr/share/glvnd/egl_vendor.d/10_nvidia.json \
  && echo "/usr/local/nvidia/lib" >> /etc/ld.so.conf.d/nvidia.conf \
  && echo "/usr/local/nvidia/lib64" >> /etc/ld.so.conf.d/nvidia.conf \
- \
+
  # Install sccache
- && curl -SsL "https://github.com/mozilla/sccache/releases/download/v$SCCACHE_VERSION/sccache-v$SCCACHE_VERSION-$(uname -m)-unknown-linux-musl.tar.gz" \
+ && curl -f -SsL "https://github.com/mozilla/sccache/releases/download/v$SCCACHE_VERSION/sccache-v$SCCACHE_VERSION-$(uname -m)-unknown-linux-musl.tar.gz" \
     | tar -C /usr/bin -zf - --wildcards --strip-components=1 -x */sccache \
  && chmod +x /usr/bin/sccache \
- \
+
  # Install npm
  && bash -c 'echo -e "\
 fund=false\n\
@@ -107,7 +105,7 @@ registry=https://registry.npmjs.org/\n\
  && echo "node version: $(node --version)" \
  && echo " npm version: $(npm --version)" \
  && echo "yarn version: $(yarn --version)" \
- \
+
  # Clean up
  && add-apt-repository --remove -y ppa:git-core/ppa \
  && add-apt-repository --remove -y ppa:ubuntu-toolchain-r/test \
@@ -116,7 +114,7 @@ registry=https://registry.npmjs.org/\n\
     /tmp/* \
     /var/tmp/* \
     /var/cache/apt/* \
-    /var/lib/apt/lists/*
+    /var/lib/apt/lists/* && yarn cache clean;
 
 ENTRYPOINT ["docker-entrypoint.sh"]
 
@@ -133,7 +131,8 @@ ONBUILD ARG CLANGD_VERSION=12
 ONBUILD ARG CLANG_FORMAT_VERSION=12
 
 # Install dependencies and dev tools (llnode etc.)
-ONBUILD RUN export DEBIAN_FRONTEND=noninteractive \
+ \
+RUN export DEBIAN_FRONTEND=noninteractive \
  # Install LLVM apt sources
  && wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - \
  && bash -c 'echo -e "\
@@ -196,7 +195,70 @@ deb-src  http://apt.llvm.org/$(lsb_release -cs)/ llvm-toolchain-$(lsb_release -c
     /usr/local/lib/llnode \
     /etc/apt/sources.list.d/llvm-${LLDB_VERSION}.list \
     /etc/apt/sources.list.d/llvm-${CLANGD_VERSION}.list \
-    /etc/apt/sources.list.d/llvm-${CLANG_FORMAT_VERSION}.list
+    /etc/apt/sources.list.d/llvm-${CLANG_FORMAT_VERSION}.list && npm cache clean --force; ONBUILD
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
 
 FROM main-${TARGETARCH}
 
@@ -234,8 +296,8 @@ RUN export DEBIAN_FRONTEND=noninteractive \
     https://github.com/openucx/ucx/releases/download/v${UCX_VERSION}/ucx-v${UCX_VERSION}-${LINUX_VERSION}-mofed5-cuda11.deb \
  && dpkg -i /var/cache/apt/archives/ucx-v${UCX_VERSION}-${LINUX_VERSION}-mofed5-cuda11.deb || true && apt --fix-broken install -y \
  \
- # Install fixuid
- && curl -SsL "https://github.com/boxboat/fixuid/releases/download/v$FIXUID_VERSION/fixuid-$FIXUID_VERSION-linux-${TARGETARCH}.tar.gz" \
+ # Install fixuid \
+ && curl -f -SsL "https://github.com/boxboat/fixuid/releases/download/v$FIXUID_VERSION/fixuid-$FIXUID_VERSION-linux-${TARGETARCH}.tar.gz" \
   | tar -C /usr/bin -xzf - \
  && chown root:root /usr/bin/fixuid && chmod 4755 /usr/bin/fixuid && mkdir -p /etc/fixuid \
  && bash -c 'echo -e "\
@@ -245,7 +307,7 @@ paths:\n\
   - /opt/rapids\n\
   - /opt/rapids/node\n\
 " | tee /etc/fixuid/config.yml >/dev/null' \
- \
+
  # Add a non-root user
  && useradd \
     --uid 1000 --shell /bin/bash \
@@ -254,15 +316,15 @@ paths:\n\
     rapids \
  && mkdir -p /opt/rapids/node/.cache \
  && mkdir -p -m 0700 /opt/rapids/.ssh \
- \
+
  # Add GitHub's public keys to known_hosts
- && curl -s https://api.github.com/meta | jq -r '.ssh_keys | map("github.com \(.)") | .[]' > /opt/rapids/.ssh/known_hosts \
+ && curl -f -s https://api.github.com/meta | jq -r '.ssh_keys | map("github.com \(.)") | .[]' > /opt/rapids/.ssh/known_hosts \
  && cp /root/.npmrc /opt/rapids/.npmrc \
  && ln -s /opt/rapids/node/.vscode/server /opt/rapids/.vscode-server \
  && ln -s /opt/rapids/node/.vscode/server-insiders /opt/rapids/.vscode-server-insiders \
  && chown -R rapids:rapids /opt/rapids \
  && bash -c 'echo "rapids ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers.d/nopasswd' \
- \
+
  # yellow + blue terminal prompt
  && sed -ri "s/32m/33m/g" /opt/rapids/.bashrc \
  && sed -ri "s/34m/36m/g" /opt/rapids/.bashrc \
@@ -284,14 +346,14 @@ mkdir -p /opt/rapids/node/.vscode/server{,-insiders}\n\
 # flush commands to .bash_history immediately\n\
 export PROMPT_COMMAND=\"history -a; \$PROMPT_COMMAND\";\n\
 "' >> /opt/rapids/.bashrc \
- \
+
  # Add npm and yarn completions
  && mkdir -p /etc/bash_completion.d \
  && npm completion > /etc/bash_completion.d/npm \
  && curl -fsSL --compressed \
     https://raw.githubusercontent.com/dsifford/yarn-completion/5bf2968493a7a76649606595cfca880a77e6ac0e/yarn-completion.bash \
   | tee /etc/bash_completion.d/yarn >/dev/null \
- \
+
  # Install NVENC-enabled wrtc
  && wget -O /opt/rapids/wrtc-dev.tgz \
     https://github.com/trxcllnt/node-webrtc-builds/releases/download/v${NODE_WEBRTC_VERSION}/wrtc-${NODE_WEBRTC_VERSION}-linux-${TARGETARCH}.tgz \
@@ -302,7 +364,7 @@ export PROMPT_COMMAND=\"history -a; \$PROMPT_COMMAND\";\n\
     /tmp/* \
     /var/tmp/* \
     /var/cache/apt/* \
-    /var/lib/apt/lists/*
+    /var/lib/apt/lists/* && npm cache clean --force;
 
 ENV NO_UPDATE_NOTIFIER=1
 ENV RAPIDSAI_SKIP_DOWNLOAD=1