{
  "startTime": 1674218156443,
  "endTime": 1674218158092,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 73,
        "lineEnd": 73,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 57,
        "columnEnd": 75
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 29,
        "columnEnd": 55
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 57,
        "columnEnd": 75
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG CUDA_VER=11.2.0\nARG LINUX_VER=ubuntu18.04\n\nFROM nvidia/cuda:${CUDA_VER}-devel-${LINUX_VER}\n\nRUN apt update -y && apt-get --fix-missing upgrade -y && apt install --no-install-recommends -y git && rm -rf /var/lib/apt/lists/*;\n\nADD https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh /miniconda.sh\nRUN bash /miniconda.sh -b -p /opt/conda\n\n\nENV GCC_VERSION=9\nENV CXX_VERSION=9\nENV CC=/usr/bin/gcc\nENV CXX=/usr/bin/g++\n\nARG CONDA_HOME=/opt/conda\nENV CONDA_HOME=\"$CONDA_HOME\"\n\nENV CUDA_HOME=\"/usr/local/cuda-11.2\"\nENV CUDA_PATH=\"$CUDA_HOME\"\n\nARG CUDA_SHORT_VERSION\nENV CUDA_SHORT_VERSION=\"$CUDA_SHORT_VERSION\"\n\nARG PARALLEL_LEVEL=4\nENV PARALLEL_LEVEL=${PARALLEL_LEVEL}\nENV PATH=\"$CONDA_HOME/bin:\\\n/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:\\\n$CUDA_HOME/bin\"\n\n\nSHELL [\"/bin/bash\", \"-c\"]\n\nENV CONDA_ENV=\"rapids-gpu-bdb\"\n\nCOPY /rapids-gpu-bdb-cuda11.2.yml /rapids-gpu-bdb-cuda11.2.yml\nRUN conda env create --name ${CONDA_ENV} --file /rapids-gpu-bdb-cuda11.2.yml\nRUN conda install -n ${CONDA_ENV} -c conda-forge spacy oauth2client gspread -q -y\nRUN source activate ${CONDA_ENV} && python -m spacy download en_core_web_sm\n\n\n# need to configure tzdata otherwise (seemingly)\nARG DEBIAN_FRONTEND=noninteractive\n\nRUN set -x \\\n # Install dependencies\n && mkdir -p /etc/bash_completion.d \\\n && apt update -y --fix-missing || true \\\n && apt upgrade -y --fix-missing || true \\\n && apt install -y --fix-missing software-properties-common \\\n && add-apt-repository -y ppa:git-core/ppa || true \\\n && apt install -y --fix-missing --no-install-recommends \\\n    ed vim bc nano less git wget sudo tzdata \\\n    apt-utils apt-transport-https \\\n    gcc g++ ninja-build bash-completion \\\n    curl libssl-dev libcurl4-openssl-dev zlib1g-dev \\\n    # ucx and ucx-py dependencies\n    unzip automake autoconf libb2-dev libzstd-dev \\\n    libtool librdmacm-dev libnuma-dev \\\n && bash -c \"echo -e '\\\ndeb http://archive.ubuntu.com/ubuntu/ xenial universe\\n\\\ndeb http://archive.ubuntu.com/ubuntu/ xenial-updates universe\\\n'\" >> /etc/apt/sources.list.d/xenial.list \\\n && apt update -y || true && apt install --no-install-recommends -y libibcm-dev \\\n && rm /etc/apt/sources.list.d/xenial.list \\\n # cleanup\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\n\n# Install ibverbs from MOFED\nADD https://www.mellanox.com/downloads/ofed/MLNX_OFED-5.2-2.2.0.0/MLNX_OFED_LINUX-5.2-2.2.0.0-ubuntu18.04-x86_64.tgz /MLNX_OFED_LINUX-5.2-2.2.0.0-ubuntu18.04-x86_64.tgz\n\nRUN tar -xzf /MLNX_OFED_LINUX-5.2-2.2.0.0-ubuntu18.04-x86_64.tgz && \\\n cd MLNX_OFED_LINUX-5.2-2.2.0.0-ubuntu18.04-x86_64 && \\\n echo y | ./mlnxofedinstall --user-space-only --without-fw-update --without-neohost-backend\\\n && rm -rf /var/lib/apt/lists/* \\\n && rm -rf /MLNX_OFED_LINUX* && rm /MLNX_OFED_LINUX-5.2-2.2.0.0-ubuntu18.04-x86_64.tgz\n\nRUN rm -rf /MLNX_OFED_LINUX-5.2-2.2.0.0-ubuntu18.04-x86_64*\n\nRUN /opt/conda/bin/conda install -n $CONDA_ENV -c conda-forge autoconf cython automake make libtool \\\n                                 pkg-config m4 \\\n                                 --force --no-deps -y -q\n\nADD creds.json /creds.json\nENV GOOGLE_SHEETS_CREDENTIALS_PATH=/creds.json\n\nRUN conda clean --all\n\nWORKDIR /\n"
}