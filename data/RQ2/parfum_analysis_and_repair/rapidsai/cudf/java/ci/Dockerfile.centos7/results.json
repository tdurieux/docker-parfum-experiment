{
  "startTime": 1674217885310,
  "endTime": 1674217886026,
  "originalSmells": [
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 66
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# Copyright (c) 2020-2022, NVIDIA CORPORATION. All rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\n###\n# Build the image for cudf development environment.\n#\n# Arguments: CUDA_VERSION=11.5.0\n#\n###\nARG CUDA_VERSION=11.5.0\n# use rapids gpuci/cuda images until nvidia/cuda cuda 11.5+ images are available in docker hub\n# FROM nvidia/cuda:$CUDA_VERSION-devel-centos7\nFROM gpuci/cuda:$CUDA_VERSION-devel-centos7\n\n### Install basic requirements\nARG DEVTOOLSET_VERSION=9\nRUN yum install -y centos-release-scl && rm -rf /var/cache/yum\nRUN yum install -y devtoolset-${DEVTOOLSET_VERSION} epel-release && rm -rf /var/cache/yum\nRUN yum install -y git zlib-devel maven tar wget patch ninja-build && rm -rf /var/cache/yum\n\n## pre-create the CMAKE_INSTALL_PREFIX folder, set writable by any user for Jenkins\nRUN mkdir /usr/local/rapids && mkdir /rapids && chmod 777 /usr/local/rapids && chmod 777 /rapids\n\nARG CMAKE_VERSION=3.22.3\nRUN cd /usr/local/ && wget --quiet https://github.com/Kitware/CMake/releases/download/v${CMAKE_VERSION}/cmake-${CMAKE_VERSION}-linux-x86_64.tar.gz && \\\n   tar zxf cmake-${CMAKE_VERSION}-linux-x86_64.tar.gz && \\\n   rm cmake-${CMAKE_VERSION}-linux-x86_64.tar.gz\n\nENV PATH /usr/local/cmake-${CMAKE_VERSION}-linux-x86_64/bin:$PATH\n\nARG CCACHE_VERSION=4.6\nRUN cd /tmp && wget --quiet https://github.com/ccache/ccache/releases/download/v${CCACHE_VERSION}/ccache-${CCACHE_VERSION}.tar.gz && \\\n   tar zxf ccache-${CCACHE_VERSION}.tar.gz && \\\n   rm ccache-${CCACHE_VERSION}.tar.gz && \\\n   cd ccache-${CCACHE_VERSION} && \\\n   mkdir build && \\\n   cd build && \\\n   scl enable devtoolset-${DEVTOOLSET_VERSION} \\\n      \"cmake .. \\\n         -DCMAKE_BUILD_TYPE=Release \\\n         -DZSTD_FROM_INTERNET=ON \\\n         -DREDIS_STORAGE_BACKEND=OFF && \\\n      cmake --build . --parallel ${PARALLEL_LEVEL} --target install\" && \\\n   cd ../.. && \\\n   rm -rf ccache-${CCACHE_VERSION}\n"
}