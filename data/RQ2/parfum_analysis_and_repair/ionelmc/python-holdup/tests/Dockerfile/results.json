{
  "startTime": 1674217287620,
  "endTime": 1674217288347,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 91
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 30,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 35,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM buildpack-deps:20.04-scm AS deps\n\nENV TZ=UTC\n# DEBIAN_FRONTEND=noninteractive exists to prevent tzdata going nuts.\n# Maybe dpkg incorrectly detects interactive on buildkit containers?\nRUN echo \"deb http://apt.postgresql.org/pub/repos/apt focal-pgdg main 10\" > /etc/apt/sources.list.d/pgdg.list \\\n && curl -fsSL11 'https://www.postgresql.org/media/keys/ACCC4CF8.asc' | apt-key add - \\\n && apt-get update \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \\\n        python3-dev python3-distutils-extra \\\n        libpq-dev=10.* libpq5=10.* \\\n        build-essential git sudo ca-certificates && rm -rf /var/lib/apt/lists/*;\n# Avoid having to use python3 all over the place.\nRUN update-alternatives --install /usr/bin/python python /usr/bin/python3.8 1\n\nRUN bash -o pipefail -c \"curl -fsSL 'https://bootstrap.pypa.io/get-pip.py' | \\\n    python - --no-cache --disable-pip-version-check --upgrade pip setuptools\"\n\nRUN mkdir /wheels \\\n && pip wheel --no-cache --wheel-dir=/wheels psycopg2\n\n#################\n#################\nFROM ubuntu:20.04\n#################\nRUN test -e /etc/apt/apt.conf.d/docker-clean # sanity check\n\nENV TZ=UTC\nRUN apt-get update \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \\\n        curl software-properties-common gpg-agent \\\n && echo \"deb http://apt.postgresql.org/pub/repos/apt focal-pgdg main 10\" > /etc/apt/sources.list.d/pgdg.list \\\n && curl -fsSL11 'https://www.postgresql.org/media/keys/ACCC4CF8.asc' | apt-key add - \\\n && apt-get update \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \\\n        strace gdb lsof locate net-tools htop iputils-ping dnsutils \\\n        nano vim tree less telnet \\\n        redis-tools \\\n        socat \\\n        graphviz \\\n        dumb-init \\\n        libpq5=10.* postgresql-client-10 \\\n        python3-dbg python3-distutils python3-distutils-extra \\\n        libmemcached11 \\\n        sudo ca-certificates \\\n        gdal-bin python3-gdal && rm -rf /var/lib/apt/lists/*;\n# Avoid having to use python3 all over the place.\nRUN update-alternatives --install /usr/bin/python python /usr/bin/python3 1\n\n# Adds a new user named python and add it to the list of sudoers. Will be able to call sudo without the password.\n# This is more geared to development (eg: match user's UID) than production (where you shouln't need any sudo/home).\nRUN bash -o pipefail -c \"curl -fsSL 'https://bootstrap.pypa.io/get-pip.py' | \\\n    python - --no-cache --disable-pip-version-check --upgrade pip==22.0.3 setuptools==60.9.3\"\n\nRUN mkdir /deps\nCOPY --from=deps /wheels/* /deps/\nRUN pip install --no-cache-dir --force-reinstall --ignore-installed --upgrade --no-index --no-deps /deps/* \\\n && rm -rf /deps \\\n && mkdir /app /var/app\n\n# Create django user, will own the Django app\nRUN adduser --no-create-home --disabled-login --group --system app\nRUN chown -R app:app /app /var/app\n\nENV PYTHONUNBUFFERED=1\nRUN mkdir /project\nCOPY setup.* *.rst MANIFEST.in /project/\nCOPY src /project/src\nRUN pip install --no-cache-dir /project\nCOPY tests/test_pg.py /\n\nCMD [\"true\"]\n"
}