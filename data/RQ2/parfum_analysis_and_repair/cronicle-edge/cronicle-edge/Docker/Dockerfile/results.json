{
  "startTime": 1674250318305,
  "endTime": 1674250319127,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 81
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# test run: docker run -it -v $HOME/data:/opt/cronicle/data -p 3012:3012 cronicle:edge manager\n\nFROM alpine:3.15\nRUN apk add --no-cache git nodejs npm tini util-linux bash openssl procps coreutils curl tar acl jq\n# required: all: tini; alpine: util-linux procps coreutils\n\n# optional lolcat for tty/color debugging\nRUN apk add --no-cache lolcat --repository=http://dl-cdn.alpinelinux.org/alpine/edge/testing\n\n# optional java 15, for java 11 just use \"apk add openjdk11\"\n# RUN apk add openjdk15-jdk --repository=http://dl-cdn.alpinelinux.org/alpine/edge/testing\n# ENV JAVA_HOME=/usr/lib/jvm/java-15-openjdk\n# ENV PATH=\"$JAVA_HOME/bin:${PATH}\"\n\n# optional PySpark\n# RUN apk add python3 gcompat\n# RUN pip3 install pyspark\n# ENV SPARK_CLASSPATH=/jars/*\n# python version, might change (e.g. to 3.9)\n# ENV PYSPARK_PYTHON=python3.8\n\n# optional mc s3 client (+20MB)\n# RUN wget -O /usr/bin/mc http://dl.min.io/client/mc/release/linux-amd64/mc && chmod +x /usr/bin/mc\n\n# optional kafkacat\n# RUN apk add kafkacat --repository=http://dl-cdn.alpinelinux.org/alpine/edge/community\n# extra deps if using kerberos: apk add krb5 cyrus-sasl cyrus-sasl-gssapiv2\n\n# optional - set up custom CA cert\n# COPY myCA.cer /usr/local/share/ca-certificates/myCA.crt\n# RUN apk add --no-cache ca-certificates\n# RUN update-ca-certificates\n# ENV NODE_EXTRA_CA_CERTS=/usr/local/share/ca-certificates/myCA.crt\n\nENV CRONICLE_foreground=1\nENV CRONICLE_echo=1\nENV TZ=America/New_York\nENV EDITOR=vi\n\nENV PATH \"/opt/cronicle/bin:${PATH}\"\n\n# non root user for shell plugin\nARG CRONICLE_UID=1007\nARG CRONICLE_GID=1099\nRUN  addgroup cronicle --gid $CRONICLE_GID && adduser -D -h /opt/cronicle -u $CRONICLE_UID -G cronicle cronicle\n\nWORKDIR /opt/cronicle\nARG echo\nRUN echo $echo\nARG branch=main\nRUN git clone https://github.com/cronicle-edge/cronicle-edge.git /opt/cronicle\nRUN git checkout ${branch}\nRUN npm install && npm cache clean --force;\nRUN node bin/build dist\n# ARG bldonly\n# RUN echo $bldonly\n# RUN git pull && node bin/build dist\n\n# protect sensitive folders\nRUN  mkdir -p /opt/cronicle/data /opt/cronicle/conf && chmod 0700 /opt/cronicle/data /opt/cronicle/conf\n\nENTRYPOINT [\"/sbin/tini\", \"--\"]\n"
}