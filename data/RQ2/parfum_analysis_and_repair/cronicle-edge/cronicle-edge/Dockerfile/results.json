{
  "startTime": 1674254375810,
  "endTime": 1674254376276,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 81
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# docker tag cronicle:dev cronicle/cronicle:edge\n# test run: docker run --rm -it  -p 3019:3012 -e CRONICLE_manager=1 cronicle:dev bash\n# then type manager or worker\n\nFROM alpine:3.15\nRUN apk add --no-cache git nodejs npm tini util-linux bash openssl procps coreutils curl tar acl jq\n# required: all: tini; alpine: util-linux procps coreutils\n\n# optional lolcat for tty/color debugging\nRUN apk add --no-cache lolcat --repository=http://dl-cdn.alpinelinux.org/alpine/edge/testing\n\n\nENV CRONICLE_foreground=1\nENV CRONICLE_echo=1\nENV TZ=America/New_York\nENV EDITOR=nvim\n\nENV PATH \"/opt/cronicle/bin:${PATH}\"\n\n# non root user for shell plugin\nARG CRONICLE_UID=1007\nARG CRONICLE_GID=1099\nRUN  addgroup cronicle --gid $CRONICLE_GID && adduser -D -h /opt/cronicle -u $CRONICLE_UID -G cronicle cronicle\n\nARG echo\nRUN echo $echo\nCOPY . /opt/cronicle\nWORKDIR /opt/cronicle\n\n# optional  step to fix vulnerabilities reported by npm\n# RUN npm audit fix --force\n\nRUN npm install && node bin/build dist \\\r\n    && rm -rf node_modules/vis-*  node_modules/graphlib/  node_modules/jsonlint-mod/ node_modules/font-awesome node_modules/mdi \\\n    && find . -name \"*.map\" -type f -delete && npm cache clean --force;\n\n# protect sensitive folders\nRUN  mkdir -p /opt/cronicle/data /opt/cronicle/conf && chmod 0700 /opt/cronicle/data /opt/cronicle/conf\n\nENTRYPOINT [\"/sbin/tini\", \"--\"]\n"
}