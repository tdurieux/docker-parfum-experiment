{
  "startTime": 1674256212752,
  "endTime": 1674256213405,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 25
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:9-alpine\nARG PORT=3010\nARG REACT_APP_CIRCUIT_URI=http://localhost:3011\nARG REACT_APP_CIRCUIT_WSS_URI=http://localhost:3011\nARG REACT_APP_DEX_URI=http://localhost:5556\nARG REACT_APP_PANEL_URI=http://localhost:3010\nARG REACT_APP_CLIENT_ID=example-app\nARG REACT_APP_KIBANA_LINK_TEMPLATE=\"https://kibana-ui.example.net/app/kibana#/discover?_g=(refreshInterval:('$$hashKey':'object:2676',display:'10%20seconds',pause:!f,section:1,value:10000),time:(from:now-15m,mode:quick,to:now))&_a=(columns:!(_source),filters:!(('$$hashKey':'object:1997','$state':(store:appState),meta:(alias:!n,disabled:!f,index:'kubernetes-*',key:kubernetes.namespace,negate:!f,value:##PROJECT-NAMESPACE##),query:(match:(kubernetes.namespace:(query:##PROJECT-NAMESPACE##,type:phrase))))),index:'kubernetes-*',interval:auto,query:(query_string:(analyze_wildcard:!t,query:'*')),sort:!('@timestamp',desc))\"\nARG REACT_APP_KIBANA_RELEASE_TEMPLATE=\"https://kibana-ui.example.net/app/kibana#/discover?_g=(refreshInterval:('$$hashKey':'object:32711',display:'10%20seconds',pause:!t,section:1,value:10000),time:(from:now-30m,mode:quick,to:now))&_a=(columns:!(_source),filters:!(('$state':(store:appState),meta:(alias:!n,disabled:!f,index:'kubernetes-*',key:kubernetes.labels.releaseID,negate:!f,params:(query:'##RELEASE-ID##',type:phrase),type:phrase,value:'##RELEASE-ID##'),query:(match:(kubernetes.labels.releaseID:(query:'##RELEASE-ID##',type:phrase)))),('$state':(store:appState),meta:(alias:!n,disabled:!f,index:'kubernetes-*',key:kubernetes.namespace,negate:!f,params:(query:'##PROJECT-NAMESPACE##',type:phrase),type:phrase,value:'##PROJECT-NAMESPACE##'),query:(match:(kubernetes.namespace:(query:'##PROJECT-NAMESPACE##',type:phrase))))),index:'kubernetes-*',interval:auto,query:(language:lucene,query:'*'),sort:!('@timestamp',desc))\"\nARG REACT_APP_SENTRY_DSN=''\n\nENV PORT=${PORT}\nENV REACT_APP_CIRCUIT_URI=${REACT_APP_CIRCUIT_URI}\nENV REACT_APP_CIRCUIT_WSS_URI=${REACT_APP_CIRCUIT_WSS_URI}\nENV REACT_APP_DEX_URI=${REACT_APP_DEX_URI}\nENV REACT_APP_PANEL_URI=${REACT_APP_PANEL_URI}\nENV REACT_APP_CLIENT_ID=${REACT_APP_CLIENT_ID}\nENV REACT_APP_KIBANA_LINK_TEMPLATE=${REACT_APP_KIBANA_LINK_TEMPLATE}\nENV REACT_APP_KIBANA_RELEASE_TEMPLATE=${REACT_APP_KIBANA_RELEASE_TEMPLATE}\nENV REACT_APP_SENTRY_DSN=${REACT_APP_SENTRY_DSN}\n\n# set working directory\nRUN mkdir -p /usr/src/app && rm -rf /usr/src/app\nWORKDIR /usr/src/app\n\n# add `/usr/src/app/node_modules/.bin` to $PATH\nENV PATH /usr/src/app/node_modules/.bin:$PATH\n\n# install and cache app dependencies\nADD package.json /usr/src/app/package.json\nADD package-lock.json /usr/src/app/package-lock.json\nRUN npm install && npm cache clean --force;\nRUN npm install -g serve && npm cache clean --force;\n\nADD . /usr/src/app/\nRUN npm run build\n\nEXPOSE 3010\n# start app\nCMD [\"serve\", \"-s\", \"build\", \"-p\", \"3010\"]\n"
}