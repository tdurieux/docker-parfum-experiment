{
  "startTime": 1674250404832,
  "endTime": 1674250406105,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 27,
        "columnEnd": 82
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 28
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 52
      }
    }
  ],
  "repairedDockerfile": "FROM golang:1.13 AS backend-build\n\nWORKDIR /go/src/app\nCOPY . .\n\nENV GO111MODULE on\nENV GOPROXY https://goproxy.io\n\nRUN go install\nRUN make\n# copy backend files\n\nFROM node:8.16.0-alpine AS frontend-build\n\nADD . /app\nWORKDIR /app/frontend\n\n# install frontend\nRUN npm config set unsafe-perm true\nRUN npm install -g yarn && yarn install --registry=https://registry.npm.taobao.org && npm cache clean --force; && yarn cache clean;\n\nRUN npm run build\n\nFROM ubuntu:latest\nADD . /app\nRUN apt-get update \\\n\t&& apt-get install --no-install-recommends -y curl && rm -rf /var/lib/apt/lists/*;\n\n# set as non-interactive\nENV DEBIAN_FRONTEND noninteractive\n\n# install nginx\nRUN apt-get -y --no-install-recommends install nginx && rm -rf /var/lib/apt/lists/*;\nCOPY --from=backend-build /go/src/app/fuckdb /usr/local/bin\n# copy frontend files\nCOPY --from=frontend-build /app/frontend/dist /app/frontend/dist\nCOPY --from=frontend-build /app/frontend/conf/fuckdb.conf /etc/nginx/conf.d\n# working directory\nWORKDIR /app\nEXPOSE 8080\n# backend port\nEXPOSE 8000\n\n# start backend\nCMD [\"/bin/sh\", \"/app/docker_init.sh\"]\n"
}