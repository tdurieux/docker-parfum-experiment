{
  "startTime": 1674250172340,
  "endTime": 1674250173953,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 111
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 111
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 87,
        "lineEnd": 87,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 205,
        "lineEnd": 205,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 206,
        "lineEnd": 206,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 39,
        "columnEnd": 65
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 22,
        "columnEnd": 71
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 35,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 9
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 48,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 60,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 125,
        "lineEnd": 134,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 48,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 60,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 39,
        "columnEnd": 65
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 22,
        "columnEnd": 71
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 35,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 9
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 48,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 60,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 125,
        "lineEnd": 134,
        "columnStart": 4,
        "columnEnd": 14
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 48,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 60
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 60,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 23
      }
    }
  ],
  "repairedDockerfile": "FROM nvidia/cuda:10.0-cudnn7-devel-ubuntu18.04\n# using devel to support installing pycuda\n# if you are behind a proxy: https://docs.docker.com/network/proxy/\n\nRUN apt-get clean && apt-get update && apt-get install --no-install-recommends -y locales && rm -rf /var/lib/apt/lists/*;\nRUN echo \"en_US.UTF-8 UTF-8\" > /etc/locale.gen && \\\n    locale-gen\nENV LC_ALL en_US.UTF-8\nENV LANG en_US.UTF-8\nENV LANGUAGE en_US.UTF-8\nENV SHELL /bin/bash\nENV DEBIAN_FRONTEND noninteractive\n\n# switch to bash within the container so ROS sourcing is easy in build commands\nSHELL [\"/bin/bash\", \"-c\"]\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y curl bzip2 wget vim ffmpeg git tmux unzip && rm -rf /var/lib/apt/lists/*;\n\n# tesse: opencv dependency workaround from https://github.com/NVIDIA/nvidia-docker/issues/864\nRUN apt-get update && apt-get install --no-install-recommends -y libsm6 libxext6 libxrender-dev && rm -rf /var/lib/apt/lists/*;\n\n# kimera:\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends apt-utils && rm -rf /var/lib/apt/lists/*;\n\n################################\n###          ROS             ###\n################################\n\n#Set the ROS distro\nENV ROS_DISTRO melodic\n\n# Add the ROS keys and package\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y \\\n    lsb-release \\\n    gnupg && rm -rf /var/lib/apt/lists/*;\nRUN sh -c 'echo \"deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main\" > /etc/apt/sources.list.d/ros-latest.list'\nRUN mkdir ~/.gnupg\nRUN echo \"disable-ipv6\" >> ~/.gnupg/dirmngr.conf\n\nRUN curl -f -sSL 'https://keyserver.ubuntu.com/pks/lookup?op=get&search=0xC1CF6E31E6BADE8868B172B4F42ED6FBAB17C654' | apt-key add -\n\n# Install ROS\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y ros-melodic-desktop-full && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get install --no-install-recommends -y \\\n    python \\\n    python-pip \\\n    python-dev && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get install -y --no-install-recommends python-rosdep && rm -rf /var/lib/apt/lists/*;\n\n# Set up ROS\nRUN rosdep init\nRUN rosdep update\n\nRUN source /opt/ros/melodic/setup.bash && \\\n    apt install --no-install-recommends -y \\\n    python-rosinstall \\\n    python-rosinstall-generator \\\n    python-wstool build-essential \\\n    python-catkin-tools && rm -rf /var/lib/apt/lists/*;\n\n# Setup catkin workspace\nRUN source /opt/ros/melodic/setup.bash && \\\n    mkdir -p /catkin_ws/src && \\\n    cd /catkin_ws/ && \\\n    catkin init && \\\n    # Change `melodic` to your ROS distro\n    catkin config --extend /opt/ros/melodic && \\\n    catkin config --cmake-args -DCMAKE_BUILD_TYPE=Release && \\\n    catkin config --merge-devel\n\n\n################################\n###     **  TESSE **         ###\n###     ------------         ###\n###   TESSE ROS packages     ###\n### TESSE Anaconda packages  ###\n################################\n\nWORKDIR /catkin_ws/src\n\n# tesse-ros-bridge dependency\nRUN pip install --no-cache-dir scipy\n\nRUN git clone https://github.com/MIT-TESSE/tesse-interface.git -b 0.1.3-SNAPSHOT && \\\n    cd tesse-interface && \\\n    python setup.py install && \\\n    cd ..\n\nWORKDIR /catkin_ws/src\nRUN source /opt/ros/melodic/setup.bash\nRUN wstool init\n\nRUN git clone https://github.com/MIT-TESSE/tesse-ros-bridge.git && \\\n    wstool merge -y tesse-ros-bridge/install/tesse_ros_bridge.rosinstall\n\nRUN git clone https://github.com/MIT-TESSE/tesse-segmentation-ros.git && \\\n    wstool merge -y tesse-segmentation-ros/install/tesse_segmentation_ros.rosinstall\n\nRUN git clone https://github.com/MIT-TESSE/tesse-gym-bridge.git && \\\n    wstool merge -y tesse-gym-bridge/install/tesse_gym_bridge.rosinstall\n\nRUN wstool update\nRUN catkin build tesse_ros_bridge tesse_segmentation_ros tesse_gym_bridge\n\n\n################################\n###  **MIT-SPARK KIMERA**    ###\n###    ----------------      ###\n###    KIMERA-VIO-ROS        ###\n###    KIMERA-Semantics      ###\n################################\n\n# pinned commits:\n# https://github.com/MIT-SPARK/Kimera-VIO-ROS @  f6181a1370677ffe8c24253554efebaf787f428e\n# https://github.com/MIT-SPARK/Kimera-VIO @ 42ad9ca557656ef3463b8cc3b841fe5a4a36398c\n# https://github.com/MIT-SPARK/Kimera-Semantics @ 0ae759f24cce9e9ffc28d0495327a3d2b37d2c99\n\n# Kimera dependencies\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y \\\n    libgoogle-glog-dev \\\n    doxygen \\\n    cmake build-essential pkg-config autoconf \\\n    libboost-all-dev \\\n    libjpeg-dev libpng-dev libtiff-dev \\\n    libvtk6-dev libgtk-3-dev \\\n    libatlas-base-dev gfortran \\\n    libparmetis-dev \\\n    libtbb-dev && rm -rf /var/lib/apt/lists/*;\n\n# suppress build warnings\nENV PYTHONIOENCODING=UTF-8\n\nWORKDIR /catkin_ws/src\n\nRUN git clone https://github.com/MIT-SPARK/Kimera-VIO-ROS.git && \\\n      cd Kimera-VIO-ROS && \\\n      git checkout db6afe795f3bf6b88842d2c45cb2306926505051 && \\\n      cd .. && \\\n      wstool merge -y Kimera-VIO-ROS/install/kimera_vio_ros_https.rosinstall && \\\n      wstool update\n\nRUN git clone https://github.com/MIT-SPARK/Kimera-Semantics.git && \\\n      cd Kimera-Semantics && \\\n      git checkout 0ae759f24cce9e9ffc28d0495327a3d2b37d2c99 && \\\n      cd .. && \\\n      wstool merge -y Kimera-Semantics/kimera/install/kimera_semantics_https.rosinstall && \\\n      wstool update\n\n# checkout pinned commit of Kimera-VIO-ROS and Kimera-VIO\nRUN   cd Kimera-VIO-ROS && \\\n      git checkout db6afe795f3bf6b88842d2c45cb2306926505051 && \\\n      cd .. && \\\n      cd Kimera-VIO && \\\n      git fetch && git checkout 13a52d8772305be143ebdf470c8714759e411f59 && \\\n      cd ..\n\nRUN cd gtsam && \\\n    git fetch && \\\n    git checkout develop && \\\n    git pull\n\nRUN catkin build gtsam opengv_catkin opencv3_catkin kimera_rpgo dbow2_catkin\n\nRUN catkin build\n\n################################\n###        Configs           ###\n################################\n\nRUN wget https://github.com/MIT-TESSE/goseek-challenge/releases/download/evalai-beta-testing/goseek-unet-a1.onnx \\\n        -P /catkin_ws/src/tesse-segmentation-ros/cfg/ && \\\n    wget https://github.com/MIT-TESSE/goseek-challenge/releases/download/evalai-beta-testing/kimera-configs.zip  && \\\n        unzip kimera-configs.zip && \\\n        mv kimera-configs/* /catkin_ws/src/Kimera-VIO/params/Tesse/ && \\\n        rm kimera-configs.zip\n\nRUN source /catkin_ws/devel/setup.bash\n\nWORKDIR /\n\nRUN echo \"source /catkin_ws/devel/setup.bash\" >> run_perception.sh && \\\n    echo \"roslaunch tesse_gym_bridge run_goseek_perception.launch\" >> run_perception.sh && \\\n    chmod +x /run_perception.sh\n\n\n################################\n###        TensorRT          ###\n################################\n\nADD TensorRT-6.0.1.5.Ubuntu-18.04.x86_64-gnu.cuda-10.0.cudnn7.6.tar.gz /\nRUN mv /TensorRT-6.0.1.5 /tensorrt\n\nENV LD_LIBRARY_PATH $LD_LIBRARY_PATH:/tensorrt/lib\n\n# install tensorrt wheel into the python environment used with ROS\nRUN source /opt/ros/melodic/setup.bash &&  \\\n    source /catkin_ws/devel/setup.bash && \\\n    cd /tensorrt/python/ && \\\n    pip install --no-cache-dir tensorrt-6.0.1.5-cp27-none-linux_x86_64.whl && \\\n    pip install --no-cache-dir pycuda\n\n\n#########################################################################################\n# Disclaimer:\n# DISTRIBUTION STATEMENT A. Approved for public release. Distribution is unlimited.\n\n# This material is based upon work supported by the Under Secretary of Defense for Research and Engineering under Air Force Contract No. FA8702-15-D-0001. Any opinions, findings, conclusions or recommendations expressed in this material are those of the author(s) and do not necessarily reflect the views of the Under Secretary of Defense for Research and Engineering.\n\n# © 2019 Massachusetts Institute of Technology.\n\n# MIT Proprietary, Subject to FAR52.227-11 Patent Rights - Ownership by the contractor (May 2014)\n\n# The software/firmware is provided to you on an As-Is basis\n\n# Delivered to the U.S. Government with Unlimited Rights, as defined in DFARS Part 252.227-7013 or 7014 (Feb 2014). Notwithstanding any copyright notice, U.S. Government rights in this work are defined by DFARS 252.227-7013 or DFARS 252.227-7014 as detailed above. Use of this work other than as specifically authorized by the U.S. Government may violate any copyrights that exist in this work.\n"
}