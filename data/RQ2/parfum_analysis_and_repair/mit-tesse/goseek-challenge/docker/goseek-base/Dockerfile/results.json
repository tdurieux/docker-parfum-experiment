{
  "startTime": 1674217792847,
  "endTime": 1674217793534,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 81
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 88
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 39,
        "columnEnd": 65
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 39,
        "columnEnd": 65
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 31
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nvidia/cuda:10.0-cudnn7-runtime-ubuntu18.04\n\n# docker build -t goseek-base .\n# docker run --network=\"host\" --gpus all  --rm -it goseek-base /bin/bash\n\nRUN apt-get clean && apt-get update && apt-get install --no-install-recommends -y locales && rm -rf /var/lib/apt/lists/*;\nRUN echo \"en_US.UTF-8 UTF-8\" > /etc/locale.gen && \\\n    locale-gen\nENV LC_ALL en_US.UTF-8\nENV LANG en_US.UTF-8\nENV LANGUAGE en_US.UTF-8\nENV SHELL /bin/bash\nENV DEBIAN_FRONTEND noninteractive\n\n# switch to bash within the container so ROS sourcing is easy in build commands\nSHELL [\"/bin/bash\", \"-c\"]\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y git curl && \\\n    apt-get clean && rm -rf /var/lib/apt/lists/*;\n\nRUN curl -f -LO http://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh && \\\n    bash Miniconda3-latest-Linux-x86_64.sh -p /miniconda -b && \\\n    rm Miniconda3-latest-Linux-x86_64.sh\n\nENV PATH /miniconda/bin:$PATH\n\nRUN conda update -y conda && \\\n    conda install -y -f python=3.7 numpy pip scipy pyyaml pillow\n\nRUN pip install --no-cache-dir -e git+https://github.com/MIT-TESSE/tesse-gym.git@master#egg=tesse-gym\n\nRUN git clone https://github.com/MIT-TESSE/goseek-challenge.git /goseek-challenge\nWORKDIR /goseek-challenge\n\n#########################################################################################\n# DISTRIBUTION STATEMENT A. Approved for public release. Distribution is unlimited.\n\n# This material is based upon work supported by the Under Secretary of Defense for Research and Engineering under Air Force Contract No. FA8702-15-D-0001. Any opinions, findings, conclusions or recommendations expressed in this material are those of the author(s) and do not necessarily reflect the views of the Under Secretary of Defense for Research and Engineering.\n\n# Â© 2019 Massachusetts Institute of Technology.\n\n# MIT Proprietary, Subject to FAR52.227-11 Patent Rights - Ownership by the contractor (May 2014)\n\n# The software/firmware is provided to you on an As-Is basis\n\n# Delivered to the U.S. Government with Unlimited Rights, as defined in DFARS Part 252.227-7013 or 7014 (Feb 2014). Notwithstanding any copyright notice, U.S. Government rights in this work are defined by DFARS 252.227-7013 or DFARS 252.227-7014 as detailed above. Use of this work other than as specifically authorized by the U.S. Government may violate any copyrights that exist in this work.\n"
}