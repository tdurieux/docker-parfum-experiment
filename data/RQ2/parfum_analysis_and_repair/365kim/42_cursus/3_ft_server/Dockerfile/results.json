{
  "startTime": 1674249535774,
  "endTime": 1674249536418,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 12,
        "columnStart": 26,
        "columnEnd": 8
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 12,
        "columnStart": 26,
        "columnEnd": 8
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM    debian:buster\n\nLABEL   maintainer=\"mihykim@student.42seoul.kr\"\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n     nginx \\\n     mariadb-server \\\n     php-fpm \\\n     php-mysql \\\n     php-cli \\\n     php-mbstring \\\n     openssl \\\n     vim && rm -rf /var/lib/apt/lists/*;\n\nCOPY    srcs/nginx.conf /etc/nginx/sites-available/localhost\nCOPY    srcs/config.inc.php /var\nCOPY    srcs/wp-config.php /var\nCOPY    srcs/phpMyAdmin-4.9.0.1.tar.gz ./\nCOPY    srcs/wordpress-5.4.1.tar.gz ./\nCOPY    srcs/init.sh ./\nCOPY    srcs/theme.tar.gz ./\n\nEXPOSE  80 443\n\nCMD    \tbash init.sh\n\n\n#### Description\n#\n# 0. Dockerfile\n#    - Docker will run instructions above in order\n#    - Comment lines that begin with # are removed before the Dockerfile instructions are executed\n#\n# 1. FROM\n#    - a valid Dockerfile must start with a FROM instruction.\n#    - initializes a new build stage and sets the Base Image for subsequent instructions.\n#\n# 2. LABEL\n#    - adds metadata to an image.\n#    - replaces the deprecated instruction MAINTAINER.\n#    - to view labels, use the `docker image inspect` command.\n#\n# 3. RUN\n#    - executes commands in a new layer on top of the current image and commit the results\n#    - backslash(\\) can be used to continue a single RUN instruction onto the next line.\n#    - Always combine RUN apt-get update with apt-get install in the same RUN statement to avoid caching issues.\n#\n# 4. COPY\n#    - adds files from your Docker clientâ€™s specified directory.\n#\n# 5. EXPOSE\n#    - informs Docker that the container listens on the specified network ports at runtime.\n#    - regardless of EXPOSE settings, you can override them at runtime by using -p flag as like `docker run -p 80:80/tcp -p 80:80/udp ...`.\n#\n# 6. CMD\n#    - sets the command to be executed when running the image.\n#    - does not execute anything at build time, while while RUN actually runs a command and commits the result.\n#    - if there are more than one CMD in a Dockerfile, only the last one will be effective.\n#\n# Source : https://docs.docker.com/engine/reference/builder/\n"
}