{
  "startTime": 1674248892108,
  "endTime": 1674248893189,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 91
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 22,
        "columnEnd": 45
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 22,
        "columnEnd": 45
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG base_image=alpine:latest\nARG builder_image=concourse/golang-builder\n\nFROM ${builder_image} as builder\nRUN apt-get update && apt-get -y --no-install-recommends install curl && rm -rf /var/lib/apt/lists/*;\nRUN mkdir -p /assets\nWORKDIR /assets\nRUN curl -f -L \"https://packages.cloudfoundry.org/stable?release=linux64-binary&source=github\" | tar -xzf -\nWORKDIR /src\nCOPY . .\nRUN go mod download\nRUN go build -o /assets/in github.com/concourse/cf-resource/in/cmd/in\nRUN go build -o /assets/out github.com/concourse/cf-resource/out/cmd/out\nRUN go build -o /assets/check github.com/concourse/cf-resource/check/cmd/check\nRUN set -e; for pkg in $(go list ./... | grep -v \"acceptance\"); do \\\n\t\tgo test -o \"/tests/$(basename $pkg).test\" -c $pkg; \\\n\tdone\n\nFROM ${base_image} AS resource\nRUN apk update && apk upgrade\nRUN apk add --no-cache bash tzdata ca-certificates\nCOPY --from=builder assets/ /opt/resource/\nRUN chmod +x /opt/resource/*\nRUN mv /opt/resource/cf /usr/bin/cf\n\nFROM resource AS tests\nCOPY --from=builder /tests /go-tests\nCOPY out/assets /go-tests/assets\nWORKDIR /go-tests\nRUN set -e; for test in /go-tests/*.test; do \\\n\t\t$test; \\\n\tdone\n\nFROM resource\n"
}