{
  "startTime": 1674254580698,
  "endTime": 1674254581280,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 7,
        "columnEnd": 72
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 7,
        "columnEnd": 79
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 198
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 198
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG PHP_VERSION=7.4\nARG PHP_TARGET=php:${PHP_VERSION}-cli\n\nFROM ${PHP_TARGET}\n\nARG COMPOSER_TARGET=2.0.3\n\nWORKDIR /var/www/html\n\nLABEL org.opencontainers.image.source=https://github.com/stancl/tenancy \\\n    org.opencontainers.image.vendor=\"Samuel Å tancl\" \\\n    org.opencontainers.image.licenses=\"MIT\" \\\n    org.opencontainers.image.title=\"PHP ${PHP_VERSION} with modules for laravel support\" \\\n    org.opencontainers.image.description=\"PHP ${PHP_VERSION} with a set of php/os packages suitable for running Laravel apps\"\n\n# our default timezone and langauge\nENV TZ=Europe/London\nENV LANG=en_GB.UTF-8\n\n# Note: we only install reliable/core 1st-party php extensions here.\n#       If your app needs custom ones install them in the apps own\n#       Dockerfile _and pin the versions_! Eg:\n#       RUN pecl install memcached-2.2.0 && docker-php-ext-enable memcached\n\n# install some OS packages we need\nRUN apt-get update && apt-get install -y --no-install-recommends libfreetype6-dev libjpeg62-turbo-dev libpng-dev libgmp-dev libldap2-dev netcat curl sqlite3 libsqlite3-dev libpq-dev libzip-dev unzip vim-tiny gosu git && rm -rf /var/lib/apt/lists/*;\n    # install php extensions\nRUN docker-php-ext-configure pgsql -with-pgsql=/usr/local/pgsql \\\n    # && if [ \"${PHP_VERSION}\" = \"7.4\" ]; then docker-php-ext-configure gd --with-freetype --with-jpeg; else docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/; fi \\\n    && docker-php-ext-install -j$(nproc) gd pdo pdo_mysql pdo_pgsql pdo_sqlite pgsql zip gmp bcmath pcntl ldap sysvmsg exif \\\n    # install the redis php extension\n    && pecl install redis-5.3.7 \\\n    && docker-php-ext-enable redis \\\n    # install the pcov extention\n    && pecl install pcov \\\n    && docker-php-ext-enable pcov \\\n    && echo \"pcov.enabled = 1\" > /usr/local/etc/php/conf.d/pcov.ini\n# clear the apt cache\nRUN rm -rf /var/lib/apt/lists/* \\\n    && rm -rf /var/lib/apt/lists/* \\\n    # install composer \\\n    && curl -f -o /tmp/composer-setup.php https://getcomposer.org/installer \\\n    && curl -f -o /tmp/composer-setup.sig https://composer.github.io/installer.sig \\\n    && php -r \"if (hash('SHA384', file_get_contents('/tmp/composer-setup.php')) !== trim(file_get_contents('/tmp/composer-setup.sig'))) { unlink('/tmp/composer-setup.php'); echo 'Invalid installer' . PHP_EOL; exit(1); }\" \\\n    && php /tmp/composer-setup.php --version=${COMPOSER_TARGET} --no-ansi --install-dir=/usr/local/bin --filename=composer --snapshot \\\n    && rm -f /tmp/composer-setup.*\n# set the system timezone\nRUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime \\\n    && echo $TZ > /etc/timezone\n"
}