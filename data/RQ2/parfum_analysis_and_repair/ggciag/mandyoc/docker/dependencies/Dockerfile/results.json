{
  "startTime": 1674218033222,
  "endTime": 1674218034600,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 4,
        "columnEnd": 98
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 93,
        "lineEnd": 93,
        "columnStart": 4,
        "columnEnd": 48
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# =============================================================================\n# MANDYOC Dependencies Docker Image\n# =============================================================================\n#\n# Builds the base Docker image with dependencies for MANDYOC.\n# MANDYOC is hosted at https://github.com/ggciag/mandyoc.\n#\n\nFROM ubuntu:20.04 AS initial_stage\n\nLABEL maintainer \"Rafael Silva <rafael.m.silva@alumni.usp.br>\"\n\n# =============================================================================\n# Install dependencies\n# =============================================================================\nUSER root\n\nENV DEBIAN_FRONTEND=noninteractive\n\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        build-essential \\\n        cmake \\\n        gcc \\\n        gfortran \\\n        python3 \\\n        python3-dev \\\n        python3-distutils \\\n        python3-pip \\\n        python3-setuptools \\\n        vim \\\n        nano \\\n        git \\\n        curl \\\n        rsync \\\n        ca-certificates \\\n        bash-completion \\\n        openssh-client \\\n        openssh-server && \\\n    apt-get clean && \\\n    apt-get autoremove && \\\n    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* && \\\n    update-ca-certificates\n\n# =============================================================================\n# Add user and set up variables\n# =============================================================================\nFROM initial_stage AS user_stage\n\nARG USER=aipim\nARG PETSC_VERSION=3.15.5\n\nENV USER ${USER}\nENV HOME /home/${USER}\nENV PETSC_VERSION ${PETSC_VERSION}\n\nRUN adduser --disabled-password --gecos '' ${USER}\nRUN adduser ${USER} sudo; echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers\nRUN chown -R ${USER}:${USER} ${HOME}\n\nUSER ${USER}\n\n# =============================================================================\n# Building and installing PETSc\n# =============================================================================\nFROM user_stage AS petsc_stage\n\nRUN mkdir -p ${HOME}/petsc-${PETSC_VERSION} && \\\n    mkdir -p $(dirname ${HOME}/tmp/petsc-pkg) && \\\n    curl -f -k https://ftp.mcs.anl.gov/pub/petsc/release-snapshots/petsc-lite-${PETSC_VERSION}.tar.gz \\\n        | tar xzvf - -C $(dirname ${HOME}/tmp/petsc-${PETSC_VERSION}) && \\\n    cd ${HOME}/tmp/petsc-${PETSC_VERSION} && \\\n    python3 ./configure \\\n        --prefix=${HOME}/petsc-${PETSC_VERSION} \\\n        --with-debugging=0 \\\n        --with-cc=gcc \\\n        --with-cxx=g++ \\\n        --download-fblaslapack \\\n        --download-mpich \\\n        --download-mumps \\\n        --download-scalapack \\\n        --download-parmetis \\\n        --download-metis && \\\n    make && \\\n    make install\n\n# =============================================================================\n# Install python requirements (for running examples and tests)\n# =============================================================================\nFROM petsc_stage AS python_stage\n\nCOPY ./env/requirements.txt ${HOME}/tmp/requirements.txt\n\nRUN pip3 install --no-cache-dir -r ${HOME}/tmp/requirements.txt\n\n# =============================================================================\n# Clean up\n# =============================================================================\nFROM python_stage AS cleanup_stage\n\nRUN rm -rf ${HOME}/tmp\n\n# =============================================================================\n# Final setup\n# =============================================================================\nFROM cleanup_stage AS base_stage\n\nRUN chown -R ${USER}:${USER} ${HOME}\n\nENV PETSC_DIR ${HOME}/petsc-${PETSC_VERSION}\nENV MPIEXEC ${PETSC_DIR}/bin/mpiexec\nENV PATH=\"${PETSC_DIR}/bin:${PATH}\"\n\nUSER ${USER}\n\nWORKDIR ${HOME}\n"
}