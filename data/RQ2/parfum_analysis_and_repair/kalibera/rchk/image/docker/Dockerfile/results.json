{
  "startTime": 1674252743763,
  "endTime": 1674252745406,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 2,
        "columnEnd": 20
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 90,
        "lineEnd": 91,
        "columnStart": 2,
        "columnEnd": 67
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 21,
        "lineEnd": 22,
        "columnStart": 22,
        "columnEnd": 77
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 23,
        "lineEnd": 26,
        "columnStart": 2,
        "columnEnd": 75
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 2,
        "columnEnd": 41
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 2,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 2,
        "columnEnd": 25
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 84,
        "lineEnd": 84,
        "columnStart": 2,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 117,
        "lineEnd": 117,
        "columnStart": 2,
        "columnEnd": 26
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# This container checks R packages for PROTECT bugs. The simplest use is:\n#   docker run XXX jpeg\n# to check package jpeg, where XXX is the container id.\n#\n# See https://github.com/kalibera/rchk/blob/master/doc/DOCKER.md for more.\n#\n\nFROM ubuntu:20.04\nLABEL maintainer tomas.kalibera@gmail.com\n\nARG DEBIAN_FRONTEND=noninteractive\n\nRUN apt-get update && \\\n  apt-get install -yq --no-install-recommends apt-utils && \\\n  rm -rf /var/lib/apt/lists/* && \\\n  apt autoremove -y\n\nENV TZ=Europe/Prague\n\n# Install LLVM, R dependencies and common package dependencies\nRUN apt-get update && apt-get install --no-install-recommends -yq \\\n      clang llvm-dev '^clang++$' llvm libllvm10 libc++-dev libc++abi-dev make && \\\n  apt-get install --no-install-recommends -yq zip unzip libpaper-utils xdg-utils \\\n      libbz2-dev libcairo2-dev libcurl4-gnutls-dev libgomp1 libicu66 libjpeg-dev liblzma-dev \\\n      libpango1.0-dev libpangocairo-1.0-0 libpcre3-dev libpng-dev libreadline-dev tcl8.6-dev \\\n      libtiff-dev tk8.6-dev libx11-dev libxt-dev zlib1g-dev ca-certificates && \\\n  apt-get install --no-install-recommends -yq libgsl-dev gfortran && \\\n  rm -rf /var/lib/apt/lists/* && \\\n  apt autoremove -y\n\n# Install wllvm\nRUN apt-get update && \\\n  dpkg --get-selections > /pkgs.sel && \\\n  apt-get install --no-install-recommends -yq python3-pip && \\\n  pip3 install --no-cache-dir wllvm && \\\n  dpkg --clear-selections && \\\n  dpkg --set-selections < /pkgs.sel && \\\n  apt-get dselect-upgrade -yq && \\\n  rm /pkgs.sel && \\\n  apt-get purge -yq $(dpkg -l | grep '^rc' | awk '{print $2}') && \\\n  rm -rf /var/lib/apt/lists/* && \\\n  apt autoremove -y\n\n# config.inc\nENV WLLVM=/usr/local/bin LLVM=/usr RCHK=/rchk\n\n# Install rchk\nRUN apt-get update && \\\n  dpkg --get-selections > /pkgs.sel && \\\n  apt-get install --no-install-recommends -yq git && \\\n  git clone https://github.com/kalibera/rchk && \\\n  echo \"# settings moved to container configuration\" > rchk/scripts/config.inc && \\\n  echo \"# settings moved to container configuration\" > rchk/scripts/cmpconfig.inc && \\\n  cd rchk && \\\n  git rev-parse HEAD > git_version && \\\n  cd src && \\\n  env CXX=clang++ make -j 4 bcheck maacheck fficheck && \\\n  rm -f *.o *.dwo *.cpp *.h *d Makefile && \\\n  cd .. && \\\n  dpkg --clear-selections && \\\n  dpkg --set-selections < /pkgs.sel && \\\n  apt-get -yq dselect-upgrade && \\\n  rm /pkgs.sel && \\\n  apt-get purge -yq $(dpkg -l | grep '^rc' | awk '{print $2}') && \\\n  rm -rf /var/lib/apt/lists/* && \\\n  apt autoremove -y\n\n# cmpconfig.inc (part 1)\nENV CPICFLAGS=\"-fPIC\" \\\n  CFLAGS=\"-Wall -g -O0 -fPIC\" \\\n  CXXFLAGS=\"-Wall -g -O0 -fPIC -I/usr/include/libcxxabi\" \\\n  CC=wllvm \\\n  CXX=\"wllvm++ -stdlib=libc++\" \\\n  LLVM_COMPILER=clang \\\n  LD=\"clang++ -stdlib=libc++\" \\\n  R_LIBS=$RCHK/packages/libs\n\n# Build R using WLLVM and install core dependencies to build R packages\nRUN export WLLVM_BC_STORE=\"$RCHK/bcstore\" && \\\n  sed -i 's/^# deb-src/deb-src/g' /etc/apt/sources.list && \\\n  apt-get update && \\\n  dpkg --get-selections > /pkgs.sel && \\\n  apt-get build-dep -yq r-base && \\\n  apt-get install --no-install-recommends -yq subversion && \\\n  cd rchk && \\\n  svn checkout https://svn.r-project.org/R/trunk && \\\n  mkdir -p $R_LIBS && \\\n  mkdir -p $WLLVM_BC_STORE && \\\n  cd trunk && \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --without-recommended-packages --prefix=$RCHK/build \\\n              --with-blas=no --with-lapack=no --enable-R-static-lib && \\\n  make -j 4 && \\\n  make install && \\\n  cd .. && \\\n  extract-bc ./build/lib/R/bin/exec/R && \\\n  mv ./build/lib/R/bin/exec/R.bc ./build/R.bc && \\\n  rm -rf trunk && \\\n  echo 'options(repos = c(CRAN=\"https://cran.r-project.org\"))' > build/lib/R/etc/Rprofile.site && \\\n  dpkg --clear-selections && \\\n  dpkg --set-selections < /pkgs.sel && \\\n  apt-get -yq dselect-upgrade && \\\n  rm /pkgs.sel && \\\n  apt-get purge -yq $(dpkg -l | grep '^rc' | awk '{print $2}') && \\\n  sed -i 's/^deb-src/# deb-src/g' /etc/apt/sources.list && \\\n  rm -rf /var/lib/apt/lists/* && \\\n  apt autoremove -y\n\n# cmpconfig.inc (part 2)\nENV R_LIBSONLY=$RCHK/packages/libsonly \\\n  PKG_BUILD_DIR=$RCHK/packages/build\n\n# setup for container.sh\n# sudo is needed to become regular user to match the user running / mounting\n# rchk/packages\nRUN mkdir -p $R_LIBS ${R_LIBSONLY} $PKG_BUILD && \\\n  apt-get update && \\\n  apt-get install --no-install-recommends -yq sudo && \\\n  sed -i 's/Defaults[\\t]*env_reset/Defaults !env_reset/g' /etc/sudoers && \\\n  rm -rf /var/lib/apt/lists/*\n\nENV PATH=$RCHK/scripts:$RCHK/build/bin:$PATH\n\nWORKDIR /rchk\n\nADD container.sh /container.sh\n\nENTRYPOINT [\"/bin/bash\", \"/container.sh\"]\n"
}