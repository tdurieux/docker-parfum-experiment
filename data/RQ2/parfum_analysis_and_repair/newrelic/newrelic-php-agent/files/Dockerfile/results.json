{
  "startTime": 1674249029615,
  "endTime": 1674249030779,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 30,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 109
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 47,
        "lineEnd": 78,
        "columnStart": 22,
        "columnEnd": 5
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 91,
        "lineEnd": 91,
        "columnStart": 6,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 98,
        "lineEnd": 98,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 144,
        "lineEnd": 144,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 109
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 91,
        "lineEnd": 91,
        "columnStart": 6,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 98,
        "lineEnd": 98,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 144,
        "lineEnd": 144,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 30,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 109
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 47,
        "lineEnd": 78,
        "columnStart": 22,
        "columnEnd": 5
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 91,
        "lineEnd": 91,
        "columnStart": 6,
        "columnEnd": 32
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 98,
        "lineEnd": 98,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 144,
        "lineEnd": 144,
        "columnStart": 4,
        "columnEnd": 39
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 133
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 91,
        "lineEnd": 91,
        "columnStart": 6,
        "columnEnd": 56
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 98,
        "lineEnd": 98,
        "columnStart": 4,
        "columnEnd": 72
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 144,
        "lineEnd": 144,
        "columnStart": 4,
        "columnEnd": 63
      }
    }
  ],
  "repairedDockerfile": "#\n# Copyright 2020 New Relic Corporation. All rights reserved.\n# SPDX-License-Identifier: Apache-2.0\n#\n\n#\n# ARGs passed from GHA workflow.\n#\n\nARG PHP_VER\n\nFROM php:${PHP_VER:-8.0}\n\nRUN docker-php-source extract\n\n#\n# Uncomment deb-src lines for all enabled repos. First part of single-quoted\n# string (up the the !) is the pattern of the lines that will be ignored.\n# Needed for apt-get build-dep call later in script\n#\nRUN sed -Ei '/.*partner/! s/^# (deb-src .*)/\\1/g' /etc/apt/sources.list\n\nARG DEBIAN_FRONTEND=noninteractive\nRUN apt-get update\nRUN apt-get install --no-install-recommends -y build-essential && rm -rf /var/lib/apt/lists/*;\n\n#\n# PHP dependencies\n#\nRUN apt-get update \\\n && apt-get -y --no-install-recommends install gcc git netcat \\\n libpcre3 libpcre3-dev golang psmisc automake libtool \\\n insserv procps vim ${PHP_USER_SPECIFIED_PACKAGES} \\\n zlib1g-dev libmcrypt-dev && rm -rf /var/lib/apt/lists/*;\n\n# pgsql extension\nRUN apt-get install --no-install-recommends -y libpq-dev && rm -rf /var/lib/apt/lists/*;\nRUN docker-php-ext-install pgsql\n\n#\n# Other tools\n#\nRUN apt-get install --no-install-recommends -y gdb valgrind libcurl4-openssl-dev pkg-config libpq-dev libedit-dev libreadline-dev git && rm -rf /var/lib/apt/lists/*;\n\n#\n# Install other packages.\n#\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n  autoconf \\\n  autotools-dev \\\n  build-essential \\\n  bzip2 \\\n  ccache \\\n  curl \\\n  dnsutils \\\n  git \\\n  gyp \\\n  lcov \\\n  libc6 \\\n  libc6-dbg \\\n  libc6-dev \\\n  libgtest-dev \\\n  libtool \\\n  make \\\n  perl \\\n  strace \\\n  python-dev \\\n  python-setuptools \\\n  python3-yaml \\\n  sqlite3 \\\n  libsqlite3-dev \\\n  openssl \\\n  libxml2 \\\n  libxml2-dev \\\n  libonig-dev \\\n  libssl-dev \\\n  unzip \\\n  wget \\\n  zip && apt-get clean && rm -rf /var/lib/apt/lists/*;\n\n#\n# If the debian version is jessie or stretch, we need to install go manually;\n# otherwise, we just install the golang package from the repository.\n# go 1.11.6 matches the version that buster uses.\n#\nRUN if [ -z \"$(grep '^10\\.' /etc/debian_version)\" ];then \\\n      wget --quiet https://golang.org/dl/go1.11.6.linux-amd64.tar.gz -O- | tar -C /usr/local -zxvf -; \\\n      export GOROOT=/usr/local/go; \\\n      export GOPATH=\"${HOME}/go\"; \\\n      export PATH=\"${GOPATH}/bin:${GOROOT}/bin:${PATH}\"; \\\n    else \\\n      apt-get install --no-install-recommends -y golang; rm -rf /var/lib/apt/lists/*; \\\n    fi\n\n#\n# If the debian version is jessie, don't install argon2\n#\nRUN if [ -z \"$(grep '^8\\.' /etc/debian_version)\" ]; then \\\n    apt-get install --no-install-recommends -y argon2 libghc-argon2-dev; rm -rf /var/lib/apt/lists/*; \\\n    fi\n\n# install composer\nWORKDIR /usr/src\n\n# based on https://getcomposer.org/doc/faqs/how-to-install-composer-programmatically.md\nRUN \\\n EXPECTED_CHECKSUM=\"$(php -r 'copy(\"https://composer.github.io/installer.sig\", \"php://stdout\");')\" \\\n && php -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\" \\\n && ACTUAL_CHECKSUM=\"$(php -r \"echo hash_file('sha384', 'composer-setup.php');\")\" \\\n && if [ \"$EXPECTED_CHECKSUM\" != \"$ACTUAL_CHECKSUM\" ]; \\\n  then \\\n    >&2 echo 'ERROR: Invalid installer checksum'; \\\n    rm composer-setup.php; \\\n    exit 1; \\\n  fi \\\n && php composer-setup.php \\\n && php -r \"unlink('composer-setup.php');\"\n\n#\n# The explain plan in the sql tests contain partition/filtered properties\n# but the tests can't currently be updated  to reflect that since the sql\n# database on our CI doesn't include those values.\n#\n# Further explanation:\n#   mysql tests are written to work with mysql 5.6 (or earlier?) server\n#   mysql server 5.7+ have additional columns (as mentioned above) which\n#   will cause the current mysql tests to fail.\n#\n# arm64 notes:\n#   mysql server 8.0 is currently the only version available for arm64\n#   and 8.0 has problems with how the explanation for informational_schema\n#   work (refer to bug https://bugs.mysql.com/bug.php?id=102536) so to run\n#   the mysql tests a separate machine running mysql server 5.6 is required.\nRUN docker-php-ext-install pdo pdo_mysql\n\nRUN docker-php-ext-install mysqli\n\n# redis\nRUN pecl install redis && docker-php-ext-enable redis\n\n# memcache\nRUN pecl install memcache && docker-php-ext-enable memcache\n\n# memcached\nRUN apt-get install --no-install-recommends -y libmemcached-dev && rm -rf /var/lib/apt/lists/*;\nRUN pecl install memcached && docker-php-ext-enable memcached\n\n# mongo?\n# this extension is no longer maintained and doesn't work with\n# recent PHP releases\n#RUN pecl install mongo && docker-php-ext-enable mongo\n\n# mongodb - need tests written for this maintained mongo extension\n#RUN pecl install mongodb && docker-php-ext-enable mongodb\n\n# uopz\nRUN pecl install uopz && docker-php-ext-enable uopz\n\n# configure uopz to honor exit() and die() otherwise it just ignores these\nRUN echo \"uopz.exit=1\" > /usr/local/etc/php/conf.d/uopz-enable-exit.ini\n\n# install predis\n# installation will be in /usr/src/vendor/predis/predis\n# which is value which should be used for PREDIS_HOME\nRUN php composer.phar require \"predis/predis\"\nRUN php composer.phar update\n\n#\n# These args need to be repeated so we can propagate the VARS within this build context.\n#\nARG PHP_VER\nENV PHP_VER=${PHP_VER}\nARG PS1\nENV PS1=\"New Relic > \"\n\nWORKDIR /usr/src/myapp\nCMD [\"bash\"]\n"
}