diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/mrfil/powergrid/docker/powergrid-dev/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/mrfil/powergrid/docker/powergrid-dev/Dockerfile/repaired.Dockerfile
index 274ce55..1cb8e58 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/mrfil/powergrid/docker/powergrid-dev/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/mrfil/powergrid/docker/powergrid-dev/Dockerfile/repaired.Dockerfile
@@ -4,16 +4,16 @@ FROM nvcr.io/hpc/pgi-compilers:ce as builder
 WORKDIR /root
 
 # Add needed packages
-RUN apt-get -y update && apt-get install -y g++ gcc curl wget libopenblas-dev \
+RUN apt-get -y update && apt-get install --no-install-recommends -y g++ gcc curl wget libopenblas-dev \
 						libarpack2-dev nano wget git \
-						libhdf5-dev libfftw3-dev && apt-get clean all;
+						libhdf5-dev libfftw3-dev && apt-get clean all; rm -rf /var/lib/apt/lists/*;
 
 #ENV LD_LIBRARY_PATH="/opt/pgi/linux86-64/2019/cuda/9.1/lib64:${LD_LIBRARY_PATH}"
 
 # Install Latest CMake
-RUN curl -O -J -L http://cmake.org/files/v3.14/cmake-3.14.0-Linux-x86_64.tar.gz; \
+RUN curl -f -O -J -L https://cmake.org/files/v3.14/cmake-3.14.0-Linux-x86_64.tar.gz; \
 	apt-get -y purge cmake; \
-	tar -xvf ./cmake-3.14.0-Linux-x86_64.tar.gz; \
+	tar -xvf ./cmake-3.14.0-Linux-x86_64.tar.gz; rm ./cmake-3.14.0-Linux-x86_64.tar.gz \
 	cd ./cmake-3.14.0-Linux-x86_64; \
 	cp -r bin /usr/; \
 	cp -r doc /usr/share/; \
@@ -21,18 +21,18 @@ RUN curl -O -J -L http://cmake.org/files/v3.14/cmake-3.14.0-Linux-x86_64.tar.gz;
 	cp -r share /usr/
 
 	# Install custom compile of boost for mpi.
-RUN wget -O ~/boost_1_70_0.tar.bz2 -c 'http://dl.bintray.com/boostorg/release/1.70.0/source/boost_1_70_0.tar.bz2' --max-redirect=100\
+RUN wget -O ~/boost_1_70_0.tar.bz2 -c 'https://dl.bintray.com/boostorg/release/1.70.0/source/boost_1_70_0.tar.bz2' --max-redirect=100 \
  && tar xjf ~/boost_1_70_0.tar.bz2 \
  && cd ~/boost_1_70_0/ \
  && ./bootstrap.sh --prefix=/usr/local --with-toolset=gcc --with-libraries=mpi,program_options,serialization \
  && cp ~/boost_1_70_0/tools/build/example/user-config.jam ~/boost_1_70_0/tools/build/src/user-config.jam \
- && echo "using mpi : /opt/pgi/linux86-64/2019/mpi/openmpi-3.1.3/bin/mpic++ ; " >> ~/boost_1_70_0/tools/build/src/user-config.jam
+ && echo "using mpi : /opt/pgi/linux86-64/2019/mpi/openmpi-3.1.3/bin/mpic++ ; " >> ~/boost_1_70_0/tools/build/src/user-config.jam && rm ~/boost_1_70_0.tar.bz2
 
 RUN cd ~/boost_1_70_0 && ./b2 -j 4 toolset=gcc install || true
 
 # Install SuperLU5
-RUN curl -O -J -L https://github.com/xiaoyeli/superlu/archive/v5.2.1.tar.gz; \
-	tar xvf superlu-5.2.1.tar.gz; \
+RUN curl -f -O -J -L https://github.com/xiaoyeli/superlu/archive/v5.2.1.tar.gz; \
+	tar xvf superlu-5.2.1.tar.gz; rm superlu-5.2.1.tar.gz \
 	mkdir /root/superlu-5.2.1/build; \
 	cd /root/superlu-5.2.1/build; \
 	cmake ../ -DBUILD_SHARED_LIBS=ON; \