{
  "startTime": 1674249364529,
  "endTime": 1674249366137,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 2,
        "columnEnd": 27
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 74,
        "lineEnd": 74,
        "columnStart": 2,
        "columnEnd": 64
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 84,
        "lineEnd": 84,
        "columnStart": 2,
        "columnEnd": 231
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 104,
        "lineEnd": 104,
        "columnStart": 2,
        "columnEnd": 27
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 111,
        "lineEnd": 111,
        "columnStart": 2,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 20,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 32,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 20,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 32,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 20,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 32,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 20,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 32,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 18
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 83
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 20,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 32,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 18
      }
    }
  ],
  "repairedDockerfile": "ARG FROM_DEBIAN=debian:latest\nFROM $FROM_DEBIAN\n\n# Take default debconf options\nENV DEBIAN_FRONTEND noninteractive\n\n# Configure apt defaults\nARG APT_CONF_LOCAL=99local\nRUN mkdir -p /etc/apt/apt.conf.d && \\\n  printf 'APT::Get::Assume-Yes \"true\";\\n\\\nAPT::Get::Install-Recommends \"false\";\\n\\\nAPT::Get::Install-Suggests \"false\";\\n' > /etc/apt/apt.conf.d/$APT_CONF_LOCAL\n\n# Upgrade existing packages\nRUN apt-get update && apt-get upgrade\n\n# Get curl and ssl for cmake fetches\nRUN apt-get install -y --no-install-recommends curl libcurl4-openssl-dev libssl-dev && rm -rf /var/lib/apt/lists/*;\n\n# Get build dependencies\nRUN apt-get install -y --no-install-recommends \\\n  build-essential \\\n  debhelper \\\n  autoconf \\\n  dh-autoreconf \\\n  git \\\n  libogg-dev \\\n  libtheora-dev \\\n  libvorbis-dev \\\n  pkg-config && rm -rf /var/lib/apt/lists/*;\n\n# Get SDL2 build dependencies\nRUN apt-get install -y --no-install-recommends \\\n  libasound2-dev \\\n  libdbus-1-dev \\\n  libegl1-mesa-dev \\\n  libgl1-mesa-dev \\\n  libgles2-mesa-dev \\\n  libglu1-mesa-dev \\\n  libibus-1.0-dev \\\n  libpulse-dev \\\n  libsndio-dev \\\n  libudev-dev \\\n  libwayland-dev \\\n  libx11-dev \\\n  libxcursor-dev \\\n  libxext-dev \\\n  libxi-dev \\\n  libxinerama-dev \\\n  libxkbcommon-dev \\\n  libxrandr-dev \\\n  libxss-dev \\\n  libxt-dev \\\n  libxv-dev \\\n  libxxf86vm-dev \\\n  libwayland-dev \\\n  libxkbcommon-dev && rm -rf /var/lib/apt/lists/*;\n\n# Build newer libogg\nARG LIBOGG_VERSION=1.3.5\nRUN curl -fLsS \"https://github.com/xiph/ogg/releases/download/v${LIBOGG_VERSION}/libogg-${LIBOGG_VERSION}.tar.xz\" --output /tmp/libogg-${LIBOGG_VERSION}.tar.xz && \\\n  tar --file=/tmp/libogg-${LIBOGG_VERSION}.tar.xz -xvJC /tmp && \\\n  cd /tmp/libogg-${LIBOGG_VERSION} && \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/opt && \\\n  make && \\\n  make install && \\\n  rm -r /tmp/libogg-${LIBOGG_VERSION} && \\\n  rm /tmp/libogg-${LIBOGG_VERSION}.tar.xz\n\n# Build newer libvorbis\nARG LIBVORBIS_VERSION=1.3.7\nRUN curl -fLsS \"https://github.com/xiph/vorbis/releases/download/v${LIBVORBIS_VERSION}/libvorbis-${LIBVORBIS_VERSION}.tar.gz\" --output /tmp/libvorbis-${LIBVORBIS_VERSION}.tar.gz && \\\n  tar --file=/tmp/libvorbis-${LIBVORBIS_VERSION}.tar.gz -xvzC /tmp && \\\n  cd /tmp/libvorbis-${LIBVORBIS_VERSION} && \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --disable-examples --disable-oggtest --prefix=/opt && \\\n  make && \\\n  make install && \\\n  rm -r /tmp/libvorbis-${LIBVORBIS_VERSION} && \\\n  rm /tmp/libvorbis-${LIBVORBIS_VERSION}.tar.gz\n\n# Build and install SDL2\nARG SDL2_VERSION=2.0.12\nRUN curl -fLsS \"https://github.com/libsdl-org/SDL/archive/refs/tags/release-${SDL2_VERSION}.tar.gz\" | tar -f - -xvzC /tmp && \\\n  cd /tmp/SDL-release-$SDL2_VERSION && \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-shared --enable-loadso --enable-sdl-dlopen --enable-pulseaudio-shared --enable-sndio-shared --enable-x11-shared --enable-oss=no --enable-libsamplerate-shared --enable-video-wayland=no --enable-directfb-shared && \\\n  make -j$(getconf _NPROCESSORS_ONLN) && make install && \\\n  mkdir -p /usr/local/share/doc/libSDL2-2.0/ && cp /tmp/SDL-release-$SDL2_VERSION/debian/copyright /usr/local/share/doc/libSDL2-2.0/copyright && \\\n  rm -r /tmp/SDL-release-$SDL2_VERSION\n\n# Build newer libtheora - note that encoding support is disabled AND it's directory uses GH repo name instead\nARG LIBTHEORA_VERSION=1.1.1\nRUN curl -fLsS \"https://github.com/xiph/theora/archive/refs/tags/v${LIBTHEORA_VERSION}.tar.gz\" --output /tmp/libtheora-${LIBTHEORA_VERSION}.tar.gz && \\\n  tar --file=/tmp/libtheora-${LIBTHEORA_VERSION}.tar.gz -xvzC /tmp && \\\n  cd /tmp/theora-${LIBTHEORA_VERSION} && \\\n  ./autogen.sh --disable-encode --disable-examples --disable-oggtest --prefix=/opt && \\\n  make && \\\n  make install && \\\n  rm -r /tmp/theora-${LIBTHEORA_VERSION} && \\\n  rm /tmp/libtheora-${LIBTHEORA_VERSION}.tar.gz\n\n# Build and install CMake\nARG CMAKE_VERSION=3.14.5\nRUN curl -fLsS \"https://github.com/Kitware/CMake/releases/download/v$CMAKE_VERSION/cmake-$CMAKE_VERSION.tar.gz\" | tar -f - -xvzC /tmp && \\\n  cd /tmp/cmake-$CMAKE_VERSION && \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --system-curl && make -j$(getconf _NPROCESSORS_ONLN) && make install && \\\n  rm -r /tmp/cmake-$CMAKE_VERSION\n\n# Build and install SDL_sound\nARG SDL2_SOUND_VERSION=495e948b455af48eb45f75cccc060498f1e0e8a2\nRUN cd /tmp && \\\n  curl -fLsS \"https://github.com/icculus/SDL_sound/archive/$SDL2_SOUND_VERSION.tar.gz\" --output SDL_sound.tar.gz && \\\n  tar -xvzf SDL_sound.tar.gz && \\\n  mv SDL_sound-$SDL2_SOUND_VERSION SDL_sound &&  \\\n  cd /tmp/SDL_sound  && \\\n  mkdir /tmp/SDL_sound/build && \\\n  cd /tmp/SDL_sound/build && \\\n  cmake -DSDL2_DIR=/usr/local/lib/cmake/SDL2  -DSDLSOUND_DECODER_MIDI=1 ..  && make -j$(getconf _NPROCESSORS_ONLN) && make install && \\\n  rm /usr/local/lib/libSDL2_sound.*so* && \\\n  rm -r /tmp/SDL_sound && rm SDL_sound.tar.gz\n"
}