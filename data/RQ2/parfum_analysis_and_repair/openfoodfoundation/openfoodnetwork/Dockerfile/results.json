{
  "startTime": 1674219025225,
  "endTime": 1674219026383,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 7,
        "columnEnd": 26
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 62,
        "columnEnd": 75
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 27,
        "columnStart": 22,
        "columnEnd": 7
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 7,
        "columnEnd": 56
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 27,
        "columnStart": 22,
        "columnEnd": 7
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 79
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 7,
        "columnEnd": 56
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 44
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 20,
        "columnEnd": 36
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:20.04\n\nENV TZ Europe/London\n\nRUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone\n\nRUN echo \"deb http://security.ubuntu.com/ubuntu bionic-security main\" >> /etc/apt/sources.list\n\n# Install all the requirements\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n  curl \\\n  git \\\n  build-essential \\\n  software-properties-common \\\n  wget \\\n  zlib1g-dev \\\n  libreadline-dev \\\n  libyaml-dev \\\n  libffi-dev \\\n  libxml2-dev \\\n  libxslt1-dev \\\n  wait-for-it \\\n  imagemagick \\\n  unzip \\\n  libjemalloc-dev \\\n  libssl-dev \\\n  ca-certificates \\\n  gnupg && rm -rf /var/lib/apt/lists/*;\n\n# Setup ENV variables\nENV PATH /usr/local/src/rbenv/shims:/usr/local/src/rbenv/bin:$PATH\nENV RBENV_ROOT /usr/local/src/rbenv\nENV CONFIGURE_OPTS --disable-install-doc\nENV BUNDLE_PATH /bundles\nENV LD_PRELOAD=/usr/lib/x86_64-linux-gnu/libjemalloc.so\n\nWORKDIR /usr/src/app\nCOPY .ruby-version .\n\n# Install Rbenv & Ruby\nRUN git clone --depth 1 https://github.com/rbenv/rbenv.git ${RBENV_ROOT} && \\\n    git clone --depth 1 https://github.com/rbenv/ruby-build.git ${RBENV_ROOT}/plugins/ruby-build && \\\n    echo 'eval \"$(rbenv init -)\"' >> /etc/profile.d/rbenv.sh && \\\n    RUBY_CONFIGURE_OPTS=--with-jemalloc rbenv install $(cat .ruby-version) && \\\n    rbenv global $(cat .ruby-version)\n\n# Install Postgres\nRUN sh -c \"echo 'deb http://apt.postgresql.org/pub/repos/apt/ `lsb_release -cs`-pgdg main' >> /etc/apt/sources.list.d/pgdg.list\" && \\\n    curl -f https://www.postgresql.org/media/keys/ACCC4CF8.asc | gpg --batch --dearmor | tee /etc/apt/trusted.gpg.d/apt.postgresql.org.gpg >/dev/null && \\\n    apt-get update && \\\n    apt-get install -yqq --no-install-recommends postgresql-client-10 libpq-dev && rm -rf /var/lib/apt/lists/*;\n\n# Install NodeJs and yarn\nRUN curl -f -sL https://deb.nodesource.com/setup_14.x | bash - \\\n    && apt-get install --no-install-recommends -y nodejs \\\n    && npm install -g yarn && npm cache clean --force; && rm -rf /var/lib/apt/lists/*;\n\n# Install Chrome\nRUN wget --quiet -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - && \\\n    sh -c \"echo 'deb [arch=amd64]  http://dl.google.com/linux/chrome/deb/ stable main' >> /etc/apt/sources.list.d/google-chrome.list\" && \\\n    apt-get update && \\\n    apt-get install --no-install-recommends -fy google-chrome-stable && rm -rf /var/lib/apt/lists/*;\n\n# Install Chromedriver\nRUN wget https://chromedriver.storage.googleapis.com/2.41/chromedriver_linux64.zip && \\\n    unzip chromedriver_linux64.zip -d /usr/bin && \\\n    chmod u+x /usr/bin/chromedriver\n\n# Copy code and install app dependencies\nCOPY . /usr/src/app/\n\n# Install Bundler\nRUN ./script/install-bundler\n\n# Install front-end dependencies\nRUN yarn install && yarn cache clean;\n\n# Run bundler install in parallel with the amount of available CPUs\nRUN bundle install --jobs=\"$(nproc)\"\n"
}