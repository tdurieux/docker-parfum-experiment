{
  "startTime": 1674216422804,
  "endTime": 1674216424298,
  "originalSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 78
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 22,
        "columnEnd": 85
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 78
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 38,
        "columnEnd": 117
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 78
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 16
      }
    }
  ],
  "repairedDockerfile": "FROM debian:experimental\nLABEL maintainer=\"Patrick Pacher <patrick@safing.io>\"\n\n# Installs the `dpkg-buildpackage` command\nRUN apt-get update && apt-get install --no-install-recommends -y build-essential curl && rm -rf /var/lib/apt/lists/*;\nRUN dpkg --add-architecture i386 && \\\n    apt-get update && apt upgrade -y\nRUN apt-cache search libgcc\nRUN apt-get install -y --no-install-recommends libc6-i686 libgcc-s1-i386-cross && rm -rf /var/lib/apt/lists/*;\nRUN apt-get install --no-install-recommends -y \\\n      wine \\\n      wine32 \\\n      cabextract && rm -rf /var/lib/apt/lists/*;\nRUN apt-get -t experimental update && apt-get -t experimental install ca-certificates -y --no-install-recommends nsis && apt-get clean && rm -rf /var/lib/apt/lists/*;\n\n# Copies your code file from your action repository to the filesystem path `/` of the container\nCOPY entrypoint.sh /entrypoint.sh\n\n# Code file to execute when the docker container starts up (`entrypoint.sh`)\nENTRYPOINT [\"/entrypoint.sh\"]\n"
}