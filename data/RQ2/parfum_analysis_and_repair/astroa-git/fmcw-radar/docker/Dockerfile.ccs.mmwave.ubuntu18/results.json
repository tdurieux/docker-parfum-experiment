{
  "startTime": 1674216150314,
  "endTime": 1674216151175,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 104
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 104
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 7,
        "columnEnd": 135
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 79,
        "lineEnd": 79,
        "columnStart": 7,
        "columnEnd": 135
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 32,
        "columnStart": 54,
        "columnEnd": 13
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 32,
        "columnStart": 54,
        "columnEnd": 13
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#FROM ubuntu:18.04\n#start from scratch for target executable\nFROM ubuntu:bionic as ccs-mmwave\nLABEL maintainer=\"Astro <astro@bridgeit.tech>\"\n\nENV DEBIAN_FRONTEND=noninteractive\nENV TZ=Europe\nRUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone\n\n#Install all packages needed\n#http://processors.wiki.ti.com/index.php/Linux_Host_Support_CCSv6\n\nRUN dpkg --add-architecture i386 && apt-get update && apt-get install --no-install-recommends -y \\\n  libc6:i386 \\\n  libasound2 \\\n  libusb-0.1-4 \\\n  libstdc++6 \\\n  libxt6 \\\n  libcanberra-gtk-module \\\n  unzip \\\n  wget \\\n  software-properties-common \\\n  build-essential \\\n  ca-certificates \\\n  curl \\\n  libgconf-2-4 \\\n  libdbus-glib-1-2 \\\n  libpython2.7 \\\n  python2.7 \\\n  libxtst6 \\\n  at-spi2-core \\\n  binutils \\\n  python3-pip && rm -rf /var/lib/apt/lists/*;\n\n# Python setup\n#RUN add-apt-repository ppa:jonathonf/python-3.6\n#RUN apt-get update && apt-get install -y \\\n#  python3-pip               \\\n#  python3.6\nRUN pip3 install --no-cache-dir --upgrade pip\nRUN pip3 install --no-cache-dir teamcity-messages\n\n# Install missing library\nWORKDIR /ccs_install\n\nRUN export JAVA_TOOL_OPTIONS=-Xss1280k\n\n# Install ccs in unattended mode\n#https://e2e.ti.com/support/development_tools/code_composer_studio/f/81/t/374161\n\nENV PATH=\"/scripts:${PATH}\"\n\n\n# This is stored on our private server as TI requires authentication and LFS is not supported on docker with github\n#RUN wget -q https://roomzproduction.blob.core.windows.net/tools/simplelink_cc32xx_sdk_4_10_00_07.run \\\n#    && chmod 777 /ccs_install/simplelink_cc32xx_sdk_4_10_00_07.run \\\n#    && /ccs_install/simplelink_cc32xx_sdk_4_10_00_07.run --mode unattended \\\n#    && rm -rf /ccs_install/\n\n# Download and install CCS\n#ADD CCS9.2.0.00013_linux-x64 /ccs_install\n#RUN /ccs_install/ccs_setup_9.2.0.00013.bin --mode unattended --prefix /opt/ti --enable-components PF_MSP430,PF_CC3X\n\n\nRUN curl -f -L https://software-dl.ti.com/ccs/esd/CCSv10/CCS_10_0_0/exports/CCS10.0.0.00010_linux-x64.tar.gz | tar xvz --strip-components=1 -C /ccs_install \\\n    && /ccs_install/ccs_setup_10.0.0.00010.run --mode unattended --prefix /opt/ti --enable-components PF_MSP430,PF_CC3X \\\n    && rm -rf /ccs_install/\n#This fails silently: check result somehow\n\n\n#Install latest compiler\nRUN cd /ccs_install \\\n    && wget -q https://software-dl.ti.com/codegen/esd/cgt_public_sw/TMS470/18.12.5.LTS/ti_cgt_tms470_18.12.5.LTS_linux_installer_x86.bin \\\n    && chmod 777 /ccs_install/ti_cgt_tms470_18.12.5.LTS_linux_installer_x86.bin \\\n    && ls -l /ccs_install \\\n    && /ccs_install/ti_cgt_tms470_18.12.5.LTS_linux_installer_x86.bin --prefix /opt/ti --unattendedmodeui minimal \\\n    && rm -rf /ccs_install/\n\nRUN cd /ccs_install \\\n    && wget -q https://software-dl.ti.com/codegen/esd/cgt_public_sw/MSP430/18.12.5.LTS/ti_cgt_msp430_18.12.5.LTS_linux_installer_x86.bin \\\n    && chmod 777 /ccs_install/ti_cgt_msp430_18.12.5.LTS_linux_installer_x86.bin \\\n    && ls -l /ccs_install \\\n    && /ccs_install/ti_cgt_msp430_18.12.5.LTS_linux_installer_x86.bin --prefix /opt/ti --unattendedmodeui minimal \\\n    && rm -rf /ccs_install/\n\n\nENV PATH=\"/opt/ti/ccs/eclipse:${PATH}\"\n\n# workspace folder for CCS\nRUN mkdir /workspace\n\n# directory for the ccs project\nVOLUME /workdir\nWORKDIR /workdir\n\n# Pre compile libraries needed for the msp to avoid 6min compile during each build\nENV PATH=\"${PATH}:/opt/ti/ccs/tools/compiler/ti-cgt-arm_20.2.0.LTS/bin\"\n#RUN /opt/ti/ccs/tools/compiler/ti-cgt-arm_20.2.0.LTS/lib/mklib --pattern=rts430x_sc_sd_eabi.lib\n\n# if needed\n#ENTRYPOINT []\n"
}