{
  "startTime": 1674254440258,
  "endTime": 1674254442081,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 83,
        "lineEnd": 83,
        "columnStart": 7,
        "columnEnd": 32
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 7,
        "columnEnd": 63
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 92,
        "lineEnd": 92,
        "columnStart": 7,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 20,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 19
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 35,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 49,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 57,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 77
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 35,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 49,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 57,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 77
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 82
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 20,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 19
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 35,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 49,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 35,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 49,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 57,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 77
      }
    }
  ],
  "repairedDockerfile": "FROM nvidia/cuda:11.1-cudnn8-devel-ubuntu18.04\n\nMAINTAINER MindSpore Authors\n\n# Set env\nENV PYTHON_ROOT_PATH /usr/local/python-3.7.5\nENV OMPI_ROOT_PATH /usr/local/openmpi-4.0.3\nENV CUDA_PATH /usr/local/cuda\nENV PATH ${PYTHON_ROOT_PATH}/bin:${OMPI_ROOT_PATH}/bin:${CUDA_PATH}/bin:/usr/local/bin:$PATH\nENV LD_LIBRARY_PATH ${OMPI_ROOT_PATH}/lib:${CUDA_PATH}/lib64:$LD_LIBRARY_PATH\n\n# Update nvidia GPG key and install base tools\nRUN rm /etc/apt/sources.list.d/cuda.list && \\\n    rm /etc/apt/sources.list.d/nvidia-ml.list && \\\n    apt-key del 7fa2af80 && \\\n    DEBIAN_FRONTEND=noninteractive apt-get update && \\\n    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends wget && \\\n    wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/cuda-keyring_1.0-1_all.deb && \\\n    dpkg -i cuda-keyring_1.0-1_all.deb && \\\n    DEBIAN_FRONTEND=noninteractive apt-get update && \\\n    DEBIAN_FRONTEND=noninteractive apt --no-install-recommends install -y \\\n    vim \\\n    wget \\\n    curl \\\n    xz-utils \\\n    net-tools \\\n    openssh-client \\\n    git \\\n    ntpdate \\\n    tzdata \\\n    tcl \\\n    sudo \\\n    bash-completion && rm -rf /var/lib/apt/lists/*;\n\n# Install compile tools\nRUN DEBIAN_FRONTEND=noninteractive apt --no-install-recommends install -y \\\n    gcc \\\n    g++ \\\n    zlibc \\\n    make \\\n    libgmp-dev \\\n    patch \\\n    autoconf \\\n    libtool \\\n    automake \\\n    flex \\\n    libjpeg8-dev && rm -rf /var/lib/apt/lists/*;\n\n# Install the rest dependent tools\nRUN DEBIAN_FRONTEND=noninteractive apt --no-install-recommends install -y \\\n    libnuma-dev && rm -rf /var/lib/apt/lists/*;\n\n# Set bash\nRUN echo \"dash dash/sh boolean false\" | debconf-set-selections\nRUN DEBIAN_FRONTEND=noninteractive dpkg-reconfigure dash\n\n# Install python (v3.7.5)\nRUN apt install --no-install-recommends -y libffi-dev libssl-dev zlib1g-dev libbz2-dev libncurses5-dev \\\n    libgdbm-dev libgdbm-compat-dev liblzma-dev libreadline-dev libsqlite3-dev \\\n    && rm -rf /var/lib/apt/lists/* \\\n    && cd /tmp \\\n    && wget https://github.com/python/cpython/archive/v3.7.5.tar.gz \\\n    && tar -xvf v3.7.5.tar.gz \\\n    && cd /tmp/cpython-3.7.5 \\\n    && mkdir -p ${PYTHON_ROOT_PATH} \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=${PYTHON_ROOT_PATH} --enable-shared \\\n    && make -j4 \\\n    && make install -j4 \\\n    && rm -f /usr/local/bin/python \\\n    && rm -f /usr/local/bin/pip \\\n    && rm -f /usr/local/lib/libpython3.7m.so.1.0 \\\n    && ln -s ${PYTHON_ROOT_PATH}/bin/python3.7 /usr/local/bin/python \\\n    && ln -s ${PYTHON_ROOT_PATH}/bin/pip3.7 /usr/local/bin/pip \\\n    && ln -s ${PYTHON_ROOT_PATH}/lib/libpython3.7m.so.1.0 /usr/local/lib/libpython3.7m.so.1.0 \\\n    && ldconfig \\\n    && rm -rf /tmp/cpython-3.7.5 \\\n    && rm -f /tmp/v3.7.5.tar.gz\n\n# Set pip source\nRUN mkdir -pv /root/.pip \\\n    && echo \"[global]\" > /root/.pip/pip.conf \\\n    && echo \"trusted-host=mirrors.aliyun.com\" >> /root/.pip/pip.conf \\\n    && echo \"index-url=http://mirrors.aliyun.com/pypi/simple/\" >> /root/.pip/pip.conf \\\n    && pip install --no-cache-dir --upgrade pip \\\n    && pip cache purge\n\n# Install openmpi (v4.0.3)\nRUN cd /tmp \\\n    && wget https://download.open-mpi.org/release/open-mpi/v4.0/openmpi-4.0.3.tar.gz \\\n    && tar -xvf openmpi-4.0.3.tar.gz \\\n    && cd /tmp/openmpi-4.0.3 \\\n    && mkdir -p ${OMPI_ROOT_PATH} \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=${OMPI_ROOT_PATH} \\\n    && make -j4 \\\n    && make install -j4 \\\n    && rm -rf /tmp/openmpi-4.0.3 \\\n    && rm -f /tmp/openmpi-4.0.3.tar.gz\n\n# Install MindSpore cuda-11.1, MindInsight, Serving whl package\nRUN pip install --no-cache-dir https://ms-release.obs.cn-north-4.myhuaweicloud.com/1.7.0/MindSpore/gpu/x86_64/cuda-11.1/mindspore_gpu-1.7.0-cp37-cp37m-linux_x86_64.whl \\\n    && pip install --no-cache-dir https://ms-release.obs.cn-north-4.myhuaweicloud.com/1.7.0/MindInsight/any/mindinsight-1.7.0-py3-none-any.whl \\\n    && pip install --no-cache-dir https://ms-release.obs.cn-north-4.myhuaweicloud.com/1.7.0/Serving/x86_64/mindspore_serving-1.7.0-cp37-cp37m-linux_x86_64.whl\n"
}