{
  "startTime": 1674219788751,
  "endTime": 1674219789821,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 22,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 10
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 61,
        "lineEnd": 106,
        "columnStart": 22,
        "columnEnd": 14
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 115,
        "lineEnd": 116,
        "columnStart": 22,
        "columnEnd": 48
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:bionic\n\n# Hint to dpkg and apt that packages should be installed without asking for human intervention\nENV DEBIAN_FRONTEND noninteractive\n\n\n# setup timezone\nRUN echo 'Etc/UTC' > /etc/timezone && \\\n    ln -s /usr/share/zoneinfo/Etc/UTC /etc/localtime && \\\n    apt-get update && apt-get install --no-install-recommends -q -y tzdata && rm -rf /var/lib/apt/lists/*\n\n# install packages\n# RUN apt-get update && apt-get install -q -y \\\n#     dirmngr \\\n#     gnupg2 \\\n#     lsb-release \\\n#     && rm -rf /var/lib/apt/lists/*\n\nRUN apt-get update \\\n && apt-get install --no-install-recommends -y \\\n    gnupg2 \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n\n\n# Need these before sources can be set up\n# RUN apt update \\\n#  && apt install -y \\\n#     curl \\\n#     gnupg2 \\\n#  && apt-get clean \\\n#  && rm -rf /var/lib/apt/lists/*\n\n# RUN curl -s https://raw.githubusercontent.com/ros/rosdistro/master/ros.asc | apt-key add -\n\n# sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys F88F6D313016330404F710FC9A2FD067A2E3EF7B\n\n# setup keys and sources for official Gazebo and ROS debian packages\nRUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys D2486D2DD83DB69272AFE98867170598AF249743 \\\n && echo \"deb http://packages.osrfoundation.org/gazebo/ubuntu-stable bionic main\" > /etc/apt/sources.list.d/gazebo-latest.list \\\n && apt-key adv --keyserver keyserver.ubuntu.com --recv-keys C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654 \\\n && echo \"deb http://packages.ros.org/ros/ubuntu bionic main\" > /etc/apt/sources.list.d/ros-latest.list\n\n# install bootstrap tools\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    python-rosdep \\\n    python-rosinstall \\\n    python-vcstools \\\n    && rm -rf /var/lib/apt/lists/*\n\n# setup environment\n# ENV LANG C.UTF-8\n# ENV LC_ALL C.UTF-8\n\n\n# bootstrap rosdep\n# RUN rosdep init \\\n#     && rosdep update\n\n\n# install ROS and Gazebo packages\nRUN apt-get update && apt-get install --no-install-recommends -q -y \\\n    bash-completion \\\n    gazebo9 \\\n    libgazebo9-dev \\\n    libopencv-contrib-dev \\\n    locales \\\n    xvfb \\\n    psmisc \\\n    ros-melodic-rqt-image-view \\\n    python-catkin-tools \\\n    ros-melodic-image-pipeline \\\n    ros-melodic-ros-control* \\\n    ros-melodic-control* \\\n    ros-melodic-gazebo-msgs \\\n    ros-melodic-gazebo-plugins \\\n    ros-melodic-gazebo-ros-control* \\\n    ros-melodic-gazebo-ros \\\n    ros-melodic-gazebo-ros-pkgs \\\n    ros-melodic-robot-state-publisher \\\n    ros-melodic-camera-info-manager \\\n    ros-melodic-ros-control \\\n    ros-melodic-ros-controllers \\\n    ros-melodic-perception \\\n    ros-melodic-ros-core \\\n    ros-melodic-desktop-full \\\n    ros-melodic-image-transport \\\n    ros-melodic-cv-bridge \\\n    ros-melodic-joint-limits-interface \\\n    ros-melodic-polled-camera \\\n    ros-melodic-diagnostic-updater \\\n    ros-melodic-transmission-interface \\\n    ros-melodic-ros-base \\\n    ros-melodic-desktop-full \\\n    ros-melodic-moveit \\\n    libcanberra-gtk* \\\n    software-properties-common \\\n    apt-utils \\\n    git \\\n    # curl \\\n    ca-certificates \\\n    bzip2 \\\n    tree \\\n    htop \\\n    bmon \\\n    wget \\\n    mesa-utils \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/*\n\n# RUN add-apt-repository ppa:oibaf/graphics-drivers && apt-get update\n# RUN apt-get install mesa && apt-get clean && rm -rf /var/lib/apt/lists/*\n\n\n# Other things for ROS\nRUN apt-get update && apt-get install --no-install-recommends -q -y \\\n\tninja-build python-pip python-dev python-wstool \\\n    && rm -rf /var/lib/apt/lists/*\n\n# RUN pip install -U \\\n#     catkin-tools \\\n#     jinja2\n\n# bootstrap rosdep\nRUN rosdep init\n\n# Need to install a specific version of gazebo_ros_pkgs\n# 1. Remove official packages\nRUN export GZ_VERSION=9 && \\\n    dpkg -r --force-depends ros-melodic-gazebo${GZ_VERSION}-ros-pkgs \\\n                            ros-melodic-gazebo${GZ_VERSION}-ros \\\n                            ros-melodic-gazebo${GZ_VERSION}-plugins \\\n                            ros-melodic-gazebo${GZ_VERSION}-msgs \\\n                            ros-melodic-gazebo${GZ_VERSION}-ros-control\n\n\nRUN sh -c 'echo \"deb http://packages.osrfoundation.org/gazebo/ubuntu-stable `lsb_release -cs` main\" > /etc/apt/sources.list.d/gazebo-stable.list'\nRUN wget https://packages.osrfoundation.org/gazebo.key -O - | sudo apt-key add -\nRUN apt-get update\nRUN apt-get update -y\n\n\n\n\n# 3. Build the version from source\nRUN mkdir -p /tmp/ros_ws/src\nRUN /bin/bash -c \"source /opt/ros/melodic/setup.bash && \\\n                  cd /tmp/ros_ws/src && \\\n                  catkin_init_workspace\"\n\n\n\n# Expose port used to communicate with gzserver\nEXPOSE 11345\n\n# CPU rendering with LLVMPipe\n# from https://www.openrobots.org/morse/doc/stable/headless.html\n\n# RUN apt-get update && apt-get install -q -y \\\n# \tllvm-dev scons python-mako libedit-dev flex wget bison \\\n#     && rm -rf /var/lib/apt/lists/*\n\n# COPY ./build_mesa.sh /tmp\n# RUN /tmp/build_mesa.sh && rm /tmp/build_mesa.sh\n\n# RUN apt-get update && apt-get install -q -y \\\n# \tffmpeg xvfb vim tmux htop xdotool rsync \\\n#     && rm -rf /var/lib/apt/lists/*\n\n# RUN pip install -U \\\n#     numpy toml\n\n# Stuff for nvidia-docker\nLABEL com.nvidia.volumes.needed=\"nvidia_driver\"\nENV PATH /usr/local/nvidia/bin:${PATH}\nENV LD_LIBRARY_PATH /usr/local/nvidia/lib:/usr/local/nvidia/lib64:${LD_LIBRARY_PATH}\n\n# Set encoding to use unicode characters\nRUN locale-gen en_US.UTF-8\nENV LANG en_US.UTF-8\n\n# COPY ./build_mesa.sh /tmp\n# RUN /tmp/build_mesa.sh && rm /tmp/build_mesa.sh\n\n# Create a new user called ariac. Note: we don't add them to the sudo group\nENV USERNAME ariac\nARG USERID=1000\nRUN adduser -u $USERID --gecos \"Development User\" --disabled-password $USERNAME\nRUN echo \"export QT_X11_NO_MITSHM=1\" >> /home/$USERNAME/.bashrc\n\nUSER $USERNAME\nWORKDIR /home/$USERNAME\n\n# Get gazebo models early since it is big\n\nRUN mkdir -p $HOME/.gazebo/models\nRUN git clone \\\n    https://github.com/osrf/gazebo_models $HOME/.gazebo/models\n\n\n #Download and compile ARIAC 2022\n RUN mkdir -p /home/ariac/ariac_ws/src\n RUN mkdir -p /tmp/gazebo_ws\n RUN mkdir -p /tmp/ariac_ws\n\n RUN git clone \\\n      https://github.com/osrf/ariac-gazebo_ros_pkgs.git /tmp/gazebo_ws \\\n      -b ariac-network-melodic\n\n RUN git clone \\\n    https://github.com/usnistgov/ARIAC.git  /tmp/ariac_ws \\\n    -b ariac2022\n RUN /bin/bash -c \"cp -rf /tmp/gazebo_ws /home/ariac/ariac_ws/src\"\n RUN /bin/bash -c \"cp -rf /tmp/ariac_ws /home/ariac/ariac_ws/src\"\n\n RUN /bin/bash -c \"rm -rf /tmp/ariac_ws\"\n RUN /bin/bash -c \"rm -rf /tmp/gazebo_ws\"\n\n RUN /bin/bash -c \"source /opt/ros/melodic/setup.bash && \\\n                   cd /home/ariac/ariac_ws && \\\n                   catkin_make\"\n\n\n# setup entrypoint\nCOPY ./ariac_entrypoint.sh /\nCOPY ./run_ariac_task.sh /\n\n\nENTRYPOINT [\"/ariac_entrypoint.sh\"]\n"
}