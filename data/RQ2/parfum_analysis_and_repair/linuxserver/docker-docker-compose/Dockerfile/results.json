{
  "startTime": 1674255116707,
  "endTime": 1674255117948,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 22,
        "columnEnd": 89
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 2,
        "columnEnd": 21
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 35,
        "lineEnd": 37,
        "columnStart": 2,
        "columnEnd": 7
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 21,
        "columnStart": 22,
        "columnEnd": 14
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG DOCKER_VERSION=20.10.13\n\nFROM docker:${DOCKER_VERSION} AS docker-cli\n\nFROM ghcr.io/linuxserver/baseimage-ubuntu:focal AS build\n\nARG COMPOSE_VERSION\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    curl \\\n    gcc \\\n    git \\\n    jq \\\n    libc-dev \\\n    libffi-dev \\\n    libgcc-10-dev \\\n    libssl-dev \\\n    make \\\n    openssl \\\n    python3-dev \\\n    python3-pip \\\n    zlib1g-dev && rm -rf /var/lib/apt/lists/*;\n\nCOPY --from=docker-cli /usr/local/bin/docker /usr/local/bin/docker\n\nRUN \\\n  mkdir -p /compose && \\\n  if [ -z ${COMPOSE_VERSION+x} ]; then \\\n    COMPOSE_VERSION=$( curl -f -sX GET \"https://api.github.com/repos/docker/compose/releases\" \\\n    | jq -r 'first(.[] | select(.tag_name | startswith(\"1.\"))) | .tag_name') ; \\\n  fi && \\\n  git clone https://github.com/docker/compose.git && \\\n  cd /compose && \\\n  git checkout \"${COMPOSE_VERSION}\" && \\\n  pip3 install --no-cache-dir -U pip && \\\n  pip install --no-cache-dir -U --ignore-installed \\\n    virtualenv \\\n    tox && \\\n  PY_ARG=$(printf \"$(python3 -V)\" | awk '{print $2}' | awk 'BEGIN{FS=OFS=\".\"} NF--' | sed 's|\\.||g' | sed 's|^|py|g') && \\\n  sed -i \"s|envlist = .*|envlist = ${PY_ARG},pre-commit|g\" tox.ini && \\\n  tox --notest && \\\n  mkdir -p dist && \\\n  chmod 777 dist && \\\n  /compose/.tox/${PY_ARG}/bin/pip3 install -q -r requirements-build.txt && \\\n  echo \"$(script/build/write-git-sha)\" > compose/GITSHA && \\\n  export PATH=\"/compose/pyinstaller:${PATH}\" && \\\n  /compose/.tox/${PY_ARG}/bin/pyinstaller --exclude-module pycrypto --exclude-module PyInstaller docker-compose.spec && \\\n  ls -la dist/ && \\\n  ldd dist/docker-compose && \\\n  mv dist/docker-compose /usr/local/bin && \\\n  docker-compose version\n\n############## runtime stage ##############\nFROM ghcr.io/linuxserver/baseimage-ubuntu:focal\n\nARG BUILD_DATE\nARG VERSION\nLABEL build_version=\"Linuxserver.io version:- ${VERSION} Build-date:- ${BUILD_DATE}\"\nLABEL maintainer=\"aptalca\"\n\nCOPY --from=build /compose/docker-compose-entrypoint.sh /usr/local/bin/docker-compose-entrypoint.sh\nCOPY --from=docker-cli /usr/local/bin/docker /usr/local/bin/docker\nCOPY --from=build /usr/local/bin/docker-compose /usr/local/bin/docker-compose\nENTRYPOINT [\"sh\", \"/usr/local/bin/docker-compose-entrypoint.sh\"]\n"
}