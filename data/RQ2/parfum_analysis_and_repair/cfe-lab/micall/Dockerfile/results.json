{
  "startTime": 1674252725717,
  "endTime": 1674252726539,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 69
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 81,
        "lineEnd": 81,
        "columnStart": 4,
        "columnEnd": 81
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 92,
        "lineEnd": 92,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 93,
        "lineEnd": 93,
        "columnStart": 2,
        "columnEnd": 55
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 74,
        "lineEnd": 74,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 82,
        "lineEnd": 82,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 31,
        "lineEnd": 33,
        "columnStart": 40,
        "columnEnd": 6
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 69
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 86,
        "lineEnd": 86,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 69
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 86,
        "lineEnd": 86,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 69
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 86,
        "lineEnd": 86,
        "columnStart": 4,
        "columnEnd": 39
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 93
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 86,
        "lineEnd": 86,
        "columnStart": 4,
        "columnEnd": 63
      }
    }
  ],
  "repairedDockerfile": "# Dockerized version of MiCall.\n\n# This Docker container will be used by BaseSpace, as well as for running on a\n# Docker-enabled workstation.  Instructions may be found by running with the\n# --help option; e.g. if you build this Docker image as micall:version, call\n#\n# docker run micall:version --help\n#\n# or for help on the specific subcommands,\n#\n# docker run micall:version {basespace,folder,sample,hcv_sample} --help\n#\n# This Dockerfile can be used to build two types of MiCall images:\n# - a \"production\" image, which can be used to deploy and run Micall; and\n# - a \"dev\" image, which contains packages needed for testing\n#   and development of MiCall.\n# The dev image is slower to build.\n#\n# To specify which image you want to build, use the `--target` tag to\n# `docker build`, e.g.\n#\n# docker build --target production -t [image name]:[tag] [source directory]\n#\n# If you omit the `--target` tag altogether, `docker build` will build\n# the development image.\n\nFROM python:3.8\n\nMAINTAINER BC CfE in HIV/AIDS https://github.com/cfe-lab/MiCall\n\n## Prerequisites\nRUN apt-get update -qq --fix-missing && apt-get install --no-install-recommends -qq -y \\\n  unzip \\\n  wget \\\n  && rm -rf /var/lib/apt/lists/*\n\nRUN wget -qO rustup.sh https://sh.rustup.rs && \\\n    chmod +x /rustup.sh && \\\n    /rustup.sh -y -q && \\\n    . /root/.cargo/env && \\\n    rm rustup.sh && \\\n    cargo install --root / --git https://github.com/jeff-k/merge-mates.git\n\n## Installing blast\nRUN apt-get update -qq --fix-missing && \\\n    apt-get install --no-install-recommends -q -y ncbi-blast+ && \\\n    rm -rf /var/lib/apt/lists/*\n\n## bowtie2\nRUN wget -q -O bowtie2.zip https://github.com/BenLangmead/bowtie2/releases/download/v2.2.8/bowtie2-2.2.8-linux-x86_64.zip && \\\n  unzip bowtie2.zip -d /opt/ && \\\n  ln -s /opt/bowtie2-2.2.8/ /opt/bowtie2 && \\\n  rm bowtie2.zip\n\nENV PATH $PATH:/opt/bowtie2\n\n## Installing IVA dependencies\nRUN apt-get install --no-install-recommends -q -y zlib1g-dev libncurses5-dev libncursesw5-dev && \\\n    cd /bin && \\\n    wget -q https://sun.aei.polsl.pl/kmc/download-2.1.1/linux/kmc && \\\n    wget -q https://sun.aei.polsl.pl/kmc/download-2.1.1/linux/kmc_dump && \\\n    chmod +x kmc kmc_dump && \\\n    cd /opt && \\\n    wget -q https://sourceforge.net/projects/mummer/files/mummer/3.23/MUMmer3.23.tar.gz && \\\n    tar -xzf MUMmer3.23.tar.gz --no-same-owner && \\\n    cd MUMmer3.23 && \\\n    make --quiet install && \\\n    rm -r docs src ../MUMmer3.23.tar.gz && \\\n    ln -s /opt/MUMmer3.23/nucmer \\\n        /opt/MUMmer3.23/delta-filter \\\n        /opt/MUMmer3.23/show-coords \\\n        /bin && \\\n    cd /opt && \\\n    wget -q https://github.com/samtools/samtools/releases/download/1.3.1/samtools-1.3.1.tar.bz2 && \\\n    tar -xf samtools-1.3.1.tar.bz2 --no-same-owner --bzip2 && \\\n    cd samtools-1.3.1 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --quiet --prefix=/ && \\\n    make --quiet && \\\n    make --quiet install && \\\n    cd /opt && \\\n    rm -rf samtools-1.3.1* && \\\n    wget -q https://downloads.sourceforge.net/project/smalt/smalt-0.7.6-bin.tar.gz && \\\n    tar -xzf smalt-0.7.6-bin.tar.gz --no-same-owner && \\\n    ln -s /opt/smalt-0.7.6-bin/smalt_x86_64 /bin/smalt && rm samtools-1.3.1.tar.bz2 && rm -rf /var/lib/apt/lists/*;\n\n## Install dependencies for genetracks/drawSvg\nRUN apt-get install --no-install-recommends -q -y libcairo2-dev && rm -rf /var/lib/apt/lists/*;\n\nCOPY requirements.txt requirements-basespace.txt /opt/micall/\n\n## Python packages, plus trigger matplotlib to build its font cache\nWORKDIR /opt\nRUN pip install --no-cache-dir --upgrade pip && \\\n  pip install --no-cache-dir -r /opt/micall/requirements-basespace.txt && \\\n  python -c 'import matplotlib; matplotlib.use(\"Agg\"); import matplotlib.pyplot'\n\n## MiCall\nCOPY micall_docker.py micall_kive.py micall_kive_resistance.py version.tx[t] /opt/micall/\nCOPY micall/__init__.py micall/project* /opt/micall/micall/\n\nCOPY micall/blast_db/make_blast_db.py    /opt/micall/micall/blast_db/make_blast_db.py\nCOPY micall/core    /opt/micall/micall/core/\nCOPY micall/data    /opt/micall/micall/data/\nCOPY micall/drivers    /opt/micall/micall/drivers/\nCOPY micall/g2p     /opt/micall/micall/g2p/\nCOPY micall/resistance   /opt/micall/micall/resistance/\nCOPY micall/monitor /opt/micall/micall/monitor/\nCOPY micall/utils   /opt/micall/micall/utils/\n\nRUN python /opt/micall/micall/blast_db/make_blast_db.py\n\nWORKDIR /data\nENTRYPOINT [\"python\", \"/opt/micall/micall_docker.py\"]\n"
}