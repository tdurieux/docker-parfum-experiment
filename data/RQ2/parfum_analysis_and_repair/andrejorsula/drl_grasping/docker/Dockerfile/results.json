{
  "startTime": 1674255138455,
  "endTime": 1674255139877,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 123
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 161,
        "lineEnd": 161,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 162,
        "lineEnd": 162,
        "columnStart": 4,
        "columnEnd": 27
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG PARENT_IMAGE=nvidia/cudagl:11.4.2-devel-ubuntu20.04\nFROM ${PARENT_IMAGE}\n\n### Use bash by default\nSHELL [\"/bin/bash\", \"-c\"]\n\n### Set non-interactive installation\nARG DEBIAN_FRONTEND=noninteractive\n\n### Set working directory\nARG DRL_GRASPING_DIR=/root/drl_grasping\nENV DRL_GRASPING_DIR=${DRL_GRASPING_DIR}\nWORKDIR ${DRL_GRASPING_DIR}\n\n### Install essentials, toolchain, python, cudnn...\nARG PYTHON_VERSION=3\nRUN apt update && \\\n    apt install -yq --no-install-recommends \\\n        apt-utils \\\n        locales \\\n        locales-all \\\n        tzdata \\\n        software-properties-common \\\n        git \\\n        wget \\\n        curl \\\n        gnupg \\\n        lsb-release \\\n        build-essential \\\n        make \\\n        cmake \\\n        g++ \\\n        autoconf \\\n        automake \\\n        clang \\\n        ninja-build \\\n        python${PYTHON_VERSION} \\\n        python${PYTHON_VERSION}-dev \\\n        python${PYTHON_VERSION}-pip \\\n        python${PYTHON_VERSION}-wheel \\\n        python${PYTHON_VERSION}-numpy \\\n        python${PYTHON_VERSION}-tk \\\n        python${PYTHON_VERSION}-pybind11 \\\n        libpython${PYTHON_VERSION}-dev \\\n        libopenmpi-dev \\\n        zlib1g-dev \\\n        libcudnn8-dev \\\n        nano && \\\n    rm -rf /var/lib/apt/lists/*\n\n### Install ROS 2\nARG ROS2_DISTRO=rolling\nENV ROS2_DISTRO=${ROS2_DISTRO}\nRUN curl -f -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg && \\\n    echo \"deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(lsb_release -cs) main\" | tee /etc/apt/sources.list.d/ros2.list >/dev/null && \\\n    apt update && \\\n    apt install -yq --no-install-recommends \\\n        ros-${ROS2_DISTRO}-desktop \\\n        python${PYTHON_VERSION}-colcon-common-extensions \\\n        python${PYTHON_VERSION}-vcstool \\\n        python${PYTHON_VERSION}-argcomplete \\\n        python${PYTHON_VERSION}-rosdep && \\\n    rosdep init && rosdep update && \\\n    source /opt/ros/${ROS2_DISTRO}/setup.bash && \\\n    rm -rf /var/lib/apt/lists/*\n\n### Install MoveIt 2\nRUN apt update && \\\n    apt install -yq --no-install-recommends \\\n        ros-${ROS2_DISTRO}-moveit-common \\\n        ros-${ROS2_DISTRO}-moveit-core \\\n        ros-${ROS2_DISTRO}-moveit-kinematics \\\n        ros-${ROS2_DISTRO}-moveit-msgs \\\n        ros-${ROS2_DISTRO}-moveit-planners \\\n        ros-${ROS2_DISTRO}-moveit-planners-ompl \\\n        ros-${ROS2_DISTRO}-moveit-plugins \\\n        ros-${ROS2_DISTRO}-moveit-resources \\\n        ros-${ROS2_DISTRO}-moveit-ros \\\n        ros-${ROS2_DISTRO}-moveit-ros-occupancy-map-monitor \\\n        ros-${ROS2_DISTRO}-moveit-ros-perception \\\n        ros-${ROS2_DISTRO}-moveit-ros-planning \\\n        ros-${ROS2_DISTRO}-moveit-ros-planning-interface \\\n        ros-${ROS2_DISTRO}-moveit-runtime \\\n        ros-${ROS2_DISTRO}-moveit-servo \\\n        ros-${ROS2_DISTRO}-moveit-simple-controller-manager && \\\n    rm -rf /var/lib/apt/lists/*\n\n### Install Ignition\nARG IGNITION_VERSION=fortress\nENV IGNITION_VERSION=${IGNITION_VERSION}\nRUN wget https://packages.osrfoundation.org/gazebo.gpg -O /usr/share/keyrings/pkgs-osrf-archive-keyring.gpg && \\\n    echo \"deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/pkgs-osrf-archive-keyring.gpg] http://packages.osrfoundation.org/gazebo/ubuntu-stable $(lsb_release -cs) main\" | tee /etc/apt/sources.list.d/gazebo-stable.list > /dev/null && \\\n    apt update && \\\n    apt install -yq --no-install-recommends \\\n    ignition-${IGNITION_VERSION} && \\\n    rm -rf /var/lib/apt/lists/*\n\n### Build ROS 2 <-> IGN\nRUN mkdir -p ros_ign/src && \\\n    cd ros_ign && \\\n    git clone https://github.com/ignitionrobotics/ros_ign.git --depth 1 -b ros2 src && \\\n    apt update && \\\n    rosdep update && \\\n    rosdep install -r --from-paths . -yi --rosdistro ${ROS2_DISTRO} && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    source /opt/ros/${ROS2_DISTRO}/setup.bash && \\\n    colcon build --merge-install --symlink-install --cmake-args -DCMAKE_BUILD_TYPE=Release && \\\n    source install/local_setup.bash\nWORKDIR ${DRL_GRASPING_DIR}\n\n### Install Python requirements (Torch, SB3, ...)\nCOPY ./python_requirements.txt ./python_requirements.txt\nRUN pip install --no-cache-dir --upgrade pip && \\\n    pip install --no-cache-dir -r python_requirements.txt\n\n### Build O-CNN\nRUN git clone https://github.com/AndrejOrsula/O-CNN.git --depth 1 && \\\n    cd O-CNN/pytorch && \\\n    python${PYTHON_VERSION} setup.py install --build_octree && \\\n    cd ../octree/build && \\\n    cmake .. -DCMAKE_BUILD_TYPE=Release -DUSE_OPENMP=ON -DUSE_PYTHON=ON -DABI=ON -DKEY64=ON && \\\n    cmake --build . --config Release\nWORKDIR ${DRL_GRASPING_DIR}\n\n### Build iDynTree\nRUN apt update && \\\n    apt install -yq --no-install-recommends \\\n        coinor-libipopt-dev \\\n        libxml2-dev \\\n        qml-module-qt-labs-folderlistmodel \\\n        qml-module-qt-labs-settings \\\n        qml-module-qtmultimedia \\\n        qml-module-qtquick-controls \\\n        qml-module-qtquick-dialogs \\\n        qml-module-qtquick-window2 \\\n        qml-module-qtquick2 \\\n        qtbase5-dev \\\n        qtdeclarative5-dev \\\n        qtmultimedia5-dev \\\n        swig \\\n        libeigen3-dev && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    git clone https://github.com/robotology/idyntree --depth 1 && \\\n    mkdir idyntree/build && \\\n    cd idyntree/build && \\\n    cmake .. \\\n        -GNinja \\\n        -DCMAKE_BUILD_TYPE=Release \\\n        -DBUILD_SHARED_LIBS:BOOL=OFF \\\n        -DIDYNTREE_USES_PYTHON=True \\\n        -DIDYNTREE_USES_IPOPT:BOOL=ON && \\\n    cmake --build . --target install\nWORKDIR ${DRL_GRASPING_DIR}\n\n### Build Gym-Ignition\nRUN git clone https://github.com/AndrejOrsula/gym-ignition.git --depth 1 -b drl_grasping && \\\n    mkdir -p gym-ignition/build && \\\n    cd gym-ignition/build && \\\n    cmake .. -DCMAKE_BUILD_TYPE=Release && \\\n    cmake --build . && \\\n    cmake --build . --target install && \\\n    pip install --no-cache-dir .. && \\\n    pip install --no-cache-dir ../scenario\nWORKDIR ${DRL_GRASPING_DIR}\n\n### Main repository\nARG DRL_GRASPING_GIT_BRANCH=master\nARG DRL_GRASPING_DOCKER_VERSION=1.1.0\nRUN mkdir -p drl_grasping/src && \\\n    cd drl_grasping/src && \\\n    git clone https://github.com/AndrejOrsula/drl_grasping.git --recursive --depth 1 -b ${DRL_GRASPING_GIT_BRANCH} && \\\n    vcs import < drl_grasping/drl_grasping.repos && \\\n    cd .. && \\\n    apt update && \\\n    rosdep update && \\\n    rosdep install -r --from-paths . -yi --rosdistro ${ROS2_DISTRO} && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    source /opt/ros/${ROS2_DISTRO}/setup.bash && \\\n    colcon build --merge-install --symlink-install --cmake-args -DCMAKE_BUILD_TYPE=Release && \\\n    source install/local_setup.bash\nWORKDIR ${DRL_GRASPING_DIR}\n\n### Download and process default datasets (if desired)\nARG DISABLE_DEFAULT_DATASETS\nRUN if [[ -z \"${DISABLE_DEFAULT_DATASETS}\" ]] ; then \\\n        echo \"Downloading default datasets...\" && \\\n        source /opt/ros/${ROS2_DISTRO}/setup.bash && \\\n        source ${DRL_GRASPING_DIR}/drl_grasping/install/local_setup.bash && \\\n        export PATH=${DRL_GRASPING_DIR}/O-CNN/octree/build:${PATH} && \\\n        export PYTHONPATH=${DRL_GRASPING_DIR}/O-CNN/octree/build/python:${PYTHONPATH} && \\\n        ign fuel download -t model -u https://fuel.ignitionrobotics.org/1.0/AndrejOrsula/models/panda && \\\n        ign fuel download -t model -u https://fuel.ignitionrobotics.org/1.0/AndrejOrsula/models/ur5_rg2 && \\\n        ign fuel download -t model -u https://fuel.ignitionrobotics.org/1.0/AndrejOrsula/models/kinova_j2s7s300 && \\\n        ros2 run drl_grasping dataset_download_test.bash && \\\n        ros2 run drl_grasping process_collection.py && \\\n        git clone https://github.com/AndrejOrsula/pbr_textures.git --depth 1 -b 1k_test default_pbr_textures \\\n    ; else \\\n        echo \"Default datasets are disabled. Downloading skipped.\" \\\n    ; fi\n\n### Communicate within localhost only\nENV ROS_LOCALHOST_ONLY=1\n### Set domain ID for ROS2 in order to not interfere with host\nENV ROS_DOMAIN_ID=69\n\n### Set debug level\nENV DRL_GRASPING_DEBUG_LEVEL=ERROR\n\n### Add entrypoint sourcing the environment\nCOPY ./entrypoint.bash ./entrypoint.bash\n\n### Set entrypoint and default command\nENTRYPOINT [\"/bin/bash\", \"-c\", \"source ${DRL_GRASPING_DIR}/entrypoint.bash && \\\"$@\\\"\", \"-s\"]\nCMD [\"/bin/bash\"]\n"
}