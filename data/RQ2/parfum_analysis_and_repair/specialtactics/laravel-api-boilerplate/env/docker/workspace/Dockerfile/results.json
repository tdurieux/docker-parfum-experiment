{
  "startTime": 1674249007334,
  "endTime": 1674249008222,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 110,
        "lineEnd": 110,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 110,
        "lineEnd": 110,
        "columnStart": 4,
        "columnEnd": 44
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG PHP_VERSION=${PHP_VERSION}\n\nFROM php:${PHP_VERSION}-cli\n\nRUN echo \"nameserver 8.8.8.8\" >> /etc/resolv.conf\n\n# Install packages for required extensions\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends \\\n    libz-dev \\\n    libpq-dev \\\n    libssl-dev \\\n    libmcrypt-dev \\\n    libicu-dev \\\n    libxml2-dev \\\n    curl \\\n    git \\\n    zip \\\n    unzip \\\n    libzip-dev \\\n    vim \\\n    nano \\\n    wget \\\n    zsh \\\n    ssh-client \\\n    iputils-ping \\\n    libonig-dev \\\n  && rm -rf /var/lib/apt/lists/*\n\n# Install Laravel required extensions\nRUN docker-php-ext-install json && \\\n    docker-php-ext-install mbstring && \\\n    docker-php-ext-install xml && \\\n    docker-php-ext-install ctype && \\\n    docker-php-ext-install tokenizer && \\\n    docker-php-ext-install pdo_pgsql && \\\n    docker-php-ext-install opcache && \\\n    docker-php-ext-install zip && \\\n    docker-php-ext-configure intl && docker-php-ext-install intl && \\\n    docker-php-ext-install bcmath && \\\n    docker-php-ext-install sockets\n\n# Install required PECL extensions\nRUN pecl install \\\n    redis\n\n# Enable above\nRUN docker-php-ext-enable \\\n    redis\n\n###########################################################################\n# Laradock non-root user:\n###########################################################################\n\n# Start as root\nUSER root\n\n# Add a non-root user to prevent files being created with root permissions on host machine.\nARG PUID=1000\nENV PUID ${PUID}\nARG PGID=1000\nENV PGID ${PGID}\n\nRUN groupadd -g ${PGID} laradock && \\\n    useradd -u ${PUID} -g laradock -m laradock && \\\n    usermod -p \"*\" laradock\n\n###########################################################################\n# Set Timezone\n###########################################################################\n\nARG TZ=UTC\nENV TZ ${TZ}\n\nRUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone\n\n###########################################################################\n# User Aliases\n###########################################################################\n\nUSER root\n\nCOPY ./aliases.sh /root/aliases.sh\nCOPY ./aliases.sh /home/laradock/aliases.sh\n\nRUN sed -i 's/\\r//' /root/aliases.sh && \\\n    sed -i 's/\\r//' /home/laradock/aliases.sh && \\\n    chown laradock:laradock /home/laradock/aliases.sh && \\\n    echo \"\" >> ~/.bashrc && \\\n    echo \"# Load Custom Aliases\" >> ~/.bashrc && \\\n    echo \"source ~/aliases.sh\" >> ~/.bashrc && \\\n\techo \"\" >> ~/.bashrc\n\nUSER laradock\n\nRUN echo \"\" >> ~/.bashrc && \\\n    echo \"# Load Custom Aliases\" >> ~/.bashrc && \\\n    echo \"source ~/aliases.sh\" >> ~/.bashrc && \\\n\techo \"\" >> ~/.bashrc\n\n###########################################################################\n# Composer:\n###########################################################################\n\nUSER root\n\nARG COMPOSER_PROCESS_TIMEOUT=300\nENV COMPOSER_PROCESS_TIMEOUT ${COMPOSER_PROCESS_TIMEOUT}\n\n# Install composer and add its bin to the PATH.\nRUN curl -f -s https://getcomposer.org/installer | php && \\\n    echo \"export PATH=${PATH}:/var/www/vendor/bin\" >> ~/.bashrc && \\\n    mv composer.phar /usr/local/bin/composer\n\nUSER laradock\n\n# Export composer vendor path\nRUN echo \"\" >> ~/.bashrc && \\\n    echo 'export PATH=\"~/.composer/vendor/bin:$PATH\"' >> ~/.bashrc\n\n###########################################################################\n# Non-root user : PHPUnit path\n###########################################################################\n\n# add ./vendor/bin to non-root user's bashrc (needed for phpunit)\nUSER laradock\nRUN echo \"\" >> ~/.bashrc && \\\n    echo 'export PATH=\"/var/www/vendor/bin:$PATH\"' >> ~/.bashrc\n\n###########################################################################\n# Crontab\n###########################################################################\n\nUSER root\nCOPY ./crontab /etc/cron.d\nRUN chmod -R 644 /etc/cron.d\n\n#####################################\n# Oh My ZSH\n#####################################\n\nUSER root\nRUN wget https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh -O - | zsh || true \\\n    && chsh -s $(which zsh) $(whoami) \\\n    && chsh -s $(which zsh) laradock\nCOPY ./.zshrc /home/laradock/zshrc\n\nUSER laradock\nRUN wget https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh -O - | zsh || true \\\n    mv ~/zshrc ~/.zshrc\n\n###########################################################################\n# xDebug:\n###########################################################################\n\nUSER root\nARG PHP_XDEBUG_ENABLE=false\nARG PHP_XDEBUG_VERSION=\nRUN if [ ${PHP_XDEBUG_ENABLE} = true ]; then \\\n    # Install the xdebug extension\n    # when php is 7.3, xdebug version has to be xdebug-2.7.0\n    pecl install xdebug${PHP_XDEBUG_VERSION} && \\\n    docker-php-ext-enable xdebug \\\n;fi\n\n# Copy xdebug configuration for remote debugging\nCOPY ./xdebug.ini /usr/local/etc/php/conf.d/\n\nARG PHP_XDEBUG_REMOTE_CONNECT_BACK=false\nRUN if [ ${PHP_XDEBUG_REMOTE_CONNECT_BACK} = true ]; then \\\n    echo \"xdebug.remote_connect_back=1\" >> /usr/local/etc/php/conf.d/xdebug.ini \\\n;fi\n\n\n###########################################################################\n# Check PHP version:\n###########################################################################\n\nARG PHP_VERSION=${PHP_VERSION}\nRUN php -v | head -n 1 | grep -q \"PHP ${PHP_VERSION}.\"\n\n#\n#--------------------------------------------------------------------------\n# Final Touch\n#--------------------------------------------------------------------------\n#\n\nUSER root\n\nRUN mkdir /home/laradock/.config && chown laradock:laradock /home/laradock/.config\n\n# Clean up\nRUN apt-get clean && \\\n    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* && \\\n    rm /var/log/lastlog /var/log/faillog\n\n# Set default work directory\nWORKDIR /var/www\n"
}