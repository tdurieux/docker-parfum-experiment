{
  "startTime": 1674251136759,
  "endTime": 1674251137871,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 144
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 73,
        "lineEnd": 97,
        "columnStart": 4,
        "columnEnd": 19
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 73,
        "lineEnd": 97,
        "columnStart": 4,
        "columnEnd": 19
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:bullseye-slim as wforce_build\n\nRUN apt-get update && \\\n    apt-get dist-upgrade -y && \\\n    apt-get -y --no-install-recommends -f install \\\n               autoconf \\\n               automake \\\n               libboost-all-dev \\\n               libcurl4-openssl-dev \\\n               libgeoip-dev \\\n               libgetdns-dev \\\n               libhiredis-dev \\\n               libmaxminddb-dev \\\n               liblua5.1-0-dev \\\n               libluajit-5.1-dev \\\n               libprotobuf-dev \\\n               libssl-dev \\\n               libsodium-dev \\\n               libsystemd-dev \\\n               libyaml-cpp-dev \\\n               libjsoncpp-dev \\\n               libz-dev \\\n               uuid-dev \\\n               libtool \\\n               pkg-config \\\n               protobuf-compiler \\\n               pandoc \\\n               wget \\\n               docker \\\n               docker-compose \\\n               python3-pip \\\n               python3-venv \\\n               net-tools \\\n               clang \\\n               cmake && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /wforce/\nRUN mkdir /wforce/install\n\nRUN git clone https://github.com/jupp0r/prometheus-cpp.git\nRUN cd prometheus-cpp && git checkout tags/v0.9.0 -b v0.9.0\nRUN cd prometheus-cpp && git submodule init && git submodule update && mkdir _build && cd _build && cmake .. -DBUILD_SHARED_LIBS=off && make && make install\n\nRUN git clone https://github.com/drogonframework/drogon.git\nRUN cd drogon && git checkout tags/v1.7.1 -b v1.7.1\nRUN cd drogon && git submodule init && git submodule update && mkdir _build && cd _build && cmake .. -DBUILD_REDIS=OFF -DCMAKE_BUILD_TYPE=Release && make && make install\n\nADD CHANGELOG.md configure.ac ext LICENSE Makefile.am README.md NOTICE /wforce/\nCOPY m4/ /wforce/m4/\nCOPY ext/ /wforce/ext/\nCOPY docs/ /wforce/docs/\nCOPY wforce/ /wforce/wforce/\nCOPY common/ /wforce/common/\nCOPY trackalert/ /wforce/trackalert/\nCOPY report_api/ /wforce/report_api/\nCOPY docker/ /wforce/docker/\nCOPY elk/ /wforce/elk/\n\nRUN autoreconf -ivf\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix /usr --enable-trackalert --disable-systemd --disable-docker --with-luajit --sysconfdir=/etc/wforce CC=clang CXX=clang++\nRUN make clean\nRUN make install DESTDIR=/wforce/install\n\nFROM debian:bullseye-slim as wforce_image\n\nWORKDIR /wforce/\n\nCOPY --from=wforce_build /wforce/install/ /\n\nCOPY --from=wforce_build /wforce/report_api /wforce/report_api\n\nRUN apt-get update && \\\n    apt-get dist-upgrade -y && \\\n    apt-get -y --no-install-recommends -f install \\\n               libboost-date-time1.74.0 \\\n               libboost-regex1.74.0 \\\n               libboost-system1.74.0 \\\n               libboost-filesystem1.74.0 \\\n               libcurl4 \\\n               libgeoip1 \\\n               libgetdns10 \\\n               libhiredis0.14 \\\n               libluajit-5.1-2 \\\n               libmaxminddb0 \\\n               libreadline8 \\\n               libprotobuf23 \\\n               libssl1.1 \\\n               libsodium23 \\\n               libyaml-cpp0.6 \\\n               libjsoncpp-dev \\\n               libz-dev \\\n               uuid-dev \\\n               gnupg \\\n               python3 \\\n               python3-pip \\\n               python3-venv \\\n               python3-jinja2 \\\n               tini && rm -rf /var/lib/apt/lists/*;\n\nRUN groupadd -g 1000 wforce && \\\n    useradd --uid 1000 -N -M -r --gid 1000 wforce && \\\n    chmod -R 0775 /etc/wforce && \\\n    chgrp -R 1000 /etc/wforce\n\nCOPY docker/wforce_image/docker-entrypoint.sh /usr/bin/docker-entrypoint.sh\nCOPY docker/wforce_image/create_config.sh /usr/bin/create_config.sh\nCOPY docker/wforce_image/wforce.conf.j2 /etc/wforce\nCOPY docker/wforce_image/trackalert.conf.j2 /etc/wforce\n\nRUN chmod 0775 /usr/bin/docker-entrypoint.sh\nRUN chmod 0775 /usr/bin/create_config.sh\n\nARG VENV_DIR=/usr/share/wforce-report-api\nRUN python3 -m venv --symlinks $VENV_DIR\nRUN cd report_api && $VENV_DIR/bin/python $VENV_DIR/bin/pip install .\nRUN mkdir /etc/wforce-report-api\nRUN cp report_api/helpers/wforce-report-api-webserver /usr/bin/wforce-report-api-webserver && chmod 755 /usr/bin/wforce-report-api-webserver\nRUN cp report_api/instance/report.cfg /etc/wforce-report-api/wforce-report-api-instance.conf && chmod 644 /etc//wforce-report-api/wforce-report-api-instance.conf\nRUN cp report_api/helpers/wforce-report-api-docker.conf /etc/wforce-report-api/wforce-report-api-web.conf && chmod 755 /etc/wforce-report-api/wforce-report-api-web.conf\nRUN export python3_version=$(python3 -V | awk '{print $2}' | awk 'BEGIN{FS=\".\"};{print $1\".\"$2}') && sed -i -e s:\\<python_version\\>:$python3_version: /etc/wforce-report-api/wforce-report-api-web.conf\nRUN rm -rf /wforce/*\n\nARG build_date\nARG license\nARG git_revision\nARG version\n\nENV WFORCE_VERBOSE=0\nENV WFORCE_HTTP_PASSWORD=\nENV WFORCE_HTTP_PORT=8084\nENV WFORCE_LOGSTASH_URL=\nENV WFORCE_CONFIG_FILE=\nENV TRACKALERT=\nENV TRACKALERT_HTTP_PORT=8085\nENV TRACKALERT_HTTP_PASSWORD=\nENV TRACKALERT_CONFIG_FILE=\n\nLABEL org.label-schema.build-date=\"${build_date}\" \\\n  org.label-schema.license=\"${license}\" \\\n  org.label-schema.name=\"Weakforced\" \\\n  org.label-schema.schema-version=\"1.0\" \\\n  org.label-schema.url=\"https://powerdns.github.io/weakforced\" \\\n  org.label-schema.usage=\"https://powerdns.github.io/weakforced\" \\\n  org.label-schema.vcs-ref=\"${git_revision}\" \\\n  org.label-schema.vcs-url=\"https://github.com/PowerDNS/weakforced\" \\\n  org.label-schema.vendor=\"PowerDNS\" \\\n  org.label-schema.version=\"${version}\" \\\n  org.opencontainers.image.created=\"${build_date}\" \\\n  org.opencontainers.image.documentation=\"https://powerdns.github.io/weakforced\" \\\n  org.opencontainers.image.licenses=\"${license}\" \\\n  org.opencontainers.image.revision=\"${git_revision}\" \\\n  org.opencontainers.image.source=\"https://github.com/PowerDNS/weakforced\" \\\n  org.opencontainers.image.title=\"Weakforced\" \\\n  org.opencontainers.image.url=\"https://powerdns.github.io/weakforced\" \\\n  org.opencontainers.image.vendor=\"PowerDNS\" \\\n  org.opencontainers.image.version=\"${version}\"\n\nUSER wforce:wforce\n\nEXPOSE 8084\n\nENTRYPOINT [\"/usr/bin/tini\", \"-v\", \"--\", \"/usr/bin/docker-entrypoint.sh\"]\n# Dummy overridable parameter parsed by entrypoint\nCMD [\"wfwrapper\"]\n"
}