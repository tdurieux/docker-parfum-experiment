{
  "startTime": 1674253553952,
  "endTime": 1674253555355,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 20
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:focal as wforce_regression\n\nENV DEBIAN_FRONTEND noninteractive\n\nRUN apt-get update && \\\n    apt-get dist-upgrade -y && \\\n    apt-get -y --no-install-recommends -f install \\\n               autoconf \\\n               automake \\\n               build-essential \\\n               libboost-all-dev \\\n               libcurl4-openssl-dev \\\n               libgeoip-dev \\\n               libgetdns-dev \\\n               libhiredis-dev \\\n               libmaxminddb-dev \\\n               liblua5.1-0-dev \\\n               libluajit-5.1-dev \\\n               libprotobuf-dev \\\n               libssl-dev \\\n               libsodium-dev \\\n               libsystemd-dev \\\n               libyaml-cpp-dev \\\n               libtool \\\n               libjsoncpp-dev \\\n               libz-dev \\\n               uuid-dev \\\n               pkg-config \\\n               protobuf-compiler \\\n               pandoc \\\n               wget \\\n               nginx \\\n               docker \\\n               docker-compose \\\n               python3-pip \\\n               python3-venv \\\n               prometheus \\\n               geoip-bin \\\n               geoip-database \\\n               geoipupdate \\\n               net-tools \\\n               clang \\\n               cmake && rm -rf /var/lib/apt/lists/*;\n\n# Disable Ipv6 for redis\nARG MAXMIND_LICENSE_KEY\nRUN wget -O GeoLite2-City.mmdb.tar.gz \"https://download.maxmind.com/app/geoip_download?edition_id=GeoLite2-City&license_key=${MAXMIND_LICENSE_KEY}&suffix=tar.gz\" || true\n RUN wget -O GeoLite2-Country.mmdb.tar.gz \"https://download.maxmind.com/app/geoip_download?edition_id=GeoLite2-Country&license_key=${MAXMIND_LICENSE_KEY}&suffix=tar.gz\" || true\nRUN wget -O GeoLite2-ASN.mmdb.tar.gz \"https://download.maxmind.com/app/geoip_download?edition_id=GeoLite2-ASN&license_key=${MAXMIND_LICENSE_KEY}&suffix=tar.gz\" || true\nRUN gunzip GeoLite2-*.mmdb.tar.gz || true\nRUN tar xvf GeoLite2-City.mmdb.tar || true && rm GeoLite2-City.mmdb.tar\nRUN tar xvf GeoLite2-Country.mmdb.tar || true && rm GeoLite2-Country.mmdb.tar\nRUN tar xvf GeoLite2-ASN.mmdb.tar || true && rm GeoLite2-ASN.mmdb.tar\nRUN mv GeoLite2*/GeoLite2-*.mmdb /usr/share/GeoIP || true\n\nRUN pip3 install --no-cache-dir bottle virtualenv\n\nWORKDIR /wforce/\nRUN mkdir /sdist\n\nRUN git clone https://github.com/jupp0r/prometheus-cpp.git\nRUN cd prometheus-cpp && git checkout tags/v0.9.0 -b v0.9.0\nRUN cd prometheus-cpp && git submodule init && git submodule update && mkdir _build && cd _build && cmake .. -DBUILD_SHARED_LIBS=off && make && make install\n\nRUN git clone https://github.com/drogonframework/drogon.git\nRUN cd drogon && git checkout tags/v1.7.1 -b v1.7.1\nRUN cd drogon && git submodule init && git submodule update && mkdir _build && cd _build && cmake .. -DBUILD_REDIS=OFF && make && make install\n\nADD CHANGELOG.md configure.ac ext LICENSE Makefile.am README.md NOTICE /wforce/\nCOPY m4/ /wforce/m4/\nCOPY ext/ /wforce/ext/\nCOPY docs/ /wforce/docs/\nCOPY regression-tests/ /wforce/regression-tests/\nCOPY wforce/ /wforce/wforce/\nCOPY common/ /wforce/common/\nCOPY trackalert/ /wforce/trackalert/\nCOPY report_api/ /wforce/report_api/\nCOPY docker/ /wforce/docker/\nCOPY elk/ /wforce/elk/\n\nRUN rm -rf regression-tests/.venv \n\nCMD [\"sleep\", \"infinity\"]\n"
}