{
  "startTime": 1674252209570,
  "endTime": 1674252210523,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 15,
        "columnEnd": 160
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 15,
        "columnEnd": 160
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# This builds the source distributions for all components\n\n# =========================================================================\n# Deliberately using alpine with incompatible libc to ensure we are\n# not sneaking in any binaries, and because it's light and up to date.\nFROM alpine:3.13 as sdist\nARG BUILDER_CACHE_BUSTER=\nRUN apk add --no-cache tar\nARG BUILDER_VERSION\nARG SOURCE_DATE_EPOCH\n\nRUN echo \"::: SOURCE_DATE_EPOCH=$SOURCE_DATE_EPOCH\"; if [ \"$SOURCE_DATE_EPOCH\" -lt \"1000\" ]; then echo \"::: INVALID SOURCE_DATE_EPOCH\" ; exit 99 ; fi\n\n# Copying minimal set of files to avoid cache invalidation\nRUN mkdir /build\nWORKDIR /build\nCOPY src/ src/\nRUN mkdir /sdist\n\n# Test if the -B option works\nARG MYCOOLARG\nRUN test \"${MYCOOLARG}\" = 'iLikeTests'\n\n# Build module A\n@IF [ ! -z \"$M_all$M_a\" ]\nRUN cd src/ && tar --clamp-mtime --mtime=\"@$SOURCE_DATE_EPOCH\" -cvzf /sdist/demo-a-$BUILDER_VERSION.tar.gz --transform \"s,^,demo-a-$BUILDER_VERSION/,\" demo-a.sh && rm /sdist/demo-a-$BUILDER_VERSION.tar.gz\n@ENDIF\n\n# Build module B\n@IF [ ! -z \"$M_all$M_a\" ]\nRUN cd src/ && tar --clamp-mtime --mtime=\"@$SOURCE_DATE_EPOCH\" -cvzf /sdist/demo-b-$BUILDER_VERSION.tar.gz --transform \"s,^,demo-b-$BUILDER_VERSION/,\" demo-b.sh && rm /sdist/demo-b-$BUILDER_VERSION.tar.gz\n@ENDIF\n\n# Show contents for build debugging\nRUN ls -l /sdist/*\n\n"
}