diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/powerdns/pdns/Dockerfile-dnsdist b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/powerdns/pdns/Dockerfile-dnsdist/repaired.Dockerfile
index 468c039..4219c9c 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/powerdns/pdns/Dockerfile-dnsdist
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/powerdns/pdns/Dockerfile-dnsdist/repaired.Dockerfile
@@ -9,7 +9,7 @@ ENV NO_LUA_JIT="s390x arm64"
 RUN apt-get update && apt-get -y dist-upgrade && apt-get clean
 
 # devscripts gives us mk-build-deps (and a lot of other stuff)
-RUN apt-get update && apt-get -y dist-upgrade && apt-get install -y  --no-install-recommends devscripts equivs git && apt-get clean
+RUN apt-get update && apt-get -y dist-upgrade && apt-get install -y  --no-install-recommends devscripts equivs git && apt-get clean && rm -rf /var/lib/apt/lists/*;
 
 COPY builder-support /source/builder-support
 
@@ -42,7 +42,7 @@ RUN if [ "${DOCKER_FAKE_RELEASE}" = "YES" ]; then \
 
 RUN mkdir /build && \
     LUAVER=$([ -z "${NO_LUA_JIT##*$(dpkg --print-architecture)*}" ] && echo 'lua5.3' || echo 'luajit') && \
-    ./configure \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
       --with-lua=${LUAVER} \
       LDFLAGS=-rdynamic \
       --sysconfdir=/etc/dnsdist \
@@ -72,14 +72,14 @@ RUN apt-get update && apt-get -y dist-upgrade && apt-get clean
 # - python3-atomicwrites (for backend management)
 # - tini (for signal management)
 # - ca-certificates (for verifying downstream DoH/DoT certificates)
-RUN apt-get install -y python3 python3-jinja2 python3-atomicwrites tini libcap2-bin ca-certificates && apt-get clean
+RUN apt-get install --no-install-recommends -y python3 python3-jinja2 python3-atomicwrites tini libcap2-bin ca-certificates && apt-get clean && rm -rf /var/lib/apt/lists/*;
 
 # Output from builder
 COPY --from=builder /build /
 RUN chmod 1777 /tmp # FIXME: better not use /build/tmp for equivs at all
 
 # Ensure dependencies are present
-RUN apt-get install -y /tmp/equivs-dummy_1.0_all.deb && apt-get clean
+RUN apt-get install --no-install-recommends -y /tmp/equivs-dummy_1.0_all.deb && apt-get clean && rm -rf /var/lib/apt/lists/*;
 
 # Config
 RUN mkdir -p /etc/dnsdist/conf.d /etc/dnsdist/templates.d