{
  "startTime": 1674217082503,
  "endTime": 1674217083194,
  "originalSmells": [
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 28,
        "columnEnd": 77
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 28,
        "columnEnd": 76
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# First do the source builds\n@INCLUDE Dockerfile.target.sdist\n\n# This defines the distribution base layer\n# Put only the bare minimum of common commands here, without dev tools\n@IF [ ${BUILDER_TARGET} = centos-7 -o ${BUILDER_TARGET} = el-7 ]\nFROM centos:7 as dist-base\n@ENDIF\n@IF [ ${BUILDER_TARGET} = centos-7-amd64 -o ${BUILDER_TARGET} = el-7-amd64]\nFROM amd64/centos:7 as dist-base\n@ENDIF\n\nARG BUILDER_CACHE_BUSTER=\nRUN touch /var/lib/rpm/* && yum install -y epel-release centos-release-scl-rh && rm -rf /var/cache/yum\nRUN touch /var/lib/rpm/* && yum install -y --nogpgcheck devtoolset-8-gcc-c++ && rm -rf /var/cache/yum\n\n# Do the actual rpm build\n@INCLUDE Dockerfile.rpmbuild\n\n# Do a test install and verify\n# Can be skipped with skiptests=1 in the environment\n# @EXEC [ \"$skiptests\" = \"\" ] && include Dockerfile.rpmtest\n"
}