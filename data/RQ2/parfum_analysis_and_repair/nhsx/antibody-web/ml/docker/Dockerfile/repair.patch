diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/nhsx/antibody-web/ml/docker/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/nhsx/antibody-web/ml/docker/Dockerfile/repaired.Dockerfile
index 6832aec..2f342d3 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/nhsx/antibody-web/ml/docker/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/nhsx/antibody-web/ml/docker/Dockerfile/repaired.Dockerfile
@@ -1,7 +1,7 @@
-FROM ubuntu:18.04
-
-ENV PYTHONUNBUFFERED TRUE
-
+FROM ubuntu:18.04
+
+ENV PYTHONUNBUFFERED TRUE
+
 RUN apt-get update && \
     DEBIAN_FRONTEND=noninteractive apt-get install --no-install-recommends -y \
     fakeroot \
@@ -17,38 +17,38 @@ RUN apt-get update && \
     libxrender-dev \
     libglib2.0.0 \
     && rm -rf /var/lib/apt/lists/* \
-    && cd /tmp \
-    && curl -O https://bootstrap.pypa.io/get-pip.py \
-    && python3 get-pip.py
-
-RUN update-alternatives --install /usr/bin/python python /usr/bin/python3 1
-RUN update-alternatives --install /usr/local/bin/pip pip /usr/local/bin/pip3 1
-
-RUN pip install --no-cache-dir psutil
-RUN pip install --no-cache-dir torch
-RUN pip install --no-cache-dir torchvision
-RUN pip install --no-cache-dir torchserve
-RUN pip install --no-cache-dir opencv-python   
-
-RUN pip install --no-cache-dir torchserve torch-model-archiver
-
+    && cd /tmp \
+    && curl -f -O https://bootstrap.pypa.io/get-pip.py \
+    && python3 get-pip.py
+
+RUN update-alternatives --install /usr/bin/python python /usr/bin/python3 1
+RUN update-alternatives --install /usr/local/bin/pip pip /usr/local/bin/pip3 1
+
+RUN pip install --no-cache-dir psutil
+RUN pip install --no-cache-dir torch
+RUN pip install --no-cache-dir torchvision
+RUN pip install --no-cache-dir torchserve
+RUN pip install --no-cache-dir opencv-python  
+
+RUN pip install --no-cache-dir torchserve torch-model-archiver
+
 RUN useradd -m model-server \
-    && mkdir -p /home/model-server/tmp
-
-COPY dockerd-entrypoint.sh /usr/local/bin/dockerd-entrypoint.sh
-
+    && mkdir -p /home/model-server/tmp
+
+COPY dockerd-entrypoint.sh /usr/local/bin/dockerd-entrypoint.sh
+
 RUN chmod +x /usr/local/bin/dockerd-entrypoint.sh \
-    && chown -R model-server /home/model-server
-
-COPY config.properties /home/model-server/config.properties
-RUN mkdir /home/model-server/model-store && chown -R model-server /home/model-server/model-store
-ADD models/* /home/model-server/model-store/
-RUN chown -R model-server /home/model-server/model-store
-
-EXPOSE 8080 8081
-
-USER model-server
-WORKDIR /home/model-server
-ENV TEMP=/home/model-server/tmp
-ENTRYPOINT ["/usr/local/bin/dockerd-entrypoint.sh"]
-CMD ["serve"]
+    && chown -R model-server /home/model-server
+
+COPY config.properties /home/model-server/config.properties
+RUN mkdir /home/model-server/model-store && chown -R model-server /home/model-server/model-store
+ADD models/* /home/model-server/model-store/
+RUN chown -R model-server /home/model-server/model-store
+
+EXPOSE 8080 8081
+
+USER model-server
+WORKDIR /home/model-server
+ENV TEMP=/home/model-server/tmp
+ENTRYPOINT ["/usr/local/bin/dockerd-entrypoint.sh"]
+CMD ["serve"]