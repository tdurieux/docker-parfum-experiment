{
  "startTime": 1674253391362,
  "endTime": 1674253393988,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 8,
        "columnEnd": 37
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 22,
        "columnEnd": 67
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 15,
        "columnStart": 22,
        "columnEnd": 20
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 22,
        "columnEnd": 67
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 15,
        "columnStart": 22,
        "columnEnd": 20
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:trusty\n\nARG wdir=\"/workdir\"\nWORKDIR $wdir\n\nARG cmake_ver=\"cmake-3.8.0-Linux-x86_64\"\nARG make_core=4\nENV PATH=\"${wdir}/${cmake_ver}/bin:${PATH}\"\nENV PATH=\"/opt/qt58/bin:${PATH}\"\n\nRUN apt-get update && apt-get install --no-install-recommends -y software-properties-common && rm -rf /var/lib/apt/lists/*;\n#RUN add-apt-repository ppa:ubuntu-toolchain-r/test -y && \\\nRUN add-apt-repository ppa:beineri/opt-qt58-trusty -y\nRUN apt-get update && apt-get install --no-install-recommends -y mesa-common-dev clang-3.5 wget curl make \\\n        qt58base qt58serialport qt58quickcontrols2 \\\n        git libfuse2 && rm -rf /var/lib/apt/lists/*;\nRUN wget -nv \"https://cmake.org/files/v3.8/${cmake_ver}.tar.gz\" && \\\n        tar -xf \"${cmake_ver}.tar.gz\" && rm \"${cmake_ver}.tar.gz\"\n\n# use git_rev to make sure the last to layers are run again if there are new\n# commits\nARG git_rev=\"HEAD\"\nARG git_branch=\"master\"\n\nRUN git clone -b $git_branch \"https://github.com/crapp/labpowerqt.git\" && \\\n        cd labpowerqt && \\\n        git checkout $git_rev && \\\n        mkdir -pv build && cd build && \\\n        cmake -DCMAKE_BUILD_TYPE=Release \\\n          -DCMAKE_C_COMPILER=clang-3.5 \\\n          -DCMAKE_CXX_COMPILER=clang++-3.5 \\\n          -DCMAKE_PREFIX_PATH=/opt/qt58 \\\n          -DCMAKE_INSTALL_PREFIX=/usr ../ && \\\n        make -j $make_core && \\\n        make DESTDIR=appdir install\n\nRUN wget -nv \"https://github.com/probonopd/linuxdeployqt/releases/download/continuous/linuxdeployqt-continuous-x86_64.AppImage\" && \\\n        cd labpowerqt/build && \\\n        #find \\( -name \"moc_*\" -or -name \"*.o\" -or -name \"qrc_*\" -or -name \"Makefile*\" -or -name \"*.a\" \\) -exec rm -v {} \\; && \\\n        mv -v ../../linuxdeployqt-continuous-x86_64.AppImage ./linuxdeployqt && \\\n        chmod a+x linuxdeployqt\n\nCMD /bin/bash\n\n####\n# HOW TO USE\n# run docker container interactively and allow access to fuse device\n# docker run -it --cap-add SYS_ADMIN --device /dev/fuse trustylab\n# enter labpowerqt build directory and run linuxdeployqt\n#\n# source /opt/qt5*/bin/qt5*-env.sh\n# ./linuxdeployqt appdir/usr/share/applications/*.desktop -bundle-non-qt-libs && \\\n# ./linuxdeployqt appdir/usr/share/applications/*.desktop -appimage\n#\n# use docker cp to copy the generated appimage. the appimage has the same\n# architecture than the host system.\n#\n"
}