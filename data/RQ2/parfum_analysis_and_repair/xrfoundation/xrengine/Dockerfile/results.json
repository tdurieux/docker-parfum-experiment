{
  "startTime": 1674251624415,
  "endTime": 1674251628050,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 102
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 102
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 102
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# not slim because we need github depedencies\nFROM node:16-buster-slim\n\nRUN apt-get update && apt-get install --no-install-recommends -y build-essential meson python3-testresources python3-venv python3-pip git procps && rm -rf /var/lib/apt/lists/*;\n# Create app directory\nWORKDIR /app\n\nRUN npm install -g npm lerna cross-env rimraf --loglevel notice && npm cache clean --force;\n\n# to make use of caching, copy only package files and install dependencies\nCOPY package.json .\nCOPY packages/analytics/package.json ./packages/analytics/\nCOPY packages/client/package.json ./packages/client/\nCOPY packages/client-core/package.json ./packages/client-core/\nCOPY packages/common/package.json ./packages/common/\nCOPY packages/editor/package.json ./packages/editor/\nCOPY packages/engine/package.json ./packages/engine/\nCOPY packages/instanceserver/package.json ./packages/instanceserver/\nCOPY packages/hyperflux/package.json ./packages/hyperflux/\nCOPY packages/engine/package.json ./packages/engine/\nCOPY packages/matchmaking/package.json ./packages/matchmaking/\nCOPY packages/server/package.json ./packages/server/\nCOPY packages/server-core/package.json ./packages/server-core/\nCOPY packages/projects/package.json ./packages/projects/\nCOPY project-package-jsons ./\n\n#RUN  npm ci --verbose  # we should make lockfile or shrinkwrap then use npm ci for predicatble builds\n\nARG NODE_ENV\nRUN npm install --loglevel notice --legacy-peer-deps && npm cache clean --force;\n\nCOPY . .\n\n# copy then compile the code\n\nARG MYSQL_HOST\nARG MYSQL_PORT\nARG MYSQL_USER\nARG MYSQL_PASSWORD\nARG MYSQL_DATABASE\nARG VITE_CLIENT_HOST\nARG VITE_CLIENT_PORT\nARG VITE_SERVER_HOST\nARG VITE_SERVER_PORT\nARG VITE_MEDIATOR_SERVER\nARG VITE_INSTANCESERVER_HOST\nARG VITE_INSTANCESERVER_PORT\nARG VITE_LOCAL_BUILD\nENV MYSQL_HOST=$MYSQL_HOST\nENV MYSQL_PORT=$MYSQL_PORT\nENV MYSQL_USER=$MYSQL_USER\nENV MYSQL_PASSWORD=$MYSQL_PASSWORD\nENV MYSQL_DATABASE=$MYSQL_DATABASE\nENV VITE_CLIENT_HOST=$VITE_CLIENT_HOST\nENV VITE_CLIENT_PORT=$VITE_CLIENT_PORT\nENV VITE_SERVER_HOST=$VITE_SERVER_HOST\nENV VITE_SERVER_PORT=$VITE_SERVER_PORT\nENV VITE_MEDIATOR_SERVER=$VITE_MEDIATOR_SERVER\nENV VITE_INSTANCESERVER_HOST=$VITE_INSTANCESERVER_HOST\nENV VITE_INSTANCESERVER_PORT=$VITE_INSTANCESERVER_PORT\nENV VITE_LOCAL_BUILD=$VITE_LOCAL_BUILD\n\nARG CACHE_DATE\nRUN npm run check-db-exists\nRUN npm run build-client\n\nENV APP_ENV=production\n\nCMD [\"scripts/start-server.sh\"]\n"
}