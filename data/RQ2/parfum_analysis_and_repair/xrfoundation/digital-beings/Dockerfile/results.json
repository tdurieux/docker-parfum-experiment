{
  "startTime": 1674251126240,
  "endTime": 1674251127144,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 89
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 7,
        "columnEnd": 30
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 7,
        "columnEnd": 30
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:22.04\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y \\\n    python3.8 python3-pip python3.8-dev && rm -rf /var/lib/apt/lists/*;\n\n# install node 16 and npm using nvm\n# replace shell with bash so we can source files\nRUN rm /bin/sh && ln -s /bin/bash /bin/sh\n\n# update the repository sources list\n# and install dependencies\nRUN apt-get update \\\n    && apt-get install --no-install-recommends -y curl \\\n    && apt-get -y autoclean && rm -rf /var/lib/apt/lists/*;\n\n# nvm environment variables\nENV NVM_DIR /usr/local/nvm\nENV NODE_VERSION 16.11.1\n\n# install nvm\n# https://github.com/creationix/nvm#install-script\nRUN curl -f --silent -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.2/install.sh | bash\n\n# install node and npm LTS\nRUN source $NVM_DIR/nvm.sh \\\n    && nvm install $NODE_VERSION \\\n    && nvm alias default $NODE_VERSION \\\n    && nvm use default \\\n    && nvm install 16.4.2 \\\n    && nvm use 16.4.2\n\n# add node and npm to path so the commands are available\nENV NODE_PATH $NVM_DIR/v$NODE_VERSION/lib/node_modules\nENV PATH $NVM_DIR/versions/node/v$NODE_VERSION/bin:$PATH\n\nRUN npm install --global yarn && npm cache clean --force;\n\nRUN yarn add global \"@types/node\"\nRUN yarn add global \"typescript\"\nRUN yarn add global ts-node\n\n\n# Create app directory\nWORKDIR /DigitalBeing\n\n# to make use of caching, copy only package and pip requirement files and install dependencies\nCOPY package.json .\nCOPY requirements.txt .\nCOPY editor.sh .\n\nRUN pip install -r requirements.txt --no-cache-dir\n\nCMD [\"sh\", \"./bootstrap.sh\"]\n"
}