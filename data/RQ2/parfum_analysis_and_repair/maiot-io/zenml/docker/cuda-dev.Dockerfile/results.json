{
  "startTime": 1674251230698,
  "endTime": 1674251232057,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 27,
        "columnStart": 2,
        "columnEnd": 5
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG TENSORFLOW_VERSION=2.6.1\nFROM tensorflow/tensorflow:${TENSORFLOW_VERSION}-gpu\nARG TENSORFLOW_VERSION\n\nWORKDIR /zenml\n\n# python\nENV PYTHONFAULTHANDLER=1 \\\n    PYTHONUNBUFFERED=1 \\\n    PYTHONHASHSEED=random \\\n    PIP_NO_CACHE_DIR=off \\\n    PIP_DISABLE_PIP_VERSION_CHECK=on \\\n    POETRY_HOME=/root/.local\n\nRUN apt-get update && \\\n  apt-get install --no-install-recommends -q -y \\\n  build-essential \\\n  ca-certificates \\\n  libsnappy-dev \\\n  protobuf-compiler \\\n  libprotobuf-dev \\\n  python3 \\\n  python3-dev \\\n  python3-venv \\\n  python3-pip \\\n  curl \\\n  unzip \\\n  git && \\\n  apt-get autoclean && \\\n  apt-get autoremove --purge && rm -rf /var/lib/apt/lists/*;\n\nRUN curl -f -sSL https://install.python-poetry.org | python\n\n# copy project requirement files here to ensure they will be cached.\nCOPY pyproject.toml /zenml\n\nENV ZENML_DEBUG=true\nENV ZENML_ANALYTICS_OPT_IN=false\nENV VIRTUAL_ENV=/opt/venv\nENV PATH=\"$VIRTUAL_ENV/bin:$POETRY_HOME/bin:$PATH\"\nRUN python -m venv $VIRTUAL_ENV\n\nRUN pip install --no-cache-dir --upgrade --pre pip\n\n# install dependencies but don't install zenml yet\n# this improves caching as the dependencies don't have to be reinstalled every time a src file changes\nRUN poetry install --no-root\n\nCOPY . /zenml\n\n# install zenml\nRUN poetry update && poetry install\n"
}