{
  "startTime": 1674253448168,
  "endTime": 1674253449187,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 7,
        "columnEnd": 108
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 7,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 7,
        "columnEnd": 66
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 37,
        "columnStart": 7,
        "columnEnd": 18
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 7,
        "columnEnd": 35
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 7,
        "columnEnd": 66
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 37,
        "columnStart": 7,
        "columnEnd": 18
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 7,
        "columnEnd": 35
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:focal\nSHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\n\nENV TZ=American/Chicago\n\nRUN ln -fs /usr/share/zoneinfo/America/Chicago /etc/localtime\nRUN apt-get update          \\\n    && apt-get upgrade --yes \\\n    && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install --yes tzdata && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get update \\\n    && apt-get install --no-install-recommends --yes \\\n        bison \\\n        clang-10 \\\n        cmake \\\n        curl \\\n        debhelper \\\n        flex \\\n        gcc \\\n        git \\\n        libboost-test-dev \\\n        libgmp-dev \\\n        libjemalloc-dev \\\n        libmpfr-dev \\\n        libyaml-dev \\\n        libz3-dev \\\n        lld-10 \\\n        llvm-10-tools \\\n        maven \\\n        openjdk-11-jdk \\\n        parallel \\\n        pkg-config \\\n        python \\\n        python3 \\\n        python3-graphviz \\\n        texlive-xetex \\\n        wget \\\n        zlib1g-dev && rm -rf /var/lib/apt/lists/*;\n\nRUN    git clone 'https://github.com/z3prover/z3' --branch=z3-4.8.15 \\\n    && cd z3                                                         \\\n    && python scripts/mk_make.py                                     \\\n    && cd build                                                      \\\n    && make -j8                                                      \\\n    && make install                                                  \\\n    && cd ../..                                                      \\\n    && rm -rf z3\n\nRUN curl -f -sL https://deb.nodesource.com/setup_14.x | bash -\nRUN apt-get update               \\\n    && apt-get upgrade --yes \\\n    && apt-get install --no-install-recommends --yes nodejs && rm -rf /var/lib/apt/lists/*;\n\nRUN wget -nv -O- https://download.calibre-ebook.com/linux-installer.sh | sh /dev/stdin version=5.42.0\nRUN wget https://github.com/jgm/pandoc/releases/download/2.18/pandoc-2.18-1-amd64.deb -O /tmp/pandoc.deb && dpkg -i /tmp/pandoc.deb\n\nRUN curl -f -sSL https://get.haskellstack.org/ | sh\n\nARG USER_ID=1000\nARG GROUP_ID=1000\nRUN    groupadd -g $GROUP_ID user                     \\\n    && useradd -m -u $USER_ID -s /bin/sh -g user user\n\nUSER user:user\nWORKDIR /home/user\n\nRUN curl -f -L https://github.com/github/hub/releases/download/v2.14.0/hub-linux-amd64-2.14.0.tgz -o hub.tgz \\\n    && tar xzf hub.tgz && rm hub.tgz\n\nENV LD_LIBRARY_PATH=/usr/local/lib\nENV PATH=/home/user/hub-linux-amd64-2.14.0/bin:$PATH\n\nENV LC_ALL=C.UTF-8\nADD --chown=user:user haskell-backend/src/main/native/haskell-backend/stack.yaml      .tmp-haskell/\nADD --chown=user:user haskell-backend/src/main/native/haskell-backend/kore/kore.cabal .tmp-haskell/kore/\nRUN cd .tmp-haskell && stack build --only-snapshot\n\nADD pom.xml                                                    .tmp-maven/\nADD ktree/pom.xml                                              .tmp-maven/ktree/\nADD llvm-backend/pom.xml                                       .tmp-maven/llvm-backend/\nADD llvm-backend/src/main/native/llvm-backend/matching/pom.xml .tmp-maven/llvm-backend/src/main/native/llvm-backend/matching/\nADD haskell-backend/pom.xml                                    .tmp-maven/haskell-backend/\nADD kernel/pom.xml                                             .tmp-maven/kernel/\nADD java-backend/pom.xml                                       .tmp-maven/java-backend/\nADD k-distribution/pom.xml                                     .tmp-maven/k-distribution/\nADD kore/pom.xml                                               .tmp-maven/kore/\nRUN    cd .tmp-maven                          \\\n    && mvn --batch-mode dependency:go-offline\n\nRUN    git config --global user.email 'admin@runtimeverification.com' \\\n    && git config --global user.name  'RV Jenkins'                    \\\n    && mkdir -p ~/.ssh                                                \\\n    && echo 'host github.com'                       > ~/.ssh/config   \\\n    && echo '    hostname github.com'              >> ~/.ssh/config   \\\n    && echo '    user git'                         >> ~/.ssh/config   \\\n    && echo '    identityagent SSH_AUTH_SOCK'      >> ~/.ssh/config   \\\n    && echo '    stricthostkeychecking accept-new' >> ~/.ssh/config   \\\n    && chmod go-rwx -R ~/.ssh\n"
}