diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/excites/geokey/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/excites/geokey/Dockerfile/repaired.Dockerfile
index 612fa9f..2352df2 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/excites/geokey/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/excites/geokey/Dockerfile/repaired.Dockerfile
@@ -1,7 +1,7 @@
 FROM ubuntu:14.04
 
 RUN apt-get update && \
-    apt-get install -y \
+    apt-get install --no-install-recommends -y \
         binutils \
         g++ \
         libav-tools \
@@ -13,12 +13,12 @@ RUN apt-get update && \
         libmagickwand-dev \
         curl \
         wget && \
-    apt-get clean
+    apt-get clean && rm -rf /var/lib/apt/lists/*;
 
 RUN sed -i 's/\(<policy domain="coder" rights=\)"none" \(pattern="PDF" \/>\)/\1"read|write"\2/g' /etc/ImageMagick/policy.xml
 
 RUN python --version
-RUN curl "https://bootstrap.pypa.io/get-pip.py" -o "get-pip.py" && \
+RUN curl -f "https://bootstrap.pypa.io/get-pip.py" -o "get-pip.py" && \
     python get-pip.py && \
     rm get-pip.py && \
     pip --version
@@ -26,11 +26,11 @@ RUN curl "https://bootstrap.pypa.io/get-pip.py" -o "get-pip.py" && \
 RUN gdal-config --version && \
     export C_INCLUDE_PATH=/usr/include/gdal && \
     export CPLUS_INCLUDE_PATH=/usr/include/gdal && \
-    pip install gdal==1.10
+    pip install --no-cache-dir gdal==1.10
 
-RUN curl -sL https://deb.nodesource.com/setup_8.x | bash - && \
-    apt-get install -y nodejs && \
-    node -v &&  npm -v
+RUN curl -f -sL https://deb.nodesource.com/setup_8.x | bash - && \
+    apt-get install --no-install-recommends -y nodejs && \
+    node -v && npm -v && rm -rf /var/lib/apt/lists/*;
 
 ENV DOCKERIZE_VERSION v0.6.1
 RUN wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && \
@@ -41,8 +41,8 @@ ADD /geokey /app
 
 WORKDIR /app
 RUN \
-    pip install --upgrade pip && \
-    pip install -r requirements.txt && \
-    pip install -r requirements-dev.txt && \
-    pip install -e /app
-RUN npm install
+    pip install --no-cache-dir --upgrade pip && \
+    pip install --no-cache-dir -r requirements.txt && \
+    pip install --no-cache-dir -r requirements-dev.txt && \
+    pip install --no-cache-dir -e /app
+RUN npm install && npm cache clean --force;