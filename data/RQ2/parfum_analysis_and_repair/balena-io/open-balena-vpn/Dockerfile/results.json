{
  "startTime": 1674220331028,
  "endTime": 1674220331780,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 60
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 79,
        "lineEnd": 79,
        "columnStart": 7,
        "columnEnd": 184
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 87,
        "lineEnd": 87,
        "columnStart": 7,
        "columnEnd": 198
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 15,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 9
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 9
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM balena/open-balena-base:v13.4.0 as base\n\n\nFROM base as builder\nCOPY package.json package-lock.json /usr/src/app/\nRUN npm ci && npm cache clean --force 2>/dev/null\nCOPY tsconfig.json tsconfig.dev.json /usr/src/app/\nCOPY typings /usr/src/app/typings\nCOPY test /usr/src/app/test\nCOPY src /usr/src/app/src\nRUN npm run build\n\nFROM base as plugin-builder\n\nRUN apt-get update \\\n\t&& apt-get install -y --no-install-recommends \\\n\t\tlibssl-dev \\\n\t\topenvpn \\\n\t&& rm -rf /var/lib/apt/lists/*\n\nFROM plugin-builder as connect-disconnect-plugin\n\nENV CONNECT_DISCONNECT_PLUGIN_COMMIT=7c958d8b33a87a06b5a8fa096397fc623494013a\nRUN git clone https://github.com/balena-io-modules/connect-disconnect-script-openvpn.git \\\n\t&& cd connect-disconnect-script-openvpn \\\n\t&& git checkout ${CONNECT_DISCONNECT_PLUGIN_COMMIT} \\\n\t&& C_INCLUDE_PATH=/usr/include/openvpn/ make plugin\n\nFROM plugin-builder as auth-plugin\n\nENV AUTH_PLUGIN_COMMIT=623982a5d63dd2b7b2b9f9295d10d96a56d58894\nRUN git clone https://github.com/fac/auth-script-openvpn.git \\\n\t&& cd auth-script-openvpn \\\n\t&& git checkout ${AUTH_PLUGIN_COMMIT} \\\n\t&& C_INCLUDE_PATH=/usr/include/openvpn/ make plugin\n\nFROM rust:1-bullseye as rust-builder\n\nWORKDIR /usr/src/app\nCOPY auth .\nRUN cargo build --release\n\nFROM base as main\n\n# Docker/systemd socialisation hack to handle SIGTERM=>SIGKILL\n# https://stackoverflow.com/q/43486361/1559300\n# https://bugzilla.redhat.com/show_bug.cgi?id=1201657\n# https://unix.stackexchange.com/a/572819/78029\n# https://engineeringblog.yelp.com/2016/01/dumb-init-an-init-for-docker.html\nSTOPSIGNAL SIGRTMIN+3\n\nEXPOSE 80 443 3128\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n    socat \\\n    && rm -rf /var/lib/apt/lists/*\n\nRUN curl -f -s https://haproxy.debian.net/bernat.debian.org.gpg | apt-key add - >/dev/null \\\n    && echo deb http://haproxy.debian.net bullseye-backports-2.6 main > /etc/apt/sources.list.d/haproxy.list \\\n    && apt-get update -qq \\\n    && apt-get install -qy haproxy=2.6.* iptables --no-install-recommends \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/* /etc/apt/sources.list.d/*.list /etc/haproxy/* /etc/rsyslog.d/49-haproxy.conf /etc/openvpn/* /etc/defaults/openvpn \\\n    && ln -sf /usr/src/app/openvpn/scripts /etc/openvpn/scripts \\\n    && systemctl mask openvpn@.service openvpn.service\n\nENV LIBNSS_OPENVPN_VERSION 22feb11322182f6fd79f85cd014b65b6c40b7b47\nRUN tmp=\"$(mktemp -d)\" set -x \\\n    && git clone -q https://github.com/balena-io-modules/libnss-openvpn.git \"${tmp}\" \\\n    && cd \"${tmp}\" \\\n    && git -C \"${tmp}\" checkout -q ${LIBNSS_OPENVPN_VERSION} \\\n    && make -C \"${tmp}\" -j \"$(nproc)\" \\\n    && make -C \"${tmp}\" install \\\n    && sed --in-place --regexp-extended 's|(hosts:\\W+)(.*)|\\1openvpn \\2|' /etc/nsswitch.conf \\\n    && rm -rf \"${tmp}\"\n\nENV NODE_EXPORTER_VERSION 1.3.1\nENV NODE_EXPORTER_SHA256SUM 68f3802c2dd3980667e4ba65ea2e1fb03f4a4ba026cca375f15a0390ff850949\nRUN NODE_EXPORTER_TGZ=\"/tmp/node_exporter.tar.gz\" set -x \\\n    && curl -f -Lo \"${NODE_EXPORTER_TGZ}\" https://github.com/prometheus/node_exporter/releases/download/v${NODE_EXPORTER_VERSION}/node_exporter-${NODE_EXPORTER_VERSION}.linux-amd64.tar.gz \\\n    && echo \"${NODE_EXPORTER_SHA256SUM}  ${NODE_EXPORTER_TGZ}\" | sha256sum -c \\\n    && tar -xzC /usr/local/bin -f \"${NODE_EXPORTER_TGZ}\" --strip-components=1 --wildcards '*/node_exporter' \\\n    && rm \"${NODE_EXPORTER_TGZ}\"\n\nENV PROCESS_EXPORTER_VERSION 0.7.10\nENV PROCESS_EXPORTER_SHA256SUM 52503649649c0be00e74e8347c504574582b95ad428ff13172d658e82b3da1b5\nRUN PROCESS_EXPORTER_TGZ=\"/tmp/process_exporter.tar.gz\" set -x \\\n    && curl -f -Lo \"${PROCESS_EXPORTER_TGZ}\" https://github.com/ncabatoff/process-exporter/releases/download/v${PROCESS_EXPORTER_VERSION}/process-exporter-${PROCESS_EXPORTER_VERSION}.linux-amd64.tar.gz \\\n    && echo \"${PROCESS_EXPORTER_SHA256SUM}  ${PROCESS_EXPORTER_TGZ}\" | sha256sum -c \\\n    && tar -xzC /usr/local/bin -f \"${PROCESS_EXPORTER_TGZ}\" --strip-components=1 --wildcards '*/process-exporter' \\\n    && rm \"${PROCESS_EXPORTER_TGZ}\"\n\nCOPY package.json package-lock.json /usr/src/app/\nRUN npm ci --unsafe-perm --production && npm cache clean --force 2>/dev/null\n\nCOPY --from=auth-plugin /usr/src/app/auth-script-openvpn/openvpn-plugin-auth-script.so /etc/openvpn/plugins/\nCOPY --from=builder /usr/src/app/build /usr/src/app/build\nCOPY --from=connect-disconnect-plugin /usr/src/app/connect-disconnect-script-openvpn/openvpn-plugin-connect-disconnect-script.so /etc/openvpn/plugins/\nCOPY --from=rust-builder /usr/src/app/target/release/auth /usr/src/app/openvpn/scripts/auth\nCOPY bin /usr/src/app/bin\nCOPY config /usr/src/app/config\nCOPY openvpn /usr/src/app/openvpn\nCOPY docker-hc /usr/src/app/\nCOPY config/services /etc/systemd/system\nRUN systemctl enable \\\n    open-balena-vpn.service \\\n    node-exporter.service \\\n    process-exporter.service\n"
}