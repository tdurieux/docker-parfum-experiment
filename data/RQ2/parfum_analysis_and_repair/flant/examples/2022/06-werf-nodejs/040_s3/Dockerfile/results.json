{
  "startTime": 1674249517922,
  "endTime": 1674249518627,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 27
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:12-alpine as builder\nWORKDIR /app\n\n# [<en>] Copy the files needed to install the application dependencies into the image.\n# [<ru>] Копируем в образ файлы, нужные для установки зависимостей приложения.\nCOPY package.json package-lock.json ./\n\n# [<en>] Install the application dependencies.\n# [<ru>] Устанавливаем зависимости приложения.\nRUN npm ci\n\n# [<en>] Copy all other application files into the image.\n# [<ru>] Копируем в образ все остальные файлы приложения.\nCOPY . .\n\n# [<en>] Build static asseets.\n# [<ru>] Собираем статические файлы.\nRUN npm run build\n\n#############################################################################\n\nFROM node:12-alpine as backend\nWORKDIR /app\n\n# [<en>] Add mysqladmin to track MySQL status in migrations and startup.\n# [<ru>] Добавляем mysqladmin, чтобы отслеживать состояние MySQL в миграциях и перед запуском.\nRUN apk add --no-cache -U mysql-client\n\n# [<en>] Copy the files needed to install the application dependencies into the image.\n# [<ru>] Копируем в образ файлы, нужные для установки зависимостей приложения.\nCOPY package.json package-lock.json ./\n\n# [<en>] Install the application dependencies.\n# [<ru>] Устанавливаем зависимости приложения.\nRUN npm ci --production\n\n# [<en>] Copy app files.\n# [<ru>] Копируем файлы приложения.\nRUN mkdir dist\nCOPY --from=builder /app/dist/*.html   ./dist/\nCOPY --from=builder /app/app.js        ./\nCOPY --from=builder /app/bin           ./bin/\nCOPY --from=builder /app/routes        ./routes/\nCOPY --from=builder /app/config        ./config/\nCOPY --from=builder /app/db            ./db/\nCOPY --from=builder /app/.sequelizerc  ./\n\n\n#############################################################################\n\n# [<en>] Add an NIGINX image with the pre-built assets.\n# [<ru>] NGINX-образ с собранными ранее ассетами.\nFROM nginx:stable-alpine as frontend\nWORKDIR /www\n\n# [<en>] Copy the pre-built assets from the above image.\n# [<ru>] Копируем собранные ассеты из предыдушего сборочного образа.\nCOPY --from=builder /app/dist /www/static\n\n# [<en>] Copy the NGINX configuration.\n# [<ru>] Копируем конфигурацию NGINX.\nCOPY .werf/nginx.conf /etc/nginx/nginx.conf\n"
}