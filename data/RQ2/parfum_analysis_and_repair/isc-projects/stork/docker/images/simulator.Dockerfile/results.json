{
  "startTime": 1674250112416,
  "endTime": 1674250113381,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 7,
        "columnEnd": 18
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# The main purpose of this container is to run Stork Environment Simulator.\nFROM ubuntu:18.04\nWORKDIR /sim\n\n# Install essentials.\nRUN apt-get update \\\n    && apt-get install \\\n            -y \\\n            --no-install-recommends \\\n            sudo curl ca-certificates gnupg apt-transport-https \\\n            supervisor python3-pip python3-setuptools python3-wheel \\\n            libbind-dev libkrb5-dev libssl-dev libcap-dev libxml2-dev \\\n            libjson-c-dev libgeoip-dev libprotobuf-c-dev libfstrm-dev \\\n            liblmdb-dev libssl-dev dnsutils build-essential autoconf \\\n            autotools-dev automake libtool git cmake libldns-dev \\\n            libgnutls28-dev \\\n    # Install libuv for DNS testing.\n    && mkdir -p /tmp/libuv \\\n    && cd /tmp/libuv \\\n    && git clone https://github.com/libuv/libuv.git \\\n    && cd libuv \\\n    && sh autogen.sh \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n    && make && make install \\\n    # Install flamethrower for DNS testing.\n    && mkdir -p /tmp/flamethrower \\\n    && cd /tmp/flamethrower \\\n    && git clone https://github.com/DNS-OARC/flamethrower \\\n    && cd flamethrower \\\n    && git checkout v0.10.2 \\\n    && mkdir build \\\n    && cd build \\\n    && cmake .. \\\n    && make \\\n    && make install \\\n    # Install perfdhcp\n    && curl -1sLf 'https://dl.cloudsmith.io/public/isc/kea-2-0/cfg/setup/bash.deb.sh' | bash \\\n    && apt-get update \\\n    && apt-get install \\\n        -y \\\n        --no-install-recommends \\\n        isc-kea-admin=2.0.1-isc20211214132435 \\\n        isc-kea-common=2.0.1-isc20211214132435 \\\n    && mkdir -p /var/run/kea/ \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Setup sim.\nCOPY tests/sim/requirements.txt /sim\nRUN pip3 install --no-cache-dir -r /sim/requirements.txt\nCOPY tests/sim/index.html tests/sim/sim.py /sim/\n\n# Start flask app.\nCMD FLASK_ENV=development FLASK_APP=sim.py LC_ALL=C.UTF-8 LANG=C.UTF-8 flask run --host 0.0.0.0\n"
}