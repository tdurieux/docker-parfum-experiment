{
  "startTime": 1674252478630,
  "endTime": 1674252479623,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 2,
        "columnEnd": 147
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 2,
        "columnEnd": 56
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 2,
        "columnEnd": 108
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 2,
        "columnEnd": 119
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 2,
        "columnEnd": 124
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 2,
        "columnEnd": 147
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 2,
        "columnEnd": 27
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 2,
        "columnEnd": 33
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 45,
        "columnEnd": 65
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 38,
        "columnEnd": 68
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 2,
        "columnEnd": 59
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 2,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 2,
        "columnEnd": 25
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 2,
        "columnEnd": 64
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 2,
        "columnEnd": 73
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 2,
        "columnEnd": 48
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 2,
        "columnEnd": 25
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 2,
        "columnEnd": 64
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 2,
        "columnEnd": 73
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 2,
        "columnEnd": 48
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# STAGE: base\n# -----------\n# The main image that is published.\nFROM python:3.7-slim AS base\n\nCOPY requirements.txt .\n\n# Setup dependencies for pyodbc\nRUN \\\n  export ACCEPT_EULA='Y' && \\\n  export MYSQL_CONNECTOR='mysql-connector-odbc-8.0.18-linux-glibc2.12-x86-64bit' && \\\n  export MYSQL_CONNECTOR_CHECKSUM='f2684bb246db22f2c9c440c4d905dde9' && \\\n  apt-get update && \\\n  apt-get install --no-install-recommends -y curl && \\\n  curl -f -L -o multiarch-support_2.27-3ubuntu1_amd64.deb https://archive.ubuntu.com/ubuntu/pool/main/g/glibc/multiarch-support_2.27-3ubuntu1_amd64.deb && \\\n  apt-get install --no-install-recommends -y ./multiarch-support_2.27-3ubuntu1_amd64.deb && \\\n  apt-get install --no-install-recommends -y build-essential unixodbc-dev g++ apt-transport-https && \\\n  gpg --batch --keyserver keyserver.ubuntu.com --recv-keys 5072E1F5 && \\\n  #\n  # Install pyodbc db drivers for MSSQL, PG and MySQL\n  curl -f https://packages.microsoft.com/keys/microsoft.asc | apt-key add - && \\\n  curl -f https://packages.microsoft.com/config/debian/9/prod.list > /etc/apt/sources.list.d/mssql-release.list && \\\n  curl -f -L -o ${MYSQL_CONNECTOR}.tar.gz https://dev.mysql.com/get/Downloads/Connector-ODBC/8.0/${MYSQL_CONNECTOR}.tar.gz && \\\n  curl -f -L -o ${MYSQL_CONNECTOR}.tar.gz.asc https://downloads.mysql.com/archives/gpg/\\?file\\=${MYSQL_CONNECTOR}.tar.gz\\&p\\=10 && \\\n  gpg --batch --verify ${MYSQL_CONNECTOR}.tar.gz.asc && \\\n  echo \"${MYSQL_CONNECTOR_CHECKSUM} ${MYSQL_CONNECTOR}.tar.gz\" | md5sum -c - && \\\n  apt-get update && \\\n  gunzip ${MYSQL_CONNECTOR}.tar.gz && tar xvf ${MYSQL_CONNECTOR}.tar && \\\n  cp ${MYSQL_CONNECTOR}/bin/* /usr/local/bin && cp ${MYSQL_CONNECTOR}/lib/* /usr/local/lib && \\\n  myodbc-installer -a -d -n \"MySQL ODBC 8.0 Driver\" -t \"Driver=/usr/local/lib/libmyodbc8w.so\" && \\\n  myodbc-installer -a -d -n \"MySQL ODBC 8.0\" -t \"Driver=/usr/local/lib/libmyodbc8a.so\" && \\\n  apt-get install --no-install-recommends -y msodbcsql17 odbc-postgresql && \\\n  #\n  # Update odbcinst.ini to make sure full path to driver is listed, and set CommLog to 0. i.e disables any communication logs to be written to files\n  sed 's/Driver=psql/Driver=\\/usr\\/lib\\/x86_64-linux-gnu\\/odbc\\/psql/;s/CommLog=1/CommLog=0/' /etc/odbcinst.ini > /tmp/temp.ini && \\\n  mv -f /tmp/temp.ini /etc/odbcinst.ini && \\\n  # Install dependencies\n  pip install --no-cache-dir --upgrade pip && \\\n  pip install --no-cache-dir -r requirements.txt && rm requirements.txt && \\\n  # Cleanup build dependencies\n  rm -rf ${MYSQL_CONNECTOR}* && \\\n  apt-get remove -y curl apt-transport-https debconf-utils g++ gcc rsync unixodbc-dev build-essential gnupg2 && \\\n  apt-get autoremove -y && apt-get autoclean -y && rm ${MYSQL_CONNECTOR}.tar && rm -rf /var/lib/apt/lists/*;\n\n# STAGE: dev\n# ----------\n# Intermediate image used to install dependencies.\nFROM base AS dev\n\nCOPY requirements-dev.txt .\nRUN pip install --no-cache-dir -r requirements-dev.txt\n\n# STAGE: test\n# -----------\n# Image used for running tests.\nFROM dev AS test\n\nWORKDIR /test\nCOPY test ./test\n\nCMD pylint -v -E **/*.py && pytest -v\n\n# STAGE: lint-examples\n# --------------------\n# Image used to lint examples.\nFROM dev AS lint-examples\n\nCOPY examples ./examples\nRUN for f in examples/*/requirements.txt; do pip install --no-cache-dir -r \"$f\"; done\nCMD pylint -v -E examples/**/*.py\n"
}