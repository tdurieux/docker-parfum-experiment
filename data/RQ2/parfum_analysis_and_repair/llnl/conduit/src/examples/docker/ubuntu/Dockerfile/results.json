{
  "startTime": 1674215700674,
  "endTime": 1674215701210,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 29,
        "columnStart": 22,
        "columnEnd": 7
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright (c) Lawrence Livermore National Security, LLC and other Conduit\n# Project developers. See top-level LICENSE AND COPYRIGHT files for dates and\n# other details. No copyright assignment is required to contribute to Conduit.\n\nFROM ubuntu:18.04\n\n# fetch build env\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    git \\\n    curl \\\n    build-essential \\\n    gcc \\\n    g++ \\\n    gfortran \\\n    zlib1g-dev \\\n    python \\\n    tar \\\n    unzip \\\n    perl \\\n    libncurses-dev \\\n    libssl-dev \\\n    libopenblas-dev \\\n    zlib1g-dev \\\n    libgdbm-dev \\\n    libreadline-dev \\\n    libsqlite3-dev \\\n    libbz2-dev \\\n    mpich \\\n    libmpich-dev \\\n    vim \\\n && rm -rf /var/lib/apt/lists/*\n\n\n# untar the current source  (created as part of example_build.sh)\nCOPY conduit.docker.src.tar /\nRUN tar -xf conduit.docker.src.tar && rm conduit.docker.src.tar\n\n# if you would like to clone conduit directly, you can use:\n#RUN git clone --depth 1 https://github.com/LLNL/conduit.git\n\n# at some sites ssl certs are intercepted, which cases issues fetching\n# tpl sources via https\n\n# to resolve this, either:\n# 1) pass the \"-k\" option to uberenv (recommended),\n# 2) install the proper certs into the image, or\n# 3) use  the following commands to disable ssl for git and\n#    curl (both are used by spack):\n#RUN git config --global http.sslVerify false\n#RUN echo insecure >> ~/.curlrc\n\n# bootstrap third party libs using spack and uberenv\n#  for this example we use mpich for MPI b/c openmpi's mpiexec\n#  will not run for the root user\nRUN cd conduit && python scripts/uberenv/uberenv.py \\\n    -k \\\n    --spec \"%gcc+mpi~doc~silo\" \\\n    --spack-config-dir=scripts/uberenv_configs/spack_configs/configs/docker/ubuntu/\n\n# configure a debug build with cmake\nRUN cd conduit && mkdir build-debug\nRUN cd conduit/build-debug && \\\n    ../uberenv_libs/spack/opt/spack/*/*/cmake*/bin/cmake \\\n    -DCMAKE_BUILD_TYPE=Debug \\\n    -DCMAKE_INSTALL_PREFIX=/conduit/install-debug \\\n    -C ../uberenv_libs/*.cmake \\\n    ../src\n\n# build, test, and install conduit\nRUN cd conduit/build-debug && make\nRUN cd conduit/build-debug && env CTEST_OUTPUT_ON_FAILURE=1 make test\nRUN cd conduit/build-debug && make install\n\n# open port 9000, for use by conduit relay\nEXPOSE 9000\n\nCMD [\"/bin/bash\"]\n"
}