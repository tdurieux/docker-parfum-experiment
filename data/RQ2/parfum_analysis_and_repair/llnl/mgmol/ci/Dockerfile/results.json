{
  "startTime": 1674254676100,
  "endTime": 1674254676737,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 20,
        "columnStart": 44,
        "columnEnd": 9
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nvidia/cuda:10.1-devel\n\nENV N_PROCS=8\n\nENV DEBIAN_FRONTEND noninteractive\nRUN apt-get update && apt-get upgrade -y && apt-get install --no-install-recommends -y \\\n      gcc \\\n      gfortran \\\n      build-essential \\\n      clang-format \\\n      clang \\\n      wget \\\n      curl \\\n      lcov \\\n      bison \\\n      python3 \\\n      environment-modules \\\n      tcl-dev \\\n      libperlio-gzip-perl \\\n      libjson-pp-perl \\\n      git && \\\n      apt-get clean && rm -rf /var/lib/apt/lists/*\n\nENV PREFIX=/root\n\nRUN export SPACK_HASH=ae52f4144872a281bc97596ecce17d9959c21086 && \\\n    export SPACK_URL=https://github.com/spack/spack/archive/${SPACK_HASH}.tar.gz && \\\n    export SPACK_ARCHIVE=${PREFIX}/spack.tar.gz && \\\n    export SPACK_SOURCE_DIR=${PREFIX}/spack && \\\n    wget --quiet ${SPACK_URL} --output-document=${SPACK_ARCHIVE} && \\\n    mkdir -p ${SPACK_SOURCE_DIR} && \\\n    tar xf ${SPACK_ARCHIVE} -C ${SPACK_SOURCE_DIR} --strip-components=1 && \\\n    rm -rf ${SPACK_ARCHIVE}\nENV PATH=${PREFIX}/spack/bin:$PATH\n\n# Register the compiler\nRUN spack compilers\n\n# Make sure we don't install CUDA\nRUN echo 'packages:' >> ${PREFIX}/.spack/packages.yaml && \\\n    echo '  cuda:' >>  ${PREFIX}/.spack/packages.yaml && \\\n    echo '    paths:' >>  ${PREFIX}/.spack/packages.yaml && \\\n    echo '      cuda@10.1%gcc@7.4.0 arch=linux-ubuntu18.04-x86_64: /usr/local/cuda' >>  ${PREFIX}/.spack/packages.yaml && \\\n    echo '    buildable: False' >>  ${PREFIX}/.spack/packages.yaml\n\n# Install MAGMA with nvcc and gcc 7.4\nRUN spack install magma@2.5.1^openblas@0.3.7+virtual_machine arch=x86_64\n\n# Install gcc 9.2 with offloading support\n# Checksum is missing in spack release\nRUN spack install gcc@9.2.0+nvptx arch=x86_64\nRUN spack compiler find $(spack location -i gcc)\n\n# Install all the libraries with gcc 9.2\n# Install boost\nRUN spack install boost@1.70.0 arch=x86_64\n# Install openmpi\nRUN spack install openmpi@4.0.2+thread_multiple arch=x86_64\n# Install hdf5 with mpi for some reason zlib does not respect the arch in this\n# case so we set it explicitly\nRUN spack install hdf5@1.10.5+hl^openmpi@4.0.2+thread_multiple^zlib@1.2.11 arch=x86_64\n# Install scalapack using the version of openblas that we have installed\nRUN spack install netlib-scalapack@2.0.2%gcc@9.2.0^openmpi@4.0.2%gcc@9.2.0+thread_multiple^openblas@0.3.7%gcc@7.4.0+virtual_machine arch=x86_64\n\n# Install the development version of lcov because older versions are not\n# compatible with gcc 9\nRUN cd $PREFIX && git clone https://github.com/linux-test-project/lcov.git && \\\n    cd lcov && make install && cd ../ && rm -rf lcov\n\n# Set the environment variables to be able to run mpi as root\nENV OMPI_ALLOW_RUN_AS_ROOT=1\nENV OMPI_ALLOW_RUN_AS_ROOT_CONFIRM=1\n\nRUN echo 'module() { eval `/usr/bin/modulecmd sh $*`; }' > ~/.module\nRUN echo '. /root/spack/share/spack/setup-env.sh' >> ~/.module\n"
}