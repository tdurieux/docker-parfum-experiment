{
  "startTime": 1674253890330,
  "endTime": 1674253891078,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 113
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 5,
        "columnEnd": 20
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 20,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 53
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 76
      }
    }
  ],
  "repairedDockerfile": "# pull base image\n\nFROM ubuntu:18.04\n\n# install gcc git fortran package later that only for test\nRUN groupadd -g 9999 drb && \\\n    useradd -r -u 9999 -g drb -m -d /home/drb drb\n\n# Install packages.\n# Install packages.\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y \\\n        apt-utils \\\n        dialog \\\n        software-properties-common \\\n        wget && \\\n    add-apt-repository ppa:ubuntu-toolchain-r/test && \\\n    wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \\\n    add-apt-repository -y 'deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main' && \\\n    apt-get update && \\\n    apt-get install --no-install-recommends -y \\\n        bc \\\n        build-essential \\\n        curl \\\n        gdb \\\n        git \\\n        python3-dev \\\n        time \\\n        vim \\\n        gpg wget \\\n        ninja-build \\\n        gcc-10 g++-10 gfortran-10 && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    rm -rf /var/cache/*\n\nRUN update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-10 100 --slave /usr/bin/g++ g++ /usr/bin/g++-10 --slave /usr/bin/gfortran gfortran /usr/bin/gfortran-10\n\nRUN wget --no-check-certificate -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null | \\\n     gpg --batch --dearmor - | \\\n     tee /usr/share/keyrings/kitware-archive-keyring.gpg >/dev/null\n\nRUN echo 'deb [signed-by=/usr/share/keyrings/kitware-archive-keyring.gpg] https://apt.kitware.com/ubuntu/ bionic main' | \\\n    tee /etc/apt/sources.list.d/kitware.list >/dev/null && \\\n    apt-get update\n\nRUN rm /usr/share/keyrings/kitware-archive-keyring.gpg && \\\n    apt-get install --no-install-recommends -y kitware-archive-keyring cmake && rm -rf /var/lib/apt/lists/*;\n\n#Getting prebuilt binary from llvm\nRUN curl -f -SL https://github.com/llvm/llvm-project/releases/download/llvmorg-12.0.1/llvm-project-12.0.1.src.tar.xz \\\n | tar -xJC . && \\\n mv  llvm-project-12.0.1.src llvm-12.0.1 && \\\n mkdir llvm-12.0.1/build_tree && \\\n mkdir llvm-12.0.1/install_tree && \\\n cd llvm-12.0.1/build_tree && \\\n cmake -G Ninja -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/llvm-12.0.1/install_tree -DLLVM_ENABLE_PROJECTS='clang;clang-tools-extra;compiler-rt;openmp' /llvm-12.0.1/llvm && \\\n cmake --build . --target install && \\\n echo ‘export PATH=/llvm-12.0.1/install_tree/bin:$PATH’ >> ~/.bashrc && \\\n echo ‘export LD_LIBRARY_PATH=/llvm-12.0.1/install_tree/lib:$LD_LIBRARY_PATH’ >> ~/.bashrc\n\n\n# Setup environment.\nRUN ln -s /llvm-12.0.1/install_tree/bin/clang /usr/bin/clang\nRUN ln -s /llvm-12.0.1/install_tree/bin/clang /usr/bin/clang++\nENV CC  /usr/bin/clang\nENV CXX /usr/bin/clang++\nENV LD_LIBRARY_PATH /llvm-12.0.1/install_tree/lib\n\nUSER drb\nWORKDIR /home/drb\n\nRUN git clone https://github.com/LLNL/dataracebench.git\n\n\n"
}