{
  "startTime": 1674248858473,
  "endTime": 1674248859779,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 12
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# pull base image\n\nFROM ubuntu:18.04\n\n# install gcc git fortran package later that only for test\nRUN groupadd -g 9999 drb && \\\n    useradd -r -u 9999 -g drb -m -d /home/drb drb\n\n# Install packages.\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y \\\n        apt-utils \\\n        bc \\\n        build-essential \\\n        cmake \\\n        curl \\\n        dialog \\\n        g++ \\\n        gcc \\\n        gdb \\\n        git \\\n        ninja-build \\\n        python3-dev \\\n        software-properties-common \\\n        time \\\n        vim \\\n        wget && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    rm -rf /var/cache/*\n\n# Build LLVM\n\nENV ARCHER_BUILD /opt/ArcherBuild\n\n\nRUN mkdir -p $ARCHER_BUILD && \\\n    cd $ARCHER_BUILD && \\\n    git clone https://github.com/llvm-mirror/llvm.git llvm_src && \\\n    cd llvm_src && \\\n    git checkout release_60 && \\\n    cd tools && \\\n    git clone https://github.com/llvm-mirror/clang.git clang && \\\n    cd clang && \\\n    git checkout release_60 && \\\n    cd .. && \\\n    git clone https://github.com/PRUNERS/archer.git archer && \\\n    cd .. && \\\n    cd projects && \\\n    git clone https://github.com/llvm-mirror/compiler-rt.git compiler-rt && \\\n    cd compiler-rt && \\\n    git checkout release_60 && \\\n    cd .. && \\\n    git clone https://github.com/llvm-mirror/libcxx.git && \\\n    cd libcxx && \\\n    git checkout release_60 && \\\n    cd .. && \\\n    git clone https://github.com/llvm-mirror/libcxxabi.git && \\\n    cd libcxxabi && \\\n    git checkout release_60 && \\\n    cd .. && \\\n    git clone https://github.com/llvm-mirror/libunwind.git && \\\n    cd libunwind && \\\n    git checkout release_60 && \\\n    cd .. && \\\n    git clone https://github.com/llvm-mirror/openmp.git openmp && \\\n    cd openmp && \\\n    git checkout release_60\n\n#ENV CC $(which gcc)\n#ENV CXX $(which g++)\n\nRUN cd $ARCHER_BUILD && \\\n    mkdir -p llvm_bootstrap && \\\n    cd llvm_bootstrap && \\\n    cmake -G Ninja \\\n    -DCMAKE_BUILD_TYPE=Release \\\n    -DLLVM_TOOL_ARCHER_BUILD=OFF \\\n    -DLLVM_TARGETS_TO_BUILD=Native \\\n    ../llvm_src && \\\n    ninja -j2 -l2 && \\\n    cd ..\n\nENV LD_LIBRARY_PATH $ARCHER_BUILD/llvm_bootstrap/lib:${LD_LIBRARY_PATH}\nENV PATH $ARCHER_BUILD/llvm_bootstrap/bin:${PATH}\nENV LLVM_INSTALL /opt/llvm_install\n\n# -D CLANG_DEFAULT_OPENMP_RUNTIME:STRING=libomp \\\nRUN cd $ARCHER_BUILD && \\\n    mkdir llvm_build && cd llvm_build && \\\n    cmake -G Ninja \\\n    -D CMAKE_C_COMPILER=clang \\\n    -D CMAKE_CXX_COMPILER=clang++ \\\n    -D CMAKE_BUILD_TYPE=Release \\\n    -D OMP_PREFIX:PATH=$LLVM_INSTALL \\\n    -D OMP_LIB_PATH=$ARCHER_BUILD/llvm_bootstrap/lib \\\n    -D CMAKE_INSTALL_PREFIX:PATH=$LLVM_INSTALL \\\n    -D LLVM_ENABLE_LIBCXX=ON \\\n    -D LLVM_ENABLE_LIBCXXABI=ON \\\n    -D LIBCXXABI_USE_LLVM_UNWINDER=ON \\\n    -D CLANG_DEFAULT_CXX_STDLIB=libc++ \\\n    -D LIBOMP_OMPT_SUPPORT=on \\\n    -D LIBOMP_OMPT_BLAME=on \\\n    -D LIBOMP_OMPT_TRACE=on \\\n    ../llvm_src && \\\n    ninja -j2 -l2\n\nRUN cd $ARCHER_BUILD && \\\n    cd llvm_build && \\\n    ninja install\n\n   # ninja check-libarcher && \\\nENV PATH ${LLVM_INSTALL}/bin:${PATH}\nENV LD_LIBRARY_PATH ${LLVM_INSTALL}/lib:${LD_LIBRARY_PATH}\n\n# Setup environment.\nENV CC $LLVM_PATH/bin/clang\nENV CXX $LLVM_PATH/bin/clang++\n\nUSER drb\nWORKDIR /home/drb\n\nRUN git clone https://github.com/LLNL/dataracebench.git\n\n\n"
}