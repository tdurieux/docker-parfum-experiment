{
  "startTime": 1674246151972,
  "endTime": 1674246154636,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 92
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 259,
        "lineEnd": 259,
        "columnStart": 4,
        "columnEnd": 80
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 271,
        "lineEnd": 271,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 271,
        "lineEnd": 271,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 79,
        "lineEnd": 79,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 262,
        "lineEnd": 262,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 274,
        "lineEnd": 274,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 258,
        "lineEnd": 258,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 270,
        "lineEnd": 270,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 25
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM quay.io/pypa/manylinux2014_x86_64\nMAINTAINER keenonwerling@gmail.com\n# TAG keenon/diffdart:base\n\nENV PKG_CONFIG_PATH=\"${PKG_CONFIG_PATH}:/usr/local/lib64/pkgconfig/\"\n\n# Upgrade to the latest CMake version\n\nRUN yum install -y wget && rm -rf /var/cache/yum\n\nRUN yum install -y openssl-devel && rm -rf /var/cache/yum\n\nRUN wget https://github.com/Kitware/CMake/releases/download/v3.19.0/cmake-3.19.0.tar.gz\nRUN tar -xvzf cmake-3.19.0.tar.gz && rm cmake-3.19.0.tar.gz\nRUN pushd cmake-3.19.0 && \\\n    ./bootstrap && \\\n    make && \\\n    make install\nRUN rm -rf cmake-3.19.0\nRUN rm cmake-3.19.0.tar.gz\n\n# Install Boost\n# RUN yum install epel-release && \\\n#     rpm -ivh http://repo.okay.com.mx/centos/7/x86_64/release/okay-release-1-3.el6.noarch.rpm? && \\\n#     yum install -y boost-devel-1.55.0-25.el6.x86_64\nRUN yum install -y boost-devel-1.53.0-28.el7.x86_64 && rm -rf /var/cache/yum\n\n# Install Eigen\nRUN curl -f https://gitlab.com/libeigen/eigen/-/archive/3.3.7/eigen-3.3.7.tar.gz > eigen.tar.gz && \\\n    tar -zxf eigen.tar.gz && \\\n    pushd eigen-3.3.7 && \\\n    mkdir build && \\\n    pushd build && \\\n    cmake .. -DCMAKE_POSITION_INDEPENDENT_CODE=ON && \\\n    make install -j14 && \\\n    popd && \\\n    popd && \\\n    rm -rf eigen-3.3.7 && rm eigen.tar.gz\n\n# Install CCD\nRUN git clone https://github.com/danfis/libccd.git && \\\n    pushd libccd && \\\n    mkdir build && \\\n    pushd build && \\\n    cmake .. -DENABLE_DOUBLE_PRECISION=ON -DCMAKE_POSITION_INDEPENDENT_CODE=ON && \\\n    make install -j14 && \\\n    popd && \\\n    popd && \\\n    rm -rf libccd\n\n# Install ASSIMP\nRUN git clone https://github.com/assimp/assimp.git && \\\n    pushd assimp && \\\n    git checkout v5.0.1 && \\\n    mkdir build && \\\n    pushd build && \\\n    # cmake .. -DASSIMP_BUILD_ZLIB=ON -DASSIMP_BUILD_TESTS=ON -DASSIMP_BUILD_ASSIMP_TOOLS=OFF -DCMAKE_BUILD_TYPE=Debug && \\\n    cmake .. -DASSIMP_BUILD_ZLIB=ON -DASSIMP_BUILD_TESTS=ON -DASSIMP_BUILD_ASSIMP_TOOLS=OFF && \\\n    make install -j10 && \\\n    popd && \\\n    popd && \\\n    rm -rf assimp\n\n# Install LAPACK\nRUN yum install -y lapack-devel && rm -rf /var/cache/yum\n\n# Install MUMPS\nRUN git clone https://github.com/coin-or-tools/ThirdParty-Mumps.git && \\\n    pushd ThirdParty-Mumps && \\\n    ./get.Mumps && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n    make -j14 && \\\n    make install && \\\n    popd && \\\n    rm -rf ThirdParty-Mumps\n\n# Install IPOPT\nRUN git clone https://github.com/coin-or/Ipopt.git && \\\n    pushd Ipopt && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-mumps && \\\n    make -j14 && \\\n    make install && \\\n    popd && \\\n    rm -rf Ipopt && \\\n    ln -s /usr/local/include/coin-or /usr/local/include/coin\n\n# Install FCL\n# Key note: this needs to happen before octomap\nRUN git clone https://github.com/flexible-collision-library/fcl.git && \\\n    pushd fcl && \\\n    git checkout 0.3.4 && \\\n    # vi include/fcl/narrowphase/detail/convexity_based_algorithm/gjk_libccd-inl.h:1696 # \"std::max(1.0, v0_dist)\" -> \"std::max(1.0, (double)v0_dist)\" && \\\n    # sed -i '1696s/v0_dist/(double)v0_dist/' include/fcl/narrowphase/detail/convexity_based_algorithm/gjk_libccd-inl.h && \\\n    mkdir build && \\\n    pushd build && \\\n    cmake .. -DFCL_WITH_OCTOMAP=OFF -DCMAKE_POSITION_INDEPENDENT_CODE=ON && \\\n    make install -j14 && \\\n    popd && \\\n    popd && \\\n    rm -rf fcl\n\n# Install octomap\nRUN git clone https://github.com/OctoMap/octomap.git && \\\n    pushd octomap && \\\n    git checkout v1.8.1 && \\\n    mkdir build && \\\n    pushd build && \\\n    cmake .. -DCMAKE_POSITION_INDEPENDENT_CODE=ON && \\\n    make install -j10 && \\\n    popd && \\\n    popd && \\\n    rm -rf octomap\n\n# Install tinyxml2\nRUN git clone https://github.com/leethomason/tinyxml2.git && \\\n    pushd tinyxml2 && \\\n    mkdir build && \\\n    pushd build && \\\n    cmake .. -DCMAKE_POSITION_INDEPENDENT_CODE=ON && \\\n    make install -j10 && \\\n    popd && \\\n    popd && \\\n    rm -rf tinyxml2\n\n# Install freeglut\n# RUN yum install -y libXi-devel && \\\n#     yum install -y mesa-libGLU-devel && \\\n#     yum install -y libXmu-devel && \\\n#     curl https://managedway.dl.sourceforge.net/project/freeglut/freeglut/3.2.1/freeglut-3.2.1.tar.gz > freeglut.tar.gz && \\\n#     tar -zxf freeglut.tar.gz && \\\n#     rm freeglut.tar.gz && \\\n#     pushd freeglut-3.2.1 && \\\n#     mkdir build && \\\n#     pushd build && \\\n#     cmake .. && \\\n#     make install -j10 && \\\n#     popd && \\\n#     popd && \\\n#     rm -rf freeglut-3.2.1\n\n# Install Open Scene Graph\n# RUN git clone https://github.com/openscenegraph/OpenSceneGraph.git && \\\n#     pushd OpenSceneGraph && \\\n#     git checkout OpenSceneGraph-3.6.5 && \\\n#     mkdir build && \\\n#     pushd build && \\\n#     cmake .. && \\\n#     make install -j10 && \\\n#     popd && \\\n#     popd && \\\n#     rm -rf OpenSceneGraph\n\n# Install tinyxml1\nRUN git clone https://github.com/robotology-dependencies/tinyxml.git && \\\n    pushd tinyxml && \\\n    mkdir build && \\\n    pushd build && \\\n    cmake .. -DCMAKE_POSITION_INDEPENDENT_CODE=ON && \\\n    make install -j10 && \\\n    popd && \\\n    popd && \\\n    rm -rf tinyxml\n\n# Install urdfdom_headers\nRUN git clone https://github.com/ros/urdfdom_headers.git && \\\n    pushd urdfdom_headers && \\\n    mkdir build && \\\n    pushd build && \\\n    cmake .. -DCMAKE_POSITION_INDEPENDENT_CODE=ON && \\\n    make install -j10 && \\\n    popd && \\\n    popd && \\\n    rm -rf urdfdom_headers\n\n# Install console_bridge\nRUN git clone https://github.com/ros/console_bridge.git && \\\n    pushd console_bridge && \\\n    mkdir build && \\\n    pushd build && \\\n    cmake .. -DCMAKE_POSITION_INDEPENDENT_CODE=ON && \\\n    make install -j10 && \\\n    popd && \\\n    popd && \\\n    rm -rf console_bridge\n\n# Install urdfdom\nRUN git clone https://github.com/ros/urdfdom.git && \\\n    pushd urdfdom && \\\n    mkdir build && \\\n    pushd build && \\\n    cmake .. -DCMAKE_POSITION_INDEPENDENT_CODE=ON && \\\n    make install -j10 && \\\n    popd && \\\n    popd && \\\n    rm -rf urdfdom\n\n# Install PerfUtils\nRUN git clone https://github.com/PlatformLab/PerfUtils.git && \\\n    pushd PerfUtils && \\\n    sed -i 's/3.11/3.6.1/g' CMakeLists.txt && \\\n    sed -i '94,$d' CMakeLists.txt && \\\n    sed -i '30,33d' CMakeLists.txt && \\\n    sed -i '36i\\ \\ \\ \\ CXX_STANDARD 11' CMakeLists.txt && \\\n    sed -i '36i\\ \\ \\ \\ CXX_STANDARD_REQUIRED YES' CMakeLists.txt && \\\n    sed -i '36i\\ \\ \\ \\ CXX_EXTENSIONS NO' CMakeLists.txt && \\\n    mkdir build && \\\n    pushd build && \\\n    cmake .. -DCMAKE_POSITION_INDEPENDENT_CODE=ON && \\\n    make install && \\\n    popd && \\\n    popd && \\\n    rm -rf PerfUtils\n\nENV PROTOBUF_VERSION=\"3.14.0\"\n\n# RUN wget https://github.com/protocolbuffers/protobuf/releases/download/v${PROTOBUF_VERSION}/protobuf-all-${PROTOBUF_VERSION}.tar.gz && \\\n#     tar -xvzf protobuf-all-${PROTOBUF_VERSION}.tar.gz && \\\n#     rm protobuf-all-${PROTOBUF_VERSION}.tar.gz && \\\n#     pushd protobuf-${PROTOBUF_VERSION} && \\\n#     ./configure && \\\n#     make -j16 && \\\n#     make check -j16 && \\\n#     make install && \\\n#     popd && \\\n#     rm -rf protobuf-${PROTOBUF_VERSION}\n\nRUN git clone --recurse-submodules -b v1.33.2 https://github.com/grpc/grpc\nRUN pushd grpc && \\\n    # This fixes the boringssl build on the ancient CentOS we have to use by adding \"rt\" as an explicit dependency\n    sed -i '642s/.*/target_link_libraries(bssl ssl crypto rt)/' third_party/boringssl-with-bazel/CMakeLists.txt && \\\n    pushd third_party/protobuf && \\\n    git checkout v${PROTOBUF_VERSION} && \\\n    popd && \\\n    mkdir -p cmake/build && \\\n    pushd cmake/build && \\\n    cmake -DgRPC_INSTALL=ON \\\n          -DgRPC_BUILD_TESTS=OFF \\\n          -DCMAKE_POSITION_INDEPENDENT_CODE=ON \\\n          ../.. && \\\n    make -j3 && \\\n    make install && \\\n    popd && \\\n    popd\nRUN rm -rf grpc\n\n# Install Google benchmark\nRUN git clone https://github.com/google/benchmark.git\nRUN git clone https://github.com/google/googletest.git benchmark/googletest\nRUN pushd benchmark && \\\n    mkdir build && \\\n    pushd build && \\\n    cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_POSITION_INDEPENDENT_CODE=ON .. && \\\n    make install && \\\n    popd && \\\n    popd\nRUN rm -rf benchmark\n\n# Install MPFR - Arbirtatry precision floating point math\nRUN yum install -y gmp-devel && rm -rf /var/cache/yum\nRUN curl -f https://www.mpfr.org/mpfr-current/mpfr-4.1.0.tar.gz > mpfr-4.1.0.tar.gz && \\\n    tar -zxf mpfr-4.1.0.tar.gz && \\\n    pushd mpfr-4.1.0 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n    make && \\\n    make install && \\\n    popd && \\\n    rm -rf mpfr-4.1.0 && \\\n    rm mpfr-4.1.0.tar.gz\n\n# Install MPIR - Arbirtatry precision integer math\nRUN yum install -y yasm m4 && rm -rf /var/cache/yum\nRUN curl -f https://mpir.org/mpir-3.0.0.tar.bz2 > mpir-3.0.0.tar.bz2 && \\\n    tar -xf mpir-3.0.0.tar.bz2 && \\\n    pushd mpir-3.0.0 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-cxx && \\\n    make && \\\n    make install && \\\n    popd && \\\n    rm -rf mpir-3.0.0 && \\\n    rm mpir-3.0.0.tar.bz2\n\n# Install MPFRC++\nRUN wget https://github.com/advanpix/mpreal/archive/refs/tags/mpfrc++-3.6.8.tar.gz\nRUN tar -xzf mpfrc++-3.6.8.tar.gz && \\\n    pushd mpreal-mpfrc-3.6.8 && \\\n    cp mpreal.h /usr/include/ && \\\n    popd && \\\n    rm -rf mpreal-mpfrc-3.6.8 && \\\n    rm mpfrc++-3.6.8.tar.gz\n\n# Install ezc3d\nRUN git clone https://github.com/pyomeca/ezc3d.git\nRUN pushd ezc3d && \\\n    git checkout Release_1.4.7 && \\\n    mkdir build && \\\n    pushd build && \\\n    cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_POSITION_INDEPENDENT_CODE=ON .. && \\\n    make install && \\\n    popd && \\\n    popd\nRUN rm -rf ezc3d\n\n# RUN ls /usr/local/lib64 | grep assimp\n# RUN ls /usr/local/lib | grep assimp\n# RUN rm -rf /usr/local/lib64/libassimp.so\n# RUN rm -rf /usr/local/lib64/libassimp.5.so\n# RUN rm -rf /usr/local/lib64/libassimp.5.0.1.so\nRUN protoc --version"
}