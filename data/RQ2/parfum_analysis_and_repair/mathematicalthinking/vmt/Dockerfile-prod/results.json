{
  "startTime": 1674219077839,
  "endTime": 1674219078478,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 17,
        "columnEnd": 22
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 19,
        "columnEnd": 42
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:12.16.1-alpine@sha256:5e1a147114839599442784549d04b45821c7b178f7fc09d4ab9853543ae1388e AS appbuild\nUSER node\nENV NODE_PATH=src \\\n    PORT=1340 \\\n    NODE_OPTIONS=--max_old_space_size=3072\n\nWORKDIR /web\n\n# prepare the client dir\nCOPY --chown=node:node ./client /web/client/\n\n# install client dev dependencies for building app\nRUN cd client && npm i && npm cache clean --force;\n\n# prepare the server dir\nCOPY --chown=node:node ./server /web/server/\n\n# # install server dev dependencies for building app\n# RUN cd server && npm i\n\n# build VMT React client for production\n# RUN cd ./server && npm run build-production\nRUN cd ./client && node --max-old-space-size=3072 scripts/build.js production\n\n# # build encompass integration package -- is this actually needed?\n# RUN cd ./server && npm run build-enc-production\n\n# make a 2 part Dockerfile in order reduce overall image size of the final prod image\nFROM node:12.16.1-alpine@sha256:5e1a147114839599442784549d04b45821c7b178f7fc09d4ab9853543ae1388e\nRUN apk update && apk upgrade && apk add curl && rm -rf /var/cache/apk/*\nRUN mkdir -p /web/server && mkdir -p /web/client && chown -R node:node /web\nENV NODE_PATH=src \\\n    PORT=1340 \\\n    NODE_OPTIONS=--max_old_space_size=3072\nUSER node\nWORKDIR /web\n\n# copy the package.jsons to prepare for install\nCOPY --chown=node:node client/package*.json ./client/\nCOPY --chown=node:node server/package*.json ./server/\n\n# install server dependencies only for prod\nRUN cd ./server && npm i --only=production && npm cache clean --force;\n\n# copy the built client folder from the build image into the prod image\nCOPY --from=appbuild --chown=node:node /web/client/build ./client/build\n# copy the server code into the image\nCOPY --from=appbuild --chown=node:node /web/server ./server\n\nEXPOSE 1340\nCMD [\"node\", \"/web/server/bin/www\"]\n#CMD [\"tail\", \"-f\", \"/dev/null\"] # uncomment this line to keep a crashing container up for troubleshooting"
}