{
  "startTime": 1674249781722,
  "endTime": 1674249782609,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 91,
        "columnEnd": 162
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 91,
        "columnEnd": 162
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:latest\n\nENV DEBIAN_FRONTEND noninteractive\nENV JAVA_HOME /usr/lib/jvm/java-8-oracle\nENV LANG C.UTF-8\nENV LANGUAGE C.UTF-8\nENV LC_ALL C.UTF-8\n\n# auto validate license\nRUN apt-get update && \\\n    apt install --no-install-recommends -y locales curl software-properties-common gnupg && \\\n    echo \"deb http://ppa.launchpad.net/webupd8team/java/ubuntu trusty main\" | tee -a /etc/apt/sources.list && \\\n    echo \"deb-src http://ppa.launchpad.net/webupd8team/java/ubuntu trusty main\" | tee -a /etc/apt/sources.list && \\\n    echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true | /usr/bin/debconf-set-selections && \\\n    apt-key adv --keyserver keyserver.ubuntu.com --recv-keys EEA14886 && apt-get update && apt-get install --no-install-recommends -y curl dnsutils oracle-java8-installer ca-certificates && \\\n    locale-gen en_US.UTF-8 en_us && dpkg-reconfigure locales && dpkg-reconfigure locales && locale-gen C.UTF-8 && /usr/sbin/update-locale LANG=C.UTF-8 && rm -rf /var/lib/apt/lists/*;\n\nCOPY ./src /opt/thrust/lib\nCOPY ./scripts/thrust.sh /opt/thrust/bin/thrust.sh\n\nRUN ln -s /opt/thrust/bin/thrust.sh /usr/local/bin/thrust\n\n# docker build -t thrustjs/thrust:latest -f hotspot.Dockerfile .\n# docker run --rm --network=\"host\" -v $(pwd):/app -w /app/test thrustjs/thrust:latest /bin/sh -c \"thrust install && thrust test.js\""
}