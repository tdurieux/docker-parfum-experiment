{
  "startTime": 1674252424266,
  "endTime": 1674252425541,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 97,
        "lineEnd": 97,
        "columnStart": 4,
        "columnEnd": 22
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG TARGET=server\n\n# Can be used in case a proxy is necessary\nARG GOPROXY\n\n# Build tcheck binary\nFROM golang:1.17-alpine3.15 AS tcheck\n\nWORKDIR /go/src/github.com/uber/tcheck\n\nCOPY go.* ./\nRUN go build -mod=readonly -o /go/bin/tcheck github.com/uber/tcheck\n\n# Build Cadence binaries\nFROM golang:1.17-alpine3.13 AS builder\n\nARG RELEASE_VERSION\n\nRUN apk add --update --no-cache ca-certificates make git curl mercurial unzip\n\nWORKDIR /cadence\n\n# Making sure that dependency is not touched\nENV GOFLAGS=\"-mod=readonly\"\n\n# Copy go mod dependencies and build cache\nCOPY go.* ./\nRUN go mod download\n\nCOPY . .\nRUN rm -fr .bin .build\n\nENV CADENCE_RELEASE_VERSION=$RELEASE_VERSION\n\n# bypass codegen, use committed files.  must be run separately, before building things.\nRUN make .fake-codegen\nRUN CGO_ENABLED=0 make copyright cadence-cassandra-tool cadence-sql-tool cadence cadence-server cadence-bench cadence-canary\n\n\n# Download dockerize\nFROM alpine:3.15 AS dockerize\n\nRUN apk add --no-cache openssl\n\nENV DOCKERIZE_VERSION v0.6.1\nRUN wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-alpine-linux-amd64-$DOCKERIZE_VERSION.tar.gz \\\n    && tar -C /usr/local/bin -xzvf dockerize-alpine-linux-amd64-$DOCKERIZE_VERSION.tar.gz \\\n    && rm dockerize-alpine-linux-amd64-$DOCKERIZE_VERSION.tar.gz \\\n    && echo \"**** fix for host id mapping error ****\" \\\n    && chown root:root /usr/local/bin/dockerize\n\n\n# Alpine base image\nFROM alpine:3.15 AS alpine\n\nRUN apk add --update --no-cache ca-certificates tzdata bash curl\n\n# set up nsswitch.conf for Go's \"netgo\" implementation\n# https://github.com/gliderlabs/docker-alpine/issues/367#issuecomment-424546457\nRUN test ! -e /etc/nsswitch.conf && echo 'hosts: files dns' > /etc/nsswitch.conf\n\nSHELL [\"/bin/bash\", \"-c\"]\n\n\n# Cadence server\nFROM alpine AS cadence-server\n\nENV CADENCE_HOME /etc/cadence\nRUN mkdir -p /etc/cadence\n\nCOPY --from=tcheck /go/bin/tcheck /usr/local/bin\nCOPY --from=dockerize /usr/local/bin/dockerize /usr/local/bin\nCOPY --from=builder /cadence/cadence-cassandra-tool /usr/local/bin\nCOPY --from=builder /cadence/cadence-sql-tool /usr/local/bin\nCOPY --from=builder /cadence/cadence /usr/local/bin\nCOPY --from=builder /cadence/cadence-server /usr/local/bin\nCOPY --from=builder /cadence/schema /etc/cadence/schema\n\nCOPY docker/entrypoint.sh /docker-entrypoint.sh\nCOPY config/dynamicconfig /etc/cadence/config/dynamicconfig\nCOPY config/credentials /etc/cadence/config/credentials\nCOPY docker/config_template.yaml /etc/cadence/config\nCOPY docker/start-cadence.sh /start-cadence.sh\n\nWORKDIR /etc/cadence\n\nENV SERVICES=\"history,matching,frontend,worker\"\n\nEXPOSE 7933 7934 7935 7939\nENTRYPOINT [\"/docker-entrypoint.sh\"]\nCMD /start-cadence.sh\n\n\n# All-in-one Cadence server\nFROM cadence-server AS cadence-auto-setup\n\nRUN apk add --update --no-cache ca-certificates py3-pip mysql-client\nRUN pip3 install --no-cache-dir cqlsh && cqlsh --version\n\nCOPY docker/start.sh /start.sh\n\nCMD /start.sh\n\n\n# Cadence CLI\nFROM alpine AS cadence-cli\n\nCOPY --from=tcheck /go/bin/tcheck /usr/local/bin\nCOPY --from=builder /cadence/cadence /usr/local/bin\n\nENTRYPOINT [\"cadence\"]\n\n# Cadence Canary\nFROM alpine AS cadence-canary\n\nCOPY --from=builder /cadence/cadence-canary /usr/local/bin\nCOPY --from=builder /cadence/cadence /usr/local/bin\n\nCMD [\"/usr/local/bin/cadence-canary\", \"--root\", \"/etc/cadence-canary\", \"start\"]\n\n# Cadence Bench\nFROM alpine AS cadence-bench\n\nCOPY --from=builder /cadence/cadence-bench /usr/local/bin\nCOPY --from=builder /cadence/cadence /usr/local/bin\n\nCMD [\"/usr/local/bin/cadence-bench\", \"--root\", \"/etc/cadence-bench\", \"start\"]\n\n# Final image\nFROM cadence-${TARGET}\n"
}