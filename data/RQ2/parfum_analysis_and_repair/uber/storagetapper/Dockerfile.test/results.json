{
  "startTime": 1674253356188,
  "endTime": 1674253356723,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 22,
        "columnEnd": 60
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 148
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 148
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 22,
        "columnEnd": 60
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 148
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 172
      }
    }
  ],
  "repairedDockerfile": "FROM debian:stretch\n\nRUN apt-get update && apt-get install --no-install-recommends -y apt-transport-https && rm -rf /var/lib/apt/lists/*;\n\nRUN echo \"deb http://deb.debian.org/debian stretch main contrib\\n \\\ndeb http://deb.debian.org/debian-security stretch/updates main\" > /etc/apt/sources.list && apt-get update && apt-get -y --force-yes dist-upgrade\n\nRUN DEBIAN_FRONTEND=\"noninteractive\" apt-get --no-install-recommends install -y --force-yes lsb-release wget default-jre sudo vim openssh-server curl netcat build-essential && rm -rf /var/lib/apt/lists/*;\n\nCOPY scripts/install_mysql.sh /scripts/\nRUN GOPATH=$HOME/gopath PATH=$HOME/gopath/bin:$PATH DOCKER_BUILD=1 /bin/sh scripts/install_mysql.sh\nCOPY scripts/install_go.sh /scripts/\nRUN GOPATH=$HOME/gopath PATH=$HOME/gopath/bin:$PATH DOCKER_BUILD=1 /bin/sh scripts/install_go.sh\nCOPY scripts/start_kafka.sh /scripts/\nCOPY scripts/install_kafka.sh /scripts/\nRUN GOPATH=$HOME/gopath PATH=$HOME/gopath/bin:$PATH DOCKER_BUILD=1 /bin/sh scripts/install_kafka.sh\nCOPY scripts/install_hadoop.sh /scripts/\nRUN GOPATH=$HOME/gopath PATH=$HOME/gopath/bin:$PATH DOCKER_BUILD=1 /bin/sh scripts/install_hadoop.sh\nCOPY scripts/install_sql.sh /scripts/\nRUN GOPATH=$HOME/gopath PATH=$HOME/gopath/bin:$PATH DOCKER_BUILD=1 /bin/sh scripts/install_sql.sh\nCOPY scripts/install_hive.sh /scripts/\nRUN GOPATH=$HOME/gopath PATH=$HOME/gopath/bin:$PATH DOCKER_BUILD=1 /bin/sh scripts/install_hive.sh\n\nCOPY scripts/prepare_test_env.sh /scripts/\n\nCOPY scripts/docker_test_entry.sh /\nRUN chmod +x /docker_test_entry.sh\n\nRUN echo 'set -x;sh scripts/prepare_test_env.sh\\nexport GOPATH=~/gopath;export PATH=\"$PATH:/usr/local/go/bin:$GOPATH/bin\"\\nexport STORAGETAPPER_ENVIRONMENT=test' >/root/.bashrc\n\nWORKDIR /storagetapper\n\nENV USER=root\nRUN echo \"export PATH=$PATH:/root/gopath/bin:/usr/local/go/bin\" > /root/.bashrc\n\nCMD /bin/bash -l\n"
}