{
  "startTime": 1674252454742,
  "endTime": 1674252455746,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 7
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 7
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 46
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:latest\n\nENV DEBIAN_FRONTEND=noninteractive\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y \\\n    bat \\\n    binutils \\\n    clang \\\n    cscope \\\n    ctags \\\n    curl \\\n    emacs \\\n    fd-find \\\n    fish \\\n    fzf \\\n    gcc \\\n    gdb \\\n    git \\\n    grub2 \\\n    htop \\\n    language-pack-en \\\n    llvm \\\n    locate \\\n    make \\\n    ncurses-dev \\\n    neovim \\\n    netcat \\\n    perl \\\n    python3 \\\n    python3-pip \\\n    qemu-system-x86 \\\n    silversearcher-ag \\\n    software-properties-common \\\n    ssh \\\n    tig \\\n    tmux \\\n    valgrind \\\n    xorriso \\\n    xxd && rm -rf /var/lib/apt/lists/*;\n\n# for powerline\nRUN locale-gen en_US.UTF-8\nENV LANG en_US.UTF-8\nENV LANGUAGE en_US:en\nENV LC_ALL en_US.UTF-8\n\nRUN add-apt-repository -y ppa:lazygit-team/release && \\\n    apt-get update && \\\n    apt-get install --no-install-recommends -y fonts-powerline lazygit && rm -rf /var/lib/apt/lists/*;\n\nRUN pip3 install --no-cache-dir -U pandas numpy seaborn scipy matplotlib docopt\n\n# install nvim plugins before I get in\nRUN sh -c 'curl -fLo \"${XDG_DATA_HOME:-$HOME/.local/share}\"/nvim/site/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim' && \\\n    git clone https://github.com/khale/neovim-config && \\\n    mkdir -p /root/.config/nvim && \\\n    mv neovim-config/init.vim /root/.config/nvim/ && \\\n    rm -rf neovim-config && \\\n    nvim --headless +PlugInstall +qall\n\nRUN git clone https://github.com/khale/dotfiles && \\\n    mkdir -p /root/.config/fish && \\\n    mv dotfiles/fish-config /root/.config/fish/config.fish && \\\n    mv dotfiles/gitnow-config ~/.gitflow && \\\n    git clone https://github.com/khale/fisher-config && \\\n    mv fisher-config/fishfile /root/.config/fish/ && \\\n    rm -rf fisher-config && \\\n    git clone https://github.com/khale/.tmux && \\\n    cp .tmux/.tmux.conf /root && \\\n    cp .tmux/.tmux.conf.local /root\n\nWORKDIR /hack\n\nCMD [\"/usr/bin/fish\"]\n\n"
}