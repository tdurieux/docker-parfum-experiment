{
  "startTime": 1674254867739,
  "endTime": 1674254868632,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 102,
        "columnEnd": 130
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 98
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 98
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 98
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 122
      }
    }
  ],
  "repairedDockerfile": "FROM nvidia/cuda:11.4.2-devel-ubuntu20.04 AS base\n\nRUN apt-get update && \\\n    apt-get upgrade -y\n\n# SCAMP build dependancies\nRUN DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y python3-pip zlib1g-dev cmake golang-go clang && pip install --no-cache-dir --no-input cmake && rm -rf /var/lib/apt/lists/*;\n\nCOPY . /SCAMP\n\n# If a build directory already exists remove it\nRUN rm -rf /SCAMP/build\n\n# Build SCAMP\nRUN mkdir /SCAMP/build && cd /SCAMP/build && cmake -DSCAMP_ENABLE_BINARY_DISTRIBUTION=1 -DBUILD_CLIENT_SERVER=1 -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_C_COMPILER=clang .. && make -j8\n\n# We only need the CUDA runtime for the final container\nFROM nvidia/cuda:11.4.2-runtime-ubuntu20.04\n\n# Copy the SCAMP binaries and tests to the final container\nRUN mkdir /SCAMP\nCOPY --from=0 /SCAMP/build /SCAMP/build\nCOPY --from=0 /SCAMP/test /SCAMP/test\n"
}