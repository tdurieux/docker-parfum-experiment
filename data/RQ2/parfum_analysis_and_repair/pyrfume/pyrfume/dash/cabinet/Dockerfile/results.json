{
  "startTime": 1674218962328,
  "endTime": 1674218963840,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 7,
        "columnEnd": 107
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 26,
        "columnEnd": 59
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM tiangolo/uwsgi-nginx-flask:python3.7\nLABEL maintainer=\"maintainer\"\n\n##### Miniconda installation #####\nRUN apt-get -qq update && apt-get -qq --no-install-recommends -y install curl bzip2 \\\n    && curl -f -sSL https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -o /tmp/miniconda.sh \\\n    && bash /tmp/miniconda.sh -bfp /usr/local \\\n    && rm -rf /tmp/miniconda.sh \\\n    && conda install -y python=3 \\\n    && conda update conda \\\n    && apt-get -qq -y remove curl bzip2 \\\n    && apt-get -qq -y autoremove \\\n    && apt-get autoclean \\\n    && rm -rf /var/lib/apt/lists/* /var/log/dpkg.log \\\n    && conda clean --all --yes\n\nENV PATH /opt/conda/bin:$PATH\n\n##### Conda packages #####\nRUN conda install -c conda-forge -y rdkit\nRUN pip install --no-cache-dir -U pip\n\n##### Create pyrfume directory #####\nRUN mkdir /pyrfume\nWORKDIR /pyrfume\n\n#### Install pyrfume (root of the build context) #####\nCOPY setup.py ./\nCOPY requirements.txt ./\nCOPY pyrfume ./pyrfume\nRUN pip install --no-cache-dir -e .\n\n#### Dash stuff ####\nCOPY dash/mainland/app /app\nCOPY dash/mainland/requirements.txt /app/dash-requirements.txt\nRUN pip install --no-cache-dir -r /app/dash-requirements.txt\n\nENV NGINX_WORKER_PROCESSES auto"
}