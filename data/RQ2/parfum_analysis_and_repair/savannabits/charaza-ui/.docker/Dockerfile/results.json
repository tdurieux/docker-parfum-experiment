{
  "startTime": 1674252594484,
  "endTime": 1674252595506,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 32,
        "columnEnd": 51
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 33,
        "columnStart": 26,
        "columnEnd": 7
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 3,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 3,
        "columnEnd": 28
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 33,
        "columnStart": 26,
        "columnEnd": 7
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 3,
        "columnEnd": 28
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM php:7.4-apache\n\nMAINTAINER Sam Maosa <maosa.sam@gmail.com>\n\nENV APP_ROOT /var/www/html\nENV DOCKER_PATH .docker\n\nRUN apt-get update -qq && apt-get install --no-install-recommends -y \\\n  git \\\n  curl \\\n  nano \\\n  g++ \\\n  sudo \\\n  build-essential \\\n  mariadb-client \\\n  iputils-ping \\\n  libcurl3-dev \\\n  libzip-dev \\\n  libjpeg-dev \\\n  libpq-dev \\\n  libpng-dev \\\n  libonig-dev \\\n  libxml2-dev \\\n  libxrender1 \\\n  libfontconfig1 \\\n  libx11-dev \\\n  libjpeg62 \\\n  libxtst6 \\\n  libfreetype6-dev \\\n  libsqlite3-dev \\\n  libldap2-dev \\\n  libssl-dev \\\n  zip \\\n  unzip && rm -rf /var/lib/apt/lists/*;\n\n# extensions php install\nRUN docker-php-ext-configure gd --with-freetype --with-jpeg\nRUN docker-php-ext-configure ldap --with-libdir=lib/x86_64-linux-gnu/\n# Install PHP extensions\nRUN docker-php-ext-install pdo_mysql \\\n    tokenizer \\\n    fileinfo \\\n    ctype \\\n    mbstring \\\n    exif \\\n    intl \\\n    pcntl \\\n    bcmath \\\n    gd \\\n    json \\\n    curl \\\n    xml \\\n    zip \\\n    ldap \\\n    pdo_sqlite\n# Node.js\nRUN curl -f -sL https://deb.nodesource.com/setup_14.x | bash - \\\n&& apt-get install --no-install-recommends -y nodejs && npm i npm@latest -g && npm cache clean --force; && rm -rf /var/lib/apt/lists/*;\n\n# cross-env global\nRUN npm install -g cross-env yarn && npm cache clean --force;\n\n# Composer install\nRUN curl -f -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer\nRUN pecl install redis\nRUN docker-php-ext-enable redis\n\nWORKDIR $APP_ROOT\nARG user\nARG uid\nRUN useradd -G www-data,root -u $uid -d /home/$user $user && echo \"$user:$user\" | chpasswd && adduser $user sudo\nRUN mkdir -p /home/$user/.composer && \\\n    chown -R $user:$user /home/$user\nRUN chown -R $user:www-data $APP_ROOT\nCOPY $DOCKER_PATH/vhost.conf /etc/apache2/sites-available/vhost.conf\nCOPY . .\nRUN a2enmod rewrite headers\nRUN a2dissite 000-default.conf\nRUN a2ensite vhost.conf\n# Clean up APT when done\nRUN apt-get clean && rm -rf /var/lib/apt/lists/*\nRUN service apache2 restart\n##Run initial commands\nENTRYPOINT [\"./entry.sh\"]\nCMD [\"$@\"]\n"
}