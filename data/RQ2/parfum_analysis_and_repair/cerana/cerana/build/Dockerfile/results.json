{
  "startTime": 1674220772370,
  "endTime": 1674220772824,
  "originalSmells": [
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 58,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 2,
        "columnEnd": 75
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 2,
        "columnEnd": 75
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM java:8-jdk\n\nARG USER=cerana\nARG GROUP=cerana\nARG UID=10000\nARG GID=10000\nARG HOME=/home/$USER\n\nARG JENKINS_VERSION=2.5\nARG JENKINS_SHA=5e669825a955c9091ac8a858f4f6dcae782f3d87\nARG JENKINS_WEB_PORT=8080\nARG JENKINS_SLAVE_PORT=50000\nARG JENKINS_HOME=${HOME}/.jenkins\n\nUSER root\nRUN apt-get update && \\\n  apt-get install --no-install-recommends -y git curl zip bzip2 adduser graphviz sudo time nano man && rm -rf /var/lib/apt/lists/*;\n\n#+\n# Normally Jenkins runs as the jenkins user. In this case it defaults to\n# cerana.\n#-\nRUN adduser --disabled-password --gecos '' --uid ${UID} ${USER}\nENV USER ${USER}\n\n# Use tini as subreaper in Docker container to adopt zombie processes\nENV TINI_SHA 066ad710107dc7ee05d3aa6e4974f01dc98f3888\n\nRUN curl -fsSL https://github.com/krallin/tini/releases/download/v0.5.0/tini-static \\\n  -o /bin/tini && chmod +x /bin/tini \\\n  && echo \"$TINI_SHA  /bin/tini\" | sha1sum -c -\n\n#+++++++++++++++\n# For builds using Nix.\n#+++++++++++++++\nVOLUME /nix\n\nENV LC_ALL C\n\n#+++++++++++++++\n# For Jenkins\n# NOTE: Much of this is derived from: https://github.com/jenkinsci/docker\n#+++++++++++++++\n\n#+\n# Jenkins home directory is a volume, so configuration and build history\n# can be persisted and survive image upgrades\n#-\nVOLUME ${HOME}\n\n#+\n# Plugins and config for this are here.\n#-\nCOPY jenkins.sh /usr/local/bin/jenkins.sh\nCOPY plugins.sh /usr/local/bin/plugins.sh\nRUN mkdir -p /usr/share/jenkins/ref/init.groovy.d\nCOPY init.groovy /usr/share/jenkins/ref/init.groovy.d/tcp-slave-agent-port.groovy\n\nRUN curl -fsSL \\\n  https://repo.jenkins-ci.org/public/org/jenkins-ci/main/jenkins-war/${JENKINS_VERSION}/jenkins-war-${JENKINS_VERSION}.war \\\n  -o /usr/share/jenkins/jenkins.war && \\\n  echo \"$JENKINS_SHA  /usr/share/jenkins/jenkins.war\" | sha1sum -c -\n\nRUN chown -R ${USER} /usr/share/jenkins/ref\n\nEXPOSE ${JENKINS_WEB_PORT}\nEXPOSE ${JENKINS_SLAVE_PORT}\n\nENV JENKINS_UC https://updates.jenkins.io\nENV JENKINS_VERSION ${JENKINS_VERSION}\nENV JENKINS_SHA ${JENKINS_SHA}\nENV COPY_REFERENCE_FILE_LOG ${JENKINS_HOME}/copy_reference_file.log\nENV JENKINS_HOME ${JENKINS_HOME}\nENV JENKINS_SLAVE_AGENT_PORT ${JENKINS_SLAVE_PORT}\nUSER ${USER}\n\n#+\n# For container startup.\n#-\nENTRYPOINT [\"/bin/tini\", \"--\", \"/usr/local/bin/jenkins.sh\"]\n"
}