{
  "startTime": 1674253154594,
  "endTime": 1674253155422,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 2,
        "columnEnd": 43
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "###############################################################################\n# meatwallace/meatbox-alpine\n###\nFROM mhart/alpine-node:latest\n\nARG USER_SUDOERS_FILE=\"10-user\"\n\n# specific to this system's setup\nARG MEATBOX_USER=\"meatwallace\"\nARG MEATBOX_PASSWORD\nARG MEATBOX_SETUP_SUDOERS_FILE=\"20-setup\"\n\nRUN \\\n  # required by our setup script\n  apk add --no-cache \\\n    bash \\\n    curl \\\n    git \\\n    gnupg \\\n    sudo >/dev/null && \\\n  # add our user account & set the password\n  adduser -D -s /bin/zsh \"${MEATBOX_USER}\" users && \\\n  echo \"${MEATBOX_USER}:${MEATBOX_PASSWORD}\" | chpasswd && \\\n  # add a sudo config file that allows our user to use `sudo`\n  echo \"${MEATBOX_USER} ALL=(ALL) ALL\" | tee -a \"/etc/sudoers.d/${USER_SUDOERS_FILE}\" && \\\n  # update the file to have the correct permissions\n  chmod 0440 \"/etc/sudoers.d/${USER_SUDOERS_FILE}\" && \\\n  # add a temporary sudo config file allowing our user to use pacman & make without\n  # a password so our setup script doesn't require a custom `askpass` just for\n  # docker\n  echo \"${MEATBOX_USER} ALL=NOPASSWD: ALL\" | tee -a \"/etc/sudoers.d/${MEATBOX_SETUP_SUDOERS_FILE}\" && \\\n  chmod 0440 \"/etc/sudoers.d/${MEATBOX_SETUP_SUDOERS_FILE}\"\n\n# swap into our user account\nUSER \"${MEATBOX_USER}\"\nSHELL [\"/bin/bash\", \"-c\"]\n\n# we prevent caching of our setup script by injecting our current commit SHA1 here\nARG MEATBOX_CHECKOUT_SHA1\n\nRUN \\\n\n  echo \"${MEATBOX_PASSWORD}\" | sudo -S apk add --no-cache \\\n    binutils \\\n    coreutils \\\n    findutils \\\n    grep \\\n    pciutils \\\n    usbutils \\\n    util-linux >/dev/null && \\\n  # packages required by `asdf` we'll clean up later\n  echo \"${MEATBOX_PASSWORD}\" | sudo -S apk add --no-cache --virtual .build-dependencies \\\n    build-base \\\n    bzip2-dev \\\n    linux-headers \\\n    libffi-dev \\\n    openssl-dev \\\n    readline-dev \\\n    sqlite-dev \\\n    unzip \\\n    zlib-dev >/dev/null && \\\n  # run our system setup script from our staging alias\n  curl -f \"https://meatbox.meatwallace.now.sh\" | MEATBOX_CHECKOUT_SHA1=\"${MEATBOX_CHECKOUT_SHA1}\" bash && \\\n  . \"$HOME/.bashrc\" && \\\n  meatbox bootstrap && \\\n  . \"$HOME/.bashrc\" && \\\n  meatbox setup && \\\n  # remove our build dependencies\n  echo \"${MEATBOX_PASSWORD}\" | sudo -S apk del .build-dependencies >/dev/null && \\\n  # clean up our any temp files that may have been created\n  rm -rf tmp/* >/dev/null && \\\n  # clean up our yarn offline mirror\n  rm -rf \"$HOME/.yarn-offline-mirror\" \\\n  # remove the sudo config we previously created to make our docker setup work\n  echo \"${MEATBOX_PASSWORD}\" | sudo -S rm \"/etc/sudoers.d/${MEATBOX_SETUP_SUDOERS_FILE}\"\n\nSHELL [\"/bin/zsh\", \"-c\"]\nCMD [\"/bin/zsh\"]\n"
}