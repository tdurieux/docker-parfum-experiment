{
  "startTime": 1674254460646,
  "endTime": 1674254461210,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 16
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:14-alpine as builder\n\n# Build application and add additional files\n\nWORKDIR /ghostfolio\n\n# Only add basic files without the application itself to avoid rebuilding\n# layers when files (package.json etc.) have not changed\nCOPY ./CHANGELOG.md CHANGELOG.md\nCOPY ./LICENSE LICENSE\nCOPY ./package.json package.json\nCOPY ./yarn.lock yarn.lock\nCOPY ./prisma/schema.prisma prisma/schema.prisma\n\nRUN apk add --no-cache python3 g++ make openssl git\nRUN yarn install && yarn cache clean;\n\n# See https://github.com/nrwl/nx/issues/6586 for further details\nCOPY ./decorate-angular-cli.js decorate-angular-cli.js\nRUN node decorate-angular-cli.js\n\nCOPY ./angular.json angular.json\nCOPY ./nx.json nx.json\nCOPY ./replace.build.js replace.build.js\nCOPY ./jest.preset.js jest.preset.js\nCOPY ./jest.config.ts jest.config.ts\nCOPY ./tsconfig.base.json tsconfig.base.json\nCOPY ./libs libs\nCOPY ./apps apps\n\nRUN yarn build:all\n\n# Prepare the dist image with additional node_modules\nWORKDIR /ghostfolio/dist/apps/api\n# package.json was generated by the build process, however the original\n# yarn.lock needs to be used to ensure the same versions\nCOPY ./yarn.lock /ghostfolio/dist/apps/api/yarn.lock\n\nRUN yarn\nCOPY prisma /ghostfolio/dist/apps/api/prisma\n\n# Overwrite the generated package.json with the original one to ensure having\n# all the scripts\nCOPY package.json /ghostfolio/dist/apps/api\nRUN yarn database:generate-typings\n\n# Image to run, copy everything needed from builder\nFROM node:14-alpine\nCOPY --from=builder /ghostfolio/dist/apps /ghostfolio/apps\nWORKDIR /ghostfolio/apps/api\nEXPOSE 3333\nCMD [ \"node\", \"main\" ]\n"
}