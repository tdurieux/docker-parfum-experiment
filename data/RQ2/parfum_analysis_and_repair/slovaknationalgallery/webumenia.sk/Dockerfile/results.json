{
  "startTime": 1674248828968,
  "endTime": 1674248829505,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 11,
        "columnStart": 28,
        "columnEnd": 10
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 11,
        "columnStart": 28,
        "columnEnd": 10
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM php:7.4-fpm\n\nARG WITH_XDEBUG=false\n\nRUN curl -f -sL https://deb.nodesource.com/setup_12.x | bash - \\\n    && apt-get update -y && apt-get install --no-install-recommends -y \\\n    libpng-dev \\\n    libjpeg-dev \\\n    libzip-dev \\\n    unzip \\\n    git \\\n    nodejs && rm -rf /var/lib/apt/lists/*;\n\n# Adding PHP extensions\nRUN docker-php-ext-configure gd --with-jpeg \\\n    && docker-php-ext-install \\\n    pdo_mysql \\\n    gd \\\n    zip \\\n    exif\n\nRUN echo \"memory_limit=512M\" > $PHP_INI_DIR/conf.d/memory-limit.ini\n\n\nRUN if [ $WITH_XDEBUG = \"true\" ] ; then \\\n        pecl install xdebug; \\\n        docker-php-ext-enable xdebug; \\\n        echo \"error_reporting=E_ALL\" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini; \\\n        echo \"display_startup_errors=On\" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini; \\\n        echo \"display_errors=On\" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini; \\\n        echo \"xdebug.remote_enable=1\" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini; \\\n        echo \"xdebug.remote_connect_back=1\" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini; \\\n    fi ;\n\n# Install php dependencies\nCOPY --from=composer:1.8 /usr/bin/composer /usr/bin/composer\n\nWORKDIR /var/www\n\nCOPY package.json package-lock.json ./\nRUN npm install && npm cache clean --force;\n\n# Install app dependencies\nCOPY composer.json composer.lock ./\nRUN composer install --no-autoloader --no-scripts\n\nCOPY . .\n\n# Re-run composer, this time with autoloader & scripts\nRUN composer install --optimize-autoloader\n"
}