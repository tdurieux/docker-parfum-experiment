{
  "startTime": 1674217822634,
  "endTime": 1674217823860,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 41,
        "columnEnd": 69
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 31,
        "lineEnd": 34,
        "columnStart": 22,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 39,
        "lineEnd": 40,
        "columnStart": 22,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 45,
        "lineEnd": 46,
        "columnStart": 22,
        "columnEnd": 18
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 31,
        "lineEnd": 34,
        "columnStart": 22,
        "columnEnd": 29
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 39,
        "lineEnd": 40,
        "columnStart": 22,
        "columnEnd": 45
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 45,
        "lineEnd": 46,
        "columnStart": 22,
        "columnEnd": 18
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# Build Nexus/LISP docker image based on a Debian Linux kernel. This\n# Dockerfile is for the Tritium release of the TAO. The docker image name\n# should be called \"tritium\". To build, use the \"docker build\" command in\n# the LLL-TAO git repo directory:\n#\n#     cd LLL-TAO\n#     docker build -t tritium .\n#\n# If you don't have docker on your MacOS system, download it at:\n#\n#     https://download.docker.com/mac/stable/Docker.dmg\n#\n# Once you install it you can run docker commands in a Terminal window.\n#\n# For instructions on how to use this Dockerfile, see ./docs/how-to-docker.md.\n#\n\n#\n# We prefer Debian as a base OS.\n#\nFROM debian:latest\n\n#\n# Get latest lispers.net release from Dropbox.\n#\nENV LISP_URL https://www.dropbox.com/s/e87heamhl9t5asz/lisp-nexus.tgz\n\n#\n# Install tools we need for a networking geek.\n#\nRUN apt-get update && apt-get -yq --no-install-recommends install \\\n    gcc libc-dev python python-dev libffi-dev openssl libpcap-dev \\\n    curl wget iptables iproute2 tcpdump tcsh sudo traceroute iputils-ping \\\n    net-tools procps emacs jq && rm -rf /var/lib/apt/lists/*;\n\n#\n# Install Nexus dependencies.\n#\nRUN apt-get update && apt-get -yq --no-install-recommends install \\\n    build-essential libdb++-dev libssl1.0-dev && rm -rf /var/lib/apt/lists/*;\n\n#\n# Install Nexus application dependencies.\n#\nRUN apt-get update && apt-get -yq --no-install-recommends install \\\n    python-qrtools && rm -rf /var/lib/apt/lists/*;\n\n#\n# Install LISP release in /lispers.net directory.\n#\nRUN mkdir /lispers.net; cd /lispers.net; curl -f --insecure -L $LISP_URL | gzip -dc | tar -xf -\n\n#\n# Install python modules the lispers.net directory depends on.\n#\nRUN python /lispers.net/get-pip.py\nRUN pip install --no-cache-dir -r /lispers.net/pip-requirements.txt\n\n#\n# Put user in the /lispers.net directory when you attach to container.\n#\nEXPOSE 8080\nWORKDIR /lispers.net\n\n#\n# Put Nexus source-tree in docker image and build it..\n#\nRUN mkdir /nexus\nRUN mkdir /nexus/build\nCOPY ./makefile.cli /nexus\nCOPY ./src /nexus/src/\n\nENV NEXUS_DEBUG 0\nRUN cd /nexus; make -j 8 -f makefile.cli ENABLE_DEBUG=$NEXUS_DEBUG\n\n#\n# Copy Nexus startup files.\n#\nCOPY config/run-nexus /nexus/run-nexus\nCOPY config/nexus.conf /nexus/nexus.conf.default\nCOPY config/curl-nexus /nexus/curl-nexus\nCOPY config/nexus-save-data /nexus/nexus-save-data\nCOPY lisp/whoarepeers.py /nexus/whoarepeers.py\n\n#\n# Copy LISP startup config.\n#\nCOPY lisp/RL /lispers.net/RL\nCOPY lisp/provision-lisp.py /lispers.net/provision-lisp.py\nCOPY lisp/lisp.config.xtr /lispers.net/lisp.config.xtr\nCOPY lisp/lisp-join.py /lispers.net/lisp-join.py\nCOPY lisp/make-crypto-eid.py /lispers.net/make-crypto-eid.py\n\n#\n# Add some useful tcsh alias commands.\n#\nCOPY config/.aliases /root/.aliases\nCOPY config/.cshrc /root/.cshrc\n\n#\n# Startup lispers.net and nexus. Output some useful data and drop into tcsh.\n#\nENV RUN_LISP    /lispers.net/RL\nENV RUN_NEXUS   /nexus/run-nexus\nENV RUN_GETINFO /nexus/nexus getinfo\nENV RUN_PSLISP  /lispers.net/pslisp\n\nCMD echo \"Starting LISP ...\"; $RUN_LISP;   \\\n    echo \"Network coming up ...\"; sleep 2; \\\n    echo \"Starting Nexus ...\"; $RUN_NEXUS; \\\n#   sleep 1; $RUN_PSLISP; $RUN_GETINFO; tcsh\n    sleep 1; $RUN_PSLISP; tcsh\n"
}