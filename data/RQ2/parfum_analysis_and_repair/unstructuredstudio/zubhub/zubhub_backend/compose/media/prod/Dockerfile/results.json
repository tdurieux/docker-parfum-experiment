{
  "startTime": 1674219246634,
  "endTime": 1674219249258,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 5,
        "columnEnd": 42
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 5,
        "columnEnd": 53
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 5,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 5,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 5,
        "columnEnd": 30
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.8-slim-buster\n\nENV PYTHONUNBUFFERED 1\n\n# Python build stage\n\nRUN apt-get update \\\n  # dependencies for building Python packages \\\n  && apt-get install --no-install-recommends -y build-essential procps netcat \\\n  # psycopg2 dependencies\n  && apt-get install --no-install-recommends -y libpq-dev \\\n  # Translations dependencies\n  && apt-get install --no-install-recommends -y gettext \\\n  && apt-get install --no-install-recommends ffmpeg -y \\\n  # cleaning up unused files\n  && apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false \\\n  && rm -rf /var/lib/apt/lists/*\n\n\nWORKDIR /home\n\n# copying neccessary files to work directory\nCOPY ./compose/media/requirements.txt /home/\n\nRUN pip install --no-cache-dir --upgrade pip wheel \\\n  # Requirements are installed here to ensure they will be cached.\n  && pip install --no-cache-dir -r /home/requirements.txt\n\n\n# copy project\nCOPY ./media/ /home/media/\n\n\nCOPY ./compose/media/prod/start /home/start\nRUN sed -i 's/\\r$//g' /home/start\nRUN chmod +x /home/start\n\nCOPY ./compose/docker_secrets_expand.sh /docker_secrets_expand.sh\nRUN sed -i 's/\\r$//g' /docker_secrets_expand.sh\nRUN chmod +x /docker_secrets_expand.sh\n\nENTRYPOINT [ \"/home/start\" ]"
}