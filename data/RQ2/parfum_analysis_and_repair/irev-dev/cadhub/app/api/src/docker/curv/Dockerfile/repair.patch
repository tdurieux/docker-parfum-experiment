diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/irev-dev/cadhub/app/api/src/docker/curv/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/irev-dev/cadhub/app/api/src/docker/curv/Dockerfile/repaired.Dockerfile
index 3c6a8df..6a5b0dd 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/irev-dev/cadhub/app/api/src/docker/curv/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/irev-dev/cadhub/app/api/src/docker/curv/Dockerfile/repaired.Dockerfile
@@ -4,11 +4,11 @@ ARG DEBIAN_FRONTEND=noninteractive
 
 
 RUN apt-get update --fix-missing -qq
-RUN apt-get update --fix-missing && apt-get -y -qq install software-properties-common dirmngr apt-transport-https lsb-release ca-certificates xvfb
+RUN apt-get update --fix-missing && apt-get -y --no-install-recommends -qq install software-properties-common dirmngr apt-transport-https lsb-release ca-certificates xvfb && rm -rf /var/lib/apt/lists/*;
 
 RUN apt-get update -qq
 
-RUN apt-get -y -qq install git \
+RUN apt-get -y --no-install-recommends -qq install git \
     software-properties-common \
     xvfb unzip maim clang cmake \
     git-core libboost-all-dev \
@@ -18,7 +18,7 @@ RUN apt-get -y -qq install git \
     libxcursor-dev libxinerama-dev \
     libxrandr-dev libglu1-mesa-dev \
     libgles2-mesa-dev libgl1-mesa-dev \
-    libxi-dev
+    libxi-dev && rm -rf /var/lib/apt/lists/*;
 
 # Use commit to make sure build is reproduceable
 RUN git clone --recursive https://github.com/curv3d/curv && \
@@ -30,17 +30,17 @@ RUN git clone --recursive https://github.com/curv3d/curv && \
 ADD src/docker/common/node14source_setup.sh /nodesource_setup.sh
 RUN ["chmod", "+x", "/nodesource_setup.sh"]
 RUN bash nodesource_setup.sh
-RUN apt-get install -y nodejs
+RUN apt-get install --no-install-recommends -y nodejs && rm -rf /var/lib/apt/lists/*;
 
 # Install aws-lambda-cpp build dependencies, this is for the post install script in aws-lambda-ric (in package.json)
 RUN apt-get update && \
-    apt-get install -y \
+    apt-get install --no-install-recommends -y \
     g++ \
     make \
     cmake \
     unzip \
     automake autoconf libtool \
-    libcurl4-openssl-dev
+    libcurl4-openssl-dev && rm -rf /var/lib/apt/lists/*;
 
 # Add the lambda emulator for local dev, (see entrypoint.sh for where it's used),
 # I have the file locally (gitignored) to speed up build times (as it downloads everytime),
@@ -51,8 +51,8 @@ RUN ["chmod", "+x", "/usr/local/bin/aws-lambda-rie"]
 
 WORKDIR /var/task/
 COPY package*.json /var/task/
-RUN npm install
-RUN npm install aws-lambda-ric@1.0.0
+RUN npm install && npm cache clean --force;
+RUN npm install aws-lambda-ric@1.0.0 && npm cache clean --force;
 
 RUN echo "cadhub-concat-split" > /var/task/cadhub-concat-split