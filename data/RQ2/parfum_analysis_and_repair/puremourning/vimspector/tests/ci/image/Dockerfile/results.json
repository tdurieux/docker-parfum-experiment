{
  "startTime": 1674220452648,
  "endTime": 1674220453818,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 2,
        "columnEnd": 48
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 66
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 93
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 89,
        "lineEnd": 89,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 12,
        "columnStart": 2,
        "columnEnd": 47
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 33,
        "columnStart": 2,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 47,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 47,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 12,
        "columnStart": 2,
        "columnEnd": 47
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 33,
        "columnStart": 2,
        "columnEnd": 27
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 47,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 36
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 47,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 36
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:20.04\n\nENV DEBIAN_FRONTEND=noninteractive\nENV LC_ALL C.UTF-8\nARG GOARCH=amd64\n\nRUN apt-get update && \\\n  apt-get install --no-install-recommends -y curl \\\n                     dirmngr \\\n                     apt-transport-https \\\n                     lsb-release \\\n                     ca-certificates \\\n                     software-properties-common && \\\n  curl -f -sL https://deb.nodesource.com/setup_12.x | bash - && \\\n  apt-get update && \\\n  apt-get -y dist-upgrade && \\\n  apt-get -y --no-install-recommends install gcc-8 \\\n                     g++-8 \\\n                     python3-dev \\\n                     python3-pip \\\n                     python3-venv \\\n                     ca-cacert \\\n                     locales \\\n                     language-pack-en \\\n                     libncurses5-dev libncursesw5-dev \\\n                     git \\\n                     tcl-dev \\\n                     tcllib \\\n                     gdb \\\n                     lldb \\\n                     nodejs \\\n                     pkg-config \\\n                     lua5.1 \\\n                     luajit && rm -rf /var/lib/apt/lists/*;\n\nRUN ln -fs /usr/share/zoneinfo/Europe/London /etc/localtime && \\\n  dpkg-reconfigure --frontend noninteractive tzdata\n\nRUN update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 1 \\\n                        --slave   /usr/bin/g++ g++ /usr/bin/g++-8\n\nRUN curl -f -LO https://golang.org/dl/go1.17.3.linux-${GOARCH}.tar.gz && \\\n    tar -C /usr/local -xzvf go1.17.3.linux-${GOARCH}.tar.gz && rm go1.17.3.linux-${GOARCH}.tar.gz\n\nRUN update-alternatives --install /usr/local/bin/go go /usr/local/go/bin/go 1\n\n# In order for love to work on arm64, we have to build it ourselves\nRUN apt-get -y --no-install-recommends install lua5.1-dev \\\n                       luajit-5.1-dev \\\n                       libsdl2-dev \\\n                       libopenal-dev \\\n                       libfreetype6-dev \\\n                       libmodplug-dev \\\n                       libvorbis-dev \\\n                       libtheora-dev \\\n                       libmpg123-dev && rm -rf /var/lib/apt/lists/*;\n\nRUN curl -f -LO https://github.com/love2d/love/releases/download/11.3/love-11.3-linux-src.tar.gz && \\\n    tar zxvf love-11.3-linux-src.tar.gz && \\\n    cd love-11.3 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n    make -j $(nproc) && \\\n    make install && \\\n    cd .. && \\\n    rm -rf love-11.3 && \\\n    rm -f love-11.3-linux-src.tar.gz\n\nRUN apt-get -y autoremove\n\n## cleanup of files from setup\nRUN rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\nARG VIM_VERSION=v8.2.0716\n\nENV CONF_ARGS \"--with-features=huge \\\n               --enable-python3interp \\\n               --enable-terminal \\\n               --enable-multibyte \\\n               --enable-fail-if-missing\"\n\nRUN mkdir -p $HOME/vim && \\\n    cd $HOME/vim && \\\n    git clone https://github.com/vim/vim && \\\n    cd vim && \\\n    git checkout ${VIM_VERSION} && \\\n    make -j 4 && \\\n    make install\n\n# dotnet\nRUN curl -f -sSL https://dot.net/v1/dotnet-install.sh \\\n        | bash /dev/stdin --channel 5.0 --install-dir /usr/share/dotnet && \\\n        update-alternatives --install /usr/bin/dotnet dotnet \\\n                                                      /usr/share/dotnet/dotnet 1\n\n# clean up\nRUN rm -rf ~/.cache && \\\n    rm -rf $HOME/vim\n"
}