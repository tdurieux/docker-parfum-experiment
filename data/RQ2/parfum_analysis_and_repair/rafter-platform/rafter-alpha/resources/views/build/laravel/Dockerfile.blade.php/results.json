{
  "startTime": 1674251422464,
  "endTime": 1674251423335,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 12,
        "columnStart": 22,
        "columnEnd": 10
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 12,
        "columnStart": 22,
        "columnEnd": 10
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM php:7.4-apache\n\nRUN curl -f -sL https://deb.nodesource.com/setup_13.x | bash -\n\n# Install production dependencies\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    curl \\\n    zip \\\n    unzip \\\n    git \\\n    libpng-dev \\\n    libjpeg-dev \\\n    nodejs && rm -rf /var/lib/apt/lists/*;\n\n# Install MySQL driver extensions\nRUN docker-php-ext-install \\\n    pdo_mysql\n\n# Configure php extensions\nRUN docker-php-ext-configure \\\n    gd --with-jpeg\n\n# Tell Apache that we want to use the public folder as our root\nENV APACHE_DOCUMENT_ROOT=/var/www/html/public\nRUN sed -ri -e 's!/var/www/html!${APACHE_DOCUMENT_ROOT}!g' /etc/apache2/sites-available/*.conf\nRUN sed -ri -e 's!/var/www/!${APACHE_DOCUMENT_ROOT}!g' /etc/apache2/apache2.conf /etc/apache2/conf-available/*.conf\n\n# Install composer\nENV COMPOSER_ALLOW_SUPERUSER 1\nCOPY --from=composer /usr/bin/composer /usr/bin/composer\n\n# Copy over package manifests so this step can be cached\nCOPY composer.json composer.lock package*.json /var/www/html/\n\nWORKDIR /var/www/html\n\n# Install initial composer dependencies\nRUN composer install --prefer-dist --no-scripts --no-dev --no-autoloader\n\n# Install Node dependencies\nRUN npm ci\n\n# Copy the rest of the project to the container image.\nCOPY . /var/www/html/\n\n# Run composer install again to trigger Laravel's scripts\nRUN composer install --no-dev --classmap-authoritative && php artisan event:cache\n\n# Compile node things\nRUN npm run prod && rm -rf node_modules\n\n# Use the PORT environment variable in Apache configuration files.\nRUN sed -i 's/80/${PORT}/g' /etc/apache2/sites-available/000-default.conf /etc/apache2/ports.conf\n\n# Make contents writeable to the web server\nRUN chown -R www-data:www-data /var/www/html\n\n# Enable Apache rewrites\nRUN a2enmod rewrite headers\n\nRUN chmod 755 docker-entrypoint.sh\n\nENTRYPOINT [\"/var/www/html/docker-entrypoint.sh\"]\n"
}