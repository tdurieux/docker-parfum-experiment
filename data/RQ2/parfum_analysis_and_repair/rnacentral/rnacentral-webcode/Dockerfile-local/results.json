{
  "startTime": 1674253444238,
  "endTime": 1674253444964,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 26,
        "columnEnd": 55
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 40,
        "columnEnd": 76
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 16,
        "columnStart": 22,
        "columnEnd": 13
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 53
      }
    }
  ],
  "repairedDockerfile": "#------------------------------------------------------------------------------\n#\n# This Dockerfile is meant for local development.\n#\n#-------------------------------------------------------------------------------\n\nFROM python:3.8-slim\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    g++ \\\n    build-essential \\\n    curl \\\n    tar \\\n    git \\\n    vim \\\n    supervisor \\\n    libpq-dev && \\\n    rm -rf /var/lib/apt/lists/*\n\nENV RNACENTRAL_LOCAL=/srv/rnacentral/local\nENV SUPERVISOR_CONF_DIR=/srv/rnacentral/supervisor\n\n# Create folders\nRUN \\\n    mkdir -p $RNACENTRAL_LOCAL && \\\n    mkdir -p $SUPERVISOR_CONF_DIR && \\\n    mkdir /srv/rnacentral/log && \\\n    mkdir /srv/rnacentral/static\n\n\n# Install node.js\nRUN \\\n    cd $RNACENTRAL_LOCAL && \\\n    curl -f -sL https://deb.nodesource.com/setup_lts.x | bash - && \\\n    apt-get install --no-install-recommends -y nodejs && rm -rf /var/lib/apt/lists/*;\n\n# Set work directory\nENV RNACENTRAL_HOME=/srv/rnacentral/rnacentral-webcode\nRUN mkdir -p $RNACENTRAL_HOME\nWORKDIR $RNACENTRAL_HOME\n\n# Copy requirements\nCOPY rnacentral/requirements* .\n\n# Install requirements\nRUN pip3 install --no-cache-dir -r requirements.txt && pip3 install --no-cache-dir -r requirements_dev.txt\n\n# Install NPM dependencies\nCOPY rnacentral/portal/static/package.json /srv/rnacentral\nRUN cd /srv/rnacentral && npm install --only=production && npm cache clean --force;\n\n# Copy openssl.cnf\nCOPY openssl/openssl.cnf /etc/ssl/openssl.cnf\n\n# Run entrypoint\nCOPY ./entrypoint-local.sh /\nRUN chmod 744 /entrypoint-local.sh\nENTRYPOINT [\"/entrypoint-local.sh\"]\n"
}