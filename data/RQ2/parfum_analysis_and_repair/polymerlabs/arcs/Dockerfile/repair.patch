diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/polymerlabs/arcs/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/polymerlabs/arcs/Dockerfile/repaired.Dockerfile
index b7e0528..aeb0e58 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/polymerlabs/arcs/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/polymerlabs/arcs/Dockerfile/repaired.Dockerfile
@@ -3,7 +3,7 @@
 FROM ubuntu:xenial
 
 # Install programs for runtime use (e.g. by Bazel, Node-GYP)
-RUN apt-get update && apt-get upgrade -y && apt-get install -y \
+RUN apt-get update && apt-get upgrade -y && apt-get install --no-install-recommends -y \
       apt-transport-https \
       bash \
       ca-certificates \
@@ -16,13 +16,13 @@ RUN apt-get update && apt-get upgrade -y && apt-get install -y \
       openjdk-8-jdk \
       python \
       unzip \
-      xz-utils
+      xz-utils && rm -rf /var/lib/apt/lists/*;
 
 # Install Chrome for Selenium
 #  Reference: https://tecadmin.net/setup-selenium-chromedriver-on-ubuntu/
-RUN curl -sS -o - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add
+RUN curl -f -sS -o - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add
 RUN echo "deb [arch=amd64]  http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list
-RUN apt-get -y update && apt-get -y install google-chrome-stable
+RUN apt-get -y update && apt-get -y --no-install-recommends install google-chrome-stable && rm -rf /var/lib/apt/lists/*;
 
 # Set up workspace
 ENV WORKSPACE /usr/src/app
@@ -30,17 +30,17 @@ RUN mkdir -p $WORKSPACE
 WORKDIR $WORKSPACE
 
 # Install ktlint
-RUN (cd /usr/bin/ && \
-    curl -L -s -O https://github.com/pinterest/ktlint/releases/download/0.35.0/ktlint && \
+RUN ( cd /usr/bin/ && \
+    curl -f -L -s -O https://github.com/pinterest/ktlint/releases/download/0.35.0/ktlint && \
     cd - && \
     chmod +x /usr/bin/ktlint)
 
 # Install Nodejs & npm
 # Also, allows running script with privileged permission
 # i.e. scripts {...} at package.json. See unsafe-perm below.
-RUN (curl -sL https://deb.nodesource.com/setup_10.x | bash -  && \
-     apt-get install -y nodejs && \
-     npm set unsafe-perm true)
+RUN ( curl -f -sL https://deb.nodesource.com/setup_10.x | bash - && \
+     apt-get install --no-install-recommends -y nodejs && \
+     npm set unsafe-perm true) && rm -rf /var/lib/apt/lists/*;
 
 # Install Android SDK
 ENV ANDROID_HOME "/sdk"
@@ -54,12 +54,12 @@ RUN tools/install-android-sdk ${ANDROID_HOME} > /dev/null
 
 # Install npm packages
 COPY concrete-storage/package.json concrete-storage/package.json
-RUN (cd concrete-storage && npm install)
+RUN ( cd concrete-storage && npm install) && npm cache clean --force;
 COPY package.json package.json
 COPY tools tools
 COPY config config
 COPY devtools devtools
-RUN npm install
+RUN npm install && npm cache clean --force;
 
 # Fetch external Bazel artifacts.
 # Copy over the WORKSPACE file, everything it imports, and bazelisk.