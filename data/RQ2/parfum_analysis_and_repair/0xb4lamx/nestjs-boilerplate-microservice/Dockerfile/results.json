{
  "startTime": 1674220791899,
  "endTime": 1674220792891,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 31
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# ---- Base Node ----\nFROM node:lts-alpine3.9 AS base\nRUN apk add --no-cache git\nWORKDIR /app\nRUN mkdir src templates\nRUN chown -R node:node /app\nUSER node\n\n# ---- Dependencies ----\nFROM base AS dependencies\nCOPY ./package*.json ./\nRUN npm install -d && npm cache clean --force;\n\n# ---- Build ----\nFROM dependencies AS build\nWORKDIR /app\nCOPY ./templates /app/templates\nCOPY ./src /app/src\nCOPY ./ts*.json ./\nCOPY ormconfig.js ./\nRUN npm run build\n\n# ---- Polishing ----\nFROM base AS polishing\nCOPY ./package*.json ./\nRUN npm install --production -d && npm cache clean --force;\n\n# --- Release with Alpine ----\nFROM node:lts-alpine3.9 AS release\nWORKDIR /app\nRUN mkdir dist templates node_modules\nRUN chown -R node:node /app\nUSER node\nCOPY --from=polishing app/node_modules node_modules/\nCOPY --from=build app/dist dist/\nCOPY --from=build app/templates templates/\nCOPY --from=build app/ormconfig.js ./\nCMD [\"node\",\"dist/src/main.js\"]\n"
}