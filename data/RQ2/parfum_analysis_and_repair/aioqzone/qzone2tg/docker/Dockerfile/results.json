{
  "startTime": 1674254811833,
  "endTime": 1674254812931,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 47
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.10-slim as build\n\nLABEL org.opencontainers.image.url=https://github.com/aioqzone/Qzone2TG/pkgs/container/qzone3tg\nLABEL org.opencontainers.image.documentation=https://aioqzone.github.io/Qzone2TG\nLABEL org.opencontainers.image.source=https://github.com/aioqzone/Qzone2TG\n\nRUN apt-get update \\\n    && apt-get install --no-install-recommends -y \\\n        git \\\n        curl \\\n    && curl -fsSL https://deb.nodesource.com/setup_17.x | bash - \\\n    && apt-get install --no-install-recommends -y \\\n        nodejs \\\n    && rm -rf /var/lib/apt/lists/*\n\n# install and configure poetry\nRUN curl -f -sSL https://install.python-poetry.org | python3 - \\\n    && $HOME/.local/bin/poetry config virtualenvs.create true \\\n    && $HOME/.local/bin/poetry config virtualenvs.in-project true\n\nENV PATH=\"/root/.local/bin:$PATH\"\n\nCOPY . /app\nWORKDIR /app\n\n# package the package\nRUN python src/pack.py . --clean\n\n# ==============================================\n#                 Runtime Stage\n# ==============================================\n\nFROM python:3.10-slim as release\n# use slim since opencv-python doesn't offically support alpine.\n\nEXPOSE 80 88 443 8443\nENV PATH=\"/app:$PATH\"\nENV PYTHONPATH=\"/app:$PYTHONPATH\"\n# ENV FONTCONFIG_PATH=\"/etc/fonts\"\n\nRUN apt-get update \\\n    && apt-get install --no-install-recommends -y \\\n        curl \\\n        fontconfig \\\n    && curl -fsSL https://deb.nodesource.com/setup_17.x | bash - \\\n    && apt-get install --no-install-recommends -y \\\n        nodejs \\\n    && rm -rf /var/lib/apt/lists/*\n\nCOPY --from=build /app/run /app\nWORKDIR /app\n\nENTRYPOINT [\"python\", \"app.pyz\"]\n"
}