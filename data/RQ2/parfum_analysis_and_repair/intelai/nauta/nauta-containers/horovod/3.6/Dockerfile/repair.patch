diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/intelai/nauta/nauta-containers/horovod/3.6/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/intelai/nauta/nauta-containers/horovod/3.6/Dockerfile/repaired.Dockerfile
index d7bf9d8..c1ad0dc 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/intelai/nauta/nauta-containers/horovod/3.6/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/intelai/nauta/nauta-containers/horovod/3.6/Dockerfile/repaired.Dockerfile
@@ -11,22 +11,22 @@ RUN wget https://storage.googleapis.com/intel-optimized-tensorflow/tensorflow-${
 COPY --from=metrics /build-output/experiment_metrics-*.tar.gz /
 
 RUN pip install --no-cache-dir --force-reinstall /tensorflow-${TENSORFLOW_VERSION}-*.whl && \
-    pip install --ignore-installed /experiment_metrics-*.tar.gz
+    pip install --no-cache-dir --ignore-installed /experiment_metrics-*.tar.gz
 
-RUN apt-get update && apt-get install -y build-essential
+RUN apt-get update && apt-get install --no-install-recommends -y build-essential && rm -rf /var/lib/apt/lists/*;
 
 RUN mkdir /tmp/openmpi && \
     cd /tmp/openmpi && \
     wget https://www.open-mpi.org/software/ompi/v3.1/downloads/openmpi-3.1.2.tar.gz && \
     tar zxf openmpi-3.1.2.tar.gz && \
     cd openmpi-3.1.2 && \
-    ./configure --enable-orterun-prefix-by-default && \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --enable-orterun-prefix-by-default && \
     make -j $(nproc) all && \
     make install && \
     ldconfig && \
-    rm -rf /tmp/openmpi
+    rm -rf /tmp/openmpi && rm openmpi-3.1.2.tar.gz
 
-RUN pip install horovod==${HOROVOD_VERSION}
+RUN pip install --no-cache-dir horovod==${HOROVOD_VERSION}
 
 # Create a wrapper for OpenMPI to allow running as root by default
 RUN mv /usr/local/bin/mpirun /usr/local/bin/mpirun.real && \
@@ -39,8 +39,8 @@ RUN mv /usr/local/bin/mpirun /usr/local/bin/mpirun.real && \
 RUN echo "hwloc_base_binding_policy = none" >> /usr/local/etc/openmpi-mca-params.conf && \
     echo "rmaps_base_mapping_policy = slot" >> /usr/local/etc/openmpi-mca-params.conf
 
-RUN apt-get install -y openssh-client openssh-server && \
-    mkdir -p /var/run/sshd /app /root/.ssh
+RUN apt-get install --no-install-recommends -y openssh-client openssh-server && \
+    mkdir -p /var/run/sshd /app /root/.ssh && rm -rf /var/lib/apt/lists/*;
 
  # Allow OpenSSH to talk to containers without asking for confirmation
 RUN cat /etc/ssh/ssh_config | grep -v StrictHostKeyChecking > /etc/ssh/ssh_config.new && \
@@ -54,7 +54,7 @@ RUN echo "y" | ssh-keygen -N "" -f /root/.ssh/id_rsa && \
     cp /root/.ssh/id_rsa.pub /root/.ssh/authorized_keys && chmod og-rwx /root/.ssh/ -R
 
 # Install kubectl
-RUN apt-get install -y apt-transport-https
-RUN curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -
+RUN apt-get install --no-install-recommends -y apt-transport-https && rm -rf /var/lib/apt/lists/*;
+RUN curl -f -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -
 RUN echo "deb https://apt.kubernetes.io/ kubernetes-xenial main" | tee -a /etc/apt/sources.list.d/kubernetes.list
-RUN apt-get update && apt-get install -y kubectl
+RUN apt-get update && apt-get install --no-install-recommends -y kubectl && rm -rf /var/lib/apt/lists/*;