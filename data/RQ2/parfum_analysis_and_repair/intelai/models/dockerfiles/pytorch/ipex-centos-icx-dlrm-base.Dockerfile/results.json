{
  "startTime": 1674250731677,
  "endTime": 1674250732500,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 81,
        "lineEnd": 81,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 91,
        "lineEnd": 91,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 109,
        "lineEnd": 115,
        "columnStart": 4,
        "columnEnd": 8
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 104,
        "lineEnd": 104,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 25,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 8
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 127,
        "lineEnd": 127,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 34
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 34
      }
    }
  ],
  "repairedDockerfile": "# Copyright (c) 2020 Intel Corporation\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n# ============================================================================\n\nARG BASE_IMAGE=centos:centos7\nFROM ${BASE_IMAGE} AS dev-base\nSHELL [\"/bin/bash\", \"-c\"]\nWORKDIR /workspace/installs/\n\n\n\nRUN echo \"http_caching=packages\" >> /etc/yum.conf && \\\n    yum update -y && \\\n    yum --enablerepo=extras install -y epel-release && \\\n    yum install -y \\\n    ca-certificates \\\n    git \\\n    wget \\\n    build-essential \\\n    cmake3 \\\n    gcc-c++ \\\n    gcc \\\n    autoconf \\\n    bzip2 \\\n    patch \\\n    numactl \\\n    file && \\\n    alternatives --install /usr/local/bin/cmake cmake /usr/bin/cmake 10 \\\n    --slave /usr/local/bin/ctest ctest /usr/bin/ctest \\\n    --slave /usr/local/bin/cpack cpack /usr/bin/cpack \\\n    --slave /usr/local/bin/ccmake ccmake /usr/bin/ccmake \\\n    --family cmake && \\\n    alternatives --install /usr/local/bin/cmake cmake /usr/bin/cmake3 20 \\\n    --slave /usr/local/bin/ctest ctest /usr/bin/ctest3 \\\n    --slave /usr/local/bin/cpack cpack /usr/bin/cpack3 \\\n    --slave /usr/local/bin/ccmake ccmake /usr/bin/ccmake3 \\\n    --family cmake && \\\n    yum install -y centos-release-scl && \\\n    yum install -y devtoolset-7 && \\\n    source /opt/rh/devtoolset-7/enable && \\\n    wget --quiet https://github.com/google/protobuf/releases/download/v2.6.1/protobuf-2.6.1.tar.gz && \\\n    tar -xzf protobuf-2.6.1.tar.gz && \\\n    cd protobuf-2.6.1 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n    make && \\\n    make install && rm -rf /var/cache/yum\n\nRUN wget --quiet https://repo.continuum.io/archive/Anaconda3-5.0.0-Linux-x86_64.sh -O anaconda3.sh && \\\n    chmod +x anaconda3.sh && \\\n    ./anaconda3.sh -b -p ~/anaconda3 && \\\n    rm ./anaconda3.sh && \\\n    ~/anaconda3/bin/conda create -yn pytorch && \\\n    export PATH=~/anaconda3/bin/:$PATH && \\\n    source activate pytorch && \\\n    pip install --no-cache-dir pip==21.0.1 && \\\n    pip install --no-cache-dir sklearn onnx && \\\n    conda config --add channels intel && \\\n    conda install -y ninja pyyaml setuptools cmake cffi typing intel-openmp && \\\n    conda install -y mkl mkl-include numpy -c intel --no-update-deps\n\nENV PATH ~/anaconda3/bin/:$PATH\n\nSHELL [ \"/usr/bin/scl\", \"enable\", \"devtoolset-7\"]\nENV DNNL_ENABLE_MAX_CPU_ISA=1\nRUN source ~/anaconda3/bin/activate pytorch && \\ \n    git clone https://github.com/pytorch/pytorch.git && \\\n    cd pytorch && \\\n    git checkout v1.5.0-rc3 && \\\n    git submodule sync && \\\n    git submodule update --init --recursive && \\\n    pip install --no-cache-dir -r requirements.txt && \\\n    cd .. && \\\n    git clone https://github.com/intel/intel-extension-for-pytorch ipex-cpu-dev && \\\n    cd ipex-cpu-dev && \\\n    git checkout icx && \\\n    git submodule sync && \\\n    git submodule update --init --recursive && \\\n    cd third_party/mkl-dnn && \\\n    patch -p1 < ../../torch_patches/FIFO.diff && \\\n    cd ../.. && \\\n    pip install --no-cache-dir -r requirements.txt && \\\n    cp torch_patches/dpcpp-v1.5-rc3.patch ../pytorch/ && \\\n    cd ../pytorch && \\\n    git apply dpcpp-v1.5-rc3.patch && \\\n    CMAKE_PREFIX_PATH=${CONDA_PREFIX:-\"$(dirname $(which conda))/../\"} python setup.py install && \\\n    cd ../ipex-cpu-dev && \\\n    python setup.py install && \\\n    cd .. && \\\n    git clone  https://github.com/jemalloc/jemalloc.git && \\\n    cd jemalloc && \\\n    git checkout c8209150f9d219a137412b06431c9d52839c7272 && \\\n    ./autogen.sh && \\\n    mkdir /workspace/libs && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/workspace/libs/jemalloc && \\\n    make && \\\n    make install && \\\n    cd /workspace && \\\n    rm -rf installs/ && \\\n    pip install --no-cache-dir future \\\n    numpy \\\n    onnx \\\n    pydot \\\n    torchviz \\\n    scikit-learn \\\n    tqdm\n\n\nFROM ${BASE_IMAGE} AS release\nCOPY --from=dev-base /root/anaconda3 /root/anaconda3\nCOPY --from=dev-base /workspace/libs/ /workspace/libs/\n\nENV PATH=\"~/anaconda3/bin:${PATH}\"\nENV LD_PRELOAD=\"/workspace/libs/jemalloc/lib/libjemalloc.so:$LD_PRELOAD\"\nWORKDIR /workspace/\nRUN echo \"http_caching=packages\" >> /etc/yum.conf && \\\n    yum update -y --disablerepo=epel\\* && \\\n    yum install -y numactl && \\\n    yum clean all && rm -rf /var/cache/yum\n"
}