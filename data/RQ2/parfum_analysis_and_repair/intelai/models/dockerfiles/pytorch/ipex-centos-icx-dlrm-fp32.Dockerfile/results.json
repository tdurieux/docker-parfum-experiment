{
  "startTime": 1674249290083,
  "endTime": 1674249291354,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 7,
        "columnEnd": 116
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 7,
        "columnEnd": 124
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 99
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 7,
        "columnEnd": 43
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright (c) 2020-2021 Intel Corporation\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n# ============================================================================\n#\n# THIS IS A GENERATED DOCKERFILE.\n#\n# This file was assembled from multiple pieces, whose use is documented\n# throughout. Please refer to the TensorFlow dockerfiles documentation\n# for more information.\n\nARG IPEX_CONTAINER_TAG=\"intel/recommendation:pytorch-1.5.0-rc3-icx-a37fb5e8\"\nFROM $IPEX_CONTAINER_TAG\n\nSHELL [\"/bin/bash\", \"-c\"]\n\nRUN echo \"source activate pytorch\" >> ~/.bash_profile\n\nARG PACKAGE_DIR=model_packages\n\nARG PACKAGE_NAME=\"icx-dlrm-fp32-inference\"\n\nARG MODEL_WORKSPACE\n\n# ${MODEL_WORKSPACE} and below needs to be owned by root:root rather than the current UID:GID\n# this allows the default user (root) to work in k8s single-node, multi-node\nRUN umask 002 && mkdir -p ${MODEL_WORKSPACE} && chgrp root ${MODEL_WORKSPACE} && chmod g+s+w,o+s+r ${MODEL_WORKSPACE}\n\nADD --chown=0:0 ${PACKAGE_DIR}/${PACKAGE_NAME}.tar.gz ${MODEL_WORKSPACE}\n\nRUN chown -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chgrp -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chmod -R g+s+w ${MODEL_WORKSPACE}/${PACKAGE_NAME} && find ${MODEL_WORKSPACE}/${PACKAGE_NAME} -type d | xargs chmod o+r+x\n\nWORKDIR ${MODEL_WORKSPACE}/${PACKAGE_NAME}\n\nENV USER_ID=0\n\nENV USER_NAME=root\n\nENV GROUP_ID=0\n\nENV GROUP_NAME=root\n\nENV GOSU_VERSION=1.11\nRUN gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 \\\n    && curl -f -o /usr/local/bin/gosu -SL \"https://github.com/tianon/gosu/releases/download/${GOSU_VERSION}/gosu-amd64\" \\\n    && curl -f -o /usr/local/bin/gosu.asc -SL \"https://github.com/tianon/gosu/releases/download/${GOSU_VERSION}/gosu-amd64.asc\" \\\n    && gpg --batch --verify /usr/local/bin/gosu.asc \\\n    && rm /usr/local/bin/gosu.asc \\\n    && rm -r /root/.gnupg/ \\\n    && chmod +x /usr/local/bin/gosu\n\nRUN echo -e '#!/bin/bash\\n\\\nUSER_ID=$USER_ID\\n\\\nUSER_NAME=$USER_NAME\\n\\\nGROUP_ID=$GROUP_ID\\n\\\nGROUP_NAME=$GROUP_NAME\\n\\\nif [[ $GROUP_NAME != root ]]; then\\n\\\n  groupadd -r -g $GROUP_ID $GROUP_NAME\\n\\\nfi\\n\\\nif [[ $USER_NAME != root ]]; then\\n\\\n  useradd --no-log-init -r -u $USER_ID -g $GROUP_NAME -s /bin/bash -M $USER_NAME\\n\\\nfi\\n\\\nexec /usr/local/bin/gosu $USER_NAME:$GROUP_NAME \"$@\"\\n\\\nsource ~/anaconda3/bin/activate pytorch\\n '\\\n>> /tmp/entrypoint.sh\n\nRUN chmod u+x,g+x /tmp/entrypoint.sh\n\nENTRYPOINT [\"/tmp/entrypoint.sh\"]\n"
}