{
  "startTime": 1674254688914,
  "endTime": 1674254690664,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 49,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 19
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 68,
        "lineEnd": 76,
        "columnStart": 4,
        "columnEnd": 19
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 23,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 23,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright (c) 2020 Intel Corporation\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n# ============================================================================\n\nARG UBUNTU_VERSION=20.04\n\nFROM ubuntu:${UBUNTU_VERSION}\n\nARG TF_VERSION=2.6.0\nARG MODEL_ZOO_VERSION=v2.4.0\n\nRUN apt-get -y update && \\\n    apt-get install --no-install-recommends -y \\\n        python3-dev \\\n        python3-pip \\\n        git \\\n        wget \\\n        unzip \\\n        numactl && rm -rf /var/lib/apt/lists/*;\n\nRUN pip3 -q --no-cache-dir install pip --upgrade && \\\n    pip3 install --no-cache-dir -U virtualenv && \\\n    pip3 install --no-cache-dir jupyter\n\n# Since the notebook does a git patch, we will need to set the user name and email.\n# This can be dummy since it is within the container\nRUN git config --global user.email \"you@example.com\" && \\\n    git config --global user.name \"Your Name\"\n\nRUN git clone --single-branch --branch=${MODEL_ZOO_VERSION} https://github.com/IntelAI/models.git\n\nWORKDIR models/docs/notebooks/perf_analysis\n\n# Create a virtual environment for stock TF\nRUN virtualenv -p python3 ./venv-stock-tf\n\n# Install all the necessary libraries for stock TF\nRUN . ./venv-stock-tf/bin/activate && \\\n    pip install --no-cache-dir \\\n        cxxfilt \\\n        gitpython \\\n        tensorflow==${TF_VERSION} \\\n        ipykernel \\\n        matplotlib \\\n        pandas \\\n        'psutil>=5.6.7' \\\n        pycocotools && \\\n    deactivate\n\n# Create a Jupyter notebook kernel for stock TF with the name stock-tensorflow\nRUN venv-stock-tf/bin/python -m ipykernel install --user --name=stock-tensorflow\n\n# Create a virtual environment for Intel TF\nRUN virtualenv -p python3 ./venv-intel-tf\n\n# Install all the necessary libraries for Intel TF environment\nRUN . ./venv-intel-tf/bin/activate && \\\n    pip install --no-cache-dir \\\n        cxxfilt \\\n        gitpython \\\n        intel-tensorflow==${TF_VERSION} \\\n        ipykernel \\\n        matplotlib \\\n        pandas \\\n        'psutil>=5.6.7' \\\n        pycocotools && \\\n    deactivate\n\n# Create a Jupyter notebook kernel for Intel TF with the name intel-tensorflow\nRUN venv-intel-tf/bin/python -m ipykernel install --user --name=intel-tensorflow\n\n# Download protoc for object detection\nARG RFCN_COMMIT=6c21084503b27a9ab118e1db25f79957d5ef540b\nRUN git clone https://github.com/tensorflow/models.git tensorflow-models-rfcn && \\\n    cd tensorflow-models-rfcn && \\\n    git reset --hard ${RFCN_COMMIT} && \\\n    git apply /models/models/object_detection/tensorflow/rfcn/inference/tf-2.0.patch && \\\n    git clone https://github.com/cocodataset/cocoapi.git && \\\n    cd research && \\\n    wget --quiet -O protobuf.zip https://github.com/google/protobuf/releases/download/v3.3.0/protoc-3.3.0-linux-x86_64.zip && \\\n    unzip -o protobuf.zip && \\\n    rm protobuf.zip && \\\n    ./bin/protoc object_detection/protos/*.proto --python_out=.\n\nEXPOSE 8888\n\nENV LISTEN_IP=localhost\n\n# Run Jupyter notebook\nCMD jupyter notebook --port=8888 --no-browser --ip=${LISTEN_IP} --allow-root\n"
}