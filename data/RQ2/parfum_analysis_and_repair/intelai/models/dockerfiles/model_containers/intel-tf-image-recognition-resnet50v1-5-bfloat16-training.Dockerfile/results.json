{
  "startTime": 1674254464444,
  "endTime": 1674254466082,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 102
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 87,
        "lineEnd": 87,
        "columnStart": 4,
        "columnEnd": 77
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 62,
        "lineEnd": 67,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 69,
        "lineEnd": 72,
        "columnStart": 4,
        "columnEnd": 11
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 30,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 17
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 39,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 44,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 49,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 13
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 62,
        "lineEnd": 67,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 69,
        "lineEnd": 72,
        "columnStart": 4,
        "columnEnd": 11
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 84,
        "lineEnd": 86,
        "columnStart": 4,
        "columnEnd": 7
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 120,
        "lineEnd": 120,
        "columnStart": 4,
        "columnEnd": 65
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 62,
        "lineEnd": 67,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 69,
        "lineEnd": 72,
        "columnStart": 4,
        "columnEnd": 11
      }
    }
  ],
  "repairedDockerfile": "# Copyright (c) 2020-2021 Intel Corporation\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n# ============================================================================\n#\n# THIS IS A GENERATED DOCKERFILE.\n#\n# This file was assembled from multiple pieces, whose use is documented\n# throughout. Please refer to the TensorFlow dockerfiles documentation\n# for more information.\n\nARG TENSORFLOW_IMAGE=\"intel/intel-optimized-tensorflow\"\n\nARG TENSORFLOW_TAG=\"latest\"\n\nFROM ${TENSORFLOW_IMAGE}:${TENSORFLOW_TAG}\n\nENV DEBIAN_FRONTEND=noninteractive\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends --fix-missing -y \\\n        libsm6 \\\n        libxext6 \\\n        python-tk && \\\n    pip install --no-cache-dir requests && rm -rf /var/lib/apt/lists/*;\n\nARG PY_VERSION=\"3.8\"\n\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends --fix-missing \\\n        build-essential \\\n        python${PY_VERSION}-dev && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends --fix-missing -y \\\n    python3-apt \\\n    software-properties-common && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends --fix-missing -y \\\n        gcc-8 \\\n        g++-8 && \\\n  update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 8 && \\\n  update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 8 && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends --fix-missing curl && rm -rf /var/lib/apt/lists/*;\n\nRUN curl -f -LO https://storage.googleapis.com/kubernetes-release/release/v1.18.3/bin/linux/amd64/kubectl && \\\n    chmod +x ./kubectl && \\\n    mv kubectl /usr/local/bin\n\nRUN apt-get install --no-install-recommends --fix-missing -y \\\n    libopenmpi-dev \\\n    openmpi-bin \\\n    openmpi-common \\\n    openssh-client \\\n    openssh-server && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get install --no-install-recommends --fix-missing -y \\\n    openssh-client \\\n    openssh-server \\\n    systemd && \\\n    systemctl enable ssh && rm -rf /var/lib/apt/lists/*;\n\nARG HOROVOD_VERSION=87094a4\n\nENV HOROVOD_WITHOUT_MXNET=1 \\\n    HOROVOD_WITHOUT_PYTORCH=1 \\\n    HOROVOD_WITH_TENSORFLOW=1\n\n# In case installing released versions of Horovod fail,and there is\n# a working commit replace next set of RUN commands with something like:\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends --fix-missing \\\n    cmake \\\n    git && rm -rf /var/lib/apt/lists/*;\nRUN pip install --no-cache-dir git+https://github.com/horovod/horovod.git@${HOROVOD_VERSION}\n\n# RUN apt-get update && \\\n#     apt-get install -y --no-install-recommends --fix-missing \\\n#     cmake\n#\n# RUN pip install git+https://github.com/horovod/horovod.git@${HOROVOD_VERSION}\n\nARG PACKAGE_DIR=model_packages\n\nARG PACKAGE_NAME=\"resnet50v1-5-bfloat16-training\"\n\nARG MODEL_WORKSPACE\n\n# ${MODEL_WORKSPACE} and below needs to be owned by root:root rather than the current UID:GID\n# this allows the default user (root) to work in k8s single-node, multi-node\nRUN umask 002 && mkdir -p ${MODEL_WORKSPACE} && chgrp root ${MODEL_WORKSPACE} && chmod g+s+w,o+s+r ${MODEL_WORKSPACE}\n\nADD --chown=0:0 ${PACKAGE_DIR}/${PACKAGE_NAME}.tar.gz ${MODEL_WORKSPACE}\n\nRUN chown -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chgrp -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chmod -R g+s+w ${MODEL_WORKSPACE}/${PACKAGE_NAME} && find ${MODEL_WORKSPACE}/${PACKAGE_NAME} -type d | xargs chmod o+r+x\n\nWORKDIR ${MODEL_WORKSPACE}/${PACKAGE_NAME}\n\nENV USER_ID=0\n\nENV USER_NAME=root\n\nENV GROUP_ID=0\n\nENV GROUP_NAME=root\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends --fix-missing -y gosu && rm -rf /var/lib/apt/lists/*;\n\nRUN echo '#!/bin/bash\\n\\\nUSER_ID=$USER_ID\\n\\\nUSER_NAME=$USER_NAME\\n\\\nGROUP_ID=$GROUP_ID\\n\\\nGROUP_NAME=$GROUP_NAME\\n\\\nif [[ $GROUP_NAME != root ]]; then\\n\\\n  groupadd -r -g $GROUP_ID $GROUP_NAME\\n\\\nfi\\n\\\nif [[ $USER_NAME != root ]]; then\\n\\\n  useradd --no-log-init -r -u $USER_ID -g $GROUP_NAME -s /bin/bash -M $USER_NAME\\n\\\nfi\\n\\\nexec /usr/sbin/gosu $USER_NAME:$GROUP_NAME \"$@\"\\n '\\\n>> /tmp/entrypoint.sh\n\nRUN chmod u+x,g+x /tmp/entrypoint.sh\n\nENTRYPOINT [\"/tmp/entrypoint.sh\"]\n"
}