{
  "startTime": 1674249029400,
  "endTime": 1674249030444,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 56,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 30,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 17
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 70,
        "lineEnd": 72,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 87,
        "lineEnd": 87,
        "columnStart": 4,
        "columnEnd": 65
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright (c) 2020-2021 Intel Corporation\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n# ============================================================================\n#\n# THIS IS A GENERATED DOCKERFILE.\n#\n# This file was assembled from multiple pieces, whose use is documented\n# throughout. Please refer to the TensorFlow dockerfiles documentation\n# for more information.\n\nARG TENSORFLOW_IMAGE=\"intel/intel-optimized-tensorflow\"\n\nARG TENSORFLOW_TAG=\"1.15.2\"\n\nFROM ${TENSORFLOW_IMAGE}:${TENSORFLOW_TAG}\n\nENV DEBIAN_FRONTEND=noninteractive\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends --fix-missing -y \\\n        libsm6 \\\n        libxext6 \\\n        python-tk && \\\n    pip install --no-cache-dir requests && rm -rf /var/lib/apt/lists/*;\n\nARG PACKAGE_DIR=model_packages\n\nARG PACKAGE_NAME=\"maskrcnn-fp32-inference\"\n\nARG MODEL_WORKSPACE\n\n# ${MODEL_WORKSPACE} and below needs to be owned by root:root rather than the current UID:GID\n# this allows the default user (root) to work in k8s single-node, multi-node\nRUN umask 002 && mkdir -p ${MODEL_WORKSPACE} && chgrp root ${MODEL_WORKSPACE} && chmod g+s+w,o+s+r ${MODEL_WORKSPACE}\n\nADD --chown=0:0 ${PACKAGE_DIR}/${PACKAGE_NAME}.tar.gz ${MODEL_WORKSPACE}\n\nRUN chown -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chgrp -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chmod -R g+s+w ${MODEL_WORKSPACE}/${PACKAGE_NAME} && find ${MODEL_WORKSPACE}/${PACKAGE_NAME} -type d | xargs chmod o+r+x\n\nWORKDIR ${MODEL_WORKSPACE}/${PACKAGE_NAME}\n\nARG MASK_RCNN_SOURCE_DIR=/workspace/Mask_RCNN\n\nENV MODEL_SRC_DIR=${MASK_RCNN_SOURCE_DIR}\n\nRUN pip install --no-cache-dir \\\n        IPython[all] \\\n        'Pillow>=8.1.2' \\\n        cython \\\n        h5py \\\n        imgaug \\\n        keras==2.0.8 \\\n        matplotlib \\\n        numpy==1.16.3 \\\n        opencv-python \\\n        pycocotools \\\n        scikit-image \\\n        scipy==1.2.0 && \\\n    apt-get update && \\\n    apt-get install --no-install-recommends --fix-missing -y \\\n        git \\\n        wget && rm -rf /var/lib/apt/lists/*;\n\nRUN git clone https://github.com/matterport/Mask_RCNN.git ${MODEL_SRC_DIR} && \\\n    ( cd ${MODEL_SRC_DIR} && \\\n    wget https://github.com/matterport/Mask_RCNN/releases/download/v2.0/mask_rcnn_coco.h5 )\n\nENV USER_ID=0\n\nENV USER_NAME=root\n\nENV GROUP_ID=0\n\nENV GROUP_NAME=root\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends --fix-missing -y gosu && rm -rf /var/lib/apt/lists/*;\n\nRUN echo '#!/bin/bash\\n\\\nUSER_ID=$USER_ID\\n\\\nUSER_NAME=$USER_NAME\\n\\\nGROUP_ID=$GROUP_ID\\n\\\nGROUP_NAME=$GROUP_NAME\\n\\\nif [[ $GROUP_NAME != root ]]; then\\n\\\n  groupadd -r -g $GROUP_ID $GROUP_NAME\\n\\\nfi\\n\\\nif [[ $USER_NAME != root ]]; then\\n\\\n  useradd --no-log-init -r -u $USER_ID -g $GROUP_NAME -s /bin/bash -M $USER_NAME\\n\\\nfi\\n\\\nexec /usr/sbin/gosu $USER_NAME:$GROUP_NAME \"$@\"\\n '\\\n>> /tmp/entrypoint.sh\n\nRUN chmod u+x,g+x /tmp/entrypoint.sh\n\nENTRYPOINT [\"/tmp/entrypoint.sh\"]\n"
}