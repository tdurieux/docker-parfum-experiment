diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/intelai/models/dockerfiles/model_containers/intel-tf-text-to-speech-wavenet-fp32-inference.Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/intelai/models/dockerfiles/model_containers/intel-tf-text-to-speech-wavenet-fp32-inference.Dockerfile/repaired.Dockerfile
index 4ef37bd..1ea5fd0 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/intelai/models/dockerfiles/model_containers/intel-tf-text-to-speech-wavenet-fp32-inference.Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/intelai/models/dockerfiles/model_containers/intel-tf-text-to-speech-wavenet-fp32-inference.Dockerfile/repaired.Dockerfile
@@ -32,7 +32,7 @@ RUN apt-get update && \
         libsm6 \
         libxext6 \
         python-tk && \
-    pip install requests
+    pip install --no-cache-dir requests && rm -rf /var/lib/apt/lists/*;
 
 ARG TF_WAVENET_BRANCH="cpu_optimized"
 
@@ -47,9 +47,9 @@ RUN apt-get update && \
     git clone https://github.com/ibab/tensorflow-wavenet.git ${CODE_DIR} && \
     ( cd ${CODE_DIR} && \
     if [ ! -z "$FETCH_PR" ]; then git fetch origin ${FETCH_PR}; fi && \
-    git checkout ${TF_WAVENET_BRANCH} )
+    git checkout ${TF_WAVENET_BRANCH} ) && rm -rf /var/lib/apt/lists/*;
 
-RUN pip install librosa==0.5
+RUN pip install --no-cache-dir librosa==0.5
 
 ARG PACKAGE_DIR=model_packages
 
@@ -63,11 +63,11 @@ RUN umask 002 && mkdir -p ${MODEL_WORKSPACE} && chgrp root ${MODEL_WORKSPACE} &&
 
 ADD --chown=0:0 ${PACKAGE_DIR}/${PACKAGE_NAME}.tar.gz ${MODEL_WORKSPACE}
 
-RUN chown -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chgrp -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chmod -R g+s+w ${MODEL_WORKSPACE}/${PACKAGE_NAME} && find ${MODEL_WORKSPACE}/${PACKAGE_NAME} -type d | xargs chmod o+r+x 
+RUN chown -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chgrp -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chmod -R g+s+w ${MODEL_WORKSPACE}/${PACKAGE_NAME} && find ${MODEL_WORKSPACE}/${PACKAGE_NAME} -type d | xargs chmod o+r+x
 
 WORKDIR ${MODEL_WORKSPACE}/${PACKAGE_NAME}
 
-RUN apt-get install --no-install-recommends --fix-missing -y tar
+RUN apt-get install --no-install-recommends --fix-missing -y tar && rm -rf /var/lib/apt/lists/*;
 
 ENV USER_ID=0
 
@@ -78,7 +78,7 @@ ENV GROUP_ID=0
 ENV GROUP_NAME=root
 
 RUN apt-get update && \
-    apt-get install --no-install-recommends --fix-missing -y gosu
+    apt-get install --no-install-recommends --fix-missing -y gosu && rm -rf /var/lib/apt/lists/*;
 
 RUN echo '#!/bin/bash\n\
 USER_ID=$USER_ID\n\