diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/intelai/models/dockerfiles/model_containers/intel-tf-object-detection-ssd-resnet34-bfloat16-training.Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/intelai/models/dockerfiles/model_containers/intel-tf-object-detection-ssd-resnet34-bfloat16-training.Dockerfile/repaired.Dockerfile
index ce2a254..5c62a7d 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/intelai/models/dockerfiles/model_containers/intel-tf-object-detection-ssd-resnet34-bfloat16-training.Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/intelai/models/dockerfiles/model_containers/intel-tf-object-detection-ssd-resnet34-bfloat16-training.Dockerfile/repaired.Dockerfile
@@ -32,14 +32,14 @@ RUN apt-get update && \
         libsm6 \
         libxext6 \
         python-tk && \
-    pip install requests
+    pip install --no-cache-dir requests && rm -rf /var/lib/apt/lists/*;
 
 ARG PY_VERSION="3.8"
 
 RUN apt-get update && \
     apt-get install -y --no-install-recommends --fix-missing \
         build-essential \
-        python${PY_VERSION}-dev
+        python${PY_VERSION}-dev && rm -rf /var/lib/apt/lists/*;
 
 ARG TF_MODELS_BRANCH="8110bb64ca63c48d0caee9d565e5b4274db2220a"
 
@@ -54,18 +54,18 @@ RUN apt-get update && \
     git clone https://github.com/tensorflow/models.git ${CODE_DIR} && \
     ( cd ${CODE_DIR} && \
     if [ ! -z "${FETCH_PR}" ]; then git fetch origin ${FETCH_PR}; fi && \
-    git checkout ${TF_MODELS_BRANCH} )
+    git checkout ${TF_MODELS_BRANCH} ) && rm -rf /var/lib/apt/lists/*;
 
 # Note pycocotools has to be install after the other requirements
-RUN pip install \
+RUN pip install --no-cache-dir \
         Cython \
         contextlib2 \
         jupyter \
         lxml \
         matplotlib \
-        numpy>=1.17.4 \
+        numpy >=1.17.4 \
         'pillow>=8.1.2' && \
-    pip install pycocotools
+    pip install --no-cache-dir pycocotools
 
 ARG TF_MODELS_DIR=/tensorflow/models
 
@@ -81,31 +81,31 @@ RUN cd ${TF_MODELS_DIR}/research && \
     apt-get remove -y \
         unzip \
         wget && \
-    apt-get autoremove -y
+    apt-get autoremove -y && rm -rf /var/lib/apt/lists/*;
 
 ARG PY_VERSION="3.8"
 
 RUN apt-get update && \
     apt-get install -y --no-install-recommends --fix-missing \
         build-essential \
-        python${PY_VERSION}-dev
+        python${PY_VERSION}-dev && rm -rf /var/lib/apt/lists/*;
 
 RUN apt-get update && \
     apt-get install --no-install-recommends --fix-missing -y \
     python3-apt \
-    software-properties-common
+    software-properties-common && rm -rf /var/lib/apt/lists/*;
 
 RUN apt-get update && \
     apt-get install --no-install-recommends --fix-missing -y \
         gcc-8 \
         g++-8 && \
   update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 8 && \
-  update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 8
+  update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 8 && rm -rf /var/lib/apt/lists/*;
 
 RUN apt-get update && \
-    apt-get install -y --no-install-recommends --fix-missing curl
+    apt-get install -y --no-install-recommends --fix-missing curl && rm -rf /var/lib/apt/lists/*;
 
-RUN curl -LO https://storage.googleapis.com/kubernetes-release/release/v1.18.3/bin/linux/amd64/kubectl && \
+RUN curl -f -LO https://storage.googleapis.com/kubernetes-release/release/v1.18.3/bin/linux/amd64/kubectl && \
     chmod +x ./kubectl && \
     mv kubectl /usr/local/bin
 
@@ -114,13 +114,13 @@ RUN apt-get install --no-install-recommends --fix-missing -y \
     openmpi-bin \
     openmpi-common \
     openssh-client \
-    openssh-server
+    openssh-server && rm -rf /var/lib/apt/lists/*;
 
 RUN apt-get install --no-install-recommends --fix-missing -y \
     openssh-client \
     openssh-server \
     systemd && \
-    systemctl enable ssh
+    systemctl enable ssh && rm -rf /var/lib/apt/lists/*;
 
 ARG HOROVOD_VERSION="87094a4"
 
@@ -133,8 +133,8 @@ ENV HOROVOD_WITHOUT_MXNET=1 \
 RUN apt-get update && \
     apt-get install -y --no-install-recommends --fix-missing \
     cmake \
-    git
-RUN pip install git+https://github.com/horovod/horovod.git@${HOROVOD_VERSION}
+    git && rm -rf /var/lib/apt/lists/*;
+RUN pip install --no-cache-dir git+https://github.com/horovod/horovod.git@${HOROVOD_VERSION}
 
 # RUN apt-get update && \
 #     apt-get install -y --no-install-recommends --fix-missing \
@@ -143,11 +143,11 @@ RUN pip install git+https://github.com/horovod/horovod.git@${HOROVOD_VERSION}
 # RUN pip install git+https://github.com/horovod/horovod.git@${HOROVOD_VERSION}
 
 RUN apt-get update && \
-    apt-get install -y cpio
+    apt-get install --no-install-recommends -y cpio && rm -rf /var/lib/apt/lists/*;
 
-RUN pip install tensorflow-addons==0.11.0
+RUN pip install --no-cache-dir tensorflow-addons==0.11.0
 
-RUN pip install opencv-python
+RUN pip install --no-cache-dir opencv-python
 
 ARG PACKAGE_DIR=model_packages
 
@@ -161,7 +161,7 @@ RUN umask 002 && mkdir -p ${MODEL_WORKSPACE} && chgrp root ${MODEL_WORKSPACE} &&
 
 ADD --chown=0:0 ${PACKAGE_DIR}/${PACKAGE_NAME}.tar.gz ${MODEL_WORKSPACE}
 
-RUN chown -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chgrp -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chmod -R g+s+w ${MODEL_WORKSPACE}/${PACKAGE_NAME} && find ${MODEL_WORKSPACE}/${PACKAGE_NAME} -type d | xargs chmod o+r+x 
+RUN chown -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chgrp -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chmod -R g+s+w ${MODEL_WORKSPACE}/${PACKAGE_NAME} && find ${MODEL_WORKSPACE}/${PACKAGE_NAME} -type d | xargs chmod o+r+x
 
 WORKDIR ${MODEL_WORKSPACE}/${PACKAGE_NAME}
 
@@ -174,7 +174,7 @@ ENV GROUP_ID=0
 ENV GROUP_NAME=root
 
 RUN apt-get update && \
-    apt-get install --no-install-recommends --fix-missing -y gosu
+    apt-get install --no-install-recommends --fix-missing -y gosu && rm -rf /var/lib/apt/lists/*;
 
 RUN echo '#!/bin/bash\n\
 USER_ID=$USER_ID\n\