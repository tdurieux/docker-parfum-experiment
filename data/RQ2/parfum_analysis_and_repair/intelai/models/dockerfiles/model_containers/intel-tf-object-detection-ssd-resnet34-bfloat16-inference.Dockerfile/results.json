{
  "startTime": 1674254947683,
  "endTime": 1674254948830,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 59,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 90,
        "lineEnd": 90,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 92,
        "lineEnd": 92,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 73,
        "lineEnd": 75,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 94,
        "lineEnd": 94,
        "columnStart": 4,
        "columnEnd": 77
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 147,
        "lineEnd": 147,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 30,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 17
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 39,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 73,
        "lineEnd": 75,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 86,
        "lineEnd": 88,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 94,
        "lineEnd": 94,
        "columnStart": 4,
        "columnEnd": 77
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 121,
        "lineEnd": 121,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 147,
        "lineEnd": 147,
        "columnStart": 4,
        "columnEnd": 64
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 73,
        "lineEnd": 75,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 94,
        "lineEnd": 94,
        "columnStart": 4,
        "columnEnd": 77
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 147,
        "lineEnd": 147,
        "columnStart": 4,
        "columnEnd": 64
      }
    }
  ],
  "repairedDockerfile": "# Copyright (c) 2020-2021 Intel Corporation\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n# ============================================================================\n#\n# THIS IS A GENERATED DOCKERFILE.\n#\n# This file was assembled from multiple pieces, whose use is documented\n# throughout. Please refer to the TensorFlow dockerfiles documentation\n# for more information.\n\nARG TENSORFLOW_IMAGE=\"intel/intel-optimized-tensorflow\"\n\nARG TENSORFLOW_TAG=\"latest\"\n\nFROM ${TENSORFLOW_IMAGE}:${TENSORFLOW_TAG}\n\nENV DEBIAN_FRONTEND=noninteractive\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends --fix-missing -y \\\n        libsm6 \\\n        libxext6 \\\n        python-tk && \\\n    pip install --no-cache-dir requests && rm -rf /var/lib/apt/lists/*;\n\nARG PY_VERSION=\"3.8\"\n\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends --fix-missing \\\n        build-essential \\\n        python${PY_VERSION}-dev && rm -rf /var/lib/apt/lists/*;\n\nARG TF_MODELS_BRANCH=\"f505cecde2d8ebf6fe15f40fb8bc350b2b1ed5dc\"\n\nARG FETCH_PR\n\nARG CODE_DIR=\"/workspace/tf_models\"\n\nENV TF_MODELS_DIR=${CODE_DIR}\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends --fix-missing -y git && \\\n    git clone https://github.com/tensorflow/models.git ${CODE_DIR} && \\\n    ( cd ${CODE_DIR} && \\\n    if [ ! -z \"${FETCH_PR}\" ]; then git fetch origin ${FETCH_PR}; fi && \\\n    git checkout ${TF_MODELS_BRANCH} ) && rm -rf /var/lib/apt/lists/*;\n\n# Note pycocotools has to be install after the other requirements\nRUN pip install --no-cache-dir \\\n        Cython \\\n        contextlib2 \\\n        jupyter \\\n        lxml \\\n        matplotlib \\\n        numpy >=1.17.4 \\\n        'pillow>=8.1.2' && \\\n    pip install --no-cache-dir pycocotools\n\nARG TF_MODELS_DIR=/tensorflow/models\n\n# Downloads protoc and runs it for object detection\nRUN cd ${TF_MODELS_DIR}/research && \\\n    apt-get install --no-install-recommends --fix-missing -y \\\n        unzip \\\n        wget && \\\n    wget --quiet -O protobuf.zip https://github.com/google/protobuf/releases/download/v3.3.0/protoc-3.3.0-linux-x86_64.zip && \\\n    unzip -o protobuf.zip && \\\n    rm protobuf.zip && \\\n    ./bin/protoc object_detection/protos/*.proto --python_out=. && \\\n    apt-get remove -y \\\n        unzip \\\n        wget && \\\n    apt-get autoremove -y && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends --fix-missing -y \\\n        libgl1-mesa-glx \\\n        libglib2.0-0 && rm -rf /var/lib/apt/lists/*;\n\nRUN pip install --no-cache-dir opencv-python\n\nRUN pip install --no-cache-dir tensorflow-addons==0.11.0\n\nRUN apt-get install --no-install-recommends --fix-missing -y google-perftools && rm -rf /var/lib/apt/lists/*;\n\nARG PACKAGE_DIR=model_packages\n\nARG PACKAGE_NAME=\"ssd-resnet34-bfloat16-inference\"\n\nARG MODEL_WORKSPACE\n\n# ${MODEL_WORKSPACE} and below needs to be owned by root:root rather than the current UID:GID\n# this allows the default user (root) to work in k8s single-node, multi-node\nRUN umask 002 && mkdir -p ${MODEL_WORKSPACE} && chgrp root ${MODEL_WORKSPACE} && chmod g+s+w,o+s+r ${MODEL_WORKSPACE}\n\nADD --chown=0:0 ${PACKAGE_DIR}/${PACKAGE_NAME}.tar.gz ${MODEL_WORKSPACE}\n\nRUN chown -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chgrp -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chmod -R g+s+w ${MODEL_WORKSPACE}/${PACKAGE_NAME} && find ${MODEL_WORKSPACE}/${PACKAGE_NAME} -type d | xargs chmod o+r+x\n\nWORKDIR ${MODEL_WORKSPACE}/${PACKAGE_NAME}\n\nENV USER_ID=0\n\nENV USER_NAME=root\n\nENV GROUP_ID=0\n\nENV GROUP_NAME=root\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends --fix-missing -y gosu && rm -rf /var/lib/apt/lists/*;\n\nRUN echo '#!/bin/bash\\n\\\nUSER_ID=$USER_ID\\n\\\nUSER_NAME=$USER_NAME\\n\\\nGROUP_ID=$GROUP_ID\\n\\\nGROUP_NAME=$GROUP_NAME\\n\\\nif [[ $GROUP_NAME != root ]]; then\\n\\\n  groupadd -r -g $GROUP_ID $GROUP_NAME\\n\\\nfi\\n\\\nif [[ $USER_NAME != root ]]; then\\n\\\n  useradd --no-log-init -r -u $USER_ID -g $GROUP_NAME -s /bin/bash -M $USER_NAME\\n\\\nfi\\n\\\nexec /usr/sbin/gosu $USER_NAME:$GROUP_NAME \"$@\"\\n '\\\n>> /tmp/entrypoint.sh\n\nRUN chmod u+x,g+x /tmp/entrypoint.sh\n\nENTRYPOINT [\"/tmp/entrypoint.sh\"]\n\nARG TF_BENCHMARKS_BRANCH=\"509b9d288937216ca7069f31cfb22aaa7db6a4a7\"\n\nARG TF_BENCHMARKS_DIR=\"/workspace/ssd-resnet-benchmarks\"\n\nENV TF_BENCHMARKS_DIR=${TF_BENCHMARKS_DIR}\n\nRUN apt-get install --no-install-recommends --fix-missing -y git && \\\n    git clone --single-branch https://github.com/tensorflow/benchmarks.git ${TF_BENCHMARKS_DIR} && \\\n    ( cd ${TF_BENCHMARKS_DIR} && \\\n    git checkout ${TF_BENCHMARKS_BRANCH} ) && rm -rf /var/lib/apt/lists/*;\n"
}