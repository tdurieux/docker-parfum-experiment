diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/railt/railt.org/docker/php/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/railt/railt.org/docker/php/Dockerfile/repaired.Dockerfile
index f14e18e..bda1c69 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/railt/railt.org/docker/php/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/railt/railt.org/docker/php/Dockerfile/repaired.Dockerfile
@@ -1,19 +1,18 @@
-
 FROM php:7.2-fpm
 
 RUN DEBIAN_FRONTEND=noninteractive
 
 RUN apt-get update && \
-    apt-get install -my wget gnupg
+    apt-get install --no-install-recommends -my wget gnupg && rm -rf /var/lib/apt/lists/*;
 
 # Install dotdeb repo
 RUN echo "deb http://packages.dotdeb.org jessie all" > /etc/apt/sources.list.d/dotdeb.list \
-    && curl -sS https://www.dotdeb.org/dotdeb.gpg | apt-key add - \
+    && curl -f -sS https://www.dotdeb.org/dotdeb.gpg | apt-key add - \
     && apt-get update
 
 # Install required libs
 RUN apt-get update && \
-    apt-get install -y \
+    apt-get install --no-install-recommends -y \
         git \
         unzip \
         libcurl4-openssl-dev \
@@ -33,7 +32,7 @@ RUN apt-get update && \
         libjudy-dev \
         nano \
         procps \
-    && apt-get clean
+    && apt-get clean && rm -rf /var/lib/apt/lists/*;
 
 #
 # Configure
@@ -70,15 +69,14 @@ RUN pecl install swoole && \
 
 ARG ENABLE_XDEBUG=false
 RUN if [ ${ENABLE_XDEBUG} = true ]; then \
-    # Install the xdebug extension
     git clone https://github.com/xdebug/xdebug.git /tmp/xdebug \
         && cd /tmp/xdebug \
         && phpize \
-        && ./configure \
+        && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
         && make \
         && make install \
         && rm -rf /tmp/xdebug \
-;fi
+; fi
 
 
 # Copy xdebug configration for remote debugging
@@ -105,12 +103,11 @@ COPY ./opcache.ini /usr/local/etc/php/conf.d/opcache.ini
 
 ARG INSTALL_INTL=false
 RUN if [ ${INSTALL_INTL} = true ]; then \
-    # Install intl and requirements
     apt-get update -yqq && \
-    apt-get install -y zlib1g-dev libicu-dev g++ && \
+    apt-get install --no-install-recommends -y zlib1g-dev libicu-dev g++ && \
     docker-php-ext-configure intl && \
     docker-php-ext-install intl \
-;fi
+; rm -rf /var/lib/apt/lists/*; fi
 
 #####################################
 #       ImageMagick EXTENSION:
@@ -121,10 +118,10 @@ ARG INSTALL_IMAGEMAGICK=false
 ENV INSTALL_IMAGEMAGICK ${INSTALL_IMAGEMAGICK}
 RUN if [ ${INSTALL_IMAGEMAGICK} = true ]; then \
     apt-get update -y && \
-    apt-get install -y libmagickwand-dev imagemagick && \
+    apt-get install --no-install-recommends -y libmagickwand-dev imagemagick && \
     pecl install imagick && \
     docker-php-ext-enable imagick \
-;fi
+; rm -rf /var/lib/apt/lists/*; fi
 
 
 #
@@ -145,7 +142,7 @@ RUN rm -rf /tmp/pear
 #####################################
 
 # Install composer and add its bin to the PATH.
-RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
+RUN curl -f -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
 RUN echo "" >> ~/.bashrc && \
     echo 'export PATH="/var/www/railt.org/vendor/bin:$PATH"' >> ~/.bashrc