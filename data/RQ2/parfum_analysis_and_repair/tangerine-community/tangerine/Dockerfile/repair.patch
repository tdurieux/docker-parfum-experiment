diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/tangerine-community/tangerine/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/tangerine-community/tangerine/Dockerfile/repaired.Dockerfile
index ccf847f..602ca14 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/tangerine-community/tangerine/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/tangerine-community/tangerine/Dockerfile/repaired.Dockerfile
@@ -10,27 +10,27 @@ RUN echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selectio
 # Install global node dependencies
 # set unsafe-perm true allows it to work on ARM Macs(M1)
 RUN npm config set unsafe-perm true
-RUN npm install -g uuid couchdb-wedge
+RUN npm install -g uuid couchdb-wedge && npm cache clean --force;
 RUN npm config set unsafe-perm false
 
 # Install helpful JSON utility.
-RUN apt-get update && apt-get install -y jq 
+RUN apt-get update && apt-get install --no-install-recommends -y jq && rm -rf /var/lib/apt/lists/*;
 
-# T_USER1 is the username of the first user you will log in as. It is also the super user that has all permissions. 
+# T_USER1 is the username of the first user you will log in as. It is also the super user that has all permissions.
 ENV T_USER1 user1
 ENV T_USER1_PASSWORD password
 # T_ADMIN is the admin user for your database. Make sure to change this so the outside world does not have access.
 ENV T_ADMIN admin
 ENV T_PASS password
 # T_HOST_NAME is the URL without protocol (like http://) you will be accessing your Tangerine server at.
-ENV T_HOST_NAME 127.0.0.1 
+ENV T_HOST_NAME 127.0.0.1
 # If you have set up SSL on your server, you must change this to "https".
 ENV T_PROTOCOL http
 # Set to "development" for live code reload of editor and client.
 ENV T_RUN_MODE production
 
 # Install mysql integration dependencies.
-RUN apt-get update && apt-get install -y python3-pip
+RUN apt-get update && apt-get install --no-install-recommends -y python3-pip && rm -rf /var/lib/apt/lists/*;
 ADD ./server/src/modules/mysql/install-dependencies.sh /tangerine/server/src/modules/mysql/install-dependencies.sh
 RUN cd /tangerine/server/src/modules/mysql && \
     ./install-dependencies.sh
@@ -38,33 +38,33 @@ RUN cd /tangerine/server/src/modules/mysql && \
 # Install online-survey-app.
 ADD online-survey-app/package.json /tangerine/online-survey-app/package.json
 RUN cd /tangerine/online-survey-app/ && \
-    npm install
+    npm install && npm cache clean --force;
 
 # Install server.
 ADD ./server/package.json /tangerine/server/package.json
 RUN cd /tangerine/server && \
-    npm install
+    npm install && npm cache clean --force;
 
 # Install editor.
 ADD ./editor/package.json /tangerine/editor/package.json
 RUN cd /tangerine/editor && \
-    npm install
+    npm install && npm cache clean --force;
 
 # Install client.
 ADD client/package.json /tangerine/client/package.json
 RUN cd /tangerine/client/ && \
-    npm install
+    npm install && npm cache clean --force;
 
 # Install PWA tools.
 ADD client/pwa-tools/service-worker-generator/package.json /tangerine/client/pwa-tools/service-worker-generator/package.json
 ADD client/pwa-tools/service-worker-generator/workbox-cli-config.js /tangerine/client/pwa-tools/service-worker-generator/workbox-cli-config.js
 RUN cd /tangerine/client/pwa-tools/service-worker-generator && \
-    npm install
+    npm install && npm cache clean --force;
 ADD client/pwa-tools/updater-app/package.json /tangerine/client/pwa-tools/updater-app/package.json
 ADD client/pwa-tools/updater-app/bower.json /tangerine/client/pwa-tools/updater-app/bower.json
 RUN cd /tangerine/client/pwa-tools/updater-app && \
     npm install && \
-    ./node_modules/.bin/bower install --allow-root
+    ./node_modules/.bin/bower install --allow-root && npm cache clean --force;
 
 # Build online-survey-app.
 ADD online-survey-app /tangerine/online-survey-app/
@@ -79,7 +79,7 @@ run cd /tangerine/client && \
 # Build editor.
 ADD editor /tangerine/editor
 RUN cd /tangerine/editor && ./node_modules/.bin/ng build --base-href "./"
-RUN cd /tangerine/editor && ./node_modules/.bin/workbox generate:sw 
+RUN cd /tangerine/editor && ./node_modules/.bin/workbox generate:sw
 
 # Build PWA tools.
 RUN cd /tangerine/client/pwa-tools/updater-app && \
@@ -105,7 +105,7 @@ RUN cd /tangerine/server && \
 
 
 #
-# Wrap up 
+# Wrap up
 #
 
 ADD ./ /tangerine
@@ -115,4 +115,4 @@ RUN mkdir /groups
 RUN echo {} > /paid-worker-state.json
 
 EXPOSE 80
-ENTRYPOINT cd /tangerine/server/ && npm start 
+ENTRYPOINT cd /tangerine/server/ && npm start