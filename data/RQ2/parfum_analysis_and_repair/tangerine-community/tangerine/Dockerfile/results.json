{
  "startTime": 1674249218450,
  "endTime": 1674249219658,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 22,
        "columnEnd": 43
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 22,
        "columnEnd": 52
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 22,
        "columnEnd": 43
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 22,
        "columnEnd": 52
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Start with docker-tangerine-base-image, which provides the core Tangerine apps.\nFROM tangerine/docker-tangerine-base-image:v3.7.3\n\nRUN git config --global url.\"https://\".insteadOf git://\n\n# Never ask for confirmations\nENV DEBIAN_FRONTEND noninteractive\nRUN echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections\n\n# Install global node dependencies\n# set unsafe-perm true allows it to work on ARM Macs(M1)\nRUN npm config set unsafe-perm true\nRUN npm install -g uuid couchdb-wedge && npm cache clean --force;\nRUN npm config set unsafe-perm false\n\n# Install helpful JSON utility.\nRUN apt-get update && apt-get install --no-install-recommends -y jq && rm -rf /var/lib/apt/lists/*;\n\n# T_USER1 is the username of the first user you will log in as. It is also the super user that has all permissions.\nENV T_USER1 user1\nENV T_USER1_PASSWORD password\n# T_ADMIN is the admin user for your database. Make sure to change this so the outside world does not have access.\nENV T_ADMIN admin\nENV T_PASS password\n# T_HOST_NAME is the URL without protocol (like http://) you will be accessing your Tangerine server at.\nENV T_HOST_NAME 127.0.0.1\n# If you have set up SSL on your server, you must change this to \"https\".\nENV T_PROTOCOL http\n# Set to \"development\" for live code reload of editor and client.\nENV T_RUN_MODE production\n\n# Install mysql integration dependencies.\nRUN apt-get update && apt-get install --no-install-recommends -y python3-pip && rm -rf /var/lib/apt/lists/*;\nADD ./server/src/modules/mysql/install-dependencies.sh /tangerine/server/src/modules/mysql/install-dependencies.sh\nRUN cd /tangerine/server/src/modules/mysql && \\\n    ./install-dependencies.sh\n\n# Install online-survey-app.\nADD online-survey-app/package.json /tangerine/online-survey-app/package.json\nRUN cd /tangerine/online-survey-app/ && \\\n    npm install && npm cache clean --force;\n\n# Install server.\nADD ./server/package.json /tangerine/server/package.json\nRUN cd /tangerine/server && \\\n    npm install && npm cache clean --force;\n\n# Install editor.\nADD ./editor/package.json /tangerine/editor/package.json\nRUN cd /tangerine/editor && \\\n    npm install && npm cache clean --force;\n\n# Install client.\nADD client/package.json /tangerine/client/package.json\nRUN cd /tangerine/client/ && \\\n    npm install && npm cache clean --force;\n\n# Install PWA tools.\nADD client/pwa-tools/service-worker-generator/package.json /tangerine/client/pwa-tools/service-worker-generator/package.json\nADD client/pwa-tools/service-worker-generator/workbox-cli-config.js /tangerine/client/pwa-tools/service-worker-generator/workbox-cli-config.js\nRUN cd /tangerine/client/pwa-tools/service-worker-generator && \\\n    npm install && npm cache clean --force;\nADD client/pwa-tools/updater-app/package.json /tangerine/client/pwa-tools/updater-app/package.json\nADD client/pwa-tools/updater-app/bower.json /tangerine/client/pwa-tools/updater-app/bower.json\nRUN cd /tangerine/client/pwa-tools/updater-app && \\\n    npm install && \\\n    ./node_modules/.bin/bower install --allow-root && npm cache clean --force;\n\n# Build online-survey-app.\nADD online-survey-app /tangerine/online-survey-app/\nRUN cd /tangerine/online-survey-app && \\\n    ./node_modules/.bin/ng build --base-href \"./\"\n\n# build client.\nadd client /tangerine/client\nrun cd /tangerine/client && \\\n    ./node_modules/.bin/ng build --base-href \"./\"\n\n# Build editor.\nADD editor /tangerine/editor\nRUN cd /tangerine/editor && ./node_modules/.bin/ng build --base-href \"./\"\nRUN cd /tangerine/editor && ./node_modules/.bin/workbox generate:sw\n\n# Build PWA tools.\nRUN cd /tangerine/client/pwa-tools/updater-app && \\\n    npm run build && \\\n    cp logo.svg build/default/\n\n# Package release sources for APK and PWA.\nRUN cd /tangerine/client && \\\n    cp -r dist/tangerine-client builds/apk/www/shell && \\\n    cp -r pwa-tools/updater-app/build/default builds/pwa && \\\n    mkdir builds/pwa/release-uuid && \\\n    cp -r dist/tangerine-client builds/pwa/release-uuid/app\n\n# Modify links to javascript modules because they won't work in an APK (Angular 8 work-around)\nRUN sed -i 's/type=\"module\"/type=\"text\\/javascript\"/g' /tangerine/client/builds/apk/www/shell/index.html\n\n# Add the rest of server.\nADD server /tangerine/server\n\n# Link up global commands.\nRUN cd /tangerine/server && \\\n    npm link\n\n\n#\n# Wrap up\n#\n\nADD ./ /tangerine\n\nRUN mkdir /csv\nRUN mkdir /groups\nRUN echo {} > /paid-worker-state.json\n\nEXPOSE 80\nENTRYPOINT cd /tangerine/server/ && npm start\n"
}