{
  "startTime": 1674252114145,
  "endTime": 1674252115174,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 90
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 4,
        "columnEnd": 174
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 73,
        "columnEnd": 149
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 80
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 22,
        "columnEnd": 46
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 22,
        "columnEnd": 46
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright 2018, 2019, 2020 the Velero contributors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nFROM golang:1.17\n\nARG GOPROXY\n\nENV GO111MODULE=on\n# Use a proxy for go modules to reduce the likelihood of various hosts being down and breaking the build\nENV GOPROXY=${GOPROXY}\n\n# get code-generation tools (for now keep in GOPATH since they're not fully modules-compatible yet)\nRUN mkdir -p /go/src/k8s.io\nWORKDIR /go/src/k8s.io\nRUN git config --global advice.detachedHead false\nRUN git clone -b v0.22.2 https://github.com/kubernetes/code-generator\n\n# kubebuilder test bundle is separated from kubebuilder. Need to setup it for CI test.\nRUN curl -f -sSLo envtest-bins.tar.gz https://go.kubebuilder.io/test-tools/1.22.1/linux/amd64 && \\\n    mkdir /usr/local/kubebuilder && \\\n    tar -C /usr/local/kubebuilder --strip-components=1 -zvxf envtest-bins.tar.gz && rm envtest-bins.tar.gz\n\nRUN wget --quiet https://github.com/kubernetes-sigs/kubebuilder/releases/download/v3.2.0/kubebuilder_linux_amd64 && \\\n    mv kubebuilder_linux_amd64 /usr/local/kubebuilder/bin/kubebuilder && \\\n    chmod +x /usr/local/kubebuilder/bin/kubebuilder\n\n# get controller-tools\nRUN go get sigs.k8s.io/controller-tools/cmd/controller-gen@v0.7.0\n\n# get goimports (the revision is pinned so we don't indiscriminately update, but the particular commit\n# is not important)\nRUN go get golang.org/x/tools/cmd/goimports@11e9d9cc0042e6bd10337d4d2c3e5d9295508e7d\n\n# get protoc compiler and golang plugin\nWORKDIR /root\nRUN apt-get update && apt-get install --no-install-recommends -y unzip && rm -rf /var/lib/apt/lists/*;\nRUN wget --quiet https://github.com/protocolbuffers/protobuf/releases/download/v3.9.1/protoc-3.9.1-linux-x86_64.zip && \\\n    unzip protoc-3.9.1-linux-x86_64.zip && \\\n    mv bin/protoc /usr/bin/protoc && \\\n    chmod +x /usr/bin/protoc\nRUN go get github.com/golang/protobuf/protoc-gen-go@v1.0.0\n\n# get goreleaser\nRUN wget --quiet https://github.com/goreleaser/goreleaser/releases/download/v0.120.8/goreleaser_Linux_x86_64.tar.gz && \\\n    tar xvf goreleaser_Linux_x86_64.tar.gz && \\\n    mv goreleaser /usr/bin/goreleaser && \\\n    chmod +x /usr/bin/goreleaser && rm goreleaser_Linux_x86_64.tar.gz\n\n# get golangci-lint\nRUN curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.27.0\n\n# install kubectl\nRUN curl -f -LO https://storage.googleapis.com/kubernetes-release/release/$( curl -f -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl\nRUN chmod +x ./kubectl\nRUN mv ./kubectl /usr/local/bin\n"
}