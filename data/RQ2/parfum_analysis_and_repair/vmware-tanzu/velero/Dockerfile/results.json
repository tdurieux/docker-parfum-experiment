{
  "startTime": 1674253869022,
  "endTime": 1674253869911,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 22,
        "columnEnd": 46
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 22,
        "columnEnd": 46
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright 2020 the Velero contributors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\nFROM --platform=$BUILDPLATFORM golang:1.17 as builder-env\n\nARG GOPROXY\nARG PKG\nARG VERSION\nARG GIT_SHA\nARG GIT_TREE_STATE\nARG REGISTRY\n\nENV CGO_ENABLED=0 \\\n    GO111MODULE=on \\\n    GOPROXY=${GOPROXY} \\\n    LDFLAGS=\"-X ${PKG}/pkg/buildinfo.Version=${VERSION} -X ${PKG}/pkg/buildinfo.GitSHA=${GIT_SHA} -X ${PKG}/pkg/buildinfo.GitTreeState=${GIT_TREE_STATE} -X ${PKG}/pkg/buildinfo.ImageRegistry=${REGISTRY}\"\n\nWORKDIR /go/src/github.com/vmware-tanzu/velero\n\nCOPY . /go/src/github.com/vmware-tanzu/velero\n\nRUN apt-get update && apt-get install --no-install-recommends -y bzip2 && rm -rf /var/lib/apt/lists/*;\n\nFROM --platform=$BUILDPLATFORM builder-env as builder\n\nARG TARGETOS\nARG TARGETARCH\nARG TARGETVARIANT\nARG PKG\nARG BIN\nARG RESTIC_VERSION\n\nENV GOOS=${TARGETOS} \\\n    GOARCH=${TARGETARCH} \\\n    GOARM=${TARGETVARIANT}\n\nRUN mkdir -p /output/usr/bin && \\\n    bash ./hack/download-restic.sh && \\\n    export GOARM=$( echo \"${GOARM}\" | cut -c2-) && \\\n    go build -o /output/${BIN} \\\n    -ldflags \"${LDFLAGS}\" ${PKG}/cmd/${BIN}\n\nFROM gcr.io/distroless/base-debian11:nonroot\n\nLABEL maintainer=\"Nolan Brubaker <brubakern@vmware.com>\"\n\nCOPY --from=builder /output /\n\nUSER nonroot:nonroot\n\n"
}