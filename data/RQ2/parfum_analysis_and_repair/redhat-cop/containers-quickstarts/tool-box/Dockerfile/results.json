{
  "startTime": 1674216704458,
  "endTime": 1674216705549,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 32
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM registry.access.redhat.com/ubi8\n\nENV OC_VERSION=4.9.5 \\\n    ODO_VERSION=v2.3.1 \\\n    ANSIBLE_VERSION=2.9 \\\n    JQ_VERSION=1.6 \\\n    HELM_VERSION=v3.2.3 \\\n    TEKTON_VERSION=0.21.0 \\\n    HOME=/home/tool-box \\\n    INSTALL_PKGS=\"git vim zip unzip python36\"\n\nRUN yum -y update && \\\n    yum -y install $INSTALL_PKGS && \\\n    yum clean all && rm -rf /var/cache/yum\n\nRUN curl -o jq --fail -sL https://github.com/stedolan/jq/releases/download/jq-${JQ_VERSION}/jq-linux64 && \\\n    chmod +x jq && \\\n    mv jq /usr/local/bin\n\nRUN mkdir -m 775 $HOME && \\\n    chmod 775 /etc/passwd && \\\n    pip3 install --no-cache-dir --upgrade pip && \\\n    pip3 install --no-cache-dir git+https://github.com/ansible/ansible.git@stable-${ANSIBLE_VERSION}\n\nRUN curl --fail -s https://get.helm.sh/helm-${HELM_VERSION}-linux-amd64.tar.gz | tar -xvz && \\\n    chmod u+x linux-amd64/helm && mv linux-amd64/helm /usr/local/bin/ && rm -rf linux-amd64\n\nRUN curl --fail -sL https://github.com/tektoncd/cli/releases/download/v${TEKTON_VERSION}/tkn_${TEKTON_VERSION}_Linux_x86_64.tar.gz | tar --no-same-owner -xvz -C /usr/local/bin/ tkn\n\nRUN curl --fail -sL https://mirror.openshift.com/pub/openshift-v4/clients/ocp/${OC_VERSION}/openshift-client-linux-${OC_VERSION}.tar.gz | tar -C /usr/local/bin/ -xzf -\n\nRUN curl --fail -sL https://mirror.openshift.com/pub/openshift-v4/clients/odo/${ODO_VERSION}/odo-linux-amd64 -o /usr/local/bin/odo && \\\n    chmod +x /usr/local/bin/odo\n\nWORKDIR $HOME\n\nADD ./root /\n\nRUN chmod u+x /usr/local/bin/run && \\\n    rm -rf $HOME/.cache\n\nUSER 1001\n\nENTRYPOINT [\"/usr/local/bin/run\"]\nCMD [\"sleep\", \"infinity\"]\n"
}