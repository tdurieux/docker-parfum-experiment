{
  "startTime": 1674216903061,
  "endTime": 1674216903754,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 68
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 146
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 118
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 113
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 159
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 135
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM quay.io/openshift/origin-jenkins-agent-base:4.9\n\nARG VERSION=3.5.2\nARG YQ_VERSION=v4.5.1\nARG CT_VERSION=3.3.1\nARG OPENSHIFT_CLIENT_VERSION=4.8\nARG CONFTEST_VERSION=0.23.0\nARG KUBE_LINTER_VERSION=0.2.3\n\n## Required in order to avoid ct \"ascii codec can't encode character\" error\nENV PYTHONIOENCODING=utf-8 \\\n    LANG=C.UTF-8 \\\n    LANGUAGE=C.UTF-8 \\\n    LC_ALL=C.UTF-8\n\nCOPY ubi8.repo /tmp/\n\n## Install helm, yq, conftest & kube-linter\nRUN curl -f -sL https://get.helm.sh/helm-v${VERSION}-linux-amd64.tar.gz | tar zxf - -C /usr/local/bin --strip-components=1 linux-amd64/helm && \\\n    curl -f -sL https://github.com/open-policy-agent/conftest/releases/download/v${CONFTEST_VERSION}/conftest_${CONFTEST_VERSION}_Linux_x86_64.tar.gz | tar zxf - -C /usr/local/bin conftest && \\\n    curl -f -sL https://github.com/stackrox/kube-linter/releases/download/${KUBE_LINTER_VERSION}/kube-linter-linux.tar.gz | tar zxf - -C /usr/local/bin kube-linter && \\\n    curl -f -sL https://github.com/mikefarah/yq/releases/download/${YQ_VERSION}/yq_linux_amd64 -o /usr/local/bin/yq && \\\n    chmod -R 755 /usr/local/bin/yq\n\n## Install ct\nRUN curl -f -sL -o /tmp/chart-testing.tar.gz https://github.com/helm/chart-testing/releases/download/v${CT_VERSION}/chart-testing_${CT_VERSION}_linux_amd64.tar.gz && \\\n    mkdir ${HOME}/.ct && \\\n    tar zxf /tmp/chart-testing.tar.gz -C /usr/local/bin ct && \\\n    tar zxf /tmp/chart-testing.tar.gz -C ${HOME}/.ct --strip-components=1 etc && \\\n    rm /tmp/chart-testing.tar.gz\n\n## Install git, python 3.8, yamale, and yamllint\nRUN INSTALL_PKGS=\"git python38 python38-pip\" && \\\n    rm -f /etc/yum.repos.d/*.repo && \\\n    mv /tmp/ubi8.repo /etc/yum.repos.d/ubi8.repo && \\\n    dnf -y --setopt=tsflags=nodocs install $INSTALL_PKGS && \\\n    dnf -y clean all && \\\n    alternatives --set python3 /usr/bin/python3.8 && \\\n    python3 -m pip install yamale==3.0.1 && \\\n    python3 -m pip install yamllint==1.24.1 && \\\n    chmod -R 775 /var/lib/alternatives && \\\n    chmod -R 775 /etc/alternatives\n\n## Install oc and kubectl\nRUN curl -f -sL https://mirror.openshift.com/pub/openshift-v4/clients/ocp/stable-${OPENSHIFT_CLIENT_VERSION}/openshift-client-linux.tar.gz \\\n    | tar zxf - -C /usr/local/bin oc kubectl\n\nUSER 1001\n"
}