{
  "startTime": 1674218312496,
  "endTime": 1674218313808,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 94,
        "lineEnd": 94,
        "columnStart": 4,
        "columnEnd": 75
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 94,
        "lineEnd": 94,
        "columnStart": 4,
        "columnEnd": 75
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 79,
        "lineEnd": 79,
        "columnStart": 4,
        "columnEnd": 97
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 81,
        "lineEnd": 81,
        "columnStart": 4,
        "columnEnd": 54
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 83,
        "lineEnd": 83,
        "columnStart": 4,
        "columnEnd": 79
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 74,
        "lineEnd": 74,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 79,
        "lineEnd": 79,
        "columnStart": 4,
        "columnEnd": 97
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 81,
        "lineEnd": 81,
        "columnStart": 4,
        "columnEnd": 54
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 83,
        "lineEnd": 83,
        "columnStart": 4,
        "columnEnd": 79
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 74,
        "lineEnd": 74,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 79,
        "lineEnd": 79,
        "columnStart": 4,
        "columnEnd": 97
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 81,
        "lineEnd": 81,
        "columnStart": 4,
        "columnEnd": 54
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 83,
        "lineEnd": 83,
        "columnStart": 4,
        "columnEnd": 79
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 97
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 74,
        "lineEnd": 74,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 79,
        "lineEnd": 79,
        "columnStart": 4,
        "columnEnd": 121
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 81,
        "lineEnd": 81,
        "columnStart": 4,
        "columnEnd": 78
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 83,
        "lineEnd": 83,
        "columnStart": 4,
        "columnEnd": 103
      }
    }
  ],
  "repairedDockerfile": "FROM amd64/golang:1.18.1 AS build\n\nARG TAG=0.0.1\n\n# 编译-环境变量\nENV GO111MODULE=on\nENV GOPROXY=https://goproxy.cn,direct\nENV CGO_ENABLED=1\nENV GOARCH=amd64\nENV GOOS=linux\n\n# 工作目录\nADD . /go/src/github.com/mindoc-org/mindoc\nWORKDIR /go/src/github.com/mindoc-org/mindoc\n\n# 编译\nRUN go env\nRUN go mod tidy -v\nRUN go build -v -o mindoc_linux_amd64 -ldflags \"-w -s -X 'main.VERSION=$TAG' -X 'main.BUILD_TIME=`date`' -X 'main.GO_VERSION=`go version`'\"\nRUN cp conf/app.conf.example conf/app.conf\n# 清理不需要的文件\nRUN rm appveyor.yml docker-compose.yml Dockerfile .travis.yml .gitattributes .gitignore go.mod go.sum main.go README.md simsun.ttc start.sh conf/*.go\nRUN rm -rf cache commands controllers converter .git .github graphics mail models routers utils\n\n# 测试编译的mindoc是否ok\nRUN ./mindoc_linux_amd64 version\n\n# 必要的文件复制\nADD simsun.ttc /usr/share/fonts/win/\nADD start.sh /go/src/github.com/mindoc-org/mindoc\n\n\n# Ubuntu 20.04\nFROM ubuntu:focal\n\n# 切换默认shell为bash\nSHELL [\"/bin/bash\", \"-c\"]\n\nCOPY --from=build /usr/share/fonts/win/simsun.ttc /usr/share/fonts/win/\nCOPY --from=build /go/src/github.com/mindoc-org/mindoc /mindoc\nWORKDIR /mindoc\nRUN chmod a+r /usr/share/fonts/win/simsun.ttc\n\n# 备份原有源\nRUN mv /etc/apt/sources.list /etc/apt/sources.list-backup\n# 最小化源，缩短apt update时间(ca-certificates必须先安装才支持换tsinghua源)\nRUN echo 'deb http://archive.ubuntu.com/ubuntu/ focal main restricted' > /etc/apt/sources.list\nRUN apt-get update\nRUN apt install --no-install-recommends -y ca-certificates && rm -rf /var/lib/apt/lists/*;\n# 更换aliyun源(echo多行内容不能以#开头，会被docker误判为注释行，所以采用\\n#开头)\nRUN echo $'\\\ndeb http://mirrors.aliyun.com/ubuntu/ focal main restricted universe multiverse\\\n\\n# deb-src http://mirrors.aliyun.com/ubuntu/ focal main restricted universe multiverse\\n\\\ndeb http://mirrors.aliyun.com/ubuntu/ focal-security main restricted universe multiverse\\\n\\n# deb-src http://mirrors.aliyun.com/ubuntu/ focal-security main restricted universe multiverse\\n\\\ndeb http://mirrors.aliyun.com/ubuntu/ focal-updates main restricted universe multiverse\\\n\\n# deb-src http://mirrors.aliyun.com/ubuntu/ focal-updates main restricted universe multiverse\\n\\\ndeb http://mirrors.aliyun.com/ubuntu/ focal-proposed main restricted universe multiverse\\\n\\n# deb-src http://mirrors.aliyun.com/ubuntu/ focal-proposed main restricted universe multiverse\\n\\\ndeb http://mirrors.aliyun.com/ubuntu/ focal-backports main restricted universe multiverse\\\n\\n# deb-src http://mirrors.aliyun.com/ubuntu/ focal-backports main restricted universe multiverse'\\\n> /etc/apt/sources.list\n\n# 更新软件包信息\nRUN apt-get update\n# 安装必要的系统工具\nRUN apt install --no-install-recommends -y apt-transport-https ca-certificates curl wget xz-utils && rm -rf /var/lib/apt/lists/*;\n\n# 时区设置(如果不设置, calibre依赖的tzdata在安装过程中会要求选择时区)\nENV TZ=Asia/Shanghai\nRUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone\n# tzdata的前端类型默认为readline（Shell情况下）或dialog（支持GUI的情况下）\nARG DEBIAN_FRONTEND=noninteractive\n# 安装时区信息\nRUN apt install -y --no-install-recommends tzdata && rm -rf /var/lib/apt/lists/*;\n# 重新配置tzdata软件包，使得时区设置生效\nRUN dpkg-reconfigure --frontend noninteractive tzdata\n\n# 安装 calibre 依赖的包\nRUN apt install --no-install-recommends -y libgl-dev libnss3-dev libxcomposite-dev libxrandr-dev libxi-dev libxdamage-dev && rm -rf /var/lib/apt/lists/*;\n# 安装文泉驿字体\nRUN apt install --no-install-recommends -y fonts-wqy-microhei fonts-wqy-zenhei && rm -rf /var/lib/apt/lists/*;\n# 安装中文语言包\nRUN apt-get install --no-install-recommends -y locales language-pack-zh-hans language-pack-zh-hans-base && rm -rf /var/lib/apt/lists/*;\n# 设置默认编码\nRUN locale-gen \"zh_CN.UTF-8\"\nRUN update-locale LANG=zh_CN.UTF-8\nENV LANG=zh_CN.UTF-8\nENV LANGUAGE=zh_CN:en\nENV LC_ALL=zh_CN.UTF-8\n# 安装-calibre\n# RUN apt-get install -y calibre # 此种方式安装省事，但会安装很多额外不需要的软件包，导致体积过大\nRUN mkdir -p /tmp/calibre-cache\n# 获取最新版本号\nRUN curl -f -s https://code.calibre-ebook.com/latest >/tmp/calibre-cache/version\n# 下载最新版本\n# RUN wget -O /tmp/calibre-cache/calibre-x86_64.txz -c https://download.calibre-ebook.com/`cat /tmp/calibre-cache/version`/calibre-`cat /tmp/calibre-cache/version`-x86_64.txz\n# 使用 ghproxy.com 替换 github 实现加速\n# RUN wget -O /tmp/calibre-cache/calibre-x86_64.txz -c https://ghproxy.com/https://github.com/kovidgoyal/calibre/releases/download/v`cat /tmp/calibre-cache/version`/calibre-`cat /tmp/calibre-cache/version`-x86_64.txz\nRUN wget -O /tmp/calibre-cache/calibre-x86_64.txz -c https://github.com/kovidgoyal/calibre/releases/download/v`cat /tmp/calibre-cache/version`/calibre-`cat /tmp/calibre-cache/version`-x86_64.txz\n# 注: 调试阶段，下载alibre-5.22.1-x86_64.txz到本地(使用 python -m http.server)，加速构建\n# RUN wget -O /tmp/calibre-cache/calibre-x86_64.txz -c http://10.96.8.252:8000/calibre-5.22.1-x86_64.txz\n# 解压\nRUN mkdir -p /opt/calibre\n# RUN tar --extract --file=/tmp/calibre-cache/calibre-x86_64.txz --directory /opt/calibre\nRUN tar xJof /tmp/calibre-cache/calibre-x86_64.txz -C /opt/calibre\nENV PATH=$PATH:/opt/calibre\n# 设置calibre相关环境变量\nENV QTWEBENGINE_CHROMIUM_FLAGS=\"--no-sandbox\"\nENV QT_QPA_PLATFORM='offscreen'\n# 测试 calibre 可正常使用\nRUN ebook-convert --version\n# 清理calibre缓存\nRUN rm -rf /tmp/calibre-cache\n\n# refer: https://docs.docker.com/engine/reference/builder/#volume\n# 数据同步目录\nVOLUME /mindoc-sync-host\n\n# refer: https://docs.docker.com/engine/reference/builder/#expose\nEXPOSE 8181/tcp\n\n# 如果配置文件不存在就复制\nRUN cp --no-clobber /mindoc/conf/app.conf.example /mindoc/conf/app.conf\n\nENV ZONEINFO=/mindoc/lib/time/zoneinfo.zip\nRUN chmod +x /mindoc/start.sh\n\nENTRYPOINT [\"/bin/bash\", \"/mindoc/start.sh\"]\n\n# https://docs.docker.com/engine/reference/commandline/build/#options\n# docker build --progress plain --rm --build-arg TAG=2.0.1 --tag gsw945/mindoc:2.0.1 .\n# https://docs.docker.com/engine/reference/commandline/run/#options\n# set MINDOC=//d/mindoc # windows\n# export MINDOC=/home/ubuntu/mindoc-docker # linux\n# docker run --rm -it  -p 8181:8181 -v \"%MINDOC%\":\"/mindoc-sync-host\" --name mindoc -e MINDOC_ENABLE_EXPORT=true -d gsw945/mindoc:2.0.1\n"
}