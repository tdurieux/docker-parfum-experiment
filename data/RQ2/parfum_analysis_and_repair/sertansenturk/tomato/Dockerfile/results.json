{
  "startTime": 1674250954449,
  "endTime": 1674250955581,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 160
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 16
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:18.04\n\n# Install pip, LilyPond, and Matlab Compiler Runtime 2015a\n# MCR installation is adopted from a Dockerfile by Stanford Vistalab:\n# https://raw.githubusercontent.com/vistalab/docker/master/matlab/runtime/2015b/Dockerfile\nRUN apt-get -qq update && \\\n    apt-get -qq --no-install-recommends install -y \\\n        unzip \\\n        wget \\\n        python3-pip \\\n        lilypond && \\\n    mkdir /mcr-install && \\\n    cd /mcr-install && \\\n    wget --progress=bar:force https://www.mathworks.com/supportfiles/downloads/R2015a/deployment_files/R2015a/installers/glnxa64/MCR_R2015a_glnxa64_installer.zip && \\\n    unzip -q MCR_R2015a_glnxa64_installer.zip && \\\n    apt-get -qq remove -y \\\n        unzip \\\n        wget && \\\n    ./install \\\n        -destinationFolder /usr/local/MATLAB/MATLAB_Runtime/ \\\n        -agreeToLicense yes \\\n        -mode silent && \\\n    cd / && \\\n    rm -rf mcr-install && rm -rf /var/lib/apt/lists/*;\n\n# Install Python dependencies from requirements.txt in advance\n# - Useful for development since changes in code will not trigger a layer re-build\nCOPY requirements.txt /code/\nRUN python3 -m pip install --upgrade pip && \\\n    pip3 install --no-cache-dir -r /code/requirements.txt\n\n# Install tomato\nCOPY MANIFEST.in setup.py /code/\nCOPY src /code/src\nRUN cd /code && \\\n    python3 -m pip install . -v && \\\n    cd / && \\\n    rm -rf code\n\n# Set user & workdir\nRUN useradd --create-home -s /bin/bash tomato_user\nUSER tomato_user\nWORKDIR /home/tomato_user/\n\nCMD [\"python3\"]\n"
}