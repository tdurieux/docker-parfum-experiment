{
  "startTime": 1674252656141,
  "endTime": 1674252656759,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 22,
        "columnEnd": 44
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 22,
        "columnEnd": 44
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.9-slim\n\nRUN apt-get update && apt-get install --no-install-recommends -y git && rm -rf /var/lib/apt/lists/*;\n\n# Allow statements and log messages to immediately appear in the Knative logs\nENV PYTHONUNBUFFERED True\n\n# Copy local code to the container image.\nENV APP_HOME /app\nWORKDIR $APP_HOME\n\n# Copy app handler code\nCOPY sdk/python/feast/infra/feature_servers/gcp_cloudrun/app.py ./app.py\n\n# Copy necessary parts of the Feast codebase\nCOPY sdk/python ./sdk/python\nCOPY protos ./protos\nCOPY setup.py setup.py\nCOPY pyproject.toml pyproject.toml\nCOPY README.md ./README.md\n\n# Install production dependencies.\nRUN --mount=source=.git,target=.git,type=bind pip install --no-cache-dir \\\n    -e '.[gcp,redis]' \\\n    -r ./sdk/python/feast/infra/feature_servers/gcp_cloudrun/requirements.txt\n\n# Run the web service on container startup. Here we use the gunicorn\n# webserver, with one worker process and 8 threads.\n# For environments with multiple CPU cores, increase the number of workers\n# to be equal to the cores available.\n# Timeout is set to 0 to disable the timeouts of the workers to allow Cloud Run to handle instance scaling.\nCMD exec gunicorn -k uvicorn.workers.UvicornWorker --bind :$PORT --workers 1 --threads 8 --timeout 0 app:app\n"
}