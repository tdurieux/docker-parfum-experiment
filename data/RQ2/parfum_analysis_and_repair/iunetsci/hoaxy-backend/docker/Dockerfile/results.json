{
  "startTime": 1674251570653,
  "endTime": 1674251572012,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 4,
        "columnEnd": 79
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 98,
        "lineEnd": 98,
        "columnStart": 4,
        "columnEnd": 79
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 105
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 117,
        "lineEnd": 117,
        "columnStart": 7,
        "columnEnd": 62
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 118,
        "lineEnd": 118,
        "columnStart": 7,
        "columnEnd": 37
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM frolvlad/alpine-glibc:alpine-3.9\n\nENV CONDA_DIR=\"/opt/conda\"\nENV PATH=\"$CONDA_DIR/bin:$PATH\"\n\nRUN apk add --no-cache --update alpine-sdk \\\n                     libxml2-dev \\\n                     libxslt-dev \\\n                     python-dev \\\n                     openssl-dev \\\n                     libffi-dev \\\n                     zlib-dev \\\n                     py-pip \\\n                     nano bash jq musl-dev\n\n# Install conda2\n# Install conda\nRUN CONDA_VERSION=\"4.5.12\" && \\\n    CONDA_MD5_CHECKSUM=\"866ae9dff53ad0874e1d1a60b1ad1ef8\" && \\\n    \\\n    apk add --no-cache --virtual=.build-dependencies wget ca-certificates bash && \\\n    \\\n    mkdir -p \"$CONDA_DIR\" && \\\n    wget \"https://repo.continuum.io/miniconda/Miniconda3-${CONDA_VERSION}-Linux-x86_64.sh\" -O miniconda.sh && \\\n    echo \"$CONDA_MD5_CHECKSUM  miniconda.sh\" | md5sum -c && \\\n    bash miniconda.sh -f -b -p \"$CONDA_DIR\" && \\\n    echo \"export PATH=$CONDA_DIR/bin:\\$PATH\" > /etc/profile.d/conda.sh && \\\n    rm miniconda.sh && \\\n\n    conda update --all --yes && \\\n    conda update -n base -c defaults conda && \\\n    conda config --set auto_update_conda False && \\\n    rm -r \"$CONDA_DIR/pkgs/\" && \\\n\n    apk del --purge .build-dependencies && \\\n\n    mkdir -p \"$CONDA_DIR/locks\" && \\\n    chmod 777 \"$CONDA_DIR/locks\"\n\nENV JAVA_HOME=/usr/lib/jvm/default-jvm\nRUN apk add --no-cache openjdk8 && \\\n    ln -sf \"${JAVA_HOME}/bin/\"* \"/usr/bin/\"\n\nENV ANT_HOME /usr/share/java/apache-ant\nENV PATH $PATH:$ANT_HOME/bin\n\nENV ANT_OPTS=\"-Dhttp.proxyHost=proxy -Dhttp.proxyPort=8080\"\n\n#Install dependencies for hoaxy\nRUN conda install -y python=3.7.5\\\n        docopt \\\n        Flask \\\n        gunicorn \\\n        networkx \\\n        pandas \\\n        psycopg2 \\\n        python-dateutil \\\n        pytz \\\n        pyyaml \\\n        scrapy \\\n        simplejson \\\n        SQLAlchemy \\\n        sqlparse \\\n        tabulate \\\n        gxx_linux-64 \\\n        make\n\nWORKDIR /usr/src/pylucene\n\nRUN apk add --no-cache --no-progress nano htop jq ca-certificates curl libssl1.1 apache-ant openssl openssl-dev g++ gcc bash git\n\nRUN mkdir -p /root/.ant/lib\nRUN curl -f https://downloads.apache.org/ant/ivy/2.5.0/apache-ivy-2.5.0-bin.tar.gz | tar -xz --strip-components=1 \\\n    && cp ivy-2.5.0.jar /root/.ant/lib/\n\nRUN apk add --no-cache python && \\\n    python -m ensurepip && \\\n    rm -r /usr/lib/python*/ensurepip && \\\n    pip install --no-cache-dir setuptools==57.0.0 && \\\n    rm -r /root/.cache\n\n# Install Gosu to /usr/local/bin/gosu\n# ADD https://github.com/tianon/gosu/releases/download/1.10/gosu-amd64 /usr/local/sbin/gosu\n# RUN chmod +x /usr/local/sbin/gosu\n# RUN adduser -D hoaxy -h /hoaxy -s /bin/sh\n# USER hoaxy\n\n# Install tini to /usr/local/sbin\n# ADD https://github.com/krallin/tini/releases/download/v0.18.0/tini-muslc-amd64 /usr/local/sbin/tini\n# RUN apk --no-cache --no-progress add ca-certificates git libssh2 openssl \\\n# && chmod +x /usr/local/sbin/tini && mkdir -p /opt \\\n# && adduser -D hoaxy -h /opt/hoaxy -s /bin/sh \\\n# && su hoaxy -c 'cd /opt/hoaxy; mkdir -p bin config data'\n\n# Switch to user context\n# USER hoaxy\n# WORKDIR /opt/hoaxy\n\nRUN curl -f https://downloads.apache.org/lucene/pylucene/pylucene-7.7.1-src.tar.gz | tar -xz --strip-components=1 \\\n    && cd jcc \\\n    && export JCC_ARGSEP=\";\" \\\n    && export JCC_CFLAGS=\"-v;-fno-strict-aliasing;-Wno-write-strings;-D__STDC_FORMAT_MACROS\" \\\n    && JCC_JDK=/usr/lib/jvm/default-jvm python setup.py install \\\n    && cd .. \\\n        && make all install JCC='python -m jcc' ANT=ant PYTHON=python NUM_FILES=8 \\\n        && rm -rf /usr/src/pylucene\n\nENV HOAXY_VCS_BRANCH=${HOAXY_VCS_BRANCH:-\"master\"} \\\n    HOAXY_VCS_DEPTH=${HOAXY_VCS_DEPTH:-\"1\"} \\\n    HOAXY_VCS_REMOTE=${HOAXY_VCS_REMOTE:-\"https://github.com/IUNetSci/hoaxy-backend.git\"}\n\nRUN apk add --no-cache --no-progress yaml-dev postgresql-dev \\\n    && git clone --recursive --depth=${HOAXY_VCS_DEPTH} --branch ${HOAXY_VCS_BRANCH} ${HOAXY_VCS_REMOTE} \\\n    && cd hoaxy-backend\n#    && conda install -y psycopg2\n\nRUN cd hoaxy-backend \\\n    && pip install --no-cache-dir --upgrade --force-reinstall jieba3k==0.35.1 \\\n    && pip install --no-cache-dir requests --upgrade \\\n    && python setup.py install\n\n#    && pip install --upgrade --force-reinstall setuptools \\\n#    && find . -name '*.pyc' -delete \\\n\n## Use entrypoint script to switch case and pass custom/default params to hoaxy\nWORKDIR /opt\nCOPY entrypoint.sh .\nRUN chmod +x /opt/entrypoint.sh\n\n## If Dockerfile at root dir of vcs repo\n# COPY . .\n# RUN python setup.py install\n\nENV HOAXY_HOME=/home/.hoaxy\n\nEXPOSE 5432\n\n## If entrypoint.sh switch case\nENTRYPOINT [\"/opt/entrypoint.sh\"]\nCMD [\"bash\"]\n## Dev mode\n# CMD [\"/bin/bash\"]\n\n## With tini example\n# ENTRYPOINT [\"tini\", \"-g\", \"--\"]\n# CMD [\"hoaxy\", \"-conf_dir=/opt/hoaxy/config\"]\n"
}