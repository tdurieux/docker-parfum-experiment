{
  "startTime": 1674255296279,
  "endTime": 1674255297746,
  "originalSmells": [
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 66
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 81
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 73,
        "lineEnd": 73,
        "columnStart": 4,
        "columnEnd": 24
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# This file is part of dirtsand.\n#\n# dirtsand is free software: you can redistribute it and/or modify\n# it under the terms of the GNU Affero General Public License as\n# published by the Free Software Foundation, either version 3 of the\n# License, or (at your option) any later version.\n#\n# dirtsand is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU Affero General Public License for more details.\n#\n# You should have received a copy of the GNU Affero General Public License\n# along with dirtsand.  If not, see <http://www.gnu.org/licenses/>.\n\nARG BUILD_TYPE=release\n\nFROM alpine:latest AS run_env\nRUN \\\n    apk add --no-cache bash libstdc++ openssl postgresql-client readline zlib && \\\n\n    adduser --disabled-password --no-create-home dirtsand && \\\n    mkdir -p /opt/dirtsand && chown -R dirtsand /opt/dirtsand\n\nFROM run_env AS build_env_debug\nENV BUILD_TYPE=Debug\nENV CFLAGS=-ggdb\nENV CXXFLAGS=-ggdb\n\nFROM run_env AS build_env_release\nENV BUILD_TYPE=Release\n\nFROM build_env_${BUILD_TYPE} AS build_env\nRUN \\\n    apk add --no-cache build-base cmake git openssl-dev postgresql-dev readline-dev zlib-dev && \\\n\n    mkdir -p /usr/src && cd /usr/src && \\\n    git clone --depth 1 https://github.com/zrax/string_theory.git && \\\n    cmake -DCMAKE_BUILD_TYPE=Release -DST_BUILD_TESTS=OFF -B string_theory/build -S string_theory && \\\n    cmake --build string_theory/build --parallel && cmake --build string_theory/build --target install && \\\n\n    git clone --depth 1 https://github.com/H-uru/Plasma.git && rm -rf /usr/src\n\nFROM build_env AS builder\nCOPY . /usr/src/dirtsand\nWORKDIR /usr/src\n\nARG PRODUCT_BRANCH_ID=1\nARG PRODUCT_BUILD_ID=918\nARG PRODUCT_BUILD_TYPE=50\nARG PRODUCT_UUID=ea489821-6c35-4bd0-9dae-bb17c585e680\nARG DS_HOOD_USER_NAME=DS\nARG DS_HOOD_INST_NAME=Neighborhood\nARG DS_HOOD_POP_THRESHOLD=20\n\nRUN \\\n    mkdir -p /opt/dirtsand/db && cp dirtsand/db/*.sql /opt/dirtsand/db && \\\n    cmake -DCMAKE_INSTALL_PREFIX=/opt/dirtsand -DCMAKE_BUILD_TYPE=$BUILD_TYPE \\\n        -DPRODUCT_BRANCH_ID=${PRODUCT_BRANCH_ID} -DPRODUCT_BUILD_ID=${PRODUCT_BUILD_ID} \\\n        -DPRODUCT_BUILD_TYPE=${PRODUCT_BUILD_TYPE} -DPRODUCT_UUID=${PRODUCT_UUID} \\\n        -DDS_HOOD_USER_NAME=${DS_HOOD_USER_NAME} -DDS_HOOD_INST_NAME=${DS_HOOD_INST_NAME} \\\n        -DDS_HOOD_POP_THRESHOLD=${DS_HOOD_POP_THRESHOLD} -DENABLE_TESTS=OFF \\\n        -B dirtsand/build -S dirtsand && \\\n    cmake --build dirtsand/build --parallel && cmake --build dirtsand/build --target install && \\\n    mkdir -p /opt/dirtsand/etc && \\\n    \\\n    mkdir -p /opt/dirtsand/lib/moul-scripts/SDL && mkdir -p /opt/dirtsand/lib/moul-scripts/dat && \\\n    cp /usr/src/Plasma/Scripts/SDL/*.sdl /opt/dirtsand/lib/moul-scripts/SDL && \\\n    cp /usr/src/Plasma/Scripts/dat/*.age /opt/dirtsand/lib/moul-scripts/dat && \\\n    \\\n    chown -R dirtsand /opt/dirtsand\n\nFROM run_env AS run_env_debug\nRUN apk add --no-cache gdb musl-dbg\nCOPY . /usr/src/dirtsand\n\nFROM run_env AS run_env_release\n\nFROM run_env_${BUILD_TYPE} AS production\nCOPY --from=builder /opt/dirtsand /opt/dirtsand\n\nUSER dirtsand\nWORKDIR /opt/dirtsand\n\nEXPOSE 14617/tcp\nEXPOSE 8080/tcp\nENTRYPOINT /opt/dirtsand/bin/docker-entrypoint.sh\n"
}