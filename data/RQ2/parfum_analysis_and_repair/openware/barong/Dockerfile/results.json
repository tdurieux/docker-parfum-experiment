{
  "startTime": 1674250479021,
  "endTime": 1674250479916,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 110
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 83
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 7,
        "columnEnd": 86
      }
    },
    {
      "rule": "gemUpdateSystemRmRootGem",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "gemUpdateNoDocument",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 22
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ruby:2.7.4\n\n# By default image is built using RAILS_ENV=production.\n# You may want to customize it:\n#\n#   --build-arg RAILS_ENV=development\n#\n# See https://docs.docker.com/engine/reference/commandline/build/#set-build-time-variables-build-arg\n#\nARG RAILS_ENV=production\nARG UID=1000\nARG GID=1000\n\nARG MAXMINDDB_LINK\n# Open Source license key provided by Openware has some download rate and amount limits\n# We strongly suggest you to create your oun key and pass via --build-arg MAXMINDDB_LICENSE_KEY\n# All the guidance on how to create license key you can find here - https://blog.maxmind.com/2019/12/18/significant-changes-to-accessing-and-using-geolite2-databases/\nARG MAXMINDDB_LICENSE_KEY=T6ElPBlyOOuCyjzw\nENV MAXMINDDB_LINK=${MAXMINDDB_LINK:-https://download.maxmind.com/app/geoip_download?edition_id=GeoLite2-Country&suffix=tar.gz&license_key=${MAXMINDDB_LICENSE_KEY}}\n\n# Devise requires secret key to be set during image build or it raises an error\n# preventing from running any scripts.\n# Users should override this variable by passing environment variable on container start.\nENV RAILS_ENV=${RAILS_ENV} \\\n    APP_HOME=/home/app\n\nENV TZ=UTC\n\n# Create group \"app\" and user \"app\".\nRUN groupadd -r --gid ${GID} app \\\n    && useradd --system --create-home --home ${APP_HOME} --shell /sbin/nologin --no-log-init \\\n    --gid ${GID} --uid ${UID} app\n\n# Install Kaigara\nARG KAIGARA_VERSION=0.1.29\nRUN curl -f -Lo /usr/bin/kaigara https://github.com/openware/kaigara/releases/download/${KAIGARA_VERSION}/kaigara \\\n    && chmod +x /usr/bin/kaigara\n\nWORKDIR $APP_HOME\nUSER app\n\nCOPY --chown=app:app Gemfile Gemfile.lock $APP_HOME/\n\n# Install dependencies\nRUN mkdir -p /usr/local/etc \\\n  && { \\\n    echo 'install: --no-document'; \\\n    echo 'update: --no-document'; \\\n  } >> /usr/local/etc/gemrc;\nRUN gem update bundler && rm -rf /root/.gem;\nRUN bundle install --jobs=$(nproc) --system --binstubs --without development test\n\n# Copy the main application.\nCOPY --chown=app:app . $APP_HOME\n\n# Download MaxMind Country DB\nRUN wget -O ${APP_HOME}/geolite.tar.gz ${MAXMINDDB_LINK} \\\n    && mkdir -p ${APP_HOME}/geolite \\\n    && tar xzf ${APP_HOME}/geolite.tar.gz -C ${APP_HOME}/geolite --strip-components 1 \\\n    && rm ${APP_HOME}/geolite.tar.gz\nENV BARONG_MAXMINDDB_PATH=${APP_HOME}/geolite/GeoLite2-Country.mmdb\n\n# Download list of Cloudflare IP Ranges (v4 and v6)\nRUN curl -f https://www.cloudflare.com/ips-v4 >> ${APP_HOME}/config/cloudflare_ips.yml \\\n    && echo >> ${APP_HOME}/config/cloudflare_ips.yml \\\n    && curl -f https://www.cloudflare.com/ips-v6 >> ${APP_HOME}/config/cloudflare_ips.yml\n\n# Initialize application configuration & assets.\nRUN ./bin/init_config \\\n    && bundle exec rake tmp:create\n\n# Expose port 8080 to the Docker host, so we can access it\n# from the outside.\nEXPOSE 8080\n\n# The main command to run when the container starts. Also\n# tell the Rails dev server to bind to all interfaces by\n# default.\nCMD [\"bundle\", \"exec\", \"puma\", \"--config\", \"config/puma.rb\"]\n"
}