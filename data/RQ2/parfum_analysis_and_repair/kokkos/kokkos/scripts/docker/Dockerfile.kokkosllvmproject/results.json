{
  "startTime": 1674247899570,
  "endTime": 1674247900438,
  "originalSmells": [
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 10,
        "columnStart": 22,
        "columnEnd": 25
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nvidia/cuda:10.1-devel\n\nRUN apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/3bf863cc.pub\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n        bc \\\n        git \\\n        wget \\\n        ccache \\\n        python3 \\\n        python3-distutils \\\n        && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/*\n\nRUN KEYDUMP_URL=https://cloud.cees.ornl.gov/download && \\\n    KEYDUMP_FILE=keydump && \\\n    wget --quiet ${KEYDUMP_URL}/${KEYDUMP_FILE} && \\\n    wget --quiet ${KEYDUMP_URL}/${KEYDUMP_FILE}.sig && \\\n    gpg --batch --import ${KEYDUMP_FILE} && \\\n    gpg --batch --verify ${KEYDUMP_FILE}.sig ${KEYDUMP_FILE} && \\\n    rm ${KEYDUMP_FILE}*\n\nARG CMAKE_VERSION=3.16.8\nENV CMAKE_DIR=/opt/cmake\nRUN CMAKE_URL=https://github.com/Kitware/CMake/releases/download/v${CMAKE_VERSION} && \\\n    CMAKE_SCRIPT=cmake-${CMAKE_VERSION}-Linux-x86_64.sh && \\\n    CMAKE_SHA256=cmake-${CMAKE_VERSION}-SHA-256.txt && \\\n    wget --quiet ${CMAKE_URL}/${CMAKE_SHA256} && \\\n    wget --quiet ${CMAKE_URL}/${CMAKE_SHA256}.asc && \\\n    wget --quiet ${CMAKE_URL}/${CMAKE_SCRIPT} && \\\n    gpg --batch --verify ${CMAKE_SHA256}.asc ${CMAKE_SHA256} && \\\n    grep -i ${CMAKE_SCRIPT} ${CMAKE_SHA256} | sed -e s/linux/Linux/ | sha256sum --check && \\\n    mkdir -p ${CMAKE_DIR} && \\\n    sh ${CMAKE_SCRIPT} --skip-license --prefix=${CMAKE_DIR} && \\\n    rm cmake*\nENV PATH=${CMAKE_DIR}/bin:$PATH\n\nARG NPROC=8\n\n# Clone Kokkos fork of the LLVM Project and build Clang\nENV LLVM_DIR=/opt/llvm\nRUN LLVM_VERSION=55b3bcf643685c63fcc529d434bed112fdf03939 && \\\n    LLVM_URL=https://github.com/kokkos/llvm-project/archive/${LLVM_VERSION}.tar.gz &&\\\n    LLVM_ARCHIVE=llvm.tar.xz && \\\n    SCRATCH_DIR=/scratch && mkdir -p ${SCRATCH_DIR} && cd ${SCRATCH_DIR} && \\\n    wget --quiet ${LLVM_URL} --output-document=${LLVM_ARCHIVE} && \\\n    mkdir llvm-project && \\\n    tar -xf ${LLVM_ARCHIVE} -C llvm-project --strip-components=1 && \\\n    cd llvm-project && \\\n    mkdir build && cd build && \\\n    cmake \\\n      -DCMAKE_BUILD_TYPE=Release \\\n      -DCMAKE_INSTALL_PREFIX=$LLVM_DIR \\\n      -DLLVM_ENABLE_PROJECTS=\"clang;clang-tools-extra;compiler-rt\" \\\n    ../llvm && \\\n    make -j${NPROC} && \\\n    make install && \\\n    echo \"${LLVM_DIR}/lib\" > /etc/ld.so.conf.d/llvm.conf && ldconfig && \\\n    rm -rf ${SCRATCH_DIR}\nENV PATH=${LLVM_DIR}/bin:$PATH\n"
}