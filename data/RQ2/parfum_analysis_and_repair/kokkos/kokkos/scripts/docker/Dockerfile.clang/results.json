{
  "startTime": 1674256217163,
  "endTime": 1674256220236,
  "originalSmells": [
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 2,
        "lineEnd": 6,
        "columnStart": 22,
        "columnEnd": 14
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nvidia/cuda:9.2-devel\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n        bc \\\n        git \\\n        wget \\\n        ccache \\\n        && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/*\n\nRUN KEYDUMP_URL=https://cloud.cees.ornl.gov/download && \\\n    KEYDUMP_FILE=keydump && \\\n    wget --quiet ${KEYDUMP_URL}/${KEYDUMP_FILE} && \\\n    wget --quiet ${KEYDUMP_URL}/${KEYDUMP_FILE}.sig && \\\n    gpg --batch --import ${KEYDUMP_FILE} && \\\n    gpg --batch --verify ${KEYDUMP_FILE}.sig ${KEYDUMP_FILE} && \\\n    rm ${KEYDUMP_FILE}*\n\nARG CMAKE_VERSION=3.16.8\nENV CMAKE_DIR=/opt/cmake\nRUN CMAKE_URL=https://github.com/Kitware/CMake/releases/download/v${CMAKE_VERSION} && \\\n    CMAKE_SCRIPT=cmake-${CMAKE_VERSION}-Linux-x86_64.sh && \\\n    CMAKE_SHA256=cmake-${CMAKE_VERSION}-SHA-256.txt && \\\n    wget --quiet ${CMAKE_URL}/${CMAKE_SHA256} && \\\n    wget --quiet ${CMAKE_URL}/${CMAKE_SHA256}.asc && \\\n    wget --quiet ${CMAKE_URL}/${CMAKE_SCRIPT} && \\\n    gpg --batch --verify ${CMAKE_SHA256}.asc ${CMAKE_SHA256} && \\\n    grep -i ${CMAKE_SCRIPT} ${CMAKE_SHA256} | sed -e s/linux/Linux/ | sha256sum --check && \\\n    mkdir -p ${CMAKE_DIR} && \\\n    sh ${CMAKE_SCRIPT} --skip-license --prefix=${CMAKE_DIR} && \\\n    rm cmake*\nENV PATH=${CMAKE_DIR}/bin:$PATH\n\nENV LLVM_DIR=/opt/llvm\nRUN LLVM_VERSION=8.0.0 && \\\n    LLVM_URL=http://releases.llvm.org/${LLVM_VERSION}/clang+llvm-${LLVM_VERSION}-x86_64-linux-gnu-ubuntu-16.04.tar.xz && \\\n    LLVM_ARCHIVE=llvm-${LLVM_VERSION}.tar.xz && \\\n    SCRATCH_DIR=/scratch && mkdir -p ${SCRATCH_DIR} && cd ${SCRATCH_DIR} && \\\n    wget --quiet ${LLVM_URL} --output-document=${LLVM_ARCHIVE} && \\\n    wget --quiet ${LLVM_URL}.sig --output-document=${LLVM_ARCHIVE}.sig && \\\n    gpg --batch --verify ${LLVM_ARCHIVE}.sig ${LLVM_ARCHIVE} && \\\n    mkdir -p ${LLVM_DIR} && \\\n    tar -xvf ${LLVM_ARCHIVE} -C ${LLVM_DIR} --strip-components=1 && \\\n    echo \"${LLVM_DIR}/lib\" > /etc/ld.so.conf.d/llvm.conf && ldconfig && \\\n    rm -rf /root/.gnupg && \\\n    rm -rf ${SCRATCH_DIR}\nENV PATH=${LLVM_DIR}/bin:$PATH\n"
}