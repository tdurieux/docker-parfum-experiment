{
  "startTime": 1674218178241,
  "endTime": 1674218179804,
  "originalSmells": [
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 10,
        "columnStart": 22,
        "columnEnd": 20
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG BASE=nvidia/cuda:11.1.1-devel-ubuntu20.04\nFROM $BASE\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n        bc \\\n        git \\\n        wget \\\n        ccache \\\n        python3 \\\n        libelf-dev \\\n        g++-multilib \\\n        && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/*\n\nARG NPROC=8\n\nRUN KEYDUMP_URL=https://cloud.cees.ornl.gov/download && \\\n    KEYDUMP_FILE=keydump && \\\n    wget --quiet ${KEYDUMP_URL}/${KEYDUMP_FILE} && \\\n    wget --quiet ${KEYDUMP_URL}/${KEYDUMP_FILE}.sig && \\\n    gpg --batch --import ${KEYDUMP_FILE} && \\\n    gpg --batch --verify ${KEYDUMP_FILE}.sig ${KEYDUMP_FILE} && \\\n    rm ${KEYDUMP_FILE}*\n\nARG CMAKE_VERSION=3.18.5\nENV CMAKE_DIR=/opt/cmake\nRUN CMAKE_URL=https://github.com/Kitware/CMake/releases/download/v${CMAKE_VERSION} && \\\n    CMAKE_SCRIPT=cmake-${CMAKE_VERSION}-Linux-x86_64.sh && \\\n    CMAKE_SHA256=cmake-${CMAKE_VERSION}-SHA-256.txt && \\\n    wget --quiet ${CMAKE_URL}/${CMAKE_SHA256} && \\\n    wget --quiet ${CMAKE_URL}/${CMAKE_SHA256}.asc && \\\n    wget --quiet ${CMAKE_URL}/${CMAKE_SCRIPT} && \\\n    gpg --batch --verify ${CMAKE_SHA256}.asc ${CMAKE_SHA256} && \\\n    grep -i ${CMAKE_SCRIPT} ${CMAKE_SHA256} | sed -e s/linux/Linux/ | sha256sum --check && \\\n    mkdir -p ${CMAKE_DIR} && \\\n    sh ${CMAKE_SCRIPT} --skip-license --prefix=${CMAKE_DIR} && \\\n    rm ${CMAKE_SCRIPT}\nENV PATH=${CMAKE_DIR}/bin:$PATH\n\nARG LLVM_VERSION=llvmorg-13.0.1-rc3\nENV LLVM_DIR=/opt/llvm\nRUN LLVM_URL=https://github.com/llvm/llvm-project/archive &&\\\n    LLVM_ARCHIVE=${LLVM_VERSION}.tar.gz &&\\\n    SCRATCH_DIR=/scratch && mkdir -p ${SCRATCH_DIR} && cd ${SCRATCH_DIR} && \\\n    wget --quiet ${LLVM_URL}/${LLVM_ARCHIVE} && \\\n    mkdir llvm-project && \\\n    tar -xf ${LLVM_ARCHIVE} -C llvm-project --strip-components=1 && \\\n    cd llvm-project && \\\n    mkdir build && cd build && \\\n    cmake \\\n      -DCMAKE_BUILD_TYPE=Release \\\n      -DCMAKE_INSTALL_PREFIX=$LLVM_DIR \\\n      -DCMAKE_C_COMPILER=gcc \\\n      -DCMAKE_CXX_COMPILER=g++ \\\n      -DLLVM_ENABLE_PROJECTS=\"clang\" \\\n      -DLLVM_ENABLE_RUNTIMES=\"openmp\" \\\n      -DCLANG_OPENMP_NVPTX_DEFAULT_ARCH=sm_70 \\\n      -DLIBOMPTARGET_NVPTX_COMPUTE_CAPABILITIES=70 \\\n    ../llvm && \\\n    make -j${NPROC} && \\\n    make install && \\\n    rm -rf ${SCRATCH_DIR}\nENV PATH=${LLVM_DIR}/bin:$PATH\nENV LD_LIBRARY_PATH=${LLVM_DIR}/lib:$LD_LIBRARY_PATH\n"
}