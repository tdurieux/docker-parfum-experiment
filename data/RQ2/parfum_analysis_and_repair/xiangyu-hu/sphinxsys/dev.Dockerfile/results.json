{
  "startTime": 1674253209187,
  "endTime": 1674253209981,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 14,
        "columnStart": 22,
        "columnEnd": 14
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 20,
        "columnStart": 25,
        "columnEnd": 71
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 25,
        "lineEnd": 29,
        "columnStart": 25,
        "columnEnd": 8
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:20.04\n\nARG build_with_dependencies_source=0\nARG SPH_ONLY_STATIC_BUILD=0\nARG was_build=0\nARG build_with_visualization=off\n\nENV TZ=Europe/Berlin\nRUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    apt-utils \\\n    build-essential \\\n    cmake \\\n    googletest \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/*\n\nRUN if [ \"$build_with_visualization\" = on ] ; then \\\n cd /home \\\n    && apt-get update && apt-get install --no-install-recommends -y \\\n    libglu1-mesa-dev freeglut3-dev mesa-common-dev libxi-dev libxmu-dev \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/*; fi\n\nRUN if [ \"$build_with_dependencies_source\" = 0 ] ; then \\\n cd /home \\\n    && apt-get update && apt-get install --no-install-recommends -y \\\n    libtbb-dev \\\n    libboost-all-dev \\\n    liblapack-dev \\\n    wget \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/* \\\n    && wget https://github.com/simbody/simbody/archive/Simbody-3.7.tar.gz \\\n    && tar xvzf Simbody-3.7.tar.gz \\\n    && rm Simbody-3.7.tar.gz \\\n    && mkdir /home/simbody-build && mkdir /home/simbody \\\n    && cd /home/simbody-build \\\n    && cmake /home/simbody-Simbody-3.7 -DCMAKE_INSTALL_PREFIX=/home/simbody -DCMAKE_BUILD_TYPE=RelWithDebInfo -DBUILD_VISUALIZER=${build_with_visualization} -DBUILD_STATIC_LIBRARIES=on \\\n    && make -j$(nproc) \\\n    # && ctest -j$(nproc) \\\n    && make -j$(nproc) install \\\n    && rm -rf /home/simbody-Simbody-3.7; fi\n\nENV TBB_HOME=/usr/lib/x86_64-linux-gnu\nENV BOOST_HOME=/usr/lib/x86_64-linux-gnu\nENV SIMBODY_HOME=/home/simbody\nENV LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$SIMBODY_HOME/lib\nENV CPLUS_INCLUDE_PATH=$CPLUS_INCLUDE_PATH:$SIMBODY_HOME/include\n\nCOPY ./ /home/SPHinXsys/\nWORKDIR /home/SPHinXsys\nRUN rm -rf build\nRUN mkdir build && cd build && cmake .. -DWASM_BUILD=${was_build} -DBUILD_WITH_DEPENDENCIES_SOURCE=${build_with_dependencies_source} -DSTATIC_BUILD=${SPH_ONLY_STATIC_BUILD} && make -j$(nproc)"
}