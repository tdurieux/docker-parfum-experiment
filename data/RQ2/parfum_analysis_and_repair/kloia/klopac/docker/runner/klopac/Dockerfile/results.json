{
  "startTime": 1674256341276,
  "endTime": 1674256341961,
  "originalSmells": [
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 63,
        "columnEnd": 126
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 0,
        "columnEnd": 59
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 0,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 0,
        "columnEnd": 26
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 0,
        "columnEnd": 26
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM golang:1.18-alpine as build\nWORKDIR /app\nCOPY entrypoint ./entrypoint\nRUN cd entrypoint && \\\n    CGO_ENABLED=0 go build ./cmd/main.go\n\n\nFROM ubuntu:20.04\n\nRUN groupadd docker -g 998 && useradd -s /bin/bash -d /app -m -u 1000 -G docker platform && \\\napt-get update -y && \\\napt-get install -y --no-install-recommends curl wget unzip ca-certificates gnupg lsb-release sudo git && \\\n curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --batch --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg && \\\necho \"deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null && \\\napt-get update && \\\napt-get install -y --no-install-recommends python3-pip=20.0.2-5ubuntu1.6 docker-ce=5:20.10.12~3-0~ubuntu-focal jq && \\\napt-get update && \\\n apt-get install --no-install-recommends -y apt-transport-https ca-certificates curl && \\\ncurl -fsSLo /usr/share/keyrings/kubernetes-archive-keyring.gpg https://packages.cloud.google.com/apt/doc/apt-key.gpg && \\\necho \"deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main\" | sudo tee /etc/apt/sources.list.d/kubernetes.list && \\\napt-get update && \\\n apt-get install --no-install-recommends -y kubectl && \\\napt-get clean && \\\nrm -rf /var/lib/apt/lists/* && \\\necho '%docker ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers && \\\nmkdir -p /data/repo /data/outputs /data/sensitive && \\\nchown -R 1000:1000 /data && \\\npip3 --no-cache-dir install ansible==5.2.0 yq boto3 botocore boto docker && \\\napt-get update && \\\n apt-get install --no-install-recommends -y sshpass && rm -rf /var/lib/apt/lists/*;\n\nUSER 1000\n\nWORKDIR /app\n\nCOPY --from=build /app/entrypoint/main /usr/local/bin/entrypoint\nRUN sudo chmod +x /usr/local/bin/entrypoint\n\nCOPY --chown=1000:1000 vars /data/vars\nCOPY --chown=1000:1000 manifests /data/manifests\nCOPY --chown=1000:1000 entrypoint ./entrypoint\nCOPY --chown=1000:1000 provisioner ./provisioner\nCOPY --chown=1000:1000 validator ./validator\nCOPY --chown=1000:1000 controller ./controller\nCOPY --chown=1000:1000 finalizer ./finalizer\n#ENTRYPOINT [\"entrypoint\"]"
}