{
  "startTime": 1674250657461,
  "endTime": 1674250659065,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 147,
        "lineEnd": 147,
        "columnStart": 13,
        "columnEnd": 152
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 148,
        "lineEnd": 148,
        "columnStart": 13,
        "columnEnd": 110
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 150,
        "lineEnd": 150,
        "columnStart": 13,
        "columnEnd": 59
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 153,
        "lineEnd": 153,
        "columnStart": 13,
        "columnEnd": 103
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 23,
        "columnEnd": 574
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 170,
        "lineEnd": 170,
        "columnStart": 9,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 170,
        "lineEnd": 170,
        "columnStart": 9,
        "columnEnd": 33
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 23,
        "columnEnd": 574
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 170,
        "lineEnd": 170,
        "columnStart": 9,
        "columnEnd": 33
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 170,
        "lineEnd": 170,
        "columnStart": 9,
        "columnEnd": 57
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:focal-20220113\n\nENV DEBIAN_FRONTEND=noninteractive\n\nRUN apt-get update && apt-get install --no-install-recommends -y sudo cmake gcc-7 g++-7 libboost1.71-all-dev libxerces-c-dev libcurl4-openssl-dev libsnmp-dev libmysqlclient-dev libjsoncpp-dev uuid-dev libusb-dev libusb-1.0-0-dev libftdi-dev swig liboctave-dev gpsd libgps-dev portaudio19-dev libsndfile1-dev libglib2.0-dev libglibmm-2.4-dev libpcre3-dev libsigc++-2.0-dev libxml++2.6-dev libxml2-dev liblzma-dev dpkg-dev libmysqlcppconn-dev libev-dev libuv1-dev git vim zip build-essential libssl-dev qtbase5-dev qtbase5-dev-tools curl libqhttpengine-dev libgtest-dev libcpprest-dev librdkafka-dev && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR cd /usr/src/googletest/googletest\nRUN mkdir ~/build\nWORKDIR /usr/src/googletest/googletest/build\nRUN cmake ..\nRUN make\nRUN cd lib && cp libgtest* /usr/lib/\nWORKDIR cd /usr/src/googletest/googletest\nRUN rm -rf build\nRUN mkdir /usr/local/lib/googletest\nRUN ln -s /usr/lib/libgtest.a /usr/local/lib/googletest/libgtest.a\nRUN ln -s /usr/lib/libgtest_main.a /usr/local/lib/googletest/libgtest_main.a\nRUN ldconfig\n\nRUN mkdir ~/V2X-Hub\nCOPY . /home/V2X-Hub\nWORKDIR /home/V2X-Hub/src/tmx/\nRUN cmake .\nRUN make\nRUN make install\n\nWORKDIR /home/V2X-Hub/container/\nRUN chmod +x /home/V2X-Hub/container/library.sh\nRUN /home/V2X-Hub/container/library.sh\nRUN ldconfig\n\nWORKDIR /home/V2X-Hub/\nRUN mkdir -p /home/V2X-Hub/ext\nWORKDIR /home/V2X-Hub/ext/\nRUN git clone https://github.com/usdot-fhwa-OPS/libwebsockets.git\nWORKDIR /home/V2X-Hub/ext/libwebsockets/\nRUN cmake -DLWS_WITH_SHARED=OFF .\nRUN make\nRUN make install\n\nWORKDIR /home/V2X-Hub/ext\nRUN git clone https://github.com/usdot-fhwa-OPS/qhttpengine.git\nWORKDIR /home/V2X-Hub/ext/qhttpengine\nRUN cmake .\nRUN make\nRUN make install\n\nWORKDIR /home/V2X-Hub/ext/\nRUN git clone https://github.com/HowardHinnant/date.git\nWORKDIR /home/V2X-Hub/ext/date\nRUN cmake .\nRUN make\nRUN make install\nRUN ldconfig\n\nWORKDIR /home/V2X-Hub/ext/server\nRUN cmake .\nRUN make\nRUN make install\n\nWORKDIR /home/V2X-Hub/ext/ccserver\nRUN cmake .\nRUN make\nRUN make install\n\nWORKDIR /home/V2X-Hub/ext/pdclient\nRUN cmake .\nRUN make\nRUN make install\n\n### setup and install v2x-hub core and plugins\n\nWORKDIR /home/V2X-Hub/src/v2i-hub/\nRUN cmake . -DqserverPedestrian_DIR=/usr/local/share/qserverPedestrian/cmake -Dv2xhubWebAPI_DIR=/usr/local/share/v2xhubWebAPI/cmake/\nRUN make\n\n\nRUN ln -s ../bin CommandPlugin/bin\nRUN zip CommandPlugin.zip CommandPlugin/bin/CommandPlugin CommandPlugin/manifest.json\nRUN ln -s ../bin CswPlugin/bin\nRUN zip CswPlugin.zip CswPlugin/bin/CswPlugin CswPlugin/manifest.json\nRUN ln -s ../bin DmsPlugin/bin\nRUN zip DmsPlugin.zip DmsPlugin/bin/DmsPlugin DmsPlugin/manifest.json\nRUN ln -s ../bin DsrcImmediateForwardPlugin/bin\nRUN zip DsrcImmediateForwardPlugin.zip DsrcImmediateForwardPlugin/bin/DsrcImmediateForwardPlugin DsrcImmediateForwardPlugin/manifest.json\nRUN ln -s ../bin LocationPlugin/bin\nRUN zip LocationPlugin.zip LocationPlugin/bin/LocationPlugin LocationPlugin/manifest.json\nRUN ln -s ../bin MapPlugin/bin\nRUN zip MapPlugin.zip MapPlugin/bin/MapPlugin MapPlugin/manifest.json\nRUN ln -s ../bin MessageReceiverPlugin/bin\nRUN zip MessageReceiverPlugin.zip MessageReceiverPlugin/bin/MessageReceiverPlugin MessageReceiverPlugin/manifest.json\nRUN ln -s ../bin ODEPlugin/bin\nRUN zip ODEPlugin.zip ODEPlugin/bin/ODEPlugin ODEPlugin/manifest.json\nRUN ln -s ../bin RtcmPlugin/bin\nRUN zip RtcmPlugin.zip RtcmPlugin/bin/RtcmPlugin RtcmPlugin/manifest.json\nRUN ln -s ../bin SpatPlugin/bin\nRUN zip SpatPlugin.zip SpatPlugin/bin/SpatPlugin SpatPlugin/manifest.json\nRUN ln -s ../bin PreemptionPlugin/bin\nRUN zip PreemptionPlugin.zip PreemptionPlugin/bin/PreemptionPlugin PreemptionPlugin/manifest.json\nRUN ln -s ../bin SPaTLoggerPlugin/bin\nRUN zip SPaTLoggerPlugin.zip SPaTLoggerPlugin/bin/SPaTLoggerPlugin SPaTLoggerPlugin/manifest.json\nRUN ln -s ../bin MessageLoggerPlugin/bin\nRUN zip MessageLoggerPlugin.zip MessageLoggerPlugin/bin/MessageLoggerPlugin MessageLoggerPlugin/manifest.json\nRUN ln -s ../bin PedestrianPlugin/bin\nRUN zip PedestrianPlugin.zip PedestrianPlugin/bin/PedestrianPlugin PedestrianPlugin/manifest.json\nRUN ln -s ../bin TimPlugin/bin\nRUN zip TimPlugin.zip TimPlugin/bin/TimPlugin TimPlugin/manifest.json\nRUN ln -s ../bin CARMACloudPlugin/bin\nRUN zip CARMACloudPlugin.zip CARMACloudPlugin/bin/CARMACloudPlugin CARMACloudPlugin/manifest.json\nRUN ln -s ../bin PortDrayagePlugin/bin\nRUN zip PortDrayagePlugin.zip PortDrayagePlugin/bin/PortDrayagePlugin PortDrayagePlugin/manifest.json\nRUN ln -s ../bin ODELoggerPlugin/bin\nRUN zip ODELoggerPlugin.zip ODELoggerPlugin/bin/ODELoggerPlugin ODELoggerPlugin/manifest.json\nRUN ln -s ../bin CARMAStreetsPlugin/bin\nRUN zip CARMAStreetsPlugin.zip CARMAStreetsPlugin/bin/CARMAStreetsPlugin CARMAStreetsPlugin/manifest.json\n\n\nWORKDIR /home/V2X-Hub/src/tmx/TmxCore/\nRUN cp tmxcore.service /lib/systemd/system/\nRUN cp tmxcore.service /usr/sbin/\nWORKDIR /home/V2X-Hub/container/\nRUN chmod +x /home/V2X-Hub/container/database.sh\nRUN /home/V2X-Hub/container/database.sh\nWORKDIR /home/V2X-Hub/container/\nRUN chmod +x /home/V2X-Hub/container/service.sh\nRUN chmod +x /home/V2X-Hub/container/wait-for-it.sh\n\nWORKDIR /var/www/\nRUN mkdir ~/plugins\nWORKDIR /home/V2X-Hub/src/v2i-hub/\nWORKDIR /var/www/plugins/\nRUN mkdir /var/www/plugins/MAP\nRUN mkdir /var/www/plugins/.ssl\nRUN chown plugin .ssl\nRUN chgrp www-data .ssl\nWORKDIR /var/www/plugins/.ssl/\nRUN openssl req -x509 -newkey rsa:4096 -sha256 -nodes -keyout tmxcmd.key -out tmxcmd.crt -subj \"/CN= <127.0.0.1> \" -days 3650\nRUN chown plugin *\nRUN chgrp www-data *\nWORKDIR /home/V2X-Hub/src/v2i-hub/\n\nRUN sudo mkdir /home/V2X-Hub/.base-image\n\nENV SONAR_DIR=/opt/sonarqube\n\n# Pull scanner from internet\nRUN sudo mkdir $SONAR_DIR && \\\n        sudo curl -f -o $SONAR_DIR/sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.4.0.2170-linux.zip && \\\n        sudo curl -f -o $SONAR_DIR/build-wrapper.zip https://sonarcloud.io/static/cpp/build-wrapper-linux-x86.zip && \\\n        # Install Dependancy of NodeJs 6+\n        sudo curl -f -sL https://deb.nodesource.com/setup_10.x | sudo bash - && \\\n        # Install JQ Json Parser Tool\n        sudo mkdir /opt/jq && \\\n        sudo curl -f -L \"https://github.com/stedolan/jq/releases/download/jq-1.5/jq-linux64\" -o /opt/jq/jq && \\\n        sudo chmod +x /opt/jq/jq\n\n# Unzip scanner\nRUN cd $SONAR_DIR && \\ \n        sudo unzip $SONAR_DIR/sonar-scanner.zip -d . && \\\n        sudo unzip $SONAR_DIR/build-wrapper.zip -d . && \\\n        # Remove zip files \n        sudo rm $SONAR_DIR/sonar-scanner.zip && \\\n        sudo rm $SONAR_DIR/build-wrapper.zip && \\\n        # Rename files \n        sudo mv $(ls $SONAR_DIR | grep \"sonar-scanner-\") $SONAR_DIR/sonar-scanner/ && \\\n        sudo mv $(ls $SONAR_DIR | grep \"build-wrapper-\") $SONAR_DIR/build-wrapper/ && \\\n        # Add scanner, wrapper, and jq to PATH\n        sudo echo 'export PATH=$PATH:/opt/jq/:$SONAR_DIR/sonar-scanner/bin/:$SONAR_DIR/build-wrapper/' >> /home/V2X-Hub/.base-image/init-env.sh\n\n# Install gcovr for code coverage tests and add code_coverage script folder to path\nRUN sudo apt-get -y --no-install-recommends install gcovr && \\\n        sudo echo 'export PATH=$PATH:/home/V2X-Hub/.ci-image/engineering_tools/code_coverage/' >> /home/V2X-Hub/.base-image/init-env.sh && rm -rf /var/lib/apt/lists/*;\n\n\n# Set metadata labels\nLABEL org.label-schema.schema-version=\"1.0\"\nLABEL org.label-schema.name=\"V2X-Hub-SonarCloud\"\nLABEL org.label-schema.description=\"Base image for CARMA CI testing using SonarCloud\"\nLABEL org.label-schema.vendor=\"Leidos\"\nLABEL org.label-schema.version=\"${VERSION}\"\nLABEL org.label-schema.url=\"https://highways.dot.gov/research/research-programs/operations\"\nLABEL org.label-schema.vcs-url=\"https://github.com/usdot-fhwa-ops/V2X-HUB\"\nLABEL org.label-schema.vcs-ref=${VCS_REF}\nLABEL org.label-schema.build-date=${BUILD_DATE}\n\nENTRYPOINT [\"/home/V2X-Hub/container/service.sh\"]\n"
}