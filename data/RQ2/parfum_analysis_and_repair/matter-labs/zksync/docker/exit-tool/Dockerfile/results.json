{
  "startTime": 1674253967230,
  "endTime": 1674253967981,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 22,
        "columnEnd": 156
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 22,
        "columnEnd": 156
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 69
      }
    }
  ],
  "repairedDockerfile": "FROM debian:buster-slim\n\nWORKDIR /usr/src/zksync\n\n# Prepare dependencies\nRUN apt-get update && apt-get install --no-install-recommends -y bash git nodejs npm postgresql openssl libssl-dev gcc g++ curl libpq-dev pkg-config software-properties-common axel && rm -rf /var/lib/apt/lists/*;\nRUN apt-get install --no-install-recommends -y libpq5 ca-certificates && rm -rf /var/lib/apt/lists/*\nRUN npm install -g yarn && npm cache clean --force;\n\n# Install Rust and required cargo packages\nENV RUSTUP_HOME=/usr/local/rustup \\\n    CARGO_HOME=/usr/local/cargo \\\n    PATH=/usr/local/cargo/bin:$PATH\nRUN curl https://sh.rustup.rs -sSf | bash -s -- -y\nRUN cargo install diesel_cli --no-default-features --features postgres\nRUN cargo install --version==0.5.6 sqlx-cli\n\n# Copy workspace\nCOPY . .\n\n# Copy data-restore configuration files\nCOPY docker/exit-tool/configs /usr/src/configs\n\n# Build all the required zkSync binaries\nRUN cargo build --release\nRUN cargo build --release --example generate_exit_proof\n\nCOPY docker/exit-tool/exit-tool-entry.sh /usr/local/bin/\n\n# Setup the environment\nENV ZKSYNC_HOME=/usr/src/zksync\nENV PATH=\"${ZKSYNC_HOME}/bin:${PATH}\"\n"
}