{
  "startTime": 1674221265225,
  "endTime": 1674221266138,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 22,
        "columnEnd": 66
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM rust:1.57 as builder\nWORKDIR /usr/src/zksync\nCOPY . .\nRUN --mount=type=cache,target=/usr/local/cargo/registry \\\n    cargo build --release\n\nFROM debian:bullseye\nRUN apt-get update && apt-get install --no-install-recommends -y axel ca-certificates tini && rm -rf /var/lib/apt/lists/*\n# Docs of env variables used for this image\n# to test this locally just run\n# docker build -t tmp_prover -f =(f envsubst < ./docker/prover/Dockerfile) .; docker run --rm  tmp_prover:latest\n#ENV CHAIN_CIRCUIT_SUPPORTED_BLOCK_CHUNKS_SIZES $CHAIN_CIRCUIT_SUPPORTED_BLOCK_CHUNKS_SIZES\n#ENV CHAIN_CIRCUIT_SUPPORTED_BLOCK_CHUNKS_SIZES_SETUP_POWERS $CHAIN_CIRCUIT_SUPPORTED_BLOCK_CHUNKS_SIZES_SETUP_POWERS\n#ENV CHAIN_STATE_KEEPER_BLOCK_CHUNK_SIZES $CHAIN_STATE_KEEPER_BLOCK_CHUNK_SIZES\n#ENV CHAIN_CIRCUIT_KEY_DIR $CHAIN_CIRCUIT_KEY_DIR\n#ENV CHAIN_CIRCUIT_ACCOUNT_TREE_DEPTH $CHAIN_CIRCUIT_ACCOUNT_TREE_DEPTH\n#ENV CHAIN_CIRCUIT_BALANCE_TREE_DEPTH $CHAIN_CIRCUIT_BALANCE_TREE_DEPTH\n#ENV API_PROVER_URL $API_PROVER_URL\n#ENV PROVER_PROVER_REQUEST_TIMEOUT $PROVER_PROVER_REQUEST_TIMEOUT\n#ENV RUST_BACKTRACE $RUST_BACKTRACE\n#ENV RUST_LOG $RUST_LOG\n#ENV MISC_PROVER_DOWNLOAD_SETUP $MISC_PROVER_DOWNLOAD_SETUP\n#ENV MISC_PROVER_SETUP_NETWORK_DIR $MISC_PROVER_SETUP_NETWORK_DIR\n#ENV PROVER_WITNESS_GENERATOR_PREPARE_DATA_INTERVAL $PROVER_WITNESS_GENERATOR_PREPARE_DATA_INTERVAL\n#ENV PROVER_PROVER_HEARTBEAT_INTERVAL $PROVER_PROVER_HEARTBEAT_INTERVAL\n#ENV PROVER_PROVER_CYCLE_WAIT $PROVER_PROVER_CYCLE_WAIT\n#ENV PROVER_CORE_GONE_TIMEOUT $PROVER_CORE_GONE_TIMEOUT\n#ENV MISC_DOCKER_DUMMY_PROVER $MISC_DOCKER_DUMMY_PROVER\nCOPY --from=builder /usr/src/zksync/target/release/plonk_step_by_step_prover /bin/\nCOPY --from=builder /usr/src/zksync/target/release/dummy_prover /bin/\nCOPY docker/prover/prover-entry.sh docker/prover/graceful-run.sh /bin/\nCOPY keys/packed /keys/packed\nCOPY contracts/artifacts/ /contracts/artifacts/\n\n## Mitigate memory leaks when app exists it's restarted\nENTRYPOINT [ \"/usr/bin/tini\", \"-g\", \"--\" ]\nCMD [\"/bin/graceful-run.sh\"]\n"
}