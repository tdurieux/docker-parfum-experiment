{
  "startTime": 1674250199689,
  "endTime": 1674250201251,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 14,
        "columnEnd": 25
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 14,
        "columnEnd": 25
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 32,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 13
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 32,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 22
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 32,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 22
      }
    }
  ],
  "repairedDockerfile": "ARG PHP_VERSION=7.4\nFROM makasim/nginx-php-fpm:${PHP_VERSION}-all-exts\n\nARG PHP_VERSION\n\n## libs\nRUN set -x && \\\n    apt-get update && \\\n    apt-get install -y --no-install-recommends --no-install-suggests \\\n        wget \\\n        curl \\\n        openssl \\\n        ca-certificates \\\n        nano \\\n        netcat \\\n        php${PHP_VERSION}-dev \\\n        php${PHP_VERSION}-redis \\\n        php${PHP_VERSION}-pgsql \\\n        git \\\n        python \\\n        php${PHP_VERSION}-amqp \\\n        php${PHP_VERSION}-xml \\\n        php${PHP_VERSION}-mysql \\\n        php${PHP_VERSION}-curl \\\n        make \\\n        g++ \\\n        unzip \\\n    && \\\n    update-alternatives --install /usr/bin/php php /usr/bin/php${PHP_VERSION} 100 && rm -rf /var/lib/apt/lists/*;\n\n## gearman\nRUN set -x && \\\n    apt-get install -y --no-install-recommends --no-install-suggests \\\n        libgearman-dev \\\n    && \\\n    mkdir -p $HOME/gearman && \\\n    cd $HOME/gearman && \\\n    git clone https://github.com/php/pecl-networking-gearman.git . && \\\n    git checkout gearman-2.1.0 && \\\n    phpize && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make && make install && \\\n    if [ ! -f /etc/php/${PHP_VERSION}/cli/conf.d/20-gearman.ini ]; then \\\n        echo \"extension=gearman.so\" > /etc/php/${PHP_VERSION}/cli/conf.d/20-gearman.ini && \\\n        echo \"extension=gearman.so\" > /etc/php/${PHP_VERSION}/fpm/conf.d/20-gearman.ini \\\n        ; \\\n    fi; rm -rf /var/lib/apt/lists/*;\n\n## librdkafka\nRUN set -x && \\\n    mkdir -p $HOME/librdkafka && \\\n    cd $HOME/librdkafka && \\\n    git clone https://github.com/edenhill/librdkafka.git . && \\\n    git checkout v1.0.0 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make && make install\n\n## php-rdkafka\nRUN set -x && \\\n    mkdir -p $HOME/php-rdkafka && \\\n    cd $HOME/php-rdkafka && \\\n    git clone https://github.com/arnaud-lb/php-rdkafka.git . && \\\n    git checkout 5.0.1 && \\\n    phpize && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make all && make install && \\\n    echo \"extension=rdkafka.so\" > /etc/php/${PHP_VERSION}/cli/conf.d/10-rdkafka.ini && \\\n    echo \"extension=rdkafka.so\" > /etc/php/${PHP_VERSION}/fpm/conf.d/10-rdkafka.ini\n\nCOPY ./php/cli.ini /etc/php/${PHP_VERSION}/cli/conf.d/1-dev_cli.ini\nCOPY ./bin/dev_entrypoiny.sh /usr/local/bin/entrypoint.sh\nRUN chmod u+x /usr/local/bin/entrypoint.sh\n\nRUN mkdir -p /mqdev\nWORKDIR /mqdev\n\nCOPY --from=composer:2 /usr/bin/composer /usr/bin/composer\n\nCMD /usr/local/bin/entrypoint.sh\n"
}