{
  "startTime": 1674250338514,
  "endTime": 1674250339649,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 34,
        "columnEnd": 66
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.10-alpine3.15 AS build-image\n\nRUN apk add --no-cache \\\n    gcc \\\n    musl-dev \\\n    python3-dev \\\n    libffi-dev \\\n    openssl-dev \\\n    cargo \\\n    g++ \\\n    libpq-dev \\\n    git \\\n    && if [[ $(uname -m) == armv6* ||  $(uname -m) == armv7* ]]; then \\\n          mkdir -p ~/.cargo/registry/index \\\n          && cd ~/.cargo/registry/index \\\n          && git clone --bare https://github.com/rust-lang/crates.io-index.git github.com-1285ae84e5963aae; \\\n        fi\n        # workaround for cryptography arm build issue: see https://github.com/pyca/cryptography/issues/6673\n\nRUN python -m venv /opt/venv\nENV PATH=\"/opt/venv/bin:$PATH\"\n\nWORKDIR /app\n\nCOPY requirements.txt .\nRUN pip3 install --no-cache-dir --upgrade pip && pip3 install --no-cache-dir -r requirements.txt\n\nCOPY . .\nRUN python3 setup.py install\n\n\nFROM python:3.10-alpine3.15\n\nCOPY --from=build-image /opt/venv /opt/venv\n\nENV PATH=\"/opt/venv/bin:$PATH\"\n\nRUN apk add --no-cache binutils openssl-dev\n\nRUN mkdir -p /skill/config \\\n    && mkdir -p /skill/data\n\nENTRYPOINT [\"jellyfin_alexa_skill\"]\nCMD [\"/skill/config/skill.conf\"]\n\nLABEL org.opencontainers.image.source=\"https://github.com/infinityofspace/jellyfin_alexa_skill\"\nLABEL org.opencontainers.image.licenses=\"GPL-3.0\"\n"
}