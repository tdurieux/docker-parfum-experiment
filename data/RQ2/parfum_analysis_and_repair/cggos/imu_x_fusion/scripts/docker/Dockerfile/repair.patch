diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/cggos/imu_x_fusion/scripts/docker/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/cggos/imu_x_fusion/scripts/docker/Dockerfile/repaired.Dockerfile
index 8b561ef..db3f9d7 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/cggos/imu_x_fusion/scripts/docker/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/cggos/imu_x_fusion/scripts/docker/Dockerfile/repaired.Dockerfile
@@ -7,14 +7,14 @@ ENV DIRPATH /root
 WORKDIR $DIRPATH
 
 # install ros packages
-RUN apt-get update && apt-get install -y ros-melodic-robot=1.4.1-0*
+RUN apt-get update && apt-get install --no-install-recommends -y ros-melodic-robot=1.4.1-0* && rm -rf /var/lib/apt/lists/*;
     # && rm -rf /var/lib/apt/lists/*
 
-RUN apt install -y ros-melodic-nmea-navsat-driver libgeographic-dev
+RUN apt install --no-install-recommends -y ros-melodic-nmea-navsat-driver libgeographic-dev && rm -rf /var/lib/apt/lists/*;
 
-RUN apt install -y git cmake wget python-catkin-tools
+RUN apt install --no-install-recommends -y git cmake wget python-catkin-tools && rm -rf /var/lib/apt/lists/*;
 
-RUN apt install -y libopencv-dev
+RUN apt install --no-install-recommends -y libopencv-dev && rm -rf /var/lib/apt/lists/*;
 
 # # Install OpenCV for Ubuntu 18.04
 # RUN apt-get update && apt-get install -y \
@@ -23,16 +23,16 @@ RUN apt install -y libopencv-dev
 #       libvtk6-dev \
 #       libgtk-3-dev \
 #       libatlas-base-dev gfortran
-# 
+#
 # RUN git clone https://github.com/opencv/opencv.git
 # RUN cd opencv && \
 #       git checkout tags/3.3.1 && \
 #       mkdir build -j$(nproc)
-# 
+#
 # RUN git clone https://github.com/opencv/opencv_contrib.git
 # RUN cd opencv_contrib && \
 #       git checkout tags/3.3.1
-# 
+#
 # RUN cd opencv/build && \
 #       cmake -DCMAKE_BUILD_TYPE=Release \
 #       -DCMAKE_INSTALL_PREFIX=/usr/local \
@@ -42,11 +42,11 @@ RUN apt install -y libopencv-dev
 #       -DOPENCV_EXTRA_MODULES_PATH=$DIRPATH/opencv_contrib/modules .. && \
 #       make -j$(nproc) install
 
-RUN apt install -y libeigen3-dev libgoogle-glog-dev libgflags-dev libatlas-base-dev libsuitesparse-dev
+RUN apt install --no-install-recommends -y libeigen3-dev libgoogle-glog-dev libgflags-dev libatlas-base-dev libsuitesparse-dev && rm -rf /var/lib/apt/lists/*;
 
 RUN cd $DIRPATH
-RUN wget http://ceres-solver.org/ceres-solver-2.1.0.tar.gz && tar xvzf ceres-solver-2.1.0.tar.gz && \
-    cd ceres-solver-2.1.0 && mkdir build && cd build && cmake .. && make install -j$(nproc)
+RUN wget https://ceres-solver.org/ceres-solver-2.1.0.tar.gz && tar xvzf ceres-solver-2.1.0.tar.gz && \
+    cd ceres-solver-2.1.0 && mkdir build && cd build && cmake .. && make install -j$(nproc) && rm ceres-solver-2.1.0.tar.gz
 
 ENV TERM xterm
 ENV PYTHONIOENCODING UTF-8
@@ -57,9 +57,9 @@ RUN cd $DIRPATH
 RUN mkdir $DIRPATH/dataset
 RUN wget -P $DIRPATH/dataset https://cggos.i234.me:5001/fsdownload/wYejg2zlD/orbslam2_v101easy.bag
 
-RUN mkdir -p $DIRPATH/ws_msf/src 
-RUN git clone https://github.com/cggos/imu_x_fusion.git $DIRPATH/ws_msf/src/imu_x_fusion 
-WORKDIR $DIRPATH/ws_msf 
+RUN mkdir -p $DIRPATH/ws_msf/src
+RUN git clone https://github.com/cggos/imu_x_fusion.git $DIRPATH/ws_msf/src/imu_x_fusion
+WORKDIR $DIRPATH/ws_msf
 RUN catkin config --extend /opt/ros/$ROS_DISTRO --cmake-args -DCMAKE_BUILD_TYPE=Release && \
     catkin build -j4 && \
     sed -i '/exec "$@"/i \