{
  "startTime": 1674254409779,
  "endTime": 1674254411633,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 4,
        "columnEnd": 104
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 4,
        "columnEnd": 101
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 4,
        "columnEnd": 92
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 79,
        "lineEnd": 79,
        "columnStart": 4,
        "columnEnd": 113
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 80,
        "lineEnd": 80,
        "columnStart": 4,
        "columnEnd": 116
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 81,
        "lineEnd": 81,
        "columnStart": 4,
        "columnEnd": 92
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 66,
        "lineEnd": 72,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 85,
        "lineEnd": 85,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 89,
        "lineEnd": 89,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 164,
        "lineEnd": 164,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 7
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 4,
        "columnEnd": 49
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM thedoctor0/openvas-docker-lite\nFROM debian:buster\n\nENV GVM_LIBS_VERSION='v20.8.0' \\\n    GVMD_VERSION='v20.8.0' \\\n    OPENVAS_VERSION='v20.8.0' \\\n    OPENVAS_SMB_VERSION='v1.0.5' \\\n    OSPD_OPENVAS_VERSION='v20.8.0' \\\n    OSPD_VERSION='v20.8.1' \\\n    SRC_PATH='/src' \\\n    DEBIAN_FRONTEND=noninteractive \\\n    TERM=dumb\n\nRUN apt-get update && apt-get install -y --no-install-recommends apt-utils && \\\n    apt-get install --no-install-recommends \\\n        postgresql \\\n        postgresql-contrib \\\n        postgresql-server-dev-all \\\n        python-setuptools \\\n        git \\\n        curl \\\n        doxygen \\\n        python3 \\\n        python3-pip \\\n        python3-dev \\\n        rsync \\\n        rustc \\\n        nmap \\\n        snmp \\\n        sudo \\\n        redis-server \\\n        cmake \\\n        pkg-config \\\n        libradcli-dev \\\n        libglib2.0-dev \\\n        libgpgme-dev \\\n        libgpgme11-dev \\\n        libgnutls28-dev \\\n        libssh-gcrypt-dev \\\n        libldap2-dev \\\n        libhiredis-dev \\\n        libpcap-dev \\\n        libpq-dev \\\n        libksba-dev \\\n        libsnmp-dev \\\n        libical-dev \\\n        libgcrypt20-dev \\\n        libpopt-dev \\\n        gcc-mingw-w64 \\\n        gcc \\\n        glib-2.0 \\\n        perl-base \\\n        uuid-dev \\\n        heimdal-dev \\\n        bison \\\n        xsltproc \\\n        xmlstarlet \\\n        gnutls-bin \\\n        xmltoman \\\n        xml-twig-tools \\\n        libxml2-dev \\\n    -yq && \\\n    apt-get install texlive-latex-extra --no-install-recommends -yq && \\\n    apt-get install --no-install-recommends texlive-fonts-recommended -yq && \\\n    rm -rf /var/lib/apt/lists/*\n\nRUN pip3 install --no-cache-dir \\\n        lxml \\\n        gvm-tools \\\n        paramiko \\\n        defusedxml \\\n        redis \\\n        psutil\n\nRUN mkdir ${SRC_PATH} -p && \\\n    cd ${SRC_PATH} && \\\n    curl -f -o gvm-libs.tar.gz -sL https://github.com/greenbone/gvm-libs/archive/${GVM_LIBS_VERSION}.tar.gz && \\\n    curl -f -o openvas.tar.gz -sL https://github.com/greenbone/openvas/archive/${OPENVAS_VERSION}.tar.gz && \\\n    curl -f -o gvmd.tar.gz -sL https://github.com/greenbone/gvmd/archive/${GVMD_VERSION}.tar.gz && \\\n    curl -f -o openvas-smb.tar.gz -sL https://github.com/greenbone/openvas-smb/archive/${OPENVAS_SMB_VERSION}.tar.gz && \\\n    curl -f -o ospd-openvas.tar.gz -sL https://github.com/greenbone/ospd-openvas/archive/${OSPD_OPENVAS_VERSION}.tar.gz && \\\n    curl -f -o ospd.tar.gz -sL https://github.com/greenbone/ospd/archive/${OSPD_VERSION}.tar.gz && \\\n    find . -name \\*.gz -exec tar zxvfp {} \\;\n\nRUN cd ${SRC_PATH}/ospd-openvas* && \\\n    pip3 install --no-cache-dir . && \\\n    rm -rf ${SRC_PATH}/ospd-openvas*\n\nRUN cd ${SRC_PATH}/ospd* && \\\n    pip3 install --no-cache-dir . && \\\n    rm -rf ${SRC_PATH}/ospd*\n\nRUN cd ${SRC_PATH}/gvm-libs* && \\\n    mkdir build && \\\n    cd build && \\\n    cmake .. && \\\n    make && \\\n    make install && \\\n    rm -rf ${SRC_PATH}/gvm-libs*\n\nRUN cd ${SRC_PATH}/openvas-smb* && \\\n    mkdir build && \\\n    cd build && \\\n    cmake .. && \\\n    make && \\\n    make install && \\\n    rm -rf ${SRC_PATH}/openvas-smb*\n\nRUN cd ${SRC_PATH}/openvas* && \\\n    mkdir build && \\\n    cd build && \\\n    cmake .. && \\\n    make && \\\n    make install && \\\n    rm -rf ${SRC_PATH}/openvas*\n\nCOPY --from=0 /usr/local/var/lib/openvas/plugins /usr/local/var/lib/openvas/plugins\nCOPY configs/redis.conf /etc/redis/redis.conf\nCOPY scripts/sync-nvts /usr/local/bin/sync-nvts\nCOPY scripts/greenbone-nvt-sync /usr/local/bin/greenbone-nvt-sync\n\nRUN adduser service --gecos \"service,service,service,service\" --disabled-password && \\\n    echo \"service:service\" | sudo chpasswd\n\nRUN redis-server /etc/redis/redis.conf && \\\n    chmod +x /usr/local/bin/greenbone-nvt-sync && \\\n    chmod +x /usr/local/bin/sync-nvts && \\\n    ldconfig && \\\n    sleep 10 && \\\n    sync-nvts\n\nRUN cd ${SRC_PATH}/gvmd-* && \\\n    mkdir build && \\\n    cd build && \\\n    cmake .. && \\\n    make && \\\n    make install && \\\n    rm -rf ${SRC_PATH}/gvmd-*\n\nCOPY --from=0 /usr/local/var/lib/gvm/scap-data /usr/local/var/lib/gvm/scap-data\nCOPY --from=0 /usr/local/var/lib/gvm/cert-data /usr/local/var/lib/gvm/cert-data\nCOPY scripts/sync-scap /usr/local/bin/sync-scap\nCOPY scripts/sync-certs /usr/local/bin/sync-certs\nCOPY scripts/sync-data /usr/local/bin/sync-data\nCOPY scripts/greenbone-certdata-sync /usr/local/sbin/greenbone-certdata-sync\nCOPY scripts/greenbone-scapdata-sync /usr/local/sbin/greenbone-scapdata-sync\nCOPY scripts/greenbone-feed-sync /usr/local/sbin/greenbone-feed-sync\n\nRUN chmod +x /usr/local/sbin/greenbone-certdata-sync && \\\n    chmod +x /usr/local/sbin/greenbone-scapdata-sync && \\\n    chmod +x /usr/local/sbin/greenbone-feed-sync && \\\n    chmod +x /usr/local/bin/sync-scap && \\\n    chmod +x /usr/local/bin/sync-certs && \\\n    chmod +x /usr/local/bin/sync-data && \\\n    ldconfig && \\\n    sleep 10 && \\\n    sync-data && \\\n    sleep 10 && \\\n    sync-certs && \\\n    sleep 10 && \\\n    sync-scap\n\nRUN git clone https://github.com/SecureAuthCorp/impacket.git && \\\n    cd impacket/ && \\\n    pip3 install --no-cache-dir . && \\\n    cd ../ && \\\n    rm -rf impacket\n\nCOPY scripts/start-services /usr/local/bin/start-services\nCOPY scripts/start-openvas /usr/local/bin/start-openvas\nCOPY scripts/start-scanner /usr/local/bin/start-scanner\nCOPY scripts/update-scanner /usr/local/bin/update-scanner\nCOPY scripts/configure-scanner /configure-scanner\nCOPY scripts/scan.py /scan.py\nCOPY configs/openvas.conf /usr/local/etc/openvas/openvas.conf\n\nRUN mkdir reports && \\\n    chmod 777 reports && \\\n    mkdir /var/run/ospd && \\\n    chmod 777 /var/run/ospd && \\\n    chmod +x /usr/local/bin/start-services && \\\n    chmod +x /usr/local/bin/start-openvas && \\\n    chmod +x /usr/local/bin/start-scanner && \\\n    chmod +x /usr/local/bin/update-scanner && \\\n    chmod +x /configure-scanner && \\\n    chmod +x /scan.py && \\\n    echo \"net.core.somaxconn = 1024\"  >> /etc/sysctl.conf && \\\n    echo \"vm.overcommit_memory = 1\" >> /etc/sysctl.conf\n\n\nRUN bash /configure-scanner && \\\n    rm -f /configure-scanner && \\\n    rm -rf /usr/local/var/log/gvm/*.log && \\\n    rm -rf  /usr/local/var/run/feed-update.lock && \\\n    /etc/init.d/postgresql stop && \\\n    /etc/init.d/redis-server stop && \\\n    chmod 777 /usr/local/var/lib/gvm/gvmd/report_formats\n"
}