{
  "startTime": 1674252607883,
  "endTime": 1674252609108,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 105,
        "lineEnd": 105,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 92,
        "lineEnd": 92,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 111,
        "lineEnd": 111,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 24,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 18
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:18.04\nMAINTAINER Stefano Pacifici <stefano@cliqz.com>\nENV DEBIAN_FRONTEND noninteractive\n\n#Install the required packages. 1st Set is for Browser Project and the 2nd for Ruby and NodeJS.\nRUN dpkg --add-architecture i386 && \\\n    apt-get update && \\\n    apt-get upgrade -y && \\\n    apt-get install --no-install-recommends -y \\\n        curl \\\n        git \\\n        gnupg2 \\\n        language-pack-en \\\n        lib32z1 \\\n        libc6:i386 \\\n        libncurses5:i386 \\\n        libstdc++6:i386 \\\n        openjdk-8-jdk \\\n        python-dev \\\n        python-pip \\\n        python-virtualenv \\\n        unzip \\\n        wget \\\n        xz-utils && \\\n    apt-get install --no-install-recommends -y \\\n        apt-transport-https \\\n        autoconf \\\n        automake \\\n        bison \\\n        build-essential \\\n        ca-certificates \\\n        gawk \\\n        libffi-dev \\\n        libgdbm-dev \\\n        libgmp-dev \\\n        libgmp-dev \\\n        libncurses5-dev \\\n        libreadline6-dev \\\n        libsqlite3-dev \\\n        libssl-dev \\\n        libtool \\\n        libyaml-dev \\\n        pkg-config \\\n        sqlite3 \\\n        zlib1g-dev && \\\n    apt-get clean -y && \\\n    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\n# Set the locale\nRUN locale-gen en_US en_US.UTF-8\nRUN dpkg-reconfigure locales\nENV LANG='en_US.UTF-8' LANGUAGE='en_US:en' LC_ALL='en_US.UTF-8'\n\n# Add jenkins to the user group\nARG UID\nARG GID\nRUN getent group $GID || groupadd jenkins --gid $GID && \\\n    useradd --create-home --shell /bin/bash jenkins --uid $UID --gid $GID\n\nENV JAVA_HOME /usr/lib/jvm/java-8-openjdk-amd64/\nENV ANDROID_HOME /home/jenkins/android_home\nENV GRADLE_USER_HOME /home/jenkins/gradle_home\nENV NVM_DIR /home/jenkins/nvm\nENV NODE_VERSION 9.11.2\n\nUSER jenkins\n\n#Install Android SDK and the Required SDKs\nRUN mkdir -p $ANDROID_HOME; \\\n    mkdir -p $GRADLE_USER_HOME; \\\n    cd $ANDROID_HOME; \\\n    wget -O sdktools.zip --quiet 'https://dl.google.com/android/repository/sdk-tools-linux-4333796.zip'; \\\n    unzip sdktools.zip; \\\n    rm -r sdktools.zip; \\\n    while (true); do echo y; done | tools/bin/sdkmanager --licenses && \\\n    tools/bin/sdkmanager \\\n        \"build-tools;29.0.2\" \\\n        \"platforms;android-28\" \\\n        \"platforms;android-29\" \\\n        \"platform-tools\" \\\n        \"tools\" \\\n        \"extras;google;m2repository\" \\\n        \"extras;android;m2repository\" \\\n        \"extras;google;google_play_services\";\n\n# Install Node.JS\nSHELL [\"/bin/bash\", \"-l\", \"-c\"]\nRUN cd /home/jenkins && \\\n    wget -O node.tar.gz https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.gz && \\\n    tar xf node.tar.gz && \\\n    rm -f node.tar.gz\nENV PATH \"/home/jenkins/node-v$NODE_VERSION-linux-x64/bin:$PATH\"\nRUN npm install -g npm@6.11.3 && npm cache clean --force;\n\n#Install Ruby and Fastlane\nRUN for key in 409B6B1796C275462A1703113804BB82D39DC0E3 \\\n               7D2BAF1CF37B13E2069D6956105BD0E739499BDB; do \\\n        for server in \"hkp://keys.gnupg.net\" \\\n                         \"hkp://p80.pool.sks-keyservers.net:80\" \\\n                         \"pgp.mit.edu\" \\\n                         \"hkp://keyserver.ubuntu.com:80\"; do \\\n            gpg2 --keyserver \"${server}\" --recv-keys \"${key}\" || \\\n            echo \"${server} failed. Trying new server...\"; \\\n        done; \\\n    done\nRUN curl -f -sSL https://get.rvm.io | bash -s stable --ruby=2.6.5 && \\\n    source /home/jenkins/.rvm/scripts/rvm \\\n    rvm reload && \\\n    gem install fastlane --version 2.185.0\n\n#Install AWS CLI\nRUN pip install --no-cache-dir awscli --upgrade --user\n"
}