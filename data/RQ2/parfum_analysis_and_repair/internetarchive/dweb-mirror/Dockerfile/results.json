{
  "startTime": 1674252805944,
  "endTime": 1674252807980,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 7,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 7,
        "columnEnd": 30
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 7,
        "columnEnd": 54
      }
    }
  ],
  "repairedDockerfile": "# This is the master Dockerfile\n# it should work, but AFAIK noone is currently using dweb-mirror under Docker so if not please send post a bug report or PR\n# In most cases install.sh is a better way to get something running on a box.\n# There is a variation of this in www-dweb-mirror repo running under Kubernates (k8) at https://www-dweb.dev.archive.org\n# There is a variation of this in OLIP https://gitlab.com/bibliosansfrontieres/olip/dweb-mirror\n# The changes in both those dockerfiles are incorporated below, but commented out.\n#\n\n# Docker quick reference - for more details check https://docs.docker.com/engine/reference/builder/\n# Building\n# > cd ...dweb-mirror\n# > docker image build --no-cache -t mitraardron/dweb-mirror:latest .   # Use no-cache or it might not rebuild from a changed npm\n# > docker push mitraardron/dweb-mirror:latest                          # Send to repo (this is usually not done)\n# For testing\n# > docker run -i -p 4244:4244 --name internetarchive mitraardron/dweb-mirror:latest           # Test it\n# > docker run -i -p 4244:4244 --name internetarchive mitraardron/dweb-mirror:latest /bin/bash # OR run bash inside it\n# For production\n# > docker run -d â€”name internetarchive -p 4244:4244 mitraardron/dweb-mirror:latest    # Run production\n# > docker container stop mirrorHttp                                        # Stop running server\n# > docker container rm mirrorHttp                                          # Delete container\n# > docker logs mirrorHttp                                                  # See the logs\n\n## Specify node version, alternatives node:12 or node:12-alpine but\n# alpine images are missing git, which is needed for dependencies of dweb-archive-dist\n# and node:12 not available on i386 and is missing apk\n# www-dweb-mirror uses node:12 OLIP uses node:12-alpine\nFROM node:12\n# OLIP uses ...\n#ARG ARCH\n#FROM $ARCH/node:12-alpine\n\nMAINTAINER \"Mitra Ardron <mitra@archive.org>\"\nWORKDIR /app\n\n## Yarn used to need installing, but is now present in alpine docker and node:12 images\n# Yarn needs npm for the build, but should be happy with the version in the docker base distro\n#RUN npm i npm@latest -g\n# Install yarn which does a better job of de-duplicating etc\n#RUN npm i yarn -g\n\n## Need git for npm to be able to install some dependencies deep in the tree (its a known node:12 issue)\n# Have to run as root to do the apt steps\nUSER root\n# Stole this line from https://github.com/tarampampam/node-docker/blob/master/Dockerfile\n# Git is neeed for install, could probably switch to the apk lines if it works on www-dweb-mirror\nRUN set -x \\\n    apt-get update \\\n    && apt-get -yq --no-install-recommends install git \\\n    && apt-get -yq clean \\\n    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \\\n    && git --version && bash --version && ssh -V && npm -v && node -v && yarn -v\n#if you want bash or ssh:\n#RUN apt-get -yq install bash openssh-server\n\n# OLIP uses following, but `apk` not available on the k8 www-dweb-mirror\n# Also OLIP is adding python, make g++ and vips-dev which must be for debugging ?\n#RUN set -ex; \\\n#    apk --no-cache --update add git\n#    mkdir -p /root/archiveorg\n#\n# i386 needs some extra packages to build dweb-mirror apparently.\n#RUN set -ex; \\\n#    [ `uname -p` = \"i386\" ] && apk --no-cache --update add python make g++ vips-dev;\n\n## Connect to a persistent volume for (potentially large) data caching\n# OLIP - /data/archiveorg as /data is persistent. (Added to configDefaults.yaml#directories)\n# www-dweb-mirror: /root/archiveorg : data intentionally not persistent as used for testing\nRUN mkdir -p /root/archiveorg\n\n## Copy a user config for dweb-mirror, this should be in one of the locations listed in configDefaults.yaml\n# Setup initial crawl - do this BEFORE the 'yarn add' of dweb-mirror\n# This config file is a good place to override anything (like port numbers, or initial crawl) needed for specific applications.\n# TODO-OLIP - need strategy for where to put this and where to read it\nCOPY ./dweb-mirror.config.yaml /root/dweb-mirror.config.yaml\n\n\n## The main install, could use \"COPY\" but this is sure then to get a release rather than whatever is local\n#Have to run install during the build otherwise will build for different environment and may fail with ELF error\nRUN yarn add @internetarchive/dweb-mirror\nRUN yarn add supervisor\n\n## tell the world which port we use, doesnt actually make docker do anything\n# On dweb-mirror this is 4244 and on www-dweb-archive under kubernetes (K8) is 5000\n# You can change this, but it MUST match the port in dweb-mirror.config.yaml\nEXPOSE 4244\n\n##  Nasty hack to unhack this nasty line in archive.js :-) which generates unwanted logs if running on certain CI servers at IA\n# K8 www-dweb-mirror only but has no negative impact on any other setup\n#var log = location.host.substr(0, 4) !== 'www-' ? function () {} : console.log.bind(console);\nRUN sed -i.BAK -e 's/www-/xwww-/' '/app/node_modules/@internetarchive/dweb-archive-dist/includes/archive.js'\nRUN sed -i.BAK -e 's/www-/xwww-/' '/app/node_modules/@internetarchive/dweb-archive-dist/includes/archive.min.js'\n\n## On K8 www-dweb-mirror only After yarn add DM, overwrite redir.html as a redirect breaks the liveness test\n#COPY ./redir.html /app/node_modules/@internetarchive/dweb-archive-dist/redir.html\n\nWORKDIR /app/node_modules/@internetarchive/dweb-mirror\n\n# when this container is invoked like \"docker exec ..\" this is what that will run\nCMD [ \"/app/node_modules/.bin/supervisor\", \"-i\", \"..\", \"--\", \"internetarchive\", \"-sc\" ]\n"
}