{
  "startTime": 1674250812229,
  "endTime": 1674250813030,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 71
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 34,
        "columnStart": 26,
        "columnEnd": 8
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 7,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 7,
        "columnEnd": 32
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 34,
        "columnStart": 26,
        "columnEnd": 8
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 7,
        "columnEnd": 32
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 42,
        "lineEnd": 46,
        "columnStart": 22,
        "columnEnd": 13
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 22,
        "columnEnd": 74
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 7,
        "columnEnd": 56
      }
    }
  ],
  "repairedDockerfile": "FROM python:3.9.4-slim\n\nENV LANG en_US.UTF-8\n\n# required for postgres\nENV LC_ALL POSIX\n\n# Create openlibrary users\n# We use 999:999 for the openlibrary user. Any volume mounts which require read/write\n# access by the container should be set to this user. Ideally we would use a number\n# larger than 10,000 to avoid host OS uid/gid conflicts, but this is what we have\n# at the moment.\nRUN groupadd --system --gid 999 openlibrary \\\n  && useradd --no-log-init --system -u 999 --gid openlibrary --create-home openlibrary\n\n# Misc OL dependencies\nRUN apt-get -qq update && apt-get install --no-install-recommends -y \\\n    postgresql-client \\\n    build-essential \\\n    git \\\n    libpq-dev \\\n    libxml2-dev \\\n    libxslt-dev \\\n    libffi-dev \\\n    curl \\\n    screen \\\n\n    vim \\\n    emacs \\\n\n    parallel \\\n\n    zip \\\n    unzip \\\n    lftp && rm -rf /var/lib/apt/lists/*;\n\n# Install LTS version of node.js\nRUN curl -f -sL https://deb.nodesource.com/setup_16.x | bash - \\\n    && apt-get install --no-install-recommends -y nodejs && rm -rf /var/lib/apt/lists/*;\n\n# Install Archive.org nginx w/ IP anonymization\nUSER root\nRUN apt-get update && apt-get install -y --no-install-recommends nginx curl \\\n    # nginx-plus\n    apt-transport-https lsb-release ca-certificates wget \\\n    # log rotation service for ol-nginx\n    logrotate && rm -rf /var/lib/apt/lists/*;\nRUN wget -O - https://openresty.org/package/pubkey.gpg | apt-key add -\nRUN echo \"deb http://openresty.org/package/debian $(lsb_release -sc) openresty\" \\\n    | tee /etc/apt/sources.list.d/openresty.list\nRUN apt-get update && apt-get -y install --no-install-recommends openresty && rm -rf /var/lib/apt/lists/*;\nRUN rm /usr/sbin/nginx\nRUN curl -f -L https://archive.org/download/nginx/nginx -o /usr/sbin/nginx\nRUN chmod +x /usr/sbin/nginx\n# Remove the stock nginx config file\nRUN rm /etc/nginx/sites-enabled/default\n\nRUN mkdir -p /var/log/openlibrary /var/lib/openlibrary && chown openlibrary:openlibrary /var/log/openlibrary /var/lib/openlibrary \\\n && mkdir /openlibrary && chown openlibrary:openlibrary /openlibrary \\\n && mkdir -p /var/lib/coverstore && chown openlibrary:openlibrary /var/lib/coverstore \\\n # In order to write to solr-updater's named volume, this needs to be\n # pre-created with the right permissions\n && mkdir -p /solr-updater-data && chown openlibrary:openlibrary /solr-updater-data\nWORKDIR /openlibrary\n\nUSER openlibrary\nCOPY --chown=openlibrary:openlibrary requirements*.txt ./\nRUN python -m pip install --upgrade pip wheel \\\n && python -m pip install --default-timeout=100 -r requirements.txt\n\n# Link the ia CLI binary into /usr/local/bin so that it shows up\n# on the PATH. Do this instead of trying to modify the PATH, because\n# that causes headaches with su, cron, etc.\nUSER root\nRUN ln -s /home/openlibrary/.local/bin/ia /usr/local/bin/ia\nUSER openlibrary\n\nCOPY --chown=openlibrary:openlibrary package*.json ./\nRUN npm ci\n\nCOPY --chown=openlibrary:openlibrary . /openlibrary\n\n# run make to initialize git submodules, build css and js files\nRUN ln -s vendor/infogami/infogami infogami \\\n && make \\\n && python -m pip list --outdated\n"
}