{
  "startTime": 1674253556195,
  "endTime": 1674253557190,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 76
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:14.17.0-buster@sha256:d1d71f63a8b92fa73d8df65fc512f64f2bac8a46b08cbd8caf4d36203d6e210b as node-base\n\n# syntax = docker/dockerfile:1.2\nFROM node-base AS packages\n\nWORKDIR /usr/src\n\n# Copy all package.json files in the Docker context into the layer. This uses a bind mount and manual `find` command\n# instead of Docker's COPY instruction, as Docker is unable to copy glob patterns into the layer.\nRUN --mount=type=bind,target=/docker-context \\\n    cd /docker-context/; \\\n    find . -name \"package.json\" -mindepth 0 -maxdepth 4 -exec cp --parents \"{}\" /usr/src/ \\;\n\n# Copy nprmc and yarn.lock files if they exist into the layer. This uses a bind mount and checks if the files exists\n# instead of Docker's COPY instruction. Docker fails if a file does not exist, which should be a valid option.\nRUN --mount=type=bind,target=/docker-context \\\n    cd /docker-context/; \\\n    [ -e yarn.lock ] && cp yarn.lock /usr/src/ && \\\n    [ -e .npmrc ] && cp .npmrc /usr/src/ || exit 0\n\n########################################################################################################################\n\nFROM node-base AS node\n\nWORKDIR /usr/src\nCOPY --from=packages /usr/src/ .\nRUN --mount=type=cache,id=yarn,target=/yarn/cache,sharing=locked \\\n    yarn config set cache-folder /yarn/cache && \\\n    cp package.json package.json.bkp && \\\n    yarn install --prefer-offline --frozen-lockfile --network-timeout=100000 && yarn cache clean;\n\n########################################################################################################################\n\nFROM node AS workspace\n\nRUN --mount=type=bind,target=/docker-context \\\n    cp -R --no-clobber /docker-context/. /usr/src/\n\nRUN sed -i -e 's/\\r//g' ./scripts/build/*.sh\n"
}