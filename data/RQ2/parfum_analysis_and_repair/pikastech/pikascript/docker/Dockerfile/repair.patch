diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/pikastech/pikascript/docker/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/pikastech/pikascript/docker/Dockerfile/repaired.Dockerfile
index 0e724d8..0094b20 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/pikastech/pikascript/docker/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/pikastech/pikascript/docker/Dockerfile/repaired.Dockerfile
@@ -9,8 +9,8 @@ RUN echo 'Asia/Shanghai' >/etc/timezone
 
 # Update new packages
 RUN apt-get update
-RUN DEBIAN_FRONTEND=noninteractive apt install -y tzdata
-RUN apt-get install -y \
+RUN DEBIAN_FRONTEND=noninteractive apt --no-install-recommends install -y tzdata && rm -rf /var/lib/apt/lists/*;
+RUN apt-get install --no-install-recommends -y \
     build-essential \
     make \
     g++ \
@@ -22,7 +22,7 @@ RUN apt-get install -y \
     curl \
     python3 \
     pip \
-    cloc
+    cloc && rm -rf /var/lib/apt/lists/*;
 
 RUN git clone --branch v1.6.1 https://gitee.com/mirrors/google-benchmark benchmark && \
         cd benchmark && \
@@ -31,7 +31,7 @@ RUN git clone --branch v1.6.1 https://gitee.com/mirrors/google-benchmark benchma
         cmake -E chdir "build" cmake -DBENCHMARK_DOWNLOAD_DEPENDENCIES=on -DCMAKE_BUILD_TYPE=Release ../ && \
         cmake --build "build" --config Release -j && \
         sudo cmake --build "build" --config Release --target install -j
-      
+
 
 # Get Rust
 # change source of Rust
@@ -42,20 +42,20 @@ RUN curl https://sh.rustup.rs -sSf | bash -s -- -y
 
 ENV PATH="/root/.cargo/bin:${PATH}"
 
-RUN apt-get install -y \
+RUN apt-get install --no-install-recommends -y \
     ninja-build \
     valgrind \
     mingw-w64 \
-    mingw-w64-tools  \
-    mingw-w64-i686-dev  \
-    mingw-w64-x86-64-dev  \
+    mingw-w64-tools \
+    mingw-w64-i686-dev \
+    mingw-w64-x86-64-dev \
     wine \
-    cbindgen
+    cbindgen && rm -rf /var/lib/apt/lists/*;
 
 # only need on ubuntu20.04
 # RUN dpkg --add-architecture i386 && apt-get update && apt-get install wine32 -y
 
-RUN apt-get install -y golang
+RUN apt-get install --no-install-recommends -y golang && rm -rf /var/lib/apt/lists/*;
 RUN go env -w GO111MODULE=on
 RUN go env -w GOPROXY=https://goproxy.cn
 
@@ -69,5 +69,5 @@ RUN cd /root/pikascript/tools/pikaCompiler && sh build.sh
 ADD .vimrc /root/.vimrc
 
 ADD bashrc /root/.bashrc
-RUN apt-get install -y liblua5.3-dev
-RUN apt-get install -y lcov
+RUN apt-get install --no-install-recommends -y liblua5.3-dev && rm -rf /var/lib/apt/lists/*;
+RUN apt-get install --no-install-recommends -y lcov && rm -rf /var/lib/apt/lists/*;