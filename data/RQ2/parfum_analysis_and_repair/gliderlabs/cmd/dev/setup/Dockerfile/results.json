{
  "startTime": 1674248082735,
  "endTime": 1674248083612,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 127
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 125
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 133
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 43,
        "columnEnd": 100
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 14,
        "columnEnd": 39
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 67
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# This Dockerfile is not for use so much as to verify a working dev environment\n# from scratch. Building this with `make test-env` will show missing dependencies\n# and help clarify what software is necessary for a new development setup.\n\nFROM alpine:edge\nENV GOPATH /usr/local\n\nRUN apk --update --no-cache add bash go make git libc-dev ca-certificates curl\n\nRUN set -x && \\\n    # Install glibc on Alpine (required by docker-compose) from\n    # https://github.com/sgerrand/alpine-pkg-glibc\n    # See also https://github.com/gliderlabs/docker-alpine/issues/11\n    GLIBC_VERSION='2.23-r3' && \\\n    curl -f -Lo /etc/apk/keys/sgerrand.rsa.pub https://raw.githubusercontent.com/sgerrand/alpine-pkg-glibc/master/sgerrand.rsa.pub && \\\n    curl -f -Lo glibc.apk https://github.com/sgerrand/alpine-pkg-glibc/releases/download/$GLIBC_VERSION/glibc-$GLIBC_VERSION.apk && \\\n    curl -f -Lo glibc-bin.apk https://github.com/sgerrand/alpine-pkg-glibc/releases/download/$GLIBC_VERSION/glibc-bin-$GLIBC_VERSION.apk && \\\n    apk update && \\\n    apk add glibc.apk glibc-bin.apk && \\\n    rm -rf /var/cache/apk/* glibc.apk glibc-bin.apk\n\nRUN set -x && \\\n    # Install docker-compose\n    # https://docs.docker.com/compose/install/\n    DOCKER_COMPOSE_URL=https://github.com$( curl -f -L https://github.com/docker/compose/releases/latest | grep -Eo 'href=\"[^\"]+docker-compose-Linux-x86_64' | sed 's/^href=\"//') && \\\n    curl -f -Lo /usr/local/bin/docker-compose $DOCKER_COMPOSE_URL && \\\n    chmod a+rx /usr/local/bin/docker-compose && \\\n\n    # Basic check it works\n    docker-compose version\n\nRUN set -x && curl -f https://glide.sh/get | sh\n\nCOPY . /usr/local/src/github.com/gliderlabs/cmd\nWORKDIR /usr/local/src/github.com/gliderlabs/cmd\nCMD TIMEOUT=true make clobber setup dev\n"
}