{
  "startTime": 1674216864314,
  "endTime": 1674216866044,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 69
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 126
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 79
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 118,
        "lineEnd": 121,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 127,
        "lineEnd": 129,
        "columnStart": 4,
        "columnEnd": 90
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 131,
        "lineEnd": 133,
        "columnStart": 4,
        "columnEnd": 95
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 137,
        "lineEnd": 139,
        "columnStart": 4,
        "columnEnd": 86
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 141,
        "lineEnd": 143,
        "columnStart": 4,
        "columnEnd": 89
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 4,
        "columnEnd": 61
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 13
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04@sha256:e9938f45e51d9ff46e2b05a62e0546d0f07489b7f22fbc5288defe760599e38a as main\n\nLABEL maintainer \"Paul Sud\"\nLABEL maintainer.email \"encode-help@lists.stanford.edu\"\n\n# Package versions\nENV BWA_VERSION=0.7.17\nENV PAIRIX_VERSION=0.3.6\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y software-properties-common && \\\n    add-apt-repository -y ppa:openjdk-r/ppa && \\\n    apt-get update && \\\n    apt-get install --no-install-recommends -y \\\n        bc \\\n        bzip2 \\\n        curl \\\n        g++ \\\n        gawk \\\n        gcc \\\n        git \\\n        libbz2-dev \\\n        libcurl4-openssl-dev \\\n        libz-dev \\\n        locales \\\n        make \\\n        openjdk-11-jdk \\\n        parallel \\\n        python3 \\\n        unzip \\\n    && rm -rf /var/lib/apt/lists/*\n\n# GAWK has the 'and' function, needed for chimeric_blacklist\nRUN echo 'alias awk=gawk' >> ~/.bashrc\n\nRUN ln -s /usr/bin/python3 /usr/bin/python\n\n# Need to be sure we have this for stats\nRUN locale-gen en_US.UTF-8\n\n# Fix warning for diploidify\n# https://www.educative.io/edpresso/error-mesg-ttyname-failed-inappropriate-ioctl-for-device\n# Need to escape the &s\n# https://unix.stackexchange.com/questions/32907/what-characters-do-i-need-to-escape-when-using-sed-in-a-sh-script\nRUN sed -i 's/mesg n || true/tty -s \\&\\& mesg n/' /root/.profile\n\nWORKDIR /opt/\n\n# Install BWA\nRUN curl -f -OL \"https://github.com/lh3/bwa/archive/v${BWA_VERSION}.zip\" && \\\n    unzip \"v${BWA_VERSION}.zip\" && \\\n    cd \"bwa-${BWA_VERSION}/\" && \\\n    make && \\\n    cp bwa /usr/local/bin && \\\n    cd .. && \\\n    rm -rf \"bwa-v${BWA_VERSION}\"\n\nRUN export SAMTOOLS_VERSION=1.14 && \\\n    curl -f -OL \"https://github.com/samtools/samtools/releases/download/${SAMTOOLS_VERSION}/samtools-${SAMTOOLS_VERSION}.tar.bz2\" && \\\n    bunzip2 \"samtools-${SAMTOOLS_VERSION}.tar.bz2\" && \\\n    tar xf \"samtools-${SAMTOOLS_VERSION}.tar\" && \\\n    cd \"samtools-${SAMTOOLS_VERSION}\" && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --without-curses --disable-bz2 --disable-lzma && \\\n    make && \\\n    make install && \\\n    cd .. && \\\n    rm -rf \"samtools-${SAMTOOLS_VERSION}\" \"samtools-${SAMTOOLS_VERSION}.tar\"\n\nRUN curl -f -OL \"https://github.com/4dn-dcic/pairix/archive/${PAIRIX_VERSION}.zip\" && \\\n    unzip \"${PAIRIX_VERSION}.zip\" && \\\n    cd \"pairix-${PAIRIX_VERSION}/\" && \\\n    make && \\\n    cp bin/pairix bin/bgzip /usr/local/bin && \\\n    cp util/juicer_shortform2pairs.pl /opt && \\\n    cd .. && \\\n    rm -rf \"${PAIRIX_VERSION}.zip\" \"pairix-${PAIRIX_VERSION}\"\n\n# Eigenvector\nRUN git clone https://github.com/aidenlab/EigenVector.git && \\\n    cd EigenVector && \\\n    git checkout 68c399f4ac7d1b953724ab41ae0c4b32368392b1 && \\\n    git clone https://github.com/aidenlab/straw.git && \\\n    cd straw && \\\n    git checkout 7d5ec096e116d6680455bcc81eee8e42c2adf6ba && \\\n    cp C++/straw.cpp C++/straw.h ../C++/FlipSign && \\\n    cd ../C++/FlipSign && \\\n    g++ \\\n        -O \\\n        --std=c++11 \\\n        -o newGW_Intra_Flip \\\n        GWevIntra_new.cpp \\\n        theBestEigen.c \\\n        thdMul.c \\\n        hgFlipSign.c \\\n        straw.cpp \\\n        -I. \\\n        -lz \\\n        -lcurl \\\n        -lpthread && \\\n    chmod +x newGW_Intra_Flip  && \\\n    mv newGW_Intra_Flip /usr/local/bin && \\\n    rm -rf newGW_Intra_Flip\n\nRUN git clone https://github.com/ENCODE-DCC/kentUtils_bin_v381.git && \\\n    cd kentUtils_bin_v381/bin && \\\n    chmod +x wigToBigWig bedGraphToBigWig && \\\n    mv wigToBigWig bedGraphToBigWig /usr/local/bin && \\\n    cd ../../ && \\\n    rm -rf kentUtils_bin_v381\n\n# Install Juicer\nRUN git clone --branch encode https://github.com/theaidenlab/juicer.git && \\\n    cd juicer && \\\n    git checkout 50d557f1d4725a475071fce5975839602bd311e5 && \\\n    chmod +x CPU/* CPU/common/* misc/* && \\\n    find -mindepth 1 -maxdepth 1  -type d -not -name \"CPU\" -not -name \".git\" -not -name \"misc\" | xargs rm -rf\n\n# Install Juicer tools\nRUN curl -f \\\n        -L \\\n        https://github.com/aidenlab/Juicebox/releases/download/v2.13.06/juicer_tools_2.13.06.jar \\\n        -o /opt/juicer/CPU/common/juicer_tools.jar && \\\n    chmod 666 /opt/juicer/CPU/common/juicer_tools.jar && \\\n    ln -s juicer/CPU scripts && \\\n    ln -s /opt/juicer/CPU/common/juicer_tools /opt/juicer/CPU/juicer_tools && \\\n    ln -s /opt/juicer/CPU/common/juicer_tools.jar /opt/juicer/CPU/juicer_tools.jar\n\nRUN curl -f \\\n        -LO \\\n        https://github.com/aidenlab/Juicebox/releases/download/v.2.14.00/feature_tools.jar\n\nRUN curl -f \\\n        -LO \\\n        https://github.com/sa501428/mixer-tools/releases/download/v4.08.02/MixerTools.4.8.2.jar && \\\n    chmod 666 /opt/MixerTools.4.8.2.jar && \\\n    ln -s /opt/MixerTools.4.8.2.jar /opt/MixerTools.jar\n\nRUN curl -f \\\n        -LO \\\n        https://github.com/sa501428/merge-stats/releases/download/v0.3/merge-stats.jar\n\nRUN curl -f \\\n        -LO \\\n        https://github.com/broadinstitute/gatk/releases/download/4.2.2.0/gatk-4.2.2.0.zip && \\\n    unzip -qq gatk-4.2.2.0.zip && \\\n    cd gatk-4.2.2.0 && \\\n    rm \\\n        -rf \\\n        README.md \\\n        gatk-completion.sh \\\n        gatk-package-4.2.2.0-spark.jar \\\n        gatkPythonPackageArchive.zip \\\n        gatkcondaenv.yml \\\n        gatkdoc \\\n        scripts\n\nRUN git clone https://github.com/aidenlab/hic2gatk.git && \\\n    cd hic2gatk && \\\n    git checkout dee2a9f6f2b0e95f0cb3e8d47eef9798cb8101aa\n\nRUN git clone --branch phasing https://github.com/aidenlab/3d-dna.git && \\\n    cd 3d-dna && \\\n    git checkout 63029aa3bc5ba9bbdad9dd9771ace583cc95e273\n\nRUN git clone https://github.com/sa501428/psf-to-bedpe.git && \\\n    cd psf-to-bedpe && \\\n    git checkout 0.1\n\n# For sorting, LC_ALL is C\nENV LC_ALL C\nENV PATH=/opt:/opt/scripts:/opt/scripts/common:/opt/juicer/misc:/opt/gatk-4.2.2.0:/opt/hic2gatk:$PATH\n\nRUN mkdir -p hic-pipeline/hic_pipeline\nCOPY hic_pipeline hic-pipeline/hic_pipeline/\nENV PATH=\"/opt/hic-pipeline/hic_pipeline:${PATH}\"\n"
}