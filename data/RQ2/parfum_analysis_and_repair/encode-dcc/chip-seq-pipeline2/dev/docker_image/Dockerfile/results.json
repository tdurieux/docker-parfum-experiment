{
  "startTime": 1674219247184,
  "endTime": 1674219249259,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 109,
        "lineEnd": 109,
        "columnStart": 4,
        "columnEnd": 92
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 107,
        "columnEnd": 118
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 77,
        "columnEnd": 107
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 106,
        "columnEnd": 145
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 20,
        "columnStart": 22,
        "columnEnd": 10
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "############################################################\n# Dockerfile for ENCODE DCC chip-seq-pipeline\n# Based on Ubuntu 18.04.3\n############################################################\n\n# Set the base image to Ubuntu 18.04.3\n#FROM ubuntu:18.04\nFROM ubuntu@sha256:d1d454df0f579c6be4d8161d227462d69e163a8ff9d20a847533989cf0c94d90\n\nMAINTAINER Jin Lee\n\n# To prevent time zone prompt\nENV DEBIAN_FRONTEND=noninteractive\n\n# Install softwares from apt repo\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    libncurses5-dev libcurl4-openssl-dev libfreetype6-dev zlib1g-dev \\\n    python python-setuptools python-pip python3 python3-setuptools python3-pip \\\n    git wget unzip ghostscript pkg-config libboost-dev \\\n    openjdk-8-jre apt-transport-https tabix \\\n    r-base \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Make directory for all softwares\nRUN mkdir /software\nWORKDIR /software\nENV PATH=\"/software:${PATH}\"\n\n# Downgrade openssl to 1.0.2t (to get the same random number for SPR)\nRUN wget https://github.com/openssl/openssl/archive/OpenSSL_1_0_2t.tar.gz && tar zxvf OpenSSL_1_0_2t.tar.gz && cd openssl-OpenSSL_1_0_2t/ && ./config && make && make install && cd ../ && rm -rf openssl-OpenSSL_1_0_2t* && rm /usr/bin/openssl && ln -s /usr/local/ssl/bin/openssl /usr/bin/openssl && rm OpenSSL_1_0_2t.tar.gz\n\n# Install system/math python packages (python3)\nRUN pip3 install --no-cache-dir jsondiff==1.1.1 common python-dateutil cython pandas==0.25.1 jinja2==2.10.1 matplotlib==3.1.1\n\n# Install genomic python package (python3)\nRUN pip3 install --no-cache-dir pyBigwig==0.3.13 cutadapt==2.5 pyfaidx==0.5.5.2 pybedtools==0.8.0 pysam==0.15.3 deeptools==3.3.1\n\n# Install R packages including spp\nRUN echo \"r <- getOption('repos'); r['CRAN'] <- 'http://cran.r-project.org'; options(repos = r);\" > ~/.Rprofile && \\\n    Rscript -e \"install.packages('snow')\" && \\\n    Rscript -e \"install.packages('snowfall')\" && \\\n    Rscript -e \"install.packages('bitops')\" && \\\n    Rscript -e \"install.packages('caTools')\" && \\\n    Rscript -e \"install.packages('Rcpp')\"\n\n# Install bioconductor and Rsamtools which is required by spp package\nRUN Rscript -e \"source('http://bioconductor.org/biocLite.R'); biocLite('Rsamtools')\"\n\n# Install r-spp 1.15 (1.13 in Conda env)\nRUN wget https://github.com/hms-dbmi/spp/archive/1.15.tar.gz && Rscript -e \"install.packages('./1.15.tar.gz')\" && rm -f https://github.com/hms-dbmi/spp/archive/1.15.tar.gz\n\n# Install samtools 1.9\nRUN git clone --branch 1.9 --single-branch https://github.com/samtools/samtools.git && \\\n    git clone --branch 1.9 --single-branch https://github.com/samtools/htslib.git && \\\n    cd samtools && make && make install && cd ../ && rm -rf samtools* htslib*\n\n# Install bedtools 2.29.0\nRUN git clone --branch v2.29.0 --single-branch https://github.com/arq5x/bedtools2.git && \\\n    cd bedtools2 && make && make install && cd ../ && rm -rf bedtools2*\n\n# Install Picard 2.20.7\nRUN wget https://github.com/broadinstitute/picard/releases/download/2.20.7/picard.jar && chmod +x picard.jar\n\n# Install sambamba 0.6.6\nRUN wget https://github.com/lomereiter/sambamba/releases/download/v0.6.6/sambamba_v0.6.6_linux.tar.bz2 && tar -xvjf sambamba_v0.6.6_linux.tar.bz2 && mv sambamba_v0.6.6 sambamba && rm -rf sambamba_* && rm sambamba_v0.6.6_linux.tar.bz2\n\n# Install gsl 1.16\nRUN wget https://gnu.mirror.vexxhost.com/gsl/gsl-1.16.tar.gz && tar -zxvf gsl-1.16.tar.gz && cd gsl-1.16 && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make && make install && cd .. && rm -rf gsl-1.16 gsl-1.16.tar.gz\nENV LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:/usr/local/lib\n\n# Install preseq 2.0.3\nRUN git clone --branch v2.0.3 --single-branch --recursive https://github.com/smithlabcode/preseq preseq_2.0.3 && cd preseq_2.0.3 && make && cd ../ && mv preseq_2.0.3/preseq . && rm -rf preseq_2.0.3\n\n# Install Bowtie2 2.3.4.3\nRUN wget https://github.com/BenLangmead/bowtie2/releases/download/v2.3.4.3/bowtie2-2.3.4.3-linux-x86_64.zip && \\\n    unzip bowtie2-2.3.4.3-linux-x86_64.zip && mv bowtie2*/bowtie2* . && rm -rf bowtie2-2.3.4.3*\n\n# Install Bwa 0.7.17\nRUN git clone --branch v0.7.17 --single-branch https://github.com/lh3/bwa.git && \\\n    cd bwa && make && cp bwa /usr/local/bin/ && cd ../ && rm -rf bwa*\n\n# Install phantompeakqualtools 1.2.1\nRUN wget https://github.com/kundajelab/phantompeakqualtools/archive/1.2.1.tar.gz && tar -xvf 1.2.1.tar.gz && rm -f 1.2.1.tar.gz\nENV PATH=\"/software/phantompeakqualtools-1.2.1:${PATH}\"\n\n# Install SAMstats\nRUN pip3 install --no-cache-dir SAMstats==0.2.1\n\n# Install IDR 2.0.4.2\nRUN git clone --branch 2.0.4.2 --single-branch https://github.com/kundajelab/idr && \\\n    cd idr && python3 setup.py install && cd ../ && rm -rf idr*\n\n# Install system/math python packages and biopython\nRUN pip2 install --no-cache-dir numpy scipy matplotlib==2.2.4 bx-python==0.8.2 biopython==1.76\nRUN pip3 install --no-cache-dir biopython==1.76\n\n# Install genomic python packages (python2)\nRUN pip2 install --no-cache-dir metaseq==0.5.6\n\n# Install MACS2 (python3)\nRUN pip3 install --no-cache-dir Cython\nRUN pip3 install --no-cache-dir macs2==2.2.4\n\n# Install UCSC tools (v377)\nRUN git clone https://github.com/ENCODE-DCC/kentUtils_bin_v377\nENV PATH=${PATH}:/software/kentUtils_bin_v377/bin\nENV LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:/software/kentUtils_bin_v377/lib\n\n# Instal Trimmomatic JAR\nRUN wget https://www.usadellab.org/cms/uploads/supplementary/Trimmomatic/Trimmomatic-0.39.zip && unzip Trimmomatic-0.39.zip && mv Trimmomatic-0.39/trimmomatic-0.39.jar trimmomatic.jar && chmod +rx trimmomatic.jar && rm -rf Trimmomatic-0.39.zip Trimmomatic-0.39/\n\n# Install pytest for testing environment\nRUN pip3 install --no-cache-dir pytest\n\n# Install bedops 2.4.39\nRUN mkdir bedops_2.4.39 && cd bedops_2.4.39 && wget https://github.com/bedops/bedops/releases/download/v2.4.39/bedops_linux_x86_64-v2.4.39.tar.bz2 && tar -xvjf bedops_linux_x86_64-v2.4.39.tar.bz2 && rm -f bedops_linux_x86_64-v2.4.39.tar.bz2\nENV PATH=\"/software/bedops_2.4.39/bin:${PATH}\"\n\n# Install ptools_bin 0.0.7 (https://github.com/ENCODE-DCC/ptools_bin)\nRUN pip3 install --no-cache-dir ptools_bin==0.0.7\n\n# Prevent conflict with locally installed python outside of singularity container\nENV PYTHONNOUSERSITE=True\n\n# Disable multithreading for BLAS\nENV OPENBLAS_NUM_THREADS=1\nENV MKL_NUM_THREADS=1\n\n# make some temporary directories\nRUN mkdir -p /mnt/ext_{0..9}\n\n# make pipeline src directory to store py's\nRUN mkdir -p chip-seq-pipeline/src\nENV PATH=\"/software/chip-seq-pipeline:/software/chip-seq-pipeline/src:${PATH}\"\nRUN mkdir -p chip-seq-pipeline/dev/test/test_py\nENV PYTHONPATH=\"/software/chip-seq-pipeline/src\"\n\n# Get ENCODE chip-seq-pipeline container repository\n# This COPY assumes the build context is the root of the chip-seq-pipeline repo\n# and it gets whatever is checked out plus local modifications\n# so the buildling command should be:\n# cd [GIT_REPO_DIR] && docker build -f dev/docker_image/Dockerfile .\nCOPY src chip-seq-pipeline/src/\nCOPY chip.wdl chip-seq-pipeline/\nCOPY dev/test/test_py chip-seq-pipeline/dev/test/test_py/\n\n"
}