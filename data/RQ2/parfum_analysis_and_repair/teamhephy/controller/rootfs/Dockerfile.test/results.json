{
  "startTime": 1674251601859,
  "endTime": 1674251603226,
  "originalSmells": [
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 60,
        "lineEnd": 63,
        "columnStart": 4,
        "columnEnd": 26
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM hephy/base:latest\n\nRUN adduser --system \\\n    --shell /bin/bash \\\n    --disabled-password \\\n    --home /app \\\n    --group \\\n    deis\n\nCOPY Pipfile* /app/\n\nRUN buildDeps='gcc libffi-dev libpq-dev libldap2-dev libsasl2-dev python3-dev python3-pip python3-wheel python3-setuptools'; \\\n    apt-get update && \\\n    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \\\n        $buildDeps \\\n        sudo \\\n        libpq5 \\\n        libldap-2.4 \\\n        python3-minimal \\\n        python3-distutils \\\n        python3-packaging \\\n        # cryptography package needs pkg_resources\n        python3-pkg-resources && \\\n    ln -s /usr/bin/python3 /usr/bin/python && \\\n    # use python3 to upgrade pip and tools\n    python3 -m pip install --upgrade --no-cache-dir \\\n    pip \\\n    setuptools \\\n    wheel && \\\n    mkdir -p /configs && chown -R deis:deis /configs && \\\n    python3 -m pip install --disable-pip-version-check --no-cache-dir pipenv && \\\n    pipenv install --deploy --system --ignore-pipfile && \\\n    # cleanup\n    apt-get purge -y --auto-remove $buildDeps && \\\n    apt-get autoremove -y && \\\n    apt-get clean -y && \\\n    # package up license files if any by appending to existing tar\n    COPYRIGHT_TAR='/usr/share/copyrights.tar'; \\\n    gunzip -f $COPYRIGHT_TAR.gz; tar -rf $COPYRIGHT_TAR /usr/share/doc/*/copyright; gzip $COPYRIGHT_TAR && \\\n    rm -rf \\\n        /usr/share/doc \\\n        /usr/share/man \\\n        /usr/share/info \\\n        /usr/share/locale \\\n        /var/lib/apt/lists/* \\\n        /var/log/* \\\n        /var/cache/debconf/* \\\n        /etc/systemd \\\n        /lib/lsb \\\n        /lib/udev \\\n        /usr/lib/x86_64-linux-gnu/gconv/IBM* \\\n        /usr/lib/x86_64-linux-gnu/gconv/EBC* && \\\n    bash -c \"mkdir -p /usr/share/man/man{1..8}\"\n\n# define execution environment\nWORKDIR /app\n\n# test-unit additions to the main Dockerfile\nENV PGBIN=/usr/lib/postgresql/12/bin PGDATA=/var/lib/postgresql/data LC_ALL=C.UTF-8 LANG=C.UTF-8\nRUN apt-get update && \\\n    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \\\n        git \\\n        postgresql \\\n        postgresql-contrib && \\\n    pipenv install --dev --deploy --system --ignore-pipfile && \\\n    sudo -u postgres -E $PGBIN/initdb && rm -rf /var/lib/apt/lists/*;\n\nCMD [\"/app/bin/test-unit\"]\n"
}