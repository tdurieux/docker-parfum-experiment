{
  "startTime": 1674255340433,
  "endTime": 1674255340998,
  "originalSmells": [
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 5,
        "columnEnd": 86
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 5,
        "columnEnd": 52
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.8-slim-buster as backend-builder\n\nRUN mkdir /app && mkdir /app/logs\nWORKDIR /app\n\nRUN apt update \\\n  && apt install -y --no-install-recommends build-essential make gcc gdal-bin wget git \\\n  && wget -q https://github.com/jwilder/dockerize/releases/download/v0.6.1/dockerize-linux-amd64-v0.6.1.tar.gz && tar -C /usr/local/bin -xzvf dockerize-linux-amd64-v0.6.1.tar.gz && rm dockerize-linux-amd64-v0.6.1.tar.gz \\\n  && apt-get autoremove -y \\\n  && apt-get clean && rm -rf /var/lib/apt/lists/*;\n\nRUN wget -q https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py && POETRY_HOME=/opt/poetry python get-poetry.py \\\n  && find / -name \"*.pyc\" -exec rm -f {} \\;\n\nENV PATH=\"${PATH}:/opt/poetry/bin\"\nADD poetry.lock pyproject.toml /app/\nRUN poetry config virtualenvs.create false \\\n  && poetry install --no-dev --no-interaction --no-ansi \\\n  && find / -name \"*.pyc\" -exec rm -f {} \\; \\\n  && rm -rf /root/.cache/\n\nFROM python:3.8-slim as backend\n\nRUN apt update \\\n  && apt install -y --no-install-recommends gdal-bin \\\n  && apt-get autoremove -y \\\n  && apt-get clean && rm -rf /var/lib/apt/lists/*;\n\nCOPY --from=backend-builder /usr/local/lib/python3.8/site-packages/ /usr/local/lib/python3.8/site-packages/\nCOPY --from=backend-builder /usr/local/bin/ /usr/local/bin/\n\nARG GIT_REVISION\nENV GIT_REVISION=${GIT_REVISION:-unknown}\n\nWORKDIR /app\n\nADD . /app/\nCMD [\"python3\"]\n\n\nFROM backend-builder as backend-tester\n\nWORKDIR /app\n\nRUN poetry config virtualenvs.create false \\\n  && poetry install --no-interaction --no-ansi \\\n  && find / -name \"*.pyc\" -exec rm -f {} \\; \\\n  && rm -rf /root/.cache/\n"
}