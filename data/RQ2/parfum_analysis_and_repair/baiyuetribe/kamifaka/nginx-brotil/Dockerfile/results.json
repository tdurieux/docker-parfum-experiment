{
  "startTime": 1674254613312,
  "endTime": 1674254614309,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 82
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 2,
        "columnEnd": 110
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 40,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 2,
        "columnEnd": 38
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 18,
        "columnEnd": 32
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.10 as html-builder\n\nRUN apk update && apk add --no-cache brotli\n\nRUN mkdir /html\nCOPY html/index.html /html\n\nRUN gzip -9 -k /html/*html\nRUN brotli -Z /html/*html\n\n\nFROM nginx:1.17.9-alpine AS builder\n\nENV NGX_MODULE_COMMIT 0fdca2565dbedb88101ca19b1fb1511272f0821f\nENV NGX_MODULE_PATH ngx_brotli\n\nRUN wget \"https://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz\" -O nginx.tar.gz && \\\n  wget \"https://github.com/google/ngx_brotli/archive/${NGX_MODULE_COMMIT}.tar.gz\" -O ${NGX_MODULE_PATH}.tar.gz\n\n# For latest build deps, see https://github.com/nginxinc/docker-nginx/blob/master/mainline/alpine/Dockerfile\nRUN apk add --no-cache --virtual .build-deps \\\n  gcc \\\n  libc-dev \\\n  make \\\n  openssl-dev \\\n  pcre-dev \\\n  zlib-dev \\\n  linux-headers \\\n  libxslt-dev \\\n  gd-dev \\\n  geoip-dev \\\n  perl-dev \\\n  libedit-dev \\\n  mercurial \\\n  bash \\\n  alpine-sdk \\\n  findutils \\\n  brotli-dev\n\n# Reuse same cli arguments as the nginx:alpine image used to build\nRUN CONFARGS=$(nginx -V 2>&1 | sed -n -e 's/^.*arguments: //p') \\\n  tar -zxf nginx.tar.gz && \\\n  tar -xzf \"${NGX_MODULE_PATH}.tar.gz\" && \\\n  cd nginx-$NGINX_VERSION && \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-compat $CONFARGS --add-dynamic-module=\"$(pwd)/../${NGX_MODULE_PATH}-${NGX_MODULE_COMMIT}\" && \\\n  make && make install && rm nginx.tar.gz\n\n# save /usr/lib/*so deps\nRUN mkdir /so-deps && cp -L $(ldd /usr/local/nginx/modules/ngx_http_brotli_filter_module.so 2>/dev/null | grep '/usr/lib/' | awk '{ print $3 }' | tr '\\n' ' ') /so-deps\n\nFROM nginx:1.17.9-alpine\n\nCOPY --from=builder  /so-deps /usr/lib\nCOPY --from=builder  /usr/local/nginx/modules/ngx_http_brotli_filter_module.so /usr/local/nginx/modules/ngx_http_brotli_filter_module.so\nCOPY --from=builder  /usr/local/nginx/modules/ngx_http_brotli_static_module.so /usr/local/nginx/modules/ngx_http_brotli_static_module.so\nCOPY --chown=nginx:nginx dist /usr/share/nginx/html\nCOPY nginx /etc/nginx\n\n# https://microbadger.com/images/lunaticcat/nginx-brotli\nCOPY Dockerfile /Dockerfile\nLABEL org.label-schema.docker.dockerfile=\"/Dockerfile\" \\\n  org.label-schema.vcs-type=\"Git\" \\\n  org.label-schema.vcs-url=\"https://github.com/lunatic-cat/docker-nginx-brotli\"\n\nEXPOSE 80\n\nSTOPSIGNAL SIGTERM\n\nCMD [\"nginx\", \"-g\", \"daemon off;\"]\n\n"
}