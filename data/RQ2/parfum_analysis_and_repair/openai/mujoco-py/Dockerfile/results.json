{
  "startTime": 1674249471249,
  "endTime": 1674249472553,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 128
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 20,
        "columnStart": 7,
        "columnEnd": 20
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 92
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 92
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 92
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 116
      }
    }
  ],
  "repairedDockerfile": "# We need the CUDA base dockerfile to enable GPU rendering\n# on hosts with GPUs.\n# The image below is a pinned version of nvidia/cuda:9.1-cudnn7-devel-ubuntu16.04 (from Jan 2018)\n# If updating the base image, be sure to test on GPU since it has broken in the past.\nFROM nvidia/cuda@sha256:4df157f2afde1cb6077a191104ab134ed4b2fd62927f27b69d788e8e79a45fa1\n\nRUN apt-get update -q \\\n    && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y \\\n    curl \\\n    git \\\n    libgl1-mesa-dev \\\n    libgl1-mesa-glx \\\n    libglew-dev \\\n    libosmesa6-dev \\\n    software-properties-common \\\n    net-tools \\\n    vim \\\n    virtualenv \\\n    wget \\\n    xpra \\\n    xserver-xorg-dev \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/*\n\nRUN DEBIAN_FRONTEND=noninteractive add-apt-repository --yes ppa:deadsnakes/ppa && apt-get update\nRUN DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install --yes python3.6-dev python3.6 python3-pip && rm -rf /var/lib/apt/lists/*;\nRUN virtualenv --python=python3.6 env\n\nRUN rm /usr/bin/python\nRUN ln -s /env/bin/python3.6 /usr/bin/python\nRUN ln -s /env/bin/pip3.6 /usr/bin/pip\nRUN ln -s /env/bin/pytest /usr/bin/pytest\n\nRUN curl -f -o /usr/local/bin/patchelf https://s3-us-west-2.amazonaws.com/openai-sci-artifacts/manual-builds/patchelf_0.9_amd64.elf \\\n    && chmod +x /usr/local/bin/patchelf\n\nENV LANG C.UTF-8\n\nRUN mkdir -p /root/.mujoco \\\n    && wget https://mujoco.org/download/mujoco210-linux-x86_64.tar.gz -O mujoco.tar.gz \\\n    && tar -xf mujoco.tar.gz -C /root/.mujoco \\\n    && rm mujoco.tar.gz\n\nENV LD_LIBRARY_PATH /root/.mujoco/mujoco210/bin:${LD_LIBRARY_PATH}\nENV LD_LIBRARY_PATH /usr/local/nvidia/lib64:${LD_LIBRARY_PATH}\n\nCOPY vendor/Xdummy /usr/local/bin/Xdummy\nRUN chmod +x /usr/local/bin/Xdummy\n\n# Workaround for https://bugs.launchpad.net/ubuntu/+source/nvidia-graphics-drivers-375/+bug/1674677\nCOPY ./vendor/10_nvidia.json /usr/share/glvnd/egl_vendor.d/10_nvidia.json\n\nWORKDIR /mujoco_py\n# Copy over just requirements.txt at first. That way, the Docker cache doesn't\n# expire until we actually change the requirements.\nCOPY ./requirements.txt /mujoco_py/\nCOPY ./requirements.dev.txt /mujoco_py/\nRUN pip install --no-cache-dir -r requirements.txt\nRUN pip install --no-cache-dir -r requirements.dev.txt\n\n# Delay moving in the entire code until the very end.\nENTRYPOINT [\"/mujoco_py/vendor/Xdummy-entrypoint\"]\nCMD [\"pytest\"]\nCOPY . /mujoco_py\nRUN python setup.py install\n"
}