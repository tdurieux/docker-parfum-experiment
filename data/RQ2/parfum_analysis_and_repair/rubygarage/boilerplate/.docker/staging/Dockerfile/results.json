{
  "startTime": 1674249783169,
  "endTime": 1674249783969,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 30
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ruby:2.7.2-alpine3.12 as Builder\n\nRUN apk add --update --no-cache \\\n  bash \\\n  git \\\n  libxml2-dev \\\n  libxslt-dev \\\n  postgresql-dev \\\n  tzdata \\\n  nodejs \\\n  yarn \\\n  cmake \\\n  build-base \\\n  nano\n\nENV APP_USER app\nENV APP_USER_HOME /home/$APP_USER\nENV APP_HOME /home/www/boilerplate-api\n\nRUN adduser -D -h $APP_USER_HOME $APP_USER\n\nWORKDIR $APP_HOME\n\nUSER $APP_USER\n\nCOPY Gemfile* package.json yarn.lock .ruby-version ./\n\nRUN gem i bundler -v $(tail -1 Gemfile.lock | tr -d ' ') && \\\n    bundle install --without development test -j $(nproc) --retry 5 || bundle check \\\n    && rm -rf /usr/local/bundle/cache/*.gem \\\n    && find /usr/local/bundle/gems/ -name \"*.c\" -delete \\\n    && find /usr/local/bundle/gems/ -name \"*.o\" -delete\n\nUSER root\n\nRUN yarn install --check-files && yarn cache clean;\n\nCOPY . .\n\nRUN RAILS_ENV=development rails assets:precompile\n\nRUN rm -rf node_modules spec tmp/cache\n\nFROM ruby:2.7.2-alpine3.12\n\nRUN apk add --update --no-cache \\\n    bash \\\n    build-base \\\n    libxml2-dev \\\n    libxslt-dev \\\n    tzdata \\\n    curl \\\n    git \\\n    nodejs \\\n    imagemagick \\\n    postgresql-client \\\n    nano\n\nENV APP_USER app\nENV APP_HOME /home/www/boilerplate-api\n\nRUN addgroup -g 1000 -S $APP_USER && adduser -u 1000 -S $APP_USER -G $APP_USER\n\nUSER $APP_USER\n\nCOPY --from=Builder /usr/local/bundle/ /usr/local/bundle/\nCOPY --from=Builder --chown=1000:1000 $APP_HOME $APP_HOME\n\nRUN chmod -R 777 $APP_HOME/.docker/staging/entrypoint.sh\nRUN chmod +x $APP_HOME/.docker/staging/entrypoint.sh\n\nWORKDIR $APP_HOME\n\nUSER $APP_USER\n"
}