{
  "startTime": 1674251129494,
  "endTime": 1674251130348,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 47,
        "lineEnd": 72,
        "columnStart": 4,
        "columnEnd": 72
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 66
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 66
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 66
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 93
      }
    }
  ],
  "repairedDockerfile": "FROM vipconsult/base:jessie\nMAINTAINER Vip Consult Solutions <team@vip-consult.solutions>\n\n# Version\nENV NGINX_VERSION 1.11.8\nENV NPS_VERSION 1.11.33.4\nENV OPENSSL_VERSION 1.1.0e\n# Install Build Tools & Dependence\n\nRUN apt-get install -y --no-install-recommends autotools-dev zlib1g-dev libpcre3 libpcre3-dev && \\\n    apt-get build-dep nginx && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/*\n\n# ===========\n# Build Nginx\n# ===========\n\n# Setting Up ENV\nENV MODULE_DIR /usr/src/nginx-modules\n\n# Create Module Directory\nRUN mkdir ${MODULE_DIR}\n\n# Download Source\nRUN cd /usr/src && \\\n    wget https://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz && \\\n    tar xzf nginx-${NGINX_VERSION}.tar.gz && \\\n    rm -rf nginx-${NGINX_VERSION}.tar.gz && \\\n\n    cd /usr/src && \\\n    wget ftp://ftp.openssl.org/source/openssl-${OPENSSL_VERSION}.tar.gz && \\\n    tar xzf openssl-${OPENSSL_VERSION}.tar.gz && \\\n    rm -rf openssl-${OPENSSL_VERSION}.tar.gz && \\\n\n    # Install Addational Module\n    cd ${MODULE_DIR} && \\\n    wget --no-check-certificate https://github.com/pagespeed/ngx_pagespeed/archive/release-${NPS_VERSION}-beta.tar.gz && \\\n    tar zxf release-${NPS_VERSION}-beta.tar.gz && \\\n    rm -rf release-${NPS_VERSION}-beta.tar.gz && \\\n    cd ngx_pagespeed-release-${NPS_VERSION}-beta/ && \\\n    wget --no-check-certificate https://dl.google.com/dl/page-speed/psol/${NPS_VERSION}.tar.gz && \\\n    tar zxf ${NPS_VERSION}.tar.gz && \\\n    rm -rf ${NPS_VERSION}.tar.gz && \\\n\n    # Compile Nginx\n    cd /usr/src/nginx-${NGINX_VERSION} && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n    --prefix=/etc/nginx \\\n    --sbin-path=/usr/sbin/nginx \\\n    --conf-path=/etc/nginx/nginx.conf \\\n    --pid-path=/var/run/nginx.pid \\\n    --lock-path=/var/run/nginx.lock \\\n    --error-log-path=/var/log/nginx/error.log \\\n    --http-log-path=/var/log/nginx/access.log \\\n    --user=nobody --group=nogroup \\\n    --with-http_dav_module \\\n    --with-http_ssl_module \\\n    --with-http_v2_module \\\n    --with-http_realip_module \\\n    --with-http_flv_module \\\n    --with-http_mp4_module \\\n    --with-http_gunzip_module \\\n    --with-http_gzip_static_module \\\n    --with-http_secure_link_module \\\n    --with-http_auth_request_module \\\n    --with-file-aio \\\n    --with-cc-opt='-g -O2 -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -Wp,-D_FORTIFY_SOURCE=2' --with-ld-opt='-Wl,-z,relro -Wl,--as-needed' \\\n    --with-ipv6 \\\n    --with-sha1=/usr/include/openssl \\\n    --with-md5=/usr/include/openssl \\\n    --with-openssl=\"../openssl-${OPENSSL_VERSION}\" \\\n    --add-module=${MODULE_DIR}/ngx_pagespeed-release-${NPS_VERSION}-beta && \\\n\n    # Install Nginx\n    cd /usr/src/nginx-${NGINX_VERSION} && \\\n    make && make install && \\\n\n    # Clear source code to reduce container size\n    rm -rf /usr/src/*\n\n\n# Forward requests and errors to docker logs\nRUN mkdir -p /var/log/nginx && ln -sf /dev/stdout /var/log/nginx/access.log && \\\n    mkdir -p /var/log/nginx && ln -sf /dev/stderr /var/log/nginx/error.log\n\nVOLUME [\"/var/cache/nginx\", \"/var/cache/ngx_pagespeed\"]\n\nADD entrypoint.sh /\nRUN chmod 777 /entrypoint.sh \\\n    && sed -i -e 's/\\r$//' /entrypoint.sh\n\nENTRYPOINT [\"/entrypoint.sh\"]\n\nCMD [\"nginx\",\"-c\",\"/home/http/default/main.conf\",\"-g\", \"daemon off;\"]\n"
}