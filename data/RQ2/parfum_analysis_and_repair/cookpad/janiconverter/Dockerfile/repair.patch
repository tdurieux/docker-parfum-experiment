diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/cookpad/janiconverter/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/cookpad/janiconverter/Dockerfile/repaired.Dockerfile
index 047846e..f41c1bd 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/cookpad/janiconverter/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/cookpad/janiconverter/Dockerfile/repaired.Dockerfile
@@ -22,46 +22,46 @@ RUN locale-gen en_GB.UTF-8
 RUN dpkg-reconfigure locales
 
 RUN apt-get update
-RUN apt-get install -y build-essential wget curl git git-core
+RUN apt-get install --no-install-recommends -y build-essential wget curl git git-core && rm -rf /var/lib/apt/lists/*;
 
 # ffmpeg
 ## Enable Universe and Multiverse and install dependencies.
-RUN echo deb http://archive.ubuntu.com/ubuntu precise universe multiverse >> /etc/apt/sources.list; apt-get update; apt-get -y install autoconf automake build-essential libass-dev libgpac-dev libtheora-dev libtool libvdpau-dev libvorbis-dev pkg-config texi2html zlib1g-dev libmp3lame-dev wget; apt-get clean
+RUN echo deb http://archive.ubuntu.com/ubuntu precise universe multiverse >> /etc/apt/sources.list; apt-get update; apt-get -y --no-install-recommends install autoconf automake build-essential libass-dev libgpac-dev libtheora-dev libtool libvdpau-dev libvorbis-dev pkg-config texi2html zlib1g-dev libmp3lame-dev wget; rm -rf /var/lib/apt/lists/*; apt-get clean
 
 ## Fetch Sources
-RUN cd /usr/local/src; git clone http://git.videolan.org/git/x264.git; git clone https://github.com/mstorsjo/fdk-aac.git; git clone https://chromium.googlesource.com/webm/libvpx; git clone http://git.videolan.org/git/ffmpeg.git; wget http://downloads.xiph.org/releases/opus/opus-1.0.3.tar.gz; wget http://www.tortall.net/projects/yasm/releases/yasm-1.2.0.tar.gz;
+RUN cd /usr/local/src; git clone http://git.videolan.org/git/x264.git; git clone https://github.com/mstorsjo/fdk-aac.git; git clone https://chromium.googlesource.com/webm/libvpx; git clone http://git.videolan.org/git/ffmpeg.git; wget https://downloads.xiph.org/releases/opus/opus-1.0.3.tar.gz; wget https://www.tortall.net/projects/yasm/releases/yasm-1.2.0.tar.gz;
 
 ## Build YASM assembler.
-RUN cd /usr/local/src; tar xzvf yasm-1.2.0.tar.gz; cd yasm-1.2.0; ./configure; make -j 4; make install; make distclean;
+RUN cd /usr/local/src; tar xzvf yasm-1.2.0.tar.gz; rm yasm-1.2.0.tar.gz cd yasm-1.2.0; ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"; make -j 4; make install; make distclean;
 
 ## Build libx264
-RUN cd /usr/local/src/x264; ./configure --enable-static; make -j 4; make install; make distclean
+RUN cd /usr/local/src/x264; ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --enable-static; make -j 4; make install; make distclean
 
 ## Build libfdk-aac
-RUN cd /usr/local/src/fdk-aac; autoreconf -fiv; ./configure --disable-shared; make -j 4; make install; make distclean
+RUN cd /usr/local/src/fdk-aac; autoreconf -fiv; ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --disable-shared; make -j 4; make install; make distclean
 
 ## Build libvpx
-RUN cd /usr/local/src/libvpx; ./configure --disable-examples; make -j 4; make install; make clean
+RUN cd /usr/local/src/libvpx; ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --disable-examples; make -j 4; make install; make clean
 
 ## Build libopus
-RUN cd /usr/local/src; tar zxvf opus-1.0.3.tar.gz; cd opus-1.0.3; ./configure --disable-shared; make -j 4; make install; make distclean
+RUN cd /usr/local/src; tar zxvf opus-1.0.3.tar.gz; rm opus-1.0.3.tar.gz cd opus-1.0.3; ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --disable-shared; make -j 4; make install; make distclean
 
 ## Build ffmpeg.
-RUN cd /usr/local/src/ffmpeg; ./configure --extra-libs="-ldl" --enable-gpl --enable-libass --enable-libfdk-aac --enable-libmp3lame --enable-libopus --enable-libtheora --enable-libvorbis --enable-libvpx --enable-libx264 --enable-nonfree; make -j 4; make install; make distclean;
+RUN cd /usr/local/src/ffmpeg; ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --extra-libs="-ldl" --enable-gpl --enable-libass --enable-libfdk-aac --enable-libmp3lame --enable-libopus --enable-libtheora --enable-libvorbis --enable-libvpx --enable-libx264 --enable-nonfree; make -j 4; make install; make distclean;
 
 # imagemagick
-RUN apt-get install -y imagemagick
+RUN apt-get install --no-install-recommends -y imagemagick && rm -rf /var/lib/apt/lists/*;
 
 # Node.js & npm
 RUN \
-  apt-get install -y software-properties-common && \
+  apt-get install --no-install-recommends -y software-properties-common && \
   apt-get update && \
   add-apt-repository -y ppa:chris-lea/node.js && \
   apt-get update && \
-  apt-get install -y nodejs
+  apt-get install --no-install-recommends -y nodejs && rm -rf /var/lib/apt/lists/*;
 
 # ruby & gem dependencies
-RUN apt-get -y install \
+RUN apt-get -y --no-install-recommends install \
     libcurl4-openssl-dev \
     libreadline-dev \
     libssl-dev \
@@ -69,25 +69,25 @@ RUN apt-get -y install \
     libxslt1-dev \
     libyaml-dev \
     zlib1g-dev && \
-    curl -O http://cache.ruby-lang.org/pub/ruby/2.1/ruby-2.1.3.tar.gz && \
+    curl -f -O http://cache.ruby-lang.org/pub/ruby/2.1/ruby-2.1.3.tar.gz && \
     tar -zxvf ruby-2.1.3.tar.gz && \
     cd ruby-2.1.3 && \
-    ./configure --disable-install-doc && \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --disable-install-doc && \
     make -j 4 && \
     make install && \
     cd .. && \
     rm -r ruby-2.1.3 ruby-2.1.3.tar.gz && \
-    echo 'gem: --no-document' > /usr/local/etc/gemrc
+    echo 'gem: --no-document' > /usr/local/etc/gemrc && rm -rf /var/lib/apt/lists/*;
 
 # dependencies to install mysql2 gem
-RUN apt-get -y install libmysqlclient-dev
+RUN apt-get -y --no-install-recommends install libmysqlclient-dev && rm -rf /var/lib/apt/lists/*;
 
 # dependencies to install rmagick gem
-RUN apt-get -y install libmagickcore-dev libmagickwand-dev
+RUN apt-get -y --no-install-recommends install libmagickcore-dev libmagickwand-dev && rm -rf /var/lib/apt/lists/*;
 
 RUN echo 'gem: --no-rdoc --no-ri' >> /.gemrc
-RUN gem update --system
-RUN gem update
+RUN gem update --system && rm -rf /root/.gem;
+RUN gem update && rm -rf /root/.gem;
 RUN gem install bundler
 RUN gem install jani-strip_maker