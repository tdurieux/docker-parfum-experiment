{
  "startTime": 1674217441317,
  "endTime": 1674217441878,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 69
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 22,
        "columnEnd": 110
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 22,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 22,
        "columnEnd": 69
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 22,
        "columnEnd": 110
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 22,
        "columnEnd": 49
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 22,
        "columnEnd": 69
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 27
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 51
      }
    }
  ],
  "repairedDockerfile": "# you can try replacing \"debian:sid\" with \"debian:testing\" or \"ubuntu:latest\".\n# For Ubuntu, replace -J with -j in the \"aflize\" script.\nFROM debian:sid\nRUN echo 'deb-src http://httpredir.debian.org/debian sid main' >> /etc/apt/sources.list\n\n# If you'd like to specify a list of packages to be built, uncomment the\n# following line by removing the # symbol at its beginning:\n# ADD ./packages.list /root/\n\nRUN echo 'APT::Install-Suggests \"0\";' > /etc/apt/apt.conf.d/no-suggests\nRUN echo 'APT::Install-Recommends \"0\";' > /etc/apt/apt.conf.d/no-recommends\nRUN apt-get update && apt-get install --no-install-recommends build-essential gcc g++ wget tar gzip make ca-certificates vim procps -y && rm -rf /var/lib/apt/lists/*;\nRUN wget 'https://lcamtuf.coredump.cx/afl/releases/afl-latest.tgz' -O- | tar zxvf - && cd afl-* && make PREFIX=/usr install\n\n# Make sure afl-gcc will be run. This forces us to set AFL_CC and AFL_CXX or\n# otherwise afl-gcc will be trying to call itself by calling gcc.\nADD ./afl-sh-profile /etc/profile.d/afl-sh-profile\nRUN ln -s /etc/profile.d/afl-sh-profile /etc/profile.d/afl-sh-profile.sh\n\n# It looks like /etc/profile.d isn't read for some reason, but .bashrc is.\n# Let's include /etc/profile.d/afl-sh-profile from there.\nRUN echo '. /etc/profile.d/afl-sh-profile' >> /root/.bashrc && chmod +x /root/.bashrc\n\nRUN chmod +x /etc/profile.d/afl-sh-profile\nADD ./setup-afl_cc /usr/bin/setup-afl_cc\nRUN setup-afl_cc\n\nADD ./afl-fuzz-parallel /usr/bin/\n\nADD ./install-preeny.sh /tmp/\nRUN /tmp/install-preeny.sh\n\nRUN mkdir ~/pkg ~/pkgs ~/logs\n\n# This isn't really necessary, but it'd be a real convenience for me.\nRUN apt-get update && apt-get install --no-install-recommends apt-file -y && apt-file update && rm -rf /var/lib/apt/lists/*;\n\n# install \"exploitable\" GDB script\nRUN apt-get update && apt-get install --no-install-recommends gdb python python-setuptools -y && rm -rf /var/lib/apt/lists/*;\nRUN wget -O- 'https://github.com/jfoote/exploitable/archive/master.tar.gz' | tar zxvf - && cd exploitable-master && python setup.py install\n\nRUN mkdir ~/fuzz-results ~/pkgs-coverage\nRUN apt-get install --no-install-recommends lcov -y && rm -rf /var/lib/apt/lists/*;\nADD ./testcases /root/testcases\nADD ./fuzz-pkg-with-coverage.sh /root/\nADD ./aflize /usr/bin/aflize\n\n# Add some of the settings I find it hard to live without.\nRUN echo \"alias ls='ls --color=auto'\" >> /root/.bashrc\nRUN echo \"syntax on\" >> /root/.vimrc\n"
}