diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/d33tah/aflize/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/d33tah/aflize/Dockerfile/repaired.Dockerfile
index fc9ed50..4bc426b 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/d33tah/aflize/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/d33tah/aflize/Dockerfile/repaired.Dockerfile
@@ -9,8 +9,8 @@ RUN echo 'deb-src http://httpredir.debian.org/debian sid main' >> /etc/apt/sourc
 
 RUN echo 'APT::Install-Suggests "0";' > /etc/apt/apt.conf.d/no-suggests
 RUN echo 'APT::Install-Recommends "0";' > /etc/apt/apt.conf.d/no-recommends
-RUN apt-get update && apt-get install build-essential gcc g++ wget tar gzip make ca-certificates vim procps -y
-RUN wget 'http://lcamtuf.coredump.cx/afl/releases/afl-latest.tgz' -O- | tar zxvf - && cd afl-* && make PREFIX=/usr install
+RUN apt-get update && apt-get install --no-install-recommends build-essential gcc g++ wget tar gzip make ca-certificates vim procps -y && rm -rf /var/lib/apt/lists/*;
+RUN wget 'https://lcamtuf.coredump.cx/afl/releases/afl-latest.tgz' -O- | tar zxvf - && cd afl-* && make PREFIX=/usr install
 
 # Make sure afl-gcc will be run. This forces us to set AFL_CC and AFL_CXX or
 # otherwise afl-gcc will be trying to call itself by calling gcc.
@@ -33,14 +33,14 @@ RUN /tmp/install-preeny.sh
 RUN mkdir ~/pkg ~/pkgs ~/logs
 
 # This isn't really necessary, but it'd be a real convenience for me.
-RUN apt-get update && apt-get install apt-file -y && apt-file update
+RUN apt-get update && apt-get install --no-install-recommends apt-file -y && apt-file update && rm -rf /var/lib/apt/lists/*;
 
 # install "exploitable" GDB script
-RUN apt-get update && apt-get install gdb python python-setuptools -y
+RUN apt-get update && apt-get install --no-install-recommends gdb python python-setuptools -y && rm -rf /var/lib/apt/lists/*;
 RUN wget -O- 'https://github.com/jfoote/exploitable/archive/master.tar.gz' | tar zxvf - && cd exploitable-master && python setup.py install
 
 RUN mkdir ~/fuzz-results ~/pkgs-coverage
-RUN apt-get install lcov -y
+RUN apt-get install --no-install-recommends lcov -y && rm -rf /var/lib/apt/lists/*;
 ADD ./testcases /root/testcases
 ADD ./fuzz-pkg-with-coverage.sh /root/
 ADD ./aflize /usr/bin/aflize