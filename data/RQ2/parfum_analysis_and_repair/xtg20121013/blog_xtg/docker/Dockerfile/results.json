{
  "startTime": 1674252229511,
  "endTime": 1674252230675,
  "originalSmells": [
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 73,
        "lineEnd": 73,
        "columnStart": 5,
        "columnEnd": 84
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 74,
        "lineEnd": 74,
        "columnStart": 5,
        "columnEnd": 93
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 132,
        "lineEnd": 132,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 147,
        "lineEnd": 147,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 83,
        "lineEnd": 83,
        "columnStart": 5,
        "columnEnd": 37
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 90,
        "lineEnd": 90,
        "columnStart": 5,
        "columnEnd": 24
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 5,
        "columnEnd": 71
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 18,
        "columnEnd": 41
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 143,
        "lineEnd": 146,
        "columnStart": 4,
        "columnEnd": 10
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:2.7.13-alpine\nMAINTAINER xtg <imgamermhq@gmail.com>\n\n#时区问题（alpine解决方案）\nRUN apk update && apk add --no-cache ca-certificates && \\\n    apk add --no-cache tzdata && \\\n    ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime && \\\n    echo \"Asia/Shanghai\" > /etc/timezone\n\nENV SUPERVISOR_VERSION 3.3.1\nENV NGINX_VERSION 1.10.3\n\n#安装nginx\nRUN GPG_KEYS=B0F4253373F8F6F510D42178520A9993A1C052F8 \\\n  && CONFIG=\"\\\n    --prefix=/etc/nginx \\\n    --sbin-path=/usr/sbin/nginx \\\n    --modules-path=/usr/lib/nginx/modules \\\n    --conf-path=/etc/nginx/nginx.conf \\\n    --error-log-path=/var/log/nginx/error.log \\\n    --http-log-path=/var/log/nginx/access.log \\\n    --pid-path=/var/run/nginx.pid \\\n    --lock-path=/var/run/nginx.lock \\\n    --http-client-body-temp-path=/var/cache/nginx/client_temp \\\n    --http-proxy-temp-path=/var/cache/nginx/proxy_temp \\\n    --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp \\\n    --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp \\\n    --http-scgi-temp-path=/var/cache/nginx/scgi_temp \\\n    --user=nginx \\\n    --group=nginx \\\n    --with-http_ssl_module \\\n    --with-http_realip_module \\\n    --with-http_addition_module \\\n    --with-http_sub_module \\\n    --with-http_dav_module \\\n    --with-http_flv_module \\\n    --with-http_mp4_module \\\n    --with-http_gunzip_module \\\n    --with-http_gzip_static_module \\\n    --with-http_random_index_module \\\n    --with-http_secure_link_module \\\n    --with-http_stub_status_module \\\n    --with-http_auth_request_module \\\n    --with-http_xslt_module=dynamic \\\n    --with-http_image_filter_module=dynamic \\\n    --with-http_geoip_module=dynamic \\\n    --with-http_perl_module=dynamic \\\n    --with-threads \\\n    --with-stream \\\n    --with-stream_ssl_module \\\n    --with-http_slice_module \\\n    --with-mail \\\n    --with-mail_ssl_module \\\n    --with-file-aio \\\n    --with-http_v2_module \\\n    --with-ipv6 \\\n  \" \\\n  && addgroup -S nginx \\\n  && adduser -D -S -h /var/cache/nginx -s /sbin/nologin -G nginx nginx \\\n  && apk add --no-cache --virtual .build-deps \\\n    gcc \\\n    libc-dev \\\n    make \\\n    openssl-dev \\\n    pcre-dev \\\n    zlib-dev \\\n    linux-headers \\\n    curl \\\n    gnupg \\\n    libxslt-dev \\\n    gd-dev \\\n    geoip-dev \\\n    perl-dev \\\n  && curl -fSL https://nginx.org/download/nginx-$NGINX_VERSION.tar.gz -o nginx.tar.gz \\\n  && curl -fSL https://nginx.org/download/nginx-$NGINX_VERSION.tar.gz.asc -o nginx.tar.gz.asc \\\n  && export GNUPGHOME=\"$(mktemp -d)\" \\\n  && gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \"$GPG_KEYS\" \\\n  && gpg --batch --verify nginx.tar.gz.asc nginx.tar.gz \\\n  && rm -r \"$GNUPGHOME\" nginx.tar.gz.asc \\\n  && mkdir -p /usr/src \\\n  && tar -zxC /usr/src -f nginx.tar.gz \\\n  && rm nginx.tar.gz \\\n  && cd /usr/src/nginx-$NGINX_VERSION \\\n  && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" $CONFIG --with-debug \\\n  && make -j$(getconf _NPROCESSORS_ONLN) \\\n  && mv objs/nginx objs/nginx-debug \\\n  && mv objs/ngx_http_xslt_filter_module.so objs/ngx_http_xslt_filter_module-debug.so \\\n  && mv objs/ngx_http_image_filter_module.so objs/ngx_http_image_filter_module-debug.so \\\n  && mv objs/ngx_http_geoip_module.so objs/ngx_http_geoip_module-debug.so \\\n  && mv objs/ngx_http_perl_module.so objs/ngx_http_perl_module-debug.so \\\n  && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" $CONFIG \\\n  && make -j$(getconf _NPROCESSORS_ONLN) \\\n  && make install \\\n  && rm -rf /etc/nginx/html/ \\\n  && mkdir /etc/nginx/conf.d/ \\\n  && mkdir -p /usr/share/nginx/html/ \\\n  && install -m644 html/index.html /usr/share/nginx/html/ \\\n  && install -m644 html/50x.html /usr/share/nginx/html/ \\\n  && install -m755 objs/nginx-debug /usr/sbin/nginx-debug \\\n  && install -m755 objs/ngx_http_xslt_filter_module-debug.so /usr/lib/nginx/modules/ngx_http_xslt_filter_module-debug.so \\\n  && install -m755 objs/ngx_http_image_filter_module-debug.so /usr/lib/nginx/modules/ngx_http_image_filter_module-debug.so \\\n  && install -m755 objs/ngx_http_geoip_module-debug.so /usr/lib/nginx/modules/ngx_http_geoip_module-debug.so \\\n  && install -m755 objs/ngx_http_perl_module-debug.so /usr/lib/nginx/modules/ngx_http_perl_module-debug.so \\\n  && ln -s ../../usr/lib/nginx/modules /etc/nginx/modules \\\n  && strip /usr/sbin/nginx* \\\n  && strip /usr/lib/nginx/modules/*.so \\\n  && rm -rf /usr/src/nginx-$NGINX_VERSION \\\n\n  # Bring in gettext so we can get `envsubst`, then throw\n  # the rest away. To do this, we need to install `gettext`\n  # then move `envsubst` out of the way so `gettext` can\n  # be deleted completely, then move `envsubst` back.\n  && apk add --no-cache --virtual .gettext gettext \\\n  && mv /usr/bin/envsubst /tmp/ \\\n\n  && runDeps=\"$( \\\n    scanelf --needed --nobanner /usr/sbin/nginx /usr/lib/nginx/modules/*.so /tmp/envsubst \\\n      | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }' \\\n      | sort -u \\\n      | xargs -r apk info --installed \\\n      | sort -u \\\n  )\" \\\n  && apk add --no-cache --virtual .nginx-rundeps $runDeps \\\n  && apk del .build-deps \\\n  && apk del .gettext \\\n  && mv /tmp/envsubst /usr/local/bin/ \\\n\n  # forward request and error logs to docker log collector\n  && ln -sf /dev/stdout /var/log/nginx/access.log \\\n  && ln -sf /dev/stderr /var/log/nginx/error.log\n\n#安装\nRUN pip install --no-cache-dir supervisor==${SUPERVISOR_VERSION}\n\n#导入相关配置\nCOPY docker/nginx.conf /etc/nginx/nginx.conf\nCOPY docker/supervisord.conf /etc/supervisord.conf\n#copy项目代码\nCOPY . /home/xtg/blog-xtg\n\nWORKDIR /home/xtg/blog-xtg\n#安装项目依赖\nRUN apk add --update --no-cache mariadb-client-libs \\\n\t&& apk add --no-cache --no-cahe --virtual .build-deps \\\n\t\tmariadb-dev \\\n\t\tgcc \\\n\t\tmusl-dev \\\n\t&& pip install --no-cache-dir -r requirements.txt \\\n\t&& apk del .build-deps\n\nEXPOSE 80\nVOLUME /home/xtg/blog-xtg/logs\n\nCOPY docker/entrypoint.sh /usr/local/bin/\nRUN chmod +x /usr/local/bin/entrypoint.sh\nENTRYPOINT [\"entrypoint.sh\"]\nCMD [\"upgradedb\"]"
}