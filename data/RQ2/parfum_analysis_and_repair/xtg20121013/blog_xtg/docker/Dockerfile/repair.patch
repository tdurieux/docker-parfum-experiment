diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/xtg20121013/blog_xtg/docker/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/xtg20121013/blog_xtg/docker/Dockerfile/repaired.Dockerfile
index 5e76786..035b9e3 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/xtg20121013/blog_xtg/docker/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/xtg20121013/blog_xtg/docker/Dockerfile/repaired.Dockerfile
@@ -2,8 +2,8 @@ FROM python:2.7.13-alpine
 MAINTAINER xtg <imgamermhq@gmail.com>
 
 #时区问题（alpine解决方案）
-RUN apk update && apk add ca-certificates && \
-    apk add tzdata && \
+RUN apk update && apk add --no-cache ca-certificates && \
+    apk add --no-cache tzdata && \
     ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime && \
     echo "Asia/Shanghai" > /etc/timezone
 
@@ -71,24 +71,24 @@ RUN GPG_KEYS=B0F4253373F8F6F510D42178520A9993A1C052F8 \
     gd-dev \
     geoip-dev \
     perl-dev \
-  && curl -fSL http://nginx.org/download/nginx-$NGINX_VERSION.tar.gz -o nginx.tar.gz \
-  && curl -fSL http://nginx.org/download/nginx-$NGINX_VERSION.tar.gz.asc  -o nginx.tar.gz.asc \
+  && curl -fSL https://nginx.org/download/nginx-$NGINX_VERSION.tar.gz -o nginx.tar.gz \
+  && curl -fSL https://nginx.org/download/nginx-$NGINX_VERSION.tar.gz.asc -o nginx.tar.gz.asc \
   && export GNUPGHOME="$(mktemp -d)" \
-  && gpg --keyserver ha.pool.sks-keyservers.net --recv-keys "$GPG_KEYS" \
+  && gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$GPG_KEYS" \
   && gpg --batch --verify nginx.tar.gz.asc nginx.tar.gz \
   && rm -r "$GNUPGHOME" nginx.tar.gz.asc \
   && mkdir -p /usr/src \
   && tar -zxC /usr/src -f nginx.tar.gz \
   && rm nginx.tar.gz \
   && cd /usr/src/nginx-$NGINX_VERSION \
-  && ./configure $CONFIG --with-debug \
+  && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" $CONFIG --with-debug \
   && make -j$(getconf _NPROCESSORS_ONLN) \
   && mv objs/nginx objs/nginx-debug \
   && mv objs/ngx_http_xslt_filter_module.so objs/ngx_http_xslt_filter_module-debug.so \
   && mv objs/ngx_http_image_filter_module.so objs/ngx_http_image_filter_module-debug.so \
   && mv objs/ngx_http_geoip_module.so objs/ngx_http_geoip_module-debug.so \
   && mv objs/ngx_http_perl_module.so objs/ngx_http_perl_module-debug.so \
-  && ./configure $CONFIG \
+  && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" $CONFIG \
   && make -j$(getconf _NPROCESSORS_ONLN) \
   && make install \
   && rm -rf /etc/nginx/html/ \
@@ -105,14 +105,14 @@ RUN GPG_KEYS=B0F4253373F8F6F510D42178520A9993A1C052F8 \
   && strip /usr/sbin/nginx* \
   && strip /usr/lib/nginx/modules/*.so \
   && rm -rf /usr/src/nginx-$NGINX_VERSION \
-  \
+
   # Bring in gettext so we can get `envsubst`, then throw
   # the rest away. To do this, we need to install `gettext`
   # then move `envsubst` out of the way so `gettext` can
   # be deleted completely, then move `envsubst` back.
   && apk add --no-cache --virtual .gettext gettext \
   && mv /usr/bin/envsubst /tmp/ \
-  \
+
   && runDeps="$( \
     scanelf --needed --nobanner /usr/sbin/nginx /usr/lib/nginx/modules/*.so /tmp/envsubst \
       | awk '{ gsub(/,/, "\nso:", $2); print "so:" $2 }' \
@@ -124,13 +124,13 @@ RUN GPG_KEYS=B0F4253373F8F6F510D42178520A9993A1C052F8 \
   && apk del .build-deps \
   && apk del .gettext \
   && mv /tmp/envsubst /usr/local/bin/ \
-  \
+
   # forward request and error logs to docker log collector
   && ln -sf /dev/stdout /var/log/nginx/access.log \
   && ln -sf /dev/stderr /var/log/nginx/error.log
 
 #安装
-RUN pip install supervisor==${SUPERVISOR_VERSION}
+RUN pip install --no-cache-dir supervisor==${SUPERVISOR_VERSION}
 
 #导入相关配置
 COPY docker/nginx.conf /etc/nginx/nginx.conf
@@ -141,11 +141,11 @@ COPY . /home/xtg/blog-xtg
 WORKDIR /home/xtg/blog-xtg
 #安装项目依赖
 RUN apk add --update --no-cache mariadb-client-libs \
-	&& apk add --no-cahe --virtual .build-deps \
+	&& apk add --no-cache --no-cahe --virtual .build-deps \
 		mariadb-dev \
 		gcc \
 		musl-dev \
-	&& pip install -r requirements.txt \
+	&& pip install --no-cache-dir -r requirements.txt \
 	&& apk del .build-deps
 
 EXPOSE 80