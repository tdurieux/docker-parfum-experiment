{
  "startTime": 1674218697990,
  "endTime": 1674218699050,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 90
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 194
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 152
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 17,
        "columnEnd": 94
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 168
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 93
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 136
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 22,
        "columnEnd": 67
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 22,
        "columnEnd": 67
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:20.04\n\nARG GO_VERSION=\"1.17.6\" \\\n    TERRAFORM_VERSION=\"latest\" \\\n    TERRAFORM_DOCS_VERSION=\"v0.16.0\" \\\n    TFLINT_VERSION=\"v0.34.1\" \\\n    TERRATEST_VERSION=\"v0.13.13\" \\\n    KUBERNETES_VERSION=\"1.21.2\"\n\nENV GOROOT=/usr/local/go \\\n    GOPATH=/go \\\n    PATH=/root/.tfenv/bin:${GOPATH}/bin:${GOROOT}/bin:${PATH} \\\n    LANGUAGE=\"C\" \\\n    LC_ALL=\"C\"\n\n# Common\nRUN apt-get update && apt-get install --no-install-recommends -y curl unzip git python3-pip && rm -rf /var/lib/apt/lists/*;\n\n# Golang\nRUN curl -f -sSL -o /tmp/go.tar.gz \"https://golang.org/dl/go${GO_VERSION}.linux-amd64.tar.gz\" \\\n && tar -xzf /tmp/go.tar.gz -C /usr/local \\\n && ${GOROOT}/bin/go install -v golang.org/x/tools/gopls@latest && rm /tmp/go.tar.gz\n\n# Terraform\nRUN git clone https://github.com/tfutils/tfenv.git /root/.tfenv \\\n && tfenv install ${TERRAFORM_VERSION} \\\n && tfenv use $(ls /root/.tfenv/versions)\n\n# Terraform-Docs\nRUN curl -f -sSLo ./terraform-docs.tar.gz https://github.com/terraform-docs/terraform-docs/releases/download/${TERRAFORM_DOCS_VERSION}/terraform-docs-${TERRAFORM_DOCS_VERSION}-$(uname)-amd64.tar.gz \\\n && tar -xzf terraform-docs.tar.gz -C /usr/bin/ terraform-docs \\\n && rm terraform-docs.tar.gz 2> /dev/null\n\n# Tflint\nRUN curl -f -sSL \"$( curl -f -s https://api.github.com/repos/terraform-linters/tflint/releases/latest | grep -o -E \"https://.+?_linux_amd64.zip\")\" > tflint.zip \\\n && unzip -qq tflint.zip tflint -d /usr/bin/ \\\n && rm tflint.zip 2> /dev/null\n\n# Terratest\nRUN curl -f -sSL -o /usr/local/bin/terratest_log_parser \"https://github.com/gruntwork-io/terratest/releases/download/${TERRATEST_VERSION}/terratest_log_parser_linux_amd64\" \\\n && chmod +x /usr/local/bin/terratest_log_parser\n\n# Pre-Commit\nRUN pip3 install -q --no-cache-dir pre-commit\n\n# AWSCLI\nRUN curl -f -sSL -o /tmp/awscliv2.zip \"https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip\" \\\n && unzip /tmp/awscliv2.zip -d /tmp \\\n && ./tmp/aws/install\n\n# Kubectl\nRUN curl -f -sSL -o /usr/bin/kubectl https://amazon-eks.s3.us-west-2.amazonaws.com/${KUBERNETES_VERSION}/2021-07-05/bin/linux/amd64/kubectl \\\n && chmod +x /usr/bin/kubectl \\\n && curl -f -sS https://webinstall.dev/k9s | bash\n\n# Dotfiles\nCOPY .aliases /root/.aliases\nRUN echo \"source /root/.aliases\" >> /root/.bashrc\n\n# Clean\nRUN rm -rf /tmp/* && rm -rf /var/lib/apt/lists/*\n"
}