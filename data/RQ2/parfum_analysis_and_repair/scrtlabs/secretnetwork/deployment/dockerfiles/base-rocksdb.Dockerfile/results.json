{
  "startTime": 1674247924668,
  "endTime": 1674247925782,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 54
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 85,
        "lineEnd": 85,
        "columnStart": 65,
        "columnEnd": 85
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 85,
        "lineEnd": 85,
        "columnStart": 65,
        "columnEnd": 85
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Simple usage with a mounted data directory:\n# > docker build -t enigma .\n# > docker run -it -p 26657:26657 -p 26656:26656 -v ~/.secretd:/root/.secretd -v ~/.secretcli:/root/.secretcli enigma secretd init\n# > docker run -it -p 26657:26657 -p 26656:26656 -v ~/.secretd:/root/.secretd -v ~/.secretcli:/root/.secretcli enigma secretd start\nFROM baiduxlab/sgx-rust:2004-1.1.3 AS build-env-rust-go\n\nENV PATH=\"/root/.cargo/bin:$PATH\"\nENV GOROOT=/usr/local/go\nENV GOPATH=/go/\nENV PATH=$PATH:/usr/local/go/bin:$GOPATH/bin\n\nADD https://go.dev/dl/go1.17.7.linux-amd64.tar.gz go1.17.7.linux-amd64.tar.gz\nRUN tar -C /usr/local -xzf go1.17.7.linux-amd64.tar.gz && rm go1.17.7.linux-amd64.tar.gz\nRUN go install github.com/jteeuwen/go-bindata/go-bindata@latest && go-bindata -version\n\nRUN wget -q https://github.com/WebAssembly/wabt/releases/download/1.0.20/wabt-1.0.20-ubuntu.tar.gz && \\\n    tar -xf wabt-1.0.20-ubuntu.tar.gz wabt-1.0.20/bin/wat2wasm wabt-1.0.20/bin/wasm2wat && \\\n    mv wabt-1.0.20/bin/wat2wasm wabt-1.0.20/bin/wasm2wat /bin && \\\n    chmod +x /bin/wat2wasm /bin/wasm2wat && \\\n    rm -f wabt-1.0.20-ubuntu.tar.gz\n\n\n# Set working directory for the build\nWORKDIR /go/src/github.com/enigmampc/SecretNetwork/\n\nARG BUILD_VERSION=\"v0.0.0\"\nARG SGX_MODE=SW\nARG FEATURES\nARG FEATURES_U\n\nENV VERSION=${BUILD_VERSION}\nENV SGX_MODE=${SGX_MODE}\nENV FEATURES=${FEATURES}\nENV FEATURES_U=${FEATURES_U}\nENV MITIGATION_CVE_2020_0551=LOAD\n\nCOPY third_party/build third_party/build\n\n# Add source files\nCOPY go-cosmwasm go-cosmwasm/\nCOPY cosmwasm cosmwasm/\n\nWORKDIR /go/src/github.com/enigmampc/SecretNetwork/\n\nCOPY deployment/docker/MakefileCopy Makefile\n\n# RUN make clean\nRUN make vendor\n\nWORKDIR /go/src/github.com/enigmampc/SecretNetwork/go-cosmwasm\n\nCOPY api_key.txt /go/src/github.com/enigmampc/SecretNetwork/ias_keys/develop/\nCOPY spid.txt /go/src/github.com/enigmampc/SecretNetwork/ias_keys/develop/\nCOPY api_key.txt /go/src/github.com/enigmampc/SecretNetwork/ias_keys/production/\nCOPY spid.txt /go/src/github.com/enigmampc/SecretNetwork/ias_keys/production/\nCOPY api_key.txt /go/src/github.com/enigmampc/SecretNetwork/ias_keys/sw_dummy/\nCOPY spid.txt /go/src/github.com/enigmampc/SecretNetwork/ias_keys/sw_dummy/\n\nRUN . /opt/sgxsdk/environment && env \\\n    && MITIGATION_CVE_2020_0551=LOAD VERSION=${VERSION} FEATURES=${FEATURES} FEATURES_U=${FEATURES_U} SGX_MODE=${SGX_MODE} make build-rust\n\n# Set working directory for the build\nWORKDIR /go/src/github.com/enigmampc/SecretNetwork\n\nCOPY --from=enigmampc/rocksdb:v6.24.2 /usr/local/lib/librocksdb.a /usr/local/lib/librocksdb.a\n\n# Add source files\nCOPY go-cosmwasm go-cosmwasm\n# This is due to some esoteric docker bug with the underlying filesystem, so until I figure out a better way, this should be a workaround\nRUN true\nCOPY x x\nRUN true\nCOPY types types\nRUN true\nCOPY app app\nCOPY go.mod .\nCOPY go.sum .\nCOPY cmd cmd\nCOPY Makefile .\nRUN true\nCOPY client client\n\nRUN . /opt/sgxsdk/environment && env && CGO_LDFLAGS=\"-L/usr/local/lib -lrocksdb\" DB_BACKEND=rocksdb MITIGATION_CVE_2020_0551=LOAD VERSION=${VERSION} FEATURES=${FEATURES} SGX_MODE=${SGX_MODE} make build_local_no_rust\nRUN . /opt/sgxsdk/environment && env && MITIGATION_CVE_2020_0551=LOAD VERSION=${VERSION} FEATURES=${FEATURES} SGX_MODE=${SGX_MODE} make build_cli\n\nRUN rustup target add wasm32-unknown-unknown && apt update -y && apt install --no-install-recommends clang -y && make build-test-contract && rm -rf /var/lib/apt/lists/*;\n\n# workaround because paths seem kind of messed up\n# RUN cp /opt/sgxsdk/lib64/libsgx_urts_sim.so /usr/lib/libsgx_urts_sim.so\n# RUN cp /opt/sgxsdk/lib64/libsgx_uae_service_sim.so /usr/lib/libsgx_uae_service_sim.so\n# RUN cp /go/src/github.com/enigmampc/SecretNetwork/go-cosmwasm/target/release/libgo_cosmwasm.so /usr/lib/libgo_cosmwasm.so\n# RUN cp /go/src/github.com/enigmampc/SecretNetwork/go-cosmwasm/librust_cosmwasm_enclave.signed.so /usr/lib/librust_cosmwasm_enclave.signed.so\n# RUN cp /go/src/github.com/enigmampc/SecretNetwork/cosmwasm/packages/wasmi-runtime/librust_cosmwasm_enclave.signed.so x/compute/internal/keeper\n# RUN mkdir -p /go/src/github.com/enigmampc/SecretNetwork/x/compute/internal/keeper/.sgx_secrets\n\n#COPY deployment/ci/go-tests.sh .\n#\n#RUN chmod +x go-tests.sh\n\n# ENTRYPOINT [\"/bin/bash\", \"go-tests.sh\"]\nENTRYPOINT [\"/bin/bash\"]"
}