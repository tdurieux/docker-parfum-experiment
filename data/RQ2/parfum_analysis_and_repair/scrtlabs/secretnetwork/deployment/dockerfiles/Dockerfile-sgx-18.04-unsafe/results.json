{
  "startTime": 1674250949844,
  "endTime": 1674250951587,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 115
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 229
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 31,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 35
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License..\n\n\nFROM ubuntu:18.04\nMAINTAINER Yu Ding\n\nENV DEBIAN_FRONTEND=noninteractive\nENV VERSION         2.9.101.2-bionic1\nENV rust_toolchain  nightly-2020-10-25\nENV sdk_bin         https://download.01.org/intel-sgx/sgx-linux/2.9/distro/ubuntu18.04-server/sgx_linux_x64_sdk_2.9.101.2.bin\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y gnupg2 apt-transport-https ca-certificates curl software-properties-common build-essential automake autoconf libtool protobuf-compiler libprotobuf-dev git-core libprotobuf-c0-dev cmake pkg-config expect gdb && \\\n    curl -fsSL https://download.01.org/intel-sgx/sgx_repo/ubuntu/intel-sgx-deb.key | apt-key add - && \\\n    add-apt-repository \"deb https://download.01.org/intel-sgx/sgx_repo/ubuntu bionic main\" && \\\n    apt-get update && \\\n    apt-get install --no-install-recommends -y \\\n        libsgx-aesm-launch-plugin=$VERSION \\\n        libsgx-enclave-common=$VERSION \\\n        libsgx-enclave-common-dbgsym=$VERSION \\\n        libsgx-enclave-common-dev=$VERSION \\\n        libsgx-epid=$VERSION \\\n        libsgx-epid-dbgsym=$VERSION \\\n        libsgx-epid-dev=$VERSION \\\n        libsgx-launch=$VERSION \\\n        libsgx-launch-dbgsym=$VERSION \\\n        libsgx-launch-dev=$VERSION \\\n        libsgx-quote-ex=$VERSION \\\n        libsgx-quote-ex-dbgsym=$VERSION \\\n        libsgx-quote-ex-dev=$VERSION \\\n        libsgx-uae-service=$VERSION \\\n        libsgx-uae-service-dbgsym=$VERSION \\\n        libsgx-urts=$VERSION \\\n        libsgx-urts-dbgsym=$VERSION && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    rm -rf /var/cache/apt/archives/* && \\\n    mkdir /var/run/aesmd && \\\n    mkdir /etc/init\n\nRUN curl -f 'https://static.rust-lang.org/rustup/dist/x86_64-unknown-linux-gnu/rustup-init' --output /root/rustup-init && \\\n    chmod +x /root/rustup-init && \\\n    echo '1' | /root/rustup-init --default-toolchain ${rust_toolchain} && \\\n    echo 'source /root/.cargo/env' >> /root/.bashrc && \\\n    /root/.cargo/bin/rustup component add rust-src rls rust-analysis clippy rustfmt && \\\n    /root/.cargo/bin/cargo install xargo && \\\n    rm /root/rustup-init && rm -rf /root/.cargo/registry && rm -rf /root/.cargo/git\n\nRUN mkdir /root/sgx && \\\n    curl -f --output /root/sgx/sdk.bin ${sdk_bin} && \\\n    cd /root/sgx && \\\n    chmod +x /root/sgx/sdk.bin && \\\n    echo -e 'no\\n/opt' | /root/sgx/sdk.bin && \\\n    echo 'source /opt/sgxsdk/environment' >> /root/.bashrc && \\\n    echo 'alias start-aesm=\"LD_LIBRARY_PATH=/opt/intel/sgx-aesm-service/aesm /opt/intel/sgx-aesm-service/aesm/aesm_service\"' >> /root/.bashrc && \\\n    rm -rf /root/sgx*\n\nWORKDIR /root"
}