{
  "startTime": 1674246596433,
  "endTime": 1674246597772,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 33
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Base image\nFROM rust-go-base-image AS build-env-rust-go\n\n# Final image\nFROM enigmampc/enigma-sgx-base:2004-1.1.3 as build-release\n\n# wasmi-sgx-test script requirements\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n    #### Base utilities ####\n    jq \\\n    openssl \\\n    curl \\\n    wget \\\n    libsnappy-dev \\\n    libgflags-dev \\\n    bash-completion && \\\n    rm -rf /var/lib/apt/lists/*\n\nRUN echo \"source /etc/profile.d/bash_completion.sh\" >> ~/.bashrc\n\nRUN curl -f -sL https://deb.nodesource.com/setup_15.x | bash - && \\\n    apt-get update && \\\n    apt-get install --no-install-recommends -y nodejs npm && \\\n    npm i -g local-cors-proxy && npm cache clean --force; && rm -rf /var/lib/apt/lists/*;\n\nARG SGX_MODE=SW\nENV SGX_MODE=${SGX_MODE}\n\nARG SECRET_NODE_TYPE=BOOTSTRAP\nENV SECRET_NODE_TYPE=${SECRET_NODE_TYPE}\n\nENV SCRT_ENCLAVE_DIR=/usr/lib/\n\n# workaround because paths seem kind of messed up\nRUN cp /opt/sgxsdk/lib64/libsgx_urts_sim.so /usr/lib/libsgx_urts_sim.so\nRUN cp /opt/sgxsdk/lib64/libsgx_uae_service_sim.so /usr/lib/libsgx_uae_service_sim.so\n\n# Install ca-certificates\nWORKDIR /root\n\n# Copy over binaries from the build-env\nCOPY --from=build-env-rust-go /go/src/github.com/enigmampc/SecretNetwork/go-cosmwasm/target/release/libgo_cosmwasm.so /usr/lib/\nCOPY --from=build-env-rust-go /go/src/github.com/enigmampc/SecretNetwork/go-cosmwasm/librust_cosmwasm_enclave.signed.so /usr/lib/\nCOPY --from=build-env-rust-go /go/src/github.com/enigmampc/SecretNetwork/go-cosmwasm/librust_cosmwasm_query_enclave.signed.so /usr/lib/\nCOPY --from=build-env-rust-go /go/src/github.com/enigmampc/SecretNetwork/secretd /usr/bin/secretd\n\nCOPY deployment/docker/bootstrap/bootstrap_init.sh .\nCOPY deployment/docker/node/node_init.sh .\nCOPY deployment/docker/startup.sh .\nCOPY deployment/docker/node_key.json .\n\nRUN chmod +x /usr/bin/secretd\nRUN chmod +x bootstrap_init.sh\nRUN chmod +x startup.sh\nRUN chmod +x node_init.sh\n\nRUN secretd completion > /root/secretd_completion\n\nRUN echo 'source /root/secretd_completion' >> ~/.bashrc\n\nRUN mkdir -p /root/.secretd/.compute/\nRUN mkdir -p /opt/secret/.sgx_secrets/\nRUN mkdir -p /root/.secretd/.node/\nRUN mkdir -p /root/config/\n\n\n\n####### Node parameters\nARG MONIKER=default\nARG CHAINID=secret-testnet-1\nARG GENESISPATH=https://raw.githubusercontent.com/enigmampc/SecretNetwork/master/secret-testnet-genesis.json\nARG PERSISTENT_PEERS=201cff36d13c6352acfc4a373b60e83211cd3102@bootstrap.southuk.azure.com:26656\n\nENV GENESISPATH=\"${GENESISPATH}\"\nENV CHAINID=\"${CHAINID}\"\nENV MONIKER=\"${MONIKER}\"\nENV PERSISTENT_PEERS=\"${PERSISTENT_PEERS}\"\n\n#ENV LD_LIBRARY_PATH=/opt/sgxsdk/libsgx-enclave-common/:/opt/sgxsdk/lib64/\n\n# Run secretd by default, omit entrypoint to ease using container with secretcli\nENTRYPOINT [\"/bin/bash\", \"startup.sh\"]\n"
}