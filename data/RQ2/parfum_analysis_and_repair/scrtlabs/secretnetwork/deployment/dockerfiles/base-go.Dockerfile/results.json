{
  "startTime": 1674217582625,
  "endTime": 1674217583820,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 54
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM rust-base-image AS build-env-rust\n\nFROM enigmampc/rocksdb:v6.24.2\n\nENV GOROOT=/usr/local/go\nENV GOPATH=/go/\nENV PATH=$PATH:/usr/local/go/bin:$GOPATH/bin\n\nADD https://go.dev/dl/go1.17.7.linux-amd64.tar.gz go1.17.7.linux-amd64.tar.gz\nRUN tar -C /usr/local -xzf go1.17.7.linux-amd64.tar.gz && rm go1.17.7.linux-amd64.tar.gz\nRUN go install github.com/jteeuwen/go-bindata/go-bindata@latest && go-bindata -version\n\n# Set working directory for the build\nWORKDIR /go/src/github.com/enigmampc/SecretNetwork\n\nARG BUILD_VERSION=\"v0.0.0\"\nARG SGX_MODE=SW\nARG FEATURES\nARG FEATURES_U\nARG DB_BACKEND=goleveldb\nARG CGO_LDFLAGS\n\nENV VERSION=${BUILD_VERSION}\nENV SGX_MODE=${SGX_MODE}\nENV FEATURES=${FEATURES}\nENV FEATURES_U=${FEATURES_U}\nENV MITIGATION_CVE_2020_0551=LOAD\n\n# Add source files\nCOPY go-cosmwasm go-cosmwasm\n# This is due to some esoteric docker bug with the underlying filesystem, so until I figure out a better way, this should be a workaround\nRUN true\nCOPY x x\nRUN true\nCOPY types types\nRUN true\nCOPY app app\nCOPY go.mod .\nCOPY go.sum .\nCOPY cmd cmd\nCOPY Makefile .\nRUN true\nCOPY client client\n\nRUN ln -s /usr/lib/x86_64-linux-gnu/liblz4.so /usr/local/lib/liblz4.so  && ln -s /usr/lib/x86_64-linux-gnu/libzstd.so /usr/local/lib/libzstd.so\n\nRUN mkdir -p /go/src/github.com/enigmampc/SecretNetwork/go-cosmwasm/target/release/\n\nCOPY --from=build-env-rust /go/src/github.com/enigmampc/SecretNetwork/go-cosmwasm/target/release/libgo_cosmwasm.so /go/src/github.com/enigmampc/SecretNetwork/go-cosmwasm/target/release/libgo_cosmwasm.so\nCOPY --from=build-env-rust /go/src/github.com/enigmampc/SecretNetwork/go-cosmwasm/librust_cosmwasm_enclave.signed.so /go/src/github.com/enigmampc/SecretNetwork/go-cosmwasm/librust_cosmwasm_enclave.signed.so\nCOPY --from=build-env-rust /go/src/github.com/enigmampc/SecretNetwork/go-cosmwasm/librust_cosmwasm_query_enclave.signed.so /go/src/github.com/enigmampc/SecretNetwork/go-cosmwasm/librust_cosmwasm_query_enclave.signed.so\n\nCOPY api_key.txt /go/src/github.com/enigmampc/SecretNetwork/ias_keys/develop/\nCOPY spid.txt /go/src/github.com/enigmampc/SecretNetwork/ias_keys/develop/\nCOPY api_key.txt /go/src/github.com/enigmampc/SecretNetwork/ias_keys/production/\nCOPY spid.txt /go/src/github.com/enigmampc/SecretNetwork/ias_keys/production/\nCOPY api_key.txt /go/src/github.com/enigmampc/SecretNetwork/ias_keys/sw_dummy/\nCOPY spid.txt /go/src/github.com/enigmampc/SecretNetwork/ias_keys/sw_dummy/\n\nRUN . /opt/sgxsdk/environment && env && CGO_LDFLAGS=${CGO_LDFLAGS} DB_BACKEND=${DB_BACKEND} MITIGATION_CVE_2020_0551=LOAD VERSION=${VERSION} FEATURES=${FEATURES} SGX_MODE=${SGX_MODE} make build_local_no_rust\nRUN . /opt/sgxsdk/environment && env && MITIGATION_CVE_2020_0551=LOAD VERSION=${VERSION} FEATURES=${FEATURES} SGX_MODE=${SGX_MODE} make build_cli\n\n# workaround because paths seem kind of messed up\n# RUN cp /opt/sgxsdk/lib64/libsgx_urts_sim.so /usr/lib/libsgx_urts_sim.so\n# RUN cp /opt/sgxsdk/lib64/libsgx_uae_service_sim.so /usr/lib/libsgx_uae_service_sim.so\n# RUN cp /go/src/github.com/enigmampc/SecretNetwork/go-cosmwasm/target/release/libgo_cosmwasm.so /usr/lib/libgo_cosmwasm.so\n# RUN cp /go/src/github.com/enigmampc/SecretNetwork/go-cosmwasm/librust_cosmwasm_enclave.signed.so /usr/lib/librust_cosmwasm_enclave.signed.so\n# RUN cp /go/src/github.com/enigmampc/SecretNetwork/cosmwasm/packages/wasmi-runtime/librust_cosmwasm_enclave.signed.so x/compute/internal/keeper\n# RUN mkdir -p /go/src/github.com/enigmampc/SecretNetwork/x/compute/internal/keeper/.sgx_secrets\n\n#COPY deployment/ci/go-tests.sh .\n#\n#RUN chmod +x go-tests.sh\n\n# ENTRYPOINT [\"/bin/bash\", \"go-tests.sh\"]\nENTRYPOINT [\"/bin/bash\"]"
}