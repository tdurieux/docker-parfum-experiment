{
  "startTime": 1674246560374,
  "endTime": 1674246561657,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 77
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 60
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 77
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 60
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 77
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 60
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 101
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 84
      }
    }
  ],
  "repairedDockerfile": "# FROM rust:1.39\n# We need nightly currently for compiling with singlepass\nFROM rustlang/rust:nightly\n\n# Install build dependencies\nRUN apt-get update\nRUN apt install --no-install-recommends -y clang gcc g++ zlib1g-dev libmpc-dev libmpfr-dev libgmp-dev && rm -rf /var/lib/apt/lists/*;\nRUN apt install --no-install-recommends -y build-essential cmake && rm -rf /var/lib/apt/lists/*;\n\n# add some llvm configs for later - how to cross-compile this in wasmer-llvm-backend???\nRUN echo deb http://deb.debian.org/debian buster-backports main >> /etc/apt/sources.list\nRUN apt-get update\nRUN apt install --no-install-recommends -y libllvm8 llvm-8 llvm-8-dev llvm-8-runtime && rm -rf /var/lib/apt/lists/*;\nENV LLVM_SYS_80_PREFIX=/usr/lib/llvm-8\n\n## ADD MACOS SUPPORT\n\nWORKDIR /opt\n\n# Pin to proper nightly and add macOS Rust target\nRUN rustup default nightly-2020-06-08\nRUN rustup target add x86_64-apple-darwin\n\n# Build osxcross\nRUN git clone https://github.com/tpoechtrager/osxcross\nRUN cd osxcross && \\\n\twget -nc https://s3.dockerproject.org/darwin/v2/MacOSX10.10.sdk.tar.xz && \\\n    mv MacOSX10.10.sdk.tar.xz tarballs/ && \\\n    UNATTENDED=yes OSX_VERSION_MIN=10.7 ./build.sh\nRUN chmod +rx /opt/osxcross\nRUN chmod +rx /opt/osxcross/target\nRUN chmod -R +rx /opt/osxcross/target/bin\n\n## TODO: add support for windows cross-compile\n\n# PRE-FETCH MANY DEPS\nWORKDIR /scratch\nCOPY Cargo.toml /scratch/\nCOPY Cargo.lock /scratch/\nCOPY src /scratch/src\nRUN cargo fetch\n# allow non-root user to download more deps later\nRUN chmod -R 777 /usr/local/cargo\n\n## COPY BUILD SCRIPTS\n\nWORKDIR /code\nRUN rm -rf /scratch\n\nCOPY build/*.sh /opt/\nRUN chmod +x /opt/*.sh\n\nRUN mkdir /.cargo\nRUN chmod +rx /.cargo\nCOPY build/cargo-config /.cargo/config\n\nCMD [\"/opt/build_osx.sh\"]\n"
}