{
  "startTime": 1674254057132,
  "endTime": 1674254057783,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 134
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 31,
        "lineEnd": 50,
        "columnStart": 7,
        "columnEnd": 19
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "##\n#  This dockerfile is used for local development and adapter testing only.\n#  See `/docker` for a generic and production-ready docker file\n##\n\nFROM ubuntu:22.04\n\nENV DEBIAN_FRONTEND noninteractive\n\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n    software-properties-common \\\n    && add-apt-repository ppa:git-core/ppa -y \\\n    && apt-get dist-upgrade -y \\\n    && apt-get install -y --no-install-recommends \\\n    netcat \\\n    postgresql \\\n    curl \\\n    git \\\n    ssh \\\n    software-properties-common \\\n    make \\\n    build-essential \\\n    ca-certificates \\\n    libpq-dev \\\n    libsasl2-dev \\\n    libsasl2-2 \\\n    libsasl2-modules-gssapi-mit \\\n    libyaml-dev \\\n    unixodbc-dev \\\n    && add-apt-repository ppa:deadsnakes/ppa \\\n    && apt-get install --no-install-recommends -y \\\n    python \\\n    python-dev \\\n    python3-pip \\\n    python3.6 \\\n    python3.6-dev \\\n    python3-pip \\\n    python3.6-venv \\\n    python3.7 \\\n    python3.7-dev \\\n    python3.7-venv \\\n    python3.8 \\\n    python3.8-dev \\\n    python3.8-venv \\\n    python3.9 \\\n    python3.9-dev \\\n    python3.9-venv \\\n    python3.10 \\\n    python3.10-dev \\\n    python3.10-venv \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\nARG DOCKERIZE_VERSION=v0.6.1\nRUN curl -f -LO https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz \\\n    && tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz \\\n    && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz\n\nRUN pip3 install --no-cache-dir -U tox wheel six setuptools\n\n# These args are passed in via docker-compose, which reads then from the .env file.\n# On Linux, run `make .env` to create the .env file for the current user.\n# On MacOS and Windows, these can stay unset.\nARG USER_ID\nARG GROUP_ID\n\nRUN if [ ${USER_ID:-0} -ne 0 ] && [ ${GROUP_ID:-0} -ne 0 ]; then \\\n    groupadd -g ${GROUP_ID} dbt_test_user && \\\n    useradd -m -l -u ${USER_ID} -g ${GROUP_ID} dbt_test_user; \\\n    else \\\n    useradd -mU -l dbt_test_user; \\\n    fi\nRUN mkdir /usr/app && chown dbt_test_user /usr/app\nRUN mkdir /home/tox && chown dbt_test_user /home/tox\n\nWORKDIR /usr/app\nVOLUME /usr/app\n\nUSER dbt_test_user\n\nENV PYTHONIOENCODING=utf-8\nENV LANG C.UTF-8\n"
}