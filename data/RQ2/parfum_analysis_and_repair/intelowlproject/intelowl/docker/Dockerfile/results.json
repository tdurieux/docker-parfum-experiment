{
  "startTime": 1674247908544,
  "endTime": 1674247909525,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 30
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Stage 1: Frontend\n# Remove this part if it is conflicting with the frontend you are currently testing\nFROM node:lts-alpine3.14 as frontend-build\n\nWORKDIR /\n# copy react source code\nCOPY frontend/ .\n# copy version file as an env file\nCOPY docker/.version .env.local\n# install and build\nRUN npm install npm@latest -g && npm cache clean --force;\nRUN npm install && npm cache clean --force;\n\nRUN PUBLIC_URL=/static/reactapp/ npm run build\n\n# Stage 2: Backend\nFROM python:3.9.9-buster\n\nCOPY --from=frontend-build /build /var/www/reactapp\n\nENV PYTHONUNBUFFERED 1\nENV DJANGO_SETTINGS_MODULE intel_owl.settings\nENV PYTHONPATH /opt/deploy/intel_owl\nENV LOG_PATH /var/log/intel_owl\nENV ELASTICSEARCH_DSL_VERSION 7.2.0\nENV watch_logs_cmd \"watch -n1 tail -n10 /var/log/intel_owl/django/api_app.log\"\n\nARG REPO_DOWNLOADER_ENABLED=true\nARG WATCHMAN=false\n\nRUN mkdir -p ${LOG_PATH} \\\n    ${LOG_PATH}/django \\\n    ${LOG_PATH}/uwsgi \\\n    /opt/deploy/files_required /opt/deploy/yara /opt/deploy/configuration\n\n# install required packages. some notes about:\n# python3-psycopg2 is required to use PostgresSQL with Django\n# osslsigncode is required to run the signature verification analyzer\n# apache2-utils is required to execute htpasswd\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends apt-utils libsasl2-dev libssl-dev \\\n    vim libldap2-dev python-dev libfuzzy-dev net-tools python3-psycopg2 git osslsigncode apache2-utils \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/*\nRUN pip3 install --no-cache-dir --upgrade pip\n\nCOPY requirements/project-requirements.txt $PYTHONPATH/project-requirements.txt\nWORKDIR $PYTHONPATH\n\nRUN pip3 install --no-cache-dir --compile -r project-requirements.txt\n# install elasticsearch-dsl's appropriate version as specified by user\nRUN pip3 install --no-cache-dir django-elasticsearch-dsl==${ELASTICSEARCH_DSL_VERSION}\n\nCOPY requirements/certego-requirements.txt $PYTHONPATH/certego-requirements.txt\nRUN pip3 install --no-cache-dir --compile -r certego-requirements.txt\n\nCOPY . $PYTHONPATH\n\nRUN touch ${LOG_PATH}/django/api_app.log ${LOG_PATH}/django/api_app_errors.log \\\n    && touch ${LOG_PATH}/django/celery.log ${LOG_PATH}/django/celery_errors.log \\\n    && touch ${LOG_PATH}/django/django_auth_ldap.log \\\n    && chown -R www-data:www-data ${LOG_PATH} /opt/deploy/ \\\n    # this is cause stringstifer creates this directory during the build and cause celery to crash\n    && rm -rf /root/.local\n\nRUN docker/scripts/watchman_install.sh\n\n# download yara rules and quark engine rules\nRUN api_app/analyzers_manager/repo_downloader.sh\n\n# this is because botocore points to legacy endpoints\n# more info: https://stackoverflow.com/questions/41062055/celery-4-0-0-amazon-sqs-credential-should-be-scoped-to-a-valid-region-not\nRUN sed -i \"s/{region}.queue/sqs.{region}/g\" \"$(find / -name endpoints.json 2>/dev/null | head -n 1)\"\n\n# quarkengine calls\n# HOME_DIR = f\"{Path.home()}/.quark-engine/\"\n# Path(HOME_DIR).mkdir(parents=True, exist_ok=True)\n# so we have to set the home env variable to allow to reate its directory\nENV HOME ${PYTHONPATH}\n"
}