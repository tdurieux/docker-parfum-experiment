{
  "startTime": 1674218220965,
  "endTime": 1674218221707,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:12-slim\n\nENV PROJECT_PATH /opt/deploy\n\n# Install latest chrome dev package and fonts to support major charsets (Chinese, Japanese, Arabic, Hebrew, Thai and a few others)\n# Note: this installs the necessary libs to make the bundled version of Chromium that Puppeteer\n# installs, work.\nRUN apt-get update \\\n    && apt-get install -y wget gnupg ca-certificates \\\n      --no-install-recommends \\\n    && wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - \\\n    && sh -c 'echo \"deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main\" >> /etc/apt/sources.list.d/google.list' \\\n    && apt-get update \\\n    && apt-get install -y google-chrome-stable fonts-ipafont-gothic fonts-wqy-zenhei fonts-thai-tlwg fonts-kacst fonts-freefont-ttf libxss1 git \\\n      --no-install-recommends \\\n    && rm -rf /var/lib/apt/lists/*\n\n# If running Docker >= 1.13.0 use docker run's --init arg to reap zombie processes, otherwise\n# uncomment the following lines to have `dumb-init` as PID 1\n# ADD https://github.com/Yelp/dumb-init/releases/download/v1.2.2/dumb-init_1.2.2_x86_64 /usr/local/bin/dumb-init\n# RUN chmod +x /usr/local/bin/dumb-init\n# ENTRYPOINT [\"dumb-init\", \"--\"]\n\n# Uncomment to skip the chromium download when installing puppeteer. If you do,\n# you'll need to launch puppeteer with:\n#     browser.launch({executablePath: 'google-chrome-stable'})\nENV PUPPETEER_SKIP_CHROMIUM_DOWNLOAD true\nENV PUPPETEER_EXECUTABLE_PATH /usr/bin/google-chrome-stable\n\n# Add user so we don't need --no-sandbox.\nRUN groupadd -r pptruser && useradd -r -g pptruser -G audio,video pptruser \\\n    && mkdir -p /home/pptruser \\\n    && chown -R pptruser:pptruser /home/pptruser \\\n    && mkdir -p $PROJECT_PATH/rendertron \\\n    && chown -R pptruser:pptruser $PROJECT_PATH/rendertron\n\n# Run everything after as non-privileged user.\nUSER pptruser\n\nWORKDIR $PROJECT_PATH/rendertron\n\n# Setup Rendertron\nRUN git clone https://github.com/GoogleChrome/rendertron.git ./\nCOPY config.json ./\nRUN npm install && npm run build && npm cache clean --force;\n\nENV PORT 4003\nEXPOSE 4003\n\nCMD [ \"npm\", \"start\" ]\n"
}