{
  "startTime": 1674220910648,
  "endTime": 1674220911406,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 100
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 33,
        "columnEnd": 88
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 94,
        "columnEnd": 116
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 23,
        "columnEnd": 48
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 75
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 23,
        "columnEnd": 48
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nvidia/cudagl:11.0-devel-ubuntu20.04\nARG DEBIAN_FRONTEND=noninteractive\n\nARG PYTHON_VERSION=3.8\n\nARG branch\n\n# Install ubuntu libaries\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends build-essential cmake pkg-config \\\n        libfreetype6-dev git nano wget curl vim ca-certificates unzip libjpeg-dev \\\n        libpng-dev libosmesa6-dev software-properties-common xvfb gpg-agent && rm -rf /var/lib/apt/lists/*;\n\n# Install miniconda\nRUN curl -f -o ~/miniconda.sh -O  https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh && \\\n     chmod +x ~/miniconda.sh && \\\n     ~/miniconda.sh -b -p /opt/conda && \\\n     rm ~/miniconda.sh && \\\n     /opt/conda/bin/conda update -n base -c defaults conda && \\\n     /opt/conda/bin/conda install -y python=$PYTHON_VERSION setuptools patchelf && \\\n     /opt/conda/bin/conda clean -ya\nENV PATH /opt/conda/bin:$PATH\n\n\n# Env vars for the nvidia-container-runtime.\nENV PATH /usr/local/cuda/bin/:$PATH\nENV LD_LIBRARY_PATH /usr/local/cuda/lib:/usr/local/cuda/lib64\nENV NVIDIA_VISIBLE_DEVICES all\nENV NVIDIA_DRIVER_CAPABILITIES compute,utility\nLABEL com.nvidia.volumes.needed=\"nvidia_driver\"\n\n# Install weebots\nRUN wget -qO- https://cyberbotics.com/Cyberbotics.asc | apt-key add -\nRUN apt-add-repository 'deb https://cyberbotics.com/debian/ binary-amd64/' && \\\n    apt-get update && apt-get install --no-install-recommends -y webots && rm -rf /var/lib/apt/lists/*;\n\n# Save enviroment libraries\nENV WEBOTS_HOME /usr/local/webots\nENV LD_LIBRARY_PATH $WEBOTS_HOME/lib/controller:$LD_LIBRARY_PATH\n\n\nADD requirements.txt .\n# Install python dependencies\nRUN pip install --no-cache-dir -r requirements.txt\n\nRUN if [ $branch = \"dev\" ]; then \\\n pip install --no-cache-dir -i https://test.pypi.org/simple/ deepbots; else pip install --no-cache-dir deepbots; fi\n\nRUN pip install --no-cache-dir 'ray[tune]' 'ray[rllib]'\n\n# Fix the error of the custome enviroment on Ray\nADD preprocessors.py .\nRUN cp -r preprocessors.py opt/conda/lib/python3.8/site-packages/ray/rllib/models/\nRUN rm preprocessors.py\n\n\nWORKDIR /workspace\nRUN chmod -R a+w /workspace"
}