{
  "startTime": 1674252317887,
  "endTime": 1674252319911,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 10,
        "columnStart": 22,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 10,
        "columnStart": 22,
        "columnEnd": 30
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 44
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 68
      }
    }
  ],
  "repairedDockerfile": "FROM rust as kcov-base\n\nENV WORKSPACE /app\nWORKDIR ${WORKSPACE}\nCOPY \"./scripts/install_kcov.sh\" ./\nENV DEBIAN_FRONTEND=noninteractive\n\n# install dependencies\nRUN apt-get update && apt-get -y --no-install-recommends install wget binutils-dev libcurl4-openssl-dev \\\n\tlibssl-dev libelf-dev zlib1g-dev libdw-dev libiberty-dev \\\n\tbuild-essential python3 cmake && rm -rf /var/lib/apt/lists/*;\n\n# install kcov\nRUN ./install_kcov.sh\n\nFROM rust as planner\nENV WORKSPACE /app\nWORKDIR ${WORKSPACE}\nRUN cargo install cargo-chef\nCOPY . .\nRUN cargo chef prepare --recipe-path recipe.json\n\nFROM rust as cacher\nENV WORKSPACE /app\nWORKDIR ${WORKSPACE}\nRUN cargo install cargo-chef\nCOPY --from=planner ${WORKSPACE}/recipe.json recipe.json\nRUN cargo chef cook --recipe-path recipe.json\n\nFROM kcov-base as tester\nENV WORKSPACE /app\nWORKDIR ${WORKSPACE}\nCOPY . .\n# Copy over the cached dependencies\nCOPY --from=cacher /app/target target\nCOPY --from=cacher /usr/local/cargo /usr/local/cargo\n\nRUN apt-get install --no-install-recommends -y linux-perf linux-base && rm -rf /var/lib/apt/lists/*;\n\nRUN cargo test --no-run\n\nRUN cp -r ./dlc-sled-storage-provider/test_files ./target/debug/deps/\n\nCMD [ \"cargo test\" ]\n"
}