{
  "startTime": 1674254240271,
  "endTime": 1674254241205,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 5,
        "columnEnd": 47
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 6,
        "columnEnd": 67
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 100
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright (c) 2001-2022 Convertigo SA.\n#\n# This program is free software; you can redistribute it and/or\n# modify it under the terms of the GNU Affero General Public License\n# as published by the Free Software Foundation; either version 3\n# of the License, or (at your option) any later version.\n\n# This program is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n# GNU General Public License for more details.\n\n# You should have received a copy of the GNU General Public License\n# along with this program; if not, see<http://www.gnu.org/licenses/>.\n\nFROM tomcat:9-jdk17-temurin-focal\n\n\nMAINTAINER Nicolas Albert nicolasa@convertigo.com\n\n## force SWT to use GTK2 instead of GTK3 (no Xulrunner support)\nENV SWT_GTK3 0\n\nENV CATALINA_HOME /usr/local/tomcat\nRUN mkdir -p \"$CATALINA_HOME\"\nWORKDIR $CATALINA_HOME\n\nRUN apt-get update -y \\\n  && apt-get install -y --no-install-recommends \\\n    ca-certificates \\\n    curl \\\n    dirmngr \\\n    gnupg \\\n    sudo \\\n    unzip \\\n  && rm -rf /var/lib/apt/lists/*\n\nRUN ( curl -f -sL https://aka.ms/InstallAzureCLIDeb | bash) \\\n  && ( curl -f -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -) \\\n  && (echo \"deb https://apt.kubernetes.io/ kubernetes-xenial main\" | tee -a /etc/apt/sources.list.d/kubernetes.list) \\\n  && apt-get update \\\n  && apt-get install -y --no-install-recommends kubectl \\\n       nano less strongswan libstrongswan-standard-plugins \\\n       iptables net-tools iputils-ping \\\n  && rm -rf /var/lib/apt/lists/*\n\nRUN curl -f -sL https://github.com/jpillora/chisel/releases/download/v1.7.6/chisel_1.7.6_linux_amd64.gz | gunzip > /usr/local/bin/chisel \\\n  && echo \"58037ef897ec155a03ea193df4ec618a  /usr/local/bin/chisel\" | md5sum -c \\\n  && chmod a+x /usr/local/bin/chisel\n\n## grab gosu for easy step-down from root and tini for signal handling\n\nENV GOSU_VERSION 1.14\nENV GOSU_GPG_KEYS B42F6819007F00F88E364FD4036A9C25BF357DD4\nENV TINI_VERSION 0.19.0\nENV TINI_GPG_KEYS 6380DC428747F6C393FEACA59A84159D7001A4E5\n\nRUN export GNUPGHOME=\"$(mktemp -d)\" \\\n  && ( gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \"$GOSU_GPG_KEYS\" \\\n  || gpg --batch --keyserver pgp.mit.edu --recv-keys \"$GOSU_GPG_KEYS\" \\\n  || gpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$GOSU_GPG_KEYS\" \\\n  || gpg --batch --keyserver keyserver.pgp.com --recv-keys \"$GOSU_GPG_KEYS\" ) \\\n  && curl -o /usr/local/bin/gosu -fSL \"https://github.com/tianon/gosu/releases/download/${GOSU_VERSION}/gosu-$(dpkg --print-architecture | awk -F- '{ print $NF }')\" \\\n  && curl -o /usr/local/bin/gosu.asc -fSL \"https://github.com/tianon/gosu/releases/download/${GOSU_VERSION}/gosu-$(dpkg --print-architecture | awk -F- '{ print $NF }').asc\" \\\n  && gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \\\n  && rm /usr/local/bin/gosu.asc \\\n  && chmod +x /usr/local/bin/gosu \\\n  && ( gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \"$TINI_GPG_KEYS\" \\\n  || gpg --batch --keyserver pgp.mit.edu --recv-keys \"$TINI_GPG_KEYS\" \\\n  || gpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$TINI_GPG_KEYS\" \\\n  || gpg --batch --keyserver keyserver.pgp.com --recv-keys \"$TINI_GPG_KEYS\" ) \\\n  && curl -o /usr/local/bin/tini -fSL \"https://github.com/krallin/tini/releases/download/v${TINI_VERSION}/tini-$(dpkg --print-architecture | awk -F- '{ print $NF }')\" \\\n  && curl -o /usr/local/bin/tini.asc -fSL \"https://github.com/krallin/tini/releases/download/v${TINI_VERSION}/tini-$(dpkg --print-architecture | awk -F- '{ print $NF }').asc\" \\\n  && gpg --batch --verify /usr/local/bin/tini.asc /usr/local/bin/tini \\\n  && rm /usr/local/bin/tini.asc \\\n  && chmod +x /usr/local/bin/tini \\\n  && rm -rf /tmp/*\n\n\n## create a 'convertigo' user and fix some rights\n\nRUN useradd -s /bin/false -m convertigo \\\n    && mkdir -p /workspace/lib /workspace/classes \\\n    && chown -R convertigo:convertigo /workspace \\\n    && echo \"convertigo ALL=(ALL) NOPASSWD: ALL\" > /etc/sudoers.d/convertigo \\\n    && chmod 0440 /etc/sudoers.d/convertigo\n\n## disable unused AJP, APR and Jasper features\n## change HTTP port the historic Convertigo port 28080\n\nRUN sed -i.bak \\\n        -e '/protocol=\"AJP/d' \\\n        -e '/AprLifecycleListener/d' \\\n        -e '/JasperListener/d' \\\n        -e 's/port=\"8080\"/port=\"28080\" maxThreads=\"64000\" relaxedQueryChars=\"{}[]|\"/' \\\n        -e 's,</Host>,  <Valve className=\"org.apache.catalina.valves.RemoteIpValve\" />\\n      </Host>,' \\\n        conf/server.xml \\\n    && sed -i.bak \\\n        -e 's,<Context>,<Context sessionCookiePath=\"/\">,' \\\n        -e 's,</Context>,<Manager pathname=\"\" /><CookieProcessor sameSiteCookies=\"unset\" /></Context>,' \\\n        conf/context.xml \\\n    && rm -rf webapps/* bin/*.bat conf/server.xml.bak /tmp/* \\\n    && mkdir webapps/ROOT \\\n    && chown -R convertigo:convertigo conf temp work logs \\\n    && chmod -w conf/*\n\nENV CONVERTIGO_VERSION 8.1.0\n\nENV CONVERTIGO_WAR_URL https://github.com/convertigo/convertigo/releases/download/$CONVERTIGO_VERSION/convertigo-$CONVERTIGO_VERSION.war\n\nENV CONVERTIGO_GPG_KEYS 6A7779BB78FE368DF74B708FD4DA8FBEB64BF75F\n\n\n## download and extract the convertigo webapps\n## and remove unnecessary components for the mbaas version\n\nRUN export GNUPGHOME=\"$(mktemp -d)\" \\\n    && ( gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \"$CONVERTIGO_GPG_KEYS\" \\\n    || gpg --batch --keyserver pgp.mit.edu --recv-keys \"$CONVERTIGO_GPG_KEYS\" \\\n    || gpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$CONVERTIGO_GPG_KEYS\" \\\n    || gpg --batch --keyserver keyserver.pgp.com --recv-keys \"$CONVERTIGO_GPG_KEYS\" ) \\\n    && curl -fSL -o /tmp/convertigo.war $CONVERTIGO_WAR_URL \\\n    && curl -fSL -o /tmp/convertigo.war.asc $CONVERTIGO_WAR_URL.asc \\\n    && gpg --batch --verify /tmp/convertigo.war.asc /tmp/convertigo.war \\\n    && mkdir -p webapps/ROOT webapps/convertigo \\\n    && (cd webapps/convertigo \\\n        && unzip -q /tmp/convertigo.war \\\n        && (chmod -f a+x WEB-INF/xvnc/* || true) \\\n        && (test \"$(dpkg --print-architecture)\" != \"i386\" && rm -rf WEB-INF/xulrunner WEB-INF/xvnc WEB-INF/lib/swt_* || true) \\\n        && rm -rf /tmp/*)\n\n## copy the ROOT index that redirect to the 'convertigo' webapp\n\nCOPY ./root-index.html webapps/ROOT/index.html\nCOPY ./docker-entrypoint.sh /\n\n\nWORKDIR /workspace\nVOLUME [\"/workspace\"]\nEXPOSE 28080\n\n\nENTRYPOINT [\"tini\", \"--\", \"/docker-entrypoint.sh\"]\nCMD [\"convertigo\"]\n"
}