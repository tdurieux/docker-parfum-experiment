{
  "startTime": 1674250277798,
  "endTime": 1674250278531,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 76
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# Builder Image\n#\nFROM gradle:6.5-jdk11 AS builder\n\n# Prep build environment\nENV GRADLE_USER_HOME=cache\nCOPY . /tmp/workdir\nWORKDIR /tmp/workdir\n\n# Build kayenta\n# Doesn't run build because the integration tests try to spin up a Docker\n# container to talk to a Kayenta instance, which requires some Docker shenanigans.\nRUN gradle assemble\n\n# Unpack so release image can copy folder and be smaller\nRUN tar -xf /tmp/workdir/kayenta-web/build/distributions/kayenta.tar -C /opt && rm /tmp/workdir/kayenta-web/build/distributions/kayenta.tar\n\n#\n# Release Image\n#\nFROM alpine:3.11\n\nLABEL maintainer=\"delivery-engineering@netflix.com\"\n\nRUN apk --no-cache add --update openjdk11-jre\n\n# Set where to look for config from\nENV KAYENTA_OPTS=-Dspring.config.location=file:/opt/kayenta/config/kayenta.yml\n\nRUN mkdir -p /opt/spinnaker/plugins\n\n# Copy from builder image\nCOPY --from=builder /opt/kayenta /opt/kayenta\n\nCMD [\"/opt/kayenta/bin/kayenta\"]\n"
}