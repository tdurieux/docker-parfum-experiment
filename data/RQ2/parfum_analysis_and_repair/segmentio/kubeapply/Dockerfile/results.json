{
  "startTime": 1674221162267,
  "endTime": 1674221162991,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 10,
        "columnStart": 22,
        "columnEnd": 8
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 26,
        "lineEnd": 30,
        "columnStart": 22,
        "columnEnd": 15
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 10,
        "columnStart": 22,
        "columnEnd": 8
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 26,
        "lineEnd": 30,
        "columnStart": 22,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Fetch or build all required binaries\nFROM golang:1.18 as builder\n\nARG VERSION_REF\nRUN test -n \"${VERSION_REF}\"\n\nENV SRC github.com/segmentio/kubeapply\n\nRUN apt-get update && apt-get install --no-install-recommends --yes \\\n    curl \\\n    wget && rm -rf /var/lib/apt/lists/*;\n\nCOPY . /go/src/${SRC}\nRUN cd /usr/local/bin && /go/src/${SRC}/scripts/pull-deps.sh\n\nWORKDIR /go/src/${SRC}\n\nENV CGO_ENABLED=1\nENV GO111MODULE=on\n\nRUN make kubeapply VERSION_REF=${VERSION_REF} && \\\n    cp build/kubeapply /usr/local/bin\n\n# Copy into final image\nFROM ubuntu:20.04\n\nRUN apt-get update && apt-get install --no-install-recommends --yes \\\n    curl \\\n    git \\\n    python3 \\\n    python3-pip && rm -rf /var/lib/apt/lists/*;\n\nRUN pip3 install --no-cache-dir awscli\n\nCOPY --from=builder \\\n    /usr/local/bin/helm \\\n    /usr/local/bin/kubectl \\\n    /usr/local/bin/kubeapply \\\n    /usr/local/bin/\n"
}