{
  "startTime": 1674249324166,
  "endTime": 1674249325264,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 93
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 57
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 5,
        "columnStart": 22,
        "columnEnd": 74
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 39,
        "columnEnd": 78
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 5,
        "columnStart": 22,
        "columnEnd": 74
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 39,
        "columnEnd": 78
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:18.04\n\n# Requirements for python installation, resource downloading tools, etc.\nRUN apt-get update && apt-get install --no-install-recommends -y git curl wget zlib1g-dev libssl-dev \\\n                                         build-essential libsqlite3-dev \\\n                                         libicu-dev locales libbz2-dev zip && rm -rf /var/lib/apt/lists/*;\n\n# Python 3.6\nRUN curl -f -L https://raw.githubusercontent.com/yyuu/pyenv-installer/master/bin/pyenv-installer | bash\nENV PYENV_ROOT /root/.pyenv\nENV PATH /root/.pyenv/shims:/root/.pyenv/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\nRUN pyenv install 3.6.2\nRUN pyenv global 3.6.2\n\n# Locales.\nRUN sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen && \\\n        dpkg-reconfigure --frontend=noninteractive locales\n\n# Update pip.\nRUN pip install --no-cache-dir --upgrade pip\n\n# Inistall ARElight project.\nCOPY arelight /arelight\nRUN ls -la\nRUN pip install --no-cache-dir /arelight/. -r /arelight/dependencies.txt\n\n# Download DeepPavlov resources in advance.\nCOPY deeppavlov_data.sh /deeppavlov_data.sh\nRUN chmod +x deeppavlov_data.sh\nRUN /deeppavlov_data.sh\n\n# Download required resources.\nRUN python /arelight/download.py\n\nEXPOSE 80\n\n# Setup apache configs.\nRUN apt-get clean && apt-get update && apt-get install --no-install-recommends -y apache2 python unzip && rm -rf /var/lib/apt/lists/*;\nRUN a2enmod cgi\nRUN echo export PATH=/root/.pyenv/shims:/root/.pyenv/bin:$PATH >> /etc/apache2/envvars\n\nCOPY apache_configs/* /etc/apache2/sites-enabled/\n\n# Copy apache-based arelight demo.\nCOPY demo /var/www/demo\nRUN chmod +x /var/www/demo/wui_bert.py\nRUN chmod +x /var/www/demo/wui_nn.py\n\n# Mystem3 fix\nRUN git clone https://github.com/nlpub/pymystem3.git\nRUN cp /pymystem3/pymystem3/mystem.py/ /root/.pyenv/versions/3.6.2/lib/python3.6/site-packages/pymystem3/\n\n# Copy BRAT toolkit.\nCOPY brat /var/www/brat\n\nRUN chmod 777 -R /root/.pyenv && chmod 777 /root\n\n# Setup entrypoint\nCOPY entrypoint.sh /entrypoint.sh\n\n# Modify a home folder to the demo.\nRUN usermod -d /var/www/demo www-data\n# Granting www-data permissions in demo.\nRUN chown -R www-data:www-data /var/www/demo\n\nRUN chmod +x entrypoint.sh\nENTRYPOINT [\"/entrypoint.sh\"]\nCMD [\"apache2ctl\", \"-D\", \"FOREGROUND\"]\n"
}