{
  "startTime": 1674251733625,
  "endTime": 1674251734450,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM --platform=${TARGETPLATFORM:-linux/amd64} node:16-alpine3.15\n\n# Print build information\nARG TARGETPLATFORM\nARG BUILDPLATFORM\nRUN printf \"I am running on ${BUILDPLATFORM:-linux/amd64}, building for ${TARGETPLATFORM:-linux/amd64}\\n$(uname -a)\\n\"\n\n# Install the web browser (package firefox-esr is available too)\nRUN apk update && \\\r\n    apk add --no-cache firefox dumb-init && \\\r\n    rm -Rf /var/cache\n\n# Copy FlareSolverr code\nUSER node\nRUN mkdir -p /home/node/flaresolverr\nWORKDIR /home/node/flaresolverr\nCOPY --chown=node:node package.json package-lock.json tsconfig.json ./\nCOPY --chown=node:node src ./src/\n\n# Install package. Skip installing the browser, we will use the installed package.\nENV PUPPETEER_PRODUCT=firefox \\\r\n    PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true \\\r\n    PUPPETEER_EXECUTABLE_PATH=/usr/bin/firefox\nRUN npm install && \\\r\n    npm run build && \\\r\n    npm prune --production && \\\n    rm -rf /home/node/.npm && npm cache clean --force;\n\nEXPOSE 8191\nENTRYPOINT [\"/usr/bin/dumb-init\", \"--\"]\nCMD [\"node\", \"./dist/server.js\"]\n\n# docker build -t flaresolverr:custom .\n# docker run -p 8191:8191 -e LOG_LEVEL=debug flaresolverr:custom\n"
}