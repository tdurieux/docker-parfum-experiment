{
  "startTime": 1674251781160,
  "endTime": 1674251784547,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 7,
        "columnEnd": 156
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 101
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 17
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM azul/zulu-openjdk-alpine:11 AS builder\n\nRUN apk add --repository http://dl-cdn.alpinelinux.org/alpine/edge/main/ --no-cache \\\n    nodejs \\\n    npm \\\n    && mkdir workspace \\\n    && chown 1001 workspace \\\n    && chmod \"g+rwX\" workspace \\\n    && chown 1001:root workspace\n\nWORKDIR /workspace\n\nCOPY pom.xml .\nCOPY mvnw .\nCOPY .mvn .mvn\n\nRUN ./mvnw dependency:copy-dependencies\n\nCOPY src src\n\nRUN ./mvnw package\n\nFROM azul/zulu-openjdk-alpine:11\n\nENV DEPLOYMENTS=/deployments\nENV JAVA_OPTIONS=\"-Dquarkus.http.host=0.0.0.0 -Djava.util.logging.manager=org.jboss.logmanager.LogManager\"\nENV NPM_CONFIG_PREFIX=/home/node/.npm-global\nENV PATH=$PATH:/home/node/.npm-global/bin\nENV PATH=$PATH:/home/node/.npm-global/lib\nENV NODE_ENV=production\n\nARG RUN_JAVA_VERSION=1.3.5\n\nRUN addgroup -g 1000 node \\\n    && adduser -u 1000 -G node -s /bin/sh -D node \\\n    && apk add --no-cache \\\n    curl \\\n    nodejs \\\n    npm \\\n    && mkdir /deployments \\\n    && chown node $DEPLOYMENTS \\\n    && chmod \"g+rwX\" $DEPLOYMENTS \\\n    && chown node:root $DEPLOYMENTS \\\n    && curl -f -sSL https://repo1.maven.org/maven2/io/fabric8/run-java-sh/${RUN_JAVA_VERSION}/run-java-sh-${RUN_JAVA_VERSION}-sh.sh -o $DEPLOYMENTS/run-java.sh \\\n    && chown node $DEPLOYMENTS/run-java.sh \\\n    && chmod 540 $DEPLOYMENTS/run-java.sh\n\nUSER node\n\nWORKDIR /home/node/\nRUN curl -f -sSL https://raw.githubusercontent.com/liferay/liferay-blade-cli/master/cli/installers/local | sh\nENV PATH \"$PATH:/home/node/jpm/bin\"\nRUN blade update && \\\n    blade version\n\nRUN npm i -g yarn \\\n    && yarn global add yo && npm cache clean --force;\n\nRUN yarn global add generator-old-liferay-theme@npm:generator-liferay-theme@^8.0.0 \\\n    && yarn global add generator-liferay-theme \\\n    && yarn global add generator-liferay-js\n\nCOPY --from=builder \"/workspace/target/lib/*\" \"$DEPLOYMENTS/lib/\"\nCOPY --from=builder \"/workspace/target/*-runner.jar\" \"$DEPLOYMENTS/app.jar\"\n\nEXPOSE 8080\n\nENTRYPOINT [ \"/deployments/run-java.sh\" ]\n"
}