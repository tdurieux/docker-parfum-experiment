{
  "startTime": 1674254324344,
  "endTime": 1674254324952,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 8,
        "columnStart": 22,
        "columnEnd": 65
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 8,
        "columnStart": 22,
        "columnEnd": 65
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# build stage\nFROM rust as builder\n# create a project folder\nWORKDIR /dhx/node\n\nCOPY . .\n\nRUN apt-get update && apt-get install --no-install-recommends -y build-essential wget cmake pkg-config libssl-dev \\\n    openssl git gcc clang libclang-dev curl vim unzip screen bash \\\n    && curl https://getsubstrate.io -sSf | bash -s -- --fast \\\n    && wget -O - https://sh.rustup.rs | sh -s -- -y \\\n    && PATH=$PATH:/root/.cargo/bin \\\n    && rustup update stable \\\n    && rustup update nightly \\\n    && rustup toolchain install nightly-2021-03-10 \\\n    && rustup target add wasm32-unknown-unknown --toolchain nightly-2021-03-10 \\\n    && rustup default nightly-2021-03-10 \\\n    && rustup override set nightly-2021-03-10 \\\n    && cargo version \\\n    && rustc --version \\\n    && cargo build --release && rm -rf /var/lib/apt/lists/*;\n\n# runtime stage\nFROM rust as runtime\n# set path for docker scripts in case used, to override below default entrypoint\nWORKDIR /dhx/node/scripts\n\nCOPY --from=builder /dhx/node/target/release/datahighway /usr/local/bin\n\nENTRYPOINT [\"/usr/local/bin/datahighway\"]\n"
}