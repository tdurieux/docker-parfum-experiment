{
  "startTime": 1674248684766,
  "endTime": 1674248685673,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 66
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 68
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 75
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 69
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 27,
        "columnEnd": 71
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04\nMAINTAINER Martin Durant <martin.durant@utoronto.ca>\n\nRUN apt-get update -yqq && apt-get install --no-install-recommends -yqq bzip2 git wget graphviz && rm -rf /var/lib/apt/lists/*\n\n# Configure environment\nENV LC_ALL=C.UTF-8\nENV LANG=C.UTF-8\n\nRUN mkdir -p /work/bin\n\n# Install Python 3 from miniconda\nADD https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh miniconda.sh\nRUN bash miniconda.sh -b -p /work/miniconda && rm miniconda.sh\n\n# keep conda in user dir, so can do conda install in notebook\nENV PATH=\"/work/bin:/work/miniconda/bin:$PATH\"\n\n# Install pydata stack\nRUN conda config --set always_yes yes --set changeps1 no --set auto_update_conda no\nRUN conda install notebook psutil numpy pandas scikit-learn statsmodels pip numba \\\n        scikit-image datashader holoviews nomkl matplotlib lz4 tornado\nRUN conda install -c conda-forge fastparquet s3fs zict python-blosc cytoolz dask distributed dask-searchcv gcsfs \\\n && conda clean -tipsy \\\n && pip install --no-cache-dir git+https://github.com/dask/dask-glm.git --no-deps \\\n && pip install --no-cache-dir graphviz\n\nRUN conda install -c conda-forge nodejs\nRUN conda install -c conda-forge jupyterlab jupyter_dashboards ipywidgets \\\n && jupyter labextension install @jupyter-widgets/jupyterlab-manager \\\n && jupyter nbextension enable jupyter_dashboards --py --sys-prefix \\\n && jupyter nbextension enable widgetsnbextension --py --sys-prefix \\\n && conda clean -tipsy\n\nRUN conda install -c bokeh bokeh \\\n && jupyter labextension install jupyterlab_bokeh \\\n && conda clean -tipsy \\\n && npm cache clean --force\n\n# Optional: Install the master branch of distributed and dask\nRUN pip install --no-cache-dir git+https://github.com/dask/dask --upgrade --no-deps \\\n && pip install --no-cache-dir git+https://github.com/dask/distributed --upgrade --no-deps \\\n && pip install --no-cache-dir git+https://github.com/dask/gcsfs --upgrade \\\n && pip install --no-cache-dir git+https://github.com/pydata/xarray --upgrade \\\n && pip install --no-cache-dir git+https://github.com/zarr-developers/zarr --upgrade\n\n# Install Tini that necessary to properly run the notebook service in docker\n# http://jupyter-notebook.readthedocs.org/en/latest/public_server.html#docker-cmd\nENV TINI_VERSION v0.9.0\nADD https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini /usr/bin/tini\n# for further interaction with kubernetes\nADD https://storage.googleapis.com/kubernetes-release/release/v1.5.4/bin/linux/amd64/kubectl /usr/sbin/kubectl\nRUN chmod +x /usr/bin/tini && chmod 0500 /usr/sbin/kubectl\n\n# Add local files at the end of the Dockerfile to limit cache busting\nCOPY config /work/config\nCOPY examples /work/examples\nENTRYPOINT [\"/usr/bin/tini\", \"--\"]\n\n# Create a non-priviledge user that will run the client and workers\nENV BASICUSER basicuser\nENV BASICUSER_UID 1000\nRUN useradd -m -d /work -s /bin/bash -N -u $BASICUSER_UID $BASICUSER \\\n && chown $BASICUSER /work \\\n && chown $BASICUSER:users -R /work\n\n"
}