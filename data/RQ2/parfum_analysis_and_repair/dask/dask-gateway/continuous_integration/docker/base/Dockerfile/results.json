{
  "startTime": 1674215225042,
  "endTime": 1674215226207,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 75
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 72
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 78
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 24
      }
    }
  ],
  "repairedDockerfile": "# See continuous_integration/docker/README.md for details about this and other\n# Dockerfiles under the continuous_integration/docker folder on their purpose\n# and how to work with them.\n#\n# centos:8 reached end-of-life 31 Dec 2021\n# centos:7 reach end-of-life 30 Jun 2024\n#\nFROM centos:7\n\nARG python_version=\"3.10\"\nARG go_version=\"1.18\"\n\n# Set labels based on the Open Containers Initiative (OCI):\n# https://github.com/opencontainers/image-spec/blob/main/annotations.md#pre-defined-annotation-keys\n#\nLABEL org.opencontainers.image.source=\"https://github.com/dask/dask-gateway\"\nLABEL org.opencontainers.image.url=\"https://github.com/dask/dask-gateway/blob/HEAD/continuous_integration/docker/base/Dockerfile\"\n\n# Configure yum to error on missing packages\nRUN echo \"skip_missing_names_on_install=False\" >> /etc/yum.conf\n\n# Install common yum packages\nRUN yum install -y \\\n        sudo \\\n            # sudo is used to run commands as various other users\n        git \\\n            # git is a requirement for golang to fetch dependencies during\n            # compilation of the golang code we have in\n            # dask-gateway-server/dask-gateway-proxy.\n && yum clean all \\\n && rm -rf /var/cache/yum\n\n# Install python and the following utilities:\n#\n# - tini: can wrap an container entrypoint to avoid misc issues, see\n#   https://github.com/krallin/tini#readme\n# - psutil: provides misc tools of relevance for debugging, see\n#   https://psutil.readthedocs.io/en/latest/#about\n#\n# NOTE: micromamba is a slimmed mamba/conda executable functioning without a\n#       pre-installed Python environment we use to install a Python version of\n#       choice to not first need to install a full Python environment to then\n#       install another Python environment.\n#\n#       See https://github.com/mamba-org/mamba#micromamba.\n#\nRUN yum install -y bzip2 \\\n\n && curl -f -sL https://micromamba.snakepit.net/api/micromamba/linux-64/latest \\\n  | tar --extract --verbose --bzip2 bin/micromamba --strip-components=1 \\\n && ./micromamba install \\\n    --channel conda-forge \\\n    --root-prefix=\"/opt/python\" \\\n    --prefix=\"/opt/python\" \\\n          python=\"${python_version}\" \\\n          mamba \\\n          psutil \\\n          tini \\\n && rm ./micromamba \\\n && /opt/python/bin/mamba clean -af \\\n && find /opt/python/ -type f -name '*.a' -delete \\\n && find /opt/python/ -type f -name '*.pyc' -delete \\\n\n && yum remove -y bzip2 \\\n && yum clean all \\\n && rm -rf /var/cache/yum\n\n# Install go\nRUN curl -f -sL https://dl.google.com/go/go${go_version}.linux-amd64.tar.gz \\\n  | tar --extract --verbose --gzip --directory=/opt/\n\n# Put Python and Go environments on PATH\n#\n# NOTE: This PATH environment will be preserved if sudo is used to switch to\n#       other users thanks to changes to /etc/sudoers.d/preserve_path.\n#\nENV PATH=/opt/python/bin:/opt/go/bin:$PATH\nCOPY ./files/etc /etc/\n\n# Make a few user accounts and a user group for later use\nRUN useradd --create-home dask \\\n && useradd --create-home alice \\\n && useradd --create-home bob \\\n && groupadd dask_users \\\n && usermod --append --groups dask_users alice \\\n && usermod --append --groups dask_users bob\n"
}