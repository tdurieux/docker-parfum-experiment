{
  "startTime": 1674246655789,
  "endTime": 1674246656298,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 28
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Build the front app\nFROM node:16.10 as front\n\n# Create app directory\nRUN mkdir -p /usr/src/front && rm -rf /usr/src/front\nWORKDIR /usr/src/front\n\n# Installing dependencies\nCOPY front/package*.json /usr/src/front/\nRUN npm install && npm cache clean --force;\n\n# Copying source files\nCOPY front /usr/src/front\n\n# Building app\nRUN npm run build\n\n# Export the app to /usr/src/front/out\nRUN npm run export\n\n\n\n# Build the server\nFROM golang:1.17 as server\n\nRUN mkdir -p /usr/src/server && rm -rf /usr/src/server\nWORKDIR /usr/src/server\n\n# First download dependencies (to benefit from docker cache)\nCOPY server/go.mod /usr/src/server\nCOPY server/go.sum /usr/src/server\nRUN go mod download\n\n# Then build the app\nCOPY server .\nENV CGO_ENABLED=0\n\nRUN go build -o ./app\n\n# Copy the binary into base image\nFROM gcr.io/distroless/base\n\nCOPY --from=front /usr/src/front/out ../front/out\nCOPY --from=server /usr/src/server/app .\nCOPY --from=server /usr/src/server/config_example.yaml .\nCOPY --from=server /usr/src/server/templates/ ./templates\n\nEXPOSE 8080\nCMD [\"/app\", \"web\"]\n\nLABEL name=\"istio-redirector\"\nLABEL version_auto_semver=\"true\"\n"
}