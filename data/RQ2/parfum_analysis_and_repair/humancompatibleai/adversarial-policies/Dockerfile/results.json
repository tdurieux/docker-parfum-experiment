{
  "startTime": 1674215427020,
  "endTime": 1674215428411,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 7,
        "columnEnd": 77
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 7,
        "columnEnd": 78
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 7,
        "columnEnd": 75
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 89,
        "lineEnd": 89,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 7,
        "columnEnd": 52
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Based on OpenAI's mujoco-py Dockerfile\n\nARG USE_MPI=True\n\n# base stage contains just binary dependencies.\n# This is used in the CI build.\nFROM nvidia/cuda:10.0-runtime-ubuntu18.04 AS base\nARG USE_MPI\nARG DEBIAN_FRONTEND=noninteractive\n\nRUN echo ttf-mscorefonts-installer msttcorefonts/accepted-mscorefonts-eula select true | debconf-set-selections \\\n    && apt-get update -q \\\n    && apt-get install -y --no-install-recommends \\\n    build-essential \\\n    curl \\\n    ffmpeg \\\n    git \\\n    libgl1-mesa-dev \\\n    libgl1-mesa-glx \\\n    libglew-dev \\\n    libosmesa6-dev \\\n    net-tools \\\n    parallel \\\n    patchelf \\\n    python3.7 \\\n    python3.7-dev \\\n    python3-pip \\\n    rsync \\\n    software-properties-common \\\n    unzip \\\n    vim \\\n    virtualenv \\\n    xpra \\\n    xserver-xorg-dev \\\n    ttf-mscorefonts-installer \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/*\n\nENV LANG C.UTF-8\n\nRUN mkdir -p /root/.mujoco \\\n    && curl -f -o mjpro150.zip https://www.roboti.us/download/mjpro150_linux.zip \\\n    && unzip mjpro150.zip -d /root/.mujoco \\\n    && rm mjpro150.zip \\\n    && curl -f -o mujoco131.zip https://www.roboti.us/download/mjpro131_linux.zip \\\n    && unzip mujoco131.zip -d /root/.mujoco \\\n    && rm mujoco131.zip \\\n    && curl -f -o /root/.mujoco/mjkey.txt https://www.roboti.us/file/mjkey.txt\n\nCOPY vendor/Xdummy /usr/local/bin/Xdummy\nRUN chmod +x /usr/local/bin/Xdummy\n\nRUN if [ $USE_MPI = \"True\" ]; then \\\n    add-apt-repository --yes ppa:marmistrz/openmpi \\\n    && apt-get update -q \\\n    && apt-get install --no-install-recommends -y libopenmpi3 libopenmpi-dev \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/*; \\\n    fi\n\n# Set the PATH to the venv before we create the venv, so it's visible in base.\n# This is since we may create the venv outside of Docker, e.g. in CI\n# or by binding it in for local development.\nENV PATH=\"/venv/bin:$PATH\"\nENV LD_LIBRARY_PATH /root/.mujoco/mjpro150/bin:${LD_LIBRARY_PATH}\n\n# python-req stage contains Python venv, but not code.\n# It is useful for development purposes: you can mount\n# code from outside the Docker container.\nFROM base as python-req\nARG USE_MPI\n\nWORKDIR /adversarial-policies\n# Copy over just requirements.txt at first. That way, the Docker cache doesn't\n# expire until we actually change the requirements.\nCOPY ./requirements-build.txt /adversarial-policies/\nCOPY ./requirements.txt /adversarial-policies/\nCOPY ./requirements-dev.txt /adversarial-policies/\nCOPY ./ci/build_venv.sh /adversarial-policies/ci/build_venv.sh\nRUN  ci/build_venv.sh /venv && rm -rf $HOME/.cache/pip\n\n# full stage contains everything.\n# Can be used for deployment and local testing.\nFROM python-req as full\n\n# Delay copying (and installing) the code until the very end\nCOPY . /adversarial-policies\n# Build a wheel then install to avoid copying whole directory (pip issue #2195)\nRUN python3 setup.py sdist bdist_wheel\nRUN pip install --no-cache-dir --upgrade dist/aprl-*.whl\n\n# Default entrypoints\nENTRYPOINT [\"/adversarial-policies/vendor/Xdummy-entrypoint\"]\nCMD [\"ci/run_tests.sh\"]\n"
}