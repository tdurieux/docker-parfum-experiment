{
  "startTime": 1674253111229,
  "endTime": 1674253112020,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 100
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# -------- DEPENDENCIES -------- #\nFROM golang:1.16.3-stretch as build\n\nADD go.mod /src/go.mod\nADD go.sum /src/go.sum\nWORKDIR /src\n\nRUN go mod download\n\nADD . /src\nWORKDIR /src\n\nRUN go build -o entry \\\n    && go test -cover -v ./...\n\nRUN go build -o hcheck \"tweek-gateway/healthcheck\"\n\n# ------ REGO TESTS ------ #\nFROM golang:1.16.3-stretch as regotests\n\nRUN curl -f -L -o opa https://github.com/open-policy-agent/opa/releases/download/v0.8.2/opa_linux_amd64\nRUN chmod u+x opa\n\nRUN mkdir /tmp/opatests\nCOPY authorization.rego /tmp/opatests\nCOPY ./testdata/policy.json /tmp/opatests\nCOPY ./testdata/test_authorization.rego /tmp/opatests\n\nRUN ./opa test -v /tmp/opatests\n\n# -------- IMAGE -------- #\nFROM gcr.io/distroless/base\n\nCOPY --from=build /src/settings /settings\nCOPY --from=build /src/authorization.rego /authorization.rego\nCOPY --from=build /src/entry /entry\nCOPY --from=build /src/hcheck /healthcheck\n\nENV CONFIGOR_ENV=production\n\nVOLUME [ \"/config\" ]\n\nHEALTHCHECK --interval=5s --timeout=2s --retries=10 CMD [\"/healthcheck\"]\n\nENTRYPOINT [ \"/entry\" ]\n"
}