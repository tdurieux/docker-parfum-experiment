{
  "startTime": 1674250396476,
  "endTime": 1674250397450,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 15,
        "columnEnd": 26
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:10.12.0\n\n# use changes to package.json to force Docker not to use the cache\n# when we change our application's nodejs dependencies:\nADD package.json /tmp/package.json\nADD package-lock.json /tmp/package-lock.json\nRUN cd /tmp && npm install && npm cache clean --force;\nRUN mkdir -p /opt/app && cp -a /tmp/node_modules /opt/app/\n\n\n# From here we load our application's code in, therefore the previous docker\n# \"layer\" thats been cached will be used if possible\nWORKDIR /opt/app\nADD . /opt/app\n\n\n# build frontend and backend\nRUN cd /opt/app && npm run build:be-prod\nRUN npm run build:fe-prod\n\nEXPOSE 3001\n\nENV NODE_ENV production\n\nCMD [\"node\", \"dist/app.js\"]\n"
}