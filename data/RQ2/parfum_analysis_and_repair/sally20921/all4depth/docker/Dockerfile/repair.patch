diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/sally20921/all4depth/docker/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/sally20921/all4depth/docker/Dockerfile/repaired.Dockerfile
index 9c78882..55756da 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/sally20921/all4depth/docker/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/sally20921/all4depth/docker/Dockerfile/repaired.Dockerfile
@@ -45,7 +45,7 @@ RUN apt-get update && apt-get install -y --allow-downgrades --allow-change-held-
     bzip2 \
     htop \
     gnuplot \
-    ffmpeg
+    ffmpeg && rm -rf /var/lib/apt/lists/*;
 
 # Install Open MPI
 RUN mkdir /tmp/openmpi && \
@@ -53,15 +53,15 @@ RUN mkdir /tmp/openmpi && \
     wget https://www.open-mpi.org/software/ompi/v4.0/downloads/openmpi-4.0.0.tar.gz && \
     tar zxf openmpi-4.0.0.tar.gz && \
     cd openmpi-4.0.0 && \
-    ./configure --enable-orterun-prefix-by-default && \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --enable-orterun-prefix-by-default && \
     make -j $(nproc) all && \
     make install && \
     ldconfig && \
-    rm -rf /tmp/openmpi
+    rm -rf /tmp/openmpi && rm openmpi-4.0.0.tar.gz
 
 # Install OpenSSH for MPI to communicate between containers
 RUN apt-get install -y --no-install-recommends openssh-client openssh-server && \
-    mkdir -p /var/run/sshd
+    mkdir -p /var/run/sshd && rm -rf /var/lib/apt/lists/*;
 
 # Allow OpenSSH to talk to containers without asking for confirmation
 RUN cat /etc/ssh/ssh_config | grep -v StrictHostKeyChecking > /etc/ssh/ssh_config.new && \
@@ -70,22 +70,22 @@ RUN cat /etc/ssh/ssh_config | grep -v StrictHostKeyChecking > /etc/ssh/ssh_confi
 
 # Instal Python and pip
 RUN if [[ "${PYTHON_VERSION}" == "3.6" ]]; then \
-    apt-get install -y python${PYTHON_VERSION}-distutils; \
+    apt-get install --no-install-recommends -y python${PYTHON_VERSION}-distutils; rm -rf /var/lib/apt/lists/*; \
     fi
 
 RUN ln -sf /usr/bin/python${PYTHON_VERSION} /usr/bin/python
 
-RUN curl -O https://bootstrap.pypa.io/get-pip.py && \
+RUN curl -f -O https://bootstrap.pypa.io/get-pip.py && \
     python get-pip.py && \
     rm get-pip.py
 
 # Install Pydata and other deps
-RUN pip install future typing numpy pandas matplotlib jupyter h5py \
+RUN pip install --no-cache-dir future typing numpy pandas matplotlib jupyter h5py \
     awscli boto3 tqdm termcolor path.py pillow-simd opencv-python-headless \
     mpi4py onnx onnxruntime pycuda yacs cython==0.29.10
 
 # Install PyTorch
-RUN pip install torch==${PYTORCH_VERSION} \
+RUN pip install --no-cache-dir torch==${PYTORCH_VERSION} \
     torchvision==${TORCHVISION_VERSION} && ldconfig
 
 # Install apex
@@ -109,8 +109,8 @@ RUN aws configure set default.s3.max_concurrent_requests 100 && \
 
 # Install Minkowski Engine
 ENV TORCH_CUDA_ARCH_LIST=Volta;Turing;Kepler+Tesla
-RUN pip install ninja
-RUN apt-get update && apt-get install -y libopenblas-dev
+RUN pip install --no-cache-dir ninja
+RUN apt-get update && apt-get install --no-install-recommends -y libopenblas-dev && rm -rf /var/lib/apt/lists/*;
 WORKDIR /workspace
 RUN git clone https://github.com/NVIDIA/MinkowskiEngine.git
 RUN cd /workspace/MinkowskiEngine && \
@@ -128,7 +128,7 @@ RUN git clone https://github.com/TRI-ML/dgp.git
 ENV PYTHONPATH="/workspace/dgp:$PYTHONPATH"
 
 # Override DGP wandb with required version
-RUN pip install wandb==0.8.21 pyquaternion
+RUN pip install --no-cache-dir wandb==0.8.21 pyquaternion
 
 # Expose Port for jupyter (8888)
 EXPOSE 8888