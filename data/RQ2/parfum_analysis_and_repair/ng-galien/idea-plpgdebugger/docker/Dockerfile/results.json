{
  "startTime": 1674248260661,
  "endTime": 1674248261306,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 7,
        "columnEnd": 18
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 23,
        "columnStart": 7,
        "columnEnd": 11
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 23,
        "columnStart": 7,
        "columnEnd": 11
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Filename: Dockerfile\n\n#POSTGRES IMAGE\nARG TAG=latest\nFROM postgres:${TAG}\n\n# SET ENV\nARG TAG\nENV PG_LIB=postgresql-server-dev-${TAG}\nENV PG_BRANCH=REL_${TAG}_STABLE\nENV PLUGIN_BRANCH=print-vars-${TAG}\n\n# APT\nRUN apt --yes update  \\\n    && apt --yes upgrade \\\n    && apt --yes --no-install-recommends install \\\n    git \\\n    build-essential \\\n    libreadline-dev \\\n    zlib1g-dev \\\n    bison \\\n    libkrb5-dev \\\n    flex \\\n    $PG_LIB && rm -rf /var/lib/apt/lists/*;\n\n# POSTGRES SOURCE\nRUN cd /usr/src/ \\\n    && git clone https://github.com/postgres/postgres.git \\\n    && cd postgres \\\n    && git checkout $PG_BRANCH \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"\n\n# DEBUGGER SOURCE\nRUN cd /usr/src/postgres/contrib \\\n    && git clone https://github.com/ng-galien/pldebugger.git \\\n    && cd pldebugger \\\n    && git checkout $PLUGIN_BRANCH \\\n    && make clean  \\\n    && make USE_PGXS=1  \\\n    && make USE_PGXS=1 install\n\n# CLEANUP\nRUN rm -r /usr/src/postgres \\\n    && apt --yes remove --purge  \\\n        git build-essential  \\\n        libreadline-dev  \\\n        zlib1g-dev bison  \\\n        libkrb5-dev flex  \\\n        $PG_PG_LIB \\\n    && apt --yes autoremove  \\\n    && apt --yes clean\n\n# CONFIG\nCOPY *.sql /docker-entrypoint-initdb.d/\nCOPY *.sh /docker-entrypoint-initdb.d/\nRUN chmod a+r /docker-entrypoint-initdb.d/*\n"
}