{
  "startTime": 1674215682679,
  "endTime": 1674215683542,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 36,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 10
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 36,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 10
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:12.18.4-alpine AS frontend_builder\n\nCOPY ./frontend /app/frontend\nWORKDIR /app/frontend\n\nARG NPM_BUILD_MODE=\"development\"\nRUN echo \"npm build mode: ${NPM_BUILD_MODE}\"\n\nRUN npm install && npm cache clean --force;\nRUN npm run build -- --mode \"$NPM_BUILD_MODE\"\n\nFROM golang:1.17.4 AS backend_builder\n\nCOPY ./backend /app/backend\n\nWORKDIR /app/backend\n\nARG GO_BUILD_TAGS=\"dev\"\n\nRUN echo \"Go build tags: ${GO_BUILD_TAGS}\"\nRUN GOOS=linux GOARCH=amd64 \\\n    go build \\\n      -tags \"netgo $GO_BUILD_TAGS\" \\\n      -ldflags '-w -extldflags \"-static\"' \\\n      -o /app/main \\\n      main.go\n\nFROM debian:stable-20211011-slim AS litestream_downloader\n\nARG litestream_version=\"v0.3.7\"\nARG litestream_binary_tgz_filename=\"litestream-${litestream_version}-linux-amd64-static.tar.gz\"\n\nWORKDIR /litestream\n\nRUN set -x && \\\n    apt-get update && \\\n    DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y \\\n      ca-certificates \\\n      wget && rm -rf /var/lib/apt/lists/*;\nRUN wget \"https://github.com/benbjohnson/litestream/releases/download/${litestream_version}/${litestream_binary_tgz_filename}\"\nRUN tar -xvzf \"${litestream_binary_tgz_filename}\" && rm \"${litestream_binary_tgz_filename}\"\n\nFROM alpine:3.15\n\nRUN apk add --no-cache bash\n\nCOPY --from=frontend_builder /app/frontend/dist /app/frontend/dist\nCOPY --from=backend_builder /app/main /app/main\nCOPY --from=litestream_downloader /litestream/litestream /app/litestream\nCOPY ./litestream.yml /etc/litestream.yml\nCOPY ./docker_entrypoint /app/docker_entrypoint\nCOPY ./gcp-service-account-*.json /app/\n\nWORKDIR /app\n\nENTRYPOINT [\"/app/docker_entrypoint\"]\n"
}