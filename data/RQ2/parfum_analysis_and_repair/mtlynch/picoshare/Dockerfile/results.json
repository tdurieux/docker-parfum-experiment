{
  "startTime": 1674216846906,
  "endTime": 1674216848217,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 41,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 10
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 41,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 10
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM golang:1.17.4 AS builder\n\nARG TARGETPLATFORM\n\nCOPY ./cmd /app/cmd\nCOPY ./garbagecollect /app/garbagecollect\nCOPY ./handlers /app/handlers\nCOPY ./random /app/random\nCOPY ./static /app/static\nCOPY ./store /app/store\nCOPY ./templates /app/templates\nCOPY ./types /app/types\nCOPY ./go.* /app/\n\nWORKDIR /app\n\nRUN set -x && \\\n    if [ \"$TARGETPLATFORM\" = \"linux/arm/v7\" ] ; then \\\n      GOARCH=\"arm\"; \\\n    elif [ \"$TARGETPLATFORM\" = \"linux/arm64\" ] ; then \\\n      GOARCH=\"arm64\"; \\\n    else \\\n      GOARCH=\"amd64\"; \\\n    fi && \\\n    set -u && \\\n    GOOS=linux \\\n    go build \\\n      -tags netgo \\\n      -ldflags '-w -extldflags \"-static\"' \\\n      -o /app/picoshare \\\n      cmd/picoshare/main.go\n\nFROM debian:stable-20211011-slim AS litestream_downloader\n\nARG TARGETPLATFORM\nARG litestream_version=\"v0.3.8\"\n\nWORKDIR /litestream\n\nRUN set -x && \\\n    apt-get update && \\\n    DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y \\\n      ca-certificates \\\n      wget && rm -rf /var/lib/apt/lists/*;\n\nRUN set -x && \\\n    if [ \"$TARGETPLATFORM\" = \"linux/arm/v7\" ] ; then \\\n      ARCH=\"arm7\" ; \\\n    elif [ \"$TARGETPLATFORM\" = \"linux/arm64\" ] ; then \\\n      ARCH=\"arm64\" ; \\\n    else \\\n      ARCH=\"amd64\" ; \\\n    fi && \\\n    set -u && \\\n    litestream_binary_tgz_filename=\"litestream-${litestream_version}-linux-${ARCH}-static.tar.gz\" && \\\n    wget \"https://github.com/benbjohnson/litestream/releases/download/${litestream_version}/${litestream_binary_tgz_filename}\" && \\\n    mv \"${litestream_binary_tgz_filename}\" litestream.tgz\nRUN tar -xvzf litestream.tgz && rm litestream.tgz\n\nFROM alpine:3.15\n\nRUN apk add --no-cache bash\n\nCOPY --from=builder /app/picoshare /app/picoshare\nCOPY --from=litestream_downloader /litestream/litestream /app/litestream\nCOPY ./docker-entrypoint /app/docker-entrypoint\nCOPY ./litestream.yml /etc/litestream.yml\nCOPY ./static /app/static\nCOPY ./templates /app/templates\nCOPY ./LICENSE /app/LICENSE\n\nWORKDIR /app\n\nENTRYPOINT [\"/app/docker-entrypoint\"]\n"
}