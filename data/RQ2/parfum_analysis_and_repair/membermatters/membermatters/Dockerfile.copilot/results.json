{
  "startTime": 1674221053314,
  "endTime": 1674221054273,
  "originalSmells": [
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 7,
        "columnEnd": 26
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 30,
        "columnEnd": 49
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 7,
        "columnEnd": 195
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Specify our base image\nFROM alpine:3.13\nLABEL maintainer=\"Jaimyn Mayer (github@jaimyn.com.au)\"\nLABEL description=\"Base Dockerfile for the MemberMatters software.\"\n\n# Volumes don't really make sense when deploying to ECS\n# VOLUME /usr/src/data/\n# VOLUME /usr/src/logs/\n\n# Copy over the nginx config file\nADD memberportal/requirements.txt /usr/src/app/memberportal/requirements.txt\nADD frontend/package.json /usr/src/app/frontend/package.json\nADD frontend/package-lock.json /usr/src/app/frontend/package-lock.json\nADD docker/nginx.conf /etc/nginx/nginx.conf\nWORKDIR /usr/src/app/\n\n# Install nginx and other build dependencies\nRUN apk update \\\n    && apk add --no-cache make gcc g++ musl-dev libffi-dev openssl-dev zlib-dev jpeg-dev bash libpng-dev openrc cargo nginx vips-dev python2 python3 python3-dev py3-pip nodejs npm mariadb-dev mariadb-client \\\n    # Create some base folders for everything\n    && mkdir /usr/src/logs && mkdir /usr/src/data \\\n    # Install node deps\n    && cd /usr/src/app/frontend/ \\\n    && npm ci \\\n    # Install python deps\n    && cd /usr/src/app/memberportal/ \\\n    $$ pip3 install --no-cache-dir pillow \\\n    && pip3 install --no-cache-dir -r requirements.txt && rm -rf /usr/src/logs\n\n# Copy over app code\nADD memberportal /usr/src/app/memberportal\nADD frontend /usr/src/app/frontend\nADD docker /usr/src/app/docker\n\n# Build out the code:\nRUN cd /usr/src/app/memberportal/ \\\n    && python3 manage.py collectstatic --noinput \\\n    # Build our frontend\n    && cd /usr/src/app/frontend/ \\\n    && npm run build \\\n    # Remove node_modules and our .npmrc\n    && rm -rf .npmrc node_modules/ \\\n    # Remove build deps we don't need anymore\n    && apk del --no-cache --purge make gcc g++ musl-dev libffi-dev openssl-dev zlib-dev jpeg-dev bash libpng-dev cargo vips-dev python2 python3-dev npm \\\n    && rm -rf /var/cache/apk/*\n\n# Expose the port and run the app\nEXPOSE 8000\nCMD [\"sh\", \"/usr/src/app/docker/container_start_no_setup.sh\"]\n"
}