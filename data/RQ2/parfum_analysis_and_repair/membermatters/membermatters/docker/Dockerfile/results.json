{
  "startTime": 1674246384223,
  "endTime": 1674246385677,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 76
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 38,
        "columnEnd": 57
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 61,
        "columnEnd": 80
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 25,
        "columnEnd": 61
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 25,
        "columnEnd": 61
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Specify our base image\nFROM python:3.10-bullseye\nLABEL maintainer=\"Jaimyn Mayer (github@jaimyn.dev)\"\nLABEL description=\"Base Dockerfile for the MemberMatters software.\"\n\nVOLUME /usr/src/data/\nVOLUME /usr/src/logs/\n\nRUN mkdir -p /usr/src/app/frontend && mkdir /usr/src/logs && mkdir /usr/src/data && rm -rf /usr/src/app/frontend\n\nRUN apt-get update -y && apt-get install --no-install-recommends -y nginx curl daphne && rm -rf /var/lib/apt/lists/*;\n\n# Install Node\nENV NODE_VERSION=14.15.0\nSHELL [\"/bin/bash\", \"--login\", \"-c\"]\n\nRUN curl -f -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.3/install.sh | bash\nRUN nvm install ${NODE_VERSION}\nRUN npm config delete prefix\nRUN nvm use --delete-prefix v${NODE_VERSION} --silent\n\n# Install node deps\nWORKDIR /usr/src/app/frontend/\nCOPY frontend/package* /usr/src/app/frontend/\nRUN npm ci\n\nADD frontend /usr/src/app/frontend\nADD package.json /usr/src/app/package.json\n\n# Install python deps\nWORKDIR /usr/src/app/memberportal/\nRUN python -m pip install --upgrade pip\nADD memberportal/requirements.txt /usr/src/app/memberportal/requirements.txt\nRUN pip3 install --no-cache-dir pillow\nRUN pip3 install --no-cache-dir -r requirements.txt\n\n# Build our frontend\nWORKDIR /usr/src/app/frontend/\nRUN npm run build\n\n# Remove our .npmrc\nRUN rm -rf .npmrc\n\n# collect static files from Django and add the backend source code\nADD memberportal /usr/src/app/memberportal\nWORKDIR /usr/src/app/memberportal/\nRUN python3 manage.py collectstatic --noinput\n\n# Copy over the nginx config and requirement files\nADD docker/nginx.conf /etc/nginx/nginx.conf\nADD docker /usr/src/app/docker\n\n# Expose the port and run the app\nEXPOSE 8000\nCMD [\"sh\", \"/usr/src/app/docker/container_start.sh\"]\n"
}