{
  "startTime": 1674253133941,
  "endTime": 1674253135193,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 99,
        "lineEnd": 99,
        "columnStart": 2,
        "columnEnd": 47
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# PHP Farm Docker image\n#\n\n# we use Debian as the host OS\nFROM philcryer/min-wheezy:latest\n\nLABEL author=\"Andreas Gohr <andi@splitbrain.org>, Eugene Sia <eugene@eugenesia.co.uk>\"\n\nENV \\\n  # Packages needed for running various build scripts.\n  SCRIPT_PKGS=\" \\\n    debian-keyring \\\n    wget \\\n  \" \\\n  # Packages only needed for PHP build.\n  BUILD_PKGS=\" \\\n    autoconf \\\n    build-essential \\\n    # Flex needed for PHP 5.1 & 5.2 see http://php.net/manual/en/install.unix.php\n    flex \\\n    lemon \\\n    pkg-config \\\n  \" \\\n  # PHP runtime dependencies.\n  RUNTIME_PKGS=\" \\\n    # Needed for PHP and Git to connect with SSL sites.\n    ca-certificates \\\n    curl \\\n    # apt-get complains that this is an 'essential' package.\n    debian-archive-keyring \\\n    imagemagick \\\n    libbz2-dev \\\n    libc-client2007e-dev \\\n    libcurl4-openssl-dev \\\n    libfreetype6-dev \\\n    libicu-dev \\\n    libjpeg-dev \\\n    libldap2-dev \\\n    libltdl-dev \\\n    libmcrypt-dev \\\n    libmhash-dev \\\n    libmysqlclient-dev \\\n    libpng-dev \\\n    libpq-dev \\\n    libsasl2-dev \\\n    libssl-dev \\\n    libsslcommon2-dev \\\n    libt1-dev \\\n    libwebp-dev \\\n    libxml2-dev \\\n    libxpm-dev \\\n    libxslt1-dev \\\n  \" \\\n  # Packages needed to run Apache httpd.\n  APACHE_PKGS=\"\\\n    apache2 \\\n    apache2-mpm-prefork \\\n    # Fcgid mod for Apache - not a build dependency library.\n    libapache2-mod-fcgid \\\n  \"\n\n# Install Apache and packages we need for runtime usage.\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n    $RUNTIME_PKGS \\\n    $APACHE_PKGS && \\\n    \\\n    # Clean up apt package lists.\n    rm -rf /var/lib/apt/lists/*\n\n\n# Reconfigure Apache\nRUN rm -rf /var/www/*\n# Import our Apache configs.\nCOPY var-www /var/www/\nCOPY apache /etc/apache2/\n\n\n# Import our own modifications for the PhpFarm script.\nCOPY phpfarm /phpfarm_mod\n\n# The PHP versions to compile.\nENV PHP_FARM_VERSIONS=\"5.1.6 5.2.17 5.3.29 5.4.45 5.5.38 5.6.32 7.0.28 7.1.15 7.2.3\" \\\n  \\\n  # Flags for C Compiler Loader: make php 5.3 work again.\n  LDFLAGS=\"-lssl -lcrypto -lstdc++\" \\\n  \\\n  # Add path to built PHP executables, for module building and for Apache.\n  PATH=\"/phpfarm/inst/bin/:$PATH\"\n\n\n# Install packages needed for build.\nRUN apt-get update && \\\n  apt-get install -y --no-install-recommends $SCRIPT_PKGS $BUILD_PKGS && \\\n  \\\n  # Download PhpFarm scripts into /phpfarm/.\n  wget -O /phpfarm.tar.gz https://github.com/fpoirotte/phpfarm/archive/v0.2.0.tar.gz && \\\n  mkdir /phpfarm && \\\n  tar -xf /phpfarm.tar.gz -C /phpfarm --strip 1 && \\\n  #\n  # Overwrite PhpFarm with our own modifications.\n  rm -rf /phpfarm/src/bzips /phpfarm/src/custom && \\\n  mv /phpfarm_mod/* /phpfarm/src/ && \\\n  #\n  # Wait for docker.sh to finish moving else trying to exec a file being\n  # written will output \"Text file busy\" error.\n  sleep 5s && \\\n  rmdir /phpfarm_mod && \\\n  #\n  # Build all PHP versions.\n  cd /phpfarm/src && \\\n  ./docker.sh && \\\n  #\n  # Clean up.\n  apt-get purge -y $SCRIPT_PKGS $BUILD_PKGS && \\\n  apt-get autoremove -y && \\\n  rm -rf /var/lib/apt/lists/* && rm /phpfarm.tar.gz\n\n\n# expose the ports\nEXPOSE 8000 8051 8052 8053 8054 8055 8056 8070 8071 8072\n\n# run it\nWORKDIR /var/www\nCOPY run.sh /run.sh\nCMD [\"/bin/bash\", \"/run.sh\"]\n\n"
}