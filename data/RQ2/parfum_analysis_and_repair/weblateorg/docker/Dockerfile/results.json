{
  "startTime": 1674252833764,
  "endTime": 1674252835421,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 98,
        "lineEnd": 98,
        "columnStart": 5,
        "columnEnd": 63
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.10.5-slim-bullseye\nENV PYVERSION 3.10\nENV VERSION 4.13.1\nENV WEBLATE_EXTRAS all,MySQL,zxcvbn\nARG TARGETARCH\n\nLABEL name=\"Weblate\"\nLABEL version=$VERSION\nLABEL maintainer=\"Michal Čihař <michal@cihar.com>\"\nLABEL org.opencontainers.image.url=\"https://weblate.org/\"\nLABEL org.opencontainers.image.documentation=\"https://docs.weblate.org/en/latest/admin/install/docker.html\"\nLABEL org.opencontainers.image.source=\"https://github.com/WeblateOrg/docker\"\nLABEL org.opencontainers.image.version=$VERSION\nLABEL org.opencontainers.image.vendor=\"Michal Čihař\"\nLABEL org.opencontainers.image.title=\"Weblate\"\nLABEL org.opencontainers.image.description=\"A web-based continuous localization system with tight version control integration\"\nLABEL org.opencontainers.image.licenses=\"GPL-3.0-or-later\"\n\nHEALTHCHECK --interval=30s --timeout=3s CMD /app/bin/health_check\n\nSHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-x\", \"-c\"]\n\n# Add user early to get a consistent userid\n# - the root group so it can run with any uid\n# - the tty group for /dev/std* access\n# - see https://github.com/WeblateOrg/docker/issues/326 and https://github.com/moby/moby/issues/31243#issuecomment-406879017\n# - create test and app data dirs to be able to run tests\nRUN \\\n  useradd --shell /bin/sh --user-group weblate --groups root,tty \\\n  && mkdir -p /home/weblate/.ssh \\\n  && touch /home/weblate/.ssh/authorized_keys \\\n  && chown -R weblate:weblate /home/weblate \\\n  && chmod 700 /home/weblate/.ssh \\\n  && install -d -o weblate -g weblate -m 755 \"/usr/local/lib/python${PYVERSION}/site-packages/data-test\" \"/usr/local/lib/python${PYVERSION}/site-packages/test-images\" \\\n  && install -d -o weblate -g weblate -m 755 /app/data \\\n  && install -d -o weblate -g weblate -m 755 /app/cache\n\n# Configure utf-8 locales to make sure Python\n# correctly handles unicode filenames, configure settings\nENV LANG=C.UTF-8\nENV LC_ALL=C.UTF-8\n# Home directory\nENV HOME=/home/weblate\n# Use Docker specific settings\nENV DJANGO_SETTINGS_MODULE=weblate.settings_docker\n# Avoid Python buffering stdout and delaying logs\nENV PYTHONUNBUFFERED=1\n\nCOPY requirements.txt patches /usr/src/weblate/\n\n# Install dependencies\n# hadolint ignore=DL3008,DL3013,SC2046\nRUN \\\n  export DEBIAN_FRONTEND=noninteractive \\\n  && apt-get update \\\n  && apt-get install --no-install-recommends -y \\\n    nginx \\\n    openssh-client \\\n    ca-certificates \\\n    curl \\\n    gir1.2-pango-1.0 \\\n    libxmlsec1-openssl \\\n    libjpeg62-turbo \\\n    gettext \\\n    git \\\n    git-svn \\\n    gnupg \\\n    subversion \\\n    pkg-config \\\n    file \\\n    make \\\n    libcairo2-dev \\\n    libxml2-dev \\\n    libacl1-dev \\\n    libmariadb3 \\\n    libmariadb-dev \\\n    libxmlsec1-dev \\\n    libleptonica-dev \\\n    libtesseract-dev \\\n    libsasl2-dev \\\n    libldap2-dev \\\n    libldap-common \\\n    libssl-dev \\\n    libffi-dev \\\n    libpq-dev \\\n    zlib1g-dev \\\n    libjpeg62-turbo-dev \\\n    libenchant-2-2 \\\n    libgirepository1.0-dev \\\n    libcairo-gobject2 \\\n    gcc \\\n    g++ \\\n    tesseract-ocr \\\n    patch \\\n    unzip \\\n    xz-utils \\\n  && c_rehash \\\n  && echo \"deb http://apt.postgresql.org/pub/repos/apt bullseye-pgdg main\" > /etc/apt/sources.list.d/pgdg.list \\\n  && curl -f -L https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add - \\\n  && apt-get update \\\n  && if apt-cache show postgresql-client-14 > /dev/null 2>&1 ; then \\\n        apt-get install --no-install-recommends -y postgresql-client-14 ; \\\n    else \\\n        apt-get install --no-install-recommends -y postgresql-client ; \\\n    fi \\\n  && curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y \\\n  && source $HOME/.cargo/env \\\n  && pip install --no-cache-dir --upgrade $(grep -E '^(pip|wheel|setuptools)==' /usr/src/weblate/requirements.txt) \\\n  && pip install --no-cache-dir --no-binary :all: $(grep -E '^(cffi|lxml)==' /usr/src/weblate/requirements.txt) \\\n  && case \"$VERSION\" in \\\n    *+* ) \\\n      sed -Ei '/^(translate-toolkit|aeidon)/D' /usr/src/weblate/requirements.txt; \\\n      pip install \\\n        --no-cache-dir \\\n        -r /usr/src/weblate/requirements.txt \\\n        \"https://github.com/translate/translate/archive/master.zip\" \\\n        \"https://github.com/WeblateOrg/language-data/archive/main.zip\" \\\n        \"https://github.com/WeblateOrg/weblate/archive/$WEBLATE_DOCKER_GIT_REVISION.zip#egg=Weblate[$WEBLATE_EXTRAS]\" \\\n        ;; \\\n    * ) \\\n      pip install \\\n        --no-cache-dir \\\n        -r /usr/src/weblate/requirements.txt \\\n        \"Weblate[$WEBLATE_EXTRAS]==$VERSION\" \\\n      ;; \\\n  esac \\\n  && python -c 'from phply.phpparse import make_parser; make_parser()' \\\n  && ln -s /usr/local/share/weblate/examples/ /app/ \\\n  && apt-get -y purge \\\n    pkg-config \\\n    libleptonica-dev \\\n    libtesseract-dev \\\n    libmariadb-dev \\\n    libgirepository1.0-dev \\\n    libxml2-dev \\\n    libffi-dev \\\n    libxmlsec1-dev \\\n    libcairo2-dev \\\n    libpq-dev \\\n    gcc \\\n    g++ \\\n    file \\\n    make \\\n    libsasl2-dev \\\n    libacl1-dev \\\n    libldap2-dev \\\n    libssl-dev \\\n    libz-dev   \\\n    libjpeg62-turbo-dev \\\n  && apt-get -y purge --auto-remove -o APT::AutoRemove::RecommendsImportant=false \\\n  && apt-get clean \\\n  && rustup self uninstall -y \\\n  && rm -rf /root/.cache /root/.cargo /tmp/* /var/lib/apt/lists/*\n\n# Apply hotfixes on Weblate\nRUN find /usr/src/weblate -name '*.patch' -print0 | sort -z | \\\n  xargs -n1 -0 -r patch -p0 -d \"/usr/local/lib/python${PYVERSION}/site-packages/\" -i\n\n# Configuration for Weblate, nginx and supervisor\nCOPY etc /etc/\n\n# Fix permissions and adjust files to be able to edit them as user on start\n# - localtime is needed for setting system timezone based on environment\n# - timezone is removed to avoid dpkg handling localtime updates\n# - we generate nginx configuration based on environment\n# - autorize passwd edition so we can fix weblate uid on startup\n# - log, run and home directories\n# - disable su for non root to avoid privilege escapation by chaging /etc/passwd\nRUN rm -f /etc/localtime /etc/timezone && cp /usr/share/zoneinfo/Etc/UTC /etc/localtime \\\n  && chgrp -R 0 /etc/nginx/sites-available/ /var/log/nginx/ /var/lib/nginx /app/data /app/cache /run /home/weblate /etc/localtime /etc/supervisor/conf.d \\\n  && chmod -R 770 /etc/nginx/sites-available/ /var/log/nginx/ /var/lib/nginx /app/data /app/cache /run /home /home/weblate /etc/localtime /etc/supervisor/conf.d \\\n  && chmod 664 /etc/passwd /etc/group \\\n  && sed -i '/pam_rootok.so/a auth requisite pam_deny.so' /etc/pam.d/su\n\n# Search path for custom modules\nRUN echo \"/app/data/python\" > \"/usr/local/lib/python${PYVERSION}/site-packages/weblate-docker.pth\"\nRUN \\\n    mkdir -p /app/data/python/customize && \\\n    touch /app/data/python/customize/__init__.py && \\\n    touch /app/data/python/customize/models.py && \\\n    chown -R weblate:weblate /app/data/python\n\n# Entrypoint\nCOPY start health_check /app/bin/\nRUN chmod a+rx /app/bin/start\n\nEXPOSE 8080\nVOLUME /app/data\nVOLUME /app/cache\n\n# Numerical value is needed for OpenShift S2I, see\n# https://docs.openshift.com/container-platform/latest/openshift_images/create-images.html\nUSER 1000\n\nENTRYPOINT [\"/app/bin/start\"]\nCMD [\"runserver\"]\n"
}