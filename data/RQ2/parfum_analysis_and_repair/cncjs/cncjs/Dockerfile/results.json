{
  "startTime": 1674254893305,
  "endTime": 1674254893920,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 33,
        "columnEnd": 52
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 18,
        "columnStart": 25,
        "columnEnd": 6
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 43,
        "lineEnd": 46,
        "columnStart": 25,
        "columnEnd": 6
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# BUILD STAGE\nFROM debian:bullseye as build-stage\n\nENV BUILD_DIR /tmp/build\nENV NVM_DIR /root/.nvm\nENV NODE_VERSION v12.22.1\nENV NODE_ENV production\nENV NODE_PATH $NVM_DIR/$NODE_VERSION/lib/node_modules\nENV PATH $NVM_DIR/versions/node/$NODE_VERSION/bin:$PATH\n\nRUN apt-get update -y && apt-get install -y -q --no-install-recommends \\\n  apt-utils \\\n  build-essential \\\n  ca-certificates \\\n  python3 \\\n  python3-pip \\\n  curl \\\n  git \\\n  udev && rm -rf /var/lib/apt/lists/*;\n\nRUN git clone https://github.com/nvm-sh/nvm.git \"$NVM_DIR\" \\\n  && cd \"$NVM_DIR\" \\\n  && git checkout `git describe --abbrev=0 --tags --match \"v[0-9]*\" $(git rev-list --tags --max-count=1)` \\\n  && . \"$NVM_DIR/nvm.sh\" \\\n  && nvm install \"$NODE_VERSION\" \\\n  && nvm alias default \"$NODE_VERSION\" \\\n  && nvm use --delete-prefix default\n\nCOPY ./dist/cncjs $BUILD_DIR/cncjs\nCOPY ./entrypoint $BUILD_DIR/cncjs/\n\nWORKDIR $BUILD_DIR/cncjs\nRUN npm install -g npm@latest && npm install -g yarn && yarn --production && npm cache clean --force;\n\n# FINAL STAGE\nFROM debian:bullseye\n\nENV NVM_DIR /root/.nvm\nENV NODE_VERSION v12.22.1\nENV NODE_ENV production\nENV NODE_PATH $NVM_DIR/$NODE_VERSION/lib/node_modules\nENV PATH $NVM_DIR/versions/node/$NODE_VERSION/bin:$PATH\n\nRUN apt-get update -y && apt-get install -y -q --no-install-recommends \\\n  apt-utils \\\n  ca-certificates \\\n  udev && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /opt/cncjs\nEXPOSE 8000\nENTRYPOINT [\"/opt/cncjs/entrypoint\"]\n\nCOPY --from=build-stage /root/.nvm $NVM_DIR\nCOPY --from=build-stage /tmp/build/cncjs /opt/cncjs\n"
}