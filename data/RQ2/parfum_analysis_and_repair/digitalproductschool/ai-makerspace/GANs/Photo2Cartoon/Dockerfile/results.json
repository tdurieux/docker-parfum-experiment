{
  "startTime": 1674252784939,
  "endTime": 1674252785956,
  "originalSmells": [
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 16,
        "columnStart": 7,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.8-slim\n\nENV PYTHONUNBUFFERED=1 \\\n    PYTHONDONTWRITEBYTECODE=1 \\\n    PIP_NO_CACHE_DIR=1 \\\n    PIP_DISABLE_PIP_VERSION_CHECK=1 \\\n    PIP_DEFAULT_TIMEOUT=120 \\\n    LC_ALL=C.UTF-8 \\\n    LANG=C.UTF-8\n\n# we probably need build tools?\nRUN apt-get update \\\n    && apt-get install --yes --no-install-recommends \\\n    gcc \\\n    g++ \\\n    build-essential \\\n    python3-dev && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /app\n\n# if we have a packages.txt, install it\nCOPY packages.txt packages.txt\nRUN xargs -a packages.txt apt-get install --yes\n\nCOPY requirements.txt requirements.txt\nRUN pip install --no-cache-dir --upgrade -r requirements.txt\n\nEXPOSE 8501\n\nCOPY . .\n\nCMD [\"streamlit\", \"run\", \"streamlit_app.py\"]\n\n# docker build --progress=plain --tag cartoonify:latest .\n# docker run -ti -p 8501:8501 --rm cartoonify:latest /bin/bash\n# docker run -ti -p 8501:8501 --rm cartoonify:latest\n# docker run -ti -p 8501:8501 -v ${pwd}:/app --rm cartoonify:latest\n# docker run -ti -p 8501:8501 -v ${pwd}:/app --rm cartoonify:latest /bin/bash\n"
}