{
  "startTime": 1674250191090,
  "endTime": 1674250192016,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 48
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:xenial\nMAINTAINER ops @opentargets <ops@opentargets.org>\n\n# Install required packages\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends python-software-properties \\\n    build-essential \\\n    supervisor \\\n    python-dev \\\n    python \\\n    wget \\\n    curl \\\n    ca-certificates \\\n    openssh-server \\\n    git \\\n    sqlite3 \\\n    nginx-extras \\\n    && rm -rf /var/lib/apt/lists/*\n\nRUN wget --no-check-certificate https://bootstrap.pypa.io/get-pip.py && \\\n    python get-pip.py\n\n\n# setup\nRUN mkdir -p /var/www/app \\\n    /var/www/app-conf \\\n    /var/log/supervisor \\\n    /var/log/app_engine \\\n    /var/cache/nginx/cache_proxy && \\\n    rm /etc/nginx/sites-enabled/default && \\\n    ln -sf /dev/stdout /var/log/nginx/access.log && \\\n    ln -sf /dev/stderr /var/log/nginx/error.log\n\n\n#copy configuration files\nCOPY docker/supervisord.conf /etc/supervisor/conf.d/supervisord.conf\nCOPY docker/nginx.conf /etc/nginx/\nCOPY docker/nginx-rest-api.conf /etc/nginx/sites-enabled/\nCOPY docker/nginx-proxy.conf /etc/nginx/sites-enabled/\nCOPY docker/nginx-servers.conf /etc/nginx/sites-enabled/\nCOPY docker/nginx-custom.conf /etc/nginx/sites-enabled/\nCOPY docker/selfsigned.server.crt /etc/ssl/nginx/server.crt\nCOPY docker/selfsigned.server.key /etc/ssl/nginx/server.key\n\n\nWORKDIR /var/www/app\n\n#copy requirements and install them\nCOPY requirements.txt /var/www/app\nRUN pip install --no-cache-dir -r /var/www/app/requirements.txt\n\n#copy the rest of the code (excluding what's in .dockerignore)\nCOPY . /var/www/app\n\n#declare app port\nEXPOSE 80 443 8080 8009\n\n#define entrypoint\nCOPY docker/docker-entrypoint.sh /\nRUN chmod +x /docker-entrypoint.sh\nENTRYPOINT [\"/docker-entrypoint.sh\"]\n\n#run supervisor to run uwsgi to run the flask app\nCMD [\"supervisord\"]\n"
}