{
  "startTime": 1674255315780,
  "endTime": 1674255316357,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 5,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 5,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 5,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 5,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 5,
        "columnEnd": 31
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.8-slim-buster\n\nENV PYTHONUNBUFFERED 1\n\nRUN apt-get update \\\n  # dependencies for building Python packages \\\n  && apt-get install --no-install-recommends -y build-essential \\\n  # psycopg2 dependencies\n  && apt-get install --no-install-recommends -y libpq-dev \\\n  # QR TOOLS\n  && apt-get install --no-install-recommends -y libzbar0 libzbar-dev \\\n  # misc dependencies\n  && apt-get install --no-install-recommends -y curl \\\n  # Translations dependencies\n  && apt-get install --no-install-recommends -y gettext \\\n  # cleaning up unused files\n  && apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false \\\n  && rm -rf /var/lib/apt/lists/*\n\nRUN addgroup --system django \\\n    && adduser --system --ingroup django django\n\n# Requirements are installed here to ensure they will be cached.\nCOPY ./requirements /requirements\nRUN pip install --no-cache-dir -r /requirements/production.txt \\\n    && rm -rf /requirements\n\nCOPY --chown=django:django ./compose/production/django/entrypoint /entrypoint\nRUN sed -i 's/\\r$//g' /entrypoint\nRUN chmod +x /entrypoint\n\n\nCOPY --chown=django:django ./compose/production/django/start /start\nRUN sed -i 's/\\r$//g' /start\nRUN chmod +x /start\nCOPY --chown=django:django ./compose/production/django/celery/worker/start /start-celeryworker\nRUN sed -i 's/\\r$//g' /start-celeryworker\nRUN chmod +x /start-celeryworker\n\n\nCOPY --chown=django:django ./compose/production/django/celery/beat/start /start-celerybeat\nRUN sed -i 's/\\r$//g' /start-celerybeat\nRUN chmod +x /start-celerybeat\n\n\nCOPY ./compose/production/django/celery/flower/start /start-flower\nRUN sed -i 's/\\r$//g' /start-flower\nRUN chmod +x /start-flower\nCOPY --chown=django:django . /app\n\nUSER django\n\nWORKDIR /app\n\nENTRYPOINT [\"/entrypoint\"]\n"
}