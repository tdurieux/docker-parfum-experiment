{
  "startTime": 1674253692107,
  "endTime": 1674253692847,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 5,
        "columnEnd": 53
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 5,
        "columnEnd": 28
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 15,
        "columnStart": 22,
        "columnEnd": 11
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 5,
        "columnEnd": 53
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 5,
        "columnEnd": 28
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG PYTHON_VERSION=3.9-slim-bullseye\n\n# define an alias for the specfic python version used in this file.\nFROM python:${PYTHON_VERSION} as python\n\n# Python build stage\nFROM python as python-build-stage\n\nARG BUILD_ENVIRONMENT=local\n\n# Install apt packages\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n  # dependencies for building Python packages\n  build-essential \\\n  # psycopg2 dependencies\n  libpq-dev \\\n  # QR TOOLS \\\n  && apt install --no-install-recommends -y libzbar0 libzbar-dev python3-zbar \\\n  # misc dependencies\n  && apt-get install --no-install-recommends -y curl && rm -rf /var/lib/apt/lists/*;\n\n# Requirements are installed here to ensure they will be cached.\nCOPY ./requirements .\n\n# Create Python Dependency and Sub-Dependency Wheels.\nRUN pip wheel --wheel-dir /usr/src/app/wheels  \\\n  -r ${BUILD_ENVIRONMENT}.txt\n\n\n# Python 'run' stage\nFROM python as python-run-stage\n\nARG BUILD_ENVIRONMENT=local\nARG APP_HOME=/app\n\nENV PYTHONUNBUFFERED 1\nENV PYTHONDONTWRITEBYTECODE 1\nENV BUILD_ENV ${BUILD_ENVIRONMENT}\n\nWORKDIR ${APP_HOME}\n\n# Install required system dependencies\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n  # psycopg2 dependencies\n  libpq-dev \\\n  # Translations dependencies\n  # qrcode deps \\\n  python3-zbar \\\n  gettext \\\n  # cleaning up unused files\n  && apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false \\\n  && rm -rf /var/lib/apt/lists/*\n\n# All absolute dir copies ignore workdir instruction. All relative dir copies are wrt to the workdir instruction\n# copy python dependency wheels from python-build-stage\nCOPY --from=python-build-stage /usr/src/app/wheels  /wheels/\n\n# use wheels to install python dependencies\nRUN pip install --no-cache-dir --no-index --find-links=/wheels/ /wheels/* \\\n\t&& rm -rf /wheels/\n\nCOPY ./compose/production/django/entrypoint /entrypoint\nRUN sed -i 's/\\r$//g' /entrypoint\nRUN chmod +x /entrypoint\n\nCOPY ./compose/local/django/start /start\nRUN sed -i 's/\\r$//g' /start\nRUN chmod +x /start\n\nCOPY ./compose/local/django/celery/worker/start /start-celeryworker\nRUN sed -i 's/\\r$//g' /start-celeryworker\nRUN chmod +x /start-celeryworker\n\nCOPY ./compose/local/django/celery/beat/start /start-celerybeat\nRUN sed -i 's/\\r$//g' /start-celerybeat\nRUN chmod +x /start-celerybeat\n\nCOPY ./compose/local/django/celery/flower/start /start-flower\nRUN sed -i 's/\\r$//g' /start-flower\nRUN chmod +x /start-flower\n\n# copy application code to WORKDIR\nCOPY . ${APP_HOME}\n\nENTRYPOINT [\"/entrypoint\"]\n"
}