{
  "startTime": 1674218643678,
  "endTime": 1674218644304,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 100
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 9,
        "columnEnd": 34
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 9,
        "columnEnd": 35
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 99
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 22,
        "columnEnd": 60
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 22,
        "columnEnd": 60
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nvidia/cuda:9.0-cudnn7-devel-ubuntu16.04\n\nARG HTTP_PROXY\nARG HTTPS_PROXY\nARG http_proxy\n\nRUN apt-get update && apt-get install --no-install-recommends --reinstall -y locales && locale-gen en_US.UTF-8 && rm -rf /var/lib/apt/lists/*;\nENV LANG en_US.UTF-8\nENV LANGUAGE en_US\nENV LC_ALL en_US.UTF-8\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n         build-essential \\\n         cmake \\\n         git \\\n         curl \\\n         vim \\\n         ca-certificates \\\n         libjpeg-dev \\\n\t     libpng16-16 \\\n\t     libtiff5 \\\n         libpng-dev \\\n         python-dev \\\n         python3.5 \\\n         python3.5-dev \\\n         python-networkx \\\n         python-setuptools \\\n         python3-setuptools \\\n         python-pip \\\n         python3-pip && \\\n         pip install --no-cache-dir --upgrade pip && \\\n         pip3 install --no-cache-dir --upgrade pip && \\\n         rm -rf /var/lib/apt/lists/*\n\n# installing conda\nRUN curl -f -o ~/miniconda.sh -LO https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh && \\\n     chmod +x ~/miniconda.sh && \\\n     ~/miniconda.sh -b -p /opt/conda && \\\n     rm ~/miniconda.sh && \\\n     /opt/conda/bin/conda clean -ya && \\\n     /opt/conda/bin/conda create -n python37 python=3.7 numpy networkx scipy six requests\n\nRUN packages='py_trees==0.8.3 shapely six dictor requests ephem tabulate' \\\n\t&& pip3 install --no-cache-dir ${packages}\n\nWORKDIR /workspace\nCOPY .tmp/PythonAPI /workspace/CARLA/PythonAPI\nENV CARLA_ROOT /workspace/CARLA\n\nENV PATH \"/workspace/CARLA/PythonAPI/carla/dist/carla-leaderboard.egg\":/opt/conda/envs/python37/bin:/opt/conda/envs/bin:$PATH\n\n# adding CARLA egg to default python environment\nRUN pip install --no-cache-dir --user setuptools py_trees==0.8.3 psutil shapely six dictor requests ephem tabulate\n\nENV SCENARIO_RUNNER_ROOT \"/workspace/scenario_runner\"\nENV LEADERBOARD_ROOT \"/workspace/leaderboard\"\nENV TEAM_CODE_ROOT \"/workspace/team_code\"\nENV PYTHONPATH \"/workspace/CARLA/PythonAPI/carla/dist/carla-leaderboard.egg\":\"${SCENARIO_RUNNER_ROOT}\":\"${CARLA_ROOT}/PythonAPI/carla\":\"${LEADERBOARD_ROOT}\":${PYTHONPATH}\n\nCOPY .tmp/scenario_runner ${SCENARIO_RUNNER_ROOT}\nCOPY .tmp/leaderboard ${LEADERBOARD_ROOT}\nCOPY .tmp/team_code ${TEAM_CODE_ROOT}\n\nRUN mkdir -p /workspace/results\nRUN chmod +x /workspace/leaderboard/scripts/run_evaluation.sh\n\n\n########################################################################################################################\n########################################################################################################################\n############                                BEGINNING OF USER COMMANDS                                      ############\n########################################################################################################################\n########################################################################################################################\n\nENV TEAM_AGENT ${TEAM_CODE_ROOT}/npc_agent.py\nENV TEAM_CONFIG ${TEAM_CODE_ROOT}/YOUR_CONFIG_FILE\nENV CHALLENGE_TRACK_CODENAME SENSORS\n\n########################################################################################################################\n########################################################################################################################\n############                                   END OF USER COMMANDS                                         ############\n########################################################################################################################\n########################################################################################################################\n\nENV SCENARIOS ${LEADERBOARD_ROOT}/data/all_towns_traffic_scenarios_public.json\nENV ROUTES ${LEADERBOARD_ROOT}/data/routes_training.xml\nENV REPETITIONS 1\nENV CHECKPOINT_ENDPOINT /workspace/results/results.json\nENV DEBUG_CHALLENGE 0\n\nENV HTTP_PROXY \"\"\nENV HTTPS_PROXY \"\"\nENV http_proxy \"\"\nENV https_proxy \"\"\n\n\nCMD [\"/bin/bash\"]\n"
}