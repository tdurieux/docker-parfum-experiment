{
  "startTime": 1674251389527,
  "endTime": 1674251390224,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 11,
        "columnStart": 7,
        "columnEnd": 19
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 7,
        "columnEnd": 44
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:bionic\n\nENV TZ=America/US\nENV DEBIAN_FRONTEND=noninteractive\n\nRUN apt update  \\\n    && apt upgrade -y \\\n    && apt install --no-install-recommends -y \\\n        ninja-build \\\n        software-properties-common \\\n        python3-dev \\\n        python3-pip \\\n    && apt clean \\\n    && add-apt-repository -y ppa:ubuntu-toolchain-r/test \\\n    && apt install --no-install-recommends -y gcc-5 g++-5 gcc-5-base \\\n    && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-5 100 \\\n    && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-5 100 \\\n    && rm -rf /var/lib/apt/lists/* \\\n    && pip3 install --no-cache-dir conan==1.45.0 cmake==3.21.0\n\nWORKDIR /app\n\nCOPY ./conanfile.txt ./conanfile.txt\nRUN ls\n\n\nRUN conan profile new default --detect \\\n    && conan profile update settings.compiler.libcxx=libstdc++11 default\\\n    && conan profile update settings.compiler=gcc default \\\n    && conan profile update settings.compiler.version=5 default \\\n    && conan profile update env.CXX=g++ default \\\n    && conan profile update env.CC=gcc default \\\n    && conan remote add cyberduckninja http://conan.cyberduckninja.com:9300 \\\n    && conan install -if build . --build missing -s build_type=Release -s compiler.libcxx=libstdc++11\n    # conan install ${{github.workspace}}/build/.. -if ${{github.workspace}}/build --build=missing -s build_type=Release\n\nCOPY ./header ./header\nCOPY ./source ./source\nCOPY ./test ./test\nCOPY ./benchmark ./benchmark\nCOPY ./examples ./examples\nCOPY ./cmake ./cmake\nCOPY ./CMakeLists.txt ./CMakeLists.txt\nWORKDIR ./build\n\nRUN ls\nRUN cmake .. -GNinja -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_STANDARD=11 -DALLOW_EXAMPLES=ON -DALLOW_TESTS=ON -DENABLE_TESTS_MEASUREMENTS=OFF -DALLOW_BENCHMARK=ON -DDEV_MODE=ON && \\\n    cmake --build .  --target all\n\nRUN ctest -C Release --output-on-failure #--extra-verbose  #--rerun-failed -R message-id\n\n"
}