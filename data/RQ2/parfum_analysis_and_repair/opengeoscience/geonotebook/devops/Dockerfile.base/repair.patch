diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/opengeoscience/geonotebook/devops/Dockerfile.base b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/opengeoscience/geonotebook/devops/Dockerfile.base/repaired.Dockerfile
index fc94512..58156e0 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/opengeoscience/geonotebook/devops/Dockerfile.base
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/opengeoscience/geonotebook/devops/Dockerfile.base/repaired.Dockerfile
@@ -3,7 +3,7 @@ FROM ubuntu:16.04
 # System requirements
 RUN apt-get update -y && apt-get upgrade -y
                        # Base dependencies
-RUN apt-get install -y gcc \
+RUN apt-get install --no-install-recommends -y gcc \
                        g++ \
                        make \
                        curl \
@@ -11,7 +11,7 @@ RUN apt-get install -y gcc \
                        wget \
                        git \
                        pkg-config \
-                       # Python/python-mapnik dependencies
+
                        libffi-dev \
                        libssl-dev \
                        python-dev \
@@ -19,9 +19,9 @@ RUN apt-get install -y gcc \
                        python3-setuptools \
                        python3-wheel \
                        python3-pip \
-                       # GDAL dependencies
+
                        libgeos-dev \
-                       # Mapnik dependencies
+
                        libboost-python1.58-dev \
                        libboost-filesystem1.58-dev \
                        libboost-program-options1.58-dev \
@@ -46,24 +46,24 @@ RUN apt-get install -y gcc \
                        libsqlite3-dev \
                        libproj-dev \
                        libjpeg-dev \
-                       libtiff5-dev
+                       libtiff5-dev && rm -rf /var/lib/apt/lists/*;
 
 # Python requirements
-RUN pip3 install -U pip tox
+RUN pip3 install --no-cache-dir -U pip tox
 
 # Source for mapnik, python-mapnik & GDAL
 RUN cd /root && \
     git clone -b v3.0.13 --recursive https://github.com/mapnik/mapnik.git && \
     git clone -b v3.0.13 --recursive https://github.com/mapnik/python-mapnik.git && \
-    curl -O http://download.osgeo.org/gdal/2.1.3/gdal-2.1.3.tar.gz && \
-    tar -xzf gdal-2.1.3.tar.gz
+    curl -f -O http://download.osgeo.org/gdal/2.1.3/gdal-2.1.3.tar.gz && \
+    tar -xzf gdal-2.1.3.tar.gz && rm gdal-2.1.3.tar.gz
 
 
 # Install GDAL
 # TODO:  configure here needs to be set up with more sophisticated
 #        options like --with-hdf4 --with-netcdf, etc. This will also
 #        require system libraries etc be installed
-RUN cd /root/gdal-2.1.3 && ./configure && make -j$(nproc) && make install && ldconfig
+RUN cd /root/gdal-2.1.3 && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" && make -j$(nproc) && make install && ldconfig
 
 # Install Mapnik
 RUN cd /root/mapnik && \
@@ -79,10 +79,10 @@ RUN cd /root/python-mapnik && \
 # Install python-mapnik
 # Note: This should not be nessisary,  except setup.py
 #       won't run AT ALL if python-mapnik isn't installed
-RUN pip install /root/python-mapnik/dist/*.whl
+RUN pip install --no-cache-dir /root/python-mapnik/dist/*.whl
 
 # Install nvm,  and nodejs v6
-RUN curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.1/install.sh | bash \
+RUN curl -f -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.1/install.sh | bash \
     && . /root/.bashrc && nvm install v6.10.1 && ln -s /root/.nvm/versions/node/v6.10.1/bin/npm /usr/bin/npm
 
 WORKDIR /root