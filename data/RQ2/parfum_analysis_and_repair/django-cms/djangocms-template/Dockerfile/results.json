{
  "startTime": 1674250632411,
  "endTime": 1674250632963,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 22,
        "columnEnd": 48
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 22,
        "columnEnd": 48
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:16 AS frontend-build\nCOPY frontend/package.json .\nCOPY frontend/yarn.lock .\nRUN yarn install --pure-lockfile && yarn cache clean;\nCOPY frontend/ .\nRUN yarn run build\n\n\nFROM python:3.9 as django-build\n\nRUN apt-get update && apt-get install --no-install-recommends -y gettext && rm -rf /var/lib/apt/lists/*;\n\nCOPY backend/requirements.txt /app/backend/requirements.txt\nRUN pip install --no-deps --no-cache-dir -r /app/backend/requirements.txt\n\nWORKDIR /app/\nCOPY . /app/\n# copies over the compiled sources from node image above\nCOPY --from=frontend-build /dist /app/frontend/dist\n\nRUN python manage.py collectstatic --noinput --ignore=node_modules\nRUN python manage.py compilemessages\n\n\nENV PORT=80\nCMD uwsgi --http=0.0.0.0:$PORT --module=backend.wsgi --master --workers=4 --max-requests=1000 --lazy-apps --need-app --http-keepalive --harakiri 65 --vacuum --strict --single-interpreter --die-on-term --disable-logging --log-4xx --log-5xx --cheaper=2 --enable-threads\n# some explanations\n# --strict means that uwsgi will quit if the app cannot startup, respectively throws an error on startup. That's convenient because of clear log entries.\n# the number of workers depend on how many CPU cores and how much memory the server has. For example, on a 4 core with 4GB RAM, if one worker takes 200MB of RAM, you can try 4 to 8 workers.\n# see https://www.techatbloomberg.com/blog/configuring-uwsgi-production-deployment/ to explain some of these settings\n# https://uwsgi-docs.readthedocs.io/en/latest/articles/TheArtOfGracefulReloading.html#preforking-vs-lazy-apps-vs-lazy\n"
}