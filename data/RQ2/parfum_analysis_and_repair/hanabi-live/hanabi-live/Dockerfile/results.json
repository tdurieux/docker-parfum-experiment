{
  "startTime": 1674247991890,
  "endTime": 1674247992691,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "## first build the client\nFROM node:16-buster\n\nRUN mkdir -p /root/hanabi-live\nWORKDIR /root/hanabi-live\nCOPY .env_template .env\nCOPY tsconfig.json tsconfig.json\nCOPY package.json package.json\nCOPY package-lock.json package-lock.json\nCOPY packages packages\nCOPY public public\nRUN npm install && npm cache clean --force;\n\n# needed only for git rev parse\nCOPY .git .git\n\nRUN packages/client/build_client.sh\n\n## then build the server\nFROM golang:1.17-buster\n\nRUN mkdir -p /root/hanabi-live\nWORKDIR /root/hanabi-live\nCOPY .env_template .env\nCOPY server server\n\nRUN server/build_server.sh\n\n## remove src code and copy build artifacts into a minimal image\n\nFROM alpine\n\nENTRYPOINT [\"/bin/sh\"]\n\n# was compiled against gnu libc above; musl is decently compatible\n# also needs git so server can get rev-parse head\nRUN apk update && apk add --no-cache libc6-compat git\n\nRUN mkdir -p /root/hanabi-live\nWORKDIR /root/hanabi-live\n\n# will need to be mounted on startup\nRUN touch .env\nCOPY packages/data packages/data\nCOPY misc misc\nRUN mkdir -p logs\nCOPY --from=0 /root/hanabi-live/public public\nCOPY --from=1 /root/hanabi-live/hanabi-live hanabi-live\nRUN chmod +x hanabi-live\nRUN mkdir -p server/src\n# needed at runtime, these are not compiled in\nCOPY server/src/views/ server/src/views/\n\n# only needed so server knows its git hash\nCOPY .git .git\n\nCMD [\"-c\", \"/root/hanabi-live/hanabi-live\"]\n"
}