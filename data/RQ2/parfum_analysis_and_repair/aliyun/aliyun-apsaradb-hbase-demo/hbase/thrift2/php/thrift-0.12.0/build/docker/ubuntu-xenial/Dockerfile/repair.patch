diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/aliyun/aliyun-apsaradb-hbase-demo/hbase/thrift2/php/thrift-0.12.0/build/docker/ubuntu-xenial/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/aliyun/aliyun-apsaradb-hbase-demo/hbase/thrift2/php/thrift-0.12.0/build/docker/ubuntu-xenial/Dockerfile/repaired.Dockerfile
index 3372b4d..79530b1 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/aliyun/aliyun-apsaradb-hbase-demo/hbase/thrift2/php/thrift-0.12.0/build/docker/ubuntu-xenial/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/aliyun/aliyun-apsaradb-hbase-demo/hbase/thrift2/php/thrift-0.12.0/build/docker/ubuntu-xenial/Dockerfile/repaired.Dockerfile
@@ -35,7 +35,7 @@ RUN apt-get update && \
       apt-utils \
       curl \
       software-properties-common \
-      wget
+      wget && rm -rf /var/lib/apt/lists/*;
 
 # csharp (mono)
 # RUN echo "deb http://download.mono-project.com/repo/debian xenial main" | tee /etc/apt/sources.list.d/mono.list && \
@@ -43,22 +43,22 @@ RUN apt-get update && \
 
 # D
 RUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys EBCF975E5BA24D5E && \
-    wget http://master.dl.sourceforge.net/project/d-apt/files/d-apt.list -O /etc/apt/sources.list.d/d-apt.list && \
+    wget https://master.dl.sourceforge.net/project/d-apt/files/d-apt.list -O /etc/apt/sources.list.d/d-apt.list && \
     wget -qO - https://dlang.org/d-keyring.gpg | apt-key add -
 
 # Dart
-RUN curl https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - && \
-    curl https://storage.googleapis.com/download.dartlang.org/linux/debian/dart_stable.list > \
+RUN curl -f https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - && \
+    curl -f https://storage.googleapis.com/download.dartlang.org/linux/debian/dart_stable.list > \
       /etc/apt/sources.list.d/dart_stable.list
 ENV DART_VERSION 1.22.1-1
 
 # dotnet (core)
-RUN curl https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > /etc/apt/trusted.gpg.d/microsoft.gpg && \
+RUN curl -f https://packages.microsoft.com/keys/microsoft.asc | gpg --batch --dearmor > /etc/apt/trusted.gpg.d/microsoft.gpg && \
     echo "deb [arch=amd64] https://packages.microsoft.com/repos/microsoft-ubuntu-xenial-prod xenial main" > \
       /etc/apt/sources.list.d/dotnetdev.list
 
 # node.js
-RUN curl -sL https://deb.nodesource.com/gpgkey/nodesource.gpg.key | apt-key add - && \
+RUN curl -f -sL https://deb.nodesource.com/gpgkey/nodesource.gpg.key | apt-key add - && \
     echo "deb https://deb.nodesource.com/node_6.x xenial main" | tee /etc/apt/sources.list.d/nodesource.list
 
 ### install general dependencies
@@ -76,7 +76,7 @@ RUN apt-get update && apt-get install -y --no-install-recommends \
       ninja-build \
       pkg-config \
       valgrind \
-      vim
+      vim && rm -rf /var/lib/apt/lists/*;
 ENV PATH /usr/lib/llvm-3.8/bin:$PATH
 
 ### languages
@@ -93,11 +93,11 @@ RUN apt-get install -y --no-install-recommends \
       libssl-dev \
       qt5-default \
       qtbase5-dev \
-      qtbase5-dev-tools
+      qtbase5-dev-tools && rm -rf /var/lib/apt/lists/*;
 
 RUN apt-get install -y --no-install-recommends \
 `# csharp (mono) dependencies` \
-      mono-devel
+      mono-devel && rm -rf /var/lib/apt/lists/*;
 
 ENV D_VERSION 2.075.1-0
 RUN apt-get install -y --allow-unauthenticated --no-install-recommends \
@@ -109,25 +109,25 @@ RUN apt-get install -y --allow-unauthenticated --no-install-recommends \
       dscanner \
       libevent-dev \
       libssl-dev \
-      xdg-utils
+      xdg-utils && rm -rf /var/lib/apt/lists/*;
 RUN mkdir -p /usr/include/dmd/druntime/import/deimos /usr/include/dmd/druntime/import/C && \
-    curl -sSL https://github.com/D-Programming-Deimos/libevent/archive/master.tar.gz| tar xz && \
+    curl -f -sSL https://github.com/D-Programming-Deimos/libevent/archive/master.tar.gz | tar xz && \
     mv libevent-master/deimos/* /usr/include/dmd/druntime/import/deimos/ && \
     mv libevent-master/C/* /usr/include/dmd/druntime/import/C/ && \
     rm -rf libevent-master
-RUN curl -sSL https://github.com/D-Programming-Deimos/openssl/archive/v1.1.6+1.0.1g.tar.gz | tar xz && \
+RUN curl -f -sSL https://github.com/D-Programming-Deimos/openssl/archive/v1.1.6+1.0.1g.tar.gz | tar xz && \
     mv openssl-1.1.6-1.0.1g/deimos/* /usr/include/dmd/druntime/import/deimos/ && \
     mv openssl-1.1.6-1.0.1g/C/* /usr/include/dmd/druntime/import/C/ && \
     rm -rf openssl-1.1.6-1.0.1g
 
 RUN apt-get install -y --no-install-recommends \
 `# Dart dependencies` \
-      dart=$DART_VERSION
+      dart=$DART_VERSION && rm -rf /var/lib/apt/lists/*;
 ENV PATH /usr/lib/dart/bin:$PATH
 
 RUN apt-get install -y --no-install-recommends \
 `# dotnet core dependencies` \
-      dotnet-sdk-2.1.4
+      dotnet-sdk-2.1.4 && rm -rf /var/lib/apt/lists/*;
 
 RUN apt-get install -y --no-install-recommends \
 `# Erlang dependencies` \
@@ -135,11 +135,11 @@ RUN apt-get install -y --no-install-recommends \
       erlang-eunit \
       erlang-dev \
       erlang-tools \
-      rebar
+      rebar && rm -rf /var/lib/apt/lists/*;
 
 RUN apt-get install -y --no-install-recommends \
 `# GlibC dependencies` \
-      libglib2.0-dev
+      libglib2.0-dev && rm -rf /var/lib/apt/lists/*;
 
 # golang
 ENV GOLANG_VERSION 1.7.6
@@ -160,7 +160,7 @@ RUN apt-get install -y --no-install-recommends \
     tar xzf cabal-install-1.24.0.2-x86_64-unknown-linux.tar.gz && \
     find dist-newstyle/ -type f -name cabal -exec mv {} /usr/bin \; && \
     rm -rf /tmp/cabal* && \
-    cabal --version
+    cabal --version && rm cabal-install-1.24.0.2-x86_64-unknown-linux.tar.gz && rm -rf /var/lib/apt/lists/*;
 
 RUN apt-get install -y --no-install-recommends \
 `# Haxe dependencies` \
@@ -169,7 +169,7 @@ RUN apt-get install -y --no-install-recommends \
       neko-dev \
       libneko0 && \
     haxelib setup --always /usr/share/haxe/lib && \
-    haxelib install --always hxcpp 3.4.64 2>&1 > /dev/null
+    haxelib install --always hxcpp 3.4.64 2>&1 > /dev/null && rm -rf /var/lib/apt/lists/*;
 # note: hxcpp 3.4.185 (latest) no longer ships static libraries, and caused a build failure
 
 RUN apt-get install -y --no-install-recommends \
@@ -177,25 +177,25 @@ RUN apt-get install -y --no-install-recommends \
       ant \
       ant-optional \
       openjdk-8-jdk \
-      maven
+      maven && rm -rf /var/lib/apt/lists/*;
 
 RUN apt-get install -y --no-install-recommends \
 `# Lua dependencies` \
       lua5.2 \
-      lua5.2-dev
+      lua5.2-dev && rm -rf /var/lib/apt/lists/*;
 # https://bugs.launchpad.net/ubuntu/+source/lua5.3/+bug/1707212
 # lua5.3 does not install alternatives so stick with 5.2 here
 
 RUN apt-get install -y --no-install-recommends \
 `# Node.js dependencies` \
-      nodejs
+      nodejs && rm -rf /var/lib/apt/lists/*;
 
 # Test dependencies for running puppeteer
 RUN apt-get install -y --no-install-recommends \
 `# JS dependencies` \
       libxss1 \
       libatk-bridge2.0-0 \
-      libgtk-3-0
+      libgtk-3-0 && rm -rf /var/lib/apt/lists/*;
 
 # THRIFT-4517: causes stack overflows; version too old; skip ocaml in xenial
 # RUN apt-get install -y --no-install-recommends \
@@ -211,7 +211,7 @@ RUN apt-get install -y --no-install-recommends \
       libclass-accessor-class-perl \
       libcrypt-ssleay-perl \
       libio-socket-ssl-perl \
-      libnet-ssleay-perl
+      libnet-ssleay-perl && rm -rf /var/lib/apt/lists/*;
 
 RUN apt-get install -y --no-install-recommends \
 `# Php dependencies` \
@@ -220,7 +220,7 @@ RUN apt-get install -y --no-install-recommends \
       php7.0-dev \
       php-pear \
       re2c \
-      composer
+      composer && rm -rf /var/lib/apt/lists/*;
 
 RUN apt-get install -y --no-install-recommends \
 `# Python dependencies` \
@@ -245,18 +245,18 @@ RUN apt-get install -y --no-install-recommends \
       python3-twisted \
       python3-wheel \
       python3-zope.interface && \
-    pip install --upgrade backports.ssl_match_hostname
+    pip install --no-cache-dir --upgrade backports.ssl_match_hostname && rm -rf /var/lib/apt/lists/*;
 
 RUN apt-get install -y --no-install-recommends \
 `# Ruby dependencies` \
       ruby \
       ruby-dev \
-      ruby-bundler
+      ruby-bundler && rm -rf /var/lib/apt/lists/*;
 
 RUN apt-get install -y --no-install-recommends \
 `# Rust dependencies` \
       cargo \
-      rustc
+      rustc && rm -rf /var/lib/apt/lists/*;
 
 # Clean up
 RUN rm -rf /var/cache/apt/* && \