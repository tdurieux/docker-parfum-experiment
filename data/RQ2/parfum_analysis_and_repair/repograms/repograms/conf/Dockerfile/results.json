{
  "startTime": 1674250908842,
  "endTime": 1674250909594,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 5,
        "columnEnd": 43
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 7,
        "columnStart": 5,
        "columnEnd": 17
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 21,
        "columnStart": 5,
        "columnEnd": 7
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 7,
        "columnStart": 5,
        "columnEnd": 17
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 21,
        "columnStart": 5,
        "columnEnd": 7
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:20.04\nLABEL org.opencontainers.image.authors=\"RepoGrams Team <github.com/RepoGrams/RepoGrams>\"\n\n# Install base utilities so we can use apt-key later\nRUN DEBIAN_FRONTEND=noninteractive apt-get update \\\n  && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y \\\n  gnupg2 \\\n  ca-certificates && rm -rf /var/lib/apt/lists/*;\n\n# Add the apt repository for python3-graph-tool\nRUN echo 'deb [arch=amd64] https://downloads.skewed.de/apt focal main' >> /etc/apt/sources.list\nRUN apt-key adv --no-tty --keyserver keys.openpgp.org --recv-key 612DEFB798507F25\n\n# Update apt and install dependencies\nRUN DEBIAN_FRONTEND=noninteractive apt-get update \\\n  && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y \\\n  python3 \\\n  python3-graph-tool \\\n  python3-pip \\\n  supervisor \\\n  python3-scipy \\\n  nginx && rm -rf /var/lib/apt/lists/*;\n\n# Install the required Python libraries using pip, minus the libraries that were already installed using apt\nCOPY conf/requirements.txt /root/requirements.txt\nRUN sed -e '/numpy/d' -e '/scipy/d' -i /root/requirements.txt \\\n  && pip3 install --no-cache-dir -r /root/requirements.txt \\\n  && rm /root/requirements.txt \\\n  && DEBIAN_FRONTEND=noninteractive apt-get purge -y python3-pip\n\n# Copy the server and client directories to be served\nRUN mkdir -p /var/www/build /var/log/app\nCOPY app /var/www/app\nCOPY public /var/www/public\n\n# Configure nginx and supervisor\nCOPY conf/repograms.conf /etc/nginx/sites-available/repograms\nRUN rm /etc/nginx/sites-enabled/default \\\n  && ln -s ../sites-available/repograms /etc/nginx/sites-enabled/repograms \\\n  && echo \"daemon off;\" >> /etc/nginx/nginx.conf \\\n  && nginx -t\nCOPY conf/supervisord.conf /etc/supervisor/conf.d/supervisord.conf\nRUN mkdir -p /var/log/supervisor\n\n# Fill in placeholders in the served files\nCOPY build /root/build\nRUN sed -i \"s/@@@BUILDINFO@@@/`cat /root/build/buildinfo.autobuild`/\" /var/www/public/index.html \\\n  && sed -i \"s/@@@BUILDDATE@@@/`cat /root/build/builddate.autobuild`/\" /var/www/public/icse2016/index.html \\\n  && if [ -f /root/build/extra-footer.html ]; then awk '{ if ($0 ~ /@@@EXTRAFOOTER@@@/) { while (getline < \"/root/build/extra-footer.html\") { print $0; } } else {print;} }' /var/www/public/index.html > /var/www/public/index.html.tmp && mv /var/www/public/index.html.tmp /var/www/public/index.html; fi \\\n  && if [ -f /root/build/example-states.js ]; then mv /root/build/example-states.js /var/www/public/scripts/example-states.js; fi \\\n  && rm -r /root/build\n"
}