{
  "startTime": 1674217321472,
  "endTime": 1674217323063,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 111
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 5,
        "columnEnd": 122
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 100
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 7,
        "columnEnd": 105
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 7,
        "columnEnd": 144
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 84,
        "lineEnd": 84,
        "columnStart": 5,
        "columnEnd": 106
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 7,
        "columnEnd": 63
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 7,
        "columnEnd": 61
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 85,
        "lineEnd": 85,
        "columnStart": 5,
        "columnEnd": 61
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#------------------------------------------------#\n# NGSeasy Dev Tool Box\n#------------------------------------------------#\n\n# Base image\nFROM compbio/ngseasy-base:latest\n\n# Maintainer\nMAINTAINER Stephen Newhouse stephen.j.newhouse@gmail.com\n\n# Set correct environment variables.\nENV HOME /root\nENV DEBIAN_FRONTEND noninteractive\n\n# Update\nRUN apt-get update -y && apt-get upgrade -y\n\n# FastQC & Trimmomatic ---------------------------------------------------------------------\n\nRUN wget -O /tmp/fastqc_v0.11.2.zip https://www.bioinformatics.babraham.ac.uk/projects/fastqc/fastqc_v0.11.2.zip \\\n  && unzip /tmp/fastqc_v0.11.2.zip -d /usr/local/pipeline/ \\\n  && chown -R pipeman:ngsgroup /usr/local/pipeline/FastQC \\\n  && sed -i '$aCLASSPATH=.:${CLASSPATH}:/usr/local/pipeline/FastQC/jbzip2-0.9.jar:/usr/local/pipeline/FastQC/sam-1.103.jar' /home/pipeman/.bashrc \\\n  && sed -i '$aPATH=${PATH}:/usr/local/pipeline/FastQC' /home/pipeman/.bashrc \\\n  && echo \"alias ngsFastqc='/usr/local/pipeline/FastQC'\" >>  /home/pipeman/.bashrc \\\n  && cp -vr /usr/local/pipeline/FastQC/fastqc /usr/local/bin \\\n  && wget -O /tmp/Trimmomatic-0.32.zip https://www.usadellab.org/cms/uploads/supplementary/Trimmomatic/Trimmomatic-0.32.zip \\\n  && unzip /tmp/Trimmomatic-0.32.zip -d /usr/local/pipeline/ \\\n  && chown -R pipeman:ngsgroup /usr/local/pipeline/Trimmomatic-0.32 \\\n  && sed -i '$aCLASSPATH=.:${CLASSPATH}:/usr/local/pipeline/Trimmomatic-0.32/trimmomatic-0.32.jar' /home/pipeman/.bashrc \\\n  && sed -i '$aPATH=${PATH}:/usr/local/pipeline/Trimmomatic-0.32' /home/pipeman/.bashrc \\\n  && echo \"alias ngsTrimfq='/usr/local/pipeline/Trimmomatic-0.32'\" >>  /home/pipeman/.bashrc \\\n  && cp -vr /usr/local/pipeline/Trimmomatic-0.32/* /usr/local/bin \\\n   \n# picard ---------------------------------------------------------------------- \\\nwg t -O /tmp/picard-tools-1.119.zip http \\\n    && mkdir /usr/local/pipeline/picardtools \\\n    && unzip /tmp/picard-tools-1.119.zip -d /usr/local/pipeline/ \\\n    && chown -R pipeman:ngsgroup /usr/local/pipeline/picardtools \\\n    && sed -i '$aCLASSPATH=.:${CLASSPATH}:/usr/local/pipeline/picardtools/picard-tools-1.119/snappy-jav \\\n    && sed -i '$aPATH=${PATH}:/usr/local/pipeline/picardtools/picard-tools-1.119' /home/pipeman/.bashrc \\\n    && echo \"alias ngsPicard='/usr/local/pipeline/picardtools/picard-tools-1.119'\n\n# Aligners ---------------------------------------------------------------------\n# bwa, stampy, bowtie2\n# manually build novoalign and commit local image\n\nRUN wget -O /tmp/bwa-0.7.10.tar.bz2 https://sourceforge.net/projects/bio-bwa/files/bwa-0.7.10.tar.bz2 \\\n    && tar xjvf /tmp/bwa-0.7.10.tar.bz2 -C /usr/local/pipeline/ \\\n    && cd /usr/local/pipeline/bwa-0.7.10 && make \\\n    && chown -R pipeman:ngsgroup /usr/local/pipeline/bwa-0.7.10 \\\n    && sed -i '$aPATH=${PATH}:/usr/local/pipeline/bwa-0.7.10' /home/pipeman/.bashrc \\\n    && sed -i '$aPATH=${PATH}:/usr/local/pipeline/bwa-0.7.10' ~/.bashrc \\\n    && echo \"alias ngsBWA='/usr/local/pipeline/bwa-0.7.10'\" >>  /home/pipeman/.bashrc \\\n    && cp -vr /usr/local/pipeline/bwa-0.7.10/* /usr/local/bin \\\n    && wget -O /tmp/stampy-latest.tgz https://www.well.ox.ac.uk/~gerton/software/Stampy/stampy-latest.tgz \\\n    && tar xvf /tmp/stampy-latest.tgz -C /usr/local/pipeline/ \\\n    && sed -i 's/-Wl//' /usr/local/pipeline/stampy-1.0.23/makefile \\\n    && chmod -R 755 /usr/local/pipeline/stampy-1.0.23 \\\n    && cd /usr/local/pipeline/stampy-1.0.23 && make \\\n    && chown -R pipeman:ngsgroup /usr/local/pipeline/stampy-1.0.23 \\\n    && sed -i '$aPATH=${PATH}:/usr/local/pipeline/stampy-1.0.23' /home/pipeman/.bashrc \\\n    && echo \"alias ngsStampy='/usr/local/pipeline/stampy-1.0.23'\" >>  /home/pipeman/.bashrc \\\n    && cp -vr /usr/local/pipeline/stampy-1.0.23/* /usr/local/bin \\\n    && wget -O /tmp/bowtie2-2.2.4-linux-x86_64.zip https://sourceforge.net/projects/bowtie-bio/files/bowtie2/2.2.4/bowtie2-2.2.4-linux-x86_64.zip \\\n    && unzip /tmp/bowtie2-2.2.4-linux-x86_64.zip -d /usr/local/pipeline/ \\\n    && chown -R pipeman:ngsgroup /usr/local/pipeline/bowtie2-2.2.4 \\\n    && sed  -i '$aPATH=${PATH}:/usr/local/pipeline/bowtie2-2.2.4:/usr/local/pipeline/bowtie2-2.2.4/scripts' /home/pipeman/.bashrc \\\n    && sed  -i '$aPATH=${PATH}:/usr/local/pipeline/bowtie2-2.2.4:/usr/local/pipeline/bowtie2-2.2.4/scripts' ~/.bashrc \\\n    && echo \"alias ngsBowtie2='/usr/local/pipeline/bowtie2-2.2.4'\" >>  /home/pipeman/.bashrc \\\n    && cp -vr /usr/local/pipeline/bowtie2-2.2.4/* /usr/local/bin && rm /tmp/bwa-0.7.10.tar.bz2\n\n# Variant callers -------------------------------------------------------------------------------------\n\nRUN cd /usr/local/pipeline \\\n  && git clone --recursive git://github.com/ekg/freebayes.git \\\n  && cd /usr/local/pipeline/freebayes \\\n  && make \\\n  && chmod -R 755 /usr/local/pipeline/freebayes \\\n  && chown -R pipeman:ngsgroup /usr/local/pipeline/freebayes \\\n  && sed -i '$aPATH=${PATH}:/usr/local/pipeline/freebayes/bin' /home/pipeman/.bashrc \\\n  && echo \"alias ngsFreebayes='/usr/local/pipeline/freebayes/bin'\" >>  /home/pipeman/.bashrc \\\n  && cp -vr /usr/local/pipeline/freebayes/bin/* /usr/local/bin \\\n  && wget -O /tmp/Platypus-latest.tgz https://www.well.ox.ac.uk/bioinformatics/Software/Platypus-latest.tgz \\\n  && tar xvf /tmp/Platypus-latest.tgz -C /usr/local/pipeline/ \\\n  && cd /usr/local/pipeline/Platypus_0.7.9.1 \\\n  && sh ./buildPlatypus.sh \\\n  && chmod -R 755 /usr/local/pipeline/Platypus_0.7.9.1 \\\n  && chown -R pipeman:ngsgroup /usr/local/pipeline/Platypus_0.7.9.1 \\\n  && sed -i '$aPATH=${PATH}:/usr/local/pipeline/Platypus_0.7.9.1' /home/pipeman/.bashrc \\\n  && echo \"alias ngsPlatypus='/usr/local/pipeline/Platypus_0.7.9.1'\" >>  /home/pipeman/.bashrc \\\n  && cp -vr /usr/local/pipeline/Platypus_0.7.9.1/* /usr/local/bin \\\n  && mkdir /usr/local/pipeline/bcbio \\\n  && cd /usr/local/pipeline/bcbio \\\n  && wget https://github.com/chapmanb/bcbio.variation/releases/download/v0.1.9/bcbio.variation-0.1.9-standalone.jar \\\n  && sed -i '$aCLASSPATH=.:${CLASSPATH}:/usr/local/pipeline/bcbio/bcbio.variation-0.1.9-standalone.jar' /home/pipeman/.bashrc \\\n  && sed -i '$aPATH=${PATH}:/usr/local/pipeline/bcbio/' /home/pipeman/.bashrc \\\n  && sed -i '$aPATH=${PATH}:/usr/local/pipeline/bcbio/' ~/.bashrc \\\n  && echo \"alias ngsBCBIOVAR'/usr/local/pipeline/bcbio/'\" >>  /home/pipeman/.bashrc \\\n  && cp -vr /usr/local/pipeline/bcbio/* /usr/local/bin && rm /tmp/Platypus-latest.tgz\n\n\n#-------------------------------PERMISSIONS--------------------------\nRUN chmod -R 777 /usr/local/pipeline\nRUN chown -R pipeman:ngsgroup /usr/local/pipeline\n\n#---------------------------------------------------------------------\n#Cleanup the temp dir\nRUN rm -rf /tmp/*\n\n#open ports private only\nEXPOSE 80\n\n# Use baseimage-docker's bash.\nCMD [\"/bin/bash\"]\n\n#Clean up APT when done.\nRUN apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\nRUN apt-get autoclean && apt-get autoremove -y && rm -rf /var/lib/{apt,dpkg,cache,log}/\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
}