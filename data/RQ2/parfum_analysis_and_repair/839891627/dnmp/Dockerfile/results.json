{
  "startTime": 1674218339474,
  "endTime": 1674218340698,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 29,
        "columnEnd": 40
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 38,
        "columnEnd": 49
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 39,
        "columnEnd": 50
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 38,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 7,
        "columnEnd": 117
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 7,
        "columnEnd": 117
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 7,
        "columnEnd": 59
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 7,
        "columnEnd": 117
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG PHP_VERSION\nFROM php:${PHP_VERSION}-fpm\n\n# 替换成 清华大学源加速。真快\nCOPY ./resources/sources.list /etc/apt/\n\n# 安装 composer 以及一些 php 扩展\nRUN curl -f -sS https://getcomposer.org/installer | php \\\n    && mv composer.phar /usr/local/bin/composer \\\n    && composer config -g repo.packagist composer https://mirrors.aliyun.com/composer/ \\\n    && apt-get update -y \\\n    && apt-get install -y --no-install-recommends apt-utils \\\n    && apt-get install -y --no-install-recommends -qq git curl libmcrypt-dev libjpeg-dev libpng-dev libfreetype6-dev libbz2-dev libzip-dev unzip \\\n    && docker-php-ext-configure gd --with-freetype-dir=/usr/include/  --with-jpeg-dir=/usr/include/ \\\n    && docker-php-ext-install pdo_mysql zip gd opcache bcmath pcntl sockets && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /tmp\n\n# 安装 redis 扩展\nADD ./resources/redis-5.1.1.tgz .\nRUN mkdir -p /usr/src/php/ext \\\n    && mv /tmp/redis-5.1.1 /usr/src/php/ext/redis \\\n    && docker-php-ext-install redis && rm -rf /usr/src/php/ext\n\n# 以下注释按需打开（某些项目需要 npm 啥的）\n# 安装 python3\nADD ./resources/Python-2.7.18.tar.xz .\nRUN cd /tmp/Python-2.7.18 && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make && make install && rm -rf /tmp/Python-2.7.18 Python-2.7.18.tar.xz\n\n# 安装 nodejs\nADD ./resources/node-v14.18.1-linux-x64.tar.xz .\nRUN ln -s /tmp/node-v14.18.1-linux-x64/bin/node /usr/bin/node \\\n    && ln -s /tmp/node-v14.18.1-linux-x64/bin/npm /usr/bin/npm\n\n# 安装 swoole\n#COPY ./resources/swoole-src-4.4.12.zip .\n#RUN cd /tmp && unzip swoole-src-4.4.12.zip \\\n#    && cd swoole-src-4.4.12 && phpize && ./configure \\\n#    && make && make install && rm -rf /tmp/swoole*\n\nADD ./resources/mcrypt-1.0.3.tgz .\nRUN cd /tmp/mcrypt-1.0.3 && phpize && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make && make install && rm -rf /tmp/mcrypt-1.0.3\n\nADD ./resources/mongodb-1.6.0.tgz .\nRUN cd /tmp/mongodb-1.6.0 && phpize && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make && make install && rm -rf /tmp/mongodb-1.6.0\n\nADD ./resources/xdebug-3.0.1.tgz .\nRUN cd /tmp/xdebug-3.0.1 && phpize && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make && make install && rm -rf /tmp/xdebug-3.0.1\n\nCMD php-fpm\n"
}