{
  "startTime": 1674254236932,
  "endTime": 1674254237732,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 24,
        "lineEnd": 26,
        "columnStart": 7,
        "columnEnd": 23
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Modified from https://github.com/michael0liver/python-poetry-docker-example/blob/master/docker/Dockerfile\n# Provided under the MIT license: https://github.com/michael0liver/python-poetry-docker-example/blob/master/LICENCE\n\nARG PYTHON_IMAGE_TAG=3.7-stretch\n\n# Creating a python base with shared environment variables\nFROM python:${PYTHON_IMAGE_TAG} as python-base\n\nENV PYTHONUNBUFFERED=1 \\\n    PYTHONDONTWRITEBYTECODE=1 \\\n    PIP_NO_CACHE_DIR=off \\\n    PIP_DISABLE_PIP_VERSION_CHECK=on \\\n    PIP_DEFAULT_TIMEOUT=100 \\\n    POETRY_VIRTUALENVS_IN_PROJECT=true \\\n    POETRY_NO_INTERACTION=1 \\\n    PYSETUP_PATH=\"/opt/pysetup\" \\\n    VENV_PATH=\"/opt/pysetup/.venv\"\n\nENV PATH=\"$POETRY_HOME/bin:$VENV_PATH/bin:$PATH\"\n\n\n# builder-base is used to build dependencies\nFROM python-base as builder-base\nRUN apt-get update \\\n    && apt-get install --no-install-recommends -y \\\n        curl \\\n        build-essential && rm -rf /var/lib/apt/lists/*;\n\n# Install Poetry\nENV POETRY_VERSION=1.0.5\nRUN pip install --no-cache-dir \"poetry==$POETRY_VERSION\"\n\n# We copy our Python requirements here to cache them\n# and install only runtime deps using poetry\nWORKDIR $PYSETUP_PATH\nCOPY ./poetry.lock ./pyproject.toml ./\nRUN poetry install --no-dev --no-root\n\n\n# 'production' stage uses the clean 'python-base' stage and copyies\n# in only our runtime deps that were installed in the 'builder-base'\nFROM python-base as production\n\nLABEL maintainer=\"{{ cookiecutter.company_name if cookiecutter.company_name else cookiecutter.full_name }}\"\nCOPY --from=builder-base $VENV_PATH $VENV_PATH\n\nCOPY ./src /app\nWORKDIR /app\n\nENTRYPOINT [\"python\", \"-OO\", \"-m\", \"{{ cookiecutter.module_name }}.main\"]\n"
}