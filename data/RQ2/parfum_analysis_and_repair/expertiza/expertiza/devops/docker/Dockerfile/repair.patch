diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/expertiza/expertiza/devops/docker/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/expertiza/expertiza/devops/docker/Dockerfile/repaired.Dockerfile
index 0e06b89..f14f67c 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/expertiza/expertiza/devops/docker/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/expertiza/expertiza/devops/docker/Dockerfile/repaired.Dockerfile
@@ -2,28 +2,28 @@ FROM ruby:2.3
 
 # Install OpenJDK-8
 RUN apt-get update && \
-    apt-get install -y openjdk-8-jdk && \
-    apt-get install -y ant && \
-    apt-get clean;
+    apt-get install --no-install-recommends -y openjdk-8-jdk && \
+    apt-get install --no-install-recommends -y ant && \
+    apt-get clean; rm -rf /var/lib/apt/lists/*;
 
 # Fix certificate assues
 RUN apt-get update && \
-    apt-get install ca-certificates-java && \
+    apt-get install -y --no-install-recommends ca-certificates-java && \
     apt-get clean && \
-    update-ca-certificates -f;
+    update-ca-certificates -f; rm -rf /var/lib/apt/lists/*;
 
 # Setup JAVA_HOME -- useful for docker commandline
 ENV JAVA_HOME /usr/lib/jvm/java-8-openjdk-amd64/
 RUN export JAVA_HOME
- 
+
 
 RUN bundle config --global frozen 1
 
-# Install apt based dependencies required to run Rails as 
-# well as RubyGems. As the Ruby image itself is based on a 
+# Install apt based dependencies required to run Rails as
+# well as RubyGems. As the Ruby image itself is based on a
 # Debian image, we use apt-get to install those.
-RUN apt-get update && apt-get install -y \ 
-  build-essential \ 
+RUN apt-get update && apt-get install --no-install-recommends -y \
+  build-essential \
   nodejs \
   git \
   ruby-dev \
@@ -34,20 +34,20 @@ RUN apt-get update && apt-get install -y \
   libssl-dev \
   libreadline6-dev \
   libyaml-dev \
-  libpq-dev
+  libpq-dev && rm -rf /var/lib/apt/lists/*;
 
-# Configure the main working directory. This is the base 
-# directory used in any further RUN, COPY, and ENTRYPOINT 
+# Configure the main working directory. This is the base
+# directory used in any further RUN, COPY, and ENTRYPOINT
 # commands.
-RUN mkdir -p /app 
+RUN mkdir -p /app
 WORKDIR /app
 
-# Copy the Gemfile as well as the Gemfile.lock and install 
-# the RubyGems. This is a separate step so the dependencies 
-# will be cached unless changes to one of those two files 
+# Copy the Gemfile as well as the Gemfile.lock and install
+# the RubyGems. This is a separate step so the dependencies
+# will be cached unless changes to one of those two files
 # are made.
-COPY Gemfile Gemfile.lock ./ 
-RUN gem install bundler && bundle install 
+COPY Gemfile Gemfile.lock ./
+RUN gem install bundler && bundle install
 
 # Copy the main application.
 COPY . ./