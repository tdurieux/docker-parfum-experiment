{
  "startTime": 1674246092718,
  "endTime": 1674246093481,
  "originalSmells": [
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 16,
        "columnStart": 1,
        "columnEnd": 76
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 24,
        "lineEnd": 25,
        "columnStart": 1,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# This is a two-stage Docker build where we use a more fully featured Debian\n# image to build Marian and the required Python modules, then copy the built\n# artifacts into a much smaller final image.\n\nFROM debian:buster as builder\n\nWORKDIR /usr/src/app\n\n# Install base packages\nRUN set -eux; \\\n\tapt-get update; \\\n\tapt-get install -y --no-install-recommends \\\n\t\tca-certificates git wget gnupg build-essential lsb-release g++ \\\n\t\tautomake autogen libtool cmake-data cmake unzip \\\n\t\tlibboost-all-dev libblas-dev libopenblas-dev libz-dev libssl-dev \\\n\t\tlibprotobuf17 protobuf-compiler libprotobuf-dev \\\n\t\tpython3-dev python3-pip python3-setuptools python3-websocket python3-venv; rm -rf /var/lib/apt/lists/*;\n\n# Install Intel libraries\nRUN set -eux; \\\n\twget https://apt.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS-2019.PUB; \\\n\tapt-key add GPG-PUB-KEY-INTEL-SW-PRODUCTS-2019.PUB; \\\n\tsh -c 'echo deb https://apt.repos.intel.com/mkl all main > /etc/apt/sources.list.d/intel-mkl.list'; \\\n\tapt-get update; \\\n\tapt-get install -y --no-install-recommends \\\n\t\tintel-mkl-64bit-2019.5-075; rm -rf /var/lib/apt/lists/*; \\\n\trm -f GPG-PUB-KEY-INTEL-SW-PRODUCTS-2019.PUB;\n\n\n# Build Marian, using static libraries so we can simply pluck the compiled\n# marian-server out later\nRUN set -eux; \\\n\tgit clone https://github.com/marian-nmt/marian marian; \\\n\tcd marian; \\\n\tgit checkout 1.9.0; \\\n\tcmake . -DUSE_STATIC_LIBS=on -DCOMPILE_SERVER=on -DUSE_SENTENCEPIECE=on -DCOMPILE_CPU=on -DCOMPILE_CUDA=off -DAVX512_FOUND=false;  \\\n\tmake -j4 marian_server ;\n\nCOPY requirements.txt .\n\n# Install python requirements.  First we upgrade to the latest pip so it can\n# support \"manylinux2014\" binary wheels.\n\n# First wheel, because the others won't work without it set up.\nRUN set -eux; \\\n        python3 -mvenv venv ; venv/bin/pip install --upgrade pip ; \\\n\tvenv/bin/pip install -r requirements.txt\n\n\n# Start over from the minimal \"slim\" python base image\nFROM python:3.7-slim-buster\n\nWORKDIR /usr/src/app\n\n# Include just the marian-server binary and the Python virtual environment from\n# the build image - we don't need all the Marian sources, intermediate build\n# artifacts, other Marian binaries, MKL libraries, etc.\nCOPY --from=builder /usr/src/app/marian/marian-server /usr/local/bin\nCOPY --from=builder /usr/src/app/venv /usr/src/app/venv/\n\n# Install perl modules required by moses, and fix up the venv as python is\n# in a different place in the \"python\" base image compared to where apt\n# installs it in debian:stable\nRUN set -ex ; \\\n\tapt-get update; \\\n\tapt-get install -y --no-install-recommends perl ; \\\n        rm -rf /var/lib/apt/lists/* ; \\\n        ln -sf /usr/local/bin/python3 /usr/src/app/venv/bin/python3\n"
}