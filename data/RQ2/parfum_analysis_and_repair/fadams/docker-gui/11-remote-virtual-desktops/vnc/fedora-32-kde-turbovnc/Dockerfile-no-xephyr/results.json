{
  "startTime": 1674252359255,
  "endTime": 1674252360219,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 19,
        "columnEnd": 77
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 152
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 79
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 77
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 77
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 4,
        "columnEnd": 56
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n#\n\nFROM fedora-kde-vgl:32\n\nRUN dnf -y install \\\n    chkconfig xorg-x11-fonts-base xorg-x11-fonts-75dpi \\\n    xorg-x11-fonts-100dpi numpy python-setuptools \\\n    xorg-x11-server-Xvfb && \\\n    # Attempt to work out the latest turbovnc version from\n    # https://sourceforge.net/projects/turbovnc/files/\n    TVNC_VERSION=$( curl -f -sSL https://sourceforge.net/projects/turbovnc/files/ | grep \"<span class=\\\"name\\\">[0-9]\" | head -n 1 | cut -d \\> -f2 | cut -d \\< -f1) && \\\n    echo \"turbovnc version: ${TVNC_VERSION}\" && \\\n    curl -f -sSL https://sourceforge.net/projects/turbovnc/files/${TVNC_VERSION}/turbovnc-${TVNC_VERSION}.x86_64.rpm -o turbovnc-${TVNC_VERSION}.x86_64.rpm && \\\n    rpm -i turbovnc-*.x86_64.rpm && \\\n    rm turbovnc-*.x86_64.rpm && \\\n    ln -snf /opt/TurboVNC/bin/Xvnc /usr/bin/Xvnc && \\\n    # Download websockify\n    WS_VERSION=0.9.0 && \\\n    curl -f -sSL https://github.com/novnc/websockify/archive/v${WS_VERSION}.tar.gz | tar -xzv -C /usr/local/bin && \\\n    cd /usr/local/bin/websockify-${WS_VERSION} && \\\n    python setup.py install && \\\n    # Download noVNC\n    NOVNC_VERSION=1.1.0 && \\\n    NOVNC=/usr/local/bin/noVNC-${NOVNC_VERSION} && \\\n    APP=/usr/local/bin/noVNC/app && \\\n    curl -f -sSL https://github.com/novnc/noVNC/archive/v${NOVNC_VERSION}.tar.gz | tar -xzv -C /usr/local/bin && \\\n    # Temporarily install Node.js and npm to transpile\n    # ECMAScript 6 modules. As well as speeding up load times\n    # on browsers that don't support modules this circumvents\n    # an issue with pre 0.9.12 LibVNCServer where the MIME\n    # type for Javascript was set incorrectly causing Chrome\n    # to reject them due to strict MIME type checking being\n    # enabled for modules.\n    curl -f -sSL https://nodejs.org/dist/v10.16.3/node-v10.16.3-linux-x64.tar.xz | tar -xJv -C /usr/local/lib && \\\n    NODE=/usr/local/lib/node-v10.16.3-linux-x64/bin && \\\n    ln -s ${NODE}/node /usr/local/bin/node && \\\n    ln -s ${NODE}/npm /usr/local/bin/npm && \\\n    ln -s ${NODE}/npx /usr/local/bin/npx && \\\n    npm install -g es6-module-transpiler && \\\n    npm install -g @babel/core @babel/cli && \\\n    npm install -g @babel/preset-env && \\\n    ln -s ${NODE}/babel /usr/local/bin/babel && \\\n    ln -s ${NODE}/compile-modules \\\n          /usr/local/bin/compile-modules && \\\n    cd ${NOVNC} && \\\n    # Tweak the vnc.html to use the transpiled app.js\n    # instead of modules.\n    sed -i 's/type=\"module\" crossorigin=\"anonymous\" src=\"app\\/ui.js\"/src=\"app.js\"/g' vnc.html && \\\n    sed -i 's/<script src=\"vendor\\/promise.js\"><\\/script>//g' vnc.html && \\\n    sed -i 's/if (window._noVNC_has_module_support) //g' vnc.html && \\\n    # Transpile the Javascript to speed up loading and\n    # allow it to work on a wider variety of browsers.\n    echo '{\"presets\": [\"@babel/preset-env\"]}' > .babelrc && \\\n    npm install --save-dev @babel/core @babel/preset-env && \\\n    compile-modules convert app/ui.js > app.js && \\\n    babel app.js --out-file app.js && \\\n    mkdir -p ${APP} && \\\n    mv ${NOVNC}/app/images ${APP}/images && \\\n    mv ${NOVNC}/app/locale ${APP}/locale && \\\n    mv ${NOVNC}/app/sounds ${APP}/sounds && \\\n    mv ${NOVNC}/app/styles ${APP}/styles && \\\n    mv ${NOVNC}/app/error-handler.js \\\n       ${APP}/error-handler.js && \\\n    mv ${NOVNC}/app.js ${APP}.js && \\\n    mv ${NOVNC}/vnc.html \\\n       /usr/local/bin/noVNC/index.html && \\\n    # Tidy up\n    rm -rf ${NOVNC} && \\\n    rm -rf /usr/local/lib/node-v10.16.3-linux-x64 && \\\n    rm -rf /root/.npm && \\\n    rm /usr/local/bin/node && \\\n    rm /usr/local/bin/npm && \\\n    rm /usr/local/bin/npx && \\\n    # Create systemd service to launch noVNC\n    echo -e '[Unit]\\nDescription=HTML5 VNC WebSocket proxy\\nAfter=syslog.target network.target\\n\\n[Service]\\nUser=lightdm\\nType=simple\\nExecStart=/usr/local/bin/websockify 5800 localhost:5900 --web /usr/local/bin/noVNC\\nTimeoutStopSec=20\\nKillMode=process\\nRestart=always\\nRestartSec=2\\n\\n[Install]\\nWantedBy=multi-user.target\\nAlias=websocket.service\\n' > /lib/systemd/system/websocket.service && \\\n    ln -snf /lib/systemd/system/websocket.service \\\n       /etc/systemd/system/multi-user.target.wants/websocket.service && \\\n    # LightDM needs an X Server, though we don't use it.\n    echo -e '#!/bin/bash\\nXvfb $1 -ac' > \\\n         /usr/bin/Xvfb-lightdm-wrapper && \\\n    chmod +x /usr/bin/Xvfb-lightdm-wrapper && \\\n    # Create Turbovnc-lightdm-wrapper\n    echo -e '#!/bin/bash\\nRFBPORT=$((5900+${1#:}))\\nXvnc $1 -ac -nolisten tcp -localhost -rfbport $RFBPORT -rfbauth /tmp/lightdm/.vnc/passwd&\\nXVNC_PID=$!\\ncleanup() {\\n  kill -TERM $XVNC_PID\\n}\\ntrap cleanup SIGINT SIGTERM EXIT\\nsleep 0.25\\nkill -USR1 $PPID\\nsocat - TCP:localhost:$RFBPORT' > /usr/bin/Turbovnc-lightdm-wrapper && \\\n    chmod +x /usr/bin/Turbovnc-lightdm-wrapper && \\\n    echo -e '[LightDM]\\nminimum-display-number=1\\n[Seat:*]\\nxserver-command=/usr/bin/Xvfb-lightdm-wrapper\\n[VNCServer]\\nenabled=true\\ndepth=24\\ncommand=Turbovnc-lightdm-wrapper' > /etc/lightdm/lightdm.conf.d/70-fedora.conf && npm cache clean --force;\n\n#-------------------------------------------------------------------------------\n# Example usage\n#\n# Build the image\n# docker build -t fedora-kde-turbovnc:32 -f Dockerfile-no-xephyr .\n\n"
}