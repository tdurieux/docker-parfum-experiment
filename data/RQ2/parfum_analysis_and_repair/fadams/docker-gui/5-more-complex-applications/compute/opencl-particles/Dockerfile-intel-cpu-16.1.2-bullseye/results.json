{
  "startTime": 1674220205366,
  "endTime": 1674220206593,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 108
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n#\n\nFROM debian:bullseye-slim\n\n# Driver Version 1.2.0.37\n# Device Version OpenCL 1.2 (Build 37)\nENV RUNTIME opencl_runtime_16.1.2_x64_rh_6.4.0.37\n\nRUN apt-get update && DEBIAN_FRONTEND=noninteractive \\\n    # Add the packages\n    apt-get install -y --no-install-recommends \\\n    ocl-icd-libopencl1 ocl-icd-opencl-dev libnuma1 libtinfo5 clinfo \\\n    libxmu-dev freeglut3-dev libglew-dev libgl1-mesa-glx \\\n    libgl1-mesa-dri wget ca-certificates tar rpm2cpio cpio gcc g++ make && \\\n    # Add the Intel OpenCL Installable Client Driver \n    wget -O ${RUNTIME}.tgz \"https://registrationcenter-download.intel.com/akdlm/irc_nas/12556/${RUNTIME}.tgz\" && \\\n    tar zxfp ${RUNTIME}.tgz && \\\n    cd ${RUNTIME}/rpm && \\\n    rpm2cpio opencl-1.2-intel-cpu-6.4.0.37-1.x86_64.rpm | cpio -idmv && \\\n    mkdir -p /opt/intel/opencl && \\\n    cp ./opt/intel/opencl-1.2-6.4.0.37/lib64/* /opt/intel/opencl && \\\n    # Add ICD to the ICD registry\n    mkdir -p /etc/OpenCL/vendors && \\\n    echo \"/opt/intel/opencl/libintelocl.so\" > /etc/OpenCL/vendors/intel_cpu.icd && \\\n    # Download the Nvidia SDK which includes the OpenCL samples.\n    # Note that the samples listed at https://developer.nvidia.com/opencl\n    # are incomplete, missing the \"shared\" and \"common\" code needed to\n    # compile! We therefore pull the 4.2.9 SDK here, because that is the\n    # last version to include the full compilable OpenCL source tree.\n    cd /usr/local/src && \\\n    wget -O gpucomputingsdk_4.2.9_linux.run \"https://developer.download.nvidia.com/compute/cuda/4_2/rel/sdk/gpucomputingsdk_4.2.9_linux.run\" && \\\n    chmod +x gpucomputingsdk_4.2.9_linux.run && \\\n    ./gpucomputingsdk_4.2.9_linux.run --tar xfp && \\\n    rm gpucomputingsdk_4.2.9_linux.run install-sdk-linux.pl && \\\n    mv sdk/OpenCL sdk/shared . && \\\n    rm -rf sdk && rm -rf shared/lib/linux && \\\n    sed -i 's/GLEW_x86_64/GLEW/' /usr/local/src/OpenCL/common/common_opencl.mk && \\\n    sed -i 's/-Wimplicit//' /usr/local/src/OpenCL/common/common_opencl.mk && \\\n    # Replace hard-coded CL_DEVICE_TYPE_GPU with CL_DEVICE_TYPE_CPU\n    # so the samples will work (as far as possible) on Intel CPU device.\n    for i in $(grep -rwl /usr/local/src/OpenCL/src -e CL_DEVICE_TYPE_GPU); do sed -i 's/CL_DEVICE_TYPE_GPU/CL_DEVICE_TYPE_CPU/' $i; done && \\\n    cd OpenCL && \\\n    mv src/oclParticles . && rm -rf src/* && mv oclParticles src/. && \\\n    make && \\\n    chmod 777 /usr/local/bin && \\\n    mkdir -p /usr/local/bin/src && \\\n    cp /usr/local/src/OpenCL/bin/linux/release/oclParticles /usr/local/bin/. && \\\n    cp /usr/local/src/OpenCL/src/oclParticles/*.cl /usr/local/bin/src/. && \\\n    # Remove packages used for installation\n    rm /${RUNTIME}.tgz && \\\n    rm -rf /${RUNTIME} && \\\n    rm -rf /usr/local/src/* && \\\n    apt-get clean && \\\n    apt-get purge -y wget ca-certificates rpm2cpio cpio gcc g++ make && \\\n    apt-get autoremove -y && \\\n\trm -rf /var/lib/apt/lists/*\n\n# Set WORKDIR and use relative path as this example uses Nvidia's\n# shrFindFilePath to find the kernel directory and using the absolute\n# path doesn't work correctly.\nWORKDIR /usr/local/bin/\nENTRYPOINT [\"oclParticles\"]\n\n#-------------------------------------------------------------------------------\n# Example usage\n#\n# Build the image\n# docker build -t opencl-particles-intel-cpu -f Dockerfile-intel-cpu-16.1.2-bullseye .\n\n"
}