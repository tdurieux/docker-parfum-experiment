{
  "startTime": 1674254581629,
  "endTime": 1674254582300,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 21,
        "lineEnd": 24,
        "columnStart": 2,
        "columnEnd": 23
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 25,
        "lineEnd": 28,
        "columnStart": 2,
        "columnEnd": 27
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.8\n\nENV INSTALL_PATH /server\n\nRUN mkdir -p ${INSTALL_PATH}\nWORKDIR ${INSTALL_PATH}\n\nRUN \\\n  export DEBIAN_FRONTEND=noninteractive && \\\n  apt-get update && \\\n  apt-get install --no-install-recommends -y lz4 && \\\n  apt-get clean && \\\n  rm -rf /var/lib/apt/lists/*\n\nCOPY requirements.txt requirements.txt\nCOPY requirements-web.txt requirements-web.txt\n\n# Install third-party dependencies. Ensure any dependencies installed with the\n# -e flag will be installed to a common directory instead of the current working\n# directory.\nRUN \\\n  pip install --no-cache-dir \\\n    --cache-dir /pip.cache \\\n    --src /usr/local/src \\\n    -r requirements.txt && \\\n  pip install --no-cache-dir \\\n    --cache-dir /pip.cache \\\n    --src /usr/local/src \\\n    -r requirements-web.txt\n\n# Remove testing directories that are inexplicably *always installed* by pip.\n# There appears to be no way to prevent that from happening. Also remove pyc\n# files since they should be generated inside the container. This saves almost\n# 100MB (30%) of the third-party dependency size..\nRUN \\\n  rm -rf /usr/local/lib/python3.8/site-packages/*/tests && \\\n  rm -rf /usr/local/lib/python3.8/site-packages/*/*/tests && \\\n  find /usr/local/lib/python3.8/site-packages -name '*.pyc' -delete\n\n# Copy over python code.\nCOPY config config\nCOPY data data\nCOPY db db\nCOPY log log\nCOPY models models\nCOPY graphql graphql\nCOPY util util\nCOPY web/*.py web/\nCOPY web/server web/server\n"
}