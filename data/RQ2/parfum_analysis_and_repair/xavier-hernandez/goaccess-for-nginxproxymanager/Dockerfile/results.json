{
  "startTime": 1674252675125,
  "endTime": 1674252676104,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 55
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.16.0 AS builder\n\nRUN apk add --no-cache \\\n        build-base \\\n        libmaxminddb-dev \\\n        ncurses-dev \\\n        musl-libintl\n\n# set up goacess\nWORKDIR /goaccess\nRUN wget https://tar.goaccess.io/goaccess-1.6.tar.gz\nRUN tar --strip-components=1 -xzvf goaccess-1.6.tar.gz && rm goaccess-1.6.tar.gz\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-utf8 --enable-geoip=mmdb --with-getline\nRUN make\nRUN make install\n\nFROM alpine:3.16.0\nRUN apk add --no-cache \\\n        bash \\\n        nginx \\\n        tini \\\n        wget \\\n        curl \\\n        apache2-utils\\\n        libmaxminddb \\\n        tzdata \\        \n        ncurses && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    rm /etc/nginx/nginx.conf\n\nCOPY --from=builder /goaccess /goaccess\nCOPY /resources/goaccess/goaccess.conf /goaccess-config/goaccess.conf.bak\nCOPY /resources/goaccess/GeoLite2-City.mmdb /goaccess-config/GeoLite2-City.mmdb\n\n# set up nginx\nCOPY /resources/nginx/nginx.conf /etc/nginx/nginx.conf\nADD /resources/nginx/.htpasswd /opt/auth/.htpasswd\n\nWORKDIR /goan\nADD /resources/scripts/funcs funcs\nADD /resources/scripts/logs logs\nCOPY /resources/scripts/start.sh start.sh\n\nVOLUME [\"/opt/log\"]\nVOLUME [\"/opt/custom\"]\nEXPOSE 7880\nCMD [\"bash\", \"/goan/start.sh\"]"
}