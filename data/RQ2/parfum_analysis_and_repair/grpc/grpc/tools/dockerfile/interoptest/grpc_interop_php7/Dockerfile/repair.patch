diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/grpc/grpc/tools/dockerfile/interoptest/grpc_interop_php7/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/grpc/grpc/tools/dockerfile/interoptest/grpc_interop_php7/Dockerfile/repaired.Dockerfile
index ff97f11..710bfac 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/grpc/grpc/tools/dockerfile/interoptest/grpc_interop_php7/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/grpc/grpc/tools/dockerfile/interoptest/grpc_interop_php7/Dockerfile/repaired.Dockerfile
@@ -18,28 +18,28 @@ FROM debian:11
 # Basic C core dependencies
 
 # C/C++ dependencies according to https://github.com/grpc/grpc/blob/master/BUILDING.md
-RUN apt-get update && apt-get install -y \
+RUN apt-get update && apt-get install --no-install-recommends -y \
   build-essential \
   autoconf \
   libtool \
   pkg-config \
-  && apt-get clean
+  && apt-get clean && rm -rf /var/lib/apt/lists/*;
 
 # GCC
-RUN apt-get update && apt-get install -y \
+RUN apt-get update && apt-get install --no-install-recommends -y \
   gcc \
   g++ \
-  && apt-get clean
+  && apt-get clean && rm -rf /var/lib/apt/lists/*;
 
 # libc6
-RUN apt-get update && apt-get install -y \
+RUN apt-get update && apt-get install --no-install-recommends -y \
   libc6 \
   libc6-dbg \
   libc6-dev \
-  && apt-get clean
+  && apt-get clean && rm -rf /var/lib/apt/lists/*;
 
 # Tools
-RUN apt-get update && apt-get install -y \
+RUN apt-get update && apt-get install --no-install-recommends -y \
   bzip2 \
   curl \
   dnsutils \
@@ -51,7 +51,7 @@ RUN apt-get update && apt-get install -y \
   unzip \
   wget \
   zip \
-  && apt-get clean
+  && apt-get clean && rm -rf /var/lib/apt/lists/*;
 
 #====================
 # run_tests.py python dependencies
@@ -59,12 +59,12 @@ RUN apt-get update && apt-get install -y \
 # Basic python dependencies to be able to run tools/run_tests python scripts
 # These dependencies are not sufficient to build gRPC Python, gRPC Python
 # deps are defined elsewhere (e.g. python_deps.include)
-RUN apt-get update && apt-get install -y \
+RUN apt-get update && apt-get install --no-install-recommends -y \
   python3 \
   python3-pip \
   python3-setuptools \
   python3-yaml \
-  && apt-get clean
+  && apt-get clean && rm -rf /var/lib/apt/lists/*;
 
 # use pinned version of pip to avoid sudden breakages
 RUN python3 -m pip install --upgrade pip==19.3.1
@@ -82,7 +82,7 @@ RUN python3 -m pip install --upgrade google-auth==1.23.0 google-api-python-clien
 # PHP7 dependencies
 
 # PHP specific dependencies
-RUN apt-get update && apt-get install -y \
+RUN apt-get update && apt-get install --no-install-recommends -y \
   libbison-dev \
   libcurl4-openssl-dev \
   libgmp-dev \
@@ -91,14 +91,14 @@ RUN apt-get update && apt-get install -y \
   libxml2-dev \
   re2c \
   zlib1g-dev \
-  && apt-get clean
+  && apt-get clean && rm -rf /var/lib/apt/lists/*;
 
 # Compile PHP7 from source
 RUN git clone https://github.com/php/php-src /var/local/git/php-src
 RUN cd /var/local/git/php-src \
   && git checkout PHP-7.2.34 \
   && ./buildconf --force \
-  && ./configure \
+  && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
   --with-gmp \
   --with-openssl \
   --with-zlib \
@@ -106,21 +106,21 @@ RUN cd /var/local/git/php-src \
   && make install
 
 # Install composer
-RUN curl -sS https://getcomposer.org/installer | php
+RUN curl -f -sS https://getcomposer.org/installer | php
 RUN mv composer.phar /usr/local/bin/composer
 
 #=================
 # Install cmake
 # Note that this step should be only used for distributions that have new enough cmake to satisfy gRPC's cmake version requirement.
 
-RUN apt-get update && apt-get install -y cmake && apt-get clean
+RUN apt-get update && apt-get install --no-install-recommends -y cmake && apt-get clean && rm -rf /var/lib/apt/lists/*;
 
 #=================
 # Install ccache
 
 # Install ccache from source since ccache 3.x packaged with most linux distributions
 # does not support Redis backend for caching.
-RUN curl -sSL -o ccache.tar.gz https://github.com/ccache/ccache/releases/download/v4.5.1/ccache-4.5.1.tar.gz \
+RUN curl -f -sSL -o ccache.tar.gz https://github.com/ccache/ccache/releases/download/v4.5.1/ccache-4.5.1.tar.gz \
     && tar -zxf ccache.tar.gz \
     && cd ccache-4.5.1 \
     && mkdir build && cd build \