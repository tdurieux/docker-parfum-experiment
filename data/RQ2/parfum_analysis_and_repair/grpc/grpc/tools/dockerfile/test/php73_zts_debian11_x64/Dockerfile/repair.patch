diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/grpc/grpc/tools/dockerfile/test/php73_zts_debian11_x64/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/grpc/grpc/tools/dockerfile/test/php73_zts_debian11_x64/Dockerfile/repaired.Dockerfile
index f157b24..9540b68 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/grpc/grpc/tools/dockerfile/test/php73_zts_debian11_x64/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/grpc/grpc/tools/dockerfile/test/php73_zts_debian11_x64/Dockerfile/repaired.Dockerfile
@@ -15,10 +15,10 @@
 # debian 11 = "bullseye"
 FROM php:7.3-zts-bullseye
 
-RUN apt-get update && apt-get install -y \
+RUN apt-get update && apt-get install --no-install-recommends -y \
   autoconf automake build-essential git libtool curl \
   zlib1g-dev \
-  && apt-get clean
+  && apt-get clean && rm -rf /var/lib/apt/lists/*;
 
 # install php pthreads from source
 # TODO(jtattermusch): is this really needed?
@@ -27,7 +27,7 @@ WORKDIR /tmp
 RUN git clone https://github.com/krakjoe/pthreads
 RUN cd pthreads && \
   phpize && \
-  ./configure && \
+  ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" && \
   make && \
   make install
 
@@ -37,12 +37,12 @@ RUN cd pthreads && \
 # Basic python dependencies to be able to run tools/run_tests python scripts
 # These dependencies are not sufficient to build gRPC Python, gRPC Python
 # deps are defined elsewhere (e.g. python_deps.include)
-RUN apt-get update && apt-get install -y \
+RUN apt-get update && apt-get install --no-install-recommends -y \
   python3 \
   python3-pip \
   python3-setuptools \
   python3-yaml \
-  && apt-get clean
+  && apt-get clean && rm -rf /var/lib/apt/lists/*;
 
 # use pinned version of pip to avoid sudden breakages
 RUN python3 -m pip install --upgrade pip==19.3.1
@@ -57,21 +57,21 @@ RUN python3 -m pip install --upgrade google-auth==1.23.0 google-api-python-clien
 
 
 # Install composer
-RUN curl -sS https://getcomposer.org/installer | php
+RUN curl -f -sS https://getcomposer.org/installer | php
 RUN mv composer.phar /usr/local/bin/composer
 
 #=================
 # Install cmake
 # Note that this step should be only used for distributions that have new enough cmake to satisfy gRPC's cmake version requirement.
 
-RUN apt-get update && apt-get install -y cmake && apt-get clean
+RUN apt-get update && apt-get install --no-install-recommends -y cmake && apt-get clean && rm -rf /var/lib/apt/lists/*;
 
 #=================
 # Install ccache
 
 # Install ccache from source since ccache 3.x packaged with most linux distributions
 # does not support Redis backend for caching.
-RUN curl -sSL -o ccache.tar.gz https://github.com/ccache/ccache/releases/download/v4.5.1/ccache-4.5.1.tar.gz \
+RUN curl -f -sSL -o ccache.tar.gz https://github.com/ccache/ccache/releases/download/v4.5.1/ccache-4.5.1.tar.gz \
     && tar -zxf ccache.tar.gz \
     && cd ccache-4.5.1 \
     && mkdir build && cd build \