diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/grpc/grpc/tools/dockerfile/test/csharp_debian11_arm64/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/grpc/grpc/tools/dockerfile/test/csharp_debian11_arm64/Dockerfile/repaired.Dockerfile
index 0fba8e1..ed2edcb 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/grpc/grpc/tools/dockerfile/test/csharp_debian11_arm64/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/grpc/grpc/tools/dockerfile/test/csharp_debian11_arm64/Dockerfile/repaired.Dockerfile
@@ -18,28 +18,28 @@ FROM arm64v8/debian:11
 # Basic C core dependencies
 
 # C/C++ dependencies according to https://github.com/grpc/grpc/blob/master/BUILDING.md
-RUN apt-get update && apt-get install -y \
+RUN apt-get update && apt-get install --no-install-recommends -y \
   build-essential \
   autoconf \
   libtool \
   pkg-config \
-  && apt-get clean
+  && apt-get clean && rm -rf /var/lib/apt/lists/*;
 
 # GCC
-RUN apt-get update && apt-get install -y \
+RUN apt-get update && apt-get install --no-install-recommends -y \
   gcc \
   g++ \
-  && apt-get clean
+  && apt-get clean && rm -rf /var/lib/apt/lists/*;
 
 # libc6
-RUN apt-get update && apt-get install -y \
+RUN apt-get update && apt-get install --no-install-recommends -y \
   libc6 \
   libc6-dbg \
   libc6-dev \
-  && apt-get clean
+  && apt-get clean && rm -rf /var/lib/apt/lists/*;
 
 # Tools
-RUN apt-get update && apt-get install -y \
+RUN apt-get update && apt-get install --no-install-recommends -y \
   bzip2 \
   curl \
   dnsutils \
@@ -51,7 +51,7 @@ RUN apt-get update && apt-get install -y \
   unzip \
   wget \
   zip \
-  && apt-get clean
+  && apt-get clean && rm -rf /var/lib/apt/lists/*;
 
 #====================
 # run_tests.py python dependencies
@@ -59,12 +59,12 @@ RUN apt-get update && apt-get install -y \
 # Basic python dependencies to be able to run tools/run_tests python scripts
 # These dependencies are not sufficient to build gRPC Python, gRPC Python
 # deps are defined elsewhere (e.g. python_deps.include)
-RUN apt-get update && apt-get install -y \
+RUN apt-get update && apt-get install --no-install-recommends -y \
   python3 \
   python3-pip \
   python3-setuptools \
   python3-yaml \
-  && apt-get clean
+  && apt-get clean && rm -rf /var/lib/apt/lists/*;
 
 # use pinned version of pip to avoid sudden breakages
 RUN python3 -m pip install --upgrade pip==19.3.1
@@ -82,22 +82,22 @@ RUN python3 -m pip install --upgrade google-auth==1.23.0 google-api-python-clien
 # C# dependencies
 
 # cmake >=3.6 needed to build grpc_csharp_ext
-RUN apt-get update && apt-get install -y cmake && apt-get clean
+RUN apt-get update && apt-get install --no-install-recommends -y cmake && apt-get clean && rm -rf /var/lib/apt/lists/*;
 
 # Install mono
-RUN apt-get update && apt-get install -y apt-transport-https dirmngr && apt-get clean
+RUN apt-get update && apt-get install --no-install-recommends -y apt-transport-https dirmngr && apt-get clean && rm -rf /var/lib/apt/lists/*;
 RUN apt-key adv --no-tty --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF
 RUN echo "deb https://download.mono-project.com/repo/debian stable-buster main" | tee /etc/apt/sources.list.d/mono-official-stable.list
-RUN apt-get update && apt-get install -y \
+RUN apt-get update && apt-get install --no-install-recommends -y \
     mono-devel \
     ca-certificates-mono \
     nuget \
-    && apt-get clean
+    && apt-get clean && rm -rf /var/lib/apt/lists/*;
 
 # Install .NET Core 3.1 (to be able to run the netcoreapp3.1 targets)
 RUN DOTNET_DOWNLOAD_VERSION=3.1.415 \
     && DOTNET_DOWNLOAD_ARCH="$(uname -m | sed s/x86_64/x64/ | sed s/aarch64/arm64/)" \
-    && curl -sSL -o dotnet.tar.gz https://dotnetcli.blob.core.windows.net/dotnet/Sdk/$DOTNET_DOWNLOAD_VERSION/dotnet-sdk-$DOTNET_DOWNLOAD_VERSION-linux-$DOTNET_DOWNLOAD_ARCH.tar.gz \
+    && curl -f -sSL -o dotnet.tar.gz https://dotnetcli.blob.core.windows.net/dotnet/Sdk/$DOTNET_DOWNLOAD_VERSION/dotnet-sdk-$DOTNET_DOWNLOAD_VERSION-linux-$DOTNET_DOWNLOAD_ARCH.tar.gz \
     && mkdir -p /usr/share/dotnet \
     && tar -zxf dotnet.tar.gz -C /usr/share/dotnet \
     && rm dotnet.tar.gz
@@ -105,7 +105,7 @@ RUN DOTNET_DOWNLOAD_VERSION=3.1.415 \
 # Install .NET 6
 RUN DOTNET_DOWNLOAD_VERSION=6.0.100 \
     && DOTNET_DOWNLOAD_ARCH="$(uname -m | sed s/x86_64/x64/ | sed s/aarch64/arm64/)" \
-    && curl -sSL -o dotnet.tar.gz https://dotnetcli.blob.core.windows.net/dotnet/Sdk/$DOTNET_DOWNLOAD_VERSION/dotnet-sdk-$DOTNET_DOWNLOAD_VERSION-linux-$DOTNET_DOWNLOAD_ARCH.tar.gz \
+    && curl -f -sSL -o dotnet.tar.gz https://dotnetcli.blob.core.windows.net/dotnet/Sdk/$DOTNET_DOWNLOAD_VERSION/dotnet-sdk-$DOTNET_DOWNLOAD_VERSION-linux-$DOTNET_DOWNLOAD_ARCH.tar.gz \
     && mkdir -p /usr/share/dotnet \
     && tar -zxf dotnet.tar.gz -C /usr/share/dotnet \
     && rm dotnet.tar.gz
@@ -126,7 +126,7 @@ RUN mkdir warmup \
 
 # Install ccache from source since ccache 3.x packaged with most linux distributions
 # does not support Redis backend for caching.
-RUN curl -sSL -o ccache.tar.gz https://github.com/ccache/ccache/releases/download/v4.5.1/ccache-4.5.1.tar.gz \
+RUN curl -f -sSL -o ccache.tar.gz https://github.com/ccache/ccache/releases/download/v4.5.1/ccache-4.5.1.tar.gz \
     && tar -zxf ccache.tar.gz \
     && cd ccache-4.5.1 \
     && mkdir build && cd build \