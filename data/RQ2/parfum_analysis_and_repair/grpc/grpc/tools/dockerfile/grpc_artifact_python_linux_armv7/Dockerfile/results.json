{
  "startTime": 1674254472616,
  "endTime": 1674254473566,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 7,
        "columnEnd": 111
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 20,
        "columnStart": 18,
        "columnEnd": 82
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 20,
        "columnStart": 18,
        "columnEnd": 82
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright 2020 The gRPC Authors\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# The aarch64 wheels are being crosscompiled to allow running the build\n# on x64 machine. The dockcross/linux-armv7 image is a x86_64\n# image with crosscompilation toolchain installed\nFROM dockcross/linux-armv7\n\nRUN apt update && apt install --no-install-recommends -y build-essential zlib1g-dev libncurses5-dev libgdbm-dev \\\n                                 libnss3-dev libssl-dev libreadline-dev libffi-dev && apt-get clean && rm -rf /var/lib/apt/lists/*;\n\nADD install_python_for_wheel_crosscompilation.sh /scripts/install_python_for_wheel_crosscompilation.sh\n\nRUN /scripts/install_python_for_wheel_crosscompilation.sh \"3.6.13\" \"3.6.13\" /opt/python/cp36-cp36m\nRUN /scripts/install_python_for_wheel_crosscompilation.sh \"3.7.10\" \"3.7.10\" /opt/python/cp37-cp37m\nRUN /scripts/install_python_for_wheel_crosscompilation.sh \"3.8.8\" \"3.8.8\" /opt/python/cp38-cp38\nRUN /scripts/install_python_for_wheel_crosscompilation.sh \"3.9.2\" \"3.9.2\" /opt/python/cp39-cp39\nRUN /scripts/install_python_for_wheel_crosscompilation.sh \"3.10.0\" \"3.10.0rc1\" /opt/python/cp310-cp310\n\nENV AUDITWHEEL_ARCH armv7l\nENV AUDITWHEEL_PLAT linux_armv7l\n\n#=================\n# Install ccache\n\n# Install ccache from source since ccache 3.x packaged with most linux distributions\n# does not support Redis backend for caching.\nRUN unset CMAKE_TOOLCHAIN_FILE && unset AS AR CC CPP CXX LD \\\n    && curl -f -sSL -o ccache.tar.gz https://github.com/ccache/ccache/releases/download/v4.5.1/ccache-4.5.1.tar.gz \\\n    && tar -zxf ccache.tar.gz \\\n    && cd ccache-4.5.1 \\\n    && mkdir build && cd build \\\n    && cmake -DCMAKE_BUILD_TYPE=Release -DZSTD_FROM_INTERNET=ON -DHIREDIS_FROM_INTERNET=ON .. \\\n    && make -j4 && make install \\\n    && cd ../.. \\\n    && rm -rf ccache-4.5.1 ccache.tar.gz\n\n# The dockcross base of this image sets CC and CXX to absolute paths, which makes it impossible to redirect their invocations\n# to ccache via a symlink. Use relative paths instead.\nENV CC ${CROSS_TRIPLE}-gcc\nENV CXX ${CROSS_TRIPLE}-g++\n\n# For historical reasons, task_runner.py the script under docker container using \"bash -l\"\n# which loads /etc/profile on startup. dockcross/linux-armv7 is based on an image where\n# /etc/profile overwrites contents of PATH (for security reasons) when run as root.\n# That causes the crosscompiler binaries located under /usr/xcc/armv7-unknown-linux-gnueabi/bin\n# to be removed from PATH. Since in our builds we don't need the /etc/profile for anything, we can just\n# truncate it.\n# TODO(jtattermusch): Remove this hack when possible.\nRUN echo \"# file contents removed to avoid resetting PATH set by the docker image\" >/etc/profile\n"
}