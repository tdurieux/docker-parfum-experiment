{
  "startTime": 1674214999868,
  "endTime": 1674215000974,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 74,
        "lineEnd": 74,
        "columnStart": 58,
        "columnEnd": 116
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 79,
        "lineEnd": 88,
        "columnStart": 4,
        "columnEnd": 13
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 22,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 53,
        "lineEnd": 65,
        "columnStart": 22,
        "columnEnd": 17
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 67,
        "lineEnd": 71,
        "columnStart": 22,
        "columnEnd": 14
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 88,
        "columnEnd": 123
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 22,
        "columnEnd": 44
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 53,
        "lineEnd": 65,
        "columnStart": 22,
        "columnEnd": 17
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 67,
        "lineEnd": 71,
        "columnStart": 22,
        "columnEnd": 14
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 88,
        "columnEnd": 123
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright 2020 gRPC authors\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     https://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nFROM debian:buster\n\nARG REPOSITORY=grpc/grpc\nARG GITREF=master\n\n# when BREAK_CACHE arg is set to a random value (e.g. by \"--build-arg BREAK_CACHE=$(uuidgen)\"),\n# it makes sure the docker cache breaks at this command, and all the following\n# commands in this Dockerfile will be forced to re-run on each build.\n# This is important to ensure we always clone the repository even if \"GITREF\" stays unchanged\n# (important e.g. when GITREF=master, when the clone command could get cached and\n# we'd end up with a stale repository).\nARG BREAK_CACHE\n\nRUN apt-get update && apt-get install --no-install-recommends -y git && rm -rf /var/lib/apt/lists/*;\n\nRUN mkdir -p /src/code\nWORKDIR /src/code\n\nRUN git clone https://github.com/$REPOSITORY.git .\nRUN git submodule update --init\nRUN git checkout $GITREF\n\nFROM l.gcr.io/google/bazel:3.5.0\n\nCOPY --from=0 /src/code /src/code\nRUN mkdir -p /tmp/build_output\nWORKDIR /src/code\nRUN bazel --output_user_root=/tmp/build_output build --config opt //test/cpp/qps:qps_json_driver\n\nFROM debian:buster\n\nRUN mkdir -p /src/driver\nRUN mkdir -p /src/code\nRUN mkdir -p /src/workspace\nWORKDIR /src/workspace\n\nCOPY --from=1 /tmp/build_output /tmp/build_output\nCOPY --from=1 /src/code /src/code\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n  autoconf \\\n  build-essential \\\n  clang \\\n  curl \\\n  git \\\n  make \\\n  libtool \\\n  libgflags-dev \\\n  pkg-config \\\n  gnupg \\\n  apt-transport-https \\\n  ca-certificates && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n  python3-dev \\\n  python3-pip \\\n  python3-setuptools \\\n  python3-yaml && rm -rf /var/lib/apt/lists/*;\n\nRUN echo \"deb [signed-by=/usr/share/keyrings/cloud.google.gpg] http://packages.cloud.google.com/apt cloud-sdk main\" | \\\n  tee -a /etc/apt/sources.list.d/google-cloud-sdk.list && curl -f https://packages.cloud.google.com/apt/doc/apt-key.gpg | \\\n  apt-key --keyring /usr/share/keyrings/cloud.google.gpg  add - && apt-get update -y && apt-get install --no-install-recommends google-cloud-sdk -y && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get clean\n\nRUN pip3 install --no-cache-dir \\\n  protobuf \\\n  google-api-python-client \\\n  oauth2client \\\n  google-auth-oauthlib \\\n  tabulate \\\n  py-dateutil \\\n  pyasn1_modules==0.2.2 \\\n  pyasn1==0.4.2 \\\n  six==1.15.0\n\nCOPY . /src/driver\nRUN chmod a+x /src/driver/run.sh\n\nENV QPS_WORKERS=\"\"\nENV QPS_WORKERS_FILE=\"\"\nENV SCENARIOS_FILE=\"/src/driver/example.json\"\nENV BQ_RESULT_TABLE=\"\"\n\nCMD [\"bash\", \"-c\", \"timeout --kill-after=${KILL_AFTER} ${POD_TIMEOUT} /src/driver/run.sh\"]\n"
}