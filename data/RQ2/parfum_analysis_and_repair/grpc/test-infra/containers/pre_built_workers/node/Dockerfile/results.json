{
  "startTime": 1674246746546,
  "endTime": 1674246747441,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 22
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright 2020 gRPC authors\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     https://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nFROM node:10-buster\n\nRUN mkdir -p /pre\nWORKDIR /pre\n\nARG REPOSITORY=grpc/grpc-node\nARG GITREF=master\n# when BREAK_CACHE arg is set to a random value (e.g. by \"--build-arg BREAK_CACHE=$(uuidgen)\"),\n# it makes sure the docker cache breaks at this command, and all the following\n# commands in this Dockerfile will be forced to re-run on each build.\n# This is important to ensure we always clone the repository even if \"GITREF\" stays unchanged\n# (important e.g. when GITREF=master, when the clone command could get cached and\n# we'd end up with a stale repository).\nARG BREAK_CACHE\n\nRUN git clone https://github.com/$REPOSITORY.git .\nRUN git checkout $GITREF\nRUN git submodule update --init\n\n# Save commit sha for debug use\nRUN echo 'COMMIT SHA' > GRPC_GIT_COMMIT.txt\nRUN git rev-parse $GITREF >> GRPC_GIT_COMMIT.txt\n\n\nRUN mkdir /build_scripts\nADD build_qps_worker.sh /build_scripts\nRUN /build_scripts/build_qps_worker.sh\n\nRUN npm install -g pkg && npm cache clean --force;\nADD pkg_config.json /pre\nRUN pkg -c pkg_config.json ./test/performance/worker.js\n\n# Copy node modules to a new image\nFROM debian:buster\n\nRUN mkdir -p /pre\nWORKDIR /execute\n\nCOPY --from=0 /pre/worker-linux /execute\nCOPY --from=0 /pre/test/fixtures/native_native.js /execute/test/fixtures/native_native.js\nCOPY --from=0 /pre/GRPC_GIT_COMMIT.txt /execute/GRPC_GIT_COMMIT.txt\n\nENV NODE_OPTIONS='--require /execute/test/fixtures/native_native.js'\n\nCMD [\"bash\"]\n"
}