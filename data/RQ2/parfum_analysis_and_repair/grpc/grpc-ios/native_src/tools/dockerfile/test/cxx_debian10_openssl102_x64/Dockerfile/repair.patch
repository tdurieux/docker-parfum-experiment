diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/grpc/grpc-ios/native_src/tools/dockerfile/test/cxx_debian10_openssl102_x64/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/grpc/grpc-ios/native_src/tools/dockerfile/test/cxx_debian10_openssl102_x64/Dockerfile/repaired.Dockerfile
index bb939b2..e1cca33 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/grpc/grpc-ios/native_src/tools/dockerfile/test/cxx_debian10_openssl102_x64/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/grpc/grpc-ios/native_src/tools/dockerfile/test/cxx_debian10_openssl102_x64/Dockerfile/repaired.Dockerfile
@@ -19,30 +19,30 @@ RUN apt-get --allow-releaseinfo-change update
 # Basic C core dependencies
 
 # C/C++ dependencies according to https://github.com/grpc/grpc/blob/master/BUILDING.md
-RUN apt-get update && apt-get install -y \
+RUN apt-get update && apt-get install --no-install-recommends -y \
   build-essential \
   autoconf \
   libtool \
   pkg-config \
-  && apt-get clean
+  && apt-get clean && rm -rf /var/lib/apt/lists/*;
 
 # GCC
-RUN apt-get update && apt-get install -y \
+RUN apt-get update && apt-get install --no-install-recommends -y \
   gcc \
   gcc-multilib \
   g++ \
-  g++-multilib  \
-  && apt-get clean
+  g++-multilib \
+  && apt-get clean && rm -rf /var/lib/apt/lists/*;
 
 # libc6
-RUN apt-get update && apt-get install -y \
+RUN apt-get update && apt-get install --no-install-recommends -y \
   libc6 \
   libc6-dbg \
   libc6-dev \
-  && apt-get clean
+  && apt-get clean && rm -rf /var/lib/apt/lists/*;
 
 # Tools
-RUN apt-get update && apt-get install -y \
+RUN apt-get update && apt-get install --no-install-recommends -y \
   bzip2 \
   curl \
   dnsutils \
@@ -54,7 +54,7 @@ RUN apt-get update && apt-get install -y \
   unzip \
   wget \
   zip \
-  && apt-get clean
+  && apt-get clean && rm -rf /var/lib/apt/lists/*;
 
 #====================
 # run_tests.py python dependencies
@@ -62,12 +62,12 @@ RUN apt-get update && apt-get install -y \
 # Basic python dependencies to be able to run tools/run_tests python scripts
 # These dependencies are not sufficient to build gRPC Python, gRPC Python
 # deps are defined elsewhere (e.g. python_deps.include)
-RUN apt-get update && apt-get install -y \
+RUN apt-get update && apt-get install --no-install-recommends -y \
   python3 \
   python3-pip \
   python3-setuptools \
   python3-yaml \
-  && apt-get clean
+  && apt-get clean && rm -rf /var/lib/apt/lists/*;
 
 # use pinned version of pip to avoid sudden breakages
 RUN python3 -m pip install --upgrade pip==19.3.1
@@ -83,20 +83,20 @@ RUN python3 -m pip install --upgrade google-auth==1.23.0 google-api-python-clien
 
 #=================
 # C++ dependencies
-RUN apt-get update && apt-get -y install libc++-dev clang && apt-get clean
+RUN apt-get update && apt-get -y --no-install-recommends install libc++-dev clang && apt-get clean && rm -rf /var/lib/apt/lists/*;
 
 #=================
 # Install cmake
 # Note that this step should be only used for distributions that have new enough cmake to satisfy gRPC's cmake version requirement.
 
-RUN apt-get update && apt-get install -y cmake && apt-get clean
+RUN apt-get update && apt-get install --no-install-recommends -y cmake && apt-get clean && rm -rf /var/lib/apt/lists/*;
 
 
 RUN mkdir /var/local/jenkins
 
 
 # Install openssl 1.0.2 from source
-RUN apt-get update && apt-get install -y build-essential zlib1g-dev
+RUN apt-get update && apt-get install --no-install-recommends -y build-essential zlib1g-dev && rm -rf /var/lib/apt/lists/*;
 RUN cd /tmp && \
     wget --no-check-certificate https://www.openssl.org/source/old/1.0.2/openssl-1.0.2u.tar.gz && \
     tar -xf openssl-1.0.2u.tar.gz && \
@@ -104,7 +104,7 @@ RUN cd /tmp && \
     ./config --prefix=/usr/local/ssl --openssldir=/usr/local/ssl shared zlib && \
     make -j 4 && \
     make install && \
-    rm -rf /tmp/openssl-1.0.2u*
+    rm -rf /tmp/openssl-1.0.2u* && rm openssl-1.0.2u.tar.gz
 ENV OPENSSL_ROOT_DIR=/usr/local/ssl
 
 # Define the default command.