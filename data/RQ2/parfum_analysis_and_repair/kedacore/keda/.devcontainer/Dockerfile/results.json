{
  "startTime": 1674217975672,
  "endTime": 1674217977115,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 86,
        "lineEnd": 86,
        "columnStart": 4,
        "columnEnd": 167
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 7,
        "columnEnd": 57
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 7,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 7,
        "columnEnd": 117
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 7,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 74,
        "lineEnd": 74,
        "columnStart": 7,
        "columnEnd": 37
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#-------------------------------------------------------------------------------------------------------------\n# Copyright (c) Microsoft Corporation. All rights reserved.\n# Licensed under the MIT License. See https://go.microsoft.com/fwlink/?linkid=2090316 for license information.\n#-------------------------------------------------------------------------------------------------------------\n\nFROM golang:1.17.9\n\n# Avoid warnings by switching to noninteractive\nENV DEBIAN_FRONTEND=noninteractive\n\n# This Dockerfile adds a non-root 'vscode' user with sudo access. However, for Linux,\n# this user's GID/UID must match your local user UID/GID to avoid permission issues\n# with bind mounts. Update USER_UID / USER_GID if yours is not 1000. See\n# https://aka.ms/vscode-remote/containers/non-root-user for details.\nARG USERNAME=vscode\nARG USER_UID=1000\nARG USER_GID=$USER_UID\n\nENV GO111MODULE=auto\n\n# Configure apt, install packages and tools\nRUN apt-get update \\\n    && apt-get -y install --no-install-recommends apt-utils dialog 2>&1 \\\n    #\n    # Verify git, process tools, lsb-release (common in install instructions for CLIs) installed \\\n    && apt-get -y --no-install-recommends install git iproute2 procps lsb-release \\\n    #\n    # Install gocode-gomod\n    && go get -x -d github.com/stamblerre/gocode 2>&1 \\\n    && go build -o gocode-gomod github.com/stamblerre/gocode \\\n    && mv gocode-gomod $GOPATH/bin/ \\\n    #\n    # Install Go tools\n    && go get -u -v \\\n        github.com/mdempsky/gocode \\\n        github.com/uudashr/gopkgs/cmd/gopkgs \\\n        github.com/ramya-rao-a/go-outline \\\n        github.com/acroca/go-symbols \\\n        github.com/godoctor/godoctor \\\n        golang.org/x/tools/cmd/guru \\\n        golang.org/x/tools/cmd/gorename \\\n        github.com/rogpeppe/godef \\\n        github.com/zmb3/gogetdoc \\\n        github.com/haya14busa/goplay/cmd/goplay \\\n        github.com/sqs/goreturns \\\n        github.com/josharian/impl \\\n        github.com/davidrjenni/reftools/cmd/fillstruct \\\n        github.com/fatih/gomodifytags \\\n        github.com/cweill/gotests/... \\\n        golang.org/x/tools/cmd/goimports \\\n        golang.org/x/lint/golint \\\n        github.com/alecthomas/gometalinter \\\n        github.com/mgechev/revive \\\n        github.com/derekparker/delve/cmd/dlv 2>&1 \\\n    && go install honnef.co/go/tools/cmd/staticcheck@latest \\\n    && go install golang.org/x/tools/gopls@latest \\\n    # Install golangci-lint\n    && curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.46.2 \\\n    #\n    # Create a non-root user to use if preferred - see https://aka.ms/vscode-remote/containers/non-root-user.\n    && groupadd --gid $USER_GID $USERNAME \\\n    && useradd -s /bin/bash --uid $USER_UID --gid $USER_GID -m $USERNAME \\\n    # [Optional] Add sudo support\n    && apt-get install --no-install-recommends -y sudo \\\n    && echo $USERNAME ALL=\\(root\\) NOPASSWD:ALL > /etc/sudoers.d/$USERNAME \\\n    && chmod 0440 /etc/sudoers.d/$USERNAME \\\n    # Docker install\n    && apt-get install --no-install-recommends -y apt-transport-https ca-certificates curl gnupg-agent software-properties-common lsb-release \\\n    && curl -fsSL https://download.docker.com/linux/$(lsb_release -is | tr '[:upper:]' '[:lower:]')/gpg | apt-key add - 2>/dev/null \\\n    && add-apt-repository \"deb [arch=$(dpkg --print-architecture)] https://download.docker.com/linux/$(lsb_release -is | tr '[:upper:]' '[:lower:]') $(lsb_release -cs) stable\" \\\n    && apt-get update \\\n    && apt-get install --no-install-recommends -y docker-ce-cli \\\n    #\n    # Install pip & pre-commit\n    && apt-get -y --no-install-recommends install python3-pip \\\n    && python3 -m pip install --no-cache-dir pre-commit \\\n    #\n    # Clean up\n    && apt-get autoremove -y \\\n    && apt-get clean -y \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Enable go modules\nENV GO111MODULE=on\n\nENV OPERATOR_RELEASE_VERSION=v1.0.1\nRUN curl -f -LO https://github.com/operator-framework/operator-sdk/releases/download/${OPERATOR_RELEASE_VERSION}/operator-sdk-${OPERATOR_RELEASE_VERSION}-x86_64-linux-gnu \\\n    && chmod +x operator-sdk-${OPERATOR_RELEASE_VERSION}-x86_64-linux-gnu \\\n    && mkdir -p /usr/local/bin/ \\\n    && cp operator-sdk-${OPERATOR_RELEASE_VERSION}-x86_64-linux-gnu /usr/local/bin/operator-sdk \\\n    && rm operator-sdk-${OPERATOR_RELEASE_VERSION}-x86_64-linux-gnu\n"
}