{
  "startTime": 1674246442058,
  "endTime": 1674246442935,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 7,
        "columnEnd": 53
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 7,
        "columnEnd": 66
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 7,
        "columnEnd": 53
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:20.04\n\nENV LC_ALL C.UTF-8\nENV LANG C.UTF-8\nENV PYTHONIOENCODING utf-8\nENV DJANGO_SECRET_KEY PlsChgMe\nENV DJANGO_LOG_LEVEL info\nENV POSTGRES_DB productdb\nENV POSTGRES_USER postgres\nENV POSTGRES_PASSWORD plschgme\nENV PDB_DATABASE_HOST database\nENV PDB_DATABASE_PORT 5432\nENV PDB_REDIS_HOST redis\nENV PDB_REDIS_PORT 6379\n\n# build variables\nENV HTTPS_SELF_SIGNED_CERT_COUNTRY \"DE\"\nENV HTTPS_SELF_SIGNED_CERT_FQDN \"productdb\"\n\nRUN echo \\\n    && apt-get update  \\\n    && apt-get install  --no-install-recommends -y \\\n        curl \\\n        build-essential \\\n        python3.8 \\\n        python3-pip \\\n        python3.8-dev \\\n        libpq-dev \\\n        libsasl2-dev \\\n        libldap2-dev \\\n        libssl-dev \\\n        git \\\n        gcc \\\n    && curl -f -sL https://deb.nodesource.com/setup_12.x | bash - \\\n    && echo \"deb http://apt.postgresql.org/pub/repos/apt bionic-pgdg main\" > /etc/apt/sources.list.d/pgdg.list \\\n    && curl -f -sL https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add - \\\n    && apt-get update \\\n    && apt-get install --no-install-recommends -y nodejs postgresql-client-12 \\\n    && rm -rf /var/lib/apt/lists/* \\\n    && apt-get clean\n\nCOPY requirements.txt /tmp/requirements.txt\nRUN pip3 install --no-cache-dir -r /tmp/requirements.txt\n\nVOLUME /var/www/productdb/static\n\nWORKDIR /var/www/productdb/source\nCOPY . /var/www/productdb/source\nCOPY ./deploy/docker/django/initialimport.sh /usr/local/bin/initialimport\nCOPY ./deploy/docker/django/initialimportstatus.sh /usr/local/bin/initialimportstatus\n\n# install frontend deprendencies as part of the image (for later offline use)\nRUN npm install \\\n    && /var/www/productdb/source/node_modules/.bin/grunt copy \\\n    && /var/www/productdb/source/node_modules/.bin/grunt clean \\\n    && rm -rf /var/www/productdb/source/node_modules \\\n    && rm -rf /var/lib/apt/lists/* \\\n    && mkdir -p /var/www/productdb/logs \\\n    && mkdir -p /var/www/productdb/static && npm cache clean --force;\n\n# ensure proper permissions\nRUN chmod +x ./deploy/docker/build_deps/build_dependencies.sh\n\nCMD ./deploy/docker/build_deps/build_dependencies.sh\n"
}