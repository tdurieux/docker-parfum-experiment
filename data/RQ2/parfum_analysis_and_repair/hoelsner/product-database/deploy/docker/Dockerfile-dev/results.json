{
  "startTime": 1674221009543,
  "endTime": 1674221010166,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 7,
        "columnEnd": 147
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 20,
        "lineEnd": 32,
        "columnStart": 22,
        "columnEnd": 11
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 20,
        "lineEnd": 32,
        "columnStart": 22,
        "columnEnd": 11
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# development container used as remote interpreter\nFROM ubuntu:20.04\n\nARG DEBIAN_FRONTEND=noninteractive\n\nENV LANG C.UTF-8\nENV LC_ALL C.UTF-8\n\nENV PDB_REDIS_HOST \"redis\"\nENV PDB_DATABASE_HOST \"database\"\nENV PYTHONDONTWRITEBYTECODE \"1\"\nENV PYTHONIOENCODING utf-8\n# parameters for selenium tests\nENV HEADLESS_TESTING 1\nENV SERVER_HOST \"productdbtestinstance\"\nENV SERVER_PORT 443\nENV SERVER_PROTOCOL \"https\"\nENV PDB_DEBUG \"true\"\n\n# DEBIAN_FRONTEND=noninteractive\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n        libsasl2-dev \\\n        libldap2-dev \\\n        libssl-dev \\\n        xvfb \\\n        firefox \\\n        wget \\\n        locales \\\n        python3.8 \\\n        python3-pip \\\n        python3.8-dev \\\n        curl \\\n        gcc \\\n    && curl -f -L \"https://github.com/docker/compose/releases/download/1.27.4/docker-compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-compose \\\n    && chmod +x /usr/local/bin/docker-compose && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /tmp\nRUN wget https://github.com/mozilla/geckodriver/releases/download/v0.28.0/geckodriver-v0.28.0-linux64.tar.gz \\\n    && tar -xvzf geckodriver-v0.28.0-linux64.tar.gz \\\n    && rm geckodriver-v0.28.0-linux64.tar.gz \\\n    && chmod +x geckodriver \\\n    && cp geckodriver /usr/local/bin/\n\nCOPY ./requirements.txt /tmp/requirements.txt\nCOPY ./requirements_dev.txt /tmp/requirements_dev.txt\nRUN pip3 install --no-cache-dir -r /tmp/requirements_dev.txt\n\nCOPY . /var/www/productdb/source\nWORKDIR /var/www/productdb/source\n\nEXPOSE 8000\nCMD [\"python3\", \"manage.py\", \"runserver\", \"0.0.0.0:8000\"]"
}