{
  "startTime": 1674254349792,
  "endTime": 1674254351321,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 18,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 14,
        "columnStart": 25,
        "columnEnd": 46
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 14,
        "columnStart": 25,
        "columnEnd": 46
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG FUNCTION_DIR=\"/home/app/\"\n\nFROM python:3.9-slim as build-stage\n\nARG FUNCTION_DIR\n\nRUN mkdir -p ${FUNCTION_DIR}\nWORKDIR ${FUNCTION_DIR}\n\nRUN apt-get update -y && apt-get install --no-install-recommends -y \\\n    gcc libpq-dev git \\\n\n    libtiff5-dev libjpeg62 libopenjp2-7-dev zlib1g-dev \\\n    libfreetype6-dev liblcms2-dev libwebp-dev tcl8.6-dev tk8.6-dev python3-tk \\\n    libharfbuzz-dev libfribidi-dev libxcb1-dev && rm -rf /var/lib/apt/lists/*;\n\nENV LIBRARY_PATH=/lib:/usr/lib\n\nRUN tar -czvf /libs.tar.gz /usr/lib/x86_64-linux-gnu/libpq* \\\n    /usr/lib/x86_64-linux-gnu/libpq* \\\n    /usr/lib/x86_64-linux-gnu/libldap_r* \\\n    /usr/lib/x86_64-linux-gnu/liblber* \\\n    /usr/lib/x86_64-linux-gnu/libsasl* \\\n    /usr/lib/x86_64-linux-gnu/libxml2* \\\n    /usr/lib/x86_64-linux-gnu/libgcrypt* \\\n    /usr/lib/x86_64-linux-gnu/libstdc++* \\\n    /usr/lib/x86_64-linux-gnu/libjpeg* \\\n    /usr/lib/x86_64-linux-gnu/libopenjp2* \\\n    /usr/lib/x86_64-linux-gnu/libdeflate* \\\n    /usr/lib/x86_64-linux-gnu/libjbig* \\\n    /usr/lib/x86_64-linux-gnu/liblcms2* \\\n    /usr/lib/x86_64-linux-gnu/libwebp* \\\n    /usr/lib/x86_64-linux-gnu/libtiff* && rm /libs.tar.gz\n\nRUN pip3 install --no-cache-dir poetry==1.1.13\n\nCOPY poetry.lock ${FUNCTION_DIR}\nCOPY pyproject.toml ${FUNCTION_DIR}\n\nRUN poetry config virtualenvs.in-project true\nRUN poetry install --no-dev -E lambda\n\nFROM python:3.9-slim\n\nARG FUNCTION_DIR\n\nWORKDIR ${FUNCTION_DIR}\n\nCOPY --from=build-stage ${FUNCTION_DIR}/.venv ${FUNCTION_DIR}/.venv\nCOPY --from=build-stage /usr/local/lib/*.so* /usr/local/lib/\nCOPY --from=build-stage /libs.tar.gz /libs.tar.gz\n\nRUN tar -xvf /libs.tar.gz -C / && rm /libs.tar.gz && ldconfig\n\nRUN mkdir -p ${FUNCTION_DIR}/assets\n\nCOPY . ${FUNCTION_DIR}\n\nENV DJANGO_SETTINGS_MODULE=pycon.settings.prod\n\nRUN USERS_SERVICE=empty \\\n    ASSOCIATION_BACKEND_SERVICE=empty \\\n    SERVICE_TO_SERVICE_SECRET=empty \\\n    CFP_SLACK_INCOMING_WEBHOOK_URL=example \\\n    SUBMISSION_COMMENT_SLACK_INCOMING_WEBHOOK_URL=example \\\n    AWS_MEDIA_BUCKET=example \\\n    AWS_REGION_NAME=eu-central-1 \\\n    SECRET_KEY=DEMO \\\n    PASTAPORTO_SECRET=demo \\\n    ${FUNCTION_DIR}/.venv/bin/python manage.py collectstatic --noinput\n\nENTRYPOINT [\"/home/app/.venv/bin/python\", \"-m\", \"awslambdaric\"]\nCMD [ \"wsgi_handler.handler\" ]\n"
}