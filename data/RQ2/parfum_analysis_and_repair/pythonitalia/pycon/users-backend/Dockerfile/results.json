{
  "startTime": 1674251437523,
  "endTime": 1674251438165,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 25,
        "columnEnd": 47
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 25,
        "columnEnd": 47
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG FUNCTION_DIR=\"/home/app/\"\n\nFROM python:3.9-slim as build-stage\n\nARG FUNCTION_DIR\n\nRUN mkdir -p ${FUNCTION_DIR}\nWORKDIR ${FUNCTION_DIR}\n\nRUN apt-get update -y && apt-get install --no-install-recommends -y gcc && rm -rf /var/lib/apt/lists/*;\n\nENV LIBRARY_PATH=/lib:/usr/lib\n\nCOPY poetry.lock ${FUNCTION_DIR}\nCOPY pyproject.toml ${FUNCTION_DIR}\n\nRUN pip3 install --no-cache-dir poetry==1.1.13\n\nRUN poetry config virtualenvs.in-project true\nRUN poetry install --no-dev -E lambda\n\nFROM python:3.9-slim\n\nARG FUNCTION_DIR\n\nWORKDIR ${FUNCTION_DIR}\n\nCOPY --from=build-stage ${FUNCTION_DIR}/.venv ${FUNCTION_DIR}/.venv\n\nRUN mkdir -p ${FUNCTION_DIR}/assets\n\nCOPY . ${FUNCTION_DIR}\n\nENTRYPOINT [\"/home/app/.venv/bin/python\", \"-m\", \"awslambdaric\"]\nCMD [ \"main.handler\" ]\n"
}