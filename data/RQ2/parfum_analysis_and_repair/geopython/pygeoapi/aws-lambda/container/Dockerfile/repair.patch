diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/geopython/pygeoapi/aws-lambda/container/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/geopython/pygeoapi/aws-lambda/container/Dockerfile/repaired.Dockerfile
index a358f09..3abd9db 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/geopython/pygeoapi/aws-lambda/container/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/geopython/pygeoapi/aws-lambda/container/Dockerfile/repaired.Dockerfile
@@ -86,7 +86,7 @@ ADD pygeoapi/__init__.py /pygeoapi/pygeoapi/
 
 # Run all installs
 RUN \
-	# Install dependencies
+
 	apt-get update -y \
 	&& apt-get install -y --fix-missing --no-install-recommends ${DEB_BUILD_DEPS}  \
 	&& add-apt-repository ppa:ubuntugis/ubuntugis-unstable \
@@ -94,20 +94,21 @@ RUN \
 	&& echo "For ${TZ} date=$(date)" && echo "Locale=$(locale)" \
 	# Install pygeoapi
 	&& cd /pygeoapi \
-	# Optionally add development/test/doc packages
-	&& if [ "$BUILD_DEV_IMAGE" = "true" ] ; then pip3 install -r requirements-dev.txt; fi \
-	&& pip3 install -e . \
+	# Optionally add development/test/doc packages \
+	&& if [ "$BUILD_DEV_IMAGE" = "true" ] ; then \
+	pip3 install --no-cache-dir -r requirements-dev.txt; fi \
+	&& pip3 install --no-cache-dir -e . \
 	# OGC schemas local setup
 	&& mkdir /schemas.opengis.net \
-	&& curl -O http://schemas.opengis.net/SCHEMAS_OPENGIS_NET.zip \
+	&& curl -f -O http://schemas.opengis.net/SCHEMAS_OPENGIS_NET.zip \
 	&& unzip ./SCHEMAS_OPENGIS_NET.zip "ogcapi/*" -d /schemas.opengis.net \
 	&& rm -f ./SCHEMAS_OPENGIS_NET.zip \
 	# Cleanup TODO: remove unused Locales and TZs
 	&& apt-get remove --purge -y ${DEB_BUILD_DEPS} \
-	&& apt autoremove -y  \
+	&& apt autoremove -y \
 	&& rm -rf /var/lib/apt/lists/*
 
-RUN pip3 install --target "/pygeoapi" awslambdaric 
+RUN pip3 install --no-cache-dir --target "/pygeoapi" awslambdaric
 ADD . /pygeoapi
 
 COPY ./docker/default.config.yml /pygeoapi/local.config.yml
@@ -118,5 +119,5 @@ ADD https://github.com/aws/aws-lambda-runtime-interface-emulator/releases/latest
 #COPY entry.sh /
 RUN chmod 755 /usr/bin/aws-lambda-rie /pygeoapi/entry.sh
 ENTRYPOINT [ "/pygeoapi/entry.sh" ]
-CMD [ "wsgi_handler.handler" ] 
+CMD [ "wsgi_handler.handler" ]
 #ENTRYPOINT ["/pygeoapi/entrypoint.sh"]