{
  "startTime": 1674252821590,
  "endTime": 1674252823267,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 46,
        "lineEnd": 47,
        "columnStart": 22,
        "columnEnd": 33
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# =================================================================\n# Authors: Ricardo Garcia Silva <ricardo.garcia.silva@gmail.com>\n# Authors: Massimo Di Stefano <epiesasha@me.com>\n# Authors: Tom Kralidis <tomkralidis@gmail.com>\n# Authors: Angelos Tzotsos <gcpp.kalxas@gmail.com>\n#\n# Contributors: Arnulf Heimsbakk <aheimsbakk@met.no>\n#               Tom Kralidis <tomkralidis@gmail.com>\n#\n# Copyright (c) 2020 Ricardo Garcia Silva\n# Copyright (c) 2020 Massimo Di Stefano\n# Copyright (c) 2020 Tom Kralidis\n# Copyright (c) 2020 Angelos Tzotsos\n#\n# Permission is hereby granted, free of charge, to any person\n# obtaining a copy of this software and associated documentation\n# files (the \"Software\"), to deal in the Software without\n# restriction, including without limitation the rights to use,\n# copy, modify, merge, publish, distribute, sublicense, and/or sell\n# copies of the Software, and to permit persons to whom the\n# Software is furnished to do so, subject to the following\n# conditions:\n#\n# The above copyright notice and this permission notice shall be\n# included in all copies or substantial portions of the Software.\n#\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n# OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n# HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n# WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n# OTHER DEALINGS IN THE SOFTWARE.\n#\n#\n# =================================================================\n\nFROM python:3.8-slim-buster\nLABEL maintainer=\"massimods@met.no,aheimsbakk@met.no,tommkralidis@gmail.com\"\n\n# Build arguments\n# add \"--build-arg BUILD_DEV_IMAGE=true\" to Docker build command when building with test/doc tools\n\nARG BUILD_DEV_IMAGE=\"false\"\n\nRUN apt-get update && apt-get install --no-install-recommends --yes \\\n        ca-certificates libexpat1 \\\n    && rm -rf /var/lib/apt/lists/*\n\nRUN adduser --uid 1000 --gecos '' --disabled-password pycsw\n\nENV PYCSW_CONFIG=/etc/pycsw/pycsw.cfg\n\nWORKDIR /home/pycsw/pycsw\n\nRUN chown --recursive pycsw:pycsw .\n\n# initially copy only the requirements files\nCOPY --chown=pycsw \\\n    requirements.txt \\\n    requirements-standalone.txt \\\n    requirements-dev.txt \\\n    ./\n\nRUN pip install --no-cache-dir -U pip && \\\n    python3 -m pip install \\\n    --requirement requirements.txt \\\n    --requirement requirements-standalone.txt \\\n    psycopg2-binary gunicorn \\\n    && if [ \"$BUILD_DEV_IMAGE\" = \"true\" ] ; then python3 -m pip install -r requirements-dev.txt; fi\n\nCOPY --chown=pycsw . .\n\nCOPY docker/pycsw.cfg ${PYCSW_CONFIG}\nCOPY docker/entrypoint.py /usr/local/bin/entrypoint.py\n\nRUN python3 -m pip install --editable .\n\nWORKDIR /home/pycsw\n\nEXPOSE 8000\n\nUSER pycsw\n\nENTRYPOINT [ \"python3\", \"/usr/local/bin/entrypoint.py\" ]\n"
}