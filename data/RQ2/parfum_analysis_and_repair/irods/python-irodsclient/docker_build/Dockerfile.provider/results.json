{
  "startTime": 1674219483692,
  "endTime": 1674219484468,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 93
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 93
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 93
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 21
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 117
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 55
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 45
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:18.04\n\nARG irods_pkg_dir\nARG server_py=${server_python_version}\nENV SERVER_PY \"${server_py}\"\n\nRUN apt update\nRUN apt install --no-install-recommends -y wget sudo lsb-release apt-transport-https gnupg2 postgresql-client python3 && rm -rf /var/lib/apt/lists/*;\nRUN wget -qO - https://packages.irods.org/irods-signing-key.asc | sudo apt-key add -\nRUN echo \"deb [arch=amd64] https://packages.irods.org/apt/ $(lsb_release -sc) main\" | sudo tee /etc/apt/sources.list.d/renci-irods.list\nRUN apt update\n\nSHELL [ \"/bin/bash\",\"-c\" ]\n\nCOPY ICAT.sql /tmp\nCOPY pgpass root/.pgpass\nRUN chmod 600 root/.pgpass\n\nRUN apt install --no-install-recommends -y rsyslog gawk && rm -rf /var/lib/apt/lists/*;\nRUN apt install --no-install-recommends -y jq && rm -rf /var/lib/apt/lists/*;\nADD build_deps_list wait_on_condition send_oneshot install_python_rule_engine setup_python_rule_engine /tmp/\n\n# At Runtime: 1. Install apt dependencies for the iRODS package files given.\n#             2. Install the package files.\n#             3. Wait on database container.\n#             4. Configure iRODS provider and make sure it is running.\n#             5. Open a server port, informing the client to start tests now that iRODS is up.\n#             6. Configure shared folder for tests that need to register data objects.\n#                (We opt out if /irods_shared does not exist, ie is omitted in the docker-compose.yml).\n#             7. Wait forever.\n\nCMD apt install -y $(/tmp/build_deps_list /irods_packages/irods*{serv,dev,icommand,runtime,database-*postgres}*.deb) && \\\n    dpkg -i /irods_packages/irods*{serv,dev,icommand,runtime,database-*postgres}*.deb && \\\n    /tmp/wait_on_condition -i 5 -n 12 \"psql -h icat -U postgres -c '\\\\l' >/dev/null\" && \\\n    psql -h icat -U postgres -f /tmp/ICAT.sql && \\\n    sed 's/localhost/icat/' < /var/lib/irods/packaging/localhost_setup_postgres.input \\\n        | python${SERVER_PY} /var/lib/irods/scripts/setup_irods.py && \\\n    { [ \"${PYTHON_RULE_ENGINE_INSTALLED}\" = '' ] || { /tmp/install_python_rule_engine \"$PYTHON_RULE_ENGINE_INSTALLED\" /irods_packages \\\n                                                     && /tmp/setup_python_rule_engine; } } && \\\n    { pgrep -u irods irodsServer >/dev/null || su irods -c '~/irodsctl start'; \\\n      env PORT=8888 /tmp/send_oneshot \"iRODS is running...\" & } && \\\n    { [ ! -d /irods_shared ] || { mkdir -p /irods_shared/reg_resc && mkdir -p /irods_shared/tmp && \\\n                                  chown -R irods.irods /irods_shared && chmod g+ws /irods_shared/tmp && \\\n                                  chmod 777 /irods_shared/reg_resc ; } } && \\\n    echo $'*********\\n' $'*********\\n' $'*********\\n' $'*********\\n' $'*********\\n' IRODS IS UP  && \\\n    tail -f /dev/null\n"
}