{
  "startTime": 1674218179957,
  "endTime": 1674218181859,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 132
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 4,
        "columnEnd": 149
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 4,
        "columnEnd": 124
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 73,
        "lineEnd": 73,
        "columnStart": 4,
        "columnEnd": 82
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 82
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM golang:1.18 AS go_install\n\nENV GO111MODULE=on\nENV GOPATH /go\nENV CGO_ENABLED 0\n\nRUN mkdir -p /go/src/github.com/YangKeao/tools\nWORKDIR /go/src/github.com/YangKeao/tools\nRUN git clone https://github.com/YangKeao/tools.git -b v0.1.9-with-combine --depth 1 .\nRUN go install ./cmd/goimports\n\nRUN go install sigs.k8s.io/controller-tools/cmd/controller-gen@v0.4.1\nRUN go install github.com/mgechev/revive@v1.0.2-0.20200225072153-6219ca02fffb\nRUN go install github.com/pingcap/failpoint/failpoint-ctl@v0.0.0-20200210140405-f8f9fb234798\nRUN go install github.com/securego/gosec/cmd/gosec@v0.0.0-20200401082031-e946c8c39989\nRUN go install github.com/99designs/gqlgen@v0.17.2\nRUN go install github.com/golang/protobuf/protoc-gen-go@v1.4.2\nRUN go install github.com/axw/gocov/gocov@v1.0.0\nRUN go install github.com/AlekSi/gocov-xml@v0.0.0-20190121064608-3a14fb1c4737\nRUN go install github.com/matm/gocov-html@v0.0.0-20200509184451-71874e2e203b\nRUN go install github.com/swaggo/swag/cmd/swag@v1.8.3\nRUN go install github.com/onsi/ginkgo/ginkgo@v1.16.4\nRUN go install github.com/apache/skywalking-eyes/cmd/license-eye@v0.2.0\n\nFROM debian:buster-slim\n\nENV DEBIAN_FRONTEND noninteractive\n\nARG HTTPS_PROXY\nARG HTTP_PROXY\n\nENV http_proxy $HTTP_PROXY\nENV https_proxy $HTTPS_PROXY\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends unzip git build-essential curl python musl musl-dev python3 -y && \\\n    rm -rf /var/lib/apt/lists/*\n\n# The `TARGET_PLATFORM` would be `amd64` or `arm64`\nARG TARGET_PLATFORM=amd64\n\n# The architecture part of the url is `aarch_64` or `x86_64`\nRUN case \"$TARGET_PLATFORM\" in \\\n    'amd64') \\\n    export PROTOC_ARCH='x86_64'; \\\n    ;; \\\n    'arm64') \\\n    export PROTOC_ARCH='aarch_64'; \\\n    ;; \\\n    *) echo >&2 \"error: unsupported architecture '$TARGET_PLATFORM'\"; exit 1 ;; \\\n    esac; \\\n    curl -f -L https://github.com/protocolbuffers/protobuf/releases/download/v3.12.2/protoc-3.12.2-linux-$PROTOC_ARCH.zip > /protoc.zip && \\\n    unzip /protoc.zip -d /usr/local && \\\n    rm /protoc.zip\nRUN chmod +xr -R /usr/local/include\nRUN chmod +x /usr/local/bin/protoc\n\nRUN mkdir -p /go/bin\n\nCOPY --from=go_install /usr/local/go /usr/local/go\nCOPY --from=go_install /go/bin /go/bin\n\n# The `gqlgen` depends on the plugin in it\nCOPY --from=go_install /go/pkg/mod/github.com/99designs/gqlgen@v0.17.2 /go/pkg/mod/github.com/99designs/gqlgen@v0.17.2\n\nENV PATH \"/usr/local/go/bin:${PATH}:/tmp/go/bin:/go/bin\"\n\nRUN curl -f -L https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize%2Fv4.3.0/kustomize_v4.3.0_$(go env GOOS)_$(go env GOARCH).tar.gz | tar -xz -C /usr/local/bin/\n\nRUN curl -f -L https://storage.googleapis.com/kubebuilder-tools/kubebuilder-tools-1.19.2-$(go env GOOS)-$(go env GOARCH).tar.gz | tar -xz -C /usr/local/\n\nRUN curl -f -L https://get.helm.sh/helm-v3.6.3-$(go env GOOS)-$(go env GOARCH).tar.gz | tar -xz -C /usr/local/bin && \\\n    mv /usr/local/bin/$(go env GOOS)-$(go env GOARCH)/helm /usr/local/bin/helm && \\\n    rm -rf /usr/local/bin/$(go env GOOS)-$(go env GOARCH)\n\nRUN mkdir /.cache\nRUN chmod -R 777 /.cache\n\nENV GOCACHE /tmp/go-build\nENV GOPATH /tmp/go\nENV GO111MODULE=on\nENV CGO_ENABLED 0\n\nLABEL org.opencontainers.image.source https://github.com/chaos-mesh/chaos-mesh\n"
}