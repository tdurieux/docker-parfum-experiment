{
  "startTime": 1674248131482,
  "endTime": 1674248132230,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 22,
        "columnEnd": 68
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 18,
        "columnStart": 41,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 22,
        "columnEnd": 68
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 18,
        "columnStart": 41,
        "columnEnd": 36
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 24
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 48
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:bionic\n\nARG HTTPS_PROXY\nARG HTTP_PROXY\nARG MAKE_JOBS=4\nARG MIRROR=http://archive.ubuntu.com/ubuntu\n\nRUN apt-get update && apt-get install --no-install-recommends -y ca-certificates gnupg2 wget && rm -rf /var/lib/apt/lists/*;\n\nRUN if [ ! -z \"$MIRROR\" ]; then sed -i \"s|http://archive.ubuntu.com/ubuntu|$MIRROR|g\" /etc/apt/sources.list; fi\n\nRUN echo \"\" >> /etc/apt/sources.list\nRUN echo \"deb https://apt.kitware.com/ubuntu/ bionic main\" >> /etc/apt/sources.list\n\nRUN wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null | apt-key add -\n\nRUN ulimit -n 1024 && apt-get update && apt-get install --no-install-recommends -y gcc-8 g++-8 bison build-essential \\\n    flex git libedit-dev libllvm6.0 llvm-6.0-dev libclang-6.0-dev python python-pip \\\n    zlib1g-dev libelf-dev libssl-dev && rm -rf /var/lib/apt/lists/*;\nRUN apt install --no-install-recommends -y cmake && rm -rf /var/lib/apt/lists/*;\n\nRUN update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-7 70\nRUN update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-7 70\nRUN update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-7 70\nRUN update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 80\nRUN update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 80\nRUN update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-8 80\n\nRUN git clone --depth 1 --branch v0.23.0 https://github.com/iovisor/bcc.git\nWORKDIR /bcc/build\nRUN cmake .. -DCMAKE_INSTALL_PREFIX=/usr && make -j${MAKE_JOBS} && make install\n\nWORKDIR /\n\nRUN git clone https://github.com/chaos-mesh/bpfki\nWORKDIR /bpfki/build\nRUN cmake .. && make -j${MAKE_JOBS} && mv bin/bpfki /usr/local/bin/ && mv examples/fail* /usr/local/bin/\n\nWORKDIR /usr/local/bin\n"
}