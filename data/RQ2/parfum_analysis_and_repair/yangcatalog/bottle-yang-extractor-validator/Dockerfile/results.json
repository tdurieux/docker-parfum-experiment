{
  "startTime": 1674255375393,
  "endTime": 1674255376449,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 99
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 99
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 99
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:18.04\nARG YANG_ID\nARG YANG_GID\nARG YANGCATALOG_CONFIG_PATH\nARG CONFD_VERSION\nARG YANGLINT_VERSION\n\nENV YANG_ID \"$YANG_ID\"\nENV YANG_GID \"$YANG_GID\"\nENV YANGCATALOG_CONFIG_PATH \"$YANGCATALOG_CONFIG_PATH\"\nENV CONFD_VERSION \"$CONFD_VERSION\"\nENV YANGLINT_VERSION \"$YANGLINT_VERSION\"\n\nENV VIRTUAL_ENV=/home/yangvalidator/yang-extractor-validator\n\nRUN apt-get -y update && apt-get install --no-install-recommends -y build-essential clang cmake git gnupg2 gunicorn libpcre2-dev \\\n  libssl1.0.0 libssl-dev libxml2-dev openssh-client python3.6 python3-pip rsyslog systemd wget curl && rm -rf /var/lib/apt/lists/*;\n\n# Create 'yang' user and group\nRUN groupadd -g ${YANG_GID} -r yang && useradd --no-log-init -r -g yang -u ${YANG_ID} -d /home yang\n\nWORKDIR /home\nRUN git clone -b ${YANGLINT_VERSION} --single-branch --depth 1 https://github.com/CESNET/libyang.git\nRUN mkdir -p /home/libyang/build\nWORKDIR /home/libyang/build\nRUN cmake -D CMAKE_BUILD_TYPE:String=\"Release\" .. && make && make install\n\nRUN sed -i \"/imklog/s/^/#/\" /etc/rsyslog.conf\nRUN rm -rf /var/lib/apt/lists/*\n\nRUN pip3 install --no-cache-dir --upgrade pip\nCOPY ./yang-validator-extractor/requirements.txt .\nRUN pip3 install --no-cache-dir -r requirements.txt\n# TODO: remove next step from build when depend.py will be fixed in next pyang release\n# https://github.com/mbj4668/pyang/pull/793\nCOPY ./yang-validator-extractor/pyang_plugin/depend.py /usr/lib/python3.6/site-packages/pyang/plugins/.\n\nRUN mkdir -p /home/yangvalidator/confd-${CONFD_VERSION}\nCOPY ./resources/confd-${CONFD_VERSION}.linux.x86_64.installer.bin $VIRTUAL_ENV/confd-${CONFD_VERSION}.linux.x86_64.installer.bin\nCOPY ./resources/yumapro-client-20.10-9.u1804.amd64.deb $VIRTUAL_ENV/yumapro-client-20.10-9.u1804.amd64.deb\nRUN $VIRTUAL_ENV/confd-${CONFD_VERSION}.linux.x86_64.installer.bin /home/yangvalidator/confd-${CONFD_VERSION}\n\nWORKDIR $VIRTUAL_ENV\nRUN dpkg -i $VIRTUAL_ENV/yumapro-client-20.10-9.u1804.amd64.deb\nCOPY ./yang-validator-extractor/ $VIRTUAL_ENV/\nRUN chown -R ${YANG_ID}:${YANG_GID} /home\nRUN mkdir /var/run/yang\n\nEXPOSE 8090\n# Support arbitrary UIDs as per OpenShift guidelines\n\nCMD chown -R ${YANG_ID}:${YANG_GID} /var/run/yang && service rsyslog start && gunicorn yangvalidator.wsgi:application -c gunicorn.conf.py\n"
}