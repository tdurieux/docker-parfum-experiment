{
  "startTime": 1674249544630,
  "endTime": 1674249545503,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 7,
        "columnEnd": 32
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 7,
        "columnEnd": 35
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 113
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 101
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 27,
        "columnEnd": 58
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 20,
        "columnEnd": 51
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 21,
        "columnEnd": 77
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 7,
        "columnEnd": 122
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nvidia/cuda:11.6.2-cudnn8-devel-ubuntu20.04\n\n# given by builder\nARG PIP_TAG\n# something like \"gcc libc-dev make libatlas-base-dev ruby-dev\"\nARG APT_PACKAGES=\"git wget\"\n\nWORKDIR /dalle\n\nADD requirements.txt dalle-flow/\n\nENV PIP_NO_CACHE_DIR=1 \\\n    PIP_DISABLE_PIP_VERSION_CHECK=1\n\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends python3 python3-pip wget libglib2.0-0 libsm6 libxrender1 libxext6 libgl1 \\\n    && ln -sf python3 /usr/bin/python \\\n    && ln -sf pip3 /usr/bin/pip \\\n    && pip install --no-cache-dir --upgrade pip \\\n    && pip install --no-cache-dir wheel setuptools && rm -rf /var/lib/apt/lists/*;\n\n\nRUN if [ -n \"${APT_PACKAGES}\" ]; then apt-get update && apt-get install --no-install-recommends -y ${APT_PACKAGES}; fi && \\\n    git clone --depth=1 https://github.com/JingyunLiang/SwinIR.git  && \\\n    git clone --depth=1 https://github.com/CompVis/latent-diffusion.git && \\\n    git clone --depth=1 https://github.com/hanxiao/glid-3-xl.git && \\\n    pip install --no-cache-dir jax[cuda11_cudnn82]==0.3.13 -f https://storage.googleapis.com/jax-releases/jax_cuda_releases.html && \\\n    pip install --no-cache-dir torch torchvision torchaudio --extra-index-url https://download.pytorch.org/whl/cu113 && \\\n    cd latent-diffusion && pip install --no-cache-dir --timeout=1000 -e . && cd - && \\\n    cd glid-3-xl && pip install --no-cache-dir --timeout=1000 -e . && cd - && \\\n    cd dalle-flow && pip install --no-cache-dir --timeout=1000 --compile -r requirements.txt && cd - && \\\n    cd glid-3-xl && \\\n    wget -q https://dall-3.com/models/glid-3-xl/bert.pt && \\\n    wget -q https://dall-3.com/models/glid-3-xl/kl-f8.pt && \\\n    wget -q https://dall-3.com/models/glid-3-xl/finetune.pt && cd - && \\\n    # now remove apt packages\n    if [ -n \"${APT_PACKAGES}\" ]; then apt-get remove -y --auto-remove ${APT_PACKAGES} && apt-get autoremove && apt-get clean && rm -rf /var/lib/apt/lists/*; fi\n\nCOPY executors dalle-flow/executors\nADD flow.yml dalle-flow/\nENV LD_LIBRARY_PATH=/usr/local/cuda/lib64\n\nARG USER_ID=1000\nARG GROUP_ID=1000\n\nARG USER_NAME=dalle\nARG GROUP_NAME=dalle\n\nRUN groupadd -g ${GROUP_ID} ${USER_NAME} &&\\\n    useradd -l -u ${USER_ID} -g ${USER_NAME} ${GROUP_NAME} &&\\\n    mkdir /home/${USER_NAME} &&\\\n    chown ${USER_NAME}:${GROUP_NAME} /home/${USER_NAME} &&\\\n    chown -R ${USER_NAME}:${GROUP_NAME} /dalle/\n\nUSER ${USER_NAME}\n\nWORKDIR /dalle/dalle-flow\n\nENTRYPOINT [\"jina\", \"flow\", \"--uses\", \"flow.yml\"]\n"
}