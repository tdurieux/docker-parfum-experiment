{
  "startTime": 1674248528239,
  "endTime": 1674248529455,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 30,
        "columnEnd": 55
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 2,
        "columnEnd": 27
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 2,
        "columnEnd": 36
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 2,
        "columnEnd": 43
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 2,
        "columnEnd": 37
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 28,
        "columnEnd": 66
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#######################\n# Step 1: Base target #\n#######################\nFROM node:16.15-alpine3.16 as base\nARG http_proxy\nARG https_proxy\nARG no_proxy\nARG npm_registry\nARG NPM_LATEST\n\nRUN apk add --no-cache curl\n\n# use proxy & private npm registry\nRUN if [ ! -z \"$http_proxy\" ] ; then \\\n  yarn config delete proxy; yarn cache clean; \\\n  yarn config set proxy $http_proxy; \\\n  yarn config set https-proxy $https_proxy; \\\n  yarn config set no-proxy $no_proxy; \\\n  fi; \\\n  [ -z \"$npm_registry\" ] || yarn config set registry=$npm_registry && yarn cache clean;\n\nRUN [ -z \"${NPM_LATEST}\" ] || npm install npm@latest -g && npm cache clean --force;\n\n################################\n# Step 2: \"label-backend\"      #\n# yarn compile must have been  #\n# run first outside container  #\n# e.g in Github Actions CI     #\n################################\nFROM base as label-backend\nARG NPM_FIX\nARG NPM_VERBOSE\nENV API_PORT=55430\nENV NPM_CONFIG_LOGLEVEL debug\n\nWORKDIR /home/node/\n\n# Install git for sder package\nRUN apk add --no-cache git\n\n# Copy context files\nCOPY ./package.json ./\nCOPY packages/generic/core/package.json ./packages/generic/core/\nCOPY packages/generic/backend/package.json ./packages/generic/backend/\nCOPY packages/courDeCassation/package.json ./packages/courDeCassation/\n\nCOPY tsconfig.json package.json lerna.json ./\n\n# patch lerna package method to avoid bringing all react dev deps to backend prod\nRUN for file in lerna.json package.json; do\\\n  cat $file | sed 's|\"packages/generic/\\*\"|\"packages/generic/backend\", \"packages/generic/core\"|' > $file.new ;\\\n  mv $file.new $file;\\\n  done\n\n# Install dependencies\nRUN yarn install --production && yarn cache clean;\n\nADD packages/generic/core packages/generic/core\nADD packages/generic/backend packages/generic/backend\nADD packages/courDeCassation packages/courDeCassation\n\nWORKDIR /home/node/packages/courDeCassation\n\nRUN chown node .\n\nUSER node\n\n# Expose the listening port of your app\nEXPOSE ${API_PORT}\n\nCMD [\"sh\", \"-c\", \"RUN_MODE=PROD node dist/labelServer.js -e environments/prodEnvironment.json -s settings/settings.json\"]\n"
}