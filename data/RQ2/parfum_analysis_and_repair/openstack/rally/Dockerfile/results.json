{
  "startTime": 1674250911552,
  "endTime": 1674250912609,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 22,
        "columnEnd": 85
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 22,
        "columnEnd": 85
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:20.04\n\nRUN sed -i s/^deb-src.*// /etc/apt/sources.list\n\nRUN apt-get update && apt-get install --no-install-recommends --yes sudo python3-dev python3-pip vim git-core && \\\n    apt clean && \\\n    pip3 --no-cache-dir install --upgrade pip setuptools && \\\n    useradd -u 65500 -m rally && \\\n    usermod -aG sudo rally && \\\n    echo \"rally ALL=(ALL) NOPASSWD:ALL\" > /etc/sudoers.d/00-rally-user && \\\n    mkdir /rally && chown -R rally:rally /rally && rm -rf /var/lib/apt/lists/*;\n\nCOPY ./ /rally/source\nWORKDIR /rally/source\n\nRUN pip3 install . --constraint upper-constraints.txt --no-cache-dir && \\\n    pip3 install pymysql psycopg2-binary --no-cache-dir && \\\n    mkdir -p /etc/rally && \\\n    echo \"[database]\" > /etc/rally/rally.conf && \\\n    echo \"connection=sqlite:////home/rally/.rally/rally.db\" >> /etc/rally/rally.conf\n\nCOPY ./etc/motd_for_docker /etc/motd\nRUN echo '[ ! -z \"$TERM\" -a -r /etc/motd ] && cat /etc/motd' >> /etc/bash.bashrc\n\nUSER rally\nENV HOME /home/rally\nRUN mkdir -p /home/rally/.rally && rally db recreate\n\n# Docker volumes have specific behavior that allows this construction to work.\n# Data generated during the image creation is copied to volume only when it's\n# attached for the first time (volume initialization)\nVOLUME [\"/home/rally/.rally\"]\nENTRYPOINT [\"rally\"]\n"
}