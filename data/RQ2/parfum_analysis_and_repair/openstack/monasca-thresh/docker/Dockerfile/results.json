{
  "startTime": 1674216465763,
  "endTime": 1674216466777,
  "originalSmells": [
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 105
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 4,
        "columnEnd": 90
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 73,
        "lineEnd": 73,
        "columnStart": 4,
        "columnEnd": 68
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 74,
        "lineEnd": 74,
        "columnStart": 4,
        "columnEnd": 75
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG DOCKER_IMAGE=monasca/thresh\nARG APP_REPO=https://review.opendev.org/openstack/monasca-thresh\n\n# Branch, tag or git hash to build from.\nARG REPO_VERSION=master\nARG CONSTRAINTS_BRANCH=master\n\nFROM storm:1.2.3\n\nENV \\\n    MAVEN_HOME=\"/usr/share/maven\" \\\n    JAVA_HOME=\"/usr/lib/jvm/java-8-openjdk-amd64\" \\\n    ZOOKEEPER_SERVERS=\"zookeeper\" \\\n    ZOOKEEPER_PORT=\"2181\" \\\n    ZOOKEEPER_WAIT=\"true\" \\\n    SUPERVISOR_SLOTS_PORTS=\"6701,6702\" \\\n    SUPERVISOR_MAX_MB=\"256\" \\\n    WORKER_MAX_MB=\"784\" \\\n    NIMBUS_SEEDS=\"storm-nimbus\" \\\n    NIMBUS_MAX_MB=\"256\" \\\n    UI_MAX_MB=\"768\" \\\n    WORKER_LOGS_TO_STDOUT=\"false\" \\\n    USE_SSL_ENABLED=\"true\"\n\nCOPY memory.py settings.xml.j2 /\nCOPY start.sh mysql_check.py kafka_wait_for_topics.py /\n\nCOPY templates /templates\nCOPY logging /logging\n\nENV \\\n    KAFKA_URI=\"kafka:9092\" \\\n    KAFKA_WAIT_FOR_TOPICS=alarm-state-transitions,metrics,events \\\n    LOGSTASH_FIELDS=\"service=monasca-thresh\" \\\n    LOG_CONFIG_FILE=\"/storm/log4j2/cluster.xml\" \\\n    MYSQL_HOST=mysql \\\n    MYSQL_PORT=3306 \\\n    MYSQL_USER=thresh \\\n    MYSQL_PASSWORD=password \\\n    MYSQL_DB=mon \\\n    NO_STORM_CLUSTER=false \\\n    STORM_WAIT_DELAY=5 \\\n    STORM_WAIT_RETRIES=24 \\\n    STORM_WAIT_TIMEOUT=20 \\\n    WORKER_MAX_HEAP_MB=256\n\nARG SKIP_COMMON_TESTS=false\nARG SKIP_THRESH_TESTS=false\n\nARG CREATION_TIME\nARG DOCKER_IMAGE\nARG APP_REPO\nARG GITHUB_REPO\nARG REPO_VERSION\nARG GIT_COMMIT\nARG CONSTRAINTS_BRANCH\nARG CONSTRAINTS_FILE\nARG EXTRA_DEPS\nARG COMMON_REPO\nARG COMMON_VERSION\nARG COMMON_GIT_COMMIT\n\nSHELL [\"/bin/bash\", \"-eo\", \"pipefail\", \"-c\"]\n\nRUN \\\n    mkdir -p /usr/share/man/man1 && \\\n    apt-get clean && \\\n    apt-get update && \\\n    apt-get install -y --no-install-recommends iproute2 net-tools netcat unzip software-properties-common && \\\n    apt-add-repository -y 'deb http://ftp.de.debian.org/debian sid main' && \\\n    apt-add-repository -y 'deb http://security.debian.org/debian-security stretch/updates main' && \\\n    apt-get update && \\\n    apt-get install -y --no-install-recommends openjdk-8-jdk -o APT::Immediate-Configure=0 && \\\n    apt-get install -y --no-install-recommends maven git python3-pip && \\\n    apt-get install -y --no-install-recommends python3 default-mysql-client && \\\n    mkdir /root/.m2 && \\\n    pip3 install --no-cache-dir --upgrade setuptools && \\\n    pip3 install --no-cache-dir \\\n        jinja2 \\\n        pykafka \\\n        pymysql \\\n        Templer==1.1.4 && \\\n    set -x && mkdir /monasca-common && \\\n    git -C /monasca-common init && \\\n    git -C /monasca-common remote add origin \"$COMMON_REPO\" && \\\n    echo \"Cloning monasca-common in version: $COMMON_VERSION\" && \\\n    git -C /monasca-common fetch origin \"$COMMON_VERSION\" && \\\n    git -C /monasca-common reset --hard FETCH_HEAD && \\\n    cd /monasca-common && \\\n    mvn --quiet -B clean install $([ \"$SKIP_COMMON_TESTS\" = \"true\" ] && echo \"-DskipTests\") && \\\n    cd / && \\\n    mkdir /app && \\\n    git -C /app init && \\\n    git -C /app remote add origin \"$APP_REPO\" && \\\n    echo \"Cloning app in version: $REPO_VERSION\" && \\\n    git -C /app fetch origin \"$REPO_VERSION\" && \\\n    git -C /app reset --hard FETCH_HEAD && \\\n    cd /app/thresh && \\\n    mvn --quiet -B clean package $([ \"$SKIP_THRESH_TESTS\" = \"true\" ] && echo \"-DskipTests\") && \\\n    cp /app/thresh/target/*-SNAPSHOT-shaded.jar /monasca-thresh.jar && \\\n    cd / && \\\n    # Save info about build to `/VERSIONS` file.\n    printf \"App:        %s\\\\n\" \"$DOCKER_IMAGE\" >> /VERSIONS && \\\n    printf \"Repository: %s\\\\n\" \"$APP_REPO\" >> /VERSIONS && \\\n    printf \"Version:    %s\\\\n\" \"$REPO_VERSION\" >> /VERSIONS && \\\n    printf \"Revision:   %s\\\\n\" \"$GIT_COMMIT\" >> /VERSIONS && \\\n    printf \"Build date: %s\\\\n\" \"$CREATION_TIME\" >> /VERSIONS && \\\n    printf \"Monasca-common version:     %s\\\\n\" \"$COMMON_VERSION\" \\\n        >> /VERSIONS && \\\n    printf \"Monasca-common revision:    %s\\\\n\" \\\n        \"$COMMON_GIT_COMMIT\" >> /VERSIONS && \\\n    printf \"Constraints file: %s\\\\n\" \\\n        \"$CONSTRAINTS_FILE\"?h=\"$CONSTRAINTS_BRANCH\" >> /VERSIONS && \\\n    apt-get remove -y apt-utils && \\\n    apt-get remove -y maven git python3-pip software-properties-common && \\\n    apt-get -y autoremove && \\\n    rm -rf \\\n        /app \\\n        /monasca-common \\\n        /root/.cache/ \\\n        /root/.m2/repository  \\\n        /tmp/* \\\n        /var/cache/apt/* \\\n        /var/log/* && rm -rf /var/lib/apt/lists/*;\n\nENTRYPOINT [\"/start.sh\"]\n"
}