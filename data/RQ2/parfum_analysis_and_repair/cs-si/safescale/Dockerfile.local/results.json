{
  "startTime": 1674249699277,
  "endTime": 1674249700594,
  "originalSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 41,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 11
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 14,
        "columnStart": 3,
        "columnEnd": 20
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 41,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 11
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:focal as base\nLABEL maintainer=\"CS SI\"\nARG http_proxy=\"\"\nARG https_proxy=\"\"\nARG LC_ALL=C.UTF-8\nARG LANG=C.UTF-8\nENV DEBIAN_FRONTEND noninteractive\nENV BUILD_ENV docker\nENV BRANCH_NAME $BRANCH_NAME\nENV GOVERSION $GOVERSION\nENV PROTOVERSION $PROTOVERSION\n\nRUN apt-get update -y \\\n&& apt-get install -y --allow-unauthenticated --no-install-recommends \\\nwget unzip apt-utils && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /tmp\n\n# ----------------------\n# Install GO $GOVERSION\n# ----------------------\nRUN wget --no-check-certificate https://dl.google.com/go/go$GOVERSION.linux-amd64.tar.gz \\\n&& tar -C /usr/local -xzf go$GOVERSION.linux-amd64.tar.gz \\\n&& rm /tmp/go$GOVERSION.linux-amd64.tar.gz\nENV PATH $PATH:/usr/local/go/bin:/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\n\n# ----------------------\n# Install Protoc $PROTOVERSION\n# ----------------------\nRUN wget --no-check-certificate https://github.com/google/protobuf/releases/download/v$PROTOVERSION/protoc-$PROTOVERSION-linux-x86_64.zip \\\n&& unzip -d /usr/local/protoc protoc-$PROTOVERSION-linux-x86_64.zip \\\n&& ln -s /usr/local/protoc/bin/protoc /usr/local/bin \\\n&& rm /tmp/protoc-$PROTOVERSION-linux-x86_64.zip\n\nFROM base AS builder\n\nWORKDIR /tmp\n\n# -----------------\n# Install Standard packages\n# -----------------\nRUN apt-get install -y --allow-unauthenticated --no-install-recommends \\\nlocales \\\nsudo \\\nlocate \\\nbuild-essential \\\nmake \\\nwget \\\ncurl \\\nunzip \\\nvim \\\ngit \\\njq \\\niproute2 \\\niputils-ping \\\nopenssh-server \\\npython3 \\\npython3-pip \\\n&& apt-get autoclean -y \\\n&& apt-get autoremove -y \\\n&& rm -rf /var/lib/apt/lists/*\n\n# Set the locale\nRUN sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen && locale-gen\nENV LANG en_US.UTF-8\nENV LANGUAGE en_US:en\nENV LC_ALL en_US.UTF-8\nRUN python3 -c \"print('testing UTF8: ðŸ‘Œ')\"\n\nENV SHELL /bin/bash\nENV GOPATH /go\nCOPY build-safescale-local.sh /opt/build-safescale-local.sh\n\nADD . /go/SafeScale\n\nCMD sleep 5\n\nCOPY marker /dev/null\n\nRUN cd /opt && ./build-safescale-local.sh\n\n# --\n\nFROM golang:$GOVERSION-alpine\nLABEL maintainer=\"CS SI\"\nARG http_proxy=\"\"\nARG https_proxy=\"\"\nARG LC_ALL=C.UTF-8\nARG LANG=C.UTF-8\nENV BUILD_ENV docker\n\nRUN apk update && \\\n    apk add --no-cache \\\n    nano \\\n    curl \\\n    wget \\\n    openssl \\\n    ca-certificates \\\n    iproute2 \\\n    iperf\n\nRUN ln -s /usr/lib/tc /lib/tc\nRUN mkdir /exported\n\nRUN apk add --no-cache bash\n\nCOPY --from=builder /exported/safescaled /exported/safescaled\nCOPY --from=builder /exported/safescale /exported/safescale\nCOPY --from=builder /exported/go.mod /exported/go.mod\nCOPY --from=builder /exported/go.sum /exported/go.sum\n"
}