{
  "startTime": 1674255417239,
  "endTime": 1674255417942,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 2,
        "columnEnd": 86
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 2,
        "columnEnd": 20
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.12\nLABEL maintainer=\"Lovell Fuller <npm@lovell.info>\"\n\n# Create Alpine 3.12 (musl 1.1.24) container suitable for cross-compiling musl-based Linux ARM64v8-A binaries\n\n# Path settings\nENV \\\n  RUSTUP_HOME=\"/usr/local/rustup\" \\\n  CARGO_HOME=\"/usr/local/cargo\" \\\n  PATH=\"/usr/local/cargo/bin:$PATH\"\n\n# Build dependencies\nRUN \\\n  apk update && apk upgrade && \\\n  apk --update --no-cache add \\\n    autoconf \\\n    automake \\\n    binutils \\\n    brotli \\\n    build-base \\\n    cmake \\\n    coreutils \\\n    curl \\\n    findutils \\\n    git \\\n    jq \\\n    libtool \\\n    linux-headers \\\n    nasm \\\n    ninja \\\n    pkgconf \\\n    py3-pip \\\n    python3 \\\n    && \\\n  apk --update --no-cache --repository https://alpine.global.ssl.fastly.net/alpine/edge/community/ add advancecomp && \\\n  curl -f -Ls https://github.com/lovell/aarch64-linux-musl-crosstools/archive/main.tar.gz | tar -hxzC / --strip-components=2 && \\\n  ln -s /usr/bin/pkg-config /bin/aarch64-linux-musl-pkg-config && \\\n  curl https://sh.rustup.rs -sSf | sh -s -- -y \\\n    --no-modify-path \\\n    --profile minimal \\\n    && \\\n  rustup target add aarch64-unknown-linux-musl && \\\n  pip3 install --no-cache-dir meson\n\n# Compiler settings\nENV \\\n  PKG_CONFIG=\"aarch64-linux-musl-pkg-config --static\" \\\n  PLATFORM=\"linuxmusl-arm64v8\" \\\n  CHOST=\"aarch64-linux-musl\" \\\n  RUST_TARGET=\"aarch64-unknown-linux-musl\" \\\n  FLAGS=\"-march=armv8-a\" \\\n  MESON=\"--cross-file=/root/meson.ini\"\n\n# Musl defaults to static libs but we need them to be dynamic for host toolchain.\n# The toolchain will produce static libs by default.\n# We also need to add the directory containing libc.a to the library search path.\nENV \\\n  RUSTFLAGS=\"-Ctarget-feature=-crt-static -Lnative=/aarch64-linux-musl/lib\"\n\nCOPY Toolchain.cmake /root/\nCOPY meson.ini /root/\n"
}