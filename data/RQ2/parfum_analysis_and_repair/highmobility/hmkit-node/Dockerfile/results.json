{
  "startTime": 1674255595946,
  "endTime": 1674255596926,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:10\nWORKDIR /app\n\n# Install latest chrome dev package and fonts to support major charsets (Chinese, Japanese, Arabic, Hebrew, Thai and a few others)\n# Note: this installs the necessary libs to make the bundled version of Chromium that Puppeteer\n# installs, work.\nRUN wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - \\\n    && sh -c 'echo \"deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main\" >> /etc/apt/sources.list.d/google.list' \\\n    && apt-get update \\\n    && apt-get install -y google-chrome-unstable fonts-ipafont-gothic fonts-wqy-zenhei fonts-thai-tlwg fonts-kacst ttf-freefont \\\n    --no-install-recommends \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Install puppeteer so it's available in the container.\n# RUN npm i puppeteer \\\n# Add user so we don't need --no-sandbox.\n# same layer as npm install to keep re-chowned files from using up several hundred MBs more space\nRUN groupadd -r pptruser && useradd -r -g pptruser -G audio,video pptruser \\\n    && mkdir -p /home/pptruser/Downloads\n\n# Install dependencies\nCOPY package.json /app/package.json\nCOPY package-lock.json /app/package-lock.json\nRUN npm install && npm cache clean --force;\n\n# Build application\nCOPY . /app\nRUN npm run build\n\nCMD [\"npm\", \"start\"]"
}