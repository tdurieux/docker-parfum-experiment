{
  "startTime": 1674248836083,
  "endTime": 1674248837108,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 55
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 55
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:10-buster\n\n# Download and extract Sandbox RootFS (as the first-step!)\nCOPY sandbox-rootfs-url.txt /\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y wget && \\\n    wget -O /sandbox-rootfs.tar.xz \"$(cat /sandbox-rootfs-url.txt)\" && \\\n    tar xf /sandbox-rootfs.tar.xz -C / && rm /sandbox-rootfs.tar.xz && rm -rf /var/lib/apt/lists/*;\n\n# Install OS dependencies\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y build-essential libboost-all-dev && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /app\n\n# Install NPM dependencies\nCOPY package.json yarn.lock ./\nRUN yarn --frozen-lockfile\n\n# Copy code and build\nCOPY . .\nRUN yarn build\n\nENV NODE_ENV=production \\\n    SYZOJ_JUDGE_RUNNER_INSTANCE=runner \\\n    SYZOJ_JUDGE_SANDBOX_ROOTFS_PATH=/rootfs \\\n    SYZOJ_JUDGE_WORKING_DIRECTORY=/tmp/working \\\n    SYZOJ_JUDGE_BINARY_DIRECTORY=/tmp/binary \\\n    SYZOJ_JUDGE_TESTDATA_PATH=/app/testdata \\\n    SYZOJ_JUDGE_DO_NOT_USE_X32_ABI=true\n\nVOLUME [\"/app/config\", \"/app/testdata\"]\n\nCOPY ./docker-entrypoint.sh /\nENTRYPOINT [\"/docker-entrypoint.sh\"]\nCMD [\"daemon\"]\n"
}