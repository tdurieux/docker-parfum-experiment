diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/forrestjs/forrestjs/gitbook/legacy/examples_dev/007-graphql/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/forrestjs/forrestjs/gitbook/legacy/examples_dev/007-graphql/Dockerfile/repaired.Dockerfile
index e12dda5..bbaf9e3 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/forrestjs/forrestjs/gitbook/legacy/examples_dev/007-graphql/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/forrestjs/forrestjs/gitbook/legacy/examples_dev/007-graphql/Dockerfile/repaired.Dockerfile
@@ -7,7 +7,7 @@
 #
 # We do install the NPM dependencies twice so to copy over to the
 # production image only what is strictly needed to execute our app.
-# 
+#
 # NPM Install is the first step so to exploit Docker's cache mechanism
 # and speed up the building process. We will re-install from NPM only
 # if we touch the `package.json` file. Which doesn't happen so often.
@@ -18,12 +18,12 @@ FROM node:10.14-alpine AS builder
 # NPM Install for building
 WORKDIR /usr/src/app-build
 ADD package.json /usr/src/app-build/package.json
-RUN npm install
+RUN npm install && npm cache clean --force;
 
 # NPM Install for production
 WORKDIR /usr/src/app-run
 ADD package.json /usr/src/app-run/package.json
-RUN npm install --only=production
+RUN npm install --only=production && npm cache clean --force;
 
 # Copy source files:
 WORKDIR /usr/src/app-build