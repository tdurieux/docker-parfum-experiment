{
  "startTime": 1674250316873,
  "endTime": 1674250318089,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 211,
        "lineEnd": 211,
        "columnStart": 4,
        "columnEnd": 101
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 110,
        "lineEnd": 110,
        "columnStart": 8,
        "columnEnd": 34
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 377,
        "lineEnd": 377,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 378,
        "lineEnd": 378,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 379,
        "lineEnd": 379,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 111,
        "lineEnd": 111,
        "columnStart": 8,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 72
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 72
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 207,
        "lineEnd": 207,
        "columnStart": 22,
        "columnEnd": 65
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 247,
        "lineEnd": 247,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 248,
        "lineEnd": 248,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 249,
        "lineEnd": 249,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 250,
        "lineEnd": 250,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 251,
        "lineEnd": 251,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 252,
        "lineEnd": 252,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 72
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 247,
        "lineEnd": 247,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 248,
        "lineEnd": 248,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 249,
        "lineEnd": 249,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 250,
        "lineEnd": 250,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 251,
        "lineEnd": 251,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 252,
        "lineEnd": 252,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 72
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 247,
        "lineEnd": 247,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 248,
        "lineEnd": 248,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 249,
        "lineEnd": 249,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 250,
        "lineEnd": 250,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 251,
        "lineEnd": 251,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 252,
        "lineEnd": 252,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 75
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 60
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 99
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 247,
        "lineEnd": 247,
        "columnStart": 4,
        "columnEnd": 68
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 248,
        "lineEnd": 248,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 249,
        "lineEnd": 249,
        "columnStart": 4,
        "columnEnd": 61
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 250,
        "lineEnd": 250,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 251,
        "lineEnd": 251,
        "columnStart": 4,
        "columnEnd": 54
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 252,
        "lineEnd": 252,
        "columnStart": 4,
        "columnEnd": 53
      }
    }
  ],
  "repairedDockerfile": "# Tips for efficient Dockerfiles\n\nWe will see how to:\n\n* Reduce the number of layers.\n\n* Leverage the build cache so that builds can be faster.\n\n* Embed unit testing in the build process.\n\n---\n\n## Reducing the number of layers\n\n* Each line in a `Dockerfile` creates a new layer.\n\n* Build your `Dockerfile` to take advantage of Docker's caching system.\n\n* Combine commands by using `&&` to continue commands and `\\` to wrap lines.\n\nNote: it is frequent to build a Dockerfile line by line:\n\n```dockerfile\nRUN apt-get install -y --no-install-recommends thisthing && rm -rf /var/lib/apt/lists/*;\nRUN apt-get install -y --no-install-recommends andthatthing andthatotherone && rm -rf /var/lib/apt/lists/*;\nRUN apt-get install -y --no-install-recommends somemorestuff && rm -rf /var/lib/apt/lists/*;\n```\n\nAnd then refactor it trivially before shipping:\n\n```dockerfile\nRUN apt-get install -y --no-install-recommends thisthing andthatthing andthatotherone somemorestuff && rm -rf /var/lib/apt/lists/*;\n```\n\n---\n\n## Avoid re-installing dependencies at each build\n\n* Classic Dockerfile problem:\n\n  \"each time I change a line of code, all my dependencies are re-installed!\"\n\n* Solution: `COPY` dependency lists (`package.json`, `requirements.txt`, etc.)\n  by themselves to avoid reinstalling unchanged dependencies every time.\n\n---\n\n## Example \"bad\" `Dockerfile`\n\nThe dependencies are reinstalled every time, because the build system does not know if `requirements.txt` has been updated.\n\n```bash\nFROM python\nWORKDIR /src\nCOPY . .\nRUN pip install --no-cache-dir -qr requirements.txt\nEXPOSE 5000\nCMD [\"python\", \"app.py\"]\n```\n\n---\n\n## Fixed `Dockerfile`\n\nAdding the dependencies as a separate step means that Docker can cache more efficiently and only install them when `requirements.txt` changes.\n\n```bash\nFROM python\nCOPY requirements.txt /tmp/requirements.txt\nRUN pip install --no-cache-dir -qr /tmp/requirements.txt\nWORKDIR /src\nCOPY . .\nEXPOSE 5000\nCMD [\"python\", \"app.py\"]\n```\n\n---\n\n## Be careful with `chown`, `chmod`, `mv`\n\n* Layers cannot store efficiently changes in permissions or ownership.\n\n* Layers cannot represent efficiently when a file is moved either.\n\n* As a result, operations like `chown`, `chown`, `mv` can be expensive.\n\n* For instance, in the Dockerfile snippet below, each `RUN` line\n  creates a layer with an entire copy of `some-file`.\n\n  ```dockerfile\n  COPY some-file .\n  RUN chown www-data:www-data some-file\n  RUN chmod 644 some-file\n  RUN mv some-file /var/www\n  ```\n\n* How can we avoid that?\n\n---\n\n## Put files on the right place\n\n* Instead of using `mv`, directly put files at the right place.\n\n* When extracting archives (tar, zip...), merge operations in a single layer.\n\n  Example:\n\n  ```dockerfile\n    ...\n    RUN wget https://.../foo.tar.gz \\\n     && tar -zxf foo.tar.gz \\\n     && mv foo/fooctl /usr/local/bin \\\n     && rm -rf foo && rm foo.tar.gz\n  ...\n  ```\n\n---\n\n## Use `COPY --chown`\n\n* The Dockerfile instruction `COPY` can take a `--chown` parameter.\n\n  Examples:\n\n  ```dockerfile\n  ...\n  COPY --chown=1000 some-file .\n  COPY --chown=1000:1000 some-file .\n  COPY --chown=www-data:www-data some-file .\n  ```\n\n* The `--chown` flag can specify a user, or a user:group pair.\n\n* The user and group can be specified as names or numbers.\n\n* When using names, the names must exist in `/etc/passwd` or `/etc/group`.\n\n  *(In the container, not on the host!)*\n\n---\n\n## Set correct permissions locally\n\n* Instead of using `chmod`, set the right file permissions locally.\n\n* When files are copied with `COPY`, permissions are preserved.\n\n---\n\n## Embedding unit tests in the build process\n\n```dockerfile\nFROM <baseimage>\nRUN <install dependencies>\nCOPY <code>\nRUN <build code>\nRUN <install test dependencies>\nCOPY <test data sets and fixtures>\nRUN <unit tests>\nFROM <baseimage>\nRUN <install dependencies>\nCOPY <code>\nRUN <build code>\nCMD, EXPOSE ...\n```\n\n* The build fails as soon as an instruction fails\n* If `RUN <unit tests>` fails, the build doesn't produce an image\n* If it succeeds, it produces a clean image (without test libraries and data)\n\n---\n\n# Dockerfile examples\n\nThere are a number of tips, tricks, and techniques that we can use in Dockerfiles.\n\nBut sometimes, we have to use different (and even opposed) practices depending on:\n\n- the complexity of our project,\n\n- the programming language or framework that we are using,\n\n- the stage of our project (early MVP vs. super-stable production),\n\n- whether we're building a final image or a base for further images,\n\n- etc.\n\nWe are going to show a few examples using very different techniques.\n\n---\n\n## When to optimize an image\n\nWhen authoring official images, it is a good idea to reduce as much as possible:\n\n- the number of layers,\n\n- the size of the final image.\n\nThis is often done at the expense of build time and convenience for the image maintainer;\nbut when an image is downloaded millions of time, saving even a few seconds of pull time\ncan be worth it.\n\n.small[\n```dockerfile\nRUN apt-get update && apt-get install --no-install-recommends -y libpng12-dev libjpeg-dev && rm -rf /var/lib/apt/lists/* \\\n\t&& docker-php-ext-configure gd --with-png-dir=/usr --with-jpeg-dir=/usr \\\n\t&& docker-php-ext-install gd\n...\nRUN curl -f -o wordpress.tar.gz -SL https://wordpress.org/wordpress-${WORDPRESS_UPSTREAM_VERSION}.tar.gz \\\n\t&& echo \"$WORDPRESS_SHA1 *wordpress.tar.gz\" | sha1sum -c - \\\n\t&& tar -xzf wordpress.tar.gz -C /usr/src/ \\\n\t&& rm wordpress.tar.gz \\\n\t&& chown -R www-data:www-data /usr/src/wordpress\n```\n]\n\n(Source: [Wordpress official image](https://github.com/docker-library/wordpress/blob/618490d4bdff6c5774b84b717979bfe3d6ba8ad1/apache/Dockerfile))\n\n---\n\n## When to *not* optimize an image\n\nSometimes, it is better to prioritize *maintainer convenience*.\n\nIn particular, if:\n\n- the image changes a lot,\n\n- the image has very few users (e.g. only 1, the maintainer!),\n\n- the image is built and run on the same machine,\n\n- the image is built and run on machines with a very fast link ...\n\nIn these cases, just keep things simple!\n\n(Next slide: a Dockerfile that can be used to preview a Jekyll / github pages site.)\n\n---\n\n```dockerfile\nFROM debian:sid\n\nRUN apt-get update -q\nRUN apt-get install --no-install-recommends -yq build-essential make && rm -rf /var/lib/apt/lists/*;\nRUN apt-get install --no-install-recommends -yq zlib1g-dev && rm -rf /var/lib/apt/lists/*;\nRUN apt-get install --no-install-recommends -yq ruby ruby-dev && rm -rf /var/lib/apt/lists/*;\nRUN apt-get install --no-install-recommends -yq python-pygments && rm -rf /var/lib/apt/lists/*;\nRUN apt-get install --no-install-recommends -yq nodejs && rm -rf /var/lib/apt/lists/*;\nRUN apt-get install --no-install-recommends -yq cmake && rm -rf /var/lib/apt/lists/*;\nRUN gem install --no-rdoc --no-ri github-pages\n\nCOPY . /blog\nWORKDIR /blog\n\nVOLUME /blog/_site\n\nEXPOSE 4000\nCMD [\"jekyll\", \"serve\", \"--host\", \"0.0.0.0\", \"--incremental\"]\n```\n\n---\n\n## Multi-dimensional versioning systems\n\nImages can have a tag, indicating the version of the image.\n\nBut sometimes, there are multiple important components, and we need to indicate the versions\nfor all of them.\n\nThis can be done with environment variables:\n\n```dockerfile\nENV PIP=9.0.3 \\\n    ZC_BUILDOUT=2.11.2 \\\n    SETUPTOOLS=38.7.0 \\\n    PLONE_MAJOR=5.1 \\\n    PLONE_VERSION=5.1.0 \\\n    PLONE_MD5=76dc6cfc1c749d763c32fff3a9870d8d\n```\n\n(Source: [Plone official image](https://github.com/plone/plone.docker/blob/master/5.1/5.1.0/alpine/Dockerfile))\n\n---\n\n## Entrypoints and wrappers\n\nIt is very common to define a custom entrypoint.\n\nThat entrypoint will generally be a script, performing any combination of:\n\n- pre-flights checks (if a required dependency is not available, display\n  a nice error message early instead of an obscure one in a deep log file),\n\n- generation or validation of configuration files,\n\n- dropping privileges (with e.g. `su` or `gosu`, sometimes combined with `chown`),\n\n- and more.\n\n---\n\n## A typical entrypoint script\n\n```dockerfile\n #!/bin/sh\n set -e\n\n # first arg is '-f' or '--some-option'\n # or first arg is 'something.conf'\n if [ \"${1#-}\" != \"$1\" ] || [ \"${1%.conf}\" != \"$1\" ]; then\n  set -- redis-server \"$@\"\n fi\n\n # allow the container to be started with '--user'\n if [ \"$1\" = 'redis-server' -a \"$(id -u)\" = '0' ]; then\n  chown -R redis .\n  exec su-exec redis \"$0\" \"$@\"\n fi\n\n exec \"$@\"\n```\n\n(Source: [Redis official image](https://github.com/docker-library/redis/blob/d24f2be82673ccef6957210cc985e392ebdc65e4/4.0/alpine/docker-entrypoint.sh))\n\n---\n\n## Factoring information\n\nTo facilitate maintenance (and avoid human errors), avoid to repeat information like:\n\n- version numbers,\n\n- remote asset URLs (e.g. source tarballs) ...\n\nInstead, use environment variables.\n\n.small[\n```dockerfile\nENV NODE_VERSION 10.2.1\n...\nRUN ...\n    && curl -fsSLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION.tar.xz\" \\\n    && curl -fsSLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\" \\\n    && gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc \\\n    && grep \" node-v$NODE_VERSION.tar.xz\\$\" SHASUMS256.txt | sha256sum -c - \\\n    && tar -xf \"node-v$NODE_VERSION.tar.xz\" \\\n    && cd \"node-v$NODE_VERSION\" \\\n...\n```\n]\n\n(Source: [Nodejs official image](https://github.com/nodejs/docker-node/blob/master/10/alpine/Dockerfile))\n\n---\n\n## Overrides\n\nIn theory, development and production images should be the same.\n\nIn practice, we often need to enable specific behaviors in development (e.g. debug statements).\n\nOne way to reconcile both needs is to use Compose to enable these behaviors.\n\nLet's look at the [trainingwheels](https://github.com/jpetazzo/trainingwheels) demo app for an example.\n\n---\n\n## Production image\n\nThis Dockerfile builds an image leveraging gunicorn:\n\n```dockerfile\nFROM python\nRUN pip install --no-cache-dir flask\nRUN pip install --no-cache-dir gunicorn\nRUN pip install --no-cache-dir redis\nCOPY . /src\nWORKDIR /src\nCMD gunicorn --bind 0.0.0.0:5000 --workers 10 counter:app\nEXPOSE 5000\n```\n\n(Source: [trainingwheels Dockerfile](https://github.com/jpetazzo/trainingwheels/blob/master/www/Dockerfile))\n\n---\n\n## Development Compose file\n\nThis Compose file uses the same image, but with a few overrides for development:\n\n- the Flask development server is used (overriding `CMD`),\n\n- the `DEBUG` environment variable is set,\n\n- a volume is used to provide a faster local development workflow.\n\n.small[\n```yaml\nservices:\n  www:\n    build: www\n    ports:\n      - 8000:5000\n    user: nobody\n    environment:\n      DEBUG: 1\n    command: python counter.py\n    volumes:\n      - ./www:/src\n```\n]\n\n(Source: [trainingwheels Compose file](https://github.com/jpetazzo/trainingwheels/blob/master/docker-compose.yml))\n\n---\n\n## How to know which best practices are better?\n\n- The main goal of containers is to make our lives easier.\n\n- In this chapter, we showed many ways to write Dockerfiles.\n\n- These Dockerfiles use sometimes diametrally opposed techniques.\n\n- Yet, they were the \"right\" ones *for a specific situation.*\n\n- It's OK (and even encouraged) to start simple and evolve as needed.\n\n- Feel free to review this chapter later (after writing a few Dockerfiles) for inspiration!\n"
}