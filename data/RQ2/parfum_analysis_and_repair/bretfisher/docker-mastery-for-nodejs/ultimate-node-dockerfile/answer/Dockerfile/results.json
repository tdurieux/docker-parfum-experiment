{
  "startTime": 1674251930596,
  "endTime": 1674251931924,
  "originalSmells": [
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 25,
        "lineEnd": 30,
        "columnStart": 26,
        "columnEnd": 27
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# this is an answer file for Assignment\n# move it up a directory for it to work\n\nFROM node:8-slim as base\nLABEL org.opencontainers.image.authors=bret@bretfisher.com\nLABEL org.opencontainers.image.title=\"Node.js Ultimate Dockerfile\"\nLABEL org.opencontainers.image.licenses=MIT\nLABEL com.bretfisher.nodeversion=$NODE_VERSION\nENV NODE_ENV=production\nEXPOSE 8080\nENV PORT 8080\nWORKDIR /app\nCOPY package*.json ./\nRUN npm config list\nRUN npm ci \\\n    && npm cache clean --force\nENV PATH /app/node_modules/.bin:$PATH\nENV TINI_VERSION v0.18.0\nADD https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini /tini\nRUN chmod +x /tini\nENTRYPOINT [\"/tini\", \"--\"]\nCMD [\"node\", \"server.js\"]\n\nFROM base as dev\nENV NODE_ENV=development\nRUN apt-get update -qq && apt-get install -qy \\ \n    ca-certificates \\\n    bzip2 \\\n    curl \\\n    libfontconfig \\\n    --no-install-recommends && rm -rf /var/lib/apt/lists/*;\nRUN npm config list\nRUN npm install --only=development \\\n    && npm cache clean --force\nUSER node\nCMD [\"nodemon\", \"server.js\"]\n\n\nFROM dev as test\nCOPY . .\nRUN npm audit\nARG MICROSCANNER_TOKEN\nADD https://get.aquasec.com/microscanner /\nUSER root\nRUN chmod +x /microscanner\nRUN /microscanner $MICROSCANNER_TOKEN --continue-on-failure\n\nFROM test as pre-prod\nRUN rm -rf ./tests && rm -rf ./node_modules\n\nFROM base as prod\nCOPY --from=pre-prod /app /app\nHEALTHCHECK CMD curl http://127.0.0.1/ || exit 1\nUSER node\n"
}