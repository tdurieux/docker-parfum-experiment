{
  "startTime": 1674249933154,
  "endTime": 1674249933920,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 92
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 99
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 96
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 142
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 142
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 36
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:20.04\nARG NODE_VERSION=v16.13.0\nARG DOTNET_VERSION=6.0\nARG SONARSCANNER_VERSION=5.3.2\n\nENV SUMMARY=\"Azure DevOps agent with .NET\"  \\\n    DESCRIPTION=\"Azure DevOps agent base image with .NET v${DOTNET_VERSION}, nodejs ${NODE_VERSION}, OpenShift CLI\"\n\nLABEL summary=\"$SUMMARY\" \\\n    description=\"$DESCRIPTION\" \\\n    io.k8s.description=\"$DESCRIPTION\" \\\n    io.k8s.display-name=\"azure-devlops-.net${DOTNET_VERSION}\" \\\n    io.openshift.expose-services=\"8080:http\" \\\n    io.openshift.tags=\"builder,azure,devops,agent,.net-v${DOTNET_VERSION},nodejs-${NODE_VERSION},openshift\" \\\n    release=\"1\"\n\nRUN export DEBIAN_FRONTEND=noninteractive && \\\n    apt-get update -y && \\\n    apt-get install --no-install-recommends -y g++ build-essential python git default-jdk tzdata iputils-ping telnet traceroute curl apt-transport-https libpng-dev jq && \\\n    curl -f -sLO https://packages.microsoft.com/config/ubuntu/20.04/packages-microsoft-prod.deb && \\\n    dpkg -i packages-microsoft-prod.deb && \\\n    rm packages-microsoft-prod.deb && \\\n    apt-get update -y && \\\n    apt-get install --no-install-recommends -y dotnet-sdk-${DOTNET_VERSION} && \\\n    apt-get install --no-install-recommends -y postgresql-client && \\\n    apt-get install --no-install-recommends -y dh-autoreconf && \\\n    ln -fs /usr/share/zoneinfo/America/Vancouver /etc/localtime && \\\n    dpkg-reconfigure --frontend noninteractive tzdata && rm -rf /var/lib/apt/lists/*;\n\n# Fetch stock nodejs and install\nRUN mkdir -p /opt && \\\n    cd /opt && \\\n    curl -f -sL https://nodejs.org/dist/${NODE_VERSION}/node-${NODE_VERSION}-linux-x64.tar.gz?raw=true | tar -zx && \\\n    rm -f node-${NODE_VERSION}-linux-x64.tar.gz\n\n#Fetch OpenShift client and install\nRUN mkdir -p /opt/bin && \\\n    cd /opt/bin && \\\n    curl -f -sL https://downloads-openshift-console.apps.silver.devops.gov.bc.ca/amd64/linux/oc.tar | tar -x && \\\n    rm -f oc.tar\n\n# Update environment variables\nENV LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/lib\nENV AZP_URL=set_me_to_the_org_url\nENV AZP_TOKEN=set_me_to_a_pat\nENV HOME=/tmp\nENV NODE_HOME=/opt/node-${NODE_VERSION}-linux-x64\nENV PATH=$PATH:/opt/az/agent/bin:/opt/node-${NODE_VERSION}-linux-x64/bin:/opt/bin:$HOME/.local/bin/:$HOME/.dotnet/tools\n\n# Update the version of `npm` that came with the packages above\nRUN npm i -g npm@latest && \\\n    rm -rf ~/.npm && \\\n    node -v && \\\n    npm -v && npm cache clean --force;\n\n# Install .Net tooling for SonarQube and Test Results\nRUN dotnet tool install --global dotnet-sonarscanner --version ${SONARSCANNER_VERSION}&& \\\n    dotnet tool install -g dotnet-reportgenerator-globaltool && \\\n    chmod -R 777 $HOME && \\\n    rm -rf /tmp/NuGetScratch/lock/* && \\\n    chmod 777 /tmp/.nuget\n\nRUN mkdir /opt/az &&\\\n    chmod -R 777 /opt/az\n\nADD https://github.com/bcgov/healthgateway/blob/dev/Tools/AzureAgent/scripts/start.sh?raw=true /opt/az/start.sh\nADD https://github.com/bcgov/healthgateway/blob/dev/Tools/AzureAgent/scripts/stop.sh?raw=true /opt/az/stop.sh\nRUN chmod +rx /opt/az/*.sh\n\nWORKDIR /opt/az\n\nUSER 1001\n\nCMD [\"bash\", \"-c\", \"/opt/az/start.sh\"]\n"
}