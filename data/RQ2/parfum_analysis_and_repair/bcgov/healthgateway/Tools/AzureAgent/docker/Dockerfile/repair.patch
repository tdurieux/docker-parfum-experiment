diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/bcgov/healthgateway/Tools/AzureAgent/docker/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/bcgov/healthgateway/Tools/AzureAgent/docker/Dockerfile/repaired.Dockerfile
index 6a4387b..a928e91 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/bcgov/healthgateway/Tools/AzureAgent/docker/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/bcgov/healthgateway/Tools/AzureAgent/docker/Dockerfile/repaired.Dockerfile
@@ -14,29 +14,29 @@ LABEL summary="$SUMMARY" \
     io.openshift.tags="builder,azure,devops,agent,.net-v${DOTNET_VERSION},nodejs-${NODE_VERSION},openshift" \
     release="1"
 
-RUN  export DEBIAN_FRONTEND=noninteractive && \
+RUN export DEBIAN_FRONTEND=noninteractive && \
     apt-get update -y && \
-    apt-get install -y g++ build-essential python git default-jdk tzdata iputils-ping telnet traceroute curl apt-transport-https libpng-dev jq && \
-    curl -sLO https://packages.microsoft.com/config/ubuntu/20.04/packages-microsoft-prod.deb && \
-    dpkg -i packages-microsoft-prod.deb && \ 
+    apt-get install --no-install-recommends -y g++ build-essential python git default-jdk tzdata iputils-ping telnet traceroute curl apt-transport-https libpng-dev jq && \
+    curl -f -sLO https://packages.microsoft.com/config/ubuntu/20.04/packages-microsoft-prod.deb && \
+    dpkg -i packages-microsoft-prod.deb && \
     rm packages-microsoft-prod.deb && \
-    apt-get update -y && \ 
-    apt-get install -y dotnet-sdk-${DOTNET_VERSION} && \
-    apt-get install -y postgresql-client && \
-    apt-get install -y dh-autoreconf && \
+    apt-get update -y && \
+    apt-get install --no-install-recommends -y dotnet-sdk-${DOTNET_VERSION} && \
+    apt-get install --no-install-recommends -y postgresql-client && \
+    apt-get install --no-install-recommends -y dh-autoreconf && \
     ln -fs /usr/share/zoneinfo/America/Vancouver /etc/localtime && \
-    dpkg-reconfigure --frontend noninteractive tzdata
+    dpkg-reconfigure --frontend noninteractive tzdata && rm -rf /var/lib/apt/lists/*;
 
 # Fetch stock nodejs and install
 RUN mkdir -p /opt && \
     cd /opt && \
-    curl -sL https://nodejs.org/dist/${NODE_VERSION}/node-${NODE_VERSION}-linux-x64.tar.gz?raw=true | tar -zx && \
+    curl -f -sL https://nodejs.org/dist/${NODE_VERSION}/node-${NODE_VERSION}-linux-x64.tar.gz?raw=true | tar -zx && \
     rm -f node-${NODE_VERSION}-linux-x64.tar.gz
 
 #Fetch OpenShift client and install
 RUN mkdir -p /opt/bin && \
     cd /opt/bin && \
-    curl -sL https://downloads-openshift-console.apps.silver.devops.gov.bc.ca/amd64/linux/oc.tar | tar -x && \
+    curl -f -sL https://downloads-openshift-console.apps.silver.devops.gov.bc.ca/amd64/linux/oc.tar | tar -x && \
     rm -f oc.tar
 
 # Update environment variables
@@ -51,7 +51,7 @@ ENV PATH=$PATH:/opt/az/agent/bin:/opt/node-${NODE_VERSION}-linux-x64/bin:/opt/bi
 RUN npm i -g npm@latest && \
     rm -rf ~/.npm && \
     node -v && \
-    npm -v
+    npm -v && npm cache clean --force;
 
 # Install .Net tooling for SonarQube and Test Results
 RUN dotnet tool install --global dotnet-sonarscanner --version ${SONARSCANNER_VERSION}&& \