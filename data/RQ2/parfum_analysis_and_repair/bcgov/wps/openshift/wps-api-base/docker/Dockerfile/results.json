{
  "startTime": 1674216721321,
  "endTime": 1674216721920,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 113
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 36,
        "columnEnd": 113
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 36,
        "columnEnd": 113
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# As per https://fastapi.tiangolo.com/deployment/, we use the provided docker image from docker\n# tianglo/uvicorn-gunicorn-fastapi:python3.9\n# see: https://github.com/tiangolo/uvicorn-gunicorn-fastapi-docker for available images.\n#\n# When building in openshift, you'll need the latest image in openshift:\n# 1) get the latest:\n# docker pull tiangolo/uvicorn-gunicorn-fastapi:python3.9\n# 2) tag it for upload:\n# docker tag tiangolo/uvicorn-gunicorn-fastapi:python3.9 image-registry.apps.silver.devops.gov.bc.ca/e1e498-tools/uvicorn-gunicorn-fastapi:python3.9\n# 3) log into openshift:\n# docker login -u developer -p $(oc whoami -t) image-registry.apps.silver.devops.gov.bc.ca\n# 4) push to openshift:\n# docker push image-registry.apps.silver.devops.gov.bc.ca/e1e498-tools/uvicorn-gunicorn-fastapi:python3.9\n\n\n# When building in openshift, you can reference the image in openshift:\n# FROM image-registry.openshift-image-registry.svc:5000/e1e498-tools/uvicorn-gunicorn-fastapi:python3.9\n#\n# When building local, you can reference the docker image:\nFROM tiangolo/uvicorn-gunicorn-fastapi:python3.9\n\n# Install pre-requisites\n# - old (2.4.*; current debian) version of gdal\n# - R (for cffdrs)\n# - JDK (for red-app)\n# - xfonts-75dpi xfonts-base (for wkhtmltopdf)\nRUN apt-get update --fix-missing && apt-get -y --no-install-recommends install libgdal-dev r-base openjdk-11-jdk xfonts-75dpi xfonts-base && rm -rf /var/lib/apt/lists/*;\n\n# Install cffdrs\nRUN R -e \"install.packages('cffdrs')\"\n\n# Install pdf-kit for PDF generation on HFI (with qt support!)\n# We can't just run apt-get -y install wkhtmltopdf, because we don't get qt support.\nRUN wget https://github.com/wkhtmltopdf/packaging/releases/download/0.12.6-1/wkhtmltox_0.12.6-1.buster_amd64.deb -P /tmp && \\\n    dpkg -i /tmp/wkhtmltox_0.12.6-1.buster_amd64.deb\n\n# Update pip \nRUN python -m pip install --upgrade pip\n\n# According to the stackexchange thread below, we need to install numpy before\n# installing gdal or we could end up missing _gdal_array\n# https://gis.stackexchange.com/questions/153199/import-error-no-module-named-gdal-array\nRUN python -m pip install numpy\n\n# Install gdal\n# We don't have much control over what version of gdal we're getting, it's pretty much whatever is\n# available to us. As such, gdal is not installed by poetry, since the version will differ between\n# platforms.\nRUN python -m pip install gdal==$(gdal-config --version)\n\n# Install poetry https://python-poetry.org/docs/#installation\nRUN cd /tmp && \\\n    curl -f -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/install-poetry.py > install-poetry.py && \\\n    POETRY_HOME=/opt/poetry python install-poetry.py --version 1.1.11 && \\\n    cd /usr/local/bin && \\\n    ln -s /opt/poetry/bin/poetry && \\\n    poetry config virtualenvs.create false && \\\n    poetry config experimental.new-installer false\n"
}