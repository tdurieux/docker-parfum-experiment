{
  "startTime": 1674250295387,
  "endTime": 1674250296042,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 33,
        "columnEnd": 59
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 63,
        "columnEnd": 93
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG DOCKER_IMAGE=image-registry.openshift-image-registry.svc:5000/e1e498-tools/wps-web-base\n# SUPER IMPORTANT: NODE_OPTIONS=\"--v8-pool-size=1\"\n# A pod running in our openshift cluster, will report a ridiculous amount of cpu's available, as\n# it's reporting on the underlying hardware. Node, in it's wisdom, will try to scale to using a\n# huge amount of cpu's, which in turn results in massive memory usage. It's very important to limit\n# the cpu pool size to something realistic.\nARG NODE_OPTIONS=\"--v8-pool-size=4\"\n\n# PHASE 1 - build static html.\n# Pull from local registry - we can't pull from docker due to limits.\n# see https://catalog.redhat.com/software/containers/ubi8/nodejs-14/5ed7887dd70cc50e69c2fabb for\n# details\nFROM registry.access.redhat.com/ubi8/nodejs-16 as static\n\n# Switch to root user for package installs\nUSER 0\n\nADD web .\n# NOTE: Can't use \"--production=true\", build will fail.\nRUN npm install -g npm@latest && npm install -g yarn@latest && yarn install --frozen-lockfile && npm cache clean --force; && yarn cache clean;\nRUN yarn run build\n\n# Switch back to default user\nUSER 1001\n\n# # PHASE 2 - prepare hosting.\n# https://catalog.redhat.com/software/containers/ubi8/nginx-120/6156abfac739c0a4123a86fd\nFROM registry.access.redhat.com/ubi8/nginx-120\n\n# Add application sources\nADD ./openshift/nginx.conf \"${NGINX_CONF_PATH}\"\n\n# Copy the static content:\nCOPY --from=static /opt/app-root/src/build .\n\nEXPOSE 3000\nCMD nginx -g \"daemon off;\""
}