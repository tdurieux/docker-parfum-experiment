{
  "startTime": 1674251471165,
  "endTime": 1674251472360,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 41
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# base image\nFROM node:14.16 as buildDeps\n#SHELL [ \"/bin/bash\",\"-c\"]\n# set working directory\nUSER 0\nENV NODE_ROOT /usr/src/app\nENV REDIRECT_URL $REDIRECT_URL\nRUN mkdir -p /usr/src/app && rm -rf /usr/src/app\n\nRUN printenv && \\\n    pwd && \\\n    ls -alh\nWORKDIR /usr/src/app\n\nCOPY . .\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends yarn && \\\n    apt-get install --no-install-recommends -y nginx gettext-base && \\\n    mkdir -p /var/cache/nginx && \\\n    mkdir -p /var/cache/nginx/client_temp && \\\n    touch /etc/nginx/conf.d/default.conf && \\\n    chmod -R 777 /etc/nginx && \\\n    chmod -R 777 /var/cache/nginx && \\\n    chmod -R 777 /var/run && rm -rf /var/lib/apt/lists/*;\nCOPY nginx.conf /etc/nginx/\nCOPY nginxdev.conf /etc/nginx/nginx.template.conf\nCOPY entrypoint.sh /\n\nRUN cat /usr/src/app/src/environments/environment.prod.ts\nRUN npm install @angular/cli -g && \\\n    yarn && \\\n    ng build --configuration=production && \\\n    echo \"NPM packages installed...\" && npm cache clean --force;\n\n# RUN npm audit fix && \\\n# FROM nginx:1.15-alpine\n# COPY --from=buildDeps /usr/src/app/dist/angular-frontend /usr/share/nginx/html\n# RUN rm -f /etc/nginx/conf.d/default.conf\n# COPY --from=buildDeps /usr/src/app/nginx.conf /etc/nginx/\n# COPY --from=buildDeps /usr/src/app/nginx.template.conf /etc/nginx/nginx.template.conf\n# COPY --from=build-deps /usr/src/app/nginx${OC_APP}.conf /etc/nginx/nginx.template.conf\n# COPY --from=buildDeps /usr/src/app/entrypoint.sh /etc/nginx\n\nRUN chmod +x /entrypoint.sh && \\\n    chmod 777 /entrypoint.sh && \\\n    echo \"Build completed.\"\n\n#WORKDIR /\n\nCOPY ./entrypoint.sh /\nRUN chmod +x /entrypoint.sh\n\nEXPOSE 80 8080 4200:8080\n\n#CMD /etc/nginx/entrypoint.sh\nCMD /entrypoint.sh\n"
}