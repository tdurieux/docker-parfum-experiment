{
  "startTime": 1674249736480,
  "endTime": 1674249737274,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 31,
        "columnEnd": 64
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 22,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 22,
        "columnEnd": 49
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 22,
        "columnEnd": 49
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.10-bullseye\n\nARG TT_USER=tt_service\n\nRUN apt-get update && apt-get install -y --no-install-recommends wait-for-it && rm -rf /var/lib/apt/lists/*;\n\nRUN useradd -m $TT_USER\n\nUSER $TT_USER\n\nENV HOME=\"/home/$TT_USER\"\n\nENV HOME_BIN=\"$HOME/.local/bin/\" \\\n    TT_REPOSITORY=\"$HOME/repository\" \\\n    TT_VENV=\"$HOME/venv\"\n\nENV PATH=\"$PATH:$HOME_BIN\"\n\nWORKDIR $HOME\n\nRUN mkdir -p $TT_REPOSITORY\n\nCOPY --chown=$TT_USER ./docker/common/bin/* $HOME_BIN\n\nCOPY --chown=$TT_USER ./docker/common/requirements.txt $HOME\n\n# Use virtual environment, since poetry can not detect packages, installed outside environments,\n# and always reinstalls them, even if their version did not changed\n\nRUN python -m pip install --upgrade pip\n\nRUN python -m venv $TT_VENV\n\nRUN . $TT_VENV/bin/activate && pip install --no-cache-dir -r ./requirements.txt\n\n# Copy actual code to container\n# It will be runing in production\n# In development environment it will be replaced by mounted volume\nCOPY --chown=$TT_USER ./src  $TT_REPOSITORY/src\n\n# Setup tt_web & tt_protocols\n# not ideal solution, since concrete service can require different package version,\n# but for most cases it will spedup container builds\n# in case of problems with packages versions, child container could install right version, specified in service lock file\n\nRUN . $TT_VENV/bin/activate && \\\n    cd $TT_REPOSITORY/src/tt_web && poetry install && \\\n    cd $TT_REPOSITORY/src/tt_protocol && poetry install\n\nENTRYPOINT [\"entrypoint.sh\"]\n"
}