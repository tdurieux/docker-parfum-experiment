{
  "startTime": 1674215797611,
  "endTime": 1674215798775,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 94
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 27,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 94
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 27,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 94
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 27,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 53
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 118
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 27,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 77
      }
    }
  ],
  "repairedDockerfile": "# Description:\n#   This Dockerfile creates a container with a build environment for OpenWrt on apu4.\n#   https://openwrt.org/docs/guide-developer/start\n# Usage:\n#   From this directory, run $ sudo docker build --build-arg CONTMNTSCRIPTS=/mnt/docker/scripts --build-arg CONTMNTSANDBOX=/mnt/docker/sandbox -t t_openwrtapu4buildenv .\n\n# By default, runs as root\n\n# Pull kali-last-release:latest\nFROM kalilinux/kali-last-release:latest\n\n# arguments:\nARG CONTMNTSCRIPTS #e.g., /mnt/docker/scripts\nARG CONTMNTSANDBOX #e.g., /mnt/docker/sandbox\n\n# Mount the shared directories\nRUN mkdir -p $CONTMNTSCRIPTS\nRUN mkdir -p $CONTMNTSANDBOX\nRUN chmod -R uga+w $CONTMNTSCRIPTS\nRUN chmod -R uga+w $CONTMNTSANDBOX\n\nRUN apt-get update\n\n# Get useful utilities\nRUN apt-get install --no-install-recommends apt-utils net-tools iputils-ping openssh-server terminator vim binutils -y && rm -rf /var/lib/apt/lists/*;\n\n# Get the dependencies for openwrt (see https://openwrt.org/docs/guide-developer/toolchain/install-buildsystem)\nRUN apt-get install --no-install-recommends build-essential ccache ecj fastjar file g++ gawk \\\ngettext git java-propose-classpath libelf-dev libncurses5-dev \\\nlibncursesw5-dev libssl-dev python2.7-dev python3 unzip wget \\\npython3-distutils python3-setuptools python3-dev rsync subversion \\\nswig time xsltproc zlib1g-dev -y && rm -rf /var/lib/apt/lists/*;\n\n# Install X dependencies\nRUN apt-get install --no-install-recommends libxext6 libxtst6 libxi6 xauth -y && rm -rf /var/lib/apt/lists/*;\n\nCOPY scripts/build.sh $CONTMNTSCRIPTS/.\nCOPY scripts/create-user.sh $CONTMNTSCRIPTS/.\nCOPY diffconfig $CONTMNTSANDBOX/.\n\n# Finished!\nRUN echo 'Container is ready, run it using $ docker run -d --name openwrtapu4buildenv -v scripts:/mnt/docker/scripts -t t_openwrtapu4buildenv:latest'\nRUN echo 'Attach to the container by running $ docker exec -it openwrtapu4buildenv bash'\nRUN echo 'Create your user by running $ /mnt/docker/scripts/create_user.sh -u <USERNAME> -p <PASSWORD>'\nRUN echo 'Switch to your user by running $ su <USERNAME>'\nRUN echo 'Run the build script via $ /mnt/docker/scripts/build.sh'\nRUN echo 'Binary will be located in /mnt/docker/sandbox/openwrt/bin/targets/x86/64'"
}