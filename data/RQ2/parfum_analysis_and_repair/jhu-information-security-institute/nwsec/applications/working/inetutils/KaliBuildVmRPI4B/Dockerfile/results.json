{
  "startTime": 1674255616324,
  "endTime": 1674255616894,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 78
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 78
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 78
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Description:\n#   This build environment example Dockerfile creates a container for building inetutils-telnetd\n# Usage:\n#   From this directory, run $ sudo docker build -t tkalibuildenv .\n# Useful websites:\n#   https://www.kali.org/docs/development/recompiling-the-kali-linux-kernel/\n\n# This Dockerfile assumes that you have extracted the cross-compiler toolchain on your host in /opt/gnu\n\n# By default, runs as root\n\n# List of containers for kali are here:\n# https://gitlab.com/kalilinux/build-scripts/kali-docker/container_registry\n\n# Pull kali:2019.4\nFROM registry.gitlab.com/kalilinux/build-scripts/kali-docker/kali:2019.4\n\nRUN apt-get update && apt-get install --no-install-recommends build-essential autotools-dev automake autoconf texinfo -y && rm -rf /var/lib/apt/lists/*; # Get the dependencies for git, then get openssl\n\n\n# Create a directory for mounting gnu toolchain with cross-compiler from a host folder\nRUN mkdir -p /opt/gnu\nRUN useradd -ms /bin/bash dummy\nCOPY cross-compile.sh /home/dummy/.\n\n# Finished!\nRUN echo 'Container is ready, run it using $ sudo docker run --name kalibuildenv -v /opt/gnu:/opt/gnu -it tkalibuildenv:latest'"
}