{
  "startTime": 1674218447526,
  "endTime": 1674218448763,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 134
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 108
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 134
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 108
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 134
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 108
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 40
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 87
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 158
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 88
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 132
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 64
      }
    }
  ],
  "repairedDockerfile": "# Description:\n#   This runtime environment example Dockerfile creates a container with a minimal Ubuntu server and nfs server\n# Usage:\n#   From this directory, run $ docker build -t tnfssvr .\n#   By default, runs as root\n# https://help.ubuntu.com/community/SettingUpNFSHowTo\n# https://help.ubuntu.com/community/NFSv4Howto\n\nFROM ubuntu:20.04\n\n#https://grigorkh.medium.com/fix-tzdata-hangs-docker-image-build-cdb52cc3360d\nENV TZ=US/Eastern\nRUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone\n\n#avoid question/dialog during apt-get installs\nARG DEBIAN_FRONTEND noninteractive\n\n# Setup container's ENV for systemd\nENV container docker\n\n#update\nRUN apt-get update\n\n#install utilities\nRUN apt-get install --no-install-recommends apt-utils dpkg-dev debconf debconf-utils -y && rm -rf /var/lib/apt/lists/*;\nRUN apt-get install --no-install-recommends net-tools iputils-ping iptables iproute2 wget nmap bind9-dnsutils dnsutils inetutils-traceroute isc-dhcp-common -y && rm -rf /var/lib/apt/lists/*;\nRUN apt-get install --no-install-recommends vim acl sudo telnet ssh netcat nfs-common -y && rm -rf /var/lib/apt/lists/*;\n\n#install dependencies for systemd and syslog\nRUN apt-get install --no-install-recommends systemd systemd-sysv syslog-ng syslog-ng-core syslog-ng-mod-sql syslog-ng-mod-mongodb -y && rm -rf /var/lib/apt/lists/*;\n\n#start systemd\nCMD [\"/usr/lib/systemd/systemd\", \"--system\"]\n\n#install all the things (nfs server)\nRUN apt-get install --no-install-recommends nfs-kernel-server -y && rm -rf /var/lib/apt/lists/*;\n\n#update configuration files\nCOPY etc_exports /etc/exports\nCOPY etc_fstab /etc/fstab\n\n#create a few easy to guess users and passwords\nRUN useradd -m student\nRUN echo 'student:nwsec' | chpasswd\nRUN useradd -m john\nRUN echo 'john:password' | chpasswd\nRUN useradd -m jane\nRUN echo 'jane:password' | chpasswd\n\n# Finished!\nRUN echo $'\\n\\\n* Make sure that you have created the /nfsshare directory on the VM itself prior to running the container \\n\\    \n* Container is ready, run it using $ docker run -d --name nfssvr --hostname nfs.nwsecdocker.jhu.edu --add-host nfs.nwsecdocker.jhu.edu:127.0.1.1 --dns 192.168.25.10 --dns-search nwsecdocker.jhu.edu --privileged -v /sys/fs/cgroup:/sys/fs/cgroup:ro -v /nfsshare:/nfsshare:rw --network host --cpus=1 tnfssvr:latest \\n\\\n* Attach to it using $ docker exec -it nfssvr bash \\n\\\n* nfs-kernel-server status is available using # systemctl status nfs-kernel-server \\n\\\n* nfs-kernel-server can be stopped and started as well using systemctl \\n\\\n* On the VM hosting this nfs server, create the /nfsshared directory for the volume shared with the container \\n\\\n* On the client, create /mnt/nfs and mount using $ sudo mount -vvvv -t nfs -o proto=tcp,port=2049 nfs.nwsecdocker.jhu.edu:/nfsshare /mnt/nfs'\n\n"
}