{
  "startTime": 1674216538503,
  "endTime": 1674216541294,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 260,
        "lineEnd": 260,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 135,
        "lineEnd": 135,
        "columnStart": 4,
        "columnEnd": 97
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 201,
        "lineEnd": 201,
        "columnStart": 16,
        "columnEnd": 58
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 172,
        "lineEnd": 172,
        "columnStart": 2,
        "columnEnd": 38
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 205,
        "lineEnd": 205,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 158,
        "lineEnd": 158,
        "columnStart": 4,
        "columnEnd": 98
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 170,
        "lineEnd": 170,
        "columnStart": 2,
        "columnEnd": 26
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 185,
        "lineEnd": 185,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 202,
        "lineEnd": 202,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 216,
        "lineEnd": 216,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 230,
        "lineEnd": 230,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 245,
        "lineEnd": 245,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 311,
        "lineEnd": 311,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 312,
        "lineEnd": 312,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 142,
        "lineEnd": 142,
        "columnStart": 18,
        "columnEnd": 47
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright (c) Bioinformatics Core Facility of the Max Planck Institute for Biology of Ageing.\n# Distributed under the terms of the Modified BSD License.\n\n# Debian buster-slim (10.1) image available on 20 Wednesday 2020.\nFROM debian@sha256:11253793361a12861562d1d7b15b8b7e25ac30dd631e3d206ed1ca969bf97b7d\n\nLABEL maintainer \"bioinformatics@age.mpg.de\"\n\nUSER root\n\nENV DEBIAN_FRONTEND noninteractive\n\nENV MODS /modules\nENV SOFT $MODS/software\nENV SOUR $MODS/sources/\nENV MODF $MODS/modulefiles\nENV LOGS $MODS/installation_logs\n\nRUN mkdir -p $SOFT $SOUR $MODF $LOGS $MODF/bioinformatics $MODF/general $MODF/libs\n\nRUN echo \"deb http://ftp.debian.org/debian buster main non-free contrib\" >> /etc/apt/sources.list && \\\necho \"deb-src http://ftp.debian.org/debian buster main non-free contrib\" >> /etc/apt/sources.list && \\\necho \"deb http://ftp.debian.org/debian buster-updates main contrib non-free\" >> /etc/apt/sources.list && \\\necho \"deb-src http://ftp.debian.org/debian buster-updates main contrib non-free\" >> /etc/apt/sources.list\n\nRUN REPO=http://cdn-fastly.deb.debian.org && \\\necho \"deb $REPO/debian buster main\\ndeb $REPO/debian-security buster/updates main\" > /etc/apt/sources.list && \\\napt-get update && apt-get -yq dist-upgrade && \\\napt-get install -yq --no-install-recommends locales && \\\napt-get clean && rm -rf /var/lib/apt/lists/* && \\\necho \"en_US.UTF-8 UTF-8\" > /etc/locale.gen && locale-gen\n\nRUN apt-get update && \\\napt-get install -yq --no-install-recommends \\ \n   libreadline-dev \\\n   xorg-dev \\\n   apt-utils \\\n   wget \\\n   bzip2 \\\n   ca-certificates \\\n   sudo \\\n   jed \\\n   emacs \\\n   build-essential \\\n   python-dev \\\n   unzip \\\n   libsm6 \\\n   pkg-config \\\n   pigz \\\n   zlib1g-dev \\\n   autoconf \\\n   automake \\\n   environment-modules \\\n   gcc && \\\n   apt-get clean && rm -rf /var/lib/apt/lists/*\n\nRUN apt-get update && \\\napt-get install -yq --no-install-recommends \\\n   f2c \\   \n   git \\\n   vim \\\n   texlive-latex-base \\\n   texlive-latex-extra \\\n   texlive-fonts-extra \\\n   texlive-fonts-recommended \\\n   pandoc \\\n   texlive-generic-recommended \\\n   libxrender1 \\\n   inkscape \\\n   libxml2-dev \\\n   libcurl4-gnutls-dev \\\n   libatlas3-base \\\n   libopenblas-base \\\n   libfreetype6-dev \\\n   libtool \\\n   libexpat1-dev \\\n   libxml2-dev \\\n   libxslt1-dev && \\\n   apt-get clean && rm -rf /var/lib/apt/lists/*\n\nRUN apt-get update && \\\napt-get install -yq --no-install-recommends \\ \n   ghostscript \\\n   gfortran \\\n   libpcre3 \\\n   libpcre3-dev \\\n   libssl-dev \\\n   libsqlite3-dev \\\n   libssl-dev \\\n   libfreetype6-dev \\\n   libpng-dev \\\n   liblmdb-dev \\\n   libmariadb-dev \\\n   libmariadb-client-lgpl-dev-compat \\\n   libtbb2 \\\n   libtbb-dev \\\n   curl \\\n   libcurl4 \\\n   libcurl4-openssl-dev \\\n   libncurses5-dev \\\n   libcairo2-dev \\\n   libtool-bin \\\n   libzmq3-dev \\\n   zip && \\\n   apt-get clean && rm -rf /var/lib/apt/lists/*\n\nRUN apt-get update && \\\napt-get install -yq --no-install-recommends \\ \n   tk \\\n   tcl \\\n   openssl \\\n   libssl-dev \\\n   libssh2-1-dev \\\n   libtool \\\n   libffi-dev \\\n   ruby \\\n   ruby-dev \\\n   make \\\n   libzmq3-dev \\\n   libczmq-dev \\\n   apt-transport-https \\\n   dirmngr \\\n   cmake \\\n   libpam0g-dev \\\n   lsb-release \\\n   libedit2 \\\n   libapparmor1 \\\n   gnupg \\\n   liblzma-dev \\\n   psmisc \\\n   less \\\n   libclang-dev && \\\n   apt-get clean && rm -rf /var/lib/apt/lists/*\n\nRUN cd ${SOUR} && \\\n    wget https://ftp.de.debian.org/debian/pool/main/o/openssl/libssl1.1_1.1.1d-0+deb10u2_amd64.deb && \\\n    dpkg -i libssl1.1_1.1.1d-0+deb10u2_amd64.deb && \\\n    rm -rf ${SOUR}/*\n\n\nRUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF && \\\n    echo \"deb https://download.mono-project.com/repo/debian stable-buster main\" | sudo tee /etc/apt/sources.list.d/mono-official-stable.list && \\\n    apt update && apt-get -y --no-install-recommends install mono-devel && apt-get clean && rm -rf /var/lib/apt/lists/*\n\nENV SHELL /bin/bash\nENV NB_USER mpiage\nENV NB_UID 1000\nENV LC_ALL en_US.UTF-8\nENV LANG en_US.UTF-8\nENV LANGUAGE en_US.UTF-8\n\nRUN useradd -m -s /bin/bash -N -u $NB_UID $NB_USER ; \\\necho \"root:bioinf\" | chpasswd ; \\\necho \"mpiage:bioinf\" | chpasswd ; \\\nadduser mpiage sudo\n\n# Install Tini\nRUN wget --quiet https://github.com/krallin/tini/releases/download/v0.10.0/tini && \\\n    echo \"1361527f39190a7338a0b434bd8c88ff7233ce7b9a4876f3315c22fce7eca1b0  *tini\" | sha256sum -c - && \\\n    mv tini /usr/local/bin/tini && \\\n    chmod +x /usr/local/bin/tini\n\nRUN wget https://raw.githubusercontent.com/mpg-age-bioinformatics/draco_pipelines/master/software/newmod.sh \\\n&& sed -i 's/u\\/jboucas\\/modules/modules/g' newmod.sh && chmod 777 newmod.sh && mv newmod.sh /usr/bin\n\nENV MODULEPATH $MODF/bioinformatics:$MODF/general:$MODF/libs\n\n# gsl\nRUN cd $SOUR && wget ftp://ftp.gnu.org/gnu/gsl//gsl-2.6.tar.gz && \\\n  mkdir -p $SOFT/gsl/2.6.0 && \\\n  tar -zxvf gsl-2.6.tar.gz && \\\n  cd gsl-2.6 && \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=$SOFT/gsl/2.6.0 && \\\n  make && \\\n  make install && \\\n  newmod.sh \\\n  -s gsl \\\n  -p $MODF/libs/ \\\n  -v 2.6.0 \\\n  -d 2.6.0 && \\\n  echo \"prepend-path LIBRARY_PATH /modules/software/gsl/2.6.0/lib\" >> $MODF/libs/gsl/2.6.0 && \\\n  rm -rf $SOUR/* && rm gsl-2.6.tar.gz\n\n# bzip2\nRUN cd $SOUR && wget https://sourceware.org/pub/bzip2/bzip2-1.0.8.tar.gz && \\\n    tar -xzf bzip2-1.0.8.tar.gz && \\\n    cd bzip2-1.0.8 && \\\n    mkdir -p $SOFT/bzip2/1.0.8 && \\\n    sed -i \"18s/.*/CC\\=gcc -fPIC/\" Makefile && \\\n    make -f Makefile-libbz2_so COMPILE_FLAGS+=-fPIC && make clean && make COMPILE_FLAGS+=-fPIC && \\\n    make -n install PREFIX=$SOFT/bzip2/1.0.8 COMPILE_FLAGS+=-fPIC && make install PREFIX=$SOFT/bzip2/1.0.8 COMPILE_FLAGS+=-fPIC && \\\n    cp -v bzip2-shared $SOFT/bzip2/1.0.8/bin/bzip2 && \\\n    cp -av libbz2.so* $SOFT/bzip2/1.0.8/lib && \\\n    newmod.sh \\\n    -s bzip2 \\\n    -p $MODF/libs/ \\\n    -v 1.0.8 \\\n    -d 1.0.8 && \\\n    rm -rf $SOUR/* && rm bzip2-1.0.8.tar.gz\n\n# xz\nRUN cd $SOUR && wget https://tukaani.org/xz/xz-5.2.4.tar.gz && \\\n    tar -xzf xz-5.2.4.tar.gz && \\\n    cd xz-5.2.4 && \\\n    mkdir -p $SOFT/xz/5.2.4 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=$SOFT/xz/5.2.4 && make && make install && \\\n    newmod.sh \\\n    -s xz \\\n    -p $MODF/libs/ \\\n    -v 5.2.4 \\\n    -d 5.2.4 && \\\n    rm -rf $SOUR/* && rm xz-5.2.4.tar.gz\n\n# openblas\nRUN cd $SOUR && wget https://github.com/xianyi/OpenBLAS/archive/v0.3.7.tar.gz && \\\n    mv v0.3.7.tar.gz openblas-0.3.7.tar.gz && \\\n    tar -xzf openblas-0.3.7.tar.gz && \\\n    cd OpenBLAS-0.3.7 && \\\n    mkdir -p $SOFT/openblas/0.3.7 && \\\n    make PREFIX=$SOFT/openblas/0.3.7 && \\\n    make install PREFIX=$SOFT/openblas/0.3.7 && \\\n    newmod.sh \\\n    -s openblas \\\n    -p $MODF/libs/ \\\n    -v 0.3.7 \\\n    -d 0.3.7 && \\\n    rm -rf $SOUR/* && rm openblas-0.3.7.tar.gz\n\n# jre\nRUN cd $SOUR && wget -O jre-8.0.231-linux-x64.tar.gz https://javadl.oracle.com/webapps/download/AutoDL?BundleId=240718_5b13a193868b4bf28bcb45c792fce896 && \\\n    tar -zxvf jre-8.0.231-linux-x64.tar.gz && \\\n    cd jre1.8.0_231 && \\\n    mkdir -p $SOFT/jre/8.0.231&& \\\n    cp -r * $SOFT/jre/8.0.231/ && \\\n    newmod.sh \\\n    -s jre \\\n    -p $MODF/general/ \\\n    -v 8.0.231 \\\n    -d 8.0.231 && \\\n    echo \"setenv JAVA_HOME $SOFT/jre/8.0.231\" >> $MODF/general/jre/8.0.231 && \\\n    rm -rf $SOUR/* && rm jre-8.0.231-linux-x64.tar.gz\n\n# jdk\nRUN cd $SOUR && \\\n    wget --no-check-certificate -c --header \"Cookie: oraclelicense=accept-securebackup-cookie\" https://download.oracle.com/otn-pub/java/jdk/13.0.1+9/cec27d702aa74d5a8630c65ae61e4305/jdk-13.0.1_linux-x64_bin.tar.gz && \\\n    tar -xvzf jdk-13.0.1_linux-x64_bin.tar.gz && \\\n    mkdir -p $SOFT/jdk/13.0.1/bin && \\\n    cd jdk-13.0.1 && \\\n    cp -r * $SOFT/jdk/13.0.1/ && \\\n    newmod.sh \\\n    -s jdk \\\n    -p $MODF/general/ \\\n    -v 13.0.1 \\\n    -d 13.0.1 && \\\n    echo \"setenv JAVA_HOME $SOFT/jdk/13.0.1\" >> $MODF/general/jdk/13.0.1 && \\\n    rm -rf $SOUR/* && rm jdk-13.0.1_linux-x64_bin.tar.gz\n\n# perl/cpanm\nRUN mkdir -p $SOFT/perl/5.28.1/bin && \\\n    cd $SOFT/perl/5.28.1/bin && \\\n    curl -f -L https://cpanmin.us/ -o cpanm && \\\n    chmod +x cpanm && \\\n    newmod.sh -s perl -p $MODF/general -v 5.28.1 -d 5.28.1 && \\\n    echo 'set home $::env(HOME)' >> $MODF/general/perl/5.28.1 && \\\n    echo 'set perluser $home/.software_container/.perl/5.28.1' >> $MODF/general/perl/5.28.1 && \\\n    echo 'exec /bin/mkdir -p $perluser' >> $MODF/general/perl/5.28.1 && \\\n    echo 'prepend-path PERL5LIB $perluser/lib/perl5' >> $MODF/general/perl/5.28.1 && \\\n    echo 'setenv PERLUSER $perluser' >> $MODF/general/perl/5.28.1\n\n# Install R-3.6.1\nRUN /bin/bash -c 'source /etc/profile.d/modules.sh && \\\n    module load bzip2/1.0.8 && \\\n    module load xz/5.2.4 && \\\n    module load jdk/13.0.1 && \\\n    cd $SOUR && wget http://ftp5.gwdg.de/pub/misc/cran/src/base/R-3/R-3.6.1.tar.gz && \\\n    tar -xzf R-3.6.1.tar.gz && \\\n    cd R-3.6.1 && \\\n    mkdir -p $SOFT/rlang/3.6.1/bin && \\\n    ./configure --prefix=$SOFT/rlang/3.6.1 \\\n    CFLAGS=\"-I$SOFT/bzip2/1.0.8/include \\\n    -I$SOFT/xz/5.2.4/include \\\n    -I$SOFT/jdk/13.0.1/include\" \\\n    LDFLAGS=\"-L$SOFT/bzip2/1.0.8/lib \\\n    -L$SOFT/xz/5.2.4/lib \\\n    -L$SOFT/jdk/13.0.1/lib\" \\\n    --with-cairo=yes --with-libpng=yes \\\n    --with-readline --with-tcltk --enable-R-profiling \\\n    --enable-R-shlib=yes --enable-memory-profiling --with-blas --with-lapack && \\\n    make && make install && \\\n    newmod.sh \\\n    -s rlang \\\n    -p $MODF/general/ \\\n    -v 3.6.1 \\\n    -d 3.6.1 && \\\n    echo \"set home $::env(HOME)\" >> $MODF/general/rlang/3.6.1 && \\\n    echo \"exec /bin/mkdir -p \\$home/.software_container/.R/3.6.1/R_LIBS_USER/\" >> $MODF/general/rlang/3.6.1 && \\\n    echo \"setenv R_LIBS_USER \\$home/.software_container/.R/3.6.1/R_LIBS_USER\" >> $MODF/general/rlang/3.6.1 && \\\n    echo \"prepend-path LD_LIBRARY_PATH $SOFT/rlang/3.6.1/lib/R/lib\" >> $MODF/general/rlang/3.6.1 && \\\n    echo \"prepend-path CPATH $SOFT/rlang/3.6.1/lib/R/include\" >> $MODF/general/rlang/3.6.1 && \\\n    echo \"prepend-path C_INCLUDE_PATH $SOFT/rlang/3.6.1/lib/R/include\" >> $MODF/general/rlang/3.6.1 && \\\n    echo \"prepend-path CPLUS_INCLUDE_PATH $SOFT/rlang/3.6.1/lib/R/include\" >> $MODF/general/rlang/3.6.1 && \\\n    echo \"prepend-path OBJC_INCLUDE_PATH $SOFT/rlang/3.6.1/lib/R/include\" >> $MODF/general/rlang/3.6.1 && \\\n    echo \"module load jdk/13.0.1\" >> $MODF/general/rlang/3.6.1 && \\\n    echo \"setenv CFLAGS \\\"-I$SOFT/jdk/13.0.1/include -I$SOFT/bzip2/1.0.8/include -I$SOFT/xz/5.2.4/include\\\"\" >> $MODF/general/rlang/3.6.1 && \\\n    echo \"setenv LDFLAGS \\\"-L$SOFT/jdk/13.0.1/lib -L$SOFT/bzip2/1.0.8/lib -L$SOFT/xz/5.2.4/lib\\\"\" >> $MODF/general/rlang/3.6.1' && \\\n    rm -rf ${SOUR}/*\n\n# jupyterhub v2.0.0\nRUN cd $SOUR && \\\n    wget https://www.python.org/ftp/python/3.8.0/Python-3.8.0.tgz && \\\n    wget https://www.python.org/ftp/python/2.7.16/Python-2.7.16.tgz && \\\n    tar xzf Python-3.8.0.tgz && \\\n    tar xzf Python-2.7.16.tgz && \\\n    /bin/bash -c 'source /etc/profile.d/modules.sh && \\\n    module load openblas/0.3.7 && \\\n    cd $SOUR/Python-2.7.16 && \\\n    mkdir -p $SOFT/jupyterhub/1.0.0/bin && \\\n    ./configure --prefix=$SOFT/jupyterhub/1.0.0 --enable-loadable-sqlite-extensions --enable-shared --with-ensurepip=yes \\\n      CLFAGS=\"-I$SOFT/openblas/0.3.7/include\" \\\n      LDFLAGS=\"-L$SOFT/openblas/0.3.7/lib\" && \\\n    make && make install && \\\n    cd $SOUR/Python-3.8.0 && \\\n    ./configure --prefix=$SOFT/jupyterhub/1.0.0 --enable-loadable-sqlite-extensions --enable-shared -with-ensurepip=yes \\\n    CLFAGS=\"-I$SOFT/openblas/0.3.7/include\" \\\n    LDFLAGS=\"-L$SOFT/openblas/0.3.7/lib\" && \\\n    make && make install && \\\n    newmod.sh \\\n    -s jupyterhub \\\n    -p $MODF/general/ \\\n    -v 1.0.0 \\\n    -d 1.0.0 && \\\n    echo \"set home $::env(HOME)\" >> $MODF/general/jupyterhub/1.0.0 && \\\n    echo \"set pythonuser \\$home/.software_container/.jupyterhub/1.0.0/bin\" >> $MODF/general/jupyterhub/1.0.0 && \\\n    echo \"exec /bin/mkdir -p \\$pythonuser\" >> $MODF/general/jupyterhub/1.0.0 && \\\n    echo \"prepend-path PATH \\$home/.software_container/.jupyterhub/1.0.0/bin\" >> $MODF/general/jupyterhub/1.0.0 && \\\n    echo \"set jupyter_runtime_dir \\$home/.software_container/.jupyterhub/1.0.0/jupyter/run\" >> $MODF/general/jupyterhub/1.0.0 && \\\n    echo \"exec /bin/mkdir -p \\$jupyter_runtime_dir\" >> $MODF/general/jupyterhub/1.0.0 && \\\n    echo \"setenv JUPYTER_RUNTIME_DIR \\$home/.software_container/.jupyterhub/1.0.0/jupyter/run\" >> $MODF/general/jupyterhub/1.0.0 && \\\n    echo \"set jupyter_data_dir \\$home/.software_container/.jupyterhub/1.0.0/jupyter/data\" >> $MODF/general/jupyterhub/1.0.0 && \\\n    echo \"exec /bin/mkdir -p \\$jupyter_data_dir\" >> $MODF/general/jupyterhub/1.0.0 && \\\n    echo \"setenv JUPYTER_DATA_DIR \\$home/.software_container/.jupyterhub/1.0.0/jupyter/data\" >> $MODF/general/jupyterhub/1.0.0 && \\\n    echo \"setenv PYTHONHOME $SOFT/jupyterhub/1.0.0/\" >> $MODF/general/jupyterhub/1.0.0 && \\\n    echo \"setenv PYTHONUSERBASE \\$home/.software_container/.jupyterhub/1.0.0/\" >> $MODF/general/jupyterhub/1.0.0 && \\\n    echo \"exec /bin/mkdir -p \\$home/.software_container/.jupyterhub/1.0.0/pythonpath/site-packages\" >> $MODF/general/jupyterhub/1.0.0 && \\\n    echo \"module load openblas/0.3.7 rlang/3.6.1\" >> $MODF/general/jupyterhub/1.0.0 && \\\n    module load jupyterhub/1.0.0 && \\\n    pip3 install jupyter && \\\n    python2 -m pip install ipykernel && \\\n    python2 -m ipykernel install' && \\\n    rm -rf ${SOUR}/* && rm Python-3.8.0.tgz\n\n## Libraries required for jupyter R kernel\nRUN echo \"install.packages('askpass', repos='http://cran.us.r-project.org')\" > $SOUR/askpass.install.R && \\\n    echo \"install.packages(c('repr', 'IRdisplay', 'evaluate', 'crayon', 'pbdZMQ', 'devtools', 'uuid', 'digest'), lib=c('$SOFT/rlang/3.6.1/lib/R/library')  ,repos=c('http://ftp5.gwdg.de/pub/misc/cran/'), dependencies=TRUE )\" > $SOUR/jupyter.install.R && \\\n    echo \"devtools::install_github('IRkernel/IRkernel',lib=c('$SOFT/rlang/3.6.1/lib/R/library')) \" >> $SOUR/_jupyter.install.R && \\\n    echo \"IRkernel::installspec(name = 'ir361', displayname = 'R 3.6.1')\" > $SOUR/.install.jupyter.R.kernel.3.6.1\n\nRUN /bin/bash -c 'source /etc/profile.d/modules.sh && \\\n    module load jupyterhub && \\\n    module load rlang && \\\n    cd $SOUR && \\\n    $SOFT/rlang/3.6.1/bin/Rscript $SOUR/askpass.install.R && \\\n    wget -O openssl_1.3.0.tar.gz https://github.com/jeroenooms/openssl/archive/v1.3.0.tar.gz && \\\n    $SOFT/rlang/3.6.1/bin/R CMD INSTALL -l $SOFT/rlang/3.6.1/lib/R/library openssl_1.3.0.tar.gz && \\\n    git clone https://github.com/ropensci/git2r.git && \\\n    $SOFT/rlang/3.6.1/bin/R CMD INSTALL -l $SOFT/rlang/3.6.1/lib/R/library git2r && \\\n    $SOFT/rlang/3.6.1/bin/Rscript $SOUR/jupyter.install.R && \\\n    $SOFT/rlang/3.6.1/bin/Rscript $SOUR/_jupyter.install.R && \\\n    Rscript $SOUR/.install.jupyter.R.kernel.3.6.1 && rm $SOUR/jupyter.install.R $SOUR/_jupyter.install.R $SOUR/.install.jupyter.R.kernel.3.6.1' && \\\n    rm -rf ${SOUR}/*\n## Finished installation of jupyter R kernel\n\n## Install rstudio server ##\nRUN /bin/bash -c 'source /etc/profile.d/modules.sh && \\\n    module load jupyterhub && \\\n    module load rlang && \\\n    cd ${SOUR} && \\\n    wget https://download2.rstudio.org/server/bionic/amd64/rstudio-server-1.2.5019-amd64.deb && \\\n    dpkg -i rstudio-server-1.2.5019-amd64.deb && \\\n    echo \"rsession-which-r=$(which R)\" >> /etc/rstudio/rserver.conf' && \\  \n    rm -rf ${SOUR}/*\n\nRUN /bin/bash -c 'source /etc/profile.d/modules.sh && \\\n  module load jre && \\\n  mkdir -p $SOFT/cytoscape/3.7.2 && \\\n  cd $SOFT/cytoscape/3.7.2 && wget  https://github.com/cytoscape/cytoscape/releases/download/3.7.2/Cytoscape_3_7_2_unix.sh && \\\n  bash Cytoscape_3_7_2_unix.sh -q && \\\n  newmod.sh \\\n  -s cytoscape \\\n  -p $MODF/bioinformatics/ \\\n  -v 3.7.2 \\\n  -d 3.7.2 && \\\n  echo \"module load jre\" >> $MODF/bioinformatics/cytoscape/3.7.2  && \\\n  echo \"prepend-path PATH /usr/local/Cytoscape_v3.7.2\" >> $MODF/bioinformatics/cytoscape/3.7.2' && \\\n  rm -rf ${SOUR}/*\n\nUSER $NB_USER\n\nRUN mkdir /home/$NB_USER/py2cytoscape\n\n# COPY * /home/$NB_USER/py2cytoscape\n\n# RUN /bin/bash -c 'source /etc/profile.d/modules.sh && \\\n#     module load jupyterhub && \\\n#     cd py2cytoscape && \\\n#     python3 setup.py develop --user'\n\n##########################\n#### this part to end ####\n##########################\n\n# Jupyter port\nEXPOSE 8888\n# rstudio server port\nEXPOSE 8787\n\nCOPY .bashrc /home/$NB_USER/.bashrc\n\nRUN echo \"options(bitmapType='cairo')\" > /home/$NB_USER/.Rprofile\nRUN mkdir -p /home/$NB_USER/.software_container/.jupyter\nCOPY jupyter_notebook_config.py /home/$NB_USER/.software_container/.jupyter/\nUSER root\n\n# Folders in home folder that should be kept\nENV HOFOL \".bashrc .bash_logout .Rprofile .software_container\"\n\nRUN for i in $(ls /home/mpiage/) ; do echo ${i}; done\n\nRUN mkdir -p /home/_mpiage \\\n&& for f in $HOFOL ; do \\\n  if [ ! -e /home/mpiage/${f} ] ;\\\n    then echo 'no ${f}..' ;\\\n  else cp -rv /home/mpiage/${f} /home/_mpiage/; \\\n  fi \\ \ndone\n\nENTRYPOINT /bin/bash -c '\\\nfor f in $HOFOL ; do \\\n  if [[ ! -e /home/mpiage/${f} ]] ; \\\n    then cp -vr /home/_mpiage/${f} /home/mpiage/${f}; \\\n  fi \\\ndone \\\n&& source /home/mpiage/.bashrc \\\n&& /bin/bash'\nWORKDIR /home/mpiage\nRUN chown -R mpiage: /home/mpiage\n\nRUN mkdir -p /Dockerfiles/v3.0.0s\nCOPY Dockerfile /Dockerfiles/v3.0.0s/\n\nUSER $NB_USER\n\n"
}