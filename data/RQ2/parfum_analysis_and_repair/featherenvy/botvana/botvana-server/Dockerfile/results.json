{
  "startTime": 1674254782563,
  "endTime": 1674254786433,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 22,
        "columnEnd": 46
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 22,
        "columnEnd": 46
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Leveraging the pre-built Docker images with\n# cargo-chef and the Rust toolchain\nFROM lukemathwalker/cargo-chef:latest-rust-1.58.0 AS chef\nWORKDIR app\nRUN apt-get update && apt-get -y --no-install-recommends install cmake && rm -rf /var/lib/apt/lists/*;\n\nFROM chef AS planner\nCOPY . .\nRUN cargo chef prepare --recipe-path recipe.json\n\nFROM chef AS builder\nCOPY --from=planner /app/recipe.json recipe.json\nCOPY --from=planner /app/.cargo .cargo\n# Build dependencies - this is the caching Docker layer!\nRUN cargo chef cook --release --recipe-path recipe.json\n# Build application\nCOPY . .\nRUN cargo build --release --bin botvana-server\n\n# We do not need the Rust toolchain to run the binary!\nFROM debian:bullseye-slim AS runtime\nWORKDIR app\nCOPY --from=builder /app/target/release/botvana-server /usr/local/bin\nCOPY --from=builder /app/cfg /app/cfg\nENTRYPOINT [\"/usr/local/bin/botvana-server\"]\n"
}