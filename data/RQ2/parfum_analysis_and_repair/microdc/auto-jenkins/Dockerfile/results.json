{
  "startTime": 1674219662108,
  "endTime": 1674219662884,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 121
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 60
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# lint the yaml files and check the shell scripts\nFROM microdc/ubuntu-testing-container:v0.0.1\nRUN mkdir /app\nWORKDIR /app\nCOPY ./ /app/\nRUN ./test.sh\n\n# Skip initial setup\nENV JAVA_OPTS -Djenkins.install.runSetupWizard=false\n\nFROM jenkins/jenkins:2.189-alpine\n\nUSER jenkins\n\n# Set the default admin user and password\nENV JENKINS_USER admin\nENV JENKINS_PASS admin\nENV PIP_VERSION=18.0\nENV AZURE_CLI_VERSION=2.0.47\n\n# Set log level\nCOPY log.properties /var/jenkins_home/log.properties\n\n# Install plugins\nCOPY plugins.txt /usr/share/jenkins/ref/plugins.txt\nRUN /usr/local/bin/install-plugins.sh < /usr/share/jenkins/ref/plugins.txt\n\nRUN echo 2 > /usr/share/jenkins/ref/jenkins.install.UpgradeWizard.state && \\\n    echo 2 > /usr/share/jenkins/ref/jenkins.install.InstallUtil.lastExecVersion\n\n# Copy Jenkins groovy configuration scripts\nCOPY groovy /usr/share/jenkins/ref/init.groovy.d/\n\n# Copy seed job to bootstrap all jobdsl jobs\nCOPY seed.jobdsl /usr/share/jenkins/ref/jobdsl/seed.jobdsl\n\nUSER root\nRUN apk --no-cache add su-exec docker groff python py-pip gettext procps jq && \\\n    apk --no-cache add --virtual=build gcc libffi-dev musl-dev openssl-dev python-dev python3-dev make && \\\n    pip install --no-cache-dir pip==${PIP_VERSION} && \\\n    pip install --no-cache-dir awscli s3cmd azure-cli==${AZURE_CLI_VERSION} && \\\n    apk del --purge build\nRUN [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf\n\nCOPY modprobe.sh /usr/local/bin/modprobe\n\n#Install kubectl\nRUN curl -f -L -o /usr/bin/kubectl https://storage.googleapis.com/kubernetes-release/release/v1.11.0/bin/linux/amd64/kubectl && chmod +x /usr/bin/kubectl\n\n# Custom entry point to allow for download of jobdsl files from repos\nCOPY entrypoint.sh /usr/local/bin/entrypoint.sh\nCOPY download-jobdsl.sh /usr/local/bin/download-jobdsl.sh\n\nENTRYPOINT [\"/sbin/tini\", \"--\", \"/usr/local/bin/entrypoint.sh\"]\n"
}