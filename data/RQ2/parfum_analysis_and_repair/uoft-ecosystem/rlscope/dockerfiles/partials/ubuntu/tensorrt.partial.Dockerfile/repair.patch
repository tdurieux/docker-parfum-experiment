diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/uoft-ecosystem/rlscope/dockerfiles/partials/ubuntu/tensorrt.partial.Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/uoft-ecosystem/rlscope/dockerfiles/partials/ubuntu/tensorrt.partial.Dockerfile/repaired.Dockerfile
index f572a4d..80e003b 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/uoft-ecosystem/rlscope/dockerfiles/partials/ubuntu/tensorrt.partial.Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/uoft-ecosystem/rlscope/dockerfiles/partials/ubuntu/tensorrt.partial.Dockerfile/repaired.Dockerfile
@@ -35,7 +35,7 @@ ARG TENSOR_RT_TF_VERSION=1.15.2
 ARG CUDNN8_VERSION=8.0.0.180-1+cuda${TENSOR_RT_CUDA_VERSION}
 RUN apt-get update && apt-get install -y --no-install-recommends \
     libcudnn8=${CUDNN8_VERSION} \
-    libcudnn8-dev=${CUDNN8_VERSION}
+    libcudnn8-dev=${CUDNN8_VERSION} && rm -rf /var/lib/apt/lists/*;
 
 
 # NOTE: For some reason I had cuDNN installed for CUDA 10.2â€¦why?
@@ -43,13 +43,13 @@ ARG CUDNN_VERSION=7.6.5.32-1+cuda${CUDA}
 #ARG CUDNN_VERSION=7.6.5.32-1+cuda${TENSOR_RT_CUDA_VERSION}
 RUN apt-get update && apt-get install -y --no-install-recommends \
     libcudnn7=${CUDNN_VERSION} \
-    libcudnn7-dev=${CUDNN_VERSION}
+    libcudnn7-dev=${CUDNN_VERSION} && rm -rf /var/lib/apt/lists/*;
 
 RUN apt list --installed | grep 'cuda11\.0'
 #RUN exit 1
 
 RUN apt-get update && apt-get install -y --no-install-recommends \
-    libnvinfer${TENSOR_RT_VERSION_MAJOR}=${TENSOR_RT_VERSION}
+    libnvinfer${TENSOR_RT_VERSION_MAJOR}=${TENSOR_RT_VERSION} && rm -rf /var/lib/apt/lists/*;
 
 RUN apt list --installed | grep 'cuda11\.0'
 #RUN exit 1
@@ -58,7 +58,7 @@ RUN apt list --installed | grep 'cuda11\.0'
 RUN apt-get update && apt-get install -y --no-install-recommends \
     libnvonnxparsers${TENSOR_RT_VERSION_MAJOR}=${TENSOR_RT_VERSION} \
     libnvparsers${TENSOR_RT_VERSION_MAJOR}=${TENSOR_RT_VERSION} \
-    libnvinfer-plugin${TENSOR_RT_VERSION_MAJOR}=${TENSOR_RT_VERSION}
+    libnvinfer-plugin${TENSOR_RT_VERSION_MAJOR}=${TENSOR_RT_VERSION} && rm -rf /var/lib/apt/lists/*;
 
 RUN apt-get update && apt-get install -y --no-install-recommends \
     libnvinfer-dev=${TENSOR_RT_VERSION} \
@@ -66,17 +66,17 @@ RUN apt-get update && apt-get install -y --no-install-recommends \
     libnvparsers-dev=${TENSOR_RT_VERSION} \
     libnvinfer-plugin-dev=${TENSOR_RT_VERSION} \
     python-libnvinfer=${TENSOR_RT_VERSION} \
-    python3-libnvinfer=${TENSOR_RT_VERSION}
-RUN sudo apt install cuda-nvrtc-${TENSOR_RT_CUDA_VERSION/./-}
+    python3-libnvinfer=${TENSOR_RT_VERSION} && rm -rf /var/lib/apt/lists/*;
+RUN sudo apt install -y --no-install-recommends cuda-nvrtc-${TENSOR_RT_CUDA_VERSION/./-} && rm -rf /var/lib/apt/lists/*;
 
 # NOTE: ideally, happens after pip setup.... could just install globally though.
 
 # Very Ubuntu version specific...oh well.
 ARG CP_PYTHON_VERSION=cp36
 ADD third_party/TensorRT-${TENSOR_RT_VERSION_THIRD_PARTY} /root/third_party/TensorRT-${TENSOR_RT_VERSION_THIRD_PARTY}
-RUN pip install /root/third_party/TensorRT-${TENSOR_RT_VERSION_THIRD_PARTY}/graphsurgeon/*.whl
-RUN pip install /root/third_party/TensorRT-${TENSOR_RT_VERSION_THIRD_PARTY}/python/tensorrt*-${CP_PYTHON_VERSION}-*.whl
-RUN pip install /root/third_party/TensorRT-${TENSOR_RT_VERSION_THIRD_PARTY}/uff/*.whl
+RUN pip install --no-cache-dir /root/third_party/TensorRT-${TENSOR_RT_VERSION_THIRD_PARTY}/graphsurgeon/*.whl
+RUN pip install --no-cache-dir /root/third_party/TensorRT-${TENSOR_RT_VERSION_THIRD_PARTY}/python/tensorrt*-${CP_PYTHON_VERSION}-*.whl
+RUN pip install --no-cache-dir /root/third_party/TensorRT-${TENSOR_RT_VERSION_THIRD_PARTY}/uff/*.whl
 #RUN python3 -c 'import sys; print("cp{major}{minor}".format(major=sys.version_info[0], minor=sys.version_info[1]))'
 
 # The "convert-to-uff" doesn't work with tensorflow v2.
@@ -97,10 +97,10 @@ RUN python3 -m virtualenv -p /usr/bin/python3 $TF_V1_VIRTUALENV --system-site-pa
 #RUN $TF_V1_VIRTUALENV/bin/pip install 'tensorflow-gpu==1.14.0'
 
 # TensorRT 7.1.3
-RUN $TF_V1_VIRTUALENV/bin/pip install "tensorflow-gpu==${TENSOR_RT_TF_VERSION}"
-RUN $TF_V1_VIRTUALENV/bin/pip install /root/third_party/TensorRT-${TENSOR_RT_VERSION_THIRD_PARTY}/graphsurgeon/*.whl
-RUN $TF_V1_VIRTUALENV/bin/pip install /root/third_party/TensorRT-${TENSOR_RT_VERSION_THIRD_PARTY}/python/tensorrt*-${CP_PYTHON_VERSION}-*.whl
-RUN $TF_V1_VIRTUALENV/bin/pip install /root/third_party/TensorRT-${TENSOR_RT_VERSION_THIRD_PARTY}/uff/*.whl
+RUN $TF_V1_VIRTUALENV/bin/pip install --no-cache-dir "tensorflow-gpu==${TENSOR_RT_TF_VERSION}"
+RUN $TF_V1_VIRTUALENV/bin/pip install --no-cache-dir /root/third_party/TensorRT-${TENSOR_RT_VERSION_THIRD_PARTY}/graphsurgeon/*.whl
+RUN $TF_V1_VIRTUALENV/bin/pip install --no-cache-dir /root/third_party/TensorRT-${TENSOR_RT_VERSION_THIRD_PARTY}/python/tensorrt*-${CP_PYTHON_VERSION}-*.whl
+RUN $TF_V1_VIRTUALENV/bin/pip install --no-cache-dir /root/third_party/TensorRT-${TENSOR_RT_VERSION_THIRD_PARTY}/uff/*.whl
 
 RUN rm -rf /root/third_party/TensorRT-${TENSOR_RT_VERSION_THIRD_PARTY}
 
@@ -108,4 +108,4 @@ ARG NCCL_VERSION=2.7.5-1+cuda10.1
 # Install nccl (belongs in nvidia_nccl.partial.Dockerfile)
 RUN apt-get update && apt-get install -y --no-install-recommends \
     libnccl-dev=${NCCL_VERSION} \
-    libnccl2=${NCCL_VERSION}
+    libnccl2=${NCCL_VERSION} && rm -rf /var/lib/apt/lists/*;