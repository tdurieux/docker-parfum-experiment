{
  "startTime": 1674250359650,
  "endTime": 1674250360292,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 31,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 28,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 28,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 28,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 39
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# TensorFlow wheel file is python-version dependent.\n# We need to create separate pip-packages for python3.6 and python3.5.\n#\nARG PYTHON_VERSION=3.6.8\n\nUSER root\nWORKDIR /root/tar_files\nRUN wget --quiet https://www.python.org/ftp/python/${PYTHON_VERSION}/Python-${PYTHON_VERSION}.tar.xz\nWORKDIR /root/python3.6\nRUN tar -xf /root/tar_files/Python-${PYTHON_VERSION}.tar.xz && rm /root/tar_files/Python-${PYTHON_VERSION}.tar.xz\nWORKDIR /root/python3.6/Python-${PYTHON_VERSION}\n# Enable profile-guided optimizations.\n# This takes a long time to build...is it worth it?\n#RUN ./configure --enable-optimizations\n#\t\t--prefix=/usr \\\n\n# Enable sources; needed for \"apt-get build-dep\"\nRUN sed -Ei 's/^# deb-src /deb-src /' /etc/apt/sources.list\nRUN apt-get update && apt-get install --no-install-recommends -y build-essential zlib1g-dev libbz2-dev liblzma-dev libncurses5-dev \\\n    libreadline6-dev libsqlite3-dev libssl-dev \\\n    tk8.5-dev lzma lzma-dev libgdbm-dev && rm -rf /var/lib/apt/lists/*; ENV DEBIAN_FRONTEND=noninteractive\n\n# Install build dependencies needed to build all the various python modules:\n# _bz2                  _curses               _curses_panel\n# _dbm                  _gdbm                 _lzma\n# _sqlite3              _ssl                  _tkinter\n# readline\n\n\n\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n    --enable-ipv6 \\\n    --enable-loadable-sqlite-extensions \\\n    --with-dbmliborder=bdb:gdbm \\\n    --with-computed-gotos \\\n    --without-ensurepip \\\n    --with-system-expat \\\n    --with-system-libmpdec \\\n    --with-system-ffi\n\nRUN make -j$(nproc)\n# Using altinstall will ensure that you donâ€™t mess with the default system Python.\nRUN make altinstall\nRUN python3.6 --version\nWORKDIR ${HOME}\nUSER ${RLSCOPE_USER}\n"
}