{
  "startTime": 1674248739676,
  "endTime": 1674248740430,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 61,
        "lineEnd": 63,
        "columnStart": 4,
        "columnEnd": 71
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 61,
        "lineEnd": 63,
        "columnStart": 4,
        "columnEnd": 71
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 61,
        "lineEnd": 63,
        "columnStart": 4,
        "columnEnd": 71
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 26
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 60,
        "lineEnd": 62,
        "columnStart": 4,
        "columnEnd": 71
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 4,
        "columnEnd": 50
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:16.04\n\n#MAINTAINER Gary Bradski\n\n########################################################################\n# Running this docker to set up a shared directory and display with the host:\n#\n# To newly create and build this docker image:\n# ============================================\n#\n# Create a directory <container_name>:\n#    $ mkdir <container_name>\n# Copy this Dockerfile into that directory:\n#    cp Dockerfile <container_name>/.\n# Move to that directory:\n#    $ cd <container_name>\n# To build the docker file (might have to run with sudo\n#    $ sudo docker build -t <container_name> .\n#\n# To run the image, or run it again retaining its state\n# =====================================================\n#    but also exporting display from the container and\n#    sharing a directory between host and container:\n#\n# Allow other processes to share the display:\n#    $ xhost +    #Allows or other processes to capture (show) the display\n# Now run the docker (Usually $DISPLAY is :0) and allow use of the camera -- you may need sudo privalage\n#    $ sudo docker run  -it  -e DISPLAY=$DISPLAY  -v /tmp/.X11-unix:/tmp/.X11-unix \\\n#                       --device /dev/video0 \\\n#                       -v /<path_to_a host_directory>/<directory_on_host>/:/<directory_path/name>/  <container_name>\n#\n# =======================================================\n# Handy docker commands:\n# List all the docker images\n#    $ sudo docker ps -a \n# If the docker image is stopped (otherwise can skip the first command below if not stopped)\n#    $ sudo docker start <container ID from ps -a above>\n#    $ sudo docker attach <container ID from ps -a above>\n########################################################################\n# This is a docker file which will, from scratch:\n#\n#   * pull in all the dependencies needed for OpenCV 3.2 including python 2 dependencies\n#   * pull in OpenCV 3.2 and opencv_contrib and build them\n#       + executable files end up in opencv-3.2.0/build/bin\n#   * pull in the Learning OpenCV 3 example code and build it\n#       + executable files end up in Learning_OpenCV-3_examples/build\n#   * To get to the top level directory, just type: cd\n#\n# If you just want to do this \"by hand\" in your home, replace the \"RUN\"s below with \"sudo\"\n#\n# This Docker uses the ubuntu 16.04 version of ffmpeg, which is older than the ones in my other dockerfiles.\n# this shouldn't cause you any problems but definitely *DO NOT* use this for generating audiofiles / movies for redistribution.\n#\n# But it is somewhat less capable than the ones in the ffmpeg containers.\n########################################################################\n\n\n# First: get all the dependencies:\n#\nRUN apt-get update\nRUN apt-get install --no-install-recommends -y cmake git libgtk2.0-dev pkg-config libavcodec-dev \\\nlibavformat-dev libswscale-dev python-dev python-numpy libtbb2 libtbb-dev \\\nlibjpeg-dev libpng-dev libtiff-dev libjasper-dev libdc1394-22-dev unzip && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get install --no-install-recommends -y wget && rm -rf /var/lib/apt/lists/*;\n\n# Just get a simple editor for convienience (you could just cancel this line)\nRUN apt-get install --no-install-recommends -y vim && rm -rf /var/lib/apt/lists/*;\n\n\n# Second: get and build OpenCV 3.2\n#\nRUN cd \\\n    && wget https://github.com/opencv/opencv/archive/3.2.0.zip \\\n    && unzip 3.2.0.zip \\\n    && cd opencv-3.2.0 \\\n    && mkdir build \\\n    && cd build \\\n    && cmake .. \\\n    && make -j8 \\\n    && make install \\\n    && cd \\\n    && rm 3.2.0.zip\n\n\n# Third: install and build opencv_contrib\n#\nRUN cd \\\n    && wget https://github.com/opencv/opencv_contrib/archive/3.2.0.zip \\\n    && unzip 3.2.0.zip \\\n    && cd opencv-3.2.0/build \\\n    && cmake -DOPENCV_EXTRA_MODULES_PATH=../../opencv_contrib-3.2.0/modules/ .. \\\n    && make -j8 \\\n    && make install \\\n    && cd ../.. \\\n    && rm 3.2.0.zip\n\n\n# Forth: get and build the Learning OpenCV 3 examples:\n#    I copy the needed data to where the executables will be: opencv-3.2.0/build/bin\n#\nRUN cd \\\n    && git clone https://github.com/oreillymedia/Learning-OpenCV-3_examples.git \\\n    && cd Learning-OpenCV-3_examples \\\n    && mkdir build \\\n    && cd build \\\n    && cmake .. \\\n    && make -j8\n\n#You could then run python and do your stuff...\n#CMD [\"python\"]\n"
}