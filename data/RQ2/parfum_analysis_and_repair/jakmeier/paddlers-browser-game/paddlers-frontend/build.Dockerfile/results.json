{
  "startTime": 1674249002496,
  "endTime": 1674249003204,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 12,
        "columnEnd": 23
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 19,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "gpgUseHaPools",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 83
      }
    },
    {
      "rule": "gpgUseHaPools",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 81
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Dockerfile for\n# jakmeier/paddlers:frontend-builder\n#\n# A separate docker image for the fully built frontend which only needs to be copied to the webserver image.\n# This image only exists to reduce local compilation time by permanently caching a full build of a recent version\n# with all dependencies already compiled.\n# Extending this image and compiling the project again takes full advantage of incremental builds.\n#\n# Note that this image does not have to be updated for every update of jakmeier/paddlers:frontend-snapshot\n# which will build the project again from the newest source anyway.\n#\nFROM jakmeier/paddlers:builder-base\n\n# Install npm (as traken from https://github.com/nodejs/docker-node/blob/7b11db1cab459beb96448e18ec421ec952fa0491/14/stretch/Dockerfile)\nRUN groupadd --gid 1000 node \\\n  && useradd --uid 1000 --gid node --shell /bin/bash --create-home node\n\nENV NODE_VERSION 14.14.0\n\nRUN ARCH= && dpkgArch=\"$(dpkg --print-architecture)\" \\\n  && case \"${dpkgArch##*-}\" in \\\n    amd64) ARCH='x64';; \\\n    ppc64el) ARCH='ppc64le';; \\\n    s390x) ARCH='s390x';; \\\n    arm64) ARCH='arm64';; \\\n    armhf) ARCH='armv7l';; \\\n    i386) ARCH='x86';; \\\n    * echo \"unsupported  architecture\"; exit 1;; \\\n  esac \\\n  # gpg keys listed at https://github.com/nodejs/node#release-keys\n  && set -ex \\\n  && for key in \\\n    4ED778F539E3634C779C87C6D7062848A1AB005C \\\n    94AE36675C464D64BAFA68DD7434390BDBE9B9C5 \\\n    1C050899334244A8AF75E53792EF661D867B9DFA \\\n    71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 \\\n    8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600 \\\n    C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8 \\\n    C82FA3AE1CBEDC6BE46B9360C43CEC45C17AB93C \\\n    DD8F2338BAE7501E3DD5AC78C273792F7D83545D \\\n    A48C2BEE680E841632CD4E44F07496B3EB3C1762 \\\n    108F52B48DB57BB0CC439B2997B01419BD92F80A \\\n    B9E2F5981AA6E0CD28160D9FF13993A75599653C; \\\n  do \\\n    gpg --batch --keyserver hkp://p80.ha.pool.sks-keyservers.net:80 --recv-keys \"$key\" || \\\n    gpg --batch --keyserver hkp://ipv4.ha.pool.sks-keyservers.net --recv-keys \"$key\" || \\\n    gpg --batch --keyserver hkp://pgp.mit.edu:80 --recv-keys \"$key\"; \\\n  done \\\n  && curl -fsSLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-$ARCH.tar.xz\" \\\n  && curl -fsSLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\" \\\n  && gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc \\\n  && grep \" node-v$NODE_VERSION-linux-$ARCH.tar.xz\\$\" SHASUMS256.txt | sha256sum -c - \\\n  && tar -xJf \"node-v$NODE_VERSION-linux-$ARCH.tar.xz\" -C /usr/local --strip-components=1 --no-same-owner \\\n  && rm \"node-v$NODE_VERSION-linux-$ARCH.tar.xz\" SHASUMS256.txt.asc SHASUMS256.txt \\\n  && ln -s /usr/local/bin/node /usr/local/bin/nodejs \\\n  # smoke tests\n  && node --version \\\n  && npm --version\n\n# Install wasm-pack\nRUN USER=root cargo install wasm-pack\n# Create all folders\nRUN mkdir www; mkdir paddlers-shared-lib; mkdir paddlers-frontend\n# Build npm package\nCOPY ./www ./www\nRUN cd www; npm install && npm cache clean --force;\n# Copy all othersource code\nCOPY ./paddlers-shared-lib/src ./paddlers-shared-lib/src\nCOPY ./paddlers-shared-lib/Cargo.toml ./paddlers-shared-lib/\nCOPY ./paddlers-frontend/api ./paddlers-frontend/api\nCOPY ./paddlers-frontend/src ./paddlers-frontend/src\nCOPY ./paddlers-frontend/Cargo.toml ./paddlers-frontend/\nCOPY ./div-rs ./div-rs\nCOPY ./nuts ./nuts\nCOPY ./paddle ./paddle\nCOPY ./Cargo.lock ./paddlers-frontend/\n# Build project\nRUN cd paddlers-frontend; wasm-pack build"
}