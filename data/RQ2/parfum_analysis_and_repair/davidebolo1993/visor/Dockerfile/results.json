{
  "startTime": 1674251297485,
  "endTime": 1674251298786,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 82
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 90
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 94
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 99
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 73,
        "columnEnd": 104
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 108,
        "columnEnd": 136
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 94,
        "columnEnd": 123
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 98,
        "columnEnd": 129
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 22,
        "columnEnd": 161
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 22,
        "columnEnd": 161
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#Build with:\n#sudo docker build -t davidebolo1993/visor .\n\nFROM ubuntu:20.04\n\n# File author/maintainer info\nMAINTAINER Davide Bolognini <davidebolognini7@gmail.com>\n\n# Install dependencies\nENV DEBIAN_FRONTEND=noninteractive\nRUN apt-get update && apt-get install --no-install-recommends -y nano curl git build-essential g++ cmake libz-dev libcurl4-openssl-dev libssl-dev libbz2-dev liblzma-dev libncurses5-dev && apt-get clean && rm -rf /var/lib/apt/lists/*;\nRUN curl -f -LO https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh\nRUN bash Miniconda3-latest-Linux-x86_64.sh -p /miniconda -b\nRUN rm Miniconda3-latest-Linux-x86_64.sh\nENV PATH=/miniconda/bin:${PATH}\nRUN conda update -y conda\nRUN conda create -y -n visorenv python=3.8\nRUN echo \"source activate visorenv\" > ~/.bashrc\nENV PATH /miniconda/envs/visorenv/bin:$PATH\nRUN conda install -y -n visorenv -c bioconda bedtools\nRUN conda install -y -n visorenv -c r r-base\n#RUN conda install -y -n visorenv -c bioconda bioconductor-biocinstaller bioconductor-regioner r-optparse\n#get htslib\nRUN curl -f -LO https://github.com/samtools/htslib/releases/download/1.11/htslib-1.11.tar.bz2 && tar -vxjf htslib-1.11.tar.bz2 && cd htslib-1.11 && make && make install && rm htslib-1.11.tar.bz2\n#get samtools\nRUN curl -f -LO https://github.com/samtools/samtools/releases/download/1.11/samtools-1.11.tar.bz2 && tar -vxjf samtools-1.11.tar.bz2 && cd samtools-1.11 && make && make install && rm samtools-1.11.tar.bz2\n#get minimap2\nRUN curl -f -L https://github.com/lh3/minimap2/releases/download/v2.17/minimap2-2.17_x64-linux.tar.bz2 | tar -jxvf -\nENV PATH=\"${PATH}:/minimap2-2.17_x64-linux\"\n#get VISOR and the required python dependencies\nRUN git clone https://github.com/davidebolo1993/VISOR.git && cd VISOR && pip install --no-cache-dir -r requirements.txt && pip install --no-cache-dir --upgrade cython && python setup.py install\n\n#Pull with:\n#sudo docker pull davidebolo1993/visor\n\n#Then run:\n#sudo docker run davidebolo1993/visor VISOR --help\n\n#Or load the environment\n#sudo docker run -ti davidebolo1993/visor\n#$(visorenv) VISOR --help\n"
}