{
  "startTime": 1674250462492,
  "endTime": 1674250463337,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 126
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM golang:1.10.1-alpine3.7\n\nRUN apk add -U --no-cache \\\n    musl-dev \\\n    make \\\n    git \\\n    ca-certificates \\\n    nodejs-dev \\\n    nodejs-npm\n\nRUN go get \\\n    golang.org/x/lint/golint \\\n    golang.org/x/tools/cmd/cover\n\nWORKDIR /go/src/github.com/viliproject/vili/\n\n# run npm install first for dependencies\nCOPY package.json /go/src/github.com/viliproject/vili/\nRUN npm install && npm cache clean --force;\n\n# then copy the rest of the app and install\nCOPY . /go/src/github.com/viliproject/vili/\n\nRUN CGO_ENABLED=0 go build -a -installsuffix cgo -ldflags '-s' -o main\n\nRUN npm run build\n\n# second stage, just have the compiled binary\nFROM alpine:3.7\n\nRUN apk --no-cache add curl ca-certificates && update-ca-certificates\n\n# Install kubectl\nRUN curl -f -L https://storage.googleapis.com/kubernetes-release/release/v1.8.1/bin/linux/amd64/kubectl -o /usr/local/bin/kubectl \\\n && chmod +x /usr/local/bin/kubectl\n\nWORKDIR /app/\n\nCOPY --from=0 /go/src/github.com/viliproject/vili/main .\nCOPY --from=0 /go/src/github.com/viliproject/vili/public/build build\n\nENV HOME /app\nENV NODE_ENV production\nENV BUILD_DIR /app/build\n\nEXPOSE 80\nENTRYPOINT [\"/app/main\"]\n"
}