{
  "startTime": 1674217791408,
  "endTime": 1674217792576,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 22,
        "columnEnd": 124
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 22,
        "columnEnd": 124
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nvidia/cuda:9.0-base as base_image\n\nRUN apt-get update && apt-get install --no-install-recommends -y wget bzip2 build-essential tcl make tar libglib2.0-0 libsm6 libxext6 libxrender-dev && rm -rf /var/lib/apt/lists/*;\n\n#Install Redis\nRUN wget https://download.redis.io/redis-stable.tar.gz\nRUN tar xzvf redis-stable.tar.gz && rm redis-stable.tar.gz\nRUN cd redis-stable && make && make install\n\n#Install miniconda, python3, torch and all other python dependencies\nRUN wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh\nRUN bash miniconda.sh -b -p /opt/conda && \\\n    rm miniconda.sh\nENV PATH=\"/opt/conda/bin:${PATH}\"\nRUN conda config --set always_yes yes\nRUN conda install python=3.6\n\nRUN conda install pytorch=0.4.1 cuda90 torchvision -c pytorch\nRUN pip install --no-cache-dir atari-py redlock-py plotly opencv-python\nCOPY ./ ./rainbow-iqn-apex\nRUN pip install --no-cache-dir -e ./rainbow-iqn-apex\n\nWORKDIR ./rainbow-iqn-apex\n"
}