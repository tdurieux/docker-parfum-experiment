{
  "startTime": 1674252668560,
  "endTime": 1674252669511,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:14-alpine as build\n\n# Include git command in case a dependency in package.json refers to a git\n# repository.\nRUN apk add --no-cache git\n\n# Create an unprivileged user that will only have access to /build directory.\nRUN addgroup -g 2000 puzzlemassive \\\n    && adduser -u 2000 -G puzzlemassive -s /bin/sh -D puzzlemassive\n\nWORKDIR /build\n\nCOPY package.json ./\nCOPY package-lock.json ./\nCOPY bin ./\nCOPY README.md ./\nCOPY rollup-admin.config.js ./\nCOPY rollup.config.js ./\n\nRUN chown -R puzzlemassive:puzzlemassive /build\n\nUSER puzzlemassive\nRUN node --version \\\n    && npm --version \\\n    && npm ci --ignore-scripts\n\nCOPY . ./\nVOLUME /build/src\n\nRUN npm run build || echo \"Build failed\"\n\nCMD [\"npm\"]\n\n### Serve\n# TODO: this will eventually be used instead of just copying the built files.\n\nFROM lipanski/docker-static-website:1.0.0\n\nCOPY --from=build /build/dist /home/static\n\n# Need a Cache-Control:max-age=0 header (thttpd option '-M 0') on all responses.\nCMD [\"/thttpd\", \"-D\", \"-h\", \"0.0.0.0\", \"-p\", \"38688\", \"-d\", \"/home/static\", \"-u\", \"static\", \"-l\", \"-\", \"-M\", \"0\"]\n"
}