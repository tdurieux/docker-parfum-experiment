{
  "startTime": 1674219974685,
  "endTime": 1674219975326,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 127
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 127
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:18.04\n\n# Setup environment for roll_up\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends software-properties-common -y && \\\n    add-apt-repository ppa:ethereum/ethereum -y && \\\n    apt-get update && \\\n    apt-get install --no-install-recommends -y \\\n    wget unzip curl \\\n    build-essential cmake git libgmp3-dev libprocps-dev python-markdown libboost-all-dev libssl-dev pkg-config python3-pip solc && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /root/roll_up\n\nCOPY depends/roll_up .\n\nRUN pip3 install --no-cache-dir -r requirements.txt\n\nRUN cd build \\\n    && cmake .. \\\n    && make \\\n    && DESTDIR=/usr/local make install \\\n        NO_PROCPS=1 \\\n        NO_GTEST=1 \\\n        NO_DOCS=1 \\\n        CURVE=ALT_BN128 \\\n        FEATUREFLAGS=\"-DBINARY_OUTPUT=1 -DMONTGOMERY_OUTPUT=1 -DNO_PT_COMPRESSION=1\"\n\nENV LD_LIBRARY_PATH $LD_LIBRARY_PATH:/usr/local/lib\n\n# Setup environment for thin rpyc server\n\nWORKDIR /root/rpyc\n\nCOPY SparseMerkleTree.py requirements.txt classes.py main.py prover.py ./\n\nRUN pip3 install --no-cache-dir -r requirements.txt\n\nCMD [\"python3\", \"main.py\"]\n"
}