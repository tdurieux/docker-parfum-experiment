{
  "startTime": 1674248982120,
  "endTime": 1674248982676,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 65,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 91
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 7,
        "columnEnd": 43
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 6,
        "lineEnd": 32,
        "columnStart": 7,
        "columnEnd": 18
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 37,
        "lineEnd": 51,
        "columnStart": 7,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 32,
        "columnStart": 7,
        "columnEnd": 18
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 37,
        "lineEnd": 51,
        "columnStart": 7,
        "columnEnd": 27
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 32,
        "columnStart": 7,
        "columnEnd": 18
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 37,
        "lineEnd": 51,
        "columnStart": 7,
        "columnEnd": 27
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM phusion/baseimage:focal-1.2.0\nLABEL maintainer \"Joshua Griffin Dunn\"\n\nARG DEBIAN_FRONTEND=noninteractive\n\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n        --assume-yes \\\n        --verbose-versions \\\n        --allow-change-held-packages \\\n        -o Dpkg::Options::=\"--force-confdef\" \\\n        build-essential \\\n        curl \\\n        git \\\n        gfortran \\\n        libatlas3-base \\\n        libatlas-base-dev \\\n        libbz2-dev \\\n        libcurl4 \\\n        libcurl4-openssl-dev \\\n        libfreetype6 \\\n        libfreetype6-dev \\\n        liblapack3 \\\n        liblapack-dev \\\n        liblzma-dev \\\n        libpng16-16 \\\n        libpng-dev \\\n        libssl-dev \\\n        pkg-config \\\n        software-properties-common \\\n        sudo \\\n        vim \\\n        zlib1g-dev && rm -rf /var/lib/apt/lists/*;\n\n# Install Python 3.6-3.9\nRUN add-apt-repository ppa:deadsnakes/ppa \\\n    && apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n        --assume-yes \\\n        --verbose-versions \\\n        --allow-change-held-packages \\\n        -o Dpkg::Options::=\"--force-confdef\" \\\n        bowtie \\\n        python \\\n        python-dev \\\n        python3.6 \\\n        python3.6-dev \\\n        python3.6-distutils \\\n        python3.9 \\\n        python3.9-dev \\\n        python3.9-venv \\\n        python3.9-distutils && rm -rf /var/lib/apt/lists/*;\n\n# Copy source code into project\nENV PROJECT_HOME=/usr/src/plastid\nWORKDIR $PROJECT_HOME\nCOPY . .\n\n# Upgrade pip and install tox, which will handle installation of all\n# dependencies inside virtual environments running various version of Python\nRUN curl -f -o get-pip.py -sSL https://bootstrap.pypa.io/get-pip.py \\\n    && python3 get-pip.py \"pip==22.0.4\" \\\n    && pip install --no-cache-dir -r requirements-test.txt\n\n# Download data required to run full test suite\nRUN curl -f -L -o plastid/test/plastid_test_data.tar.bz2 \\\n        https://www.dropbox.com/s/np3wlfvp6gx8tb8/2022-05-04.plastid-test-data.tar.bz2?dl=0 \\\n    && cd plastid/test \\\n    && tar -jxvf plastid_test_data.tar.bz2 \\\n    && rm plastid_test_data.tar.bz2\n\n# Configure test environments & verify build\nRUN cat requirements.txt | sed -e \"s/=.*//\" >requirements-latest.txt \\\n    && tox -r --notest\n\n# Set some useful variables\nENV HOME=/root\nENV MPLBACKEND=agg\nENV HOSTNAME=plastid\n\n# Boot into bash terminal rather than run tests, because tests are slow\n# and sometimes we only want to run a subset of them\nCMD [\"/bin/bash\"]\n"
}