diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/7ym0n/security/WAF/nginx_modsecurity/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/7ym0n/security/WAF/nginx_modsecurity/Dockerfile/repaired.Dockerfile
index 02c1a2c..d65addf 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/7ym0n/security/WAF/nginx_modsecurity/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/7ym0n/security/WAF/nginx_modsecurity/Dockerfile/repaired.Dockerfile
@@ -6,11 +6,11 @@ echo "deb http://mirrors.aliyun.com/debian/ jessie-proposed-updates main non-fre
 echo "deb-src http://mirrors.aliyun.com/debian/ jessie main non-free contrib" >> /etc/apt/sources.list && \
 echo "deb-src http://mirrors.aliyun.com/debian/ jessie-proposed-updates main non-free contrib" >> /etc/apt/sources.list
 
-RUN set -xe && apt-get update && apt-get install -y libreadline-dev libncurses5-dev libssl-dev perl make build-essential libpcre3 libpcre3-dev libtool autoconf apache2-dev libxml2 libxml2-dev libcurl4-openssl-dev gcc g++ flex bison curl doxygen libyajl-dev libgeoip-dev dh-autoreconf libpcre++-dev wget git
+RUN set -xe && apt-get update && apt-get install --no-install-recommends -y libreadline-dev libncurses5-dev libssl-dev perl make build-essential libpcre3 libpcre3-dev libtool autoconf apache2-dev libxml2 libxml2-dev libcurl4-openssl-dev gcc g++ flex bison curl doxygen libyajl-dev libgeoip-dev dh-autoreconf libpcre++-dev wget git && rm -rf /var/lib/apt/lists/*;
 
-RUN cd /opt && wget 'http://nginx.org/download/nginx-1.12.2.tar.gz' && git clone https://github.com/SpiderLabs/ModSecurity && cd ModSecurity && git checkout -b v3/master origin/v3/master && sh build.sh && git submodule init && git submodule update && ./configure --prefix=/opt/modsecurity && make -j8 && make install && echo "/opt/modsecurity/lib/" >> /etc/ld.so.conf.d/libc.conf && ln -s /opt/modsecurity /usr/local/modsecurity
+RUN cd /opt && wget 'https://nginx.org/download/nginx-1.12.2.tar.gz' && git clone https://github.com/SpiderLabs/ModSecurity && cd ModSecurity && git checkout -b v3/master origin/v3/master && sh build.sh && git submodule init && git submodule update && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/opt/modsecurity && make -j8 && make install && echo "/opt/modsecurity/lib/" >> /etc/ld.so.conf.d/libc.conf && ln -s /opt/modsecurity /usr/local/modsecurity
 
-RUN cd /opt && git clone https://github.com/SpiderLabs/ModSecurity-nginx.git modsecurity-nginx && tar xzvf nginx-1.12.2.tar.gz && cd nginx-1.12.2 && ./configure --prefix=/opt/nginx --add-module=/opt/modsecurity-nginx && make -j8 && make install && cd /opt/ModSecurity && git checkout v2/master  && cp /opt/ModSecurity/unicode.mapping /opt/nginx/conf/
+RUN cd /opt && git clone https://github.com/SpiderLabs/ModSecurity-nginx.git modsecurity-nginx && tar xzvf nginx-1.12.2.tar.gz && cd nginx-1.12.2 && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/opt/nginx --add-module=/opt/modsecurity-nginx && make -j8 && make install && cd /opt/ModSecurity && git checkout v2/master && cp /opt/ModSecurity/unicode.mapping /opt/nginx/conf/ && rm nginx-1.12.2.tar.gz
 
 RUN cd /opt && git clone https://github.com/SpiderLabs/owasp-modsecurity-crs.git && cd owasp-modsecurity-crs && cp crs-setup.conf.example  crs-setup.conf && cp /opt/ModSecurity/modsecurity.conf-recommended /opt/nginx/conf/modsecurity.conf && cp rules/REQUEST-900-EXCLUSION-RULES-BEFORE-CRS.conf.example rules/REQUEST-900-EXCLUSION-RULES-BEFORE-CRS.conf && cp rules/RESPONSE-999-EXCLUSION-RULES-AFTER-CRS.conf.example rules/RESPONSE-999-EXCLUSION-RULES-AFTER-CRS.conf
 
@@ -46,7 +46,7 @@ echo "include /opt/owasp-modsecurity-crs/rules/RESPONSE-999-EXCLUSION-RULES-AFTE
 RUN mkdir -pv /var/log/modsecurity && rm -rfv /opt/Modsecurity /opt/modsecurity-nginx /opt/nginx-1.12.2 /opt/nginx-1.12.2.tar.gz
 ADD modsecurity.conf /opt/nginx/conf/
 ADD nginx.conf /opt/nginx/conf/
-#RUN mkdir -pv /opt/nginx/conf/vhost 
+#RUN mkdir -pv /opt/nginx/conf/vhost
 #ADD default.conf /opt/nginx/conf/vhost/
 RUN mv /opt/nginx/conf/modsecurity.conf /opt/nginx/conf/modsecurity.conf.backup && mv /opt/nginx/conf/nginx.conf /opt/nginx/conf/nginx.conf.backup