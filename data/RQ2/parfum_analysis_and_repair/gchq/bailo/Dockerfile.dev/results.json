{
  "startTime": 1674252210283,
  "endTime": 1674252210819,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:16-alpine\n\nARG user_id=1001\n\n# We use 'RUN' instead of 'ADD' here due to odd caching issues where 'ADD' would still\n# download S2I, then check that it hasn't changed before accepting it was cached.\n# 'RUN' instead caches based on text contents.\nRUN mkdir /s2i && \\\n    wget -O s2i.tar.gz https://github.com/openshift/source-to-image/releases/download/v1.3.1/source-to-image-v1.3.1-a5a77147-linux-amd64.tar.gz && \\\n    tar -xvf s2i.tar.gz -C /s2i && \\\n    rm -rf s2i.tar.gz && \\\n    apk update && \\\n    apk add ca-certificates img docker shadow && \\\n    rm -rf /var/cache/apk/*\n\nRUN if [[ $user_id -eq 1000 ]]; then groupmod -g 1001 node && usermod -u 1001 -g 1001 node ; fi \\\n  && chmod u+s /usr/bin/newuidmap /usr/bin/newgidmap \\\n  && adduser -D -u $user_id user \\\n  && mkdir -p /run/user/$user_id \\\n  && chown -R user /run/user/$user_id /home/user \\\n  && chmod -R o+x /s2i \\ \n  && addgroup -S certs \\\n  && addgroup user certs \\\n  && chgrp certs /etc/ssl/certs \\\n  && chmod 775 /etc/ssl/certs \\\n  && echo user:100000:65536 | tee /etc/subuid | tee /etc/subgid\n\n\nCOPY package.json /home/user/app/package.json\nCOPY package-lock.json /home/user/app/package-lock.json\n\nWORKDIR /home/user/app\nRUN npm install && npm cache clean --force;\n\nCOPY --chown=user . / /home/user/app/\n\nUSER user\nENV USER user\nENV HOME /home/user\nENV XDG_RUNTIME_DIR=/run/user/$user_id\n\n## We don't pull the image here because there's no way to turn off\n## seccomp/apparmor in a build like we can during run\n# RUN img pull seldonio/seldon-core-s2i-python37:1.10.0\n\nEXPOSE 3000\n#CMD [\"npm\", \"run\", \"dev\"]\nCMD ./scripts/run_app_dev.sh\n"
}