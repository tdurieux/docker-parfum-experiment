{
  "startTime": 1674215530956,
  "endTime": 1674215531726,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 14
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 20,
        "columnEnd": 36
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 18,
        "columnEnd": 34
      }
    }
  ],
  "repairedDockerfile": "#**********************************************************************\n# Copyright 2018 Crown Copyright\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#**********************************************************************\n\n\n\n# ~~~ builder stage ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nFROM node:8.12.0-alpine AS builder\nWORKDIR /root/app\nRUN apk add --no-cache \\\n        git && \\\n    npm install --global yarn && npm cache clean --force;\n# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n\n\n# ~~~ Dependencies stage ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nFROM builder AS dependencies\nCOPY work/.eslintrc.js .eslintrc.js\nCOPY work/package.json package.json\nCOPY work/tsconfig.json tsconfig.json\nCOPY work/tsconfig.prod.json tsconfig.prod.json\nCOPY work/tslint.json tslint.json\nCOPY work/images.d.ts images.d.ts\nRUN yarn install && yarn cache clean;\n# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n\n\n# ~~~ Build stage ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nFROM dependencies AS build\nCOPY --from=dependencies /root/app/node_modules /root/app/node_modules\nCOPY work/src src\nCOPY work/public public\nRUN yarn build && yarn cache clean;\n# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n\n\n# ~~~ Final stage ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nFROM nginx:1.15.10-alpine\nWORKDIR /root/app\n\n# Set tini as entrypoint\nENTRYPOINT [\"/sbin/tini\", \"--\"]\n\nEXPOSE 5001\nEXPOSE 9446\n\nVOLUME [ \"/etc/nginx/certs\" ]\n\n# An explanation of the commands below:\n#   Get all relevant environment variables...\n#   ...remove the STROOM_UI tag...\n#   ...lowercase them...\n#   ...camelCase them...\n#   ...turn them into json...\n#   ...save to a file.\n#   Do environment variable substitution for nginx.conf\n#   Serve the statics.\nCMD env | grep APP_ | \\\n    sed 's/APP_//g' | \\\n    sed -e 's/\\(.*=\\)/\\L&/' | \\\n    sed -r 's/_([a-z])/\\U\\1/g' | \\\n    jo > /usr/share/nginx/html/config.json \\\n    && envsubst '${NGINX_HOST} \\\n    ${NGINX_HTTP_PORT} \\\n    ${NGINX_HTTPS_PORT} \\\n    ${NGINX_SSL_CERTIFICATE} \\\n    ${NGINX_SSL_CERTIFICATE_KEY} \\\n    ${NGINX_SSL_CLIENT_CERTIFICATE}' \\\n    < /etc/nginx/template/nginx.conf.template > /etc/nginx/nginx.conf \\\n    && nginx -g 'daemon off;'\n\n\n# We need full, non-BusyBox sed\n# jo is a JSON tool for generating json output on the command line.\n# We use it to convert environment vars to JSON. We serve this in 'public'.\nRUN apk add --no-cache \\\n    tini \\\n    sed \\\n    --repository http://dl-3.alpinelinux.org/alpine/edge/testing/ jo\n\nCOPY --from=build /root/app/build /usr/share/nginx/html\nCOPY nginx.conf /etc/nginx/nginx.conf\n\n# Label the image so we can see what commit/tag it came from\nARG GIT_COMMIT=unspecified\nARG GIT_TAG=unspecified\nLABEL \\\n    git_commit=\"$GIT_COMMIT\" \\\n    git_tag=\"$GIT_TAG\"\n"
}