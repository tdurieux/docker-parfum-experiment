{
  "startTime": 1674218620048,
  "endTime": 1674218621638,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 7,
        "columnEnd": 26
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 7,
        "columnEnd": 30
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright (c) 2017, 2022 IBM Corp. and others\n#\n# This program and the accompanying materials are made\n# available under the terms of the Eclipse Public License 2.0\n# which accompanies this distribution and is available at\n# https://www.eclipse.org/legal/epl-2.0/ or the Apache\n# License, Version 2.0 which accompanies this distribution and\n# is available at https://www.apache.org/licenses/LICENSE-2.0.\n#\n# This Source Code may also be made available under the\n# following Secondary Licenses when the conditions for such\n# availability set forth in the Eclipse Public License, v. 2.0\n# are satisfied: GNU General Public License, version 2 with\n# the GNU Classpath Exception [1] and GNU General Public\n# License, version 2 with the OpenJDK Assembly Exception [2].\n#\n# [1] https://www.gnu.org/software/classpath/license.html\n# [2] http://openjdk.java.net/legal/assembly-exception.html\n#\n# SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH\n# Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception\n#\n\nFROM ubuntu:18.04\nMAINTAINER openj9.bot <openj9.bot@gmail.com>\n\n# Install basic requirementes from APT. Set up for SSH (including SSH login fix to prevent user being logged out), install and setup  virtualenv from pip3\nCOPY requirements.* /tmp/\nRUN apt-get update && apt-get install -y --no-install-recommends python3 python3-dev python3-pip git openjdk-8-jdk zip \\\n    && DEBIAN_FRONTEND=\"noninteractive\" apt-get -q upgrade -y -o Dpkg::Options::=\"--force-confnew\" --no-install-recommends \\\n    && DEBIAN_FRONTEND=\"noninteractive\" apt-get -q install -y -o Dpkg::Options::=\"--force-confnew\" --no-install-recommends openssh-server \\\n    && rm -rf /var/lib/apt/lists/* \\\n    && sed -i 's|session    required     pam_loginuid.so|session    optional     pam_loginuid.so|g' /etc/pam.d/sshd \\\n    && mkdir -p /var/run/sshd \\\n    && pip3 install --no-cache-dir -U pip \\\n    && pip3 install --no-cache-dir virtualenv \\\n    && virtualenv myenv -p python3\n# Update LANG to fix error with pip-tools\nENV LANG=C.UTF-8\n# Update path to include the virtual env install location\nENV PATH /myenv/bin:$PATH\n# Activate the virtualenv environment, install build and test tools, create a new dependency list, and change permissions to ensure that Jenkins modify packages where necessary\nRUN /bin/bash -c \"source /myenv/bin/activate && pip3 install setuptools pip-tools && pip3 install --requirement /tmp/requirements.txt && mv /tmp/requirements.txt /tmp/requirements.orig && pip-compile /tmp/requirements.in && chmod -R ugo+w /myenv\"\n# Setup jenkins user\nRUN  useradd -m -d /home/jenkins -s /bin/sh jenkins \\\n    && echo \"jenkins:jenkinspass\" | chpasswd \\\n# Standard SSH port\nEXPOSE 22\n# Default command\nCMD [\"/usr/sbin/sshd\", \"-D\"]\n# Create and set a working directory /docs\nRUN mkdir /docs\nWORKDIR /docs"
}