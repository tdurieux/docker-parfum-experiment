{
  "startTime": 1674215183259,
  "endTime": 1674215184462,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 41,
        "lineEnd": 46,
        "columnStart": 11,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 18
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Use oldest release with standard support for linked glibc compatibility\nFROM ubuntu:18.04\n\nARG PYTHON_VERSION\nENV LD_LIBRARY_PATH=/usr/local/lib\nENV DEBIAN_FRONTEND=noninteractive\n\nRUN apt-get update -y && \\\n    apt-get dist-upgrade -y && \\\n    apt-get install --no-install-recommends -y \\\n        build-essential \\\n        curl \\\n        git \\\n        libbz2-dev \\\n        libffi-dev \\\n        libgdbm-compat-dev \\\n        libgdbm-dev \\\n        liblzma-dev \\\n        libncurses5-dev \\\n        libncursesw5-dev \\\n        libnss3-dev \\\n        libreadline-dev \\\n        libsqlite3-dev \\\n        libssl-dev \\\n        libtk8.6 \\\n        libxml2-dev \\\n        libxmlsec1-dev \\\n        llvm \\\n        make \\\n        tk-dev \\\n        unixodbc-dev \\\n        uuid-dev \\\n        wget \\\n        xz-utils \\\n        zlib1g-dev && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /tmp\n\nRUN wget https://www.python.org/ftp/python/${PYTHON_VERSION}/Python-${PYTHON_VERSION}.tgz \\\n    && tar xzf Python-${PYTHON_VERSION}.tgz \\\n    && ( cd Python-${PYTHON_VERSION} \\\n        && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n            --enable-optimizations \\\n            --enable-shared \\\n            --with-computed-gotos \\\n            --with-lto \\\n            --with-system-ffi \\\n        && make install --jobs \"$(nproc)\") \\\n    && rm -r ./Python-${PYTHON_VERSION} \\\n    && rm ./Python-${PYTHON_VERSION}.tgz\n\nRUN pip3 install --no-cache-dir --upgrade pip setuptools wheel\n\nWORKDIR /build\n\nADD ../requirements*.txt .\n\nRUN pip3 install --no-cache-dir -r requirements-dev.txt\n\nADD ../ /build\n\nRUN /bin/sh ./scripts/buildLinuxDist.sh ubuntu\n\nENTRYPOINT [\"/bin/sh\", \"-c\"]\n"
}