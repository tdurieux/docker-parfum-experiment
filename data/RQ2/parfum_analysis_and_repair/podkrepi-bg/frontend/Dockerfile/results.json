{
  "startTime": 1674218935533,
  "endTime": 1674218936159,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 2,
        "columnEnd": 33
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 2,
        "columnEnd": 14
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 37,
        "columnEnd": 53
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 25,
        "columnEnd": 41
      }
    }
  ],
  "repairedDockerfile": "# Build target dependencies #\n###########################\nFROM node:16.14.2-alpine3.15 AS base\nWORKDIR /app\nARG NODE_ENV=production\nENV PATH=/app/node_modules/.bin:$PATH \\\n  NODE_ENV=\"$NODE_ENV\"\nCOPY package.json yarn.lock /app/\nEXPOSE 3040\n\n# Build target dependencies #\n###########################\nFROM base AS dependencies\n# Install prod dependencies\nRUN yarn install --production && \\\n  # Cache prod dependencies\n  cp -R node_modules /prod_node_modules && \\\n  # Install dev dependencies\n  yarn install --production=false && yarn cache clean;\n\nRUN apk --no-cache add curl g++ make python3\n\n# Build target development #\n############################\nFROM dependencies AS development\nCOPY . /app\nCMD [ \"yarn\", \"dev\" ]\n\n# Build target builder #\n########################\nFROM base AS builder\nARG SENTRY_AUTH_TOKEN\nENV SENTRY_AUTH_TOKEN=\"$SENTRY_AUTH_TOKEN\"\nCOPY --from=dependencies /app/node_modules /app/node_modules\nCOPY . /app\nRUN yarn build && \\\n  yarn sitemap && \\\n  rm -rf node_modules && yarn cache clean;\n\n# Build target production #\n###########################\nFROM base AS production\nCOPY --from=builder /app/.next /app/.next\nCOPY --from=builder /app/public /app/public\nCOPY --from=dependencies /prod_node_modules /app/node_modules\nCOPY next.config.js next-i18next.config.js /app/\nCMD [ \"yarn\", \"start\" ]\n\nHEALTHCHECK --interval=5s --timeout=3s --retries=3 CMD curl --fail http://localhost:3040 || exit 1\n"
}