{
  "startTime": 1674253654687,
  "endTime": 1674253655854,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 21,
        "columnEnd": 87
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 19,
        "columnEnd": 102
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Install and run yarn\n\nFROM gcr.io/google-appengine/debian8 AS static\n\n# Install updates and dependencies\nRUN apt-get update -y && apt-get install --no-install-recommends -y -q curl python build-essential git ca-certificates libkrb5-dev imagemagick && \\\n    apt-get clean && rm /var/lib/apt/lists/*_*\n\n# Install the latest LTS release of nodejs\nRUN mkdir /nodejs && curl -f https://nodejs.org/dist/v8.12.0/node-v8.12.0-linux-x64.tar.xz | tar xvJf - -C /nodejs --strip-components=1\nENV PATH $PATH:/nodejs/bin\n\n# Install the latest stable release of Yarn\nRUN mkdir /yarn && curl -f -L https://github.com/yarnpkg/yarn/releases/download/v1.9.4/yarn-v1.9.4.tar.gz | tar xvzf - -C /yarn --strip-components=1\nENV PATH $PATH:/yarn/bin\n\nCOPY /frontend /frontend\n\nRUN cd frontend && yarn\nRUN cd frontend && yarn run build\n\n# Build Go app, install cockroach\n\nFROM golang:1.11-alpine AS go\nCOPY . /go/src/website\nRUN go install website\n\n# Build final image\n\nFROM alpine:3.7\n# Add ssl certs for Go\nRUN apk add --no-cache ca-certificates\nCOPY hots.json /\nENV GOOGLE_APPLICATION_CREDENTIALS /hots.json\nCOPY aws.creds /root/.aws/credentials\nCOPY --from=static /frontend/build /static\nCOPY --from=go /go/bin/website /website\nENTRYPOINT [\"/website\"]\n"
}