{
  "startTime": 1674255230691,
  "endTime": 1674255231980,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 101
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 109,
        "lineEnd": 109,
        "columnStart": 4,
        "columnEnd": 147
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 73,
        "lineEnd": 73,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 28,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 61,
        "lineEnd": 63,
        "columnStart": 4,
        "columnEnd": 25
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:focal\n# FROM public.ecr.aws/unocha/debian-base-s6:11-slim\n\nARG S6_VERSION=v2.2.0.3\n\nENV DEBIAN_FRONTEND=noninteractive \\\n    LANG=en_US.UTF-8 \\\n    LANGUAGE=en_US:en_US \\\n    LC_ALL=en_US.UTF-8 \\\n    HDX_CKAN_WORKERS=4 \\\n    INI_FILE=/etc/ckan/prod.ini \\\n    HDX_CACHE_DIR=/srv/cache \\\n    HDX_LOG_LEVEL=INFO\n\nWORKDIR /srv/ckan\n\nCOPY . .\n\n# Install required system packages\nRUN apt-get -qq -y update && \\\n    # locales\n    apt-get -qq --no-install-recommends -y install locales && \\\n    echo \"en_US.UTF-8 UTF-8\" >> /etc/locale.gen && \\\n    cp docker/locale /etc/default/locale && \\\n    locale-gen en_US.UTF-8 && \\\n    dpkg-reconfigure locales && \\\n    update-locale LANGUAGE=en_US.UTF-8 LC_ALL=en_US.UTF-8 && \\\n    apt-get -q -y update && \\\n    apt-get -q --no-install-recommends -y install \\\n        build-essential \\\n        curl \\\n        gettext-base \\\n        git-core \\\n        gpg \\\n        iputils-ping \\\n        libmagic1 \\\n        libpq-dev \\\n        libxml2-dev \\\n        libxslt-dev \\\n        libgeos-dev \\\n        libssl-dev \\\n        libffi-dev \\\n        nano \\\n        net-tools \\\n        postgresql-client \\\n        procps \\\n        psmisc \\\n        python3 \\\n        python3-pip \\\n        vim \\\n        wget && \\\n    # make python3 and pip3 available as python and pip\n    ln -sf /usr/bin/python3 /usr/bin/python && \\\n    ln -sf /usr/bin/pip3 /usr/bin/pip && \\\n    # perpare nginx unit installation\n    curl -f --output /usr/share/keyrings/nginx-keyring.gpg https://unit.nginx.org/keys/nginx-keyring.gpg && \\\n    echo \"deb [signed-by=/usr/share/keyrings/nginx-keyring.gpg] https://packages.nginx.org/unit/ubuntu/ focal unit\" > /etc/apt/sources.list.d/unit.list && \\\n    echo \"deb-src [signed-by=/usr/share/keyrings/nginx-keyring.gpg] https://packages.nginx.org/unit/ubuntu/ focal unit\" >> /etc/apt/sources.list.d/unit.list && \\\n    # perpare Node 16 installation\n    curl -f -sL https://deb.nodesource.com/setup_16.x | bash - && \\\n    # install Node and nginx unit\n    apt-get -qq --no-install-recommends -y install \\\n      nodejs \\\n      unit unit-python3.8 && \\\n    ln -sf /usr/lib/unit/modules/python3.8.unit.so /usr/lib/unit/modules/python.unit.so && \\\n    # install lessc\n    npm install -g less@3.13.1 && \\\n    # prepare files and folders\n    mkdir -p /var/log/ckan /srv/filestore /etc/services.d/unit /etc/ckan && \\\n    cd /srv/ckan && \\\n    python -m pip install --upgrade pip && \\\n    pip install --no-cache-dir -r requirement-setuptools.txt && \\\n    pip install --no-cache-dir --upgrade -r requirements.txt && \\\n    pip install --no-cache-dir newrelic && \\\n    chmod +x run_pytest_with_coverage.sh && \\\n    chmod +x setup_py3_helper.sh && \\\n    ./setup_py3_helper.sh && \\\n    newrelic-admin generate-config LICENSE_KEY /srv/newrelic.ini && \\\n    chown -R www-data ckan/public/base/i18n && \\\n    cp -a docker/run_unit /etc/services.d/unit/run && \\\n    chown www-data:www-data -R /var/log/ckan /srv/filestore && \\\n    cp -a docker/hdxckantool-ng.py /srv/hdxckantool-ng.py && \\\n    chmod +x /srv/hdxckantool-ng.py && \\\n    ln -s /srv/hdxckantool-ng.py /usr/sbin/hdxckantool && \\\n    echo \"application/vnd.geo+json       geojson\" >> /etc/mime.types && \\\n    apt-get -qq -y remove \\\n        build-essential \\\n        gpg \\\n        libffi-dev \\\n        libpq-dev \\\n        libssl-dev \\\n        libxml2-dev \\\n        libxslt1-dev \\\n        libyaml-dev \\\n        zlib1g-dev \\\n        python-dev && \\\n    apt-get -y autoremove && \\\n    apt-get clean && \\\n    rm -rf \\\n        /root/.cache \\\n        /root/.npm \\\n        /usr/local/man \\\n        /usr/share/doc \\\n        /usr/share/man \\\n        /var/lib/apt/lists/* \\\n        /var/tmp/* \\\n        /tmp/* && \\\n    S6_ARCH=$(uname -m | sed 's/x86_64/amd64/') && \\\n    echo \"Installing s6 version: $S6_VERSION for $S6_ARCH\" && \\\n    curl -f -o /tmp/s6-overlay.tar.gz -jkSL https://github.com/just-containers/s6-overlay/releases/download/${S6_VERSION}/s6-overlay-${S6_ARCH}.tar.gz && \\\n    tar xzf /tmp/s6-overlay.tar.gz -C / && \\\n    rm -f /tmp/s6-overlay.tar.gz && \\\n    ln -sf /usr/bin/sh /bin/sh && npm cache clean --force;\n\n\nVOLUME [\"/srv/filestore\", \"/srv/backup\", \"/var/log/ckan\"]\n\nEXPOSE 5000\n\nENTRYPOINT [\"/init\"]\n\nCMD []\n"
}