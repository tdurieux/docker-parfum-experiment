{
  "startTime": 1674255545048,
  "endTime": 1674255546167,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 7,
        "columnEnd": 32
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.12\n\nLABEL org.opencontainers.image.source https://github.com/clearmatics/zeth\n\n####\n# This Dockerfile builds the base image\n# (installs all the dependencies) for Zeth\n####\n\n# Install necessary packages\nRUN apk --update --no-cache add \\\n        build-base \\\n        git \\\n        boost-dev \\\n        # Necessary for static builds\n        boost-static \\\n        gmp-dev \\\n        procps-dev \\\n        g++ \\\n        gcc \\\n        libxslt-dev \\\n        cmake \\\n        libressl-dev \\\n        pkgconfig \\\n        sudo \\\n        # Necessary for gRPC\n        automake \\\n        autoconf \\\n        libtool \\\n        # Debug tools\n        vim \\\n        curl\n\nRUN git clone -b v1.31.x https://github.com/grpc/grpc /var/local/git/grpc\nRUN cd /var/local/git/grpc && git submodule update --init --recursive\n\n# Build protobuf independently and install libraries in /usr/lib\n# Then use flag `-DgRPC_PROTOBUF_PROVIDER=package` in gRPC build\nRUN cd /var/local/git/grpc/third_party/protobuf \\\n    && ./autogen.sh \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr \\\n    && make -j\"$($(nproc)+1)\" \\\n    && make check \\\n    && make install \\\n    && make clean\n\nENV CMAKE_FLAGS=\"-DCMAKE_BUILD_TYPE=Release -DgRPC_INSTALL=ON -DgRPC_BUILD_TESTS=OFF -DgRPC_SSL_PROVIDER=package -DgRPC_PROTOBUF_PROVIDER=package -DgRPC_BUILD_GRPC_CSHARP_PLUGIN=OFF -DgRPC_BUILD_GRPC_NODE_PLUGIN=OFF -DgRPC_BUILD_GRPC_OBJECTIVE_C_PLUGIN=OFF -DgRPC_BUILD_GRPC_PHP_PLUGIN=OFF -DgRPC_BUILD_GRPC_RUBY_PLUGIN=OFF\"\n\n# Build the static libraries\nRUN cd /var/local/git/grpc \\\n    && mkdir -p cmake/build \\\n    && cd cmake/build \\\n    && cmake ${CMAKE_FLAGS} ../.. \\\n    && make -j\"$($(nproc)+1)\" \\\n    && make install\n\n# Build the shared libraries\nRUN cd /var/local/git/grpc \\\n    && rm -r cmake/build \\\n    && mkdir -p cmake/build \\\n    && cd cmake/build \\\n    && cmake ${CMAKE_FLAGS} -DBUILD_SHARED_LIBS=ON ../.. \\\n    && make -j\"$($(nproc)+1)\" \\\n    && make install\n\nCMD [\"/bin/bash\"]\n"
}