{
  "startTime": 1674250798017,
  "endTime": 1674250798791,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 7,
        "columnEnd": 79
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 7,
        "columnEnd": 32
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 7,
        "columnEnd": 31
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 7,
        "columnEnd": 62
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 7,
        "columnEnd": 48
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Image to copy solc compiler from\nFROM ethereum/solc:0.8.1-alpine as solc-0.8.1\n\nFROM python:3.8-alpine3.12\n\nLABEL org.opencontainers.image.source https://github.com/clearmatics/zeth\n\n# Image to copy solc compiler from\nCOPY --from=solc-0.8.1 /usr/local/bin/solc /root/.solcx/solc-v0.8.1\n\nRUN apk --update --no-cache add \\\n    build-base \\\n    linux-headers \\\n    curl \\\n    make \\\n    perl \\\n    gcc \\\n    tar \\\n    libffi-dev \\\n    python3-dev \\\n    py3-virtualenv \\\n    bash\n\n# Copy necessary files in the docker container\nCOPY ./client /home/zeth/client\nCOPY ./proto /home/zeth/proto\n\nENV OPENSSL_VERSION=\"1.1.1g\"\nENV BUILD_ROOT=\"/home/zeth/client\"\nRUN cd ${BUILD_ROOT} \\\n    # && virtualenv env \\\n    # && . env/bin/activate \\\n    && pip install --no-cache-dir -U setuptools \\\n    && pip install --no-cache-dir -U wheel pip \\\n    && curl -f -O https://www.openssl.org/source/openssl-${OPENSSL_VERSION}.tar.gz \\\n    && tar xvf openssl-${OPENSSL_VERSION}.tar.gz \\\n    && cd openssl-${OPENSSL_VERSION} \\\n    && ./config no-shared no-ssl2 no-ssl3 -fPIC --prefix=${BUILD_ROOT}/openssl \\\n    && make -j\"$($(nproc)+1)\" && make install && rm openssl-${OPENSSL_VERSION}.tar.gz\n\nWORKDIR /home/zeth/client\n\n# WARNING:\n# The installation will only succeed if the built cryptography wheel is for the\n# same version of the cryptography package as the one documented in `setup.py`.\n# If not, `make setup` will try to install the right version, which will fail.\n# To avoid this, we create a `constraints.txt` file that constrains the version\n# of `cryptography` extracted from the `setup.py` file\nRUN grep -o \"cryptography==[^\\\"]*\" setup.py > constraints.txt\n\nRUN CFLAGS=\"-I${BUILD_ROOT}/openssl/include\" LDFLAGS=\"-L${BUILD_ROOT}/openssl/lib\" pip wheel --wheel-dir wheels -c constraints.txt --no-binary :all: cryptography\n\nRUN virtualenv env \\\n    && source env/bin/activate \\\n    && pip install --no-cache-dir --no-index --find-links=wheels cryptography \\\n    && make setup\n\n# Clean the container\nRUN rm openssl-1.1.1g.tar.gz\nRUN rm -r openssl-1.1.1g\n\nCMD [\"/bin/bash\"]\n"
}