{
  "startTime": 1674215007481,
  "endTime": 1674215008248,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 101
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 8,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 13
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 21,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 74
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM centos:7\n\n# Update Yum and install epel\nRUN yum update -y && \\\n    yum install -y epel-release && \\\n    yum groupinstall -y development && rm -rf /var/cache/yum\n\n# Install dependencies\nRUN yum install -y \\\n    git \\\n    libevent \\\n    openssl-devel \\\n    unzip \\\n    wget \\\n    httpie \\\n    net-tools && rm -rf /var/cache/yum\n\n# Install prerequisites for the Couchbase Server python SDK\n# https://developer.couchbase.com/documentation/server/current/sdk/python/start-using-sdk.html\nRUN wget https://packages.couchbase.com/releases/couchbase-release/couchbase-release-1.0-2-x86_64.rpm; \\\n    rpm -iv couchbase-release-1.0-2-x86_64.rpm; \\\n    yum install -y \\\n        libcouchbase-devel \\\n        gcc \\\n        gcc-c++ \\\n        python-devel \\\n        python-pip \\\n        sudo && rm -rf /var/cache/yum\n\nRUN pip install --no-cache-dir --upgrade pip\n\n# Install docker binary for docker in docker\nRUN curl -fsSLO https://get.docker.com/builds/Linux/x86_64/docker-17.05.0-ce.tgz && \\\n    tar --strip-components=1 -xvzf docker-17.05.0-ce.tgz -C /usr/local/bin && rm docker-17.05.0-ce.tgz\n\nWORKDIR /opt\n\n# Git clone mobile-testkit\nRUN git clone https://github.com/couchbaselabs/mobile-testkit.git\n\nWORKDIR /opt/mobile-testkit\n\n# Install dependencies\nRUN pip install --no-cache-dir --ignore-installed -U ipaddress\nRUN pip install --no-cache-dir --ignore-installed -U requests\nRUN pip install --no-cache-dir -r requirements.txt\n\n# Create ansible config for sample\nRUN cp ansible.cfg.example ansible.cfg\n\n# Set the correct default user\nRUN sed -i 's/remote_user = vagrant/remote_user = root/' ansible.cfg\n\n# set python env\nENV PYTHONPATH=/opt/mobile-testkit/\nENV ANSIBLE_CONFIG=/opt/mobile-testkit/ansible.cfg\n\n# Cop test runner script to repo\nCOPY ./entrypoint.sh /opt/mobile-testkit\nCMD [\"/bin/bash\"]\n"
}