{
  "startTime": 1674250429899,
  "endTime": 1674250430742,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 184
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 207
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 18,
        "columnEnd": 87
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 98
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 98
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 18,
        "columnEnd": 87
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 98
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 122
      }
    }
  ],
  "repairedDockerfile": "FROM debian\nENV APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=1\nRUN apt update && apt install --no-install-recommends -y gnupg2 curl procps openjdk-11-jdk unzip wget dbus sudo && rm -rf /var/lib/apt/lists/*;\nRUN DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y locales python3 python3-pip mc nano htop git && rm -rf /var/lib/apt/lists/*;\n\nRUN wget -qO - https://d3g5vo6xdbdb9a.cloudfront.net/GPG-KEY-opendistroforelasticsearch | apt-key add -\nRUN echo \"deb https://d3g5vo6xdbdb9a.cloudfront.net/apt stable main\" | tee -a   /etc/apt/sources.list.d/opendistroforelasticsearch.list\nRUN wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-oss-7.10.2-amd64.deb && \\\n    dpkg -i elasticsearch-oss-7.10.2-amd64.deb && \\\n    rm elasticsearch-oss-7.10.2-amd64.deb\n\nRUN curl -f https://d3g5vo6xdbdb9a.cloudfront.net/tarball/opendistro-elasticsearch/opendistroforelasticsearch-1.13.0-linux-x64.tar.gz -o opendistroforelasticsearch-1.13.0-linux-x64.tar.gz && \\\n    tar -zxf opendistroforelasticsearch-1.13.0-linux-x64.tar.gz && \\\n    rm opendistroforelasticsearch-1.13.0-linux-x64.tar.gz && \\\n    mv opendistroforelasticsearch-1.13.0 /elasticsearch && \\\n    chown elasticsearch:elasticsearch elasticsearch -R && \\\n    cd /elasticsearch && \\\n    sudo -H -u elasticsearch bash -c './opendistro-tar-install.sh &'\n\nRUN curl -fsSL https://artifacts.elastic.co/GPG-KEY-elasticsearch | apt-key add -\nRUN echo \"deb https://artifacts.elastic.co/packages/7.x/apt stable main\" | tee -a /etc/apt/sources.list.d/elastic-7.x.list\nRUN apt update\nRUN curl -f https://d3g5vo6xdbdb9a.cloudfront.net/tarball/opendistroforelasticsearch-kibana/opendistroforelasticsearch-kibana-1.13.0-linux-x64.tar.gz -o opendistroforelasticsearch-kibana-1.13.0-linux-x64.tar.gz && \\\n    tar -xf opendistroforelasticsearch-kibana-1.13.0-linux-x64.tar.gz && \\\n    rm opendistroforelasticsearch-kibana-1.13.0-linux-x64.tar.gz\n\n# Prepare environment UTF-8\nRUN sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen && \\\n    locale-gen\nENV LANG en_US.UTF-8\nENV LANGUAGE en_US:en\nENV LC_ALL en_US.UTF-8\n\n#RUN echo \"Cloning OSAS\" && \\\n#    cd / && \\\n#    git clone https://github.com/adobe/OSAS.git && \\\n#    mv OSAS osas\nADD ./osas /osas/osas\nADD ./docs /osas/docs\nADD ./scripts /osas/scripts\nADD ./resources /osas/resources\nRUN mkdir osas/corpus\nRUN mkdir osas/data\nCOPY ./requirements.txt /osas/\n\nRUN cd /osas/ && \\\n    cat requirements.txt\n\nRUN cd /osas/ && \\\n    cat requirements.txt && \\\n    pip3 install --no-cache-dir -U pip && \\\n    pip3 install --no-cache-dir -r requirements.txt && \\\n    pip3 install --no-cache-dir jupyterlab\n\nENV SHELL=/bin/bash\n\nCMD /osas/scripts/run_services.sh & jupyter lab --ip=0.0.0.0 --allow-root --ServerApp.token=osas # & cd /osas && python3 osas/webserver.py\n\n"
}