diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/adobe/hyde/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/adobe/hyde/Dockerfile/repaired.Dockerfile
index cc0929a..72fcf6c 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/adobe/hyde/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/adobe/hyde/Dockerfile/repaired.Dockerfile
@@ -1,16 +1,15 @@
-
 FROM ubuntu:latest
 RUN apt-get -y update && apt-get install -y
 
-RUN apt-get -y install curl gnupg2 software-properties-common ninja-build  apt-utils make
+RUN apt-get -y --no-install-recommends install curl gnupg2 software-properties-common ninja-build apt-utils make && rm -rf /var/lib/apt/lists/*;
 
-# install clang/llvm 8 
+# install clang/llvm 8
 RUN curl -fsSL https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add -
 RUN apt-add-repository "deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-8 main"
 RUN apt-get -y update && apt-get install -y
-RUN apt-get -y install libllvm8 llvm-8 llvm-8-dev
-RUN apt-get -y install clang-8 clang-tools-8 libclang-common-8-dev libclang-8-dev libclang1-8
-RUN apt-get -y install libc++-8-dev libc++abi-8-dev
+RUN apt-get -y --no-install-recommends install libllvm8 llvm-8 llvm-8-dev && rm -rf /var/lib/apt/lists/*;
+RUN apt-get -y --no-install-recommends install clang-8 clang-tools-8 libclang-common-8-dev libclang-8-dev libclang1-8 && rm -rf /var/lib/apt/lists/*;
+RUN apt-get -y --no-install-recommends install libc++-8-dev libc++abi-8-dev && rm -rf /var/lib/apt/lists/*;
 
 #set clang 8 to be the version of clang we use when clang/clang++ is invoked
 RUN update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-8 100
@@ -21,8 +20,8 @@ RUN mkdir /opt/cmake
 RUN sh /cmake-3.13.0-Linux-x86_64.sh --prefix=/opt/cmake --skip-license
 RUN ln -s /opt/cmake/bin/cmake /usr/local/bin/cmake
 
-#install hyde dependencies 
-RUN apt-get -y install libyaml-cpp-dev libboost-system-dev libboost-filesystem-dev
+#install hyde dependencies
+RUN apt-get -y --no-install-recommends install libyaml-cpp-dev libboost-system-dev libboost-filesystem-dev && rm -rf /var/lib/apt/lists/*;
 
 COPY . /usr/src/hyde
 
@@ -32,6 +31,6 @@ RUN mkdir -p build \
     && cd build \
     && rm -rf *  \
     && cmake .. -GNinja \
-    && ninja 
+    && ninja
 WORKDIR /usr/src/hyde
 CMD ["./generate_test_files.sh"]
\ No newline at end of file