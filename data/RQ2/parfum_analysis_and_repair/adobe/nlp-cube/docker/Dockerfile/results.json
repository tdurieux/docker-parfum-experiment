{
  "startTime": 1674250463890,
  "endTime": 1674250464491,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 66
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 22,
        "columnEnd": 116
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 22,
        "columnEnd": 79
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 22,
        "columnEnd": 116
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 22,
        "columnEnd": 79
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu\nENV DEBIAN_FRONTEND noninteractive\n\n# Installing build dependencies\nRUN apt-get update && apt-get install --no-install-recommends -y build-essential automake make cmake g++ wget git mercurial python3-pip curl && rm -rf /var/lib/apt/lists/*;\n\n# Preparing Python build environment\nRUN pip3 install --no-cache-dir cython future scipy nltk requests xmltodict nose2\n\n# Prepare environment UTF-8\nRUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y locales && rm -rf /var/lib/apt/lists/*;\nRUN sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen && \\\n    locale-gen\nENV LANG en_US.UTF-8\nENV LANGUAGE en_US:en\nENV LC_ALL en_US.UTF-8\n\n# Prepare cube\n\nRUN mkdir /work && \\\n    cd /work && \\\n    git clone https://github.com/adobe/NLP-Cube.git\n    cd NLP-Cube\n    pip install -r requirements.txt\n\n# Prepare notebook\nRUN pip3 install --no-cache-dir jupyter\nRUN pip3 install --no-cache-dir Flask\nRUN pip3 install --no-cache-dir bs4\n\n# Start webserver\n#CMD cd /work/NLP-Cube/cube/ && python3 webserver.py --port 8080 --lang=en --lang=fr --lang=de\n# Start notebook\nCMD cd /work/NLP-Cube/ && python3 -m \"notebook\" --allow-root --ip=0.0.0.0 --no-browser\n"
}