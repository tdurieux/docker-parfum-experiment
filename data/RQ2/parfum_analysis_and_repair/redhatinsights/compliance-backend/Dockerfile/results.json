{
  "startTime": 1674249522757,
  "endTime": 1674249523412,
  "originalSmells": [
    {
      "rule": "gemUpdateSystemRmRootGem",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "gemUpdateSystemRmRootGem",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "gemUpdateNoDocument",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "gemUpdateNoDocument",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 22
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG deps=\"findutils hostname jq libpq openssl procps-ng ruby shared-mime-info tzdata\"\nARG devDeps=\"gcc gcc-c++ gzip libffi-devel make openssl-devel postgresql-devel ruby-devel tar util-linux\"\nARG without=\"development:test\"\n\nFROM registry.access.redhat.com/ubi9/ubi-minimal AS build\n\nARG deps\nARG devDeps\nARG without\n\nWORKDIR /opt/app-root/src\n\nUSER 0\n\nCOPY ./Gemfile.lock ./Gemfile ./.gemrc.prod /opt/app-root/src/\nRUN mkdir -p /usr/local/etc \\\n  && { \\\n    echo 'install: --no-document'; \\\n    echo 'update: --no-document'; \\\n  } >> /usr/local/etc/gemrc;\n\nRUN microdnf install --nodocs -y $devDeps       && \\\n    gem update bundler                          && \\\n    mv ./.gemrc.prod /etc/gemrc                 && \\\n    bundle config set --local without $without  && \\\n    bundle config set --local deployment 'true' && \\\n    bundle config set --local path './.bundle'  && \\\n    bundle config set --local retry '2'         && \\\n    bundle install && \\\n    bundle clean -V && rm -rf /root/.gem;\n\n#############################################################\n\nFROM registry.access.redhat.com/ubi9/ubi-minimal\n\nARG deps\nARG devDeps\n\nWORKDIR /opt/app-root/src\n\nUSER 0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRUN mkdir -p /usr/local/etc \\\n  && { \\\n    echo 'install: --no-document'; \\\n    echo 'update: --no-document'; \\\n  } >> /usr/local/etc/gemrc;\n\nRUN rpm -e --nodeps tzdata             && \\\n    microdnf install --nodocs -y $deps && \\\n    gem update bundler                 && \\\n    microdnf clean all -y              && \\\n    chown 1001:root ./ && \\\n    install -v -d -m 1777 -o 1001 ./tmp ./log && rm -rf /root/.gem;\n\n\nUSER 1001\n\nCOPY --chown=1001:0 . /opt/app-root/src\nCOPY --chown=1001:0 --from=build /opt/app-root/src/.bundle /opt/app-root/src/.bundle\n\nENV RAILS_ENV=production RAILS_LOG_TO_STDOUT=true HOME=/opt/app-root/src DEV_DEPS=$devDeps\n\nCMD [\"/opt/app-root/src/entrypoint.sh\"]\n"
}