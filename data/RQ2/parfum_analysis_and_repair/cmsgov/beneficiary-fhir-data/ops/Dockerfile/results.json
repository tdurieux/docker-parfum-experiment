{
  "startTime": 1674255865186,
  "endTime": 1674255866144,
  "originalSmells": [
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 82
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# declaring flyway as a COPY source in al2 image\nFROM flyway/flyway as flyway\nRUN echo flyway.placeholders.type.int4=int4 > /flyway/conf/flyway.conf \\\n    && echo flyway.placeholders.type.text=text >> /flyway/conf/flyway.conf \\\n    && echo flyway.placeholders.logic.tablespaces-escape=-- >> /flyway/conf/flyway.conf \\\n    && echo flyway.placeholders.logic.drop-tablespaces-escape= >> /flyway/conf/flyway.conf \\\n    && echo flyway.placeholders.logic.alter-column-type=type >> /flyway/conf/flyway.conf \\\n    && echo flyway.placeholders.logic.hsql-only-alter=-- alter >> /flyway/conf/flyway.conf \\\n    && echo flyway.placeholders.logic.psql-only-alter=alter >> /flyway/conf/flyway.conf \\\n    && echo flyway.placeholders.logic.alter-rename-column=rename column >> /flyway/conf/flyway.conf \\\n    && echo flyway.placeholders.logic.alter-rename-constraint=rename constraint >> /flyway/conf/flyway.conf \\\n    && echo flyway.placeholders.logic.rename-to=to >> /flyway/conf/flyway.conf \\\n    && echo flyway.placeholders.logic.index-create-concurrently=concurrently >> /flyway/conf/flyway.conf \\\n    && echo flyway.placeholders.logic.sequence-start=start >> /flyway/conf/flyway.conf \\\n    && echo flyway.placeholders.logic.sequence-increment=increment >> /flyway/conf/flyway.conf \\\n    && echo flyway.placeholders.logic.perms= >> /flyway/conf/flyway.conf \\\n    && echo flyway.placeholders.logic.psql-only= >> /flyway/conf/flyway.conf \\\n    && echo flyway.placeholders.logic.hsql-only=-- >> /flyway/conf/flyway.conf \\\n    && echo flyway.table=schema_version >> /flyway/conf/flyway.conf \\\n    && echo flyway.schemas=public >> /flyway/conf/flyway.conf \\\n    && echo flyway.url=jdbc:postgresql://db:5432/fhirdb >> /flyway/conf/flyway.conf \\\n    && echo flyway.password=bfd >> /flyway/conf/flyway.conf \\\n    && echo flyway.user=bfd >> /flyway/conf/flyway.conf\n\nFROM amazonlinux as al2\nLABEL org.opencontainers.image.source=https://github.com/CMSgov/beneficiary-fhir-data\n\n# Getting systemd to run correctly inside Docker is very tricky. Need to\n# ensure that it doesn't start things it shouldn't, without stripping out so\n# much as to make it useless.\n#\n# References:\n#\n# * <https://hub.docker.com/_/centos/>: Good start, but badly broken.\n# * <https://github.com/solita/docker-systemd>: For Ubuntu, but works!\n# * <https://github.com/moby/moby/issues/28614>: Also some useful info.\nRUN amazon-linux-extras enable java-openjdk11 && \\\n    yum clean metadata && \\\n    yum install -y sudo unzip selinux-policy systemd java-11-openjdk-devel python3 && \\\n    find /etc/systemd/system \\\n         /lib/systemd/system \\\n         -path '*.wants/*' \\\n         -not -name '*journald*' \\\n         -not -name '*systemd-tmpfiles*' \\\n         -not -name '*systemd-user-sessions*' \\\n         -exec rm \\{} \\; && rm -rf /var/cache/yum\nRUN systemctl set-default multi-user.target\nSTOPSIGNAL SIGRTMIN+3\n\nVOLUME [ \"/sys/fs/cgroup\" ]\nCMD [\"/usr/sbin/init\"]\n\nFROM al2 as dist\n# inject prebuilt flyway and configuration from flyway/flyway\nCOPY --from=flyway /flyway /flyway\nENV PATH=\"/flyway:${PATH}\"\n"
}