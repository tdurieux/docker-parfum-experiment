{
  "startTime": 1674217454810,
  "endTime": 1674217456321,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 103
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.8 as kernel-build\nRUN apk add --no-cache \\\n    \t    gcc make libc-dev dev86 xz-dev perl bash python-dev \\\n\t    gettext iasl util-linux-dev ncurses-dev glib-dev \\\n\t    pixman-dev libaio-dev yajl-dev argp-standalone \\\n\t    linux-headers git patch texinfo curl tar\n\n# FIXME: this is really ugly -- we need to figure out xen tools dependencies\nRUN [ `uname -m` = \"aarch64\" ] && apk add --no-cache dtc-dev || :\n\n# Alpine linux defines all 64bit integer types as long. Patch\n# /usr/include/bits/alltypes.h to fix compilation with -m32\nWORKDIR /\nCOPY alpine.patch /\nRUN patch -p1 < alpine.patch\n\nENV XEN_VERSION 4.11.0\nENV XEN_SOURCE=https://downloads.xenproject.org/release/xen/${XEN_VERSION}/xen-${XEN_VERSION}.tar.gz\n\n# Download and verify xen\n#TODO: verify Xen\nRUN \\\n    [ -f xen-${XEN_VERSION}.tar.gz ] || curl -fsSLO ${XEN_SOURCE} && \\\n    gzip -d xen-${XEN_VERSION}.tar.gz && \\\n    cat xen-${XEN_VERSION}.tar | tar --absolute-names -x && mv /xen-${XEN_VERSION} /xen\n\n# Apply local patches\nCOPY patches-${XEN_VERSION} /patches\nWORKDIR /xen\nRUN set -e && for patch in /patches/*.patch; do \\\n        echo \"Applying $patch\"; \\\n        patch -p1 < \"$patch\"; \\\n    done\n\nRUN mkdir -p /out\n\nWORKDIR /xen\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr --disable-xen --disable-qemu-traditional --disable-docs --disable-stubdom\nRUN make && make dist\nRUN dist/install.sh /out\n\nFROM scratch\nENTRYPOINT []\nCMD []\nCOPY --from=kernel-build /out/ /\n"
}