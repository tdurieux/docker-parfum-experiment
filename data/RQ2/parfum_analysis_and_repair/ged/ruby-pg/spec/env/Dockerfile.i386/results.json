{
  "startTime": 1674220998812,
  "endTime": 1674220999994,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 28,
        "columnStart": 2,
        "columnEnd": 6
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 2,
        "columnEnd": 34
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 28,
        "columnStart": 2,
        "columnEnd": 6
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 2,
        "columnEnd": 34
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM i386/ubuntu:bionic\n\nARG PGPATH\n\nENV PATH \"${PGPATH}:${PATH}\"\nENV TEST_USER ruby-pg\n# To prevent installed tzdata deb package to show interactive dialog.\nENV DEBIAN_FRONTEND noninteractive\n\nWORKDIR /build\nCOPY . .\n\nRUN uname -a\nRUN apt-get update -qq && \\\n  # \"rake compile\" gets error with below options.\n  # apt-get install -yq --no-install-suggests --no-install-recommends \\\n  apt-get install --no-install-recommends -yq \\\n  -o Dpkg::Options::='--force-confnew' \\\n  libgmp-dev \\\n  libpq-dev \\\n  libssl-dev \\\n  postgresql \\\n  git \\\n  ruby \\\n  ruby-dev \\\n  pkg-config \\\n  software-properties-common \\\n  sudo \\\n  wget && rm -rf /var/lib/apt/lists/*;\nRUN add-apt-repository -y universe && \\\n  apt-get update -qq && \\\n  apt-get install --no-install-recommends -yq ruby-bundler && rm -rf /var/lib/apt/lists/*;\nRUN ruby --version\nRUN pg_ctl --version\n# Create test user and the environment\nRUN useradd \"${TEST_USER}\"\nRUN chown -R \"${TEST_USER}:${TEST_USER}\" /build\n# Enable sudo without password for convenience.\nRUN echo \"${TEST_USER} ALL = NOPASSWD: ALL\" >> /etc/sudoers\nUSER \"${TEST_USER}\"\n\nCMD bundle install --path vendor/bundle && \\\n    (bundle exec rake compile || (head -20 mkmf.log; false)) && \\\n    (bundle exec rake test || (head -20 ./tmp_test_specs/setup.log; false))\n"
}