{
  "startTime": 1674251057141,
  "endTime": 1674251058418,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 7,
        "columnEnd": 46
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 7,
        "columnEnd": 107
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 7,
        "columnEnd": 111
      }
    },
    {
      "rule": "rmRecursiveAfterMktempD",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 27,
        "columnEnd": 36
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 7,
        "columnEnd": 53
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 7,
        "columnEnd": 102
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 23,
        "lineEnd": 27,
        "columnStart": 7,
        "columnEnd": 50
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:jessie-backports\n\n# Add DSE group and user\nRUN groupadd -r dse --gid=999 \\\n    && useradd -m -d /home/dse -r -g dse --uid=999 dse\n\n# gosu for easy step down from root\nENV GOSU_VERSION 1.7\nRUN set -x \\\n    && apt-get update && apt-get install -y --no-install-recommends ca-certificates wget && rm -rf /var/lib/apt/lists/* \\\n    && wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)\" \\\n    && wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc\" \\\n    && export GNUPGHOME=\"$(mktemp -d)\" \\\n    && gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 \\\n    && gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \\\n    && rm -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc \\\n    && chmod +x /usr/local/bin/gosu \\\n    && gosu nobody true \\\n    && apt-get purge -y --auto-remove ca-certificates wget && rm -rf -d\n\n# Install JRE and Python prereqs\nRUN set -x \\\n    && apt-get update \\\n    && apt-get -t jessie-backports --no-install-recommends install -y openjdk-8-jre-headless \\\n                                              ca-certificates-java \\\n                                              python \\\n                                              python-support \\\n                                              curl \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Get the version of DSE we're installing from the build argument\nARG DSE_VERSION\nENV DSE_VERSION ${DSE_VERSION}\n\n# The URL where the DSE download credentials .netrc file is located\nARG DSE_CREDENTIALS_URL\n\n# Download DSE by grabbing the .netrc credentials from the DSE_CREDENTIALS_URL, then unpack to\n# /opt, and create a link (regardless of DSE version) under /opt/dse, making sure to clean up\n# the credentials and other downloaded files\nRUN set -x \\\n    && export DSE_TEMP=\"$(mktemp -d)\" \\\n    && cd \"$DSE_TEMP\" \\\n    && curl -f -SLO \"$DSE_CREDENTIALS_URL/.netrc\" \\\n    && curl -f --netrc-file .netrc -SLO \"http://downloads.datastax.com/enterprise/dse-$DSE_VERSION-bin.tar.gz\" \\\n    && curl -f --netrc-file .netrc -SLO \"http://downloads.datastax.com/enterprise/dse-$DSE_VERSION-bin.tar.gz.md5\" \\\n    && md5sum -c *.md5 \\\n    && tar -xzf \"dse-$DSE_VERSION-bin.tar.gz\" -C /opt \\\n    && cd / \\\n    && rm -rf \"$DSE_TEMP\" \\\n    && ln -s /opt/dse* /opt/dse \\\n    && chown -R dse:dse /opt/dse* && rm \"dse-$DSE_VERSION-bin.tar.gz\"\n\n# Append DSE binaries directory to the PATH so we can execute them from any working directory\nENV PATH /opt/dse/bin:$PATH\n\n# Create directories for Cassandra and Spark data\nRUN mkdir -p /var/lib/cassandra /var/lib/spark /var/lib/spark/worker /var/lib/spark/rdd /var/lib/dsefs \\\n    && chown -R dse:dse /var/lib/cassandra /var/lib/spark /var/lib/dsefs \\\n    && chmod 777 /var/lib/cassandra /var/lib/spark /var/lib/dsefs\n\n# Create log directories\nRUN mkdir -p /var/log/cassandra /var/log/spark \\\n    && chown -R dse:dse /var/log/cassandra /var/log/spark \\\n    && chmod 777 /var/log/cassandra /var/log/spark\n\n# Volumes for Cassandra and Spark data\nVOLUME /var/lib/cassandra /var/lib/spark /var/lib/dsefs /var/log/cassandra /var/log/spark\n\n# Volume for configuration files in resources\nVOLUME /opt/dse/resources\n\n# Entrypoint script for launching\nCOPY entrypoint.sh /entrypoint.sh\nRUN chmod +x /entrypoint.sh\nENTRYPOINT [ \"/entrypoint.sh\" ]\n\n# Cassandra ports (intra-node, TLS intra-node, JMX, CQL, Thrift, DSEFS intra-node, intra-node messaging service)\nEXPOSE 7000 7001 7199 8609 9042 9160\n\n# DSE Search (Solr)\nEXPOSE 8983 8984\n\n# DSE Analytics (Spark)\nEXPOSE 4040 7077 7080 7081 8090 9999 18080\n\n# BYOH (this is deprecated and will be removed at some point)\nEXPOSE 8012 9290 10000 50030 50060\n\n# DSE Graph\nEXPOSE 8182\n\n# DSEFS\nEXPOSE 5598 5599\n\n# Ports purposefully not exposed by default:\n#   9091 for DS Studio because it's not part of this image\n#   8888 for OpsCenter because it's not part of this image\n\n# Run DSE in foreground by default\nCMD [ \"dse\", \"cassandra\", \"-f\" ]\n"
}