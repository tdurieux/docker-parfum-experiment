{
  "startTime": 1674253382917,
  "endTime": 1674253383997,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 16
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# This dockerfile sets up an image to run node.js, which will\n# act as a server on port 4400 to prepare to execute code\n# The actual execution of the code is done in a docker-in-docker within this\n# For that, see the Dockerfile in the javarunner directory\nFROM --platform=linux/amd64 alpine\n\nRUN apk add --no-cache --update nodejs npm\nRUN apk add --no-cache docker\nRUN apk add --no-cache sudo\n\nRUN addgroup nodeuser\nRUN adduser  -D -H -S nodeuser -G nodeuser \\\n        && echo \"nodeuser ALL=(ALL) NOPASSWD: ALL\" > /etc/sudoers.d/nodeuser \\\n        && chmod 0440 /etc/sudoers.d/nodeuser\n\nWORKDIR /usr/src/app\nCOPY package*.json ./\n\nRUN npm install && npm cache clean --force;\n\n\n# Bundle app source\nCOPY . .\n\nEXPOSE 4400\n\nRUN chown -R nodeuser:nodeuser /usr/src/app\nRUN chown -R nodeuser:nodeuser /home\nUSER nodeuser\n\nCMD [ \"npm\", \"start\" ]"
}