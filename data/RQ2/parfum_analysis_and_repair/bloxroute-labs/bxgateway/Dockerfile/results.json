{
  "startTime": 1674250299090,
  "endTime": 1674250300059,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 24,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG PYTHON_VERSION=3.8.3-alpine3.11\nARG BASE=033969152235.dkr.ecr.us-east-1.amazonaws.com/bxbase:latest\n\nFROM ${BASE} as builder\n# Assumes this repo and bxcommon repo are at equal roots\n\nRUN apk update \\\n && apk add --no-cache linux-headers gcc libtool openssl-dev libffi \\\n && apk add --no-cache --virtual .build_deps build-base libffi-dev \\\n && pip install --no-cache-dir --upgrade pip\n\nRUN python -m venv /opt/venv\nENV PATH=\"/opt/venv/bin:$PATH\"\n\nCOPY bxgateway/requirements.txt ./bxgateway_requirements.txt\nCOPY bxcommon/requirements.txt ./bxcommon_requirements.txt\n\n# most recent version of pip doesn't seem to detect manylinux wheel correctly\n# orjson cannot be installed normally due to alpine linux using musl-dev\nRUN echo 'manylinux2014_compatible = True' > /usr/local/lib/python3.8/_manylinux.py\nRUN pip install --no-cache-dir -U pip==20.2.2\nRUN pip install --no-cache-dir orjson==3.4.6\n\nRUN pip install --no-cache-dir -U pip wheel \\\n && pip install --no-cache-dir -r ./bxgateway_requirements.txt \\\n                -r ./bxcommon_requirements.txt\n\nFROM python:${PYTHON_VERSION}\n\n# add our user and group first to make sure their IDs get assigned consistently, regardless of whatever dependencies get added\nRUN addgroup -g 502 -S bxgateway \\\n && adduser -u 502 -S -G bxgateway bxgateway \\\n && mkdir -p /app/bxgateway/src \\\n && mkdir -p /app/bxcommon/src \\\n && mkdir -p /app/bxcommon-internal/src \\\n && mkdir -p /app/bxextensions \\\n && chown -R bxgateway:bxgateway /app/bxgateway /app/bxcommon /app/bxextensions\n\nRUN apk update \\\n && apk add --no-cache \\\n        'su-exec>=0.2' \\\n        tini \\\n        bash \\\n        gcc \\\n        openssl-dev \\\n        gcompat \\\n && pip install --no-cache-dir --upgrade pip\n\nCOPY --from=builder /opt/venv /opt/venv\n\nCOPY bxgateway/docker-entrypoint.sh /usr/local/bin/\n\nCOPY --chown=bxgateway:bxgateway bxgateway/src /app/bxgateway/src\nCOPY --chown=bxgateway:bxgateway bxcommon/src /app/bxcommon/src\nCOPY --chown=bxgateway:bxgateway bxcommon-internal/src /app/bxcommon-internal/src\nCOPY --chown=bxgateway:bxgateway bxextensions/release/alpine-3.11 /app/bxextensions\n\nRUN chmod u+s /bin/ping\n\nCOPY bxgateway/docker-scripts/bloxroute-cli /bin/bloxroute-cli\nRUN chmod u+x /bin/bloxroute-cli\n\nWORKDIR /app/bxgateway\nEXPOSE 28332 9001 1801\nENV PYTHONPATH=/app/bxcommon/src/:/app/bxcommon-internal/src/:/app/bxgateway/src/:/app/bxextensions/ \\\n    LD_LIBRARY_PATH=\"$LD_LIBRARY_PATH:/app/bxextensions\" \\\n    PATH=\"/opt/venv/bin:$PATH\"\nENTRYPOINT [\"/sbin/tini\", \"--\", \"/bin/sh\", \"/usr/local/bin/docker-entrypoint.sh\"]\n"
}