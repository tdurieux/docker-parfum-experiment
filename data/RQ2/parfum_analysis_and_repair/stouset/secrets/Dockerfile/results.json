{
  "startTime": 1674255790579,
  "endTime": 1674255791337,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 21
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM rust:latest\n\n# we depend upon:\n# * >= 1.32 for uniform module paths\n# * >= 1.36 for std::mem::MaybeUninit\n# * >= 1.38 for std::ptr::cast\n# * >= 1.40 for cfg(doctest) (in a dependency)\n# * >= 1.51 for const generics\nARG TOOLCHAIN\nENV TOOLCHAIN=${TOOLCHAIN:-1.51}\n\nRUN --mount=type=cache,target=/var/cache/apt \\\n    apt-get update && \\\n    apt-get dist-upgrade -y && \\\n    apt-get install --no-install-recommends -y \\\n        libsodium-dev && rm -rf /var/lib/apt/lists/*;\n\nRUN --mount=type=cache,target=/tmp/cache/cargo                  \\\n    --mount=type=cache,target=/tmp/cache/target,sharing=private \\\n    rustup toolchain install $TOOLCHAIN && \\\n    rustup default           $TOOLCHAIN && \\\n    rustup component add clippy\n\nRUN     mkdir /srv/secrets\nWORKDIR /srv/secrets\n\nENV CARGO_HOME=/tmp/cache/cargo\nENV CARGO_TARGET_DIR=/tmp/cache/target\n\n# pre-install dependencies so they can be cached\nRUN  mkdir ./src && touch ./src/lib.rs\nCOPY Cargo.toml .\nRUN --mount=type=cache,target=/tmp/cache/cargo                  \\\n    --mount=type=cache,target=/tmp/cache/target,sharing=private \\\n    cargo build\n\nARG PROFILE=debug\nARG RUSTFLAGS=\"-A warnings\"\nARG RUSTDOCFLAGS=\"\"\n\n# replace the dummy application with ours\nCOPY . .\n\nRUN --mount=type=cache,target=/tmp/cache/cargo                  \\\n    --mount=type=cache,target=/tmp/cache/target,sharing=private \\\n    cargo clippy && \\\n    cargo test && \\\n    cargo doc\n"
}