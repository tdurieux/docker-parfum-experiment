{
  "startTime": 1674251545708,
  "endTime": 1674251546353,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 22
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Results in NodeJS 14.17.0\nFROM alpine:3.14 as base\n\nRUN apk add --no-cache --virtual .base-deps \\\n    nodejs \\\n    npm \\\n    tini\n\nENV NODE_ENV=production\n\nRUN npm install -g npm@latest && npm cache clean --force;\nRUN npm install -g pm2 && npm cache clean --force;\n\nRUN adduser -D octofarm --home /app && \\\n    mkdir -p /scripts && \\\n    chown -R octofarm:octofarm /scripts/\n\nFROM base as compiler\n\nRUN apk add --no-cache --virtual .build-deps \\\n    alpine-sdk \\\n    make \\\n    gcc \\\n    g++ \\\n    python3\n\nWORKDIR /tmp/app\n\nCOPY server/package.json ./server/package.json\nCOPY server/package-lock.json ./server/package-lock.json\n\nWORKDIR /tmp/app/server\n\nRUN npm ci --omit=dev\n\nRUN apk del .build-deps\n\nWORKDIR /tmp/app\n\nFROM base as runtime\n\nCOPY --chown=octofarm:octofarm --from=compiler /tmp/app/server/node_modules /app/server/node_modules\nCOPY --chown=octofarm:octofarm . /app\n\nRUN rm -rf /tmp/app\n\nUSER octofarm\nWORKDIR /app\n\nRUN chmod +x ./docker/entrypoint.sh\nENTRYPOINT [ \"/sbin/tini\", \"--\" ]\nCMD [\"./docker/entrypoint.sh\"]"
}