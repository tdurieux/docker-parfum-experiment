{
  "startTime": 1674250291280,
  "endTime": 1674250292113,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 16,
        "columnStart": 22,
        "columnEnd": 24
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3\n\nWORKDIR /\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n        wget \\\n        vim \\\n        git \\\n        pkg-config \\\n        build-essential \\\n        cmake \\\n        liblapack-dev \\\n        libblas-dev \\\n        libboost-math-dev \\\n        libboost-program-options-dev \\\n        libboost-test-dev \\\n        libboost-serialization-dev \\\n        libarmadillo-dev \\\n        && rm -rf /var/lib/apt/lists/*\n\nRUN pip install --no-cache-dir \\\n        numpy scipy scikit-learn pandas \\\n        Cython setuptools \\\n        pypandoc \\\n        pytest pytest-cov codecov nose\n\n# Pot requires Cython to install correctly\nRUN pip install --no-cache-dir pot\n\n# OLD CONFIGURATION ##################################\n# Install mlpack from source since need newer version than on apt-get repositories\n# Installs to /usr/local/include/mlpack, /usr/local/lib/, /usr/local/bin/\n# 1ee8268 is most recent commit hash as of 3/19/2018 since templates are only\n#  in master rather than released version\n#RUN git clone https://github.com/mlpack/mlpack.git \\\n#        && cd mlpack \\\n#        && git checkout 1ee8268 \\\n#        && mkdir build \\\n#        && cd build \\\n#        && cmake -Wno-dev ../ \\\n#        && make \\\n#        && make install \\\n#        && make clean \\\n#        && cd ../../ \\\n#        && rm -rf mlpack\n\n# Save linker library path\n#ENV LD_LIBRARY_PATH /usr/local/lib/:\\$LD_LIBRARY_PATH\n\n# Install anaconda\n#ENV ANACONDA_DIR /anaconda\n#RUN wget https://repo.continuum.io/archive/Anaconda3-5.1.0-Linux-x86_64.sh \\\n#        && /bin/bash Anaconda3-5.1.0-Linux-x86_64.sh -b -p $ANACONDA_DIR \\\n#        && rm Anaconda3-5.1.0-Linux-x86_64.sh\n#ENV PATH $ANACONDA_DIR/bin:$PATH\n\n# Install anaconda packages\n#RUN conda update -y -n base conda \\\n#        && conda install -y scikit-learn numpy scipy seaborn matplotlib plotly cython \\\n#        && conda install -y -c conda-forge pot \\\n#        && yes | pip install anytree\n\n# Install python 2 kernel environment and required packages for theano/MAF\n#SHELL [\"/bin/bash\", \"-c\"]\n#RUN conda create -y -n python2 python=2 ipykernel \\\n#        && source activate python2 \\\n#        && python -m ipykernel install --user \\\n#        && conda install -y pygpu theano \\\n#        && conda install -y plotly cython h5py \\\n#        && source deactivate # Go back to original python 3 environment\n\n# Don't know if this is needed but keeping just in case\n#ENV MKL_THREADING_LAYER GNU\n# OLD CONFIGURATION ##################################\n\n\n# From http://singularity.lbl.gov/docs-docker#best-practices\n# Must reload linker configuration cache otherwise cannot find shared library when\n#  importing into singularity via singularity pull docker://...\nRUN ldconfig\n"
}