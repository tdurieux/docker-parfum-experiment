{
  "startTime": 1674220637984,
  "endTime": 1674220638430,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 27
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 20,
        "columnEnd": 36
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 31,
        "columnEnd": 47
      }
    }
  ],
  "repairedDockerfile": "#\n# base container, creates environment\n#\nFROM node:16-alpine AS base\nWORKDIR /var/www/app\nRUN apk --no-cache add --virtual .builds-deps build-base python3 curl\nRUN ln -sf python3 /usr/bin/python\n\n#\n# appbase container, contains app and dependencies\n#\nFROM base AS appbase\nCOPY package.json yarn.lock ./\nENV NODE_ENV=production\nRUN yarn install && yarn cache clean;\nCOPY . .\n\n#\n# Test container\n#\nFROM appbase as test\nENV NODE_ENV=test\nCMD [ \"node\", \"node_modules/jest/bin/jest.js\", \"--runInBand\", \"--colors\", \"--verbose\", \"--forceExit\", \"--config=./jest.config.json\" ]\n\n#\n# Run migrations\n#\nFROM appbase as migrations\nCMD [ \"yarn\", \"migrate\" ]\n\n#\n# App container for running in production\n#\nFROM appbase as prod\nEXPOSE 80\nCMD [ \"yarn\", \"start\" ]\n\n#\n# Dev container for running dev with mounted app volume\n#\nFROM base as dev\nRUN yarn global add nodemon && yarn cache clean;\nCMD update-ca-certificates; yarn; yarn migrate; yarn dev\n"
}