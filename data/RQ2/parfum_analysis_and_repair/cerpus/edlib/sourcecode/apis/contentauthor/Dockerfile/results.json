{
  "startTime": 1674248950792,
  "endTime": 1674248951284,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 28
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM php:8.1-fpm-alpine AS php_base\nENV IPE_GD_WITHOUTAVIF=1\n\nWORKDIR /app\nCOPY --from=composer:2 /usr/bin/composer /usr/bin/\nCOPY --from=mlocati/php-extension-installer /usr/bin/install-php-extensions /usr/bin/\nCOPY docker/php.ini $PHP_INI_DIR/conf.d/99-custom.ini\nRUN echo \"access.log = /dev/null\" >> /usr/local/etc/php-fpm.d/www.conf\nRUN apk add --no-cache bash sudo rclone git unzip\nRUN install-php-extensions \\\n        bcmath \\\n        gettext \\\n        igbinary \\\n        intl \\\n        memcached \\\n        mysqli \\\n        oauth \\\n        opcache \\\n        pcntl \\\n        pdo_mysql \\\n        redis \\\n        sockets \\\n        xmlrpc \\\n        zip\nCOPY composer.json composer.lock ./\nRUN composer install \\\n    --no-autoloader \\\n    --no-dev \\\n    --no-scripts\nCOPY . .\nRUN mkdir -v -p \\\n            storage/app/public \\\n            storage/app/storage \\\n            storage/framework/cache/data \\\n            storage/framework/sessions \\\n            storage/framework/testing \\\n            storage/framework/views \\\n            storage/logs\nRUN composer install \\\n        --no-dev\nRUN cp -R /app/vendor/h5p/h5p-editor public/h5p-editor-php-library\nRUN cp -R /app/vendor/h5p/h5p-core public/h5p-php-library\nRUN chown -R www-data:www-data .\n\n\nFROM php_base as test\nCOPY docker/run-phpunit.sh /run-phpunit.sh\nRUN composer install\nCMD /run-phpunit.sh\n\nFROM node:16-alpine AS jsbuild\nWORKDIR /app\nRUN npm i -g npm node-gyp && npm cache clean --force;\nCOPY package.json package-lock.json ./\nRUN npm i --legacy-peer-deps && npm cache clean --force;\nCOPY webpack.mix.js ./\nCOPY --from=php_base /app/vendor/ckeditor/ckeditor ./vendor/ckeditor/ckeditor\nCOPY --from=php_base /app/vendor/h5p ./vendor/h5p\nCOPY --from=php_base /app/resources ./resources\nCOPY --from=php_base /app/public ./public\nRUN npm run production\nRUN rm -rf node_modules\n\n\nFROM php_base AS buildresult\nCOPY --from=jsbuild /app/public /app/public\nRUN chown -R www-data:www-data /app/public\n\n\nFROM buildresult AS deploy\nCMD [ \"php\", \"/app/artisan\", \"migrate\", \"--force\" ]\n\n\nFROM buildresult AS phpfpm\nCMD [ \"php-fpm\", \"-R\", \"-F\", \"-O\" ]\n\n\nFROM buildresult AS phpfpm-dev\nRUN install-php-extensions \\\n        xdebug\nCOPY docker/php/docker-entrypoint-dev.sh /docker-entrypoint-dev.sh\nENTRYPOINT [\"/docker-entrypoint-dev.sh\"]\nCMD [ \"php-fpm\", \"-R\", \"-F\", \"-O\" ]\n\n\nFROM nginx:1.19-alpine AS app\nENV PHP_FPM_HOST \"localhost:9000\"\nCOPY --from=buildresult /app/public /app/public\nRUN apk add --no-cache bash\nCOPY docker/nginx.conf /etc/nginx/nginx.conf\nCOPY docker/contentAuthor.conf.template /etc/nginx/templates/contentAuthor.conf.template\nCMD [\"nginx\"]\n"
}