{
  "startTime": 1674216021604,
  "endTime": 1674216022762,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 114
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 112
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 33,
        "columnEnd": 46
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 33,
        "columnEnd": 46
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 19,
        "columnEnd": 60
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 51
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 67
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 75
      }
    }
  ],
  "repairedDockerfile": "#FROM ubuntu:18.04\nFROM nvidia/opencl\n\nRUN apt-get update\nRUN apt-get install --no-install-recommends -y wget build-essential && rm -rf /var/lib/apt/lists/*;\n# build fails unless these are separate apt-get installs - don't consolidate\nRUN apt-get install --no-install-recommends -y git csh python2.7 python-pip && rm -rf /var/lib/apt/lists/*;\nRUN pip install --no-cache-dir requests\n\n#RUN mkdir /client\n\n##### Install MGLtools, which provides some utility scripts we need for both CPU and GPU versions\n##### Need mglTools for both CPU and GPU versions - could make this a base image\n\nRUN wget https://mgltools.scripps.edu/downloads/downloads/tars/releases/REL1.5.6/mgltools_x86_64Linux2_1.5.6.tar.gz\nRUN tar -xvzf mgltools_x86_64Linux2_1.5.6.tar.gz && rm mgltools_x86_64Linux2_1.5.6.tar.gz\n#RUN cd /mgltools_x86_64Linux2_1.5.6 ; tar -xvzf MGLToolsPckgs.tar.gz\nRUN cd /mgltools_x86_64Linux2_1.5.6 ; ./install.sh\n#RUN mv mgltools_x86_64Linux2_1.5.6 /mgtools\n\n\n\n\n\nRUN wget https://autodock.scripps.edu/downloads/autodock-registration/tars/dist426/autodocksuite-4.2.6-src.tar.gz\nRUN mkdir /autodock\nRUN cd /autodock ; tar -xvzf /autodocksuite-4.2.6-src.tar.gz && rm /autodocksuite-4.2.6-src.tar.gz\nRUN ls /autodock\n\nRUN cd /autodock/src/autogrid/ ; ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"; make ; make install\nRUN cd /autodock/src/autodock/ ; ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"; make ; make install\n\n\n\n#RUN apt-get install -y git opencl-c-headers ocl-icd-libopencl1 ocl-icd-opencl-dev\n#RUN apt-get install -y nvidia-opencl-dev nvidia-opencl-icd-384\n\nRUN git clone https://github.com/ccsb-scripps/AutoDock-GPU ; cd AutoDock-GPU ; make DEVICE=GPU NUMWI=32\nRUN cd /AutoDock-GPU ; ls\nRUN ls\nRUN pwd\nRUN cd /model/ ; ls\n\n\n\nCOPY requirements.txt /\nRUN pip install --no-cache-dir -r requirements.txt\n\n\n\nCOPY *.py /\nCOPY docking /docking/\nCOPY *.sh /\nCOPY receptors /receptors\nCOPY .git /.git\n\n\n\n\n#RUN apt-get install -y git opencl-c-headers ocl-icd-libopencl1 ocl-icd-opencl-dev\n#COPY sars2-docking /model\n#CMD cd /model/ ; /AutoDock-GPU/bin/autodock_gpu_32wi -ffile chainE.maps.fld -lfile DCABRM.xaa_ligand_200.pdbqt -nrun 100\n\n\nENTRYPOINT [\"/quarantine.sh\"]\n\n"
}