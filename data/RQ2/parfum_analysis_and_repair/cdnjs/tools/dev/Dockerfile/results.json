{
  "startTime": 1674252067840,
  "endTime": 1674252068376,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 68
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 22,
        "columnEnd": 33
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 23,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 3,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 25
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:20.04\n\nRUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y ca-certificates git \\\n    zopfli jpegoptim curl && rm -rf /var/lib/apt/lists/*;\nRUN update-ca-certificates\n\nARG NODE_VERSION=14.16.0\nARG NODE_PACKAGE=node-v$NODE_VERSION-linux-x64\nARG NODE_HOME=/opt/$NODE_PACKAGE\n\nENV NODE_PATH $NODE_HOME/lib/node_modules\nENV PATH $NODE_HOME/bin:$PATH\n\nRUN curl -f https://nodejs.org/dist/v$NODE_VERSION/$NODE_PACKAGE.tar.gz | tar -xzC /opt/\n\nENV BOT_BASE_PATH=/cdnjs\n\nRUN mkdir -p /cdnjs \\\n             /cdnjs/cdnjs \\\n             /cdnjs/glob \\\n             /cdnjs/packages\n\nRUN cd /cdnjs/cdnjs && \\\n    git init\n\nCOPY dev/packages /cdnjs/packages/packages\n\nRUN git clone https://github.com/cdnjs/glob.git /cdnjs/glob\nRUN cd /cdnjs/glob && npm install && npm cache clean --force;\n\nCOPY . /cdnjs/tools\nCOPY bin/autoupdate /usr/bin/autoupdate\nRUN cd /cdnjs/tools && npm install && npm cache clean --force;\n\nENV WORKERS_KV_ACCOUNT_ID=empty \\\n    WORKERS_KV_AGGREGATED_METADATA_NAMESPACE_ID=empty \\\n    WORKERS_KV_API_TOKEN=empty \\\n    WORKERS_KV_FILES_NAMESPACE_ID=empty \\\n    WORKERS_KV_PACKAGES_NAMESPACE_ID=empty \\\n    WORKERS_KV_SRIS_NAMESPACE_ID=empty \\\n    WORKERS_KV_VERSIONS_NAMESPACE_ID=empty \\\n    ALGOLIA_WRITE_API_KEY=empty \\\n    DEBUG=1\n\nRUN git config --global user.email \"dev@cdnjs.com\"\nRUN git config --global user.name \"dev\"\n\nWORKDIR /cdnjs/cdnjs\n"
}