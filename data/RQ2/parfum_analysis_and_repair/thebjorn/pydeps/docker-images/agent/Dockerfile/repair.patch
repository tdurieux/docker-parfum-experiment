diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/thebjorn/pydeps/docker-images/agent/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/thebjorn/pydeps/docker-images/agent/Dockerfile/repaired.Dockerfile
index 9c7f9de..2802e21 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/thebjorn/pydeps/docker-images/agent/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/thebjorn/pydeps/docker-images/agent/Dockerfile/repaired.Dockerfile
@@ -7,12 +7,11 @@ ARG IS_CI
 
 RUN set -x; \
 	apt update; \
-	apt install -y git \
+	apt install --no-install-recommends -y git \
 		curl \
-		wget; \
+		wget; rm -rf /var/lib/apt/lists/*; \
 	if [ "${PYTHON_VERSION}" != "2.7" ]; then \
-		# clean install Python3.x
-		apt install -y build-essential \
+		apt install --no-install-recommends -y build-essential \
 			zlib1g-dev \
 			libncurses5-dev \
 			libgdbm-dev \
@@ -22,7 +21,7 @@ RUN set -x; \
 			libffi-dev \
 			libsqlite3-dev \
 			libbz2-dev; \
-		\
+
 		case "${PYTHON_VERSION}" in \
 			"3.6") \
 			PYTHON_TGZ_TAG="3.6.9" \
@@ -39,46 +38,44 @@ RUN set -x; \
 		esac; \
 		wget https://www.python.org/ftp/python/$PYTHON_TGZ_TAG/Python-$PYTHON_TGZ_TAG.tgz; \
 		tar -xf Python-$PYTHON_TGZ_TAG.tgz; \
-		( \
-			cd Python-$PYTHON_TGZ_TAG || exit; \
-			./configure --enable-optimizations; \
+		( cd Python-$PYTHON_TGZ_TAG || exit; \
+			./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --enable-optimizations; \
 			make -j 12; \
-			make altinstall; \
-		); \
+			make altinstall;) \
+
 		rm -rf Python-$PYTHON_TGZ_TAG.tgz Python-$PYTHON_TGZ_TAG; \
-		# install pip
-		curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py; \
+
+		curl -f https://bootstrap.pypa.io/get-pip.py -o get-pip.py; \
 		python${PYTHON_VERSION} get-pip.py; \
 		rm -rf get-pip.py; \
 	fi; \
 	if [ "${IS_CI}" = "true" ]; then \
-		# install graphviz required by unit tests
-		apt install -y graphviz; \
-		\
+		apt install --no-install-recommends -y graphviz; \
+
 		case "${PYTHON_VERSION}" in \
-			"2.7") \
-				# install Python2.7 for Python2.7-CI
-				apt install -y python2-minimal; \
-				curl https://bootstrap.pypa.io/pip/2.7/get-pip.py -k --output get-pip.py; \
+			"2.7" \
+
+				apt install --no-install-recommends -y python2-minimal; \
+				curl -f https://bootstrap.pypa.io/pip/2.7/get-pip.py -k --output get-pip.py; \
 				python2 get-pip.py; \
 			;; \
-			"3.9") \
-				# install jq for data gathering for Python3.9-CI
-				apt install -y jq; \
-				# install flake8 and packaging module for Python3.9-CI
-				pip install flake8 \
+			"3.9" \
+
+				apt install --no-install-recommends -y jq; \
+
+				pip install --no-cache-dir flake8 \
 					packaging; \
 			;; \
-		esac; \
+	esac; \
 	else \
-		# install GitHub CLI for GitHub release
-		GH_CLI_VERSION=`curl  "https://api.github.com/repos/cli/cli/releases/latest" | grep '"tag_name"' | sed -E 's/.*"([^"]+)".*/\1/' | cut -c2-`; \
+
+		GH_CLI_VERSION=$( curl -f "https://api.github.com/repos/cli/cli/releases/latest" | grep '"tag_name"' | sed -E 's/.*"([^"]+)".*/\1/' | cut -c2-) ; \
 		wget https://github.com/cli/cli/releases/download/v${GH_CLI_VERSION}/gh_${GH_CLI_VERSION}_linux_amd64.tar.gz; \
 		tar xvf gh_${GH_CLI_VERSION}_linux_amd64.tar.gz; \
 		cp gh_${GH_CLI_VERSION}_linux_amd64/bin/gh /usr/local/bin/; \
 		rm -rf gh_${GH_CLI_VERSION}_linux_amd64 gh_${GH_CLI_VERSION}_linux_amd64.tar.gz; \
-		# install twine for PyPI deployment
-		pip install twine; \
+
+		pip install --no-cache-dir twine; \
 	fi;
-	
+
 # Built with ‚ù§ by [Pipeline Foundation](https://pipeline.foundation)