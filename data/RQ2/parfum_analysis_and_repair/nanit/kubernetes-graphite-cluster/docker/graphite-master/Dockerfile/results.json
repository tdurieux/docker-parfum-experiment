{
  "startTime": 1674254661897,
  "endTime": 1674254662985,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 22,
        "columnEnd": 74
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 8,
        "columnEnd": 35
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 8,
        "columnEnd": 24
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 8,
        "columnEnd": 39
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 8,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 8,
        "columnStart": 1,
        "columnEnd": 91
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 8,
        "columnStart": 1,
        "columnEnd": 91
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 53
      }
    }
  ],
  "repairedDockerfile": "from\tubuntu:14.04\nrun\techo 'deb http://us.archive.ubuntu.com/ubuntu/ trusty universe' >> /etc/apt/sources.list\nrun\tapt-get -y update\n\n# Install required packages\nRUN apt-get -y update && \\\n\tapt-get -y --no-install-recommends install software-properties-common python-django-tagging python-simplejson \\\n\tpython-memcache python-ldap python-cairo python-pysqlite2 python-support python-pip \\\n\tgunicorn supervisor nginx-light git wget curl build-essential python-dev libffi-dev vim jq && rm -rf /var/lib/apt/lists/*;\nrun curl -f -sL https://deb.nodesource.com/setup_8.x | sudo -E bash -\nrun apt-get install --no-install-recommends -y nodejs && rm -rf /var/lib/apt/lists/*;\nRUN pip install --no-cache-dir Twisted==13.2.0\nRUN pip install --no-cache-dir pytz\nRUN     git clone https://github.com/graphite-project/whisper.git /src/whisper            &&\\\n        cd /src/whisper                                                                   &&\\\n        git checkout 1.0.x                                                                &&\\\n        python setup.py install\n\nRUN     git clone https://github.com/graphite-project/carbon.git /src/carbon              &&\\\n        cd /src/carbon                                                                    &&\\\n        git checkout 1.0.x                                                                &&\\\n        python setup.py install\n\n\nRUN git clone https://github.com/graphite-project/graphite-web.git /src/graphite-web  &&\\\n        cd /src/graphite-web                                                              &&\\\n        git checkout 1.0.x\t\t\t\t\t\t\t\t                                                &&\\\n        python setup.py install && \\\n        pip install --no-cache-dir -r requirements.txt && \\\n        python check-dependencies.py\n\n# fixes fatal error \"Your WhiteNoise configuration is incompatible with WhiteNoise v4.0\"\nRUN /usr/bin/yes | pip uninstall whitenoise && \\\n        pip install --no-cache-dir \"whitenoise<4\"\n\n# Add system service config\nadd\t./nginx/nginx.conf /etc/nginx/nginx.conf\nadd\t./supervisord.conf /etc/supervisor/conf.d/supervisord.conf\n\n# Add graphite config\nadd\t./webapp/initial_data.json /opt/graphite/webapp/graphite/initial_data.json\nadd\t./webapp/local_settings.py.template /opt/graphite/webapp/graphite/local_settings.py.template\nadd\t./conf/carbon.conf /opt/graphite/conf/carbon.conf\nadd\t./conf/storage-schemas.conf /opt/graphite/conf/storage-schemas.conf\nadd\t./conf/storage-aggregation.conf /opt/graphite/conf/storage-aggregation.conf\nrun\tmkdir -p /opt/graphite/storage/whisper\nrun\ttouch /opt/graphite/storage/graphite.db /opt/graphite/storage/index\nrun\tchmod 0775 /opt/graphite/storage /opt/graphite/storage/whisper\nrun\tchmod 0664 /opt/graphite/storage/graphite.db\nrun cp /src/graphite-web/webapp/manage.py /opt/graphite/webapp\n\nRUN mkdir /kube-watch\nRUN cd /kube-watch && npm install hashring kubernetes-client@5 json-stream && npm cache clean --force;\nadd kube-watch.js /kube-watch/kube-watch.js\n\nadd entrypoint.sh /entrypoint.sh\n# Nginx\nexpose\t80\n# Carbon line receiver port\n# expose\t2003\n# Carbon UDP receiver port\n# expose\t2003/udp\n# Carbon pickle receiver port\n# expose\t2004\n# Carbon cache query port\n# expose\t7002\n\ncmd\t[\"/entrypoint.sh\"]\n"
}