{
  "startTime": 1674252210556,
  "endTime": 1674252211121,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 96
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 28,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 108,
        "columnEnd": 124
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nvidia/cuda:10.2-cudnn7-devel-ubuntu16.04\nARG PYTHON_VERSION=3.8\nARG WITH_TORCHVISION=1\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n         build-essential \\\n         cmake \\\n         git \\\n         curl \\\n         ca-certificates \\\n         libjpeg-dev \\\n         libpng-dev && \\\n     rm -rf /var/lib/apt/lists/*\n\n\nRUN curl -f -o ~/miniconda.sh https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh && \\\n     chmod +x ~/miniconda.sh && \\\n     ~/miniconda.sh -b -p /opt/conda && \\\n     rm ~/miniconda.sh && \\\n     /opt/conda/bin/conda install -y python=$PYTHON_VERSION pip numpy pyyaml scipy ipython mkl mkl-include ninja cython && \\\n     /opt/conda/bin/conda install -y -c pytorch magma-cuda102 && \\\n    /opt/conda/bin/conda install -y -c saareliad se-msnag2 && \\\n     /opt/conda/bin/conda clean -ya\nENV PATH /opt/conda/bin:$PATH\n# This must be done before pip so that requirements.txt is available\nWORKDIR /opt/pytorch\nCOPY . .\n\nRUN git submodule sync && git submodule update --init --recursive\nRUN TORCH_CUDA_ARCH_LIST=\"3.5 5.2 6.0 6.1 7.0+PTX\" TORCH_NVCC_FLAGS=\"-Xfatbin -compress-all\" \\\n    CMAKE_PREFIX_PATH=\"$(dirname $(which conda))/../\" \\\n    pip --no-cache-dir \\\n\n    install -v .\n\nENV CC \"cc -mavx2\"\nRUN pip uninstall pillow\nRUN pip install --no-cache-dir -U --force-reinstall pillow-simd\n\nRUN if [ \"$WITH_TORCHVISION\" = \"1\" ] ; then \\\n git clone https://github.com/pytorch/vision.git && cd vision && pip install --no-cache-dir -v .; else echo \"building without torchvision\" ; fi\n\nWORKDIR /workspace\nRUN chmod -R a+w ."
}