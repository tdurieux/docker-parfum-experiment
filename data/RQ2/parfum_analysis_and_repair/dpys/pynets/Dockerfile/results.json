{
  "startTime": 1674252702262,
  "endTime": 1674252703676,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 7,
        "columnEnd": 88
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 7,
        "columnEnd": 114
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 7,
        "columnEnd": 117
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 110,
        "lineEnd": 110,
        "columnStart": 7,
        "columnEnd": 101
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 7,
        "columnEnd": 114
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 7,
        "columnEnd": 117
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 116,
        "lineEnd": 116,
        "columnStart": 7,
        "columnEnd": 32
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 120,
        "lineEnd": 120,
        "columnStart": 7,
        "columnEnd": 123
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 121,
        "lineEnd": 121,
        "columnStart": 7,
        "columnEnd": 38
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 124,
        "lineEnd": 124,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 133,
        "lineEnd": 133,
        "columnStart": 7,
        "columnEnd": 52
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 136,
        "lineEnd": 136,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 138,
        "lineEnd": 138,
        "columnStart": 7,
        "columnEnd": 48
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 139,
        "lineEnd": 139,
        "columnStart": 7,
        "columnEnd": 41
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 146,
        "lineEnd": 146,
        "columnStart": 7,
        "columnEnd": 28
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 148,
        "lineEnd": 148,
        "columnStart": 7,
        "columnEnd": 38
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 83,
        "lineEnd": 83,
        "columnStart": 7,
        "columnEnd": 42
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 7,
        "columnEnd": 68
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 7,
        "columnEnd": 54
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 80,
        "lineEnd": 80,
        "columnStart": 26,
        "columnEnd": 81
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:stretch-slim\n\n# Pre-cache neurodebian key\nCOPY docker/files/neurodebian.gpg /root/.neurodebian.gpg\n\nARG DEBIAN_FRONTEND=\"noninteractive\"\nARG miniconda_version=\"4.3.27\"\n\nENV LANG=\"C.UTF-8\" \\\n    LC_ALL=\"C.UTF-8\"\n\nRUN apt-get update -qq \\\n    && apt-get install -y --no-install-recommends software-properties-common \\\n    # Install system dependencies.\n    && apt-get install -y --no-install-recommends \\\n        bzip2 \\\n        ca-certificates \\\n        curl \\\n        libxtst6 \\\n        libgtk2.0-bin \\\n        libxft2 \\\n        lib32ncurses5 \\\n        libxmu-dev \\\n#        vim \\\n        wget \\\n        libgl1-mesa-glx \\\n        graphviz \\\n        libpng-dev \\\n        gnupg \\\n        build-essential \\\n        libgomp1 \\\n        libmpich-dev \\\n        mpich \\\n        git \\\n        g++ \\\n        zip \\\n        unzip \\\n        libglu1 \\\n        zlib1g-dev \\\n        libfreetype6-dev \\\n        pkg-config \\\n        libgsl0-dev \\\n        openssl \\\n#        openssh-server \\\n#        jq \\\n        gsl-bin \\\n        libglu1-mesa-dev \\\n        libglib2.0-0 \\\n        libglw1-mesa \\\n        libxkbcommon-x11-0 \\\n        liblapack-dev \\\n        libopenblas-base \\\n        sqlite3 \\\n        libsqlite3-dev \\\n        libquadmath0 \\\n        gcc-multilib \\\n    # Configure ssh\n#    && mkdir /var/run/sshd \\\n#    && echo 'root:screencast' | chpasswd \\\n#    && sed -i 's/PermitRootLogin without-password/PermitRootLogin yes/' /etc/ssh/sshd_config \\\n#    && sed 's@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd \\\n    # Add and configure git-lfs \\\n    && apt-get install --no-install-recommends -y apt-transport-https debian-archive-keyring \\\n    && apt-get install --no-install-recommends -y dirmngr --install-recommends \\\n    && curl -f -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | bash && \\\n    apt-get update && \\\n    apt-get install --no-install-recommends -y git-lfs \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \\\n    && curl -f -o /tmp/libxp6.deb -sSL https://mirrors.kernel.org/debian/pool/main/libx/libxp/libxp6_1.0.2-2_amd64.deb \\\n    && dpkg -i /tmp/libxp6.deb && rm -f /tmp/libxp6.deb \\\n    # Add new user.\n    && groupadd -r neuro && useradd --no-log-init --create-home --shell /bin/bash -r -g neuro neuro \\\n    && chmod a+s /opt \\\n    && chmod 777 -R /opt \\\n    && apt-get clean -y && apt-get autoclean -y && apt-get autoremove -y \\\n    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \\\n    && curl -f -sSL https://neuro.debian.net/lists/stretch.us-tn.full >> /etc/apt/sources.list.d/neurodebian.sources.list && \\\n    apt-key add /root/.neurodebian.gpg && \\\n    (apt-key adv --refresh-keys --keyserver hkp://ha.pool.sks-keyservers.net 0xA5D32F012649A5A9 || true) && \\\n    apt-get update -qq && apt-get install --no-install-recommends -y fsl-5.0-core && \\\n    apt-get clean && cd /tmp \\\n    && wget https://fsl.fmrib.ox.ac.uk/fsldownloads/patches/fsl-5.0.10-python3.tar.gz \\\n    && tar -zxvf fsl-5.0.10-python3.tar.gz \\\n    && cp fsl/bin/* /usr/share/fsl/5.0/bin \\\n    && rm -r fsl* \\\n    && chmod 777 -R /usr/share/fsl/5.0/bin \\\n    && chmod 777 -R /usr/lib/fsl/5.0 \\\n    && echo \"tmpfs   /tmp         tmpfs   rw,nodev,nosuid,size=2G          0  0\" >> /etc/fstab \\\n    && echo \"GRUB_CMDLINE_LINUX_DEFAULT=\"rootflags=uquota,pquota\"\" >> /etc/default/grub \\\n    && head -c 2G </dev/urandom > /tmp/3G_heap.txt && rm fsl-5.0.10-python3.tar.gz && rm -rf /var/lib/apt/lists/*;\n\nENV FSLDIR=/usr/share/fsl/5.0 \\\n    FSLOUTPUTTYPE=NIFTI_GZ \\\n    FSLMULTIFILEQUIT=TRUE \\\n    POSSUMDIR=/usr/share/fsl/5.0 \\\n    LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/lib/fsl/5.0 \\\n    FSLTCLSH=/usr/bin/tclsh \\\n    FSLWISH=/usr/bin/wish \\\n    PATH=$FSLDIR/bin:$PATH\nENV PATH=\"/opt/conda/bin\":$PATH\nENV PATH=\"/opt/conda/lib/python3.8/site-packages/pynets/cli\":$PATH\n\nWORKDIR /home/neuro\n\nRUN echo \"FSLDIR=/usr/share/fsl/5.0\" >> /home/neuro/.bashrc && \\\n    echo \"LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/lib/fsl/5.0\" >> /home/neuro/.bashrc && \\\n    echo \". $FSLDIR/etc/fslconf/fsl.sh\" >> /home/neuro/.bashrc && \\\n    echo \"export FSLDIR PATH\" >> /home/neuro/.bashrc && \\\n    echo \"export DISPLAY=:0\" >> /home/neuro/.bashrc \\\n    && curl -f -sSLO https://repo.continuum.io/miniconda/Miniconda3-${miniconda_version}-Linux-x86_64.sh \\\n    && bash Miniconda3-${miniconda_version}-Linux-x86_64.sh -b -p /opt/conda \\\n    && conda config --system --prepend channels conda-forge \\\n    && conda config --system --set auto_update_conda false \\\n    && conda config --system --set show_channel_urls true \\\n    && conda install -yq python=3.8 \\\n    && pip install --no-cache-dir --upgrade pip \\\n    && rm -rf Miniconda3-${miniconda_version}-Linux-x86_64.sh \\\n    && git config --global url.\"https://\".insteadOf git:// \\\n    && git config --global http.postBuffer 1048576000 \\\n    && pip install --no-cache-dir numpy requests psutil sqlalchemy importlib-metadata >=0.12 pytest pingouin >=0.3.7 imbalanced-learn >=0.8.0 \\\n    && pip install --no-cache-dir --upgrade pyopenssl \\\n    && git clone https://github.com/dPys/multinetx.git /home/neuro/multinetx \\\n    && cd /home/neuro/multinetx && \\\n    pip install --no-cache-dir -r requirements.txt && \\\n    python setup.py install \\\n    && conda install -yq \\\n        cython \\\n        libgfortran \\\n        matplotlib \\\n        openblas \\\n        graph-tool \\\n    # Install pynets\n    && pip install --no-cache-dir --upgrade --force-reinstall numpy \\\n    && git clone -b development https://github.com/dPys/PyNets /home/neuro/PyNets && \\\n    cd /home/neuro/PyNets && \\\n    pip install --no-cache-dir -r requirements.txt && \\\n    python setup.py install \\\n    && pip install --no-cache-dir certifi -U --ignore-installed \\\n    && pip install --no-cache-dir python-dateutil==2.8.0 \\\n#    && pip install skggm \\\n    # Create nipype config for resource monitoring\n    && mkdir -p ~/.nipype \\\n    && echo \"[monitoring]\" > ~/.nipype/nipype.cfg \\\n    && echo \"enabled = true\" >> ~/.nipype/nipype.cfg \\\n    && pip uninstall -y pandas \\\n    && pip install --no-cache-dir pandas -U \\\n    && conda clean --all -y \\\n    && pip install --no-cache-dir --upgrade pyopenssl \\\n    && cd / \\\n    && rm -rf /home/neuro/PyNets \\\n    && rm -rf /home/neuro/.cache \\\n    && chmod a+s -R /opt \\\n    && chown -R neuro /opt/conda/lib/python3.8/site-packages \\\n    && mkdir -p /home/neuro/.pynets \\\n    && chown -R neuro /home/neuro/.pynets \\\n    && chmod 777 /opt/conda/bin/pynets \\\n    && chmod 777 -R /home/neuro/.pynets \\\n    && chmod 777 /opt/conda/bin/pynets \\\n#    && chmod 777 /opt/conda/bin/pynets_bids \\\n#    && chmod 777 /opt/conda/bin/pynets_cloud \\\n#    && chmod 777 /opt/conda/bin/pynets_benchmark \\\n#    && chmod 777 /opt/conda/bin/pynets_predict \\\n    && find /opt/conda/lib/python3.8/site-packages -type f -iname \"*.py\" -exec chmod 777 {} \\; \\\n    && find /opt -type f -iname \"*.py\" -exec chmod 777 {} \\; \\\n    && find /opt -type f -iname \"*.yaml\" -exec chmod 777 {} \\; \\\n    && apt-get clean autoclean \\\n    && apt-get purge -y --auto-remove \\\n\tgit \\\n\tgcc \\\n\twget \\\n\tcurl \\\n#\topenssl \\\n\tbuild-essential \\\n\tca-certificates \\\n\tlibc6-dev \\\n\tgnupg \\\n\tg++ \\\n\tgit-lfs \\\n    && rm -rf /var/lib/{apt,dpkg,cache,log}/ \\\n    && conda clean --all -y \\\n    && rm -rf /tmp/* /var/tmp/* \\\n    && rm -rf /opt/conda/pkgs \\\n    && find /opt/conda/ -type f,l -name '*.pyc' -delete \\\n    && mkdir /inputs && \\\n    chmod -R 777 /inputs \\\n    && mkdir /outputs && \\\n    chmod -R 777 /outputs \\\n    && mkdir /working && \\\n    chmod -R 777 /working \\\n    && rm -f /tmp/2G_heap.txt\n\n# ENV Config\nENV PATH=\"/opt/conda/lib/python3.8/site-packages/pynets/cli\":\"$PATH\"\n\nENV FSLDIR=/usr/share/fsl/5.0 \\\n    FSLOUTPUTTYPE=NIFTI_GZ \\\n    FSLMULTIFILEQUIT=TRUE \\\n    POSSUMDIR=/usr/share/fsl/5.0 \\\n    LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/lib/fsl/5.0 \\\n    FSLTCLSH=/usr/bin/tclsh \\\n    FSLWISH=/usr/bin/wish \\\n    PATH=$FSLDIR/bin:$PATH\nENV PATH=\"/opt/conda/bin\":\"$PATH\" \\\n    OPENBLAS_NUM_THREADS=4 \\\n    GOTO_NUM_THREADS=4 \\\n    OMP_NUM_THREADS=4 \\\n    QT_QPA_PLATFORM=offscreen\n\nEXPOSE 22\n\nRUN echo \"PATH=\"/opt/conda/lib/python3.8/site-packages/pynets/cli\":$PATH\" >> /home/neuro/.bashrc \\\n    && . /home/neuro/.bashrc\n\n"
}