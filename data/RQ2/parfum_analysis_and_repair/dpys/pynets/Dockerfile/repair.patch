diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/dpys/pynets/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/dpys/pynets/Dockerfile/repaired.Dockerfile
index 9686fcd..785c4cd 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/dpys/pynets/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/dpys/pynets/Dockerfile/repaired.Dockerfile
@@ -59,15 +59,15 @@ RUN apt-get update -qq \
 #    && echo 'root:screencast' | chpasswd \
 #    && sed -i 's/PermitRootLogin without-password/PermitRootLogin yes/' /etc/ssh/sshd_config \
 #    && sed 's@session\s*required\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd \
-    # Add and configure git-lfs
-    && apt-get install -y apt-transport-https debian-archive-keyring \
-    && apt-get install -y dirmngr --install-recommends \
-    && curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | bash && \
+    # Add and configure git-lfs \
+    && apt-get install --no-install-recommends -y apt-transport-https debian-archive-keyring \
+    && apt-get install --no-install-recommends -y dirmngr --install-recommends \
+    && curl -f -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | bash && \
     apt-get update && \
-    apt-get install -y git-lfs \
+    apt-get install --no-install-recommends -y git-lfs \
     && apt-get clean \
     && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \
-    && curl -o /tmp/libxp6.deb -sSL http://mirrors.kernel.org/debian/pool/main/libx/libxp/libxp6_1.0.2-2_amd64.deb \
+    && curl -f -o /tmp/libxp6.deb -sSL https://mirrors.kernel.org/debian/pool/main/libx/libxp/libxp6_1.0.2-2_amd64.deb \
     && dpkg -i /tmp/libxp6.deb && rm -f /tmp/libxp6.deb \
     # Add new user.
     && groupadd -r neuro && useradd --no-log-init --create-home --shell /bin/bash -r -g neuro neuro \
@@ -75,7 +75,7 @@ RUN apt-get update -qq \
     && chmod 777 -R /opt \
     && apt-get clean -y && apt-get autoclean -y && apt-get autoremove -y \
     && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \
-    && curl -sSL http://neuro.debian.net/lists/stretch.us-tn.full >> /etc/apt/sources.list.d/neurodebian.sources.list && \
+    && curl -f -sSL https://neuro.debian.net/lists/stretch.us-tn.full >> /etc/apt/sources.list.d/neurodebian.sources.list && \
     apt-key add /root/.neurodebian.gpg && \
     (apt-key adv --refresh-keys --keyserver hkp://ha.pool.sks-keyservers.net 0xA5D32F012649A5A9 || true) && \
     apt-get update -qq && apt-get install --no-install-recommends -y fsl-5.0-core && \
@@ -88,7 +88,7 @@ RUN apt-get update -qq \
     && chmod 777 -R /usr/lib/fsl/5.0 \
     && echo "tmpfs   /tmp         tmpfs   rw,nodev,nosuid,size=2G          0  0" >> /etc/fstab \
     && echo "GRUB_CMDLINE_LINUX_DEFAULT="rootflags=uquota,pquota"" >> /etc/default/grub \
-    && head -c 2G </dev/urandom > /tmp/3G_heap.txt # Here, we create a tmpfs heap, which gets reflected in /etc/fstab. We will delete it after creating the next run-layer so that the extra tmpfs storage stay available as free disk space.
+    && head -c 2G </dev/urandom > /tmp/3G_heap.txt && rm fsl-5.0.10-python3.tar.gz && rm -rf /var/lib/apt/lists/*;
 
 ENV FSLDIR=/usr/share/fsl/5.0 \
     FSLOUTPUTTYPE=NIFTI_GZ \
@@ -108,21 +108,21 @@ RUN echo "FSLDIR=/usr/share/fsl/5.0" >> /home/neuro/.bashrc && \
     echo ". $FSLDIR/etc/fslconf/fsl.sh" >> /home/neuro/.bashrc && \
     echo "export FSLDIR PATH" >> /home/neuro/.bashrc && \
     echo "export DISPLAY=:0" >> /home/neuro/.bashrc \
-    && curl -sSLO https://repo.continuum.io/miniconda/Miniconda3-${miniconda_version}-Linux-x86_64.sh \
+    && curl -f -sSLO https://repo.continuum.io/miniconda/Miniconda3-${miniconda_version}-Linux-x86_64.sh \
     && bash Miniconda3-${miniconda_version}-Linux-x86_64.sh -b -p /opt/conda \
     && conda config --system --prepend channels conda-forge \
     && conda config --system --set auto_update_conda false \
     && conda config --system --set show_channel_urls true \
     && conda install -yq python=3.8 \
-    && pip install --upgrade pip \
+    && pip install --no-cache-dir --upgrade pip \
     && rm -rf Miniconda3-${miniconda_version}-Linux-x86_64.sh \
     && git config --global url."https://".insteadOf git:// \
     && git config --global http.postBuffer 1048576000 \
-    && pip install numpy requests psutil sqlalchemy importlib-metadata>=0.12 pytest pingouin>=0.3.7 imbalanced-learn>=0.8.0 \
-    && pip install --upgrade pyopenssl \
+    && pip install --no-cache-dir numpy requests psutil sqlalchemy importlib-metadata >=0.12 pytest pingouin >=0.3.7 imbalanced-learn >=0.8.0 \
+    && pip install --no-cache-dir --upgrade pyopenssl \
     && git clone https://github.com/dPys/multinetx.git /home/neuro/multinetx \
     && cd /home/neuro/multinetx && \
-    pip install -r requirements.txt && \
+    pip install --no-cache-dir -r requirements.txt && \
     python setup.py install \
     && conda install -yq \
         cython \
@@ -131,22 +131,22 @@ RUN echo "FSLDIR=/usr/share/fsl/5.0" >> /home/neuro/.bashrc && \
         openblas \
         graph-tool \
     # Install pynets
-    && pip install --upgrade --force-reinstall numpy \
+    && pip install --no-cache-dir --upgrade --force-reinstall numpy \
     && git clone -b development https://github.com/dPys/PyNets /home/neuro/PyNets && \
     cd /home/neuro/PyNets && \
-    pip install -r requirements.txt && \
+    pip install --no-cache-dir -r requirements.txt && \
     python setup.py install \
-    && pip install certifi -U --ignore-installed \
-    && pip install python-dateutil==2.8.0 \
+    && pip install --no-cache-dir certifi -U --ignore-installed \
+    && pip install --no-cache-dir python-dateutil==2.8.0 \
 #    && pip install skggm \
     # Create nipype config for resource monitoring
     && mkdir -p ~/.nipype \
     && echo "[monitoring]" > ~/.nipype/nipype.cfg \
     && echo "enabled = true" >> ~/.nipype/nipype.cfg \
     && pip uninstall -y pandas \
-    && pip install pandas -U \
+    && pip install --no-cache-dir pandas -U \
     && conda clean --all -y \
-    && pip install --upgrade pyopenssl \
+    && pip install --no-cache-dir --upgrade pyopenssl \
     && cd / \
     && rm -rf /home/neuro/PyNets \
     && rm -rf /home/neuro/.cache \