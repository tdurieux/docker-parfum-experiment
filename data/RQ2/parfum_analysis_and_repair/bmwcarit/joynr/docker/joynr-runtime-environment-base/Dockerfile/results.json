{
  "startTime": 1674249453908,
  "endTime": 1674249454587,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 7,
        "columnEnd": 92
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM fedora:36\n\nLABEL com.jfrog.artifactory.retention.maxCount=\"25\"\n\n###################################################\n# create data directories and volumes\n###################################################\nWORKDIR /\nRUN mkdir /data\n\nENV CURL_HOME /etc\n\n###################################################\n# setup build environment\n###################################################\nRUN mkdir -p /home/joynr/\nRUN mkdir /home/joynr/build\n\n###################################################\n# copy scripts and set start command\n###################################################\nCOPY scripts/docker/setup-proxy.sh /data/scripts/setup-proxy.sh\nCOPY scripts/docker/setup-extra-certs.sh /data/scripts/setup-extra-certs.sh\n\n###################################################\n# Setup dnf.conf\n###################################################\nRUN /data/scripts/setup-proxy.sh\n\n###################################################\n# install base packages\n###################################################\n# procps is installed because of the pkill command\n# which is required by the run-performance-test script\nRUN dnf update -y \\\n\t&& dnf install -y \\\n\tjava-11-openjdk \\\n\tjava-11-openjdk-devel \\\n\topenssl \\\n\topenssl1.1 \\\n\topenssl1.1-devel \\\n\tprocps \\\n\ttar \\\n\twget \\\n\t&& dnf clean all\n\n###################################################\n# install node.js\n###################################################\n# nvm environment variables\nENV NVM_DIR /usr/local/nvm\n\nENV NODE_V8 8.16.2\nENV NODE_V12 12.22.2\n\n# install nvm\nRUN . /etc/profile \\\n    && mkdir -p $NVM_DIR \\\n    && curl -f --silent -o- https://raw.githubusercontent.com/creationix/nvm/v0.39.1/install.sh | bash\n\n# install node and npm\n# having the nvm directory writable makes it possible to use nvm to change node versions manually\n# nvm uses curl internally with '-q' option suppressing evaluation of '.curlrc' hence\n# if a proxy is set it is required to wrap curl to explicitly set a config file because\n# nvm does not provide an option for this.\nRUN . /etc/profile \\\n    && if [ -n \"$PROXY_HOST\" ]; then alias curl=\"/usr/bin/curl -K /etc/.curlrc\"; fi \\\n    && source $NVM_DIR/nvm.sh \\\n    && nvm install $NODE_V12 \\\n    && nvm install $NODE_V8 \\\n    && nvm alias default $NODE_V8 \\\n    && nvm use default \\\n    && chmod -R a+rwx $NVM_DIR\n\n# add node and npm to path\n# (node will be available then without sourcing $NVM_DIR/nvm.sh)\nENV PATH $NVM_DIR/versions/node/v$NODE_V8/bin:$PATH\n\n###################################################\n# configure Java 11 as default\n# otherwise we would have to remove several\n# packages depending on java8 in order to be able\n# to remove java8 packages\n###################################################\nRUN alternatives --set java /usr/lib/jvm/java-11-openjdk*.x86_64/bin/java \\\n\t&& alternatives --set javac /usr/lib/jvm/java-11-openjdk*.x86_64/bin/javac \\\n\t&& alternatives --set jre_openjdk /usr/lib/jvm/java-11-openjdk*.x86_64 \\\n\t&& alternatives --set java_sdk_openjdk /usr/lib/jvm/java-11-openjdk*.x86_64\n\n###################################################\n# setup extra certs\n###################################################\nRUN /data/scripts/setup-extra-certs.sh\n"
}