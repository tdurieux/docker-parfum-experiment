{
  "startTime": 1674250141311,
  "endTime": 1674250142659,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 1,
        "lineEnd": 1,
        "columnStart": 4,
        "columnEnd": 58
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:9.5-alpine as builder\nRUN apk add --no-cache --update git python make g++ libnotify openssl\nRUN npm install -g gulp-cli && npm cache clean --force;\n\n# SSL self-signed certificate for localhost.\nRUN openssl genrsa -des3 -passout pass:x -out server.pass.key 2048 && \\\n    openssl rsa -passin pass:x -in server.pass.key -out server.key && \\\n    openssl req -new -key server.key -out server.csr -subj \"/C=US/ST=California/L=California/O=localhost/OU=localhost/CN=localhost\" && \\\n    openssl x509 -req -sha256 -days 365 -in server.csr -signkey server.key -out server.crt\n\nWORKDIR /etherwallet\nADD . /etherwallet\nRUN npm install && npm cache clean --force;\nRUN npm run dist\n\n\nFROM nginx\n\nRUN echo \"server {\\\n  listen 443 ssl; \\\n  ssl on;\\\n  ssl_certificate     /opt/ssl/server.crt;\\\n  ssl_certificate_key /opt/ssl/server.key;\\\n  ssl_session_timeout 5m; \\\n  ssl_session_cache shared:SSL:10m; \\\n  ssl_protocols TLSv1 TLSv1.1 TLSv1.2; \\\n  ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH'; \\\n  ssl_prefer_server_ciphers on; \\\n  server_name localhost; \\\n  location / { \\\n    root   /usr/share/nginx/html; \\\n    index  index.html index.htm; \\\n  }\\\n  error_page   500 502 503 504  /50x.html;\\\n  location = /50x.html {\\\n    root   /usr/share/nginx/html;\\\n  }\\\n}\" > /etc/nginx/conf.d/ssl.conf\n\nCOPY --from=builder  /etherwallet/dist /usr/share/nginx/html\nCOPY --from=builder  /server.crt /opt/ssl/server.crt\nCOPY --from=builder  /server.key /opt/ssl/server.key\n\nEXPOSE 80\nEXPOSE 443\n"
}