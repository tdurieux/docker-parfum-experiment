{
  "startTime": 1674255866927,
  "endTime": 1674255868125,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 5,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 5,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 28,
        "columnStart": 18,
        "columnEnd": 18
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:20.04\nENV DEBIAN_FRONTEND=noninteractive\nENV PHPSUPPORTED=\"7.2 7.3 8.0 8.1\"\nENV APTINSTALL=\"apt install -y -o Dpkg::Options::=--force-confdef -o Dpkg::Options::=--force-confold\"\nRUN apt update && apt install --no-install-recommends -y \\\n  acl make zip unzip apache2-utils bsdmainutils libcurl4-gnutls-dev \\\n  libjsoncpp-dev libmagic-dev autoconf automake bats sudo debootstrap procps \\\n  gcc g++ default-jre-headless default-jdk ghc fp-compiler libcgroup-dev \\\n  devscripts shellcheck nginx libboost-regex-dev \\\n  php7.4 php7.4-cli php7.4-gd php7.4-curl php7.4-mysql php7.4-json php7.4-gmp php7.4-zip php7.4-xml php7.4-mbstring php7.4-fpm php7.4-intl php7.4-pcov \\\n  # W3c test \\\n  httrack \\\n  # Visual regression browser \\\n  cutycapt xvfb openimageio-tools imagemagick \\\n  # Submit client \\\n  python3-requests python3-magic \\\n  # Docs \\\n  python3-sphinx python3-sphinx-rtd-theme rst2pdf fontconfig python3-yaml \\\n  texlive-latex-recommended texlive-latex-extra \\\n  texlive-fonts-recommended texlive-lang-european latexmk \\\n  # Misc gitlab things \\\n  mariadb-client curl build-essential packaging-dev \\\n  git python3-pip moreutils w3m python3-yaml \\\n  # Things we'd have in the chroot \\\n  ca-certificates default-jre-headless pypy locales software-properties-common \\\n  # W3c WCAG \\\n  npm libnss3 libcups2 libxss1 libasound2 libatk1.0-0 libatk-bridge2.0-0 libpangocairo-1.0-0 libgtk-3-0 \\\n  # Code coverage for unit test\n  php-pear php-dev \\\n  # Needed NPM packages \\\n  && npm install pa11y \\\n  # Needed python packages \\\n  && pip install --no-cache-dir codespell \\\n  && rm -rf /var/lib/apt/lists/* && npm cache clean --force;\n\n# Install composer\nRUN apt update && \\\n    apt install --no-install-recommends --no-install-suggests -y ca-certificates \\\n\t&& rm -rf /var/lib/apt/lists/* \\\n    && php -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\" && php composer-setup.php \\\n    && mv /composer.phar /usr/local/bin/composer\n\n# Install needed global PHP modules\nRUN composer -n require justinrainbow/json-schema\n\n# Install other PHP versions\nRUN add-apt-repository ppa:ondrej/php -y && apt update && \\\n    PACKAGES=$(dpkg-query -f '${binary:Package}\\n' -W|grep \"^php.*-\") && \\\n    for VERSION in $PHPSUPPORTED; do \\\n        $APTINSTALL php${VERSION} && \\\n        for PACKAGE in $PACKAGES; do \\\n            $APTINSTALL php${VERSION}-${PACKAGE#php*-}; \\\n        done; \\\n    done && update-alternatives --set php /usr/bin/php7.4\n\n# Put the gitlab user in sudo\nRUN echo 'ALL ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers\n\nRUN useradd -m domjudge\nRUN useradd -d /nonexistent -g nogroup -s /bin/false domjudge-run-0\nRUN useradd -d /nonexistent -g nogroup -s /bin/false domjudge-run-1\nRUN groupadd domjudge-run\n\n# Do some extra setup\nRUN mkdir -p /run/php \\\n && rm /etc/php/*/fpm/pool.d/www.conf\n"
}