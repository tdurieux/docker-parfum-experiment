{
  "startTime": 1674251975735,
  "endTime": 1674251976665,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 54
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 17
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 17
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM rustlang/rust@sha256:82c6bff2e60150c13e737266eb4e917f503ac5eee39d3264e74a3b141bd32589\n\nENV DEBIAN_FRONTEND=noninteractive\n\n# First apt-transport-https and ca-certificates must be installed\n# Then we can add nodejs and yarn apt sources\n# Then apt-get update must be run again\n# Then we can install nodejs and yarn\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y \\\n      apt-transport-https \\\n      ca-certificates && \\\n    curl -f -sSL https://deb.nodesource.com/setup_16.x | bash - && \\\n    curl -f -sSL https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - && \\\n    echo \"deb https://dl.yarnpkg.com/debian/ stable main\" > /etc/apt/sources.list.d/yarn.list && \\\n    apt-get update && \\\n    apt-get install --no-install-recommends -y \\\n      nodejs yarn && \\\n    useradd -m builder && rm -rf /var/lib/apt/lists/*;\n\n# wasm-pack must be installed by user `builder`\n# use `builder` must be used in derivative images to build cargo projects\nUSER builder\nRUN yarn global add wasm-pack\n\n# Update cargo index, so it is ready for images extending this one\nRUN cargo search --limit 0\n\nUSER builder\nRUN mkdir /home/builder/project\n"
}