{
  "startTime": 1674253104813,
  "endTime": 1674253106201,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 97,
        "lineEnd": 97,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 61,
        "lineEnd": 67,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 33,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 33,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 33,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 20
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 32,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 20
      }
    }
  ],
  "repairedDockerfile": "FROM cs50/cli\nARG DEBIAN_FRONTEND=noninteractive\n\nEXPOSE 1337 8080-8082\n\nUSER root\n\n# Install apt packages\nRUN apt-get update --quiet && \\\n    apt-get install --no-install-recommends --yes \\\n        coreutils `# for fold` \\\n        libncurses-dev \\\n        libphp-phpmailer \\\n        libxslt1-dev \\\n        netcat-openbsd \\\n        net-tools \\\n        openbox \\\n        obconf \\\n        pgloader \\\n        postgresql \\\n        php-cgi \\\n        php-curl \\\n        php-sqlite3 `# phpliteadmin dependency` \\\n        pwgen `# phpliteadmin dependency` \\\n        php-xdebug \\\n        python \\\n        rsync \\\n        rsyslog \\\n        x11vnc \\\n        xvfb && rm -rf /var/lib/apt/lists/*;\n\n# Teacher requirements\nRUN apt-get install --no-install-recommends --yes \\\n        doxygen \\\n        cmocka-doc \\\n        libcurl4-gnutls-dev \\\n        libcmocka0 \\\n        libcmocka-dev \\\n        odbcinst \\\n        odbc-mariadb \\\n        unixodbc \\\n        unixodbc-dev && rm -rf /var/lib/apt/lists/*;\n\n\n# Disable kernel log, container doesn't have read permission\nRUN sed --in-place 's/\\(module(load=\"imklog\" permitnonkernelfacility=\"on\")\\)/# \\1/' /etc/rsyslog.conf\n\n# Install noVNC\nRUN wget https://github.com/novnc/noVNC/archive/refs/tags/v1.2.0.zip -P/tmp && \\\n    unzip /tmp/v1.2.0.zip -d /tmp && \\\n    mv /tmp/noVNC-1.2.0 /opt/noVNC && \\\n    chown -R ubuntu:ubuntu /opt/noVNC\n\n# Install node 12.x\nRUN n 12\n\n# Install npm packages\nRUN npm install --global c9 gdb-mi-parser && npm cache clean --force;\n\n# Install Python packages\nRUN pip3 install --no-cache-dir \\\n        git+git://github.com/cs50/ikp3db.git \\\n        plotly \\\n        pylint \\\n        pylint_django \\\n        pylint_flask \\\n        twython\n\n# Add courses group\nRUN groupadd --system courses\n\n# Add cs50 user\nRUN adduser --gecos \"CS50,,,,\" --ingroup courses --disabled-login --system cs50\n\nRUN echo | tee /etc/motd\n\nCOPY files/ /\nRUN chmod 755 /opt/cs50/bin/*\n\n# Staff solutions\nRUN chown --recursive cs50.courses /home/cs50 && \\\n    chmod --recursive 755 /home/cs50 && \\\n    find /home/cs50 -type f -name \"*.*\" -exec chmod 644 {} +;\n\n\n# Clone Cloud9\nRUN mkdir -m600 /root/.ssh && ssh-keyscan github.com >> ~/.ssh/known_hosts\nRUN --mount=type=ssh git clone --depth=1 git@github.com:cs50/cloud9.git /opt/c9\n\nRUN chown --recursive ubuntu:ubuntu /opt/c9\n\nUSER ubuntu\n\n# Install, build, and obfuscate Cloud9\nWORKDIR /opt/c9\nRUN ./install-script.sh\nRUN npm install && npm run build:packages && rm -rf .git && npm cache clean --force;\n\nARG GITHUB_SHA\nARG SKIP_PACKAGE_COMPRESSION\nRUN cd packages/cs50 && \\\n    mv ../ide/cdn/* cdn && \\\n    cp bootstrap.cs50.js cdn/bootstrap.js && \\\n    cp cdn/ide.html cdn/ide-cdn.html && \\\n    sed -i \"s#\\./#https://mirror.cs50.net/ide/$GITHUB_SHA/#g\" cdn/ide-cdn.html && \\\n    if [ -z \"$SKIP_PACKAGE_COMPRESSION\" ]; then echo \"compressing packages...\"; node -e \"require('@c9/architect-build/compress_folder')('/opt/c9', {exclude: /^(cdn|node_modules|mock)$/})\"; else echo \"skipping package compression...\"; fi\n\n# Change default workdir\nWORKDIR /home/ubuntu\n\nENTRYPOINT [ \"/docker-entrypoint.sh\" ]\n"
}