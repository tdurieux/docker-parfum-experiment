{
  "startTime": 1674250311811,
  "endTime": 1674250312831,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 61
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 81
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 52,
        "columnEnd": 63
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 16,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 141
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 141
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 141
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM base\nMAINTAINER Evan Hazlett \"ejhazlett@gmail.com\"\nRUN apt-get -qq update && apt-get install --no-install-recommends -y python-dev python-setuptools libxml2-dev libxslt-dev libmysqlclient-dev supervisor redis-server git-core wget make g++ && rm -rf /var/lib/apt/lists/*;\nRUN wget https://nodejs.org/dist/v0.10.12/node-v0.10.12.tar.gz -O /tmp/node.tar.gz\nRUN ( cd /tmp && tar zxf node.tar.gz && cd node-* && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"; make install) && rm node.tar.gz\nRUN npm install git+http://github.com/ehazlett/hipache.git -g && npm cache clean --force;\nADD .docker/hipache.config.json /etc/hipache.config.json\nRUN easy_install pip\nRUN pip install --no-cache-dir virtualenv\nRUN pip install --no-cache-dir uwsgi\nRUN virtualenv --no-site-packages /opt/ve/shipyard\nADD . /opt/apps/shipyard\nADD .docker/supervisor.conf /opt/supervisor.conf\nADD .docker/known_hosts /root/.ssh/known_hosts\nADD .docker/run.sh /usr/local/bin/run\nRUN (find /opt/apps/shipyard -name \"*.db\" -delete)\nRUN (cd /opt/apps/shipyard && git remote rm origin)\nRUN (cd /opt/apps/shipyard && git remote add origin https://github.com/ehazlett/shipyard.git)\nRUN /opt/ve/shipyard/bin/pip install -r /opt/apps/shipyard/requirements.txt\nRUN (cd /opt/apps/shipyard && /opt/ve/shipyard/bin/python manage.py syncdb --noinput)\nRUN (cd /opt/apps/shipyard && /opt/ve/shipyard/bin/python manage.py migrate)\nRUN (cd /opt/apps/shipyard && /opt/ve/shipyard/bin/python manage.py update_admin_user --username=admin --password=shipyard)\n\nEXPOSE 80\nEXPOSE 6379\nEXPOSE 8000\nCMD [\"/bin/sh\", \"-e\", \"/usr/local/bin/run\"]\n"
}