{
  "startTime": 1674218186065,
  "endTime": 1674218187004,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 10,
        "columnStart": 22,
        "columnEnd": 13
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 10,
        "columnStart": 22,
        "columnEnd": 13
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedDockerfile": "# TODO: Can this Dockerfile use multi-stage build?\n# Final size 690MB. (It would be 1.16 GB if started with python:3 as base)\nFROM python:3-slim\n\n# Install Generic PyGObject (sans GTK)\n#The following somehow won't work:\n#RUN apt-get update && apt-get install -y python3-gi python3-gi-cairo\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n  libcairo2-dev \\\n  libgirepository1.0-dev \\\n  python3-dev && rm -rf /var/lib/apt/lists/*;\nRUN pip install --no-cache-dir \"pygobject>=3,<4\"\n\n# Install MSAL Extensions dependencies\n# Don't know how to get container talk to dbus on host,\n# so we choose to create a self-contained image by installing gnome-keyring\nRUN apt-get install --no-install-recommends -y \\\n  gir1.2-secret-1 \\\n  gnome-keyring && rm -rf /var/lib/apt/lists/*;\n\n# Not strictly necessary, but we include a pytest (which is only 3MB) to facilitate testing.\nRUN pip install --no-cache-dir \"pytest>=6,<7\"\n\n# Install MSAL Extensions. Upgrade the pinned version number to trigger a new image build.\nRUN pip install --no-cache-dir \"msal-extensions==0.3\"\n\n# This setup is inspired from https://github.com/jaraco/keyring#using-keyring-on-headless-linux-systems-in-a-docker-container\nENTRYPOINT [\"dbus-run-session\", \"--\"]\n# Note: gnome-keyring-daemon needs previleged mode, therefore can not be run by a RUN command.\nCMD [\"sh\", \"-c\", \"echo default_secret | gnome-keyring-daemon --unlock; bash\"]\n"
}