{
  "startTime": 1674251345630,
  "endTime": 1674251346414,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 53
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 53
      }
    }
  ],
  "repairedDockerfile": "FROM python:3\nWORKDIR /code\n\n# Node and webpack\nRUN apt-get update -qq && \\\n    apt-get install -y --no-install-recommends vim curl gnupg && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/*\nRUN curl -f -sL https://deb.nodesource.com/setup_12.x | bash -\nRUN apt-get install -y --no-install-recommends nodejs && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/*\n\nCOPY ./requirements/base.txt /code/base.txt\nCOPY ./requirements/development.txt /code/development.txt\nCOPY ./requirements/testing.txt /code/testing.txt\n\nRUN pip install -r /code/development.txt --no-cache-dir\nRUN pip install -r /code/testing.txt --no-cache-dir\n\nADD package.json package-lock.json ./\nRUN npm install && npm cache clean --force;\n\n# ENV should be configure from outside\n# @see docker-compose.yaml\nENV DB_NAME cuuhomientrung\nENV DB_USER cuuhomientrung\nENV DB_PASSWORD cuuhomientrung\nENV DB_HOSTNAME localhost\nENV DB_PORT 5432\nENV PYTHONUNBUFFERED=1\n\nADD . /code/\nRUN npm run build\n\nRUN chmod +x *.sh\n# Helpers making development easier\nRUN echo \"#!/bin/bash\\ncd /code\\npython project/manage.py runserver_plus 0.0.0.0:8087\" > /usr/bin/rs && \\\n    chmod +x /usr/bin/rs\n\nCMD [\"bash\", \"-c\", \"tail -f /dev/null\"]\nEXPOSE 8087/tcp"
}