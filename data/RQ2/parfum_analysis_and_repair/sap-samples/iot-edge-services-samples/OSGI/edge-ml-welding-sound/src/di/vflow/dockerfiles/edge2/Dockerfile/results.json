{
  "startTime": 1674220287596,
  "endTime": 1674220289234,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 157,
        "lineEnd": 157,
        "columnStart": 4,
        "columnEnd": 55
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 159,
        "lineEnd": 159,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 105,
        "lineEnd": 105,
        "columnStart": 1,
        "columnEnd": 74
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 154,
        "lineEnd": 154,
        "columnStart": 22,
        "columnEnd": 53
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 155,
        "lineEnd": 155,
        "columnStart": 22,
        "columnEnd": 61
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 154,
        "lineEnd": 154,
        "columnStart": 22,
        "columnEnd": 53
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 155,
        "lineEnd": 155,
        "columnStart": 22,
        "columnEnd": 61
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM buildpack-deps:buster\n\n# ensure local python is preferred over distribution python\nENV PATH /usr/local/bin:$PATH\n\n# http://bugs.python.org/issue19846\n# At the moment, setting \"LANG=C\" on a Linux system *fundamentally breaks Python 3*.\nENV LANG C.UTF-8\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n\t\ttk-dev \\\n\t&& rm -rf /var/lib/apt/lists/*\n\nENV GPG_KEY 0D96DF4D4110E5C43FBFB17F2D347EA6AA65421D\nENV PYTHON_VERSION 3.6.9\n\nRUN set -ex \\\n\t\\\n\t&& wget -O python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\" \\\n\t&& wget -O python.tar.xz.asc \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\" \\\n\t&& export GNUPGHOME=\"$(mktemp -d)\" \\\n\t&& gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \"$GPG_KEY\" \\\n\t&& gpg --batch --verify python.tar.xz.asc python.tar.xz \\\n\t&& { command -v gpgconf > /dev/null && gpgconf --kill all || :; } \\\n\t&& rm -rf \"$GNUPGHOME\" python.tar.xz.asc \\\n\t&& mkdir -p /usr/src/python \\\n\t&& tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \\\n\t&& rm python.tar.xz \\\n\t\\\n\t&& cd /usr/src/python \\\n\t&& gnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n\t&& ./configure \\\n\t\t--build=\"$gnuArch\" \\\n\t\t--enable-loadable-sqlite-extensions \\\n\t\t--enable-optimizations \\\n\t\t--enable-shared \\\n\t\t--with-system-expat \\\n\t\t--with-system-ffi \\\n\t\t--without-ensurepip \\\n\t&& make -j \"$(nproc)\" \\\n# setting PROFILE_TASK makes \"--enable-optimizations\" reasonable: https://bugs.python.org/issue36044 / https://github.com/docker-library/python/issues/160#issuecomment-509426916\n\t\tPROFILE_TASK='-m test.regrtest --pgo \\\n\t\t\ttest_array \\\n\t\t\ttest_base64 \\\n\t\t\ttest_binascii \\\n\t\t\ttest_binhex \\\n\t\t\ttest_binop \\\n\t\t\ttest_bytes \\\n\t\t\ttest_c_locale_coercion \\\n\t\t\ttest_class \\\n\t\t\ttest_cmath \\\n\t\t\ttest_codecs \\\n\t\t\ttest_compile \\\n\t\t\ttest_complex \\\n\t\t\ttest_csv \\\n\t\t\ttest_decimal \\\n\t\t\ttest_dict \\\n\t\t\ttest_float \\\n\t\t\ttest_fstring \\\n\t\t\ttest_hashlib \\\n\t\t\ttest_io \\\n\t\t\ttest_iter \\\n\t\t\ttest_json \\\n\t\t\ttest_long \\\n\t\t\ttest_math \\\n\t\t\ttest_memoryview \\\n\t\t\ttest_pickle \\\n\t\t\ttest_re \\\n\t\t\ttest_set \\\n\t\t\ttest_slice \\\n\t\t\ttest_struct \\\n\t\t\ttest_threading \\\n\t\t\ttest_time \\\n\t\t\ttest_traceback \\\n\t\t\ttest_unicode \\\n\t\t' \\\n\t&& make install \\\n\t&& ldconfig \\\n\t\\\n\t&& find /usr/local -depth \\\n\t\t\\( \\\n\t\t\t\\( -type d -a \\( -name test -o -name tests \\) \\) \\\n\t\t\t-o \\\n\t\t\t\\( -type f -a \\( -name '*.pyc' -o -name '*.pyo' \\) \\) \\\n\t\t\\) -exec rm -rf '{}' + \\\n\t&& rm -rf /usr/src/python \\\n\t\\\n\t&& python3 --version\n\n# make some useful symlinks that are expected to exist\nRUN cd /usr/local/bin \\\n\t&& ln -s idle3 idle \\\n\t&& ln -s pydoc3 pydoc \\\n\t&& ln -s python3 python \\\n\t&& ln -s python3-config python-config\n\n# if this is called \"PIP_VERSION\", pip explodes with \"ValueError: invalid truth value '<VERSION>'\"\nENV PYTHON_PIP_VERSION 19.2.3\n# https://github.com/pypa/get-pip\nENV PYTHON_GET_PIP_URL https://github.com/pypa/get-pip/raw/309a56c5fd94bd1134053a541cb4657a4e47e09d/get-pip.py\nENV PYTHON_GET_PIP_SHA256 57e3643ff19f018f8a00dfaa6b7e4620e3c1a7a2171fd218425366ec006b3bfe\n\nRUN set -ex; \\\n\n\twget -O get-pip.py \"$PYTHON_GET_PIP_URL\"; \\\n\techo \"$PYTHON_GET_PIP_SHA256  *get-pip.py\" | sha256sum --check --strict -; \\\n\n\tpython get-pip.py \\\n\t\t--disable-pip-version-check \\\n\t\t--no-cache-dir \\\n\t\t\"pip==$PYTHON_PIP_VERSION\" \\\n\t; \\\n\tpip --version; \\\n\n\tfind /usr/local -depth \\\n\t\t\\( \\\n\t\t\t\\( -type d -a \\( -name test -o -name tests \\) \\) \\\n\t\t\t-o \\\n\t\t\t\\( -type f -a \\( -name '*.pyc' -o -name '*.pyo' \\) \\) \\\n\t\t\\) -exec rm -rf '{}' +; \\\n\trm -f get-pip.py\n\n\n#################\nRUN python3.6 -m ensurepip\n\nRUN python3.6 -m pip install tornado==5.0.2\nRUN python3.6 -m pip install boto3\nRUN python3.6 -m pip install requests\n\nRUN python3.6 -m pip install kafka-python\nRUN python3.6 -m pip install confluent-kafka\n\nRUN python3.6 -m pip install kafka-utils\n\nRUN python3.6 -m pip install pprint\n\nRUN python3.6 -m pip install networkx\nRUN python3.6 -m pip install gunicorn\n\nRUN python3.6 -m pip install librosa\nRUN python3.6 -m pip install pandas==0.24.2\nRUN python3.6 -m pip install pyhdb==0.3.4\n\nRUN python3.6 -m pip install avro-python3\nRUN python3.6 -m pip install matplotlib\nRUN python3.6 -m pip install pillow\n\nRUN python3.6 -m pip install tensorflow==1.9 numpy==1.16.4\n\nRUN python3.6 -m pip install keras==2.2.0\nRUN python3.6 -m pip install pydub\nRUN python3.6 -m pip install libmagic\n\nRUN apt-get update && apt-get install --no-install-recommends -y libsndfile1 && rm -rf /var/lib/apt/lists/*;\nRUN apt-get update && apt-get install --no-install-recommends -y ffmpeg python3-magic && rm -rf /var/lib/apt/lists/*;\n\nRUN pip install --no-cache-dir scipy sklearn hmmlearn simplejson eyed3\nRUN git clone https://github.com/tyiannak/pyAudioAnalysis.git\nRUN pip install --no-cache-dir -e pyAudioAnalysis/\n"
}