diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/getslash/backslash/docker/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/getslash/backslash/docker/Dockerfile/repaired.Dockerfile
index e982206..40e2422 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/getslash/backslash/docker/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/getslash/backslash/docker/Dockerfile/repaired.Dockerfile
@@ -1,9 +1,9 @@
 FROM node:8 as frontend-builder
 # build frontend
-RUN npm install -g ember-cli
+RUN npm install -g ember-cli && npm cache clean --force;
 
 ADD ./webapp/ /frontend/
-RUN cd /frontend/ && yarn install
+RUN cd /frontend/ && yarn install && yarn cache clean;
 RUN cd /frontend/ && node_modules/.bin/ember build --environment production
 
 FROM ekidd/rust-musl-builder:stable as rust-builder
@@ -22,13 +22,13 @@ ENV LANG C.UTF-8
 ENV DEBIAN_FRONTEND noninteractive
 
 RUN apt-get update
-RUN apt-get -y install build-essential software-properties-common libpq-dev nginx curl redis-server gcc sudo libsasl2-dev libldap2-dev wget git
+RUN apt-get -y --no-install-recommends install build-essential software-properties-common libpq-dev nginx curl redis-server gcc sudo libsasl2-dev libldap2-dev wget git && rm -rf /var/lib/apt/lists/*;
 
 
 # nginx
 RUN add-apt-repository ppa:chris-lea/nginx-devel
 RUN apt-get update
-RUN apt-get -y install nginx
+RUN apt-get -y --no-install-recommends install nginx && rm -rf /var/lib/apt/lists/*;
 
 RUN rm -rf /etc/nginx/conf.d/* /etc/nginx/sites-enabled/*
 
@@ -36,7 +36,7 @@ RUN ln -sf /dev/stdout /var/log/nginx/access.log && ln -sf /dev/stderr /var/log/
 
 RUN add-apt-repository ppa:deadsnakes/ppa
 RUN apt-get update
-RUN apt-get install -y $PYTHON_EXECUTABLE $PYTHON_EXECUTABLE-dev $PYTHON_EXECUTABLE-distutils
+RUN apt-get install --no-install-recommends -y $PYTHON_EXECUTABLE $PYTHON_EXECUTABLE-dev $PYTHON_EXECUTABLE-distutils && rm -rf /var/lib/apt/lists/*;
 
 RUN wget https://bootstrap.pypa.io/get-pip.py -O /tmp/get-pip.py
 RUN $PYTHON_EXECUTABLE /tmp/get-pip.py
@@ -49,7 +49,7 @@ RUN wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSI
     && tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz \
     && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
 
-RUN pip install pipenv
+RUN pip install --no-cache-dir pipenv
 
 VOLUME /conf
 VOLUME /uploads