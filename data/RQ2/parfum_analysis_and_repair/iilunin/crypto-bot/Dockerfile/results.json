{
  "startTime": 1674250513794,
  "endTime": 1674250514643,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 2,
        "columnEnd": 27
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 2,
        "columnEnd": 27
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 2,
        "columnEnd": 27
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#########################\n### build environment ###\n#########################\n\n# base image\nFROM node:12 as builder\n\n# install chrome for protractor tests\n#RUN wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -\n#RUN sh -c 'echo \"deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main\" >> /etc/apt/sources.list.d/google.list'\n#RUN apt-get update && apt-get install -yq google-chrome-stable\n\n# set working directory\nRUN mkdir /usr/src/app && rm -rf /usr/src/app\nWORKDIR /usr/src/app\n\n# add `/usr/src/app/node_modules/.bin` to $PATH\nENV PATH /usr/src/app/node_modules/.bin:$PATH\n\n# install and cache app dependencies\nRUN npm install -g npm && npm cache clean --force;\nCOPY ./admin/package.json /usr/src/app/package.json\nCOPY ./admin/package-lock.json /usr/src/app/package-lock.json\nRUN npm install && npm cache clean --force;\nRUN npm install -g @angular/cli && npm cache clean --force;\n\n# add app\nCOPY ./admin /usr/src/app\n\n# run tests\n#RUN ng test --watch=false\n\n# generate build\n#RUN npm run lint && \\ --depricated\n#RUN npm run build-prod\nRUN ng build --prod --output-path app_docker\n\n##################\n### production ###\n##################\nFROM python:3.7-slim\nMAINTAINER Igor Iliunin <ilunin.igor@gmail.com>\n\nRUN mkdir -p /usr/src/app && rm -rf /usr/src/app\n\nWORKDIR /usr/src/app\n\nENV \\\n  TRADE_DIR=/usr/src/trades \\\n  TRADE_COMPLETED_DIR=/usr/src/complete_trades \\\n  CONF_DIR=/usr/src/configs\n  LOGS_DIR=/usr/src/logs\n\nCOPY requirements.txt /usr/src/app/\n\nRUN \\\n  apt-get update && \\\n  apt-get install -y && \\\n  apt-get install --no-install-recommends -y tzdata && \\\n  pip install --no-cache-dir --upgrade pip && \\\n  pip install --no-cache-dir -r requirements.txt && rm -rf /var/lib/apt/lists/*;\n\nVOLUME [\"/usr/src/trades\", \"/usr/src/configs\"]\n\nCOPY . /usr/src/app\n#COPY --from=builder /usr/src/app/dist/admin /usr/src/app/API/templates\nCOPY --from=bot-fe /usr/src/app/release /usr/src/app/API/templates\n\nENV TZ=America/New_York\nRUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone\n\nEXPOSE 3000\nCMD [\"python3\", \"main.py\", \"api\"]\n"
}