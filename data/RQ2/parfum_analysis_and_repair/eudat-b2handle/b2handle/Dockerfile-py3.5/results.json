{
  "startTime": 1674249142697,
  "endTime": 1674249144207,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 55,
        "lineEnd": 57,
        "columnStart": 11,
        "columnEnd": 31
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 11,
        "columnEnd": 76
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM       debian:jessie\n\n# See https://github.com/docker-library/python/blob/master/3.5/Dockerfile\n\n# ensure local python is preferred over distribution python\nENV PATH /usr/local/bin:$PATH\n\n# http://bugs.python.org/issue19846\n# > At the moment, setting \"LANG=C\" on a Linux system *fundamentally breaks Python 3*, and that's not OK.\nENV LANG C.UTF-8\n\n# runtime dependencies\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n           ca-certificates \\\n           wget \\\n           autoconf \\\n           automake \\\n           bzip2 \\\n           file \\\n           g++ \\\n           gcc \\\n           libssl-dev \\\n           libtool \\\n           make \\\n           patch \\\n           xz-utils \\\n           tcl \\\n           tk \\\n        && rm -rf /var/lib/apt/lists/*\n\nENV GPG_KEY 97FC712E4C024BBEA48A61ED3A5CA953F73C700D\nENV PYTHON_VERSION 3.5.3\n\n# if this is called \"PIP_VERSION\", pip explodes with \"ValueError: invalid truth value '<VERSION>'\"\nENV PYTHON_PIP_VERSION 9.0.1\n\nRUN set -ex \\\n        && buildDeps=' \\\n                tcl-dev \\\n                tk-dev \\\n        ' \\\n        && apt-get update && apt-get install -y $buildDeps --no-install-recommends && rm -rf /var/lib/apt/lists/* \\\n        \\\n        && wget -O python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\" \\\n        && wget -O python.tar.xz.asc \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\" \\\n        && export GNUPGHOME=\"$(mktemp -d)\" \\\n        && gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \"$GPG_KEY\" \\\n        && gpg --batch --verify python.tar.xz.asc python.tar.xz \\\n        && rm -r \"$GNUPGHOME\" python.tar.xz.asc \\\n        && mkdir -p /usr/src/python \\\n        && tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \\\n        && rm python.tar.xz \\\n\n        && cd /usr/src/python \\\n        && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n                --enable-loadable-sqlite-extensions \\\n                --enable-shared \\\n        && make -j$(nproc) \\\n        && make install \\\n        && ldconfig \\\n\n# explicit path to \"pip3\" to ensure distribution-provided \"pip3\" cannot interfere\n        && if [ ! -e /usr/local/bin/pip3 ]; then : \\\n                && wget -O /tmp/get-pip.py 'https://bootstrap.pypa.io/get-pip.py' \\\n                && python3 /tmp/get-pip.py \"pip==$PYTHON_PIP_VERSION\" \\\n                && rm /tmp/get-pip.py \\\n        ; fi \\\n# we use \"--force-reinstall\" for the case where the version of pip we're trying to install is the same as the version bundled with Python\n# (\"Requirement already up-to-date: pip==8.1.2 in /usr/local/lib/python3.6/site-packages\")\n# https://github.com/docker-library/python/pull/143#issuecomment-241032683\n        && pip3 install --no-cache-dir --upgrade --force-reinstall \"pip==$PYTHON_PIP_VERSION\" \\\n# then we use \"pip list\" to ensure we don't have more than one pip version installed\n# https://github.com/docker-library/python/pull/100\n        && [ \"$(pip list |tac|tac| awk -F '[ ()]+' '$1 == \"pip\" { print $2; exit }')\" = \"$PYTHON_PIP_VERSION\" ] \\\n\n        && find /usr/local -depth \\\n                \\( \\\n                        \\( -type d -a -name test -o -name tests \\) \\\n                        -o \\\n                        \\( -type f -a -name '*.pyc' -o -name '*.pyo' \\) \\\n                \\) -exec rm -rf '{}' + \\\n        && apt-get purge -y --auto-remove $buildDeps \\\n        && rm -rf /usr/src/python ~/.cache\n\n# make some useful symlinks that are expected to exist\nRUN cd /usr/local/bin \\\n        && { [ -e easy_install ] || ln -s easy_install-* easy_install; } \\\n        && ln -s idle3 idle \\\n        && ln -s pydoc3 pydoc \\\n        && ln -s python3 python \\\n        && ln -s python3-config python-config\n\nADD        . /opt/B2HANDLE\n\nWORKDIR    /opt/B2HANDLE\n\nRUN        python setup.py install\n"
}