{
  "startTime": 1674252453380,
  "endTime": 1674252454105,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 18,
        "columnEnd": 74
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 18,
        "columnEnd": 48
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 18,
        "columnEnd": 74
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 18,
        "columnEnd": 48
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG base_image\nARG builder_image=concourse/golang-builder\n\nFROM ${builder_image} as builder\nWORKDIR /src\nCOPY . .\nRUN go mod download\nRUN go build -o /assets/out github.com/concourse/pool-resource/cmd/out\nRUN set -e; for pkg in $(go list ./...); do \\\n\t\tgo test -o \"/tests/$(basename $pkg).test\" -c $pkg; \\\n\tdone\n\nFROM ${base_image} AS resource\nRUN apt update && apt upgrade -y -o Dpkg::Options::=\"--force-confdef\"\nRUN apt update && apt install --no-install-recommends -y jq git make g++ libssl-dev openssh-client && rm -rf /var/lib/apt/lists/*;\nRUN git config --global user.email \"git@localhost\"\nRUN git config --global user.name \"git\"\n\nADD assets/ /opt/resource/\nRUN chmod +x /opt/resource/*\nCOPY --from=builder /assets /opt/go\nRUN chmod +x /opt/go/out\n\nWORKDIR /root\nRUN git clone https://github.com/proxytunnel/proxytunnel.git && \\\n    cd proxytunnel && \\\n    make -j4 && \\\n    install -c proxytunnel /usr/bin/proxytunnel && \\\n    cd .. && \\\n    rm -rf proxytunnel\n\nFROM resource AS tests\nCOPY --from=builder /tests /go/resource-tests/\nRUN set -e; for test in /go/resource-tests/*.test; do \\\n\t\t$test; \\\n\tdone\nADD test/ /opt/resource-tests\nRUN /opt/resource-tests/all.sh\n\nFROM resource AS integrationtests\nRUN apt update && apt install --no-install-recommends -y squid net-tools && rm -rf /var/lib/apt/lists/*;\nADD test/ /opt/resource-tests/test\nADD integration-tests /opt/resource-tests/integration-tests\nRUN /opt/resource-tests/integration-tests/integration.sh\n\nFROM resource\n"
}