{
  "startTime": 1674247966989,
  "endTime": 1674247967905,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 48
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG base_image=alpine:latest\nARG builder_image=concourse/golang-builder\n\nFROM ${builder_image} AS builder\nCOPY . $GOPATH/src/github.com/concourse/github-release-resource\nWORKDIR $GOPATH/src/github.com/concourse/github-release-resource\nENV CGO_ENABLED 0\nRUN go mod vendor\nRUN go build -o /assets/out github.com/concourse/github-release-resource/cmd/out\nRUN go build -o /assets/in github.com/concourse/github-release-resource/cmd/in\nRUN go build -o /assets/check github.com/concourse/github-release-resource/cmd/check\nRUN set -e; for pkg in $(go list ./...); do \\\n\t\tgo test -o \"/tests/$(basename $pkg).test\" -c $pkg; \\\n\tdone\n\nFROM ${base_image} AS resource\nRUN apk update && apk upgrade\nRUN apk add --no-cache --update bash tzdata ca-certificates\nCOPY --from=builder /assets /opt/resource\n\nFROM resource AS tests\nCOPY --from=builder /tests /tests\nRUN set -e; for test in /tests/*.test; do \\\n\t\t$test; \\\n\tdone\n\nFROM resource\n"
}