{
  "startTime": 1674255963830,
  "endTime": 1674255965187,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 40,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 54,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 59,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 41,
        "columnEnd": 88
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 78
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 4,
        "columnEnd": 79
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 4,
        "columnEnd": 100
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 90,
        "lineEnd": 90,
        "columnStart": 4,
        "columnEnd": 107
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 73,
        "lineEnd": 73,
        "columnStart": 8,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 16,
        "columnStart": 22,
        "columnEnd": 17
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 22,
        "columnEnd": 54
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 22,
        "columnEnd": 47
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 22,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 22,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 85,
        "lineEnd": 85,
        "columnStart": 22,
        "columnEnd": 72
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 16,
        "columnStart": 22,
        "columnEnd": 17
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 22,
        "columnEnd": 54
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 22,
        "columnEnd": 47
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 22,
        "columnEnd": 45
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 22,
        "columnEnd": 50
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 22,
        "columnEnd": 90
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 85,
        "lineEnd": 85,
        "columnStart": 22,
        "columnEnd": 72
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG base_image=concourse/golang-builder\nFROM ${base_image}\n\n# enable CGO so we can go test with -race\nENV CGO_ENABLED=1\n\n# basic setup for adding new apt sources and installing packages\nRUN apt-get update && apt-get -y --no-install-recommends install \\\n      apt-transport-https \\\n      ca-certificates \\\n      curl \\\n      iproute2 \\\n      gnupg2 \\\n      software-properties-common \\\n      unzip \\\n      file \\\n      btrfs-progs && rm -rf /var/lib/apt/lists/*;\n\n# install PostgreSQL for DB tests\nENV DEBIAN_FRONTEND noninteractive\nRUN curl -f https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add -\nRUN add-apt-repository \"deb http://apt.postgresql.org/pub/repos/apt/ $(lsb_release -cs)-pgdg main\"\nRUN apt-get update && apt-get -y --no-install-recommends install postgresql-13 && rm -rf /var/lib/apt/lists/*;\nENV PATH $PATH:/usr/lib/postgresql/13/bin\n\n# install Node 16.x\nRUN curl -f -sL https://deb.nodesource.com/setup_16.x | bash -\nRUN apt-get update && apt-get install --no-install-recommends -y nodejs && rm -rf /var/lib/apt/lists/*;\n\n# install Yarn for web UI tests\nRUN curl -fsSL https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -\nRUN add-apt-repository \"deb https://dl.yarnpkg.com/debian/ stable main\"\nRUN apt-get update && apt-get -y --no-install-recommends install yarn && rm -rf /var/lib/apt/lists/*;\n\n# install Docker\nRUN curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -\nRUN add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\"\nRUN apt-get update && apt-get -y --no-install-recommends install docker-ce && rm -rf /var/lib/apt/lists/*;\n\n# install Docker Compose\nRUN curl -f -L \"https://github.com/docker/compose/releases/download/1.27.4/docker-compose-$(uname -s)-$(uname -m)\" \\\n      -o /usr/local/bin/docker-compose && \\\n      chmod +x /usr/local/bin/docker-compose\n\n# install Chrome for Puppeteer (watsjs/upgrade/downgrade/smoke)\nRUN curl -fsSL https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -\nRUN add-apt-repository \"deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main\"\nRUN apt-get update && apt-get -y install google-chrome-stable xvfb --no-install-recommends && rm -rf /var/lib/apt/lists/*;\n# ensure that Puppeteer uses this Chrome instead of downloading on demand;\n# this makes us resilient to breaking changes to the APT dependencies\nENV PUPPETEER_SKIP_DOWNLOAD=true \\\n    PUPPETEER_EXECUTABLE_PATH=/usr/bin/google-chrome-stable\n\n# install BOSH CLI for bosh-smoke, bosh-topgun\nRUN curl -f -L \"https://github.com/cloudfoundry/bosh-cli/releases/download/v6.3.0/bosh-cli-6.3.0-linux-amd64\" \\\n      -o /usr/local/bin/bosh && \\\n      chmod +x /usr/local/bin/bosh\n\n# install kubectl for k8s-related jobs\nRUN curl -f -L \"https://dl.k8s.io/release/$( curl -f -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl\" \\\n      -o /usr/local/bin/kubectl && \\\n      chmod +x /usr/local/bin/kubectl\n\n# install helm for k8s-related jobs\nRUN curl -f https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash\n\n# install yq\nRUN wget https://github.com/mikefarah/yq/releases/download/3.4.0/yq_linux_amd64 -O /usr/bin/yq &&\\\n    chmod +x /usr/bin/yq\n\n# TODO: tech-debt for maintaining 6.3.x version of the chart which uses Helm v2\n# Remove when 6.3.x no longer needs to be supported\nRUN curl -f https://get.helm.sh/helm-v2.16.12-linux-amd64.tar.gz -o helm-v2.tar.gz && \\\n        tar xzf helm-v2.tar.gz && \\\n        mv linux-amd64/helm /usr/local/bin/helm2 && rm helm-v2.tar.gz\n\n# install Vault for bosh-topgun\nRUN curl -f -L https://releases.hashicorp.com/vault/0.7.3/vault_0.7.3_linux_amd64.zip -o /tmp/vault.zip && \\\n      unzip /tmp/vault.zip -d /usr/local/bin && \\\n      rm /tmp/vault.zip\n\n# install Terraform, ssh and jq for bin-smoke\nRUN curl -fsSL https://releases.hashicorp.com/terraform/0.14.5/terraform_0.14.5_linux_amd64.zip -o /tmp/terraform.zip && \\\n      unzip /tmp/terraform.zip -d /usr/local/bin && \\\n      rm /tmp/terraform.zip\nRUN apt-get update && apt-get -y --no-install-recommends install jq openssh-client libnss3-tools && rm -rf /var/lib/apt/lists/*;\n\n# install Let's Encrypt staging cert for 'curl', setting it an env var just so\n# it's easier to discover if/when this changes again\nENV LETS_ENCRYPT_STAGING_CA_CERT=/usr/local/share/ca-certificates/letsencrypt-stg-root-x1.crt\nRUN curl -f https://letsencrypt.org/certs/staging/letsencrypt-stg-root-x1.pem -o $LETS_ENCRYPT_STAGING_CA_CERT && \\\n      update-ca-certificates\n\n# install Let's Encrypt staging cert to nssdb for Chrome\nRUN mkdir -p /root/.pki/nssdb && \\\n  chmod 700 /root/.pki/nssdb && \\\n  certutil -N -d sql:/root/.pki/nssdb --empty-password && \\\n  certutil -A \\\n    -n \"LetsEncrypt Staging Fake Root\" \\\n    -t \"TCu,Cu,Tu\" \\\n    -i $LETS_ENCRYPT_STAGING_CA_CERT \\\n    -d sql:/root/.pki/nssdb\n\n# install goimports CLI for formatting go files\nRUN go install golang.org/x/tools/cmd/goimports@latest\n"
}