{
  "startTime": 1674215567814,
  "endTime": 1674215568529,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 5,
        "columnEnd": 29
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 32
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 32,
        "columnEnd": 48
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 28,
        "columnEnd": 44
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 36,
        "columnEnd": 52
      }
    }
  ],
  "repairedDockerfile": "# ===== Builder =====\n# ===================\nFROM node:10-alpine AS builder\n\nRUN apk --no-cache add \\\n  g++ make python git \\\n  && yarn global add node-gyp \\\n  && rm -rf /var/cache/apk/* && yarn cache clean;\n\nWORKDIR /builder/\n\n# Cache client's package\nADD package.json    .\nADD yarn.lock       .\nRUN yarn --pure-lockfile && yarn cache clean;\n\n# Build\nADD .env.production .\nADD . .\nRUN yarn build --mode production && yarn cache clean;\n\n# ===== Image =====\n# ==================\n\n## Client Image\nFROM nginx:alpine AS frontend\nCOPY nginx.conf /etc/nginx/nginx.conf\nCOPY --from=builder /builder/dist/ /usr/share/nginx/html\n"
}