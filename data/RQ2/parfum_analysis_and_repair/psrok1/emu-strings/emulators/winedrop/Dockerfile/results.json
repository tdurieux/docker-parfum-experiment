{
  "startTime": 1674251441909,
  "endTime": 1674251443143,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 21,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 50,
        "columnEnd": 148
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 21,
        "columnEnd": 50
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 50,
        "columnEnd": 148
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Building monitor image\nFROM i386/ubuntu AS winedrop-build-monitor\nRUN apt update -y && apt -y --no-install-recommends install mingw-w64 make && rm -rf /var/lib/apt/lists/*;\nADD ./monitor /opt/monitor\nWORKDIR /opt/monitor\nRUN make\n\n# STAGE 2 === === === ===\n# Building emulator image\nFROM ubuntu\nRUN dpkg --add-architecture i386 && apt update && apt-get install --no-install-recommends -y gcc-multilib python-pip libxml2:i386 libgnutls30:i386 xvfb:i386 wget cabextract && rm -rf /var/lib/apt/lists/*;\n# Install Python dependencies for emulator and patches\nADD ./emulator/requirements.txt /opt/emulator/requirements.txt\nRUN pip install --no-cache-dir -r /opt/emulator/requirements.txt\nADD ./patches/requirements.txt /opt/patches/requirements.txt\nRUN pip install --no-cache-dir -r /opt/patches/requirements.txt\n# Switch to unprivileged user\nRUN groupadd -g 9999 emustrings && \\\n    useradd -r -d /opt -u 9999 -g emustrings emustrings && \\\n    chown -R emustrings:emustrings /opt\nUSER emustrings\n# Initialize wine-prefix\nWORKDIR /opt/wine-dist\nCOPY --from=psrok1/wine-modified /opt/wine-dist .\nENV WINEDLLOVERRIDES=\"mscoree,mshtml=\"\nENV WINEPREFIX=\"/opt/wine-prefix\"\nENV WINE=\"/opt/wine-dist/usr/local/bin/wine\"\nRUN echo `head -c 500 /dev/urandom | tr -dc 'a-zA-Z0-9_' | fold -w 8 | head -n 1` > /opt/.username\nRUN export USER=`cat /opt/.username` \\\n    && xvfb-run -a $WINE wineboot -u ; \\\n    while [ ! -z `pidof wineserver` ]; \\\n        do ( echo \"Waiting for wineserver to exit...\"; sleep .6 ); done\n# Copy winedrop.dll from winedrop-build-monitor and apply patches\nADD ./patches /opt/patches\nWORKDIR /opt/patches\nCOPY --from=winedrop-build-monitor /opt/monitor/winedrop.dll .\nRUN export USER=`cat /opt/.username` && \\\n    wget -O- https://raw.githubusercontent.com/Winetricks/winetricks/ccc1c48ffa750c18eec1da317ac392934b68844f/src/winetricks | \\\n    sed '0,/WINETRICKS_LIB/ s/WINETRICKS_LIB/no_WINETRICKS_LIB/' > winetricks && \\\n    chmod +x winetricks && \\\n    xvfb-run -a ./patch.sh && \\\n    rm winetricks\n# Set-up emulator daemon\nADD ./emulator /opt/emulator\nWORKDIR /opt/analysis\nENTRYPOINT /usr/bin/python /opt/emulator/run.py\n"
}