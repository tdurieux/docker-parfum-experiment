{
  "startTime": 1674216484099,
  "endTime": 1674216485327,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 22,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 21,
        "columnStart": 2,
        "columnEnd": 8
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 22,
        "columnEnd": 45
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ruby:2.7-slim\n\nLABEL maintainer=\"Josh Bielick <jbielick@adwerx.com>\"\n\nARG BUNDLER_VERSION=\"2.3.8\"\nARG ESLINT_VERSION=\"7.32.0\"\nARG STYLELINT_VERSION=\"13.13.1\"\nARG NODE_VERSION=14\n\nRUN apt-get update && apt-get install --no-install-recommends -y curl && rm -rf /var/lib/apt/lists/*;\nRUN curl -f -sL https://deb.nodesource.com/setup_${NODE_VERSION}.x | bash -\n\nRUN apt-get update && \\\n  apt-get install --no-install-recommends -y \\\n  ruby-dev \\\n  build-essential \\\n  cmake \\\n  git \\\n  pkg-config \\\n  openssl \\\n  yamllint \\\n  nodejs \\\n  && rm -rf /var/lib/apt/lists/*\n\nRUN gem install bundler --version \"${BUNDLER_VERSION}\"\nRUN npm install -g eslint@${ESLINT_VERSION} && npm cache clean --force;\nRUN npm install stylelint@${STYLELINT_VERSION} && npm cache clean --force;\n\nWORKDIR /runner\n\nCOPY Gemfile* ./\n\nRUN bundle --retry 4\n\nENV BUNDLE_GEMFILE /runner/Gemfile\n\nCOPY . ./\n\nWORKDIR /data\n\nENTRYPOINT [\"/runner/pronto\"]\n"
}