{
  "startTime": 1674248594757,
  "endTime": 1674248596172,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 127
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 127
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 53
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 127
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 69
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 53
      }
    }
  ],
  "repairedDockerfile": "# This Dockerfile is meant to test several OCaml versions.\n# It must be loaded from the everest repository root\n# (NOT from the directory that contains the Dockerfile)\n\nFROM ubuntu:22.04\n\n# Install the dependencies of Project Everest\nENV DEBIAN_FRONTEND=noninteractive\nRUN apt-get update\nRUN apt-get --yes install --no-install-recommends opam gcc binutils make m4 git time gnupg ca-certificates sudo cmake curl wget && rm -rf /var/lib/apt/lists/*;\n\n# Install .NET Core, following https://docs.microsoft.com/en-us/dotnet/core/install/linux-ubuntu\nRUN apt install --no-install-recommends -y gnupg ca-certificates wget && \\\n    wget https://packages.microsoft.com/config/ubuntu/22.04/packages-microsoft-prod.deb -O packages-microsoft-prod.deb && \\\n    dpkg -i packages-microsoft-prod.deb && \\\n    rm packages-microsoft-prod.deb && \\\n    apt-get update && \\\n    apt-get install --no-install-recommends -y apt-transport-https && \\\n    apt-get update && \\\n    apt-get --yes install --no-install-recommends \\\n    dotnet-sdk-6.0 && rm -rf /var/lib/apt/lists/*;\n\n# Install NodeJS 16\nRUN curl -fsSL https://deb.nodesource.com/setup_16.x | bash -\nRUN apt-get install -y --no-install-recommends nodejs && rm -rf /var/lib/apt/lists/*;\n\n# Create a new user and give them sudo rights\nRUN useradd -d /home/test test\nRUN echo 'test ALL=NOPASSWD: ALL' >> /etc/sudoers\nRUN mkdir /home/test\nRUN chown test:test /home/test\nUSER test\nENV HOME /home/test\nWORKDIR $HOME\nSHELL [\"/bin/bash\", \"--login\", \"-c\"]\n\n# Install OCaml\nENV OPAMYES 1\nARG OCAML_VERSION=4.12.0\nRUN opam init --compiler=$OCAML_VERSION --disable-sandboxing\nRUN opam env --set-switch | tee --append $HOME/.profile $HOME/.bashrc $HOME/.bash_profile\n\n# Add Everest files and projects\n\n# Alternative 1: use the current clone\nADD --chown=test . .\nENV EVEREST_DIR $HOME\n\n# Alternative 2: use a fresh clone\n# ENV EVEREST_BRANCH=master\n# RUN git clone --branch $EVEREST_BRANCH https://github.com/project-everest/everest everest\n# ENV EVEREST_DIR $HOME/everest\n\n# Clone Everest subprojects\nWORKDIR $EVEREST_DIR\nRUN ./everest --yes reset\n\n# Check that all Everest dependencies are correctly installed\nARG EVEREST_THREADS=24\nRUN ./everest --yes -j $EVEREST_THREADS check\n\n# Make Everest\nRUN ./everest --yes -j $EVEREST_THREADS make\n\n# Test Everest\nRUN ./everest --yes -j $EVEREST_THREADS test\n"
}