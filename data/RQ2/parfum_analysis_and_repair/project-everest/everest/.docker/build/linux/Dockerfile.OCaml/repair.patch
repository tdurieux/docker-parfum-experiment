diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/project-everest/everest/.docker/build/linux/Dockerfile.OCaml b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/project-everest/everest/.docker/build/linux/Dockerfile.OCaml/repaired.Dockerfile
index 84b2439..01f517a 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/project-everest/everest/.docker/build/linux/Dockerfile.OCaml
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/project-everest/everest/.docker/build/linux/Dockerfile.OCaml/repaired.Dockerfile
@@ -7,22 +7,22 @@ FROM ubuntu:22.04
 # Install the dependencies of Project Everest
 ENV DEBIAN_FRONTEND=noninteractive
 RUN apt-get update
-RUN apt-get --yes install --no-install-recommends opam gcc binutils make m4 git time gnupg ca-certificates sudo cmake curl wget
+RUN apt-get --yes install --no-install-recommends opam gcc binutils make m4 git time gnupg ca-certificates sudo cmake curl wget && rm -rf /var/lib/apt/lists/*;
 
 # Install .NET Core, following https://docs.microsoft.com/en-us/dotnet/core/install/linux-ubuntu
-RUN apt install -y gnupg ca-certificates wget && \
+RUN apt install --no-install-recommends -y gnupg ca-certificates wget && \
     wget https://packages.microsoft.com/config/ubuntu/22.04/packages-microsoft-prod.deb -O packages-microsoft-prod.deb && \
     dpkg -i packages-microsoft-prod.deb && \
     rm packages-microsoft-prod.deb && \
     apt-get update && \
-    apt-get install -y apt-transport-https && \
+    apt-get install --no-install-recommends -y apt-transport-https && \
     apt-get update && \
     apt-get --yes install --no-install-recommends \
-    dotnet-sdk-6.0
+    dotnet-sdk-6.0 && rm -rf /var/lib/apt/lists/*;
 
 # Install NodeJS 16
 RUN curl -fsSL https://deb.nodesource.com/setup_16.x | bash -
-RUN apt-get install -y --no-install-recommends nodejs
+RUN apt-get install -y --no-install-recommends nodejs && rm -rf /var/lib/apt/lists/*;
 
 # Create a new user and give them sudo rights
 RUN useradd -d /home/test test
@@ -37,7 +37,7 @@ SHELL ["/bin/bash", "--login", "-c"]
 # Install OCaml
 ENV OPAMYES 1
 ARG OCAML_VERSION=4.12.0
-RUN opam init --compiler=$OCAML_VERSION --disable-sandboxing 
+RUN opam init --compiler=$OCAML_VERSION --disable-sandboxing
 RUN opam env --set-switch | tee --append $HOME/.profile $HOME/.bashrc $HOME/.bash_profile
 
 # Add Everest files and projects