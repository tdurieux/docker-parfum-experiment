{
  "startTime": 1674252931321,
  "endTime": 1674252932193,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 7
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 7
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG VERSION_UBUNTU=latest\nFROM ubuntu:$VERSION_UBUNTU\nMAINTAINER KINOSHITA minoru <5021543+minoruta@users.noreply.github.com>\n\n#\n#   Essential arguments\n#\nARG VERSION_ASTERISK\nARG VERSION_MONGOC\nARG VERSION_LIBSRTP\n\nSHELL [\"/bin/bash\", \"-c\"]\n\nWORKDIR /root\nRUN  mkdir src\nCOPY src/* src/\nRUN  mkdir ast_mongo\n\nRUN apt -qq update \\\n&& apt -qq --no-install-recommends install -y \\\n    libssl-dev \\\n    libsasl2-dev \\\n    libncurses5-dev \\\n    libnewt-dev \\\n    libxml2-dev \\\n    libsqlite3-dev \\\n    libjansson-dev \\\n    libcurl4-openssl-dev \\\n    libedit-dev \\\n    pkg-config \\\n    build-essential \\\n    cmake \\\n    autoconf \\\n    uuid-dev \\\n    wget \\\n    file \\\n    git && rm -rf /var/lib/apt/lists/*;\n\n#\n#   Prepare strp\n#\nWORKDIR /root\nRUN wget https://github.com/cisco/libsrtp/archive/v$VERSION_LIBSRTP.tar.gz \\\n&&  tar xzf v$VERSION_LIBSRTP.tar.gz \\\n&&  rm v$VERSION_LIBSRTP.tar.gz \\\n&&  cd libsrtp-$VERSION_LIBSRTP \\\n&& ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" > /dev/null \\\n&& make \\\n&& make install \\\n&& make clean \\\n&& ldconfig \\\n&& cd ..\n\n#\n#   Prepare MongoDB C Driver\n#\nRUN cd $HOME \\\n&&  wget -nv \"https://github.com/mongodb/mongo-c-driver/releases/download/$VERSION_MONGOC/mongo-c-driver-$VERSION_MONGOC.tar.gz\" -O - | tar xzf - \\\n&&  cd mongo-c-driver-$VERSION_MONGOC \\\n&&  function version_gt() { test \"$(printf '%s\\n' \"$@\" | sort -V | head -n 1)\" != \"$1\"; } \\\n&&  if version_gt $VERSION_MONGOC \"1.10\"; then \\\n      mkdir cmake-build; \\\n      cd cmake-build; \\\n      cmake -DENABLE_AUTOMATIC_INIT_AND_CLEANUP=OFF ..; \\\n    else \\\n      ./configure --disable-automatic-init-and-cleanup > /dev/null; \\\n    fi \\\n&&  make all install > make.log \\\n&&  make clean \\\n&&  cd $HOME \\\n&&  tar czf mongo-c-driver-$VERSION_MONGOC.tgz mongo-c-driver-$VERSION_MONGOC \\\n&&  rm -rf mongo-c-driver-$VERSION_MONGOC\n\n#\n#   Build and install Asterisk with patches for ast_mongo\n#\nRUN cd $HOME \\\n&&  wget -nv \"http://downloads.asterisk.org/pub/telephony/asterisk/releases/asterisk-$VERSION_ASTERISK.tar.gz\" -O - | tar -zxf - \\\n&&  cd asterisk-$VERSION_ASTERISK \\\n&&  git config --global user.email \"you@example.com\" \\\n&&  git init &&  git add . &&  git commit . -m \"initial\" \\\n&&  cd $HOME/asterisk-$VERSION_ASTERISK/cdr \\\n&&  cp $HOME/src/cdr_mongodb.c . \\\n&&  git add . \\\n&&  cd $HOME/asterisk-$VERSION_ASTERISK/cel \\\n&&  cp $HOME/src/cel_mongodb.c . \\\n&&  git add . \\\n&&  cd $HOME/asterisk-$VERSION_ASTERISK/res \\\n&&  cp $HOME/src/res_mongodb.c . \\\n&&  cp $HOME/src/res_mongodb.exports.in . \\\n&&  cp $HOME/src/res_config_mongodb.c . \\\n&&  git add . \\\n&&  cd $HOME/asterisk-$VERSION_ASTERISK/include/asterisk \\\n&&  cp $HOME/src/res_mongodb.h . \\\n&&  git add . \\\n&&  cd $HOME/asterisk-$VERSION_ASTERISK \\\n&&  patch -p1 -F3 -i $HOME/src/mongodb.for.asterisk.patch \\\n&&  git diff build_tools/menuselect-deps.in configure.ac makeopts.in > $HOME/ast_mongo/mongodb.for.asterisk.patch \\\n&&  git diff HEAD > $HOME/ast_mongo/ast_mongo-$VERSION_ASTERISK.patch \\\n&&  ./bootstrap.sh \\\n&&  function version_gt() { test \"$(printf '%s\\n' \"$@\" | sort -V | head -n 1)\" != \"$1\"; } \\\n&&  if version_gt $VERSION_ASTERISK \"16\"; then JANSSONBUNDLED=\"--with-jansson-bundled\"; fi \\\n&&  ./configure --disable-xmldoc --with-pjproject-bundled $JANSSONBUNDLED > /dev/null \\\n&&  tar czf $HOME/ast_mongo/asterisk-$VERSION_ASTERISK-config.log.tgz config.log \\\n&&  make all > make.log \\\n&&  make install > install.log \\\n&&  ldconfig /usr/lib \\\n&&  make samples > samples.log \\\n&&  make clean > clean.log\n\n#\n# Copy back the updated patches to host & Launch asterisk\n#\nCMD cp /root/ast_mongo/ast_mongo-* /mnt/ast_mongo/patches/ \\\n&&  asterisk -c > /dev/null\n"
}