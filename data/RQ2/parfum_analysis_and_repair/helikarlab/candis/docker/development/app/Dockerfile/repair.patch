diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/helikarlab/candis/docker/development/app/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/helikarlab/candis/docker/development/app/Dockerfile/repaired.Dockerfile
index d0f39ce..d38e485 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/helikarlab/candis/docker/development/app/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/helikarlab/candis/docker/development/app/Dockerfile/repaired.Dockerfile
@@ -21,7 +21,7 @@ RUN apt-get update \
     python3-dev \
     python3-pip \
     python3-tk \
-    graphviz-dev 
+    graphviz-dev && rm -rf /var/lib/apt/lists/*;
 
 # Installing R...
 RUN mkdir -p ~/.gnupg \
@@ -29,8 +29,8 @@ RUN mkdir -p ~/.gnupg \
     && apt-key adv --keyserver keys.gnupg.net --recv-key 'E19F5F87128899B192B1A2C2AD5F960A256A04AF' \
     && add-apt-repository 'deb https://cloud.r-project.org/bin/linux/debian stretch-cran35/' \
     && apt-get update --fix-missing \
-    && apt-get install -y r-base \
-    \
+    && apt-get install --no-install-recommends -y r-base \
+
     # Installing Java...
     && mkdir -p /usr/share/man/man1 \
     && apt-get install -y --no-install-recommends openjdk-8-jdk \
@@ -38,7 +38,7 @@ RUN mkdir -p ~/.gnupg \
     && apt-get remove -y --purge \
     dirmngr \
     software-properties-common \
-    \
+
     # Removing cache...
     && rm -rf /var/lib/apt/lists/*
 
@@ -51,29 +51,29 @@ RUN cd /app/R \
     && cd ..
 
 # Copy the pip requirements file into the container
-COPY ./requirements-dev.txt  /app/requirements-dev.txt  
+COPY ./requirements-dev.txt  /app/requirements-dev.txt 
 
 # Set default timeout parameter to 100 seconds
 ENV PIP_DEFAULT_TIMEOUT=100
 
 # Install pip packages
 RUN python3 -m pip install --upgrade pip \
-    && pip3 install setuptools wheel \
-    && pip3 install numpy pyyaml   \
-    && pip3 install --no-binary javabridge -r ./requirements-dev.txt
+    && pip3 install --no-cache-dir setuptools wheel \
+    && pip3 install --no-cache-dir numpy pyyaml \
+    && pip3 install --no-cache-dir --no-binary javabridge -r ./requirements-dev.txt
 
 # Copy the package.json and yarn.lock into the container
 COPY ./package.json /app/package.json
 COPY ./yarn.lock    /app/yarn.lock
 
 # Install required npm packages
-RUN yarn install --pure-lockfile
+RUN yarn install --pure-lockfile && yarn cache clean;
 
 # Copy the files from the working directory into the container
 COPY . /app
 
 # Install the candis app and bundle all react files into a single bundle
-RUN pip3 install -e /app \
+RUN pip3 install --no-cache-dir -e /app \
     && yarn build
 
 # Copy processes directory into the container