{
  "startTime": 1674248949437,
  "endTime": 1674248950400,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 7,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 7,
        "columnEnd": 32
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 7,
        "columnEnd": 67
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 74,
        "lineEnd": 74,
        "columnStart": 4,
        "columnEnd": 21
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM  node:alpine AS build\n\nWORKDIR /app\n\nCOPY ./package.json /app/package.json\nCOPY ./yarn.lock    /app/yarn.lock\n\nRUN yarn install --pure-lockfile && yarn cache clean;\n\nCOPY . /app\n\nRUN yarn build\n\nFROM  debian:stretch-slim\n\nLABEL maintainer=\"achillesrasquinha@gmail.com\"\n\nENV APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=true\n\nWORKDIR /app\n\nCOPY ./R /app/R\nCOPY ./requirements.txt /app/requirements.txt\n\nRUN apt-get update \\\n    \\\n    && apt-get install -y --no-install-recommends \\\n    bash \\\n    dirmngr \\\n    apt-transport-https \\\n    software-properties-common \\\n    python3-dev \\\n    python3-pip \\\n    python3-tk \\\n    gnupg2 \\\n    graphviz-dev \\\n    pkg-config \\\n    build-essential \\\n    libreadline-dev \\\n    \\\n    # Install R\n    && mkdir -p ~/.gnupg \\\n    && echo \"disable-ipv6\" >> ~/.gnupg/dirmngr.conf \\\n    && apt-key adv --keyserver keys.gnupg.net --recv-key 'E19F5F87128899B192B1A2C2AD5F960A256A04AF' \\\n    && add-apt-repository 'deb https://cloud.r-project.org/bin/linux/debian stretch-cran35/' \\\n    && apt-get update \\\n    && apt-get install --no-install-recommends -y r-base \\\n    \\\n    # Installing Java...\n    && mkdir -p /usr/share/man/man1 \\\n    && apt-get install -y --no-install-recommends openjdk-8-jdk \\\n    && cd /app/R \\\n    && Rscript setup.R \\\n    && cd .. \\\n    # Install pip packages\n    && python3 -m pip install --upgrade pip \\\n    && pip3 install --no-cache-dir setuptools \\\n    && pip3 install --no-cache-dir numpy pyyaml \\\n    && pip3 install --no-cache-dir --no-binary javabridge -r /app/requirements.txt \\\n\n    # Removing intermediate dependencies\n    && apt-get remove -y --purge \\\n    dirmngr \\\n    apt-transport-https \\\n    software-properties-common \\\n    gnupg2 \\\n    build-essential \\\n    graphviz-dev \\\n\n    # Remove cache\n    && rm -rf /var/lib/apt/lists/*\n\nCOPY . /app\n\nRUN pip3 install --no-cache-dir /app\n\n# Using build-args copy the bundled assets into the app container\nCOPY --from=build /app/src/candis/app/assets/css/styles.min.css /app/src/candis/app/assets/css/styles.min.css\nCOPY --from=build /app/src/candis/app/assets/js/bundle.min.js   /app/src/candis/app/assets/js/bundle.min.js\n\nCOPY ./docker/production/app/start /start\n\nRUN sed -i -e 's/\\r//' /start \\\n    && chmod +x /start\n\nEXPOSE 5000\n\nCMD [\"/start\"]\n"
}