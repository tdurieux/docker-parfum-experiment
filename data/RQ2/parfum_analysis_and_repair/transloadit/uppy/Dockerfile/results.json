{
  "startTime": 1674218577072,
  "endTime": 1674218577814,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 11,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 43
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:16.13.0-alpine as build\n\n# Create link to node on amd64 so that corepack can find it\nRUN if [ \"$(uname -m)\" == \"aarch64\" ]; then mkdir -p /usr/local/sbin/ && ln -s /usr/local/bin/node /usr/local/sbin/node; fi\n\nWORKDIR /app\n\nCOPY package.json .yarnrc.yml /app/\nCOPY .yarn /app/.yarn\nCOPY packages/@uppy/companion /app/packages/@uppy/companion\n\nRUN apk --update --no-cache add --virtual native-dep \\\n  make gcc g++ python3 libgcc libstdc++ git && \\\n  (cd /app && corepack yarn workspaces focus @uppy/companion) && \\\n  apk del native-dep\n\nRUN cd /app && corepack yarn workspace @uppy/companion build\n\n# Now remove all non-prod dependencies for a leaner image\nRUN cd /app && corepack yarn workspaces focus @uppy/companion --production\n\nFROM node:16.13.0-alpine\n\nWORKDIR /app\n\n# copy required files from build stage.\nCOPY --from=build /app/packages/@uppy/companion/bin /app/bin\nCOPY --from=build /app/packages/@uppy/companion/lib /app/lib\nCOPY --from=build /app/packages/@uppy/companion/package.json /app/package.json\nCOPY --from=build /app/packages/@uppy/companion/node_modules /app/node_modules\n\nENV PATH \"${PATH}:/app/node_modules/.bin\"\n\nCMD [\"node\",\"/app/bin/companion\"]\n# This can be overruled later\nEXPOSE 3020\n"
}