{
  "startTime": 1674254848523,
  "endTime": 1674254849456,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 49,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 51,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 63,
        "lineEnd": 64,
        "columnStart": 1,
        "columnEnd": 53
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 73,
        "lineEnd": 74,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 98
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 7,
        "columnStart": 23,
        "columnEnd": 56
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 1,
        "columnEnd": 56
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 7,
        "columnStart": 23,
        "columnEnd": 56
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 1,
        "columnEnd": 56
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 1,
        "columnEnd": 80
      }
    }
  ],
  "repairedDockerfile": "#--------- Generic stuff all our Dockerfiles should start with so we get caching ------------\nFROM tomcat:9.0-jre11-slim\nMAINTAINER thinkWhere<info@thinkwhere.com>\n# Credit: Tim Sutton<tim@linfiniti.com>\n# kartoza/docker-geoserver\n\nRUN apt-get -y update; apt-get -y --no-install-recommends install libapr1-dev \\\n    libssl-dev wget zip curl xsltproc certbot cabextract && rm -rf /var/lib/apt/lists/*;\n\nRUN set -e \\\n    export DEBIAN_FRONTEND=noninteractive \\\n    dpkg-divert --local --rename --add /sbin/initctl \\\n\t# Set JAVA_HOME to /usr/lib/jvm/default-java and link it to OpenJDK installation\n    && ln -s /usr/lib/jvm/java-11-openjdk-amd64 /usr/lib/jvm/default-java \\\n\t&& apt-get clean \\\n\t&& rm -rf /var/lib/apt/lists/*\n\n\n#-------------Application Specific Stuff ----------------------------------------------------\n\nENV JAVA_HOME=/usr/lib/jvm/default-java \\\n\tDEBIAN_FRONTEND=noninteractive \\\n    GEOSERVER_DATA_DIR=/opt/geoserver/data_dir \\\n\tGDAL_SKIP=\"ECW JP2ECW\" \\\n\tGDAL_DATA=/usr/local/gdal-data \\\n\tLD_LIBRARY_PATH=\"$LD_LIBRARY_PATH:/usr/local/apr/lib:/usr/lib:/usr/lib/x86_64-linux-gnu\"\n\n\nRUN mkdir -p ${GEOSERVER_DATA_DIR}\n\nADD resources /tmp/resources\n\n# Optionally remove Tomcat manager, docs, and examples\nARG TOMCAT_EXTRAS=false\nRUN if [ \"$TOMCAT_EXTRAS\" = false ]; then \\\n    rm -rf $CATALINA_HOME/webapps/ROOT && \\\n    rm -rf $CATALINA_HOME/webapps/docs && \\\n    rm -rf $CATALINA_HOME/webapps/examples && \\\n    rm -rf $CATALINA_HOME/webapps/host-manager && \\\n    rm -rf $CATALINA_HOME/webapps/manager; \\\n  fi;\n\n# ---------- GS_Version can be passed in as a parameter ------------\nARG GS_VERSION=2.18.0\n\n# Add GDAL native libraries if the build-arg GDAL_NATIVE = true\n# EWC and JP2ECW are subjected to licence restrictions\nARG GDAL_NATIVE=false\nRUN if [ \"$GDAL_NATIVE\" = true ]; then \\\n    wget --progress=bar https://demo.geo-solutions.it/share/github/imageio-ext/releases/1.1.X/1.1.16/native/gdal/gdal-data.zip \\\n\t-O /tmp/resources/gdal-data.zip && \\\n    wget --progress=bar https://demo.geo-solutions.it/share/github/imageio-ext/releases/1.1.X/1.1.29/native/gdal/linux/gdal192-Ubuntu12-gcc4.6.3-x86_64.tar.gz \\\n\t-O /tmp/resources/gdal192-Ubuntu12-gcc4.6.3-x86_64.tar.gz && \\\n    unzip /tmp/resources/gdal-data.zip -d /usr/local && \\\n    mkdir /usr/local/gdal_native_libs && \\\n    tar -xvf /tmp/resources/gdal192-Ubuntu12-gcc4.6.3-x86_64.tar.gz -C /usr/local/gdal_native_libs; rm /tmp/resources/gdal192-Ubuntu12-gcc4.6.3-x86_64.tar.gz \\\n    apt-get update; \\\n\tapt-get install --no-install-recommends -y gdal-bin libgdal-java --fix-missing; rm -rf /var/lib/apt/lists/*; \\\nfi;\n\n\n# If using GDAL make sure extension is downloaded\nRUN if [ \"$GDAL_NATIVE\" = true ] && [ ! -f /tmp/resources/plugins/geoserver-gdal-plugin.zip ]; then \\\n\twget --progress=bar -c https://downloads.sourceforge.net/project/geoserver/GeoServer/${GS_VERSION}/extensions/geoserver-${GS_VERSION}-gdal-plugin.zip \\\n\t-O /tmp/resources/plugins/geoserver-gdal-plugin.zip; \\\nfi;\n\nWORKDIR $CATALINA_HOME\n\n\n# Fetch the geoserver war file if it\n# is not available locally in the resources dir and\nRUN if [ ! -f /tmp/resources/geoserver.zip ]; then \\\n    wget --progress=bar -c https://downloads.sourceforge.net/project/geoserver/GeoServer/${GS_VERSION}/geoserver-${GS_VERSION}-war.zip \\\n      -O /tmp/resources/geoserver.zip; \\\n    fi; \\\n    unzip /tmp/resources/geoserver.zip -d /tmp/geoserver \\\n    && unzip /tmp/geoserver/geoserver.war -d $CATALINA_HOME/webapps/geoserver \\\n    && rm -rf $CATALINA_HOME/webapps/geoserver/data \\\n    && rm -rf /tmp/geoserver\n\n# Install any plugin zip files in resources/plugins\nRUN if ls /tmp/resources/plugins/*.zip > /dev/null 2>&1; then \\\n      for p in /tmp/resources/plugins/*.zip; do \\\n        unzip $p -d /tmp/gs_plugin \\\n        && mv /tmp/gs_plugin/*.jar $CATALINA_HOME/webapps/geoserver/WEB-INF/lib/ \\\n        && rm -rf /tmp/gs_plugin; \\\n      done; \\\n    fi;\n\n# Install Font files in resources/fonts if they exist\nRUN if ls /tmp/resources/fonts/*.ttf > /dev/null 2>&1; then \\\n      cp -rf /tmp/resources/fonts/*.ttf /usr/share/fonts/truetype/; \\\n\tfi;\n\n# Copy across script and XML stylesheet which will allow the Tomcat server.xml to be parameterised\nRUN cp /tmp/resources/tomcat/* $CATALINA_HOME/conf/\n\n# Delete resources after installation\nRUN rm -rf /tmp/resources\n\n# CMD \"/opt/geoserver/bin/startup.sh\"\nEXPOSE 8080"
}