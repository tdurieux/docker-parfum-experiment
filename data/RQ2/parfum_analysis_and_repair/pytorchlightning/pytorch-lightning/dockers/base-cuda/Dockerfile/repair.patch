diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/pytorchlightning/pytorch-lightning/dockers/base-cuda/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/pytorchlightning/pytorch-lightning/dockers/base-cuda/Dockerfile/repaired.Dockerfile
index 743ab95..c460702 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/pytorchlightning/pytorch-lightning/dockers/base-cuda/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/pytorchlightning/pytorch-lightning/dockers/base-cuda/Dockerfile/repaired.Dockerfile
@@ -33,8 +33,8 @@ ENV \
     MAKEFLAGS="-j2"
 
 RUN \
-    # TODO: Remove the manual key installation once the base image is updated.
-    # https://github.com/NVIDIA/nvidia-docker/issues/1631
+
+
     apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/3bf863cc.pub && \
     apt-get update -qq --fix-missing && \
     apt-get install -y --no-install-recommends \
@@ -54,7 +54,7 @@ RUN \
 
 # Install python
     add-apt-repository ppa:deadsnakes/ppa && \
-    apt-get install -y \
+    apt-get install --no-install-recommends -y \
         python${PYTHON_VERSION} \
         python${PYTHON_VERSION}-distutils \
         python${PYTHON_VERSION}-dev \
@@ -79,7 +79,7 @@ RUN \
     python${PYTHON_VERSION} get-pip.py && \
     rm get-pip.py && \
 
-    pip install -q fire && \
+    pip install --no-cache-dir -q fire && \
     # Disable cache \
     CUDA_VERSION_MM=$(python -c "print(''.join('$CUDA_VERSION'.split('.')[:2]))") && \
     pip config set global.cache-dir false && \
@@ -99,7 +99,7 @@ RUN \
     ./bootstrap -- -DCMAKE_USE_OPENSSL=OFF && \
     make && \
     make install && \
-    cmake  --version
+    cmake  --version && rm cmake-3.20.2.tar.gz
 
 ENV \
     HOROVOD_CUDA_HOME=$CUDA_TOOLKIT_ROOT_DIR \
@@ -126,7 +126,7 @@ RUN \
     # install DALI, needed for examples
     # todo: waiting for 1.4 - https://github.com/NVIDIA/DALI/issues/3144#issuecomment-877386691
     if [ $py_ver -eq "0" ]; then \
-        pip install --extra-index-url https://developer.download.nvidia.com/compute/redist "nvidia-dali-cuda${CUDA_VERSION_MAJOR}0>1.0" ; \
+        pip install --no-cache-dir --extra-index-url https://developer.download.nvidia.com/compute/redist "nvidia-dali-cuda${CUDA_VERSION_MAJOR}0>1.0"; \
         python -c 'from nvidia.dali.pipeline import Pipeline' ; \
     fi
 
@@ -138,9 +138,9 @@ RUN \
     python -c "from apex import amp"
 
 RUN \
-    # install Bagua
+
     CUDA_VERSION_MM=$(python -c "print(''.join('$CUDA_VERSION'.split('.')[:2]))") && \
-    pip install "bagua-cuda$CUDA_VERSION_MM==0.9.0" && \
+    pip install --no-cache-dir "bagua-cuda$CUDA_VERSION_MM==0.9.0" && \
     python -c "import bagua_core; bagua_core.install_deps()" && \
     python -c "import bagua; print(bagua.__version__)"