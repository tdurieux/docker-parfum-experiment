{
  "startTime": 1674246538140,
  "endTime": 1674246538994,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 13
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:10.0\n\nARG SOURCE_COMMIT\nENV SOURCE_COMMIT ${SOURCE_COMMIT}\nARG DOCKER_TAG\nENV DOCKER_TAG ${DOCKER_TAG}\n\n# yarn > npm\n#RUN npm install --global yarn\n\nRUN npm install -g yarn && npm cache clean --force;\n\nWORKDIR /var/app\nRUN mkdir -p /var/app\nADD package.json yarn.lock /var/app/\nRUN yarn install --non-interactive --frozen-lockfile && yarn cache clean;\n\nCOPY . /var/app\n\n# FIXME TODO: fix eslint warnings\n\n#RUN mkdir tmp && \\\n#  npm test && \\\n#  ./node_modules/.bin/eslint . && \\\n#  npm run build\n\nRUN mkdir tmp && \\\n    yarn test && yarn build && yarn cache clean;\n\nENV PORT 8080\nENV NODE_ENV production\n\nEXPOSE 8080\n\nCMD [ \"yarn\", \"run\", \"production\" ]\n\n# uncomment the lines below to run it in development mode\n# ENV NODE_ENV development\n# CMD [ \"yarn\", \"run\", \"start\" ]\n"
}