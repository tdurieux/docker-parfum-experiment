{
  "startTime": 1674253764000,
  "endTime": 1674253765342,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 16,
        "columnStart": 22,
        "columnEnd": 13
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 7,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 43,
        "lineEnd": 44,
        "columnStart": 7,
        "columnEnd": 66
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 43,
        "lineEnd": 44,
        "columnStart": 7,
        "columnEnd": 66
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 4,
        "columnEnd": 75
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 16,
        "columnStart": 22,
        "columnEnd": 13
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 7,
        "columnEnd": 48
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 43,
        "lineEnd": 44,
        "columnStart": 7,
        "columnEnd": 66
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 4,
        "columnEnd": 75
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 43,
        "lineEnd": 44,
        "columnStart": 7,
        "columnEnd": 66
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 4,
        "columnEnd": 75
      }
    }
  ],
  "repairedDockerfile": "FROM nvidia/cuda:10.0-devel-ubuntu18.04\n\nARG DEBIAN_FRONTEND=noninteractive\n\nARG DEBIAN_FRONTEND=noninteractive\n\n# Basic deps\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    build-essential \\\n    pkg-config \\\n    git \\\n    wget \\\n    curl \\\n    unzip \\\n    cmake \\\n    sudo \\\n    apt-utils && rm -rf /var/lib/apt/lists/*;\n\nRUN cd / && wget https://raw.githubusercontent.com/laxnpander/OpenREALM/dev/tools/install_opencv.sh\n\nRUN cd / && sed -i 's/sudo //g' install_opencv.sh && bash install_opencv.sh && cd ~ && rm -rf *\n\nRUN wget https://raw.githubusercontent.com/laxnpander/OpenREALM/dev/tools/install_deps.sh\n\nRUN cd / && sed -i 's/sudo //g' install_deps.sh && apt-get update && export DEBIAN_FRONTEND=noninteractive && \\\n\tbash install_deps.sh && rm -rf /var/lib/apt/lists/*\n\n# Finally install OpenREALM Librararies\nRUN set -ex \\\n    && cd ~ && mkdir OpenREALM && cd OpenREALM \\\n    && git clone https://github.com/laxnpander/OpenREALM.git \\\n    && cd OpenREALM && OPEN_REALM_DIR=$(pwd) \\\n    && git submodule init && git submodule update \\\n    && cd $OPEN_REALM_DIR && mkdir build && cd build && cmake -DTESTS_ENABLED=ON -DWITH_PCL=ON .. \\\n    && make -j $(nproc --all) && make install\n\n# Install ROS Noetic\nRUN set -ex \\\n    && sh -c 'echo \"deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main\" > /etc/apt/sources.list.d/ros-latest.list' \\\n    && apt-key adv --keyserver 'hkp://keyserver.ubuntu.com:80' --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654 \\\n    && apt-get update \\\n    && apt-get install --no-install-recommends -y -q ros-melodic-desktop && rm -rf /var/lib/apt/lists/*;\nRUN set -ex \\\n    && apt-get install --no-install-recommends -y -q ros-melodic-geographic-msgs ros-melodic-geodesy \\\n        ros-melodic-cv-bridge ros-melodic-rviz ros-melodic-pcl-ros && rm -rf /var/lib/apt/lists/*;\n\n# Create catkin workspace and clone the repo\nRUN set -ex \\\n    && cd / && mkdir -p catkin_ws/src \\\n    && cd catkin_ws/src \\\n    && git clone https://github.com/laxnpander/OpenREALM_ROS1_Bridge.git\n\n# Set workdir\nWORKDIR /catkin_ws\n\n# Clone rviz_satellite for rviz plugins\nRUN set -ex && cd ./src && git clone https://github.com/gareth-cross/rviz_satellite.git\n\n# Build catkin workspace\nRUN set -ex && . /opt/ros/melodic/setup.sh && catkin_make -DCMAKE_BUILD_TYPE=Release\n\n# Install rosbrindge suite\nRUN apt-get install -yq --no-install-recommends ros-melodic-rosbridge-suite && rm -rf /var/lib/apt/lists/*;\n\n# Setup .bashrc and /ros_entrypoint.sh\nRUN set -ex \\\n    && echo \"source /opt/ros/melodic/setup.bash\" >> /root/.bashrc \\\n    && echo \"source /catkin_ws/devel/setup.bash\" >> /root/.bashrc \\\n    && echo 'export LD_LIBRARY_PATH=/usr/local/lib/:$LD_LIBRARY_PATH' >> /root/.bashrc\n    # && sed --in-place --expression \\\n    # '$isource \"/catkin_ws/devel/setup.bash\"' \\\n    # /ros_entrypoint.sh\n\nCMD [\"/bin/bash\"]\n"
}