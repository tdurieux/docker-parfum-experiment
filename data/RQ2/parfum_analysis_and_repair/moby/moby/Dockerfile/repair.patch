diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/moby/moby/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/moby/moby/Dockerfile/repaired.Dockerfile
index 892fcab..1ba6e64 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/moby/moby/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/moby/moby/Dockerfile/repaired.Dockerfile
@@ -1,5 +1,3 @@
-# syntax=docker/dockerfile:1
-
 ARG CROSS="false"
 ARG SYSTEMD="false"
 ARG GO_VERSION=1.18.3
@@ -24,7 +22,7 @@ RUN --mount=type=cache,sharing=locked,id=moby-criu-aptlib,target=/var/lib/apt \
         echo 'deb https://download.opensuse.org/repositories/devel:/tools:/criu/Debian_11/ /' > /etc/apt/sources.list.d/criu.list \
         && apt-get update \
         && apt-get install -y --no-install-recommends criu \
-        && install -D /usr/sbin/criu /build/criu
+        && install -D /usr/sbin/criu /build/criu && rm -rf /var/lib/apt/lists/*;
 
 FROM base AS registry
 WORKDIR /go/src/github.com/docker/distribution
@@ -81,7 +79,7 @@ RUN --mount=type=cache,sharing=locked,id=moby-frozen-images-aptlib,target=/var/l
        apt-get update && apt-get install -y --no-install-recommends \
            ca-certificates \
            curl \
-           jq
+           jq && rm -rf /var/lib/apt/lists/*;
 # Get useful and necessary Hub images so we can "docker load" locally instead of pulling
 COPY contrib/download-frozen-image-v2.sh /
 ARG TARGETARCH
@@ -109,7 +107,7 @@ RUN --mount=type=cache,sharing=locked,id=moby-cross-true-aptlib,target=/var/lib/
             crossbuild-essential-armel \
             crossbuild-essential-armhf \
             crossbuild-essential-ppc64el \
-            crossbuild-essential-s390x
+            crossbuild-essential-s390x && rm -rf /var/lib/apt/lists/*;
 
 FROM cross-${CROSS} AS dev-base
 
@@ -125,7 +123,7 @@ RUN --mount=type=cache,sharing=locked,id=moby-cross-false-aptlib,target=/var/lib
             libdevmapper-dev \
             libseccomp-dev \
             libsystemd-dev \
-            libudev-dev
+            libudev-dev && rm -rf /var/lib/apt/lists/*;
 
 FROM --platform=linux/amd64 runtime-dev-cross-false AS runtime-dev-cross-true
 ARG DEBIAN_FRONTEND
@@ -143,7 +141,7 @@ RUN --mount=type=cache,sharing=locked,id=moby-cross-true-aptlib,target=/var/lib/
             libseccomp-dev:armel \
             libseccomp-dev:armhf \
             libseccomp-dev:ppc64el \
-            libseccomp-dev:s390x
+            libseccomp-dev:s390x && rm -rf /var/lib/apt/lists/*;
 
 FROM runtime-dev-cross-${CROSS} AS runtime-dev
 
@@ -194,7 +192,7 @@ ARG DEBIAN_FRONTEND
 RUN --mount=type=cache,sharing=locked,id=moby-containerd-aptlib,target=/var/lib/apt \
     --mount=type=cache,sharing=locked,id=moby-containerd-aptcache,target=/var/cache/apt \
         apt-get update && apt-get install -y --no-install-recommends \
-            libbtrfs-dev
+            libbtrfs-dev && rm -rf /var/lib/apt/lists/*;
 ARG CONTAINERD_VERSION
 COPY /hack/dockerfile/install/install.sh /hack/dockerfile/install/containerd.installer /
 RUN --mount=type=cache,target=/root/.cache/go-build \
@@ -245,7 +243,7 @@ RUN --mount=type=cache,sharing=locked,id=moby-tini-aptlib,target=/var/lib/apt \
     --mount=type=cache,sharing=locked,id=moby-tini-aptcache,target=/var/cache/apt \
         apt-get update && apt-get install -y --no-install-recommends \
             cmake \
-            vim-common
+            vim-common && rm -rf /var/lib/apt/lists/*;
 COPY /hack/dockerfile/install/install.sh /hack/dockerfile/install/tini.installer /
 RUN --mount=type=cache,target=/root/.cache/go-build \
     --mount=type=cache,target=/go/pkg/mod \
@@ -279,13 +277,13 @@ RUN --mount=type=cache,sharing=locked,id=moby-crun-aptlib,target=/var/lib/apt \
             libudev-dev \
             libyajl-dev \
             python3 \
-            ;
+            ; rm -rf /var/lib/apt/lists/*;
 RUN --mount=type=tmpfs,target=/tmp/crun-build \
     git clone https://github.com/containers/crun.git /tmp/crun-build && \
     cd /tmp/crun-build && \
     git checkout -q "${CRUN_VERSION}" && \
     ./autogen.sh && \
-    ./configure --bindir=/build && \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --bindir=/build && \
     make -j install
 
 FROM --platform=amd64 djs55/vpnkit:${VPNKIT_VERSION} AS vpnkit-amd64
@@ -340,7 +338,7 @@ RUN --mount=type=cache,sharing=locked,id=moby-dev-aptlib,target=/var/lib/apt \
             xfsprogs \
             xz-utils \
             zip \
-            zstd
+            zstd && rm -rf /var/lib/apt/lists/*;
 
 
 # Switch to use iptables instead of nftables (to match the CI hosts)
@@ -349,7 +347,7 @@ RUN update-alternatives --set iptables  /usr/sbin/iptables-legacy  || true \
  && update-alternatives --set ip6tables /usr/sbin/ip6tables-legacy || true \
  && update-alternatives --set arptables /usr/sbin/arptables-legacy || true
 
-RUN pip3 install yamllint==1.26.1
+RUN pip3 install --no-cache-dir yamllint==1.26.1
 
 COPY --from=dockercli     /build/ /usr/local/cli
 COPY --from=frozen-images /build/ /docker-frozen-images
@@ -385,9 +383,9 @@ RUN --mount=type=cache,sharing=locked,id=moby-dev-aptlib,target=/var/lib/apt \
             dbus \
             dbus-user-session \
             systemd \
-            systemd-sysv
+            systemd-sysv && rm -rf /var/lib/apt/lists/*;
 RUN mkdir -p hack \
-  && curl -o hack/dind-systemd https://raw.githubusercontent.com/AkihiroSuda/containerized-systemd/b70bac0daeea120456764248164c21684ade7d0d/docker-entrypoint.sh \
+  && curl -f -o hack/dind-systemd https://raw.githubusercontent.com/AkihiroSuda/containerized-systemd/b70bac0daeea120456764248164c21684ade7d0d/docker-entrypoint.sh \
   && chmod +x hack/dind-systemd
 ENTRYPOINT ["hack/dind-systemd"]