{
  "startTime": 1674256000499,
  "endTime": 1674256001961,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 2,
        "columnEnd": 13
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 89,
        "lineEnd": 89,
        "columnStart": 2,
        "columnEnd": 19
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 129,
        "lineEnd": 129,
        "columnStart": 2,
        "columnEnd": 19
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 2,
        "columnEnd": 144
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 2,
        "columnEnd": 24
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 127,
        "lineEnd": 127,
        "columnStart": 2,
        "columnEnd": 83
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 2,
        "columnEnd": 144
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 2,
        "columnEnd": 24
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 127,
        "lineEnd": 127,
        "columnStart": 2,
        "columnEnd": 83
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# try to make this more efficient\nFROM debian:bullseye-slim AS build-tools\n\nRUN \\\n  echo \"# INSTALL BUILD DEPENDENCIES ##########################################\" && \\\n  apt-get update && \\\n  apt upgrade -y && apt dist-upgrade && \\\n  apt-get install --no-install-recommends -y build-essential \"linux-headers-*-common\" libcurl4-gnutls-dev curl g++ gcc git make nodejs npm python3 python3-distutils vim && \\\n  mkdir -p /tmp && rm -rf /var/lib/apt/lists/*;\n\nRUN \\\n  echo \"# FETCH INSTALLATION FILES ######################################\" && \\\n  cd /tmp && \\\n  git clone --recursive --progress https://github.com/briancullinan/planet_quake && \\\n  cd /tmp/planet_quake && \\\n  git submodule add -f git://github.com/emscripten-core/emsdk.git libs/emsdk && \\\n  git submodule update --init --recursive --progress\n\n# update the copy from cache to latest from github\nFROM build-tools AS build-latest\n\n# TODO: checkout different branches for different experimental features\nRUN \\\n  echo \"# UPDATE SOURCE FILES ######################################\" && \\\n  cd /tmp/planet_quake && \\\n  git status && \\\n  git pull && \\\n  cd /tmp/planet_quake/libs/emsdk && \\\n  git pull\n\nFROM build-latest AS build-ded\n\nRUN \\\n  echo \"# BUILD NATIVE SERVER ##########################################\" && \\\n  cd /tmp/planet_quake && \\\n  make clean release BUILD_CLIENT=0 NOFPU=1\n\nFROM build-latest AS build-js\n\nRUN \\\n  echo \"# INSTALL NODE AND EMSDK ######################################\" && \\\n  cd /tmp/planet_quake && \\\n  echo \"\" > /tmp/planet_quake/libs/emsdk/upstream/emscripten/.emscripten && \\\n  echo \"BINARYEN_ROOT = '/tmp/planet_quake/libs/emsdk/upstream'\" >> /tmp/planet_quake/libs/emsdk/upstream/emscripten/.emscripten && \\\n  echo \"LLVM_ROOT = '/tmp/planet_quake/libs/emsdk/upstream/bin'\" >> /tmp/planet_quake/libs/emsdk/upstream/emscripten/.emscripten && \\\n  echo \"NODE_JS = '/usr/bin/node'\" >> /tmp/planet_quake/libs/emsdk/upstream/emscripten/.emscripten && \\\n  echo \"EM_CACHE = '/tmp/planet_quake/libs/emsdk/upstream/emscripten/cache'\" >> /tmp/planet_quake/libs/emsdk/upstream/emscripten/.emscripten && \\\n  npm install && \\\n  npm run install:emsdk && \\\n  mkdir -p /tmp/planet_quake/libs/emsdk/upstream/emscripten/cache && \\\n  export EM_CACHE=/tmp/planet_quake/libs/emsdk/upstream/emscripten/cache && \\\n  export EMSCRIPTEN_CACHE=/tmp/planet_quake/libs/emsdk/upstream/emscripten/cache && \\\n  npm run install:libs && npm cache clean --force;\n\nRUN \\\n  echo \"# BUILD JS CLIENT ##########################################\" && \\\n  cd /tmp/planet_quake && \\\n  export STANDALONE=1 && \\\n  make clean release EMSCRIPTEN_CACHE=/tmp/planet_quake/libs/emsdk/upstream/emscripten/cache PLATFORM=js\n\nFROM node:15.12-slim as serve-tools\n\nRUN \\\n  echo \"# INSTALL CONTENT DEPENDENCIES #################################\" && \\\n  apt-get update && \\\n  apt-get install --no-install-recommends -y git && \\\n  mkdir -p /home/baseq3 && \\\n  mkdir -p /tmp && rm -rf /var/lib/apt/lists/*;\n\nRUN \\\n  echo \"# FETCH RUN FILES #################################\" && \\\n  cd /tmp && \\\n  git clone --progress https://github.com/briancullinan/planet_quake\n\nFROM node:15.12-slim AS serve-content\n\nRUN mkdir -p /tmp/planet_quake/code/wasm/bin\nRUN mkdir -p /tmp/planet_quake/code/wasm/lib\nRUN mkdir -p /tmp/planet_quake/build/release-js-js\nRUN mkdir -p /tmp/planet_quake/build/release-linux-x86_64\n\nCOPY --from=serve-tools /tmp/planet_quake/package.json /tmp/planet_quake/package.json\nCOPY --from=serve-tools /tmp/planet_quake/code/wasm/bin /tmp/planet_quake/code/wasm/bin\nCOPY --from=serve-tools /tmp/planet_quake/code/wasm/lib /tmp/planet_quake/code/wasm/lib\nCOPY --from=build-js /tmp/planet_quake/build/release-js-js/quake3e* /tmp/planet_quake/build/release-js-js/\nCOPY --from=build-ded /tmp/planet_quake/build/release-linux-x86_64/quake3e* /tmp/planet_quake/build/release-linux-x86_64/\n\nRUN \\\n  cd /tmp/planet_quake && \\\n  npm install --dev && npm cache clean --force;\n\nEXPOSE 8080/tcp\nEXPOSE 27960/udp\nVOLUME [ \"/home/baseq3\" ]\nENV RCON=password123!\nENV GAME=baseq3-cc\nENV BASEGAME=baseq3-cc\n\nCMD node /tmp/planet_quake/code/wasm/bin/web.js --temp /home\n\nFROM serve-content AS serve-quake3e\n\nCMD /tmp/planet_quake/build/release-linux-x86_64/quake3e.ded.x64 \\\n  +cvar_restart +set net_port 27960 +set fs_basepath /home \\\n  +set dedicated 2 +set fs_homepath /home \\\n  +set fs_basegame ${BASEGAME} +set fs_game ${GAME} \\\n  +set ttycon 0 +set rconpassword ${RCON} \\\n  +set logfile 2 +set com_hunkmegs 150 +set vm_rtChecks 0 \\\n  +set sv_maxclients 32 +set sv_pure 0 +exec server.cfg\n\nFROM serve-content AS serve-both\n\nCMD \\\n  (node /tmp/planet_quake/code/wasm/bin/web.js --temp /home &) && \\\n  /tmp/planet_quake/build/release-linux-x86_64/quake3e.ded.x64 \\\n    +cvar_restart +set net_port 27960 +set fs_basepath /home \\\n    +set dedicated 2 +set fs_homepath /home \\\n    +set fs_basegame ${BASEGAME} +set fs_game ${GAME} \\\n    +set ttycon 0 +set rconpassword ${RCON} \\\n    +set logfile 2 +set com_hunkmegs 150 +set vm_rtChecks 0 \\\n    +set sv_maxclients 32 +set sv_pure 0 +exec server.cfg\n\nFROM serve-tools AS repack\n\nRUN \\\n  echo \"# INSTALL REPACK DEPENDENCIES ##########################################\" && \\\n  apt-get update && \\\n  apt-get install --no-install-recommends -y systemd imagemagick imagemagick-common vorbis-tools vim python && \\\n  cd /tmp/planet_quake && \\\n  npm install --dev && npm cache clean --force; && rm -rf /var/lib/apt/lists/*;\n\nVOLUME [ \"/home/baseq3\" ]\n\nCMD node /tmp/planet_quake/code/wasm/bin/repack.js --no-graph --no-overwrite --temp /home /home/baseq3\n\n########### TODO REPACK DOCKER HERE ############\n# needs a data source for baseq3 content, Github with demo data maybe?\n\nFROM serve-both AS full\n\nCOPY --from=briancullinan/quake3e:baseq3 /home/baseq3-cc /home/baseq3-cc\n\nFROM quay.io/parkervcp/pterodactyl-images:debian_nodejs-14 AS serve-pterodactyl\n\nRUN mkdir -p /tmp/planet_quake/code/wasm/bin\nRUN mkdir -p /tmp/planet_quake/code/wasm/lib\nRUN mkdir -p /tmp/planet_quake/build/release-js-js\nRUN mkdir -p /tmp/planet_quake/build/release-linux-x86_64\n\nCOPY --from=briancullinan/quake3e:serve-tools /tmp/planet_quake/package.json /tmp/planet_quake/package.json\nCOPY --from=briancullinan/quake3e:serve-tools /tmp/planet_quake/code/wasm/bin /tmp/planet_quake/code/wasm/bin\nCOPY --from=briancullinan/quake3e:serve-tools /tmp/planet_quake/code/wasm/lib /tmp/planet_quake/code/wasm/lib\nCOPY --from=briancullinan/quake3e:build-js /tmp/planet_quake/build/release-js-js/quake3e* /tmp/planet_quake/build/release-js-js/\nCOPY --from=briancullinan/quake3e:build-ded /tmp/planet_quake/build/release-linux-x86_64/quake3e* /tmp/planet_quake/build/release-linux-x86_64/\nCOPY --from=briancullinan/quake3e:baseq3 /home/baseq3-cc /home/baseq3-cc\n\n# Run latest dockerhub image:\n# docker run -ti -p 8080:8080 -p 27960:27960/udp briancullinan/quake3e:full\n# Build an image to repack\n# docker build --target repack\n# Run repack image\n# docker run -ti -v /Applications/ioquake3/baseq3:/home/baseq3 --name quake3e briancullinan/quake3e:repack\n"
}