{
  "startTime": 1674218336762,
  "endTime": 1674218338181,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 21,
        "columnEnd": 53
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 7,
        "columnEnd": 48
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 21,
        "columnEnd": 53
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Leveraging the pre-built Docker images with\n# cargo-chef and the Rust toolchain\n# https://www.lpalmieri.com/posts/fast-rust-docker-builds/\nFROM lukemathwalker/cargo-chef:latest-rust-1.62.0 AS chef\nWORKDIR /qdrant\n\nFROM chef AS planner\nCOPY . .\nRUN cargo chef prepare --recipe-path recipe.json\n\nFROM chef as builder\n\nWORKDIR /qdrant\n\nCOPY --from=planner /qdrant/recipe.json recipe.json\n\nRUN apt-get update ; apt-get install --no-install-recommends -y clang cmake; rm -rf /var/lib/apt/lists/*; rustup component add rustfmt\n\n# Build dependencies - this is the caching Docker layer!\nRUN cargo chef cook --release --recipe-path recipe.json\n\nCOPY . .\n\n# Build actual target here\nRUN cargo build --release --bin qdrant\n\nFROM debian:11-slim\nARG APP=/qdrant\n\nRUN apt-get update \\\n    && apt-get install --no-install-recommends -y ca-certificates tzdata \\\n    && rm -rf /var/lib/apt/lists/*\n\nEXPOSE 6333\nEXPOSE 6334\n\nENV TZ=Etc/UTC \\\n    RUN_MODE=production\n\nRUN mkdir -p ${APP}\n\nCOPY --from=builder /qdrant/target/release/qdrant ${APP}/qdrant\nCOPY --from=builder /qdrant/config ${APP}/config\n\nWORKDIR ${APP}\n\nCMD [\"./qdrant\"]\n"
}