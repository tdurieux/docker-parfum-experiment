{
  "startTime": 1674251873602,
  "endTime": 1674251875145,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 99
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 70,
        "columnEnd": 102
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 70,
        "columnEnd": 102
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 66
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 73
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:14.04\n\nMAINTAINER Sergey Mechtaev <mechtaev@gmail.com>\n\n# Dependencies\n\nRUN apt-get -y --no-install-recommends install apt-transport-https && rm -rf /var/lib/apt/lists/*;\n\nRUN echo \"deb https://repo.scala-sbt.org/scalasbt/debian all main\" | tee /etc/apt/sources.list.d/sbt.list\n\nRUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 642AC823\n\nRUN apt-get -y update\n\nRUN apt-get -y install git wget xz-utils build-essential \\\n                       curl dejagnu subversion bison flex bc libcap-dev \\\n                       cmake libncurses5-dev libboost-all-dev \\\n                       sbt --no-install-recommends && rm -rf /var/lib/apt/lists/*;\n\n\n# Installing Angelix\n\nRUN apt-get install software-properties-common -y --no-install-recommends && rm -rf /var/lib/apt/lists/*;\n\nRUN git clone --recursive https://github.com/mechtaev/angelix.git --depth 1\n\n\nRUN apt-get purge icedtea-* openjdk-* -y\nRUN add-apt-repository -y ppa:openjdk-r/ppa && apt-get update && sudo apt-get install --no-install-recommends -y openjdk-8-jdk && rm -rf /var/lib/apt/lists/*;\n#check if java command is pointing to \" link currently points to /opt/jdk/jdk1.8.0_05/bin/java\"\nRUN update-alternatives --display java\n\n#check if java command is pointing to \" link currently points to /opt/jdk/jdk1.8.0_05/bin/javac\"\nRUN update-alternatives --display javac\n\n\nRUN java -version\nRUN javac -version\n\nWORKDIR angelix\n\nENV JAVA_TOOL_OPTIONS -Dfile.encoding=UTF8\nRUN bash -c 'source activate && make -j8 llvm-gcc'\nRUN bash -c 'source activate && make -j8 llvm2'\nRUN bash -c 'source activate && make -j8 minisat'\nRUN bash -c 'source activate && make -j8 stp'\nRUN bash -c 'source activate && make -j8 klee-uclibc'\nRUN bash -c 'source activate && make -j8 klee'\nRUN bash -c 'source activate && make -j8 z3'\nRUN bash -c 'source activate && make -j8 clang'\nRUN bash -c 'source activate && make -j8 bear'\nRUN bash -c 'source activate && make -j8 runtime'\nRUN bash -c 'source activate && make -j8 frontend'\nRUN /usr/bin/printf '\\xfe\\xed\\xfe\\xed\\x00\\x00\\x00\\x02\\x00\\x00\\x00\\x00\\xe2\\x68\\x6e\\x45\\xfb\\x43\\xdf\\xa4\\xd9\\x92\\xdd\\x41\\xce\\xb6\\xb2\\x1c\\x63\\x30\\xd7\\x92' > /etc/ssl/certs/java/cacerts\nRUN update-ca-certificates -f\nRUN /var/lib/dpkg/info/ca-certificates-java.postinst configure\nRUN bash -c 'source activate && make -j8 maxsmt'\nRUN bash -c 'source activate && make -j8 synthesis'\nENV VER=3.6.3\nRUN wget https://www-eu.apache.org/dist/maven/maven-3/${VER}/binaries/apache-maven-${VER}-bin.tar.gz\nRUN bash -c 'tar xvf apache-maven-${VER}-bin.tar.gz'\nRUN bash -c 'rm apache-maven-${VER}-bin.tar.gz'\nRUN bash -c 'mv apache-maven-${VER} /opt/maven'\nRUN bash -c 'echo \"export MAVEN_HOME=/opt/maven;export PATH=\\$MAVEN_HOME/bin:\\$PATH:\\$MAVEN_HOME/bin\" > /etc/profile.d/maven.sh'\nRUN bash -c 'source /etc/profile.d/maven.sh && mvn -version'\nRUN bash -c 'source activate && source /etc/profile.d/maven.sh && make -j8 nsynth'\nRUN bash -c 'source activate && source /etc/profile.d/maven.sh && make -j8 semfix'\n\nRUN rm -rf build/llvm-3.7.0.src\nRUN rm -rf /opt/maven\n"
}