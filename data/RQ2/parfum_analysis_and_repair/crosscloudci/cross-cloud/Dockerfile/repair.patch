diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/crosscloudci/cross-cloud/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/crosscloudci/cross-cloud/Dockerfile/repaired.Dockerfile
index 423e346..ed2cfeb 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/crosscloudci/cross-cloud/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/crosscloudci/cross-cloud/Dockerfile/repaired.Dockerfile
@@ -92,7 +92,7 @@ RUN ln -s /lib /lib64
 RUN rm -fr /var/cache/apk/*
 
 # Upgrade pip and install the AWS CLI.
-RUN pip install --upgrade pip && pip install awscli
+RUN pip install --no-cache-dir --upgrade pip && pip install --no-cache-dir awscli
 
 # Copy the GoVC binary from the golang build stage.
 COPY --from=golang /go/bin/govc /usr/local/bin/
@@ -100,19 +100,19 @@ COPY --from=golang /go/bin/govc /usr/local/bin/
 # Install the Google Cloud SDK
 ENV CLOUD_SDK_VERSION=203.0.0
 ENV PATH=/google-cloud-sdk/bin:$PATH
-RUN curl -sSL https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-${CLOUD_SDK_VERSION}-linux-x86_64.tar.gz | \
+RUN curl -f -sSL https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-${CLOUD_SDK_VERSION}-linux-x86_64.tar.gz | \
     tar xz -C /
 
 # Install the kubectl binary
-RUN curl -sSL -o /usr/local/bin/kubectl https://storage.googleapis.com/kubernetes-release/release/${KUBECTL_VERSION}/bin/linux/${ARC}/kubectl && \
+RUN curl -f -sSL -o /usr/local/bin/kubectl https://storage.googleapis.com/kubernetes-release/release/${KUBECTL_VERSION}/bin/linux/${ARC}/kubectl && \
     chmod +x /usr/local/bin/kubectl
 
 # Install the helm binary
-RUN curl -sSL https://storage.googleapis.com/kubernetes-helm/helm-${HELM_VERSION}-linux-${ARC}.tar.gz | \
+RUN curl -f -sSL https://storage.googleapis.com/kubernetes-helm/helm-${HELM_VERSION}-linux-${ARC}.tar.gz | \
     tar xz --strip-components=1 -C /usr/local/bin linux-${ARC}/helm
 
 # Install the terraform binary
-RUN curl -sSLO https://releases.hashicorp.com/terraform/$TERRAFORM_VERSION/terraform_"${TERRAFORM_VERSION}"_linux_$ARC.zip && \
+RUN curl -f -sSLO https://releases.hashicorp.com/terraform/$TERRAFORM_VERSION/terraform_"${TERRAFORM_VERSION}"_linux_$ARC.zip && \
     unzip terraform_"${TERRAFORM_VERSION}"_linux_${ARC}.zip -d /usr/bin
 
 # Copy the Terraform providers from the golang build stage