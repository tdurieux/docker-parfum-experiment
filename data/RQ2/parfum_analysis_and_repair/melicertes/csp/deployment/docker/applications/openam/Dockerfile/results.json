{
  "startTime": 1674250257047,
  "endTime": 1674250257679,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 35
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM csp-tomcat8:1.0p1-deb\n\nMAINTAINER Majid Salehi Ghamsari <majid.salehi.ghamsari[AT]fokus[DOT]fraunhofer[DOT]de>\nMAINTAINER Orestis Akrivopoulos\nMAINTAINER Kusber, Tomasz <tomasz.kusber[AT]fokus[DOT]fraunhofer[DOT]de>\n\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -yy python bash && rm -rf /var/lib/apt/lists/*;\n\n# setup\nENV CATALINA_OPTS=\"-Xmx2g -Xms2g -server\"\nENV TOOLS_HOME=/opt/ssoadm\nENV CATALINA_HOME /usr/local/tomcat\nENV PATH $CATALINA_HOME/bin:$PATH\n\n# download openam fraunhofer build 13 war\nADD software/OpenAM-13.0.0.war $CATALINA_HOME/webapps/openam.war\n\n# add the custom authentication module to image\nADD software/openam-auth-cert2-13.0.0.jar /tmp/openam-auth-cert2-13.0.0.jar\nADD software/amAuthCert2.xml /tmp/amAuthCert2.xml\n\n# Deploy OpenAM v13.0.0 Config Tools\nRUN mkdir -p $TOOLS_HOME \n\nADD software/SSOConfiguratorTools-13.0.0.zip $TOOLS_HOME/SSOConfiguratorTools-13.0.0.zip\n\n# Deploy OpenAM v13.0.0 Config Tools\nRUN cd $TOOLS_HOME && \\\n    unzip *.zip && \\\n    rm SSOConfiguratorTools-13.0.0.zip\n\nADD software/SSOAdminTools-13.0.0.zip $TOOLS_HOME/SSOAdminTools-13.0.0.zip\n\n# Deploy OpenAM admin Tools\nRUN cd $TOOLS_HOME && \\\n    unzip -o SSOAdminTools-13.0.0.zip && \\\n    rm SSOAdminTools-13.0.0.zip\n\nADD openam-config.properties $TOOLS_HOME/openam-config.properties\nADD agent-config.tmpl $TOOLS_HOME/agent-config.tmpl\nADD agent-config.tmpl.tc $TOOLS_HOME/agent-config.tmpl.tc\nADD agent-config.tmpl.imq $TOOLS_HOME/agent-config.tmpl.imq\nADD agent-config.tmpl.rt $TOOLS_HOME/agent-config.tmpl.rt\nADD embedded_datastore_update.properties $TOOLS_HOME/embedded_datastore_update.properties\nADD policy.json $TOOLS_HOME/policy.json\nADD policyset-rt.json $TOOLS_HOME/policyset-rt.json\nADD policyset-imq.json $TOOLS_HOME/policyset-imq.json\nADD policy-rt.json $TOOLS_HOME/policy-rt.json\nADD policy-imq.json $TOOLS_HOME/policy-imq.json\nADD run-openam.sh $TOOLS_HOME/run-openam.sh\nADD post-config-openam.sh $TOOLS_HOME/post-config-openam.sh\nADD post.batch $TOOLS_HOME/post.batch\nADD Cert.properties $TOOLS_HOME/Cert.properties\nADD setenv.sh /usr/local/tomcat/bin/setenv.sh\nADD proxy-ca-truststore.jks /usr/local/tomcat/conf/proxy-ca-truststore.jks\nADD CSP-Cert.properties $TOOLS_HOME/CSP-Cert.properties\nADD web-page/DataStore.xml $TOOLS_HOME/DataStore.xml\nADD web-page/login-logo.png $TOOLS_HOME/login-logo.png\nADD web-page/logo-horizontal.png $TOOLS_HOME/logo-horizontal.png\nADD web-page/ThemeConfiguration.js $TOOLS_HOME/ThemeConfiguration.js\nADD web-page/DataStore1.html $TOOLS_HOME/DataStore1.html\n\n#update section, if needed\nRUN mkdir /tmp/updates\n#ADD update.sh /tmp/updates/update.sh\nRUN chmod +x /usr/local/tomcat/bin/setenv.sh && \\\n  chmod +x $TOOLS_HOME/run-openam.sh && \\\n  chmod +x $TOOLS_HOME/post-config-openam.sh\n\n\nCOPY create-agent.sh /usr/local/bin/\nRUN ln -s usr/local/bin/create-agent.sh / # backwards compat\nRUN chmod +x /usr/local/bin/create-agent.sh\n\nCMD [\"/opt/ssoadm/run-openam.sh\"]\n\n\n\n"
}