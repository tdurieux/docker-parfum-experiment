diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/terrama2/terrama2/docker/dev/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/terrama2/terrama2/docker/dev/Dockerfile/repaired.Dockerfile
index 988c616..8ced8d6 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/terrama2/terrama2/docker/dev/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/terrama2/terrama2/docker/dev/Dockerfile/repaired.Dockerfile
@@ -18,35 +18,35 @@ RUN apt-get update && apt-get install -y \
     wget \
     # add-apt-repository
     software-properties-common python-software-properties \
-    --no-install-recommends
+    --no-install-recommends && rm -rf /var/lib/apt/lists/*;
 
 # GCC 8
 RUN add-apt-repository -y ppa:ubuntu-toolchain-r/test && \
     apt update && \
-    apt install -y gcc-8 g++-8 && \
-    update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100  && \
-    update-alternatives --install /usr/bin/gcc-ar gcc-ar /usr/bin/gcc-ar-8 100  && \
-    update-alternatives --install /usr/bin/gcc-nm gcc-nm /usr/bin/gcc-nm-8 100  && \
+    apt install --no-install-recommends -y gcc-8 g++-8 && \
+    update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100 && \
+    update-alternatives --install /usr/bin/gcc-ar gcc-ar /usr/bin/gcc-ar-8 100 && \
+    update-alternatives --install /usr/bin/gcc-nm gcc-nm /usr/bin/gcc-nm-8 100 && \
     update-alternatives --install /usr/bin/gcc-ranlib gcc-ranlib /usr/bin/gcc-ranlib-8 100 && \
-    update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100
+    update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100 && rm -rf /var/lib/apt/lists/*;
 
 # Clang 6
 RUN sh -c 'echo "deb http://apt.llvm.org/xenial/ llvm-toolchain-xenial-6.0 main" > /etc/apt/sources.list.d/llvm.list' && \
     wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \
     apt update && \
-    apt install -y \
+    apt install --no-install-recommends -y \
     clang-6.0 \
     clang-format-6.0 \
     clang-tidy-6.0 \
     clang-tools-6.0 \
     lldb-6.0 \
     python-clang-6.0 \
-    python-lldb-6.0
+    python-lldb-6.0 && rm -rf /var/lib/apt/lists/*;
 
-RUN apt install -y gdb valgrind cppcheck
+RUN apt install --no-install-recommends -y gdb valgrind cppcheck && rm -rf /var/lib/apt/lists/*;
 
 # Install VSCode
-RUN curl https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > microsoft.gpg && \
+RUN curl -f https://packages.microsoft.com/keys/microsoft.asc | gpg --batch --dearmor > microsoft.gpg && \
     mv microsoft.gpg /etc/apt/trusted.gpg.d/microsoft.gpg && \
     sh -c 'echo "deb [arch=amd64] https://packages.microsoft.com/repos/vscode stable main" > /etc/apt/sources.list.d/vscode.list' && \
     apt-get update && \
@@ -71,7 +71,7 @@ RUN curl https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > mic
     libxrender1 \
     libxss1 \
     libxtst6 \
-    --no-install-recommends
+    --no-install-recommends && rm -rf /var/lib/apt/lists/*;
 
 # RUN mkdir -p /opt/qtcreator && \
 #     cd /opt/qtcreator && \
@@ -95,7 +95,7 @@ RUN echo "${USER} ALL=(ALL) NOPASSWD: /usr/bin/apt-get" >> /etc/sudoers && \
 # clean apt
 RUN rm -rf /var/lib/apt/lists/*
 
-# 
+#
 RUN wget https://cmake.org/files/v3.11/cmake-3.11.1-Linux-x86_64.sh && \
     sh cmake-3.11.1-Linux-x86_64.sh --prefix=/usr/local --exclude-subdir