{
  "startTime": 1674248547997,
  "endTime": 1674248548657,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 26
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Minify client side assets (JavaScript)\nFROM node:latest AS build-js\n\nRUN npm install gulp gulp-cli -g && npm cache clean --force;\n\nWORKDIR /build\nCOPY . .\nRUN npm install --only=dev && npm cache clean --force;\nRUN gulp\n\n\n# Build Golang binary\nFROM golang:1.15.2 AS build-golang\n\nWORKDIR /go/src/github.com/gophish/gophish\nCOPY . .\nRUN go get -v && go build -v\n\n\n# Runtime container\nFROM debian:stable-slim\n\nRUN useradd -m -d /opt/gophish -s /bin/bash app\n\nRUN apt-get update && \\\n\tapt-get install --no-install-recommends -y jq libcap2-bin && \\\n\tapt-get clean && \\\n\trm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\nWORKDIR /opt/gophish\nCOPY --from=build-golang /go/src/github.com/gophish/gophish/ ./\nCOPY --from=build-js /build/static/js/dist/ ./static/js/dist/\nCOPY --from=build-js /build/static/css/dist/ ./static/css/dist/\nCOPY --from=build-golang /go/src/github.com/gophish/gophish/config.json ./\nRUN chown app. config.json\n\nRUN setcap 'cap_net_bind_service=+ep' /opt/gophish/gophish\n\nUSER app\nRUN sed -i 's/127.0.0.1/0.0.0.0/g' config.json\nRUN touch config.json.tmp\n\nEXPOSE 3333 8080 8443 80\n\nCMD [\"./docker/run.sh\"]\n"
}