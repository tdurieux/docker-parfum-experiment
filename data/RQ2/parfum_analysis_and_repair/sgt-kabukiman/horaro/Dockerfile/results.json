{
  "startTime": 1674249583759,
  "endTime": 1674249585010,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.10 AS builder\nLABEL maintainer=\"Sgt. Kabukiman\"\n\n# install packages\nRUN apk --no-cache add php7 php7-json php7-openssl php7-phar php7-mbstring nodejs npm git\n\n# install Composer\nADD https://getcomposer.org/download/1.9.0/composer.phar /usr/bin/composer\nRUN chmod +rx /usr/bin/composer\n\n# add our sources\nCOPY . /build\nWORKDIR /build\n\n# install PHP dependencies\nRUN composer install --no-dev --no-progress --no-suggest --prefer-dist --ignore-platform-reqs\n\n# build assets\nRUN npm install grunt-cli && \\\n    npm install && \\\n    ./node_modules/.bin/grunt ship && npm cache clean --force;\n\n# determine version\nRUN git describe --tags --always > version\n\n# remove temporary files to make the next copy commands easier\nRUN rm -rf assets tmp/assets node_modules .git .gitignore tests\n\n###################################################################################\n# second stage: final image\n\nFROM alpine:3.10\nLABEL maintainer=\"Sgt. Kabukiman\"\n\n# install packages\nRUN apk --no-cache add php7 php7-fpm php7-mysqli php7-json php7-openssl php7-curl \\\n    php7-zlib php7-xml php7-intl php7-xmlreader php7-xmlwriter php7-ctype php7-session \\\n    php7-mbstring php7-pdo_mysql nginx supervisor curl file\n\n# setup user accounts\nRUN adduser -D horaro\nRUN adduser nginx horaro\n\n# setup nginx\nRUN rm /etc/nginx/conf.d/default.conf\nRUN mkdir /run/nginx\nCOPY resources/docker/nginx.conf /etc/nginx/conf.d/horaro.conf\n\n# setup PHP-FPM\nRUN rm /etc/php7/php-fpm.d/www.conf\nCOPY resources/docker/fpm-pool.conf /etc/php7/php-fpm.d/horaro.conf\n\n# setup supervisord\nCOPY resources/docker/supervisord.conf /etc/supervisor/conf.d/supervisord.conf\n\n# add horaro\nWORKDIR /var/www/horaro\nCOPY --from=builder /build .\n\n# set up horaro directories\nRUN mkdir -p log tmp/session tmp/upload\nRUN chown -R horaro:horaro .\n\n# finish the image up\nEXPOSE 80\nUSER root\nCMD [\"sh\", \"entrypoint.sh\"]\n"
}