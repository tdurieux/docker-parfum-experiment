{
  "startTime": 1674218607539,
  "endTime": 1674218610729,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 1,
        "columnEnd": 62
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 79,
        "lineEnd": 79,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 85,
        "lineEnd": 85,
        "columnStart": 1,
        "columnEnd": 22
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 1,
        "columnEnd": 12
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 255
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 89
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 1,
        "columnEnd": 22
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 88,
        "lineEnd": 88,
        "columnStart": 4,
        "columnEnd": 153
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 91,
        "lineEnd": 91,
        "columnStart": 4,
        "columnEnd": 158
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM amazonlinux:2\n\nMAINTAINER kong <congcoi123@gmail.com>\n\n#################### System ####################\n# System update\nRUN yum update -y\n\n# Configure the Japanese for this environment\nRUN yum install -y glibc-langpack-ja && \\\n    unlink /etc/localtime && \\\n    ln -s /usr/share/zoneinfo/Japan /etc/localtime && \\\n    echo \"LANG=ja_JP.UTF-8\" | tee /etc/sysconfig/i18n && rm -rf /var/cache/yum\n\n# Configure the Japanese time zone for this environment\nRUN ln -sf /usr/share/zoneinfo/Asia/Tokyo /etc/localtime && \\\n    echo -e 'ZONE=\"Asia/Tokyo\"\\nUTC=true' | tee /etc/sysconfig/clock\n\n# Install the necessary packages for this system\nRUN yum install -y zip unzip php-devel php-pear php-mbstring php-xml glibc-langpack-ja npm sudo ccze gcc vim procps libpng-devel git cronie wget bzip2 tar fontconfig freetype freetype-devel fontconfig-devel libstdc++ gcc-c++ cmake wget tar gzip at make -y && rm -rf /var/cache/yum\n\n# Install EPEL\nRUN yum install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm && rm -rf /var/cache/yum\nRUN yum install -y epel-release && rm -rf /var/cache/yum\n\n# Create a folder for the application\nRUN mkdir -p /var/www/sample-app\n\n#################### Add Users ####################\n# Add the desired user and its corresponding group\nRUN useradd -g users kong\n\n#################### Development Environment ####################\n# The latest version of PHP 7.2 (The current one is 7.2.24)\nRUN amazon-linux-extras install php7.2\n\n# 【PHP7.2 Supporter】Debugger tool\nRUN pecl install xdebug\n\n# 【PHP7.2 Supporter】Install the Composer tool\nRUN cd /opt && \\\n\tphp -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\" && \\\n    php composer-setup.php && \\\n    mv composer.phar /usr/local/bin/composer && \\\n    rm -f composer-setup.php\n\n# 【PHP7.2 Supporter】Install the xhprof tool (@link: https://www.php.net/manual/en/book.xhprof.php)\nRUN cd /opt && \\\n\tgit clone \"https://github.com/yaoguais/phpng-xhprof.git\" xhprof && \\\n\tcd xhprof && \\\n\tphpize && \\\n\t./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n\tmake && \\\n\tmake install && \\\n\tmkdir -p /var/log/xhprof && \\\n\tchmod 777 /var/log/xhprof\n\n#【PHP7.2 Supporter】The GD Image extension\nRUN yum install -y php-gd && rm -rf /var/cache/yum\n\n# Install Phantomjs (The current version: 2.1.1) -> {@link: https://phantomjs.org/}\nRUN cd /opt && \\\n\twget https://bitbucket.org/ariya/phantomjs/downloads/phantomjs-2.1.1-linux-x86_64.tar.bz2 && \\\n\tmkdir -p /opt/phantomjs && \\\n\tbzip2 -d phantomjs-2.1.1-linux-x86_64.tar.bz2 && \\\n\ttar -xvf phantomjs-2.1.1-linux-x86_64.tar --directory /opt/phantomjs/ --strip-components 1 && \\\n\tln -s /opt/phantomjs/bin/phantomjs /usr/bin/phantomjs && \\\n\trm -f phantomjs-2.1.1-linux-x86_64.tar\n\n# Install Nodejs (The current version: v8.12.0) -> {@link: https://nodejs.org/en/}\n# This OS maybe has an old version of Nodejs (version 6x), so it's better that we remove that first\nRUN yum remove -y node && \\\n\tyum remove -y nodejs && \\\n\trm -rf /var/cache/yum && \\\n\tyum clean all && \\\n\tcurl -f --silent --location https://rpm.nodesource.com/setup_8.x | sudo bash - && \\\n\tyum -y install nodejs && rm -rf /var/cache/yum\n\n# All the necessary packages of Nodejs should be installed in here\nRUN npm install date-utils && npm cache clean --force;\n\n# Install Puppeteer -> {@link: https://pptr.dev/}\nRUN cd /opt && \\\n\tmkdir puppeteer && \\\n\tcd puppeteer && \\\n\tnpm install puppeteer && npm cache clean --force;\n\n# 【Puppeteer Supporter】All the necessary libraries of Puppeteer (include the Chromium)\nRUN yum -y install libX11 libXcomposite libXcursor libXdamage libXext libXi libXtst cups-libs libXScrnSaver libXrandr alsa-lib pango atk at-spi2-atk gtk3 && rm -rf /var/cache/yum\n\n# 【Puppeteer Supporter】Support the Japanese font\nRUN yum -y install ipa-gothic-fonts xorg-x11-fonts-100dpi xorg-x11-fonts-75dpi xorg-x11-utils xorg-x11-fonts-cyrillic xorg-x11-fonts-Type1 xorg-x11-fonts-misc && rm -rf /var/cache/yum\n\n# Expose one desired port for PHP-FPM service\nEXPOSE 9000\n\n# Run the PHP-FPM service in background\nENTRYPOINT /usr/sbin/php-fpm -F\n\n#################### Development Environment Configuration ####################\n# Create a new folder for the configurations\nRUN mkdir -p /docker/composer/\nCOPY /docker/app/in-script/setup_env.sh /docker/composer/setup_env.sh\n"
}