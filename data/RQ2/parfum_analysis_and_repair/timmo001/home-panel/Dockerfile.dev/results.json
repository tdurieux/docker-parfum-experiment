{
  "startTime": 1674249607146,
  "endTime": 1674249608306,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 7,
        "columnEnd": 40
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 21,
        "lineEnd": 22,
        "columnStart": 7,
        "columnEnd": 40
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 7,
        "columnEnd": 79
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 18,
        "columnStart": 7,
        "columnEnd": 11
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:current\n\n# Set shell\nSHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\n\n# Install packages\n# hadolint ignore=DL3008,DL3009,SC2086\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n        apt-transport-https \\\n        build-essential \\\n        ca-certificates \\\n        curl \\\n        git \\\n        gnupg-agent \\\n        libssl-dev \\\n        software-properties-common \\\n        wget \\\n        zsh \\\n    && apt-get clean \\\n    && curl -f -o- \"https://get.docker.com\" | bash \\\n    && curl -f -L \"https://github.com/docker/compose/releases/download/1.26.0/docker-compose-$(uname -s)-$(uname -m)\" \\\n        -o /usr/local/bin/docker-compose \\\n    && chmod +x /usr/local/bin/docker-compose \\\n    && curl -f -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.3/install.sh | bash \\\n    && sh -c \"$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)\" \\\n    && git clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions && rm -rf /var/lib/apt/lists/*;\n\n# Set the default shell to zsh\nENV SHELL /bin/zsh\n\n# Copy zshrc with plugin config\nCOPY .devcontainer/.zshrc /root/.zshrc\n\nWORKDIR /workspaces\n"
}