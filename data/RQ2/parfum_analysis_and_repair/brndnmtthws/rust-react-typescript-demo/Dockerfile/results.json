{
  "startTime": 1674248489673,
  "endTime": 1674248490607,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 5,
        "columnEnd": 17
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 5,
        "columnEnd": 78
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 5,
        "columnEnd": 64
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 5,
        "columnEnd": 78
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM rustlang/rust:nightly-slim AS backend-build\n\nRUN apt-get update \\\n  && apt-get install --no-install-recommends -yqq libsqlite3-dev libmariadbclient-dev-compat libpq-dev && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /app\n\nCOPY foodi-backend /app/foodi-backend\nRUN cd foodi-backend \\\n  && cargo build --release \\\n  && cargo install diesel_cli\n\nFROM node:current-alpine AS frontend-build\n\nWORKDIR /app\n\nCOPY foodi-frontend /app/foodi-frontend\nRUN cd foodi-frontend \\\n  && yarn install \\\n  && PARCEL_WORKERS=2 yarn build && yarn cache clean;\n\nFROM openresty/openresty:stretch\n\nRUN apt-get update \\\n  && apt-get install --no-install-recommends -yqq libsqlite3-0 libmariadbclient18 libpq5 \\\n  && apt-get clean \\\n  && rm -rf /var/lib/apt/lists/*\n\nWORKDIR /app\n\n# Copy from backend stage\nCOPY --from=backend-build /app/foodi-backend/target/release/foodi-backend /usr/bin\nCOPY --from=backend-build /usr/local/cargo/bin/diesel /usr/bin\n\n# Copy from frontend stage\nCOPY --from=frontend-build /app/foodi-frontend/dist /app/dist\n\n# Copy entrypoint, nginx config, and DB\nCOPY entrypoint.sh /usr/bin/entrypoint.sh\nCOPY nginx.conf /usr/local/openresty/nginx/conf/nginx.conf\nCOPY foodi-backend/sample-database.sqlite /app/database.sqlite\nCOPY foodi-backend/Rocket.toml /app/Rocket.toml\n\nEXPOSE 80\n\nCMD [\"/usr/bin/entrypoint.sh\"]\n"
}