{
  "startTime": 1674220979186,
  "endTime": 1674220980525,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 72,
        "columnEnd": 97
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 72,
        "columnEnd": 97
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 72,
        "columnEnd": 97
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 75,
        "columnEnd": 124
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:16.04\n\nRUN set -ex && \\\n    apt-get update && \\\n    apt-get --no-install-recommends --yes install ca-certificates curl xz-utils unzip && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt && rm -rf /var/lib/apt/lists/*;\nARG node_ver=10\nENV node_var ${node_ver}\nRUN curl -f -sL https://deb.nodesource.com/setup_${node_ver}.x | bash - && apt-get install --no-install-recommends -y nodejs && rm -rf /var/lib/apt/lists/*;\n\n# set up user per guide\nWORKDIR /home\nRUN mkdir snode && useradd snode && chown snode snode && usermod -aG sudo snode\nWORKDIR /home/snode\n\n# install local dev version\nADD https://github.com/loki-project/loki/releases/download/v3.0.6/loki-linux-x64-v3.0.6.tar.xz .\nRUN tar xvf loki-linux-x64-v3.0.6.tar.xz && ln -snf loki-linux-x64-v3.0.6 loki && rm loki-linux-x64-v3.0.6.tar.xz\n\n# set up systemd\nRUN echo $'[Unit]\\n\\\nDescription=lokid service node\\n\\\nAfter=network-online.target\\n\\\n\\n\\\n[Service]\\n\\\nType=simple\\n\\\nUser=snode\\n\\\nExecStart=/home/snode/loki/lokid --non-interactive --service-node\\n\\\nRestart=always\\n\\\nRestartSec=30s\\n\\\n\\n\\\n[Install]\\n\\\nWantedBy=multi-user.target\\n\\' > /etc/systemd/system/lokid.service\n#RUN systemctl daemon-reload && systemctl enable lokid.service && systemctl start lokid.service && sleep 30 && loki/lokid status\n\nWORKDIR /usr/src/app\n\n#ADD *.js .\nCOPY config.js .\nCOPY daemon.js .\nCOPY get-uid.js .\nCOPY index.js .\nCOPY ini.js .\nCOPY lets_tcp.js .\nCOPY lib.js .\nCOPY lib.networkTest.js .\nCOPY modes/check-systemd.js modes/\nCOPY modes/bw-test.js modes/\nCOPY modes/client.js modes/\nCOPY modes/download-binaries.js modes/\nCOPY modes/fix-perms.js modes/\nCOPY modes/prequal.js modes/\nCOPY modes/status.js modes/\nCOPY lokinet.js .\nCOPY start.js .\nCOPY uid.js .\nCOPY web_api.js .\n\n# configure npm\nCOPY package.json .\n\n# install the CLI utility\nRUN npm i -g && npm cache clean --force;\n\n"
}