diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/oxen-io/loki-launcher/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/oxen-io/loki-launcher/Dockerfile/repaired.Dockerfile
index 9ef3a67..24f44d1 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/oxen-io/loki-launcher/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/oxen-io/loki-launcher/Dockerfile/repaired.Dockerfile
@@ -21,7 +21,7 @@ RUN set -ex && \
         bzip2 \
         xsltproc \
         gperf \
-        unzip
+        unzip && rm -rf /var/lib/apt/lists/*;
 
 WORKDIR /usr/local
 
@@ -30,39 +30,39 @@ ARG CMAKE_VERSION=3.13.0
 ARG CMAKE_VERSION_DOT=v3.13
 ARG CMAKE_HASH=4058b2f1a53c026564e8936698d56c3b352d90df067b195cb749a97a3d273c90
 RUN set -ex \
-    && curl -s -O https://cmake.org/files/${CMAKE_VERSION_DOT}/cmake-${CMAKE_VERSION}.tar.gz \
+    && curl -f -s -O https://cmake.org/files/${CMAKE_VERSION_DOT}/cmake-${CMAKE_VERSION}.tar.gz \
     && echo "${CMAKE_HASH}  cmake-${CMAKE_VERSION}.tar.gz" | sha256sum -c \
     && tar -xzf cmake-${CMAKE_VERSION}.tar.gz \
     && cd cmake-${CMAKE_VERSION} \
-    && ./configure \
+    && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
     && make \
-    && make install
+    && make install && rm cmake-${CMAKE_VERSION}.tar.gz
 
 ## Boost
 ARG BOOST_VERSION=1_68_0
 ARG BOOST_VERSION_DOT=1.68.0
 ARG BOOST_HASH=7f6130bc3cf65f56a618888ce9d5ea704fa10b462be126ad053e80e553d6d8b7
 RUN set -ex \
-    && curl -s -L -o  boost_${BOOST_VERSION}.tar.bz2 https://dl.bintray.com/boostorg/release/${BOOST_VERSION_DOT}/source/boost_${BOOST_VERSION}.tar.bz2 \
+    && curl -f -s -L -o  boost_${BOOST_VERSION}.tar.bz2 https://dl.bintray.com/boostorg/release/${BOOST_VERSION_DOT}/source/boost_${BOOST_VERSION}.tar.bz2 \
     && echo "${BOOST_HASH}  boost_${BOOST_VERSION}.tar.bz2" | sha256sum -c \
     && tar -xvf boost_${BOOST_VERSION}.tar.bz2 \
     && cd boost_${BOOST_VERSION} \
     && ./bootstrap.sh \
-    && ./b2 --build-type=minimal link=static runtime-link=static --with-chrono --with-date_time --with-filesystem --with-program_options --with-regex --with-serialization --with-system --with-thread --with-locale threading=multi threadapi=pthread cflags="-fPIC" cxxflags="-fPIC" stage
+    && ./b2 --build-type=minimal link=static runtime-link=static --with-chrono --with-date_time --with-filesystem --with-program_options --with-regex --with-serialization --with-system --with-thread --with-locale threading=multi threadapi=pthread cflags="-fPIC" cxxflags="-fPIC" stage && rm boost_${BOOST_VERSION}.tar.bz2
 ENV BOOST_ROOT /usr/local/boost_${BOOST_VERSION}
 
 # OpenSSL
 ARG OPENSSL_VERSION=1.1.0j
 ARG OPENSSL_HASH=31bec6c203ce1a8e93d5994f4ed304c63ccf07676118b6634edded12ad1b3246
 RUN set -ex \
-    && curl -s -O https://www.openssl.org/source/openssl-${OPENSSL_VERSION}.tar.gz \
+    && curl -f -s -O https://www.openssl.org/source/openssl-${OPENSSL_VERSION}.tar.gz \
     && echo "${OPENSSL_HASH}  openssl-${OPENSSL_VERSION}.tar.gz" | sha256sum -c \
     && tar -xzf openssl-${OPENSSL_VERSION}.tar.gz \
     && cd openssl-${OPENSSL_VERSION} \
     && ./Configure linux-x86_64 no-shared --static -fPIC \
     && make build_generated \
     && make libcrypto.a \
-    && make install
+    && make install && rm openssl-${OPENSSL_VERSION}.tar.gz
 ENV OPENSSL_ROOT_DIR=/usr/local/openssl-${OPENSSL_VERSION}
 
 # ZMQ
@@ -73,7 +73,7 @@ RUN set -ex \
     && cd libzmq \
     && test `git rev-parse HEAD` = ${ZMQ_HASH} || exit 1 \
     && ./autogen.sh \
-    && CFLAGS="-fPIC" CXXFLAGS="-fPIC" ./configure --enable-static --disable-shared \
+    && CFLAGS="-fPIC" CXXFLAGS="-fPIC" ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --enable-static --disable-shared \
     && make \
     && make install \
     && ldconfig
@@ -82,12 +82,12 @@ RUN set -ex \
 ARG NCURSES_VERSION=6.1
 ARG READLINE_HASH=750d437185286f40a369e1e4f4764eda932b9459b5ec9a731628393dd3d32334
 RUN set -ex \
-    && curl -s -O ftp://ftp.invisible-island.net/ncurses/ncurses-6.1.tar.gz \
+    && curl -f -s -O ftp://ftp.invisible-island.net/ncurses/ncurses-6.1.tar.gz \
     && tar -xzf ncurses-${NCURSES_VERSION}.tar.gz \
     && cd ncurses-${NCURSES_VERSION} \
-    && CFLAGS="-fPIC" CXXFLAGS="-P -fPIC" ./configure --enable-termcap --with-termlib \
+    && CFLAGS="-fPIC" CXXFLAGS="-P -fPIC" ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --enable-termcap --with-termlib \
     && make \
-    && make install
+    && make install && rm ncurses-${NCURSES_VERSION}.tar.gz
 
 # zmq.hpp
 ARG CPPZMQ_VERSION=v4.3.0
@@ -102,13 +102,13 @@ RUN set -ex \
 ARG READLINE_VERSION=7.0
 ARG READLINE_HASH=750d437185286f40a369e1e4f4764eda932b9459b5ec9a731628393dd3d32334
 RUN set -ex \
-    && curl -s -O https://ftp.gnu.org/gnu/readline/readline-${READLINE_VERSION}.tar.gz \
+    && curl -f -s -O https://ftp.gnu.org/gnu/readline/readline-${READLINE_VERSION}.tar.gz \
     && echo "${READLINE_HASH}  readline-${READLINE_VERSION}.tar.gz" | sha256sum -c \
     && tar -xzf readline-${READLINE_VERSION}.tar.gz \
     && cd readline-${READLINE_VERSION} \
-    && CFLAGS="-fPIC" CXXFLAGS="-fPIC" ./configure \
+    && CFLAGS="-fPIC" CXXFLAGS="-fPIC" ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
     && make \
-    && make install
+    && make install && rm readline-${READLINE_VERSION}.tar.gz
 
 # Sodium
 ARG SODIUM_VERSION=1.0.16
@@ -118,7 +118,7 @@ RUN set -ex \
     && cd libsodium \
     && test `git rev-parse HEAD` = ${SODIUM_HASH} || exit 1 \
     && ./autogen.sh \
-    && CFLAGS="-fPIC" CXXFLAGS="-fPIC" ./configure \
+    && CFLAGS="-fPIC" CXXFLAGS="-fPIC" ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
     && make \
     && make check \
     && make install
@@ -131,7 +131,7 @@ RUN set -ex \
     && cd eudev \
     && test `git rev-parse HEAD` = ${UDEV_HASH} || exit 1 \
     && ./autogen.sh \
-    && CFLAGS="-fPIC" CXXFLAGS="-fPIC" ./configure --disable-gudev --disable-introspection --disable-hwdb --disable-manpages --disable-shared \
+    && CFLAGS="-fPIC" CXXFLAGS="-fPIC" ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --disable-gudev --disable-introspection --disable-hwdb --disable-manpages --disable-shared \
     && make \
     && make install
 
@@ -143,7 +143,7 @@ RUN set -ex \
     && cd libusb \
     && test `git rev-parse HEAD` = ${USB_HASH} || exit 1 \
     && ./autogen.sh \
-    && CFLAGS="-fPIC" CXXFLAGS="-fPIC" ./configure --disable-shared \
+    && CFLAGS="-fPIC" CXXFLAGS="-fPIC" ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --disable-shared \
     && make \
     && make install
 
@@ -155,7 +155,7 @@ RUN set -ex \
     && cd hidapi \
     && test `git rev-parse HEAD` = ${HIDAPI_HASH} || exit 1 \
     && ./bootstrap \
-    && CFLAGS="-fPIC" CXXFLAGS="-fPIC" ./configure --enable-static --disable-shared \
+    && CFLAGS="-fPIC" CXXFLAGS="-fPIC" ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --enable-static --disable-shared \
     && make \
     && make install
 
@@ -168,7 +168,7 @@ RUN set -ex \
     && test `git rev-parse HEAD` = ${PROTOBUF_HASH} || exit 1 \
     && git submodule update --init --recursive \
     && ./autogen.sh \
-    && CFLAGS="-fPIC" CXXFLAGS="-fPIC" ./configure --enable-static --disable-shared \
+    && CFLAGS="-fPIC" CXXFLAGS="-fPIC" ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --enable-static --disable-shared \
     && make \
     && make install \
     && ldconfig
@@ -198,7 +198,7 @@ FROM ubuntu:latest as network
 
 #RUN apk update && \
 #    apk add build-base cmake git libcap-dev curl ninja bash binutils-gold
-RUN apt update && apt install -y build-essential cmake git libcap-dev bsdmainutils curl git ca-certificates ccache ninja-build
+RUN apt update && apt install --no-install-recommends -y build-essential cmake git libcap-dev bsdmainutils curl git ca-certificates ccache ninja-build && rm -rf /var/lib/apt/lists/*;
 
 WORKDIR /src
 #COPY src/loki-network /src/
@@ -218,7 +218,7 @@ RUN make NINJA=ninja
 FROM ubuntu:latest as storage
 
 #RUN apk update && apk add build-essential git cmake libssl-dev libsodium-dev wget pkg-config
-RUN apt update && apt install -y build-essential git cmake libssl-dev libsodium-dev wget pkg-config
+RUN apt update && apt install --no-install-recommends -y build-essential git cmake libssl-dev libsodium-dev wget pkg-config && rm -rf /var/lib/apt/lists/*;
 WORKDIR /src
 
 COPY src/loki-storage-server/install-deps-linux.sh install-deps-linux.sh
@@ -241,10 +241,10 @@ FROM ubuntu:latest
 RUN set -ex && \
     apt-get update && \
     apt-get --no-install-recommends --yes install ca-certificates curl && \
-    apt-get --reinstall --purge install -y netbase iputils-ping net-tools gdb systemd-coredump && \
+    apt-get --reinstall --no-install-recommends --purge install -y netbase iputils-ping net-tools gdb systemd-coredump && \
     apt-get clean && \
-    rm -rf /var/lib/apt
-RUN curl -sL https://deb.nodesource.com/setup_10.x | bash - && apt-get install -y nodejs
+    rm -rf /var/lib/apt && rm -rf /var/lib/apt/lists/*;
+RUN curl -f -sL https://deb.nodesource.com/setup_10.x | bash - && apt-get install --no-install-recommends -y nodejs && rm -rf /var/lib/apt/lists/*;
 
 WORKDIR /usr/src/app
 RUN mkdir bin