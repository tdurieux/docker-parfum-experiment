{
  "startTime": 1674255875966,
  "endTime": 1674255876766,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 7,
        "columnEnd": 40
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:14-alpine\n\nCOPY http/nebula /etc/web/nebula\n\nWORKDIR /etc/web/nebula\n\n# install node packages\n# RUN chmod -R 777 /etc/web/nebula\n# RUN apk add --no-cache make gcc g++ linux-headers python\n# RUN npm config set package-lock false\n# RUN npm install --save --production\n# A way to support native addon build as well after clean to keep image size small\nRUN apk add --no-cache --virtual .build-deps alpine-sdk python3 \\\n    && npm install --production --silent \\\n    && apk del .build-deps && npm cache clean --force;\n\n# run the simple web server\nARG NODE_PORT=8088\nENV NODE_PORT=${NODE_PORT}\n\n# docker-compose DNS addressing\nARG NS_ADDR=server:9190\nENV NS_ADDR=${NS_ADDR}\n\nARG SERVER\n\n# replace the server endpoint\n# RUN sed -i \"s|{SERVER-ADDRESS}|${SERVER}|g\" /etc/web/nebula/web.min.js\n\nEXPOSE ${NODE_PORT}\nCMD [\"node\", \"node.js\"]"
}