{
  "startTime": 1674252591954,
  "endTime": 1674252593245,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 180,
        "lineEnd": 180,
        "columnStart": 5,
        "columnEnd": 61
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 195,
        "lineEnd": 195,
        "columnStart": 7,
        "columnEnd": 25
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 196,
        "lineEnd": 196,
        "columnStart": 7,
        "columnEnd": 24
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 197,
        "lineEnd": 197,
        "columnStart": 7,
        "columnEnd": 24
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 198,
        "lineEnd": 198,
        "columnStart": 7,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 199,
        "lineEnd": 199,
        "columnStart": 7,
        "columnEnd": 38
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 149,
        "lineEnd": 149,
        "columnStart": 1,
        "columnEnd": 74
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 202,
        "lineEnd": 202,
        "columnStart": 7,
        "columnEnd": 52
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 178,
        "lineEnd": 179,
        "columnStart": 7,
        "columnEnd": 6
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM neo4j:4.2.13\n\n# ensure local python is preferred over distribution python\nENV PATH /usr/local/bin:$PATH\n\n# http://bugs.python.org/issue19846\n# > At the moment, setting \"LANG=C\" on a Linux system *fundamentally breaks Python 3*, and that's not OK.\nENV LANG C.UTF-8\n\n# runtime dependencies\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n\t\tca-certificates \\\n\t\tnetbase \\\n\t&& rm -rf /var/lib/apt/lists/*\n\nENV GPG_KEY E3FF2839C048B25C084DEBE9B26995E310250568\nENV PYTHON_VERSION 3.9.7\n\nRUN set -ex \\\n\t\\\n\t&& savedAptMark=\"$(apt-mark showmanual)\" \\\n\t&& apt-get update && apt-get install -y --no-install-recommends \\\n\t\tdpkg-dev \\\n\t\tgcc \\\n\t\tlibbluetooth-dev \\\n\t\tlibbz2-dev \\\n\t\tlibc6-dev \\\n\t\tlibexpat1-dev \\\n\t\tlibffi-dev \\\n\t\tlibgdbm-dev \\\n\t\tliblzma-dev \\\n\t\tlibncursesw5-dev \\\n\t\tlibreadline-dev \\\n\t\tlibsqlite3-dev \\\n\t\tlibssl-dev \\\n\t\tmake \\\n\t\ttk-dev \\\n\t\tuuid-dev \\\n\t\twget \\\n\t\txz-utils \\\n\t\tzlib1g-dev \\\n# as of Stretch, \"gpg\" is no longer included by default\n\t\t$(command -v gpg > /dev/null || echo 'gnupg dirmngr') \\\n\t\\\n\t&& wget -O python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\" \\\n\t&& wget -O python.tar.xz.asc \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\" \\\n\t&& export GNUPGHOME=\"$(mktemp -d)\" \\\n\t&& gpg --batch --keyserver hkps://keys.openpgp.org --recv-keys \"$GPG_KEY\" \\\n\t&& gpg --batch --verify python.tar.xz.asc python.tar.xz \\\n\t&& { command -v gpgconf > /dev/null && gpgconf --kill all || :; } \\\n\t&& rm -rf \"$GNUPGHOME\" python.tar.xz.asc \\\n\t&& mkdir -p /usr/src/python \\\n\t&& tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \\\n\t&& rm python.tar.xz \\\n\t\\\n\t&& cd /usr/src/python \\\n\t&& gnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n\t&& ./configure \\\n\t\t--build=\"$gnuArch\" \\\n\t\t--enable-loadable-sqlite-extensions \\\n\t\t--enable-optimizations \\\n\t\t--enable-option-checking=fatal \\\n\t\t--enable-shared \\\n\t\t--with-system-expat \\\n\t\t--with-system-ffi \\\n\t\t--without-ensurepip \\\n\t&& make -j \"$(nproc)\" \\\n\t\tLDFLAGS=\"-Wl,--strip-all\" \\\n# setting PROFILE_TASK makes \"--enable-optimizations\" reasonable: https://bugs.python.org/issue36044 / https://github.com/docker-library/python/issues/160#issuecomment-509426916\n\t\tPROFILE_TASK='-m test.regrtest --pgo \\\n\t\t\ttest_array \\\n\t\t\ttest_base64 \\\n\t\t\ttest_binascii \\\n\t\t\ttest_binhex \\\n\t\t\ttest_binop \\\n\t\t\ttest_bytes \\\n\t\t\ttest_c_locale_coercion \\\n\t\t\ttest_class \\\n\t\t\ttest_cmath \\\n\t\t\ttest_codecs \\\n\t\t\ttest_compile \\\n\t\t\ttest_complex \\\n\t\t\ttest_csv \\\n\t\t\ttest_decimal \\\n\t\t\ttest_dict \\\n\t\t\ttest_float \\\n\t\t\ttest_fstring \\\n\t\t\ttest_hashlib \\\n\t\t\ttest_io \\\n\t\t\ttest_iter \\\n\t\t\ttest_json \\\n\t\t\ttest_long \\\n\t\t\ttest_math \\\n\t\t\ttest_memoryview \\\n\t\t\ttest_pickle \\\n\t\t\ttest_re \\\n\t\t\ttest_set \\\n\t\t\ttest_slice \\\n\t\t\ttest_struct \\\n\t\t\ttest_threading \\\n\t\t\ttest_time \\\n\t\t\ttest_traceback \\\n\t\t\ttest_unicode \\\n\t\t' \\\n\t&& make install \\\n\t&& ldconfig \\\n\t\\\n\t&& apt-mark auto '.*' > /dev/null \\\n\t&& apt-mark manual $savedAptMark \\\n\t&& find /usr/local -type f -executable -not \\( -name '*tkinter*' \\) -exec ldd '{}' ';' \\\n\t\t| awk '/=>/ { print $(NF-1) }' \\\n\t\t| sort -u \\\n\t\t| xargs -r dpkg-query --search \\\n\t\t| cut -d: -f1 \\\n\t\t| sort -u \\\n\t\t| xargs -r apt-mark manual \\\n\t&& apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false \\\n\t&& rm -rf /var/lib/apt/lists/* \\\n\t\\\n\t&& find /usr/local -depth \\\n\t\t\\( \\\n\t\t\t\\( -type d -a \\( -name test -o -name tests -o -name idle_test \\) \\) \\\n\t\t\t-o \\\n\t\t\t\\( -type f -a \\( -name '*.pyc' -o -name '*.pyo' \\) \\) \\\n\t\t\\) -exec rm -rf '{}' + \\\n\t&& rm -rf /usr/src/python \\\n\t\\\n\t&& python3 --version\n\n# make some useful symlinks that are expected to exist\nRUN cd /usr/local/bin \\\n\t&& ln -s idle3 idle \\\n\t&& ln -s pydoc3 pydoc \\\n\t&& ln -s python3 python \\\n\t&& ln -s python3-config python-config\n\n# if this is called \"PIP_VERSION\", pip explodes with \"ValueError: invalid truth value '<VERSION>'\"\nENV PYTHON_PIP_VERSION 20.1.1\n# https://github.com/pypa/get-pip\nENV PYTHON_GET_PIP_URL https://github.com/pypa/get-pip/raw/eff16c878c7fd6b688b9b4c4267695cf1a0bf01b/get-pip.py\nENV PYTHON_GET_PIP_SHA256 b3153ec0cf7b7bbf9556932aa37e4981c35dc2a2c501d70d91d2795aa532be79\n\nRUN set -ex; \\\n\n\tsavedAptMark=\"$(apt-mark showmanual)\"; \\\n\tapt-get update; \\\n\tapt-get install -y --no-install-recommends wget; \\\n\n\twget -O get-pip.py \"$PYTHON_GET_PIP_URL\"; \\\n\techo \"$PYTHON_GET_PIP_SHA256  *get-pip.py\" | sha256sum --check --strict -; \\\n\n\tapt-mark auto '.*' > /dev/null; \\\n\t[ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark; \\\n\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \\\n\trm -rf /var/lib/apt/lists/*; \\\n\n\tpython get-pip.py \\\n\t\t--disable-pip-version-check \\\n\t\t--no-cache-dir \\\n\t\t\"pip==$PYTHON_PIP_VERSION\" \\\n\t; \\\n\tpip --version; \\\n\n\tfind /usr/local -depth \\\n\t\t\\( \\\n\t\t\t\\( -type d -a \\( -name test -o -name tests -o -name idle_test \\) \\) \\\n\t\t\t-o \\\n\t\t\t\\( -type f -a \\( -name '*.pyc' -o -name '*.pyo' \\) \\) \\\n\t\t\\) -exec rm -rf '{}' +; \\\n\trm -f get-pip.py\n\n## Setup Supervisor\nWORKDIR /usr/local/src\n\nRUN set -ex \\\n  \t\\\n  \t&& savedAptMark=\"$(apt-mark showmanual)\" \\\n    && apt-get update \\\n    && apt-get install -y --no-install-recommends git \\\n\t\tcurl \\\n\t\t&& pip install --no-cache-dir git+https://github.com/Supervisor/supervisor \\\n    && cd /usr/bin \\\n    && ln -s /usr/local/bin/echo_supervisord_conf . \\\n    && ln -s /usr/local/bin/pidproxy . \\\n    && ln -s /usr/local/bin/supervisorctl . \\\n    && ln -s /usr/local/bin/supervisord . && rm -rf /var/lib/apt/lists/*;\n\n## LogonTracer install\nWORKDIR /usr/local/src\n\nRUN git clone https://github.com/JPCERTCC/LogonTracer.git \\\n    && chmod 777 LogonTracer \\\n\t\t&& chmod 777 LogonTracer/static \\\n    && cd LogonTracer \\\n\t\t&& python -m pip install --upgrade pip \\\n    && pip install --no-cache-dir cython \\\n    && pip install --no-cache-dir numpy \\\n    && pip install --no-cache-dir scipy \\\n    && pip install --no-cache-dir statsmodels \\\n    && pip install --no-cache-dir -r requirements.txt \\\n    && unlink /var/lib/neo4j/data \\\n    && mkdir -p /var/lib/neo4j/data/databases \\\n    && tar xzf sample/data.tar.gz -C /var/lib/neo4j/ && rm sample/data.tar.gz\n\n## Create supervisord.conf\nRUN touch /etc/supervisord.conf \\\n    && echo \"[supervisord]\"  >> /etc/supervisord.conf \\\n    && echo \"nodaemon=true\"  >> /etc/supervisord.conf \\\n    && echo \"[program:neo4j]\" >> /etc/supervisord.conf \\\n    && echo \"command=/docker-entrypoint.sh neo4j\"   >> /etc/supervisord.conf \\\n    && echo \"[program:logontracer]\" >> /etc/supervisord.conf \\\n    && echo \"command=/usr/local/src/run.sh\"   >> /etc/supervisord.conf\n\n## Create setup file\nRUN echo \"#!/bin/bash\" > run.sh \\\n    && echo \"cd /usr/local/src/LogonTracer\" >> run.sh \\\n    && echo \"python logontracer.py -r -o 8080 -u neo4j -p password -s \\${LTHOSTNAME}\" >> run.sh \\\n    && chmod 755 run.sh\n\n## Set env\nRUN sed -i -e \"3i NEO4J_EDITION=community\" /docker-entrypoint.sh\n\nWORKDIR /var/lib/neo4j\n\nEXPOSE 8080\n\nCMD [\"supervisord\", \"-n\"]\n"
}