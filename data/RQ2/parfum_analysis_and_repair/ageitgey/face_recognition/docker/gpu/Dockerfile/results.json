{
  "startTime": 1674215325759,
  "endTime": 1674215326548,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 31,
        "columnStart": 25,
        "columnEnd": 7
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 60,
        "lineEnd": 62,
        "columnStart": 22,
        "columnEnd": 21
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 31,
        "columnStart": 25,
        "columnEnd": 7
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 60,
        "lineEnd": 62,
        "columnStart": 22,
        "columnEnd": 21
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nvidia/cuda:11.2.0-cudnn8-devel AS compile\n\n# Install dependencies\nENV DEBIAN_FRONTEND=noninteractive\nRUN apt-get update -y && apt-get install --no-install-recommends -y \\\n    git \\\n    cmake \\\n    libsm6 \\\n    libxext6 \\\n    libxrender-dev \\\n    python3 \\\n    python3-pip \\\n    python3-venv \\\n    python3-dev \\\n    python3-numpy \\\n    gcc \\\n    build-essential \\\n    gfortran \\\n    wget \\\n    curl \\\n    graphicsmagick \\\n    libgraphicsmagick1-dev \\\n    libatlas-base-dev \\\n    libavcodec-dev \\\n    libavformat-dev \\\n    libgtk2.0-dev \\\n    libjpeg-dev \\\n    liblapack-dev \\\n    libswscale-dev \\\n    pkg-config \\\n    software-properties-common \\\n    zip \\\n    && apt-get clean && rm -rf /tmp/* /var/tmp/* && rm -rf /var/lib/apt/lists/*;\n\n\n# Virtual Environment\nENV VIRTUAL_ENV=/opt/venv\nRUN python3 -m venv $VIRTUAL_ENV\nENV PATH=\"$VIRTUAL_ENV/bin:$PATH\"\n\n# Scikit learn\nRUN pip3 install --no-cache-dir --upgrade pip && \\\n    pip3 install --no-cache-dir scikit-build\n\n# Install dlib\nENV CFLAGS=-static\nRUN git clone -b 'v19.21' --single-branch https://github.com/davisking/dlib.git dlib/ && \\\n    mkdir -p /dlib/build && \\\n    cmake -H/dlib -B/dlib/build -DDLIB_USE_CUDA=1 -DUSE_AVX_INSTRUCTIONS=1 && \\\n    cmake --build /dlib/build && \\\n    cd /dlib && \\\n    python3 /dlib/setup.py install --set BUILD_SHARED_LIBS=OFF\n\n# Install face recognition\nRUN pip3 install --no-cache-dir face_recognition\n\n# Runtime Image\nFROM nvidia/cuda:11.2.0-cudnn8-runtime\n\n# Install requirements\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    python3 \\\n    python3-distutils && rm -rf /var/lib/apt/lists/*;\n\n# Copy in libs\nCOPY --from=compile /opt/venv /opt/venv\nCOPY --from=compile \\\n    # Sources\n    /lib/x86_64-linux-gnu/libpthread.so.0 \\\n    /lib/x86_64-linux-gnu/libdl.so.2 \\\n    /lib/x86_64-linux-gnu/librt.so.1 \\\n    /lib/x86_64-linux-gnu/libX11.so.6 \\\n    /lib/x86_64-linux-gnu/libpng16.so.16 \\\n    /lib/x86_64-linux-gnu/libjpeg.so.8 \\\n    /lib/x86_64-linux-gnu/libcudnn.so.8 \\\n    /lib/x86_64-linux-gnu/libstdc++.so.6 \\\n    /lib/x86_64-linux-gnu/libm.so.6 \\\n    /lib/x86_64-linux-gnu/libgcc_s.so.1 \\\n    /lib/x86_64-linux-gnu/libc.so.6 \\\n    /lib/x86_64-linux-gnu/libxcb.so.1 \\\n    /lib/x86_64-linux-gnu/libz.so.1 \\\n    /lib/x86_64-linux-gnu/libXau.so.6 \\\n    /lib/x86_64-linux-gnu/libXdmcp.so.6 \\\n    /lib/x86_64-linux-gnu/libbsd.so.0 \\\n    # Destination\n    /lib/x86_64-linux-gnu/\nCOPY --from=compile \\\n    # Sources\n    /usr/local/cuda/lib64/libcublas.so.11 \\\n    /usr/local/cuda/lib64/libcurand.so.10 \\\n    /usr/local/cuda/lib64/libcusolver.so.11 \\\n    /usr/local/cuda/lib64/libcublasLt.so.11 \\\n    # Destination\n    /usr/local/cuda/lib64/\n\n# Add our packages\nENV PATH=\"/opt/venv/bin:$PATH\"\n"
}