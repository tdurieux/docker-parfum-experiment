diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/thecodingmachine/gotenberg/build/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/thecodingmachine/gotenberg/build/Dockerfile/repaired.Dockerfile
index f2ef5e6..cb5f982 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/thecodingmachine/gotenberg/build/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/thecodingmachine/gotenberg/build/Dockerfile/repaired.Dockerfile
@@ -57,8 +57,8 @@ ARG PDFTK_VERSION
 COPY build/install-chromium.sh /tmp/install-chromium.sh
 
 RUN \
-    # Create a non-root user.
-    # All processes in the Docker container will run with this dedicated user.
+
+
     groupadd --gid "$GOTENBERG_USER_GID" gotenberg &&\
     useradd --uid "$GOTENBERG_USER_UID" --gid gotenberg --shell /bin/bash --home /home/gotenberg --no-create-home gotenberg &&\
     mkdir /home/gotenberg &&\
@@ -67,12 +67,12 @@ RUN \
     # Note: tini is a helper for reaping zombie processes.
     apt-get update -qq &&\
     DEBIAN_FRONTEND=noninteractive apt-get install -y -qq --no-install-recommends curl gnupg htop tini python3 default-jre-headless &&\
-    ln -s /usr/bin/htop /usr/bin/top &&\
+    ln -s /usr/bin/htop /usr/bin/top && \
     # Install fonts.
     # Credits:
     # https://github.com/arachnys/athenapdf/blob/master/cli/Dockerfile.
     # https://help.accusoft.com/PrizmDoc/v12.1/HTML/Installing_Asian_Fonts_on_Ubuntu_and_Debian.html.
-    curl -o ./ttf-mscorefonts-installer_3.8_all.deb http://httpredir.debian.org/debian/pool/contrib/m/msttcorefonts/ttf-mscorefonts-installer_3.8_all.deb &&\
+    curl -f -o ./ttf-mscorefonts-installer_3.8_all.deb https://httpredir.debian.org/debian/pool/contrib/m/msttcorefonts/ttf-mscorefonts-installer_3.8_all.deb && \
     DEBIAN_FRONTEND=noninteractive apt-get install -y -qq --no-install-recommends \
     ./ttf-mscorefonts-installer_3.8_all.deb \
     culmus \
@@ -108,46 +108,46 @@ RUN \
     fonts-noto-mono \
     fonts-noto-ui-core \
     fonts-sil-gentium \
-    fonts-sil-gentium-basic &&\
-    rm -f ./ttf-mscorefonts-installer_3.8_all.deb &&\
+    fonts-sil-gentium-basic && \
+    rm -f ./ttf-mscorefonts-installer_3.8_all.deb && \
     # Add Color and Black-and-White Noto emoji font.
     # Credits:
     # https://github.com/gotenberg/gotenberg/pull/325.
     # https://github.com/googlefonts/noto-emoji.
-    curl -Ls "https://github.com/googlefonts/noto-emoji/raw/$NOTO_COLOR_EMOJI_VERSION/fonts/NotoColorEmoji.ttf" -o /usr/local/share/fonts/NotoColorEmoji.ttf &&\
+    curl -f -Ls "https://github.com/googlefonts/noto-emoji/raw/$NOTO_COLOR_EMOJI_VERSION/fonts/NotoColorEmoji.ttf" -o /usr/local/share/fonts/NotoColorEmoji.ttf && \
     # Install Google Chrome / Chromium.
-    /tmp/install-chromium.sh &&\
+    /tmp/install-chromium.sh && \
     # Install LibreOffice.
     # Note: we use the bullseye-backports distribution to get the latest LibreOffice version.
     # See:
     # https://github.com/gotenberg/gotenberg/pull/322.
     # https://github.com/gotenberg/gotenberg/issues/403.
-    echo "deb https://httpredir.debian.org/debian/ bullseye-backports main contrib non-free" >> /etc/apt/sources.list &&\
-    apt-get update -qq &&\
-    DEBIAN_FRONTEND=noninteractive apt-get install -y -qq --no-install-recommends -t bullseye-backports libreoffice &&\
+    echo "deb https://httpredir.debian.org/debian/ bullseye-backports main contrib non-free" >> /etc/apt/sources.list && \
+    apt-get update -qq && \
+    DEBIAN_FRONTEND=noninteractive apt-get install -y -qq --no-install-recommends -t bullseye-backports libreoffice && \
     # Download unoconv (Python script).
-    curl -Ls https://raw.githubusercontent.com/dagwieers/unoconv/master/unoconv -o /usr/bin/unoconv &&\
-    chmod +x /usr/bin/unoconv &&\
+    curl -f -Ls https://raw.githubusercontent.com/dagwieers/unoconv/master/unoconv -o /usr/bin/unoconv && \
+    chmod +x /usr/bin/unoconv && \
     # unoconv will look for the Python binary, which has to be at version 3.
-    ln -s /usr/bin/python3 /usr/bin/python &&\
+    ln -s /usr/bin/python3 /usr/bin/python && \
     # Download PDFtk.
     # See https://github.com/gotenberg/gotenberg/pull/273. \
-    curl -o /usr/bin/pdftk-all.jar "https://gitlab.com/api/v4/projects/5024297/packages/generic/pdftk-java/$PDFTK_VERSION/pdftk-all.jar" &&\
-    chmod a+x /usr/bin/pdftk-all.jar &&\
+    curl -f -o /usr/bin/pdftk-all.jar "https://gitlab.com/api/v4/projects/5024297/packages/generic/pdftk-java/$PDFTK_VERSION/pdftk-all.jar" && \
+    chmod a+x /usr/bin/pdftk-all.jar && \
     # Download QPDF.
-    DEBIAN_FRONTEND=noninteractive apt-get install -y -qq --no-install-recommends qpdf &&\
+    DEBIAN_FRONTEND=noninteractive apt-get install -y -qq --no-install-recommends qpdf && \
     # See https://github.com/nextcloud/docker/issues/380.
-    mkdir -p /usr/share/man/man1mkdir -p /usr/share/man/man1 &&\
+    mkdir -p /usr/share/man/man1mkdir -p /usr/share/man/man1 && \
     # Cleanup.
     # Note: the Debian image does automatically a clean after each install thanks to a hook.
     # Therefore, there is no need for apt-get clean.
     # See https://stackoverflow.com/a/24417119/3248473.
-    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* &&\
+    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* && \
     # Print versions of main dependencies.
-    chromium --version &&\
-    libreoffice --version &&\
-    unoconv --version &&\
-    pdftk --version &&\
+    chromium --version && \
+    libreoffice --version && \
+    unoconv --version && \
+    pdftk --version && \
     qpdf --version
 
 # Copy the Gotenberg binary from the builder stage.