{
  "startTime": 1674217313134,
  "endTime": 1674217314847,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 72
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 110
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 4,
        "columnEnd": 97
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# For building forgerock/secret-agent:tagname\n\n# Global build arguments\nARG GO_VERSION=\"1.16.5\"\nARG GO_PACKAGE_SHA256=\"b12c23023b68de22f74c0524f10b753e7b08b1504cb7e417eccebdd3fae49061\"\nARG KUBEBUILDER_VERSION=\"3.1.0\"\n\nFROM openjdk:11-jre-slim as tester\n\nARG GO_VERSION\nARG GO_PACKAGE_SHA256\nARG KUBEBUILDER_VERSION\n\nENV CGO_ENABLED=0 GOOS=linux GOARCH=amd64 DEBIAN_FRONTEND=noninteractive\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y curl git-core make && \\\n    apt-get clean all && rm -rf /var/lib/apt/lists/*;\n\nRUN curl -f -LO https://dl.google.com/go/go${GO_VERSION}.linux-amd64.tar.gz && \\\n    SUM=$(sha256sum go${GO_VERSION}.linux-amd64.tar.gz | awk '{print $1}') && \\\n    if [ \"${SUM}\" != \"${GO_PACKAGE_SHA256}\" ]; then echo \"Failed checksum\"; exit 1; fi && \\\n    tar xf go${GO_VERSION}.linux-amd64.tar.gz && \\\n    chown -R root:root ./go && \\\n    mv go /usr/local && \\\n    rm go${GO_VERSION}.linux-amd64.tar.gz\n\nRUN curl -f -L -o kubebuilder https://go.kubebuilder.io/dl/${KUBEBUILDER_VERSION}/$(go env GOOS)/$(go env GOARCH) \\\n        && install kubebuilder /usr/local/bin/kubebuilder \\\n            && /usr/local/go/bin/go install sigs.k8s.io/controller-tools/cmd/controller-gen@v0.6.1\n\nENV PATH=\"/usr/local/go/bin:${PATH}:/root/go/bin\" GOPATH=\"/root/go\"\nWORKDIR /root/go/src/github.com/ForgeRock/secret-agent\n\nCMD [\"bash\"]\n\n\n# Build the manager binary\nFROM golang:${GO_VERSION}-alpine as builder\n\nWORKDIR /workspace\n# Copy the Go Modules manifests\nCOPY go.mod go.sum ./\n# cache deps before building and copying source so that we don't need to re-download as much\n# and so that source changes don't invalidate our downloaded layer\nRUN go mod download\n# Copy the go source\nCOPY . .\n# Build with \"-s -w\" linker flags to omit the symbol table, debug information and the DWARF table\nRUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 GO111MODULE=on go build -ldflags \"-s -w\" -a -o manager main.go\n\n# Use distroless as minimal base image to package the manager binary\n# Refer to https://github.com/GoogleContainerTools/distroless for more details\n\n# FROM gcr.io/distroless/static:nonroot\n# WORKDIR /\n# COPY --from=builder /workspace/manager .\n# USER nonroot:nonroot\n\n# ENTRYPOINT [\"/manager\"]\n\n\n\nFROM openjdk:11-jre-slim as release\n\nRUN apt-get update && \\\n    DEBIAN_FRONTEND=noninteractive apt-get install --no-install-recommends -y curl lsof net-tools && \\\n    apt-get clean all && rm -rf /var/lib/apt/lists/*;\nRUN addgroup --gid 11111 secret-agent && \\\n    adduser --shell /bin/bash --home /home/secret-agent --uid 11111 --disabled-password --ingroup root --gecos secret-agent secret-agent && \\\n    chown -R secret-agent:root /home/secret-agent\n\nWORKDIR /opt/gen\nCOPY --from=builder --chown=secret-agent:root /workspace/manager /\n\nUSER 11111\n\nCMD [\"bash\"]\n\n"
}