{
  "startTime": 1674215951706,
  "endTime": 1674215952211,
  "originalSmells": [
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 22,
        "columnEnd": 82
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Mutable DS image used by the ds-operator\n#\n# This image is designed to run setup at runtime, not docker build time. It is a\n# fully \"mutable\", database like image - where all volatile data (including configuration and schema)\n# is on a PVC. This behaves like a traditonal VM\nFROM gcr.io/forgerock-io/ds-empty/pit1:7.3.0-latest-postcommit\n\n# FOR DEBUG. Remove for production deployment\nUSER root\nRUN apt-get update && apt-get install -y --no-install-recommends vim ncat dnsutils && rm -rf /var/lib/apt/lists/*;\nUSER forgerock\n\n# The PVC mount point where all writeable data is stored.\nENV DS_DATA_DIR /opt/opendj/data\n\n# The ds deployment uses PEM based certificates. This sets the location of the certs.\n# This is set at docker *build* time. If you change this at runtime you must edit the config.ldif.\nENV PEM_KEYS_DIRECTORY \"/var/run/secrets/keys/ds\"\nENV PEM_TRUSTSTORE_DIRECTORY \"/var/run/secrets/keys/truststore\"\n\n# Add th default scripts to be used if the deployer does not provide an implementation.\n# See default-scripts/setup\nCOPY --chown=forgerock:root default-scripts /opt/opendj/default-scripts\nCOPY --chown=forgerock:root ldif-ext /opt/opendj/ldif-ext\nCOPY --chown=forgerock:root *.sh /opt/opendj/\n\n# This is the basic DS setup from the DS repo. It does the bare bones\n# setup - without any profiles. Profile setup will come later at runtime.\nRUN ./ds-setup.sh && rm ./ds-setup.sh && rm -fr ldif-ext"
}