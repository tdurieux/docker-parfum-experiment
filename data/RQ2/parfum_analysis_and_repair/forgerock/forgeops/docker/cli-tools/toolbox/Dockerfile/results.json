{
  "startTime": 1674254774408,
  "endTime": 1674254775046,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 11,
        "columnEnd": 122
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 49,
        "columnEnd": 96
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 11,
        "columnEnd": 113
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 98
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 11,
        "columnEnd": 102
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 11,
        "columnEnd": 79
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 11,
        "columnEnd": 102
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:buster as builder\n\nRUN apt-get update \\\n        && apt-get install -y curl ca-certificates bash --no-install-recommends && rm -rf /var/lib/apt/lists/*;\n\nARG KUSTOMIZE_VERSION=latest\nARG KUBECTL_VERSION=latest\n\nRUN mkdir -p /opt/bin \\\n        && curl -f -LO \"https://dl.k8s.io/release/$( curl -f -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl\" \\\n        && cp kubectl /opt/bin \\\n        && curl -f -s \"https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh\" | bash \\\n        && cp kustomize /opt/bin \\\n        && chmod a+rx /opt/bin/*\n\n# Skaffold\nRUN curl -f -Lo skaffold https://storage.googleapis.com/skaffold/releases/latest/skaffold-linux-amd64 \\\n        && chmod +x skaffold && mv skaffold /opt/bin\n\n# TODO: Pull the forgeops cli\n#  RUN curl -LO https://github.com/ForgeRock/forgeops-cli/releases/latest/download/todo \\\n#         && tar xvfz\n\nFROM debian:buster\nARG VSCODE_CONTAINERS=\"https://raw.githubusercontent.com/microsoft/vscode-dev-containers/master/script-library/common-debian.sh\"\nENV DEBIAN_FRONTEND=noninteractive\nSHELL [\"/bin/bash\", \"-c\"]\n\nRUN useradd forgerock --home /opt/workspace --gid 0 \\\n        && apt-get update \\\n        && apt-get install --no-install-recommends -y curl ca-certificates vim bash procps git netcat dnsutils tmux ldap-utils \\\n        && mkdir -m 0770 -p /opt/{workspace,build} \\\n        && chown forgerock:root /opt/{workspace,build} && rm -rf /var/lib/apt/lists/*;\n\n# Uncomment for vscode support\n# RUN curl -Lso common.sh ${VSCODE_CONTAINERS} \\\n#         && bash common.sh false none automatic automatic false false\n\nUSER forgerock\n\nRUN echo \"PATH=/opt/workspace/bin:$PATH\" >> /opt/build/.bashrc \\\n        && echo \"bash -c /opt/build/bin/start-shell.sh\" >> /opt/build/.bashrc\n\nCOPY --from=gcr.io/google-containers/pause:latest /pause /usr/local/bin/pause\nCOPY --from=builder /opt/bin/* /usr/local/bin/\nCOPY --chown=forgerock:root etc /opt/build/etc\nCOPY --chown=forgerock:root bin/  /opt/build/bin\nCOPY --chown=forgerock:root bin/git-set-fork.sh /usr/local/bin\n\nENV SSH_PORT=4222\nENV WORKSPACE=/opt/workspace\n\nENV PATH=/opt/build/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/workspace/forgeops/bin\n\nWORKDIR /opt/workspace\nENTRYPOINT [\"/opt/build/bin/entrypoint.sh\"]\nCMD [\"/usr/local/bin/pause\"]\n"
}