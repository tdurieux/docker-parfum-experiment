{
  "startTime": 1674252019380,
  "endTime": 1674252020015,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 22
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.9-slim\n\nENV PYTHONUNBUFFERED 1\n\nRUN groupadd -g 555 -r app && \\\n    useradd -u 555 -r -g app app\n\nCOPY ./compose/app/wait-for.sh /app/bin/wait-for.sh\nCOPY ./compose/app/sync.sh /app/bin/sync.sh\nCOPY ./compose/app/web.sh /app/bin/web.sh\nCOPY ./compose/app/workers.sh /app/bin/workers.sh\nCOPY ./compose/app/cron.sh /app/bin/cron.sh\nCOPY ./vendor/bmds-0.11.0.tar.gz /app/build/vendor/bmds-0.11.0.tar.gz\n\n# used in some dev/staging environments\nCOPY ./tests/data/fixtures/db.yaml /app/test-db-fixture.yaml\n\n# security updates\n# https://pythonspeed.com/articles/system-packages-docker/\nRUN apt-get update && \\\n    apt-get -y upgrade && \\\n    apt-get install -y --no-install-recommends netcat git && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    \\\n    mkdir -p /app/logs\n\nCOPY ./requirements /app/build/requirements\nCOPY ./dist /app/build/dist\n\nWORKDIR /app/build\nRUN pip install --no-cache-dir -U pip && \\\n    pip install -r /app/build/requirements/production.txt --no-cache-dir && \\\n    rm -rf /app/build && \\\n    chown -R app:app /app\n\nWORKDIR /app\nUSER app\n"
}