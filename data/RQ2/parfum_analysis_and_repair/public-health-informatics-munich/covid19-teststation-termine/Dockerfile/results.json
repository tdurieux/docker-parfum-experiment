{
  "startTime": 1674254745733,
  "endTime": 1674254746295,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 22
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.7-slim-buster as base\n\nFROM base as base_pipenv\n\nRUN pip install --no-cache-dir pipenv\nCOPY Pipfile .\nCOPY Pipfile.lock .\nRUN pipenv lock --requirements > requirements.txt\nRUN pipenv lock --dev --requirements > dev_requirements.txt\n\nFROM base as base_python\nWORKDIR /app\n\nCOPY --from=base_pipenv requirements.txt .\nRUN pip install --no-cache-dir -r requirements.txt\n\nFROM node:13 as yarn_fe_installer\nWORKDIR /app\nCOPY termine-fe/package.json .\nCOPY termine-fe/yarn.lock .\nRUN yarn install --network-timeout 100000 && yarn cache clean;\n\nFROM yarn_fe_installer as yarn_fe_builder\nCOPY termine-fe/.linguirc .\nCOPY termine-fe/jsconfig.json .\nCOPY termine-fe/src src/\nCOPY termine-fe/public public/\nRUN yarn run compile-i18n\nRUN yarn run format\nRUN yarn build\n# for debugging\nCMD bash\n\nFROM node:13 as yarn_bo_installer\nWORKDIR /app\nCOPY termine-bo/package.json .\nCOPY termine-bo/yarn.lock .\nRUN yarn install --network-timeout 100000 && yarn cache clean;\n\nFROM yarn_bo_installer as yarn_bo_builder\nCOPY termine-bo/src src/\nCOPY termine-bo/public public/\nENV PUBLIC_URL \"/admin\"\nRUN yarn build\n# for debugging\nCMD bash\n\nFROM base_python as tester\nCOPY --from=base_pipenv dev_requirements.txt .\nRUN pip install --no-cache-dir -r dev_requirements.txt\nCOPY termine-be/ .\nENTRYPOINT [\"pytest\"]\n\nFROM base_python as base_server\nRUN pip install --no-cache-dir gunicorn\n\nFROM base as deployer\nRUN pip install --no-cache-dir awscli\nCOPY cloudformation/ cloudformation/\nCMD bash\n\nFROM base_python as command\nCOPY termine-be/ .\nENTRYPOINT [\"hug\", \"-f\", \"main.py\", \"-c\"]\nCMD [\"help\"]\n\nFROM base_server as server\nCOPY entrypoint.sh .\nCOPY wait-for-it.sh .\nCOPY termine-be/ .\nCOPY --from=yarn_fe_builder /app/build/ build_fe/\nCOPY --from=yarn_bo_builder /app/build/ build_bo/\nENV FE_STATICS_DIR \"build_fe\"\nENV BO_STATICS_DIR \"build_bo\"\nCMD [\"./entrypoint.sh\"]\n"
}