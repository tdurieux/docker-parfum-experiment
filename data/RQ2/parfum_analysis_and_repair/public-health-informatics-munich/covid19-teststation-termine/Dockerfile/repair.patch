diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/public-health-informatics-munich/covid19-teststation-termine/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/public-health-informatics-munich/covid19-teststation-termine/Dockerfile/repaired.Dockerfile
index e53c0bb..586cdc4 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/public-health-informatics-munich/covid19-teststation-termine/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/public-health-informatics-munich/covid19-teststation-termine/Dockerfile/repaired.Dockerfile
@@ -2,7 +2,7 @@ FROM python:3.7-slim-buster as base
 
 FROM base as base_pipenv
 
-RUN pip install pipenv
+RUN pip install --no-cache-dir pipenv
 COPY Pipfile .
 COPY Pipfile.lock .
 RUN pipenv lock --requirements > requirements.txt
@@ -12,13 +12,13 @@ FROM base as base_python
 WORKDIR /app
 
 COPY --from=base_pipenv requirements.txt .
-RUN pip install -r requirements.txt
+RUN pip install --no-cache-dir -r requirements.txt
 
 FROM node:13 as yarn_fe_installer
 WORKDIR /app
 COPY termine-fe/package.json .
 COPY termine-fe/yarn.lock .
-RUN yarn install --network-timeout 100000
+RUN yarn install --network-timeout 100000 && yarn cache clean;
 
 FROM yarn_fe_installer as yarn_fe_builder
 COPY termine-fe/.linguirc .
@@ -35,7 +35,7 @@ FROM node:13 as yarn_bo_installer
 WORKDIR /app
 COPY termine-bo/package.json .
 COPY termine-bo/yarn.lock .
-RUN yarn install --network-timeout 100000
+RUN yarn install --network-timeout 100000 && yarn cache clean;
 
 FROM yarn_bo_installer as yarn_bo_builder
 COPY termine-bo/src src/
@@ -47,15 +47,15 @@ CMD bash
 
 FROM base_python as tester
 COPY --from=base_pipenv dev_requirements.txt .
-RUN pip install -r dev_requirements.txt
+RUN pip install --no-cache-dir -r dev_requirements.txt
 COPY termine-be/ .
 ENTRYPOINT ["pytest"]
 
 FROM base_python as base_server
-RUN pip install gunicorn
+RUN pip install --no-cache-dir gunicorn
 
 FROM base as deployer
-RUN pip install awscli
+RUN pip install --no-cache-dir awscli
 COPY cloudformation/ cloudformation/
 CMD bash