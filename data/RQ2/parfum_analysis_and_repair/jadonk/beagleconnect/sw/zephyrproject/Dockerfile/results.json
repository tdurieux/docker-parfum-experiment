{
  "startTime": 1674252682100,
  "endTime": 1674252683441,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 33,
        "columnEnd": 81
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 69
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 69
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM arm32v7/debian:bullseye as build\n\nENV DEBIAN_FRONTEND=nonineractive\n\n# rcn-ee repo required for latest CMake\nRUN echo . \\\n\t&& apt update \\\n\t&& apt install --no-install-recommends -y gnupg \\\n\t&& echo \"deb [arch=armhf] http://repos.rcn-ee.net/debian/ bullseye main\" >> /etc/apt/sources.list \\\n\t&& apt-key adv --batch --keyserver keyserver.ubuntu.com --recv-key D284E608A4C46402 \\\n\t&& apt update \\\n\t&& apt install --no-install-recommends -y \\\n\t\tgit vim \\\n\t\tbuild-essential \\\n\t\tcmake ninja-build gperf \\\n\t\tccache dfu-util device-tree-compiler \\\n\t\tmake gcc libsdl2-dev \\\n\t\tlibxml2-dev libxslt-dev libssl-dev libjpeg62-turbo-dev \\\n\t\tgcc-arm-none-eabi libnewlib-arm-none-eabi \\\n\t\tlibtool-bin pkg-config autoconf automake libusb-1.0-0-dev \\\n\t\tpython3-dev python3-pip python3-setuptools python3-tk python3-wheel \\\n\t&& echo . && rm -rf /var/lib/apt/lists/*;\nRUN pip3 install --no-cache-dir -U west\n\nRUN echo . \\\n\t&& mkdir -p /usr/src/openocd \\\n\t&& cd /usr/src/openocd \\\n\t&& git clone https://github.com/zephyrproject-rtos/openocd --depth 1 -b zephyr-20200722 \\\n\t&& cd openocd && ./bootstrap && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-ftdi --disable-doxygen-html && make && make install \\\n\t&& cd / && rm -rf /usr/src/openocd\n\nWORKDIR /opt/source\nRUN echo . \\\n\t&& touch . \\\n\t&& west init -m https://github.com/jadonk/zephyr --mr bcf-sdk-0.0.4 bcf-zephyr \\\n\t&& echo .\n\nWORKDIR /opt/source/bcf-zephyr\nRUN echo . \\\n\t&& west update \\\n\t&& west zephyr-export \\\n\t&& pip3 install --no-cache-dir -r zephyr/scripts/requirements-base.txt \\\n\t&& echo .\n\nENV ZEPHYR_TOOLCHAIN_VAIRANT=cross-compile\nENV CROSS_COMPILE=/usr/bin/arm-none-eabi-\nENV ZEPHYR_BASE=/opt/source/bcf-zephyr/zephyr\nENV PATH=/opt/source/bcf-zephyr/zephyr/scripts:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\nENV BOARD=beagleconnect_freedom\n\nRUN echo . \\\n\t&& echo \"source /opt/source/bcf-zephyr/zephyr/zephyr-env.sh\" >> /root/.bashrc \\\n\t&& echo .\n\nRUN echo . \\\n\t&& west build -d sensortest zephyr/samples/boards/beagle_bcf/sensortest \\\n\t&& echo .\n\nENV ZEPHYR_BASE=/root/src/bcf-zephyr/zephyr\nENV PATH=/root/src/bcf-zephyr/zephyr/scripts:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\nRUN echo . \\\n\t&& west build -b beagleconnect_freedom zephyr/samples/boards/beagle_bcf/sensortest \\\n\t&& echo ."
}