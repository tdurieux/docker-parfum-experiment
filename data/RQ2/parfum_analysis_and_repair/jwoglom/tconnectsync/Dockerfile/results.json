{
  "startTime": 1674250838843,
  "endTime": 1674250839363,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 22,
        "columnEnd": 68
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.9-slim as base\n\n# The following is adapted from:\n# https://sourcery.ai/blog/python-docker/\n\n# Setup env\nENV LANG C.UTF-8\nENV LC_ALL C.UTF-8\nENV PYTHONDONTWRITEBYTECODE 1\nENV PYTHONFAULTHANDLER 1\n\nFROM base AS python-deps\n\n# Install pipenv and compilation dependencies\nRUN pip install --no-cache-dir pipenv\nRUN apt-get update && apt-get install -y --no-install-recommends gcc && rm -rf /var/lib/apt/lists/*;\n\nRUN mkdir -p /base\nWORKDIR /base\n\n# Install python dependencies in /.venv\nCOPY Pipfile .\nCOPY Pipfile.lock .\nCOPY setup.cfg .\nCOPY setup.py .\nCOPY pyproject.toml .\nRUN PIPENV_VENV_IN_PROJECT=1 pipenv install --deploy\n\nFROM base AS runtime\n\n# Copy virtualenv from python-deps stage\nCOPY --from=python-deps /base/.venv /base/.venv\nENV PATH=\"/base/.venv/bin:$PATH\"\n\n# Create and switch to a new user\nRUN useradd --create-home appuser\nWORKDIR /home/appuser\nUSER appuser\n\n# Install application into container\nCOPY . .\n\n# Run the application\nENTRYPOINT [\"python3\", \"-u\", \"main.py\"]"
}