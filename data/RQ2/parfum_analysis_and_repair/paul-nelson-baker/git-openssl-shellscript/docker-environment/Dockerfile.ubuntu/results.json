{
  "startTime": 1674215553120,
  "endTime": 1674215553842,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 2,
        "columnEnd": 25
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 11,
        "columnStart": 5,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 11,
        "columnStart": 5,
        "columnEnd": 29
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 2,
        "columnEnd": 25
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 11,
        "columnStart": 5,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedDockerfile": "ARG UBUNTU_VERSION\nFROM ubuntu:${UBUNTU_VERSION}\nARG UBUNTU_VERSION\n\nENV DEBIAN_FRONTEND=noninteractive\n# RUN --mount=type=cache,id=ubuntu-${UBUNTU_VERSION}-cache,target=/var/cache/apt --mount=type=cache,id=ubuntu-${UBUNTU_VERSION}-lib,target=/var/lib/apt \\\nRUN apt-get update && \\\n  apt-get -y --no-install-recommends install sudo && rm -rf /var/lib/apt/lists/*;\n# RUN --mount=type=cache,id=ubuntu-${UBUNTU_VERSION}-cache,target=/var/cache/apt --mount=type=cache,id=ubuntu-${UBUNTU_VERSION}-lib,target=/var/lib/apt \\\nRUN apt-get install --no-install-recommends build-essential autoconf dh-autoreconf libcurl4-openssl-dev \\\n    tcl-dev gettext asciidoc docbook2x install-info \\\n    libexpat1-dev libz-dev -y && rm -rf /var/lib/apt/lists/*;\n\nRUN useradd --create-home git-user\nRUN usermod -aG sudo git-user\nRUN echo \"%sudo ALL=(ALL) NOPASSWD:ALL\" >> /etc/sudoers\nUSER git-user\nWORKDIR /home/git-user\nENTRYPOINT [ \"/bin/bash\", \"-c\" ]"
}