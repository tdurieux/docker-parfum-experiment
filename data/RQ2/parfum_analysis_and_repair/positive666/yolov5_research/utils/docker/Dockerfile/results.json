{
  "startTime": 1674215800081,
  "endTime": 1674215800951,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 16,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 60
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 18,
        "columnEnd": 88
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# YOLOv5 ðŸš€ by Ultralytics, GPL-3.0 license\n\n# Start FROM NVIDIA PyTorch image https://ngc.nvidia.com/catalog/containers/nvidia:pytorch\nFROM nvcr.io/nvidia/pytorch:22.04-py3\nRUN rm -rf /opt/pytorch  # remove 1.2GB dir\n\n# Downloads to user config dir\nADD https://ultralytics.com/assets/Arial.ttf https://ultralytics.com/assets/Arial.Unicode.ttf /root/.config/Ultralytics/\n\n# Install linux packages\nRUN apt update && apt install --no-install-recommends -y zip htop screen libgl1-mesa-glx && rm -rf /var/lib/apt/lists/*;\n\n# Install pip packages\nCOPY requirements.txt .\nRUN python -m pip install --upgrade pip\nRUN pip uninstall -y torch torchvision torchtext Pillow\nRUN pip install --no-cache-dir --no-cache -r requirements.txt albumentations wandb gsutil notebook Pillow >=9.1.0 \\\n    --extra-index-url https://download.pytorch.org/whl/cu113\n\n# Create working directory\nRUN mkdir -p /usr/src/app && rm -rf /usr/src/app\nWORKDIR /usr/src/app\n\n# Copy contents\nCOPY . /usr/src/app\nRUN git clone https://github.com/ultralytics/yolov5 /usr/src/yolov5\n\n# Set environment variables\nENV OMP_NUM_THREADS=8\n\n\n# Usage Examples -------------------------------------------------------------------------------------------------------\n\n# Build and Push\n# t=ultralytics/yolov5:latest && sudo docker build -f utils/docker/Dockerfile -t $t . && sudo docker push $t\n\n# Pull and Run\n# t=ultralytics/yolov5:latest && sudo docker pull $t && sudo docker run -it --ipc=host --gpus all $t\n\n# Pull and Run with local directory access\n# t=ultralytics/yolov5:latest && sudo docker pull $t && sudo docker run -it --ipc=host --gpus all -v \"$(pwd)\"/datasets:/usr/src/datasets $t\n\n# Kill all\n# sudo docker kill $(sudo docker ps -q)\n\n# Kill all image-based\n# sudo docker kill $(sudo docker ps -qa --filter ancestor=ultralytics/yolov5:latest)\n\n# Bash into running container\n# sudo docker exec -it 5a9b5863d93d bash\n\n# Bash into stopped container\n# id=$(sudo docker ps -qa) && sudo docker start $id && sudo docker exec -it $id bash\n\n# Clean up\n# docker system prune -a --volumes\n\n# Update Ubuntu drivers\n# https://www.maketecheasier.com/install-nvidia-drivers-ubuntu/\n\n# DDP test\n# python -m torch.distributed.run --nproc_per_node 2 --master_port 1 train.py --epochs 3\n\n# GCP VM from Image\n# docker.io/ultralytics/yolov5:latest\n"
}