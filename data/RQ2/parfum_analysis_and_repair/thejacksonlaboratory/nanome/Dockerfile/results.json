{
  "startTime": 1674253066652,
  "endTime": 1674253067514,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 4,
        "columnEnd": 82
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 1,
        "columnEnd": 42
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 79
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 112
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# @Author   : Yang Liu\n# @FileName : Dockerfile\n# @Software : NANOME project\n# @Organization : JAX Li Lab\n# @Website  : https://github.com/LabShengLi/nanome\n\n# Set the base image to Ubuntu 18.04 and NVIDIA GPU from https://hub.docker.com/r/nvidia/cuda\n# or from https://ngc.nvidia.com/catalog/containers/nvidia:cuda/tags\nFROM nvidia/cuda:11.6.0-base-ubuntu18.04\n\n# Author and maintainer\nMAINTAINER Yang Liu <yang.liu@jax.org>\nLABEL description=\"Nanome project in Li Lab at The Jackson Laboratory\" \\\n      author=\"yang.liu@jax.org\"\n\n# Guppy version\nARG GUPPY_VERSION=6.1.5\nARG REMORA_VERSION=1.1.0\nARG MEGALODON_VERSION=2.5.0\nARG BUILD_PACKAGES=\"wget apt-transport-https procps git curl libnvidia-compute-460-server\"\nARG DEBIAN_FRONTEND=\"noninteractive\"\n\n# Check version of guppy, ref: wget https://americas.oxfordnanoportal.com/software/analysis/ont-guppy-cpu_6.1.3_linux64.tar.gz --no-check-certificate\n# Another way: https://pypi.org/project/ont-pyguppy-client-lib/\n# Install guppy-gpu version, ref: https://github.com/GenomicParisCentre/dockerfiles\nRUN apt-get -q update && \\\n    DEBIAN_FRONTEND=\"noninteractive\" apt-get --no-install-recommends -q install --yes ${BUILD_PACKAGES} && \\\n    cd /tmp && \\\n    wget -q https://mirror.oxfordnanoportal.com/software/analysis/ont_guppy_${GUPPY_VERSION}-1~bionic_amd64.deb  --no-check-certificate && \\\n    DEBIAN_FRONTEND=\"noninteractive\" apt-get --no-install-recommends -q install --yes /tmp/ont_guppy_${GUPPY_VERSION}-1~bionic_amd64.deb && \\\n    rm *.deb && \\\n    apt-get autoremove --purge --yes && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/*\n\n#Install miniconda\nRUN wget -q https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O Miniconda.sh && \\\n    /bin/bash Miniconda.sh -b -p /opt/conda && \\\n    rm Miniconda.sh\n\n# Adding conda to PATH\nENV PATH /opt/conda/bin:$PATH\n\n# Create the environment:\nCOPY environment.yml /\nRUN conda env create --name nanome --file=environment.yml && conda clean -a\n\n# Make RUN commands use the new environment:\nSHELL [\"conda\", \"run\", \"-n\", \"nanome\", \"/bin/bash\", \"-c\"]\n\n# Install latest version for megalodon, even conflicts with fast5mod, they can work\nRUN pip install --no-cache-dir megalodon==${MEGALODON_VERSION} && \\\n\tpip install --no-cache-dir ont-remora==${REMORA_VERSION} && \\\n    pip cache purge && \\\n    npm install -g inliner && npm cache clean --force\n\n# Set nanome env path into PATH\nENV PATH /opt/conda/envs/nanome/bin:$PATH\nUSER root\nWORKDIR /data/\n\n# Get bigwig conversion tool\nRUN cd /data && \\\n    wget -q https://hgdownload.soe.ucsc.edu/admin/exe/linux.x86_64/bedGraphToBigWig && \\\n    chmod +x bedGraphToBigWig && \\\n    mv bedGraphToBigWig  /usr/local/bin/\n\nCMD [\"bash\"]\n"
}