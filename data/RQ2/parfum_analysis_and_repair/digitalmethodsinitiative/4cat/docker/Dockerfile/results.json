{
  "startTime": 1674255479444,
  "endTime": 1674255479939,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 2,
        "lineEnd": 6,
        "columnStart": 22,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 35,
        "lineEnd": 42,
        "columnStart": 22,
        "columnEnd": 7
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 2,
        "lineEnd": 6,
        "columnStart": 22,
        "columnEnd": 15
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 35,
        "lineEnd": 42,
        "columnStart": 22,
        "columnEnd": 7
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.8-slim AS compile-image\n\nRUN apt-get update && apt install --no-install-recommends -y \\\n\n    libpq-dev \\\n    python3-dev \\\n    python3-pip && rm -rf /var/lib/apt/lists/*;\n\n# Set working directory\nWORKDIR /usr/src/app\n\n# Make and use virtual environment\nRUN python3 -m venv /opt/venv\nENV PATH=\"/opt/venv/bin:$PATH\"\n\n# Install dependencies\nRUN pip3 install --no-cache-dir --upgrade pip\nCOPY ./requirements.txt /usr/src/app/requirements.txt\nCOPY ./setup.py /usr/src/app/setup.py\nCOPY ./VERSION /usr/src/app/VERSION\nCOPY ./README.md /usr/src/app/README.md\nRUN mkdir /usr/src/app/backend && rm -rf /usr/src/app/backend\nRUN mkdir /usr/src/app/webtool && rm -rf /usr/src/app/webtool\nRUN mkdir /usr/src/app/datasources && rm -rf /usr/src/app/datasources\nRUN pip3 install --no-cache-dir -r requirements.txt\n\n# Install frontend Docker requirements\nRUN pip3 install --no-cache-dir gunicorn\n\n# Build image from compile-image\nFROM python:3.8-slim AS build-image\nCOPY --from=compile-image /opt/venv /opt/venv\n# Make virtual env available\nENV PATH=\"/opt/venv/bin:$PATH\"\n\nRUN apt-get update && apt install --no-install-recommends -y \\\n\n    curl \\\n    netcat \\\n    postgresql-client \\\n    postgresql-server-dev-all \\\n\n    git && rm -rf /var/lib/apt/lists/*;\n\n# Set working directory\nWORKDIR /usr/src/app\n\n# Copy project\nCOPY . /usr/src/app/\n\n# Permission\nRUN chmod +x docker/wait-for-backend.sh docker/docker-entrypoint.sh\n"
}