diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/say-their-name/say-their-names-api/provisioning/dev/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/say-their-name/say-their-names-api/provisioning/dev/Dockerfile/repaired.Dockerfile
index 73a018a..608e93c 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/say-their-name/say-their-names-api/provisioning/dev/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/say-their-name/say-their-names-api/provisioning/dev/Dockerfile/repaired.Dockerfile
@@ -1,10 +1,10 @@
 FROM php:7.4-fpm-buster
 
-RUN curl -sL https://deb.nodesource.com/setup_14.x | bash -
+RUN curl -f -sL https://deb.nodesource.com/setup_14.x | bash -
 
 #RUN echo 'Acquire::ForceIPv4 "true";' > /etc/apt/apt.conf.d/99force-ipv4
 
-RUN apt-get update && apt-get install -y \
+RUN apt-get update && apt-get install --no-install-recommends -y \
     build-essential \
     default-mysql-client \
     git \
@@ -24,26 +24,26 @@ RUN apt-get update && apt-get install -y \
     ca-certificates \
     zip && \
     apt-get clean && rm -rf /var/lib/apt/lists/* && \
-    npm install -g yarn
+    npm install -g yarn && npm cache clean --force;
 
 RUN docker-php-ext-install gd pdo_mysql mbstring zip exif pcntl fileinfo soap gettext pdo_sqlite
 
 WORKDIR /tmp
 
 # Install PHP Redis
-RUN curl -o phpredis-5.1.1.tgz https://pecl.php.net/get/redis-5.1.1.tgz && \
+RUN curl -f -o phpredis-5.1.1.tgz https://pecl.php.net/get/redis-5.1.1.tgz && \
     tar xfz phpredis-5.1.1.tgz && cd redis-5.1.1 && \
-    phpize && ./configure && make && make install
+    phpize && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" && make && make install && rm phpredis-5.1.1.tgz
 
 # Install MongoDB PHP Driver
-RUN curl -o mongodb-1.7.2.tgz https://pecl.php.net/get/mongodb-1.7.2.tgz && \
+RUN curl -f -o mongodb-1.7.2.tgz https://pecl.php.net/get/mongodb-1.7.2.tgz && \
     tar xfz mongodb-1.7.2.tgz && cd mongodb-1.7.2 && \
-    phpize && ./configure && make && make install
+    phpize && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" && make && make install && rm mongodb-1.7.2.tgz
 
 # Install XDebug
-RUN curl -o xdebug-2.9.1.tgz https://pecl.php.net/get/xdebug-2.9.1.tgz && \
+RUN curl -f -o xdebug-2.9.1.tgz https://pecl.php.net/get/xdebug-2.9.1.tgz && \
     tar xfz xdebug-2.9.1.tgz && cd xdebug-2.9.1 && \
-    phpize && ./configure && make && make install
+    phpize && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" && make && make install && rm xdebug-2.9.1.tgz
 
 RUN docker-php-ext-enable redis mongodb xdebug
 
@@ -53,7 +53,7 @@ RUN echo 'memory_limit=2048M' >> /usr/local/etc/php/php.ini && \
     echo 'xdebug.remote_connect_back=0' >> /usr/local/etc/php/php.ini && \
     echo 'xdebug.var_display_max_depth=' >> /usr/local/etc/php/php.ini && \
     echo 'xdebug.remote_host=${HOST_IP}' >> /usr/local/etc/php/php.ini && \
-    curl -o /usr/lib/ssl/curl-cacert.pem https://curl.se/ca/cacert.pem && \
+    curl -f -o /usr/lib/ssl/curl-cacert.pem https://curl.se/ca/cacert.pem && \
     echo 'curl.cainfo = "/usr/lib/ssl/curl-cacert.pem"' >> /usr/local/etc/php/php.ini
 
 RUN echo "php_flag[display_errors] = On">>/usr/local/etc/php-fpm.conf && \
@@ -68,7 +68,7 @@ echo "nl_NL.UTF-8 UTF-8" >> /etc/locale.gen && \
 echo "de_DE.UTF-8 UTF-8" >> /etc/locale.gen && \
 echo "es_ES.UTF-8 UTF-8" >> /etc/locale.gen && locale-gen
 
-RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
+RUN curl -f -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
 
 RUN usermod -u 1000 www-data && \
     groupmod -g 1000 www-data && \