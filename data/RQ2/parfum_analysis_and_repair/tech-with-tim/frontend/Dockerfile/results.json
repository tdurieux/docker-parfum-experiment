{
  "startTime": 1674254669813,
  "endTime": 1674254670608,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 16
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Install dependencies only when needed\nFROM node:alpine AS deps\n\nRUN apk add --no-cache libc6-compat\nWORKDIR /app\nCOPY package.json yarn.lock .yarnrc.yml ./\nCOPY .yarn ./.yarn\nRUN yarn install && yarn cache clean;\n\n# Rebuild the source code only when needed\nFROM node:alpine AS builder\nWORKDIR /app\nCOPY . .\nCOPY --from=deps /app/node_modules ./node_modules\nRUN yarn build\n\n# Production image, copy all the files and run next\nFROM node:alpine AS runner\nWORKDIR /app\n\nENV NODE_ENV production\n\nCOPY --from=builder /app/next.config.js ./\nCOPY --from=builder /app/public ./public\nCOPY --from=builder /app/.next ./.next\nCOPY --from=builder /app/node_modules ./node_modules\n\nRUN addgroup -g 1001 -S nodejs\nRUN adduser -S nextjs -u 1001\nRUN chown -R nextjs:nodejs /app/.next\nUSER nextjs\n\nEXPOSE 3000\n\nRUN npx next telemetry disable\n\nCMD [\"node_modules/.bin/next\", \"start\"]\n"
}