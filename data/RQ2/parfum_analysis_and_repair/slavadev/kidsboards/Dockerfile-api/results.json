{
  "startTime": 1674255222281,
  "endTime": 1674255222845,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 42
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 66
      }
    }
  ],
  "repairedDockerfile": "FROM phusion/passenger-ruby23\n\nRUN apt-get update\nRUN apt-get install --no-install-recommends -y imagemagick && rm -rf /var/lib/apt/lists/*;\n\n# bundler\nUSER app\nRUN mkdir /home/app/webapp\nWORKDIR /home/app/webapp\nADD api/Gemfile /home/app/webapp\nADD api/Gemfile.lock /home/app/webapp\nRUN bundle install\nADD api /home/app/webapp\n\n# back to root\nUSER root\n\n# Loggly setup\nRUN mkdir /home/app/logs\nRUN apt-get install --no-install-recommends -y rsyslog telnet wget && rm -rf /var/lib/apt/lists/*;\nADD ./docker/prod/api/loggly/configure-linux.sh /configure-linux.sh\nADD ./docker/prod/api/loggly/21-nginx-loggly.conf /etc/rsyslog.d/21-nginx-loggly.conf\nADD ./docker/prod/api/loggly/21-rails-loggly.conf /etc/rsyslog.d/21-rails-loggly.conf\n\n# nginx setup\nRUN rm -f /etc/service/nginx/down\nRUN rm /etc/nginx/sites-enabled/default\nRUN rm /etc/nginx/nginx.conf\nADD ./docker/prod/api/nginx/nginx.conf /etc/nginx/nginx.conf\nADD ./docker/prod/api/nginx/webapp.conf /etc/nginx/sites-enabled/webapp.conf\nADD ./docker/prod/api/nginx/webapp-env.conf /etc/nginx/main.d/webapp-env.conf\n\n# ending\nRUN apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\n# scripts\nRUN usermod -u 1000 app\nRUN mkdir -p /etc/my_init.d\nADD ./docker/prod/api/run/curl_to_warmup.sh /etc/my_init.d/curl_to_warmup.sh\nADD ./docker/prod/api/run/prepare_loggly.sh /etc/my_init.d/prepare_loggly.sh\nADD ./docker/prod/api/run/run_unicorn.sh /etc/my_init.d/run_unicorn.sh\n\nCMD [\"/sbin/my_init\"]\n\n"
}