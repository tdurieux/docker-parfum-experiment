{
  "startTime": 1674254096427,
  "endTime": 1674254097420,
  "originalSmells": [
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 18,
        "columnStart": 8,
        "columnEnd": 31
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 37,
        "lineEnd": 38,
        "columnStart": 8,
        "columnEnd": 34
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# PLATFORM INDEPENDENT BASE FOR ALL BUILDERS\nFROM ubuntu:18.04 as aff4-builder-base\n\nRUN sed -i '/^#\\sdeb-src /s/^# *//' \"/etc/apt/sources.list\"\n\nRUN apt-get update && \\\n        apt-get install -y --no-install-recommends \\\n                build-essential \\\n                libtool-bin \\\n                dpkg-dev \\\n                pkgconf \\\n                curl \\\n                autoconf \\\n                automake \\\n                cmake \\\n                ccache \\\n                vim \\\n                less \\\n                ca-certificates && rm -rf /var/lib/apt/lists/*;\n\n\nENV AFF4_DEPS_PATH /aff4-deps\nENV AFF4_DEPS_SRC_PATH /aff4-deps-src\nRUN mkdir ${AFF4_DEPS_PATH}\nRUN mkdir ${AFF4_DEPS_SRC_PATH}\n\nWORKDIR ${AFF4_DEPS_SRC_PATH}\nADD Makefile-deps Makefile\n\n# Fetch all dependencies.\nRUN make fetch-deps\n\n# WIN32 BUILDER\nFROM aff4-builder-base as aff4-builder-win32\nENV AFF4_BUILD_OUTPUT_PATH=/src/build/win32\n# Install the mingw toolchain\nRUN apt-get update && \\\n        apt-get install -y --no-install-recommends \\\n                g++-mingw-w64-i686 && rm -rf /var/lib/apt/lists/*;\n\n# Explicitly set the gcc/g++ compilers to the posix version\nRUN update-alternatives --set i686-w64-mingw32-g++ /usr/bin/i686-w64-mingw32-g++-posix\nRUN update-alternatives --set i686-w64-mingw32-gcc /usr/bin/i686-w64-mingw32-gcc-posix\n\n# Environment variables for building\nENV CXXFLAGS \"-I${AFF4_DEPS_PATH}/include -DRAPTOR_STATIC -mnop-fun-dllimport\"\nENV CFLAGS \"-I${AFF4_DEPS_PATH}/include -DRAPTOR_STATIC -mnop-fun-dllimport\"\nENV LDFLAGS \"-L${AFF4_DEPS_PATH}/lib -static -static-libstdc++\"\nENV PKG_CONFIG_PATH \"${AFF4_DEPS_PATH}/lib/pkgconfig/\"\nENV TOOLCHAIN_PREFIX=\"i686-w64-mingw32-\"\nENV CC \"${TOOLCHAIN_PREFIX}gcc\"\nENV CXX \"${TOOLCHAIN_PREFIX}g++\"\nENV AUTOCONF_HOSTFLAG \"--host=i686-w64-mingw32\"\nENV CMAKE_TOOLCHAIN_FILE ${AFF4_DEPS_SRC_PATH}/toolchain-mingw32.cmake\nADD toolchain-mingw32.cmake ${CMAKE_TOOLCHAIN_FILE}\nENV AFF4_CMAKE_FLAGS \"-DCMAKE_INSTALL_PREFIX:PATH=${AFF4_DEPS_PATH}\"\nENV AFF4_CMAKE_TOOLCHAIN_FLAGS \"-DCMAKE_TOOLCHAIN_FILE:PATH=${CMAKE_TOOLCHAIN_FILE}\"\n\n# Now actually build and install the dependencies.\nRUN make install-deps\n\nADD entrypoint.sh /entrypoint.sh\nRUN chmod 755 /entrypoint.sh\nENTRYPOINT [ \"/entrypoint.sh\" ]\n\nRUN mkdir /src\nWORKDIR /src\n\n# TODO: create linux-based builder\n#FROM aff4-builder-base as aff4-builder-linux\n#ENV AFF4_BUILD_OUTPUT_PATH=/src/build/linux\n"
}