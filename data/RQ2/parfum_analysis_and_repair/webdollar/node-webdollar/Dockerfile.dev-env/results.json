{
  "startTime": 1674251681460,
  "endTime": 1674251682326,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 77
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 22,
        "columnEnd": 184
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 22,
        "columnEnd": 184
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:20.04\n\nENV TERM xterm\nENV TZ UTC\nRUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone\n\nRUN mkdir -p /workspace/.nvm\nRUN mkdir -p /workspace/Node-WebDollar\nWORKDIR /workspace/\nENV HOME /workspace/\n\nENV NVM_DIR /workspace/.nvm\nENV NODE_VERSION 16\n\nRUN apt-get update && apt-get install --no-install-recommends -y git curl wget build-essential software-properties-common clang cmake libtool autoconf psmisc opencl-headers ocl-icd-libopencl1 pciutils python2 && rm -rf /var/lib/apt/lists/*;\n\n# Install nvm with node and npm\nRUN curl -f https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh | bash \\\n    && . $NVM_DIR/nvm.sh \\\n    && nvm install $NODE_VERSION \\\n    && nvm alias default $NODE_VERSION \\\n    && nvm use default\n\nENV NODE_PATH $NVM_DIR/v$NODE_VERSION/lib/node_modules\nENV PATH      $NVM_DIR/versions/node/v$NODE_VERSION/bin:$PATH\n\n#RUN git clone https://github.com/WebDollar/Node-WebDollar.git miner\n\n# Build the custom argon2 package\nRUN git clone https://github.com/WebDollar/argon2\nWORKDIR /workspace/argon2\nRUN autoreconf -i\nRUN bash configure\nRUN cmake -DCMAKE_BUILD_TYPE=Release .\nRUN make\n\nENV NODE_TLS_REJECT_UNAUTHORIZED 0\nWORKDIR /workspace/Node-WebDollar\nRUN mkdir -p ./dist_bundle/CPU/\nRUN cp -a ../argon2/* dist_bundle/CPU/\n\nENV PYTHON /usr/bin/python2\n\n# this container runs as root, add a dummy sudo\n# creates a tiny script that just runs the command passed to it.\n#> eval \"$@\"\n#\n# this is needed since many of the scripts in this project use sudo.\nRUN echo \"#!/bin/bash\\\\neval \\\"\\$@\\\"\" > /usr/bin/sudo && \\\n    chmod +x /usr/bin/sudo\n\nCMD [ \"/bin/bash\" ]\n"
}