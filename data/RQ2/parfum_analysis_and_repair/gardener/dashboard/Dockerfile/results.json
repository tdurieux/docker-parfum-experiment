{
  "startTime": 1674252692697,
  "endTime": 1674252694159,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 68
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 68
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 68
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 68
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 68
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 68
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 75
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 75
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 60
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# SPDX-FileCopyrightText: 2021 SAP SE or an SAP affiliate company and Gardener contributors\n#\n# SPDX-License-Identifier: Apache-2.0\n\n#### Builder ####\nFROM node:18-alpine3.16 as builder\n\nWORKDIR /app\n\nCOPY . .\n\n# validate zero-installs project and disable network\nRUN yarn config set enableNetwork false && yarn cache clean;\nRUN yarn install --immutable --immutable-cache && yarn cache clean;\n\n# check that the constraints are met\nRUN yarn constraints\n\n# run lint in all workspaces\nRUN yarn workspace @gardener-dashboard/logger run lint && yarn cache clean;\nRUN yarn workspace @gardener-dashboard/request run lint && yarn cache clean;\nRUN yarn workspace @gardener-dashboard/kube-config run lint && yarn cache clean;\nRUN yarn workspace @gardener-dashboard/kube-client run lint && yarn cache clean;\nRUN yarn workspace @gardener-dashboard/backend run lint && yarn cache clean;\nRUN yarn workspace @gardener-dashboard/frontend run lint && yarn cache clean;\n\n# run test in all workspaces\nRUN yarn workspace @gardener-dashboard/logger run test-coverage && yarn cache clean;\nRUN yarn workspace @gardener-dashboard/request run test-coverage && yarn cache clean;\nRUN yarn workspace @gardener-dashboard/kube-config run test-coverage && yarn cache clean;\nRUN yarn workspace @gardener-dashboard/kube-client run test-coverage && yarn cache clean;\nRUN yarn workspace @gardener-dashboard/backend run test-coverage && yarn cache clean;\nRUN yarn workspace @gardener-dashboard/frontend run test-coverage && yarn cache clean;\n\n# bump backend and frontend version\nRUN yarn workspace @gardener-dashboard/backend version \"$(cat VERSION)\" && yarn cache clean;\nRUN yarn workspace @gardener-dashboard/frontend version \"$(cat VERSION)\" && yarn cache clean;\n\n# run backend production install\nRUN yarn workspace @gardener-dashboard/backend prod-install --pack /usr/src/build && yarn cache clean;\n\n# run frontend build\nRUN yarn workspace @gardener-dashboard/frontend run build && yarn cache clean;\n\nWORKDIR /volume\n\nRUN apk add --no-cache tini \\\n    # tini and node binaries\n    && mkdir -p ./sbin ./usr/local/bin \\\n    && cp /sbin/tini ./sbin/ \\\n    && cp /usr/local/bin/node ./usr/local/bin/ \\\n    # root ca certificates\n    && mkdir -p ./etc/ssl \\\n    && cp -r /etc/ssl/certs ./etc/ssl \\\n    # node user\n    && echo 'node:x:1000:1000:node,,,:/home/node:/sbin/nologin' > ./etc/passwd \\\n    && echo 'node:x:1000:node' > ./etc/group \\\n    && mkdir -p ./home/node \\\n    && chown 1000:1000 ./home/node \\\n    # libc, libgcc and libstdc++ libraries\n    && mkdir -p ./lib ./usr/lib \\\n    && cp -d /lib/ld-musl-x86_64.so.* ./lib \\\n    && cp -d /lib/libc.musl-x86_64.so.* ./lib \\\n    && cp -d /usr/lib/libgcc_s.so.* ./usr/lib \\\n    && cp -d /usr/lib/libstdc++.so.* ./usr/lib \\\n    # application\n    && mv /usr/src/build ./app \\\n    && find ./app/.yarn -mindepth 1 -name cache -prune -o -exec rm -rf {} + \\\n    && mv /app/frontend/dist ./app/public \\\n    && chown -R 1000:1000 ./app\n\n#### Release ####\nFROM scratch as release\n\nWORKDIR /app\n\nENV NODE_ENV \"production\"\n\nARG PORT=8080\nENV PORT $PORT\n\nCOPY --from=builder /volume /\n\nUSER node\n\nEXPOSE $PORT\n\nVOLUME [\"/home/node\"]\n\nENTRYPOINT [ \"tini\", \"--\", \"node\", \"--require=/app/.pnp.cjs\", \"--experimental-loader=/app/.pnp.loader.mjs\"]\nCMD [\"server.js\"]"
}