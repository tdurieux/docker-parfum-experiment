{
  "startTime": 1674221179424,
  "endTime": 1674221180234,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 174,
        "lineEnd": 174,
        "columnStart": 4,
        "columnEnd": 28
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "############# base\nFROM alpine:3.15.4 AS base\n\n# Define GOTRACEBACK to mark this container as using the Go language runtime\n# for `skaffold debug` (https://skaffold.dev/docs/workflows/debug/).\nENV GOTRACEBACK=single\n\nRUN apk add --no-cache --update tzdata\n\n############# distroless-static\nFROM gcr.io/distroless/static-debian11:nonroot as distroless-static\n\n############# builder-base #############\nFROM golang:1.18.4 AS builder-base\n\nWORKDIR /go/src/github.com/gardener/gardener\n\n# `skaffold debug` sets SKAFFOLD_GO_GCFLAGS to disable compiler optimizations\nARG SKAFFOLD_GO_GCFLAGS\nARG TARGETOS\nARG TARGETARCH\n\nENV CGO_ENABLED=0\nENV GOOS=$TARGETOS\nENV GOARCH=$TARGETARCH\n\nARG VERSION\nCOPY VERSION .\n\nRUN echo \"-X k8s.io/component-base/version.gitVersion=${VERSION:-$(cat VERSION)} \\\n        -X k8s.io/component-base/version.buildDate=$(date '+%Y-%m-%dT%H:%M:%S%z' | sed 's/\\([0-9][0-9]\\)$/:\\1/g') \\\n        -X k8s.io/component-base/version/verflag.programName=Gardener\" > /tmp/build-flags\n\n############# apiserver #############\nFROM builder-base AS builder-apiserver\n\n# manually copy the packages we need to keep the build context slim\nCOPY cmd cmd\nCOPY pkg pkg\nCOPY plugin plugin\n\nCOPY go.mod go.sum ./\n\nRUN --mount=type=cache,target=/root/.cache/go-build \\\n    --mount=type=cache,target=/go/pkg/mod \\\n    go build -gcflags=\"${SKAFFOLD_GO_GCFLAGS}\" \\\n    -ldflags=\"$(cat /tmp/build-flags)\" \\\n    -o /gardener-apiserver ./cmd/gardener-apiserver\n\nFROM distroless-static AS apiserver\n\nCOPY --from=builder-apiserver /gardener-apiserver /gardener-apiserver\nENTRYPOINT [\"/gardener-apiserver\"]\n\n############# controller-manager #############\nFROM builder-base AS builder-controller-manager\n\n# manually copy the packages we need to keep the build context slim\nCOPY cmd cmd\nCOPY pkg pkg\n\nCOPY go.mod go.sum ./\n\nRUN --mount=type=cache,target=/root/.cache/go-build \\\n    --mount=type=cache,target=/go/pkg/mod \\\n    go build -gcflags=\"${SKAFFOLD_GO_GCFLAGS}\" \\\n    -ldflags=\"$(cat /tmp/build-flags)\" \\\n    -o /gardener-controller-manager ./cmd/gardener-controller-manager\n\nFROM distroless-static AS controller-manager\n\nCOPY --from=builder-controller-manager /gardener-controller-manager /gardener-controller-manager\nENTRYPOINT [\"/gardener-controller-manager\"]\n\n############# scheduler #############\nFROM builder-base AS builder-scheduler\n\n# manually copy the packages we need to keep the build context slim\nCOPY cmd cmd\nCOPY pkg pkg\n\nCOPY go.mod go.sum ./\n\nRUN --mount=type=cache,target=/root/.cache/go-build \\\n    --mount=type=cache,target=/go/pkg/mod \\\n    go build -gcflags=\"${SKAFFOLD_GO_GCFLAGS}\" \\\n    -ldflags=\"$(cat /tmp/build-flags)\" \\\n    -o /gardener-scheduler ./cmd/gardener-scheduler\n\nFROM distroless-static AS scheduler\n\nCOPY --from=builder-scheduler /gardener-scheduler /gardener-scheduler\nENTRYPOINT [\"/gardener-scheduler\"]\n\n############# admission-controller #############\nFROM builder-base AS builder-admission-controller\n\n# manually copy the packages we need to keep the build context slim\nCOPY cmd cmd\nCOPY pkg pkg\nCOPY third_party third_party\n\nCOPY go.mod go.sum ./\n\nRUN --mount=type=cache,target=/root/.cache/go-build \\\n    --mount=type=cache,target=/go/pkg/mod \\\n    go build -gcflags=\"${SKAFFOLD_GO_GCFLAGS}\" \\\n    -ldflags=\"$(cat /tmp/build-flags)\" \\\n    -o /gardener-admission-controller ./cmd/gardener-admission-controller\n\nFROM distroless-static AS admission-controller\n\nCOPY --from=builder-admission-controller /gardener-admission-controller /gardener-admission-controller\nENTRYPOINT [\"/gardener-admission-controller\"]\n\n############# resource-manager #############\nFROM builder-base AS builder-resource-manager\n\n# manually copy the packages we need to keep the build context slim\nCOPY cmd cmd\nCOPY pkg pkg\n\nCOPY go.mod go.sum ./\n\nRUN --mount=type=cache,target=/root/.cache/go-build \\\n    --mount=type=cache,target=/go/pkg/mod \\\n    go build -gcflags=\"${SKAFFOLD_GO_GCFLAGS}\" \\\n    -ldflags=\"$(cat /tmp/build-flags)\" \\\n    -o /gardener-resource-manager ./cmd/gardener-resource-manager\n\nFROM distroless-static AS resource-manager\n\nCOPY --from=builder-resource-manager /gardener-resource-manager /gardener-resource-manager\nENTRYPOINT [\"/gardener-resource-manager\"]\n\n############# seed-admission-controller #############\nFROM builder-base AS builder-seed-admission-controller\n\n# manually copy the packages we need to keep the build context slim\nCOPY cmd cmd\nCOPY pkg pkg\n\nCOPY go.mod go.sum ./\n\nRUN --mount=type=cache,target=/root/.cache/go-build \\\n    --mount=type=cache,target=/go/pkg/mod \\\n    go build -gcflags=\"${SKAFFOLD_GO_GCFLAGS}\" \\\n    -ldflags=\"$(cat /tmp/build-flags)\" \\\n    -o /gardener-seed-admission-controller ./cmd/gardener-seed-admission-controller\n\nFROM distroless-static AS seed-admission-controller\n\nCOPY --from=builder-seed-admission-controller /gardener-seed-admission-controller /gardener-seed-admission-controller\nENTRYPOINT [\"/gardener-seed-admission-controller\"]\n\n############# gardenlet #############\nFROM builder-base AS builder-gardenlet\n\n# manually copy the packages we need to keep the build context slim\nCOPY charts/images.yaml charts/charts.go charts/\nCOPY cmd cmd\nCOPY pkg pkg\nCOPY third_party third_party\n\nCOPY go.mod go.sum ./\n\nRUN --mount=type=cache,target=/root/.cache/go-build \\\n    --mount=type=cache,target=/go/pkg/mod \\\n    go build -gcflags=\"${SKAFFOLD_GO_GCFLAGS}\" \\\n    -ldflags=\"$(cat /tmp/build-flags)\" \\\n    -o /gardenlet ./cmd/gardenlet\n\nFROM base AS gardenlet\n\nRUN apk add --no-cache --update openvpn\n\nCOPY charts /charts\nCOPY --from=builder-gardenlet /gardenlet /gardenlet\nENTRYPOINT [\"/gardenlet\"]\n\n############# extension-provider-local #############\nFROM builder-base AS builder-extension-provider-local\n\n# manually copy the packages we need to keep the build context slim\nCOPY charts/charts.go charts/\nCOPY cmd cmd\nCOPY extensions extensions\nCOPY pkg pkg\n\nCOPY go.mod go.sum ./\n\nRUN --mount=type=cache,target=/root/.cache/go-build \\\n    --mount=type=cache,target=/go/pkg/mod \\\n    go build -gcflags=\"${SKAFFOLD_GO_GCFLAGS}\" \\\n    -ldflags=\"$(cat /tmp/build-flags)\" \\\n    -o /gardener-extension-provider-local ./cmd/gardener-extension-provider-local\n\nFROM base AS extension-provider-local\n\nCOPY charts/gardener/provider-local/internal /charts/gardener/provider-local/internal\nCOPY --from=builder-extension-provider-local /gardener-extension-provider-local /gardener-extension-provider-local\nENTRYPOINT [\"/gardener-extension-provider-local\"]\n"
}