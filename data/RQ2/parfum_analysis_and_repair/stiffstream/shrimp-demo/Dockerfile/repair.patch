diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/stiffstream/shrimp-demo/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/stiffstream/shrimp-demo/Dockerfile/repaired.Dockerfile
index d484fce..182db06 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/stiffstream/shrimp-demo/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/stiffstream/shrimp-demo/Dockerfile/repaired.Dockerfile
@@ -2,16 +2,16 @@ FROM ubuntu:18.04 as shrimpdemo-build
 
 # Prepare build environment
 RUN apt-get update && \
-    apt-get -qq -y install gcc g++ ruby \
+    apt-get -qq --no-install-recommends -y install gcc g++ ruby \
     cmake autoconf curl wget libpcre3-dev pkg-config \
     libjpeg-dev libpng-dev libgif-dev \
-    libtool
+    libtool && rm -rf /var/lib/apt/lists/*;
 RUN gem install Mxx_ru
 
 ARG NASM_VERSION=2.13.03
 RUN echo "*** Installing NASM-"${NASM-VERSION} \
     && cd /tmp \
-    && curl -s -O -L https://www.nasm.us/pub/nasm/releasebuilds/${NASM_VERSION}/nasm-${NASM_VERSION}.tar.gz \
+    && curl -f -s -O -L https://www.nasm.us/pub/nasm/releasebuilds/${NASM_VERSION}/nasm-${NASM_VERSION}.tar.gz \
     && tar xzf nasm-${NASM_VERSION}.tar.gz \
     && rm /tmp/nasm-${NASM_VERSION}.tar.gz \
     && cd /tmp/nasm-${NASM_VERSION} \
@@ -23,7 +23,7 @@ RUN echo "*** Installing NASM-"${NASM-VERSION} \
 ARG x265_VERSION=2.8
 RUN echo "*** Installing x265-"${x265_VERSION} \
     && cd /tmp \
-    && curl -s -O -L http://ftp.videolan.org/pub/videolan/x265/x265_${x265_VERSION}.tar.gz \
+    && curl -f -s -O -L https://ftp.videolan.org/pub/videolan/x265/x265_${x265_VERSION}.tar.gz \
     && tar xzf x265_${x265_VERSION}.tar.gz \
     && rm /tmp/x265_${x265_VERSION}.tar.gz \
     && cd /tmp/x265_${x265_VERSION}/build/linux \
@@ -36,12 +36,12 @@ ARG libde265_VERSION=1.0.3
 ARG libde265_ARCHIVE=v${libde265_VERSION}
 RUN echo "*** Installing libde265-"${libde265_VERSION} \
     && cd /tmp \
-    && curl -s -O -L https://github.com/strukturag/libde265/archive/${libde265_ARCHIVE}.zip \
+    && curl -f -s -O -L https://github.com/strukturag/libde265/archive/${libde265_ARCHIVE}.zip \
     && unzip ${libde265_ARCHIVE}.zip \
     && rm /tmp/${libde265_ARCHIVE}.zip \
     && cd /tmp/libde265-${libde265_VERSION} \
     && ./autogen.sh \
-    && ./configure \
+    && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
     && make -j4 \
     && make install \
     && rm -rf /tmp/libde265-${libde265_VERSION}
@@ -49,12 +49,12 @@ RUN echo "*** Installing libde265-"${libde265_VERSION} \
 ARG libheif_VERSION=1.3.2
 RUN echo "*** Installing libheif-"${libheif_VERSION} \
     && cd /tmp \
-    && curl -s -O -L https://github.com/strukturag/libheif/archive/v${libheif_VERSION}.zip \
+    && curl -f -s -O -L https://github.com/strukturag/libheif/archive/v${libheif_VERSION}.zip \
     && unzip v${libheif_VERSION}.zip \
     && rm /tmp/v${libheif_VERSION}.zip \
     && cd /tmp/libheif-${libheif_VERSION} \
     && ./autogen.sh \
-    && ./configure \
+    && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
     && make -j4 \
     && make install \
     && rm -rf /tmp/libheif-${libheif_VERSION}
@@ -62,11 +62,11 @@ RUN echo "*** Installing libheif-"${libheif_VERSION} \
 ARG libwebp_VERSION=1.0.0
 RUN echo "*** Installing libwebp-"${libwebp_VERSION} \
     && cd /tmp \
-    && curl -s -O -L https://storage.googleapis.com/downloads.webmproject.org/releases/webp/libwebp-${libwebp_VERSION}.tar.gz \
+    && curl -f -s -O -L https://storage.googleapis.com/downloads.webmproject.org/releases/webp/libwebp-${libwebp_VERSION}.tar.gz \
     && tar xzf libwebp-${libwebp_VERSION}.tar.gz \
     && rm /tmp/libwebp-${libwebp_VERSION}.tar.gz \
     && cd /tmp/libwebp-${libwebp_VERSION} \
-    && ./configure \
+    && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
     && make -j4 \
     && make install \
     && rm -rf /tmp/libwebp-${libwebp_VERSION}
@@ -76,11 +76,11 @@ ARG ImageMagick_PATCH=39
 ARG ImageMagick_FullVersion=${ImageMagick_VERSION}-${ImageMagick_PATCH}
 RUN echo "*** Installing ImageMagick-"${ImageMagick_FullVersion} \
     && cd /tmp \
-    && curl -s -O -L https://github.com/ImageMagick/ImageMagick/archive/${ImageMagick_FullVersion}.tar.gz \
+    && curl -f -s -O -L https://github.com/ImageMagick/ImageMagick/archive/${ImageMagick_FullVersion}.tar.gz \
     && tar xzf ${ImageMagick_FullVersion}.tar.gz \
     && rm /tmp/${ImageMagick_FullVersion}.tar.gz \
     && cd /tmp/ImageMagick-${ImageMagick_FullVersion} \
-    && ./configure \
+    && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
     && make -j4 \
     && make install \
     && ldconfig \
@@ -105,7 +105,7 @@ FROM ubuntu:18.04 as shrimpdemo
 ARG ImageMagick_VERSION=7.0.7
 
 RUN apt-get update \
-    && apt-get -qq -y install libjpeg8 libpng16-16 libgif7 libgomp1 
+    && apt-get -qq --no-install-recommends -y install libjpeg8 libpng16-16 libgif7 libgomp1 && rm -rf /var/lib/apt/lists/*;
 
 COPY --from=shrimpdemo-build /root/shrimp.app /root