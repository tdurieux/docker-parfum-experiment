{
  "startTime": 1674249825572,
  "endTime": 1674249826438,
  "originalSmells": [
    {
      "rule": "gemUpdateSystemRmRootGem",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "gemUpdateSystemRmRootGem",
      "position": {
        "lineStart": 111,
        "lineEnd": 111,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "gemUpdateNoDocument",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "gemUpdateNoDocument",
      "position": {
        "lineStart": 111,
        "lineEnd": 111,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 46
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG RUBY_VERSION=2.6.7\nARG ALPINE_VERSION=3.13\n\n# A ruby-alpine image for development\nFROM ruby:${RUBY_VERSION}-alpine${ALPINE_VERSION} AS aquarium-development\nRUN apk add --update --no-cache \\\n    bash \\\n    bind-tools \\\n    build-base \\\n    ca-certificates \\\n    file \\\n    git \\\n    imagemagick \\\n    iptables \\\n    libgcrypt-dev \\\n    libxml2 \\\n    libxslt \\\n    mariadb-dev \\\n    musl>1.2.2-r1 \\\n    mysql-client \\\n    nodejs \\\n    nodejs-npm \\\n    openjdk8-jre \\\n    openssl \\\n    shared-mime-info \\\n    sqlite-dev \\\n    tzdata \\\n    wget \\\n    yarn\n\n# for sorbet: https://sorbet.org/docs/faq#what-platforms-does-sorbet-support\nENV GLIBC_RELEASE_VERSION 2.30-r0\nRUN wget -nv -O /etc/apk/keys/sgerrand.rsa.pub https://alpine-pkgs.sgerrand.com/sgerrand.rsa.pub && \\\n    wget -nv https://github.com/sgerrand/alpine-pkg-glibc/releases/download/${GLIBC_RELEASE_VERSION}/glibc-${GLIBC_RELEASE_VERSION}.apk && \\\n    apk add --no-cache glibc-${GLIBC_RELEASE_VERSION}.apk && \\\n    rm /etc/apk/keys/sgerrand.rsa.pub && \\\n    rm glibc-${GLIBC_RELEASE_VERSION}.apk\n\nRUN mkdir /aquarium\nWORKDIR /aquarium\n\n# install js components\nCOPY package.json ./package.json\nCOPY yarn.lock ./yarn.lock\n\nRUN yarn install --modules-folder public/node_modules \\\n && yarn cache clean\n\n# Change where bundler puts gems\n# see https://bundler.io/v2.0/guides/bundler_docker_guide.html\nENV GEM_HOME=\"/usr/local/bundle\"\nENV PATH $GEM_HOME/bin:$GEM_HOME/gems/bin:$PATH\n\n# Install gems needed by Aquarium\nCOPY Gemfile Gemfile.lock ./\n\n# components directory contains local gems and engines\nRUN mkdir -p /aquarium/components\nCOPY components ./components\nRUN mkdir -p /usr/local/etc \\\n  && { \\\n    echo 'install: --no-document'; \\\n    echo 'update: --no-document'; \\\n  } >> /usr/local/etc/gemrc;\n\nRUN gem update --system \\\n #\n # rails 4.2.11.1 requires bundler < 2.0\n && gem install bundler --version '< 2.0' \\\n && bundle install --jobs 20 --retry 5 \\\n # ruby 2.6+ has default json gem\n # remove it because bundler installs 1.8.6, which crashes rspec with simplecov \\\n && rm -f /usr/local/lib/ruby/gems/2.6.0/specifications/default/json-2.1.0.gemspec && rm -rf /root/.gem;\n\nCOPY . ./\n\n# include entrypoint scripts for starting Aquarium and Krill\nRUN chmod +x ./entrypoint.sh\nENTRYPOINT [ \"/aquarium/entrypoint.sh\" ]\n\n\n# Temporary stage for building production environment based on development stage\nFROM aquarium-development AS aquarium-builder\n\n# directories used by puma configuration in production\nRUN mkdir -p /aquarium/shared/sockets \\\n && mkdir -p /aquarium/shared/log \\\n && mkdir -p /aquarium/shared/pids \\\n #\n # Precompile assets\n # This requires an active database connection, use nulldb:\n # http://blog.zeit.io/use-a-fake-db-adapter-to-play-nice-with-rails-assets-precompilation/\n && RAILS_ENV=production SECRET_KEY_BASE=foo DB_ADAPTER=nulldb bundle exec rake assets:precompile --trace \\\n #\n # Clean up from build\n && rm -rf /usr/local/bundle/cache/*.gem \\\n && find /usr/local/bundle/gems/ -name \"*.c\" -delete \\\n && find /usr/local/bundle/gems/ -name \"*.o\" -delete\n# && rm -rf public/node_modules tmp/cache lib/assets spec test\n\n\n# A ruby-alpine image for production stage\nFROM ruby:${RUBY_VERSION}-alpine${ALPINE_VERSION} AS aquarium\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRUN mkdir -p /usr/local/etc \\\n  && { \\\n    echo 'install: --no-document'; \\\n    echo 'update: --no-document'; \\\n  } >> /usr/local/etc/gemrc;\n\nRUN apk add --update --no-cache \\\n    bind-tools \\\n    file \\\n    imagemagick \\\n    iptables \\\n    mariadb-dev \\\n    mysql-client \\\n    shared-mime-info \\\n    tzdata \\\n # make app directory\n && mkdir /aquarium \\\n # make sure that using the same version of rubygems \\\n && gem update --system && rm -rf /root/.gem;\n\nWORKDIR /aquarium\n\n# pull gems from builder stage\nCOPY --from=aquarium-builder /usr/local/bundle/ /usr/local/bundle/\n# set paths because gems are in a different place\nENV GEM_HOME=\"/usr/local/bundle\"\nENV PATH $GEM_HOME/bin:$GEM_HOME/gems/bin:$PATH\n\n# pull app from builder-stage\nCOPY --from=aquarium-builder /aquarium /aquarium\n\nENV RAILS_ENV=production\nENV RACK_ENV=production\n\nENTRYPOINT [ \"/aquarium/entrypoint.sh\" ]\n"
}