{
  "startTime": 1674216206909,
  "endTime": 1674216209291,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 20,
        "columnEnd": 92
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 72
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 130
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM shadowrobot/build-tools:xenial-kinetic\n\nLABEL Description=\"This ROS Kinetic image contains Ros Kinetic and Eigen v. 3.3.7\"\nENV eigen_folder=eigen-3.3.7\n\nRUN set +x && \\\n    apt-get update && \\\n    echo \"Installing Eigen library v. 3.3.7\" && \\\n    wget \"https://gitlab.com/libeigen/eigen/-/archive/3.3.7/eigen-3.3.7.tar.bz2\" -O $eigen_folder.tar.bz2 && \\\n    mkdir $eigen_folder && \\\n    tar -xjf $eigen_folder.tar.bz2 -C $eigen_folder --strip-components=1 && \\\n    cd $eigen_folder && \\\n    mkdir build && \\\n    cd build && \\\n    cmake .. && \\\n    make && \\\n    cmake . -DCMAKE_INSTALL_PREFIX=/usr && \\\n    make install && \\\n    echo \"Installing libglvnd\" && \\\n    apt-get install --no-install-recommends git ca-certificates make automake autoconf libtool pkg-config python libxext-dev libx11-dev x11proto-gl-dev -y && \\\n    git clone https://github.com/NVIDIA/libglvnd.git /opt/libglvnd && \\\n    cd /opt/libglvnd && \\\n    ./autogen.sh && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/local --libdir=/usr/local/lib/x86_64-linux-gnu && \\\n    make -j $(nproc) install-strip && \\\n    find /usr/local/lib/x86_64-linux-gnu -type f -name 'lib*.la' -delete && \\\n    echo \"Removing cache\" && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* /home/$MY_USERNAME/.ansible /home/$MY_USERNAME/.gitconfig && rm $eigen_folder.tar.bz2\n\nENTRYPOINT [\"/usr/local/bin/entrypoint.sh\"]\nCMD [\"usr/bin/terminator\"]\n"
}