{
  "startTime": 1674220834396,
  "endTime": 1674220835073,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 98
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 102,
        "columnEnd": 118
      }
    }
  ],
  "repairedDockerfile": "FROM node:17-alpine as ui-build\nCOPY web /tmp/web\nWORKDIR /tmp/web\nARG APP_VERSION=1.0.0\nARG GITHUB_URL='https://github.com/x1unix/go-playground'\nRUN yarn install --silent && \\\n    REACT_APP_VERSION=$APP_VERSION NODE_ENV=production REACT_APP_GITHUB_URL=$GITHUB_URL yarn build && yarn cache clean;\n\nFROM golang:1.18-alpine as build\nWORKDIR /tmp/playground\nCOPY cmd ./cmd\nCOPY pkg ./pkg\nCOPY go.mod .\nCOPY go.sum .\nARG APP_VERSION=1.0.0\nRUN echo \"Building server with version $APP_VERSION\" && \\\n    go build -o server -ldflags=\"-X 'main.Version=$APP_VERSION'\" ./cmd/playground && \\\n    GOOS=js GOARCH=wasm go build -o ./worker.wasm ./cmd/webworker && \\\n    cp $(go env GOROOT)/misc/wasm/wasm_exec.js .\n\nFROM golang:1.18-alpine as production\nWORKDIR /opt/playground\nENV GOROOT /usr/local/go\nENV APP_CLEAN_INTERVAL=10m\nENV APP_DEBUG=false\nENV APP_PLAYGROUND_URL='https://play.golang.org'\nENV APP_GOTIP_URL='https://gotipplay.golang.org'\nENV APP_GTAG_ID=''\nCOPY data ./data\nCOPY --from=ui-build /tmp/web/build ./public\nCOPY --from=build /tmp/playground/server .\nCOPY --from=build /tmp/playground/worker.wasm ./public\nCOPY --from=build /tmp/playground/wasm_exec.js ./public\nEXPOSE 8000\nENTRYPOINT /opt/playground/server \\\n    -f='/opt/playground/data/packages.json' \\\n    -addr=:8000\n"
}