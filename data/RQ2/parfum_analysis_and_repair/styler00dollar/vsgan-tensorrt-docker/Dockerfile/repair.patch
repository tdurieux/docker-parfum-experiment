diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/styler00dollar/vsgan-tensorrt-docker/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/styler00dollar/vsgan-tensorrt-docker/Dockerfile/repaired.Dockerfile
index 2966c16..caa74b6 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/styler00dollar/vsgan-tensorrt-docker/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/styler00dollar/vsgan-tensorrt-docker/Dockerfile/repaired.Dockerfile
@@ -6,27 +6,27 @@ ARG DEBIAN_FRONTEND=noninteractive
 RUN apt-get -y update
 
 # installing vapoursynth and torch
-RUN apt install libblas-dev liblapack-dev pkg-config p7zip-full x264 ffmpeg autoconf libtool yasm python3.9 python3.9-venv python3.9-dev ffmsindex libffms2-4 libffms2-dev -y && \
+RUN apt install --no-install-recommends libblas-dev liblapack-dev pkg-config p7zip-full x264 ffmpeg autoconf libtool yasm python3.9 python3.9-venv python3.9-dev ffmsindex libffms2-4 libffms2-dev -y && \
     wget https://github.com/sekrit-twc/zimg/archive/refs/tags/release-3.0.4.zip && 7z x release-3.0.4.zip && \
-    cd zimg-release-3.0.4 && ./autogen.sh && ./configure && make -j4 && make install && cd .. && rm -rf zimg-release-3.0.4 release-3.0.4.zip && \
-    pip install Cython && wget https://github.com/vapoursynth/vapoursynth/archive/refs/tags/R59.zip && \
-    7z x R59.zip && cd vapoursynth-R59 && ./autogen.sh && ./configure && make && make install && cd .. && ldconfig && \
+    cd zimg-release-3.0.4 && ./autogen.sh && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" && make -j4 && make install && cd .. && rm -rf zimg-release-3.0.4 release-3.0.4.zip && \
+    pip install --no-cache-dir Cython && wget https://github.com/vapoursynth/vapoursynth/archive/refs/tags/R59.zip && \
+    7z x R59.zip && cd vapoursynth-R59 && ./autogen.sh && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" && make && make install && cd .. && ldconfig && \
     ln -s /usr/local/lib/python3.9/site-packages/vapoursynth.so /usr/lib/python3.9/lib-dynload/vapoursynth.so && \
-    pip install scipy mmedit vapoursynth meson ninja numba numpy scenedetect kornia opencv-python onnx onnxruntime onnxruntime-gpu cupy-cuda117 pytorch-msssim \
+    pip install --no-cache-dir scipy mmedit vapoursynth meson ninja numba numpy scenedetect kornia opencv-python onnx onnxruntime onnxruntime-gpu cupy-cuda117 pytorch-msssim \
         torch==1.11.0 torchvision==0.12.0 --extra-index-url https://download.pytorch.org/whl/cu113 \
         https://github.com/pytorch/TensorRT/releases/download/v1.1.0/torch_tensorrt-1.1.0-cp38-cp38-linux_x86_64.whl && \
     # mmcv
     git clone https://github.com/open-mmlab/mmcv.git && cd mmcv && MMCV_WITH_OPS=1 python3 -m pip install -e . && cd .. && rm -rf mmcv && \
     # not deleting vapoursynth-R59 since vs-mlrt needs it
     rm -rf R59.zip zimg && \
-    apt-get autoclean -y && apt-get autoremove -y && apt-get clean -y && pip3 cache purge
+    apt-get autoclean -y && apt-get autoremove -y && apt-get clean -y && pip3 cache purge && rm -rf /var/lib/apt/lists/*;
 
 # upgrading ffmpeg manually (ffmpeg 20220622 from https://johnvansickle.com/ffmpeg/)
 RUN wget https://files.catbox.moe/s0gz60 -O ffmpeg && \
     chmod +x ./ffmpeg && mv ffmpeg /usr/bin/ffmpeg
 
 # installing tensorflow because of FILM
-RUN pip install tensorflow tensorflow-gpu tensorflow_addons gin-config -U && pip3 cache purge
+RUN pip install --no-cache-dir tensorflow tensorflow-gpu tensorflow_addons gin-config -U && pip3 cache purge
 
 # installing onnx tensorrt with a workaround, error with import otherwise
 # https://github.com/onnx/onnx-tensorrt/issues/643
@@ -84,8 +84,8 @@ RUN wget "https://download.pytorch.org/models/vgg19-dcbb9e9d.pth" -P /root/.cach
 # vs plugings from others
 # https://github.com/HolyWu/vs-swinir
 # https://github.com/HolyWu/vs-basicvsrpp
-RUN pip install --upgrade vsswinir && python -m vsswinir && \
-    pip install --upgrade vsbasicvsrpp && python -m vsbasicvsrpp && \
+RUN pip install --no-cache-dir --upgrade vsswinir && python -m vsswinir && \
+    pip install --no-cache-dir --upgrade vsbasicvsrpp && python -m vsbasicvsrpp && \
     pip3 cache purge
 
 # vs-mlrt
@@ -95,13 +95,13 @@ RUN wget https://github.com/Kitware/CMake/releases/download/v3.23.0-rc1/cmake-3.
     cp /workspace/bin/cmake /usr/bin/cmake && cp /workspace/bin/cmake /usr/lib/x86_64-linux-gnu/cmake && \
     cp /workspace/bin/cmake /usr/local/bin/cmake && cp -r /workspace/share/cmake-3.23 /usr/local/share/ && \
 # upgrading g++
-    apt install build-essential manpages-dev software-properties-common -y && add-apt-repository ppa:ubuntu-toolchain-r/test -y && \
-    apt update -y && apt install gcc-11 g++-11 -y && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-11 11 && \
+    apt install --no-install-recommends build-essential manpages-dev software-properties-common -y && add-apt-repository ppa:ubuntu-toolchain-r/test -y && \
+    apt update -y && apt install --no-install-recommends gcc-11 g++-11 -y && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-11 11 && \
     update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-11 11 && \
 # compiling
     git clone https://github.com/AmusementClub/vs-mlrt /workspace/vs-mlrt && cd /workspace/vs-mlrt/vstrt && mkdir build && \
     cd build && cmake .. -DVAPOURSYNTH_INCLUDE_DIRECTORY=/workspace/vapoursynth-R59/include && make && make install && \
-    cd .. && rm -rf cmake-3.23.0-rc1-linux-x86_64.sh zimg vapoursynth-R59
+    cd .. && rm -rf cmake-3.23.0-rc1-linux-x86_64.sh zimg vapoursynth-R59 && rm -rf /var/lib/apt/lists/*;
 
 # x265
 RUN git clone https://github.com/AmusementClub/x265 /workspace/x265 && cd /workspace/x265/source/ && mkdir build && cd build && \
@@ -115,19 +115,19 @@ RUN git clone https://github.com/Irrational-Encoding-Wizardry/descale && cd desc
     cd .. && rm -rf descale
 
 # mpv
-RUN apt install mpv -y && apt-get update && \
-    DEBIAN_FRONTEND=noninteractive apt-get install --yes pulseaudio-utils && \
-    apt-get install -y pulseaudio && apt-get install pulseaudio libpulse-dev osspd -y && \
-    apt-get autoclean -y && apt-get autoremove -y && apt-get clean -y
+RUN apt install --no-install-recommends mpv -y && apt-get update && \
+    DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install --yes pulseaudio-utils && \
+    apt-get install --no-install-recommends -y pulseaudio && apt-get install --no-install-recommends pulseaudio libpulse-dev osspd -y && \
+    apt-get autoclean -y && apt-get autoremove -y && apt-get clean -y && rm -rf /var/lib/apt/lists/*;
 
 # av1an
 RUN curl https://sh.rustup.rs -sSf | sh -s -- -y && \
     source $HOME/.cargo/env && \
-    apt install clang-12 nasm libavutil-dev libavformat-dev libavfilter-dev -y && \
+    apt install --no-install-recommends clang-12 nasm libavutil-dev libavformat-dev libavfilter-dev -y && \
     git clone https://github.com/master-of-zen/Av1an && \
     cd Av1an && cargo build --release --features ffmpeg_static && \
     mv /workspace/Av1an/target/release/av1an /usr/bin && \
-    cd /workspace && rm -rf Av1an && apt-get autoremove -y && apt-get clean
+    cd /workspace && rm -rf Av1an && apt-get autoremove -y && apt-get clean && rm -rf /var/lib/apt/lists/*;
 # svt
 RUN git clone https://github.com/AOMediaCodec/SVT-AV1 && cd SVT-AV1/Build/linux/ && sh build.sh release && \
     cd /workspace/SVT-AV1/Bin/Release/ && chmod +x ./SvtAv1EncApp && mv SvtAv1EncApp /usr/bin && \
@@ -135,4 +135,4 @@ RUN git clone https://github.com/AOMediaCodec/SVT-AV1 && cd SVT-AV1/Build/linux/
     cd /workspace && rm -rf SVT-AV1
 
 # pycuda and numpy hotfix
-RUN pip install pycuda numpy numba -U --force-reinstall && pip3 cache purge
+RUN pip install --no-cache-dir pycuda numpy numba -U --force-reinstall && pip3 cache purge