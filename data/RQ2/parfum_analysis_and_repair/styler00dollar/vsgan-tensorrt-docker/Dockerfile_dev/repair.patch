diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/styler00dollar/vsgan-tensorrt-docker/Dockerfile_dev b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/styler00dollar/vsgan-tensorrt-docker/Dockerfile_dev/repaired.Dockerfile
index 2b27aff..88f7a18 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/styler00dollar/vsgan-tensorrt-docker/Dockerfile_dev
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/styler00dollar/vsgan-tensorrt-docker/Dockerfile_dev/repaired.Dockerfile
@@ -75,9 +75,9 @@ ARG DEBIAN_FRONTEND=noninteractive
 WORKDIR workspace
 
 # wget
-RUN apt-get -y update && apt install wget python3 python3.8 python3.8-venv python3.8-dev python3-pip python-is-python3 -y && \
-    apt-get autoclean -y && apt-get autoremove -y && apt-get clean -y
-RUN pip3 install --upgrade pip
+RUN apt-get -y update && apt install --no-install-recommends wget python3 python3.8 python3.8-venv python3.8-dev python3-pip python-is-python3 -y && \
+    apt-get autoclean -y && apt-get autoremove -y && apt-get clean -y && rm -rf /var/lib/apt/lists/*;
+RUN pip3 install --no-cache-dir --upgrade pip
 
 # download it from nvidias website and put it into the same folder
 COPY nv-tensorrt-repo-ubuntu2004-cuda11.6-trt8.4.1.5-ga-20220604_1-1_amd64.deb nv-tensorrt-repo-ubuntu2004-cuda11.6-trt8.4.1.5-ga-20220604_1-1_amd64.deb
@@ -93,18 +93,18 @@ RUN apt-get update -y
 #RUN apt-cache madison tensorrt
 
 # 22.04 does not have python-libnvinfer
-RUN apt-get install libnvinfer8=${version} libnvonnxparsers8=${version} libnvparsers8=${version} libnvinfer-plugin8=${version} \
+RUN apt-get install --no-install-recommends libnvinfer8=${version} libnvonnxparsers8=${version} libnvparsers8=${version} libnvinfer-plugin8=${version} \
     libnvinfer-dev=${version} libnvonnxparsers-dev=${version} libnvparsers-dev=${version} libnvinfer-plugin-dev=${version} \
     python3-libnvinfer=${version} -y && \
-    
+
     apt-mark hold libnvinfer8 libnvonnxparsers8 libnvparsers8 libnvinfer-plugin8 libnvinfer-dev libnvonnxparsers-dev libnvparsers-dev \
     libnvinfer-plugin-dev python3-libnvinfer && \
 
-    apt-get install tensorrt=${trt_version} -y && apt-get install python3-libnvinfer-dev=${version} -y && \
-    rm -rf nv-tensorrt-repo-ubuntu2004-cuda11.6-trt8.4.1.5-ga-20220604_1-1_amd64.deb && apt-get autoclean -y && apt-get autoremove -y && apt-get clean -y
+    apt-get install --no-install-recommends tensorrt=${trt_version} -y && apt-get install --no-install-recommends python3-libnvinfer-dev=${version} -y && \
+    rm -rf nv-tensorrt-repo-ubuntu2004-cuda11.6-trt8.4.1.5-ga-20220604_1-1_amd64.deb && apt-get autoclean -y && apt-get autoremove -y && apt-get clean -y && rm -rf /var/lib/apt/lists/*;
 # download it from nvidias website
 COPY tensorrt-8.4.1.5-cp38-none-linux_x86_64.whl tensorrt-8.4.1.5-cp38-none-linux_x86_64.whl
-RUN pip install tensorrt-8.4.1.5-cp38-none-linux_x86_64.whl && rm -rf tensorrt-8.4.1.5-cp38-none-linux_x86_64.whl && pip cache purge
+RUN pip install --no-cache-dir tensorrt-8.4.1.5-cp38-none-linux_x86_64.whl && rm -rf tensorrt-8.4.1.5-cp38-none-linux_x86_64.whl && pip cache purge
 
 # cmake
 RUN wget https://github.com/Kitware/CMake/releases/download/v3.23.0-rc1/cmake-3.23.0-rc1-linux-x86_64.sh && \
@@ -119,12 +119,12 @@ RUN wget https://github.com/Kitware/CMake/releases/download/v3.23.0-rc1/cmake-3.
 
 RUN apt update -y && \
     #apt install software-properties-common -y && add-apt-repository ppa:deadsnakes/ppa -y && \
-    apt install pkg-config wget python3-pip git p7zip-full x264 ffmpeg autoconf libtool yasm ffmsindex libffms2-4 libffms2-dev -y && \
-    git clone https://github.com/sekrit-twc/zimg.git && cd zimg && ./autogen.sh && ./configure && make -j4 && make install && cd .. && rm -rf zimg && \
-    pip install Cython && wget https://github.com/vapoursynth/vapoursynth/archive/refs/tags/R59.zip && \
-    7z x R59.zip && cd vapoursynth-R59 && ./autogen.sh && ./configure && make && make install && cd .. && ldconfig && \
+    apt install --no-install-recommends pkg-config wget python3-pip git p7zip-full x264 ffmpeg autoconf libtool yasm ffmsindex libffms2-4 libffms2-dev -y && \
+    git clone https://github.com/sekrit-twc/zimg.git && cd zimg && ./autogen.sh && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" && make -j4 && make install && cd .. && rm -rf zimg && \
+    pip install --no-cache-dir Cython && wget https://github.com/vapoursynth/vapoursynth/archive/refs/tags/R59.zip && \
+    7z x R59.zip && cd vapoursynth-R59 && ./autogen.sh && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" && make && make install && cd .. && ldconfig && \
     ln -s /usr/local/lib/python3.8/site-packages/vapoursynth.so /usr/lib/python3.8/lib-dynload/vapoursynth.so && \
-    pip install cmake scipy mmedit vapoursynth meson ninja numba numpy scenedetect kornia opencv-python cupy-cuda115 pytorch-msssim \
+    pip install --no-cache-dir cmake scipy mmedit vapoursynth meson ninja numba numpy scenedetect kornia opencv-python cupy-cuda115 pytorch-msssim \
         https://download.pytorch.org/whl/cu115/torch-1.11.0%2Bcu115-cp38-cp38-linux_x86_64.whl \
         https://download.pytorch.org/whl/cpu/torchvision-0.12.0%2Bcpu-cp38-cp38-linux_x86_64.whl \
         https://github.com/pytorch/TensorRT/releases/download/v1.1.0/torch_tensorrt-1.1.0-cp38-cp38-linux_x86_64.whl \
@@ -132,24 +132,24 @@ RUN apt update -y && \
         onnx onnxruntime onnxruntime-gpu && \
     # not deleting vapoursynth-R59 since vs-mlrt needs it
     rm -rf R59.zip zimg && \
-    apt-get autoclean -y && apt-get autoremove -y && apt-get clean -y && pip cache purge
+    apt-get autoclean -y && apt-get autoremove -y && apt-get clean -y && pip cache purge && rm -rf /var/lib/apt/lists/*;
 
 # color transfer
-RUN pip install docutils && git clone https://github.com/hahnec/color-matcher && cd color-matcher && python setup.py install && \
+RUN pip install --no-cache-dir docutils && git clone https://github.com/hahnec/color-matcher && cd color-matcher && python setup.py install && \
     cd /workspace && rm -rf color-matcher && pip cache purge
 
 # imagemagick for imread
-RUN apt-get install checkinstall libwebp-dev libopenjp2-7-dev librsvg2-dev libde265-dev -y && git clone https://github.com/ImageMagick/ImageMagick && cd ImageMagick && \
-    ./configure --enable-shared --with-modules --with-gslib && make && \
+RUN apt-get install --no-install-recommends checkinstall libwebp-dev libopenjp2-7-dev librsvg2-dev libde265-dev -y && git clone https://github.com/ImageMagick/ImageMagick && cd ImageMagick && \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --enable-shared --with-modules --with-gslib && make && \
     make install && ldconfig /usr/local/lib && cd /workspace && rm -rf ImageMagick && \
-    apt-get autoclean -y && apt-get autoremove -y && apt-get clean -y
-    
+    apt-get autoclean -y && apt-get autoremove -y && apt-get clean -y && rm -rf /var/lib/apt/lists/*;
+
 # upgrading ffmpeg manually (ffmpeg 20220526 from https://johnvansickle.com/ffmpeg/)
 RUN wget https://files.catbox.moe/cplts2 -O ffmpeg && \
     chmod +x ./ffmpeg && mv ffmpeg /usr/bin/ffmpeg
 
 # installing tensorflow because of FILM
-RUN pip install tensorflow tensorflow-gpu tensorflow_addons gin-config -U && pip3 cache purge
+RUN pip install --no-cache-dir tensorflow tensorflow-gpu tensorflow_addons gin-config -U && pip3 cache purge
 
 # installing onnx tensorrt with a workaround, error with import otherwise
 # https://github.com/onnx/onnx-tensorrt/issues/643
@@ -207,18 +207,18 @@ RUN wget "https://download.pytorch.org/models/vgg19-dcbb9e9d.pth" -P /root/.cach
 # vs plugings from others
 # https://github.com/HolyWu/vs-swinir
 # https://github.com/HolyWu/vs-basicvsrpp
-RUN pip install --upgrade vsswinir && python -m vsswinir && \
-    pip install --upgrade vsbasicvsrpp && python -m vsbasicvsrpp && pip cache purge
+RUN pip install --no-cache-dir --upgrade vsswinir && python -m vsswinir && \
+    pip install --no-cache-dir --upgrade vsbasicvsrpp && python -m vsbasicvsrpp && pip cache purge
 
 # vs-mlrt
 # upgrading g++
-RUN apt install build-essential manpages-dev software-properties-common -y && add-apt-repository ppa:ubuntu-toolchain-r/test -y && \
-    apt update -y && apt install gcc-11 g++-11 -y && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-11 11 && \
+RUN apt install --no-install-recommends build-essential manpages-dev software-properties-common -y && add-apt-repository ppa:ubuntu-toolchain-r/test -y && \
+    apt update -y && apt install --no-install-recommends gcc-11 g++-11 -y && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-11 11 && \
     update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-11 11 && \
 # compiling
     git clone https://github.com/AmusementClub/vs-mlrt /workspace/vs-mlrt && cd /workspace/vs-mlrt/vstrt && mkdir build && \
     cd build && cmake .. -DVAPOURSYNTH_INCLUDE_DIRECTORY=/workspace/vapoursynth-R59/include && make && make install && \
-    cd .. && rm -rf vs-mlrt
+    cd .. && rm -rf vs-mlrt && rm -rf /var/lib/apt/lists/*;
 
 # x265
 RUN git clone https://github.com/AmusementClub/x265 /workspace/x265 && cd /workspace/x265/source/ && mkdir build && cd build && \
@@ -232,19 +232,19 @@ RUN git clone https://github.com/Irrational-Encoding-Wizardry/descale && cd desc
     cd .. && rm -rf descale
 
 # mpv
-RUN apt install mpv -y && apt-get update && \
-    DEBIAN_FRONTEND=noninteractive apt-get install --yes pulseaudio-utils && \
-    apt-get install -y pulseaudio && apt-get install pulseaudio libpulse-dev osspd -y && \
-    apt-get autoclean -y && apt-get autoremove -y && apt-get clean -y
+RUN apt install --no-install-recommends mpv -y && apt-get update && \
+    DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install --yes pulseaudio-utils && \
+    apt-get install --no-install-recommends -y pulseaudio && apt-get install --no-install-recommends pulseaudio libpulse-dev osspd -y && \
+    apt-get autoclean -y && apt-get autoremove -y && apt-get clean -y && rm -rf /var/lib/apt/lists/*;
 
 # av1an
-RUN apt install curl -y && curl https://sh.rustup.rs -sSf | sh -s -- -y && \
+RUN apt install --no-install-recommends curl -y && curl https://sh.rustup.rs -sSf | sh -s -- -y && \
     . $HOME/.cargo/env && \
-    apt install clang-12 nasm libavutil-dev libavformat-dev libavfilter-dev -y && \
+    apt install --no-install-recommends clang-12 nasm libavutil-dev libavformat-dev libavfilter-dev -y && \
     git clone https://github.com/master-of-zen/Av1an && \
     cd Av1an && cargo build --release --features ffmpeg_static && \
     mv /workspace/Av1an/target/release/av1an /usr/bin && \
-    cd /workspace && rm -rf Av1an && apt-get autoremove -y && apt-get clean
+    cd /workspace && rm -rf Av1an && apt-get autoremove -y && apt-get clean && rm -rf /var/lib/apt/lists/*;
 # svt
 RUN git clone https://github.com/AOMediaCodec/SVT-AV1 && cd SVT-AV1/Build/linux/ && sh build.sh release && \
     cd /workspace/SVT-AV1/Bin/Release/ && chmod +x ./SvtAv1EncApp && mv SvtAv1EncApp /usr/bin && \
@@ -252,11 +252,11 @@ RUN git clone https://github.com/AOMediaCodec/SVT-AV1 && cd SVT-AV1/Build/linux/
     cd /workspace && rm -rf SVT-AV1
 
 # pycuda and numpy hotfix (pycuda needs cuda which isnt in the current container, skipping)
-RUN pip install pycuda numpy==1.21 --force-reinstall && pip cache purge
+RUN pip install --no-cache-dir pycuda numpy==1.21 --force-reinstall && pip cache purge
 
 ########################
 # vulkan
-RUN apt install vulkan-utils libvulkan1 libvulkan-dev -y && apt-get autoclean -y && apt-get autoremove -y && apt-get clean -y
+RUN apt install --no-install-recommends vulkan-utils libvulkan1 libvulkan-dev -y && apt-get autoclean -y && apt-get autoremove -y && apt-get clean -y && rm -rf /var/lib/apt/lists/*;
 
 RUN wget https://sdk.lunarg.com/sdk/download/1.3.211.0/linux/vulkansdk-linux-x86_64-1.3.211.0.tar.gz && tar -zxvf vulkansdk-linux-x86_64-1.3.211.0.tar.gz && \
     rm -rf vulkansdk-linux-x86_64-1.3.211.0.tar.gz