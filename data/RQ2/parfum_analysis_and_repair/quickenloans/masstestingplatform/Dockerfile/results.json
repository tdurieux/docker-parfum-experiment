{
  "startTime": 1674249866639,
  "endTime": 1674249867781,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 76
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 33,
        "columnEnd": 51
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 6
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 3,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 3,
        "columnEnd": 28
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 22
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 46
      }
    }
  ],
  "repairedDockerfile": "FROM php:7.4.4-apache\n\nARG CERT_URL\n\n#\n# Install basic requirements\n#\nRUN apt-get update \\\n && apt-get install --no-install-recommends -y \\\n curl \\\n apt-transport-https \\\n git \\\n vim \\\n build-essential \\\n libssl-dev \\\n wget \\\n unzip \\\n bzip2 \\\n libbz2-dev \\\n zlib1g-dev \\\n libfontconfig \\\n libfreetype6-dev \\\n libjpeg62-turbo-dev \\\n libpng-dev \\\n libicu-dev \\\n libxml2-dev \\\n libldap2-dev \\\n libmcrypt-dev \\\n python-pip \\\n fabric \\\n jq \\\n gnupg \\\n && apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\n\nRUN curl -f -sL https://deb.nodesource.com/setup_8.x | bash - && \\\napt-get update --allow-unauthenticated \\\n&& apt-get install --no-install-recommends -y nodejs && rm -rf /var/lib/apt/lists/*;\n\nRUN apt install --no-install-recommends -y npm && rm -rf /var/lib/apt/lists/*;\nRUN npm install -g gulp && npm cache clean --force;\n\n# PHP Composer\nRUN php -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\" \\\n    && php -r \"if (hash_file('sha384', 'composer-setup.php') === 'e0012edf3e80b6978849f5eff0d4b4e4c79ff1609dd1e613307e16318854d24ae64f26d17af3ef0bf7cfb710ca74755a') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;\" \\\n    && php composer-setup.php --install-dir=\"/usr/local/bin\" --filename=composer \\\n    && php -r \"unlink('composer-setup.php');\"\n\nENV PROJECT_DIR=/var/www/html \\\n    APP_URL=localhost \\\n    PROJECT_SRC=/var/mass-testing-platform/\n\nRUN mkdir $PROJECT_SRC\nRUN docker-php-ext-install mysqli gettext gd\n\nRUN curl -f -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.3/install.sh | bash\nRUN echo 'export NVM_NODEJS_ORG_MIRROR=http://nodejs.org/dist/' >> /root/.bashrc\n\n# Adding Certs\nRUN if [ -n \"$CERT_URL\" ]; then \\\n curl -f -sL $CERT_URL | bash -; fi\n\nCOPY docker-entrypoint.sh /entrypoint.sh\n\nRUN sed -i 's/\\r//' /entrypoint.sh\n\nVOLUME $PROJECT_DIR/storage\n\n# Enter the container with immediate access to project root\nWORKDIR $PROJECT_SRC\n\nENTRYPOINT [\"/bin/bash\", \"/entrypoint.sh\"]\nCMD [\"run\"]\n"
}