{
  "startTime": 1674216809202,
  "endTime": 1674216809923,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 63
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 54,
        "columnEnd": 70
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 25,
        "columnEnd": 41
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 18,
        "columnEnd": 34
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 67,
        "columnEnd": 83
      }
    }
  ],
  "repairedDockerfile": "# Builder\nFROM node:14-alpine as builder\n\n# Copy server and domain + lib packages\nWORKDIR /usr/src/nest-react/\nCOPY .eslintrc .\nCOPY .eslintignore .\nCOPY package.json .\nCOPY tsconfig.json .\nCOPY yarn.lock .\n\nCOPY packages/server packages/server\nCOPY packages/domain packages/domain\nCOPY packages/lib packages/lib\n\n# Install domain + lib + server dependencies\nRUN yarn install --pure-lockfile --non-interactive && yarn cache clean;\n\n# Build common packages\nRUN yarn build:common && yarn cache clean;\n\n# Build server then\nWORKDIR /usr/src/nest-react/packages/server\nRUN yarn build && yarn cache clean;\n\n# Runner\nFROM node:14-alpine AS runner\n\nWORKDIR /usr/src/nest-react\nCOPY VERSION .\n\n# Copy the dist builds from builder\nCOPY --from=builder /usr/src/nest-react/package.json .\nCOPY --from=builder /usr/src/nest-react/yarn.lock .\nCOPY --from=builder /usr/src/nest-react/tsconfig.json .\n\nCOPY --from=builder /usr/src/nest-react/packages/domain/package.json packages/domain/package.json\nCOPY --from=builder /usr/src/nest-react/packages/domain/dist packages/domain/dist\n\nCOPY --from=builder /usr/src/nest-react/packages/lib/package.json packages/lib/package.json\nCOPY --from=builder /usr/src/nest-react/packages/lib/dist packages/lib/dist\n\nCOPY --from=builder /usr/src/nest-react/packages/server/package.json packages/server/package.json\nCOPY --from=builder /usr/src/nest-react/packages/server/dist packages/server/dist\n\n# Install production dependencies\nRUN yarn install --pure-lockfile --non-interactive --production && yarn cache clean;\n\n# Move to the server app\nWORKDIR /usr/src/nest-react/packages/server\n\n# Set the correct ownership for the app folder\nRUN chown -R node:node /usr/src/nest-react/packages/server/\n\n# Launch the server with container\nARG NODE_ENV=production\nCMD [\"yarn\", \"start:prod\"]\n"
}