{
  "startTime": 1674251455268,
  "endTime": 1674251456551,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 7,
        "columnEnd": 115
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 7,
        "columnEnd": 32
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 7,
        "columnEnd": 39
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#+++++++++++++++++++++++++++++++++++++++\n# Dockerfile for webdevops/dockerfile-build-env:latest\n#    -- automatically generated  --\n#+++++++++++++++++++++++++++++++++++++++\n\nFROM webdevops/base-app:ubuntu-18.04\n\nRUN apt-install \\\n        build-essential \\\n        gpg-agent \\\n        apt-transport-https \\\n        ca-certificates \\\n        software-properties-common \\\n        git \\\n        python \\\n        python-dev \\\n        python-setuptools \\\n        python-pip \\\n        graphviz \\\n        ruby \\\n        ruby-dev \\\n        ruby-bundler \\\n    && curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add - \\\n    && add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/ubuntu    $(lsb_release -cs)    stable\" \\\n    && apt-install docker-ce \\\n    && usermod -aG docker application \\\n    && curl -f -LO https://storage.googleapis.com/container-structure-test/latest/container-structure-test-linux-amd64 \\\n    && chmod +x container-structure-test-linux-amd64 \\\n    && mv container-structure-test-linux-amd64 /usr/local/bin/container-structure-test \\\n    && pip install --no-cache-dir --upgrade pip \\\n    && hash -r pip \\\n    && pip install --no-cache-dir --upgrade setuptools \\\n    && git clone --depth 1 https://github.com/webdevops/Dockerfile.git /tmp/Dockerfile \\\n    && cd /tmp/Dockerfile \\\n    && make setup \\\n    && docker-image-cleanup\n\nWORKDIR /app\n\nCMD [\"gosu\", \"application\", \"bash\"]\n"
}