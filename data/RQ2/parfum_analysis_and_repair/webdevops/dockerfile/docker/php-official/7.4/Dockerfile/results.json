{
  "startTime": 1674252857593,
  "endTime": 1674252859083,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 158,
        "lineEnd": 158,
        "columnStart": 7,
        "columnEnd": 122
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 228,
        "lineEnd": 228,
        "columnStart": 7,
        "columnEnd": 49
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 229,
        "lineEnd": 229,
        "columnStart": 7,
        "columnEnd": 49
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 159,
        "lineEnd": 159,
        "columnStart": 65,
        "columnEnd": 96
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 159,
        "lineEnd": 159,
        "columnStart": 7,
        "columnEnd": 39
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 7,
        "columnEnd": 105
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#+++++++++++++++++++++++++++++++++++++++\n# Dockerfile for webdevops/php-official:7.4\n#    -- automatically generated  --\n#+++++++++++++++++++++++++++++++++++++++\n\n\n# Staged baselayout builder\nFROM webdevops/toolbox AS baselayout\nRUN mkdir -p \\\n        /baselayout/sbin \\\n        /baselayout/usr/local/bin \\\n    # Baselayout scripts\n    && wget -O /tmp/baselayout-install.sh https://raw.githubusercontent.com/webdevops/Docker-Image-Baselayout/master/install.sh \\\n    && sh /tmp/baselayout-install.sh /baselayout \\\n    ## Install go-replace\n    && wget -O \"/baselayout/usr/local/bin/go-replace\" \"https://github.com/webdevops/goreplace/releases/download/1.1.2/gr-64-linux\" \\\n    && chmod +x \"/baselayout/usr/local/bin/go-replace\" \\\n    && \"/baselayout/usr/local/bin/go-replace\" --version \\\n    # Install gosu\n    && wget -O \"/baselayout/sbin/gosu\" \"https://github.com/tianon/gosu/releases/download/1.10/gosu-amd64\" \\\n    && wget -O \"/tmp/gosu.asc\" \"https://github.com/tianon/gosu/releases/download/1.10/gosu-amd64.asc\" \\\n    && export GNUPGHOME=\"$(mktemp -d)\" \\\n    && gpg --batch --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 \\\n    && gpg --batch --verify /tmp/gosu.asc \"/baselayout/sbin/gosu\" \\\n    && rm -rf \"$GNUPGHOME\" /tmp/gosu.asc \\\n    && chmod +x \"/baselayout/sbin/gosu\" \\\n    && \"/baselayout/sbin/gosu\" nobody true\n\n\nFROM php:7.4-fpm-buster\n\nLABEL maintainer=info@webdevops.io \\\n      vendor=WebDevOps.io \\\n      io.webdevops.layout=8 \\\n      io.webdevops.version=1.5.0\n\nENV TERM=\"xterm\" \\\n    LANG=\"C.UTF-8\" \\\n    LC_ALL=\"C.UTF-8\"\nENV DOCKER_CONF_HOME=/opt/docker/ \\\n    LOG_STDOUT=\"\" \\\n    LOG_STDERR=\"\"\nENV APPLICATION_USER=application \\\n    APPLICATION_GROUP=application \\\n    APPLICATION_PATH=/app \\\n    APPLICATION_UID=1000 \\\n    APPLICATION_GID=1000\nENV PHP_SENDMAIL_PATH=\"/usr/sbin/sendmail -t -i\"\nENV COMPOSER_VERSION=\"2\"\n\n\n# Baselayout copy (from staged image)\nCOPY --from=baselayout /baselayout /\n\n\nCOPY conf/ /opt/docker/\n\nRUN set -x \\\n    # Init bootstrap\n    && apt-update \\\n    && /usr/local/bin/generate-dockerimage-info \\\n    # Enable non-free\n    && sed -ri \"s/(deb.*\\/debian $(docker-image-info dist-codename) main)/\\1 contrib non-free /\" -- /etc/apt/sources.list \\\n    && apt-update \\\n    # System update\n    && /usr/local/bin/apt-upgrade \\\n    # Base stuff\n    && apt-install \\\n        apt-transport-https \\\n        ca-certificates \\\n        locales \\\n        gnupg\n\nRUN set -x \\\n    # Install packages\n    && chmod +x /opt/docker/bin/* \\\n    && apt-install \\\n        supervisor \\\n        wget \\\n        curl \\\n        vim \\\n        net-tools \\\n        tzdata \\\n    && chmod +s /sbin/gosu \\\n    && docker-run-bootstrap \\\n    && docker-image-cleanup\n\nRUN set -x \\\n    # Install services\n    && apt-install \\\n        # Install common tools\n        zip \\\n        unzip \\\n        bzip2 \\\n        moreutils \\\n        dnsutils \\\n        openssh-client \\\n        rsync \\\n        git \\\n        patch \\\n    && /usr/local/bin/generate-locales \\\n    && docker-run-bootstrap \\\n    && docker-image-cleanup\n\nRUN set -x \\\n    # Install php environment\n    && apt-install \\\n        # Install tools\n        imagemagick \\\n        graphicsmagick \\\n        ghostscript \\\n        jpegoptim \\\n        libjpeg-turbo-progs \\\n        pngcrush \\\n        optipng \\\n        apngopt \\\n        pngnq \\\n        pngquant \\\n        # Libraries\n        libvips42 \\\n        librabbitmq4 \\\n        libldap-2.4-2 \\\n        libxslt1.1 \\\n        zlibc \\\n        zlib1g \\\n        libpq5 \\\n        libpng16-16 \\\n        libmcrypt4 \\\n        libzip4 \\\n        # Dev and headers\n        libjpeg62-turbo-dev \\\n        libwebp-dev \\\n        libfreetype6-dev \\\n        libbz2-dev \\\n        libicu-dev \\\n        libldap2-dev \\\n        libldb-dev \\\n        libmcrypt-dev \\\n        libxml2-dev \\\n        libxslt1-dev \\\n        zlib1g-dev \\\n        libmemcached-dev \\\n        libpng-dev \\\n        libpq-dev \\\n        libzip-dev \\\n        libc-client-dev \\\n        libc-client2007e-dev \\\n        libkrb5-dev \\\n        libvips-dev \\\n        librabbitmq-dev \\\n        libmagick++-dev \\\n    # Install guetzli\n    && wget https://github.com/google/guetzli/archive/master.zip \\\n    && unzip master.zip \\\n    && make -C guetzli-master \\\n    && cp guetzli-master/bin/Release/guetzli /usr/local/bin/ \\\n    && rm -rf master.zip guetzli-master \\\n    # Install new version of ICU \\\n    && curl -f -sS -o /tmp/icu.tar.gz -L https://github.com/unicode-org/icu/releases/download/release-66-1/icu4c-66_1-src.tgz \\\n    && tar -zxf /tmp/icu.tar.gz -C /tmp && cd /tmp/icu/source && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/local && make && make install && cd / && rm -rf /tmp/icu* \\\n    # Install extensions\n    && PKG_CONFIG_PATH=/usr/local docker-php-ext-configure intl \\\n    && docker-php-ext-configure gd --with-jpeg --with-freetype --with-webp \\\n    && docker-php-ext-configure ldap --with-libdir=lib/x86_64-linux-gnu/ \\\n    && PHP_OPENSSL=yes docker-php-ext-configure imap --with-kerberos --with-imap-ssl \\\n    && docker-php-ext-install \\\n        bcmath \\        \n        bz2 \\\n        calendar \\\n        exif \\\n        intl \\\n        gettext \\\n        ldap \\\n        mysqli \\\n        imap \\\n        pcntl \\\n        pdo_mysql \\\n        pdo_pgsql \\\n        pgsql \\\n        soap \\\n        sockets \\\n        tokenizer \\\n        sysvmsg \\\n        sysvsem \\\n        sysvshm \\\n        shmop \\\n        xmlrpc \\\n        xsl \\\n        zip \\\n        gd \\\n        gettext \\\n        opcache \\\n    # Install extensions for PHP 7.x\n    && pecl install apcu \\\n    && printf \"no --disable-memcached-sasl\\n\" | pecl install memcached \\\n    && echo extension=memcached.so > /usr/local/etc/php/conf.d/memcached.ini \\\n    # Install vips (only works with PHP >= 7.0)\n    && printf \"\\n\" | pecl install vips \\\n    && echo extension=vips.so > /usr/local/etc/php/conf.d/vips.ini \\\n    && pecl install redis \\\n    && pecl install mongodb \\\n    && pecl install imagick \\\n    && pecl install amqp \\\n    && echo extension=apcu.so > /usr/local/etc/php/conf.d/apcu.ini \\\n    && echo extension=redis.so > /usr/local/etc/php/conf.d/redis.ini \\\n    && echo extension=imagick.so > /usr/local/etc/php/conf.d/imagick.ini \\\n    && echo extension=mongodb.so > /usr/local/etc/php/conf.d/mongodb.ini \\\n    && echo extension=amqp.so > /usr/local/etc/php/conf.d/amqp.ini \\\n    # Uninstall dev and header packages\n    && apt-get purge -y -f --force-yes \\\n        libc-client-dev \\\n        libkrb5-dev \\\n        libbz2-dev \\\n        libicu-dev \\\n        libldap2-dev \\\n        libldb-dev \\\n        libmcrypt-dev \\\n        libxml2-dev \\\n        libxslt1-dev \\\n        zlib1g-dev \\\n        libpng-dev \\\n        libwebp-dev \\\n        libpq-dev \\\n        libzip-dev \\\n        libvips-dev \\\n        librabbitmq-dev \\\n        libmagick++-dev \\\n    && rm -f /usr/local/etc/php-fpm.d/zz-docker.conf \\\n    && curl -f -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin/ --filename=composer2 \\\n    && curl -f -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin/ --filename=composer1 --1 \\\n    && ln -sf /usr/local/bin/composer2 /usr/local/bin/composer \\\n    # Enable php services\n    && docker-service enable syslog \\\n    && docker-service enable cron \\\n    && docker-run-bootstrap \\\n    && docker-image-cleanup && rm /tmp/icu.tar.gz\n\nWORKDIR /\nEXPOSE 9000\nENTRYPOINT [\"/entrypoint\"]\nCMD [\"supervisord\"]\n"
}