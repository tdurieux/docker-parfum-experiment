{
  "startTime": 1674251460607,
  "endTime": 1674251462603,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 163,
        "lineEnd": 163,
        "columnStart": 7,
        "columnEnd": 122
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 245,
        "lineEnd": 245,
        "columnStart": 7,
        "columnEnd": 49
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 246,
        "lineEnd": 246,
        "columnStart": 7,
        "columnEnd": 49
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 164,
        "lineEnd": 164,
        "columnStart": 65,
        "columnEnd": 96
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 164,
        "lineEnd": 164,
        "columnStart": 7,
        "columnEnd": 39
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 7,
        "columnEnd": 105
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 161,
        "lineEnd": 161,
        "columnStart": 7,
        "columnEnd": 124
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#+++++++++++++++++++++++++++++++++++++++\n# Dockerfile for webdevops/php-official:7.1-alpine\n#    -- automatically generated  --\n#+++++++++++++++++++++++++++++++++++++++\n\n\n# Staged baselayout builder\nFROM webdevops/toolbox AS baselayout\nRUN mkdir -p \\\n        /baselayout/sbin \\\n        /baselayout/usr/local/bin \\\n    # Baselayout scripts\n    && wget -O /tmp/baselayout-install.sh https://raw.githubusercontent.com/webdevops/Docker-Image-Baselayout/master/install.sh \\\n    && sh /tmp/baselayout-install.sh /baselayout \\\n    ## Install go-replace\n    && wget -O \"/baselayout/usr/local/bin/go-replace\" \"https://github.com/webdevops/goreplace/releases/download/1.1.2/gr-64-linux\" \\\n    && chmod +x \"/baselayout/usr/local/bin/go-replace\" \\\n    && \"/baselayout/usr/local/bin/go-replace\" --version \\\n    # Install gosu\n    && wget -O \"/baselayout/sbin/gosu\" \"https://github.com/tianon/gosu/releases/download/1.10/gosu-amd64\" \\\n    && wget -O \"/tmp/gosu.asc\" \"https://github.com/tianon/gosu/releases/download/1.10/gosu-amd64.asc\" \\\n    && export GNUPGHOME=\"$(mktemp -d)\" \\\n    && gpg --batch --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 \\\n    && gpg --batch --verify /tmp/gosu.asc \"/baselayout/sbin/gosu\" \\\n    && rm -rf \"$GNUPGHOME\" /tmp/gosu.asc \\\n    && chmod +x \"/baselayout/sbin/gosu\" \\\n    && \"/baselayout/sbin/gosu\" nobody true\n\n\nFROM php:7.1-fpm-alpine\n\nLABEL maintainer=info@webdevops.io \\\n      vendor=WebDevOps.io \\\n      io.webdevops.layout=8 \\\n      io.webdevops.version=1.5.0\n\nENV TERM=\"xterm\" \\\n    LANG=\"C.UTF-8\" \\\n    LC_ALL=\"C.UTF-8\"\nENV DOCKER_CONF_HOME=/opt/docker/ \\\n    LOG_STDOUT=\"\" \\\n    LOG_STDERR=\"\"\nENV APPLICATION_USER=application \\\n    APPLICATION_GROUP=application \\\n    APPLICATION_PATH=/app \\\n    APPLICATION_UID=1000 \\\n    APPLICATION_GID=1000\nENV PHP_SENDMAIL_PATH=\"/usr/sbin/sendmail -t -i\"\nENV LD_PRELOAD=\"/usr/lib/preloadable_libiconv.so\"\nENV COMPOSER_VERSION=\"2\"\n\n\n# Baselayout copy (from staged image)\nCOPY --from=baselayout /baselayout /\n\n\nCOPY conf/ /opt/docker/\n\nRUN set -x \\\n    # Init bootstrap\n    # Add community\n    && echo https://dl-4.alpinelinux.org/alpine/v3.10/community/ >> /etc/apk/repositories \\\n    # System update\n    && /usr/local/bin/apk-upgrade \\\n    # Install base stuff\n    && apk-install \\\n        bash \\\n        ca-certificates \\\n        openssl \\\n    && update-ca-certificates \\\n    && /usr/local/bin/generate-dockerimage-info \\\n    ## Fix su execution (eg for tests)\n    && mkdir -p /etc/pam.d/ \\\n    && echo 'auth sufficient pam_rootok.so' >> /etc/pam.d/su\n\nRUN set -x \\\n    # Install services\n    && chmod +x /opt/docker/bin/* \\\n    && apk-install \\\n        supervisor \\\n        wget \\\n        curl \\\n        vim \\\n        sed \\\n        tzdata \\\n        busybox-suid \\\n    && chmod +s /sbin/gosu \\\n    && docker-run-bootstrap \\\n    && docker-image-cleanup\n\nRUN set -x \\\n    && apk-install shadow \\\n    && apk-install \\\n        # Install common tools\n        zip \\\n        unzip \\\n        bzip2 \\\n        drill \\\n        ldns \\\n        openssh-client \\\n        rsync \\\n        patch \\\n        git \\\n    && docker-run-bootstrap \\\n    && docker-image-cleanup\n\nRUN set -x \\\n    # Install php environment\n    && apk-install \\\n        imagemagick \\\n        graphicsmagick \\\n        ghostscript \\\n        jpegoptim \\\n        pngcrush \\\n        optipng \\\n        pngquant \\\n        vips \\\n        rabbitmq-c \\\n        c-client \\\n        # Libraries\n        libldap \\\n        icu-libs \\\n        libintl \\\n        libpq \\\n        libxslt \\\n        libzip \\\n        libmemcached \\\n        yaml \\\n        # Build dependencies\n        autoconf \\\n        g++ \\\n        make \\\n        libtool \\\n        pcre-dev \\\n        gettext-dev \\\n        freetype-dev \\\n        libjpeg-turbo-dev \\\n        libpng-dev \\\n        vips-dev \\\n        krb5-dev \\\n        openssl-dev \\\n        imap-dev \\\n        imagemagick-dev \\\n        rabbitmq-c-dev \\\n        openldap-dev \\\n        icu-dev \\\n        postgresql-dev \\\n        libxml2-dev \\\n        ldb-dev \\\n        pcre-dev \\\n        libxslt-dev \\\n        libzip-dev \\\n        libmemcached-dev \\\n        yaml-dev \\\n    # Install guetzli\n    && wget https://github.com/google/guetzli/archive/master.zip \\\n    && unzip master.zip \\\n    && make -C guetzli-master \\\n    && cp guetzli-master/bin/Release/guetzli /usr/local/bin/ \\\n    && rm -rf master.zip guetzli-master \\\n    # https://github.com/docker-library/php/issues/240 \\\n    && apk add --no-cache gnu-libiconv --update-cache --repository http://dl-cdn.alpinelinux.org/alpine/edge/testing/ --allow-untrusted \\\n    # Install new version of ICU\n    && curl -f -sS -o /tmp/icu.tar.gz -L https://github.com/unicode-org/icu/releases/download/release-66-1/icu4c-66_1-src.tgz \\\n    && tar -zxf /tmp/icu.tar.gz -C /tmp && cd /tmp/icu/source && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/local && make && make install && cd / && rm -rf /tmp/icu* \\\n    # Install extensions\n    && docker-php-ext-configure intl --with-icu-dir=/usr/local \\\n    && docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ --with-webp-dir=/usr/include/ \\\n    && docker-php-ext-configure ldap \\\n    && PHP_OPENSSL=yes docker-php-ext-configure imap --with-kerberos --with-imap-ssl \\\n    && docker-php-ext-install \\\n        bcmath \\\n        bz2 \\\n        calendar \\\n        exif \\\n        intl \\\n        gettext \\\n        ldap \\\n        mysqli \\\n        imap \\\n        hash \\\n        pcntl \\\n        pdo_mysql \\\n        pdo_pgsql \\\n        pgsql \\\n        soap \\\n        sockets \\\n        tokenizer \\\n        sysvmsg \\\n        sysvsem \\\n        sysvshm \\\n        shmop \\\n        xmlrpc \\\n        xsl \\\n        zip \\\n        gd \\\n        gettext \\\n        opcache \\\n    # Install extensions for PHP 7.x\n    && printf \"no --disable-memcached-sasl\\n\" | pecl install memcached-3.0.4 \\\n    && docker-php-ext-enable memcached \\\n    # Install vips (only works with PHP >= 7.0)\n    && pecl install apcu \\\n    && printf \"\\n\" | pecl install vips \\\n    && pecl install redis \\\n    && pecl install mongodb \\\n    && pecl install imagick \\\n    && pecl install amqp \\\n    && pecl install yaml \\\n    && docker-php-ext-enable \\\n        apcu \\\n        redis \\\n        imagick \\\n        mongodb \\\n        amqp \\\n        vips \\\n        yaml \\\n    # Uninstall dev and header packages\n    && apk del -f --purge \\\n        autoconf \\\n        g++ \\\n        make \\\n        libtool \\\n        pcre-dev \\\n        gettext-dev \\\n        freetype-dev \\\n        libjpeg-turbo-dev \\\n        libpng-dev \\\n        vips-dev \\\n        krb5-dev \\\n        openssl-dev \\\n        imap-dev \\\n        rabbitmq-c-dev \\\n        imagemagick-dev \\\n        openldap-dev \\\n        icu-dev \\\n        postgresql-dev \\\n        libxml2-dev \\\n        ldb-dev \\\n        pcre-dev \\\n        libxslt-dev \\\n        libzip-dev \\\n        libmemcached-dev \\\n        yaml-dev \\\n    && rm -f /usr/local/etc/php-fpm.d/zz-docker.conf \\\n    && curl -f -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin/ --filename=composer2 \\\n    && curl -f -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin/ --filename=composer1 --1 \\\n    && ln -sf /usr/local/bin/composer2 /usr/local/bin/composer \\\n    # Enable php services\n    && docker-service enable syslog \\\n    && docker-service enable cron \\\n    && docker-run-bootstrap \\\n    && docker-image-cleanup && rm /tmp/icu.tar.gz\n\nWORKDIR /\nEXPOSE 9000\nENTRYPOINT [\"/entrypoint\"]\nCMD [\"supervisord\"]\n"
}