{
  "startTime": 1674249598743,
  "endTime": 1674249599233,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 17,
        "columnStart": 7,
        "columnEnd": 94
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG VARIANT=bullseye\nFROM debian:${VARIANT}\nENV DEBIAN_FRONTEND=noninteractive\nENV LC_ALL=C.UTF-8\nENV LANG=C.UTF-8\n\n# Arguments\nARG CONTAINER_USER=esp\nARG CONTAINER_GROUP=esp\nARG TOOLCHAIN_VERSION=1.61.0.0\nARG ESP_IDF_VERSION=release/v4.4\nARG ESP_BOARD=esp32\nARG INSTALL_RUST_TOOLCHAIN=install-rust-toolchain.sh\n\n# Install dependencies\nRUN apt-get update \\\n    && apt-get install --no-install-recommends -y git curl gcc clang ninja-build libudev-dev unzip xz-utils \\\n    python3 python3-pip python3-venv libusb-1.0-0 libssl-dev pkg-config libtinfo5 libpython2.7 \\\n    && apt-get clean -y && rm -rf /var/lib/apt/lists/* /tmp/library-scripts\n\n# Set users\nRUN adduser --disabled-password --gecos \"\" ${CONTAINER_USER}\nUSER ${CONTAINER_USER}\nWORKDIR /home/${CONTAINER_USER}\n\n# Install Rust toolchain, extra crates and esp-idf\nENV PATH=${PATH}:/home/${CONTAINER_USER}/.cargo/bin:/home/${CONTAINER_USER}/opt/bin\nADD --chown=${CONTAINER_USER}:${CONTAINER_GROUP} \\\n    https://github.com/esp-rs/rust-build/releases/download/v${TOOLCHAIN_VERSION}/${INSTALL_RUST_TOOLCHAIN} \\\n    /home/${CONTAINER_USER}/${INSTALL_RUST_TOOLCHAIN}\n\nRUN chmod a+x ${INSTALL_RUST_TOOLCHAIN} \\\n    && ./${INSTALL_RUST_TOOLCHAIN} \\\n    --extra-crates \"ldproxy cargo-espflash wokwi-server web-flash\" \\\n    --clear-cache \"YES\" --export-file /home/${CONTAINER_USER}/export-esp.sh \\\n    --esp-idf-version \"${ESP_IDF_VERSION}\" \\\n    --minified-esp-idf \"YES\" \\\n    --build-target \"${ESP_BOARD}\" \\\n    && rustup component add clippy rustfmt\n\n\n# Activate ESP environment\nRUN echo \"source /home/${CONTAINER_USER}/export-esp.sh\" >> ~/.bashrc\n\nCMD [ \"/bin/bash\" ]\n"
}