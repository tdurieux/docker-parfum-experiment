{
  "startTime": 1674215012295,
  "endTime": 1674215012884,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 18,
        "columnEnd": 60
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 34
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine/flake8:3.8.4 AS clang-format-build\n\n# Build dependencies\nRUN apk update && apk add --no-cache git build-base ninja cmake python3\n\n# Pass `--build-arg LLVM_TAG=master` for latest llvm commit\nARG LLVM_TAG\nENV LLVM_TAG ${LLVM_TAG:-llvmorg-8.0.0}\n\n# Download and setup\nWORKDIR /build\nRUN git clone --branch ${LLVM_TAG} --depth 1 https://github.com/llvm/llvm-project.git\nWORKDIR /build/llvm-project\nRUN mv clang llvm/tools\nRUN mv libcxx llvm/projects\n\n# Build\nWORKDIR llvm/build\nRUN cmake -GNinja -DLLVM_BUILD_STATIC=ON -DLLVM_ENABLE_LIBCXX=ON ..\nRUN ninja clang-format\n\n\nFROM alpine/flake8:3.8.4\n\nCOPY --from=clang-format-build /build/llvm-project/llvm/build/bin/clang-format /usr/bin\n\nADD ./requirements.txt .\n\n# Need to install build tools and auto-formatters\nRUN apk add --no-cache git openssh build-base && \\\n    pip3 install --no-cache-dir --upgrade pip && \\\n    pip3 install --no-cache-dir -r requirements.txt\n\n# Add in the .flake8 spec\nADD ./.flake8 /usr/local/lib/.flake8\n\n# Add in the entry script\nADD ./run.sh /usr/local/bin/run.sh\n\n# Make the code directory. It is expected that code is\n#   loaded into here when beginning the checking process\nRUN mkdir /code /code/src\n\n\n# Add clang format configuration file\nADD ./.clang-format /code/.clang-format\n\n#\n# Default environment variables\n#\n\n# Don't do formatting automatically. Set to something\n#   non-empty to perform formatting. Choose a single\n#   available formatter for a default here. Black is the\n#   only currently supported formater and therefor default\nENV DO_FORMAT=\"\"\nENV FORMAT_BLACK=\"y\"\n\n# Do check automatically. Set to something empty\n#   to turn off checking\nENV DO_CHECK=\"y\"\n\n# Don't hang automatically. This is useful for dev\n#   purposes but shouldn't be turned on in prod\nENV DO_HANG=\"\"\n\n# Excludes\nENV FLAKE8_EXCLUDE=third-party,languages/python/third-party,languages/python/build\nENV BLACK_EXCLUDE=third-party|build\nENV ISORT_EXCLUDE=\"--skip third-party --skip build\"\n\n# Code to check\nENV CODE_DIR=/code\n\n# Define the entrypoint -- need to override the default\nENTRYPOINT [\"/usr/local/bin/run.sh\"]\n\n"
}