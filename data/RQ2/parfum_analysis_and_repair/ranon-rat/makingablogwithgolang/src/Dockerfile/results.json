{
  "startTime": 1674254770726,
  "endTime": 1674254771395,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 33,
        "columnEnd": 51
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 23,
        "columnEnd": 34
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 39,
        "columnEnd": 50
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM golang:alpine\n\nCOPY . ./blog\nWORKDIR /go/blog/\nRUN apk update && apk upgrade && apk add --no-cache build-base\n# install the dependencies\nRUN apk add --no-cache sqlite && apk add --no-cache npm && apk add --no-cache zip\nRUN npm install -g typescript && npm cache clean --force;\n# init the database\nRUN cat database/inicialize.sql | sqlite3 database/publications.db\n\n# compile some stuff\nWORKDIR /go/blog/public/script\n\nRUN tsc *.ts\nRUN rm -rf *.ts\nRUN unzip *.zip\nRUN unzip *.zip ;rm -rf *.zip\nWORKDIR /go/blog/public/style\n# delete some things\nRUN unzip *.zip ;rm -rf *.zip\n\nWORKDIR /go/blog/\n#compile\nRUN go build main.go\n# delete\nRUN  rm -rf database/inicialize.sql\nRUN  apk del npm && apk del zip\n\nCMD [\"./main\"]\n"
}