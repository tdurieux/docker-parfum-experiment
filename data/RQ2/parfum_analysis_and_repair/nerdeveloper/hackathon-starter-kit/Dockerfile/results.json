{
  "startTime": 1674218708422,
  "endTime": 1674218709028,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 20
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Our first stage, that is the Builder\nFROM node:10-alpine AS builder\n\nWORKDIR /hackathon\n\nCOPY . .\n\nLABEL maintainer=\"Obinna Odirionye\"\n\nRUN npm install && npm cache clean --force;\n\nRUN npm run docker:build\n\nRUN npm run copy-assets\n\nRUN rm -rf node_modules\n\n\n\n\n# Our Second stage, that creates the final image.\nFROM node:10-alpine\n\nLABEL maintainer=\"Obinna Odirionye\"\n\nARG NODE_ENV=development\nENV NODE_ENV=${NODE_ENV}\n\nWORKDIR /app\n\nCOPY --from=builder ./hackathon/app ./\n\nCOPY package* ./\n\nRUN npm install --production && npm cache clean --force;\n\n\nRUN npm i -g nodemon && npm cache clean --force;\n\nEXPOSE 3000\n\nCMD [\"nodemon\", \"dist/server.js\", \"--public\"]\n\n"
}