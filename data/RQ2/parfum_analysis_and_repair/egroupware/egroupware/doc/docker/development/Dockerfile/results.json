{
  "startTime": 1674216151992,
  "endTime": 1674216153312,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 7,
        "columnEnd": 46
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 57
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 4,
        "columnEnd": 102
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 4,
        "columnEnd": 102
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 7,
        "columnEnd": 46
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 57
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 4,
        "columnEnd": 102
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 4,
        "columnEnd": 126
      }
    }
  ],
  "repairedDockerfile": "################################################################################\n##\n## EGroupware development container using Ubuntu 20.04 and PHP from ondrej/php PPA\n##\n################################################################################\nFROM ubuntu:20.04\nMAINTAINER rb@egroupware.org\n\nARG VERSION=dev-master\nARG PHP_VERSION=7.4\n\n# keeping build-arg in environment for entrypoint.sh\nENV VERSION=$VERSION\nENV PHP_VERSION=$PHP_VERSION\n\nRUN apt-get update \\\n\t&& apt-get install --no-install-recommends -y software-properties-common \\\n\t&& LC_ALL=C.UTF-8 add-apt-repository -y ppa:ondrej/php \\\n\t&& apt-get update \\\n\t&& bash -c \"apt-get install -y php$PHP_VERSION-{cli,mysql,gd,xsl,bz2,opcache,apcu,tidy,zip,bcmath,mbstring,smbclient,ldap,curl,fpm,pgsql,gmp}\" \\\n\t# PHP 8.0 no longer has a separate json extension\n    && apt-get install --no-install-recommends -y php$PHP_VERSION-json || true \\\n\t# fpm and php.ini settings\n\t&& sed -e 's/^;\\?listen \\?=.*/listen = 9000/g' \\\n\t\t-e '/allowed_clients/d' \\\n\t\t-e '/pm.max_children/s/=.*/= 80/' \\\n\t\t-e '/catch_workers_output/s/^;/;/' \\\n\t\t-e '/error_log/d' \\\n\t\t-e 's/^;\\?pm.max_requests =.*/pm.max_requests = 30/' \\\n\t\t-e 's/^;\\?php_admin_value\\[memory_limit\\].*/php_admin_value[memory_limit] = 172M/' \\\n\t\t-e 's/^;\\?request_terminate_timeout.*/request_terminate_timeout = 70m/' \\\n\t\t-i /etc/php/$PHP_VERSION/fpm/pool.d/www.conf \\\n\t&& sed \t-e 's/^;\\?session.gc_maxlifetime.*/session.gc_maxlifetime = 14400/g' \\\n\t\t-e 's|^;\\?date.timezone.*|date.timezone = UTC|g' \\\n\t\t-e 's|^;\\?sys_temp_dir.*|sys_temp_dir = /tmp|g' \\\n\t\t-e 's|^;\\?disable_functions.*|disable_functions = exec,passthru,shell_exec,system,proc_open,popen|g' \\\n\t\t-e 's|^;\\?max_execution_time \\?=.*|max_execution_time = 90|g' \\\n\t\t-e 's|^;\\?upload_max_filesize \\?=.*|upload_max_filesize = 64M|g' \\\n\t\t-e 's|^;\\?post_max_size \\?=.*|post_max_size = 65M|g' \\\n\t\t-e 's|^;\\?max_input_vars \\?=.*|max_input_vars = 5000|g' \\\n\t\t-e 's|^;\\?zlib.output_compression \\?=.*|zlib.output_compression = On|g' \\\n\t\t-e 's|^;\\?opcache.validate_timestamps \\?=.*|opcache.validate_timestamps=0|g' \\\n\t\t-i /etc/php/$PHP_VERSION/fpm/php.ini \\\n\t&& sed \t-e 's|^;\\?date.timezone.*|date.timezone = UTC|g' \\\n\t\t-e 's|^;\\?sys_temp_dir.*|sys_temp_dir = /tmp|g' \\\n\t\t-i /etc/php/$PHP_VERSION/cli/php.ini \\\n\t# create directory for pid file\n\t&& mkdir -p /run/php \\\n\t# send logs to stderr to be viewed by docker logs\n\t&& ln -s /dev/stderr /var/log/php$PHP_VERSION-fpm.log \\\n\t# install tools to build EGroupware\n\t&& apt-get install --no-install-recommends -y rsync npm zip curl sudo cron patch \\\n\t&& npm install -g grunt-cli \\\n\t&& bash -c \\\n'EXPECTED_SIGNATURE=$(curl https://composer.github.io/installer.sig); \\\ncurl https://getcomposer.org/installer > composer-setup.php; \\\nACTUAL_SIGNATURE=$(php -r \"echo hash_file(\\\"sha384\\\", \\\"composer-setup.php\\\");\"); \\\nif [ \"$EXPECTED_SIGNATURE\" != \"$ACTUAL_SIGNATURE\" ]; \\\nthen \\\n    >&2 echo \"ERROR: Invalid Composer installer signature\"; \\\n    RESULT=1; \\\nelse \\\n\tphp composer-setup.php --quiet --install-dir /usr/local/bin; \\\n\tRESULT=$?; \\\nfi; \\\nrm composer-setup.php; \\\nexit $RESULT' \\\n\t# disable certificate checks for LDAP as most LDAP and AD servers have no \"valid\" cert\n\t&& echo \"TLS_REQCERT never\" >> /etc/ldap/ldap.conf && npm cache clean --force; && rm -rf /var/lib/apt/lists/*;\n\n# install diverse developper tools, not installed above / in stock container\nRUN apt-get install --no-install-recommends -y php$PHP_VERSION-cli php$PHP_VERSION-xdebug inetutils-ping iproute2 git vim yarn \\\n\t&& echo \"xdebug.mode=debug\" >> /etc/php/$PHP_VERSION/fpm/conf.d/20-xdebug.ini \\\n\t&& echo \"xdebug.client_port=9001\" >> /etc/php/$PHP_VERSION/fpm/conf.d/20-xdebug.ini \\\n\t&& echo \"xdebug.client_host=172.17.0.1\" >> /etc/php/$PHP_VERSION/fpm/conf.d/20-xdebug.ini \\\n\t&& ln -s /usr/local/bin/composer.phar /usr/local/bin/composer \\\n\t&& sed \t-e 's|^;\\?opcache.validate_timestamps \\?=.*|opcache.validate_timestamps=1|g' \\\n\t\t-i /etc/php/$PHP_VERSION/fpm/php.ini \\\n\t&& apt-get clean \\\n\t&& update-alternatives --install /usr/sbin/php-fpm php-fpm /usr/sbin/php-fpm$PHP_VERSION 5 && rm -rf /var/lib/apt/lists/*;\n\nVOLUME /var/www\nVOLUME /var/lib/egroupware\nVOLUME /var/lib/php/sessions\nVOLUME /var/lib/egroupware-push\n\nEXPOSE 9000\n\nADD entrypoint.sh /\n\nCMD [\"php-fpm\", \"--nodaemonize\"]\nENTRYPOINT [\"/entrypoint.sh\"]\n"
}