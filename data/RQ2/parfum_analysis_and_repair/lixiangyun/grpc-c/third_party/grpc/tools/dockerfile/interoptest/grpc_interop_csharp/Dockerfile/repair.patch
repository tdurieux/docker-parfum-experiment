diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/lixiangyun/grpc-c/third_party/grpc/tools/dockerfile/interoptest/grpc_interop_csharp/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/lixiangyun/grpc-c/third_party/grpc/tools/dockerfile/interoptest/grpc_interop_csharp/Dockerfile/repaired.Dockerfile
index b2216c7..3923500 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/lixiangyun/grpc-c/third_party/grpc/tools/dockerfile/interoptest/grpc_interop_csharp/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/lixiangyun/grpc-c/third_party/grpc/tools/dockerfile/interoptest/grpc_interop_csharp/Dockerfile/repaired.Dockerfile
@@ -15,7 +15,7 @@
 FROM debian:jessie
 
 # Install Git and basic packages.
-RUN apt-get update && apt-get install -y \
+RUN apt-get update && apt-get install --no-install-recommends -y \
   autoconf \
   autotools-dev \
   build-essential \
@@ -43,26 +43,26 @@ RUN apt-get update && apt-get install -y \
   telnet \
   unzip \
   wget \
-  zip && apt-get clean
+  zip && apt-get clean && rm -rf /var/lib/apt/lists/*;
 
 #================
 # Build profiling
-RUN apt-get update && apt-get install -y time && apt-get clean
+RUN apt-get update && apt-get install --no-install-recommends -y time && apt-get clean && rm -rf /var/lib/apt/lists/*;
 
 #====================
 # Python dependencies
 
 # Install dependencies
 
-RUN apt-get update && apt-get install -y \
+RUN apt-get update && apt-get install --no-install-recommends -y \
     python-all-dev \
     python3-all-dev \
-    python-pip
+    python-pip && rm -rf /var/lib/apt/lists/*;
 
 # Install Python packages from PyPI
-RUN pip install --upgrade pip==10.0.1
-RUN pip install virtualenv
-RUN pip install futures==2.2.0 enum34==1.0.4 protobuf==3.5.2.post1 six==1.10.0 twisted==17.5.0
+RUN pip install --no-cache-dir --upgrade pip==10.0.1
+RUN pip install --no-cache-dir virtualenv
+RUN pip install --no-cache-dir futures==2.2.0 enum34==1.0.4 protobuf==3.5.2.post1 six==1.10.0 twisted==17.5.0
 
 #================
 # C# dependencies
@@ -74,11 +74,11 @@ RUN echo "deb http://download.mono-project.com/repo/debian wheezy-apache24-compa
 RUN echo "deb http://download.mono-project.com/repo/debian wheezy-libjpeg62-compat main" | tee -a /etc/apt/sources.list.d/mono-xamarin.list
 
 # Install dependencies
-RUN apt-get update && apt-get -y dist-upgrade && apt-get install -y \
+RUN apt-get update && apt-get -y dist-upgrade && apt-get install --no-install-recommends -y \
     mono-devel \
     ca-certificates-mono \
     nuget \
-    && apt-get clean
+    && apt-get clean && rm -rf /var/lib/apt/lists/*;
 
 RUN nuget update -self
 
@@ -87,16 +87,16 @@ RUN nuget update -self
 # needed to build grpc_csharp_ext with cmake
 
 RUN echo "deb http://ftp.debian.org/debian jessie-backports main" | tee /etc/apt/sources.list.d/jessie-backports.list
-RUN apt-get update && apt-get install -t jessie-backports -y cmake && apt-get clean
+RUN apt-get update && apt-get install --no-install-recommends -t jessie-backports -y cmake && apt-get clean && rm -rf /var/lib/apt/lists/*;
 
 # Install dotnet SDK based on https://www.microsoft.com/net/core#debian
-RUN apt-get update && apt-get install -y curl libunwind8 gettext
+RUN apt-get update && apt-get install --no-install-recommends -y curl libunwind8 gettext && rm -rf /var/lib/apt/lists/*;
 # dotnet-dev-1.0.0-preview2-003131
-RUN curl -sSL -o dotnet100.tar.gz https://go.microsoft.com/fwlink/?LinkID=827530
-RUN mkdir -p /opt/dotnet && tar zxf dotnet100.tar.gz -C /opt/dotnet
+RUN curl -f -sSL -o dotnet100.tar.gz https://go.microsoft.com/fwlink/?LinkID=827530
+RUN mkdir -p /opt/dotnet && tar zxf dotnet100.tar.gz -C /opt/dotnet && rm dotnet100.tar.gz
 # dotnet-dev-1.0.1
-RUN curl -sSL -o dotnet101.tar.gz https://go.microsoft.com/fwlink/?LinkID=843453
-RUN mkdir -p /opt/dotnet && tar zxf dotnet101.tar.gz -C /opt/dotnet
+RUN curl -f -sSL -o dotnet101.tar.gz https://go.microsoft.com/fwlink/?LinkID=843453
+RUN mkdir -p /opt/dotnet && tar zxf dotnet101.tar.gz -C /opt/dotnet && rm dotnet101.tar.gz
 RUN ln -s /opt/dotnet/dotnet /usr/local/bin
 
 # Trigger the population of the local package cache