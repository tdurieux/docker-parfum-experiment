diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/lixiangyun/grpc-c/third_party/grpc/tools/dockerfile/test/node_jessie_x64/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/lixiangyun/grpc-c/third_party/grpc/tools/dockerfile/test/node_jessie_x64/Dockerfile/repaired.Dockerfile
index 7c36fb3..0a52031 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/lixiangyun/grpc-c/third_party/grpc/tools/dockerfile/test/node_jessie_x64/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/lixiangyun/grpc-c/third_party/grpc/tools/dockerfile/test/node_jessie_x64/Dockerfile/repaired.Dockerfile
@@ -15,7 +15,7 @@
 FROM debian:jessie
 
 # Install Git and basic packages.
-RUN apt-get update && apt-get install -y \
+RUN apt-get update && apt-get install --no-install-recommends -y \
   autoconf \
   autotools-dev \
   build-essential \
@@ -43,48 +43,48 @@ RUN apt-get update && apt-get install -y \
   telnet \
   unzip \
   wget \
-  zip && apt-get clean
+  zip && apt-get clean && rm -rf /var/lib/apt/lists/*;
 
 #================
 # Build profiling
-RUN apt-get update && apt-get install -y time && apt-get clean
+RUN apt-get update && apt-get install --no-install-recommends -y time && apt-get clean && rm -rf /var/lib/apt/lists/*;
 
 # Google Cloud platform API libraries
-RUN apt-get update && apt-get install -y python-pip && apt-get clean
-RUN pip install --upgrade google-api-python-client oauth2client
+RUN apt-get update && apt-get install --no-install-recommends -y python-pip && apt-get clean && rm -rf /var/lib/apt/lists/*;
+RUN pip install --no-cache-dir --upgrade google-api-python-client oauth2client
 
 
 # Install Electron apt dependencies
-RUN apt-get update && apt-get install -y \
+RUN apt-get update && apt-get install --no-install-recommends -y \
   libasound2 \
   libgconf-2-4 \
   libgtk2.0-0 \
   libnss3 \
   libxss1 \
   libxtst6 \
-  xvfb
+  xvfb && rm -rf /var/lib/apt/lists/*;
 
 #====================
 # Python dependencies
 
 # Install dependencies
 
-RUN apt-get update && apt-get install -y \
+RUN apt-get update && apt-get install --no-install-recommends -y \
     python-all-dev \
     python3-all-dev \
-    python-pip
+    python-pip && rm -rf /var/lib/apt/lists/*;
 
 # Install Python packages from PyPI
-RUN pip install --upgrade pip==10.0.1
-RUN pip install virtualenv
-RUN pip install futures==2.2.0 enum34==1.0.4 protobuf==3.5.2.post1 six==1.10.0 twisted==17.5.0
+RUN pip install --no-cache-dir --upgrade pip==10.0.1
+RUN pip install --no-cache-dir virtualenv
+RUN pip install --no-cache-dir futures==2.2.0 enum34==1.0.4 protobuf==3.5.2.post1 six==1.10.0 twisted==17.5.0
 
 #==================
 # Node dependencies
 
 # Install nvm
 RUN touch .profile
-RUN curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.25.4/install.sh | bash
+RUN curl -f -o- https://raw.githubusercontent.com/creationix/nvm/v0.25.4/install.sh | bash
 # Install all versions of node that we want to test
 RUN /bin/bash -l -c "nvm install 4 && npm config set cache /tmp/npm-cache"
 RUN /bin/bash -l -c "nvm install 5 && npm config set cache /tmp/npm-cache"
@@ -97,7 +97,7 @@ RUN /bin/bash -l -c "nvm alias default 10"
 RUN mkdir /var/local/jenkins
 
 # Install Mako to generate files in grpc/grpc-node
-RUN pip install Mako
+RUN pip install --no-cache-dir Mako
 
 # Define the default command.
 CMD ["bash"]