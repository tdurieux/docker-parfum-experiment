{
  "startTime": 1674220301049,
  "endTime": 1674220302276,
  "originalSmells": [
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 37
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nvidia/cudagl:11.2.2-devel-centos7\n\nLABEL maintainer=\"https://github.com/taichi-dev\"\n\nRUN yum install -y git wget && rm -rf /var/cache/yum\n\n# Install cmake 3.x\nRUN yum install -y epel-release && rm -rf /var/cache/yum\nRUN yum install -y cmake3 && rm -rf /var/cache/yum\nRUN ln -s /usr/bin/cmake3 /usr/bin/cmake\n\n# Install gcc 10 (https://git.centos.org/rpms/devtoolset-10-gcc)\nRUN yum install -y centos-release-scl && rm -rf /var/cache/yum\nRUN yum install -y devtoolset-10-gcc* && rm -rf /var/cache/yum\nENV PATH=\"/opt/rh/devtoolset-10/root/usr/bin:$PATH\"\n\n# Build LLVM/Clang 10 from source\nWORKDIR /\nRUN wget https://github.com/llvm/llvm-project/releases/download/llvmorg-10.0.0/llvm-10.0.0.src.tar.xz\nRUN tar -xf llvm-10.0.0.src.tar.xz &&     rm llvm-10.0.0.src.tar.xz\nRUN wget https://github.com/llvm/llvm-project/releases/download/llvmorg-10.0.0/clang-10.0.0.src.tar.xz\nRUN tar -xf clang-10.0.0.src.tar.xz &&     rm clang-10.0.0.src.tar.xz\nRUN cp -r clang-10.0.0.src llvm-10.0.0.src/tools/clang\n\nWORKDIR /llvm-10.0.0.src/build\nRUN cmake .. -DLLVM_ENABLE_RTTI:BOOL=ON -DBUILD_SHARED_LIBS:BOOL=OFF -DCMAKE_BUILD_TYPE=Release -DLLVM_TARGETS_TO_BUILD=\"X86;NVPTX\" -DLLVM_ENABLE_ASSERTIONS=ON -DLLVM_ENABLE_TERMINFO=OFF\nRUN make -j 8 &&     make install\nENV CC=\"/usr/local/bin/clang\"\nENV CXX=\"/usr/local/bin/clang++\"\n\n# Link gcc 10 to build Taichi\nWORKDIR /usr/lib/gcc/x86_64-redhat-linux/\nRUN ln -s /opt/rh/devtoolset-10/root/usr/lib/gcc/x86_64-redhat-linux/10 10\n# Check gcc-10 is used\nRUN clang++ -v\n\n# Create non-root user for running the container\nRUN useradd -ms /bin/bash dev\nWORKDIR /home/dev\nUSER dev\n\n# Install miniconda\nRUN wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh && \\\n    bash Miniconda3-latest-Linux-x86_64.sh -p /home/dev/miniconda -b\nENV PATH=\"/home/dev/miniconda/bin:$PATH\"\n\n# Set up multi-python environment\nRUN conda init bash\nRUN conda create -n py36 python=3.6 -y\nRUN conda create -n py37 python=3.7 -y\nRUN conda create -n py38 python=3.8 -y\nRUN conda create -n py39 python=3.9 -y\nRUN conda create -n py310 python=3.10 -y\n\nWORKDIR /home/dev\nENV LANG=\"C.UTF-8\"\n"
}