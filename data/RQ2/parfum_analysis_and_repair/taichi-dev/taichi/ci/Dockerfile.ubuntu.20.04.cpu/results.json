{
  "startTime": 1674216188220,
  "endTime": 1674216189266,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 37
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# This file is generated by python Dockerfile_generator.py -o ubuntu -t cpu\n# Taichi Dockerfile for development\nFROM ubuntu:20.04\n\nENV DEBIAN_FRONTEND=noninteractive\n\nLABEL maintainer=\"https://github.com/taichi-dev\"\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y software-properties-common \\\n                       python3-pip \\\n                       libtinfo-dev \\\n                       clang-10 \\\n                       wget \\\n                       git \\\n                       unzip \\\n                       libx11-xcb-dev && rm -rf /var/lib/apt/lists/*;\n\n# Install the latest version of CMAKE v3.20.5 from source\nWORKDIR /\nRUN wget https://github.com/Kitware/CMake/releases/download/v3.20.5/cmake-3.20.5-linux-x86_64.tar.gz\nRUN tar xf cmake-3.20.5-linux-x86_64.tar.gz && \\\n    rm cmake-3.20.5-linux-x86_64.tar.gz\nENV PATH=\"/cmake-3.20.5-linux-x86_64/bin:$PATH\"\n\n# Install LLVM 10\nWORKDIR /\n# Make sure this URL gets updated each time there is a new prebuilt bin release\nRUN wget https://github.com/taichi-dev/taichi_assets/releases/download/llvm10_linux_patch2/taichi-llvm-10.0.0-linux.zip\nRUN unzip taichi-llvm-10.0.0-linux.zip && \\\n    rm taichi-llvm-10.0.0-linux.zip\nENV PATH=\"/taichi-llvm-10.0.0-linux/bin:$PATH\"\n# Use Clang as the default compiler\nENV CC=\"clang-10\"\nENV CXX=\"clang++-10\"\n\n# Create non-root user for running the container\nRUN useradd -ms /bin/bash dev\nWORKDIR /home/dev\nUSER dev\n\n# Install miniconda\nRUN wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh && \\\n    bash Miniconda3-latest-Linux-x86_64.sh -p /home/dev/miniconda -b\nENV PATH=\"/home/dev/miniconda/bin:$PATH\"\n\n# Set up multi-python environment\nRUN conda init bash\nRUN conda create -n py36 python=3.6 -y\nRUN conda create -n py37 python=3.7 -y\nRUN conda create -n py38 python=3.8 -y\nRUN conda create -n py39 python=3.9 -y\n\n# Load scripts for build and test\nWORKDIR /home/dev/scripts\nCOPY ci/scripts/ubuntu_build_test_cpu.sh ubuntu_build_test_cpu.sh\n\nWORKDIR /home/dev\nENV LANG=\"C.UTF-8\"\n"
}