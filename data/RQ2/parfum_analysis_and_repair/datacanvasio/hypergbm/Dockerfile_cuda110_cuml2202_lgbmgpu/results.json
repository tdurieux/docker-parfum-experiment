{
  "startTime": 1674251711319,
  "endTime": 1674251714904,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 7,
        "columnEnd": 41
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 7,
        "columnEnd": 64
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 7,
        "columnEnd": 51
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 7,
        "columnEnd": 64
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 7,
        "columnEnd": 51
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "######## build ###########################################################################\nFROM nvidia/cuda:11.0.3-base-ubuntu18.04 as builder\n\nARG VER_CUDA=11.0\nARG VER_RAPIDS=22.02\nARG CONDA_INSTALLER=Miniconda3-latest-Linux-x86_64.sh\nARG CONDA_ROOT=/opt/miniconda3\nARG PYENV_ROOT=/opt/pyenv\n\n#ARG PIP_OPTS=\"--disable-pip-version-check --no-cache-dir\"\nARG PIP_OPTS=\"--disable-pip-version-check --no-cache-dir -i https://pypi.tuna.tsinghua.edu.cn/simple/\"\n\nRUN echo building... \\\n    && cd /tmp/ \\\n    && mv /etc/apt/sources.list.d /etc/apt/sources.list.d.bak \\\n    && apt-get update \\\n    && apt-get install --no-install-recommends -y wget libxml2 ocl-icd-libopencl1 clinfo \\\n    && mkdir -p /etc/OpenCL/vendors \\\n    && echo \"libnvidia-opencl.so.1\" > /etc/OpenCL/vendors/nvidia.icd \\\n    && apt-get clean \\\n    && wget -q https://repo.anaconda.com/miniconda/$CONDA_INSTALLER \\\n    && sh $CONDA_INSTALLER -b -p $CONDA_ROOT \\\n    && $CONDA_ROOT/bin/conda init \\\n    && $CONDA_ROOT/bin/conda install conda-pack \\\n    && $CONDA_ROOT/bin/conda create -p $PYENV_ROOT -c rapidsai -c nvidia -c conda-forge python=3.8 cudatoolkit=$VER_CUDA cudatoolkit-dev=$VER_CUDA cudf=$VER_RAPIDS cuml=$VER_RAPIDS pynvml xgboost catboost python-geohash boost  make cmake gcc gxx glib \\\n    && $CONDA_ROOT/bin/conda run -p $PYENV_ROOT pip install $PIP_OPTS lightgbm --install-option=--gpu \\\n    && $CONDA_ROOT/bin/conda run -p $PYENV_ROOT pip install $PIP_OPTS hypergbm[all] \\\n    && echo \"created env: $PYENV_ROOT\" && rm -rf /var/lib/apt/lists/*;\n\nRUN echo packing... \\\n    && $CONDA_ROOT/bin/conda pack -p $PYENV_ROOT -o $PYENV_ROOT.tar -d $PYENV_ROOT\\\n    && mkdir /opt/foo \\\n    && tar xf $PYENV_ROOT.tar -C /opt/foo \\\n    && mkdir -p /opt/foo/pkgs \\\n    && cp -r $PYENV_ROOT/pkgs/cuda-toolkit/targets/x86_64-linux /opt/foo/pkgs/cuda-toolkit \\\n    && cd opt/foo/pkgs/cuda-toolkit \\\n    && ln -s lib lib64 \\\n    && echo done && rm $PYENV_ROOT.tar\n\n#    && echo conda activate hypergbm >> /root/.bashrc \\\n#    && $CONDA_ROOT/bin/conda clean -a -y -q\n\n######## install ###########################################################################\nFROM nvidia/cuda:11.0.3-base-ubuntu18.04\n\nARG PYENV_ROOT=/opt/pyenv\nARG DC_ROOT=/opt/datacanvas\n\nCOPY --from=builder /opt/foo $PYENV_ROOT\n#COPY --from=builder $PYENV_ROOT/pkgs $PYENV_ROOT/pkgs\n\nRUN echo installing... \\\n    && mv /etc/apt/sources.list.d /etc/apt/sources.list.d.bak \\\n    && apt-get update \\\n    && apt-get install --no-install-recommends -y ocl-icd-libopencl1 clinfo \\\n    && mkdir -p /etc/OpenCL/vendors \\\n    && echo \"libnvidia-opencl.so.1\" > /etc/OpenCL/vendors/nvidia.icd \\\n    && apt-get clean \\\n    && echo source $PYENV_ROOT/bin/activate >> /root/.bashrc \\\n    && mkdir -p /opt/datacanvas \\\n    && cp -r $PYENV_ROOT/lib/python3.8/site-packages/hypergbm/examples $DC_ROOT/ \\\n    && echo \"#!/bin/bash\\n\"  > /entrypoint.sh \\\n    && echo \"source $PYENV_ROOT/bin/activate\" >> /entrypoint.sh \\\n    && echo \"cd $DC_ROOT\" >> /entrypoint.sh \\\n    && echo \"jupyter lab --notebook-dir=$DC_ROOT --ip=0.0.0.0 --port=\\$NotebookPort --no-browser --allow-root --ServerApp.token=\\$NotebookToken\" >> /entrypoint.sh \\\n    && chmod +x /entrypoint.sh \\\n    && rm -rf /var/cache \\\n    && rm -rf /root/.cache \\\n    && rm -rf /tmp/* && rm -rf /var/lib/apt/lists/*;\n\nEXPOSE 8888\n\nENV NotebookToken=\"\" \\\n    NotebookPort=8888\n\nCMD [\"/entrypoint.sh\"]\n\n# docker run --rm --name hypergbm -p 8830:8888 -e NotebookToken=your-token  datacanvas/hypergbm\n"
}