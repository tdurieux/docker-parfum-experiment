{
  "startTime": 1674253900299,
  "endTime": 1674253900830,
  "originalSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 72
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 72
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 72
      }
    }
  ],
  "repairedDockerfile": "FROM golang:1.17 AS builder\n\n# no need to include cgo bindings\nENV CGO_ENABLED=0 GOOS=linux GOARCH=amd64\n\n# add ca certificates and timezone data files\n# hadolint ignore=DL3008\nRUN apt-get install --yes --no-install-recommends ca-certificates tzdata && rm -rf /var/lib/apt/lists/*;\n\n# add unprivileged user\nRUN adduser --shell /bin/true --uid 1000 --disabled-login --no-create-home --gecos '' app \\\n  && sed -i -r \"/^(app|root)/!d\" /etc/group /etc/passwd \\\n  && sed -i -r 's#^(.*):[^:]*$#\\1:/sbin/nologin#' /etc/passwd\n\n#\n# ---\n#\n\n# start with empty image\nFROM scratch\n\n# add-in our timezone data file\nCOPY --from=builder /usr/share/zoneinfo /usr/share/zoneinfo\n\n# add-in our unprivileged user\nCOPY --from=builder /etc/passwd /etc/group /etc/shadow /etc/\n\n# add-in our ca certificates\nCOPY --from=builder /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/\n\n# add-in our application\nCOPY kubeaudit /\n\n# from now on, run as the unprivileged user\nUSER 1000\n\n# entrypoint\nENTRYPOINT [\"/kubeaudit\"]\nCMD [\"all\"]\n"
}