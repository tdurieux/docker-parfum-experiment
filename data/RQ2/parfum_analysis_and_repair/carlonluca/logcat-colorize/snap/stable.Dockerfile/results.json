{
  "startTime": 1674252595851,
  "endTime": 1674252596732,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 140
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 14,
        "columnEnd": 96
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 144
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 14,
        "columnEnd": 98
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 165
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 14,
        "columnEnd": 116
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 10
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 10
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "## The below code is from snapcraft/docker/stable.Dockerfile\n## The modifications done are part of the documentation for enabling core18 snaps.\n## https://snapcraft.io/docs/t/creating-docker-images-for-snapcraft/11739\n\nFROM ubuntu:bionic\n\n# Grab dependencies\nRUN apt-get update && \\\n    apt-get dist-upgrade --yes && \\\n    apt-get install --no-install-recommends --yes \\\n      curl \\\n      jq \\\n      squashfs-tools \\\n      locales \\\n      bzip2 \\\n      curl \\\n      git \\\n      python3 \\\n      locales \\\n      sudo && \\\n    apt-get clean && \\\nlocale-gen en_US.UTF-8 && rm -rf /var/lib/apt/lists/*;\n\nENV LANG=\"en_US.UTF-8\"\nENV LANGUAGE=\"en_US:en\"\nENV LC_ALL=\"en_US.UTF-8\"\nENV PATH=\"/snap/bin:$PATH\"\nENV SNAP=\"/snap/snapcraft/current\"\nENV SNAP_NAME=\"snapcraft\"\nENV SNAP_ARCH=\"amd64\"\n\n# Grab the core snap (for backwards compatibility) from the stable channel and\n# unpack it in the proper place.\nRUN curl -f -L $( curl -f -H 'X-Ubuntu-Series: 16' 'https://api.snapcraft.io/api/v1/snaps/details/core' | jq '.download_url' -r) --output core.snap && \\\n    mkdir -p /snap/core && \\\n    unsquashfs -d /snap/core/current core.snap && \\\n    rm core.snap\n\n# Grab the core18 snap (which snapcraft uses as a base) from the stable channel\n# and unpack it in the proper place.\nRUN curl -f -L $( curl -f -H 'X-Ubuntu-Series: 16' 'https://api.snapcraft.io/api/v1/snaps/details/core18' | jq '.download_url' -r) --output core18.snap\nRUN mkdir -p /snap/core18\nRUN unsquashfs -d /snap/core18/current core18.snap\n\n# Grab the snapcraft snap from the stable channel and unpack it in the proper\n# place.\nRUN curl -f -L $( curl -f -H 'X-Ubuntu-Series: 16' 'https://api.snapcraft.io/api/v1/snaps/details/snapcraft?channel=stable' | jq '.download_url' -r) --output snapcraft.snap && \\\n    mkdir -p /snap/snapcraft && \\\n    unsquashfs -d /snap/snapcraft/current snapcraft.snap && \\\n    rm snapcraft.snap\n\n# Create a snapcraft runner (TODO: move version detection to the core of\n# snapcraft).\nRUN mkdir -p /snap/bin\nRUN echo \"#!/bin/sh\" > /snap/bin/snapcraft\nRUN snap_version=\"$(awk '/^version:/{print $2}' /snap/snapcraft/current/meta/snap.yaml)\" && echo \"export SNAP_VERSION=\\\"$snap_version\\\"\" >> /snap/bin/snapcraft\nRUN echo 'exec \"$SNAP/usr/bin/python3\" \"$SNAP/bin/snapcraft\" \"$@\"' >> /snap/bin/snapcraft\nRUN chmod +x /snap/bin/snapcraft\n\nRUN mkdir /scripts/\nWORKDIR /scripts/\n# Copy everything in the docker/firefox-snap folder but the Dockerfile\n#\n# XXX The following pattern is neither a regex nor a glob one. It's\n# documented at https://golang.org/pkg/path/filepath/#Match. There's no\n# way of explicitly filtering out \"Dockerfile\". If one day, someone needs\n# to add a file starting with \"D\", then we must revisit the pattern below.\nCOPY [^D]* /scripts/\n\n# Set a default command useful for debugging\nCMD [\"/bin/bash\", \"--login\"]\n"
}