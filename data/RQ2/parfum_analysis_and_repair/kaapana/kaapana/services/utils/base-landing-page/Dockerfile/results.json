{
  "startTime": 1674250154453,
  "endTime": 1674250155319,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# build stage\nFROM node:lts-alpine3.10 as build-stage\n\nLABEL REGISTRY=\"local-only\"\nLABEL IMAGE=\"base-landing-page\"\nLABEL VERSION=\"0.1.1\"\nLABEL CI_IGNORE=\"False\"\n\nWORKDIR /landing/app\nCOPY files/kaapana_app/package*.json ./\nRUN npm install && npm cache clean --force;\n\nCOPY files/kaapana_app .\n\n# # # ###############################\n# # # ############# Dev #############\n# # # ###############################\n# # # # In the landing-page deployment, adjust the resource limits to at least 12Gi and change the docker image to the one you are pushing\n# RUN npm run build\n# WORKDIR /\n# COPY files/dev.sh .\n# # RUN chmod +x dev.sh\n# CMD [\"/bin/sh\", \"dev.sh\"]\n# # ###############################\n\n# ###############################\n# ######### Production ##########\n# ###############################\n# FROM nginx:1.19.3-alpine\n\n# RUN mkdir /app\n# COPY --from=build-stage /landing/app/dist /app\n# COPY files/kaapana_app/nginx.conf /etc/nginx/nginx.conf\n\n# # # ###############################\n"
}