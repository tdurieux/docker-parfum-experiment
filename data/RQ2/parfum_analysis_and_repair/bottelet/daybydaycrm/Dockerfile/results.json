{
  "startTime": 1674254594197,
  "endTime": 1674254595141,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 7,
        "columnEnd": 25
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 22,
        "columnEnd": 42
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 19,
        "columnStart": 2,
        "columnEnd": 14
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 22,
        "columnEnd": 42
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 19,
        "columnStart": 2,
        "columnEnd": 14
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 22,
        "columnEnd": 42
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 53
      }
    }
  ],
  "repairedDockerfile": "FROM php:7.3-fpm\n\nMAINTAINER Casper Bottelet <cbottelet@gmail.com>\n\n# Update packages and install composer and PHP dependencies.\nRUN apt-get update && \\\n  DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y \\\n    mariadb-client \\\n    libmemcached-dev \\\n    libpq-dev \\\n    libzip-dev \\\n    libfreetype6-dev \\\n    libjpeg62-turbo-dev \\\n    libmcrypt-dev \\\n    libbz2-dev \\\n    cron \\\n    nginx \\\n    nano \\\n    python \\\n    python-pip \\\n    && pecl channel-update pecl.php.net \\\n    && pecl install apcu \\\n    && pip install --no-cache-dir awscli && rm -rf /var/lib/apt/lists/*;\n\n# PHP Extensions\nRUN docker-php-ext-install bcmath\nRUN docker-php-ext-install zip\nRUN docker-php-ext-install bz2\nRUN docker-php-ext-install mbstring\nRUN docker-php-ext-install pdo\nRUN docker-php-ext-install pdo_mysql\nRUN docker-php-ext-install pcntl\n\n\nRUN docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \\\n&& docker-php-ext-install gd\n\n# Install the PHP mcrypt extention (from PECL, mcrypt has been removed from PHP 7.2)\nRUN pecl install mcrypt-1.0.2\nRUN docker-php-ext-enable mcrypt\n\n# Install the php memcached extension\nRUN pecl install memcached && docker-php-ext-enable memcached\n\n# Composer\nRUN curl -f -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer\n\n# Configure nginx\nCOPY .docker/nginx/nginx.conf /etc/nginx/nginx.conf\n\n#Frotend NPM/YARN\nRUN curl -f -sL https://deb.nodesource.com/setup_11.x | bash -\nRUN apt-get install --no-install-recommends -y nodejs && rm -rf /var/lib/apt/lists/*;\nRUN curl -f -sL https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -\nRUN echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list\nRUN apt-get update && apt-get install -y --no-install-recommends yarn && rm -rf /var/lib/apt/lists/*;\n\nRUN useradd -u 1000 -ms /bin/bash daybyday\n\n# Make sure files/folders needed by the processes are accessable when they run under the nobody user\nRUN chown -R daybyday.www-data /run && \\\n  chown -R daybyday.www-data /var/lib/nginx && \\\n  chown -R daybyday.www-data /var/log/nginx\n\nADD . /var/www/html\nWORKDIR /var/www/html\n\nRUN npm install --pure-lockfile --ignore-engines && npm cache clean --force;\nRUN npm run prod\n# Set permissions\nRUN chmod 0777 ./bootstrap/cache -R\nRUN chmod 0777 ./storage/* -R\n\nEXPOSE 80\nEXPOSE 433\n\n# RUN cd /var/www/html && composer install -q --no-dev -o\nCMD composer install --no-ansi --no-dev --no-interaction --optimize-autoloader && php-fpm -D && nginx -g \"daemon off;\"\n\n"
}