{
  "startTime": 1674256207220,
  "endTime": 1674256208083,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 4,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 53
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04\n\nRUN dpkg --add-architecture i386\nRUN apt-get -y update && apt-get -y --no-install-recommends install --force-yes \\\n        curl make git expect libncurses5:i386 libstdc++6:i386 zlib1g:i386 \\\n        python-dev python-pip stunnel \\\n        g++-multilib openjdk-9-jre psmisc unzip cmake && rm -rf /var/lib/apt/lists/*;\n\n# Install buildbot and prep it to run\nRUN pip install --no-cache-dir buildbot-slave\nRUN groupadd -r rustbuild && useradd -r -g rustbuild rustbuild\nRUN mkdir /buildslave && chown rustbuild:rustbuild /buildslave\n\n# Setup PATH to allow running android tools.\nENV PATH=$PATH:/android/ndk-arm/bin:/android/ndk-aarch64/bin:/android/ndk-x86:/android/sdk/tools:/android/sdk/platform-tools\n\n# Not sure how to install 64-bit binaries in the sdk?\nENV ANDROID_EMULATOR_FORCE_32BIT=true\n\nRUN mkdir /android && chown rustbuild:rustbuild /android\nRUN mkdir /home/rustbuild && chown rustbuild:rustbuild /home/rustbuild\n\nWORKDIR /android\nUSER rustbuild\n\nCOPY android/install-ndk.sh android/install-sdk.sh android/accept-licenses.sh \\\n    /android/\n\nRUN sh install-ndk.sh\nRUN sh install-sdk.sh\nRUN rm *.sh\n\n# When running this container, startup buildbot\nWORKDIR /buildslave\nCOPY start-docker-slave.sh start-docker-slave.sh\nENTRYPOINT [\"sh\", \"start-docker-slave.sh\"]\n"
}