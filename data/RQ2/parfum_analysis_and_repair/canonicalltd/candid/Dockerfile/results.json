{
  "startTime": 1674247986060,
  "endTime": 1674247987868,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 26,
        "columnEnd": 93
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 26,
        "columnEnd": 64
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 26,
        "columnEnd": 93
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 26,
        "columnEnd": 64
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG DOCKER_REGISTRY\nFROM ${DOCKER_REGISTRY}golang:1.17 AS golang\nRUN go version\n\nFROM ${DOCKER_REGISTRY}ubuntu:20.04 AS build-env\n\nARG http_proxy\nARG https_proxy\nARG no_proxy\nARG NO_PROXY\n\n# Install general deps\nRUN apt-get -qq update && apt-get -qq --no-install-recommends install -y ca-certificates curl git gcc build-essential && rm -rf /var/lib/apt/lists/*;\n\n# Set-up go\nCOPY --from=golang /usr/local/go/ /usr/local/go/\nENV PATH /usr/local/go/bin:$PATH\nENV GO111MODULE=on\n\nRUN mkdir /src\nWORKDIR /src\n\nARG GH_SSH_KEY\nARG GH_USERNAME\nARG GH_PASSWORD\nARG GOPROXY\nARG GOSUMDB\nARG GOPRIVATE=github.com/CanonicalLtd\nCOPY ./scripts/docker-github-auth.sh .\nRUN ./docker-github-auth.sh\n\nARG GOMODMODE=readonly\n# Cache modules needed in a docker layer to speed up subsequent builds\nCOPY go.mod .\nCOPY go.sum .\nRUN [ \"$GOMODMODE\" = \"vendor\" ] || go mod download\n\nCOPY . .\n# Set version\nARG GIT_COMMIT\nARG VERSION\nRUN ./scripts/set-version.sh\n\nARG TAGS\nRUN GOBIN=/src go install gopkg.in/macaroon-bakery.v2/cmd/bakery-keygen@latest\nRUN go build --tags \"$TAGS\" -mod $GOMODMODE -o candidsrv ./cmd/candidsrv\nRUN go build --tags \"$TAGS\" -mod $GOMODMODE -o candid ./cmd/candid\n\n\n# Define a smaller single process image for deployment\nFROM ${DOCKER_REGISTRY}ubuntu:20.04 AS deploy-env\nRUN apt-get -qq update && apt-get -qq --no-install-recommends install -y ca-certificates && rm -rf /var/lib/apt/lists/*;\nWORKDIR /root/\nRUN mkdir www\nRUN mkdir logs\nCOPY --from=build-env /src/candidsrv .\nCOPY --from=build-env /src/candid .\nCOPY --from=build-env /src/bakery-keygen .\nCOPY --from=build-env /src/static ./www/static/\nCOPY --from=build-env /src/templates ./www/templates\nRUN touch config.yaml\nCMD [\"./candidsrv config.yaml\"]\n\n"
}