{
  "startTime": 1674253295591,
  "endTime": 1674253296612,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 157
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 157
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 157
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04 AS base\n\nRUN apt-get update && apt-get install --no-install-recommends -y python3 python3-pil python3-setuptools python3-dev build-essential git wget tar libusb-1.0-0.dev libudev-dev gcc-multilib g++-multilib && rm -rf /var/lib/apt/lists/*;\n\nRUN mkdir -p /bolos-devenv\nWORKDIR /bolos-devenv\nENV BOLOS_ENV=/bolos-devenv\n\nRUN echo \"5a261cac18c62d8b7e8c70beba2004bd  gcc-arm-none-eabi-5_3-2016q1-20160330-linux.tar.bz2\" > gcc.md5\nRUN wget https://launchpad.net/gcc-arm-embedded/5.0/5-2016-q1-update/+download/gcc-arm-none-eabi-5_3-2016q1-20160330-linux.tar.bz2\nRUN md5sum -c gcc.md5\nRUN tar xjvf gcc-arm-none-eabi-5_3-2016q1-20160330-linux.tar.bz2 && rm gcc-arm-none-eabi-5_3-2016q1-20160330-linux.tar.bz2\n\nRUN echo \"87b88d620284d1f0573923e6f7cc89edccf11d19ebaec1cfb83b4f09ac5db09c  clang+llvm-8.0.0-x86_64-linux-gnu-ubuntu-16.04.tar.xz\" > clang.sha256\nRUN wget https://releases.llvm.org/8.0.0/clang+llvm-8.0.0-x86_64-linux-gnu-ubuntu-16.04.tar.xz\nRUN shasum -a 256 -c clang.sha256\nRUN tar xvf clang+llvm-8.0.0-x86_64-linux-gnu-ubuntu-16.04.tar.xz && rm clang+llvm-8.0.0-x86_64-linux-gnu-ubuntu-16.04.tar.xz\nRUN ln -s clang+llvm-8.0.0-x86_64-linux-gnu-ubuntu-16.04 clang-arm-fropi\n\n\nFROM base AS builder\n\nRUN echo '#!/bin/bash\\npython3 \"$@\"' > /usr/bin/python && \\\n    chmod +x /usr/bin/python\n\nRUN git clone https://github.com/LedgerHQ/nanos-secure-sdk /nanos-secure-sdk\nRUN git clone https://github.com/LedgerHQ/nanox-secure-sdk /nanox-secure-sdk\n\nRUN mkdir -p /nanos\nRUN mkdir -p /nanox\n\nENV BOLOS_SDK=/nanos-secure-sdk\nWORKDIR /nanos-secure-sdk\nRUN git checkout nanos-1612\nWORKDIR /nanos\nCOPY glyphs glyphs\nCOPY src src\nCOPY vendor vendor\nCOPY Makefile Makefile\nCOPY nanos_icon_hns.gif nanos_icon_hns.gif\nCOPY nanox_icon_hns.gif nanox_icon_hns.gif\nRUN make\n\nENV BOLOS_SDK=/nanox-secure-sdk\nWORKDIR /nanox\nCOPY glyphs glyphs\nCOPY src src\nCOPY vendor vendor\nCOPY Makefile Makefile\nCOPY nanos_icon_hns.gif nanos_icon_hns.gif\nCOPY nanox_icon_hns.gif nanox_icon_hns.gif\nRUN make\n"
}