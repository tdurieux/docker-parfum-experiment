{
  "startTime": 1674255672884,
  "endTime": 1674255673909,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 171
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 171
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 171
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:18.04 AS base\n\nRUN apt-get update && apt-get install --no-install-recommends -y python3.6 python3-pip python3-pil python3-setuptools python3-dev build-essential git wget tar libusb-1.0-0.dev libudev-dev gcc-multilib g++-multilib && rm -rf /var/lib/apt/lists/*;\n\nRUN mkdir -p /bolos-devenv\nWORKDIR /bolos-devenv\nENV BOLOS_ENV=/bolos-devenv\n\nRUN echo \"5a261cac18c62d8b7e8c70beba2004bd  gcc-arm-none-eabi-5_3-2016q1-20160330-linux.tar.bz2\" > gcc.md5\nRUN wget https://launchpad.net/gcc-arm-embedded/5.0/5-2016-q1-update/+download/gcc-arm-none-eabi-5_3-2016q1-20160330-linux.tar.bz2\nRUN md5sum -c gcc.md5\nRUN tar xjvf gcc-arm-none-eabi-5_3-2016q1-20160330-linux.tar.bz2 && rm gcc-arm-none-eabi-5_3-2016q1-20160330-linux.tar.bz2\n\nRUN echo \"78e6401f85a656e1915f189de90a1af8  clang+llvm-4.0.0-x86_64-linux-gnu-ubuntu-16.04.tar.xz\" > clang.md5\nRUN wget https://releases.llvm.org/4.0.0/clang+llvm-4.0.0-x86_64-linux-gnu-ubuntu-16.04.tar.xz\nRUN md5sum -c clang.md5\nRUN tar xvf clang+llvm-4.0.0-x86_64-linux-gnu-ubuntu-16.04.tar.xz && rm clang+llvm-4.0.0-x86_64-linux-gnu-ubuntu-16.04.tar.xz\nRUN ln -s clang+llvm-4.0.0-x86_64-linux-gnu-ubuntu-16.04 clang-arm-fropi\n\nRUN pip3 install --no-cache-dir virtualenv\nRUN virtualenv ledger\nRUN /bin/sh ledger/bin/activate\nRUN pip3 install --no-cache-dir ledgerblue\nRUN pip3 install --no-cache-dir Pillow\n\n\nFROM base AS builder\n\n# The below directives allow us to copy source files into the builder\n# image without having to manually use --no-cache. By default, Docker\n# will use cache even if the files being copies have changed.\nARG CACHE_BUST=123\nARG GIT_NAME=nanos-secure-sdk\nARG GIT_REF=nanos-1612\nENV CACHE_BUST $CACHE_BUST\nENV GIT_NAME $GIT_NAME\nENV GIT_REF $GIT_REF\nENV BOLOS_SDK=/nano-secure-sdk\n\nRUN mkdir -p /ledger-app-hns\nRUN git clone https://github.com/LedgerHQ/$GIT_NAME /nano-secure-sdk\n\nWORKDIR /nano-secure-sdk\nRUN git checkout $GIT_REF\nRUN sed -i s/python/python3/g icon.py\nRUN echo '#!/bin/bash\\npython3 \"$@\"' > /usr/bin/python && \\\n    chmod +x /usr/bin/python\n\nWORKDIR /ledger-app-hns\nCOPY glyphs glyphs\nCOPY src src\nCOPY vendor vendor\nCOPY Makefile Makefile\nCOPY nanos_icon_hns.gif nanos_icon_hns.gif\nCOPY nanox_icon_hns.gif nanox_icon_hns.gif\nRUN make\n"
}