diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/paratii-video/paratii-portal/.circleci/images/primary/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/paratii-video/paratii-portal/.circleci/images/primary/Dockerfile/repaired.Dockerfile
index d6fbc06..8639a1d 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/paratii-video/paratii-portal/.circleci/images/primary/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/paratii-video/paratii-portal/.circleci/images/primary/Dockerfile/repaired.Dockerfile
@@ -13,14 +13,14 @@ ENV LANG=C.UTF-8
 
 RUN apt-get update \
   && mkdir -p /usr/share/man/man1 \
-  && apt-get install -y \
+  && apt-get install --no-install-recommends -y \
     git mercurial xvfb \
     locales sudo openssh-client ca-certificates tar gzip parallel \
-    net-tools netcat unzip zip bzip2 gnupg curl wget
+    net-tools netcat unzip zip bzip2 gnupg curl wget && rm -rf /var/lib/apt/lists/*;
 
 RUN apt-get update
-RUN apt install build-essential chrpath libssl-dev libxft-dev -y && apt install libfreetype6 libfreetype6-dev apt-transport-https git -y
-RUN apt install libfontconfig1 libfontconfig1-dev -y
+RUN apt install --no-install-recommends build-essential chrpath libssl-dev libxft-dev -y && apt install --no-install-recommends libfreetype6 libfreetype6-dev apt-transport-https git -y && rm -rf /var/lib/apt/lists/*;
+RUN apt install --no-install-recommends libfontconfig1 libfontconfig1-dev -y && rm -rf /var/lib/apt/lists/*;
 
 # openssl 1.1.0
 
@@ -32,21 +32,21 @@ RUN wget https://www.openssl.org/source/openssl-1.1.0.tar.gz \
  && make install \
  && ln -s /usr/local/lib/libcrypto.so.1.1 /usr/lib/ \
  && rm /usr/bin/openssl \
- && ln -s /usr/local/ssl/bin/openssl /usr/bin/openssl
+ && ln -s /usr/local/ssl/bin/openssl /usr/bin/openssl && rm openssl-1.1.0.tar.gz
 
 # parity 1.9.0
 RUN wget -q https://parity-downloads-mirror.parity.io/v1.9.0/x86_64-unknown-linux-gnu/parity_1.9.0_amd64.deb && dpkg -i parity_1.9.0_amd64.deb
 
 # nodejs
 RUN apt autoremove -y nodejs
-RUN curl -sL https://deb.nodesource.com/setup_9.x | bash -
-RUN apt install nodejs -y
+RUN curl -f -sL https://deb.nodesource.com/setup_9.x | bash -
+RUN apt install --no-install-recommends nodejs -y && rm -rf /var/lib/apt/lists/*;
 
 # yarn
-RUN curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -
+RUN curl -f -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -
 RUN echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list
 RUN apt update
-RUN apt install yarn
+RUN apt install -y --no-install-recommends yarn && rm -rf /var/lib/apt/lists/*;
 
 # install jq
 RUN JQ_URL="https://circle-downloads.s3.amazonaws.com/circleci-images/cache/linux-amd64/jq-latest" \
@@ -59,25 +59,25 @@ RUN JQ_URL="https://circle-downloads.s3.amazonaws.com/circleci-images/cache/linu
 RUN if grep -q Debian /etc/os-release && grep -q jessie /etc/os-release; then \
     echo "deb http://http.us.debian.org/debian/ jessie-backports main" | tee -a /etc/apt/sources.list \
     && echo "deb-src http://http.us.debian.org/debian/ jessie-backports main" | tee -a /etc/apt/sources.list \
-    && apt update; apt install -y -t jessie-backports openjdk-8-jre openjdk-8-jre-headless openjdk-8-jdk openjdk-8-jdk-headless \
-  ; elif grep -q Ubuntu /etc/os-release && grep -q Trusty /etc/os-release; then \
+    && apt update; apt install --no-install-recommends -y -t jessie-backports openjdk-8-jre openjdk-8-jre-headless openjdk-8-jdk openjdk-8-jdk-headless \
+  ; rm -rf /var/lib/apt/lists/*; elif grep -q Ubuntu /etc/os-release && grep -q Trusty /etc/os-release; then \
     echo "deb http://ppa.launchpad.net/openjdk-r/ppa/ubuntu trusty main" | tee -a /etc/apt/sources.list \
     && echo "deb-src http://ppa.launchpad.net/openjdk-r/ppa/ubuntu trusty main" | tee -a /etc/apt/sources.list \
     && apt-key adv --keyserver keyserver.ubuntu.com --recv-key DA1A4A13543B466853BAF164EB9B1D8886F44E2A \
-    && apt update; apt install -y openjdk-8-jre openjdk-8-jre-headless openjdk-8-jdk openjdk-8-jdk-headless \
-  ; else \
-    apt update; apt install -y openjdk-8-jre openjdk-8-jre-headless openjdk-8-jdk openjdk-8-jdk-headless \
-  ; fi
+    && apt update; apt install --no-install-recommends -y openjdk-8-jre openjdk-8-jre-headless openjdk-8-jdk openjdk-8-jdk-headless \
+  ; rm -rf /var/lib/apt/lists/*; else \
+    apt update; apt install --no-install-recommends -y openjdk-8-jre openjdk-8-jre-headless openjdk-8-jdk openjdk-8-jdk-headless \
+  ; rm -rf /var/lib/apt/lists/*; fi
 
 ## install phantomjs
 #
 RUN PHANTOMJS_URL="https://circle-downloads.s3.amazonaws.com/circleci-images/cache/linux-amd64/phantomjs-latest.tar.bz2" \
-  && apt install libfontconfig \
+  && apt install -y --no-install-recommends libfontconfig \
   && curl --silent --show-error --location --fail --retry 3 --output /tmp/phantomjs.tar.bz2 ${PHANTOMJS_URL} \
   && tar -x -C /tmp -f /tmp/phantomjs.tar.bz2 \
   && mv /tmp/phantomjs-*-linux-x86_64/bin/phantomjs /usr/local/bin \
   && rm -rf /tmp/phantomjs.tar.bz2 /tmp/phantomjs-* \
-  && phantomjs --version
+  && phantomjs --version && rm -rf /var/lib/apt/lists/*;
 
 # install firefox
 
@@ -87,14 +87,14 @@ RUN PHANTOMJS_URL="https://circle-downloads.s3.amazonaws.com/circleci-images/cac
 RUN FIREFOX_URL="https://s3.amazonaws.com/circle-downloads/firefox-mozilla-build_47.0.1-0ubuntu1_amd64.deb" \
   && curl --silent --show-error --location --fail --retry 3 --output /tmp/firefox.deb $FIREFOX_URL \
   && echo 'ef016febe5ec4eaf7d455a34579834bcde7703cb0818c80044f4d148df8473bb  /tmp/firefox.deb' | sha256sum -c \
-  && dpkg -i /tmp/firefox.deb || apt -f install  \
-  && apt install -y libgtk3.0-cil-dev libasound2 libasound2 libdbus-glib-1-2 libdbus-1-3 \
+  && dpkg -i /tmp/firefox.deb || apt -f install \
+  && apt install --no-install-recommends -y libgtk3.0-cil-dev libasound2 libasound2 libdbus-glib-1-2 libdbus-1-3 \
   && rm -rf /tmp/firefox.deb \
-  && firefox --version
+  && firefox --version && rm -rf /var/lib/apt/lists/*;
 
 # install geckodriver
 
-RUN export GECKODRIVER_LATEST_RELEASE_URL=$(curl https://api.github.com/repos/mozilla/geckodriver/releases/latest | jq -r ".assets[] | select(.name | test(\"linux64\")) | .browser_download_url") \
+RUN export GECKODRIVER_LATEST_RELEASE_URL=$( curl -f https://api.github.com/repos/mozilla/geckodriver/releases/latest | jq -r ".assets[] | select(.name | test(\"linux64\")) | .browser_download_url") \
       && curl --silent --show-error --location --fail --retry 3 --output /tmp/geckodriver_linux64.tar.gz "$GECKODRIVER_LATEST_RELEASE_URL" \
       && cd /tmp \
       && tar xf geckodriver_linux64.tar.gz \
@@ -112,8 +112,8 @@ RUN curl --silent --show-error --location --fail --retry 3 --output /tmp/google-
            "/opt/google/chrome/google-chrome" \
       && google-chrome --version
 
-RUN export CHROMEDRIVER_RELEASE=$(curl --location --fail --retry 3 http://chromedriver.storage.googleapis.com/LATEST_RELEASE) \
-      && curl --silent --show-error --location --fail --retry 3 --output /tmp/chromedriver_linux64.zip "http://chromedriver.storage.googleapis.com/$CHROMEDRIVER_RELEASE/chromedriver_linux64.zip" \
+RUN export CHROMEDRIVER_RELEASE=$( curl --location --fail --retry 3 https://chromedriver.storage.googleapis.com/LATEST_RELEASE) \
+      && curl --silent --show-error --location --fail --retry 3 --output /tmp/chromedriver_linux64.zip "https://chromedriver.storage.googleapis.com/$CHROMEDRIVER_RELEASE/chromedriver_linux64.zip" \
       && cd /tmp \
       && unzip chromedriver_linux64.zip \
       && rm -rf chromedriver_linux64.zip \
@@ -134,4 +134,4 @@ RUN ssh-keyscan github.com >> /root/.ssh/known_hosts
 
 WORKDIR /paratii-db
 RUN git clone git@github.com:Paratii-Video/paratii-db.git
-RUN cd paratii-db && npm install
+RUN cd paratii-db && npm install && npm cache clean --force;