{
  "startTime": 1674248308785,
  "endTime": 1674248310231,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 29,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 37
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM adoptopenjdk/openjdk13:alpine-jre\n\nLABEL maintainer=\"Andre Rocha <andre@konkerlabs.com>\"\nLABEL service_name=\"konker-http-data-router\"\n\n# add our user and group first to make sure their IDs get assigned consistently, regardless of whatever dependencies get added\nRUN addgroup -S nginx && adduser -D -S -H -G nginx nginx && rm -rf /etc/group- /etc/passwd- /etc/shadow-\n\nENV KONKER_BASE /var/lib/konker\nRUN mkdir -p \"$KONKER_BASE\"\n\nWORKDIR $KONKER_BASE\n\nCOPY docker-resources/docker-entrypoint.sh /\nRUN chmod 777 /docker-entrypoint.sh\n\nCOPY docker-resources/dist/registry-router.jar /var/lib/konker/\nCOPY docker-resources/dist/application.conf.example /var/lib/konker/application.conf\nCOPY docker-resources/dist/logback.xml /var/lib/konker/\n\n#nginx - DO NOT REMOVE IT\nENV NGINX_VERSION nginx-1.15.8\n\nRUN apk --update add openssl-dev pcre-dev zlib-dev wget build-base && \\\n    mkdir -p /tmp/src && \\\n    cd /tmp/src && \\\n    wget https://nginx.org/download/${NGINX_VERSION}.tar.gz && \\\n    tar -zxvf ${NGINX_VERSION}.tar.gz && \\\n    cd /tmp/src/${NGINX_VERSION} && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n        --with-http_ssl_module \\\n        --with-http_gzip_static_module \\\n        --prefix=/etc/nginx \\\n        --http-log-path=/var/log/nginx/access.log \\\n        --error-log-path=/var/log/nginx/error.log \\\n        --sbin-path=/usr/local/sbin/nginx && \\\n    make && \\\n    make install && \\\n    apk del build-base && \\\n    rm -rf /tmp/src && \\\n    rm -rf /var/cache/apk/* && rm ${NGINX_VERSION}.tar.gz\n\n# forward request and error logs to docker log collector\nRUN ln -sf /dev/stdout /var/log/nginx/access.log\nRUN ln -sf /dev/stderr /var/log/nginx/error.log\n\n#VOLUME [\"/var/log/nginx\"]\n#WORKDIR /etc/nginx\nRUN chmod 755 /usr/local/sbin/nginx & \\\n    mkdir -p /var/log/konker-platform\n\nCOPY docker-resources/nginx/nginx.conf /etc/nginx/nginx.conf\nCOPY docker-resources/nginx/nginx.conf /etc/nginx/conf/nginx.conf\nCOPY docker-resources/nginx/mime.types /etc/nginx/mime.types\nCOPY docker-resources/nginx/conf.d /etc/nginx/conf.d\nCOPY docker-resources/nginx/favicon.ico /etc/nginx/html/\nCOPY docker-resources/nginx/filebeat /filebeat\nCOPY docker-resources/nginx/filebeat.yml /filebeat/filebeat.yml\n\nRUN chmod 777 /filebeat/filebeat && \\\n    chmod go-w /filebeat/filebeat.yml\n\n#start\nEXPOSE 80\nENTRYPOINT [\"/docker-entrypoint.sh\"]\n"
}