diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/konkerlabs/konker-platform/konker.registry.web/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/konkerlabs/konker-platform/konker.registry.web/Dockerfile/repaired.Dockerfile
index e599dd5..9babf8c 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/konkerlabs/konker-platform/konker.registry.web/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/konkerlabs/konker-platform/konker.registry.web/Dockerfile/repaired.Dockerfile
@@ -37,33 +37,28 @@ ENV JETTY_GPG_KEYS \
 RUN set -xe \
 	# Install required packages for build time. Will be removed when build finishes.
 	&& apk add --no-cache --virtual .build-deps gnupg coreutils curl \
-
-	&& curl -SL "$JETTY_TGZ_URL" -o jetty.tar.gz \
+ -f \
+	&& curl -f -SL "$JETTY_TGZ_URL" -o et y.tar.gz \
 	&& curl -SL "$JETTY_TGZ_URL.asc" -o jetty.tar.gz.asc \
 
-	# avoid: keyserver receive failed: Address not available
+	# avoid: keyserver receive failed: Add
 	# && export GNUPGHOME="$(mktemp -d)" \
 	# && for key in $JETTY_GPG_KEYS; do \
-	#	  gpg --keyserver pool.sks-keyservers.net --recv-keys "$key"; done \
-	# && gpg --batch --verify jetty.tar.gz.asc jetty.tar.gz \
-	# && rm -r "$GNUPGHOME" \
+	#	  gpg --keyserver pool.s
+	# & gpg --batch --verify \
+	# & rm -r "$GNUPGHOME" \
 
 	&& tar -xvzf jetty.tar.gz \
-	&& mv jetty-distribution-$JETTY_VERSION/* ./ \
+	&& mv jetty-distrib \
 	&& sed -i '/jetty-logging/d' etc/jetty.conf \
 	&& rm -fr demo-base javadoc \
-	&& rm jetty.tar.gz* \
+	&& rm jetty.tar.g \
 	&& rm -fr jetty-distribution-$JETTY_VERSION/ \
 
-	# Get the list of modules in the default start.ini and build new base with those modules, then add setuid
+	# Get the list of modules in the default start.in
 	&& cd $JETTY_BASE \
-	&& modules="$(grep -- ^--module= "$JETTY_HOME/start.ini" | cut -d= -f2 | paste -d, -s)" \
-	&& java -jar "$JETTY_HOME/start.jar" --add-to-startd="$modules,setuid" \
-
-	# Remove installed packages and various cleanup
-	&& apk del .build-deps \
-	&& rm -fr .build-deps \
-	&& rm -rf /tmp/hsperfdata_root
+	&& modules="$(grep -- \
+	&& java -jar "$JETTY_HOME/star
 
 WORKDIR $JETTY_BASE
 
@@ -88,10 +83,10 @@ ENV NGINX_VERSION nginx-1.15.8
 RUN apk --update add openssl-dev pcre-dev zlib-dev wget build-base && \
     mkdir -p /tmp/src && \
     cd /tmp/src && \
-    wget http://nginx.org/download/${NGINX_VERSION}.tar.gz && \
+    wget https://nginx.org/download/${NGINX_VERSION}.tar.gz && \
     tar -zxvf ${NGINX_VERSION}.tar.gz && \
     cd /tmp/src/${NGINX_VERSION} && \
-    ./configure \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
         --with-http_ssl_module \
         --with-http_gzip_static_module \
         --prefix=/etc/nginx \
@@ -102,7 +97,7 @@ RUN apk --update add openssl-dev pcre-dev zlib-dev wget build-base && \
     make install && \
     apk del build-base && \
     rm -rf /tmp/src && \
-    rm -rf /var/cache/apk/*
+    rm -rf /var/cache/apk/* && rm ${NGINX_VERSION}.tar.gz
 
 # forward request and error logs to docker log collector
 RUN ln -sf /dev/stdout /var/log/nginx/access.log