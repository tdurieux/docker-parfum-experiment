diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/konkerlabs/konker-platform/konker.scripts/docker-demo/Dockerfile.alpine b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/konkerlabs/konker-platform/konker.scripts/docker-demo/Dockerfile.alpine/repaired.Dockerfile
index f40be0a..f425bb3 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/konkerlabs/konker-platform/konker.scripts/docker-demo/Dockerfile.alpine
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/konkerlabs/konker-platform/konker.scripts/docker-demo/Dockerfile.alpine/repaired.Dockerfile
@@ -16,8 +16,8 @@ RUN echo http://dl-4.alpinelinux.org/alpine/edge/community >> /etc/apk/repositor
     apk add --no-cache openjdk8-jre
 
 # install python
-RUN apk add --update python py2-pip && \
-    pip install pymongo
+RUN apk add --no-cache --update python py2-pip && \
+    pip install --no-cache-dir pymongo
 
 
 #Jetty
@@ -43,25 +43,22 @@ ENV JETTY_GPG_KEYS \
 RUN set -xe \
 	# Install required packages for build time. Will be removed when build finishes.
 	&& apk add --no-cache --virtual .build-deps gnupg coreutils curl \
-
-	&& curl -SL "$JETTY_TGZ_URL" -o jetty.tar.gz \
-	&& curl -SL "$JETTY_TGZ_URL.asc" -o jetty.tar.gz.asc \
+ -f \
+	&& curl -f -SL "$JETTY_TGZ_URL" -o et y.tar.gz \
+	&& curl -SL "$JETTY_TGZ_U \
 	&& tar -xvzf jetty.tar.gz \
-	&& mv jetty-distribution-$JETTY_VERSION/* ./ \
-	&& sed -i '/jetty-logging/d' etc/jetty.conf \
-	&& rm -fr demo-base javadoc \
+	&& mv jetty-distribution-$JETTY_VERSION/* . \
+	&& sed -i '/jetty-logging/d \
+	&& rm -fr demo-base \
 	&& rm jetty.tar.gz* \
 	&& rm -fr jetty-distribution-$JETTY_VERSION/ \
 
-	# Get the list of modules in the default start.ini and build new base with those modules, then add setuid
+	# et the list of modules in the default start.ini and build new base with those module \
 	&& cd $JETTY_BASE \
-	&& modules="$(grep -- ^--module= "$JETTY_HOME/start.ini" | cut -d= -f2 | paste -d, -s)" \
-	&& java -jar "$JETTY_HOME/start.jar" --add-to-startd="$modules,setuid" \
+	&& modules="$(grep -- ^--module= "$JETTY_HOME/sta
+	&& java -jar "$JETTY_H \
 
-	# Remove installed packages and various cleanup
-	&& apk del .build-deps \
-	&& rm -fr .build-deps \
-	&& rm -rf /tmp/hsperfdata_root
+	# emove installed packages an
 
 WORKDIR $JETTY_BASE
 
@@ -79,7 +76,7 @@ rm /usr/bin/mongosniff /usr/bin/mongoperf
 
 # Install mosquitto
 
-RUN apk add --update mosquitto libcrypto1.0 libssl1.0 && \
+RUN apk add --no-cache --update mosquitto libcrypto1.0 libssl1.0 && \
     mkdir /work && chown nobody /work
 
 
@@ -90,10 +87,10 @@ RUN addgroup -S nginx && adduser -D -S -H -G nginx nginx && rm -rf /etc/group- /
     apk --update add openssl-dev pcre-dev zlib-dev wget build-base && \
     mkdir -p /tmp/src && \
     cd /tmp/src && \
-    wget http://nginx.org/download/${NGINX_VERSION}.tar.gz && \
+    wget https://nginx.org/download/${NGINX_VERSION}.tar.gz && \
     tar -zxvf ${NGINX_VERSION}.tar.gz && \
     cd /tmp/src/${NGINX_VERSION} && \
-    ./configure \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
         --with-http_ssl_module \
         --with-http_gzip_static_module \
         --prefix=/etc/nginx \
@@ -104,7 +101,7 @@ RUN addgroup -S nginx && adduser -D -S -H -G nginx nginx && rm -rf /etc/group- /
     make install && \
     apk del build-base && \
     rm -rf /tmp/src && \
-    rm -rf /var/cache/apk/*
+    rm -rf /var/cache/apk/* && rm ${NGINX_VERSION}.tar.gz
 
 # forward request and error logs to docker log collector
 RUN ln -sf /dev/stdout /var/log/nginx/access.log
@@ -171,7 +168,7 @@ COPY build/error_page/* /usr/share/nginx/html/
 ## Configure mosquitto
 RUN mkdir /var/log/mosquitto && chmod -R 777 /var/log/mosquitto && \
     mkdir /var/lib/mosquitto && chmod -R 777 /var/lib/mosquitto && \
-    apk add --update mongo-c-driver
+    apk add --no-cache --update mongo-c-driver
 COPY build/plugin/konker-mosquitto-auth-plugin-ld.conf /etc/ld.so.conf.d/konker-mosquitto-auth-plugin-ld.conf
 COPY build/plugin/lib/*.so /usr/local/lib/konker-mosquitto-auth-plugin/
 COPY build/mosquitto.conf /etc/mosquitto/mosquitto.conf