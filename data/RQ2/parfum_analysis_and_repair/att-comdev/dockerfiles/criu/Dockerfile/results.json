{
  "startTime": 1674255415104,
  "endTime": 1674255416184,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 15,
        "columnEnd": 69
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 2,
        "lineEnd": 3,
        "columnStart": 26,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 2,
        "lineEnd": 3,
        "columnStart": 26,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 30,
        "columnStart": 22,
        "columnEnd": 12
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 2,
        "lineEnd": 3,
        "columnStart": 26,
        "columnEnd": 28
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 30,
        "columnStart": 22,
        "columnEnd": 12
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM docker.io/ubuntu:bionic\n\nRUN apt-get update -qq && apt-get install -y --no-install-recommends -qq \\\n                gcc-multilib && rm -rf /var/lib/apt/lists/*;\nARG CC=gcc\nARG ENV1=FOOBAR\n\n# install required packages\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n        ccache \\\n        libnet-dev \\\n        libnl-route-3-dev \\\n        $CC \\\n        bsdmainutils \\\n        build-essential \\\n        git-core \\\n        iptables \\\n        libaio-dev \\\n        libcap-dev \\\n        libgnutls28-dev \\\n        libgnutls30 \\\n        libnl-3-dev \\\n        libprotobuf-c-dev \\\n        libprotobuf-dev \\\n        libselinux-dev \\\n        pkg-config \\\n        protobuf-c-compiler \\\n        protobuf-compiler \\\n        python-minimal \\\n        python-future \\\n        wget && rm -rf /var/lib/apt/lists/*;\n\n# download criu 3.14 into /opt direct, extract it and remove tarball\nRUN cd /opt && wget https://download.openvz.org/criu/criu-3.14.tar.bz2 \\\n&& tar -xjf criu-3.14.tar.bz2 --directory /opt && rm -rf criu-3.14.tar.bz2\n\n# define work directory and set up environment\nWORKDIR /opt/criu-3.14/\nENV CC=\"ccache gcc\" CCACHE_DIR=/tmp/.ccache CCACHE_NOCOMPRESS=1 $ENV1=yes\n\nRUN  make mrproper && ccache -s && \\\n        date && \\\n# check single object build\n        make -j $(nproc) CC=\"$CC\" criu/parasite-syscall.o && \\\n## compile criu\n        make -j $(nproc) CC=\"$CC\" && \\\n        date && \\\n## Check that \"make mrproper\" works\n        make mrproper && ! git clean -ndx --exclude=scripts/build \\\n        --exclude=.config --exclude=test | grep .\n\n# compile tests\nRUN date && make -j $(nproc) CC=\"$CC\" -C test/zdtm && date\n\n# build binary\nRUN make\n"
}