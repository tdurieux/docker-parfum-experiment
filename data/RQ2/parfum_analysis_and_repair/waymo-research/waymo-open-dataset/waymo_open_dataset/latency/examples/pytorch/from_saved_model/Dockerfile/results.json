{
  "startTime": 1674253152782,
  "endTime": 1674253153903,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 5,
        "columnEnd": 49
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 5,
        "columnEnd": 19
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 5,
        "columnEnd": 37
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 5,
        "columnEnd": 21
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 5,
        "columnEnd": 24
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 10,
        "columnStart": 5,
        "columnEnd": 70
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nvcr.io/nvidia/cuda:10.0-cudnn7-devel-ubuntu18.04\n\n# The submission directory contains the code and associated libraries that are\n# clonein future steps.\nRUN mkdir -p /code/submission\nWORKDIR /code/submission\n\n# Get packages needed for builds below.\nRUN apt-get update \\\n  && apt-get install --no-install-recommends -y wget unzip g++ git python3-pip libgl1-mesa-glx python3 \\\n                        libboost-all-dev llvm-10 libsm6 libxrender-dev \\\n  && rm -rf /var/lib/apt/lists/*\n\n# Install the specific version of PyTorch recommended for the libraries below.\nRUN pip3 install --no-cache-dir --upgrade pip \\\n  && pip3 install --no-cache-dir torch==1.3.0 torchvision==0.4.1\n\n# CMake is required for builds.\nRUN wget https://github.com/Kitware/CMake/releases/download/v3.19.4/cmake-3.19.4-Linux-x86_64.tar.gz \\\n  && tar xf cmake-3.19.4-Linux-x86_64.tar.gz \\\n  && rm -f cmake-3.19.4-Linux-x86_64.tar.gz\n\nENV CUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda \\\n    PATH=$PATH:/code/submission/cmake-3.19.4-Linux-x86_64/bin/ \\\n    LLVM_CONFIG=/usr/bin/llvm-config-10 \\\n    PYTHONPATH=/code/submission/lib:$PYTHONPATH \\\n    TF_CPP_MIN_LOG_LEVEL=1\n\n# Install dependency.\nRUN git clone --recursive https://github.com/traveller59/spconv.git \\\n  && cd spconv \\\n  && python3 setup.py bdist_wheel \\\n  && cd dist \\\n  && pip3 install --no-cache-dir *\n\n# Install prediction library used by this PV-RCNN implementation.\nRUN git clone https://github.com/open-mmlab/OpenPCDet.git \\\n  && cd OpenPCDet \\\n  && pip3 install --no-cache-dir -r requirements.txt \\\n  && pip3 install --no-cache-dir vtk \\\n  && pip3 install --no-cache-dir mayavi \\\n  && python3 setup.py develop\n\n# Python should default to python3 for this code.\nRUN update-alternatives --install /usr/bin/python python /usr/bin/python3 0\n\n# Copy in the folder with the submission module and download the model weights\n# from https://github.com/open-mmlab/OpenPCDet/blob/master/README.md.\nCOPY submission /code/submission/\nRUN wget -O /code/submission/lib/wod_latency_submission/WAYMO_MODEL_WEIGHTS.pth \\\n  'https://drive.google.com/u/1/uc?id=1lIOq4Hxr0W3qsX83ilQv0nk1Cls6KAr-&export=download'\n\n# Set the working directly correctly so to ensure access to some config files.\nWORKDIR /code/submission/OpenPCDet/tools\n"
}