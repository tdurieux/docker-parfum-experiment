{
  "startTime": 1674251922835,
  "endTime": 1674251923374,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 186
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 186
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 186
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 37
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 210
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 61
      }
    }
  ],
  "repairedDockerfile": "FROM tensorflow/tensorflow:custom-op-ubuntu16\n\nENV PYTHON_VERSION=\"3\"\nENV PYTHON_MINOR_VERSION=\"\"\nENV PIP_MANYLINUX2010=\"1\"\nENV TF_VERSION=\"2.6.0\"\nRUN wget https://github.com/bazelbuild/bazel/releases/download/4.0.0/bazel-4.0.0-installer-linux-x86_64.sh > /dev/null\nRUN bash bazel-4.0.0-installer-linux-x86_64.sh\n# There are some problems with the python3 installation from custom-op-ubuntu16.\n# Remove it and install new ones.\nRUN apt-get remove --purge -y python3.5 python3.6\nRUN rm -f /etc/apt/sources.list.d/jonathonf-ubuntu-python-3_6-xenial.list\nRUN apt-key del F06FC659\n\n# Deadsnakes PPA no longer supports 16.04\n# https://github.com/deadsnakes/issues/issues/195\n# So we build all python versions here\nRUN mkdir /tmp/python\nRUN apt-get update\nRUN apt-get install --no-install-recommends -y apt-utils && rm -rf /var/lib/apt/lists/*;\nRUN apt-get install --no-install-recommends -y build-essential checkinstall libreadline-gplv2-dev libncursesw5-dev libsqlite3-dev tk-dev libgdbm-dev libc6-dev libbz2-dev libssl-dev zlib1g-dev openssl libffi-dev && rm -rf /var/lib/apt/lists/*;\n\nRUN for v in 3.6.15 3.7.12 3.8.12 3.9.10; do \\\n    wget \"https://www.python.org/ftp/python/$v/Python-${v}.tar.xz\" && \\\n    tar xvf \"Python-${v}.tar.xz\" -C /tmp/python && \\\n    cd \"/tmp/python/Python-${v}\" && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n    make -j8 altinstall; \\\n  done && rm \"Python-${v}.tar.xz\"\n\n\nRUN apt-get install --no-install-recommends -y libopenexr-dev && rm -rf /var/lib/apt/lists/*;\nRUN curl -f https://bootstrap.pypa.io/get-pip.py -o get-pip.py\nRUN for python in python3.6 python3.7 python3.8 python3.9; do \\\n      $python get-pip.py && \\\n      $python -m pip install --upgrade pip setuptools auditwheel && \\\n      $python -m pip install --upgrade grpcio>=1.24.3; \\\n      $python -m pip install --upgrade matplotlib plotly scikit-image immutabledict; \\\n      $python -m pip install --upgrade OpenEXR tensorflow_graphics; \\\n      $python -m pip install --upgrade tensorflow==${TF_VERSION}; \\\n    done\n\nVOLUME /tmp/artifacts\nVOLUME /root\nCOPY . /tmp/repo\nWORKDIR /tmp/repo\n\nENTRYPOINT [\"pip_pkg_scripts/build.sh\"]\n\n# The default parameters for the build.sh\nCMD []\n"
}