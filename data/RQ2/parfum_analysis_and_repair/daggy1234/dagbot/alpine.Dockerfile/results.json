{
  "startTime": 1674246685664,
  "endTime": 1674246686384,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 20
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:edge\n\nCOPY [\"pyproject.toml\", \"poetry.lock\", \"./\"]\n\nENV   PYTHONFAULTHANDLER=1 \\\n  PYTHONUNBUFFERED=1 \\\n  PYTHONHASHSEED=random \\\n  PIP_NO_CACHE_DIR=off \\\n  PIP_DISABLE_PIP_VERSION_CHECK=on \\\n  PIP_DEFAULT_TIMEOUT=100 \\\n  POETRY_VERSION=1.0.0\n\n\nRUN echo \"http://dl-cdn.alpinelinux.org/alpine/edge/testing\" >> /etc/apk/repositories \\\n    && apk --no-cache add -q git mercurial cloc openssl openssl-dev openssh alpine-sdk bash gettext sudo build-base gnupg linux-headers xz \\\n    && apk add --no-cache python3 python3-dev py3-pip py3-wheel  py3-pillow py3-setuptools py3-numpy-dev py3-matplotlib py3-async-timeout  py3-psutil py3-beautifulsoup4 py3-cryptography poetry \\\n    && apk add --no-cache --virtual .build-deps gcc libffi libc-dev make zlib\nRUN poetry config virtualenvs.create false && \\\n    pip install --no-cache-dir toml && \\\n    poetry install --no-dev --no-interaction --no-ansi && \\\n    apk del .build-deps\n\n\n\nCOPY . .\n\nWORKDIR /\n\nRUN touch /configuration.yml\n\nCOPY ./start.sh /start.sh\nRUN chmod +x /start.sh\n\nCMD [\"/start.sh\"]"
}