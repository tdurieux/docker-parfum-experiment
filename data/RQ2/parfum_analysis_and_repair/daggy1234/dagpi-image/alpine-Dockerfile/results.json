{
  "startTime": 1674255872158,
  "endTime": 1674255873174,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 77
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 7,
        "columnEnd": 89
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 7,
        "columnEnd": 99
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 7,
        "columnEnd": 93
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 26
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:edge\n\nCOPY prod.requirements.txt .\n\nRUN echo \"http://dl-cdn.alpinelinux.org/alpine/edge/testing\" >> /etc/apk/repositories \\\n    && apk add --no-cache python3 python3-dev py3-pip py3-wheel py3-gunicorn py3-setuptools py3-numpy-dev py3-pillow py3-scipy py3-matplotlib \\\n    && apk add --no-cache --virtual .build-deps gcc glib libc-dev make \\\n    && pip install --no-cache-dir https://ftp.travitia.xyz/uvloop-0.15.0.dev0-cp38-cp38-linux_x86_64.whl \\\n    && pip install --no-cache-dir https://ftp.travitia.xyz/PyWavelets-1.2.0.dev0c306fd6-cp38-cp38-linux_x86_64.whl \\\n    && pip install --no-cache-dir https://ftp.travitia.xyz/scikit_image-0.18.dev0-cp38-cp38-linux_x86_64.whl \\\n    && pip install --no-cache-dir uvicorn fastapi \\\n    && apk add --no-cache gcc  curl tar file  g++ libstdc++ bash git glib glib-dev build-base zlib-dev libpng-dev libjpeg-turbo-dev freetype-dev fontconfig-dev perl-dev ghostscript-dev libtool tiff-dev lcms2-dev libwebp-dev libxml2-dev libx11-dev libxext-dev chrpath libheif-dev librsvg-dev freetype fontconfig ghostscript ghostscript-fonts lcms2 graphviz\n\nRUN pip install --no-cache-dir -r prod.requirements.txt \\\n    && adduser -S app \\\n    && rm prod.requirements.txt\n\nRUN git clone https://github.com/carlobaldassi/liblqr && \\\n    cd liblqr && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n    make && \\\n    make install\n\n\nRUN curl -f https://codeload.github.com/ImageMagick/ImageMagick/tar.gz/7.0.10-51 | tar -xz && \\\n    cd ImageMagick-7.0.10-51 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-lqr && \\\n    make && \\\n    make install && \\\n    cd .. && \\\n    rm -R ImageMagick-7.0.10-51 && \\\n    cd .. && \\\n    rm -R liblqr && \\\n    apk del .build-deps\n\n#ENV MAGICK_HOME=/usr\n\nRUN  magick logo: logo.gif\n\nCOPY ./start.sh /start.sh\nRUN chmod +x /start.sh\n\nCOPY ./gunicorn_conf.py /gunicorn_conf.py\n\nCOPY ./app /app\nWORKDIR /\nENV PYTHONPATH=/app\n\n\nEXPOSE 5000\n\nCMD [\"/start.sh\"]\n"
}