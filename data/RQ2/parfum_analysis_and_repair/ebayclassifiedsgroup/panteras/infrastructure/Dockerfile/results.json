{
  "startTime": 1674253870567,
  "endTime": 1674253871946,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 19,
        "columnStart": 7,
        "columnEnd": 11
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 96,
        "lineEnd": 96,
        "columnStart": 7,
        "columnEnd": 61
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 154,
        "lineEnd": 165,
        "columnStart": 7,
        "columnEnd": 10
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# PanteraS\n# Platform as a Service based on Paas in a box project\n#\nFROM ubuntu:16.04\n\nMAINTAINER Wojciech Sielski \"wsielski@team.mobile.de\"\n\nRUN apt-get update --no-install-recommends \\\n    && apt-get install --no-install-recommends -y \\\n      locales \\\n      apt-transport-https \\\n      python3-minimal \\\n      python3-setuptools \\\n      wget \\\n      curl \\\n      unzip \\\n      vim-tiny \\\n      lolcat \\\n      toilet \\\n      jshon \\\n    && apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/*\n\nRUN locale-gen en_US.UTF-8\n\nENV DEBIAN_FRONTEND noninteractive\nENV LANG en_US.UTF-8\nENV LANGUAGE en_US:en\nENV LC_ALL en_US.UTF-8\nENV TERM xterm\nENV HOME /root\nENV GOPATH ${HOME}/go\n\nENV SUPERVISORD_APP_VERSION       4.2.2\nENV DOCKER_APP_VERSION            5:20.10.7~3-0~ubuntu-xenial\nENV CONSUL_APP_VERSION            1.10.3\nENV MESOS_APP_VERSION             1.9.0-2.0.1.ubuntu1604\n#ENV MARATHON_APP_VERSION          1.9.81-0.1.20190905233136.ubuntu1604\nENV MARATHON_APP_VERSION          1.8.222-86475ddac\nENV REGISTRATOR_APP_VERSION       v7\nENV FABIO_APP_VERSION             1.5.15\nENV FABIO_GO_APP_VERSION          go1.15.5\nENV NETDATA_APP_VERSION           1.31.0\n#ENV TRAEFIK_APP_VERSION           v2.0.0-beta1\nENV TRAEFIK_APP_VERSION           v1.7.33\n\n\nENV DOCKER_HOST unix:///tmp/docker.sock\n\n\n# SupervisorD\n#\nRUN wget https://github.com/Supervisor/supervisor/archive/${SUPERVISORD_APP_VERSION}.zip \\\n    && unzip ${SUPERVISORD_APP_VERSION}.zip \\\n    && cd supervisor-${SUPERVISORD_APP_VERSION} \\\n    && python3 setup.py install \\\n    && cd - \\\n    && rm -rf ${SUPERVISORD_APP_VERSION}.zip supervisor-${SUPERVISORD_APP_VERSION}\n\n\n# ZOOKEEPER MESOS MARATHON\n#\nRUN echo \"deb http://repos.mesosphere.com/ubuntu/ xenial main\" > /etc/apt/sources.list.d/mesosphere.list \\\n    # marathon postinstall fix, since we we dont need systemctl\n    && apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv DF7D54CBE56151BF \\\n    && apt-get update \\\n    # marathon still build against java8\n    && apt-get -y install --no-install-recommends \\\n       openjdk-8-jre \\\n       mesos=${MESOS_APP_VERSION}  \\\n       zookeeper \\\n    #  marathon=${MARATHON_APP_VERSION} \\\n    && apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/* \\\n    && rm /etc/mesos/zk \\\n    && chown -R zookeeper /etc/zookeeper \\\n    && REAL_JAVA_PATH=$(readlink -f $(which java)) \\\n    && JAVA_DIR=${REAL_JAVA_PATH%/bin/java} \\\n    && mkdir -p ${JAVA_DIR}/conf/management/ \\\n    && touch ${JAVA_DIR}/conf/management/management.properties\n\nRUN wget https://downloads.mesosphere.io/marathon/builds/${MARATHON_APP_VERSION}/marathon-${MARATHON_APP_VERSION}.tgz \\\n    && mkdir /opt/marathon \\\n    && tar -C /opt/marathon --strip 1 -zxf marathon-${MARATHON_APP_VERSION}.tgz \\\n    && rm marathon-${MARATHON_APP_VERSION}.tgz \\\n    && ln -s /opt/marathon/bin/marathon /usr/local/bin\n\nADD zkStart.sh /opt/zkStart.sh\n\n# DOCKER\n#\nRUN echo 'deb https://download.docker.com/linux/ubuntu xenial stable' > /etc/apt/sources.list.d/docker.list \\\n    && apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 0EBFCD88 \\\n    && apt-get update \\\n    && apt-get install --no-install-recommends -y docker-ce-cli=${DOCKER_APP_VERSION} \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/*\n\n# REGISTRATOR\n#\nRUN mkdir /opt/registrator\nENV PATH ${PATH}:/opt/registrator\nWORKDIR /opt/registrator\n# Providing binaries by us\nRUN wget https://github.com/eBayClassifiedsGroup/registrator/releases/download/${REGISTRATOR_APP_VERSION}/registrator.tgz \\\n    && tar zxf registrator.tgz \\\n    && rm registrator.tgz\n\n# CONSUL\n#\nRUN mkdir -p /opt/consul/data /etc/consul.d \\\n    && groupadd -g 3000 consul \\\n    && useradd  -g 3000 -u 3000 -d /opt/consul -s /bin/false consul\nENV PATH $PATH:/opt/consul\nWORKDIR /opt/consul\n\nRUN wget https://releases.hashicorp.com/consul/${CONSUL_APP_VERSION}/consul_${CONSUL_APP_VERSION}_linux_amd64.zip \\\n    && unzip consul_${CONSUL_APP_VERSION}_linux_amd64.zip \\\n    && rm consul_*.zip \\\n    && chown -R consul:consul /opt/consul\n\n# FABIO\n#\nRUN mkdir /opt/fabio \\\n    && groupadd -g 3001 fabio \\\n    && useradd  -g 3001 -u 3001 -d /opt/fabio -s /bin/false fabio\nENV PATH ${PATH}:/opt/fabio\nWORKDIR /opt/fabio\nRUN wget https://github.com/eBay/fabio/releases/download/v${FABIO_APP_VERSION}/fabio-${FABIO_APP_VERSION}-${FABIO_GO_APP_VERSION}-linux_amd64 -O fabio \\\n    && chmod a+x fabio \\\n    && chown -R fabio:fabio /opt/fabio \\\n    && setcap 'cap_net_bind_service=+ep' ./fabio\n\n# TRAEFIK\n#\nRUN mkdir /opt/traefik \\\n    && groupadd -g 3002 traefik \\\n    && useradd  -g 3002 -u 3002 -d /opt/traefik -s /bin/false traefik\nENV PATH ${PATH}:/opt/traefik\nWORKDIR /opt/traefik\n#RUN wget https://github.com/containous/traefik/releases/download/${TRAEFIK_APP_VERSION}/traefik_${TRAEFIK_APP_VERSION}_linux_amd64.tar.gz -O traefik.tar.gz \\\nRUN wget https://github.com/containous/traefik/releases/download/${TRAEFIK_APP_VERSION}/traefik_linux-amd64 -O traefik \\\n#    && tar zxf traefik.tar.gz \\\n    && chmod a+x traefik \\\n    && chown -R traefik:traefik /opt/traefik \\\n    && setcap 'cap_net_bind_service=+ep' ./traefik\nADD traefik.toml /opt/traefik\n\n# NETDATA\n#\nRUN savedAptMark=\"$(apt-mark showmanual)\" \\\n    && apt-get update \\\n    && apt-get -y --no-install-recommends install \\\n       zlib1g-dev \\\n       gcc \\\n       make \\\n       autoconf \\\n       autogen \\\n       automake \\\n       pkg-config \\\n       uuid-dev \\\n       libmnl-dev \\\n       libuv1-dev \\\n       git \\\n    && git clone -b v${NETDATA_APP_VERSION} --single-branch https://github.com/netdata/netdata.git /tmp/netdata.git --depth=1 \\\n    && cd /tmp/netdata.git \\\n    && ./netdata-installer.sh --dont-wait --install /opt \\\n    && cd /opt \\\n    && rm -rf /tmp/* \\\n    && ln -sf /dev/stdout /opt/netdata/var/log/netdata/access.log \\\n    && ln -sf /dev/stderr /opt/netdata/var/log/netdata/error.log \\\n    && apt-mark auto '.*' > /dev/null \\\n    && apt-mark manual $savedAptMark \\\n    && apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/*\n\n# PanteraS:\nRUN gem install panteras_api marathon_deploy\n# Font for logo\nRUN wget https://raw.githubusercontent.com/patorjk/figlet.js/master/fonts/Elite.flf -O /usr/share/figlet/Elite.flf\n\nADD supervisord.conf   /etc/supervisord.conf\nADD supervisord.sh     /opt/\n\nADD panteras.http      /etc/fabio/errors/\nADD fabio.properties   /opt/fabio/fabio.properties\n\nADD logo.sh            /etc/profile.d\nADD paas.sh            /etc/profile.d\nADD bashrc             /tmp\nADD version            /opt/\n\n# example user\nRUN groupadd -g 31337 ecgapp && \\\n    useradd  -g 31337 -u 31337 -d /app -s /bin/false ecgapp\n\nRUN groupadd -g 3003 marathon \\\n    && useradd  -g 3003 -u 3003 -d /opt/marathon -s /bin/false marathon\n\nRUN cat /tmp/bashrc >> /root/.bashrc\n\nWORKDIR /opt\nCMD [ \"/opt/supervisord.sh\" ]\n"
}