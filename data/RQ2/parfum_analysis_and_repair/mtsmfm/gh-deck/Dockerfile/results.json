{
  "startTime": 1674218938247,
  "endTime": 1674218939423,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 26,
        "lineEnd": 27,
        "columnStart": 2,
        "columnEnd": 3
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 2,
        "columnEnd": 25
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 21
      }
    }
  ],
  "repairedDockerfile": "FROM ruby:2.5.1-alpine\n\nARG DISABLE_COMPILE\n\nENV BUNDLE_JOBS=4 RAILS_LOG_TO_STDOUT=true RAILS_SERVE_STATIC_FILES=true\n\nCOPY --from=node:10.9.0-alpine /usr/local /usr/local\nCOPY --from=node:10.9.0-alpine /opt /opt\n\nRUN apk update && apk add --no-cache build-base postgresql-dev tzdata less\n\nRUN adduser -u 1000 -D app\nRUN mkdir /app\nRUN chown -R app /app\n\nWORKDIR /app\n\nUSER app\n\nCOPY --chown=app Gemfile Gemfile.lock ./\n\nRUN bundle install\n\nCOPY --chown=app package.json yarn.lock ./\n\nRUN if [ -z \"$DISABLE_COMPILE\" ]; then \\\n  yarn install \\\n  ; yarn cache clean; fi\n\nCOPY --chown=app . ./\n\nRUN if [ -z \"$DISABLE_COMPILE\" ]; then \\\n  yarn run apollo:codegen && SECRET_KEY_BASE=`bin/rails secret` RAILS_ENV=production bin/rails assets:precompile \\\n  ; yarn cache clean; fi\n\nCMD [\"bin/rails\", \"server\", \"-b\", \"0.0.0.0\"]\n"
}