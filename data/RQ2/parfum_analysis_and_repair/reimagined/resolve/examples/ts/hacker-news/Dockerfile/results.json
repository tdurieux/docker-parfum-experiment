{
  "startTime": 1674250931124,
  "endTime": 1674250931587,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 46
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Build stage: install all dependencies and build app\nFROM node:14.17-alpine as build\n\nWORKDIR /src\n\nCOPY package.json package.json\n\nCOPY .babelrc .babelrc\nCOPY tsconfig.json tsconfig.json\n\nRUN yarn install --ignore-scripts && yarn cache clean;\n\nCOPY run.ts run.ts\nCOPY config.adjust-webpack.ts config.adjust-webpack.ts\nCOPY config.app.ts config.app.ts\nCOPY config.cloud.common.ts config.cloud.common.ts\nCOPY config.cloud.replica.ts config.cloud.replica.ts\nCOPY config.cloud.ts config.cloud.ts\nCOPY config.dev.common.ts config.dev.common.ts\nCOPY config.dev.replica.ts config.dev.replica.ts\nCOPY config.dev.ts config.dev.ts\nCOPY config.prod.ts config.prod.ts\nCOPY config.docker.ts config.docker.ts\nCOPY config.test-functional.ts config.test-functional.ts\nCOPY types.ts types.ts\nCOPY auth auth\nCOPY client client\nCOPY common common\nCOPY import import\nCOPY static static\n\nRUN yarn build:docker\n\n# Dependencies stage: install production dependencies\nFROM node:14.17-alpine as dependencies\n\nWORKDIR /src\n\nCOPY package.json package.json\n\nRUN yarn install --ignore-scripts --production && yarn cache clean;\n\n# Main stage: copy production dependencies, build and static files\nFROM node:14.17-alpine\n\nCOPY static static\nCOPY --from=dependencies /src .\nCOPY --from=build /src/dist dist\n\nEXPOSE 3000\n\nCMD [\"node\", \"dist/common/local-entry/local-entry.js\"]\n"
}