diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/sourcegraph/lsp-adapter/dockerfiles/csharp/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/sourcegraph/lsp-adapter/dockerfiles/csharp/Dockerfile/repaired.Dockerfile
index 3ca5170..a4e8050 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/sourcegraph/lsp-adapter/dockerfiles/csharp/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/sourcegraph/lsp-adapter/dockerfiles/csharp/Dockerfile/repaired.Dockerfile
@@ -10,9 +10,9 @@ FROM ubuntu:16.04
 RUN apt-get update \
   && apt-get install --no-install-recommends -y ca-certificates gnupg curl jq \
   # Ubuntu 16.04's default nodejs package v4.2.6 is too old to run the
-  # omnisharp-client npm package.
-  && curl -sL https://deb.nodesource.com/setup_10.x | bash - \
-  && curl https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > /etc/apt/trusted.gpg.d/microsoft.gpg \
+  # omnisharp-client npm package. \
+  && curl -f -sL https://deb.nodesource.com/setup_10.x | bash - \
+  && curl -f https://packages.microsoft.com/keys/microsoft.asc | gpg --batch --dearmor > /etc/apt/trusted.gpg.d/microsoft.gpg \
   && echo "deb [arch=amd64] https://packages.microsoft.com/repos/microsoft-ubuntu-xenial-prod xenial main" > /etc/apt/sources.list.d/dotnetdev.list \
   && echo "deb https://download.mono-project.com/repo/ubuntu stable-xenial main" > /etc/apt/sources.list.d/mono-official-stable.list \
   && apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF \
@@ -23,16 +23,16 @@ RUN apt-get update \
   && rm -rf /usr/share/dotnet/sdk/NuGetFallbackFolder \
   && rm -rf /var/lib/apt/lists/* \
   # omnisharp-client translates between LSP and OmniSharp's custom protocol.
-  && npm install -g omnisharp-client@7.2.3
+  && npm install -g omnisharp-client@7.2.3 && npm cache clean --force;
 
 # Bake OmniSharp into this image (and write a .version file) so that
 # omnisharp-client doesn't have to download it upon initialization.
 ENV BASE=/usr/lib/node_modules/omnisharp-client
 RUN mkdir "$BASE/omnisharp-linux-x64"
 RUN VERSION="$(jq -r ".[\"omnisharp-roslyn\"]" < "$BASE/package.json")" \
-  && curl -L "https://github.com/OmniSharp/omnisharp-roslyn/releases/download/$VERSION/omnisharp-linux-x64.tar.gz" -o "$BASE/omnisharp-linux-x64.tar.gz" \
+  && curl -f -L "https://github.com/OmniSharp/omnisharp-roslyn/releases/download/$VERSION/omnisharp-linux-x64.tar.gz" -o "$BASE/omnisharp-linux-x64.tar.gz" \
   && echo "$VERSION" > "$BASE/omnisharp-linux-x64/.version" \
-  && tar xvf "$BASE/omnisharp-linux-x64.tar.gz" -C "$BASE/omnisharp-linux-x64"
+  && tar xvf "$BASE/omnisharp-linux-x64.tar.gz" -C "$BASE/omnisharp-linux-x64" && rm "$BASE/omnisharp-linux-x64.tar.gz"
 
 # Use tini as entrypoint to correctly handle signals and zombie processes.
 ENV TINI_VERSION v0.18.0