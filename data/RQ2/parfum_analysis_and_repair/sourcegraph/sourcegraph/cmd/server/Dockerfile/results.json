{
  "startTime": 1674219067871,
  "endTime": 1674219071794,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 71
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Install p4 CLI (keep this up to date with cmd/gitserver/Dockerfile)\nFROM sourcegraph/alpine-3.14:159028_2022-07-07_1f3b17ce1db8@sha256:25d682b5fd069c716c2b29dcf757c0dc0ce29810a07f91e1347901920272b4a7 AS p4cli\n\n# hadolint ignore=DL3003\nRUN wget https://cdist2.perforce.com/perforce/r21.2/bin.linux26x86_64/p4\nRUN mv p4 /usr/local/bin/p4\nRUN chmod +x /usr/local/bin/p4\n\n# Install p4-fusion (keep this up to date with cmd/gitserver/Dockerfile)\nFROM sourcegraph/alpine-3.14:159028_2022-07-07_1f3b17ce1db8@sha256:25d682b5fd069c716c2b29dcf757c0dc0ce29810a07f91e1347901920272b4a7 AS p4-fusion\n\nCOPY p4-fusion-install-alpine.sh /p4-fusion-install-alpine.sh\nRUN /p4-fusion-install-alpine.sh\n\n# Install coursier (keep this up to date with cmd/gitserver/Dockerfile)\nFROM sourcegraph/alpine-3.14:159028_2022-07-07_1f3b17ce1db8@sha256:25d682b5fd069c716c2b29dcf757c0dc0ce29810a07f91e1347901920272b4a7 AS coursier\n\n# TODO(code-intel): replace with official streams when musl builds are upstreamed\nRUN wget -O coursier.zip https://github.com/sourcegraph/lsif-java/releases/download/v0.5.6/cs-musl.zip && \\\n    unzip coursier.zip && \\\n    mv cs-musl /usr/local/bin/coursier && \\\n    chmod +x /usr/local/bin/coursier\n\nFROM sourcegraph/alpine-3.14:159028_2022-07-07_1f3b17ce1db8@sha256:25d682b5fd069c716c2b29dcf757c0dc0ce29810a07f91e1347901920272b4a7\n# TODO(security): This container should not be running as root!\n#\n# The default user in sourcegraph/alpine is a non-root `sourcegraph` user but because old deployments\n# cannot be easily migrated we have not changed this from root -> sourcegraph. See:\n# https://github.com/sourcegraph/sourcegraph/issues/13238\n# hadolint ignore=DL3002\nUSER root\n\nARG COMMIT_SHA=\"unknown\"\nARG DATE=\"unknown\"\nARG VERSION=\"unknown\"\n\nLABEL org.opencontainers.image.revision=${COMMIT_SHA}\nLABEL org.opencontainers.image.created=${DATE}\nLABEL org.opencontainers.image.version=${VERSION}\nLABEL com.sourcegraph.github.url=https://github.com/sourcegraph/sourcegraph/commit/${COMMIT_SHA}\n\nRUN apk add --no-cache --verbose \\\n    # [NOTE: git-version-min-requirement]\n    # We require git 2.34.1 because we use git-repack with flag --write-midx.\n    # We require git 2.35.2 to fix this vulnerability:\n    # https://github.blog/2022-04-12-git-security-vulnerability-announced/\n    'git>=2.35.2' \\\n    git-p4 \\\n    --repository=http://dl-cdn.alpinelinux.org/alpine/v3.16/main\n\nRUN apk add --no-cache --verbose \\\n    # NOTE that the Postgres version we run is different\n    # from our *Minimum Supported Version* which alone dictates\n    # the features we can depend on. See this link for more information:\n    # https://github.com/sourcegraph/sourcegraph/blob/main/doc/dev/postgresql.md#version-requirements\n    # You can't just bump the major version since that requires pgupgrade\n    # between Sourcegraph releases.\n    postgresql=~12 \\\n    postgresql-contrib=~12 \\\n    --repository=http://dl-cdn.alpinelinux.org/alpine/v3.12/main\n\nRUN apk add --no-cache --verbose \\\n    'bash>=5.0.17' \\\n    'redis>=5.0' \\\n    python2 \\\n    python3 \\\n    'nginx>=1.18.0' openssh-client pcre sqlite-libs libev su-exec 'nodejs-current>=14.5.0' \\\n    # We require libstdc++ for p4-fusion\n    libstdc++\n\n# IMPORTANT: If you update the syntect_server version below, you MUST confirm\n# the ENV variables from its Dockerfile (https://github.com/sourcegraph/syntect_server/blob/master/Dockerfile)\n# have been appropriately set in cmd/server/shared/shared.go.\n# hadolint ignore=DL3022\nCOPY --from=comby/comby:alpine-3.14-1.8.1@sha256:a5e80d6bad6af008478679809dc8327ebde7aeff7b23505b11b20e36aa62a0b2 /usr/local/bin/comby /usr/local/bin/comby\n# hadolint ignore=DL3022\nCOPY --from=docker.io/sourcegraph/syntect_server:21-08-31_c330964@sha256:759f331a474d2a67b811a1b374b0b24a4661446a2d8e9b211f51ea8ae95e1130 /syntect_server /usr/local/bin/\n\n\n# install minio (keep this up to date with docker-images/minio/Dockerfile)\nENV MINIO_VERSION=RELEASE.2021-12-10T23-03-39Z\nRUN wget \"https://dl.min.io/server/minio/release/linux-amd64/archive/minio.$MINIO_VERSION\" && \\\n    chmod +x \"minio.$MINIO_VERSION\" && \\\n    mv \"minio.$MINIO_VERSION\" /usr/local/bin/minio\n\nCOPY ctags-install-alpine.sh /ctags-install-alpine.sh\nRUN /ctags-install-alpine.sh\n\n# hadolint ignore=DL3022\nCOPY --from=sourcegraph/prometheus:server /bin/prom-wrapper /bin\n# hadolint ignore=DL3022\nCOPY --from=sourcegraph/prometheus:server /bin/alertmanager /bin\n# hadolint ignore=DL3022\nCOPY --from=sourcegraph/prometheus:server /alertmanager.sh /alertmanager.sh\n# hadolint ignore=DL3022\nCOPY --from=sourcegraph/prometheus:server /bin/prometheus /bin\n# hadolint ignore=DL3022\nCOPY --from=sourcegraph/prometheus:server /prometheus.sh /prometheus.sh\n# hadolint ignore=DL3022\nCOPY --from=sourcegraph/prometheus:server /usr/share/prometheus /usr/share/prometheus\n\nRUN set -ex && \\\n    addgroup -S grafana && \\\n    adduser -S -G grafana grafana && \\\n    apk add --no-cache libc6-compat ca-certificates su-exec\n\n# hadolint ignore=DL3022\nCOPY --from=sourcegraph/grafana:server /usr/share/grafana /usr/share/grafana\n\nCOPY . /\n\n# hadolint ignore=DL3022\nCOPY --from=p4cli /usr/local/bin/p4 /usr/local/bin/p4\n\nCOPY --from=p4-fusion /usr/local/bin/p4-fusion /usr/local/bin/p4-fusion\n\nCOPY --from=coursier /usr/local/bin/coursier /usr/local/bin/coursier\n\n# This is a trick to include libraries required by p4,\n# please refer to https://blog.tilander.org/docker-perforce/\n# hadolint ignore=DL4006\nRUN wget -O - https://github.com/jtilander/p4d/raw/4600d741720f85d77852dcca7c182e96ad613358/lib/lib-x64.tgz | tar zx --directory /\n\n# hadolint ignore=DL3022\nCOPY --from=sourcegraph/grafana:server /sg_config_grafana/provisioning/dashboards /sg_config_grafana/provisioning/dashboards\n\n# hadolint ignore=DL3022\nCOPY --from=sourcegraph/postgres_exporter:server /usr/local/bin/postgres_exporter /usr/local/bin/postgres_exporter\n\nRUN echo \"hosts: files dns\" > /etc/nsswitch.conf\n\n# symbols is cgo, ensure we have the requisite dynamic libraries\nRUN env SANITY_CHECK=true /usr/local/bin/symbols\n\nWORKDIR /\n\nENV GO111MODULES=on LANG=en_US.utf8\nENTRYPOINT [\"/sbin/tini\", \"--\", \"/usr/local/bin/server\"]\n"
}