{
  "startTime": 1674255687526,
  "endTime": 1674255688552,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 95
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 0,
        "columnEnd": 28
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 0,
        "columnEnd": 69
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 0,
        "columnEnd": 28
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 1,
        "columnEnd": 53
      }
    }
  ],
  "repairedDockerfile": "FROM golang:1.17\n\n# Install our required version of Kustomize to generate the examples\nRUN wget https://github.com/kubernetes-sigs/kustomize/releases/download/v1.0.11/kustomize_1.0.11_linux_amd64 -q -O /usr/local/bin/kustomize && chmod 755 /usr/local/bin/kustomize\n\n# Install our current version of Helm.  We can probably upgrade to a new version\n# but this one has been tested and verified to work.\nRUN wget https://get.helm.sh/helm-v2.16.10-linux-amd64.tar.gz -q -O - | tar zx -C /bin --strip-components=1 linux-amd64/helm\n\n# Install our required version of Kubebuilder.  We cannot upgrade to a later\n# version without significant effort.\nRUN curl -f -L -o kubebuilder https://go.kubebuilder.io/dl/latest/$(go env GOOS)/$(go env GOARCH); chmod +x kubebuilder && mv kubebuilder /usr/local/bin/\n\n# Install our current version of golangci-lint.  We can probably upgrade to a\n# new version but this one has been tested and verified to work.\nRUN curl -sfL https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | sh -s -- -b $(go env GOPATH)/bin v1.17.1\n\n# Install the latest version of Docker although we should probably try and\n# align the container version and the host version to ensure compatibility.\nRUN apt-get update && \\\napt-get -y --no-install-recommends install software-properties-common && \\\ncurl -fsSL https://download.docker.com/linux/debian/gpg > /tmp/dkey; rm -rf /var/lib/apt/lists/*; apt-key add /tmp/dkey && \\\nadd-apt-repository \\\n   \"deb [arch=amd64] https://download.docker.com/linux/debian \\\n   $(lsb_release -cs) \\\n   stable\" && \\\napt-get update && \\\n apt-get -y --no-install-recommends install docker-ce\n\nENV PATH=\"${PATH}:/usr/local/kubebuilder/bin:/bin\"\n\n# Set the workdir into which we will will be working within this container\nWORKDIR /go/src/github.com/wind-river/cloud-platform-deployment-manager\n\n# Initialize helm within the container otherwise no helm commands will work.\nRUN helm init --stable-repo-url=https://charts.helm.sh/stable --client-only\n\n# The entry command can be overwritten when launched but by default these are\n# the build steps that we will be running.\nCMD make && DEBUG=yes make docker-build\n"
}