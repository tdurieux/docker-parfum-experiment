{
  "startTime": 1674254636304,
  "endTime": 1674254637304,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 22,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 22,
        "columnEnd": 80
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 22,
        "columnEnd": 44
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 22,
        "columnEnd": 80
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Build the manager binary\nFROM golang:1.17 as dlvbuilder\n\n# Build delve debugger\nRUN apt-get update && apt-get install --no-install-recommends -y git && rm -rf /var/lib/apt/lists/*;\nRUN go get github.com/go-delve/delve/cmd/dlv\n\n# Build the manager binary\nFROM dlvbuilder as builder\nARG GOBUILD_GCFLAGS=\"\"\n\nWORKDIR /workspace\n# Copy the Go Modules manifests\nCOPY go.mod go.mod\nCOPY go.sum go.sum\n# cache deps before building and copying source so that we don't need to re-download as much\n# and so that source changes don't invalidate our downloaded layer\nRUN go mod download\n\n# Copy the go source\nCOPY main.go main.go\nCOPY api/ api/\nCOPY common/ common/\nCOPY platform/ platform/\nCOPY controllers/ controllers/\nCOPY scripts/ scripts/\n\n# Build\nRUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -gcflags \"${GOBUILD_GCFLAGS}\" -a -o manager main.go\n\n# Use distroless as minimal base image to package the manager binary\n# Refer to https://github.com/GoogleContainerTools/distroless for more details\nFROM scratch as production\nWORKDIR /\nCOPY --from=builder /workspace/manager .\n\nENTRYPOINT [\"/manager\"]\n\n# Copy the delve debugger into a debug image\nFROM ubuntu:latest as debug\nWORKDIR /\nRUN apt-get update && apt-get install --no-install-recommends -y tcpdump net-tools iputils-ping iproute2 && rm -rf /var/lib/apt/lists/*;\nCOPY --from=dlvbuilder /go/bin/dlv /\nCOPY --from=builder /workspace/manager .\nCOPY --from=builder /workspace/scripts/dlv-wrapper.sh /\n\nCMD [\"/dlv-wrapper.sh\", \"/manager\"]\n"
}