{
  "startTime": 1674216635711,
  "endTime": 1674216636969,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 27
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 51
      }
    }
  ],
  "repairedDockerfile": "ARG UBUNTU_VERSION=18.04\nFROM ubuntu:${UBUNTU_VERSION} AS base\n\n# Use bash as the default shell\nSHELL [\"/bin/bash\", \"-c\"]\n# Ubuntu Setup\nENV TZ=America/Chicago\nRUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone\n\n# Update core packages\nRUN apt-get -y update; \\\n    apt-get -y --no-install-recommends install autoconf \\\n                       clang \\\n                       cmake \\\n                       g++ \\\n                       gcc \\\n                       gfortran \\\n                       libhdf5-dev \\\n                       libtool \\\n                       libeigen3-dev \\\n                       python3-numpy \\\n                       python3 \\\n                       python3-pip \\\n                       python3-setuptools \\\n                       python3-dev \\\n                       libpython3-dev \\\n                       wget \\\n                       software-properties-common; rm -rf /var/lib/apt/lists/*; \\\n    add-apt-repository ppa:git-core/ppa; \\\n    apt-get update; \\\n    apt-get install --no-install-recommends -y git; \\\n    update-alternatives --install /usr/bin/python python /usr/bin/python3 10; \\\n    update-alternatives --install /usr/bin/pip pip /usr/bin/pip3 10; \\\n    pip install --no-cache-dir cython;\n\n\n# Copy scripts to docker image\nRUN mkdir -p /root/etc/\nCOPY CI/ /root/etc/CI\n#TODO move sh file contents into this Dockerfile\nENV docker_env=/root/etc/CI/env.sh\n\nENV build_dir=/root/build_dir\nENV install_dir=/root/opt\n\n\nFROM base as external_deps\n\n#setting the COMPILER variable\nARG COMPILER=gcc\nENV COMPILER=${COMPILER}\n\n# Set Geant4 env variable\nENV geant4_build_dir=${build_dir}/geant4\nENV geant4_install_dir=${install_dir}/geant4\n\n# Build Geant4\n#TODO move sh file contents into this Dockerfile\nRUN /root/etc/CI/docker/build_geant4.sh\n\nENV double_down_build_dir=${build_dir}/double-down/\nENV double_down_install_dir=${install_dir}/double-down/\n\n# Build Embree\n#TODO move sh file contents into this Dockerfile\nRUN /root/etc/CI/docker/build_embree.sh\n\nFROM external_deps AS hdf5\n\n# Set HDF5 env variable\nENV hdf5_build_dir=${build_dir}/hdf5\nENV hdf5_install_dir=${install_dir}/hdf5\n\n# Build HDF5\n# HDF5 argument possible value: 1.10.4 or system\nARG HDF5=1.10.4\nENV HDF5_VERSION=${HDF5}\n#TODO move sh file contents into this Dockerfile\nRUN /root/etc/CI/docker/build_hdf5.sh\n\nFROM hdf5 AS moab\n\n# Set MOAB env variable\nENV moab_build_dir=${build_dir}/moab\nENV moab_install_dir=${install_dir}/moab\n\nARG MOAB=5.3.0\nENV MOAB_VERSION ${MOAB}\n#TODO move sh file contents into this Dockerfile\nRUN if [ \"${MOAB_VERSION}\" != \"master\" ] && [ \"${MOAB_VERSION}\" != \"develop\" ]; then \\\n        /root/etc/CI/docker/build_moab.sh; \\\n    fi;\n\n"
}