{
  "startTime": 1674250873377,
  "endTime": 1674250874075,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 18,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 0,
        "columnEnd": 20
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 0,
        "columnEnd": 20
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 18,
        "columnEnd": 39
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 0,
        "columnEnd": 20
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 0,
        "columnEnd": 20
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 18,
        "columnEnd": 39
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG arch=x86_64\n\nFROM tiltedphoques/builder:${arch} AS builder\n\nARG arch\n\nWORKDIR /home/server\n\nRUN apt update && \\\n apt install --no-install-recommends cmake -y && rm -rf /var/lib/apt/lists/*;\n\nCOPY ./modules ./modules\nCOPY ./Libraries ./Libraries\nCOPY xmake.lua xmake.lua\nCOPY ./.git ./.git\nCOPY ./Code ./Code\n\nRUN export XMAKE_ROOTDIR=\"/root/.local/bin\" && \\\nexport PATH=\"$XMAKE_ROOTDIR:$PATH\" && \\\nexport XMAKE_ROOT=y && \\\napt update && \\\n apt install --no-install-recommends cmake -y && \\\nxmake config -y && \\\nxmake -j`nproc` && rm -rf /var/lib/apt/lists/*;\n\nRUN export XMAKE_ROOTDIR=\"/root/.local/bin\" && \\\nexport PATH=\"$XMAKE_ROOTDIR:$PATH\" && \\\nexport XMAKE_ROOT=y && \\\nobjcopy --only-keep-debug /home/server/build/linux/${arch}/release/SkyrimTogetherServer /home/server/build/linux/${arch}/release/SkyrimTogetherServer.debug && \\\nobjcopy --only-keep-debug /home/server/build/linux/${arch}/release/libSTServer.so /home/server/build/linux/${arch}/release/libSTServer.debug\n\nRUN export XMAKE_ROOTDIR=\"/root/.local/bin\" && \\\nexport PATH=\"$XMAKE_ROOTDIR:$PATH\" && \\\nexport XMAKE_ROOT=y && \\\nxmake install -o package\n\nFROM ubuntu:20.04 AS skyrim\n\nARG arch\n\nRUN apt update && apt install -y --no-install-recommends libssl1.1 && rm -rf /var/lib/apt/lists/*;\n\n# We copy it twice since we can't really tell the arch from Dockerfile :(\nCOPY --from=builder /usr/local/lib64/libstdc++.so.6.0.30 /lib/x86_64-linux-gnu/libstdc++.so.6\nCOPY --from=builder /usr/local/lib64/libstdc++.so.6.0.30 /lib/aarch64-linux-gnu/libstdc++.so.6\n\n# Now copy the actual bins\nCOPY --from=builder /home/server/package/lib/libSTServer.so /home/server/libSTServer.so\nCOPY --from=builder /home/server/package/bin/SkyrimTogetherServer /home/server/SkyrimTogetherServer\nCOPY --from=builder /home/server/package/bin/crashpad_handler /home/server/crashpad_handler\nCOPY --from=builder /home/server/build/linux/${arch}/release/libSTServer.debug /home/server/libSTServer.debug\nCOPY --from=builder /home/server/build/linux/${arch}/release/SkyrimTogetherServer.debug /home/server/SkyrimTogetherServer.debug\nWORKDIR /home/server\nENTRYPOINT [\"./SkyrimTogetherServer\"]\n\nEXPOSE 10578/udp\n"
}