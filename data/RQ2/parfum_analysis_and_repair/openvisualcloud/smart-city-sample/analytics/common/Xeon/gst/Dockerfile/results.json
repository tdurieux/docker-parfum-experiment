{
  "startTime": 1674215366115,
  "endTime": 1674215367317,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 57,
        "columnEnd": 81
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 27,
        "columnEnd": 96
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 57,
        "columnEnd": 81
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 27,
        "columnEnd": 96
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# smtc_analytics_common_xeon_gst\n\nFROM ubuntu:20.04 as build\n\nRUN DEBIAN_FRONTEND=noninteractive apt-get update -qq && apt-get install -y --no-install-recommends -qq curl && rm -rf /var/lib/apt/lists/*\n\nARG  VA_SERVING_REPO=https://raw.githubusercontent.com/intel/video-analytics-serving\nARG  VA_SERVING_TAG=\"v0.4.1-beta\"\n\nRUN  mkdir -p /home/vaserving/common/utils && touch /home/vaserving/__init__.py /home/vaserving/common/__init__.py /home/vaserving/common/utils/__init__.py && for x in common/utils/logging.py common/settings.py arguments.py ffmpeg_pipeline.py gstreamer_pipeline.py app_destination.py app_source.py gstreamer_app_destination.py gstreamer_app_source.py model_manager.py pipeline.py pipeline_manager.py pipeline.py schema.py vaserving.py; do curl -sSf -o /home/vaserving/$x -L ${VA_SERVING_REPO}/${VA_SERVING_TAG}/vaserving/$x; done\nCOPY *.py /home/\n\nFROM openvisualcloud/xeon-ubuntu2004-analytics-gst:21.6.1\n\nRUN apt-get update -qq && apt-get install -y --no-install-recommends -qq python3-gst-1.0 python3-jsonschema python3-psutil && rm -rf /var/lib/apt/lists/*\n\nCOPY --from=build /home/ /home/\nENV  FRAMEWORK=gstreamer\nENV  PYTHONIOENCODING=UTF-8\n\n####\nARG  USER=docker\nARG  GROUP=docker\nARG  UID\nARG  GID\n## must use ; here to ignore user exist status code\nRUN  [ ${GID} -gt 0 ] && groupadd -f -g ${GID} ${GROUP}; \\\n     [ ${UID} -gt 0 ] && useradd -d /home -M -g ${GID} -K UID_MAX=${UID} -K UID_MIN=${UID} ${USER}; \\\n     chown -R ${UID}:${GID} /home\n####\n\n"
}