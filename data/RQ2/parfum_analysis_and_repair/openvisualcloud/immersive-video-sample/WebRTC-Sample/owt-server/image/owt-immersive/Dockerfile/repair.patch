diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/openvisualcloud/immersive-video-sample/WebRTC-Sample/owt-server/image/owt-immersive/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/openvisualcloud/immersive-video-sample/WebRTC-Sample/owt-server/image/owt-immersive/Dockerfile/repaired.Dockerfile
index 4f992e9..fd548d9 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/openvisualcloud/immersive-video-sample/WebRTC-Sample/owt-server/image/owt-immersive/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/openvisualcloud/immersive-video-sample/WebRTC-Sample/owt-server/image/owt-immersive/Dockerfile/repaired.Dockerfile
@@ -1,10 +1,9 @@
-
 FROM centos:7.6.1810 AS build
 WORKDIR /home
 SHELL ["/bin/bash", "-o", "pipefail", "-c"]
 
 # COMMON BUILD TOOLS
-RUN yum install -y -q bzip2 make autoconf libtool git wget ca-certificates pkg-config gcc gcc-c++ bison flex patch epel-release yum-devel libcurl-devel zlib-devel;
+RUN yum install -y -q bzip2 make autoconf libtool git wget ca-certificates pkg-config gcc gcc-c++ bison flex patch epel-release yum-devel libcurl-devel zlib-devel; rm -rf /var/cache/yum
 
 # Install cmake
 ARG CMAKE_VER=3.13.1
@@ -20,28 +19,28 @@ ARG AUTOMAKE_VER=1.14
 ARG AUTOMAKE_REPO=https://ftp.gnu.org/pub/gnu/automake/automake-${AUTOMAKE_VER}.tar.xz
 RUN wget -O - ${AUTOMAKE_REPO} | tar xJ && \
     cd automake-${AUTOMAKE_VER} && \
-    ./configure --prefix=/usr --libdir=/usr/local/lib64 --disable-doc && \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/usr --libdir=/usr/local/lib64 --disable-doc && \
     make -j8 && \
     make install
 
 # Build NASM
 ARG NASM_VER=2.13.03
 ARG NASM_REPO=https://www.nasm.us/pub/nasm/releasebuilds/${NASM_VER}/nasm-${NASM_VER}.tar.bz2
-RUN  wget ${NASM_REPO} && \
+RUN wget ${NASM_REPO} && \
      tar -xaf nasm* && \
      cd nasm-${NASM_VER} && \
      ./autogen.sh && \
-     ./configure --prefix="/usr/local" --libdir=/usr/local/lib64 && \
+     ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix="/usr/local" --libdir=/usr/local/lib64 && \
      make -j8 && \
      make install
 
 # Build YASM
 ARG YASM_VER=1.3.0
 ARG YASM_REPO=https://www.tortall.net/projects/yasm/releases/yasm-${YASM_VER}.tar.gz
-RUN  wget -O - ${YASM_REPO} | tar xz && \
+RUN wget -O - ${YASM_REPO} | tar xz && \
      cd yasm-${YASM_VER} && \
      sed -i "s/) ytasm.*/)/" Makefile.in && \
-     ./configure --prefix="/usr/local" --libdir=/usr/local/lib64 && \
+     ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix="/usr/local" --libdir=/usr/local/lib64 && \
      make -j8 && \
      make install
 
@@ -51,7 +50,7 @@ ARG NICE_REPO=http://nice.freedesktop.org/releases/libnice-${NICE_VER}.tar.gz
 ARG LIBNICE_PATCH_VER="4.3.1"
 ARG LIBNICE_PATCH_REPO=https://github.com/open-webrtc-toolkit/owt-server/archive/v${LIBNICE_PATCH_VER}.tar.gz
 
-RUN yum install -y -q glib2-devel
+RUN yum install -y -q glib2-devel && rm -rf /var/cache/yum
 
 RUN wget -O - ${NICE_REPO} | tar xz && \
     cd libnice-${NICE_VER} && \
@@ -62,7 +61,7 @@ RUN wget -O - ${NICE_REPO} | tar xz && \
     patch -p1 < owt-server-${LIBNICE_PATCH_VER}/scripts/patches/libnice014-keepalive.patch && \
     patch -p1 < owt-server-${LIBNICE_PATCH_VER}/scripts/patches/libnice014-startcheck.patch && \
     patch -p1 < owt-server-${LIBNICE_PATCH_VER}/scripts/patches/libnice014-closelock.patch && \
-    ./configure --prefix="/usr/local" --libdir=/usr/local/lib64 && \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix="/usr/local" --libdir=/usr/local/lib64 && \
     make -s V= && \
     make install
 
@@ -97,13 +96,13 @@ ARG USRSCTP_FILE="${USRSCTP_VERSION}.tar.gz"
 ARG USRSCTP_EXTRACT="usrsctp-${USRSCTP_VERSION}"
 ARG USRSCTP_URL="https://github.com/sctplab/usrsctp/archive/${USRSCTP_FILE}"
 
-RUN yum install -y -q which
+RUN yum install -y -q which && rm -rf /var/cache/yum
 
 RUN wget -O - ${USRSCTP_URL} | tar xz && \
     mv ${USRSCTP_EXTRACT} usrsctp && \
     cd usrsctp && \
     ./bootstrap && \
-    ./configure --prefix="/usr/local" --libdir=/usr/local/lib64 && \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix="/usr/local" --libdir=/usr/local/lib64 && \
     make && \
     make install
 
@@ -111,16 +110,16 @@ RUN wget -O - ${USRSCTP_URL} | tar xz && \
 ARG SRTP2_VER="2.1.0"
 ARG SRTP2_REPO=https://codeload.github.com/cisco/libsrtp/tar.gz/v${SRTP2_VER}
 
-RUN yum install -y -q curl
+RUN yum install -y -q curl && rm -rf /var/cache/yum
 
-RUN curl -o libsrtp-${SRTP2_VER}.tar.gz ${SRTP2_REPO} && \
+RUN curl -f -o libsrtp-${SRTP2_VER}.tar.gz ${SRTP2_REPO} && \
     tar xzf libsrtp-${SRTP2_VER}.tar.gz && \
     cd libsrtp-${SRTP2_VER} && \
     export PKG_CONFIG_PATH="/usr/local/lib64/pkgconfig" && \
     export CFLAGS="-fPIC" && \
-    ./configure --enable-openssl --prefix="/usr/local" --with-openssl-dir="/usr/local/ssl/" && \
-    make -s V=0  && \
-    make install
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --enable-openssl --prefix="/usr/local" --with-openssl-dir="/usr/local/ssl/" && \
+    make -s V=0 && \
+    make install && rm libsrtp-${SRTP2_VER}.tar.gz
 
 # Build fdk-aac
 ARG FDK_AAC_VER=v0.1.6
@@ -129,7 +128,7 @@ ARG FDK_AAC_REPO=https://github.com/mstorsjo/fdk-aac/archive/${FDK_AAC_VER}.tar.
 RUN wget -O - ${FDK_AAC_REPO} | tar xz && mv fdk-aac-${FDK_AAC_VER#v} fdk-aac && \
     cd fdk-aac && \
     autoreconf -fiv && \
-    ./configure --prefix="/usr/local" --libdir=/usr/local/lib64 --enable-shared && \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix="/usr/local" --libdir=/usr/local/lib64 --enable-shared && \
     make -j8 && \
     make install DESTDIR=/home/build && \
     make install
@@ -147,7 +146,7 @@ ARG FFMPEG_PATCHES_PATH=/home/CDN-${FFMPEG_PATCHES_RELEASE_VER}
 RUN wget -O - ${FFMPEG_PATCHES_RELEASE_URL} | tar xz
 
 
-RUN yum install -y -q libass-devel freetype-devel zlib-devel openssl-devel
+RUN yum install -y -q libass-devel freetype-devel zlib-devel openssl-devel && rm -rf /var/cache/yum
 
 RUN wget -O - ${FFMPEG_REPO} | tar xz && mv FFmpeg-${FFMPEG_VER} FFmpeg && \
     cd FFmpeg ;
@@ -155,7 +154,7 @@ RUN wget -O - ${FFMPEG_REPO} | tar xz && mv FFmpeg-${FFMPEG_VER} FFmpeg && \
 # Compile FFmpeg
 RUN cd /home/FFmpeg && \
     export PKG_CONFIG_PATH="/usr/local/lib64/pkgconfig" && \
-    ./configure --prefix="/usr/local" --libdir=/usr/local/lib64 --enable-shared --disable-static --disable-libvpx --disable-vaapi --enable-libfreetype --enable-libfdk-aac  --enable-nonfree && \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix="/usr/local" --libdir=/usr/local/lib64 --enable-shared --disable-static --disable-libvpx --disable-vaapi --enable-libfreetype --enable-libfdk-aac --enable-nonfree && \
 
     make -j8 && \
     make install && make install DESTDIR="/home/build"
@@ -165,19 +164,19 @@ RUN cd /home/FFmpeg && \
 ARG NODE_VER=v10.21.0
 ARG NODE_REPO=https://nodejs.org/dist/${NODE_VER}/node-${NODE_VER}-linux-x64.tar.xz
 
-RUN yum install -y -q ca-certificates wget xz-utils
+RUN yum install -y -q ca-certificates wget xz-utils && rm -rf /var/cache/yum
 
 RUN wget ${NODE_REPO} && \
     tar xf node-${NODE_VER}-linux-x64.tar.xz && \
     cp node-*/* /usr/local -rf && \
-    rm -rf node-*
+    rm -rf node-* && rm node-${NODE_VER}-linux-x64.tar.xz
 
 # Fetch SVT-HEVC
 ARG SVT_HEVC_VER=v1.4.3
 ARG SVT_HEVC_REPO=https://github.com/intel/SVT-HEVC
 
 RUN yum install -y -q patch centos-release-scl && \
-    yum install -y -q devtoolset-7
+    yum install -y -q devtoolset-7 && rm -rf /var/cache/yum
 
 # hadolint ignore=SC1091
 RUN git clone ${SVT_HEVC_REPO} && \
@@ -219,8 +218,8 @@ ARG OWT_BRANCH_JS_COMMIT="d727af2927731ff16214d73f57964a992258636d"
 ARG WEBRTC_COMMIT="c2aa290cfe4f63d5bfbb6540122a5e6bf2783187"
 
 ARG FDKAAC_LIB=/home/build/usr/local/lib64
-RUN yum install -y -q python-devel glib2-devel boost-devel log4cxx-devel glog-devel gflags-devel
-RUN yum install -y -q patch centos-release-scl devtoolset-7
+RUN yum install -y -q python-devel glib2-devel boost-devel log4cxx-devel glog-devel gflags-devel && rm -rf /var/cache/yum
+RUN yum install -y -q patch centos-release-scl devtoolset-7 && rm -rf /var/cache/yum
 ENV PYTHONIOENCODING=UTF-8
 # Install 360scvp
 # hadolint ignore=SC1091
@@ -259,7 +258,7 @@ RUN git clone -b ${OWT_BRANCH} ${OWTSERVER_REPO} && \
     source /opt/rh/devtoolset-7/enable && \
 
     cd ${SERVER_PATH} && git reset --hard ${OWTSERVER_COMMIT} && \
-    curl https://patch-diff.githubusercontent.com/raw/open-webrtc-toolkit/owt-server/pull/708.patch | git apply && \
+    curl -f https://patch-diff.githubusercontent.com/raw/open-webrtc-toolkit/owt-server/pull/708.patch | git apply && \
 
     # Install node modules for owt
     npm config set proxy=${http_proxy} && \
@@ -290,7 +289,7 @@ RUN git clone -b ${OWT_BRANCH} ${OWTSERVER_REPO} && \
     cp erizoAPI/lib/json.hpp ${SERVER_PATH}/build/libdeps/build/include && \
 
     # Install webrtc for owt
-    cd ${SERVER_PATH}/third_party && mkdir webrtc  && cd webrtc &&\
+    cd ${SERVER_PATH}/third_party && mkdir webrtc && cd webrtc && \
     export GIT_SSL_NO_VERIFY=1 && \
     git clone -b 59-server ${WEBRTC_REPO} src && cd src && \
     git reset --hard ${WEBRTC_COMMIT} && \
@@ -299,11 +298,11 @@ RUN git clone -b ${OWT_BRANCH} ${OWTSERVER_REPO} && \
     ./tools-woogeen/build.sh && \
 
     # Get js client sdk for owt
-    cd /home && git clone -b ${OWT_BRANCH_JS} ${OWT_SDK_REPO} && cd owt-client-javascript/scripts && git reset --hard ${OWT_BRANCH_JS_COMMIT}  && npm install && grunt  && \
+    cd /home && git clone -b ${OWT_BRANCH_JS} ${OWT_SDK_REPO} && cd owt-client-javascript/scripts && git reset --hard ${OWT_BRANCH_JS_COMMIT} && npm install && grunt && \
     export LD_LIBRARY_PATH=/usr/local/lib64 && \
     #Build and pack owt
     cd ${SERVER_PATH} && export CPLUS_INCLUDE_PATH=/usr/local/include/svt-hevc && export PKG_CONFIG_PATH=/usr/local/lib64/pkgconfig && ./scripts/build.js -t mcu -r -c && \
-    ./scripts/pack.js -t all --install-module --no-pseudo --sample-path /home/owt-client-javascript/dist/samples/conference
+    ./scripts/pack.js -t all --install-module --no-pseudo --sample-path /home/owt-client-javascript/dist/samples/conference && npm cache clean --force;
 
 FROM centos:7.6.1810
 LABEL Description="This is the image for owt development on CentOS 7.6"
@@ -315,12 +314,12 @@ WORKDIR /home
 ARG NODE_VER=v10.21.0
 ARG NODE_REPO=https://nodejs.org/dist/${NODE_VER}/node-${NODE_VER}-linux-x64.tar.xz
 
-RUN yum install -y -q ca-certificates wget xz-utils
+RUN yum install -y -q ca-certificates wget xz-utils && rm -rf /var/cache/yum
 
 RUN wget ${NODE_REPO} && \
     tar xf node-${NODE_VER}-linux-x64.tar.xz && \
     cp node-*/* /usr/local -rf && \
-    rm -rf node-*
+    rm -rf node-* && rm node-${NODE_VER}-linux-x64.tar.xz
 
 COPY --from=build /home/owt-server/dist /home/owt
 COPY --from=build /home/build /
@@ -341,5 +340,5 @@ COPY scripts/scripts/ /home/scripts/
 RUN cd /home/scripts &&\
     npm config set proxy=${http_proxy} && \
     npm config set https-proxy=${http_proxy} && \
-    npm install
+    npm install && npm cache clean --force;