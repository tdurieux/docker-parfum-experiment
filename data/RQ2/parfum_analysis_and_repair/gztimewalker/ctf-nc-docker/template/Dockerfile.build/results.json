{
  "startTime": 1674219700544,
  "endTime": 1674219701959,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 17,
        "columnEnd": 32
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 18,
        "columnEnd": 72
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nikolaik/python-nodejs:python3.10-nodejs18-slim as build\n\nRUN npm config set registry {npm_mirror_url} &&\\\n    sed -i s@/deb.debian.org/@/{mirrors_base_url}/@g /etc/apt/sources.list && \\\n    sed -i s@/security.debian.org/@/{mirrors_base_url}/@g /etc/apt/sources.list && \\\n    apt update && apt install -y --no-install-recommends build-essential && rm -rf /var/lib/apt/lists/*;\n\n{node_server}\n\nRUN cd /build && npm i --verbose && npm cache clean --force;\n\nFROM nikolaik/python-nodejs:python3.10-nodejs18-slim as final\n\nENV TZ Asia/Shanghai\nENV LANG C.UTF-8\nENV DEBIAN_FRONTEND=noninteractive\n\nRUN useradd -m ctf && \\\n    mkdir /home/ctf/run/ && \\\n    mkdir /var/log/ctf && \\\n    mkdir /home/ctf/assets/ && \\\n    mkdir -p /home/ctf/web/static && \\\n    sed -i s@/deb.debian.org/@/{mirrors_base_url}/@g /etc/apt/sources.list && \\\n    sed -i s@/security.debian.org/@/{mirrors_base_url}/@g /etc/apt/sources.list && \\\n    npm config set registry {npm_mirror_url} && \\\n    cp /lib/x86_64-linux-gnu/libc-* /home/ctf/web/static && \\\n    cp -ld /home/ctf/web/static/libc-* /home/ctf/web/static/libc.so && \\\n    cp /lib/x86_64-linux-gnu/ld-linux* /home/ctf/web/static && \\\n    cp -ld /home/ctf/web/static/ld-* /home/ctf/web/static/ld.so\n\nRUN apt update && apt upgrade -y &&\\\n  apt install -y --no-install-recommends xinetd netcat {apt_requirements} &&\\\n  apt clean && rm -rf /var/lib/apt/lists/*\n\n# pip requirements\nRUN python -m pip install {pypi_index} --no-cache-dir --upgrade pip && \\\n    python -m pip install {pypi_index} --no-cache-dir {pip_requirements}\n\n# extra command\n{extra_cmd}\n\nCOPY --from=build /build /home/ctf/web/\nCOPY web/favicon.ico /home/ctf/web/static/\nCOPY tmp/run /home/ctf/run/\nCOPY xinetd /etc/xinetd.d/ctf\nCOPY tmp/start.sh /\n\n\nRUN chown -R root:root /home && \\\n  chmod -R 711 /home && \\\n  chmod 710 /start.sh && \\\n  chmod 711 /etc/xinetd.d/ctf\n\nWORKDIR /home/ctf\n# copy challenge\n{copy_challenge_cmd}\n\n# chown & chmod\n{chmod_cmd}\n\nWORKDIR /\n\nCMD [\"sh\",\"./start.sh\"]\n"
}