{
  "startTime": 1674219749978,
  "endTime": 1674219751607,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 98,
        "lineEnd": 98,
        "columnStart": 4,
        "columnEnd": 70
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM php:%%PHP_VERSION%%-%%VARIANT%%\n\n# entrypoint.sh and cron.sh dependencies\nRUN set -ex; \\\n    apk add --no-cache \\\n        rsync \\\n# For mail() support\n        msmtp \\\n        shadow \\\n        tini;\n\nENV GOSU_VERSION 1.14\nRUN set -eux; \\\n\t\\\n\tapk add --no-cache --virtual .gosu-deps \\\n\t\tca-certificates \\\n\t\tdpkg \\\n\t\tgnupg \\\n\t; \\\n\t\\\n\tdpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\"; \\\n\twget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\"; \\\n\twget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\"; \\\n\t\\\n# verify the signature\n\texport GNUPGHOME=\"$(mktemp -d)\"; \\\n\tgpg --batch --keyserver hkps://keys.openpgp.org --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4; \\\n\tgpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu; \\\n\tcommand -v gpgconf && gpgconf --kill all || :; \\\n\trm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc; \\\n\t\\\n# clean up fetch dependencies\n\tapk del --no-network .gosu-deps; \\\n\t\\\n\tchmod +x /usr/local/bin/gosu; \\\n# verify that the binary works\n\tgosu --version; \\\n\tgosu nobody true\n\n# install the PHP extensions we need\n# see https://friendi.ca/resources/requirements/\nRUN set -ex; \\\n\n    apk add --no-cache --virtual .build-deps \\\n        mariadb-client \\\n        bash \\\n        $PHPIZE_DEPS \\\n        libpng-dev \\\n        libjpeg-turbo-dev \\\n        imagemagick-dev \\\n        libtool \\\n        libmemcached-dev \\\n        cyrus-sasl-dev \\\n        libjpeg-turbo-dev \\\n        freetype-dev \\\n        libwebp-dev \\\n        librsvg \\\n        pcre-dev \\\n        libzip-dev \\\n        icu-dev \\\n        openldap-dev \\\n    ; \\\n\n    docker-php-ext-configure gd \\\n        --with-freetype \\\n        --with-jpeg \\\n        --with-webp \\\n    ; \\\n\n    docker-php-ext-install -j \"$(nproc)\" \\\n        pdo_mysql \\\n        exif \\\n        gd \\\n        zip \\\n        opcache \\\n        pcntl \\\n        ldap \\\n    ; \\\n\n# pecl will claim success even if one install fails, so we need to perform each install separately\n    pecl install APCu-%%APCU_VERSION%%; \\\n    pecl install memcached-%%MEMCACHED_VERSION%%; \\\n    pecl install redis-%%REDIS_VERSION%%; \\\n    pecl install imagick-%%IMAGICK_VERSION%%; \\\n\n    docker-php-ext-enable \\\n        apcu \\\n        memcached \\\n        redis \\\n        imagick \\\n    ; \\\n\n    runDeps=\"$( \\\n        scanelf --needed --nobanner --format '%n#p' --recursive /usr/local/lib/php/extensions \\\n            | tr ',' '\\n' \\\n            | sort -u \\\n            | awk 'system(\"[ -e /usr/local/lib\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \\\n    )\"; \\\n    apk add --no-cache --no-network --virtual .friendica-phpext-rundeps $runDeps; \\\n    apk del --no-network .build-deps;\n\n# set recommended PHP.ini settings\nENV PHP_MEMORY_LIMIT 512M\nENV PHP_UPLOAD_LIMIT 512M\nRUN set -ex; \\\n    { \\\n        echo 'opcache.enable=1' ; \\\n        echo 'opcache.interned_strings_buffer=8'; \\\n        echo 'opcache.max_accelerated_files=10000'; \\\n        echo 'opcache.memory_consumption=128'; \\\n        echo 'opcache.save_comments=1'; \\\n        echo 'opcache.revalidte_freq=1'; \\\n    } > /usr/local/etc/php/conf.d/opcache-recommended.ini; \\\n    \\\n    { \\\n        echo sendmail_path = \"/usr/bin/msmtp -t\"; \\\n    } > /usr/local/etc/php/conf.d/sendmail.ini; \\\n    \\\n    echo 'apc.enable_cli=1' >> /usr/local/etc/php/conf.d/docker-php-ext-apcu.ini; \\\n    \\\n    { \\\n        echo 'memory_limit=${PHP_MEMORY_LIMIT}'; \\\n        echo 'upload_max_filesize=${PHP_UPLOAD_LIMIT}'; \\\n        echo 'post_max_size=${PHP_UPLOAD_LIMIT}'; \\\n    } > /usr/local/etc/php/conf.d/friendica.ini; \\\n    \\\n    mkdir /var/www/data; \\\n    chown -R www-data:root /var/www; \\\n    chmod -R g=u /var/www\n\nVOLUME /var/www/html\n%%VARIANT_EXTRAS%%\n\n# 39 = LOG_PID | LOG_ODELAY | LOG_CONS | LOG_PERROR\nENV FRIENDICA_SYSLOG_FLAGS 39\nENV FRIENDICA_VERSION \"%%VERSION%%\"\nENV FRIENDICA_ADDONS \"%%VERSION%%\"\n%%DOWNLOAD_SHA256%%\n%%INSTALL_EXTRAS%%\nCOPY *.sh upgrade.exclude /\nCOPY config/* /usr/src/friendica/config/\n\nENTRYPOINT [\"/%%ENTRYPOINT%%\"]\nCMD [\"%%CMD%%\"]\n"
}