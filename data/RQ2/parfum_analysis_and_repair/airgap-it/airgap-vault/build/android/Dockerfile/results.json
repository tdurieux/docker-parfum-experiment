{
  "startTime": 1674248772181,
  "endTime": 1674248773235,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 2,
        "lineEnd": 8,
        "columnStart": 25,
        "columnEnd": 27
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 2,
        "lineEnd": 8,
        "columnStart": 25,
        "columnEnd": 27
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM beevelop/ionic:v2021.06.1\n\nRUN apt-get update -y && apt-get install --no-install-recommends -y \\\n    bzip2 \\\n    build-essential \\\n    pkg-config \\\n    libjpeg-dev \\\n    libcairo2-dev \\\n    openjdk-11-jdk-headless && rm -rf /var/lib/apt/lists/*;\n\nENV JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64\n\n# create app directory\nRUN mkdir /app\nWORKDIR /app\n\nRUN yarn global add ionic@5.4.0 @capacitor/core@3.2.5 @capacitor/cli@3.2.5 && yarn cache clean --force && yarn global add n && n 16.13.1\n\n# Install app dependencies, using wildcard if package-lock exists and copy capacitor configs and ionic configs\nCOPY package.json yarn.lock apply-diagnostic-modules.js capacitor.config.ts ionic.config.json /app/\n\n# install dependencies\n# run ionic android build\nRUN yarn install --frozen-lockfile && mkdir www && ionic info && yarn cache clean;\n\n# Bundle app source\nCOPY . /app\n\n# set version code\nARG BUILD_NR\nRUN sed -i -e \"s/versionCode 1/versionCode $BUILD_NR/g\" /app/android/app/build.gradle\n\n# disable pure getters due to https://github.com/angular/angular-cli/issues/11439\n# configure mangle (keep_fnames) for bitcoinjs https://github.com/bitcoinjs/bitcoinjs-lib/issues/959\n# remove unused cordova-diagnostic-plugin features\n# jetify dependencies\n# build ionic\n# copy ionic build\n# accept licenses\n# clean project\n# build apk\n# copy release-apk\n# this has nothing to do with debug!!!:\n# copy release-apk\n# sign using debug key\nRUN yarn configure-mangle \\\n    && yarn apply-diagnostic-modules \\\n    && yarn jetifier \\\n    && ionic build --prod \\\n    && cap sync android \\\n    && echo y | sdkmanager --sdk_root=${ANDROID_SDK_ROOT} --update \\\n    && /app/android/gradlew --project-dir /app/android clean \\\n    && /app/android/gradlew --project-dir /app/android build \\\n    && cp /app/android/app/build/outputs/apk/release/app-release-unsigned.apk android-release-unsigned.apk \\\n    && cp android-release-unsigned.apk android-debug.apk \\\n    && cp /app/android/app/build/outputs/apk/appium/app-appium-unsigned.apk android-appium-unsigned.apk \\\n    && cp android-appium-unsigned.apk android-appium.apk \\\n    && zipalign -p -f -v 4 android-debug.apk android-debug-aligned.apk \\\n    && apksigner sign --ks ./build/android/debug.keystore --ks-key-alias androiddebugkey --ks-pass pass:android --key-pass pass:android android-debug-aligned.apk \\\n    && zipalign -p -f -v 4 android-appium.apk android-appium-aligned.apk \\\n    && apksigner sign --ks ./build/android/debug.keystore --ks-key-alias androiddebugkey --ks-pass pass:android --key-pass pass:android android-appium-aligned.apk \\"
}