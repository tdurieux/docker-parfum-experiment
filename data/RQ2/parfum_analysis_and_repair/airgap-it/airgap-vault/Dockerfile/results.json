{
  "startTime": 1674248250455,
  "endTime": 1674248251646,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 22,
        "columnEnd": 85
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 22,
        "columnEnd": 85
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 27
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 51
      }
    }
  ],
  "repairedDockerfile": "FROM node:16.13.1\n\n# See https://crbug.com/795759\nRUN apt-get update && apt-get install --no-install-recommends -yq libgconf-2-4 bzip2 build-essential libxtst6 && rm -rf /var/lib/apt/lists/*;\nRUN apt-get install --no-install-recommends -yq git && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 40976EAF437D05B5\nRUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 3B4FE6ACC0B21F32\nRUN echo \"deb http://us-west-2.ec2.archive.ubuntu.com/ubuntu/ trusty multiverse \\\ndeb http://us-west-2.ec2.archive.ubuntu.com/ubuntu/ trusty-updates multiverse \\\ndeb http://us-west-2.ec2.archive.ubuntu.com/ubuntu/ trusty-backports main restricted universe multiverse\" | tee /etc/apt/sources.list.d/multiverse.list \n\n# Install latest chrome dev package and fonts to support major charsets (Chinese, Japanese, Arabic, Hebrew, Thai and a few others)\n# Note: this installs the necessary libs to make the bundled version of Chromium that Puppeteer\n# installs, work.\nRUN apt-get update && apt-get install -y wget --no-install-recommends \\\n  && wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - \\\n  && sh -c 'echo \"deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main\" >> /etc/apt/sources.list.d/google.list' \\\n  && apt-get update \\\n  && apt-get install -y google-chrome-unstable fonts-ipafont-gothic fonts-wqy-zenhei fonts-thai-tlwg fonts-kacst  libglu1 ttf-freefont libxss1 libglib2.0-0 \\\n  --no-install-recommends \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && apt-get purge --auto-remove -y curl \\\n  && rm -rf /src/*.deb\n\n# create app directory\nRUN mkdir /app\nWORKDIR /app\n\n# Install app dependencies, using wildcard if package-lock exists\nCOPY install-build-deps.js /app\nCOPY install-test-deps.js /app\nCOPY package.json /app\nCOPY yarn.lock /app\nCOPY apply-diagnostic-modules.js /app\n\nRUN yarn install-test-dependencies\n\n# install dependencies\nRUN yarn install && yarn cache clean;\n\n# install static webserver\nRUN yarn global add node-static\n\n# Bundle app source\nCOPY . /app\n\n# set to production\nRUN export NODE_ENV=production\n\n# build\nRUN yarn build:prod\n\nCMD [\"static\", \"-p\", \"8100\", \"-a\", \"0.0.0.0\", \"www\"]\n"
}