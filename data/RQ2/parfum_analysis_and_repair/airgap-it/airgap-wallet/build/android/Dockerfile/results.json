{
  "startTime": 1674215530415,
  "endTime": 1674215531524,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 96
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 9
      }
    },
    {
      "rule": "npmCacheCleanUseForce",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 2,
        "lineEnd": 8,
        "columnStart": 25,
        "columnEnd": 27
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 2,
        "lineEnd": 8,
        "columnStart": 25,
        "columnEnd": 27
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM beevelop/ionic:v2021.06.1\n\nRUN apt-get update -y && apt-get install --no-install-recommends -y \\\n    bzip2 \\\n    build-essential \\\n    pkg-config \\\n    libjpeg-dev \\\n    libcairo2-dev \\\n    openjdk-11-jdk-headless && rm -rf /var/lib/apt/lists/*;\n\nENV JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64\n\n# create app directory\nRUN mkdir /app\nWORKDIR /app\n\nRUN npm install -g npm@7.7.6 @capacitor/core@3.2.5 @capacitor/android@3.2.5 @capacitor/cli@3.2.5 && npm cache clean --force;\nRUN npm cache clean --force -f\nRUN npm install -g n && npm cache clean --force;\nRUN n 15.14.0\n\n# Install app dependencies, using wildcard if package-lock exists\nCOPY package.json /app/package.json\nCOPY package-lock.json /app/package-lock.json\nCOPY config /app/config\nCOPY apply-diagnostic-modules.js /app\nCOPY fix-qrscanner-gradle.js /app\n\n# install dependencies\nRUN npm i && npm cache clean --force;\n\n# copy capacitor configs and ionic configs\nCOPY capacitor.config.ts /app/capacitor.config.ts\nCOPY ionic.config.json /app/ionic.config.json\n\nRUN mkdir www\n\n# run ionic android build\nRUN ionic info\n\n# Bundle app source\nCOPY . /app\n\n# post-install hook, to be safe if it got cached\nRUN node config/patch_crypto.js\n\n# set version code\nARG BUILD_NR\nRUN sed -i -e \"s/versionCode 1/versionCode $BUILD_NR/g\" /app/android/app/build.gradle\n\n# disable pure getters due to https://github.com/angular/angular-cli/issues/11439\n# configure mangle (keep_fnames) for bitcoinjs https://github.com/bitcoinjs/bitcoinjs-lib/issues/959\nRUN npm run prepare-prod-build\n\n# remove unused cordova-diagnostic-plugin features\nRUN npm run apply-diagnostic-modules\n\n# browserify coin-lib\nRUN npm run browserify-coinlib\n\n# jetify dependencies\nRUN npx jetifier\n\n# build ionic\nRUN ionic build --prod\n\n# copy ionic build\nRUN cap sync android\n\n# accept licenses\nRUN echo y | sdkmanager --sdk_root=${ANDROID_SDK_ROOT} --update\n\n# clean project\nRUN /app/android/gradlew --project-dir /app/android clean\n\n# build apk\nRUN /app/android/gradlew --project-dir /app/android build\n\n# copy release-apk\nRUN cp /app/android/app/build/outputs/apk/playstore/release/app-playstore-release-unsigned.apk android-release-unsigned.apk\n\nRUN cp android-release-unsigned.apk android-debug.apk\n\n# sign using debug key\nRUN jarsigner -verbose -keystore ./build/android/debug.keystore -storepass android -keypass android android-debug.apk androiddebugkey\n"
}