{
  "startTime": 1674255427793,
  "endTime": 1674255428408,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:15.14.0 as build\n\n# create app directory\nRUN mkdir /app\nWORKDIR /app\n\n# Install app dependencies, using wildcard if package-lock exists\nCOPY package.json /app\nCOPY package-lock.json /app\nCOPY config /app/config\nCOPY apply-diagnostic-modules.js /app\nCOPY fix-qrscanner-gradle.js /app\n\n# install dependencies\nRUN npm install && npm cache clean --force;\n\n# browserify coin-lib\nRUN npm run browserify-coinlib\n\n# Bundle app source\nCOPY . /app\n\n# set to production\nRUN export NODE_ENV=production\n\n# post-install hook, to be safe if it got cached\nRUN node config/patch_crypto.js\n\n# build\nRUN npx ionic build --prod\n\n###################################\n\nFROM nginx:1-alpine\n\nCOPY --from=build /app/www /usr/share/nginx/html\nCOPY nginx.conf /etc/nginx/nginx.conf\n\nEXPOSE 80\n\nCMD [ \"nginx\", \"-g\", \"daemon off;\" ]\n"
}