{
  "startTime": 1674217839820,
  "endTime": 1674217840710,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 38,
        "columnEnd": 54
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 51,
        "columnEnd": 67
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 58,
        "columnEnd": 74
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 18,
        "columnEnd": 34
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 71,
        "columnEnd": 87
      }
    }
  ],
  "repairedDockerfile": "FROM node:lts-bullseye-slim as base\n\nARG VERSION\nARG REVISION\n\nENV VERSION=$VERSION\nENV REVISION=$REVISION\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n  build-essential git libvips libcairo2-dev \\\n  libpango1.0-dev libjpeg-dev libgif-dev librsvg2-dev \\\n  && apt-get clean \\\n  && rm -rf /var/lib/apt/lists/*\n\nRUN mkdir -p /usr/share/fonts/opentype/noto\nCOPY ./assets/fonts/NotoSansKR-Regular.otf /usr/share/fonts/opentype/noto/NotoSansKR-Regular.otf\nRUN fc-cache -fv\n\nWORKDIR /usr/src/bot\n\n\nFROM base as builder\n\nCOPY . .\n\nRUN yarn install --frozen-lockfile && yarn cache clean && yarn cache clean;\n\nRUN yarn build && yarn cache clean;\n\n\nFROM base as production\n\nCOPY --from=builder /usr/src/bot/dist ./dist\n\nCOPY ./assets ./assets\nCOPY package.json .\nCOPY yarn.lock .\n\nRUN yarn install --production --frozen-lockfile && yarn cache clean && yarn cache clean;\n\nCMD yarn start\n"
}