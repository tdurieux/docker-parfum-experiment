{
  "startTime": 1674254169781,
  "endTime": 1674254171906,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 55
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 55
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 44
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 68
      }
    }
  ],
  "repairedDockerfile": "# Docker environment for ubuntu, python3.6\n#\n# Usage:\n#  * build the image:\n#    $ docker build -t pynta .\n#  * start the image:\n#    docker run -it pynta\n\n# Latest version of ubuntu\nFROM ubuntu:latest\n\nENV DEBIAN_FRONTEND=noninteractive\n\n# Install system packages\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y git openmpi-bin libopenmpi-dev && \\\n    apt-get install --no-install-recommends -y wget cmake meson libopenblas-dev && rm -rf /var/lib/apt/lists/*;\n\n# Install python\n\nRUN apt-get install --no-install-recommends -y python3.6 python3-pip && rm -rf /var/lib/apt/lists/*;\n\n# Install Python packages\n\nRUN pip3 install --no-cache-dir --upgrade pip && \\\n    python3 -m pip install --upgrade pip && \\\n    python3 -m pip install flake8 pytest && \\\n    python3 -m pip install numpy scipy cffi\n\nWORKDIR /build\n\n# Install xtb-python\n\nRUN git clone https://github.com/grimme-lab/xtb-python.git && \\\n    cd xtb-python %% \\\n    git submodule update --init %% \\\n    meson setup build --prefix=$PWD --libdir=xtb/xtb --buildtype release --optimization 2 -Dla_backend=openblas %% \\\n    ninja -C build install && \\\n    pip install --no-cache-dir --user -e .\n\n# Install PostgreSQL\nRUN wget https://sbp.enterprisedb.com/getfile.jsp?fileid=1257417&_ga=2.119848136.1712599154.1611463162-349055021.1611463162 && \\\n    wait && \\\n    mv 'getfile.jsp?fileid=1257417' postgresql.tar.gz && \\\n    tar -xvzf postgresql.tar.gz && \\\n    rm postgresql.tar.gz && \\\n    echo 'export PATH=./pgsql/bin:$PATH' >> ~/.bashrc\n\n# Install Balsam\n\nRUN git clone https://github.com/balsam-alcf/balsam.git && \\\n    cd balsam && \\\n    python3 setup.py install\n\n# RUN git clone https://github.com/zadorlab/sella.git &&\\\n#     cd /build/sella && \\\n#     git reset --hard 463e0556089f6af3385bed4aa7b49ee040cd19d1 && \\\n#     python3 setup.py install\n\n# Set pynta code path\nENV CODE_DIR /build/pynta\n\n# Copy pynta source files\n\nCOPY . $CODE_DIR\n\n# Install pynta\n\nRUN cd $CODE_DIR && \\\n    python3 setup.py install\n\n# RUN mkdir -p $CODE_DIR\n"
}