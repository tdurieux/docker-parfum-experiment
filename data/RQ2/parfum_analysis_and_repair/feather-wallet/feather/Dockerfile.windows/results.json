{
  "startTime": 1674248504985,
  "endTime": 1674248507117,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 54,
        "lineEnd": 69,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 83,
        "lineEnd": 84,
        "columnStart": 4,
        "columnEnd": 66
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 94,
        "lineEnd": 96,
        "columnStart": 4,
        "columnEnd": 55
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 106,
        "lineEnd": 106,
        "columnStart": 4,
        "columnEnd": 108
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 115,
        "lineEnd": 116,
        "columnStart": 4,
        "columnEnd": 78
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 125,
        "lineEnd": 126,
        "columnStart": 4,
        "columnEnd": 111
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 136,
        "lineEnd": 136,
        "columnStart": 4,
        "columnEnd": 90
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 164,
        "lineEnd": 164,
        "columnStart": 4,
        "columnEnd": 172
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 132,
        "lineEnd": 132,
        "columnStart": 4,
        "columnEnd": 111
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 145,
        "lineEnd": 145,
        "columnStart": 4,
        "columnEnd": 112
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 13
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:20.04\n\nARG THREADS=1\nARG QT_VERSION=v5.15.5-lts-lgpl\nENV SOURCE_DATE_EPOCH=1397818193\nENV DEBIAN_FRONTEND=noninteractive\n\n# Feather build flags\nENV CHECK_UPDATES=ON\nENV WITH_SCANNER=ON\n\nENV OPENSSL_ROOT_DIR=/usr/local/openssl/\n\nRUN apt update && \\\n    apt install --no-install-recommends -y \\\n    curl wget zip automake build-essential gcc-mingw-w64 g++-mingw-w64 gettext git libtool pkg-config \\\n    python \\\n# zbar\n    autopoint && \\\n    rm -rf /var/lib/apt/lists/*\n\nRUN update-alternatives --set x86_64-w64-mingw32-g++ $(which x86_64-w64-mingw32-g++-posix) && \\\n    update-alternatives --set x86_64-w64-mingw32-gcc $(which x86_64-w64-mingw32-gcc-posix)\n\n# The version from ubuntu repo is too old\nRUN git clone -b v3.22.2 --depth 1 https://github.com/Kitware/CMake && \\\n    cd CMake && \\\n    git reset --hard 8428e39ed9cddb3b7f1a6f7a58cb8617503183d2 && \\\n    ./bootstrap -- -DCMAKE_USE_OPENSSL=OFF && \\\n    make -j$THREADS && \\\n    make -j$THREADS install && \\\n    rm -rf $(pwd)\n\nRUN git clone -b master https://github.com/monero-project/monero && \\\n    cd monero && \\\n    git reset --hard 9aab19f349433687c7aaf2c1cbc5751e5912c0aa && \\\n    cp -a contrib/depends / && \\\n    cd .. && \\\n    rm -rf monero\n\nRUN make -j$THREADS -C /depends HOST=x86_64-w64-mingw32 NO_QT=1\n\nCOPY contrib/QTBUG-92199-fix.patch .\nRUN git clone git://code.qt.io/qt/qt5.git -b ${QT_VERSION} --depth 1 && \\\n    cd qt5 && \\\n    git clone git://code.qt.io/qt/qtbase.git -b ${QT_VERSION} --depth 1 && \\\n    git clone git://code.qt.io/qt/qtimageformats.git -b ${QT_VERSION} --depth 1 && \\\n    git clone git://code.qt.io/qt/qtmultimedia.git -b ${QT_VERSION} --depth 1 && \\\n    git clone git://code.qt.io/qt/qtsvg.git -b ${QT_VERSION} --depth 1 && \\\n    git clone git://code.qt.io/qt/qttools.git -b ${QT_VERSION} --depth 1 && \\\n    git clone git://code.qt.io/qt/qttranslations.git -b ${QT_VERSION} --depth 1 && \\\n    git clone git://code.qt.io/qt/qtxmlpatterns.git -b ${QT_VERSION} --depth 1 && \\\n    git clone git://code.qt.io/qt/qtwebsockets.git -b ${QT_VERSION} --depth 1 && \\\n    cd qtbase && cat ../../QTBUG-92199-fix.patch && git apply ../../QTBUG-92199-fix.patch && cd .. && \\\n    OPENSSL_LIBS=\"-lssl -lcrypto -lws2_32\" \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n    --prefix=/depends/x86_64-w64-mingw32 -xplatform win32-g++ \\\n    -device-option CROSS_COMPILE=/usr/bin/x86_64-w64-mingw32- \\\n    -I $(pwd)/qtbase/src/3rdparty/angle/include \\\n    -opensource -confirm-license -release -static -static-runtime -no-opengl \\\n    -no-avx -openssl-linked -I /depends/x86_64- -L /depends/x86_64-w64-mingw32/lib \\\n    -qt-freetype -qt-harfbuzz -qt-libjpeg -qt-libpng -qt-pcre -qt-zlib \\\n    -skip gamepad -skip location -skip qt3d -skip qtactiveqt -skip qtandroidextras \\\n    -skip qtcanvas3d -skip qtcharts -skip qtconnectivity -skip qtdatavis3d -skip qtdoc \\\n    -skip qtgamepad -skip qtlocation -skip qtmacextras -skip qtnetworkauth -skip qtpurchasing \\\n    -skip qtscript -skip qtscxml -skip qtsensors -skip qtserialbus -skip qtserialport \\\n    -skip qtspeech -skip qttools -skip qtvirtualkeyboard -skip qtwayland -skip qtwebchannel \\\n    -skip qtwebengine -skip qtwebview -skip qtwinextras -skip qtx11extras \\\n    -skip qtdeclarative -skip qtquickcontrols -skip qtquickcontrols2 \\\n    -skip serialbus -skip webengine \\\n    -nomake examples -nomake tests -nomake tools && \\\n    make -j$THREADS && \\\n    make -j$THREADS install && \\\n    cd qttools/src/linguist/lrelease && \\\n    ../../../../qtbase/bin/qmake && \\\n    make -j$THREADS && \\\n    make -j$THREADS install && \\\n    cd ../../../.. && \\\n    rm -rf $(pwd)\n\nRUN git clone -b libgpg-error-1.38 --depth 1 git://git.gnupg.org/libgpg-error.git && \\\n    cd libgpg-error && \\\n    git reset --hard 71d278824c5fe61865f7927a2ed1aa3115f9e439 && \\\n    ./autogen.sh && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --disable-shared --enable-static --disable-doc --disable-tests \\\n    --host=x86_64-w64-mingw32 --prefix=/depends/x86_64-w64-mingw32 && \\\n    make -j$THREADS && \\\n    make -j$THREADS install && \\\n    cd .. && \\\n    rm -rf libgpg-error\n\nRUN git clone -b libgcrypt-1.8.5 --depth 1 git://git.gnupg.org/libgcrypt.git && \\\n    cd libgcrypt && \\\n    git reset --hard 56606331bc2a80536db9fc11ad53695126007298 && \\\n    ./autogen.sh && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --disable-shared --enable-static --disable-doc \\\n    --host=x86_64-w64-mingw32 --prefix=/depends/x86_64-w64-mingw32 \\\n    --with-gpg-error-prefix=/depends/x86_64-w64-mingw32 && \\\n    make -j$THREADS && \\\n    make -j$THREADS install && \\\n    cd .. && \\\n    rm -rf libgcrypt\n\n# zlib -> libpng\nRUN git clone -b v1.2.11 --depth 1 https://github.com/madler/zlib && \\\n    cd zlib && \\\n    git reset --hard cacf7f1d4e3d44d871b605da3b647f07d718623f && \\\n    CC=x86_64-w64-mingw32-gcc AR=x86_64-w64-mingw32-ar ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --static --prefix=/usr/x86_64-w64-mingw32 && \\\n    make -j$THREADS && \\\n    make -j$THREADS install && \\\n    rm -rf $(pwd)\n\n# libpng -> libqrencode\nRUN git clone -b libpng16 --depth 1 https://github.com/glennrp/libpng.git && \\\n    cd libpng && \\\n    git reset --hard a37d4836519517bdce6cb9d956092321eca3e73b && \\\n    CPPFLAGS=\"-I/depends/x86_64-w64-mingw32/include\" LDFLAGS=\"-L/depends/x86_64-w64-mingw32/lib\" \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n    --host=x86_64-w64-mingw32 --prefix=/depends/x86_64-w64-mingw32 && \\\n    make -j$THREADS && \\\n    make -j$THREADS install && \\\n    rm -rf $(pwd)\n\nRUN git clone -b v4.0.2 --depth 1 https://github.com/fukuchi/libqrencode.git && \\\n    cd libqrencode && \\\n    git reset --hard 59ee597f913fcfda7a010a6e106fbee2595f68e4 && \\\n    ./autogen.sh && \\\n    CPPFLAGS=\"-I/depends/x86_64-w64-mingw32/include\" LDFLAGS=\"-L/depends/x86_64-w64-mingw32/lib\" \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n    --disable-shared --enable-static --host=x86_64-w64-mingw32 --prefix=/depends/x86_64-w64-mingw32 && \\\n    make -j$THREADS && \\\n    make -j$THREADS install && \\\n    rm -rf $(pwd)\n\nRUN wget https://ftp.gnu.org/pub/gnu/libiconv/libiconv-1.16.tar.gz && \\\n    echo \"e6a1b1b589654277ee790cce3734f07876ac4ccfaecbee8afa0b649cf529cc04  libiconv-1.16.tar.gz\" | sha256sum -c && \\\n    tar -xzf libiconv-1.16.tar.gz && \\\n    rm libiconv-1.16.tar.gz && \\\n    cd libiconv-1.16 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-static --host=x86_64-w64-mingw32 --prefix=/usr/x86_64-w64-mingw32 && \\\n    make -j$THREADS && \\\n    make -j$THREADS install && \\\n    rm -rf $(pwd)\n\n# TOR_VERSION is used by CMAKE to determine embedded version\nENV TOR_VERSION=0.4.7.8\nENV TOR_DIR=/tor/Tor/\nRUN wget https://dist.torproject.org/torbrowser/11.0.15/tor-win64-0.4.7.8.zip && \\\n    echo \"14115567eb9674c79481509ac97d4a7b76c80a36966dd9864989a96670440757  tor-win64-0.4.7.8.zip\" | sha256sum -c && \\\n    unzip tor-win64-0.4.7.8.zip -d tor && \\\n    rm tor-win64-0.4.7.8.zip\n\nRUN git clone https://github.com/nih-at/libzip.git && \\\n    cd libzip && \\\n    git reset --hard 66e496489bdae81bfda8b0088172871d8fda0032 && \\\n    cmake -DCMAKE_INSTALL_PREFIX=/depends/x86_64-w64-mingw32 \\\n          -DCMAKE_TOOLCHAIN_FILE=/depends/x86_64-w64-mingw32/share/toolchain.cmake \\\n          -DBUILD_SHARED_LIBS=OFF \\\n          -DCMAKE_PREFIX_PATH=/usr/x86_64-w64-mingw32 && \\\n    make -j$THREADS && \\\n    make -j$THREADS install && \\\n    rm -rf $(pwd)\n\nRUN git clone -b 0.23.92 --depth 1 --recursive https://github.com/mchehab/zbar.git && \\\n    cd zbar && \\\n    git reset --hard aac86d5f08d64ab4c3da78188eb622fa3cb07182 && \\\n    autoreconf -vfi && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-static --disable-shared --without-imagemagick --disable-video --without-xv --with-gtk=no --with-python=no --enable-doc=no --host=x86_64-w64-mingw32 && \\\n    make -j$THREADS && \\\n    make install && \\\n    rm -rf $(pwd)\n\nCOPY contrib/patches/polyseed/force-static-mingw.patch .\nCOPY contrib/patches/polyseed/no_shared.patch .\n\n# polyseed: Required for Feather\nRUN git clone https://github.com/tevador/polyseed.git && \\\n    cd polyseed && \\\n    git reset --hard 4945d8239d6b26dc12723ca2aaa9f8110ceff5af && \\\n    git apply ../force-static-mingw.patch && \\\n    git apply ../no_shared.patch && \\\n    mkdir build && \\\n    cd build && \\\n    cmake -DCMAKE_INSTALL_PREFIX=/depends/x86_64-w64-mingw32 \\\n          -DCMAKE_TOOLCHAIN_FILE=/depends/x86_64-w64-mingw32/share/toolchain.cmake \\\n          -DBUILD_SHARED_LIBS=OFF \\\n          -DCMAKE_PREFIX_PATH=/usr/x86_64-w64-mingw32 .. && \\\n    make && \\\n    make install && \\\n    rm -rf $(pwd)\n\nRUN git config --global --add safe.directory /feather/monero"
}