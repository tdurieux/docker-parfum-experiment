{
  "startTime": 1674248123119,
  "endTime": 1674248124172,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 120
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 125
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 60
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 22,
        "columnEnd": 48
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 60
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 22,
        "columnEnd": 48
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:20.04\n\nRUN apt-get update && \\\n    apt-get -y --no-install-recommends install curl unzip gnupg2 libgcrypt20 locales && \\\n    locale-gen en_US.UTF-8 && \\\n    export LANG=en_US.UTF-8 && \\\n    apt-get clean && rm -rf /var/lib/apt/lists/*;\n\nRUN curl -f -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -\n\nCOPY apt-source-list /etc/apt/sources.list.d/kubernetes.list\n\nRUN apt-get update && apt-get install --no-install-recommends -y kubectl && rm -rf /var/lib/apt/lists/*;\n\nRUN groupadd -r harness -g 1000560000 && useradd --no-log-init -r -u 1000560000 -g harness harness\n\nCOPY scripts /opt/harness-delegate/\n\nRUN chmod +x /opt/harness-delegate/*.sh\n\nRUN chown harness /opt/harness-delegate /opt/harness-delegate/*.sh\n\nRUN chgrp harness /opt/harness-delegate /opt/harness-delegate/*.sh\n\nRUN mkdir -p /home/harness\n\nRUN chown harness /home/harness\n\nRUN chgrp harness /home/harness\n\nUSER harness\n\nRUN mkdir -p /home/harness/bin\n\nENV PATH=\"/home/harness/bin:${PATH}\"\n\nWORKDIR /opt/harness-delegate\n\nRUN ./client_tools.sh && chmod -R 755 /opt/harness-delegate\n\nRUN curl -f -s https://app.harness.io/public/shared/jre/openjdk-11.0.14_9/OpenJDK11U-jre_x64_linux_hotspot_11.0.14_9.tar.gz | tar -xz\n\nARG watcher_version\nRUN curl -f -#k https://app.harness.io/public/shared/watchers/builds/openjdk-8u242/$watcher_version/watcher.jar -o watcher.jar\n\nCMD ./entrypoint.sh && bash -c ' \\\n    while [[ ! -e watcher.log ]]; do sleep 1s; done; tail -F watcher.log & \\\n    while [[ ! -e delegate.log ]]; do sleep 1s; done; tail -F delegate.log'\n"
}