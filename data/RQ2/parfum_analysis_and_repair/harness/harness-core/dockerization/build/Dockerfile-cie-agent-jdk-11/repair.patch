diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/harness/harness-core/dockerization/build/Dockerfile-cie-agent-jdk-11 b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/harness/harness-core/dockerization/build/Dockerfile-cie-agent-jdk-11/repaired.Dockerfile
index 675aa65..a0397b3 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/harness/harness-core/dockerization/build/Dockerfile-cie-agent-jdk-11
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/harness/harness-core/dockerization/build/Dockerfile-cie-agent-jdk-11/repaired.Dockerfile
@@ -8,9 +8,9 @@ RUN mkdir -p /deployments
 ENV JAVA_APP_DIR=/deployments \
     JAVA_MAJOR_VERSION=11
 
-RUN curl -OL https://github.com/adoptium/temurin11-binaries/releases/download/jdk-11.0.15%2B10/OpenJDK11U-jdk_x64_linux_hotspot_11.0.15_10.tar.gz \
+RUN curl -f -OL https://github.com/adoptium/temurin11-binaries/releases/download/jdk-11.0.15%2B10/OpenJDK11U-jdk_x64_linux_hotspot_11.0.15_10.tar.gz \
  && mkdir -p /etc/alternatives/OpenJDK11 && tar -xzf OpenJDK11U-jdk_x64_linux_hotspot_11.0.15_10.tar.gz -C /etc/alternatives/OpenJDK11 && ls -al /etc/alternatives/OpenJDK11/jdk-11.0.15+10 \
- && /etc/alternatives/OpenJDK11/jdk-11.0.15+10/bin/java -version
+ && /etc/alternatives/OpenJDK11/jdk-11.0.15+10/bin/java -version && rm OpenJDK11U-jdk_x64_linux_hotspot_11.0.15_10.tar.gz
 
 ENV JAVA_HOME=/etc/alternatives/OpenJDK11/jdk-11.0.15+10
 ENV PATH=$JAVA_HOME/bin:$PATH
@@ -18,7 +18,7 @@ ENV PATH=$JAVA_HOME/bin:$PATH
 # Agent bond including Jolokia and jmx_exporter
 ADD agent-bond-opts /opt/run-java-options
 RUN mkdir -p /opt/agent-bond \
- && curl https://repo.maven.apache.org/maven2/io/fabric8/agent-bond-agent/1.2.0/agent-bond-agent-1.2.0.jar \
+ && curl -f https://repo.maven.apache.org/maven2/io/fabric8/agent-bond-agent/1.2.0/agent-bond-agent-1.2.0.jar \
           -o /opt/agent-bond/agent-bond.jar \
  && chmod 444 /opt/agent-bond/agent-bond.jar \
  && chmod 755 /opt/run-java-options
@@ -63,9 +63,9 @@ RUN yum update -y \
     #&& yum install -y https://packages.endpoint.com/rhel/7/os/x86_64/endpoint-repo-1.9-1.x86_64.rpm \
     && yum install -y git \
     && git --version \
-    && curl -o gsutil.tar.gz https://storage.googleapis.com/pub/gsutil.tar.gz \
+    && curl -f -o gsutil.tar.gz https://storage.googleapis.com/pub/gsutil.tar.gz \
     && tar -xzf gsutil.tar.gz -C /opt \
-    && curl -O https://releases.hashicorp.com/terraform/0.12.11/terraform_0.12.11_linux_amd64.zip \
+    && curl -f -O https://releases.hashicorp.com/terraform/0.12.11/terraform_0.12.11_linux_amd64.zip \
     && yum install -y unzip \
     && unzip terraform_0.12.11_linux_amd64.zip \
     && chmod 755 terraform \
@@ -73,15 +73,15 @@ RUN yum update -y \
     && chmod +x /usr/local/bin/terragrunt \
     && wget -O /etc/yum.repos.d/cloudfoundry-cli.repo https://packages.cloudfoundry.org/fedora/cloudfoundry-cli.repo \
     && yum install -y cf-cli \
-    && curl -Lo /usr/local/bin/bazel https://github.com/bazelbuild/bazelisk/releases/download/v1.7.4/bazelisk-linux-amd64 \
+    && curl -f -Lo /usr/local/bin/bazel https://github.com/bazelbuild/bazelisk/releases/download/v1.7.4/bazelisk-linux-amd64 \
     && chown root:root /usr/local/bin/bazel \
     && chmod 0755 /usr/local/bin/bazel \
     && bazel version \
-    && curl  -s -L -o kubectl https://app.harness.io/storage/harness-download/kubernetes-release/release/${KUBECTL_VERSION}/bin/${PLATFORM}/amd64/kubectl \
+    && curl -f -s -L -o kubectl https://app.harness.io/storage/harness-download/kubernetes-release/release/${KUBECTL_VERSION}/bin/${PLATFORM}/amd64/kubectl \
     && chmod +x kubectl \
     && mv kubectl /usr/bin \
     && wget -q https://get.helm.sh/helm-v${HELM_VERSION}-linux-amd64.tar.gz -O - | tar -xzO linux-amd64/helm > /usr/local/bin/helm \
-    && chmod +x /usr/local/bin/helm
+    && chmod +x /usr/local/bin/helm && rm -rf /var/cache/yum
 
 ENV CC /usr/bin/gcc
 ENV CXX /usr/bin/g++
@@ -101,6 +101,6 @@ RUN yum group install -y "Development Tools" \
     && source /etc/profile.d/maven.sh \
     && rm apache-maven-3.6.1-bin.tar.gz \
     && cd / \
-    && rm -rf /tmp/*
+    && rm -rf /tmp/* && rm -rf /var/cache/yum
 
 RUN curl -fsSL https://get.docker.com/ | sh
\ No newline at end of file