{
  "startTime": 1674255893235,
  "endTime": 1674255894306,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 10,
        "columnStart": 22,
        "columnEnd": 14
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:2.7-slim\nCOPY VERSION dist/splunk_pyml /home/harness/\nWORKDIR /home/harness\nENV SPLUNKML_ROOT /home/harness\nARG new_relic_key\nARG server_url\nARG service_secret\nARG https_port\nRUN apt-get update && apt-get install --no-install-recommends -y make \\\n    build-essential ntp \\\n    libssl-dev && \\\n    pip install --no-cache-dir -r requirements.txt && \\\n    make init-docker && \\\n    apt-get remove -y build-essential && \\\n    python -m nltk.downloader punkt && \\\n    sed -i 's#new_relic_key#'\"$new_relic_key\"'#g' newrelic.ini && \\\n    rm -rf /var/lib/apt/lists/* /root/.cache/\nCMD ./run_learning_engine.sh --server_url ${server_url} --service_secret ${service_secret} --https_port ${https_port}\n\n# for now, we build toli/harness-learning-engine, in the future, will build harness/learning-engine\n# to build: make clean dist; docker build -t toli/harness-learning-engine .\n\n# the equivalent of dist, ie python compilation, should be done inside Docker built; this could be a multi-stage build\n# copy the python files and compile; then copy only the .pyc files into second stage to be smaller\n"
}