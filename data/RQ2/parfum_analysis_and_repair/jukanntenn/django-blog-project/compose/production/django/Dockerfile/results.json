{
  "startTime": 1674247992201,
  "endTime": 1674247993073,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 74
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 22,
        "columnEnd": 75
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 22,
        "columnEnd": 61
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 22,
        "columnEnd": 75
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 22,
        "columnEnd": 61
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:13-buster as client-builder\n\nWORKDIR /app/frontend\nCOPY ./frontend/package.json /app/frontend\nRUN npm install && npm cache clean --force\nCOPY . /app\nRUN npm run build\n\nFROM python:3.8\n\nENV PYTHONUNBUFFERED 1\n\nRUN apt-get update && apt-get install --no-install-recommends -y gettext python3-dev libpq-dev wget && rm -rf /var/lib/apt/lists/*;\nRUN wget --quiet -O - https://apt.postgresql.org/pub/repos/apt/ACCC4CF8.asc | apt-key add -\nRUN bash -c \"echo deb http://apt.postgresql.org/pub/repos/apt/ buster-pgdg main >> /etc/apt/sources.list.d/pgdg.list\"\nRUN apt-get update && apt-get -y --no-install-recommends install postgresql-client-12 && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /app\n\nCOPY get-poetry.py /get-poetry.py\nRUN python /get-poetry.py\nENV PATH \"/root/.poetry/bin:${PATH}\"\nRUN poetry config virtualenvs.create false\nCOPY poetry.lock pyproject.toml /app/\nRUN poetry install --no-root --no-interaction --no-dev\n\nCOPY . /app\nRUN poetry install --no-dev --no-interaction\n\nCOPY ./compose/production/django/entrypoint.sh /entrypoint.sh\nRUN sed -i 's/\\r$//g' /entrypoint.sh\nRUN chmod +x /entrypoint.sh\n\nCOPY ./compose/production/django/start.sh /start.sh\nRUN sed -i 's/\\r//' /start.sh\nRUN chmod +x /start.sh\n\nCOPY ./compose/production/django/celery/worker/start.sh /start-celeryworker.sh\nRUN sed -i 's/\\r$//g' /start-celeryworker.sh\nRUN chmod +x /start-celeryworker.sh\n\nCOPY ./compose/production/django/celery/beat/start.sh /start-celerybeat.sh\nRUN sed -i 's/\\r$//g' /start-celerybeat.sh\nRUN chmod +x /start-celerybeat.sh\nCOPY --from=client-builder /app /app\n\nENTRYPOINT [\"/entrypoint.sh\"]"
}