{
  "startTime": 1674252318114,
  "endTime": 1674252320265,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 82,
        "lineEnd": 82,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 82,
        "lineEnd": 82,
        "columnStart": 4,
        "columnEnd": 43
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 35
      }
    }
  ],
  "repairedDockerfile": "# -------------------------------------------------------------------------------\n# Filename:     Dockerfile.16.04\n# UpdateDate:   2021/01/25\n# Description:  Build docker images for mlu220-cross-compile.\n# Example:\n# Depends:\n#               neuware-mlu270-$VERSION-1_Ubuntu16.04_amd64.deb(ftp://download.cambricon.com:8821/**/neuware-mlu270-$VERSION-1_Ubuntu16.04_amd64.deb)\n#               gcc-linaro-6.2.1-2016.11-x86_64_aarch64-linux-gnu.tgz(ftp://download.cambricon.com:8821/**/gcc-linaro-6.2.1-2016.11-x86_64_aarch64-linux-gnu.tgz)\n#               gcc-arm-none-eabi-8-2018-q4-major.tar.gz(ftp://download.cambricon.com:8821/**/gcc-arm-none-eabi-8-2018-q4-major.tar.gz)\n#               cntoolkit-edge_1.4.110-1_arm64.tar.gz(ftp://download.cambricon.com:8821/**/cntoolkit-edge_1.4.110-1_arm64.tar.gz)\n# Notes:\n#               1.gcc-linaro&cntoolkit-edge has been deployed to the container.\n#                 gcc-linaro(/opt/work/gcc-linaro-6.2.1-2016.11-x86_64_aarch64-linux-gnu)\n#                 cntoolkit-edge-1.4.110(/opt/work/neuware/pc/lib64)\n#               2.These environment variables has been set in the container\n#                 BIN_DIR_WORK=/opt/work\n#                 BIN_DIR_GCC_Linaro=/opt/work/gcc-linaro-6.2.1-2016.11-x86_64_aarch64-linux-gnu/bin\n#                 BIN_DIR_GCC_ARM=/opt/work/gcc-arm-none-eabi-8-2018-q4-major/bin\n#                 PATH=$BIN_DIR_GCC_Linaro:$BIN_DIR_GCC_ARM:$PATH\n#                 NEUWARE_HOME=/opt/work/neuware/pc\n# -------------------------------------------------------------------------------\n# 0.Start FROM ubuntu:16.04 image\nFROM ubuntu:16.04\n#FROM ubuntu:18.04\n\nMAINTAINER kang <ksp416@163.com>\n\nWORKDIR /opt/work/\n\nARG neuware_package=neuware-mlu270-1.5.0-1_Ubuntu16.04_amd64.deb\nARG mlu_platform=MLU270\nARG with_neuware_installed=no\n\nARG mlu220_cntoolkit_edge=cntoolkit-edge_1.4.110-1_arm64.tar.gz\nARG with_cntoolkit_edge_installed=yes\n\nARG mlu220_gcc_linaro=gcc-linaro-6.2.1-2016.11-x86_64_aarch64-linux-gnu.tgz\nARG with_gcc_linaro_installed=yes\n\nARG mlu220_gcc_arm=gcc-arm-none-eabi-8-2018-q4-major.tar.gz\nARG with_gcc_arm_installed=no\n\nRUN echo -e 'nameserver 114.114.114.114' > /etc/resolv.conf\n\nRUN echo deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial main restricted > /etc/apt/sources.list && \\\n    echo deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-updates main restricted >> /etc/apt/sources.list && \\\n    echo deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial universe >> /etc/apt/sources.list && \\\n    echo deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-updates universe >> /etc/apt/sources.list && \\\n    echo deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial multiverse >> /etc/apt/sources.list && \\\n    echo deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-updates multiverse >> /etc/apt/sources.list && \\\n    echo deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-backports main restricted universe multiverse >> /etc/apt/sources.list && \\\n    echo deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-security main restricted >> /etc/apt/sources.list && \\\n    echo deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-security universe >> /etc/apt/sources.list && \\\n    echo deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-security multiverse >> /etc/apt/sources.list && \\\n    apt-get install -y --assume-yes && apt-get update --fix-missing && \\\n    rm -rf /var/lib/apt/lists/* && mkdir /var/lib/apt/lists/partial && \\\n    apt-get clean && apt-get update --fix-missing && \\\n    apt-get update && apt-get upgrade -y && apt-get install -y --no-install-recommends \\\n            curl git wget vim build-essential cmake make apt-utils \\\n            libopencv-dev libcurl4-openssl-dev \\\n            libgoogle-glog-dev \\\n            openssh-server \\\n            libsdl2-dev  \\\n            lcov dos2unix file \\\n            ca-certificates \\\n            device-tree-compiler libssl-dev bc tree \\\n            minicom tftpd-hpa nfs-kernel-server nfs-common \\\n            net-tools && \\\n    apt-get clean && \\\n    apt-get update --fix-missing && \\\n    rm -rf /var/lib/apt/lists/*\n\nCOPY . /opt/work/\n\nRUN echo '# /etc/default/tftpd-hpa' > /etc/default/tftpd-hpa && \\\n    echo 'TFTP_USERNAME=\"tftp\"' >> /etc/default/tftpd-hpa && \\\n    echo 'TFTP_DIRECTORY=\"/data/tftp\"' >> /etc/default/tftpd-hpa && \\\n    echo 'TFTP_ADDRESS=\"0.0.0.0:69\"' >> /etc/default/tftpd-hpa && \\\n    echo 'TFTP_OPTIONS=\"-l -c -s\"' >> /etc/default/tftpd-hpa && \\\n    echo '/data/nfs *(rw,sync,no_root_squash)' >> /etc/exports && \\\n    if [ \"$with_neuware_installed\" = \"yes\" ]; then \\\n    dpkg -i /opt/work/$neuware_package && \\\n    apt -o Accquire::AllowInsecureRepositories=true update && \\\n    apt install --no-install-recommends -y cndev cndrv cnrt cncodec && \\\n    rm -rf /opt/work/$neuware_package; rm -rf /var/lib/apt/lists/*; fi && \\\n    echo '#!/bin/bash' > /opt/work/env.sh && \\\n    echo 'export BIN_DIR_WORK=\"/opt/work\"' >> /opt/work/env.sh && \\\n    if [ \"$with_gcc_linaro_installed\" = \"yes\" ]; then tar zxf /opt/work/$mlu220_gcc_linaro -C /opt/work && \\\n    echo 'export BIN_DIR_GCC_Linaro=\"/opt/work/gcc-linaro-6.2.1-2016.11-x86_64_aarch64-linux-gnu/bin\"' >> /opt/work/env.sh && \\\n    echo 'export PATH=\"$BIN_DIR_GCC_Linaro:$PATH\"' >> /opt/work/env.sh && \\\n    rm -rf /opt/work/$mlu220_gcc_linaro; fi && \\\n    if [ \"$with_gcc_arm_installed\" = \"yes\" ]; then tar zxf /opt/work/$mlu220_gcc_arm -C /opt/work && \\\n    echo 'export BIN_DIR_GCC_ARM=\"/opt/work/gcc-arm-none-eabi-8-2018-q4-major/bin\"' >> /opt/work/env.sh && \\\n    echo 'export PATH=\"$BIN_DIR_GCC_ARM:$PATH\"' >> /opt/work/env.sh && \\\n    rm -rf /opt/work/$mlu220_gcc_arm; fi && \\\n    if [ \"$with_cntoolkit_edge_installed\" = \"yes\" ]; then tar zxf /opt/work/$mlu220_cntoolkit_edge -C /opt/work && \\\n    echo 'export NEUWARE_HOME=/opt/work/neuware/pc' >> /opt/work/env.sh && \\\n    rm -rf /opt/work/$mlu220_cntoolkit_edge; fi\n\nENV BIN_DIR_WORK=/opt/work\nENV BIN_DIR_GCC_Linaro=/opt/work/gcc-linaro-6.2.1-2016.11-x86_64_aarch64-linux-gnu/bin\nENV BIN_DIR_GCC_ARM=/opt/work/gcc-arm-none-eabi-8-2018-q4-major/bin\nENV PATH=$BIN_DIR_GCC_Linaro:$BIN_DIR_GCC_ARM:$PATH\nENV NEUWARE_HOME=/opt/work/neuware/pc\n\nENV LANG C.UTF-8\n\nWORKDIR /opt/work\n"
}