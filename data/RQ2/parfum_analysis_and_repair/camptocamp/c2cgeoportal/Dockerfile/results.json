{
  "startTime": 1674255396712,
  "endTime": 1674255398127,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 7,
        "columnEnd": 73
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 82,
        "lineEnd": 82,
        "columnStart": 7,
        "columnEnd": 62
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 87,
        "lineEnd": 87,
        "columnStart": 7,
        "columnEnd": 106
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 131,
        "lineEnd": 131,
        "columnStart": 7,
        "columnEnd": 100
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 110,
        "lineEnd": 110,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 118,
        "lineEnd": 118,
        "columnStart": 7,
        "columnEnd": 103
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 127,
        "lineEnd": 127,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 204,
        "lineEnd": 204,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 131,
        "lineEnd": 131,
        "columnStart": 7,
        "columnEnd": 100
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 7,
        "columnEnd": 71
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 7,
        "columnEnd": 69
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 44,
        "lineEnd": 45,
        "columnStart": 7,
        "columnEnd": 82
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 47,
        "lineEnd": 49,
        "columnStart": 7,
        "columnEnd": 93
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 7,
        "columnEnd": 73
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 84,
        "lineEnd": 86,
        "columnStart": 7,
        "columnEnd": 65
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 7,
        "columnEnd": 71
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 7,
        "columnEnd": 69
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 44,
        "lineEnd": 45,
        "columnStart": 7,
        "columnEnd": 82
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 47,
        "lineEnd": 49,
        "columnStart": 7,
        "columnEnd": 93
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 7,
        "columnEnd": 73
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 84,
        "lineEnd": 86,
        "columnStart": 7,
        "columnEnd": 65
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Base of all section, install the apt packages\nFROM osgeo/gdal:ubuntu-small-3.5.0 as base-all\nLABEL maintainer Camptocamp \"info@camptocamp.com\"\n\n# Fail on error on pipe, see: https://github.com/hadolint/hadolint/wiki/DL4006.\n# Treat unset variables as an error when substituting.\n# Print commands and their arguments as they are executed.\nSHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-cux\"]\n\nRUN --mount=type=cache,target=/var/lib/apt/lists \\\n    --mount=type=cache,target=/var/cache,sharing=locked \\\n    apt-get update \\\n    && apt-get upgrade --assume-yes \\\n    && apt-get install -y --assume-yes --no-install-recommends python3-pip && rm -rf /var/lib/apt/lists/*;\n\n# Used to convert the locked packages by poetry to pip requirements format\n# We don't directly use `poetry install` because it force to use a virtual environment.\nFROM base-all as poetry\n\n# Install Poetry\nWORKDIR /tmp\nCOPY requirements.txt ./\nRUN --mount=type=cache,target=/root/.cache \\\n    python3 -m pip install --disable-pip-version-check --requirement=requirements.txt\n\n# Do the conversion\nCOPY poetry.lock pyproject.toml ./\nRUN poetry export --output=requirements.txt \\\n    && poetry export --dev --output=requirements-dev.txt\n\n# Base, the biggest thing is to install the Python packages\nFROM base-all as base\n\nSHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-cux\"]\n\nENV SSL_CERT_FILE=/etc/ssl/certs/ca-certificates.crt\n\nRUN --mount=type=cache,target=/var/lib/apt/lists \\\n    --mount=type=cache,target=/var/cache,sharing=locked \\\n    --mount=type=cache,target=/root/.cache \\\n    . /etc/os-release \\\n    && apt-get update \\\n    && apt-get upgrade --assume-yes \\\n    && apt-get install -y --assume-yes --no-install-recommends apt-utils \\\n    && apt-get install -y --assume-yes --no-install-recommends apt-transport-https gettext less gnupg libpq5 \\\n        python3-pip python3-dev libgraphviz-dev libpq-dev binutils gcc g++ cython3 \\\n    && echo \"For Chrome installed by Pupetter\" \\\n    && apt-get install -y --assume-yes --no-install-recommends libx11-6 libx11-xcb1 libxcomposite1 libxcursor1 \\\n        libxdamage1 libxext6 libxi6 libxtst6 libnss3 libcups2 libxss1 libxrandr2 libasound2 libatk1.0-0 \\\n        libatk-bridge2.0-0 libpangocairo-1.0-0 libgtk-3.0 libxcb-dri3-0 libgbm1 libxshmfence1 \\\n    && echo \"deb https://deb.nodesource.com/node_16.x ${VERSION_CODENAME} main\" > /etc/apt/sources.list.d/nodesource.list \\\n    && curl -f --silent https://deb.nodesource.com/gpgkey/nodesource.gpg.key | apt-key add - \\\n    && apt-get update \\\n    && apt-get install -y --assume-yes --no-install-recommends 'nodejs=16.*' \\\n    && ln -s /usr/local/lib/libproj.so.* /usr/local/lib/libproj.so && rm -rf /var/lib/apt/lists/*;\n\nRUN --mount=type=cache,target=/root/.cache \\\n    --mount=type=bind,from=poetry,source=/tmp,target=/poetry \\\n    PIP_NO_BINARY=fiona,rasterio,shapely PROJ_DIR=/usr/local/ python3 -m pip install --disable-pip-version-check --no-deps --requirement=/poetry/requirements.txt \\\n    && strip /usr/local/lib/python3.*/dist-packages/*/*.so \\\n    && apt-get auto-remove --assume-yes binutils gcc g++\n\nCOPY scripts/extract-messages.js /opt/c2cgeoportal/geoportal/\n\nENV TEST=false\nENV PATH=/opt/c2cgeoportal/geoportal/node_modules/.bin:$PATH\n\n#############################################################################################################\n# Finally used for all misk task, will not be used on prod runtime\n\nFROM base AS tools\n\nSHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-cux\"]\n\nENV NODE_PATH=/usr/lib/node_modules\nCMD [\"tail\", \"--follow\", \"--zero-terminated\", \"/dev/null\"]\n\nRUN --mount=type=cache,target=/var/lib/apt/lists \\\n    --mount=type=cache,target=/var/cache,sharing=locked \\\n    --mount=type=cache,target=/root/.cache \\\n    . /etc/os-release \\\n    && echo deb http://apt.postgresql.org/pub/repos/apt/ \"${VERSION_CODENAME}-pgdg\" main > /etc/apt/sources.list.d/pgdg.list \\\n    && curl -f https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add - \\\n    && apt-get update \\\n    && apt-get install -y --assume-yes --no-install-recommends git make python3-dev gcc \\\n        postgresql-client net-tools iputils-ping vim vim-editorconfig vim-addon-manager tree groff-base \\\n        libxml2-utils bash-completion pwgen redis-tools libmagic1 \\\n    && curl -f https://raw.githubusercontent.com/awslabs/git-secrets/1.3.0/git-secrets > /usr/bin/git-secrets \\\n    && vim-addon-manager --system-wide install editorconfig \\\n    && echo 'set hlsearch  \" Highlight search' > /etc/vim/vimrc.local \\\n    && echo 'set wildmode=list:longest  \" Completion menu' >> /etc/vim/vimrc.local \\\n    && echo 'set term=xterm-256color \" Make home and end working' >> /etc/vim/vimrc.local && rm -rf /var/lib/apt/lists/*;\n\nRUN --mount=type=cache,target=/root/.cache \\\n    --mount=type=bind,from=poetry,source=/tmp,target=/poetry \\\n    python3 -m pip install --disable-pip-version-check --no-deps --requirement=/poetry/requirements-dev.txt\nENV PATH=/root/.local/bin/:${PATH}\n\nWORKDIR /opt/c2cgeoportal\nCOPY ci/applications*.yaml .\nRUN c2cciutils-download-applications --applications-file=applications.yaml --versions-file=applications-versions.yaml\n\nCOPY bin/npm-packages /usr/bin/\nWORKDIR /opt/c2cgeoportal/geoportal\nCOPY geoportal/package.json geoportal/package-lock.json ./\n\n# hadolint ignore=DL3016,SC2046\nRUN --mount=type=cache,target=/var/cache,sharing=locked \\\n    --mount=type=cache,target=/root/.cache \\\n    --mount=type=cache,target=/tmp \\\n    npm install --no-optional \\\n    && npm-packages \\\n        @types @typescript-eslint @storybook ol-cesium jasmine-core karma karma-chrome-launcher \\\n        karma-jasmine karma-sinon karma-sourcemap-loader karma-webpack \\\n        react react-dom cypress chromatic jscodeshift sass start-server-and-test \\\n        typedoc typescript \\\n        angular-gettext-tools commander puppeteer url-parse eslint \\\n        --src=package.json --src=node_modules/ngeo/package.json --dst=npm-packages \\\n    && npm install --no-optional --global --unsafe-perm $(cat /opt/c2cgeoportal/geoportal/npm-packages) && npm cache clean --force;\n\nCOPY admin/package.json admin/package-lock.json /opt/c2cgeoportal/admin/\nWORKDIR /opt/c2cgeoportal/admin\n\n# hadolint ignore=DL3016,SC2046\nRUN --mount=type=cache,target=/var/cache,sharing=locked \\\n    --mount=type=cache,target=/root/.cache \\\n    --mount=type=cache,target=/tmp \\\n    npm install --no-optional \\\n    && rm -rf /tmp/angular \\\n    && git clone --branch=v1.7.x --depth=1 --single-branch https://github.com/angular/angular.js.git /tmp/angular \\\n    && mv /tmp/angular/src/ngLocale/ /opt/angular-locale/ \\\n    && curl -f --output /opt/jasperreport.xsd https://jasperreports.sourceforge.net/xsd/jasperreport.xsd && npm cache clean --force;\n\nWORKDIR /opt/c2cgeoportal\nCOPY dependencies.mk vars.yaml ./\nCOPY .tx/ .tx/\nARG MAJOR_VERSION\nENV MAJOR_VERSION=$MAJOR_VERSION\nRUN make --makefile=dependencies.mk dependencies\n\nCOPY bin/ /usr/bin/\nCOPY scripts/ scripts/\nCOPY geoportal/c2cgeoportal_geoportal/scaffolds/ geoportal/c2cgeoportal_geoportal/scaffolds/\nCOPY build.mk lingua.cfg ./\n\nRUN make --makefile=build.mk build \\\n    && mkdir -p 'geoportal/c2cgeoportal_geoportal/scaffolds/update/{{cookiecutter.project}}/CONST_create_template/geoportal/interfaces/' \\\n    && import-ngeo-apps --html --canvas desktop_alt /usr/lib/node_modules/ngeo/contribs/gmf/apps/desktop_alt/index.html.ejs \\\n        'geoportal/c2cgeoportal_geoportal/scaffolds/update/{{cookiecutter.project}}/CONST_create_template/geoportal/interfaces/desktop_alt.html.mako' \\\n    && mkdir -p 'geoportal/c2cgeoportal_geoportal/scaffolds/update/{{cookiecutter.project}}/CONST_create_template/geoportal/{{cookiecutter.package}}_geoportal/static/images/' \\\n    && cp /usr/lib/node_modules/ngeo/contribs/gmf/apps/desktop/image/background-layer-button.png \\\n        'geoportal/c2cgeoportal_geoportal/scaffolds/update/{{cookiecutter.project}}/CONST_create_template/geoportal/{{cookiecutter.package}}_geoportal/static/images/'\n\nCOPY commons/ commons/\nCOPY geoportal/ geoportal/\nCOPY admin/ admin/\nARG VERSION\nENV VERSION=$VERSION\n\nRUN --mount=type=cache,target=/var/cache,sharing=locked \\\n    --mount=type=cache,target=/root/.cache \\\n    python3 -m pip install --disable-pip-version-check --no-deps \\\n    --editable=commons \\\n    --editable=geoportal \\\n    --editable=admin\n\nRUN make --makefile=build.mk \\\n    geoportal/c2cgeoportal_geoportal/locale/c2cgeoportal_geoportal.pot \\\n    admin/c2cgeoportal_admin/locale/c2cgeoportal_admin.pot\n\nRUN git config --global --add safe.directory /src\nCOPY scripts/clone_schema.sql /opt/\n\nWORKDIR /src\n\n#############################################################################################################\n# Cleaned image used to copy files to the runner\n\nFROM tools AS tools-cleaned\n\n# Removes unwanted and unsecured (see bandit checks) files\nRUN rm --recursive --force -- geoportal/c2cgeoportal_geoportal/scaffolds \\\n    */tests \\\n    commons/c2cgeoportal_commons/testing/ \\\n    geoportal/c2cgeoportal_geoportal/scripts/c2cupgrade.py\n\n#############################################################################################################\n# Image used to run the project\n\nFROM base AS runner\n\nRUN apt-get remove --yes --auto-remove gcc\n\nARG MAJOR_VERSION\nENV MAJOR_VERSION=$MAJOR_VERSION\nARG VERSION\nENV VERSION=$VERSION\n\nWORKDIR /opt/c2cgeoportal/geoportal\nCOPY geoportal/package.json geoportal/package-lock.json ./\n\n# hadolint ignore=DL3016,SC2046\nRUN --mount=type=cache,target=/var/cache,sharing=locked \\\n    --mount=type=cache,target=/root/.cache \\\n    npm install --no-optional --omit dev && npm cache clean --force;\n\nCOPY bin/eval-templates bin/wait-db bin/list4vrt bin/azure /usr/bin/\nCOPY --from=tools-cleaned /opt/c2cgeoportal /opt/c2cgeoportal\nCOPY scripts/extract-messages.js /opt/c2cgeoportal/\n\nWORKDIR /opt/c2cgeoportal\nRUN --mount=type=cache,target=/var/cache,sharing=locked \\\n    --mount=type=cache,target=/root/.cache \\\n    ln -s /opt/c2cgeoportal/commons/c2cgeoportal_commons/alembic /opt \\\n    && python3 -m pip install --disable-pip-version-check --no-deps \\\n        --editable=commons \\\n        --editable=geoportal \\\n        --editable=admin \\\n    && python3 -m compileall -q /opt/c2cgeoportal /usr/local/lib/python3.* \\\n        -x '(/usr/local/lib/python3.*/dist-packages/(networkx)/|/opt/c2cgeoportal/geoportal/c2cgeoportal_geoportal/scaffolds/)'\n\nWORKDIR /opt/c2cgeoportal/geoportal\n\nRUN adduser www-data root\n\n# From c2cwsgiutils\n\nENV TERM=linux \\\n    LANG=C.UTF-8 \\\n    PKG_CONFIG_ALLOW_SYSTEM_LIBS=OHYESPLEASE\n\nENV C2C_BASE_PATH=/c2c \\\n    C2C_REDIS_TIMEOUT=3 \\\n    C2C_REDIS_SERVICENAME=mymaster \\\n    C2C_BROADCAST_PREFIX=broadcast_api_ \\\n    C2C_SQL_PROFILER_ENABLED=0 \\\n    C2C_DEBUG_VIEW_ENABLED=0 \\\n    C2C_ENABLE_EXCEPTION_HANDLING=0\n\n# End from c2cwsgiutils\n\nENV C2CGEOPORTAL_THEME_TIMEOUT=300\n\n#############################################################################################################\n# Image that run the checks\n\nFROM tools AS checks\n\nWORKDIR /opt/c2cgeoportal\n\n# For mypy\nRUN touch \"$(echo /usr/local/lib/python3.*/dist-packages/)/zope/__init__.py\" \\\n    && touch \"$(echo /usr/local/lib/python3.*/dist-packages/)/c2c/__init__.py\"\n"
}