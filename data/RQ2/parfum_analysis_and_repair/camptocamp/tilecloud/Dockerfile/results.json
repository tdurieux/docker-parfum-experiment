{
  "startTime": 1674246899421,
  "endTime": 1674246902598,
  "originalSmells": [
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 7,
        "columnEnd": 119
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM osgeo/gdal:3.2.0 as base-all\nLABEL maintainer Camptocamp \"info@camptocamp.com\"\nSHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-cux\"]\n\nRUN --mount=type=cache,target=/var/lib/apt/lists \\\n    --mount=type=cache,target=/var/cache,sharing=locked \\\n    --mount=type=cache,target=/root/.cache \\\n    apt-get update \\\n    && apt-get install --yes --no-install-recommends python3-pip python3-dev libpq-dev make libcairo2 libcairo2-dev gcc && rm -rf /var/lib/apt/lists/*;\n\n# Used to convert the locked packages by poetry to pip requirements format\n# We don't directly use `poetry install` because it force to use a virtual environment.\nFROM base-all as poetry\n\n# Install Poetry\nWORKDIR /poetry\nCOPY requirements.txt ./\nRUN --mount=type=cache,target=/root/.cache \\\n    python3 -m pip install --disable-pip-version-check --requirement=requirements.txt\n\n# Do the conversion\nCOPY poetry.lock pyproject.toml ./\nRUN poetry export --extras=all --dev --output=/poetry/requirements-dev.txt\n\n# Base, the biggest thing is to install the Python packages\nFROM base-all as base\n\nWORKDIR /app\n\nRUN --mount=type=cache,target=/root/.cache \\\n    --mount=type=bind,from=poetry,source=/poetry,target=/poetry \\\n    IP_NO_BINARY=shapely python3 -m pip install --disable-pip-version-check --no-deps --requirement=/poetry/requirements-dev.txt\n"
}