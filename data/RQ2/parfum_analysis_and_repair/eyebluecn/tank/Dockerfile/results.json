{
  "startTime": 1674249925896,
  "endTime": 1674249926751,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 53
      }
    }
  ],
  "repairedDockerfile": "# use golang 1.17\nFROM golang:1.17\n\n# maintainer. Author's name and email.\nMAINTAINER eyeblue \"eyebluecn@126.com\"\n\n# work directory.\nWORKDIR /data\n\n# Copy this project to /data\nCOPY . /data\n\n# in order to make docker stateless. Prepare a volumn\nVOLUME /data/build/matter\n\n# proxy\nENV GOPROXY=https://goproxy.cn\n\n# Handle time-zone\nENV TZ=Asia/Shanghai\nRUN apt-get install --no-install-recommends -y tzdata && rm -rf /var/lib/apt/lists/*;\n\n# prepare the config file\nRUN go build \\\n    && cp -r /data/tank /data/build\n\n# use 6010 as default.\nEXPOSE 6010\n\n# tank as execute file.\nENTRYPOINT [\"/data/build/tank\"]\n"
}