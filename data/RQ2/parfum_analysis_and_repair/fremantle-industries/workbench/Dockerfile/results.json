{
  "startTime": 1674218065324,
  "endTime": 1674218065941,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 31
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Main Dockerfile for the workbench application. It's broken down into 3 stages\n#\n# - builder\n# - release\n# - app\n#\n# The builder stage is used in development & forms the stage from which an\n# Elixir release will be built. It requires Elixir, Erlang & NodeJS\n#\n# The release stage is used to build an Elixir release and requires\n# Elixir, Erlang & NodeJS\n#\n# The app stage executes the Elixir release and runs on the slim Elixir alpine image.\n# It does not require Elixir, Erlang or NodeJS as ERTS is packaged with the release\n\nFROM bitwalker/alpine-elixir-phoenix:1.12.2 AS builder\nWORKDIR /tmp/app\nRUN chown -R nobody: /tmp/app\nRUN apk add --no-cache --update alpine-sdk\nCOPY ./.iex.exs .iex.exs\nCOPY ./mix.exs ./\nCOPY ./mix.lock ./\nCOPY ./assets/css ./assets/css\nCOPY ./assets/js ./assets/js\nCOPY ./assets/static ./assets/static\nCOPY ./assets/package.json ./assets/package.json\nCOPY ./assets/package-lock.json ./assets/package-lock.json\nCOPY ./assets/webpack.config.js ./assets/webpack.config.js\nCOPY ./assets/postcss.config.js ./assets/postcss.config.js\nCOPY ./assets/tailwind.config.js ./assets/tailwind.config.js\nCOPY ./assets/tsconfig.json ./assets/tsconfig.json\nCOPY ./config ./config\nCOPY ./lib ./lib\nCOPY ./priv/repo ./priv/repo\nCOPY ./vendor ./vendor\nRUN mix local.hex --force\nRUN mix local.rebar --force\nRUN mix clean --deps\nRUN mix setup.deps\nRUN MIX_ENV=prod mix tai.gen.migration\n\nFROM bitwalker/alpine-elixir-phoenix:1.12.2 AS release\nARG release_name\nWORKDIR /tmp/app\nRUN chown -R nobody: /tmp/app\nCOPY --from=builder /tmp/app .\nRUN apk add --no-cache --update alpine-sdk\nRUN mix local.hex --force\nRUN mix local.rebar --force\nRUN npm run deploy --prefix=assets\nRUN MIX_ENV=prod mix phx.digest\nRUN MIX_ENV=prod mix release $release_name\n# Print script with evaluated env vars when executed. This is useful for\n# debugging problems starting the application correctly\nRUN cat _build/prod/rel/$release_name/bin/$release_name \\\n      | sed -e 's/set[ ]-e/set -ex/' \\\n      > _build/prod/rel/$release_name/bin/$release_name\n\nFROM elixir:1.12.2-alpine AS app\nARG release_name\nWORKDIR /app\nRUN chown -R nobody: /app\n# Bash is required to source with arguments\n# https://github.com/edib-tool/docker-edib-tool/issues/15#issuecomment-325252150\nRUN apk upgrade --no-cache\nRUN apk add --no-cache bash\nENV SHELL=/bin/bash\nENV RELEASE_NAME=$release_name\nENV MIX_ENV=prod\nCOPY --from=release /tmp/app/_build/prod/rel/$release_name .\nCOPY --from=release /tmp/app/.iex.exs .\nCMD /bin/sh -c 'bin/$RELEASE_NAME start'\n"
}