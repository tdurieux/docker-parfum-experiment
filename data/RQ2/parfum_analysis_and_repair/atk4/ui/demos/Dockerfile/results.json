{
  "startTime": 1674216858598,
  "endTime": 1674216860084,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 7,
        "columnEnd": 25
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 10,
        "columnStart": 22,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 25,
        "columnEnd": 50
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 10,
        "columnStart": 22,
        "columnEnd": 35
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 25,
        "columnEnd": 50
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "###################################################\n## # build command:                              ##\n## docker build -f Dockerfile .. -t atk4_ui_demo ##\n## # run command:                                ##\n## docker run --rm -p 80:80 -it atk4_ui_demo     ##\n###################################################\n\nFROM php:apache\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n        libicu-dev git jq unzip npm \\\n    && docker-php-ext-configure intl \\\n    && docker-php-ext-install intl \\\n    && docker-php-ext-install pdo pdo_mysql && rm -rf /var/lib/apt/lists/*;\n\nRUN curl -f -sL https://deb.nodesource.com/setup_12.x | bash - \\\n    && apt-get update && apt-get -y --no-install-recommends install nodejs \\\n    && npm install -g npm && npm cache clean --force; && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /var/www/html/\n\nRUN curl -f -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer\n\nRUN npm install -g less clean-css && npm cache clean --force;\n\nCOPY js js\nCOPY public public\n\nRUN cd js && npm ci && npm run build\nRUN cd public && lessc agileui.less agileui.css\n\nADD composer.json .\nRUN jq 'del(.\"require-release\")|del(.\"require-dev\")' < composer.json > tmp && mv tmp composer.json \\\n    && composer require --no-update fzaninotto/faker:^1.6 \\\n    && composer install --no-dev\n\nRUN echo 'disable_functions = pcntl_exec,exec,passthru,proc_open,shell_exec,system,popen/g' >> \"$PHP_INI_DIR/php.ini\"\n\nCOPY src src\nCOPY template template\nCOPY demos demos\nRUN echo \"<?php header('Location: /demos/');\" > index.php\n\nRUN php demos/_demo-data/create-db.php\nRUN sed -E \"s/\\(('sqlite:.+)\\);/(\\$_ENV['DB_DSN'] ?? \\\\1, \\$_ENV['DB_USER'] ?? null, \\$_ENV['DB_PASSWORD'] ?? null);/g\" -i demos/db.default.php\n"
}