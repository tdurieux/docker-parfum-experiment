{
  "startTime": 1674219331593,
  "endTime": 1674219332298,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 5,
        "columnEnd": 36
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 5,
        "columnEnd": 59
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# arxiv/base\n\nFROM centos:centos7\n\nLABEL maintainer=\"arXiv <nextgen@arxiv.org>\" \\\n  org.opencontainers.image.authors=\"arXiv IT Team <nextgen@arxiv.org>\" \\\n  org.opencontainers.image.version=\"1.0\" \\\n  org.opencontainers.image.title=\"arXiv Base\" \\\n  org.opencontainers.image.description=\"Base image for arXiv NG applications\" \\\n  org.opencontainers.image.url=\"https://arxiv.github.io/arxiv-base\" \\\n  org.opencontainers.image.source=\"https://github.com/arxiv/arxiv-base\" \\\n  org.opencontainers.image.vendor=\"arXiv.org\" \\\n  org.opencontainers.image.licenses=\"MIT\"\n\nLABEL version=\"0.15.9\"\n\nENV LC_ALL=en_US.UTF-8 \\\n    LANG=en_US.UTF-8 \\\n    APPLICATION_ROOT=\"/\"\n\n# Below we use && chaining and an embedded script in a single RUN\n# command to keep image size and layer count to a minimum, while\n# the embedded script will make 'docker build' fail fast\n# if a package is missing.\n#\nRUN yum -y install epel-release \\\n  && yum -y install https://repo.ius.io/ius-release-el7.rpm \\\n  && echo $'#!/bin/bash\\n\\\nPKGS_TO_INSTALL=$(cat <<-END\\n\\\n  ca-certificates\\n\\\n  gcc\\n\\\n  gcc-c++ \\n\\\n  git\\n\\\n  mariadb-devel\\n\\\n  python36\\n\\\n  python36-devel\\n\\\n  sqlite\\n\\\n  wget\\n\\\n  which\\n\\\nEND\\n\\\n)\\n\\\nfor pkg in ${PKGS_TO_INSTALL}; do\\n\\\n  # Stop executing if at least one package is not available:\\n\\\n  yum info ${pkg} || {\\n\\\n    echo \"yum could not find package ${pkg}\"\\n\\\n    exit 1\\n\\\n  }\\n\\\ndone\\n\\\nyum -y install ${PKGS_TO_INSTALL}\\n' >> /tmp/safe_yum.sh \\\n  && /bin/bash /tmp/safe_yum.sh \\\n  && yum clean all \\\n  && rm /tmp/safe_yum.sh \\\n  && rm -rf /tmp/* /var/tmp/* \\\n  && rm -rf /var/lib/apt/lists/* && rm -rf /var/cache/yum \\\n\n RUN wget https://bootstrap.pypa.io/get-pip.py \\\n  && python3.6 get-pip.py \\\n  && pip install --no-cache-dir -U pip pipenv uwsgi \\\n  && rm -rf ~/.cache/pip \\\n\nCMD /bin/bash"
}