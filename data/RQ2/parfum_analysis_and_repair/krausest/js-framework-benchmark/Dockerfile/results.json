{
  "startTime": 1674249714778,
  "endTime": 1674249715931,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 76
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 131
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 131
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 131
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:21.10\nCOPY install_rust.sh /root/\nRUN echo \"unsafe-perm = true\" > /root/.npmrc\nRUN echo \"NG_CLI_ANALYTICS=ci\" >> /root/.npmrc\nRUN echo \"{ \\\"allow_root\\\": true }\" >  /root/.bowerrc\n\n# replace shell with bash so we can source files\nRUN rm /bin/sh && ln -s /bin/bash /bin/sh\nRUN echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections\n\nRUN apt-get update && apt-get install --no-install-recommends -y python3 m4 libtinfo5 libghc-zlib-dev rsync ghc haskell-stack curl g++ make git openjdk-8-jdk dos2unix python && rm -rf /var/lib/apt/lists/*;\n\nENV NVM_DIR /usr/local/nvm\nRUN mkdir -p $NVM_DIR\nENV NODE_VERSION 16.15.1\nRUN curl -f -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.0/install.sh | bash\n\n# install node and npm\nRUN source $NVM_DIR/nvm.sh \\\r\n    && nvm install $NODE_VERSION \\\r\n    && nvm alias default $NODE_VERSION \\\r\n    && nvm use default\n\n# add node and npm to path so the commands are available\nENV NODE_PATH $NVM_DIR/v$NODE_VERSION/lib/node_modules\nENV PATH $NVM_DIR/versions/node/v$NODE_VERSION/bin:$PATH\n\nRUN mkdir /server\nRUN mkdir /build\nRUN mkdir /src\n\n# Volume before chown changes owwner\nVOLUME /src\nVOLUME /build\nCOPY package.json /build\nWORKDIR /build\n\n# Install rust\nRUN dos2unix /root/install_rust.sh\nRUN bash /root/install_rust.sh\n\n# Create server\n\nCOPY server /server\nWORKDIR /server\nRUN npm install && npm cache clean --force;\n\n# USER user\n\nRUN npm install && npm cache clean --force;\nEXPOSE 8080\nWORKDIR /build\nCMD [\"mkdir\", \"/build/frameworks\"]\nCMD [\"mkdir\", \"/build/frameworks/keyed\"]\nCMD [\"mkdir\", \"/build/frameworks/non-keyed\"]\nCMD [\"/server/runserver-docker.sh\"]\n#CMD [\"node\",\"index.js\"]\n\n"
}