{
  "startTime": 1674251896134,
  "endTime": 1674251897302,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 4,
        "columnEnd": 79
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 22,
        "lineEnd": 28,
        "columnStart": 25,
        "columnEnd": 11
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 22,
        "lineEnd": 28,
        "columnStart": 25,
        "columnEnd": 11
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:12 as frontend-builder\n\nARG env\n\nENV NODE_ENV $env\n\nWORKDIR /frontend\nCOPY /www /frontend\n\nRUN npm ci --unsafe-perm --loglevel silent\nRUN npm run build --loglevel silent\n\nFROM python:3.7-stretch as base\n\nENV PYTHONUNBUFFERED 1\nENV LD_LIBRARY_PATH /opt/oracle\nENV BASE_DIR /usr/local/metamapper/\nENV PYMSSQL_BUILD_WITH_BUNDLED_FREETDS 0\n\nRUN groupadd -r metamapper && useradd -r -m -g metamapper metamapper\n\n# Ubuntu packages\nRUN apt-get update -y && apt-get install --no-install-recommends -y \\\n    libxml2-dev \\\n    libxmlsec1-dev \\\n    libxmlsec1-openssl \\\n    g++ \\\n    unixodbc-dev \\\n    libaio1 && rm -rf /var/lib/apt/lists/*;\n\n# MS-SQL support for SSL connections\nRUN mkdir -p /opt/microsoft && \\\n    cd /opt/microsoft && \\\n    wget ftp://ftp.freetds.org/pub/freetds/stable/freetds-1.2.tar.gz && \\\n    tar -xzf freetds-1.2.tar.gz && \\\n    cd freetds-1.2 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/local --with-tdsver=7.3 && \\\n    make && make install && \\\n    ln -s /usr/local/lib/libsybdb.so.5 /usr/lib/libsybdb.so.5 && \\\n    ldconfig && rm freetds-1.2.tar.gz\n\n# Oracle Database support\nRUN mkdir -p /opt/oracle && \\\n    cd /opt/oracle && \\\n    wget --quiet https://download.oracle.com/otn_software/linux/instantclient/19600/instantclient-basiclite-linux.x64-19.6.0.0.0dbru.zip && \\\n    unzip instantclient-basiclite-linux.x64-19.6.0.0.0dbru.zip && \\\n    rm -rf instantclient-basiclite-linux.x64-19.6.0.0.0dbru.zip && \\\n    sh -c \"echo /opt/oracle/instantclient_19_6 > /etc/ld.so.conf.d/oracle-instantclient.conf\" \\\n    ldconfig\n\nENV LD_LIBRARY_PATH /opt/oracle/instantclient_19_6:$LD_LIBRARY_PATH\n\nRUN mkdir $BASE_DIR\nWORKDIR $BASE_DIR\n\nCOPY --from=frontend-builder /frontend/build ${BASE_DIR}/www/build\n\nADD ./requirements.in $BASE_DIR\nADD ./requirements.txt $BASE_DIR\nADD ./requirements-dev.in $BASE_DIR\nADD ./requirements-dev.txt $BASE_DIR\n\nRUN pip install --no-cache-dir --upgrade pip\nRUN pip install --no-cache-dir pip-tools --quiet\nRUN pip-sync requirements.txt requirements-dev.txt --quiet\nRUN pip install --no-cache-dir --upgrade --force-reinstall --no-binary pymssql pymssql --quiet\n\nADD . $BASE_DIR\n\nRUN chmod +x ${BASE_DIR}bin/docker-entrypoint\n\nENTRYPOINT [\"./bin/docker-entrypoint\"]\n"
}