{
  "startTime": 1674250339395,
  "endTime": 1674250340297,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 18,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:12-alpine AS build\n\nRUN apk update && apk add --no-cache git\n\nRUN mkdir -p /app\n\nWORKDIR /app\n\nCOPY package.json .\nCOPY package-lock.json .\n\nRUN npm install && npm cache clean --force;\n\nCOPY . .\n\nRUN npm run build\n\n# -----------------\n\nFROM node:12-alpine\n\nRUN mkdir -p /app\n\nWORKDIR /app\n\nCOPY package.json .\nCOPY package-lock.json .\n\nRUN npm install --production && npm cache clean --force;\n\nCOPY --from=build ./app/dist/login-demo ./dist\nCOPY ./server.js .\nCOPY ./api-server.js .\nCOPY ./auth_config.json .\n\nENV NODE_ENV=production\nENV SERVER_PORT=4200\nENV API_SERVER_PORT=3001\n\nEXPOSE 4200\nEXPOSE 3001\n\nCMD [\"npm\", \"run\", \"prod\"]\n"
}