{
  "startTime": 1674248297903,
  "endTime": 1674248298539,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 67
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 2,
        "columnEnd": 13
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:lts-alpine3.14 as build\n\nRUN apk update && \\\n  apk upgrade && \\\n  apk add --no-cache bash git openssh\n\nRUN mkdir /app\n\nWORKDIR /app\n\nCOPY package.json .\n\nRUN npm install -g --force npm@latest typescript@latest yarn@latest && npm cache clean --force;\n\nRUN yarn install && yarn cache clean;\n\nCOPY . .\n\nRUN yarn build\n\n# ---------------\n\nFROM node:lts-alpine3.14\n\nRUN mkdir -p /app/build\n\nRUN apk update && \\\n  apk upgrade && \\\n  apk add --no-cache git\n\nWORKDIR /app\n\nCOPY --from=build /app/package.json .\n\nRUN yarn install --production && yarn cache clean;\n\nCOPY --from=build /app/build ./build\nCOPY --from=build /app/src/auth_config.json ./src/auth_config.json\nCOPY --from=build /app/server.js .\nCOPY --from=build /app/api-server.js .\n\nEXPOSE 3000\nEXPOSE 3001\n\nENV SERVER_PORT=3000\nENV API_PORT=3001\nENV NODE_ENV production\n\nCMD [\"yarn\", \"prod\"]\n"
}