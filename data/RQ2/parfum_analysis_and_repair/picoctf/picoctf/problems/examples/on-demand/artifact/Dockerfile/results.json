{
  "startTime": 1674220984707,
  "endTime": 1674220985161,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 5,
        "columnStart": 22,
        "columnEnd": 9
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 5,
        "columnStart": 22,
        "columnEnd": 9
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Can use abritary base images but likely want to standardize across an event\n# to best take advantage of caching.\nFROM gcc:10\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    socat && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /challenge\n\n# Copy in source file\nCOPY vuln.c /challenge/vuln.c\n\n# Compile with mitigations disabled\nRUN gcc vuln.c -o vuln -fno-stack-protector -z execstack -no-pie\n\n# FLAG is passed in as a BUILD_ARG in `initialize_docker`\n# this is an alternative to using picoCTF templating\nARG FLAG\nRUN echo ${FLAG} > /challenge/flag\n\nEXPOSE 5555\nCMD [\"socat\", \"TCP-LISTEN:5555,reuseaddr,fork\", \"EXEC:/challenge/vuln\"]\n"
}