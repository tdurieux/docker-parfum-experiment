{
  "startTime": 1674215396165,
  "endTime": 1674215397114,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 67
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 69
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 76
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 70
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 7,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 13
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 44,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 73,
        "lineEnd": 79,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 84,
        "lineEnd": 86,
        "columnStart": 4,
        "columnEnd": 19
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.10\n\n#\n# Install proj4\n#\nARG PROJ_VERSION=6.2.0\nRUN apk --update --no-cache add sqlite libstdc++ sqlite-libs libgcc && \\\n    apk --update --no-cache add --virtual .proj4-deps \\\n        make \\\n        gcc \\\n        g++ \\\n        file \\\n        sqlite-dev \\\n        unzip && \\\n    cd /tmp && \\\n    wget https://download.osgeo.org/proj/proj-${PROJ_VERSION}.tar.gz && \\\n    tar xfvz proj-${PROJ_VERSION}.tar.gz && \\\n    rm -f proj-${PROJ_VERSION}.tar.gz && \\\n    wget https://download.osgeo.org/proj/proj-datumgrid-1.8.zip && \\\n    unzip proj-datumgrid-1.8.zip -d proj-${PROJ_VERSION}/nad/ && \\\n    rm -f proj-datumgrid-1.8.zip && \\\n    wget https://download.osgeo.org/proj/proj-datumgrid-europe-1.1.zip && \\\n    unzip proj-datumgrid-europe-1.1.zip -d proj-${PROJ_VERSION}/nad/ && \\\n    rm -f proj-datumgrid-europe-1.1.zip && \\\n    wget https://download.osgeo.org/proj/proj-datumgrid-north-america-1.1.zip && \\\n    unzip proj-datumgrid-north-america-1.1.zip -d proj-${PROJ_VERSION}/nad/ && \\\n    rm -f proj-datumgrid-north-america-1.1.zip && \\\n    wget https://download.osgeo.org/proj/proj-datumgrid-oceania-1.0.zip && \\\n    unzip proj-datumgrid-oceania-1.0.zip -d proj-${PROJ_VERSION}/nad/ && \\\n    rm -f proj-datumgrid-oceania-1.0.zip && \\\n    cd proj-${PROJ_VERSION} && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n    make -j 4 && \\\n    make install && \\\n    echo \"Entering root folder\" && \\\n    cd / && \\\n    echo \"Cleaning dependencies tmp and manuals\" && \\\n    apk del .proj4-deps && \\\n    rm -rf /tmp/* && \\\n    rm -rf /user/local/man && \\\n    proj\n\n# Install geos\nARG GEOS_VERSION=3.7.1\nRUN apk --update --no-cache add --virtual .geos-deps \\\n        which \\\n        make \\\n        gcc \\\n        g++ \\\n        file \\\n        git \\\n        autoconf \\\n        automake \\\n        libtool && \\\n    cd /tmp && \\\n    git clone https://git.osgeo.org/gitea/geos/geos.git geos && \\\n    cd geos && \\\n    git checkout ${GEOS_VERSION} && \\\n    ./autogen.sh && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n    make -j 4 && \\\n    make install && \\\n    cd ~ && \\\n    apk del .geos-deps && \\\n    rm -rf /tmp/* && \\\n    rm -rf /user/local/man\n\nRUN adduser -u 1001 -G root -s /bin/bash -D app && \\\n    chgrp -R 0 /etc/passwd && \\\n    chmod -R g=u /etc/passwd && \\\n    mkdir /app && \\\n    chgrp -R 0 /app && \\\n    chmod -R g=u /app && \\\n    apk --update --no-cache add \\\n        gcc \\\n        bash \\\n        make \\\n        git \\\n        libc-dev \\\n        python3\n\nARG PIP_VERSION=\"pip==19.2.1\"\nARG SETUPTOOL_VERSION=\"setuptools==41.0.1\"\nRUN cd /app && \\\n    apk --update --no-cache add --virtual .cjio-build-deps \\\n        musl-dev \\\n        python3-dev && \\\n    python3 -m venv .venv --system-site-packages && \\\n    .venv/bin/pip3 install ${PIP_VERSION} ${SETUPTOOL_VERSION} cjio shapely && \\\n    apk del .cjio-build-deps && \\\n    rm -rf /tmp/* && \\\n    rm -rf /user/local/man && \\\n    .venv/bin/cjio --help\n\nCOPY --chown=1001:0 uid_entrypoint.sh /usr/local/bin/\n\nRUN mkdir /data && \\\n     chown 1001 /data && \\\n     chgrp 0 /data && \\\n     chmod g=u /data\n\nWORKDIR /data\n\nENV LANG=\"C.UTF-8\"\n\nUSER 1001\n\nENTRYPOINT [\"/usr/local/bin/uid_entrypoint.sh\"]\n\nCMD [\"/bin/bash\"]\n\n"
}