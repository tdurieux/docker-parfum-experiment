{
  "startTime": 1674255534051,
  "endTime": 1674255534978,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 52,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 91
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 23,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 23,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 23,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 35
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# w3af.org\n# https://github.com/andresriancho/w3af/tree/master/extras\n\nFROM ubuntu:18.04\nMAINTAINER Andres Riancho <andres.riancho@gmail.com>\n\n# Initial setup\nRUN mkdir /home/w3af\nWORKDIR /home/w3af\nENV HOME /home/w3af\nENV LANG en_US.UTF-8\nENV LANGUAGE en_US:en\nENV LOGNAME w3af\n# Squash errors about \"Falling back to ...\" during package installation\nENV TERM linux\nRUN echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections\n\n# Update before installing any package\nRUN apt-get update -y && apt-get install --no-install-recommends -y python-pip build-essential libxslt1-dev libxml2-dev libsqlite3-dev \\\n                       libyaml-dev openssh-server python-dev git python-lxml wget \\\n                       xdot python-gtk2 python-gtksourceview2 ubuntu-artwork dmz-cursor-theme \\\n                       ca-certificates libffi-dev zlib1g-dev nodejs nodejs-dev libssl1.0-dev \\\n                       node-gyp npm && rm -rf /var/lib/apt/lists/*;\nRUN apt-get upgrade -y\nRUN apt-get dist-upgrade -y\n\n# Install basic and GUI requirements, python-lxml because it doesn't compile correctly from pip\n\n\n\n\n\n\n# Add the w3af user\n# TODO - actually use the w3af user instead of running everything as root\nRUN useradd w3af\n\n# Get ssh package ready\nRUN mkdir /var/run/sshd\nRUN echo 'root:w3af' | chpasswd\nRUN mkdir /home/w3af/.ssh/\nRUN echo 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDjXxcHjyVkwHT+dSYwS3vxhQxZAit6uZAFhuzA/dQ2vFu6jmPk1ewMGIYVO5D7xV3fo7/RXeCARzqHl6drw18gaxDoBG3ERI6LxVspIQYjDt5Vsqd1Lv++Jzyp/wkXDdAdioLTJyOerw7SOmznxqDj1QMPCQni4yhrE+pYH4XKxNx5SwxZTPgQWnQS7dasY23bv55OPgztI6KJzZidMEzzJVKBXHy1Ru/jjhmWBghiXYU5RBDLDYyT8gAoWedYgzVDmMZelLR6Y6ggNLOtMGiGYfPWDUz9Z6iDAUsOQBtCJy8Sj8RwSQNpmOgSzBanqnhed14hLwdYhnKWcPNMry71 w3af@w3af-docker.org' > /home/w3af/.ssh/w3af-docker.pub\nRUN mkdir -p /root/.ssh/\nRUN cat /home/w3af/.ssh/w3af-docker.pub >> /root/.ssh/authorized_keys\n\n# Get and install pip\nRUN pip install --no-cache-dir --index-url=https://pypi.python.org/simple/ --upgrade pip\n#\n# We install some pip packages before adding the code in order to better leverage\n# the docker cache\n#\n# Leave one library without install, so w3af_dependency_install is actually\n# created and we can run the next commands without if statements\n#\n#tblib==0.2.0\n#\nRUN pip install --no-cache-dir setuptools-git >=1.1 pyClamd==0.4.0 PyGithub==1.21.0 GitPython==2.1.15 \\\n        pybloomfiltermmap==0.3.14 esmre==0.3.1 phply==0.9.1 nltk==3.0.1 chardet==3.0.4 \\\n        pdfminer==20140328 futures==3.2.0 pyOpenSSL==18.0.0 scapy==2.4.0 guess-language==0.2 \\\n        cluster==1.1.1b3 msgpack-python==0.5.6 python-ntlm==1.0.1 halberd==0.2.4 \\\n        darts.util.lru==0.5 ndg-httpsclient==0.4.0 pyasn1==0.4.2 Jinja2==2.7.3 vulndb==0.1.3 \\\n        markdown==2.6.1 psutil==2.2.1 Tornado==4.5 mitmproxy==0.13 ruamel.ordereddict==0.4.8 \\\n        Flask==0.10.1 PyYAML==3.12 ds-store==1.1.2 termcolor==1.1.0 tldextract==1.7.2 pebble==4.3.8 \\\n        acora==2.1 diff-match-patch==20121119 bravado-core==5.0.2 lz4==1.1.0 vulners==1.3.0\n\n# Install w3af\nADD . /home/w3af/w3af\nWORKDIR /home/w3af/w3af\nRUN ./w3af_console ; true\n\n# Change the install script to add the -y and not require input\nRUN sed 's/sudo //g' -i /tmp/w3af_dependency_install.sh\nRUN sed 's/apt-get/apt-get -y/g' -i /tmp/w3af_dependency_install.sh\nRUN sed 's/pip install/pip install --upgrade/g' -i /tmp/w3af_dependency_install.sh\n\n# Run the dependency installer\nRUN /tmp/w3af_dependency_install.sh\n\n# Run the dependency installer\nRUN ./w3af_gui ; true\nRUN sed 's/sudo //g' -i /tmp/w3af_dependency_install.sh\nRUN sed 's/apt-get/apt-get -y/g' -i /tmp/w3af_dependency_install.sh\nRUN sed 's/pip install/pip install --upgrade/g' -i /tmp/w3af_dependency_install.sh\nRUN /tmp/w3af_dependency_install.sh\n\n# Compile the py files into pyc in order to speed-up w3af's start\nRUN python -m compileall -q .\n\n# Cleanup to make the image smaller\nRUN rm /tmp/w3af_dependency_install.sh\nRUN apt-get clean\nRUN rm -rf /var/lib/apt/lists/*\nRUN rm -rf /tmp/pip-build-root\n\nEXPOSE 22 44444\n\nCMD [\"/usr/sbin/sshd\", \"-D\"]\n"
}