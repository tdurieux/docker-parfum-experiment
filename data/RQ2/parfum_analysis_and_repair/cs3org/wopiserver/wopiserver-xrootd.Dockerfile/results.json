{
  "startTime": 1674246441970,
  "endTime": 1674246442865,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 104
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 22,
        "lineEnd": 33,
        "columnStart": 21,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Dockerfile for WOPI Server\n#\n# Build: WOPI_DOCKER_TYPE=-xrootd docker-compose -f wopiserver.yaml build --build-arg VERSION=`git describe | sed 's/^v//'` wopiserver\n# Run: docker-compose -f wopiserver.yaml up -d\n\nFROM cern/cs8-base:latest\n\nARG VERSION=latest\n\nLABEL maintainer=\"cernbox-admins@cern.ch\" \\\n  org.opencontainers.image.title=\"The CERNBox/IOP WOPI server\" \\\n  org.opencontainers.image.version=\"$VERSION\"\n\n# The following is needed for now to keep compatibility with MS Office Online\n#RUN update-crypto-policies --set LEGACY\n\nADD ./docker/etc/epel8.repo /etc/yum.repos.d/\n\n# prerequisites: until we need to support xrootd (even on C8), we have some EPEL dependencies, easier to install via yum/dnf;\n# the rest is actually installed via pip, including the xrootd python bindings\n# (note that attempting to install python38 fails here as it gets mixed with the default 3.6 version; we'd need to use\n# a pure python image and install dependencies with apt)\nRUN yum clean all && yum -y install \\\n        sudo \\\n        python3-pip \\\n        python3-devel \\\n        openssl-devel \\\n        xrootd-client \\\n        xrootd-devel \\\n        libuuid-devel \\\n        cmake \\\n        make \\\n        gcc \\\n        gcc-c++ && rm -rf /var/cache/yum\n\nRUN pip3 install --no-cache-dir --upgrade pip setuptools && \\\n    pip3 install --no-cache-dir --upgrade flask pyOpenSSL PyJWT requests more_itertools prometheus-flask-exporter wheel\nRUN pip3 --default-timeout=900 --no-cache-dir install xrootd\n\n# install software\nRUN mkdir -p /app/core /app/bridge /test /etc/wopi /var/log/wopi\nADD ./src/* ./tools/* /app/\nADD ./src/core/* /app/core/\nADD ./src/bridge/* /app/bridge/\nRUN sed -i \"s/WOPISERVERVERSION = 'git'/WOPISERVERVERSION = '$VERSION'/\" /app/wopiserver.py\nRUN grep 'WOPISERVERVERSION =' /app/wopiserver.py\nADD wopiserver.conf /etc/wopi/wopiserver.defaults.conf\nADD test/*py test/*conf /test/\n\n# add basic custom configuration; need to contextualize\nADD ./docker/etc/*secret  ./docker/etc/wopiserver.conf /etc/wopi/\n#RUN mkdir /etc/certs\n#ADD ./etc/*.pem /etc/certs/   if certificates shall be added\n\nCMD [\"python3\", \"/app/wopiserver.py\"]\n\n"
}