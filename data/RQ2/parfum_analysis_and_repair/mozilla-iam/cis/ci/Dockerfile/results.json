{
  "startTime": 1674251690765,
  "endTime": 1674251691472,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 54
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 60
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 33
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM archlinux:latest\nLABEL maintainer=\"akrug@mozilla.com\"\n\n# skip global package update - whatever archlinux/latest has is enough\n#RUN pacman -Syyu --noconfirm\n# install arch base-devel, dependencies, and refresh the package list from upstream\nRUN pacman --noconfirm -S -y --needed base-devel iputils net-tools grep nodejs npm docker make pacman-contrib jq python-pip zip gcc python2 wget unzip tar gawk jdk-openjdk postgresql-libs python-psycopg2\n## Use this if you need to force-downgrade system's python\n## You'll want to compile the version you want first and upload it to S3\n# RUN wget https://s3-us-west-2.amazonaws.com/public.iam.mozilla.com/python37-3.7.5-2-x86_64.pkg.tar.xz\n#RUN pacman -U --noconfirm python37-3.7.5-2-x86_64.pkg.tar.xz\n#RUN ln -fs /usr/bin/python3.7 /usr/bin/python && \\\n#  rm -rf /usr/lib/python3.7/site-packages && \\\n#  ln -fs /usr/lib/python3.8/site-packages/ /usr/lib/python3.7/site-packages\nRUN pip install --no-cache-dir boto3 awscli flake8 black tox docker-compose\nRUN npm --unsafe-perm -g install serverless kinesalite && npm cache clean --force;\nRUN mkdir -p /opt/dynamodb_local\nWORKDIR /opt/dynamodb_local\nRUN wget --no-verbose https://s3-us-west-2.amazonaws.com/dynamodb-local/dynamodb_local_latest.tar.gz\nRUN tar xzf dynamodb_local_latest.tar.gz && rm dynamodb_local_latest.tar.gz\nWORKDIR /\nRUN mkdir /root/utils\nCOPY fake-creds.sh /root/utils/\nRUN chmod 700 /root/utils/fake-creds.sh\n# We get this artifact from S3 now.\n# RUN wget https://ftp.postgresql.org/pub/source/v11.1/postgresql-11.1.tar.gz\n# XXX TBD run signature check here.  Currently unsupport by postgres project.\n# RUN tar xzvf postgresql-11.1.tar.gz\n# RUN cd postgresql-11.1 && \\\n# ./configure --prefix `pwd` --without-readline --without-zlib && \\\n# make && \\\n# make install\nRUN wget --no-verbose https://s3-us-west-2.amazonaws.com/public.iam.mozilla.com/postgresql-11.1-compiled.tar.gz\nRUN tar xzf postgresql-11.1-compiled.tar.gz && rm postgresql-11.1-compiled.tar.gz\n# We get this artifact from S3 now.\n# RUN wget https://files.pythonhosted.org/packages/5c/1c/6997288da181277a0c29bc39a5f9143ff20b8c99f2a7d059cfb55163e165/psycopg2-2.8.3.tar.gz\n# RUN tar xzvf psycopg2-2.8.3.tar.gz\n# RUN cd psycopg2-2.8.3 && \\\n# sed -i s/pg_config\\ =/pg_config\\ =\\\\/postgresql-11.1\\\\/bin\\\\/pg_config/ setup.cfg && \\\n# python3 setup.py build\nRUN wget --no-verbose https://s3-us-west-2.amazonaws.com/public.iam.mozilla.com/psycopg2-2.8.3.tar.gz\nRUN tar xzf psycopg2-2.8.3.tar.gz && rm psycopg2-2.8.3.tar.gz\nRUN cp -ar /postgresql-11.1/lib/* /usr/lib64/\nWORKDIR /var/task\nRUN echo \"export PATH=$PATH:/node_modules/.bin:/postgresql-11.1/bin\" >> ~/.bashrc\n"
}