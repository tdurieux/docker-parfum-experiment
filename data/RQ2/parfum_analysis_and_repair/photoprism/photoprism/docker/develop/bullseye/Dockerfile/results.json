{
  "startTime": 1674255085551,
  "endTime": 1674255086719,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 45,
        "lineEnd": 100,
        "columnStart": 4,
        "columnEnd": 19
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 45,
        "lineEnd": 100,
        "columnStart": 4,
        "columnEnd": 19
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 45,
        "lineEnd": 100,
        "columnStart": 4,
        "columnEnd": 19
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#### Base Image: Debian 11, Codename 'Bullseye'\nFROM golang:1.18-bullseye\n\n# Open Container Initiative (OCI) Annotations\n# see https://github.com/opencontainers/image-spec/blob/main/annotations.md\nLABEL org.opencontainers.image.title=\"PhotoPrism Build Environment\"\nLABEL org.opencontainers.image.description=\"Debian 11, Codename 'Bullseye'\"\nLABEL org.opencontainers.image.url=\"https://hub.docker.com/repository/docker/photoprism/develop\"\nLABEL org.opencontainers.image.source=\"https://github.com/photoprism/photoprism\"\nLABEL org.opencontainers.image.documentation=\"https://docs.photoprism.app/developer-guide/setup/\"\nLABEL org.opencontainers.image.authors=\"Michael Mayer <hello@photoprism.app>\"\nLABEL org.opencontainers.image.vendor=\"PhotoPrism UG\"\n\nARG TARGETARCH\nARG BUILD_TAG\n\n# set environment variables\nENV PHOTOPRISM_ARCH=$TARGETARCH \\\n    DOCKER_TAG=$BUILD_TAG \\\n    DOCKER_ENV=\"develop\" \\\n    NODE_ENV=\"production\" \\\n    PS1=\"\\u@$DOCKER_TAG:\\w\\$ \" \\\n    PATH=\"/usr/local/sbin:/usr/sbin:/sbin:/usr/local/bin:/usr/bin:/bin:/scripts:/usr/local/go/bin:/go/bin:/opt/photoprism/bin\" \\\n    LD_LIBRARY_PATH=\"/usr/local/lib:/usr/lib\" \\\n    DEBIAN_FRONTEND=\"noninteractive\" \\\n    TMPDIR=\"/tmp\" \\\n    TF_CPP_MIN_LOG_LEVEL=\"0\" \\\n    GOPATH=\"/go\" \\\n    GOBIN=\"/go/bin\" \\\n    GO111MODULE=\"on\" \\\n    CGO_CFLAGS=\"-g -O2 -Wno-return-local-addr\" \\\n    PROG=\"photoprism\"\n\n# copy scripts and debian backports sources list\nCOPY --chown=root:root --chmod=755 /scripts/dist/* /scripts/\nCOPY --chown=root:root --chmod=644 /docker/develop/bullseye/sources.list /etc/apt/sources.list.d/bullseye.list\nCOPY --chown=root:root --chmod=644 /.my.cnf /etc/my.cnf\n\n# update image and install build dependencies\nRUN echo 'APT::Acquire::Retries \"3\";' > /etc/apt/apt.conf.d/80retries && \\\n    echo 'APT::Install-Recommends \"false\";' > /etc/apt/apt.conf.d/80recommends && \\\n    echo 'APT::Install-Suggests \"false\";' > /etc/apt/apt.conf.d/80suggests && \\\n    echo 'APT::Get::Assume-Yes \"true\";' > /etc/apt/apt.conf.d/80forceyes && \\\n    echo 'APT::Get::Fix-Missing \"true\";' > /etc/apt/apt.conf.d/80fixmissing && \\\n    apt-get update && apt-get -qq dist-upgrade && \\\n    apt-get -qq -y --no-install-recommends install \\\n      apt-utils \\\n      gpg \\\n      pkg-config \\\n      software-properties-common \\\n      ca-certificates \\\n      build-essential \\\n      gcc \\\n      g++ \\\n      sudo \\\n      bash \\\n      make \\\n      nano \\\n      lsof \\\n      lshw \\\n      wget \\\n      curl \\\n      rsync \\\n      jq \\\n      git \\\n      zip \\\n      unzip \\\n      gettext \\\n      chromium \\\n      chromium-driver \\\n      chromium-sandbox \\\n      firefox-esr \\\n      sqlite3 \\\n      libc6-dev \\\n      libssl-dev \\\n      libxft-dev \\\n      libhdf5-serial-dev \\\n      libpng-dev \\\n      libheif-examples \\\n      librsvg2-bin \\\n      libzmq3-dev \\\n      libx264-dev \\\n      libx265-dev \\\n      libvpx-dev \\\n      libwebm-dev \\\n      libnss3 \\\n      libfreetype6 \\\n      libfreetype6-dev \\\n      libfontconfig1 \\\n      libfontconfig1-dev \\\n      fonts-roboto \\\n      tzdata \\\n      exiftool \\\n      rawtherapee \\\n      imagemagick \\\n      ffmpeg \\\n      ffmpegthumbnailer \\\n      libavcodec-extra \\\n      davfs2 \\\n      chrpath \\\n      apache2-utils \\\n    && \\\n    /scripts/install-nodejs.sh && \\\n    /scripts/install-mariadb.sh mariadb-client && \\\n    /scripts/install-tensorflow.sh && \\\n    /scripts/install-darktable.sh && \\\n    /scripts/install-go-tools.sh && \\\n    echo 'alias go=richgo ll=\"ls -alh\"' >> /etc/skel/.bashrc && \\\n    echo 'export PS1=\"\\u@$DOCKER_TAG:\\w\\$ \"' >> /etc/skel/.bashrc && \\\n    echo \"ALL ALL=(ALL) NOPASSWD:SETENV: ALL\" >> /etc/sudoers.d/all && \\\n    cp /etc/skel/.bashrc /root/.bashrc && \\\n    /scripts/create-users.sh && \\\n    /scripts/cleanup.sh && \\\n    cp /scripts/heif-convert.sh /usr/local/bin/heif-convert && \\\n    install -d -m 0777 -o 1000 -g 1000 \\\n      /var/lib/photoprism \\\n      /tmp/photoprism \\\n      /photoprism/originals \\\n      /photoprism/import \\\n      /photoprism/storage \\\n      /photoprism/storage/sidecar \\\n      /photoprism/storage/albums \\\n      /photoprism/storage/backups \\\n      /photoprism/storage/config \\\n      /photoprism/storage/cache && rm -rf /var/lib/apt/lists/*;\n\n# download models and testdata\nRUN wget \"https://dl.photoprism.app/tensorflow/nsfw.zip?${BUILD_TAG}\" -O /tmp/photoprism/nsfw.zip && \\\n    wget \"https://dl.photoprism.app/tensorflow/nasnet.zip?${BUILD_TAG}\" -O /tmp/photoprism/nasnet.zip && \\\n    wget \"https://dl.photoprism.app/tensorflow/facenet.zip?${BUILD_TAG}\" -O /tmp/photoprism/facenet.zip && \\\n    wget \"https://dl.photoprism.app/qa/testdata.zip?${BUILD_TAG}\" -O /tmp/photoprism/testdata.zip\n\n# set up project directory\nWORKDIR \"/go/src/github.com/photoprism/photoprism\"\n\n# expose the following container ports:\n# - 2342 (HTTP)\n# - 2343 (Acceptance Tests)\n# - 9515 (Chromedriver)\n# - 40000 (Go Debugger)\nEXPOSE 2342 2343 9515 40000\n\n# set container entrypoint script\nENTRYPOINT [\"/scripts/entrypoint.sh\"]\n\n# keep container running\nCMD [\"tail\", \"-f\", \"/dev/null\"]\n"
}