{
  "startTime": 1674250152964,
  "endTime": 1674250153685,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 25,
        "columnEnd": 63
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 25,
        "columnEnd": 82
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Taken from here\n# https://hexdocs.pm/phoenix/releases.html#containers\n#\nARG BUILDER_IMAGE=\"hexpm/elixir:1.13.3-erlang-24.2.1-debian-bullseye-20210902-slim\"\nARG RUNNER_IMAGE=\"debian:bullseye-20210902-slim\"\n\nFROM ${BUILDER_IMAGE} as builder\n\n# install build dependencies\nRUN apt-get update -y && apt-get install --no-install-recommends -y build-essential git \\\n    && apt-get clean && rm -f /var/lib/apt/lists/*_*\n\n# prepare build dir\nWORKDIR /app\n\n# install hex + rebar\nRUN mix local.hex --force && \\\n    mix local.rebar --force\n\n# set build ENV\nENV MIX_ENV=\"prod\"\n\n# install mix dependencies\nCOPY mix.exs mix.lock ./\nRUN mix deps.get --only $MIX_ENV\nRUN mkdir config\n\n# copy compile-time config files before we compile dependencies\n# to ensure any relevant config change will trigger the dependencies\n# to be re-compiled.\nCOPY config/config.exs config/${MIX_ENV}.exs config/\nRUN mix deps.compile\n\nCOPY priv priv\n\n# note: if your project uses a tool like https://purgecss.com/,\n# which customizes asset compilation based on what it finds in\n# your Elixir templates, you will need to move the asset compilation\n# step down so that `lib` is available.\nCOPY assets assets\n\n# compile assets\nRUN mix assets.deploy\n\n# Compile the release\nCOPY lib lib\n\nRUN mix compile\n\n# Changes to config/runtime.exs don't require recompiling the code\nCOPY config/runtime.exs config/\n\nCOPY rel rel\nRUN mix release\n\n# start a new build stage so that the final image will only contain\n# the compiled release and other runtime necessities\nFROM ${RUNNER_IMAGE}\n\nRUN apt-get update -y && apt-get install --no-install-recommends -y libstdc++6 openssl libncurses5 locales \\\n  && apt-get clean && rm -f /var/lib/apt/lists/*_*\n\n# Set the locale\nRUN sed -i '/en_US.UTF-8/s/^# //g' /etc/locale.gen && locale-gen\n\nENV LANG en_US.UTF-8\nENV LANGUAGE en_US:en\nENV LC_ALL en_US.UTF-8\n\nWORKDIR \"/app\"\nRUN chown nobody /app\n\n# Only copy the final release from the build stage\nCOPY --from=builder --chown=nobody:root /app/_build/prod/rel/mfpb ./\n\nUSER nobody\n\nCMD /app/bin/server\n"
}