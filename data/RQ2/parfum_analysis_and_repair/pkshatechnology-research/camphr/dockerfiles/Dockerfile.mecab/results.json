{
  "startTime": 1674215775691,
  "endTime": 1674215776661,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 47,
        "columnEnd": 58
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 64,
        "columnEnd": 95
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 26
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG PYTHON_VERSION\nFROM python:${PYTHON_VERSION}-buster\nENV HOME=/root\nARG WORKDIR\n\nENV MECAB_URL \"https://drive.google.com/uc?export=download&id=0B4y35FiV1wh7cENtOXlicTFaRUE\"\nENV IPADIC_URL \"https://drive.google.com/uc?export=download&id=0B4y35FiV1wh7MWVlSDBCSXZMTXM\"\n\n# install mecab\nRUN cd /tmp && \\\n    wget --no-check-certificate ${MECAB_URL} -O mecab.tar.gz && \\\n    tar xzvf mecab.tar.gz && cd mecab-0.996 && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make && make check && make install && \\\n    rm -rf /tmp/* && rm mecab.tar.gz\n# install ipadic\nRUN cd /tmp && \\\n    wget --no-check-certificate ${IPADIC_URL} -O ipadic.tar.gz && \\\n    tar xzvf ipadic.tar.gz && cd mecab-ipadic-2.7.0-20070801 && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-charset=utf8 && ldconfig && make && make install && \\\n    rm -rf /tmp/* && rm ipadic.tar.gz\n\n# install poetry\nRUN pip install --no-cache-dir -U poetry && \\\n    poetry config virtualenvs.create false\n\n# install python dependencies\nRUN mkdir ${HOME}/camphr && \\\n    touch ${HOME}/camphr/__init__.py && \\\n    touch ${HOME}/README.md\nWORKDIR ${HOME}/${WORKDIR}\nCOPY ${WORKDIR}/pyproject.toml .\nCOPY pyproject.toml ${HOME}/\nARG INSTALL_CMD\nrun ${INSTALL_CMD}\n\n# install source\nCOPY . ${HOME}\nRUN poetry install\n"
}