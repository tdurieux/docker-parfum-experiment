{
  "startTime": 1674253968106,
  "endTime": 1674253969193,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 4,
        "columnEnd": 46
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:jessie\n\n# Container containing php-fpm and php-cli to run and interact with eZ Platform\n#\n# It has two modes of operation:\n# - (default run.sh cmd) Reconfigure eZ Platform/Publish based on provided env variables and start php-fpm\n# - (bash|php|composer) Allows to execute composer, php or bash against the install\n\n# Set defaults for variables used by run.sh\n# If you change MAX_EXECUTION TIME, also change fastcgi_read_timeout accordingly in nginx!\nENV DEBIAN_FRONTEND=noninteractive \\\n    TIMEZONE=Europe/Warsaw \\\n    MEMORY_LIMIT=512M \\\n    MAX_EXECUTION_TIME=180 \\\n    PORT=9000 \\\n    COMPOSER_HOME=/var/.composer\n\n## Get packages\n### unzip needed due to https://github.com/composer/composer/issues/4471\nRUN apt-get update -q -y \\\n && apt-get install -q -y --force-yes --no-install-recommends \\\n    php5-cli \\\n    php5-readline \\\n    php5-fpm \\\n    php5-mysqlnd \\\n    php5-json \\\n    php5-xsl \\\n    php5-intl \\\n    php5-mcrypt \\\n    php5-gd \\\n    php5-curl \\\n    php5-twig \\\n    php5-xdebug \\\n    mysql-client \\\n    imagemagick \\\n    curl \\\n    wget \\\n    ca-certificates \\\n    less \\\n    vim \\\n    git \\\n    acl \\\n    sudo \\\n    tree \\\n    unzip \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Create Composer directory (cache and auth files)\nRUN mkdir -p $COMPOSER_HOME\n\n# Set timezone\nRUN echo $TIMEZONE > /etc/timezone && dpkg-reconfigure --frontend noninteractive tzdata\nRUN sed -i \"s@^;date.timezone =.*@date.timezone = $TIMEZONE@\" /etc/php5/*/php.ini\n\n# Set memory limit\nRUN sed -i \"s@^memory_limit =.*@memory_limit = $MEMORY_LIMIT@\" /etc/php5/fpm/php.ini\n\n# Increase realpath_cache_size\nRUN sed -i \"s@^;realpath_cache_size =.*@realpath_cache_size = 256k@\" /etc/php5/fpm/php.ini\n\n# Set Max execution time\nRUN sed -i \"s@^max_execution_time = .*@max_execution_time = $MAX_EXECUTION_TIME@\" /etc/php5/fpm/php.ini\n\n# Enable all error reporting\nRUN sed -i \"s@^error_reporting = .*@error_reporting = E_ALL@\" /etc/php5/*/php.ini\n\n# Set FPM Debug level\nRUN sed -i \"s@^;log_level = notice@log_level = debug@\" /etc/php5/fpm/php-fpm.conf\n\n# Disable daemonizeing php-fpm\nRUN sed -i \"s@^;daemonize = yes*@daemonize = no@\" /etc/php5/fpm/php-fpm.conf\n\n# Set listen socket for php-fpm\nRUN sed -i \"s@^listen = /var/run/php5-fpm.sock@listen = $PORT@\" /etc/php5/fpm/pool.d/www.conf\n\n# Get Composer\nRUN curl -f -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin && mv /usr/local/bin/composer.phar /usr/local/bin/composer\n\n# As application is put in as volume we do all needed operation on run\nADD run.sh /run.sh\nADD generate_kickstart_file.sh /generate_kickstart_file.sh\nADD generate_parameters_file.sh /generate_parameters_file.sh\nADD prepare_distribution_volume.sh /prepare_distribution_volume.sh\nADD prepare_behat.sh /prepare_behat.sh\nADD config/opcache.ini /etc/php5/mods-available/opcache.ini\nADD config/xdebug.ini /etc/php5/mods-available/xdebug.ini\nADD config/xdebug.ini /etc/php5/mods-available/xdebug.ini-ezp54\n\nRUN chmod 755 /*.sh\nRUN groupadd -g 10000 ez && useradd -g ez -u 10000 ez\n\nWORKDIR /var/www\n\nCMD /run.sh\n\nEXPOSE 9000 9001\n"
}