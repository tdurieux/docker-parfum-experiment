{
  "startTime": 1674246386718,
  "endTime": 1674246388501,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 4,
        "columnEnd": 46
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM php:7.1-fpm\n\n# Container containing php-fpm and php-cli to run and interact with eZ Platform\n#\n# It has two modes of operation:\n# - (default run.sh cmd) Reconfigure eZ Platform/Publish based on provided env variables and start php-fpm\n# - (bash|php|composer) Allows to execute composer, php or bash against the install\n\n# Set defaults for variables used by run.sh\n# If you change MAX_EXECUTION TIME, also change fastcgi_read_timeout accordingly in nginx!\nENV DEBIAN_FRONTEND=noninteractive \\\n    TIMEZONE=Europe/Warsaw \\\n    MEMORY_LIMIT=256M \\\n    MAX_EXECUTION_TIME=90 \\\n    PORT=9000 \\\n    COMPOSER_HOME=/var/.composer\n\n## Get packages\n### unzip needed due to https://github.com/composer/composer/issues/4471\nRUN apt-get update -q -y \\\n && apt-get install -q -y --force-yes --no-install-recommends \\\n        libfreetype6-dev \\\n        libjpeg62-turbo-dev \\\n        libxpm-dev \\\n        libpng12-dev \\\n        libicu-dev \\\n        libxslt1-dev \\\n        mysql-client \\\n        curl \\\n        wget \\\n        ca-certificates \\\n        less \\\n        vim \\\n        git \\\n        acl \\\n        sudo \\\n        tree \\\n        unzip \\\n        && rm -rf /var/lib/apt/lists/*\n\n# Install and configure php plugins\nRUN docker-php-ext-configure mysqli --with-mysqli=mysqlnd \\\n && docker-php-ext-configure pdo_mysql --with-pdo-mysql=mysqlnd \\\n && docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ --with-png-dir=/usr/include/ --with-xpm-dir=/usr/include/ --enable-gd-native-ttf --enable-gd-jis-conv \\\n && docker-php-ext-install exif gd mbstring intl xsl zip mysqli pdo_mysql \\\n && docker-php-ext-enable opcache\n\n# Create Composer directory (cache and auth files)\nRUN mkdir -p $COMPOSER_HOME\n\n# Set timezone\nRUN echo $TIMEZONE > /etc/timezone && dpkg-reconfigure --frontend noninteractive tzdata\n\n# Set some php.ini config\nRUN echo \"date.timezone = $TIMEZONE\" >> /usr/local/etc/php/php.ini \\\n && echo \"memory_limit = $MEMORY_LIMIT\" >> /usr/local/etc/php/php.ini \\\n && echo \"realpath_cache_size = 256k\" >> /usr/local/etc/php/php.ini \\\n && echo \"display_errors = Off\" >> /usr/local/etc/php/php.ini \\\n && echo \"max_execution_time = $MAX_EXECUTION_TIME\" >> /usr/local/etc/php/php.ini\n\n# Disable daemonizeing php-fpm\n#RUN sed -i \"s@^;daemonize = yes*@daemonize = no@\" /usr/local/etc/php-fpm.conf\n\n# Add pid file to be able to restart php-fpm\nRUN sed -i \"s@^\\[global\\]@\\[global\\]\\n\\npid = /run/php-fpm.pid@\" /usr/local/etc/php-fpm.conf\n\n# Set listen socket for php-fpm\nRUN sed -i \"s@^listen = 127.0.0.1:9000@listen = $PORT@\" /usr/local/etc/php-fpm.d/www.conf.default \\\n && sed -i \"s@^user = nobody@user = www-data@\" /usr/local/etc/php-fpm.d/www.conf.default \\\n && sed -i \"s@^group = nobody@group = www-data@\" /usr/local/etc/php-fpm.d/www.conf.default\n\n# Get Composer\nRUN curl -f -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin && mv /usr/local/bin/composer.phar /usr/local/bin/composer\n\n# As application is put in as volume we do all needed operation on run\nADD run.sh /run.sh\nADD generate_kickstart_file.sh /generate_kickstart_file.sh\nADD generate_parameters_file.sh /generate_parameters_file.sh\nADD prepare_distribution_volume.sh /prepare_distribution_volume.sh\nADD prepare_behat.sh /prepare_behat.sh\n\n#/usr/local/etc/php/conf.d/docker-php-ext-opcache.ini\n#ADD config/opcache.ini /usr/local/php7/etc/conf.d/opcache.ini\n\nRUN chmod 755 /*.sh\nRUN groupadd -g 10000 ez && useradd -g ez -u 10000 ez\n\nWORKDIR /var/www\n\nCMD /run.sh\n\nEXPOSE 9000\n"
}