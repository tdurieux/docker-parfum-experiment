{
  "startTime": 1674253347798,
  "endTime": 1674253348523,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 47,
        "columnEnd": 65
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 13,
        "lineEnd": 23,
        "columnStart": 45,
        "columnEnd": 8
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.9-alpine3.12\n\nLABEL maintainer=\"Rhino Assessment Team <pacu@rhinosecuritylabs.com>\"\nLABEL pacu.version=\"1.0.1\"\n\nRUN apk add --no-cache aws-cli\n\n# Install Pacu\nWORKDIR /usr/src/pacu/\nENV PYTHONPATH /usr/src/pacu/\n\n# Install dev requirements\nRUN --mount=type=cache,target=/var/cache/apk apk add --no-cache \\\n    gcc \\\n    build-base \\\n    musl-dev \\\n    linux-headers \\\n    libffi-dev \\\n    openssl-dev \\\n    rust \\\n    cargo \\\n    make \\\n    bash\n\nRUN --mount=type=cache,target=/root/.cache/pip python -m pip install --upgrade pip\nRUN --mount=type=cache,target=/root/.cache/pip pip install --no-cache-dir poetry\n\nRUN echo 'AWS_EC2_METADATA_DISABLED=true' >> /etc/profile\n\nCOPY ./requirements* ./pyproject.toml ./poetry.lock ./\n\n# Some IDE's will override the entrypoint so install everything globally\nRUN poetry export --without-hashes --dev -o /tmp/requirements-dev.txt && \\\n    pip install --no-cache-dir -r /tmp/requirements-dev.txt\n\nCOPY ./ ./\n\nENTRYPOINT [\"bash\", \"-l\"]\n"
}