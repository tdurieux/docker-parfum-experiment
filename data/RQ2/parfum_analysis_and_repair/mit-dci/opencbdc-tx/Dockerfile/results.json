{
  "startTime": 1674219959567,
  "endTime": 1674219960461,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 9
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 9
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:20.04\n\n# set non-interactive shell\nENV DEBIAN_FRONTEND noninteractive\n\n# install base packages\nRUN apt update && \\\n    apt install --no-install-recommends -y \\\n      build-essential \\\n      wget \\\n      cmake \\\n      libgtest-dev \\\n      libgmock-dev \\\n      net-tools \\\n      lcov \\\n      git && rm -rf /var/lib/apt/lists/*;\n\n# Args\nARG CMAKE_BUILD_TYPE=\"Release\"\nARG LEVELDB_VERSION=\"1.22\"\nARG NURAFT_VERSION=\"1.3.0\"\n\n# Install LevelDB\nRUN wget https://github.com/google/leveldb/archive/${LEVELDB_VERSION}.tar.gz && \\\n    tar xzvf ${LEVELDB_VERSION}.tar.gz && \\\n    rm -f ${LEVELDB_VERSION}.tar.gz && \\\n    cd leveldb-${LEVELDB_VERSION} && \\\n    cmake -DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE} -DLEVELDB_BUILD_TESTS=0 -DLEVELDB_BUILD_BENCHMARKS=0 -DBUILD_SHARED_LIBS=0 . && \\\n    make -j$(nproc) && \\\n    make install\n\n# Install NuRaft\nRUN wget https://github.com/eBay/NuRaft/archive/v${NURAFT_VERSION}.tar.gz && \\\n    tar xzvf v${NURAFT_VERSION}.tar.gz && \\\n    rm v${NURAFT_VERSION}.tar.gz && \\\n    cd \"NuRaft-${NURAFT_VERSION}\" && \\\n    ./prepare.sh && \\\n    mkdir build && \\\n    cd build && \\\n    cmake -DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE} -DDISABLE_SSL=1 .. && \\\n    make -j$(nproc) static_lib && \\\n    cp libnuraft.a /usr/local/lib && \\\n    cp -r ../include/libnuraft /usr/local/include\n\n# Set working directory\nWORKDIR /opt/tx-processor\n\n# Copy source\nCOPY . .\n\n# Update submodules and run configure.sh\nRUN git submodule init && git submodule update\n\n# Build binaries\nRUN mkdir build && \\\n    cd build && \\\n    cmake -DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE} .. && \\\n    make -j$(nproc)\n"
}