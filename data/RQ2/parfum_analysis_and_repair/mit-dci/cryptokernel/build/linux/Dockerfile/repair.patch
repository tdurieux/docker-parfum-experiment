diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/mit-dci/cryptokernel/build/linux/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/mit-dci/cryptokernel/build/linux/Dockerfile/repaired.Dockerfile
index 972bdb9..40319d7 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/mit-dci/cryptokernel/build/linux/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/mit-dci/cryptokernel/build/linux/Dockerfile/repaired.Dockerfile
@@ -1,19 +1,19 @@
 FROM ubuntu:16.04
 
 RUN apt update && apt dist-upgrade -y && \
-    apt install -y make git cmake wget build-essential automake libtool bison flex
+    apt install --no-install-recommends -y make git cmake wget build-essential automake libtool bison flex && rm -rf /var/lib/apt/lists/*;
 
 RUN wget https://github.com/open-source-parsers/jsoncpp/archive/1.8.4.tar.gz \
-    && tar -xzvf 1.8.4.tar.gz
+    && tar -xzvf 1.8.4.tar.gz && rm 1.8.4.tar.gz
 WORKDIR jsoncpp-1.8.4
 RUN cmake . -DJSONCPP_WITH_TESTS=NO -DBUILD_STATIC_LIBS=YES \
-    -DBUILD_SHARED_LIBS=NO -DCMAKE_BUILD_TYPE=Release 
+    -DBUILD_SHARED_LIBS=NO -DCMAKE_BUILD_TYPE=Release
 RUN make && make install
 
 WORKDIR ../
 
 RUN wget https://www.openssl.org/source/openssl-1.1.0h.tar.gz && \
-    tar -xvzf openssl-1.1.0h.tar.gz
+    tar -xvzf openssl-1.1.0h.tar.gz && rm openssl-1.1.0h.tar.gz
 WORKDIR openssl-1.1.0h
 RUN ./Configure linux-x86_64 no-shared
 RUN make && make install
@@ -21,24 +21,24 @@ RUN make && make install
 WORKDIR ../
 
 RUN wget https://curl.haxx.se/download/curl-7.59.0.tar.gz && \
-    tar xzvf curl-7.59.0.tar.gz
+    tar xzvf curl-7.59.0.tar.gz && rm curl-7.59.0.tar.gz
 WORKDIR curl-7.59.0
-RUN ./configure --disable-shared --enable-static --disable-ldap 
+RUN ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --disable-shared --enable-static --disable-ldap
 RUN make && make install
 
 WORKDIR ../
 
-RUN wget http://ftp.gnu.org/gnu/libmicrohttpd/libmicrohttpd-0.9.59.tar.gz && \
-    tar -xvzf libmicrohttpd-0.9.59.tar.gz
+RUN wget https://ftp.gnu.org/gnu/libmicrohttpd/libmicrohttpd-0.9.59.tar.gz && \
+    tar -xvzf libmicrohttpd-0.9.59.tar.gz && rm libmicrohttpd-0.9.59.tar.gz
 WORKDIR libmicrohttpd-0.9.59
-RUN ./configure --disable-shared
+RUN ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --disable-shared
 RUN make && make install
 
 WORKDIR ../
 
 RUN wget https://github.com/cinemast/libjson-rpc-cpp/archive/v1.1.0.tar.gz && \
-    tar -xvzf v1.1.0.tar.gz
-WORKDIR libjson-rpc-cpp-1.1.0 
+    tar -xvzf v1.1.0.tar.gz && rm v1.1.0.tar.gz
+WORKDIR libjson-rpc-cpp-1.1.0
 RUN cmake -E env CXXFLAGS="-DCURL_STATICLIB" cmake . -DBUILD_SHARED_LIBS=NO \
     -DBUILD_STATIC_LIBS=YES -DCOMPILE_TESTS=NO \
     -DCOMPILE_STUBGEN=NO -DCOMPILE_EXAMPLES=NO -DCMAKE_BUILD_TYPE=Release \
@@ -61,7 +61,7 @@ RUN git clone https://github.com/SFML/SFML.git
 WORKDIR SFML
 RUN cmake . -DBUILD_SHARED_LIBS=NO -DSFML_BUILD_DOC=NO -DSFML_BUILD_AUDIO=NO \
     -DSFML_BUILD_GRAPHICS=NO -DSFML_BUILD_WINDOW=NO -DSFML_BUILD_EXAMPLES=NO \
-    -DCMAKE_BUILD_TYPE=Release 
+    -DCMAKE_BUILD_TYPE=Release
 RUN make && make install
 RUN cp /usr/local/lib/libsfml-network-s.a /usr/local/lib/libsfml-network.a && cp /usr/local/lib/libsfml-system-s.a /usr/local/lib/libsfml-system.a
 
@@ -71,7 +71,7 @@ RUN git clone https://github.com/rweather/noise-c
 WORKDIR noise-c
 ADD noise-c-linux.patch .
 RUN git apply noise-c-linux.patch
-RUN ./autogen.sh && ./configure 
+RUN ./autogen.sh && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"
 RUN make && make install
 
 WORKDIR ../
@@ -96,7 +96,7 @@ WORKDIR ../
 
 RUN wget https://github.com/premake/premake-core/releases/download/v5.0.0-alpha12/premake-5.0.0-alpha12-linux.tar.gz && \
     tar zxvf premake-5.0.0-alpha12-linux.tar.gz && \
-    cp premake5 /usr/bin
+    cp premake5 /usr/bin && rm premake-5.0.0-alpha12-linux.tar.gz
 
 COPY ./cryptokernel /cryptokernel