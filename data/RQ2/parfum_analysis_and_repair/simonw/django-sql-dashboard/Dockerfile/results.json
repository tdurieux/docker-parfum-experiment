{
  "startTime": 1674249012161,
  "endTime": 1674249012642,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 34,
        "columnEnd": 58
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 14,
        "columnStart": 22,
        "columnEnd": 31
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.9\n\nWORKDIR /app\n\n# Set up the minimum structure needed to install\n# django_sql_dashboard's dependencies and the package itself\n# in development mode.\nCOPY setup.py README.md .\nRUN mkdir django_sql_dashboard && pip install --no-cache-dir -e '.[test]'\n\n# We need to have postgres installed in this container\n# because the automated test suite actually spins up\n# (and shuts down) a database inside the container.\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n  postgresql postgresql-contrib \\\n  && rm -rf /var/lib/apt/lists/*\n\n# Install dependencies needed for editing documentation.\nCOPY docs/requirements.txt .\nRUN pip install --no-cache-dir -r requirements.txt\n\nARG GID=1000\nARG UID=1000\n\n# Set up a non-root user.  Aside from being best practice,\n# we also need to do this because the test suite refuses to\n# run as the root user.\nRUN groupadd -g ${GID} appuser && useradd -r -u ${UID} -g appuser appuser\n\nUSER appuser\n"
}