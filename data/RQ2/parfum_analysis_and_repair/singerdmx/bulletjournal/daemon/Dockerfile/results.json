{
  "startTime": 1674255687255,
  "endTime": 1674255687793,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 102
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 94
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 18,
        "columnEnd": 30
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu as ubuntu-builder\n\nRUN apt-get update -y && \\\n    apt-get install --no-install-recommends curl zip make git -y && \\\n    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends tzdata golang -y && \\\n    curl -f -OL https://github.com/google/protobuf/releases/download/v3.4.0/protoc-3.4.0-linux-x86_64.zip && \\\n    unzip protoc-3.4.0-linux-x86_64.zip -d protoc3 && \\\n    mv protoc3/bin/* /usr/local/bin/ && \\\n    mv protoc3/include/* /usr/local/include/ && rm -rf /var/lib/apt/lists/*;\n\nRUN mkdir /app-daemon\nWORKDIR /app-daemon\n\nCOPY proto_gen proto_gen\n\nWORKDIR /app-daemon/proto_gen/github.com/singerdmx/BulletJournal/protobuf/daemon\n\nRUN go get -u github.com/golang/protobuf/protoc-gen-go && \\\n    go get -u github.com/grpc-ecosystem/grpc-gateway/protoc-gen-grpc-gateway && \\\n    go get -u github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger\n\nWORKDIR /app-daemon/proto_gen/github.com/singerdmx/BulletJournal/protobuf/\n\nRUN PATH=/root/go/bin:/root/go:$PATH GOPATH=/root/go make\n\n# Start from a Debian image with Go 1.13 installed and a workspace (GOPATH)\n# configured at /go.\nFROM golang:1.15-alpine as builder\n\n# Set working directory to be daemon in this repository\nWORKDIR /go/src/github.com/singerdmx/BulletJournal/daemon\nCOPY --from=ubuntu-builder /app-daemon/proto_gen proto_gen\n# Copy\nCOPY api api\nCOPY cmd cmd\nCOPY clients clients\nCOPY config config\nCOPY consts consts\nCOPY logging logging\nCOPY persistence persistence\nCOPY rpc_server rpc_server\nCOPY utils utils\nCOPY go.mod .\nCOPY Makefile .\nCOPY proto_gen proto_gen\n\n# Build the grpc command inside the container.\nRUN apk update && \\\n    apk add --no-cache git protobuf make && \\\n    go get -u github.com/golang/protobuf/protoc-gen-go\n\nRUN go mod vendor\nRUN GOOS=linux TARGET=/go/bin make build\n\n\n# Target image with only executables\nFROM alpine:latest\n\n# Add curl for health check\nRUN apk update && apk add --no-cache curl && apk add --no-cache tzdata\n\n# Copy executable to target folder\nCOPY --from=builder /go/bin/daemon-server /go/bin/\n\n# Copy configuration files to /config folder\nARG tier=prod\nARG sourceConfigPath=config/config-${tier}.yaml\nARG destConfigPath=/${sourceConfigPath}\nENV tierEnv $tier\nCOPY config/config.yaml /config/config.yaml\nCOPY ${sourceConfigPath} ${destConfigPath}\n\n# Run the grpc command by default when the container starts.\nENTRYPOINT /go/bin/daemon-server -${tierEnv}\n\n# Document that the service listens on port 50051.\nEXPOSE 50051\n"
}