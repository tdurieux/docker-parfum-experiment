{
  "startTime": 1674256301292,
  "endTime": 1674256303222,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 66
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 79
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 170,
        "lineEnd": 170,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 179,
        "lineEnd": 179,
        "columnStart": 4,
        "columnEnd": 112
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 242,
        "lineEnd": 242,
        "columnStart": 4,
        "columnEnd": 75
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 170,
        "lineEnd": 170,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 179,
        "lineEnd": 179,
        "columnStart": 4,
        "columnEnd": 112
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 172,
        "lineEnd": 172,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 184,
        "lineEnd": 208,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 237,
        "lineEnd": 237,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 245,
        "lineEnd": 245,
        "columnStart": 4,
        "columnEnd": 66
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 254,
        "lineEnd": 254,
        "columnStart": 4,
        "columnEnd": 51
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM tiredofit/debian:buster\nLABEL maintainer=\"Dave Conroy (dave at tiredofit dot ca)\"\n\n### Set defaults\nENV ASTERISK_VERSION=17.9.4 \\\n    BCG729_VERSION=1.0.4 \\\n    DONGLE_VERSION=20200610 \\\n    G72X_CPUHOST=penryn \\\n    G72X_VERSION=0.1 \\\n    MONGODB_VERSION=4.2 \\\n    PHP_VERSION=5.6 \\\n    SPANDSP_VERSION=20180108 \\\n    RTP_START=18000 \\\n    RTP_FINISH=20000\n\n### Pin libxml2 packages to Debian repositories\nRUN echo \"Package: libxml2*\" > /etc/apt/preferences.d/libxml2 && \\\n    echo \"Pin: release o=Debian,n=buster\" >> /etc/apt/preferences.d/libxml2 && \\\n    echo \"Pin-Priority: 501\" >> /etc/apt/preferences.d/libxml2 && \\\n    APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=TRUE && \\\n    \\\n### Install dependencies\n    set -x && \\\n    curl -f -sSLk https://packages.sury.org/php/apt.gpg | apt-key add - && \\\n    curl -f -sSL https://deb.nodesource.com/gpgkey/nodesource.gpg.key | apt-key add - && \\\n    echo \"deb https://deb.nodesource.com/node_10.x $(cat /etc/os-release |grep \"VERSION=\" | awk 'NR>1{print $1}' RS='(' FS=')') main\" > /etc/apt/sources.list.d/nodejs.list && \\\n    echo \"deb https://packages.sury.org/php/ buster main\" > /etc/apt/sources.list.d/deb.sury.org.list && \\\n    curl -f -sSLk https://www.mongodb.org/static/pgp/server-${MONGODB_VERSION}.asc | apt-key add - && \\\n    echo \"deb http://repo.mongodb.org/apt/debian buster/mongodb-org/${MONGODB_VERSION} main\" > /etc/apt/sources.list.d/mongodb-org.list && \\\n    echo \"deb http://ftp.us.debian.org/debian/ buster-backports main\" > /etc/apt/sources.list.d/backports.list && \\\n    echo \"deb-src http://ftp.us.debian.org/debian/ buster-backports main\" >> /etc/apt/sources.list.d/backports.list && \\\n    apt-get update && \\\n    apt-get -o Dpkg::Options::=\"--force-confold\" upgrade -y && \\\n\n### Install development dependencies\n    ASTERISK_BUILD_DEPS='\\\n                        autoconf \\\n                        automake \\\n                        bison \\\n                        binutils-dev \\\n                        build-essential \\\n                        doxygen \\\n                        flex \\\n                        graphviz \\\n                        libasound2-dev \\\n                        libbluetooth-dev \\\n                        libc-client2007e-dev \\\n                        libcfg-dev \\\n                        libcodec2-dev \\\n                        libcorosync-common-dev \\\n                        libcpg-dev \\\n                        libcurl4-openssl-dev \\\n                        libedit-dev \\\n                        libfftw3-dev \\\n                        libgmime-2.6-dev \\\n                        libgsm1-dev \\\n                        libical-dev \\\n                        libiksemel-dev \\\n                        libjansson-dev \\\n                        libldap2-dev \\\n                        liblua5.2-dev \\\n                        libmariadb-dev \\\n                        libmariadbclient-dev \\\n                        libmp3lame-dev \\\n                        libncurses5-dev \\\n                        libneon27-dev \\\n                        libnewt-dev \\\n                        libogg-dev \\\n                        libopus-dev \\\n                        libosptk-dev \\\n                        libpopt-dev \\\n                        libradcli-dev \\\n                        libresample1-dev \\\n                        libsndfile1-dev \\\n                        libsnmp-dev \\\n                        libspeex-dev \\\n                        libspeexdsp-dev \\\n                        libsqlite3-dev \\\n                        libsrtp2-dev \\\n                        libssl-dev \\\n                        libtiff-dev \\\n                        libtool-bin \\\n                        libunbound-dev \\\n                        liburiparser-dev \\\n                        libvorbis-dev \\\n                        libvpb-dev \\\n                        libxml2-dev \\\n                        libxslt1-dev \\\n                        portaudio19-dev \\\n                        python-dev \\\n                        subversion \\\n                        unixodbc-dev \\\n                        uuid-dev \\\n                        zlib1g-dev' && \\\n\n### Install runtime dependencies\n    apt-get install --no-install-recommends -y \\\n                    $ASTERISK_BUILD_DEPS \\\n                    apache2 \\\n                    composer \\\n                    fail2ban \\\n                    ffmpeg \\\n                    flite \\\n                    freetds-dev \\\n                    git \\\n                    g++ \\\n                    iptables \\\n                    lame \\\n                    libavahi-client3 \\\n                    libbluetooth3 \\\n                    libc-client2007e \\\n                    libcfg7 \\\n                    libcpg4 \\\n                    libgmime-2.6 \\\n                    libical3 \\\n                    libiodbc2 \\\n                    libiksemel3 \\\n                    libicu63 \\\n                    libicu-dev \\\n                    libneon27 \\\n                    libosptk4 \\\n                    libresample1 \\\n                    libsnmp30 \\\n                    libspeexdsp1 \\\n                    libsrtp2-1 \\\n                    libunbound8 \\\n                    liburiparser1 \\\n                    libvpb1 \\\n                    locales \\\n                    locales-all \\\n                    make \\\n                    mariadb-client \\\n                    mariadb-server \\\n                    mongodb-org \\\n                    mpg123 \\\n                    nodejs \\\n                    odbc-mariadb \\\n                    php${PHP_VERSION} \\\n                    php${PHP_VERSION}-curl \\\n                    php${PHP_VERSION}-cli \\\n                    php${PHP_VERSION}-mysql \\\n                    php${PHP_VERSION}-gd \\\n                    php${PHP_VERSION}-mbstring \\\n                    php${PHP_VERSION}-intl \\\n                    php${PHP_VERSION}-bcmath \\\n                    php${PHP_VERSION}-ldap \\\n                    php${PHP_VERSION}-xml \\\n                    php${PHP_VERSION}-zip \\\n                    php${PHP_VERSION}-sqlite3 \\\n                    php-pear \\\n                    pkg-config \\\n                    sipsak \\\n                    sngrep \\\n                    socat \\\n                    sox \\\n                    sqlite3 \\\n                    tcpdump \\\n                    tcpflow \\\n                    unixodbc \\\n                    uuid \\\n                    wget \\\n                    whois \\\n                    xmlstarlet && \\\n\n### Add users\n    addgroup --gid 2600 asterisk && \\\n    adduser --uid 2600 --gid 2600 --gecos \"Asterisk User\" --disabled-password asterisk && \\\n\n### Build SpanDSP\n    mkdir -p /usr/src/spandsp && \\\n    curl -f -ssLk https://sources.buildroot.net/spandsp/spandsp-${SPANDSP_VERSION}.tar.gz | tar xvfz - --strip 1 -C /usr/src/spandsp && \\\n    cd /usr/src/spandsp && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr && \\\n    make && \\\n    make install && \\\n\n### Build Asterisk\n    cd /usr/src && \\\n    mkdir -p asterisk && \\\n    curl -f -sSLk https://downloads.asterisk.org/pub/telephony/asterisk/releases/asterisk-${ASTERISK_VERSION}.tar.gz | tar xvfz - --strip 1 -C /usr/src/asterisk && \\\n    cd /usr/src/asterisk/ && \\\n    make distclean && \\\n    contrib/scripts/get_mp3_source.sh && \\\n    cd /usr/src/asterisk && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n        --with-jansson-bundled \\\n        --with-pjproject-bundled \\\n        --with-bluetooth \\\n        --with-codec2 \\\n        --with-crypto \\\n        --with-gmime \\\n        --with-iconv \\\n        --with-iksemel \\\n        --with-inotify \\\n        --with-ldap \\\n        --with-libxml2 \\\n        --with-libxslt \\\n        --with-lua \\\n        --with-ogg \\\n        --with-opus \\\n        --with-resample \\\n        --with-spandsp \\\n        --with-speex \\\n        --with-sqlite3 \\\n        --with-srtp \\\n        --with-unixodbc \\\n        --with-uriparser \\\n        --with-vorbis \\\n        --with-vpb \\\n        && \\\n\n    make menuselect/menuselect menuselect-tree menuselect.makeopts && \\\n    menuselect/menuselect --disable BUILD_NATIVE \\\n                          --enable-category MENUSELECT_ADDONS \\\n                          --enable-category MENUSELECT_APPS \\\n                          --enable-category MENUSELECT_CHANNELS \\\n                          --enable-category MENUSELECT_CODECS \\\n                          --enable-category MENUSELECT_FORMATS \\\n                          --enable-category MENUSELECT_FUNCS \\\n                          --enable-category MENUSELECT_RES \\\n                          --enable BETTER_BACKTRACES \\\n                          --disable MOH-OPSOUND-WAV \\\n                          --enable MOH-OPSOUND-GSM \\\n                          --disable app_voicemail_imap \\\n                          --disable app_voicemail_odbc \\\n                          --disable res_digium_phone \\\n                          --disable codec_g729a && \\\n    make && \\\n    make install && \\\n    make install-headers && \\\n    make config && \\\n\n#### Add G729 codecs\n    git clone https://github.com/BelledonneCommunications/bcg729 /usr/src/bcg729 && \\\n    cd /usr/src/bcg729 && \\\n    git checkout tags/$BCG729_VERSION && \\\n    ./autogen.sh && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr --libdir=/lib && \\\n    make && \\\n    make install && \\\n\n    mkdir -p /usr/src/asterisk-g72x && \\\n    curl -f -sSLk https://bitbucket.org/arkadi/asterisk-g72x/get/master.tar.gz | tar xvfz - --strip 1 -C /usr/src/asterisk-g72x && \\\n    cd /usr/src/asterisk-g72x && \\\n    ./autogen.sh && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr --with-bcg729 --enable-$G72X_CPUHOST && \\\n    make && \\\n    make install && \\\n\n#### Add USB Dongle support\n    git clone https://github.com/rusxakep/asterisk-chan-dongle /usr/src/asterisk-chan-dongle && \\\n    cd /usr/src/asterisk-chan-dongle && \\\n    git checkout tags/$DONGLE_VERSION && \\\n    ./bootstrap && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-astversion=$ASTERISK_VERSION && \\\n    make && \\\n    make install && \\\n\n    ldconfig && \\\n\n### Cleanup\n    mkdir -p /var/run/fail2ban && \\\n    cd / && \\\n    rm -rf /usr/src/* /tmp/* /etc/cron* && \\\n    apt-get purge -y $ASTERISK_BUILD_DEPS && \\\n    apt-get -y autoremove && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/* && \\\n\n### FreePBX hacks\n    sed -i -e \"s/memory_limit = 128M/memory_limit = 256M/g\" /etc/php/${PHP_VERSION}/apache2/php.ini && \\\n    sed -i 's/\\(^upload_max_filesize = \\).*/\\120M/' /etc/php/${PHP_VERSION}/apache2/php.ini && \\\n    a2disconf other-vhosts-access-log.conf && \\\n    a2enmod rewrite && \\\n    a2enmod headers && \\\n    rm -rf /var/log/* && \\\n    mkdir -p /var/log/asterisk && \\\n    mkdir -p /var/log/apache2 && \\\n    mkdir -p /var/log/httpd && \\\n    update-alternatives --set php /usr/bin/php${PHP_VERSION} && \\\n\n### Zabbix setup\n    echo '%zabbix ALL=(asterisk) NOPASSWD:/usr/sbin/asterisk' >> /etc/sudoers && \\\n\n### Setup for data persistence\n    mkdir -p /assets/config/var/lib/ /assets/config/home/ && \\\n    mv /home/asterisk /assets/config/home/ && \\\n    ln -s /data/home/asterisk /home/asterisk && \\\n    mv /var/lib/asterisk /assets/config/var/lib/ && \\\n    ln -s /data/var/lib/asterisk /var/lib/asterisk && \\\n    ln -s /data/usr/local/fop2 /usr/local/fop2 && \\\n    mkdir -p /assets/config/var/run/ && \\\n    mv /var/run/asterisk /assets/config/var/run/ && \\\n    mv /var/lib/mysql /assets/config/var/lib/ && \\\n    mkdir -p /assets/config/var/spool && \\\n    mv /var/spool/cron /assets/config/var/spool/ && \\\n    ln -s /data/var/spool/cron /var/spool/cron && \\\n    mkdir -p /var/run/mongodb && \\\n    rm -rf /var/lib/mongodb && \\\n    ln -s /data/var/lib/mongodb /var/lib/mongodb && \\\n    ln -s /data/var/run/asterisk /var/run/asterisk && \\\n    rm -rf /var/spool/asterisk && \\\n    ln -s /data/var/spool/asterisk /var/spool/asterisk && \\\n    rm -rf /etc/asterisk && \\\n    ln -s /data/etc/asterisk /etc/asterisk && \\\n    ln -s /usr/sbin/crontab /usr/bin/crontab\n\n### Networking configuration\nEXPOSE 80 443 4445 4569 5060/udp 5160/udp 5061 5161 8001 8003 8008 8009 8025 ${RTP_START}-${RTP_FINISH}/udp\n\n### Files add\nADD install /\n"
}