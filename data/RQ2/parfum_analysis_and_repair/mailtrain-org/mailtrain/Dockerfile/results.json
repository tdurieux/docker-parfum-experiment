{
  "startTime": 1674255302388,
  "endTime": 1674255303684,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 22,
        "columnEnd": 33
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 22,
        "columnEnd": 46
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 22,
        "columnEnd": 46
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 24,
        "columnEnd": 48
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Mutistaged Node.js Build\nFROM node:10-alpine as builder\n\n# Install system dependencies\nRUN set -ex; \\\n    apk add --update --no-cache \\\n    make gcc g++ git python\n\n# Copy package.json dependencies\nCOPY server/package.json /app/server/package.json\nCOPY server/package-lock.json /app/server/package-lock.json\nCOPY client/package.json /app/client/package.json\nCOPY client/package-lock.json /app/client/package-lock.json\nCOPY shared/package.json /app/shared/package.json\nCOPY shared/package-lock.json /app/shared/package-lock.json\nCOPY zone-mta/package.json /app/zone-mta/package.json\nCOPY zone-mta/package-lock.json /app/zone-mta/package-lock.json\n\n# Install dependencies in each directory\nRUN cd /app/client && npm install && npm cache clean --force;\nRUN cd /app/shared && npm install --production && npm cache clean --force;\nRUN cd /app/server && npm install --production && npm cache clean --force;\nRUN cd /app/zone-mta && npm install --production && npm cache clean --force;\n\n# Later, copy the app files. That improves development speed as building the Docker image will not have\n# to download and install all the NPM dependencies every time there's a change in the source code\nCOPY . /app\n\nRUN set -ex; \\\n   cd /app/client && \\\n   npm run build && \\\n   rm -rf node_modules\n\n# Final Image\nFROM node:10-alpine\n\nWORKDIR /app/\n\n# Install system dependencies\nRUN set -ex; \\\n    apk add --update --no-cache \\\n    pwgen netcat-openbsd bash imagemagick\n\nCOPY --from=builder /app/ /app/\n\nEXPOSE 3000 3003 3004\nENTRYPOINT [\"bash\", \"/app/docker-entrypoint.sh\"]\n"
}