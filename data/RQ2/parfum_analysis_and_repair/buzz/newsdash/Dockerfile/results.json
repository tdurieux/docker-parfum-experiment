{
  "startTime": 1674253356798,
  "endTime": 1674253357085,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 12,
        "columnStart": 2,
        "columnEnd": 19
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 29,
        "lineEnd": 33,
        "columnStart": 2,
        "columnEnd": 21
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:alpine as build\nLABEL maintainer=\"buzz <buzz@users.noreply.github.com>\"\n\nWORKDIR /newsdash\nCOPY . .\nRUN set -xe && \\\n  apk add --update --no-cache \\\n    build-base \\\n    git \\\n    python3 && \\\n  yarn install \\\n    --non-interactive \\\n    --pure-lockfile && \\\n  yarn build && yarn cache clean;\n\nFROM node:alpine\nWORKDIR /newsdash\nCOPY --from=build /newsdash/package.json .\nCOPY --from=build /newsdash/packages/client/dist ./packages/client/dist\nCOPY --from=build /newsdash/packages/server/package.json ./packages/server/\nCOPY --from=build /newsdash/packages/server/src ./packages/server/src\nRUN set -xe && \\\n  addgroup -S newsdash && \\\n  adduser -S -g newsdash newsdash && \\\n  mkdir client && \\\n  yarn add \\\n    --cwd packages/server \\\n    --no-lockfile \\\n    pm2 && \\\n  yarn install \\\n    --cwd packages/server \\\n    --no-lockfile \\\n    --non-interactive \\\n    --production=true && \\\n  rm -r $(yarn cache dir) && yarn cache clean;\n\nENV REDIS_URL redis://redis:6379\nEXPOSE 3001\nVOLUME /newsdash/client\n\nCMD [\"/bin/sh\", \"-c\", \"cp -R packages/client/dist/* client/ && su - newsdash -s /bin/sh -c \\\"NODE_ENV=production REDIS_URL=${REDIS_URL} /newsdash/packages/server/node_modules/.bin/pm2-runtime start --name newsdash -- /newsdash/packages/server/src/index.js\\\"\"]\n"
}