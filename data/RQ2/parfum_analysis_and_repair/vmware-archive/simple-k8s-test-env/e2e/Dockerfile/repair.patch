diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/vmware-archive/simple-k8s-test-env/e2e/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/vmware-archive/simple-k8s-test-env/e2e/Dockerfile/repaired.Dockerfile
index 55496d2..c130e9a 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/vmware-archive/simple-k8s-test-env/e2e/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/vmware-archive/simple-k8s-test-env/e2e/Dockerfile/repaired.Dockerfile
@@ -12,39 +12,39 @@ ENV LANG=en_US.UTF-8
 ENV LC_ALL=C.UTF-8
 
 # Install pip
-RUN curl -sSL https://bootstrap.pypa.io/get-pip.py | python3 -
+RUN curl -f -sSL https://bootstrap.pypa.io/get-pip.py | python3 -
 
 # Install the ruby gem that enables the uploading of files as gists.
 RUN gem install gist
 
 # Install the AWS CLI
-RUN pip3 install awscli --upgrade
+RUN pip3 install --no-cache-dir awscli --upgrade
 
 # Download the Google Cloud SDK
-RUN curl -sSL https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-217.0.0-linux-x86_64.tar.gz | \
+RUN curl -f -sSL https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-217.0.0-linux-x86_64.tar.gz | \
     tar xzC / && \
     /google-cloud-sdk/bin/gcloud components update
 
 # Download Sonobuoy
-RUN curl -sSL https://github.com/heptio/sonobuoy/releases/download/v0.13.0/sonobuoy_0.13.0_linux_amd64.tar.gz | \
+RUN curl -f -sSL https://github.com/heptio/sonobuoy/releases/download/v0.13.0/sonobuoy_0.13.0_linux_amd64.tar.gz | \
     tar xzC /usr/local/bin --exclude=LICENSE
 
 # Download Terraform and place its binary in /usr/local/bin.
 ENV TF_VERSION=0.11.8
 ENV TF_ZIP=terraform_${TF_VERSION}_linux_amd64.zip
 ENV TF_URL=https://releases.hashicorp.com/terraform/${TF_VERSION}/${TF_ZIP}
-RUN curl -sSLO "${TF_URL}" && unzip "${TF_ZIP}" -d /usr/local/bin && rm -f "${TF_ZIP}"
+RUN curl -f -sSLO "${TF_URL}" && unzip "${TF_ZIP}" -d /usr/local/bin && rm -f "${TF_ZIP}"
 
 # Download the kubectl binary.
-RUN k8s_version="$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)" && \
-    curl -sSLo /usr/local/bin/kubectl "https://storage.googleapis.com/kubernetes-release/release/${k8s_version}/bin/linux/amd64/kubectl" && \
+RUN k8s_version="$( curl -f -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)" && \
+    curl -f -sSLo /usr/local/bin/kubectl "https://storage.googleapis.com/kubernetes-release/release/${k8s_version}/bin/linux/amd64/kubectl" && \
     chmod 0755 /usr/local/bin/kubectl
 
 # Copy the keepalive program to /usr/local/bin.
 COPY hack/keepalive/keepalive.linux_amd64 /usr/local/bin/keepalive
 
 # Download govc
-RUN curl -sSL https://github.com/vmware/govmomi/releases/download/v0.20.0/govc_linux_amd64.gz | \
+RUN curl -f -sSL https://github.com/vmware/govmomi/releases/download/v0.20.0/govc_linux_amd64.gz | \
     gzip -d >/usr/local/bin/govc && chmod 0755 /usr/local/bin/govc
 
 # Create the directory structure.