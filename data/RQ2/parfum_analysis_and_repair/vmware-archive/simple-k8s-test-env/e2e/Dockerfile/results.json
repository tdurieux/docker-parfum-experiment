{
  "startTime": 1674250047950,
  "endTime": 1674250048758,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 117
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 109
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 19,
        "columnEnd": 95
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 136
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 93
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 33
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:stretch-20190204-slim\nLABEL \"maintainer\" \"Andrew Kutz <akutz@vmware.com>\"\n\n# Update the CA certificates and clean up the apt cache.\nRUN apt-get -y update && \\\n    apt-get -y --no-install-recommends install \\\n    ca-certificates curl jq locales python3 ruby tar unzip && \\\n    rm -rf /var/cache/apt/* /var/lib/apt/lists/*\n\n# Set the locale so that the gist command is happy.\nENV LANG=en_US.UTF-8\nENV LC_ALL=C.UTF-8\n\n# Install pip\nRUN curl -f -sSL https://bootstrap.pypa.io/get-pip.py | python3 -\n\n# Install the ruby gem that enables the uploading of files as gists.\nRUN gem install gist\n\n# Install the AWS CLI\nRUN pip3 install --no-cache-dir awscli --upgrade\n\n# Download the Google Cloud SDK\nRUN curl -f -sSL https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-217.0.0-linux-x86_64.tar.gz | \\\n    tar xzC / && \\\n    /google-cloud-sdk/bin/gcloud components update\n\n# Download Sonobuoy\nRUN curl -f -sSL https://github.com/heptio/sonobuoy/releases/download/v0.13.0/sonobuoy_0.13.0_linux_amd64.tar.gz | \\\n    tar xzC /usr/local/bin --exclude=LICENSE\n\n# Download Terraform and place its binary in /usr/local/bin.\nENV TF_VERSION=0.11.8\nENV TF_ZIP=terraform_${TF_VERSION}_linux_amd64.zip\nENV TF_URL=https://releases.hashicorp.com/terraform/${TF_VERSION}/${TF_ZIP}\nRUN curl -f -sSLO \"${TF_URL}\" && unzip \"${TF_ZIP}\" -d /usr/local/bin && rm -f \"${TF_ZIP}\"\n\n# Download the kubectl binary.\nRUN k8s_version=\"$( curl -f -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)\" && \\\n    curl -f -sSLo /usr/local/bin/kubectl \"https://storage.googleapis.com/kubernetes-release/release/${k8s_version}/bin/linux/amd64/kubectl\" && \\\n    chmod 0755 /usr/local/bin/kubectl\n\n# Copy the keepalive program to /usr/local/bin.\nCOPY hack/keepalive/keepalive.linux_amd64 /usr/local/bin/keepalive\n\n# Download govc\nRUN curl -f -sSL https://github.com/vmware/govmomi/releases/download/v0.20.0/govc_linux_amd64.gz | \\\n    gzip -d >/usr/local/bin/govc && chmod 0755 /usr/local/bin/govc\n\n# Create the directory structure.\nRUN mkdir -p /tf/vmc\n\n# Copy the assets into the /tf directory.\nCOPY *.tf cloud_config.yaml destroy.sh entrypoint.sh upload_e2e.py sonobuoy.yaml /tf/\nCOPY vmc/*.tf /tf/vmc/\n\n# Make sure all of the scripts are marked as executable.\nRUN chmod 0755 /tf/*.sh /tf/*.py\n\n# The entrypoint command will be executed from the following working directory.\nWORKDIR /tf\n\n# Update the PATH to include the Google Cloud SDK.\nENV PATH=/google-cloud-sdk/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\n\n# Download the Terraform plug-ins.\nRUN cp data.tf data.tf.bak && \\\n  ./entrypoint.sh null plugins && \\\n  mv -f data.tf.bak data.tf\n\n# The default argument for the entrypoint will drop the user into a shell.\nCMD [ \"bash\" ]\nENTRYPOINT [ \"/tf/entrypoint.sh\" ]\n"
}