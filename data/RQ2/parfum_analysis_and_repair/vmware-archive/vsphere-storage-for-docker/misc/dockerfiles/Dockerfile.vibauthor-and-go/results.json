{
  "startTime": 1674217635744,
  "endTime": 1674217637046,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 91
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 116
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 69
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 69
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 143
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 38
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# This docker file is published using the kerneltime account to cnastorage org.\n# To use other account with access to the org update the CI/CD yaml file.\n# If any changes are to be made contact cna-storage@vmware.com\n# to publish the updates to docker hub.\n# This is published to docker hub for 2 reasons\n# 1. Drone cannot build this image and then use it without forking\n#    a separate repo and adding dependencies between dockerfile\n#    and the vsphere-storage-for-docker repo.\n# 2. Others outside the project can find this useful.\n\n\n#\n## This container is used for different duties in vsphere-storage-for-docker dev process:\n##\n## - Build of GO code            => need golang 1.5+\n## - Build of C VMCI wrappers    => need gcc and 32 bit libs\n## - Build of ESX .VIB package   => need vibauthor\n## - Manual investigations etc   => may need wget\n## - Manipulating dependencies   => need gvt\n## - Controlling VMs under ESX   => may need govc command line\n##\n\n# Current tag: 0.12 (used in drone.yml).\n# Build the image manually (docker image build -t cnastorage/vibauthor-and-go:<tag> -f <this file> .)\n\nFROM centos:6.6\n\nMAINTAINER cna-storage@vmware.com\n\n# Working directory\nWORKDIR /root\n\nRUN yum update -y && \\\n    yum -y install tar wget openssl python-lxml glibc.i686 git file e2fsprogs gcc  glibc-devel.x86_64 glibc-devel.i686 libgcc.i686 glibc-static && \\\n    curl -f https://storage.googleapis.com/golang/go1.7.1.linux-amd64.tar.gz | tar -C /usr/local -xzf - && \\\n    rm -rf ~/*.rpm ~/*.tar.gz && \\\n    yum clean all && \\\n    curl -f -L https://github.com/vmware/govmomi/releases/download/v0.13.0/govc_linux_amd64.gz | gzip -d > /usr/local/bin/govc && \\\n    chmod +x /usr/local/bin/govc && \\\n    curl -f -O http://download3.vmware.com/software/vmw-tools/vibauthor/vmware-esx-vib-author-5.0.0-0.0.847598.i386.rpm && \\\n    rpm -ivh vmware-esx-vib-author-5.0.0-0.0.847598.i386.rpm && \\\n    wget -O jq https://github.com/stedolan/jq/releases/download/jq-1.5/jq-linux64 && chmod +x jq && cp jq /usr/local/bin && rm -rf /var/cache/yum\n\n\nENV PATH=$PATH:/usr/local/go/bin:/go/bin \\\n    GOROOT=/usr/local/go \\\n    GOPATH=/go \\\n    GO15VENDOREXPERIMENT=1\n\nRUN go get -u github.com/FiloSottile/gvt && \\\n    go get -u github.com/golang/lint/golint && \\\n    go get -u gopkg.in/check.v1\n\nRUN curl -f --silent --location https://rpm.nodesource.com/setup_4.x | bash - && \\\n    yum -y install nodejs && \\\n    yum -y install ruby-devel rubygems && \\\n    npm install -g grunt && \\\n    gem install compass && npm cache clean --force; && rm -rf /var/cache/yum\n\nRUN curl -f https://downloads.drone.io/drone-cli/drone_linux_amd64.tar.gz | tar zx\nRUN install -t /usr/local/bin drone\n"
}