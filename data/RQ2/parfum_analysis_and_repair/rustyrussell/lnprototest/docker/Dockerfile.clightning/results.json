{
  "startTime": 1674250914993,
  "endTime": 1674250915974,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 4,
        "columnEnd": 34
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:20.04\nLABEL mantainer=\"Vincenzo Palazzo vincenzopalazzodev@gmail.com\"\n\nWORKDIR /work\n\nENV BITCOIN_VERSION=23.0\nENV CLIGHTNING_VERSION=0.11.0\nENV DEBIAN_FRONTEND=noninteractive\n\nRUN apt-get -qq update && \\\n    apt-get -qq install --no-install-recommends --allow-unauthenticated -yy \\\n\tautoconf \\\n\tautomake \\\n\tclang \\\n\tcppcheck \\\n\tdocbook-xml \\\n\tshellcheck \\\n\teatmydata \\\n\tsoftware-properties-common \\\n\tbuild-essential \\\n\tautoconf \\\n\tlocales \\\n\tlibtool \\\n\tlibprotobuf-c-dev \\\n\tlibsqlite3-dev \\\n\tlibgmp-dev \\\n\tgit \\\n\tpython3 \\\n\tvalgrind \\\n\tnet-tools \\\n\tpython3-mako \\\n\tpython3-pip \\\n\tpython3-setuptools \\\n\tpython-pkg-resources \\\n    python3-dev \\\n    virtualenv \\\n\tshellcheck \\\n\tlibxml2-utils \\\n\twget \\\n\tgettext \\\n\txsltproc \\\n\tzlib1g-dev && \\\n\trm -rf /var/lib/apt/lists/*\n\nENV LANGUAGE=en_US.UTF-8\nENV LANG=en_US.UTF-8\nENV LC_ALL=en_US.UTF-8\nRUN locale-gen en_US.UTF-8 && dpkg-reconfigure locales\n\nRUN cd /tmp/ && \\\n    wget https://bitcoincore.org/bin/bitcoin-core-$BITCOIN_VERSION/bitcoin-$BITCOIN_VERSION-x86_64-linux-gnu.tar.gz -O bitcoin.tar.gz && \\\n    tar -xvzf bitcoin.tar.gz && \\\n    mv /tmp/bitcoin-$BITCOIN_VERSION/bin/bitcoin* /usr/local/bin/ && \\\n    rm -rf bitcoin.tar.gz /tmp/bitcoin-$BITCOIN_VERSION\n\nRUN pip3 install --no-cache-dir -U pip && \\\n    pip3 install --no-cache-dir -U poetry\n\nRUN git config --global user.name \"John Doe\" && \\\n\tgit config --global user.email johndoe@example.com && \\\n\tgit clone https://github.com/ElementsProject/lightning.git && \\\n    cd lightning && \\\n    # git checkout v$CLIGHTNING_VERSION && \\\n\t# fetch core lightning patch\n\tgit pull origin pull/5367/head && \\\n    poetry config virtualenvs.create false && \\\n    poetry install && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-developer && \\\n    make -j$(nproc)\n\nRUN mkdir lnprototest\n\nCOPY . lnprototest\n\nRUN cd lnprototest && \\\n    poetry config virtualenvs.create false && \\\n    poetry install\nRUN cd lnprototest && ls -lha\n\nCMD [\"./lnprototest/docker/entrypoint.sh\"]\n"
}