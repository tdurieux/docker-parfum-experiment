{
  "startTime": 1674250461047,
  "endTime": 1674250461865,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 174
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 73,
        "columnEnd": 149
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 32
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM golang:1.18-alpine AS build_base\nRUN apk add --no-cache git\nWORKDIR /build\n\n# Cache go modules so they won't be downloaded at each build\nCOPY go.mod go.sum /build/\nRUN cd /build && go mod download\n\nCOPY . .\nRUN go test -c -o gadget-integration.test ./...\n\nFROM alpine:3.11\nRUN apk add --no-cache ca-certificates curl\nENV KUBECTL_GADGET /bin/kubectl-gadget\n\nRUN curl -f -LO https://storage.googleapis.com/kubernetes-release/release/$( curl -f -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl\nRUN chmod +x ./kubectl\nRUN mv ./kubectl /usr/local/bin\n\n# Specify the -k8s-distro flag only if KUBERNETES_DISTRIBUTION was set through --build-arg\nARG KUBERNETES_DISTRIBUTION\nENV ARG_KUBERNETES_DISTRIBUTION=${KUBERNETES_DISTRIBUTION:+-k8s-distro\\ $KUBERNETES_DISTRIBUTION}\n\nCOPY bin/kubectl-gadget /bin/kubectl-gadget\nCOPY --from=build_base /build/gadget-integration.test /bin/gadget-integration.test\nCMD [\"/bin/sh\", \"-c\", \"gadget-integration.test -integration -test.timeout 20m $ARG_KUBERNETES_DISTRIBUTION\"]\n"
}