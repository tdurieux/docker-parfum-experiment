{
  "startTime": 1674248296967,
  "endTime": 1674248299023,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 151
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 57
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 120
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 71,
        "lineEnd": 75,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 81,
        "lineEnd": 81,
        "columnStart": 4,
        "columnEnd": 98
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 154,
        "lineEnd": 154,
        "columnStart": 2,
        "columnEnd": 98
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 155,
        "lineEnd": 155,
        "columnStart": 2,
        "columnEnd": 104
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 173,
        "lineEnd": 173,
        "columnStart": 44,
        "columnEnd": 98
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 216,
        "lineEnd": 216,
        "columnStart": 4,
        "columnEnd": 154
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 259,
        "lineEnd": 259,
        "columnStart": 7,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 2,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 25,
        "columnStart": 22,
        "columnEnd": 5
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 61,
        "columnEnd": 83
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 2,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 108,
        "lineEnd": 108,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 119,
        "lineEnd": 119,
        "columnStart": 18,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 130,
        "lineEnd": 130,
        "columnStart": 9,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 139,
        "lineEnd": 139,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 153,
        "lineEnd": 153,
        "columnStart": 2,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 162,
        "lineEnd": 162,
        "columnStart": 7,
        "columnEnd": 104
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 172,
        "lineEnd": 172,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 196,
        "lineEnd": 210,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 255,
        "lineEnd": 255,
        "columnStart": 28,
        "columnEnd": 54
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 108,
        "lineEnd": 108,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 139,
        "lineEnd": 139,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 196,
        "lineEnd": 210,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 25,
        "columnStart": 22,
        "columnEnd": 5
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 61,
        "columnEnd": 83
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 2,
        "columnEnd": 22
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 108,
        "lineEnd": 108,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 119,
        "lineEnd": 119,
        "columnStart": 18,
        "columnEnd": 36
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 130,
        "lineEnd": 130,
        "columnStart": 9,
        "columnEnd": 38
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 139,
        "lineEnd": 139,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 153,
        "lineEnd": 153,
        "columnStart": 2,
        "columnEnd": 34
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 162,
        "lineEnd": 162,
        "columnStart": 7,
        "columnEnd": 104
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 172,
        "lineEnd": 172,
        "columnStart": 4,
        "columnEnd": 33
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 76
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 108,
        "lineEnd": 108,
        "columnStart": 4,
        "columnEnd": 54
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 139,
        "lineEnd": 139,
        "columnStart": 4,
        "columnEnd": 57
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 196,
        "lineEnd": 210,
        "columnStart": 4,
        "columnEnd": 14
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:bionic\n\nWORKDIR /tmp\n\n# Versioning\nENV PIP_INSTALL_VERSION 19.0.2\nENV PIP3_INSTALL_VERSION 20.0.2\nENV GO_LANG_VERSION 1.14.3\nENV MAVEN_VERSION 3.6.0\nENV SBT_VERSION 1.3.3\nENV GRADLE_VERSION 5.6.4\nENV RUBY_VERSION 3.1.1\nENV MIX_VERSION 2.0\nENV COMPOSER_ALLOW_SUPERUSER 1\n\n# programs needed for building\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n  build-essential \\\n  curl \\\n  sudo \\\n  unzip \\\n  wget \\\n  gnupg2 \\\n  apt-utils \\\n  software-properties-common \\\n  bzr && rm -rf /var/lib/apt/lists/*;\n\nRUN add-apt-repository ppa:git-core/ppa && apt-get update && apt-get install --no-install-recommends -y git && rm -rf /var/lib/apt/lists/*;\n\n# nodejs seems to be required for the one of the gems\nRUN curl -f -sL https://deb.nodesource.com/setup_14.x | bash - && \\\n    apt-get -y --no-install-recommends install nodejs && rm -rf /var/lib/apt/lists/*;\n\n# install yarn\nRUN curl -f -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add - && \\\n  echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | sudo tee /etc/apt/sources.list.d/yarn.list && \\\n  apt-get update && \\\n  apt-get install -y --no-install-recommends yarn && rm -rf /var/lib/apt/lists/*;\n\n# install bower\nRUN npm install -g bower && \\\n    echo '{ \"allow_root\": true }' > /root/.bowerrc && npm cache clean --force;\n\n# install jdk 12\nRUN curl -f -L -o openjdk12.tar.gz https://download.java.net/java/GA/jdk12.0.2/e482c34c86bd4bf8b56c0b35558996b9/10/GPL/openjdk-12.0.2_linux-x64_bin.tar.gz && \\\n    tar xvf openjdk12.tar.gz && \\\n    rm openjdk12.tar.gz && \\\n    sudo mv jdk-12.0.2 /opt/ && \\\n    sudo rm /opt/jdk-12.0.2/lib/src.zip\nENV JAVA_HOME=/opt/jdk-12.0.2\nENV PATH=$PATH:$JAVA_HOME/bin\nRUN java -version\n\n# install rebar3\nRUN curl -f -o rebar3 https://s3.amazonaws.com/rebar3/rebar3 && \\\n    sudo chmod +x rebar3 && \\\n    sudo mv rebar3 /usr/local/bin/rebar3\n\n# install and update python and python-pip\nRUN apt-get install --no-install-recommends -y python python-pip python3-pip && \\\n    python3 -m pip install pip==$PIP3_INSTALL_VERSION --upgrade && \\\n    python -m pip install pip==$PIP_INSTALL_VERSION --upgrade --force && rm -rf /var/lib/apt/lists/*;\n\n# install maven\nRUN curl -f -O https://archive.apache.org/dist/maven/maven-3/$MAVEN_VERSION/binaries/apache-maven-$MAVEN_VERSION-bin.tar.gz && \\\n    tar -xf apache-maven-$MAVEN_VERSION-bin.tar.gz; rm -rf apache-maven-$MAVEN_VERSION-bin.tar.gz && \\\n    mv apache-maven-$MAVEN_VERSION /usr/local/lib/maven && \\\n    ln -s /usr/local/lib/maven/bin/mvn /usr/local/bin/mvn\n\n# install sbt\nRUN mkdir -p /usr/local/share/sbt-launcher-packaging && \\\n    curl -f --progress \\\n    --retry 3 \\\n    --retry-delay 15 \\\n    --location \"https://github.com/sbt/sbt/releases/download/v${SBT_VERSION}/sbt-${SBT_VERSION}.tgz\" \\\n    --output \"/tmp/sbt-${SBT_VERSION}.tgz\" && \\\n    tar -xzf \"/tmp/sbt-${SBT_VERSION}.tgz\" -C /usr/local/share/sbt-launcher-packaging --strip-components=1 && \\\n    ln -s /usr/local/share/sbt-launcher-packaging/bin/sbt /usr/local/bin/sbt && \\\n    rm -f \"/tmp/sbt-${SBT_VERSION}.tgz\"\n\n# install gradle\nRUN curl -f -L -o gradle.zip https://services.gradle.org/distributions/gradle-$GRADLE_VERSION-bin.zip && \\\n    unzip -q gradle.zip && \\\n    rm gradle.zip && \\\n    mv gradle-$GRADLE_VERSION /root/gradle\nENV PATH=/root/gradle/bin:$PATH\n\n#install go\nWORKDIR /go\nRUN wget https://storage.googleapis.com/golang/go$GO_LANG_VERSION.linux-amd64.tar.gz -O go.tar.gz && tar --strip-components=1 -xf go.tar.gz && rm -f go.tar.gz\nENV GOROOT /go\nENV PATH=$PATH:/go/bin\n\n# godep is now required for license_finder to work for project that are still managed with GoDep\nENV GOROOT=/go\nENV GOPATH=/gopath\nENV PATH=$PATH:$GOPATH/bin\nRUN mkdir /gopath && \\\n  go get github.com/tools/godep && \\\n  go get github.com/FiloSottile/gvt && \\\n  go get github.com/Masterminds/glide && \\\n  go get github.com/kardianos/govendor && \\\n  go get github.com/golang/dep/cmd/dep && \\\n  go get -u github.com/rancher/trash && \\\n  go clean -cache\n\nWORKDIR /tmp\n# Fix the locale\nRUN apt-get install --no-install-recommends -y locales && rm -rf /var/lib/apt/lists/*;\nRUN locale-gen en_US.UTF-8\nENV LANG=en_US.UTF-8\nENV LANGUAGE=en_US:en\nENV LC_ALL=en_US.UTF-8\n\n# install Cargo\nRUN curl https://sh.rustup.rs -sSf | bash -ls -- -y --profile minimal\n\n#install rvm\nRUN apt-add-repository -y ppa:rael-gc/rvm && \\\n    apt update && apt install --no-install-recommends -y rvm && \\\n    /usr/share/rvm/bin/rvm install --default $RUBY_VERSION && rm -rf /var/lib/apt/lists/*;\n\n# install bundler\nRUN bash -lc \"gem update --system && gem install bundler\"\n\n#install mix\nRUN wget https://packages.erlang-solutions.com/erlang-solutions_${MIX_VERSION}_all.deb && \\\n    sudo dpkg -i erlang-solutions_${MIX_VERSION}_all.deb && \\\n    sudo rm -f erlang-solutions_${MIX_VERSION}_all.deb && \\\n    sudo apt-get update && \\\n    sudo apt-get install --no-install-recommends -y esl-erlang && rm -rf /var/lib/apt/lists/*;\n# Install Elixir\nWORKDIR /tmp/elixir-build\nRUN git clone https://github.com/elixir-lang/elixir.git\nWORKDIR elixir\nRUN make && make install\nWORKDIR /\n\n# install conan\nRUN apt-get install --no-install-recommends -y python-dev && \\\n\tpip install --no-cache-dir --ignore-installed six --ignore-installed colorama \\\n\t    --ignore-installed requests --ignore-installed chardet \\\n\t    --ignore-installed urllib3 \\\n\t    --upgrade setuptools && \\\n    pip install --no-cache-dir -Iv conan==1.43.0 && \\\n    conan config install https://github.com/conan-io/conanclientcert.git && rm -rf /var/lib/apt/lists/*;\n\n\n# install NuGet (w. mono)\n# https://docs.microsoft.com/en-us/nuget/install-nuget-client-tools#macoslinux\nRUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF &&\\\n  echo \"deb https://download.mono-project.com/repo/ubuntu stable-bionic main\" | sudo tee /etc/apt/sources.list.d/mono-official-stable.list &&\\\n  apt-get update && \\\n  apt-get install --no-install-recommends -y mono-complete && \\\n  curl -f -o \"/usr/local/bin/nuget.exe\" \"https://dist.nuget.org/win-x86-commandline/latest/nuget.exe\" && \\\n  curl -f -o \"/usr/local/bin/nugetv3.5.0.exe\" \"https://dist.nuget.org/win-x86-commandline/v3.5.0/nuget.exe\" && rm -rf /var/lib/apt/lists/*;\n\n# install dotnet core\nRUN wget -q https://packages.microsoft.com/config/ubuntu/18.04/packages-microsoft-prod.deb &&\\\n  sudo dpkg -i packages-microsoft-prod.deb &&\\\n  rm packages-microsoft-prod.deb &&\\\n  sudo apt-get update && \\\n  sudo apt-get install --no-install-recommends -y dotnet-runtime-2.1 dotnet-sdk-2.1 dotnet-sdk-2.2 dotnet-sdk-3.0 dotnet-sdk-3.1 && rm -rf /var/lib/apt/lists/*;\n\n# install Composer\n# The ARG and ENV are for installing tzdata which is part of this installaion.\n# https://serverfault.com/questions/949991/how-to-install-tzdata-on-a-ubuntu-docker-image\nENV TZ=GMT\nRUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 4F4EA0AAE5267A6C &&\\\n    echo \"deb http://ppa.launchpad.net/ondrej/php/ubuntu bionic main\" | sudo tee /etc/apt/sources.list.d/php.list &&\\\n    apt-get update &&\\\n    export DEBIAN_FRONTEND=noninteractive && \\\n    apt-get install --no-install-recommends -y php7.4-cli && \\\n    EXPECTED_COMPOSER_INSTALLER_CHECKSUM=\"$( curl -f --silent https://composer.github.io/installer.sig)\" && \\\n    php -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\" && \\\n    ACTUAL_COMPOSER_INSTALLER_CHECKSUM=\"$(php -r \"echo hash_file('sha384', 'composer-setup.php');\")\" && \\\n    test \"${ACTUAL_COMPOSER_INSTALLER_CHECKSUM}\" = \"${EXPECTED_COMPOSER_INSTALLER_CHECKSUM}\" || (echo \"ERROR: Invalid installer checksum\" >&2; false) && \\\n    php composer-setup.php && \\\n    php -r \"unlink('composer-setup.php');\" && \\\n    mv composer.phar /usr/bin/composer && rm -rf /var/lib/apt/lists/*;\n\n# install miniconda\n# See https://docs.conda.io/en/latest/miniconda_hashes.html\n# for latest versions and SHAs.\nRUN  \\\n  conda_installer=Miniconda3-py38_4.9.2-Linux-x86_64.sh &&\\\n  ref='1314b90489f154602fd794accfc90446111514a5a72fe1f71ab83e07de9504a7' &&\\\n  wget -q https://repo.anaconda.com/miniconda/${conda_installer} &&\\\n  sha=`openssl sha256 \"${conda_installer}\" | cut -d' ' -f2` &&\\\n  ([ \"$sha\" = \"${ref}\" ] || (echo \"Verification failed: ${sha} != ${ref}\"; false)) &&\\\n  (echo; echo \"yes\") | sh \"${conda_installer}\"\n\n# install Swift Package Manager\n# Based on https://github.com/apple/swift-docker/blob/main/5.3/ubuntu/18.04/Dockerfile\n# The GPG download steps has been modified. Keys are now on LF repo and copied instaad of downloaded.\n# Refer to https://swift.org/download/#using-downloads in the Linux section on how to download the keys\nRUN apt-get -q --no-install-recommends install -y \\\n    libatomic1 \\\n    libcurl4 \\\n    libxml2 \\\n    libedit2 \\\n    libsqlite3-0 \\\n    libc6-dev \\\n    binutils \\\n    libgcc-5-dev \\\n    libstdc++-5-dev \\\n    zlib1g-dev \\\n    libpython2.7 \\\n    tzdata \\\n    git \\\n    pkg-config \\\n    && rm -r /var/lib/apt/lists/*\n\n#install flutter\nENV FLUTTER_HOME=/root/flutter\nRUN git config --global --add safe.directory /root/flutter\nRUN curl -f -o flutter_linux_2.8.1-stable.tar.xz https://storage.googleapis.com/flutter_infra_release/releases/stable/linux/flutter_linux_2.8.1-stable.tar.xz \\\n    && tar xf flutter_linux_2.8.1-stable.tar.xz \\\n    && mv flutter ${FLUTTER_HOME} \\\n    && rm flutter_linux_2.8.1-stable.tar.xz\n\nENV PATH=$PATH:${FLUTTER_HOME}/bin:${FLUTTER_HOME}/bin/cache/dart-sdk/bin\nRUN flutter doctor -v \\\n    && flutter update-packages \\\n    && flutter precache\n# Accepting all licences\nRUN yes | flutter doctor --android-licenses -v\n# Creating Flutter sample projects to put binaries in cache fore each template type\nRUN flutter create --template=app ${TEMP}/app_sample \\\n    && flutter create --template=package ${TEMP}/package_sample \\\n    && flutter create --template=plugin ${TEMP}/plugin_sample\n\n\n# pub   4096R/ED3D1561 2019-03-22 [SC] [expires: 2023-03-23]\n#       Key fingerprint = A62A E125 BBBF BB96 A6E0  42EC 925C C1CC ED3D 1561\n# uid                  Swift 5.x Release Signing Key <swift-infrastructure@swift.org\nARG SWIFT_SIGNING_KEY=A62AE125BBBFBB96A6E042EC925CC1CCED3D1561\nARG SWIFT_PLATFORM=ubuntu18.04\nARG SWIFT_BRANCH=swift-5.3.3-release\nARG SWIFT_VERSION=swift-5.3.3-RELEASE\nARG SWIFT_WEBROOT=https://download.swift.org\n\nENV SWIFT_SIGNING_KEY=$SWIFT_SIGNING_KEY \\\n    SWIFT_PLATFORM=$SWIFT_PLATFORM \\\n    SWIFT_BRANCH=$SWIFT_BRANCH \\\n    SWIFT_VERSION=$SWIFT_VERSION \\\n    SWIFT_WEBROOT=$SWIFT_WEBROOT\n\nCOPY swift-all-keys.asc .\nRUN set -e; \\\n    SWIFT_WEBDIR=\"$SWIFT_WEBROOT/$SWIFT_BRANCH/$(echo $SWIFT_PLATFORM | tr -d .)\" \\\n    && SWIFT_BIN_URL=\"$SWIFT_WEBDIR/$SWIFT_VERSION/$SWIFT_VERSION-$SWIFT_PLATFORM.tar.gz\" \\\n    && SWIFT_SIG_URL=\"$SWIFT_BIN_URL.sig\" \\\n    # - Grab curl here so we cache better up above\n    && export DEBIAN_FRONTEND=noninteractive \\\n    && apt-get -q update && apt-get -q --no-install-recommends install -y curl && rm -rf /var/lib/apt/lists/* \\\n    # - Download the GPG keys, Swift toolchain, and toolchain signature, and verify.\n    && export GNUPGHOME=\"$(mktemp -d)\" \\\n    && curl -fsSL \"$SWIFT_BIN_URL\" -o swift.tar.gz \"$SWIFT_SIG_URL\" -o swift.tar.gz.sig \\\n    && gpg --batch --import swift-all-keys.asc \\\n    && gpg --batch --verify swift.tar.gz.sig swift.tar.gz \\\n    # - Unpack the toolchain, set libs permissions, and clean up.\n    && tar -xzf swift.tar.gz --directory / --strip-components=1 \\\n    && chmod -R o+r /usr/lib/swift \\\n    && rm -rf \"$GNUPGHOME\" swift.tar.gz.sig swift.tar.gz \\\n    set +e\n\n# install license_finder\nCOPY . /LicenseFinder\nRUN bash -lc \"cd /LicenseFinder && bundle config set no-cache 'true' && bundle install -j4 && bundle pristine && rake install\"\n\nWORKDIR /\n\nCMD cd /scan && /bin/bash -l\n"
}