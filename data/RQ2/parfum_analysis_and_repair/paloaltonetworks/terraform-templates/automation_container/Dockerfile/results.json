{
  "startTime": 1674215826374,
  "endTime": 1674215827400,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 166
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 37
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.6\n\nENV SSL_CERT_FILE=/etc/ssl/certs/ca-certificates.crt\n\nRUN echo \"===> Installing sudo to emulate normal OS behavior...\"  && \\\n    apk --update add sudo                                         && \\\n    echo \"===> Adding Python runtime...\"  && \\\n    apk --update add python py-pip openssl ca-certificates    && \\\n    apk --update add --virtual build-dependencies \\\n                python-dev libffi-dev openssl-dev build-base && \\\n    pip install --no-cache-dir --upgrade pip cffi && \\\n    echo \"===> Installing Ansible...\" && \\\n    pip install --no-cache-dir ansible && \\\n    echo \"===> Installing handy tools (not absolutely required)...\" && \\\n    pip install --no-cache-dir --upgrade pywinrm && \\\n    apk --update add sshpass openssh-client rsync && \\\n    echo \"===> Removing package list...\" && \\\n    apk del build-dependencies && \\\n    rm -rf /var/cache/apk/* && \\\n    echo \"===> Adding hosts for convenience...\" && \\\n    mkdir -p /etc/ansible && \\\n    echo 'localhost' > /etc/ansible/hosts\n\nENV TERRAFORM_VERSION=0.11.7\nENV TERRAFORM_SHA256SUM=6b8ce67647a59b2a3f70199c304abca0ddec0e49fd060944c26f666298e23418\n\nRUN echo \"===> Installing Terraform...\" && \\\n    apk add --no-cache --update git curl openssh && \\\n    curl -f https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip > terraform_${TERRAFORM_VERSION}_linux_amd64.zip && \\\n    echo \"${TERRAFORM_SHA256SUM}  terraform_${TERRAFORM_VERSION}_linux_amd64.zip\" > terraform_${TERRAFORM_VERSION}_SHA256SUMS && \\\n    sha256sum -cs terraform_${TERRAFORM_VERSION}_SHA256SUMS && \\\n    unzip terraform_${TERRAFORM_VERSION}_linux_amd64.zip -d /bin && \\\n    rm -f terraform_${TERRAFORM_VERSION}_linux_amd64.zip && \\\n    rm -f terraform_${TERRAFORM_VERSION}_SHA256SUMS\n\n\nRUN echo \"===> Cloning ansible-pan repo...\"  && \\\n    git clone https://github.com/PaloAltoNetworks/ansible-pan.git  && \\\n    echo \"===> Install PaloAltoNetworks from ansible-galaxy...\"  && \\\n    ansible-galaxy install PaloAltoNetworks.paloaltonetworks\n\nRUN echo \"===> Copying terraform-templates repo...\"  && \\\n    git clone https://github.com/PaloAltoNetworks/terraform-templates.git  && \\\n    echo \"===> initializing one click AWS terraform template...\"  && \\\n    cd /terraform-templates/one-click-multi-cloud/one-click-aws && \\\n    terraform init && \\\n    echo \"===> initializing one click Azure terraform template...\"  && \\\n    cd /terraform-templates/one-click-multi-cloud/one-click-azure  && \\\n    terraform init\n"
}