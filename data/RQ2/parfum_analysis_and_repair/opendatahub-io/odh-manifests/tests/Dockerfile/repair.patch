diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/opendatahub-io/odh-manifests/tests/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/opendatahub-io/odh-manifests/tests/Dockerfile/repaired.Dockerfile
index a7afa73..6008d67 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/opendatahub-io/odh-manifests/tests/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/opendatahub-io/odh-manifests/tests/Dockerfile/repaired.Dockerfile
@@ -21,7 +21,7 @@ RUN dnf -y install https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.n
     dnf clean all
 
 # install jq to help with parsing json
-RUN curl -o /usr/local/bin/jq http://stedolan.github.io/jq/download/linux64/jq && \
+RUN curl -f -o /usr/local/bin/jq https://stedolan.github.io/jq/download/linux64/jq && \
     chmod +x /usr/local/bin/jq
 
 RUN mkdir -p $HOME/src && \
@@ -32,19 +32,19 @@ RUN mkdir -p $HOME/src && \
     git fetch origin ${ODS_CI_GITREF} && git checkout FETCH_HEAD && \
     chmod -R 777 $HOME/src
 
-ADD https://mirror.openshift.com/pub/openshift-v4/clients/oc/4.6/linux/oc.tar.gz $HOME/peak/ 
+ADD https://mirror.openshift.com/pub/openshift-v4/clients/oc/4.6/linux/oc.tar.gz $HOME/peak/
 RUN tar -C /usr/local/bin -xvf $HOME/peak/oc.tar.gz && \
-    chmod +x /usr/local/bin/oc
+    chmod +x /usr/local/bin/oc && rm $HOME/peak/oc.tar.gz
 
-RUN curl -o /tmp/chromedriver_linux64.zip -L https://chromedriver.storage.googleapis.com/${CHROMEDRIVER_VER}/chromedriver_linux64.zip &&\
-    unzip /tmp/chromedriver_linux64.zip &&\
+RUN curl -f -o /tmp/chromedriver_linux64.zip -L https://chromedriver.storage.googleapis.com/${CHROMEDRIVER_VER}/chromedriver_linux64.zip && \
+    unzip /tmp/chromedriver_linux64.zip && \
     cp chromedriver /usr/local/bin/chromedriver
 
 COPY Pipfile Pipfile.lock $HOME/peak/
 
-RUN pip3 install micropipenv &&\
-    ln -s `which pip3` /usr/bin/pip &&\
-    cd $HOME/peak &&\
+RUN pip3 install --no-cache-dir micropipenv && \
+    ln -s `which pip3` /usr/bin/pip && \
+    cd $HOME/peak && \
     micropipenv install
 
 COPY setup/operatorsetup scripts/install.sh scripts/installandtest.sh $HOME/peak/