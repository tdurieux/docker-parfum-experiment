{
  "startTime": 1674216609925,
  "endTime": 1674216613566,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 151
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 79,
        "lineEnd": 79,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 74,
        "lineEnd": 74,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 62,
        "columnEnd": 125
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 23,
        "columnStart": 22,
        "columnEnd": 7
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 22,
        "columnEnd": 54
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 79,
        "columnEnd": 104
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 23,
        "columnStart": 22,
        "columnEnd": 7
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 22,
        "columnEnd": 54
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 79,
        "columnEnd": 104
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:bullseye\n\nSHELL [\"/bin/bash\", \"-c\"]\n\nARG DEBIAN_FRONTEND=noninteractive\nENV DOCKER_BUILDKIT=0\nENV PROJECT_DIR /usr/local/src/sepal\n\n# Update and install base packages\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    apt-utils \\\n    curl \\\n    build-essential \\\n    cmake \\\n    ca-certificates \\\n    gdal-bin \\\n    git \\\n    gnupg \\\n    inetutils-ping \\\n    lsb-release \\\n    nano \\\n    unzip \\\n    zip && rm -rf /var/lib/apt/lists/*;\n\n# Setup git aliases\nRUN git config --global alias.st status \\\n    && git config --global alias.ci commit \\\n    && git config --global alias.br branch \\\n    && git config --global alias.co checkout \\\n    && git config --global alias.unstage 'reset HEAD --' \\\n    && git config --global alias.last 'log -1 HEAD'\n\n# Install docker-cli\n\nRUN curl -fsSL https://download.docker.com/linux/debian/gpg | gpg --batch --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg\n\nRUN echo \\\n    \"deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/debian \\\n    $(lsb_release -cs) stable\" | tee /etc/apt/sources.list.d/docker.list > /dev/null\n\nRUN apt-get update && apt-get install --no-install-recommends -y docker-ce-cli && rm -rf /var/lib/apt/lists/*;\n\n# Install docker compose\n\nRUN mkdir -p /usr/local/lib/docker/cli-plugins\nRUN curl -f -SL https://github.com/docker/compose/releases/download/v2.2.3/docker-compose-linux-x86_64 -o /usr/local/lib/docker/cli-plugins/docker-compose\nRUN chmod +x /usr/local/lib/docker/cli-plugins/docker-compose\n\n# Install node.js\n\nRUN curl -f -sL https://deb.nodesource.com/setup_18.x | bash && apt-get update && apt-get -y --no-install-recommends install nodejs && rm -rf /var/lib/apt/lists/*;\n\n# Install global npm packages\n\nRUN npm install -g npm npm-check-updates wscat && npm cache clean --force;\n\n# Set bash prompt\n\nRUN echo \"export PS1='[\\[\\033[1;35m\\]\\u@dev-env\\[\\033[0m\\]:\\w]\\$ '\" >> /root/.bashrc\n\n# Add shell script to path\n\nADD sepal.sh /usr/local/bin/sepal\nRUN chmod +x /usr/local/bin/sepal\n\n# Add source code\n\nADD ./package.json $PROJECT_DIR/dev-env/\nADD ./package-lock.json $PROJECT_DIR/dev-env/\nADD ./src $PROJECT_DIR/dev-env/src/\nADD ./config $PROJECT_DIR/dev-env/config/\n\nWORKDIR $PROJECT_DIR/dev-env/\nRUN npm install && npm cache clean --force;\n\n# Install Java and Gradle\n\nENV SDKMAN_DIR=/usr/local/lib/sdkman\nRUN curl -f -s get.sdkman.io | bash && \\\n    source \"$SDKMAN_DIR/bin/sdkman-init.sh\" && \\\n    yes | sdk install java 11.0.11.hs-adpt && \\\n    sdk install gradle 6.9.1\nRUN source \"$SDKMAN_DIR/bin/sdkman-init.sh\" && \\    \n    ln -s \"$(which java)\" /usr/local/bin/java && \\\n    ln -s \"$(which gradle)\" /usr/local/bin/gradle && \\\n    JAVA_HOME=$(sdk home java current) && \\\n    sed -i 's/jdk.tls.disabledAlgorithms=.*/jdk.tls.disabledAlgorithms=SSLv3, RC4, DES, MD5withRSA, /' \"$JAVA_HOME/conf/security/java.security\"\n\nWORKDIR $PROJECT_DIR\n"
}