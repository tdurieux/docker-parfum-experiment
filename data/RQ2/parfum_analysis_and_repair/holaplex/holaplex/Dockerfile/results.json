{
  "startTime": 1674249129456,
  "endTime": 1674249130499,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 53
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Install dependencies only when needed\nFROM node:16.14-alpine AS deps\nRUN apk add --no-cache libc6-compat\nWORKDIR /app\nCOPY package.json yarn.lock ./\nRUN yarn install --frozen-lockfile --production=false && yarn cache clean;\n\n# Rebuild the source code only when needed\nFROM node:16.14-alpine AS builder\nWORKDIR /app\nCOPY --from=deps /app/node_modules ./node_modules\nCOPY . .\n\nARG GRAPHQL_URI\nENV NEXT_PUBLIC_INDEXER_GRAPHQL_URL $GRAPHQL_URI\n\n#Crossmint\nARG CROSSMINT_API_KEY\nARG CROSSMINT_CLIENT_ID\nENV NEXT_PUBLIC_CROSSMINT_API_KEY $CROSSMINT_API_KEY\nENV NEXT_PUBLIC_CROSSMINT_CLIENT_ID $CROSSMINT_CLIENT_ID\n\nRUN yarn build\n\n# Production image, copy all the files and run next\nFROM node:16.14-alpine AS runner\nWORKDIR /app\n\nENV NODE_ENV production\n\nENV NEXT_TELEMETRY_DISABLED 1\nRUN addgroup --system --gid 1001 nodejs\nRUN adduser --system --uid 1001 nextjs\n\nCOPY --from=builder /app/next.config.js ./\nCOPY --from=builder /app/public ./public\nCOPY --from=builder /app/node_modules ./node_modules\nCOPY --from=builder /app/package.json ./package.json\n\n# Automatically leverage output traces to reduce image size\n# https://nextjs.org/docs/advanced-features/output-file-tracing\nCOPY --from=builder --chown=nextjs:nodejs /app/.next/standalone ./\nCOPY --from=builder --chown=nextjs:nodejs /app/.next/static ./.next/static\nUSER nextjs\n\nFROM runner AS frontend\n\nEXPOSE 3000\nENV PORT 3000\nENV NEXT_SHARP_PATH /app/node_modules/sharp\n\nCMD [\"npx\", \"next\", \"start\"]\n\nFROM runner AS signer\n#Crossmint\nARG CROSSMINT_API_KEY\nARG CROSSMINT_CLIENT_ID\nENV NEXT_PUBLIC_CROSSMINT_API_KEY $CROSSMINT_API_KEY\nENV NEXT_PUBLIC_CROSSMINT_CLIENT_ID $CROSSMINT_CLIENT_ID\n\nCOPY --from=builder /app/tasks ./tasks\nCOPY --from=builder /app/src/modules ./src/modules\nCMD [\"yarn\", \"run\", \"consumers:sign-metadata\"]\n"
}