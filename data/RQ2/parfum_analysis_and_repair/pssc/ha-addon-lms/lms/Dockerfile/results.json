{
  "startTime": 1674217862267,
  "endTime": 1674217863916,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 137,
        "lineEnd": 137,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 136
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG BUILD_FROM=hassioaddons/debian-base:latest\n\n# ARGS...\n\nFROM ${BUILD_FROM} AS base\n\nENV DEBIAN_FRONTEND \"noninteractive\"\n\nRUN mv /init /s6init\n\n# Upgrading the operating system inside the container\nRUN apt-get update && apt-get upgrade -y -o Dpkg::Options::=\"--force-confold\" && apt-get --no-install-recommends --no-install-suggests -qq -y install wget git rsync patch && apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\nFROM base AS builder\nARG BUILD_ARCH\n\nRUN apt-get -qq -y update && \\\n    apt-get --no-install-recommends --no-install-suggests -qq -y install \\\n    patch rsync nasm make gcc g++ libc-bin zlib1g-dev libgd-dev libmodule-install-perl bzip2 build-essential pkg-config file libjpeg-dev && \\\n    mkdir -p /tmp/sources && \\\n    cd /tmp/sources && \\\n    git clone --depth 1 https://github.com/Logitech/slimserver-vendor -b public/8.0 && \\\n    mkdir -p tmp && \\\n    cd slimserver-vendor/CPAN && \\\n    mkdir -p build/include build/lib && \\\n    if [ \"${BUILD_ARCH}\" = \"i386\" ];then \\\n    ln -s /usr/include/jpeglib.h build/include/jpeglib.h && \\\n    ln -s /usr/include/*/jconfig.h build/include/jconfig.h && \\\n    ln -s /usr/lib/*/libjpeg.a build/lib/libjpeg.a \\\n    ; fi && \\\n    TMPDIR=/tmp/sources/tmp ./buildme.sh && \\\n    mkdir -p /usr/share/squeezeboxserver/CPAN/arch/$(basename build/arch/*)/ && \\\n    cp -vr build/arch/*/*/ /usr/share/squeezeboxserver/CPAN/arch/$(basename build/arch/*)/ && rm -rf /var/lib/apt/lists/*;\n\nFROM base\n\nARG url=\"http://www.mysqueezebox.com/update/?version=8.0&revision=1&geturl=1&os=deb\"\nARG purl=\"http://downloads.slimdevices.com/LogitechMediaServer_v8.2.0/logitechmediaserver_8.2.0_all.deb\"\nARG debug=false\nARG target_uid=1000\nARG BUILD_ARCH\n\nENV S6_SERVICES_GRACETIME 119000\nENV DISABLE_HA_AUTHENTICATION true\n\n# Debug?\n# LMS\nENV LMS_PREFS /config/lms/prefs\nENV LMS_PLUGS /config/lms/plugins\nENV LMS_CACHE /config/lms/cache\nENV LMS_LOGDIR /config/lms/logs\nENV LMS_HACFGDIR /config/lms/addon\n#ENV LMS_LOGFILE stdout\nENV LMS_OPTIONS \" \"\nENV LMS_USER \"squeezeboxserver\"\nENV LMS_GROUP \"nogroup\"\nENV HA_USER \"squeezeboxserver\"\nENV debug ${debug}\n\nCOPY rootfs/ /\n\nRUN apt-get -qq -y update && \\\n        ls -la /tmp/ && \\\n\tapt-get -qq -y install --no-install-recommends --no-install-suggests \\\n\t\tfaad \\\n\t\tflac \\\n\t\tlame \\\n\t\tsox \\\n\t\tlibio-socket-ssl-perl \\\n\t\tnfs-common \\\n\t\tawscli \\\n\t\tlvm2 \\\n\t\texfat-fuse \\\n\t\texfat-utils \\\n\t\tsshfs \\\n\t\tcifs-utils \\\n\t\ttzdata && \\\n\t\tapt-get install --no-install-recommends -qy wget curl perl tzdata libwww-perl libfont-freetype-perl liblinux-inotify2-perl libdata-dump-perl libio-socket-ssl-perl libnet-ssleay-perl libcrypt-ssleay-perl libcrypt-openssl-rsa-perl lame && \\\n\t\tapt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\n# Debug packages\nRUN if [ \"${debug}\" = \"true \" ];then apt-get update && apt-get upgrade -y -o Dpkg::Options::=\"--force-confold\" && apt-get --no-install-recommends --no-install-suggests -qq -y install vim-tiny procps && apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*;fi\n\nRUN echo \"Download url: ${url}\" && \\\n\tcd /tmp && \\\n        xlatest_lms=$(wget -q -O - \"${url}\" | sed 's/_all\\.deb/_'$(arch | sed 's/arm.*/arm/' | sed 's/x86_64/amd64/' | sed 's/aarch64/arm/')'\\.deb/') && \\\n        latest_lms=$(echo \"${purl}\" | sed 's/_all\\.deb/_'$(echo ${BUILD_ARCH} | sed 's/arm.*/arm/' | sed 's/x86_64/amd64/' | sed 's/aarch64/arm/')'\\.deb/') && \\\n\tif [ $latest_lms = $latest_lms ];then  echo $latest_lms != $latest_lms ;sleep 600;fi && \\\n\twget -nv $latest_lms && \\\n\tlms_deb=${latest_lms##*/} && \\\n\tdpkg -i $lms_deb && \\\n        if [[ $(id -u squeezeboxserver) != ${target_uid} ]];then usermod -u $target_uid squeezeboxserver ;fi && \\\n\tid squeezeboxserver && \\\n        rm -rf /var/lib/squeezeboxserver && \\\n\trm /usr/share/squeezeboxserver/Plugins && \\\n\tln -s ${LMS_PLUGS} /usr/share/squeezeboxserver/Plugins && \\\n\trm $lms_deb && \\\n\tls -la /usr/share/squeezeboxserver/CPAN/arch/* && \\\n\trm -rf /usr/share/squeezeboxserver/CPAN/arch/* && \\\n\ttouch /usr/share/squeezeboxserver/Bin/deleteme && \\\n\tcd /usr/share/squeezeboxserver/Bin/ && rm -r $(ls -1 /usr/share/squeezeboxserver/Bin/| grep -v $(arch|sed 's/arm.*/arm/'))\n\nCOPY --from=builder /usr/share/squeezeboxserver/CPAN/arch/ /usr/share/squeezeboxserver/CPAN/arch/\nRUN ls -la /usr/share/squeezeboxserver/CPAN/arch/*\n\n#eg. http://downloads.slimdevices.com/LogitechMediaServer_v7.9.3/logitechmediaserver_7.9.3_arm.deb\n# Copy script and run Script?\n#RUN echo \"${purl}\" && \\\n#        latest_lms=$(echo $purl | sed 's/_all\\.deb/_'$(arch | sed 's/arm.*/arm/')'\\.deb/') && \\\n#\tcd /sources/lms/packages && \\\n#\twget $latest_lms && \\\n#\tlms_deb=${latest_lms##*/} && \\\n#\tdpkg -i $lms_deb\n#        latest_lms=$(wget -q -O - \"${surl}\") && \\\n#        echo $latest_lms && \\\n#\tcd /sources && \\\n#        wget $latest_lms && \\\n\n# Nginx Ingress support\nRUN apt-get -qq -y update && \\\n    apt-get install -y --no-install-recommends \\\n        libnginx-mod-http-lua \\\n        luarocks \\\n        nginx && \\\n        luarocks install lua-resty-http 0.15-0 && \\\n        rm -r /etc/nginx && \\\n    apt-get autoremove && \\\n    apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\nCOPY rootfs-ingress/ /\n\n# osync\nRUN cd /tmp && git clone --depth 1 -b \"stable\" https://github.com/deajan/osync && cd osync && bash install.sh --no-stats && cd /tmp && rm -r /tmp/osync\n\n# hass-cli\nRUN apt-get -qq -y update && \\\n    apt-get install -y --no-install-recommends python3-pip python3-setuptools python3-dev python3-wheel gcc && \\\n    apt-get install -y --no-install-recommends python3-jsonpath-rw python3-regex python3-requests python3-aiohttp python3-tabulate python3-netdisco python3-jinja2 python3-dateparser python3-ruamel.yaml python3-click python3-click-log && \\\n    pip3 install --no-cache-dir homeassistant-cli && \\\n    apt-get autoremove && \\\n    apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#pip3 show homeassistant-cli | grep Requires | sed 's/.*: /python3-/' | sed 's/, / python3-/g'\n# apt-get remove python3-dev gcc \\\n\n# squeezy\nRUN apt-get -qq -y update && \\\n    apt-get install -y --no-install-recommends libjson-rpc-perl && \\\n    cd /tmp && git clone --depth 1 -b \"master\" https://github.com/pssc/squeezy && cd squeezy && cp squeezy /usr/local/bin/ && cd /tmp && rm -r /tmp/squeezy && \\\n    apt-get autoremove && \\\n    apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\n# Patching\nRUN for i in /patch/*.patch;do patch -d / -p1 -i $i;done && rm -r /patch\n\n#Cleanup\nRUN if [ -z \"${debug}\" -o \"${debug}\" = \"false\" ];then apt-get -y remove \\\n        git \\\n        wget && \\\n\tapt-get -y autoremove && \\\n        apt-get clean && \\\n\trm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* && \\\n        rm -fr /sources \\\n    ;fi\n\n#VOLUME /data\n#VOLUME /share\n#VOLUME /backup\n#VOLUME /config\n#VOLUME /ssl\n#VOLUME /media\n\n# Build arguments\nARG BUILD_ARCH\nARG BUILD_DATE\nARG BUILD_REF\nARG BUILD_VERSION\n\n# Labels\nLABEL \\\n    io.hass.name=\"lms\" \\\n    io.hass.description=\"Logitech Media Server, SqueezeBox Server / UPNP Media Server\" \\\n    io.hass.arch=\"${BUILD_ARCH}\" \\\n    io.hass.type=\"addon\" \\\n    io.hass.version=${BUILD_VERSION} \\\n    maintainer=\"Phillip Camp <phillip.camp+ha<removeme>@gmail.com>\" \\\n    org.label-schema.description=\"Logitech Media Server, SqueezeBox Server / UPNP Media Server\" \\\n    org.label-schema.build-date=${BUILD_DATE} \\\n    org.label-schema.name=\"lms\" \\\n    org.label-schema.schema-version=\"1.0\" \\\n    org.label-schema.usage=\"https://github.com/pssc/ha-addon-lms/tree/master/README.md\" \\\n    org.label-schema.vcs-ref=${BUILD_REF} \\\n    org.label-schema.vcs-url=\"https://github.com/pssc/ha-addon-lms\" \\\n    org.label-schema.vendor=\"pssc\"\n\n#    org.label-schema.url=\"https://community.home-assistant.io/t/home-assistant-community-add-on-portainer/68836?u=frenck\" \\\n"
}