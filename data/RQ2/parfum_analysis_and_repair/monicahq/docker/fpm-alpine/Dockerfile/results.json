{
  "startTime": 1674254674913,
  "endTime": 1674254676388,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 4,
        "columnEnd": 67
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM php:8.0-fpm-alpine\n\n# opencontainers annotations https://github.com/opencontainers/image-spec/blob/master/annotations.md\nLABEL org.opencontainers.image.authors=\"Alexis Saettler <alexis@saettler.org>\" \\\n      org.opencontainers.image.title=\"MonicaHQ, the Personal Relationship Manager\" \\\n      org.opencontainers.image.description=\"This is MonicaHQ, your personal memory! MonicaHQ is like a CRM but for the friends, family, and acquaintances around you.\" \\\n      org.opencontainers.image.url=\"https://monicahq.com\" \\\n      org.opencontainers.image.source=\"https://github.com/monicahq/docker\" \\\n      org.opencontainers.image.vendor=\"Monica\"\n\n# entrypoint.sh dependencies\nRUN set -ex; \\\n    \\\n    apk add --no-cache \\\n        bash \\\n        coreutils\n\n# Install required PHP extensions\nRUN set -ex; \\\n\n    apk add --no-cache --virtual .build-deps \\\n        $PHPIZE_DEPS \\\n        icu-dev \\\n        zlib-dev \\\n        libzip-dev \\\n        libxml2-dev \\\n        freetype-dev \\\n        libpng-dev \\\n        libjpeg-turbo-dev \\\n        jpeg-dev \\\n        gmp-dev \\\n        libmemcached-dev \\\n        libwebp-dev \\\n    ; \\\n\n    docker-php-ext-configure intl; \\\n    docker-php-ext-configure gd --with-jpeg --with-freetype --with-webp; \\\n    docker-php-ext-configure gmp; \\\n    docker-php-ext-install -j \"$(nproc)\" \\\n        intl \\\n        zip \\\n        bcmath \\\n        gd \\\n        gmp \\\n        pdo_mysql \\\n        mysqli \\\n        soap \\\n    ; \\\n# pecl will claim success even if one install fails, so we need to perform each install separately\n    pecl install APCu-5.1.21; \\\n    pecl install memcached-3.1.5; \\\n    pecl install redis-5.3.6; \\\n\n    docker-php-ext-enable \\\n        apcu \\\n        memcached \\\n        redis \\\n    ; \\\n\n    runDeps=\"$( \\\n        scanelf --needed --nobanner --format '%n#p' --recursive /usr/local/lib/php/extensions \\\n        | tr ',' '\\n' \\\n        | sort -u \\\n        | awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \\\n        )\"; \\\n    apk add --no-cache --no-network --virtual .monica-phpext-rundeps $runDeps; \\\n    apk del --no-network .build-deps\n\n# Set crontab for schedules\nRUN set -ex; \\\n    \\\n    mkdir -p /var/spool/cron/crontabs; \\\n    rm -f /var/spool/cron/crontabs/root; \\\n    echo '*/5 * * * * php /var/www/html/artisan schedule:run -v' > /var/spool/cron/crontabs/www-data\n\n# Opcache\nENV PHP_OPCACHE_VALIDATE_TIMESTAMPS=\"0\" \\\n    PHP_OPCACHE_MAX_ACCELERATED_FILES=\"20000\" \\\n    PHP_OPCACHE_MEMORY_CONSUMPTION=\"192\" \\\n    PHP_OPCACHE_MAX_WASTED_PERCENTAGE=\"10\"\nRUN set -ex; \\\n    \\\n    docker-php-ext-enable opcache; \\\n    { \\\n        echo '[opcache]'; \\\n        echo 'opcache.enable=1'; \\\n        echo 'opcache.revalidate_freq=0'; \\\n        echo 'opcache.validate_timestamps=${PHP_OPCACHE_VALIDATE_TIMESTAMPS}'; \\\n        echo 'opcache.max_accelerated_files=${PHP_OPCACHE_MAX_ACCELERATED_FILES}'; \\\n        echo 'opcache.memory_consumption=${PHP_OPCACHE_MEMORY_CONSUMPTION}'; \\\n        echo 'opcache.max_wasted_percentage=${PHP_OPCACHE_MAX_WASTED_PERCENTAGE}'; \\\n        echo 'opcache.interned_strings_buffer=16'; \\\n        echo 'opcache.fast_shutdown=1'; \\\n    } > $PHP_INI_DIR/conf.d/opcache-recommended.ini; \\\n    \\\n    echo 'apc.enable_cli=1' >> $PHP_INI_DIR/conf.d/docker-php-ext-apcu.ini; \\\n    \\\n    echo 'memory_limit=512M' > $PHP_INI_DIR/conf.d/memory-limit.ini\n\n\n\nWORKDIR /var/www/html\n\n# Define Monica version\nENV MONICA_VERSION v3.7.0\nLABEL org.opencontainers.image.revision=\"a07317f309f25772925436346b4ebb23b6e69b43\" \\\n      org.opencontainers.image.version=\"v3.7.0\"\n\nRUN set -ex; \\\n    apk add --no-cache --virtual .fetch-deps \\\n        bzip2 \\\n        gnupg \\\n    ; \\\n    \\\n    for ext in tar.bz2 tar.bz2.asc; do \\\n        curl -fsSL -o monica-${MONICA_VERSION}.$ext \"https://github.com/monicahq/monica/releases/download/${MONICA_VERSION}/monica-${MONICA_VERSION}.$ext\"; \\\n    done; \\\n    \\\n    GPGKEY='BDAB0D0D36A00466A2964E85DE15667131EA6018'; \\\n    export GNUPGHOME=\"$(mktemp -d)\"; \\\n    gpg --batch --keyserver hkps://keys.openpgp.org --recv-keys \"$GPGKEY\"; \\\n    gpg --batch --verify monica-${MONICA_VERSION}.tar.bz2.asc monica-${MONICA_VERSION}.tar.bz2; \\\n    \\\n    tar -xf monica-${MONICA_VERSION}.tar.bz2 -C /var/www/html --strip-components=1; \\\n    \\\n    gpgconf --kill all; \\\n    rm -rf \"$GNUPGHOME\" monica-${MONICA_VERSION}.tar.bz2 monica-${MONICA_VERSION}.tar.bz2.asc; \\\n    \\\n    cp /var/www/html/.env.example /var/www/html/.env; \\\n    chown -R www-data:www-data /var/www/html; \\\n    \\\n    apk del .fetch-deps\n\nCOPY entrypoint.sh \\\n    queue.sh \\\n    cron.sh \\\n    /usr/local/bin/\n\nENTRYPOINT [\"/usr/local/bin/entrypoint.sh\"]\nCMD [\"php-fpm\"]\n"
}