{
  "startTime": 1674248775045,
  "endTime": 1674248776443,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 87
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 38
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG BASE_DOCKER_IMAGE\nFROM ${BASE_DOCKER_IMAGE} as build\n\nRUN mkdir -p \"$GOPATH/src/github.com/erda-project/erda/\"\nCOPY . \"$GOPATH/src/github.com/erda-project/erda/\"\nWORKDIR \"$GOPATH/src/github.com/erda-project/erda/\"\nRUN mkdir /tmp/dicehub-extension\nRUN if [ -d \"extensions\" ] ; then mv extensions/* /tmp/dicehub-extension ; fi\n\nARG MODULE_PATH\nARG DOCKER_IMAGE\nARG MAKE_BUILD_CMD\nARG GOPROXY\nRUN --mount=type=cache,target=/root/.cache/go-build\\\n    --mount=type=cache,target=/go/pkg/mod \\\n    make ${MAKE_BUILD_CMD} MODULE_PATH=${MODULE_PATH} DOCKER_IMAGE=${DOCKER_IMAGE} GOPROXY=${GOPROXY}\n\n\n\nFROM ${BASE_DOCKER_IMAGE} as app-handler\nARG MODULE_PATH\nENV PROJ_ROOT=\"/go/src/github.com/erda-project/erda\"\nCOPY --from=build \"${PROJ_ROOT}\" /erda\nCOPY --from=build /tmp/dicehub-extension /erda/conf/extensions-init\nWORKDIR /erda\n# handle app\nRUN ./build/scripts/build_all/app_handler.sh /erda \"${MODULE_PATH}\" /erda-handled\n\n\n\nFROM ${BASE_DOCKER_IMAGE}\nARG MODULE_PATH\nENV MODULE_PATH=${MODULE_PATH}\n\n# use for ops\nRUN curl -f -o /usr/bin/orgalorg https://terminus-dice.oss.aliyuncs.com/installer/orgalorg && \\\n    chmod 755 /usr/bin/orgalorg\n\nRUN \\\n    npm i -g jackson-converter@1.0.10 && \\\n    pip3 install --no-cache-dir dicttoxml xmindparser && npm cache clean --force;\n\nCOPY --from=app-handler /erda-handled /erda\n\n# use for gittar\nCOPY --from=build \"/go/src/github.com/erda-project/erda/build/dockerfiles/gittar-resource/.gitconfig\" \"/root/.gitconfig\"\n\nWORKDIR /erda\nCMD [\"sh\", \"-c\", \"/erda/cmd/${MODULE_PATH}/bin\"]\n"
}