{
  "startTime": 1674250354913,
  "endTime": 1674250355790,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 22,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 7
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 25,
        "columnEnd": 53
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 39,
        "lineEnd": 48,
        "columnStart": 25,
        "columnEnd": 8
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 50,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 50,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 22,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 7
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 25,
        "columnEnd": 53
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 39,
        "lineEnd": 48,
        "columnStart": 25,
        "columnEnd": 8
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 50,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 50,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedDockerfile": "# Thi Dockerfile is provided so that we can eventually build\n# linux support for the bin/setup script.\n#\n# vim: ft=Dockerfile\n#\n# Â© 2021 Konstantin Gredeskoul, All rights reserved, MIT License.\n#\n# docker build . -t bashmatic:latest\n# docker run -it bashmatic:latest\n#\n# Once in the container:\n#   \n#    # Run specs in linux:\n#    $ specs\n#   \n#    # Test encryption:\n#    $ encrypt word\n#   \n\nFROM ruby:3.1.2-slim\n\nRUN apt-get update -y && \\\n    apt-get install --no-install-recommends -yqq \\\n    build-essential \\\n    git && rm -rf /var/lib/apt/lists/*;\n\nENV TERM=xterm-256color \\\n    BASHMATIC_HOME=/app/bashmatic \\\n    USER=root \\\n    HOME=/root \\\n    DEBIAN_FRONTEND=noninteractive \\\n    DEBCONF_NONINTERACTIVE_SEEN=true \\\n    TZ=Pacific/Los_Angeles\n\nRUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone\n\nRUN apt-get update -y && apt-get install --no-install-recommends -yqq locales && rm -rf /var/lib/apt/lists/*;\nRUN locale-gen en_US.UTF-8\n\nRUN apt-get update -y && apt-get install --no-install-recommends -yqq \\\n    silversearcher-ag \\\n    curl \\\n    vim \\\n    htop \\\n    direnv \\\n    zsh \\\n    fish \\\n    rbenv \\\n    sudo && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get install --no-install-recommends -yqq \\\n    python3-pip && rm -rf /var/lib/apt/lists/*;\n\nENV SHELL_INIT=\"${HOME}/.bashrc\"\n\nRUN set -e && \\\n    cd ${HOME} && \\\n    git clone https://github.com/kigster/bash-it .bash_it && \\\n    cd .bash_it && \\\n    ./install.sh -s && \\\n    sed -i'' -E 's/bobby/powerline-multiline/g' ${SHELL_INIT} && \\\n    echo 'eval \"$(direnv hook bash)\"' >>${SHELL_INIT} && \\\n    gem install sym --no-document >/dev/null\n\nRUN echo 'powerline.prompt.set-right-to ruby go user_info ssh clock' >>${SHELL_INIT} && \\\n    echo 'export POWERLINE_PROMPT_CHAR=\"#\"' >>${SHELL_INIT}\n\nRUN mkdir -p ${BASHMATIC_HOME}\nCOPY . ${BASHMATIC_HOME}\n\nWORKDIR ${BASHMATIC_HOME}\n\nRUN cd ${BASHMATIC_HOME} && \\\n    direnv allow . && \\\n    pwd -P && \\\n    ls -al\n\nRUN rm -f ~/.zshrc && \\\n    /bin/sh -c \"$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)\" && \\\n    touch ${HOME}/.zshrc\n\nRUN sed -i'' -E 's/robbyrussell/agnoster/g' ${HOME}/.zshrc\nRUN echo system > .ruby-version\n\nENV LANG=en_US.UTF-8 \\\n    LANGUAGE=en_US.UTF-8\n\nENTRYPOINT /bin/bash -l\n\n"
}