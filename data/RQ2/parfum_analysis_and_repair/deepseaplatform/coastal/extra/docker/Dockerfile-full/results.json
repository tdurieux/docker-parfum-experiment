{
  "startTime": 1674251661960,
  "endTime": 1674251662975,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 47,
        "columnEnd": 112
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 47,
        "columnEnd": 87
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 47,
        "columnEnd": 112
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 47,
        "columnEnd": 87
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#==============================================================================\n# Docker image for running COASTAL\n#==============================================================================\n\nFROM ubuntu:bionic AS base\nRUN apt-get -y update && apt-get -y upgrade && apt-get -y --no-install-recommends install wget m4 git make python g++ perl openjdk-8-jdk && rm -rf /var/lib/apt/lists/*;\n\n#--- Z3 ---\nRUN git clone https://github.com/Z3Prover/z3.git\nWORKDIR /z3/\nRUN python scripts/mk_make.py --java --prefix=/usr/local\nWORKDIR /z3/build/\nRUN make && make test && make install\nWORKDIR /\n\n#--- LATTE ---\n##RUN wget --no-check-certificate https://github.com/latte-int/latte/releases/download/version_1_7_5/latte-integrale-1.7.5.tar.gz && tar xzf latte-integrale-1.7.5.tar.gz\n#RUN wget https://github.com/latte-int/latte/releases/download/version_1_7_5/latte-integrale-1.7.5.tar.gz && tar xzf latte-integrale-1.7.5.tar.gz\n#WORKDIR /latte-integrale-1.7.5/\n#RUN ./configure --prefix=/usr/local && make\n#WORKDIR /\n\n#--- BARVINOK ---\n#RUN wget http://barvinok.gforge.inria.fr/barvinok-0.41.tar.gz && tar xzf barvinok-0.41.tar.gz\n#WORKDIR /barvinok-0.41/\n#RUN ./configure --prefix=/usr/local --with-gmp-prefix=/usr/local --without-pic --with-gnu-ld --disable-gold --enable-shared=no && make && make check && make install\n#WORKDIR /\n\n#--- COASTAL ---\nARG update=0\nRUN echo $update > /dev/null && git clone https://github.com/DeepseaPlatform/coastal.git\nWORKDIR /coastal/\nRUN ./gradlew dependencies -Phttp.socketTimeout=1000000 -Phttp.connectionTimeout=1000000\nRUN ./gradlew build -Phttp.socketTimeout=1000000 -Phttp.connectionTimeout=1000000\nRUN ./gradlew installDist\nWORKDIR /\n\n#--- FINAL ---\nFROM ubuntu:bionic\nRUN apt-get -y update && apt-get -y upgrade && apt-get -y --no-install-recommends install openjdk-8-jdk openjfx && rm -rf /var/lib/apt/lists/*;\nCOPY --from=base /usr/local /usr/local\nCOPY --from=base /coastal/build/install/coastal/bin/coastal /usr/bin\nCOPY --from=base /coastal/build/install/coastal/lib /usr/lib\nCOPY ./coastal-in-docker.sh /\nENTRYPOINT [\"/coastal-in-docker.sh\"]\nCMD []\n"
}