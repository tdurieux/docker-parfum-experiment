{
  "startTime": 1674252095535,
  "endTime": 1674252096359,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 73,
        "lineEnd": 73,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 74,
        "lineEnd": 74,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 12,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 40,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 44,
        "lineEnd": 62,
        "columnStart": 4,
        "columnEnd": 107
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM amazonlinux:2\n\nENV APP_ROOT /var/www/lancers_admin\nENV LANG ja_JP.utf8\nENV LC_ALL ja_JP.utf8\nWORKDIR $APP_ROOT\n\n# Install amazon-linux-extras\nRUN amazon-linux-extras install -y epel\nRUN amazon-linux-extras enable nginx1\n\nRUN yum update -y && \\\n    yum -y install \\\n    awslogs \\\n    gd \\\n    git \\\n    glibc-langpack-ja \\\n    keyutils-libs-devel \\\n    libXpm \\\n    libedit-devel \\\n    libpng \\\n    libselinux-devel \\\n    libtiff \\\n    libtool \\\n    libverto-devel \\\n    libwebp \\\n    libxslt \\\n    procps \\\n    python-pip \\\n    supervisor \\\n    unzip \\\n    vim \\\n    xz-devel \\\n    yum-utils \\\n    zlib-devel && rm -rf /var/cache/yum\n\nRUN amazon-linux-extras install -y \\\n    nginx1\n\n# Install remi\nRUN yum -y install \\\n    http://rpms.remirepo.net/enterprise/remi-release-7.rpm && rm -rf /var/cache/yum\n\n# Install php common\nRUN yum -y install \\\n    php81 \\\n    php81-php-cli \\\n    php81-php-common \\\n    php81-php-devel \\\n    php81-php-fpm \\\n    php81-php-gd \\\n    php81-php-intl \\\n    php81-php-mbstring \\\n    php81-php-mysqlnd \\\n    php81-php-opcache \\\n    php81-php-pear \\\n    php81-php-pecl-apcu \\\n    php81-php-process \\\n    php81-php-redis \\\n    php81-php-soap \\\n    php81-php-xml \\\n    php81-php-zip \\\n    https://github.com/DataDog/dd-trace-php/releases/download/0.70.1/datadog-php-tracer-0.70.1-1.x86_64.rpm \\\n    && \\\n    yum clean all && rm -rf /var/cache/yum\n\nRUN alternatives --install /usr/bin/php php /usr/bin/php81 1\n\n# Setup UTC+9\nRUN unlink /etc/localtime\nRUN ln -s /usr/share/zoneinfo/Japan /etc/localtime\n\n# awslogs need pip install requests\nRUN pip install --no-cache-dir --upgrade pip\nRUN pip install --no-cache-dir requests\n\n# make directory\nRUN mkdir -p $APP_ROOT\nCOPY . $APP_ROOT\n\n# php composer.phar install\nRUN php composer.phar install\n\n# copy src\nCOPY docker/prd/app-admin/src/environment.php /usr/local/src/environment.php\n\n# nginx\nCOPY docker/prd/app-admin/nginx/default.conf /etc/nginx/conf.d/default.conf\nCOPY docker/prd/app-admin/nginx/fastcgi.conf /etc/nginx/conf.d/fastcgi.conf\nCOPY docker/prd/app-admin/nginx/header.conf.include /etc/nginx/conf.d/header.conf.include\nCOPY docker/prd/app-admin/nginx/krgn2.conf /etc/nginx/conf.d/krgn2.conf\nCOPY docker/prd/app-admin/nginx/log.conf.http /etc/nginx/conf.d/log.conf.http\nCOPY docker/prd/app-admin/nginx/nginx.conf /etc/nginx/nginx.conf\n\n# awslogs\nRUN mv awscli.conf /etc/awslogs/\nCOPY docker/prd/app-admin/awslogs/awslogs.conf /etc/awslogs/awslogs.conf\nCOPY docker/prd/app-admin/logrotate/awslogs /etc/logrotate.d/awslogs\n\n# PHP\nCOPY docker/prd/app-admin/php/php.ini /etc/opt/remi/php81/php.ini\nCOPY docker/prd/app-admin/php/10-opcache.ini /etc/opt/remi/php81/php.d/10-opcache.ini\nCOPY docker/prd/app-admin/php/40-apcu.ini /etc/opt/remi/php81/php.d/40-apcu.ini\n# PHP-FPM\nCOPY docker/prd/app-admin/php-fpm/php-fpm.conf /etc/opt/remi/php81/php-fpm.conf\nCOPY docker/prd/app-admin/php-fpm/www.conf /etc/opt/remi/php81/php-fpm.d/www.conf\n\n## Setting supervisor\nCOPY docker/prd/app-admin/supervisor/supervisord.conf /etc/supervisord.conf\nCOPY docker/prd/app-admin/supervisor/app.conf /etc/supervisord.d/app.conf\n\nRUN chmod 777 logs\nRUN chmod 777 tmp\n\nRUN touch logs/dummy.log\n\n# Service to run\nCMD [\"/usr/bin/supervisord\"]\n"
}