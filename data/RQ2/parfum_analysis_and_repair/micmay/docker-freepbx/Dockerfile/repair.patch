diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/micmay/docker-freepbx/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/micmay/docker-freepbx/Dockerfile/repaired.Dockerfile
index 13cf09f..1a6a92e 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/micmay/docker-freepbx/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/micmay/docker-freepbx/Dockerfile/repaired.Dockerfile
@@ -27,35 +27,35 @@ RUN useradd -m $ASTERISKUSER \
 	&& chown -R $ASTERISKUSER. /var/log/asterisk \
 	&& chown -R $ASTERISKUSER. /var/spool/asterisk \
 	&& chown -R $ASTERISKUSER. /usr/lib/asterisk \
-	&& chown -R $ASTERISKUSER. /var/www/ 
-	
+	&& chown -R $ASTERISKUSER. /var/www/
+
 
 # Download extra high quality sounds
 WORKDIR /var/lib/asterisk/sounds
-RUN curl -f -o asterisk-core-sounds-en-wav-current.tar.gz -L http://downloads.asterisk.org/pub/telephony/sounds/asterisk-core-sounds-en-wav-current.tar.gz \
+RUN curl -f -o asterisk-core-sounds-en-wav-current.tar.gz -L https://downloads.asterisk.org/pub/telephony/sounds/asterisk-core-sounds-en-wav-current.tar.gz \
 	&& tar -xzf asterisk-core-sounds-en-wav-current.tar.gz \
 	&& rm -f asterisk-core-sounds-en-wav-current.tar.gz \
-	&& curl -f -o asterisk-extra-sounds-en-wav-current.tar.gz -L http://downloads.asterisk.org/pub/telephony/sounds/asterisk-extra-sounds-en-wav-current.tar.gz \
+	&& curl -f -o asterisk-extra-sounds-en-wav-current.tar.gz -L https://downloads.asterisk.org/pub/telephony/sounds/asterisk-extra-sounds-en-wav-current.tar.gz \
 	&& tar -xzf asterisk-extra-sounds-en-wav-current.tar.gz \
 	&& rm -f asterisk-extra-sounds-en-wav-current.tar.gz \
-	&& curl -f -o asterisk-core-sounds-en-g722-current.tar.gz -L http://downloads.asterisk.org/pub/telephony/sounds/asterisk-core-sounds-en-g722-current.tar.gz \
+	&& curl -f -o asterisk-core-sounds-en-g722-current.tar.gz -L https://downloads.asterisk.org/pub/telephony/sounds/asterisk-core-sounds-en-g722-current.tar.gz \
 	&& tar -xzf asterisk-core-sounds-en-g722-current.tar.gz \
 	&& rm -f asterisk-core-sounds-en-g722-current.tar.gz \
-	&& curl -f -o asterisk-extra-sounds-en-g722-current.tar.gz -L http://downloads.asterisk.org/pub/telephony/sounds/asterisk-extra-sounds-en-g722-current.tar.gz \
+	&& curl -f -o asterisk-extra-sounds-en-g722-current.tar.gz -L https://downloads.asterisk.org/pub/telephony/sounds/asterisk-extra-sounds-en-g722-current.tar.gz \
 	&& tar -xzf asterisk-extra-sounds-en-g722-current.tar.gz \
 	&& rm -f asterisk-extra-sounds-en-g722-current.tar.gz
-	
-RUN apt-get update && apt-get install -y unzip 
+
+RUN apt-get update && apt-get install --no-install-recommends -y unzip && rm -rf /var/lib/apt/lists/*;
 
 # Download German sounds
 RUN mkdir /var/lib/asterisk/sounds/de
-WORKDIR /var/lib/asterisk/sounds/de 
+WORKDIR /var/lib/asterisk/sounds/de
 RUN curl -f -o core.zip -L https://www.asterisksounds.org/de/download/asterisk-sounds-core-de-sln16.zip \
 	&& curl -f -o extra.zip -L https://www.asterisksounds.org/de/download/asterisk-sounds-extra-de-sln16.zip \
 	&& unzip -u core.zip \
-	&& unzip -u extra.zip 
+	&& unzip -u extra.zip
 RUN rm -f core.zip \
-	&& rm -f extra.zip 
+	&& rm -f extra.zip
 RUN chown -R $ASTERISKUSER.$ASTERISKUSER /var/lib/asterisk/sounds/de  \
 	&& find /var/lib/asterisk/sounds/de -type d -exec chmod 0775 {} \;
 
@@ -74,7 +74,7 @@ CMD ["/sbin/my_init"]
 
 
 # Install Required Dependencies
-RUN apt-get install -y \
+RUN apt-get install --no-install-recommends -y \
 		apache2 \
 		autoconf \
 		automake \
@@ -116,7 +116,7 @@ RUN apt-get install -y \
 		sqlite3 \
 		unixodbc-dev \
 		uuid \
-		uuid-dev 
+		uuid-dev && rm -rf /var/lib/apt/lists/*;
 
 # Replace default conf files to reduce memory usage
 COPY conf/my-small.cnf /etc/mysql/my.cnf
@@ -131,49 +131,49 @@ RUN pear install Console_Getopt
 
 # Compile and install pjproject
 WORKDIR /usr/src
-RUN curl -sf -o pjproject.tar.bz2 -L http://www.pjsip.org/release/2.4/pjproject-2.4.tar.bz2 \
+RUN curl -sf -o pjproject.tar.bz2 -L https://www.pjsip.org/release/2.4/pjproject-2.4.tar.bz2 \
 	&& tar -xjvf pjproject.tar.bz2 \
 	&& rm -f pjproject.tar.bz2 \
 	&& cd pjproject-2.4 \
-	&& CFLAGS='-DPJ_HAS_IPV6=1' ./configure --enable-shared --disable-sound --disable-resample --disable-video --disable-opencore-amr \
+	&& CFLAGS='-DPJ_HAS_IPV6=1' ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --enable-shared --disable-sound --disable-resample --disable-video --disable-opencore-amr \
 	&& make dep \
-	&& make \ 
+	&& make \
 	&& make install \
 	&& rm -r /usr/src/pjproject-2.4
 
 # Compile and Install jansson
 WORKDIR /usr/src
-RUN curl -sf -o jansson.tar.gz -L http://www.digip.org/jansson/releases/jansson-2.7.tar.gz \
+RUN curl -sf -o jansson.tar.gz -L https://www.digip.org/jansson/releases/jansson-2.7.tar.gz \
 	&& mkdir jansson \
 	&& tar -xzf jansson.tar.gz -C jansson --strip-components=1 \
 	&& rm jansson.tar.gz \
 	&& cd jansson \
 	&& autoreconf -i \
-	&& ./configure \
+	&& ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
 	&& make \
 	&& make install \
 	&& rm -r /usr/src/jansson
 
 # Compile and Install Asterisk
 WORKDIR /usr/src
-RUN curl -f -o asterisk.tar.gz -L http://downloads.asterisk.org/pub/telephony/certified-asterisk/asterisk-certified-13.13-current.tar.gz
+RUN curl -f -o asterisk.tar.gz -L https://downloads.asterisk.org/pub/telephony/certified-asterisk/asterisk-certified-13.13-current.tar.gz
 RUN mkdir asterisk \
 	&& tar -xzf /usr/src/asterisk.tar.gz -C /usr/src/asterisk --strip-components=1 \
-	&& rm asterisk.tar.gz 
+	&& rm asterisk.tar.gz
 
 WORKDIR /usr/src/asterisk
-RUN ./configure 
-RUN contrib/scripts/get_mp3_source.sh 
-RUN make menuselect.makeopts 
+RUN ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"
+RUN contrib/scripts/get_mp3_source.sh
+RUN make menuselect.makeopts
 
-# RUN ./menuselect/menuselect --list-options  
+# RUN ./menuselect/menuselect --list-options 
 RUN ./menuselect/menuselect --enable=chan_sip --enable=format_mp3 --disable=BUILD_NATIVE
-RUN	cat menuselect.makeopts 
-RUN make 
+RUN	cat menuselect.makeopts
+RUN make
 RUN make install \
 	&& make config \
 	&& ldconfig \
-	&& update-rc.d -f asterisk remove 
+	&& update-rc.d -f asterisk remove
 
 RUN rm -r /usr/src/asterisk
 
@@ -181,10 +181,10 @@ WORKDIR /tmp
 
 
 # 2nd dependency download (Placing it here avoids recompiling asterisk&co during docker build)
-RUN apt-get install -y \
+RUN apt-get install --no-install-recommends -y \
 		sudo \
 		net-tools \
-		coreutils 
+		coreutils && rm -rf /var/lib/apt/lists/*;
 
 # Configure apache
 RUN sed -i 's/\(^upload_max_filesize = \).*/\120M/' /etc/php5/apache2/php.ini \
@@ -205,7 +205,7 @@ COPY start-asterisk.sh /etc/service/asterisk/run
 RUN chmod +x /etc/service/asterisk/run
 
 COPY start-amportal.sh /etc/my_init.d/start-amportal.sh
-	
+
 
 #Make CDRs work
 COPY conf/cdr/odbc.ini /etc/odbc.ini
@@ -217,9 +217,9 @@ RUN chown asterisk:asterisk /etc/asterisk/cdr_adaptive_odbc.conf \
 # Download and prepare FreePBX
 WORKDIR /usr/src
 
-# Download and unzip 
-RUN curl -f -o freepbx.tgz -L http://mirror.freepbx.org/modules/packages/freepbx/freepbx-13.0-latest.tgz 
-RUN tar xfz freepbx.tgz
+# Download and unzip
+RUN curl -f -o freepbx.tgz -L https://mirror.freepbx.org/modules/packages/freepbx/freepbx-13.0-latest.tgz
+RUN tar xfz freepbx.tgz && rm freepbx.tgz
 RUN rm -rf freepbx.tgz
 
 # Prepare install
@@ -266,7 +266,7 @@ RUN apt-get remove -y --purge autoconf \
 		openssh-server \
 		subversion \
 		unixodbc-dev \
-		uuid-dev 
+		uuid-dev