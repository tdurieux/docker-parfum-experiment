{
  "startTime": 1674255593738,
  "endTime": 1674255594625,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 127
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 127
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG BASE_IMAGE\n\nFROM ${BASE_IMAGE} AS builder\n\nARG PACKAGE_VERSION\n\n# Build instructions: https://lightgbm.readthedocs.io/en/latest/GPU-Tutorial.html#build-lightgbm\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y build-essential cmake libboost-dev libboost-system-dev libboost-filesystem-dev ocl-icd-libopencl1 clinfo && rm -rf /var/lib/apt/lists/*;\n\nRUN cd /usr/local/src && \\\n    git clone --recursive https://github.com/microsoft/LightGBM && \\\n    cd LightGBM && \\\n    git checkout tags/v$PACKAGE_VERSION && \\\n    mkdir build && cd build && \\\n    cmake -DUSE_GPU=1 -DOpenCL_LIBRARY=/usr/local/cuda/lib64/libOpenCL.so -DOpenCL_INCLUDE_DIR=/usr/local/cuda/include/ .. && \\\n    make -j$(nproc) && \\\n    cd /usr/local/src/LightGBM/python-package && \\\n    python setup.py bdist_wheel\n\n# Using multi-stage builds to ensure the output image is very small\n# See: https://docs.docker.com/develop/develop-images/multistage-build/\nFROM alpine:latest\n\nRUN mkdir -p /tmp/whl/\nCOPY --from=builder /usr/local/src/LightGBM/python-package/dist/*.whl /tmp/whl\n\n# Print out the built .whl file.\nRUN ls -lh /tmp/whl/"
}