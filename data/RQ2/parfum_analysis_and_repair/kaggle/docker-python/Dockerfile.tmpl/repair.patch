diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/kaggle/docker-python/Dockerfile.tmpl b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/kaggle/docker-python/Dockerfile.tmpl/repaired.Dockerfile
index cc94af5..5b23a30 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/kaggle/docker-python/Dockerfile.tmpl
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/kaggle/docker-python/Dockerfile.tmpl/repaired.Dockerfile
@@ -36,7 +36,7 @@ ARG TORCHAUDIO_VERSION
 ARG TORCHTEXT_VERSION
 ARG TORCHVISION_VERSION
 
-# Disable pesky logs like: KMP_AFFINITY: pid 6121 tid 6121 thread 0 bound to OS proc set 0 
+# Disable pesky logs like: KMP_AFFINITY: pid 6121 tid 6121 thread 0 bound to OS proc set 0
 # See: https://stackoverflow.com/questions/57385766/disable-tensorflow-log-information
 ENV KMP_WARNINGS=0
 # Also make the KMP logs noverbose.
@@ -59,10 +59,10 @@ RUN sed -i "s/httpredir.debian.org/debian.uchicago.edu/" /etc/apt/sources.list &
     apt-get update && \
     # Needed by lightGBM (GPU build)
     # https://lightgbm.readthedocs.io/en/latest/GPU-Tutorial.html#build-lightgbm
-    apt-get install -y build-essential unzip cmake libboost-dev libboost-system-dev libboost-filesystem-dev p7zip-full && \
+    apt-get install --no-install-recommends -y build-essential unzip cmake libboost-dev libboost-system-dev libboost-filesystem-dev p7zip-full && \
     # b/182601974: ssh client was removed from the base image but is required for packages such as stable-baselines.
-    apt-get install -y openssh-client && \
-    /tmp/clean-layer.sh
+    apt-get install --no-install-recommends -y openssh-client && \
+    /tmp/clean-layer.sh && rm -rf /var/lib/apt/lists/*;
 
 # b/128333086: Set PROJ_LIB to points to the proj4 cartographic library.
 ENV PROJ_LIB=/opt/conda/share/proj
@@ -98,11 +98,11 @@ RUN conda install implicit && \
 {{ if eq .Accelerator "gpu" }}
 COPY --from=torch_whl /tmp/whl/*.whl /tmp/torch/
 RUN conda install -c pytorch magma-cuda${CUDA_MAJOR_VERSION}${CUDA_MINOR_VERSION} && \
-    pip install /tmp/torch/*.whl && \
+    pip install --no-cache-dir /tmp/torch/*.whl && \
     rm -rf /tmp/torch && \
     /tmp/clean-layer.sh
 {{ else }}
-RUN pip install torch==$TORCH_VERSION+cpu torchvision==$TORCHVISION_VERSION+cpu torchaudio==$TORCHAUDIO_VERSION+cpu torchtext==$TORCHTEXT_VERSION -f https://download.pytorch.org/whl/torch_stable.html && \
+RUN pip install --no-cache-dir torch==$TORCH_VERSION+cpu torchvision==$TORCHVISION_VERSION+cpu torchaudio==$TORCHAUDIO_VERSION+cpu torchtext==$TORCHTEXT_VERSION -f https://download.pytorch.org/whl/torch_stable.html && \
     /tmp/clean-layer.sh
 {{ end }}
 
@@ -110,79 +110,79 @@ RUN pip install torch==$TORCH_VERSION+cpu torchvision==$TORCHVISION_VERSION+cpu
 {{ if eq .Accelerator "gpu" }}
 COPY --from=lightgbm_whl /tmp/whl/*.whl /tmp/lightgbm/
 # Install OpenCL (required by LightGBM GPU version)
-RUN apt-get install -y ocl-icd-libopencl1 clinfo && \
+RUN apt-get install --no-install-recommends -y ocl-icd-libopencl1 clinfo && \
     mkdir -p /etc/OpenCL/vendors && \
     echo "libnvidia-opencl.so.1" > /etc/OpenCL/vendors/nvidia.icd && \
-    pip install /tmp/lightgbm/*.whl && \
+    pip install --no-cache-dir /tmp/lightgbm/*.whl && \
     rm -rf /tmp/lightgbm && \
-    /tmp/clean-layer.sh
+    /tmp/clean-layer.sh && rm -rf /var/lib/apt/lists/*;
 {{ else }}
-RUN pip install lightgbm==$LIGHTGBM_VERSION && \
+RUN pip install --no-cache-dir lightgbm==$LIGHTGBM_VERSION && \
     /tmp/clean-layer.sh
 {{ end }}
 
 # Install JAX
 {{ if eq .Accelerator "gpu" }}
-RUN pip install jax[cuda11_cudnn805] -f https://storage.googleapis.com/jax-releases/jax_releases.html && \
+RUN pip install --no-cache-dir jax[cuda11_cudnn805] -f https://storage.googleapis.com/jax-releases/jax_releases.html && \
     /tmp/clean-layer.sh
 {{ else }}
-RUN pip install jax[cpu] && \
+RUN pip install --no-cache-dir jax[cpu] && \
     /tmp/clean-layer.sh
 {{ end }}
 
 # Install mxnet
 {{ if eq .Accelerator "gpu" }}
-RUN pip install mxnet-cu$CUDA_MAJOR_VERSION$CUDA_MINOR_VERSION && \
+RUN pip install --no-cache-dir mxnet-cu$CUDA_MAJOR_VERSION$CUDA_MINOR_VERSION && \
     /tmp/clean-layer.sh
 {{ else }}
-RUN pip install mxnet && \
+RUN pip install --no-cache-dir mxnet && \
     /tmp/clean-layer.sh
 {{ end}}
 
 # Install spacy
 {{ if eq .Accelerator "gpu" }}
-RUN pip install spacy[cuda$CUDA_MAJOR_VERSION$CUDA_MINOR_VERSION] && \
+RUN pip install --no-cache-dir spacy[cuda$CUDA_MAJOR_VERSION$CUDA_MINOR_VERSION] && \
     /tmp/clean-layer.sh
 {{ else }}
-RUN pip install spacy && \
+RUN pip install --no-cache-dir spacy && \
     /tmp/clean-layer.sh
 {{ end}}
 
 # Install GPU specific packages
 {{ if eq .Accelerator "gpu" }}
 # Install GPU-only packages
-RUN pip install pycuda && \
-    pip install pynvrtc && \
-    pip install pynvml && \
-    pip install nnabla-ext-cuda$CUDA_MAJOR_VERSION$CUDA_MINOR_VERSION && \
+RUN pip install --no-cache-dir pycuda && \
+    pip install --no-cache-dir pynvrtc && \
+    pip install --no-cache-dir pynvml && \
+    pip install --no-cache-dir nnabla-ext-cuda$CUDA_MAJOR_VERSION$CUDA_MINOR_VERSION && \
     /tmp/clean-layer.sh
 {{ end }}
 
-RUN pip install pysal && \
-    pip install seaborn python-dateutil dask python-igraph && \
-    pip install pyyaml joblib husl geopy mne pyshp && \
-    pip install pandas && \
-    pip install flax && \
+RUN pip install --no-cache-dir pysal && \
+    pip install --no-cache-dir seaborn python-dateutil dask python-igraph && \
+    pip install --no-cache-dir pyyaml joblib husl geopy mne pyshp && \
+    pip install --no-cache-dir pandas && \
+    pip install --no-cache-dir flax && \
     # Install h2o from source.
     # Use `conda install -c h2oai h2o` once Python 3.7 version is released to conda.
-    apt-get install -y default-jre-headless && \
-    pip install -f https://h2o-release.s3.amazonaws.com/h2o/latest_stable_Py.html h2o && \
-    pip install tensorflow-gcs-config==2.6.0 && \
-    pip install tensorflow-addons==0.14.0 && \
-    /tmp/clean-layer.sh
-
-RUN apt-get install -y libfreetype6-dev && \
-    apt-get install -y libglib2.0-0 libxext6 libsm6 libxrender1 libfontconfig1 --fix-missing && \
+    apt-get install --no-install-recommends -y default-jre-headless && \
+    pip install --no-cache-dir -f https://h2o-release.s3.amazonaws.com/h2o/latest_stable_Py.html h2o && \
+    pip install --no-cache-dir tensorflow-gcs-config==2.6.0 && \
+    pip install --no-cache-dir tensorflow-addons==0.14.0 && \
+    /tmp/clean-layer.sh && rm -rf /var/lib/apt/lists/*;
+
+RUN apt-get install --no-install-recommends -y libfreetype6-dev && \
+    apt-get install --no-install-recommends -y libglib2.0-0 libxext6 libsm6 libxrender1 libfontconfig1 --fix-missing && \
     # b/198300835 kornia 4.1.0 is not compatible with our version of numpy.
-    pip install gensim==4.0.1 && \
-    pip install textblob && \
-    pip install wordcloud && \
-    pip install xgboost && \
-    pip install pydot && \
+    pip install --no-cache-dir gensim==4.0.1 && \
+    pip install --no-cache-dir textblob && \
+    pip install --no-cache-dir wordcloud && \
+    pip install --no-cache-dir xgboost && \
+    pip install --no-cache-dir pydot && \
     # Pinned because it breaks theano test with the latest version (b/178107003).
-    pip install theano-pymc==1.0.11 && \
-    pip install python-Levenshtein && \
-    pip install hep_ml && \
+    pip install --no-cache-dir theano-pymc==1.0.11 && \
+    pip install --no-cache-dir python-Levenshtein && \
+    pip install --no-cache-dir hep_ml && \
     # NLTK Project datasets
     mkdir -p /usr/share/nltk_data && \
     # NLTK Downloader no longer continues smoothly after an error, so we explicitly list
@@ -203,241 +203,241 @@ RUN apt-get install -y libfreetype6-dev && \
     twitter_samples udhr2 udhr unicode_samples universal_tagset universal_treebanks_v20 \
     vader_lexicon verbnet webtext word2vec_sample wordnet wordnet_ic words ycoe && \
     # Stop-words
-    pip install stop-words && \
-    pip install scikit-image && \
-    /tmp/clean-layer.sh
+    pip install --no-cache-dir stop-words && \
+    pip install --no-cache-dir scikit-image && \
+    /tmp/clean-layer.sh && rm -rf /var/lib/apt/lists/*;
 
-RUN pip install ibis-framework && \
-    pip install gluonnlp && \
+RUN pip install --no-cache-dir ibis-framework && \
+    pip install --no-cache-dir gluonnlp && \
     # b/212703016 4.5.4.62 segfault with readtext.
-    pip install opencv-contrib-python==4.5.4.60 opencv-python==4.5.4.60 && \
-    pip install gluoncv && \
+    pip install --no-cache-dir opencv-contrib-python==4.5.4.60 opencv-python==4.5.4.60 && \
+    pip install --no-cache-dir gluoncv && \
     /tmp/clean-layer.sh
 
-RUN pip install scipy && \
-    pip install scikit-learn && \
-    # Scikit-learn accelerated library for x86 
-    pip install scikit-learn-intelex && \
+RUN pip install --no-cache-dir scipy && \
+    pip install --no-cache-dir scikit-learn && \
+    # Scikit-learn accelerated library for x86
+    pip install --no-cache-dir scikit-learn-intelex && \
     # HDF5 support
-    pip install h5py && \
-    pip install biopython && \
+    pip install --no-cache-dir h5py && \
+    pip install --no-cache-dir biopython && \
     # PUDB, for local debugging convenience
-    pip install pudb && \
-    pip install imbalanced-learn && \
+    pip install --no-cache-dir pudb && \
+    pip install --no-cache-dir imbalanced-learn && \
     # Profiling and other utilities
-    pip install line_profiler && \
-    pip install orderedmultidict && \
-    pip install smhasher && \
-    pip install bokeh && \
-    pip install numba && \
-    pip install datashader && \
+    pip install --no-cache-dir line_profiler && \
+    pip install --no-cache-dir orderedmultidict && \
+    pip install --no-cache-dir smhasher && \
+    pip install --no-cache-dir bokeh && \
+    pip install --no-cache-dir numba && \
+    pip install --no-cache-dir datashader && \
     # Boruta (python implementation)
-    pip install Boruta && \
-    apt-get install -y graphviz && pip install graphviz && \
+    pip install --no-cache-dir Boruta && \
+    apt-get install --no-install-recommends -y graphviz && pip install --no-cache-dir graphviz && \
     # Pandoc is a dependency of deap
-    apt-get install -y pandoc && \
-    pip install git+https://github.com/scikit-learn-contrib/py-earth.git@issue191 && \
-    pip install essentia && \
-    /tmp/clean-layer.sh
+    apt-get install --no-install-recommends -y pandoc && \
+    pip install --no-cache-dir git+https://github.com/scikit-learn-contrib/py-earth.git@issue191 && \
+    pip install --no-cache-dir essentia && \
+    /tmp/clean-layer.sh && rm -rf /var/lib/apt/lists/*;
 
 # vtk with dependencies
-RUN apt-get install -y libgl1-mesa-glx && \
-    pip install vtk && \
+RUN apt-get install --no-install-recommends -y libgl1-mesa-glx && \
+    pip install --no-cache-dir vtk && \
     # xvfbwrapper with dependencies
-    apt-get install -y xvfb && \
-    pip install xvfbwrapper && \
-    /tmp/clean-layer.sh
-
-RUN pip install mpld3 && \
-    pip install gpxpy && \
-    pip install arrow && \
-    pip install nilearn && \
-    pip install nibabel && \
-    pip install pronouncing && \
-    pip install markovify && \
-    pip install imgaug && \
-    pip install preprocessing && \
-    pip install path.py && \
-    pip install Geohash && \
+    apt-get install --no-install-recommends -y xvfb && \
+    pip install --no-cache-dir xvfbwrapper && \
+    /tmp/clean-layer.sh && rm -rf /var/lib/apt/lists/*;
+
+RUN pip install --no-cache-dir mpld3 && \
+    pip install --no-cache-dir gpxpy && \
+    pip install --no-cache-dir arrow && \
+    pip install --no-cache-dir nilearn && \
+    pip install --no-cache-dir nibabel && \
+    pip install --no-cache-dir pronouncing && \
+    pip install --no-cache-dir markovify && \
+    pip install --no-cache-dir imgaug && \
+    pip install --no-cache-dir preprocessing && \
+    pip install --no-cache-dir path.py && \
+    pip install --no-cache-dir Geohash && \
     # https://github.com/vinsci/geohash/issues/4
     sed -i -- 's/geohash/.geohash/g' /opt/conda/lib/python3.7/site-packages/Geohash/__init__.py && \
-    pip install deap && \
-    pip install tpot && \
-    pip install scikit-optimize && \
-    pip install haversine && \
-    pip install toolz cytoolz && \
-    pip install plotly && \
-    pip install hyperopt && \
-    pip install fitter && \
-    pip install langid && \
+    pip install --no-cache-dir deap && \
+    pip install --no-cache-dir tpot && \
+    pip install --no-cache-dir scikit-optimize && \
+    pip install --no-cache-dir haversine && \
+    pip install --no-cache-dir toolz cytoolz && \
+    pip install --no-cache-dir plotly && \
+    pip install --no-cache-dir hyperopt && \
+    pip install --no-cache-dir fitter && \
+    pip install --no-cache-dir langid && \
     # Delorean. Useful for dealing with datetime
-    pip install delorean && \
-    pip install trueskill && \
+    pip install --no-cache-dir delorean && \
+    pip install --no-cache-dir trueskill && \
     # Useful data exploration libraries (for missing data and generating reports)
-    pip install missingno && \
-    pip install pandas-profiling && \
-    pip install s2sphere && \
-    pip install bayesian-optimization && \
-    pip install matplotlib-venn && \
+    pip install --no-cache-dir missingno && \
+    pip install --no-cache-dir pandas-profiling && \
+    pip install --no-cache-dir s2sphere && \
+    pip install --no-cache-dir bayesian-optimization && \
+    pip install --no-cache-dir matplotlib-venn && \
     # b/184083722 pyldavis >= 3.3 requires numpy >= 1.20.0 but TensorFlow 2.4.1 / 2.5.0 requires 1.19.2
-    pip install pyldavis==3.2.2 && \
-    pip install mlxtend && \
-    pip install altair && \
-    pip install ImageHash && \
-    pip install ecos && \
-    pip install CVXcanon && \
-    pip install pymc3 && \
-    pip install imagecodecs && \
-    pip install tifffile && \
-    pip install spectral && \
-    pip install descartes && \
-    pip install geojson && \
-    pip install pydicom && \
-    pip install wavio && \
-    pip install SimpleITK && \
-    pip install hmmlearn && \
-    pip install bayespy && \
-    pip install gplearn && \
-    pip install PyAstronomy && \
-    pip install squarify && \
-    pip install fuzzywuzzy && \
-    pip install python-louvain && \
-    pip install pyexcel-ods && \
-    pip install sklearn-pandas && \
-    pip install stemming && \
-    pip install prophet && \
-    pip install holoviews && \
-    pip install geoviews && \
-    pip install hypertools && \
-    pip install py_stringsimjoin && \
-    pip install mlens && \
-    pip install scikit-multilearn && \
-    pip install cleverhans && \
-    pip install leven && \
-    pip install catboost && \
-    pip install lightfm && \
-    pip install folium && \
-    pip install scikit-plot && \
-    pip install fury dipy && \
-    pip install plotnine && \
-    pip install scikit-surprise && \
-    pip install pymongo && \
-    pip install geoplot && \
-    pip install eli5 && \
-    pip install kaggle && \
+    pip install --no-cache-dir pyldavis==3.2.2 && \
+    pip install --no-cache-dir mlxtend && \
+    pip install --no-cache-dir altair && \
+    pip install --no-cache-dir ImageHash && \
+    pip install --no-cache-dir ecos && \
+    pip install --no-cache-dir CVXcanon && \
+    pip install --no-cache-dir pymc3 && \
+    pip install --no-cache-dir imagecodecs && \
+    pip install --no-cache-dir tifffile && \
+    pip install --no-cache-dir spectral && \
+    pip install --no-cache-dir descartes && \
+    pip install --no-cache-dir geojson && \
+    pip install --no-cache-dir pydicom && \
+    pip install --no-cache-dir wavio && \
+    pip install --no-cache-dir SimpleITK && \
+    pip install --no-cache-dir hmmlearn && \
+    pip install --no-cache-dir bayespy && \
+    pip install --no-cache-dir gplearn && \
+    pip install --no-cache-dir PyAstronomy && \
+    pip install --no-cache-dir squarify && \
+    pip install --no-cache-dir fuzzywuzzy && \
+    pip install --no-cache-dir python-louvain && \
+    pip install --no-cache-dir pyexcel-ods && \
+    pip install --no-cache-dir sklearn-pandas && \
+    pip install --no-cache-dir stemming && \
+    pip install --no-cache-dir prophet && \
+    pip install --no-cache-dir holoviews && \
+    pip install --no-cache-dir geoviews && \
+    pip install --no-cache-dir hypertools && \
+    pip install --no-cache-dir py_stringsimjoin && \
+    pip install --no-cache-dir mlens && \
+    pip install --no-cache-dir scikit-multilearn && \
+    pip install --no-cache-dir cleverhans && \
+    pip install --no-cache-dir leven && \
+    pip install --no-cache-dir catboost && \
+    pip install --no-cache-dir lightfm && \
+    pip install --no-cache-dir folium && \
+    pip install --no-cache-dir scikit-plot && \
+    pip install --no-cache-dir fury dipy && \
+    pip install --no-cache-dir plotnine && \
+    pip install --no-cache-dir scikit-surprise && \
+    pip install --no-cache-dir pymongo && \
+    pip install --no-cache-dir geoplot && \
+    pip install --no-cache-dir eli5 && \
+    pip install --no-cache-dir kaggle && \
     /tmp/clean-layer.sh
 
-RUN pip install tensorpack && \   
+RUN pip install --no-cache-dir tensorpack && \
     # Add google PAIR-code Facets
     cd /opt/ && git clone https://github.com/PAIR-code/facets && cd facets/ && jupyter nbextension install facets-dist/ --user && \
     export PYTHONPATH=$PYTHONPATH:/opt/facets/facets_overview/python/ && \
-    pip install pycountry && \
-    pip install iso3166 && \
-    pip install pydash && \
-    pip install kmodes --no-dependencies && \
-    pip install librosa && \
-    pip install polyglot && \
-    pip install mmh3 && \
-    pip install fbpca && \
-    pip install sentencepiece && \
-    pip install cufflinks && \
-    pip install lime && \
-    pip install memory_profiler && \
+    pip install --no-cache-dir pycountry && \
+    pip install --no-cache-dir iso3166 && \
+    pip install --no-cache-dir pydash && \
+    pip install --no-cache-dir kmodes --no-dependencies && \
+    pip install --no-cache-dir librosa && \
+    pip install --no-cache-dir polyglot && \
+    pip install --no-cache-dir mmh3 && \
+    pip install --no-cache-dir fbpca && \
+    pip install --no-cache-dir sentencepiece && \
+    pip install --no-cache-dir cufflinks && \
+    pip install --no-cache-dir lime && \
+    pip install --no-cache-dir memory_profiler && \
     /tmp/clean-layer.sh
 
 # install cython & cysignals before pyfasttext
-RUN pip install --upgrade cython && \
-    pip install --upgrade cysignals && \
-    pip install pyfasttext && \
-    pip install fasttext && \
-    apt-get install -y libhunspell-dev && pip install hunspell && \
-    pip install annoy && \
-    pip install category_encoders && \
+RUN pip install --no-cache-dir --upgrade cython && \
+    pip install --no-cache-dir --upgrade cysignals && \
+    pip install --no-cache-dir pyfasttext && \
+    pip install --no-cache-dir fasttext && \
+    apt-get install --no-install-recommends -y libhunspell-dev && pip install --no-cache-dir hunspell && \
+    pip install --no-cache-dir annoy && \
+    pip install --no-cache-dir category_encoders && \
     # google-cloud-automl 2.0.0 introduced incompatible API changes, need to pin to 1.0.1
-    pip install google-cloud-automl==1.0.1 && \
-    pip install google-cloud-bigquery==2.2.0 && \
-    pip install google-cloud-storage && \
-    pip install google-cloud-translate==3.* && \
-    pip install google-cloud-language==2.* && \
-    pip install google-cloud-videointelligence==2.* && \
-    pip install google-cloud-vision==2.* && \
+    pip install --no-cache-dir google-cloud-automl==1.0.1 && \
+    pip install --no-cache-dir google-cloud-bigquery==2.2.0 && \
+    pip install --no-cache-dir google-cloud-storage && \
+    pip install --no-cache-dir google-cloud-translate==3.* && \
+    pip install --no-cache-dir google-cloud-language==2.* && \
+    pip install --no-cache-dir google-cloud-videointelligence==2.* && \
+    pip install --no-cache-dir google-cloud-vision==2.* && \
     # b/183041606#comment5: the Kaggle data proxy doesn't support these APIs. If the library is missing, it falls back to using a regular BigQuery query to fetch data.
     pip uninstall -y google-cloud-bigquery-storage && \
     # After launch this should be installed from pip
-    pip install git+https://github.com/googleapis/python-aiplatform.git@mb-release && \ 
-    pip install ortools && \
-    pip install scattertext && \
+    pip install --no-cache-dir git+https://github.com/googleapis/python-aiplatform.git@mb-release && \
+    pip install --no-cache-dir ortools && \
+    pip install --no-cache-dir scattertext && \
     # Pandas data reader
-    pip install pandas-datareader && \
-    pip install wordsegment && \
-    pip install wordbatch && \
-    pip install emoji && \
+    pip install --no-cache-dir pandas-datareader && \
+    pip install --no-cache-dir wordsegment && \
+    pip install --no-cache-dir wordbatch && \
+    pip install --no-cache-dir emoji && \
     # Add Japanese morphological analysis engine
-    pip install janome && \
-    pip install wfdb && \
-    pip install vecstack && \
+    pip install --no-cache-dir janome && \
+    pip install --no-cache-dir wfdb && \
+    pip install --no-cache-dir vecstack && \
     # yellowbrick machine learning visualization library
-    pip install yellowbrick && \
-    pip install mlcrate && \
-    /tmp/clean-layer.sh
-
-RUN pip install bleach && \
-    pip install certifi && \
-    pip install cycler && \
-    pip install decorator && \
-    pip install entrypoints && \
-    pip install html5lib && \
-    pip install ipykernel && \
-    pip install ipython && \
-    pip install ipython-genutils && \
-    pip install ipywidgets && \
-    pip install isoweek && \
-    pip install jedi && \
-    pip install jsonschema && \
-    pip install jupyter-client && \
-    pip install jupyter-console && \
-    pip install jupyter-core && \
-    pip install jupyterlab-lsp && \
-    pip install MarkupSafe && \
-    pip install mistune && \
-    pip install nbformat && \
-    pip install notebook && \
-    pip install papermill && \
-    pip install python-lsp-server[all] && \
-    pip install olefile && \
+    pip install --no-cache-dir yellowbrick && \
+    pip install --no-cache-dir mlcrate && \
+    /tmp/clean-layer.sh && rm -rf /var/lib/apt/lists/*;
+
+RUN pip install --no-cache-dir bleach && \
+    pip install --no-cache-dir certifi && \
+    pip install --no-cache-dir cycler && \
+    pip install --no-cache-dir decorator && \
+    pip install --no-cache-dir entrypoints && \
+    pip install --no-cache-dir html5lib && \
+    pip install --no-cache-dir ipykernel && \
+    pip install --no-cache-dir ipython && \
+    pip install --no-cache-dir ipython-genutils && \
+    pip install --no-cache-dir ipywidgets && \
+    pip install --no-cache-dir isoweek && \
+    pip install --no-cache-dir jedi && \
+    pip install --no-cache-dir jsonschema && \
+    pip install --no-cache-dir jupyter-client && \
+    pip install --no-cache-dir jupyter-console && \
+    pip install --no-cache-dir jupyter-core && \
+    pip install --no-cache-dir jupyterlab-lsp && \
+    pip install --no-cache-dir MarkupSafe && \
+    pip install --no-cache-dir mistune && \
+    pip install --no-cache-dir nbformat && \
+    pip install --no-cache-dir notebook && \
+    pip install --no-cache-dir papermill && \
+    pip install --no-cache-dir python-lsp-server[all] && \
+    pip install --no-cache-dir olefile && \
     # b/198300835 kornia 0.5.10 is not compatible with our version of numpy.
-    pip install kornia==0.5.8 && \
-    pip install pandas_summary && \
-    pip install pandocfilters && \
-    pip install pexpect && \
-    pip install pickleshare && \
-    pip install Pillow && \
+    pip install --no-cache-dir kornia==0.5.8 && \
+    pip install --no-cache-dir pandas_summary && \
+    pip install --no-cache-dir pandocfilters && \
+    pip install --no-cache-dir pexpect && \
+    pip install --no-cache-dir pickleshare && \
+    pip install --no-cache-dir Pillow && \
     # Install openslide and its python binding
-    apt-get install -y openslide-tools && \
-    pip install openslide-python && \
-    pip install ptyprocess && \
-    pip install Pygments && \
-    pip install pyparsing && \
-    pip install pytz && \
-    pip install PyYAML && \
-    pip install pyzmq && \
-    pip install qtconsole && \
-    pip install six && \
-    pip install terminado && \
-    pip install tornado && \
-    pip install tqdm && \
-    pip install traitlets && \
-    pip install wcwidth && \
-    pip install webencodings && \
-    pip install widgetsnbextension && \
-    pip install pyarrow && \
-    pip install feather-format && \
-    pip install fastai && \
-    pip install allennlp && \
-    pip install importlib-metadata && \
+    apt-get install --no-install-recommends -y openslide-tools && \
+    pip install --no-cache-dir openslide-python && \
+    pip install --no-cache-dir ptyprocess && \
+    pip install --no-cache-dir Pygments && \
+    pip install --no-cache-dir pyparsing && \
+    pip install --no-cache-dir pytz && \
+    pip install --no-cache-dir PyYAML && \
+    pip install --no-cache-dir pyzmq && \
+    pip install --no-cache-dir qtconsole && \
+    pip install --no-cache-dir six && \
+    pip install --no-cache-dir terminado && \
+    pip install --no-cache-dir tornado && \
+    pip install --no-cache-dir tqdm && \
+    pip install --no-cache-dir traitlets && \
+    pip install --no-cache-dir wcwidth && \
+    pip install --no-cache-dir webencodings && \
+    pip install --no-cache-dir widgetsnbextension && \
+    pip install --no-cache-dir pyarrow && \
+    pip install --no-cache-dir feather-format && \
+    pip install --no-cache-dir fastai && \
+    pip install --no-cache-dir allennlp && \
+    pip install --no-cache-dir importlib-metadata && \
     python -m spacy download en_core_web_sm && python -m spacy download en_core_web_lg && \
-    apt-get install -y ffmpeg && \
-    /tmp/clean-layer.sh
+    apt-get install --no-install-recommends -y ffmpeg && \
+    /tmp/clean-layer.sh && rm -rf /var/lib/apt/lists/*;
 
     ###########
     #
@@ -447,72 +447,72 @@ RUN pip install bleach && \
     #
     ###########
 
-RUN pip install flashtext && \
-    pip install wandb && \
+RUN pip install --no-cache-dir flashtext && \
+    pip install --no-cache-dir wandb && \
     # b/214080882 blake3 0.3.0 is not compatible with vaex.
-    pip install blake3==0.2.1 && \
-    pip install vaex && \
-    pip install marisa-trie && \
-    pip install pyemd && \
-    pip install pyupset && \
-    pip install pympler && \
-    pip install s3fs && \
-    pip install featuretools && \
-    pip install -e git+https://github.com/SohierDane/BigQuery_Helper#egg=bq_helper && \
-    pip install hpsklearn && \
-    pip install git+https://github.com/Kaggle/learntools && \
-    pip install kmapper && \
-    pip install shap && \
-    pip install ray && \
-    pip install gym && \
-    pip install pyarabic && \
-    pip install pandasql && \
-    pip install tensorflow_hub && \
-    pip install jieba  && \
-    pip install git+https://github.com/SauceCat/PDPbox && \
+    pip install --no-cache-dir blake3==0.2.1 && \
+    pip install --no-cache-dir vaex && \
+    pip install --no-cache-dir marisa-trie && \
+    pip install --no-cache-dir pyemd && \
+    pip install --no-cache-dir pyupset && \
+    pip install --no-cache-dir pympler && \
+    pip install --no-cache-dir s3fs && \
+    pip install --no-cache-dir featuretools && \
+    pip install --no-cache-dir -e git+https://github.com/SohierDane/BigQuery_Helper#egg=bq_helper && \
+    pip install --no-cache-dir hpsklearn && \
+    pip install --no-cache-dir git+https://github.com/Kaggle/learntools && \
+    pip install --no-cache-dir kmapper && \
+    pip install --no-cache-dir shap && \
+    pip install --no-cache-dir ray && \
+    pip install --no-cache-dir gym && \
+    pip install --no-cache-dir pyarabic && \
+    pip install --no-cache-dir pandasql && \
+    pip install --no-cache-dir tensorflow_hub && \
+    pip install --no-cache-dir jieba && \
+    pip install --no-cache-dir git+https://github.com/SauceCat/PDPbox && \
     # ggplot is broken and main repo does not merge and release https://github.com/yhat/ggpy/pull/668
-    pip install https://github.com/hbasria/ggpy/archive/0.11.5.zip && \
-    pip install cesium && \
-    pip install rgf_python && \
+    pip install --no-cache-dir https://github.com/hbasria/ggpy/archive/0.11.5.zip && \
+    pip install --no-cache-dir cesium && \
+    pip install --no-cache-dir rgf_python && \
     # b/205704651 remove install cmd for matrixprofile after version > 1.1.10 is released.
-    pip install git+https://github.com/matrix-profile-foundation/matrixprofile.git@6bea7d4445284dbd9700a097974ef6d4613fbca7 && \
-    pip install tsfresh && \
-    pip install pykalman && \
-    pip install optuna && \
-    pip install plotly_express && \
-    pip install albumentations && \
-    pip install catalyst && \
-    # b/206990323 osmx 1.1.2 requires numpy >= 1.21 which we don't want. 
-    pip install osmnx==1.1.1 && \
-    apt-get -y install libspatialindex-dev && \
-    pip install pytorch-ignite && \
-    pip install qgrid && \
-    pip install bqplot && \
-    pip install earthengine-api && \
-    pip install transformers && \
+    pip install --no-cache-dir git+https://github.com/matrix-profile-foundation/matrixprofile.git@6bea7d4445284dbd9700a097974ef6d4613fbca7 && \
+    pip install --no-cache-dir tsfresh && \
+    pip install --no-cache-dir pykalman && \
+    pip install --no-cache-dir optuna && \
+    pip install --no-cache-dir plotly_express && \
+    pip install --no-cache-dir albumentations && \
+    pip install --no-cache-dir catalyst && \
+    # b/206990323 osmx 1.1.2 requires numpy >= 1.21 which we don't want.
+    pip install --no-cache-dir osmnx==1.1.1 && \
+    apt-get -y --no-install-recommends install libspatialindex-dev && \
+    pip install --no-cache-dir pytorch-ignite && \
+    pip install --no-cache-dir qgrid && \
+    pip install --no-cache-dir bqplot && \
+    pip install --no-cache-dir earthengine-api && \
+    pip install --no-cache-dir transformers && \
     # b/232247930 >= 2.2.0 requires pyarrow >= 6.0.0 which conflicts with dependencies for rapidsai 0.21.*
-    pip install datasets==2.1.0 && \
-    pip install dlib && \
-    pip install kaggle-environments && \
-    pip install geopandas && \
-    pip install nnabla && \
-    pip install vowpalwabbit && \
-    pip install pydub && \
-    pip install pydegensac && \
-    pip install torchmetrics && \
-    pip install pytorch-lightning && \
-    pip install datatable && \
-    pip install sympy && \
+    pip install --no-cache-dir datasets==2.1.0 && \
+    pip install --no-cache-dir dlib && \
+    pip install --no-cache-dir kaggle-environments && \
+    pip install --no-cache-dir geopandas && \
+    pip install --no-cache-dir nnabla && \
+    pip install --no-cache-dir vowpalwabbit && \
+    pip install --no-cache-dir pydub && \
+    pip install --no-cache-dir pydegensac && \
+    pip install --no-cache-dir torchmetrics && \
+    pip install --no-cache-dir pytorch-lightning && \
+    pip install --no-cache-dir datatable && \
+    pip install --no-cache-dir sympy && \
     # flask is used by agents in the simulation competitions.
-    pip install flask && \
+    pip install --no-cache-dir flask && \
     # pycrypto is used by competitions team.
-    pip install pycrypto && \
-    pip install easyocr && \
+    pip install --no-cache-dir pycrypto && \
+    pip install --no-cache-dir easyocr && \
     # ipympl adds interactive widget support for matplotlib
-    pip install ipympl==0.7.0 && \
-    pip install pandarallel && \
-    pip install onnx && \
-    /tmp/clean-layer.sh
+    pip install --no-cache-dir ipympl==0.7.0 && \
+    pip install --no-cache-dir pandarallel && \
+    pip install --no-cache-dir onnx && \
+    /tmp/clean-layer.sh && rm -rf /var/lib/apt/lists/*;
 
 # Download base easyocr models.
 # https://github.com/JaidedAI/EasyOCR#usage
@@ -529,13 +529,13 @@ RUN mkdir -p /root/.EasyOCR/model && \
     /tmp/clean-layer.sh
 
 # Tesseract and some associated utility packages
-RUN apt-get install tesseract-ocr -y && \
-    pip install pytesseract && \
-    pip install wand && \
-    pip install pdf2image && \
-    pip install PyPDF && \
-    pip install pyocr && \
-    /tmp/clean-layer.sh
+RUN apt-get install --no-install-recommends tesseract-ocr -y && \
+    pip install --no-cache-dir pytesseract && \
+    pip install --no-cache-dir wand && \
+    pip install --no-cache-dir pdf2image && \
+    pip install --no-cache-dir PyPDF && \
+    pip install --no-cache-dir pyocr && \
+    /tmp/clean-layer.sh && rm -rf /var/lib/apt/lists/*;
 ENV TESSERACT_PATH=/usr/bin/tesseract
 
 # For Facets
@@ -545,7 +545,7 @@ ENV MKL_THREADING_LAYER=GNU
 
 # Temporary fixes and patches
 # Temporary patch for Dask getting downgraded, which breaks Keras
-RUN pip install --upgrade dask && \
+RUN pip install --no-cache-dir --upgrade dask && \
     # Stop jupyter nbconvert trying to rewrite its folder hierarchy
     mkdir -p /root/.jupyter && touch /root/.jupyter/jupyter_nbconvert_config.py && touch /root/.jupyter/migrated && \
     mkdir -p /.jupyter && touch /.jupyter/jupyter_nbconvert_config.py && touch /.jupyter/migrated && \