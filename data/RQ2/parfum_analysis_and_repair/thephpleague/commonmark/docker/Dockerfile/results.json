{
  "startTime": 1674252906292,
  "endTime": 1674252907790,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 11,
        "columnEnd": 138
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 11,
        "columnEnd": 143
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 4,
        "columnEnd": 46
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM php:7.4-cli-alpine\n\nENV PHPIZE_DEPS \\\n    autoconf \\\n    cmake \\\n    file \\\n    g++ \\\n    gcc \\\n    libc-dev \\\n    pcre-dev \\\n    make \\\n    git \\\n    pkgconf \\\n    re2c \\\n    # for intl extension\n    icu-dev \\\n    # for zip extension\n    libzip-dev\n\nRUN apk add --update --no-cache --virtual .persistent-deps \\\n    # for intl extension\n    icu-libs \\\n    # for mbstring\n    oniguruma-dev \\\n    # for zip\n    libzip \\\n    libgcrypt\n\n# Compile and install extensions\nRUN set -xe \\\n        && apk add --no-cache --virtual .build-deps $PHPIZE_DEPS \\\n        && docker-php-ext-configure intl --enable-intl \\\n        && docker-php-ext-configure mbstring --enable-mbstring \\\n        && docker-php-ext-configure opcache --enable-opcache \\\n        && docker-php-ext-install -j$(nproc) \\\n            intl \\\n            mbstring \\\n            opcache \\\n            zip \\\n        && pecl install xdebug \\\n        && apk del .build-deps\n\n\n# Install Blackfire PHP probe\nRUN set -xe \\\n        && version=$(php -r \"echo PHP_MAJOR_VERSION.PHP_MINOR_VERSION;\") \\\n        && curl -f -A \"Docker\" -o /tmp/blackfire-probe.tar.gz -D - -L -s https://blackfire.io/api/v1/releases/probe/php/alpine/amd64/$version \\\n        && mkdir -p /tmp/blackfire \\\n        && tar zxpf /tmp/blackfire-probe.tar.gz -C /tmp/blackfire \\\n        && mv /tmp/blackfire/blackfire-*.so $(php -r \"echo ini_get ('extension_dir');\")/blackfire.so \\\n        && printf \"extension=blackfire.so\\nblackfire.agent_socket=tcp://blackfire:8307\\n\" > $PHP_INI_DIR/conf.d/blackfire.ini \\\n        && rm -rf /tmp/blackfire /tmp/blackfire-probe.tar.gz\n\n# Install Blackfire client\nRUN set -xe \\\n        && mkdir -p /tmp/blackfire \\\n        && curl -f -A \"Docker\" -o /tmp/blackfire/blackfire -D - -L -s https://packages.blackfire.io/binaries/blackfire/2.4.3/blackfire-linux_amd64 \\\n        && mv /tmp/blackfire/blackfire /usr/bin/blackfire \\\n        && chmod +x /usr/bin/blackfire \\\n        && rm -Rf /tmp/blackfire\n\n# Install Composer\nRUN curl -f -sS https://getcomposer.org/installer | php -- --install-dir=/usr/bin --filename=composer\n\n# Install other needed binaries\nRUN apk add --no-cache --update patch git\n\n# Configure PHP\nCOPY config/php.ini     /usr/local/etc/php/conf.d/\nCOPY config/opcache.ini /usr/local/etc/php/conf.d/\nCOPY config/xdebug.ini  /usr/local/etc/php/conf.d/\n\nVOLUME [\"/app\"]\nWORKDIR /app\n"
}