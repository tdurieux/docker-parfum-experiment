{
  "startTime": 1674253322495,
  "endTime": 1674253323687,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 46
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG PHP_VERSION=7.4\n\nFROM php:${PHP_VERSION}-cli-alpine\nLABEL maintainer=\"Petar ObradoviÄ‡ <petar.obradovic@trikoder.net>\"\n\n# This is where we're going to store all of our non-project specific binaries\nRUN mkdir -p /app/bin\nENV PATH /app/bin:$PATH\n\n# Install needed core and PECL extensions\nRUN apk add --update --no-cache --virtual .build-deps \\\n        ${PHPIZE_DEPS} \\\n        libxml2-dev \\\n        libzip-dev \\\n        zlib-dev \\\n    && docker-php-ext-install -j $(getconf _NPROCESSORS_ONLN) \\\n        xml \\\n        zip \\\n    && pecl install \\\n        xdebug \\\n    && docker-php-ext-enable \\\n        xdebug \\\n    && apk del --purge .build-deps\n\nRUN mv ${PHP_INI_DIR}/php.ini-development ${PHP_INI_DIR}/php.ini\n\nENV XDEBUG_START_WITH_REQUEST 0\n\nRUN echo '[xdebug]' >> ${PHP_INI_DIR}/conf.d/docker-php-ext-xdebug.ini \\\n    && echo 'xdebug.start_with_request = ${XDEBUG_START_WITH_REQUEST}' >> ${PHP_INI_DIR}/conf.d/docker-php-ext-xdebug.ini \\\n    && echo 'xdebug.mode = debug' >> ${PHP_INI_DIR}/conf.d/docker-php-ext-xdebug.ini \\\n    && echo 'xdebug.discover_client_host = 0' >> ${PHP_INI_DIR}/conf.d/docker-php-ext-xdebug.ini \\\n    && echo 'xdebug.client_host = %XDEBUG_CLIENT_HOST%' >> ${PHP_INI_DIR}/conf.d/docker-php-ext-xdebug.ini\n\n# Utilities needed to run this image\nRUN apk add --update --no-cache \\\n        git \\\n        libzip \\\n        unzip \\\n        su-exec \\\n        shadow\n\n# Composer\nRUN curl -f -sS https://getcomposer.org/installer | php -- --install-dir=/app/bin --filename=composer \\\n    && chmod a+x /app/bin/composer\n\n# Create the user that's going to run our application\nRUN useradd -ms /bin/sh app\n\n# Composer bin plugin\nRUN su-exec app composer global require --dev bamarni/composer-bin-plugin\n\n# PHP-CS-Fixer\nRUN su-exec app composer global bin php-cs-fixer require --dev friendsofphp/php-cs-fixer \\\n    && ln -s /home/app/.composer/vendor/bin/php-cs-fixer /app/bin/php-cs-fixer\n\n# Psalm\nRUN su-exec app composer global bin psalm require --dev vimeo/psalm psalm/plugin-symfony \\\n    && ln -s /home/app/.composer/vendor/bin/psalm /app/bin/psalm\n\n# Enable parallel package installation for Composer\nRUN su-exec app composer global require symfony/flex\n\nCOPY entrypoint.sh /usr/local/bin/docker-entrypoint\n\nVOLUME /app/src\nWORKDIR /app/src\n\nENTRYPOINT [\"docker-entrypoint\"]\nCMD [\"php\", \"-a\"]\n"
}