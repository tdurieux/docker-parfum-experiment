{
  "startTime": 1674216617692,
  "endTime": 1674216618319,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 76
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 28
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:14.04\n\nMAINTAINER Dmitry Pokidov <dooman87@gmail.com>\n\nWORKDIR /\n\nENV GO15VENDOREXPERIMENT=0\nENV PATH=/opt/go/bin:/gohome/bin:$PATH\nENV GOPATH=/gohome\nENV GOROOT=/opt/go\n\nRUN apt-get update && \\\n    apt-get -y --no-install-recommends install automake bison flex g++ git libboost1.54-all-dev libevent-dev libssl-dev libtool make \\\n    pkg-config wget \\\n    python-mapnik libmapnik-dev \\\n    protobuf-compiler libprotobuf-dev \\\n    jq cmake libncurses5-dev && \\\n    rm -rf /var/lib/apt/lists/*\n\n#Installing apache thrift\nRUN wget https://apache.uberglobalmirror.com/thrift/0.9.3/thrift-0.9.3.tar.gz && \\\n    tar -xzvf thrift-0.9.3.tar.gz && \\\n    rm ./thrift-0.9.3.tar.gz && \\\n    cd /thrift-0.9.3 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --without-java && \\\n    make && \\\n    make install\n\n#Install golang 1.6\nWORKDIR /opt\nRUN wget https://storage.googleapis.com/golang/go1.6.linux-amd64.tar.gz && \\\n    tar -xzvf go1.6.linux-amd64.tar.gz && \\\n    rm go1.6.linux-amd64.tar.gz && \\\n    mkdir -p /gohome/bin && \\\n    mkdir -p /gohome/pkg && \\\n    mkdir /gohome/src\n\nRUN go get github.com/mattn/gom\n\nRUN mkdir /gopnik\nADD . /gopnik\nWORKDIR /gopnik\nRUN gom install && \\\n    gom exec ./bootstrap.bash && \\\n    gom exec ./build.bash\n\nRUN mkdir /gopnik_data\nCOPY example/dockerconfig.json /gopnik_data/config.json\nCOPY sampledata/stylesheet.xml /gopnik_data/\nCOPY sampledata/world_merc.shp /gopnik_data/\nCOPY sampledata/world_merc.dbf /gopnik_data/\nVOLUME /gopnik_data\n\nEXPOSE 8080\nEXPOSE 9090\n\nENTRYPOINT ./entrypoint.sh\n"
}