{
  "startTime": 1674252082937,
  "endTime": 1674252083587,
  "originalSmells": [
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 22,
        "columnEnd": 104
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG PLATFORM=amd64\nARG CROSS_BUILD_TARGET=x86_64-unknown-linux-gnu\nFROM ${PLATFORM}/debian:buster-slim\nARG CROSS_BUILD_TARGET\nARG PLATFORM\nARG BUILD_TYPE=release\nRUN echo \"Creating container based on ${PLATFORM}/debian:buster-slim\"\nRUN echo \"Using Rust binaries from ${CROSS_BUILD_TARGET}/${BUILD_TYPE}\"\n\n# Link the container to the Akri repository\nLABEL org.opencontainers.image.source https://github.com/project-akri/akri\n\n# Install crictl and openssl dependencies\nRUN apt-get update && apt-get install -y --no-install-recommends libssl-dev openssl wget ca-certificates && \\\n    echo \"Container platform target is ${PLATFORM}\" && \\\n    if [ \"$PLATFORM\" = \"arm32v7\" ] ; \\\n    then export CRICTL_PLATFORM=\"arm\" ; \\\n    elif [ \"$PLATFORM\" = \"arm64v8\" ] ; \\\n    then export CRICTL_PLATFORM=\"arm64\" ; \\\n    elif [ \"$PLATFORM\" = \"amd64\" ] ; \\\n    then export CRICTL_PLATFORM=\"amd64\" ; \\\n    else echo \"no PLATFORM provided. Using amd64 for crictl\" && export CRICTL_PLATFORM=\"amd64\" ; \\\n    fi && \\\n    echo \"CRICTL platform target is ${CRICTL_PLATFORM}\" && \\\n    VERSION=\"v1.17.0\" && \\\n    wget https://github.com/kubernetes-sigs/cri-tools/releases/download/$VERSION/crictl-$VERSION-linux-$CRICTL_PLATFORM.tar.gz -O crictl.tar.gz && \\\n    tar zxvf crictl.tar.gz -C /usr/local/bin && \\\n    rm -f crictl.tar.gz && \\\n    apt-get remove -y wget ca-certificates && apt-get clean && rm -rf /var/lib/apt/lists/*;\n\nCOPY ./target/${CROSS_BUILD_TARGET}/${BUILD_TYPE}/agent /agent\nENV RUST_LOG agent,akri_shared\nCMD [\"./agent\"]\n"
}