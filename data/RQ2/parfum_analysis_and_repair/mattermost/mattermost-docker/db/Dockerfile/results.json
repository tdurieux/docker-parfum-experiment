{
  "startTime": 1674218837307,
  "endTime": 1674218837947,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 7,
        "columnEnd": 32
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM postgres:10-alpine\n\nENV DEFAULT_TIMEZONE UTC\n# Mandatory nowdays with PG 10\nENV WAL_LEVEL logical\n\n# Install some packages to use WAL\nRUN echo \"azure<5.0.0\" > pip-constraints.txt\nRUN apk add --no-cache \\\n      build-base \\\n      curl \\\n      libc6-compat \\\n      libffi-dev \\\n      linux-headers \\\n      python3-dev \\\n      py3-pip \\\n      py-cryptography \\\n      pv \\\n    && pip install --no-cache-dir --upgrade pip \\\n    && pip --no-cache-dir install -c pip-constraints.txt 'wal-e<1.0.0' envdir \\\n    && rm -rf /var/cache/apk/* /tmp/* /var/tmp/*\n\n# Add wale script\nCOPY setup-wale.sh /docker-entrypoint-initdb.d/\n\n# Healthcheck to make sure container is ready\nHEALTHCHECK CMD pg_isready -U $POSTGRES_USER -d $POSTGRES_DB || exit 1\n\n# Add and configure entrypoint and command\nCOPY entrypoint.sh /\nENTRYPOINT [\"/entrypoint.sh\"]\nCMD [\"postgres\"]\n\nVOLUME [\"/var/run/postgresql\", \"/usr/share/postgresql/\", \"/var/lib/postgresql/data\", \"/tmp\", \"/etc/wal-e.d/env\"]\n"
}