{
  "startTime": 1674216888096,
  "endTime": 1674216889361,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 37,
        "columnEnd": 53
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.14.6@sha256:06b5d462c92fc39303e6363c65e074559f8d6b1363250027ed5053557e3398c5\n\n# Some ENV variables\nENV PATH=\"/mattermost/bin:${PATH}\"\nARG PUID=2000\nARG PGID=2000\nARG MM_PACKAGE=\"https://releases.mattermost.com/7.0.1/mattermost-7.0.1-linux-amd64.tar.gz?src=docker\"\n\n\n# Install some needed packages\nRUN apk add --no-cache \\\n  ca-certificates \\\n  curl \\\n  libc6-compat \\\n  libffi-dev \\\n  linux-headers \\\n  mailcap \\\n  netcat-openbsd \\\n  xmlsec-dev \\\n  tzdata \\\n  wv \\\n  poppler-utils \\\n  tidyhtml \\\n  && rm -rf /tmp/*\n\n# Get Mattermost\nRUN mkdir -p /mattermost/data /mattermost/plugins /mattermost/client/plugins \\\n  && if [ ! -z \"$MM_PACKAGE\" ]; then \\\n  curl -f $MM_PACKAGE | tar -xvz; \\\n  else echo \"please set the MM_PACKAGE\" ; fi \\\n  && addgroup -g ${PGID} mattermost \\\n  && adduser -D -u ${PUID} -G mattermost -h /mattermost -D mattermost \\\n  && chown -R mattermost:mattermost /mattermost /mattermost/plugins /mattermost/client/plugins\n\nUSER mattermost\n\n#Healthcheck to make sure container is ready\nHEALTHCHECK --interval=30s --timeout=10s \\\n  CMD curl -f http://localhost:8065/api/v4/system/ping || exit 1\n\n\n# Configure entrypoint and command\nCOPY entrypoint.sh /\nENTRYPOINT [\"/entrypoint.sh\"]\nWORKDIR /mattermost\nCMD [\"mattermost\"]\n\nEXPOSE 8065 8067 8074 8075\n\n# Declare volumes for mount point directories\nVOLUME [\"/mattermost/data\", \"/mattermost/logs\", \"/mattermost/config\", \"/mattermost/plugins\", \"/mattermost/client/plugins\"]\n"
}