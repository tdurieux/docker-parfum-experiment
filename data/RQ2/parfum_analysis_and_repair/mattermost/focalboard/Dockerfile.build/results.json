{
  "startTime": 1674248479853,
  "endTime": 1674248480411,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# This dockerfile is used to build Focalboard for Linux\n# it builds all the parts inside the container and the last stage just holds the\n# package that can be extracted using docker cp command\n# ie\n# docker build -f Dockerfile.build --no-cache -t focalboard-build:dirty .\n# docker run --rm -v /tmp/dist:/tmp -d --name test focalboard-build:dirty /bin/sh -c 'sleep 1000'\n# docker cp test:/dist/focalboard-server-linux-amd64.tar.gz .\n\n# build frontend\nFROM node:16.3.0@sha256:ca6daf1543242acb0ca59ff425509eab7defb9452f6ae07c156893db06c7a9a4 AS frontend\n\nWORKDIR /webapp\nCOPY webapp .\n\nRUN npm install --no-optional && npm cache clean --force;\nRUN npm run pack\n\n# build backend and package\nFROM golang:1.18.3@sha256:b203dc573d81da7b3176264bfa447bd7c10c9347689be40540381838d75eebef AS backend\n\nCOPY . .\nCOPY --from=frontend /webapp/pack webapp/pack\n\n# RUN apt-get update && apt-get install libgtk-3-dev libwebkit2gtk-4.0-dev -y\nRUN make server-linux\nRUN make server-linux-package-docker\n\n# just hold the packages to output later\nFROM alpine:3.12@sha256:c75ac27b49326926b803b9ed43bf088bc220d22556de1bc5f72d742c91398f69 AS dist\n\nWORKDIR /dist\n\nCOPY --from=backend /go/dist/focalboard-server-linux-amd64.tar.gz .\n"
}