{
  "startTime": 1674250291084,
  "endTime": 1674250291671,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 42
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM local/carbon-platform/base:latest AS builder\n\nWORKDIR /ibm\n\nARG CARBON_GITHUB_TOKEN\nARG GITHUB_TOKEN=${CARBON_GITHUB_TOKEN}\n\nRUN npm -w services/web-app install && npm cache clean --force;\nRUN npm -w services/web-app run build\nRUN npm -w services/web-app run bundle\n\n###\n\nFROM node:16-alpine\n\nWORKDIR /ibm/services/web-app\n\nENV NODE_ENV=production\nENV CARBON_RUN_MODE=STANDARD\n\n# Dependencies required for node-gyp to run on Alpine Linux. This is needed for \"sharp\"\nRUN apk add --no-cache python3 make g++\nRUN ln -s /usr/bin/python3 /usr/bin/python\n\nRUN CI=true npm install concurrently sharp && npm cache clean --force;\n\nCOPY --from=builder /ibm/services/web-app/dist/out.js dist/out.js\nCOPY --from=builder /ibm/services/web-app/.next/standalone .next/standalone\nCOPY --from=builder /ibm/services/web-app/public .next/standalone/services/web-app/public\nCOPY --from=builder /ibm/services/web-app/.next/static .next/standalone/services/web-app/.next/static\nCOPY --from=builder /ibm/services/web-app/.carbon .next/standalone/services/web-app/.carbon\n\n# Run NextJS app concurrently with the express proxy server\nCMD [\"npx\", \"concurrently\", \"PORT=3000 node .next/standalone/services/web-app/server.js\", \"node dist/out.js\"]\n"
}