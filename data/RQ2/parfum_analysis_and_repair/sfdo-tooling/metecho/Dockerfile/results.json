{
  "startTime": 1674217262159,
  "endTime": 1674217263049,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 75,
        "columnEnd": 86
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 34,
        "columnEnd": 50
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 13,
        "columnEnd": 30
      }
    }
  ],
  "repairedDockerfile": "FROM ghcr.io/oddbird/pyjs:py3.10-node16\n\nARG BUILD_ENV=development\nARG PROD_ASSETS\nWORKDIR /app\n\n# Env setup:\nENV PYTHONPATH /app\nENV DJANGO_SETTINGS_MODULE config.settings.production\n\n# Install sfdx\nRUN npm install --location=global sfdx-cli --ignore-scripts && npm cache clean --force;\n\n# Python requirements:\nCOPY ./requirements requirements\nRUN pip install --no-cache-dir --upgrade pip pip-tools \\\n    && pip install --no-cache-dir -r requirements/prod.txt\nRUN if [ \"${BUILD_ENV}\" = \"development\" ] ; then \\\n    pip install --no-cache-dir -r requirements/dev.txt; \\\n    fi\n\n# JS client setup:\nCOPY ./package.json package.json\nCOPY ./yarn.lock yarn.lock\nRUN yarn install --check-files && yarn cache clean;\n\nCOPY . /app\n\n# Avoid building prod assets in development\nRUN if [ \"${BUILD_ENV}\" = \"production\" ] || [ -n \"${PROD_ASSETS}\" ] ; then \\\n yarn prod ; yarn cache clean; else mkdir -p dist/prod ; fi\n\nRUN \\\n  # Sample keys, not to be used for realsies:\n  DB_ENCRYPTION_KEY=\"IfFzxkuTnuk-J-TnjisNz0wlBHmAILOnAzoG-NpMQNE=\" \\\n  SFDX_CLIENT_SECRET=\"sample secret\" \\\n  SFDX_CLIENT_CALLBACK_URL=\"sample callback\" \\\n  SFDX_CLIENT_ID=\"sample id\" \\\n  SFDX_HUB_KEY=\"sample key\" \\\n  python manage.py collectstatic --noinput\n\nCMD /app/start-server.sh\n"
}