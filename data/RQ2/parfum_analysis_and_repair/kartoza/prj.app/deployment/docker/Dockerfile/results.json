{
  "startTime": 1674256007517,
  "endTime": 1674256008435,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 33,
        "columnEnd": 65
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 33,
        "columnEnd": 69
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 57
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 22,
        "columnEnd": 60
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 22,
        "columnEnd": 60
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#--------- Generic stuff all our Dockerfiles should start with so we get caching ------------\n# Note this base image is based on debian\nFROM python:3.10 as prod\nMAINTAINER Tim Sutton<tim@kartoza.com>\n\nRUN  export DEBIAN_FRONTEND=noninteractive\nENV  DEBIAN_FRONTEND noninteractive\nRUN  dpkg-divert --local --rename --add /sbin/initctl\n\n# Pandoc needed to generate rst dumps, uic compressor needed for django-pipeline\nRUN apt-get update -y && \\\n    apt-get -y --no-install-recommends install python3-gdal python3-geoip sudo curl rpl && \\\n    apt-get -y --no-install-recommends --force-yes install yui-compressor gettext && \\\n    apt-get -y --purge autoremove make libc-dev musl-dev g++ && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    rm -rf ~/.cache/pip\nRUN wget https://github.com/jgm/pandoc/releases/download/1.17.1/pandoc-1.17.1-2-amd64.deb\nRUN dpkg -i pandoc-1.17.1-2-amd64.deb && rm pandoc-1.17.1-2-amd64.deb\n\n# Added because of issue with building cryptography.io using pip\n# This flag disabled rust build, but only for this particular version\n# In the future, we may have to include rust toolchain in the Dockerfile\nENV CRYPTOGRAPHY_DONT_BUILD_RUST=1\n\nADD deployment/docker/REQUIREMENTS.txt /REQUIREMENTS.txt\nADD deployment/docker/uwsgi.conf /uwsgi.conf\nADD django_project /home/web/django_project\nRUN pip install --no-cache-dir --upgrade pip && pip install --no-cache-dir -r /REQUIREMENTS.txt\nRUN pip install --no-cache-dir uwsgi\n\n\n# Open port 8080 as we will be running our uwsgi socket on that\nEXPOSE 8080\n\n#USER www-data\n\nWORKDIR /home/web/django_project\nCMD [\"uwsgi\", \"--ini\", \"/uwsgi.conf\"]\n\nFROM prod as dev\n\n# This section taken on 2 July 2015 from\n# https://docs.docker.com/examples/running_ssh_service/\n# Sudo is needed by pycharm when it tries to pip install packages\nRUN apt-get update && apt-get install --no-install-recommends -y openssh-server sudo && rm -rf /var/lib/apt/lists/*;\nRUN mkdir /var/run/sshd\nRUN echo 'root:docker' | chpasswd\nRUN echo \"PermitRootLogin yes\" >> /etc/ssh/sshd_config\n\n\n# SSH login fix. Otherwise user is kicked off after login\nRUN sed 's@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd\n\nENV NOTVISIBLE \"in users profile\"\nRUN echo \"export VISIBLE=now\" >> /etc/profile\n\n# End of cut & paste section\n\nADD deployment/docker/REQUIREMENTS-dev.txt /REQUIREMENTS-dev.txt\nRUN pip install --no-cache-dir --upgrade pip && pip install --no-cache-dir -r /REQUIREMENTS-dev.txt\nADD deployment/docker/bashrc /root/.bashrc\n\n# --------------------------------------------------------\n# Open ports as needed\n# --------------------------------------------------------\n\n# Open port 8080 as we will be running our django dev server on\nEXPOSE 8080\n# Open port 22 as we will be using a remote interpreter from pycharm\nEXPOSE 22\n\nCMD [\"/usr/sbin/sshd\", \"-D\"]\n"
}