{
  "startTime": 1674254004486,
  "endTime": 1674254005947,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 1,
        "columnEnd": 32
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 1,
        "columnEnd": 18
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 23,
        "columnEnd": 76
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 23,
        "columnEnd": 76
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#--------- Generic stuff all our Dockerfiles should start with so we get caching ------------\n# Note this base image is based on debian\nFROM kartoza/django-base:3.7\nMAINTAINER Tim Sutton<tim@kartoza.com>\n\n#RUN  ln -s /bin/true /sbin/initctl\n\n# Pandoc needed to generate rst dumps, uic compressor needed for django-pipeline\nRUN apt-get update -y; apt-get -y --no-install-recommends --force-yes install yui-compressor gettext && rm -rf /var/lib/apt/lists/*;\nRUN wget https://github.com/jgm/pandoc/releases/download/1.17.1/pandoc-1.17.1-2-amd64.deb\nRUN dpkg -i pandoc-1.17.1-2-amd64.deb && rm pandoc-1.17.1-2-amd64.deb\n\nARG BRANCH_TAG=develop\nRUN mkdir -p /usr/src; rm -rf /usr/src mkdir -p /home/web && \\\n            git clone --depth=1 git://github.com/kartoza/prj.app.git --branch ${BRANCH_TAG} /usr/src/projecta/ && \\\n            rm -rf /home/web/django_project && \\\n\t        ln -s /usr/src/projecta/django_project /home/web/django_project\n\nRUN cd /usr/src/projecta/deployment/docker && \\\n\tpip install --no-cache-dir -r REQUIREMENTS.txt && \\\n\tpip install --no-cache-dir uwsgi && \\\n\trm -rf /uwsgi.conf && \\\n\tln -s ${PWD}/uwsgi.conf /uwsgi.conf\n\n# Open port 8080 as we will be running our uwsgi socket on that\nEXPOSE 8080\n\n#USER www-data\n\nWORKDIR /home/web/django_project\nCMD [\"uwsgi\", \"--ini\", \"/uwsgi.conf\"]\n"
}