{
  "startTime": 1674248072815,
  "endTime": 1674248073952,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 21,
        "lineEnd": 25,
        "columnStart": 7,
        "columnEnd": 89
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 7,
        "columnEnd": 71
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#--------- Generic stuff all our Dockerfiles should start with so we get caching ------------\nARG IMAGE_VERSION=9.0-jdk11-openjdk-slim-bullseye\nARG JAVA_HOME=/usr/local/openjdk-11\nFROM tomcat:$IMAGE_VERSION\n\nLABEL maintainer=\"Tim Sutton<tim@linfiniti.com>\"\nARG GS_VERSION=2.21.0\nARG WAR_URL=https://downloads.sourceforge.net/project/geoserver/GeoServer/${GS_VERSION}/geoserver-${GS_VERSION}-war.zip\nARG STABLE_PLUGIN_BASE_URL=https://sonik.dl.sourceforge.net\nARG DOWNLOAD_ALL_STABLE_EXTENSIONS=1\nARG DOWNLOAD_ALL_COMMUNITY_EXTENSIONS=1\nARG GEOSERVER_UID=1000\nARG GEOSERVER_GID=10001\nARG USER=geoserveruser\nARG GROUP_NAME=geoserverusers\nARG HTTPS_PORT=8443\n\n#Install extra fonts to use with sld font markers\nRUN set -eux \\\n    && export DEBIAN_FRONTEND=noninteractive \\\n    && apt-get update \\\n    && apt-get -y --no-install-recommends install \\\n        locales gnupg2 wget ca-certificates rpl pwgen software-properties-common  iputils-ping \\\n        apt-transport-https curl gettext fonts-cantarell lmodern ttf-aenigma \\\n        ttf-bitstream-vera ttf-sjfonts tv-fonts  libapr1-dev libssl-dev  \\\n        wget zip unzip curl xsltproc certbot  cabextract gettext postgresql-client figlet && rm -rf /var/lib/apt/lists/*;\n# Install gdal3 - bullseye doesn't build libgdal-java anymore so we can't upgrade\nRUN curl -f https://deb.meteo.guru/velivole-keyring.asc | apt-key add - \\\n    && echo \"deb https://deb.meteo.guru/debian buster main\" > /etc/apt/sources.list.d/meteo.guru.list \\\n    && apt-get update \\\n    && apt-get -y --no-install-recommends install gdal-bin libgdal-java && rm -rf /var/lib/apt/lists/*;\n\nRUN set -e \\\n    export DEBIAN_FRONTEND=noninteractive \\\n    dpkg-divert --local --rename --add /sbin/initctl \\\n    && (echo \"Yes, do as I say!\" | apt-get remove --force-yes login) \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/*\n\nENV \\\n    JAVA_HOME=${JAVA_HOME} \\\n    DEBIAN_FRONTEND=noninteractive \\\n    GEOSERVER_DATA_DIR=/opt/geoserver/data_dir \\\n    GDAL_DATA=/usr/share/gdal \\\n    LD_LIBRARY_PATH=\"$LD_LIBRARY_PATH:/usr/local/tomcat/native-jni-lib:/usr/lib/jni:/usr/local/apr/lib:/opt/libjpeg-turbo/lib64:/usr/lib:/usr/lib/x86_64-linux-gnu\" \\\n    FOOTPRINTS_DATA_DIR=/opt/footprints_dir \\\n    GEOWEBCACHE_CACHE_DIR=/opt/geoserver/data_dir/gwc \\\n    CERT_DIR=/etc/certs \\\n    RANDFILE=/etc/certs/.rnd \\\n    FONTS_DIR=/opt/fonts \\\n    GEOSERVER_HOME=/geoserver \\\n    EXTRA_CONFIG_DIR=/settings\n\n\nWORKDIR /scripts\nRUN groupadd -r ${GROUP_NAME} -g ${GEOSERVER_GID} && \\\n    useradd -m -d /home/${USER}/ -u ${GEOSERVER_UID} --gid ${GEOSERVER_GID} -s /bin/bash -G ${GROUP_NAME} ${USER}\nRUN mkdir -p  ${GEOSERVER_DATA_DIR} ${CERT_DIR} ${FOOTPRINTS_DATA_DIR} ${FONTS_DIR} \\\n             ${GEOWEBCACHE_CACHE_DIR} ${GEOSERVER_HOME} ${EXTRA_CONFIG_DIR} /community_plugins /stable_plugins \\\n           /plugins /geo_data\n\nADD resources /tmp/resources\nADD build_data /build_data\nRUN cp /build_data/stable_plugins.txt /plugins && cp /build_data/community_plugins.txt /community_plugins && \\\n    cp /build_data/letsencrypt-tomcat.xsl ${CATALINA_HOME}/conf/ssl-tomcat.xsl\n\nADD scripts /scripts\nRUN echo $GS_VERSION > /scripts/geoserver_version.txt\nRUN chmod +x /scripts/*.sh;/scripts/setup.sh \\\n    && apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*;chown -R ${USER}:${GROUP_NAME} \\\n    ${CATALINA_HOME} ${FOOTPRINTS_DATA_DIR} ${GEOSERVER_DATA_DIR} /scripts ${CERT_DIR} ${FONTS_DIR} \\\n    /tmp/ /home/${USER}/ /community_plugins/ /plugins ${GEOSERVER_HOME} ${EXTRA_CONFIG_DIR} \\\n    /usr/share/fonts/ /geo_data;chmod o+rw ${CERT_DIR}\n\n\nEXPOSE  $HTTPS_PORT\n\n\nUSER ${GEOSERVER_UID}\nRUN echo 'figlet -t \"Kartoza Docker GeoServer\"' >> ~/.bashrc\n\nWORKDIR ${GEOSERVER_HOME}\n\nCMD [\"/bin/bash\", \"/scripts/entrypoint.sh\"]\n"
}