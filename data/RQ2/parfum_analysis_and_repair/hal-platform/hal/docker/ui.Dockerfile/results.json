{
  "startTime": 1674214962020,
  "endTime": 1674214963375,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 13,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 67,
        "lineEnd": 69,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 18,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 17
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 8,
        "columnEnd": 23
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 33,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 11
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 60,
        "lineEnd": 65,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 77,
        "lineEnd": 90,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 95,
        "lineEnd": 98,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 33,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 11
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 60,
        "lineEnd": 65,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 77,
        "lineEnd": 90,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 95,
        "lineEnd": 98,
        "columnStart": 4,
        "columnEnd": 20
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 33,
        "columnEnd": 49
      }
    }
  ],
  "repairedDockerfile": "# STAGE 1\n###############################################################################\n\nFROM node:10.7.0-stretch as frontend_build\n\nARG hal_version=master\nARG archive_url\n\nENV hal_version ${hal_version:-master}\nENV archive_url ${archive_url:-https://api.github.com/repos/hal-platform/hal/tarball/${hal_version}}\n\nWORKDIR /app\n\nRUN curl -f -sSLo code.tgz \\\n    ${archive_url} && \\\n    tar -xzf code.tgz --strip-components=1 && \\\n    rm -r code.tgz\n\nRUN yarn install \\\n    --production \\\n    --no-progress \\\n    && \\\n        yarn run deploy \\\n    && \\\n        rm -rf ./node_modules && yarn cache clean;\n\n# STAGE 2\n###############################################################################\n\nFROM halplatform/php:frontend as backend_build\n\n# Install optional dependencies\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y \\\n        git \\\n    && rm -rf \"/var/lib/apt/lists/*\" && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /app\n\nCOPY --from=frontend_build /app .\n\nRUN composer install \\\n    --no-dev --optimize-autoloader\n\n# Force install of phinx\nRUN ./vendor/bin/hal-phinx\n\n# STAGE 3\n###############################################################################\n\nFROM nginx:1.15.1\n\nEXPOSE 8000\nCMD [\"/sbin/entrypoint.sh\"]\n\nENV PHP_VERSION      7.1\nENV DEBIAN_FRONTEND  noninteractive\n\n# Install system and php dependencies\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y \\\n        bzip2 \\\n        curl \\\n        supervisor \\\n        apt-transport-https \\\n        ca-certificates \\\n    && \\\n    curl -f -sS \\\n        -o /etc/apt/trusted.gpg.d/php.gpg \\\n        https://packages.sury.org/php/apt.gpg \\\n    && \\\n    echo \"deb https://packages.sury.org/php/ stretch main\" | tee \\\n        /etc/apt/sources.list.d/php.list \\\n    && \\\n    apt-get update && \\\n    mkdir -p /usr/share/man/man1 && \\\n    mkdir -p /usr/share/man/man7 && \\\n    apt-get install --no-install-recommends -y \\\n        php${PHP_VERSION} \\\n        php${PHP_VERSION}-curl \\\n        php${PHP_VERSION}-fpm \\\n        php${PHP_VERSION}-ldap \\\n        php${PHP_VERSION}-mbstring \\\n        php${PHP_VERSION}-mysql \\\n        php${PHP_VERSION}-opcache \\\n        php${PHP_VERSION}-pgsql \\\n        php${PHP_VERSION}-phpdbg \\\n        php${PHP_VERSION}-sodium \\\n        php${PHP_VERSION}-sqlite3 \\\n        php${PHP_VERSION}-xml \\\n        php${PHP_VERSION}-zip \\\n    && rm -rf \"/var/lib/apt/lists/*\" && rm -rf /var/lib/apt/lists/*;\n\n# Install optional dependencies\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y \\\n        sqlite \\\n        postgresql-client \\\n        mysql-client \\\n    && rm -rf \"/var/lib/apt/lists/*\" && rm -rf /var/lib/apt/lists/*;\n\nRUN ln -sf /dev/stdout /var/log/php${PHP_VERSION}-fpm.log\n\nRUN touch /var/run/nginx.pid && \\\n    chown -R www-data:root /var/run/nginx.pid \\\n    && \\\n    touch /var/run/fpm.pid && \\\n    chown -R www-data:root /var/run/fpm.pid\n\nWORKDIR /app\n\nCOPY --from=backend_build /bin/composer /bin/composer\n\nCOPY --chown=www-data:root \\\n    --from=backend_build /app .\n\nRUN mkdir -p /usr/share/nginx/cache && \\\n    mkdir -p /var/cache/nginx && \\\n    mkdir -p /var/lib/nginx && \\\n    chown www-data:root \\\n        /app && \\\n    chown -R www-data:root \\\n        /usr/share/nginx/cache \\\n        /var/cache/nginx \\\n        /var/lib/nginx/ \\\n        /etc/php/${PHP_VERSION}/fpm/pool.d\n\nUSER www-data\n\nCOPY scripts/wait_for_db.sh /bin/wait_for_db.sh\nCOPY scripts/entrypoint.sh  /sbin/entrypoint.sh\n\nCOPY conf/fpm.conf          /etc/php/${PHP_VERSION}/fpm/pool.d/www.conf\n\nCOPY conf/nginx.conf        /etc/nginx/nginx.conf\nCOPY conf/nginx.site.conf   /etc/nginx/conf.d/default.conf\n\nCOPY conf/supervisord.conf  /etc/supervisor/supervisord.conf\nCOPY conf/.env.docker       /.env.default\n\nUSER root\n\nRUN chmod -R g+rw \\\n    /usr/share/nginx/cache \\\n    /var/cache/nginx \\\n    /var/lib/nginx\n\nUSER www-data\n"
}