{
  "startTime": 1674248814008,
  "endTime": 1674248815408,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 101
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 44,
        "columnEnd": 217
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 44,
        "columnEnd": 217
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Build Docker for FlyBrainLab\n# docker build -f Dockerfile --build-arg FLYBRAINLAB_DOCKER_VER=$(date +%Y%m%d-%H%M%S) -t fruitflybrain/fbl .\n\nFROM nvidia/cuda:11.2.1-devel-ubuntu18.04\n\nLABEL maintainer=\"Fruit Fly Brain Observatory Team <http://fruitflybrain.org>\"\n\nRUN apt-get update && apt-get upgrade -y && apt-get install --no-install-recommends -y openssh-server emacs sudo tmux git default-jre curl vim wget dialog net-tools build-essential tar apt-transport-https whois sendmail graphviz graphviz-dev && \\\n    mkdir /var/run/sshd && \\\n    echo 'root:kfj8734KJFhu28fDFuhuew9,2481' | chpasswd && \\\n    sed -i 's/PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config && \\\n    sed 's@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd && \\\n    echo \"export VISIBLE=now\" >> /etc/profile && \\\n    useradd ffbo -m -s /bin/bash -p `mkpasswd Drosophila` && \\\n    usermod -aG sudo ffbo && \\\n    apt-get clean && \\\n    apt-get autoremove --purge && rm -rf /var/lib/apt/lists/*;\n\nENV NOTVISIBLE=\"in users profile\"\nEXPOSE 22\n\nRUN wget https://download.open-mpi.org/release/open-mpi/v4.0/openmpi-4.0.5.tar.gz &&\\\n    tar xzf openmpi-4.0.5.tar.gz && \\\n    rm -rf openmpi-4.0.5.tar.gz && \\\n    cd openmpi-4.0.5 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-cuda=/usr/local/cuda --disable-mpi-fortran --enable-shared --prefix=/usr/local && \\\n    make -j8 && \\\n    make install && \\\n    cd ../ && \\\n    rm -rf openmpi-4.0.5\n\nUSER ffbo\nWORKDIR /home/ffbo\n\nENV PATH /usr/local/bin:/usr/local/cuda/bin:/usr/bin:/usr/sbin:$PATH\nENV LD_LIBRARY_PATH /usr/local/lib:/usr/local/cuda/lib64:/usr/lib:/usr/lib/x86_64-linux-gnu:$LD_LIBRARY_PATH\n\nRUN wget https://s3.us-east-2.amazonaws.com/orientdb3/releases/3.0.35/orientdb-3.0.35.tar.gz && \\\n    tar zxf orientdb-3.0.35.tar.gz --directory /home/ffbo/ && \\\n    mv /home/ffbo/orientdb-3.0.35 /home/ffbo/orientdb && \\\n    rm orientdb-3.0.35.tar.gz\n\nRUN wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh &&  \\\n    sh miniconda.sh -b -p /home/ffbo/miniconda && \\\n    echo \". $HOME/miniconda/etc/profile.d/conda.sh\" | tee -a ~/.bashrc && \\\n    rm miniconda.sh && \\\n    mkdir /home/ffbo/ffbo && \\\n    cd /home/ffbo/ffbo && \\\n    git clone https://github.com/fruitflybrain/ffbo.nlp_component.git && \\\n    git clone https://github.com/fruitflybrain/ffbo.processor.git && \\\n    git clone https://github.com/fruitflybrain/ffbo.neuroarch_component.git && \\\n    git clone https://github.com/fruitflybrain/ffbo.neurokernel_component.git && \\\n    git clone https://github.com/fruitflybrain/ffbo.neuronlp.git  && \\\n    cd ffbo.neuronlp && \\\n    git checkout hemibrain && \\\n    git clone https://github.com/fruitflybrain/ffbo.lib.git lib && \\\n    cd lib && \\\n    git checkout hemibrain && \\\n    cd ../../ && \\\n    mkdir -p /home/ffbo/ffbo/ffbo.neuronlp/img/flycircuit && \\\n    git clone https://github.com/FlyBrainLab/Tutorials.git && \\\n    mkdir nk_tmp && \\\n    /bin/bash -c \". $HOME/miniconda/etc/profile.d/conda.sh && \\\n    conda create -n crossbar python=3.7 numpy pandas -c conda-forge -y && \\\n    conda activate crossbar && \\\n    cd /home/ffbo/ffbo/ffbo.processor && \\\n    python -m pip install -e . && \\\n    conda deactivate && \\\n    conda create -n ffbo_legacy python=2.7 numpy -y && \\\n    conda activate ffbo_legacy && \\\n    cd /home/ffbo/ffbo/ffbo.nlp_component && \\\n    pip install -r requirements.txt && \\\n    python -m pip install -e . && \\\n    conda deactivate && \\\n    conda create -n ffbo python=3.7 python-snappy numpy matplotlib scipy pandas h5py -c conda-forge -y && \\\n    conda activate ffbo && \\\n    python -m pip install git+https://github.com/fruitflybrain/pyorient.git git+https://github.com/mkturkcan/autobahn-sync.git git+https://github.com/FlyBrainLab/Neuroballad.git git+https://github.com/palash1992/GEM.git git+https://github.com/mkturkcan/nxcontrol && \\\n    python -m pip install neurokernel neurodriver neuroarch flybrainlab[full] neuromynerva && \\\n    cd /home/ffbo/ffbo/ffbo.neuroarch_component && \\\n    python -m pip install -e . && \\\n    cd /home/ffbo/ffbo/ffbo.neurokernel_component && \\\n    python -m pip install -e .\" && \\\n    cd /home/ffbo/ && \\\n    wget https://github.com/explosion/spaCy/releases/download/v1.6.0/en-1.1.0.tar.gz && \\\n    mkdir /home/ffbo/miniconda/envs/ffbo_legacy/lib/python2.7/site-packages/spacy/data && \\\n    tar zxf en-1.1.0.tar.gz --directory /home/ffbo/miniconda/envs/ffbo_legacy/lib/python2.7/site-packages/spacy/data && \\\n    rm en-1.1.0.tar.gz && \\\n    rm -rf /home/ffbo/.cache\n\n# line 222 of process.py is: print(line.rstrip())\n\n#sed -i.bak -e '100,103d' /home/ffbo/miniconda/envs/ffbo/lib/python3.7/site-packages/pyorient/orient.py && \\\n#sed -i.bak -e '31 a\\ \\ \\ \\ \\ \\ \\ \\ self.client.set_session_token(True)' /home/ffbo/miniconda/envs/ffbo/lib/python3.7/site-packages/pyorient/ogm/graph.py && \\\n\nARG FLYBRAINLAB_DOCKER_VER=unknown\n\nRUN /bin/bash -c \". $HOME/miniconda/etc/profile.d/conda.sh && \\\n    conda activate ffbo_legacy && \\\n    cd /home/ffbo/ffbo/ffbo.nlp_component && \\\n    python -m pip install --upgrade git+https://github.com/fruitflybrain/ffbo.neuroarch_nlp.git && \\\n    cd /home/ffbo/ffbo/ffbo.nlp_component && \\\n    git pull && python -m pip install -e . && \\\n    conda deactivate && \\\n    conda activate crossbar && \\\n    cd /home/ffbo/ffbo/ffbo.processor && \\\n    git pull && python -m pip install -e . && \\\n    conda deactivate && \\\n    conda activate ffbo && \\\n    cd /home/ffbo/ffbo/ffbo.neuroarch_component && \\\n    git pull && python -m pip install -e . && \\\n    cd /home/ffbo/ffbo/ffbo.neurokernel_component && \\\n    git pull && python -m pip install -e . && \\\n    python -m pip install --upgrade neuroarch neurokernel neurodriver git+https://github.com/flybrainlab/Neuroballad.git flybrainlab[full] neuromynerva\" && \\\n    cd /home/ffbo/ffbo/Tutorials && git pull && \\\n    rm -rf /home/ffbo/.cache\n\nRUN mkdir -p /home/ffbo/.ffbo/config && \\\n    cp /home/ffbo/ffbo/ffbo.processor/config.ini /home/ffbo/.ffbo/config/ && \\\n    sed -i -e \"11,15d; 26,29d; s+8081+8081+g\" /home/ffbo/.ffbo/config/config.ini && \\\n    git clone https://github.com/FlyBrainLab/run_scripts.git && \\\n    cp -r run_scripts/flybrainlab /home/ffbo/ffbo/bin && \\\n    cd /home/ffbo/ffbo/bin && \\\n    rm update_local_repo.sh && \\\n    sed -i -e \"s+{FFBO_DIR}+/home/ffbo/ffbo+g; s+{FFBO_ENV}+ffbo+g; s+{CROSSBAR_ENV}+crossbar+g; s+\\$(conda info --base)+/home/ffbo/miniconda+g\" run_processor.sh && \\\n    sed -i -e \"s+{FFBO_DIR}+/home/ffbo/ffbo+g; s+{NLP_ENV}+ffbo_legacy+g; s+\\$(conda info --base)+/home/ffbo/miniconda+g\" run_nlp.sh && \\\n    sed -i -e \"s+{FFBO_DIR}+/home/ffbo/ffbo+g; s+{FFBO_ENV}+ffbo+g; s+\\$(conda info --base)+/home/ffbo/miniconda+g\" run_neuroarch.sh && \\\n    sed -i -e \"s+{FFBO_DIR}+/home/ffbo/ffbo+g; s+{FFBO_ENV}+ffbo+g; s+\\$(conda info --base)+/home/ffbo/miniconda+g\" run_neurokernel.sh && \\\n    sed -i -e \"s+{ORIENTDB_ROOT}+/home/ffbo/orientdb+g\" run_database.sh && \\\n    sed -i -e \"s+{FFBO_DIR}+/home/ffbo/ffbo+g; s+{FFBO_ENV}+ffbo+g; s+\\$(conda info --base)+/home/ffbo/miniconda+g\" run_fbl.sh && \\\n    sed -i -e \"s+{FFBO_DIR}+/home/ffbo/ffbo+g; s+{ORIENTDB_ROOT}+/home/ffbo/orientdb+g\" start.sh && \\\n    sed -i -e \"s+{ORIENTDB_ROOT}+/home/ffbo/orientdb+g; s+{ORIENTDB_BINARY_PORT}+2424+g; \" shutdown.sh && \\\n    sed -i -e \"s+{FFBO_DIR}+/home/ffbo/ffbo+g; s+{FFBO_ENV}+ffbo+g; s+{NLP_ENV}+ffbo_legacy+g; s+{CROSSBAR_ENV}+crossbar+g; s+\\$(conda info --base)+/home/ffbo/miniconda+g\" update.sh && \\\n    rm -rf /home/ffbo/run_scripts && \\\n    mkdir -p /home/ffbo/.jupyter/lab/user-settings/@flybrainlab/neuromynerva && \\\n    wget https://raw.githubusercontent.com/FlyBrainLab/NeuroMynerva/master/schema/plugin.json.local -O /home/ffbo/.jupyter/lab/user-settings/@flybrainlab/neuromynerva/plugin.jupyterlab-settings && \\\n    echo \"export ORIENTDB_ROOT_PASSWORD=root\" | tee -a ~/.bashrc && \\\n    echo 'export ORIENTDB_OPTS_MEMORY=\"-Xms1G -Xmx8G\" # increase or decrease Xmx to fit the memory size of your machine' | tee -a ~/.bashrc && \\\n    echo \"export ORIENTDB_SETTINGS=-Dstorage.diskCache.bufferSize=10240 # the amount of memory in MB used for disk cache. This plus Xmx above must be smaller than the total size of memory on your machine.\" | tee -a ~/.bashrc\n\nENV ORIENTDB_ROOT_PASSWORD=root \\\n    ORIENTDB_OPTS_MEMORY=\"-Xms1G -Xmx8G\" \\\n    ORIENTDB_SETTINGS=-Dstorage.diskCache.bufferSize=10240\n\nSHELL [\"/bin/bash\", \"-c\"]\nCMD /home/ffbo/ffbo/bin/download_datasets.sh /home/ffbo/orientdb && /home/ffbo/ffbo/bin/start.sh\n"
}