{
  "startTime": 1674248850988,
  "endTime": 1674248852768,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 86
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 92
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 18,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 55
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 86
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 92
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 55
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 86
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 92
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 18,
        "columnEnd": 38
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 55
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 110
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 116
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 79
      }
    }
  ],
  "repairedDockerfile": "# stage 1 - development container\n# holds the core nvidia libraries but does not container the project source code\n# use this container for development by mapping our source into the image which\n# persists your source code outside of the container lifecycle\n\nFROM nvcr.io/nvidia/tensorrt:20.06-py3 AS base\n\nRUN apt update\nRUN apt install --no-install-recommends -y clang-format libssl-dev openssl libz-dev software-properties-common && rm -rf /var/lib/apt/lists/*;\n\n# remove base cmake\nRUN apt remove --purge -y cmake\nRUN apt autoremove -y\nRUN apt autoclean -y\n\n# install cmake ppa from kitware - https://apt.kitware.com/\nRUN apt install --no-install-recommends -y apt-transport-https ca-certificates gnupg software-properties-common wget && rm -rf /var/lib/apt/lists/*;\nRUN wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null | apt-key add -\nRUN apt-add-repository 'deb https://apt.kitware.com/ubuntu/ bionic main'\nRUN apt update && apt install --no-install-recommends -y cmake && rm -rf /var/lib/apt/lists/*;\n\n# then remove FindGTest.cmake installed by cmake\nRUN find / -name \"FindGTest.cmake\" -exec rm -f {} \\;\n\n# add cufft and nvml to the container image\nRUN apt install --no-install-recommends -y libcufft-dev-11-0 cuda-nvml-dev-11-0 && rm -rf /var/lib/apt/lists/*;\n\n# override some envs\nENV LD_LIBRARY_PATH=/externals/myelin/x86_64/cuda-11.0/lib:/externals/cudnn/x86_64/8.0/cuda-11.0/lib64:/usr/local/cuda-11.0/targets/x86_64-linux/lib\nENV CCACHE_DIR=/tmp/.ccache\nRUN cd /usr/lib/x86_64-linux-gnu && ln -s libnvidia-ml.so.1 libnvidia-ml.so\n\n\n# stage 2: build the project inside the dev container\n\nFROM base AS trtlab\n\nWORKDIR /work\n\nCOPY . .\n\nRUN mkdir build && cd build && cmake .. && make -j\n"
}