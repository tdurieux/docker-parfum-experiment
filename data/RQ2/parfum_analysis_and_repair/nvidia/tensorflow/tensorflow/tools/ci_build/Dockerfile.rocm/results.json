{
  "startTime": 1674251533597,
  "endTime": 1674251534807,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 18,
        "columnEnd": 64
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 52,
        "columnStart": 52,
        "columnEnd": 6
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 58,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 18,
        "columnEnd": 64
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# This Dockerfile provides a starting point for a ROCm installation of\n# MIOpen and tensorflow.\nFROM ubuntu:xenial\nMAINTAINER Jeff Poznanovic <jeffrey.poznanovic@amd.com>\n\nARG DEB_ROCM_REPO=http://repo.radeon.com/rocm/apt/2.6/\nARG ROCM_PATH=/opt/rocm\n\nENV DEBIAN_FRONTEND noninteractive\nENV TF_NEED_ROCM 1\nENV HOME /root/\nRUN apt update && apt install --no-install-recommends -y wget software-properties-common && rm -rf /var/lib/apt/lists/*;\n\n# Add rocm repository\nRUN apt-get clean all\nRUN wget -qO - $DEB_ROCM_REPO/rocm.gpg.key | apt-key add -\nRUN sh -c  \"echo deb [arch=amd64] $DEB_ROCM_REPO xenial main > /etc/apt/sources.list.d/rocm.list\"\n\n# Install misc pkgs\nRUN apt-get update --allow-insecure-repositories && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y \\\n  build-essential \\\n  clang-3.8 \\\n  clang-format-3.8 \\\n  clang-tidy-3.8 \\\n  cmake \\\n  cmake-qt-gui \\\n  ssh \\\n  curl \\\n  apt-utils \\\n  pkg-config \\\n  g++-multilib \\\n  git \\\n  libunwind-dev \\\n  libfftw3-dev \\\n  libelf-dev \\\n  libncurses5-dev \\\n  libpthread-stubs0-dev \\\n  vim \\\n  gfortran \\\n  libboost-program-options-dev \\\n  libssl-dev \\\n  libboost-dev \\\n  libboost-system-dev \\\n  libboost-filesystem-dev \\\n  rpm \\\n  libnuma-dev \\\n  pciutils \\\n  virtualenv \\\n  python-pip \\\n  python3-pip \\\n  libxml2 \\\n  libxml2-dev \\\n  wget && \\\n  apt-get clean && \\\n  rm -rf /var/lib/apt/lists/*\n\n# Install rocm pkgs\nRUN apt-get update --allow-insecure-repositories && \\\n    DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y --allow-unauthenticated \\\n    rocm-dev rocm-libs rocm-utils rocm-cmake \\\n    rocfft miopen-hip miopengemm rocblas hipblas rocrand rccl \\\n    rocm-profiler cxlactivitylogger && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/*\n\nENV HCC_HOME=$ROCM_PATH/hcc\nENV HIP_PATH=$ROCM_PATH/hip\nENV OPENCL_ROOT=$ROCM_PATH/opencl\nENV PATH=\"$HCC_HOME/bin:$HIP_PATH/bin:${PATH}\"\nENV PATH=\"$ROCM_PATH/bin:${PATH}\"\nENV PATH=\"$OPENCL_ROOT/bin:${PATH}\"\n\n# Add target file to help determine which device(s) to build for\nRUN bash -c 'echo -e \"gfx803\\ngfx900\\ngfx906\" >> /opt/rocm/bin/target.lst'\n\n# Copy and run the install scripts.\nCOPY install/*.sh /install/\nARG DEBIAN_FRONTEND=noninteractive\nRUN /install/install_bootstrap_deb_packages.sh\nRUN add-apt-repository -y ppa:openjdk-r/ppa && \\\n    add-apt-repository -y ppa:george-edison55/cmake-3.x\nRUN /install/install_deb_packages.sh\nRUN /install/install_pip_packages.sh\nRUN /install/install_bazel.sh\nRUN /install/install_golang.sh\n\n# Set up the master bazelrc configuration file.\nCOPY install/.bazelrc /etc/bazel.bazelrc\n\n# Configure the build for our ROCm configuration.\nENV TF_NEED_ROCM 1\n\n"
}