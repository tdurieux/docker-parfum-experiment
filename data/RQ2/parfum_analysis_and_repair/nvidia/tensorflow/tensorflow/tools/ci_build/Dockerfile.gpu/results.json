{
  "startTime": 1674252927682,
  "endTime": 1674252928215,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 11,
        "columnEnd": 80
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 11,
        "columnEnd": 80
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 11,
        "columnEnd": 80
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 11,
        "columnEnd": 114
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nvidia/cuda:10.0-cudnn7-devel-ubuntu16.04\n\nLABEL maintainer=\"Jan Prach <jendap@google.com>\"\n\n# In the Ubuntu 16.04 images, cudnn is placed in system paths. Move them to\n# /usr/local/cuda\nRUN cp -P /usr/include/cudnn.h /usr/local/cuda/include\nRUN cp -P /usr/lib/x86_64-linux-gnu/libcudnn* /usr/local/cuda/lib64\n\n# Installs TensorRT, which is not included in NVIDIA Docker containers.\nRUN apt-get update \\\n        && apt-get install -y --no-install-recommends nvinfer-runtime-trt-repo-ubuntu1604-5.0.2-ga-cuda10.0 \\\n        && apt-get update \\\n        && apt-get install -y --no-install-recommends libnvinfer5=5.0.2-1+cuda10.0 libnvinfer-dev=5.0.2-1+cuda10.0 && rm -rf /var/lib/apt/lists/*;\n\n# Copy and run the install scripts.\nCOPY install/*.sh /install/\nARG DEBIAN_FRONTEND=noninteractive\nRUN /install/install_bootstrap_deb_packages.sh\nRUN add-apt-repository -y ppa:openjdk-r/ppa && \\\n    add-apt-repository -y ppa:george-edison55/cmake-3.x\nRUN /install/install_deb_packages.sh\n\nRUN /install/install_pip_packages.sh\nRUN /install/install_bazel.sh\nRUN /install/install_golang.sh\n\n# Set up the master bazelrc configuration file.\nCOPY install/.bazelrc /etc/bazel.bazelrc\nENV LD_LIBRARY_PATH /usr/local/cuda/extras/CUPTI/lib64:$LD_LIBRARY_PATH\n\n# Link NCCL libray and header where the build script expects them.\nRUN mkdir /usr/local/cuda/lib &&  \\\n    ln -s /usr/lib/x86_64-linux-gnu/libnccl.so.2 /usr/local/cuda/lib/libnccl.so.2 && \\\n    ln -s /usr/include/nccl.h /usr/local/cuda/include/nccl.h\n\n# Configure the build for our CUDA configuration.\nENV TF_NEED_CUDA 1\nENV TF_NEED_TENSORRT 1\n"
}