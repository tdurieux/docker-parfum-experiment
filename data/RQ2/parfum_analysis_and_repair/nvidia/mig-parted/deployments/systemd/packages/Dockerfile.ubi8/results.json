{
  "startTime": 1674253026495,
  "endTime": 1674253027493,
  "originalSmells": [
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 28
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright (c) 2021, NVIDIA CORPORATION.  All rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# build go binary\nARG BASE_IMAGE=undefined\nARG GOLANG_VERSION=undefined\nFROM golang:${GOLANG_VERSION} AS go-build\n\nWORKDIR /build\nCOPY . .\nRUN go build -o /artifacts/nvidia-mig-parted ./cmd\n\n# build package\nFROM ${BASE_IMAGE}\nRUN yum install -y rpm-build && rm -rf /var/cache/yum\n\n# envs for packaging\nARG PACKAGE_NAME=undefined\nARG PACKAGE_VERSION=undefined\nARG PACKAGE_REVISION=undefined\nENV PACKAGE_NAME ${PACKAGE_NAME}\nENV PACKAGE_VERSION ${PACKAGE_VERSION}\nENV PACKAGE_REVISION ${PACKAGE_REVISION}\n\n# working directory\nENV PWD=/tmp/${PACKAGE_NAME}-${PACKAGE_VERSION}\nWORKDIR ${PWD}\n\n# specs\nRUN mkdir -p ./SPECS\nCOPY ./deployments/systemd/packages/rpm/SPECS ./SPECS\n\n# sources\nRUN mkdir -p ./SOURCES\nCOPY ./LICENSE ./SOURCES\nCOPY --from=go-build /artifacts/nvidia-mig-parted ./SOURCES\nCOPY ./deployments/systemd ./SOURCES\n\n# envs for rpmbuild\nENV DIST_DIR=${PWD}/SOURCES\n\n# output directory\nRUN mkdir -p /dist\n\n# build command\nCMD arch=$(uname -m) && \\\n    rpmbuild --clean --target=$arch -bb \\\n             -D \"_topdir ${PWD}\" \\\n             -D \"version ${PACKAGE_VERSION}\" \\\n             -D \"revision ${PACKAGE_REVISION}\" \\\n             SPECS/${PACKAGE_NAME}.spec && \\\n    mv RPMS/$arch/*.rpm /dist\n"
}