{
  "startTime": 1674247103219,
  "endTime": 1674247105856,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 22,
        "columnEnd": 61
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 22,
        "columnEnd": 61
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright (c) 2021, NVIDIA CORPORATION.  All rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# build go binary\nARG BASE_IMAGE=undefined\nARG GOLANG_VERSION=undefined\nFROM golang:${GOLANG_VERSION} AS go-build\n\nWORKDIR /build\nCOPY . .\nRUN go build -o /artifacts/nvidia-mig-parted ./cmd\n\n# build package\nFROM ${BASE_IMAGE}\nENV DEBIAN_FRONTEND=noninteractive\nRUN apt-get update && apt-get install --no-install-recommends -y devscripts debhelper && rm -rf /var/lib/apt/lists/*;\n\n# envs for packaging\nARG PACKAGE_NAME=undefined\nARG PACKAGE_VERSION=undefined\nARG PACKAGE_REVISION=undefined\nENV PACKAGE_NAME ${PACKAGE_NAME}\nENV PACKAGE_VERSION ${PACKAGE_VERSION}\nENV PACKAGE_REVISION ${PACKAGE_REVISION}\nENV SECTION \"\"\n\n# working directory\nENV PWD=/tmp/${PACKAGE_NAME}-${PACKAGE_VERSION}\nWORKDIR ${PWD}\n\n# sources\nCOPY ./LICENSE .\nCOPY --from=go-build /artifacts/nvidia-mig-parted .\nCOPY ./deployments/systemd .\nCOPY ./deployments/systemd/packages/debian ./debian\nCOPY ./deployments/systemd/packages/debian/Makefile .\n\n# output directory\nRUN mkdir -p /dist\n\n# Check that the latest changelog entry matches the current version info\nRUN if [ \"${PACKAGE_VERSION}-${PACKAGE_REVISION}\" != \"$(dpkg-parsechangelog --show-field=Version)\" ]; then exit 1; fi\n\n# build command\nCMD export DISTRIB=$(lsb_release -c -s) && \\\n    debuild -eDISTRIB -eSECTION \\\n        --dpkg-buildpackage-hook='sh debian/prepare' -i -us -uc -b && \\\n    mv /tmp/*.deb /dist\n"
}