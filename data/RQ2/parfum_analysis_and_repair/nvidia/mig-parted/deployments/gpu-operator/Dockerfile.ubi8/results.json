{
  "startTime": 1674219258267,
  "endTime": 1674219259673,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 78,
        "columnEnd": 215
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 137,
        "columnEnd": 184
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright (c) 2021-2022, NVIDIA CORPORATION.  All rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nARG BASE_DIST=ubi8\nARG CUDA_VERSION\nARG GOLANG_VERSION=x.x.x\nARG VERSION=\"N/A\"\n\n# NOTE: In cases where the libc version is a concern, we would have to use an\n# image based on the target OS to build the golang executables here -- especially\n# if cgo code is included.\nFROM golang:${GOLANG_VERSION} AS build\n\nSHELL [\"/bin/bash\", \"-c\"]\n\nARG TARGETARCH\nWORKDIR /build\nCOPY . .\nRUN go build -o /artifacts/nvidia-mig-parted ./cmd\nRUN go build -o /artifacts/nvidia-mig-manager ./deployments/gpu-operator/\nRUN cp ./deployments/gpu-operator/reconfigure-mig.sh /artifacts/reconfigure-mig.sh\n\nRUN OS_ARCH=${TARGETARCH/x86_64/amd64} && OS_ARCH=${OS_ARCH/aarch64/arm64} && curl -f -o /artifacts/kubectl -L \"https://dl.k8s.io/release/$( curl -f -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/${OS_ARCH}/kubectl\";\nRUN chmod a+x /artifacts/kubectl\n\nFROM nvidia/cuda:${CUDA_VERSION}-base-${BASE_DIST}\n\nRUN mkdir /licenses && mv /NGC-DL-CONTAINER-LICENSE /licenses/NGC-DL-CONTAINER-LICENSE\nCOPY --from=build /artifacts/nvidia-mig-parted  /usr/bin/nvidia-mig-parted\nCOPY --from=build /artifacts/nvidia-mig-manager /usr/bin/nvidia-mig-manager\nCOPY --from=build /artifacts/reconfigure-mig.sh /usr/bin/reconfigure-mig.sh\nCOPY --from=build /artifacts/kubectl            /usr/bin/kubectl\n\nENV NVIDIA_DISABLE_REQUIRE=\"true\"\nENV NVIDIA_VISIBLE_DEVICES=all\nENV NVIDIA_MIG_CONFIG_DEVICES=all\nENV NVIDIA_DRIVER_CAPABILITIES=utility\n\nLABEL version=\"${VERSION}\"\nLABEL release=\"N/A\"\nLABEL vendor=\"NVIDIA\"\nLABEL io.k8s.display-name=\"NVIDIA MIG Manager for Kubernetes\"\nLABEL name=\"NVIDIA MIG Manager for Kubernetes\"\nLABEL summary=\"NVIDIA MIG Manager for Kubernetes\"\nLABEL description=\"See summary\"\n\n# Install / upgrade packages here that are required to resolve CVEs\nARG CVE_UPDATES\nRUN if [ -n \"${CVE_UPDATES}\" ]; then \\\n        yum update -y ${CVE_UPDATES} && \\\n        rm -rf /var/cache/yum/*; \\\n    fi\n\nENTRYPOINT [\"nvidia-mig-manager\"]\n"
}