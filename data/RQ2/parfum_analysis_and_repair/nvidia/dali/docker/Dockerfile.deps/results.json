{
  "startTime": 1674255778369,
  "endTime": 1674255779165,
  "originalSmells": [
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 72
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 140
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#########################################################################################\n##  Build DALI dependencies on top of manylinux2014\n##  DALI is based on \"manylinux2014\", official page https://github.com/pypa/manylinux\n#########################################################################################\nARG FROM_IMAGE_NAME=quay.io/pypa/manylinux2014_x86_64\nARG BUILDER_EXTRA_DEPS=scratch\nFROM ${BUILDER_EXTRA_DEPS} as extra_deps\nFROM ${FROM_IMAGE_NAME}\n\n# Install yum Dependencies\nRUN yum install -y wget nasm doxygen graphviz gettext xz openssl autogen && rm -rf /var/cache/yum\nENV ACLOCAL_PATH=/usr/share/aclocal/:/usr/local/share/aclocal\n\n# add devtoolset-7 to paths\nENV PATH=/opt/rh/devtoolset-7/root/usr/bin:$PATH \\\n    LD_LIBRARY_PATH=/opt/rh/devtoolset-7/root/usr/lib64:/opt/rh/devtoolset-7/root/usr/lib:/opt/rh/devtoolset-7/root/usr/lib64/dyninst:/opt/rh/devtoolset-7/root/usr/lib/dynin:$LD_LIBRARY_PATH\n\n# CUDA 10 doesn't support gcc > 7 so install 7 and remove other\nRUN yum remove -y devtoolset* && \\\n    yum install -y devtoolset-7 devtoolset-7-libasan-devel devtoolset-7-liblsan-devel devtoolset-7-libtsan-devel devtoolset-7-libubsan-devel && rm -rf /var/cache/yum\n\n# Don't want the short-unicode version for Python 2.7\nRUN rm -f /opt/python/cp27-cp27m\n\n# Clang, build it before deps as deps changes more frequently\nRUN CLANG_VERSION=14.0.2                                                                           && \\\n    cd tmp                                                                                         && \\\n    wget https://github.com/llvm/llvm-project/archive/refs/tags/llvmorg-${CLANG_VERSION}.tar.gz    && \\\n    tar -xf llvmorg-*.tar.gz                                                                       && \\\n    rm -rf llvmorg-*.tar.gz                                                                        && \\\n    cd llvm-*                                                                                      && \\\n    mkdir build                                                                                    && \\\n    cd build                                                                                       && \\\n    cmake -DLLVM_ENABLE_PROJECTS=\"clang;clang-tools-extra\" -DCMAKE_BUILD_TYPE=Release -G \"Unix Makefiles\" ../llvm && \\\n    make -j\"$(grep ^processor /proc/cpuinfo | wc -l)\" install                                      && \\\n    cd /tmp                                                                                        && \\\n    rm -rf llvm-*\n\nCOPY DALI_DEPS_VERSION /tmp\n\nARG DALI_DEPS_REPO\nENV DALI_DEPS_REPO=${DALI_DEPS_REPO:-https://github.com/NVIDIA/DALI_deps}\n\nARG DALI_DEPS_VERSION_SHA\nENV DALI_DEPS_VERSION_SHA=${DALI_DEPS_VERSION_SHA}\n\n# run in /bin/bash to have more advanced features supported like list\nRUN /bin/bash -c 'DALI_DEPS_VERSION_SHA=${DALI_DEPS_VERSION_SHA:-$(cat /tmp/DALI_DEPS_VERSION)}    && \\\n    git clone ${DALI_DEPS_REPO} /tmp/dali_deps                                                     && \\\n    cd /tmp/dali_deps                                                                              && \\\n    git checkout ${DALI_DEPS_VERSION_SHA}                                                          && \\\n    git submodule init                                                                             && \\\n    git submodule update --depth 1 --recursive                                                     && \\\n    export CC_COMP=${CC}                                                                           && \\\n    export CXX_COMP=${CXX}                                                                         && \\\n    /tmp/dali_deps/build_scripts/build_deps.sh && rm -rf /tmp/dali_deps && rm -rf /tmp/DALI_DEPS_VERSION'\n\n# extra deps\nCOPY --from=extra_deps / /\n"
}