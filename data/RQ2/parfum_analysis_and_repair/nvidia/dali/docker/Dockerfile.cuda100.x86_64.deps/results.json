{
  "startTime": 1674218174129,
  "endTime": 1674218174642,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 117
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 136
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 18,
        "columnEnd": 54
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG TOOLKIT_BASE_IMAGE=ubuntu:18.04\nFROM ${TOOLKIT_BASE_IMAGE} as cuda\n\nRUN apt update && apt install --no-install-recommends -y libxml2 curl perl gcc && \\\n    rm -rf /var/lib/apt/lists/*\n\nRUN CUDA_VERSION=10.0 && \\\n    CUDA_BUILD=10.0.130_410.48 && \\\n    curl -f -LO https://developer.nvidia.com/compute/cuda/${CUDA_VERSION}/Prod/local_installers/cuda_${CUDA_BUILD}_linux && \\\n    chmod +x cuda_${CUDA_BUILD}_linux && \\\n    ./cuda_${CUDA_BUILD}_linux --silent --no-opengl-libs --toolkit && \\\n    rm -f cuda_${CUDA_BUILD}_linux; \\\n    # nvJpeg\n    CUDA_VERSION=10.0 && \\\n    CUDA_PATCH=1 && \\\n    CUDA_BUILD=10.0.130.1 && \\\n    curl -f -LO https://developer.download.nvidia.com/compute/cuda/${CUDA_VERSION}/Prod/patches/${CUDA_PATCH}/cuda_${CUDA_BUILD}_linux.run && \\\n    chmod +x cuda_${CUDA_BUILD}_linux.run && \\\n    ./cuda_${CUDA_BUILD}_linux.run --silent --accept-eula && \\\n    rm -f cuda_${CUDA_BUILD}_linux-run; \\\n    # CUDA 10 doesn't have targets so create one to make it compatible with GDS layout\n    mkdir -p /usr/local/cuda/targets/x86_64-linux && \\\n    mv /usr/local/cuda/lib64 /usr/local/cuda/targets/x86_64-linux/lib && \\\n    mv /usr/local/cuda/include /usr/local/cuda/targets/x86_64-linux && \\\n    ln -s targets/x86_64-linux/lib /usr/local/cuda/lib64 && \\\n    ln -s targets/x86_64-linux/include /usr/local/cuda/include\n"
}