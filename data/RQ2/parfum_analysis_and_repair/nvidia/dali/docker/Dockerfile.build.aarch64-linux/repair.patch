diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/nvidia/dali/docker/Dockerfile.build.aarch64-linux b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/nvidia/dali/docker/Dockerfile.build.aarch64-linux/repaired.Dockerfile
index 1690869..279b556 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/nvidia/dali/docker/Dockerfile.build.aarch64-linux
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/nvidia/dali/docker/Dockerfile.build.aarch64-linux/repaired.Dockerfile
@@ -34,26 +34,26 @@ RUN apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/
     apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc && \
     add-apt-repository 'deb http://repo.download.nvidia.com/jetson/x86_64 bionic r32.4' && \
     apt-get update && \
-    apt-get install -y cuda-cudart-cross-aarch64-${CUDA_CROSS_VERSION} \
+    apt-get install --no-install-recommends -y cuda-cudart-cross-aarch64-${CUDA_CROSS_VERSION} \
                        cuda-cufft-cross-aarch64-${CUDA_CROSS_VERSION} \
                        cuda-curand-cross-aarch64-${CUDA_CROSS_VERSION} \
                        cuda-driver-cross-aarch64-${CUDA_CROSS_VERSION} \
                        cuda-misc-headers-cross-aarch64-${CUDA_CROSS_VERSION} \
                        cuda-npp-cross-aarch64-${CUDA_CROSS_VERSION} \
     && \
-    apt-get install -y python3.9 python3.9-dev python3.9-distutils python3.10 python3.10-dev python3.10-distutils && \
+    apt-get install --no-install-recommends -y python3.9 python3.9-dev python3.9-distutils python3.10 python3.10-dev python3.10-distutils && \
     rm -rf /var/lib/apt/lists/* && \
     PYTHON_VER=$(python3 -c "import sys;print(f'{sys.version_info[0]}{sys.version_info[1]}')") && \
     if [ "${PYTHON_VER}" = "36" ]; then \
-        curl -O https://bootstrap.pypa.io/pip/3.6/get-pip.py; \
+        curl -f -O https://bootstrap.pypa.io/pip/3.6/get-pip.py; \
     else \
-        curl -O https://bootstrap.pypa.io/get-pip.py; \
+        curl -f -O https://bootstrap.pypa.io/get-pip.py; \
     fi && python3 get-pip.py && rm get-pip.py && \
     # decouple libclang and clang installation so libclang changes are not overriden by clang
-    pip install clang && pip install libclang && \
+    pip install --no-cache-dir clang && pip install --no-cache-dir libclang && \
     rm -rf /root/.cache/pip/ && \
     cd /tmp && git clone https://github.com/NixOS/patchelf && cd patchelf && \
-    ./bootstrap.sh && ./configure --prefix=/usr/ && make -j install && cd / && rm -rf /tmp/patchelf && \
+    ./bootstrap.sh && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/usr/ && make -j install && cd / && rm -rf /tmp/patchelf && \
     ln -s /usr/bin/python3 /usr/bin/python
 
 ENV PKG_CONFIG_PATH=/usr/aarch64-linux-gnu/lib/pkgconfig
@@ -85,14 +85,14 @@ RUN /bin/bash -c 'DALI_DEPS_VERSION_SHA=${DALI_DEPS_VERSION_SHA:-$(cat /tmp/DALI
 # hack - install cross headers in the default python paths, so host python3-config would point to them
 RUN export PYVERS="3.6.9 3.7.8 3.8.5 3.9.0 3.10.0" && \
     for PYVER in ${PYVERS}; do \
-        cd /tmp && (curl -L https://www.python.org/ftp/python/${PYVER}/Python-${PYVER}.tgz | tar -xzf - || exit 1) && \
-        rm -rf *.tgz && cd Python*                                                                     && \
+        cd /tmp && ( curl -f -L https://www.python.org/ftp/python/${PYVER}/Python-${PYVER}.tgz | tar -xzf - || exit 1) && \
+        rm -rf *.tgz && cd Python* && \
         ./configure --disable-ipv6 ac_cv_file__dev_ptmx=no ac_cv_file__dev_ptc=no \
             --disable-shared CC=aarch64-linux-gnu-gcc CXX=aarch64-linux-gnu-g++ \
-            --build=x86_64-pc-linux-gnu --host=aarch64-linux-gnu --prefix=/usr/                        && \
-        make -j"$(grep ^processor /proc/cpuinfo | wc -l)" inclinstall                                  && \
-        cd / && rm -rf /tmp/Python*;                                                                      \
-    done                                                                                               && \
+            --build=x86_64-pc-linux-gnu --host=aarch64-linux-gnu --prefix=/usr/ && \
+        make -j"$(grep ^processor /proc/cpuinfo | wc -l)" inclinstall && \
+        cd / && rm -rf /tmp/Python*; \
+    done && \
     # hack - patch the host pythonX-config to return --extension-suffix for the target
     find /usr/ -iname x86_64-linux-gnu-python* -exec sed -i "s/\(SO.*\)\(x86_64\)\(.*\)/\1aarch64\3/" {} \;