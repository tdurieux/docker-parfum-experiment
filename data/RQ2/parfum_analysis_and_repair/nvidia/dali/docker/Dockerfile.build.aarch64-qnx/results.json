{
  "startTime": 1674221095972,
  "endTime": 1674221097352,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 8,
        "columnEnd": 61
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 8,
        "columnEnd": 53
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 25,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 6,
        "columnEnd": 54
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG QNX_CUDA_TOOL_IMAGE_NAME\nARG QNX_BASE_IMAGE=nvidia/cuda:10.0-devel-ubuntu18.04\nFROM ${QNX_CUDA_TOOL_IMAGE_NAME} as qnx_cuda_tools\nFROM ${QNX_BASE_IMAGE}\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n    ca-certificates \\\n    curl \\\n    wget \\\n    unzip \\\n    git \\\n    rsync \\\n    dh-autoreconf \\\n    pkg-config \\\n    libtool \\\n    libtool-bin \\\n    autogen \\\n    python3.6 \\\n    python3-distutils \\\n    && rm -rf /var/lib/apt/lists/* && \\\n    ln -s /usr/bin/python3 /usr/bin/python && \\\n    PYTHON_VER=$(python -c \"import sys;print(f'{sys.version_info[0]}{sys.version_info[1]}')\") && \\\n    if [ \"${PYTHON_VER}\" = \"36\" ]; then \\\n        curl -f -O https://bootstrap.pypa.io/pip/3.6/get-pip.py; \\\n    else \\\n        curl -f -O https://bootstrap.pypa.io/get-pip.py; \\\n    fi && python get-pip.py && rm get-pip.py && \\\n    # decouple libclang and clang installation so libclang changes are not overriden by clang\n    pip install --no-cache-dir clang && pip install --no-cache-dir libclang && \\\n    rm -rf /root/.cache/pip/\n\nCOPY --from=qnx_cuda_tools /qnx /qnx\nRUN mv /qnx/cuda* cuda-qnx-cross.deb\n\n# We need to remove QNX's libjpeg.so so OpenCV and DALI do not pick it up over static libjpeg-turbo that we compile\nRUN rsync -a /qnx/host/linux/x86_64/ / && \\\n    mkdir -p /lib64/qnx7/stubs && mv /qnx/lib64/* /lib64/qnx7/stubs && \\\n    mv /qnx/target/qnx7 /usr/aarch64-unknown-nto-qnx && \\\n    rm -rf /usr/aarch64-unknown-nto-qnx/aarch64le/lib/libjpeg.so* && \\\n    rm -rf /usr/aarch64-unknown-nto-qnx/usr/include/j* && \\\n    rm -rf /usr/aarch64-unknown-nto-qnx/armle-v7 /usr/aarch64-unknown-nto-qnx/x86 /usr/aarch64-unknown-nto-qnx/x86_64 && \\\n    rm -rf /qnx && \\\n    rm /usr/bin/python && \\\n    ln -s /usr/bin/python3 /usr/bin/python\n\nENV QNX_HOST=/\nENV QNX_TARGET=/usr/aarch64-unknown-nto-qnx\n\nENV REPO_DEBS=\"cuda-qnx-cross.deb\"\n\nENV CUDA_CROSS_VERSION=10-0\n\nENV CUDA_CROSS_PACKAGES=\"cublas cudart cufft curand cusolver cusparse driver misc-headers npp\"\n\nRUN dpkg -i $REPO_DEBS && \\\n    echo \"for i in \\$CUDA_CROSS_PACKAGES; do echo \\\"cuda-\\$i-cross-qnx-\\${CUDA_CROSS_VERSION}\\\";done\" | bash > /tmp/cuda-packages.txt && \\\n    apt-get update \\\n   && apt-get install --no-install-recommends -y $(cat /tmp/cuda-packages.txt) \\\n   && rm -rf /var/lib/apt/lists/* \\\n   && rm -rf /tmp/cuda-packages.txt\n\nENV PKG_CONFIG_PATH=/usr/aarch64-unknown-nto-qnx/aarch64le/lib/pkgconfig\n\nCOPY DALI_DEPS_VERSION /tmp\n\nARG DALI_DEPS_REPO\nENV DALI_DEPS_REPO=${DALI_DEPS_REPO:-https://github.com/NVIDIA/DALI_deps}\n\nARG DALI_DEPS_VERSION_SHA\nENV DALI_DEPS_VERSION_SHA=${DALI_DEPS_VERSION_SHA}\n\n# run in /bin/bash to have more advanced features supported like list\nRUN /bin/bash -c 'DALI_DEPS_VERSION_SHA=${DALI_DEPS_VERSION_SHA:-$(cat /tmp/DALI_DEPS_VERSION)}    && \\\n    git clone ${DALI_DEPS_REPO} /tmp/dali_deps                                                     && \\\n    cd /tmp/dali_deps                                                                              && \\\n    git checkout ${DALI_DEPS_VERSION_SHA}                                                          && \\\n    git submodule init                                                                             && \\\n    git submodule update --depth 1 --recursive                                                     && \\\n    export CC_COMP=aarch64-unknown-nto-qnx7.0.0-gcc                                                && \\\n    export CXX_COMP=aarch64-unknown-nto-qnx7.0.0-g++                                               && \\\n    export INSTALL_PREFIX=\"/usr/aarch64-unknown-nto-qnx/aarch64le\"                                 && \\\n    export SYSROOT_ARG=\"--with-sysroot=${QNX_TARGET}\"                                              && \\\n    export BUILD_ARCH_OPTION=\"--build=x86_64-linux-gnu \"                                           && \\\n    export HOST_ARCH_OPTION=\"--host=aarch64-unknown-nto-qnx7.0.0\"                                  && \\\n    export CMAKE_TARGET_ARCH=aarch64                                                               && \\\n    export OPENCV_TOOLCHAIN_FILE=\"qnx/aarch64-qnx.toolchain.cmake\"                                 && \\\n    export WITH_FFMPEG=0                                                                           && \\\n    export EXTRA_PROTOBUF_FLAGS=\"-D__EXT_POSIX1_198808 -I$QNX_TARGET/usr/include \\\n                                 -I$QNX_TARGET/usr/include/aarch64 \\\n                                 -I$QNX_TARGET/usr/include/c++/v1 \\\n                                 -L$QNX_TARGET/aarch64le/lib \\\n                                 -D_POSIX_C_SOURCE=200112L \\\n                                 -D_QNX_SOURCE \\\n                                 -D_FILE_OFFSET_BITS=64\"                                           && \\\n    export EXTRA_FLAC_FLAGS=\"-D__DJGPP__\"                                                          && \\\n    export EXTRA_LIBSND_FLAGS=\"-I/usr/aarch64-unknown-nto-qnx/aarch64le/include\"                   && \\\n    /tmp/dali_deps/build_scripts/build_deps.sh && rm -rf /tmp/dali_deps && rm -rf /tmp/DALI_DEPS_VERSION'\n\nVOLUME /dali\n\nWORKDIR /dali\n\nENV PATH=/usr/local/cuda-10.0/bin:$PATH\n\nARG DALI_BUILD_DIR=build_aarch64_qnx\n\nWORKDIR /dali/${DALI_BUILD_DIR}\n\nCMD cmake                \\\n  -DWERROR=ON            \\\n  -DCMAKE_TOOLCHAIN_FILE:STRING=\"$PWD/../platforms/qnx/aarch64-qnx.toolchain.cmake\" \\\n  -DCMAKE_COLOR_MAKEFILE=ON        \\\n  -DCMAKE_INSTALL_PREFIX=./install \\\n  -DARCH=aarch64-qnx               \\\n  -DCMAKE_CUDA_COMPILER=/usr/local/cuda-10.0/bin/nvcc    \\\n  -DCUDA_HOST=/usr/local/cuda-10.0                       \\\n  -DCUDA_TARGET=/usr/local/cuda-10.0/targets/aarch64-qnx \\\n  -DBUILD_TEST=ON        \\\n  -DBUILD_BENCHMARK=OFF  \\\n  -DBUILD_NVTX=OFF       \\\n  -DBUILD_PYTHON=OFF     \\\n  -DBUILD_LMDB=ON        \\\n  -DBUILD_TENSORFLOW=OFF \\\n  -DBUILD_JPEG_TURBO=ON  \\\n  -DBUILD_LIBTIFF=ON     \\\n  -DBUILD_LIBSND=ON      \\\n  -DBUILD_FFTS=ON        \\\n  -DBUILD_NVJPEG=OFF     \\\n  -DBUILD_NVJPEG2K=OFF   \\\n  -DBUILD_NVOF=OFF       \\\n  -DBUILD_NVDEC=OFF      \\\n  -DBUILD_NVML=OFF       \\\n  -DBUILD_CUFILE=OFF     \\\n  -DVERBOSE_LOGS=OFF     \\\n  -DWITH_DYNAMIC_CUDA_TOOLKIT=ON\\\n  .. &&                  \\\n  make install -j\"$(grep ^processor /proc/cpuinfo | wc -l)\"\n"
}