{
  "startTime": 1674256254043,
  "endTime": 1674256255790,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 89
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 2,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 20,
        "columnStart": 2,
        "columnEnd": 18
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 53
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:20.04\n\nRUN apt-get clean && apt-get update &&\\\n  set -eux &&\\\n  apt-get --no-install-recommends -y install \\\n      lsof \\\n      curl \\\n      git \\\n      ca-certificates \\\n      wget \\\n      vim \\\n      python3 \\\n      python3-distutils \\\n      python3-apt \\\n      sysstat \\\n      attr \\\n      net-tools \\\n      iproute2 \\\n      make \\\n      gnupg \\\n      iputils-ping && \\\n  apt-get -y clean all && rm -rf /var/lib/apt/lists/*;\n\nRUN curl -f -sL https://deb.nodesource.com/setup_10.x | bash -\nRUN apt-get install --no-install-recommends -y nodejs && rm -rf /var/lib/apt/lists/*;\n\nRUN wget https://bootstrap.pypa.io/get-pip.py &&\\\n  python3 get-pip.py && \\\n  pip install --no-cache-dir awscli s3cmd\n\n# Setting ENV variables\nENV GOLANG_VERSION 1.18\n\n# Reassign arguments to environment variables so run.sh can use them\nENV GOPATH /go\nENV GOBIN $GOPATH/bin\nENV PATH $GOPATH/bin:/usr/local/go/bin:$PATH\n\n# Installing go\nRUN mkdir -p \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\"\nRUN curl -f -LO https://storage.googleapis.com/golang/go${GOLANG_VERSION}.linux-amd64.tar.gz && \\\n  tar -C /usr/local -xvzf go${GOLANG_VERSION}.linux-amd64.tar.gz > /dev/null 2>&1 && \\\n  rm -rf go${GOLANG_VERSION}.linux-amd64.tar.gz\n\n# Install statsd\nRUN git clone https://github.com/etsy/statsd.git\n\nENV AIS_CONF_DIR /tmp/.conf\nENV AIS_CONF_FILE ${AIS_CONF_DIR}/ais.json\nENV AIS_LOCAL_CONF_FILE ${AIS_CONF_DIR}/ais_local.json\nENV COLLECTD_CONF_FILE ${AIS_CONF_DIR}/collectd.conf\nENV STATSD_CONF_FILE ${AIS_CONF_DIR}/statsd.conf\n\nENV MOUNTPATH /tmp/ais\n\nCOPY aisnode_config.sh aisnode_config.sh\nCOPY entrypoint/entrypoint.sh entrypoint.sh\n\nRUN mkdir -p $GOPATH/src/github.com/NVIDIA && \\\n    cd $GOPATH/src/github.com/NVIDIA && \\\n    git clone https://github.com/NVIDIA/aistore.git && \\\n    cd ${GOPATH}/src/github.com/NVIDIA/aistore && \\\n    AIS_BACKEND_PROVIDERS=\"ais aws azure gcp hdfs\" make node\n\n\nWORKDIR \"${GOPATH}/src/github.com/NVIDIA/aistore\"\n\nEXPOSE 51080 9080 10080\n\nENTRYPOINT [\"sh\", \"-c\", \"/entrypoint.sh\"]\n"
}