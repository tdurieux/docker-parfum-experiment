{
  "startTime": 1674216343755,
  "endTime": 1674216345131,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 89
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 16,
        "columnStart": 2,
        "columnEnd": 18
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:18.04\n\nARG MODE\nRUN apt-get clean && apt-get update &&\\\n  set -eux &&\\\n  apt-get --no-install-recommends -y install \\\n      curl \\\n      git \\\n      ca-certificates \\\n      wget \\\n      vim \\\n      sysstat \\\n      attr \\\n      net-tools \\\n      iproute2 \\\n      make \\\n      iputils-ping && \\\n  apt-get -y clean all && rm -rf /var/lib/apt/lists/*;\n\n# Setting ENV variables\nENV GOLANG_VERSION 1.18\nCOPY deploy/dev/local/aisnode_config.sh /etc/ais/aisnode_config.sh\n\n# Reassign arguments to environment variables so run.sh can use them\nENV GOPATH /go\nENV GOBIN $GOPATH/bin\nENV PATH $GOPATH/bin:/usr/local/go/bin:$PATH\nENV WORKDIR $GOPATH/src/github.com/NVIDIA/aistore\n\nRUN mkdir -p /etc/ais\nRUN mkdir /usr/nvidia\nRUN mkdir -p $GOPATH/src/github.com/NVIDIA\n\n# Installing go\nRUN mkdir -p \"$GOPATH/bin\"\nRUN chmod -R 777 \"$GOPATH\"\nRUN curl -f -LO https://storage.googleapis.com/golang/go${GOLANG_VERSION}.linux-amd64.tar.gz && \\\n  tar -C /usr/local -xvzf go${GOLANG_VERSION}.linux-amd64.tar.gz > /dev/null 2>&1 && \\\n  rm -rf go${GOLANG_VERSION}.linux-amd64.tar.gz\n\nCOPY . $GOPATH/src/github.com/NVIDIA/aistore/\nWORKDIR $GOPATH/src/github.com/NVIDIA/aistore\n\n# Build it here so it is not done multiple times on each proxy/target: less\n# downloading and less time spent on everything.\n# TODO: maybe we can do it more elegantly?...\nRUN echo \"MODE: ${MODE}\" && CGO_ENABLED=0 AIS_BACKEND_PROVIDERS=\"ais aws azure gcp hdfs\" MODE=\"${MODE}\" make node\n\nEXPOSE 8080\n\n"
}