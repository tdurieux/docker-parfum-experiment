diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/nvidia/spark-rapids-examples/examples/UDF-Examples/RAPIDS-accelerated-UDFs/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/nvidia/spark-rapids-examples/examples/UDF-Examples/RAPIDS-accelerated-UDFs/Dockerfile/repaired.Dockerfile
index 6e83e42..06fb1f7 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/nvidia/spark-rapids-examples/examples/UDF-Examples/RAPIDS-accelerated-UDFs/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/nvidia/spark-rapids-examples/examples/UDF-Examples/RAPIDS-accelerated-UDFs/Dockerfile/repaired.Dockerfile
@@ -34,12 +34,12 @@ CUDA_VERSION_MINOR=$(echo $CUDA_VERSION | tr -d '.' | cut -c 3); \
   else echo "10"; \
   fi') \
 && apt update -y \
-&& apt install -y software-properties-common \
+&& apt install --no-install-recommends -y software-properties-common \
 && add-apt-repository -y ppa:git-core/ppa \
 && add-apt-repository -y ppa:ubuntu-toolchain-r/test \
 && add-apt-repository ppa:deadsnakes/ppa \
 && apt update -y \
-&& apt install -y \
+&& apt install --no-install-recommends -y \
    build-essential git rsync wget \
    gcc-${GCC_VERSION} g++-${GCC_VERSION} \
    openjdk-8-jdk maven tzdata \
@@ -52,9 +52,9 @@ CUDA_VERSION_MINOR=$(echo $CUDA_VERSION | tr -d '.' | cut -c 3); \
 && update-alternatives \
    --install /usr/bin/g++ g++ /usr/bin/g++-${GCC_VERSION} 100 \
 # Set gcc-${GCC_VERSION} as the default gcc
-&& update-alternatives --set gcc /usr/bin/gcc-${GCC_VERSION}  \
+&& update-alternatives --set gcc /usr/bin/gcc-${GCC_VERSION} \
 # Set gcc-${GCC_VERSION} as the default g++
-&& update-alternatives --set g++ /usr/bin/g++-${GCC_VERSION}  \
+&& update-alternatives --set g++ /usr/bin/g++-${GCC_VERSION} \
 # Set JDK8 as the default Java
 && update-alternatives --set java /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
 
@@ -68,5 +68,5 @@ RUN cd /tmp \
     --system-curl \
     --parallel=${PARALLEL_LEVEL} \
  && make install -j${PARALLEL_LEVEL} \
- && cd /tmp && rm -rf /tmp/cmake-$CMAKE_VERSION*
+ && cd /tmp && rm -rf /tmp/cmake-$CMAKE_VERSION* && rm /tmp/cmake-$CMAKE_VERSION.tar.gz