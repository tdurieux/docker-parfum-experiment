{
  "startTime": 1674217765727,
  "endTime": 1674217766855,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 7,
        "columnEnd": 102
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 113
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 27,
        "columnStart": 7,
        "columnEnd": 16
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright (c) 2019, NVIDIA CORPORATION. All rights reserved.\n\nARG DOCKER_REPO=nvcr.io/nvidia/cuda\nARG CUDA_VERSION=11.2.2\nARG OS_FLAVOR=devel-ubuntu20.04\nFROM ${DOCKER_REPO}:${CUDA_VERSION}-${OS_FLAVOR}\n\nENV PYTHONDONTWRITEBYTECODE=true\nENV PATH=${PATH}:/conda/bin\n\n# Installing base software\n\nARG TINI_VERSION=v0.18.0\n\nRUN DEBIAN_FRONTEND=noninteractive apt-get update -y --fix-missing \\\n    && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \\\n      apt-utils \\\n    && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y \\\n      curl \\\n      font-manager \\\n      graphviz \\\n      git \\\n      gcc \\\n      g++ \\\n      npm \\\n      screen \\\n      tzdata \\\n      zlib1g-dev \\\n    && rm -rf /var/lib/apt/lists/* /var/cache/apt/archives/* \\\n    && curl -f https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini -L -o /usr/bin/tini \\\n    && chmod +x /usr/bin/tini\n\n# Create Base environment\n\nARG STACK_VERSION=2.9.0\nARG CONDA_VERSION=4.8.3\nARG NOTEBOOKS_VERSION=21.06\n\nENV CONDA_ROOT=/conda\nENV NOTEBOOKS_DIR=/notebooks\n\nRUN curl -f https://repo.anaconda.com/miniconda/Miniconda3-py37_${CONDA_VERSION}-Linux-x86_64.sh -k -o /miniconda.sh \\\n    && sh /miniconda.sh -b -p ${CONDA_ROOT} \\\n    && rm -f /miniconda.sh \\\n    && echo \"conda ${CONDA_VERSION}\" >> /conda/conda-meta/pinned \\\n    && ${CONDA_ROOT}/bin/conda init bash \\\n    && echo \"#!/bin/bash\\n\\\n      source /conda/bin/activate data-science-stack-${STACK_VERSION}\\n\\\n      jupyter-lab --allow-root --ip=0.0.0.0 --no-browser --NotebookApp.token='' --notebook-dir=${NOTEBOOKS_DIR}\" > /run-jupyter \\\n    && chmod 755 /run-jupyter \\\n    && mkdir -p ${NOTEBOOKS_DIR} \\\n    && cd ${NOTEBOOKS_DIR} \\\n    && git clone --single-branch --depth 1 --branch branch-${NOTEBOOKS_VERSION} \\\n      https://github.com/rapidsai/notebooks.git \\\n    && cd notebooks \\\n    && git submodule update --init --remote \\\n    && rm -rf .git \\\n    && rm -rf `find repos/ -maxdepth 2 -mindepth 2 | grep -v notebooks`\n\n# Create Conda environment\n\nCOPY environment-pinned.yaml /\n\nRUN ${CONDA_ROOT}/bin/conda env create -n data-science-stack-${STACK_VERSION} \\\n       -f /environment-pinned.yaml \\\n    && echo \"conda activate data-science-stack-${STACK_VERSION}\" >> ${HOME}/.bashrc \\\n    && bash -c 'source ${CONDA_ROOT}/bin/activate data-science-stack-${STACK_VERSION} ; \\\n      jupyter labextension install -y --clean \\\n        @jupyter-widgets/jupyterlab-manager \\\n        jupyter-threejs \\\n        dask-labextension' \\\n    && ${CONDA_ROOT}/bin/conda clean -afy \\\n    && find ${CONDA_ROOT} -follow -type f -name '*.pyc' -delete \\\n    && find ${CONDA_ROOT} -follow -type f -name '*.js.map' -delete\n\nCOPY data-science-stack.Dockerfile README.md /\n\n# Jupyter notebook\nEXPOSE 8888\n# Dask Scheduler & Bokeh ports\nEXPOSE 8787\nEXPOSE 8786\n\nWORKDIR ${NOTEBOOKS_DIR}\nSHELL [\"/bin/bash\", \"-c\"]\nENTRYPOINT [ \"/usr/bin/tini\", \"--\" ]\nCMD [\"/run-jupyter\" ]\n"
}