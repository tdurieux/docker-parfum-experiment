{
  "startTime": 1674251950860,
  "endTime": 1674251951305,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 27
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG BASEIMAGE\nFROM ${BASEIMAGE}\n\nENV DEBIAN_FRONTEND=noninteractive\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n        wget \\\n        ca-certificates \\\n        git \\\n        build-essential \\\n        dh-make \\\n        fakeroot \\\n        devscripts \\\n        lsb-release && \\\n    rm -rf /var/lib/apt/lists/*\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y curl && \\\n    rm -rf /var/lib/apt/lists/*\n\n# packaging\nARG PKG_NAME\nARG PKG_VERS\nARG PKG_REV\nARG TOOLKIT_VERSION\n\nENV DEBFULLNAME \"NVIDIA CORPORATION\"\nENV DEBEMAIL \"cudatools@nvidia.com\"\nENV PKG_NAME \"${PKG_NAME}\"\nENV REVISION \"$PKG_VERS-$PKG_REV\"\nENV TOOLKIT_VERSION $TOOLKIT_VERSION\nENV SECTION \"\"\n\n# output directory\nENV DIST_DIR=/tmp/${PKG_NAME}-$PKG_VERS\nRUN mkdir -p $DIST_DIR /dist\n\nWORKDIR $DIST_DIR\nCOPY debian ./debian\n\nRUN sed -i \"s;@TOOLKIT_VERSION@;${TOOLKIT_VERSION};\" debian/control && \\\n    dch --create --package=\"${PKG_NAME}\" \\\n        --newversion \"${REVISION}\" \\\n            \"Bump nvidia-container-toolkit dependency to ${TOOLKIT_VERSION}\" && \\\n    dch -r \"\" && \\\n    if [ \"$REVISION\" != \"$(dpkg-parsechangelog --show-field=Version)\" ]; then exit 1; fi\n\nCMD export DISTRIB=\"$(lsb_release -cs)\" && \\\n    debuild -eREVISION -eDISTRIB -eSECTION --dpkg-buildpackage-hook='sh debian/prepare' -i -us -uc -b && \\\n    mv /tmp/*.deb /dist\n"
}