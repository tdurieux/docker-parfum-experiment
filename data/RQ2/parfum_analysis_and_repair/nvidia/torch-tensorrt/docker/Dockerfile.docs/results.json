{
  "startTime": 1674248601835,
  "endTime": 1674248602434,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 22,
        "columnEnd": 89
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 22,
        "columnEnd": 71
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 22,
        "columnEnd": 89
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 22,
        "columnEnd": 71
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nvcr.io/nvidia/tensorrt:22.01-py3\n\nRUN curl -f https://bazel.build/bazel-release.pub.gpg | apt-key add -\nRUN echo \"deb [arch=amd64] https://storage.googleapis.com/bazel-apt stable jdk1.8\" | tee /etc/apt/sources.list.d/bazel.list\n\nRUN apt-get update && apt-get install --no-install-recommends -y bazel-5.1.1 clang-format-9 libjpeg9 libjpeg9-dev && rm -rf /var/lib/apt/lists/*;\nRUN ln -s /usr/bin/bazel-5.1.1 /usr/bin/bazel\nRUN ln -s $(which clang-format-9) /usr/bin/clang-format\n\n# Workaround for bazel expecting both static and shared versions, we only use shared libraries inside container\nRUN cp /usr/lib/x86_64-linux-gnu/libnvinfer.so /usr/lib/x86_64-linux-gnu/libnvinfer_static.a\n\nRUN python3 -m pip install --upgrade pip\nCOPY ./py/requirements.txt requirements.txt\nRUN pip3 install --no-cache-dir -r requirements.txt\n\n# Locale is not set by default\nRUN apt-get update && apt install --no-install-recommends -y locales ninja-build doxygen pandoc && locale-gen en_US.UTF-8 && rm -rf /var/lib/apt/lists/*;\nENV LANG en_US.UTF-8\nENV LANGUAGE en_US:en\nENV LC_ALL en_US.UTF-8\n\nCOPY ./docsrc/requirements.txt requirements.txt\nRUN pip3 install --no-cache-dir -r requirements.txt\nRUN rm requirements.txt\n\nRUN rm -rf /workspace\nWORKDIR /\n"
}