diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/nvidia/deepops/workloads/examples/k8s/roce/Dockerfile.roce b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/nvidia/deepops/workloads/examples/k8s/roce/Dockerfile.roce/repaired.Dockerfile
index e29ca74..94c45ac 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/nvidia/deepops/workloads/examples/k8s/roce/Dockerfile.roce
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/nvidia/deepops/workloads/examples/k8s/roce/Dockerfile.roce/repaired.Dockerfile
@@ -53,23 +53,23 @@ RUN apt-get update && apt-get install -y --allow-downgrades --allow-change-held-
         python${PYTHON_VERSION}-distutils \
         librdmacm1 \
         libibverbs1 \
-        ibverbs-providers 
+        ibverbs-providers && rm -rf /var/lib/apt/lists/*;
 
 RUN ln -s /usr/bin/python${PYTHON_VERSION} /usr/bin/python
 RUN rm /usr/bin/python3 && ln -s python3.8 /usr/bin/python3
-RUN curl -O https://bootstrap.pypa.io/get-pip.py && \
+RUN curl -f -O https://bootstrap.pypa.io/get-pip.py && \
     python get-pip.py && \
     rm get-pip.py
 
 # Install TensorFlow, Keras, PyTorch and MXNet
-RUN pip install future typing packaging
-RUN pip install --upgrade pip
-RUN pip install tensorflow==${TENSORFLOW_VERSION} keras h5py
+RUN pip install --no-cache-dir future typing packaging
+RUN pip install --no-cache-dir --upgrade pip
+RUN pip install --no-cache-dir tensorflow==${TENSORFLOW_VERSION} keras h5py
 
 RUN PYTAGS=$(python -c "from packaging import tags; tag = list(tags.sys_tags())[0]; print(f'{tag.interpreter}-{tag.abi}')") && \
-    pip install https://download.pytorch.org/whl/cu101/torch-${PYTORCH_VERSION}%2Bcu101-${PYTAGS}-linux_x86_64.whl \
+    pip install --no-cache-dir https://download.pytorch.org/whl/cu101/torch-${PYTORCH_VERSION}%2Bcu101-${PYTAGS}-linux_x86_64.whl \
         https://download.pytorch.org/whl/cu101/torchvision-${TORCHVISION_VERSION}%2Bcu101-${PYTAGS}-linux_x86_64.whl
-RUN pip install mxnet-cu101==${MXNET_VERSION}
+RUN pip install --no-cache-dir mxnet-cu101==${MXNET_VERSION}
 
 # Install Open MPI
 RUN mkdir /tmp/openmpi && \
@@ -77,32 +77,32 @@ RUN mkdir /tmp/openmpi && \
     wget https://www.open-mpi.org/software/ompi/v4.1/downloads/openmpi-4.1.0.tar.gz && \
     tar zxf openmpi-4.1.0.tar.gz && \
     cd openmpi-4.1.0 && \
-    ./configure --enable-orterun-prefix-by-default && \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --enable-orterun-prefix-by-default && \
     make -j $(nproc) all && \
     make install && \
     ldconfig && \
-    rm -rf /tmp/openmpi
+    rm -rf /tmp/openmpi && rm openmpi-4.1.0.tar.gz
 
 # Install Horovod
-RUN HOROVOD_GPU_OPERATIONS=NCCL pip install horovod
+RUN HOROVOD_GPU_OPERATIONS=NCCL pip --no-cache-dir install horovod
 
 ## Install Mellano OFED
 ENV MOFED_DIR MLNX_OFED_LINUX-5.2-2.2.0.0-ubuntu20.04-x86_64
 ENV MOFED_SITE_PLACE MLNX_OFED-5.2-2.2.0.0
 ENV MOFED_IMAGE MLNX_OFED_LINUX-5.2-2.2.0.0-ubuntu20.04-x86_64.tgz
 
-RUN apt-get update && apt-get install -y lsb-core
-RUN wget http://content.mellanox.com/ofed/${MOFED_SITE_PLACE}/${MOFED_IMAGE} && \
+RUN apt-get update && apt-get install --no-install-recommends -y lsb-core && rm -rf /var/lib/apt/lists/*;
+RUN wget https://content.mellanox.com/ofed/${MOFED_SITE_PLACE}/${MOFED_IMAGE} && \
     tar -xzvf ${MOFED_IMAGE} && \
     ${MOFED_DIR}/mlnxofedinstall --user-space-only --without-fw-update -q --force && \
     cd .. && \
     rm -rf ${MOFED_DIR} && \
     rm -rf *.tgz
-RUN apt-get install dkms -y
+RUN apt-get install --no-install-recommends dkms -y && rm -rf /var/lib/apt/lists/*;
 
 # Install OpenSSH for MPI to communicate between containers
 RUN apt-get install -y --no-install-recommends openssh-client openssh-server && \
-    mkdir -p /var/run/sshd
+    mkdir -p /var/run/sshd && rm -rf /var/lib/apt/lists/*;
 
 RUN cat /etc/ssh/ssh_config | grep -v StrictHostKeyChecking > /etc/ssh/ssh_config.new && \
     echo "    StrictHostKeyChecking no" >> /etc/ssh/ssh_config.new && \
@@ -111,7 +111,7 @@ RUN cat /etc/ssh/ssh_config | grep -v StrictHostKeyChecking > /etc/ssh/ssh_confi
 # Download examples
 RUN apt-get install -y --no-install-recommends subversion && \
     svn checkout https://github.com/horovod/horovod/trunk/examples && \
-    rm -rf /examples/.svn
+    rm -rf /examples/.svn && rm -rf /var/lib/apt/lists/*;
 
 # Install NCCL-Test step ------------------------------------------------------
 WORKDIR /nccl_tests