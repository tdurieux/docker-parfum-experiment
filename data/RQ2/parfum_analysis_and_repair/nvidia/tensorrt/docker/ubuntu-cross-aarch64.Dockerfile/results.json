{
  "startTime": 1674248940823,
  "endTime": 1674248941669,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 22,
        "columnEnd": 67
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 7,
        "columnEnd": 44
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 22,
        "columnEnd": 67
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 36,
        "lineEnd": 51,
        "columnStart": 22,
        "columnEnd": 19
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# SPDX-FileCopyrightText: Copyright (c) 1993-2022 NVIDIA CORPORATION & AFFILIATES. All rights reserved.\n# SPDX-License-Identifier: Apache-2.0\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n# http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\nARG CUDA_VERSION=11.4.2\nARG OS_VERSION=20.04\n\nFROM nvidia/cuda:${CUDA_VERSION}-devel-ubuntu${OS_VERSION}\nLABEL maintainer=\"NVIDIA CORPORATION\"\n\nENV TRT_VERSION 8.4.1.5\nENV DEBIAN_FRONTEND=noninteractive\n\nARG uid=1000\nARG gid=1000\nRUN groupadd -r -f -g ${gid} trtuser && useradd -o -r -l -u ${uid} -g ${gid} -ms /bin/bash trtuser\nRUN usermod -aG sudo trtuser\nRUN echo 'trtuser:nvidia' | chpasswd\nRUN mkdir -p /workspace && chown trtuser /workspace\n\n# Install requried libraries\nRUN apt-get update && apt-get install --no-install-recommends -y software-properties-common && rm -rf /var/lib/apt/lists/*;\nRUN add-apt-repository ppa:ubuntu-toolchain-r/test\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n    libcurl4-openssl-dev \\\n    wget \\\n    git \\\n    pkg-config \\\n    python3 \\\n    python3-pip \\\n    python3-dev \\\n    python3-wheel \\\n    sudo \\\n    ssh \\\n    pbzip2 \\\n    pv \\\n    bzip2 \\\n    unzip \\\n    build-essential && rm -rf /var/lib/apt/lists/*;\n\nRUN cd /usr/local/bin &&\\\n    ln -s /usr/bin/python3 python &&\\\n    ln -s /usr/bin/pip3 pip\nRUN pip3 install --no-cache-dir --upgrade pip\nRUN pip3 install --no-cache-dir setuptools >=41.0.0\n\n# Install Cmake\nRUN cd /tmp && \\\n    wget https://github.com/Kitware/CMake/releases/download/v3.14.4/cmake-3.14.4-Linux-x86_64.sh && \\\n    chmod +x cmake-3.14.4-Linux-x86_64.sh && \\\n    ./cmake-3.14.4-Linux-x86_64.sh --prefix=/usr/local --exclude-subdir --skip-license && \\\n    rm ./cmake-3.14.4-Linux-x86_64.sh\n\n# Skip installing PyPI packages and NGC client on cross-build container\n\nCOPY docker/jetpack_files /pdk_files\nCOPY scripts/stubify.sh /pdk_files\n\n# Update CUDA signing keys\nRUN apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/3bf863cc.pub\nRUN apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/7fa2af80.pub\n\n# Install CUDA cross compile toolchain\nRUN dpkg -i /pdk_files/cuda-repo-cross-aarch64*.deb /pdk_files/cuda-repo-ubuntu*_amd64.deb \\\n    && apt-get update \\\n    && apt-get install --no-install-recommends -y cuda-cross-aarch64 \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Unpack cudnn\nRUN  dpkg -x /pdk_files/cudnn-local-repo*.deb /pdk_files/cudnn_extract \\\n    && dpkg -x /pdk_files/cudnn_extract/var/cudnn-local-repo*/libcudnn[7-8]_*-1+cuda11.[0-9]_arm64.deb /pdk_files/cudnn \\\n    && dpkg -x /pdk_files/cudnn_extract/var/cudnn-local-repo*/libcudnn[7-8]-dev_*-1+cuda11.[0-9]_arm64.deb /pdk_files/cudnn \\\n    && cd /pdk_files/cudnn/usr/lib/aarch64-linux-gnu \\\n    && cd /pdk_files/cudnn \\\n    && ln -s usr/include/aarch64-linux-gnu include \\\n    && ln -s usr/lib/aarch64-linux-gnu lib \\\n    && ln -s /pdk_files/cudnn/usr/include/aarch64-linux-gnu/cudnn_adv_infer_v[7-9].h /usr/include/cudnn_adv_infer.h \\\n    && ln -s /pdk_files/cudnn/usr/include/aarch64-linux-gnu/cudnn_adv_train_v[7-9].h /usr/include/cudnn_adv_train.h \\\n    && ln -s /pdk_files/cudnn/usr/include/aarch64-linux-gnu/cudnn_backend_v[7-9].h /usr/include/cudnn_backend.h \\\n    && ln -s /pdk_files/cudnn/usr/include/aarch64-linux-gnu/cudnn_cnn_infer_v[7-9].h /usr/include/cudnn_cnn_infer.h \\\n    && ln -s /pdk_files/cudnn/usr/include/aarch64-linux-gnu/cudnn_cnn_train_v[7-9].h /usr/include/cudnn_cnn_train.h \\\n    && ln -s /pdk_files/cudnn/usr/include/aarch64-linux-gnu/cudnn_ops_infer_v[7-9].h /usr/include/cudnn_ops_infer.h \\\n    && ln -s /pdk_files/cudnn/usr/include/aarch64-linux-gnu/cudnn_ops_train_v[7-9].h /usr/include/cudnn_ops_train.h \\\n    && ln -s /pdk_files/cudnn/usr/include/aarch64-linux-gnu/cudnn_v[7-9].h /usr/include/cudnn.h \\\n    && ln -s /pdk_files/cudnn/usr/include/aarch64-linux-gnu/cudnn_version_v[7-9].h /usr/include/cudnn_version.h\n\n# Unpack libnvinfer\nRUN dpkg -x /pdk_files/libnvinfer[0-8]_*-1+cuda11.[0-9]_arm64.deb /pdk_files/tensorrt \\\n    && dpkg -x /pdk_files/libnvinfer-dev_*-1+cuda11.[0-9]_arm64.deb /pdk_files/tensorrt \\\n    && dpkg -x /pdk_files/libnvparsers[6-8]_*-1+cuda11.[0-9]_arm64.deb /pdk_files/tensorrt \\\n    && dpkg -x /pdk_files/libnvparsers-dev_*-1+cuda11.[0-9]_arm64.deb /pdk_files/tensorrt \\\n    && dpkg -x /pdk_files/libnvinfer-plugin[6-8]_*-1+cuda11.[0-9]_arm64.deb /pdk_files/tensorrt \\\n    && dpkg -x /pdk_files/libnvinfer-plugin-dev_*-1+cuda11.[0-9]_arm64.deb /pdk_files/tensorrt \\\n    && dpkg -x /pdk_files/libnvonnxparsers[6-8]_*-1+cuda11.[0-9]_arm64.deb /pdk_files/tensorrt \\\n    && dpkg -x /pdk_files/libnvonnxparsers-dev_*-1+cuda11.[0-9]_arm64.deb /pdk_files/tensorrt\n\n# Clean up debs\nRUN rm -rf /pdk_files/*.deb\n\n# create stub libraries\nRUN cd /pdk_files/tensorrt \\\n    && ln -s usr/include/aarch64-linux-gnu include \\\n    && ln -s usr/lib/aarch64-linux-gnu lib \\\n    && cd lib \\\n    && mkdir stubs \\\n    && for x in nvinfer nvparsers nvinfer_plugin nvonnxparser; \\\n       do                                                     \\\n            CC=aarch64-linux-gnu-gcc /pdk_files/stubify.sh lib${x}.so stubs/lib${x}.so \\\n       ; done\n\n# Set environment and working directory\nENV TRT_LIBPATH /pdk_files/tensorrt/lib\nENV TRT_OSSPATH /workspace/TensorRT\nWORKDIR /workspace\n\nUSER trtuser\nRUN [\"/bin/bash\"]\n"
}