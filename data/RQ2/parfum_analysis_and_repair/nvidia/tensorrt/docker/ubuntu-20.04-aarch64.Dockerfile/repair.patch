diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/nvidia/tensorrt/docker/ubuntu-20.04-aarch64.Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/nvidia/tensorrt/docker/ubuntu-20.04-aarch64.Dockerfile/repaired.Dockerfile
index 0db041d..0b5b6fe 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/nvidia/tensorrt/docker/ubuntu-20.04-aarch64.Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/nvidia/tensorrt/docker/ubuntu-20.04-aarch64.Dockerfile/repaired.Dockerfile
@@ -36,7 +36,7 @@ ENV DEBIAN_FRONTEND=noninteractive
 RUN apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/sbsa/3bf863cc.pub
 
 # Install requried libraries
-RUN apt-get update && apt-get install -y software-properties-common
+RUN apt-get update && apt-get install --no-install-recommends -y software-properties-common && rm -rf /var/lib/apt/lists/*;
 RUN add-apt-repository ppa:ubuntu-toolchain-r/test
 RUN apt-get update && apt-get install -y --no-install-recommends \
     libcurl4-openssl-dev \
@@ -54,7 +54,7 @@ RUN apt-get update && apt-get install -y --no-install-recommends \
     lintian \
     fakeroot \
     dh-make \
-    build-essential
+    build-essential && rm -rf /var/lib/apt/lists/*;
 
 # Install python3
 RUN apt-get install -y --no-install-recommends \
@@ -64,15 +64,15 @@ RUN apt-get install -y --no-install-recommends \
       python3-wheel &&\
     cd /usr/local/bin &&\
     ln -s /usr/bin/python3 python &&\
-    ln -s /usr/bin/pip3 pip;
+    ln -s /usr/bin/pip3 pip; rm -rf /var/lib/apt/lists/*;
 
 # Install TensorRT. This will also pull in CUDNN
 RUN v="${TRT_VERSION%.*}-1+cuda${CUDA_VERSION%.*}" &&\
     apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/sbsa/3bf863cc.pub &&\
-    apt-get update &&\
-    sudo apt-get -y install libnvinfer8=${v} libnvonnxparsers8=${v} libnvparsers8=${v} libnvinfer-plugin8=${v} \
+    apt-get update && \
+    sudo apt-get -y --no-install-recommends install libnvinfer8=${v} libnvonnxparsers8=${v} libnvparsers8=${v} libnvinfer-plugin8=${v} \
         libnvinfer-dev=${v} libnvonnxparsers-dev=${v} libnvparsers-dev=${v} libnvinfer-plugin-dev=${v} \
-        python3-libnvinfer=${v};
+        python3-libnvinfer=${v}; rm -rf /var/lib/apt/lists/*;
 
 # Install Cmake
 RUN cd /tmp && \
@@ -82,13 +82,13 @@ RUN cd /tmp && \
     rm ./cmake-3.21.4-linux-aarch64.sh
 
 # Install PyPI packages
-RUN pip3 install --upgrade pip
-RUN pip3 install setuptools>=41.0.0
+RUN pip3 install --no-cache-dir --upgrade pip
+RUN pip3 install --no-cache-dir setuptools >=41.0.0
 COPY requirements.txt /tmp/requirements.txt
-RUN pip3 install -r /tmp/requirements.txt
-RUN pip3 install jupyter jupyterlab
+RUN pip3 install --no-cache-dir -r /tmp/requirements.txt
+RUN pip3 install --no-cache-dir jupyter jupyterlab
 # Workaround to remove numpy installed with tensorflow
-RUN pip3 install --upgrade numpy
+RUN pip3 install --no-cache-dir --upgrade numpy
 
 # Download NGC client
 RUN cd /usr/local/bin && wget https://ngc.nvidia.com/downloads/ngccli_arm64.zip && unzip ngccli_arm64.zip && chmod u+x ngc-cli/ngc && rm ngccli_arm64.zip ngc-cli.md5 && echo "no-apikey\nascii\n" | ngc-cli/ngc config set