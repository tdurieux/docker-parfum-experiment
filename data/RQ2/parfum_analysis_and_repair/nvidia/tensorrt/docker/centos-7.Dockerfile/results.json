{
  "startTime": 1674250862624,
  "endTime": 1674250863460,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 73,
        "lineEnd": 73,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 36,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 8
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 54,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 60,
        "lineEnd": 62,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 31
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# SPDX-FileCopyrightText: Copyright (c) 1993-2022 NVIDIA CORPORATION & AFFILIATES. All rights reserved.\n# SPDX-License-Identifier: Apache-2.0\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n# http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\nARG CUDA_VERSION=11.6.2\nARG OS_VERSION=7\n\nFROM nvidia/cuda:${CUDA_VERSION}-cudnn8-devel-centos${OS_VERSION}\nLABEL maintainer=\"NVIDIA CORPORATION\"\n\nENV TRT_VERSION 8.4.1.5\nSHELL [\"/bin/bash\", \"-c\"]\n\n# Setup user account\nARG uid=1000\nARG gid=1000\nRUN groupadd -r -f -g ${gid} trtuser && useradd -o -r -l -u ${uid} -g ${gid} -ms /bin/bash trtuser\nRUN usermod -aG wheel trtuser\nRUN echo 'trtuser:nvidia' | chpasswd\nRUN mkdir -p /workspace && chown trtuser /workspace\n\n# Install requried packages\nRUN yum -y groupinstall \"Development Tools\"\nRUN yum -y install \\\n    openssl-devel \\\n    bzip2-devel \\\n    libffi-devel \\\n    wget \\\n    perl-core \\\n    git \\\n    pkg-config \\\n    unzip \\\n    sudo && rm -rf /var/cache/yum\n\n# Install python3\nRUN yum install -y python36 python3-devel && rm -rf /var/cache/yum\n\n# Install TensorRT\nRUN if [ \"${CUDA_VERSION}\" = \"10.2\" ] ; then \\\n    v=\"${TRT_VERSION%.*}-1.cuda${CUDA_VERSION}\" &&\\\n    yum-config-manager --add-repo https://developer.download.nvidia.com/compute/cuda/repos/rhel7/x86_64/cuda-rhel7.repo &&\\\n    yum -y install libnvinfer8-${v} libnvparsers8-${v} libnvonnxparsers8-${v} libnvinfer-plugin8-${v} \\\n        libnvinfer-devel-${v} libnvparsers-devel-${v} libnvonnxparsers-devel-${v} libnvinfer-plugin-devel-${v} \\\n        python3-libnvinfer-${v}; rm -rf /var/cache/yum \\\nelse \\\n    v=\"${TRT_VERSION%.*}-1.cuda${CUDA_VERSION%.*}\" &&\\\n    yum-config-manager --add-repo https://developer.download.nvidia.com/compute/cuda/repos/rhel7/x86_64/cuda-rhel7.repo &&\\\n    yum -y install libnvinfer8-${v} libnvparsers8-${v} libnvonnxparsers8-${v} libnvinfer-plugin8-${v} \\\n        libnvinfer-devel-${v} libnvparsers-devel-${v} libnvonnxparsers-devel-${v} libnvinfer-plugin-devel-${v} \\\n        python3-libnvinfer-${v}; rm -rf /var/cache/yum \\\nfi\n\n# Install dev-toolset-8 for g++ version that supports c++14\nRUN yum -y install centos-release-scl && rm -rf /var/cache/yum\nRUN yum-config-manager --enable rhel-server-rhscl-7-rpms\nRUN yum -y install devtoolset-8 && rm -rf /var/cache/yum\n\n# Install PyPI packages\nRUN pip3 install --no-cache-dir --upgrade pip\nRUN pip3 install --no-cache-dir setuptools >=41.0.0\nRUN pip3 install --no-cache-dir numpy\nCOPY requirements.txt /tmp/requirements.txt\nRUN pip3 install --no-cache-dir -r /tmp/requirements.txt\nRUN pip3 install --no-cache-dir jupyter jupyterlab\n\n# Install Cmake\nRUN cd /tmp && \\\n    wget https://github.com/Kitware/CMake/releases/download/v3.14.4/cmake-3.14.4-Linux-x86_64.sh && \\\n    chmod +x cmake-3.14.4-Linux-x86_64.sh && \\\n    ./cmake-3.14.4-Linux-x86_64.sh --prefix=/usr/local --exclude-subdir --skip-license && \\\n    rm ./cmake-3.14.4-Linux-x86_64.sh\n\n# Download NGC client\nRUN cd /usr/local/bin && wget https://ngc.nvidia.com/downloads/ngccli_cat_linux.zip && unzip ngccli_cat_linux.zip && chmod u+x ngc-cli/ngc && rm ngccli_cat_linux.zip ngc-cli.md5 && echo \"no-apikey\\nascii\\n\" | ngc-cli/ngc config set\n\nRUN rm /usr/bin/python && ln -s /usr/bin/python3 /usr/bin/python\n\n# Set environment and working directory\nENV TRT_LIBPATH /usr/lib/x86_64-linux-gnu\nENV TRT_OSSPATH /workspace/TensorRT\nENV PATH=\"${PATH}:/usr/local/bin/ngc-cli\"\nENV LD_LIBRARY_PATH=\"${LD_LIBRARY_PATH}:${TRT_OSSPATH}/build/out:${TRT_LIBPATH}\"\n# Use devtoolset-8 as default compiler\nENV PATH=\"/opt/rh/devtoolset-8/root/bin:${PATH}\"\nWORKDIR /workspace\n\nUSER trtuser\nRUN [\"/bin/bash\"]\n"
}