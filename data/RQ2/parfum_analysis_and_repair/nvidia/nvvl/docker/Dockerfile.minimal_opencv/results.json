{
  "startTime": 1674254377727,
  "endTime": 1674254378874,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 15,
        "columnEnd": 80
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 17,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 27
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 51
      }
    }
  ],
  "repairedDockerfile": "FROM nvcr.io/nvidia/pytorch:18.02-py3\n\nARG FFMPEG_VERSION=3.4.2\nARG OPENCV_VERSION=3.4.0\nARG OPENCV_CUDA_GENERATION=Volta\n\n# nvcuvid deps\nRUN apt-get update --fix-missing && \\\n    apt-get install --no-install-recommends -y libx11-6 libxext6 && rm -rf /var/lib/apt/lists/*;\nENV NVIDIA_DRIVER_CAPABILITIES=video,compute,utility\n\n# minimal ffmpeg from source\nRUN apt-get install --no-install-recommends -y yasm && \\\n    cd /tmp && wget -q https://ffmpeg.org/releases/ffmpeg-$FFMPEG_VERSION.tar.bz2 && \\\n    tar xf ffmpeg-$FFMPEG_VERSION.tar.bz2 && \\\n    rm ffmpeg-$FFMPEG_VERSION.tar.bz2 && \\\n    cd ffmpeg-$FFMPEG_VERSION && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n      --prefix=/usr/local \\\n      --disable-static \\\n      --disable-all \\\n      --disable-autodetect \\\n      --disable-iconv \\\n      --enable-shared \\\n      --enable-avformat \\\n      --enable-avcodec \\\n      --enable-avfilter \\\n      --enable-protocol=file \\\n      --enable-demuxer=mov,matroska \\\n      --enable-bsf=h264_mp4toannexb,hevc_mp4toannexb && \\\n    make -j8 && make install && \\\n    cd /tmp && rm -rf ffmpeg-$FFMPEG_VERSION && \\\n    apt-get remove -y yasm && rm -rf /var/lib/apt/lists/*;\n\n# paired down OpenCV build, just enough for video_reader and examples\nRUN cd /tmp && \\\n    wget https://github.com/opencv/opencv/archive/$OPENCV_VERSION.tar.gz && \\\n    tar xzvf $OPENCV_VERSION.tar.gz && \\\n    rm $OPENCV_VERSION.tar.gz && \\\n    cd opencv-$OPENCV_VERSION && \\\n    mkdir build && cd build && \\\n    cmake -DCUDA_GENERATION=$OPENCV_CUDA_GENERATION \\\n      $(for m in cudabgsegm cudafeatures2d cudalegacy \\\n      cudaobjdetect dnn features2d flann highgui ml \\\n      objdetect photo python_bindings_generator shape \\\n      superres ts; do echo -DBUILD_opencv_$m=OFF; done) \\\n      $(for f in WEBP TIFF OPENEXR JASPER; do echo -DWITH_$f=OFF; done) \\\n      .. && \\\n    make -j8 && make install && \\\n    ldconfig && \\\n    cd /tmp && rm -rf opencv-$OPENCV_VERSION\n"
}