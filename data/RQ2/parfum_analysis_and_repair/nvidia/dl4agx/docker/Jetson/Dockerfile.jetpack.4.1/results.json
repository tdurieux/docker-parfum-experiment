{
  "startTime": 1674251235345,
  "endTime": 1674251236608,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 91,
        "lineEnd": 91,
        "columnStart": 4,
        "columnEnd": 141
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 107,
        "lineEnd": 107,
        "columnStart": 7,
        "columnEnd": 55
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#############################################################################\n# Copyright (c) 2018-2019 NVIDIA Corporation. All rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n# File: DL4AGX/docker/Jetson/Dockerfile.aarch64-linux.4.1\n# Description: Docker image for Jetpack 4.1\n############################################################################\nFROM nvcr.io/nvidia/tensorrt:19.02-py3\n\nARG jetpack_version=4.1\nENV CUDA_VERSION=10.0\n\nARG trt_version=5.0\nARG trt_version_short=5.0.3\nARG trt_version_long=5.0.3.2\n\nRUN apt-get update \\\n    && apt-get upgrade -y \\\n    && rm -rf /var/lib/apt/lists/*\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n        libtool \\\n        rsync \\\n        pkg-config \\\n        python \\\n        python-dev \\\n        python3 \\\n        python3-dev \\\n        x264 v4l-utils \\\n        gcc-aarch64-linux-gnu  \\\n        g++-aarch64-linux-gnu \\\n        libjpeg-dev \\\n        curl \\\n        ca-certificates \\\n        wget \\\n        unzip \\\n        git \\\n        nasm \\\n        pkg-config \\\n        dh-autoreconf \\\n        make\\\n        g++\\\n        libboost-all-dev \\\n        unzip && \\\n    rm -rf /var/lib/apt/lists/*\n\nRUN curl -f -O https://bootstrap.pypa.io/get-pip.py && \\\n    python get-pip.py && \\\n    rm get-pip.py\n\nRUN curl -f -O https://bootstrap.pypa.io/get-pip.py && \\\n    python3 get-pip.py && \\\n    rm get-pip.py\n\n\nRUN pip install --upgrade --no-cache-dir numpy\n\nRUN pip install --upgrade --no-cache-dir \\\n    pillow \\\n    pip \\\n    protobuf \\\n    pycuda \\\n    setuptools\n\n\nRUN pip3 install --upgrade --no-cache-dir numpy\n\nRUN pip3 install --upgrade --no-cache-dir \\\n    pillow \\\n    pip \\\n    protobuf \\\n    pycuda \\\n    setuptools\n\nCOPY jetpack_files /pdk_files\n\n###########################################################\n# CUDA\n###########################################################\n#RUN mv /usr/local/cuda-${CUDA_VERSION} /tmp/cuda-backup\nRUN wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64/cuda-npp-dev-10-0_10.0.130-1_amd64.deb -O cuda_npp-dev.deb\nRUN mv /pdk_files/16.04/cuda-repo-ubuntu1604-10-0-local-10.0.117-410.38_1.0-1_amd64.deb cuda-cross.deb\n#RUN wget $pdk_linux_build_server/cuda-repo-cross-aarch64-10-1-local-10.1.107_1.0-1_all.deb -O cuda-repo-cross-aarch64.deb\n\nENV REPO_DEBS=\"cuda-cross.deb \\\n               cuda_npp-dev.deb\"\n\nRUN dpkg -i $REPO_DEBS\n\nRUN rm *.deb\n\nENV CUDA_CROSS_PACKAGES=\"cublas cudart cufft curand cusolver cusparse driver misc-headers npp nvgraph nvml nvrtc\"\n\nRUN echo \"for i in \\$CUDA_CROSS_PACKAGES; do echo \\\"cuda-\\$i-cross-aarch64-\\${CUDA_VERSION}\\\";done\" | bash > /tmp/cuda-packages.txt\n\nRUN apt-get update \\\n    && apt-get install --no-install-recommends -y $(cat /tmp/cuda-packages.txt) \\\n    && rm -rf /var/lib/apt/lists/* \\\n    && rm -rf /tmp/cuda-packages.txt\n\nRUN cp -r /usr/local/cuda-${CUDA_VERSION}/bin /usr/local/cuda-${CUDA_VERSION}/targets/x86_64-linux \\\n    && mv /usr/local/cuda-${CUDA_VERSION}/extras /usr/local/cuda-${CUDA_VERSION}/targets/x86_64-linux \\\n    && ln -s /usr/local/cuda-${CUDA_VERSION}/targets/x86_64-linux/extras /usr/local/cuda-${CUDA_VERSION}/extras\n\nRUN mkdir -p /usr/local/cuda-${CUDA_VERSION}/dl/targets/x86_64-linux \\\n    && cd /usr/local/cuda-${CUDA_VERSION}/dl/targets/x86_64-linux \\\n    && mkdir include lib lib64\\\n    && mv /usr/lib/x86_64-linux-gnu/libnv* lib \\\n    && mv /usr/include/x86_64-linux-gnu/Nv* include \\\n    && mv /usr/lib/x86_64-linux-gnu/libcudnn* lib \\\n    && mv /usr/include/x86_64-linux-gnu/cudnn* include/cudnn.h \\\n    && cd lib \\\n    && rm /etc/alternatives/libcudnn* \\\n    && ln -s /usr/local/cuda-${CUDA_VERSION}/dl/targets/x86_64-linux/include/cudnn.h /etc/alternatives/libcudnn \\\n    && ln -s /usr/local/cuda-${CUDA_VERSION}/dl/targets/x86_64-linux/lib/libcudnn.so.7 /etc/alternatives/libcudnn_so \\\n    && rm -rf /usr/local/cuda-${CUDA_VERSION}/*sight* /usr/local/cuda-${CUDA_VERSION}/samples\n\n###########################################################\n# ARM Linux Libs\n###########################################################\nRUN dpkg -x /pdk_files/libcudnn7_7.3.1.20-1+cuda10.0_arm64.deb cudnn-aarch64\nRUN dpkg -x /pdk_files/libcudnn7-dev_7.3.1.20-1+cuda10.0_arm64.deb cudnn-aarch64\n\nRUN mkdir -p /usr/local/cuda-${CUDA_VERSION}/dl/targets/aarch64-linux/include /usr/local/cuda-${CUDA_VERSION}/dl/targets/aarch64-linux/lib\nRUN mv cudnn-aarch64/usr/lib/aarch64-linux-gnu/* /usr/local/cuda-${CUDA_VERSION}/dl/targets/aarch64-linux/lib\nRUN mv cudnn-aarch64/usr/include/aarch64-linux-gnu/* /usr/local/cuda-${CUDA_VERSION}/dl/targets/aarch64-linux/include\nRUN cd /usr/local/cuda-${CUDA_VERSION}/dl/targets/aarch64-linux/include && ln -s cudnn_v7.h cudnn.h\nRUN cd /usr/local/cuda-${CUDA_VERSION}/dl/targets/aarch64-linux/lib && ln -s libcudnn.so.7 libcudnn.so\nRUN rm -rf cudnn-aarch64\n\nRUN dpkg -x /pdk_files/libnvinfer5_5.0.3-1+cuda10.0_arm64.deb trt-aarch64\nRUN dpkg -x /pdk_files/libnvinfer-dev_5.0.3-1+cuda10.0_arm64.deb trt-aarch64\n\nRUN mv trt-aarch64/usr/lib/aarch64-linux-gnu/* /usr/local/cuda-${CUDA_VERSION}/dl/targets/aarch64-linux/lib\nRUN mv trt-aarch64/usr/include/aarch64-linux-gnu/* /usr/local/cuda-${CUDA_VERSION}/dl/targets/aarch64-linux/include\nRUN rm -rf trt-aarch64\n\nRUN mkdir -p /usr/local/cuda/targets/aarch64-qnx /usr/local/cuda/dl/targets/aarch64-qnx\n\nRUN rm -rf *.deb *.patch\nRUN rm -rf /pdk_files\n\nENV LD_LIBRARY_PATH=/usr/local/lib:/usr/local/cuda/lib64:/usr/local/cuda/dl/targets/x86_64-linux/lib:/usr/local/cuda/dl/targets/x86_64-linux/lib64:/usr/lib:/lib:$LD_LIBRARY_PATH\n"
}