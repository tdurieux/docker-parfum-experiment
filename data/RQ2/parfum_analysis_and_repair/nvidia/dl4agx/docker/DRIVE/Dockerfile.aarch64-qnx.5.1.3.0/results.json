{
  "startTime": 1674251612329,
  "endTime": 1674251613483,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 87,
        "lineEnd": 87,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 91,
        "lineEnd": 91,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 133,
        "lineEnd": 133,
        "columnStart": 7,
        "columnEnd": 126
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 135,
        "lineEnd": 135,
        "columnStart": 7,
        "columnEnd": 70
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 150,
        "lineEnd": 150,
        "columnStart": 7,
        "columnEnd": 71
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#############################################################################\n# Copyright (c) 2018-2019 NVIDIA Corporation. All rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n# File: DL4AGX/docker/DRIVE/Dockerfile.aarch64-qnx.5.1.3.0\n# Description: Docker image for DRIVE PDK 5.1.3.0 for QNX\n############################################################################\nFROM nvidia/cuda:10.1-devel-ubuntu16.04\n\nARG pdk_version=5.1.3.0\n\nENV CUDA_VERSION=10.1  \nARG cuda_version_dash=10-1\nARG cuda_version_long=10.1.107\nARG driver_version=418.40\n\nARG cudnn_version=7.5\nARG cudnn_version_long=7.5.0.53\n\nARG trt_version=5.1\nARG trt_version_short=5.1.1\nARG trt_version_long=5.1.1.4\nARG target_driver=10.1-r418\n\nARG cuda_repo_x86_64=cuda-repo-ubuntu1604-${cuda_version_dash}-local-${cuda_version_long}-${driver_version}_1.0-1_amd64.deb\nARG cuda_repo_cross_aarch64_qnx=cuda-repo-cross-qnx-${cuda_version_dash}-local-${cuda_version_long}_1.0-1_all.deb\n\nENV CUDNN_x86_64_DEBS=\"libcudnn7_${cudnn_version_long}-1+cuda${CUDA_VERSION}_amd64.deb \\\n                       libcudnn7-dev_${cudnn_version_long}-1+cuda${CUDA_VERSION}_amd64.deb\"\n\nENV CUDNN_AARCH64_QNX_DEBS=\"libcudnn7-cross-qnx_${cudnn_version_long}-1+cuda${CUDA_VERSION}_all.deb \\\n                            libcudnn7-dev-cross-qnx_${cudnn_version_long}-1+cuda${CUDA_VERSION}_all.deb\"\n\nENV TENSORRT_x86_64_DEBS \"libnvinfer5_${trt_version_short}-1+cuda${CUDA_VERSION}_amd64.deb \\\n                          libnvinfer-dev_${trt_version_short}-1+cuda${CUDA_VERSION}_amd64.deb \\\n                          python-libnvinfer_${trt_version_short}-1+cuda${CUDA_VERSION}_amd64.deb \\\n                          python-libnvinfer-dev_${trt_version_short}-1+cuda${CUDA_VERSION}_amd64.deb \\\n                          python3-libnvinfer_${trt_version_short}-1+cuda${CUDA_VERSION}_amd64.deb \\\n                          python3-libnvinfer-dev_${trt_version_short}-1+cuda${CUDA_VERSION}_amd64.deb \\\n                          uff-converter-tf_${trt_version_short}-1+cuda${CUDA_VERSION}_amd64.deb \\\n                          graphsurgeon-tf_${trt_version_short}-1+cuda${CUDA_VERSION}_amd64.deb\"\n\n\nENV TRT_AARCH64_QNX_DEBS=\"libnvinfer5-cross-qnx_${trt_version_short}-1+cuda${CUDA_VERSION}_all.deb \\\n                          libnvinfer-dev-cross-qnx_${trt_version_short}-1+cuda${CUDA_VERSION}_all.deb\"\n\nRUN apt-get update \\\n    && apt-get upgrade -y \\\n    && rm -rf /var/lib/apt/lists/*\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n        libtool \\\n        rsync \\\n        pkg-config \\\n        python \\\n        python-dev \\\n        python3 \\\n        python3-dev \\\n        x264 v4l-utils \\\n        gcc-aarch64-linux-gnu  \\\n        g++-aarch64-linux-gnu \\ \n        libjpeg-dev \\\n        curl \\\n        ca-certificates \\\n        wget \\\n        unzip \\ \n        git \\\n        nasm \\\n        pkg-config \\\n        dh-autoreconf \\\n        make\\\n        g++\\\n        libboost-all-dev \\\n        unzip && \\\n    rm -rf /var/lib/apt/lists/*  \n\nRUN curl -f -O https://bootstrap.pypa.io/get-pip.py && \\\n    python get-pip.py && \\\n    rm get-pip.py\n\nRUN curl -f -O https://bootstrap.pypa.io/get-pip.py && \\\n    python3 get-pip.py && \\\n    rm get-pip.py\n\n\nRUN pip install --upgrade --no-cache-dir numpy\n\nRUN pip install --upgrade --no-cache-dir \\\n    pillow \\\n    pip \\\n    protobuf \\\n    pycuda \\\n    setuptools\n\n\nRUN pip3 install --upgrade --no-cache-dir numpy\n\nRUN pip3 install --upgrade --no-cache-dir \\\n    pillow \\\n    pip \\\n    protobuf \\\n    pycuda \\\n    setuptools\n\nCOPY pdk_files /pdk_files\n###########################################################\n# CUDA\n###########################################################\nRUN mv /usr/local/cuda-${CUDA_VERSION} /tmp/cuda-backup\nRUN mv /pdk_files/${cuda_repo_x86_64} cuda.deb\nRUN mv /pdk_files/${cuda_repo_cross_aarch64_qnx} cuda-repo-cross-qnx.deb\n\nENV REPO_DEBS=\"cuda.deb \\\n               cuda-repo-cross-qnx.deb\"\n\nRUN dpkg -i $REPO_DEBS\n\nENV CUDA_PACKAGES=\"nvrtc nvgraph cusolver cufft curand cusparse npp nvjpeg cudart cupti compiler misc-headers command-line-tools nvrtc-dev nvml-dev nvgraph-dev cusolver-dev cufft-dev curand-dev cusparse-dev npp-dev nvjpeg-dev cudart-dev driver-dev nvcc toolkit libraries-dev tools visual-tools\"\nRUN echo \"for i in \\$CUDA_PACKAGES; do echo \\\"cuda-\\$i-\\${cuda_version_dash}=\\${cuda_version_long}-1\\\";done\" | bash > /tmp/cuda-packages.txt\n\n#Install CUDA 10\nRUN apt-get update \\\n    && apt-get -o Dpkg::Options::=\"--force-overwrite\" --no-install-recommends install -y $(cat /tmp/cuda-packages.txt) --reinstall --allow-downgrades \\\n    # Random cuda libs in random places...\n    && apt-get install --no-install-recommends -y libcublas-dev --reinstall --allow-downgrades \\\n    && apt-mark hold $(cat /tmp/cuda-packages.txt) \\\n    && rm -rf /var/lib/apt/lists/* \\\n    && rm -rf /tmp/cuda-packages.txt\n\nRUN mv /usr/lib/x86_64-linux-gnu/libcublas.so* /usr/local/cuda-${CUDA_VERSION}/targets/x86_64-linux/lib && \\\n    mv /usr/include/cublas* /usr/local/cuda-${CUDA_VERSION}/include\n\nRUN rm -rf /usr/local/cuda \\\n    && ln -s /usr/local/cuda-${CUDA_VERSION} /usr/local/cuda\n\nRUN ls /tmp\nRUN rsync -a --ignore-existing /tmp/cuda-backup/lib64 /usr/local/cuda/lib64\n\nRUN apt-get update \\\n    && apt-get install --no-install-recommends -y cuda-cross-qnx --reinstall --allow-downgrades \\\n    && rm -rf /var/lib/apt/lists/* \\\n    && rm -rf /tmp/cuda-packages.txt\n\nRUN cp -r /usr/local/cuda-${CUDA_VERSION}/bin /usr/local/cuda-${CUDA_VERSION}/targets/x86_64-linux \\\n    && mv /usr/local/cuda-${CUDA_VERSION}/extras /usr/local/cuda-${CUDA_VERSION}/targets/x86_64-linux \\\n    && ln -s /usr/local/cuda-${CUDA_VERSION}/targets/x86_64-linux/extras /usr/local/cuda-${CUDA_VERSION}/extras \\\n    && mkdir -p /usr/local/cuda-${CUDA_VERSION}/targets/aarch64-qnx/extras/CUPTI \\\n    && cp -r /usr/local/cuda-${CUDA_VERSION}/targets/x86_64-linux/extras/CUPTI/include /usr/local/cuda-${CUDA_VERSION}/targets/aarch64-qnx/extras/CUPTI\n\nRUN rm -rf /usr/local/cuda-${CUDA_VERSION}/doc\nRUN find / -name \"*cublas*\"\nRUN mv /usr/lib/aarch64-qnx-gnu/libcublas* /usr/local/cuda/targets/aarch64-qnx/lib \\\n    && mv /usr/include/aarch64-qnx-gnu/cublas* /usr/local/cuda/targets/aarch64-qnx/include\n\n\nRUN cd /pdk_files \\\n    && dpkg -i ${CUDNN_x86_64_DEBS}\n\n#TODO: REMOVE THE LIBNVINFER SAMPLES DEPENDENCY\nRUN cd /pdk_files \\ \n    && dpkg -i ${TENSORRT_x86_64_DEBS} \\\n    && rm -rf ${TENSORRT_x86_64_DEBS}\n\nRUN mkdir -p /usr/local/cuda-${CUDA_VERSION}/dl/targets/x86_64-linux \\\n    && cd /usr/local/cuda-${CUDA_VERSION}/dl/targets/x86_64-linux \\\n    && mkdir include lib lib64\\\n    && mv /usr/lib/x86_64-linux-gnu/libnv* lib \\\n    && mv /usr/include/x86_64-linux-gnu/Nv* include \\\n    && mv /usr/lib/x86_64-linux-gnu/libcudnn* lib \\\n    && mv /usr/include/x86_64-linux-gnu/cudnn* include/cudnn.h \\\n    && cd lib \\\n    && rm /etc/alternatives/libcudnn* \\\n    && ln -s /usr/local/cuda-${CUDA_VERSION}/dl/targets/x86_64-linux/include/cudnn.h /etc/alternatives/libcudnn \\\n    && ln -s /usr/local/cuda-${CUDA_VERSION}/dl/targets/x86_64-linux/lib/libcudnn.so.7 /etc/alternatives/libcudnn_so \\\n    && rm -rf /usr/local/cuda-${CUDA_VERSION}/*sight* /usr/local/cuda-${CUDA_VERSION}/samples\n\n###########################################################\n# QNX Libs\n###########################################################\nCOPY qnx_toolchain /qnx\nRUN rsync -a /qnx/host/linux/x86_64/ /\nRUN mkdir -p /lib64/qnx7/stubs && mv /qnx/lib64/* /lib64/qnx7/stubs\nRUN mv /qnx/target/qnx7 /usr/aarch64-unknown-nto-qnx\nRUN rm -rf /usr/aarch64-unknown-nto-qnx/armle-v7 /usr/aarch64-unknown-nto-qnx/x86 /usr/aarch64-unknown-nto-qnx/x86_64\nRUN rm -rf /qnx\n\nRUN cd /pdk_files \\\n    && dpkg -i ${CUDNN_AARCH64_QNX_DEBS}\n\nRUN cd /pdk_files \\\n    && dpkg -i ${TRT_AARCH64_QNX_DEBS}\n\nRUN mkdir -p /usr/local/cuda-${CUDA_VERSION}/dl/targets/aarch64-qnx/include /usr/local/cuda-${CUDA_VERSION}/dl/targets/aarch64-qnx/lib \\\n    && mv /usr/lib/aarch64-unknown-nto-qnx/* /usr/local/cuda-${CUDA_VERSION}/dl/targets/aarch64-qnx/lib \\\n    && mv /usr/include/aarch64-unknown-nto-qnx/* /usr/local/cuda-${CUDA_VERSION}/dl/targets/aarch64-qnx/include\n\nENV QNX_HOST=/\nENV QNX_TARGET=/usr/aarch64-unknown-nto-qnx\n\nRUN rm -rf *.deb *.patch\nRUN rm -rf /pdk_files\nRUN mkdir /usr/local/cuda/targets/aarch64-linux /usr/local/cuda/dl/targets/aarch64-linux\n\nENV LD_LIBRARY_PATH=/usr/local/lib:/usr/local/cuda/lib64:/usr/local/cuda/dl/targets/x86_64-linux/lib:/usr/local/cuda/dl/targets/x86_64-linux/lib64:/usr/lib:/lib:$LD_LIBRARY_PATH\n"
}