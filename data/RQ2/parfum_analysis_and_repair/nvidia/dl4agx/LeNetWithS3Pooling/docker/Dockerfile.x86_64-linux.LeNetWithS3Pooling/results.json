{
  "startTime": 1674219721906,
  "endTime": 1674219722791,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 81
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 7,
        "columnEnd": 29
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 7,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 7,
        "columnEnd": 36
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "##########################################################################\n# Copyright (c) 2018-2019 NVIDIA Corporation. All rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n# File: //LeNetWithS3Pooling/docker/Dockerfile.x86_64-linux.LeNetWithS3Pooling\n# Description: Dockerfile to support S3Pooling app\n##########################################################################\nFROM nvidia/drive_os_pdk:5.1.6.0-linux\n\nCOPY TensorRT-6.0.1.8.Ubuntu-18.04.x86_64-gnu.cuda-10.2.cudnn7.6.tar.gz tensorrt6.tar.gz\n\nRUN tar xvf tensorrt6.tar.gz && rm -rf tensorrt6.tar.gz\n\nRUN mv /usr/local/cuda-10.2/dl/targets/x86_64-linux/include/cudnn.h / && \\\n    rm -rf /usr/local/cuda-10.2/dl/targets/x86_64-linux/include && \\\n    mv /TensorRT-6.0.1.8/include /usr/local/cuda-10.2/dl/targets/x86_64-linux/include && \\\n    mv /cudnn.h /usr/local/cuda-10.2/dl/targets/x86_64-linux/include/\n\nRUN mv /usr/local/cuda-10.2/dl/targets/x86_64-linux/lib/libcudnn* /  && \\\n    rm -rf /usr/local/cuda-10.2/dl/targets/x86_64-linux/lib && \\\n    mv /TensorRT-6.0.1.8/targets/x86_64-linux-gnu/lib /usr/local/cuda-10.2/dl/targets/x86_64-linux/lib && \\\n    mv /libcudnn* /usr/local/cuda-10.2/dl/targets/x86_64-linux/lib\n\nRUN rm -rf /TensorRT-6.0.1.8\n\nRUN apt-get update \\\n    && apt-get install --no-install-recommends -y libssl-dev \\\n    && rm -rf /var/lib/apt/lists/* \\\n    && wget https://curl.haxx.se/download/curl-7.67.0.tar.gz \\\n    && tar xvf curl-7.67.0.tar.gz \\\n    && cd curl-7.67.0 \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-ssl \\\n    && make \\\n    && make install && rm curl-7.67.0.tar.gz\n\nRUN CMAKE_VERSION=3.15 && \\\n    CMAKE_BUILD=3.15.0 && \\\n    curl -f -L https://cmake.org/files/v${CMAKE_VERSION}/cmake-${CMAKE_BUILD}.tar.gz | tar -xzf - && \\\n    cd /cmake-${CMAKE_BUILD} && \\\n    ./bootstrap --parallel=$(grep ^processor /proc/cpuinfo | wc -l) && \\\n    make -j\"$(grep ^processor /proc/cpuinfo | wc -l)\" install && \\\n    rm -rf /cmake-${CMAKE_BUILD}\n\nRUN cp /usr/local/cuda-10.2/dl/targets/x86_64-linux/lib/libcudnn.so.7.5.1 /usr/local/cuda-10.2/dl/targets/x86_64-linux/lib64/ && \\\n    cp /usr/local/cuda-10.2/dl/targets/x86_64-linux/lib/libcudnn.so.7.5.1 /usr/lib/x86_64-linux-gnu/\n\nRUN git clone -b master https://github.com/nvidia/TensorRT TensorRT -b release/6.0 && \\\n    cd TensorRT && \\\n    git submodule update --init --recursive && \\\n    export TRT_SOURCE=`pwd` && \\\n    export TRT_RELEASE=/usr/local/cuda-10.2/dl/targets/x86_64-linux/lib && \\\n    cd parsers/onnx && \\\n    git checkout webinar/s3pool\n\nRUN cd /TensorRT && mkdir -p build && cd build && \\\n    cmake .. -DTRT_LIB_DIR=/usr/local/cuda-10.2/dl/targets/x86_64-linux/lib \\\n             -DTRT_BIN_DIR=`pwd`/out \\\n             -DCUDNN_ROOT_DIR=/usr/local/cuda-10.2/dl/targets/x86_64-linux/ \\\n             -DBUILD_SAMPLES=OFF \\\n             -DPROTOBUF_VERSION=3.8.0 && \\\n    make -j$(nproc) && \\\n    cd out && \\\n    cp lib* /usr/local/cuda-10.2/dl/targets/x86_64-linux/lib\n\nRUN rm -rf curl-7.67.0 curl-7.67.0.tar.gz TensorRT\n"
}