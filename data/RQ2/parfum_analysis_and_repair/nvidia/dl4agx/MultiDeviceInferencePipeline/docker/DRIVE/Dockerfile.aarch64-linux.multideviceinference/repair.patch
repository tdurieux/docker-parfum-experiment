diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/nvidia/dl4agx/MultiDeviceInferencePipeline/docker/DRIVE/Dockerfile.aarch64-linux.multideviceinference b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/nvidia/dl4agx/MultiDeviceInferencePipeline/docker/DRIVE/Dockerfile.aarch64-linux.multideviceinference/repaired.Dockerfile
index 00cb6b7..4b27048 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/nvidia/dl4agx/MultiDeviceInferencePipeline/docker/DRIVE/Dockerfile.aarch64-linux.multideviceinference
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/nvidia/dl4agx/MultiDeviceInferencePipeline/docker/DRIVE/Dockerfile.aarch64-linux.multideviceinference/repaired.Dockerfile
@@ -23,7 +23,7 @@ WORKDIR /
 # CMake
 RUN CMAKE_VERSION=3.15 && \
     CMAKE_BUILD=3.15.0 && \
-    curl -L https://cmake.org/files/v${CMAKE_VERSION}/cmake-${CMAKE_BUILD}.tar.gz | tar -xzf - && \
+    curl -f -L https://cmake.org/files/v${CMAKE_VERSION}/cmake-${CMAKE_BUILD}.tar.gz | tar -xzf - && \
     cd /cmake-${CMAKE_BUILD} && \
     ./bootstrap --parallel=$(grep ^processor /proc/cpuinfo | wc -l) && \
     make -j"$(grep ^processor /proc/cpuinfo | wc -l)" install && \
@@ -31,16 +31,16 @@ RUN CMAKE_VERSION=3.15 && \
 
 # protobuf v3.5.1
 ENV PROTOBUF_VERSION=3.5.1
-RUN curl -L https://github.com/google/protobuf/releases/download/v${PROTOBUF_VERSION}/protobuf-all-${PROTOBUF_VERSION}.tar.gz | tar -xzf -
+RUN curl -f -L https://github.com/google/protobuf/releases/download/v${PROTOBUF_VERSION}/protobuf-all-${PROTOBUF_VERSION}.tar.gz | tar -xzf -
 
 RUN cd /protobuf-${PROTOBUF_VERSION} && \
     ./autogen.sh && \
-    ./configure CXXFLAGS="-fPIC" --prefix=/usr/local --disable-shared 2>&1 > /dev/null && \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" CXXFLAGS="-fPIC" --prefix=/usr/local --disable-shared 2>&1 > /dev/null && \
     make -j"$(grep ^processor /proc/cpuinfo | wc -l)" install 2>&1 > /dev/null && \
     make clean
 
 RUN cd /protobuf-${PROTOBUF_VERSION} \
-    && ./autogen.sh && ./configure \
+    && ./autogen.sh && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
     CC=aarch64-linux-gnu-gcc \
     CXX=aarch64-linux-gnu-g++ \
     CXXFLAGS="-fPIC" \
@@ -51,11 +51,11 @@ RUN cd /protobuf-${PROTOBUF_VERSION} \
 
 
 ENV JPEG_TURBO_VERSION=1.5.3
-RUN curl -L https://github.com/libjpeg-turbo/libjpeg-turbo/archive/${JPEG_TURBO_VERSION}.tar.gz | tar -xzf -
+RUN curl -f -L https://github.com/libjpeg-turbo/libjpeg-turbo/archive/${JPEG_TURBO_VERSION}.tar.gz | tar -xzf -
 
 RUN cd /libjpeg-turbo-${JPEG_TURBO_VERSION} && \
     autoreconf -fiv && \
-    ./configure \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
       --enable-shared \
       --prefix=/usr/local/ && \
     make -j"$(grep ^processor /proc/cpuinfo | wc -l)" install && \
@@ -63,7 +63,7 @@ RUN cd /libjpeg-turbo-${JPEG_TURBO_VERSION} && \
 
 RUN cd /libjpeg-turbo-${JPEG_TURBO_VERSION} && \
     autoreconf -fiv && \
-    ./configure \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
       --enable-shared \
       CC=aarch64-linux-gnu-gcc \
       CXX=aarch64-linux-gnu-g++ \
@@ -81,7 +81,7 @@ RUN cd /tmp && wget https://developer.download.nvidia.com/compute/redist/nvidia-
     rm ffmpeg-$FFMPEG_VERSION.tar.bz2
 
 RUN cd /tmp/ffmpeg-$FFMPEG_VERSION && \
-    ./configure \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
       --arch=aarch64 \
       --target_os=linux \
       --prefix=/usr/aarch64-linux-gnu/ \
@@ -105,7 +105,7 @@ RUN cd /tmp/ffmpeg-$FFMPEG_VERSION && \
     make clean
 
 RUN cd /tmp/ffmpeg-$FFMPEG_VERSION && \
-    ./configure \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
       --target_os=linux \
       --prefix=/usr/local/ \
       --disable-static \
@@ -127,7 +127,7 @@ RUN cd /tmp/ffmpeg-$FFMPEG_VERSION && \
 
 # OpenCV
 ENV OPENCV_VERSION=3.4.3
-RUN curl -L https://github.com/opencv/opencv/archive/${OPENCV_VERSION}.tar.gz | tar -xzf -
+RUN curl -f -L https://github.com/opencv/opencv/archive/${OPENCV_VERSION}.tar.gz | tar -xzf -
 
 RUN cd /opencv-${OPENCV_VERSION} && mkdir build && cd build && \
     cmake -DCMAKE_BUILD_TYPE=Release \
@@ -206,7 +206,7 @@ RUN cd /opencv-${OPENCV_VERSION} && mkdir build && cd build && \
 # Boost
 RUN BOOST_VERSION=1_66_0 \
     && cd /usr/local \
-    && curl -L https://dl.bintray.com/boostorg/release/1.66.0/source/boost_${BOOST_VERSION}.tar.gz | tar -xzf - \
+    && curl -f -L https://dl.bintray.com/boostorg/release/1.66.0/source/boost_${BOOST_VERSION}.tar.gz | tar -xzf - \
     && cp -r  boost_${BOOST_VERSION}/boost  /usr/include/boost \
     && cp -r  boost_${BOOST_VERSION}/boost  /usr/aarch64-linux-gnu/include/boost \
     && rm -rf boost_${BOOST_VERSION}
@@ -280,7 +280,7 @@ RUN rm -rf DALI
 # Weird bugs with having this compiled first
 RUN cd /protobuf-${PROTOBUF_VERSION} && \
     ./autogen.sh && \
-    ./configure CXXFLAGS="-fPIC" --prefix=/usr/local 2>&1 > /dev/null && \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" CXXFLAGS="-fPIC" --prefix=/usr/local 2>&1 > /dev/null && \
     make -j"$(grep ^processor /proc/cpuinfo | wc -l)" install 2>&1 > /dev/null && \
     make clean