{
  "startTime": 1674220480722,
  "endTime": 1674220481672,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 13,
        "columnEnd": 24
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 22
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG MH_CONFIG=bench.yaml\nFROM node:11.4.0 AS ui\nRUN npm install -g npm@7.3.0 && npm cache clean --force;\nWORKDIR /go/metahub\nCOPY ./ui/package* ./ui/\nRUN cd ui && npm install && npm cache clean --force;\nCOPY ./ui ./ui\nCOPY ./static ./static\nCOPY ./templates ./templates\nWORKDIR /go/metahub/ui/\nRUN npm run build\n\nFROM golang:1.12 AS go\nWORKDIR /go/metahub\nCOPY ./go.mod .\nCOPY ./go.sum .\nRUN go mod download\nCOPY ./cmd ./cmd\nCOPY ./pkg ./pkg\nWORKDIR /go/metahub/cmd/boltdb\n# static build\nENV CGO_ENABLED=0 GOOS=linux\nRUN go build -a -ldflags '-extldflags \"-static\"' .\nEXPOSE 8080\n\nFROM golang:1.12 AS boltq\nWORKDIR /go\nRUN git clone https://github.com/schmichael/boltq.git \\\n && cd boltq \\\n && go get -d \\\n && go build\n\n# Go binary serves the ui web content\nFROM ubuntu:18.04\nENV PORT=80\nRUN apt update \\\n && apt install --no-install-recommends -y vim && rm -rf /var/lib/apt/lists/*;\nARG MH_CONFIG=${MH_CONFIG}\nRUN echo \"metahub -config /data/metahub.yaml\" > /root/.bash_history\nCOPY --from=go /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/\nCOPY --from=boltq /go/boltq/boltq /usr/bin/\nCOPY --from=ui /go/metahub/static /srv/html/static\nCOPY --from=ui /go/metahub/templates/gen/index.html /srv/html/\nCOPY --from=go /go/metahub/cmd/boltdb/boltdb /usr/bin/metahub\nCOPY ./misc/config/${MH_CONFIG} /data/metahub.yaml\nVOLUME /data/\nWORKDIR /data/\nCMD [\"/usr/bin/metahub\", \"-config\", \"/data/metahub.yaml\"]\n"
}