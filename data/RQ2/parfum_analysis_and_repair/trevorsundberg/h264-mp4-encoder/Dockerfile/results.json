{
  "startTime": 1674254469439,
  "endTime": 1674254469955,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 12,
        "columnStart": 22,
        "columnEnd": 9
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 12,
        "columnStart": 22,
        "columnEnd": 9
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:19.10@sha256:bd5f4f235eb31768b2c5caf1988bbdc182d4fc3cb6ee4aca6c6d74613f256140\n\nUSER root\nRUN apt-get update && apt-get install --no-install-recommends -qq -y \\\n      autoconf \\\n      cmake \\\n      build-essential \\\n      emscripten \\\n      git \\\n      libtool-bin \\\n      python2.7 \\\n      nodejs \\\n      npm && rm -rf /var/lib/apt/lists/*;\n\nRUN npm install -g npm && npm cache clean --force;\nRUN useradd -u 1000 -ms /bin/bash user\nUSER user\nWORKDIR /home/user\nRUN git clone https://github.com/juj/emsdk.git\n\nENV EMSCRIPTEN_VERSION sdk-tag-1.39.15-64bit-upstream\n\nRUN cd emsdk && \\\n    ./emsdk update-tags && \\\n    ./emsdk install $EMSCRIPTEN_VERSION && \\\n    ./emsdk activate --embedded $EMSCRIPTEN_VERSION\n\nENV EMSDK=\"/home/user/emsdk\"\nENV EMSDK_NODE_BIN=\"$EMSDK/node/12.9.1_64bit/bin\"\nENV EMSCRIPTEN=\"$EMSDK/upstream/emscripten\"\nENV PATH=\"$EMSDK:$EMSCRIPTEN:$EMSDK_NODE_BIN:${PATH}\"\nENV EM_CONFIG=\"$EMSDK/.emscripten\"\nENV EM_PORTS=\"$EMSDK/.emscripten_ports\"\nENV EM_CACHE=\"$EMSDK/.emscripten_cache\"\nENV EMSDK_NODE=\"$EMSDK_NODE_BIN/node\"\nENV EMCC_WASM_BACKEND=1\nENV EMCC_SKIP_SANITY_CHECK=1\n\n# Compile a program to force emcc caching\nRUN mkdir -p /tmp/emcc && \\\n    cd /tmp/emcc && \\\n    printf \"#include <iostream>\\nint main(){ std::cout << 0; return *new int; }\" > build.cpp && \\\n    emcc --bind -s DISABLE_EXCEPTION_CATCHING=0 build.cpp && \\\n    rm -rf /tmp/emcc\n\nCOPY . .\n\nRUN mkdir embuild\nWORKDIR /home/user/embuild\n\nRUN cmake -DCMAKE_TOOLCHAIN_FILE=$EMSCRIPTEN/cmake/Modules/Platform/Emscripten.cmake ..\nRUN cmake --build --parallel .\n\nWORKDIR /home/user\nRUN npm install && npm cache clean --force;\nRUN npm run build\n"
}