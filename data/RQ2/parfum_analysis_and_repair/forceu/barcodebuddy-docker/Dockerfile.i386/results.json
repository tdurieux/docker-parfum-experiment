{
  "startTime": 1674251421064,
  "endTime": 1674251421860,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 23,
        "lineEnd": 25,
        "columnStart": 1,
        "columnEnd": 102
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 152,
        "lineEnd": 152,
        "columnStart": 18,
        "columnEnd": 97
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 155,
        "lineEnd": 157,
        "columnStart": 1,
        "columnEnd": 74
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 30,
        "lineEnd": 32,
        "columnStart": 1,
        "columnEnd": 10
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 158,
        "lineEnd": 160,
        "columnStart": 1,
        "columnEnd": 34
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.10 as rootfs-stage\n\n# environment\nENV REL=v3.12\nENV ARCH=x86\nENV MIRROR=http://dl-cdn.alpinelinux.org/alpine\nENV PACKAGES=alpine-baselayout,\\\nalpine-keys,\\\napk-tools,\\\nbusybox,\\\nlibc-utils,\\\nxz\n\n# install packages\nRUN \\\n apk add --no-cache \\\n\tbash \\\n\tcurl \\\n\ttzdata \\\n\txz\n\n# fetch builder script from gliderlabs\nRUN \\\n curl -f -o \\\n /mkimage-alpine.bash -L \\\n\thttps://raw.githubusercontent.com/gliderlabs/docker-alpine/master/builder/scripts/mkimage-alpine.bash && \\\n chmod +x \\\n\t/mkimage-alpine.bash && \\\n ./mkimage-alpine.bash && \\\n mkdir /root-out && \\\n tar xf \\\n\t/rootfs.tar.xz -C \\\n\t/root-out && \\\n sed -i -e 's/^root::/root:!:/' /root-out/etc/shadow && rm /rootfs.tar.xz\n\n# Runtime stage\nFROM scratch\nCOPY --from=rootfs-stage /root-out/ /\nARG BUILD_DATE\nARG VERSION\nLABEL build_version=\"Linuxserver.io version:- ${VERSION} Build-date:- ${BUILD_DATE}\"\nLABEL maintainer=\"TheLamer\"\n\n# set version for s6 overlay\nARG OVERLAY_VERSION=\"v2.1.0.2\"\nARG OVERLAY_ARCH=\"x86\"\n\n# add s6 overlay\nADD https://github.com/just-containers/s6-overlay/releases/download/${OVERLAY_VERSION}/s6-overlay-${OVERLAY_ARCH}-installer /tmp/\nRUN chmod +x /tmp/s6-overlay-${OVERLAY_ARCH}-installer && /tmp/s6-overlay-${OVERLAY_ARCH}-installer / && rm /tmp/s6-overlay-${OVERLAY_ARCH}-installer\n\n# environment variables\nENV PS1=\"$(whoami)@$(hostname):$(pwd)\\\\$ \" \\\nHOME=\"/root\" \\\nTERM=\"xterm\"\n\nRUN \\\n echo \"**** install build packages ****\" && \\\n apk add --no-cache --virtual=build-dependencies \\\n\tcurl \\\n\ttar && \\\n echo \"**** install runtime packages ****\" && \\\n apk add --no-cache \\\n\tbash \\\n\tca-certificates \\\n\tcoreutils \\\n\tprocps \\\n\tshadow \\\n\ttzdata && \\\n echo \"**** create abc user and make our folders ****\" && \\\n groupmod -g 1000 users && \\\n useradd -u 911 -U -d /config -s /bin/false abc && \\\n usermod -G users abc && \\\n mkdir -p \\\n\t/app \\\n\t/config \\\n\t/defaults && \\\n mv /usr/bin/with-contenv /usr/bin/with-contenvb && \\\n echo \"**** cleanup ****\" && \\\n apk del --purge \\\n\tbuild-dependencies && \\\n rm -rf \\\n\t/tmp/*\n\n# add local files\nCOPY root-i386/ /\n\n\n# install packages\nRUN \\\n echo \"**** install build packages ****\" && \\\n apk add --no-cache \\\n\tapache2-utils \\\n\tgit \\\n\tlibressl3.1-libssl \\\n\tlogrotate \\\n\tnano \\\n\tnginx \\\n\topenssl \\\n\tphp7 \\\n\tphp7-fileinfo \\\n\tphp7-fpm \\\n\tphp7-json \\\n\tphp7-mbstring \\\n        php7-gettext \\\n\tphp7-openssl \\\n\tphp7-session \\\n\tphp7-simplexml \\\n\tphp7-xml \\\n\tphp7-xmlwriter \\\n\tphp7-zlib && \\\n echo \"**** configure nginx ****\" && \\\n echo 'fastcgi_param  SCRIPT_FILENAME $document_root$fastcgi_script_name;' >> \\\n\t/etc/nginx/fastcgi_params && \\\n rm -f /etc/nginx/conf.d/default.conf && \\\n echo \"**** fix logrotate ****\" && \\\n sed -i \"s#/var/log/messages {}.*# #g\" /etc/logrotate.conf && \\\n sed -i 's#/usr/sbin/logrotate /etc/logrotate.conf#/usr/sbin/logrotate /etc/logrotate.conf -s /config/log/logrotate.status#g' \\\n\t/etc/periodic/daily/logrotate\n\n\n# set version label\nARG BUILD_DATE\nARG VERSION\nARG BBUDDY_RELEASE\nLABEL build_version=\"BarcodeBuddy ${VERSION} Build ${BUILD_DATE}\"\nLABEL maintainer=\"Marc Ole Bulling\"\n\n\n\nRUN \\\n echo \"**** Installing runtime packages ****\" && \\\n apk add --no-cache \\\n        curl \\\n        evtest \\\n        php7 \\\n        php7-curl \\\n        php7-openssl \\\n        php7-gettext \\\n        php7-mbstring \\\n        php7-pdo \\\n        php7-pdo_sqlite \\\n        php7-sqlite3 \\\n        php7-sockets \\\n        screen \\\n        php7-redis \\\n        redis \\\n        sudo\nRUN \\\n echo \"**** Installing BarcodeBuddy ****\" && \\\n mkdir -p /app/bbuddy && \\\n if [ -z ${BBUDDY_RELEASE+x} ]; then \\\n\tBBUDDY_RELEASE=$( curl -f -sX GET \"https://api.github.com/repos/Forceu/barcodebuddy/releases/latest\" \\\n\t| awk '/tag_name/{print $4; exit}' FS='[\"\"]') ; \\\n fi && \\\n curl -f -o \\\n\t/tmp/bbuddy.tar.gz -L \\\n\t\"https://github.com/Forceu/barcodebuddy/archive/${BBUDDY_RELEASE}.tar.gz\" && \\\n tar xf \\\n\t/tmp/bbuddy.tar.gz -C \\\n\t/app/bbuddy/ --strip-components=1 && \\\n   sed -i 's/[[:blank:]]*const[[:blank:]]*IS_DOCKER[[:blank:]]*=[[:blank:]]*false;/const IS_DOCKER = true;/g' /app/bbuddy/config-dist.php && \\\n echo \"Set disable_coredump false\" > /etc/sudo.conf && \\\nsed -i 's/SCRIPT_LOCATION=.*/SCRIPT_LOCATION=\"\\/app\\/bbuddy\\/index.php\"/g' /app/bbuddy/example/grabInput.sh && \\\n sed -i 's/pm.max_children = 5/pm.max_children = 20/g' /etc/php7/php-fpm.d/www.conf && \\\nsed -i 's/WWW_USER=.*/WWW_USER=\"abc\"/g' /app/bbuddy/example/grabInput.sh && \\\nsed -i 's/IS_DOCKER=.*/IS_DOCKER=true/g' /app/bbuddy/docker/parseEnv.sh && \\\nsed -i 's/IS_DOCKER=.*/IS_DOCKER=true/g' /app/bbuddy/example/grabInput.sh && \\\nsed -i 's/const DEFAULT_USE_REDIS =.*/const DEFAULT_USE_REDIS = \"1\";/g' /app/bbuddy/incl/db.inc.php && \\\n(crontab -l 2>/dev/null; echo \"* * * * * sudo -u abc /usr/bin/php /app/bbuddy/cron.php >/dev/null 2>&1\") | crontab - && \\\necho \"**** Cleanup ****\" && \\\n rm -rf \\\n\t/root/.cache \\\n\t/tmp/* && rm /tmp/bbuddy.tar.gz\n\n#Bug in sudo requires disable_coredump\n#Max children need to be a higher value, otherwise websockets / SSE might not work properly\n\nEXPOSE 80 443\nVOLUME /config\n\nENTRYPOINT [\"/init\"]\n\n"
}