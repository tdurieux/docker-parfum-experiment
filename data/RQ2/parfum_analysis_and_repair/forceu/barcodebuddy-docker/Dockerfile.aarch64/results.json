{
  "startTime": 1674220115767,
  "endTime": 1674220116658,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 18,
        "columnEnd": 97
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 39,
        "lineEnd": 41,
        "columnStart": 1,
        "columnEnd": 74
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 42,
        "lineEnd": 44,
        "columnStart": 1,
        "columnEnd": 34
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM lsiobase/nginx:arm64v8-3.11\n\n\n#Build example: docker build --no-cache --pull --build-arg BUILD_DATE=`date -u +\"%Y-%m-%dT%H:%M:%SZ\"` --build-arg VERSION=\"v1.4.0.0\" -t forceu/barcodebuddy-docker -f Dockerfile.aarch64 .\n\n# set version label\nARG BUILD_DATE\nARG VERSION\nARG BBUDDY_RELEASE\nLABEL build_version=\"BarcodeBuddy ${VERSION} Build ${BUILD_DATE}\"\nLABEL maintainer=\"Marc Ole Bulling\"\n\n\n#Uncomment the line below, if compiling on an x64/x86 machine\n#COPY qemu-aarch64-static /usr/bin/qemu-aarch64-static\n\nRUN \\\n echo \"**** Installing runtime packages ****\" && \\\n apk add --no-cache \\\n        curl \\\n        evtest \\\n        php7 \\\n        php7-curl \\\n        php7-openssl \\\n        php7-pdo \\\n        php7-pdo_sqlite \\\n        php7-sqlite3 \\\n        php7-sockets \\\n        php7-redis \\\n        redis \\\n        screen \\\n        sudo\nRUN \\\n echo \"**** Installing BarcodeBuddy ****\" && \\\n mkdir -p /app/bbuddy && \\\n if [ -z ${BBUDDY_RELEASE+x} ]; then \\\n\tBBUDDY_RELEASE=$( curl -f -sX GET \"https://api.github.com/repos/Forceu/barcodebuddy/releases/latest\" \\\n\t| awk '/tag_name/{print $4; exit}' FS='[\"\"]') ; \\\n fi && \\\n curl -f -o \\\n\t/tmp/bbuddy.tar.gz -L \\\n\t\"https://github.com/Forceu/barcodebuddy/archive/${BBUDDY_RELEASE}.tar.gz\" && \\\n tar xf \\\n\t/tmp/bbuddy.tar.gz -C \\\n\t/app/bbuddy/ --strip-components=1 && \\\n sed -i 's/[[:blank:]]*const[[:blank:]]*IS_DOCKER[[:blank:]]*=[[:blank:]]*false;/const IS_DOCKER = true;/g' /app/bbuddy/config-dist.php && \\\n echo \"Set disable_coredump false\" > /etc/sudo.conf && \\\nsed -i 's/SCRIPT_LOCATION=.*/SCRIPT_LOCATION=\"\\/app\\/bbuddy\\/index.php\"/g' /app/bbuddy/example/grabInput.sh && \\\n sed -i 's/pm.max_children = 5/pm.max_children = 20/g' /etc/php7/php-fpm.d/www.conf && \\\nsed -i 's/WWW_USER=.*/WWW_USER=\"abc\"/g' /app/bbuddy/example/grabInput.sh && \\\nsed -i 's/IS_DOCKER=.*/IS_DOCKER=true/g' /app/bbuddy/docker/parseEnv.sh && \\\nsed -i 's/IS_DOCKER=.*/IS_DOCKER=true/g' /app/bbuddy/example/grabInput.sh && \\\nsed -i 's/const DEFAULT_USE_REDIS =.*/const DEFAULT_USE_REDIS = \"1\";/g' /app/bbuddy/incl/db.inc.php && \\\n(crontab -l 2>/dev/null; echo \"* * * * * sudo -u abc /usr/bin/php /app/bbuddy/cron.php >/dev/null 2>&1\") | crontab - && \\\necho \"**** Cleanup ****\" && \\\n rm -rf \\\n\t/root/.cache \\\n\t/tmp/* && rm /tmp/bbuddy.tar.gz\n#Bug in sudo requires disable_coredump\n#Max children need to be a higher value, otherwise websockets / SSE might not work properly\n\n# copy local files\nCOPY root/ /\n\n# ports and volumes\nEXPOSE 80 443\nVOLUME /config\n"
}