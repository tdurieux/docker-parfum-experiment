{
  "startTime": 1674250383264,
  "endTime": 1674250384047,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM registry.gitlab.com/rust_musl_docker/image:stable-1.46.0\n\nWORKDIR /work\nRUN mkdir -p src && mkdir -p ganbare_backend/src\n\n# Unfortunately, because Docker doesn't support logic in setting environment variables,\n# we have to do some contorted things here with Bash variable substitution\nARG DEBUG\nENV OUT_DIR=${DEBUG:+debug}\nENV OUT_DIR=${OUT_DIR:-release}\n\n# TODO: fix this when cargo's --out-dir becomes stable: let the user just set the build flag, and fix the output directory instead.\nENV BUILD_FLAG=--${OUT_DIR}\n\n# Pre-build and cache the dependencies\nCOPY Cargo.toml Cargo.lock ./\nCOPY ganbare_backend/Cargo.toml ganbare_backend/Cargo.lock ./ganbare_backend/\nRUN echo \"fn main() {}\" > src/main.rs && touch ganbare_backend/src/lib.rs\nRUN export BUILD_FLAG=\"${BUILD_FLAG#--debug}\" && cargo build -v $BUILD_FLAG --target=x86_64-unknown-linux-musl\n\nARG BUILDTIME_PEPPER\nENV GANBARE_BUILDTIME_PEPPER=${BUILDTIME_PEPPER}\nCOPY ganbare_backend ./ganbare_backend\nCOPY migrations ./migrations\nRUN touch ganbare_backend/src/lib.rs\nRUN export BUILD_FLAG=\"${BUILD_FLAG#--debug}\" && cargo build -v $BUILD_FLAG --target=x86_64-unknown-linux-musl\n\nCOPY src/*.rs ./src/\nCOPY templates ./templates\nRUN touch src/main.rs\nRUN export BUILD_FLAG=\"${BUILD_FLAG#--debug}\" && cargo build -v $BUILD_FLAG --target=x86_64-unknown-linux-musl\n\n\n\nFROM node:14-alpine3.12\nRUN apk add --no-cache sassc\n\nWORKDIR /work\nCOPY static ./static\n\nCOPY src/sass ./src/sass\nRUN sassc src/sass/main.scss static/css/main.css\n\nCOPY tsconfig.json .\nCOPY src/ts ./src/ts\nRUN npm install -g typescript && npm cache clean --force;\nRUN tsc\n\n\n\nFROM alpine\nWORKDIR /srv\n\nARG DEBUG\nENV OUT_DIR=${DEBUG:+debug}\nENV OUT_DIR=${OUT_DIR:-release}\n\nCOPY --from=0 /work/target/x86_64-unknown-linux-musl/${OUT_DIR}/ganbare .\nCOPY --from=0 /etc/ssl/certs/ca-certificates.crt ./ca-certificates.ctr\nCOPY --from=1 /work/static ./static\nCOPY private_assets ./private_assets\n\nVOLUME /srv/audio /srv/images /srv/user_audio\nENV GANBARE_SERVER_BINDING=0.0.0.0:8080 \\\n\tGANBARE_JQUERY=https://ajax.googleapis.com/ajax/libs/jquery/3.1.1/jquery.min.js \\\n\tGANBARE_FONT_URL=https://fonts.googleapis.com/css?family=Source+Sans+Pro:300 \\\n\tSSL_CERT_FILE=/srv/ca-certificates.crt\n\nEXPOSE 8080\nCMD [\"/srv/ganbare\"]\n"
}