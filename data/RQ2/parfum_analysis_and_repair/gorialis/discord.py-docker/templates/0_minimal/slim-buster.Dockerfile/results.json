{
  "startTime": 1674218839230,
  "endTime": 1674218840830,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "{% include 'WARNING' %}\nARG PYTHON_VERSION\n\nFROM python:$PYTHON_VERSION-slim-buster\n{% include 'LABEL' %}\n\nENV RUSTUP_HOME=/usr/local/rustup \\\n    CARGO_HOME=/usr/local/cargo \\\n    PATH=/usr/local/cargo/bin:$PATH \\\n    RUST_VERSION=1.50.0\n\nRUN apt-get update && \\\n    # basic deps\n    apt-get install --no-install-recommends -y -qq git mercurial cloc openssl ssh gettext sudo build-essential wget \\\n    # voice support\n    libffi-dev libsodium-dev libopus-dev ffmpeg \\\n    # apt is so noisy\n    > /dev/null && \\\n    # install rust with rustup\n    dpkgArch=\"$(dpkg --print-architecture)\" && \\\n    case \"${dpkgArch##*-}\" in \\\n        amd64) rustArch='x86_64-unknown-linux-gnu'; rustupSha256='ed7773edaf1d289656bdec2aacad12413b38ad0193fff54b2231f5140a4b07c5' ;; \\\n        armhf) rustArch='armv7-unknown-linux-gnueabihf'; rustupSha256='7a7b9d246ad63358705d8d4a7d5c2ef1adfec24525d1d5c44a7739e1b867e84d' ;; \\\n        arm64) rustArch='aarch64-unknown-linux-gnu'; rustupSha256='f80a0a792b3ab905ab4919474daf4d3f60e574fc6987e69bfba2fd877241a8de' ;; \\\n        i386) rustArch='i686-unknown-linux-gnu'; rustupSha256='4473c18286aa1831683a772706d9a5c98b87a61cc014d38063e00a63a480afef' ;; \\\n        *) echo >&2 \"unsupported architecture: ${dpkgArch}\"; exit 1 ;; \\\n    esac && \\\n    rustup_url=\"https://static.rust-lang.org/rustup/archive/1.23.1/${rustArch}/rustup-init\" && \\\n    wget \"$rustup_url\" && \\\n    echo \"${rustupSha256}  *rustup-init\" | sha256sum -c - && \\\n    chmod +x rustup-init && \\\n    ./rustup-init -y --no-modify-path --profile minimal --default-toolchain $RUST_VERSION --default-host ${rustArch} && \\\n    rm rustup-init && \\\n    chmod -R a+w $RUSTUP_HOME $CARGO_HOME && \\\n    rustup --version && \\\n    cargo --version && \\\n    rustc --version && \\\n    # do this symlink for numpy\n    ln -s /usr/include/locale.h /usr/include/xlocale.h && \\\n    # update pip, install Cython, pytest, youtube-dl\n    pip install --no-cache-dir -U pip Cython pytest youtube-dl -q --retries 30 && \\\n    # remove caches\n    rm -rf /root/.cache/pip/* && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    find /usr/local -depth \\\n        \\( \\\n            \\( -type d -a \\( -name test -o -name tests \\) \\) \\\n            -o \\\n            \\( -type f -a \\( -name '*.pyc' -o -name '*.pyo' \\) \\) \\\n        \\) -exec rm -rf '{}' +\n\nWORKDIR /app\n\nCMD [\"python\"]\n"
}