{
  "startTime": 1674248783471,
  "endTime": 1674248784189,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 56
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# WARNING: THIS DOCKERFILE IS AUTO-GENERATED\n# DIRECT EDITS WILL BE DESTROYED WHEN THIS FILE IS NEXT GENERATED\n# PLEASE EDIT THE TEMPLATES INSTEAD OF THIS FILE\n#\nARG PYTHON_VERSION\n\nFROM python:$PYTHON_VERSION-alpine\n\nARG BUILD_TIME=unknown\nARG GIT_HEAD=unknown\nLABEL maintainer=\"Devon R <Gorialis>\"\nLABEL creation_time=\"2022-04-30 14:48:12 UTC\"\nLABEL build_time=$BUILD_TIME\nLABEL git_head=$GIT_HEAD\n\nENV LD_LIBRARY_PATH=/usr/local/lib:/usr/lib \\\n    RUSTUP_HOME=/usr/local/rustup \\\n    CARGO_HOME=/usr/local/cargo \\\n    PATH=/usr/local/cargo/bin:$PATH \\\n    RUST_VERSION=1.50.0\n\n# add extra apk repositories to allow more deps to be resolved in-house\nRUN \\\n    echo \"http://dl-8.alpinelinux.org/alpine/edge/community\" >> /etc/apk/repositories && \\\n    echo \"http://dl-8.alpinelinux.org/alpine/edge/testing\" >> /etc/apk/repositories\n\nRUN \\\n\n    apk --no-cache add -q git mercurial cloc openssl openssl-dev openssh alpine-sdk bash gettext sudo build-base gnupg linux-headers xz \\\n    # voice support\n    libffi-dev libsodium-dev opus-dev ffmpeg && \\\n    # install rust with rustup\n    unameArch=\"$(uname -m)\" && \\\n    case \"${unameArch##*-}\" in \\\n        x86_64) rustArch='x86_64-unknown-linux-musl'; rustupSha256='05c5c05ec76671d73645aac3afbccf2187352fce7e46fc85be859f52a42797f6' ;; \\\n        aarch64) rustArch='aarch64-unknown-linux-musl'; rustupSha256='6a8a480d8d9e7f8c6979d7f8b12bc59da13db67970f7b13161ff409f0a771213' ;; \\\n        *) echo >&2 \"unsupported architecture: ${dpkgArch}\"; exit 1 ;; \\\n    esac && \\\n    rustup_url=\"https://static.rust-lang.org/rustup/archive/1.23.1/${rustArch}/rustup-init\" && \\\n    wget \"$rustup_url\" && \\\n    echo \"${rustupSha256}  *rustup-init\" | sha256sum -c - && \\\n    chmod +x rustup-init && \\\n    ./rustup-init -y --no-modify-path --profile minimal --default-toolchain $RUST_VERSION --default-host ${rustArch} && \\\n    rm rustup-init && \\\n    chmod -R a+w $RUSTUP_HOME $CARGO_HOME && \\\n    rustup --version && \\\n    cargo --version && \\\n    rustc --version && \\\n    # do this symlink for numpy\n    ln -s /usr/include/locale.h /usr/include/xlocale.h && \\\n    # update pip, install Cython, pytest, youtube-dl\n    pip install --no-cache-dir -U pip Cython pytest youtube-dl -q --retries 30 && \\\n    # remove caches\n    rm -rf /root/.cache/pip/* && \\\n    rm -rf /var/cache/apk/* && \\\n    find /usr/local -depth \\\n        \\( \\\n            \\( -type d -a \\( -name test -o -name tests \\) \\) \\\n            -o \\\n            \\( -type f -a \\( -name '*.pyc' -o -name '*.pyo' \\) \\) \\\n        \\) -exec rm -rf '{}' +\n\nWORKDIR /app\n\nCMD [\"python\"]"
}