{
  "startTime": 1674249799747,
  "endTime": 1674249800547,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 21
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "###############\n# Development #\n###############\nFROM node:lts AS development\n\nWORKDIR /api\n\nCOPY package*.json ./\n\nRUN npm install glob rimraf && npm cache clean --force;\n\nRUN npm install --only=development && npm cache clean --force;\n\nCOPY . .\n\nRUN npm run build\n\n#########\n# Build #\n#########\n\nFROM node:lts-alpine AS build\n\nENV NODE_ENV build\n\nWORKDIR /usr/src/app\n\nCOPY . /usr/src/app\n\nRUN npm install && \\\n    npm run build && npm cache clean --force;\n\n##############\n# Production #\n##############\n\nFROM node:lts-alpine AS prod\n\nRUN apk add --no-cache dumb-init\n\nENV NODE_ENV production\nENV PORT 80\n\nWORKDIR /usr/src/app\n\nCOPY package*.json ./\n\nRUN npm install --only=production && npm cache clean --force;\n\nUSER node\n\nCOPY --chown=node:node --from=build /usr/src/app/dist /usr/src/app\n\nEXPOSE ${PORT}\n\nCMD [\"dumb-init\", \"node\", \"main.js\"]\n"
}