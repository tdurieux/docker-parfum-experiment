{
  "startTime": 1674251151594,
  "endTime": 1674251152196,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 81,
        "columnEnd": 86
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:14-alpine AS base\nRUN mkdir -p /home/node/app && chown -R node:node /home/node/app\nWORKDIR /home/node/app\n\nFROM base AS build-setup\nRUN apk add --no-cache git bash autoconf automake libtool binutils gcc g++ make python\n\nFROM build-setup AS build\nARG NODE_AUTH_TOKEN\nUSER node\nCOPY --chown=node:node . .\nRUN mv dev.js index.js\nRUN npm i --package-lock-only && npm ci --no-optional --production && cd test && npm i && npm cache clean --force;\n# RUN node index.js bundle --webpack-mode production --bundle-mode production\n\nFROM base AS release\nCOPY --from=build --chown=node:node /home/node/app ./\nEXPOSE 10443\nENV NODE_ENV=production\nCMD [ \"node\", \"index\"]\n"
}