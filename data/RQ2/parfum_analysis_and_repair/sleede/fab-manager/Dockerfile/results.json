{
  "startTime": 1674250369650,
  "endTime": 1674250370931,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 6,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 16
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ruby:2.6.10-alpine\nMAINTAINER contact@fab-manager.com\n\n# Install upgrade system packages\nRUN apk update && apk upgrade && \\\n# Install runtime apk dependencies\n    apk add --no-cache --update \\\n      bash \\\n      curl \\\n      nodejs \\\n      yarn \\\n      git \\\n      openssh \\\n      imagemagick \\\n      supervisor \\\n      tzdata \\\n      libc-dev \\\n      ruby-dev \\\n      zlib-dev \\\n      xz-dev \\\n      postgresql-dev \\\n      postgresql-client \\\n      libxml2-dev \\\n      libxslt-dev \\\n      libsass-dev \\\n      libsass \\\n      libc6-compat \\\n      libidn-dev && \\\n# Install buildtime apk dependencies\n    apk add --update --no-cache --virtual .build-deps \\\n      alpine-sdk \\\n      build-base \\\n      linux-headers \\\n      patch\n\n# Fix bug: LoadError: Could not open library '/usr/local/bundle/gems/sassc-2.1.0-x86_64-linux/lib/sassc/libsass.so': Error loading shared library ld-linux-x86-64.so.2: No such file or directory (needed by /usr/local/bundle/gems/sassc-2.1.0-x86_64-linux/lib/sassc/libsass.so)\n# add libsass-dev libsass libc6-compat and env below\nENV LD_LIBRARY_PATH=/lib64\n\nRUN gem install bundler\n\n# Throw error if Gemfile has been modified since Gemfile.lock\nRUN bundle config --global frozen 1\n\n# Install gems in a cache efficient way\nWORKDIR /tmp\nCOPY Gemfile* /tmp/\nRUN bundle config set --local without 'development test doc' && bundle install && bundle binstubs --all\n\n# Prepare the application directories\nRUN mkdir -p /var/log/supervisor && \\\n    mkdir -p /usr/src/app/tmp/sockets && \\\n    mkdir -p /usr/src/app/tmp/pids && \\\n    mkdir -p /usr/src/app/tmp/cache && \\\n    mkdir -p /usr/src/app/log && \\\n    mkdir -p /usr/src/app/node_modules && \\\n    mkdir -p /usr/src/app/public/api && \\\n    chmod -R a+w /usr/src/app && \\\n    chmod -R a+w /var/run && rm -rf /usr/src/app/tmp/sockets\n\n# Install Javascript packages\nWORKDIR /usr/src/app\nCOPY package.json /usr/src/app/package.json\nCOPY yarn.lock /usr/src/app/yarn.lock\nRUN yarn install && yarn cache clean;\n\n# Clean up build deps, cached packages and temp files\nRUN apk del .build-deps && \\\n    yarn cache clean && \\\n    rm -rf /tmp/* \\\n           /var/tmp/* \\\n           /var/cache/apk/* \\\n           /usr/lib/ruby/gems/*/cache/* && \\\n    chmod -R a+w /usr/src/app/node_modules\n\n# Copy source files\nCOPY docker/database.yml /usr/src/app/config/database.yml\nCOPY . /usr/src/app\n\n# Volumes (the folders are created by setup.sh)\nVOLUME /usr/src/app/invoices \\\n       /usr/src/app/payment_schedules \\\n       /usr/src/app/exports \\\n       /usr/src/app/imports \\\n       /usr/src/app/public \\\n       /usr/src/app/public/uploads \\\n       /usr/src/app/public/packs \\\n       /usr/src/app/accounting \\\n       /usr/src/app/proof_of_identity_files \\\n       /var/log/supervisor\n\n# Expose port 3000 to the Docker host, so we can access it from the outside\nEXPOSE 3000\n\n# The main command to run when the container starts. Also tell the Rails server\n# to bind to all interfaces by default.\nCOPY docker/supervisor.conf /etc/supervisor/conf.d/fabmanager.conf\nCMD [\"/usr/bin/supervisord\", \"-c\", \"/etc/supervisor/conf.d/fabmanager.conf\"]\n"
}