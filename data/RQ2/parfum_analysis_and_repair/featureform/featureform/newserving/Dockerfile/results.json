{
  "startTime": 1674246982908,
  "endTime": 1674246984865,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 18,
        "columnEnd": 38
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# docker build -f ./newserving/Dockerfile . -t serving in /serving\n# docker tag serving:latest featureformcom/serving:latest\n# docker push featureformcom/serving:latest\nFROM golang:1.17-alpine\n\nWORKDIR /app\n\nCOPY go.mod ./\nCOPY go.sum ./\n\nCOPY ./metadata/proto/metadata.proto ./metadata/proto/metadata.proto\nCOPY ./proto/ ./proto/\nRUN apk update && apk add --no-cache protobuf-dev && go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@latest && go install google.golang.org/protobuf/cmd/protoc-gen-go@latest\nENV PATH /go/bin:$PATH\nRUN protoc --go_out=. --go_opt=paths=source_relative --go-grpc_out=. --go-grpc_opt=paths=source_relative ./metadata/proto/metadata.proto\nRUN protoc --go_out=. --go_opt=paths=source_relative     --go-grpc_out=. --go-grpc_opt=paths=source_relative     ./proto/serving.proto\n\nCOPY newserving/*.go ./newserving/\nCOPY ./metadata/ ./metadata/\nCOPY ./metrics/ ./metrics/\nCOPY ./provider/ ./provider/\nCOPY newserving/main/main.go ./newserving/main/main.go\n\nEXPOSE 8080\nENTRYPOINT [\"go\", \"run\", \"./newserving/main/main.go\"]"
}