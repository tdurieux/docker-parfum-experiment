{
  "startTime": 1674254297228,
  "endTime": 1674254298750,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 91
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 21
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# The build stage\n# ---------------\nFROM python:3.9-bullseye as build-stage\n\n# VULN_SCAN_TIME=2022-07-11_05:24:45\n\nWORKDIR /build-stage\n\n# Build wheels for packages that require gcc or other build dependencies and\n# lack wheels either for amd64 or aarch64.\n#\n#   - https://pypi.org/project/pycurl/#files, no wheels available as of 7.45.1.\n#     See https://github.com/pycurl/pycurl/issues/738.\n#   - https://pypi.org/project/ruamel.yaml.clib/#files, no aarch64 wheels\n#     available as of 0.2.6. See\n#     https://sourceforge.net/p/ruamel-yaml-clib/tickets/4/.\n#\n# If you find a dependency here no longer listed in requirements.txt, remove it\n# from here as well. The more wheels we build here and copy and then install,\n# where the copy and install are separate steps, the larger the final image\n# becomes.\n#\nCOPY requirements.txt requirements.txt\nRUN pip install --no-cache-dir build \\\n && pip wheel \\\n        $(cat requirements.txt | grep \"pycurl==\") \\\n        $(cat requirements.txt | grep \"ruamel-yaml-clib==\")\n\n\n# The final stage\n# ---------------\nFROM python:3.9-slim-bullseye\n\nARG NB_USER=jovyan\nARG NB_UID=1000\nARG HOME=/home/jovyan\nENV DEBIAN_FRONTEND=noninteractive \\\n    LANG=C.UTF-8\n\nRUN adduser --disabled-password \\\n        --gecos \"Default user\" \\\n        --uid ${NB_UID} \\\n        --home ${HOME} \\\n        --force-badname \\\n        ${NB_USER}\n\nRUN apt-get update && \\\n    apt-get upgrade -y && \\\n    apt-get install -y --no-install-recommends \\\n        # misc network utilities\n        curl \\\n        dnsutils \\\n        git \\\n        # misc other utilities\n        less \\\n        vim \\\n        # requirement for pycurl\n        libcurl4 \\\n        # requirement for using a local sqlite database\n        sqlite3 \\\n && rm -rf /var/lib/apt/lists/*\n\nRUN if [ \"$(uname -m)\" = x86_64 ]; then ARCH=amd64; fi; \\\n    if [ \"$(uname -m)\" = aarch64 ]; then ARCH=arm64; fi; \\\n    curl -f -sSLo /tini \"https://github.com/krallin/tini/releases/download/v0.19.0/tini-$ARCH\" \\\n && chmod +x /tini\n\nCOPY --from=build-stage /build-stage/*.whl /tmp/pre-built-wheels/\nCOPY requirements.txt /tmp/requirements.txt\nRUN pip install --no-cache-dir \\\n        /tmp/pre-built-wheels/*.whl \\\n        -r /tmp/requirements.txt\n\nWORKDIR /srv/jupyterhub\nRUN chown ${NB_USER}:${NB_USER} /srv/jupyterhub\nUSER ${NB_USER}\n\nEXPOSE 8081\nENTRYPOINT [\"/tini\", \"--\"]\nCMD [\"jupyterhub\", \"--config\", \"/usr/local/etc/jupyterhub/jupyterhub_config.py\"]\n"
}