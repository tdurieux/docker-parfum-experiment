{
  "startTime": 1674248527498,
  "endTime": 1674248529013,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 116,
        "lineEnd": 116,
        "columnStart": 4,
        "columnEnd": 126
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 98,
        "columnStart": 7,
        "columnEnd": 21
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:20.04\nENV DEBIAN_FRONTEND noninteractive\n\nLABEL org.opencontainers.image.title \"FollowTheMoney File Ingestors\"\nLABEL org.opencontainers.image.licenses MIT\nLABEL org.opencontainers.image.source https://github.com/alephdata/ingest-file\n\n# Enable non-free archive for `unrar`.\n# RUN echo \"deb http://http.us.debian.org/debian stretch non-free\" >/etc/apt/sources.list.d/nonfree.list\nRUN apt-get -qq -y update \\\n    && apt-get -qq --no-install-recommends -y install build-essential locales ca-certificates \\\n    # python deps (mostly to install their dependencies)\n    python3-pip python3-dev python3-pil \\\n    # tesseract\n    tesseract-ocr libtesseract-dev libleptonica-dev pkg-config \\\n    # libraries\n    libxslt1-dev libpq-dev libldap2-dev libsasl2-dev \\\n    zlib1g-dev libicu-dev libxml2-dev \\\n    # package tools\n    unrar p7zip-full \\\n    # audio & video metadata\n    libmediainfo-dev \\\n    # image processing, djvu\n    imagemagick-common imagemagick mdbtools djvulibre-bin \\\n    libtiff5-dev libjpeg-dev libfreetype6-dev libwebp-dev \\\n    libtiff-tools ghostscript librsvg2-bin \\\n    # pdf processing toolkit\n    poppler-utils poppler-data pst-utils \\\n    ### tesseract\n    tesseract-ocr-eng \\\n    tesseract-ocr-swa \\\n    tesseract-ocr-swe \\\n    # tesseract-ocr-tam \\\n    # tesseract-ocr-tel \\\n    tesseract-ocr-fil \\\n    # tesseract-ocr-tha \\\n    tesseract-ocr-tur \\\n    tesseract-ocr-ukr \\\n    # tesseract-ocr-vie \\\n    tesseract-ocr-nld \\\n    tesseract-ocr-nor \\\n    tesseract-ocr-pol \\\n    tesseract-ocr-por \\\n    tesseract-ocr-ron \\\n    tesseract-ocr-rus \\\n    tesseract-ocr-slk \\\n    tesseract-ocr-slv \\\n    tesseract-ocr-spa \\\n    # tesseract-ocr-spa_old \\\n    tesseract-ocr-sqi \\\n    tesseract-ocr-srp \\\n    tesseract-ocr-ind \\\n    tesseract-ocr-isl \\\n    tesseract-ocr-ita \\\n    # tesseract-ocr-ita_old \\\n    # tesseract-ocr-jpn \\\n    tesseract-ocr-kan \\\n    tesseract-ocr-kat \\\n    # tesseract-ocr-kor \\\n    tesseract-ocr-khm \\\n    tesseract-ocr-lav \\\n    tesseract-ocr-lit \\\n    # tesseract-ocr-mal \\\n    tesseract-ocr-mkd \\\n    tesseract-ocr-mya \\\n    tesseract-ocr-mlt \\\n    tesseract-ocr-msa \\\n    tesseract-ocr-est \\\n    # tesseract-ocr-eus \\\n    tesseract-ocr-fin \\\n    tesseract-ocr-fra \\\n    tesseract-ocr-frk \\\n    # tesseract-ocr-frm \\\n    # tesseract-ocr-glg \\\n    # tesseract-ocr-grc \\\n    tesseract-ocr-heb \\\n    tesseract-ocr-hin \\\n    tesseract-ocr-hrv \\\n    tesseract-ocr-hye \\\n    tesseract-ocr-hun \\\n    # tesseract-ocr-ben \\\n    tesseract-ocr-bul \\\n    tesseract-ocr-cat \\\n    tesseract-ocr-ces \\\n    tesseract-ocr-nep \\\n    # tesseract-ocr-chi_sim \\\n    # tesseract-ocr-chi_tra \\\n    # tesseract-ocr-chr \\\n    tesseract-ocr-dan \\\n    tesseract-ocr-deu \\\n    tesseract-ocr-ell \\\n    # tesseract-ocr-enm \\\n    # tesseract-ocr-epo \\\n    # tesseract-ocr-equ \\\n    tesseract-ocr-afr \\\n    tesseract-ocr-ara \\\n    tesseract-ocr-aze \\\n    tesseract-ocr-bel \\\n    tesseract-ocr-uzb \\\n    ###\n    && apt-get -qq -y autoremove \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \\\n    && localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8\n\n# Set up the locale and make sure the system uses unicode for the file system.\nENV LANG='en_US.UTF-8' \\\n    TZ='UTC' \\\n    OMP_THREAD_LIMIT='1' \\\n    OPENBLAS_NUM_THREADS='1'\n\nRUN groupadd -g 1000 -r app \\\n    && useradd -m -u 1000 -s /bin/false -g app app\n\n# Download the ftm-typepredict model\nRUN mkdir /models/ && \\\n    curl -f -o \"/models/model_type_prediction.ftz\" \"https://public.data.occrp.org/develop/models/types/type-08012020-7a69d1b.ftz\"\n\n# Having updated pip/setuptools seems to break the test run for some reason (12/01/2022)\n# RUN pip3 install --no-cache-dir -U pip setuptools\nCOPY requirements.txt /tmp/\nRUN pip3 install --no-cache-dir -r /tmp/requirements.txt\n\n# Install spaCy models\nRUN python3 -m spacy download en_core_web_sm \\\n    && python3 -m spacy download de_core_news_sm \\\n    && python3 -m spacy download fr_core_news_sm \\\n    && python3 -m spacy download es_core_news_sm\nRUN python3 -m spacy download ru_core_news_sm \\\n    && python3 -m spacy download pt_core_news_sm \\\n    && python3 -m spacy download ro_core_news_sm \\\n    && python3 -m spacy download mk_core_news_sm\nRUN python3 -m spacy download el_core_news_sm \\\n    && python3 -m spacy download pl_core_news_sm \\\n    && python3 -m spacy download it_core_news_sm \\\n    && python3 -m spacy download lt_core_news_sm \\\n    && python3 -m spacy download nl_core_news_sm \\\n    && python3 -m spacy download nb_core_news_sm \\\n    && python3 -m spacy download da_core_news_sm\n# RUN python3 -m spacy download zh_core_web_sm\n\nCOPY . /ingestors\nWORKDIR /ingestors\nRUN pip3 install --no-cache-dir -e /ingestors\nRUN chown -R app:app /ingestors\n\nENV ARCHIVE_TYPE=file \\\n    ARCHIVE_PATH=/data \\\n    FTM_STORE_URI=postgresql://aleph:aleph@postgres/aleph \\\n    REDIS_URL=redis://redis:6379/0 \\\n    INGESTORS_CONVERT_DOCUMENT_URL=http://convert-document:3000/convert\n\n# USER app\nCMD ingestors process\n"
}