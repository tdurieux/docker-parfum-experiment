diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/openbsd/src/gnu/llvm/libcxx/utils/ci/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/openbsd/src/gnu/llvm/libcxx/utils/ci/Dockerfile/repaired.Dockerfile
index 276e5a5..9450b8d 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/openbsd/src/gnu/llvm/libcxx/utils/ci/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/openbsd/src/gnu/llvm/libcxx/utils/ci/Dockerfile/repaired.Dockerfile
@@ -33,15 +33,15 @@ FROM ubuntu:bionic
 # Make sure apt-get doesn't try to prompt for stuff like our time zone, etc.
 ENV DEBIAN_FRONTEND=noninteractive
 
-RUN apt-get update && apt-get install -y bash curl
+RUN apt-get update && apt-get install --no-install-recommends -y bash curl && rm -rf /var/lib/apt/lists/*;
 
 # Install various tools used by the build or the test suite
-RUN apt-get update && apt-get install -y ninja-build python3 python3-sphinx python3-distutils git gdb
-RUN apt-get update && apt-get install -y libc6-dev-i386 # Required to cross-compile to 32 bits
+RUN apt-get update && apt-get install --no-install-recommends -y ninja-build python3 python3-sphinx python3-distutils git gdb && rm -rf /var/lib/apt/lists/*;
+RUN apt-get update && apt-get install --no-install-recommends -y libc6-dev-i386 && rm -rf /var/lib/apt/lists/*;
 
 # Install Clang <latest>, <latest-1> and ToT, which are the ones we support.
 ENV LLVM_LATEST_VERSION=12
-RUN apt-get update && apt-get install -y lsb-release wget software-properties-common
+RUN apt-get update && apt-get install --no-install-recommends -y lsb-release wget software-properties-common && rm -rf /var/lib/apt/lists/*;
 RUN wget https://apt.llvm.org/llvm.sh -O /tmp/llvm.sh
 RUN bash /tmp/llvm.sh $(($LLVM_LATEST_VERSION - 1)) # previous release
 RUN bash /tmp/llvm.sh $LLVM_LATEST_VERSION          # latest release
@@ -52,14 +52,14 @@ RUN ln -fs /usr/bin/clang++-$(($LLVM_LATEST_VERSION + 1)) /usr/bin/c++ && [ -e $
 RUN ln -fs /usr/bin/clang-$(($LLVM_LATEST_VERSION + 1)) /usr/bin/cc && [ -e $(readlink /usr/bin/cc) ]
 
 # Install clang-format
-RUN apt-get install -y clang-format-$LLVM_LATEST_VERSION
+RUN apt-get install --no-install-recommends -y clang-format-$LLVM_LATEST_VERSION && rm -rf /var/lib/apt/lists/*;
 RUN ln -s /usr/bin/clang-format-$LLVM_LATEST_VERSION /usr/bin/clang-format && [ -e $(readlink /usr/bin/clang-format) ]
 RUN ln -s /usr/bin/git-clang-format-$LLVM_LATEST_VERSION /usr/bin/git-clang-format && [ -e $(readlink /usr/bin/git-clang-format) ]
 
 # Install the most recent GCC
 ENV GCC_LATEST_VERSION=11
 RUN add-apt-repository ppa:ubuntu-toolchain-r/test
-RUN apt-get update && apt install -y gcc-$GCC_LATEST_VERSION g++-$GCC_LATEST_VERSION
+RUN apt-get update && apt install --no-install-recommends -y gcc-$GCC_LATEST_VERSION g++-$GCC_LATEST_VERSION && rm -rf /var/lib/apt/lists/*;
 
 # Install a recent CMake
 RUN wget https://github.com/Kitware/CMake/releases/download/v3.18.2/cmake-3.18.2-Linux-x86_64.sh -O /tmp/install-cmake.sh
@@ -68,7 +68,7 @@ RUN rm /tmp/install-cmake.sh
 
 # Change the user to a non-root user, since some of the libc++ tests
 # (e.g. filesystem) require running as non-root. Also setup passwordless sudo.
-RUN apt-get update && apt-get install -y sudo
+RUN apt-get update && apt-get install --no-install-recommends -y sudo && rm -rf /var/lib/apt/lists/*;
 RUN echo "ALL ALL = (ALL) NOPASSWD: ALL" >> /etc/sudoers
 RUN useradd --create-home libcxx-builder
 USER libcxx-builder
@@ -76,7 +76,7 @@ WORKDIR /home/libcxx-builder
 
 # Install the Buildkite agent and dependencies. This must be done as non-root
 # for the Buildkite agent to be installed in a path where we can find it.
-RUN bash -c "$(curl -sL https://raw.githubusercontent.com/buildkite/agent/master/install.sh)"
+RUN bash -c "$( curl -f -sL https://raw.githubusercontent.com/buildkite/agent/master/install.sh)" -f
 ENV PATH="${PATH}:/home/libcxx-builder/.buildkite-agent/bin"
 RUN echo "tags=\"queue=libcxx-builders,arch=$(uname -m),os=linux\"" >> "/home/libcxx-builder/.buildkite-agent/buildkite-agent.cfg"