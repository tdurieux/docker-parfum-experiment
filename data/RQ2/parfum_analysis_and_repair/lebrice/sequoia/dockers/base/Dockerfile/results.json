{
  "startTime": 1674250048971,
  "endTime": 1674250050073,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 94,
        "lineEnd": 94,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 59
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM pytorch/pytorch:1.8.1-cuda11.1-cudnn8-runtime\nUSER root\nEXPOSE 2222\nEXPOSE 6000\nEXPOSE 8088\nENV LANG=en_US.UTF-8\nRUN apt update && \\\n    apt install --no-install-recommends -y \\\n    git wget zsh unzip rsync build-essential \\\n        ca-certificates supervisor openssh-server ssh \\\n        curl wget vim procps htop locales nano man net-tools iputils-ping \\\n        libosmesa6-dev libgl1-mesa-glx libgl1-mesa-dev libglu1-mesa-dev libglfw3 \\\n        libglfw3-dev freeglut3 xvfb ffmpeg curl patchelf cmake zlib1g zlib1g-dev \\\n        swig libopenmpi-dev aptitude screen xz-utils locate && \\\n    sed -i \"s/# en_US.UTF-8/en_US.UTF-8/\" /etc/locale.gen && locale-gen && \\\n    useradd -m -u 13011 -s /bin/zsh toolkit && passwd -d toolkit && \\\n    useradd -m -u 13011 -s /bin/zsh --non-unique console && passwd -d console && \\\n    useradd -m -u 13011 -s /bin/zsh --non-unique _toolchain && passwd -d _toolchain && \\\n    useradd -m -u 13011 -s /bin/bash --non-unique coder && passwd -d coder && \\\n    chown -R toolkit:toolkit /run /etc/shadow /etc/profile && \\\n    apt autoremove --purge && apt-get clean && \\\n    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* && \\\n    echo ssh >> /etc/securetty && \\\n    rm -f /etc/legal /etc/motd\n\n# RUN conda install -c conda-forge opencv\nRUN conda install matplotlib numpy scipy hdf5 h5py cython\n# RUN pip install \\\n#     # Needed to build atari_py: (WHY don't they put it in a build_requires?)\n#     lockfile\n    # fasteners \\\n    # pybullet \\\n    # wandb \\\n    # tqdm \\\n    # # tensorflow \\\n    # bs4 \\\n    # pandas notebook plotly tqdm pyamg lxml numba pyyaml torchmeta\n\n# Removing this `torchtext` package, seems to be causing an import issue in pytorch!\nRUN pip uninstall -y torchtext\nRUN chown -R toolkit:root /workspace\nRUN chmod -R 777 /workspace\n# this doesn't do anything\nRUN adduser toolkit sudo\nRUN chown -R toolkit:root /mnt/\n# RUN mkdir -p /mnt/home\nRUN chmod 777 /opt/conda\nRUN chmod 777 /mnt\nRUN chmod -R 777 /workspace\nSHELL [ \"conda\", \"run\", \"-n\", \"base\", \"/bin/bash\", \"-c\"]\n\n## Unused zshell and oh-my-zsh stuff:\n# RUN sh -c \"$(wget -O- https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)\"\n# RUN sed -i 's/robbyrussell/clean/' ~/.zshrc\n# RUN sed -i 's/plugins=(git)/plugins=(git debian history-substring-search)/' ~/.zshrc\n\n\n# MuJoCo-related stuff:\n# RUN curl -o ~/mujoco200_linux.zip -L -C - https://www.roboti.us/download/mujoco200_linux.zip\n# RUN curl -o ~/mjpro150_linux.zip -L -C -  https://www.roboti.us/download/mjpro150_linux.zip\n# RUN cd ~ && unzip mujoco200_linux.zip && rm mujoco200_linux.zip\n# RUN cd ~ && unzip mjpro150_linux.zip && rm mjpro150_linux.zip\n# RUN mkdir ~/.mujoco\n# RUN mv ~/mujoco200_linux ~/.mujoco/mujoco200\n# RUN mv ~/mjpro150 ~/.mujoco\n# RUN echo \"export LD_LIBRARY_PATH=\\$LD_LIBRARY_PATH:~/.mujoco/mujoco200/bin\" >> ~/.bashrc\n# RUN echo \"export LD_LIBRARY_PATH=\\$LD_LIBRARY_PATH:~/.mujoco/mjpro150/bin\" >> ~/.bashrc\n# COPY mjkey.txt /home/toolkit/.mujoco/\n# ENV LD_LIBRARY_PATH /home/toolkit/.mujoco/mujoco200/bin:${LD_LIBRARY_PATH}\n# ENV LD_LIBRARY_PATH /home/toolkit/.mujoco/mjpro150/bin:${LD_LIBRARY_PATH}\n# RUN mkdir /workspace/tools\n# RUN cd /workspace/tools && git clone https://github.com/openai/mujoco-py.git && pip install -e mujoco-py\n\n# For Wandb (TODO: Doesn't appear to work, using env variable with WANDB_API_KEY\n# instead.)\n# COPY .netrc /home/toolkit/.netrc\n# COPY .netrc /root/.netrc\n# COPY .netrc /tmp/.netrc\n\nVOLUME /mnt/data\nVOLUME /mnt/results\n# USER toolkit\n\nENV DATA_DIR=/mnt/data\nENV RESULTS_DIR=/mnt/results\nENV WANDB_DIR=/mnt/results\n\n# VOLUME /mnt/home\n# WORKDIR /mnt/home\nENV PATH /home/toolkit/.local/bin:${PATH}\n# RUN cd /workspace/tools && git clone https://github.com/openai/gym.git && cd gym && pip install -e '.[all]'\n# RUN cd /workspace/tools && git clone https://github.com/openai/baselines.git && cd baselines && pip install -e .\nRUN cd /workspace/ && git clone https://github.com/lebrice/Sequoia.git\nRUN pip install --no-cache-dir -e /workspace/Sequoia[no_mujoco]\nENTRYPOINT [\"conda\", \"run\", \"--no-capture-output\", \"-n\", \"base\", \"/bin/bash\", \"-c\"]\n"
}