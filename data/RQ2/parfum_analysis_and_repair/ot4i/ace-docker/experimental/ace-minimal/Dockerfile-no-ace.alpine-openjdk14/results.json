{
  "startTime": 1674215852020,
  "endTime": 1674215853352,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 7,
        "columnEnd": 99
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 7,
        "columnEnd": 96
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 7,
        "columnEnd": 56
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 7,
        "columnEnd": 47
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 7,
        "columnEnd": 36
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 34
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.14\n\n# docker build -t alpine-openjdk14 -f Dockerfile-no-ace.alpine-openjdk14 .\n\nMAINTAINER Trevor Dolby <tdolby@uk.ibm.com> (@tdolby)\n\nARG JDK_DOWNLOAD_URL=https://download.java.net/java/GA/jdk14.0.1/664493ef4a6946b186ff29eb326336a2/7/GPL/openjdk-14.0.1_linux-x64_bin.tar.gz\nARG JDK_LABEL=jdk-14.0.1\n\n\nRUN apk --update add --no-cache --virtual .build-deps curl binutils zstd \\\n    && GLIBC_VER=\"2.31-r0\" \\\n    && ALPINE_GLIBC_REPO=\"https://github.com/sgerrand/alpine-pkg-glibc/releases/download\" \\\n    && GCC_LIBS_URL=\"https://archive.archlinux.org/packages/g/gcc-libs/gcc-libs-10.1.0-2-x86_64.pkg.tar.zst\" \\\n    && GCC_LIBS_SHA256=f80320a03ff73e82271064e4f684cd58d7dbdb07aa06a2c4eea8e0f3c507c45c \\\n    && ZLIB_URL=\"https://archive.archlinux.org/packages/z/zlib/zlib-1%3A1.2.11-4-x86_64.pkg.tar.xz\" \\\n    && ZLIB_SHA256=43a17987d348e0b395cb6e28d2ece65fb3b5a0fe433714762780d18c0451c149 \\\n    && curl -f -Ls https://alpine-pkgs.sgerrand.com/sgerrand.rsa.pub -o /etc/apk/keys/sgerrand.rsa.pub \\\n    && curl -f -Ls ${ALPINE_GLIBC_REPO}/${GLIBC_VER}/glibc-${GLIBC_VER}.apk > /tmp/${GLIBC_VER}.apk \\\n    && apk add /tmp/${GLIBC_VER}.apk \\\n    && curl -f -Ls ${GCC_LIBS_URL} -o /tmp/gcc-libs.tar.zst \\\n    && echo \"${GCC_LIBS_SHA256}  /tmp/gcc-libs.tar.zst\" | sha256sum -c - \\\n    && mkdir /tmp/gcc \\\n    && zstd -d /tmp/gcc-libs.tar.zst \\\n    && tar -xf /tmp/gcc-libs.tar -C /tmp/gcc \\\n    && mv /tmp/gcc/usr/lib/libgcc* /tmp/gcc/usr/lib/libstdc++* /usr/glibc-compat/lib \\\n    && strip /usr/glibc-compat/lib/libgcc_s.so.* /usr/glibc-compat/lib/libstdc++.so* \\\n    && curl -f -Ls ${ZLIB_URL} -o /tmp/libz.tar.xz \\\n    && echo \"${ZLIB_SHA256}  /tmp/libz.tar.xz\" | sha256sum -c - \\\n    && mkdir /tmp/libz \\\n    && tar -xf /tmp/libz.tar.xz -C /tmp/libz \\\n    && mv /tmp/libz/usr/lib/libz.so* /usr/glibc-compat/lib \\\n    && apk del --purge .build-deps \\\n    && rm -rf /tmp/${GLIBC_VER}.apk /tmp/gcc /tmp/gcc-libs.tar* /tmp/libz /tmp/libz.tar* /var/cache/apk/* \\\n    && mkdir /usr/glibc-compat/zlib-only \\\n    && ( cd /usr/glibc-compat/lib && tar -cf - libz* ) | ( cd /usr/glibc-compat/zlib-only && tar -xf - ) \\\n    && apk add --no-cache 'apk-tools>2.12.5-r1'\n\nENV TZ=Europe/London\n\n# Set the env vars mentioned above\nCOPY profile-with-openjdk14-paths.sh /etc/profile.d/profile-with-openjdk14-paths.sh\nCOPY openjdk14-paths.sh /etc/profile.d/openjdk14-paths.sh\n\n\n# Install openjdk\nRUN mkdir -p /opt/ibm && \\\n    apk add --no-cache binutils zip bash curl && \\\n    cd /opt && \\\n    curl -f ${JDK_DOWNLOAD_URL} | tar -xzf - && \\\n    /opt/${JDK_LABEL}/bin/jlink --strip-debug --no-man-pages --no-header-files --output /opt/openjdk-14 --add-modules java.base,java.compiler,java.datatransfer,java.instrument,java.logging,java.management,java.management.rmi,java.naming,java.net.http,java.prefs,java.rmi,java.scripting,java.se,java.security.jgss,java.security.sasl,java.sql,java.sql.rowset,java.transaction.xa,java.xml,java.xml.crypto,jdk.accessibility,jdk.aot,jdk.attach,jdk.charsets,jdk.compiler,jdk.crypto.cryptoki,jdk.crypto.ec,jdk.dynalink,jdk.hotspot.agent,jdk.internal.ed,jdk.internal.jvmstat,jdk.internal.le,jdk.internal.opt,jdk.internal.vm.ci,jdk.internal.vm.compiler,jdk.internal.vm.compiler.management,jdk.jartool,jdk.jcmd,jdk.jconsole,jdk.jdeps,jdk.jdi,jdk.jdwp.agent,jdk.jfr,jdk.jlink,jdk.management,jdk.management.agent,jdk.management.jfr,jdk.naming.dns,jdk.naming.rmi,jdk.net,jdk.nio.mapmode,jdk.sctp,jdk.security.auth,jdk.security.jgss,jdk.unsupported,jdk.xml.dom,jdk.zipfs && \\\n    rm -rf /opt/${JDK_LABEL} && \\\n    apk del --purge binutils zip curl ncurses-terminfo-base ncurses-libs\n\n\nRUN apk add --no-cache binutils zip bash curl && \\\n    addgroup mqbrkrs\n\n# ln -s /opt/openjdk-14 /opt/ibm/ace-12/common/jdk/jre\n\n# Create a user to run as, create the ace workdir, and chmod script files\nRUN ( echo \"Passw0rd\" ; echo \"Passw0rd\" ) | adduser -h /home/aceuser -s /bin/bash aceuser mqbrkrs && \\\n    adduser aceuser mqbrkrs && \\\n    mkdir /var/mqsi && chmod 777 /var/mqsi\n\nUSER aceuser\nENTRYPOINT [\"bash\"]\n"
}