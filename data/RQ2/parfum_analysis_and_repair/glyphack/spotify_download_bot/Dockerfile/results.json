{
  "startTime": 1674255356839,
  "endTime": 1674255357801,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 4,
        "columnEnd": 58
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM jrottenberg/ffmpeg:4.3-ubuntu\nRUN apt-get update && apt-get install --no-install-recommends -y python3.9 python3 python3-venv curl && rm -rf /var/lib/apt/lists/*;\n\nENV PYTHONUNBUFFERED=1 \\\n    # prevents python creating .pyc files\n    PYTHONDONTWRITEBYTECODE=1 \\\n    # poetry\n    # make poetry install to this location\n    POETRY_HOME=\"/opt/poetry\" \\\n    # make poetry create the virtual environment in the project's root\n    # it gets named `.venv`\n    POETRY_VIRTUALENVS_IN_PROJECT=true \\\n    # do not ask any interactive question\n    POETRY_NO_INTERACTION=1\n\nENV PATH=\"$POETRY_HOME/bin:$VENV_PATH/bin:$PATH\"\nRUN curl -f -sSL https://install.python-poetry.org | python3 -\nEXPOSE 8443\nWORKDIR /app\nCOPY poetry.lock pyproject.toml ./\nRUN poetry install --no-dev\nCOPY . .\nENTRYPOINT [\"poetry\", \"run\", \"python3\", \"bot.py\"]\n"
}