diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/imos/icfpc2019/docker/master.Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/imos/icfpc2019/docker/master.Dockerfile/repaired.Dockerfile
index 5e39a47..5a0ee32 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/imos/icfpc2019/docker/master.Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/imos/icfpc2019/docker/master.Dockerfile/repaired.Dockerfile
@@ -27,7 +27,7 @@ ENV GOPATH=/go
 RUN sed -i.bak -e "s%http://archive.ubuntu.com/ubuntu/%http://asia-northeast1.gce.archive.ubuntu.com/ubuntu/%g" /etc/apt/sources.list
 
 # Install fundamental tools.
-RUN apt-get update -q && apt-get install -qy apt-utils curl && \
+RUN apt-get update -q && apt-get install --no-install-recommends -qy apt-utils curl && \
     apt-get clean -q && rm -rf /var/lib/apt/lists/*
 
 # Do not exclude man pages & other documentation
@@ -39,26 +39,26 @@ RUN apt-get update -q && \
     apt-get clean -q && rm -rf /var/lib/apt/lists/*
 
 # Install C++.
-RUN apt-get update -q && apt-get install -qy clang clang-format g++ && \
+RUN apt-get update -q && apt-get install --no-install-recommends -qy clang clang-format g++ && \
     apt-get clean -q && rm -rf /var/lib/apt/lists/*
 
 # Install C#.
-RUN apt-get update -q && apt-get install -qy gnupg ca-certificates && \
+RUN apt-get update -q && apt-get install --no-install-recommends -qy gnupg ca-certificates && \
     apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 \
         --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF && \
     echo "deb https://download.mono-project.com/repo/ubuntu stable-bionic main" \
         > /etc/apt/sources.list.d/mono-official-stable.list && \
-    apt-get update -qy && apt-get install -qy mono-devel && \
+    apt-get update -qy && apt-get install --no-install-recommends -qy mono-devel && \
     apt-get clean -q && rm -rf /var/lib/apt/lists/*
 
 # Install Java.
-RUN apt-get update && apt-get install -y default-jre default-jdk && \
+RUN apt-get update && apt-get install --no-install-recommends -y default-jre default-jdk && \
     apt-get clean && rm -rf /var/lib/apt/lists/*
 
 # Install Bazel.
-RUN apt-get update -q && apt-get install -qy unzip && \
+RUN apt-get update -q && apt-get install --no-install-recommends -qy unzip && \
     apt-get clean && rm -rf /var/lib/apt/lists/* && \
-    curl -L -o installer \
+    curl -f -L -o installer \
     "https://github.com/bazelbuild/bazel/releases/download/0.26.1/bazel-0.26.1-installer-linux-x86_64.sh" && \
     chmod +x installer && ./installer && rm ./installer && \
     echo 'source /usr/local/lib/bazel/bin/bazel-complete.bash' > /etc/profile.d/99-bazel-complete.sh && \
@@ -66,7 +66,7 @@ RUN apt-get update -q && apt-get install -qy unzip && \
 
 # Install Rust.
 RUN set -eux; \
-    curl -o rustup-init "https://static.rust-lang.org/rustup/archive/1.12.0/x86_64-unknown-linux-gnu/rustup-init"; \
+    curl -f -o rustup-init "https://static.rust-lang.org/rustup/archive/1.12.0/x86_64-unknown-linux-gnu/rustup-init"; \
     chmod +x rustup-init; \
     ./rustup-init -y --no-modify-path --default-toolchain 1.35.0; \
     rm rustup-init; \
@@ -74,7 +74,7 @@ RUN set -eux; \
     rustup --version; cargo --version; rustc --version
 
 # Install Go.
-RUN curl -o go.tar.gz https://dl.google.com/go/go1.12.5.linux-amd64.tar.gz && \
+RUN curl -f -o go.tar.gz https://dl.google.com/go/go1.12.5.linux-amd64.tar.gz && \
     tar -xf go.tar.gz && \
     mv go /usr/local/ && \
     rm go.tar.gz && \
@@ -83,13 +83,13 @@ RUN curl -o go.tar.gz https://dl.google.com/go/go1.12.5.linux-amd64.tar.gz && \
     echo 'GOPATH="/go"' >> /etc/environment
 
 # Install scripts (python, php, ruby).
-RUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y \
+RUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y \
         php-cli php-mysql php-curl php-pear \
         python python-pip python3 python3-pip ruby && \
     apt-get clean && rm -rf /var/lib/apt/lists/*
 
 # Install other useful tools.
-RUN apt-get update && apt-get install -y \
+RUN apt-get update && apt-get install --no-install-recommends -y \
         build-essential devscripts ubuntu-standard software-properties-common \
         screen lxc traceroute gdb \
         vim git subversion mercurial cmake make \
@@ -99,7 +99,7 @@ RUN apt-get update && apt-get install -y \
 RUN mkdir -p /var/run/sshd
 
 # Install protobuf.
-RUN apt-get update -q && apt-get install -qy \
+RUN apt-get update -q && apt-get install --no-install-recommends -qy \
         libprotobuf-dev libprotoc-dev protobuf-compiler && \
     apt-get clean && rm -rf /var/lib/apt/lists/*
 
@@ -107,17 +107,17 @@ RUN apt-get update -q && apt-get install -qy \
 RUN echo 'LANG="en_US.UTF-8"' > /etc/default/locale
 
 # Install additional packages.
-RUN apt-get update && apt-get install -y libssl-dev && \
+RUN apt-get update && apt-get install --no-install-recommends -y libssl-dev && \
     apt-get clean && rm -rf /var/lib/apt/lists/*
 
 # Install gcloud.
 RUN echo "deb http://packages.cloud.google.com/apt" \
         "cloud-sdk-$(lsb_release -c -s) main" \
         > /etc/apt/sources.list.d/google-cloud-sdk.list && \
-    curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | \
+    curl -f https://packages.cloud.google.com/apt/doc/apt-key.gpg | \
         apt-key add - && \
     apt-get update -qqy && \
-    apt-get install -qqy google-cloud-sdk google-cloud-sdk-app-engine-go \
+    apt-get install --no-install-recommends -qqy google-cloud-sdk google-cloud-sdk-app-engine-go \
         google-cloud-sdk-app-engine-python google-cloud-sdk-app-engine-go \
         google-cloud-sdk-datastore-emulator && \
     apt-get clean && rm -rf /var/lib/apt/lists/*
@@ -135,18 +135,18 @@ RUN curl -fsSL https://download.docker.com/linux/ubuntu/gpg | \
         "deb [arch=amd64] https://download.docker.com/linux/ubuntu" \
         "$(lsb_release -cs)" stable)" && \
     apt-get update -qqy && \
-    apt-get install -qyy docker-ce docker-ce-cli containerd.io && \
-    curl -L https://github.com/docker/compose/releases/download/1.24.0/docker-compose-`uname -s`-`uname -m` \
+    apt-get install --no-install-recommends -qyy docker-ce docker-ce-cli containerd.io && \
+    curl -f -L https://github.com/docker/compose/releases/download/1.24.0/docker-compose-`uname -s`-`uname -m` \
         -o /usr/local/bin/docker-compose && \
     chmod +x /usr/local/bin/docker-compose && \
     apt-get clean && rm -rf /var/lib/apt/lists/*
 
 # Install nodejs.
-RUN apt-get update && apt-get install -y nodejs-dev npm && \
+RUN apt-get update && apt-get install --no-install-recommends -y nodejs-dev npm && \
     apt-get clean && rm -rf /var/lib/apt/lists/*
 
 # Install sshfs.
-RUN apt-get update && apt-get install -y jq sshfs && \
+RUN apt-get update && apt-get install --no-install-recommends -y jq sshfs && \
     apt-get clean && rm -rf /var/lib/apt/lists/*
 
 # Install protoc-gen-go.