{
  "startTime": 1674216995448,
  "endTime": 1674216996169,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 63,
        "columnEnd": 126
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 15,
        "columnStart": 7,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 7,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 30,
        "lineEnd": 34,
        "columnStart": 8,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 30,
        "lineEnd": 34,
        "columnStart": 8,
        "columnEnd": 22
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 15,
        "columnStart": 7,
        "columnEnd": 15
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 7,
        "columnEnd": 39
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 30,
        "lineEnd": 34,
        "columnStart": 8,
        "columnEnd": 22
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 30,
        "lineEnd": 34,
        "columnStart": 8,
        "columnEnd": 22
      }
    }
  ],
  "repairedDockerfile": "FROM debian:11-slim\n\n# Install additional packages.\n\nENV DEBIAN_FRONTEND=noninteractive\nENV CONTAINER=docker\nRUN apt-get update \\\r\n    && apt-get -y full-upgrade \\\n    && apt-get -y --no-install-recommends install \\\n    python3 \\\n    python3-apt \\\n    python3-pip \\\n    openssh-server \\\n    curl \\\n    gpg \\\n    lsb-release && rm -rf /var/lib/apt/lists/*;\n\n#\n# Install Docker CE CLI\n#\nRUN curl -fsSL https://download.docker.com/linux/debian/gpg | gpg --batch --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg\nRUN  echo \\\r\n  \"deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/debian \\\r\n  $(lsb_release -cs) stable\" | tee /etc/apt/sources.list.d/docker.list > /dev/null\nRUN apt-get update \\\n    && apt-get -y --no-install-recommends install docker-ce-cli && rm -rf /var/lib/apt/lists/*;\n\n# Install VNC server and desktop environment\nARG INSTALL_VNC=1\nRUN if [ \"$INSTALL_VNC\" = \"1\" ]; then \\\n        apt-get -y --no-install-recommends install \\\n        xfce4 \\\n        xfce4-goodies \\\n        dbus-x11 \\\n        tightvncserver \\\n        # Set VNC server password\r\n        && mkdir /root/.vnc \\\n        && echo test456# | vncpasswd -f > /root/.vnc/passwd \\\n        && chmod 600 /root/.vnc/passwd; rm -rf /var/lib/apt/lists/*; \\\n    fi\n\n# Set root passwd for container\nRUN mkdir /var/run/sshd\nRUN echo 'root:test123#' | chpasswd\nRUN sed -i 's/#PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config\nRUN sed -i 's/#PasswordAuthentication yes/PasswordAuthentication yes/' /etc/ssh/sshd_config\n\n# Configure bash settings\nRUN echo \"source /etc/profile.d/bash_completion.sh\" >> \"/root/.bashrc\"\n\nWORKDIR /root\n\nRUN mkdir $HOME/.cumulocity\nCOPY ./config/ /root/.cumulocity/\nCOPY ./config/DM_Agent.json /root/.cumulocity/DM_Agent.json\n\n# # Install requirements (using pip)\nCOPY setup.py README.md requirements.txt ./\nCOPY ./c8ydm ./c8ydm\nCOPY ./scripts ./scripts\nRUN pip3 install --no-cache-dir --upgrade pip\nRUN pip3 install --no-cache-dir -r requirements.txt\nRUN pip3 install --no-cache-dir .\n\n# Clean up unnecessary packages\nARG CLEAN_PACKAGES=1\nRUN if [ \"$CLEAN_PACKAGES\" = \"1\" ]; then \\\r\n        apt-get -y --purge autoremove \\\r\n        git \\\r\n        bash-completion \\\r\n        locales \\\r\n        python3-all \\\r\n        python3-pip \\\r\n        python3-dev \\\r\n        python3-wheel \\\r\n        python3-stdeb \\\r\n        python3-setuptools \\\r\n        gcc \\\r\n        gfortran \\\r\n        musl-dev \\\r\n        #zlib1g \\\r\n        # curl \\\r\n        gnupg \\\r\n        lsb-release \\\r\n        libjpeg-dev \\\r\n        libjpeg62-turbo-dev \\\r\n        libfreetype6-dev; \\\r\n    fi\n\nCMD scripts/start_docker.sh"
}