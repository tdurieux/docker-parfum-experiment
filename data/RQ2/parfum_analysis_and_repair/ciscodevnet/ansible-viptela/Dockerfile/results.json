{
  "startTime": 1674216756209,
  "endTime": 1674216757348,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 66
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 102
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 43
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.10\n\nCOPY requirements.txt /tmp/requirements.txt\nRUN echo \"===> Installing GCC ****\" && \\\n    apk add --no-cache gcc musl-dev make && \\\n    \\\n    \\\n    echo \"===> Installing Python ****\" && \\\n    apk add --no-cache python3 && \\\n    if [ ! -e /usr/bin/python ]; then ln -sf python3 /usr/bin/python ; fi && \\\n    \\\n    \\\n    echo \"**** Installing pip ****\" && \\\n    python3 -m ensurepip && \\\n    rm -r /usr/lib/python*/ensurepip && \\\n    pip3 install --no-cache-dir --no-cache --upgrade pip setuptools wheel && \\\n    if [ ! -e /usr/bin/pip ]; then ln -s pip3 /usr/bin/pip ; fi && \\\n\n\n    echo \"===> Installing dependancies...\" && \\\n    apk --update --no-cache add sshpass libffi-dev libxml2-dev libxslt-dev python3-dev openssl-dev openssh-keygen && \\\n\n\n    echo \"===> Installing PIP Requirements...\" && \\\n    pip install --no-cache-dir -r /tmp/requirements.txt\n\nCOPY files/virl2_client-0.8.2+b4d055d25-py3-none-any.whl /tmp/virl2_client-0.8.2+b4d055d25-py3-none-any.whl\nRUN echo \"===> Installing VIRL Client...\" && \\\n    pip install --no-cache-dir /tmp/virl2_client-0.8.2+b4d055d25-py3-none-any.whl\n\nRUN echo \"===> Installing Terraform ****\" && \\\n    apk --update --no-cache add wget unzip cdrkit curl && \\\n\n\n    wget --quiet https://releases.hashicorp.com/terraform/0.12.12/terraform_0.12.12_linux_amd64.zip && \\\n    unzip terraform_0.12.12_linux_amd64.zip && \\\n    mv terraform /usr/bin && \\\n    rm terraform_0.12.12_linux_amd64.zip\n\n# Define working directory.\nENV ANSIBLE_HOST_KEY_CHECKING false\nENV ANSIBLE_RETRY_FILES_ENABLED false\nENV ANSIBLE_SSH_PIPELINING True\n\nWORKDIR /ansible\n"
}