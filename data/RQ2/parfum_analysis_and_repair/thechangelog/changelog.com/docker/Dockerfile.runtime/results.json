{
  "startTime": 1674252829825,
  "endTime": 1674252830638,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 6,
        "columnEnd": 20
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 69,
        "lineEnd": 70,
        "columnStart": 6,
        "columnEnd": 5
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# https://hub.docker.com/_/elixir\n# FROM elixir:1.12\n#\n# @akoutmos recommends the hex.pm image because it's maintained by the hex core team\n# https://hub.docker.com/r/hexpm/elixir/tags?page=1&ordering=last_updated&name=ubuntu-focal\nFROM hexpm/elixir:1.12.0-erlang-24.0.1-ubuntu-focal-20210325\n\nUSER root\n\nARG FAIL_FAST_VERBOSE=\"set -ex\"\nENV DEBIAN_FRONTEND=noninteractive\nARG PKG_INSTALL=\"apt-get install --yes\"\n\n# Use the terminal with 256 colors support\nENV TERM=xterm-256color\n\nRUN echo \"Pre-warm package manager cache...\" \\\n    ; ${FAIL_FAST_VERBOSE} \\\n    ; apt-get update\n\nRUN echo \"Install ffmpeg...\" \\\n    ; ${FAIL_FAST_VERBOSE} \\\n    ; ${PKG_INSTALL} ffmpeg \\\n    ; ffmpeg -version\n\nRUN echo \"Install convert (imagemagick), required for image resizing...\" \\\n    ; ${FAIL_FAST_VERBOSE} \\\n    ; ${PKG_INSTALL} imagemagick \\\n    ; convert --version\n\nRUN echo \"Install curl...\" \\\n    ; ${FAIL_FAST_VERBOSE} \\\n    ; ${PKG_INSTALL} curl ca-certificates \\\n    ; curl -f --version\n\nRUN echo \"Install git...\" \\\n    ; ${FAIL_FAST_VERBOSE} \\\n    ; ${PKG_INSTALL} git \\\n    ; git --version\n\nRUN echo \"Install make...\" \\\n    ; ${FAIL_FAST_VERBOSE} \\\n    ; ${PKG_INSTALL} make \\\n    ; make --version\n\nRUN echo \"Install build-essential for gcc, required by cmark...\" \\\n    ; ${FAIL_FAST_VERBOSE} \\\n    ; ${PKG_INSTALL} build-essential \\\n    ; gcc --version\n\nRUN echo \"Install netcat for waiting on open ports...\" \\\n    ; ${FAIL_FAST_VERBOSE} \\\n    ; ${PKG_INSTALL} netcat\n\n# https://nodejs.org/en/download/\n# https://github.com/nodejs/help/wiki/Installation#how-to-install-nodejs-via-binary-archive-on-linux\nENV NODEJS_VERSION=v14.17.0\nENV PATH=/usr/local/lib/nodejs/node-${NODEJS_VERSION}-linux-x64/bin:$PATH\nRUN echo \"Install node.js ${NODEJS_VERSION}...\" \\\n    ; ${FAIL_FAST_VERBOSE} \\\n    ; ${PKG_INSTALL} xz-utils ; xz --version \\\n    ; mkdir -p /usr/local/lib/nodejs \\\n    ; curl --silent --fail --location --output node-${NODEJS_VERSION}-linux-x64.tar.xz https://nodejs.org/dist/${NODEJS_VERSION}/node-${NODEJS_VERSION}-linux-x64.tar.xz \\\n    ; tar -xJvf node-${NODEJS_VERSION}-linux-x64.tar.xz -C /usr/local/lib/nodejs \\\n    ; node --version \\\n    ; rm node-${NODEJS_VERSION}-linux-x64.tar.xz\n\nRUN echo \"Install yarn...\" \\\n    ; ${FAIL_FAST_VERBOSE} \\\n    ; npm install -g yarn \\\n    ; npm cache clean --force; yarn --version\n\nRUN mix local.rebar --force\nRUN mix local.hex --force\n"
}