{
  "startTime": 1674215568952,
  "endTime": 1674215569606,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 7,
        "columnEnd": 84
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 7,
        "columnEnd": 26
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 8,
        "columnEnd": 29
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 8,
        "columnEnd": 68
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 8,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#https://blog.csdn.net/sinat_19528249/article/details/99994464\n# Version 0.1\n# 基础镜像\nFROM centos:7\n# 维护者信息\nMAINTAINER kangxiaolin ksf@zgykkj.com\nVOLUME /tmp\n#自动安装依赖\nRUN cd /etc/yum.repos.d/ \\\n    && yum -y install wget \\\n    && wget -O /etc/yum.repos.d/epel.repo https://mirrors.aliyun.com/repo/epel-7.repo \\\n    && yum clean all \\\n    && yum makecache \\\n    && yum update -y \\\n    && yum -y  install nginx \\\n    && yum -y  install  java-1.8.0-openjdk java-1.8.0-openjdk-devel \\\n    && yum -y  install redis \\\n#这里可以设置 域名\n# 可以送本地加载 使用ADD 也可以直接写\n   && echo \"server {  \\\n                       listen       81; \\\n                       location ^~ /jeecg-boot { \\\n                      proxy_pass              http://127.0.0.1:8080/jeecg-boot/; \\\n                      proxy_set_header        Host 127.0.0.1; \\\n                      proxy_set_header        X-Real-IP \\$remote_addr; \\\n                      proxy_set_header        X-Forwarded-For \\$proxy_add_x_forwarded_for; \\\n                  } \\\n                  #解决Router(mode: 'history')模式下，刷新路由地址不能找到页面的问题 \\\n                  location / { \\\n                     root   /var/www/html/; \\\n                      index  index.html index.htm; \\\n                      if (!-e \\$request_filename) { \\\n                          rewrite ^(.*)\\$ /index.html?s=\\$1 last; \\\n                          break; \\\n                      } \\\n                  } \\\n                  access_log  /var/log/nginx/access.log ; \\\n              } \" > /etc/nginx/conf.d/default.conf \\\n  \n 启动 本 \\\n     && touch /etc/init.d/s \\\n     && touch jeecgboot.log \\\n     && chmod +x /etc/init.d/start.sh \\\n     && echo \"#!/bin/bash  \" >> /etc/init.d/start.sh \\\n     && echo \"/usr/bin/redis-server  & \" >> /etc/init.d/start.sh \\\n     && echo \"/usr/sbin/nginx  -c /etc/nginx/nginx.conf\" >> /etc/in \\\n     && cho \" java -jar /je \\\n     && mkdir  -p  /var/www \\ && rm -rf /var/cache/yum\n# 前端迁移到系统文件中 默认是80端口 同级目录下的html地址\nADD  ant-design-vue-jeecg/dist/ /var/www/html/\n# 拷贝相关的jar包\nADD jeecg-boot/jeecg-boot-module-system/target/jeecg-boot-module-system-2.2.0.jar jeecgboot.jar\nEXPOSE  80  8080 81\nENTRYPOINT /bin/sh -c   /etc/init.d/start.sh\n\n#启动脚本\n#docker rmi $(docker images | grep \"^<none>\" | awk \"{print $3}\") 删除<none>\n\n#docker build -t jeecgboot:centos .\n#docker run --privileged=true  -itd --name test -v /sys/fs/cgroup:/sys/fs/cgroup:ro  -p 81:81 -p 8080:8080 -p 82:80  jeecgboot:centos\n"
}