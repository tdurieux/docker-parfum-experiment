{
  "startTime": 1674218348310,
  "endTime": 1674218348939,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 14
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 20,
        "columnEnd": 36
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 20,
        "columnEnd": 36
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 18,
        "columnEnd": 34
      }
    }
  ],
  "repairedDockerfile": "FROM node:16-alpine\nWORKDIR /app\nVOLUME /app/cache /app/log /app/keys /app/tmp\nEXPOSE 80\nENTRYPOINT [ \"yarn\", \"start\" ]\n\n# Instal base packages\nRUN apk add --no-cache ca-certificates && \\\n    update-ca-certificates && \\\n    apk add --no-cache \\\n    openssl \\\n    curl \\\n    git \\\n    build-base \\\n    libc6-compat \\\n    openssh-client\n\n# Install additional app packages\n# opus-tools: Used to decode Telegram Audio notes\nRUN apk add --no-cache \\\n    sox \\\n    opus-tools\n\n# Install imagemagick\nRUN apk add --no-cache imagemagick graphicsmagick\n\n\n# Install node modules\nCOPY package.json yarn.lock tsconfig.json .eslintrc jest.config.js .prettierrc ./\nRUN yarn install && yarn cache clean;\n\n# Copy my code\nCOPY ./src ./src\nCOPY ./public ./public\nCOPY ./src-client ./src-client\nCOPY ./etc ./etc\n\n# Install workspaces packages\nRUN yarn install && yarn cache clean;\n\n# Build code\nRUN yarn build && yarn cache clean;"
}