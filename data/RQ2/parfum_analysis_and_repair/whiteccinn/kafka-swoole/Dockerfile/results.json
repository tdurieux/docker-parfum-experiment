{
  "startTime": 1674256099293,
  "endTime": 1674256100102,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 7,
        "columnEnd": 87
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 11,
        "columnEnd": 22
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 11,
        "columnEnd": 88
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 26,
        "columnStart": 7,
        "columnEnd": 14
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 26,
        "columnStart": 7,
        "columnEnd": 14
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM php:7.1.22\n\nLABEL maintainer=\"ccinn <471113744@qq.com>\" version=\"1.0\"\n\n# --build-arg timezone=Asia/Shanghai\nARG timezone\n# default use www-data user\nARG work_user=www-data\n\nENV TIMEZONE=${timezone:-\"Asia/Shanghai\"} \\\n    PHPREDIS_VERSION=4.3.0 \\\n    SWOOLE_VERSION=4.4.7 \\\n    SNAPPY_VERSION=0.1.3 \\\n    COMPOSER_ALLOW_SUPERUSER=1\n\n# Libs -y --no-install-recommends\nRUN apt-get update \\\n    && apt-get install --no-install-recommends -y \\\n        curl wget git zip unzip less vim procps lsof tcpdump htop openssl \\\n        libz-dev \\\n        libssl-dev \\\n        libnghttp2-dev \\\n        libpcre3-dev \\\n        libjpeg-dev \\\n        libpng-dev \\\n        libfreetype6-dev \\\n        strace \\\n# Install PHP extensions\n    && docker-php-ext-install \\\n       bcmath gd pdo_mysql mbstring sockets zip sysvmsg sysvsem sysvshm && rm -rf /var/lib/apt/lists/*;\n\n# Install composer\nRun curl -f -sS https://getcomposer.org/installer | php \\\n    && mv composer.phar /usr/local/bin/composer \\\n    && composer self-update --clean-backups \\\n# Install snappy extension\n    && wget https://github.com/kjdev/php-ext-snappy/archive/${SNAPPY_VERSION}.zip -O snappy.tar.gz \\\n    && mkdir -p snappy \\\n    && unzip snappy.tar.gz -d snappy \\\n    && rm snappy.tar.gz \\\n    && ( cd snappy/php-ext-snappy-${SNAPPY_VERSION} \\\n        && phpize \\\n        && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n        && make -j$(nproc) \\\n        && make install) \\\n\n    && rm -r snappy \\\n    && docker-php-ext-enable snappy \\\n# Install redis extension\n    && wget https://pecl.php.net/get/redis-${PHPREDIS_VERSION}.tgz -O /tmp/redis.tar.tgz \\\n    && pecl install /tmp/redis.tar.tgz \\\n    && rm -rf /tmp/redis.tar.tgz \\\n    && docker-php-ext-enable redis \\\n# Install swoole extension\n    && wget https://github.com/swoole/swoole-src/archive/v${SWOOLE_VERSION}.tar.gz -O swoole.tar.gz \\\n    && mkdir -p swoole \\\n    && tar -xf swoole.tar.gz -C swoole --strip-components=1 \\\n    && rm swoole.tar.gz \\\n    && ( cd swoole \\\n        && phpize \\\n        && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-mysqlnd --enable-sockets --enable-openssl --enable-http2 \\\n        && make -j$(nproc) \\\n        && make install) \\\n\n    && rm -r swoole \\\n    && docker-php-ext-enable swoole \\\n# Clear dev deps\n    && apt-get clean \\\n    && apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false \\\n# Timezone\n    && cp /usr/share/zoneinfo/${TIMEZONE} /etc/localtime \\\n    && echo \"${TIMEZONE}\" > /etc/timezone \\\n    && echo \"[Date]\\ndate.timezone=${TIMEZONE}\" > /usr/local/etc/php/conf.d/timezone.ini\n\n# Install composer deps\nADD . /data/www\nRUN  cd /data/www \\\n    && composer config -g repo.packagist composer https://mirrors.aliyun.com/composer/ \\\n    && composer install \\\n    && composer install \\\n    && composer clearcache\n\nWORKDIR /data/www\n"
}