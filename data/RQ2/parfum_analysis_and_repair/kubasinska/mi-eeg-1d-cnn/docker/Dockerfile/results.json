{
  "startTime": 1674246806049,
  "endTime": 1674246807221,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 22,
        "columnEnd": 60
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 109
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 109
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 22,
        "columnEnd": 60
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 109
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 133
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:20.04\nRUN apt-get update\nRUN apt-get update && apt-get install --no-install-recommends -y apt-transport-https && rm -rf /var/lib/apt/lists/*;\nRUN DEBIAN_FRONTEND=\"noninteractive\" apt-get --no-install-recommends install vim wget nano curl tk-dev git git-lfs ca-certificates -y && rm -rf /var/lib/apt/lists/*;\nWORKDIR /root/\nRUN wget https://repo.anaconda.com/miniconda/Miniconda3-py38_4.10.3-Linux-x86_64.sh\nRUN chmod +x Miniconda3-py38_4.10.3-Linux-x86_64.sh\nRUN /root/Miniconda3-py38_4.10.3-Linux-x86_64.sh -b && eval \"$(/root/miniconda3/bin/conda shell.bash hook)\" && /root/miniconda3/bin/conda clean -afy\nRUN /root/miniconda3/bin/conda init\nCOPY environment.yml /root/environment.yml\nRUN /root/miniconda3/bin/conda env create -f /root/environment.yml && /root/miniconda3/bin/conda clean -afy\nENV NVIDIA_VISIBLE_DEVICES all\nENV NVIDIA_DRIVER_CAPABILITIES graphics,utility,compute\nWORKDIR /\nRUN mkdir dataset\nRUN mkdir workspace\nWORKDIR /dataset\n\nRUN wget -O output.tar.gz \"https://onedrive.live.com/download?cid=AF37652B85ECAA2E&resid=AF37652B85ECAA2E%21271719&authkey=AGh4toRof0SHV0M\"\n\nRUN tar -xf output.tar.gz && rm output.tar.gz\nRUN rm output.tar.gz\n\nWORKDIR /dataset\nRUN mkdir paper\nRUN mkdir saved_models\nCOPY data_processing /home/data_processing\nCOPY generator.py /home/generator.py\n\nRUN echo 'conda activate eeg' >> ~/.bashrc\nWORKDIR /home\nRUN /root/miniconda3/bin/conda run -n eeg python generator.py\nWORKDIR /workspace\n\n# Bulild -> docker build -t eegcnn .\n# Run with -> docker run -it --gpus all -v $(pwd):/workspace eegcnn bash"
}