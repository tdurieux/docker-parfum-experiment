{
  "startTime": 1674253186022,
  "endTime": 1674253186870,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 6,
        "columnEnd": 31
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:16.16.0-alpine3.15@sha256:d4a0c2f47b149840e99ef5ca1a1f1b0a9e33a3980975d55ddd0eb117c2f64161\nARG appPort=3000\n# ARG microScannerToken\n\nLABEL maintainer=\"Damien Laureaux <d.laureaux@timoa.com>\" \\\n      org.label-schema.vendor=\"Timoa\" \\\n      org.label-schema.name=\"Node.js encryption API example\" \\\n      org.label-schema.description=\"Node.js encryption API example\" \\\n      org.label-schema.url=\"https://timoa.com\" \\\n      org.label-schema.vcs-url=\"https://github.com/timoa/nodejs-encryption-api-example\" \\\n      org.label-schema.version=latest \\\n      org.label-schema.schema-version=\"1.0\"\n\nRUN \\\n      apk --no-cache update && \\\n      apk --no-cache upgrade && \\\n      apk add --no-cache ca-certificates && update-ca-certificates && \\\n      rm -rf /var/cache/apk/* && \\\n      npm install -g npm@latest && \\\n      mkdir -p /opt/app && \\\n      adduser -S app-user && npm cache clean --force;\n\n# Aquasec MicroScanner support\n# Search vulnerabilities under the source container\n# Get an API token (free): https://microscanner.aquasec.com/signup\n# Project: https://github.com/aquasecurity/microscanner\n\n# ADD https://get.aquasec.com/microscanner /\n# RUN chmod +x /microscanner && \\\n#   /microscanner ${microScannerToken} && \\\n#   echo \"No vulnerabilities! \" && \\\n#   date\n\nWORKDIR /opt/app/\nCOPY ./package.json ./\nCOPY ./src ./src\n\nHEALTHCHECK --interval=15s --timeout=5s --start-period=30s \\\n      CMD npm run docker:status\n\nRUN \\\n      npm install --production --unsafe-perm && \\\n      npm cache clean --force\n\nADD https://github.com/ufoscout/docker-compose-wait/releases/download/2.5.0/wait /wait\n\nRUN chmod +x /wait && chown -R app-user /opt/app\nUSER app-user\n\nEXPOSE ${appPort}\nCMD /wait && npm start\n"
}