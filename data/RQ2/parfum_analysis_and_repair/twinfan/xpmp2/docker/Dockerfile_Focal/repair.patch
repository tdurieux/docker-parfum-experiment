diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/twinfan/xpmp2/docker/Dockerfile_Focal b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/twinfan/xpmp2/docker/Dockerfile_Focal/repaired.Dockerfile
index 94d8b04..c23f014 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/twinfan/xpmp2/docker/Dockerfile_Focal
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/twinfan/xpmp2/docker/Dockerfile_Focal/repaired.Dockerfile
@@ -76,11 +76,11 @@ RUN set -ex \
         patch -d gcc-${GCC_VERSION} -p 1 \
     \
     && mkdir -p ${MINGW}/include ${MINGW}/lib/pkgconfig \
-    && chmod 0777 -R /mnt ${MINGW}
-    
+    && chmod 0777 -R /mnt ${MINGW} && rm -rf /var/lib/apt/lists/*;
+
 RUN set -ex \
     && cd pkg-config-${PKG_CONFIG_VERSION} \
-    && ./configure \
+    && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
         --prefix=/usr/local \
         --with-pc-path=${MINGW}/lib/pkgconfig \
         --with-internal-glib \
@@ -92,7 +92,7 @@ RUN set -ex \
 
 RUN set -ex \
     && cd cmake-${CMAKE_VERSION} \
-    && ./configure \
+    && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
         --prefix=/usr/local \
         --parallel=`nproc` \
     && make -j`nproc` \
@@ -101,7 +101,7 @@ RUN set -ex \
 
 RUN set -ex \
     && cd binutils-${BINUTILS_VERSION} \
-    && ./configure \
+    && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
         --prefix=/usr/local \
         --target=x86_64-w64-mingw32 \
         --disable-shared \
@@ -182,7 +182,7 @@ RUN set -ex \
 
 RUN set -ex \
     && cd nasm-${NASM_VERSION} \
-    && ./configure --prefix=/usr/local \
+    && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/usr/local \
     && make -j`nproc` \
     && make install \
     && cd ..
@@ -210,7 +210,7 @@ RUN set -ex \
     \
     && apt-get remove --purge -y gnupg \
     && apt-get autoremove --purge -y \
-    && apt-get clean
+    && apt-get clean && rm -rf /var/lib/apt/lists/*;
 
 ### -- End of MingW64 setup taken over from mmozeiko/mingw-w64 --- #######
 
@@ -218,7 +218,7 @@ RUN set -ex \
 ### MacOS ################################################################
 
 # Install OS X cross-compiling toolchain (clang).
-RUN apt-get install -y --no-install-recommends git sudo clang llvm-dev libxml2-dev uuid-dev libssl-dev bash patch make tar xz-utils bzip2 gzip sed cpio libbz2-dev zlib1g-dev && apt-get clean
+RUN apt-get install -y --no-install-recommends git sudo clang llvm-dev libxml2-dev uuid-dev libssl-dev bash patch make tar xz-utils bzip2 gzip sed cpio libbz2-dev zlib1g-dev && apt-get clean && rm -rf /var/lib/apt/lists/*;
 #Build arguments
 ARG OSXCROSS_REPO="tpoechtrager/osxcross"
 ARG DARWIN_SDK_VERSION="12.0"
@@ -256,7 +256,7 @@ RUN apt-get install -y --no-install-recommends \
         libcurl4-openssl-dev freeglut3-dev libudev-dev libopenal-dev \
  && apt-get clean \
 # && curl -sSL https://github.com/Kitware/CMake/releases/download/v3.19.2/cmake-3.19.2-Linux-x86_64.tar.gz | tar -xz -C /usr/local/ --strip-components=1 \
- && true
+ && true && rm -rf /var/lib/apt/lists/*;
 
 
 ### CURL #################################################################
@@ -265,13 +265,13 @@ RUN apt-get install -y --no-install-recommends \
 RUN apt-get install -y --no-install-recommends curl \
  && mkdir /tmp/build-curl \
  && cd /tmp/build-curl \
- && curl -sSL https://curl.se/download/curl-7.74.0.tar.gz | tar -xz -C . --strip-components=1
+ && curl -f -sSL https://curl.se/download/curl-7.74.0.tar.gz | tar -xz -C . --strip-components=1 && rm -rf /var/lib/apt/lists/*;
 ARG MY_CURL_OPT="--enable-static --disable-shared --enable-optimize --without-zlib --enable-http --enable-ipv6 --disable-dict --disable-file --disable-gopher --disable-imap --disable-ldap --disable-mqtt --disable-pop3 --disable-rtsp --disable-smtp --disable-telnet"
 ARG WIN_TOOLCHAIN_PREFIX="x86_64-w64-mingw32"
 
 # --- Mingw64 (Windows) ---
 RUN cd /tmp/build-curl \
- && ./configure --host=${WIN_TOOLCHAIN_PREFIX} --prefix=/usr/${WIN_TOOLCHAIN_PREFIX} --exec-prefix=/usr/${WIN_TOOLCHAIN_PREFIX} --disable-pthreads --with-winssl ${MY_CURL_OPT} \
+ && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --host=${WIN_TOOLCHAIN_PREFIX} --prefix=/usr/${WIN_TOOLCHAIN_PREFIX} --exec-prefix=/usr/${WIN_TOOLCHAIN_PREFIX} --disable-pthreads --with-winssl ${MY_CURL_OPT} \
  # install header files
  && cd include \
  && make install \
@@ -295,7 +295,7 @@ RUN sudo ldconfig /usr/osxcross/lib
 # Add essential users to the docker image
 RUN apt-get install -y --no-install-recommends sudo && apt-get clean \
  && echo "" | adduser --uid 1000 --disabled-password  --gecos "" xpbuild && adduser xpbuild sudo \
- && echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers
+ && echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers && rm -rf /var/lib/apt/lists/*;
 
 VOLUME /build
 USER xpbuild