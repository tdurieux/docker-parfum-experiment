diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/twinfan/xpmp2/XPMP2-Sample/docker/Dockerfile_Focal b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/twinfan/xpmp2/XPMP2-Sample/docker/Dockerfile_Focal/repaired.Dockerfile
index 438f25c..a74dad2 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/twinfan/xpmp2/XPMP2-Sample/docker/Dockerfile_Focal
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/twinfan/xpmp2/XPMP2-Sample/docker/Dockerfile_Focal/repaired.Dockerfile
@@ -77,7 +77,7 @@ RUN set -ex \
     && chmod 0777 -R /mnt ${MINGW} \
     \
     && cd pkg-config-${PKG_CONFIG_VERSION} \
-    && ./configure \
+    && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
         --prefix=/usr/local \
         --with-pc-path=${MINGW}/lib/pkgconfig \
         --with-internal-glib \
@@ -86,17 +86,17 @@ RUN set -ex \
     && make -j`nproc` \
     && make install \
     && cd .. \
-    \
+
     && cd cmake-${CMAKE_VERSION} \
-    && ./configure \
+    && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
         --prefix=/usr/local \
         --parallel=`nproc` \
     && make -j`nproc` \
     && make install \
     && cd .. \
-    \
+
     && cd binutils-${BINUTILS_VERSION} \
-    && ./configure \
+    && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
         --prefix=/usr/local \
         --target=x86_64-w64-mingw32 \
         --disable-shared \
@@ -110,7 +110,7 @@ RUN set -ex \
     && make -j`nproc` \
     && make install \
     && cd .. \
-    \
+
     && mkdir mingw-w64 \
     && cd mingw-w64 \
     && ../mingw-w64-v${MINGW_VERSION}/mingw-w64-headers/configure \
@@ -120,7 +120,7 @@ RUN set -ex \
         --enable-secure-api \
     && make install \
     && cd .. \
-    \
+
     && mkdir gcc \
     && cd gcc \
     && ../gcc-${GCC_VERSION}/configure \
@@ -143,7 +143,7 @@ RUN set -ex \
     && make -j`nproc` all-gcc \
     && make install-gcc \
     && cd .. \
-    \
+
     && cd mingw-w64 \
     && ../mingw-w64-v${MINGW_VERSION}/mingw-w64-crt/configure \
         --prefix=/usr/local/x86_64-w64-mingw32 \
@@ -154,7 +154,7 @@ RUN set -ex \
     && make -j`nproc` \
     && make install \
     && cd .. \
-    \
+
     && cd mingw-w64 \
     && ../mingw-w64-v${MINGW_VERSION}/mingw-w64-libraries/winpthreads/configure \
         --prefix=/usr/local/x86_64-w64-mingw32 \
@@ -164,41 +164,41 @@ RUN set -ex \
     && make -j`nproc` \
     && make install \
     && cd .. \
-    \
+
     && cd gcc \
     && make -j`nproc` \
     && make install \
     && cd .. \
-    \
+
     && cd nasm-${NASM_VERSION} \
-    && ./configure --prefix=/usr/local \
+    && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/usr/local \
     && make -j`nproc` \
     && make install \
     && cd .. \
-    \
+
     && rm -r pkg-config-${PKG_CONFIG_VERSION} \
     && rm -r cmake-${CMAKE_VERSION} \
     && rm -r binutils-${BINUTILS_VERSION} \
     && rm -r mingw-w64 mingw-w64-v${MINGW_VERSION} \
     && rm -r gcc gcc-${GCC_VERSION} \
     && rm -r nasm-${NASM_VERSION} \
-    \
+
     && apt-get remove --purge -y file gcc-10 g++-10 zlib1g-dev libssl-dev libgmp-dev libmpfr-dev libmpc-dev libisl-dev python-lxml python-mako \
-    \
+
     && apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/7fa2af80.pub \
     && echo "deb https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/ /" > /etc/apt/sources.list.d/cuda.list \
     && apt-get update \
-    \
+
     && DEBIAN_FRONTEND=noninteractive apt-get install --no-install-recommends -y \
         cuda-nvcc-${NVCC_VERSION:0:2}-${NVCC_VERSION:3:1} \
-    \
+
     && ln -s /usr/local/cuda-${NVCC_VERSION:0:2}.${NVCC_VERSION:3:1} /usr/local/cuda \
     && ln -s /usr/bin/gcc-9 /usr/local/cuda/bin/gcc \
     && ln -s /usr/bin/g++-9 /usr/local/cuda/bin/g++ \
-    \
+
     && apt-get remove --purge -y gnupg \
     && apt-get autoremove --purge -y \
-    && apt-get clean
+    && apt-get clean && rm -rf /var/lib/apt/lists/*;
 
 ### -- End of MingW64 setup taken over from mmozeiko/mingw-w64 --- #######
 
@@ -206,7 +206,7 @@ RUN set -ex \
 ### MacOS ################################################################
 
 # Install OS X cross-compiling toolchain (clang).
-RUN apt-get install -y --no-install-recommends git sudo clang llvm-dev libxml2-dev uuid-dev libssl-dev bash patch make tar xz-utils bzip2 gzip sed cpio libbz2-dev zlib1g-dev && apt-get clean
+RUN apt-get install -y --no-install-recommends git sudo clang llvm-dev libxml2-dev uuid-dev libssl-dev bash patch make tar xz-utils bzip2 gzip sed cpio libbz2-dev zlib1g-dev && apt-get clean && rm -rf /var/lib/apt/lists/*;
 #Build arguments
 ARG OSXCROSS_REPO="tpoechtrager/osxcross"
 ARG DARWIN_SDK_VERSION="11.1"
@@ -244,7 +244,7 @@ RUN apt-get install -y --no-install-recommends \
         libcurl4-openssl-dev freeglut3-dev libudev-dev libopenal-dev \
  && apt-get clean \
 # && curl -sSL https://github.com/Kitware/CMake/releases/download/v3.19.2/cmake-3.19.2-Linux-x86_64.tar.gz | tar -xz -C /usr/local/ --strip-components=1 \
- && true
+ && true && rm -rf /var/lib/apt/lists/*;
 
 
 ### CURL #################################################################
@@ -253,13 +253,13 @@ RUN apt-get install -y --no-install-recommends \
 RUN apt-get install -y --no-install-recommends curl \
  && mkdir /tmp/build-curl \
  && cd /tmp/build-curl \
- && curl -sSL https://curl.se/download/curl-7.74.0.tar.gz | tar -xz -C . --strip-components=1
+ && curl -f -sSL https://curl.se/download/curl-7.74.0.tar.gz | tar -xz -C . --strip-components=1 && rm -rf /var/lib/apt/lists/*;
 ARG MY_CURL_OPT="--enable-static --disable-shared --enable-optimize --without-zlib --enable-http --enable-ipv6 --disable-dict --disable-file --disable-gopher --disable-imap --disable-ldap --disable-mqtt --disable-pop3 --disable-rtsp --disable-smtp --disable-telnet"
 ARG WIN_TOOLCHAIN_PREFIX="x86_64-w64-mingw32"
 
 # --- Mingw64 (Windows) ---
 RUN cd /tmp/build-curl \
- && ./configure --host=${WIN_TOOLCHAIN_PREFIX} --prefix=/usr/${WIN_TOOLCHAIN_PREFIX} --exec-prefix=/usr/${WIN_TOOLCHAIN_PREFIX} --disable-pthreads --with-winssl ${MY_CURL_OPT} \
+ && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --host=${WIN_TOOLCHAIN_PREFIX} --prefix=/usr/${WIN_TOOLCHAIN_PREFIX} --exec-prefix=/usr/${WIN_TOOLCHAIN_PREFIX} --disable-pthreads --with-winssl ${MY_CURL_OPT} \
  # install header files
  && cd include \
  && make install \
@@ -283,7 +283,7 @@ RUN sudo ldconfig /usr/osxcross/lib
 # Add essential users to the docker image
 RUN apt-get install -y --no-install-recommends sudo && apt-get clean \
  && echo "" | adduser --uid 1000 --disabled-password  --gecos "" xpbuild && adduser xpbuild sudo \
- && echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers
+ && echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers && rm -rf /var/lib/apt/lists/*;
 
 VOLUME /build
 USER xpbuild