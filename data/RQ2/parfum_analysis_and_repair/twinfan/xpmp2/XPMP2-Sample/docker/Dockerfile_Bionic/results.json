{
  "startTime": 1674220908441,
  "endTime": 1674220909245,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 105
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 120
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 86
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 120
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 86
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 120
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 86
      }
    }
  ],
  "repairedDockerfile": "# Linux compile environment, based on Ubuntu Bionic Beaver\n\n### Ubuntu basics ########################################################\n\nFROM ubuntu:18.04\n\n# set up package manager with latest mirrors and certificates\nRUN sed -i -e 's/http:\\/\\/archive.ubuntu.com\\/ubuntu\\//mirror:\\/\\/mirrors.ubuntu.com\\/mirrors.txt/' /etc/apt/sources.list \\\n && apt-get update \\\n && apt-get install -y --no-install-recommends ca-certificates && rm -rf /var/lib/apt/lists/*;\n\n\n### Linux ################################################################\n\n# Install Linux toolchain (GCC) including CMake\nRUN apt-get install -y --no-install-recommends build-essential ninja-build sudo bash coreutils curl libcurl4-openssl-dev \\\n && apt-get clean \\\n && curl -f -sSL https://github.com/Kitware/CMake/releases/download/v3.19.2/cmake-3.19.2-Linux-x86_64.tar.gz | tar -xz -C /usr/local/ --strip-components=1 \\\n # Install dependency libraries under Linux.\n && apt-get install -y --no-install-recommends freeglut3-dev libudev-dev libopenal-dev \\\n && apt-get clean && rm -rf /var/lib/apt/lists/*;\n\n### User / Entrypoint ####################################################expor\n\n# Add essential users to the docker image\nRUN echo \"\" | adduser --uid 1000 --disabled-password  --gecos \"\" xpbuild && adduser xpbuild sudo\nRUN echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers\n\nVOLUME /build\nUSER xpbuild\nADD build.sh /usr/bin/build.sh\n\n# Entrypoint is the build.sh script, which takes care of actual building\nWORKDIR /build\nENTRYPOINT [\"build.sh\"]\n"
}