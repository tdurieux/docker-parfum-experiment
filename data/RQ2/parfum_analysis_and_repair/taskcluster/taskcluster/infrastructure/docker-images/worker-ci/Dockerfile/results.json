{
  "startTime": 1674252172874,
  "endTime": 1674252174461,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 89
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 89
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 12,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 8,
        "columnStart": 22,
        "columnEnd": 15
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 28,
        "columnStart": 22,
        "columnEnd": 6
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:20.04\n\nARG NODE_VERSION\nENV DOCKER_VERSION=5:20.10.12~3-0~ubuntu-focal\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n    ca-certificates \\\n    gnupg \\\n    lsb-release && rm -rf /var/lib/apt/lists/*;\n\n# Add key for docker apt repository\nCOPY download.docker.com.gpg /tmp/download.docker.com.gpg\nRUN gpg --batch --dearmor \\\n        -o /usr/share/keyrings/docker-archive-keyring.gpg \\\n        /tmp/download.docker.com.gpg && \\\n    echo \\\n        \"deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\" \\\n        | tee /etc/apt/sources.list.d/docker.list\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n    build-essential \\\n    curl \\\n    ca-certificates \\\n    docker-ce=$DOCKER_VERSION \\\n    git \\\n    iptables \\\n    lxc \\\n    python3 \\\n    jq && rm -rf /var/lib/apt/lists/*;\n\nRUN curl -f -SL \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.xz\" | \\\n    tar --xz --extract --directory /usr/local --strip-components=1 && \\\n    npm install -g yarn@1.0.2 && \\\n    yarn global add babel-cli && npm cache clean --force;\n\nenv HOME /home/tester\nenv SHELL /bin/bash\nenv PATH $PATH:/home/tester/bin\nworkdir /home/tester\n\nCOPY bin /home/tester/bin/\nCOPY ./wrapdocker /usr/local/bin/wrapdocker\nCOPY ./gitconfig /home/tester/.gitconfig\n\n# install our custom git plugin\nCOPY git/git-ci-checkout-pr /usr/local/bin/git-ci-checkout-pr\nCOPY git/git-ci-checkout-ref /usr/local/bin/git-ci-checkout-ref\nCOPY git/git-ci-checkout-setup /usr/local/bin/git-ci-checkout-setup\n\nRUN chmod +x /usr/local/bin/wrapdocker\nRUN chmod a+x /home/tester/bin/*\n\n# Define additional metadata for our image.\nVOLUME /var/lib/docker\n\nENTRYPOINT [\"wrapdocker\"]\n"
}