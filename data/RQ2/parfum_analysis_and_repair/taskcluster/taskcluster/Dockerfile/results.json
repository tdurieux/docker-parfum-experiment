{
  "startTime": 1674250659165,
  "endTime": 1674250659717,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 34
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "##\n# Build /app\n\nFROM node:16.16.0 as build\n\nRUN mkdir -p /base/cache\nENV YARN_CACHE_FOLDER=/base/cache\n\nRUN mkdir -p /base/yarn\nCOPY /yarn.lock /.yarnrc /package.json /base/yarn/\nCOPY /.yarn /base/yarn/.yarn/\nRUN mkdir -p /base/yarn-ui\nCOPY /ui/yarn.lock /.yarnrc /ui/package.json /base/yarn-ui/\nCOPY /.yarn /base/yarn-ui/.yarn/\n\nWORKDIR /base/yarn\nRUN yarn install --production --frozen-lockfile && yarn cache clean;\nWORKDIR /base/yarn-ui\nRUN yarn install --frozen-lockfile && yarn cache clean;\n\nRUN mkdir -p /base/app/ui\nRUN cp -r /base/yarn/node_modules /base/app/\nRUN cp -r /base/yarn-ui/node_modules /base/app/ui/\n\n# copy the repository into the image, including the entrypoint\nWORKDIR /base/app\nCOPY . /base/app\nRUN chmod +x entrypoint\n\n# Write out the DockerFlow-compatible version.json file\nARG DOCKER_FLOW_VERSION\nRUN if [ -n \"${DOCKER_FLOW_VERSION}\" ]; then \\\n    echo \"${DOCKER_FLOW_VERSION}\" > version.json; \\\nelse \\\n    echo \\{\\\"version\\\": \\\"44.17.1\\\", \\\"commit\\\": \\\"local\\\", \\\"source\\\": \\\"https://github.com/taskcluster/taskcluster\\\", \\\"build\\\": \\\"NONE\\\"\\} > version.json; \\\nfi\n\n# Build the UI and discard everything else in that directory\nWORKDIR /base/app/ui\nRUN yarn build\nWORKDIR /base/app\n\n# clean up some unnecessary and potentially large stuff\nRUN rm -rf .git\nRUN rm -rf .node-gyp ui/.node-gyp\nRUN rm -rf clients/client-{go,py,web}\nRUN rm -rf {services,libraries}/*/test\nRUN rm -rf db/test db/versions\nRUN rm -rf ui/node_modules ui/src\n\n##\n# build the final image\n\nFROM node:16.16.0-alpine as image\nRUN apk --no-cache add --update nginx bash\nCOPY --from=build /base/app /app\nENV HOME=/app\nWORKDIR /app\nENTRYPOINT [\"/app/entrypoint\"]\n"
}