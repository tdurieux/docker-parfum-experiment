{
  "startTime": 1674250714099,
  "endTime": 1674250714940,
  "originalSmells": [
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 81,
        "lineEnd": 81,
        "columnStart": 4,
        "columnEnd": 44
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Forked until upstream is fixed from\n# https://gitlab.com/nvidia/container-images/driver/-/blob/master/flatcar/Dockerfile\n# See https://gitlab.com/nvidia/container-images/driver/-/issues/35\n\nFROM ubuntu:21.04\n\n# The installer expects this to exist. The orignal base image brought it in.\n# We have to do this manually here now as we are depending on a new base image.\nRUN mkdir /run/nvidia\n\n# The installer expects these to be defined. The orignal base image brought it in.\n# We have to do this manually here now as we are depending on a new base image.\nENV LD_LIBRARY_PATH=/usr/local/nvidia/lib:/usr/local/nvidia/lib64\n\nENV CUDA_VERSION=11.2.2\nENV NVIDIA_DRIVER_CAPABILITIES=compute,utility\nENV NVIDIA_REQUIRE_CUDA=cuda>=11.2 brand=tesla,driver>=418,driver<419 brand=tesla,driver>=440,driver<441 driver>=450\nENV PATH=/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\n\nENV NVIDIA_VISIBLE_DEVICES=void\n\n# hadolint ignore=DL4006,DL3059\nRUN echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections\n\n# hadolint ignore=DL3008,DL3059\nRUN dpkg --add-architecture i386 && \\\n    apt-get update && apt-get install -y --no-install-recommends \\\n        apt-transport-https \\\n        apt-utils \\\n        bc \\\n        binutils \\\n        build-essential \\\n        ca-certificates \\\n        curl \\\n        gnupg2 \\\n        jq \\\n        kmod \\\n        libc6:i386 \\\n        libelf-dev \\\n        libssl-dev \\\n        fdisk \\\n        software-properties-common && \\\n    rm -rf /var/lib/apt/lists/*\n\n# hadolint ignore=DL3059\nRUN echo \"deb [arch=amd64] http://archive.ubuntu.com/ubuntu/ hirsute main\" > /etc/apt/sources.list && \\\n    echo \"deb [arch=amd64] http://archive.ubuntu.com/ubuntu/ hirsute-updates main\" >> /etc/apt/sources.list && \\\n    echo \"deb [arch=amd64] http://archive.ubuntu.com/ubuntu/ hirsute-security main\" >> /etc/apt/sources.list && \\\n    usermod -o -u 0 -g 0 _apt\n\n# hadolint ignore=DL3059\nRUN curl -fsSL -o /usr/local/bin/donkey https://github.com/3XX0/donkey/releases/download/v1.1.0/donkey && \\\n    curl -fsSL -o /usr/local/bin/extract-vmlinux https://raw.githubusercontent.com/torvalds/linux/master/scripts/extract-vmlinux && \\\n    chmod +x /usr/local/bin/donkey /usr/local/bin/extract-vmlinux\n\n#ARG BASE_URL=http://us.download.nvidia.com/XFree86/Linux-x86_64\nARG BASE_URL=https://us.download.nvidia.com/tesla\nARG DRIVER_VERSION=460.32.03\nENV DRIVER_VERSION=$DRIVER_VERSION\nENV DEBIAN_FRONTEND=noninteractive\n\n# Install the userspace components and copy the kernel module sources.\n# hadolint ignore=DL3003,DL3059\nRUN cd /tmp && \\\n    curl -fSsl -O $BASE_URL/$DRIVER_VERSION/NVIDIA-Linux-x86_64-$DRIVER_VERSION.run && \\\n    sh NVIDIA-Linux-x86_64-$DRIVER_VERSION.run -x && \\\n    cd NVIDIA-Linux-x86_64-$DRIVER_VERSION* && \\\n    ./nvidia-installer --silent \\\n                       --no-kernel-module \\\n                       --install-compat32-libs \\\n                       --no-nouveau-check \\\n                       --no-nvidia-modprobe \\\n                       --no-rpms \\\n                       --no-backup \\\n                       --no-check-for-alternate-installs \\\n                       --no-libglx-indirect \\\n                       --no-install-libglvnd \\\n                       --x-prefix=/tmp/null \\\n                       --x-module-path=/tmp/null \\\n                       --x-library-path=/tmp/null \\\n                       --x-sysconfig-path=/tmp/null && \\\n    mkdir -p /usr/src/nvidia-$DRIVER_VERSION && \\\n    mv LICENSE mkprecompiled kernel /usr/src/nvidia-$DRIVER_VERSION && \\\n    sed '9,${/^\\(kernel\\|LICENSE\\)/!d}' .manifest > /usr/src/nvidia-$DRIVER_VERSION/.manifest && \\\n    rm -rf /tmp/* && rm -rf /usr/src/nvidia-\n\nCOPY nvidia-driver /usr/local/bin\n\nWORKDIR /usr/src/nvidia-$DRIVER_VERSION\n\nARG PUBLIC_KEY=empty\nCOPY ${PUBLIC_KEY} kernel/pubkey.x509\n\nENTRYPOINT [\"nvidia-driver\"]\n"
}