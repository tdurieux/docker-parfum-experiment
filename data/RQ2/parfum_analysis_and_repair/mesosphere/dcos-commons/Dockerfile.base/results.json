{
  "startTime": 1674250119105,
  "endTime": 1674250120357,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 37,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 13
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 77
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 53,
        "lineEnd": 74,
        "columnStart": 4,
        "columnEnd": 7
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 77
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 37,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 13
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 101
      }
    }
  ],
  "repairedDockerfile": "# This is the base image for mesosphere/dcos-commons, created in order to\n# overcome issues such as DCOS-44265 which come about because neither the 18.04\n# tag is immutable, nor the apt-get install command is repeatable.\n#\n# If you need a new version of this image (either because you require more\n# recent versions of the base OS or one of the packages installed here, or\n# because you modified this file), there are two ways to use it:\n#\n# 1) Slower but semi-automatic and public:\n# - once the desired version of this file is merged to master, the builder\n#   on Jenkins will build and push a new version of this image\n# - at that point, renovatebot will make a PR to bump the sha in FROM line in\n#   Dockerfile (of the main image)\n#\n# 2) Faster, for local testing:\n# - make the required changes to this file, and/or run the following build\n#   command with --no-cache\n# $ TAG=$(date +%Y%m%d)-local\n# $ docker build -f Dockerfile.base -t mesosphere/dcos-commons-base:$TAG .\n# - put the tag into the FROM line in Dockerfile (of the main image)\n#   temporarily, rebuild that one, test, etc.\n#\nFROM ubuntu:18.04@sha256:0925d086715714114c1988f7c947db94064fd385e171a63c07730f1fa014e6f9\n\n# Docker and DIND\n# links to commit hashes are listed inside posted Dockerfiles at\n# https://hub.docker.com/r/library/docker/\n# NOTE: must match engine version that is directly pulled from\n# Alpine's Dockerfile:\n# - go to https://hub.docker.com/r/library/docker/\n# - click on the matching alpine version tag (eg, 17.12.0-dind)\n# - pull the DIND_COMMIT hash from the Dockerfile that opens\nARG DOCKER_VERSION=5:18.09.8\nARG DIND_COMMIT=37498f009d8bf25fbb6199e8ccd34bed84f2874b\n\nCOPY dind-wrapper.sh /usr/local/bin/dind-wrapper.sh\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y \\\n        wget \\\n        gnupg && \\\n    wget -O - \"https://download.docker.com/linux/ubuntu/gpg\" \\\n        | apt-key add -qq - \\\n    && echo \"deb [arch=amd64] \\\n        https://download.docker.com/linux/ubuntu \\\n        bionic \\\n        stable\" > /etc/apt/sources.list.d/docker.list \\\n    && wget -O /usr/local/bin/dind \"https://raw.githubusercontent.com/docker/docker/${DIND_COMMIT}/hack/dind\" \\\n    && chmod a+x /usr/local/bin/dind \\\n    && chmod a+x /usr/local/bin/dind-wrapper.sh && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get install --no-install-recommends -y python3-software-properties software-properties-common && \\\n    add-apt-repository -y ppa:openjdk-r/ppa && \\\n    apt-get update && \\\n    apt-get install --no-install-recommends -y -V -oDebug::pkgDepCache::AutoInstall=yes \\\n    grub-pc- \\\n    curl \\\n    docker-ce=\"${DOCKER_VERSION}~3-0~ubuntu-bionic\" \\\n    git \\\n    jq \\\n    libcairo2-dev \\\n    libgirepository1.0-dev \\\n    libssl-dev \\\n    openjdk-11-jdk \\\n    pkg-config \\\n    python-pip \\\n    python3 \\\n    python3-cairo-dev \\\n    python3-dev \\\n    python3-pip \\\n    rsync \\\n    tox \\\n    software-properties-common \\\n    upx-ucl \\\n    wget \\\n    zip && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    java -version\n\n#Remove pycrypto-2.6.1 due to https://nvd.nist.gov/vuln/detail/CVE-2018-6594\nRUN apt-get remove -y python3-crypto\n"
}