diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/mesosphere/marathon-lb/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/mesosphere/marathon-lb/Dockerfile/repaired.Dockerfile
index 273a15e..2e244dc 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/mesosphere/marathon-lb/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/mesosphere/marathon-lb/Dockerfile/repaired.Dockerfile
@@ -27,10 +27,10 @@ RUN set -x \
     && wget -O tini "https://github.com/krallin/tini/releases/download/$TINI_VERSION/tini-amd64" \
     && wget -O tini.asc "https://github.com/krallin/tini/releases/download/$TINI_VERSION/tini-amd64.asc" \
     && export GNUPGHOME="$(mktemp -d)" \
-    && gpg --keyserver ha.pool.sks-keyservers.net --recv-keys "$TINI_GPG_KEY" \
-    || gpg --keyserver pool.sks-keyservers.net --recv-keys "$TINI_GPG_KEY" \
-    || gpg --keyserver keyserver.pgp.com --recv-keys "$TINI_GPG_KEY" \
-    || gpg --keyserver pgp.mit.edu --recv-keys "$TINI_GPG_KEY" \
+    && gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$TINI_GPG_KEY" \
+    || gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$TINI_GPG_KEY" \
+    || gpg --batch --keyserver keyserver.pgp.com --recv-keys "$TINI_GPG_KEY" \
+    || gpg --batch --keyserver pgp.mit.edu --recv-keys "$TINI_GPG_KEY" \
     && gpg --batch --verify tini.asc tini \
     && rm -rf "$GNUPGHOME" tini.asc \
     && mv tini /usr/bin/tini \
@@ -90,12 +90,12 @@ RUN set -x \
 # Install Python packages with --upgrade so we get new packages even if a system
 # package is already installed. Combine with --force-reinstall to ensure we get
 # a local package even if the system package is up-to-date as the system package
-# will probably be uninstalled with the build dependencies.
-    && pip3 install --no-cache --upgrade --force-reinstall -r /marathon-lb/requirements.txt \
-    \
+# will probably be uninstalled with the build dependencies. \
+    && pip3 install --no-cache-dir --no-cache --upgrade --force-reinstall -r /marathon-lb/requirements.txt \
+
     && apt-get purge -y --auto-remove $buildDeps \
 # Purge of python3-dev will delete python3 also
-    && apt-get update && apt-get install -y --no-install-recommends python3
+    && apt-get update && apt-get install -y --no-install-recommends python3 && rm -rf /var/lib/apt/lists/*;
 
 COPY  . /marathon-lb