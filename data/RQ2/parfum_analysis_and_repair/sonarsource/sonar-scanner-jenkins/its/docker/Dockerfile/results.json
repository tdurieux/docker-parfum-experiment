{
  "startTime": 1674254007515,
  "endTime": 1674254008535,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 29,
        "columnEnd": 120
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 5,
        "columnEnd": 167
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 22,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 22,
        "columnEnd": 50
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 23
      }
    }
  ],
  "repairedDockerfile": "#------------------------------------------------------------------------------\n# Prepares a folder for storing Jenkins builds, which is needed to run the ITs\n# during the QA task.\n#\n# Build from the basedir:\n#   docker build -f its/docker/Dockerfile -t sonar-scanner-jenkins-qa its/docker\n#\n# Verify the content of the image by running a shell session in it:\n#   docker run -it sonar-scanner-jenkins-qa bash\n#\n# CirrusCI builds the image when needed. No need to manually upload it to\n# Google Cloud Container Registry. See section \"gke_container\" of .cirrus.yml\n#------------------------------------------------------------------------------\n\nFROM us.gcr.io/sonarqube-team/base:j11-m3-latest\n\nUSER root\n\n#==============================================================================\n# Xvfb, for integration tests\n#==============================================================================\nRUN apt-get update && apt-get -y --no-install-recommends install xvfb wget && rm -rf /var/lib/apt/lists/*;\n\n#==============================================================================\n# Install nodejs\n#==============================================================================\nRUN apt-get install --no-install-recommends -y nodejs && rm -rf /var/lib/apt/lists/*;\n\n#==============================================================================\n# Google Chrome, for integration tests\n#==============================================================================\nARG CHROME_VERSION=85.0.4183.102-1\nRUN echo \"Using Chrome version: $CHROME_VERSION\" \\\n  && wget --no-verbose -O /tmp/chrome_amd64.deb https://dl.google.com/linux/chrome/deb/pool/main/g/google-chrome-stable/google-chrome-stable_${CHROME_VERSION}_amd64.deb \\\n  # Ignore install errors; we will try and fix them below.\n  && dpkg -i /tmp/chrome_amd64.deb || true\nRUN apt-get install -fy\n\nCOPY its/docker/wrap_chrome_binary /opt/bin/wrap_chrome_binary\nRUN /opt/bin/wrap_chrome_binary\n\nARG CHROME_DRIVER_VERSION=google-chrome-stable\nRUN INSTALLED_CHROME_VERSION=$(apt-cache policy google-chrome-stable | grep Installed | cut -d: -f2 | xargs | cut -d\\.  -f1) \\\n  && CHROME_DRIVER_VERSION=$( curl -f \"https://chromedriver.storage.googleapis.com/LATEST_RELEASE_$INSTALLED_CHROME_VERSION\") \\\n  && wget --no-verbose -O /tmp/chromedriver_linux64.zip \"https://chromedriver.storage.googleapis.com/$CHROME_DRIVER_VERSION/chromedriver_linux64.zip\" \\\n  && rm -rf /opt/selenium/chromedriver \\\n  && mkdir -p /opt/selenium \\\n  && unzip /tmp/chromedriver_linux64.zip -d /opt/selenium \\\n  && rm /tmp/chromedriver_linux64.zip \\\n  && mv /opt/selenium/chromedriver /usr/bin/chromedriver \\\n  && chmod 755 /usr/bin/chromedriver\n\nRUN echo \"Installing dotnet 2.2\" \\\n  && set -x \\\n  && wget --no-verbose -O /tmp/dotnet.tar.gz https://download.visualstudio.microsoft.com/download/pr/228832ea-805f-45ab-8c88-fa36165701b9/16ce29a06031eeb09058dee94d6f5330/dotnet-sdk-2.2.401-linux-x64.tar.gz \\\n  && mkdir -p /usr/share/dotnet/ \\\n  && tar zxf /tmp/dotnet.tar.gz -C /usr/share/dotnet/ && rm /tmp/dotnet.tar.gz \\\n  && ln -s /usr/share/dotnet/dotnet /usr/bin/dotnet \\\n  && chmod -R 755 /usr/share/dotnet \\\n  && chmod 755 /usr/bin/dotnet\nRUN dotnet --info\n\nUSER sonarsource\n"
}