{
  "startTime": 1674250068205,
  "endTime": 1674250069487,
  "originalSmells": [
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 20,
        "lineEnd": 23,
        "columnStart": 1,
        "columnEnd": 49
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:xenial\nWORKDIR /build\n\n# install aarch64(armv8) dependencies and tools\nRUN dpkg --add-architecture arm64\nRUN echo '# source urls for arm64 \\n\\\n\tdeb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports/ xenial main \\n\\\n\tdeb-src [arch=arm64] http://ports.ubuntu.com/ubuntu-ports/ xenial main \\n\\\n\tdeb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports/ xenial-updates main \\n\\\n\tdeb-src [arch=arm64] http://ports.ubuntu.com/ubuntu-ports/ xenial-updates main \\n\\\n\tdeb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports/ xenial-security main \\n\\\n\tdeb-src [arch=arm64] http://ports.ubuntu.com/ubuntu-ports/ xenial-security main \\n # end arm64 section' >> /etc/apt/sources.list &&\\\n\tsed -r 's/deb h/deb \\[arch=amd64\\] h/g' /etc/apt/sources.list > /tmp/sources-tmp.list && \\\n\tcp /tmp/sources-tmp.list /etc/apt/sources.list&& \\\n\tsed -r 's/deb-src h/deb-src \\[arch=amd64\\] h/g' /etc/apt/sources.list > /tmp/sources-tmp.list&&cat /etc/apt/sources.list &&\\\n\tcp /tmp/sources-tmp.list /etc/apt/sources.list&& echo \"next\"&&cat /etc/apt/sources.list\n\n# install tools and dependencies\nRUN apt-get -y update && \\\n\tapt-get upgrade -y && \\\n\tapt-get install -y --no-install-recommends \\\n\tcurl make cmake file ca-certificates  \\\n\tg++ gcc-aarch64-linux-gnu g++-aarch64-linux-gnu \\\n\tlibc6-dev-arm64-cross binutils-aarch64-linux-gnu \\\n\t&& \\\n\tapt-get clean && rm -rf /var/lib/apt/lists/*;\n\n# install rustup\nRUN curl https://sh.rustup.rs -sSf | sh -s -- -y\n\n# rustup directory\nENV PATH /root/.cargo/bin:$PATH\n\nENV RUST_TARGETS=\"aarch64-unknown-linux-gnu\"\n\n# multirust add arm--linux-gnuabhf toolchain\nRUN rustup target add aarch64-unknown-linux-gnu\n\n# show backtraces\nENV RUST_BACKTRACE 1\n\n# show tools\nRUN rustc -vV && cargo -V\n\n# build OpenEthereum\nADD . /build/openethereum\nRUN cd openethereum && \\\n\tmkdir -p .cargo && \\\n\techo '[target.aarch64-unknown-linux-gnu]\\n\\\n\tlinker = \"aarch64-linux-gnu-gcc\"\\n'\\\n\t>>.cargo/config && \\\n\tcat .cargo/config && \\\n\tcargo build --target aarch64-unknown-linux-gnu --release --verbose && \\\n\tls /build/openethereum/target/aarch64-unknown-linux-gnu/release/openethereum && \\\n\t/usr/bin/aarch64-linux-gnu-strip /build/openethereum/target/aarch64-unknown-linux-gnu/release/openethereum\n\nRUN file /build/openethereum/target/aarch64-unknown-linux-gnu/release/openethereum\n\nEXPOSE 8080 8545 8180\nENTRYPOINT [\"/build/openethereum/target/aarch64-unknown-linux-gnu/release/openethereum\"]\n"
}