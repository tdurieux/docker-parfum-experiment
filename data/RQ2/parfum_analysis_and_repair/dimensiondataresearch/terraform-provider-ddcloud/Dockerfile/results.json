{
  "startTime": 1674248055953,
  "endTime": 1674248056770,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 42
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# ---------------------------------------------------------------------------------------------------------------------\n# Terraform Build Image\n\n# FROM golang:alpine as Build\nFROM golang:1.12.1-alpine as Build\n\nENV TERRAFORM_VERSION=0.12.19\nENV DDCLOUD_VERSION=3.0\n\nRUN apk add --no-cache --update git bash openssh make\n\nENV TF_DEV=true\nENV TF_RELEASE=true\n\n\n## Terraform\nWORKDIR $GOPATH/src/github.com/hashicorp/terraform\nRUN git clone https://github.com/hashicorp/terraform.git ./ && \\\n    git checkout v${TERRAFORM_VERSION} && \\\n    /bin/bash scripts/build.sh && \\\n    ls -l /bin\n\n\n## DDCloud Provider\nWORKDIR $GOPATH/src/github.com/DimensionDataResearch/dd-cloud-compute-terraform\nRUN git clone https://github.com/DimensionDataResearch/dd-cloud-compute-terraform.git ./ && \\\n    # git checkout v${DDCLOUD_VERSION} && \\\n    git checkout development/v${DDCLOUD_VERSION} && \\\n    go get github.com/pkg/errors && \\\n    go get golang.org/x/crypto/pkcs12 && \\\n    go get github.com/DimensionDataResearch/go-dd-cloud-compute/compute && \\\n    make dev\n\n\n\n# ---------------------------------------------------------------------------------------------------------------------\n# Create Minimal Image\n\nFROM alpine\nRUN apk add --no-cache --update git bash openssh curl\nCOPY --from=build /go/bin/terraform /bin\nCOPY --from=build /usr/local/bin/terraform-provider-ddcloud /bin\n\n\n## Kubectl binadry download (The K8s/Helm Terraform providers are not yet able to perform all the configuration required during a deployment)\nRUN wget https://storage.googleapis.com/kubernetes-release/release/v1.15.3/bin/linux/amd64/kubectl && \\\n    chmod +x ./kubectl && \\\n    mv ./kubectl /usr/local/bin/kubectl\n\nWORKDIR /bin\n\nENTRYPOINT [\"terraform\"]"
}