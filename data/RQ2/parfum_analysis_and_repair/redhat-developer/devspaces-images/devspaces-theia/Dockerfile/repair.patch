diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/redhat-developer/devspaces-images/devspaces-theia/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/redhat-developer/devspaces-images/devspaces-theia/Dockerfile/repaired.Dockerfile
index e88f665..1101770 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/redhat-developer/devspaces-images/devspaces-theia/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/redhat-developer/devspaces-images/devspaces-theia/Dockerfile/repaired.Dockerfile
@@ -40,7 +40,7 @@ RUN tar xzf /tmp/asset-theia-source-code.tar.gz -C ${HOME} && rm -f /tmp/asset-t
 
 #apply patch for Theia loader
 COPY asset-branding.tar.gz /tmp/asset-branding.tar.gz
-RUN tar xvzf /tmp/asset-branding.tar.gz -C /tmp; cp /tmp/branding/loader/loader.svg ${HOME}/theia-source-code/packages/core/src/browser/icons/loader.svg
+RUN tar xvzf /tmp/asset-branding.tar.gz -C /tmp; rm /tmp/asset-branding.tar.gz cp /tmp/branding/loader/loader.svg ${HOME}/theia-source-code/packages/core/src/browser/icons/loader.svg
 RUN cd ${HOME}/theia-source-code && git apply /tmp/branding/loader/loader.patch
 # patch electron module by removing native keymap module (no need to have some X11 libraries)
 RUN line_to_delete=$(grep -n native-keymap ${HOME}/theia-source-code/dev-packages/electron/package.json | cut -d ":" -f 1) && \
@@ -102,9 +102,9 @@ RUN che-theia cdn --theia="${CDN_PREFIX}" --monaco="${MONACO_CDN_PREFIX}"
 
 
 RUN echo ${HOME} && cd ${HOME} && tar zxf eclipse-che-theia-generator.tgz && mv package eclipse-che-theia-generator && \
-    ls -la /home/theia-dev/*
+    ls -la /home/theia-dev/* && rm eclipse-che-theia-generator.tgz
 
-RUN yum install -y libsecret libsecret-devel make cmake gcc gcc-c++
+RUN yum install -y libsecret libsecret-devel make cmake gcc gcc-c++ && rm -rf /var/cache/yum
 
 
 
@@ -123,7 +123,7 @@ ENV PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true \
 
 COPY asset-node-headers.tar.gz ${HOME}/asset-node-headers.tar.gz
 RUN \
-    # Use local file for node headers
+
     npm config set tarball ${HOME}/asset-node-headers.tar.gz && \
     # Disable puppeteer from downloading chromium
     npm config set puppeteer_skip_chromium_download true -g && \
@@ -132,14 +132,14 @@ RUN \
     echo "#!/usr/bin/env node" > /home/theia-dev/theia-source-code/scripts/prepare-travis \
     # Add offline mode in examples
     && sed -i -e "s|spawnSync('yarn', \[\]|spawnSync('yarn', \['--offline'\]|" ${HOME}/theia-source-code/plugins/foreach_yarn \
-    # Disable automatic tests that connect online
-    && for d in plugins/*/package.json; do echo "Disable 'yarn test' in $d"; sed -i -e "s/ && yarn test//" $d; done
+    # Disable automatic tests that connect online \
+    && for d in plugins/*/package.json; do echo "Disable 'yarn test' in $d"; sed -i -e "s/ && yarn test//" $d; done && yarn cache clean;
 
 # enable offline move (no DNS resolution)
 # comment out -- this fails with "Device or resource busy"
 # RUN mv /etc/resolv.conf{,.BAK} && echo "" > /etc/resolv.conf
 RUN echo "" > /etc/resolv.conf || true
-# kill all electron 
+# kill all electron
 RUN rm -fr /home/theia-dev/theia-source-code/node_modules/*/electron /home/theia-dev/theia-source-code/node_modules/*electron* || true
 
 # Unset GITHUB_TOKEN environment variable if it is empty.
@@ -251,8 +251,8 @@ COPY asset-sshpass-sources.tar.gz /tmp/
 RUN LIBSECRET="libsecret libsecret-devel" \
     && yum install -y $LIBSECRET sudo git git-lfs bzip2 which bash curl openssh less \
     && tar -xvf /tmp/asset-sshpass-sources.tar.gz -C /tmp/ && \
-    cd /tmp/sshpass-*/ && ./configure && make install && cd .. && rm -rf *sshpass-* && \
-    echo "Installed Packages" && rpm -qa | sort -V && echo "End Of Installed Packages"
+    cd /tmp/sshpass-*/ && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" && make install && cd .. && rm -rf *sshpass-* && \
+    echo "Installed Packages" && rpm -qa | sort -V && echo "End Of Installed Packages" && rm -rf /var/cache/yum
 
 # setup yarn (if missing)
 # Include yarn assets for runtime image