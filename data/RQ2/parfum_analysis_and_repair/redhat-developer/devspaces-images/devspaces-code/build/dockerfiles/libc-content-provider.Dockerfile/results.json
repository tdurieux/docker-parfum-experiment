{
  "startTime": 1674249653071,
  "endTime": 1674249653706,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 7,
        "columnEnd": 34
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 24
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright (c) 2022 Red Hat, Inc.\n# This program and the accompanying materials are made\n# available under the terms of the Eclipse Public License 2.0\n# which is available at https://www.eclipse.org/legal/epl-2.0/\n#\n# SPDX-License-Identifier: EPL-2.0\n#\n# Contributors:\n#   Red Hat, Inc. - initial API and implementation\n\n# https://catalog.redhat.com/software/containers/ubi8/nodejs-16/615aee9fc739c0a4123a87e1?container-tabs=overview\nFROM registry.access.redhat.com/ubi8/nodejs-16:1-37.1652296488 as builder\n\nUSER root\n\n# Export GITHUB_TOKEN into environment variable\nARG GITHUB_TOKEN=''\nENV GITHUB_TOKEN=$GITHUB_TOKEN\n\n# Unset GITHUB_TOKEN environment variable if it is empty.\n# This is needed for some tools which use this variable and will fail with 401 Unauthorized error if it is invalid.\n# For example, vscode ripgrep downloading is an example of such case.\nRUN if [ -z $GITHUB_TOKEN ]; then unset GITHUB_TOKEN; fi\n\n# Install libsecret-devel on s390x and ppc64le for keytar build (binary included in npm package for x86)\nRUN { if [[ $(uname -m) == \"s390x\" ]]; then LIBSECRET=\"\\\n      https://rpmfind.net/linux/fedora-secondary/releases/34/Everything/s390x/os/Packages/l/libsecret-0.20.4-2.fc34.s390x.rpm \\\n      https://rpmfind.net/linux/fedora-secondary/releases/34/Everything/s390x/os/Packages/l/libsecret-devel-0.20.4-2.fc34.s390x.rpm\"; \\\n    elif [[ $(uname -m) == \"ppc64le\" ]]; then LIBSECRET=\"\\\n      libsecret \\\n      https://rpmfind.net/linux/centos/8-stream/BaseOS/ppc64le/os/Packages/libsecret-devel-0.18.6-1.el8.ppc64le.rpm\"; \\\n    elif [[ $(uname -m) == \"x86_64\" ]]; then LIBSECRET=\"\\\n      https://rpmfind.net/linux/centos/8-stream/BaseOS/x86_64/os/Packages/libsecret-devel-0.18.6-1.el8.x86_64.rpm \\\n      libsecret\"; \\\n    elif [[ $(uname -m) == \"aarch64\" ]]; then LIBSECRET=\"\\\n      https://rpmfind.net/linux/centos/8-stream/BaseOS/aarch64/os/Packages/libsecret-devel-0.18.6-1.el8.aarch64.rpm \\\n      libsecret\"; \\\n    else \\\n      LIBSECRET=\"\"; echo \"Warning: arch $(uname -m) not supported\"; \\\n    fi; } \\\n    && yum install -y $LIBSECRET curl make cmake gcc gcc-c++ python2 git git-core-doc openssh less libX11-devel libxkbcommon bash tar gzip rsync patch \\\n    && yum -y clean all && rm -rf /var/cache/yum \\\n    && npm install -g yarn@1.22.17 && npm cache clean --force;\nCOPY code /checode-compilation\nWORKDIR /checode-compilation\nENV ELECTRON_SKIP_BINARY_DOWNLOAD=1 \\\n    PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD=1\n\n# Initialize a git repository for code build tools\nRUN git init .\n\n# change network timeout (slow using multi-arch build)\nRUN yarn config set network-timeout 600000 -g && yarn cache clean;\n\n# Grab dependencies (and force to rebuild them)\nRUN yarn install --force && yarn cache clean;\n\nRUN echo \"$(ulimit -a)\"\n\n# Compile\nRUN NODE_ARCH=$(echo \"console.log(process.arch)\" | node) \\\n    && NODE_VERSION=$(cat /checode-compilation/remote/.yarnrc | grep target | cut -d ' ' -f 2 | tr -d '\"') \\\n    # cache node from this image to avoid to grab it from within the build\n    && mkdir -p /checode-compilation/.build/node/v${NODE_VERSION}/linux-${NODE_ARCH} \\\n    && echo \"caching /checode-compilation/.build/node/v${NODE_VERSION}/linux-${NODE_ARCH}/node\" \\\n    && cp /usr/bin/node /checode-compilation/.build/node/v${NODE_VERSION}/linux-${NODE_ARCH}/node \\\n    && NODE_OPTIONS=\"--max_old_space_size=8500\" ./node_modules/.bin/gulp --tasks \\\n    && NODE_OPTIONS=\"--max_old_space_size=8500\" ./node_modules/.bin/gulp vscode-reh-web-linux-${NODE_ARCH}-min \\\n    && cp -r ../vscode-reh-web-linux-${NODE_ARCH} /checode\n\nRUN chmod a+x /checode/out/server-main.js \\\n    && chgrp -R 0 /checode && chmod -R g+rwX /checode\n\n# https://access.redhat.com/containers/?tab=tags#/registry.access.redhat.com/ubi8-minimal\nFROM registry.access.redhat.com/ubi8-minimal:8.6-854\nCOPY --from=builder --chown=0:0 /checode /checode-linux-libc\n"
}