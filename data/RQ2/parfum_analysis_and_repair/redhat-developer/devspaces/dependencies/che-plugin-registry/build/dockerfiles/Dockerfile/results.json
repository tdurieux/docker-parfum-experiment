{
  "startTime": 1674253974697,
  "endTime": 1674253975989,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 32
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# Copyright (c) 2018-2022 Red Hat, Inc.\n# This program and the accompanying materials are made\n# available under the terms of the Eclipse Public License 2.0\n# which is available at https://www.eclipse.org/legal/epl-2.0/\n#\n# SPDX-License-Identifier: EPL-2.0\n#\n# Contributors:\n#   Red Hat, Inc. - initial API and implementation\n#   IBM Corporation - implementation\n#\n\n# Builder: check meta.yamls and create index.json\n# https://access.redhat.com/containers/?tab=tags#/registry.access.redhat.com/ubi8/python-38\nFROM registry.access.redhat.com/ubi8/python-38:1-63.1626843762 as builder\nUSER 0\n\nARG BOOTSTRAP=false\nENV BOOTSTRAP=${BOOTSTRAP}\n\n# to get all the python deps pre-fetched so we can build in Brew:\n# 1. extract files in the container to your local filesystem\n#    find v3 -type f -exec dos2unix {} \\;\n\n# NOTE: used to be in /root/.local but now can be found in /opt/app-root/src/.local\n# CONTAINERNAME=pluginregistryoffline && \\\n# docker build -t ${CONTAINERNAME} . --no-cache  --target builder \\\n#   --build-arg BOOTSTRAP=true -f build/dockerfiles/Dockerfile\n# mkdir -p /tmp/root-local/ && docker run --rm -v \\\n#   /tmp/root-local/:/tmp/root-local/ ${CONTAINERNAME} /bin/bash \\\n#   -c 'cd /opt/app-root/src/.local/ && cp -r bin/ lib/ /tmp/root-local/'\n# pushd /tmp/root-local >/dev/null && sudo tar czf root-local.tgz lib/ bin/ && popd >/dev/null && mv -f /tmp/root-local/root-local.tgz . && sudo rm -fr /tmp/root-local/\n\n# 2. then add it to dist-git so it's part of this repo\n#    rhpkg new-sources root-local.tgz\n\n# built in Brew, use tarball in lookaside cache; built locally, comment this out\n# COPY root-local.tgz /tmp/root-local.tgz\n\n# NOTE: uncomment for local build. Must also set full registry path in FROM to registry.redhat.io or registry.access.redhat.com\n# enable rhel 7 or 8 content sets (from Brew) to resolve jq as rpm\nCOPY ./build/dockerfiles/content_set*.repo /etc/yum.repos.d/\nCOPY ./build/dockerfiles/rhel.install.sh /tmp\nRUN /tmp/rhel.install.sh && rm -f /tmp/rhel.install.sh\n\nCOPY ./build/scripts/*.sh /build/\nCOPY che-*.yaml /build/\nCOPY resources.tgz /build/\nCOPY ./v3/plugins/ /build/v3/plugins/\nCOPY ./v3/images/*.png /build/v3/images/\nWORKDIR /build/\n\nRUN tar -xvf resources.tgz -C ./ && rm resources.tgz\nRUN rm -rf ./output/v3/che-theia-plugins.yaml ./output/v3/che-editors.yaml ./output/v3/che-plugins.yaml\nRUN ./swap_plugins_memory.sh ./output/v3\nRUN ./list_referenced_images.sh ./output/v3 --use-generated-content > /build/output/v3/external_images.txt && cat /build/output/v3/external_images.txt\nRUN chmod -R g+rwX /build\n\n# Build registry, copying meta.yamls and index.json from builder\n# https://access.redhat.com/containers/?tab=tags#/registry.access.redhat.com/ubi8/httpd-24\nFROM registry.access.redhat.com/ubi8/httpd-24:1-143.1626836617 AS registry\nUSER 0\n\n# latest httpd container doesn't include ssl cert, so generate one\nRUN chmod +x /usr/share/container-scripts/httpd/pre-init/40-ssl-certs.sh && \\\n    /usr/share/container-scripts/httpd/pre-init/40-ssl-certs.sh\nRUN \\\n    yum -y -q update && \\\n    yum -y -q clean all && rm -rf /var/cache/yum && \\\n    echo \"Installed Packages\" && rpm -qa | sort -V && echo \"End Of Installed Packages\"\n\nRUN echo \"<FilesMatch \"\\\"\"^\\\\.ht\"\\\"\">\" >> /etc/httpd/conf/httpd.conf && \\\n    echo \"Require all denied\" >> /etc/httpd/conf/httpd.conf && \\\n    echo \"</FilesMatch>\" >> /etc/httpd/conf/httpd.conf\n\nRUN sed -i /etc/httpd/conf.d/ssl.conf \\\n    -e \"s,SSLProtocol all -SSLv2,SSLProtocol all -SSLv3,\" \\\n    -e \"s,SSLCipherSuite HIGH:MEDIUM:!aNULL:!MD5,SSLCipherSuite HIGH:!aNULL:!MD5,\"\n\nRUN sed -i /etc/httpd/conf/httpd.conf \\\n    -e \"s,Listen 80,Listen 8080,\" \\\n    -e \"s,logs/error_log,/dev/stderr,\" \\\n    -e \"s,logs/access_log,/dev/stdout,\" \\\n    -e \"s,AllowOverride None,AllowOverride All,\" && \\\n    chmod a+rwX /etc/httpd/conf /run/httpd /etc/httpd/logs/\nSTOPSIGNAL SIGWINCH\n\nARG DS_BRANCH=devspaces-3-rhel-8\nENV DS_BRANCH=${DS_BRANCH}\n\nWORKDIR /var/www/html\n\nRUN mkdir -m 777 /var/www/html/v3\nCOPY README.md .htaccess /var/www/html/\nCOPY --from=builder /build/output/v3 /var/www/html/v3\nCOPY --from=builder /build/v3/plugins/ /var/www/html/v3/plugins/\nCOPY --from=builder /build/v3/images/ /var/www/html/v3/images/\nCOPY ./build/dockerfiles/rhel.entrypoint.sh ./build/dockerfiles/entrypoint.sh /usr/local/bin/\nRUN chmod g+rwX /usr/local/bin/entrypoint.sh /usr/local/bin/rhel.entrypoint.sh && \\\n    chgrp -R 0 /var/www/html && chmod -R g+rw /var/www/html\nENTRYPOINT [\"/usr/local/bin/entrypoint.sh\"]\nCMD [\"/usr/local/bin/rhel.entrypoint.sh\"]\n\n# append Brew metadata here\n"
}