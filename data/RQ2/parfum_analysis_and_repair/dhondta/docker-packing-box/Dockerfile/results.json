{
  "startTime": 1674256144277,
  "endTime": 1674256148064,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 91,
        "lineEnd": 91,
        "columnStart": 5,
        "columnEnd": 56
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 92,
        "lineEnd": 92,
        "columnStart": 4,
        "columnEnd": 66
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 119,
        "lineEnd": 119,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 5,
        "columnEnd": 53
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 93
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 20,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 78
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 5,
        "columnEnd": 119
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 114
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 109
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 75
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 5,
        "columnEnd": 60
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 114,
        "lineEnd": 114,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 5,
        "columnEnd": 53
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 93
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 20,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 78
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 5,
        "columnEnd": 119
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 114
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 109
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 5,
        "columnEnd": 60
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 114,
        "lineEnd": 114,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 5,
        "columnEnd": 53
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 93
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 20,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 78
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 5,
        "columnEnd": 119
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 114
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 109
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 75
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 5,
        "columnEnd": 60
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 114,
        "lineEnd": 114,
        "columnStart": 4,
        "columnEnd": 39
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 114,
        "lineEnd": 114,
        "columnStart": 4,
        "columnEnd": 63
      }
    }
  ],
  "repairedDockerfile": "# +--------------------------------------------------------------------------------------------------------------------+\n# |                                         CREATE THE BOX BASED ON UBUNTU                                             |\n# +--------------------------------------------------------------------------------------------------------------------+\nFROM ubuntu:20.04 AS base\nMAINTAINER Alexandre DHondt <alexandre.dhondt@gmail.com>\nLABEL version=\"1.1.0\"\nLABEL source=\"https://github.com/dhondta/packing-box\"\nENV DEBIAN_FRONTEND noninteractive\nENV TERM xterm-256color\n# add a test user (for apps that require a non-privileged user)\nRUN useradd test -p test\n# apply upgrade\nRUN (apt -qq update \\\n && apt -qq -y upgrade \\\n && apt -qq -y autoremove \\\n && apt -qq autoclean) 2>&1 > /dev/null \\\n || echo -e \"\\033[1;31m SYSTEM UPGRADE FAILED \\033[0m\"\n# install common dependencies and libraries\nRUN ( apt -qq --no-install-recommends -y install apt-transport-https apt-utils \\\n && apt -qq --no-install-recommends -y install bash-completion build-essential clang cmake software-properties-common \\\n && apt -qq --no-install-recommends -y install libavcodec-dev libavformat-dev libavresample-dev libavutil-dev libbsd-dev libboost-regex-dev \\\n                       libboost-program-options-dev libboost-system-dev libboost-filesystem-dev libc6-dev-i386 \\\n                       libcairo2-dev libdbus-1-dev libegl1-mesa-dev libelf-dev libffi-dev libfontconfig1-dev \\\n                       libfreetype6-dev libfuse-dev libgif-dev libgirepository1.0-dev libgl1-mesa-dev libglib2.0-dev \\\n                       libglu1-mesa-dev libjpeg-dev libpulse-dev libssl-dev libsvm-java libtiff5-dev libudev-dev \\\n                       libxcursor-dev libxkbfile-dev libxml2-dev libxrandr-dev2>&1> /dev/null) \\\n || echo -e \"\\033[1;31m DEPENDENCIES INSTALL FAILED \\033[0m\" && rm -rf /var/lib/apt/lists/*;\n# install useful tools (missing: )\nRUN ( apt -qq --no-install-recommends -y install colordiff colortail cython3 dosbox git golang less ltrace tree strace sudo tmate tmux vim xterm \\\n && apt -qq --no-install-recommends -y install iproute2 nodejs npm python3-setuptools python3-pip swig visidata weka x11-apps yarnpkg zstd \\\n && apt -qq --no-install-recommends -y install curl ffmpeg imagemagick iptables jq psmisc tesseract-ocr unrar unzip wget xdotool xvfb \\\n && apt -qq --no-install-recommends -y install binwalk ent foremost \\\n && wget -qO /tmp/bat.deb https://github.com/sharkdp/bat/releases/download/v0.18.2/bat-musl_0.18.2_amd64.deb \\\n && dpkg -i /tmp/bat.deb && rm -f /tmp/bat.deb2>&1> /dev/null) \\\n || echo -e \"\\033[1;31m TOOLS INSTALL FAILED \\033[0m\" && rm -rf /var/lib/apt/lists/*;\n# configure the locale\nRUN apt -qq clean \\\n && apt -qq update \\\n && apt -qq --no-install-recommends -y install locales \\\n && locale-gen en_US.UTF-8 && rm -rf /var/lib/apt/lists/*;\nENV LANG en_US.UTF-8\nENV LANGUAGE en_US:en\nENV LC_ALL en_US.UTF-8\n# configure iptables\n#RUN addgroup no-internet \\\n# && iptables -I OUTPUT 1 -m owner --gid-owner no-internet -j DROP \\\n# && ip6tables -I OUTPUT 1 -m owner --gid-owner no-internet -j DROP\n# install wine (for running Windows software on Linux)\nRUN ( dpkg --add-architecture i386 \\\n && wget -nc https://dl.winehq.org/wine-builds/winehq.key \\\n && apt-key add winehq.key \\\n && add-apt-repository 'deb https://dl.winehq.org/wine-builds/ubuntu/ focal main' \\\n && apt -qq update \\\n && apt -qq --no-install-recommends -y install --install-recommends winehq-stable wine32 winetricks \\\n && wineboot2>&1> /dev/null) \\\n || echo -e \"\\033[1;31m WINE INSTALL FAILED \\033[0m\" && rm -rf /var/lib/apt/lists/*;\n# install dosemu (for emulating DOS programs on Linux)\nRUN apt-key adv --recv-keys --keyserver keyserver.ubuntu.com 6D9CD73B401A130336ED0A56EBE1B5DED2AD45D6 \\\n && add-apt-repository ppa:dosemu2/ppa -y \\\n && apt -qq update \\\n && apt -qq --no-install-recommends -y install dosemu2 && rm -rf /var/lib/apt/lists/*;\n# install mono (for running .NET apps on Linux)\nRUN ( apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF \\\n && apt-add-repository 'deb https://download.mono-project.com/repo/ubuntu stable-focal main' \\\n && apt -qq update \\\n && apt -qq --no-install-recommends -y install mono-complete mono-vbnc2>&1> /dev/null) \\\n || echo -e \"\\033[1;31m MONO INSTALL FAILED \\033[0m\" && rm -rf /var/lib/apt/lists/*;\n# install .NET core\nRUN (wget -qO /tmp/dotnet-install.sh https://dot.net/v1/dotnet-install.sh \\\n && chmod +x /tmp/dotnet-install.sh \\\n && /tmp/dotnet-install.sh -c Current \\\n && rm -f /tmp/dotnet-install.sh \\\n && chmod +x /root/.dotnet/dotnet \\\n && ln -s /root/.dotnet/dotnet /usr/bin/dotnet) 2>&1 > /dev/null \\\n || echo -e \"\\033[1;31m DOTNET INSTALL FAILED \\033[0m\"\n# install MingW\nRUN ( apt -qq --no-install-recommends -y install --install-recommends clang mingw-w64 \\\n && git clone https://github.com/tpoechtrager/wclang \\\n && cd wclang \\\n && cmake -DCMAKE_INSTALL_PREFIX=_prefix_ . \\\n && make && make install \\\n && mv _prefix_/bin/* /usr/local/bin/ \\\n && cd /tmp && rm -rf wclang2>&1> /dev/null) \\\n || echo -e \"\\033[1;31m MINGW INSTALL FAILED \\033[0m\" && rm -rf /var/lib/apt/lists/*;\n# install darling (for running MacOS software on Linux)\n#RUN (apt -qq -y install cmake clang bison flex pkg-config linux-headers-generic gcc-multilib \\\n# && cd /tmp/ && git clone --recursive https://github.com/darlinghq/darling.git && cd darling \\\n# && mkdir build && cd build && cmake .. && make && make install \\\n# && make lkm && make lkm_install) 2>&1 > /dev/null \\\n# || echo -e \"\\033[1;31m DARLING INSTALL FAILED \\033[0m\"\n# install/update Python packages\nRUN ( pip3 install --no-cache-dir poetry sklearn tinyscript tldr thefuck \\\n && pip3 install --no-cache-dir angr capstone dl8.5 pandas pefile pyelftools weka \\\n && pip3 freeze - local | grep -v \"^\\-e\" | cut -d = -f 1 | xargs -n1 pip3 install -qU2>&1> /dev/null) \\\n || echo -e \"\\033[1;31m PIP PACKAGES UPDATE FAILED \\033[0m\"\n# +--------------------------------------------------------------------------------------------------------------------+\n# |                                     CUSTOMIZE THE BOX (refine the terminal)                                        |\n# +--------------------------------------------------------------------------------------------------------------------+\nFROM base AS customized\n# copy customized files\nCOPY src/term /tmp/term\nRUN for f in `ls /tmp/term/`; do cp \"/tmp/term/$f\" \"/root/.${f##*/}\"; done \\\n && rm -rf /tmp/term\n# set the base files and folders for further setup\nCOPY src/conf/*.yml /opt/\nRUN mkdir -p /mnt/share /opt/bin /opt/tools /opt/analyzers /opt/detectors /opt/packers /opt/unpackers \\\n                                            /tmp/analyzers /tmp/detectors /tmp/packers /tmp/unpackers\n# +--------------------------------------------------------------------------------------------------------------------+\n# |                                              ADD FRAMEWORK ITEMS                                                   |\n# +--------------------------------------------------------------------------------------------------------------------+\nFROM customized AS framework\n# copy pre-built utils and tools\n# note: libgtk is required for bytehist, even though it can be used in no-GUI mode\nCOPY src/files/utils/* /opt/utils/\nRUN apt -qq --no-install-recommends -y install libgtk2.0-0:i386 \\\n && /opt/utils/tridupdate && rm -rf /var/lib/apt/lists/*;\nCOPY src/files/tools/* /opt/tools/\n# copy and install pbox (main library for tools) and pboxtools (lightweight library for items)\nCOPY src/lib /tmp/lib\nRUN pip3 install --no-cache-dir /tmp/lib/ 2>&1 > /dev/null \\\n && mv /opt/tools/help /opt/tools/?\n# install unpackers\nCOPY src/files/analyzers/* /opt/analyzers/\nRUN mv /opt/analyzers/*.zip /tmp/analyzers/ \\\n && /opt/tools/packing-box setup analyzer\n# install detectors (including wrapper scripts)\nCOPY src/files/detectors/* /opt/bin/\nRUN mv /opt/bin/*.txt /opt/detectors/ \\\n && mv /opt/bin/*.tar.xz /tmp/detectors/ \\\n && /opt/tools/packing-box setup detector\n# install packers\nCOPY src/files/packers/* /tmp/packers/\nRUN /opt/tools/packing-box setup packer\n# install unpackers\n#COPY src/files/unpackers/* /tmp/unpackers/  # leave this commented as long as src/files/unpackers has no file\nRUN /opt/tools/packing-box setup unpacker\n# ----------------------------------------------------------------------------------------------------------------------\nRUN find /opt/bin -type f -exec chmod +x {} \\;\nENTRYPOINT /opt/tools/startup\nWORKDIR /mnt/share\n"
}