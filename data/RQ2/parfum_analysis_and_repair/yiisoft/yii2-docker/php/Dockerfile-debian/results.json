{
  "startTime": 1674255799501,
  "endTime": 1674255800617,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 26,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 73,
        "lineEnd": 73,
        "columnStart": 4,
        "columnEnd": 46
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# PHP Docker image for Yii 2.0 Framework runtime\n# ==============================================\n\nARG PHP_BASE_IMAGE_VERSION\nFROM php:${PHP_BASE_IMAGE_VERSION} as min\n\n# Install required system packages for PHP extensions for Yii 2.0 Framework\nCOPY --from=mlocati/php-extension-installer /usr/bin/install-php-extensions /usr/local/bin/\nRUN install-php-extensions \\\n        intl\n\n# Environment settings\nENV PHP_USER_ID=33 \\\n    PATH=/app:/app/vendor/bin:/root/.composer/vendor/bin:$PATH \\\n    TERM=linux\n\n# Add configuration files\nCOPY image-files/min/ /\n\n# Enable mod_rewrite for images with apache\nRUN if command -v a2enmod >/dev/null 2>&1; then \\\n        a2enmod rewrite headers \\\n    ;fi\n\n# Install Yii framework bash autocompletion\nRUN mkdir /etc/bash_completion.d && \\\n    curl -f -L https://raw.githubusercontent.com/yiisoft/yii2/master/contrib/completion/bash/yii \\\n         -o /etc/bash_completion.d/yii\n\n# Application environment\nWORKDIR /app\n\nRUN chmod 755 \\\n        /usr/local/bin/docker-php-entrypoint\n\n\nFROM min as dev\n\n# Install system packages\nRUN apt-get update && \\\n    apt-get -y install \\\n            unzip \\\n        --no-install-recommends && \\\n        apt-get clean && \\\n        rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\n# Install common system packages for PHP extensions recommended for Yii 2.0 Framework\nCOPY --from=mlocati/php-extension-installer /usr/bin/install-php-extensions /usr/local/bin/\nRUN install-php-extensions \\\n        soap \\\n        zip \\\n        bcmath \\\n        exif \\\n        gd \\\n        opcache \\\n        pdo_mysql \\\n        pdo_pgsql \\\n        imagick \\\n        mongodb \\\n        xdebug\n\n# Add configuration files\nCOPY image-files/dev/ /\n\n# Disable xdebug by default (see PHP_ENABLE_XDEBUG)\nRUN rm /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini\n\n# Add GITHUB_API_TOKEN support for composer\nRUN chmod 755 \\\n        /usr/local/bin/docker-php-entrypoint \\\n        /usr/local/bin/composer\n\n# Install composer\nRUN curl -f -sS https://getcomposer.org/installer | php -- \\\n        --filename=composer.phar \\\n        --install-dir=/usr/local/bin && \\\n    composer clear-cache\n\n# Environment settings\nENV COMPOSER_ALLOW_SUPERUSER=1 \\\n    PHP_ENABLE_XDEBUG=0\n"
}