{
  "startTime": 1674251571921,
  "endTime": 1674251572550,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 28
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine\nMAINTAINER HeRaNO <https://github.com/HeRaNO>\n\nRUN set -x \\\n# create nginx user/group first, to be consistent throughout docker variants\n    && addgroup -g 101 -S nginx \\\n    && adduser -S -D -H -u 101 -h /var/cache/nginx -s /sbin/nologin -G nginx -g nginx nginx\n\nRUN apk update\nRUN apk upgrade\nRUN apk add --no-cache --virtual .build-deps \\\n    go \\\n    gcc \\\n    g++ \\\n    git \\\n    bash \\\n    make \\\n    cmake \\\n    ninja \\\n    gd-dev \\\n    libc-dev \\\n    perl-dev \\\n    zlib-dev \\\n    findutils \\\n    geoip-dev \\\n    mercurial \\\n    alpine-sdk \\\n    libedit-dev \\\n    libxslt-dev \\\n    linux-headers \\\n    libunwind-dev\n\nRUN apk add --no-cache openssl pcre-dev\n\nWORKDIR /tmp\nRUN git clone https://boringssl.googlesource.com/boringssl\nRUN hg clone -b quic https://hg.nginx.org/nginx-quic\nWORKDIR /tmp/boringssl/build\n\nRUN cmake -GNinja ..\nRUN ninja\n\nWORKDIR /tmp/nginx-quic\nRUN ./auto/configure \\\n    --prefix=/etc/nginx \\\n    --sbin-path=/usr/sbin/nginx \\\n    --modules-path=/usr/lib/nginx/modules \\\n    --conf-path=/etc/nginx/nginx.conf \\\n    --error-log-path=/var/log/nginx/error.log \\\n    --http-log-path=/var/log/nginx/access.log \\\n    --pid-path=/var/run/nginx.pid \\\n    --lock-path=/var/run/nginx.lock  \\\n    --with-threads \\\n    --with-http_v2_module \\\n    --with-http_v3_module \\\n    --with-cc-opt=\"-I../boringssl/include\"  \\\n    --with-ld-opt=\"-L../boringssl/build/ssl -L../boringssl/build/crypto\"\n\nRUN make\nRUN make install\n\nRUN apk add --no-cache tzdata\nRUN apk add --no-cache curl ca-certificates\n\nWORKDIR /etc/nginx/certs\nRUN openssl genrsa -des3 -passout pass:password -out server.pass.key 2048\nRUN openssl rsa -passin pass:password -in server.pass.key -out server.key\nRUN rm -f server.pass.key\nRUN openssl req -new -key server.key -out server.csr -subj \"/CN=127.0.0.1\"\nRUN openssl x509 -req -days 365 -in server.csr -signkey server.key -out server.crt\n\nRUN ln -sf /dev/stdout /var/log/nginx/access.log\nRUN ln -sf /dev/stderr /var/log/nginx/error.log\nRUN rm -rf /tmp/*\nRUN apk del .build-deps\n\nRUN mkdir /docker-entrypoint.d\n\nCOPY nginx.conf /etc/nginx/nginx.conf\nCOPY docker-entrypoint.sh /\nCOPY 10-listen-on-ipv6-by-default.sh /docker-entrypoint.d\nCOPY 20-envsubst-on-templates.sh /docker-entrypoint.d\nRUN chmod +x /docker-entrypoint.sh\n\nENTRYPOINT [\"/docker-entrypoint.sh\"]\n\nEXPOSE 80\nEXPOSE 8443\n\nSTOPSIGNAL SIGTERM\n\nCMD [\"nginx\", \"-g\", \"daemon off;\"]\n"
}