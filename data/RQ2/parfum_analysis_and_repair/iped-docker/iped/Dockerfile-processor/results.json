{
  "startTime": 1674254486986,
  "endTime": 1674254488947,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 7,
        "columnEnd": 33
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 7,
        "columnEnd": 32
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 7,
        "columnEnd": 32
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 79,
        "lineEnd": 79,
        "columnStart": 7,
        "columnEnd": 32
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 89,
        "lineEnd": 89,
        "columnStart": 7,
        "columnEnd": 32
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 99,
        "lineEnd": 99,
        "columnStart": 7,
        "columnEnd": 32
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 109,
        "lineEnd": 109,
        "columnStart": 7,
        "columnEnd": 32
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 119,
        "lineEnd": 119,
        "columnStart": 7,
        "columnEnd": 32
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 128,
        "lineEnd": 128,
        "columnStart": 7,
        "columnEnd": 32
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 136,
        "lineEnd": 136,
        "columnStart": 7,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 22,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 42,
        "columnStart": 25,
        "columnEnd": 13
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:20.04\n\nENV TZ=Brazil/East\nENV DEBIAN_FRONTEND=noninteractive\nENV LANG=C.UTF-8 LC_ALL=C.UTF-8\n\nENV IPED_VERSION=3.18.12\n\nWORKDIR /root/pkgs\nRUN apt-get update && apt-get install --no-install-recommends -y wget gnupg \\\n    && wget -q -O - https://download.bell-sw.com/pki/GPG-KEY-bellsoft | apt-key add - \\\n    && echo \"deb [arch=amd64] https://apt.bell-sw.com/ stable main\" | tee /etc/apt/sources.list.d/bellsoft.list \\\n    && apt-get update && apt-get install --no-install-recommends -y \\\n      git \\\n      build-essential \\\n      libafflib-dev zlib1g-dev libewf-dev unzip patch libssl-dev \\\n      autoconf automake autopoint libtool pkg-config yasm gettext wget \\\n      libaa1-dev libasound2-dev libcaca-dev libcdparanoia-dev libdca-dev \\\n      libdirectfb-dev libenca-dev libfontconfig1-dev libfreetype6-dev \\\n      libfribidi-dev libgif-dev libgl1-mesa-dev libjack-jackd2-dev libopenal1 libpulse-dev \\\n      libsdl1.2-dev libvdpau-dev libxinerama-dev libxv-dev libxvmc-dev libxxf86dga-dev \\\n      libxxf86vm-dev librtmp-dev libsctp-dev libass-dev libfaac-dev libsmbclient-dev libtheora-dev \\\n      libogg-dev libxvidcore-dev libspeex-dev libvpx-dev libdv4-dev \\\n      libopencore-amrnb-dev libopencore-amrwb-dev libmp3lame-dev liblivemedia-dev libtwolame-dev \\\n      libmad0-dev libgsm1-dev libbs2b-dev liblzo2-dev ladspa-sdk libfaad-dev \\\n      libmpg123-dev libopus-dev libbluray-dev libaacs-dev \\\n      libjpeg-dev \\\n      libtiff-dev \\\n      libpng-dev \\\n      libwmf-dev \\\n      libgif-dev \\\n      libheif-dev \\\n      libwebp-dev \\\n      librsvg2-dev \\\n      libopenexr-dev \\\n      vim \\\n      less \\\n      unzip \\\n      libparse-win32registry-perl \\\n      tesseract-ocr tesseract-ocr-por tesseract-ocr-osd \\\n      graphviz \\\n      bellsoft-java8-full \\\n      mplayer \\\n      && apt-get download ant && ls *.deb | awk '{system(\"dpkg-deb -x \"$1\" /\")}' \\\n      && apt-get clean && rm -rf /var/lib/apt/lists/* \\\n    && cd /opt \\\n    && git clone https://github.com/lfcnassif/sleuthkit-APFS \\\n    && cd /opt/sleuthkit-APFS/ \\\n    && ./bootstrap \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/ \\\n    && make && make install \\\n    && rm -rf /opt/sleuthkit-APFS/ \\\n    && echo \"#####################################\" \\\n    && echo \"The libagdb only have branch master\" \\\n    && cd /opt \\\n    && git clone https://github.com/libyal/libagdb.git \\\n    && cd /opt/libagdb \\\n    && ./synclibs.sh \\\n    && ./autogen.sh \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr \\\n    && make all install \\\n    && rm -rf /opt/libagdb \\\n    && echo \"#####################################\" \\\n    && echo \"install libevtx\" \\\n    && cd /opt \\\n    && git clone --branch=\"20210525\" https://github.com/libyal/libevtx \\\n    && cd /opt/libevtx \\\n    && ./synclibs.sh \\\n    && ./autogen.sh \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr \\\n    && make all install \\\n    && rm -rf /opt/libevtx \\\n    && echo \"#####################################\" \\\n    && echo \"Install libevt\" \\\n    && cd /opt \\\n    && git clone --branch=\"20210424\" https://github.com/libyal/libevt \\\n    && cd /opt/libevt \\\n    && ./synclibs.sh \\\n    && ./autogen.sh \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr \\\n    && make all install \\\n    && rm -rf /opt/libevt \\\n    && echo \"#####################################\" \\\n    && echo \"Install libscca\" \\\n    && cd /opt \\\n    && git clone --branch=\"20210419\" https://github.com/libyal/libscca \\\n    && cd /opt/libscca \\\n    && ./synclibs.sh \\\n    && ./autogen.sh \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr \\\n    && make all install \\\n    && rm -rf /opt/libscca \\\n    && echo \"#####################################\" \\\n    && echo \"Install libesedb\" \\\n    && cd /opt \\\n    && git clone --branch=\"20210424\" https://github.com/libyal/libesedb \\\n    && cd /opt/libesedb \\\n    && ./synclibs.sh \\\n    && ./autogen.sh \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr \\\n    && make all install \\\n    && rm -rf /opt/libesedb \\\n    && echo \"#####################################\" \\\n    && echo \"Install libpff without branch also, because latest release got problems\" \\\n    && cd /opt \\\n    && git clone https://github.com/libyal/libpff \\\n    && cd /opt/libpff \\\n    && ./synclibs.sh \\\n    && ./autogen.sh \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr \\\n    && make all install \\\n    && rm -rf /opt/libpff \\\n    && echo \"#####################################\" \\\n    && echo \"Install libmsiecf\" \\\n    && cd /opt \\\n    && git clone --branch=\"20210420\" https://github.com/libyal/libmsiecf \\\n    && cd /opt/libmsiecf \\\n    && ./synclibs.sh \\\n    && ./autogen.sh \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr \\\n    && make all install \\\n    && rm -rf /opt/libmsiecf \\\n    && echo \"#####################################\" \\\n    && echo \"Install rifiuti2\" \\\n    && cd /opt \\\n    && git clone --branch=\"0.7.0\" https://github.com/abelcheung/rifiuti2 \\\n    && cd /opt/rifiuti2 \\\n    && autoreconf -f -i -v \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr \\\n    && make all install \\\n    && rm -rf /opt/rifiuti2 \\\n    && echo \"#####################################\" \\\n    && echo \"Instal ImageMagik\" \\\n    && cd /opt \\\n    && git clone --branch \"7.0.10-61\" https://github.com/ImageMagick/ImageMagick \\\n    && cd /opt/ImageMagick \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr \\\n    && make all install \\\n    && rm -rf /opt/ImageMagick \\\n    && echo \"#####################################\" \\\n    && echo \"Creating mplayer config\" \\\n    && mplayer \\\n    && echo \"#####################################\" \\\n    && echo \"Installing IPED\" \\\n    && mkdir -p /root/IPED/ && cd /root/IPED/ \\\n    && wget --progress=bar:force https://github.com/sepinf-inc/IPED/releases/download/$IPED_VERSION/IPED-${IPED_VERSION}_and_plugins.zip -O iped.zip \\\n    && unzip iped.zip && rm iped.zip && ln -s iped-$IPED_VERSION iped \\\n    && echo \"#####################################\" \\\n    && echo \"Configuring Local config with our default values\" \\\n    && echo \"#####################################\" \\\n    && echo \"If you need to change the IPED LocalConfig, use the environment variables available on /entrypoint.sh\" \\\n    && echo \"#####################################\" \\\n    && sed -i -e \"s/locale =.*/locale = pt-BR/\" /root/IPED/iped/LocalConfig.txt \\\n    && sed -i -e \"s/indexTemp =.*/indexTemp = \\/mnt\\/ipedtmp/\" /root/IPED/iped/LocalConfig.txt \\\n    && sed -i -e \"s/indexTempOnSSD =.*/indexTempOnSSD = true/\" /root/IPED/iped/LocalConfig.txt \\\n    && sed -i -e \"s/outputOnSSD =.*/outputOnSSD = false/\" /root/IPED/iped/LocalConfig.txt \\\n    && sed -i -e \"s/numThreads =.*/numThreads = 8/\" /root/IPED/iped/LocalConfig.txt \\\n    && sed -i -e \"s/#kffDb =.*/kffDb = \\/mnt\\/kff\\/kff.db/\" /root/IPED/iped/LocalConfig.txt \\\n    && sed -i -e \"s/#ledWkffPath =.*/ledWkffPath = \\/mnt\\/led\\/wkff/\" /root/IPED/iped/LocalConfig.txt \\\n    && sed -i -e \"s/#projectVicHashSetPath =.*/projectVicHashSetPath = \\/mnt\\/ProjectVic\\/latest.json/\" /root/IPED/iped/LocalConfig.txt \\\n    && sed -i -e \"s/#photoDNAHashDatabase =.*/photoDNAHashDatabase = \\/mnt\\/PhotoDNA\\/PhotoDNAChildPornHashes.txt/\" /root/IPED/iped/LocalConfig.txt \\\n    && sed -i -e \"s/#tskJarPath =.*/tskJarPath = \\/usr\\/share\\/java\\/sleuthkit-4.6.5.jar/\" /root/IPED/iped/LocalConfig.txt \\\n    && sed -i -e \"s/mplayerPath =.*/mplayerPath = \\/usr\\/bin\\/mplayer/\" /root/IPED/iped/LocalConfig.txt \\\n    && echo \"#####################################\" \\\n    && echo \"Configuring GraphConfig with our default values:BR\" \\\n    && echo \"#####################################\" \\\n    && sed -i -e \"s/\\\"phone-region\\\":.*/\\\"phone-region\\\":\\\"BR\\\",/\" /root/IPED/iped/profiles/*/*/conf/GraphConfig.json \\\n    && echo \"#####################################\" \\\n    && echo \"Creating custom Profiles\" \\\n    && echo \"#####################################\" \\\n    && echo \"FastRobust: Disable IndexUnknownFiles and enable excludeKffIgnorable, externalParsers and robustImageReading\" \\\n    && echo \"General analysis cases where processing errors are occurring\" \\\n    && echo \"#####################################\" \\\n    && cp -r /root/IPED/iped/profiles/pt-BR/forensic /root/IPED/iped/profiles/pt-BR/fastrobust \\\n    && cp -r /root/IPED/iped/profiles/en/forensic /root/IPED/iped/profiles/en/fastrobust \\\n    && sed -i -e \"s/indexUnknownFiles =.*/indexUnknownFiles = false/\" /root/IPED/iped/profiles/*/fastrobust/IPEDConfig.txt \\\n    && sed -i -e \"s/excludeKffIgnorable =.*/excludeKffIgnorable = true/\" /root/IPED/iped/profiles/*/fastrobust/IPEDConfig.txt \\\n    && sed -i -e \"s/robustImageReading =.*/robustImageReading = true/\" /root/IPED/iped/profiles/*/fastrobust/conf/AdvancedConfig.txt \\\n    && sed -i -e \"s/enableExternalParsing =.*/enableExternalParsing = true/\" /root/IPED/iped/profiles/*/fastrobust/conf/AdvancedConfig.txt \\\n    && echo \"#####################################\" \\\n    && echo \"PedoRobust: enable excludeKffIgnorable, externalParsers and robustImageReading\" \\\n    && echo \"For child abuse cases where processing errors are occurring\" \\\n    && echo \"#####################################\" \\\n    && cp -r /root/IPED/iped/profiles/pt-BR/pedo /root/IPED/iped/profiles/pt-BR/pedorobust \\\n    && cp -r /root/IPED/iped/profiles/en/pedo /root/IPED/iped/profiles/en/pedorobust \\\n    && sed -i -e \"s/excludeKffIgnorable =.*/excludeKffIgnorable = true/\" /root/IPED/iped/profiles/*/pedorobust/IPEDConfig.txt \\\n    && sed -i -e \"s/robustImageReading =.*/robustImageReading = true/\" /root/IPED/iped/profiles/*/pedorobust/conf/AdvancedConfig.txt \\\n    && sed -i -e \"s/enableExternalParsing =.*/enableExternalParsing = true/\" /root/IPED/iped/profiles/*/pedorobust/conf/AdvancedConfig.txt\n\nWORKDIR /root/IPED/iped\nCOPY entrypoint.sh /\nENTRYPOINT [\"/entrypoint.sh\"]\nCMD [\"/bin/bash\"]\n"
}