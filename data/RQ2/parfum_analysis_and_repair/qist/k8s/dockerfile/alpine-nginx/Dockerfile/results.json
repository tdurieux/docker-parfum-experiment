{
  "startTime": 1674251603666,
  "endTime": 1674251605016,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 131,
        "lineEnd": 131,
        "columnStart": 11,
        "columnEnd": 36
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 126,
        "lineEnd": 126,
        "columnStart": 11,
        "columnEnd": 51
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 127,
        "lineEnd": 127,
        "columnStart": 11,
        "columnEnd": 47
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# 基础镜像\nFROM alpine\n\n# 作者信息\nLABEL  MAINTAINER=\"nginx 1.21.6 Docker Maintainers 87984115@qq.com\"\n\n# 修改源\nRUN sed -i 's/dl-cdn.alpinelinux.org/mirrors.aliyun.com/g' /etc/apk/repositories\n\n# 安装ca 证书\nRUN apk update && \\\n    apk add --no-cache ca-certificates\n\n# 设置环境变量\n\nENV NGINX_VERSION 1.21.6\n\nENV OPENSSL_VERSION 1.1.1m\n\n\n# 编译安装NGINX\n\n\nRUN NGINX_CONFIG=\"\\\n     --prefix=/var/lib/nginx \\\n     --sbin-path=/usr/bin/nginx \\\n     --conf-path=/etc/nginx/nginx.conf \\\n     --error-log-path=/var/log/nginx/error.log \\\n     --http-log-path=/var/log/nginx/access.log \\\n     --pid-path=/var/run/nginx.pid \\\n     --lock-path=/var/run/nginx.lock \\\n     --http-client-body-temp-path=/var/lib/nginx/cache/client_temp \\\n     --http-proxy-temp-path=/var/lib/nginx/cache/proxy_temp \\\n     --http-fastcgi-temp-path=/var/lib/nginx/cache/fastcgi_temp \\\n     --http-uwsgi-temp-path=/var/lib/nginx/cache/uwsgi_temp \\\n     --http-scgi-temp-path=/var/lib/nginx/cache/scgi_temp \\\n     --user=nginx \\\n     --group=nginx \\\n     --with-compat \\\n     --with-pcre \\\n     --with-http_ssl_module \\\n     --with-http_realip_module \\\n     --with-http_addition_module \\\n     --with-http_sub_module \\\n     --with-http_dav_module \\\n     --with-http_flv_module \\\n     --with-http_mp4_module \\\n     --with-http_gunzip_module \\\n     --with-http_gzip_static_module \\\n     --with-http_random_index_module \\\n     --with-http_secure_link_module \\\n     --with-http_stub_status_module \\\n     --with-http_auth_request_module \\\n     --with-threads \\\n     --with-stream \\\n     --with-stream_ssl_module \\\n     --with-stream_realip_module \\\n     --with-stream_ssl_preread_module \\\n     --with-openssl=../openssl-$OPENSSL_VERSION \\\n     --with-http_slice_module \\\n     --with-mail \\\n     --with-mail_ssl_module \\\n     --with-file-aio \\\n     --with-http_v2_module \\\n     --with-ipv6 \\\n     --with-openssl-opt=enable-tls1_3 \\\n     --add-module=../echo-nginx-module \\\n     --add-module=../nginx_upstream_check_module \\\n     --add-module=../nginx-upsync-module \\\n     --add-module=../mod_zip \\\n     --add-module=../ngx_cache_purge \\\n     --add-module=../ngx_upstream_jdomain \\\n     --add-module=../headers-more-nginx-module \\\n     --add-module=../nginx-upstream-dynamic-servers \\\n     --add-module=../nginx-module-vts \\\n     \" \\\n     && addgroup -S nginx \\\n     && adduser -D -S -h /www -s /sbin/nologin -G nginx nginx \\\n     && apk  add  --no-cache --virtual .build-deps \\\n        gcc \\\n        libc-dev \\\n        make \\\n        pcre-dev \\\n        zlib-dev \\\n        linux-headers \\\n        curl \\\n        gnupg \\\n        libxslt-dev \\\n        gd-dev \\\n        patch \\\n        geoip-dev \\\n        libstdc++ wget \\\n        libjpeg  \\\n        libpng \\\n        libpng-dev \\\n        freetype \\\n        freetype-dev \\\n        libxml2 \\\n        libxml2-dev \\\n        curl-dev \\\n        libmcrypt \\\n        libmcrypt-dev \\\n        autoconf \\\n        libjpeg-turbo-dev \\\n        libmemcached \\\n        libmemcached-dev \\\n        gettext \\\n        gettext-dev \\\n        libzip \\\n        git \\\n        cmake \\\n        g++ \\\n        libzip-dev \\\n        && curl -fSL https://www.openssl.org/source/openssl-$OPENSSL_VERSION.tar.gz -o /tmp/openssl-$OPENSSL_VERSION.tar.gz \\\n        && curl -fSL https://nginx.org/download/nginx-$NGINX_VERSION.tar.gz -o /tmp/nginx-$NGINX_VERSION.tar.gz \\\n        && git clone https://github.com/FRiCKLE/ngx_cache_purge.git  /tmp/ngx_cache_purge \\\n        && git clone https://github.com/xiaokai-wang/nginx_upstream_check_module.git /tmp/nginx_upstream_check_module \\\n        && git clone https://github.com/evanmiller/mod_zip.git /tmp/mod_zip \\\n        && git clone https://github.com/wdaike/ngx_upstream_jdomain.git /tmp/ngx_upstream_jdomain \\\n        && git clone https://github.com/GUI/nginx-upstream-dynamic-servers.git /tmp/nginx-upstream-dynamic-servers \\\n        && git clone https://github.com/vozlt/nginx-module-vts.git /tmp/nginx-module-vts \\\n        && git clone https://github.com/openresty/echo-nginx-module.git /tmp/echo-nginx-module \\\n        && git clone https://github.com/weibocom/nginx-upsync-module.git /tmp/nginx-upsync-module \\\n        && git clone https://github.com/openresty/headers-more-nginx-module.git /tmp/headers-more-nginx-module \\\n        && git clone https://github.com/microsoft/mimalloc.git /tmp/mimalloc \\        \n        && cd /tmp \\\n        && tar -xzf openssl-$OPENSSL_VERSION.tar.gz \\\n        && tar -xzf nginx-$NGINX_VERSION.tar.gz \\\n        && cd  /tmp/nginx-$NGINX_VERSION \\\n        && patch -p1 < ../nginx_upstream_check_module/check_1.12.1+.patch \\\n        && mkdir -p /var/lib/nginx/cache \\\n        && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" $NGINX_CONFIG \\\n        && make -j$(getconf _NPROCESSORS_ONLN) \\\n        && make install \\\n        && mkdir -p /tmp/mimalloc/out/release \\\n        && cd /tmp/mimalloc/out/release \\\n        && cmake -DMI_SECURE=OFF ../.. \\\n        && make install \\\n        && apk del .build-deps && rm openssl-$OPENSSL_VERSION.tar.gz\n\n# 构建confd nginx 镜像\n\nFROM alpine\n# 作者信息\nLABEL MAINTAINER=\"Qist Docker Maintainers 87984115@qq.com\"\n\n# 修改源\nRUN sed -i 's/dl-cdn.alpinelinux.org/mirrors.aliyun.com/g' /etc/apk/repositories\n\n#COPY 编译结果 \n\nCOPY --from=0  /usr/bin/nginx /usr/bin/nginx\nCOPY --from=0  /etc/nginx  /etc/nginx\nCOPY --from=0  /var/lib/nginx /var/lib/nginx\nCOPY --from=0  /usr/local/lib /usr/local/lib\n\n# 安装ca 证书\nRUN apk update && \\\n    apk add --no-cache ca-certificates\nRUN  mkdir -p /var/lib/nginx/cache \\\n     && apk add  --no-cache  \\ \n           curl \\\n           wget \\\n           pcre \\\n          && addgroup -S nginx \\\n          && adduser -D -S -h /var/lib/nginx -s /sbin/nologin -G nginx nginx \\          \n          && mkdir -p /var/log/nginx \\\n          && chown -R nginx:nginx /var/lib/nginx \\\n          && rm -rf /var/cache/apk/* \\\n          && ln -sf /dev/stdout /var/log/nginx/access.log \\\n          && ln -sf /dev/stderr /var/log/nginx/error.log \\\n          && mkdir -p /var/cache/nginx/client_temp\n\n# 设置环境变量\nENV LD_PRELOAD=/usr/local/lib/libmimalloc.so\n# copy 配置到镜像中      \nCOPY nginx.conf /etc/nginx/nginx.conf\nCOPY conf.d /etc/nginx/conf.d\nCOPY vhost /etc/nginx/vhost\nCOPY localtime /etc/localtime\n\n# 开放端口\nEXPOSE 80 443 8080\n\nSTOPSIGNAL SIGTERM\n\nCMD [\"nginx\", \"-g\", \"daemon off;\"]\n"
}