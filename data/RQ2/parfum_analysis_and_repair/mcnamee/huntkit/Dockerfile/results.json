{
  "startTime": 1674248268450,
  "endTime": 1674248270851,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 224,
        "lineEnd": 224,
        "columnStart": 2,
        "columnEnd": 147
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 324,
        "lineEnd": 325,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 194,
        "lineEnd": 194,
        "columnStart": 2,
        "columnEnd": 13
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu\n\nLABEL maintainer=\"Matt McNamee\"\n\n# Environment Variables\nENV HOME=/root\nENV TOOLS=\"/opt\"\nENV ADDONS=\"/usr/share/addons\"\nENV WORDLISTS=\"/usr/share/wordlists\"\nENV GO111MODULE=on\nENV GOROOT=/usr/local/go\nENV GOPATH=/go\nENV PATH=${HOME}/:${GOPATH}/bin:${GOROOT}/bin:${PATH}\nENV DEBIAN_FRONTEND=noninteractive\n\n# Create working dirs\nWORKDIR /root\nRUN mkdir $WORDLISTS && mkdir $ADDONS\n\n# ------------------------------\n# --- Common Dependencies ---\n# ------------------------------\n\n# Install Essentials\nRUN apt-get update && \\\n  apt-get install -y --no-install-recommends --fix-missing \\\n  apt-utils \\\n  awscli \\\n  build-essential \\\n  curl \\\n  dnsutils \\\n  gcc \\\n  git \\\n  iputils-ping \\\n  jq \\\n  libgmp-dev \\\n  libpcap-dev \\\n  make \\\n  nano \\\n  netcat \\\n  net-tools \\\n  nodejs \\\n  npm \\\n  perl \\\n  php \\\n  proxychains \\\n  python3 \\\n  python3-pip \\\n  ssh \\\n  tor \\\n  tmux \\\n  tzdata \\\n  wget \\\n  whois \\\n  zip \\\n  unzip \\\n  zsh && \\\n  apt-get clean && \\\n  rm -rf /var/lib/apt/lists/*\n\n# Install tools & dependencies\nRUN apt-get update && \\\n  apt-get install -y --no-install-recommends --fix-missing \\\n  brutespray \\\n  crunch \\\n  dirb \\\n  ftp \\\n  hping3 \\\n  hydra \\\n  nikto \\\n  nmap \\\n  smbclient \\\n  sqlmap \\\n  # johntheripper\n  libssl-dev \\\n  yasm \\\n  pkg-config \\\n  libbz2-dev \\\n  # Metasploit\n  gnupg2 \\\n  # OpenVPN\n  openvpn \\\n  easy-rsa \\\n  # wpscan\n  libcurl4-openssl-dev \\\n  libxml2 \\\n  libxml2-dev \\\n  libxslt1-dev \\\n  ruby-dev \\\n  zlib1g-dev \\\n  # zsh\n  fonts-powerline \\\n  powerline && \\\n  apt-get clean && \\\n  rm -rf /var/lib/apt/lists/*\n\n# Install go\nRUN cd /opt && \\\n  ARCH=$( arch | sed s/aarch64/arm64/ | sed s/x86_64/amd64/ ) && \\\n  wget https://dl.google.com/go/go1.18.1.linux-${ARCH}.tar.gz && \\\n  tar -xvf go1.18.1.linux-${ARCH}.tar.gz && \\\n  rm -rf /opt/go1.18.1.linux-${ARCH}.tar.gz && \\\n  mv go /usr/local\n\n# Install Python common dependencies\nRUN python3 -m pip install --upgrade setuptools wheel paramiko\n\n# Install ZSH\nRUN sh -c \"$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)\" \"\" --unattended \\\n  chsh -s $(which zsh)\n\n# ------------------------------\n# --- Tools ---\n# ------------------------------\n\n# amass\nRUN go install -v github.com/OWASP/Amass/v3/...@master\n\n# cloudfail - not working with latest python3\n# RUN git clone --depth 1 https://github.com/m0rtem/CloudFail.git $TOOLS/cloudfail && \\\n#   cd $TOOLS/cloudfail && \\\n#   python3 -m pip install -r requirements.txt && \\\n#   sed -i 's^#!/usr/bin/env python3^#!/usr/bin/python3^g' cloudfail.py && \\\n#   chmod a+x cloudfail.py && \\\n#   ln -sf $TOOLS/cloudfail/cloudfail.py /usr/local/bin/cloudfail\n\n# breach-parse\nRUN git clone --depth 1 https://github.com/hmaverickadams/breach-parse.git $TOOLS/breach-parse && \\\n  cd $TOOLS/breach-parse && \\\n  chmod a+x breach-parse.sh && \\\n  ln -sf $TOOLS/breach-parse/breach-parse.sh /usr/local/bin/breach-parse\n\n# cloudflair\nRUN git clone --depth 1 https://github.com/christophetd/CloudFlair.git $TOOLS/cloudflair && \\\n  cd $TOOLS/cloudflair && \\\n  python3 -m pip install -r requirements.txt && \\\n  sed -i 's^#!/usr/bin/env python3^#!/usr/bin/python3^g' cloudflair.py && \\\n  chmod a+x cloudflair.py && \\\n  ln -sf $TOOLS/cloudflair/cloudflair.py /usr/local/bin/cloudflair\n\n# commix\nRUN git clone --depth 1 https://github.com/commixproject/commix.git $TOOLS/commix && \\\n  cd $TOOLS/commix && \\\n  sed -i 's^#!/usr/bin/env python^#!/usr/bin/python3^g' commix.py && \\\n  chmod a+x commix.py && \\\n  ln -sf $TOOLS/commix/commix.py /usr/local/bin/commix\n\n# cupp\nRUN git clone --depth 1 https://github.com/Mebus/cupp.git $TOOLS/cupp && \\\n  cd $TOOLS/cupp && \\\n  chmod a+x cupp.py && \\\n  ln -sf $TOOLS/cupp/cupp.py /usr/local/bin/cupp\n\n# dalfox\nRUN git clone --depth 1 https://github.com/hahwul/dalfox.git $TOOLS/dalfox && \\\n  cd $TOOLS/dalfox && \\\n  go install\n\n# dnmasscan\nRUN git clone --depth 1 https://github.com/rastating/dnmasscan.git $TOOLS/dnmasscan && \\\n  cd $TOOLS/dnmasscan && \\\n  chmod a+x dnmasscan && \\\n  ln -sf $TOOLS/dnmasscan/dnmasscan /usr/local/bin/dnmasscan\n\n# dnsprobe\nRUN go install -v github.com/projectdiscovery/dnsx/cmd/dnsx@latest\n\n# exploitdb (searchsploit)\nRUN git clone --depth 1 https://github.com/offensive-security/exploitdb.git $TOOLS/exploitdb && \\\n  cd $TOOLS/exploitdb && \\\n  ln -sf $TOOLS/exploitdb/searchsploit /usr/bin/searchsploit\n\n# fuff\nRUN go install github.com/ffuf/ffuf@latest\n\n# gau\nRUN go install github.com/lc/gau/v2/cmd/gau@latest && \\\n  echo \"alias gau='/go/bin/gau'\" >> ~/.zshrc\n\n# httpx\nRUN go install -v github.com/projectdiscovery/httpx/cmd/httpx@latest\n\n# interlace\nRUN git clone --depth 1 https://github.com/codingo/Interlace.git $TOOLS/interlace && \\\n  cd $TOOLS/interlace && \\\n  python3 -m pip install -r requirements.txt && \\\n  python3 setup.py install && \\\n  chmod a+x Interlace/interlace.py && \\\n  ln -sf $TOOLS/interlace/Interlace/interlace.py /usr/local/bin/interlace\n\n# john the ripper\nRUN git clone --depth 1 https://github.com/magnumripper/JohnTheRipper $TOOLS/john && \\\n  cd $TOOLS/john/src && \\\n  echo \"alias john='${TOOLS}/john/run/john'\" >> ~/.zshrc && \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make -s clean && make -sj4\n\n# jwttool\nRUN git clone --depth 1 https://github.com/ticarpi/jwt_tool $TOOLS/jwttool && \\\n  cd $TOOLS/jwttool && \\\n  python3 -m pip install pycryptodomex termcolor && \\\n  chmod a+x jwt_tool.py && \\\n  ln -sf $TOOLS/jwttool/jwt_tool.py /usr/local/bin/jwttool\n\n# link finder\nRUN git clone --depth 1 https://github.com/GerbenJavado/LinkFinder.git $TOOLS/linkfinder && \\\n  cd $TOOLS/linkfinder && \\\n  python3 -m pip install -r requirements.txt && \\\n  python3 setup.py install && \\\n  sed -i 's^#!/usr/bin/env python^#!/usr/bin/python3^g' linkfinder.py && \\\n  chmod a+x linkfinder.py && \\\n  ln -sf $TOOLS/linkfinder/linkfinder.py /usr/local/bin/linkfinder\n\n# masscan\nRUN git clone --depth 1 https://github.com/robertdavidgraham/masscan.git $TOOLS/masscan && \\\n  cd $TOOLS/masscan && \\\n  make -j && \\\n  ln -sf $TOOLS/masscan/bin/masscan /usr/local/bin/masscan\n\n# meg\nRUN go install -v github.com/tomnomnom/meg@latest\n\n# metasploit\nRUN mkdir $TOOLS/metasploit && \\\n  cd $TOOLS/metasploit && \\\n  curl -f https://raw.githubusercontent.com/rapid7/metasploit-omnibus/master/config/templates/metasploit-framework-wrappers/msfupdate.erb > msfinstall && \\\n  chmod 755 msfinstall && \\\n  ./msfinstall\n\n# nuclei\nRUN go install -v github.com/projectdiscovery/nuclei/v2/cmd/nuclei@latest && \\\n  git clone --depth 1 https://github.com/projectdiscovery/nuclei-templates.git $ADDONS/nuclei\n\n# pagodo\nRUN git clone --depth 1 https://github.com/opsdisk/pagodo.git $TOOLS/pagodo && \\\n  cd $TOOLS/pagodo && \\\n  python3 -m pip install -r requirements.txt && \\\n  sed -i 's^#!/usr/bin/env python^#!/usr/bin/python3^g' pagodo.py && \\\n  python3 ghdb_scraper.py -j -s && \\\n  chmod a+x pagodo.py && \\\n  ln -sf $TOOLS/pagodo/pagodo.py /usr/local/bin/pagodo\n\n# recon-ng\nRUN git clone --depth 1 https://github.com/lanmaster53/recon-ng.git $TOOLS/recon-ng && \\\n  cd $TOOLS/recon-ng && \\\n  python3 -m pip install -r REQUIREMENTS && \\\n  chmod a+x recon-ng && \\\n  ln -sf $TOOLS/recon-ng/recon-ng /usr/local/bin/recon-ng\n\n# sherlock\nRUN git clone --depth 1 https://github.com/sherlock-project/sherlock $TOOLS/sherlock && \\\n  cd $TOOLS/sherlock && \\\n  python3 -m pip install -r requirements.txt && \\\n  chmod a+x sherlock/sherlock.py && \\\n  ln -sf $TOOLS/sherlock/sherlock/sherlock.py /usr/local/bin/sherlock\n\n# social engineer toolkit\nRUN git clone --depth 1 https://github.com/trustedsec/social-engineer-toolkit $TOOLS/setoolkit && \\\n  cd $TOOLS/setoolkit && \\\n  python3 -m pip install -r requirements.txt || : && \\\n  python3 setup.py || :\n\n# subfinder\nRUN go install -v github.com/projectdiscovery/subfinder/v2/cmd/subfinder@latest\n\n# subjs\nRUN go install -v github.com/lc/subjs@latest\n\n# subjack\nRUN go install -v github.com/haccer/subjack@latest\n\n# sublist3r\nRUN git clone --depth 1 https://github.com/aboul3la/Sublist3r.git $TOOLS/sublist3r && \\\n  cd $TOOLS/sublist3r && \\\n  python3 -m pip install -r requirements.txt && \\\n  sed -i 's^#!/usr/bin/env python^#!/usr/bin/python3^g' sublist3r.py && \\\n  chmod a+x sublist3r.py && \\\n  ln -sf $TOOLS/sublist3r/sublist3r.py /usr/local/bin/sublist3r\n\n# theharvester\n# Note: it needs to be installed in /etc/ as there are absolute refs in the code\nRUN git clone --depth 1 https://github.com/laramies/theHarvester /etc/theHarvester && \\\n  cd /etc/theHarvester && \\\n  python3 -m pip install pipenv && \\\n  python3 -m pip install -r requirements/base.txt && \\\n  sed -i 's^#!/usr/bin/env python3^#!/usr/bin/python3^g' theHarvester.py && \\\n  chmod a+x theHarvester.py && \\\n  ln -sf /etc/theHarvester/theHarvester.py /usr/local/bin/theharvester\n\n# unfurl\nRUN go install -v github.com/tomnomnom/unfurl@latest\n\n# wafw00f\nRUN git clone --depth 1 https://github.com/enablesecurity/wafw00f.git $TOOLS/wafw00f && \\\n  cd $TOOLS/wafw00f && \\\n  chmod a+x setup.py && \\\n  python3 setup.py install\n\n# wfuzz\n# RUN pip install wfuzz\n\n# whatweb\nRUN git clone --depth 1 https://github.com/urbanadventurer/WhatWeb.git $TOOLS/whatweb && \\\n  cd $TOOLS/whatweb && \\\n  chmod a+x whatweb && \\\n  ln -sf $TOOLS/whatweb/whatweb /usr/local/bin/whatweb\n\n# wpscan\nRUN gem install wpscan\n\n# xsstrike\nRUN git clone --depth 1 https://github.com/s0md3v/XSStrike.git $TOOLS/xsstrike && \\\n  cd $TOOLS/xsstrike && \\\n  python3 -m pip install -r requirements.txt && \\\n  chmod a+x xsstrike.py && \\\n  ln -sf $TOOLS/xsstrike/xsstrike.py /usr/local/bin/xsstrike\n\n# ------------------------------\n# --- Wordlists ---\n# ------------------------------\n\n# seclists\nRUN  git clone --depth 1 https://github.com/danielmiessler/SecLists.git $WORDLISTS/seclists\n\n# rockyou\nRUN curl -f -L https://github.com/praetorian-code/Hob0Rules/raw/db10d30b0e4295a648b8d1eab059b4d7a567bf0a/wordlists/rockyou.txt.gz \\\n  -o $WORDLISTS/rockyou.txt.gz && \\\n  gunzip $WORDLISTS/rockyou.txt.gz\n\n# Symlink other wordlists\nRUN ln -sf $( find /go/pkg/mod/github.com/\\!o\\!w\\!a\\!s\\!p/\\!amass -name wordlists ) $WORDLISTS/amass && \\\n  ln -sf /usr/share/brutespray/wordlist $WORDLISTS/brutespray && \\\n  ln -sf /usr/share/dirb/wordlists $WORDLISTS/dirb && \\\n  ln -sf /usr/share/setoolkit/src/fasttrack/wordlist.txt $WORDLISTS/fasttrack.txt && \\\n  ln -sf /opt/metasploit-framework/embedded/framework/data/wordlists $WORDLISTS/metasploit && \\\n  ln -sf /usr/share/nmap/nselib/data/passwords.lst $WORDLISTS/nmap.lst && \\\n  ln -sf /etc/theHarvester/wordlists $WORDLISTS/theharvester\n\n# ------------------------------\n# --- Other utilities ---\n# ------------------------------\n\n# Kali reverse shells\nRUN git clone --depth 1 https://gitlab.com/kalilinux/packages/webshells.git /usr/share/webshells && \\\n  ln -s /usr/share/webshells $ADDONS/webshells\n\n# Copy the startup script across\nCOPY ./startup.sh /startup.sh\n\n# ------------------------------\n# --- Config ---\n# ------------------------------\n\n# Set timezone\nRUN ln -fs /usr/share/zoneinfo/Australia/Brisbane /etc/localtime && \\\n  dpkg-reconfigure --frontend noninteractive tzdata\n\n# Easier to access list of nmap scripts\nRUN ln -s /usr/share/nmap/scripts/ $ADDONS/nmap\n\n# Proxychains config\nRUN echo \"dynamic_chain\" > /etc/proxychains.conf && \\\n  echo \"proxy_dns\" >> /etc/proxychains.conf && \\\n  echo \"tcp_read_time_out 15000\" >> /etc/proxychains.conf && \\\n  echo \"tcp_connect_time_out 8000\" >> /etc/proxychains.conf && \\\n  echo \"[ProxyList]\" >> /etc/proxychains.conf && \\\n  echo \"socks5 127.0.0.1 9050\" >> /etc/proxychains.conf\n\n# Common commands (aliases)\nRUN echo \"alias myip='dig +short myip.opendns.com @resolver1.opendns.com'\" >> ~/.zshrc\n\n# ZSH config\nRUN sed -i 's^ZSH_THEME=\"robbyrussell\"^ZSH_THEME=\"bira\"^g' ~/.zshrc && \\\n  sed -i 's^# DISABLE_UPDATE_PROMPT=\"true\"^DISABLE_UPDATE_PROMPT=\"true\"^g' ~/.zshrc && \\\n  sed -i 's^# DISABLE_AUTO_UPDATE=\"true\"^DISABLE_AUTO_UPDATE=\"true\"^g' ~/.zshrc && \\\n  sed -i 's^plugins=(git)^plugins=(tmux nmap)^g' ~/.zshrc && \\\n  echo 'export EDITOR=\"nano\"' >> ~/.zshrc && \\\n  git config --global oh-my-zsh.hide-info 1\n\n# ------------------------------\n# --- Finished ---\n# ------------------------------\n\n# Start up commands\nENTRYPOINT [\"bash\", \"/startup.sh\"]\nCMD [\"/bin/zsh\"]\n"
}