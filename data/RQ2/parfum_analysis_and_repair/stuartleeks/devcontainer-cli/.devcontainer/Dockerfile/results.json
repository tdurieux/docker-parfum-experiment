{
  "startTime": 1674216555615,
  "endTime": 1674216556389,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 7,
        "columnEnd": 73
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 7,
        "columnEnd": 25
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 7,
        "columnEnd": 30
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 7,
        "columnEnd": 89
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 7,
        "columnEnd": 73
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 7,
        "columnEnd": 25
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 7,
        "columnEnd": 30
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#-------------------------------------------------------------------------------------------------------------\n# Copyright (c) Microsoft Corporation. All rights reserved.\n# Licensed under the MIT License. See https://go.microsoft.com/fwlink/?linkid=2090316 for license information.\n#-------------------------------------------------------------------------------------------------------------\n\nFROM golang:1.15-stretch\n\n# Avoid warnings by switching to noninteractive\nENV DEBIAN_FRONTEND=noninteractive\n\n# Configure apt, install packages and tools\nRUN apt-get update \\\n    && apt-get -y install --no-install-recommends apt-utils dialog nano sudo bsdmainutils \\\n    #\n    # Verify git, process tools, lsb-release (common in install instructions for CLIs) installed \\\n    && apt-get -y --no-install-recommends install git iproute2 procps lsb-release build-essential \\\n    # Install Release Tools\n    #\n    # --> RPM used by goreleaser\n    && apt install --no-install-recommends -y rpm && rm -rf /var/lib/apt/lists/*;\n\n# This Dockerfile adds a non-root user with sudo access. Use the \"remoteUser\"\n# property in devcontainer.json to use it. On Linux, the container user's GID/UIDs\n# will be updated to match your local UID/GID (when using the dockerFile property).\n# See https://aka.ms/vscode-remote/containers/non-root-user for details.\nARG USERNAME=vscode\nARG USER_UID=1000\nARG USER_GID=$USER_UID\n\n# Create the user\nRUN groupadd --gid $USER_GID $USERNAME \\\n    && useradd --uid $USER_UID --gid $USER_GID -m $USERNAME \\\n    && apt-get update \\\n    && apt-get install --no-install-recommends -y sudo \\\n    && echo $USERNAME ALL=\\(root\\) NOPASSWD:ALL > /etc/sudoers.d/$USERNAME \\\n    && chmod 0440 /etc/sudoers.d/$USERNAME && rm -rf /var/lib/apt/lists/*;\n\n# Set default user\nUSER $USERNAME\nRUN mkdir -p ~/.local/bin\nENV PATH /home/${USERNAME}/.local/bin:$PATH\n\n# Set env for tracking that we're running in a devcontainer\nENV DEVCONTAINER=true\n\n# Enable go modules\nENV GO111MODULE=on\n\n# Install Go tools\nARG GO_PLS_VERSION=0.7.2\nARG DLV_VERSION=1.7.2\nARG GO_RELEASER_VERSION=0.180.3\nARG GOLANGCI_LINT_VERSION=1.42.1\nRUN \\\n    # --> Delve for debugging\n    go get github.com/go-delve/delve/cmd/dlv@v${DLV_VERSION}\\\n    # --> Go language server\n    && go get golang.org/x/tools/gopls@v${GO_PLS_VERSION} \\\n    # --> Go symbols and outline for go to symbol support and test support \n    && go get github.com/acroca/go-symbols@v0.1.1 && go get github.com/ramya-rao-a/go-outline@7182a932836a71948db4a81991a494751eccfe77 \\\n    # --> GolangCI-lint\n    && curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v${GOLANGCI_LINT_VERSION} \\\n    # --> Go releaser \n    && curl -sfL https://install.goreleaser.com/github.com/goreleaser/goreleaser.sh | sh -s -- v${GO_RELEASER_VERSION} \\\n    # --> Install junit converter\n    && go get github.com/jstemmer/go-junit-report@v0.9.1 \\\n    && sudo rm -rf /go/src/ \\\n    && sudo rm -rf /go/pkg\n\n# Switch back to dialog for any ad-hoc use of apt-get\nENV DEBIAN_FRONTEND=dialog\n\n# gh\nCOPY scripts/gh.sh /tmp/\nRUN /tmp/gh.sh\n\n# symlink gh config folder\nRUN echo 'if [[ ! -d /home/vscode/.config/gh ]]; then mkdir -p /home/vscode/.config; ln -s /config/gh /home/vscode/.config/gh; fi ' >> ~/.bashrc\n\nARG DOCKER_GROUP_ID\n\n# docker-from-docker\nCOPY scripts/docker-client.sh /tmp/\nRUN /tmp/docker-client.sh\n"
}