{
  "startTime": 1674254226284,
  "endTime": 1674254226872,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 28
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Stage 1 - Building the backend\nFROM registry.access.redhat.com/ubi8/nodejs-16 as backendBuilder\nCOPY /new-backend/package*.json ./\nUSER root\nRUN npm install && npm cache clean --force;\nCOPY ./new-backend .\nRUN npm run compile\n\n# Stage 2 - Building the client\nFROM registry.access.redhat.com/ubi8/nodejs-16 as clientBuilder\nCOPY /new-client/package*.json ./\nUSER root\nRUN npm install --ignore-scripts && npm cache clean --force;\nCOPY ./new-client .\nRUN rm ./public/appConfig.json\nRUN mv ./public/appConfig.docker.json ./public/appConfig.json\nRUN npm run build --ignore-scripts\n\n# Stage 3 - Building the admin\nFROM registry.access.redhat.com/ubi8/nodejs-16 as adminBuilder\nCOPY /new-admin/package*.json ./\nUSER root\nRUN npm install && npm cache clean --force;\nCOPY ./new-admin .\nRUN rm ./public/config.json\nRUN mv ./public/config.docker.json ./public/config.json\nRUN npm run build\n\n# Stage 4 - Combine everything and fire it up\nFROM registry.access.redhat.com/ubi8/nodejs-16-minimal\nCOPY /new-backend/package*.json ./\nUSER root\nRUN npm install --production && npm cache clean --force;\nUSER 1001\nCOPY --from=backendBuilder /opt/app-root/src/dist ./\nCOPY /new-backend/.env .\nCOPY /new-backend/App_Data ./App_Data\nCOPY /new-backend/static ./static\nCOPY --from=clientBuilder /opt/app-root/src/build ./static/client\nCOPY --from=adminBuilder /opt/app-root/src/build ./static/admin\nUSER root\nRUN chown -R 1001 ./App_Data\nVOLUME /opt/app-root/src/App_Data\nEXPOSE 3002\nUSER 1001\nCMD node index.js\n\n# See HAJK Docker/README.md for example usage\n"
}