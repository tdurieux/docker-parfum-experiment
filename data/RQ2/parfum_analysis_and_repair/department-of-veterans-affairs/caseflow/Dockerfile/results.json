{
  "startTime": 1674250739265,
  "endTime": 1674250740191,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 79
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 95,
        "columnEnd": 198
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 98,
        "columnEnd": 196
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 58
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 58
      }
    }
  ],
  "repairedDockerfile": "FROM ruby:2.7.3-slim\nMAINTAINER Development and Operations team @ Department of Veterans Affairs\n\n# Build variables\nENV BUILD build-essential postgresql-client libaio1 libpq-dev libsqlite3-dev curl software-properties-common apt-transport-https pdftk\nENV CASEFLOW git nodejs yarn\n\n# Environment (system) variables\nENV LD_LIBRARY_PATH=\"/opt/oracle/instantclient_12_2:$LD_LIBRARY_PATH\" \\\n    ORACLE_HOME=\"/opt/oracle/instantclient_12_2\" \\\n    LANG=\"AMERICAN_AMERICA.US7ASCII\" \\\n    RAILS_ENV=\"development\" \\\n    DEPLOY_ENV=\"demo\" \\\n    PATH=\"$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH\"\n\n# install oracle deps\nWORKDIR /opt/oracle/instantclient_12_2/\nCOPY docker-bin/oracle_libs/* ./\nRUN ln -s libclntsh.so.12.1 libclntsh.so\n\nWORKDIR /caseflow\n\n# Copy all the files\nCOPY . .\n\nRUN pwd && ls -lsa\n\n# Build dependencies\nRUN apt -y update && \\\n    apt -y upgrade && \\\n    mkdir -p /usr/share/man/man1 && \\\n    mkdir /usr/share/man/man7 && \\\n    apt install --no-install-recommends -y ${BUILD} && \\\n    curl -f -sL https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - && \\\n    echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list && \\\n    apt -y update && \\\n    curl -f -sL https://deb.nodesource.com/setup_$(cat .nvmrc | cut -d \".\" -f 1).x | bash - && \\\n    apt install --no-install-recommends -y ${CASEFLOW} && \\\n    curl -f -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - && \\\n    echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list && \\\n    apt-get clean && apt-get autoclean && apt-get autoremove && rm -rf /var/lib/apt/lists/*;\n\n# install jemalloc\nRUN apt install -y --no-install-recommends libjemalloc-dev && rm -rf /var/lib/apt/lists/*;\n\n# install datadog agent\nRUN DD_INSTALL_ONLY=true DD_AGENT_MAJOR_VERSION=7 DD_API_KEY=$(cat config/datadog.key) bash -c \"$( curl -f -L https://raw.githubusercontent.com/DataDog/datadog-agent/master/cmd/agent/install_script.sh)\" -f\n\nRUN rm -rf /var/lib/apt/lists/*\n\n# Installing the version of bundler that corresponds to the Gemfile.lock\n# Rake 13.0.1 is already installed, so we're uninstalling it and letting bundler install rake later.\nRUN gem install bundler:$(cat Gemfile.lock | tail -1 | tr -d \" \") && gem uninstall -i /usr/local/lib/ruby/gems/2.7.0 rake\nRUN bundle install && \\\n    cd client && \\\n    yarn install && \\\n    yarn run build:demo && \\\n    chmod +x /caseflow/docker-bin/startup.sh && \\\n    rm -rf docker-bin && yarn cache clean;\n\n# Run the app\nENTRYPOINT [\"/bin/bash\", \"-c\", \"/caseflow/docker-bin/startup.sh\"]\n"
}