diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/sassoftware/sas-container-recipes/util/programming-only-single/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/sassoftware/sas-container-recipes/util/programming-only-single/Dockerfile/repaired.Dockerfile
index dc28e95..4d38102 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/sassoftware/sas-container-recipes/util/programming-only-single/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/sassoftware/sas-container-recipes/util/programming-only-single/Dockerfile/repaired.Dockerfile
@@ -68,15 +68,15 @@ RUN set -e; \
 RUN set -e; \
     if [ "$PLATFORM" = "redhat" ]; then \
         rpm --rebuilddb; \
-        curl --silent --output ${TINI_RPM_NAME} --location ${TINI_URL}/${TINI_RPM_NAME}; \
+        curl -f --silent --output ${TINI_RPM_NAME} --location ${TINI_URL}/${TINI_RPM_NAME}; \
         yum install --assumeyes ${TINI_RPM_NAME}; \
         rm --verbose ${TINI_RPM_NAME}; \
         yum clean all; \
         rm --verbose --recursive --force /root/.cache /var/cache/yum; \
     elif [ "$PLATFORM" = "suse" ]; then \
         zypper install -y curl ; \
-        #Package is unsigned, zypper instead.
-        curl --silent --output ${TINI_RPM_NAME} --location ${TINI_URL}/${TINI_RPM_NAME}; \
+
+        curl -f --silent --output ${TINI_RPM_NAME} --location ${TINI_URL}/${TINI_RPM_NAME}; \
         rpm -i ${TINI_RPM_NAME}; \
         rm --verbose ${TINI_RPM_NAME}; \
         zypper clean ; \
@@ -101,20 +101,19 @@ RUN set -e; \
     if [ "$PLATFORM" = "redhat" ]; then \
         rpm --rebuilddb; \
         echo; echo "####### Add the packages to support running the Ansible playbook"; echo; \
-        yum install --assumeyes  https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm ; \
+        yum install --assumeyes  https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm ; rm -rf /var/cache/yum \
         yum install --assumeyes python-setuptools python-devel openssl-devel; \
         yum install --assumeyes python-pip gcc wget tree automake python-six; \
-    	pip install --upgrade pip==19.3 setuptools==44.0 ; \
-        pip install ansible==${ANSIBLE_VERSION}; \
+     pip install --no-cache-dir --upgrade pip==19.3 setuptools==44.0; \
+        pip install --no-cache-dir ansible==${ANSIBLE_VERSION}; \
         yum install --assumeyes python iproute openssh-clients initscripts sudo; \
     elif [ "$PLATFORM" = "suse" ]; then \
-        #Ansible needs \
         zypper --non-interactive install -y python-setuptools python-pyOpenSSL python-devel; \
-        #Playbook needs \
+
         zypper --non-interactive install -y openssh sudo; \
         easy_install pip; \
         zypper remove -y python-cryptography ; \
-        pip install ansible==${ANSIBLE_VERSION}; \
+        pip install --no-cache-dir ansible==${ANSIBLE_VERSION}; \
     fi;
 
 #
@@ -124,11 +123,8 @@ COPY sas-orchestration ./sas-orchestration
 RUN set -e; \
     if [ ! -d sas_viya_playbook ]; then \
         if [ "$PLATFORM" = "redhat" ] || [ "$PLATFORM" = "suse" ]; then \
-            #echo; echo "####### Get the orchestrationCLI and generate the playbook"; echo; \
-            #curl --silent --remote-name https://support.sas.com/installation/viya/34/sas-orchestration-cli/lax/sas-orchestration-linux.tgz ; \
-            #tar xvf sas-orchestration-linux.tgz; \
             ./sas-orchestration build --input SAS_Viya_deployment_data.zip --deployment-type programming --repository-warehouse $SAS_RPM_REPO_URL --platform $PLATFORM; \
-            tar xvf SAS_Viya_playbook.tgz; \
+            tar xvf SAS_Viya_playbook.tgz; rm SAS_Viya_playbook.tgz \
         else \
             echo; echo "####### For the platform $PLATFORM we cannot generate the playbook as part of the Docker build"; \
             echo "####### Generate the playbook externally and then place the sas_viya_playbook in the current directory"; echo; \