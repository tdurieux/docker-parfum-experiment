diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/machinekit/machinekit-hal/debian/buildsystem/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/machinekit/machinekit-hal/debian/buildsystem/Dockerfile/repaired.Dockerfile
index ea9f5b8..3dc6bd4 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/machinekit/machinekit-hal/debian/buildsystem/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/machinekit/machinekit-hal/debian/buildsystem/Dockerfile/repaired.Dockerfile
@@ -54,23 +54,23 @@ RUN printf "%s;\n%s;\n"                 \
 
 # Ubuntu Focal needs debconf settings in addition
 # to setting 'DEBIAN_FRONTEND=noninteractive'
-RUN apt-get update &&                                                              \
-    apt-get install -y                                                             \
-        apt-utils &&                                                               \
-    apt-get clean &&                                                               \
-    echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections
+RUN apt-get update && \
+    apt-get install --no-install-recommends -y \
+        apt-utils && \
+    apt-get clean && \
+    echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections && rm -rf /var/lib/apt/lists/*;
 
 # Add Machinekit Dependencies repository
-RUN apt-get update &&                                                             \
-    apt-get install -y                                                            \
-        curl                                                                      \
-        apt-transport-https                                                       \
-        lsb-release                                                               \
-        ca-certificates &&                                                        \
+RUN apt-get update && \
+    apt-get install --no-install-recommends -y \
+        curl \
+        apt-transport-https \
+        lsb-release \
+        ca-certificates && \
     curl -1sLf                                                                    \
     'https://dl.cloudsmith.io/public/machinekit/machinekit/cfg/setup/bash.deb.sh' \
-        | distro="$(lsb_release -is)" codename="$(lsb_release -cs)" bash &&                                                                 \
-    apt-get clean
+        | distro="$(lsb_release -is)" codename="$(lsb_release -cs)" bash && \
+    apt-get clean && rm -rf /var/lib/apt/lists/*;
 
 # Update system OS
 RUN apt-get update &&     \
@@ -86,11 +86,11 @@ RUN addgroup --gid 1000 ${USER} &&                            \
     adduser --uid 1000 --ingroup ${USER} --home /home/${USER} \
     --shell /bin/bash --disabled-password --gecos "" ${USER}
 
-RUN apt-get update &&        \
-    apt-get install -y       \
-        sudo                 \
+RUN apt-get update && \
+    apt-get install --no-install-recommends -y \
+        sudo \
         machinekit-fixuid && \
-    apt-get clean
+    apt-get clean && rm -rf /var/lib/apt/lists/*;
 
 COPY debian/buildsystem/base-entrypoint.sh /opt/bin/base-entrypoint.sh
 
@@ -106,23 +106,23 @@ ENTRYPOINT [ "/opt/bin/base-entrypoint.sh" ]
 
 FROM machinekit-hal_base AS machinekit-hal_builder_base
 
-RUN apt-get update &&       \
-    apt-get install -y      \
-        build-essential     \
-        fakeroot            \
-        devscripts          \
-        equivs              \
-        ninja-build         \
-        python3-venv        \
-        jq &&               \
-    apt-get clean;
+RUN apt-get update && \
+    apt-get install --no-install-recommends -y \
+        build-essential \
+        fakeroot \
+        devscripts \
+        equivs \
+        ninja-build \
+        python3-venv \
+        jq && \
+    apt-get clean; rm -rf /var/lib/apt/lists/*;
 
 # Kitware is publishing pre-built binaries only for amd64 and arm64 architectures!
-RUN curl -1vLf                                                                                                      \
-    $(curl -s https://api.github.com/repos/kitware/cmake/releases/latest |                                          \
+RUN curl -1vLf \
+    $( curl -f -s https://api.github.com/repos/kitware/cmake/releases/latest | \
         jq -r --arg FILE "cmake-\d{1,}\.\d{1,}\.\d{1,}(-.{1,})?-linux-$(dpkg-architecture -qDEB_BUILD_GNU_CPU)\.sh" \
-        '.assets | .[] | select(.name? | match($FILE)) | .browser_download_url')                                    \
-        --output /tmp/cmake.sh &&                                                                                   \
+        '.assets | .[] | select(.name? | match($FILE)) | .browser_download_url') \
+        --output /tmp/cmake.sh && \
     bash /tmp/cmake.sh --skip-license --prefix=/usr/local
 
 # Python 3.9 has --upgrade-deps, but lower versions need manual action