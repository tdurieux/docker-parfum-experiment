{
  "startTime": 1674215718973,
  "endTime": 1674215720024,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 5,
        "columnEnd": 72
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 54
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 84,
        "columnEnd": 99
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 17,
        "columnStart": 5,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 5,
        "columnEnd": 43
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 5,
        "columnEnd": 25
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 74,
        "lineEnd": 74,
        "columnStart": 18,
        "columnEnd": 45
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 17,
        "columnStart": 5,
        "columnEnd": 33
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 5,
        "columnEnd": 43
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 5,
        "columnEnd": 25
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 74,
        "lineEnd": 74,
        "columnStart": 18,
        "columnEnd": 45
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright (C) 2019 Intel Corporation.  All rights reserved.\n# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception\n\n# tie the ${VARIANT} and a llvm binary release together\n# please find a matched version on https://github.com/llvm/llvm-project/releases\nARG VARIANT=focal\nFROM ubuntu:${VARIANT}\n\nARG DEBIAN_FRONTEND=noninteractive\nENV TZ=Asian/Shanghai\n\nRUN apt update \\\n  && apt install --no-install-recommends -y apt-transport-https apt-utils build-essential \\\n      ca-certificates curl g++-multilib git gnupg \\\n      libgcc-9-dev lib32gcc-9-dev lsb-release \\\n      ninja-build ocaml ocamlbuild python2.7 \\\n      software-properties-common tree tzdata \\\n      unzip valgrind vim wget zip && rm -rf /var/lib/apt/lists/*;\n\n#\n# CMAKE (https://apt.kitware.com/)\nRUN wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null | gpg --batch --dearmor - | tee /usr/share/keyrings/kitware-archive-keyring.gpg > /dev/null \\\n  && echo 'deb [signed-by=/usr/share/keyrings/kitware-archive-keyring.gpg] https://apt.kitware.com/ubuntu/ bionic main' | tee /etc/apt/sources.list.d/kitware.list >/dev/null \\\n  && apt update \\\n  && rm /usr/share/keyrings/kitware-archive-keyring.gpg \\\n  && apt install --no-install-recommends -y kitware-archive-keyring \\\n  && apt install --no-install-recommends -y cmake && rm -rf /var/lib/apt/lists/*;\n\n#\n# install emsdk (may not necessary ?)\nRUN cd /opt \\\n  && git clone https://github.com/emscripten-core/emsdk.git\nRUN cd /opt/emsdk \\\n  && git pull \\\n  && ./emsdk install 2.0.26 \\\n  && ./emsdk activate 2.0.26 \\\n  && echo \"source /opt/emsdk/emsdk_env.sh\" >> /root/.bashrc\n\n#\n# install clang and llvm release\nARG CLANG_VER=13.0.0\nRUN wget https://github.com/llvm/llvm-project/releases/download/llvmorg-${CLANG_VER}/clang+llvm-${CLANG_VER}-x86_64-linux-gnu-ubuntu-20.04.tar.xz -P /opt\nRUN cd /opt \\\n  && tar xf clang+llvm-${CLANG_VER}-x86_64-linux-gnu-ubuntu-20.04.tar.xz \\\n  && ln -sf clang+llvm-${CLANG_VER}-x86_64-linux-gnu-ubuntu-20.04 clang-llvm && rm clang+llvm-${CLANG_VER}-x86_64-linux-gnu-ubuntu-20.04.tar.xz\nRUN rm /opt/clang+llvm-${CLANG_VER}-x86_64-linux-gnu-ubuntu-20.04.tar.xz\n\n\n#\n# install wasi-sdk\nARG WASI_SDK_VER=14\nRUN wget -c https://github.com/WebAssembly/wasi-sdk/releases/download/wasi-sdk-${WASI_SDK_VER}/wasi-sdk-${WASI_SDK_VER}.0-linux.tar.gz -P /opt\nRUN tar xf /opt/wasi-sdk-${WASI_SDK_VER}.0-linux.tar.gz -C /opt \\\n  && ln -fs /opt/wasi-sdk-${WASI_SDK_VER}.0 /opt/wasi-sdk && rm /opt/wasi-sdk-${WASI_SDK_VER}.0-linux.tar.gz\nRUN rm /opt/wasi-sdk-${WASI_SDK_VER}.0-linux.tar.gz\n\n#\n#install wabt\nARG WABT_VER=1.0.24\nRUN wget -c https://github.com/WebAssembly/wabt/releases/download/${WABT_VER}/wabt-${WABT_VER}-ubuntu.tar.gz -P /opt\nRUN tar xf /opt/wabt-${WABT_VER}-ubuntu.tar.gz -C /opt \\\n  && ln -fs /opt/wabt-${WABT_VER} /opt/wabt && rm /opt/wabt-${WABT_VER}-ubuntu.tar.gz\nRUN rm /opt/wabt-${WABT_VER}-ubuntu.tar.gz\n\n#\n# install bazelisk\nARG BAZELISK_VER=1.10.1\nRUN mkdir /opt/bazelisk\nRUN wget -c https://github.com/bazelbuild/bazelisk/releases/download/v${BAZELISK_VER}/bazelisk-linux-amd64 -P /opt/bazelisk\nRUN chmod a+x /opt/bazelisk/bazelisk-linux-amd64 \\\n  && ln -fs /opt/bazelisk/bazelisk-linux-amd64 /opt/bazelisk/bazel\n\n#\n# install\nRUN apt update && apt install --no-install-recommends -y clang-format && rm -rf /var/lib/apt/lists/*;\n\n# set path\nENV PATH \"$PATH:/opt/wasi-sdk/bin:/opt/wabt/bin:/opt/binaryen/bin:/opt/bazelisk:/opt/clang-llvm/bin\"\nRUN echo \"export PATH=/opt/wasi-sdk/bin:/opt/wabt/bin:/opt/binaryen/bin:/opt/bazelisk:/opt/clang-llvm/bin:${PATH}\" >> /root/.bashrc\n\n#\n# PS\nRUN echo \"PS1='\\n[ \\u@wamr-dev-docker \\W ]\\n$ '\" >> /root/.bashrc\n\n# Clean up\nRUN apt-get autoremove -y \\\n  && apt-get clean -y \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && rm -rf /tmp/*\n\nVOLUME /workspace\nWORKDIR /workspace\n"
}