diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/bytecodealliance/wasm-micro-runtime/ci/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/bytecodealliance/wasm-micro-runtime/ci/Dockerfile/repaired.Dockerfile
index b6e5af4..e13e0e4 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/bytecodealliance/wasm-micro-runtime/ci/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/bytecodealliance/wasm-micro-runtime/ci/Dockerfile/repaired.Dockerfile
@@ -10,21 +10,21 @@ ARG DEBIAN_FRONTEND=noninteractive
 ENV TZ=Asian/Shanghai
 
 RUN apt update \
-  && apt install -y apt-transport-https apt-utils build-essential \
+  && apt install --no-install-recommends -y apt-transport-https apt-utils build-essential \
       ca-certificates curl g++-multilib git gnupg \
       libgcc-9-dev lib32gcc-9-dev lsb-release \
-      ninja-build  ocaml ocamlbuild python2.7 \
+      ninja-build ocaml ocamlbuild python2.7 \
       software-properties-common tree tzdata \
-      unzip valgrind vim wget zip
+      unzip valgrind vim wget zip && rm -rf /var/lib/apt/lists/*;
 
 #
 # CMAKE (https://apt.kitware.com/)
-RUN wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null | gpg --dearmor - | tee /usr/share/keyrings/kitware-archive-keyring.gpg > /dev/null \
+RUN wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null | gpg --batch --dearmor - | tee /usr/share/keyrings/kitware-archive-keyring.gpg > /dev/null \
   && echo 'deb [signed-by=/usr/share/keyrings/kitware-archive-keyring.gpg] https://apt.kitware.com/ubuntu/ bionic main' | tee /etc/apt/sources.list.d/kitware.list >/dev/null \
   && apt update \
   && rm /usr/share/keyrings/kitware-archive-keyring.gpg \
-  && apt install -y kitware-archive-keyring \
-  && apt install -y cmake
+  && apt install --no-install-recommends -y kitware-archive-keyring \
+  && apt install --no-install-recommends -y cmake && rm -rf /var/lib/apt/lists/*;
 
 #
 # install emsdk (may not necessary ?)
@@ -42,7 +42,7 @@ ARG CLANG_VER=13.0.0
 RUN wget https://github.com/llvm/llvm-project/releases/download/llvmorg-${CLANG_VER}/clang+llvm-${CLANG_VER}-x86_64-linux-gnu-ubuntu-20.04.tar.xz -P /opt
 RUN cd /opt \
   && tar xf clang+llvm-${CLANG_VER}-x86_64-linux-gnu-ubuntu-20.04.tar.xz \
-  && ln -sf clang+llvm-${CLANG_VER}-x86_64-linux-gnu-ubuntu-20.04 clang-llvm
+  && ln -sf clang+llvm-${CLANG_VER}-x86_64-linux-gnu-ubuntu-20.04 clang-llvm && rm clang+llvm-${CLANG_VER}-x86_64-linux-gnu-ubuntu-20.04.tar.xz
 RUN rm /opt/clang+llvm-${CLANG_VER}-x86_64-linux-gnu-ubuntu-20.04.tar.xz
 
 
@@ -51,7 +51,7 @@ RUN rm /opt/clang+llvm-${CLANG_VER}-x86_64-linux-gnu-ubuntu-20.04.tar.xz
 ARG WASI_SDK_VER=14
 RUN wget -c https://github.com/WebAssembly/wasi-sdk/releases/download/wasi-sdk-${WASI_SDK_VER}/wasi-sdk-${WASI_SDK_VER}.0-linux.tar.gz -P /opt
 RUN tar xf /opt/wasi-sdk-${WASI_SDK_VER}.0-linux.tar.gz -C /opt \
-  && ln -fs /opt/wasi-sdk-${WASI_SDK_VER}.0 /opt/wasi-sdk
+  && ln -fs /opt/wasi-sdk-${WASI_SDK_VER}.0 /opt/wasi-sdk && rm /opt/wasi-sdk-${WASI_SDK_VER}.0-linux.tar.gz
 RUN rm /opt/wasi-sdk-${WASI_SDK_VER}.0-linux.tar.gz
 
 #
@@ -59,7 +59,7 @@ RUN rm /opt/wasi-sdk-${WASI_SDK_VER}.0-linux.tar.gz
 ARG WABT_VER=1.0.24
 RUN wget -c https://github.com/WebAssembly/wabt/releases/download/${WABT_VER}/wabt-${WABT_VER}-ubuntu.tar.gz -P /opt
 RUN tar xf /opt/wabt-${WABT_VER}-ubuntu.tar.gz -C /opt \
-  && ln -fs /opt/wabt-${WABT_VER} /opt/wabt
+  && ln -fs /opt/wabt-${WABT_VER} /opt/wabt && rm /opt/wabt-${WABT_VER}-ubuntu.tar.gz
 RUN rm /opt/wabt-${WABT_VER}-ubuntu.tar.gz
 
 #
@@ -72,7 +72,7 @@ RUN chmod a+x /opt/bazelisk/bazelisk-linux-amd64 \
 
 #
 # install
-RUN apt update && apt install -y clang-format
+RUN apt update && apt install --no-install-recommends -y clang-format && rm -rf /var/lib/apt/lists/*;
 
 # set path
 ENV PATH "$PATH:/opt/wasi-sdk/bin:/opt/wabt/bin:/opt/binaryen/bin:/opt/bazelisk:/opt/clang-llvm/bin"