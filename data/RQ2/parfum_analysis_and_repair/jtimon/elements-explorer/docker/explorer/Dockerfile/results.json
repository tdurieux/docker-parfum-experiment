{
  "startTime": 1674247906865,
  "endTime": 1674247907516,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 18,
        "columnEnd": 36
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 15,
        "columnEnd": 33
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 13,
        "columnStart": 22,
        "columnEnd": 29
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 13,
        "columnStart": 22,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:18.04\n\nEXPOSE 5000\n\nRUN apt-get update && apt-get install --no-install-recommends -qfy \\\n    curl \\\n    git \\\n    nodejs \\\n    npm \\\n    python-pip \\\n    python-dev \\\n    ipython \\\n    libpq-dev \\\n    postgresql-server-dev-all && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /build_docker\n\nCOPY docker/explorer/requirements.txt /build_docker/requirements.txt\nRUN pip install --no-cache-dir -r requirements.txt --require-hashes\n\n# upgrade node (need to downgrade npm first)\nRUN npm install -g npm@4.6.1 && npm cache clean --force;\nRUN npm install -g n && npm cache clean --force;\nRUN n 10.0.0\nRUN npm install -g npm@6.0.0 && npm cache clean --force;\n\nCOPY docker/explorer/package.json /build_docker/gui_alt/package.json\nRUN cd gui_alt && npm i --production && npm cache clean --force;\nCOPY gui2/package.json /build_docker/gui2/package.json\nCOPY gui2/package-lock.json /build_docker/gui2/package-lock.json\nRUN cd gui2 && npm i --production && npm cache clean --force;\n\nCOPY mintools /build_docker/mintools\nCOPY explorer /build_docker/explorer\nCOPY setup.py /build_docker/setup.py\nRUN python /build_docker/setup.py develop\n\nCOPY webflask /build_docker/webflask\nCOPY gui_alt /build_docker/gui_alt\nCOPY gui2 /build_docker/gui2\nRUN cd gui2 && npm run build\n\nARG ENV_NAME\nCOPY docker/$ENV_NAME/conf/API_AVAILABLE.json /build_docker/docker/conf/API_AVAILABLE.json\nCOPY docker/$ENV_NAME/conf/AVAILABLE_CHAINS.json /build_docker/docker/conf/AVAILABLE_CHAINS.json\nCOPY docker/$ENV_NAME/conf/RPC_ALLOWED_CALLS.json /build_docker/docker/conf/RPC_ALLOWED_CALLS.json\nCOPY docker/$ENV_NAME/conf/explorer.proc /build_docker/docker/conf/explorer.proc\nCOPY docker/$ENV_NAME/conf/explorer.env /build_docker/docker/conf/explorer.env\nCMD honcho start -e docker/conf/explorer.env -f docker/conf/explorer.proc\n"
}