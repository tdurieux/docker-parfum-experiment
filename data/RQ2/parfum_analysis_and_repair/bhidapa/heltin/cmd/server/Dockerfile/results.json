{
  "startTime": 1674219194444,
  "endTime": 1674219195251,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 41
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 32,
        "columnEnd": 48
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 45,
        "columnEnd": 61
      }
    }
  ],
  "repairedDockerfile": "# build server\nFROM golang:1.18-alpine as server\nLABEL org.opencontainers.image.source https://github.com/bhidapa/heltin\n\nRUN apk --update --no-cache add git tzdata\n\nWORKDIR $GOPATH/src/github.com/bhidapa/heltin\n\nCOPY go.mod .\nCOPY go.sum .\nRUN go mod download -x\n\nCOPY pkg ./pkg\nCOPY cmd/server ./cmd/server\nRUN set -eux; \\\n  cd cmd/server; \\\n  GOOS=linux GOARCH=amd64 CGO_ENABLED=0 \\\n  go build -v -o /heltin-server\n\n# build web\nFROM node:18 as web\n\nWORKDIR /web\n\nCOPY web/.yarn/releases ./.yarn/releases\nCOPY web/.yarn/plugins ./.yarn/plugins\nCOPY web/.yarnrc.yml .\n\nCOPY web/yarn.lock .\nCOPY web/package.json .\nRUN yarn install --immutable && yarn cache clean;\n\nCOPY web .\nARG VITE_APP_VER\nRUN VITE_APP_VER=$VITE_APP_VER yarn build && yarn cache clean;\n\n# server\nFROM alpine:3.16\n\n# necessary for healthchecks\nRUN apk --update --no-cache add curl\n\nCOPY --from=server /usr/share/zoneinfo /usr/share/zoneinfo\nCOPY --from=server /heltin-server /usr/local/bin/\n\nENV APP_DIR=/srv/app\nCOPY --from=web /web/build $APP_DIR\n\nENTRYPOINT [\"heltin-server\"]\n"
}