diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/cfpb/consumerfinance.gov/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/cfpb/consumerfinance.gov/Dockerfile/repaired.Dockerfile
index b2be5a2..2c4a149 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/cfpb/consumerfinance.gov/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/cfpb/consumerfinance.gov/Dockerfile/repaired.Dockerfile
@@ -15,7 +15,7 @@ WORKDIR ${APP_HOME}
 
 # Install and update common OS packages, pip, setuptools, wheel, and awscli
 RUN apk update --no-cache && apk upgrade --no-cache
-RUN pip install --upgrade pip setuptools wheel awscli
+RUN pip install --no-cache-dir --upgrade pip setuptools wheel awscli
 
 # Add `$HOME/.local/bin` to PATH
 RUN echo 'export PATH=$HOME/.local/bin:$PATH' >> /etc/profile
@@ -28,7 +28,7 @@ RUN apk add --no-cache --virtual .build-deps gcc gettext git libffi-dev musl-dev
 
 # Install python requirements
 COPY requirements requirements
-RUN pip install --user -r requirements/deployment.txt
+RUN pip install --no-cache-dir --user -r requirements/deployment.txt
 
 # cfgov-dev is used for local development, as well as a base for frontend.
 FROM cfgov-python-builder AS cfgov-dev
@@ -47,7 +47,7 @@ RUN apk add --no-cache --virtual .frontend-deps jpeg-dev nodejs yarn zlib-dev
 
 # Install python requirements
 COPY requirements requirements
-RUN pip install --user -r requirements/local.txt
+RUN pip install --no-cache-dir --user -r requirements/local.txt
 
 EXPOSE 8000
 
@@ -74,7 +74,7 @@ COPY . .
 RUN ./frontend.sh  ${FRONTEND_TARGET} && \
     cfgov/manage.py collectstatic && \
     yarn cache clean && \
-    rm -rf node_modules npm-packages-offline-cache cfgov/unprocessed
+    rm -rf node_modules npm-packages-offline-cache cfgov/unprocessed && yarn cache clean;
 
 # Build mod_wsgi against target Python version
 FROM base as cfgov-mod-wsgi
@@ -82,8 +82,8 @@ WORKDIR /tmp
 RUN apk add --no-cache --virtual .build-deps apache2-dev gcc make musl-dev
 RUN wget https://github.com/GrahamDumpleton/mod_wsgi/archive/refs/tags/4.9.0.tar.gz -O mod_wsgi.tar.gz
 RUN echo -n "0a6f380af854b85a3151e54a3c33b520c4a6e21a99bcad7ae5ddfbfe31a74b50  mod_wsgi.tar.gz" | sha256sum -c
-RUN tar xvf mod_wsgi.tar.gz
-RUN cd mod_wsgi* && ./configure && make install
+RUN tar xvf mod_wsgi.tar.gz && rm mod_wsgi.tar.gz
+RUN cd mod_wsgi* && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" && make install
 RUN ls /usr/lib/apache2/mod_wsgi.so  # Ensure it compiled and is where expected
 RUN apk del .build-deps
 RUN rm -Rf /tmp/mod_wsgi*