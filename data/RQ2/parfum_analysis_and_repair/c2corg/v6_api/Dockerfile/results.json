{
  "startTime": 1674248003843,
  "endTime": 1674248005276,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 22,
        "lineEnd": 42,
        "columnStart": 7,
        "columnEnd": 7
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 7,
        "columnEnd": 57
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 22,
        "lineEnd": 42,
        "columnStart": 7,
        "columnEnd": 7
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 22,
        "lineEnd": 42,
        "columnStart": 7,
        "columnEnd": 7
      }
    }
  ],
  "repairedDockerfile": "FROM docker.io/debian:buster-slim\n\nENV DEBIAN_FRONTEND noninteractive\n\nENV LC_ALL en_US.UTF-8\n\nRUN set -x \\\n    && apt-get update \\\n    && apt-get -y upgrade \\\n    && apt-get -y --no-install-recommends install locales \\\n    && echo \"en_US.UTF-8 UTF-8\" > /etc/locale.gen \\\n    && locale-gen en_US.UTF-8 \\\n    && dpkg-reconfigure locales \\\n    && /usr/sbin/update-locale LANG=en_US.UTF-8 && rm -rf /var/lib/apt/lists/*;\n\nCOPY project.tar /tmp\n\nWORKDIR /var/www/\n\nRUN tar -xvf /tmp/project.tar && chown -R root:root /var/www && rm /tmp/project.tar\n\nRUN set -x \\\n    && apt-get -y --no-install-recommends install \\\n    python3 \\\n    python3-chardet \\\n    python3-colorama \\\n    python3-html5lib \\\n    python3-pkg-resources \\\n    python3-requests \\\n    python3-six \\\n    python3-urllib3 \\\n    libgeos-c1v5 \\\n    libpq5 \\\n    libffi6 \\\n    make \\\n    python3-dev \\\n    python3-pip \\\n    libgeos-dev \\\n    libffi-dev \\\n    libpq-dev \\\n    virtualenv \\\n    gcc \\\n    git && rm -rf /var/lib/apt/lists/*;\n\nRUN set -x \\\n && make -f config/dev install \\\n && py3compile -f .build/venv/ \\\n && rm -fr .cache \\\n && apt-get -y purge \\\n && apt-get -y --purge autoremove \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n\nARG VERSION\nENV version=$VERSION \\\n    PATH=/var/www/.build/venv/bin/:$PATH\n\nCOPY /docker-entrypoint.sh /\nCOPY /docker-entrypoint.d/* /docker-entrypoint.d/\nENTRYPOINT [\"/docker-entrypoint.sh\"]\n\nEXPOSE 8080\nCMD [\"gunicorn\", \"--paste\", \"production.ini\", \"-u\", \"www-data\", \"-g\", \"www-data\", \"-b\", \":8080\"]\n"
}