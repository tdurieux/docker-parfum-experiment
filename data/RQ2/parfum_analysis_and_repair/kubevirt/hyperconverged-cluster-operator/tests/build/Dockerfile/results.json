{
  "startTime": 1674218165995,
  "endTime": 1674218166995,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 5,
        "columnEnd": 155
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 26,
        "columnEnd": 55
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM fedora:35\n\nMAINTAINER \"The KubeVirt Project\" <kubevirt-dev@googlegroups.com>\n\n\nRUN echo \"diskspacecheck=0\" >> /etc/dnf/dnf.conf && dnf update -y && dnf install qemu xz gzip git python3-pip gcc autoconf automake libtool python jq wget -y && dnf clean all\n\nRUN pip3 install --no-cache-dir j2cli && pip3 install --no-cache-dir operator-courier\n\nENV GO_VERSION=1.18.1 \\\n    KUBEBUILDER_VERSION=\"3.2.0\" \\\n    ARCH=\"amd64\" \\\n    GOPATH=\"/go\" \\\n    PATH=$PATH:${GOPATH}/go/bin \\\n    GO111MODULE=on\n\nRUN \\\n    mkdir -p ${GOPATH} && \\\n    wget https://golang.org/dl/go${GO_VERSION}.linux-amd64.tar.gz && \\\n    tar -C ${GOPATH}/../ -xzf go${GO_VERSION}.linux-amd64.tar.gz && \\\n    rm -rf go${GO_VERSION}.linux-amd64.tar.gz && \\\n    export PATH=${GOPATH}/bin:$PATH && \\\n    eval $(go env) && \\\n    go install github.com/onsi/ginkgo/v2/ginkgo@latest && \\\n    go install golang.org/x/tools/cmd/goimports@latest && \\\n    go install golang.org/x/lint/golint@latest && \\\n    go install github.com/rmohr/go-swagger-utils/swagger-doc@latest && \\\n    go install github.com/mattn/goveralls@latest && \\\n    go install mvdan.cc/sh/v3/cmd/shfmt@latest && \\\n    go install k8s.io/code-generator/cmd/deepcopy-gen@latest && \\\n    go install k8s.io/kube-openapi/cmd/openapi-gen@latest && \\\n    ( curl -f -L -O \"https://github.com/kubernetes-sigs/kubebuilder/releases/download/v${KUBEBUILDER_VERSION}/kubebuilder_${KUBEBUILDER_VERSION}_linux_${ARCH}\" && \\\n     mv kubebuilder_${KUBEBUILDER_VERSION}_linux_${ARCH} /usr/local/kubebuilder)\n\nADD entrypoint.sh /entrypoint.sh\n\nENTRYPOINT [\"/entrypoint.sh\"]\n"
}