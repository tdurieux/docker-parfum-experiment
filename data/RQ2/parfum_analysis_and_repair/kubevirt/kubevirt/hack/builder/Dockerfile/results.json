{
  "startTime": 1674250370582,
  "endTime": 1674250372055,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 67,
        "lineEnd": 68,
        "columnStart": 23,
        "columnEnd": 66
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 130,
        "lineEnd": 130,
        "columnStart": 4,
        "columnEnd": 143
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 115,
        "lineEnd": 115,
        "columnStart": 4,
        "columnEnd": 72
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM quay.io/centos/centos:stream8\n\nARG SONOBUOY_ARCH\nARG BAZEL_ARCH\n\nENV BAZEL_VERSION=4.2.1\nENV GIMME_GO_VERSION=1.17.8\nENV GRADLE_VERSION=6.6\nENV OPERATOR_COURIER_VERSION=2.1.11\nENV SONOBUOY_VERSION=0.19.0\nENV GOLANGCI_LINT_VERSION=v1.46.2\n\nENV KUBEVIRT_CREATE_BAZELRCS=false\n\n# Install packages\nRUN dnf install -y dnf-plugins-core && \\\n    dnf config-manager --enable powertools && \\\n    dnf install -y --setopt=install_weak_deps=False \\\n        java-11-openjdk-devel \\\n        libvirt-devel \\\n        cpio \\\n        patch \\\n        make \\\n        git \\\n        sudo \\\n        gcc \\\n        gcc-c++ \\\n        glibc-static \\\n        libstdc++-static \\\n        glibc-devel \\\n        findutils \\\n        rsync-daemon \\\n        rsync \\\n        qemu-img \\\n        protobuf-compiler \\\n        python38 \\\n        python38-devel \\\n        python38-pip \\\n        redhat-rpm-config \\\n        jq \\\n        wget \\\n        rubygems \\\n        diffutils && \\\n    dnf clean -y all\n\n# Avoids the need to install sssd-client by disabling lookups\nCOPY nsswitch.conf /etc/nsswitch.conf\n\n# Necessary for generation of HTML-formatted API docs (.adoc)\nRUN gem install asciidoctor\n\n# Necessary for Bazel to find Python inside the container\n#\n# https://github.com/bazelbuild/bazel/issues/8665\n# https://github.com/bazelbuild/bazel/issues/11554\nRUN ln -s /usr/bin/python3 /usr/bin/python\n\n# install gradle (required for swagger)\nRUN wget https://services.gradle.org/distributions/gradle-${GRADLE_VERSION}-bin.zip && \\\n    mkdir /opt/gradle && \\\n    unzip -d /opt/gradle gradle-${GRADLE_VERSION}-bin.zip && \\\n    rm gradle-${GRADLE_VERSION}-bin.zip\n\nENV PATH=$PATH:/opt/gradle/gradle-${GRADLE_VERSION}/bin \\\n    JAVA_HOME=/usr/lib/jvm/java-11\n\n# reference to master is for an external repo and can't yet be changed\nRUN mkdir -p /gimme && curl -f -sL \\\n    https://raw.githubusercontent.com/travis-ci/gimme/master/gimme | \\\n    HOME=/gimme bash >> /etc/profile.d/gimme.sh\n\nENV GOPATH=\"/go\" GOBIN=\"/usr/bin\" GO111MODULE=\"on\"\n\n# Install persistent go packages\nRUN set -x && \\\n    mkdir -p /go && \\\n    source /etc/profile.d/gimme.sh && \\\n    go get -v golang.org/x/tools/cmd/goimports@d5fe738 && \\\n    go get -v mvdan.cc/sh/v3/cmd/shfmt@v3.1.1 && \\\n    go get -v k8s.io/code-generator/cmd/deepcopy-gen@v0.20.2 && \\\n    go get -v k8s.io/code-generator/cmd/defaulter-gen@v0.20.2  && \\\n    go get -v k8s.io/kube-openapi/cmd/openapi-gen@30be4d1 && \\\n    go get -v github.com/golang/protobuf/protoc-gen-go@1643683 && \\\n    go get -v k8s.io/code-generator/cmd/client-gen@v0.20.2 && \\\n    go get -v github.com/securego/gosec/v2/cmd/gosec@0ce48a5 && \\\n    go get -v sigs.k8s.io/controller-tools/cmd/controller-gen@v0.4.0 && \\\n    go clean -cache -modcache\n\nRUN set -x && \\\n    source /etc/profile.d/gimme.sh && \\\n    go get -v -u github.com/mattn/goveralls@21feffdfd && \\\n    go get -v -u github.com/golang/mock/gomock@v1.4.3 && \\\n    go get -v -u github.com/rmohr/mock/mockgen@v0.0.0-20170327080805-5980f5d9a70d && \\\n    go get -v -u github.com/rmohr/go-swagger-utils/swagger-doc@v0.0.0-20181110145135-878f7deb1d17 && \\\n    go clean -cache -modcache\n\nRUN set -x && \\\n    source /etc/profile.d/gimme.sh && \\\n    git clone https://github.com/kubernetes/test-infra.git && \\\n    cd /test-infra && \\\n    git checkout f2693aba912dd40c974304caca999d45ee8dce33 && \\\n    cd /test-infra/robots/pr-creator && \\\n    go install && \\\n    cd /test-infra/robots/issue-creator && \\\n    go install && \\\n    cd /test-infra/robots/pr-labeler && \\\n    go install && \\\n    go clean -cache -modcache -r && \\\n    rm -rf /test-infra && \\\n    rm -rf /go && mkdir /go\n\nRUN set -x && \\\n    source /etc/profile.d/gimme.sh && \\\n    curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b \"$(go env GOROOT)\"/bin $GOLANGCI_LINT_VERSION\n\nRUN pip3 install --no-cache-dir --upgrade operator-courier==${OPERATOR_COURIER_VERSION}\n\nRUN set -x && \\\n    wget https://github.com/vmware-tanzu/sonobuoy/releases/download/v${SONOBUOY_VERSION}/sonobuoy_${SONOBUOY_VERSION}_linux_${SONOBUOY_ARCH}.tar.gz && \\\n    tar xvf sonobuoy_${SONOBUOY_VERSION}_linux_${SONOBUOY_ARCH}.tar.gz && \\\n    chmod +x sonobuoy && \\\n    mv sonobuoy /usr/bin && \\\n    rm sonobuoy_${SONOBUOY_VERSION}_linux_${SONOBUOY_ARCH}.tar.gz\n\nCOPY rsyncd.conf /etc/rsyncd.conf\n\nCOPY entrypoint.sh /entrypoint.sh\n\nCOPY create_bazel_cache_rcs.sh /create_bazel_cache_rcs.sh\n\nRUN curl -f -L -o /usr/bin/bazel https://github.com/bazelbuild/bazel/releases/download/${BAZEL_VERSION}/bazel-${BAZEL_VERSION}-linux-${BAZEL_ARCH} && \\\n    chmod u+x /usr/bin/bazel\n\nENTRYPOINT [ \"/entrypoint.sh\" ]\n"
}