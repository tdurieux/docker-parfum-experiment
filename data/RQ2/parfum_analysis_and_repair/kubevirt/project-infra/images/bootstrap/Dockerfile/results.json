{
  "startTime": 1674256274960,
  "endTime": 1674256275809,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 95,
        "lineEnd": 95,
        "columnStart": 5,
        "columnEnd": 109
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright 2017 The Kubernetes Authors.\n# Copyright 2021 The KubeVirt Authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# Includes basic workspace setup, with gcloud and a bootstrap runner\nFROM fedora:36\n\nWORKDIR /workspace\nRUN mkdir -p /workspace\nENV WORKSPACE=/workspace \\\n    TERM=xterm\n\n# add env we can debug with the image name:tag\nARG IMAGE_ARG\nENV IMAGE=${IMAGE_ARG}\n\n# Install packages\nRUN dnf install -y \\\n    cpio \\\n    dnf-plugins-core \\\n    findutils \\\n    gcc \\\n    gcc-c++ \\\n    gettext \\\n    git \\\n    glibc-devel \\\n    glibc-static \\\n    iproute \\\n    java-11-openjdk-devel \\\n    jq \\\n    libstdc++-static \\\n    libvirt-devel \\\n    make \\\n    mercurial \\\n    patch \\\n    protobuf-compiler \\\n    python3-devel \\\n    python-unversioned-command \\\n    redhat-rpm-config \\\n    rsync \\\n    rsync-daemon \\\n    skopeo \\\n    sudo \\\n    buildah \\\n    qemu-user-static \\\n    wget &&\\\n  dnf -y clean all\n\n# Install gcloud\nENV PATH=/google-cloud-sdk/bin:/workspace:${PATH} \\\n    CLOUDSDK_CORE_DISABLE_PROMPTS=1\n\nRUN wget -q https://dl.google.com/dl/cloudsdk/channels/rapid/google-cloud-sdk.tar.gz && \\\n    tar xzf google-cloud-sdk.tar.gz -C / && \\\n    rm google-cloud-sdk.tar.gz && \\\n    /google-cloud-sdk/install.sh \\\n        --disable-installation-options \\\n        --bash-completion=false \\\n        --path-update=false \\\n        --usage-reporting=false && \\\n    gcloud components install alpha beta kubectl && \\\n    gcloud info | tee /workspace/gcloud-info.txt\n\n#\n# BEGIN: DOCKER IN DOCKER SETUP\n#\n# Install packages\n\nRUN dnf install -y \\\n        kmod \\\n        procps-ng \\\n        moby-engine && \\\n    dnf -y clean all\n\n# Create directory for docker storage location\n# NOTE this should be mounted and persisted as a volume ideally (!)\n# We will make a fallback one now just in case\nRUN mkdir /docker-graph\n\n#\n# END: DOCKER IN DOCKER SETUP\n#\n\n# Cache the most commonly used bazel versions in the container\nRUN curl -f -Lo ./bazelisk https://github.com/bazelbuild/bazelisk/releases/download/v1.7.4/bazelisk-linux-amd64 && \\\n     chmod +x ./bazelisk && mv ./bazelisk /usr/local/bin/bazelisk && \\\n     cd /usr/local/bin && ln -s bazelisk bazel\n\n# Cache the most commonly used bazel versions inside the image\n# and remove resulting cache directories to save a few hundred MB\nRUN USE_BAZEL_VERSION=4.1.0 bazel version && \\\n    USE_BAZEL_VERSION=4.2.1 bazel version && \\\n    rm -rf /root/.cache/bazel\n\n# create mixin directories\nRUN mkdir -p /etc/setup.mixin.d/ && mkdir -p /etc/teardown.mixin.d/\n\n# Trust git repositories used for e2e jobs\nRUN git config --global --add safe.directory '*'\n\n# note the runner is also responsible for making docker in docker function if\n# env DOCKER_IN_DOCKER_ENABLED is set and similarly responsible for generating\n# .bazelrc files if bazel remote caching is enabled\nCOPY [\"entrypoint.sh\", \"runner.sh\", \"create_bazel_cache_rcs.sh\", \\\n        \"/usr/local/bin/\"]\n\nENTRYPOINT [\"/usr/local/bin/entrypoint.sh\"]\n"
}