{
  "startTime": 1674254187150,
  "endTime": 1674254187700,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 27
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:focal\n\n# This tutorial does not include how to optimize the image size, therefore\n# we won't be placing various commands on a single line.\nRUN apt-get update && apt-get install --no-install-recommends -y sudo && rm -rf /var/lib/apt/lists/*; # Install sudo command...\n\n\n# Feel free to change this to whatever your want\nENV DOCKER_USER developer\n\n# Start by creating our passwordless user.\nRUN adduser --disabled-password --gecos '' \"$DOCKER_USER\"\n\n# Give root priviledges\nRUN adduser \"$DOCKER_USER\" sudo\n\n# Give passwordless sudo. This is only acceptable as it is a private\n# development environment not exposed to the outside world. Do NOT do this on\n# your host machine or otherwise.\nRUN echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers\n\nUSER \"$DOCKER_USER\"\n\n# This will determine where we will start when we enter the container.\nWORKDIR \"/home/$DOCKER_USER\"\n\n# The sudo message is annoying, so skip it\nRUN touch ~/.sudo_as_admin_successful\n\n# vim: set ft=dockerfile:\n"
}