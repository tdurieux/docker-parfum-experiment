{
  "startTime": 1674253105176,
  "endTime": 1674253106439,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 79,
        "lineEnd": 105,
        "columnStart": 4,
        "columnEnd": 24
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "## Emacs, make this -*- mode: sh; -*-\n\n## start with the Docker 'base R' Debian-based image\nFROM r-base:latest\n\n## This handle reaches Carl and Dirk\nMAINTAINER \"Carl Boettiger and Dirk Eddelbuettel\" rocker-maintainers@eddelbuettel.com\n\n## Remain current\nRUN apt-get update -qq \\\n\t&& apt-get dist-upgrade -y\n\n## From the Build-Depends of the Debian R package, plus subversion, and clang-3.8\n## Compiler flags from https://www.stats.ox.ac.uk/pub/bdr/memtests/README.txt\n##\n## Also add   git autotools-dev automake  so that we can build littler from source\n##\nRUN apt-get update -qq \\\n\t&& apt-get install -t unstable -y --no-install-recommends \\\n\t\tautomake \\\n\t\tautotools-dev \\\n\t\tbash-completion \\\n\t\tbison \\\n\t\tclang \\\n\t\tlibc++-dev \\\n\t\tlibc++abi-dev \\\n\t\tdebhelper \\\n\t\tdefault-jdk \\\n\t\tgfortran \\\n\t\tgit \\\n\t\tgroff-base \\\n\t\tlibblas-dev \\\n\t\tlibbz2-dev \\\n\t\tlibcairo2-dev \\\n\t\tlibcurl4-openssl-dev \\\n\t\tlibjpeg-dev \\\n\t\tliblapack-dev \\\n\t\tliblzma-dev \\\n\t\tlibncurses5-dev \\\n\t\tlibpango1.0-dev \\\n\t\tlibpcre3-dev \\\n\t\tlibpng-dev \\\n\t\tlibreadline-dev \\\n\t\tlibssl-dev \\\n\t\tlibtiff5-dev \\\n\t\tlibx11-dev \\\n\t\tlibxml2-dev \\\n\t\tlibxt-dev \\\n                llvm \\\n\t\tmpack \\\n\t\tsubversion \\\n\t\ttcl-dev \\\n\t\ttexinfo \\\n\t\ttexlive-base \\\n\t\ttexlive-extra-utils \\\n\t\ttexlive-fonts-extra \\\n\t\ttexlive-fonts-recommended \\\n\t\ttexlive-plain-generic \\\n\t\ttexlive-latex-base \\\n\t\ttexlive-latex-extra \\\n\t\ttexlive-latex-recommended \\\n\t\ttk-dev \\\n\t\tvalgrind \\\n\t\tx11proto-core-dev \\\n\t\txauth \\\n\t\txdg-utils \\\n\t\txfonts-base \\\n\t\txvfb \\\n\t\tzlib1g-dev \\\n\t&& rm -rf /var/lib/apt/lists/*\n\n## Add symlink and check out R-devel\nRUN ln -s $(which llvm-symbolizer-7) /usr/local/bin/llvm-symbolizer \\\n\t&& cd /tmp \\\n\t&& svn co https://svn.r-project.org/R/trunk R-devel\n\n## Build and install according extending the standard 'recipe' I emailed/posted years ago\n## Leak detection does not work at build time, see https://github.com/google/sanitizers/issues/764 and the fact that we cannot add privileges during build (e.g. https://unix.stackexchange.com/q/329816/19205)\nRUN cd /tmp/R-devel \\\n\t&& R_PAPERSIZE=letter \\\n\t\t\t\tR_BATCHSAVE=\"--no-save --no-restore\" \\\n\t\t\t\tR_BROWSER=xdg-open \\\n\t\t\t\tPAGER=/usr/bin/pager \\\n\t\t\t\tPERL=/usr/bin/perl \\\n\t\t\t\tR_UNZIPCMD=/usr/bin/unzip \\\n\t\t\t\tR_ZIPCMD=/usr/bin/zip \\\n\t\t\t\tR_PRINTCMD=/usr/bin/lpr \\\n\t\t\t\tLIBnn=lib \\\n\t\t\t\tAWK=/usr/bin/awk \\\n\t\t\t\tCC=\"clang -fsanitize=address,undefined -fno-sanitize=float-divide-by-zero -fno-omit-frame-pointer -fsanitize-address-use-after-scope -fno-sanitize=alignment\" \\\n\t\t\t\tCXX=\"clang++ -stdlib=libc++ -fsanitize=address,undefined -fno-sanitize=float-divide-by-zero -fno-omit-frame-pointer -fsanitize-address-use-after-scope -fno-sanitize=alignment -frtti\" \\\n\t\t\t\tCFLAGS=\"-g -O3 -Wall -pedantic -mtune=native\" \\\n\t\t\t\tFFLAGS=\"-g -O2 -mtune=native\" \\\n\t\t\t\tFCFLAGS=\"-g -O2 -mtune=native\" \\\n\t\t\t\tCXXFLAGS=\"-g -O3 -Wall -pedantic -mtune=native\" \\\n\t\t\t\tMAIN_LD=\"clang++ -stdlib=libc++ -fsanitize=undefined,address\" \\\n\t\t\t\tFC=\"gfortran\" \\\n\t\t\t\tF77=\"gfortran\" \\\n\t\t\t\tASAN_OPTIONS=detect_leaks=0 \\\n\t\t\t\t./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\t\t\t--enable-R-shlib \\\n\t\t\t\t\t\t\t\t--without-blas \\\n\t\t\t\t\t\t\t\t--without-lapack \\\n\t\t\t\t\t\t\t\t--with-readline \\\n\t\t\t\t\t\t\t\t--without-recommended-packages \\\n\t\t\t\t\t\t\t\t--program-suffix=dev \\\n\t\t\t\t\t\t\t\t--disable-openmp \\\n\t&& ASAN_OPTIONS=detect_leaks=0 make \\\n\t&& ASAN_OPTIONS=detect_leaks=0 make install \\\n\t&& ASAN_OPTIONS=detect_leaks=0 make clean\n\n## Set Renviron to get libs from base R install\nRUN echo \"R_LIBS=\\${R_LIBS-'/usr/local/lib/R/site-library:/usr/local/lib/R/library:/usr/lib/R/library'}\" >> /usr/local/lib/R/etc/Renviron\n\n## Set default CRAN repo\nRUN echo 'options(\"repos\"=\"http://cran.rstudio.com\")' >> /usr/local/lib/R/etc/Rprofile.site\n\n## to also build littler against RD\n##   1)\t apt-get install git autotools-dev automake\n##   2)\t use CC from RD CMD config CC, ie same as R\n##   3)\t use PATH to include RD's bin, ie\n## ie\n##   CC=\"clang-3.5 -fsanitize=undefined -fno-sanitize=float-divide-by-zero,vptr,function -fno-sanitize-recover\" \\\n##   PATH=\"/usr/local/lib/R/bin/:$PATH\" \\\n##   ./bootstrap\n\n## Create R-devel symlinks\nRUN cd /usr/local/bin \\\n\t&& mv R Rdevel \\\n\t&& mv Rscript Rscriptdevel \\\n\t&& ln -s Rdevel RD \\\n\t&& ln -s Rscriptdevel RDscript\n\n## Install littler\nRUN ASAN_OPTIONS=detect_leaks=0 R --slave -e \"install.packages('littler')\" \\\n\t&& ASAN_OPTIONS=detect_leaks=0 RD --slave -e \"install.packages('littler')\"\n"
}