{
  "startTime": 1674250565663,
  "endTime": 1674250566078,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 28
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Use the official lightweight Node.js 14 image.\n# https://hub.docker.com/_/node\nFROM node:14-slim\n\nARG ARG_PORT=3000\nARG ARG_ENV=production\n\n# Create and change to the app directory.\nWORKDIR /app\n\n# Copy application dependency manifests to the container image.\n# A wildcard is used to ensure both package.json AND package-lock.json are copied.\n# Copying this separately prevents re-running npm install on every code change.\nCOPY --chown=node package*.json /app/\n\n# Install dependencies.\n# If you add a package-lock.json speed your build by switching to 'npm ci'.\n# RUN npm ci --only=production\nRUN npm install --production && npm cache clean --force;\n\n# Copy local code to the container image.\nCOPY --chown=node . /app/\n\nEXPOSE 3000\nWORKDIR /app\n\nENV PORT=$ARG_PORT\nENV NODE_ENV=$ARG_ENV\n\n# Run the web service on container startup.\nCMD [\"node\", \"./src/app.js\"]\n"
}