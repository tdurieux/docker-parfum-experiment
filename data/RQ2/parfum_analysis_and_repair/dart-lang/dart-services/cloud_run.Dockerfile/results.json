{
  "startTime": 1674217149835,
  "endTime": 1674217150717,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 2,
        "columnEnd": 26
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM dart:2.17.6\n\n# We install unzip and remove the apt-index again to keep the\n# docker image diff small.\nRUN apt-get update && \\\n  apt-get install --no-install-recommends -y unzip && \\\n  rm -rf /var/lib/apt/lists/*\n\nWORKDIR /app\nRUN groupadd --system dart && \\\n  useradd --no-log-init --system --home /home/dart --create-home -g dart dart\nRUN chown dart:dart /app\n\n# Work around https://github.com/dart-lang/sdk/issues/47093\nRUN find /usr/lib/dart -type d -exec chmod 755 {} \\;\n\n# Switch to a new, non-root user to use the flutter tool.\n# The Flutter tool won't perform its actions when run as root.\nUSER dart\n\nCOPY --chown=dart:dart tool/dart_cloud_run.sh /dart_runtime/\nRUN chmod a+x /dart_runtime/dart_cloud_run.sh\nCOPY --chown=dart:dart pubspec.* /app/\nRUN dart pub get\nCOPY --chown=dart:dart . /app\nRUN dart pub get --offline\n\nENV PATH=\"/home/dart/.pub-cache/bin:${PATH}\"\nENV FLUTTER_CHANNEL=\"stable\"\n\n# Set the Flutter SDK up for web compilation.\nRUN dart pub run grinder setup-flutter-sdk\n\n# Build the dill file\nRUN dart pub run grinder build-storage-artifacts validate-storage-artifacts\n\n# Clear out any arguments the base images might have set and ensure we start\n# the Dart app using custom script enabling debug modes.\nCMD []\n\nENTRYPOINT [\"/dart_runtime/dart_cloud_run.sh\", \"--port\", \"${PORT}\", \\\n  \"--redis-url\", \"redis://10.0.0.4:6379\", \"--channel\", \"stable\"]\n"
}