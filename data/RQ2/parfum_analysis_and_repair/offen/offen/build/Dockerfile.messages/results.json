{
  "startTime": 1674251145388,
  "endTime": 1674251145901,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 79,
        "lineEnd": 79,
        "columnStart": 5,
        "columnEnd": 31
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright 2020-2021 - Offen Authors <hioffen@posteo.de>\n# SPDX-License-Identifier: Apache-2.0\n\nFROM node:16-alpine as auditorium\nRUN apk add --no-cache git\nRUN apk add --no-cache --virtual .gyp python3 make g++\nRUN npm i -g npm@6 && npm cache clean --force;\n\nCOPY ./auditorium/package.json ./auditorium/package-lock.json /code/deps/\nCOPY ./packages /code/packages\nWORKDIR /code/deps\nENV PUPPETEER_SKIP_CHROMIUM_DOWNLOAD true\nENV ADBLOCK true\nENV DISABLE_OPENCOLLECTIVE true\nRUN npm ci\nCOPY ./auditorium /code/auditorium\nWORKDIR /code/auditorium\nRUN cp -a /code/deps/node_modules /code/auditorium/\nRUN npm run --silent extract-strings > auditorium.po\n\nFROM node:16-alpine as script\nRUN apk add --no-cache git\nRUN apk add --no-cache --virtual .gyp python3 make g++\nRUN npm i -g npm@6 && npm cache clean --force;\n\nCOPY ./script/package.json ./script/package-lock.json /code/deps/\nCOPY ./packages /code/packages\nWORKDIR /code/deps\nENV ADBLOCK true\nENV DISABLE_OPENCOLLECTIVE true\nENV PUPPETEER_SKIP_CHROMIUM_DOWNLOAD true\nRUN npm ci\nCOPY ./script /code/script\nCOPY ./banner.txt /code/banner.txt\nCOPY ./locales /code/script/locales\nWORKDIR /code/script\nRUN cp -a /code/deps/node_modules /code/script/\nRUN npm run --silent extract-strings > script.po\n\nFROM node:16-alpine as vault\nRUN apk add --no-cache git\nRUN apk add --no-cache --virtual .gyp python3 make g++\nRUN npm i -g npm@6 && npm cache clean --force;\n\nCOPY ./vault/package.json ./vault/package-lock.json /code/deps/\nCOPY ./packages /code/packages\nWORKDIR /code/deps\nENV ADBLOCK true\nENV DISABLE_OPENCOLLECTIVE true\nENV PUPPETEER_SKIP_CHROMIUM_DOWNLOAD true\nRUN npm ci\nCOPY ./vault /code/vault\nCOPY ./banner.txt /code/banner.txt\nCOPY ./locales /code/vault/locales\nWORKDIR /code/vault\nRUN cp -a /code/deps/node_modules /code/vault/\nRUN npm run --silent extract-strings > vault.po\n\nFROM node:16-alpine as packages\nRUN apk add --no-cache git\nRUN apk add --no-cache --virtual .gyp python3 make g++\nRUN npm i -g npm@6 && npm cache clean --force;\n\nCOPY ./packages/package.json ./packages/package-lock.json /code/deps/\nWORKDIR /code/deps\nENV ADBLOCK true\nENV DISABLE_OPENCOLLECTIVE true\nENV PUPPETEER_SKIP_CHROMIUM_DOWNLOAD true\nRUN npm ci\nCOPY ./packages /code/packages\nCOPY ./banner.txt /code/banner.txt\nCOPY ./locales /code/packages/locales\nWORKDIR /code/packages\nRUN cp -a /code/deps/node_modules /code/packages/\nRUN npm run --silent extract-strings > packages.po\n\nFROM golang:1.18\n\nRUN apt-get update \\\n  && apt-get install --no-install-recommends -y gettext \\\n  && rm -rf /var/lib/apt/lists/*\n\nWORKDIR /code/server\nCOPY ./server /code/server\nRUN ./extract-strings.sh > /root/server.po\n\nWORKDIR /root\nCOPY ./merge_messages.sh /root/merge_messages.sh\nCOPY ./locales /root/locales\nCOPY --from=script /code/script/script.po /root/script.po\nCOPY --from=vault /code/vault/vault.po /root/vault.po\nCOPY --from=auditorium /code/auditorium/auditorium.po /root/auditorium.po\nCOPY --from=packages /code/packages/packages.po /root/packages.po\n\nRUN ./merge_messages.sh\n"
}