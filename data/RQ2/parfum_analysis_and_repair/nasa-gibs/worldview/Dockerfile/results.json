{
  "startTime": 1674216717889,
  "endTime": 1674216719211,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 76
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 47,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 3,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 6
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM centos:7\n\nRUN yum install -y epel-release && \\\n    yum install -y \\\n    \"@Development Tools\" \\\n    cairo-devel \\\n    firefox \\\n    giflib-devel \\\n    httpd \\\n    libjpeg-turbo-devel \\\n    java-1.8.0-openjdk \\\n    git \\\n    stow \\\n    which \\\n    xorg-x11-server-Xvfb \\\n    wget \\\n    libffi-devel \\\n    openssl-devel \\\n    xz && rm -rf /var/cache/yum\nRUN cd /usr/src && \\\n    wget https://www.python.org/ftp/python/3.9.4/Python-3.9.4.tgz  && \\\n    tar xzf Python-3.9.4.tgz && \\\n    rm Python-3.9.4.tgz && \\\n    cd Python-3.9.4 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-optimizations && \\\n    make altinstall && \\\n    ln -sf /usr/local/bin/python3.9 /usr/local/bin/python3 && \\\n    python3 -V && \\\n    curl -f -O https://bootstrap.pypa.io/get-pip.py && \\\n    python3 get-pip.py && \\\n    python3 -m ensurepip && \\\n    pip install --no-cache-dir --upgrade pip && \\\n    pip --version\nRUN mkdir -p /usr/local/nvm\nENV NVM_DIR=/usr/local/nvm\nENV NODE_VERSION=16.15.1\nRUN curl -f -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash && \\\n    . \"$NVM_DIR/nvm.sh\" && \\\n    nvm install v${NODE_VERSION} && \\\n    nvm use v${NODE_VERSION} && \\\n    nvm alias default v${NODE_VERSION}\n\nENV PATH=\"${NVM_DIR}/versions/node/v${NODE_VERSION}/bin/:${PATH}\"\n\nWORKDIR /build\n# Only what is needed to run the development server and run the Selenium tests\nRUN mkdir -p /build/node_modules && \\\n    npm install \\\n    chromedriver \\\n    express \\\n    geckodriver \\\n    selenium-server-standalone-jar \\\n    nightwatch && npm cache clean --force;\n\nVOLUME /build/node_modules\nVOLUME /build/.python\n\nEXPOSE 80\nCMD  tail -f /dev/null\n\n\n"
}