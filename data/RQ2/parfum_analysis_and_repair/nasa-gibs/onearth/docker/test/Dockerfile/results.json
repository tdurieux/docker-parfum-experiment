{
  "startTime": 1674252134129,
  "endTime": 1674252135877,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 80
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 96,
        "lineEnd": 96,
        "columnStart": 4,
        "columnEnd": 67
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 120,
        "lineEnd": 120,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 83
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 94
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 151
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 16,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 166
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 89,
        "lineEnd": 89,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 97,
        "lineEnd": 97,
        "columnStart": 4,
        "columnEnd": 33
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# This Dockerfile must be run from source root\nFROM nasagibs/onearth-deps:2.6.1\n\nARG GDAL_VERSION=2.4.4\nARG GDAL_RELEASE=3\n\n# Install mrfgen and OnEarth utils dependencies\nRUN yum install -y proj-4.8.0 proj-devel-4.8.0 && rm -rf /var/cache/yum\nRUN yum install -y python-backports-1.0 python-backports-ssl_match_hostname-3.5.0.1 && rm -rf /var/cache/yum\nRUN yum install -y sqlite-3.7.17 turbojpeg-1.2.90 turbojpeg-devel-1.2.90 agg-2.5 agg-devel-2.5 && rm -rf /var/cache/yum\nRUN pip3.6 install apacheconfig==0.2.8 numpy==1.16.6 matplotlib==2.2.5 parse_apache_configs==0.0.2 wheel==0.37.1\n\n# Install wms dependencies\nRUN yum install -y fribidi-devel-1.0.2 cairo-devel-1.15.12 cmake-2.8.12.2 geos-devel-3.4.2 harfbuzz-devel-1.7.5 fcgi-devel-2.4.0 protobuf-c-devel-1.0.2 && rm -rf /var/cache/yum\n\n# Install GDAL\nRUN yum install -y \"https://github.com/nasa-gibs/mrf/releases/download/v${GDAL_VERSION}-${GDAL_RELEASE}/gibs-gdal-${GDAL_VERSION}-${GDAL_RELEASE}.el7.x86_64.rpm\" \\\n                   \"https://github.com/nasa-gibs/mrf/releases/download/v${GDAL_VERSION}-${GDAL_RELEASE}/gibs-gdal-devel-${GDAL_VERSION}-${GDAL_RELEASE}.el7.x86_64.rpm\" \\\n                   \"https://github.com/nasa-gibs/mrf/releases/download/v${GDAL_VERSION}-${GDAL_RELEASE}/gibs-gdal-apps-${GDAL_VERSION}-${GDAL_RELEASE}.el7.x86_64.rpm\" && rm -rf /var/cache/yum\nRUN pip3.6 install --global-option=build_ext --global-option=\"-I/usr/include/gdal\" GDAL==`gdal-config --version`\n\n# Install vectorgen dependencies\nRUN yum install -y libxslt-devel-1.1.28 chrpath-0.16 && \\\n\tyum clean all && rm -rf /var/cache/yum\nWORKDIR /tmp\nRUN wget https://download.osgeo.org/libspatialindex/spatialindex-src-1.8.5.tar.gz\nRUN tar xzf spatialindex-src-1.8.5.tar.gz && rm spatialindex-src-1.8.5.tar.gz\nWORKDIR /tmp/spatialindex-src-1.8.5\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --libdir=/usr/lib64\nRUN make && make install\nRUN ldconfig\nRUN pip3.6 install protobuf==3.19.4 Fiona==1.8.13 Shapely==1.8.2 Rtree==0.9.7 mapbox-vector-tile==1.2.1\n\nWORKDIR /home/oe2\nCOPY ./ /home/oe2/onearth/\n\n# Install Apache modules\nWORKDIR /home/oe2/onearth/src/modules/mod_receive/src/\nRUN cp /home/oe2/onearth/ci/Makefile.lcl .\nRUN make && make install\n\nWORKDIR /home/oe2/onearth/src/modules/AHTSE/\nRUN bash bootstrap.bash\n\nWORKDIR /home/oe2/onearth/src/modules/mod_mrf/src/\nRUN cp /home/oe2/onearth/ci/Makefile.lcl .\nRUN make && make install\n\nWORKDIR /home/oe2/onearth/src/modules/mod_retile/src/\nRUN cp /home/oe2/onearth/ci/Makefile.lcl .\nRUN make && make install\n\nWORKDIR /home/oe2/onearth/src/modules/mod_twms/src/\nRUN cp /home/oe2/onearth/ci/Makefile.lcl .\nRUN make && make install\n\nWORKDIR /home/oe2/onearth/src/modules/mod_ahtse_lua/src/\nRUN cp /home/oe2/onearth/ci/Makefile.lcl .\nRUN make && make install\n\nWORKDIR /home/oe2/onearth/src/modules/mod_wmts_wrapper\nRUN cp /home/oe2/onearth/ci/Makefile.lcl .\nRUN make && make install\n\nWORKDIR /home/oe2/onearth/src/modules/mod_sfim/src/\nRUN cp /home/oe2/onearth/ci/Makefile.lcl .\nRUN make && make install\n\n# Some environments don't like git:// links, so we need to workaround that with certain lua dependencies\nWORKDIR /tmp\nRUN git clone https://github.com/tiye/json-lua.git\nWORKDIR /tmp/json-lua/\nRUN sed -i 's/git:/https:/' json-lua-0.1-4.rockspec\nRUN luarocks make json-lua-0.1-4.rockspec\n\n# Install Lua module for time snapping\nWORKDIR /home/oe2/onearth/src/modules/time_service/redis-lua\nRUN luarocks make rockspec/redis-lua-2.0.5-0.rockspec\nWORKDIR /home/oe2/onearth/src/modules/time_service\nRUN luarocks make onearth_time_service-0.1-2.rockspec\n\n# Install wms_time_service module\nRUN mkdir -p /etc/onearth/config/endpoint\nWORKDIR /home/oe2/onearth/src/modules/wms_time_service\nRUN luarocks make onearth_wms_time-0.1-1.rockspec\n\n# FastCGI module\nWORKDIR /tmp\nRUN wget --no-check-certificate https://www.apache.org/dist/httpd/mod_fcgid/mod_fcgid-2.3.9.tar.gz\nRUN tar xf mod_fcgid-2.3.9.tar.gz && rm mod_fcgid-2.3.9.tar.gz\nWORKDIR /tmp/mod_fcgid-2.3.9\nRUN APXS=/usr/bin/apxs ./configure.apxs\nRUN make && make install\n\n# Mapserver\nWORKDIR /tmp\nRUN wget https://download.osgeo.org/mapserver/mapserver-7.4.3.tar.gz\nRUN tar xf mapserver-7.4.3.tar.gz && rm mapserver-7.4.3.tar.gz\nWORKDIR /tmp/mapserver-7.4.3\nRUN mkdir build\nWORKDIR /tmp/mapserver-7.4.3/build\nRUN cmake -DCMAKE_INSTALL_PREFIX=/usr/local -DWITH_POSTGIS=0 -DWITH_GIF=0 -DWITH_KML=1 -DWITH_PROTOBUFC=0 ../\nRUN make && make install\nRUN echo '/usr/local/lib' > /etc/ld.so.conf.d/mapserver.conf\nRUN ldconfig -v\nRUN rm -rf /tmp/*\n\n# Install GC Service configs\nWORKDIR /home/oe2/onearth/src/modules/gc_service\nRUN luarocks make onearth_gc_gts-0.1-1.rockspec\n\n# Install layer configuration tools\nRUN cp /home/oe2/onearth/src/modules/mod_wmts_wrapper/configure_tool/oe2_wmts_configure.py /usr/bin\nRUN cp /home/oe2/onearth/src/modules/mod_wmts_wrapper/configure_tool/oe2_reproject_configure.py /usr/bin/\n\n# Build RGBApng2Palpng\nWORKDIR /home/oe2/onearth/src/mrfgen\nRUN gcc -O3 RGBApng2Palpng.c -o RGBApng2Palpng -lpng\n\n# Pillow at least 8.1.0\nRUN pip3 install --no-cache-dir --user Pillow==8.1.0\n\nRUN python3 -m pip install --user --upgrade cython\nRUN python3.6 setup.py build_ext --inplace\n\n# Install OnEarth utilties, etc.\nWORKDIR /home/oe2/onearth/\nRUN install -m 755 src/empty_tile/oe_generate_empty_tile.py -D /usr/bin/oe_generate_empty_tile.py\nRUN install -m 755 src/generate_legend/oe_generate_legend.py -D /usr/bin/oe_generate_legend.py\nRUN install -m 755 src/mrfgen/mrfgen.py -D /usr/bin/mrfgen\nRUN install -m 755 src/mrfgen/RgbPngToPalPng.py -D /usr/bin/RgbPngToPalPng.py\nRUN install -m 755 src/mrfgen/RgbToPalLib.pyx -D /usr/bin/RgbToPalLib.pyx\nRUN install -m 755 src/mrfgen/setup.py -D /usr/bin/setup.py\nRUN install -m 755 src/mrfgen/RgbToPalLib.cpython-36m-x86_64-linux-gnu.so -D /usr/bin/RgbToPalLib.cpython-36m-x86_64-linux-gnu.so\nRUN install -m 755 src/mrfgen/colormap2vrt.py -D /usr/bin/colormap2vrt.py\nRUN install -m 755 src/mrfgen/overtiffpacker.py -D /usr/bin/overtiffpacker.py\nRUN install -m 755 src/mrfgen/RGBApng2Palpng -D /usr/bin/RGBApng2Palpng\nRUN install -m 755 src/mrfgen/oe_validate_palette.py -D /usr/bin/oe_validate_palette.py\nRUN install -m 755 src/scripts/oe_utils.py -D /usr/bin/oe_utils.py\nRUN install -m 755 src/scripts/twmsbox2wmts.py -D /usr/bin/twmsbox2wmts.py\nRUN install -m 755 src/scripts/wmts2twmsbox.py -D /usr/bin/wmts2twmsbox.py\nRUN install -m 755 src/colormaps/bin/colorMaptoHTML_v1.0.py -D /usr/bin/colorMaptoHTML_v1.0.py\nRUN install -m 755 src/colormaps/bin/colorMaptoHTML_v1.3.py -D /usr/bin/colorMaptoHTML_v1.3.py\nRUN install -m 755 src/colormaps/bin/colorMaptoSLD.py -D /usr/bin/colorMaptoSLD.py\nRUN install -m 755 src/colormaps/bin/SLDtoColorMap.py -D /usr/bin/SLDtoColorMap.py\nRUN install -m 755 src/vectorgen/oe_vectorgen.py -D /usr/bin/oe_vectorgen\nRUN install -m 755 src/vectorgen/oe_create_mvt_mrf.py -D /usr/bin/oe_create_mvt_mrf.py\nRUN install -m 755 src/scripts/oe_sync_s3_idx.py -D /usr/bin/oe_sync_s3_idx.py\nRUN install -m 755 src/scripts/oe_sync_s3_configs.py -D /usr/bin/oe_sync_s3_configs.py\nRUN install -m 755 docker/wms_service/oe2_wms_configure.py -D /usr/bin/oe2_wms_configure.py\nRUN install -m 755 src/modules/time_service/utils/oe_periods_configure.py -D /usr/bin/oe_periods_configure.py\n\n# Copy WMS setups\nCOPY docker/wms_service/oe2_wms.conf /etc/httpd/conf.d/\nRUN cp /usr/local/bin/mapserv /var/www/cgi-bin/mapserv.fcgi\nRUN mkdir -p /etc/onearth/config/mapserver\nCOPY docker/wms_service/fonts.txt /etc/onearth/config/mapserver/\nCOPY docker/wms_service/symbols.sym /etc/onearth/config/mapserver/\nCOPY docker/wms_service/fonts/* /usr/share/fonts/\nRUN mkdir /var/log/mapserver && touch /var/log/mapserver/error.log && chmod 777 /var/log/mapserver/error.log\nRUN mkdir /var/log/onearth && touch /var/log/onearth/config.log && chmod 777 /var/log/onearth/config.log\nRUN mkdir /usr/share/proj/ && cp /usr/local/lib64/python3.6/site-packages/fiona/proj_data/epsg /usr/share/proj/\n\n# Set Apache to Debug mode for performance logging\nRUN perl -pi -e \"s/LogLevel warn/LogLevel debug/g\" /etc/httpd/conf/httpd.conf\nRUN perl -pi -e 's/LogFormat \"%h %l %u %t \\\"%r\\\" %>s %b/LogFormat \"%h %l %u %t \\\"%r\\\" %>s %b %D /g' /etc/httpd/conf/httpd.conf\n\n# Set Apache configuration for optimized threading\nRUN cp /home/oe2/onearth/ci/00-mpm.conf /etc/httpd/conf.modules.d/\nRUN cp /home/oe2/onearth/ci/10-worker.conf /etc/httpd/conf.modules.d/\n\nWORKDIR /home/oe2/onearth/src/test\nRUN pip3.6 install --upgrade pip\nRUN pip3.6 install -r requirements.txt\n\nENV ONEARTH_VERSION=2.6.1\n\nWORKDIR /home/oe2/onearth/ci\nCMD sh start_ci2.sh\n"
}