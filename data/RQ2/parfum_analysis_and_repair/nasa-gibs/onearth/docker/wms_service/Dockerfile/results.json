{
  "startTime": 1674249627443,
  "endTime": 1674249628276,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 67
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 184
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 1,
        "columnEnd": 211
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 33
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG ONEARTH_VERSION\nFROM nasagibs/onearth-deps:$ONEARTH_VERSION\n\nRUN yum install -y proj-epsg-4.8.0 proj-devel-4.8.0 fribidi-devel-1.0.2 cairo-devel-1.15.12 cmake-2.8.12.2 geos-devel-3.4.2 harfbuzz-devel-1.7.5 fcgi-devel-2.4.0 protobuf-c-devel-1.0.2 && \\\n\tyum install -y \"https://github.com/nasa-gibs/mrf/releases/download/v2.4.4-2/gibs-gdal-2.4.4-2.el7.x86_64.rpm\" \"https://github.com/nasa-gibs/mrf/releases/download/v2.4.4-2/gibs-gdal-devel-2.4.4-2.el7.x86_64.rpm\" && \\\n\tyum clean all && rm -rf /var/cache/yum\n\nCOPY ./ /home/oe2/onearth/\n\n# Install Apache modules\nWORKDIR /home/oe2/onearth/src/modules/mod_ahtse_lua/src/\nRUN cp /home/oe2/onearth/docker/Makefile.lcl .\nRUN make && make install\n\n# Some environments don't like git:// links, so we need to workaround that with certain lua dependencies\nWORKDIR /tmp\nRUN git clone https://github.com/tiye/json-lua.git\nWORKDIR /tmp/json-lua/\nRUN sed -i 's/git:/https:/' json-lua-0.1-4.rockspec\nRUN luarocks make json-lua-0.1-4.rockspec\n\n# Install wms_time_service module\nRUN mkdir -p /etc/onearth/config/endpoint\nWORKDIR /home/oe2/onearth/src/modules/wms_time_service\nRUN luarocks make onearth_wms_time-0.1-1.rockspec\n\n# FastCGI module\nWORKDIR /tmp\nRUN wget --no-check-certificate https://www.apache.org/dist/httpd/mod_fcgid/mod_fcgid-2.3.9.tar.gz\nRUN tar xf mod_fcgid-2.3.9.tar.gz && rm mod_fcgid-2.3.9.tar.gz\nWORKDIR /tmp/mod_fcgid-2.3.9\nRUN APXS=/usr/bin/apxs ./configure.apxs\nRUN make && make install\n\n# Mapserver\nWORKDIR /tmp\nRUN wget https://download.osgeo.org/mapserver/mapserver-7.4.4.tar.gz\nRUN tar xf mapserver-7.4.4.tar.gz && rm mapserver-7.4.4.tar.gz\nWORKDIR /tmp/mapserver-7.4.4\n# Remove patch after upgrading to mapserver 8. Fix for seg faults https://github.com/MapServer/MapServer/pull/6385\nCOPY docker/wms_service/mapserv.patch /tmp/mapserver-7.4.4/\nRUN patch mapserv.c mapserv.patch\nRUN mkdir build\nWORKDIR /tmp/mapserver-7.4.4/build\nRUN cmake -DCMAKE_INSTALL_PREFIX=/usr/local -DWITH_POSTGIS=0 -DWITH_GIF=0 -DWITH_KML=1 -DWITH_PROTOBUFC=0 ../\nRUN make && make install\nRUN echo '/usr/local/lib' > /etc/ld.so.conf.d/mapserver.conf\nRUN ldconfig -v\nRUN rm -rf /tmp/*\n\n# Install layer configuration tools\nRUN cp /home/oe2/onearth/docker/wms_service/oe2_wms_configure.py /usr/bin/\nRUN cp /home/oe2/onearth/docker/wms_service/template.map /usr/bin/\nRUN cp /home/oe2/onearth/src/scripts/oe_sync_s3_configs.py /usr/bin/\n\n# Set Apache configuration for optimized threading\nWORKDIR /home/oe2/onearth/docker\nRUN cp 00-mpm.conf /etc/httpd/conf.modules.d/ && \\\n    cp 10-worker.conf /etc/httpd/conf.modules.d/ && \\\n    cp cors.conf /etc/httpd/conf.d/\n\n# Copy setups\nCOPY docker/wms_service/oe2_wms.conf /etc/httpd/conf.d/\nCOPY docker/wms_service/oe2_status.conf /etc/httpd/conf.d/\nCOPY docker/cors.conf /etc/httpd/conf.d/\nRUN cp /usr/local/bin/mapserv /var/www/cgi-bin/mapserv.fcgi\nRUN mkdir -p /etc/onearth/config/mapserver\nCOPY docker/wms_service/fonts.txt /etc/onearth/config/mapserver/\nCOPY docker/wms_service/symbols.sym /etc/onearth/config/mapserver/\nCOPY docker/wms_service/fonts/* /usr/share/fonts/\nRUN mkdir /var/log/mapserver && touch /var/log/mapserver/error.log && chmod 777 /var/log/mapserver/error.log\nRUN mkdir /var/log/onearth && touch /var/log/onearth/config.log && chmod 777 /var/log/onearth/config.log\n\nCOPY docker/wms_service/logrotate.daily.mapserver /etc/logrotate.d/mapserver\nCOPY docker/logrotate.daily.onearth /etc/logrotate.d/onearth\n\n# Setup cron for logrotate\nRUN mv /etc/cron.daily/logrotate /etc/cron.hourly/logrotate && \\\n    chmod 755 /etc/cron.hourly/logrotate && \\\n    cp /home/oe2/onearth/docker/logrotate.hourly.httpd /etc/logrotate.d/httpd\n\nENV SUPERCRONIC_URL=https://github.com/aptible/supercronic/releases/download/v0.1.12/supercronic-linux-amd64 \\\n    SUPERCRONIC=supercronic-linux-amd64 \\\n    SUPERCRONIC_SHA1SUM=048b95b48b708983effb2e5c935a1ef8483d9e3e\n\nRUN curl -fsSLO \"$SUPERCRONIC_URL\" \\\n && echo \"${SUPERCRONIC_SHA1SUM}  ${SUPERCRONIC}\" | sha1sum -c - \\\n && chmod +x \"$SUPERCRONIC\" \\\n && mv \"$SUPERCRONIC\" \"/usr/local/bin/${SUPERCRONIC}\" \\\n && ln -s \"/usr/local/bin/${SUPERCRONIC}\" /usr/local/bin/supercronic\n\nRUN mkdir /onearth\n\n# Add non-root user\nRUN groupadd www-data && useradd -g www-data www-data\nRUN chmod 755 -R /etc/pki && chmod 1777 /tmp && chown -hR www-data:www-data /etc/httpd/ && chown -hR www-data:www-data /run/httpd/ && \\\n    chown -hR www-data:www-data /var/www/ && chown -hR www-data:www-data /var/log && \\\n\tchown -hR www-data:www-data /home/oe2 && chown -hR www-data:www-data /onearth && \\\n\tchown -hR www-data:www-data /etc/onearth && \\\n\tchown -hR www-data:www-data /etc/crontab && chown -hR www-data:www-data /var/lib/logrotate\n\n#setcap to bind to privileged ports as non-root\nRUN setcap 'cap_net_bind_service=+ep' /usr/sbin/httpd && getcap /usr/sbin/httpd\n\n# Remove unneeded kernel headers\nRUN yum remove -y kernel-headers kernel-debug-devel\n\n# Change user\nUSER www-data\n\nWORKDIR /home/oe2/onearth/docker/wms_service\nCMD sh start_wms_service.sh $ENDPOINT_REFRESH $GC_HEALTHCHECK $S3_CONFIGS\n\n#interval:30s, timeout:30s, start-period:60s, retries:3\nHEALTHCHECK --start-period=60s \\\n  CMD curl --fail \"http://localhost/wms/oe-status_reproject/wms.cgi?SERVICE=WMS&VERSION=1.3.0&REQUEST=GetMap&FORMAT=image/jpeg&TRANSPARENT=true&LAYERS=Raster_Status,Vector_Status&CRS=EPSG:3857&STYLES=&WIDTH=256&HEIGHT=256&BBOX=-20037508.34,-20037508.34,20037508.34,20037508.34\" || exit 1"
}