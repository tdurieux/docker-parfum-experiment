{
  "startTime": 1674252845688,
  "endTime": 1674252846642,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 60
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 73,
        "lineEnd": 73,
        "columnStart": 4,
        "columnEnd": 83
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 60
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 73,
        "lineEnd": 73,
        "columnStart": 4,
        "columnEnd": 83
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 110
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 74
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 55
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 68
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 4,
        "columnEnd": 134
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 79,
        "lineEnd": 79,
        "columnStart": 4,
        "columnEnd": 115
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 82,
        "lineEnd": 82,
        "columnStart": 34,
        "columnEnd": 62
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 84,
        "lineEnd": 84,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 85,
        "lineEnd": 85,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 66,
        "lineEnd": 67,
        "columnStart": 2,
        "columnEnd": 22
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 1,
        "columnEnd": 60
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 314
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# This Dockerfile must be run from source root\n\nFROM centos:7\n\n# Copy mrfgen/vectorgen\nRUN mkdir -p /var/task/bin\nCOPY ./src/mrfgen/*.py /var/task/bin/\nCOPY ./src/mrfgen/RGBApng2Palpng.c /var/task/bin/\nCOPY ./src/vectorgen/*.py /var/task/bin/\nCOPY ./src/scripts/*.py /var/task/bin/\nCOPY ./src/empty_tile/*.py /var/task/bin/\nCOPY ./src/generate_legend/*.py /var/task/bin/\nCOPY ./src/colormaps/bin/*.py /var/task/bin/\n\nWORKDIR /tmp\nRUN touch /var/lib/rpm/* && \\\n\tyum install -y epel-release python3-devel make libpng-devel && rm -rf /var/cache/yum\n\n# Install GDAL\nRUN yum install -y turbojpeg-1.2.90 turbojpeg-devel-1.2.90 && rm -rf /var/cache/yum\nRUN yum groupinstall -y \"Development Tools\"\nRUN yum install -y \"https://github.com/nasa-gibs/mrf/releases/download/v2.4.4-3/gibs-gdal-2.4.4-3.el7.x86_64.rpm\" \"https://github.com/nasa-gibs/mrf/releases/download/v2.4.4-3/gibs-gdal-devel-2.4.4-3.el7.x86_64.rpm\" \"https://github.com/nasa-gibs/mrf/releases/download/v2.4.4-3/gibs-gdal-apps-2.4.4-3.el7.x86_64.rpm\" && \\\n\tyum clean all && rm -rf /var/cache/yum\nRUN pip3 install --no-cache-dir --global-option=build_ext --global-option=\"-I/usr/include/gdal\" GDAL==`gdal-config --version` --global-option=\"-I/usr/include/gdal\" GDAL==`gdal-config --version`\n\n# Copy binaries and libs\nRUN cp /usr/bin/*mrf* /var/task/bin\nRUN cp /usr/bin/epsg_tr.py /var/task/bin\nRUN cp /usr/bin/esri2wkt.py /var/task/bin\nRUN cp /usr/bin/gcps2vec.py /var/task/bin\nRUN cp /usr/bin/gcps2wld.py /var/task/bin\nRUN cp /usr/bin/gdal* /var/task/bin\nRUN cp /usr/bin/gnmanalyse /var/task/bin\nRUN cp /usr/bin/gnmmanage /var/task/bin\nRUN cp /usr/bin/mkgraticule.py /var/task/bin\nRUN cp /usr/bin/nearblack /var/task/bin\nRUN cp /usr/bin/ogr* /var/task/bin\nRUN cp /usr/bin/pct2rgb.py /var/task/bin\nRUN cp /usr/bin/rgb2pct.py /var/task/bin\nRUN cp /usr/bin/testepsg /var/task/bin\nRUN mkdir /var/task/lib64/\nRUN cp /usr/lib64/libgdal.so.20 /var/task/lib64/\nRUN cp /usr/lib64/libgeos-3.4.2.so /var/task/lib64/\nRUN cp /usr/lib64/libgeos_c.so.1 /var/task/lib64/\nRUN mkdir /var/task/lib64/pkgconfig\nRUN cp /usr/lib64/pkgconfig/gdal.pc /var/task/lib64/pkgconfig\nRUN mkdir -p /var/task/share/gdal/\nRUN cp -R /usr/share/gdal/* /var/task/share/gdal/\n\nENV GDAL_DATA=/var/task/gdal\n#ENV PYTHONPATH=${PYTHONPATH}:/var/task/lib64/python2.7/site-packages:/var/task/lib/python2.7/site-packages\nENV LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/var/task/lib64:/var/task/lib\nENV PATH=$PATH:/var/task/bin\n\n# Install mrfgen and OnEarth utils dependencies\nRUN pip3 install --no-cache-dir --prefix=/var/task --ignore-installed apacheconfig==0.2.8\nRUN pip3 install --no-cache-dir --ignore-installed apacheconfig==0.2.8\nRUN pip3 install --no-cache-dir --prefix=/var/task --ignore-installed numpy==1.16.6\nRUN pip3 install --no-cache-dir --ignore-installed numpy==1.16.6\n\n# Fetch PROJ.4\nRUN curl -f -L https://download.osgeo.org/proj/proj-4.9.3.tar.gz | tar zxf - -C /tmp\n\n# Build and install PROJ.4\nWORKDIR /tmp/proj-4.9.3\nRUN \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n    --prefix=/var/task && \\\n  make -j $(nproc) && \\\n  make install\n\n# Install vectorgen dependencies\nWORKDIR /tmp\nRUN curl -f -L https://download.osgeo.org/libspatialindex/spatialindex-src-1.8.5.tar.gz | tar xzf - -C /tmp\nWORKDIR /tmp/spatialindex-src-1.8.5\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --libdir=/usr/lib64\nRUN make && make install\nRUN ldconfig\nRUN pip3 install --no-cache-dir --prefix=/var/task --ignore-installed Fiona==1.8.13 Shapely==1.7.0 Rtree==0.9.4 mapbox_vector_tile==1.2.0 lxml==4.6.3\nRUN pip3 install --no-cache-dir --ignore-installed Fiona==1.8.13 Shapely==1.7.0 Rtree==0.9.4 mapbox_vector_tile==1.2.0 lxml==4.6.3\n# TODO: Sort out weirdness with some dependencies expecting specific lib locations\nRUN cp /usr/lib64/libspatialindex*so* /var/task/lib64/\nRUN pip3 uninstall -y protobuf && pip3 install --no-cache-dir protobuf==3.7.0\n\nRUN pip3 install --no-cache-dir matplotlib==2.2.5\nRUN pip3 install --no-cache-dir pypng==0.0.20\n\nRUN mkdir -p /var/task/lib64/python2.7/site-packages\nRUN cp -R /usr/lib64/python2.7/site-packages/* /var/task/lib64/python2.7/site-packages\n\n# Build RGBApng2Palpng\nWORKDIR /var/task/bin\nRUN gcc -O3 RGBApng2Palpng.c -o RGBApng2Palpng -lpng\nRUN rm RGBApng2Palpng.c\n\n# Clean up\nWORKDIR /var/task\nRUN \\\n  strip lib64/libgdal.so.20* && \\\n  strip lib64/libgeos* && \\\n  strip lib64/libspatialindex*so* && \\\n  strip lib/libproj.so.12.*\nRUN yum remove -y gibs-gdal\nRUN rm -rf /tmp/*\n\n# Set the locale\nRUN localedef -i en_US -f UTF-8 en_US.UTF-8\nENV LANG=en_US.UTF-8\nENV LANGUAGE=en_US:en\nENV LC_ALL=en_US.UTF-8\n\n# Add non-root user\nRUN groupadd dockeruser && useradd -g dockeruser dockeruser\nRUN chown -hR dockeruser:dockeruser /var/task && chown -hR dockeruser:dockeruser /var/log && chmod 1777 /tmp\n\n# Change user\nUSER dockeruser\n\nARG ONEARTH_VERSION\nENV ONEARTH_VERSION=$ONEARTH_VERSION\n"
}