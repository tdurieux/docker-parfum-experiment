diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/nasa-gibs/onearth/docker/tools/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/nasa-gibs/onearth/docker/tools/Dockerfile/repaired.Dockerfile
index a1b0b82..14f17fe 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/nasa-gibs/onearth/docker/tools/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/nasa-gibs/onearth/docker/tools/Dockerfile/repaired.Dockerfile
@@ -14,14 +14,14 @@ COPY ./src/colormaps/bin/*.py /var/task/bin/
 
 WORKDIR /tmp
 RUN touch /var/lib/rpm/* && \
-	yum install -y epel-release python3-devel make libpng-devel
+	yum install -y epel-release python3-devel make libpng-devel && rm -rf /var/cache/yum
 
 # Install GDAL
-RUN yum install -y turbojpeg-1.2.90 turbojpeg-devel-1.2.90
+RUN yum install -y turbojpeg-1.2.90 turbojpeg-devel-1.2.90 && rm -rf /var/cache/yum
 RUN yum groupinstall -y "Development Tools"
 RUN yum install -y "https://github.com/nasa-gibs/mrf/releases/download/v2.4.4-3/gibs-gdal-2.4.4-3.el7.x86_64.rpm" "https://github.com/nasa-gibs/mrf/releases/download/v2.4.4-3/gibs-gdal-devel-2.4.4-3.el7.x86_64.rpm" "https://github.com/nasa-gibs/mrf/releases/download/v2.4.4-3/gibs-gdal-apps-2.4.4-3.el7.x86_64.rpm" && \
-	yum clean all
-RUN pip3 install --global-option=build_ext --global-option="-I/usr/include/gdal" GDAL==`gdal-config --version`
+	yum clean all && rm -rf /var/cache/yum
+RUN pip3 install --no-cache-dir --global-option=build_ext --global-option="-I/usr/include/gdal" GDAL==`gdal-config --version` --global-option="-I/usr/include/gdal" GDAL==`gdal-config --version`
 
 # Copy binaries and libs
 RUN cp /usr/bin/*mrf* /var/task/bin
@@ -53,37 +53,37 @@ ENV LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/var/task/lib64:/var/task/lib
 ENV PATH=$PATH:/var/task/bin
 
 # Install mrfgen and OnEarth utils dependencies
-RUN pip3 install --prefix=/var/task --ignore-installed apacheconfig==0.2.8
-RUN pip3 install --ignore-installed apacheconfig==0.2.8
-RUN pip3 install --prefix=/var/task --ignore-installed numpy==1.16.6
-RUN pip3 install --ignore-installed numpy==1.16.6
+RUN pip3 install --no-cache-dir --prefix=/var/task --ignore-installed apacheconfig==0.2.8
+RUN pip3 install --no-cache-dir --ignore-installed apacheconfig==0.2.8
+RUN pip3 install --no-cache-dir --prefix=/var/task --ignore-installed numpy==1.16.6
+RUN pip3 install --no-cache-dir --ignore-installed numpy==1.16.6
 
 # Fetch PROJ.4
-RUN curl -L http://download.osgeo.org/proj/proj-4.9.3.tar.gz | tar zxf - -C /tmp
+RUN curl -f -L https://download.osgeo.org/proj/proj-4.9.3.tar.gz | tar zxf - -C /tmp
 
 # Build and install PROJ.4
 WORKDIR /tmp/proj-4.9.3
 RUN \
-  ./configure \
+  ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
     --prefix=/var/task && \
   make -j $(nproc) && \
   make install
 
 # Install vectorgen dependencies
 WORKDIR /tmp
-RUN curl -L http://download.osgeo.org/libspatialindex/spatialindex-src-1.8.5.tar.gz | tar xzf - -C /tmp
+RUN curl -f -L https://download.osgeo.org/libspatialindex/spatialindex-src-1.8.5.tar.gz | tar xzf - -C /tmp
 WORKDIR /tmp/spatialindex-src-1.8.5
-RUN ./configure --libdir=/usr/lib64
+RUN ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --libdir=/usr/lib64
 RUN make && make install
 RUN ldconfig
-RUN pip3 install --prefix=/var/task --ignore-installed Fiona==1.8.13 Shapely==1.7.0 Rtree==0.9.4 mapbox_vector_tile==1.2.0 lxml==4.6.3
-RUN pip3 install --ignore-installed Fiona==1.8.13 Shapely==1.7.0 Rtree==0.9.4 mapbox_vector_tile==1.2.0 lxml==4.6.3
+RUN pip3 install --no-cache-dir --prefix=/var/task --ignore-installed Fiona==1.8.13 Shapely==1.7.0 Rtree==0.9.4 mapbox_vector_tile==1.2.0 lxml==4.6.3
+RUN pip3 install --no-cache-dir --ignore-installed Fiona==1.8.13 Shapely==1.7.0 Rtree==0.9.4 mapbox_vector_tile==1.2.0 lxml==4.6.3
 # TODO: Sort out weirdness with some dependencies expecting specific lib locations
 RUN cp /usr/lib64/libspatialindex*so* /var/task/lib64/
-RUN pip3 uninstall -y protobuf && pip3 install protobuf==3.7.0
+RUN pip3 uninstall -y protobuf && pip3 install --no-cache-dir protobuf==3.7.0
 
-RUN pip3 install matplotlib==2.2.5
-RUN pip3 install pypng==0.0.20
+RUN pip3 install --no-cache-dir matplotlib==2.2.5
+RUN pip3 install --no-cache-dir pypng==0.0.20
 
 RUN mkdir -p /var/task/lib64/python2.7/site-packages
 RUN cp -R /usr/lib64/python2.7/site-packages/* /var/task/lib64/python2.7/site-packages