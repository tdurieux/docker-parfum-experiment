{
  "startTime": 1674217905651,
  "endTime": 1674217906201,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 5,
        "columnEnd": 32
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 5,
        "columnEnd": 32
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# ================================================================= #\n# ------------ First stage in our multistage Dockerfile ----------- #\n# ================================================================= #\nFROM python:3.6-slim as Base\n\nRUN apt-get update \\\n  && apt-get install --no-install-recommends -y curl git && rm -rf /var/lib/apt/lists/*;\n\nRUN pip install --no-cache-dir pipenv\n\nWORKDIR /home/ml-app-template\n\n# COPY requirements.txt /home/ml-app-template/requirements.txt\n# RUN pip install -r requirements.txt\n\nADD Pipfile.lock /home/ml-app-template/Pipfile.lock\nADD Pipfile /home/ml-app-template/Pipfile\nRUN pipenv install --deploy\n\nCOPY . /home/ml-app-template\n\n# ================================================================= #\n# ------------ Second stage in our multistage Dockerfile ---------- #\n# ================================================================= #\n\nFROM Base as Build\n\nARG CI\nENV CI=$CI\n\nRUN pipenv run /home/ml-app-template/bin/train_model.sh\n\nCMD [\"pipenv run /home/ml-app-template/bin/start_server.sh\"]\n\n# ================================================================= #\n# ------------ Third stage in our multistage Dockerfile ----------- #\n# ================================================================= #\nFROM Build as Dev\n\n# COPY requirements-dev.txt /home/ml-app-template/requirements-dev.txt\n# RUN pip install -r /home/ml-app-template/requirements-dev.txt\nRUN pipenv install --dev\n\n\nRUN git config --global credential.helper 'cache --timeout=36000'\n\nEXPOSE 8080\n\nCMD [\"pipenv run /home/ml-app-template/bin/start_server.sh\"]\n"
}