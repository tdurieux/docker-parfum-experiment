{
  "startTime": 1674254411855,
  "endTime": 1674254413323,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 7,
        "columnEnd": 127
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 7,
        "columnEnd": 185
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 90,
        "lineEnd": 90,
        "columnStart": 4,
        "columnEnd": 96
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 170,
        "lineEnd": 170,
        "columnStart": 4,
        "columnEnd": 84
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 7,
        "columnEnd": 127
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 7,
        "columnEnd": 185
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 7,
        "columnEnd": 25
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 214,
        "lineEnd": 214,
        "columnStart": 4,
        "columnEnd": 69
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 214,
        "lineEnd": 214,
        "columnStart": 4,
        "columnEnd": 69
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 214,
        "lineEnd": 214,
        "columnStart": 4,
        "columnEnd": 69
      }
    }
  ],
  "repairedDockerfile": "FROM debian:stretch\n\nFROM rocker/rstudio:3.6.3\n\nUSER root\n\nARG DEBIAN_FRONTEND=\"noninteractive\"\n\nENV LANG=\"en_US.UTF-8\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    ND_ENTRYPOINT=\"/neurodocker/startup.sh\"\nRUN export ND_ENTRYPOINT=\"/neurodocker/startup.sh\" \\\n    && apt-get update -qq \\\n    && apt-get install -y -q --no-install-recommends \\\n           apt-utils \\\n           bzip2 \\\n           ca-certificates \\\n           curl \\\n           locales \\\n           unzip \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/* \\\n    && sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen \\\n    && dpkg-reconfigure --frontend=noninteractive locales \\\n    && update-locale LANG=\"en_US.UTF-8\" \\\n    && chmod 777 /opt && chmod a+s /opt \\\n    && mkdir -p /neurodocker \\\n    && if [ ! -f \"$ND_ENTRYPOINT\" ]; then \\\n         echo '#!/usr/bin/env bash' >> \"$ND_ENTRYPOINT\" \\\n    &&   echo 'set -e' >> \"$ND_ENTRYPOINT\" \\\n    &&   echo 'export USER=\"${USER:=`whoami`}\"' >> \"$ND_ENTRYPOINT\" \\\n    &&   echo 'if [ -n \"$1\" ]; then \"$@\"; else /usr/bin/env bash; fi' >> \"$ND_ENTRYPOINT\"; \\\n    fi \\\n    && chmod -R 777 /neurodocker && chmod a+s /neurodocker\n\nENV C3DPATH=\"/opt/convert3d-1.0.0\" \\\n    PATH=\"/opt/convert3d-1.0.0/bin:$PATH\"\nRUN echo \"Downloading Convert3D ...\" \\\n    && mkdir -p /opt/convert3d-1.0.0 \\\n    && curl -fsSL --retry 5 https://sourceforge.net/projects/c3d/files/c3d/1.0.0/c3d-1.0.0-Linux-x86_64.tar.gz/download \\\n    | tar -xz -C /opt/convert3d-1.0.0 --strip-components 1\n\nENV PATH=\"/opt/afni-latest:$PATH\" \\\n    AFNI_PLUGINPATH=\"/opt/afni-latest\"\nRUN apt-get update -qq \\\n    && apt-get install -y -q --no-install-recommends \\\n           ed \\\n           gsl-bin \\\n           libglib2.0-0 \\\n           libglu1-mesa-dev \\\n           libglw1-mesa \\\n           libgomp1 \\\n           libjpeg62 \\\n           libxm4 \\\n           netpbm \\\n           tcsh \\\n           xfonts-base \\\n           xvfb \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/* \\\n    && curl -f -sSL --retry 5 -o /tmp/toinstall.deb https://mirrors.kernel.org/debian/pool/main/libx/libxp/libxp6_1.0.2-2_amd64.deb \\\n    && dpkg -i /tmp/toinstall.deb \\\n    && rm /tmp/toinstall.deb \\\n    && curl -f -sSL --retry 5 -o /tmp/toinstall.deb https://snapshot.debian.org/archive/debian-security/20160113T213056Z/pool/updates/main/libp/libpng/libpng12-0_1.2.49-1%2Bdeb7u2_amd64.deb \\\n    && dpkg -i /tmp/toinstall.deb \\\n    && rm /tmp/toinstall.deb \\\n    && apt-get install -y -f \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/* \\\n    && gsl2_path=\"$(find / -name 'libgsl.so.23' || printf '')\" \\\n    && if [ -n \"$gsl2_path\" ]; then \\\n         ln -sfv \"$gsl2_path\" \"$(dirname $gsl2_path)/libgsl.so.0\"; \\\n    fi \\\n    && ldconfig \\\n    && echo \"Downloading AFNI ...\" \\\n    && mkdir -p /opt/afni-latest \\\n    && curl -fsSL --retry 5 https://afni.nimh.nih.gov/pub/dist/tgz/linux_openmp_64.tgz \\\n    | tar -xz -C /opt/afni-latest --strip-components 1\n\n# Installing ANTs latest from source\n# Installing ANTs latest from source\n#ARG ANTS_SHA=e00e8164d7a92f048e5d06e388a15c1ee8e889c4\n#ADD https://cmake.org/files/v3.11/cmake-3.11.4-Linux-x86_64.sh /cmake-3.11.4-Linux-x86_64.sh\n#ENV ANTSPATH=\"/opt/ants-latest/bin\" \\\n    #PATH=\"/opt/ants-latest/bin:$PATH\" \\\n    #LD_LIBRARY_PATH=\"/opt/ants-latest/lib:$LD_LIBRARY_PATH\"\n\nENV ANTSPATH=\"/usr/lib/ants\" \\\n    PATH=\"/usr/lib/ants:$PATH\"\nWORKDIR $ANTSPATH\nRUN curl -f -sSL \"https://dl.dropbox.com/s/gwf51ykkk5bifyj/ants-Linux-centos6_x86_64-v2.3.4.tar.gz\" \\\n    | tar -xzC $ANTSPATH --strip-components 1\n\n\nENV FREESURFER_HOME=\"/opt/freesurfer-6.0.0\" \\\n    PATH=\"/opt/freesurfer-6.0.0/bin:$PATH\"\nRUN apt-get update -qq \\\n    && apt-get install -y -q --no-install-recommends \\\n           bc \\\n           libgomp1 \\\n           libxmu6 \\\n           libxt6 \\\n           perl \\\n           tcsh \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/* \\\n    && echo \"Downloading FreeSurfer ...\" \\\n    && mkdir -p /opt/freesurfer-6.0.0 \\\n    && curl -fsSL --retry 5 ftp://surfer.nmr.mgh.harvard.edu/pub/dist/freesurfer/6.0.0/freesurfer-Linux-centos6_x86_64-stable-pub-v6.0.0.tar.gz \\\n    | tar -xz -C /opt/freesurfer-6.0.0 --strip-components 1 \\\n         --exclude='freesurfer/average/mult-comp-cor' \\\n         --exclude='freesurfer/lib/cuda' \\\n         --exclude='freesurfer/lib/qt' \\\n         --exclude='freesurfer/subjects/V1_average' \\\n         --exclude='freesurfer/subjects/bert' \\\n         --exclude='freesurfer/subjects/cvs_avg35' \\\n         --exclude='freesurfer/subjects/cvs_avg35_inMNI152' \\\n         --exclude='freesurfer/subjects/fsaverage3' \\\n         --exclude='freesurfer/subjects/fsaverage4' \\\n         --exclude='freesurfer/subjects/fsaverage5' \\\n         --exclude='freesurfer/subjects/fsaverage6' \\\n         --exclude='freesurfer/subjects/fsaverage_sym' \\\n         --exclude='freesurfer/trctrain' \\\n    && sed -i '$isource \"/opt/freesurfer-6.0.0/SetUpFreeSurfer.sh\"' \"$ND_ENTRYPOINT\"\n\n\nENV FSLDIR=\"/opt/fsl-5.0.10\" \\\n    PATH=\"/opt/fsl-5.0.10/bin:$PATH\" \\\n    FSLOUTPUTTYPE=\"NIFTI_GZ\" \\\n    FSLMULTIFILEQUIT=\"TRUE\" \\\n    FSLTCLSH=\"/opt/fsl-5.0.10/bin/fsltclsh\" \\\n    FSLWISH=\"/opt/fsl-5.0.10/bin/fslwish\" \\\n    FSLLOCKDIR=\"\" \\\n    FSLMACHINELIST=\"\" \\\n    FSLREMOTECALL=\"\" \\\n    FSLGECUDAQ=\"cuda.q\"\nRUN apt-get update -qq \\\n    && apt-get install -y -q --no-install-recommends \\\n           bc \\\n           dc \\\n           file \\\n           libfontconfig1 \\\n           libfreetype6 \\\n           libgl1-mesa-dev \\\n           libgl1-mesa-dri \\\n           libglu1-mesa-dev \\\n           libgomp1 \\\n           libice6 \\\n           libxcursor1 \\\n           libxft2 \\\n           libxinerama1 \\\n           libxrandr2 \\\n           libxrender1 \\\n           libxt6 \\\n           sudo \\\n           wget \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/* \\\n    && echo \"Downloading FSL ...\" \\\n    && mkdir -p /opt/fsl-5.0.10 \\\n    && curl -fsSL --retry 5 https://fsl.fmrib.ox.ac.uk/fsldownloads/fsl-5.0.10-centos6_64.tar.gz \\\n    | tar -xz -C /opt/fsl-5.0.10 --strip-components 1 \\\n    && sed -i '$iecho Some packages in this Docker container are non-free' $ND_ENTRYPOINT \\\n    && sed -i '$iecho If you are considering commercial use of this container, please consult the relevant license:' $ND_ENTRYPOINT \\\n    && sed -i '$iecho https://fsl.fmrib.ox.ac.uk/fsl/fslwiki/Licence' $ND_ENTRYPOINT \\\n    && sed -i '$isource $FSLDIR/etc/fslconf/fsl.sh' $ND_ENTRYPOINT \\\n    && echo \"Installing FSL conda environment ...\" \\\n    && bash /opt/fsl-5.0.10/etc/fslconf/fslpython_install.sh -f /opt/fsl-5.0.10\n\n\nRUN curl -f -sSLO https://repo.continuum.io/miniconda/Miniconda3-4.5.11-Linux-x86_64.sh && \\\n    bash Miniconda3-4.5.11-Linux-x86_64.sh -b -p /usr/local/miniconda && \\\n    rm Miniconda3-4.5.11-Linux-x86_64.sh\n\nENV PATH=\"/usr/local/miniconda/bin:$PATH\" \\\n    CPATH=\"/usr/local/miniconda/include/:$CPATH\" \\\n    LANG=\"C.UTF-8\" \\\n    LC_ALL=\"C.UTF-8\" \\\n    PYTHONNOUSERSITE=1\n\nRUN conda install -y python=3.7.1 \\\n                     mkl=2018.0.3 \\\n                     mkl-service \\\n                     numpy\\\n                     pandas \\\n                     numpy=1.18.5 \\\n                     scipy=1.5.0 \\\n                     scikit-learn=0.23.1 \\\n                     pandoc  \\\n                     matplotlib \\\n                     graphviz=2.40.1 \\\n                     traits=4.6.0 \\\n                     libxml2=2.9.8 \\\n                     libxslt=1.1.32 \\\n                     zlib; sync && \\\n    chmod -R a+rX /usr/local/miniconda; sync && \\\n    chmod +x /usr/local/miniconda/bin/*; sync && \\\n    conda build purge-all; sync && \\\n    conda clean -tipsy && sync\n\nRUN echo 'export USER=\"${USER:=`whoami`}\"' >> \"$ND_ENTRYPOINT\"\n\nRUN  pip install --no-cache-dir nipype nibabel niworkflows==1.1.10 nilearn matplotlib \\\n        numpy pandas traits scikit-learn svgutils==0.3.1 \\\n        flywheel-sdk numpy pandas scipy sentry_sdk psutil\nRUN  apt-get update\n\nRUN  R -e \"install.packages(c('optparse', 'pracma', 'RNifti', \\\n               'svglite','signal','reshape2','ggplot2','lme4'), \\ \n                repos='http://cran.rstudio.com/')\"\n\n## make some directorie\nRUN mkdir /data /out /work /design /cohort\nRUN mkdir /run/uuidd\nRUN apt-get install -y -q --no-install-recommends uuid-runtime procps && rm -rf /var/lib/apt/lists/*;\n\nRUN sed -i '$iexport XCPEDIR=/xcpEngine' $ND_ENTRYPOINT\n\nRUN sed -i '$iexport PATH=$PATH:$XCPEDIR' $ND_ENTRYPOINT\n\n\nADD . /xcpEngine\n\n# template\n\nRUN bash -c \\\n    'cd  /xcpEngine \\\n    && wget -nv  https://upenn.box.com/shared/static/x95ygarwv14sv608muz06tfrmlmo222z.xz \\\n    && tar -xf x95ygarwv14sv608muz06tfrmlmo222z.xz \\\n    && rm x95ygarwv14sv608muz06tfrmlmo222z.xz'\n\n\nRUN bash -c 'BRAINATLAS=/xcpEngine/atlas BRAINSPACE=/xcpEngine/space XCPEDIR=/xcpEngine FSLDIR=/opt/fsl-5.0.10 AFNI_PATH=/opt/afni-latest C3D_PATH=/opt/convert3d-nightly/bin ANTSPATH=/opt/ants-latest/bin /xcpEngine/xcpReset \\\n    && BRAINATLAS=/xcpEngine/atlas LD_LIBRARY_PATH=$gsl2_path BRAINSPACE=/xcpEngine/space XCPEDIR=/xcpEngine /xcpEngine/utils/repairMetadata'\n\nRUN bash -c 'chmod a+rx /xcpEngine/xcpEngine'\n\n\nENV workbench=\"/xcpEngine/thirdparty/workbench/bin_rh_linux64\" \\\n    PATH=\"/xcpEngine/thirdparty/workbench/bin_rh_linux64:$PATH\"\n\nRUN bash -c 'cp /xcpEngine/utils/license.txt /opt/freesurfer-6.0.0/'\n\n\nENV XCPEDIR=\"/xcpEngine\" \\\n    AFNI_PATH=\"/opt/afni-latest/\" \\\n    FREESURFER_HOME=\"/opt/freesurfer-6.0.0/\" \\\n    workbench=\"/xcpEngine/thirdparty/workbench/bin_rh_linux64\"  \\\n    C3D_PATH=\"/opt/convert3d-1.0.0/bin/\" \\\n    PATH=\"$PATH:/xcpEngine\"\n\n#RUN bash -c 'cp /xcpEngine/utils/license.txt /opt/freesurfer-6.0.0/'\n\nRUN bash -c '/xcpEngine/xcpReset'\n\nENTRYPOINT [\"/xcpEngine/xcpEngine\"]"
}