{
  "startTime": 1674246063196,
  "endTime": 1674246065251,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 84
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 132,
        "lineEnd": 132,
        "columnStart": 7,
        "columnEnd": 138
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 137,
        "lineEnd": 137,
        "columnStart": 7,
        "columnEnd": 153
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 174,
        "lineEnd": 174,
        "columnStart": 7,
        "columnEnd": 71
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 196,
        "lineEnd": 196,
        "columnStart": 4,
        "columnEnd": 131
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 132,
        "lineEnd": 132,
        "columnStart": 7,
        "columnEnd": 138
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 137,
        "lineEnd": 137,
        "columnStart": 7,
        "columnEnd": 153
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 135,
        "lineEnd": 135,
        "columnStart": 42,
        "columnEnd": 60
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 140,
        "lineEnd": 140,
        "columnStart": 7,
        "columnEnd": 25
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 271,
        "lineEnd": 271,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 271,
        "lineEnd": 271,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 216,
        "lineEnd": 216,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 269,
        "lineEnd": 269,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 271,
        "lineEnd": 271,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 166,
        "lineEnd": 171,
        "columnStart": 7,
        "columnEnd": 15
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 216,
        "lineEnd": 216,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 269,
        "lineEnd": 269,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 271,
        "lineEnd": 271,
        "columnStart": 4,
        "columnEnd": 31
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 216,
        "lineEnd": 216,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 269,
        "lineEnd": 269,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 271,
        "lineEnd": 271,
        "columnStart": 4,
        "columnEnd": 58
      }
    }
  ],
  "repairedDockerfile": "FROM neurodebian:stretch\n\n\nFROM rocker/rstudio:3.6.3\n\nARG DEBIAN_FRONTEND=\"noninteractive\"\n\nENV LANG=\"en_US.UTF-8\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    ND_ENTRYPOINT=\"/neurodocker/startup.sh\"\nRUN export ND_ENTRYPOINT=\"/neurodocker/startup.sh\" \\\n    && apt-get update -qq \\\n    && apt-get install -y -q --no-install-recommends \\\n           apt-utils \\\n           bzip2 \\\n           ca-certificates \\\n           python3-dev \\\n           gcc \\\n           curl \\\n           locales \\\n           unzip \\\n           wget \\\n           zlib1g-dev \\\n           libnifti-dev \\\n           libxml2-dev \\\n           libssl-dev \\\n           libcurl4-openssl-dev \\\n           libssl-dev \\\n           libcairo2-dev \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \\\n    && sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen \\\n    && dpkg-reconfigure --frontend=noninteractive locales \\\n    && update-locale LANG=\"en_US.UTF-8\" \\\n    && chmod 777 /opt && chmod a+s /opt \\\n    && mkdir -p /neurodocker \\\n    && if [ ! -f \"$ND_ENTRYPOINT\" ]; then \\\n         echo '#!/usr/bin/env bash' >> \"$ND_ENTRYPOINT\"; \\\n    fi \\\n    && chmod -R 777 /neurodocker && chmod a+s /neurodocker\n\nRUN curl -f -sSLO https://repo.continuum.io/miniconda/Miniconda3-4.5.11-Linux-x86_64.sh && \\\n    bash Miniconda3-4.5.11-Linux-x86_64.sh -b -p /usr/local/miniconda && \\\n    rm Miniconda3-4.5.11-Linux-x86_64.sh\n\nENV PATH=\"/usr/local/miniconda/bin:$PATH\" \\\n    CPATH=\"/usr/local/miniconda/include/:$CPATH\" \\\n    LANG=\"C.UTF-8\" \\\n    LC_ALL=\"C.UTF-8\" \\\n    PYTHONNOUSERSITE=1\n\nRUN conda install -y python=3.7.1 \\\n                     pip=19.1 \\\n                     mkl=2018.0.3 \\\n                     mkl-service \\\n                     scipy \\\n                     libxml2=2.9.8 \\\n                     libxslt=1.1.32 \\\n                     zlib; sync && \\\n    chmod -R a+rX /usr/local/miniconda; sync && \\\n    chmod +x /usr/local/miniconda/bin/*; sync && \\\n    conda build purge-all; sync && \\\n    conda clean -tipsy && sync\n\n\nENV FSLDIR=\"/opt/fsl-5.0.10\" \\\n    PATH=\"/opt/fsl-5.0.10/bin:$PATH\"\n\n\nRUN apt-get update -qq \\\n    && apt-get install -y -q --no-install-recommends \\\n           bc \\\n           git \\\n           wget \\\n           dc \\\n           file \\\n           libfontconfig1 \\\n           libfreetype6 \\\n           libgl1-mesa-dev \\\n           libglu1-mesa-dev \\\n           libgomp1 \\\n           libice6 \\\n           libmng1 \\\n           libxcursor1 \\\n           libxft2 \\\n           libxinerama1 \\\n           libxrandr2 \\\n           libxrender1 \\\n           libxt6 \\\n           wget \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \\\n    && echo \"Downloading FSL ...\" \\\n    && mkdir -p /opt/fsl-5.0.10 \\\n    && curl -fsSL --retry 5 https://fsl.fmrib.ox.ac.uk/fsldownloads/fsl-5.0.10-centos6_64.tar.gz \\\n    | tar -xz -C /opt/fsl-5.0.10 --strip-components 1 \\\n    && sed -i '$iecho Some packages in this Docker container are non-free' $ND_ENTRYPOINT \\\n    && sed -i '$iecho If you are considering commercial use of this container, please consult the relevant license:' $ND_ENTRYPOINT \\\n    && sed -i '$iecho https://fsl.fmrib.ox.ac.uk/fsl/fslwiki/Licence' $ND_ENTRYPOINT \\\n    && sed -i '$isource $FSLDIR/etc/fslconf/fsl.sh' $ND_ENTRYPOINT \\\n    && echo \"Installing FSL conda environment ...\" \\\n    && bash /opt/fsl-5.0.10/etc/fslconf/fslpython_install.sh -f /opt/fsl-5.0.10\n\nENV C3DPATH=\"/opt/convert3d-1.0.0\" \\\n    PATH=\"/opt/convert3d-1.0.0/bin:$PATH\"\n\nRUN echo \"Downloading Convert3D ...\" \\\n    && mkdir -p /opt/convert3d-1.0.0 \\\n    && curl -fsSL --retry 5 https://sourceforge.net/projects/c3d/files/c3d/1.0.0/c3d-1.0.0-Linux-x86_64.tar.gz/download \\\n    | tar -xz -C /opt/convert3d-1.0.0 --strip-components 1\n\nENV PATH=\"/opt/afni-latest:$PATH\" \\\n    AFNI_PLUGINPATH=\"/opt/afni-latest\"\nRUN apt-get update -qq \\\n    && apt-get install -y -q --no-install-recommends \\\n           ed \\\n           gsl-bin \\\n           libglib2.0-0 \\\n           libglu1-mesa-dev \\\n           libglw1-mesa \\\n           libgomp1 \\\n           libjpeg62 \\\n           libnlopt-dev \\\n           libxm4 \\\n           netpbm \\\n           r-base \\\n           r-base-dev \\\n           tcsh \\\n           xfonts-base \\\n           xvfb \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \\\n    && curl -f -sSL --retry 5 -o /tmp/libxp6_1.0.2-2_amd64.deb https://mirrors.kernel.org/debian/pool/main/libx/libxp/libxp6_1.0.2-2_amd64.deb \\\n    && dpkg -i /tmp/libxp6_1.0.2-2_amd64.deb \\\n    && rm /tmp/libxp6_1.0.2-2_amd64.deb \\\n    && apt-get clean && apt-get update && apt-get -f -y install && dpkg --configure -a && apt-get update \\\n    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \\\n    && curl -f -o /tmp/libpng12-0_1.2.50-2+deb8u3_amd64.deb -sSL https://mirrors.kernel.org/debian/pool/main/libp/libpng/libpng12-0_1.2.50-2+deb8u3_amd64.deb \\\n    && dpkg -i /tmp/libpng12-0_1.2.50-2+deb8u3_amd64.deb \\\n    && rm /tmp/libpng12-0_1.2.50-2+deb8u3_amd64.deb \\\n    && apt-get install -y -f \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \\\n    && gsl2_path=\"$(find / -name 'libgsl.so.19' || printf '')\" \\\n    && if [ -n \"$gsl2_path\" ]; then \\\n         ln -sfv \"$gsl2_path\" \"$(dirname $gsl2_path)/libgsl.so.0\"; \\\n    fi \\\n    && ldconfig \\\n    && echo \"Downloading AFNI ...\" \\\n    && mkdir -p /opt/afni-latest \\\n    && curl -fsSL --retry 5 https://afni.nimh.nih.gov/pub/dist/tgz/linux_openmp_64.tgz \\\n    | tar -xz -C /opt/afni-latest --strip-components 1 \\\n    && PATH=$PATH:/opt/afni-latest rPkgsInstall -pkgs ALL\n\nRUN bash -c 'export PATH=/opt/afni-latest:$PATH && rPkgsInstall -pkgs ALL && rPkgsInstall -pkgs optparse,pracma,RNifti,svglite,signal,reshape2,ggplot2,lme4'\n\n# Installing ANTs latest from source\nARG ANTS_SHA=51855944553a73960662d3e4f7c1326e584b23b2\nADD https://cmake.org/files/v3.11/cmake-3.11.4-Linux-x86_64.sh /cmake-3.11.4-Linux-x86_64.sh\nENV ANTSPATH=\"/opt/ants-latest/bin\" \\\n    PATH=\"/opt/ants-latest/bin:$PATH\" \\\n    LD_LIBRARY_PATH=\"/opt/ants-latest/lib:$LD_LIBRARY_PATH\"\nRUN mkdir /opt/cmake \\\n    && sh /cmake-3.11.4-Linux-x86_64.sh --prefix=/opt/cmake --skip-license \\\n    && ln -s /opt/cmake/bin/cmake /usr/local/bin/cmake \\\n    && apt-get update -qq \\\n    && apt-get install -y -q --no-install-recommends \\\n    g++ \\\n    gcc \\\n    make \\\n    zlib1g-dev \\\n    imagemagick \\\n    && mkdir /tmp/ants \\\n    && cd /tmp \\\n    && curl -f -sSLO https://github.com/ANTsX/ANTs/archive/${ANTS_SHA}.zip \\\n    && unzip ${ANTS_SHA}.zip \\\n    && mv ANTs-${ANTS_SHA} /tmp/ants/source \\\n    && rm ${ANTS_SHA}.zip \\\n    && mkdir -p /tmp/ants/build \\\n    && cd /tmp/ants/build \\\n    && git config --global url.\"https://\".insteadOf git:// \\\n    && cmake -DBUILD_SHARED_LIBS=ON /tmp/ants/source \\\n    && make -j1 \\\n    && mkdir -p /opt/ants-latest \\\n    && mv bin lib /opt/ants-latest/ \\\n    && mv /tmp/ants/source/Scripts/* /opt/ants-latest/bin \\\n    && rm -rf /tmp/ants \\\n    && rm -rf /opt/cmake /usr/local/bin/cmake && rm -rf /var/lib/apt/lists/*;\n\nENV C3DPATH=\"/opt/convert3d-nightly\" \\\n    PATH=\"/opt/convert3d-nightly/bin:$PATH\"\nRUN echo \"Downloading Convert3D ...\" \\\n    && mkdir -p /opt/convert3d-nightly \\\n    && curl -fsSL --retry 5 https://sourceforge.net/projects/c3d/files/c3d/Nightly/c3d-nightly-Linux-x86_64.tar.gz/download \\\n    | tar -xz -C /opt/convert3d-nightly --strip-components 1\n\nRUN curl -f -sSL https://surfer.nmr.mgh.harvard.edu/pub/dist/freesurfer/6.0.1/freesurfer-Linux-centos6_x86_64-stable-pub-v6.0.1.tar.gz | tar zxv --no-same-owner -C /opt \\\n    --exclude='freesurfer/diffusion' \\\n    --exclude='freesurfer/docs' \\\n    --exclude='freesurfer/fsfast' \\\n    --exclude='freesurfer/lib/cuda' \\\n    --exclude='freesurfer/lib/qt' \\\n    --exclude='freesurfer/matlab' \\\n    --exclude='freesurfer/mni/share/man' \\\n    --exclude='freesurfer/subjects/fsaverage_sym' \\\n    --exclude='freesurfer/subjects/fsaverage3' \\\n    --exclude='freesurfer/subjects/fsaverage4' \\\n    --exclude='freesurfer/subjects/cvs_avg35' \\\n    --exclude='freesurfer/subjects/cvs_avg35_inMNI152' \\\n    --exclude='freesurfer/subjects/bert' \\\n    --exclude='freesurfer/subjects/lh.EC_average' \\\n    --exclude='freesurfer/subjects/rh.EC_average' \\\n    --exclude='freesurfer/subjects/sample-*.mgz' \\\n    --exclude='freesurfer/subjects/V1_average' \\\n    --exclude='freesurfer/trctrain'\n\nRUN apt-get install -y -q --no-install-recommends procps && rm -rf /var/lib/apt/lists/*;\nENV USER=root\n\nRUN sed -i '$iexport XCPEDIR=/xcpEngine' $ND_ENTRYPOINT\n\nRUN sed -i '$iexport PATH=$PATH:$XCPEDIR' $ND_ENTRYPOINT\n\n\nRUN echo 'export USER=\"${USER:=`whoami`}\"' >> \"$ND_ENTRYPOINT\"\n\nRUN  pip install --no-cache-dir nipype nibabel niworkflows==1.1.10 nilearn matplotlib\nRUN  pip install --no-cache-dir numpy pandas traits scikit-learn svgutils==0.3.1\nRUN  rm -rf ~/.cache/pip/* && sync\nRUN  apt-get update\n\nADD . /xcpEngine\n\n# template\n\nRUN bash -c \\\n    'cd  /xcpEngine \\\n    && wget -nv  https://upenn.box.com/shared/static/x95ygarwv14sv608muz06tfrmlmo222z.xz \\\n    && tar -xf x95ygarwv14sv608muz06tfrmlmo222z.xz \\\n    && rm x95ygarwv14sv608muz06tfrmlmo222z.xz'\n\n\nRUN bash -c 'BRAINATLAS=/xcpEngine/atlas BRAINSPACE=/xcpEngine/space XCPEDIR=/xcpEngine FSLDIR=/opt/fsl-5.0.10 AFNI_PATH=/opt/afni-latest C3D_PATH=/opt/convert3d-nightly/bin ANTSPATH=/opt/ants-latest/bin /xcpEngine/xcpReset \\\n    && BRAINATLAS=/xcpEngine/atlas BRAINSPACE=/xcpEngine/space XCPEDIR=/xcpEngine /xcpEngine/utils/repairMetadata'\n\nRUN bash -c 'echo R_ENVIRON_USER\\=\"\" >> /usr/lib/R/etc/Renviron \\\n          && echo R_PROFILE_USER\\=\"\" >> /usr/lib/R/etc/Renviron \\\n          && chmod a+rx /xcpEngine/xcpEngine'\n\nENV workbench=\"/xcpEngine/thirdparty/workbench/bin_rh_linux64\" \\\n    PATH=\"/xcpEngine/thirdparty/workbench/bin_rh_linux64:$PATH\"\n\nENV FREESURFER_HOME=\"/opt/freesurfer\" \\\n    PATH=\"/opt/freesurfer:$PATH\"\n\nRUN  R -e \"install.packages(c('optparse', 'pracma', 'RNifti', \\\n               'svglite','signal','reshape2','ggplot2','lme4'), \\ \n                repos='http://cran.rstudio.com/')\"\n\nENV XCPEDIR=\"/xcpEngine\" \\\n    AFNI_PATH=\"/opt/afni-latest/\" \\\n    FREESURFER_HOME=\"/opt/freesurfer\" \\\n    workbench=\"/xcpEngine/thirdparty/workbench/bin_rh_linux64\"  \\\n    C3D_PATH=\"/opt/convert3d-nightly/bin/\" \\\n    PATH=\"$PATH:/xcpEngine\"\n\nRUN mkdir /data /out /work /design /cohort\n\nRUN mkdir /run/uuidd\nRUN apt-get install -y -q --no-install-recommends uuid-runtime && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get install -y --no-install-recommends libgsl0-dev && rm -rf /var/lib/apt/lists/*;\nRUN ln /usr/lib/libgsl.so /usr/lib/libgsl.so.0\n\nRUN pip install --no-cache-dir flywheel-sdk numpy pandas scipy sentry_sdk psutil\n\nRUN bash -c 'cp /xcpEngine/utils/license.txt /opt/freesurfer/'\n\n\nRUN bash -c '/xcpEngine/xcpReset'\n\n\nENTRYPOINT [\"/xcpEngine/xcpEngine\"]"
}