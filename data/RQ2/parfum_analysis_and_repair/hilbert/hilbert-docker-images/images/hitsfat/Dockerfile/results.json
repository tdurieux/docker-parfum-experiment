{
  "startTime": 1674253933729,
  "endTime": 1674253935389,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 140,
        "lineEnd": 140,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 141,
        "lineEnd": 141,
        "columnStart": 7,
        "columnEnd": 55
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM hilbert/kiosk:devel_0.10.0\n\nRUN \\\n    # oracle java 1.8 for Gaia Sky 1.5\n    apt-add-repository --yes ppa:webupd8team/java \\\n    && echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true | /usr/bin/debconf-set-selections \\\n    # add cuda repository, taken from hilbert-docker-images/images/cuda_runtime/Dockerfile\n    && NVIDIA_GPGKEY_SUM=d1be581509378368edeec8c1eb2958702feedf3bc3d17011adbf24efacce4ab5 \\\n    && NVIDIA_GPGKEY_FPR=ae09fe4bbd223a84b2ccfce3f60f4b3d7fa2af80 \\\n    && apt-key adv --fetch-keys http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1404/x86_64/7fa2af80.pub \\\n    && apt-key adv --export --no-emit-version -a $NVIDIA_GPGKEY_FPR | tail -n +2 > cudasign.pub \\\n    && echo \"$NVIDIA_GPGKEY_SUM  cudasign.pub\" | sha256sum -c --strict - && rm cudasign.pub \\\n    && echo \"deb http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1404/x86_64 /\" > /etc/apt/sources.list.d/cuda.list\nENV CUDA_VERSION 7.5.18\nENV CUDA_PKG_VERSION 7-5=7.5-18\nENV PATH /usr/local/cuda/bin:${PATH}\nENV LIBRARY_PATH /usr/local/cuda/lib64/stubs:${LIBRARY_PATH}\nLABEL com.nvidia.cuda.version=\"${CUDA_VERSION}\n\n# system packages\nRUN /usr/local/bin/update.sh \\\n    && /usr/local/bin/install.sh \\\n            # general and x11\n            x11-utils \\\n            xdotool \\\n            unzip \\\n            imagemagick \\\n            bc \\\n            # python (2 and 3), kivy\n            python-pip \\\n            python3-pip \\\n            build-essential \\\n            git \\\n            python \\\n            python-dev \\\n            python3 \\\n            python3-dev \\\n            libav-tools \\\n            libsdl2-dev \\\n            libsdl2-image-dev \\\n            libsdl2-mixer-dev \\\n            libsdl2-ttf-dev \\\n            libportmidi-dev \\\n            libswscale-dev \\\n            libavformat-dev \\\n            libavcodec-dev \\\n            zlib1g-dev \\\n            libgstreamer1.0 \\\n            gstreamer1.0-plugins-base \\\n            gstreamer1.0-plugins-good \\\n            # cuda_runtime\n            cuda-nvrtc-$CUDA_PKG_VERSION \\\n            cuda-cusolver-$CUDA_PKG_VERSION \\\n            cuda-cublas-$CUDA_PKG_VERSION \\\n            cuda-cufft-$CUDA_PKG_VERSION \\\n            cuda-curand-$CUDA_PKG_VERSION \\\n            cuda-cusparse-$CUDA_PKG_VERSION \\\n            cuda-npp-$CUDA_PKG_VERSION \\\n            cuda-cudart-$CUDA_PKG_VERSION \\\n            # cuda_devel\n            cuda-core-$CUDA_PKG_VERSION \\\n            cuda-misc-headers-$CUDA_PKG_VERSION \\\n            cuda-command-line-tools-$CUDA_PKG_VERSION \\\n            cuda-license-$CUDA_PKG_VERSION \\\n            cuda-nvrtc-dev-$CUDA_PKG_VERSION \\\n            cuda-cusolver-dev-$CUDA_PKG_VERSION \\\n            cuda-cublas-dev-$CUDA_PKG_VERSION \\\n            cuda-cufft-dev-$CUDA_PKG_VERSION \\\n            cuda-curand-dev-$CUDA_PKG_VERSION \\\n            cuda-cusparse-dev-$CUDA_PKG_VERSION \\\n            cuda-npp-dev-$CUDA_PKG_VERSION \\\n            cuda-cudart-dev-$CUDA_PKG_VERSION \\\n            cuda-driver-dev-$CUDA_PKG_VERSION \\\n            cuda-samples-$CUDA_PKG_VERSION \\\n            # bonsai and friends\n            cmake \\\n            cuda-runtime-7-5 \\\n            cuda-7-5 \\\n            freeglut3-dev \\\n            qt-sdk \\\n            libqt5webkit5-dev \\\n            x11-xserver-utils \\\n            compton \\\n            # gaia sky\n            #default-jre \\\n            #default-jdk \\\n            oracle-java8-installer \\\n            oracle-java8-set-default \\\n            # OSD and screenshots\n            aosd-cat \\\n            xosd-bin \\\n            scrot \\\n            # convencience and debugging\n            nano \\\n            vim \\\n            x11-apps \\\n            dstat \\\n            bash-completion \\\n            strace \\\n            usbutils \\\n            joystick \\\n            jstest-gtk \\\n            lm-sensors \\\n            aptitude \\\n            apt-file \\\n            nmap \\\n            sysstat \\\n            lshw \\\n            read-edid \\\n            iptraf \\\n            iotop \\\n            input-utils \\\n            mtdev-tools \\\n            evtest \\\n            evemu-tools \\\n            man \\\n    # cuda_runtime\n    && ln -s cuda-7.5 /usr/local/cuda \\\n    && echo \"/usr/local/cuda/lib64\" >> /etc/ld.so.conf.d/cuda.conf \\\n    && ldconfig \\\n    # cuda_devel\n    && cd /tmp && apt-get download gpu-deployment-kit \\\n    && mkdir /tmp/gpu-deployment-kit && cd /tmp/gpu-deployment-kit \\\n    && dpkg -x /tmp/gpu-deployment-kit_*.deb . \\\n    && mv usr/include/nvidia/gdk/* /usr/local/cuda/include \\\n    && mv usr/src/gdk/nvml/lib/* /usr/local/cuda/lib64/stubs \\\n    && rm -rf /tmp/gpu-deployment-kit* \\\n    # other\n    && apt-file update\n    # no cleanup\n    # && /usr/local/bin/clean.sh\n\n# 2nd cache (merge into above later!)\n#RUN /usr/local/bin/update.sh \\\n#    && /usr/local/bin/install.sh \\\n#            # general:\n#    #&& /usr/local/bin/clean.sh\n#    && echo DONE\n#RUN /usr/local/bin/install.sh unzip\n\nRUN pip2 install --no-cache-dir --upgrade pip virtualenv setuptools \\\n    && pip3 install --no-cache-dir --upgrade pip virtualenv setuptools\n\nCOPY setup-venv.sh /usr/local/bin/\nCOPY sub_super_larger.patch /opt/sub_super_larger.patch\nCOPY replace-with-nonfree-files.sh /usr/local/bin/\n\n# Install custom fonts (note that HelveticaNeueLTOT.zip is non-free and only licensed to ESO).\nARG DP_CREDENTIALS=none\nRUN mkdir /usr/local/share/fonts/truetype/ \\\n    && /usr/local/bin/replace-with-nonfree-files.sh \\\n        \"https://supernova.eso.org/exhibition/storage/interactives_0000_helveticaneueltot.zip\" \\\n        \"/usr/local/share/fonts/truetype/HelveticaNeueLTOT.zip\"\nRUN cd /usr/local/share/fonts/truetype/ \\\n    && unzip HelveticaNeueLTOT.zip \\\n    && rm /usr/local/share/fonts/truetype/HelveticaNeueLTOT.zip \\\n    && fc-cache -f -v\n\n    # pre-install virtual environment for kivy and several other packages\nRUN setup-venv.sh \\\n    && echo \"DONE.\"\n\n## the following was removed due to big executable size\n#COPY FingerPaint-x86_64.AppImage /usr/local/bin/\nADD https://cloud.imaginary.org/index.php/s/WSGU4yEaR4RaH3T/download?path=%2F&files=FingerPaint-x86_64.AppImage /usr/local/bin/FingerPaint-x86_64.AppImage\n\nCOPY venv-python.sh /usr/local/bin/\nCOPY touchtracer /usr/local/bin/\nCOPY kivy_config.ini /root/.kivy/config.ini\n\nCMD [\"/usr/local/bin/touchtracer\"]\n\nARG IMAGE_VERSION=latest\nARG GIT_NOT_CLEAN_CHECK\nARG BUILD_DATE=unknown\nARG VCS_REF=unknown\nARG VCS_DATE=unknown\nARG VCS_URL=unknown\nARG DOCKERFILE=unknown\nARG VCS_SUMMARY=unknown\n\nLABEL maintainer=\"Volker Gaibler <volker.gaibler@h-its.org>\" \\\n    org.label-schema.name=\"hitsfat\" \\\n    org.label-schema.description=\"fat base image usable for various interactive applications for the ESO Supernova\" \\\n    org.label-schema.vendor=\"HITS gGmbH\" \\\n    org.label-schema.vcs-ref=\"${VCS_REF}\" \\\n    org.label-schema.vcs-url=\"${VCS_URL}\" \\\n    org.label-schema.version=\"${VCS_VERSION}\" \\\n    org.label-schema.build-date=\"${BUILD_DATE}\" \\\n    org.label-schema.schema-version=\"1.0\" \\\n    VCS_DATE=\"${VCS_DATE}\" \\\n    VCS_SUMMARY=\"${VCS_SUMMARY}\" \\\n    IMAGE_VERSION=\"${IMAGE_VERSION}\" \\\n    GIT_NOT_CLEAN_CHECK=\"${GIT_NOT_CLEAN_CHECK}\" \\\n    DOCKERFILE=\"${DOCKERFILE}\"\n\n"
}