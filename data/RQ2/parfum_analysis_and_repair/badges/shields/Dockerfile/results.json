{
  "startTime": 1674217827075,
  "endTime": 1674217827939,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 28
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:16-alpine AS Builder\n\nRUN mkdir -p /usr/src/app && rm -rf /usr/src/app\nRUN mkdir /usr/src/app/private && rm -rf /usr/src/app/private\nWORKDIR /usr/src/app\n\nCOPY package.json package-lock.json /usr/src/app/\n# Without the badge-maker package.json and CLI script in place, `npm ci` will fail.\nCOPY badge-maker /usr/src/app/badge-maker/\n\nRUN apk add --no-cache python3 make g++\nRUN npm install -g \"npm@>=8\" && npm cache clean --force;\n# We need dev deps to build the front end. We don't need Cypress, though.\nRUN NODE_ENV=development CYPRESS_INSTALL_BINARY=0 npm ci\n\nCOPY . /usr/src/app\nRUN npm run build\nRUN npm prune --production\nRUN npm cache clean --force\n\n# Use multi-stage build to reduce size\nFROM node:16-alpine\n\nARG version=dev\nENV DOCKER_SHIELDS_VERSION=$version\nLABEL version=$version\nLABEL fly.version=$version\n\n# Run the server using production configs.\nENV NODE_ENV production\n\nWORKDIR /usr/src/app\nCOPY --from=Builder /usr/src/app /usr/src/app\n\nCMD node server\n\nEXPOSE 80\n"
}