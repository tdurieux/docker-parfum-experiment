{
  "startTime": 1674221175719,
  "endTime": 1674221176896,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 7,
        "columnEnd": 134
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright (c) 2017 Wind River Systems Inc.\n#\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n# of this software and associated documentation files (the \"Software\"), to deal\n# in the Software without restriction, including without limitation the rights\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n# copies of the Software, and to permit persons to whom the Software is\n# furnished to do so, subject to the following conditions:\n#\n# The above copyright notice and this permission notice shall be included in all\n# copies or substantial portions of the Software.\n#\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n# SOFTWARE.\n\nFROM jenkins/jenkins:lts-alpine\n\n# Increase timeout to try and avoid plugin download errors\nENV CURL_CONNECTION_TIMEOUT 60\n\n# split the plugin installation into multiple stages to reduce chance of download failure\nRUN /usr/local/bin/install-plugins.sh git workflow-aggregator docker-workflow swarm greenballs matrix-auth leastload pipeline-utility-steps job-dsl authorize-project\n\n# init script written in groovy to setup Jenkins on startup\nCOPY init_scripts/ /usr/share/jenkins/ref/init.groovy.d/\n\n# Install initial job to automate creation of folders\nCOPY jobs/folder_create.xml /usr/share/jenkins/ref/jobs/folder_create/config.xml\n\n# Install folder that will hold devbuild job with library config\nCOPY jobs/devbuilds.xml /usr/share/jenkins/ref/jobs/devbuilds/config.xml\n\n# Install initial job to start devbuilds\nCOPY jobs/devbuild.xml /usr/share/jenkins/ref/jobs/devbuilds/jobs/devbuild/config.xml\n\n# Install initial job to build WRLinux\nCOPY jobs/WRLinux_Build.xml /usr/share/jenkins/ref/jobs/WRLinux_Build/config.xml\n\n# Install initial job to start Walter\nCOPY jobs/Walter.xml /usr/share/jenkins/ref/jobs/Walter/config.xml\n\n# Install initial job for build logins\nCOPY jobs/Login.xml /usr/share/jenkins/ref/jobs/Login/config.xml\n\nRUN echo 2.5 > /usr/share/jenkins/ref/jenkins.install.UpgradeWizard.state\n\nUSER root\n\nRUN mkdir /license-report  && cd /license-report \\\n    && curl -f --silent --remote-name https://raw.githubusercontent.com/WindRiver-OpenSourceLabs/license-report/master/generate_report.sh \\\n    && apk update && sh generate_report.sh > report \\\n    && rm -rf /var/cache/apk/* && rm /license-report/generate_report.sh\n\nUSER jenkins\n"
}