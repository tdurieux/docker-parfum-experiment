{
  "startTime": 1674252946247,
  "endTime": 1674252946900,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 131
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.9\n\n# Build time arguments\n#Values: latest or version number (e.g. 1.8.1-r0)\nARG NGINX_VERSION=latest\n#Permissions, set the linux user id and group id\nARG CONTAINER_UID=1000\nARG CONTAINER_GID=1000\n# Image Build Date By Buildsystem\nARG BUILD_DATE=undefined\n\n# install dev tools\nENV NGINX_DIRECTORY=/etc/nginx\n\nRUN export CONTAINER_USER=nginx && \\\n    export CONTAINER_GROUP=nginx && \\\n    # Add user\n    addgroup -g $CONTAINER_GID $CONTAINER_GROUP && \\\n    adduser -u $CONTAINER_UID -G $CONTAINER_GROUP -h /home/$CONTAINER_USER -s /bin/bash -S $CONTAINER_USER && \\\n    apk add --update bash tini \\\n      ca-certificates \\\n      curl \\\n      openssl \\\n      apache2-utils && \\\n    if  [ \"${NGINX_VERSION}\" = \"latest\" ]; \\\n      then apk add nginx ; \\\n      else apk add \"nginx=${NGINX_VERSION}\" ; \\\n    fi && \\\n    rm -f /${NGINX_DIRECTORY}/nginx.conf && \\\n    rm -rf ${NGINX_DIRECTORY}/conf.d ${NGINX_DIRECTORY}/default.d && \\\n    mkdir -p /var/log/nginx && \\\n    touch /var/log/nginx/error.log && \\\n    mkdir -p ${NGINX_DIRECTORY}/default.d && \\\n    mkdir -p ${NGINX_DIRECTORY}/conf.d && \\\n    mkdir -p ${NGINX_DIRECTORY}/keys && \\\n    mkdir -p /run/nginx && \\\n    chown -R $CONTAINER_UID:$CONTAINER_GID ${NGINX_DIRECTORY} /var/log/nginx && \\\n    chown -R $CONTAINER_UID:$CONTAINER_GID ${NGINX_DIRECTORY} /var/lib/nginx && \\\n    chown -R $CONTAINER_UID:$CONTAINER_GID ${NGINX_DIRECTORY} /run/nginx && \\\n    rm -rf /var/cache/apk/* && rm -rf /tmp/*\n\nRUN apk update && \\\n    mkdir /license-report && \\\n    cd /license-report && \\\n    curl -f --silent --remote-name https://raw.githubusercontent.com/WindRiver-OpenSourceLabs/license-report/master/generate_report.sh && \\\n    sh generate_report.sh > report && \\\n    rm /license-report/generate_report.sh\n\nEXPOSE 80 443\n\nUSER root\nCOPY imagescripts/*.sh /opt/nginx/\nENTRYPOINT [\"/sbin/tini\",\"--\",\"/opt/nginx/docker-entrypoint.sh\"]\nVOLUME [\"/home/nginx\",\"/var/log/nginx\"]\nCMD [\"nginx\"]\n"
}