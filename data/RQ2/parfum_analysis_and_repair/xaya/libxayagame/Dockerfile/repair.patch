diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/xaya/libxayagame/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/xaya/libxayagame/Dockerfile/repaired.Dockerfile
index 002f06a..131d5d0 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/xaya/libxayagame/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/xaya/libxayagame/Dockerfile/repaired.Dockerfile
@@ -33,10 +33,10 @@ RUN apk add --no-cache \
 # as Alpine package.
 ARG ARGTABLE_VERSION="2-13"
 WORKDIR /usr/src
-RUN wget http://prdownloads.sourceforge.net/argtable/argtable2-13.tar.gz
-RUN tar zxvf argtable${ARGTABLE_VERSION}.tar.gz
+RUN wget https://prdownloads.sourceforge.net/argtable/argtable2-13.tar.gz
+RUN tar zxvf argtable${ARGTABLE_VERSION}.tar.gz && rm argtable${ARGTABLE_VERSION}.tar.gz
 WORKDIR /usr/src/argtable${ARGTABLE_VERSION}
-RUN ./configure && make && make install-strip
+RUN ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" && make && make install-strip
 
 # Build and install jsoncpp from source.  We need at least version >= 1.7.5,
 # which includes an important fix for JSON parsing in some GSPs.
@@ -81,9 +81,9 @@ RUN cp zmq.hpp /usr/local/include
 ARG SQLITE_VERSION="3360000"
 WORKDIR /usr/src
 RUN wget https://www.sqlite.org/2021/sqlite-autoconf-${SQLITE_VERSION}.tar.gz
-RUN tar zxvf sqlite-autoconf-${SQLITE_VERSION}.tar.gz
+RUN tar zxvf sqlite-autoconf-${SQLITE_VERSION}.tar.gz && rm sqlite-autoconf-${SQLITE_VERSION}.tar.gz
 WORKDIR /usr/src/sqlite-autoconf-${SQLITE_VERSION}
-RUN ./configure CFLAGS="-DSQLITE_ENABLE_SESSION -DSQLITE_ENABLE_PREUPDATE_HOOK"
+RUN ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" CFLAGS="-DSQLITE_ENABLE_SESSION -DSQLITE_ENABLE_PREUPDATE_HOOK"
 RUN make && make install-strip
 
 # Build and install libsecp256k1.
@@ -92,7 +92,7 @@ WORKDIR /usr/src/libsecp256k1
 RUN git clone -b ${SECP256K1_VERSION} \
   https://github.com/bitcoin-core/secp256k1 .
 RUN ./autogen.sh \
-    && ./configure --disable-tests --disable-benchmark  \
+    && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --disable-tests --disable-benchmark \
                    --enable-module-recovery \
     && make && make install-strip
 
@@ -101,7 +101,7 @@ ARG ETHUTILS_VERSION="master"
 WORKDIR /usr/src/ethutils
 RUN git clone -b ${ETHUTILS_VERSION} \
   https://github.com/xaya/eth-utils .
-RUN ./autogen.sh && ./configure && make && make install-strip
+RUN ./autogen.sh && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" && make && make install-strip
 
 # Also add a utility script for copying dynamic libraries needed for
 # a given binary.  This can be used by GSP images based on this one
@@ -120,7 +120,7 @@ ENV LD_LIBRARY_PATH "/usr/local/lib:/usr/local/lib64"
 WORKDIR /usr/src/libxayagame
 COPY . .
 RUN make distclean || true
-RUN ./autogen.sh && ./configure && make && make install-strip
+RUN ./autogen.sh && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" && make && make install-strip
 
 # For the final image, just copy over all built / installed stuff and
 # add in the non-dev libraries needed (where we installed the dev version