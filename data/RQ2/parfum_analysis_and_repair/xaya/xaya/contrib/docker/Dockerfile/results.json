{
  "startTime": 1674253439523,
  "endTime": 1674253440635,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 78
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Builds a Docker image that has Xaya Core (and all its dependencies)\n# installed.  It allows running xayad, xaya-cli and xaya-tx when executed.\n#\n# The Docker build with this file should be run from the source repository\n# root file.  It will copy over the current folder as source, and thus build\n# whatever version / tag is there.\n\n# Create the image that we use to build everything, and install additional\n# packages that are needed only for the build itself.\nFROM alpine AS build\nRUN apk add --no-cache \\\n  autoconf \\\n  automake \\\n  boost-dev \\\n  build-base \\\n  czmq-dev \\\n  libevent-dev \\\n  libtool\n\n# Build and install Xaya Core itself.  Make sure to clean up any build artefacts\n# that may have been copied over from the host machine.\nWORKDIR /usr/src/xaya\nCOPY . .\nRUN make distclean || true\nRUN ./autogen.sh\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --disable-tests --disable-bench --disable-wallet --without-gui\nRUN make && make install-strip\n\n# For the final image, just copy over the build binaries and install\n# the necessary runtime libraries (without build environment).\nFROM alpine\nRUN apk add --no-cache \\\n  boost-chrono \\\n  boost-filesystem \\\n  boost-system \\\n  boost-thread \\\n  libevent \\\n  libzmq\nCOPY --from=build /usr/local/bin/ /usr/local/bin/\nLABEL description=\"Minimal image with Xaya Core and utilities\"\n\n# Set up the runtime environment.\nRUN addgroup xaya && adduser -S -G xaya xaya \\\n  && mkdir -p /var/lib/xaya \\\n  && chown xaya:xaya -R /var/lib/xaya\nENV PATH \"/usr/local/bin\"\nUSER xaya\nCOPY contrib/docker/xaya.conf /var/lib/xaya/\nCOPY contrib/docker/entrypoint.sh /usr/local/bin/\nVOLUME [\"/var/lib/xaya\"]\nENV HOST \"127.0.0.1\"\nENV ZMQ_PORT \"28555\"\nENV RPC_PASSWORD \"\"\nENV RPC_ALLOW_IP \"127.0.0.1\"\nEXPOSE ${ZMQ_PORT}\nENTRYPOINT [\"/usr/local/bin/entrypoint.sh\"]\nCMD []\n"
}