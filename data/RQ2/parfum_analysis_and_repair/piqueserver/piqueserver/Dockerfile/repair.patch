diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/piqueserver/piqueserver/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/piqueserver/piqueserver/Dockerfile/repaired.Dockerfile
index 615be20..ca085c7 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/piqueserver/piqueserver/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/piqueserver/piqueserver/Dockerfile/repaired.Dockerfile
@@ -1,11 +1,11 @@
 FROM python:3.6-alpine
 VOLUME /config
 
-RUN mkdir -p /usr/src/app && mkdir -p /usr/src/app/enet && mkdir -p /usr/src/app/pyspades
+RUN mkdir -p /usr/src/app && mkdir -p /usr/src/app/enet && mkdir -p /usr/src/app/pyspades && rm -rf /usr/src/app
 WORKDIR /usr/src/app
 
 # Installing dependencies.
-# In order to keep layers lean we instantly remove the build essentials 
+# In order to keep layers lean we instantly remove the build essentials
 COPY requirements.txt /usr/src/app/
 
 # Note: manylinux wheel support isn't enabled by default for alpinelinux
@@ -15,15 +15,15 @@ RUN apk add --no-cache --virtual .build-deps-cython gcc musl-dev \
     && apk add --no-cache zlib jpeg \
     \
     && echo "manylinux1_compatible = True" > /usr/local/lib/python3.6/_manylinux.py \
-    && pip install pyenet \
+    && pip install --no-cache-dir pyenet \
     && rm /usr/local/lib/python3.6/_manylinux.py \
     && pip install --no-cache-dir -r requirements.txt \
-    \
+
     && apk del .build-deps-cython \
     && apk del .build-deps-pillow
 
 # The fact that we removed gcc beforehand makes us download it again
-# This is remedied by building the server core first and leaving all .py scripts 
+# This is remedied by building the server core first and leaving all .py scripts
 # to the last. A change in python script won't trigger downloading gcc all over again
 # but a change in .pyx or .c file will.
 # TODO: while this behaviour suits production envs perfectly, make a dev env option