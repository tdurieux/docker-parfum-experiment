{
  "startTime": 1674249198205,
  "endTime": 1674249199830,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 83,
        "lineEnd": 83,
        "columnStart": 7,
        "columnEnd": 62
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 90,
        "lineEnd": 90,
        "columnStart": 7,
        "columnEnd": 112
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 123,
        "lineEnd": 123,
        "columnStart": 7,
        "columnEnd": 56
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 63,
        "columnStart": 7,
        "columnEnd": 14
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 80,
        "lineEnd": 80,
        "columnStart": 7,
        "columnEnd": 80
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 81,
        "lineEnd": 81,
        "columnStart": 7,
        "columnEnd": 83
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 63,
        "columnStart": 7,
        "columnEnd": 14
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 80,
        "lineEnd": 80,
        "columnStart": 7,
        "columnEnd": 80
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 81,
        "lineEnd": 81,
        "columnStart": 7,
        "columnEnd": 83
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# start with Ubuntu 20.04LTS\nFROM ubuntu:focal\n\nVOLUME \"/var/source\"\n\n# base build and check tools and libraries layer\nRUN set -x \\\n    && apt-get update \\\n    && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -fy \\\n    autoconf \\\n    automake \\\n    bison \\\n    bridge-utils \\\n    clang \\\n    clang-format \\\n    clang-tidy \\\n    curl \\\n    flex \\\n    g++ \\\n    git \\\n    gperf \\\n    iproute2 \\\n    jq \\\n    lcov \\\n    libavahi-client-dev \\\n    libavahi-common-dev \\\n    libcairo2-dev \\\n    libdbus-1-dev \\\n    libdbus-glib-1-dev \\\n    libgif-dev \\\n    libglib2.0-dev \\\n    libical-dev \\\n    libjpeg-dev \\\n    libdmalloc-dev \\\n    libmbedtls-dev \\\n    libncurses5-dev \\\n    libncursesw5-dev \\\n    libnspr4-dev \\\n    libpango1.0-dev \\\n    libpixman-1-dev \\\n    libreadline-dev \\\n    libssl-dev \\\n    libtool \\\n    libudev-dev \\\n    libusb-1.0-0 \\\n    libusb-dev \\\n    libxml2-dev \\\n    make \\\n    net-tools \\\n    ninja-build \\\n    openjdk-8-jdk \\\n    pkg-config \\\n    python3.9 \\\n    python3.9-dev \\\n    python3.9-venv \\\n    rsync \\\n    shellcheck \\\n    strace \\\n    systemd \\\n    udev \\\n    unzip \\\n    wget \\\n    git-lfs \\\n    zlib1g-dev \\\n    && rm -rf /var/lib/apt/lists/ \\\n    && git lfs install \\\n    && : && rm -rf /var/lib/apt/lists/*;\n\n# Cmake (Mbed OS requires >=3.19.0-rc3 version which is not available in Ubuntu 20.04 repository)\nRUN set -x \\\n    && (cd /tmp \\\n    && wget --progress=dot:giga https://github.com/Kitware/CMake/releases/download/v3.19.3/cmake-3.19.3-Linux-x86_64.sh \\\n    && sh cmake-3.19.3-Linux-x86_64.sh --exclude-subdir --prefix=/usr/local \\\n    && rm -rf cmake-3.19.3-Linux-x86_64.sh) \\\n    && exec bash \\\n    && : # last line\n\n# Python 3.9 and PIP\nRUN set -x \\\n    && DEBIAN_FRONTEND=noninteractive  apt-get update \\\n    && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y libgirepository1.0-dev \\\n    && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y software-properties-common \\\n    && add-apt-repository universe \\\n    && curl -f https://bootstrap.pypa.io/get-pip.py -o get-pip.py \\\n    && python3.9 get-pip.py \\\n    && update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.9 1 \\\n    && rm -rf /var/lib/apt/lists/ \\\n    && : && rm -rf /var/lib/apt/lists/*;\n\nRUN set -x \\\n    && pip3 install --no-cache-dir attrs coloredlogs PyGithub pygit future portpicker mobly click cxxfilt ghapi pandas tabulate \\\n    && :\n\n# build and install gn\nRUN set -x \\\n    && git clone https://gn.googlesource.com/gn \\\n    && cd gn \\\n    && python3 build/gen.py \\\n    && ninja -C out \\\n    && cp out/gn /usr/local/bin \\\n    && cd .. \\\n    && rm -rf gn \\\n    && : # last line\n\n# Install bloat comparison tools\nRUN set -x \\\n    && git clone https://github.com/google/bloaty.git \\\n    && mkdir -p bloaty/build \\\n    && cd bloaty/build \\\n    && cmake ../ \\\n    && make -j8 \\\n    && make install \\\n    && cd ../.. \\\n    && rm -rf bloaty \\\n    && : # last line\n\n# NodeJS: install a newer version than what apt-get would read\n# This installs the latest LTS version of nodejs\nENV CHIP_NODE_VERSION=v16.13.2\nRUN set -x \\\n    && mkdir node_js \\\n    && cd node_js \\\n    && wget https://nodejs.org/dist/$CHIP_NODE_VERSION/node-$CHIP_NODE_VERSION-linux-x64.tar.xz \\\n    && tar xfvJ node-$CHIP_NODE_VERSION-linux-x64.tar.xz \\\n    && mv node-$CHIP_NODE_VERSION-linux-x64 /opt/ \\\n    && ln -s /opt/node-$CHIP_NODE_VERSION-linux-x64 /opt/node \\\n    && ln -s /opt/node/bin/* /usr/bin \\\n    && cd .. \\\n    && rm -rf node_js \\\n    && : && rm node-$CHIP_NODE_VERSION-linux-x64.tar.xz\n"
}