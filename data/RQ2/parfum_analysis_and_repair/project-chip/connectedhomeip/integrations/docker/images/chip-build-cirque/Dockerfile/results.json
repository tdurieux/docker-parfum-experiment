{
  "startTime": 1674249725430,
  "endTime": 1674249727198,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 7,
        "columnEnd": 39
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 62,
        "columnEnd": 87
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 7,
        "columnStart": 7,
        "columnEnd": 17
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 13,
        "columnStart": 7,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 21,
        "columnStart": 7,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 26,
        "lineEnd": 27,
        "columnStart": 7,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 33,
        "lineEnd": 36,
        "columnStart": 7,
        "columnEnd": 42
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 7,
        "columnStart": 7,
        "columnEnd": 17
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 13,
        "columnStart": 7,
        "columnEnd": 12
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 21,
        "columnStart": 7,
        "columnEnd": 33
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 26,
        "lineEnd": 27,
        "columnStart": 7,
        "columnEnd": 44
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 33,
        "lineEnd": 36,
        "columnStart": 7,
        "columnEnd": 42
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG VERSION=latest\nFROM connectedhomeip/chip-build:${VERSION}\n\n# Bazel\nRUN set -x \\\n    && apt-get update \\\n    && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -fy \\\n       curl gnupg \\\n    && curl -fsSL https://bazel.build/bazel-release.pub.gpg | gpg --batch --dearmor > bazel.gpg \\\n    && mv bazel.gpg /etc/apt/trusted.gpg.d/ \\\n    && echo \"deb [arch=amd64] https://storage.googleapis.com/bazel-apt stable jdk1.8\" | tee /etc/apt/sources.list.d/bazel.list \\\n    && apt-get update \\\n    && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -fy \\\n       bazel \\\n    && : && rm -rf /var/lib/apt/lists/*;\n\n# Docker\nRUN set -x \\\n    && apt-get update \\\n    && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -fy \\\n       curl gnupg-agent apt-transport-https ca-certificates \\\n       software-properties-common \\\n    && curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add - \\\n    && python3.8 `which add-apt-repository` \\\n       \"deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\" \\\n    && apt-get update \\\n    && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -fy \\\n       docker-ce docker-ce-cli containerd.io \\\n    && : && rm -rf /var/lib/apt/lists/*;\n\n# Other Cirque prereqs\nRUN set -x \\\n    && apt-get update \\\n    && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -fy \\\n       sudo socat psmisc tigervnc-standalone-server xorg xauth \\\n       python3-pip python3-venv python3-setuptools libdbus-glib-1-dev \\\n       uuid-runtime libgirepository1.0-dev \\\n    && : && rm -rf /var/lib/apt/lists/*;\n\nCOPY requirements_nogrpc.txt /requirements.txt\n\nRUN set -x \\\n    && pip3 install --no-cache-dir -r requirements.txt \\\n    && xinit -- /usr/bin/Xvnc \\\n    && :\n"
}