{
  "startTime": 1674249774632,
  "endTime": 1674249775460,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 16,
        "lineEnd": 17,
        "columnStart": 5,
        "columnEnd": 44
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM mapfish_print_builder AS builder\n\nFROM tomcat:9.0-jdk17-openjdk-slim-bullseye AS runner\nLABEL maintainer=\"Camptocamp <info@camptocamp.com>\"\n\nRUN perl -0777 -i -pe 's/(<Valve className=\"org.apache.catalina.valves.AccessLogValve\"[^>]*>)/<Valve className=\"ch.qos.logback.access.tomcat.LogbackValve\" quiet=\"true\"\\/>/s' \"${CATALINA_HOME}/conf/server.xml\" \\\n  && echo \"tomcat.util.scan.StandardJarScanFilter.jarsToSkip=*\" >> \"${CATALINA_HOME}/conf/catalina.properties\" \\\n  && echo \"org.apache.catalina.startup.TldConfig.jarsToSkip=*\" >> \"${CATALINA_HOME}/conf/catalina.properties\" \\\n  && echo \"tomcat.util.scan.DefaultJarScanner.jarsToSkip=*\" >> \"${CATALINA_HOME}/conf/catalina.properties\" \\\n  && perl -0777 -i -pe 's/<\\/Context>/<Resources cachingAllowed=\"true\" cacheMaxSize=\"102400\"\\/><\\/Context>/' \"${CATALINA_HOME}/conf/context.xml\" \\\n  && mkdir --parent /usr/local/tomcat/conf/Catalina /usr/local/tomcat/work/Catalina \\\n  && chmod -R g+rwx /usr/local/tomcat/conf/Catalina /usr/local/tomcat/work \\\n  && chgrp -R root /usr/local/tomcat/conf/Catalina /usr/local/tomcat/work \\\n  && chmod g+r /usr/local/tomcat/conf/* \\\n  && apt-get update \\\n  && apt-get upgrade --assume-yes \\\n  && apt-get install -y --assume-yes --no-install-recommends curl \\\n    fonts-liberation fonts-dejavu fontconfig \\\n  && apt-get clean \\\n  && rm --recursive --force /var/lib/apt/lists/*\n\nCOPY --from=builder /src/core/build/webapp \"${CATALINA_HOME}/webapps/ROOT/\"\nCOPY --from=builder /src/examples/build/classes/java/test/org/mapfish/print/HumanAlphaSerie.class \"${CATALINA_HOME}/webapps/ROOT/WEB-INF/classes/org/mapfish/print/\"\nCOPY docker /\n\nRUN mkdir -p \"${CATALINA_HOME}/extlib/classes/org/mapfish/print\" \\\n  && cp -r \"${CATALINA_HOME}/webapps/ROOT/WEB-INF/classes/org/mapfish/print/url\" \"${CATALINA_HOME}/extlib/classes/org/mapfish/print/\" \\\n  && perl -0777 -i -pe 's/<Valve className=\"ch.qos.logback.access.tomcat.LogbackValve\" quiet=\"true\"\\/>//s' \"${CATALINA_HOME}/conf/server.xml\" \\\n  && chmod g+r -R /usr/local/tomcat/conf/ \\\n  && chmod g+rw /usr/local/tomcat/temp/ /usr/local/tomcat/webapps/ROOT/WEB-INF/lib \\\n  && chmod g+rw /usr/local/tomcat/webapps/ROOT/WEB-INF/classes /usr/local/tomcat/webapps/ROOT/WEB-INF/classes/*.xml \\\n  && adduser www-data root\n\nENV LOG_LEVEL=INFO \\\n  SPRING_LOG_LEVEL=WARN \\\n  JASPER_LOG_LEVEL=WARN \\\n  APACHE_LOG_LEVEL=WARN \\\n  SQL_LOG_LEVEL=WARN \\\n  CATALINA_OPTS= \\\n  DEFAULT_LOG_LEVEL=INFO \\\n  TOMCAT_LOG_LEVEL=INFO \\\n  SENTRY_LOG_LEVEL=ERROR \\\n  SENTRY_REPORTING_LOG_LEVEL=WARN \\\n  TOMCAT_LOG_TYPE=classic \\\n  EXTRA_JARS= \\\n  PRINT_YAML_MAX_ALIASES=50 \\\n  JAVA_OPTS=-Dsun.net.inetaddr.ttl=30 \\\n  SENTRY_DSN=\n\nCMD [\"/usr/local/tomcat/bin/docker-start-print\"]\n\nFROM runner AS tester\n\nCOPY jettyRunExtraFiles/mapfish-spring-application-context-override-acceptencetests.xml \\\n  webapps/ROOT/WEB-INF/classes/mapfish-spring-application-context-override.xml\n\nFROM runner AS watcher\n\nRUN apt-get update \\\n  && apt-get install --yes --no-install-recommends python3-pip rsync python3-setuptools \\\n  && apt-get clean \\\n  && rm --recursive --force /var/lib/apt/lists/* \\\n  && python3 -m pip --disable-pip-version-check --no-cache-dir install inotify\n\nFROM runner AS final\n"
}