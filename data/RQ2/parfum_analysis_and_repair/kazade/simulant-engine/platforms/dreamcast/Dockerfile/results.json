{
  "startTime": 1674249242542,
  "endTime": 1674249243525,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 419,
        "columnEnd": 437
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Dockerfile for generating a Fedora image with the full KallistiOS SDK installed so you can compile\n# Dreamcast applications\n\nFROM fedora:30 as Build\nMAINTAINER kazade <kazade@gmail.com>\n\nRUN dnf -y update && dnf clean all && dnf -y install automake wget make git hostname glibc-static bison elfutils flex glibc-devel binutils binutils-devel gdb tar xz bzip2 patch gcc gcc-c++ texinfo libjpeg-turbo-devel libpng-devel python3 cmake mpfr-devel gmp-devel libmpc-devel meson openssl-devel python-devel python-setuptools libffi-devel genisoimage unzip python-pip elfutils-libelf-devel wodim && dnf clean all && pip install --no-cache-dir -U pip\nRUN mkdir -p /opt/toolchains/dc\nRUN git clone https://github.com/KallistiOS/KallistiOS.git /opt/toolchains/dc/kos\nRUN cd /opt/toolchains/dc/kos && git fetch && git checkout 63df9bd57b8b86f586ad0a0bde33f3bc8a49ffb0 && cd -\nRUN git clone --recursive https://github.com/KallistiOS/kos-ports.git /opt/toolchains/dc/kos-ports\n\n# Speed up compilation\nRUN sed -i 's/# makejobs=-jn/makejobs=-j5/' /opt/toolchains/dc/kos/utils/dc-chain/Makefile\n\n# Disable objc, and obj-c++\nRUN sed -i 's/c,c++,objc,obj-c++/c,c++/' /opt/toolchains/dc/kos/utils/dc-chain/Makefile\n\n# Build the toolchain\nRUN cd /opt/toolchains/dc/kos/utils/dc-chain && cp config.mk.testing.sample config.mk && sh ./download.sh && sh ./unpack.sh && make\n\n# Copy the sample config\nRUN cp /opt/toolchains/dc/kos/doc/environ.sh.sample /opt/toolchains/dc/kos/environ.sh\n\n# Create a debug config\nRUN cp /opt/toolchains/dc/kos/doc/environ.sh.sample /opt/toolchains/dc/kos/environ-debug.sh\nRUN sed -i '$ i\\export KOS_CFLAGS=\\\"${KOS_CFLAGS} -DKOS_DEBUG=1\\\"' /opt/toolchains/dc/kos/environ-debug.sh\nRUN cat /opt/toolchains/dc/kos/environ-debug.sh\n\n# Build debug KOS\nRUN source /opt/toolchains/dc/kos/environ-debug.sh; cd /opt/toolchains/dc/kos && make\nRUN mkdir -p /opt/toolchains/dc/kos/lib/dreamcast/debug\nRUN mv /opt/toolchains/dc/kos/lib/dreamcast/*.a /opt/toolchains/dc/kos/lib/dreamcast/debug\nRUN ls -l /opt/toolchains/dc/kos/lib/dreamcast/debug\n\nRUN echo -e \"\\nsource /opt/toolchains/dc/kos/environ.sh\" >> /etc/bash.bashrc\nRUN echo -e \"\\nsource /opt/toolchains/dc/kos/environ.sh\" >> /root/.bashrc\n\n# Build KOS\nRUN source /etc/bash.bashrc; cd /opt/toolchains/dc/kos && make\n\n# FIXME: Restore when kos-ports is fixed\n# RUN source /etc/bash.bashrc; cd /opt/toolchains/dc/kos-ports/libjpeg && make install clean\nRUN source /etc/bash.bashrc; cd /opt/toolchains/dc/kos-ports/libpng && make install clean\nRUN . /etc/bash.bashrc; cd /opt/toolchains/dc/kos/utils/makeip && make\nRUN . /etc/bash.bashrc; cd /opt/toolchains/dc/kos/utils && git clone https://github.com/Kazade/img4dc.git && cd img4dc && mkdir build && cd build && cmake .. && make\nRUN dnf -y install libisofs-devel\nRUN . /etc/bash.bashrc; cd /opt/toolchains/dc/kos/utils && git clone https://gitlab.com/simulant/mkdcdisc.git && cd mkdcdisc && mkdir build && cd build && meson .. && ninja\n\nFROM fedora:30\nCOPY --from=Build /opt/toolchains /opt/toolchains\nCOPY --from=Build /etc/bash.bashrc /etc/bash.bashrc\nCOPY --from=Build /root/.bashrc /root/.bashrc\nCOPY --from=Build /opt/toolchains/dc/kos/utils/mkdcdisc/build/mkdcdisc /usr/bin/mkdcdisc\nRUN dnf install -y cmake make libpng genisoimage findutils git pkgconf-pkg-config libisofs\n\n"
}