{
  "startTime": 1674247916838,
  "endTime": 1674247917692,
  "originalSmells": [
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 11,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 86
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM i386/centos:7\n\nENV ARCH=i386 DIST=centos7\n\n# inherited by build scripts\nARG VERBOSE=0\n\n# thanks CloudLinux, you're really helping us poor AppImage creators seeking for maximum compatibility by providing devtoolset i386 builds\nRUN yum install -y yum-utils && \\\n    rpm --import https://repo.cloudlinux.com/cloudlinux/security/RPM-GPG-KEY-CloudLinux && \\\n    yum-config-manager --add-repo https://www.repo.cloudlinux.com/cloudlinux/7/sclo/devtoolset-8/i386/ && \\\n    yum install -y devtoolset-8 \\\n        wget make gnupg zip git subversion glib2-devel automake libtool patch zlib-devel cairo-devel openssl-devel curl-devel \\\n        fuse-devel vim-common zlib-devel desktop-file-utils fuse fuse-libs gtest-devel \\\n        libXft-devel librsvg2-devel curl libffi-devel gettext-devel file python2 bzip2 && rm -rf /var/cache/yum\n\nCOPY /entrypoint-centos.sh /entrypoint.sh\n\nENTRYPOINT [\"/entrypoint.sh\"]\nSHELL [\"/entrypoint.sh\", \"bash\", \"-c\"]\n\nRUN wget https://artifacts.assassinate-you.net/prebuilt-cmake/cmake-v3.19.1-centos7-i386.tar.gz -O- | tar xz --strip-components=1 -C/usr/local\n\n# pcre >= 8.40 required by glib 2.56\n# however, we can just use the latest version, which is 8.44 as of Dec 2020\nARG PCRE_VERSION=8.40\nCOPY build-pcre.sh /\nRUN bash -x /build-pcre.sh\n\n# set up PKG_CONFIG_PATH to ensure that deps in /deps have precedence\n# also, pcre is a dep of glib\nENV PKG_CONFIG_PATH=/deps/lib/pkgconfig:/deps/share/pkgconfig\n\nARG GLIB_VERSION=2.56.0\nCOPY build-glib.sh /\nRUN bash -x /build-glib.sh\n\nARG GIT_VERSION=2.29.2\nCOPY build-git.sh /\nRUN bash -x /build-git.sh\n\nARG ZSYNC_VERSION=0.6.2\nCOPY build-zsync.sh /\nRUN bash -x /build-zsync.sh\n\n# create unprivileged user for non-build-script use of this image\n# build-in-docker.sh will likely not use this one, as it enforces the caller's uid inside the container\nRUN useradd --system build\nUSER build\n"
}