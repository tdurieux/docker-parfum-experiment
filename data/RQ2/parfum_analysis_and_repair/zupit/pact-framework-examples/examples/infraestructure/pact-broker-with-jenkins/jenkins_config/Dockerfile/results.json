{
  "startTime": 1674256274406,
  "endTime": 1674256275026,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 3,
        "columnEnd": 132
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 3,
        "columnEnd": 31
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 3,
        "columnEnd": 31
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 3,
        "columnEnd": 55
      }
    }
  ],
  "repairedDockerfile": "# Starting off with the Jenkins base Image\nFROM jenkins/jenkins:lts\nUSER root\n# Installing the plugins we need using the in-built install-plugins.sh script\n\nRUN apt-get update && \\\n    apt-get -y --no-install-recommends install apt-transport-https \\\n      ca-certificates \\\n      curl \\\n      gnupg2 \\\n      software-properties-common && \\\n    curl -fsSL https://download.docker.com/linux/$(. /etc/os-release; echo \"$ID\")/gpg > /tmp/dkey; rm -rf /var/lib/apt/lists/*; apt-key add /tmp/dkey && \\\n    add-apt-repository \\\n      \"deb [arch=amd64] https://download.docker.com/linux/$(. /etc/os-release; echo \"$ID\") \\\n      $(lsb_release -cs) \\\n      stable\" && \\\n   apt-get update && \\\n   apt-get -y --no-install-recommends install docker-ce && \\\n   curl -f -L \"https://github.com/docker/compose/releases/download/1.27.4/docker-compose-Linux-x86_64\" -o /usr/local/bin/docker-compose && \\\n   chmod +x /usr/local/bin/docker-compose \\\n    && usermod -aG docker jenkins && \\\n      usermod -aG root jenkins \\\n      && chmod g+s /usr/bin/docker\n\nRUN /usr/local/bin/install-plugins.sh workflow-aggregator git ssh ssh-agent docker-plugin  \\\n    docker-build-step dockerhub-notification oauth-credentials job-dsl simple-theme-plugin \\\n    docker-workflow blueocean matrix-auth gravatar pipeline-input-step nodejs \\\n    credentials-binding jquery permissive-script-security durable-task\n\n# Setting up environment variables for Jenkins admin user\nENV JENKINS_USER admin\nENV JENKINS_PASS admin\n\n# Skip the initial setup wizard\nENV JAVA_OPTS=\"-Djenkins.install.runSetupWizard=false -Dpermissive-script-security.enabled=true -Dorg.jenkinsci.plugins.durabletask.BourneShellScript.LAUNCH_DIAGNOSTICS=true\"\n\n# Start-up scripts to set number of executors and creating the admin user\nCOPY executors.groovy /usr/share/jenkins/ref/init.groovy.d/executors.groovy\nCOPY default-user.groovy /usr/share/jenkins/ref/init.groovy.d/default-user.groovy\nCOPY create-jobs.groovy /usr/share/jenkins/ref/init.groovy.d/create-jobs.groovy\nCOPY jobs.groovy /var/jenkins-jobs/jobs.groovy\nCOPY jenkins-theme.groovy /usr/share/jenkins/ref/init.groovy.d/jenkins-theme.groovy\nCOPY config-node.groovy /usr/share/jenkins/ref/init.groovy.d/config-node.groovy\n\nVOLUME /var/jenkins_home\nRUN chmod -R 777 /var/jenkins_home"
}