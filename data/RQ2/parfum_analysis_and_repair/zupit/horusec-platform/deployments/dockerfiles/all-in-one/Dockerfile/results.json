{
  "startTime": 1674256258242,
  "endTime": 1674256258979,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 17
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright 2021 ZUP IT SERVICOS EM TECNOLOGIA E INOVACAO SA\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nFROM golang:1.17-alpine AS builder\n\nRUN apk add --no-cache build-base\n\nADD . .\n\nRUN cd auth && go get -t -v -d ./...\nRUN cd auth && OOS=linux go build -a -o /bin/horusec-auth-main ./cmd/app/main.go\n\nRUN cd core && go get -t -v -d ./...\nRUN cd core && OOS=linux go build -a -o /bin/horusec-core-main ./cmd/app/main.go\n\nRUN cd api && go get -t -v -d ./...\nRUN cd api && OOS=linux go build -a -o /bin/horusec-api-main ./cmd/app/main.go\n\nRUN cd analytic && go get -t -v -d ./...\nRUN cd analytic && OOS=linux go build -a -o /bin/horusec-analytic-main ./cmd/app/main.go\n\nRUN cd vulnerability && go get -t -v -d ./...\nRUN cd vulnerability && OOS=linux go build -a -o /bin/horusec-vulnerability-main ./cmd/app/main.go\n\nRUN cd webhook && go get -t -v -d ./...\nRUN cd webhook && OOS=linux go build -a -o /bin/horusec-webhook-main ./cmd/app/main.go\n\nFROM node:16.14.0-alpine3.14 AS builder-manager\n\nWORKDIR /usr/src/app\n\nADD . .\n\nRUN cd manager && yarn\nRUN cd manager && yarn build\n\nFROM docker:dind\n\nENV HORUSEC_DISABLE_EMAILS=true\nENV HORUSEC_ENABLE_DEFAULT_USER=true\n\nRUN apk add --no-cache nginx\nRUN mkdir -p /run/nginx\n\nCOPY --from=builder-backend /bin/horusec-auth-main /bin/horusec-auth-main\nCOPY --from=builder-backend /bin/horusec-core-main /bin/horusec-core-main\nCOPY --from=builder-backend /bin/horusec-api-main /bin/horusec-api-main\nCOPY --from=builder-backend /bin/horusec-analytic-main /bin/horusec-analytic-main\nCOPY --from=builder-backend /bin/horusec-vulnerability-main /bin/horusec-vulnerability-main\nCOPY --from=builder-backend /bin/horusec-webhook-main /bin/horusec-webhook-main\n\nCOPY deployments/dockerfiles/all-in-one/entrypoint.sh /usr/local/bin\nRUN chmod +x /usr/local/bin/entrypoint.sh\n\nCOPY deployments/scripts/migration-run.sh /usr/local/bin\nRUN chmod +x /usr/local/bin/migration-run.sh\n\nCOPY migrations/source /migrations/source\n\nCOPY --from=builder-manager /usr/src/app/manager/build /var/www\nCOPY ./manager/deployments/nginx.conf /etc/nginx/conf.d/default.conf\n\nENTRYPOINT [ \"entrypoint.sh\" ]\n"
}