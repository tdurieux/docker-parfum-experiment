{
  "startTime": 1674250143720,
  "endTime": 1674250144659,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 27,
        "columnEnd": 57
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "### Build stage ###\nFROM node:14-alpine3.11 as build-stage\n\n# Create app directory\nWORKDIR /usr/app\n\n# Copy the important file\nCOPY . .\n\n# Install app dependencies\nRUN apk update -q && apk --no-cache add libc6-compat python make g++ autoconf automake libtool -q\n\n# Install app dependencies\nRUN yarn\n\n# Build the application for deployement\nRUN yarn run build\n\nRUN rm -rf node_modules && yarn install --production=true && yarn cache clean;\n\n### Deployement server nginx ###\nFROM node:14-alpine3.11 as production-stage\n\n# Create app directory\nWORKDIR /usr/app/\n\n# Environnement variable redis/postgres/webport\nENV REDIS_PORT 6379\n# Environnement variable nodejs\nENV NODE_ENV production\nENV PORT 8080\n\n# Copy from build stage\nCOPY --from=build-stage /usr/app/ /usr/app/\nCOPY --from=build-stage /usr/app/docker/scripts/wait_for_db.sh /usr/app/wait_for_db.sh\n\n# Remove all the unnecessary files\nRUN rm -rf client/public client/src client/.browserslistrc .eslintrc.js .gitignore postcss.config.js client/vue.config.js client/babel.config.js docker-compose.yml /root/.npm\n\nRUN mkdir env && touch env/production.env\n\nRUN apk update -q && apk --no-cache add curl -q\n\n# Healthcheck API, WEB, REDIS\nHEALTHCHECK --interval=30s --timeout=3s CMD ( curl -f http://localhost:8080/api/status || exit 1 )\n\n# Start Server\nCMD [\"/bin/sh\", \"wait_for_db.sh\", \"postgres_db:5432\", \"--\", \"npm\", \"run\", \"start\"]"
}