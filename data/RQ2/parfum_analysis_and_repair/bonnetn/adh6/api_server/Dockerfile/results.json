{
  "startTime": 1674248325253,
  "endTime": 1674248325899,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 23,
        "lineEnd": 29,
        "columnStart": 9,
        "columnEnd": 26
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 23,
        "lineEnd": 29,
        "columnStart": 9,
        "columnEnd": 26
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM loicmahieu/alpine-envsubst AS generate_config\n\nARG CAS_PROFILE_URL=\"my-sso/oauth2.0/profile\"\nARG DATABASE_HOST=\"localhost\"\nARG DATABASE_PORT=\"1234\"\nARG DATABASE_USERNAME=\"my_db_username\"\nARG DATABASE_PASSWORD=\"my_db_password\"\nARG DATABASE_DB_NAME=\"adh6\"\n\nWORKDIR /tmp\nCOPY api_server/config/ .\nRUN cat CONFIGURATION.template.py | envsubst | tee CONFIGURATION.py\n\nFROM python:3.7-slim-stretch\nEXPOSE 443\n\n# Make TLS self-signed certificate\nRUN openssl genrsa -out /etc/ssl/private/adh6.key 2048 \\\n    && openssl req -new -key /etc/ssl/private/adh6.key -out /tmp/adh6.csr -subj \"/C=FR/ST=Essonne/O=MiNET/CN=api_server\" \\\n    && openssl x509 -req -days 365 -in /tmp/adh6.csr -signkey /etc/ssl/private/adh6.key -out /etc/ssl/certs/adh6.crt\n\n# Install dependencies\n    RUN apt update \\\n      && apt install --no-install-recommends -y \\\n      build-essential \\\n      python3-dev \\\n      libpcre3 \\\n      libpcre3-dev \\\n      libssl-dev \\\n      libmariadbclient-dev \\\n      && useradd uwsgi && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /adh6/api_server\n\n# Install python requirements\nCOPY api_server/requirements.txt ./\nRUN pip3 install --no-cache-dir -r ./requirements.txt\n\n# Build all MIBs required by pysnmp\nRUN mibdump.py CISCO-VLAN-MEMBERSHIP-MIB IF-MIB CISCO-MAC-AUTH-BYPASS-MIB\nRUN chmod 755 /root\nRUN chown -R uwsgi:www-data /root/.pysnmp\n# Copy source files\nCOPY ./openapi/spec.yaml ../openapi/\nCOPY ./api_server ./\nCOPY --from=generate_config /tmp/CONFIGURATION.py config/\n\n\nENV ENVIRONMENT=\"dev\"\n\n# Launch the app\nCMD [\"uwsgi\", \"--ini\", \"uwsgi.ini\"]\n"
}