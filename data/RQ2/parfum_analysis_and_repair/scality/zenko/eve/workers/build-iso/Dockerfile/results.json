{
  "startTime": 1674216968822,
  "endTime": 1674216970340,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 159
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 88
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 61
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM centos:7\nWORKDIR /workdir\n\nENV PATH=$PATH:/usr/local/go/bin\nENV GO_VERSION 1.14.3\nENV HELM_VERSION v3.2.3\nENV YQ_VERSION v4.6.3\nENV YQ_BINARY yq_linux_amd64\nENV KUSTOMIZE_VERSION v4.4.1\nENV GO_VERSION 1.16.12\nENV SKOPEO_VERSION v1.5.2\n\nRUN yum install -y yum-utils gettext epel-release && \\\n    yum-config-manager \\\n        --add-repo \\\n        https://download.docker.com/linux/centos/docker-ce.repo && rm -rf /var/cache/yum\nRUN yum install -y python3 make wget mkisofs git docker-ce docker-ce-cli isomd5sum jq && rm -rf /var/cache/yum\nRUN curl --fail -LO https://dl.google.com/go/go${GO_VERSION}.linux-amd64.tar.gz\nRUN tar -C /usr/local -xzf go${GO_VERSION}.linux-amd64.tar.gz && rm go${GO_VERSION}.linux-amd64.tar.gz\nRUN curl --fail -sSL https://get.helm.sh/helm-${HELM_VERSION}-linux-amd64.tar.gz | \\\n    tar -xvz && install linux-amd64/helm /usr/local/bin\nRUN curl --fail -L https://github.com/mikefarah/yq/releases/download/${YQ_VERSION}/${YQ_BINARY} -o /usr/bin/yq && \\\n    chmod +x /usr/bin/yq\nRUN curl -f -sSL https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize%2F${KUSTOMIZE_VERSION}/kustomize_${KUSTOMIZE_VERSION}_linux_amd64.tar.gz | \\\n    tar xzvf - && mv kustomize /usr/local/bin\nRUN yum install -y gcc gpgme-devel libassuan-devel btrfs-progs-devel device-mapper-devel && rm -rf /var/cache/yum\nRUN git clone --depth 1 --branch ${SKOPEO_VERSION} https://github.com/containers/skopeo $GOPATH/src/github.com/containers/skopeo && \\\n    cd  $GOPATH/src/github.com/containers/skopeo && \\\n    DISABLE_DOCS=1 make bin/skopeo && \\\n    DISABLE_DOCS=1 make install\n\n# install python + buildbot worker\nRUN pip3 install --no-cache-dir buildbot-worker\nCMD buildbot-worker create-worker . \"$BUILDMASTER:$BUILDMASTER_PORT\" \"$WORKERNAME\" \"$WORKERPASS\" \\\n    && buildbot-worker start --nodaemon\n"
}