diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/scality/zenko/eve/workers/build-iso/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/scality/zenko/eve/workers/build-iso/Dockerfile/repaired.Dockerfile
index 115f7be..c269a2d 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/scality/zenko/eve/workers/build-iso/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/scality/zenko/eve/workers/build-iso/Dockerfile/repaired.Dockerfile
@@ -13,23 +13,23 @@ ENV SKOPEO_VERSION v1.5.2
 RUN yum install -y yum-utils gettext epel-release && \
     yum-config-manager \
         --add-repo \
-        https://download.docker.com/linux/centos/docker-ce.repo
-RUN yum install -y python3 make wget mkisofs git docker-ce docker-ce-cli isomd5sum jq
+        https://download.docker.com/linux/centos/docker-ce.repo && rm -rf /var/cache/yum
+RUN yum install -y python3 make wget mkisofs git docker-ce docker-ce-cli isomd5sum jq && rm -rf /var/cache/yum
 RUN curl --fail -LO https://dl.google.com/go/go${GO_VERSION}.linux-amd64.tar.gz
-RUN tar -C /usr/local -xzf go${GO_VERSION}.linux-amd64.tar.gz
+RUN tar -C /usr/local -xzf go${GO_VERSION}.linux-amd64.tar.gz && rm go${GO_VERSION}.linux-amd64.tar.gz
 RUN curl --fail -sSL https://get.helm.sh/helm-${HELM_VERSION}-linux-amd64.tar.gz | \
     tar -xvz && install linux-amd64/helm /usr/local/bin
 RUN curl --fail -L https://github.com/mikefarah/yq/releases/download/${YQ_VERSION}/${YQ_BINARY} -o /usr/bin/yq && \
     chmod +x /usr/bin/yq
-RUN curl -sSL https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize%2F${KUSTOMIZE_VERSION}/kustomize_${KUSTOMIZE_VERSION}_linux_amd64.tar.gz | \
+RUN curl -f -sSL https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize%2F${KUSTOMIZE_VERSION}/kustomize_${KUSTOMIZE_VERSION}_linux_amd64.tar.gz | \
     tar xzvf - && mv kustomize /usr/local/bin
-RUN yum install -y gcc gpgme-devel libassuan-devel btrfs-progs-devel device-mapper-devel
+RUN yum install -y gcc gpgme-devel libassuan-devel btrfs-progs-devel device-mapper-devel && rm -rf /var/cache/yum
 RUN git clone --depth 1 --branch ${SKOPEO_VERSION} https://github.com/containers/skopeo $GOPATH/src/github.com/containers/skopeo && \
     cd  $GOPATH/src/github.com/containers/skopeo && \
     DISABLE_DOCS=1 make bin/skopeo && \
     DISABLE_DOCS=1 make install
 
 # install python + buildbot worker
-RUN pip3 install buildbot-worker
+RUN pip3 install --no-cache-dir buildbot-worker
 CMD buildbot-worker create-worker . "$BUILDMASTER:$BUILDMASTER_PORT" "$WORKERNAME" "$WORKERPASS" \
     && buildbot-worker start --nodaemon