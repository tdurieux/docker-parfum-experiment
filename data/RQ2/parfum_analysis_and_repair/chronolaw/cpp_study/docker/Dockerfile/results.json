{
  "startTime": 1674251072240,
  "endTime": 1674251073699,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 7,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 37,
        "lineEnd": 42,
        "columnStart": 7,
        "columnEnd": 48
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 37,
        "lineEnd": 42,
        "columnStart": 7,
        "columnEnd": 48
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Dockerfile\n# chrono@2020-09\n\n# curl -fsSL https://get.docker.com | bash -s docker --mirror Aliyun\n# sudo service docker start\n# sudo usermod -aG docker ${USER}\n\n# docker build -t chronolaw/cpp_study .\n\n# docker run -it chronolaw/cpp_study\n# docker run -it --rm chronolaw/cpp_study\n\n# check for http server in http_study\n# docker inspect bridge\n# curl 172.17.0.3/11-1 -v\n\n# docker login\n# docker push chronolaw/cpp_study\n# docker pull chronolaw/cpp_study\n\nARG SRC_IMAGE=\"gcc:7\"\n\nFROM ${SRC_IMAGE}\n\n#LABEL version=\"2020-09\"\n\n# gcc-multilib g++-multilib\n# linux-tools-common\n# linux-tools-4.4.0-31-generic linux-cloud-tools-4.4.0-31-generic linux-tools-generic linux-cloud-tools-generic\n\nARG JSON_VERSION=\"3.9.1\"\nARG CPR_VERSION=\"1.4.0\"\nARG LUAJIT_VERSION=\"2.1-20200102\"\nARG LUABRIDAGE_VERSION=\"2.6\"\nARG GPERF_VERSION=\"2.8\"\n\nRUN DEBIAN_FRONTEND=noninteractive apt-get update \\\n    && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y \\\n        vim cmake gdb pstack strace \\\n        libmsgpack-dev protobuf-compiler libprotobuf-dev libprotoc-dev \\\n        libcurl4-openssl-dev libzmq3-dev \\\n        python3-dev python3-pip \\\n        google-perftools libgoogle-perftools-dev \\\n    && pip3 install --no-cache-dir pybind11 \\\n    && cd \\\n    && git clone https://github.com/chronolaw/cpp_study --depth=1 \\\n    && cp ~/cpp_study/env/vimrc ~/.vimrc \\\n    && cp ~/cpp_study/env/bashrc ~/.bashrc \\\n    && cp ~/cpp_study/env/gitconfig ~/.gitconfig \\\n    && mkdir github \\\n    && cd github \\\n    && curl -fsL https://github.com/nlohmann/json/releases/download/v${JSON_VERSION}/json.hpp -o json.hpp \\\n    && ln -s ~/github/json.hpp ~/cpp_study/common/ \\\n    && curl -fsL https://github.com/whoshuu/cpr/archive/${CPR_VERSION}.tar.gz -o cpr.tgz \\\n    && tar xfz cpr.tgz \\\n    && cd cpr-${CPR_VERSION} \\\n    && cmake . -DUSE_SYSTEM_CURL=ON -DBUILD_CPR_TESTS=OFF \\\n    && make && make install && make clean \\\n    && cd .. \\\n    && curl -fsL https://github.com/openresty/luajit2/archive/v${LUAJIT_VERSION}.tar.gz -o luajit.tgz \\\n    && tar xfz luajit.tgz \\\n    && cd luajit2-${LUAJIT_VERSION} \\\n    && make && make install && make clean \\\n    && ln -s /usr/local/lib/libluajit-5.1.so.2 /lib/x86_64-linux-gnu/ \\\n    && cd .. \\\n    && curl -fsL https://github.com/vinniefalco/LuaBridge/archive/${LUABRIDAGE_VERSION}.tar.gz -o LuaBridge.tgz \\\n    && tar xfz LuaBridge.tgz \\\n    && ln -s ~/github/LuaBridge-${LUABRIDAGE_VERSION}/Source/LuaBridge/  ~/cpp_study/common/ \\\n    && curl -fsL https://github.com/gperftools/gperftools/releases/download/gperftools-${GPERF_VERSION}/gperftools-${GPERF_VERSION}.tar.gz -o gperf.tgz \\\n    && tar xfz gperf.tgz \\\n    && ln -s ~/github/gperftools-${GPERF_VERSION}/pprof-symbolize /bin/pprof \\\n    && git clone https://github.com/brendangregg/FlameGraph.git --depth=1 \\\n    && ln -s ~/github/FlameGraph/flamegraph.pl ~/cpp_study/section4/ \\\n    && rm *.tgz \\\n    && DEBIAN_FRONTEND=noninteractive apt-get autoremove -y && rm -rf /var/lib/apt/lists/*;\n\n\n#CMD [\"/bin/bash\"]\nCMD [\"/bin/bash\", \"-c\", \"cd ~/cpp_study;/bin/bash\"]\n"
}