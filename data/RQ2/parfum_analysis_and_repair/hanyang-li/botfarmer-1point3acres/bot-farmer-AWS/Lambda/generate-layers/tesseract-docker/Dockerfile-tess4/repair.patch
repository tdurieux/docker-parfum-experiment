diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/hanyang-li/botfarmer-1point3acres/bot-farmer-AWS/Lambda/generate-layers/tesseract-docker/Dockerfile-tess4 b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/hanyang-li/botfarmer-1point3acres/bot-farmer-AWS/Lambda/generate-layers/tesseract-docker/Dockerfile-tess4/repaired.Dockerfile
index ff78711..a295bf0 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/hanyang-li/botfarmer-1point3acres/bot-farmer-AWS/Lambda/generate-layers/tesseract-docker/Dockerfile-tess4
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/hanyang-li/botfarmer-1point3acres/bot-farmer-AWS/Lambda/generate-layers/tesseract-docker/Dockerfile-tess4/repaired.Dockerfile
@@ -18,27 +18,28 @@ ARG TESSERACT_DATA_SUFFIX=
 ARG TESSERACT_DATA_VERSION=4.0.0
 
 RUN yum makecache fast; yum clean all && yum -y update && yum -y upgrade; yum clean all && \
-    yum install -y yum-plugin-ovl; yum clean all && yum -y groupinstall "Development Tools"; yum clean all
+    yum install -y yum-plugin-ovl; rm -rf /var/cache/yum yum clean all && yum -y groupinstall "Development Tools"; yum clean all
 
 RUN yum -y install gcc gcc-c++ make autoconf aclocal automake libtool \
     libjpeg-devel libpng-devel libtiff-devel zlib-devel \
     libzip-devel freetype-devel lcms2-devel libwebp-devel \
-    libicu-devel tcl-devel tk-devel pango-devel cairo-devel; yum clean all
+    libicu-devel tcl-devel tk-devel pango-devel cairo-devel; rm -rf /var/cache/yum yum clean all
 
 WORKDIR ${TMP_BUILD}/leptonica-build
-RUN curl -L https://github.com/DanBloomberg/leptonica/releases/download/${LEPTONICA_VERSION}/leptonica-${LEPTONICA_VERSION}.tar.gz | tar xz && cd ${TMP_BUILD}/leptonica-build/leptonica-${LEPTONICA_VERSION} && \
-    ./configure --prefix=${LEPTONICA} && make && make install && cp -r ./src/.libs /opt/liblept
+RUN curl -f -L https://github.com/DanBloomberg/leptonica/releases/download/${LEPTONICA_VERSION}/leptonica-${LEPTONICA_VERSION}.tar.gz | tar xz && cd ${TMP_BUILD}/leptonica-build/leptonica-${LEPTONICA_VERSION} && \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=${LEPTONICA} && make && make install && cp -r ./src/.libs /opt/liblept
 
 RUN echo "/opt/leptonica/lib" > /etc/ld.so.conf.d/leptonica.conf && ldconfig
 
 WORKDIR ${TMP_BUILD}/autoconf-build
-RUN curl https://ftp.gnu.org/gnu/autoconf-archive/autoconf-archive-${AUTOCONF_ARCHIVE_VERSION}.tar.xz | tar xJ && \
-    cd autoconf-archive-${AUTOCONF_ARCHIVE_VERSION} && ./configure && make && make install && cp ./m4/* /usr/share/aclocal/
+RUN curl -f https://ftp.gnu.org/gnu/autoconf-archive/autoconf-archive-${AUTOCONF_ARCHIVE_VERSION}.tar.xz | tar xJ && \
+    cd autoconf-archive-${AUTOCONF_ARCHIVE_VERSION} && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" && make && make install && cp ./m4/* /usr/share/aclocal/
 
 WORKDIR ${TMP_BUILD}/tesseract-build
-RUN curl -L https://github.com/tesseract-ocr/tesseract/archive/${TESSERACT_VERSION}.tar.gz | tar xz && \
-    cd tesseract-${TESSERACT_VERSION} && ./autogen.sh  && PKG_CONFIG_PATH=/opt/leptonica/lib/pkgconfig LIBLEPT_HEADERSDIR=/opt/leptonica/include \
-    ./configure --prefix=${TESSERACT} --with-extra-includes=/opt/leptonica/include --with-extra-libraries=/opt/leptonica/lib && make && make install
+RUN curl -f -L https://github.com/tesseract-ocr/tesseract/archive/${TESSERACT_VERSION}.tar.gz | tar xz && \
+    cd tesseract-${TESSERACT_VERSION} && ./autogen.sh && PKG_CONFIG_PATH=/opt/leptonica/lib/pkgconfig LIBLEPT_HEADERSDIR=/opt/leptonica/include \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
+    --prefix=${TESSERACT} --with-extra-includes=/opt/leptonica/include --with-extra-libraries=/opt/leptonica/lib && make && make install
 
 WORKDIR /opt
 RUN mkdir -p ${DIST}/lib && mkdir -p ${DIST}/bin && \
@@ -50,9 +51,9 @@ RUN mkdir -p ${DIST}/lib && mkdir -p ${DIST}/bin && \
     find ${DIST}/lib -name '*.so*' | xargs strip -s
 
 WORKDIR ${DIST}/tesseract/share/tessdata
-RUN curl -L https://github.com/tesseract-ocr/tessdata${TESSERACT_DATA_SUFFIX}/raw/${TESSERACT_DATA_VERSION}/osd.traineddata > osd.traineddata && \
-    curl -L https://github.com/tesseract-ocr/tessdata${TESSERACT_DATA_SUFFIX}/raw/${TESSERACT_DATA_VERSION}/eng.traineddata > eng.traineddata && \
-    curl -L https://github.com/tesseract-ocr/tessdata${TESSERACT_DATA_SUFFIX}/raw/${TESSERACT_DATA_VERSION}/${OCR_LANG}.traineddata > ${OCR_LANG}.traineddata
+RUN curl -f -L https://github.com/tesseract-ocr/tessdata${TESSERACT_DATA_SUFFIX}/raw/${TESSERACT_DATA_VERSION}/osd.traineddata > osd.traineddata && \
+    curl -f -L https://github.com/tesseract-ocr/tessdata${TESSERACT_DATA_SUFFIX}/raw/${TESSERACT_DATA_VERSION}/eng.traineddata > eng.traineddata && \
+    curl -f -L https://github.com/tesseract-ocr/tessdata${TESSERACT_DATA_SUFFIX}/raw/${TESSERACT_DATA_VERSION}/${OCR_LANG}.traineddata > ${OCR_LANG}.traineddata
 
 COPY . ${DIST}/tesseract/share/tessdata/