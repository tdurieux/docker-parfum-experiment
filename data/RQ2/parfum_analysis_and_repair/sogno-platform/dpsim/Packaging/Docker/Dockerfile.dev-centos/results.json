{
  "startTime": 1674218184082,
  "endTime": 1674218185313,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 111,
        "lineEnd": 111,
        "columnStart": 4,
        "columnEnd": 76
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 100,
        "lineEnd": 100,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 124,
        "lineEnd": 124,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 125,
        "lineEnd": 125,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 126,
        "lineEnd": 126,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 131,
        "lineEnd": 131,
        "columnStart": 4,
        "columnEnd": 72
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 112,
        "lineEnd": 112,
        "columnStart": 4,
        "columnEnd": 32
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM centos:8\n\nLABEL \\\n\torg.label-schema.schema-version = \"1.0.0\" \\\n\torg.label-schema.name = \"DPsim\" \\\n\torg.label-schema.license = \"MPL 2.0\" \\\n\torg.label-schema.url = \"http://dpsim.fein-aachen.org/\" \\\n\torg.label-schema.vcs-url = \"https://github.com/sogno-platform/dpsim\"\n\nRUN cd /etc/yum.repos.d/ && sed -i 's/mirrorlist/#mirrorlist/g' /etc/yum.repos.d/CentOS-* && sed -i 's|#baseurl=http://mirror.centos.org|baseurl=http://vault.centos.org|g' /etc/yum.repos.d/CentOS-* && yum update -y\n\nRUN dnf -y update && \\\n    dnf install -y epel-release dnf-plugins-core && \\\n    dnf install -y https://rpms.remirepo.net/enterprise/remi-release-8.rpm && \\\n    dnf config-manager --set-enabled powertools && \\\n    dnf config-manager --set-enabled remi\n\n# CUDA dependencies\nRUN dnf config-manager --add-repo https://developer.download.nvidia.com/compute/cuda/repos/rhel8/x86_64/cuda-rhel8.repo && \\\n    dnf --refresh -y install cuda-compiler-11-4 cuda-libraries-devel-11-4 cuda-nvprof-11-4 && \\\n    ln -s cuda-11.4 /usr/local/cuda\n\nENV PATH=\"/usr/local/cuda/bin:${PATH}\"\nENV LD_LIBRARY_PATH=\"/usr/local/cuda/lib64:${LD_LIBRARY_PATH}\"\n\n# Toolchain\nRUN dnf -y install \\\n\tgit clang gdb ccache \\\n\tredhat-rpm-config \\\n\trpmdevtools \\\n\tmake cmake ninja-build \\\n\tdoxygen \\\n\tgraphviz \\\n\tpandoc \\\n\tpython3-pip \\\n\tpkg-config \\\n    wget \\\n    libarchive \\\n    openblas-devel \\\n    gcc-gfortran\n\n# Dependencies\nRUN dnf --refresh -y install \\\n\tpython36-devel \\\n\teigen3-devel \\\n\tlibxml2-devel \\\n\tgraphviz-devel \\\n\tgsl-devel\n\n# VILLAS dependencies\nRUN dnf -y install \\\n    openssl-devel \\\n    libuuid-devel \\\n    libconfig-devel \\\n    libnl3-devel \\\n    libcurl-devel \\\n    jansson-devel \\\n    mosquitto-devel \\\n    libjpeg-devel \\\n    zlib-devel\n\n# CUDARPC and dependencies\nRUN dnf install -y make bash git gcc autoconf libtool automake \\\n                   ncurses-devel zlib-devel binutils-devel mesa-libGL-devel \\\n                   libvdpau-devel mesa-libEGL-devel openssl-devel rpcbind \\\n                   rpcgen texinfo bison flex\n\nENV LD_LIBRARY_PATH=\"/usr/local/lib:/usr/local/lib64:${LD_LIBRARY_PATH}\"\n# copy gitlab-runner ssh credentials into build container\nRUN git clone -b 2.0  --depth 1 --recurse-submodules https://git.rwth-aachen.de/acs/public/virtualization/cricket.git && \\\n    cd cricket && \\\n    make -j16 bin/cricket-client.so LOG=INFO && \\\n    make -j16 bin/cricket-server.so LOG=INFO && \\\n    make -j16 bin/libtirpc.so LOG=INFO && \\\n    make -j16 bin/libtirpc.so.3 LOG=INFO\n\nENV PATH=\"$PWD/cricket/bin:${PATH}\"\nENV LD_LIBRARY_PATH=\"$PWD/cricket/bin:${LD_LIBRARY_PATH}\"\n\n# Install Libwebsockets from source because the repo variant is not suitable\nRUN git clone --branch v4.0-stable --depth 1 https://libwebsockets.org/repo/libwebsockets && \\\n    mkdir -p libwebsockets/build && \\\n    pushd libwebsockets/build && \\\n    cmake -DLWS_WITH_IPV6=ON \\\n          -DLWS_WITHOUT_TESTAPPS=ON \\\n          -DLWS_WITHOUT_EXTENSIONS=OFF \\\n          -DLWS_WITH_SERVER_STATUS=ON \\\n          ${CMAKE_OPTS} .. && \\\n    make -j$(nproc) ${TARGET} && \\\n    popd\n\n\n# Profiling dependencies\nRUN dnf -y install \\\n    graphviz \\\n    libasan \\\n    cppcheck \\\n    gnuplot \\\n\tqt5-qtbase \\\n    qt5-qtsvg\nRUN pip3 install --no-cache-dir gprof2dot\n\n# Install CIMpp from source\nRUN cd /tmp && \\\n\tgit clone --recursive https://github.com/cim-iec/libcimpp.git && \\\n\tmkdir -p libcimpp/build && cd libcimpp/build && \\\n\tcmake -DCMAKE_INSTALL_LIBDIR=/usr/local/lib64 -DUSE_CIM_VERSION=CGMES_2.4.15_16FEB2016 -DBUILD_SHARED_LIBS=ON -DBUILD_ARABICA_EXAMPLES=OFF .. && make -j$(nproc) install && \\\n\trm -rf /tmp/libcimpp\n\n# Install MAGMA from source\nRUN cd /tmp && \\\n    wget https://icl.utk.edu/projectsfiles/magma/downloads/magma-2.6.0.tar.gz && \\\n    tar -xvzf magma-2.6.0.tar.gz && \\\n    mkdir -p magma-2.6.0/build && cd magma-2.6.0/build && \\\n    cmake .. -DMAGMA_ENABLE_CUDA=ON -DCMAKE_INSTALL_PREFIX=/ -DGPU_TARGET='Pascal Turing Ampere' -DBUILD_SHARED_LIBS=on && \\\n    make -j$(nproc) install && rm -rf /tmp/magma-2.6.0 && rm magma-2.6.0.tar.gz\n\n\n\n# CIMpp and VILLAS are installed here\nENV LD_LIBRARY_PATH=\"/usr/local/lib64:${LD_LIBRARY_PATH}\"\n\n# Python dependencies\nADD requirements.txt .\nRUN pip3 install --no-cache-dir -U setuptools\nRUN pip3 install --no-cache-dir -U wheel\nRUN pip3 install --no-cache-dir -r requirements.txt\n\n# Remove this part in the future and use dedicated jupyter Dockerfile\n# Activate Jupyter extensions\nRUN dnf -y --refresh install npm\nRUN pip3 install --no-cache-dir jupyter jupyter_contrib_nbextensions nbconvert nbformat\n\nEXPOSE 8888\n"
}