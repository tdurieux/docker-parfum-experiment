{
  "startTime": 1674255241620,
  "endTime": 1674255242514,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 15,
        "lineEnd": 25,
        "columnStart": 29,
        "columnEnd": 31
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# To build this image, use a command like the following:\n# docker build --build-arg REPOSE_VERSION=latest -t repose-container .\n# To run the built image, use a command like the following:\n# docker run --rm repose-container\nFROM centos:7\n\nMAINTAINER The Repose Team <reposecore@rackspace.com>\n\n# This build-arg is used to pass the Repose version number which will be set up in this image.\nARG REPOSE_VERSION\n\n# The service ports -- one for accepting HTTP traffic to Repose, and the other for connecting a JDWP debugger\n# Note that these are not exposed to the host by default, but can be using the Docker CLI -p or -P flag.\nEXPOSE 8080 10037\n\nRUN yum update -y --quiet && yum install -y --quiet \\\n    git \\\n    ruby-devel \\\n    gcc \\\n    gcc-c++ \\\n    make \\\n    rpm-build \\\n    wget \\\n    curl \\\n    python-setuptools \\\n    java-1.8.0-openjdk-headless && rm -rf /var/cache/yum\nRUN easy_install pip\nRUN pip install --no-cache-dir --upgrade pip setuptools\nRUN wget --quiet -O /etc/yum.repos.d/openrepose.repo https://nexus.openrepose.org/repository/el/openrepose.repo\n\n# Note: The COPY instruction was used rather than VOLUME since the behave of VOLUME varies based on the host OS\nCOPY etc_repose /release-verification/etc_repose\nCOPY fake-services /release-verification/fake-services\nCOPY scripts /release-verification/scripts\nCOPY *.rpm /release-verification/\n\nRUN rm /release-verification/DELETE-ME.rpm\n\nRUN sh /release-verification/scripts/node_install.sh\nRUN npm install --unsafe-perm libxmljs && npm cache clean --force;\n\nRUN sh /release-verification/scripts/fake_keystone_prepare.sh\nRUN cp /release-verification/fake-services/fake-keystone2/package.json /opt/fake-keystone/package.json\nRUN cp /release-verification/fake-services/fake-keystone2/app.js /opt/fake-keystone/app.js\nRUN sh /release-verification/scripts/fake_keystone_install.sh\n\nRUN sh /release-verification/scripts/fake_origin_prepare.sh\nRUN cp /release-verification/fake-services/fake-origin/package.json /opt/fake-origin/package.json\nRUN cp /release-verification/fake-services/fake-origin/app.js /opt/fake-origin/app.js\nRUN sh /release-verification/scripts/fake_origin_install.sh\n\nRUN yum update -y --quiet && sh /release-verification/scripts/repose_install_rpm.sh $REPOSE_VERSION\nRUN cp --force /release-verification/etc_repose/* /etc/repose/\n\nCMD [\"/bin/bash\", \"/release-verification/scripts/verify.sh\"]\n"
}