{
  "startTime": 1674217895686,
  "endTime": 1674217896386,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 7,
        "columnEnd": 82
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 22,
        "columnEnd": 45
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 22,
        "columnEnd": 45
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:2.7\nCOPY requirements.txt /tmp/\nRUN pip install --no-cache-dir -r /tmp/requirements.txt\n\n# Use dockerize to wait for services to come up when bootstraping\nRUN apt-get update && apt-get install --no-install-recommends -y wget && rm -rf /var/lib/apt/lists/*;\nENV DOCKERIZE_VERSION v0.2.0\nRUN wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz \\\n    && tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz\n\nWORKDIR /app\nCOPY setup.py ./\nCOPY otter/ ./otter\nCOPY scripts/ ./scripts\nCOPY twisted/ ./twisted\nCOPY schema/ ./schema\nRUN pip install --no-cache-dir -e .\n\n# Customize config.json\nWORKDIR /\nCOPY config.example.json /\nCOPY docker/otter/docker_entrypoint.sh /\nENTRYPOINT [\"/docker_entrypoint.sh\"]\n\nEXPOSE 9000\nENV PYRSISTENT_NO_C_EXTENSION true\nCMD [\"twistd\", \"-n\", \"--logger=otter.log.observer_factory\", \"otter-api\", \"-c\", \"/etc/otter.json\"]\n"
}