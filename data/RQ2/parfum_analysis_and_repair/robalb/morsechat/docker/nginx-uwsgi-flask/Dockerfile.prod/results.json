{
  "startTime": 1674216593559,
  "endTime": 1674216593957,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 74
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 79
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 74
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 79
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 74
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 79
      }
    }
  ],
  "repairedDockerfile": "# production dockerfile\n########## FIRST STEP: FRONTEND BUILD #######\nFROM node:16 as frontendbuild\n\nWORKDIR /frontend\n\n#first, we copy the package.json and install the dependencies\nCOPY web/package*.json ./\nRUN npm ci\n\n#then we copy the codebase and build it. If there are no changes to the\n#package json, the installation proces will be cached\nCOPY web/ .\nRUN npm run build\n\n########## FINAL STEP: PRODUCTION IMAGE #######\nFROM python:3.9-buster\n\n# ------> nginx <------ #\n# Create user where the nginx app will run\nRUN useradd --no-create-home nginx\n# Make nginx user sudo\n# RUN usermod -aG sudo nginx\n# Install nginx\nRUN apt-get update\nRUN apt-get install --no-install-recommends --no-install-suggests -y nginx && rm -rf /var/lib/apt/lists/*;\n\n# redirect nginx logs to stdout\n# https://stackoverflow.com/questions/22541333/have-nginx-access-log-and-error-log-log-to-stdout-and-stderr-of-master-process\nRUN ln -sf /dev/stdout /var/log/nginx/access.log && ln -sf /dev/stderr /var/log/nginx/error.log\n\n# ------> uWsgi <------ #\n# Install uWsgi\nRUN pip3 install --no-cache-dir uwsgi==2.0.20\n\n# ------> Supervisord <------ #\n# Install Supervisord\nRUN apt-get update\nRUN apt-get install --no-install-recommends --no-install-suggests -y supervisor && rm -rf /var/lib/apt/lists/*;\nRUN rm -rf /var/lib/apt/lists/*\n\n# ------> Load Configs <------ #\n# Remove nginx base config\nRUN rm /etc/nginx/sites-enabled/default\n# copy custom config to all services\nCOPY docker/nginx-uwsgi-flask/conf/nginx.conf /etc/nginx/\nCOPY docker/nginx-uwsgi-flask/conf/flaskapp.conf /etc/nginx/conf.d/\nCOPY docker/nginx-uwsgi-flask/conf/uwsgi.ini /etc/uwsgi/\nCOPY docker/nginx-uwsgi-flask/conf/supervisord.conf /etc/supervisor/conf.d/supervisord.conf\n\n# ------> Other stuffs <------ #\n# Install requirements\nCOPY docker/nginx-uwsgi-flask/requirements.txt /tmp/requirements.txt\nRUN pip3 install --no-cache-dir -r /tmp/requirements.txt\n\nWORKDIR /backend\n\n#copy the backend\nCOPY api .\n\n#copy the frondend files generated in the previous step\nCOPY --from=frontendbuild /frontend/dist ./dist/\n\nENV FLASK_APP=main.py\nENV FLASK_ENV=production\nENV FLASK_DEBUG=0\n\nADD docker/nginx-uwsgi-flask/wait.sh /wait.sh\nRUN chmod +x /wait.sh\n\nENTRYPOINT [\"/wait.sh\", \"mariadb:3306\", \"--\", \"/usr/bin/supervisord\"]\n"
}