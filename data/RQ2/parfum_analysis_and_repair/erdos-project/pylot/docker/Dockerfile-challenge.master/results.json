{
  "startTime": 1674255262177,
  "endTime": 1674255263525,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 100
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 9,
        "columnEnd": 34
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 9,
        "columnEnd": 35
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 99
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 82,
        "lineEnd": 82,
        "columnStart": 56,
        "columnEnd": 79
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 86,
        "lineEnd": 86,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 22,
        "columnEnd": 60
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 37,
        "columnEnd": 62
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 22,
        "columnEnd": 175
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 37,
        "columnEnd": 62
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 22,
        "columnEnd": 60
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 37,
        "columnEnd": 62
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 22,
        "columnEnd": 175
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 37,
        "columnEnd": 86
      }
    }
  ],
  "repairedDockerfile": "FROM nvidia/cudagl:11.4.2-devel-ubuntu20.04\n\nARG HTTP_PROXY\nARG HTTPS_PROXY\nARG http_proxy\n\nRUN apt-get update && apt-get install --no-install-recommends --reinstall -y locales && locale-gen en_US.UTF-8 && rm -rf /var/lib/apt/lists/*;\nENV LANG en_US.UTF-8\nENV LANGUAGE en_US\nENV LC_ALL en_US.UTF-8\n\n# Install tzdata without prompt.\nRUN apt-get -y update\nENV DEBIAN_FRONTEND=noninteractive\nRUN DEBIAN_FRONTEND=noninteractive ; apt-get install --no-install-recommends -y tzdata && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n         build-essential \\\n         cmake \\\n         git \\\n         curl \\\n         vim \\\n         ca-certificates \\\n         libjpeg-dev \\\n         libpng16-16 \\\n         libtiff5 \\\n         libpng-dev \\\n         python-dev \\\n         python3 \\\n         python3-dev \\\n         python-networkx \\\n         python-setuptools \\\n         python3-setuptools \\\n         python-pip \\\n         python3-pip && \\\n         pip install --no-cache-dir --upgrade pip && \\\n         pip3 install --no-cache-dir --upgrade pip && \\\n         rm -rf /var/lib/apt/lists/*\n\n# installing conda\nRUN curl -f -o ~/miniconda.sh -LO https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh && \\\n     chmod +x ~/miniconda.sh && \\\n     ~/miniconda.sh -b -p /opt/conda && \\\n     rm ~/miniconda.sh && \\\n     /opt/conda/bin/conda clean -ya && \\\n     /opt/conda/bin/conda create -n python37 python=3.7 numpy networkx scipy six requests\n\nRUN packages='py_trees==0.8.3 shapely six dictor requests ephem tabulate' \\\n\t&& pip3 install --no-cache-dir ${packages}\n\nWORKDIR /workspace\nCOPY .tmp/PythonAPI /workspace/CARLA/PythonAPI\nENV CARLA_ROOT /workspace/CARLA\n\nENV PATH \"/workspace/CARLA/PythonAPI/carla/dist/carla-leaderboard-py3x.egg\":/opt/conda/envs/python37/bin:/opt/conda/envs/bin:$PATH\n\n# adding CARLA egg to default python environment\nRUN pip install --no-cache-dir --user setuptools py_trees==0.8.3 psutil shapely six dictor requests ephem tabulate\n\nENV SCENARIO_RUNNER_ROOT \"/workspace/scenario_runner\"\nENV LEADERBOARD_ROOT \"/workspace/leaderboard\"\nENV TEAM_CODE_ROOT \"/workspace/team_code\"\nENV PYTHONPATH \"/workspace/CARLA/PythonAPI/carla/dist/carla-leaderboard-py3x.egg\":\"${SCENARIO_RUNNER_ROOT}\":\"${CARLA_ROOT}/PythonAPI/carla\":\"${LEADERBOARD_ROOT}\":${PYTHONPATH}\n\nCOPY .tmp/scenario_runner ${SCENARIO_RUNNER_ROOT}\nCOPY .tmp/leaderboard ${LEADERBOARD_ROOT}\nCOPY .tmp/team_code ${TEAM_CODE_ROOT}\n\nRUN mkdir -p /workspace/results\nRUN chmod +x /workspace/leaderboard/scripts/run_evaluation.sh\n\n\n########################################################################################################################\n########################################################################################################################\n############                                BEGINNING OF USER COMMANDS                                      ############\n########################################################################################################################\n########################################################################################################################\n\nRUN apt-get update && apt-get install --no-install-recommends -y clang libgeos-dev python-opencv libqt5core5a libeigen3-dev cmake qtbase5-dev python3-tk libcudnn8 cuda-toolkit-11-4 ssh python3-pygame && rm -rf /var/lib/apt/lists/*;\nRUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y\nENV PATH=\"/root/.cargo/bin/:${PATH}\"\nRUN rustup default nightly\nRUN packages='wheel setuptools setuptools-rust fire' && pip install --no-cache-dir ${packages}\nRUN git clone https://github.com/erdos-project/erdos.git && cd erdos && python3 python/setup.py install --user\n\nRUN packages='absl-py cvxpy gdown lapsolver matplotlib==3.4.3 motmetrics numpy==1.19.5 open3d==0.13.0 opencv-python>=4.1.0.25 opencv-contrib-python>=4.1.0.25 pillow>=6.2.2 pytest scikit-image==0.18.3 scipy==1.7.1 shapely==1.6.4 tensorflow-gpu==2.5.1 torch==1.4.0 torchvision==0.5.0 filterpy==1.4.1 scikit-learn==1.0 imgaug==0.2.8 nonechucks==0.3.1 Cython progress pyquaternion nuscenes-devkit' \\\n\t&& pip install --no-cache-dir ${packages}\nENV PYTHONPATH ${TEAM_CODE_ROOT}/:${TEAM_CODE_ROOT}/dependencies/:${PYTHONPATH}\nENV TEAM_AGENT ${TEAM_CODE_ROOT}/pylot/simulation/challenge/ERDOSAgent.py\nENV TEAM_CONFIG ${TEAM_CODE_ROOT}/pylot/simulation/challenge/challenge.conf\nENV CHALLENGE_TRACK_CODENAME MAP\nENV PYLOT_HOME ${TEAM_CODE_ROOT}/\n\nRUN cd ${TEAM_CODE_ROOT}/dependencies/frenet_optimal_trajectory_planner && rm -r build && ./build.sh\nRUN cd ${TEAM_CODE_ROOT}/dependencies/hybrid_astar_planner && rm -r build && ./build.sh\nRUN cd ${TEAM_CODE_ROOT}/dependencies/rrt_star_planner && rm -r build && ./build.sh\n\n########################################################################################################################\n########################################################################################################################\n############                                   END OF USER COMMANDS                                         ############\n########################################################################################################################\n########################################################################################################################\n\nENV SCENARIOS ${LEADERBOARD_ROOT}/data/all_towns_traffic_scenarios_public.json\nENV ROUTES ${LEADERBOARD_ROOT}/data/routes_training.xml\nENV REPETITIONS 1\nENV CHECKPOINT_ENDPOINT /workspace/results/results.json\nENV DEBUG_CHALLENGE 0\n\nENV HTTP_PROXY \"\"\nENV HTTPS_PROXY \"\"\nENV http_proxy \"\"\nENV https_proxy \"\"\n\n\nCMD [\"/bin/bash\"]\n"
}