{
  "startTime": 1674219537267,
  "endTime": 1674219538268,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 26
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Docker tinysearch with deps\n#   - binaryen\n#   - wasm-pack\n#   - terser\n\nARG TINY_REPO=https://github.com/tinysearch/tinysearch\nARG TINY_BRANCH=master\nARG RUST_IMAGE=rust:alpine\n\nFROM $RUST_IMAGE AS binary-build\n\nARG TINY_REPO\nARG TINY_BRANCH\n\nWORKDIR /tmp\n\nRUN apk add --update --no-cache --virtual \\\n    build-dependencies \\\n    musl-dev \\\n    openssl-dev \\\n    gcc \\\n    curl \\\n    git \\\n    npm \\\n    gcc \\\n    ca-certificates \\\n    libc6-compat \\\n    binaryen\n\nRUN set -eux -o pipefail; \\\n    ln -s /lib64/ld-linux-x86-64.so.2 /lib/ld64.so.1; \\\n    npm install terser -g; npm cache clean --force;\n\nRUN terser --version\n\nRUN cd /tmp && git clone --branch \"$TINY_BRANCH\" \"$TINY_REPO\"\nRUN set -ex -o pipefail; \\\n    cd /tmp/tinysearch \\\n    && cargo build --release \\\n    && cp target/release/tinysearch $CARGO_HOME/bin\n\nRUN curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh\n\nRUN wasm-pack --version\n\nFROM $RUST_IMAGE\n\nWORKDIR /tmp\n\nRUN apk add --update --no-cache libc6-compat musl-dev binaryen\n\nRUN set -eux -o pipefail; \\\n    ln -s /lib64/ld-linux-x86-64.so.2 /lib/ld64.so.1;\n\nCOPY --from=binary-build /usr/local/bin/ /usr/local/bin/\nCOPY --from=binary-build /usr/local/cargo/bin/ /usr/local/bin/\n\n# crate cache init. No need to download crate for future usage\nRUN set -eux -o pipefail; \\\n    echo '[{\"title\":\"\",\"body\":\"\",\"url\":\"\"}]' > build.json; \\\n    tinysearch build.json; \\\n    rm -rf /tmp/*\n\nENTRYPOINT [\"tinysearch\"]\n"
}