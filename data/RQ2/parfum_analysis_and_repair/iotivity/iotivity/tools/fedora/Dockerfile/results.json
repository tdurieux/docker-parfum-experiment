{
  "startTime": 1674214960837,
  "endTime": 1674214961719,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 73,
        "lineEnd": 76,
        "columnStart": 5,
        "columnEnd": 1
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#!/bin/echo docker build . -f\n# Copyright 2017 Samsung Electronics France SAS\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nFROM fedora:24\nMAINTAINER Philippe Coval (philippe.coval@osg.samsung.com)\n\nENV project iotivity\nARG version\nENV version ${version:-2.0.1}\nENV package ${project}-${version}\nARG user\nENV user ${user:-abuild}\nARG release\nENV release ${release:-0~${user}0+${DISTTAG}}\nENV EMAIL ${EMAIL:-nobody@localhost}\nENV NAME ${NAME:-Nobody}\n\nRUN echo \"#log: ${project}: Preparing system (DISTTAG=${DISTTAG})\" \\\n  && dnf update -y \\\n  && dnf install -y \\\n   git \\\n   make \\\n   sudo \\\n   rpm-build \\\n\\\n   autoconf \\\n   automake \\\n   boost-devel \\\n   bzip2 \\\n   chrpath \\\n   expat-devel \\\n   findutils \\\n   gcc-c++\\\n   gettext-devel \\\n   git \\\n   glib2-devel \\\n   libcurl-devel \\\n   libtool \\\n   libuuid-devel \\\n   openssl-devel \\\n   scons \\\n   sqlite-devel \\\n   unzip \\\n   wget \\\n   xz \\\n && dnf clean -y all \\\n && sync\n\nARG workdir\nENV workdir ${workdir:-${HOME}/usr/local/src/${project}}\nWORKDIR ${workdir}\n\nCOPY . ${WORKDIR}\n\nRUN echo \"#log: ${project}: Preparing sources\" \\\n  && uname -a \\\n  && cat /etc/os-release \\\n  && scons --version \\\n  && gcc --version \\\n  && g++ --version \\\n  && [ ! -x prep.sh ] || EXEC_MODE=true ./prep.sh \\\n  && tar cvfz ../${package}.tar.gz \\\n--transform \"s|^./|${package}/|\" \\\n--exclude 'debian' --exclude-vcs \\\n. \\\n  && sync && rm ../${package}.tar.gz\n\nRUN echo \"#log: ${project}: Setup rpm-build (${WORKDIR})\" \\\n  && mkdir -p \"/root/rpmbuild/SOURCES/\" \\\n  && ln -vfs \"${workdir}/../${package}.tar.gz\"  \"/root/rpmbuild/SOURCES/\" \\\n  && ln -vfs \"${workdir}/tools/tizen/\"* \"/root/rpmbuild/SOURCES/\" \\\n  && sync\n\nRUN echo \"#log: ${project}: Building RPMs (${project}-${version}.${release})\" \\\n  && cd \"/root/rpmbuild/SOURCES/\" \\\n  && ls -l \\\n  && time rpmbuild -ba \"${project}.spec\" \\\n   --define \"version ${version}\" \\\n   --define \"release ${release}\" \\\n  && find /root/rpmbuild/ -iname \"*.*rpm\" \\\n  && sync\n\nRUN echo \"#log: ${project}: Installing RPMs (${release})\" \\\n  && rpm -v -i /root/rpmbuild/RPMS/*/*.rpm \\\n  && rpm -ql ${project} \\\n  && rpm -ql ${project}-service \\\n  && rpm -ql ${project}-devel \\\n  && rpm -ql ${project}-test \\\n  && rpm -ql ${project}-debuginfo \\\n  && sync\n"
}