{
  "startTime": 1674254808250,
  "endTime": 1674254809076,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 21,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 7
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 21,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 7
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 21,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 7
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM rustlang/rust:nightly\n\nLABEL org.label-schema.name=\"aardwolf-rust-builder\" \\\n    org.label-schema.description=\"Aardwolf-Social on Debian\" \\\n    org.label-schema.url=\"https://example.com/path/to/image/on/docker/hub\" \\\n    org.label-schema.usage=\"https://github.com/Aardwolf-Social/aardwolf/blob/master/README.md\" \\\n    org.label-schema.vcs-url=\"https://github.com/Aardwolf-Social/aardwolf\" \\\n    org.label-schema.vendor=\"Aardwolf-Social\" \\\n    org.label-schema.version=\"0.w.0\" \\\n    maintainer=\"https://github.com/Aardwolf-Social\"\n\n# Configure a non-root user.\n# We specify the UID so that Kubernetes has something for securityContexts.\nRUN adduser -h /app -u 1000 -D aardwolf\n# Not sure why but debian complains about aardwolf not existing using the above command??\nRUN adduser aardwolf\n\n# Update\nRUN apt-get update && apt-get -y --no-install-recommends install \\\n      bash \\\n      gcc \\\n      musl-dev \\\n\t\t\tpostgresql-client \\\n\t\t\tgettext \\\n\t\t\tcurl && rm -rf /var/lib/apt/lists/*; # Install needed software.\n\n\n\n\n\n\n\n\n# Copy the code.\nCOPY --chown=aardwolf:aardwolf . /app\nCOPY --chown=aardwolf:aardwolf ./config/example.toml /app/aardwolf.toml\n\n# This is for splitting into builder and app\n# Use nightly, install diesel\n#RUN rustup override set nightly\n#RUN cargo install -f diesel_cli --no-default-features --features postgres\n# Copmile Aardwolf\n#RUN cargo build --bin setup\n\n# Copy the entrypoint and make it executable.\nCOPY --chown=aardwolf:aardwolf ./docker-entrypoint.sh /usr/local/bin/docker-entrypoint.sh\nRUN chmod  u=rx,g=rx,o=rx /usr/local/bin/docker-entrypoint.sh\n\n# Expose the default port. This is often overridden in Docker CLI or Kubernetes.\nEXPOSE 8080\n\n# Run as our non-root user.\nUSER aardwolf\n\n# Set the entrypoint and default command.\nENTRYPOINT [\"docker-entrypoint.sh\", \"cargo run --bin aardwolf-server\"]\n"
}