{
  "startTime": 1674218245101,
  "endTime": 1674218246376,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 26
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM amazonlinux:2\n\nRUN yum update -y\nRUN yum install -y tar wget git && rm -rf /var/cache/yum\n\nRUN yum install ncurses-devel openssl11-devel -y && rm -rf /var/cache/yum\nRUN yum groupinstall \"Development Tools\" -y\n\nWORKDIR /tmp\nRUN wget \"https://erlang.org/download/otp_src_24.0.tar.gz\" -O otp24.tar.gz\nRUN tar xfz otp24.tar.gz && rm otp24.tar.gz\nWORKDIR /tmp/otp_src_24.0/\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"\nRUN make && make install\n\nWORKDIR /tmp\nRUN wget \"https://github.com/elixir-lang/elixir/archive/v1.13.2.tar.gz\"\nRUN tar xfz v1.13.2.tar.gz && rm v1.13.2.tar.gz\nWORKDIR /tmp/elixir-1.13.2/\nENV PATH=\"${PATH}:/usr/local/bin\"\nRUN make && make install\n\nRUN mix local.hex --force\nRUN mix local.rebar --force\n\n# install node\nRUN yum install -y gcc-c++ make && rm -rf /var/cache/yum\nRUN curl -f -sL https://rpm.nodesource.com/setup_16.x | bash -\nRUN yum install -y nodejs && rm -rf /var/cache/yum\nRUN npm install -g yarn && npm cache clean --force;\n\n# fix elixir encoding warning\n# https://stackoverflow.com/questions/32407164/the-vm-is-running-with-native-name-encoding-of-latin1-which-may-cause-elixir-to\nENV LANG=C.UTF-8\n\nCOPY entrypoint.sh /entrypoint.sh\nRUN chmod +x /entrypoint.sh\n\nENTRYPOINT [\"/entrypoint.sh\"]"
}