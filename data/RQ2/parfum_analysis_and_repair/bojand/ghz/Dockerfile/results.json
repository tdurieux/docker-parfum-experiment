{
  "startTime": 1674254103459,
  "endTime": 1674254104728,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 22
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM --platform=$BUILDPLATFORM docker.io/library/alpine:3.15 AS alpine\nFROM --platform=$BUILDPLATFORM gcr.io/distroless/base:nonroot@sha256:02f667185ccf78dbaaf79376b6904aea6d832638e1314387c2c2932f217ac5cb AS distroless\n\nFROM alpine AS osmap-linux\nRUN echo linux   >/os\nFROM alpine AS osmap-macos\nRUN echo darwin  >/os\nFROM alpine AS osmap-windows\nRUN echo windows >/os\nFROM osmap-$TARGETOS AS osmap\n\nFROM alpine AS fetcher\nWORKDIR /app\nRUN \\\n    --mount=from=osmap,source=/os,target=/os \\\n    set -ux \\\n && apk add --no-cache curl \\\n && export url=https://github.com/bojand/ghz/releases \\\n && export arch=x86_64 \\\n && export VERSION=$( ( curl -#fSLo /dev/null -w '%{url_effective}' $url/latest && echo ) | while read -r x; do basename $x; done) \\\n && curl -#fSLo exe.tar.gz $url/download/$VERSION/ghz-$(cat /os)-$arch.tar.gz \\\n && curl -#fSLo sha2 $url/download/$VERSION/ghz-$(cat /os)-$arch.tar.gz.sha256 \\\n && sha256sum exe.tar.gz | grep -F $(cat sha2) \\\n && tar xvf exe.tar.gz \\\n && rm ghz-web* && mkdir exe && mv ghz* exe/ && rm exe.tar.gz\n\nFROM scratch AS ghz-binary\nCOPY --from=fetcher /app/exe/* /\n\nFROM distroless AS ghz\nCOPY --from=ghz-binary --chown=nonroot /ghz /\nRUN [\"/ghz\", \"--version\"]\nENTRYPOINT [\"/ghz\"]\n"
}