{
  "startTime": 1674254473098,
  "endTime": 1674254474170,
  "originalSmells": [
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 114
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 124
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 116
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 74,
        "lineEnd": 74,
        "columnStart": 4,
        "columnEnd": 100
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 2,
        "lineEnd": 11,
        "columnStart": 22,
        "columnEnd": 9
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 2,
        "lineEnd": 11,
        "columnStart": 22,
        "columnEnd": 9
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 45
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:10\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    curl \\\n    file \\\n    gcc \\\n    git \\\n    gpg \\\n    make \\\n    python \\\n    software-properties-common \\\n    unzip && rm -rf /var/lib/apt/lists/*;\n\n# Install OpenJDK 8\nCOPY adopt-openjdk-apt-key.pgp /tmp/adopt-openjdk-apt-key.pgp\n\nRUN apt-key add < /tmp/adopt-openjdk-apt-key.pgp && \\\n    rm /tmp/adopt-openjdk-apt-key.pgp && \\\n    add-apt-repository -y https://adoptopenjdk.jfrog.io/adoptopenjdk/deb/ && \\\n    apt-get update && \\\n    apt-get install --no-install-recommends -y adoptopenjdk-8-hotspot && rm -rf /var/lib/apt/lists/*;\n\n# Install Android SDK\nRUN curl -sf https://dl.google.com/android/repository/sdk-tools-linux-4333796.zip -L -o /tmp/tools_r26.1.1-linux.zip && \\\n    cd /tmp && \\\n    echo \"92ffee5a1d98d856634e8b71132e8a95d96c83a63fde1099be3d86df3106def9  tools_r26.1.1-linux.zip\" | sha256sum -c && \\\n    mkdir -p /opt/android && \\\n    cd /opt/android && \\\n    unzip -q /tmp/tools_r26.1.1-linux.zip && \\\n    rm /tmp/tools_r26.1.1-linux.zip && \\\n    yes | /opt/android/tools/bin/sdkmanager \"platforms;android-30\" \"build-tools;30.0.3\" \"platform-tools\"\n\nENV ANDROID_HOME=\"/opt/android\"\n\n# Install Android NDK\nRUN cd /tmp && \\\n    curl -sf -L -O https://dl.google.com/android/repository/android-ndk-r20b-linux-x86_64.zip && \\\n    echo \"8381c440fe61fcbb01e209211ac01b519cd6adf51ab1c2281d5daad6ca4c8c8c  android-ndk-r20b-linux-x86_64.zip\" | sha256sum -c && \\\n    cd /opt/android && \\\n    unzip -q /tmp/android-ndk-r20b-linux-x86_64.zip && \\\n    rm /tmp/android-ndk-r20b-linux-x86_64.zip\n\nENV ANDROID_NDK_HOME=\"/opt/android/android-ndk-r20b\" \\\n    NDK_TOOLCHAIN_DIR=\"/opt/android/android-ndk-r20b/toolchains/llvm/prebuilt/linux-x86_64/bin\"\n\n# Install Go\nCOPY goruntime-boottime-over-monotonic.diff /tmp/goruntime-boottime-over-monotonic.diff\n\nRUN cd /tmp && \\\n    curl -sf -L -O https://dl.google.com/go/go1.16.linux-amd64.tar.gz && \\\n    echo \"013a489ebb3e24ef3d915abe5b94c3286c070dfe0818d5bca8108f1d6e8440d2  go1.16.linux-amd64.tar.gz\" | sha256sum -c && \\\n    cd /opt && \\\n    tar -xzf /tmp/go1.16.linux-amd64.tar.gz && \\\n    patch -p1 -f -N -r- -d \"/opt/go\" < /tmp/goruntime-boottime-over-monotonic.diff && \\\n    mkdir /opt/go/go-path && \\\n    rm /tmp/goruntime-boottime-over-monotonic.diff /tmp/go1.16.linux-amd64.tar.gz\n\nENV GOROOT=/opt/go GOPATH=/opt/go/go-path PATH=${PATH}:/opt/go/bin\n\n# Install Rust\nCOPY cargo-config.toml /root/.cargo/config\n\nENV PATH=\"${PATH}:/root/.cargo/bin\" \\\n    AR_x86_64_linux_android=\"${NDK_TOOLCHAIN_DIR}/x86_64-linux-android-ar\" \\\n    AR_i686_linux_android=\"${NDK_TOOLCHAIN_DIR}/i686-linux-android-ar\" \\\n    AR_aarch64_linux_android=\"${NDK_TOOLCHAIN_DIR}/aarch64-linux-android-ar\" \\\n    AR_armv7_linux_androideabi=\"${NDK_TOOLCHAIN_DIR}/arm-linux-androideabi-ar\" \\\n    CC_x86_64_linux_android=\"${NDK_TOOLCHAIN_DIR}/x86_64-linux-android21-clang\" \\\n    CC_i686_linux_android=\"${NDK_TOOLCHAIN_DIR}/i686-linux-android21-clang\" \\\n    CC_aarch64_linux_android=\"${NDK_TOOLCHAIN_DIR}/aarch64-linux-android21-clang\" \\\n    CC_armv7_linux_androideabi=\"${NDK_TOOLCHAIN_DIR}/armv7a-linux-androideabi21-clang\"\n\nRUN curl -sf -L https://sh.rustup.rs > /tmp/rustup.sh && \\\n    cd /tmp && \\\n    echo \"a3cb081f88a6789d104518b30d4aa410009cd08c3822a1226991d6cf0442a0f8  rustup.sh\" | sha256sum -c && \\\n    chmod +x rustup.sh && \\\n    ./rustup.sh -y && \\\n    rm rustup.sh && \\\n    rustup target add x86_64-linux-android i686-linux-android aarch64-linux-android armv7-linux-androideabi\n\nCMD [\"./build-apk.sh\", \"--no-docker\"]\n"
}