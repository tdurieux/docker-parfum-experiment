{
  "startTime": 1674249875619,
  "endTime": 1674249876666,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 22,
        "columnEnd": 47
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 22,
        "columnEnd": 47
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 4,
        "columnEnd": 50
      }
    }
  ],
  "repairedDockerfile": "FROM golang:latest AS builder\nRUN apt-get update\nRUN apt-get install --no-install-recommends -y git && rm -rf /var/lib/apt/lists/*;\nRUN curl -f -sL https://deb.nodesource.com/setup_13.x | bash -\nRUN apt-get update && apt-get install --no-install-recommends -y nodejs && rm -rf /var/lib/apt/lists/*;\nENV GO111MODULE=on \\\r\n    CGO_ENABLED=0 \\\r\n    GOOS=linux \\\r\n    GOARCH=amd64\nWORKDIR /build\nCOPY . .\nRUN go build -o /bin/iris-cli .\nWORKDIR /bin\nRUN chmod +x ./iris-cli\nWORKDIR /myproject\n# docker image rm -f iris-cli;docker build . -t iris-cli; docker run -i -t -p 8080:8080 -v \"C:\\Users\\kataras\\Desktop\\myproject:/myproject\" iris-cli run svelte\n ENTRYPOINT [\"iris-cli\"]\n# FROM scratch\n# COPY --from=builder /bin/iris-cli /\n# ENTRYPOINT [\"/iris-cli\"]"
}