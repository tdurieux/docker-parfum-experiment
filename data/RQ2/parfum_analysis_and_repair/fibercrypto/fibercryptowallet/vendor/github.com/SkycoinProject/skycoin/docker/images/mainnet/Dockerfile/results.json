{
  "startTime": 1674248513431,
  "endTime": 1674248514220,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 38
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# skycoin build\n# reference https://github.com/SkycoinProject/skycoin\nARG IMAGE_FROM=busybox\nFROM golang:1.11-stretch AS build\nARG ARCH=amd64\nARG GOARM\nARG SKYCOIN_VERSION\nARG SCOMMIT\nARG SBRANCH\nARG STAG\n\nADD cmd $GOPATH/src/github.com/SkycoinProject/skycoin/cmd\nADD src $GOPATH/src/github.com/SkycoinProject/skycoin/src\nADD vendor $GOPATH/src/github.com/SkycoinProject/skycoin/vendor\nADD template $GOPATH/src/github.com/SkycoinProject/skycoin/template\nADD fiber.toml $GOPATH/src/github.com/SkycoinProject/skycoin/fiber.toml\n\n# This code checks if SKYCOIN_VERSION is set and checkouts to that version if\n# so. The git stash line prevents the build to fail if there are any uncommited\n# changes in the working copy. It won't affect the host working copy.\nRUN sh -c \\\n    'if test ${SKYCOIN_VERSION};then \\\n        echo \"Revision is set to: \"${SKYCOIN_VERSION}; \\\n        cd $GOPATH/src/github.com/SkycoinProject/skycoin; \\\n        git stash; \\\n        git checkout ${SKYCOIN_VERSION}; \\\n     fi'\n\nENV GOARCH=\"$ARCH\" \\\n    GOARM=\"$GOARM\" \\\n    CGO_ENABLED=\"0\" \\\n    GOOS=\"linux\" \\\n    GOLDFLAGS=\"-X main.Commit=${SCOMMIT} -X main.Branch=${SBRANCH}\"\n\nRUN cd $GOPATH/src/github.com/SkycoinProject/skycoin && \\\n    echo \"Building with GOLDFLAGS=$GOLDFLAGS GOARCH=$GOARCH GOARM=$GOARM CGO_ENABLED=$CGO_ENABLED GOOS=$GOOS \" && \\\n    go install -ldflags \"${GOLDFLAGS}\" ./cmd/... && \\\n    sh -c \"if test -d $GOPATH/bin/linux_arm ; then mv $GOPATH/bin/linux_arm/* $GOPATH/bin/; fi; \\\n           if test -d $GOPATH/bin/linux_arm64 ; then mv $GOPATH/bin/linux_arm64/* $GOPATH/bin/; fi\"\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y ca-certificates && rm -rf /var/lib/apt/lists/*;\n\n\nRUN /bin/bash -c 'mkdir -p /tmp/files/{usr/bin,/usr/local/skycoin/src/gui/static,/usr/local/bin/,/etc/ssl}'\nRUN cp -r /go/bin/* /tmp/files/usr/bin/\nRUN cp -r  /go/src/github.com/SkycoinProject/skycoin/src/gui/static /tmp/files/usr/local/skycoin/src/gui/\nRUN cp -r  /etc/ssl/certs /tmp/files/etc/ssl/certs\nCOPY docker_launcher.sh /tmp/files/usr/local/bin/docker_launcher.sh\n\n# skycoin image\nFROM $IMAGE_FROM\nARG BDATE\nARG SCOMMIT\nARG SBRANCH\nARG STAG\n\n# Image labels\nLABEL \"org.label-schema.name\"=\"Skycoin\" \\\n      \"org.label-schema.description\"=\"Skycoin core docker image\" \\\n      \"org.label-schema.vcs-url\"=\"https://github.com/SkycoinProject/skycoin/tree/develop/docker/images/mainnet\" \\\n      \"org.label-schema.vendor\"=\"Skycoin project\" \\\n      \"org.label-schema.url\"=\"skycoin.com\" \\\n      \"org.label-schema.schema-version\"=\"1.0\" \\\n      \"org.label-schema.build-date\"=$BDATE \\\n      \"org.label-schema.vcs-ref\"=$SCOMMIT \\\n      \"org.label-schema.version\"=$STAG \\\n      \"org.label-schema.usage\"=\"https://github.com/SkycoinProject/skycoin/blob/\"$SCOMMIT\"/docker/images/mainnet/README.md\" \\\n      \"org.label-schema.docker.cmd\"=\"docker volume create skycoin-data; docker volume create skycoin-wallet; docker run -d -v skycoin-data:/data/.skycoin -v skycoin-wallet:/wallet -p 6000:6000 -p 6420:6420 --name skycoin-node-stable SkycoinProject/skycoin\"\n\nENV COIN=\"skycoin\"\nENV RPC_ADDR=\"http://0.0.0.0:6420\" \\\n    DATA_DIR=\"/data/.$COIN\" \\\n    WALLET_DIR=\"/wallet\" \\\n    WALLET_NAME=\"$COIN_cli.wlt\"\n\n# copy all the binaries\nCOPY --from=build /tmp/files /\n\n# volumes\nVOLUME $WALLET_DIR\nVOLUME $DATA_DIR\n\nEXPOSE 6000 6420\n\nENTRYPOINT [\"docker_launcher.sh\", \"--web-interface-addr=0.0.0.0\", \"--gui-dir=/usr/local/skycoin/src/gui/static\"]\n"
}