{
  "startTime": 1674249460004,
  "endTime": 1674249461069,
  "originalSmells": [
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 23
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG ALFRESCO_TAG\nFROM <%=acsImage%>:${ALFRESCO_TAG}\n\nARG TOMCAT_DIR=/usr/local/tomcat\nARG ALF_DATA_DIR=${TOMCAT_DIR}/alf_data\n\n# COMMS\nARG SOLR_COMMS\nENV SOLR_COMMS $SOLR_COMMS\n\n# SSL\nARG TRUSTSTORE_TYPE\nARG TRUSTSTORE_PASS\nARG KEYSTORE_TYPE\nARG KEYSTORE_PASS\n\nENV TRUSTSTORE_TYPE=$TRUSTSTORE_TYPE \\\n    TRUSTSTORE_PASS=$TRUSTSTORE_PASS \\\n    KEYSTORE_TYPE=$KEYSTORE_TYPE \\\n    KEYSTORE_PASS=$KEYSTORE_PASS\n\n# Expose keystore folder\n# Useless for 'none'/'http' communications with SOLR\nVOLUME [\"${ALF_DATA_DIR}/keystore\"]\n\nUSER root\n\nARG SHARE_SERVICES_TAG\nENV SHARE_SERVICES_TAG $SHARE_SERVICES_TAG\n\n# From Alfresco Repository 7.0.0 Share Services AMP is not provided with default Docker Image\nRUN if [ ! -z \"$SHARE_SERVICES_TAG\" ] ; then \\\n    yum -y update && \\\n    yum -y install wget && \\\n    yum clean all && \\\n    mkdir -p $TOMCAT_DIR/amps && \\\n    wget https://nexus.alfresco.com/nexus/service/local/repo_groups/public/content/org/alfresco/alfresco-share-services/${SHARE_SERVICES_TAG}/alfresco-share-services-${SHARE_SERVICES_TAG}.amp \\\n    -O $TOMCAT_DIR/amps/alfresco-share-services-${SHARE_SERVICES_TAG}.amp; rm -rf /var/cache/yum \\\nfi\n\n# Install modules and addons\nRUN mkdir -p $TOMCAT_DIR/amps\nCOPY modules/amps/* $TOMCAT_DIR/amps/\nCOPY modules/jars/* $TOMCAT_DIR/webapps/alfresco/WEB-INF/lib/\nRUN java -jar $TOMCAT_DIR/alfresco-mmt/alfresco-mmt*.jar install \\\n    $TOMCAT_DIR/amps $TOMCAT_DIR/webapps/alfresco -directory -nobackup -force;\n\n# Default value in \"repository.properties\" is \"dir.keystore=classpath:alfresco/keystore\"\nRUN if [ \"$SOLR_COMMS\" == \"https\" ] ; then \\\n        echo -e \"\\n\\\n        dir.keystore=${ALF_DATA_DIR}/keystore\\n\\\n        alfresco.encryption.ssl.keystore.type=${TRUSTSTORE_TYPE}\\n\\\n        alfresco.encryption.ssl.truststore.type=${KEYSTORE_TYPE}\\n\\\n        \" >> ${TOMCAT_DIR}/shared/classes/alfresco-global.properties; \\\n    fi\n\n# Enable SSL by adding the proper Connector to server.xml\nRUN if [ \"$SOLR_COMMS\" == \"https\" ] ; then \\\n      sed -i \"s/\\\n[[:space:]]\\+<\\/Engine>/\\n\\\n        <\\/Engine>\\n\\\n        <Connector port=\\\"8443\\\" protocol=\\\"HTTP\\/1.1\\\"\\n\\\n            connectionTimeout=\\\"20000\\\"\\n\\\n            SSLEnabled=\\\"true\\\" maxThreads=\\\"150\\\" scheme=\\\"https\\\"\\n\\\n            keystoreFile=\\\"\\/usr\\/local\\/tomcat\\/alf_data\\/keystore\\/ssl.keystore\\\"\\n\\\n            keystorePass=\\\"${KEYSTORE_PASS}\\\" keystoreType=\\\"${KEYSTORE_TYPE}\\\" secure=\\\"true\\\"\\n\\\n            truststoreFile=\\\"\\/usr\\/local\\/tomcat\\/alf_data\\/keystore\\/ssl.truststore\\\"\\n\\\n            truststorePass=\\\"${TRUSTSTORE_PASS}\\\" truststoreType=\\\"${TRUSTSTORE_TYPE}\\\" clientAuth=\\\"want\\\" sslProtocol=\\\"TLS\\\">\\n\\\n        <\\/Connector>/g\" ${TOMCAT_DIR}/conf/server.xml; \\\n    fi\n\n# GZIP COMPRESSION\nARG COMPRESS_CONTENT\nENV COMPRESS_CONTENT $COMPRESS_CONTENT\nRUN if [ \"$COMPRESS_CONTENT\" == \"true\" ] ; then \\\n      sed -i \"s/\\\n[[:space:]]\\+connectionTimeout=\\\"20000\\\"/\\n\\\n        connectionTimeout=\\\"20000\\\"\\n\\\n        compression=\\\"on\\\"\\n\\\n        compressionMinSize=\\\"1\\\"\\n\\\n        /g\" ${TOMCAT_DIR}/conf/server.xml; \\\n    fi\n\n\n# Copy custom content model to deployment folder\nCOPY model/* $TOMCAT_DIR/shared/classes/alfresco/extension/\n"
}