{
  "startTime": 1674220722277,
  "endTime": 1674220723465,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 116
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 22,
        "columnEnd": 64
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 22,
        "columnEnd": 64
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 37
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG monoversion=\"6.12\"\nFROM mono:${monoversion} as build\n\nARG github_actions=\"false\"\nARG github_ref\nARG github_repository\nARG github_base_ref\nARG github_head_ref\nARG github_run_number\n\nENV GITHUB_REF=$github_ref\nENV GITHUB_REPOSITORY=$github_repository\nENV GITHUB_BASE_REF=$github_base_ref\nENV GITHUB_HEAD_REF=$github_head_ref\nENV GITHUB_RUN_NUMBER=$github_run_number\n\nRUN echo deb http://deb.debian.org/debian buster-backports main | tee /etc/apt/sources.list.d/buster-backports.list; \\\n    apt-get update && apt-get install --no-install-recommends -t buster-backports git -y && rm -rf /var/lib/apt/lists/*;\n\nRUN curl -f -o packages-microsoft-prod.deb https://packages.microsoft.com/config/debian/10/packages-microsoft-prod.deb; \\\n    dpkg -i packages-microsoft-prod.deb; \\\n    apt-get update; \\\n    apt-get install --no-install-recommends -y dotnet-sdk-6.0 && rm -rf /var/lib/apt/lists/*;\n\nCOPY . /usr/local/src/choco/\n\nWORKDIR /usr/local/src/choco\nRUN chmod +x *.sh\n\nARG buildscript=\"build.sh\"\n\nRUN if [ \"$github_actions\" = \"true\" ]; then \\\n    export GITHUB_ACTIONS=$github_actions; \\\n  fi; \\\n  if [ \"$buildscript\" = \"build.official.sh\" ]; then \\\n    export CHOCOLATEY_OFFICIAL_KEY=\"/usr/local/src/choco/chocolatey.official.snk\"; \\\n    ./$buildscript; \\\n    cp docker/choco_official_wrapper code_drop/temp/_PublishedApps/choco/choco_wrapper; \\\n  else \\\n    ./$buildscript --verbosity=diagnostic; \\\n    cp docker/choco_wrapper code_drop/temp/_PublishedApps/choco/choco_wrapper; \\\n  fi;\n\n\nARG monoversion=\"6.12\"\nFROM mono:${monoversion} as install\n\nARG monoversion=\"6.12\"\nLABEL org.opencontainers.image.url=\"https://chocolatey.org/\"\nLABEL org.opencontainers.image.documentation=\"https://docs.chocolatey.org/\"\nLABEL org.opencontainers.image.source=\"https://github.com/chocolatey/choco\"\nLABEL org.opencontainers.image.vendor=\"Chocolatey Software, Inc\"\nLABEL org.opencontainers.image.licenses=\"Apache-2.0\"\nLABEL org.opencontainers.image.title=\"Chocolatey\"\nLABEL org.opencontainers.image.description=\"Chocolatey Client running on Mono\"\nLABEL org.opencontainers.image.authors=\"https://chocolatey.org/support\"\nLABEL org.opencontainers.image.base.name=\"index.docker.io/library/mono:${monoversion}\"\n\nENV ChocolateyInstall /opt/chocolatey\n\nCOPY --from=build /usr/local/src/choco/code_drop/temp/_PublishedApps/choco /opt/chocolatey\n\nRUN mkdir /opt/chocolatey/lib; \\\n  cp /opt/chocolatey/choco_wrapper usr/local/bin/choco; \\\n  cp /opt/chocolatey/choco_wrapper usr/local/bin/choco.exe;\n\nWORKDIR /root"
}