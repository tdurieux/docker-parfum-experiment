{
  "startTime": 1674217897873,
  "endTime": 1674217898863,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 13,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 113
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 75
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 58,
        "lineEnd": 59,
        "columnStart": 7,
        "columnEnd": 14
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 62,
        "lineEnd": 65,
        "columnStart": 7,
        "columnEnd": 30
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 32,
        "lineEnd": 35,
        "columnStart": 7,
        "columnEnd": 32
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 56,
        "lineEnd": 57,
        "columnStart": 7,
        "columnEnd": 14
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 60,
        "lineEnd": 63,
        "columnStart": 7,
        "columnEnd": 30
      }
    }
  ],
  "repairedDockerfile": "# PHP version\n# examples of allowed values: 5.6-cli, 5.6-cli-alpine, 7.4-cli, 7.4-cli-alpine\n# and other tags from https://hub.docker.com/_/php\nARG PHP_VERSION=5.6-cli\n\n########################################################################################################################\nFROM php:${PHP_VERSION} AS default\n\nWORKDIR /usr/src/yii2-json-editor\n\n# install PHP extensions\nRUN curl -f --silent --show-error --location --output /usr/local/bin/install-php-extensions \\\n        https://github.com/mlocati/docker-php-extension-installer/releases/download/1.5.20/install-php-extensions \\\n    && chmod a+x /usr/local/bin/install-php-extensions \\\n    && sync \\\n    && install-php-extensions \\\n        pcntl `# for tests` \\\n        xdebug `# for tests`\n\n# install the latest stable Composer 1.x version\nRUN curl -f --silent --show-error --location https://getcomposer.org/installer | php -- --1 \\\n    && mv composer.phar /usr/local/bin/composer\n\nCOPY composer.json ./\n\n########################################################################################################################\nFROM default AS alpine\n\n# install system packages\nRUN apk update \\\n    && apk add --no-cache \\\n        git `# for Composer and developers` \\\n        nano `# for developers` \\\n        unzip `# for Composer`\n\n# install dependencies using Composer\nRUN --mount=type=cache,id=composer,target=/root/.composer/cache,sharing=locked \\\n    composer global require --optimize-autoloader 'fxp/composer-asset-plugin:^1.4.6' \\\n    \\\n    # workarounds for Composer plugin fxp/composer-asset-plugin:\n    # 1) plugin may ask Git to clone repository using \"git+ssh\" protocol,\n    # for example git+ssh://git@github.com/garycourt/uri-js.git,\n    # but it requires SSH key linked with GitHub account which we have not in Docker;\n    && git config --global --add url.'https://'.insteadOf 'git+ssh://git@' \\\n    # 2) plugin may ask Git to clone repository using \"git\" protocol,\n    # but the unencrypted \"git\" protocol is permanently disabled on GitHub,\n    # see https://github.blog/changelog/2022-03-15-removed-unencrypted-git-protocol-and-certain-ssh-keys.\n    && git config --global --add url.'https://github.com/'.insteadOf 'git@github.com:' \\\n    && composer update \\\n    && composer clear-cache\n\n########################################################################################################################\nFROM default AS debian\n\n# install system packages\nRUN apt-get update \\\n    && apt-get --assume-yes -y --no-install-recommends install \\\n        gnupg2 \\\n    && apt-key update \\\n    && apt-get update \\\n    && apt-get --assume-yes -y --no-install-recommends install \\\n        git `# for Composer and developers` \\\n        nano `# for developers` \\\n        unzip `# for Composer` \\\n\n    # clean up\n    && rm --force --recursive /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\n# install dependencies using Composer\nRUN --mount=type=cache,id=composer,target=/root/.composer/cache,sharing=locked \\\n    composer global require --optimize-autoloader 'fxp/composer-asset-plugin:^1.4.6' \\\n    \\\n    # workarounds for Composer plugin fxp/composer-asset-plugin:\n    # 1) plugin may ask Git to clone repository using \"git+ssh\" protocol,\n    # for example git+ssh://git@github.com/garycourt/uri-js.git,\n    # but it requires SSH key linked with GitHub account which we have not in Docker;\n    && git config --global --add url.'https://'.insteadOf 'git+ssh://git@' \\\n    # 2) plugin may ask Git to clone repository using \"git\" protocol,\n    # but the unencrypted \"git\" protocol is permanently disabled on GitHub,\n    # see https://github.blog/changelog/2022-03-15-removed-unencrypted-git-protocol-and-certain-ssh-keys.\n    && git config --global --add url.'https://github.com/'.insteadOf 'git@github.com:' \\\n    && composer update \\\n    && composer clear-cache\n\n########################################################################################################################\nFROM debian AS debian-runkit\n\n# install runkit extension\nRUN pecl install \\\n    runkit `# for tests`\n\n########################################################################################################################\nFROM debian AS debian-runkit7\n\n# install runkit7 extension\nRUN pecl install \\\n    runkit7-4.0.0a3 `# for tests`\n"
}