{
  "startTime": 1674250914351,
  "endTime": 1674250915406,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 39,
        "columnEnd": 68
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 565
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:18.04\nMAINTAINER smk\nENV QT_VERSION=5.15.2\nENV CMAKE_VERSION=3.20.5\n\nRUN apt-get -y update && \\\n    apt-get -y upgrade && \\\n    apt-get install --no-install-recommends software-properties-common -y && \\\n    add-apt-repository ppa:ubuntu-toolchain-r/test -y && \\\n    apt-get -y --no-install-recommends install build-essential libgl1-mesa-dev ninja-build curl wget zstd lsb-release libpulse-dev libtool autoconf unzip libssl-dev libxkbcommon-x11-0 libxcb-icccm4 libxcb-image0 libxcb1-dev libxcb-keysyms1-dev libxcb-render-util0-dev libxcb-xinerama0 libgstreamer-plugins-base1.0-dev git zip unzip python3-pip python-pip wget gcc-9 g++-9 python-pyqt5 libssl-dev libxcursor-dev libxcomposite-dev libxdamage-dev libxrandr-dev libfontconfig1-dev libxss-dev libxtst-dev libpci-dev libcap-dev libsrtp0-dev libasound2-dev libnspr4-dev libnss3-dev ninja-build -y && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\nRUN wget https://apt.llvm.org/llvm.sh; chmod +x llvm.sh; ./llvm.sh 12; \\\n    update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-12 777; \\\n    update-alternatives --install /usr/bin/clang clang /usr/bin/clang-12 777; \\\n    update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 777; \\\n    update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 777; \\\n    apt-get update; \\\n    export CXX=clang++-12; \\\n    export CC=clang-12;\n\nRUN wget https://github.com/Kitware/CMake/releases/download/v$CMAKE_VERSION/cmake-$CMAKE_VERSION-linux-x86_64.tar.gz; \\\n    tar xvf cmake-$CMAKE_VERSION-linux-x86_64.tar.gz; rm cmake-$CMAKE_VERSION-linux-x86_64.tar.gz curdir=$(pwd); \\\n    export PATH=${PATH}:${curdir}/cmake-$CMAKE_VERSION-linux-x86_64/bin;\n\nRUN python3 -m pip install --upgrade pip; \\\n    python3 -m pip install setuptools wheel; \\\n    python3 -m pip install py7zr==0.16.1; \\\n    python3 -m pip install aqtinstall==1.2.1; \\\n    python3 -m aqt install -O /opt/Qt $QT_VERSION linux desktop -b https://qt-mirror.dannhauer.de/ -m qtcharts qtwidgets debug_info qtwebengine qtwebview;\n\nRUN git clone https://github.com/KomodoPlatform/libwally-core.git; \\\n\tcd libwally-core; ./tools/autogen.sh; ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --disable-shared; make -j2 install; cd ..;\n\nRUN export QT_INSTALL_CMAKE_PATH=/opt/Qt/$QT_VERSION/gcc_64/lib/cmake; \\\n    export QT_ROOT=/opt/Qt/$QT_VERSION; \\\n    export Qt5_DIR=/opt/Qt/$QT_VERSION/gcc_64/lib/cmake/Qt5; \\\n    export PATH=/opt/Qt/$QT_VERSION/gcc_64/bin:$PATH\n\nCMD [\"entrypoint\"]\n"
}