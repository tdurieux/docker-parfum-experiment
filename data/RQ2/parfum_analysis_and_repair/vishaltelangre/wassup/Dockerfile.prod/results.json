{
  "startTime": 1674219891103,
  "endTime": 1674219892271,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 17,
        "columnEnd": 28
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 33
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM elixir:1.9.2-alpine as build\n\n# install build dependencies\nRUN apk add --no-cache --update git build-base nodejs npm yarn python\n\n# prepare build dir\nRUN mkdir /app\nWORKDIR /app\n\n# install hex + rebar\nRUN mix local.hex --force && \\\n    mix local.rebar --force\n\n# set build ENV\nENV MIX_ENV prod\n\n# install mix dependencies\nCOPY mix.exs mix.lock ./\nCOPY config config\nRUN mix deps.get --only prod\nRUN mix deps.compile\n\n# build assets\nCOPY assets assets\nCOPY priv priv\nRUN cd assets && npm install && npm run deploy && npm cache clean --force;\nRUN mix phx.digest\n\n# build project\nCOPY lib lib\nRUN mix compile\n\n# build release (uncomment COPY if rel/ exists)\n# COPY rel rel\nRUN mix release --overwrite\n\n# prepare release image\nFROM alpine:3.9 AS app\nRUN apk add --no-cache --update bash openssl\n\nRUN mkdir /app\nWORKDIR /app\n\nCOPY --from=build /app/_build/prod/rel/wassup_app ./\nRUN chown -R nobody: /app\nUSER nobody\n\nENV HOME=/app\n\n# set runtime ENV; for details check '.env.example'\nENV MIX_ENV prod\nENV APP_NAME $APP_NAME\nENV APP_URL $APP_URL\nENV APP_HOSTNAME $APP_HOSTNAME\nENV PORT $PORT\nENV MAIL_SENDER_EMAIL $MAIL_SENDER_EMAIL\nENV SECRET_KEY_BASE $SECRET_KEY_BASE\nENV DATABASE_URL $DATABASE_URL\nENV POOL_SIZE $POOL_SIZE\nENV GOOGLE_CLIENT_ID $GOOGLE_CLIENT_ID\nENV GOOGLE_CLIENT_SECRET $GOOGLE_CLIENT_SECRET\nENV GOOGLE_REDIRECT_URI $GOOGLE_REDIRECT_URI\nENV REGISTRATION_DISABLED $REGISTRATION_DISABLED\nENV SMTP_PROVIDER_DOMAIN $SMTP_PROVIDER_DOMAIN\nENV SMTP_USERNAME $SMTP_USERNAME\nENV SMTP_PASSWORD $SMTP_PASSWORD\nENV GOOGLE_ANALYTICS_TRACKING_ID $GOOGLE_ANALYTICS_TRACKING_ID\n\nEXPOSE $PORT\n\n# Start the containers using:\n#\n#   docker run --rm -d --name wassup_app -p 80:4000 \\\n#     -e SECRET_KEY_BASE=XXXX \\\n#     -e DATABASE_URL=XXXXX \\\n#     wassuphq/wassup:latest \\\n#     bin/wassup_app start\n"
}