{
  "startTime": 1674251627714,
  "endTime": 1674251628768,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 26
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:12-alpine AS updated-node-alpine\n\nRUN apk update && apk upgrade\n\n#\n# The preparation stage for use during the installation\n# of app dependencies.\n#\nFROM updated-node-alpine AS build-ready\n\nRUN apk add --no-cache git openssh\n\n#\n# Install depencencies from package.json\n#\nFROM build-ready AS app-js-depencencies\n\nWORKDIR /build\n\nCOPY package*.json ./\n\nRUN npm config set unsafe-perm true\nRUN npm i --silent --quiet && npm cache clean --force;\n\n#\n# Transpiling (development).\n#\nFROM app-js-depencencies AS app-development-build\n\nCOPY tsconfig.json ./\nCOPY ./src ./src\nCOPY .env.example ./.env\n\nRUN npm run build:dev\n\n#\n# Transpiling (production).\n#\nFROM app-js-depencencies AS app-production-build\n\nCOPY tsconfig.prod.json ./\nCOPY ./src ./src\nCOPY .env.production ./.env\n\nRUN npm run build\n\n#\n# Removing non-production dependencies from node_modules.\n#\nFROM app-production-build AS production-js-dependencies\n\nRUN npm prune --production\n\n#\n# Building game server image (development).\n#\nFROM updated-node-alpine as development-image\n\n# Install uWebSockets deps.\nRUN apk add --no-cache gcompat\nRUN rm -rf /var/cache/apk/*\n\nWORKDIR /app\n\nRUN mkdir logs && chown -R node: logs\nRUN mkdir cache && chown -R node: cache\nRUN mkdir certs && chown -R node: certs\n\nCOPY --from=app-development-build /build/dist ./dist\nCOPY --from=app-js-depencencies /build/node_modules ./node_modules\nCOPY --chown=node:node ./admin ./admin\nCOPY --chown=node:node ./data ./data\nCOPY package.json ./\n\nARG NODE_ENV=development\nENV NODE_ENV=${NODE_ENV}\n\nARG LOG_LEVEL=debug\nENV LOG_LEVEL=${LOG_LEVEL}\n\nARG LOG_TO_CONSOLE=true\nENV LOG_TO_CONSOLE=${LOG_TO_CONSOLE}\n\nARG LOG_PERFORMANCE_SAMPLES=true\nENV LOG_PERFORMANCE_SAMPLES=${LOG_PERFORMANCE_SAMPLES}\n\nARG PORT=3501\nENV PORT=${PORT}\n\nARG ENDPOINTS_TLS=false\nENV ENDPOINTS_TLS=${ENDPOINTS_TLS}\n\nARG SERVER_TYPE=FFA\nENV SERVER_TYPE=${SERVER_TYPE}\n\nARG SERVER_ROOM=ab-ffa\nENV SERVER_ROOM=${SERVER_ROOM}\n\nARG SERVER_BOT_NAME=Server\nENV SERVER_BOT_NAME=${SERVER_BOT_NAME}\n\nARG SERVER_BOT_FLAG=JOLLY\nENV SERVER_BOT_FLAG=${SERVER_BOT_FLAG}\n\nARG ALLOW_NON_ASCII_USERNAMES=false\nENV ALLOW_NON_ASCII_USERNAMES=${ALLOW_NON_ASCII_USERNAMES}\n\nARG MODERATION_PANEL=true\nENV MODERATION_PANEL=${MODERATION_PANEL}\n\nARG MODERATION_PANEL_URL_ROUTE=admin\nENV MODERATION_PANEL_URL_ROUTE=${MODERATION_PANEL_URL_ROUTE}\n\nARG SU_PASSWORD=\nENV SU_PASSWORD=${SU_PASSWORD}\n\nARG MAX_PLAYERS_PER_IP=3\nENV MAX_PLAYERS_PER_IP=${MAX_PLAYERS_PER_IP}\n\nARG BOTS_IP=127.0.0.1\nENV BOTS_IP=${BOTS_IP}\n\nARG USER_ACCOUNTS=true\nENV USER_ACCOUNTS=${USER_ACCOUNTS}\n\nARG STATS_SYNC=false\nENV STATS_SYNC=${STATS_SYNC}\n\nARG AUTH_LOGIN_SERVER_KEY_URL=\nENV AUTH_LOGIN_SERVER_KEY_URL=${AUTH_LOGIN_SERVER_KEY_URL}\n\nARG PACKETS_FLOODING_AUTOBAN=true\nENV PACKETS_FLOODING_AUTOBAN=${PACKETS_FLOODING_AUTOBAN}\n\nARG AFK_DISCONNECT_TIMEOUT=\nENV AFK_DISCONNECT_TIMEOUT=${AFK_DISCONNECT_TIMEOUT}\n\nARG WEBSOCKETS_COMPRESSION=true\nENV WEBSOCKETS_COMPRESSION=${WEBSOCKETS_COMPRESSION}\n\nENV EXPERIMENTAL_FASTCALL=1\n\nEXPOSE ${PORT}\n\nUSER node\n\nCMD [ \"node\", \"./dist/app.js\" ]\n\n#\n# Building game server image (production).\n#\nFROM updated-node-alpine as production-image\n\n# Install uWebSockets deps.\nRUN apk add --no-cache gcompat\nRUN rm -rf /var/cache/apk/*\n\nWORKDIR /app\n\nRUN mkdir logs && chown -R node: logs\nRUN mkdir cache && chown -R node: cache\nRUN mkdir certs && chown -R node: certs\n\nCOPY --from=app-production-build /build/dist ./dist\nCOPY --from=production-js-dependencies /build/node_modules ./node_modules\nCOPY --chown=node:node ./admin ./admin\nCOPY --chown=node:node ./data ./data\nCOPY package.json ./\n\nARG NODE_ENV=production\nENV NODE_ENV=${NODE_ENV}\n\nARG LOG_LEVEL=info\nENV LOG_LEVEL=${LOG_LEVEL}\n\nARG LOG_TO_CONSOLE=false\nENV LOG_TO_CONSOLE=${LOG_TO_CONSOLE}\n\nARG LOG_PERFORMANCE_SAMPLES=true\nENV LOG_PERFORMANCE_SAMPLES=${LOG_PERFORMANCE_SAMPLES}\n\nARG PORT=3501\nENV PORT=${PORT}\n\nARG ENDPOINTS_TLS=false\nENV ENDPOINTS_TLS=${ENDPOINTS_TLS}\n\nARG SERVER_TYPE=FFA\nENV SERVER_TYPE=${SERVER_TYPE}\n\nARG SERVER_ROOM=ab-ffa\nENV SERVER_ROOM=${SERVER_ROOM}\n\nARG SERVER_BOT_NAME=Server\nENV SERVER_BOT_NAME=${SERVER_BOT_NAME}\n\nARG SERVER_BOT_FLAG=JOLLY\nENV SERVER_BOT_FLAG=${SERVER_BOT_FLAG}\n\nARG ALLOW_NON_ASCII_USERNAMES=false\nENV ALLOW_NON_ASCII_USERNAMES=${ALLOW_NON_ASCII_USERNAMES}\n\nARG MODERATION_PANEL=true\nENV MODERATION_PANEL=${MODERATION_PANEL}\n\nARG MODERATION_PANEL_URL_ROUTE=admin\nENV MODERATION_PANEL_URL_ROUTE=${MODERATION_PANEL_URL_ROUTE}\n\nARG SU_PASSWORD=\nENV SU_PASSWORD=${SU_PASSWORD}\n\nARG MAX_PLAYERS_PER_IP=3\nENV MAX_PLAYERS_PER_IP=${MAX_PLAYERS_PER_IP}\n\nARG BOTS_IP=127.0.0.1\nENV BOTS_IP=${BOTS_IP}\n\nARG USER_ACCOUNTS=true\nENV USER_ACCOUNTS=${USER_ACCOUNTS}\n\nARG AUTH_LOGIN_SERVER_KEY_URL=\nENV AUTH_LOGIN_SERVER_KEY_URL=${AUTH_LOGIN_SERVER_KEY_URL}\n\nARG PACKETS_FLOODING_AUTOBAN=true\nENV PACKETS_FLOODING_AUTOBAN=${PACKETS_FLOODING_AUTOBAN}\n\nARG AFK_DISCONNECT_TIMEOUT=\nENV AFK_DISCONNECT_TIMEOUT=${AFK_DISCONNECT_TIMEOUT}\n\nARG WEBSOCKETS_COMPRESSION=true\nENV WEBSOCKETS_COMPRESSION=${WEBSOCKETS_COMPRESSION}\n\nENV EXPERIMENTAL_FASTCALL=1\n\nEXPOSE ${PORT}\n\nUSER node\n\nCMD [ \"node\", \"./dist/app.js\" ]\n"
}