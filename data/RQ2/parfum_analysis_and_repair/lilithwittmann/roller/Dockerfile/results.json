{
  "startTime": 1674255129274,
  "endTime": 1674255129943,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 51
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# We are using the Debian-based python base image here to be able to use PyPi wheels.\n\nFROM python:3.6-slim-stretch\n\nWORKDIR /usr/src/app\nENV PYTHONUNBUFFERED=\"1\"\n\n# Add unstable branch to sources.list to be able to install pipenv, then update package lists\nRUN echo \"deb http://deb.debian.org/debian unstable main non-free contrib\" | tee -a /etc/apt/sources.list && \\\n    echo \"deb-src http://deb.debian.org/debian unstable main non-free contrib\" | tee -a /etc/apt/sources.list\nRUN apt-get update && apt-get install --no-install-recommends -y libgdal20 wait-for-it pipenv && rm -rf /var/lib/apt/lists/*; # Install system package dependencies\n\n\n# Copy Pipfile and Pipfile.lock to /tmp, and startup.sh to / for starting up the app\nCOPY Pipfile /tmp\nCOPY Pipfile.lock /tmp\nCOPY startup.sh /\n\n# Install Python deps via pipenv, using the copied Pipfile. Install into system, not into a virtualenv.\nRUN PIPENV_PIPFILE=/tmp/Pipfile pipenv install --dev --system\n\n# IF NEEDED: Install data science packages:\n# RUN pip install --no-cache-dir jupyter seaborn pandas\n\n# IF NEEDED: Install yarn and node to package frontend code, then delete files not needed anymore:\n# Install third party repo for yarn and node\n# RUN apt-get install -y curl gnupg apt-transport-https\n# RUN curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -\n# RUN echo \"deb https://dl.yarnpkg.com/debian/ stable main\" > /etc/apt/sources.list.d/yarn.list\n# RUN curl -sSL https://deb.nodesource.com/setup_8.x | bash -\n# RUN apt-get update\n# RUN apt-get install -y yarn nodejs\n# RUN yarn\n# RUN rm -rf node_modules /usr/local/share/.cache/yarn\n\n# Clean up\nRUN apt-get remove -y curl gnupg\nRUN apt-get remove -y yarn nodejs\nRUN apt-get autoremove -y\nRUN rm -rf /var/lib/apt/lists/* && apt-get clean"
}