{
  "startTime": 1674253661178,
  "endTime": 1674253661728,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 116
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n#    Onix Config Manager - Copyright (c) 2018-2020 by www.gatblau.org\n#\n#    Licensed under the Apache License, Version 2.0 (the \"License\");\n#    you may not use this file except in compliance with the License.\n#    You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n#    Unless required by applicable law or agreed to in writing, software distributed under\n#    the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n#    either express or implied.\n#    See the License for the specific language governing permissions and limitations under the License.\n#\n#    Contributors to this project, hereby assign copyright in this code to the project,\n#    to be licensed under the same terms as the rest of the code.\n#\n# This dockerfile encapsulates the build process for the Onix Web API\n# The builder container is transient and downloads and install maven, package the Java app and extracts the\n# Springboot uberjar files to improve startup times\n# The release image copy the prepared app files from the builder image\n\n# the builder transient container\nFROM openjdk:15-jdk-alpine as builder\nRUN apk add unzip && rm -rf /var/cache/apk/*\nENV MAVEN_VERSION 3.6.3\nENV MAVEN_HOME /usr/lib/mvn\nENV PATH $MAVEN_HOME/bin:$PATH\n# download and install maven in the build container\nRUN wget https://archive.apache.org/dist/maven/maven-3/$MAVEN_VERSION/binaries/apache-maven-$MAVEN_VERSION-bin.tar.gz && \\\n  tar -zxvf apache-maven-$MAVEN_VERSION-bin.tar.gz && \\\n  rm apache-maven-$MAVEN_VERSION-bin.tar.gz && \\\n  mv apache-maven-$MAVEN_VERSION /usr/lib/mvn\n# define a working folder within the build container\nWORKDIR /app\n# copy the java project into the /app folder\nCOPY . .\n# 1. package the app skipping the cucumber integration tests\n#   (as it requires connectovity to database, that is not available within this process)\n# 2. unzip the sprinboot uberjar into a /tmp folder ready to be copied by the release image\nRUN mvn -Dmaven.test.skip=true -f pom.xml package && unzip -o ./target/*.jar -d /tmp\n\n# the final release image\n# uses universal base image rhel 8 minimal with OpenJ9 JVM and Open JDK 14\nFROM quay.io/gatblau/openjdk:14-j9-ubi8-min\nMAINTAINER Gatblau <onix@gatblau.org>\nLABEL author=\"gatblau.org\"\n# copy the unzipped application files to the\nCOPY --from=builder /tmp/BOOT-INF/lib /app/lib\nCOPY --from=builder /tmp/META-INF /app/META-INF\nCOPY --from=builder /tmp/BOOT-INF/classes /app\nUSER 20\nENTRYPOINT [\"java\",\"-cp\",\"app:app/lib/*\",\"org/gatblau/onix/App\"]\n"
}