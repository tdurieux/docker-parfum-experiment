{
  "startTime": 1674252502948,
  "endTime": 1674252504430,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 214,
        "lineEnd": 214,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 7,
        "columnEnd": 28
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 55
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 7,
        "columnEnd": 51
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 7,
        "columnEnd": 24
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 7,
        "columnEnd": 27
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 7,
        "columnEnd": 39
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 184,
        "lineEnd": 184,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 198,
        "lineEnd": 198,
        "columnStart": 7,
        "columnEnd": 24
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 233,
        "lineEnd": 233,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 242,
        "lineEnd": 242,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 218,
        "lineEnd": 218,
        "columnStart": 7,
        "columnEnd": 18
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Single-cell analysis pipeline for \"Integrated analysis and regulation of cellular diversity\"\n\nFROM rnakato/r_python_gpu:2020.12\nLABEL maintainer \"Ryuichiro Nakato <rnakato@iqb.u-tokyo.ac.jp>\"\n\nUSER root\nWORKDIR /opt\n\nARG GITHUB_PAT\nRUN set -x && \\\n    echo \"GITHUB_PAT=$GITHUB_PAT\" > ~/.Renviron \\\n    && cat ~/.Renviron\n\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n    libcurl4-openssl-dev \\\n    libgmp3-dev \\\n    libgtk-3-dev \\\n    libgtkmm-3.0-dev \\\n    libssl-dev \\\n    libxt-dev \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Python\nRUN pip install --no-cache-dir -U pip\nRUN conda update conda\nRUN conda install -y -c bioconda scanpy kallisto \\\n    && conda install -y louvain leidenalg \\\n    && conda install -y -c statiskit libboost \\\n    && pip install --no-cache-dir -U Cython\nRUN pip install --no-cache-dir llvmlite --ignore-installed\nRUN pip install --no-cache-dir -U velocyto scvelo numba pybind11 macs2\n\n# cellphoneDB\nRUN python -m venv cpdb-venv \\\n    && . cpdb-venv/bin/activate \\\n    && pip install --no-cache-dir cellphonedb scikit-learn==0.20.4\nENV PATH $PATH:/opt/cpdb-venv/bin/\n\n# SCCAF\nRUN python -m venv sccaf-venv \\\n    && . sccaf-venv/bin/activate \\\n    && pip install --no-cache-dir sccaf\nENV PATH $PATH:/opt/sccaf-venv/bin/\n\n# pySCENIC\nRUN python -m venv pyscenic-venv \\\n    && . pyscenic-venv/bin/activate \\\n    && pip install --no-cache-dir pyscenic\nENV PATH $PATH:/opt/pyscenic-venv/bin/\n\n# Scrublet\nRUN pip install --no-cache-dir scrublet\n\n# scVI\nRUN conda install scvi-tools -c bioconda -c conda-forge \\\n    && pip install --no-cache-dir scikit-misc plotnine\n\n# Palantir, MAGIC\nRUN pip install --no-cache-dir PhenoGraph palantir rpy2 magic-impute \\\n    && R -e \"install.packages('gam')\"\n\n# Theis_Tutorial\nRUN pip install --no-cache-dir gprofiler-official anndata2ri bbknn \\\n\t&& R -e \"BiocManager::install(c('MAST','clusterExperiment'))\"\n\n# Seurat\nRUN R -e \"install.packages(c('sleepwalk','bit64','zoo','scBio','Seurat','metap'), repos='https://cran.ism.ac.jp/')\"\n\n# R for jupyterbook\nRUN R -e \"install.packages(c('repr', 'IRdisplay', 'evaluate', 'crayon', 'pbdZMQ', 'devtools', 'uuid', 'digest'))\" \\\n    && R -e \"devtools::install_github('IRkernel/IRkernel')\" \\\n    && R -e \"IRkernel::installspec()\"\n\nRUN R -e \"BiocManager::install(c('limma','scater','pcaMethods','WGCNA','preprocessCore', 'RCA', 'scmap', 'mixtools', 'stringi', 'rbokeh', 'DT', 'NMF', 'pheatmap', 'R2HTML', 'doMC', 'doRNG', 'scran', 'slingshot','DropletUtils', 'monocle', 'scTensor'))\"\nRUN R -e \"options(timeout=6000); BiocManager::install(c('BSgenome.Hsapiens.UCSC.hg19', 'BSgenome.Hsapiens.UCSC.hg38', 'BSgenome.Mmusculus.UCSC.mm10', 'BSgenome.Scerevisiae.UCSC.sacCer3', 'BSgenome.Dmelanogaster.UCSC.dm6'))\"\nRUN R -e \"devtools::install_github(c('jokergoo/ComplexHeatmap'))\"\n\n# Seurat wrappers\nRUN R -e \"BiocManager::install(c('CoGAPS'))\"\nRUN R -e \"BiocManager::install(c('scry'))\"\nRUN R -e \"install.packages('glmpca')\"\nRUN R -e \"devtools::install_github('kharchenkolab/conos')\"\nRUN R -e \"devtools::install_github('satijalab/seurat', ref = 'mixscape')\"\nRUN R -e \"devtools::install_github('satijalab/seurat-wrappers')\"\n\n# SeuratData\nRUN R -e \"devtools::install_github('satijalab/seurat-data')\"\n#RUN R -e \"options(timeout=6000); SeuratData::InstallData(c('pbmcsca','ifnb','panc8','pbmc3k'))\"\n\nCOPY SeuratData/ifnb.SeuratData_3.1.0.tar.gz ifnb.SeuratData_3.1.0.tar.gz\nCOPY SeuratData/panc8.SeuratData_3.0.2.tar.gz panc8.SeuratData_3.0.2.tar.gz\nCOPY SeuratData/pbmcsca.SeuratData_3.0.0.tar.gz pbmcsca.SeuratData_3.0.0.tar.gz\nCOPY SeuratData/pbmc3k.SeuratData_3.0.0.tar.gz pbmc3k.SeuratData_3.0.0.tar.gz\nRUN R -e \"install.packages('ifnb.SeuratData_3.1.0.tar.gz', repos = NULL, type = 'source')\"\nRUN R -e \"install.packages('panc8.SeuratData_3.0.2.tar.gz', repos = NULL, type = 'source')\"\nRUN R -e \"install.packages('pbmcsca.SeuratData_3.0.0.tar.gz', repos = NULL, type = 'source')\"\nRUN R -e \"install.packages('pbmc3k.SeuratData_3.0.0.tar.gz', repos = NULL, type = 'source')\"\nRUN rm ifnb.SeuratData_3.1.0.tar.gz panc8.SeuratData_3.0.2.tar.gz pbmcsca.SeuratData_3.0.0.tar.gz pbmc3k.SeuratData_3.0.0.tar.gz\n\n# Signac\nRUN R -e \"BiocManager::install('ggbio')\"\nRUN R -e \"install.packages('Signac')\" \\\n    && R -e \"BiocManager::install(c('EnsDb.Hsapiens.v75','EnsDb.Hsapiens.v79', 'EnsDb.Hsapiens.v86', 'EnsDb.Mmusculus.v79'))\"\n\n# SingleR\nRUN R -e \"BiocManager::install(c('SingleR','scRNAseq','celldex'))\"\n\n# scImpute\nRUN R -e \"devtools::install_github(c('Vivianstats/scImpute'))\"\n# singleCellHaystack\nRUN R -e \"devtools::install_github(c('alexisvdb/singleCellHaystack'))\"\n# velocyto.R\nRUN R -e \"devtools::install_github(c('aertslab/SCopeLoomR', 'velocyto-team/velocyto.R'))\"\n\n# scCATCH\nRUN R -e \"devtools::install_github('ZJUFanLab/scCATCH')\"\n\n# SingleCellNet\nRUN R -e \"devtools::install_github(c('pcahan1/singleCellNet'))\"\nRUN R -e \"devtools::install_github('mojaveazure/loomR', ref = 'develop')\"\n\n# Splatter\nRUN R -e \"BiocManager::install('splatter')\"\n\n# SCRABBLE\nRUN R -e \"devtools::install_github('software-github/SCRABBLE/R')\"\n\n# Imputation comparison\nRUN R -e \"install.packages(c('SAVER','ClusterR'))\"\n\n# SingleCellSingnalR\nRUN R -e \"devtools::install_github('SCA-IRCM/SingleCellSignalR_v1', subdir = 'SingleCellSignalR')\"\n\n# ArchR\nRUN R -e \"devtools::install_github('GreenleafLab/ArchR', ref='master', repos = BiocManager::repositories())\"\n# chromVAR\nRUN R -e \"BiocManager::install(c('chromVAR'))\" \\\n    && R -e \"devtools::install_github(c('GreenleafLab/chromVARmotifs','GreenleafLab/motifmatchr'))\"\n# FlyATACAtlus\nRUN R -e \"install.packages(c('irlba','DDRTree','densityClust'))\"\n\n# Monocle3\nRUN R -e \"BiocManager::install(c('BiocGenerics', 'DelayedArray', 'DelayedMatrixStats', 'S4Vectors', 'SingleCellExperiment', 'SummarizedExperiment', 'batchelor'))\"\nRUN R -e \"devtools::install_github('cole-trapnell-lab/leidenbase')\" \\\n    && R -e \"devtools::install_github('cole-trapnell-lab/monocle3', ref='develop')\" \\\n    && R -e \"BiocManager::install(c('org.Mm.eg.db', 'org.Hs.eg.db', 'org.Dm.eg.db', 'org.Ce.eg.db'))\" \\\n    && R -e \"devtools::install_github('cole-trapnell-lab/garnett', ref='monocle3')\"\n# cicero\nRUN R -e \"devtools::install_github('cole-trapnell-lab/cicero-release', ref = 'monocle3')\"\n\n# kallisto, bustools\nRUN git clone https://github.com/BUStools/bustools.git \\\n    && cd bustools \\\n    && mkdir build \\\n    && cd build \\\n    && cmake .. && make && make install \\\n    && R -e \"devtools::install_github(c('tidymodels/tidymodels','BUStools/BUSpaRse'))\" \\\n    && rm -rf /opt/bustools\n\n# DoubletFinder\nRUN R -e \"devtools::install_github('chris-mcginnis-ucsf/DoubletFinder')\"\n\n# LIGER (FFTW, FIt-SNE)\n#RUN wget http://www.fftw.org/fftw-3.3.8.tar.gz \\\n#    && tar zxvf fftw-3.3.8.tar.gz \\\n#    && rm fftw-3.3.8.tar.gz \\\n#    && cd fftw-3.3.8 \\\n#    && ./configure \\\n#    && make \\\n#    && make install \\\n#    && git clone https://github.com/KlugerLab/FIt-SNE.git \\\n#    && cd FIt-SNE/ \\\n#    && g++ -std=c++11 -O3  src/sptree.cpp src/tsne.cpp src/nbodyfft.cpp  -o bin/fast_tsne -pthread -lfftw3 -lm \\\n#    && cp bin/fast_tsne /usr/local/bin/\n#RUN R -e \"devtools::install_github(c('MacoskoLab/liger'))\"\n#ADD bedops_linux_x86_64-v2.4.39 bedops_linux_x86_64-v2.4.39\n#ENV PATH ${PATH}:/opt/bedops_linux_x86_64-v2.4.39\n\n# Harmony\nRUN R -e \"install.packages('gganimate')\" \\\n    && R -e \"BiocManager::install(c('sva','DESeq2'))\" \\\n    && R -e \"devtools::install_github(c('immunogenomics/harmony','immunogenomics/presto','JEFworks/MUDAN'))\"\nRUN pip install --no-cache-dir harmonypy\n\n# scAI\nRUN R -e \"devtools::install_github('sqjin/scAI')\"\n\n# CellAssign\nRUN R -e \"install.packages(c('here'))\"\n#RUN R -e \"tensorflow::install_tensorflow(extra_packages='tensorflow-probability', version = '2.1.0')\" \\\nRUN    R -e \"tensorflow::tf_config()\"\nRUN R -e \"devtools::install_github('Irrationone/cellassign')\"\n\n# scGen\nRUN python -m venv scgen-venv \\\n    && . scgen-venv/bin/activate \\\n    && pip install --no-cache-dir scgen\nENV PATH $PATH:/opt/scgen-venv/bin/\n\n# metacells\nRUN R -e \"BiocManager::install('tanaylab/metacell')\"\n\n# motif database\nRUN R -e \"BiocManager::install(c('JASPAR2016','JASPAR2018','JASPAR2020'))\"\n\n# cisTopic\nRUN R -e \"devtools::install_github('aertslab/cisTopic')\"\n\n# SeuratDisk\nRUN R -e \"devtools::install_github('mojaveazure/seurat-disk')\"\n\n# LIGER (FFTW, FIt-SNE)\nRUN wget https://www.fftw.org/fftw-3.3.8.tar.gz \\\n    && tar zxvf fftw-3.3.8.tar.gz \\\n    && rm fftw-3.3.8.tar.gz \\\n    && cd fftw-3.3.8 \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n    && make \\\n    && make install \\\n    && git clone https://github.com/KlugerLab/FIt-SNE.git \\\n    && cd FIt-SNE/ \\\n    && g++ -std=c++11 -O3  src/sptree.cpp src/tsne.cpp src/nbodyfft.cpp  -o bin/fast_tsne -pthread -lfftw3 -lm \\\n    && cp bin/fast_tsne /usr/local/bin/\nRUN R -e \"devtools::install_github(c('MacoskoLab/liger'))\"\nADD bedops_linux_x86_64-v2.4.39 bedops_linux_x86_64-v2.4.39\nENV PATH ${PATH}:/opt/bedops_linux_x86_64-v2.4.39\n\nRUN chmod 777 jupyternotebook.sh rserver.sh\nRUN rm ~/.Renviron\n\n# DoubletDetection\nRUN pip install --no-cache-dir doubletdetection\n\nRUN apt-get update \\\n     && apt-get install -y --no-install-recommends \\\n     libgraphviz-dev \\\n     && apt-get clean \\\n     && rm -rf /var/lib/apt/lists/*\n\n# Constclust\nRUN pip install --no-cache-dir constclust\n"
}