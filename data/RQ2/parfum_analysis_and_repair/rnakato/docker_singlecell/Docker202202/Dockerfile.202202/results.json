{
  "startTime": 1674249301939,
  "endTime": 1674249303638,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 103,
        "lineEnd": 103,
        "columnStart": 7,
        "columnEnd": 49
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 54
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 54
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 7,
        "columnEnd": 63
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 7,
        "columnEnd": 50
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 7,
        "columnEnd": 56
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 7,
        "columnEnd": 54
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 7,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 7,
        "columnEnd": 24
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 79,
        "lineEnd": 79,
        "columnStart": 7,
        "columnEnd": 27
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 84,
        "lineEnd": 84,
        "columnStart": 7,
        "columnEnd": 24
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 91,
        "lineEnd": 91,
        "columnStart": 7,
        "columnEnd": 37
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 92,
        "lineEnd": 92,
        "columnStart": 7,
        "columnEnd": 57
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 93,
        "lineEnd": 93,
        "columnStart": 7,
        "columnEnd": 36
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 98,
        "lineEnd": 98,
        "columnStart": 7,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 100,
        "lineEnd": 100,
        "columnStart": 7,
        "columnEnd": 36
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 238,
        "lineEnd": 238,
        "columnStart": 7,
        "columnEnd": 58
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 250,
        "lineEnd": 250,
        "columnStart": 7,
        "columnEnd": 35
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 107,
        "lineEnd": 107,
        "columnStart": 7,
        "columnEnd": 18
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Single-cell analysis pipeline for \"Integrated analysis and regulation of cellular diversity\"\n\nFROM rnakato/r_python_gpu:2022.02\nLABEL maintainer \"Ryuichiro Nakato <rnakato@iqb.u-tokyo.ac.jp>\"\n\nUSER root\nWORKDIR /work\n\nENV LD_LIBRARY_PATH $LD_LIBRARY_PATH:/opt/conda/lib/\n\nARG GITHUB_PAT\nRUN set -x && \\\n    echo \"GITHUB_PAT=$GITHUB_PAT\" > ~/.Renviron \\\n    && cat ~/.Renviron \\\n    && apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n    libcurl4-openssl-dev \\\n    libgfortran5 \\\n    libgmp3-dev \\\n    libgraphviz-dev \\\n    libgtk-3-dev \\\n    libgtkmm-3.0-dev \\\n    libssl-dev \\\n    libunwind-dev \\\n    libxt-dev \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/*\n\nCMD [\"/bin/bash\"]\n\n# Python\nRUN pip install --no-cache-dir -U pip\n\n# Harmonypy, Scrublet, DoubletDetection, Constclust, monet, EpiScanpy\nRUN pip install --no-cache-dir -U velocyto scvelo pybind11 macs2 dash\nRUN conda install -y llvmlite numba \\\n    && conda install -y -c bioconda scanpy kallisto \\\n    && conda install -y louvain leidenalg \\\n    && conda install -y -c statiskit libboost \\\n    && conda install -y cython python-igraph\n\n# Harmonypy, Scrublet, DoubletDetection, Constclust, monet, EpiScanpy\nRUN conda uninstall TBB\nRUN pip install --no-cache-dir -U velocyto scvelo pybind11 macs2 dash \\\n    && pip install --no-cache-dir harmonypy daal==2021.2.3 scrublet constclust\n\n# scVI\nRUN python -m venv scvi-venv \\\n    && . scvi-venv/bin/activate \\\n    && pip install --no-cache-dir scikit-misc plotnine scvi-tools \\\n    && deactivate \\\n# Palantir, MAGIC\n    && pip install --no-cache-dir PhenoGraph palantir rpy2 magic-impute \\\n    && R -e \"install.packages('gam')\" \\\n# Theis_Tutorial\n    && pip install --no-cache-dir gprofiler-official anndata2ri bbknn \\\n    && R -e \"BiocManager::install(c('MAST','clusterExperiment'))\" \\\n# CellRank\n    && conda install -y -c conda-forge -c bioconda cellrank-krylov\n\n# cellphoneDB\nRUN conda create -n cpdb python=3.7 \\\n    && conda init bash \\\n    && . ~/.bashrc \\\n    && conda activate cpdb \\\n    && pip install --no-cache-dir cellphonedb \\\n    && conda deactivate \\\n# SCCAF\n    && python -m venv sccaf-venv \\\n    && . sccaf-venv/bin/activate \\\n    && pip install --no-cache-dir sccaf \\\n    && deactivate\n# pySCENIC\nRUN conda create -y -n pyscenic python=3.7 \\\n    && conda init bash \\\n    && . ~/.bashrc \\\n    && conda activate pyscenic \\\n    && conda install -y numpy \\\n    && conda install -y -c anaconda cytoolz \\\n    && pip install --no-cache-dir pyscenic \\\n    && conda deactivate\n# scGen\nRUN python -m venv scgen-venv \\\n    && . scgen-venv/bin/activate \\\n    && pip install --no-cache-dir scgen \\\n    && deactivate \\\n# cell2cell\n    && conda create -n cell2cell -y python=3.7.8 jupyter numpy scipy matplotlib pandas seaborn \\\n    && conda init bash \\\n    && . ~/.bashrc \\\n    && conda activate cell2cell \\\n    && pip install --no-cache-dir 'cell2cell==0.2.2' \\\n    && pip install --no-cache-dir git+https://github.com/BubaVV/Pyevolve \\\n    && pip install --no-cache-dir obonet umap-learn \\\n    && conda deactivate \\\n# SAVER-X\n    && python -m venv saverx-venv \\\n    && . saverx-venv/bin/activate \\\n    && pip install --no-cache-dir sctransfer \\\n    && R -e \"remotes::install_github('jingshuw/SAVERX')\" \\\n    && pip install --no-cache-dir obonet umap-learn \\\n    && deactivate \\\n# LIGER (FFTW, FIt-SNE)\n    && wget https://www.fftw.org/fftw-3.3.8.tar.gz \\\n    && tar zxvf fftw-3.3.8.tar.gz \\\n    && rm fftw-3.3.8.tar.gz \\\n    && cd fftw-3.3.8 \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n    && make \\\n    && make install \\\n    && git clone https://github.com/KlugerLab/FIt-SNE.git \\\n    && cd FIt-SNE/ \\\n    && g++ -std=c++11 -O3  src/sptree.cpp src/tsne.cpp src/nbodyfft.cpp  -o bin/fast_tsne -pthread -lfftw3 -lm \\\n    && cp bin/fast_tsne /usr/local/bin/ \\\n    && cd \\\n    && rm -rf ~/fftw-3.3.8 \\\n    && R -e \"remotes::install_github(c('MacoskoLab/liger'))\" \\\n    && conda clean -i -t -y\n\n# kallisto, bustools\nRUN git clone https://github.com/BUStools/bustools.git \\\n    && cd bustools \\\n    && mkdir build \\\n    && cd build \\\n    && cmake .. && make && make install \\\n    && R -e \"remotes::install_github(c('tidymodels/tidymodels','BUStools/BUSpaRse'))\" \\\n    && rm -rf /work/bustools\n\n# R for jupyterbook\nRUN R -e \"install.packages(c('repr', 'IRdisplay', 'evaluate', 'crayon', 'pbdZMQ', 'devtools', 'uuid', 'digest'))\" \\\n    && R -e \"remotes::install_github('IRkernel/IRkernel')\" \\\n    && R -e \"IRkernel::installspec()\" \\\n# DelayedMatrixStats\n    && R -e \"devtools::install_github('PeteHaitch/DelayedMatrixStats@RELEASE_3_12')\" \\\n# others\n    && R -e \"BiocManager::install(c('limma','scater','pcaMethods','WGCNA','preprocessCore', 'RCA', 'scmap', 'mixtools', 'stringi', 'rbokeh', 'DT', 'NMF', 'pheatmap', 'R2HTML', 'doMC', 'doRNG', 'scran', 'slingshot','DropletUtils', 'monocle', 'MeSH.Hsa.eg.db', 'scTensor'))\" \\\n    && R -e \"options(timeout=6000); BiocManager::install(c('BSgenome.Hsapiens.UCSC.hg19', 'BSgenome.Hsapiens.UCSC.hg38', 'BSgenome.Mmusculus.UCSC.mm10', 'BSgenome.Scerevisiae.UCSC.sacCer3', 'BSgenome.Dmelanogaster.UCSC.dm6'))\" \\\n    && R -e \"BiocManager::install(c('EnsDb.Hsapiens.v75','EnsDb.Hsapiens.v79', 'EnsDb.Hsapiens.v86', 'EnsDb.Mmusculus.v79'))\" \\\n    && R -e \"remotes::install_github(c('jokergoo/ComplexHeatmap'))\"\n\n# Seurat\nCOPY SeuratData SeuratData\n\nRUN R -e \"install.packages(c('sleepwalk','bit64','here','zoo','scBio','Seurat','metap'))\" \\\n    && R -e \"remotes::install_github('mojaveazure/seurat-disk')\" \\\n# Signac\n    && R -e \"BiocManager::install('ggbio')\" \\\n    && R -e \"install.packages('Signac')\" \\\n# SingleR\n    && R -e \"BiocManager::install(c('SingleR','scRNAseq','celldex'))\" \\\n# Seurat wrappers\n    && R -e \"BiocManager::install(c('CoGAPS'))\" \\\n    && R -e \"BiocManager::install(c('scry'))\" \\\n    && R -e \"install.packages('glmpca')\" \\\n    && R -e \"remotes::install_github('kharchenkolab/conos')\" \\\n#    && R -e \"remotes::install_github('satijalab/seurat', ref = 'mixscape')\" \\\n    && R -e \"remotes::install_github('satijalab/seurat-wrappers')\" \\\n# SeuratData\n    && R -e \"remotes::install_github('satijalab/seurat-data')\" \\\n    && R -e \"install.packages('SeuratData/ifnb.SeuratData_3.1.0.tar.gz', repos = NULL, type = 'source')\" \\\n    && R -e \"install.packages('SeuratData/panc8.SeuratData_3.0.2.tar.gz', repos = NULL, type = 'source')\" \\\n    && R -e \"install.packages('SeuratData/pbmcsca.SeuratData_3.0.0.tar.gz', repos = NULL, type = 'source')\" \\\n    && R -e \"install.packages('SeuratData/pbmc3k.SeuratData_3.1.4.tar.gz', repos = NULL, type = 'source')\" \\\n    && R -e \"install.packages('SeuratData/celegans.embryo.SeuratData_0.1.0.tar.gz', repos = NULL, type = 'source')\" \\\n    && R -e \"install.packages('SeuratData/cbmc.SeuratData_3.1.4.tar.gz', repos = NULL, type = 'source')\" \\\n    && R -e \"install.packages('SeuratData/hcabm40k.SeuratData_3.0.0.tar.gz', repos = NULL, type = 'source')\" \\\n    && R -e \"install.packages('SeuratData/thp1.eccite.SeuratData_3.1.5.tar.gz', repos = NULL, type = 'source')\" \\\n    && R -e \"install.packages('SeuratData/stxBrain.SeuratData_0.1.1.tar.gz', repos = NULL, type = 'source')\" \\\n    && R -e \"install.packages('SeuratData/stxKidney.SeuratData_0.1.0.tar.gz', repos = NULL, type = 'source')\" \\\n    && R -e \"install.packages('SeuratData/bmcite.SeuratData_0.3.0.tar.gz', repos = NULL, type = 'source')\" \\\n    && R -e \"install.packages('SeuratData/pbmcMultiome.SeuratData_0.1.0.tar.gz', repos = NULL, type = 'source')\" \\\n    && R -e \"install.packages('SeuratData/ssHippo.SeuratData_3.1.4.tar.gz', repos = NULL, type = 'source')\" \\\n    && rm -rf SeuratData\n\n# scImpute, singleCellHaystack, scCATCH\nRUN R -e \"remotes::install_github(c('Vivianstats/scImpute', 'alexisvdb/singleCellHaystack', 'ZJUFanLab/scCATCH'))\" \\\n# velocyto.R\n    && R -e \"remotes::install_github(c('aertslab/SCopeLoomR', 'velocyto-team/velocyto.R'))\" \\\n    && R -e \"install.packages('pagoda2')\" \\\n# SingleCellNet\n    && R -e \"remotes::install_github(c('pcahan1/singleCellNet'))\" \\\n    && R -e \"remotes::install_github('mojaveazure/loomR', ref = 'develop')\" \\\n# Splatter, SC3\n    && R -e \"BiocManager::install(c('splatter','SC3'))\" \\\n# SCRABBLE\n    && R -e \"remotes::install_github('software-github/SCRABBLE/R')\" \\\n# Imputation comparison\n    && R -e \"install.packages(c('SAVER','ClusterR'))\" \\\n# SingleCellSingnalR\n    && R -e \"BiocManager::install(c('SingleCellSignalR'))\" \\\n# ArchR\n    && R -e \"devtools::install_github('GreenleafLab/ArchR', ref='master', repos = BiocManager::repositories())\" \\\n# chromVAR\n    && R -e \"BiocManager::install(c('chromVAR'))\" \\\n    && R -e \"remotes::install_github(c('GreenleafLab/chromVARmotifs','GreenleafLab/motifmatchr'))\" \\\n# FlyATACAtlus\n    && R -e \"install.packages(c('irlba','DDRTree','densityClust'))\"\n# Monocle3\nRUN R -e \"BiocManager::install(c('BiocGenerics', 'limma', 'S4Vectors', 'SingleCellExperiment', 'SummarizedExperiment', 'batchelor', 'Matrix.utils'))\" \\\n    && R -e \"remotes::install_github('cole-trapnell-lab/leidenbase')\" \\\n    && R -e \"remotes::install_github('cole-trapnell-lab/monocle3', ref='develop')\" \\\n    && R -e \"BiocManager::install(c('org.Mm.eg.db', 'org.Hs.eg.db', 'org.Dm.eg.db', 'org.Ce.eg.db'))\" \\\n    && R -e \"remotes::install_github('cole-trapnell-lab/garnett', ref='monocle3')\" \\\n# cicero\n    && R -e \"remotes::install_github('cole-trapnell-lab/cicero-release', ref = 'monocle3')\" \\\n# DoubletFinder\n    && R -e \"remotes::install_github('chris-mcginnis-ucsf/DoubletFinder')\" \\\n# Harmony\n    && R -e \"install.packages('gganimate')\" \\\n    && R -e \"BiocManager::install(c('sva','DESeq2'))\" \\\n    && R -e \"remotes::install_github(c('immunogenomics/harmony','immunogenomics/presto','JEFworks/MUDAN'))\"\n\n# metacells\nRUN R -e \"BiocManager::install('tanaylab/metacell')\" \\\n# motif database\n    && R -e \"BiocManager::install(c('JASPAR2016','JASPAR2018','JASPAR2020'))\" \\\n# cisTopic, scAI\n    && R -e \"remotes::install_github(c('aertslab/cisTopic', 'sqjin/scAI'))\" \\\n# SCDC, MuSiC\n    && R -e \"remotes::install_github(c('renozao/xbioc','meichendong/SCDC', 'xuranw/MuSiC'))\" \\\n# MOFA2\n    && R -e \"remotes::install_github('bioFAM/MOFA2', build_opts = c('--no-resave-data --no-build-vignettes'))\" \\\n# bigSCale2\n    && R -e \"install.packages(c('fmsb','ClassDiscovery','ggalt','ggdendro','ggpubr'))\" \\\n    && R -e \"BiocManager::install(c('org.Mm.eg.db', 'org.Hs.eg.db', 'BioQC', 'SingleCellExperiment'))\" \\\n    && R -e \"options(timeout=6000); remotes::install_github('iaconogi/bigSCale2')\"\n\n# FROWMAP\nRUN R -e \"install.packages('SDMTools',,'http://rforge.net/',type='source')\" \\\n    && R -e \"install.packages(c('igraph','robustbase','shiny','tcltk','rhandsontable'))\" \\\n    && R -e \"BiocManager::install('flowCore')\" \\\n    && R -e \"remotes::install_github(c('nolanlab/scaffold','ParkerICI/vite','nolanlab/Rclusterpp','nolanlab/spade','zunderlab/FLOWMAP'))\"\n\n# CellAssign\nRUN conda create -n cellassign -y python=3.7.8 jupyter numpy scipy matplotlib pandas seaborn \\\n    && conda init bash \\\n    && . ~/.bashrc \\\n    && conda activate cellassign \\\n    && pip install --no-cache-dir tensorflow==2.1.0 tensorflow_gpu==2.1.0 \\\n    && R -e \"install.packages('tensorflow')\" \\\n    && R -e \"tensorflow::install_tensorflow(extra_packages='tensorflow-probability', version = '2.1.0')\" \\\n    && R -e \"tensorflow::tf_config()\" \\\n    && R -e \"remotes::install_github('Irrationone/cellassign')\" \\\n    && conda deactivate\n\n#RUN pip install doubletdetection\nRUN conda create -n doubletdetection -y python=3.7.8 \\\n    && conda init bash \\\n    && . ~/.bashrc \\\n    && conda activate doubletdetection \\\n    && pip install --no-cache-dir doubletdetection \\\n    && conda deactivate\n\nRUN pip uninstall -y macs2 \\\n    && conda install -y -c bioconda macs2 \\\n    && conda uninstall r-base\n\nCOPY bedops_linux_x86_64-v2.4.39 bedops_linux_x86_64-v2.4.39\nCOPY cell2cell_jupyter.sh cell2cell_jupyter.sh\nENV PATH $PATH:/work/bedops_linux_x86_64-v2.4.39 $PATH:/work/sccaf-venv/bin/ $PATH:/work/cpdb-venv/bin/ $PATH:/work/pyscenic-venv/bin/ $PATH:/work/scgen-venv/bin/\n\nRUN chmod 777 jupyternotebook.sh rserver.sh cell2cell_jupyter.sh\nRUN rm ~/.Renviron\n"
}