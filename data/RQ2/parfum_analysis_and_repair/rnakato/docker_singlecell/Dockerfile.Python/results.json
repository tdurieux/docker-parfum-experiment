{
  "startTime": 1674249225028,
  "endTime": 1674249226464,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 84,
        "lineEnd": 84,
        "columnStart": 7,
        "columnEnd": 49
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 7,
        "columnEnd": 50
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 7,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 7,
        "columnEnd": 24
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 7,
        "columnEnd": 27
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 7,
        "columnEnd": 24
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 7,
        "columnEnd": 37
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 73,
        "lineEnd": 73,
        "columnStart": 7,
        "columnEnd": 57
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 74,
        "lineEnd": 74,
        "columnStart": 7,
        "columnEnd": 36
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 79,
        "lineEnd": 79,
        "columnStart": 7,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 81,
        "lineEnd": 81,
        "columnStart": 7,
        "columnEnd": 36
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 105,
        "lineEnd": 105,
        "columnStart": 7,
        "columnEnd": 58
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 115,
        "lineEnd": 115,
        "columnStart": 7,
        "columnEnd": 35
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 120,
        "lineEnd": 120,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 121,
        "lineEnd": 121,
        "columnStart": 7,
        "columnEnd": 79
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 123,
        "lineEnd": 123,
        "columnStart": 7,
        "columnEnd": 54
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 125,
        "lineEnd": 125,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 130,
        "lineEnd": 130,
        "columnStart": 7,
        "columnEnd": 39
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 135,
        "lineEnd": 135,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 144,
        "lineEnd": 144,
        "columnStart": 7,
        "columnEnd": 41
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 88,
        "lineEnd": 88,
        "columnStart": 7,
        "columnEnd": 18
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Single-cell analysis pipeline for \"Integrated analysis and regulation of cellular diversity\"\n\nFROM docker_singlecell_singlecell_jupyter_r\nLABEL maintainer \"Ryuichiro Nakato <rnakato@iqb.u-tokyo.ac.jp>\"\n\nUSER root\nWORKDIR /work\n\nENV LD_LIBRARY_PATH $LD_LIBRARY_PATH:/opt/conda/lib/\n\nARG GITHUB_PAT\nRUN set -x && \\\n    echo \"GITHUB_PAT=$GITHUB_PAT\" > ~/.Renviron \\\n    && cat ~/.Renviron\n\nCMD [\"/bin/bash\"]\n\n# Python\nRUN conda uninstall TBB\n\n# MACS2\nRUN wget https://github.com/macs3-project/MACS/archive/refs/tags/v2.2.6.tar.gz \\\n    && tar zxvf v2.2.6.tar.gz && cd MACS-2.2.6/ \\\n    && python setup.py install \\\n    && rm -rf /work/v2.2.6.tar.gz /work/MACS-2.2.6/\n\n## conda install\nRUN conda install -y llvmlite numba \\\n    && conda install -y -c bioconda scanpy kallisto \\\n    && conda install -y louvain leidenalg\nRUN conda install -y -c statiskit libboost\nRUN conda install -y cython python-igraph\n# CellRank\nRUN conda install -y -c bioconda cellrank #cellrank-krylov\n\n## virtual environment\n# scVI\nRUN python -m venv scvi-venv \\\n    && . scvi-venv/bin/activate \\\n    && pip install --no-cache-dir scikit-misc plotnine scvi-tools \\\n    && deactivate\n# cellphoneDB\nRUN conda create -n cpdb python=3.7 \\\n    && conda init bash \\\n    && . ~/.bashrc \\\n    && conda activate cpdb \\\n    && pip install --no-cache-dir cellphonedb \\\n    && conda deactivate \\\n# SCCAF\n    && python -m venv sccaf-venv \\\n    && . sccaf-venv/bin/activate \\\n    && pip install --no-cache-dir sccaf \\\n    && deactivate\n# pySCENIC\nRUN conda create -y -n pyscenic python=3.7 \\\n    && conda init bash \\\n    && . ~/.bashrc \\\n    && conda activate pyscenic \\\n    && conda install -y numpy \\\n    && conda install -y -c anaconda cytoolz \\\n    && pip install --no-cache-dir pyscenic \\\n    && conda deactivate\n# scGen\nRUN python -m venv scgen-venv \\\n    && . scgen-venv/bin/activate \\\n    && pip install --no-cache-dir scgen \\\n    && deactivate \\\n# cell2cell\n    && conda create -n cell2cell -y python=3.7.8 jupyter numpy scipy matplotlib pandas seaborn \\\n    && conda init bash \\\n    && . ~/.bashrc \\\n    && conda activate cell2cell \\\n    && pip install --no-cache-dir 'cell2cell==0.2.2' \\\n    && pip install --no-cache-dir git+https://github.com/BubaVV/Pyevolve \\\n    && pip install --no-cache-dir obonet umap-learn \\\n    && conda deactivate \\\n# SAVER-X\n    && python -m venv saverx-venv \\\n    && . saverx-venv/bin/activate \\\n    && pip install --no-cache-dir sctransfer \\\n    && R -e \"remotes::install_github('jingshuw/SAVERX')\" \\\n    && pip install --no-cache-dir obonet umap-learn \\\n    && deactivate \\\n# LIGER (FFTW, FIt-SNE)\n    && wget https://www.fftw.org/fftw-3.3.8.tar.gz \\\n    && tar zxvf fftw-3.3.8.tar.gz \\\n    && rm fftw-3.3.8.tar.gz \\\n    && cd fftw-3.3.8 \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n    && make \\\n    && make install \\\n    && git clone https://github.com/KlugerLab/FIt-SNE.git \\\n    && cd FIt-SNE/ \\\n    && g++ -std=c++11 -O3  src/sptree.cpp src/tsne.cpp src/nbodyfft.cpp  -o bin/fast_tsne -pthread -lfftw3 -lm \\\n    && cp bin/fast_tsne /usr/local/bin/ \\\n    && cd \\\n    && rm -rf ~/fftw-3.3.8 \\\n    && R -e \"install.packages('rliger')\"\n #   && R -e \"remotes::install_github(c('MacoskoLab/liger'))\" \\\n #   && conda clean -i -t -y\n# CellAssign\nRUN conda create -n cellassign -y python=3.7.8 jupyter numpy scipy matplotlib pandas seaborn \\\n    && conda init bash \\\n    && . ~/.bashrc \\\n    && conda activate cellassign \\\n    && pip install --no-cache-dir tensorflow==2.1.0 tensorflow_gpu==2.1.0 \\\n    && R -e \"install.packages('tensorflow')\" \\\n    && R -e \"tensorflow::install_tensorflow(extra_packages='tensorflow-probability', version = '2.1.0')\" \\\n    && R -e \"tensorflow::tf_config()\" \\\n    && R -e \"remotes::install_github('Irrationone/cellassign')\" \\\n    && conda deactivate\nRUN conda create -n doubletdetection -y python=3.7.8 \\\n    && conda init bash \\\n    && . ~/.bashrc \\\n    && conda activate doubletdetection \\\n    && pip install --no-cache-dir doubletdetection \\\n    && conda deactivate\n\n# pip install\n#RUN conda install -y cython\nRUN pip install --no-cache-dir -U velocyto scvelo pybind11 dash \\\n    && pip install --no-cache-dir harmonypy daal==2021.2.3 scrublet constclust monet episcanpy \\\n# Theis_Tutorial\n    && pip install --no-cache-dir gprofiler-official anndata2ri bbknn\n# Palantir, MAGIC\nRUN pip install --no-cache-dir PhenoGraph palantir rpy2 magic-impute \\\n    && R -e \"install.packages('gam')\"\n\n# DEBUG\nRUN R -e \"install.packages('igraph')\" \\\n    && pip install --no-cache-dir -U jupyterlab jinja2 \\\n    && rm /opt/conda/lib/libtinfo.so*\n\nRUN R -e \"install.packages('dyngen')\"\n\nRUN pip install --no-cache-dir -U scanpy \\\n    && conda install -c conda-forge fa2\n\nRUN conda install -y -c bioconda samtools\n\nRUN conda create -n dynamo -y python=3.7 jupyter pandas==1.1.1 sinfo \\\n    && conda init bash \\\n    && . ~/.bashrc \\\n    && conda activate dynamo \\\n    && pip install --no-cache-dir dynamo-release pycairo \\\n    && deactivate\n\nCOPY bedops_linux_x86_64-v2.4.39 bedops_linux_x86_64-v2.4.39\nCOPY cell2cell_jupyter.sh cell2cell_jupyter.sh\nENV PATH $PATH:/work:/opt/bin:/work/bedops_linux_x86_64-v2.4.39:/work/sccaf-venv/bin/:/work/cpdb-venv/bin/:/work/pyscenic-venv/bin/:/work/scgen-venv/bin/\n\nRUN chmod 777 jupyternotebook.sh rserver.sh cell2cell_jupyter.sh\nRUN mkdir /opt/bin && cp jupyternotebook.sh rserver.sh cell2cell_jupyter.sh /opt/bin\nRUN rm ~/.Renviron\n"
}