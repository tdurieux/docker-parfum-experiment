{
  "startTime": 1674255168592,
  "endTime": 1674255169505,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 66
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 2,
        "lineEnd": 5,
        "columnStart": 22,
        "columnEnd": 23
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 2,
        "lineEnd": 5,
        "columnStart": 22,
        "columnEnd": 23
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.7-bullseye\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    postgresql-client gettext \\\n    libmpg123-dev libasound2-dev \\\n    wireless-tools sudo && rm -rf /var/lib/apt/lists/*;\n\nCOPY Docker/nab/*.sh /usr/local/bin/\n\n# Fake nabd systemd service file used to retrieve the working directory\nRUN echo \"WorkingDirectory=/opt/pynab\" > /lib/systemd/system/nabd.service\n\n# Fake systemd-time-wait-sync.service needed by nabclockd\nRUN mkdir -p /run/systemd/timesync/ && touch /run/systemd/timesync/synchronized\n\n# Naively fake systemctl, used to check if the SSH service is active\nRUN ln -s /bin/false /bin/systemctl\n\n# Make /var/log/ writable for service log files, /run for PID files\nRUN chmod a+w /var/log /run\n\n# Set timezone\nRUN echo \"Europe/Paris\" > /etc/timezone\nRUN ln -fs /usr/share/zoneinfo/Europe/Paris /etc/localtime\n\n# Make sure piwheels is available for pip\nRUN /bin/echo -e \"[global]\\nextra-index-url=https://www.piwheels.org/simple\\n\" > /etc/pip.conf\n\nRUN groupadd -g 1000 pi\nRUN useradd -u 1000 -g pi -m -s /bin/bash tagtagtag\nRUN echo \"tagtagtag ALL=(ALL) NOPASSWD: ALL\" > /etc/sudoers.d/010_tagtagtag-nopasswd\n\nRUN mkdir -p /opt/pynab /opt/venv\nRUN chown tagtagtag:pi /opt/pynab /opt/venv\n\nUSER tagtagtag\n\nWORKDIR /opt/pynab\n\nENV VIRTUAL_ENV=/opt/venv\nRUN python3.7 -m venv ${VIRTUAL_ENV}\nENV PATH=${VIRTUAL_ENV}/bin:${PATH}\n\nCOPY requirements.txt /tmp/requirements.txt\n# No ASR in virtual environment\nRUN grep -v -e py-kaldi-asr -e snips-nlu < /tmp/requirements.txt > /tmp/requirements_docker.txt\n\nRUN ${VIRTUAL_ENV}/bin/pip install --no-cache-dir wheel\nRUN ${VIRTUAL_ENV}/bin/pip install --no-cache-dir -r /tmp/requirements_docker.txt\n\nENV NABD_HOST=pynab\nENV NABD_PORT_NUMBER=10543\n\nEXPOSE 8000\nEXPOSE 10543\nEXPOSE 10544\n"
}