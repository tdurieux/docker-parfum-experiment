{
  "startTime": 1674251898666,
  "endTime": 1674251899494,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 25
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#Create our image from Node 6.9-alpine\nFROM node:6.9-alpine\n\n#Create a new directory to run our app.\nRUN mkdir -p /usr/src/app && rm -rf /usr/src/app\n\n#Set the new directory as our working directory\nWORKDIR /usr/src/app\n\n# Install app dependencies\n# A wildcard is used to ensure both package.json AND package-lock.json are copied\n# where available (npm@5+)\nCOPY package*.json ./\n\nRUN npm install && npm cache clean --force;\n# If you are building your code for production\n# RUN npm install --only=production\n\n# Bundle app source\nCOPY . .\n\n# Our app runs on port 3000. Expose it!\n# Using 3001 with Docker to be able to test it separate from running the server outside of Docker\nEXPOSE 3001:3000\n\n# Run the application.\nCMD [\"npm\", \"start\"]\n"
}