diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/gavrilaf/chuck/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/gavrilaf/chuck/Dockerfile/repaired.Dockerfile
index 78af074..5461f37 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/gavrilaf/chuck/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/gavrilaf/chuck/Dockerfile/repaired.Dockerfile
@@ -1,8 +1,8 @@
 # Base build image
 FROM golang:1.11-alpine AS build_base
- 
+
 # Install some dependencies needed to build the project
-RUN apk add bash git gcc g++ libc-dev
+RUN apk add --no-cache bash git gcc g++ libc-dev
 
 COPY /utils/go.mod /utils/go.sum /chuck/utils/
 COPY /storage/go.mod /storage/go.sum /chuck/storage/
@@ -11,17 +11,17 @@ COPY /cmds/go.mod /cmds/go.sum /chuck/cmds/
 COPY go.mod go.sum /chuck/
 
 WORKDIR /chuck/
- 
+
 # Force the go compiler to use modules
 ENV GO111MODULE=on
 
-# This is the ‘magic’ step that will download all the dependencies that are specified in 
+# This is the ‘magic’ step that will download all the dependencies that are specified in
 # the go.mod and go.sum file.
-# Because of how the layer caching system works in Docker, the  go mod download 
-# command will _ only_ be re-run when the go.mod or go.sum file change 
+# Because of how the layer caching system works in Docker, the  go mod download
+# command will _ only_ be re-run when the go.mod or go.sum file change
 # (or when we add another docker instruction this line)
 RUN go mod download
- 
+
 # This image builds the chuck
 FROM build_base AS server_builder
 
@@ -32,8 +32,8 @@ COPY /cmds/ ./cmds
 COPY main.go .
 
 # And compile the project
-RUN CGO_ENABLED=1 GOOS=linux GOARCH=amd64 go build -a -tags netgo -ldflags '-w -extldflags "-static"' 
- 
+RUN CGO_ENABLED=1 GOOS=linux GOARCH=amd64 go build -a -tags netgo -ldflags '-w -extldflags "-static"'
+
 #In this last stage, we start from a fresh Alpine image, to reduce the image size and not ship the Go compiler in our production artifacts.
 FROM alpine AS chuck-intg