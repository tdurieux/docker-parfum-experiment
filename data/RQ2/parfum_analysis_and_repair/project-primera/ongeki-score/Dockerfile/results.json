{
  "startTime": 1674254346936,
  "endTime": 1674254347987,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 7,
        "columnEnd": 52
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM php:7.3.33-fpm-alpine3.13 AS base\nLABEL maintainer \"slime-hatena <Slime-hatena@aki-memo.net>\"\nWORKDIR /app\nEXPOSE 80\nEXPOSE 443\nHEALTHCHECK --start-period=60s --interval=60s --timeout=10s --retries=3 \\\n    CMD php artisan health:check\n\nFROM composer:1.10.19 AS composer\nWORKDIR /src\nCOPY ./OngekiScoreLog /src\nRUN composer install --optimize-autoloader\n\nFROM base AS final\nARG application_version=\"\"\nARG commit_hash=\"\"\nARG supervisor_version=\"4.2.1-r0\"\nARG nginx_version=\"1.18.0-r15\"\nARG nodejs_version=\"14.19.0-r0\"\nARG npm_version=\"14.19.0-r0\"\nARG npm_yarn_version=\"1.22.17\"\nCOPY --from=composer /src /app\nCOPY docker/docker-entrypoint.sh /etc/\nCOPY docker/supervisor/supervisord.conf /etc/\nCOPY docker/cron/crontabs/root /var/spool/cron/crontabs/root\nRUN set -ex \\\n    && touch /etc/version \\\n    && echo \\\"${application_version}\\\" > /etc/version \\\n    && touch /etc/hash \\\n    && echo \\\"${commit_hash}\\\" > /etc/hash \\\n    && docker-php-ext-install pdo_mysql mysqli >/dev/null \\\n    && apk add --update-cache --no-cache supervisor=${supervisor_version} nginx=${nginx_version} nodejs=${nodejs_version} npm=${npm_version} \\\n    && npm install --global yarn@${npm_yarn_version} \\\n    && apk del --purge npm \\\n    && rm -r /root/.npm \\\n    && mkdir -p /run/nginx \\\n    && mkdir -p /app/storage/app/log/Debug \\\n    /app/storage/app/log/Info \\\n    /app/storage/app/log/Notice \\\n    /app/storage/app/log/Warning \\\n    /app/storage/app/log/Error \\\n    /app/storage/app/log/Critical \\\n    /app/storage/app/log/Alert \\\n    /app/storage/app/log/Emergency \\\n    /app/storage/logs \\\n    && touch /app/storage/logs/laravel.log \\\n    && chmod -R 777 /app/storage \\\n    && chmod -R 777 /app/storage/framework/views \\\n    && chmod -R 777 /app/bootstrap/cache \\\n    && chmod 777 /etc/docker-entrypoint.sh && npm cache clean --force;\nENTRYPOINT [ \"/etc/docker-entrypoint.sh\" ]\n"
}