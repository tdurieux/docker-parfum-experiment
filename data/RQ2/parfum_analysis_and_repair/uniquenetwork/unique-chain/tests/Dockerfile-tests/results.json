{
  "startTime": 1674255499740,
  "endTime": 1674255500766,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 6,
        "columnEnd": 78
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 35,
        "columnEnd": 54
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 6,
        "columnEnd": 32
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 35,
        "columnEnd": 54
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 6,
        "columnEnd": 32
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# ===== Integration Tests ======\n\n\nFROM ubuntu:20.04\nLABEL maintainer=\"UniqueNetwork.io\"\n\nRUN apt -y update; apt -y upgrade; apt -y --no-install-recommends install curl && rm -rf /var/lib/apt/lists/*;\n\n\nRUN mkdir unique_parachain\nWORKDIR /unique_parachain\n\nRUN apt-get -y update && \\\n      apt-get -y upgrade && \\\n      apt-get -y --no-install-recommends install curl jq && \\\n      curl -f -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.3/install.sh | bash && \\\n      export NVM_DIR=\"$HOME/.nvm\" && \\\n      [ -s \"$NVM_DIR/nvm.sh\" ] && \\. \"$NVM_DIR/nvm.sh\" && \\\n      nvm install v16.2.0 && \\\n      nvm alias default v16.2.0 && \\\n      nvm use default && rm -rf /var/lib/apt/lists/*;\n\nENV YARN_CACHE_FOLDER ~/.yarn\n\nCOPY package.json yarn.lock ./\n\nRUN export NVM_DIR=\"$HOME/.nvm\" && \\\n    [ -s \"$NVM_DIR/nvm.sh\" ] && \\. \"$NVM_DIR/nvm.sh\" && \\\n    npm install --global yarn && \\\n    yarn add mochawesome && \\\n    yarn --pure-lockfile && npm cache clean --force;\n\nCOPY . .\n\nCMD export NVM_DIR=\"$HOME/.nvm\" && \\\n    [ -s \"$NVM_DIR/nvm.sh\" ] && \\. \"$NVM_DIR/nvm.sh\" && \\\n    ./scripts/wait_for_first_block.sh && \\\n    NOW=$(date +%s) && yarn test --reporter mochawesome --reporter-options reportFilename=test-${NOW}\n"
}