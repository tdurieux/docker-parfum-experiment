{
  "startTime": 1674249563238,
  "endTime": 1674249564080,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 24,
        "columnEnd": 36
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 33,
        "columnEnd": 45
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:lts as src\n\nARG WORKDIR=/app\nWORKDIR /app\n\nCOPY . .\n\nRUN cd packages/apps && yarn install && yarn cache clean;\n\nRUN yarn build:www\n\n\nFROM nginx:alpine\n\nRUN apk update && apk upgrade && apk add --no-cache bash\n\nARG WORKDIR=/app\nARG CI_COMMIT_SHORT_SHA=none\nARG DIR=${WORKDIR}/packages/apps/build\n\nRUN rm -rf /usr/share/nginx/html\nRUN rm -rf /etc/nginx/conf.d\nRUN unlink /etc/nginx/nginx.conf\nCOPY ./build_scripts/nginx.conf /etc/nginx/\nRUN mv /etc/nginx/nginx.conf /etc/nginx/nginx.conf.template\nCOPY --from=src ${DIR} /usr/share/nginx/html\nCOPY build_scripts/docker-entrypoint.sh /usr/local/bin/\nRUN chmod +x /usr/local/bin/docker-entrypoint.sh\n\n# Envs\nENV DNS_RESOLVER=127.0.0.1\nENV PORT=80\nENV ENV_FILE=/usr/share/nginx/html/env.js\nENV INDEX_FILE=/usr/share/nginx/html/index.html\nENV PRODUCTION=true\n\nARG TAG=''\nENV TAG=${TAG}\n\nEXPOSE ${PORT}\nENTRYPOINT [\"docker-entrypoint.sh\"]\nCMD [\"nginx\"]\n"
}