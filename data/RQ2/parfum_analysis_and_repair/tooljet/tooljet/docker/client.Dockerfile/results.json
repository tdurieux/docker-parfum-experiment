{
  "startTime": 1674254132652,
  "endTime": 1674254133447,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 29,
        "lineEnd": 31,
        "columnStart": 22,
        "columnEnd": 37
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# pull official base image\nFROM node:14.17.3-buster AS builder\n\nRUN npm i -g npm@7.20.0 && npm cache clean --force;\n\n# set working directory\nWORKDIR /app\n\nCOPY ./package.json ./package.json\n\n# Fix for heap limit allocation issue\nENV NODE_OPTIONS=\"--max-old-space-size=4096\"\n\n# Build plugins\nCOPY ./plugins/package.json ./plugins/package-lock.json ./plugins/\nRUN npm --prefix plugins install && npm cache clean --force;\nCOPY ./plugins/ ./plugins/\nENV NODE_ENV=production\nRUN npm --prefix plugins run build\nRUN npm --prefix plugins prune --production\n\n# Build frontend\nCOPY ./frontend/package.json ./frontend/package-lock.json  ./frontend/\nRUN npm --prefix frontend install --only=production && npm cache clean --force;\nCOPY ./frontend ./frontend\nRUN npm --prefix frontend run build\n\nFROM openresty/openresty:1.19.9.1rc1-buster-fat\n\nRUN apt-get update && apt-get -y install --no-install-recommends wget \\\ngnupg ca-certificates apt-utils curl luarocks \\\nmake build-essential g++ gcc autoconf && rm -rf /var/lib/apt/lists/*;\n\nRUN luarocks install lua-resty-auto-ssl\n\nRUN mkdir /etc/resty-auto-ssl /var/log/openresty /var/www /etc/fallback-certs\n\nCOPY --from=builder /app/frontend/build /var/www\n\nCOPY ./frontend/config/nginx.conf.template /etc/openresty/nginx.conf.template\nCOPY ./frontend/config/entrypoint.sh /entrypoint.sh\nENTRYPOINT [\"./entrypoint.sh\"]\n"
}