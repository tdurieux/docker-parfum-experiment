{
  "startTime": 1674255594815,
  "endTime": 1674255595632,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 22,
        "columnEnd": 83
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 22,
        "columnEnd": 83
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:14.17.3-buster as builder\n\n# Fix for JS heap limit allocation issue\nENV NODE_OPTIONS=\"--max-old-space-size=4096\"\n\nRUN npm i -g npm@7.20.0 && npm cache clean --force;\nRUN npm install -g @nestjs/cli && npm cache clean --force;\n\nRUN mkdir -p /app\nWORKDIR /app\n\nCOPY ./package.json ./package.json\n\n# Building ToolJet plugins\nCOPY ./plugins/package.json ./plugins/package-lock.json ./plugins/\nRUN npm --prefix plugins install && npm cache clean --force;\nCOPY ./plugins/ ./plugins/\nENV NODE_ENV=production\nRUN npm --prefix plugins run build\nRUN npm --prefix plugins prune --production\n\n# Building ToolJet server\nCOPY ./server/package.json ./server/package-lock.json ./server/\nRUN npm --prefix server install --only=production && npm cache clean --force;\nCOPY ./server/ ./server/\nRUN npm --prefix server run build\n\nFROM node:14.17.3-buster\n\nENV NODE_ENV=production\nENV NODE_OPTIONS=\"--max-old-space-size=4096\"\nRUN apt-get update && apt-get install --no-install-recommends -y postgresql-client freetds-dev libaio1 wget && rm -rf /var/lib/apt/lists/*;\n\n# Install Instantclient Basic Light Oracle and Dependencies\nWORKDIR /opt/oracle\nRUN wget https://download.oracle.com/otn_software/linux/instantclient/instantclient-basiclite-linuxx64.zip && \\\n    unzip instantclient-basiclite-linuxx64.zip && rm -f instantclient-basiclite-linuxx64.zip && \\\n    cd /opt/oracle/instantclient* && rm -f *jdbc* *occi* *mysql* *mql1* *ipc1* *jar uidrvci genezi adrci && \\\n    echo /opt/oracle/instantclient* > /etc/ld.so.conf.d/oracle-instantclient.conf && ldconfig\nWORKDIR /\n\nRUN mkdir -p /app\n\n# copy npm scripts\nCOPY --from=builder /app/package.json ./app/package.json\n\n# copy plugins dependencies\nCOPY --from=builder /app/plugins/dist ./app/plugins/dist\nCOPY --from=builder /app/plugins/client.js ./app/plugins/client.js\nCOPY --from=builder /app/plugins/node_modules ./app/plugins/node_modules\nCOPY --from=builder /app/plugins/packages/common ./app/plugins/packages/common\nCOPY --from=builder /app/plugins/package.json ./app/plugins/package.json\n# copy server build\n# NOTE: typescript dependency on /server/scripts and typeorm for db creation and migration.\n# Need to check if we can optimize such that only executable dist from prev stage can be copied\nCOPY --from=builder /app/server ./app/server\n\nWORKDIR /app\n\nENTRYPOINT [\"./server/entrypoint.sh\"]"
}