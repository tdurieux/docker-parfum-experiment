{
  "startTime": 1674248588620,
  "endTime": 1674248589179,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 18,
        "lineEnd": 25,
        "columnStart": 7,
        "columnEnd": 8
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG MLRUN_PYTHON_VERSION=3.7.13\n\nFROM quay.io/mlrun/python:${MLRUN_PYTHON_VERSION}-slim\n\nRUN apt-get update && \\\n    apt-get -s dist-upgrade | \\\n    grep \"^Inst\" | \\\n    grep -i securi | \\\n    awk -F \" \" {'print $2'} | \\\n    xargs apt-get install -y --no-install-recommends && \\\n    rm -rf /var/lib/apt/lists/*\n\n# need to be redeclared since used in the from\nARG MLRUN_PYTHON_VERSION\nENV PIP_NO_CACHE_DIR=1\n\nRUN apt update -qqq \\\n    && apt -y upgrade \\\n    && apt install --no-install-recommends -y \\\n    build-essential \\\n    cmake \\\n    curl \\\n    gcc \\\n    git-core \\\n    graphviz \\\n    wget \\\n    && rm -rf /var/lib/apt/lists/*\n\nWORKDIR /mlrun\n\n# install miniconda\nRUN wget --quiet https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O ~/installconda.sh && \\\n    /bin/bash ~/installconda.sh -b -p /opt/conda && \\\n    rm ~/installconda.sh && \\\n    ln -s /opt/conda/etc/profile.d/conda.sh /etc/profile.d/conda.sh && \\\n    echo \". /opt/conda/etc/profile.d/conda.sh\" >> ~/.bashrc && \\\n    echo \"conda activate base\" >> ~/.bashrc\n\nENV PATH /opt/conda/bin:$PATH\n\nARG MLRUN_PIP_VERSION=22.0.0\nRUN conda config --add channels conda-forge && \\\n    conda install python=${MLRUN_PYTHON_VERSION} pip~=${MLRUN_PIP_VERSION} && \\\n    conda clean -aqy\n\nCOPY ./dockerfiles/mlrun/requirements.txt ./mlrun-image-requirements.txt\nCOPY ./extras-requirements.txt ./extras-requirements.txt\nCOPY ./requirements.txt ./\nRUN python -m pip install \\\n    -r requirements.txt \\\n    -r extras-requirements.txt \\\n    -r mlrun-image-requirements.txt\n\n# if we give all the requirements together pip resolver go nuts so separating between the package and the image\n# requirements\nCOPY ./dockerfiles/base/requirements.txt ./base-image-requirements.txt\nRUN python -m pip install \\\n    -r base-image-requirements.txt\n"
}