{
  "startTime": 1674218926113,
  "endTime": 1674218927232,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 109
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 34
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG MLRUN_BASE_IMAGE=mlrun/ml-base:unstable-core\n\nFROM ${MLRUN_BASE_IMAGE}\n\nARG OMPI=4.1.0\n\n# Install Open MPI\nRUN mkdir /tmp/openmpi && \\\n    cd /tmp/openmpi && \\\n    curl -f -o openmpi-${OMPI}.tar.gz https://download.open-mpi.org/release/open-mpi/v4.1/openmpi-${OMPI}.tar.gz && \\\n    tar zxf openmpi-${OMPI}.tar.gz && \\\n    cd openmpi-${OMPI} && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-orterun-prefix-by-default && \\\n    make -j`nproc` all && \\\n    make install && \\\n    ldconfig && \\\n    rm -rf /tmp/openmpi && rm openmpi-${OMPI}.tar.gz\n\nENV OMPI_ALLOW_RUN_AS_ROOT=1\nENV OMPI_ALLOW_RUN_AS_ROOT_CONFIRM=1\n\n# pytorch caused cuda download, this guarantees cpu version:\nRUN python -m pip install torch==1.7.0+cpu torchvision==0.8.1+cpu \\\n    -f https://download.pytorch.org/whl/torch_stable.html\n\nARG TENSORFLOW_VERSION=2.4.1\n# Not using intel-tensorflow cause they have only 2.4.0 and we need 2.4.1\nRUN python -m pip install -U tensorflow~=${TENSORFLOW_VERSION} mxnet\n\nARG HOROVOD_VERSION=0.22.1\nRUN HOROVOD_WITH_TENSORFLOW=1 HOROVOD_WITH_PYTORCH=1 \\\n    python -m pip install horovod~=${HOROVOD_VERSION}\n\n# When running mpijob the launcher trigger the worker with something like PATH=/usr/local/bin:$PATH so we need to make\n# sure the python in /usr/local/bin is pointing to the conda env python (which \"knows\" horovod)\n# TODO: find nicer solution\nRUN ln -sf /opt/conda/bin/python3 /usr/local/bin/python3\n\nCOPY ./dockerfiles/models/requirements.txt ./models-image-requirements.txt\n\nRUN python -m pip install -r models-image-requirements.txt\n"
}