{
  "startTime": 1674216688339,
  "endTime": 1674216690126,
  "originalSmells": [
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 30,
        "columnStart": 7,
        "columnEnd": 26
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:buster\n\nUSER root\n\n# Install system packages\nRUN apt-get update \\\n    && apt-get -y upgrade \\\n    && apt-get install -y --no-install-recommends \\\n      bind9-host \\\n      build-essential \\\n      curl \\\n      git \\\n      iputils-ping \\\n      libpcre2-dev \\\n      libpcre3-dev \\\n      libpq-dev \\\n      libssl-dev \\\n      net-tools \\\n      netcat \\\n      netcat-openbsd \\\n      nginx \\\n      procps \\\n      python3-dev \\\n      python3-pip \\\n      python3-setuptools \\\n      python3-venv \\\n      python3-wheel \\\n      python3-yaml \\\n      psmisc \\\n      supervisor \\\n      uwsgi-plugin-python3 \\\n    && pip3 install --no-cache-dir uwsgi && rm -rf /var/lib/apt/lists/*;\n\n# Prepare for supervisord, ngninx\nCOPY config/supervisord_app.conf /etc/supervisor/supervisord.conf\nCOPY config/nginx_app.conf /etc/nginx/sites-available/\nCOPY config/nginx.conf /etc/nginx/\nCOPY cert/* /etc/nginx/conf.d/\n# Prepare running nginx as www-data\nRUN unlink /etc/nginx/sites-enabled/default \\\n    && ln -s /etc/nginx/sites-available/nginx_app.conf /etc/nginx/sites-enabled/default \\\n    && chown -R www-data:www-data /var/log/nginx/ \\\n    && chown -R www-data:www-data /var/lib/nginx/ \\\n    && chown -R root:www-data /etc/nginx/ \\\n    && chmod -R u=rwX,g=rX,o= /etc/nginx/\n\n# Create cnaas directories\nRUN mkdir -p /opt/cnaas /etc/cnaas-nms \\\n    && chown -R root:www-data /opt/cnaas /etc/cnaas-nms \\\n    && chmod -R u=rwX,g=rX,o= /opt/cnaas\nRUN mkdir -p /opt/cnaas/templates /opt/cnaas/settings /opt/cnaas/venv \\\n    && chown www-data:www-data /opt/cnaas/templates /opt/cnaas/settings /opt/cnaas/venv\n\n# Copy cnaas scripts\nCOPY --chown=root:www-data cnaas-setup.sh createca.sh exec-pre-app.sh nosetests.sh /opt/cnaas/\n\n# Copy cnaas configuration files\nCOPY --chown=www-data:www-data config/api.yml config/db_config.yml config/plugins.yml config/repository.yml /etc/cnaas-nms/\n\n\nUSER www-data\n\n# Give permission for devicecert store\nRUN mkdir /tmp/devicecerts \\\n    && chmod -R u=rwX,g=,o= /tmp/devicecerts\n\nARG BUILDBRANCH=develop\nARG GITREPO_BASE=https://github.com/SUNET/cnaas-nms.git\n# Branch specific, don't cache\nADD \"https://api.github.com/repos/SUNET/cnaas-nms/git/refs/heads/\" latest_commit\n# Cnaas setup script\nRUN /opt/cnaas/cnaas-setup.sh ${GITREPO_BASE} ${BUILDBRANCH}\n# Freeze source\nUSER root\nRUN chown -R root:www-data /opt/cnaas/venv/cnaas-nms/ && chmod -R u=rwX,g=rX,o= /opt/cnaas/venv/cnaas-nms/\nUSER www-data\n\n# Prepare for uwsgi\nCOPY --chown=root:www-data config/uwsgi.ini /opt/cnaas/venv/cnaas-nms/\n\n\n# Expose HTTPS\nEXPOSE 1443\n\nENTRYPOINT supervisord -c /etc/supervisor/supervisord.conf\n"
}