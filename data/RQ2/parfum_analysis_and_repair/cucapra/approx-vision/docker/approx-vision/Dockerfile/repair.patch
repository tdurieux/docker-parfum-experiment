diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/cucapra/approx-vision/docker/approx-vision/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/cucapra/approx-vision/docker/approx-vision/Dockerfile/repaired.Dockerfile
index cf6d909..4c90be9 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/cucapra/approx-vision/docker/approx-vision/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/cucapra/approx-vision/docker/approx-vision/Dockerfile/repaired.Dockerfile
@@ -1,34 +1,34 @@
 # Start with both Halide and OpenCV
-FROM mbuckler/cam-pipes 
+FROM mbuckler/cam-pipes
 WORKDIR /root/packages
 
 # Install image converter for JPEG/PNG conversion
-RUN apt-get install python-pip python-dev build-essential -y
-RUN pip install --upgrade pip
-RUN pip install --upgrade virtualenv
-RUN pip install Pillow
+RUN apt-get install --no-install-recommends python-pip python-dev build-essential -y && rm -rf /var/lib/apt/lists/*;
+RUN pip install --no-cache-dir --upgrade pip
+RUN pip install --no-cache-dir --upgrade virtualenv
+RUN pip install --no-cache-dir Pillow
 
 # Install dependencies for OpenCV benchmarks
-RUN pip install ipdb
-RUN apt-get install python-matplotlib -y
+RUN pip install --no-cache-dir ipdb
+RUN apt-get install --no-install-recommends python-matplotlib -y && rm -rf /var/lib/apt/lists/*;
 
 # Install extra processing dependencies
-RUN pip install --upgrade pip
-RUN pip install psutil
-RUN apt-get install rsync
+RUN pip install --no-cache-dir --upgrade pip
+RUN pip install --no-cache-dir psutil
+RUN apt-get install -y --no-install-recommends rsync && rm -rf /var/lib/apt/lists/*;
 
 # Install LibRaw
 RUN wget https://www.libraw.org/data/LibRaw-0.18.2.tar.gz
-RUN tar xzvf LibRaw-0.18.2.tar.gz
+RUN tar xzvf LibRaw-0.18.2.tar.gz && rm LibRaw-0.18.2.tar.gz
 WORKDIR /root/packages/LibRaw-0.18.2
-RUN ./configure
+RUN ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"
 RUN make
 RUN make install
 RUN /sbin/ldconfig -v
 
 # Install scheduling libraries
-RUN pip install futures
-RUN pip install findtools
+RUN pip install --no-cache-dir futures
+RUN pip install --no-cache-dir findtools
 
-# Reset our working directory 
+# Reset our working directory
 WORKDIR /