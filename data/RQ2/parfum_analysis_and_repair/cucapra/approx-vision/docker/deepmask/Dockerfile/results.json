{
  "startTime": 1674216437386,
  "endTime": 1674216437909,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 26
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 50
      }
    }
  ],
  "repairedDockerfile": "FROM kaixhin/cuda-torch:7.0\nWORKDIR /root\n\n# Copy CUDNN files to CUDA directories\nRUN cp /usr/lib/x86_64-linux-gnu/libcudnn* /usr/local/cuda/lib64\nRUN cp /usr/include/cudnn* /usr/local/cuda/include\nRUN chmod a+r /usr/local/cuda/lib64/libcudnn*\nRUN export LD_LIBRARY_PATH=/usr/local/cuda/lib64:$LD_LIBRARY_PATH\n\n# Install the MS COCO API\nRUN git clone https://github.com/pdollar/coco.git\nWORKDIR /root/coco\nRUN luarocks make LuaAPI/rocks/coco-scm-1.rockspec\n\n# Install other dependencies\nRUN luarocks install image\nRUN luarocks install tds\nRUN luarocks install json\nRUN luarocks install nnx\nRUN luarocks install optim\nRUN luarocks install inn\nRUN luarocks install cutorch\nRUN luarocks install nn\nRUN luarocks install cunn\n\n# Ensure that we get Version 4 of CUDNN (since we are using CUDA 7.0)\nWORKDIR /root\nRUN git clone -b R4 https://github.com/soumith/cudnn.torch.git\nWORKDIR /root/cudnn.torch\nRUN luarocks make cudnn-scm-1.rockspec\n\n# Install vim (for my sanity)\nRUN apt-get install --no-install-recommends vim -y && rm -rf /var/lib/apt/lists/*;\n\n# Installing DeepMask\nRUN mkdir /root/deepmask-repo\nENV DEEPMASK /root/deepmask-repo/\nRUN git clone https://github.com/facebookresearch/deepmask.git $DEEPMASK\n\n# Reset run directory\nWORKDIR $DEEPMASK\n\n# Set up directory for pretrained models\nRUN mkdir -p $DEEPMASK/pretrained/deepmask\nRUN mkdir -p $DEEPMASK/pretrained/sharpmask\nRUN mkdir -p $DEEPMASK/data\n"
}