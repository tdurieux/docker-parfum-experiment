{
  "startTime": 1674246782331,
  "endTime": 1674246783945,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 25
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# This Dockerfile builds an image that contains the registry tool.\n\n# Use the official Golang image to create a build artifact.\n# This is based on Debian and sets the GOPATH to /go.\n# https://hub.docker.com/_/golang\nFROM golang:1.18 as builder\nRUN apt-get update && apt-get install -y --no-install-recommends unzip && rm -rf /var/lib/apt/lists/*;\n\n# Create and change to the app directory.\nWORKDIR /app\n\n# Retrieve application dependencies.\n# This allows the container build to reuse cached dependencies.\nCOPY go.* ./\nRUN go mod download\n\n# Copy local code to the container image.\nCOPY . ./\n\n# Build registry.\nRUN CGO_ENABLED=0 GOOS=linux go build -v -o registry ./cmd/registry\n\n# Use the official Alpine image for a lean production container.\n# https://hub.docker.com/_/alpine\n# https://docs.docker.com/develop/develop-images/multistage-build/#use-multi-stage-builds\nFROM alpine:3\nRUN apk update && apk upgrade\nRUN apk add --no-cache ca-certificates\n\n# Copy some commonly-needed tools into the image.\nRUN apk add --no-cache bash git curl jq\n\n# Copy binaries to the production image from the builder stage.\nCOPY --from=builder /app/registry /bin/registry\n"
}