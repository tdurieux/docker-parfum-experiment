{
  "startTime": 1674255595993,
  "endTime": 1674255596983,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 41,
        "lineEnd": 42,
        "columnStart": 7,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 39
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 63
      }
    }
  ],
  "repairedDockerfile": "# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# This Dockerfile builds an image that runs the registry-server with no proxy.\n\n# Use the official Golang image to create a build artifact.\n# This is based on Debian and sets the GOPATH to /go.\n# https://hub.docker.com/_/golang\nFROM golang:1.18 as builder\nRUN apt-get update\nRUN apt-get -y --no-install-recommends install unzip && rm -rf /var/lib/apt/lists/*;\n\n# Create and change to the app directory.\nWORKDIR /app\n\n# Retrieve application dependencies.\n# This allows the container build to reuse cached dependencies.\nCOPY go.* ./\nRUN go mod download\n\n# Copy local code to the container image.\nCOPY . ./\n\nRUN ./tools/FETCH-PROTOC.sh && make protos\n\n# Build registry-server.\nRUN CGO_ENABLED=0 GOOS=linux go build -v -o registry-server ./cmd/registry-server\n\n# Prepare bash dependencies for the final image.\nRUN apt-get -y --no-install-recommends install wget bash-static \\\n    && wget -q https://landley.net/toybox/bin/toybox-x86_64 \\\n               -O /usr/local/bin/toybox \\\n           && chmod 755 /usr/local/bin/toybox \\\n           && cd /usr/local/bin; rm -rf /var/lib/apt/lists/*; for i in $(./toybox); do ln -s toybox $i; done\n\nFROM gcr.io/distroless/static:latest\n# Copy bash dependencies.\nCOPY --from=builder /usr/local/bin /usr/local/bin\nCOPY --from=builder /bin/bash-static /bin/bash\nRUN [ \"/usr/local/bin/toybox\", \"ln\", \"-s\", \"/bin/bash\", \"/bin/sh\" ]\nRUN chmod -R 755 /usr/local/bin\n\n# Copy the binary to the production image from the builder stage.\nCOPY --from=builder /app/registry-server /registry-server\nCOPY --from=builder /app/deployments/envoy/proto.pb /proto.pb\n\n# Copy the standard registry configuration from the builder image.\nCOPY config/registry-server.yaml /registry-server.yaml\n\n# Run the web service on container startup.\nCMD [\"/registry-server\", \"--configuration\", \"registry-server.yaml\"]\n"
}