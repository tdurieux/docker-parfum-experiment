{
  "startTime": 1674253670869,
  "endTime": 1674253671464,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 16
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:14 AS builder\n\nWORKDIR /app\nCOPY package.json .\nCOPY yarn.lock .\nRUN yarn install && yarn cache clean;\n\nCOPY src/ src\nCOPY types/ types\nCOPY nginx.conf .\nCOPY public/ public/\nCOPY tsconfig.json .\nCOPY . .\nRUN echo REACT_APP_GIT_SHA=`git rev-parse --short HEAD` >> .env.production\nRUN echo `git rev-parse --short HEAD` > health.html\nRUN npm run build\n#RUN apt update -y && apt install jq -y\n#RUN python linter.py | jq -C --tab .\n\nFROM nginx:stable\nCOPY --from=builder /app/build/ /usr/share/nginx/html\nCOPY ./nginx.conf /etc/nginx/conf.d/default.conf\n\nWORKDIR /usr/share/nginx/html\nCOPY --from=builder /app/./env.sh .\nCOPY --from=builder /app/.env .\nCOPY --from=builder /app/health.html .\n\n# Make our shell script executable\nRUN chmod +x env.sh\nCMD [\"/bin/bash\", \"-c\", \"/usr/share/nginx/html/env.sh && nginx -g \\\"daemon off;\\\"\"]\n"
}