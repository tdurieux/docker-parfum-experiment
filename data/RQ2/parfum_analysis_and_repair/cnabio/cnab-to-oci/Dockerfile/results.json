{
  "startTime": 1674248025703,
  "endTime": 1674248026243,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 113
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG ALPINE_VERSION=3.15\nARG GO_VERSION=1.17.8\n\n# build image\nFROM golang:${GO_VERSION}-alpine${ALPINE_VERSION} as build\n\nARG DOCKERCLI_VERSION=19.03.1\nARG DOCKERCLI_CHANNEL=stable\n\nARG BUILDTIME\nARG COMMIT\nARG TAG\nARG GOPROXY\n\nRUN apk add --no-cache \\\n  bash \\\n  make \\\n  git \\\n  curl \\\n  util-linux \\\n  coreutils \\\n  build-base\n\n# Fetch docker cli to run a registry container for e2e tests\nRUN curl -f -Ls https://download.docker.com/linux/static/${DOCKERCLI_CHANNEL}/x86_64/docker-${DOCKERCLI_VERSION}.tgz | tar -xz\n\nWORKDIR /go/src/github.com/cnabio/cnab-to-oci\nCOPY . .\nRUN make BUILDTIME=$BUILDTIME COMMIT=$COMMIT TAG=$TAG bin/cnab-to-oci &&\\\n  make BUILDTIME=$BUILDTIME COMMIT=$COMMIT TAG=$TAG build-e2e-test\n\n# e2e image\nFROM alpine:${ALPINE_VERSION} as e2e\n\n# copy all the elements needed for e2e tests from build image\nCOPY --from=build /go/docker/docker /usr/bin/docker\nCOPY --from=build /go/src/github.com/cnabio/cnab-to-oci/bin/cnab-to-oci /usr/bin/cnab-to-oci\nCOPY --from=build /go/src/github.com/cnabio/cnab-to-oci/e2e /e2e\nCOPY --from=build /go/src/github.com/cnabio/cnab-to-oci/e2e.test /e2e/e2e.test\n\n# Run end-to-end tests\nCMD [\"e2e/run.sh\"]\n"
}