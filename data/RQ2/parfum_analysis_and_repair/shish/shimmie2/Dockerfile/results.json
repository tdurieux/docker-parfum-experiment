{
  "startTime": 1674216934801,
  "endTime": 1674216936113,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 5,
        "columnEnd": 106
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 18,
        "columnEnd": 100
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 18,
        "columnEnd": 100
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 40,
        "lineEnd": 42,
        "columnStart": 18,
        "columnEnd": 25
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 18,
        "columnEnd": 100
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 18,
        "columnEnd": 100
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 23,
        "columnEnd": 83
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# \"Build\" shimmie (composer install - done in its own stage so that we don't\n# need to include all the composer fluff in the final image)\nFROM debian:stable AS app\nRUN apt update && apt install --no-install-recommends -y composer php7.4-gd php7.4-dom php7.4-sqlite3 php-xdebug imagemagick && rm -rf /var/lib/apt/lists/*;\nCOPY composer.json composer.lock /app/\nWORKDIR /app\nRUN composer install --no-dev\nCOPY . /app/\n\n# Tests in their own image. Really we should inherit from app and then\n# `composer install` phpunit on top of that; but for some reason\n# `composer install --no-dev && composer install` doesn't install dev\nFROM debian:stable AS tests\nRUN apt update && apt install --no-install-recommends -y composer php7.4-gd php7.4-dom php7.4-sqlite3 php-xdebug imagemagick && rm -rf /var/lib/apt/lists/*;\nCOPY composer.json composer.lock /app/\nWORKDIR /app\nRUN composer install\nCOPY . /app/\nARG RUN_TESTS=true\nRUN [ $RUN_TESTS = false ] || (\\\n    echo '=== Installing ===' && mkdir -p data/config && INSTALL_DSN=\"sqlite:data/shimmie.sqlite\" php index.php && \\\n    echo '=== Smoke Test ===' && php index.php get-page /post/list && \\\n    echo '=== Unit Tests ===' && ./vendor/bin/phpunit --configuration tests/phpunit.xml && \\\n    echo '=== Coverage ===' && ./vendor/bin/phpunit --configuration tests/phpunit.xml --coverage-text && \\\n    echo '=== Cleaning ===' && rm -rf data)\n\n# Build su-exec so that our final image can be nicer\nFROM debian:stable AS suexec\nRUN apt-get update && apt-get install -y --no-install-recommends gcc libc-dev curl && rm -rf /var/lib/apt/lists/*;\nRUN curl -f -k -o /usr/local/bin/su-exec.c https://raw.githubusercontent.com/ncopa/su-exec/master/su-exec.c; \\\n     gcc -Wall /usr/local/bin/su-exec.c -o/usr/local/bin/su-exec; \\\n     chown root:root /usr/local/bin/su-exec; \\\n     chmod 0755 /usr/local/bin/su-exec;\n\n# Actually run shimmie\nFROM debian:stable\nEXPOSE 8000\nHEALTHCHECK --interval=1m --timeout=3s CMD curl --fail http://127.0.0.1:8000/ || exit 1\nENV UID=1000 \\\n    GID=1000\nRUN apt update && apt install --no-install-recommends -y curl \\\n    php7.4-cli php7.4-gd php7.4-pgsql php7.4-mysql php7.4-sqlite3 php7.4-zip php7.4-dom php7.4-mbstring \\\n    imagemagick zip unzip && \\\n    rm -rf /var/lib/apt/lists/*\nCOPY --from=app /app /app\nCOPY --from=suexec /usr/local/bin/su-exec /usr/local/bin/su-exec\n\nWORKDIR /app\nCMD [\"/bin/sh\", \"/app/tests/docker-init.sh\"]\n"
}