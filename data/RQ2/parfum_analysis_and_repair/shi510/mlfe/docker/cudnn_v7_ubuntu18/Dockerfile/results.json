{
  "startTime": 1674253077845,
  "endTime": 1674253078650,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 106
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 115
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 59
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nvidia/cuda:10.2-cudnn7-devel-ubuntu18.04\nENV HOME /root\n\nRUN apt-get update && apt-get install --no-install-recommends -y git curl gcc-8 g++-8 ninja-build zip && rm -rf /var/lib/apt/lists/*;\nRUN rm -f /usr/bin/gcc\nRUN rm -f /usr/bin/g++\nRUN ln -s /usr/bin/gcc-8 /usr/bin/gcc\nRUN ln -s /usr/bin/g++-8 /usr/bin/g++\n\n# install cmake\nWORKDIR $HOME\nRUN curl -f -L -O https://github.com/Kitware/CMake/releases/download/v3.17.3/cmake-3.17.3-Linux-x86_64.tar.gz\nRUN tar xf cmake-3.17.3-Linux-x86_64.tar.gz && rm cmake-3.17.3-Linux-x86_64.tar.gz\nWORKDIR ${HOME}/cmake-3.17.3-Linux-x86_64\nRUN cp ./bin/* /usr/bin/\nRUN cp -r ./share/cmake-3.17 /usr/share/\n\n# install host protoc\nWORKDIR ${HOME}\nRUN curl -f -L -O https://github.com/protocolbuffers/protobuf/releases/download/v3.11.4/protoc-3.11.4-linux-x86_64.zip\nRUN unzip protoc-3.11.4-linux-x86_64.zip -d protoc-3.11.4-linux-x86_64\nRUN cp protoc-3.11.4-linux-x86_64/bin/* /usr/bin/\n\n# clone mlfe library and update submodule.\nWORKDIR $HOME\nRUN git clone https://github.com/shi510/mlfe\nWORKDIR ${HOME}/mlfe\nRUN git checkout developer_preview\nRUN git submodule update --init --recursive\n\n# build mlfe using cross compiler for cudnn.\nWORKDIR ${HOME}/mlfe\nRUN mkdir build\nWORKDIR ${HOME}/mlfe/build\nRUN cmake \\\n    -D BUILD_TEST=ON \\\n    -D BUILD_EXAMPLE=ON \\\n    -D USE_CUDNN=ON \\\n    -D CMAKE_BUILD_TYPE=Release \\\n    -D CMAKE_INSTALL_PREFIX=/root/mlfe_lib \\\n    -G Ninja ..\nRUN ninja\n"
}