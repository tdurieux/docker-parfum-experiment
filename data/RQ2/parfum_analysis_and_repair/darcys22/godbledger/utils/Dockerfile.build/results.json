{
  "startTime": 1674249994678,
  "endTime": 1674249995770,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 21
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM golang:1.15.5-alpine AS builder\n# https://megamorf.gitlab.io/2019/09/08/alpine-go-builds-with-cgo-enabled/\n\nRUN apk update\nRUN apk upgrade\nRUN apk add --no-cache --update gcc g++ make git\n\nENV GOPATH /go\nWORKDIR /go/src/github.com/darcys22/godbledger\nADD . .\n\n# TODO: pull app version from VERSION\nRUN make\n\nFROM alpine\n\n# netcat is needed by wait-for\nRUN apk add --no-cache net-tools\n\nWORKDIR /app\n\n# Add docker-compose-wait tool -------------------\nENV WAIT_VERSION 2.7.2\nADD https://github.com/ufoscout/docker-compose-wait/releases/download/$WAIT_VERSION/wait ./wait\nRUN chmod +x ./wait\n\n# wait needs a wrapper to help invoke it from a docker entrypoint\nCOPY utils/wait_entrypoint.sh .\nRUN chmod +x ./wait_entrypoint.sh\n\nENV PATH=/app:${PATH}\nENV GDBL_LOG_LEVEL info\nENV GDBL_DATA_DIR ~/.ledger\nENV GDBL_CONFIG_FILE ~/.ledger/config.docker.toml\nCOPY --from=builder /go/src/github.com/darcys22/godbledger/build/bin/native/* ./\n\nEXPOSE 50051\nENTRYPOINT ./godbledger --verbosity=${GDBL_LOG_LEVEL} --rpc-host=0.0.0.0 --rpc-port=50051 --datadir=${GDBL_DATA_DIR} --config=${GDBL_CONFIG_FILE}\n"
}