diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/tektoncd/plumbing/tekton/images/test-runner/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/tektoncd/plumbing/tekton/images/test-runner/Dockerfile/repaired.Dockerfile
index 6d8416c..114332b 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/tektoncd/plumbing/tekton/images/test-runner/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/tektoncd/plumbing/tekton/images/test-runner/Dockerfile/repaired.Dockerfile
@@ -127,13 +127,13 @@ ENV PATH /usr/local/go/bin:$PATH
 
 # preinstall:
 # - bc for shell to junit
-RUN apt update && apt install -y bc && \
+RUN apt update && apt install --no-install-recommends -y bc && \
     rm -rf /var/lib/apt/lists/*
 
 # replace kubectl with one from K8S_RELEASE
 ARG K8S_RELEASE=latest
 RUN rm -f $(which kubectl) && \
-    export KUBECTL_VERSION=$(curl https://storage.googleapis.com/kubernetes-release/release/${K8S_RELEASE}.txt) && \
+    export KUBECTL_VERSION=$( curl -f https://storage.googleapis.com/kubernetes-release/release/${K8S_RELEASE}.txt) && \
     wget https://storage.googleapis.com/kubernetes-release/release/${KUBECTL_VERSION}/bin/linux/amd64/kubectl -O /usr/local/bin/kubectl && \
     chmod +x /usr/local/bin/kubectl
 
@@ -146,19 +146,19 @@ RUN ["/bin/chmod", "+x", "/workspace/get-kube.sh"]
 
 # Install Go 1.17.11
 ARG GO_VERSION=1.17.11
-RUN curl https://dl.google.com/go/go${GO_VERSION}.linux-amd64.tar.gz > go${GO_VERSION}.tar.gz && \
+RUN curl -f https://dl.google.com/go/go${GO_VERSION}.linux-amd64.tar.gz > go${GO_VERSION}.tar.gz && \
     tar -C /usr/local -xzf go${GO_VERSION}.tar.gz && \
     rm go${GO_VERSION}.tar.gz
 ENV GOROOT /usr/local/go
 
 # Extra tools through apt
-RUN apt update && apt install -y uuid-runtime  # for uuidgen
-RUN apt update && apt install -y rubygems  # for mdl
+RUN apt update && apt install --no-install-recommends -y uuid-runtime && rm -rf /var/lib/apt/lists/*;
+RUN apt update && apt install --no-install-recommends -y rubygems && rm -rf /var/lib/apt/lists/*;
 
 # Install ko
 ARG KO_VERSION=0.8.3
-RUN curl -L https://github.com/google/ko/releases/download/v${KO_VERSION}/ko_${KO_VERSION}_Linux_x86_64.tar.gz > ko_${KO_VERSION}.tar.gz
-RUN tar -C /usr/local/bin -xzf ko_${KO_VERSION}.tar.gz
+RUN curl -f -L https://github.com/google/ko/releases/download/v${KO_VERSION}/ko_${KO_VERSION}_Linux_x86_64.tar.gz > ko_${KO_VERSION}.tar.gz
+RUN tar -C /usr/local/bin -xzf ko_${KO_VERSION}.tar.gz && rm ko_${KO_VERSION}.tar.gz
 
 # Extra tools through go get
 ARG KIND_VERSION="v0.14.0"
@@ -170,15 +170,15 @@ RUN GO111MODULE="on" go install github.com/google/go-licenses@latest && \
 
 # Install GolangCI linter: https://github.com/golangci/golangci-lint/
 ARG GOLANGCI_VERSION=1.42.0
-RUN curl -sL https://github.com/golangci/golangci-lint/releases/download/v${GOLANGCI_VERSION}/golangci-lint-${GOLANGCI_VERSION}-linux-amd64.tar.gz | tar -C /usr/local/bin -xvzf - --strip-components=1 --wildcards "*/golangci-lint"
+RUN curl -f -sL https://github.com/golangci/golangci-lint/releases/download/v${GOLANGCI_VERSION}/golangci-lint-${GOLANGCI_VERSION}-linux-amd64.tar.gz | tar -C /usr/local/bin -xvzf - --strip-components=1 --wildcards "*/golangci-lint"
 
 # Install Kustomize:
 ARG KUSTOMIZE_VERSION=3.8.1
-RUN curl -sL https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize%2Fv${KUSTOMIZE_VERSION}/kustomize_v${KUSTOMIZE_VERSION}_linux_amd64.tar.gz | tar -C /usr/local/bin -xvzf - --strip-components=1 --wildcards "kustomize"
+RUN curl -f -sL https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize%2Fv${KUSTOMIZE_VERSION}/kustomize_v${KUSTOMIZE_VERSION}_linux_amd64.tar.gz | tar -C /usr/local/bin -xvzf - --strip-components=1 --wildcards "kustomize"
 
 # Install the TektonCD CLI: https://github.com/tektoncd/cli/
 ARG TKN_VERSION=0.24.0
-RUN curl -sL https://github.com/tektoncd/cli/releases/download/v${TKN_VERSION}/tkn_${TKN_VERSION}_Linux_x86_64.tar.gz | tar -C /usr/local/bin -xvzf - --wildcards "tkn"
+RUN curl -f -sL https://github.com/tektoncd/cli/releases/download/v${TKN_VERSION}/tkn_${TKN_VERSION}_Linux_x86_64.tar.gz | tar -C /usr/local/bin -xvzf - --wildcards "tkn"
 
 # Extra tools through gem
 RUN gem install mixlib-config -v 2.2.4  # required because ruby is 2.1