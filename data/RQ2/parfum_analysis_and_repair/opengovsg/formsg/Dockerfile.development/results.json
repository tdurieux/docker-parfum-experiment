{
  "startTime": 1674251069844,
  "endTime": 1674251070647,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 10,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 10
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 89,
        "columnEnd": 112
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:fermium-alpine3.13\nLABEL maintainer=FormSG<formsg@data.gov.sg>\n\nWORKDIR /opt/formsg\n\nENV CHROMIUM_BIN=/usr/bin/chromium-browser\nENV NODE_ENV=development\nENV NODE_OPTIONS=--max-old-space-size=2048\nRUN apk update && apk upgrade && \\\n    # Build dependencies for node_modules\n    apk add --no-cache --virtual native-deps \\\n    # Python version must be specified starting in alpine3.12\n    g++ gcc libgcc libstdc++ linu # Python version must be specified starting in alpine3.12\n    gcc libgcc libstdc++ linux-headers autoconf automake make nasm python3 git curl \\\n    # Runtime dependencies\n    # Note that each alpine version supports a specific version of chromium\n    # Note that chromium and puppeteer-core are released together and it is the only version\n    # that is guaranteed to work. Upgrades must be done in lockstep.\n    # https://github.com/puppeteer/puppeteer/blob/master/docs/troubleshooting.md#running-on-alpine\n    # https://www.npmjs.com/package/puppeteer-core?activeTab=versions for corresponding versions\n    chromium=86.0.4240.111-r0 \\\n    nss \\\n    freetype \\\n    freetype-dev \\\n    harfbuzz \\\n    ca-certificates \\\n    ttf-freefont \\\n    tini \\\n    # Localstack - these are necessary in order to initialise local S3 buckets\n    # jq is a package for easily parsing Localstack health endpoint's JSON output\n    jq \\\n    py-pip && \\\n    npm install --quiet node-gyp -g && \\\n    # [ver1] ensures that the underlying AWS CLI version is also installed\n    pip install --no-cache-dir awscli-local[ver1] && npm cache clean --force;\n\n# Chinese fonts\nRUN echo @edge http://nl.alpinelinux.org/alpine/edge/testing >> /etc/apk/repositories && apk add --no-cache wqy-zenhei@edge\n\nCOPY . ./\nRUN npm install && npm cache clean --force;\n\nEXPOSE 5000\n\n# tini is the init process that will adopt orphaned zombie processes\n# e.g. chromium when launched to create a new PDF\nENTRYPOINT [ \"tini\", \"--\" ]\n# Create local AWS resources before building the app\nCMD sh init-localstack.sh && npm run docker-dev"
}