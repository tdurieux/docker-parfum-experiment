{
  "startTime": 1674256313675,
  "endTime": 1674256314769,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 83,
        "lineEnd": 83,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 90,
        "lineEnd": 90,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 5,
        "columnEnd": 16
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 5,
        "columnEnd": 39
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 5,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 26,
        "lineEnd": 37,
        "columnStart": 5,
        "columnEnd": 23
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 55,
        "lineEnd": 71,
        "columnStart": 4,
        "columnEnd": 19
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 84,
        "lineEnd": 84,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 55,
        "lineEnd": 71,
        "columnStart": 4,
        "columnEnd": 19
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 84,
        "lineEnd": 84,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 26,
        "lineEnd": 37,
        "columnStart": 5,
        "columnEnd": 23
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 55,
        "lineEnd": 71,
        "columnStart": 4,
        "columnEnd": 19
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 84,
        "lineEnd": 84,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 55,
        "lineEnd": 71,
        "columnStart": 4,
        "columnEnd": 19
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 84,
        "lineEnd": 84,
        "columnStart": 4,
        "columnEnd": 53
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:focal\n\nENV DEBIAN_FRONTEND=noninteractive\nENV TZ=Etc/UTC\nRUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone\n\nARG MOZJPEG_VERSION=3.3.1\nARG VIPS_VERSION=8.10.1\n\nARG MOZJPEG_URL=https://github.com/mozilla/mozjpeg/archive\nARG VIPS_URL=https://github.com/libvips/libvips/releases/download\n\n# mozjpeg installs to /opt/mozjpeg ... we need that on PKG_CONFIG_PATH so\n# that libvips configure can find it\nENV PKG_CONFIG_PATH=$PKG_CONFIG_PATH:/opt/mozjpeg/lib64/pkgconfig\n\n# libvips installs to /usr/local by default .. /usr/local/bin is on the\n# default path in ubuntu, but /usr/local/lib is not\nENV LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/lib\n\n# expand\nENV PATH=$PATH:/usr/local/bin\nENV MANPATH=$MANPATH:/usr/local/man\n\n# basic build tools\nRUN apt-get update \\\n  && apt-get install --no-install-recommends -y \\\n  build-essential \\\n  autoconf \\\n  automake \\\n  libtool \\\n  nasm \\\n  wget \\\n  pkg-config \\\n  curl \\\n  gtk-doc-tools \\\n  swig \\\n  gobject-introspection && rm -rf /var/lib/apt/lists/*;\n\nRUN cd /usr/local/src \\\n  && wget ${MOZJPEG_URL}/v${MOZJPEG_VERSION}.tar.gz \\\n  && tar xzf v${MOZJPEG_VERSION}.tar.gz && rm v${MOZJPEG_VERSION}.tar.gz\n\nRUN cd /usr/local/src/mozjpeg-${MOZJPEG_VERSION} \\\n  && aclocal \\\n  && autoconf \\\n  && autoheader \\\n  && libtoolize \\\n  && automake --add-missing \\\n  && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n  && make \\\n  && make install\n\n# we must not use any packages which depend directly or indirectly on libjpeg,\n# since we want to use our own mozjpeg build\nRUN apt-get install --no-install-recommends -y \\\n  libxml2-dev \\\n  libfftw3-dev \\\n  libmagickwand-dev \\\n  libopenexr-dev \\\n  libgsf-1-dev \\\n  liborc-0.4-0 \\\n  liborc-dev \\\n  libglib2.0-dev \\\n  libexpat-dev \\\n  libpng-dev \\\n  libgif-dev \\\n  libwebp-dev \\\n  libheif-dev \\\n  libexif-dev \\\n  liblcms2-dev \\\n  libimagequant-dev && rm -rf /var/lib/apt/lists/*;\n\nRUN cd /usr/local/src \\\n  && wget ${VIPS_URL}/v${VIPS_VERSION}/vips-${VIPS_VERSION}.tar.gz \\\n  && tar xzf vips-${VIPS_VERSION}.tar.gz && rm vips-${VIPS_VERSION}.tar.gz\n\nRUN cd /usr/local/src/vips-${VIPS_VERSION} \\\n  && ./autogen.sh \\\n  && make \\\n  && make install\n\n# nodejs\nRUN curl -f -sL https://deb.nodesource.com/setup_12.x | bash -\nRUN apt-get install --no-install-recommends -y nodejs && rm -rf /var/lib/apt/lists/*;\n\nRUN mkdir -p /usr/local/src/image-actions\nWORKDIR /usr/local/src/image-actions\n\nCOPY package.json package-lock.json /usr/local/src/image-actions/\nRUN npm install && npm cache clean --force;\n\n# copy in src\nCOPY LICENSE README.md entrypoint.js tsconfig.json .jest.env.js /usr/local/src/image-actions/\nCOPY markdown-templates/ /usr/local/src/image-actions/markdown-templates/\nCOPY src/ /usr/local/src/image-actions/src/\nRUN npm run build\nCOPY __tests__/ /usr/local/src/image-actions/__tests__/\n\nENTRYPOINT [\"/usr/local/src/image-actions/entrypoint.js\"]\n"
}