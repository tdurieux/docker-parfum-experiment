{
  "startTime": 1674249209253,
  "endTime": 1674249209814,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 7,
        "columnEnd": 100
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:latest\n\nARG BUILD_DATE\nARG VCS_REF\nARG VERSION\n\nLABEL \\\n    org.opencontainers.image.vendor=\"The Goofball - goofball222@gmail.com\" \\\n    org.opencontainers.image.url=\"https://github.com/goofball222/unifi\" \\\n    org.opencontainers.image.title=\"UniFi Controller\" \\\n    org.opencontainers.image.description=\"UniFi Controller\" \\\n    org.opencontainers.image.version=${VERSION}-Alpine \\\n    org.opencontainers.image.source=\"https://github.com/goofball222/unifi\" \\\n    org.opencontainers.image.revision=${VCS_REF} \\\n    org.opencontainers.image.created=${BUILD_DATE} \\\n    org.opencontainers.image.licenses=\"Apache-2.0\"\n\nENV \\\n    BIND_PRIV=false \\\n    DEBUG=false \\\n    JVM_EXTRA_OPTS= \\\n    JVM_INIT_HEAP_SIZE= \\\n    JVM_MAX_HEAP_SIZE=1024M \\\n    PGID=999 \\\n    PUID=999 \\\n    RUN_CHOWN=true \\\n    RUNAS_UID0=false\n\nWORKDIR /usr/lib/unifi\n\nCOPY root /\n\nRUN set -x \\\n    && delgroup ping \\\n    && addgroup -g $PGID unifi \\\n    && adduser -D -G unifi -u $PUID unifi \\\n    && apk add -q --no-cache \\\n        gcompat libc6-compat \\\n    && apk add -q --no-cache \\\n        bash binutils coreutils curl libcap \\\n        openjdk8-jre openssl shadow su-exec \\\n        tzdata \\\n    && curl -f -sSL https://dl.ui.com/unifi/${VERSION}/UniFi.unix.zip -o /tmp/UniFi.unix.${VERSION}.zip \\\n    && unzip -q /tmp/UniFi.unix.${VERSION}.zip -d /tmp \\\n    && mv /tmp/UniFi/* /usr/lib/unifi/ \\\n    && bash -c 'mkdir -p {data,logs,run,cert}' \\\n    && chown -R unifi:unifi /usr/lib/unifi \\\n    && rm -rf /tmp/* /var/tmp/* /var/cache/apk/*\n\nEXPOSE 3478/udp 6789/tcp 8080/tcp 8443/tcp 8843/tcp 8880/tcp 10001/udp\n\nVOLUME [\"/usr/lib/unifi/cert\", \"/usr/lib/unifi/data\", \"/usr/lib/unifi/logs\"]\n\nHEALTHCHECK --start-period=2m CMD /usr/local/bin/docker-healthcheck.sh\n\nENTRYPOINT [\"docker-entrypoint.sh\"]\n\nCMD [\"unifi\"]\n"
}