{
  "startTime": 1674252383643,
  "endTime": 1674252385474,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 17
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# bytebin Dockerfile\n# Copyright (c) lucko - licenced MIT\n\n# --------------\n# BUILD STAGE\n# --------------\nFROM alpine as build\n\n# install jdk17 and binutils (for objcopy, needed by jlink)\nRUN apk add --no-cache openjdk17 binutils\n\n# create a minimal JRE\nRUN jlink \\\n    --add-modules java.base,java.logging,java.xml,java.desktop,java.management,java.sql,java.naming,jdk.unsupported \\\n    --strip-debug \\\n    --no-man-pages \\\n    --no-header-files \\\n    --compress=2 \\\n    --output /jre\n\n# install maven\nRUN apk add --no-cache maven\n\n# compile the project\nWORKDIR /bytebin\nCOPY pom.xml ./\nCOPY src/ ./src/\nRUN mvn -B package\n\n\n# --------------\n# RUN STAGE\n# --------------\nFROM alpine\n\n# copy JRE from build stage\nENV JAVA_HOME=/opt/java\nENV PATH \"${JAVA_HOME}/bin:${PATH}\"\nCOPY --from=build /jre $JAVA_HOME\n\nRUN addgroup -S bytebin && adduser -S -G bytebin bytebin\nUSER bytebin\n\n# copy app from build stage\nWORKDIR /opt/bytebin\nCOPY --from=build /bytebin/target/bytebin.jar .\n\n# define a volume for the stored content\nRUN mkdir content logs\nVOLUME [\"/opt/bytebin/content\", \"/opt/bytebin/logs\"]\n\n# define a healthcheck\nHEALTHCHECK --interval=1m --timeout=5s \\\n    CMD wget http://localhost:8080/health -q -O - | grep -c '{\"status\":\"ok\"}' || exit 1\n\n# run the app\nCMD [\"java\", \"-jar\", \"bytebin.jar\"]\nEXPOSE 8080/tcp\n"
}