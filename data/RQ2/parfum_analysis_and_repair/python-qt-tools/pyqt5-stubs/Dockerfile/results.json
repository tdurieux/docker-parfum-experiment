{
  "startTime": 1674254574595,
  "endTime": 1674254575965,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 96,
        "lineEnd": 99,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 130,
        "lineEnd": 133,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 154,
        "lineEnd": 157,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 187,
        "lineEnd": 190,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 220,
        "lineEnd": 223,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 253,
        "lineEnd": 256,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 286,
        "lineEnd": 289,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 319,
        "lineEnd": 322,
        "columnStart": 4,
        "columnEnd": 28
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# ARCH_VERSION is a tag available from:\n#       https://hub.docker.com/_/archlinux?tab=tags&page=1&ordering=last_updated\n# BUILD_DATE is a path from:\n#       https://archive.archlinux.org/repos/\nARG ARCH_VERSION=\"base-20211121.0.39613\"\nARG BUILD_DATE=\"2021/11/29\"\n\nARG SIP_VERSION=\"6.4.0\"\n# Also the major of PyQt5-sip\nARG SIP_ABI_VERSION=\"12\"\nARG PYQT_VERSION=\"5.15.6\"\nARG PYQT_3D_VERSION=\"5.15.5\"\nARG PYQT_CHART_VERSION=\"5.15.5\"\nARG PYQT_DATA_VISUALIZATION_VERSION=\"5.15.5\"\nARG PYQT_PURCHASING_VERSION=\"5.15.5\"\nARG PYQT_WEB_ENGINE_VERSION=\"5.15.5\"\nARG PYQT_NETWORK_AUTH_VERSION=\"5.15.5\"\n\nARG MAKEFLAGS=\"\"\n\n################################################################################\n# Build dependencies\n################################################################################\n\nFROM archlinux:${ARCH_VERSION} AS build-dep\n\n# Reuse argument from previous build scope\nARG BUILD_DATE\n\n# WORKAROUND for glibc 2.33 and old Docker\n# See https://github.com/actions/virtual-environments/issues/2658\n# Thanks to https://github.com/lxqt/lxqt-panel/pull/1562\n# https://github.com/qutebrowser/qutebrowser/blob/30d54c8da4a8e091dbe439770d4e1796dc7c78dc/scripts/dev/ci/docker/Dockerfile.j2#L3-L8\nRUN patched_glibc=glibc-linux4-2.33-4-x86_64.pkg.tar.zst && \\\n    curl -f -LO \"https://repo.archlinuxcn.org/x86_64/$patched_glibc\" && \\\n    bsdtar -C / -xvf \"$patched_glibc\"\n\n# Use Arch archive to freeze packages to a certain date\nRUN echo \"Server=https://archive.archlinux.org/repos/${BUILD_DATE}/\\$repo/os/\\$arch\" \\\n        | tee /etc/pacman.d/mirrorlist && \\\n    pacman -Syyuu --noconfirm\n\n# Install build dependencies and Qt Modules\nRUN pacman --noconfirm -S \\\n        # Build stuff\n        base-devel wget \\\n        # PyQt stuff\n        pyqt-builder sip \\\n        # Used to build other PyQt modules in later build stages\n        python-pyqt5 \\\n        # Qt core\n        qt5-base  \\\n        # Qt modules not included in qt5-base\n        qt5-3d \\\n        qt5-charts \\\n        qt5-connectivity \\\n        qt5-datavis3d \\\n        qt5-declarative \\\n        qt5-gamepad \\\n        qt5-graphicaleffects \\\n        qt5-imageformats \\\n        qt5-location \\\n        qt5-multimedia \\\n        qt5-purchasing \\\n        qt5-networkauth \\\n        qt5-remoteobjects \\\n        qt5-script \\\n        qt5-sensors \\\n        qt5-serialport \\\n        qt5-svg \\\n        qt5-tools \\\n        qt5-wayland \\\n        qt5-webchannel \\\n        qt5-webengine \\\n        qt5-webkit  \\\n        qt5-websockets \\\n        qt5-x11extras \\\n        qt5-xmlpatterns \\\n        # Required for QtDBus\n        python-dbus\n\n################################################################################\n# PyQt5 core stubs\n################################################################################\n\nFROM build-dep AS pyqt5\n\n# Reuse arguments from previous build scope\nARG MAKEFLAGS\nARG PYQT_VERSION\n\n# Download source tar\nRUN wget --no-verbose \\\n    --output-document upstream.tar.gz \\\n    https://pypi.io/packages/source/p/pyqt5/PyQt5-${PYQT_VERSION}.tar.gz\nRUN mkdir /upstream/ && \\\n    tar -xf \\\n        upstream.tar.gz \\\n        --directory /upstream/ \\\n        --strip-components 1 && rm upstream.tar.gz\n\n# Build PyQt with stubs\n# TODO: Find way to build only stubs. This takes way too long\nWORKDIR /upstream/\nRUN sip-install \\\n    --qmake /usr/bin/qmake-qt5 \\\n    --confirm-license \\\n    --pep484-pyi \\\n    --build-dir ./build \\\n    --verbose\n\n# Copy all .pyi files to output dir\nWORKDIR /output/\nRUN find /upstream/ -name \\*.pyi -exec cp {} . \\;\n\n################################################################################\n# PyQt5-SIP stubs\n################################################################################\n\nFROM build-dep AS sip\n\n# Reuse arguments from previous build scope\nARG SIP_VERSION\nARG SIP_ABI_VERSION\n\n# Download source tar\nRUN wget --no-verbose \\\n    --output-document upstream.tar.gz \\\n    https://pypi.io/packages/source/s/sip/sip-${SIP_VERSION}.tar.gz\nRUN mkdir /upstream/ && \\\n    tar -xf \\\n        upstream.tar.gz \\\n        --directory /upstream/ \\\n        --strip-components 1 && rm upstream.tar.gz\n\n# Copy all .pyi files to output dir\nWORKDIR /output/\nRUN find /upstream/ -wholename \\*/${SIP_ABI_VERSION}/\\*.pyi -exec cp {} . \\;\n\n################################################################################\n# PyQt3D\n################################################################################\n\nFROM build-dep AS pyqt-3d\n\n# Reuse arguments from previous build scope\nARG MAKEFLAGS\nARG PYQT_3D_VERSION\n\n# Download source tar\nRUN wget --no-verbose \\\n    --output-document upstream.tar.gz \\\n    https://pypi.io/packages/source/p/pyqt3d/PyQt3D-${PYQT_3D_VERSION}.tar.gz\nRUN mkdir /upstream/ && \\\n    tar -xf \\\n        upstream.tar.gz \\\n        --directory /upstream/ \\\n        --strip-components 1 && rm upstream.tar.gz\n\n# Build PyQt3D with stubs\n# TODO: Find way to build only stubs\nWORKDIR /upstream/\nRUN sip-install \\\n    --qmake /usr/bin/qmake-qt5 \\\n    --pep484-pyi \\\n    --build-dir ./build \\\n    --verbose\n\n# Copy all .pyi files to output dir\nWORKDIR /output/\nRUN find /upstream/ -name \\*.pyi -exec cp {} . \\;\n\n################################################################################\n# PyQtChart\n################################################################################\n\nFROM build-dep AS pyqt-chart\n\n# Reuse arguments from previous build scope\nARG MAKEFLAGS\nARG PYQT_CHART_VERSION\n\n# Download source tar\nRUN wget --no-verbose \\\n    --output-document upstream.tar.gz \\\n    https://pypi.io/packages/source/p/pyqtchart/PyQtChart-${PYQT_CHART_VERSION}.tar.gz\nRUN mkdir /upstream/ && \\\n    tar -xf \\\n        upstream.tar.gz \\\n        --directory /upstream/ \\\n        --strip-components 1 && rm upstream.tar.gz\n\n# Build PyQtChart with stubs\n# TODO: Find way to build only stubs\nWORKDIR /upstream/\nRUN sip-install \\\n    --qmake /usr/bin/qmake-qt5 \\\n    --pep484-pyi \\\n    --build-dir ./build \\\n    --verbose\n\n# Copy all .pyi files to output dir\nWORKDIR /output/\nRUN find /upstream/ -name \\*.pyi -exec cp {} . \\;\n\n################################################################################\n# PyQtDataVisualization\n################################################################################\n\nFROM build-dep AS pyqt-data-visualization\n\n# Reuse arguments from previous build scope\nARG MAKEFLAGS\nARG PYQT_DATA_VISUALIZATION_VERSION\n\n# Download source tar\nRUN wget --no-verbose \\\n    --output-document upstream.tar.gz \\\n    https://pypi.io/packages/source/p/pyqtdatavisualization/PyQtDataVisualization-${PYQT_DATA_VISUALIZATION_VERSION}.tar.gz\nRUN mkdir /upstream/ && \\\n    tar -xf \\\n        upstream.tar.gz \\\n        --directory /upstream/ \\\n        --strip-components 1 && rm upstream.tar.gz\n\n# Build PyQtDataVisualization with stubs\n# TODO: Find way to build only stubs\nWORKDIR /upstream/\nRUN sip-install \\\n    --qmake /usr/bin/qmake-qt5 \\\n    --pep484-pyi \\\n    --build-dir ./build \\\n    --verbose\n\n# Copy all .pyi files to output dir\nWORKDIR /output/\nRUN find /upstream/ -name \\*.pyi -exec cp {} . \\;\n\n################################################################################\n# PyQtPurchasing\n################################################################################\n\nFROM build-dep AS pyqt-purchasing\n\n# Reuse arguments from previous build scope\nARG MAKEFLAGS\nARG PYQT_PURCHASING_VERSION\n\n# Download source tar\nRUN wget --no-verbose \\\n    --output-document upstream.tar.gz \\\n    https://pypi.io/packages/source/p/pyqtpurchasing/PyQtPurchasing-${PYQT_PURCHASING_VERSION}.tar.gz\nRUN mkdir /upstream/ && \\\n    tar -xf \\\n        upstream.tar.gz \\\n        --directory /upstream/ \\\n        --strip-components 1 && rm upstream.tar.gz\n\n# Build PyQtPurchasing with stubs\n# TODO: Find way to build only stubs\nWORKDIR /upstream/\nRUN sip-install \\\n    --qmake /usr/bin/qmake-qt5 \\\n    --pep484-pyi \\\n    --build-dir ./build \\\n    --verbose\n\n# Copy all .pyi files to output dir\nWORKDIR /output/\nRUN find /upstream/ -name \\*.pyi -exec cp {} . \\;\n\n################################################################################\n# PyQtWebEngine\n################################################################################\n\nFROM build-dep AS pyqt-web-engine\n\n# Reuse arguments from previous build scope\nARG MAKEFLAGS\nARG PYQT_WEB_ENGINE_VERSION\n\n# Download source tar\nRUN wget --no-verbose \\\n    --output-document upstream.tar.gz \\\n    https://pypi.io/packages/source/p/pyqtwebengine/PyQtWebEngine-${PYQT_WEB_ENGINE_VERSION}.tar.gz\nRUN mkdir /upstream/ && \\\n    tar -xf \\\n        upstream.tar.gz \\\n        --directory /upstream/ \\\n        --strip-components 1 && rm upstream.tar.gz\n\n# Build PyQtWebEngine with stubs\n# TODO: Find way to build only stubs\nWORKDIR /upstream/\nRUN sip-install \\\n    --qmake /usr/bin/qmake-qt5 \\\n    --pep484-pyi \\\n    --build-dir ./build \\\n    --verbose\n\n# Copy all .pyi files to output dir\nWORKDIR /output/\nRUN find /upstream/ -name \\*.pyi -exec cp {} . \\;\n\n################################################################################\n# PyQtNetworkAuth\n################################################################################\n\nFROM build-dep AS pyqt-network-auth\n\n# Reuse arguments from previous build scope\nARG MAKEFLAGS\nARG PYQT_NETWORK_AUTH_VERSION\n\n# Download source tar\nRUN wget --no-verbose \\\n    --output-document upstream.tar.gz \\\n    https://pypi.io/packages/source/p/pyqtnetworkauth/PyQtNetworkAuth-${PYQT_NETWORK_AUTH_VERSION}.tar.gz\nRUN mkdir /upstream/ && \\\n    tar -xf \\\n        upstream.tar.gz \\\n        --directory /upstream/ \\\n        --strip-components 1 && rm upstream.tar.gz\n\n# Build PyQtNetworkAuth with stubs\n# TODO: Find way to build only stubs\nWORKDIR /upstream/\nRUN sip-install \\\n    --qmake /usr/bin/qmake-qt5 \\\n    --pep484-pyi \\\n    --build-dir ./build \\\n    --verbose\n\n# Copy all .pyi files to output dir\nWORKDIR /output/\nRUN find /upstream/ -name \\*.pyi -exec cp {} . \\;\n\n################################################################################\n# Output\n################################################################################\n\nFROM scratch AS output\n\n# Get all the outputs from the build layers\nWORKDIR /output/\nCOPY --from=pyqt5 /output/* ./\nCOPY --from=sip /output/* ./\nCOPY --from=pyqt-3d /output/* ./\nCOPY --from=pyqt-chart /output/* ./\nCOPY --from=pyqt-data-visualization /output/* ./\nCOPY --from=pyqt-purchasing /output/* ./\nCOPY --from=pyqt-web-engine /output/* ./\nCOPY --from=pyqt-network-auth /output/* ./\n\n# Required to run the image (which we need to do to get the files)\nCMD /bin/true\n"
}