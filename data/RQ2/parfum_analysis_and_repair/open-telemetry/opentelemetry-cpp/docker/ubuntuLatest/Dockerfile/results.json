{
  "startTime": 1674248216755,
  "endTime": 1674248218175,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 22,
        "columnEnd": 105
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 25,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 67
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 22,
        "columnEnd": 105
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 25,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 67
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 25,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 67
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:latest\nENV DEBIAN_FRONTEND=noninteractive\nWORKDIR /work\n\n#install grpc and abseil\nARG GRPC_VERSION=v1.38.0\nRUN apt-get update && apt-get install --no-install-recommends -y build-essential autoconf libtool pkg-config cmake git libssl-dev && \\\n    git clone --depth=1 -b $GRPC_VERSION  https://github.com/grpc/grpc.git && \\\n    cd grpc && git submodule update --init && \\\n    mkdir -p \"third_party/abseil-cpp/build\" && cd \"third_party/abseil-cpp/build\" && \\\n    cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_POSITION_INDEPENDENT_CODE=TRUE .. && \\\n    make -j${nproc} install && cd ../../.. && \\\n    mkdir build && cd build && \\\n    cmake \\\n        -DCMAKE_BUILD_TYPE=Release \\\n        -DgRPC_INSTALL=ON \\\n        -DgRPC_BUILD_TESTS=OFF \\\n        -DgRPC_ABSL_PROVIDER=package \\\n        -DgRPC_SSL_PROVIDER=package \\\n        .. && \\\n    make -j${nproc} install && make clean && ldconfig && \\\n    cd ../.. && rm -rf /var/lib/apt/lists/*;\n\n#install thrift\nARG THRIFT_VERSION=0.14.1\nRUN apt-get install -y --no-install-recommends \\\n        libboost-all-dev \\\n        libevent-dev \\\n        wget && \\\n    wget https://github.com/apache/thrift/archive/refs/tags/v$THRIFT_VERSION.tar.gz && \\\n    tar -xvf v$THRIFT_VERSION.tar.gz && \\\n    mkdir -p thrift-$THRIFT_VERSION/build && cd thrift-$THRIFT_VERSION/build && \\\n    cmake \\\n        -DCMAKE_BUILD_TYPE=Release \\\n        -DBUILD_COMPILER=OFF \\\n        -DBUILD_CPP=ON \\\n        -DBUILD_LIBRARIES=ON \\\n        -DBUILD_NODEJS=OFF \\\n        -DBUILD_PYTHON=OFF \\\n        -DBUILD_JAVASCRIPT=OFF \\\n        -DBUILD_C_GLIB=OFF \\\n        -DBUILD_JAVA=OFF \\\n        -DBUILD_TESTING=OFF \\\n        -DBUILD_TUTORIALS=OFF \\\n        .. && \\\n    make -j${nproc} install && make clean && ldconfig && \\\n    cd ../.. && rm v$THRIFT_VERSION.tar.gz && rm -rf /var/lib/apt/lists/*;\n\n#install opentelemetry-cpp\nRUN apt-get install -y --no-install-recommends libcurl4-openssl-dev && git clone --depth=1 https://github.com/open-telemetry/opentelemetry-cpp.git && \\\n    cd opentelemetry-cpp && git submodule update --init && \\\n    mkdir -p build && cd build && \\\n    cmake \\\n        -DCMAKE_BUILD_TYPE=Release \\\n        -DCMAKE_POSITION_INDEPENDENT_CODE=TRUE  \\\n        -DWITH_ZIPKIN=ON \\\n        -DWITH_JAEGER=ON \\\n        -DBUILD_TESTING=OFF \\\n        -DWITH_OTLP=ON \\\n        .. && \\\n    make -j${nproc} install && ldconfig && \\\n    cd ../.. && rm -rf /var/lib/apt/lists/*;\n"
}