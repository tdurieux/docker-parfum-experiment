{
  "startTime": 1674248815474,
  "endTime": 1674248816407,
  "originalSmells": [
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 21,
        "columnEnd": 67
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 5,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 17
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 37,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 7,
        "columnEnd": 39
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 7,
        "columnEnd": 39
      }
    }
  ],
  "repairedDockerfile": "FROM centos:7\n\nARG TOOLSET_VER=11\n\nRUN yum update -y && yum install -y centos-release-scl epel-release && rm -rf /var/cache/yum\nRUN yum install -y devtoolset-${TOOLSET_VER} \\\n    cmake3 git \\\n    openssl-devel \\\n    libcurl-devel \\\n    && source /opt/rh/devtoolset-${TOOLSET_VER}/enable && rm -rf /var/cache/yum\n\nRUN echo \"source /opt/rh/devtoolset-${TOOLSET_VER}/enable\" >> /etc/bashrc\nRUN echo \"BOOST_LIBRARYDIR=/usr/lib64/boost169\" >> /etc/bashrc\nRUN echo \"BOOST_INCLUDEDIR=/usr/include/boost169\" >> /etc/bashrc\n\nARG GRPC_VERSION=v1.43.2\n\n# install gRPC\nRUN git clone --depth=1 -b $GRPC_VERSION  https://github.com/grpc/grpc.git \\\n    && cd grpc && git submodule update --init \\\n    && mkdir -p \"third_party/abseil-cpp/build\" && cd \"third_party/abseil-cpp/build\" \\\n    && source /opt/rh/devtoolset-${TOOLSET_VER}/enable \\\n    && cmake3 -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=Release -DCMAKE_POSITION_INDEPENDENT_CODE=TRUE .. \\\n    && make -j${nproc} install && cd ../../.. \\\n    && mkdir build && cd build \\\n    && cmake3 \\\n        -DCMAKE_CXX_STANDARD=17 \\\n        -DCMAKE_BUILD_TYPE=Release \\\n        -DgRPC_INSTALL=ON \\\n        -DgRPC_BUILD_TESTS=OFF \\\n        -DgRPC_ABSL_PROVIDER=package \\\n        -DgRPC_SSL_PROVIDER=package \\\n        .. && \\\n    make -j${nproc} install && make clean && ldconfig\n\n# install thrift\nARG THRIFT_VERSION=0.14.1\nRUN yum install -y \\\n        boost169-devel \\\n        libevent-devel \\\n        wget \\\n    && wget https://github.com/apache/thrift/archive/refs/tags/v$THRIFT_VERSION.tar.gz \\\n    && tar -xvf v$THRIFT_VERSION.tar.gz \\\n    && mkdir -p thrift-$THRIFT_VERSION/build && cd thrift-$THRIFT_VERSION/build \\\n    && source /opt/rh/devtoolset-${TOOLSET_VER}/enable \\\n    && export BOOST_INCLUDEDIR=/usr/include/boost169 \\\n    && export BOOST_LIBRARYDIR=/usr/lib64/boost169 \\\n    && cmake3 \\\n        -DCMAKE_BUILD_TYPE=Release \\\n        -DBUILD_COMPILER=OFF \\\n        -DBUILD_CPP=ON \\\n        -DBUILD_LIBRARIES=ON \\\n        -DBUILD_NODEJS=OFF \\\n        -DBUILD_PYTHON=OFF \\\n        -DBUILD_JAVASCRIPT=OFF \\\n        -DBUILD_C_GLIB=OFF \\\n        -DBUILD_JAVA=OFF \\\n        -DBUILD_TESTING=OFF \\\n        -DBUILD_TUTORIALS=OFF \\\n        -DWITH_STDTHREADS=ON \\\n        -DWITH_BOOSTTHREADS=OFF \\\n        -DWITH_BOOST_FUNCTIONAL=OFF \\\n        -DWITH_BOOST_SMART_PTR=OFF \\\n        .. \\\n    && make -j${nproc} && make install && ldconfig && rm -rf /var/cache/yum\n\n#install opentelemetry-cpp\nRUN git clone --depth=1 https://github.com/open-telemetry/opentelemetry-cpp.git \\\n    && cd opentelemetry-cpp && git submodule update --init \\\n    && mkdir -p build && cd build \\\n    && source /opt/rh/devtoolset-${TOOLSET_VER}/enable \\\n    && export BOOST_INCLUDEDIR=/usr/include/boost169 \\\n    && export BOOST_LIBRARYDIR=/usr/lib64/boost169 \\\n    && cmake3 \\\n        -DCMAKE_BUILD_TYPE=Release \\\n        -DCMAKE_POSITION_INDEPENDENT_CODE=TRUE  \\\n        -DWITH_ZIPKIN=ON \\\n        -DWITH_JAEGER=ON \\\n        -DBUILD_TESTING=OFF \\\n        -DWITH_OTLP=ON \\\n        .. \\\n    && make -j${nproc} install && ldconfig\n"
}