diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/open-telemetry/opentelemetry-cpp-contrib/instrumentation/otel-webserver-module/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/open-telemetry/opentelemetry-cpp-contrib/instrumentation/otel-webserver-module/Dockerfile/repaired.Dockerfile
index f94801d..1054aff 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/open-telemetry/opentelemetry-cpp-contrib/instrumentation/otel-webserver-module/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/open-telemetry/opentelemetry-cpp-contrib/instrumentation/otel-webserver-module/Dockerfile/repaired.Dockerfile
@@ -32,7 +32,7 @@ RUN groupadd -r swuser && useradd -u 1000 -g swuser -m -s /sbin/nologin -c "defa
 
 RUN chmod -R 777 /opt
 
-RUN curl https://www.getpagespeed.com/files/centos6-eol.repo --output /etc/yum.repos.d/CentOS-Base.repo
+RUN curl -f https://www.getpagespeed.com/files/centos6-eol.repo --output /etc/yum.repos.d/CentOS-Base.repo
 
 # install required packages
 RUN yum update -y \
@@ -44,47 +44,47 @@ RUN yum update -y \
     yum install pcre-devel -y \
     yum install xz -y \
     yum install httpd -y \
-    && yum clean all
+    && yum clean all && rm -rf /var/cache/yum
 
 # install lcov package
 RUN wget https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm \
 	&& yum install ./epel-release-latest-*.noarch.rpm -y \
 	&& yum install lcov -y \
-	&& yum clean all
+	&& yum clean all && rm -rf /var/cache/yum
 
 # install devtoolset toolchain
-RUN curl https://www.getpagespeed.com/files/centos6-eol.repo --output /etc/yum.repos.d/CentOS-Base.repo \
-  && curl https://www.getpagespeed.com/files/centos6-epel-eol.repo --output /etc/yum.repos.d/epel.repo \
+RUN curl -f https://www.getpagespeed.com/files/centos6-eol.repo --output /etc/yum.repos.d/CentOS-Base.repo \
+  && curl -f https://www.getpagespeed.com/files/centos6-epel-eol.repo --output /etc/yum.repos.d/epel.repo \
   && yum -y install centos-release-scl \
-  && curl https://www.getpagespeed.com/files/centos6-scl-eol.repo --output /etc/yum.repos.d/CentOS-SCLo-scl.repo \
-  && curl https://www.getpagespeed.com/files/centos6-scl-rh-eol.repo --output /etc/yum.repos.d/CentOS-SCLo-scl-rh.repo \
+  && curl -f https://www.getpagespeed.com/files/centos6-scl-eol.repo --output /etc/yum.repos.d/CentOS-SCLo-scl.repo \
+  && curl -f https://www.getpagespeed.com/files/centos6-scl-rh-eol.repo --output /etc/yum.repos.d/CentOS-SCLo-scl-rh.repo \
   && yum install yum-utils -y \
   && yum-config-manager --enable rhel-server-rhscl-7-rpms -y \
   && yum install devtoolset-7 -y \
-  && yum clean all
+  && yum clean all && rm -rf /var/cache/yum
 ENV PATH="/opt/rh/devtoolset-7/root/usr/bin:${PATH}"
 
-# install python 
-RUN wget http://www.python.org/ftp/python/${PYTHON_VERSION}/Python-${PYTHON_VERSION}.tar.xz \
+# install python
+RUN wget https://www.python.org/ftp/python/${PYTHON_VERSION}/Python-${PYTHON_VERSION}.tar.xz \
 	&& unxz Python-${PYTHON_VERSION}.tar.xz \
 	&& tar -xf Python-${PYTHON_VERSION}.tar \
-	&& cd Python-${PYTHON_VERSION} && ./configure --prefix=/usr/local && make && make install \
+	&& cd Python-${PYTHON_VERSION} && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/usr/local && make && make install \
 	&& cd .. \
 	&& rm -rf Python-${PYTHON_VERSION}.tar.xz && rm -rf Python-${PYTHON_VERSION}.tar
 
 # install gosu for easy step-down from root (from https://github.com/tianon/gosu/blob/master/INSTALL.md#from-centos)
 ENV GOSU_VERSION=1.10
 
-RUN curl -o /usr/bin/gosu -SL "https://github.com/tianon/gosu/releases/download/${GOSU_VERSION}/gosu-amd64" \
+RUN curl -f -o /usr/bin/gosu -SL "https://github.com/tianon/gosu/releases/download/${GOSU_VERSION}/gosu-amd64" \
     && chmod +x /usr/bin/gosu \
     # Verify that the binary works
     && gosu nobody true
 
 # install git required for grpc
 RUN yum install git -y \
-  && yum clean all
+  && yum clean all && rm -rf /var/cache/yum
 
-# install cmake 
+# install cmake
 RUN wget https://cmake.org/files/v${CMAKE_VERSION}/cmake-${CMAKE_0VERSION}-linux-x86_64.tar.gz \
   && tar -xvf cmake-${CMAKE_0VERSION}-linux-x86_64.tar.gz \
   && cd cmake-${CMAKE_0VERSION}-linux-x86_64 \
@@ -107,7 +107,7 @@ RUN git clone https://github.com/grpc/grpc \
 # Create dependencies folder to store all dependencies.
 RUN mkdir -p dependencies
 
-# install boost version 
+# install boost version
 RUN wget https://boostorg.jfrog.io/artifactory/main/release/${BOOST_VERSION}/source/${BOOST_FILENAME}_rc1.tar.gz \
     && tar -xvf ${BOOST_FILENAME}_rc1.tar.gz \
     && cd ${BOOST_FILENAME} \
@@ -120,7 +120,7 @@ RUN mkdir -p dependencies/apr/${APR_VERSION} \
     && wget https://dlcdn.apache.org//apr/apr-${APR_VERSION}.tar.gz --no-check-certificate \
     && tar -xf apr-${APR_VERSION}.tar.gz \
     && cd apr-${APR_VERSION} \
-    && ./configure --prefix=/dependencies/apr/${APR_VERSION} --enable-static=yes --enable-shared=no --with-pic && echo $? \
+    && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/dependencies/apr/${APR_VERSION} --enable-static=yes --enable-shared=no --with-pic && echo $? \
     && make -j 6 \
     && make install \
     && cd ../ && rm -rf apr-${APR_VERSION} && rm -rf apr-${APR_VERSION}.tar.gz
@@ -130,7 +130,7 @@ RUN mkdir -p dependencies/expat/${EXPAT_VERSION} \
     && wget https://github.com/libexpat/libexpat/releases/download/${EXPAT_RVERSION}/expat-${EXPAT_VERSION}.tar.gz --no-check-certificate \
     && tar -xf expat-${EXPAT_VERSION}.tar.gz \
     && cd expat-${EXPAT_VERSION} \
-    && ./configure --prefix=/dependencies/expat/${EXPAT_VERSION} --enable-static=yes --enable-shared=no --with-pic && echo $? \
+    && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/dependencies/expat/${EXPAT_VERSION} --enable-static=yes --enable-shared=no --with-pic && echo $? \
     && make -j 6 \
     && make install \
     && cd ../ && rm -rf expat-${EXPAT_VERSION} && rm -rf expat-${EXPAT_VERSION}.tar.gz
@@ -140,26 +140,26 @@ RUN mkdir -p dependencies/apr-util/${APRUTIL_VERSION} \
     && wget https://dlcdn.apache.org//apr/apr-util-${APRUTIL_VERSION}.tar.gz --no-check-certificate \
     && tar -xf apr-util-${APRUTIL_VERSION}.tar.gz \
     && cd apr-util-${APRUTIL_VERSION} \
-    && ./configure --prefix=/dependencies/apr-util/${APRUTIL_VERSION} --enable-static=yes --enable-shared=no --with-pic --with-apr=/dependencies/apr/${APR_VERSION} --with-expat=/dependencies/expat/${EXPAT_VERSION} && echo $? \
+    && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/dependencies/apr-util/${APRUTIL_VERSION} --enable-static=yes --enable-shared=no --with-pic --with-apr=/dependencies/apr/${APR_VERSION} --with-expat=/dependencies/expat/${EXPAT_VERSION} && echo $? \
     && make -j 6 \
     && make install \
     && cd ../ && rm -rf apr-util-${APRUTIL_VERSION} && rm -rf apr-util-${APRUTIL_VERSION}.tar.gz
 
 # install m4
-RUN yum install m4 -y
+RUN yum install m4 -y && rm -rf /var/cache/yum
 
 # install autoconf
 RUN wget --no-check-certificate https://ftp.gnu.org/gnu/autoconf/autoconf-${AUTOCONF_VERSION}.tar.gz \
     && tar xzf autoconf-${AUTOCONF_VERSION}.tar.gz  \
     && cd autoconf-${AUTOCONF_VERSION} \
-    && ./configure --prefix=/usr/ && make -j && make install && autoconf -V \
+    && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/usr/ && make -j && make install && autoconf -V \
     && cd .. && rm -rf autoconf-${AUTOCONF_VERSION}.tar.gz
 
 # install automake
 RUN wget --no-check-certificate https://ftp.gnu.org/gnu/automake/automake-${AUTOMAKE_VERSION}.tar.gz \
     && tar xzf automake-${AUTOMAKE_VERSION}.tar.gz \
     && cd automake-${AUTOMAKE_VERSION} \
-    && ./configure --prefix=/usr --libdir=/usr/lib64 \
+    && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/usr --libdir=/usr/lib64 \
     && make -j && make install \
     && automake --version \
     && cd .. && rm -rf automake-${AUTOMAKE_VERSION}.tar.gz
@@ -168,7 +168,7 @@ RUN wget --no-check-certificate https://ftp.gnu.org/gnu/automake/automake-${AUTO
 RUN wget --no-check-certificate https://ftpmirror.gnu.org/libtool/libtool-${LIBTOOL_VERSION}.tar.gz \
     && tar xzf libtool-${LIBTOOL_VERSION}.tar.gz \
     && cd libtool-${LIBTOOL_VERSION} \
-    && ./configure --prefix=/usr \
+    && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/usr \
     && make -j 6 \
     && make install \
     && libtool --version \
@@ -179,8 +179,8 @@ RUN mkdir -p dependencies/apache-log4cxx/-${LOG4CXX_VERSION} \
     && wget https://archive.apache.org/dist/logging/log4cxx/${LOG4CXX_VERSION}/apache-log4cxx-${LOG4CXX_VERSION}.tar.gz --no-check-certificate \
     && tar -xf apache-log4cxx-${LOG4CXX_VERSION}.tar.gz \
     && cd apache-log4cxx-${LOG4CXX_VERSION} \
-    && ./configure --prefix=/dependencies/apache-log4cxx/${LOG4CXX_VERSION}/ --enable-static=yes --enable-shared=no --with-pic --with-apr=/dependencies/apr/${APR_VERSION}/ --with-apr-util=/dependencies/apr-util/${APRUTIL_VERSION}/ && echo $? \
-    && make -j 6 ; echo 0 \
+    && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/dependencies/apache-log4cxx/${LOG4CXX_VERSION}/ --enable-static=yes --enable-shared=no --with-pic --with-apr=/dependencies/apr/${APR_VERSION}/ --with-apr-util=/dependencies/apr-util/${APRUTIL_VERSION}/ && echo $? \
+    && make -j 6; echo 0 \
     && automake --add-missing \
     && make install \
     && cd .. && rm -rf apache-log4cxx-${LOG4CXX_VERSION}.tar.gz && rm -rf apache-log4cxx-${LOG4CXX_VERSION}
@@ -221,7 +221,7 @@ RUN mkdir -p dependencies/pcre/${PCRE_VERSION}/ \
     && wget https://ftp.exim.org/pub/pcre/pcre-${PCRE_VERSION}.tar.gz --no-check-certificate \
     && tar -xvf pcre-${PCRE_VERSION}.tar.gz \
     && cd pcre-${PCRE_VERSION} \
-    && ./configure --prefix=/dependencies/pcre/${PCRE_VERSION} --enable-jit \
+    && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/dependencies/pcre/${PCRE_VERSION} --enable-jit \
     && make && make install \
     && cd .. && rm -rf ${PCRE_VERSION}.tar.gz && rm -rf pcre-${PCRE_VERSION}
 
@@ -233,15 +233,15 @@ RUN mkdir build-dependencies \
     && wget --no-check-certificate https://archive.apache.org/dist/apr/apr-util-${APRUTIL_VERSION}.tar.gz \
     && tar -xf apr-util-${APRUTIL_VERSION}.tar.gz \
     && mv -f apr-util-${APRUTIL_VERSION} build-dependencies \
-    && wget --no-check-certificate http://archive.apache.org/dist/httpd/httpd-2.2.31.tar.gz \
+    && wget --no-check-certificate https://archive.apache.org/dist/httpd/httpd-2.2.31.tar.gz \
     && tar -xf httpd-2.2.31.tar.gz \
     && mv -f httpd-2.2.31 build-dependencies \
-    && wget --no-check-certificate http://archive.apache.org/dist/httpd/httpd-2.4.23.tar.gz \
+    && wget --no-check-certificate https://archive.apache.org/dist/httpd/httpd-2.4.23.tar.gz \
     && tar -xf httpd-2.4.23.tar.gz \
-    && mv -f httpd-2.4.23 build-dependencies
+    && mv -f httpd-2.4.23 build-dependencies && rm apr-${APR_VERSION}.tar.gz
 
 # install nginx
-RUN wget http://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz \
+RUN wget https://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz \
     && tar -xvf nginx-${NGINX_VERSION}.tar.gz -C /build-dependencies \
     && rm -rf nginx-${NGINX_VERSION}.tar.gz
 
@@ -251,7 +251,7 @@ COPY . /otel-webserver-module
 RUN cp -r /dependencies /otel-webserver-module/ \
     && cp -r /build-dependencies /otel-webserver-module/ \
     && cd otel-webserver-module \
-    && ./gradlew assembleApacheModule 
+    && ./gradlew assembleApacheModule
 
 # install webserver module
 RUN cd /otel-webserver-module/build \
@@ -262,7 +262,7 @@ RUN cd /otel-webserver-module/build \
     && echo 'Include conf/opentelemetry_module.conf' >> /etc/httpd/conf/httpd.conf \
     && cd /opt/opentelemetry-webserver-sdk \
     && ./install.sh \
-    && cd /
+    && cd / && rm opentelemetry-webserver-sdk-x64-linux.tgz
 
 # Remove unwanted files
 RUN rm -rf grpc && rm -rf autoconf-${AUTOCONF_VERSION} && rm -rf automake-${AUTOMAKE_VERSION} && rm -rf cmake-${CMAKE_VERSION}-linux-x86_64 \