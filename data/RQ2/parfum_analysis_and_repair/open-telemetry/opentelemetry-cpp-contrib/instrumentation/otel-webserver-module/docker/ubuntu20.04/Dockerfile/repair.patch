diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/open-telemetry/opentelemetry-cpp-contrib/instrumentation/otel-webserver-module/docker/ubuntu20.04/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/open-telemetry/opentelemetry-cpp-contrib/instrumentation/otel-webserver-module/docker/ubuntu20.04/Dockerfile/repaired.Dockerfile
index ab84bfc..d651426 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/open-telemetry/opentelemetry-cpp-contrib/instrumentation/otel-webserver-module/docker/ubuntu20.04/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/open-telemetry/opentelemetry-cpp-contrib/instrumentation/otel-webserver-module/docker/ubuntu20.04/Dockerfile/repaired.Dockerfile
@@ -2,29 +2,29 @@ FROM ubuntu:20.04
 ENV DEBIAN_FRONTEND noninteractive
 
 RUN apt-get -y update && apt-get -y upgrade && apt-get -y dist-upgrade
-RUN apt-get install -qq -y --ignore-missing \
-	build-essential		                    \
-	curl			                        \
-	git			                            \
-	make			                        \
-	pkg-config		                        \
-	protobuf-compiler	                    \
-	libprotobuf-dev                         \
-	python			                        \
-	sudo			                        \
-	tar			                            \
-	zip			                            \
-	unzip			                        \
-	wget			                        \
-    cmake                                   
-
-RUN apt-get install -y \
-    lcov    \
-    m4                                      \
-    autoconf                                \
-    automake                                \
-    libtool                                 \
-    default-jre
+RUN apt-get install --no-install-recommends -qq -y --ignore-missing \
+	build-essential \
+	curl \
+	git \
+	make \
+	pkg-config \
+	protobuf-compiler \
+	libprotobuf-dev \
+	python \
+	sudo \
+	tar \
+	zip \
+	unzip \
+	wget \
+    cmake && rm -rf /var/lib/apt/lists/*;
+
+RUN apt-get install --no-install-recommends -y \
+    lcov \
+    m4 \
+    autoconf \
+    automake \
+    libtool \
+    default-jre && rm -rf /var/lib/apt/lists/*;
 
 # The following arguments would be passed from docker-compose.yml
 ARG GRPC_VERSION="1.36.4"
@@ -86,7 +86,7 @@ RUN mkdir -p dependencies/apr/${APR_VERSION} \
     && wget https://dlcdn.apache.org//apr/apr-${APR_VERSION}.tar.gz --no-check-certificate \
     && tar -xf apr-${APR_VERSION}.tar.gz \
     && cd apr-${APR_VERSION} \
-    && ./configure --prefix=/dependencies/apr/${APR_VERSION} --enable-static=yes --enable-shared=no --with-pic && echo $? \
+    && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/dependencies/apr/${APR_VERSION} --enable-static=yes --enable-shared=no --with-pic && echo $? \
     && make -j 6 \
     && make install \
     && cd ../ && rm -rf apr-${APR_VERSION} && rm -rf apr-${APR_VERSION}.tar.gz
@@ -96,7 +96,7 @@ RUN mkdir -p dependencies/expat/${EXPAT_VERSION} \
     && wget https://github.com/libexpat/libexpat/releases/download/${EXPAT_RVERSION}/expat-${EXPAT_VERSION}.tar.gz --no-check-certificate \
     && tar -xf expat-${EXPAT_VERSION}.tar.gz \
     && cd expat-${EXPAT_VERSION} \
-    && ./configure --prefix=/dependencies/expat/${EXPAT_VERSION} --enable-static=yes --enable-shared=no --with-pic && echo $? \
+    && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/dependencies/expat/${EXPAT_VERSION} --enable-static=yes --enable-shared=no --with-pic && echo $? \
     && make -j 6 \
     && make install \
     && cd ../ && rm -rf expat-${EXPAT_VERSION} && rm -rf expat-${EXPAT_VERSION}.tar.gz
@@ -106,7 +106,7 @@ RUN mkdir -p dependencies/apr-util/${APRUTIL_VERSION} \
     && wget https://dlcdn.apache.org//apr/apr-util-${APRUTIL_VERSION}.tar.gz --no-check-certificate \
     && tar -xf apr-util-${APRUTIL_VERSION}.tar.gz \
     && cd apr-util-${APRUTIL_VERSION} \
-    && ./configure --prefix=/dependencies/apr-util/${APRUTIL_VERSION} --enable-static=yes --enable-shared=no --with-pic --with-apr=/dependencies/apr/1.7.0 --with-expat=/dependencies/expat/2.3.0 && echo $? \
+    && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/dependencies/apr-util/${APRUTIL_VERSION} --enable-static=yes --enable-shared=no --with-pic --with-apr=/dependencies/apr/1.7.0 --with-expat=/dependencies/expat/2.3.0 && echo $? \
     && make -j 6 \
     && make install \
     && cd ../ && rm -rf apr-util-${APRUTIL_VERSION} && rm -rf apr-util-${APRUTIL_VERSION}.tar.gz
@@ -117,8 +117,8 @@ RUN mkdir -p dependencies/apache-log4cxx/${LOG4CXX_VERSION} \
     && wget https://archive.apache.org/dist/logging/log4cxx/${LOG4CXX_VERSION}/apache-log4cxx-${LOG4CXX_VERSION}.tar.gz --no-check-certificate \
     && tar -xf apache-log4cxx-${LOG4CXX_VERSION}.tar.gz \
     && cd apache-log4cxx-${LOG4CXX_VERSION} \
-    && ./configure --prefix=/dependencies/apache-log4cxx/${LOG4CXX_VERSION}/ --enable-static=yes --enable-shared=no --with-pic --with-apr=/dependencies/apr/1.7.0/ --with-apr-util=/dependencies/apr-util/1.6.1/ && echo $? \
-    && make -j 6 ; echo 0 \
+    && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/dependencies/apache-log4cxx/${LOG4CXX_VERSION}/ --enable-static=yes --enable-shared=no --with-pic --with-apr=/dependencies/apr/1.7.0/ --with-apr-util=/dependencies/apr-util/1.6.1/ && echo $? \
+    && make -j 6; echo 0 \
     && automake --add-missing \
     && make install \
     && cd .. && rm -rf apache-log4cxx-${LOG4CXX_VERSION}.tar.gz && rm -rf apache-log4cxx-${LOG4CXX_VERSION}
@@ -142,21 +142,21 @@ RUN mkdir build-dependencies \
     && wget --no-check-certificate https://archive.apache.org/dist/apr/apr-util-${APRUTIL_VERSION}.tar.gz \
     && tar -xf apr-util-${APRUTIL_VERSION}.tar.gz \
     && mv -f apr-util-${APRUTIL_VERSION} build-dependencies \
-    && wget --no-check-certificate http://archive.apache.org/dist/httpd/httpd-2.2.31.tar.gz \
+    && wget --no-check-certificate https://archive.apache.org/dist/httpd/httpd-2.2.31.tar.gz \
     && tar -xf httpd-2.2.31.tar.gz \
     && mv -f httpd-2.2.31 build-dependencies \
-    && wget --no-check-certificate http://archive.apache.org/dist/httpd/httpd-2.4.23.tar.gz \
+    && wget --no-check-certificate https://archive.apache.org/dist/httpd/httpd-2.4.23.tar.gz \
     && tar -xf httpd-2.4.23.tar.gz \
-    && mv -f httpd-2.4.23 build-dependencies
+    && mv -f httpd-2.4.23 build-dependencies && rm apr-${APR_VERSION}.tar.gz
 
 RUN rm -rf apr-util-${APRUTIL_VERSION} && rm -rf apr-util-${APRUTIL_VERSION}.tar.gz \
     && rm -rf httpd-2.4.23.tar.gz && rm -rf httpd-2.2.31.tar.gz \
     && rm -rf grpc \
     && rm -rf apr-${APR_VERSION} && rm -rf apr-${APR_VERSION}.tar.gz
 
-RUN apt-get install libpcre3 libpcre3-dev -y
-RUN apt-get install apache2 -y && a2enmod proxy && a2enmod proxy_http \
-    && a2enmod proxy_balancer && a2enmod dav
+RUN apt-get install --no-install-recommends libpcre3 libpcre3-dev -y && rm -rf /var/lib/apt/lists/*;
+RUN apt-get install --no-install-recommends apache2 -y && a2enmod proxy && a2enmod proxy_http \
+    && a2enmod proxy_balancer && a2enmod dav && rm -rf /var/lib/apt/lists/*;
 
 #Build and install boost
 RUN wget https://boostorg.jfrog.io/artifactory/main/release/${BOOST_VERSION}/source/${BOOST_FILENAME}.tar.gz \
@@ -171,16 +171,16 @@ RUN mkdir -p dependencies/pcre/${PCRE_VERSION}/ \
     && wget https://ftp.exim.org/pub/pcre/pcre-${PCRE_VERSION}.tar.gz --no-check-certificate \
     && tar -xvf pcre-${PCRE_VERSION}.tar.gz \
     && cd pcre-${PCRE_VERSION} \
-    && ./configure --prefix=/dependencies/pcre/${PCRE_VERSION} --enable-jit \
+    && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/dependencies/pcre/${PCRE_VERSION} --enable-jit \
     && make && make install \
     && cd .. && rm -rf ${PCRE_VERSION}.tar.gz && rm -rf pcre-${PCRE_VERSION}
 
 # install nginx
-RUN wget http://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz \
+RUN wget https://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz \
     && tar -xvf nginx-${NGINX_VERSION}.tar.gz -C /build-dependencies \
     && rm -rf nginx-${NGINX_VERSION}.tar.gz
 
-RUN apt-get install nginx -y
+RUN apt-get install --no-install-recommends nginx -y && rm -rf /var/lib/apt/lists/*;
 
 # Build Webserver Module
 COPY . /otel-webserver-module
@@ -199,7 +199,7 @@ RUN cd /otel-webserver-module/build \
     && echo 'Include opentelemetry_module.conf' >> /etc/apache2/apache2.conf \
     && cd /opt/opentelemetry-webserver-sdk \
     && ./install.sh \
-    && cd /
+    && cd / && rm opentelemetry-webserver-sdk-x64-linux.tgz
 
 RUN cd /otel-webserver-module/build \
     && cp ../conf/nginx/opentelemetry_module.conf /opt/ \