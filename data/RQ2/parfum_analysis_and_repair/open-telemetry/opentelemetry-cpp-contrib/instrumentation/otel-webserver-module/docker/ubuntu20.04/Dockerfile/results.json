{
  "startTime": 1674249449299,
  "endTime": 1674249451126,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 144,
        "lineEnd": 144,
        "columnStart": 7,
        "columnEnd": 91
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 147,
        "lineEnd": 147,
        "columnStart": 7,
        "columnEnd": 91
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 178,
        "lineEnd": 178,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 88,
        "lineEnd": 88,
        "columnStart": 7,
        "columnEnd": 110
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 98,
        "lineEnd": 98,
        "columnStart": 7,
        "columnEnd": 114
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 108,
        "lineEnd": 108,
        "columnStart": 7,
        "columnEnd": 193
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 119,
        "lineEnd": 119,
        "columnStart": 7,
        "columnEnd": 208
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 173,
        "lineEnd": 173,
        "columnStart": 7,
        "columnEnd": 75
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 139,
        "lineEnd": 139,
        "columnStart": 7,
        "columnEnd": 40
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 142,
        "lineEnd": 142,
        "columnStart": 7,
        "columnEnd": 49
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 145,
        "lineEnd": 145,
        "columnStart": 7,
        "columnEnd": 34
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 148,
        "lineEnd": 148,
        "columnStart": 7,
        "columnEnd": 34
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 193,
        "lineEnd": 193,
        "columnStart": 7,
        "columnEnd": 56
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 9
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 20,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 156,
        "lineEnd": 156,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 157,
        "lineEnd": 157,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 182,
        "lineEnd": 182,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 4,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 9
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 20,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 156,
        "lineEnd": 156,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 157,
        "lineEnd": 157,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 182,
        "lineEnd": 182,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 9
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 20,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 156,
        "lineEnd": 156,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 157,
        "lineEnd": 157,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 182,
        "lineEnd": 182,
        "columnStart": 4,
        "columnEnd": 28
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 4,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 9
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 20,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 156,
        "lineEnd": 156,
        "columnStart": 4,
        "columnEnd": 68
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 157,
        "lineEnd": 157,
        "columnStart": 4,
        "columnEnd": 54
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 182,
        "lineEnd": 182,
        "columnStart": 4,
        "columnEnd": 52
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:20.04\nENV DEBIAN_FRONTEND noninteractive\n\nRUN apt-get -y update && apt-get -y upgrade && apt-get -y dist-upgrade\nRUN apt-get install --no-install-recommends -qq -y --ignore-missing \\\n\tbuild-essential \\\n\tcurl \\\n\tgit \\\n\tmake \\\n\tpkg-config \\\n\tprotobuf-compiler \\\n\tlibprotobuf-dev \\\n\tpython \\\n\tsudo \\\n\ttar \\\n\tzip \\\n\tunzip \\\n\twget \\\n    cmake && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get install --no-install-recommends -y \\\n    lcov \\\n    m4 \\\n    autoconf \\\n    automake \\\n    libtool \\\n    default-jre && rm -rf /var/lib/apt/lists/*;\n\n# The following arguments would be passed from docker-compose.yml\nARG GRPC_VERSION=\"1.36.4\"\nARG OPENTELEMETRY_VERSION=\"1.2.0\"\nARG BOOST_VERSION=\"1.75.0\"\nARG BOOST_FILENAME=\"boost_1_75_0\"\nARG APR_VERSION=\"1.7.0\"\nARG EXPAT_VERSION=\"2.3.0\"\nARG EXPAT_RVERSION=\"R_2_3_0\"\nARG APRUTIL_VERSION=\"1.6.1\"\nARG LOG4CXX_VERSION=\"0.11.0\"\nARG GTEST_VERSION=\"1.10.0\"\nARG PCRE_VERSION=\"8.44\"\nARG NGINX_VERSION=\"1.18.0\"\n\n# Install GRPC\nRUN git clone --shallow-submodules --depth 1 --recurse-submodules -b v${GRPC_VERSION} \\\n  https://github.com/grpc/grpc \\\n  && cd grpc \\\n  && mkdir -p cmake/build \\\n  && cd cmake/build \\\n  && cmake \\\n    -DgRPC_INSTALL=ON \\\n    -DgRPC_BUILD_TESTS=OFF \\\n    -DCMAKE_BUILD_TYPE=Release \\\n    -DgRPC_BUILD_GRPC_NODE_PLUGIN=OFF \\\n    -DgRPC_BUILD_GRPC_OBJECTIVE_C_PLUGIN=OFF \\\n    -DgRPC_BUILD_GRPC_PHP_PLUGIN=OFF \\\n    -DgRPC_BUILD_GRPC_PHP_PLUGIN=OFF \\\n    -DgRPC_BUILD_GRPC_PYTHON_PLUGIN=OFF \\\n    -DgRPC_BUILD_GRPC_RUBY_PLUGIN=OFF \\\n    ../.. \\\n  && make -j2 \\\n  && make install \\\n  && cd ../../..\n\n# install opentelemetry\nRUN mkdir -p dependencies/opentelemetry/${OPENTELEMETRY_VERSION}/lib \\\n    && mkdir -p dependencies/opentelemetry/${OPENTELEMETRY_VERSION}/include \\\n    && git clone https://github.com/open-telemetry/opentelemetry-cpp \\\n    && cd opentelemetry-cpp/ \\\n    && git checkout tags/v${OPENTELEMETRY_VERSION} -b v${OPENTELEMETRY_VERSION} \\\n    && git submodule update --init --recursive \\\n    && mkdir build \\\n    && cd build \\\n    && cmake .. -DCMAKE_POSITION_INDEPENDENT_CODE=ON -DBUILD_TESTING=OFF -DBUILD_SHARED_LIBS=ON -DWITH_OTLP=ON -DCMAKE_INSTALL_PREFIX=/dependencies/opentelemetry/${OPENTELEMETRY_VERSION} \\\n    && cmake --build . --target all \\\n    && cd .. \\\n    && find . -name \"*.so\" -type f -exec cp {} /dependencies/opentelemetry/${OPENTELEMETRY_VERSION}/lib/ \\; \\\n    && cp build/libopentelemetry_proto.a /dependencies/opentelemetry/${OPENTELEMETRY_VERSION}/lib \\\n    && cp -r api/include/ /dependencies/opentelemetry/${OPENTELEMETRY_VERSION}/ \\\n    && for dir in exporters/*; do if [ -d \"$dir\" ]; then cp -rf \"$dir/include\" /dependencies/opentelemetry/${OPENTELEMETRY_VERSION}/; fi; done \\\n    && cp -r sdk/include/ /dependencies/opentelemetry/${OPENTELEMETRY_VERSION}/ \\\n    && cp -r build/generated/third_party/opentelemetry-proto/opentelemetry/proto/ /dependencies/opentelemetry/${OPENTELEMETRY_VERSION}/include/opentelemetry/ \\\n    && cd .. && rm -rf opentelemetry-cpp\n\n#install Apr\nRUN mkdir -p dependencies/apr/${APR_VERSION} \\\n    && wget https://dlcdn.apache.org//apr/apr-${APR_VERSION}.tar.gz --no-check-certificate \\\n    && tar -xf apr-${APR_VERSION}.tar.gz \\\n    && cd apr-${APR_VERSION} \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/dependencies/apr/${APR_VERSION} --enable-static=yes --enable-shared=no --with-pic && echo $? \\\n    && make -j 6 \\\n    && make install \\\n    && cd ../ && rm -rf apr-${APR_VERSION} && rm -rf apr-${APR_VERSION}.tar.gz\n\n# install libexpat\nRUN mkdir -p dependencies/expat/${EXPAT_VERSION} \\\n    && wget https://github.com/libexpat/libexpat/releases/download/${EXPAT_RVERSION}/expat-${EXPAT_VERSION}.tar.gz --no-check-certificate \\\n    && tar -xf expat-${EXPAT_VERSION}.tar.gz \\\n    && cd expat-${EXPAT_VERSION} \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/dependencies/expat/${EXPAT_VERSION} --enable-static=yes --enable-shared=no --with-pic && echo $? \\\n    && make -j 6 \\\n    && make install \\\n    && cd ../ && rm -rf expat-${EXPAT_VERSION} && rm -rf expat-${EXPAT_VERSION}.tar.gz\n\n# install Apr-util\nRUN mkdir -p dependencies/apr-util/${APRUTIL_VERSION} \\\n    && wget https://dlcdn.apache.org//apr/apr-util-${APRUTIL_VERSION}.tar.gz --no-check-certificate \\\n    && tar -xf apr-util-${APRUTIL_VERSION}.tar.gz \\\n    && cd apr-util-${APRUTIL_VERSION} \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/dependencies/apr-util/${APRUTIL_VERSION} --enable-static=yes --enable-shared=no --with-pic --with-apr=/dependencies/apr/1.7.0 --with-expat=/dependencies/expat/2.3.0 && echo $? \\\n    && make -j 6 \\\n    && make install \\\n    && cd ../ && rm -rf apr-util-${APRUTIL_VERSION} && rm -rf apr-util-${APRUTIL_VERSION}.tar.gz\n\n\n#install log4cxx\nRUN mkdir -p dependencies/apache-log4cxx/${LOG4CXX_VERSION} \\\n    && wget https://archive.apache.org/dist/logging/log4cxx/${LOG4CXX_VERSION}/apache-log4cxx-${LOG4CXX_VERSION}.tar.gz --no-check-certificate \\\n    && tar -xf apache-log4cxx-${LOG4CXX_VERSION}.tar.gz \\\n    && cd apache-log4cxx-${LOG4CXX_VERSION} \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/dependencies/apache-log4cxx/${LOG4CXX_VERSION}/ --enable-static=yes --enable-shared=no --with-pic --with-apr=/dependencies/apr/1.7.0/ --with-apr-util=/dependencies/apr-util/1.6.1/ && echo $? \\\n    && make -j 6; echo 0 \\\n    && automake --add-missing \\\n    && make install \\\n    && cd .. && rm -rf apache-log4cxx-${LOG4CXX_VERSION}.tar.gz && rm -rf apache-log4cxx-${LOG4CXX_VERSION}\n\n# install googletest\nRUN mkdir -p dependencies/googletest/${GTEST_VERSION}/ \\\n    && wget https://github.com/google/googletest/archive/refs/tags/release-${GTEST_VERSION}.tar.gz --no-check-certificate \\\n    && tar -xf release-${GTEST_VERSION}.tar.gz \\\n    && cd googletest-release-${GTEST_VERSION}/  \\\n    && mkdir build && cd build \\\n    && cmake .. -DCMAKE_INSTALL_PREFIX=/dependencies/googletest/${GTEST_VERSION}/ \\\n    && make \\\n    && make install \\\n    && cd ../.. && rm -rf release-${GTEST_VERSION}.tar.gz && rm -rf googletest-release-${GTEST_VERSION}/\n\n#Installing Apache and apr source code\nRUN mkdir build-dependencies \\\n    && wget --no-check-certificate https://archive.apache.org/dist/apr/apr-${APR_VERSION}.tar.gz \\\n    && tar -xf apr-${APR_VERSION}.tar.gz \\\n    && mv -f apr-${APR_VERSION} build-dependencies \\\n    && wget --no-check-certificate https://archive.apache.org/dist/apr/apr-util-${APRUTIL_VERSION}.tar.gz \\\n    && tar -xf apr-util-${APRUTIL_VERSION}.tar.gz \\\n    && mv -f apr-util-${APRUTIL_VERSION} build-dependencies \\\n    && wget --no-check-certificate https://archive.apache.org/dist/httpd/httpd-2.2.31.tar.gz \\\n    && tar -xf httpd-2.2.31.tar.gz \\\n    && mv -f httpd-2.2.31 build-dependencies \\\n    && wget --no-check-certificate https://archive.apache.org/dist/httpd/httpd-2.4.23.tar.gz \\\n    && tar -xf httpd-2.4.23.tar.gz \\\n    && mv -f httpd-2.4.23 build-dependencies && rm apr-${APR_VERSION}.tar.gz\n\nRUN rm -rf apr-util-${APRUTIL_VERSION} && rm -rf apr-util-${APRUTIL_VERSION}.tar.gz \\\n    && rm -rf httpd-2.4.23.tar.gz && rm -rf httpd-2.2.31.tar.gz \\\n    && rm -rf grpc \\\n    && rm -rf apr-${APR_VERSION} && rm -rf apr-${APR_VERSION}.tar.gz\n\nRUN apt-get install --no-install-recommends libpcre3 libpcre3-dev -y && rm -rf /var/lib/apt/lists/*;\nRUN apt-get install --no-install-recommends apache2 -y && a2enmod proxy && a2enmod proxy_http \\\n    && a2enmod proxy_balancer && a2enmod dav && rm -rf /var/lib/apt/lists/*;\n\n#Build and install boost\nRUN wget https://boostorg.jfrog.io/artifactory/main/release/${BOOST_VERSION}/source/${BOOST_FILENAME}.tar.gz \\\n    && tar -xvf ${BOOST_FILENAME}.tar.gz \\\n    && cd ${BOOST_FILENAME} \\\n    && ./bootstrap.sh --with-libraries=filesystem,system --prefix=/dependencies/boost/${BOOST_VERSION}/ \\\n    && ./b2 install define=BOOST_ERROR_CODE_HEADER_ONLY link=static threading=multi cxxflags=\"-fvisibility=hidden -fPIC\" cflags=\"-fvisibility=hidden -fPIC\" \\\n    && cd .. && rm -rf ${BOOST_FILENAME} && rm ${BOOST_FILENAME}.tar.gz\n\n# install pcre\nRUN mkdir -p dependencies/pcre/${PCRE_VERSION}/ \\\n    && wget https://ftp.exim.org/pub/pcre/pcre-${PCRE_VERSION}.tar.gz --no-check-certificate \\\n    && tar -xvf pcre-${PCRE_VERSION}.tar.gz \\\n    && cd pcre-${PCRE_VERSION} \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/dependencies/pcre/${PCRE_VERSION} --enable-jit \\\n    && make && make install \\\n    && cd .. && rm -rf ${PCRE_VERSION}.tar.gz && rm -rf pcre-${PCRE_VERSION}\n\n# install nginx\nRUN wget https://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz \\\n    && tar -xvf nginx-${NGINX_VERSION}.tar.gz -C /build-dependencies \\\n    && rm -rf nginx-${NGINX_VERSION}.tar.gz\n\nRUN apt-get install --no-install-recommends nginx -y && rm -rf /var/lib/apt/lists/*;\n\n# Build Webserver Module\nCOPY . /otel-webserver-module\n\nRUN cp -r /dependencies /otel-webserver-module/ \\\n    && cp -r /build-dependencies /otel-webserver-module/ \\\n    && cd otel-webserver-module \\\n    && ./gradlew assembleWebServerModule -DtargetSystem=ubuntu\n\nRUN cd /otel-webserver-module/build \\\n    && tar -xf opentelemetry-webserver-sdk-x64-linux.tgz \\\n    && mv -f opentelemetry-webserver-sdk /opt/ \\\n    && cd ../ \\\n    && cp opentelemetry_module.conf /etc/apache2/opentelemetry_module.conf \\\n    && sed -i \"s/libmod_apache_otel22.so/libmod_apache_otel.so/g\" /etc/apache2/opentelemetry_module.conf \\\n    && echo 'Include opentelemetry_module.conf' >> /etc/apache2/apache2.conf \\\n    && cd /opt/opentelemetry-webserver-sdk \\\n    && ./install.sh \\\n    && cd / && rm opentelemetry-webserver-sdk-x64-linux.tgz\n\nRUN cd /otel-webserver-module/build \\\n    && cp ../conf/nginx/opentelemetry_module.conf /opt/ \\\n    && sed -i '5i load_module /opt/opentelemetry-webserver-sdk/WebServerModule/Nginx/ngx_http_opentelemetry_module.so;' /etc/nginx/nginx.conf \\\n    && sed -i '64i include /opt/opentelemetry_module.conf;' /etc/nginx/nginx.conf \\ \n    && cd /opt/opentelemetry-webserver-sdk \\\n    && ./install.sh \\\n    && cd /\n"
}