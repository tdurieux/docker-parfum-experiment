{
  "startTime": 1674218253125,
  "endTime": 1674218253861,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 23,
        "columnEnd": 73
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# To build one auto-instrumentation image for Python, please:\n# - Ensure the packages are installed in the `/autoinstrumentation` directory. This is required as when instrumenting the pod,\n#   one init container will be created to copy all the content in `/autoinstrumentation` directory to your app's container. Then\n#   update the `PYTHONPATH` environment variable accordingly. To achieve this, you can mimic the one in `autoinstrumentation/python/Dockerfile`\n#   by using multi-stage builds. In the first stage, install all the required packages in one custom directory with `pip install --target`.\n#   Then in the second stage, copy the directory to `/autoinstrumentation`.\n# - Ensure you have `opentelemetry-distro` and `opentelemetry-instrumentation` or your customized alternatives installed.\n#   Those two packages are essential to Python auto-instrumentation.\n# - Grant the necessary access to `/autoinstrumentation` directory. `chmod -R go+r /autoinstrumentation`\n\nFROM python:3.10-alpine AS build\n\nWORKDIR /operator-build\n\nADD requirements.txt .\n\nRUN mkdir workspace && pip install --no-cache-dir --target workspace -r requirements.txt\n\nFROM busybox\n\nCOPY --from=build /operator-build/workspace /autoinstrumentation\n\nRUN chmod -R go+r /autoinstrumentation\n"
}