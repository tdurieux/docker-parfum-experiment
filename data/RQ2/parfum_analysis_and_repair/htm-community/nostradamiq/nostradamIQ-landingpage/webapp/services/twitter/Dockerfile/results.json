{
  "startTime": 1674215482028,
  "endTime": 1674215482783,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 2,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 2,
        "columnEnd": 43
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 2,
        "columnEnd": 38
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM redis:latest\n\nRUN apt-get -y update && \\\n  apt-get install --no-install-recommends -y python python-pip && \\\n  apt-get -y upgrade && rm -rf /var/lib/apt/lists/*;\n\nRUN pip install --no-cache-dir --upgrade pip\nADD * /twitter/\nRUN pip install --no-cache-dir -r /twitter/requirements.txt\n\n# Install pyner to bind to the NER server\nRUN git clone https://github.com/dat/pyner.git\nRUN \\\n  cd pyner && \\\n  python setup.py install && \\\n  cd ..\n\n# Install Java\nRUN \\\n  echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true | debconf-set-selections && \\\n  add-apt-repository -y ppa:webupd8team/java && \\\n  apt-get update && \\\n  apt-get install --no-install-recommends -y oracle-java8-installer && \\\n  rm -rf /var/lib/apt/lists/* && \\\n  rm -rf /var/cache/oracle-jdk8-installer\n\n\n# Define commonly used JAVA_HOME variable\nENV JAVA_HOME /usr/lib/jvm/java-8-oracle\n\n# Download the NER models http://nlp.stanford.edu/software/CRF-NER.shtml#Models\nRUN mkdir /classifiers && \\\n  cd /classifiers && \\\n\n\n# Run the NER server\nRUN \\\n  java -mx1000m -cp stanford-ner.jar edu.stanford.nlp.ie.NERServer \\\n  -loadClassifier classifiers/english.all.3class.distsim.crf.ser.gz -port 9191\n\n# Needed fo server.py\nEXPOSE 8088\nRUN redis-server &\n\nWORKDIR /twitter\n\n# Start the services\nCMD python server.py & \\\n  python twitter_docker.py &\n"
}