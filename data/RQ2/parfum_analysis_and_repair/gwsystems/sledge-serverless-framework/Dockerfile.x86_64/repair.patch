diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/gwsystems/sledge-serverless-framework/Dockerfile.x86_64 b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/gwsystems/sledge-serverless-framework/Dockerfile.x86_64/repaired.Dockerfile
index 35c4d3a..590d2ae 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/gwsystems/sledge-serverless-framework/Dockerfile.x86_64
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/gwsystems/sledge-serverless-framework/Dockerfile.x86_64/repaired.Dockerfile
@@ -14,7 +14,7 @@ SHELL ["/bin/bash", "-c"]
 RUN apt-get update && apt-get install -y --no-install-recommends \
 	apt-utils \
 	man-db \
-	&& yes | unminimize
+	&& yes | unminimize && rm -rf /var/lib/apt/lists/*;
 
 # General GCC C/C++ Build toolchain
 # pkg-config, libtool - used by PocketSphinx
@@ -27,7 +27,7 @@ RUN apt-get update && apt-get install -y --no-install-recommends \
 	git \
 	libtinfo5 \
 	libtool \
-	pkg-config
+	pkg-config && rm -rf /var/lib/apt/lists/*;
 
 # Needed to install from http endpoints via curl or wget
 RUN apt-get update && apt-get install -y --no-install-recommends \
@@ -37,7 +37,7 @@ RUN apt-get update && apt-get install -y --no-install-recommends \
 	lsb-release \
 	gpg-agent \
 	software-properties-common \
-	wget
+	wget && rm -rf /var/lib/apt/lists/*;
 
 # Test Script Stuff
 RUN apt-get update && apt-get install -y --no-install-recommends \
@@ -52,7 +52,7 @@ RUN apt-get update && apt-get install -y --no-install-recommends \
 	libz3-4 \
 	netpbm \
 	pango1.0-tools \
-	wamerican
+	wamerican && rm -rf /var/lib/apt/lists/*;
 
 # Hey is a load generator we have to recklessly download from the 'net, as it is only published to brew
 # Binaries are only provided for AMD64 though, so ARM will have to build from source
@@ -72,14 +72,14 @@ RUN apt-get update && apt-get install -y --no-install-recommends \
 	strace \
 	valgrind \
 	vim \
-	wabt
+	wabt && rm -rf /var/lib/apt/lists/*;
 
 ENV LLVM_VERSION=12
 ADD install_llvm.sh /sledge/install_llvm.sh
 RUN ./sledge/install_llvm.sh $LLVM_VERSION
 
 # WASI-SDK
-RUN curl -sS -L -O $WASI_SDK_URL && dpkg -i wasi-sdk_12.0_amd64.deb && rm -f wasi-sdk_12.0_amd64.deb
+RUN curl -f -sS -L -O $WASI_SDK_URL && dpkg -i wasi-sdk_12.0_amd64.deb && rm -f wasi-sdk_12.0_amd64.deb
 ENV WASI_SDK_PATH=/opt/wasi-sdk
 
 # Create non-root user and add to sudoers
@@ -88,7 +88,7 @@ ARG USER_UID=1000
 ARG USER_GID=$USER_UID
 RUN groupadd --gid $USER_GID $USERNAME
 RUN useradd --uid $USER_UID --gid $USER_GID -m $USERNAME
-RUN apt-get update && apt-get install -y sudo
+RUN apt-get update && apt-get install --no-install-recommends -y sudo && rm -rf /var/lib/apt/lists/*;
 RUN echo $USERNAME ALL=\(root\) NOPASSWD:ALL > /etc/sudoers.d/$USERNAME
 RUN chmod 0440 /etc/sudoers.d/$USERNAME