{
  "startTime": 1674219134390,
  "endTime": 1674219135478,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 83,
        "lineEnd": 85,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 95,
        "lineEnd": 95,
        "columnStart": 4,
        "columnEnd": 57
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 95,
        "lineEnd": 95,
        "columnStart": 4,
        "columnEnd": 57
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 9
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 95,
        "lineEnd": 95,
        "columnStart": 4,
        "columnEnd": 57
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 94,
        "lineEnd": 94,
        "columnStart": 4,
        "columnEnd": 81
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:20.04\nLABEL Description=\"CORE Docker Image\"\n\n# define variables\nARG DEBIAN_FRONTEND=noninteractive\nARG PREFIX=/usr/local\nARG BRANCH=master\nARG CORE_TARBALL=core.tar.gz\nARG OSPF_TARBALL=ospf.tar.gz\n\n# install system dependencies\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n    automake \\\n    bash \\\n    ca-certificates \\\n    ethtool \\\n    gawk \\\n    gcc \\\n    g++ \\\n    iproute2 \\\n    iputils-ping \\\n    libc-dev \\\n    libev-dev \\\n    libreadline-dev \\\n    libtool \\\n    libtk-img \\\n    make \\\n    nftables \\\n    python3 \\\n    python3-pip \\\n    python3-tk \\\n    pkg-config \\\n    systemctl \\\n    tk \\\n    wget \\\n    xauth \\\n    xterm \\\n    && apt-get clean && rm -rf /var/lib/apt/lists/*;\n# install python dependencies\nRUN python3 -m pip install \\\n    grpcio==1.27.2 \\\n    grpcio-tools==1.27.2 \\\n    poetry==1.1.7\n# retrieve, build, and install core\nRUN wget -q -O ${CORE_TARBALL} https://api.github.com/repos/coreemu/core/tarball/${BRANCH} && \\\n    tar xf ${CORE_TARBALL} && \\\n    cd coreemu-core* && \\\n    ./bootstrap.sh && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n    make -j $(nproc) && \\\n    make install && \\\n    cd daemon && \\\n    python3 -m poetry build -f wheel && \\\n    python3 -m pip install dist/* && \\\n    cp scripts/* ${PREFIX}/bin && \\\n    mkdir /etc/core && \\\n    cp -n data/core.conf /etc/core && \\\n    cp -n data/logging.conf /etc/core && \\\n    mkdir -p ${PREFIX}/share/core && \\\n    cp -r examples ${PREFIX}/share/core && \\\n    echo '\\\n[Unit]\\n\\\nDescription=Common Open Research Emulator Service\\n\\\nAfter=network.target\\n\\\n\\n\\\n[Service]\\n\\\nType=simple\\n\\\nExecStart=/usr/local/bin/core-daemon\\n\\\nTasksMax=infinity\\n\\\n\\n\\\n[Install]\\n\\\nWantedBy=multi-user.target\\\n' > /lib/systemd/system/core-daemon.service && \\\n    cd ../.. && \\\n    rm ${CORE_TARBALL} && \\\n    rm -rf coreemu-core*\n# retrieve, build, and install ospf mdr\nRUN wget -q -O ${OSPF_TARBALL} https://github.com/USNavalResearchLaboratory/ospf-mdr/tarball/master && \\\n    tar xf ${OSPF_TARBALL} && \\\n    cd USNavalResearchLaboratory-ospf-mdr* && \\\n    ./bootstrap.sh && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --disable-doc --enable-user=root --enable-group=root \\\n        --with-cflags=-ggdb --sysconfdir=/usr/local/etc/quagga --enable-vtysh \\\n        --localstatedir=/var/run/quagga && \\\n    make -j $(nproc) && \\\n    make install && \\\n    cd .. && \\\n    rm ${OSPF_TARBALL} && \\\n    rm -rf USNavalResearchLaboratory-ospf-mdr*\n# retrieve and install emane packages\nRUN wget -q https://adjacentlink.com/downloads/emane/emane-1.2.7-release-1.ubuntu-20_04.amd64.tar.gz && \\\n    tar xf emane*.tar.gz && \\\n    cd emane-1.2.7-release-1/debs/ubuntu-20_04/amd64 && \\\n    apt-get install --no-install-recommends -y ./emane*.deb ./python3-emane_*.deb && \\\n    cd ../../../.. && \\\n    rm emane-1.2.7-release-1.ubuntu-20_04.amd64.tar.gz && \\\n    rm -rf emane-1.2.7-release-1 && rm -rf /var/lib/apt/lists/*;\nCMD [\"systemctl\", \"start\", \"core-daemon\"]\n"
}