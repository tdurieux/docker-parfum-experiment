{
  "startTime": 1674253044037,
  "endTime": 1674253044518,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 9
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 9
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM --platform=${TARGETPLATFORM:-linux/amd64} ghcr.io/openfaas/of-watchdog:0.8.3 as watchdog\nFROM --platform=${TARGETPLATFORM:-linux/amd64} node:14-alpine as ship\n\nARG TARGETPLATFORM\nARG BUILDPLATFORM\n\nCOPY --from=watchdog /fwatchdog /usr/bin/fwatchdog\nRUN chmod +x /usr/bin/fwatchdog\n\nRUN apk --no-cache add curl ca-certificates \\\n    && addgroup -S app && adduser -S -g app app\n\n# Turn down the verbosity to default level.\nENV NPM_CONFIG_LOGLEVEL warn\n\nRUN chmod 777 /tmp\n\nUSER app\n\nRUN mkdir -p /home/app/function\n\n# Wrapper/boot-strapper\nWORKDIR /home/app\nCOPY package.json ./\n\n# This ordering means the npm installation is cached for the outer function handler.\nRUN npm i && npm cache clean --force;\n\n# Copy outer function handler\nCOPY index.js ./\n\n# COPY function node packages and install, adding this as a separate\n# entry allows caching of npm install\n\nWORKDIR /home/app/function\nCOPY function/*.json ./\n\nRUN npm i && npm cache clean --force;\n\n# COPY function files and folders\nCOPY function/ ./\n\n# Run any tests that may be available\nRUN npm test\n\n# Set correct permissions to use non root user\nWORKDIR /home/app/\n\nENV cgi_headers=\"true\"\nENV fprocess=\"node index.js\"\nENV mode=\"http\"\nENV upstream_url=\"http://127.0.0.1:3000\"\n\nENV exec_timeout=\"10s\"\nENV write_timeout=\"15s\"\nENV read_timeout=\"15s\"\n\nENV prefix_logs=\"false\"\n\nHEALTHCHECK --interval=3s CMD [ -e /tmp/.lock ] || exit 1\n\nCMD [\"fwatchdog\"]\n"
}