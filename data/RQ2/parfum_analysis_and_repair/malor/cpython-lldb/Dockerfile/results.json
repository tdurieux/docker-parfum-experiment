{
  "startTime": 1674253802939,
  "endTime": 1674253803715,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 22,
        "columnEnd": 61
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 8,
        "columnEnd": 56
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 8,
        "columnEnd": 56
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 22,
        "columnEnd": 61
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 8,
        "columnEnd": 56
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 8,
        "columnEnd": 80
      }
    }
  ],
  "repairedDockerfile": "ARG PY_VERSION=latest\nFROM python:${PY_VERSION}\n\nARG LLDB_VERSION=11\n\nRUN DEBIAN_VERSION=`awk -F\"[)(]+\" '/VERSION=/ {print $2}' /etc/os-release` && \\\n    wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \\\n    echo \"deb http://apt.llvm.org/${DEBIAN_VERSION}/ llvm-toolchain-${DEBIAN_VERSION}-${LLDB_VERSION} main\" >> /etc/apt/sources.list; \\\n    apt-get update && apt-get install --no-install-recommends -y lldb-${LLDB_VERSION} && \\\n    ln -s /usr/bin/lldb-${LLDB_VERSION} /usr/bin/lldb && rm -rf /var/lib/apt/lists/*;\n\nRUN if [ \"${LLDB_VERSION}\" = \"9\" ]; then \\\n        # The deb package is missing this symlink; lldb won't work w/o it\n        ln -s /usr/lib/llvm-9/bin/lldb-server-9 /usr/lib/llvm-9/bin/lldb-server-9.0.1; \\\n    fi && \\\n    if [ \"${LLDB_VERSION}\" != \"7\" ]; then \\\n        apt-get install --no-install-recommends -y python3-lldb-${LLDB_VERSION}; rm -rf /var/lib/apt/lists/*; \\\n    fi\n\nENV PYTHONPATH /usr/lib/llvm-${LLDB_VERSION}/lib/python3/dist-packages\n\nRUN python -m pip install poetry==1.1.8\n\nCOPY . /root/.lldb/cpython-lldb\nRUN cd /root/.lldb/cpython-lldb && \\\n    poetry version $(git describe --tags --abbrev=0) && \\\n    # a workaround for https://github.com/python-poetry/poetry/issues/4210 to make this work on Python 3.10\n    poetry config experimental.new-installer false && \\\n    poetry install && poetry build -n -f wheel && \\\n    mkdir -p ~/.lldb/cpython_lldb/site-packages && \\\n    python -m pip install --target ~/.lldb/cpython_lldb/site-packages dist/*.whl && rm -rf dist && \\\n    echo \"command script import ~/.lldb/cpython_lldb/site-packages/cpython_lldb.py\" >> /root/.lldbinit && \\\n    chmod +x /root/.lldbinit\n\nCMD [\"/usr/bin/lldb\"]\n"
}