{
  "startTime": 1674248416886,
  "endTime": 1674248417735,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 55
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 7,
        "columnStart": 7,
        "columnEnd": 28
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:bionic\nLABEL maintainer=\"rlane@lyft.com\"\n\nWORKDIR /srv/confidant\n\nRUN apt-get update \\\n    && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \\\n        curl ca-certificates \\\n    && /usr/bin/curl -sL --fail https://deb.nodesource.com/setup_8.x | bash - && rm -rf /var/lib/apt/lists/*;\nRUN apt-get update \\\n    && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \\\n        # For frontend\n        make nodejs git-core \\\n        # For backend\n        gcc pkg-config \\\n        python3.8-dev virtualenv \\\n        libffi-dev libxml2-dev libxmlsec1-dev \\\n    && apt-get clean && rm -rf /var/lib/apt/lists/*\n\nCOPY package.json /srv/confidant/\n\nRUN npm install grunt-cli && \\\n    npm install && npm cache clean --force;\n\nCOPY piptools_requirements.txt requirements.txt /srv/confidant/\n\nENV PATH=/venv/bin:$PATH\nRUN virtualenv /venv --python=/usr/bin/python3.8 && \\\n    pip install --no-cache-dir --no-cache -r piptools_requirements.txt && \\\n    pip install --no-cache-dir --no-cache -r requirements.txt\n\nCOPY .jshintrc Gruntfile.js /srv/confidant/\nCOPY confidant/public /srv/confidant/confidant/public\n\nRUN node_modules/grunt-cli/bin/grunt build\n\nCOPY . /srv/confidant\n\nEXPOSE 80\n\nCMD [\"gunicorn\", \"confidant.wsgi:app\", \"--workers=2\", \"-k\", \"gevent\", \"--access-logfile=-\", \"--error-logfile=-\"]\n"
}