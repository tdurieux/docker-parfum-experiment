diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/lyft/flytesnacks/cookbook/case_studies/ml_training/pima_diabetes/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/lyft/flytesnacks/cookbook/case_studies/ml_training/pima_diabetes/Dockerfile/repaired.Dockerfile
index 43f67a6..a1a275d 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/lyft/flytesnacks/cookbook/case_studies/ml_training/pima_diabetes/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/lyft/flytesnacks/cookbook/case_studies/ml_training/pima_diabetes/Dockerfile/repaired.Dockerfile
@@ -8,21 +8,21 @@ ENV PYTHONPATH /root
 
 RUN : \
     && apt-get update \
-    && apt install -y software-properties-common \
-    && add-apt-repository ppa:deadsnakes/ppa
+    && apt install --no-install-recommends -y software-properties-common \
+    && add-apt-repository ppa:deadsnakes/ppa && rm -rf /var/lib/apt/lists/*;
 
 RUN : \
     && apt-get update \
-    && apt-get install -y python3.8 python3-pip python3-venv make build-essential libssl-dev curl vim
+    && apt-get install --no-install-recommends -y python3.8 python3-pip python3-venv make build-essential libssl-dev curl vim && rm -rf /var/lib/apt/lists/*;
 
 # This is necessary for opencv to work
-RUN apt-get update && apt-get install -y libsm6 libxext6 libxrender-dev ffmpeg
+RUN apt-get update && apt-get install --no-install-recommends -y libsm6 libxext6 libxrender-dev ffmpeg && rm -rf /var/lib/apt/lists/*;
 
 # Install the AWS cli separately to prevent issues with boto being written over
-RUN pip3 install awscli
+RUN pip3 install --no-cache-dir awscli
 
 WORKDIR /opt
-RUN curl https://sdk.cloud.google.com > install.sh
+RUN curl -f https://sdk.cloud.google.com > install.sh
 RUN bash /opt/install.sh --install-dir=/opt
 ENV PATH $PATH:/opt/google-cloud-sdk/bin
 WORKDIR /root
@@ -34,7 +34,7 @@ ENV PATH="${VENV}/bin:$PATH"
 
 # Install Python dependencies
 COPY pima_diabetes/requirements.txt /root
-RUN ${VENV}/bin/pip install -r /root/requirements.txt
+RUN ${VENV}/bin/pip install --no-cache-dir -r /root/requirements.txt
 
 # Copy the makefile targets to expose on the container. This makes it easier to register.
 COPY in_container.mk /root/Makefile