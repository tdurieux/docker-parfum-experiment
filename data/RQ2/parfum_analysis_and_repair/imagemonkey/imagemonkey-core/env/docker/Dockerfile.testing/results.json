{
  "startTime": 1674220019081,
  "endTime": 1674220020323,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 5,
        "columnEnd": 63
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 89,
        "lineEnd": 89,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 90,
        "lineEnd": 90,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 91,
        "lineEnd": 91,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 5,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 5,
        "columnEnd": 39
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 5,
        "columnEnd": 39
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 5,
        "columnEnd": 173
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG DEBIAN_VERSION=buster\nARG POSTGRES_VERSION=14\n\nFROM golang:1.14.4-${DEBIAN_VERSION}\n\nARG DEBIAN_VERSION\nARG POSTGRES_VERSION\n\nARG CHROMEDRIVER_VERSION=90.0.4430.24\n\nRUN mkdir -p /home/go/bin\n#ENV GOPATH=/home/go\n#ENV GOBIN=/home/go/bin\n\nCOPY tests/ /tmp/tests\nCOPY src/commons /tmp/src/commons\nCOPY src/clients /tmp/src/clients\nCOPY src/ioutils /tmp/src/ioutils\nCOPY src/statworker.go /tmp/src/statworker.go\nCOPY src/data_processor.go /tmp/src/data_processor.go\nCOPY src/bot.go /tmp/src/bot.go\nCOPY src/labels_downloader.go /tmp/src/labels_downloader.go\nCOPY src/trendinglabelsworker.go /tmp/src/trendinglabelsworker.go\nCOPY src/make_labels_productive.go /tmp/src/make_labels_productive.go\nCOPY src/image /tmp/src/image\nCOPY src/languages /tmp/src/languages\nCOPY src/datastructures /tmp/src/datastructures\nCOPY src/go.mod /tmp/src/go.mod\nCOPY src/go.sum /tmp/src/go.sum\nCOPY src/datastructures /tmp/src/datastructures\n\nRUN true #docker workaround (https://github.com/moby/moby/issues/37965)\n\nCOPY src/populate_labels.go /tmp/src/populate_labels.go\nCOPY src/database /tmp/src/database\nCOPY src/image /tmp/src/image\n\nRUN true #docker workaround (https://github.com/moby/moby/issues/37965)\n\nCOPY src/parser /tmp/src/parser\nCOPY env/postgres /tmp/env/postgres\n\nCOPY src/webui/html/components /tmp/html/templates\nCOPY src/webui/js/components /tmp/js/\n\nRUN apt-get update \\\n  && apt-get install --no-install-recommends -y ca-certificates \\\n  && echo \"deb http://apt.postgresql.org/pub/repos/apt/ ${DEBIAN_VERSION}-pgdg main\" > /etc/apt/sources.list.d/pgdg.list \\\n  && curl -f -s https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add - \\\n  && apt-get update \\\n  && apt-get install -y --no-install-recommends python3 chromium postgresql-client-${POSTGRES_VERSION} python3-pip python3-setuptools python3-dev libffi-dev libssl-dev unzip \\\n  && curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y \\\n  && export PATH=$PATH:$HOME/.cargo/bin \\\n  && pip3 install --no-cache-dir selenium requests \\\n  && wget https://chromedriver.storage.googleapis.com/${CHROMEDRIVER_VERSION}/chromedriver_linux64.zip --directory-prefix=/tmp/ \\\n  && cd /tmp \\\n  && unzip /tmp/chromedriver_linux64.zip \\\n  && ls -la /tmp \\\n  && cp /tmp/chromedriver /tmp/tests/ui \\\n  && rm /tmp/chromedriver_linux64.zip && rm -rf /var/lib/apt/lists/*;\n\n# install cypress dependencies\nRUN apt-get update && \\\n  apt-get install --no-install-recommends -y \\\n  libgtk2.0-0 \\\n  libgtk-3-0 \\\n  libnotify-dev \\\n  libgconf-2-4 \\\n  libgbm-dev \\\n  libnss3 \\\n  libxss1 \\\n  libasound2 \\\n  libxtst6 \\\n  xauth \\\n  xvfb \\\n  nodejs \\\n  npm \\\n  # clean up\n  && rm -rf /var/lib/apt/lists/*\n\n# a few environment variables to make NPM installs easier\n# good colors for most applications\nENV TERM xterm\n# avoid million NPM install messages\nENV npm_config_loglevel warn\n# allow installing when the main user is root\nENV npm_config_unsafe_perm true\n\nRUN cd /tmp \\\n\t&& npm install cypress --save-dev \\\n\t&& npm install --save-dev cypress-file-upload \\\n\t&& npm install -D cypress-xpath && npm cache clean --force;\n\nRUN cd /tmp \\\n\t&& wget https://github.com/tsenart/vegeta/releases/download/v12.7.0/vegeta-12.7.0-linux-amd64.tar.gz --directory-prefix=/tmp/ \\\n\t&& tar xvf vegeta-12.7.0-linux-amd64.tar.gz \\\n\t&& cd /tmp/ \\\n\t&& rm -f /tmp/vegeta-12.7.0-linux-amd64.tar.gz \\\n\t&& rm -f /tmp/CHANGELOG \\\n\t&& rm -f /tmp/README.md \\\n\t&& rm -f /tmp/LICENSE \\\n\t&& mv /tmp/vegeta /usr/bin/vegeta\n\nRUN cd /tmp/tests && go get -u gopkg.in/resty.v1\nRUN cd /tmp/tests && go test -c -o test\t\n\nRUN cd /tmp/src/parser && go test -c -o parser_test && cp parser_test /tmp/tests/parser_test\nRUN cd /tmp/src/parser/v2 && go test -c -o parserv2_test && cp parserv2_test /tmp/tests/parserv2_test\n\nWORKDIR /tmp/tests/\n\nRUN wget https://raw.githubusercontent.com/vishnubob/wait-for-it/master/wait-for-it.sh --directory-prefix=/tmp/ \\\n\t&& chmod u+rx /tmp/wait-for-it.sh\n\nCOPY env/docker/run_all_tests.sh /tmp/tests/run_all_tests.sh\nCOPY env/docker/run_loadtests.sh /tmp/tests/run_loadtests.sh\nCOPY tests/stresstest/requests.txt /tmp/tests/loadtests.txt\n\nRUN chmod u+rx ./run_all_tests.sh\n\nENTRYPOINT [\"./run_all_tests.sh\"]\n"
}