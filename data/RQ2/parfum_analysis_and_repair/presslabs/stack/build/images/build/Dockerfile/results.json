{
  "startTime": 1674219149459,
  "endTime": 1674219151337,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 108,
        "lineEnd": 108,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 118,
        "lineEnd": 118,
        "columnStart": 7,
        "columnEnd": 172
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 127,
        "lineEnd": 127,
        "columnStart": 7,
        "columnEnd": 167
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 137,
        "lineEnd": 137,
        "columnStart": 7,
        "columnEnd": 135
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 145,
        "lineEnd": 145,
        "columnStart": 7,
        "columnEnd": 93
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 161,
        "lineEnd": 161,
        "columnStart": 7,
        "columnEnd": 183
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 172,
        "lineEnd": 172,
        "columnStart": 7,
        "columnEnd": 156
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 181,
        "lineEnd": 181,
        "columnStart": 7,
        "columnEnd": 103
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright 2016 The Upbound Authors. All rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nFROM google/cloud-sdk:357.0.0\n\nARG ARCH\n\nENV DEBIAN_FRONTEND noninteractive\n\nCOPY build-scripts /usr/local/build-scripts\n\nCOPY --from=docker/buildx-bin:0.6.1 /buildx /usr/libexec/docker/cli-plugins/docker-buildx\nRUN docker buildx version\n\n# ------------------------------------------------------------------------------------------------\n# install build and release tools\nRUN /usr/local/build-scripts/install-packages.sh \\\n        apt-transport-https \\\n        gettext \\\n        jq \\\n        lsb-release \\\n        make \\\n        rsync \\\n        runit \\\n        sudo \\\n        wget \\\n        zip\n# ------------------------------------------------------------------------------------------------\n# PHP\nRUN sh -c 'echo \"deb https://packages.sury.org/php/ $(lsb_release -sc) main\" > /etc/apt/sources.list.d/php.list' \\\n    && wget -O /etc/apt/trusted.gpg.d/php.gpg https://packages.sury.org/php/apt.gpg \\\n    && /usr/local/build-scripts/install-packages.sh \\\n        php7.4-bcmath \\\n        php7.4-curl \\\n        php7.4-cli \\\n        php7.4-fpm \\\n        php7.4-gd \\\n        php7.4-mbstring \\\n        php7.4-mysql \\\n        php7.4-opcache \\\n        php7.4-tidy \\\n        php7.4-xml \\\n        php7.4-xmlrpc \\\n        php7.4-xsl \\\n        php7.4-zip \\\n        php-apcu \\\n        php-apcu-bc \\\n        php-geoip \\\n        php-imagick \\\n        php-memcached \\\n        php-redis \\\n        php-sodium \\\n        php-yaml \\\n    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\n# ------------------------------------------------------------------------------------------------\n# git config\nRUN set -ex \\\n    && git config --global user.email \"bot@bitpoke.cloud\" \\\n    && git config --global user.name \"Bitpoke Bot\" \\\n    && git config --global diff.tar-filelist.binary true \\\n    && git config --global diff.tar-filelist.textconv 'tar -tvf' \\\n    && git config --global diff.tar.binary true \\\n    && git config --global diff.tar.textconv 'tar -xvOf'\n\n# ------------------------------------------------------------------------------------------------\n# Go support\nRUN GO_VERSION=1.16.7 && \\\n    GO_HASH=7fe7a73f55ba3e2285da36f8b085e5c0159e9564ef5f63ee0ed6b818ade8ef04 && \\\n    curl -fsSL https://golang.org/dl/go${GO_VERSION}.linux-amd64.tar.gz -o golang.tar.gz && \\\n    echo \"${GO_HASH}  golang.tar.gz\" | sha256sum -c - && \\\n    tar -C /usr/local -xzf golang.tar.gz && \\\n    rm golang.tar.gz\nENV GOPATH /workspace\nENV PATH /workspace/bin:/usr/local/go/bin:$PATH\n\n# precompile the go standard library for all supported platforms and configurations\n# the install suffixes match those in golang.mk so please keep them in sync\nRUN platforms=\"darwin_amd64 windows_amd64 linux_amd64 linux_arm64\" && \\\n    for p in $platforms; do CGO_ENABLED=0 GOOS=${p%_*} GOARCH=${p##*_} GOARM=7 go install -installsuffix static -a std; done\n\n# ------------------------------------------------------------------------------------------------\n# Node JS and chrome support\nRUN curl -fsSL https://deb.nodesource.com/setup_14.x | bash - && \\\n    curl -fsSL https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - && \\\n    echo \"deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main\" > /etc/apt/sources.list.d/google.list && \\\n    /usr/local/build-scripts/install-packages.sh \\\n        nodejs \\\n        google-chrome-stable \\\n        xvfb && \\\n    rm -f /etc/apt/sources.list.d/google.list && \\\n    ln -fs /usr/local/bin/xvfb-chrome /usr/bin/google-chrome && \\\n    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\nENV CHROME_BIN /usr/bin/google-chrome\n\n# ------------------------------------------------------------------------------------------------\n# Yarn\nRUN curl -f -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add - && \\\n    echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | sudo tee /etc/apt/sources.list.d/yarn.list && \\\n    /usr/local/build-scripts/install-packages.sh \\\n        yarn && \\\n    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\n# ------------------------------------------------------------------------------------------------\n# rclone\nRUN set -ex \\\n    && export RCLONE_VERSION=1.56.0 \\\n    && curl -f -sL -o rclone-v${RCLONE_VERSION}-linux-amd64.deb https://github.com/rclone/rclone/releases/download/v${RCLONE_VERSION}/rclone-v${RCLONE_VERSION}-linux-amd64.deb \\\n    && dpkg -i rclone-v${RCLONE_VERSION}-linux-amd64.deb \\\n    && rm rclone-v${RCLONE_VERSION}-linux-amd64.deb \\\n    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\n# ------------------------------------------------------------------------------------------------\n# dockerize\nRUN set -ex \\\n    && export DOCKERIZE_VERSION=\"2.1.0\" \\\n    && curl -f -sL -o dockerize.tar.gz \"https://github.com/presslabs/dockerize/releases/download/v${DOCKERIZE_VERSION}/dockerize-linux-amd64-v${DOCKERIZE_VERSION}.tar.gz\" \\\n    && tar -C /usr/local/bin -xzvf dockerize.tar.gz \\\n    && rm dockerize.tar.gz \\\n    && chmod 0755 /usr/local/bin/dockerize \\\n    && chown root:root /usr/local/bin/dockerize\n\n# ------------------------------------------------------------------------------------------------\n# sops\nRUN set -ex \\\n    && export SOPS_VERSION=\"3.7.1\" \\\n    && curl -f -sL -o /usr/local/bin/sops \"https://github.com/mozilla/sops/releases/download/v${SOPS_VERSION}/sops-v${SOPS_VERSION}.linux\" \\\n    && chmod 0755 /usr/local/bin/sops \\\n    && chown root:root /usr/local/bin/sops\n\n# ------------------------------------------------------------------------------------------------\n# helm\nRUN set -ex \\\n    && export HELM_VERSION=\"3.6.3\" \\\n    && curl -f -sL -o helm.tar.gz \"https://get.helm.sh/helm-v${HELM_VERSION}-linux-amd64.tar.gz\" \\\n    && tar -C /usr/local/bin -xzvf helm.tar.gz --strip-components 1 linux-amd64/helm \\\n    && rm helm.tar.gz \\\n    && chmod 0755 /usr/local/bin/helm \\\n    && chown root:root /usr/local/bin/helm\n\n# ------------------------------------------------------------------------------------------------\n# helm secrets plugin\nRUN set -ex \\\n    && export HELM_SECRETS_VERSION=\"3.8.3\" \\\n    && helm plugin install https://github.com/jkroepke/helm-secrets --version ${HELM_SECRETS_VERSION}\n\n# ------------------------------------------------------------------------------------------------\n# kustomize\nRUN set -ex \\\n    && export KUSTOMIZE_VERSION=\"4.2.0\" \\\n    && curl -f -sL -o kustomize.tar.gz \"https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize/v${KUSTOMIZE_VERSION}/kustomize_v${KUSTOMIZE_VERSION}_linux_amd64.tar.gz\" \\\n    && tar -C /usr/local/bin -xzvf kustomize.tar.gz \\\n    && rm kustomize.tar.gz \\\n    && chmod 0755 /usr/local/bin/kustomize \\\n    && chown root:root /usr/local/bin/kustomize\n\n# ------------------------------------------------------------------------------------------------\n# docker-compose\n\nRUN set -ex \\\n    && export DOCKER_COMPOSE_VERSION=\"1.29.2\" \\\n    && curl -f -sL -o /usr/local/bin/docker-compose \"https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-Linux-x86_64\" \\\n    && chmod +x /usr/local/bin/docker-compose \\\n    && chown root:root /usr/local/bin/docker\n\n# ------------------------------------------------------------------------------------------------\n# Run tini as PID 1 and avoid signal handling issues\n\nRUN set -ex \\\n    && export TINI_VERSION=v0.19.0 \\\n    && curl -f -sL -o /tini https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini-${ARCH} \\\n    && chmod +x /tini\n\nCOPY root /\n\nENTRYPOINT [ \"/tini\", \"-g\", \"--\", \"/build/run.sh\" ]\n"
}