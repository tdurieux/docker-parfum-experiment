diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/alisw/docks/slc6-builder/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/alisw/docks/slc6-builder/Dockerfile/repaired.Dockerfile
index 84172ba..63a0af5 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/alisw/docks/slc6-builder/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/alisw/docks/slc6-builder/Dockerfile/repaired.Dockerfile
@@ -21,29 +21,29 @@ RUN \
       libyaml-devel libffi-devel iconv-devel environment-modules tk-devel                   \
       realpath                                                                           && \
   yum install -y git --enablerepo=rpmforge-extras                                        && \
-  yum clean all                                                                          && \
-  pip install bernhard
+  yum clean all && \
+  pip install --no-cache-dir bernhard && rm -rf /var/cache/yum
 
-RUN curl -L https://releases.hashicorp.com/vault/0.5.0/vault_0.5.0_linux_amd64.zip -o vault.zip && \
+RUN curl -f -L https://releases.hashicorp.com/vault/0.5.0/vault_0.5.0_linux_amd64.zip -o vault.zip && \
     unzip vault.zip && mv ./vault /usr/bin/vault && rm -f vault.zip
 
 ENV CCTOOLS_VER 6.2.9
-RUN curl http://ccl.cse.nd.edu/software/files/cctools-$CCTOOLS_VER-x86_64-redhat6.tar.gz |  \
-    tar -C / --strip-components=1 -xzf - &&                                                 \
+RUN curl -f https://ccl.cse.nd.edu/software/files/cctools-$CCTOOLS_VER-x86_64-redhat6.tar.gz | \
+    tar -C / --strip-components=1 -xzf - && \
     ldconfig
 
 # Install CVMFS
-RUN curl -L http://cvmrepo.web.cern.ch/cvmrepo/yum/RPM-GPG-KEY-CernVM > /etc/pki/rpm-gpg/RPM-GPG-KEY-CernVM && \
-    curl -L http://cvmrepo.web.cern.ch/cvmrepo/yum/cernvm.repo > /etc/yum.repos.d/cernvm.repo && \
-    rpm --rebuilddb && yum install -y cvmfs
+RUN curl -f -L https://cvmrepo.web.cern.ch/cvmrepo/yum/RPM-GPG-KEY-CernVM > /etc/pki/rpm-gpg/RPM-GPG-KEY-CernVM && \
+    curl -f -L https://cvmrepo.web.cern.ch/cvmrepo/yum/cernvm.repo > /etc/yum.repos.d/cernvm.repo && \
+    rpm --rebuilddb && yum install -y cvmfs && rm -rf /var/cache/yum
 
 # Install XRootD
-RUN curl -L http://xrootd.org/binaries/xrootd-stable-slc6.repo > /etc/yum.repos.d/xrootd.repo && \
-    rpm --rebuilddb && yum install -y xrootd-client
+RUN curl -f -L https://xrootd.org/binaries/xrootd-stable-slc6.repo > /etc/yum.repos.d/xrootd.repo && \
+    rpm --rebuilddb && yum install -y xrootd-client && rm -rf /var/cache/yum
 
 # Install EOS
 COPY eos.repo /etc/yum.repos.d/eos.repo
-RUN rpm --rebuilddb && yum install -y eos-client
+RUN rpm --rebuilddb && yum install -y eos-client && rm -rf /var/cache/yum
 
 # Parrot configuration
 ENV PARROT_ALLOW_SWITCHING_CVMFS_REPOSITORIES=yes \
@@ -53,20 +53,20 @@ ENV PARROT_ALLOW_SWITCHING_CVMFS_REPOSITORIES=yes \
 
 # Install Python 2.7
 RUN mkdir -p /tmp/py                                                    && \
-    cd /tmp/py                                                          && \
-    curl -LO https://www.python.org/ftp/python/2.7.15/Python-2.7.15.tgz && \
-    tar xzf Python*.tgz                                                 && \
-    cd Python-2.7.15                                                    && \
-    ./configure --prefix=/usr/local                                     && \
-    make -j 16                                                          && \
-    make install                                                        && \
-    curl -LO curl -LO https://bootstrap.pypa.io/get-pip.py              && \
-    /usr/local/bin/python get-pip.py                                    && \
-    cd /                                                                && \
-    rm -rf /tmp/py
+    cd /tmp/py && \
+    curl -f -LO https://www.python.org/ftp/python/2.7.15/Python-2.7.15.tgz && \
+    tar xzf Python*.tgz && \
+    cd Python-2.7.15 && \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/usr/local && \
+    make -j 16 && \
+    make install && \
+    curl -f -LO curl -LO https://bootstrap.pypa.io/get-pip.py && \
+    /usr/local/bin/python get-pip.py && \
+    cd / && \
+    rm -rf /tmp/py && rm Python*.tgz
 
 # Install Python extras possibly needed
-RUN which pip && pip install requests
+RUN which pip && pip install --no-cache-dir requests
 
 COPY entrypoint.sh /usr/local/bin
 ENTRYPOINT [ "/usr/local/bin/entrypoint.sh" ]