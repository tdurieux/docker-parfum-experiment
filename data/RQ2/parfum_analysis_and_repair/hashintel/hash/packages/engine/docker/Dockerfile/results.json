{
  "startTime": 1674251986992,
  "endTime": 1674251987801,
  "originalSmells": [
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 42
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM fedora:37 as builder\n\n## Install the dependencies\nRUN yum install gcc openssl-devel cmake -y && rm -rf /var/cache/yum\n\n## Install rustup\n# Setting `pipefail` to ensure `curl` will also exit docker build\nSHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\nRUN curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain none --profile minimal\nENV PATH $PATH:/root/.cargo/bin\n\n## Copy the source files to the user's home directory\nWORKDIR /usr/src\nCOPY . .\n\n## Build the project\nRUN cargo build -p cli -p hash_engine --release --all-features\n\n## Add a non-root user\n# Make the user and root configurable\nARG USER_UID=1000\nARG USER_GID=$USER_UID\nRUN groupadd --gid $USER_GID hash\nRUN useradd  \\\n    --uid $USER_UID  \\\n    --gid $USER_GID  \\\n    --no-create-home  \\\n    --shell /sbin/nologin  \\\n    hash\n\n\nFROM fedora:37\n\nCOPY --from=builder /etc/passwd /etc/passwd\nCOPY --from=builder /etc/group /etc/group\n\nCOPY --from=builder --chown=hash /usr/src/target/release/cli /opt/engine/\nCOPY --from=builder --chown=hash /usr/src/target/release/hash_engine /opt/engine/\n\n# TODO: Maybe an easier/more robust way?\nCOPY --from=builder --chown=hash /usr/src/lib/execution/src/runner/javascript/*.js /opt/engine/lib/execution/src/runner/javascript/\nCOPY --from=builder --chown=hash /usr/src/lib/execution/src/runner/python/*.py /opt/engine/lib/execution/src/runner/python/\nCOPY --from=builder --chown=hash /usr/src/lib/execution/src/package/simulation /opt/engine/lib/execution/src/package/simulation\n\nENV ENGINE_PATH /opt/engine/hash_engine\n\nUSER hash\nWORKDIR /opt/engine\nENTRYPOINT [\"/opt/engine/cli\"]\nCMD [\"help\"]\n"
}