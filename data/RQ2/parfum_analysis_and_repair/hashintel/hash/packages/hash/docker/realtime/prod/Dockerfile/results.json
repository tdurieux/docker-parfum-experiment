{
  "startTime": 1674252123469,
  "endTime": 1674252124274,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 81
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:16.16.0-alpine AS builder\n\nWORKDIR /app\n\n# Ensure that the node module layer can be cached\nCOPY package.json .\nCOPY yarn.lock .\nRUN yarn install --frozen-lockfile --production --ignore-scripts --prefer-offline && yarn cache clean;\n\n# Also ensure that api node modules can be cached\nCOPY packages/hash/backend-utils/package.json packages/hash/backend-utils/\nCOPY packages/hash/realtime/package.json packages/hash/realtime/\nRUN yarn workspace @hashintel/hash-realtime install --frozen-lockfile --ignore-scripts --prefer-offline\n\nCOPY tsconfig.base.json .\n\nCOPY packages/hash/backend-utils packages/hash/backend-utils\nCOPY packages/hash/realtime packages/hash/realtime\n\n#########################################################################################\n\nFROM node:16.16.0-alpine\n\nCOPY --from=builder /app /app\n\nWORKDIR /app\n\n# Run as a non-root user\nRUN addgroup -S appgroup && adduser -S appuser -G appgroup\n\nUSER root\nRUN chown appuser:appgroup /app\n\nUSER appuser\nENV NODE_ENV production\n\nCMD [\"yarn\", \"workspace\",\"@hashintel/hash-realtime\", \"start\"]\n\n"
}