{
  "startTime": 1674256166028,
  "endTime": 1674256166862,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 8,
        "columnEnd": 32
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 8,
        "columnEnd": 64
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 56,
        "lineEnd": 61,
        "columnStart": 8,
        "columnEnd": 48
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 23,
        "columnEnd": 76
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 35,
        "columnStart": 8,
        "columnEnd": 17
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 35,
        "columnStart": 8,
        "columnEnd": 17
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG NGX_VER=stable\nFROM nginx:${NGX_VER} as base\nARG CHANGE_SOURCE=false\nARG NGX_VER=stable\nARG LIB_SODIUM_VER=1.0.18-RELEASE\n\nWORKDIR /usr/local/src\nCOPY . ./ngx_waf\n\nSHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\nRUN set -xe \\ \n    &&  if [ ${CHANGE_SOURCE} == true ] ; then \\\n            cp ./ngx_waf/docker/sources.list /etc/apt/sources.list ; \\\n            apt-get clean all ; \\\n        fi \\\n    &&  apt-get update --yes \\\n    && apt-get install --no-install-recommends --yes build-essential \\\n            git \\\n            wget \\\n            make \\\n            gcc \\\n            zlib1g-dev \\\n            libpcre3 \\\n            libpcre3-dev \\\n            libssl-dev \\\n            libxslt1-dev \\\n            libxml2-dev \\\n            libgeoip-dev \\\n            libgd-dev \\\n            libperl-dev \\\n            python3 \\\n            python3-pip \\\n            libmaxminddb0 \\\n            libmaxminddb-dev \\\n            flex \\\n            bison \\\n    && if [ ${CHANGE_SOURCE} == true ] ; then \\\n            pip3 config set global.index-url https://mirrors.cloud.tencent.com/pypi/simple ; \\\n        fi \\\n    && pip3 install --no-cache-dir lastversion && rm -rf /var/lib/apt/lists/*;\nRUN set -xe \\\n    &&  (cd ngx_waf && git clone https://github.com/libinjection/libinjection.git inc/libinjection) \\\n    &&  (cd ngx_waf && make parser) \\\n    &&  git clone https://github.com/troydhanson/uthash.git \\\n    &&  export LIB_UTHASH=/usr/local/src/uthash \\\n    &&  git clone https://github.com/jedisct1/libsodium.git --branch ${LIB_SODIUM_VER} libsodium-src \\\n    &&  cd libsodium-src \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/local/src/libsodium --with-pic \\\n    && make -j$(nproc) && make check -j$(nproc) && make install \\\n    && export LIB_SODIUM=/usr/local/src/libsodium \\\n    && cd .. \\\n    # &&  lastversion --download=\"openssl.tar.gz\" --at=github openssl \\\n    # &&  mkdir openssl && tar -zxf \"openssl.tar.gz\" -C openssl --strip-components=1 \\\n    && lastversion --download=\"nginx.tar.gz\" --major ${NGX_VER} https://nginx.org \\\n    && mkdir nginx && tar -zxf \"nginx.tar.gz\" -C nginx --strip-components=1 \\\n    && cd nginx \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n        --with-debug \\\n        # --with-openssl=/usr/local/src/openssl \\\n        --add-dynamic-module=/usr/local/src/ngx_waf \\\n        --with-compat \\\n        --with-cc-opt='-fstack-protector-strong' \\\n    && make modules -j$(nproc) && rm \"nginx.tar.gz\"\n\n\nFROM busybox:stable-glibc\nSHELL [\"/bin/sh\", \"-o\", \"pipefail\", \"-c\"]\nCOPY --from=base /usr/local/src/nginx/objs/ngx_http_waf_module.so /modules/ngx_http_waf_module.so\nCOPY ./assets /assets\n"
}