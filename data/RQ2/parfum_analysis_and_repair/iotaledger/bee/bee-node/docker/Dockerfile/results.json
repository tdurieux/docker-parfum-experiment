{
  "startTime": 1674254382639,
  "endTime": 1674254383190,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 34
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "############################\n# Build\n############################\nFROM rust:1-buster as build\n\nARG WITH_DASHBOARD=false\n\nLABEL org.label-schema.description=\"Bee node software to connect to the IOTA and Shimmer networks.\"\nLABEL org.label-schema.name=\"iotaledger/bee\"\nLABEL org.label-schema.schema-version=\"1.0\"\nLABEL org.label-schema.vcs-url=\"https://github.com/iotaledger/bee\"\nLABEL org.label-schema.usage=\"https://github.com/iotaledger/bee/blob/production/documentation/docs/getting_started/docker.md\"\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends cmake clang -y && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /bee\nCOPY . .\n\nRUN if [ \"$WITH_DASHBOARD\" = true ] ; then cargo build --profile production --features dashboard --bin bee ; else cargo build --profile production --bin bee ; fi\n\n############################\n# Image\n############################\n# https://console.cloud.google.com/gcr/images/distroless/global/cc-debian11\n# using distroless cc \"nonroot\" image, which includes everything in the base image (glibc, libssl and openssl)\nFROM gcr.io/distroless/cc-debian11:nonroot\n\n# API\nEXPOSE 14265/tcp\n# Gossip\nEXPOSE 15600/tcp\n# MQTT\nEXPOSE 1883/tcp\n# Dashboard\nEXPOSE 8081/tcp\n# Autopeering\nEXPOSE 14626/udp\n\nCOPY --chown=nonroot:nonroot --from=build /bee/target/production/bee /app/bee\n\n# Copy the profiles\nCOPY --from=build /bee/bee-node/config.chrysalis-devnet.toml /app/.\nCOPY --from=build /bee/bee-node/config.chrysalis-mainnet.toml /app/.\n\nCOPY --from=build /bee/bee-node/config.chrysalis-devnet.json /app/.\nCOPY --from=build /bee/bee-node/config.chrysalis-mainnet.json /app/.\n\nUSER nonroot\n\nWORKDIR /app\n\nENTRYPOINT [\"/app/bee\"]\n\nCMD [\"--config\", \"config.chrysalis-mainnet.json\"]\n"
}