{
  "startTime": 1674254769892,
  "endTime": 1674254771355,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:16-alpine3.14 AS build\n\n## Include the build tools for any npm packages that rebuild\nRUN apk --no-cache add git curl python3 build-base cmake\n\n# Working DIR\nWORKDIR /usr/src/app\n\n# Copy everything from current Folder\nCOPY . ./\n\n# Set the env variables\nARG CONFIG_ID\n\n# Install all packages necessary for compilation, build, then remove the devDependencies\nRUN npm install && npm cache clean --force;\nRUN npm run build-compile\nRUN npm run build-config\nRUN npm prune --production\n\n# Expose the external port for binding to\nEXPOSE 4000\n\n# Increase security by running as node user instead of root\nUSER node\n\n# Serve the prod build from the dist folder\nCMD [\"node\", \"dist/index\"]\n"
}