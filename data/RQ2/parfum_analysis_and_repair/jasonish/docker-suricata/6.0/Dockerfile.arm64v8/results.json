{
  "startTime": 1674253564202,
  "endTime": 1674253565454,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 2,
        "columnEnd": 71
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 1,
        "columnEnd": 84
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 53,
        "lineEnd": 63,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 1,
        "columnEnd": 36
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 2,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 77,
        "lineEnd": 98,
        "columnStart": 4,
        "columnEnd": 12
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM arm64v8/alpine:latest AS builder\n\nRUN apk add --no-cache \\\n        automake \\\n        autoconf \\\n        cargo \\\n        cbindgen \\\n        curl \\\n        elfutils-dev \\\n        file-dev \\\n        gcc \\\n        git \\\n        hiredis-dev \\\n        jansson-dev \\\n        libpcap-dev \\\n        libelf \\\n        libbpf-dev \\\n        libmaxminddb-dev \\\n        libnet-dev \\\n        libnetfilter_queue-dev \\\n        libnetfilter_log-dev \\\n        libtool \\\n        linux-headers \\\n        libcap-ng-dev \\\n        make \\\n        musl-dev \\\n        nss-dev \\\n        pcre-dev \\\n        python3 \\\n        py3-yaml \\\n        rust \\\n        yaml-dev \\\n        zlib-dev\n\nARG VERSION\n\nWORKDIR /src\n\nRUN if [ \"${VERSION}\" = \"master\" ]; then \\\n\tgit clone https://github.com/OISF/suricata.git suricata-${VERSION}; \\\n\tgit clone https://github.com/OISF/libhtp.git suricata-${VERSION}/libhtp; \\\n        ( cd suricata-${VERSION}/suricata-update && \\\n\t\tcurl -f -L https://github.com/OISF/suricata-update/archive/master.tar.gz | tar zxf - --strip-components=1) \\\n\t(cd suricata-${VERSION} && ./autogen.sh); \\\nelse \\\n\tcurl -f -OL https://www.openinfosecfoundation.org/download/suricata-${VERSION}.tar.gz; \\\n\ttar zxf suricata-${VERSION}.tar.gz; rm suricata-${VERSION}.tar.gz \\\nfi\n\nWORKDIR /src/suricata-${VERSION}\n\nARG CONFIGURE_ARGS\n\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n        --prefix=/usr \\\n        --sysconfdir=/etc \\\n        --localstatedir=/var \\\n        --disable-shared \\\n        --disable-gccmarch-native \\\n        --enable-ebpf \\\n        --enable-nfqueue \\\n        --enable-hiredis \\\n        --enable-geoip \\\n\t${CONFIGURE_ARGS}\n\nARG CORES=2\n\nRUN make -j \"${CORES}\"\n\nRUN make install install-conf DESTDIR=/fakeroot\n\n# Something about the Docker mounts won't let us copy /var/run in the\n# next stage.\nRUN rm -rf /fakeroot/var\n\nFROM arm64v8/alpine:latest AS runner\n\nRUN apk add --no-cache \\\n        bash \\\n        hiredis \\\n        jansson \\\n        libcap \\\n        libcap-ng \\\n        libpcap \\\n        libelf \\\n        libbpf \\\n        libmaxminddb \\\n        libnet \\\n        libnetfilter_queue \\\n        libnetfilter_log \\\n        libmagic \\\n        logrotate \\\n        nss \\\n        pcre \\\n        py3-yaml \\\n        python3 \\\n        shadow \\\n        yaml \\\n        zlib && \\\n        find /etc/logrotate.d -type f -not -name suricata -delete\n\nCOPY --from=builder /fakeroot /\n\n# Create the directories that didn't get coped from the previous stage.\nRUN mkdir -p /var/log/suricata /var/run/suricata\n\nCOPY /update.yaml /etc/suricata/update.yaml\nCOPY /suricata.logrotate /etc/logrotate.d/suricata\n\nRUN suricata-update update-sources && \\\n        suricata-update enable-source oisf/trafficid && \\\n        suricata-update --no-test --no-reload && \\\n        /usr/bin/suricata -V\n\nRUN addgroup suricata && \\\n        adduser -S -G suricata suricata && \\\n        chown -R suricata:suricata /etc/suricata && \\\n        chown -R suricata:suricata /var/log/suricata && \\\n        chown -R suricata:suricata /var/lib/suricata && \\\n        chown -R suricata:suricata /var/run/suricata && \\\n        cp -a /etc/suricata /etc/suricata.dist && \\\n        chmod 600 /etc/logrotate.d/suricata\n\nVOLUME /var/log/suricata\nVOLUME /var/lib/suricata\nVOLUME /etc/suricata\n\nCOPY /docker-entrypoint.sh /\nENTRYPOINT [\"/docker-entrypoint.sh\"]\n"
}