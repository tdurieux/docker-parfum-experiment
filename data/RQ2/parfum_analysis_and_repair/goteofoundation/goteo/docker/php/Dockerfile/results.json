{
  "startTime": 1674220126899,
  "endTime": 1674220128313,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 95
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 95
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 95
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 119
      }
    }
  ],
  "repairedDockerfile": "####################################\n# Ubuntu Bionic PHP 7.4 / FPM image #\n####################################\n\nFROM ubuntu:22.04\nWORKDIR /application\nARG PHP_VERSION=7.4\n\n# Install basic packages\nRUN apt-get update\nRUN apt-get -y --no-install-recommends install apt-utils software-properties-common wget curl zip unzip mysql-client jq && rm -rf /var/lib/apt/lists/*;\n\n# Add Ondrej APT repository to have install several PHP versions\nRUN rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* /usr/share/doc/*\nRUN add-apt-repository ppa:ondrej/php\nRUN apt-key update\n\n# Install FPM\nRUN export DEBIAN_FRONTEND=noninteractive \\\n    && apt-get update \\\n    && apt-get -y --no-install-recommends install php${PHP_VERSION}-fpm php${PHP_VERSION}-zip php${PHP_VERSION}-xdebug \\\n    && apt-get -y --no-install-recommends install php${PHP_VERSION}-intl \\\n    && apt-get -y --no-install-recommends install php${PHP_VERSION}-mysql php${PHP_VERSION}-gd php${PHP_VERSION}-xml \\\n    && apt-get -y --no-install-recommends install php${PHP_VERSION}-curl php${PHP_VERSION}-dom php${PHP_VERSION}-json \\\n    && apt-get -y --no-install-recommends install php${PHP_VERSION}-memcached php${PHP_VERSION}-mbstring php${PHP_VERSION}-readline \\\n    && apt-get -y --no-install-recommends install nodejs npm build-essential ruby-dev rubygems-integration gosu \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* /usr/share/doc/*\n\n# Install Composer\nRUN php -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\"\nRUN php -r \"copy('https://composer.github.io/installer.sig', 'installer.sig');\"\nRUN php -r \"if (hash_file('sha384', 'composer-setup.php') === file_get_contents('installer.sig')) { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;\"\nRUN php composer-setup.php\nRUN php -r \"unlink('composer-setup.php');\"\nRUN mv composer.phar /usr/local/bin/composer\n\nRUN gem install sass -v 3.4.23\nRUN gem install compass\nRUN npm install -g grunt-cli@1.4.0 && npm cache clean --force;\n\n# PHP-FPM packages need a nudge to make them docker-friendly\nCOPY overrides.conf /etc/php/${PHP_VERSION}/fpm/pool.d/z-overrides.conf\n\n# PHP-FPM has really dirty logs, certainly not good for dockerising\n# The following startup script contains some magic to clean these up\nCOPY php-fpm-startup /usr/bin/php-fpm\n\n# Entrypoint to execute commands with the host user\nCOPY entrypoint.sh /usr/local/bin/entrypoint.sh\n\n# Open up fcgi port\nEXPOSE 9000\nEXPOSE 35729\n\nENTRYPOINT [\"/usr/local/bin/entrypoint.sh\"]\n\n# Will be overwritten by docker-compose.yml\nCMD /usr/bin/php-fpm\n"
}