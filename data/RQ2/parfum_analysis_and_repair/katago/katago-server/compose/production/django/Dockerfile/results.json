{
  "startTime": 1674246498796,
  "endTime": 1674246499598,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 7,
        "columnEnd": 53
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 7,
        "columnEnd": 41
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 7,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 7,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 7,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 7,
        "columnEnd": 32
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:20.10\n\nENV PYTHONUNBUFFERED 1\nENV DEBIAN_FRONTEND=noninteractive\n\n# Requirements are installed here to ensure they will be cached.\nCOPY ./requirements /requirements\n\nRUN apt update \\\n    # dependencies for building Python packages \\\n    && apt install --no-install-recommends -y python3 python3-dev python3-pip \\\n    # dependencies for building Python packages\n    && apt install --no-install-recommends -y build-essential git \\\n    # psycopg2 dependencies\n    && apt install --no-install-recommends -y libpq-dev \\\n    # MIME magic\n    && apt install --no-install-recommends -y libmagic-dev \\\n    # Translations dependencies\n    && apt install --no-install-recommends -y gettext \\\n    # Let DBshell works\n    && apt install --no-install-recommends -y postgresql \\\n    # Install Python deps\n    && pip install --no-cache-dir -r /requirements/production.txt \\\n    # cleaning up unused files\n    && apt autoremove -y build-essential python3-dev git \\\n    && apt purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false \\\n    && rm -rf /var/lib/apt/lists/*\n\nRUN update-alternatives --install /usr/bin/python python /usr/bin/python3 10\n\nRUN addgroup --gid 23460 django \\\n    && adduser --uid 23450 --ingroup django --disabled-password --gecos \"\" django\n\nCOPY --chown=django:django ./compose/production/django/entrypoint /entrypoint\nRUN sed -i 's/\\r$//g' /entrypoint\nRUN chmod +x /entrypoint\n\nCOPY --chown=django:django ./compose/production/django/start /start\nRUN sed -i 's/\\r$//g' /start\nRUN chmod +x /start\n\nCOPY --chown=django:django ./compose/production/django/celery/worker/start /start-celeryworker\nRUN sed -i 's/\\r$//g' /start-celeryworker\nRUN chmod +x /start-celeryworker\n\nCOPY --chown=django:django ./compose/production/django/celery/beat/start /start-celerybeat\nRUN sed -i 's/\\r$//g' /start-celerybeat\nRUN chmod +x /start-celerybeat\n\nCOPY ./compose/production/django/celery/flower/start /start-flower\nRUN sed -i 's/\\r$//g' /start-flower\nRUN chmod +x /start-flower\n\nRUN mkdir -p /data/games \\\n    && mkdir -p /data/training_npz \\\n    && mkdir -p /data/networks \\\n    && chown -R django /data\n\nCOPY ./.credentials /.credentials\n\nWORKDIR /app\n\n# staticfiles is for collectstatic in start script, for whitenoise static middleware\n# src is all the django python source that django will use\n# locale is for i18n\n\nRUN chown django:django /app \\\n    && mkdir -p /app/staticfiles \\\n    && chown django:django /app/staticfiles \\\n    && mkdir -p /app/locale \\\n    && chown django:django /app/locale \\\n    && mkdir -p /app/src \\\n    && chown django:django /app/src\n\nCOPY --chown=django:django locale  /app/locale\nCOPY --chown=django:django src  /app/src\nCOPY --chown=django:django manage.py  /app\n\nUSER django\nEXPOSE 5000\n\nENTRYPOINT [\"/entrypoint\"]\n"
}