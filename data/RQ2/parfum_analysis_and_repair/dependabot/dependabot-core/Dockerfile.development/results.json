{
  "startTime": 1674254504777,
  "endTime": 1674254505553,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 84
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 5,
        "columnEnd": 56
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM dependabot/dependabot-core\n\n# Temporarily switch to root user in order to install packages\nUSER root\nRUN apt-get update \\\n  && apt-get install --no-install-recommends -y vim strace ltrace gdb shellcheck \\\n  && rm -rf /var/lib/apt/lists/*\nUSER dependabot\n\nRUN git config --global user.name dependabot-ci \\\n  && git config --global user.email no-reply@github.com\nRUN curl -f -L -o ~/.vimrc https://github.com/hmarr/dotfiles/raw/main/vimrc-vanilla.vim && \\\n  echo 'export PS1=\"[dependabot-core-dev] \\w \\[$(tput setaf 4)\\]$ \\[$(tput sgr 0)\\]\"' >> ~/.bashrc\n\nARG CODE_DIR=${HOME}/dependabot-core\n\nCOPY --chown=dependabot:dependabot common/Gemfile common/dependabot-common.gemspec ${CODE_DIR}/common/\nCOPY --chown=dependabot:dependabot common/lib/dependabot/version.rb ${CODE_DIR}/common/lib/dependabot/\nWORKDIR ${CODE_DIR}\nRUN cd common \\\n  && bundle install\n\nCOPY --chown=dependabot:dependabot bundler/Gemfile bundler/dependabot-bundler.gemspec ${CODE_DIR}/bundler/\nCOPY --chown=dependabot:dependabot cargo/Gemfile cargo/dependabot-cargo.gemspec ${CODE_DIR}/cargo/\nCOPY --chown=dependabot:dependabot composer/Gemfile composer/dependabot-composer.gemspec ${CODE_DIR}/composer/\nCOPY --chown=dependabot:dependabot docker/Gemfile docker/dependabot-docker.gemspec ${CODE_DIR}/docker/\nCOPY --chown=dependabot:dependabot elm/Gemfile elm/dependabot-elm.gemspec ${CODE_DIR}/elm/\nCOPY --chown=dependabot:dependabot git_submodules/Gemfile git_submodules/dependabot-git_submodules.gemspec ${CODE_DIR}/git_submodules/\nCOPY --chown=dependabot:dependabot github_actions/Gemfile github_actions/dependabot-github_actions.gemspec ${CODE_DIR}/github_actions/\nCOPY --chown=dependabot:dependabot go_modules/Gemfile go_modules/dependabot-go_modules.gemspec ${CODE_DIR}/go_modules/\nCOPY --chown=dependabot:dependabot gradle/Gemfile gradle/dependabot-gradle.gemspec ${CODE_DIR}/gradle/\nCOPY --chown=dependabot:dependabot hex/Gemfile hex/dependabot-hex.gemspec ${CODE_DIR}/hex/\nCOPY --chown=dependabot:dependabot maven/Gemfile maven/dependabot-maven.gemspec ${CODE_DIR}/maven/\nCOPY --chown=dependabot:dependabot npm_and_yarn/Gemfile npm_and_yarn/dependabot-npm_and_yarn.gemspec ${CODE_DIR}/npm_and_yarn/\nCOPY --chown=dependabot:dependabot nuget/Gemfile nuget/dependabot-nuget.gemspec ${CODE_DIR}/nuget/\nCOPY --chown=dependabot:dependabot python/Gemfile python/dependabot-python.gemspec ${CODE_DIR}/python/\nCOPY --chown=dependabot:dependabot pub/Gemfile pub/dependabot-pub.gemspec ${CODE_DIR}/pub/\nCOPY --chown=dependabot:dependabot terraform/Gemfile terraform/dependabot-terraform.gemspec ${CODE_DIR}/terraform/\nRUN GREEN='\\033[0;32m'; NC='\\033[0m'; \\\n  for d in `find ${CODE_DIR} -type f -mindepth 2 -maxdepth 2 \\\n    -not -path \"${CODE_DIR}/common/Gemfile\" \\\n    -name 'Gemfile' | xargs dirname`; do \\\n    echo && \\\n    echo \"---------------------------------------------------------------------------\" && \\\n    echo \"Installing gems for ${GREEN}$(realpath --relative-to=${CODE_DIR} $d)${NC}...\" && \\\n    echo \"---------------------------------------------------------------------------\" && \\\n    cd $d && bundle install; \\\n  done\n\nCOPY --chown=dependabot:dependabot omnibus/Gemfile omnibus/dependabot-omnibus.gemspec ${CODE_DIR}/omnibus/\nRUN cd omnibus \\\n  && bundle install\n# Make omnibus gems available to bundler in root directory\nRUN echo 'eval_gemfile File.join(File.dirname(__FILE__), \"omnibus/Gemfile\")' > Gemfile\n\n# Create directory for volume containing VS Code extensions, to avoid reinstalling on image rebuilds\nRUN mkdir -p ~/.vscode-server ~/.vscode-server-insiders\n\n# Declare pass-thru environment variables used for debugging\nENV LOCAL_GITHUB_ACCESS_TOKEN=\"\" \\\n  LOCAL_CONFIG_VARIABLES=\"\"\n"
}