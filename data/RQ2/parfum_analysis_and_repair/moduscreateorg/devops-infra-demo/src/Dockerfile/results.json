{
  "startTime": 1674217207545,
  "endTime": 1674217208593,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 7,
        "columnEnd": 49
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Adapted from https://www.caktusgroup.com/blog/2017/03/14/production-ready-dockerfile-your-python-django-app/\n# which states:\n#\n#     Without further ado, hereâ€™s a production-ready Dockerfile you can use as a starting point for your project\n#\nFROM python:3.6-alpine\n\n# Copy in your requirements file\nADD requirements.txt /requirements.txt\n\n# Install build deps, then run `pip install`, then remove unneeded build deps all in a single step. Correct the path to your production requirements file, if needed.\nRUN set -ex \\\n    && apk add --no-cache --virtual .build-deps \\\n            gcc \\\n            make \\\n            libc-dev \\\n            musl-dev \\\n            linux-headers \\\n            pcre-dev \\\n            postgresql-dev \\\n    && pyvenv /venv \\\n    && /venv/bin/pip install -U pip \\\n    && LIBRARY_PATH=/lib:/usr/lib /bin/sh -c \"/venv/bin/pip install --no-cache-dir -r /requirements.txt\" \\\n    && runDeps=\"$( \\\n            scanelf --needed --nobanner --recursive /venv \\\n                    | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }' \\\n                    | sort -u \\\n                    | xargs -r apk info --installed \\\n                    | sort -u \\\n    )\" \\\n    && apk add --no-cache --virtual .python-rundeps $runDeps \\\n    && apk del .build-deps\n\n# Copy your application code to the container (make sure you create a .dockerignore file if any large files or directories should be excluded)\nRUN mkdir /code/\nWORKDIR /code/\nADD . /code/\n\n# uWSGI will listen on this port\nEXPOSE 8000\n\n# uWSGI configuration (customize as needed):\nENV UWSGI_VIRTUALENV=/venv UWSGI_WSGI_FILE=wsgi.py UWSGI_HTTP=:8000 UWSGI_MASTER=1 UWSGI_WORKERS=2 UWSGI_THREADS=8 UWSGI_UID=1000 UWSGI_GID=2000 UWSGI_LAZY_APPS=1 UWSGI_WSGI_ENV_BEHAVIOR=holy\n\n# Start uWSGI\nCMD [\"/venv/bin/uwsgi\", \"--http-auto-chunked\", \"--http-keepalive\"]\n"
}