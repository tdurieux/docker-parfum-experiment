{
  "startTime": 1674250054975,
  "endTime": 1674250056034,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 97
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 129
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Dockerfile to build an image with the local version of psiphon-tunnel-core.\n#\n# See README.md for usage instructions.\n\nFROM ubuntu:18.04\n\n# Install system-level dependencies.\nENV DEBIAN_FRONTEND=noninteractive\nRUN apt-get update -y && apt-get install -y --no-install-recommends \\\n    build-essential \\\n    ca-certificates \\\n    curl \\\n    git \\\n    openjdk-8-jdk \\\n    pkg-config \\\n    zip \\\n    unzip \\\n  && apt-get clean \\\n  && rm -rf /var/lib/apt/lists/*\n\n# Install Go.\nENV GOVERSION=go1.17.11 GOROOT=/usr/local/go GOPATH=/go PATH=$PATH:/usr/local/go/bin:/go/bin CGO_ENABLED=1\n\nRUN curl -f -L https://storage.googleapis.com/golang/$GOVERSION.linux-amd64.tar.gz -o /tmp/go.tar.gz \\\n  && tar -C /usr/local -xzf /tmp/go.tar.gz \\\n  && rm /tmp/go.tar.gz \\\n  && echo $GOVERSION > $GOROOT/VERSION\n\n# Setup Android environment and install build tools.\nENV ANDROID_PLATFORM_VERSION=30 ANDROID_NDK_VERSION=23.1.7779620\nENV ANDROID_SDK_ROOT=/android-sdk-root-linux\nENV ANDROID_HOME=$ANDROID_SDK_ROOT\nENV ANDROID_NDK_HOME=$ANDROID_SDK_ROOT/ndk/$ANDROID_NDK_VERSION\nRUN curl -f -L https://dl.google.com/android/repository/commandlinetools-linux-8092744_latest.zip -o /tmp/commandlinetools-linux.zip \\\n  && mkdir -p $ANDROID_SDK_ROOT \\\n  && cd $ANDROID_SDK_ROOT \\\n  && mkdir cmdline-tools \\\n  && cd cmdline-tools \\\n  && unzip /tmp/commandlinetools-linux.zip \\\n  && mv cmdline-tools latest \\\n  && yes | $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager --licenses \\\n  && $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager --install \"platforms;android-${ANDROID_PLATFORM_VERSION}\" \"ndk;${ANDROID_NDK_VERSION}\"\n\n# Install Pinned Gomobile.\n# The sed operation patches gomobile, editing a command that assumes modules\nENV GOMOBILE_PINNED_REV=ce6a79cf6a13dd77095a6f8dbee5f39848fa7da1\nRUN mkdir -p $GOPATH/pkg/gomobile/dl \\\n  && cd $GOPATH/pkg/gomobile/dl \\\n  && mkdir -p $GOPATH/src/golang.org/x \\\n  && cd $GOPATH/src/golang.org/x \\\n  && git clone https://github.com/golang/mobile \\\n  && cd mobile \\\n  && git checkout -b pinned $GOMOBILE_PINNED_REV \\\n  && mv ./cmd/gomobile/init.go ./cmd/gomobile/init.go.orig \\\n  && sed -e 's/golang.org\\/x\\/mobile\\/cmd\\/gobind@latest/golang.org\\/x\\/mobile\\/cmd\\/gobind/g' ./cmd/gomobile/init.go.orig > ./cmd/gomobile/init.go \\\n  && echo \"master: $(git rev-parse master)\\npinned: $(git rev-parse master)\" | tee $GOROOT/MOBILE \\\n  && export GO111MODULE=off \\\n  && go get golang.org/x/mod/modfile \\\n  && go get golang.org/x/tools/go/packages \\\n  && go install golang.org/x/mobile/cmd/gomobile \\\n  && gomobile init -v\n\nWORKDIR $GOPATH/src\n"
}