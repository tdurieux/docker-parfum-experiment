{
  "startTime": 1674246445530,
  "endTime": 1674246446503,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 86
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 86
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 86
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 44
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 86
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:latest as updated-ubuntu\n\nWORKDIR /root\n\nENV DEBIAN_FRONTEND=noninteractive\n\nRUN apt-get update && \\\n    apt-get upgrade --yes && \\\n    apt-get clean\n\nFROM updated-ubuntu as python-builder\n\n# Install python-build dependencies\nRUN apt-get install --no-install-recommends -y git-all make build-essential libssl-dev zlib1g-dev \\\n    libbz2-dev libreadline-dev libsqlite3-dev wget curl llvm \\\n    libncursesw5-dev xz-utils tk-dev libxml2-dev libxmlsec1-dev libffi-dev liblzma-dev && rm -rf /var/lib/apt/lists/*;\n\n# Install python-build\nRUN git clone https://github.com/pyenv/pyenv.git && \\\n    cd pyenv/plugins/python-build && \\\n    ./install.sh\n\n# Install python 2.7\nRUN /usr/local/bin/python-build 2.7.18 /usr/local/\n\nFROM updated-ubuntu as runner\n\n# Copy python 2.7 installation\nCOPY --from=python-builder /usr/local/ /usr/local/\n\n# Make Directories for Asiaq\nRUN mkdir -p /project/asiaq\nRUN mkdir -p /project/asiaq_config\n\n# Install Asiaq\n## Asiaq Dependencies\nRUN apt-get update && \\\n    apt-get install --no-install-recommends --yes rake rsync vim git && \\\n    apt-get clean && rm -rf /var/lib/apt/lists/*;\n\n## Copy over asiaq files\nWORKDIR /project/asiaq\nCOPY ./ /project/asiaq\n\n## Actually install asiaq\nRUN rake setup:develop\n\n# Copy over AWS configs that Asiaq needs\nCOPY ./jenkins/base_boto.cfg /root/.aws/config\nCOPY ./jenkins/base_boto.cfg /root/.boto\n\n# Set our working directory to be the config directory, which we will mount at runtime\nWORKDIR /project/asiaq_config\n"
}