{
  "startTime": 1674218529417,
  "endTime": 1674218530327,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 95
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 94
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 96
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 96
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 85
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG CUDA=\"10.0\"\nARG CUDNN=\"7\"\n\nFROM nvidia/cuda:${CUDA}-cudnn${CUDNN}-devel-ubuntu16.04\n\nRUN echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections\n\n# install basics\nRUN apt-get update -y \\\n && apt-get install --no-install-recommends -y apt-utils git curl ca-certificates bzip2 cmake tree htop bmon iotop g++-5 \\\n && apt-get install --no-install-recommends -y libglib2.0-0 libsm6 libxext6 libxrender-dev vim feh wget xterm && rm -rf /var/lib/apt/lists/*;\n\n# Install Miniconda\nRUN wget -O /miniconda.sh https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh \\\n && chmod +x /miniconda.sh \\\n && /miniconda.sh -b -p /miniconda \\\n && rm /miniconda.sh\n\nENV PATH=/miniconda/bin:$PATH\n\n# Create a Python 3.6 environment\nRUN /miniconda/bin/conda install -y conda-build \\\n && /miniconda/bin/conda create -y --name py36 python=3.6.7 \\\n && /miniconda/bin/conda clean -ya\n\nENV CONDA_DEFAULT_ENV=py36\nENV CONDA_PREFIX=/miniconda/envs/$CONDA_DEFAULT_ENV\nENV PATH=$CONDA_PREFIX/bin:$PATH\nENV CONDA_AUTO_UPDATE_CONDA=false\n\nRUN conda install -y ipython\nRUN pip install --no-cache-dir ninja yacs cython matplotlib opencv-python tqdm sklearn comet_ml shapely pandas\n\n# Install PyTorch 1.0 Nightly and OpenCV\nARG CUDA\nRUN conda install -y pytorch==1.1.0 cudatoolkit=${CUDA} -c pytorch \\\n && conda clean -ya\n\nRUN pip install --no-cache-dir https://download.pytorch.org/whl/cu100/torch-1.1.0-cp36-cp36m-linux_x86_64.whl\n# Install TorchVision master\nRUN git clone --single-branch --branch v0.2.2_branch https://github.com/pytorch/vision.git \\\n && cd vision \\\n && python setup.py install\n\n# install pycocotools\nRUN git clone https://github.com/cocodataset/cocoapi.git \\\n && cd cocoapi/PythonAPI && git checkout aca78bcd6b4345d25405a64fdba1120dfa5da1ab \\\n && python setup.py build_ext install\n\n# install apex\nRUN git clone https://github.com/NVIDIA/apex.git \\\n && cd apex && git checkout 4ff153cd50e4533b21dc1fd97c0ed609e19c4042 \\\n && python setup.py install --cuda_ext --cpp_ext\n\n# install PyTorch Detection\nARG FORCE_CUDA=\"1\"\nENV FORCE_CUDA=${FORCE_CUDA}\nRUN git clone https://github.com/facebookresearch/maskrcnn-benchmark.git \\\n && cd maskrcnn-benchmark && git checkout a44d65dcdb9c9098a25dd6b23ca3c36f1b887aba\\\n && python setup.py build develop\n\nWORKDIR /code\n"
}