{
  "startTime": 1674219316963,
  "endTime": 1674219318144,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 76
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 107
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 91,
        "lineEnd": 91,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 18,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 11
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 58,
        "columnEnd": 81
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 18,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 11
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 58,
        "columnEnd": 81
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 4,
        "columnEnd": 43
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 91,
        "lineEnd": 91,
        "columnStart": 20,
        "columnEnd": 36
      }
    }
  ],
  "repairedDockerfile": "FROM ruby:2.5.5\nLABEL maintainer=\"Refsheet.net Team <nerds@refsheet.net>\"\n\nWORKDIR /app\n\n# Environment\nENV RACK_ENV development\nENV RAILS_ENV development\nENV NODE_ENV development\nENV PORT 5000\n\nENV NODE_VERSION 10.17.0\nENV VIPS_VERSION 8.9.0\nENV BUNDLE_VERSION 2.0.1\n\n# Install System Deps\n\nRUN apt-get -o Acquire::Check-Valid-Until=false update && \\\n    apt-get install --no-install-recommends -y \\\n        build-essential \\\n        libssl-dev \\\n        libpq-dev \\\n        libxml2-dev \\\n        libxslt1-dev \\\n        libjpeg-dev \\\n        libpng-dev \\\n        libwebp-dev \\\n        curl \\\n        git && \\\n    gem install bundler -v $BUNDLE_VERSION && \\\n    gem install foreman && rm -rf /var/lib/apt/lists/*;\n\n\n# Install Node\n\nENV NVM_DIR /usr/local/nvm\nWORKDIR $NVM_DIR\n\nRUN curl -f -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.34.0/install.sh | bash && \\\n    . $NVM_DIR/nvm.sh && \\\n    nvm install $NODE_VERSION && \\\n    nvm alias default $NODE_VERSION && \\\n    nvm use default\n\nENV NODE_PATH $NVM_DIR/versions/node/v$NODE_VERSION/lib/node_modules\nENV PATH      $NVM_DIR/versions/node/v$NODE_VERSION/bin:$PATH\n\n\n# Install Vips\n\nWORKDIR /libvips\n\nRUN curl -f -L \"https://github.com/libvips/libvips/releases/download/v$VIPS_VERSION/vips-$VIPS_VERSION.tar.gz\" \\\n    | tar -xzC /libvips && \\\n    cd vips-$VIPS_VERSION && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n    make && \\\n    make install && \\\n    ldconfig && \\\n    cd /libvips && \\\n    rm -rf vips-*\n\n\n# Install Yarn\n\nRUN curl -f -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - && \\\n    echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list && \\\n    apt-get -o Acquire::Check-Valid-Until=false update && apt-get install --no-install-recommends -y yarn && rm -rf /var/lib/apt/lists/*;\n\n\n# Install Google Chrome\n\nRUN wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - && \\\n    sh -c 'echo \"deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main\" >> /etc/apt/sources.list.d/google.list' && \\\n    apt-get -o Acquire::Check-Valid-Until=false update && \\\n    apt-get install --no-install-recommends -y google-chrome-stable && rm -rf /var/lib/apt/lists/*;\n\n\n# Bundle\n\nWORKDIR /app\n\nCOPY Gemfile      /app/Gemfile\nCOPY Gemfile.lock /app/Gemfile.lock\n\nRUN bundle install\n\nCOPY package.json /app/package.json\nCOPY yarn.lock    /app/yarn.lock\nCOPY .yalc        /app/.yalc\n\nRUN yarn install && yarn cache clean;\n\n# Move App and Precompile\n\nCOPY . /app\n\n# Execute Order 66\n\nEXPOSE $PORT\n\nCMD bin/entrypoint.dev.sh foreman start --formation \"$FORMATION\" --env \"\"\n"
}