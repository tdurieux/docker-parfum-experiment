{
  "startTime": 1674256339422,
  "endTime": 1674256340323,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 26,
        "columnEnd": 58
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 26,
        "columnEnd": 58
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Base image\nFROM nginx\n# Install dependencies\nRUN apt-get update -qq && apt-get -y --no-install-recommends install apache2-utils && rm -rf /var/lib/apt/lists/*;\n# establish where Nginx should look for files\nARG rails_container\nARG port\nARG rails_port\n\nENV PORT $port\nENV RAILS_CONTAINER $rails_container\nENV RAILS_PORT $rails_port\nENV RAILS_ROOT /app\n# Set our working directory inside the image\nWORKDIR $RAILS_ROOT\n# create log directory\nRUN mkdir log\n# copy over static assets\nCOPY public public/\n# Copy Nginx config template\nCOPY .nginx/nginx.conf /tmp/docker.nginx\n# substitute variable references in the Nginx config template for real values from the environment\n# put the final config in its place\nRUN envsubst '$RAILS_ROOT:$RAILS_PORT:$PORT:$RAILS_CONTAINER' < /tmp/docker.nginx > /etc/nginx/conf.d/default.conf\nEXPOSE $port\n# Use the \"exec\" form of CMD so Nginx shuts down gracefully on SIGTERM (i.e. `docker stop`)\nCMD [ \"nginx\", \"-g\", \"daemon off;\" ]\n"
}