{
  "startTime": 1674218721699,
  "endTime": 1674218722126,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 18,
        "columnEnd": 41
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM golang:1.10-alpine as builder\n\nMAINTAINER foxzhong@tencent.com\nWORKDIR /go/src/component-update-tke-service\n\nCOPY ./ /go/src/component-update-tke-service\n\nRUN set -ex && \\\ngo build -v -o /go/bin/component-update-tke-service \\\n-gcflags '-N -l' \\\n./*.go\n\nFROM alpine\nRUN apk update && apk add --no-cache ca-certificates\n#RUN mkdir -p /root/src\n#WORKDIR /root/src\nCOPY --from=builder /go/bin/component-update-tke-service /usr/bin/\nCMD [\"component-update-tke-service\"]\n\nLABEL TencentHubComponent='{\\\n  \"description\": \"TencentHub 工作流组件, 更新TKE服务\",\\\n  \"input\": [\\\n    {\"name\": \"TENCENTCLOUD_SECRET_ID\", \"desc\": \"必填，在云API密钥管理上申请的标识身份的SecretId，一个SecretId对应唯一的SecretKey\"},\\\n    {\"name\": \"TENCENTCLOUD_SECRET_KEY\", \"desc\": \"必填，SecretId 对应的唯一SecretKey\"},\\\n    {\"name\": \"REGION\", \"desc\": \"必填, 区域参数，用来标识希望操作哪个区域的实例\"},\\\n    {\"name\": \"CLUSTER_ID\", \"desc\": \"必填, 服务所在的TKE 集群ID\"},\\\n    {\"name\": \"SERVICE_NAME\", \"desc\": \"必填, TKE 服务名\"},\\\n    {\"name\": \"CONTAINERS\", \"desc\": \"可选, 新镜像，如果服务中一个实例下有多个容器需要传入此参数，需要一个合法的json字符串, 格式例如 `{\\\"containerName1\\\": \\\"image1\\\", \\\"containerName2\\\": \\\"image2\\\"}`\"},\\\n    {\"name\": \"IMAGE\", \"desc\": \"可选, 新镜像，如果服务中一个实例下只有一个容器可以传此参数(image和containers二者必填一个)\"},\\\n    {\"name\": \"NAMESPACE\", \"desc\": \"可选, kubernetes 服务命名空间, 默认为default\"}\\\n  ],\\\n  \"output\": [\\\n  ]\\\n}'\n"
}