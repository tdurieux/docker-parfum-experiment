{
  "startTime": 1674256020120,
  "endTime": 1674256021159,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 8,
        "columnEnd": 76
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 8,
        "columnEnd": 155
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 8,
        "columnEnd": 140
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 69
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM quay.io/giantswarm/helm-chart-testing:v3.6.0 AS ct\n\nFROM quay.io/giantswarm/app-build-suite:0.2.3 AS abs\n\nFROM quay.io/giantswarm/golang:1.18.1-alpine3.15 AS golang\n\nFROM quay.io/giantswarm/conftest:v0.33.1 AS conftest\n\n# Build Image\nFROM quay.io/giantswarm/alpine:3.14.2\n\n# Copy go from golang image.\nCOPY --from=golang /usr/local/go /usr/local/go\n\n# Copy files needed for Helm Chart testing\nCOPY --from=ct /usr/local/bin/ct /usr/local/bin/ct\nCOPY --from=abs /abs/resources/ct_schemas/gs_metadata_chart_schema.yaml /etc/ct/chart_schema.yaml\nCOPY --from=ct /etc/ct/lintconf.yaml /etc/ct/lintconf.yaml\n\nCOPY --from=conftest /usr/local/bin/conftest /usr/local/bin/conftest\n\nENV GOPATH /go\nENV PATH $GOPATH/bin:/usr/local/go/bin:$PATH\n\nARG HELM_VERSION=v3.8.1\nARG KUBEBUILDER_VERSION=3.1.0\nARG GOLANGCI_LINT_VERSION=v1.46.0\nARG NANCY_VERSION=v1.0.37\nARG KUBEVAL_VERSION=v0.16.1\nARG CT_YAMALE_VER=3.0.6\nARG CT_YAMLLINT_VER=1.26.1\n\nRUN apk add --no-cache \\\n        bash \\\n        ca-certificates \\\n        curl \\\n        docker \\\n        git \\\n        py-pip \\\n        openssh-client \\\n        make \\\n        yq && \\\n        curl -f -SL https://get.helm.sh/helm-${HELM_VERSION}-linux-amd64.tar.gz | \\\n            tar -C /usr/bin --strip-components 1 -xvzf - linux-amd64/helm && \\\n        curl -sSfL -o /usr/local/kubebuilder https://github.com/kubernetes-sigs/kubebuilder/releases/download/v${KUBEBUILDER_VERSION}/kubebuilder_$(go env GOOS)_$(go env GOARCH) && \\\n        curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | \\\n            sh -s -- -b $GOPATH/bin ${GOLANGCI_LINT_VERSION} && \\\n        curl -f -sSL -o /usr/bin/nancy https://github.com/sonatype-nexus-community/nancy/releases/download/${NANCY_VERSION}/nancy-${NANCY_VERSION}-linux-amd64 && \\\n            chmod +x /usr/bin/nancy && \\\n        curl -f -sSL https://github.com/instrumenta/kubeval/releases/download/${KUBEVAL_VERSION}/kubeval-$(go env GOOS)-$(go env GOARCH).tar.gz | \\\n            tar -C /usr/bin -xvzf - kubeval\n\n# Setup ssh config for github.com\nRUN mkdir ~/.ssh &&\\\n    chmod 700 ~/.ssh &&\\\n    ssh-keyscan github.com >> ~/.ssh/known_hosts &&\\\n    printf \"Host github.com\\n IdentitiesOnly yes\\n IdentityFile ~/.ssh/id_rsa\\n\" >> ~/.ssh/config &&\\\n    chmod 600 ~/.ssh/*\n\nRUN pip install --no-cache-dir yamllint==${CT_YAMLLINT_VER} yamale==${CT_YAMALE_VER}\n\nADD ./architect /usr/bin/architect\nENTRYPOINT [\"/usr/bin/architect\"]\n"
}