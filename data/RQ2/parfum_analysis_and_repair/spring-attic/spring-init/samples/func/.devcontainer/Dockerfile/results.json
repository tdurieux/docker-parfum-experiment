{
  "startTime": 1674253679602,
  "endTime": 1674253680226,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 7,
        "columnEnd": 149
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 7,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 7,
        "columnEnd": 130
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 7,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 30,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 7,
        "columnEnd": 130
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 7,
        "columnEnd": 39
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 30,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 53
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 30,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 53
      }
    }
  ],
  "repairedDockerfile": "FROM springci/spring-graalvm-native:master-java8\n\nARG USER\nARG USER_ID\nARG USER_GID\nARG DOCKER_GID=130\n\nRUN (groupadd --gid \"${USER_GID}\" \"${USER}\" || echo \"No groupadd needed\") && \\\n    useradd \\\n      --uid ${USER_ID} \\\n      --gid ${USER_GID} \\\n      --create-home \\\n      --shell /bin/bash ${USER} && \\\n      groupadd --gid $DOCKER_GID docker && \\\n      usermod -aG docker $USER\n\n# Install Docker CE CLI\nRUN apt-get update -y \\\n    && apt-get --fix-broken --no-install-recommends -y install apt-transport-https ca-certificates curl gnupg-agent software-properties-common lsb-release \\\n    && curl -fsSL https://download.docker.com/linux/$(lsb_release -is | tr '[:upper:]' '[:lower:]')/gpg | apt-key add - 2>/dev/null \\\n    && add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/$(lsb_release -is | tr '[:upper:]' '[:lower:]') $(lsb_release -cs) stable\" \\\n    && apt-get update -y \\\n    && apt-get install --no-install-recommends -y docker-ce-cli \\\n    && curl -f -sSL \"https://github.com/docker/compose/releases/download/1.24.0/docker-compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-compose \\\n    && chmod +x /usr/local/bin/docker-compose \\\n    # Clean up\n    && apt-get autoremove -y \\\n    && apt-get clean -y && rm -rf /var/lib/apt/lists/*;\n\n# Install psrecord and ab\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \\\n    python-setuptools python-dev python-pip python-tk \\\n    && pip install --no-cache-dir wheel psrecord matplotlib \\\n    && curl -sf https://gobinaries.com/rakyll/hey | sh && rm -rf /var/lib/apt/lists/*;\n\nCOPY main.py /usr/local/lib/python2.7/dist-packages/psrecord/\n"
}