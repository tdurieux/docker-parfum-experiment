{
  "startTime": 1674250036790,
  "endTime": 1674250038099,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#**********************************************************************************************\n# Traffic Emulator for Network Services\n# Copyright 2020 VMware, Inc\n# The BSD-2 license (the \"License\") set forth below applies to all parts of\n# the Traffic Emulator for Network Services project. You may not use this file\n# except in compliance with the License.\n#\n# BSD-2 License\n#\n# Redistribution and use in source and binary forms, with or without modification,\n# are permitted provided that the following conditions are met:\n#\n# Redistributions of source code must retain the above copyright notice,\n# this list of conditions and the following disclaimer.\n#\n# Redistributions in binary form must reproduce the above copyright notice,\n# this list of conditions and the following disclaimer in the documentation\n# and/or other materials provided with the distribution.\n#\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY\n# EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n# OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n# IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n# OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY\n# OF SUCH DAMAGE\n#**********************************************************************************************\n\n# Stage 2 (Build final image)\nFROM ubuntu:16.04\nENV WORKDR=/opt/te/\nENV LC_ALL C.UTF-8\nENV LANG C.UTF-8\nENV IPADDRESS=127.0.0.1\nENV CTRL_IPADDRESS=127.0.0.1\nENV CTRL_FLASK_PORT=5000\nARG usr_lib_path=/usr/local/lib\nARG usr_lib64_path=/lib/x86_64-linux-gnu\n\n# basic library and pkg install\nRUN apt update && \\\n    apt install --no-install-recommends -y vim && \\\n    apt install --no-install-recommends -y python3 && \\\n    apt install --no-install-recommends -y python3-pip --reinstall && \\\n    apt install --no-install-recommends -y sshpass && \\\n    apt install --no-install-recommends -y logrotate && \\\n    apt install --no-install-recommends -y libffi-dev && \\\n    apt install --no-install-recommends -y cron && \\\n    apt install --no-install-recommends -y supervisor && rm -rf /var/lib/apt/lists/*;\n\n# python related requirements\nCOPY te/tedp_docker/requirements.txt /tmp/\nRUN pip3 install --no-cache-dir --upgrade \"pip < 21.0\"\nRUN pip3 install --no-cache-dir --requirement /tmp/requirements.txt\n\nCOPY te/open_source_licenses.tar.bz2 /\n\n# service file for te_stats_collector\nRUN echo \"[Unit] \\n\\\nDescription=stat collector service \\n\\\n[Service] \\n\\\nType=simple \\n\\\nRestart=always \\n\\\nRestartSec=1 \\n\\\nExecStart=/opt/te/bin/te_stats_collector /te_host/stat_collector_config.json  \\n\\\n\" > /etc/systemd/system/te_stats_collector.service\nRUN chmod 644 /etc/systemd/system/te_stats_collector.service\n\n# memory mount dir with appropriate perm for root to rotate logs\nRUN mkdir /tmp/ramcache && chmod -R 755 /tmp/ramcache\n\n# logrotate for csv of process in ramcache and log files in /tmp/\nRUN echo \"/tmp/ramcache/*.csv { \\n\\\nsu root root \\n\\\nsize 5M \\n\\\nrotate 5 \\n\\\ncompress \\n\\\ncopytruncate \\n\\\nmissingok \\n\\\n}\\n\\\n/tmp/*.log { \\n\\\nsu root root \\n\\\nsize 100M \\n\\\nrotate 5 \\n\\\ncompress \\n\\\ncopytruncate \\n\\\nmissingok \\n\\\n}\\n\" > /etc/logrotate.d/te-logs && chmod 0644 /etc/logrotate.d/te-logs\n\n# cron job every 2 mins -- logrotate\nRUN echo \"*/2 * * * * /usr/sbin/logrotate /etc/logrotate.d/te-logs\" > /etc/cron.d/cron_logrotate_te_logs && \\\n    chmod 0644 /etc/cron.d/cron_logrotate_te_logs && crontab /etc/cron.d/cron_logrotate_te_logs\n\n# stat collector queue size config - maximum of 1000 messages each of size 10K can be sent in a queue\nRUN echo \"kernel.msgmax = 10240 //Size of each message in bytes (10K)\" >> /etc/sysctl.conf && \\\n    echo \"kernel.msgmnb = 10485760 //Size of the queue (10M)\" >> /etc/sysctl.conf && \\\n    echo \"net.ipv4.tcp_tw_recycle = 1\" >> /etc/sysctl.conf && \\\n    echo \"net.ipv4.tcp_tw_reuse = 1\" >> /etc/sysctl.conf && \\\n    echo \"net.ipv4.ip_local_port_range = 2048 65535\" >> /etc/sysctl.conf && \\\n    echo \"fs.inotify.max_user_watches = 524288\" >> /etc/sysctl.conf\n\n# add python files\nADD te/TE_UTILS.py \\\n    te/TE_WORK.py \\\n    te/RQ_CONNECTOR.py \\\n    $WORKDR\n\n# copy binary and library from previous stage\nRUN mkdir -pv $WORKDR/bin\nCOPY --from=tedp_bin:v2.0 $WORKDR/bin $WORKDR/bin\nCOPY --from=tedp_bin:v2.0 $WORKDR/usr_lib64_deps.tar.gz ${usr_lib64_path}/usr_lib64_deps.tar.gz\nCOPY --from=tedp_bin:v2.0 $WORKDR/usr_lib_deps.tar.gz ${usr_lib_path}/usr_lib_deps.tar.gz\nCOPY --from=tedp_bin:v2.0 $WORKDR/lib64_deps.tar.gz ${lib64_path}/lib64_deps.tar.gz\nRUN tar -xvf ${usr_lib_path}/usr_lib_deps.tar.gz -C / && rm ${usr_lib_path}/usr_lib_deps.tar.gz && \\\n    tar -xvf ${usr_lib64_path}/usr_lib64_deps.tar.gz -C / && rm ${usr_lib64_path}/usr_lib64_deps.tar.gz && \\\n    tar -xvf ${lib64_path}/lib64_deps.tar.gz -C / && rm ${lib64_path}/lib64_deps.tar.gz && \\\n    ldconfig -v\n\n# add rq.service\nRUN echo \"[supervisord]\" >> /etc/supervisord.conf && \\\n    echo \"nodaemon=true\" >> /etc/supervisord.conf && \\\n    echo \"[program:RQ_CONNECTOR]\" >> /etc/supervisord.conf && \\\n    echo \"command=python3 /opt/te/RQ_CONNECTOR.py\" >> /etc/supervisord.conf\n\n# Add te/tedp_docker/clean_tedp.sh (used to clean tedp without ssh)\nADD te/tedp_docker/clean_tedp.sh $WORKDR/\n\n# copy src and makefile for debug purpose\nADD te_dp/src $WORKDR/src\nADD te_dp/Makefile $WORKDR\n\nRUN echo \"Done TE_DP Dockerization!!\"\n\nENTRYPOINT service cron restart && /usr/bin/supervisord\n"
}