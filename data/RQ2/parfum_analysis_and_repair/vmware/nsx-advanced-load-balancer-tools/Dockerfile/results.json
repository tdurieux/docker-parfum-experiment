{
  "startTime": 1674250608017,
  "endTime": 1674250609844,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 15,
        "columnEnd": 59
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 70
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 138,
        "lineEnd": 138,
        "columnStart": 15,
        "columnEnd": 138
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 142,
        "lineEnd": 142,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 148,
        "lineEnd": 148,
        "columnStart": 4,
        "columnEnd": 78
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 150,
        "lineEnd": 150,
        "columnStart": 4,
        "columnEnd": 146
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 154,
        "lineEnd": 154,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 160,
        "lineEnd": 161,
        "columnStart": 78,
        "columnEnd": 57
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 164,
        "lineEnd": 164,
        "columnStart": 4,
        "columnEnd": 94
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 58,
        "lineEnd": 95,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 96,
        "lineEnd": 96,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 99,
        "lineEnd": 124,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 142,
        "lineEnd": 142,
        "columnStart": 67,
        "columnEnd": 80
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 21,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 8
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 35,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 7
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 146,
        "lineEnd": 146,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 157,
        "lineEnd": 157,
        "columnStart": 22,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 162,
        "lineEnd": 162,
        "columnStart": 34,
        "columnEnd": 69
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 21,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 8
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 35,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 7
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 146,
        "lineEnd": 146,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 157,
        "lineEnd": 157,
        "columnStart": 22,
        "columnEnd": 48
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 162,
        "lineEnd": 162,
        "columnStart": 34,
        "columnEnd": 69
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:focal-20200925\n\nARG tf_version=\"0.14.5\"\nARG avi_sdk_version\nARG avi_version\n\nRUN echo \"export GOROOT=/usr/lib/go\" >> /etc/bash.bashrc && \\\n    echo \"export TF_PLUGIN_CACHE_DIR=$HOME/.terraform.d/plugin-cache\"  >> /etc/bash.bashrc && \\\n    echo \"export GOROOT=/usr/lib/go\" >> /etc/bash.bashrc && \\\n    echo \"export GOPATH=$HOME\" >> /etc/bash.bashrc && \\\n    echo \"export GOBIN=$HOME/bin\" >> /etc/bash.bashrc && \\\n    echo \"export ANSIBLE_FORCE_COLOR=True\" >> /etc/bash.bashrc && \\\n    export PATH=$PATH:/usr/lib/go/bin:$HOME/bin:/avi/scripts && \\\n    echo \"export PATH=$PATH:/usr/lib/go/bin:$HOME/bin:/avi/scripts\" >> /etc/bash.bashrc && \\\n    echo '\"\\e[A\":history-search-backward' >> /root/.inputrc && \\\n    echo '\"\\e[B\":history-search-forward' >> /root/.inputrc\n\nRUN apt-get update && \\\n    apt install --no-install-recommends -y software-properties-common && \\\n    add-apt-repository -y ppa:deadsnakes/ppa && \\\n    apt update && \\\n    apt install --no-install-recommends -y python3.8 \\\n    python3.8-dev \\\n    python3.8-distutils \\\n    python2.7 \\\n    python2.7-dev \\\n    curl && \\\n    cd /tmp && curl -f -O https://bootstrap.pypa.io/get-pip.py && \\\n    curl -f -o get-pip-27.py https://bootstrap.pypa.io/pip/2.7/get-pip.py && \\\n    python2.7 /tmp/get-pip-27.py && \\\n    python3.8 /tmp/get-pip.py && \\\n    ln -s /usr/bin/python2.7 /usr/bin/python && \\\n    rm -rf /usr/local/bin/pip && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y \\\n    apache2-utils \\\n    apt-transport-https \\\n    lsb-release \\\n    gnupg \\\n    dnsutils \\\n    git \\\n    httpie \\\n    inetutils-ping \\\n    iproute2 \\\n    libffi-dev \\\n    libssl-dev \\\n    lua5.3 \\\n    make \\\n    netcat \\\n    nmap \\\n    slowhttptest \\\n    sshpass \\\n    tree \\\n    unzip \\\n    jq \\\n    gcc \\\n    vim && \\\n    pip2 install --no-cache-dir -U appdirs \\\n    aws-google-auth \\\n    awscli \\\n    bigsuds \\\n    ConfigParser \\\n    ecdsa \\\n    f5-sdk \\\n    flask \\\n    jinja2 \\\n    jsondiff \\\n    kubernetes \\\n    netaddr \\\n    networkx \\\n    nose-html-reporting \\\n    nose-testconfig \\\n    openpyxl \\\n    openstacksdk \\\n    pandas \\\n    paramiko \\\n    pexpect \\\n    pyOpenssl \\\n    pyparsing \\\n    pytest-cov \\\n    pytest-xdist \\\n    pytest \\\n    pyvmomi \\\n    pyyaml \\\n    requests-toolbelt \\\n    requests \\\n    unittest2 \\\n    vcrpy \\\n    xlrd \\\n    xlsxwriter \\\n    urllib3 \\\n    hvac \\\n    yq \\\n    avisdk==${avi_sdk_version} \\\n    avimigrationtools==${avi_sdk_version} && \\\n    pip3 install --no-cache-dir setuptools==57.5.0 && \\\n    pip3 uninstall ansible-core -y \\\n    pip3 install ansible==2.9.13 && \\\n    pip3 install --no-cache-dir ansible-lint \\\n    awscli \\\n    bigsuds \\\n    f5-sdk \\\n    flask \\\n    jinja2 \\\n    jsondiff \\\n    kubernetes \\\n    openstacksdk \\\n    netaddr \\\n    pandas \\\n    paramiko \\\n    pexpect \\\n    pycrypto \\\n    pyOpenssl \\\n    pyparsing \\\n    pyvmomi \\\n    pyyaml \\\n    requests-toolbelt \\\n    requests \\\n    xlsxwriter \\\n    urllib3 \\\n    hvac \\\n    yq \\\n    avisdk==${avi_sdk_version} \\\n    avimigrationtools==${avi_sdk_version} && \\\n    ansible-galaxy install -c avinetworks.avicontroller \\\n    avinetworks.avicontroller-azure \\\n    avinetworks.avicontroller_csp \\\n    avinetworks.avicontroller_vmware \\\n    avinetworks.avise  \\\n    avinetworks.avise_csp \\\n    avinetworks.docker \\\n    avinetworks.network_interface \\\n    avinetworks.avimigrationtools \\\n    avinetworks.avise_vmware && \\\n    ansible-galaxy collection install community.network \\\n    vmware.alb && rm -rf /var/lib/apt/lists/*;\n\nRUN cd /tmp && curl -f -O https://raw.githubusercontent.com/avinetworks/avitools/master/files/VMware-ovftool-4.4.0-16360108-lin.x86_64.bundle\nRUN /bin/bash /tmp/VMware-ovftool-4.4.0-16360108-lin.x86_64.bundle --eulas-agreed --required --console\nRUN rm -f /tmp/VMware-ovftool-4.4.0-16360108-lin.x86_64.bundle\n\nRUN curl -f -sL https://packages.microsoft.com/keys/microsoft.asc | gpg --batch --dearmor | tee /etc/apt/trusted.gpg.d/microsoft.asc.gpg && \\\n    AZ_REPO=$(lsb_release -cs) && \\\n    echo \"deb [arch=amd64] https://packages.microsoft.com/repos/azure-cli/ $AZ_REPO main\" | tee /etc/apt/sources.list.d/azure-cli.list && \\\n    apt-get update && \\\n    apt-get install --no-install-recommends -y azure-cli && rm -rf /var/lib/apt/lists/*;\n\nRUN curl -f https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash\n\nRUN curl -f https://releases.hashicorp.com/terraform/${tf_version}/terraform_${tf_version}_linux_amd64.zip -o terraform_${tf_version}_linux_amd64.zip && \\\n    unzip terraform_${tf_version}_linux_amd64.zip -d /usr/local/bin && \\\n    rm -rf terraform_${tf_version}_linux_amd64.zip\n\nRUN curl -f -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add - && \\\n    touch /etc/apt/sources.list.d/kubernetes.list && \\\n    echo \"deb http://apt.kubernetes.io/ kubernetes-xenial main\" | tee -a /etc/apt/sources.list.d/kubernetes.list && \\\n    apt-get update && apt-get install --no-install-recommends -y kubectl && rm -rf /var/lib/apt/lists/*;\n\nRUN echo \"deb [signed-by=/usr/share/keyrings/cloud.google.gpg] http://packages.cloud.google.com/apt \\\n    cloud-sdk main\" | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list && curl -f \\\n    https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key --keyring /usr/share/keyrings/cloud.google.gpg  \\\n    add - && apt-get update -y && apt-get install --no-install-recommends google-cloud-sdk -y && rm -rf /var/lib/apt/lists/*;\n\nRUN curl -f -L https://github.com/vmware/govmomi/releases/download/v0.22.1/govc_linux_amd64.gz \\ | gunzip > /usr/local/bin/govc && \\\n    chmod +x /usr/local/bin/govc\n\nRUN cd $HOME && \\\n    git clone https://github.com/avinetworks/devops && \\\n    git clone https://github.com/as679/power-beaver && \\\n    git clone https://github.com/vmware/terraform-provider-avi && \\\n    git clone https://github.com/avinetworks/avitools && \\\n    mkdir -p /avi/scripts && \\\n    cp -r avitools/scripts/* /avi/scripts && \\\n    rm -rf $HOME/avitools && \\\n    mkdir $HOME/.terraform.d/ && \\\n    mkdir $HOME/.terraform.d/plugin-cache && \\\n    cd ~/terraform-provider-avi/examples/aws/cluster_stages/1_aws_resources && \\\n    export TF_PLUGIN_CACHE_DIR=$HOME/.terraform.d/plugin-cache && \\\n    sed -i 's/version = \".*\\..*\\..*\"/version =  \"'${avi_version}'\"/g' versions.tf && \\\n    terraform init\n\nRUN touch list && \\\n    echo '#!/bin/bash' > avitools-list && \\\n    echo \"echo \"f5_converter.py\"\" >> avitools-list && \\\n    echo \"echo \"netscaler_converter.py\"\" >> avitools-list && \\\n    echo \"echo \"gss_convertor.py\"\" >> avitools-list && \\\n    echo \"echo \"f5_discovery.py\"\" >> avitools-list && \\\n    echo \"echo \"avi_config_to_ansible.py\"\" >> avitools-list && \\\n    echo \"echo \"ace_converter.py\"\" >> avitools-list && \\\n    echo \"echo \"virtualservice_examples_api.py\"\" >> avitools-list && \\\n    echo \"echo \"config_patch.py\"\" >> avitools-list && \\\n    echo \"echo \"vs_filter.py\"\" >> avitools-list\n\nRUN for script in $(ls /avi/scripts); do echo \"echo $script\" >> avitools-list; done;\n\nRUN chmod +x avitools-list && \\\n    cp avitools-list /usr/local/bin/ && \\\n    echo \"alias avitools-list=/usr/local/bin/avitools-list\" >> ~/.bashrc\n\nRUN apt-get clean && \\\n    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* $HOME/.cache $HOME/go/src $HOME/src\n\nENV cmd cmd_to_run\nCMD eval $cmd\n"
}