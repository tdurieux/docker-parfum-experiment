{
  "startTime": 1674252392235,
  "endTime": 1674252393416,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 7,
        "columnEnd": 46
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 7,
        "columnEnd": 35
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 145,
        "lineEnd": 145,
        "columnStart": 5,
        "columnEnd": 16
      }
    },
    {
      "rule": "gemUpdateSystemRmRootGem",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 7,
        "columnEnd": 40
      }
    },
    {
      "rule": "gemUpdateNoDocument",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 7,
        "columnEnd": 40
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 143,
        "lineEnd": 143,
        "columnStart": 5,
        "columnEnd": 51
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 42,
        "columnEnd": 54
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 49,
        "columnEnd": 61
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright Â© 2018 VMware, Inc. All Rights Reserved.\n# SPDX-License-Identifier: BSD-2-Clause\n# Similar to https://github.com/drecom/docker-centos-ruby/blob/2.6.5-slim/Dockerfile\n\nARG RVM_PATH=/usr/local/rvm\nARG RUBY_VERSION=ruby-2.7.6\nARG RUBY_PATH=/usr/local/rvm/rubies/$RUBY_VERSION\nARG RUBYOPT='-W:no-deprecated -W:no-experimental'\n\nFROM photon:3.0 AS rubybuild\nARG RVM_PATH\nARG RUBY_PATH\nARG RUBY_VERSION\nARG RUBYOPT\nRUN tdnf clean all && \\\n    tdnf upgrade -y && \\\n    tdnf erase -y toybox && \\\n    tdnf install -y \\\n         findutils \\\n         procps-ng \\\n         bzip2 \\\n         shadow \\\n         wget \\\n         which \\\n         vim \\\n         less \\\n         tar \\\n         gzip \\\n         util-linux \\\n         sed \\\n         gcc \\\n         build-essential \\\n         zlib-devel \\\n         libedit \\\n         libedit-devel \\\n         gdbm \\\n         gdbm-devel \\\n         openssl-devel \\\n         systemd \\\n         net-tools \\\n         git \\\n         gpg && \\\n    tdnf clean all\n\n# Copy Gemfile.lock to pin versions further:\nCOPY basegems/Gemfile Gemfile\nCOPY basegems/Gemfile.lock Gemfile.lock\n\nSHELL [ \"/bin/bash\", \"-l\", \"-c\" ]\n\n# Install the gems with bundler is better practice:\nRUN mkdir -p /usr/local/etc \\\n  && { \\\n    echo 'install: --no-document'; \\\n    echo 'update: --no-document'; \\\n  } >> /usr/local/etc/gemrc;\nRUN curl -f -sSL https://rvm.io/mpapis.asc | gpg --batch --import \\\n    && curl -f -sSL https://rvm.io/pkuczynski.asc | gpg --batch --import \\\n    && curl -f -sSL https://get.rvm.io | bash -s stable \\\n    && source /etc/profile.d/rvm.sh \\\n    && rvm autolibs disable \\\n    && rvm requirements \\\n    && rvm install --disable-binary $RUBY_VERSION --default \\\n    && gem update --system --no-document \\\n    && gem install bundler -v '>= 2.3.4' --default --no-document \\\n    && gem install cgi -v '>= 0.1.1' --default --no-document \\\n    && gem install rexml -v '>= 3.2.5' --default --no-document \\\n    && gem install json -v '>= 2.6.1' --default --no-document \\\n    && gem install webrick -v '>= 1.7.0' --default --no-document \\\n    && bundler install \\\n    && gem uninstall rake -v 13.0.6 \\\n    && gem uninstall bigdecimal \\\n    && rm -rf $RUBY_PATH/lib/ruby/gems/2.7.0/specifications/default/rexml-3.2.3.1.gemspec \\\n    && rm -rf $RUBY_PATH/lib/ruby/gems/2.7.0/specifications/default/rdoc-6.2.1.1.gemspec \\\n    && rm -rf $RUBY_PATH/lib/ruby/gems/2.7.0/specifications/default/json-2.3.0.gemspec \\\n    && rm -rf $RUBY_PATH/lib/ruby/gems/2.7.0/specifications/default/json-2.5.1.gemspec \\\n    && rm -rf $RUBY_PATH/lib/ruby/gems/2.7.0/specifications/default/webrick-1.6.1.gemspec \\\n    && rm -rf $RUBY_PATH/lib/ruby/gems/2.7.0/specifications/default/date-3.0.3.gemspec \\\n    && rm -rf $RUBY_PATH/lib/ruby/gems/2.7.0/specifications/default/cgi-0.1.0.1.gemspec && rm -rf /root/.gem;\n\nFROM photon:3.0\nARG RUBY_PATH\nARG RUBYOPT\nENV PATH $RUBY_PATH/bin:$PATH\nCOPY --from=rubybuild $RUBY_PATH $RUBY_PATH\n# Not sure why this is needed: see https://github.com/fluent/fluentd-kubernetes-daemonset/blob/master/docker-image/v1.13/debian-elasticsearch7/Dockerfile\n# skip runtime bundler installation\nENV FLUENTD_DISABLE_BUNDLER_INJECTION 1\n# start with a valid empty file\nCOPY failsafe.conf /fluentd/failsafe.conf\n# custom entrypoint\nCOPY entrypoint.sh /fluentd/entrypoint.sh\n\nUSER root\n\nENTRYPOINT [\"/fluentd/entrypoint.sh\"]\n# Pin all fluentd plugin gem versions with Gemfile.lock here:\nCOPY Gemfile /fluentd/Gemfile\nCOPY Gemfile.lock /fluentd/Gemfile.lock\nRUN mkdir -p /fluentd/log /fluentd/etc /fluentd/plugins /usr/local/bundle/bin/ \\\n  && tdnf erase -y toybox \\\n  && buildDeps=\"\\\n     gmp-devel \\\n     libffi-devel \\\n     bzip2 \\\n     shadow \\\n     wget \\\n     which \\\n     vim \\\n     git \\\n     less \\\n     tar \\\n     gzip \\\n     sed \\\n     gcc \\\n     build-essential \\\n     zlib-devel \\\n     libedit \\\n     libedit-devel \\\n     gdbm \\\n     gdbm-devel \\\n     openssl-devel\" \\\n  && tdnf install -y $buildDeps util-linux systemd net-tools findutils \\\n  && wget https://raw.githubusercontent.com/fluent/fluentd-kubernetes-daemonset/master/docker-image/v1.13/debian-elasticsearch7/plugins/parser_kubernetes.rb -P /fluentd/plugins \\\n  && wget https://raw.githubusercontent.com/fluent/fluentd-kubernetes-daemonset/master/docker-image/v1.13/debian-elasticsearch7/plugins/parser_multiline_kubernetes.rb -P /fluentd/plugins \\\n  && echo 'gem: --no-document' >> /etc/gemrc \\\n  && bundle config silence_root_warning true \\\n  && cd /fluentd \\\n  && bundle install \\\n  && cd /fluentd \\\n  && git clone https://github.com/Cryptophobia/fluent-plugin-detect-exceptions.git fluent-plugin-detect-exceptions \\\n  && cd fluent-plugin-detect-exceptions \\\n  && gem build fluent-plugin-detect-exceptions.gemspec \\\n  && gem install fluent-plugin-detect-exceptions-*.gem \\\n  && rm -rf /fluentd/fluent-plugin-detect-exceptions \\\n  && cd /fluentd \\\n  && git clone https://github.com/Cryptophobia/fluent-plugin-google-cloud.git fluent-plugin-google-cloud \\\n  && cd fluent-plugin-google-cloud \\\n  && gem build fluent-plugin-google-cloud.gemspec \\\n  && gem install fluent-plugin-google-cloud-*.gem \\\n  && rm -rf /fluentd/fluent-plugin-google-cloud \\\n  && cd /fluentd \\\n  && git clone https://github.com/Cryptophobia/fluent-plugin-loggly.git fluent-plugin-loggly \\\n  && cd fluent-plugin-loggly \\\n  && gem build fluent-plugin-loggly.gemspec \\\n  && gem install fluent-plugin-loggly-*.gem \\\n  && rm -rf /fluentd/fluent-plugin-loggly \\\n  && wget https://github.com/jemalloc/jemalloc/releases/download/3.6.0/jemalloc-3.6.0.tar.bz2 -P /tmp \\\n  && tar -C /tmp/ -xjvf /tmp/jemalloc-3.6.0.tar.bz2 \\\n  && cd /tmp/jemalloc-3.6.0 \\\n  && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make \\\n  && mv -v lib/libjemalloc.so* /usr/lib \\\n  && rm -rf /tmp/jemalloc-3.6.0 \\\n  && cd /fluentd \\\n  && tdnf clean all \\\n  && gem sources --clear-all \\\n  && ln -s $(which fluentd) /usr/local/bundle/bin/fluentd \\\n  && tdnf remove -y $buildDeps \\\n  && tdnf clean all \\\n  && gem uninstall google-protobuf --version 3.17.3 --force && gem cleanup \\\n  && rm -rf $RUBY_PATH/lib/ruby/gems/2.7.0/cache $RUBY_PATH/lib/ruby/gems/2.7.0/doc/ /usr/share/doc /root/.bundle/cache && rm /tmp/jemalloc-3.6.0.tar.bz2\n\n# Make sure fluentd picks jemalloc 3.6.0 lib as default\nENV LD_PRELOAD=\"/usr/lib/libjemalloc.so\"\nENV RUBYLIB=\"/usr/local/lib/ruby/gems/2.7.0/gems/resolv-0.2.1/lib\"\n\nEXPOSE 24444 5140\nCOPY plugins /fluentd/plugins\n"
}