{
  "startTime": 1674221095066,
  "endTime": 1674221095550,
  "originalSmells": [
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 58
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Dockerfile for a Spring Boot app based on\n# https://spring.io/blog/2020/01/27/creating-docker-images-with-spring-boot-2-3-0-m1\n\n# Builder stage\n# This stage is implemented like in the guide, but it may be more efficient to\n# have it in the gradle build process outside docker.\nFROM adoptopenjdk:11-jre-hotspot as builder\nARG JAR_NAME\nWORKDIR application\nCOPY ./${JAR_NAME} application.jar\nRUN java -Djarmode=layertools -jar application.jar extract\n\n\n# Final stage\nFROM adoptopenjdk:11-jre-hotspot\nLABEL maintainer=\"Project Versatile Data Kit <miroslavi@vmware.com>\"\n\n# install kerberos client so that we can use kadmin\nRUN apt-get -qq update && \\\n    apt-get -yqq --no-install-recommends install krb5-user && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR application\nCOPY --from=builder application/dependencies/ ./\nCOPY --from=builder application/spring-boot-loader/ ./\nCOPY --from=builder application/snapshot-dependencies/ ./\nCOPY --from=builder application/application/ ./\n\nENV SPRING_PROFILE=prod\n\nARG DATAJOBS_GIT_COMMIT_HASH\nENV DATAJOBS_GIT_COMMIT_HASH=$DATAJOBS_GIT_COMMIT_HASH\n\n# Additional ways to control the application from outside.\n# Remember that you can't pass as environment variables Spring properties that have . in the name.\nENV EXTRA_JAVA_OPTS=\"\"\nENV EXTRA_ARGUMENTS=\"\"\n\nCMD java \\\n -Dsun.security.krb5.debug=true \\\n -Dspring.profiles.active=${SPRING_PROFILE} \\\n ${EXTRA_JAVA_OPTS} \\\n org.springframework.boot.loader.JarLauncher \\\n ${EXTRA_ARGUMENTS}\n"
}