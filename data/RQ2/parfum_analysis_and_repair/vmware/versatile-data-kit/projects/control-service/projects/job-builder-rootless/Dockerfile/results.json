{
  "startTime": 1674217890074,
  "endTime": 1674217891218,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 7,
        "columnEnd": 26
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 7,
        "columnEnd": 26
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Used to trigger a build for a data job image.\nFROM moby/buildkit:v0.9.3-rootless\n\n# Build-time configurable arguments for UID and user group\nARG UID=1000\nARG GID=1000\n\nUSER root\n\nRUN mkdir /run/buildkit\nRUN chown -R $UID:$GID /run/buildkit\n\nCOPY --chown=$UID:$GID Dockerfile.python.vdk /home/user/Dockerfile\nCOPY --chown=$UID:$GID build_image.sh /build_image.sh\n\nRUN chmod +x /build_image.sh\n\n# Setup Python and Git\n## Update & Install dependencies\n## go and make are used to build amazon-ecr-credential-helper (see below)\nRUN apk add --no-cache --update \\\n    git \\\n    bash \\\n    go \\\n    make\n\n# pull and build amazon-ecr-credential-helper; it is required to authenticate to ecr when pushing images\nRUN git clone https://github.com/awslabs/amazon-ecr-credential-helper.git \\\n    && cd amazon-ecr-credential-helper \\\n    && make \\\n    && mv bin/local/docker-credential-ecr-login /usr/local/bin \\\n    && chmod +x /usr/local/bin/docker-credential-ecr-login \\\n    && cd .. \\\n    && rm amazon-ecr-credential-helper/ -rf\n\nRUN apk add --no-cache --repository http://dl-cdn.alpinelinux.org/alpine/v3.10/main python3=3.7.10-r0 py3-pip \\\n    && pip3 install --no-cache-dir -U pip \\\n    && pip3 install --no-cache-dir awscli \\\n    && apk --purge -v del py3-pip \\\n    && rm -rf /var/cache/apk/*\n\nENV BUILDKITD_FLAGS=--oci-worker-no-process-sandbox\n\nUSER user\nWORKDIR /home/user\n\nENTRYPOINT [\"/build_image.sh\"]\n"
}