{
  "startTime": 1674221175745,
  "endTime": 1674221176977,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 94
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 55
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 24
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# ansible-vsphere-gos-validation\n# For users launch guest OS validation test on vSphere\n# version: 1.0\n\n# Use latest Photon OS as parent image\nFROM photon:latest\nWORKDIR /root/ansible-vsphere-gos-validation\n\n# Install the required packages\nRUN tdnf makecache && \\\n    tdnf install -y python3 zip vim wget python3-pip \\\n    sshpass gawk nfs-utils iana-etc xorriso && \\\n    pip3 install --no-cache-dir setuptools wheel jmespath && \\\n    pip3 install --no-cache-dir pycdlib netaddr pywinrm pyvmomi pypsrp\n\n# Install ansible-core (starts from Ansible 2.11)\nRUN pip3 install --no-cache-dir ansible-core\n\n# Install Ansible collections\n# You can set https proxy if collections are failed to install from Galaxy server\nRUN ansible-galaxy collection install ansible.netcommon ansible.posix community.general community.vmware community.windows community.crypto\n\n# Download latest 'ansible-vsphere-gos-validation' release to working dir\nRUN curl -f -s https://api.github.com/repos/vmware/ansible-vsphere-gos-validation/releases/latest | grep \"tarball_url\" | cut -d \"\\\"\" -f 4 | xargs -n 1 wget -O test.tar.gz && \\\n    tar -zxf test.tar.gz && \\\n    mv vmware-ansible-vsphere-gos-validation*/* ./ && rm test.tar.gz\n\n# Clean up unused files\nRUN rm -rf test.tar.gz vmware-ansible-vsphere-gos-validation* && \\\n    tdnf clean all && \\\n    rm -rf /var/cache/* /root/.cache/pip/* /var/log/* /tmp/* /root/.ansible/tmp/*\n\n# Known issue: ping: socket SOCK_DGRAM 1: Permission denied, Kernel bug workaround\nCMD echo 0 99999999 | tee /proc/sys/net/ipv4/ping_group_range && \\\n    /bin/bash\n"
}