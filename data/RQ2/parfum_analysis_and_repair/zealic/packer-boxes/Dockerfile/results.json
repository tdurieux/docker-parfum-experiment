{
  "startTime": 1674254702962,
  "endTime": 1674254704310,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 5,
        "columnEnd": 31
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 94
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 5,
        "columnEnd": 80
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 128
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 94
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 5,
        "columnEnd": 91
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:jessie\nMAINTAINER zealic <zealic@gmail.com>\n\n# Base\nRUN export DEBIAN_CODENAME=jessie \\\n  && export DEBIAN_MIRROR_HOST=mirrors.ustc.edu.cn \\\n  && echo \"deb http://$DEBIAN_MIRROR_HOST/debian $DEBIAN_CODENAME main\" > /etc/apt/sources.list \\\n  && echo \"deb-src http://$DEBIAN_MIRROR_HOST/debian $DEBIAN_CODENAME main\" >> /etc/apt/sources.list \\\n  && echo \"deb http://$DEBIAN_MIRROR_HOST/debian-security $DEBIAN_CODENAME/updates main\" >> /etc/apt/sources.list \\\n  && echo \"deb-src http://$DEBIAN_MIRROR_HOST/debian-security $DEBIAN_CODENAME/updates main\" >> /etc/apt/sources.list \\\n  && echo \"deb http://$DEBIAN_MIRROR_HOST/debian $DEBIAN_CODENAME-updates main\" >> /etc/apt/sources.list \\\n  && echo \"deb-src http://$DEBIAN_MIRROR_HOST/debian $DEBIAN_CODENAME-updates main\" >> /etc/apt/sources.list \\\n  && apt-get update \\\n  && apt-get install --no-install-recommends -y kvm qemu qemu-kvm curl unzip python default-jre gcc g++ make gnupg2 \\\n  && apt-get clean && rm -rf /var/lib/apt/lists/*\n\n# RVM\nRUN ln -sf /bin/bash /bin/sh\nRUN curl -f -sSL https://rvm.io/mpapis.asc | gpg2 --import - \\\n  && curl -f -L https://get.rvm.io | bash -s stable --autolibs=enabled --ruby \\\n  && echo \"/usr/local/rvm/scripts/rvm\" >> /etc/bash.bashrc\nRUN bash --login -c \"rvm use ruby && gem install --no-document rdoc rake thor json\"\n\n# For AWS AMI Builder\n# Use `aws ec2 import-snapshot` to import snapshot\n# Use `ec2iv` to import snapshot (China cn-north-1 region)\n# 1. `export AWS_ACCESS_KEY=<YOUR_ACCESS_KEY> && `export AWS_SECRET_KEY=<YOUR_SECRET_KEY>`\n# 2. `export EC2_URL=ec2.cn-north-1.amazonaws.com.cn`\n# 3. `ec2iv <LOCAL_VMDK_FILE> -f VMDK -z cn-north-1a -b <BUCKET> -o $AWS_ACCESS_KEY -w $AWS_SECRET_KEY`\nRUN curl -f -SL -o /tmp/ec2-api-tools.zip https://s3.amazonaws.com/ec2-downloads/ec2-api-tools.zip \\\n  && mkdir -p /opt && unzip -d /opt /tmp/ec2-api-tools.zip \\\n  && mv `dirname /opt/ec2-api-tools-*/.` /opt/ec2-api-tools \\\n  && echo 'export EC2_HOME=/opt/ec2-api-tools' >> /etc/bash.bashrc \\\n  && echo \"export PATH=/opt/ec2-api-tools/bin:\\$PATH\" >> /etc/bash.bashrc \\\n  && echo 'export JAVA_HOME=/usr/lib/jvm/default-java' >> /etc/bash.bashrc \\\n  && curl -f -SL -o /tmp/aws.zip https://s3.amazonaws.com/aws-cli/awscli-bundle.zip \\\n  && unzip -d /tmp /tmp/aws.zip \\\n  && /tmp/awscli-bundle/install -i /usr/local/aws -b /usr/local/bin/aws \\\n  && rm -rf /tmp/* /var/tmp/*\n\n# Packer\nENV PACKER_VERSION=0.9.0\nRUN curl -f -SL -o /tmp/packer.zip https://releases.hashicorp.com/packer/${PACKER_VERSION}/packer_${PACKER_VERSION}_linux_amd64.zip \\\n  && mkdir -p /opt/packer && unzip /tmp/packer.zip -d /opt/packer \\\n  && ln -sf /opt/packer/packer /usr/local/bin/packer\n\n# packer-boxes\nRUN mkdir -p /packer-boxes\nWORKDIR /packer-boxes\nCOPY [\"lib/\", \"manifests/\", \"Rakefile\", \"config.yml\", \"./\"]\n\nENTRYPOINT [\"/bin/bash\"]\n"
}