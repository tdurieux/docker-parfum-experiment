diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/zealic/packer-boxes/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/zealic/packer-boxes/Dockerfile/repaired.Dockerfile
index 158165c..0a534f9 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/zealic/packer-boxes/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/zealic/packer-boxes/Dockerfile/repaired.Dockerfile
@@ -2,7 +2,7 @@ FROM debian:jessie
 MAINTAINER zealic <zealic@gmail.com>
 
 # Base
-RUN  export DEBIAN_CODENAME=jessie \
+RUN export DEBIAN_CODENAME=jessie \
   && export DEBIAN_MIRROR_HOST=mirrors.ustc.edu.cn \
   && echo "deb http://$DEBIAN_MIRROR_HOST/debian $DEBIAN_CODENAME main" > /etc/apt/sources.list \
   && echo "deb-src http://$DEBIAN_MIRROR_HOST/debian $DEBIAN_CODENAME main" >> /etc/apt/sources.list \
@@ -11,13 +11,13 @@ RUN  export DEBIAN_CODENAME=jessie \
   && echo "deb http://$DEBIAN_MIRROR_HOST/debian $DEBIAN_CODENAME-updates main" >> /etc/apt/sources.list \
   && echo "deb-src http://$DEBIAN_MIRROR_HOST/debian $DEBIAN_CODENAME-updates main" >> /etc/apt/sources.list \
   && apt-get update \
-  && apt-get install -y kvm qemu qemu-kvm curl unzip python default-jre gcc g++ make gnupg2 \
+  && apt-get install --no-install-recommends -y kvm qemu qemu-kvm curl unzip python default-jre gcc g++ make gnupg2 \
   && apt-get clean && rm -rf /var/lib/apt/lists/*
 
 # RVM
 RUN ln -sf /bin/bash /bin/sh
-RUN curl -sSL https://rvm.io/mpapis.asc | gpg2 --import - \
-  && curl -L https://get.rvm.io | bash -s stable --autolibs=enabled --ruby \
+RUN curl -f -sSL https://rvm.io/mpapis.asc | gpg2 --import - \
+  && curl -f -L https://get.rvm.io | bash -s stable --autolibs=enabled --ruby \
   && echo "/usr/local/rvm/scripts/rvm" >> /etc/bash.bashrc
 RUN bash --login -c "rvm use ruby && gem install --no-document rdoc rake thor json"
 
@@ -27,20 +27,20 @@ RUN bash --login -c "rvm use ruby && gem install --no-document rdoc rake thor js
 # 1. `export AWS_ACCESS_KEY=<YOUR_ACCESS_KEY> && `export AWS_SECRET_KEY=<YOUR_SECRET_KEY>`
 # 2. `export EC2_URL=ec2.cn-north-1.amazonaws.com.cn`
 # 3. `ec2iv <LOCAL_VMDK_FILE> -f VMDK -z cn-north-1a -b <BUCKET> -o $AWS_ACCESS_KEY -w $AWS_SECRET_KEY`
-RUN curl -SL -o /tmp/ec2-api-tools.zip http://s3.amazonaws.com/ec2-downloads/ec2-api-tools.zip \
+RUN curl -f -SL -o /tmp/ec2-api-tools.zip https://s3.amazonaws.com/ec2-downloads/ec2-api-tools.zip \
   && mkdir -p /opt && unzip -d /opt /tmp/ec2-api-tools.zip \
   && mv `dirname /opt/ec2-api-tools-*/.` /opt/ec2-api-tools \
   && echo 'export EC2_HOME=/opt/ec2-api-tools' >> /etc/bash.bashrc \
   && echo "export PATH=/opt/ec2-api-tools/bin:\$PATH" >> /etc/bash.bashrc \
   && echo 'export JAVA_HOME=/usr/lib/jvm/default-java' >> /etc/bash.bashrc \
-  && curl -SL -o /tmp/aws.zip https://s3.amazonaws.com/aws-cli/awscli-bundle.zip \
+  && curl -f -SL -o /tmp/aws.zip https://s3.amazonaws.com/aws-cli/awscli-bundle.zip \
   && unzip -d /tmp /tmp/aws.zip \
   && /tmp/awscli-bundle/install -i /usr/local/aws -b /usr/local/bin/aws \
   && rm -rf /tmp/* /var/tmp/*
 
 # Packer
 ENV PACKER_VERSION=0.9.0
-RUN curl -SL -o /tmp/packer.zip https://releases.hashicorp.com/packer/${PACKER_VERSION}/packer_${PACKER_VERSION}_linux_amd64.zip \
+RUN curl -f -SL -o /tmp/packer.zip https://releases.hashicorp.com/packer/${PACKER_VERSION}/packer_${PACKER_VERSION}_linux_amd64.zip \
   && mkdir -p /opt/packer && unzip /tmp/packer.zip -d /opt/packer \
   && ln -sf /opt/packer/packer /usr/local/bin/packer