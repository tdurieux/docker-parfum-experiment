diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/geant-dataplaneprogramming/int-platforms/platforms/bmv2-mininet/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/geant-dataplaneprogramming/int-platforms/platforms/bmv2-mininet/Dockerfile/repaired.Dockerfile
index 07c7e5b..8d51443 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/geant-dataplaneprogramming/int-platforms/platforms/bmv2-mininet/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/geant-dataplaneprogramming/int-platforms/platforms/bmv2-mininet/Dockerfile/repaired.Dockerfile
@@ -17,7 +17,7 @@ ENV NET_TOOLS iputils-arping \
               tshark \ 
               golang-go \
               bridge-utils
-              
+
 ENV MININET_DEPS automake \
                  build-essential \
                  cgroup-bin \
@@ -45,26 +45,26 @@ ENV DEV_TOOLS nano
 ENV DEBIAN_FRONTEND noninteractive
 
 RUN apt-get update && \
-    apt-get install -y -o Dpkg::Options::='--force-confdef' --no-install-recommends $NET_TOOLS $MININET_DEPS
+    apt-get install -y -o Dpkg::Options::='--force-confdef' --no-install-recommends $NET_TOOLS $MININET_DEPS && rm -rf /var/lib/apt/lists/*;
 
 #RUN pip install construct
 # Fix to get tcpdump working
 RUN mv /usr/sbin/tcpdump /usr/bin/tcpdump
 
-RUN pip install ipaddr scapy psutil
-RUN pip install influxdb
+RUN pip install --no-cache-dir ipaddr scapy psutil
+RUN pip install --no-cache-dir influxdb
 # Install mininet.
 COPY docker/third-party /third-party
 RUN dpkg -i /third-party/python3-six_1.10.0-3_all.deb
 RUN dpkg -i /third-party/python3-construct_2.5.2-0.1_all.deb
 COPY bin /usr/local/bin
 WORKDIR /usr/local/bin
-RUN chmod u+x * 
+RUN chmod u+x *
 WORKDIR /third-party/mininet
 RUN cp util/m /usr/local/bin/m
 RUN make install && \
     rm -rf /third-party/mininet
-COPY v1model.p4 /usr/local/share/p4c/p4include 
+COPY v1model.p4 /usr/local/share/p4c/p4include
 # Install the scripts we use to run and test P4 apps.
 COPY docker/scripts /scripts
 WORKDIR /scripts