{
  "startTime": 1674248612341,
  "endTime": 1674248613048,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 27
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nginx\n\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends openssl && rm -rf /var/lib/apt/lists/*;\n\n# Create a config.txt file with the ssl config in it.\nRUN echo \"[dn]\\nCN=localhost\\n[req]\\ndistinguished_name = dn\\n[EXT]\\nsubjectAltName=DNS:localhost\\nkeyUsage=digitalSignature\\nextendedKeyUsage=serverAuth\" >> config.txt\n\n# Create a ssl key and cert file\nRUN openssl req -x509 -out cert.pem -keyout key.pem \\\n  -newkey rsa:2048 -nodes -sha256 \\\n  -subj '/CN=localhost' -extensions EXT -config config.txt\n\n# Use the key and cert file to create a pkcs12 file that we can use in the JVM to get it to trust\n# the self-signed cert we made previously\nRUN openssl pkcs12 -export -passout pass:123456 -out trust.pkcs12 -inkey key.pem -in cert.pem\n\n# Move the pkcs file somewhere we know so we can grab it later\nRUN mkdir -p /etc/keystore\nRUN mv trust.pkcs12 /etc/keystore/trust.pkcs12\n\n# Move and copy the nginx files to the correct spots.\nCOPY nginx.conf /etc/nginx/nginx.conf\nRUN mv key.pem /etc/nginx/key.pem\nRUN mv cert.pem /etc/nginx/cert.pem\n"
}