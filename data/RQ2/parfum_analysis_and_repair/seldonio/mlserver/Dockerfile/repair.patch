diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/seldonio/mlserver/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/seldonio/mlserver/Dockerfile/repaired.Dockerfile
index d31921d..929990b 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/seldonio/mlserver/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/seldonio/mlserver/Dockerfile/repaired.Dockerfile
@@ -24,7 +24,7 @@ ENV MLSERVER_MODELS_DIR=/mnt/models \
 
 RUN apt-get update && \
     apt-get -y --no-install-recommends install \
-        libgomp1 libgl1-mesa-dev libglib2.0-0 build-essential
+        libgomp1 libgl1-mesa-dev libglib2.0-0 build-essential && rm -rf /var/lib/apt/lists/*;
 
 RUN mkdir /opt/mlserver
 WORKDIR /opt/mlserver
@@ -36,22 +36,24 @@ RUN useradd -u 1000 -s /bin/bash mlserver -d /opt/mlserver && \
     chown -R 1000:0 /opt/mlserver && \
     chmod -R 776 /opt/mlserver
 
-COPY --from=wheel-builder /opt/mlserver/dist ./dist 
+COPY --from=wheel-builder /opt/mlserver/dist ./dist
 # note: if runtime is "all" we install mlserver-<version>-py3-none-any.whl
 # we have to use this syntax to return the correct file: $(ls ./dist/mlserver-*.whl)
-RUN pip install --upgrade pip wheel setuptools && \
-    pip install $(ls ./dist/mlserver-*.whl)[all]; \
+RUN pip install --no-cache-dir --upgrade pip wheel setuptools && \
+    pip install --no-cache-dir $(ls ./dist/mlserver-*.whl)[all]; \
     if [[ $RUNTIMES == "all" ]]; then \
-        pip install ./dist/mlserver_*.whl; \
+        pip install --no-cache-dir ./dist/mlserver_*.whl; \
     else \
         for _runtime in $RUNTIMES; do \
+        
             _wheelName=$(echo $_runtime | tr '-' '_'); \
-            pip install "./dist/$_wheelName-"*.whl; \
-        done \
+            pip install --no-cache-dir "./dist/$_wheelName-"*.whl; \
+           done \
+
     fi
 
 COPY requirements/docker.txt requirements/docker.txt
-RUN pip install -r requirements/docker.txt
+RUN pip install --no-cache-dir -r requirements/docker.txt
 
 COPY ./licenses/license.txt .
 COPY \