{
  "startTime": 1674217802213,
  "endTime": 1674217802934,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 18,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# -------- builder stage -------- #\nFROM golang:alpine AS builder\n\nARG GOOS_VAL=linux\nARG GOARCH_VAL=amd64\nARG CGO_ENABLED_VAL=1\n\nWORKDIR $GOPATH/src/terrascan\n\n# download go dependencies\nCOPY go.mod go.sum ./\nRUN go mod download\nRUN apk add --no-cache -U build-base\n\n# copy terrascan source\nCOPY . .\n\n# build binary\nRUN apk update && apk add --no-cache git && \\\n    CGO_ENABLED=${CGO_ENABLED_VAL} GOOS=${GOOS_VAL} GOARCH=${GOARCH_VAL} go build -v -ldflags \"-w -s\" -o /go/bin/terrascan ./cmd/terrascan\n\n\n# -------- prod stage -------- #\nFROM alpine:3.16\n\n# create non root user\nRUN addgroup --gid 101 terrascan && \\\n    adduser -S --uid 101 --ingroup terrascan terrascan && \\\n    apk add --no-cache git openssh\n\n# create ~/.ssh & ~/bin folder and change owner to terrascan\nRUN mkdir -p /home/terrascan/.ssh /home/terrascan/bin /data && \\\n    chown -R terrascan:terrascan /home/terrascan /data\n\n# run as non root user\nUSER 101\n\nENV PATH /go/bin:$PATH\n\n# copy terrascan binary from build\nCOPY --from=builder /go/bin/terrascan /go/bin/terrascan\n\n# Copy webhooks UI templates & assets\nCOPY ./pkg/http-server/templates /go/terrascan\nCOPY ./pkg/http-server/assets /go/terrascan/assets\n\nEXPOSE 9010\n\nENTRYPOINT [\"/go/bin/terrascan\"]\nCMD [\"server\", \"--log-type\", \"json\"]\n"
}