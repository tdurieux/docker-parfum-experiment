{
  "startTime": 1674254098327,
  "endTime": 1674254099999,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 104,
        "lineEnd": 104,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 8,
        "columnEnd": 50
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 86,
        "lineEnd": 86,
        "columnStart": 8,
        "columnEnd": 57
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 94,
        "lineEnd": 94,
        "columnStart": 8,
        "columnEnd": 60
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 105,
        "lineEnd": 105,
        "columnStart": 8,
        "columnEnd": 33
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 142,
        "lineEnd": 142,
        "columnStart": 8,
        "columnEnd": 34
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 178,
        "lineEnd": 178,
        "columnStart": 8,
        "columnEnd": 59
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 186,
        "lineEnd": 186,
        "columnStart": 8,
        "columnEnd": 52
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 12,
        "columnStart": 8,
        "columnEnd": 20
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 25,
        "columnEnd": 144
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 25,
        "columnEnd": 51
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 12,
        "columnStart": 8,
        "columnEnd": 20
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 25,
        "columnEnd": 144
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 25,
        "columnEnd": 51
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:20.04 AS build\n\nENV DEBIAN_FRONTEND noninteractive\n\nRUN apt-get update -y && \\\n        apt-get install --no-install-recommends -y \\\n            wget \\\n            unzip \\\n            openjdk-11-jre-headless \\\n            make \\\n            gcc-10 \\\n            g++-10 \\\n            xz-utils && rm -rf /var/lib/apt/lists/*;\n\nRUN ln -s /usr/bin/gcc-10 /usr/bin/gcc && \\\n        ln -s /usr/bin/g++-10 /usr/bin/g++\n\nRUN mkdir /dockerbuild\nWORKDIR /dockerbuild\n\n# Install cmake\nENV ver=3.19.3\nRUN wget https://github.com/Kitware/CMake/releases/download/v$ver/cmake-$ver-Linux-x86_64.sh && \\\n        sh cmake-$ver-Linux-x86_64.sh --skip-license --prefix=/usr/local\n\nENV ver=6858069_latest\nRUN wget https://dl.google.com/android/repository/commandlinetools-linux-$ver.zip && \\\n        unzip commandlinetools-linux-$ver.zip && \\\n        mkdir -p /android-sdk/cmdline-tools && \\\n        mv cmdline-tools /android-sdk/cmdline-tools/latest\n\nENV ANDROID_HOME /android-sdk\nENV ANDROID_SDK  $ANDROID_HOME\nENV PATH $ANDROID_HOME/cmdline-tools/latest/bin:$PATH\n\nENV ANDROID_API=30\nENV ANDROID_PLATFORM=android-$ANDROID_API\nRUN yes | sdkmanager --install \"platforms;$ANDROID_PLATFORM\"\n\nENV NDK_VER=21.4.7075529\nENV ANDROID_NDK_HOME $ANDROID_HOME/ndk/$NDK_VER\nENV ANDROID_NDK      $ANDROID_NDK_HOME\nRUN yes | sdkmanager --install \"ndk;$NDK_VER\"\n\nENV BUILD_TOOLS_VER=30.0.3\nRUN yes | sdkmanager --install \"build-tools;$BUILD_TOOLS_VER\"\n\nRUN apt-get update -y && apt-get install --no-install-recommends -y openjdk-11-jdk-headless perl pkg-config git python3 python-is-python3 python3-distutils python3-yaml && rm -rf /var/lib/apt/lists/*;\n\nENV ver=5.15.2\nRUN wget https://download.qt.io/official_releases/qt/5.15/$ver/submodules/qtbase-everywhere-src-$ver.tar.xz && \\\n        tar -xvf qtbase-everywhere-src-$ver.tar.xz && rm qtbase-everywhere-src-$ver.tar.xz\nRUN mkdir qtbase-build && \\\n        cd qtbase-build && \\\n        ../qtbase-everywhere-src-$ver/configure \\\n            -opensource \\\n            -confirm-license \\\n            -xplatform android-clang \\\n            -release \\\n            -shared \\\n            -android-ndk $ANDROID_NDK_HOME \\\n            -android-sdk $ANDROID_HOME \\\n            -prefix /android\n\nRUN apt-get update -y && apt-get install --no-install-recommends -y python3 && rm -rf /var/lib/apt/lists/*;\n\nRUN cd qtbase-build && \\\n        ../qtbase-everywhere-src-$ver/configure \\\n            -opensource \\\n            -confirm-license \\\n            -xplatform android-clang \\\n            -release \\\n            -shared \\\n            -android-ndk $ANDROID_NDK_HOME \\\n            -android-sdk $ANDROID_HOME \\\n            -prefix /android \\\n            -nomake examples \\\n            -nomake tests \\\n            -no-feature-concurrent \\\n            -no-feature-sql \\\n            -no-feature-xml && \\\n        make -j$(nproc) && \\\n        make install\n\nENV ver=5.15.2\nRUN wget https://download.qt.io/official_releases/qt/5.15/$ver/submodules/qtdeclarative-everywhere-src-$ver.tar.xz && \\\n        tar -xvf qtdeclarative-everywhere-src-$ver.tar.xz && rm qtdeclarative-everywhere-src-$ver.tar.xz\nRUN cd qtdeclarative-everywhere-src-$ver && \\\n        /android/bin/qmake && \\\n        make -j$(nproc) && \\\n        make install\n\nENV ver=5.15.2\nRUN wget https://download.qt.io/official_releases/qt/5.15/$ver/submodules/qtquickcontrols2-everywhere-src-$ver.tar.xz && \\\n        tar -xvf qtquickcontrols2-everywhere-src-$ver.tar.xz && rm qtquickcontrols2-everywhere-src-$ver.tar.xz\nRUN cd qtquickcontrols2-everywhere-src-$ver && \\\n        /android/bin/qmake && \\\n        make -j$(nproc) && \\\n        make install\n\nCOPY set-env-android.sh /set-env-android.sh\n\n# Build fftw3\nENV ver=3.3.9\nRUN wget https://www.fftw.org/fftw-$ver.tar.gz && \\\n        tar -xvf fftw-$ver.tar.gz && rm fftw-$ver.tar.gz\nENV ARCH=arm\nRUN cd fftw-$ver && \\\n        . /set-env-android.sh && \\\n        mkdir -p build/$HOST && \\\n        cd build/$HOST && \\\n        ../../configure $configure_flags --enable-shared --disable-static && \\\n        make -j$(nproc) && \\\n        make install\nENV ARCH=arm64\nRUN cd fftw-$ver && \\\n        . /set-env-android.sh && \\\n        mkdir -p build/$HOST && \\\n        cd build/$HOST && \\\n        ../../configure $configure_flags --enable-shared --disable-static && \\\n        make -j$(nproc) && \\\n        make install\nENV ARCH=x86\nRUN cd fftw-$ver && \\\n        . /set-env-android.sh && \\\n        mkdir -p build/$HOST && \\\n        cd build/$HOST && \\\n        ../../configure $configure_flags --enable-shared --disable-static && \\\n        make -j$(nproc) && \\\n        make install\nENV ARCH=x86_64\nRUN cd fftw-$ver && \\\n        . /set-env-android.sh && \\\n        mkdir -p build/$HOST && \\\n        cd build/$HOST && \\\n        ../../configure $configure_flags --enable-shared --disable-static && \\\n        make -j$(nproc) && \\\n        make install\n\n# Build eigen3\nENV ver=3.3.9\nRUN wget https://gitlab.com/libeigen/eigen/-/archive/$ver/eigen-$ver.tar.gz && \\\n        tar -xvf eigen-$ver.tar.gz && rm eigen-$ver.tar.gz\nENV ARCH=arm\nRUN cd eigen-$ver && \\\n        . /set-env-android.sh && \\\n        mkdir -p build/$HOST && \\\n        cd build/$HOST && \\\n        cmake -DCMAKE_TOOLCHAIN_FILE=$CMAKE_TOOLCHAIN_FILE -DCMAKE_INSTALL_PREFIX=$INS_PREFIX ../.. && \\\n        make -j$(nproc) && \\\n        make install\nENV ARCH=arm64\nRUN cd eigen-$ver && \\\n        . /set-env-android.sh && \\\n        mkdir -p build/$HOST && \\\n        cd build/$HOST && \\\n        cmake -DCMAKE_TOOLCHAIN_FILE=$CMAKE_TOOLCHAIN_FILE -DCMAKE_INSTALL_PREFIX=$INS_PREFIX ../.. && \\\n        make -j$(nproc) && \\\n        make install\nENV ARCH=x86\nRUN cd eigen-$ver && \\\n        . /set-env-android.sh && \\\n        mkdir -p build/$HOST && \\\n        cd build/$HOST && \\\n        cmake -DCMAKE_TOOLCHAIN_FILE=$CMAKE_TOOLCHAIN_FILE -DCMAKE_INSTALL_PREFIX=$INS_PREFIX ../.. && \\\n        make -j$(nproc) && \\\n        make install\nENV ARCH=x86_64\nRUN cd eigen-$ver && \\\n        . /set-env-android.sh && \\\n        mkdir -p build/$HOST && \\\n        cd build/$HOST && \\\n        cmake -DCMAKE_TOOLCHAIN_FILE=$CMAKE_TOOLCHAIN_FILE -DCMAKE_INSTALL_PREFIX=$INS_PREFIX ../.. && \\\n        make -j$(nproc) && \\\n        make install\n\nENV ver=5.15.2\nRUN wget https://download.qt.io/official_releases/qt/5.15/$ver/submodules/qtandroidextras-everywhere-src-$ver.tar.xz && \\\n        tar -xvf qtandroidextras-everywhere-src-$ver.tar.xz && rm qtandroidextras-everywhere-src-$ver.tar.xz\nRUN cd qtandroidextras-everywhere-src-$ver && \\\n        /android/bin/qmake && \\\n        make -j$(nproc) && \\\n        make install\n\nENV ver=5.15.2\nRUN wget https://download.qt.io/official_releases/qt/5.15/$ver/submodules/qtcharts-everywhere-src-$ver.tar.xz && \\\n        tar -xvf qtcharts-everywhere-src-$ver.tar.xz && rm qtcharts-everywhere-src-$ver.tar.xz\nRUN cd qtcharts-everywhere-src-$ver && \\\n        /android/bin/qmake && \\\n        make -j$(nproc) && \\\n        make install\n\nRUN /android/src/3rdparty/gradle/gradlew\n\nRUN rm -r /dockerbuild\n\nCMD cd /build && \\\n        . /set-env-android.sh && \\\n        export version=`cat /src/version` && \\\n        cmake \\\n            -DCUR_VERSION=$version \\\n            -DCMAKE_TOOLCHAIN_FILE=$CMAKE_TOOLCHAIN_FILE \\\n            -DCMAKE_BUILD_TYPE=$CMAKE_BUILD_TYPE \\\n            -DCMAKE_PREFIX_PATH=\"/android;$INS_PREFIX\" \\\n            -DEigen3_DIR=$INS_PREFIX/share/eigen3/cmake \\\n            -DANDROID_PLATFORM=$ANDROID_PLATFORM \\\n            -DANDROID_ABI=\"$ANDROID_ABI\" \\\n            -DANDROID_SDK=\"$ANDROID_SDK\" \\\n            /src && \\\n        make -j$(nproc) && \\\n        /src/docker/deploy-android.sh\n"
}