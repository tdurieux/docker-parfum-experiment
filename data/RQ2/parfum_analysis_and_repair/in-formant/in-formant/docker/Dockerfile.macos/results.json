{
  "startTime": 1674253902689,
  "endTime": 1674253904308,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 75
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 8,
        "columnEnd": 47
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 8,
        "columnEnd": 33
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 84,
        "lineEnd": 84,
        "columnStart": 8,
        "columnEnd": 34
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 94,
        "lineEnd": 94,
        "columnStart": 8,
        "columnEnd": 56
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 24,
        "columnStart": 8,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 25,
        "columnEnd": 57
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 92,
        "lineEnd": 92,
        "columnStart": 25,
        "columnEnd": 102
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 114,
        "lineEnd": 114,
        "columnStart": 25,
        "columnEnd": 50
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 24,
        "columnStart": 8,
        "columnEnd": 49
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 25,
        "columnEnd": 57
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 92,
        "lineEnd": 92,
        "columnStart": 25,
        "columnEnd": 102
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 114,
        "lineEnd": 114,
        "columnStart": 25,
        "columnEnd": 50
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:20.04 AS build\n\nENV DEBIAN_FRONTEND noninteractive\n\nRUN apt-get update -y && \\\n        apt-get install --no-install-recommends -y \\\n            build-essential \\\n            clang-11 \\\n            clang++-11 \\\n            llvm-11-dev \\\n            llvm-11-tools \\\n            libxml2-dev \\\n            uuid-dev \\\n            libssl-dev \\\n            make \\\n            tar \\\n            xz-utils \\\n            bzip2 \\\n            gzip \\\n            cpio \\\n            libbz2-dev \\\n            zlib1g-dev \\\n            cmake \\\n            git \\\n            python3 python3-pip python-is-python3 && rm -rf /var/lib/apt/lists/*;\n\nRUN ln -s /usr/bin/clang-11 /usr/bin/clang && \\\n        ln -s /usr/bin/clang++-11 /usr/bin/clang++ && \\\n        ln -s /usr/bin/llvm-config-11 /usr/bin/llvm-config\n\nCOPY MacOSX11.3.sdk.tar.xz /dockerbuild/MacOSX11.3.sdk.tar.xz\nRUN git clone https://github.com/tpoechtrager/osxcross && \\\n        mv /dockerbuild/MacOSX11.3.sdk.tar.xz osxcross/tarballs && \\\n        cd osxcross && \\\n        UNATTENDED=1 ./build.sh\n\nENV HOST x86_64-apple-darwin20.4\n\n# Install qt\nRUN pip install --no-cache-dir aqtinstall==1.2.2\nCOPY aqtinstall-patch/updater.py /usr/local/lib/python3.8/dist-packages/aqt\nRUN aqt install 6.1.2 mac desktop -m addons.qtcharts --outputdir /opt/Qt\n\n# Replace mac binaries with linux Binaries\nRUN aqt install 6.1.2 linux desktop --noarchives -m qtbase qtdeclarative icu --outputdir /opt/Qt && \\\n\trm -r /opt/Qt/6.1.2/macos/bin /opt/Qt/6.1.2/macos/libexec && \\\n\tln -s /opt/Qt/6.1.2/gcc_64/bin /opt/Qt/6.1.2/macos/bin && \\\n\tln -s /opt/Qt/6.1.2/gcc_64/libexec /opt/Qt/6.1.2/macos/libexec\n\nENV PATH /osxcross/target/bin:$PATH\nENV CC /osxcross/target/bin/$HOST-clang\nENV CXX /osxcross/target/bin/$HOST-clang++\n\nRUN apt-get update -y && apt-get install --no-install-recommends -y autoconf wget && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /dockerbuild\n\n# Build portaudio\nRUN wget https://files.portaudio.com/archives/pa_stable_v190700_20210406.tgz && \\\n        tar -xvf pa_stable_v190700_20210406.tgz && rm pa_stable_v190700_20210406.tgz\nRUN cd portaudio && \\\n        autoconf && \\\n        mkdir objs && \\\n        cd objs && \\\n        CFLAGS=\"-arch x86_64 -Wno-implicit-int-float-conversion\" \\\n        ../configure --host=$HOST --prefix=/osxcross/target/$HOST --enable-shared --disable-static --disable-mac-universal --disable-dependency-tracking && \\\n        make -j$(nproc) && \\\n        make install\n\n# Build fftw3\nENV ver=3.3.9\nRUN wget https://www.fftw.org/fftw-$ver.tar.gz && \\\n        tar -xvf fftw-$ver.tar.gz && rm fftw-$ver.tar.gz\nRUN cd fftw-$ver && \\\n        mkdir build && \\\n        cd build && \\\n        CFLAGS=\"-arch x86_64\" \\\n        ../configure --host=$HOST --prefix=/osxcross/target/$HOST --enable-shared --disable-static --disable-mac-universal --disable-dependency-tracking && \\\n        make -j$(nproc) && \\\n        make install\n\n# Build eigen3\nENV ver=3.3.9\nRUN wget https://gitlab.com/libeigen/eigen/-/archive/$ver/eigen-$ver.tar.gz && \\\n        tar -xvf eigen-$ver.tar.gz && rm eigen-$ver.tar.gz\nRUN cd eigen-$ver && \\\n        mkdir build && \\\n        cd build && \\\n        $HOST-cmake -DCMAKE_INSTALL_PREFIX=/osxcross/target/$HOST .. && \\\n        make -j$(nproc) && \\\n        make install\n\nRUN apt-get update -y && apt-get install --no-install-recommends -y pkg-config qt5-qmake qtbase5-dev unzip zlib1g-dev hfsprogs && rm -rf /var/lib/apt/lists/*;\nRUN wget https://github.com/clo-yunhee/pytorch_osx_cross/releases/download/1.7.1-osx-cross-1/libtorch-x86_64-darwin18.tar.gz && \\\n        tar -xvf libtorch-x86_64-darwin18.tar.gz -C /usr && rm libtorch-x86_64-darwin18.tar.gz\n\nRUN git clone https://github.com/planetbeing/libdmg-hfsplus -b openssl-1.1\nRUN cd libdmg-hfsplus && \\\n        mkdir build && \\\n        cd build && \\\n        CC= CXX= cmake .. -DCMAKE_INSTALL_PREFIX=/usr && \\\n        make -j$(nproc) && \\\n        make install\n\nCOPY macdeployqt macdeployqt\nRUN cd macdeployqt && \\\n        /opt/Qt/6.1.2/macos/bin/qmake && \\\n        make -j$(nproc) && \\\n        cp macdeployqt /osxcross/target/bin\n\nRUN rm -r /dockerbuild\n\nCOPY macos-toolchain.cmake /usr/macos-toolchain.cmake\n\nRUN apt-get update -y && apt-get install --no-install-recommends -y ccache && rm -rf /var/lib/apt/lists/*;\nENV CCACHE_DIR=/ccache\n\nRUN groupadd -g 1000 swu && useradd -m -u 1000 -g swu swu\nUSER swu\n\nCMD cd /build && \\\n        export version=`cat /src/version` && \\\n        export QT_DIR=/opt/Qt/6.1.2/macos && \\\n        export MACOSX_DEPLOYMENT_TARGET=10.14 && \\\n        $HOST-cmake \\\n            -DCUR_VERSION=$version \\\n            -DCMAKE_TOOLCHAIN_FILE=/usr/macos-toolchain.cmake \\\n            -DCMAKE_BUILD_TYPE=$CMAKE_BUILD_TYPE \\\n            -DCMAKE_PREFIX_PATH=\"/opt/Qt/6.1.2/macos;/osxcross/target/$HOST;/usr/libtorch\" \\\n            -DENABLE_TORCH=$ENABLE_TORCH \\\n            /src && \\\n        make -j$(nproc) && \\\n        DIST_SUFFIX=macos-x86_64 \\\n        /src/docker/deploy-macos.sh\n\n"
}