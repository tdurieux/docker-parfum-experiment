{
  "startTime": 1674216961519,
  "endTime": 1674216964717,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 95,
        "lineEnd": 95,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 8,
        "columnEnd": 37
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 8,
        "columnEnd": 32
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 96,
        "lineEnd": 96,
        "columnStart": 8,
        "columnEnd": 31
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 129,
        "lineEnd": 129,
        "columnStart": 8,
        "columnEnd": 36
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 215,
        "lineEnd": 215,
        "columnStart": 8,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 8,
        "columnEnd": 77
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 235,
        "lineEnd": 235,
        "columnStart": 8,
        "columnEnd": 62
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 8,
        "columnEnd": 77
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 235,
        "lineEnd": 235,
        "columnStart": 8,
        "columnEnd": 62
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:focal AS build\nENV container docker\nRUN chmod 1777 /tmp\n\nENV DEBIAN_FRONTEND=noninteractive\nRUN apt-get -y update && \\\n        apt-get -y --no-install-recommends install wget unzip openjdk-11-jre cmake libglib2.0-dev git && rm -rf /var/lib/apt/lists/*;\n\n# Install Android SDK.\nENV ver=6609375_latest\nRUN mkdir /android-sdk && cd /android-sdk && \\\n        wget https://dl.google.com/android/repository/commandlinetools-linux-$ver.zip && \\\n        unzip commandlinetools-linux-$ver.zip && \\\n        rm commandlinetools-linux-$ver.zip && \\\n        mkdir cmdline-tools && \\\n        mv tools cmdline-tools/latest\nENV ANDROID_HOME=/android-sdk ANDROID_SDK=/android-sdk PATH=/android-sdk/cmdline-tools/latest/bin:$PATH\nENV android_api=30 ndk_ver=21.3.6528147 buildtools_ver=30.0.1\nENV ANDROID_PLATFORM=android-$android_api ANDROID_NDK_HOME=$ANDROID_HOME/ndk/$ndk_ver\nRUN yes | sdkmanager --install \"platforms;$ANDROID_PLATFORM\"\nRUN yes | sdkmanager --install \"ndk;$ndk_ver\"\nRUN yes | sdkmanager --install \"build-tools;$buildtools_ver\"\n\nCOPY env-android.sh /usr/local/bin/env-android.sh\n\n# Build pkgconfig\nENV ver=0.29.2\nRUN wget https://pkg-config.freedesktop.org/releases/pkg-config-$ver.tar.gz && \\\n        tar xf pkg-config-$ver.tar.gz && rm pkg-config-$ver.tar.gz\n\nSHELL [\"/bin/bash\", \"-c\"]\n\nENV arch=arm\nRUN mkdir -p pkg-config-$ver/build-$arch && \\\n        cd pkg-config-$ver/build-$arch && \\\n        . env-android.sh android-$arch 1 && \\\n        ../configure --disable-host-tool --prefix=$ins_prefix && \\\n        make install -j$(nproc)\n\nENV arch=arm64\nRUN mkdir -p pkg-config-$ver/build-$arch && \\\n        cd pkg-config-$ver/build-$arch && \\\n        . env-android.sh android-$arch 1 && \\\n        ../configure --disable-host-tool --prefix=$ins_prefix && \\\n        make install -j$(nproc)\n\nENV arch=x86\nRUN mkdir -p pkg-config-$ver/build-$arch && \\\n        cd pkg-config-$ver/build-$arch && \\\n        . env-android.sh android-$arch 1 && \\\n        ../configure --disable-host-tool --prefix=$ins_prefix && \\\n        make install -j$(nproc)\n\nENV arch=x86_64\nRUN mkdir -p pkg-config-$ver/build-$arch && \\\n        cd pkg-config-$ver/build-$arch && \\\n        . env-android.sh android-$arch 1 && \\\n        ../configure --disable-host-tool --prefix=$ins_prefix && \\\n        make install -j$(nproc)\n\n# Build eigen3\nENV ver=3.3.7\nRUN wget https://gitlab.com/libeigen/eigen/-/archive/$ver/eigen-$ver.tar.gz && \\\n        tar xf eigen-$ver.tar.gz && rm eigen-$ver.tar.gz\n\nENV arch=arm\nRUN mkdir -p eigen-$ver/build-$arch && \\\n        cd eigen-$ver/build-$arch && \\\n        . env-android.sh android-$arch && \\\n        cmake .. $cmake_flags && \\\n        make install -j$(nproc)\n\nENV arch=arm64\nRUN mkdir -p eigen-$ver/build-$arch && \\\n        cd eigen-$ver/build-$arch && \\\n        . env-android.sh android-$arch && \\\n        cmake .. $cmake_flags && \\\n        make install -j$(nproc)\n\nENV arch=x86\nRUN mkdir -p eigen-$ver/build-$arch && \\\n        cd eigen-$ver/build-$arch && \\\n        . env-android.sh android-$arch && \\\n        cmake .. $cmake_flags && \\\n        make install -j$(nproc)\n\nENV arch=x86_64\nRUN mkdir -p eigen-$ver/build-$arch && \\ \n        cd eigen-$ver/build-$arch && \\\n        . env-android.sh android-$arch && \\\n        cmake .. $cmake_flags && \\\n        make install -j$(nproc)\n\n# Build fftw3\nENV ver=3.3.8\nRUN wget https://www.fftw.org/fftw-$ver.tar.gz && \\\n        tar xf fftw-$ver.tar.gz && rm fftw-$ver.tar.gz\n\nENV arch=arm\nRUN mkdir -p fftw-$ver/build-$arch && \\\n        cd fftw-$ver/build-$arch && \\\n        . env-android.sh android-$arch && \\\n        ../configure --enable-shared --disable-static $configure_flags && \\\n        make install -j$(nproc)\n\nENV arch=arm64\nRUN mkdir -p fftw-$ver/build-$arch && \\\n        cd fftw-$ver/build-$arch && \\\n        . env-android.sh android-$arch && \\\n        ../configure --enable-shared --disable-static $configure_flags && \\\n        make install -j$(nproc)\n\nENV arch=x86\nRUN mkdir -p fftw-$ver/build-$arch && \\\n        cd fftw-$ver/build-$arch && \\\n        . env-android.sh android-$arch && \\\n        ../configure --enable-shared --disable-static $configure_flags && \\\n        make install -j$(nproc)\n\nENV arch=x86_64\nRUN mkdir -p fftw-$ver/build-$arch && \\\n        cd fftw-$ver/build-$arch && \\\n        . env-android.sh android-$arch && \\\n        ../configure --enable-shared --disable-static $configure_flags && \\\n        make install -j$(nproc)\n\n# Build SDL2\nENV SDL2_ver=2.0.12\nRUN wget https://www.libsdl.org/release/SDL2-$SDL2_ver.tar.gz && \\\n        tar xf SDL2-$SDL2_ver.tar.gz && \\\n        ln -s SDL2-$SDL2_ver SDL2 && rm SDL2-$SDL2_ver.tar.gz\n\nRUN cd /SDL2/build-scripts && ./androidbuild.sh org.libsdl /dev/null\nRUN cd /SDL2/build/org.libsdl/app && \\\n        rm -r jni/src && \\\n        ln -s /SDL2_ttf jni && \\\n        $ANDROID_NDK_HOME/ndk-build -j$(nproc)\n\nCOPY android-sdl2 /android-sdl2\n\nENV arch=arm\nRUN cd /SDL2/build/org.libsdl/app && \\\n        . env-android.sh android-$arch && \\\n        mkdir -p $ins_prefix/lib && \\\n        cp libs/$android_abi/* $ins_prefix/lib && \\\n        mkdir -p $ins_prefix/include/SDL2 && \\\n        cp jni/SDL/include/* $ins_prefix/include/SDL2 && \\\n        mkdir -p $ins_prefix/lib/pkgconfig && \\\n        cp /android-sdl2/sdl2.pc $ins_prefix/lib/pkgconfig && \\\n        mkdir -p $ins_prefix/bin && \\\n        cp /android-sdl2/sdl2-config $ins_prefix/bin && \\\n        sed -i -e \"s/@PREFIX@/${ins_prefix//\\//\\\\/}/g\" $ins_prefix/lib/pkgconfig/sdl2.pc && \\\n        sed -i -e \"s/@PREFIX@/${ins_prefix//\\//\\\\/}/g\" -e \"s/@SDL_VERSION@/${SDL2_ver}/g\" $ins_prefix/bin/sdl2-config\n\nENV arch=arm64\nRUN cd /SDL2/build/org.libsdl/app && \\\n        . env-android.sh android-$arch && \\\n        mkdir -p $ins_prefix/lib && \\\n        cp libs/$android_abi/* $ins_prefix/lib && \\\n        mkdir -p $ins_prefix/include/SDL2 && \\\n        cp jni/SDL/include/* $ins_prefix/include/SDL2 && \\\n        mkdir -p $ins_prefix/lib/pkgconfig && \\\n        cp /android-sdl2/sdl2.pc $ins_prefix/lib/pkgconfig && \\\n        mkdir -p $ins_prefix/bin && \\\n        cp /android-sdl2/sdl2-config $ins_prefix/bin && \\\n        sed -i -e \"s/@PREFIX@/${ins_prefix//\\//\\\\/}/g\" $ins_prefix/lib/pkgconfig/sdl2.pc && \\\n        sed -i -e \"s/@PREFIX@/${ins_prefix//\\//\\\\/}/g\" -e \"s/@SDL_VERSION@/${SDL2_ver}/g\" $ins_prefix/bin/sdl2-config\n\nENV arch=x86\nRUN cd /SDL2/build/org.libsdl/app && \\\n        . env-android.sh android-$arch && \\\n        mkdir -p $ins_prefix/lib && \\\n        cp libs/$android_abi/* $ins_prefix/lib && \\\n        mkdir -p $ins_prefix/include/SDL2 && \\\n        cp jni/SDL/include/* $ins_prefix/include/SDL2 && \\\n        mkdir -p $ins_prefix/lib/pkgconfig && \\\n        cp /android-sdl2/sdl2.pc $ins_prefix/lib/pkgconfig && \\\n        mkdir -p $ins_prefix/bin && \\\n        cp /android-sdl2/sdl2-config $ins_prefix/bin && \\\n        sed -i -e \"s/@PREFIX@/${ins_prefix//\\//\\\\/}/g\" $ins_prefix/lib/pkgconfig/sdl2.pc && \\\n        sed -i -e \"s/@PREFIX@/${ins_prefix//\\//\\\\/}/g\" -e \"s/@SDL_VERSION@/${SDL2_ver}/g\" $ins_prefix/bin/sdl2-config\n\nENV arch=x86_64\nRUN cd /SDL2/build/org.libsdl/app && \\\n        . env-android.sh android-$arch && \\\n        mkdir -p $ins_prefix/lib && \\\n        cp libs/$android_abi/* $ins_prefix/lib && \\\n        mkdir -p $ins_prefix/include/SDL2 && \\\n        cp jni/SDL/include/* $ins_prefix/include/SDL2 && \\\n        mkdir -p $ins_prefix/lib/pkgconfig && \\\n        cp /android-sdl2/sdl2.pc $ins_prefix/lib/pkgconfig && \\\n        mkdir -p $ins_prefix/bin && \\\n        cp /android-sdl2/sdl2-config $ins_prefix/bin && \\\n        sed -i -e \"s/@PREFIX@/${ins_prefix//\\//\\\\/}/g\" $ins_prefix/lib/pkgconfig/sdl2.pc && \\\n        sed -i -e \"s/@PREFIX@/${ins_prefix//\\//\\\\/}/g\" -e \"s/@SDL_VERSION@/${SDL2_ver}/g\" $ins_prefix/bin/sdl2-config\n\nENV gver=4.10.2\nRUN wget https://downloads.gradle-dn.com/distributions/gradle-$gver-bin.zip && \\\n        unzip gradle-$gver-bin.zip && \\\n        mv gradle-$gver gradle\n\n# Install recent GLES headers\nRUN mkdir gles-headers && \\\n        cd gles-headers && \\\n        wget https://www.khronos.org/registry/OpenGL/api/GLES3/gl3.h && \\\n        wget https://www.khronos.org/registry/OpenGL/api/GLES2/gl2ext.h && \\\n        for arch in arm arm64 x86 x86_64; do \\\n            mkdir -p /usr/android-$arch/include/GLES3; \\\n            cp gl3.h /usr/android-$arch/include/GLES3 ; \\\n            mkdir -p /usr/android-$arch/include/GLES2; \\\n            cp gl2ext.h /usr/android-$arch/include/GLES2 ; \\\n        done\n\nENV ver=0.9.9.8\nRUN wget https://github.com/g-truc/glm/archive/$ver.tar.gz -O glm.tgz && \\\n        tar xf glm.tgz && rm glm.tgz\nRUN cd glm-$ver && \\\n        for arch in arm arm64 x86 x86_64; do \\\n            cp -r glm /usr/android-$arch/include; \\\n        done\n\nRUN for path in /usr/android-{arm,arm64,x86,x86_64}; do rm -r $path/share/{aclocal,doc,info,man}; done\n\nFROM ubuntu:focal\nCOPY --from=build /android-sdk        /android-sdk\nCOPY --from=build /usr/android-arm    /usr/android-arm\nCOPY --from=build /usr/android-arm64  /usr/android-arm64\nCOPY --from=build /usr/android-x86    /usr/android-x86\nCOPY --from=build /usr/android-x86_64 /usr/android-x86_64\nCOPY --from=build /gradle             /gradle\n\nRUN chmod 1777 /tmp\n\nENV DEBIAN_FRONTEND=noninteractive\nRUN apt-get -y update && \\\n        apt-get -y --no-install-recommends install cmake openjdk-11-jre libglib2.0-dev && rm -rf /var/lib/apt/lists/*;\n\nENV PATH=/gradle/bin:$PATH\nRUN mkdir -p /tmp/gradle\nCOPY android-project/build.gradle /tmp/gradle\nRUN cd /tmp/gradle && gradle --no-daemon\n\nENV android_api=30 ndk_ver=21.3.6528147\nENV ANDROID_HOME=/android-sdk ANDROID_PLATFORM=android-$android_api ANDROID_NDK_HOME=/android-sdk/ndk/$ndk_ver\n\nCOPY env-android.sh /usr/local/bin\nCOPY deploy-android.sh /usr/local/bin\n\nSHELL [\"/bin/bash\", \"-c\"]\nCMD . env-android.sh android-arm && \\\n        cd /build && \\\n        mkdir -p $target && \\\n        cd $target && \\\n        cmake -DCMAKE_BUILD_TYPE=$CMAKE_BUILD_TYPE $cmake_flags /src && \\\n        make -j$(nproc) && \\\n    . env-android.sh android-arm64 && \\\n        cd /build && \\\n        mkdir -p $target && \\\n        cd $target && \\\n        cmake -DCMAKE_BUILD_TYPE=$CMAKE_BUILD_TYPE $cmake_flags /src && \\\n        make -j$(nproc) && \\\n    . env-android.sh android-x86 && \\\n        cd /build && \\\n        mkdir -p $target && \\\n        cd $target && \\\n        cmake -DCMAKE_BUILD_TYPE=$CMAKE_BUILD_TYPE $cmake_flags /src && \\\n        make -j$(nproc) && \\\n    . env-android.sh android-x86_64 && \\\n        cd /build && \\\n        mkdir -p $target && \\\n        cd $target && \\\n        cmake -DCMAKE_BUILD_TYPE=$CMAKE_BUILD_TYPE $cmake_flags /src && \\\n        make -j$(nproc) && \\\n    deploy-android.sh $debug\n"
}