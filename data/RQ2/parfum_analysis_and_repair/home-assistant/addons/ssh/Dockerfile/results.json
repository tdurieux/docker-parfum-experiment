{
  "startTime": 1674215436136,
  "endTime": 1674215436904,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 78,
        "lineEnd": 79,
        "columnStart": 4,
        "columnEnd": 97
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG BUILD_FROM\nFROM $BUILD_FROM\n\n# Setup base\nARG LIBWEBSOCKETS_VERSION\nARG TTYD_VERSION\nRUN \\\n    set -x \\ \n    && apk add --no-cache \\\n        bash-completion \\\n        pulseaudio-utils \\\n        alsa-plugins-pulse \\\n        bluez \\\n        git \\\n        libuv \\\n        mosquitto-clients \\\n        nano \\\n        openssh \\\n        pwgen \\\n        tmux \\\n        vim \\\n    \\\n    && apk add --no-cache --virtual .build-dependencies \\\n        bsd-compat-headers \\\n        build-base \\\n        linux-headers \\\n        cmake \\\n        json-c-dev \\\n        libuv-dev \\\n        openssl-dev \\\n        zlib-dev \\\n    \\\n    && sed -i \"s/ash/bash/\" /etc/passwd \\\n    \\\n    && git clone --branch \"v${LIBWEBSOCKETS_VERSION}\" --depth=1 \\\n        https://github.com/warmcat/libwebsockets.git /tmp/libwebsockets \\\n    \\\n    && mkdir -p /tmp/libwebsockets/build \\\n    && cd /tmp/libwebsockets/build \\\n    && cmake .. \\\n        -DCMAKE_BUILD_TYPE=MinSizeRel \\\n        -DCMAKE_INSTALL_PREFIX=/usr \\\n        -DCMAKE_VERBOSE_MAKEFILE=TRUE \\\n        -DLWS_IPV6=ON \\\n        -DLWS_STATIC_PIC=ON \\\n        -DLWS_UNIX_SOCK=OFF \\\n        -DLWS_WITH_LIBUV=ON \\\n        -DLWS_WITH_SHARED=ON \\\n        -DLWS_WITHOUT_TESTAPPS=ON \\\n    && make \\\n    && make install \\\n    \\\n    && git clone --branch main --single-branch \\\n        https://github.com/tsl0922/ttyd.git /tmp/ttyd \\\n    && git -C /tmp/ttyd checkout \"${TTYD_VERSION}\" \\\n    \\\n    && mkdir -p /tmp/ttyd/build \\\n    && cd /tmp/ttyd/build \\\n    && cmake .. \\\n        -DCMAKE_BUILD_TYPE=MinSizeRel \\\n        -DCMAKE_INSTALL_PREFIX=/usr \\\n        -DCMAKE_VERBOSE_MAKEFILE=TRUE \\\n    && make \\\n    && make install \\\n    \\\n    && apk del --no-cache --purge .build-dependencies \\\n    && rm -f -r \\\n        /root/.cache \\\n        /root/.cmake \\\n        /tmp/*\n\n# Add YAML highlighting for nano\nADD https://raw.githubusercontent.com/scopatz/nanorc/master/yaml.nanorc /usr/share/nano/yaml.nanorc\nRUN sed -i 's/^#[[:space:]]*\\(include \"\\/usr\\/share\\/nano\\/\\*\\.nanorc\".*\\)/\\1/' /etc/nanorc\n\n# Home Assistant CLI\nARG BUILD_ARCH\nARG CLI_VERSION\nRUN curl -f -Lso /usr/bin/ha \\\n        \"https://github.com/home-assistant/cli/releases/download/${CLI_VERSION}/ha_${BUILD_ARCH}\" \\\n    && chmod a+x /usr/bin/ha \\\n    && /usr/bin/ha completion > /usr/share/bash-completion/completions/ha\n\n# Copy data\nCOPY rootfs /\n"
}