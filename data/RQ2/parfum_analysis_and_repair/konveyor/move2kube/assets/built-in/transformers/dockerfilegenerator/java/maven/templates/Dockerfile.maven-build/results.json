{
  "startTime": 1674248320285,
  "endTime": 1674248321393,
  "originalSmells": [
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 4,
        "columnEnd": 41
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM registry.access.redhat.com/ubi8/ubi:latest AS {{ .BuildContainerName }}\nRUN yum install -y {{ .JavaPackageName }} && rm -rf /var/cache/yum\n\n{{- if not .MvnwPresent }}\n# install maven\nRUN mkdir -p /usr/share/maven /usr/share/maven/ref \\\n  && curl -fsSL -o /tmp/apache-maven.tar.gz https://archive.apache.org/dist/maven/maven-3/{{ .MavenVersion }}/binaries/apache-maven-{{ .MavenVersion }}-bin.tar.gz \\\n  && tar -xzf /tmp/apache-maven.tar.gz -C /usr/share/maven --strip-components=1 \\\n  && rm -f /tmp/apache-maven.tar.gz \\\n  && ln -s /usr/share/maven/bin/mvn /usr/bin/mvn\n{{- end }}\n\n{{- if .EnvVariables }}\n\n# environment variables\n{{- range $k, $v := .EnvVariables }}\nENV {{ $k }} {{ $v }}\n{{- end }}\n{{- end }}\n\nWORKDIR /app\n\n{{- if .IsParentPom }}\n# copy everything, including child modules to do a build using the parent pom.xml\nCOPY . .\n{{- else }}\n# copy only the pom and download the dependencies for caching purposes\nCOPY pom.xml .\n{{- end }}\n\n{{- if .MvnwPresent }}\nCOPY mvnw .\nCOPY .mvn .mvn\n{{- else }}\n# generate the maven wrapper script\nRUN mvn wrapper:wrapper\n{{- end }}\n\n{{- if not .IsParentPom }}\nRUN ./mvnw dependency:go-offline\n# copy the source files to do a build\nCOPY . .\n{{- end }}\n\nRUN ./mvnw clean package -Dmaven.test.skip -Dcheckstyle.skip\n{{- if .MavenProfiles }} -P {{$first := true}}{{ range $mp := .MavenProfiles }}{{if $first}}{{$first = false}}{{else}},{{end}}{{$mp}}{{end}} {{- end }}\n"
}