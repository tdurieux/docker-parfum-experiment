{
  "startTime": 1674253713846,
  "endTime": 1674253714534,
  "originalSmells": [
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 73,
        "lineEnd": 73,
        "columnStart": 1,
        "columnEnd": 41
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# NOTE: THIS DOCKERFILE IS GENERATED VIA \"apply-templates.sh\"\n#\n# PLEASE DO NOT EDIT IT DIRECTLY.\n#\n\nFROM buildpack-deps:bullseye-scm\n\n# install cgo-related dependencies\nRUN set -eux; \\\n\tapt-get update; \\\n\tapt-get install -y --no-install-recommends \\\n\t\tg++ \\\n\t\tgcc \\\n\t\tlibc6-dev \\\n\t\tmake \\\n\t\tpkg-config \\\n\t; \\\n\trm -rf /var/lib/apt/lists/*\n\nENV PATH /usr/local/go/bin:$PATH\n\nENV GOLANG_VERSION 1.19rc2\n\nRUN set -eux; \\\n\tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \\\n\turl=; \\\n\tcase \"$arch\" in \\\n\t\t'amd64') \\\n\t\t\turl='https://dl.google.com/go/go1.19rc2.linux-amd64.tar.gz'; \\\n\t\t\tsha256='9130c6f8e87ce9bb4813533a68c3f17c82c7307caf8795d3c9427652b77f81aa'; \\\n\t\t\t;; \\\n\t\t'armel') \\\n\t\t\texport GOARCH='arm' GOARM='5' GOOS='linux'; \\\n\t\t\t;; \\\n\t\t'armhf') \\\n\t\t\turl='https://dl.google.com/go/go1.19rc2.linux-armv6l.tar.gz'; \\\n\t\t\tsha256='83a956703e69dd0a2ce1d4881e6038fb1a292c535c8b7ae80993b2a15708757d'; \\\n\t\t\t;; \\\n\t\t'arm64') \\\n\t\t\turl='https://dl.google.com/go/go1.19rc2.linux-arm64.tar.gz'; \\\n\t\t\tsha256='9260d3d8db973e2afd0b53f70ebb2f977f3716660de02a0ca4a14667fab2c658'; \\\n\t\t\t;; \\\n\t\t'i386') \\\n\t\t\turl='https://dl.google.com/go/go1.19rc2.linux-386.tar.gz'; \\\n\t\t\tsha256='6d7b02ba7c008f38ebb9ab78c137c6b7a2fd7cd6badefcc2a008cc45cc6501a2'; \\\n\t\t\t;; \\\n\t\t'mips64el') \\\n\t\t\texport GOARCH='mips64le' GOOS='linux'; \\\n\t\t\t;; \\\n\t\t'ppc64el') \\\n\t\t\turl='https://dl.google.com/go/go1.19rc2.linux-ppc64le.tar.gz'; \\\n\t\t\tsha256='b4edcd4780018b479220c65a12e149c9b95b2062cbdba47432b09f96b3de37f0'; \\\n\t\t\t;; \\\n\t\t's390x') \\\n\t\t\turl='https://dl.google.com/go/go1.19rc2.linux-s390x.tar.gz'; \\\n\t\t\tsha256='a017b5c227bc6cc6e191d66a2e5f00737f1a6163e07416cee39c98af6118fea8'; \\\n\t\t\t;; \\\n\t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \\\n\tesac; \\\n\tbuild=; \\\n\tif [ -z \"$url\" ]; then \\\n# https://github.com/golang/go/issues/38536#issuecomment-616897960\n\t\tbuild=1; \\\n\t\turl='https://dl.google.com/go/go1.19rc2.src.tar.gz'; \\\n\t\tsha256='c68d7019a6a0b9852ae0e96d7e7deb772492a23272fd6d13afe05b40c912e51b'; \\\n\t\techo >&2; \\\n\t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \\\n\t\techo >&2; \\\n\tfi; \\\n\n\twget -O go.tgz.asc \"$url.asc\"; \\\n\twget -O go.tgz \"$url\" --progress=dot:giga; \\\n\techo \"$sha256  *go.tgz\" | sha256sum -c -; \\\n\n# https://github.com/golang/go/issues/14739#issuecomment-324767697\n\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \\\n# https://www.google.com/linuxrepositories/\n\tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \\\n# let's also fetch the specific subkey of that key explicitly that we expect \"go.tgz.asc\" to be signed by, just to make sure we definitely have it\n\tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \\\n\tgpg --batch --verify go.tgz.asc go.tgz; \\\n\tgpgconf --kill all; \\\n\trm -rf \"$GNUPGHOME\" go.tgz.asc; \\\n\n\ttar -C /usr/local -xzf go.tgz; \\\n\trm go.tgz; \\\n\n\tif [ -n \"$build\" ]; then \\\n\t\tsavedAptMark=\"$(apt-mark showmanual)\"; \\\n\t\tapt-get update; \\\n\t\tapt-get install -y --no-install-recommends golang-go; \\\n\t\t\\\n\t\texport GOCACHE='/tmp/gocache'; \\\n\t\t\\\n\t\t( \\\n\t\t\tcd /usr/local/go/src; \\\n# set GOROOT_BOOTSTRAP + GOHOST* such that we can build Go successfully\n\t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \\\n\t\t\t./make.bash; \\\n\t\t); \\\n\t\t\\\n\t\tapt-mark auto '.*' > /dev/null; \\\n\t\tapt-mark manual $savedAptMark > /dev/null; \\\n\t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \\\n\t\trm -rf /var/lib/apt/lists/*; \\\n\t\t\\\n# remove a few intermediate / bootstrapping files the official binary release tarballs do not contain\n\t\trm -rf \\\n\t\t\t/usr/local/go/pkg/*/cmd \\\n\t\t\t/usr/local/go/pkg/bootstrap \\\n\t\t\t/usr/local/go/pkg/obj \\\n\t\t\t/usr/local/go/pkg/tool/*/api \\\n\t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \\\n\t\t\t/usr/local/go/src/cmd/dist/dist \\\n\t\t\t\"$GOCACHE\" \\\n\t\t; \\\n\tfi; \\\n\n\tgo version\n\nENV GOPATH /go\nENV PATH $GOPATH/bin:$PATH\nRUN mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\"\nWORKDIR $GOPATH\n"
}