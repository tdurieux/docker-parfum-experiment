{
  "startTime": 1674249045288,
  "endTime": 1674249046360,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 1,
        "columnEnd": 68
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# NOTE: THIS DOCKERFILE IS GENERATED VIA \"apply-templates.sh\"\n#\n# PLEASE DO NOT EDIT IT DIRECTLY.\n#\n\nFROM php:7.4-alpine\n\n# install wp-cli dependencies\nRUN apk add --no-cache \\\n# bash is needed for 'wp shell': https://github.com/wp-cli/shell-command/blob/b8dafcc2a2eba5732fdee70be077675a302848e9/src/WP_CLI/REPL.php#L104\n\t\tbash \\\n\t\tless \\\n\t\tmysql-client\n\nRUN set -ex; \\\n\tmkdir -p /var/www/html; \\\n\tchown -R www-data:www-data /var/www/html\nWORKDIR /var/www/html\n\n# install the PHP extensions we need (https://make.wordpress.org/hosting/handbook/handbook/server-environment/#php-extensions)\nRUN set -ex; \\\n\n\tapk add --no-cache --virtual .build-deps \\\n\t\t$PHPIZE_DEPS \\\n\t\tfreetype-dev \\\n\t\ticu-dev \\\n\t\timagemagick-dev \\\n\t\tlibjpeg-turbo-dev \\\n\t\tlibpng-dev \\\n\t\tlibwebp-dev \\\n\t\tlibzip-dev \\\n\t; \\\n\n\tdocker-php-ext-configure gd \\\n\t\t--with-freetype \\\n\t\t--with-jpeg \\\n\t\t--with-webp \\\n\t; \\\n\tdocker-php-ext-install -j \"$(nproc)\" \\\n\t\tbcmath \\\n\t\texif \\\n\t\tgd \\\n\t\tintl \\\n\t\tmysqli \\\n\t\tzip \\\n\t; \\\n# WARNING: imagick is likely not supported on Alpine: https://github.com/Imagick/imagick/issues/328\n# https://pecl.php.net/package/imagick\n\tpecl install imagick-3.6.0; \\\n\tdocker-php-ext-enable imagick; \\\n\trm -r /tmp/pear; \\\n\n# some misbehaving extensions end up outputting to stdout ðŸ™ˆ (https://github.com/docker-library/wordpress/issues/669#issuecomment-993945967)\n\tout=\"$(php -r 'exit(0);')\"; \\\n\t[ -z \"$out\" ]; \\\n\terr=\"$(php -r 'exit(0);' 3>&1 1>&2 2>&3)\"; \\\n\t[ -z \"$err\" ]; \\\n\n\textDir=\"$(php -r 'echo ini_get(\"extension_dir\");')\"; \\\n\t[ -d \"$extDir\" ]; \\\n\trunDeps=\"$( \\\n\t\tscanelf --needed --nobanner --format '%n#p' --recursive \"$extDir\" \\\n\t\t\t| tr ',' '\\n' \\\n\t\t\t| sort -u \\\n\t\t\t| awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \\\n\t)\"; \\\n\tapk add --no-cache --no-network --virtual .wordpress-phpexts-rundeps $runDeps; \\\n\tapk del --no-network .build-deps; \\\n\n\t! { ldd \"$extDir\"/*.so | grep 'not found'; }; \\\n# check for output like \"PHP Warning:  PHP Startup: Unable to load dynamic library 'foo' (tried: ...)\n\terr=\"$(php --version 3>&1 1>&2 2>&3)\"; \\\n\t[ -z \"$err\" ]\n\n# set recommended PHP.ini settings\n# excluding opcache due https://github.com/docker-library/wordpress/issues/407\n# https://wordpress.org/support/article/editing-wp-config-php/#configure-error-logging\nRUN { \\\n# https://www.php.net/manual/en/errorfunc.constants.php\n# https://github.com/docker-library/wordpress/issues/420#issuecomment-517839670\n\t\techo 'error_reporting = E_ERROR | E_WARNING | E_PARSE | E_CORE_ERROR | E_CORE_WARNING | E_COMPILE_ERROR | E_COMPILE_WARNING | E_RECOVERABLE_ERROR'; \\\n\t\techo 'display_errors = Off'; \\\n\t\techo 'display_startup_errors = Off'; \\\n\t\techo 'log_errors = On'; \\\n\t\techo 'error_log = /dev/stderr'; \\\n\t\techo 'log_errors_max_len = 1024'; \\\n\t\techo 'ignore_repeated_errors = On'; \\\n\t\techo 'ignore_repeated_source = Off'; \\\n\t\techo 'html_errors = Off'; \\\n\t} > /usr/local/etc/php/conf.d/error-logging.ini\n\n# https://make.wordpress.org/cli/2018/05/31/gpg-signature-change/\n# pub   rsa2048 2018-05-31 [SC]\n#       63AF 7AA1 5067 C056 16FD  DD88 A3A2 E8F2 26F0 BC06\n# uid           [ unknown] WP-CLI Releases <releases@wp-cli.org>\n# sub   rsa2048 2018-05-31 [E]\nENV WORDPRESS_CLI_GPG_KEY 63AF7AA15067C05616FDDD88A3A2E8F226F0BC06\n\nENV WORDPRESS_CLI_VERSION 2.6.0\nENV WORDPRESS_CLI_SHA512 d73f9161a1f03b8ecaac7b196b6051fe847b3c402b9c92b1f6f3acbe5b1cf91f7260c0e499b8947bab75920ecec918b39533ca65fa5a1fd3eb6ce7b8e2c58e7d\n\nRUN set -ex; \\\n\t\\\n\tapk add --no-cache --virtual .fetch-deps \\\n\t\tgnupg \\\n\t; \\\n\t\\\n\tcurl -o /usr/local/bin/wp.gpg -fL \"https://github.com/wp-cli/wp-cli/releases/download/v${WORDPRESS_CLI_VERSION}/wp-cli-${WORDPRESS_CLI_VERSION}.phar.gpg\"; \\\n\t\\\n\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \\\n\tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$WORDPRESS_CLI_GPG_KEY\"; \\\n\tgpg --batch --decrypt --output /usr/local/bin/wp /usr/local/bin/wp.gpg; \\\n\tgpgconf --kill all; \\\n\trm -rf \"$GNUPGHOME\" /usr/local/bin/wp.gpg; unset GNUPGHOME; \\\n\t\\\n\techo \"$WORDPRESS_CLI_SHA512 */usr/local/bin/wp\" | sha512sum -c -; \\\n\tchmod +x /usr/local/bin/wp; \\\n\t\\\n\tapk del --no-network .fetch-deps; \\\n\t\\\n\twp --allow-root --version\n\nVOLUME /var/www/html\n\nCOPY docker-entrypoint.sh /usr/local/bin/\n\nENTRYPOINT [\"docker-entrypoint.sh\"]\nUSER www-data\nCMD [\"wp\", \"shell\"]\n"
}