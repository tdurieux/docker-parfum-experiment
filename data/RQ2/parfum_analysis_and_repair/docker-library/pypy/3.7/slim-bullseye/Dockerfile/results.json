{
  "startTime": 1674255276444,
  "endTime": 1674255277948,
  "originalSmells": [
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 1,
        "columnEnd": 61
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 126,
        "lineEnd": 126,
        "columnStart": 1,
        "columnEnd": 74
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# NOTE: THIS DOCKERFILE IS GENERATED VIA \"apply-templates.sh\"\n#\n# PLEASE DO NOT EDIT IT DIRECTLY.\n#\n\nFROM debian:bullseye-slim\n\nRUN set -eux; \\\n\tapt-get update; \\\n\tapt-get install -y --no-install-recommends ca-certificates; \\\n\trm -rf /var/lib/apt/lists/*\n\n# http://bugs.python.org/issue19846\n# > At the moment, setting \"LANG=C\" on a Linux system *fundamentally breaks Python 3*, and that's not OK.\nENV LANG C.UTF-8\n\n# ensure local pypy3 is preferred over distribution pypy3\nENV PATH /opt/pypy/bin:$PATH\n\n# Python 3.7.13\nENV PYPY_VERSION 7.3.9\n\nRUN set -eux; \\\n\n\tdpkgArch=\"$(dpkg --print-architecture)\"; \\\n\tcase \"${dpkgArch##*-}\" in \\\n\t\t'amd64') \\\n\t\t\turl='https://downloads.python.org/pypy/pypy3.7-v7.3.9-linux64.tar.bz2'; \\\n\t\t\tsha256='c58195124d807ecc527499ee19bc511ed753f4f2e418203ca51bc7e3b124d5d1'; \\\n\t\t\t;; \\\n\t\t'arm64') \\\n\t\t\turl='https://downloads.python.org/pypy/pypy3.7-v7.3.9-aarch64.tar.bz2'; \\\n\t\t\tsha256='dfc62f2c453fb851d10a1879c6e75c31ffebbf2a44d181bb06fcac4750d023fc'; \\\n\t\t\t;; \\\n\t\t'i386') \\\n\t\t\turl='https://downloads.python.org/pypy/pypy3.7-v7.3.9-linux32.tar.bz2'; \\\n\t\t\tsha256='3398cece0167b81baa219c9cd54a549443d8c0a6b553ec8ec13236281e0d86cd'; \\\n\t\t\t;; \\\n\t\t's390x') \\\n\t\t\turl='https://downloads.python.org/pypy/pypy3.7-v7.3.9-s390x.tar.bz2'; \\\n\t\t\tsha256='fcab3b9e110379948217cf592229542f53c33bfe881006f95ce30ac815a6df48'; \\\n\t\t\t;; \\\n\t\t*) echo >&2 \"error: current architecture ($dpkgArch) does not have a corresponding PyPy $PYPY_VERSION binary release\"; exit 1 ;; \\\n\tesac; \\\n\n\tsavedAptMark=\"$(apt-mark showmanual)\"; \\\n\tapt-get update; \\\n\tapt-get install -y --no-install-recommends \\\n\t\tbzip2 \\\n\t\twget \\\n# sometimes \"pypy3\" itself is linked against libexpat1 / libncurses5, sometimes they're \".so\" files in \"/opt/pypy/lib_pypy\"\n\t\tlibexpat1 \\\n\t\tlibncurses5 \\\n\t\tlibncursesw6 \\\n\t\tlibsqlite3-0 \\\n# (so we'll add them temporarily, then use \"ldd\" later to determine which to keep based on usage per architecture)\n\t; \\\n\n\twget -O pypy.tar.bz2 \"$url\" --progress=dot:giga; \\\n\techo \"$sha256  *pypy.tar.bz2\" | sha256sum --check --strict -; \\\n\tmkdir /opt/pypy; \\\n\ttar -xjC /opt/pypy --strip-components=1 -f pypy.tar.bz2; \\\n\tfind /opt/pypy/lib* -depth -type d -a \\( -name test -o -name tests \\) -exec rm -rf '{}' +; \\\n\trm pypy.tar.bz2; \\\n\n\tln -sv '/opt/pypy/bin/pypy3' /usr/local/bin/; \\\n\n# smoke test\n\tpypy3 --version; \\\n\n\tcd /opt/pypy/lib_pypy; \\\n# on pypy3, rebuild gdbm ffi bits for compatibility with Debian Stretch+\n\tif [ -f _gdbm_build.py ]; then \\\n\t\tapt-get install -y --no-install-recommends gcc libc6-dev libgdbm-dev; \\\n\t\tpypy3 _gdbm_build.py; \\\n\tfi; \\\n# https://github.com/docker-library/pypy/issues/24#issuecomment-409408657\n\tif [ -f _ssl_build.py ]; then \\\n\t\tapt-get install -y --no-install-recommends gcc libc6-dev libssl-dev; \\\n\t\tpypy3 _ssl_build.py; \\\n\tfi; \\\n# https://github.com/docker-library/pypy/issues/42\n\tif [ -f _lzma_build.py ]; then \\\n\t\tapt-get install -y --no-install-recommends gcc libc6-dev liblzma-dev; \\\n\t\tpypy3 _lzma_build.py; \\\n\tfi; \\\n# https://github.com/docker-library/pypy/issues/68\n\tif [ -f _sqlite3_build.py ]; then \\\n\t\tapt-get install -y --no-install-recommends gcc libc6-dev libsqlite3-dev; \\\n\t\tpypy3 _sqlite3_build.py; \\\n\tfi; \\\n# TODO rebuild other cffi modules here too? (other _*_build.py files)\n\n\tapt-mark auto '.*' > /dev/null; \\\n\t[ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark > /dev/null; \\\n\tfind /opt/pypy -type f -executable -exec ldd '{}' ';' \\\n\t\t| awk '/=>/ { print $(NF-1) }' \\\n\t\t| sort -u \\\n\t\t| xargs -r dpkg-query --search \\\n\t\t| cut -d: -f1 \\\n\t\t| sort -u \\\n\t\t| xargs -r apt-mark manual \\\n\t; \\\n\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \\\n\trm -rf /var/lib/apt/lists/*; \\\n# smoke test again, to be sure\n\tpypy3 --version; \\\n\n\tfind /opt/pypy -depth \\\n\t\t\\( \\\n\t\t\t\\( -type d -a \\( -name test -o -name tests \\) \\) \\\n\t\t\t-o \\\n\t\t\t\\( -type f -a \\( -name '*.pyc' -o -name '*.pyo' \\) \\) \\\n\t\t\\) -exec rm -rf '{}' +\n\n# https://github.com/pypa/get-pip\nENV PYTHON_GET_PIP_URL https://github.com/pypa/get-pip/raw/3843bff3a0a61da5b63ea0b7d34794c5c51a2f11/get-pip.py\nENV PYTHON_GET_PIP_SHA256 95c5ee602b2f3cc50ae053d716c3c89bea62c58568f64d7d25924d399b2d5218\n\nRUN set -ex; \\\n\tapt-get update; \\\n\tapt-get install -y --no-install-recommends wget; \\\n\trm -rf /var/lib/apt/lists/*; \\\n\n\twget -O get-pip.py \"$PYTHON_GET_PIP_URL\"; \\\n\techo \"$PYTHON_GET_PIP_SHA256  *get-pip.py\" | sha256sum --check --strict -; \\\n\n\tpipVersion=\"$(pypy3 -c 'import ensurepip; print(ensurepip._PIP_VERSION)')\"; \\\n\tsetuptoolsVersion=\"$(pypy3 -c 'import ensurepip; print(ensurepip._SETUPTOOLS_VERSION)')\"; \\\n\n\tpypy3 get-pip.py \\\n\t\t--disable-pip-version-check \\\n\t\t--no-cache-dir \\\n\t\t\"pip == $pipVersion\" \\\n\t\t\"setuptools == $setuptoolsVersion\" \\\n\t; \\\n\tapt-get purge -y --auto-remove wget; \\\n# smoke test\n\tpip --version; \\\n\n\tfind /opt/pypy -depth \\\n\t\t\\( \\\n\t\t\t\\( -type d -a \\( -name test -o -name tests \\) \\) \\\n\t\t\t-o \\\n\t\t\t\\( -type f -a \\( -name '*.pyc' -o -name '*.pyo' \\) \\) \\\n\t\t\\) -exec rm -rf '{}' +; \\\n\trm -f get-pip.py\n\nCMD [\"pypy3\"]\n"
}