{
  "startTime": 1674216872109,
  "endTime": 1674216874259,
  "originalSmells": [
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 1,
        "columnEnd": 72
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 81,
        "lineEnd": 81,
        "columnStart": 1,
        "columnEnd": 126
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 122,
        "lineEnd": 122,
        "columnStart": 1,
        "columnEnd": 55
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 100,
        "lineEnd": 104,
        "columnStart": 1,
        "columnEnd": 2
      }
    }
  ],
  "repairedDockerfile": "#\n# NOTE: THIS DOCKERFILE IS GENERATED VIA \"apply-templates.sh\"\n#\n# PLEASE DO NOT EDIT IT DIRECTLY.\n#\n\nFROM alpine:3.15\n\nRUN set -eux; \\\n\tapk add --no-cache \\\n\t\tbzip2 \\\n\t\tca-certificates \\\n\t\tgmp-dev \\\n\t\tlibffi-dev \\\n\t\tprocps \\\n\t\tyaml-dev \\\n\t\tzlib-dev \\\n\t;\n\n# skip installing gem documentation\nRUN set -eux; \\\n\tmkdir -p /usr/local/etc; \\\n\t{ \\\n\t\techo 'install: --no-document'; \\\n\t\techo 'update: --no-document'; \\\n\t} >> /usr/local/etc/gemrc\n\nENV LANG C.UTF-8\nENV RUBY_MAJOR 3.0\nENV RUBY_VERSION 3.0.4\nENV RUBY_DOWNLOAD_SHA256 8e22fc7304520435522253210ed0aa9a50545f8f13c959fe01a05aea06bef2f0\n\n# some of ruby's build scripts are written in ruby\n#   we purge system ruby later to make sure our final image uses what we just built\nRUN set -eux; \\\n\n# readline-dev vs libedit-dev: https://bugs.ruby-lang.org/issues/11869 and https://github.com/docker-library/ruby/issues/75\n\tapk add --no-cache --virtual .ruby-builddeps \\\n\t\tautoconf \\\n\t\tbison \\\n\t\tbzip2 \\\n\t\tbzip2-dev \\\n\t\tca-certificates \\\n\t\tcoreutils \\\n\t\tdpkg-dev dpkg \\\n\t\tg++ \\\n\t\tgcc \\\n\t\tgdbm-dev \\\n\t\tglib-dev \\\n\t\tlibc-dev \\\n\t\tlibffi-dev \\\n\t\tlibxml2-dev \\\n\t\tlibxslt-dev \\\n\t\tlinux-headers \\\n\t\tmake \\\n\t\tncurses-dev \\\n\t\topenssl \\\n\t\topenssl-dev \\\n\t\tpatch \\\n\t\tprocps \\\n\t\treadline-dev \\\n\t\truby \\\n\t\ttar \\\n\t\txz \\\n\t\tyaml-dev \\\n\t\tzlib-dev \\\n\t; \\\n\n\twget -O ruby.tar.xz \"https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz\"; \\\n\techo \"$RUBY_DOWNLOAD_SHA256  *ruby.tar.xz\" | sha256sum --check --strict; \\\n\n\tmkdir -p /usr/src/ruby; \\\n\ttar -xJf ruby.tar.xz -C /usr/src/ruby --strip-components=1; \\\n\trm ruby.tar.xz; \\\n\n\tcd /usr/src/ruby; \\\n\n# https://github.com/docker-library/ruby/issues/196\n# https://bugs.ruby-lang.org/issues/14387#note-13 (patch source)\n# https://bugs.ruby-lang.org/issues/14387#note-16 (\"Therefore ncopa's patch looks good for me in general.\" -- only breaks glibc which doesn't matter here)\n\twget -O 'thread-stack-fix.patch' 'https://bugs.ruby-lang.org/attachments/download/7081/0001-thread_pthread.c-make-get_main_stack-portable-on-lin.patch'; \\\n\techo '3ab628a51d92fdf0d2b5835e93564857aea73e0c1de00313864a94a6255cb645  *thread-stack-fix.patch' | sha256sum --check --strict; \\\n\tpatch -p1 -i thread-stack-fix.patch; \\\n\trm thread-stack-fix.patch; \\\n\n# the configure script does not detect isnan/isinf as macros\n\texport ac_cv_func_isnan=yes ac_cv_func_isinf=yes; \\\n\n# hack in \"ENABLE_PATH_CHECK\" disabling to suppress:\n#   warning: Insecure world writable dir\n\t{ \\\n\t\techo '#define ENABLE_PATH_CHECK 0'; \\\n\t\techo; \\\n\t\tcat file.c; \\\n\t} > file.c.new; \\\n\tmv file.c.new file.c; \\\n\n\tautoconf; \\\n\t# fix builds on arm32v6/7 and s390x: https://github.com/docker-library/ruby/issues/308\n\t# and don't break the other arches: https://github.com/docker-library/ruby/issues/365\n\tapkArch=\"$(apk --print-arch)\"; \\\n\tcase \"$apkArch\" in \\\n\t\ts390x | armhf | armv7) \\\n\t\t\tapk add --no-cache libucontext-dev; \\\n\t\t\texport LIBS='-lucontext'; \\\n\t\t\t;; \\\n\tesac; \\\n\tgnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"; \\\n\t./configure \\\n\t\t--build=\"$gnuArch\" \\\n\t\t--disable-install-doc \\\n\t\t--enable-shared \\\n\t; \\\n\tmake -j \"$(nproc)\"; \\\n\tmake install; \\\n\n\trunDeps=\"$( \\\n\t\tscanelf --needed --nobanner --format '%n#p' --recursive /usr/local \\\n\t\t\t| tr ',' '\\n' \\\n\t\t\t| sort -u \\\n\t\t\t| awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \\\n\t)\"; \\\n\tapk add --no-cache --no-network --virtual .ruby-rundeps $runDeps; \\\n\tapk del --no-network .ruby-builddeps; \\\n\n\tcd /; \\\n\trm -r /usr/src/ruby; \\\n# verify we have no \"ruby\" packages installed\n\tif \\\n\t\tapk --no-network list --installed \\\n\t\t\t| grep -v '^[.]ruby-rundeps' \\\n\t\t\t| grep -i ruby \\\n\t; then \\\n\t\texit 1; \\\n\tfi; \\\n\t[ \"$(command -v ruby)\" = '/usr/local/bin/ruby' ]; \\\n# rough smoke test\n\truby --version; \\\n\tgem --version; \\\n\tbundle --version\n\n# don't create \".bundle\" in all our apps\nENV GEM_HOME /usr/local/bundle\nENV BUNDLE_SILENCE_ROOT_WARNING=1 \\\n\tBUNDLE_APP_CONFIG=\"$GEM_HOME\"\nENV PATH $GEM_HOME/bin:$PATH\n# adjust permissions of a few directories for running \"gem install\" as an arbitrary user\nRUN mkdir -p \"$GEM_HOME\" && chmod 777 \"$GEM_HOME\"\n\nCMD [ \"irb\" ]\n"
}