{
  "startTime": 1674250100425,
  "endTime": 1674250101325,
  "originalSmells": [
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 1,
        "columnEnd": 72
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# NOTE: THIS DOCKERFILE IS GENERATED VIA \"apply-templates.sh\"\n#\n# PLEASE DO NOT EDIT IT DIRECTLY.\n#\n\nFROM buildpack-deps:buster\n\n# skip installing gem documentation\nRUN set -eux; \\\n\tmkdir -p /usr/local/etc; \\\n\t{ \\\n\t\techo 'install: --no-document'; \\\n\t\techo 'update: --no-document'; \\\n\t} >> /usr/local/etc/gemrc\n\nENV LANG C.UTF-8\nENV RUBY_MAJOR 3.1\nENV RUBY_VERSION 3.1.2\nENV RUBY_DOWNLOAD_SHA256 ca10d017f8a1b6d247556622c841fc56b90c03b1803f87198da1e4fd3ec3bf2a\n\n# some of ruby's build scripts are written in ruby\n#   we purge system ruby later to make sure our final image uses what we just built\nRUN set -eux; \\\n\n\tsavedAptMark=\"$(apt-mark showmanual)\"; \\\n\tapt-get update; \\\n\tapt-get install -y --no-install-recommends \\\n\t\tbison \\\n\t\tdpkg-dev \\\n\t\tlibgdbm-dev \\\n\t\truby \\\n\t; \\\n\trm -rf /var/lib/apt/lists/*; \\\n\n\twget -O ruby.tar.xz \"https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz\"; \\\n\techo \"$RUBY_DOWNLOAD_SHA256  *ruby.tar.xz\" | sha256sum --check --strict; \\\n\n\tmkdir -p /usr/src/ruby; \\\n\ttar -xJf ruby.tar.xz -C /usr/src/ruby --strip-components=1; \\\n\trm ruby.tar.xz; \\\n\n\tcd /usr/src/ruby; \\\n\n# hack in \"ENABLE_PATH_CHECK\" disabling to suppress:\n#   warning: Insecure world writable dir\n\t{ \\\n\t\techo '#define ENABLE_PATH_CHECK 0'; \\\n\t\techo; \\\n\t\tcat file.c; \\\n\t} > file.c.new; \\\n\tmv file.c.new file.c; \\\n\n\tautoconf; \\\n\tgnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"; \\\n\t./configure \\\n\t\t--build=\"$gnuArch\" \\\n\t\t--disable-install-doc \\\n\t\t--enable-shared \\\n\t; \\\n\tmake -j \"$(nproc)\"; \\\n\tmake install; \\\n\n\tapt-mark auto '.*' > /dev/null; \\\n\tapt-mark manual $savedAptMark > /dev/null; \\\n\tfind /usr/local -type f -executable -not \\( -name '*tkinter*' \\) -exec ldd '{}' ';' \\\n\t\t| awk '/=>/ { print $(NF-1) }' \\\n\t\t| sort -u \\\n\t\t| grep -vE '^/usr/local/lib/' \\\n\t\t| xargs -r dpkg-query --search \\\n\t\t| cut -d: -f1 \\\n\t\t| sort -u \\\n\t\t| xargs -r apt-mark manual \\\n\t; \\\n\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \\\n\n\tcd /; \\\n\trm -r /usr/src/ruby; \\\n# verify we have no \"ruby\" packages installed\n\tif dpkg -l | grep -i ruby; then exit 1; fi; \\\n\t[ \"$(command -v ruby)\" = '/usr/local/bin/ruby' ]; \\\n# rough smoke test\n\truby --version; \\\n\tgem --version; \\\n\tbundle --version\n\n# don't create \".bundle\" in all our apps\nENV GEM_HOME /usr/local/bundle\nENV BUNDLE_SILENCE_ROOT_WARNING=1 \\\n\tBUNDLE_APP_CONFIG=\"$GEM_HOME\"\nENV PATH $GEM_HOME/bin:$PATH\n# adjust permissions of a few directories for running \"gem install\" as an arbitrary user\nRUN mkdir -p \"$GEM_HOME\" && chmod 777 \"$GEM_HOME\"\n\nCMD [ \"irb\" ]\n"
}