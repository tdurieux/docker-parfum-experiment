{
  "startTime": 1674255291717,
  "endTime": 1674255292975,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 149
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 23,
        "columnStart": 36,
        "columnEnd": 21
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 23,
        "columnStart": 36,
        "columnEnd": 21
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM golang:1.18.3\n\n#\n# IMPORTANT: This Dockerfile is used for testing, I do not recommend deploying\n#            Sliver using this container configuration! However, if you do want\n#            a Docker deployment this is probably a good place to start.\n#\n\nENV PROTOC_VER 3.19.4\nENV PROTOC_GEN_GO_VER v1.27.1\nENV GRPC_GO v1.2.0\n\n# Base packages\nRUN apt-get update --fix-missing && apt-get -y --no-install-recommends install \\\n    git build-essential zlib1g zlib1g-dev \\\n    libxml2 libxml2-dev libxslt-dev locate curl \\\n    libreadline6-dev libcurl4-openssl-dev git-core \\\n    libssl-dev libyaml-dev openssl autoconf libtool \\\n    ncurses-dev bison curl wget xsel postgresql \\\n    postgresql-contrib postgresql-client libpq-dev \\\n    libapr1 libaprutil1 libsvn1 \\\n    libpcap-dev libsqlite3-dev libgmp3-dev \\\n    zip unzip mingw-w64 binutils-mingw-w64 g++-mingw-w64 \\\n    nasm gcc-multilib && rm -rf /var/lib/apt/lists/*;\n\n#\n# > User\n#\nRUN groupadd -g 999 sliver && useradd -r -u 999 -g sliver sliver\nRUN mkdir -p /home/sliver/ && chown -R sliver:sliver /home/sliver\n\n#\n# > Metasploit\n#\nRUN curl -f https://raw.githubusercontent.com/rapid7/metasploit-omnibus/master/config/templates/metasploit-framework-wrappers/msfupdate.erb > msfinstall \\\n    && chmod 755 msfinstall \\\n    && ./msfinstall\nRUN mkdir -p ~/.msf4/ && touch ~/.msf4/initial_setup_complete \\\n    &&  su -l sliver -c 'mkdir -p ~/.msf4/ && touch ~/.msf4/initial_setup_complete'\n\n#\n# > Sliver\n#\n\n# Protoc\nWORKDIR /tmp\nRUN wget -O protoc-${PROTOC_VER}-linux-x86_64.zip https://github.com/protocolbuffers/protobuf/releases/download/v${PROTOC_VER}/protoc-${PROTOC_VER}-linux-x86_64.zip \\\n    && unzip protoc-${PROTOC_VER}-linux-x86_64.zip \\\n    && cp -vv ./bin/protoc /usr/local/bin\nRUN go install google.golang.org/protobuf/cmd/protoc-gen-go@${PROTOC_GEN_GO_VER} \\\n    && go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@${GRPC_GO}\n\n# Go assets\nWORKDIR /go/src/github.com/bishopfox/sliver\nADD ./go-assets.sh /go/src/github.com/bishopfox/sliver/go-assets.sh\nRUN ./go-assets.sh\n\n# Compile sliver server\nADD . /go/src/github.com/bishopfox/sliver/\nRUN make \\\n    && cp -vv sliver-server /opt/sliver-server \\\n    && /opt/sliver-server unpack --force\n\n# Run unit tests\nRUN /go/src/github.com/bishopfox/sliver/go-tests.sh\n\n# Clean up\nRUN make clean \\\n    && rm -rf /go/src/* \\\n    && rm -rf /home/sliver/.sliver\n\nUSER sliver\nWORKDIR /home/sliver/\nENTRYPOINT [ \"/opt/sliver-server\" ]\n"
}