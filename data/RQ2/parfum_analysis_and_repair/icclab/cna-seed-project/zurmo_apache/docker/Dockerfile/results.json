{
  "startTime": 1674217627200,
  "endTime": 1674217628878,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 2,
        "columnEnd": 44
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 111
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 35
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:14.04\n\n# Install base packages\nENV DEBIAN_FRONTEND noninteractive\nRUN apt-get update && \\\n    apt-get -yq upgrade && \\\n    apt-get -yq --no-install-recommends install \\\n        mysql-client \\\n        apache2 \\\n        libapache2-mod-php5 \\\n        php5-apcu \\\n        php5-cli \\\n        php5-curl \\\n        php5-gd \\\n        php5-mcrypt \\\n        php5-mongo \\\n        php5-mysql \\\n        php5-intl \\\n        php5-json \\\n        php5-xsl \\\n\tphp5-memcache \\\n\tphp-apc \\\n\tphp-soap \\\n\tphp5-imap \\\n\tphp-pear \\\n\tphp5-dev \\\n\tcollectd \\\n        git curl zip unzip vim wget && \\\n    rm -rf /var/lib/apt/lists/*\n\nENV PATH $PATH:/usr/local/composer/vendor/bin\n\n# Add apache default vhost configuration\nADD default-vhost.conf /etc/apache2/sites-available/000-default.conf\n\nADD set_data_permissions.sh /\nADD install_xdebug.sh /install_xdebug.sh\nADD set_debug.sh /\nADD php.ini /etc/php5/apache2/php.ini\nADD debug_php.ini /etc/php5/apache2/debug_php.ini\nADD my.cnf /etc/mysql/my.cnf\nADD 000-default.conf /etc/apache2/sites-enabled/000-default.conf\nADD apache2.conf /etc/apache2/apache2.conf\nRUN /install_xdebug.sh && mkdir /tmp/xdebug_profiling\nADD collectd.conf /collectd.conf\n\n# Enable apache modules\n# Enable php modules\nRUN a2enmod rewrite php5 vhost_alias headers unique_id && \\\n  php5enmod apcu curl gd mcrypt mongo mysql intl json imap xsl overrides/99 && \\\n\n# Install composer and drush \\\n port -f COM OSER_HOME=/usr/local/composer && \\\n  rl -sS https://getcomposer.org/installer | php -- \\\n    composer global require dr \\\n    composer global ins al \\\n    composer selfupdate && \\\n    composer global require phpunit/phpunit \"3.*\" && \\\n    composer global require phpunit/phpunit-sto y \\\n    composer global require phpunit/php-invoker && \\\n    composer global require phpunit/dbunit \"1.3.2\" && \\\n    composer global require phpunit/phpu it \\\n    composer global require symfony/yaml && \\\n\n# Install dockerize\nRUN curl -f -sSL https://github.com/jwilder/dockerize/releases/download/v0.0.2/dockerize-linux-amd64-v0.0.2.tar.gz | tar -C /usr/local/bin -xzf -\n\nRUN wget --no-check-certificate https://github.com/kelseyhightower/confd/releases/download/v0.7.1/confd-0.7.1-linux-amd64 && \\\n  chmod +x confd-0.7.1-linux-amd64 && \\\n  mv confd-0.7.1-linux-amd64 /usr/local/bin/confd && \\\n  mkdir -p /etc/confd/conf.d && mkdir -p /etc/confd/templates\n\n# Add run file\nADD apache-run.sh /apache-run.sh\nRUN chmod 0500 /apache-run.sh\n\nVOLUME /var/log/apache2\nVOLUME /var/log/collectd\n\nEXPOSE 80\nCMD [\"/apache-run.sh\"]\n"
}