{
  "startTime": 1674246241996,
  "endTime": 1674246242677,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 26
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#############################################\n#   Docker container for VNF_Catalogue WebApp\n#############################################\n# Purpose: Don't run it from here! Use docker-compose(See README.md)\n#\n# Maintained by Kumar Rishabh :: penguinRaider\n##\n# All rights reserved. This program and the accompanying materials\n# are made available under the terms of the Apache License, Version 2.0\n# which accompanies this distribution, and is available at\n# http://www.apache.org/licenses/LICENSE-2.0\n#\n\nFROM node:boron\nMAINTAINER KumarRishabh::penguinRaider <shailrishabh@gmail.com>\nLABEL version=\"v0.0.1\" description=\"Open Source VNF_Catalogue for OPNFV\"\n\nENV DB_HOST mysql\nENV DB_USER vnf_user\nENV DB_PASSWORD vnf_password\nENV DB_DATABASE vnf_catalogue\nENV MINIO_ACCESS_KEY vnf_minio\nENV MINIO_SECRET_KEY vnf_minio\nENV MINIO_HOST minio\n\nRUN apt-get update && apt-get install --no-install-recommends vim -y && rm -rf /var/lib/apt/lists/*;\n\nRUN mkdir -p /usr/src/app && rm -rf /usr/src/app\nWORKDIR /usr/src/app\n\nCOPY package.json /usr/src/app/\n\n# RUN npm config set proxy http://10.4.20.103:8080\n# RUN npm config set https-proxy http://10.4.20.103:8080\n\nRUN npm install && npm cache clean --force;\n\nCOPY . /usr/src/app\n\nEXPOSE 3000\n\n# We wait for mysql service to come up before starting the server using a 3rd_party script.\nCMD [ \"./migration/3rd_party/wait-for-it/wait-for-it.sh\", \"mysql:3306\", \"-t\", \"0\", \"--\", \"./migration/3rd_party/wait-for-it/wait-for-it.sh\", \"minio:9000\", \"-t\", \"0\", \"--\", \"npm\", \"start\" ]\n"
}