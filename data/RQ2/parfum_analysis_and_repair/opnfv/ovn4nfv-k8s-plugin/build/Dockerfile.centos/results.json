{
  "startTime": 1674246579104,
  "endTime": 1674246579893,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 88
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 9,
        "lineEnd": 10,
        "columnStart": 21,
        "columnEnd": 42
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM centos:8\n\nARG HTTP_PROXY=${HTTP_PROXY}\nARG HTTPS_PROXY=${HTTPS_PROXY}\n\nENV http_proxy $HTTP_PROXY\nENV https_proxy $HTTPS_PROXY\nENV no_proxy $NO_PROXY\n\nRUN yum update -y && yum install -y -qq make curl net-tools iproute iptables \\\n    wget nc jq ipset unbound unbound-devel && rm -rf /var/cache/yum\n\nRUN mkdir -p /opt/ovn4nfv-k8s-plugin/ovs/rpm/rpmbuild/RPMS/x86_64\nRUN bash -xc \"\\\npushd /opt/ovn4nfv-k8s-plugin/ovs/rpm/rpmbuild/RPMS/x86_64; \\\nwget -q -nv -O- https://api.github.com/repos/akraino-icn/ovs/releases/tags/v2.14.0 2>/dev/null | jq -r '.assets[] | select(.browser_download_url | contains(\"\\\"\"rpm\"\\\"\")) | .browser_download_url' | wget -i -; \\\npopd; \\\n\"\nRUN rpm -ivh --nodeps /opt/ovn4nfv-k8s-plugin/ovs/rpm/rpmbuild/RPMS/x86_64/*.rpm\n\nRUN mkdir -p /opt/ovn4nfv-k8s-plugin/ovn/rpm/rpmbuild/RPMS/x86_64\nRUN bash -xc \"\\\npushd /opt/ovn4nfv-k8s-plugin/ovn/rpm/rpmbuild/RPMS/x86_64; \\\nwget -q -nv -O- https://api.github.com/repos/akraino-icn/ovn/releases/tags/v20.06.0 2>/dev/null | jq -r '.assets[] | select(.browser_download_url | contains(\"\\\"\"rpm\"\\\"\")) | .browser_download_url' | wget -i -; \\\npopd; \\\n\"\nRUN rpm -ivh --nodeps /opt/ovn4nfv-k8s-plugin/ovn/rpm/rpmbuild/RPMS/x86_64/*.rpm\n\nENV GOLANG_VERSION 1.14.1\nRUN curl -f -sSL https://storage.googleapis.com/golang/go$GOLANG_VERSION.linux-amd64.tar.gz \\\n        | tar -v -C /usr/local -xz\n\nENV PATH /usr/local/go/bin:$PATH\nRUN mkdir -p /go/src /go/bin && chmod -R 777 /go\nENV GOROOT /usr/local/go\nENV GOPATH /go\nENV PATH /go/bin:$PATH\n\nWORKDIR /go/src/github.com/opnfv/ovn4nfv-k8s-plugin\nCOPY . .\nRUN make all\n\nENV OPERATOR=/usr/local/bin/nfn-operator \\\n    AGENT=/usr/local/bin/nfn-agent \\\n    USER_UID=1001 \\\n    USER_NAME=nfn-operator\n\nRUN cp -r build/bin/* /usr/local/bin/\nENTRYPOINT [\"entrypoint\"]\n"
}