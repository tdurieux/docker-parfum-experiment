{
  "startTime": 1674248876478,
  "endTime": 1674248877286,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 10,
        "columnEnd": 129
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 10,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 10,
        "columnEnd": 36
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 25,
        "columnEnd": 42
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 20,
        "columnStart": 22,
        "columnEnd": 10
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# docker file for creating a container that has nfvbench installed and ready to use\nFROM ubuntu:20.04\n\nENV TREX_VER \"v2.89\"\nENV VM_IMAGE_VER \"0.15\"\nENV PYTHONIOENCODING \"utf8\"\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n       git \\\n       kmod \\\n       pciutils \\\n       python3.8 \\\n       vim \\\n       wget \\\n       net-tools \\\n       iproute2 \\\n       libelf1 \\\n       python3-dev \\\n       libpython3.8-dev \\\n       python3-distutils \\\n       gcc \\\n       && ln -s /usr/bin/python3.8 /usr/local/bin/python3 \\\n       && mkdir -p /opt/trex \\\n       && mkdir /var/log/nfvbench \\\n       && wget --no-cache --no-check-certificate https://trex-tgn.cisco.com/trex/release/$TREX_VER.tar.gz \\\n       && tar xzf $TREX_VER.tar.gz -C /opt/trex \\\n       && rm -f /$TREX_VER.tar.gz \\\n       && rm -f /opt/trex/$TREX_VER/trex_client_$TREX_VER.tar.gz \\\n       && cp -a /opt/trex/$TREX_VER/automation/trex_control_plane/interactive/trex /usr/local/lib/python3.8/dist-packages/ \\\n       && rm -rf /opt/trex/$TREX_VER/automation/trex_control_plane/interactive/trex \\\n       && wget https://bootstrap.pypa.io/get-pip.py \\\n       && python3 get-pip.py \\\n       && pip3 install --no-cache-dir -U pbr \\\n       && pip3 install --no-cache-dir -U setuptools \\\n       && cd /opt \\\n       # Note: do not clone with --depth 1 as it will cause pbr to fail extracting the nfvbench version\n       # from the git tag\n       && git clone https://gerrit.opnfv.org/gerrit/nfvbench \\\n       && cd nfvbench && pip3 install --no-cache-dir -e . \\\n       && wget -O nfvbenchvm-$VM_IMAGE_VER.qcow2 https://artifacts.opnfv.org/nfvbench/images/nfvbenchvm_centos-$VM_IMAGE_VER.qcow2 \\\n       # Override Xtesting testcases.yaml file by NFVbench default one\n       && cp xtesting/testcases.yaml /usr/local/lib/python3.8/dist-packages/xtesting/ci/testcases.yaml \\\n       && python3 ./docker/cleanup_generators.py \\\n       && rm -rf /opt/nfvbench/.git \\\n       # Symlink for retrocompatibility 4.x\n       && ln -s /opt/nfvbench /nfvbench \\\n       && apt-get remove -y wget git python3-dev libpython3.8-dev gcc \\\n       && apt-get autoremove -y && apt-get clean && rm -rf /var/lib/apt/lists/*\n\nENV TREX_EXT_LIBS \"/opt/trex/$TREX_VER/external_libs\"\n\n\nENTRYPOINT [\"/opt/nfvbench/docker/nfvbench-entrypoint.sh\"]\n"
}