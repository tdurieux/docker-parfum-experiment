{
  "startTime": 1674256082856,
  "endTime": 1674256083916,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 79,
        "lineEnd": 79,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 57
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 57
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 4,
        "columnEnd": 32
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM php:7.4-apache\n\n# Install tools required for build stage\nRUN set -xe \\\n && apt-get update \\\n && apt-get install --no-install-recommends -fyqq \\\n    bash curl wget rsync ca-certificates openssl openssh-client git tzdata \\\n    libxrender1 fontconfig libc6 \\\n    gnupg binutils-gold autoconf nodejs npm \\\n    g++ gcc gnupg libgcc1 linux-headers-amd64 make python \\\n    # Install additional PHP libraries\n && docker-php-ext-install pcntl bcmath sockets \\\n    # Install plugins\n && apt-get install --no-install-recommends -fyqq \\\n    libonig5 libonig-dev \\\n    mariadb-client libmariadbclient-dev \\\n    postgresql-client libpq-dev \\\n    libicu63 libicu-dev \\\n    libfreetype6 libfreetype6-dev libpng16-16 libpng-dev libjpeg62-turbo libjpeg62-turbo-dev \\\n    zip libzip-dev \\\n    libmemcached11 libmemcached-dev \\\n && docker-php-ext-install \\\n    mbstring \\\n    pdo_mysql mysqli \\\n    pdo_pgsql pgsql \\\n    intl \\\n    gd \\\n    zip \\\n && pecl install \\\n    memcached \\\n    redis \\\n    xdebug \\\n && docker-php-ext-enable \\\n    memcached \\\n    redis \\\n && apt-get remove -fyqq \\\n    libonig-dev \\\n    libmariadbclient-dev \\\n    libpq-dev \\\n    libicu-dev \\\n    libfreetype6-dev libpng-dev libjpeg62-turbo-dev \\\n    libzip-dev \\\n    libmemcached-dev \\\n    # Install composer\n && curl -f -sS https://getcomposer.org/installer | php -- --install-dir=/usr/bin --filename=composer \\\n && chmod 755 /usr/bin/composer \\\n    # Enable some apache modules\n && a2enmod rewrite \\\n && a2enmod session \\\n && a2enmod session_cookie \\\n && a2enmod session_crypto \\\n && a2enmod deflate && rm -rf /var/lib/apt/lists/*;\n\n# Add apache config\nADD apache.conf /etc/apache2/sites-available/000-default.conf\n\n# Prepare direcotory and fix permitions\nRUN mkdir -pv /app \\\n && chmod -R 755 /app\n\n# Install nodejs and latest npm\nRUN set -xe \\\n && echo 'deb https://deb.nodesource.com/node_14.x focal main' > '/etc/apt/sources.list.d/nodesource.list' \\\n && apt-key adv --keyserver keyserver.ubuntu.com --recv 1655A0AB68576280 \\\n && apt-get update \\\n && apt-get install -y --no-install-recommends nodejs -fuqq \\\n && npm install -g npm@latest && npm cache clean --force; && rm -rf /var/lib/apt/lists/*;\n\nENV DB_CONNECTION=mysql\nENV DB_HOST=mariadb\nENV DB_PORT=3306\nENV DB_DATABASE=vpnadmin\nENV DB_USERNAME=vpnadmin_user\nENV DB_PASSWORD=vpnadmin_pass\n\nWORKDIR /app\nADD . /app\n\nRUN set -xe \\\n && npm install \\\n && npm run production && npm cache clean --force;\n\nRUN set -xe \\\n && cp .env.example .env \\\n && chown www-data:www-data -R bootstrap \\\n && chown www-data:www-data -R storage \\\n && composer -V \\\n && composer install --no-dev \\\n && php artisan optimize:clear \\\n && php artisan lang:js \\\n && php artisan key:generate --force \\\n && chown -R www-data:www-data /app\n\nEXPOSE 80\nEXPOSE 443\n\nENTRYPOINT [\"/app/entrypoint.sh\"]\n"
}