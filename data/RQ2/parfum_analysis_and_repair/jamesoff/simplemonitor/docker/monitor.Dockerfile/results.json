{
  "startTime": 1674216609365,
  "endTime": 1674216610305,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 8,
        "columnEnd": 33
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# -- -- -- -- -- -- -- -- -- -- -- -- -- -- --\n# >> python @ alpine\n# -- -- -- -- -- -- -- -- -- -- -- -- -- -- --\nFROM python:3.7-alpine\n\n# >> meta :: labels\nLABEL   version_dockerfile=\"10-07-2018:prod\" \\\n        version_image=\"python:3.7-alpine\"\n\n# >> package :: install\nRUN     apk --no-cache add --update \\\n            # __ install :: basics\n            build-base \\\n            openssl \\\n            # __ install :: tools\n            bash \\\n            sudo \\\n            openrc \\\n            su-exec \\\n            bind-tools \\\n            openssl-dev \\\n            libffi-dev \\\n            rust \\\n            cargo\n\n# >> env :: web/docker paths\nENV     DOCKER_ROOT=/code \\\n        DOCKER_HTML_ROOT=/code/html \\\n        DOCKER_HTML_BACKUP=/code/html-backup \\\n        DOCKER_ENTRYPOINT_BINARY=/bin/monitor.entrypoint.sh \\\n        DOCKER_ENTRYPOINT_ORIGIN=/code/docker/monitor.entrypoint.sh\n\n# >> env :: source/host paths\nENV     SOURCE_ROOT=./\n\n# >> env :: volumes\nENV     VOLUME_UNIVERSAL_HTML=$DOCKER_HTML_ROOT \\\n        VOLUME_MONITOR_EXPORT=/code/monitor-export\n\n# >> env :: user/groups\nENV     MAIN_USER=simplemonitor \\\n        MAIN_USER_ID=1500 \\\n        MAIN_GROUP=simplemonitor \\\n        MAIN_GROUP_ID=1500\n\n# >> setup :: root-directory\nRUN     mkdir -p $DOCKER_ROOT\nCOPY    $SOURCE_ROOT $DOCKER_ROOT\nWORKDIR $DOCKER_ROOT\n\nRUN pip install --no-cache-dir --upgrade pip\n\n# >> install :: py-requirements\nRUN     pip install --no-cache-dir \"$DOCKER_ROOT\"\n\n# >> prepare :: volumes\nRUN     mkdir -p $VOLUME_MONITOR_EXPORT $DOCKER_HTML_ROOT\n\n# >> setup :: volumes\nVOLUME  $VOLUME_UNIVERSAL_HTML \\\n        $VOLUME_MONITOR_EXPORT\n\n# >> add :: user, group, project-directory-rights\nRUN     addgroup -g $MAIN_GROUP_ID $MAIN_GROUP \\\n        && adduser -D -G $MAIN_GROUP -u $MAIN_USER_ID $MAIN_USER \\\n        && chown -R $MAIN_USER:$MAIN_GROUP $DOCKER_ROOT\n\n# >> entrypoint :: prepare\nRUN     cp $DOCKER_ENTRYPOINT_ORIGIN $DOCKER_ENTRYPOINT_BINARY \\\n        && chmod +x $DOCKER_ENTRYPOINT_BINARY\n\n# Start the monitor\nCMD     [\"/bin/monitor.entrypoint.sh\"]\n"
}