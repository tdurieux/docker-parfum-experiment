{
  "startTime": 1674253834278,
  "endTime": 1674253834810,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 135
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 39
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# First build the application assets\nFROM node:16-alpine as assets\n\nRUN apk add --no-cache python3 build-base libwebp-tools bash imagemagick ncurses\nWORKDIR /build\nCOPY js .\n\nENV CYPRESS_INSTALL_BINARY 0\n\n# Network timeout because it's slow when cross-compiling\nRUN yarn install --network-timeout 100000 \\\n    && yarn run build && yarn cache clean;\n\n# Then, build the application binary\nFROM elixir:1.13-alpine AS builder\n\nRUN apk add --no-cache build-base git cmake\n\nCOPY mix.exs mix.lock ./\nENV MIX_ENV=prod\nRUN mix local.hex --force \\\n    && mix local.rebar --force \\\n    && mix deps.get\n\nCOPY lib ./lib\nCOPY priv ./priv\nCOPY config/config.exs config/prod.exs ./config/\nCOPY config/docker.exs ./config/runtime.exs\nCOPY rel ./rel\nCOPY support ./support\nCOPY --from=assets ./priv/static ./priv/static\n\nRUN mix phx.digest.clean --all \\\n    && mix release\n\n# Finally setup the app\nFROM alpine\n\nARG BUILD_DATE\nARG VCS_REF\n\nLABEL org.opencontainers.image.title=\"mobilizon\" \\\n    org.opencontainers.image.description=\"Mobilizon for Docker\" \\\n    org.opencontainers.image.vendor=\"joinmobilizon.org\" \\\n    org.opencontainers.image.documentation=\"https://docs.joinmobilizon.org\" \\\n    org.opencontainers.image.licenses=\"AGPL-3.0\" \\\n    org.opencontainers.image.source=\"https://framagit.org/framasoft/mobilizon\" \\\n    org.opencontainers.image.url=\"https://joinmobilizon.org\" \\\n    org.opencontainers.image.revision=$VCS_REF \\\n    org.opencontainers.image.created=$BUILD_DATE\n\nRUN apk add --no-cache curl openssl ca-certificates ncurses-libs file postgresql-client libgcc libstdc++ imagemagick python3 py3-pip py3-pillow py3-cffi py3-brotli gcc g++ musl-dev python3-dev pango libxslt-dev ttf-cantarell\nRUN pip install --no-cache-dir weasyprint pyexcel-ods3\n\nRUN mkdir -p /var/lib/mobilizon/uploads && chown nobody:nobody /var/lib/mobilizon/uploads\nRUN mkdir -p /var/lib/mobilizon/uploads/exports/{csv,pdf,ods} && chown -R nobody:nobody /var/lib/mobilizon/uploads/exports\nRUN mkdir -p /var/lib/mobilizon/timezones\nRUN curl -f -L 'https://packages.joinmobilizon.org/tz_world/timezones-geodata.dets' -o /var/lib/mobilizon/timezones/timezones-geodata.dets\nRUN chown nobody:nobody /var/lib/mobilizon/timezones\nRUN mkdir -p /etc/mobilizon && chown nobody:nobody /etc/mobilizon\n\nUSER nobody\nEXPOSE 4000\n\nENV MOBILIZON_DOCKER=true\n\nCOPY --from=builder --chown=nobody:nobody _build/prod/rel/mobilizon ./\nRUN cp /releases/*/runtime.exs /etc/mobilizon/config.exs\nCOPY docker/production/docker-entrypoint.sh ./\n\nENTRYPOINT [\"./docker-entrypoint.sh\"]\n"
}