{
  "startTime": 1674255174990,
  "endTime": 1674255175723,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 5,
        "columnEnd": 53
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:buster\n\n# Switch to the root user while we do our changes\nUSER root\n\n# Install GStreamer and other required Debian packages\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends \\\n    wget \\\n    gnupg2 \\\n    git \\\n    python3-setuptools \\\n    python3-pip \\\n    dumb-init \\\n    graphviz-dev \\\n    gstreamer1.0-plugins-bad \\\n    gstreamer1.0-plugins-good \\\n    gstreamer1.0-plugins-ugly \\\n    gstreamer1.0-pulseaudio \\\n    libasound2-dev \\\n    python3-dev \\\n    python3-gst-1.0 \\\n    build-essential \\\n    libdbus-glib-1-dev \\\n    libgirepository1.0-dev \\\n    dleyna-server \\\n    sudo \\\n  && rm -rf /var/lib/apt/lists/*\n\n# Install libspotify-dev from apt.mopidy.com\nRUN mkdir -p /usr/local/share/keyrings \\\n  && wget -q -O /usr/local/share/keyrings/mopidy-archive-keyring.gpg https://apt.mopidy.com/mopidy.gpg \\\n  && wget -q -O /etc/apt/sources.list.d/mopidy.list https://apt.mopidy.com/buster.list \\\n  && apt-get update \\\n  && apt-get install --no-install-recommends -y libspotify-dev mopidy-spotify \\\n  && rm -rf /var/lib/apt/lists/*\n\n# Clone Iris from the repository and install in development mode.\n# This allows a binding at \"/iris\" to map to your local folder for development, rather than\n# installing using pip.\n# Note using ADD helps prevent caching issues. When HEAD changes, our cache is invalidated, whee!\nADD https://api.github.com/repos/jaedb/Iris/git/refs/heads/master version.json\nRUN git clone --depth 1 -b master https://github.com/jaedb/Iris.git /iris \\\n && cd /iris \\\n && python3 setup.py develop \\\n && mkdir -p /var/lib/mopidy/.config \\\n && ln -s /config /var/lib/mopidy/.config/mopidy \\\n # Allow mopidy user to run system commands (restart, local scan, etc)\n && echo \"mopidy ALL=NOPASSWD: /iris/mopidy_iris/system.sh\" >> /etc/sudoers\n\n# Install additional Python dependencies\nRUN python3 -m pip install --no-cache \\\n  tox \\\n  mopidy-mpd \\\n  mopidy-local \\\n  dbus-python\n\n# Start helper script.\nCOPY docker/entrypoint.sh /entrypoint.sh\n\n# Default configuration.\nCOPY docker/mopidy.example.conf /config/mopidy.conf\n\n# Copy the pulse-client configuratrion.\nCOPY docker/pulse-client.conf /etc/pulse/client.conf\n\n# Add version info to image\nCOPY VERSION /\n\n# Allows any user to run mopidy, but runs by default as a randomly generated UID/GID.\n# RUN useradd -ms /bin/bash mopidy\nENV HOME=/var/lib/mopidy\nRUN set -ex \\\n && usermod -G audio,sudo mopidy \\\n && mkdir /var/lib/mopidy/local \\\n && chown mopidy:audio -R $HOME /entrypoint.sh /iris \\\n && chmod go+rwx -R $HOME /entrypoint.sh /iris \\\n && echo \"1\" >> /IS_CONTAINER\n\n# Runs as mopidy user by default.\nUSER mopidy:audio\n\nVOLUME [\"/var/lib/mopidy/local\"]\n\nEXPOSE 6600 6680 1704 1705 5555/udp\n\nENTRYPOINT [\"/usr/bin/dumb-init\", \"/entrypoint.sh\"]\nCMD [\"mopidy\"]\n"
}