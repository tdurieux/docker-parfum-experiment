{
  "startTime": 1674250773791,
  "endTime": 1674250775873,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 3,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 3,
        "columnEnd": 64
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 3,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 3,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 3,
        "columnEnd": 52
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Create a virtual environment with all tools installed\n# ref: https://hub.docker.com/_/debian\nFROM debian:latest AS env\nLABEL maintainer=\"mizux.dev@gmail.com\"\n# Install system build dependencies\nENV PATH=/usr/local/bin:$PATH\nRUN apt-get update -qq \\\n&& apt-get install --no-install-recommends -yq git wget libssl-dev build-essential cmake \\\n&& apt-get clean \\\n&& rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\n# Install swig\nRUN apt-get update -qq \\\n&& apt-get install --no-install-recommends -yq libpcre3-dev automake bison \\\n&& apt-get clean \\\n&& rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\nRUN wget -q \"https://github.com/swig/swig/archive/refs/tags/v4.0.2.tar.gz\" -O swig-4.0.2.tar.gz \\\n&& tar xvf swig-4.0.2.tar.gz \\\n&& rm swig-4.0.2.tar.gz \\\n&& cd swig-4.0.2 \\\n&& ./autogen.sh \\\n&& ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr \\\n&& make -j 4 \\\n&& make install \\\n&& cd .. \\\n&& rm -rf swig-4.0.2\n\n# Install .NET SDK\n# see: https://docs.microsoft.com/en-us/dotnet/core/install/linux-debian\nRUN apt-get update -qq \\\n&& apt-get install --no-install-recommends -yq wget gpg apt-transport-https \\\n&& wget -q \"https://packages.microsoft.com/config/debian/11/packages-microsoft-prod.deb\" -O packages-microsoft-prod.deb \\\n&& dpkg -i packages-microsoft-prod.deb \\\n&& rm packages-microsoft-prod.deb \\\n&& apt-get update -qq \\\n&& apt-get install --no-install-recommends -yq dotnet-sdk-3.1 dotnet-sdk-6.0 \\\n&& apt-get clean \\\n&& rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n# Trigger first run experience by running arbitrary cmd\nRUN dotnet --info\n\n# Add the library src to our build env\nFROM env AS devel\nWORKDIR /home/project\nCOPY . .\n\nFROM devel AS build\nRUN cmake -version\nRUN cmake -S. -Bbuild -DCMAKE_BUILD_TYPE=Release\nRUN cmake --build build --target all -v\nRUN cmake --build build --target install -v\n\nFROM build AS test\nRUN cmake --build build --target test -v\n\n# Test install rules\nFROM env AS install_env\nWORKDIR /home/sample\nCOPY --from=build /home/project/build/dotnet/packages/*.nupkg ./\n\nFROM install_env AS install_devel\nCOPY ci/samples .\n\nFROM install_devel AS install_build\nRUN dotnet build\n\nFROM install_build AS install_test\nRUN dotnet run\n"
}