{
  "startTime": 1674251218630,
  "endTime": 1674251219731,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 3,
        "columnEnd": 28
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Create a virtual environment with all tools installed\n# ref: https://quay.io/repository/centos/centos\nFROM quay.io/centos/centos:stream AS env\nLABEL maintainer=\"mizux.dev@gmail.com\"\n# Install system build dependencies\nENV PATH=/usr/local/bin:$PATH\nRUN dnf -y update \\\n&& dnf -y install git wget openssl-devel cmake \\\n&& dnf -y groupinstall \"Development Tools\" \\\n&& dnf clean all \\\n&& rm -rf /var/cache/dnf\nCMD [ \"/usr/bin/bash\" ]\n\n# Install SWIG 4.0.2\nRUN dnf -y update \\\n&& dnf -y install pcre-devel \\\n&& dnf clean all \\\n&& rm -rf /var/cache/dnf \\\n&& wget -q \"https://github.com/swig/swig/archive/refs/tags/v4.0.2.tar.gz\" -O swig-4.0.2.tar.gz \\\n&& tar xvf swig-4.0.2.tar.gz \\\n&& rm swig-4.0.2.tar.gz \\\n&& cd swig-4.0.2 \\\n&& ./autogen.sh \\\n&& ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr \\\n&& make -j 4 \\\n&& make install \\\n&& cd .. \\\n&& rm -rf swig-4.0.2\n\n# Install .NET SDK\n# see: https://docs.microsoft.com/en-us/dotnet/core/install/linux-centos\nRUN dnf -y update \\\n&& dnf -y install dotnet-sdk-3.1 \\\n&& dnf clean all \\\n&& rm -rf /var/cache/dnf\n# Trigger first run experience by running arbitrary cmd\nRUN dotnet --info\n\n# see: https://dotnet.microsoft.com/download/dotnet-core/6.0\nRUN dotnet_sdk_version=6.0.100 \\\n&& wget -qO dotnet.tar.gz \\\n\"https://dotnetcli.azureedge.net/dotnet/Sdk/${dotnet_sdk_version}/dotnet-sdk-${dotnet_sdk_version}-linux-x64.tar.gz\" \\\n&& dotnet_sha512='cb0d174a79d6294c302261b645dba6a479da8f7cf6c1fe15ae6998bc09c5e0baec810822f9e0104e84b0efd51fdc0333306cb2a0a6fcdbaf515a8ad8cf1af25b' \\\n&& echo \"$dotnet_sha512  dotnet.tar.gz\" | sha512sum -c - \\\n&& tar -C /usr/lib64/dotnet -oxzf dotnet.tar.gz \\\n&& rm dotnet.tar.gz\n# Trigger first run experience by running arbitrary cmd\nRUN dotnet --info\n\n# Add the library src to our build env\nFROM env AS devel\nWORKDIR /home/project\nCOPY . .\n\nFROM devel AS build\nRUN cmake -version\nRUN cmake -S. -Bbuild -DCMAKE_BUILD_TYPE=Release\nRUN cmake --build build --target all -v\nRUN cmake --build build --target install -v\n\nFROM build AS test\nRUN cmake --build build --target test -v\n\n# Test install rules\nFROM env AS install_env\nWORKDIR /home/sample\nCOPY --from=build /home/project/build/dotnet/packages/*.nupkg ./\n\nFROM install_env AS install_devel\nCOPY ci/samples .\n\nFROM install_devel AS install_build\nRUN dotnet build\n\nFROM install_build AS install_test\nRUN dotnet run\n"
}