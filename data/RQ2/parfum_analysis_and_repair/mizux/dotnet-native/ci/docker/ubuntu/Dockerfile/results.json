{
  "startTime": 1674254619651,
  "endTime": 1674254620711,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 8,
        "columnStart": 3,
        "columnEnd": 42
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 3,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 3,
        "columnEnd": 47
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 3,
        "columnEnd": 68
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Create a virtual environment with all tools installed\n# ref: https://hub.docker.com/_/ubuntu\nFROM ubuntu:rolling AS env\n\n# Install system build dependencies\nENV PATH=/usr/local/bin:$PATH\nRUN apt-get update -qq \\\n&& DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -yq \\\n git wget libssl-dev build-essential cmake \\\n&& apt-get clean \\\n&& rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\n# Install swig\nRUN apt-get update -qq \\\n&& apt-get install --no-install-recommends -yq swig \\\n&& apt-get clean \\\n&& rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\n# Install .NET SDK\n# see: https://docs.microsoft.com/en-us/dotnet/core/install/linux-ubuntu\nRUN apt-get update -qq \\\n&& apt-get install --no-install-recommends -yq wget apt-transport-https \\\n&& wget -q https://packages.microsoft.com/config/ubuntu/22.04/packages-microsoft-prod.deb -O packages-microsoft-prod.deb \\\n&& dpkg -i packages-microsoft-prod.deb \\\n&& apt-get update -qq \\\n&& DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -yq dotnet-sdk-6.0 \\\n&& apt-get clean \\\n&& rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n# Trigger first run experience by running arbitrary cmd\nRUN dotnet --info\n\nFROM env AS devel\nWORKDIR /home/project\nCOPY . .\n\nFROM devel AS build\nRUN cmake -version\nRUN cmake -S. -Bbuild -DCMAKE_BUILD_TYPE=Release -DUSE_DOTNET_CORE_31=OFF\nRUN cmake --build build --target all -v\nRUN cmake --build build --target install -v\n\nFROM build AS test\nRUN CTEST_OUTPUT_ON_FAILURE=1 cmake --build build --target test -v\n\nFROM env AS install_env\nWORKDIR /home/sample\nCOPY --from=build /home/project/build/dotnet/packages/*.nupkg ./\n\nFROM install_env AS install_devel\nCOPY ci/samples .\n\nFROM install_devel AS install_build\nRUN dotnet build\n\nFROM install_build AS install_test\nRUN dotnet run\n"
}