{
  "startTime": 1674220961636,
  "endTime": 1674220962761,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 103,
        "lineEnd": 103,
        "columnStart": 4,
        "columnEnd": 76
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 79
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 104,
        "lineEnd": 104,
        "columnStart": 4,
        "columnEnd": 44
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# sudo docker build -t dreamlab/goffish3-hama-base .\n\nFROM tianon/centos:6.5\nMAINTAINER dreamlab\n\nUSER root\n\n# install dev tools\nRUN yum install -y curl which tar git sudo openssh-server openssh-clients rsync | true && \\\n    yum update -y libselinux | true && \\\n    yum install dnsmasq snappy openssl vim bind-utils -y && \\\n    ln -s /usr/lib64/libcrypto.so.1.0.1e /usr/lib64/libcrypto.so && \\ \n    echo source /etc/bashrc > /root/.bash_profile && \\\n    echo user=root >> /etc/dnsmasq.conf && \\\n    echo bogus-priv >> /etc/dnsmasq.conf && \\\n    echo interface=eth0 >> /etc/dnsmasq.conf && \\\n    echo no-dhcp-interface=eth0 >> /etc/dnsmasq.conf && rm -rf /var/cache/yum\n\n# passwordless ssh\nRUN ssh-keygen -q -N \"\" -t dsa -f /etc/ssh/ssh_host_dsa_key && \\\n    ssh-keygen -q -N \"\" -t rsa -f /etc/ssh/ssh_host_rsa_key && \\\n    ssh-keygen -q -N \"\" -t rsa -f /root/.ssh/id_rsa && \\\n    cp /root/.ssh/id_rsa.pub /root/.ssh/authorized_keys\n\n# java\n\nRUN yum install -y java-1.8.0-openjdk-devel; rm -rf /var/cache/yum yum clean all\n\n# hadoop\nADD hadoop-2.7.1.tar.gz /usr/local/\nRUN cd /usr/local && ln -s ./hadoop-2.7.1 hadoop && \\\n    rm  /usr/local/hadoop/lib/native/*\n\n# fixing the libhadoop.so like a boss\nADD hadoop-native-64-2.7.1.tar /usr/local/hadoop/lib/native/\n\nENV HADOOP_PREFIX=/usr/local/hadoop \\\n    HADOOP_COMMON_HOME=/usr/local/hadoop \\\n    HADOOP_HDFS_HOME=/usr/local/hadoop \\\n    HADOOP_MAPRED_HOME=/usr/local/hadoop \\\n    HADOOP_YARN_HOME=/usr/local/hadoop \\\n    HADOOP_CONF_DIR=/usr/local/hadoop/etc/hadoop \\\n    YARN_CONF_DIR=$HADOOP_PREFIX/etc/hadoop \\\n    JAVA_HOME=/usr/lib/jvm/java-1.8.0 \\\n    TERM=xterm\n\nENV PATH=$PATH:$JAVA_HOME/bin:$HADOOP_HDFS_HOME/bin:.\n\nRUN sed -i '/^export JAVA_HOME/ s:.*:export JAVA_HOME=/usr/lib/jvm/java-1.8.0\\nexport HADOOP_PREFIX=/usr/local/hadoop\\nexport HADOOP_HOME=/usr/local/hadoop\\n:' $HADOOP_PREFIX/etc/hadoop/hadoop-env.sh && \\\n    sed -i '/^export HADOOP_CONF_DIR/ s:.*:export HADOOP_CONF_DIR=/usr/local/hadoop/etc/hadoop/:' $HADOOP_PREFIX/etc/hadoop/hadoop-env.sh && \\\n    mkdir $HADOOP_PREFIX/input && \\\n    cp $HADOOP_PREFIX/etc/hadoop/*.xml $HADOOP_PREFIX/input\n\n# pseudo distributed\nADD config/core-site.xml $HADOOP_PREFIX/etc/hadoop/core-site.xml\n#RUN sed s/HOSTNAME/localhost/ /usr/local/hadoop/etc/hadoop/core-site.xml.template > /usr/local/hadoop/etc/hadoop/core-site.xml\nADD config/hdfs-site.xml $HADOOP_PREFIX/etc/hadoop/hdfs-site.xml\n\nADD config/mapred-site.xml $HADOOP_PREFIX/etc/hadoop/mapred-site.xml\nADD config/yarn-site.xml $HADOOP_PREFIX/etc/hadoop/yarn-site.xml\n\nRUN $HADOOP_PREFIX/bin/hdfs namenode -format\n\nADD config/ssh_config /root/.ssh/config\nRUN chmod 600 /root/.ssh/config && \\\n    chown root:root /root/.ssh/config\n\n\n# workingaround docker.io build error\nRUN ls -la /usr/local/hadoop/etc/hadoop/*-env.sh && \\\n    chmod +x /usr/local/hadoop/etc/hadoop/*-env.sh && \\\n    ls -la /usr/local/hadoop/etc/hadoop/*-env.sh\n\n# fix the 254 error code\nRUN sed  -i \"/^[^#]*UsePAM/ s/.*/#&/\"  /etc/ssh/sshd_config && \\\n    echo \"UsePAM no\" >> /etc/ssh/sshd_config && \\\n    echo \"Port 2122\" >> /etc/ssh/sshd_config\n\n\n#ADD GRAPHS\n\nRUN mkdir $HADOOP_PREFIX/google-1P\nRUN mkdir $HADOOP_PREFIX/google-4P\nRUN mkdir $HADOOP_PREFIX/facebook-1P\nRUN mkdir $HADOOP_PREFIX/facebook-4P\nRUN mkdir $HADOOP_PREFIX/ca_road_network-4P\n#ADD graphs/google-input  $HADOOP_PREFIX/google-1P\nADD graphs/google-multiple  $HADOOP_PREFIX/google-4P\nADD graphs/fb-input  $HADOOP_PREFIX/facebook-1P\nADD graphs/fb-multiple  $HADOOP_PREFIX/facebook-4P\nADD graphs/ca-road-network-4P  $HADOOP_PREFIX/ca_road_network-4P\n\n#HAMA ENV VARIABLES\n\nENV HAMA_HOME /opt/hama\nENV HAMA_VERSION 0.7.1\nENV HAMA_CONF_DIR /opt/hama/conf\nENV PATH $PATH:$HAMA_HOME/bin\nENV PATH $PATH:$HADOOP_PREFIX/bin\n\n\n#HAMA SETUP\n\nRUN curl -f -LO http://apache.mirror.ba/hama/hama-0.7.1/hama-dist-0.7.1.tar.gz\nRUN tar -zxvf hama-dist-$HAMA_VERSION.tar.gz && rm hama-dist-$HAMA_VERSION.tar.gz\nRUN rm -rf hama-*.tar.gz\nRUN export HAMA_HOME=$HAMA_HOME\nRUN mv hama-* $HAMA_HOME\nRUN rm $HAMA_HOME/conf/hama-env.sh\nCOPY config/hama-site.xml $HAMA_HOME/conf/\nCOPY config/hama-env.sh $HAMA_HOME/conf/\nCOPY config/hama-default.xml $HAMA_HOME/conf/\nENV PATH $PATH:$HAMA_HOME\n\n\n# Hdfs ports\nEXPOSE 50010 50020 50070 50075 50090 19888 8030 8031 8032 8033 8040 8042 8088 49707 2122\n# Mapred ports\n#EXPOSE 19888\n#Yarn ports\n#EXPOSE 8030 8031 8032 8033 8040 8042 8088\n#Other ports\n#EXPOSE 49707 2122  \n\n"
}