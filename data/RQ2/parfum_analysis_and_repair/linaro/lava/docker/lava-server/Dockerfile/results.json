{
  "startTime": 1674250261981,
  "endTime": 1674250263198,
  "originalSmells": [
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 104
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Argument for the FROM should be defined before the first stage in multi-stage\n# builds while argument used inside a build stage should be defined in tethe\n# given build stage.\n# See https://github.com/moby/moby/issues/38379#issuecomment-447835596\nARG base_image=\"\"\n\n# Build the documentation\nFROM debian:bullseye-slim AS doc\nRUN apt-get update && \\\n    apt-get install --yes --no-install-recommends git make python3-sphinx python3-sphinx-bootstrap-theme && rm -rf /var/lib/apt/lists/*;\nCOPY ./lava_common/version.py /app/lava_common/version.py\nCOPY ./lava_common/VERSION /app/lava_common/VERSION\nCOPY ./doc/v2 /app/doc/v2\nRUN make -C /app/doc/v2 html\n\n# Call the install script in the lava-server-base image\n# In fact we use the lavaserver user and group\nFROM $base_image as build\nARG lava_version=\"\"\nCOPY --from=doc /app/doc/v2/_build/html/ /doc\nRUN --mount=type=bind,target=/app \\\n    # Install using setup.py\n    cd /app && \\\n    python3 setup.py build -b /tmp/build egg_info --egg-base /tmp/build install --root /install --no-compile --install-layout=deb lava-common && \\\n    rm -rf /tmp/build && \\\n    python3 setup.py build -b /tmp/build egg_info --egg-base /tmp/build install --root /install --no-compile --install-layout=deb lava-coordinator && \\\n    rm -rf /tmp/build && \\\n    python3 setup.py build -b /tmp/build egg_info --egg-base /tmp/build install --root /install --no-compile --install-layout=deb lava-server && \\\n    rm -rf /tmp/build && \\\n    echo \"$lava_version\" > /install/usr/lib/python3/dist-packages/lava_common/VERSION && \\\n    # Create empty files\n    touch /install/var/log/lava-server/django.log && \\\n    # chown/chmod every files\n    chown -R lavaserver:lavaserver /install/etc/lava-server/dispatcher-config/ && \\\n    chown -R lavaserver:lavaserver /install/etc/lava-server/dispatcher.d/ && \\\n    chown -R lavaserver:lavaserver /install/etc/lava-server/settings.d/ && \\\n    chown -R lavaserver:lavaserver /install/var/lib/lava-server/default/ && \\\n    chown -R lavaserver:lavaserver /install/var/lib/lava-server/home/ && \\\n    chown -R lavaserver:adm /install/var/log/lava-server/ && \\\n    # Install documentation\n    install -d /install/usr/share/lava-server/static/docs/v2/ && \\\n    cp -R /doc/* /install/usr/share/lava-server/static/docs/v2/ && \\\n    # Move the static files\n    mv /install/usr/lib/python3/dist-packages/lava_results_app/static/lava_results_app/ /install/usr/share/lava-server/static/lava_results_app && \\\n    mv /install/usr/lib/python3/dist-packages/lava_scheduler_app/static/lava_scheduler_app/ /install/usr/share/lava-server/static/lava_scheduler_app && \\\n    mv /install/usr/lib/python3/dist-packages/lava_server/static/lava_server/ /install/usr/share/lava-server/static/lava_server && \\\n    ln -s /usr/lib/python3/dist-packages/django/contrib/admin/static/admin/ /install/usr/share/lava-server/static/admin && \\\n    ln -s /usr/lib/python3/dist-packages/rest_framework/static/rest_framework/ /install/usr/share/lava-server/static/rest_framework && \\\n    python3 -m whitenoise.compress /install/usr/share/lava-server/static/ && \\\n    find /usr/lib/python3/dist-packages/ -name '__pycache__' -type d -exec rm -r \"{}\" +\n\n# Install the entry point\nCOPY docker/share/entrypoints/lava-server.sh /install/root/entrypoint.sh\nRUN mkdir /install/root/entrypoint.d\n\n# Build the final image\nFROM $base_image as install\nCOPY --from=build /install /\n\nEXPOSE 80 3079 5500 8000 8001\n\n# Activate the apache2 configuration and modules\n# TODO: remove apache2 and use only gunicorn\nRUN a2dissite 000-default && \\\n    a2ensite lava-server && \\\n    a2enmod proxy_http && \\\n    a2enmod proxy_wstunnel && \\\n    a2enmod rewrite && \\\n    a2enmod ssl\n\nENTRYPOINT [\"/root/entrypoint.sh\"]\n"
}