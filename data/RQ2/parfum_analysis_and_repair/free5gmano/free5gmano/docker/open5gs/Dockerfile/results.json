{
  "startTime": 1674246340127,
  "endTime": 1674246340822,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 2,
        "lineEnd": 5,
        "columnStart": 22,
        "columnEnd": 74
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 23,
        "lineEnd": 25,
        "columnStart": 22,
        "columnEnd": 53
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 101
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 101
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 2,
        "lineEnd": 5,
        "columnStart": 22,
        "columnEnd": 74
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 23,
        "lineEnd": 25,
        "columnStart": 22,
        "columnEnd": 53
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 101
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 125
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:20.04\n\nRUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y curl wget python3-pip \\\n        python3-setuptools python3-wheel ninja-build build-essential flex bison git libsctp-dev \\\n        libgnutls28-dev libgcrypt-dev libssl-dev libidn11-dev libmongoc-dev libbson-dev libyaml-dev \\\n\tlibnghttp2-dev libmicrohttpd-dev libcurl4-gnutls-dev libnghttp2-dev meson && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /\nRUN wget https://github.com/open5gs/open5gs/archive/v2.1.7.tar.gz\nRUN tar -zxvf v2.1.7.tar.gz && rm v2.1.7.tar.gz\nRUN mv open5gs-2.1.7 open5gs\n\nWORKDIR /open5gs\nRUN meson build --prefix=`pwd`/install\nRUN ninja -C build\n\nWORKDIR /open5gs/build\nRUN ninja install\n\nWORKDIR /open5gs/install\n\nFROM ubuntu:20.04\n\nRUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y libsctp-dev libgnutls28-dev \\\n        libgcrypt-dev libssl-dev libidn11-dev libmongoc-dev libbson-dev libyaml-dev libnghttp2-dev \\\n\tlibmicrohttpd-dev libcurl4-gnutls-dev libnghttp2-dev && rm -rf /var/lib/apt/lists/*;\n\nRUN DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends -y install iputils-ping tcpdump nano git iproute2 iptables && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /open5gs/install\nCOPY --from=0 /open5gs/install /open5gs/install\nCOPY setup-uptun.sh ./\nRUN chmod +x ./setup-uptun.sh\n"
}