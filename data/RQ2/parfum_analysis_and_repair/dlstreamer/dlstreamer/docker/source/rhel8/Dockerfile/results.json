{
  "startTime": 1674215016540,
  "endTime": 1674215019666,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 4,
        "columnEnd": 82
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 101,
        "lineEnd": 101,
        "columnStart": 4,
        "columnEnd": 84
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 139,
        "lineEnd": 139,
        "columnStart": 4,
        "columnEnd": 82
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 150,
        "lineEnd": 150,
        "columnStart": 4,
        "columnEnd": 101
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 189,
        "lineEnd": 189,
        "columnStart": 4,
        "columnEnd": 101
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 254,
        "lineEnd": 254,
        "columnStart": 4,
        "columnEnd": 99
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 292,
        "lineEnd": 292,
        "columnStart": 4,
        "columnEnd": 101
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 319,
        "lineEnd": 319,
        "columnStart": 4,
        "columnEnd": 102
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 330,
        "lineEnd": 330,
        "columnStart": 4,
        "columnEnd": 102
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 353,
        "lineEnd": 353,
        "columnStart": 4,
        "columnEnd": 105
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 357,
        "lineEnd": 357,
        "columnStart": 4,
        "columnEnd": 95
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 387,
        "lineEnd": 387,
        "columnStart": 4,
        "columnEnd": 101
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 392,
        "lineEnd": 392,
        "columnStart": 4,
        "columnEnd": 104
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 393,
        "lineEnd": 393,
        "columnStart": 4,
        "columnEnd": 99
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 423,
        "lineEnd": 423,
        "columnStart": 4,
        "columnEnd": 90
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 440,
        "lineEnd": 440,
        "columnStart": 4,
        "columnEnd": 100
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 547,
        "lineEnd": 547,
        "columnStart": 34,
        "columnEnd": 60
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 144,
        "lineEnd": 144,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 322,
        "lineEnd": 322,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 335,
        "lineEnd": 347,
        "columnStart": 4,
        "columnEnd": 19
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 20,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 75,
        "lineEnd": 81,
        "columnStart": 4,
        "columnEnd": 17
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 117,
        "lineEnd": 133,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 172,
        "lineEnd": 185,
        "columnStart": 4,
        "columnEnd": 17
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 210,
        "lineEnd": 210,
        "columnStart": 4,
        "columnEnd": 89
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 216,
        "lineEnd": 250,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 295,
        "lineEnd": 295,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 317,
        "lineEnd": 317,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 376,
        "lineEnd": 379,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 417,
        "lineEnd": 419,
        "columnStart": 4,
        "columnEnd": 17
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 490,
        "lineEnd": 511,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 543,
        "lineEnd": 543,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 547,
        "lineEnd": 547,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 578,
        "lineEnd": 578,
        "columnStart": 4,
        "columnEnd": 89
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 582,
        "lineEnd": 599,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 73,
        "lineEnd": 73,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 102,
        "lineEnd": 102,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 140,
        "lineEnd": 140,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 151,
        "lineEnd": 151,
        "columnStart": 4,
        "columnEnd": 60
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 190,
        "lineEnd": 190,
        "columnStart": 4,
        "columnEnd": 60
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 255,
        "lineEnd": 255,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 293,
        "lineEnd": 293,
        "columnStart": 4,
        "columnEnd": 60
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 332,
        "lineEnd": 332,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 358,
        "lineEnd": 358,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 388,
        "lineEnd": 388,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 424,
        "lineEnd": 424,
        "columnStart": 4,
        "columnEnd": 54
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 441,
        "lineEnd": 441,
        "columnStart": 4,
        "columnEnd": 58
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 332,
        "lineEnd": 332,
        "columnStart": 4,
        "columnEnd": 45
      }
    }
  ],
  "repairedDockerfile": "# ==============================================================================\n# Copyright (C) 2022 Intel Corporation\n#\n# SPDX-License-Identifier: MIT\n# ==============================================================================\n\nARG http_proxy\nARG https_proxy\nARG no_proxy\nARG ACTIVATED_IMAGE\n\nFROM ${ACTIVATED_IMAGE} as gst-build\nENV HOME=/home\nWORKDIR ${HOME}\nUSER root\n\nSHELL [\"/bin/bash\", \"-xo\", \"pipefail\", \"-c\"]\n\n# Common build tools\nRUN yum update -y && \\\n    yum install -y \\\n    cmake \\\n    automake \\\n    autoconf \\\n    openssl \\\n    make \\\n    xz \\\n    git \\\n    gcc \\\n    gcc-c++ \\\n    make \\\n    curl \\\n    flex \\\n    bison \\\n    pkgconfig \\\n    libtool \\\n    glib2-devel \\\n    redhat-lsb-core \\\n    ca-certificates \\\n    pkg-config \\\n    python3-pip \\\n    python3-setuptools && \\\n    yum clean all && \\\n    pip3 install --no-cache-dir --upgrade pip && rm -rf /var/cache/yum\n\n\nARG DLSTREAMER_INSTALL_DIR=\"/opt/intel/dlstreamer\"\nARG GSTREAMER_INSTALL_DIR=${DLSTREAMER_INSTALL_DIR}/gstreamer\nRUN mkdir -p ${DLSTREAMER_INSTALL_DIR}\n\nARG PREFIX=${GSTREAMER_INSTALL_DIR}\nARG LIBDIR=lib/\nARG LIBEXECDIR=bin/\n\nARG PACKAGE_ORIGIN=\"https://gstreamer.freedesktop.org\"\nARG GST_VERSION=1.18.4\nARG BUILD_TYPE=release\n\nARG GSTREAMER_LIB_DIR=${PREFIX}/${LIBDIR}\nENV LIBRARY_PATH=${GSTREAMER_LIB_DIR}:${GSTREAMER_LIB_DIR}/gstreamer-1.0:${LIBRARY_PATH}\nENV LD_LIBRARY_PATH=${LIBRARY_PATH}\nENV PKG_CONFIG_PATH=${GSTREAMER_LIB_DIR}/pkgconfig\nENV PATH=${PREFIX}/${LIBEXECDIR}:${PATH}\nENV PATCHES_ROOT=${HOME}/build/src/patches\nENV SYS_PATCHES_DIR=${HOME}/src/patches\nRUN mkdir -p ${PATCHES_ROOT} && mkdir -p ${SYS_PATCHES_DIR}\n\nRUN python3 -m pip install --no-cache-dir meson ninja\n\n# Install GStreamer\n# GStreamer core\nARG GST_REPO=https://gstreamer.freedesktop.org/src/gstreamer/gstreamer-${GST_VERSION}.tar.xz\nRUN curl -f --location ${GST_REPO} --output build/src/gstreamer-${GST_VERSION}.tar.xz && \\\n    tar xvf build/src/gstreamer-${GST_VERSION}.tar.xz && rm build/src/gstreamer-${GST_VERSION}.tar.xz\n\nRUN yum install -y \\\n    gmp-devel \\\n    gsl-devel \\\n    gobject-introspection-devel \\\n    libcap-devel \\\n    libcap \\\n    gettext-devel && \\\n    yum clean all && rm -rf /var/cache/yum\n\nRUN cd gstreamer-${GST_VERSION} && \\\n    PKG_CONFIG_PATH=$PWD/build/pkgconfig:${PKG_CONFIG_PATH} meson \\\n    -Dpackage-origin=\"${PACKAGE_ORIGIN}\" \\\n    -Dexamples=disabled \\\n    -Dtests=disabled \\\n    -Dbenchmarks=disabled \\\n    --buildtype=${BUILD_TYPE} \\\n    --prefix=${PREFIX} \\\n    --libdir=${LIBDIR} \\\n    --libexecdir=${LIBEXECDIR} \\\n    build/ && \\\n    ninja -C build && \\\n    meson install -C build/\n\n# ORC Acceleration\nARG GST_ORC_VERSION=0.4.31\nARG GST_ORC_REPO=https://gstreamer.freedesktop.org/src/orc/orc-${GST_ORC_VERSION}.tar.xz\nRUN curl -f --location ${GST_ORC_REPO} --output build/src/orc-${GST_ORC_VERSION}.tar.xz && \\\n    tar xvf build/src/orc-${GST_ORC_VERSION}.tar.xz && rm build/src/orc-${GST_ORC_VERSION}.tar.xz\n\nRUN cd orc-${GST_ORC_VERSION} && \\\n    meson \\\n    -Dexamples=disabled \\\n    -Dtests=disabled \\\n    -Dbenchmarks=disabled \\\n    -Dorc-test=disabled \\\n    --prefix=${PREFIX} \\\n    --libdir=${LIBDIR} \\\n    --libexecdir=${LIBEXECDIR} \\\n    build/ && \\\n    ninja -C build && \\\n    meson install -C build/\n\nRUN yum install -y \\\n    libXrandr-devel \\\n    libX11-devel \\\n    iso-codes-devel \\\n    mesa-libEGL-devel \\\n    mesa-libGLES-devel \\\n    mesa-libGL-devel \\\n    libgudev1 \\\n    libtheora-devel \\\n    cdparanoia-devel \\\n    pango-devel \\\n    mesa-libgbm-devel \\\n    alsa-lib-devel \\\n    libjpeg-turbo-devel \\\n    libvisual-devel \\\n    libXv-devel \\\n    opus-devel && \\\n    yum clean all && rm -rf /var/cache/yum\n\n# Build vorbis\nARG VORBIS_URL=https://downloads.xiph.org/releases/vorbis/libvorbis-1.3.7.tar.xz\nRUN mkdir -p build/src/vorbis && \\\n    curl -f --location ${VORBIS_URL} --output build/src/vorbis/libvorbis-1.3.7.tar.xz && \\\n    tar xvf build/src/vorbis/libvorbis-1.3.7.tar.xz && rm build/src/vorbis/libvorbis-1.3.7.tar.xz\n\nRUN cd libvorbis-1.3.7 && \\\n    ./autogen.sh && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n    make && \\\n    make install\n\n# Build the GStreamer Plugin Base\nARG GST_PLUGIN_BASE_REPO=https://gstreamer.freedesktop.org/src/gst-plugins-base/gst-plugins-base-${GST_VERSION}.tar.xz\nRUN curl -f --location ${GST_PLUGIN_BASE_REPO} --output build/src/gst-plugins-base-${GST_VERSION}.tar.xz && \\\n    tar xvf build/src/gst-plugins-base-${GST_VERSION}.tar.xz && rm build/src/gst-plugins-base-${GST_VERSION}.tar.xz\n\nRUN cd gst-plugins-base-${GST_VERSION} && \\\n    PKG_CONFIG_PATH=$PWD/build/pkgconfig:${PKG_CONFIG_PATH} meson \\\n    -Dpackage-origin=\"${PACKAGE_ORIGIN}\" \\\n    -Dexamples=disabled \\\n    -Dtests=disabled \\\n    -Dnls=disabled \\\n    -Dgl=disabled \\\n    -Dpackage-origin=\"${PACKAGE_ORIGIN}\" \\\n    -Dc_std=gnu11 \\\n    --buildtype=${BUILD_TYPE} \\\n    --prefix=${PREFIX} \\\n    --libdir=${LIBDIR} \\\n    --libexecdir=${LIBEXECDIR} \\\n    build/ && \\\n    ninja -C build && \\\n    meson install -C build/\n\n\n# GStreamer Good plugins\nRUN yum install -y \\\n    patch \\\n    bzip2-devel \\\n    libv4l-devel \\\n    flac-devel \\\n    gdk-pixbuf2-devel \\\n    libdv-devel \\\n    mpg123-devel \\\n    libraw1394-devel \\\n    libiec61883-devel \\\n    pulseaudio-libs-devel \\\n    libsoup-devel \\\n    speex-devel \\\n    wavpack-devel && \\\n    yum clean all && rm -rf /var/cache/yum\n\nARG GST_PLUGIN_GOOD_REPO=https://gstreamer.freedesktop.org/src/gst-plugins-good/gst-plugins-good-${GST_VERSION}.tar.xz\nRUN curl -f --location ${GST_PLUGIN_GOOD_REPO} --output build/src/gst-plugins-good-${GST_VERSION}.tar.xz && \\\n    tar xvf build/src/gst-plugins-good-${GST_VERSION}.tar.xz && rm build/src/gst-plugins-good-${GST_VERSION}.tar.xz\n\nRUN cd gst-plugins-good-${GST_VERSION}  && \\\n    PKG_CONFIG_PATH=$PWD/build/pkgconfig:${PKG_CONFIG_PATH} meson \\\n    -Dpackage-origin=\"${PACKAGE_ORIGIN}\" \\\n    -Dexamples=disabled \\\n    -Dtests=disabled \\\n    -Dnls=disabled \\\n    -Dpackage-origin=\"${PACKAGE_ORIGIN}\" \\\n    --buildtype=${BUILD_TYPE} \\\n    --prefix=${PREFIX} \\\n    --libdir=${LIBDIR} \\\n    --libexecdir=${LIBEXECDIR} \\\n    build/ && \\\n    ninja -C build && \\\n    meson install -C build/\n\n# GStreamer Bad plugins\nRUN rpm --import http://li.nux.ro/download/nux/RPM-GPG-KEY-nux.ro\n\nRUN yum install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm && \\\n    subscription-manager repos --enable \"codeready-builder-for-rhel-8-$(arch)-rpms\" && rm -rf /var/cache/yum\n\nRUN rpm -Uvh http://li.nux.ro/download/nux/dextop/el7/x86_64/nux-dextop-release-0-5.el7.nux.noarch.rpm && \\\n    rpm -Uvh https://download1.rpmfusion.org/free/el/rpmfusion-free-release-7.noarch.rpm\n\nRUN yum install -y \\\n    bluez-libs-devel \\\n    libusb-devel \\\n    libass-devel \\\n    libbs2b-devel \\\n    libchromaprint-devel \\\n    lcms2-devel \\\n    libdc1394-devel \\\n    libXext-devel \\\n    libssh-devel \\\n    libdca-devel \\\n    faac-devel \\\n    fdk-aac-devel \\\n    flite-devel \\\n    fluidsynth-devel \\\n    game-music-emu-devel \\\n    gsm-devel \\\n    nettle-devel \\\n    liblrdf-devel \\\n    mjpegtools-devel \\\n    libmodplug-devel \\\n    libmpcdec-devel \\\n    neon-devel \\\n    openal-soft-devel \\\n    OpenEXR-devel \\\n    openjpeg2-devel \\\n    librsvg2-devel \\\n    libsndfile-devel \\\n    soundtouch-devel \\\n    spandsp-devel \\\n    libsrtp-devel \\\n    zvbi-devel \\\n    wildmidi-devel \\\n    libnice-devel \\\n    libxkbcommon-devel && \\\n    yum clean all && rm -rf /var/cache/yum\n\nARG GST_PLUGIN_BAD_REPO=https://gstreamer.freedesktop.org/src/gst-plugins-bad/gst-plugins-bad-${GST_VERSION}.tar.xz\nRUN curl -f --location ${GST_PLUGIN_BAD_REPO} --output build/src/gst-plugins-bad-${GST_VERSION}.tar.xz && \\\n    tar xvf build/src/gst-plugins-bad-${GST_VERSION}.tar.xz && rm build/src/gst-plugins-bad-${GST_VERSION}.tar.xz\n\nRUN mkdir ${PATCHES_ROOT}/gst_plugins_bad_patch_license && \\\n    cp gst-plugins-bad-${GST_VERSION}/COPYING ${PATCHES_ROOT}/gst_plugins_bad_patch_license/LICENSE\n\nRUN cd gst-plugins-bad-${GST_VERSION} && \\\n    PKG_CONFIG_PATH=$PWD/build/pkgconfig:${PKG_CONFIG_PATH} meson \\\n    -Dpackage-origin=\"${PACKAGE_ORIGIN}\" \\\n    -Dexamples=disabled \\\n    -Dtests=disabled \\\n    -Ddoc=disabled \\\n    -Dnls=disabled \\\n    -Dx265=disabled \\\n    -Dresindvd=disabled \\\n    -Dmplex=disabled \\\n    -Ddts=disabled \\\n    -Dofa=disabled \\\n    -Dfaad=disabled \\\n    -Dmpeg2enc=disabled \\\n    -Dvoamrwbenc=disabled \\\n    -Drtmp=disabled \\\n    -Dwebrtcdsp=disabled \\\n    -Dlibmms=disabled \\\n    -Dlibde265=disabled \\\n    -Dpackage-origin=\"${PACKAGE_ORIGIN}\" \\\n    -Dc_std=gnu11 \\\n    --buildtype=${BUILD_TYPE} \\\n    --prefix=${PREFIX} \\\n    --libdir=${LIBDIR} \\\n    --libexecdir=${LIBEXECDIR} \\\n    build/ && \\\n    ninja -C build && \\\n    meson install -C build/\n\n\n# Build the GStreamer Plugin Ugly set\nARG GST_PLUGIN_UGLY_REPO=https://gstreamer.freedesktop.org/src/gst-plugins-ugly/gst-plugins-ugly-${GST_VERSION}.tar.xz\nRUN curl -f --location ${GST_PLUGIN_UGLY_REPO} --output build/src/gst-plugins-ugly-${GST_VERSION}.tar.xz && \\\n    tar xvf build/src/gst-plugins-ugly-${GST_VERSION}.tar.xz && rm build/src/gst-plugins-ugly-${GST_VERSION}.tar.xz\n\nRUN yum install -y libmpeg2-devel && yum clean all && rm -rf /var/cache/yum\n\nRUN cd gst-plugins-ugly-${GST_VERSION}  && \\\n    PKG_CONFIG_PATH=$PWD/build/pkgconfig:${PKG_CONFIG_PATH} meson \\\n    -Dpackage-origin=\"${PACKAGE_ORIGIN}\" \\\n    -Dtests=disabled \\\n    -Dnls=disabled \\\n    -Dcdio=disabled \\\n    -Dmpeg2dec=disabled \\\n    -Ddvdread=disabled \\\n    -Da52dec=disabled \\\n    -Dx264=disabled \\\n    -Dpackage-origin=\"${PACKAGE_ORIGIN}\" \\\n    --buildtype=${BUILD_TYPE} \\\n    --prefix=${PREFIX} \\\n    --libdir=${LIBDIR} \\\n    --libexecdir=${LIBEXECDIR} \\\n    build/ && \\\n    ninja -C build && \\\n    meson install -C build/\n\n# FFmpeg\nRUN yum install -y bzip2 && rm -rf /var/cache/yum\nRUN mkdir ffmpeg_sources && cd ffmpeg_sources && \\\n    curl -f --output - --location https://www.nasm.us/pub/nasm/releasebuilds/2.14.02/nasm-2.14.02.tar.bz2 | tar xj && \\\n    cd nasm-2.14.02 && \\\n    ./autogen.sh && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=${PREFIX} --bindir=\"${PREFIX}/bin\" && \\\n    make && make install\n\n# Download patch\nRUN git clone -n https://github.com/FFmpeg/FFmpeg.git && \\\n    cd FFmpeg && \\\n    git format-patch -1 26d3c81bc5ef2f8c3f09d45eaeacfb4b1139a777 --stdout > ${PATCHES_ROOT}/ffmpeg_check_dc_count.patch\n\nRUN curl -f --location https://ffmpeg.org/releases/ffmpeg-4.4.tar.gz --output build/src/ffmpeg-4.4.tar.gz\nRUN cd ffmpeg_sources && \\\n    tar xvf /home/build/src/ffmpeg-4.4.tar.gz && \\\n    cd ffmpeg-4.4 && \\\n    cat ${PATCHES_ROOT}/ffmpeg_check_dc_count.patch | git apply && \\\n    PATH=\"${PREFIX}/bin:$PATH\" PKG_CONFIG_PATH=\"${PREFIX}/lib/pkgconfig\" \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n\n    --disable-gpl \\\n    --enable-pic \\\n    --disable-shared \\\n    --enable-static \\\n    --prefix=${PREFIX} \\\n    --extra-cflags=\"-I${PREFIX}/include\" \\\n    --extra-ldflags=\"-L${PREFIX}/lib\" \\\n    --extra-libs=-lpthread \\\n    --extra-libs=-lm \\\n    --bindir=\"${PREFIX}/bin\" \\\n    --disable-vaapi && \\\n    make -j $(nproc) && \\\n    make install && rm /home/build/src/ffmpeg-4.4.tar.gz\n\n# Download gstreamer-libav patch, can be removed with 1.19 transition\nARG GSTREAMER_LIBAV_PATCH_URL=https://github.com/GStreamer/gst-libav/commit/75fb364bf435d80a51f1ecba6afc999b5f36292e.patch\nRUN curl -f --location ${GSTREAMER_LIBAV_PATCH_URL} --output ${PATCHES_ROOT}/gst-libav-fix-performance.patch\n\n# Build gst-libav\nARG GST_PLUGIN_LIBAV_REPO=https://gstreamer.freedesktop.org/src/gst-libav/gst-libav-${GST_VERSION}.tar.xz\nRUN curl -f --location ${GST_PLUGIN_LIBAV_REPO} --output build/src/gst-libav-${GST_VERSION}.tar.xz && \\\n    tar xvf build/src/gst-libav-${GST_VERSION}.tar.xz && rm build/src/gst-libav-${GST_VERSION}.tar.xz\n\nRUN cd gst-libav-${GST_VERSION} && \\\n    cat ${PATCHES_ROOT}/gst-libav-fix-performance.patch | git apply && \\\n    PKG_CONFIG_PATH=$PWD/build/pkgconfig:${PREFIX}/lib/pkgconfig:${PKG_CONFIG_PATH} meson \\\n    -Dpackage-origin=\"${PACKAGE_ORIGIN}\" \\\n    --buildtype=${BUILD_TYPE} \\\n    --prefix=${PREFIX} \\\n    --libdir=${LIBDIR} \\\n    --libexecdir=${LIBEXECDIR} \\\n    build/ && \\\n    ninja -C build && \\\n    meson install -C build/\n\n\n# Build GStreamer VAAPI plugin\nARG GST_PLUGIN_VAAPI_REPO=https://gstreamer.freedesktop.org/src/gstreamer-vaapi/gstreamer-vaapi-${GST_VERSION}.tar.xz\n\nRUN yum install -y \\\n    libva-devel \\\n    systemd-devel \\\n    libpciaccess-devel && rm -rf /var/cache/yum\n\n# Install libdrm-2.4.98\nRUN git clone -b libdrm-2.4.98 https://gitlab.freedesktop.org/mesa/drm.git && \\\n    cd drm && meson --prefix=/usr --libdir=/usr/lib64 build/ && \\\n    ninja -C build/ install\n\n# Download gstreamer-vaapi & patches\nRUN curl -f --location ${GST_PLUGIN_VAAPI_REPO} --output build/src/gstreamer-vaapi-${GST_VERSION}.tar.xz && \\\n    tar xvf build/src/gstreamer-vaapi-${GST_VERSION}.tar.xz && rm build/src/gstreamer-vaapi-${GST_VERSION}.tar.xz\n\nARG GSTREAMER_VAAPI_PATCH_URL=https://gitlab.freedesktop.org/gstreamer/gstreamer-vaapi/-/merge_requests/435.patch\nARG GSTREAMER_VAAPI_PATCH_DMA_URL=https://raw.githubusercontent.com/dlstreamer/dlstreamer/master/patches/gstreamer-vaapi/dma-vaapiencode.patch\nRUN curl -f --location ${GSTREAMER_VAAPI_PATCH_URL} --output ${PATCHES_ROOT}/gst-vaapi-peek-vadisplay.patch\nRUN curl -f --location ${GSTREAMER_VAAPI_PATCH_DMA_URL} --output ${PATCHES_ROOT}/dma-vaapiencode.patch\n\n# Put gstreamer-vaapi license along with the patch\nRUN mkdir ${PATCHES_ROOT}/gstreamer_vaapi_patch_license && \\\n    cp gstreamer-vaapi-${GST_VERSION}/COPYING.LIB ${PATCHES_ROOT}/gstreamer_vaapi_patch_license/LICENSE\nRUN mkdir ${PATCHES_ROOT}/gstreamer_vaapi_dma_vaapiencode_patch_license && \\\n    cp gstreamer-vaapi-${GST_VERSION}/COPYING.LIB ${PATCHES_ROOT}/gstreamer_vaapi_dma_vaapiencode_patch_license/LICENSE\n\nRUN cd gstreamer-vaapi-${GST_VERSION} && \\\n    git apply ${PATCHES_ROOT}/gst-vaapi-peek-vadisplay.patch && \\\n    git apply ${PATCHES_ROOT}/dma-vaapiencode.patch && \\\n    PKG_CONFIG_PATH=$PWD/build/pkgconfig:${PKG_CONFIG_PATH} meson \\\n    -Dexamples=disabled \\\n    -Dtests=disabled \\\n    -Dpackage-origin=\"${PACKAGE_ORIGIN}\" \\\n    --buildtype=${BUILD_TYPE} \\\n    --prefix=${PREFIX} \\\n    --libdir=${LIBDIR} \\\n    --libexecdir=${LIBEXECDIR} \\\n    build/ && \\\n    ninja -C build && \\\n    ninja install -C build/\n\n# gst-python\nRUN yum install -y \\\n    pygobject3-devel \\\n    python3-devel && \\\n    yum clean all && rm -rf /var/cache/yum\n\nARG GST_PYTHON_REPO=https://gstreamer.freedesktop.org/src/gst-python/gst-python-${GST_VERSION}.tar.xz\nRUN curl -f --location ${GST_PYTHON_REPO} --output build/src/gst-python-${GST_VERSION}.tar.xz\nRUN tar xvf build/src/gst-python-${GST_VERSION}.tar.xz && \\\n    cd gst-python-${GST_VERSION} && \\\n    PKG_CONFIG_PATH=$PWD/build/pkgconfig:${PKG_CONFIG_PATH} meson \\\n    -Dpython=python3 \\\n    --buildtype=${BUILD_TYPE} \\\n    --prefix=${PREFIX} \\\n    --libdir=${LIBDIR} \\\n    --libexecdir=${LIBEXECDIR} \\\n    build/ && \\\n    ninja -C build && \\\n    meson install -C build/ && rm build/src/gst-python-${GST_VERSION}.tar.xz\n\nENV GI_TYPELIB_PATH=${GSTREAMER_LIB_DIR}/girepository-1.0\nENV PYTHONPATH=${PREFIX}/lib/python3.6/site-packages:${PYTHONPATH}\n\nARG GST_RTSP_SERVER_REPO=https://gstreamer.freedesktop.org/src/gst-rtsp-server/gst-rtsp-server-${GST_VERSION}.tar.xz\nRUN curl -f --location ${GST_RTSP_SERVER_REPO} --output build/src/gst-rtsp-server-${GST_VERSION}.tar.xz\nRUN tar xf build/src/gst-rtsp-server-${GST_VERSION}.tar.xz && \\\n    cd gst-rtsp-server-${GST_VERSION} && \\\n    PKG_CONFIG_PATH=$PWD/build/pkgconfig:${PKG_CONFIG_PATH} meson \\\n    -Dexamples=disabled \\\n    -Dtests=disabled \\\n    -Dpackage-origin=\"${PACKAGE_ORIGIN}\" \\\n    --buildtype=${BUILD_TYPE} \\\n    --prefix=${PREFIX} \\\n    --libdir=${LIBDIR} \\\n    --libexecdir=${LIBEXECDIR} \\\n    build/ && \\\n    ninja -C build && \\\n    meson install -C build/ && rm build/src/gst-rtsp-server-${GST_VERSION}.tar.xz\n\n\n# Building DL Streamer image\nFROM ${ACTIVATED_IMAGE} as dlstreamer-build\n\nLABEL Description=\"This is the development image of Intel® Deep Learning Streamer Pipeline Framework (Intel® DL Streamer Pipeline Framework) for Red Hat Enterprise Linux 8\"\nLABEL Vendor=\"Intel Corporation\"\n\nSHELL [\"/bin/bash\", \"-xo\", \"pipefail\", \"-c\"]\n\nWORKDIR /root\nUSER root\n\nENV http_proxy=${http_proxy}\nENV https_proxy=${https_proxy}\nENV no_proxy=${no_proxy}\nENV HTTP_PROXY=${http_proxy}\nENV HTTPS_PROXY=${https_proxy}\nENV NO_PROXY=${no_proxy}\n\nARG DLSTREAMER_INSTALL_DIR=\"/opt/intel/dlstreamer\"\n\nCOPY --from=gst-build /opt/intel /opt/intel\n\nARG LIBDIR=lib/\nARG LIBEXECDIR=bin/\nARG GSTREAMER_INSTALL_DIR=${DLSTREAMER_INSTALL_DIR}/gstreamer\nARG GSTREAMER_LIB_DIR=${GSTREAMER_INSTALL_DIR}/${LIBDIR}\nENV LIBRARY_PATH=${GSTREAMER_LIB_DIR}:${GSTREAMER_LIB_DIR}/gstreamer-1.0:${LIBRARY_PATH}\nENV LD_LIBRARY_PATH=${LIBRARY_PATH}:${LD_LIBRARY_PATH}\nENV PKG_CONFIG_PATH=${GSTREAMER_LIB_DIR}/pkgconfig:${PKG_CONFIG_PATH}\nENV PATH=${GSTREAMER_INSTALL_DIR}/${LIBEXECDIR}:${PATH}\n\n# Prerequisites\nRUN yum update -y --nobest && \\\n    yum upgrade -y --nobest && \\\n    yum install -y https://download-ib01.fedoraproject.org/pub/epel/7/x86_64/Packages/c/clinfo-2.1.17.02.09-1.el7.x86_64.rpm \\\n    redhat-lsb-core \\\n    python3-yaml \\\n    python3-wheel \\\n    gcc \\\n    gcc-c++ \\\n    flex \\\n    bison \\\n    make \\\n    curl \\\n    pkgconfig \\\n    libtool \\\n    glib2-devel \\\n    sudo \\\n    cmake \\\n    git \\\n    gobject-introspection \\\n    libusb-devel \\\n    gnupg2 \\\n    vim \\\n    gdb \\\n    opencl-headers && rm -rf /var/cache/yum\n\n\n# Register Intel® Graphics repository\nARG GRAPHICS_APT_REPO=https://repositories.intel.com/graphics\nRUN RHEL_VERSION=`. /etc/os-release; echo ${VERSION_ID}` && \\\n    dnf install -y 'dnf-command(config-manager)' && \\\n    dnf config-manager --add-repo \\\n    ${GRAPHICS_APT_REPO}/rhel/${RHEL_VERSION}/intel-graphics.repo\n\nRUN dnf install -y \\\n    intel-opencl intel-media intel-mediasdk \\\n    level-zero intel-level-zero-gpu \\\n    intel-igc-opencl-devel \\\n    intel-igc-cm level-zero-devel\n\nENV XDG_RUNTIME_DIR=${PATH}:/usr/xdgr\nENV DISPLAY=:0.0\n\n\n# Install Intel® OpenVINO\nARG OPENVINO_REPO_URL=https://yum.repos.intel.com/openvino/2022\nRUN echo \\\n$'[OpenVINO] \\n\\\nname=Intel(R) Distribution of OpenVINO 2022 \\n\\\nbaseurl='${OPENVINO_REPO_URL}$' \\n\\\nenabled=1 \\n\\\ngpgcheck=1 \\n\\\nrepo_gpgcheck=1 \\n\\\ngpgkey=https://yum.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB ' > /etc/yum.repos.d/openvino-2022.repo\n\nRUN yum list -y openvino*\nRUN yum install -y openvino openvino-opencv && rm -rf /var/cache/yum\nRUN /opt/intel/openvino_2022/install_dependencies/install_openvino_dependencies.sh -y\n\nARG EXTRA_PYPI_INDEX_URL\nRUN yum install -y python3-pip && pip3 install --no-cache-dir --upgrade pip && rm -rf /var/cache/yum\nRUN if [ -n \"$EXTRA_PYPI_INDEX_URL\"  ] ; then \\\n    python3 -m pip config set global.extra-index-url ${EXTRA_PYPI_INDEX_URL} ;\\\n    fi\nRUN python3 -m pip install openvino-dev[onnx,tensorflow2,pytorch,mxnet] --ignore-installed PyYAML\n\nRUN useradd -ms /bin/bash -u 1000 -G video dlstreamer\nARG DLS_HOME=/home/dlstreamer\nWORKDIR ${DLS_HOME}\n\n# Download DL Streamer source code\nARG DLSTREAMER_GIT_URL=\"https://github.com/dlstreamer/dlstreamer.git\"\nARG DLSTREAMER_SOURCE_DIR=${DLS_HOME}/dlstreamer\nRUN git clone ${DLSTREAMER_GIT_URL} ${DLSTREAMER_SOURCE_DIR} \\\n    && cd ${DLSTREAMER_SOURCE_DIR} \\\n    && git submodule update --init \\\n    && python3 -m pip install --no-cache-dir -r requirements.txt\n\nARG ENABLE_PAHO_INSTALLATION=ON\nARG ENABLE_RDKAFKA_INSTALLATION=ON\nARG BUILD_TYPE=Release\nARG EXTERNAL_DLS_BUILD_FLAGS\n\n# Install Metapublish dependencies\nARG ENABLE_PAHO_INSTALLATION=ON\nARG ENABLE_RDKAFKA_INSTALLATION=ON\nRUN if [[ \"$ENABLE_PAHO_INSTALLATION\" = \"ON\" || \"$ENABLE_RDKAFKA_INSTALLATION\" = \"ON\" ]] ; then \\\n    ${DLSTREAMER_SOURCE_DIR}/scripts/install_metapublish_dependencies.sh; \\\n    fi\n\nRUN rpm --import http://li.nux.ro/download/nux/RPM-GPG-KEY-nux.ro\nRUN yum install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm && \\\n    subscription-manager repos --enable \"codeready-builder-for-rhel-8-$(arch)-rpms\" && rm -rf /var/cache/yum\nRUN rpm -Uvh http://li.nux.ro/download/nux/dextop/el7/x86_64/nux-dextop-release-0-5.el7.nux.noarch.rpm && \\\n    rpm -Uvh https://download1.rpmfusion.org/free/el/rpmfusion-free-release-7.noarch.rpm\nRUN yum install -y \\\n    cpio pciutils automake autoconf openssl make  xz pkg-config \\\n    libva-devel systemd-devel ca-certificates \\\n    python3 python3-devel python3-setuptools pygobject3-devel \\\n    gmp gsl libcap gettext libXrandr libX11 iso-codes libXv \\\n    mesa-libEGL mesa-libGLES mesa-libGL \\\n    libgudev1 libtheora cdparanoia \\\n    pango mesa-libgbm alsa-lib libjpeg-turbo \\\n    libvisual bzip2 libv4l flac gdk-pixbuf2 libdv mpg123 \\\n    libraw1394 libiec61883 pulseaudio-libs libsoup \\\n    speex wavpack opus bluez-libs \\\n    libass-devel libbs2b libchromaprint lcms2 \\\n    libdc1394 libXext libssh libdca faac \\\n    fdk-aac flite fluidsynth game-music-emu gsm \\\n    nettle liblrdf libmodplug libmpcdec neon \\\n    openal-soft OpenEXR-devel openjpeg2 librsvg2 \\\n    libsndfile soundtouch spandsp libsrtp zvbi \\\n    wildmidi libnice libxkbcommon numactl && \\\n    yum clean all && rm -rf /var/cache/yum\n\n# Build DL Streamer\nARG GIT_INFO\nRUN source /opt/intel/openvino_2022/setupvars.sh && \\\n    mkdir -p ${DLSTREAMER_SOURCE_DIR}/build && \\\n    cd ${DLSTREAMER_SOURCE_DIR}/build  && \\\n    cmake \\\n    -DCMAKE_BUILD_TYPE=${BUILD_TYPE} \\\n    -DCMAKE_INSTALL_PREFIX=${DLSTREAMER_INSTALL_DIR} \\\n    -DGIT_INFO=${GIT_INFO} \\\n    -DENABLE_PAHO_INSTALLATION=${ENABLE_PAHO_INSTALLATION} \\\n    -DENABLE_RDKAFKA_INSTALLATION=${ENABLE_RDKAFKA_INSTALLATION} \\\n    -DENABLE_VAAPI=ON \\\n    ${EXTERNAL_DLS_BUILD_FLAGS} \\\n    .. && \\\n    make -j $(nproc) && \\\n    make install\n\nRUN chown -R dlstreamer ${DLS_HOME}/dlstreamer\nRUN chown -R dlstreamer ${DLSTREAMER_INSTALL_DIR}\n\n# Setup environment\nENV DLSTREAMER_DIR=${DLSTREAMER_INSTALL_DIR}\nENV INTEL_OPENVINO_DIR=\"/opt/intel/openvino_2022\"\nENV HDDL_INSTALL_DIR=\"$INTEL_OPENVINO_DIR/runtime/3rdparty/hddl\"\nENV TBB_DIR=\"$INTEL_OPENVINO_DIR/runtime/3rdparty/tbb/cmake\"\nENV OpenCV_DIR=\"$INTEL_OPENVINO_DIR/extras/opencv/cmake/\"\nENV OpenVINO_DIR=\"$INTEL_OPENVINO_DIR/runtime/cmake\"\nENV InferenceEngine_DIR=\"$INTEL_OPENVINO_DIR/runtime/cmake\"\nENV ngraph_DIR=\"$INTEL_OPENVINO_DIR/runtime/cmake\"\n\nENV PATH=\"${DLSTREAMER_DIR}/gstreamer/bin:${DLSTREAMER_DIR}/gstreamer/bin/gstreamer-1.0:${PATH}\"\nENV LIBRARY_PATH=\"${DLSTREAMER_DIR}/lib:${DLSTREAMER_DIR}/gstreamer/lib:$INTEL_OPENVINO_DIR/tools/compile_tool:$INTEL_OPENVINO_DIR/runtime/3rdparty/tbb/lib:$INTEL_OPENVINO_DIR/runtime/3rdparty/hddl/lib:$INTEL_OPENVINO_DIR/extras/opencv/lib/:$INTEL_OPENVINO_DIR/runtime/lib/intel64:/usr/lib:/usr/local/lib:${LIBRARY_PATH}\"\nENV LD_LIBRARY_PATH=\"${DLSTREAMER_DIR}/lib/gstreamer-1.0:${DLSTREAMER_DIR}/lib:${DLSTREAMER_DIR}/gstreamer/lib:$INTEL_OPENVINO_DIR/tools/compile_tool:$INTEL_OPENVINO_DIR/runtime/3rdparty/tbb/lib:$INTEL_OPENVINO_DIR/runtime/3rdparty/hddl/lib:$INTEL_OPENVINO_DIR/extras/opencv/lib/:$INTEL_OPENVINO_DIR/runtime/lib/intel64:/usr/lib:/usr/local/lib:$LD_LIBRARY_PATH\"\nENV PKG_CONFIG_PATH=\"${DLSTREAMER_DIR}/lib/pkgconfig:${DLSTREAMER_DIR}/gstreamer/lib/pkgconfig:/usr/lib/x86_64-linux-gnu/pkgconfig:${PKG_CONFIG_PATH}\"\nENV PYTHONPATH=\"${DLSTREAMER_DIR}/python:${DLSTREAMER_DIR}/gstreamer/lib/python3.8/site-packages:$INTEL_OPENVINO_DIR/python/python3.8:$INTEL_OPENVINO_DIR/python/python3:$PYTHONPATH\"\n\nENV GST_PLUGIN_PATH=\"${DLSTREAMER_DIR}/lib:${DLSTREAMER_DIR}/gstreamer/lib/gstreamer-1.0:${GST_PLUGIN_PATH}\"\nENV GST_PLUGIN_SCANNER=\"${DLSTREAMER_DIR}/gstreamer/bin/gstreamer-1.0/gst-plugin-scanner\"\nENV GI_TYPELIB_PATH=\"${DLSTREAMER_DIR}/gstreamer/lib/girepository-1.0:${GI_TYPELIB_PATH}\"\nENV MODELS_PATH=\"${MODELS_PATH:-${DLS_HOME}/intel/dl_streamer/models}\"\n\nENV LC_NUMERIC=\"C\"\nENV LIBVA_DRIVER_NAME=\"iHD\"\n\nWORKDIR ${DLSTREAMER_DIR}/samples\nUSER dlstreamer\nCMD [\"/bin/bash\"]\n"
}