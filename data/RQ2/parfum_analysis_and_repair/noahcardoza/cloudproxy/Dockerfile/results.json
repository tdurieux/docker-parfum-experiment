{
  "startTime": 1674255536692,
  "endTime": 1674255537538,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:15.2.1-alpine3.11\n\n# Print build information (ARGS are automatic, and target can be set)\nARG TARGETPLATFORM\nARG BUILDPLATFORM\nRUN printf \"I am running on ${BUILDPLATFORM}, building for ${TARGETPLATFORM}\\n$(uname -a)\\n\"\n\n# Install Chromium and dumb-init and remove all locales but en-US\nRUN apk add --no-cache chromium dumb-init && \\\r\n    find /usr/lib/chromium/locales -type f ! -name 'en-US.*' -delete\n\n# Copy needed files into ~/cloudproxy/\nUSER node\nRUN mkdir -p /home/node/cloudproxy\nWORKDIR /home/node/cloudproxy\nCOPY --chown=node:node package.json package-lock.json tsconfig.json LICENSE ./\nCOPY --chown=node:node src ./src/\n\n# Skip installing Chrome, we will use the installed package.\nENV PUPPETEER_PRODUCT=chrome \\\r\n    PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true \\\r\n    PUPPETEER_EXECUTABLE_PATH=/usr/bin/chromium-browser\n\n# Install, build, and remove source code & dev packages\nRUN npm install && \\\r\n    npm run build && \\\r\n    rm -rf src tsconfig.json && \\\n    npm prune --production && npm cache clean --force;\n\nEXPOSE 8191\nENTRYPOINT [\"/usr/bin/dumb-init\", \"--\"]\nCMD [\"npm\", \"start\"]\n"
}