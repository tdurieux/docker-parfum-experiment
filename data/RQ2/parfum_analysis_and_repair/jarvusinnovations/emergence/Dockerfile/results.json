{
  "startTime": 1674245977936,
  "endTime": 1674245979355,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 7,
        "columnEnd": 53
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 4,
        "columnEnd": 97
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 82,
        "lineEnd": 82,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 36,
        "columnStart": 7,
        "columnEnd": 11
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04\n\n\n# initialize .ssh directory\nRUN mkdir -p ~/.ssh \\\n    && chmod 700 ~/.ssh \\\n    && touch ~/.ssh/authorized_keys \\\n    && chmod 600 ~/.ssh/authorized_keys\n\n\n# intsall Ubuntu packages\nRUN export DEBIAN_FRONTEND=noninteractive \\\n    && export LC_ALL=en_US.UTF-8 \\\n    && apt-get update \\\n    && apt-get install --no-install-recommends -y --allow-unauthenticated \\\n        apt-utils \\\n        curl \\\n        g++ \\\n        gettext \\\n        git \\\n        imagemagick \\\n        language-pack-en-base \\\n        make \\\n        mysql-client \\\n        mysql-server \\\n        nginx \\\n        openssh-server \\\n        postfix \\\n        python \\\n        python-software-properties \\\n        ruby-compass \\\n        ruby-dev \\\n        screen \\\n        software-properties-common \\\n        sudo \\\n        tmux \\\n        vim \\\n    && add-apt-repository -y ppa:ondrej/php \\\n    && add-apt-repository ppa:certbot/certbot \\\n    && curl -f -sL https://deb.nodesource.com/setup_10.x | bash \\\n    # && apt-get update \\ # above calls apt-get update\n    && apt-get install -y --allow-unauthenticated --no-install-recommends \\\n        certbot python3-pyasn1 \\\n        nodejs \\\n        php-apcu \\\n        php5.6-cli \\\n        php5.6-curl \\\n        php5.6-fpm \\\n        php5.6-gd \\\n        php5.6-imagick \\\n        php5.6-intl \\\n        php5.6-json \\\n        php5.6-mbstring \\\n        php5.6-mysql \\\n        php5.6-xml \\\n    && rm -rf /var/lib/apt/lists/*\n\n\n# disable built-in services for emergence\nRUN service nginx stop \\\n    && service php5.6-fpm stop \\\n    && service mysql stop \\\n    && service apparmor stop \\\n    && update-rc.d -f nginx disable \\\n    && update-rc.d -f php5.6-fpm disable \\\n    && update-rc.d -f mysql disable \\\n    && update-rc.d -f apparmor disable\n\n\n# install Habitat client and packages for emergence\nRUN curl -f -s https://raw.githubusercontent.com/habitat-sh/habitat/master/components/hab/install.sh | bash -s -- -v 0.79.0\nRUN hab pkg install jarvus/sencha-cmd/6.5.2.15 jarvus/underscore \\\n    && hab pkg binlink jarvus/sencha-cmd sencha \\\n    && hab pkg binlink jarvus/underscore underscore\n\n\n# install helpful administrative commands\nRUN npm install -g htpasswd && npm cache clean --force;\n\n\n# install emergence\nCOPY . /src\nRUN npm install -g /src && npm cache clean --force;\n\n\n# link certbot renewal hook to reload nginx\nRUN mkdir -p /etc/letsencrypt/renewal-hooks/deploy \\\n    && ln -s /src/bin/reload-nginx /etc/letsencrypt/renewal-hooks/deploy/01-reload-nginx\n\n\n# setup and expose emergence\nRUN mkdir -p /emergence\nEXPOSE 22 80 3306 9083\nENV MYSQL_HOME=/emergence/services/etc\nVOLUME [\"/emergence\", \"/etc/letsencrypt\"]\n\n\n# setup entrypoint\nRUN echo '#!/bin/bash\\nrm /emergence/kernel.sock /emergence/services/run/*/*\\nexec emergence-kernel' > /entrypoint.sh \\\n    && chmod +x /entrypoint.sh\nCMD [\"/entrypoint.sh\"]\n"
}