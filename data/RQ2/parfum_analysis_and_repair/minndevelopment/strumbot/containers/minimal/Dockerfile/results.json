{
  "startTime": 1674250732931,
  "endTime": 1674250734155,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 20
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Preprocessing a minimal JRE distribution\nFROM alpine as packager\n\nENV JAVA_MINIMAL=\"/opt/java-minimal\"\n\nRUN apk add --no-cache openjdk17-jdk\nRUN apk add --no-cache openjdk17-jmods\nRUN apk add --no-cache binutils\n\nRUN jlink \\\n    --verbose \\\n    --add-modules java.base,java.logging,java.xml,jdk.crypto.ec \\\n    --compress 2 \\\n    --strip-debug \\\n    --no-header-files \\\n    --no-man-pages \\\n    --output \"$JAVA_MINIMAL\"\n\n# Build our image with the minimal JRE\nFROM alpine\n\nWORKDIR /opt/strumbot\n\nENV JAVA_HOME=/opt/java-minimal\nENV PATH=\"$PATH:$JAVA_HOME/bin\"\n\nCOPY build/release/strumbot/strumbot.jar .\n\nCOPY --from=packager \"$JAVA_HOME\" \"$JAVA_HOME\"\n\nRUN apk --no-cache add ca-certificates\n\nCMD [ \\\n \"java\", \\\n \"-Xmx256m\", \\\n \"-XX:+ShowCodeDetailsInExceptionMessages\", \\\n \"-XX:+CrashOnOutOfMemoryError\", \\\n \"-jar\", \\\n \"strumbot.jar\" \\\n]\n"
}