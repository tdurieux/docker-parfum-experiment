{
  "startTime": 1674256058972,
  "endTime": 1674256059650,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 184
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 79
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM centos:7\n\nLABEL name=\"falcosecurity/falco-builder\"\nLABEL usage=\"docker run -v $PWD/..:/source -v $PWD/build:/build falcosecurity/falco-builder cmake\"\nLABEL maintainer=\"cncf-falco-dev@lists.cncf.io\"\n\nARG BUILD_TYPE=release\nARG BUILD_DRIVER=OFF\nARG BUILD_BPF=OFF\nARG BUILD_WARNINGS_AS_ERRORS=ON\nARG MAKE_JOBS=4\nARG FALCO_VERSION\nARG CMAKE_VERSION=3.22.5\n\nENV BUILD_TYPE=${BUILD_TYPE}\nENV BUILD_DRIVER=${BUILD_DRIVER}\nENV BUILD_BPF=${BUILD_BPF}\nENV BUILD_WARNINGS_AS_ERRORS=${BUILD_WARNINGS_AS_ERRORS}\nENV MAKE_JOBS=${MAKE_JOBS}\nENV FALCO_VERSION=${FALCO_VERSION}\nENV CMAKE_VERSION=${CMAKE_VERSION}\n\n# build toolchain\nRUN yum -y install centos-release-scl && \\\n    INSTALL_PKGS=\"devtoolset-7-gcc devtoolset-7-gcc-c++ devtoolset-7-toolchain devtoolset-7-libstdc++-devel devtoolset-7-elfutils-libelf-devel llvm-toolset-7.0 glibc-static autoconf automake libtool createrepo expect git which libcurl-devel zlib-devel rpm-build libyaml-devel\" && \\\n    yum -y install --setopt=tsflags=nodocs $INSTALL_PKGS && \\\n    rpm -V $INSTALL_PKGS && rm -rf /var/cache/yum\n\n\nRUN source scl_source enable devtoolset-7 llvm-toolset-7.0\n\nRUN curl -f -L -o /tmp/cmake-${CMAKE_VERSION}-linux-$(uname -m).tar.gz https://github.com/kitware/cmake/releases/download/v${CMAKE_VERSION}/cmake-${CMAKE_VERSION}-linux-$(uname -m).tar.gz && \\\n    gzip -d /tmp/cmake-${CMAKE_VERSION}-linux-$(uname -m).tar.gz && \\\n    tar -xpf /tmp/cmake-${CMAKE_VERSION}-linux-$(uname -m).tar --directory=/tmp && \\\n    cp -R /tmp/cmake-${CMAKE_VERSION}-linux-$(uname -m)/* /usr && \\\n    rm -rf /tmp/cmake-${CMAKE_VERSION}-linux-$(uname -m) && rm /tmp/cmake-${CMAKE_VERSION}-linux-$( uname -m).tar\n\nCOPY ./root /\n\n# DTS\nENV BASH_ENV=/usr/bin/scl_enable \\\n    ENV=/usr/bin/scl_enable \\\n    PROMPT_COMMAND=\". /usr/bin/scl_enable\"\n\nENTRYPOINT [\"entrypoint\"]\nCMD [\"usage\"]\n"
}