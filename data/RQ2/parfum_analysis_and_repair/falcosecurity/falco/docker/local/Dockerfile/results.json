{
  "startTime": 1674220841152,
  "endTime": 1674220842452,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 41,
        "columnEnd": 170
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 120
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 130
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 120
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 126
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 134
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 128
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 4,
        "columnEnd": 124
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 4,
        "columnEnd": 122
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 74,
        "lineEnd": 74,
        "columnStart": 41,
        "columnEnd": 162
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 4,
        "columnEnd": 120
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 4,
        "columnEnd": 130
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 4,
        "columnEnd": 120
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 4,
        "columnEnd": 126
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 79,
        "lineEnd": 79,
        "columnStart": 4,
        "columnEnd": 134
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 80,
        "lineEnd": 80,
        "columnStart": 4,
        "columnEnd": 122
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 113,
        "lineEnd": 113,
        "columnStart": 4,
        "columnEnd": 159
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 115,
        "lineEnd": 115,
        "columnStart": 4,
        "columnEnd": 162
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 118,
        "lineEnd": 118,
        "columnStart": 4,
        "columnEnd": 124
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 119,
        "lineEnd": 119,
        "columnStart": 4,
        "columnEnd": 130
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 120,
        "lineEnd": 120,
        "columnStart": 4,
        "columnEnd": 138
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 9,
        "columnEnd": 73
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 9,
        "columnEnd": 73
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 68
      }
    }
  ],
  "repairedDockerfile": "FROM debian:buster\n\nLABEL usage=\"docker run -i -t -v /var/run/docker.sock:/host/var/run/docker.sock -v /dev:/host/dev -v /proc:/host/proc:ro -v /boot:/host/boot:ro -v /lib/modules:/host/lib/modules:ro -v /usr:/host/usr:ro --name NAME IMAGE\"\nLABEL maintainer=\"cncf-falco-dev@lists.cncf.io\"\n\nARG TARGETARCH\n\nARG FALCO_VERSION=\nRUN test -n FALCO_VERSION\nENV FALCO_VERSION ${FALCO_VERSION}\n\nENV HOST_ROOT /host\n\nENV HOME /root\n\nRUN cp /etc/skel/.bashrc /root && cp /etc/skel/.profile /root\n\nRUN apt-get update \\\n\t&& apt-get install -y --no-install-recommends \\\n\tbash-completion \\\n\tbc \\\n\tclang-7 \\\n\tca-certificates \\\n\tcurl \\\n\tdkms \\\n\tgnupg2 \\\n\tgcc \\\n\tjq \\\n\tlibc6-dev \\\n\tlibelf-dev \\\n\tlibyaml-0-2 \\\n\tllvm-7 \\\n\tnetcat \\\n\txz-utils \\\n\tlibmpc3 \\\n\tbinutils \\\n\tlibgomp1 \\\n\tlibitm1 \\\n\tlibatomic1 \\\n\tliblsan0 \\\n\tlibtsan0 \\\n\tlibcc1-0 \\\n\tpatchelf \\\n\t&& rm -rf /var/lib/apt/lists/*\n\nRUN if [ \"$TARGETARCH\" = \"amd64\" ]; \\\n    then \\\n    apt-get install -y --no-install-recommends libmpx2 libquadmath0; rm -rf /var/lib/apt/lists/*; \\\n    fi\n\n# gcc 6 is no longer included in debian stable, but we need it to\n# build kernel modules on the default debian-based ami used by\n# kops. So grab copies we've saved from debian snapshots with the\n# prefix https://snapshot.debian.org/archive/debian/20170517T033514Z\n# or so.\n\nRUN if [ \"$TARGETARCH\" = \"amd64\" ]; then \\\n curl -f -L -o libcilkrts5_6.3.0-18_${TARGETARCH}.deb https://download.falco.org/dependencies/libcilkrts5_6.3.0-18_${TARGETARCH}.deb; fi; \\\n    curl -f -L -o cpp-6_6.3.0-18_${TARGETARCH}.deb https://download.falco.org/dependencies/cpp-6_6.3.0-18_${TARGETARCH}.deb \\\n\t&& curl -f -L -o gcc-6-base_6.3.0-18_${TARGETARCH}.deb https://download.falco.org/dependencies/gcc-6-base_6.3.0-18_${TARGETARCH}.deb \\\n\t&& curl -f -L -o gcc-6_6.3.0-18_${TARGETARCH}.deb https://download.falco.org/dependencies/gcc-6_6.3.0-18_${TARGETARCH}.deb \\\n\t&& curl -f -L -o libasan3_6.3.0-18_${TARGETARCH}.deb https://download.falco.org/dependencies/libasan3_6.3.0-18_${TARGETARCH}.deb \\\n\t&& curl -f -L -o libgcc-6-dev_6.3.0-18_${TARGETARCH}.deb https://download.falco.org/dependencies/libgcc-6-dev_6.3.0-18_${TARGETARCH}.deb \\\n\t&& curl -f -L -o libubsan0_6.3.0-18_${TARGETARCH}.deb https://download.falco.org/dependencies/libubsan0_6.3.0-18_${TARGETARCH}.deb \\\n\t&& curl -f -L -o libmpfr4_3.1.3-2_${TARGETARCH}.deb https://download.falco.org/dependencies/libmpfr4_3.1.3-2_${TARGETARCH}.deb \\\n\t&& curl -f -L -o libisl15_0.18-1_${TARGETARCH}.deb https://download.falco.org/dependencies/libisl15_0.18-1_${TARGETARCH}.deb \\\n\t&& dpkg -i cpp-6_6.3.0-18_${TARGETARCH}.deb gcc-6-base_6.3.0-18_${TARGETARCH}.deb gcc-6_6.3.0-18_${TARGETARCH}.deb libasan3_6.3.0-18_${TARGETARCH}.deb; \\\n    if [ \"$TARGETARCH\" = \"amd64\" ]; then dpkg -i libcilkrts5_6.3.0-18_${TARGETARCH}.deb; fi; \\\n    dpkg -i libgcc-6-dev_6.3.0-18_${TARGETARCH}.deb libubsan0_6.3.0-18_${TARGETARCH}.deb libmpfr4_3.1.3-2_${TARGETARCH}.deb libisl15_0.18-1_${TARGETARCH}.deb \\\n\t&& rm -f cpp-6_6.3.0-18_${TARGETARCH}.deb gcc-6-base_6.3.0-18_${TARGETARCH}.deb gcc-6_6.3.0-18_${TARGETARCH}.deb libasan3_6.3.0-18_${TARGETARCH}.deb libcilkrts5_6.3.0-18_${TARGETARCH}.deb libgcc-6-dev_6.3.0-18_${TARGETARCH}.deb libubsan0_6.3.0-18_${TARGETARCH}.deb libmpfr4_3.1.3-2_${TARGETARCH}.deb libisl15_0.18-1_${TARGETARCH}.deb\n\n# gcc 5 is no longer included in debian stable, but we need it to\n# build centos kernels, which are 3.x based and explicitly want a gcc\n# version 3, 4, or 5 compiler. So grab copies we've saved from debian\n# snapshots with the prefix https://snapshot.debian.org/archive/debian/20190122T000000Z.\n\nRUN if [ \"$TARGETARCH\" = \"amd64\" ]; then \\\n curl -f -L -o libmpx0_5.5.0-12_${TARGETARCH}.deb https://download.falco.org/dependencies/libmpx0_5.5.0-12_${TARGETARCH}.deb; fi; \\\n    curl -f -L -o cpp-5_5.5.0-12_${TARGETARCH}.deb https://download.falco.org/dependencies/cpp-5_5.5.0-12_${TARGETARCH}.deb \\\n\t&& curl -f -L -o gcc-5-base_5.5.0-12_${TARGETARCH}.deb https://download.falco.org/dependencies/gcc-5-base_5.5.0-12_${TARGETARCH}.deb \\\n\t&& curl -f -L -o gcc-5_5.5.0-12_${TARGETARCH}.deb https://download.falco.org/dependencies/gcc-5_5.5.0-12_${TARGETARCH}.deb \\\n\t&& curl -f -L -o libasan2_5.5.0-12_${TARGETARCH}.deb https://download.falco.org/dependencies/libasan2_5.5.0-12_${TARGETARCH}.deb \\\n\t&& curl -f -L -o libgcc-5-dev_5.5.0-12_${TARGETARCH}.deb https://download.falco.org/dependencies/libgcc-5-dev_5.5.0-12_${TARGETARCH}.deb \\\n\t&& curl -f -L -o libisl15_0.18-4_${TARGETARCH}.deb https://download.falco.org/dependencies/libisl15_0.18-4_${TARGETARCH}.deb \\\n\t&& dpkg -i cpp-5_5.5.0-12_${TARGETARCH}.deb gcc-5-base_5.5.0-12_${TARGETARCH}.deb gcc-5_5.5.0-12_${TARGETARCH}.deb libasan2_5.5.0-12_${TARGETARCH}.deb; \\\n    if [ \"$TARGETARCH\" = \"amd64\" ]; then dpkg -i libmpx0_5.5.0-12_${TARGETARCH}.deb; fi; \\\n    dpkg -i libgcc-5-dev_5.5.0-12_${TARGETARCH}.deb libisl15_0.18-4_${TARGETARCH}.deb \\\n\t&& rm -f cpp-5_5.5.0-12_${TARGETARCH}.deb gcc-5-base_5.5.0-12_${TARGETARCH}.deb gcc-5_5.5.0-12_${TARGETARCH}.deb libasan2_5.5.0-12_${TARGETARCH}.deb libgcc-5-dev_5.5.0-12_${TARGETARCH}.deb libisl15_0.18-4_${TARGETARCH}.deb libmpx0_5.5.0-12_${TARGETARCH}.deb\n\n# Since our base Debian image ships with GCC 7 which breaks older kernels, revert the\n# default to gcc-5.\nRUN rm -rf /usr/bin/gcc && ln -s /usr/bin/gcc-5 /usr/bin/gcc\n\nRUN rm -rf /usr/bin/clang \\\n\t&& rm -rf /usr/bin/llc \\\n\t&& ln -s /usr/bin/clang-7 /usr/bin/clang \\\n\t&& ln -s /usr/bin/llc-7 /usr/bin/llc\n\n# Some base images have an empty /lib/modules by default\n# If it's not empty, docker build will fail instead of\n# silently overwriting the existing directory\nRUN rm -df /lib/modules \\\n\t&& ln -s $HOST_ROOT/lib/modules /lib/modules\n\nADD falco-${FALCO_VERSION}-*.deb /\nRUN dpkg -i /falco-${FALCO_VERSION}-$(uname -m).deb\n\n# Change the falco config within the container to enable ISO 8601\n# output.\nRUN sed -e 's/time_format_iso_8601: false/time_format_iso_8601: true/' < /etc/falco/falco.yaml > /etc/falco/falco.yaml.new \\\n\t&& mv /etc/falco/falco.yaml.new /etc/falco/falco.yaml\n\n# debian:stable head contains binutils 2.31, which generates\n# binaries that are incompatible with kernels < 4.16. So manually\n# forcibly install binutils 2.30-22 instead.\nRUN if [ \"$TARGETARCH\" = \"amd64\" ] ; then \\\n    curl -f -L -o binutils-x86-64-linux-gnu_2.30-22_${TARGETARCH}.deb https://download.falco.org/dependencies/binutils-x86-64-linux-gnu_2.30-22_${TARGETARCH}.deb; \\\n    else \\\n    curl -f -L -o  binutils-aarch64-linux-gnu_2.30-22_${TARGETARCH}.deb https://download.falco.org/dependencies/binutils-aarch64-linux-gnu_2.30-22_${TARGETARCH}.deb; \\\n    fi\n\nRUN curl -f -L -o binutils_2.30-22_${TARGETARCH}.deb https://download.falco.org/dependencies/binutils_2.30-22_${TARGETARCH}.deb \\\n\t&& curl -f -L -o libbinutils_2.30-22_${TARGETARCH}.deb https://download.falco.org/dependencies/libbinutils_2.30-22_${TARGETARCH}.deb \\\n\t&& curl -f -L -o binutils-common_2.30-22_${TARGETARCH}.deb https://download.falco.org/dependencies/binutils-common_2.30-22_${TARGETARCH}.deb \\\n\t&& dpkg -i *binutils*.deb \\\n\t&& rm -f *binutils*.deb\n\n# The local container also copies some test trace files and\n# corresponding rules that are used when running regression tests.\nCOPY rules/*.yaml /rules/\nCOPY traces/*.scap /traces/\n\nCOPY ./docker-entrypoint.sh /\n\nENTRYPOINT [\"/docker-entrypoint.sh\"]\n\nCMD [\"/usr/bin/falco\"]\n"
}