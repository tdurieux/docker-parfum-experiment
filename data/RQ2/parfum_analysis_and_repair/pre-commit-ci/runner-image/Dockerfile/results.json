{
  "startTime": 1674217266610,
  "endTime": 1674217268600,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 7,
        "columnEnd": 116
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 93,
        "lineEnd": 93,
        "columnStart": 7,
        "columnEnd": 96
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 103,
        "lineEnd": 103,
        "columnStart": 7,
        "columnEnd": 123
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 123,
        "lineEnd": 123,
        "columnStart": 7,
        "columnEnd": 140
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 139,
        "lineEnd": 139,
        "columnStart": 7,
        "columnEnd": 219
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 175,
        "lineEnd": 175,
        "columnStart": 7,
        "columnEnd": 126
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 187,
        "lineEnd": 187,
        "columnStart": 7,
        "columnEnd": 166
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 204,
        "lineEnd": 204,
        "columnStart": 7,
        "columnEnd": 148
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 218,
        "lineEnd": 218,
        "columnStart": 7,
        "columnEnd": 97
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 220,
        "lineEnd": 220,
        "columnStart": 7,
        "columnEnd": 118
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 73,
        "lineEnd": 73,
        "columnStart": 7,
        "columnEnd": 54
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 227,
        "lineEnd": 227,
        "columnStart": 7,
        "columnEnd": 36
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 124,
        "lineEnd": 124,
        "columnStart": 7,
        "columnEnd": 62
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 140,
        "lineEnd": 140,
        "columnStart": 7,
        "columnEnd": 67
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 205,
        "lineEnd": 205,
        "columnStart": 7,
        "columnEnd": 109
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:focal\n\nENTRYPOINT [\"dumb-init\", \"--\"]\n\nRUN : \\\n    && apt-get update \\\n    && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \\\n        ca-certificates \\\n        cmake \\\n        curl \\\n        dumb-init \\\n        g++ \\\n        gcc \\\n        git \\\n        gnupg2 \\\n        libblas3 \\\n        libc6 \\\n        libedit2 \\\n        libffi-dev \\\n        libgcc1 \\\n        libgdiplus \\\n        libgssapi-krb5-2 \\\n        libicu66 \\\n        liblapack3 \\\n        libssl1.1 \\\n        libstdc++6 \\\n        libxml2 \\\n        libyaml-dev \\\n        libz3-dev \\\n        make \\\n        python2-dev \\\n        python3-dev \\\n        python3-distutils \\\n        ruby-dev \\\n        unzip \\\n        zlib1g \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/* \\\n    && :\n\nRUN : \\\n    && . /etc/lsb-release \\\n    && apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys F23C5A6CF475977595C89F51BA6932366A755776 \\\n    && echo deb http://ppa.launchpad.net/deadsnakes/ppa/ubuntu $DISTRIB_CODENAME main > /etc/apt/sources.list.d/deadsnakes.list \\\n    && apt-get update \\\n    && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \\\n        python3.6-dev \\\n        python3.6-distutils \\\n        python3.7-dev \\\n        python3.7-distutils \\\n        python3.9-dev \\\n        python3.9-distutils \\\n        python3.10-dev \\\n        python3.10-distutils \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/* \\\n    && :\n\nENV \\\n    PATH=/venv/bin:$PATH \\\n    PRE_COMMIT_HOME=/pc \\\n    npm_config_cache=/tmp/npm \\\n    PIP_DISABLE_PIP_VERSION_CHECK=1 \\\n    PIP_NO_CACHE_DIR=1 \\\n    VIRTUALENV_ACTIVATORS=bash \\\n    VIRTUALENV_NO_PERIODIC_UPDATE=1 \\\n    VIRTUALENV_PIP=embed \\\n    VIRTUALENV_SETUPTOOLS=embed \\\n    VIRTUALENV_WHEEL=embed\nCOPY requirements.txt /tmp/requirements.txt\nRUN : \\\n    && curl -f --silent --location --output /tmp/virtualenv.pyz https://bootstrap.pypa.io/virtualenv/3.8/virtualenv.pyz \\\n    && python3.10 /tmp/virtualenv.pyz /venv \\\n    && pip install --no-cache-dir --requirement /tmp/requirements.txt \\\n    && rm -rf ~/.local /tmp/virtualenv.pyz \\\n    && :\n\n# ensure virtualenv appdata cache is populated\nENV \\\n    VIRTUALENV_OVERRIDE_APP_DATA=/opt/virtualenv/cache \\\n    VIRTUALENV_SYMLINK_APP_DATA=1\nCOPY build/seed-virtualenv-cache /tmp/seed-virtualenv-cache\nRUN /tmp/seed-virtualenv-cache\nENV VIRTUALENV_READ_ONLY_APP_DATA=1\n\n# pre-commit.ci requires cross-user readonly `/src` repo access\nRUN git config --system --add safe.directory /src\n\nARG GO=1.18\nARG GO_SHA256=e85278e98f57cdb150fe8409e6e5df5343ecb13cebf03a5d5ff12bd55a80264f\nENV PATH=/opt/go/bin:$PATH XDG_CACHE_HOME=/tmp/cache GOFLAGS=-modcacherw\nRUN : \\\n    && mkdir -p /opt \\\n    && curl -f --location --silent --output go.tgz https://golang.org/dl/go${GO}.linux-amd64.tar.gz \\\n    && echo \"${GO_SHA256}  go.tgz\" | sha256sum --check \\\n    && tar -C /opt -xf go.tgz \\\n    && rm -rf /opt/go/doc /opt/go/test \\\n    && rm go.tgz\n\nARG NODE=18.0.0\nARG NODE_SHA256=6260d3526dff25d43451ea8e90e0174975b4cd067e8535dc1d85a6d6b29f3043\nENV PATH=/opt/node/bin:$PATH\nRUN : \\\n    && curl -f --silent --location --output /tmp/node.tar.gz \"https://nodejs.org/dist/v${NODE}/node-v${NODE}-linux-x64.tar.gz\" \\\n    && echo \"${NODE_SHA256}  /tmp/node.tar.gz\" | sha256sum --check \\\n    && mkdir /opt/node \\\n    && tar --strip-components 1 --directory /opt/node -xf /tmp/node.tar.gz \\\n    && rm /tmp/node.tar.gz \\\n    && :\n\nRUN echo 'end: minimal'\n\nARG RUST=1.62.0\nARG RUSTUP_SHA256=3dc5ef50861ee18657f9db2eeb7392f9c2a6c95c90ab41e45ab4ca71476b4338\nARG RUSTUP_VERSION=1.24.3\nENV \\\n    CARGO_HOME=/tmp/cargo/home \\\n    RUSTUP_HOME=/opt/rust/rustup \\\n    PATH=/opt/rust/cargo/bin:$PATH\nRUN : \\\n    && echo 'lang: rust' \\\n    && export CARGO_HOME=/opt/rust/cargo \\\n    && rustArch='x86_64-unknown-linux-gnu' \\\n    && curl -f --silent --location --output rustup-init \"https://static.rust-lang.org/rustup/archive/${RUSTUP_VERSION}/${rustArch}/rustup-init\" \\\n    && echo \"${RUSTUP_SHA256}  rustup-init\" | sha256sum --check \\\n    && chmod +x rustup-init \\\n    && ./rustup-init -y --profile minimal --no-modify-path --default-toolchain \"$RUST\" --default-host \"$rustArch\" \\\n    && rm -rf rustup-init \\\n    && rustup component add clippy rustfmt \\\n    && :\n\nARG SWIFT=5.3.2\nARG SWIFT_SHA256=dc360633c85ba16371646da55bcea9f4cf442e3312af2d3f5bb6e85f88d00f7c\nENV \\\n    PATH=/opt/swift/usr/bin:$PATH \\\n    LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/opt/swift/usr/lib\nRUN : \\\n    && echo 'lang: swift' \\\n    && . /etc/lsb-release \\\n    && curl -f --silent --location --output /tmp/swift.tar.gz https://swift.org/builds/swift-$SWIFT-release/ubuntu$(echo $DISTRIB_RELEASE | tr -d \".\")/swift-$SWIFT-RELEASE/swift-$SWIFT-RELEASE-ubuntu$DISTRIB_RELEASE.tar.gz \\\n    && echo \"${SWIFT_SHA256}  /tmp/swift.tar.gz\" | sha256sum --check \\\n    && mkdir /opt/swift \\\n    && tar --strip-components 1 --directory /opt/swift -xf /tmp/swift.tar.gz \\\n    && rm /tmp/swift.tar.gz \\\n    && :\n\nARG DOTNET_URL=https://download.visualstudio.microsoft.com/download/pr/17b6759f-1af0-41bc-ab12-209ba0377779/e8d02195dbf1434b940e0f05ae086453/dotnet-sdk-6.0.100-linux-x64.tar.gz\nARG DOTNET_SHA512=cb0d174a79d6294c302261b645dba6a479da8f7cf6c1fe15ae6998bc09c5e0baec810822f9e0104e84b0efd51fdc0333306cb2a0a6fcdbaf515a8ad8cf1af25b\nENV \\\n    PATH=/opt/dotnet:$PATH \\\n    DOTNET_ROOT=/opt/dotnet \\\n    DOTNET_CLI_HOME=/tmp \\\n    DOTNET_CLI_TELEMETRY_OPTOUT=1\nRUN : \\\n    && echo 'lang: dotnet' \\\n    && dotnet_root=/opt/dotnet \\\n    && mkdir -p $dotnet_root \\\n    && curl \\\n        --location \\\n        --fail \\\n        --silent \\\n        --output /tmp/dotnet.tar.gz \\\n        \"$DOTNET_URL\" \\\n    && echo \"${DOTNET_SHA512} /tmp/dotnet.tar.gz\" | sha512sum --check \\\n    && tar -C $dotnet_root -xf /tmp/dotnet.tar.gz \\\n    && rm /tmp/dotnet.tar.gz \\\n    # Trigger first run output\n    && dotnet build > /dev/null || true \\\n    && :\n\nARG CONDA=py39_4.10.3\nARG CONDA_SHA256=1ea2f885b4dbc3098662845560bc64271eb17085387a70c2ba3f29fff6f8d52f\nENV PATH=/opt/conda/bin:$PATH CONDA_PKGS_DIRS=/tmp/conda/pkgs\nRUN : \\\n    && echo 'lang: conda' \\\n    && curl -f --silent --location --output /tmp/conda.sh \"https://repo.anaconda.com/miniconda/Miniconda3-$CONDA-Linux-x86_64.sh\" \\\n    && bash /tmp/conda.sh -p /opt/conda/install -b \\\n    && mkdir /opt/conda/bin \\\n    && ln -sf /opt/conda/install/bin/conda /opt/conda/bin \\\n    && rm -rf /tmp/conda.sh /root/.conda \\\n    && :\n\nARG DART=2.13.4\nARG DART_SHA256=633a9aa4812b725ff587e2bbf16cd5839224cfe05dcd536e1a74804e80fdb4cd\nENV PATH=/opt/dart/dart-sdk/bin:$PATH\nRUN : \\\n    && echo 'lang: dart' \\\n    && curl -f --silent --location --output /tmp/dart.zip \"https://storage.googleapis.com/dart-archive/channels/stable/release/${DART}/sdk/dartsdk-linux-x64-release.zip\" \\\n    && echo \"${DART_SHA256}  /tmp/dart.zip\" | sha256sum --check \\\n    && mkdir /opt/dart \\\n    && unzip -q -d /opt/dart /tmp/dart.zip \\\n    # permissions are wrong in the archive?\n    # https://github.com/dart-lang/sdk/issues/47093\n    && chmod -R og+rX /opt/dart \\\n    && rm /tmp/dart.zip \\\n    && :\n\nENV \\\n    PATH=/opt/r/bin/:$PATH \\\n    RENV_CONFIG_CACHE_ENABLED=false \\\n    RENV_CONFIG_CACHE_SYMLINKS=false \\\n    RENV_PATHS_ROOT=/tmp/renv\nRUN : \\\n    && echo 'lang: r' \\\n    && curl -f --silent --location --output /tmp/r.tgz https://github.com/pre-commit-ci/runner-image/releases/download/ubuntu-20.04-r-4.2.0/r-4.2.0.tgz \\\n    && echo 'c07ffc4bb2a18886191c1cad0a9bc1b4535f8c07650b7ed780590e529cb8f0c2  /tmp/r.tgz' | sha256sum --check \\\n    && mkdir /opt/r \\\n    && tar -C /opt/r -xf /tmp/r.tgz \\\n    && rm /tmp/r.tgz \\\n    && :\n\nARG LUA=5.4.3\nARG LUA_SHA256=f8612276169e3bfcbcfb8f226195bfc6e466fe13042f1076cbde92b7ec96bbfb\nARG LUAROCKS=3.8.0\nARG LUAROCKS_SHA256=56ab9b90f5acbc42eb7a94cf482e6c058a63e8a1effdf572b8b2a6323a06d923\nENV PATH=/opt/lua/bin:$PATH\nRUN : \\\n    && echo 'lang: lua' \\\n    && curl -f --location --silent --output /tmp/lua.tgz \"https://www.lua.org/ftp/lua-${LUA}.tar.gz\" \\\n    && echo \"${LUA_SHA256}  /tmp/lua.tgz\" | sha256sum --check \\\n    && curl -f --location --silent --output /tmp/luarocks.tgz \"https://luarocks.org/releases/luarocks-${LUAROCKS}.tar.gz\" \\\n    && echo \"${LUAROCKS_SHA256}  /tmp/luarocks.tgz\" | sha256sum --check \\\n    && tar -C /tmp --strip-components=1 --one-top-level -xf /tmp/lua.tgz \\\n    && make -C /tmp/lua INSTALL_TOP=/opt/lua all \\\n    && make -C /tmp/lua INSTALL_TOP=/opt/lua install \\\n    && tar -C /tmp --strip-components=1 --one-top-level -xf /tmp/luarocks.tgz \\\n    && cd /tmp/luarocks \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/opt/lua \\\n    && make install \\\n    && rm -rf /tmp/lua /tmp/luarocks /tmp/lua.tgz /tmp/luarocks.tgz\n"
}