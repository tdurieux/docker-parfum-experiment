{
  "startTime": 1674251051758,
  "endTime": 1674251052652,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 6,
        "columnEnd": 55
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 6,
        "columnEnd": 52
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 21,
        "columnStart": 2,
        "columnEnd": 8
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ruby:2.6-buster AS base\n\nSHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends \\\n  software-properties-common dirmngr apt-transport-https \\\n  && apt-key adv --fetch-keys 'https://mariadb.org/mariadb_release_signing_key.asc' \\\n  && add-apt-repository 'deb [arch=amd64,arm64,ppc64el] https://mirrors.xtom.nl/mariadb/repo/10.6/debian buster main' \\\n  && ( curl -f -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -) \\\n  && (echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list) \\\n  && ( curl -f -sL https://deb.nodesource.com/setup_12.x | bash -) \\\n  && rm -rf /var/lib/apt/lists/*\n\n# Install main dependencies\nRUN apt-get update && \\\n  apt-get install -y --no-install-recommends \\\n  build-essential  \\\n  netcat \\\n  curl \\\n  libmariadbclient-dev \\\n  nano \\\n  nodejs && rm -rf /var/lib/apt/lists/*;\n\nRUN setcap 'cap_net_bind_service=+ep' /usr/local/bin/ruby\n\n# Configure 'postal' to work everywhere (when the binary exists\n# later in this process)\nENV PATH=\"/opt/postal/app/bin:${PATH}\"\n\n# Setup an application\nRUN useradd -r -d /opt/postal -m -s /bin/bash -u 999 postal\nUSER postal\nRUN mkdir -p /opt/postal/app /opt/postal/config\nWORKDIR /opt/postal/app\n\n# Install bundler\nRUN gem install bundler -v 2.1.4 --no-doc\n\n# Install the latest and active gem dependencies and re-run\n# the appropriate commands to handle installs.\nCOPY Gemfile Gemfile.lock ./\nRUN bundle install -j 4\n\n# Copy the application (and set permissions)\nCOPY ./docker/wait-for.sh /docker-entrypoint.sh\nCOPY --chown=postal . .\n\n# Export the version\nARG VERSION=unspecified\nRUN echo $VERSION > VERSION\n\n# Set the path to the config\nENV POSTAL_CONFIG_ROOT=/config\n\n# Set the CMD\nENTRYPOINT [ \"/docker-entrypoint.sh\" ]\nCMD [\"postal\"]\n\n# ci target - use --target=ci to skip asset compilation\nFROM base AS ci\n\n# prod target - default if no --target option is given\nFROM base AS prod\n\nRUN POSTAL_SKIP_CONFIG_CHECK=1 RAILS_GROUPS=assets bundle exec rake assets:precompile\nRUN touch /opt/postal/app/public/assets/.prebuilt\n"
}