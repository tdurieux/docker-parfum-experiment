diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/zcube/bitnami-compat/patches/erlang/24.2/docker/Dockerfile.install b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/zcube/bitnami-compat/patches/erlang/24.2/docker/Dockerfile.install/repaired.Dockerfile
index ef43d4b..0b48ac1 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/zcube/bitnami-compat/patches/erlang/24.2/docker/Dockerfile.install
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/zcube/bitnami-compat/patches/erlang/24.2/docker/Dockerfile.install/repaired.Dockerfile
@@ -25,7 +25,7 @@ ENV OTP_SOURCE_SHA256="380a77aef34ad449bf8370a380b7901364b9be23e3d25068fc5c43258
 # gnupg: Required to verify OpenSSL artefacts
 # libncurses5-dev: Required for Erlang/OTP new shell & observer_cli - https://github.com/zhongwencool/observer_cli
 RUN set -eux; \
-	\
+
 	savedAptMark="$(apt-mark showmanual)"; \
 	apt-get update; \
 	apt-get install --yes --no-install-recommends \
@@ -40,11 +40,11 @@ RUN set -eux; \
 		wget \
 	; \
 	rm -rf /var/lib/apt/lists/*; \
-	\
+
 	OPENSSL_SOURCE_URL="https://www.openssl.org/source/openssl-$OPENSSL_VERSION.tar.gz"; \
 	OPENSSL_PATH="/usr/local/src/openssl-$OPENSSL_VERSION"; \
 	OPENSSL_CONFIG_DIR=/usr/local/etc/ssl; \
-	\
+
 # Required by the crypto & ssl Erlang/OTP applications
 	wget --progress dot:giga --output-document "$OPENSSL_PATH.tar.gz.asc" "$OPENSSL_SOURCE_URL.asc"; \
 	wget --progress dot:giga --output-document "$OPENSSL_PATH.tar.gz" "$OPENSSL_SOURCE_URL"; \
@@ -55,10 +55,10 @@ RUN set -eux; \
 	gpg --batch --verify "$OPENSSL_PATH.tar.gz.asc" "$OPENSSL_PATH.tar.gz"; \
 	gpgconf --kill all; \
 	rm -rf "$GNUPGHOME"; \
-	echo "$OPENSSL_SOURCE_SHA256 *$OPENSSL_PATH.tar.gz" | sha256sum --check --strict -; \
+	echo "$OPENSSL_SOURCE_SHA256  *$OPENSSL_PATH.tar.gz" | sha256sum --check --strict -; \
 	mkdir -p "$OPENSSL_PATH"; \
-	tar --extract --file "$OPENSSL_PATH.tar.gz" --directory "$OPENSSL_PATH" --strip-components 1; \
-	\
+	tar --extract --file "$OPENSSL_PATH.tar.gz" --directory "$OPENSSL_PATH" --strip-components 1; rm "$OPENSSL_PATH.tar.gz" \
+
 # Configure OpenSSL for compilation
 	cd "$OPENSSL_PATH"; \
 # without specifying "--libdir", Erlang will fail during "crypto:supports()" looking for a "pthread_atfork" function that doesn't exist (but only on arm32v7/armhf??)
@@ -85,18 +85,18 @@ RUN set -eux; \
 	ln -sf /etc/ssl/certs /etc/ssl/private "$OPENSSL_CONFIG_DIR"; \
 # smoke test
 	openssl version; \
-	\
+
 	OTP_SOURCE_URL="https://github.com/erlang/otp/releases/download/OTP-$OTP_VERSION/otp_src_$OTP_VERSION.tar.gz"; \
 	OTP_SHA256_URL="https://github.com/erlang/otp/releases/download/OTP-$OTP_VERSION/SHA256.txt"; \
 	OTP_PATH="/usr/local/src/otp-$OTP_VERSION"; \
-	\
+
 # Download, verify & extract OTP_SOURCE
 	mkdir -p "$OTP_PATH"; \
 	wget --progress dot:giga --output-document "$OTP_PATH.tar.gz" "$OTP_SOURCE_URL"; \
 	wget --progress dot:giga --output-document "SHA256.txt" "$OTP_SHA256_URL"; \
 	cat SHA256.txt | grep "otp_src" | awk -v version=$OTP_VERSION '{print $1,"otp-" version ".tar.gz"}' | sha256sum --check --strict -; \
 	tar --extract --file "$OTP_PATH.tar.gz" --directory "$OTP_PATH" --strip-components 1; \
-	\
+
 # Configure Erlang/OTP for compilation, disable unused features & applications
 # https://erlang.org/doc/applications.html
 # ERL_TOP is required for Erlang/OTP makefiles to find the absolute path for the installation
@@ -157,7 +157,7 @@ RUN set -eux; \
 		/usr/local/lib/erlang/lib/*/examples \
 		/usr/local/lib/erlang/lib/*/src \
 	; \
-	\
+
 # reset apt-mark's "manual" list so that "purge --auto-remove" will remove all build dependencies
 	apt-mark auto '.*' > /dev/null; \
 	[ -z "$savedAptMark" ] || apt-mark manual $savedAptMark; \
@@ -172,7 +172,7 @@ RUN set -eux; \
 		| xargs -r apt-mark manual \
 	; \
 	apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \
-	\
+
 # Check that OpenSSL still works after purging build dependencies
 	openssl version; \
 # Check that Erlang/OTP crypto & ssl were compiled against OpenSSL correctly