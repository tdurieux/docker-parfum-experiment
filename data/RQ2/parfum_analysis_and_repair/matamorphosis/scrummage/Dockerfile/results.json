{
  "startTime": 1674251913891,
  "endTime": 1674251914942,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 86,
        "lineEnd": 86,
        "columnStart": 4,
        "columnEnd": 81
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 141
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 141
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 141
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 59
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 165
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 83
      }
    }
  ],
  "repairedDockerfile": "#----------------------------------------------------------------------------------------------------\n# Pull latest stable Ubuntu\n#----------------------------------------------------------------------------------------------------\nFROM ubuntu:20.04\nLABEL org.opencontainers.image.source=\"https://github.com/matamorphosis/Scrummage\"\n#----------------------------------------------------------------------------------------------------\n\n#----------------------------------------------------------------------------------------------------\n# Update repos and install required packages\n#----------------------------------------------------------------------------------------------------\nRUN apt update\nARG DEBIAN_FRONTEND=noninteractive\n#----------------------------------------------------------------------------------------------------\n\n#----------------------------------------------------------------------------------------------------\n# Change region as required and install packages\n#----------------------------------------------------------------------------------------------------\nENV TZ=Australia/Sydney\nRUN apt install --no-install-recommends -y tzdata python3 python3-pip python3-psycopg2 postgresql postgresql-contrib build-essential wget unzip git openssl curl sudo && rm -rf /var/lib/apt/lists/*;\nRUN wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb\nRUN apt install --no-install-recommends -y ./google-chrome-stable_current_amd64.deb && rm -rf /var/lib/apt/lists/*;\n#----------------------------------------------------------------------------------------------------\n\n#----------------------------------------------------------------------------------------------------\n# Clone repository and create necessary directories\n#----------------------------------------------------------------------------------------------------\nWORKDIR /\nRUN git clone https://github.com/matamorphosis/Scrummage\nRUN mkdir /Scrummage/app/static/protected/output\nRUN mkdir /Scrummage/app/static/protected/screenshots\nRUN chown $SUDO_USER:$SUDO_USER /Scrummage/app/static/protected\nRUN chown $SUDO_USER:$SUDO_USER /Scrummage/app/static/protected/output\nRUN chown $SUDO_USER:$SUDO_USER /Scrummage/app/static/protected/screenshots\nRUN chmod -R 770 /Scrummage/app/static/protected\n#----------------------------------------------------------------------------------------------------\n\n#----------------------------------------------------------------------------------------------------\n# Install ChromeDriver for Screenshotting Functionality to Work\n#----------------------------------------------------------------------------------------------------\nRUN echo \"#!/bin/bash\" > ./GetChromeDriver.sh\nRUN echo \"GoogleChromeVersion=\\`google-chrome --product-version | awk -F  \\\".\\\" '/1/ {print \\$1}'\\`\" >> ./GetChromeDriver.sh\nRUN echo \"LatestVersions=\\`curl -X GET \"https://chromedriver.chromium.org/downloads\" | grep -oP \\\"(https\\:\\/\\/chromedriver\\.storage\\.googleapis\\.com\\/index\\.html\\?path\\=[0-9\\.]+\\/)\\\" | sort -u | tail -n 3\\`\" >> ./GetChromeDriver.sh\nRUN echo \"for lv in \\${LatestVersions[\\$i]}\" >> ./GetChromeDriver.sh\nRUN echo \"do\" >> ./GetChromeDriver.sh\nRUN echo \"\tif [[ \\$lv == *\"\\$GoogleChromeVersion\"* ]]\" >> ./GetChromeDriver.sh\nRUN echo \"\tthen\" >> ./GetChromeDriver.sh\nRUN echo \"\t\tShortLV=\\`echo \\\"\\$lv\\\" | awk -F \\\"=\\\" '{print \\$2}' | awk -F \\\"/\\\" '{print \\$1}'\\`\" >> ./GetChromeDriver.sh\nRUN echo \"\t\twget \\\"https://chromedriver.storage.googleapis.com/\\$ShortLV/chromedriver_linux64.zip\\\"\" >> ./GetChromeDriver.sh\nRUN echo \"\t\tif [ -f \\\"chromedriver_linux64.zip\\\" ]\" >> ./GetChromeDriver.sh\nRUN echo \"\t\tthen\" >> ./GetChromeDriver.sh\nRUN echo \"\t\t\tunzip chromedriver_linux64.zip\" >> ./GetChromeDriver.sh\nRUN echo \"\t\t\tif [ -f \\\"chromedriver\\\" ]\" >> ./GetChromeDriver.sh\nRUN echo \"\t\t\tthen\" >> ./GetChromeDriver.sh\nRUN echo \"\t\t\t\tmv ./chromedriver /usr/bin/chromedriver\" >> ./GetChromeDriver.sh\nRUN echo \"\t\t\telse\" >> ./GetChromeDriver.sh\nRUN echo \"\t\t\t\texit 0\" >> ./GetChromeDriver.sh\nRUN echo \"\t\t\tfi\" >> ./GetChromeDriver.sh\nRUN echo \"\t\telse\" >> ./GetChromeDriver.sh\nRUN echo \"\t\t\texit 0\" >> ./GetChromeDriver.sh\nRUN echo \"\t\tfi\" >> ./GetChromeDriver.sh\nRUN echo \"\t\trm chromedriver_linux64.zip\" >> ./GetChromeDriver.sh\nRUN echo \"\tfi\" >> ./GetChromeDriver.sh\nRUN echo \"done\" >> ./GetChromeDriver.sh\nRUN chmod +x ./GetChromeDriver.sh\nRUN ./GetChromeDriver.sh\n#----------------------------------------------------------------------------------------------------\n\n#----------------------------------------------------------------------------------------------------\n# Install below package through pip3 due to manual install woes\n#----------------------------------------------------------------------------------------------------\nRUN pip3 install --no-cache-dir pinterest-api\n#----------------------------------------------------------------------------------------------------\n\n#----------------------------------------------------------------------------------------------------\n# Install below package from Scrummage repository due to a manual conversion from Python2 to Python3.\n#----------------------------------------------------------------------------------------------------\nRUN echo \"#!/bin/bash\" > ./InstallPyDDPackage.sh\nRUN echo \"MODULELOC=\\`python3 -c 'import site; print(site.getsitepackages()[0])'\\`\" >> ./InstallPyDDPackage.sh\nRUN echo \"cp /Scrummage/installation/support_files/site-packages/defectdojo.py \\$MODULELOC/defectdojo.py\" >> ./InstallPyDDPackage.sh\nRUN chmod +x ./InstallPyDDPackage.sh\nRUN ./InstallPyDDPackage.sh\n#----------------------------------------------------------------------------------------------------\n\n#----------------------------------------------------------------------------------------------------\n# Install online packages from requirements.txt file\n#----------------------------------------------------------------------------------------------------\nRUN pip3 install --no-cache-dir -r /Scrummage/installation/support_files/python_requirements.txt\n#----------------------------------------------------------------------------------------------------\n\n#----------------------------------------------------------------------------------------------------\n# Change below to production for production environment\n#----------------------------------------------------------------------------------------------------\nENV FLASK_ENVIRONMENT=\"development\"\n#----------------------------------------------------------------------------------------------------\n\n#----------------------------------------------------------------------------------------------------\n# Set IP and PORT Details, change if necessary\n#----------------------------------------------------------------------------------------------------\nENV POSTGRES_IP=\"127.0.0.1\"\nENV POSTGRES_PORT=5432\nENV SCRUMMAGE_IP=\"0.0.0.0\"\nENV SCRUMMAGE_PORT=5000\n\n#----------------------------------------------------------------------------------------------------\n# Set up certificates\n#----------------------------------------------------------------------------------------------------\nRUN mkdir /Scrummage/certs\n#----------------------------------------------------------------------------------------------------\n\n#----------------------------------------------------------------------------------------------------\n# To provide your own, uncomment the following lines, and provide .key and .crt file pair in the same directory as this dockerfile before running.\n#----------------------------------------------------------------------------------------------------\n# ADD ./privateKey.key /Scrummage/certs/privateKey.key\n# ADD ./certificate.crt /Scrummage/certs/certificate.crt\n#----------------------------------------------------------------------------------------------------\n\n#----------------------------------------------------------------------------------------------------\n# If using the above conditions to add custom a certificate pair, please ensure the names are correctly reflected below:\n#----------------------------------------------------------------------------------------------------\nENV PRIVATE_KEY=\"/Scrummage/certs/privateKey.key\"\nENV CERTIFICATE_CRT=\"/Scrummage/certs/certificate.crt\"\n#----------------------------------------------------------------------------------------------------\n\n#----------------------------------------------------------------------------------------------------\n# If using the above conditions to add custom a certificate pair, please comment out the below lines\n#----------------------------------------------------------------------------------------------------\nENV country=AU\nENV state=NSW\nENV locality=Sydney\nENV commonname=Scrummage\nENV organization=Scrummage\nENV organizationalunit=Scrummage\nENV email=Scrummage@Scrummage.com\n#----------------------------------------------------------------------------------------------------\n\nRUN openssl req -x509 -sha256 -nodes -days 365 -newkey rsa:2048 -keyout $PRIVATE_KEY -out $CERTIFICATE_CRT -subj \"/C=$country/ST=$state/L=$locality/O=$organization/OU=$organizationalunit/CN=$commonname/emailAddress=$email\"\n\n#----------------------------------------------------------------------------------------------------\n# Create file to indicate whether it's the container's first run or not\n#----------------------------------------------------------------------------------------------------\nRUN touch /FirstRun.txt\n#----------------------------------------------------------------------------------------------------\n\n#----------------------------------------------------------------------------------------------------\n# Expose TCP port 5000 from container to host, and ensure postgresql is started and start Scrummage.\n#----------------------------------------------------------------------------------------------------\nEXPOSE 5000\nRUN chmod +x /Scrummage/installation/docker/start.sh\nCMD /Scrummage/installation/docker/start.sh\n#----------------------------------------------------------------------------------------------------"
}