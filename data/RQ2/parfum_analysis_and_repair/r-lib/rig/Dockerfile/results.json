{
  "startTime": 1674248276361,
  "endTime": 1674248277868,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 92
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 60
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 30
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.15\n\nCOPY . rig\n\nRUN apk add --no-cache curl\n\nRUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs -o rust.sh && sh rust.sh -y\n\nRUN apk add --no-cache linux-headers bash gcc musl-dev g++ pkgconf make\n\n# zlib --------------------------------------------------------------------\n\nRUN curl -f -OL https://downloads.sourceforge.net/project/libpng/zlib/1.2.11/zlib-1.2.11.tar.gz\nRUN tar xzf zlib-*.tar.gz && rm zlib-*.tar.gz\nRUN cd zlib-* && \\\n    CFLAGS=-fPIC ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --static && \\\n    make && \\\n    make install\n\n# openssl -----------------------------------------------------------------\n\nRUN curl -f -O https://www.openssl.org/source/openssl-1.1.1m.tar.gz\nRUN tar xzf openssl-*.tar.gz && rm openssl-*.tar.gz\nRUN apk add --no-cache perl linux-headers\nRUN cd openssl-* &&                                 \\\n    CFLAGS=-fPIC ./config -fPIC no-shared &&        \\\n    make &&                                         \\\n    make install_sw &&                              \\\n    rm -rf /usr/local/bin/openssl                   \\\n       /usr/local/share/{man/doc}\n\n# build rig ---------------------------------------------------------------\n\nRUN source $HOME/.cargo/env && cd rig && make linux\n\nRUN mkdir out && cp rig/rig-*.tar.gz out\n\nRUN ls -l out\n"
}