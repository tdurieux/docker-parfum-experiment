{
  "startTime": 1674218167074,
  "endTime": 1674218167905,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 17
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 17
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 7,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 7,
        "columnEnd": 65
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 7,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 7,
        "columnEnd": 42
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 7,
        "columnEnd": 47
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 5,
        "columnEnd": 33
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 7,
        "columnEnd": 65
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 7,
        "columnEnd": 28
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 7,
        "columnEnd": 42
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 7,
        "columnEnd": 47
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 5,
        "columnEnd": 33
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:20.04\n\n# Install nginx (see http://nginx.org/en/linux_packages.html#Ubuntu)\nRUN \\\n    apt-get update \\\n    && apt-get install --no-install-recommends -y curl gnupg2 ca-certificates lsb-release \\\n    && echo \"deb http://nginx.org/packages/mainline/ubuntu `lsb_release -cs` nginx\" | tee /etc/apt/sources.list.d/nginx.list \\\n    && curl -fsSL https://nginx.org/keys/nginx_signing.key | apt-key add - \\\n    && apt-get update \\\n    && apt-get install -y --no-install-recommends nginx \\\n    && apt-get install --no-install-recommends -y nginx-module-njs && rm -rf /var/lib/apt/lists/*;\n\n# Install python3 and pip\nRUN \\\n    apt-get update \\\n    && apt-get install --no-install-recommends -y python3.8 python3-pip \\\n    && ln -s /usr/bin/python3.8 /usr/bin/python && rm -rf /var/lib/apt/lists/*;\n#    && ln -s /usr/bin/pip3 /usr/bin/pip\n\n# Install lib required for psycopg2\nRUN \\\n  apt-get update \\\n  && apt-get install --no-install-recommends -y libpq-dev && rm -rf /var/lib/apt/lists/*;\n\n# Install gunicorn and uvicorn to run FastAPI optimized\nRUN pip install --no-cache-dir \"uvicorn[standard]\" gunicorn faker\n\nRUN mkdir /resources\n\nWORKDIR /resources/app/\n# First install only the dependencies by not copying the code\nCOPY backend/setup.py /resources/app/\nRUN pip install --no-cache-dir .\n# Then install also the code. This speeds up build time when only the code changes\nCOPY backend/ /resources/app\nRUN pip install --no-cache-dir .\n\nCOPY ./docker/server/start.sh /resources/start.sh\nRUN chmod +x /resources/start.sh\n\nCOPY ./docker/entrypoint.sh /resources/entrypoint.sh\nRUN chmod +x /resources/entrypoint.sh\n\nCOPY ./docker/server/gunicorn_conf.py /gunicorn_conf.py\n\nCOPY docker/nginx /etc/nginx\nCOPY webapp/build /resources/webapp\n\nENV PYTHONPATH=/resources/app \\\n    MODULE_NAME=lab_workspace_manager.app \\\n    WEB_CONCURRENCY=\"1\"\n\nLABEL org.opencontainers.image.source https://github.com/SAP/machine-learning-lab\n\nENTRYPOINT [\"/bin/bash\"]\nCMD [\"/resources/entrypoint.sh\"]\n"
}