{
  "startTime": 1674254945709,
  "endTime": 1674254946725,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 18,
        "columnEnd": 29
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 33,
        "columnEnd": 56
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "###############################################################################\n# STEP 1: Build executable binary\n\nFROM golang:alpine as builder\n\n# Install SSL ca certificates\nRUN apk update && apk add --no-cache git && apk add --no-cache ca-certificates\n\n# Create appuser\nRUN adduser -D -g '' appuser\n\n# Copy go modules from repository\nCOPY pkg/amqpclient /go/pkg/amqpclient\nCOPY pkg/interaction /go/pkg/interaction\nCOPY pkg/logging /go/pkg/logging\n\n# Copy everything required to download (& cache) dependencies\nCOPY cmd/grpc-endpoint-egress/go.mod /go/cmd/grpc-endpoint-egress/go.mod\nCOPY cmd/grpc-endpoint-egress/go.sum /go/cmd/grpc-endpoint-egress/go.sum\n\nWORKDIR /go/cmd/grpc-endpoint-egress/\n\n# Download dependencies\nRUN go mod download\n\n# Copy sourcecode\nCOPY cmd/grpc-endpoint-egress /go/cmd/grpc-endpoint-egress\n\n# Build the binary\nRUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o /go/bin/main\n\n###############################################################################\n# STEP 2: Build the image\n\nFROM scratch as prod\n\n# Copy SSL certificates & user from STEP 1\nCOPY --from=builder /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/\nCOPY --from=builder /etc/passwd /etc/passwd\n\n# Copy the self-containing binary from STEP 1\nCOPY --from=builder /go/bin/main /go/bin/main\n\nUSER appuser\n\nENTRYPOINT [\"/go/bin/main\"]\n"
}