{
  "startTime": 1674254497872,
  "endTime": 1674254498966,
  "originalSmells": [
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 52,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 43
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# SPDX-FileCopyrightText: 2014 SAP SE Srdjan Boskovic <srdjan.boskovic@sap.com>\n#\n# SPDX-License-Identifier: Apache-2.0\n\n#\n# Centos 7 with systemd and SAP NWRFC SDK\n#\n# docker build --rm --no-cache -t centos-qa -f centos-qa.Dockerfile .\n#\n# docker run -it --name centos-qa --stop-signal SIGRTMIN+3 --tmpfs /tmp --tmpfs /run -v /sys/fs/cgroup:/sys/fs/cgroup:ro -v /Users/d037732/SAPDevelop/dev:/home/www-admin/src centos-qa /bin/bash --login\n# docker start -ai centos-qa\n#\n\nFROM centos:7\n\nLABEL maintainer=\"srdjan.boskovic@sap.com\"\nLABEL version=\"2.0\"\nLABEL description=\"Centos 7 QAS\"\n\n# https://github.com/docker-library/docs/tree/master/centos#systemd-integration\nENV container docker\n\n# timezone # https://serverfault.com/questions/683605/docker-container-time-timezone-will-not-reflect-changes\nENV TZ=Europe/Berlin\n\nENV LC_ALL=en_US.UTF-8\n\n# admin/work user\nARG adminuser=www-admin\nARG dev_tools=\"sudo curl wget git unzip vim tree tmux iproute iputils\"\nARG dev_libs=\"uuidd make zlib-devel bzip2 bzip2-devel openssl-devel ncurses-devel sqlite sqlite-devel readline-devel tk-devel libffi-devel xz-devel cargo\"\n\n# root\nUSER root\n\nRUN \\\n\n    yum -y install sudo && \\\n    useradd -G wheel --create-home --shell /bin/bash ${adminuser} && \\\n    echo \"%wheel    ALL = (ALL) NOPASSWD: ALL\" >> /etc/sudoers && \\\n    printf \"alias e=exit\\nalias ..=cd..\\nalias :q=exit\\nalias ll='ls -l'\\nalias la='ls -la'\\nalias distro='cat /etc/*-release'\\n\" > /home/${adminuser}/.bash_aliases && \\\n    chown ${adminuser} /home/${adminuser}/.bash_aliases && chgrp ${adminuser} /home/${adminuser}/.bash_aliases && \\\n    printf \"\\n#aliases\\nsource ~/.bash_aliases\\n\\n# colors\\nexport TERM=xterm-256color\\n\" >> /home/${adminuser}/.bashrc && \\\n    # utf-8 locale https://serverfault.com/questions/275403/how-do-i-change-my-locale-to-utf-8-in-centos\n    localedef -c -f UTF-8 -i en_US en_US.UTF-8 && rm -rf /var/cache/yum\n\n# required packages\nRUN yum -y upgrade ca-certificates && \\\n    yum -y update && \\\n    yum -y groupinstall \"Development tools\" && \\\n    yum -y install ${dev_tools} ${dev_libs} \\\n    # ninja build: https://centos.pkgs.org/7/okey-x86_64/ninja-build-1.8.2-1.el7.x86_64.rpm.html\n    http://repo.okay.com.mx/centos/7/x86_64/release/okay-release-1-1.noarch.rpm \\\n    # devtoolset-8\n    centos-release-scl && \\\n    # devtoolset-8 && Ninja\n    yum install -y ninja-build devtoolset-8 && yum clean all && \\\n    scl enable devtoolset-8 -- bash && \\\n    printf \"\\n# devtools-8\\nsource /opt/rh/devtoolset-8/enable\\n\" >> /home/${adminuser}/.bashrc && rm -rf /var/cache/yum\n\n# https://hub.docker.com/_/centos\nRUN (cd /lib/systemd/system/sysinit.target.wants/; for i in *; do [ $i == \\\n    systemd-tmpfiles-setup.service ] || rm -f $i; done); \\\n    rm -f /lib/systemd/system/multi-user.target.wants/*;\\\n    rm -f /etc/systemd/system/*.wants/*;\\\n    rm -f /lib/systemd/system/local-fs.target.wants/*; \\\n    rm -f /lib/systemd/system/sockets.target.wants/*udev*; \\\n    rm -f /lib/systemd/system/sockets.target.wants/*initctl*; \\\n    rm -f /lib/systemd/system/basic.target.wants/*;\\\n    rm -f /lib/systemd/system/anaconda.target.wants/*;\n\n# sap binaries\nINCLUDE+ common/saplibs.Dockerfile\n\n# cleanup\nRUN rm -rf /tmp/* && \\\n    systemctl mask systemd-machine-id-commit && systemctl enable multi-user.target && systemctl set-default multi-user.target\n\n# work user\nUSER ${adminuser}\nWORKDIR /home/${adminuser}\n\n# python\nINCLUDE+ common/python.centos.Dockerfile\n\n# nodejs\nINCLUDE+ common/nodejs.Dockerfile\n\n# java\n# INCLUDE+ common/java.Dockerfile\n\nVOLUME [ \"/sys/fs/cgroup\" ]\nCMD [\"/usr/sbin/init\"]\n\nSHELL [\"/bin/bash\"]\n"
}