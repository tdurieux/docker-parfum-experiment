{
  "startTime": 1674219225936,
  "endTime": 1674219227144,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 25,
        "columnEnd": 146
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 41,
        "lineEnd": 42,
        "columnStart": 25,
        "columnEnd": 90
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG LLVM_VERSION=13.0\n\nFROM ubuntu:22.04 AS llvm_build_only\nMAINTAINER Dmitry Babokin <dmitry.y.babokin@intel.com>\nSHELL [\"/bin/bash\", \"-c\"]\n\nARG REPO=ispc/ispc\nARG SHA=main\nARG LLVM_VERSION\nARG EXTRA_BUILD_ARG\n\n# !!! Make sure that your docker config provides enough memory to the container,\n# otherwise LLVM build may fail, as it will use all the cores available to container.\n\nRUN uname -a\n\n# Packages\nRUN apt-get -y update && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y wget cmake build-essential gcc g++ git python3 ncurses-dev libtinfo-dev && \\\n    rm -rf /var/lib/apt/lists/*\n\n# If you are behind a proxy, you need to configure git.\nRUN if [ -v \"$http_proxy\" ]; then git config --global --add http.proxy \"$http_proxy\"; fi\n\nWORKDIR /home/src\n\nRUN git clone https://github.com/$REPO.git ispc\nRUN cd ispc && git checkout $SHA && cd ..\n\nWORKDIR /home/src/ispc\nENV ISPC_HOME=/home/src/ispc\n\n# LLVM\nENV LLVM_HOME=/home/tools/llvm\nRUN python3 ./alloy.py -b --version=$LLVM_VERSION --selfbuild --verbose $EXTRA_BUILD_ARG && \\\n    rm -rf $LLVM_HOME/build-$LLVM_VERSION $LLVM_HOME/llvm-$LLVM_VERSION $LLVM_HOME/bin-\"$LLVM_VERSION\"_temp $LLVM_HOME/build-\"$LLVM_VERSION\"_temp\nENV PATH=$LLVM_HOME/bin-$LLVM_VERSION/bin:$PATH\n\nFROM llvm_build_only AS ispc_build\n\nARG LLVM_VERSION\n\nRUN apt-get -y update && apt-get install --no-install-recommends -y m4 bison flex zlib1g-dev \\\n    libc6-dev-i386-cross libc6-dev-arm64-cross libc6-dev-armhf-cross libc6-dev-arm64-cross && \\\n    rm -rf /var/lib/apt/lists/*\n\nRUN mkdir -p build\nWORKDIR /home/src/ispc/build\nRUN cmake .. -DX86_ENABLED=ON -DARM_ENABLED=ON -DCMAKE_CXX_FLAGS=-Werror && make -j`nproc` && make check-all\n# Add ISPC to PATH\nENV PATH=/home/ispc/bin:$PATH\n"
}