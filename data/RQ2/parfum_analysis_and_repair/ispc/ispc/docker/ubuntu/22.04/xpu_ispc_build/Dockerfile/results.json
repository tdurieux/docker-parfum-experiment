{
  "startTime": 1674247999173,
  "endTime": 1674248000568,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 18,
        "lineEnd": 19,
        "columnStart": 25,
        "columnEnd": 187
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:22.04\nMAINTAINER Arina Neshlyaeva <arina.neshlyaeva@intel.com>\nSHELL [\"/bin/bash\", \"-c\"]\n\nARG REPO=ispc/ispc\nARG SHA=main\nARG LLVM_VERSION=13.0\nARG IGC_VER=11378\nARG L0L_VER=1.8.1\nARG CR_VER=22.25.23529\nARG CR_VER_SUFFIX=23529\nARG VC_INTRINSICS_COMMIT_SHA=\"984bb27baacce6ee5c716c2e64845f2a1928025b\"\nARG SPIRV_TRANSLATOR_COMMIT_SHA=\"5d69690864d8e7d5bf221284a37c57f016ce7d98\"\n\n# !!! Make sure that your docker config provides enough memory to the container,\n# otherwise LLVM build may fail, as it will use all the cores available to container.\n\n# Packages\nRUN apt-get -y update && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y clang-12 build-essential libnuma1 opencl-headers ocl-icd-libopencl1 clinfo vim gcc g++ git python3 imagemagick \\\n    m4 bison flex zlib1g-dev libncurses-dev libtinfo-dev libc6-dev-i386 cpio lsb-core wget netcat-openbsd libtbb2-dev libglfw3-dev pkgconf gdb gcc-multilib g++-multilib curl libomp-12-dev && \\\n    rm -rf /var/lib/apt/lists/*\n\n# Download and install required version of cmake (3.14) for ISPC build\nRUN wget -q --retry-connrefused --waitretry=5 --read-timeout=20 --timeout=15 -t 5 https://cmake.org/files/v3.14/cmake-3.14.0-Linux-x86_64.sh && mkdir /opt/cmake && sh cmake-3.14.0-Linux-x86_64.sh --prefix=/opt/cmake --skip-license && \\\n    ln -s /opt/cmake/bin/cmake /usr/local/bin/cmake && ln -s /opt/cmake/bin/cmake /usr/bin/cmake && \\\n    ln -s /opt/cmake/bin/ctest /usr/local/bin/ctest && ln -s /opt/cmake/bin/ctest /usr/bin/ctest && rm cmake-3.14.0-Linux-x86_64.sh\n\nWORKDIR /home/src\n\nRUN git clone https://github.com/$REPO.git ispc\nRUN cd ispc && git checkout $SHA && cd ..\n\nWORKDIR /home/src/ispc\nENV ISPC_HOME=/home/src/ispc\n\n# LLVM\nENV LLVM_HOME=/home/tools/llvm\nRUN python3 ./alloy.py -b --version=$LLVM_VERSION --selfbuild && \\\n    rm -rf $LLVM_HOME/build-$LLVM_VERSION $LLVM_HOME/llvm-$LLVM_VERSION $LLVM_HOME/bin-\"$LLVM_VERSION\"_temp $LLVM_HOME/build-\"$LLVM_VERSION\"_temp\n\nWORKDIR /home/packages\n\n# Compute runtime\nRUN wget -q --retry-connrefused --waitretry=5 --read-timeout=20 --timeout=15 -t 5  https://github.com/intel/intel-graphics-compiler/releases/download/igc-1.0.${IGC_VER}/intel-igc-core_1.0.${IGC_VER}_amd64.deb\nRUN wget -q --retry-connrefused --waitretry=5 --read-timeout=20 --timeout=15 -t 5  https://github.com/intel/intel-graphics-compiler/releases/download/igc-1.0.${IGC_VER}/intel-igc-opencl_1.0.${IGC_VER}_amd64.deb\nRUN wget -q --retry-connrefused --waitretry=5 --read-timeout=20 --timeout=15 -t 5  https://github.com/intel/compute-runtime/releases/download/${CR_VER}/intel-level-zero-gpu-dbgsym_1.3.${CR_VER_SUFFIX}_amd64.ddeb\nRUN wget -q --retry-connrefused --waitretry=5 --read-timeout=20 --timeout=15 -t 5  https://github.com/intel/compute-runtime/releases/download/${CR_VER}/intel-level-zero-gpu_1.3.${CR_VER_SUFFIX}_amd64.deb\nRUN wget -q --retry-connrefused --waitretry=5 --read-timeout=20 --timeout=15 -t 5  https://github.com/intel/compute-runtime/releases/download/${CR_VER}/intel-opencl-icd-dbgsym_${CR_VER}_amd64.ddeb\nRUN wget -q --retry-connrefused --waitretry=5 --read-timeout=20 --timeout=15 -t 5  https://github.com/intel/compute-runtime/releases/download/${CR_VER}/intel-opencl-icd_${CR_VER}_amd64.deb\nRUN wget -q --retry-connrefused --waitretry=5 --read-timeout=20 --timeout=15 -t 5  https://github.com/intel/compute-runtime/releases/download/${CR_VER}/libigdgmm12_22.1.3_amd64.deb\n\n# L0 loaader\nRUN wget -q --retry-connrefused --waitretry=5 --read-timeout=20 --timeout=15 -t 5 https://github.com/oneapi-src/level-zero/releases/download/v${L0L_VER}/level-zero-devel_${L0L_VER}+u18.04_amd64.deb\nRUN wget -q --retry-connrefused --waitretry=5 --read-timeout=20 --timeout=15 -t 5 https://github.com/oneapi-src/level-zero/releases/download/v${L0L_VER}/level-zero_${L0L_VER}+u18.04_amd64.deb\n\n# Install packages and clean up\nRUN dpkg -i *.deb\nWORKDIR /home\nRUN rm -rf packages\n\n# vc-intrinsics\nWORKDIR /home/src\nRUN git clone https://github.com/intel/vc-intrinsics.git\nWORKDIR /home/src/vc-intrinsics\nRUN git checkout $VC_INTRINSICS_COMMIT_SHA\nRUN mkdir -p build\nWORKDIR /home/src/vc-intrinsics/build\nRUN cmake -DLLVM_DIR=$LLVM_HOME/bin-$LLVM_VERSION/lib/cmake/llvm -DCMAKE_INSTALL_PREFIX=/home/deps -DPYTHON_EXECUTABLE=/usr/bin/python3 ../ && make install -j`nproc`\n\n# SPIRV Translator\nWORKDIR /home/src\nRUN git clone https://github.com/KhronosGroup/SPIRV-LLVM-Translator.git\nWORKDIR /home/src/SPIRV-LLVM-Translator\nRUN git checkout $SPIRV_TRANSLATOR_COMMIT_SHA\nRUN mkdir -p build\nWORKDIR /home/src/SPIRV-LLVM-Translator/build\nRUN cmake -DLLVM_DIR=$LLVM_HOME/bin-$LLVM_VERSION/lib/cmake/llvm/ -DCMAKE_INSTALL_PREFIX=/home/deps -DPYTHON_EXECUTABLE=/usr/bin/python3 ../ && make install -j`nproc`\n\n# ISPC build\nENV PATH=$LLVM_HOME/bin-$LLVM_VERSION/bin:$PATH\n# A note about libomp discoverability (required for libispcrt.so).\n# In Ubuntu 18.04 and earlier installing libomp-dev is what you need.\n# Starting Ubuntu 20.04 installing libomp-dev is not installing OpenMP libraries and\n# they need to be installed with your compiler. We build them as part of LLVM, so\n# adding LLVM lib path to LD_LIBRARY_PATH for libomp discoverability.\nENV LD_LIBRARY_PATH=$LLVM_HOME/bin-$LLVM_VERSION/lib:$LD_LIBRARY_PATH\nWORKDIR /home/src/ispc\nRUN mkdir -p build\nWORKDIR /home/src/ispc/build\nRUN cmake -DXE_ENABLED=ON -DCMAKE_INSTALL_PREFIX=/home/ispc/ -DXE_DEPS_DIR=/home/deps ../ && make install -j`nproc`\nRUN make check-all -j`nproc`\n# Add ISPC to PATH\nENV PATH=/home/ispc/bin:$PATH\n"
}