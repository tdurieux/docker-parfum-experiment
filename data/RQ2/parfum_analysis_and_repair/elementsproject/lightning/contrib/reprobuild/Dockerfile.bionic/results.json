{
  "startTime": 1674251560465,
  "endTime": 1674251561781,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 29,
        "lineEnd": 35,
        "columnStart": 7,
        "columnEnd": 16
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 22,
        "columnStart": 7,
        "columnEnd": 10
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 29,
        "lineEnd": 35,
        "columnStart": 7,
        "columnEnd": 16
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 29,
        "lineEnd": 35,
        "columnStart": 7,
        "columnEnd": 16
      }
    }
  ],
  "repairedDockerfile": "FROM bionic\n\nENV TZ=UTC\nRUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone\n\nRUN sed -i '/updates/d' /etc/apt/sources.list && \\\n    sed -i '/security/d' /etc/apt/sources.list\n\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n      ca-certificates \\\n      sudo \\\n      build-essential \\\n      libsodium23 \\\n      libpq-dev \\\n      git \\\n      file \\\n      autoconf \\\n      debianutils \\\n      gettext \\\n      zip \\\n      unzip \\\n      wget && rm -rf /var/lib/apt/lists/*;\n\n# Need to fetch a python version that is >= 3.7 since that's the\n# lowest version supported by pyln. This is just temporary until we\n# drop support for ubuntu 18.04\nENV PATH=/root/.pyenv/shims:/root/.pyenv/bin:$PATH\nRUN git clone https://github.com/pyenv/pyenv.git /root/.pyenv \\\n    && apt-get install -y --no-install-recommends \\\n      libbz2-dev \\\n      libffi-dev \\\n      libreadline-dev \\\n      libsqlite3-dev \\\n      libssl-dev \\\n      zlib1g-dev \\\n    && pyenv install 3.7.0 \\\n    && pyenv global 3.7.0 && rm -rf /var/lib/apt/lists/*;\n\nRUN wget https://bootstrap.pypa.io/get-pip.py -O /tmp/get-pip.py && python3 /tmp/get-pip.py \\\n\t&& rm /tmp/get-pip.py \\\n\t&& pip install --no-cache-dir poetry\n\nRUN mkdir /build\nWORKDIR /build\n\nCMD git clone /repo /build \\\n    && poetry export -o requirements.txt --without-hashes \\\n    && pip install -r requirements.txt\\\n    && tools/build-release.sh zipfile \\\n    && mkdir -p /repro \\\n    && cd /repro \\\n    && unzip /build/release/*.zip \\\n    && cd clightning* \\\n    && tools/repro-build.sh \\\n    && cp *.xz /build/release/* /repo/release/ \\\n    && cd /repo/release \\\n    && sha256sum *\n"
}