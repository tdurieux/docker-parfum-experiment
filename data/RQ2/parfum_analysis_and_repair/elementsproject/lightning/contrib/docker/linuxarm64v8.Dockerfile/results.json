{
  "startTime": 1674216100207,
  "endTime": 1674216101837,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 93,
        "lineEnd": 93,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 3,
        "columnEnd": 39
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 3,
        "columnEnd": 142
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 82,
        "lineEnd": 82,
        "columnStart": 3,
        "columnEnd": 80
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 94,
        "lineEnd": 94,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 7,
        "columnEnd": 105
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 11,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 50,
        "lineEnd": 51,
        "columnStart": 22,
        "columnEnd": 63
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 4,
        "columnEnd": 58
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 4,
        "columnEnd": 58
      }
    }
  ],
  "repairedDockerfile": "# This dockerfile is meant to cross compile with a x64 machine for a arm64v8 host\n# It is using multi stage build:\n# * downloader: Download litecoin/bitcoin and qemu binaries needed for Core Lightning\n# * builder: Cross compile Core Lightning dependencies, then Core Lightning itself with static linking\n# * final: Copy the binaries required at runtime\n# The resulting image uploaded to dockerhub will only contain what is needed for runtime.\n# From the root of the repository, run \"docker build -t yourimage:yourtag -f contrib/linuxarm64v8.Dockerfile .\"\nFROM debian:buster-slim as downloader\n\nRUN set -ex \\\n\t&& apt-get update \\\n\t&& apt-get install -y -qq --no-install-recommends ca-certificates dirmngr wget \\\n     qemu-user-static binfmt-support && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /opt\n\nRUN wget -qO /opt/tini \"https://github.com/krallin/tini/releases/download/v0.18.0/tini-arm64\" \\\n    && echo \"7c5463f55393985ee22357d976758aaaecd08defb3c5294d353732018169b019  /opt/tini\" | sha256sum -c - \\\n    && chmod +x /opt/tini\n\nARG BITCOIN_VERSION=0.18.1\nENV BITCOIN_TARBALL bitcoin-$BITCOIN_VERSION-aarch64-linux-gnu.tar.gz\nENV BITCOIN_URL https://bitcoincore.org/bin/bitcoin-core-$BITCOIN_VERSION/$BITCOIN_TARBALL\nENV BITCOIN_ASC_URL https://bitcoincore.org/bin/bitcoin-core-$BITCOIN_VERSION/SHA256SUMS.asc\n\nRUN mkdir /opt/bitcoin && cd /opt/bitcoin \\\n    && wget -qO $BITCOIN_TARBALL \"$BITCOIN_URL\" \\\n    && wget -qO bitcoin.asc \"$BITCOIN_ASC_URL\" \\\n    && grep $BITCOIN_TARBALL bitcoin.asc | tee SHA256SUMS.asc \\\n    && sha256sum -c SHA256SUMS.asc \\\n    && BD=bitcoin-$BITCOIN_VERSION/bin \\\n    && tar -xzvf $BITCOIN_TARBALL $BD/bitcoin-cli --strip-components=1 \\\n    && rm $BITCOIN_TARBALL\n\nENV LITECOIN_VERSION 0.14.2\nENV LITECOIN_TARBALL litecoin-$LITECOIN_VERSION-aarch64-linux-gnu.tar.gz\nENV LITECOIN_URL https://download.litecoin.org/litecoin-$LITECOIN_VERSION/linux/$LITECOIN_TARBALL\nENV LITECOIN_SHA256 69449c3c8206f75cfdef929562b323326f1d0496f77f82608f9a974cbb2fd373\n\n# install litecoin binaries\nRUN mkdir /opt/litecoin && cd /opt/litecoin \\\n    && wget -qO litecoin.tar.gz \"$LITECOIN_URL\" \\\n    && echo \"$LITECOIN_SHA256  litecoin.tar.gz\" | sha256sum -c - \\\n    && BD=litecoin-$LITECOIN_VERSION/bin \\\n    && tar -xzvf litecoin.tar.gz $BD/litecoin-cli --strip-components=1 --exclude=*-qt \\\n    && rm litecoin.tar.gz\n\nFROM debian:buster-slim as builder\n\nENV LIGHTNINGD_VERSION=master\nRUN apt-get update && apt-get install -y --no-install-recommends ca-certificates autoconf automake build-essential gettext git libtool python3 python3-pip python3-setuptools python3-mako wget gnupg dirmngr git \\\n  libc6-arm64-cross gcc-aarch64-linux-gnu g++-aarch64-linux-gnu && rm -rf /var/lib/apt/lists/*;\n\nENV target_host=aarch64-linux-gnu\n\nENV AR=${target_host}-ar \\\nAS=${target_host}-as \\\nCC=${target_host}-gcc \\\nCXX=${target_host}-g++ \\\nLD=${target_host}-ld \\\nSTRIP=${target_host}-strip \\\nQEMU_LD_PREFIX=/usr/${target_host} \\\nHOST=${target_host}\n\nRUN wget -q https://zlib.net/zlib-1.2.12.tar.gz \\\n&& tar xvf zlib-1.2.12.tar.gz \\\n&& cd zlib-1.2.12 \\\n&& ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=$QEMU_LD_PREFIX \\\n&& make \\\n&& make install && cd .. && rm zlib-1.2.12.tar.gz && rm -rf zlib-1.2.12\n\nRUN apt-get install -y --no-install-recommends unzip tclsh \\\n&& wget -q https://www.sqlite.org/2019/sqlite-src-3290000.zip \\\n&& unzip sqlite-src-3290000.zip \\\n&& cd sqlite-src-3290000 \\\n&& ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-static --disable-readline --disable-threadsafe --disable-load-extension --host=${target_host} --prefix=$QEMU_LD_PREFIX \\\n&& make \\\n&& make install && cd .. && rm sqlite-src-3290000.zip && rm -rf sqlite-src-3290000 && rm -rf /var/lib/apt/lists/*;\n\nRUN wget -q https://gmplib.org/download/gmp/gmp-6.1.2.tar.xz \\\n&& tar xvf gmp-6.1.2.tar.xz \\\n&& cd gmp-6.1.2 \\\n&& ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --disable-assembly --prefix=$QEMU_LD_PREFIX --host=${target_host} \\\n&& make \\\n&& make install && cd .. && rm gmp-6.1.2.tar.xz && rm -rf gmp-6.1.2\nCOPY --from=downloader /usr/bin/qemu-aarch64-static /usr/bin/qemu-aarch64-static\nWORKDIR /opt/lightningd\nCOPY . /tmp/lightning\nRUN git clone --recursive /tmp/lightning . && \\\n    git checkout $(git --work-tree=/tmp/lightning --git-dir=/tmp/lightning/.git rev-parse HEAD)\n\nARG DEVELOPER=0\nENV PYTHON_VERSION=3\nRUN pip3 install --no-cache-dir mrkd\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/tmp/lightning_install --enable-static && make -j3 DEVELOPER=${DEVELOPER} && make install\n\nFROM arm64v8/debian:buster-slim as final\nCOPY --from=downloader /usr/bin/qemu-aarch64-static /usr/bin/qemu-aarch64-static\nCOPY --from=downloader /opt/tini /usr/bin/tini\nRUN apt-get update && apt-get install -y --no-install-recommends socat inotify-tools python3 python3-pip \\\n    && rm -rf /var/lib/apt/lists/*\n\nENV LIGHTNINGD_DATA=/root/.lightning\nENV LIGHTNINGD_RPC_PORT=9835\nENV LIGHTNINGD_PORT=9735\nENV LIGHTNINGD_NETWORK=bitcoin\n\nRUN mkdir $LIGHTNINGD_DATA && \\\n    touch $LIGHTNINGD_DATA/config\nVOLUME [ \"/root/.lightning\" ]\nCOPY --from=builder /tmp/lightning_install/ /usr/local/\nCOPY --from=downloader /opt/bitcoin/bin /usr/bin\nCOPY --from=downloader /opt/litecoin/bin /usr/bin\nCOPY tools/docker-entrypoint.sh entrypoint.sh\n\nEXPOSE 9735 9835\nENTRYPOINT  [ \"/usr/bin/tini\", \"-g\", \"--\", \"./entrypoint.sh\" ]\n"
}