diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/elementsproject/lightning/contrib/docker/linuxarm32v7.Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/elementsproject/lightning/contrib/docker/linuxarm32v7.Dockerfile/repaired.Dockerfile
index ffcfb49..8b98768 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/elementsproject/lightning/contrib/docker/linuxarm32v7.Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/elementsproject/lightning/contrib/docker/linuxarm32v7.Dockerfile/repaired.Dockerfile
@@ -1,5 +1,5 @@
 # This dockerfile is meant to cross compile with a x64 machine for a arm32v7 host
-# It is using multi stage build: 
+# It is using multi stage build:
 # * downloader: Download litecoin/bitcoin and qemu binaries needed for core-lightning
 # * builder: Cross compile c-lightning dependencies, then c-lightning itself with static linking
 # * final: Copy the binaries required at runtime
@@ -9,13 +9,13 @@ FROM debian:buster-slim as downloader
 
 RUN set -ex \
 	&& apt-get update \
-	&& apt-get install -qq --no-install-recommends ca-certificates dirmngr wget \
-     qemu-user-static binfmt-support
+	&& apt-get install -y -qq --no-install-recommends ca-certificates dirmngr wget \
+     qemu-user-static binfmt-support && rm -rf /var/lib/apt/lists/*;
 
 WORKDIR /opt
 
 RUN wget -qO /opt/tini "https://github.com/krallin/tini/releases/download/v0.18.0/tini-armhf" \
-    && echo "01b54b934d5f5deb32aa4eb4b0f71d0e76324f4f0237cc262d59376bf2bdc269 /opt/tini" | sha256sum -c - \
+    && echo "01b54b934d5f5deb32aa4eb4b0f71d0e76324f4f0237cc262d59376bf2bdc269  /opt/tini" | sha256sum -c - \
     && chmod +x /opt/tini
 
 ARG BITCOIN_VERSION=0.18.1
@@ -49,7 +49,7 @@ FROM debian:buster-slim as builder
 
 ENV LIGHTNINGD_VERSION=master
 RUN apt-get update && apt-get install -y --no-install-recommends ca-certificates autoconf automake build-essential gettext git libtool python3 python3-pip python3-setuptools python3-mako wget gnupg dirmngr git \
-  libc6-armhf-cross gcc-arm-linux-gnueabihf g++-arm-linux-gnueabihf
+  libc6-armhf-cross gcc-arm-linux-gnueabihf g++-arm-linux-gnueabihf && rm -rf /var/lib/apt/lists/*;
 
 ENV target_host=arm-linux-gnueabihf
 
@@ -65,7 +65,7 @@ HOST=${target_host}
 RUN wget -q https://zlib.net/zlib-1.2.12.tar.gz \
 && tar xvf zlib-1.2.12.tar.gz \
 && cd zlib-1.2.12 \
-&& ./configure --prefix=$QEMU_LD_PREFIX \
+&& ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=$QEMU_LD_PREFIX \
 && make \
 && make install && cd .. && rm zlib-1.2.12.tar.gz && rm -rf zlib-1.2.12
 
@@ -73,14 +73,14 @@ RUN apt-get install -y --no-install-recommends unzip tclsh \
 && wget -q https://www.sqlite.org/2019/sqlite-src-3290000.zip \
 && unzip sqlite-src-3290000.zip \
 && cd sqlite-src-3290000 \
-&& ./configure --enable-static --disable-readline --disable-threadsafe --disable-load-extension --host=${target_host} --prefix=$QEMU_LD_PREFIX \
+&& ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --enable-static --disable-readline --disable-threadsafe --disable-load-extension --host=${target_host} --prefix=$QEMU_LD_PREFIX \
 && make \
-&& make install && cd .. && rm sqlite-src-3290000.zip && rm -rf sqlite-src-3290000
+&& make install && cd .. && rm sqlite-src-3290000.zip && rm -rf sqlite-src-3290000 && rm -rf /var/lib/apt/lists/*;
 
 RUN wget -q https://gmplib.org/download/gmp/gmp-6.1.2.tar.xz \
 && tar xvf gmp-6.1.2.tar.xz \
 && cd gmp-6.1.2 \
-&& ./configure --disable-assembly --prefix=$QEMU_LD_PREFIX --host=${target_host} \
+&& ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --disable-assembly --prefix=$QEMU_LD_PREFIX --host=${target_host} \
 && make \
 && make install && cd .. && rm gmp-6.1.2.tar.xz && rm -rf gmp-6.1.2
 
@@ -92,14 +92,14 @@ RUN git clone --recursive /tmp/lightning . && \
 
 ARG DEVELOPER=0
 ENV PYTHON_VERSION=3
-RUN pip3 install mrkd
-RUN ./configure --prefix=/tmp/lightning_install --enable-static && make -j3 DEVELOPER=${DEVELOPER} && make install
+RUN pip3 install --no-cache-dir mrkd
+RUN ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/tmp/lightning_install --enable-static && make -j3 DEVELOPER=${DEVELOPER} && make install
 
 FROM arm32v7/debian:buster-slim as final
 COPY --from=downloader /usr/bin/qemu-arm-static /usr/bin/qemu-arm-static
 COPY --from=downloader /opt/tini /usr/bin/tini
 RUN apt-get update && apt-get install -y --no-install-recommends socat inotify-tools python3 python3-pip \
-    && rm -rf /var/lib/apt/lists/* 
+    && rm -rf /var/lib/apt/lists/*
 
 ENV LIGHTNINGD_DATA=/root/.lightning
 ENV LIGHTNINGD_RPC_PORT=9835