{
  "startTime": 1674249452400,
  "endTime": 1674249453222,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 7,
        "columnEnd": 81
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 5,
        "columnEnd": 45
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# This Dockerfile demonstrates how to build the Aerospike Node.js client on\n# Alpine Linux. Since there is no pre-build package for the Aerospike C Client\n# SDK for Alpine Linux, this Dockerfile first builds the C Client SDK from source\n# (a submodule for the Node.js client), then builds the Node.js client using it.\n# Stage 2 install the Node.js client into the final Docker image, to keep the size of\n# that image minimal (i.e. no build dependencies).\n#\n# Note: The AS_NODEJS_VERSION must use version 4.0.3 and up since this is where the\n# C client submodule was introduced.\n\n# Stage 1: Build Aerospike C client and Node.js client\nFROM node:lts-alpine as as-node-builder\nWORKDIR /src\n\nENV AS_NODEJS_VERSION v5.0.1\n\nRUN apk update\nRUN apk add --no-cache \\\n    build-base \\\n    linux-headers \\\n    bash \\\n    libuv-dev \\\n    openssl-dev \\\n    lua5.1-dev \\\n    zlib-dev \\\n    git \\\n    python3\n\nRUN git clone --branch ${AS_NODEJS_VERSION} --recursive https://github.com/aerospike/aerospike-client-nodejs\n# TODO: build-command.sh might be broken for alpine in some versions, use latest version when it's in git\nCOPY build-commands.sh /src/aerospike-client-nodejs/scripts/build-commands.sh\n\nRUN cd /src/aerospike-client-nodejs \\\n    && /src/aerospike-client-nodejs/scripts/build-c-client.sh \\\n    && npm install /src/aerospike-client-nodejs --unsafe-perm --build-from-source && npm cache clean --force;\n\n# Stage 2: Deploy Aerospike Node.js Runtime only\nFROM node:lts-alpine\nWORKDIR /src\n\nRUN apk add --no-cache \\\n      zlib \\\n      openssl\n\nCOPY --from=as-node-builder /src/aerospike-client-nodejs/ aerospike-client-nodejs/\n\nRUN npm install /src/aerospike-client-nodejs && npm cache clean --force;"
}