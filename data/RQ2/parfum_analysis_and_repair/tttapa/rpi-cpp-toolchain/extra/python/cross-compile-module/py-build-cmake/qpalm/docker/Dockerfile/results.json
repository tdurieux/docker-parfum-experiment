{
  "startTime": 1674250001244,
  "endTime": 1674250002035,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 35
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG HOST_TRIPLET\nFROM tttapa/docker-arm-cross-build-scripts:${HOST_TRIPLET}\n\n# You can download or install any dependencies you need here\n\n# The advantage of installing them here instead of in the build-docker.sh\n# script is that they will only be installed once, whereas the build-docker.sh\n# script is executed in a fresh Docker container every time you want to build\n# your module.\n\n# Install Eigen\nRUN git clone --single-branch --depth=1 --branch 3.4.0 https://gitlab.com/libeigen/eigen.git && \\\n    cd eigen && \\\n    cmake -Bbuild -S. -G \"Ninja Multi-Config\" \\\n        -D CMAKE_INSTALL_PREFIX=\"/usr/local\" && \\\n    cmake --build build --config Debug -j && \\\n    sudo cmake --install build --config Debug && \\\n    cmake --build build --config Release -j && \\\n    sudo cmake --install build --config Release && \\\n    cmake -Bcross -S. -G \"Ninja Multi-Config\" \\\n        -D CMAKE_INSTALL_PREFIX=\"${RPI_SYSROOT}/usr/local\" \\\n        -D CMAKE_TOOLCHAIN_FILE=\"${HOME}/${HOST_TRIPLE}.cmake\" && \\\n    cmake --build cross --config Debug -j && \\\n    cmake --install cross --config Debug && \\\n    cmake --build cross --config Release -j && \\\n    cmake --install cross --config Release && \\\n    cd .. && \\\n    rm -rf eigen\n\n# Install the build package to build Python packages\nRUN python3.10 -m pip install build\nRUN . ~/crossenv/bin/activate && \\\n    pip install --no-cache-dir auditwheel patchelf\n"
}