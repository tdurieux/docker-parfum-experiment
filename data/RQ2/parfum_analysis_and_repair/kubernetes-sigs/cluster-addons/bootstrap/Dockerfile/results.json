{
  "startTime": 1674217555989,
  "endTime": 1674217556739,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 27
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# Download a supported `kubectl` release for the target arch\nFROM --platform=$BUILDPLATFORM ubuntu:20.04 as kubectl\nARG TARGETARCH\nRUN apt-get update && apt-get install --no-install-recommends -y curl && rm -rf /var/lib/apt/lists/*;\nRUN curl -fsSL https://dl.k8s.io/release/v1.17.4/bin/linux/${TARGETARCH}/kubectl > /usr/bin/kubectl\nRUN ! ldd /usr/bin/kubectl # Assert that the downloaded kubectl is statically linked\nRUN chmod a+rx /usr/bin/kubectl\n\n# Build the bootstrap binary\nFROM --platform=$BUILDPLATFORM golang:1.15 as builder\n\n# Copy the Go Modules manifests\nWORKDIR /go/src/bootstrap\nCOPY go.mod go.mod\nCOPY go.sum go.sum\n# cache deps before building and copying source so that we don't need to re-download as much\n# and so that source changes don't invalidate our downloaded layer\nRUN go mod download\n\n# Copy the go source files\nCOPY main.go main.go\nCOPY app/ app/\n\n# Build\nARG TARGETARCH\nRUN CGO_ENABLED=0 GOOS=linux GOARCH=${TARGETARCH} GO111MODULE=on go build -a -o cluster-addons-bootstrap main.go\nRUN ! ldd cluster-addons-bootstrap # Assert that the compiled bin is statically linked\n\n# Use distroless as minimal base image to package the bootstrap binary\n# See: https://github.com/GoogleContainerTools/distroless\nFROM gcr.io/distroless/static\nWORKDIR /\nCOPY --from=builder /go/src/bootstrap/cluster-addons-bootstrap .\nCOPY --from=kubectl /usr/bin/kubectl /usr/bin/kubectl\n\nENTRYPOINT [\"/cluster-addons-bootstrap\"]\n"
}