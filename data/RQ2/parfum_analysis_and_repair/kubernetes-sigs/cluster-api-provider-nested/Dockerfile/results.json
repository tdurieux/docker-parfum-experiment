{
  "startTime": 1674219981707,
  "endTime": 1674219982640,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 80
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright 2021 The Kubernetes Authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# Build the manager binary\nFROM golang:1.16.2 as builder\nWORKDIR /workspace\n\n# Run this with docker build --build_arg $(go env GOPROXY) to override the goproxy\nARG goproxy=https://proxy.golang.org\nENV GOPROXY=$goproxy\n\n# Copy the Go Modules manifests\nCOPY go.mod go.mod\nCOPY go.sum go.sum\n# Cache deps before building and copying source so that we don't need to re-download as much\n# and so that source changes don't invalidate our downloaded layer\nRUN  --mount=type=cache,target=/root/.local/share/golang \\\n     --mount=type=cache,target=/go/pkg/mod \\\n     go mod download\n\n# Copy the sources\nCOPY main.go main.go\nCOPY api/ api/\nCOPY controllers/ controllers/\nCOPY controlplane/ controlplane/\n\n# Build\nARG package=.\nARG ARCH\nARG LDFLAGS\nRUN --mount=type=cache,target=/root/.cache/go-build \\\n    --mount=type=cache,target=/go/pkg/mod \\\n    --mount=type=cache,target=/root/.local/share/golang \\\n    CGO_ENABLED=0 GOOS=linux GOARCH=${ARCH} go build -ldflags \"${LDFLAGS} -extldflags '-static'\"  -o manager ${package}\nRUN curl -f -L https://dl.k8s.io/release/v1.22.0/bin/linux/amd64/kubeadm -o kubeadm && chmod +x kubeadm\nENTRYPOINT [ \"/start.sh\", \"/workspace/manager\" ]\n\n# Use distroless as minimal base image to package the manager binary\n# Refer to https://github.com/GoogleContainerTools/distroless for more details\nFROM gcr.io/distroless/static-debian10\n# Copy the controller-manager into a thin image\nWORKDIR /\nCOPY --from=builder /workspace/manager .\nCOPY --from=builder /workspace/kubeadm kubeadm\n# USER 65532:65532\nENTRYPOINT [\"/manager\"]\n"
}