{
  "startTime": 1674253048568,
  "endTime": 1674253049758,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 74
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 31
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright 2019 The Kubernetes Authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nFROM golang:1.12.9\n\n# default the go proxy\nARG goproxy=https://proxy.golang.org\n\n# run this with docker build --build_arg $(go env GOPROXY) to override the goproxy\nENV GOPROXY=$goproxy\n\nWORKDIR /tmp\n# install a couple of dependencies\nRUN curl -f -L https://dl.k8s.io/v1.14.4/kubernetes-client-linux-amd64.tar.gz | tar xvz\nRUN mv /tmp/kubernetes/client/bin/kubectl /usr/local/bin\nRUN curl -f https://get.docker.com | sh\n\nWORKDIR /workspace\nCOPY go.mod go.mod\nCOPY go.sum go.sum\n# cache deps before building and copying source so that we don't need to re-download as much\n# and so that source changes don't invalidate our downloaded layer\nRUN go mod download\n\n# Copy the go source\nCOPY main.go main.go\nCOPY api/ api/\nCOPY controllers/ controllers/\nCOPY docker docker/\nCOPY third_party/ third_party/\nCOPY cloudinit/ cloudinit/\n\n# Allow containerd to restart pods by calling /restart.sh (mostly for tilt + fast dev cycles)\n# TODO: Remove this on prod and use a multi-stage build\nCOPY third_party/forked/rerun-process-wrapper/start.sh .\nCOPY third_party/forked/rerun-process-wrapper/restart.sh .\n\nRUN go build -v -o manager main.go\nRUN mv /workspace/manager /manager\n\nENTRYPOINT [\"./start.sh\", \"/manager\"]\n"
}