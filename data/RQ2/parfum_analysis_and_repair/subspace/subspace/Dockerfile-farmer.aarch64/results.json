{
  "startTime": 1674220042359,
  "endTime": 1674220043644,
  "originalSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 42,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 92
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 42,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 92
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 42,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 92
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:20.04\n\nARG RUSTC_VERSION=nightly-2022-07-09\nARG PROFILE=production\nARG RUSTFLAGS\n# Workaround for https://github.com/rust-lang/cargo/issues/10583\nENV CARGO_NET_GIT_FETCH_WITH_CLI=true\n# Incremental compilation here isn't helpful\nENV CARGO_INCREMENTAL=0\n\nWORKDIR /code\n\nRUN \\\n    apt-get update && \\\n    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \\\n        ca-certificates \\\n        curl \\\n        git \\\n        llvm \\\n        clang \\\n        cmake \\\n        make && \\\n    curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --default-toolchain $RUSTC_VERSION && rm -rf /var/lib/apt/lists/*;\n\nRUN /root/.cargo/bin/rustup target add wasm32-unknown-unknown\n\nCOPY Cargo.lock /code/Cargo.lock\nCOPY Cargo.toml /code/Cargo.toml\nCOPY rust-toolchain.toml /code/rust-toolchain.toml\n\nCOPY crates /code/crates\nCOPY cumulus /code/cumulus\nCOPY orml /code/orml\nCOPY substrate /code/substrate\nCOPY test /code/test\n\n# Up until this line all Rust images in this repo should be the same to share the same layers\n\nENV RUSTFLAGS=\"${RUSTFLAGS} -C linker=aarch64-linux-gnu-gcc\"\n\n# Dependencies necessary for successful cross-compilation\nRUN \\\n    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \\\n        g++-aarch64-linux-gnu \\\n        gcc-aarch64-linux-gnu \\\n        libc6-dev-arm64-cross && rm -rf /var/lib/apt/lists/*;\n\n# TODO: Following package is not necessary on Ubuntu 22.04, but RocksDb compilation fails otherwise on Ubuntu 20.04\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends g++-9-multilib && rm -rf /var/lib/apt/lists/*;\n\nRUN \\\n    /root/.cargo/bin/cargo build \\\n        -Z build-std \\\n        --profile $PROFILE \\\n        --bin subspace-farmer \\\n        --target aarch64-unknown-linux-gnu && \\\n    mv target/*/*/subspace-farmer subspace-farmer && \\\n    rm -rf target\n\nFROM arm64v8/ubuntu:20.04\n\nCOPY --from=0 /code/subspace-farmer /subspace-farmer\n\nRUN mkdir /var/subspace && chown nobody:nogroup /var/subspace\n\nVOLUME /var/subspace\n\nUSER nobody:nogroup\n\nENTRYPOINT [\"/subspace-farmer\"]\n"
}