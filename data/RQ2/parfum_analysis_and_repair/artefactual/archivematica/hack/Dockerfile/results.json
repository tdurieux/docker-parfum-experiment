{
  "startTime": 1674250789861,
  "endTime": 1674250791265,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 68
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 73,
        "lineEnd": 73,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 91,
        "lineEnd": 91,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 169,
        "lineEnd": 169,
        "columnStart": 4,
        "columnEnd": 66
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 181,
        "lineEnd": 181,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 206,
        "lineEnd": 206,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 207,
        "lineEnd": 207,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 140,
        "lineEnd": 140,
        "columnStart": 4,
        "columnEnd": 68
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 95,
        "lineEnd": 95,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 210,
        "lineEnd": 210,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 213,
        "lineEnd": 213,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 172,
        "lineEnd": 172,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 50,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 13
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 50,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 13
      }
    }
  ],
  "repairedDockerfile": "ARG TARGET=archivematica-mcp-server\nARG PYTHON_VERSION=python3\n\nFROM ubuntu:18.04 AS base\n\nENV DEBIAN_FRONTEND noninteractive\nENV PYTHONUNBUFFERED 1\n\nRUN set -ex \\\n\t&& apt-get update \\\n\t&& apt-get install -y --no-install-recommends \\\n\t\tapt-transport-https \\\n\t\tcurl \\\n\t\tgettext \\\n\t\tgit \\\n\t\tgpg-agent \\\n\t\tlocales \\\n\t\tsoftware-properties-common \\\n\t&& rm -rf /var/lib/apt/lists/*\n\n# Set the locale\nRUN locale-gen en_US.UTF-8\nENV LANG en_US.UTF-8\nENV LANGUAGE en_US:en\nENV LC_ALL en_US.UTF-8\n\n# OS dependencies\nCOPY hack/osdeps.py /src/hack/osdeps.py\nCOPY src/dashboard/osdeps /src/src/dashboard/osdeps\nCOPY src/MCPServer/osdeps /src/src/MCPServer/osdeps\nCOPY src/MCPClient/osdeps /src/src/MCPClient/osdeps\nRUN set -ex \\\n\t&& curl -f -s https://packages.archivematica.org/GPG-KEY-archivematica | apt-key add - \\\n\t&& add-apt-repository --no-update --yes \"deb [arch=amd64] http://packages.archivematica.org/1.13.x/ubuntu-externals bionic main\" \\\n\t&& add-apt-repository --no-update --yes \"deb http://archive.ubuntu.com/ubuntu/ bionic multiverse\" \\\n\t&& add-apt-repository --no-update --yes \"deb http://archive.ubuntu.com/ubuntu/ bionic-security universe\" \\\n\t&& add-apt-repository --no-update --yes \"deb http://archive.ubuntu.com/ubuntu/ bionic-updates multiverse\" \\\n\t&& apt-get update \\\n\t&& apt-get install -y --no-install-recommends \\\n\t\tbuild-essential libyaml-dev clamav \\\n\t&& /src/hack/osdeps.py Ubuntu-18 1 | grep -v -E \"nginx|postfix\" | xargs apt-get install -y --no-install-recommends \\\n\t&& rm -rf /var/lib/apt/lists/*\n\n# Download ClamAV virus signatures\nRUN freshclam --quiet\n\n# Install Node.js and Yarn\nRUN set -ex \\\n\t&& curl -f -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \\\n\t&& add-apt-repository --yes \"deb https://dl.yarnpkg.com/debian/ stable main\" \\\n\t&& apt-get install -y --no-install-recommends \\\n\t\tyarn nodejs \\\n\t&& rm -rf /var/lib/apt/lists/*\n\nRUN set -ex \\\n\t&& groupadd --gid 333 --system archivematica \\\n\t&& useradd -m --uid 333 --gid 333 --system archivematica\n\nRUN set -ex \\\n\t&& mkdir -p /var/archivematica/sharedDirectory \\\n\t&& chown -R archivematica:archivematica /var/archivematica\n\n# -----------------------------------------------------------------------------\n\nFROM base AS python2\n\nRUN set -ex \\\n\t&& apt-get update \\\n\t&& apt-get install -y --no-install-recommends \\\n\t\tpython-dev \\\n\t&& rm -rf /var/lib/apt/lists/*\n\nRUN set -ex \\\n\t&& curl -f -s https://bootstrap.pypa.io/pip/2.7/get-pip.py | python2.7\n\nCOPY requirements-dev.txt /src/requirements-dev.txt\nRUN pip2 install --no-cache-dir -r /src/requirements-dev.txt\n\nCOPY . /src\n\n# -----------------------------------------------------------------------------\n\nFROM base AS python3\n\nRUN set -ex \\\n\t&& apt-get update \\\n\t&& apt-get install -y --no-install-recommends \\\n\t\tpython3-dev \\\n\t&& rm -rf /var/lib/apt/lists/*\n\nRUN set -ex \\\n\t&& curl -f -s https://bootstrap.pypa.io/get-pip.py | python3.6 \\\n\t&& update-alternatives --install /usr/bin/python python /usr/bin/python3 10\n\nCOPY requirements-dev-py3.txt /src/requirements-dev-py3.txt\nRUN pip3 install --no-cache-dir -r /src/requirements-dev-py3.txt\n\nCOPY . /src\n\n# -----------------------------------------------------------------------------\n\nFROM ${PYTHON_VERSION} AS archivematica-mcp-client\n\n# Some scripts in archivematica-fpr-admin executed by MCPClient rely on certain\n# files being available in this image (e.g. see https://git.io/vA1wF).\nCOPY src/archivematicaCommon/lib/externals/fido/ /usr/lib/archivematica/archivematicaCommon/externals/fido/\nCOPY src/archivematicaCommon/lib/externals/fiwalk_plugins/ /usr/lib/archivematica/archivematicaCommon/externals/fiwalk_plugins/\n\nUSER archivematica\n\nENV DJANGO_SETTINGS_MODULE settings.common\nENV PYTHONPATH /src/src/MCPClient/lib/:/src/src/MCPClient/lib/clientScripts:/src/src/archivematicaCommon/lib/:/src/src/dashboard/src/\nENV ARCHIVEMATICA_MCPCLIENT_ARCHIVEMATICACLIENTMODULES /src/src/MCPClient/lib/archivematicaClientModules\nENV ARCHIVEMATICA_MCPCLIENT_CLIENTASSETSDIRECTORY /src/src/MCPClient/lib/assets/\nENV ARCHIVEMATICA_MCPCLIENT_CLIENTSCRIPTSDIRECTORY /src/src/MCPClient/lib/clientScripts/\n\nENTRYPOINT [\"/src/src/MCPClient/lib/archivematicaClient.py\"]\n\n# -----------------------------------------------------------------------------\n\nFROM ${PYTHON_VERSION} AS archivematica-mcp-server\n\nUSER archivematica\n\nENV DJANGO_SETTINGS_MODULE settings.common\nENV PYTHONPATH /src/src/MCPServer/lib/:/src/src/archivematicaCommon/lib/:/src/src/dashboard/src/\n\nENTRYPOINT [\"/src/src/MCPServer/lib/archivematicaMCP.py\"]\n\n# -----------------------------------------------------------------------------\n\nFROM ${PYTHON_VERSION} AS archivematica-dashboard\n\nRUN set -ex \\\n\t&& internalDirs=' \\\n\t\t/src/src/dashboard/src/static \\\n\t\t/src/src/dashboard/src/media \\\n\t' \\\n\t&& mkdir -p $internalDirs \\\n\t&& chown -R archivematica:archivematica $internalDirs \\\n\t&& yarn --cwd=/src/src/dashboard/frontend install --frozen-lockfile && yarn cache clean;\n\nWORKDIR /src/src/dashboard/src\n\nUSER archivematica\n\nENV DJANGO_SETTINGS_MODULE settings.local\nENV PYTHONPATH /src/src/dashboard/src/:/src/src/archivematicaCommon/lib/\nENV AM_GUNICORN_BIND 0.0.0.0:8000\nENV AM_GUNICORN_CHDIR /src/src/dashboard/src\nENV FORWARDED_ALLOW_IPS *\n\nRUN set -ex \\\n\t&& ./manage.py collectstatic --noinput --clear \\\n\t&& ./manage.py compilemessages\n\nENV DJANGO_SETTINGS_MODULE settings.production\n\nEXPOSE 8000\n\nENTRYPOINT [\"/usr/local/bin/gunicorn\", \"--config=/src/src/dashboard/install/dashboard.gunicorn-config.py\", \"wsgi:application\"]\n\n# -----------------------------------------------------------------------------\n\nFROM archivematica-dashboard AS archivematica-dashboard-testing\n\nUSER root\n\nARG CHROME_VERSION=\"google-chrome-stable\"\nRUN curl -f -sL https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - \\\n\t&& echo \"deb http://dl.google.com/linux/chrome/deb/ stable main\" >> /etc/apt/sources.list.d/google-chrome.list \\\n\t&& apt-get update -qqy \\\n\t&& apt-get -qqy --no-install-recommends install ${CHROME_VERSION:-google-chrome-stable} \\\n\t&& rm /etc/apt/sources.list.d/google-chrome.list \\\n\t&& rm -rf /var/lib/apt/lists/* /var/cache/apt/*\n\nARG FIREFOX_VERSION=\"latest\"\nRUN FIREFOX_DOWNLOAD_URL=$(if [ $FIREFOX_VERSION = \"latest\" ] || [ $FIREFOX_VERSION = \"nightly-latest\" ] || [ $FIREFOX_VERSION = \"devedition-latest\" ]; then echo \"https://download.mozilla.org/?product=firefox-$FIREFOX_VERSION-ssl&os=linux64&lang=en-US\"; else echo \"https://download-installer.cdn.mozilla.net/pub/firefox/releases/$FIREFOX_VERSION/linux-x86_64/en-US/firefox-$FIREFOX_VERSION.tar.bz2\"; fi) \\\n\t&& apt-get update -qqy \\\n\t&& apt-get -qqy --no-install-recommends install iceweasel \\\n\t&& rm -rf /var/lib/apt/lists/* /var/cache/apt/* \\\n\t&& curl -f -so /tmp/firefox.tar.bz2 -L $FIREFOX_DOWNLOAD_URL \\\n\t&& apt-get -y purge iceweasel \\\n\t&& rm -rf /opt/firefox \\\n\t&& tar -C /opt -xjf /tmp/firefox.tar.bz2 \\\n\t&& rm /tmp/firefox.tar.bz2 \\\n\t&& mv /opt/firefox /opt/firefox-$FIREFOX_VERSION \\\n\t&& ln -fs /opt/firefox-$FIREFOX_VERSION/firefox /usr/bin/firefox\n\nUSER archivematica\n\nWORKDIR /src/src/dashboard/frontend\n\nENTRYPOINT [\"yarn\", \"run\", \"test-single-run\"]\n\n# -----------------------------------------------------------------------------\n\nFROM base AS archivematica-tests\n\nRUN set -ex \\\n\t&& apt-get update \\\n\t&& apt-get install -y --no-install-recommends \\\n\t\tpython-dev python3-dev \\\n\t&& rm -rf /var/lib/apt/lists/*\n\nRUN set -ex \\\n\t&& curl -f -s https://bootstrap.pypa.io/pip/2.7/get-pip.py | python2.7 \\\n\t&& curl -f -s https://bootstrap.pypa.io/get-pip.py | python3.6\n\nCOPY requirements-dev.txt /src/requirements-dev.txt\nRUN pip2 install --no-cache-dir -r /src/requirements-dev.txt\n\nCOPY requirements-dev-py3.txt /src/requirements-dev-py3.txt\nRUN pip3 install --no-cache-dir -r /src/requirements-dev-py3.txt\n\nCOPY . /src\n\n# -----------------------------------------------------------------------------\n\nFROM ${TARGET}\n"
}