diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/project-oak/oak/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/project-oak/oak/Dockerfile/repaired.Dockerfile
index 21ed596..0a628fe 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/project-oak/oak/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/project-oak/oak/Dockerfile/repaired.Dockerfile
@@ -57,7 +57,7 @@ RUN apt-get --yes update \
 # Add LLDB version 14 for debugging support.
 ARG llvm_version=14
 RUN echo "deb http://apt.llvm.org/bullseye/ llvm-toolchain-bullseye-$llvm_version main" >> /etc/apt/sources.list.d/llvm.list \
-  && curl https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - \
+  && curl -f https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - \
   && apt-get update --yes \
   && apt-get install --no-install-recommends --yes \
   lldb-${llvm_version} \
@@ -75,7 +75,7 @@ RUN echo "deb [arch=amd64] https://download.docker.com/linux/debian buster stabl
 # artifacts by URL and ensuring that their digest is correct, in order to ensure reproducibility.
 ARG ent_server_url=https://ent-server-62sa4xcfia-ew.a.run.app
 ARG ent_digest=sha256:b2e999bda4c90fc58c924e19787f5f7037f9d48fd83e7deebd06e3e1d5b31e8d
-RUN curl --location ${ent_server_url}/raw/${ent_digest} > /usr/local/bin/ent \
+RUN curl -f --location ${ent_server_url}/raw/${ent_digest} > /usr/local/bin/ent \
   && chmod +x /usr/local/bin/ent \
   && ent
 
@@ -87,7 +87,7 @@ RUN ent get ${bazel_digest} --url=${bazel_url} > bazel.deb \
   && apt-get install --no-install-recommends --yes ./bazel.deb \
   && rm bazel.deb \
   && apt-get clean \
-  && bazel version
+  && bazel version && rm -rf /var/lib/apt/lists/*;
 
 # Install the necessary binaries and SDKs, ordering them from the less frequently changed to the
 # more frequently changed.
@@ -158,7 +158,7 @@ RUN npm install --global \
   prettier-plugin-toml@${prettier_plugin_toml_version} \
   markdownlint-cli@${markdownlint_version} \
   && prettier --version \
-  && markdownlint --version
+  && markdownlint --version && npm cache clean --force;
 
 # Install hadolint.
 # https://github.com/hadolint/hadolint
@@ -201,7 +201,7 @@ ARG rustup_dir=/usr/local/cargo
 ENV RUSTUP_HOME ${rustup_dir}
 ENV CARGO_HOME ${rustup_dir}
 ENV PATH "${rustup_dir}/bin:${PATH}"
-RUN curl --location https://sh.rustup.rs > /tmp/rustup \
+RUN curl -f --location https://sh.rustup.rs > /tmp/rustup \
   && sh /tmp/rustup -y --default-toolchain=none \
   && chmod a+rwx ${rustup_dir} \
   && rustup --version
@@ -255,21 +255,21 @@ ARG install_dir=${rustup_dir}/bin
 # https://github.com/mozilla/grcov
 ARG grcov_version=v0.5.15
 ARG grcov_location=https://github.com/mozilla/grcov/releases/download/${grcov_version}/grcov-linux-x86_64.tar.bz2
-RUN curl --location ${grcov_location} | tar --extract --bzip2 --directory=${install_dir}
+RUN curl -f --location ${grcov_location} | tar --extract --bzip2 --directory=${install_dir}
 RUN chmod +x ${install_dir}/grcov
 
 # Install cargo-crev.
 # https://github.com/crev-dev/cargo-crev
 ARG crev_version=v0.23.0
 ARG crev_location=https://github.com/crev-dev/cargo-crev/releases/download/${crev_version}/cargo-crev-${crev_version}-x86_64-unknown-linux-musl.tar.gz
-RUN curl --location ${crev_location} | tar --extract --gzip --directory=${install_dir} --strip-components=1
+RUN curl -f --location ${crev_location} | tar --extract --gzip --directory=${install_dir} --strip-components=1
 RUN chmod +x ${install_dir}/cargo-crev
 
 # Install cargo-deny
 # https://github.com/EmbarkStudios/cargo-deny
 ARG deny_version=0.11.3
 ARG deny_location=https://github.com/EmbarkStudios/cargo-deny/releases/download/${deny_version}/cargo-deny-${deny_version}-x86_64-unknown-linux-musl.tar.gz
-RUN curl --location ${deny_location} | tar --extract --gzip --directory=${install_dir} --strip-components=1
+RUN curl -f --location ${deny_location} | tar --extract --gzip --directory=${install_dir} --strip-components=1
 RUN chmod +x ${install_dir}/cargo-deny
 
 # Install cargo-udeps
@@ -277,14 +277,14 @@ RUN chmod +x ${install_dir}/cargo-deny
 ARG udeps_version=v0.1.26
 ARG udeps_dir=cargo-udeps-${udeps_version}-x86_64-unknown-linux-gnu
 ARG udeps_location=https://github.com/est31/cargo-udeps/releases/download/${udeps_version}/cargo-udeps-${udeps_version}-x86_64-unknown-linux-gnu.tar.gz
-RUN curl --location ${udeps_location} | tar --extract --gzip --directory=${install_dir} --strip-components=2 ./${udeps_dir}/cargo-udeps
+RUN curl -f --location ${udeps_location} | tar --extract --gzip --directory=${install_dir} --strip-components=2 ./${udeps_dir}/cargo-udeps
 RUN chmod +x ${install_dir}/cargo-udeps
 
 # Install rust-analyzer
 # https://github.com/rust-analyzer/rust-analyzer
 ARG rust_analyzer_version=2022-02-14
 ARG rust_analyzer_location=https://github.com/rust-analyzer/rust-analyzer/releases/download/${rust_analyzer_version}/rust-analyzer-x86_64-unknown-linux-gnu.gz
-RUN curl --location ${rust_analyzer_location} | gzip --decompress "$@" > ${install_dir}/rust-analyzer
+RUN curl -f --location ${rust_analyzer_location} | gzip --decompress "$@" > ${install_dir}/rust-analyzer
 RUN chmod +x ${install_dir}/rust-analyzer
 
 # Unset $CARGO_HOME so that the new user will use the default value for it, which will point it to
@@ -301,7 +301,7 @@ RUN ln -s /usr/include/linux /usr/include/x86_64-linux-musl/linux
 
 ARG openssl_dir=/usr/local/openssl
 RUN mkdir --parents ${openssl_dir}
-RUN curl --location https://github.com/openssl/openssl/archive/OpenSSL_1_1_1f.tar.gz | tar --extract --gzip --directory=${openssl_dir}/
+RUN curl -f --location https://github.com/openssl/openssl/archive/OpenSSL_1_1_1f.tar.gz | tar --extract --gzip --directory=${openssl_dir}/
 WORKDIR ${openssl_dir}/openssl-OpenSSL_1_1_1f
 RUN CC="musl-gcc -fPIE -pie" ./Configure no-shared no-async --prefix=/musl --openssldir="${OPENSSL_DIR}/ssl" linux-x86_64
 RUN make depend && make -j"$(nproc)"&& make install_sw install_ssldirs
@@ -317,7 +317,7 @@ ARG sccache_dir=/usr/local/sccache
 ARG sccache_location=https://github.com/mozilla/sccache/releases/download/${sccache_version}/sccache-${sccache_version}-x86_64-unknown-linux-musl.tar.gz
 ENV PATH "${sccache_dir}:${PATH}"
 RUN mkdir --parents ${sccache_dir} \
-  && curl --location ${sccache_location} | tar --extract --gzip --directory=${sccache_dir} --strip-components=1 \
+  && curl -f --location ${sccache_location} | tar --extract --gzip --directory=${sccache_dir} --strip-components=1 \
   && chmod +x ${sccache_dir}/sccache
 
 # Install flatbuffers