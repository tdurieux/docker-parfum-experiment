{
  "startTime": 1674247102465,
  "endTime": 1674247104398,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 34,
        "columnEnd": 85
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 80
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 44
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM openknowledge/ckan-dev:2.9\n# Inherit from here: https://github.com/okfn/docker-ckan/blob/master/ckan-dev/2.9/Dockerfile\n# And then from here: https://github.com/okfn/docker-ckan/blob/master/ckan-base/2.9/Dockerfile\n\nENV GIT_BRANCH=2.9\n\n# add dependencies for cryptography and vim\nRUN apk add --no-cache libressl-dev musl-dev libffi-dev xmlsec vim xmlsec-dev openjdk11 zip\n# Download Saxon jar for FGDC2ISO transform (geodatagov)\nARG saxon_ver=9.9.1-7\nADD \\\n  https://repo1.maven.org/maven2/net/sf/saxon/Saxon-HE/${saxon_ver}/Saxon-HE-${saxon_ver}.jar \\\n  /usr/lib/jvm/java-11-openjdk/saxon/saxon.jar\n\n# Add dependencies for ckanext-spatial and geodatagov\nRUN apk add --no-cache geos-dev proj proj-util proj-dev\n\nCOPY requirements.txt ${APP_DIR}\n\nRUN pip3 install --no-cache-dir --upgrade pip && pip3 install --no-cache-dir -r requirements.txt --ignore-installed\n\nCOPY freeze-requirements.sh /usr/local/bin\nCOPY docker-entrypoint.d/* /docker-entrypoint.d/\n\n# Not currently in use in development\nCOPY setup/gunicorn.conf.py ${APP_DIR}/\nCOPY setup/server_start.sh ${APP_DIR}/\n\n# Custom prerun script for Solr 8\nCOPY setup/GSA_prerun.py ${APP_DIR}/\n\nCOPY saml2 ${APP_DIR}/saml2\n\n# COPY the ini test file to the container\nCOPY test-catalog-next.ini ${SRC_DIR}/ckan\n\n# In order for dependencies to be managed, python\n# needs to be mapped to python3\nRUN ln -s /usr/bin/python3 /usr/bin/python\n\n# In order to run CKAN harvester command to finalize\n# harvests, we need to setup a cron for the run command\nCOPY setup/harvest-check-cron /etc/crontabs/root\n\n# RUN sudo -u ckan -EH pip3 install git+https://github.com/nickumia-reisys/werkzeug@e1f6527604ab30e4b46b5430a5fb97e7a7055cd7#egg=werkzeug\n"
}