{
  "startTime": 1674255327557,
  "endTime": 1674255329111,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 84
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 114
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 38,
        "columnStart": 28,
        "columnEnd": 9
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 38,
        "columnStart": 28,
        "columnEnd": 9
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:14.04\n\nARG PYTHON_VERSION=2.7.10\nARG REQUIREMENTS_FILE=requirements.txt\n\nENV CKAN_HOME /usr/lib/ckan\nENV CKAN_CONFIG /etc/ckan/\nENV CKAN_ENV docker\n\n# TODO compile python to /usr/local to avoid this\n# https://github.com/GSA/datagov-deploy/issues/390\nENV LD_LIBRARY_PATH /usr/local/lib/python$PYTHON_VERSION/lib\n\n# Install required packages\nRUN apt-get -q -y update && apt-get -q --no-install-recommends -y install \\\n  apache2 \\\n  atool \\\n  bison \\\n  default-jdk \\\n  git \\\n  htop \\\n  lib32z1-dev \\\n  libapache2-mod-wsgi \\\n  libgeos-c1 \\\n  libpq-dev \\\n  libxml2-dev \\\n  libxslt1-dev \\\n  memcached \\\n  postgresql-client \\\n  python-dev \\\n  python-pip \\\n  python-setuptools \\\n  python-virtualenv \\\n  ruby \\\n  ruby-dev \\\n  swig \\\n  tomcat6 \\\n  wget \\\n  xmlsec1 && rm -rf /var/lib/apt/lists/*;\n\n# Get custom python version for virtualenv\nRUN wget https://www.python.org/ftp/python/$PYTHON_VERSION/Python-$PYTHON_VERSION.tgz\nRUN tar -zxvf Python-$PYTHON_VERSION.tgz && rm Python-$PYTHON_VERSION.tgz\nRUN cd Python-$PYTHON_VERSION && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/local/lib/python$PYTHON_VERSION/ --enable-ipv6 --enable-unicode=ucs4 --enable-shared && \\\n    make && make install\n\n# Upgrade pip & install virtualenv\nRUN pip install --no-cache-dir -U pip 'virtualenv<20'\n\n# Create virtualenv\nRUN virtualenv -p /usr/local/lib/python$PYTHON_VERSION/bin/python $CKAN_HOME\n\n# Configure apache\nRUN rm -rf /etc/apache2/sites-enabled/000-default.conf\nCOPY docker/webserver/apache/apache.wsgi $CKAN_CONFIG\nCOPY docker/webserver/apache/ckan.conf /etc/apache2/sites-enabled/\nCOPY docker/webserver/apache/wsgi.conf /etc/apache2/mods-available/\nRUN a2enmod rewrite headers\n\n# TODO dropping files in a volume is no good...\nCOPY docker/webserver/config/ckan_config.sh /usr/local/bin/\n\n# Config CKAN app\nCOPY config/environments/$CKAN_ENV/production.ini $CKAN_CONFIG\nCOPY docker/webserver/entrypoint.sh /entrypoint.sh\nRUN ln -s $CKAN_HOME/src/ckan/ckan/config/who.ini $CKAN_CONFIG/who.ini\nRUN mkdir /var/tmp/ckan && chown www-data:www-data /var/tmp/ckan\n\n# Install ckan app\nCOPY . /opt/catalog-app\nWORKDIR /opt/catalog-app\nRUN $CKAN_HOME/bin/pip install --no-cache-dir -r $REQUIREMENTS_FILE\n\n# copy ckan script to /usr/bin/\nCOPY docker/webserver/common/usr/bin/ckan /usr/bin/ckan\n\nRUN chmod +x /entrypoint.sh\nENTRYPOINT [\"/entrypoint.sh\"]\n\nRUN apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/*\n\n# apache\nEXPOSE 80\n\n# paster\nEXPOSE 5000\n\nCMD [\"app\",\"--wait-for-dependencies\"]\n"
}