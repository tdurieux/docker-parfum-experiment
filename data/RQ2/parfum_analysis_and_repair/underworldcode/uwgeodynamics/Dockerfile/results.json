{
  "startTime": 1674249895775,
  "endTime": 1674249896701,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 19
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 19
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Stage 1: Inherit from underworldcode/underworld2 and install dependency packages for Badlands\n##########\nFROM underworldcode/underworld2:latest as base_runtime\n# install runtime requirements\nUSER root\nRUN /usr/bin/python3 -m virtualenv --python=/usr/bin/python3 ${VIRTUAL_ENV}\n\n# Stage 2: Build and install Badlands\n##########\nFROM base_runtime AS build_base\nRUN apt-get update -qq && DEBIAN_FRONTEND=noninteractive apt-get install -yq --no-install-recommends \\\n        build-essential \\\n        gfortran \\\n        python3-dev \\\n        swig \\\n        libxml2-dev && rm -rf /var/lib/apt/lists/*;\nRUN /usr/bin/python3 -m virtualenv --python=/usr/bin/python3 ${VIRTUAL_ENV}\nWORKDIR /tmp\nCOPY --chown=jovyan:users . /tmp/UWGeodynamics\nRUN pip3 install --no-cache-dir -vvv UWGeodynamics/\nRUN pip3 install --no-cache-dir -U badlands\n\n\n# Stage 3: Resultant images\n##########\nFROM base_runtime\nCOPY --from=build_base ${VIRTUAL_ENV} ${VIRTUAL_ENV}\n# Record Python packages, but only record system packages!\n# Not venv packages, which will be copied directly in.\nRUN PYTHONPATH= /usr/bin/pip3 freeze >/opt/requirements.txt\n# Record manually install apt packages.\nRUN apt-mark showmanual >/opt/installed.txt\nUSER $NB_USER\nWORKDIR $NB_WORK\nCMD [\"jupyter\", \"notebook\", \"--ip='0.0.0.0'\", \"--no-browser\"]\n"
}