diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/underworldcode/underworld2/docs/development/docker/stampede2/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/underworldcode/underworld2/docs/development/docker/stampede2/Dockerfile/repaired.Dockerfile
index 84f41dd..6c6de8f 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/underworldcode/underworld2/docs/development/docker/stampede2/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/underworldcode/underworld2/docs/development/docker/stampede2/Dockerfile/repaired.Dockerfile
@@ -51,7 +51,7 @@ ARG PSM=PSM2
 ARG PSMV=11.2.78
 ARG PSMD=opa-psm2-${PSM}_${PSMV}
 
-RUN curl -L https://github.com/intel/opa-psm2/archive/${PSM}_${PSMV}.tar.gz | tar -xzf - \
+RUN curl -f -L https://github.com/intel/opa-psm2/archive/${PSM}_${PSMV}.tar.gz | tar -xzf - \
     && cd ${PSMD} \
     && make PSM_AVX=1 -j $(nproc --all 2>/dev/null || echo 2) \
     && make LIBDIR=/usr/lib/x86_64-linux-gnu install \
@@ -62,17 +62,17 @@ ARG MAJV=2
 ARG MINV=3
 ARG DIR=mvapich${MAJV}-${MAJV}.${MINV}
 
-RUN curl http://mvapich.cse.ohio-state.edu/download/mvapich/mv${MAJV}/${DIR}.tar.gz | tar -xzf - \
+RUN curl -f https://mvapich.cse.ohio-state.edu/download/mvapich/mv${MAJV}/${DIR}.tar.gz | tar -xzf - \
     && cd ${DIR} \
-    && ./configure --with-device=ch3:psm \
+    && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --with-device=ch3:psm \
     && make -j $(nproc --all 2>/dev/null || echo 2) && make install \
     && mpicc examples/hellow.c -o /usr/bin/hellow \
     && cd ../ && rm -rf ${DIR} && rm -rf /usr/local/share/doc/mvapich2
 
 ENV LANG=C.UTF-8
 # Install setuptools and wheel first, needed by plotly
-RUN pip3 install -U setuptools  && \
-    pip3 install -U wheel       && \
+RUN pip3 install --no-cache-dir -U setuptools && \
+    pip3 install --no-cache-dir -U wheel && \
     pip3 install --no-cache-dir packaging \
         appdirs \
         numpy \
@@ -97,31 +97,31 @@ RUN update-alternatives --install /usr/bin/python python /usr/bin/python3.6 1
 
 WORKDIR /tmp/petsc-build
 ARG PETSC_VERSION="3.11.2"
-RUN wget http://ftp.mcs.anl.gov/pub/petsc/release-snapshots/petsc-lite-${PETSC_VERSION}.tar.gz && \
-    tar zxf petsc-lite-${PETSC_VERSION}.tar.gz && cd petsc-${PETSC_VERSION}   && \
-    ./configure --with-debugging=0 --prefix=/usr/local/petsc                     \
+RUN wget https://ftp.mcs.anl.gov/pub/petsc/release-snapshots/petsc-lite-${PETSC_VERSION}.tar.gz && \
+    tar zxf petsc-lite-${PETSC_VERSION}.tar.gz && cd petsc-${PETSC_VERSION} && \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --with-debugging=0 --prefix=/usr/local/petsc \
                 --COPTFLAGS="-g -O3" --CXXOPTFLAGS="-g -O3" --FOPTFLAGS="-g -O3" \
-                --with-zlib=1                   \
-                --download-fblaslapack=1        \
-                --download-ctetgen=1            \
-                --download-triangle=1           \
-                --download-hdf5=1               \
-                --download-mumps=1              \
-                --download-parmetis=1           \
-                --download-metis=1              \
-                --download-superlu=1            \
-                --download-hypre=1              \
-                --download-scalapack=1          \
-                --download-superlu_dist=1       \
-                --useThreads=1                  \
-                --download-superlu=1            \
-                --with-shared-libraries         \
-                --with-cxx-dialect=C++11     && \
-    make PETSC_DIR=/tmp/petsc-build/petsc-${PETSC_VERSION} PETSC_ARCH=arch-linux-c-opt all     && \
+                --with-zlib=1 \
+                --download-fblaslapack=1 \
+                --download-ctetgen=1 \
+                --download-triangle=1 \
+                --download-hdf5=1 \
+                --download-mumps=1 \
+                --download-parmetis=1 \
+                --download-metis=1 \
+                --download-superlu=1 \
+                --download-hypre=1 \
+                --download-scalapack=1 \
+                --download-superlu_dist=1 \
+                --useThreads=1 \
+                --download-superlu=1 \
+                --with-shared-libraries \
+                --with-cxx-dialect=C++11 && \
+    make PETSC_DIR=/tmp/petsc-build/petsc-${PETSC_VERSION} PETSC_ARCH=arch-linux-c-opt all && \
     make PETSC_DIR=/tmp/petsc-build/petsc-${PETSC_VERSION} PETSC_ARCH=arch-linux-c-opt install && \
     make PETSC_DIR=/usr/local/petsc PETSC_ARCH="" test && \
     cd /tmp && \
-    rm -fr *
+    rm -fr * && rm petsc-lite-${PETSC_VERSION}.tar.gz
 
 ENV PETSC_DIR=/usr/local/petsc
 ENV PATH=${PETSC_DIR}/bin:$PATH
@@ -142,11 +142,11 @@ WORKDIR /tmp
 ENV UW2_TMP /tmp/underworld2
 ENV UW2_DIR /usr/local/underworld2
 ENV PYTHONPATH $PYTHONPATH:$UW2_DIR/lib
-RUN mkdir -p $UW2_TMP 
+RUN mkdir -p $UW2_TMP
 
 COPY . $UW2_TMP/
 
-RUN cd $UW2_TMP && pip3 install -vvv .    
+RUN cd $UW2_TMP && pip3 install --no-cache-dir -vvv .
 
 # environment variable will internally run xvfb when uw.visualisation is imported,
 # see /opt/underworld2/visualisation/__init__.py