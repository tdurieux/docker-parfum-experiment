diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/underworldcode/underworld2/docs/development/docker/underworld2/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/underworldcode/underworld2/docs/development/docker/underworld2/Dockerfile/repaired.Dockerfile
index e56298f..e6d9f29 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/underworldcode/underworld2/docs/development/docker/underworld2/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/underworldcode/underworld2/docs/development/docker/underworld2/Dockerfile/repaired.Dockerfile
@@ -8,14 +8,14 @@ LABEL maintainer="https://github.com/underworldcode/"
 USER root
 ENV PYVER=3.10
 RUN apt-get update -qq \
-&&  DEBIAN_FRONTEND=noninteractive apt-get install -yq --no-install-recommends \
+&& DEBIAN_FRONTEND=noninteractive apt-get install -yq --no-install-recommends \
         libxml2 \
-        libpython${PYVER}
-        
+        libpython${PYVER} && rm -rf /var/lib/apt/lists/*;
+
 
 FROM base_runtime AS build_base
 # install build requirements
-RUN apt-get update -qq 
+RUN apt-get update -qq
 RUN DEBIAN_FRONTEND=noninteractive apt-get install -yq --no-install-recommends \
         build-essential \
         pkg-config \
@@ -26,23 +26,23 @@ RUN DEBIAN_FRONTEND=noninteractive apt-get install -yq --no-install-recommends \
         swig \
         libxml2-dev \
         g++ \
-        pkg-config
+        pkg-config && rm -rf /var/lib/apt/lists/*;
 # setup further virtualenv to avoid double copying back previous packages (h5py,mpi4py,etc)
 USER $NB_USER
 RUN /usr/bin/python3 -m venv --system-site-packages ${VIRTUAL_ENV}
 WORKDIR /tmp
 COPY --chown=jovyan:users . /tmp/underworld2
 WORKDIR /tmp/underworld2
-RUN pip3 install -vvv . 
+RUN pip3 install --no-cache-dir -vvv .
 
 FROM base_runtime
 COPY --from=build_base ${VIRTUAL_ENV} ${VIRTUAL_ENV}
-# Record Python packages, but only record system packages! 
+# Record Python packages, but only record system packages!
 # Not venv packages, which will be copied directly in.
 RUN PYTHONPATH= /usr/bin/pip3 freeze >/opt/requirements.txt
 # Record manually install apt packages.
 RUN apt-mark showmanual >/opt/installed.txt
-# Copy in examples, tests, etc. 
+# Copy in examples, tests, etc.
 COPY --chown=jovyan:users ./docs/examples   $NB_WORK/Underworld/examples
 COPY --chown=jovyan:users ./docs/cheatsheet $NB_WORK/Underworld/cheatsheet
 COPY --chown=jovyan:users ./docs/user_guide $NB_WORK/Underworld/user_guide