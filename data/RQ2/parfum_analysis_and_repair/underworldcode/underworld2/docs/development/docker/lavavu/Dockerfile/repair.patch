diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/underworldcode/underworld2/docs/development/docker/lavavu/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/underworldcode/underworld2/docs/development/docker/lavavu/Dockerfile/repaired.Dockerfile
index 1c157e2..ef4ae3f 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/underworldcode/underworld2/docs/development/docker/lavavu/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/underworldcode/underworld2/docs/development/docker/lavavu/Dockerfile/repaired.Dockerfile
@@ -18,7 +18,7 @@ RUN useradd -m -s /bin/bash -N $NB_USER -g users \
 &&  chown -R $NB_USER:users $NB_WORK
 VOLUME $NB_WORK/workspace
 
-# make virtualenv directory and set permissions 
+# make virtualenv directory and set permissions
 RUN mkdir ${VIRTUAL_ENV} \
 &&  chmod ugo+rwx ${VIRTUAL_ENV}
 
@@ -43,8 +43,8 @@ RUN apt-get update -qq \
 &&  apt-get clean \
 &&  rm -rf /var/lib/apt/lists/*
 
-RUN pip3 install -U setuptools  \
-&&  pip3 install --no-cache-dir \
+RUN pip3 install --no-cache-dir -U setuptools \
+&& pip3 install --no-cache-dir \
         packaging \
         appdirs \
         jupyter \
@@ -54,11 +54,11 @@ RUN pip3 install -U setuptools  \
 FROM base_runtime AS build_base
 # FROM base_runtime AS build_base
 # install build requirements
-RUN apt-get update -qq 
+RUN apt-get update -qq
 RUN DEBIAN_FRONTEND=noninteractive apt-get install -yq --no-install-recommends \
         build-essential \
         python3-setuptools \
-        libpython${PYVER}-dev \ 
+        libpython${PYVER}-dev \
         libpng-dev \
         libjpeg-dev \
         libtiff-dev \
@@ -72,19 +72,19 @@ RUN DEBIAN_FRONTEND=noninteractive apt-get install -yq --no-install-recommends \
         zlib1g-dev \
         cmake \
         libopenblas-dev \
-        libz-dev
+        libz-dev && rm -rf /var/lib/apt/lists/*;
 
 # lavavu
 # create a virtualenv to put new python modules
 USER $NB_USER
 RUN /usr/bin/python3 -m venv --system-site-packages ${VIRTUAL_ENV}
-RUN LV_OSMESA=1 pip3 install --no-cache-dir --no-binary=lavavu lavavu 
+RUN LV_OSMESA=1 pip3 install --no-cache-dir --no-binary=lavavu lavavu
 
 FROM base_runtime AS minimal
 COPY --from=build_base $VIRTUAL_ENV $VIRTUAL_ENV
 COPY --from=build_base /usr/local /usr/local
 # ENV LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/lib/x86_64-linux-gnu/
-# Record Python packages, but only record system packages! 
+# Record Python packages, but only record system packages!
 # Not venv packages, which will be copied directly in.
 RUN PYTHONPATH= /usr/bin/pip3 freeze >/opt/requirements.txt
 # Record manually install apt packages.