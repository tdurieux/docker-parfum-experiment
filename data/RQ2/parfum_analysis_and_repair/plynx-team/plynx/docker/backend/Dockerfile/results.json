{
  "startTime": 1674249932545,
  "endTime": 1674249933211,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 6
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 6
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 6
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Use an official Python runtime as a parent image\nFROM python:3.7-slim\n\n# Set the working directory to /app\nWORKDIR /app\n\n# Install needed packages\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    build-essential \\\n    iputils-ping \\\n    curl \\\n    bc && rm -rf /var/lib/apt/lists/*;\n\n# Copy the current directory contents into the container at /app\nADD ./wsgi.py /app/wsgi.py\n\n# Copy licence\nADD ./LICENSE /app\n\n# Copy test data\nADD ./docker/backend/tests /app/tests\n\n# master / worker port\nEXPOSE 17011\n\n# backend port\nEXPOSE 5005\n\n# Create worker user\nRUN useradd -c \"Worker\" worker  -s /bin/bash\nRUN chmod 700 /app\nRUN chmod 1777 /tmp\n\n# Add dev watch script\nCOPY ./scripts/watch.sh /app/watch.sh\n\n# Build PLynx package\nADD ./plynx /tmp/plynx\nADD ./setup.py /tmp/setup.py\nADD ./requirements.txt /tmp/requirements.txt\nADD ./requirements-dev.txt /tmp/requirements-dev.txt\nRUN cd /tmp && python setup.py install\n\n# install extra docker requirements\nADD ./docker/backend/requirements.txt /app/requirements.txt\nRUN pip install --no-cache-dir -r /app/requirements.txt\nRUN rm /app/requirements.txt\n"
}