{
  "startTime": 1674246722899,
  "endTime": 1674246724038,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 7,
        "columnEnd": 72
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 18,
        "lineEnd": 33,
        "columnStart": 7,
        "columnEnd": 28
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nginx:alpine\n\n# Rebuild nginx with mod_zip so we can serve zippped lesson plans.\nRUN apk add --no-cache --virtual .build-deps \\\n\t\tgcc \\\n\t\tlibc-dev \\\n\t\tmake \\\n\t\tpcre-dev \\\n\t\tzlib-dev \\\n\t\tlinux-headers \\\n\t\tcurl \\\n\t\tlibxslt-dev \\\n\t\tgd-dev \\\n    git \\\n    && curl -f -LO https://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz \\\n    && tar zxf nginx-${NGINX_VERSION}.tar.gz \\\n    && cd nginx-${NGINX_VERSION} \\\n    && git -c http.sslVerify=false clone https://github.com/evanmiller/mod_zip.git \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n        --prefix=/usr \\\n        --user=nginx \\\n        --group=nginx \\\n        --conf-path=/etc/nginx/nginx.conf \\\n        --http-log-path=/dev/stdout \\\n        --error-log-path=/dev/stdout \\\n        --with-pcre-jit \\\n        --with-file-aio \\\n        --with-threads \\\n        --with-http_realip_module \\\n        --with-http_addition_module \\\n        --with-http_gzip_static_module \\\n        --with-http_gunzip_module \\\n        --with-http_sub_module \\\n        --add-module=mod_zip \\\n    && make install \\\n    && cd .. \\\n    && rm -f nginx-${NGINX_VERSION}.tar.gz \\\n    && rm -rf nginx-${NGINX_VERSION} \\\n    && apk del .build-deps \\\n    && mkdir -p /etc/nginx/sites-enabled\n\nCOPY nginx.conf /etc/nginx/nginx.conf\nCOPY sec.conf /etc/nginx/sites-enabled\n"
}