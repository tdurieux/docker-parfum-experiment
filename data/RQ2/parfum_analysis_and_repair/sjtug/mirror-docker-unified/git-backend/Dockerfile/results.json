{
  "startTime": 1674249689481,
  "endTime": 1674249690085,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 1,
        "columnEnd": 50
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 1,
        "columnEnd": 50
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# small is beautiful\nFROM debian:9\n\nMAINTAINER Anthony Hogg anthony@hogg.fr\n\n# The container listens on port 80, map as needed\nEXPOSE 80\n\n# This is where the repositories will be stored, and\n# should be mounted from the host (or a volume container)\nVOLUME [\"/git\"]\n\n# We need the following:\n# - git, because that gets us the git-http-backend CGI script\n# - fcgiwrap, because that is how nginx does CGI\n# - spawn-fcgi, to launch fcgiwrap and to create the unix socket\n# - nginx, because it is our frontend\nRUN apt-get update && \\\n\tapt-get install --no-install-recommends -yy nginx git fcgiwrap spawn-fcgi && rm -rf /var/lib/apt/lists/*;\n\nCOPY nginx.conf /etc/nginx/nginx.conf\n\n# launch fcgiwrap via spawn-fcgi; launch nginx in the foreground\n# so the container doesn't die on us; supposedly we should be\n# using supervisord or something like that instead, but this\n# will do\nRUN git config --global pack.threads 4 && \\\n\tgit config --global pack.windowMemory 512m && \\\n\tgit config --global core.compression 1 && \\\n\tgit config --global uploadpack.allowReachableSHA1InWant true && \\\n\tgit config --global core.bare true\n\n\nCMD spawn-fcgi -s /run/fcgi.sock /usr/sbin/fcgiwrap && \\\n    nginx -g \"daemon off;\"\n"
}