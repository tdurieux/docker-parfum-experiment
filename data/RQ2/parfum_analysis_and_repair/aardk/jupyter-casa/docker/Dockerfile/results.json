{
  "startTime": 1674219956218,
  "endTime": 1674219958026,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 94
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 7,
        "columnEnd": 98
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 78
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 7,
        "columnEnd": 32
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 163,
        "lineEnd": 163,
        "columnStart": 7,
        "columnEnd": 26
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 7,
        "columnEnd": 29
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 7,
        "columnEnd": 36
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 7,
        "columnEnd": 56
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 25,
        "columnEnd": 67
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 72
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 162,
        "lineEnd": 162,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 72
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 162,
        "lineEnd": 162,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 25,
        "columnEnd": 67
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 72
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 162,
        "lineEnd": 162,
        "columnStart": 4,
        "columnEnd": 52
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 72
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 88
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 162,
        "lineEnd": 162,
        "columnStart": 4,
        "columnEnd": 76
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:18.04\nCMD [\"jupyter\", \"notebook\"]\nRUN echo \"deb http://nl.archive.ubuntu.com/ubuntu/ bionic main restricted universe multiverse\" > /etc/apt/sources.list \\\n    && echo \"deb http://nl.archive.ubuntu.com/ubuntu/ bionic-updates main restricted universe multiverse\" >> /etc/apt/sources.list \\\n    && apt-get update && apt-get install --no-install-recommends -y apt-utils debconf-utils && apt-get -y upgrade && apt-get clean && rm -rf /var/lib/apt/lists/*;\n\nENV DEBIAN_FRONTEND=noninteractive\n\nRUN apt-get install --no-install-recommends -y python2.7 python-dev python-numpy python-scipy python-pip python-nose python-tk python-dbus \\\n                       build-essential git wget cmake flex bison g++ xvfb libcfitsio-dev libreadline6-dev libncurses5-dev \\\n                       libhdf5-serial-dev libpython3.6-dev libboost-python-dev libblas-dev liblapacke-dev libfftw3-dev \\\n                       wcslib-dev libboost-program-options-dev libboost-filesystem-dev \\\n                       libboost-system-dev libboost-python-dev libboost-thread-dev libboost-regex-dev \\\n                       libqt4-dev pgplot5 openjdk-8-jre libdbus-1-dev libdbus-c++-dev libxml2-dev libxslt1-dev \\\n                       libqwt-dev libsqlite3-dev liblog4cxx-dev doxygen swig libgsl-dev curl \\\n                       libgtkmm-3.0-dev liblua5.3-dev libboost-numpy-dev \\\n    && apt-get clean && rm -rf /var/lib/apt/lists/*;\n\n# Libgsl from 16.04 is too old for CASA, get the version from 18.04\n#RUN for i in libgslcblas0_2.4+dfsg-6_amd64.deb libgsl23_2.4+dfsg-6_amd64.deb libgsl-dev_2.4+dfsg-6_amd64.deb; \\\n#    do wget http://nl.archive.ubuntu.com/ubuntu/pool/universe/g/gsl/$i; dpkg -i $i; rm $i; done\n\n# Default libxerces in 18.04 is too new for casa code, use older version\nRUN wget https://launchpadlibrarian.net/344856440/libxerces-c3.1_3.1.4+debian-2build2_amd64.deb \\\n    && wget https://launchpadlibrarian.net/344856431/libxerces-c-dev_3.1.4+debian-2build2_amd64.deb \\\n    && dpkg -i libxerces-c3.1_3.1.4+debian-2build2_amd64.deb \\\n    && dpkg -i libxerces-c-dev_3.1.4+debian-2build2_amd64.deb\n\n# We need an older version of libeigen3 for libsakura\nRUN wget https://launchpadlibrarian.net/165141962/libeigen3-dev_3.2.0-8_all.deb \\\n    && dpkg -i libeigen3-dev_3.2.0-8_all.deb \\\n    && rm libeigen3-dev_3.2.0-8_all.deb\n\n# install jupyter\nRUN apt-get install --no-install-recommends -y gfortran build-essential python-numpy-dev \\\n    && pip install --no-cache-dir --upgrade pip \\\n    && /usr/local/bin/pip install matplotlib notebook widgetsnbextension \\\n    && /usr/local/bin/pip install pyfits astropy \\\n    # Enable ipywidgets\n    && jupyter nbextension enable --py widgetsnbextension --sys-prefix && rm -rf /var/lib/apt/lists/*;\n\n# Dependencies - RPFITS\nRUN wget ftp://ftp.atnf.csiro.au/pub/software/rpfits/rpfits.tar.gz \\\n    && tar zxvf rpfits.tar.gz \\\n    && cd rpfits/linux64 \\\n    && make install \\\n    && cd ../.. \\\n    && rm -rf rpfits* && rm rpfits.tar.gz\n\n# Dependencies - LIBSAKURA\nRUN git clone https://github.com/aardk/libsakura \\\n    && cd libsakura \\\n    && wget https://github.com/google/googletest/archive/release-1.7.0.tar.gz \\\n    && tar zxvf release-1.7.0.tar.gz \\\n    && ln -s googletest-release-1.7.0 gtest \\\n    && mkdir build \\\n    && cd build \\\n    # Local compiles:\n    # cmake -DSIMD_ARCH=NATIVE ..\n    # For distribution purposes:\n    && cmake -DSIMD_ARCH=SSE4 .. \\\n    && make \\\n    && make apidoc \\\n    && make install \\\n    && cd ../.. \\\n    && rm -rf libsakura && rm release-1.7.0.tar.gz\n\n# casa data needs git lfs support\nENV LFSVERSION=v2.6.1\nRUN mkdir -p gitlfs-${LFSVERSION} \\\n    && cd gitlfs-${LFSVERSION} \\\n    && wget https://github.com/git-lfs/git-lfs/releases/download/${LFSVERSION}/git-lfs-linux-amd64-${LFSVERSION}.tar.gz \\\n    && tar zxvf git-lfs-linux-amd64-${LFSVERSION}.tar.gz \\\n    && ./install.sh \\\n    && cd .. \\\n    && rm -rf gitlfs-${LFSVERSION} && rm git-lfs-linux-amd64-${LFSVERSION}.tar.gz\n\nENV HOST_CPU_CORES=8 \\\n    CASA_BUILD_TYPE=Release \\\n    CASA_ARCH=linux64 \\\n    CASA_BRANCH=release/pipeline/5.6.3 \\\n    workDir=/usr/local/casa \\\n    CASAPATH=\"$workDir $CASA_ARCH\"\n\n# ASAP need this patch to compile\nCOPY asap.patch casacore.patch /root/\n\n# Build casa\nRUN git clone -b $CASA_BRANCH https://open-bitbucket.nrao.edu/scm/casa/casa.git $workDir \\\n    && cd $workDir \\\n    && git submodule update --init casacore \\\n    && git clone https://open-bitbucket.nrao.edu/scm/casa/casa-asap.git \\\n    && git clone --no-checkout https://open-bitbucket.nrao.edu/scm/casa/casa-data.git $workDir/data \\\n    && cd data \\\n    && git show HEAD:distro | bash \\\n    # cleanup git, saves ~600MB\n    && rm -rf .git ../git\\\n    # Build casacore\n    && cd $workDir/casacore \\\n    && patch -p1 < /root/casacore.patch \\\n    && mkdir $workDir/casacore/build \\\n    && cd $workDir/casacore/build \\\n    && cmake .. -DCMAKE_BUILD_TYPE=$CASA_BUILD_TYPE -DCMAKE_INSTALL_PREFIX=$workDir/$CASA_ARCH -DDATA_DIR=$workDir/data -DUSE_THREADS=ON -DCFITSIO_INCLUDE_DIR=/usr/include/cfitsio -DUSE_FFTW3=ON -DCFITSIO_INCLUDE_DIR=/usr/include -DCASA_BUILD=ON -DUSE_HDF5=ON -DBUILD_PYTHON=ON \\\n    && make -j$HOST_CPU_CORES \\\n    && make install \\\n    && cd $workDir \\\n    && rm -rf casacore \\\n    # build casa code\n    && mkdir $workDir/code/build \\\n    && cd $workDir/code/build \\\n    && cmake .. -DCMAKE_BUILD_TYPE=$CASA_BUILD_TYPE -DINTERACTIVE_ITERATION=1 -DCMAKE_INSTALL_PREFIX=$workDir/$CASA_ARCH \\\n    && make -j$HOST_CPU_CORES \\\n    && cd $workDir \\\n    && rm -rf code/build \\\n    # build gcwrap\n    && mkdir $workDir/gcwrap/build \\\n    && cd $workDir/gcwrap/build \\\n    && cmake .. -Darch=$CASA_ARCH -DCMAKE_INSTALL_PREFIX=$workDir/$CASA_ARCH -DPYTHON_LIBNAME=2.7 -DCMAKE_BUILD_TYPE=$CASA_BUILD_TYPE -DINTERACTIVE_ITERATION=1 \\\n    && make -j$HOST_CPU_CORES \\\n    && cd $workDir \\\n    && rm -rf gcWrap \\ \n    # Build asap\n    && cd $workDir/casa-asap \\\n    && ls -l \\\n    && patch -p1 < /root/asap.patch \\\n    && mkdir $workDir/casa-asap/build \\\n    && cd $workDir/casa-asap/build \\\n    && cmake .. -Darch=$CASA_ARCH -DCMAKE_INSTALL_PREFIX=$workDir/$CASA_ARCH -DPYTHON_LIBNAME=2.7 -DCMAKE_BUILD_TYPE=$CASA_BUILD_TYPE \\\n    && make -j$HOST_CPU_CORES \\\n    && cd $workDir \\\n    && rm -rf casa-asap \\\n    && rm -rf code\n\n# Add VLBI scripts\nRUN git clone https://github.com/jive-vlbi/casa-vlbi /usr/local/casa-vlbi \\\n    && cp /usr/local/casa-vlbi/*py /usr/local/bin \\\n    && cp -r /usr/local/casa-vlbi/casavlbitools $workDir/linux64/lib/python2.7\n\n# Add Wsclean\nRUN cd $workDir \\\n    && git clone https://github.com/lofar-astron/LOFARBeam.git \\\n    && cd LOFARBeam \\\n    && git checkout v4.1.1 \\\n    && mkdir -p build \\\n    && cd build \\\n    && cmake -DCASACORE_ROOT_DIR=$workDir/linux64 .. \\\n    && make -j4 \\\n    && make install \\\n    && cd $workDir \\\n    && rm -rf LOFARBeam \\\n    && git clone https://git.code.sf.net/p/wsclean/code wsclean-code \\\n    && cd wsclean-code \\\n    && git checkout wsclean2.9 \\\n    && mkdir -p wsclean/build \\\n    && cd wsclean/build \\\n    && cmake -DCASACORE_ROOT_DIR=$workDir/linux64 .. \\\n    && make -j4 \\\n    && make install \\\n    && cd $workDir \\\n    && rm -rf wsclean-code\n\n# Add AOFLAGGER\nRUN apt-get install --no-install-recommends -y python3-pip libboost-test-dev \\\n    && pip3 install --no-cache-dir pytest \\\n    && git clone https://github.com/pybind/pybind11.git \\\n    && cd pybind11 \\\n    && git checkout v2.5.0 \\\n    && mkdir build \\\n    && cd build \\\n    && cmake -DDOWNLOAD_CATCH=1  -DPYBIND11_PYTHON_VERSION=2.7 .. \\\n    && make -j4 \\\n    && make install \\\n    && cd .. \\\n    && python setup.py install \\\n    && cd .. \\\n    && rm -rf pybind11 \\\n    && git clone https://gitlab.com/aroffringa/aoflagger.git \\\n    && sed -i 's/PythonLibs 3 REQUIRED/PythonLibs 2 REQUIRED/' aoflagger/CMakeLists.txt \\\n    && mkdir -p aoflagger/build \\\n    && cd aoflagger/build \\\n    && cmake -DCASACORE_ROOT_DIR=$workDir/linux64 .. \\\n    && make -j4 \\\n    && make install \\\n    && cp /usr/local/lib/aoflagger.so /usr/local/lib/python2.7/dist-packages \\\n    && cd ../.. \\\n    && rm -rf aoflagger && rm -rf /var/lib/apt/lists/*;\n\n# Install jupyter casa wrapper and copy fixed casa tasked\nRUN mkdir -p /usr/local/lib/python2.7/dist-packages\nCOPY python/start_casa /usr/local/lib/python2.7/dist-packages/start_casa\nCOPY jupyter /usr/local/share/jupyter\nCOPY python/casa/TablePlotTkAgg.py python/casa/task_setjy.py $workDir/linux64/lib/python2.7/\n\n# Disable ipv6\n#RUN echo \"net.ipv6.conf.all.disable_ipv6 = 1\\n net.ipv6.conf.default.disable_ipv6 = 1\\n net.ipv6.conf.lo.disable_ipv6 = 1\" >> /etc/sysctl.d/99-sysctl.conf \\\n#    && cat /etc/sysctl.d/99-sysctl.conf\n\nRUN groupadd -g 1000  jupyter && useradd -u 1000 -m -g jupyter jupyter\nEXPOSE 8888\nUSER jupyter\nWORKDIR /home/jupyter\nENV PYTHONPATH=\"/usr/local/lib/python2.7/dist-packages:/usr/local/casa/linux64/lib/python2.7\" \\\n    LD_LIBRARY_PATH=\"/usr/local/casa/linux64/lib\" \\\n    CASAPATH=\"/usr/local/casa/ linux64\" \\\n    PATH=\"/usr/local/casa/linux64/bin:$PATH\" \\\n    QT_X11_NO_MITSHM=1\nRUN mkdir -p /home/jupyter/.jupyter\nCOPY --chown=jupyter:jupyter docker/jupyter_notebook_config.py /home/jupyter/.jupyter\nCOPY --chown=jupyter:jupyter docker/create_font_cache.py /home/jupyter\nRUN python create_font_cache.py\n"
}