{
  "startTime": 1674248457186,
  "endTime": 1674248457673,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 22
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Use node as the base image\nFROM node:16.13.1-alpine3.14 AS node\nFROM node\n\nFROM node as base\nRUN npm i -g npm@8.1.2 && npm cache clean --force;\n\n# This stage creates a skeleton with package*.json to /app/\nFROM base as package-sources\nARG NPM_LOG_LEVEL=silent\nRUN mkdir /app\nCOPY lerna.json /app/\nCOPY package*.json /app/\nCOPY packages packages\nRUN cp --parents packages/*/package*.json /app/\nWORKDIR /app\nRUN npm ci --loglevel=${NPM_LOG_LEVEL} --production\n\nFROM package-sources AS build\nARG NPM_LOG_LEVEL=silent\n\nENV OPENCOLLECTIVE_HIDE=1\n\n#install all node_nodules in '/app/packages'\nRUN npm run bootstrap -- --loglevel=${NPM_LOG_LEVEL} --scope @amplication/server --scope @amplication/client --include-dependencies\n\n#copy the content (code) from packages to /app/packages (mode_modules folders stay in place )\nCOPY packages packages\n\nRUN npm run prisma:generate\n# prepare all the build/dist folders unders /app/packages\nRUN npm run build -- --scope @amplication/server --scope @amplication/client --include-dependencies\n#remove all node_modules (with dev dependencies) from /app/packages\nRUN npm run clean -- --yes\n\nFROM package-sources\n\nENV OPENCOLLECTIVE_HIDE=1\n\nEXPOSE 3000\n\n##is this duplicate?\nRUN npm ci --production --silent\n\n#copy the content of /app/packages from the 'build' stage (without node_modules)\nCOPY --from=build /app/packages /app/packages\n\n#install node_modules for all packages (for production)\nRUN npm run bootstrap -- -- --production --loglevel=silent --scope @amplication/server --scope @amplication/client --include-dependencies\n\nRUN npm run prisma:generate\n\n# Copy entrypoint script\nCOPY docker-entrypoint.sh /entrypoint.sh\n# Give entrypoint script access permission\nRUN chmod 755 /entrypoint.sh\n\nENTRYPOINT [ \"/entrypoint.sh\" ]\n\nCMD [ \"node\", \"packages/amplication-server/dist/src/main\"]\n"
}