{
  "startTime": 1674221019669,
  "endTime": 1674221020319,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 22
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG ALPINE_VERSION=alpine3.14\nARG NODE_VERSION=16.13.1\n# Use node as the base image\n\nFROM node:$NODE_VERSION-$ALPINE_VERSION AS base\n\n# Define how verbose should npm install be\nARG NPM_LOG_LEVEL=silent\n# Hide Open Collective message from install logs\nENV OPENCOLLECTIVE_HIDE=1\n# Hiden NPM security message from install logs\nENV NPM_CONFIG_AUDIT=false\n# Hide NPM funding message from install logs\nENV NPM_CONFIG_FUND=false\n\n# Update npm to version 7\nRUN npm i -g npm@8.1.2 && npm cache clean --force;\n\n# Set the working directory\nWORKDIR /app/admin-ui\n\n# Copy files specifying dependencies\nCOPY package.json package-lock.json ./\n\n# Install dependencies\nRUN npm ci --loglevel=$NPM_LOG_LEVEL;\n\n# Copy all the files\nCOPY . .\n\n# Build code\nRUN npm run build\n\n# Expose the port the client listens to\nEXPOSE 3001\n\n# Run admin-ui\n\nCMD [ \"npm\", \"start\"]\n"
}