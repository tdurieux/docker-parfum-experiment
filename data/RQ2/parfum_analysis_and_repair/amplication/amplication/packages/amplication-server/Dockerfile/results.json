{
  "startTime": 1674252497516,
  "endTime": 1674252498568,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 41
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG ALPINE_VERSION=alpine3.14\nARG NODE_VERSION=16.13.1\n\nFROM node:$NODE_VERSION-$ALPINE_VERSION AS base\nARG NPM_VERSION=8.1.2\nENV NPM_CONFIG_LOGLEVEL=silent\nENV OPENCOLLECTIVE_HIDE=1\n\nRUN npm install --global npm@$NPM_VERSION && npm cache clean --force;\nRUN npm config set fund false\n\nWORKDIR /app\nCOPY lerna.json /app\nCOPY package*.json /app/\nRUN npm ci --production\n\nFROM base AS build\nWORKDIR /app\n# Copy amplication/server and the its dependent packages\nCOPY packages/amplication-server packages/amplication-server\nCOPY packages/amplication-data packages/amplication-data\nCOPY packages/amplication-data-service-generator packages/amplication-data-service-generator\nCOPY packages/amplication-git-service packages/amplication-git-service\nCOPY packages/amplication-prisma-db packages/amplication-prisma-db\nCOPY packages/amplication-kafka packages/amplication-kafka\n\n# Installs all copied package node_modules ; Preparation for build\nRUN npm run bootstrap -- --scope @amplication/server --include-dependencies\nRUN npm run prisma:generate -- --scope @amplication/server --include-dependencies\n\n# Build all distributions needed for amplicaiton/server\nRUN npm run build -- --scope @amplication/server --include-dependencies\n\n# Removes packages/*/node_modules\n# https://github.com/lerna/lerna/issues/2196#issuecomment-994882795\nRUN npm run clean -- --yes\n# Rebuild production node_modules\nRUN npm run bootstrap -- -- --production --scope @amplication/server --include-dependencies\n\nFROM base as server\nWORKDIR /app/packages/amplication-server\n# Copy all distributions and node_modules for amplication/server and its dependencies\nCOPY --from=build /app/packages/amplication-server/package.json /app/packages/amplication-server/package.json\nCOPY --from=build /app/packages/amplication-server/node_modules /app/packages/amplication-server/node_modules\nCOPY --from=build /app/packages/amplication-server/dist /app/packages/amplication-server/dist\n\nCOPY --from=build /app/packages/amplication-server/index.html /app/packages/amplication-client/build/index.html\n\n\nCOPY --from=build /app/packages/amplication-data/package.json /app/packages/amplication-data/package.json\nCOPY --from=build /app/packages/amplication-data/node_modules /app/packages/amplication-data/node_modules\nCOPY --from=build /app/packages/amplication-data/dist /app/packages/amplication-data/dist\n\nCOPY --from=build /app/packages/amplication-data-service-generator/package.json /app/packages/amplication-data-service-generator/package.json\nCOPY --from=build /app/packages/amplication-data-service-generator/node_modules /app/packages/amplication-data-service-generator/node_modules\nCOPY --from=build /app/packages/amplication-data-service-generator/dist /app/packages/amplication-data-service-generator/dist\n\nCOPY --from=build /app/packages/amplication-git-service/package.json /app/packages/amplication-git-service/package.json\nCOPY --from=build /app/packages/amplication-git-service/node_modules /app/packages/amplication-git-service/node_modules\nCOPY --from=build /app/packages/amplication-git-service/dist /app/packages/amplication-git-service/dist\n\n\nCOPY --from=build /app/packages/amplication-prisma-db/package.json /app/packages/amplication-prisma-db/package.json\nCOPY --from=build /app/packages/amplication-prisma-db/node_modules /app/packages/amplication-prisma-db/node_modules\nCOPY --from=build /app/packages/amplication-prisma-db/lib /app/packages/amplication-prisma-db/lib\nCOPY --from=build /app/packages/amplication-prisma-db/prisma /app/packages/amplication-prisma-db/prisma  \n\nCOPY --from=build /app/packages/amplication-kafka/package.json /app/packages/amplication-kafka/package.json\nCOPY --from=build /app/packages/amplication-kafka/node_modules /app/packages/amplication-kafka/node_modules\nCOPY --from=build /app/packages/amplication-kafka/lib /app/packages/amplication-kafka/lib\n\nEXPOSE 3000\nCMD [ \"node\", \"dist/src/main\"]"
}