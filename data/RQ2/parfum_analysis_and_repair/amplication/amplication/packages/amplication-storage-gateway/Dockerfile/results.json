{
  "startTime": 1674215870896,
  "endTime": 1674215871694,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 41
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG ALPINE_VERSION=alpine3.14\nARG NODE_VERSION=16.13.1\n\nFROM node:$NODE_VERSION-$ALPINE_VERSION AS base\nARG NPM_VERSION=8.1.2\nENV NPM_CONFIG_LOGLEVEL=silent\nENV OPENCOLLECTIVE_HIDE=1\n\nRUN npm install --global npm@$NPM_VERSION && npm cache clean --force;\nRUN npm config set fund false\n\nWORKDIR /app\nCOPY lerna.json /app\nCOPY package*.json /app/\nRUN npm ci --production\n\nFROM base AS build\nWORKDIR /app\n# Copy amplication/storage-gateway and the its dependent packages\nCOPY packages/amplication-storage-gateway packages/amplication-storage-gateway\nCOPY packages/amplication-kafka packages/amplication-kafka\n\n# Installs all copied package node_modules ; Preparation for build\nRUN npm run bootstrap -- --scope @amplication/storage-gateway --include-dependencies\n\n# Build all distributions needed for amplication/storage-gateway\nRUN npm run build -- --scope @amplication/storage-gateway --include-dependencies\n\n# Removes packages/*/node_modules\n# https://github.com/lerna/lerna/issues/2196#issuecomment-994882795\nRUN npm run clean -- --yes\n# Rebuild production node_modules\nRUN npm run bootstrap -- -- --production --scope @amplication/storage-gateway --include-dependencies\n\nFROM base as service\nWORKDIR /app/packages/amplication-storage-gateway\n# Copy all distributions and node_modules for amplication/server and its dependencies\nCOPY --from=build /app/packages/amplication-storage-gateway/package.json /app/packages/amplication-storage-gateway/package.json\nCOPY --from=build /app/packages/amplication-storage-gateway/node_modules /app/packages/amplication-storage-gateway/node_modules\nCOPY --from=build /app/packages/amplication-storage-gateway/dist /app/packages/amplication-storage-gateway/dist\n\nCOPY --from=build /app/packages/amplication-kafka/package.json /app/packages/amplication-kafka/package.json\nCOPY --from=build /app/packages/amplication-kafka/node_modules /app/packages/amplication-kafka/node_modules\nCOPY --from=build /app/packages/amplication-kafka/lib /app/packages/amplication-kafka/lib\n\nCMD [\"node\", \"dist/main\"]"
}