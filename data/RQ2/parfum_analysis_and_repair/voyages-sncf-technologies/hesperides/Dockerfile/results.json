{
  "startTime": 1674251580123,
  "endTime": 1674251581319,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 61
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 25,
        "columnEnd": 54
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 25,
        "columnEnd": 61
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 25,
        "columnEnd": 54
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 25,
        "columnEnd": 61
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM maven:3-jdk-11\nWORKDIR /usr/local/src\nCOPY pom.xml .\nCOPY bootstrap bootstrap\nCOPY commons commons\nCOPY core core\nCOPY tests tests\nCOPY pom.xml .\nRUN mvn clean package -Dmaven.test.skip=true -Dmaven.javadoc.skip=true\n\n\nFROM openjdk:11-jre-slim\nLABEL maintainer=\"Team Avengers @ oui.sncf\"\n\n# Installing curl & MongoDB shell:\nRUN apt-get update -y && apt-get install --no-install-recommends -y curl gnupg && rm -rf /var/lib/apt/lists/*;\nRUN curl -f -s https://www.mongodb.org/static/pgp/server-4.2.asc | apt-key add -\nRUN echo \"deb http://repo.mongodb.org/apt/debian buster/mongodb-org/4.2 main\" | tee /etc/apt/sources.list.d/mongodb-org-4.2.list\nRUN apt-get update -y && apt-get install --no-install-recommends -y mongodb-org-shell && rm -rf /var/lib/apt/lists/*;\n\nCOPY --from=0 /usr/local/src/bootstrap/target/hesperides-*.jar hesperides.jar\nCOPY mongo_create_collections.js /\nCOPY docker_entrypoint.sh /\nRUN chmod u+x /docker_entrypoint.sh\n\nARG BUILD_TIME\nENV BUILD_TIME=$BUILD_TIME\nARG GIT_BRANCH\nENV GIT_BRANCH=$GIT_BRANCH\nARG GIT_COMMIT\nENV GIT_COMMIT=$GIT_COMMIT\nARG GIT_COMMIT_MSG\nENV GIT_COMMIT_MSG=$GIT_COMMIT_MSG\nARG GIT_TAG\nENV GIT_TAG=$GIT_TAG\nENV SENTRY_TAGS=GIT_BRANCH:$GIT_BRANCH,GIT_COMMIT:$GIT_COMMIT,GIT_TAG:$GIT_TAG\n\nENTRYPOINT [\"/docker_entrypoint.sh\"]\n\nARG PORT=8080\nENV PORT=$PORT\nEXPOSE $PORT\n\nHEALTHCHECK --interval=5s --timeout=3s --retries=3 CMD curl --fail http://localhost:$PORT/rest/manage/health || exit 1\n\nRUN cp /usr/local/openjdk-*/bin/java /usr/local/bin/java\n\nARG UID=101\nRUN useradd --uid $UID hesperides\nUSER $UID\n\n# -XX:+ExitOnOutOfMemoryError : an OutOfMemoryError will often leave the JVM in an inconsistent state. Terminating the JVM will allow it to be restarted by an external process manager\n# -XX:+HeapDumpOnOutOfMemoryError : get a heap dump when the app crashes\n# -XX:-OmitStackTraceInFastThrow : avoid missing stacktraces cf. https://plumbr.io/blog/java/on-a-quest-for-missing-stacktraces\nCMD /usr/local/bin/java $JAVA_OPTS \\\n     -XX:+ExitOnOutOfMemoryError -XX:+HeapDumpOnOutOfMemoryError -XX:-OmitStackTraceInFastThrow \\\n     -Xms2g -Xmx4g \\\n     -jar /hesperides.jar\n"
}