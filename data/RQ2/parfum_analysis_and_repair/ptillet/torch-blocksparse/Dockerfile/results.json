{
  "startTime": 1674248571163,
  "endTime": 1674248571642,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 64
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM pytorch/pytorch:1.4-cuda10.1-cudnn7-runtime\nLABEL maintainer=\"Alexandr Notchenko <a.notchenko@skoltech.ru>\"\nUSER root\n\n# installing full CUDA toolkit\nRUN apt update && apt install --no-install-recommends -y build-essential g++ llvm-8-dev git cmake wget && rm -rf /var/lib/apt/lists/*;\nRUN pip install --no-cache-dir --upgrade pip\n\nRUN conda install -y -c conda-forge cudatoolkit-dev\n# setting environment variables\nENV CUDA_HOME \"/opt/conda/pkgs/cuda-toolkit\"\nENV CUDA_TOOLKIT_ROOT_DIR $CUDA_HOME\nENV LIBRARY_PATH \"$CUDA_HOME/lib64:$LIBRARY_PATH\"\nENV LD_LIBRARY_PATH \"$CUDA_HOME/lib64:$CUDA_HOME/extras/CUPTI/lib64:$LD_LIBRARY_PATH\"\nENV CFLAGS \"-I$CUDA_HOME/include $CFLAGS\"\n# installing triton\nWORKDIR /workspace\nRUN pip install --no-cache-dir -e \"git+https://github.com/ptillet/triton.git#egg=triton&subdirectory=python\"\n# installing torch-blocksparse\nRUN git clone https://github.com/ptillet/torch-blocksparse.git\nWORKDIR /workspace/torch-blocksparse\nRUN python setup.py develop\nWORKDIR /workspace\n# Adding paths to PYTHONPATH\nENV PYTHONPATH \"${PYTHONPATH}:/workspace/src/triton/python:/workspace/torch-blocksparse\"\n\nENTRYPOINT [\"/bin/bash\"]\n"
}