{
  "startTime": 1674255918772,
  "endTime": 1674255920420,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 7,
        "columnEnd": 84
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 7,
        "columnEnd": 89
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 7,
        "columnEnd": 18
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 65
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# since nginx image is bigger (143 lines), we're starting with it and adding node to it.\n# Use an official nginx image\n#  from https://github.com/nginxinc/docker-nginx/blob/1d2e2ccae2f6e478f628f4091d8a5c36a122a157/mainline/alpine/Dockerfile\nFROM nginx:1.17-alpine\n\n\n# \"FROM node:9.3-alpine\"\n#   from https://github.com/nodejs/docker-node/blob/a7e88f1dd2102689180f485c51133212f45fa064/9/alpine/Dockerfile\n# --\n\nENV NODE_VERSION 8.11.1\nENV SSH_PRIVATE_KEY ./.ssh/id_rsa\nENV API_DB_HOST \"pellefant.db.elephantsql.com\"\nENV API_DB_PORT 5432\nENV API_DB_USERNAME \"skmsmrzz\"\nENV API_DB_PASSWORD \"Hsm9XMc1Jlp-_jflt9whZ-1PYdeETNQC\"\nENV API_DB_NAME \"skmsmrzz\"\nENV GIT_PROVIDER github.com\nENV GIT_BRANCH master\nENV GIT_REPO git@github.com:vip-git/react-ssr-advanced-seed.git\nENV CHOKIDAR_USEPOLLING 1\n\nRUN addgroup -g 1000 node \\\n    && adduser -u 1000 -G node -s /bin/sh -D node \\\n    && apk add --no-cache \\\n        libstdc++ \\\n    && apk add --no-cache --virtual .build-deps \\\n        binutils-gold \\\n        curl \\\n        g++ \\\n        gcc \\\n        gnupg \\\n        libgcc \\\n        linux-headers \\\n        make \\\n        python \\\n  # gpg keys listed at https://github.com/nodejs/node#release-team \\\n  && for key in \\\n    94AE36675C464D64BAFA68DD7434390BDBE9B9C5 \\\n    FD3A5288F042B6850C66B31F09FE44734EB7990E \\\n    71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 \\\n    DD8F2338BAE7501E3DD5AC78C273792F7D83545D \\\n    C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8 \\\n    B9AE9905FFD7803F25714661B63B535A4C206CA9 \\\n    56730D5401028683275BD23C23EFEFE93C4CFFFE \\\n    77984A986EBC2AA786BC0F66B01FBB92821C587A; \\\n  do \\\n    gpg --batch --keyserver pgp.mit.edu --recv-keys \"$key\" || \\\n    gpg --batch --keyserver keyserver.pgp.com --recv-keys \"$key\" || \\\n    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\"; \\\n  done \\\n    && curl -f -SLO \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION.tar.xz\" \\\n    && curl -f -SLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\" \\\n    && gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc \\\n    && grep \" node-v$NODE_VERSION.tar.xz\\$\" SHASUMS256.txt | sha256sum -c - \\\n    && tar -xf \"node-v$NODE_VERSION.tar.xz\" \\\n    && cd \"node-v$NODE_VERSION\" \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n    && make -j$(getconf _NPROCESSORS_ONLN) \\\n    && make install \\\n    && apk del .build-deps \\\n    && apk add --no-cache bash git openssh \\\n    && cd .. \\\n    && rm -Rf \"node-v$NODE_VERSION\" \\\n    && rm \"node-v$NODE_VERSION.tar.xz\" SHASUMS256.txt.asc SHASUMS256.txt\n\n# Installs latest Chromium (64) package.\nRUN apk update && apk upgrade && \\\n    echo @edge http://nl.alpinelinux.org/alpine/edge/community >> /etc/apk/repositories && \\\n    echo @edge http://nl.alpinelinux.org/alpine/edge/main >> /etc/apk/repositories && \\\n    apk add --no-cache \\\n      chromium@edge \\\n      nss@edge\n\n# We're not using it's command.\n# CMD [ \"node\" ]\n\n# --\n# [end] node:9.3-alpine\n\n\n# From now on we have both nginx and node (+ git) available\n\n# Create known_hosts\n# RUN touch /root/.ssh/known_hosts\n\n# Add gitlab key\n# RUN ssh-keyscan gitlab.com >> /root/.ssh/known_hosts\n\n# And we end our Dockerfile with nginx Dockerfile last instructions\nCOPY nginx/default.conf /etc/nginx/conf.d/default.conf\nCOPY ./run.sh /run.sh\nRUN [\"chmod\", \"+x\", \"/run.sh\"]\n\nEXPOSE 80\nVOLUME /root/.ssh/\n\nSTOPSIGNAL SIGTERM\n\nWORKDIR /\n\nCMD /bin/sh ./run.sh\n"
}