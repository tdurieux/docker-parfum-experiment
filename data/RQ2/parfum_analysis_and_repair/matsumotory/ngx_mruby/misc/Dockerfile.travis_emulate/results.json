{
  "startTime": 1674249243097,
  "endTime": 1674249244431,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 74
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 74
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 74
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 98
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:bionic\n## emulates Travis.ci environment\n# Usage:\n#   build:\n#     docker build -f misc/Dockerfile.travis_emulate -t ngx_mruby:branch_name .\n#   run:\n#     docker run -it ngx_mruby:branch_name\n#       or,\n#     docker run -it -v `pwd`:/ngx_mruby ngx_mruby:branch_name\n\nRUN echo \"deb http://dk.archive.ubuntu.com/ubuntu/ xenial main\" >> /etc/apt/sources.list && \\\n    echo \"deb http://dk.archive.ubuntu.com/ubuntu/ xenial universe\" >> /etc/apt/sources.list\nRUN apt-get update\nRUN apt-get install --no-install-recommends -y bash-completion apt-file software-properties-common && apt-file update && rm -rf /var/lib/apt/lists/*;\nRUN add-apt-repository --yes ppa:ubuntu-toolchain-r/test && apt-get update\nRUN apt-get install --no-install-recommends -y \\\n  build-essential wget libpcre3-dev psmisc \\\n  rake bison git gperf zlib1g-dev g++-4.9 libstdc++-4.9-dev \\\n  vim tmux curl && rm -rf /var/lib/apt/lists/*;\n\nENV CXX \"g++-4.9\"\nENV CC \"gcc-4.9\"\nENV LD \"gcc-4.9\"\n\nENV OPENSSL_SRC_VERSION \"1.1.1i\"\n\nRUN curl -sfL https://www.openssl.org/source/openssl-${OPENSSL_SRC_VERSION}.tar.gz -o openssl-${OPENSSL_SRC_VERSION}.tar.gz && \\\n  mkdir openssl-${OPENSSL_SRC_VERSION} && tar -xzf openssl-${OPENSSL_SRC_VERSION}.tar.gz -C openssl-${OPENSSL_SRC_VERSION} --strip-components 1 && \\\n  rm openssl-${OPENSSL_SRC_VERSION}.tar.gz && \\\n  cd openssl-${OPENSSL_SRC_VERSION} && \\\n  ./config --prefix=/usr/local --shared zlib -fPIC >> /dev/null 2>&1 && \\\n  make && \\\n  make install && \\\n  ldconfig /usr/local/lib\n\n## Add or -v `pwd`:/ngx_mruby\nADD . /ngx_mruby\n\nWORKDIR /ngx_mruby\nCMD [\"/bin/bash\"]\n\n"
}