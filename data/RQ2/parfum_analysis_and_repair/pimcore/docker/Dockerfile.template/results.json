{
  "startTime": 1674220512035,
  "endTime": 1674220513003,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 8,
        "columnEnd": 20
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 8,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 35
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 8,
        "columnEnd": 78
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 46
      }
    }
  ],
  "repairedDockerfile": "#%%INFO_HEADER%%\nFROM php:%%PHP_TAG%%-%%IMAGE_VARIANT%%-%%DISTRIBUTION%%\n\nLABEL maintainer=\"dominik@pfaffenbauer.at\"\n\nRUN set -eux; \\\n    DPKG_ARCH=\"$(dpkg --print-architecture)\"; \\\n    apt-get update; \\\n    apt-get install --no-install-recommends -y lsb-release; \\\n    echo \"deb http://deb.debian.org/debian $(lsb_release -sc)-backports main\" > /etc/apt/sources.list.d/backports.list; \\\n    apt-get update; \\\n    apt-get install -y --no-install-recommends \\\n        autoconf automake libtool nasm make pkg-config libz-dev build-essential openssl g++ \\\n        zlib1g-dev libicu-dev libbz2-dev zopfli libc-client-dev default-jre \\\n        libkrb5-dev libxml2-dev libxslt1.1 libxslt1-dev locales locales-all \\\n        ffmpeg html2text ghostscript libreoffice pngcrush jpegoptim exiftool poppler-utils git wget \\\n        libx11-dev python3-pip opencv-data facedetect webp graphviz cmake ninja-build unzip cron \\\n        liblcms2-dev liblqr-1-0-dev libjpeg-turbo-progs libopenjp2-7-dev libtiff-dev \\\n        libfontconfig1-dev libfftw3-dev libltdl-dev liblzma-dev libopenexr-dev \\\n        libwmf-dev libdjvulibre-dev libpango1.0-dev libxext-dev libxt-dev librsvg2-dev libzip-dev \\\n        libpng-dev libfreetype6-dev libjpeg-dev libxpm-dev libwebp-dev libjpeg62-turbo-dev \\\n        xfonts-75dpi xfonts-base libjpeg62-turbo \\\n        libonig-dev optipng pngquant inkscape; \\\n\n    ##<version>##\n    ##</version>##\n    docker-php-ext-configure pcntl --enable-pcntl; \\\n    docker-php-ext-install pcntl intl mbstring mysqli bcmath bz2 soap xsl pdo pdo_mysql fileinfo exif zip opcache sockets; \\\n\n    wget https://imagemagick.org/archive/ImageMagick.tar.gz; \\\n        tar -xvf ImageMagick.tar.gz; rm ImageMagick.tar.gz \\\n        cd ImageMagick-7.*; \\\n        ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"; \\\n        make --jobs=$(nproc); \\\n        make install; \\\n        ldconfig /usr/local/lib; \\\n        cd ..; \\\n        rm -rf ImageMagick*; \\\n\n    ##<version>##\n    ##</version>##\n    pecl install apcu; \\\n    pecl install redis; \\\n    docker-php-ext-enable redis imagick apcu; \\\n    docker-php-ext-configure imap --with-kerberos --with-imap-ssl; \\\n    docker-php-ext-install imap; \\\n    docker-php-ext-enable imap; \\\n\n    cd /tmp; \\\n\n    wget -O wkhtmltox.deb https://github.com/wkhtmltopdf/packaging/releases/download/0.12.6-1/wkhtmltox_0.12.6-1.buster_${DPKG_ARCH}.deb; \\\n        dpkg -i wkhtmltox.deb; \\\n        rm wkhtmltox.deb; \\\n\n    apt-get autoremove -y; \\\n        apt-get remove -y autoconf automake libtool nasm make cmake ninja-build pkg-config libz-dev build-essential g++; \\\n        apt-get clean; rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* /usr/share/doc/* ~/.composer\n\nRUN echo \"upload_max_filesize = 100M\" >> /usr/local/etc/php/conf.d/20-pimcore.ini; \\\n    echo \"memory_limit = 256M\" >> /usr/local/etc/php/conf.d/20-pimcore.ini; \\\n    echo \"post_max_size = 100M\" >> /usr/local/etc/php/conf.d/20-pimcore.ini\n\n##<version>##\n##</version>##\n\n\n##<debug>##\n##</debug>##\n\n##<env>##\n##</env>##\n\n##<autogenerated>##\n##</autogenerated>##\n\n##<autogenerated>##\n##</autogenerated>##\n"
}