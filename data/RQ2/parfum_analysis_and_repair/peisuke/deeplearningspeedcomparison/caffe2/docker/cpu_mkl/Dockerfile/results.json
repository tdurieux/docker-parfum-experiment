{
  "startTime": 1674216689694,
  "endTime": 1674216690789,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 2,
        "columnEnd": 99
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 30,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 10
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 2,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 22,
        "columnEnd": 98
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 22,
        "columnEnd": 98
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04\n\nRUN apt-get update -y && \\\n    apt-get install -y --no-install-recommends \\\n    build-essential \\\n    cmake \\\n    git \\\n    libgoogle-glog-dev \\\n    libprotobuf-dev \\\n    protobuf-compiler \\\n    libgflags-dev \\\n    python3-dev \\\n    python3-pip \\\n    libgtest-dev \\\n    libiomp-dev \\\n    libleveldb-dev \\\n    liblmdb-dev \\\n    libopenmpi-dev \\\n    libsnappy-dev \\\n    openmpi-bin \\\n    openmpi-doc \\\n    python3-pydot \\\n    python3-setuptools \\\n    python3-wheel \\\n    python3-tk \\\n    libgtk2.0-0 \\\n    libsm6 && \\ \n    rm -rf /var/lib/apt/lists/*\n\n\nRUN pip3 install --no-cache-dir \\\n    numpy \\\n    protobuf \\\n    flask \\\n    graphviz \\\n    hypothesis \\\n    matplotlib \\\n    pydot \\\n    python-nvd3 \\\n    pyyaml \\\n    requests \\\n    scikit-image \\\n    scipy \\\n    setuptools \\\n    tornado \\\n    future\n\nRUN git clone https://github.com/opencv/opencv.git && \\\n    mkdir opencv/build && \\\n    cd opencv/build && \\\n    cmake -D CMAKE_BUILD_TYPE=RELEASE \\\n    -D BUILD_EXAMPLES=OFF \\\n    -D BUILD_opencv_python2=OFF \\\n    -D BUILD_opencv_python3=ON \\\n    -D WITH_FFMPEG=OFF \\\n    -D WITH_CUDA=OFF \\\n    -D WITH_GTK=ON \\\n    -D WITH_VTK=OFF \\\n    -D INSTALL_TESTS=OFF \\\n    -D BUILD_EXAMPLES=OFF \\\n    .. && make all -j4 && make install && rm -rf opencv\n\nRUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends -y install gcc g++ gfortran wget cpio && \\\n  cd /tmp && \\\n  wget -q https://registrationcenter-download.intel.com/akdlm/irc_nas/tec/12070/l_mkl_2018.0.128.tgz && \\\n  tar -xzf l_mkl_2018.0.128.tgz && \\\n  cd l_mkl_2018.0.128 && \\\n  sed -i 's/ACCEPT_EULA=decline/ACCEPT_EULA=accept/g' silent.cfg && \\\n  sed -i 's/ARCH_SELECTED=ALL/ARCH_SELECTED=INTEL64/g' silent.cfg && \\\n  sed -i 's/COMPONENTS=DEFAULTS/COMPONENTS=;intel-comp-l-all-vars__noarch;intel-comp-nomcu-vars__noarch;intel-openmp__x86_64;intel-tbb-libs__x86_64;intel-mkl-common__noarch;intel-mkl-installer-license__noarch;intel-mkl-core__x86_64;intel-mkl-core-rt__x86_64;intel-mkl-doc__noarch;intel-mkl-doc-ps__noarch;intel-mkl-gnu__x86_64;intel-mkl-gnu-rt__x86_64;intel-mkl-common-ps__noarch;intel-mkl-core-ps__x86_64;intel-mkl-common-c__noarch;intel-mkl-core-c__x86_64;intel-mkl-common-c-ps__noarch;intel-mkl-tbb__x86_64;intel-mkl-tbb-rt__x86_64;intel-mkl-gnu-c__x86_64;intel-mkl-common-f__noarch;intel-mkl-core-f__x86_64;intel-mkl-gnu-f-rt__x86_64;intel-mkl-gnu-f__x86_64;intel-mkl-f95-common__noarch;intel-mkl-f__x86_64;intel-mkl-psxe__noarch;intel-psxe-common__noarch;intel-psxe-common-doc__noarch;intel-compxe-pset/g' silent.cfg && \\\n  ./install.sh -s silent.cfg && \\\n  cd .. && rm -rf * && \\\n  rm -rf /opt/intel/.*.log /opt/intel/compilers_and_libraries_2018.0.128/licensing && \\\n  echo \"/opt/intel/mkl/lib/intel64\" >> /etc/ld.so.conf.d/intel.conf && \\\n  ldconfig && \\\n  echo \"source /opt/intel/mkl/bin/mklvars.sh intel64\" >> /etc/bash.bashrc && rm l_mkl_2018.0.128.tgz && rm -rf /var/lib/apt/lists/*;\n\nRUN git clone --recursive https://github.com/caffe2/caffe2.git && cd caffe2 && \\\n    mkdir build && cd build && \\\n    cmake -DCMAKE_BUILD_TYPE=Release -DUSE_CUDA=OFF -DBLAS=MKL .. && \\\n    make -j\"$(nproc)\" && make install\n\nENV PYTHONPATH $PYTHONPATH:/caffe2/build\n"
}