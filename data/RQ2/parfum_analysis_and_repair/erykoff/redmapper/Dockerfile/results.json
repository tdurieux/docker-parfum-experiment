{
  "startTime": 1674249772682,
  "endTime": 1674249773716,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 18,
        "columnEnd": 70
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 8,
        "columnEnd": 120
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 81
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 81
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 41
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 65
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:18.04\n\nENV LANG=C.UTF-8 LC_ALL=C.UTF-8\nENV PATH /opt/conda/bin:$PATH\nARG TAG\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y autoconf gcc gfortran g++ make wget gsl-bin git libgsl-dev && apt-get clean all && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get install --no-install-recommends -y curl grep sed dpkg && rm -rf /var/lib/apt/lists/*;\nRUN TINI_VERSION=$( curl -f https://github.com/krallin/tini/releases/latest | grep -o \"/v.*\\\"\" | sed 's:^..\\(.*\\).$:\\1:') && \\\n        curl -f -L \"https://github.com/krallin/tini/releases/download/v${TINI_VERSION}/tini_${TINI_VERSION}.deb\" > tini.deb\nRUN dpkg -i tini.deb\nRUN rm tini.deb\nRUN apt-get clean\n\nRUN /usr/sbin/groupadd -g 1000 user && \\\n       /usr/sbin/useradd -u 1000 -g 1000 -d /opt/redmapper redmapper && \\\n\tmkdir /opt/redmapper && chown redmapper.user /opt/redmapper && \\\n\tchown redmapper.user /opt\nUSER redmapper\n\nRUN wget --quiet https://github.com/conda-forge/miniforge/releases/download/4.9.2-5/Miniforge3-Linux-x86_64.sh -O ~/miniforge.sh && \\\n        /bin/bash ~/miniforge.sh -b -p /opt/conda && \\\n\trm ~/miniforge.sh\nRUN . /opt/conda/etc/profile.d/conda.sh && conda create --yes --name redmapper-env\nRUN\techo \". /opt/conda/etc/profile.d/conda.sh\" >> ~/.bashrc && \\\n        echo \"conda activate redmapper-env\" >> ~/.bashrc\nRUN echo \". /opt/conda/etc/profile.d/conda.sh\" >> ~/startup.sh && \\\n        echo \"conda activate redmapper-env\" >> ~/startup.sh\n\nRUN . /opt/conda/etc/profile.d/conda.sh && conda activate redmapper-env && \\\n       conda install --yes python=3.8 numpy scipy astropy matplotlib pyyaml fitsio esutil healpy healsparse && \\\n       conda clean -af --yes\n\nLABEL redmapper-tag=\"${TAG}\"\n\nRUN . /opt/conda/etc/profile.d/conda.sh && conda activate redmapper-env && cd ~/ && \\\n       git clone https://github.com/erykoff/redmapper --branch=${TAG} && cd ~/redmapper && \\\n       cd ~/redmapper && python setup.py install\n\nENTRYPOINT [ \"/usr/bin/tini\", \"--\" ]\nCMD [ \"/bin/bash\", \"-lc\" ]\n"
}