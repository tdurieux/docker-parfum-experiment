{
  "startTime": 1674217433566,
  "endTime": 1674217434844,
  "originalSmells": [
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 56
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM quay.io/sclorg/s2i-core-c9s:c9s\n\n# This image provides a Node.JS environment you can use to run your Node.JS\n# applications.\n\nEXPOSE 8080\n\n# Add $HOME/node_modules/.bin to the $PATH, allowing user to make npm scripts\n# available on the CLI without using npm's --global installation mode\n# This image will be initialized with \"npm run $NPM_RUN\"\n# See https://docs.npmjs.com/misc/scripts, and your repo's package.json\n# file for possible values of NPM_RUN\n# Description\n# Environment:\n# * $NPM_RUN - Select an alternate / custom runtime mode, defined in your package.json files' scripts section (default: npm run \"start\").\n# Expose ports:\n# * 8080 - Unprivileged port used by nodejs application\n\nENV NODEJS_VERSION=16 \\\n    NPM_RUN=start \\\n    NAME=nodejs \\\n    NPM_CONFIG_PREFIX=$HOME/.npm-global \\\n    PATH=$HOME/node_modules/.bin/:$HOME/.npm-global/bin/:$PATH \\\n    CNB_STACK_ID=com.redhat.stacks.c9s-nodejs-16 \\\n    CNB_USER_ID=1001 \\\n    CNB_GROUP_ID=0\n\nENV SUMMARY=\"Platform for building and running Node.js $NODEJS_VERSION applications\" \\\nDESCRIPTION=\"Node.js $NODEJS_VERSION available as container is a base platform for \\\nbuilding and running various Node.js $NODEJS_VERSION applications and frameworks. \\\nNode.js is a platform built on Chrome's JavaScript runtime for easily building \\\nfast, scalable network applications. Node.js uses an event-driven, non-blocking I/O model \\\nthat makes it lightweight and efficient, perfect for data-intensive real-time applications \\\nthat run across distributed devices.\"\n\nLABEL summary=\"$SUMMARY\" \\\n      description=\"$DESCRIPTION\" \\\n      io.k8s.description=\"$DESCRIPTION\" \\\n      io.k8s.display-name=\"Node.js $NODEJS_VERSION\" \\\n      io.openshift.expose-services=\"8080:http\" \\\n      io.openshift.tags=\"builder,$NAME,${NAME}${NODEJS_VERSION}\" \\\n      io.openshift.s2i.scripts-url=\"image:///usr/libexec/s2i\" \\\n      io.s2i.scripts-url=\"image:///usr/libexec/s2i\" \\\n      io.buildpacks.stack.id=\"com.redhat.stacks.c9s-nodejs-16\" \\\n      com.redhat.dev-mode=\"DEV_MODE:false\" \\\n      com.redhat.deployments-dir=\"${APP_ROOT}/src\" \\\n      com.redhat.dev-mode.port=\"DEBUG_PORT:5858\" \\\n      com.redhat.component=\"${NAME}-${NODEJS_VERSION}-container\" \\\n      name=\"sclorg/$NAME-$NODEJS_VERSION\" \\\n      version=\"1\" \\\n      com.redhat.license_terms=\"https://www.redhat.com/en/about/red-hat-end-user-license-agreements#UBI\" \\\n      maintainer=\"SoftwareCollections.org <sclorg@redhat.com>\" \\\n      help=\"For more information visit https://github.com/sclorg/s2i-nodejs-container\" \\\n      usage=\"s2i build <SOURCE-REPOSITORY> quay.io/sclorg/$NAME-$NODEJS_VERSION-c9s:latest <APP-NAME>\"\n\n# Package libatomic_ops was removed\nRUN MODULE_DEPS=\"make gcc gcc-c++ git openssl-devel\" && \\\n    INSTALL_PKGS=\"$MODULE_DEPS nodejs npm nodejs-nodemon nss_wrapper\" && \\\n    ln -s /usr/lib/node_modules/nodemon/bin/nodemon.js /usr/bin/nodemon && \\\n    yum install -y --setopt=tsflags=nodocs $INSTALL_PKGS && \\\n    rpm -V $INSTALL_PKGS && \\\n    yum -y clean all --enablerepo='*' && rm -rf /var/cache/yum\n\n# Copy the S2I scripts from the specific language image to $STI_SCRIPTS_PATH\nCOPY ./s2i/bin/ $STI_SCRIPTS_PATH\n\n# Copy extra files to the image.\nCOPY ./root/ /\n\n# Drop the root user and make the content of /opt/app-root owned by user 1001\nRUN chown -R 1001:0 ${APP_ROOT} && chmod -R ug+rwx ${APP_ROOT} && \\\n    rpm-file-permissions\n\nUSER 1001\n\n# Set the default CMD to print the usage of the language image\nCMD $STI_SCRIPTS_PATH/usage\n"
}