{
  "startTime": 1674249404950,
  "endTime": 1674249405488,
  "originalSmells": [
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 56
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM quay.io/sclorg/s2i-base-c9s:c9s\n\nEXPOSE 8080\nEXPOSE 8443\n\nENV NAME=nginx \\\n    NGINX_VERSION=1.20 \\\n    NGINX_SHORT_VER=120 \\\n    VERSION=0\n\nENV SUMMARY=\"Platform for running nginx $NGINX_VERSION or building nginx-based application\" \\\n    DESCRIPTION=\"Nginx is a web server and a reverse proxy server for HTTP, SMTP, POP3 and IMAP \\\nprotocols, with a strong focus on high concurrency, performance and low memory usage. The container \\\nimage provides a containerized packaging of the nginx $NGINX_VERSION daemon. The image can be used \\\nas a base image for other applications based on nginx $NGINX_VERSION web server. \\\nNginx server image can be extended using source-to-image tool.\"\n\nLABEL summary=\"${SUMMARY}\" \\\n      description=\"${DESCRIPTION}\" \\\n      io.k8s.description=\"${DESCRIPTION}\" \\\n      io.k8s.display-name=\"Nginx ${NGINX_VERSION}\" \\\n      io.openshift.expose-services=\"8080:http\" \\\n      io.openshift.expose-services=\"8443:https\" \\\n      io.openshift.tags=\"builder,${NAME},${NAME}-${NGINX_SHORT_VER}\" \\\n      com.redhat.component=\"${NAME}-${NGINX_SHORT_VER}-container\" \\\n      name=\"sclorg/${NAME}-${NGINX_SHORT_VER}-c9s\" \\\n      version=\"1\" \\\n      com.redhat.license_terms=\"https://www.redhat.com/en/about/red-hat-end-user-license-agreements#UBI\" \\\n      maintainer=\"SoftwareCollections.org <sclorg@redhat.com>\" \\\n      help=\"For more information visit https://github.com/sclorg/${NAME}-container\" \\\n      usage=\"s2i build <SOURCE-REPOSITORY> quay.io/sclorg/${NAME}-${NGINX_SHORT_VER}-c9s:latest <APP-NAME>\"\n\nENV NGINX_CONFIGURATION_PATH=${APP_ROOT}/etc/nginx.d \\\n    NGINX_CONF_PATH=/etc/nginx/nginx.conf \\\n    NGINX_DEFAULT_CONF_PATH=${APP_ROOT}/etc/nginx.default.d \\\n    NGINX_CONTAINER_SCRIPTS_PATH=/usr/share/container-scripts/nginx \\\n    NGINX_APP_ROOT=${APP_ROOT} \\\n    NGINX_LOG_PATH=/var/log/nginx \\\n    NGINX_PERL_MODULE_PATH=${APP_ROOT}/etc/perl\n\n# Modules does not exist\n# RUN yum -y module enable nginx:$NGINX_VERSION && \\\nRUN INSTALL_PKGS=\"nss_wrapper bind-utils gettext hostname nginx nginx-mod-stream nginx-mod-http-perl\" && \\\n    yum install -y --setopt=tsflags=nodocs $INSTALL_PKGS && \\\n    rpm -V $INSTALL_PKGS && \\\n    yum -y clean all --enablerepo='*' && rm -rf /var/cache/yum\n\n# Copy the S2I scripts from the specific language image to $STI_SCRIPTS_PATH\nCOPY ./s2i/bin/ $STI_SCRIPTS_PATH\n\n# Copy extra files to the image.\nCOPY ./root/ /\n\n# In order to drop the root user, we have to make some directories world\n# writable as OpenShift default security model is to run the container under\n# random UID.\nRUN sed -i -f ${NGINX_APP_ROOT}/nginxconf-fed.sed ${NGINX_CONF_PATH} && \\\n    chmod a+rwx ${NGINX_CONF_PATH} && \\\n    mkdir -p ${NGINX_APP_ROOT}/etc/nginx.d/ && \\\n    mkdir -p ${NGINX_APP_ROOT}/etc/nginx.default.d/ && \\\n    mkdir -p ${NGINX_APP_ROOT}/src/nginx-start/ && \\\n    mkdir -p ${NGINX_CONTAINER_SCRIPTS_PATH}/nginx-start && \\\n    mkdir -p ${NGINX_LOG_PATH} && \\\n    mkdir -p ${NGINX_PERL_MODULE_PATH} && \\\n    chmod -R a+rwx ${NGINX_APP_ROOT}/etc && \\\n    chmod -R a+rwx /var/lib/nginx && \\\n    chmod -R a+rwx ${NGINX_CONTAINER_SCRIPTS_PATH}/nginx-start && \\\n    chown -R 1001:0 ${NGINX_APP_ROOT} && \\\n    chown -R 1001:0 /var/lib/nginx && \\\n    chown -R 1001:0 ${NGINX_CONTAINER_SCRIPTS_PATH}/nginx-start && \\\n    chmod -R a+rwx ${NGINX_LOG_PATH} && \\\n    chown -R 1001:0 ${NGINX_LOG_PATH} && \\\n    # FIXME: Not sure if this is safe to do, just a hack to make the image work\n    chmod -R a+rwx /var/run && \\\n    chown -R 1001:0 /var/run && \\\n    rpm-file-permissions\n\nUSER 1001\n\n# Not using VOLUME statement since it's not working in OpenShift Online:\n# https://github.com/sclorg/httpd-container/issues/30\n# VOLUME [\"/usr/share/nginx/html\"]\n# VOLUME [\"/var/log/nginx/\"]\n\nCMD $STI_SCRIPTS_PATH/usage\n"
}