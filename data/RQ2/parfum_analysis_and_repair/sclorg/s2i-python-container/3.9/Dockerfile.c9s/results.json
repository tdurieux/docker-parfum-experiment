{
  "startTime": 1674254392674,
  "endTime": 1674254393334,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 74,
        "lineEnd": 74,
        "columnStart": 0,
        "columnEnd": 45
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# This image provides a Python 3.9 environment you can use to run your Python\n# applications.\nFROM quay.io/sclorg/s2i-base-c9s:c9s\n\nEXPOSE 8080\n\nENV PYTHON_VERSION=3.9 \\\n    PATH=$HOME/.local/bin/:$PATH \\\n    PYTHONUNBUFFERED=1 \\\n    PYTHONIOENCODING=UTF-8 \\\n    LC_ALL=en_US.UTF-8 \\\n    LANG=en_US.UTF-8 \\\n    PIP_NO_CACHE_DIR=off\n\nENV NAME=python3 \\\n    VERSION=0 \\\n    ARCH=x86_64\n\nENV SUMMARY=\"Platform for building and running Python $PYTHON_VERSION applications\" \\\n    DESCRIPTION=\"Python $PYTHON_VERSION available as container is a base platform for \\\nbuilding and running various Python $PYTHON_VERSION applications and frameworks. \\\nPython is an easy to learn, powerful programming language. It has efficient high-level \\\ndata structures and a simple but effective approach to object-oriented programming. \\\nPython's elegant syntax and dynamic typing, together with its interpreted nature, \\\nmake it an ideal language for scripting and rapid application development in many areas \\\non most platforms.\"\n\nLABEL summary=\"$SUMMARY\" \\\n      description=\"$DESCRIPTION\" \\\n      io.k8s.description=\"$DESCRIPTION\" \\\n      io.k8s.display-name=\"Python 3.9\" \\\n      io.openshift.expose-services=\"8080:http\" \\\n      io.openshift.tags=\"builder,python,python39,python-39,rh-python39\" \\\n      com.redhat.component=\"$NAME\" \\\n      name=\"sclorg/python-39-c9s\" \\\n      version=\"$VERSION\" \\\n      usage=\"s2i build https://github.com/sclorg/s2i-python-container.git --context-dir=3.9/test/setup-test-app/ $FGC/$NAME python-sample-app\" \\\n      maintainer=\"SoftwareCollections.org <sclorg@redhat.com>\"\n\nRUN INSTALL_PKGS=\"python3 python3-devel python3-setuptools python3-pip nss_wrapper \\\n        httpd httpd-devel mod_ssl mod_auth_gssapi mod_ldap \\\n        mod_session atlas-devel gcc-gfortran libffi-devel libtool-ltdl enchant\" && \\\n    yum -y --setopt=tsflags=nodocs install $INSTALL_PKGS && \\\n    rpm -V $INSTALL_PKGS && \\\n    yum -y clean all --enablerepo='*'\n\n# Copy the S2I scripts from the specific language image to $STI_SCRIPTS_PATH.\nCOPY 3.9/s2i/bin/ $STI_SCRIPTS_PATH\n\n# Copy extra files to the image.\nCOPY 3.9/root/ /\n\n# Python 3 only\n# Yes, the directory below is already copied by the previous command.\n# The problem here is that the wheels directory is copied as a symlink.\n# Only if you specify symlink directly as a source, COPY copies all the\n# files from the symlink destination.\nCOPY 3.9/root/opt/wheels /opt/wheels\n# - Create a Python virtual environment for use by any application to avoid\n#   potential conflicts with Python packages preinstalled in the main Python\n#   installation.\n# - In order to drop the root user, we have to make some directories world\n#   writable as OpenShift default security model is to run the container\n#   under random UID.\nRUN python3.9 -m venv ${APP_ROOT} && \\\n# Python 3 only code, Python 2 installs pip from PyPI in the assemble script. \\\n# We have to upgrade pip to a newer verison because: \\\n# * pip < 9 does not support different packages' versions for Python 2/3 \\\n# * pip < 19.3 does not support manylinux2014 wheels. Only manylinux2014 (and later) wheels \\\n#   support platforms like ppc64le, aarch64 or armv7 \\\n# We are newly using wheel from one of the latest stable Fedora releases (from RPM python-pip-wheel) \\\n# because it's tested better then whatever version from PyPI and contains useful patches. \\\n# We have to do it here (in the macro) so the permissions are correctly fixed and pip is able \\\n# to reinstall itself in the next build phases in the assemble script if user wants the latest version \\\n${APP_ROOT}/bin/pip install --no-cache-dir /opt/wheels/pip-* && \\\nrm -r /opt/wheels && \\\nchown -R 1001:0 ${APP_ROOT} && \\\nfix-permissions ${APP_ROOT} -P\n\n# For Fedora scl_enable isn't sourced automatically in s2i-core\n# so virtualenv needs to be activated this way\nENV BASH_ENV=\"${APP_ROOT}/bin/activate\" \\\n    ENV=\"${APP_ROOT}/bin/activate\" \\\n    PROMPT_COMMAND=\". ${APP_ROOT}/bin/activate\"\n\nUSER 1001\n\n# Set the default CMD to print the usage of the language image.\nCMD $STI_SCRIPTS_PATH/usage\n"
}