{
  "startTime": 1674252582345,
  "endTime": 1674252583507,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 22,
        "columnEnd": 334
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 22,
        "columnEnd": 334
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 41
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 65
      }
    }
  ],
  "repairedDockerfile": "FROM postgres\nRUN echo \"deb http://deb.debian.org/debian/ unstable main\" > /etc/apt/sources.list.d/unstable.list\nRUN printf 'Package: *\\nPin: release a=unstable\\nPin-Priority: 90\\n' > /etc/apt/preferences.d/limit-unstable\nENV DEBIAN_FRONTEND=noninteractive\nRUN apt-get update && apt-get install --no-install-recommends -y sudo iputils-ping iproute2 jq vim netcat default-libmysqlclient-dev libsqlite3-dev postgresql-client-11 postgresql-server-dev-11 libpq-dev python3-pip bridge-utils wireguard linux-source curl git libssl-dev pkg-config build-essential ipset python3-setuptools python3-wheel dh-autoreconf procps && rm -rf /var/lib/apt/lists/*;\nRUN apt-get install --no-install-recommends -y -t unstable iperf3 && rm -rf /var/lib/apt/lists/*;\nRUN curl https://sh.rustup.rs -sSf | sh -s -- -y\nENV POSTGRES_USER=postgres\nENV POSTGRES_BIN=/usr/lib/postgresql/14/bin/postgres\nENV INITDB_BIN=/usr/lib/postgresql/14/bin/initdb\nRUN PATH=$PATH:$HOME/.cargo/bin cargo install diesel_cli --force\nARG NODES\nENV SPEEDTEST_THROUGHPUT=$SPEEDTEST_THROUGHPUT\nENV SPEEDTEST_DURATION=$SPEEDTEST_DURATION\nENV VERBOSE=$VERBOSE\nENV NODES=$NODES\n# we pull in the git tar instead of the local folder becuase the raw code is much much smaller\n# note that changes have to be checked in to be pulled in and tested! we pull this in near\n# the bottom to maximize caching of earlier containers\nADD rita.tar.gz /\nCMD PATH=$PATH:$HOME/.cargo/bin SPEEDTEST_THROUGHPUT=\"200\" SPEEDTEST_DURATION=\"15\" INITIAL_POLL_INTERVAL=5 BACKOFF_FACTOR=\"1.5\" VERBOSE=1 /althea_rs/integration-tests/rita.sh\n"
}