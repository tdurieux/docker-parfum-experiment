{
  "startTime": 1674250368655,
  "endTime": 1674250369311,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 36,
        "columnEnd": 70
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 76,
        "columnEnd": 105
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 41,
        "columnEnd": 82
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 9,
        "columnEnd": 207
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 9,
        "columnEnd": 207
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 9,
        "columnEnd": 207
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 9,
        "columnEnd": 231
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:trusty\nRUN sudo apt-get -qq update\nRUN sudo apt-get install --no-install-recommends -y curl git wget tar build-essential python-pip libssl-dev libffi-dev python-dev subversion libncurses5-dev zlib1g-dev gawk gcc-multilib flex git-core gettext unzip systemtap-sdt-dev && rm -rf /var/lib/apt/lists/*;\nRUN useradd -s /bin/bash build\nRUN mkdir /home/build; chown -R build /home/build\nRUN sudo pip install --upgrade pip; pip install --no-cache-dir --upgrade setuptools; sudo pip install --no-cache-dir --upgrade ansible\nUSER build\nRUN curl https://sh.rustup.rs -sSf | sh -s -- -y\nRUN /home/build/.cargo/bin/rustup default nightly\nRUN cd /home/build; git clone https://github.com/althea-mesh/althea-firmware\nRUN cd /home/build/althea-firmware; ansible-playbook -e @profiles/devices/n600.yml -e @profiles/management/althea-dev.yml firmware-build.yml; exit 0\nRUN cd home/build/althea-firmware/build; tar -czf staging-mips.tar.gz staging_dir/ && rm staging-mips.tar.gz\n"
}