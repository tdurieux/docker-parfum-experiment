{
  "startTime": 1674249433403,
  "endTime": 1674249434972,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 44,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 13
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 21,
        "columnStart": 22,
        "columnEnd": 8
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 34,
        "lineEnd": 35,
        "columnStart": 22,
        "columnEnd": 18
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.8.13-slim-bullseye\n\nENV TINI_VERSION v0.19.0\nENV USER=\"monitorfish-pipeline\"\nENV VIRTUAL_ENV=/opt/venv\n\n# Add `tini` init\nADD https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini /tini\nRUN chmod +x /tini\n\n# Create non root user\nRUN useradd -m -r ${USER} && \\\n    chown ${USER} /home/${USER}\nWORKDIR /home/${USER}\n\n# Install system dependencies\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    libpq-dev \\\n    build-essential \\\n    alien \\\n    libaio1 \\\n    wget \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Download and install Oracle Instant Client\nRUN wget \\\nhttps://download.oracle.com/otn_software/linux/instantclient/\\\n19800/oracle-instantclient19.8-basic-19.8.0.0.0-1.x86_64.rpm \\\n&& alien --scripts oracle-instantclient19.8-basic-19.8.0.0.0-1.x86_64.rpm \\\n&& dpkg -i oracle-instantclient19.8-basic_19.8.0.0.0-2_amd64.deb \\\n&& rm oracle-instantclient19.8-basic-19.8.0.0.0-1.x86_64.rpm \\\n&& rm oracle-instantclient19.8-basic_19.8.0.0.0-2_amd64.deb\n\n# Install pango\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    pango1.0-tools \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Create and \"activate\" venv by prepending it to PATH then install python dependencies\nENV PATH=\"$VIRTUAL_ENV/bin:$PATH\"\n\n# Install python dependencies\nCOPY datascience/requirements.txt /tmp/requirements.txt\nRUN python3 -m venv $VIRTUAL_ENV && \\\n    pip install --no-cache-dir -U \\\n        pip \\\n        setuptools \\\n        wheel && \\\n    pip install --no-cache-dir -r /tmp/requirements.txt\n\n# Make library importable\nENV PYTHONPATH=/home/${USER}\n\n# Add source\nCOPY datascience/ ./datascience\nRUN pip install --no-cache-dir -e ./datascience\nCOPY backend/src/main/resources/db/migration  ./backend/src/main/resources/db/migration\nRUN mkdir /home/${USER}/.prefect/\n\nRUN chown -R ${USER} .\nUSER ${USER}\nWORKDIR /home/${USER}/datascience\nENTRYPOINT [\"/tini\", \"--\"]\nCMD [\"python\", \"main.py\"]\n"
}