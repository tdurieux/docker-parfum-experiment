{
  "startTime": 1674254805066,
  "endTime": 1674254805919,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 87
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 44
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#######################\n# Step 1: Base target #\n#######################\nFROM python:3.9-slim-bullseye as base\nARG http_proxy\nARG https_proxy\nARG no_proxy\nARG APP\n\nWORKDIR /${APP}\nCOPY requirements.txt .\n\nRUN apt-get update -y; \\\n    apt-get upgrade -y; \\\n    apt-get install --no-install-recommends curl build-essential -y; rm -rf /var/lib/apt/lists/*; \\\n    pip install --no-cache-dir --upgrade pip; \\\n    pip install --no-cache-dir `echo $http_proxy | sed 's/\\(\\S\\S*\\)/--proxy \\1/'` -r requirements.txt; \\\n    apt-get autoremove build-essential -y; \\\n    apt-get purge perl manpages libfakeroot:amd64 gpg-agent dpkg-dev dirmngr -y; \\\n    apt-get autoclean -y\n\nRUN mkdir -p code\\\n             conf/run\\\n             log\\\n             referential_data\\\n             matchID_test/\\\n             upload\n\n################################\n# Step 2: \"production\" target #\n################################\nFROM base as production\nARG APP\nENV BACKEND_PORT ${BACKEND_PORT}\nENV BACKEND_DEBUG False\nENV BACKEND_RELOAD False\nENV APP ${APP}\n\nWORKDIR /${APP}\n\nCOPY code/ code/\nCOPY conf/ conf/\nCOPY referential_data/ referential_data/\n\nVOLUME /${app_path}/projects\nVOLUME /${app_path}/log\nVOLUME /${app_path}/models\nVOLUME /${app_path}/upload\n\nEXPOSE ${BACKEND_PORT}\n\nCMD [\"./code/api.py\"]\n\n################################\n# Step 3: \"development\" target #\n################################\nFROM production as development\nARG APP\nENV BACKEND_PORT ${BACKEND_PORT}\nENV APP ${APP}\nENV BACKEND_DEBUG True\nENV BACKEND_RELOAD True\n\nVOLUME /${APP}/code\nVOLUME /${APP}/conf\nVOLUME /${APP}/projects\nVOLUME /${APP}/referential_data\nVOLUME /${APP}/log\nVOLUME /${APP}/models\nVOLUME /${APP}/upload\n\nEXPOSE ${BACKEND_PORT}\n\nCMD [\"./code/api.py\"]\n\n\n\n"
}