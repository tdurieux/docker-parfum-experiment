{
  "startTime": 1674255437449,
  "endTime": 1674255438268,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 47,
        "columnEnd": 262
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 75,
        "columnEnd": 275
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 75,
        "columnEnd": 275
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 47,
        "columnEnd": 262
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 75,
        "columnEnd": 275
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 75,
        "columnEnd": 298
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:20.04\n\nWORKDIR /usr/src\n\nENV DEBIAN_FRONTEND=noninteractive\n\nRUN apt-get update -y && apt-get upgrade -y && apt-get install --no-install-recommends -y gcc g++ cmake python3 apt-utils wget gnupg qt5-default git autoconf automake libtool zlib1g-dev zlib1g vim unzip python3-pip python3-pytest python3-pytest-cov openmpi-bin openmpi-common bison flex && rm -rf /var/lib/apt/lists/*;\n\nRUN wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key| apt-key add - && apt-get install --no-install-recommends -y libllvm10 llvm-10 llvm-10-dev llvm-10-doc llvm-10-examples llvm-10-runtime clang-10 clang-tools-10 libclang-common-10-dev libclang-10-dev libclang1-10 clang-format-10 clang-tidy-10 && rm -rf /var/lib/apt/lists/*;\n\nRUN ln -s /usr/bin/clang-10 /usr/bin/clang && ln -s /usr/bin/clang++-10 /usr/bin/clang++\n\nRUN mkdir pira\nCOPY resources pira/resources\nCOPY extern pira/extern\nCOPY .gitmodules pira/.gitmodules\nCOPY .git pira/.git\nRUN cd pira && git submodule update --init && cd resources && ./build_submodules.sh $(nproc) --with-mpi=openmpi\nRUN cd pira && sed -i \"1s/.*/#!\\/usr\\/bin\\/env python3/\" ./extern/install/mpiwrap/wrap.py\nCOPY . pira\n"
}