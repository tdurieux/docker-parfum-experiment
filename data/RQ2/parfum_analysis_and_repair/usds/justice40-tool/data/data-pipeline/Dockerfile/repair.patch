diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/usds/justice40-tool/data/data-pipeline/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/usds/justice40-tool/data/data-pipeline/Dockerfile/repaired.Dockerfile
index 6005629..3ff006d 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/usds/justice40-tool/data/data-pipeline/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/usds/justice40-tool/data/data-pipeline/Dockerfile/repaired.Dockerfile
@@ -1,7 +1,7 @@
 FROM ubuntu:20.04
 
 # Install packages
-RUN apt-get update && apt-get install -y \
+RUN apt-get update && apt-get install --no-install-recommends -y \
     build-essential \
     make \
     gcc \
@@ -9,12 +9,12 @@ RUN apt-get update && apt-get install -y \
     unzip \
     wget \
     python3-dev \
-    python3-pip
+    python3-pip && rm -rf /var/lib/apt/lists/*;
 
 # tippeanoe
 ENV TZ=America/Los_Angeles
 RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone
-RUN apt-get install -y software-properties-common libsqlite3-dev zlib1g-dev
+RUN apt-get install --no-install-recommends -y software-properties-common libsqlite3-dev zlib1g-dev && rm -rf /var/lib/apt/lists/*;
 RUN apt-add-repository -y ppa:git-core/ppa
 RUN mkdir -p /tmp/tippecanoe-src && git clone https://github.com/mapbox/tippecanoe.git /tmp/tippecanoe-src
 WORKDIR /tmp/tippecanoe-src
@@ -22,7 +22,7 @@ RUN /bin/sh -c make && make install
 
 ## gdal
 RUN add-apt-repository ppa:ubuntugis/ppa
-RUN apt-get -y install gdal-bin
+RUN apt-get -y --no-install-recommends install gdal-bin && rm -rf /var/lib/apt/lists/*;
 
 # Python package installation using poetry. See:
 # https://stackoverflow.com/questions/53835198/integrating-python-poetry-with-docker
@@ -37,7 +37,7 @@ ENV PYTHONFAULTHANDLER=1 \
 WORKDIR /data-pipeline
 COPY pyproject.toml /data-pipeline/
 
-RUN pip install "poetry==$POETRY_VERSION"
+RUN pip install --no-cache-dir "poetry==$POETRY_VERSION"
 RUN poetry config virtualenvs.create false \
   && poetry config virtualenvs.in-project false \
   && poetry install --no-dev --no-interaction --no-ansi