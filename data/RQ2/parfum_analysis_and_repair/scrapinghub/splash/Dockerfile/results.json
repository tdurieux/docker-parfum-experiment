{
  "startTime": 1674253897151,
  "endTime": 1674253898282,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 166,
        "lineEnd": 166,
        "columnStart": 4,
        "columnEnd": 21
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG QT_MAJOR_VERSION=5\nARG QT_MINOR_VERSION=14\nARG QT_PATCH_VERSION=1\n# docker build has arguments but doesn't have variables\n# here we use arguments as variables\nARG QT_SHORT_VERSION=${QT_MAJOR_VERSION}.${QT_MINOR_VERSION}\nARG QT_FULL_VERSION=${QT_SHORT_VERSION}.${QT_PATCH_VERSION}\n\nARG SPLASH_BUILD_PARALLEL_JOBS=8\n\n# =====================\n\nFROM byrnedo/alpine-curl as qt-downloader\n\nARG QT_SHORT_VERSION\nARG QT_FULL_VERSION\nENV QT_SHORT_VERSION=${QT_SHORT_VERSION}\nENV QT_FULL_VERSION=${QT_FULL_VERSION}\n\nCOPY dockerfiles/splash/download-qt-installer.sh /tmp/download-qt-installer.sh\nRUN /tmp/download-qt-installer.sh /tmp/qt-installer.run\n\n# =====================\n#\n#FROM byrnedo/alpine-curl as qtwebkit-source-downloader\n#COPY dockerfiles/splash/download-qtwebkit-source.sh /tmp/download-qtwebkit-source.sh\n#RUN /tmp/download-qtwebkit-source.sh /tmp/qtwebkit.tar.xz\n\n# =====================\n\nFROM byrnedo/alpine-curl as qtwebkit-downloader\nARG WEBKIT_URL=https://github.com/qtwebkit/qtwebkit/releases/download/qtwebkit-5.212.0-alpha4/qtwebkit-Linux-RHEL_7_6-GCC-Linux-RHEL_7_6-X86_64.7z\nENV WEBKIT_URL=${WEBKIT_URL}\nCOPY dockerfiles/splash/download-qtwebkit.sh /tmp/download-qtwebkit.sh\nRUN /tmp/download-qtwebkit.sh /tmp/qtwebkit.7z\n\n# =====================\n\nFROM byrnedo/alpine-curl as pyqt5-downloader\n\n# need to update URLs here with new version of Qt\nCOPY dockerfiles/splash/download-pyqt5.sh /tmp/download-pyqt5.sh\nRUN /tmp/download-pyqt5.sh /tmp/sip.tar.gz /tmp/pyqt5.tar.gz /tmp/webengine.tar.gz\n\n# =====================\n\nFROM ubuntu:18.04 as qtbase\nENV DEBIAN_FRONTEND noninteractive\n\nCOPY dockerfiles/splash/prepare-install.sh /tmp/prepare-install.sh\nRUN /tmp/prepare-install.sh\n\nCOPY dockerfiles/splash/install-system-deps.sh /tmp/install-system-deps.sh\nRUN /tmp/install-system-deps.sh\n\nCOPY dockerfiles/splash/install-fonts.sh /tmp/install-fonts.sh\nRUN /tmp/install-fonts.sh\n\nCOPY dockerfiles/splash/install-flash.sh /tmp/install-flash.sh\nRUN /tmp/install-flash.sh\n\nCOPY dockerfiles/splash/install-qtwebengine-deps.sh /tmp/install-qtwebengine-deps.sh\nRUN /tmp/install-qtwebengine-deps.sh\n\nCOPY dockerfiles/splash/install-qtwebkit-deps.sh /tmp/install-qtwebkit-deps.sh\nRUN /tmp/install-qtwebkit-deps.sh\n\n# =====================\n\nFROM qtbase as qtbuilder\nENV DEBIAN_FRONTEND noninteractive\n\nCOPY --from=qt-downloader /tmp/qt-installer.run /tmp/\n\nARG DISPLAY\n\nARG QT_MAJOR_VERSION\nARG QT_MINOR_VERSION\nARG QT_PATCH_VERSION\nARG QT_SHORT_VERSION\nARG QT_FULL_VERSION\nENV QT_MAJOR_VERSION=${QT_MAJOR_VERSION}\nENV QT_MINOR_VERSION=${QT_MINOR_VERSION}\nENV QT_PATCH_VERSION=${QT_PATCH_VERSION}\nENV QT_SHORT_VERSION=${QT_SHORT_VERSION}\nENV QT_FULL_VERSION=${QT_FULL_VERSION}\n\nCOPY dockerfiles/splash/qt-installer-noninteractive.qs /tmp/script.qs\nCOPY dockerfiles/splash/run-qt-installer.sh /tmp/run-qt-installer.sh\nRUN /tmp/run-qt-installer.sh /tmp/qt-installer.run /tmp/script.qs\n\nENV PATH=\"/opt/qt-${QT_SHORT_VERSION}/${QT_FULL_VERSION}/gcc_64/bin:${PATH}\"\n\n# install qtwebkit\nCOPY --from=qtwebkit-downloader /tmp/qtwebkit.7z /tmp/\nCOPY dockerfiles/splash/install-qtwebkit.sh /tmp/install-qtwebkit.sh\nRUN /tmp/install-qtwebkit.sh /tmp/qtwebkit.7z\n\n# =====================\n\nFROM qtbuilder as qtwebkitbuilder-base\n\nCOPY dockerfiles/splash/install-qtwebkit-build-deps.sh /tmp/install-qtwebkit-build-deps.sh\nCOPY dockerfiles/splash/create-package.sh /tmp/create-package.sh\nRUN /tmp/install-qtwebkit-build-deps.sh\n\n# =====================\n\n#FROM qtbuilder as qtwebkitbuilder\n#COPY --from=qtwebkit-downloader /tmp/qtwebkit.tar.xz /tmp/\n#\n#COPY dockerfiles/splash/install-qtwebkit-build-deps.sh /tmp/install-qtwebkit-build-deps.sh\n#RUN /tmp/install-qtwebkit-build-deps.sh\n#\n#COPY dockerfiles/splash/build-qtwebkit.sh /tmp/build-qtwebkit.sh\n#RUN /tmp/build-qtwebkit.sh /tmp/qtwebkit.tar.xz\n\n# =====================\n\nFROM qtbase as splash-base\n\nCOPY dockerfiles/splash/install-system-splash-deps.sh /tmp/install-system-splash-deps.sh\nRUN /tmp/install-system-splash-deps.sh\n\nARG QT_SHORT_VERSION\nARG QT_FULL_VERSION\n\nCOPY --from=qtbuilder \\\n    /opt/qt-${QT_SHORT_VERSION}/${QT_FULL_VERSION}/gcc_64 \\\n    /opt/qt-${QT_SHORT_VERSION}/${QT_FULL_VERSION}/gcc_64\n\n#RUN ls -l /opt/qt-${QT_SHORT_VERSION}/${QT_FULL_VERSION}/gcc_64/lib\nENV PATH=\"/opt/qt-${QT_SHORT_VERSION}/${QT_FULL_VERSION}/gcc_64/bin:${PATH}\"\nENV LD_LIBRARY_PATH=\"/opt/qt-${QT_SHORT_VERSION}/${QT_FULL_VERSION}/gcc_64/lib:$LD_LIBRARY_PATH\"\n\n# =====================\n\nFROM splash-base as qt5-builder\n\nARG SPLASH_BUILD_PARALLEL_JOBS\nENV SPLASH_BUILD_PARALLEL_JOBS=${SPLASH_BUILD_PARALLEL_JOBS}\n\nCOPY --from=pyqt5-downloader /tmp/sip.tar.gz /tmp/\nCOPY --from=pyqt5-downloader /tmp/pyqt5.tar.gz /tmp/\nCOPY dockerfiles/splash/install-pyqt5.sh /tmp/install-pyqt5.sh\nRUN /tmp/install-pyqt5.sh /tmp/sip.tar.gz /tmp/pyqt5.tar.gz\n\nCOPY --from=pyqt5-downloader /tmp/webengine.tar.gz /tmp/\nCOPY dockerfiles/splash/install-pyqtwebengine.sh /tmp/install-pyqtwebengine.sh\nRUN /tmp/install-pyqtwebengine.sh /tmp/webengine.tar.gz\n\n# =====================\n\nFROM splash-base as splash\n\nARG QT_MAJOR_VERSION\nENV QT_MAJOR_VERSION=${QT_MAJOR_VERSION}\n\nCOPY dockerfiles/splash/install-python-splash-deps.sh /tmp/install-python-splash-deps.sh\nRUN /tmp/install-python-splash-deps.sh\n\n# FIXME: use virtualenv\nCOPY --from=qt5-builder /usr/lib/python3/dist-packages /usr/lib/python3/dist-packages\nCOPY --from=qt5-builder /usr/local/lib/python3.6/dist-packages /usr/local/lib/python3.6/dist-packages\n\nCOPY . /app\nRUN pip3 install --no-cache-dir /app\nENV PYTHONPATH $PYTHONPATH:/app\n#ENV QT_DEBUG_PLUGINS=1\n\n# Chromium refuses to start under root\nRUN groupadd -r splash && useradd --no-log-init --create-home -r -g splash splash\nRUN chown -R splash:splash /app\nUSER splash:splash\n\n\nVOLUME [ \\\n    \"/etc/splash/proxy-profiles\", \\\n    \"/etc/splash/js-profiles\", \\\n    \"/etc/splash/filters\", \\\n    \"/etc/splash/lua_modules\" \\\n]\n\nEXPOSE 8050\n\nENTRYPOINT [ \\\n    \"python3\", \\\n    \"/app/bin/splash\", \\\n    \"--proxy-profiles-path\", \"/etc/splash/proxy-profiles\", \\\n    \"--js-profiles-path\", \"/etc/splash/js-profiles\", \\\n    \"--filters-path\", \"/etc/splash/filters\", \\\n    \"--lua-package-path\", \"/etc/splash/lua_modules/?.lua\" \\\n]\n"
}