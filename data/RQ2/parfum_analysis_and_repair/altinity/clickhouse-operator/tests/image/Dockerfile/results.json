{
  "startTime": 1674252124513,
  "endTime": 1674252125643,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 7,
        "columnEnd": 106
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 87,
        "lineEnd": 87,
        "columnStart": 18,
        "columnEnd": 104
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 89,
        "lineEnd": 89,
        "columnStart": 4,
        "columnEnd": 91
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 92,
        "lineEnd": 92,
        "columnStart": 4,
        "columnEnd": 99
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 62,
        "columnEnd": 125
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 7,
        "columnEnd": 66
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 7,
        "columnEnd": 48
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 7,
        "columnEnd": 66
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 7,
        "columnEnd": 48
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 7,
        "columnEnd": 48
      }
    }
  ],
  "repairedDockerfile": "# docker build -t registry.gitlab.com/altinity-public/container-images/clickhouse-operator-test-runner:latest .\nFROM ubuntu:20.04\n\nRUN apt-get update \\\n    && env DEBIAN_FRONTEND=noninteractive apt-get install --yes \\\n    apt-transport-https \\\n    software-properties-common \\\n    vim \\\n    iputils-ping \\\n    gettext-base \\\n    ethtool \\\n    jq \\\n    sed \\\n    socat \\\n    gpg \\\n    ca-certificates \\\n    bash \\\n    btrfs-progs \\\n    e2fsprogs \\\n    iptables \\\n    xfsprogs \\\n    tar \\\n    pigz \\\n    wget \\\n    git \\\n    perl \\\n    iproute2 \\\n    cgroupfs-mount \\\n    python3-pip \\\n    tzdata \\\n    psmisc \\\n    libreadline-dev \\\n    libicu-dev \\\n    bsdutils \\\n    curl \\\n    liblua5.1-dev \\\n    luajit \\\n    libssl-dev \\\n    libcurl4-openssl-dev \\\n    gdb \\\n    && rm -rf \\\n        /var/lib/apt/lists/* \\\n        /var/cache/debconf \\\n        /tmp/* \\\n    && apt-get clean\n\n\nRUN curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --batch --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg \\\n    && echo \"deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\" | tee /etc/apt/sources.list.d/docker.list > /dev/null \\\n    && apt-get update \\\n    && apt-get install --no-install-recommends --yes docker-ce docker-ce-cli containerd.io && rm -rf /var/lib/apt/lists/*;\n\nENV MINIKUBE_VERSION 1.23.2\n\nRUN curl -fsSLo /usr/share/keyrings/kubernetes-archive-keyring.gpg https://packages.cloud.google.com/apt/doc/apt-key.gpg \\\n    && echo \"deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main\" | tee /etc/apt/sources.list.d/kubernetes.list \\\n    && curl -f -LO https://storage.googleapis.com/minikube/releases/v${MINIKUBE_VERSION}/minikube-linux-amd64 \\\n    && install minikube-linux-amd64 /usr/local/bin/minikube\n\nENV TZ=Europe/Moscow\nRUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone\n\nCOPY requirements.txt /home/master/requirements.txt\nRUN pip3 install --no-cache-dir -U -r /home/master/requirements.txt\n\nRUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys CC86BB64 \\\n    && add-apt-repository ppa:rmescandon/yq \\\n    && apt install --no-install-recommends -y yq && rm -rf /var/lib/apt/lists/*;\n\nRUN set -x \\\n  && addgroup --system dockremap \\\n    && adduser --system dockremap \\\n  && adduser dockremap dockremap \\\n  && echo 'dockremap:165536:65536' >> /etc/subuid \\\n    && echo 'dockremap:165536:65536' >> /etc/subgid\n\nVOLUME /var/lib/docker\nEXPOSE 2375\n\nENV MINIKUBE_HOME /home/master/.minikube\n\nENV K8S_VERSION=${K8S_VERSION:-1.21.6}\n\nRUN wget -c --progress=bar:force:noscroll -O /usr/local/bin/kubectl https://storage.googleapis.com/kubernetes-release/release/v${K8S_VERSION}/bin/linux/amd64/kubectl \\\n   && chmod +x /usr/local/bin/kubectl\n\n# need for debug internal minikube\nRUN K9S_VERSION=$( curl -f -sL https://github.com/derailed/k9s/releases/latest -H \"Accept: application/json\" | jq -r .tag_name) && \\\n    wget -c --progress=bar:force:noscroll -O /usr/local/bin/k9s_${K9S_VERSION}_Linux_x86_64.tar.gz https://github.com/derailed/k9s/releases/download/${K9S_VERSION}/k9s_Linux_x86_64.tar.gz && \\\n    curl -f -sL https://github.com/derailed/k9s/releases/download/${K9S_VERSION}/checksums.txt | grep Linux_x86_64.tar.gz > /usr/local/bin/k9s.sha256 && \\\n    sed -i -e \"s/k9s_Linux_x86_64\\.tar\\.gz/\\\\/usr\\\\/local\\\\/bin\\\\/k9s_${K9S_VERSION}_Linux_x86_64\\\\.tar\\\\.gz/g\" /usr/local/bin/k9s.sha256 && \\\n    sha256sum -c /usr/local/bin/k9s.sha256 && \\\n    tar --verbose -zxvf /usr/local/bin/k9s_${K9S_VERSION}_Linux_x86_64.tar.gz -C /usr/local/bin k9s && rm /usr/local/bin/k9s_${K9S_VERSION}_Linux_x86_64.tar.gz\n\nRUN adduser --disabled-password --gecos \"\" master && usermod -a -G docker master\n\nRUN ln -svf /home/master/.minikube /root/.minikube && mkdir -p /home/master/.minikube/cache/preloaded-tarball && mkdir -p /home/master/.kube\n\nENV KUBECONFIG /home/master/.kube/config\n\nCOPY ./modprobe.sh /usr/local/bin/modprobe\nCOPY ./dockerd-start.sh /usr/local/bin/\nCOPY cache/*.dockerimage /var/lib/docker/\nCOPY cache/preloaded-images-k8s-v13-v${K8S_VERSION}-docker-overlay2-amd64.tar.lz4 /home/master/.minikube/cache/preloaded-tarball/\nRUN mkdir -p  /home/master/.minikube/cache/kic/ && ln -nsfv /var/lib/docker/kicbase.dockerimage /home/master/.minikube/cache/kic/kicbase_v0.0.27@sha256_89b4738ee74ba28684676e176752277f0db46f57d27f0e08c3feec89311e22de.tar\n\nRUN chmod +x /usr/local/bin/dockerd-start.sh && mkdir -p /home/master/.minikube/cache/kic && chown -R master /home/master/.minikube \\\n    && chmod -R u+wrx /home/master/.minikube\n\nENTRYPOINT [\"dockerd-start.sh\"]\n"
}