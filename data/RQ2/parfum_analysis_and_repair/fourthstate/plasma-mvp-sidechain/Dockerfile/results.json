{
  "startTime": 1674216589722,
  "endTime": 1674216590330,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 36
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Simple usage with a mounted data directory:\n# > docker build -t plasma .\n#\n# It is important to link the right volume to the container. The volume contains configuration files used to launch the server dameon\n#\n# plasmad\n# > docker run -it -p 26657:26657 -p 26656:26656 -v ~/.plasmad:/root/.plasmad\nFROM golang:1.12-alpine3.9 AS builder\n\nRUN apk add --no-cache git make npm curl gcc libc-dev && \\\n    mkdir -p /root/plasma-mvp-sidechain\n\n# install dependencies\nWORKDIR /root/plasma-mvp-sidechain\nCOPY go.mod go.sum ./\nRUN go mod download\n\nCOPY . .\n\n# install plasmad and plasmacli\nRUN go install -mod=readonly ./cmd/plasmad ./cmd/plasmacli\n\n### Final image\nFROM alpine:edge\n\n# Install ca-certificates\nRUN apk add --no-cache --update ca-certificates\nWORKDIR /root\n\n# Copy over the plasmad and plasmacli binaries from the build-env\nCOPY --from=builder /go/bin/plasmad /usr/bin/plasmad\nCOPY --from=builder /go/bin/plasmacli /usr/bin/plasmacli\n\n# As an executable, the dameon will simply start\nCMD [\"plasmad\", \"start\"]\n"
}