{
  "startTime": 1674215823411,
  "endTime": 1674215824521,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# This file is autogenerated, do not modify manually. See {author} for instructions.\n\n#\n# BUILD\n#\n\nFROM {py_ver.docker_base} as PY_SDK_BUILDER\n\n# don't cache any pip downloads\nENV PIP_NO_CACHE_DIR=false\n# pipenv puts new virtual env in current working directory\nENV PIPENV_VENV_IN_PROJECT=true\n# fake api key for testing\nENV MBED_CLOUD_SDK_API_KEY=abc123\n# set 'CI' to replicate CI server environments\nENV CI=yes\n\n# set the working directory (explicit mkdir needed for docker <= 1.9.1 i.e. circleci)\nRUN mkdir -p /build\nWORKDIR /build\n\n# install system-level dependencies\nRUN apk update\nRUN apk add --no-cache git\n{py_ver.py2_pre}\nRUN python -m pip install -U setuptools pip pipenv\n\n# add bare minimum files to survive a pip install\nCOPY scripts scripts\nCOPY src/mbed_cloud/_version.py src/mbed_cloud/_version.py\nCOPY setup* ./\nCOPY README.rst ./\nCOPY requirements.txt ./\nCOPY Pip* ./\n\n# install the project (with dev dependencies)\nRUN pipenv install -e . --dev\n\n# load the entire project from local checkout as build context\nCOPY . .\n\n# generate a development version\n# we must be told the testrunner version that will be used to test this build\nARG TESTRUNNER_VERSION\nRUN pipenv run auto_version --config=scripts/auto_version.toml --news --bump=patch \"TESTRUNNER_VERSION='${{TESTRUNNER_VERSION}}'\"\nRUN pipenv run python -c \"import mbed_cloud; print(mbed_cloud.__version__)\"\n\n# run smoke tests\nRUN pipenv run pytest --durations=3 tests/unit\n\n# run static analysis\nRUN pipenv run pytest --durations=3 tests/static\n\n# check the package file is good\nRUN pipenv run python setup.py check -r -s\n\n#\n# DEV\n#\n# generate a development package for use in testing\nRUN pipenv run python setup.py clean --all bdist_wheel\n\n#\n# BETA\n#\n# generate a beta version for beta releases\nRUN pipenv run auto_version --config=scripts/auto_version_beta.toml\n\n# generate a beta package\nRUN pipenv run python setup.py clean --all bdist_wheel --dist-dir beta-dist\n\n#\n# PRODUCTION\n#\n# generate a release version for use in docs\nRUN pipenv run auto_version --config=scripts/auto_version.toml --release\n\n# build the documentation\nRUN pipenv run python scripts/generate_news.py\nRUN pipenv run sphinx-apidoc src/mbed_cloud -o docs/built_api -e -M\nRUN pipenv run sphinx-build -a -b html -c docs/ docs/ built_docs\n\n# generate a release package\nRUN pipenv run python setup.py clean --all bdist_wheel --dist-dir release-dist\n\n#\n# MIMIMISE\n#\n\n# minimal image for future work. this should come out 'smallish' ~ 160MB\nFROM {py_ver.docker_base} as PY_SDK_LITE\n# working dir\nWORKDIR /build\n\nCOPY --from=PY_SDK_BUILDER build/ ./\n{py_ver.py2_post}\n\n# previously, next line also had --no-deps, but we can sanity-check that the venv has everything we need:\nRUN source .venv/bin/activate && pip install --no-cache-dir --no-index --find-links dist mbed_cloud_sdk\n\nCMD source .venv/bin/activate && python -c \"import mbed_cloud; print(mbed_cloud.__version__)\"\n"
}