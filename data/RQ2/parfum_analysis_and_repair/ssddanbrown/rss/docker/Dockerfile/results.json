{
  "startTime": 1674254812515,
  "endTime": 1674254813105,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 26,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 113
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 26,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 113
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# NPM asset build\nFROM node:18\nCOPY . /app\nWORKDIR /app\nRUN npm ci && npm run build\n\n# Composer dependancies build\nFROM composer:2\nCOPY . /app\nWORKDIR /app\nRUN composer install --no-dev\n\n######################\n# Main app container #\n######################\n\nFROM ubuntu:22.04\n\n# Copy our app files\nCOPY . /app\nWORKDIR /app\n\n# Install dependencies\nARG DEBIAN_FRONTEND=noninteractive\nRUN set -xe && \\\n    apt-get update -yqq && \\\n    apt-get install --no-install-recommends curl supervisor nginx cron php8.1-cli php8.1-fpm php8.1-cgi php8.1-common \\\n                    php8.1-curl php8.1-mbstring php8.1-xml php8.1-zip php8.1-gd php8.1-sqlite3 php8.1-bcmath -yqq && rm -rf /var/lib/apt/lists/*;\n\n# Copy requirements from other containers\nCOPY --from=0 /app/public/build /app/public/build\nCOPY --from=1 /app/vendor /app/vendor\n\n# Make required files changes using passed-though files\n# Then setup crontab\n# Then run any app-side commands\nRUN cp docker/.env.container /app/.env && \\\n    cp docker/nginx.conf /etc/nginx/sites-enabled/rss.conf && \\\n    cp docker/cron /etc/cron.d/rss-cron && \\\n    rm /etc/nginx/sites-enabled/default && \\\n    chmod +x /app/docker/run.sh && \\\n    chmod 0644 /etc/cron.d/rss-cron && \\\n    crontab /etc/cron.d/rss-cron && \\\n    php artisan key:generate && \\\n    php artisan route:cache\n\n# Run our process wrapper script\nEXPOSE 80/tcp\nCMD /app/docker/run.sh\n"
}