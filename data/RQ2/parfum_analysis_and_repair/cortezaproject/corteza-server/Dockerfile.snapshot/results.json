{
  "startTime": 1674251733309,
  "endTime": 1674251734168,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 28,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 19
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# bundle web-console\nFROM node:16.14-alpine as webconsole-build-stage\n\nWORKDIR /webconsole\nCOPY ./webconsole ./\n# Snapshot is built in development mode and with source map\nRUN yarn install && yarn build --mode dev --sourcemap && yarn cache clean;\n\n\n# build server\nFROM golang:1.17-buster as server-build-stage\n\nENV BUILD_OS=linux\nENV BUILD_ARCH=amd64\nENV BUILD_VERSION=latest\n\nWORKDIR /corteza\n\nCOPY . ./\n\nCOPY --from=webconsole-build-stage /webconsole/dist ./webconsole/dist\nRUN make release-clean release\n\n\n# deploy stage\nFROM ubuntu:20.04\n\nRUN apt-get -y update \\\n && apt-get -y --no-install-recommends install \\\n    ca-certificates \\\n && rm -rf /var/lib/apt/lists/*\n\nENV STORAGE_PATH \"/data\"\nENV CORREDOR_ADDR \"corredor:80\"\nENV HTTP_ADDR \"0.0.0.0:80\"\nENV HTTP_WEBAPP_ENABLED \"false\"\nENV PATH \"/corteza/bin:${PATH}\"\n\nWORKDIR /corteza\n\nVOLUME /data\n\nCOPY --from=server-build-stage /corteza/build/pkg/corteza-server ./\n\nHEALTHCHECK --interval=30s --start-period=1m --timeout=30s --retries=3 \\\n    CMD curl --silent --fail --fail-early http://127.0.0.1:80/healthcheck || exit 1\n\nEXPOSE 80\n\nENTRYPOINT [\"./bin/corteza-server\"]\n\nCMD [\"serve-api\"]\n"
}