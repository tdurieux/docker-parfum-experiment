{
  "startTime": 1674248424826,
  "endTime": 1674248426173,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 2,
        "columnEnd": 20
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 36,
        "lineEnd": 44,
        "columnStart": 1,
        "columnEnd": 23
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 2,
        "columnEnd": 32
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 2,
        "columnEnd": 38
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 22,
        "columnStart": 2,
        "columnEnd": 112
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG GOLANG_VERSION=1.18.3\nFROM golang:${GOLANG_VERSION}-bullseye as builder\n\nARG VIPS_VERSION=8.12.2\nARG CGIF_VERSION=0.3.0\nARG RUN_TEST\n\nENV PKG_CONFIG_PATH=/usr/local/lib/pkgconfig\n\n# libaom3 is in Debian bullseye-backports\nRUN echo 'deb http://deb.debian.org/debian bullseye-backports main' > /etc/apt/sources.list.d/backports.list\n\n# Installs libvips + required libraries\nRUN DEBIAN_FRONTEND=noninteractive \\\n  apt-get update && \\\n  apt-get install --no-install-recommends -y \\\n  ca-certificates \\\n  automake build-essential curl \\\n  python3-pip ninja-build pkg-config \\\n  gobject-introspection gtk-doc-tools libglib2.0-dev libjpeg62-turbo-dev libpng-dev \\\n  libwebp-dev libtiff5-dev libexif-dev libxml2-dev libpoppler-glib-dev \\\n  swig libpango1.0-dev libmatio-dev libopenslide-dev libcfitsio-dev \\\n  libgsf-1-dev fftw3-dev liborc-0.4-dev librsvg2-dev libimagequant-dev libaom-dev/bullseye-backports libheif-dev && \\\n  pip3 install --no-cache-dir meson && \\\n  cd /tmp && \\\n  curl -fsSLO https://github.com/dloebl/cgif/archive/refs/tags/V${CGIF_VERSION}.tar.gz && \\\n  tar xf V${CGIF_VERSION}.tar.gz && \\\n  cd cgif-${CGIF_VERSION} && \\\n  meson build --prefix=/usr/local --libdir=/usr/local/lib && \\\n  cd build && \\\n  ninja && \\\n  ninja install && \\\n  cd /tmp && \\\n  curl -fsSLO https://github.com/libvips/libvips/releases/download/v${VIPS_VERSION}/vips-${VIPS_VERSION}.tar.gz && \\\n  tar zvxf vips-${VIPS_VERSION}.tar.gz && \\\n  cd /tmp/vips-${VIPS_VERSION} && \\\n\tCFLAGS=\"-g -O3\" CXXFLAGS=\"-D_GLIBCXX_USE_CXX11_ABI=0 -g -O3\" \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n\n    --disable-debug \\\n    --disable-dependency-tracking \\\n    --disable-introspection \\\n    --disable-static \\\n    --enable-gtk-doc-html=no \\\n    --enable-gtk-doc=no \\\n    --enable-pyvips8=no && \\\n  make && \\\n  make install && \\\n  ldconfig && rm V${CGIF_VERSION}.tar.gz && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR ${GOPATH}/src/github.com/cshum/imagor\n\nCOPY go.mod .\nCOPY go.sum .\n\nRUN go mod download\n\nCOPY . .\n\nRUN if [ \"$RUN_TEST\" = 1 ]; then go test ./...; fi\nRUN go build -o ${GOPATH}/bin/imagor ./cmd/imagor/main.go\n\nRUN rm -rf /usr/local/lib/python*\n\nFROM debian:bullseye-slim\nLABEL maintainer=\"adrian@cshum.com\"\n\nCOPY --from=builder /usr/local/lib /usr/local/lib\nCOPY --from=builder /etc/ssl/certs /etc/ssl/certs\nCOPY --from=builder /etc/apt/sources.list.d/backports.list /etc/apt/sources.list.d/backports.list\n\n# Install runtime dependencies\nRUN DEBIAN_FRONTEND=noninteractive \\\n  apt-get update && \\\n  apt-get install --no-install-recommends -y \\\n  procps libglib2.0-0 libjpeg62-turbo libpng16-16 libopenexr25 \\\n  libwebp6 libwebpmux3 libwebpdemux2 libtiff5 libexif12 libxml2 libpoppler-glib8 \\\n  libpango1.0-0 libmatio11 libopenslide0 libjemalloc2 \\\n  libgsf-1-114 fftw3 liborc-0.4-0 librsvg2-2 libcfitsio9 libimagequant0 libaom3 libheif1 && \\\n  ln -s /usr/lib/$(uname -m)-linux-gnu/libjemalloc.so.2 /usr/local/lib/libjemalloc.so && \\\n  apt-get autoremove -y && \\\n  apt-get autoclean && \\\n  apt-get clean && \\\n  rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\nCOPY --from=builder /go/bin/imagor /usr/local/bin/imagor\n\nENV VIPS_WARNING=0\nENV MALLOC_ARENA_MAX=2\nENV LD_PRELOAD=/usr/local/lib/libjemalloc.so\n\nENV PORT 8000\n\n# use unprivileged user\nUSER nobody\n\nENTRYPOINT [\"/usr/local/bin/imagor\"]\n\nEXPOSE ${PORT}\n"
}