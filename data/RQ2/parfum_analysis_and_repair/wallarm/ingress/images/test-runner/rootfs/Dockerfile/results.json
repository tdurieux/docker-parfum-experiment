{
  "startTime": 1674253601352,
  "endTime": 1674253602512,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 116,
        "lineEnd": 116,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 120,
        "lineEnd": 120,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 5,
        "columnEnd": 16
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 5,
        "columnEnd": 65
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 5,
        "columnEnd": 63
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 5,
        "columnEnd": 40
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 5,
        "columnEnd": 39
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 110,
        "lineEnd": 110,
        "columnStart": 5,
        "columnEnd": 35
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright 2018 The Kubernetes Authors. All rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nARG BASE_IMAGE\nARG GOLANG_VERSION\nARG ETCD_VERSION\n\nFROM golang:${GOLANG_VERSION}-alpine as GO\nFROM registry.k8s.io/etcd:${ETCD_VERSION} as etcd\n\nFROM ${BASE_IMAGE}\n\nRUN [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf\n\nCOPY --from=GO   /usr/local/go /usr/local/go\nCOPY --from=etcd /usr/local/bin/etcd /usr/local/bin/etcd\n\nRUN echo \"@testing http://nl.alpinelinux.org/alpine/edge/testing\" >> /etc/apk/repositories\n\nRUN apk add --no-cache \\\n  bash \\\n  ca-certificates \\\n  wget \\\n  make \\\n  gcc \\\n  git \\\n  musl-dev \\\n  perl \\\n  python3 \\\n  py-crcmod \\\n  py-pip \\\n  unzip \\\n  openssl \\\n  cfssl@testing\n\nENV GOPATH /go\nENV PATH $GOPATH/bin:/usr/local/go/bin:$PATH\n\nRUN mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\"\n\nRUN go install github.com/onsi/ginkgo/ginkgo@v1.16.5  && go install golang.org/x/lint/golint@latest\n\nARG RESTY_CLI_VERSION\nARG RESTY_CLI_SHA\n\nRUN wget -O /tmp/resty_cli.tgz \\\n  https://github.com/openresty/resty-cli/archive/v${RESTY_CLI_VERSION}.tar.gz \\\n  && echo \"${RESTY_CLI_SHA}  */tmp/resty_cli.tgz\" | sha256sum -c - \\\n  && tar -C /tmp -xzf /tmp/resty_cli.tgz \\\n  && mv /tmp/resty-cli-${RESTY_CLI_VERSION}/bin/* /usr/local/bin/ \\\n  && resty -V \\\n  && rm -rf /tmp/* && rm /tmp/resty_cli.tgz\n\nARG LUAROCKS_VERSION\nARG LUAROCKS_SHA\n\nRUN wget -O /tmp/luarocks.tgz \\\n  https://github.com/luarocks/luarocks/archive/v${LUAROCKS_VERSION}.tar.gz \\\n  && echo \"${LUAROCKS_SHA}  */tmp/luarocks.tgz\" | sha256sum -c - \\\n  && tar -C /tmp -xzf /tmp/luarocks.tgz \\\n  && cd /tmp/luarocks* \\\n  && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n  && make install && rm /tmp/luarocks.tgz\n\nRUN  luarocks install busted \\\n  && luarocks install luacheck\n\nARG TARGETARCH\n\nARG K8S_RELEASE\n\nRUN wget -O /usr/local/bin/kubectl \\\n  https://storage.googleapis.com/kubernetes-release/release/${K8S_RELEASE}/bin/linux/${TARGETARCH}/kubectl \\\n  && chmod +x /usr/local/bin/kubectl\n\nRUN wget -O /usr/local/bin/kube-apiserver \\\n  https://storage.googleapis.com/kubernetes-release/release/${K8S_RELEASE}/bin/linux/${TARGETARCH}/kube-apiserver \\\n  && chmod +x /usr/local/bin/kube-apiserver\n\nARG CHART_TESTING_VERSION\n\nRUN wget -O /tmp/ct-${CHART_TESTING_VERSION}-linux-amd64.tar.gz \\\n  https://github.com/helm/chart-testing/releases/download/v${CHART_TESTING_VERSION}/chart-testing_${CHART_TESTING_VERSION}_linux_amd64.tar.gz \\\n  && mkdir -p /tmp/ct-download \\\n  && tar xzvf /tmp/ct-${CHART_TESTING_VERSION}-linux-amd64.tar.gz -C /tmp/ct-download \\\n  && rm /tmp/ct-${CHART_TESTING_VERSION}-linux-amd64.tar.gz \\\n  && cp /tmp/ct-download/ct /usr/local/bin \\\n  && mkdir -p /etc/ct \\\n  && cp -R /tmp/ct-download/etc/* /etc/ct \\\n  && rm -rf /tmp/*\n\nRUN wget -O /usr/local/bin/lj-releng \\\n  https://raw.githubusercontent.com/openresty/openresty-devel-utils/master/lj-releng \\\n  && chmod +x /usr/local/bin/lj-releng\n\nARG HELM_VERSION\n\nRUN wget -O /tmp/helm.tgz \\\n  https://get.helm.sh/helm-${HELM_VERSION}-linux-${TARGETARCH}.tar.gz \\\n  && tar -C /tmp -xzf /tmp/helm.tgz \\\n  && cp /tmp/linux*/helm /usr/local/bin \\\n  && rm -rf /tmp/* && rm /tmp/helm.tgz\n\n# Install a YAML Linter\nARG YAML_LINT_VERSION\nRUN pip install --no-cache-dir \"yamllint==$YAML_LINT_VERSION\"\n\n# Install Yamale YAML schema validator\nARG YAMALE_VERSION\nRUN pip install --no-cache-dir \"yamale==$YAMALE_VERSION\"\n\nWORKDIR $GOPATH\n"
}