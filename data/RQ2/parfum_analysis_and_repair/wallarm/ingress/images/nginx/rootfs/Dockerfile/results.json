{
  "startTime": 1674251146831,
  "endTime": 1674251147777,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 5,
        "columnEnd": 20
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright 2015 The Kubernetes Authors. All rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\nFROM alpine:3.16.0 as builder\n\nCOPY . /\n\nRUN --mount=type=ssh apk update \\\n  && apk upgrade \\\n  && apk add --no-cache -U bash \\\n  && /build.sh\n\n# Use a multi-stage build\nFROM alpine:3.16.0\n\nENV PATH=$PATH:/usr/local/luajit/bin:/usr/local/nginx/sbin:/usr/local/nginx/bin\n\nENV LUA_PATH=\"/usr/local/share/luajit-2.1.0-beta3/?.lua;/usr/local/share/lua/5.1/?.lua;/usr/local/lib/lua/?.lua;;\"\nENV LUA_CPATH=\"/usr/local/lib/lua/?/?.so;/usr/local/lib/lua/?.so;;\"\n\nCOPY --from=builder /usr/local /usr/local\nCOPY --from=builder /opt /opt\nCOPY --from=builder /etc/nginx /etc/nginx\nCOPY --from=builder /tmp/pkgs/wallarm-nginx/wallarm/share/wallarm_blocked.html /usr/share/nginx/html/\n\nRUN apk update \\\n  && apk upgrade \\\n  && apk add -U --no-cache \\\n  bash \\\n  openssl \\\n  pcre \\\n  zlib \\\n  geoip \\\n  curl \\\n  ca-certificates \\\n  patch \\\n  yajl \\\n  lmdb \\\n  libxml2 \\\n  libmaxminddb \\\n  yaml-cpp \\\n  dumb-init \\\n  nano \\\n  tzdata \\\n  && ln -s /usr/local/nginx/sbin/nginx /sbin/nginx \\\n  && adduser -S -D -H -u 101 -h /usr/local/nginx \\\n  -s /sbin/nologin -G www-data -g www-data www-data \\\n  && bash -eu -c ' \\\n  writeDirs=( \\\n  /var/log/nginx \\\n  /var/lib/nginx/body \\\n  /var/lib/nginx/fastcgi \\\n  /var/lib/nginx/proxy \\\n  /var/lib/nginx/scgi \\\n  /var/lib/nginx/uwsgi \\\n  /var/log/audit \\\n  ); \\\n  for dir in \"${writeDirs[@]}\"; do \\\n  mkdir -p ${dir}; \\\n  chown -R www-data.www-data ${dir}; \\\n  done'\n\nEXPOSE 80 443\n\nCMD [\"nginx\", \"-g\", \"daemon off;\"]\n"
}