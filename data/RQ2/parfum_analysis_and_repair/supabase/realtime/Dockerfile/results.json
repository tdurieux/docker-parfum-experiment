{
  "startTime": 1674249262405,
  "endTime": 1674249263745,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 30
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# ---- Build Stage ----\nFROM elixir:1.11.4 AS app_builder\n\n# Set environment variables for building the application\nENV MIX_ENV=prod \\\n    DB_SSL=false\n\nRUN apt-get update\n\n# Install hex and rebar\nRUN mix local.hex --force && \\\n    mix local.rebar --force\n\n# Create the application build directory\nRUN mkdir /app\nWORKDIR /app\n\n\n# Copy over all the necessary application files and directories\nCOPY ./server/config ./config\nCOPY ./server/lib ./lib\nCOPY ./server/priv ./priv\nCOPY ./server/mix.exs .\nCOPY ./server/mix.lock .\n\n# Fetch the application dependencies and build the application\nRUN mix deps.get\nRUN mix deps.compile\nRUN mix release\n\n\n# ---- Application Stage ----\nFROM debian:buster AS app\n\nENV LANG=C.UTF-8\n\n# Install openssl\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y openssl && rm -rf /var/lib/apt/lists/*;\n\n# Copy over the build artifact from the previous step and create a non root user\n# RUN adduser -D -h /home/app app\n# WORKDIR /home/app\nCOPY --from=app_builder /app/_build .\n# RUN chown -R app: ./prod\n# USER app\n\n# Run the Phoenix app\nCMD [\"./prod/rel/realtime/bin/realtime\", \"start\"]\n"
}