diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/bids-apps/cpac/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/bids-apps/cpac/Dockerfile/repaired.Dockerfile
index 2aa6bfb..c7ef4ab 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/bids-apps/cpac/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/bids-apps/cpac/Dockerfile/repaired.Dockerfile
@@ -5,17 +5,17 @@ MAINTAINER John Pellman <john.pellman@childmind.org>
 RUN mkdir /scratch && mkdir /local-scratch && mkdir -p /code && mkdir -p /cpac_resources
 
 # install wget
-RUN apt-get update && apt-get install -y wget curl
+RUN apt-get update && apt-get install --no-install-recommends -y wget curl && rm -rf /var/lib/apt/lists/*;
 
 # Install the validator
-RUN curl -sL https://deb.nodesource.com/setup_4.x | bash - && \
-     apt-get install -y nodejs && \
+RUN curl -f -sL https://deb.nodesource.com/setup_4.x | bash - && \
+     apt-get install --no-install-recommends -y nodejs && \
      rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
-RUN npm install -g bids-validator
+RUN npm install -g bids-validator && npm cache clean --force;
 
 # Install Ubuntu dependencies
 RUN apt-get update && \
-    apt-get install -y \
+    apt-get install --no-install-recommends -y \
       build-essential \
       cmake \
       git \
@@ -51,11 +51,11 @@ RUN apt-get update && \
       unzip \
       xvfb \
       xauth \
-      zlib1g-dev
+      zlib1g-dev && rm -rf /var/lib/apt/lists/*;
 
 # Install 16.04 dependencies
 RUN apt-get update && \
-    apt-get install -y \
+    apt-get install --no-install-recommends -y \
       dh-autoreconf \
       libgsl-dev \
       libmotif-dev \
@@ -64,14 +64,14 @@ RUN apt-get update && \
       libxext-dev \
       x11proto-xext-dev \
       x11proto-print-dev \
-      xutils-dev
+      xutils-dev && rm -rf /var/lib/apt/lists/*;
 
 # Compiles libxp- this is necessary for some newer versions of Ubuntu
 # where the is no Debian package available.
 RUN git clone git://anongit.freedesktop.org/xorg/lib/libXp /tmp/libXp && \
     cd /tmp/libXp && \
     ./autogen.sh && \
-    ./configure && \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" && \
     make && \
     make install && \
     cd / && \
@@ -79,13 +79,13 @@ RUN git clone git://anongit.freedesktop.org/xorg/lib/libXp /tmp/libXp && \
 
 # Installing and setting up c3d
 RUN mkdir -p /opt/c3d && \
-    curl -sSL "http://downloads.sourceforge.net/project/c3d/c3d/1.0.0/c3d-1.0.0-Linux-x86_64.tar.gz" \
+    curl -f -sSL "https://downloads.sourceforge.net/project/c3d/c3d/1.0.0/c3d-1.0.0-Linux-x86_64.tar.gz" \
     | tar -xzC /opt/c3d --strip-components 1
 ENV C3DPATH /opt/c3d/
 ENV PATH $C3DPATH/bin:$PATH
 
 # install miniconda
-RUN wget -q http://repo.continuum.io/miniconda/Miniconda-3.8.3-Linux-x86_64.sh && \
+RUN wget -q https://repo.continuum.io/miniconda/Miniconda-3.8.3-Linux-x86_64.sh && \
     bash Miniconda-3.8.3-Linux-x86_64.sh -b -p /usr/local/miniconda && \
     rm Miniconda-3.8.3-Linux-x86_64.sh
 
@@ -109,7 +109,7 @@ RUN conda install -y \
       wxpython
 
 # install python dependencies
-RUN pip install \
+RUN pip install --no-cache-dir \
       boto3 \
       configparser \
       fs==0.5.4 \
@@ -124,7 +124,7 @@ RUN pip install \
       pygraphviz \
       simplejson
 
-RUN pip install git+https://github.com/ccraddock/INDI-Tools.git
+RUN pip install --no-cache-dir git+https://github.com/ccraddock/INDI-Tools.git
 
 # install AFNI
 COPY required_afni_pkgs.txt /opt/required_afni_pkgs.txt
@@ -133,7 +133,7 @@ RUN libs_path=/usr/lib/x86_64-linux-gnu && \
            ln $libs_path/libgsl.so.19 $libs_path/libgsl.so.0; \
     fi && \
     mkdir -p /opt/afni && \
-    wget -q http://afni.nimh.nih.gov/pub/dist/tgz/linux_openmp_64.tgz && \
+    wget -q https://afni.nimh.nih.gov/pub/dist/tgz/linux_openmp_64.tgz && \
     tar zxv -C /opt/afni --strip-components=1 -f linux_openmp_64.tgz $(cat /opt/required_afni_pkgs.txt) && \
     rm -rf linux_openmp_64.tgz
 
@@ -141,11 +141,11 @@ RUN libs_path=/usr/lib/x86_64-linux-gnu && \
 ENV PATH=/opt/afni:$PATH
 
 # install FSL
-RUN apt-get update  && \
+RUN apt-get update && \
     apt-get install -y --no-install-recommends \
                     fsl-core \
                     fsl-atlases \
-                    fsl-mni152-templates
+                    fsl-mni152-templates && rm -rf /var/lib/apt/lists/*;
 
 # setup fsl environment
 ENV FSLDIR=/usr/share/fsl/5.0 \
@@ -159,12 +159,12 @@ ENV FSLDIR=/usr/share/fsl/5.0 \
 
 # install ANTs
 RUN apt-get update && \
-    apt-get install -y \
-    ants
+    apt-get install --no-install-recommends -y \
+    ants && rm -rf /var/lib/apt/lists/*;
 
 # install cpac resources
 RUN cd /tmp && \
-    wget -q http://fcon_1000.projects.nitrc.org/indi/cpac_resources.tar.gz && \
+    wget -q https://fcon_1000.projects.nitrc.org/indi/cpac_resources.tar.gz && \
     tar xfz cpac_resources.tar.gz && \
     cd cpac_image_resources && \
     cp -n MNI_3mm/* $FSLDIR/data/standard && \
@@ -172,16 +172,16 @@ RUN cd /tmp && \
     cp -n symmetric/* $FSLDIR/data/standard && \
     cp -nr tissuepriors/2mm $FSLDIR/data/standard/tissuepriors && \
     cp -nr tissuepriors/3mm $FSLDIR/data/standard/tissuepriors && \
-    cp -n HarvardOxford-lateral-ventricles-thr25-2mm.nii.gz $FSLDIR/data/atlases/HarvardOxford
+    cp -n HarvardOxford-lateral-ventricles-thr25-2mm.nii.gz $FSLDIR/data/atlases/HarvardOxford && rm cpac_resources.tar.gz
 
 # install cpac templates
 COPY cpac_templates.tar.gz /cpac_resources/cpac_templates.tar.gz
 RUN cd cpac_resources && \
     tar xzvf /cpac_resources/cpac_templates.tar.gz && \
     rm -f /cpac_resources/cpac_templates.tar.gz
-    
+
 # install cpac
-RUN pip install git+https://github.com/FCP-INDI/C-PAC.git@v1.1.0
+RUN pip install --no-cache-dir git+https://github.com/FCP-INDI/C-PAC.git@v1.1.0
 #RUN pwd && pip install git+https://github.com/ccraddock/C-PAC.git
 
 # make directory for nipype