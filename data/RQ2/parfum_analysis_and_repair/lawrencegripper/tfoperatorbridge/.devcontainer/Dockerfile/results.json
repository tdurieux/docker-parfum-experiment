{
  "startTime": 1674251812842,
  "endTime": 1674251813850,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 7,
        "columnEnd": 49
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 93,
        "lineEnd": 93,
        "columnStart": 7,
        "columnEnd": 164
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 99,
        "lineEnd": 99,
        "columnStart": 4,
        "columnEnd": 74
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 105,
        "lineEnd": 105,
        "columnStart": 4,
        "columnEnd": 102
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 111,
        "lineEnd": 111,
        "columnStart": 4,
        "columnEnd": 78
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 7,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 7,
        "columnEnd": 57
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 7,
        "columnEnd": 25
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 7,
        "columnEnd": 37
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 7,
        "columnEnd": 41
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 7,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 7,
        "columnEnd": 96
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 7,
        "columnEnd": 57
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 7,
        "columnEnd": 70
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 7,
        "columnEnd": 25
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 7,
        "columnEnd": 37
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 7,
        "columnEnd": 41
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 7,
        "columnEnd": 36
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 33
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM golang:1.14.4-buster\n\n# Avoid warnings by switching to noninteractive\nENV DEBIAN_FRONTEND=noninteractive\n\n# This Dockerfile adds a non-root 'vscode' user with sudo access. However, for Linux,\n# this user's GID/UID must match your local user UID/GID to avoid permission issues\n# with bind mounts. Update USER_UID / USER_GID if yours is not 1000. See\n# https://aka.ms/vscode-remote/containers/non-root-user for details.\nARG USERNAME=vscode\nARG USER_UID=1000\nARG USER_GID=$USER_UID\n\nENV GO111MODULE=on\n\n# Configure apt, install packages and tools\nRUN apt-get update \\\n    && apt-get -y install --no-install-recommends apt-utils dialog fuse nano xterm locales unzip \\\n    #\n    # Verify git, process tools, lsb-release (common in install instructions for CLIs) installed \\\n    && apt-get -y --no-install-recommends install git iproute2 procps lsb-release \\\n    #\n    # Install Azure CLI\n    && curl -f -sL https://aka.ms/InstallAzureCLIDeb | bash \\\n    #\n    # Install Integration testing Tools\n    #\n    # --> xvfb for integration testing (gocui requires a valid tty which isn't available in ci)\n    && apt-get install --no-install-recommends -y xvfb libgl1-mesa-dri \\\n    #\n    # Install Release Tools\n    #\n    # --> RPM used by goreleaser\n    && apt install --no-install-recommends -y rpm \\\n    # Install python3\n    && apt-get -y --no-install-recommends install python3-pip \\\n    && apt-get -y --no-install-recommends install bash-completion \\\n    # Install shellcheck\n    && apt-get -y --no-install-recommends install shellcheck && rm -rf /var/lib/apt/lists/*;\n\n# Setup locale as required by snapd: https://stackoverflow.com/questions/28405902/how-to-set-the-locale-inside-a-debian-ubuntu-docker-container\nRUN sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen && \\\n    dpkg-reconfigure --frontend=noninteractive locales && \\\n    update-locale LANG=en_US.UTF-8\n\nENV GIT_PROMPT_START='\\033[1;36mtob-devcon>\\033[0m\\033[0;33m\\w\\a\\033[0m'\n\n# Save command line history\nRUN echo \"export HISTFILE=/root/commandhistory/.bash_history\" >> \"/root/.bashrc\" \\\n    && echo \"export PROMPT_COMMAND='history -a'\" >> \"/root/.bashrc\" \\\n    && mkdir -p /root/commandhistory \\\n    && touch /root/commandhistory/.bash_history\n\nRUN echo \"source /usr/share/bash-completion/bash_completion\" >> \"/root/.bashrc\"\n\n# Git command prompt\nRUN git clone https://github.com/magicmonty/bash-git-prompt.git ~/.bash-git-prompt --depth=1 \\\n    && echo \"if [ -f \\\"$HOME/.bash-git-prompt/gitprompt.sh\\\" ]; then GIT_PROMPT_ONLY_IN_REPO=1 && source $HOME/.bash-git-prompt/gitprompt.sh; fi\" >> \"/root/.bashrc\"\n\nENV DEVCONTAINER=\"TRUE\"\n\n# Install docker used by go releaser\nRUN bash -c \"cd /tmp && curl -fsSLO https://download.docker.com/linux/static/stable/x86_64/docker-19.03.5.tgz && tar --strip-components=1 -xvzf docker-19.03.5.tgz -C /usr/local/bin\"\n\n# Install mdspell\nRUN \\\n    apt-get install --no-install-recommends -y nodejs npm \\\n    && npm i markdown-spellcheck -g && npm cache clean --force; && rm -rf /var/lib/apt/lists/*;\n\n# Install Go tools\nRUN \\\n    # --> Delve for debugging\n    go get github.com/go-delve/delve/cmd/dlv@v1.4.1 \\\n    # --> Go language server\n    && go get golang.org/x/tools/gopls@v0.4.1 \\\n    # --> Go symbols and outline for go to symbol support and test support \n    && go get github.com/acroca/go-symbols@v0.1.1 && go get github.com/ramya-rao-a/go-outline@7182a932836a71948db4a81991a494751eccfe77 \\\n    # --> GolangCI-lint\n    && curl -sfL https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | sed 's/tar -/tar --no-same-owner -/g' | sh -s -- -b $(go env GOPATH)/bin \\\n    # --> Install Ginkgo\n    && go get github.com/onsi/ginkgo/ginkgo@v1.12.0  \\\n    # --> Go releaser \n    && curl -sfL https://install.goreleaser.com/github.com/goreleaser/goreleaser.sh | sh -s -- \"v0.132.1\"\\\n    # --> Go rich output for testing with colors\n    && go get github.com/kyoh86/richgo@v0.3.3 \\\n    && rm -rf /go/src/ && rm -rf /go/pkg\n\nRUN echo \"alias go=richgo\" >> \"/root/.bashrc\"\n\nARG TERRAFORM_VERSION=0.12.26\nRUN \\\n\n    mkdir -p /tmp/docker-downloads \\\n    && curl -f -sSL -o /tmp/docker-downloads/terraform.zip https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip \\\n    && unzip /tmp/docker-downloads/terraform.zip \\\n    && mv terraform /usr/local/bin\n\n# Install KIND\nRUN \\\n    curl -f -Lo ./kind https://kind.sigs.k8s.io/dl/v0.8.1/kind-$(uname)-amd64 \\\n    && chmod +x ./kind \\\n    && mv ./kind /usr/local/bin/kind\n\n# Install Kubectl\nRUN \\\n    curl -f -LO https://storage.googleapis.com/kubernetes-release/release/v1.18.0/bin/linux/amd64/kubectl \\\n    && chmod +x ./kubectl \\\n    && mv ./kubectl /usr/local/bin/kubectl\n\n# Install Ngrok\nRUN \\\n    curl -f -LO https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-amd64.zip \\\n    && unzip ./ngrok-stable-linux-amd64.zip \\\n    && mv ngrok /usr/local/bin"
}