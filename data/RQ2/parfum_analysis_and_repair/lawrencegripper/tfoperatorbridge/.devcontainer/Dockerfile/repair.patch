diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/lawrencegripper/tfoperatorbridge/.devcontainer/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/lawrencegripper/tfoperatorbridge/.devcontainer/Dockerfile/repaired.Dockerfile
index 9a1a480..8ba5f14 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/lawrencegripper/tfoperatorbridge/.devcontainer/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/lawrencegripper/tfoperatorbridge/.devcontainer/Dockerfile/repaired.Dockerfile
@@ -17,26 +17,26 @@ ENV GO111MODULE=on
 RUN apt-get update \
     && apt-get -y install --no-install-recommends apt-utils dialog fuse nano xterm locales unzip \
     #
-    # Verify git, process tools, lsb-release (common in install instructions for CLIs) installed
-    && apt-get -y install git iproute2 procps lsb-release \
+    # Verify git, process tools, lsb-release (common in install instructions for CLIs) installed \
+    && apt-get -y --no-install-recommends install git iproute2 procps lsb-release \
     #
     # Install Azure CLI
-    && curl -sL https://aka.ms/InstallAzureCLIDeb | bash \
+    && curl -f -sL https://aka.ms/InstallAzureCLIDeb | bash \
     #
-    # Install Integration testing Tools 
+    # Install Integration testing Tools
     #
     # --> xvfb for integration testing (gocui requires a valid tty which isn't available in ci)
     && apt-get install --no-install-recommends -y xvfb libgl1-mesa-dri \
-    # 
+    #
     # Install Release Tools
     #
     # --> RPM used by goreleaser
-    && apt install -y rpm \
+    && apt install --no-install-recommends -y rpm \
     # Install python3
-    && apt-get -y install python3-pip \
-    && apt-get -y install bash-completion \
+    && apt-get -y --no-install-recommends install python3-pip \
+    && apt-get -y --no-install-recommends install bash-completion \
     # Install shellcheck
-    && apt-get -y install shellcheck
+    && apt-get -y --no-install-recommends install shellcheck && rm -rf /var/lib/apt/lists/*;
 
 # Setup locale as required by snapd: https://stackoverflow.com/questions/28405902/how-to-set-the-locale-inside-a-debian-ubuntu-docker-container
 RUN sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen && \
@@ -45,7 +45,7 @@ RUN sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen && \
 
 ENV GIT_PROMPT_START='\033[1;36mtob-devcon>\033[0m\033[0;33m\w\a\033[0m'
 
-# Save command line history 
+# Save command line history
 RUN echo "export HISTFILE=/root/commandhistory/.bash_history" >> "/root/.bashrc" \
     && echo "export PROMPT_COMMAND='history -a'" >> "/root/.bashrc" \
     && mkdir -p /root/commandhistory \
@@ -62,10 +62,10 @@ ENV DEVCONTAINER="TRUE"
 # Install docker used by go releaser
 RUN bash -c "cd /tmp && curl -fsSLO https://download.docker.com/linux/static/stable/x86_64/docker-19.03.5.tgz && tar --strip-components=1 -xvzf docker-19.03.5.tgz -C /usr/local/bin"
 
-# Install mdspell 
+# Install mdspell
 RUN \
-    apt-get install -y nodejs npm \
-    && npm i markdown-spellcheck -g
+    apt-get install --no-install-recommends -y nodejs npm \
+    && npm i markdown-spellcheck -g && npm cache clean --force; && rm -rf /var/lib/apt/lists/*;
 
 # Install Go tools
 RUN \
@@ -89,26 +89,26 @@ RUN echo "alias go=richgo" >> "/root/.bashrc"
 
 ARG TERRAFORM_VERSION=0.12.26
 RUN \
-    # Install Terraform
+
     mkdir -p /tmp/docker-downloads \
-    && curl -sSL -o /tmp/docker-downloads/terraform.zip https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip \
+    && curl -f -sSL -o /tmp/docker-downloads/terraform.zip https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip \
     && unzip /tmp/docker-downloads/terraform.zip \
     && mv terraform /usr/local/bin
 
 # Install KIND
 RUN \
-    curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.8.1/kind-$(uname)-amd64 \
+    curl -f -Lo ./kind https://kind.sigs.k8s.io/dl/v0.8.1/kind-$(uname)-amd64 \
     && chmod +x ./kind \
     && mv ./kind /usr/local/bin/kind
 
-# Install Kubectl 
+# Install Kubectl
 RUN \
-    curl -LO https://storage.googleapis.com/kubernetes-release/release/v1.18.0/bin/linux/amd64/kubectl \
+    curl -f -LO https://storage.googleapis.com/kubernetes-release/release/v1.18.0/bin/linux/amd64/kubectl \
     && chmod +x ./kubectl \
     && mv ./kubectl /usr/local/bin/kubectl
 
 # Install Ngrok
 RUN \
-    curl -LO https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-amd64.zip \
+    curl -f -LO https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-amd64.zip \
     && unzip ./ngrok-stable-linux-amd64.zip \
     && mv ngrok /usr/local/bin
\ No newline at end of file