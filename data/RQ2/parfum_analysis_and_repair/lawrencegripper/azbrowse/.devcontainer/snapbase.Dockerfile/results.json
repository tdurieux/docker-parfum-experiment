{
  "startTime": 1674246365756,
  "endTime": 1674246366533,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 140
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 14,
        "columnEnd": 96
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 144
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 14,
        "columnEnd": 98
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 144
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 14,
        "columnEnd": 98
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 164
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 14,
        "columnEnd": 115
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 52,
        "columnEnd": 92
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 52,
        "columnEnd": 92
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 20
      }
    }
  ],
  "repairedDockerfile": "ARG RISK=stable\nARG UBUNTU=xenial\n\nFROM ubuntu:$UBUNTU as builder\nARG RISK\nARG UBUNTU\nRUN echo \"Building snapcraft:$RISK in ubuntu:$UBUNTU\"\n\n# Grab dependencies\nRUN apt-get update\nRUN apt-get dist-upgrade --yes\nRUN apt-get install --no-install-recommends --yes \\\n      curl \\\n      jq \\\n      squashfs-tools && rm -rf /var/lib/apt/lists/*;\n\n# Grab the core snap (for backwards compatibility) from the stable channel and\n# unpack it in the proper place.\nRUN curl -f -L $( curl -f -H 'X-Ubuntu-Series: 16' 'https://api.snapcraft.io/api/v1/snaps/details/core' | jq '.download_url' -r) --output core.snap\nRUN mkdir -p /snap/core\nRUN unsquashfs -d /snap/core/current core.snap\n\n# Grab the core18 snap (which snapcraft uses as a base) from the stable channel\n# and unpack it in the proper place.\nRUN curl -f -L $( curl -f -H 'X-Ubuntu-Series: 16' 'https://api.snapcraft.io/api/v1/snaps/details/core18' | jq '.download_url' -r) --output core18.snap\nRUN mkdir -p /snap/core18\nRUN unsquashfs -d /snap/core18/current core18.snap\n\n# Grab the core20 snap (which snapcraft uses as a base) from the stable channel\n# and unpack it in the proper place.\nRUN curl -f -L $( curl -f -H 'X-Ubuntu-Series: 16' 'https://api.snapcraft.io/api/v1/snaps/details/core20' | jq '.download_url' -r) --output core20.snap\nRUN mkdir -p /snap/core20\nRUN unsquashfs -d /snap/core20/current core20.snap\n\n# Grab the snapcraft snap from the $RISK channel and unpack it in the proper\n# place.\nRUN curl -f -L $( curl -f -H 'X-Ubuntu-Series: 16' 'https://api.snapcraft.io/api/v1/snaps/details/snapcraft?channel='$RISK | jq '.download_url' -r) --output snapcraft.snap\nRUN mkdir -p /snap/snapcraft\nRUN unsquashfs -d /snap/snapcraft/current snapcraft.snap\n\n# Fix Python3 installation: Make sure we use the interpreter from\n# the snapcraft snap:\nRUN unlink /snap/snapcraft/current/usr/bin/python3\nRUN ln -s /snap/snapcraft/current/usr/bin/python3.* /snap/snapcraft/current/usr/bin/python3\nRUN echo /snap/snapcraft/current/lib/python3.*/site-packages >> /snap/snapcraft/current/usr/lib/python3/dist-packages/site-packages.pth\n\n# Create a snapcraft runner (TODO: move version detection to the core of\n# snapcraft).\nRUN mkdir -p /snap/bin\nRUN echo \"#!/bin/sh\" > /snap/bin/snapcraft\nRUN snap_version=\"$(awk '/^version:/{print $2}' /snap/snapcraft/current/meta/snap.yaml | tr -d \\')\" && echo \"export SNAP_VERSION=\\\"$snap_version\\\"\" >> /snap/bin/snapcraft\nRUN echo 'exec \"$SNAP/usr/bin/python3\" \"$SNAP/bin/snapcraft\" \"$@\"' >> /snap/bin/snapcraft\nRUN chmod +x /snap/bin/snapcraft\n\n# Multi-stage build, only need the snaps from the builder. Copy them one at a\n# time so they can be cached.\nFROM ubuntu:$UBUNTU\nCOPY --from=builder /snap/core /snap/core\nCOPY --from=builder /snap/core18 /snap/core18\nCOPY --from=builder /snap/core20 /snap/core20\nCOPY --from=builder /snap/snapcraft /snap/snapcraft\nCOPY --from=builder /snap/bin/snapcraft /snap/bin/snapcraft\n\n# Generate locale and install dependencies.\nRUN apt-get update && apt-get dist-upgrade --yes && apt-get install --no-install-recommends --yes snapd sudo locales && locale-gen en_US.UTF-8 && rm -rf /var/lib/apt/lists/*;\n\n# Set the proper environment.\nENV LANG=\"en_US.UTF-8\"\nENV LANGUAGE=\"en_US:en\"\nENV LC_ALL=\"en_US.UTF-8\"\nENV PATH=\"/snap/bin:/snap/snapcraft/current/usr/bin:$PATH\"\nENV SNAP=\"/snap/snapcraft/current\"\nENV SNAP_NAME=\"snapcraft\"\nENV SNAP_ARCH=\"amd64\""
}