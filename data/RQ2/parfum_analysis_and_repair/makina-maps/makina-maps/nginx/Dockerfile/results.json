{
  "startTime": 1674256200999,
  "endTime": 1674256201624,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 83
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 133
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 1,
        "columnEnd": 34
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 38
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 1,
        "columnEnd": 34
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 38
      }
    }
  ],
  "repairedDockerfile": "# Script from https://gist.github.com/hermanbanken/96f0ff298c162a522ddbba44cad31081\n\n# nginx:alpine contains NGINX_VERSION environment variable, like so:\nARG NGINX_VERSION=1.20.1\n\n\n# Builder\n\n\nFROM nginx:${NGINX_VERSION}-alpine AS builder\n\n# Our ngx_cache_purge version\nENV NGX_CACHE_PURGE_VERSION=d1.1_n1.20.0\n\n# Download sources\nRUN curl -f \"https://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz\" -o nginx.tar.gz && \\\n    curl -f -L \"https://github.com/maa123/ngx_cache_purge/archive/refs/tags/${NGX_CACHE_PURGE_VERSION}.tar.gz\" -o ngx_cache_purge.tar.gz\n\n# For latest build deps, see https://github.com/nginxinc/docker-nginx/blob/master/mainline/alpine/Dockerfile\nRUN apk add --no-cache --virtual .build-deps \\\n    gcc \\\n    libc-dev \\\n    make \\\n    openssl-dev \\\n    pcre-dev \\\n    zlib-dev \\\n    linux-headers \\\n    curl \\\n    gnupg \\\n    libxslt-dev \\\n    gd-dev \\\n    geoip-dev\n\n# Reuse same cli arguments as the nginx:alpine image used to build\nRUN CONFARGS=$(nginx -V 2>&1 | sed -n -e 's/^.*arguments: //p') && \\\n    CONFARGS=${CONFARGS/-Os -fomit-frame-pointer/-Os} && \\\n    mkdir /usr/src && \\\n\ttar -zxC /usr/src -f nginx.tar.gz && \\\n    tar -xzvf \"ngx_cache_purge.tar.gz\" && \\\n    DIR=\"$(pwd)/ngx_cache_purge-${NGX_CACHE_PURGE_VERSION}\" && \\\n    cd /usr/src/nginx-$NGINX_VERSION && \\\n    sh -c \"./configure --with-compat $CONFARGS --add-dynamic-module=$DIR\" && \\\n    make && make install && rm -rf /usr/src\n\n\n# NGINX\n\n\nFROM nginx:${NGINX_VERSION}-alpine\n# Extract the dynamic module ngx_cache_purge from the builder image\nCOPY --from=builder /usr/lib/nginx/modules/ngx_http_cache_purge_module.so /usr/lib/nginx/modules/ngx_http_cache_purge_module.so\n\n#RUN apk update && \\\nRUN apk --no-cache add \\\n        bash \\\n        inotify-tools \\\n        jq \\\n        py3-pip \\\n        python3 && \\\n    pip install --no-cache-dir Jinja2\n\nCOPY run.sh /\nCOPY expire.sh /\nCOPY tile_multiplier.py /\n\nCMD [\"/run.sh\"]\n"
}