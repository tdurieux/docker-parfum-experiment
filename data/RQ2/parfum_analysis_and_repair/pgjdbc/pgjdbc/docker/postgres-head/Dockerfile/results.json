{
  "startTime": 1674255785417,
  "endTime": 1674255786178,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 57
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 22,
        "columnStart": 7,
        "columnEnd": 14
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 22,
        "columnStart": 7,
        "columnEnd": 14
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:20.04\n\nRUN export DEBIAN_FRONTEND=noninteractive \\\n    && apt-get update \\\n    && apt-get -y --no-install-recommends install \\\n    clang \\\n    bison \\\n    build-essential \\\n    dumb-init \\\n    flex \\\n    git \\\n    libperl-dev \\\n    libreadline-dev \\\n    libssl-dev \\\n    libxml2-dev \\\n    libxml2-utils \\\n    libxslt-dev \\\n    llvm \\\n    locales \\\n    python3-dev \\\n    tcl-dev \\\n    xsltproc \\\n    zlib1g-dev \\\n    && localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8 && rm -rf /var/lib/apt/lists/*;\n\nARG GIT_URL=\"https://github.com/postgres/postgres\"\nARG GIT_TAG=\"master\"\n# If specified, this allows us to help Docker cache the clone step\nARG GIT_SHA\n\nRUN mkdir -p /build/postgres \\\n    && git clone -b \"${GIT_TAG}\" --single-branch \"${GIT_URL}\" --depth 10 /build/postgres \\\n    && cd /build/postgres \\\n    && [ -z \"${GIT_SHA:-}\" ] || git reset --hard \"${GIT_SHA:-}\"\n\n# Default configure options that can be overridden with build arg\nARG CONFIGURE_OPTS=\" \\\n    --enable-debug \\\n    --enable-cassert \\\n    --with-llvm \\\n    --with-tcl \\\n    --with-perl \\\n    --with-python \\\n    --with-ssl=openssl \\\n    --with-libxml \\\n    \"\n# Additional configure options to append to defaults\nARG CONFIGURE_ADD_OPTS\n\nWORKDIR /build/postgres\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" ${CONFIGURE_OPTS} ${CONFIGURE_ADD_OPTS:-}\nARG MAKE_OPTS=\"-j 8\"\nARG MAKE_ADD_OPTS\nRUN make ${MAKE_OPTS} ${MAKE_ADD_OPTS}\nRUN make install\n\nARG MAKE_CONTRIB_OPTS\nARG MAKE_ADD_OPTS\n\nWORKDIR /build/postgres/contrib\nRUN make ${MAKE_CONTRIB_OPTS:-${MAKE_OPTS}} ${MAKE_CONTRIB_ADD_OPTS}\nRUN make install\n\nENV LANG en_US.utf8\nENV GIT_SHA=$GIT_SHA\nENV GIT_TAG=$GIT_TAG\nENV PATH $PATH:/usr/local/pgsql/bin\nENV PGDATA /var/lib/postgresql/data\n\n# explicitly set user/group IDs\nRUN set -eux; \\\n    groupadd -r postgres --gid=999; \\\n    useradd -r -g postgres --uid=999 --home-dir=/var/lib/postgresql --shell=/bin/bash postgres; \\\n    mkdir -p /var/lib/postgresql; \\\n    chown -R postgres:postgres /var/lib/postgresql; \\\n    mkdir -p \"$PGDATA\" ; \\\n    chown -R postgres:postgres \"$PGDATA\"\n\nUSER postgres\nADD scripts/entrypoint.sh /\nENTRYPOINT [\"/usr/bin/dumb-init\", \"--\"]\nCMD [ \"/entrypoint.sh\" ]\n"
}