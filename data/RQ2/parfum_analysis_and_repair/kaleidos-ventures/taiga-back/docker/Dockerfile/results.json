{
  "startTime": 1674254055624,
  "endTime": 1674254056787,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 32,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 12
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# This Source Code Form is subject to the terms of the Mozilla Public\n# License, v. 2.0. If a copy of the MPL was not distributed with this\n# file, You can obtain one at http://mozilla.org/MPL/2.0/.\n#\n# Copyright (c) 2021-present Kaleidos Ventures SL\n\nFROM python:3.7-slim\nLABEL maintainer=\"support@taiga.io\"\n\n# Avoid prompting for configuration\nENV DEBIAN_FRONTEND=noninteractive\n\nENV PYTHONUNBUFFERED=1\nENV PYTHONDONTWRITEBYTECODE=1\nENV PYTHONFAULTHANDLER=1\n\n# Use a virtualenv\nRUN python -m venv /opt/venv\nENV PATH=\"/opt/venv/bin:$PATH\"\n\n# Get the code\nCOPY . /taiga-back\nWORKDIR /taiga-back\n\n# grab gosu for easy step-down from root\n# https://github.com/tianon/gosu/blob/master/INSTALL.md\nENV GOSU_VERSION 1.12\n\nRUN set -eux; \\\n    savedAptMark=\"$(apt-mark showmanual)\"; \\\n    apt-get update; \\\n    # install system dependencies\n    apt-get install --no-install-recommends -y \\\n       build-essential \\\n       gettext \\\n       libpq-dev \\\n       git \\\n       net-tools \\\n       procps \\\n       wget; \\\n    # install gosu\n    apt-get install -y --no-install-recommends ca-certificates wget; \\\n    dpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\"; \\\n    wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\"; \\\n\twget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\"; \\\n    chmod +x /usr/local/bin/gosu; \\\n    # verify gosu signature\n    export GNUPGHOME=\"$(mktemp -d)\"; \\\n\tgpg --batch --keyserver hkps://keys.openpgp.org --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4; \\\n\tgpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu; \\\n\tcommand -v gpgconf && gpgconf --kill all || :; \\\n\trm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc; \\\n    # install Taiga dependencies\n    python -m pip install --upgrade pip; \\\n    python -m pip install wheel; \\\n    python -m pip install -r requirements.txt; \\\n    python -m pip install -r requirements-contribs.txt; \\\n    python manage.py compilemessages; \\\n    python manage.py collectstatic --no-input; \\\n    chmod +x docker/entrypoint.sh; \\\n    chmod +x docker/async_entrypoint.sh; \\\n    cp docker/config.py settings/config.py; \\\n    #  create taiga group and user to use it and give permissions over the code (in entrypoint)\n    groupadd --system taiga --gid=999; \\\n    useradd --system --no-create-home --gid taiga --uid=999 --shell=/bin/bash taiga; \\\n    mkdir -p /taiga-back/media/exports; \\\n    chown -R taiga:taiga /taiga-back; \\\n    # remove unneeded files and packages\n    apt-get purge -y \\\n       build-essential \\\n       gettext \\\n       libpq-dev \\\n       git; \\\n    apt-get autoremove -y; \\\n    rm -rf /var/lib/apt/lists/*; \\\n    rm -rf /root/.cache; \\\n    # clean gosu\n    apt-mark auto '.*' > /dev/null; \\\n    [ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark; \\\n\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \\\n    # clean taiga\n    rm requirements.txt; \\\n    rm requirements-contribs.txt; \\\n    find . -name '__pycache__' -exec rm -r '{}' +; \\\n    find . -name '*pyc' -exec rm -r '{}' +; \\\n    find . -name '*po' -exec rm -r '{}' +\n\nENV DJANGO_SETTINGS_MODULE=settings.config\n\nEXPOSE 8000\nENTRYPOINT [\"./docker/entrypoint.sh\"]\n"
}