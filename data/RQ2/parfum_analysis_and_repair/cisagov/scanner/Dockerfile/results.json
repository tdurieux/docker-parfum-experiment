{
  "startTime": 1674216741974,
  "endTime": 1674216742773,
  "originalSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 27,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 27,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 23
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "###\n# Install everything we need\n###\nFROM python:3.6-slim-buster AS install\nLABEL maintainer=\"jeremy.frasier@trio.dhs.gov\"\nLABEL organization=\"CISA Cyber Assessments\"\nLABEL url=\"https://github.com/cisagov/scanner\"\n\nENV HOME=/home/scanner\nENV USER=scanner\n\n###\n# Dependencies\n#\n# We need redis-tools so we can use redis-cli to communicate with\n# redis.\n#\n# Install dependencies are only needed for software installation and\n# will be removed at the end of the build process.\n###\nENV DEPS \\\n    bash \\\n    redis-tools\nENV INSTALL_DEPS \\\n    git\nRUN apt-get update --quiet --quiet && apt-get install --quiet --quiet --yes \\\n    --no-install-recommends --no-install-suggests \\\n    $DEPS $INSTALL_DEPS && rm -rf /var/lib/apt/lists/*;\nRUN apt-get upgrade --quiet --quiet\n\n\n\n\n###\n# Make sure pip and setuptools are the latest versions.\n#\n# Note that we use pip --no-cache-dir to avoid writing to a local\n# cache.  This results in a smaller final image, at the cost of\n# slightly longer install times.\n###\nRUN pip install --no-cache-dir --upgrade pip setuptools\n\n###\n# We're using Lambda, but we need to install pshtt locally because the\n# pshtt.py and sslyze.py files in the scanners directory of\n# 18F/domain-scan import pshtt and sslyze, respectively, at the top of\n# the file.  (trustymail imports only in the scan function, so it\n# isn't required here.)\n###\nRUN pip install --no-cache-dir --upgrade pshtt==0.6.6\n\n###\n# Install domain-scan\n###\nRUN git clone https://github.com/18F/domain-scan \\\n    ${HOME}/domain-scan/\nRUN pip install --no-cache-dir --upgrade \\\n    --requirement ${HOME}/domain-scan/requirements.txt\n\n###\n# Remove install dependencies\n###\nRUN apt-get remove --quiet --quiet $INSTALL_DEPS\n\n###\n# Clean up aptitude cruft\n###\nRUN apt-get --quiet --quiet clean\nRUN rm -rf /var/lib/apt/lists/*\n\n\n###\n# Setup the user and its home directory\n###\nFROM install AS setup_user\n\n###\n# Create unprivileged user\n###\nRUN groupadd -r $USER\nRUN useradd -r -c \"$USER user\" -g $USER $USER\n\n# Put this just before we change users because the copy (and every\n# step after it) will always be rerun by docker, but we need to be\n# root for the chown command.\nCOPY . $HOME\nRUN chown -R ${USER}:${USER} $HOME\n\n\n###\n# Setup working directory and entrypoint\n###\nFROM setup_user AS final\n\n###\n# Prepare to Run\n###\n# Right now we need to be root at runtime in order to create files in\n# /home/shared\n# USER ${USER}:${USER}\nWORKDIR $HOME\nENTRYPOINT [\"./scan.sh\"]\n"
}