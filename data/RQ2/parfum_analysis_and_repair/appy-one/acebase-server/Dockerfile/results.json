{
  "startTime": 1674248641719,
  "endTime": 1674248644081,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# experimenting running in docker container.\n# WARNING: running 1 instance is currently supported per db, running multiple will corrupt your data!\n# To build a docker image, execute:\n# docker build -t acebase-server .\n# To run:\n# docker volume create acebase-server-data\n# docker run --name MyAceBaseServer1 -p 3000:3000 -p 4000:4000 -v acebase-server-data:/default.acebase acebase-server\n\nFROM node:10-alpine\nWORKDIR /app\nCOPY package.json .\nRUN npm install && npm cache clean --force;\nCOPY src ./src\n\n# Initialize build arguments passed to docker build --build-arg DBNAME=data ...\nARG DBNAME=\"data\"\nARG PORT=3000\nARG CLUSTER_PORT=4000\nARG HOST=\"0.0.0.0\"\nARG DBPATH=\".\"\n\n# Set defaults for runtime environment variables, can be overriden by: docker run --env DBNAME=mydb ...\nENV DBNAME=${DBNAME} HOST=${HOST} PORT=${PORT} CLUSTER_PORT=${CLUSTER_PORT} DBPATH=${DBPATH}\n\n# Start server without arguments, environment variables will be used\nCMD [\"node\", \"src/start.js\"]\n"
}