{
  "startTime": 1674254425235,
  "endTime": 1674254425979,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 7,
        "columnEnd": 18
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 7,
        "columnEnd": 78
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 25
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM golang:1.17-alpine AS go\nFROM ethereum/client-go:alltools-v1.10.7 AS ethereum\n\nFROM node:16.2.0-alpine AS builder\n\nCOPY --from=ethereum /usr/local/bin/abigen /usr/local/bin/\nCOPY --from=go /usr/local/go/ /usr/local/go/\n\n## Attaching current dir to workdir\nWORKDIR /app\nCOPY . /app\n\n## Install and Cleanup\n\nRUN PATH=\"/usr/local/go/bin:${PATH}\" \\\n    && apk add --update --no-cache python3 && ln -sf python3 /usr/bin/python \\\n    && apk add --no-cache --update make gcc musl musl-dev g++ libc-dev bash linux-headers \\\n    && apk add --no-cache jq \\\n    && npm install \\\n    && npm run build-noargs \\\n    && cp build/bin/razor /usr/local/bin/ && npm cache clean --force;\n\n\nFROM alpine:latest\nRUN apk add --no-cache --update bash\nCOPY --from=builder /usr/local/bin/razor /usr/local/bin/\nENTRYPOINT [ \"razor\" ]\n"
}