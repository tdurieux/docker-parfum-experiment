{
  "startTime": 1674250834519,
  "endTime": 1674250834986,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 82
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 10,
        "columnEnd": 57
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 27
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright 2020 The Kythe Authors. All rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# docker build -t gcr.io/kythe-repo/pre-commit .\nFROM ubuntu:focal\n\nRUN apt-get update \\\n        && apt-get upgrade -y \\\n        && apt-get install -y --no-install-recommends \\\n                curl ca-certificates \\\n                # pre-commit dependencies\n                python3 python3-dev python3-pip \\\n                # Linter dependencies\n                golang-go shellcheck clang-format-11 openjdk-11-jre-headless git \\\n        && apt-get clean \\\n        && rm -rf /var/lib/apt/lists/*\n\n# Make clang-format-11 the default\nRUN update-alternatives \\\n      --install /usr/bin/clang-format clang-format /usr/bin/clang-format-11    100\n\n# Install pip-packages\nRUN pip3 install --no-cache-dir --upgrade pip \\\n && pip3 install --no-cache-dir pre-commit\n\n# Install extra linters\nRUN go get github.com/bazelbuild/buildtools/buildifier \\\n && go get golang.org/x/lint/golint \\\n && go get honnef.co/go/tools/cmd/staticcheck\n\n# Fetch the latest version of google-java-format from GitHub\nRUN curl -f -s https://api.github.com/repos/google/google-java-format/releases/latest \\\n        | sed -n '/browser_download_url/s/[^:]*:[^\"]*\\(\"[^\"]*\"\\).*/url = \\1/p' \\\n        | egrep 'google-java-format-[^-]*-all-deps.jar' \\\n        | curl -f -L -o /usr/bin/google-java-format.jar -K - \\\n        && /bin/echo -e '#!/bin/sh\\nexec java -jar /usr/bin/google-java-format.jar \"$@\"' >/usr/bin/google-java-format \\\n        && chmod +x /usr/bin/google-java-format\n\n# Fetch the rustup installer and install the nightly standard toolchain.\n# We can't rely on the default $HOME for these as they differ between container build\n# ($HOME=/root) and GCB ($HOME=/builder/home).\nENV RUSTUP_HOME=/root/.rustup\nENV CARGO_HOME=/root/.cargo\nRUN curl -o /tmp/rustup.sh --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs && \\\n        /bin/bash /tmp/rustup.sh --default-toolchain nightly --profile default -y && \\\n        rm /tmp/rustup.sh\n\n# Install go wrapper script\nADD go /usr/local/bin/go\nENV PATH=$PATH:/root/go/bin:$CARGO_HOME/bin\nENTRYPOINT [\"pre-commit\"]\n"
}