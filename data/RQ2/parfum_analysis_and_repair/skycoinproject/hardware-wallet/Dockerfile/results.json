{
  "startTime": 1674246314286,
  "endTime": 1674246315805,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 8
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 8
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 43
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 70
      }
    }
  ],
  "repairedDockerfile": "FROM debian:9\n\nARG OS_NAME=linux\nENV OS_NAME=$OS_NAME\n\n# install build tools and dependencies\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y \\\n    build-essential \\\n    curl \\\n    unzip \\\n    python3 \\\n    python3-pip \\\n    python-protobuf \\\n    wget \\\n    libusb-1.0.0-dev \\\n    cmake \\\n    udev \\\n    git \\\n    sudo && rm -rf /var/lib/apt/lists/*;\n\nRUN python3 -m pip uninstall pip && \\\n    apt-get install -y --no-install-recommends python3-pip --reinstall && rm -rf /var/lib/apt/lists/*;\n\n# download toolchain\n\nENV TOOLCHAIN_SHORTVER=6-2017q2\nENV TOOLCHAIN_LONGVER=gcc-arm-none-eabi-6-2017-q2-update\nENV TOOLCHAIN_URL=https://developer.arm.com/-/media/Files/downloads/gnu-rm/$TOOLCHAIN_SHORTVER/$TOOLCHAIN_LONGVER-$OS_NAME.tar.bz2\n\n# extract toolchain\n\nRUN cd /opt && \\\n    wget $TOOLCHAIN_URL && \\\n    tar xfj $TOOLCHAIN_LONGVER-$OS_NAME.tar.bz2 && rm $TOOLCHAIN_LONGVER-$OS_NAME.tar.bz2\n\n# download protobuf\n\nENV PROTOBUF_VERSION=3.6.1\nRUN wget \"https://github.com/google/protobuf/releases/download/v${PROTOBUF_VERSION}/protoc-${PROTOBUF_VERSION}-linux-x86_64.zip\"\n\nENV STLINK_VERSION=1.5.0\nRUN wget \"https://github.com/texane/stlink/archive/v${STLINK_VERSION}.zip\"\n\n# setup toolchain\n\nENV PATH=/opt/$TOOLCHAIN_LONGVER/bin:$PATH\n\nENV PYTHON=python3\nENV PIP=pip3\nENV LC_ALL=C.UTF-8 LANG=C.UTF-8\nENV TZ=UTC\nRUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone\n\n# use zipfile module to extract files world-readable\nRUN $PYTHON -m zipfile -e \"protoc-${PROTOBUF_VERSION}-linux-x86_64.zip\" /usr/local && \\\n    chmod 755 /usr/local/bin/protoc\nRUN $PYTHON -m zipfile -e \"v1.5.0.zip\" /tmp && \\\n    cd /tmp/stlink-1.5.0 && \\\n    make release && \\\n    cd build/Release && \\\n    make install && \\\n    ldconfig\n\nRUN useradd -m user\nUSER user\n\nRUN $PYTHON -m pip install --user \"protobuf==3.6.1\" ecdsa \"setuptools==49.6.0\"\n"
}