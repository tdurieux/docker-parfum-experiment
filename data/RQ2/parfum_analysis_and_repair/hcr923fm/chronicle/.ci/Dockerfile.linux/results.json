{
  "startTime": 1674218715571,
  "endTime": 1674218716195,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 176
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 176
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 176
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM gcc:latest\n\nRUN apt-get update -qq && apt-get install --no-install-recommends libncurses5-dev libsndfile1-dev libasound2 libasound2-dev libflac-dev libvorbis-dev libogg-dev git python libtool libtool-bin wget libmp3lame-dev zip -qq -y && rm -rf /var/lib/apt/lists/*;\nRUN apt-get upgrade build-essential -qq\n\n\nRUN wget https://github.com/Kitware/CMake/releases/download/v3.15.2/cmake-3.15.2-Linux-x86_64.tar.gz\nRUN tar xf cmake-3.15.2-Linux-x86_64.tar.gz && rm cmake-3.15.2-Linux-x86_64.tar.gz\nRUN cp -r cmake-3.15.2-Linux-x86_64/* /\n\nWORKDIR ~\nRUN git clone https://github.com/Microsoft/vcpkg.git /usr/local/vcpkg\nWORKDIR /usr/local/vcpkg\nRUN ./bootstrap-vcpkg.sh\nRUN chmod +x vcpkg\nRUN ./vcpkg install boost-filesystem boost-program-options spdlog rtaudio\n\n# RUN wget https://dl.bintray.com/boostorg/release/1.71.0/source/boost_1_71_0.tar.gz\n# RUN tar xf boost_1_71_0.tar.gz\n# WORKDIR boost_1_71_0\n# RUN ./bootstrap.sh --with-libraries=system,filesystem,program_options\n# RUN ./b2 install\n\n# WORKDIR ..\n# RUN wget https://github.com/gabime/spdlog/archive/v1.8.0.tar.gz\n# RUN tar xf v1.8.0.tar.gz\n\n# WORKDIR spdlog-1.8.0\n# RUN mkdir -p __build\n# WORKDIR  __build\n# RUN cmake .. -DSPDLOG_BUILD_EXAMPLES=OFF -DSPDLOG_BUILD_BENCH=OFF -DSPDLOG_BUILD_TESTS=OFF\n# RUN make -j\n# RUN make install\n"
}