{
  "startTime": 1674248927904,
  "endTime": 1674248929312,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 4,
        "columnEnd": 26
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM golang:1.14 AS build-env\nRUN apt-get update -y && apt-get install --no-install-recommends -y zip && rm -rf /var/lib/apt/lists/*;\nRUN go get -u github.com/go-bindata/go-bindata/...\nADD . /src\nRUN cd /src && make build\n\nFROM alpine:latest\nCOPY --from=build-env /src/artifacts/server/linux/awslambdaproxy /app/\n\nENV AWS_ACCESS_KEY_ID=\nENV AWS_SECRET_ACCESS_KEY=\nENV LAMBDA_NAME=\nENV LAMBDA_IAM_ROLE_NAME=\nENV REGIONS=\nENV FREQUENCY=\nENV MEMORY=\nENV SSH_USER=\nENV SSH_PORT=2222\nENV LISTENERS=\nENV DEBUG=\nENV DEBUG_PROXY=\nENV BYPASS=\n\nWORKDIR /app\n\nRUN addgroup -g 1000 -S ssh \\\n && adduser -u 1000 -S ssh -G ssh \\\n && apk add --no-cache openssh-server bash ca-certificates \\\n && rm -rf /var/cache/apk/*\n\nUSER ssh\n\nRUN mkdir ${HOME}/.ssh\n\nEXPOSE 2222\nEXPOSE 8080\n\nCOPY build/docker/sshd_config /etc/ssh/sshd_config\nCOPY build/docker/entrypoint.sh /entrypoint.sh\n\nENTRYPOINT [\"/entrypoint.sh\"]"
}