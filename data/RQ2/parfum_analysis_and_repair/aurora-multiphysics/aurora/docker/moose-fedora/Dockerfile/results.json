{
  "startTime": 1674219221979,
  "endTime": 1674219222848,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 4,
        "columnEnd": 73
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# To make use of multiple cores during the compile stages of the docker build\n# docker build -t aurora-deps-ubuntu --build-arg compile_cores=8 .\n\n# Start from Fedora\nFROM fedora:33\n\n# By default one core is used to compile\nARG compile_cores=1\n\nRUN echo \"Building with $compile_cores cores\"\n\n# Get the packages we need\nRUN dnf -y install cmake \\\n    git gcc gcc-c++ gcc-gfortran \\\n    hdf5-devel blas-devel lapack-devel \\\n    wget eigen3-devel \\\n    openmpi-devel mpich mpich-devel \\\n    autoconf automake libtool vim emacs \\\n    bison flex bison-devel flex-devel \\\n    python3 python3-devel libtirpc libtirpc-devel\n\n#  Set environment vars\nENV MPI_BIN /usr/lib64/mpich/bin\nENV MPI_SYSCONFIG /etc/mpich-x86_64\nENV MPI_FORTRAN_MOD_DIR /usr/lib64/gfortran/modules/mpich\nENV MPI_INCLUDE /usr/include/mpich-x86_64\nENV MPI_LIB /usr/lib64/mpich/lib\nENV MPI_MAN /usr/share/man/mpich-x86_64\nENV MPI_PYTHON_SITEARCH %{python2_sitearch}/mpich\nENV MPI_PYTHON2_SITEARCH %{python2_sitearch}/mpich\nENV MPI_PYTHON3_SITEARCH /usr/lib64/python3.9/site-packages/mpich\nENV MPI_COMPILER mpich-x86_64\nENV MPI_SUFFIX _mpich\nENV MPI_HOME /usr/lib64/mpich\nENV PATH /usr/lib64/mpich/bin:$PATH\nENV LD_LIBRARY_PATH /usr/lib64/mpich/lib:$LD_LIBRARY_PATH\nENV MANPATH /usr/share/man/mpich-x86_64\nENV PKG_CONFIG_PATH /usr/lib64/mpich/lib/pkgconfig\nENV CC=mpicc\nENV CXX=mpicxx\nENV F90=mpif90\nENV F77=mpif77\nENV FC=mpif90\nENV MOOSE_JOBS=\"$compile_cores\"\n\n# Get MOOSE source\nRUN cd /home/ && \\\n    git clone https://github.com/idaholab/moose.git && \\\n    cd moose && \\\n    git checkout master\n\n# Make PETSC\nRUN cd /home/moose &&  \\\n    ./scripts/update_and_rebuild_petsc.sh --prefix=/home/petsc\nENV PETSC_DIR=/home/petsc\n\n# Make libMesh\nRUN cd /home/moose && \\\n    ./scripts/update_and_rebuild_libmesh.sh --with-mpi\n\n# Make MOOSE framework\nRUN cd /home/moose/ && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-derivative-size=200 --with-ad-indexing-type=global && \\\n    cd test && \\\n    make -j\"$compile_cores\" && \\\n     ./run_tests -j\"$compile_cores\"\nENV MOOSE_DIR=/home/moose\n\n# Make MOOSE modules\nRUN cd /home/moose/modules && \\\n    make -j\"$compile_cores\"  && \\\n    ./run_tests -j\"$compile_cores\"\n\n"
}