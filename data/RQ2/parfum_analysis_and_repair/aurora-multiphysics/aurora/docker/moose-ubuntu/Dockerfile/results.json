{
  "startTime": 1674248795541,
  "endTime": 1674248796854,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 15,
        "columnStart": 22,
        "columnEnd": 8
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 17
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 17
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 15,
        "columnStart": 22,
        "columnEnd": 8
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 17
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 17
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:20.04\n# Basic environment\nENV DEBIAN_FRONTEND=noninteractive\nENV TZ=Europe/London\nRUN apt-get update && apt-get -y --no-install-recommends install \\\n    cmake \\\n    gcc \\\n    g++ \\\n    gfortran \\\n    git \\\n    libopenmpi3 \\\n    python3 \\\n    python3-dev \\\n    python3-distutils \\\n    python-is-python3 \\\n    wget && rm -rf /var/lib/apt/lists/*;\n# PETSC dependencies\nRUN apt-get -y --no-install-recommends install \\\n    bison \\\n    flex \\\n    libblas-dev \\\n    liblapack-dev && rm -rf /var/lib/apt/lists/*;\n# MPI environment variables\nENV CC=mpicc\nENV CXX=mpicxx\nENV F90=mpif90\nENV F77=mpif77\nENV FC=mpif90\n# Get MOOSE source code\nRUN cd /home/ && \\\n    git clone https://github.com/idaholab/moose.git && \\\n    cd moose && \\\n    git checkout master\nENV MOOSE_JOBS=4\n# Make PETSC\nRUN cd /home/moose && \\\n    ./scripts/update_and_rebuild_petsc.sh --prefix=/home/petsc\nENV PETSC_DIR=/home/petsc\n# Make libMesh\nRUN cd /home/moose && \\\n    ./scripts/update_and_rebuild_libmesh.sh --with-mpi\n# Make MOOSE framework\nRUN cd /home/moose/ && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-derivative-size=200 --with-ad-indexing-type=global && \\\n    cd test && \\\n    make -j4\n# This is needed or it mpiexec complains because docker runs as root\n# Discussion on this issue https://github.com/open-mpi/ompi/issues/4451\nENV OMPI_ALLOW_RUN_AS_ROOT=1\nENV OMPI_ALLOW_RUN_AS_ROOT_CONFIRM=1\nRUN cd /home/moose/test && \\\n    ./run_tests -j 4\nENV MOOSE_DIR=/home/moose\n# Make MOOSE modules\nRUN cd /home/moose/modules && \\\n    make -j4  && \\\n    ./run_tests -j 4\n# Unset these variables we set before\nENV OMPI_ALLOW_RUN_AS_ROOT=\nENV OMPI_ALLOW_RUN_AS_ROOT_CONFIRM="
}