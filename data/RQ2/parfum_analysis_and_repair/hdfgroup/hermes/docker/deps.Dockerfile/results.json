{
  "startTime": 1674249706234,
  "endTime": 1674249707020,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 11
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 11
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 11
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:20.04\n\nENV USER=hermes\nRUN useradd -ms /bin/bash $USER\nRUN su - $USER -c \"touch me\"\n\nRUN apt-get update -q --fix-missing && \\\n    apt-get install --no-install-recommends -yq gcc g++ && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get install --no-install-recommends -y sudo && rm -rf /var/lib/apt/lists/*;\nRUN echo \"${USER} ALL=(root) NOPASSWD:ALL\" > /etc/sudoers.d/$USER && \\\n    chmod 0440 /etc/sudoers.d/$USER\n\nRUN cat /etc/sudoers.d/$USER\n\nRUN DEBIAN_FRONTEND=\"noninteractive\" apt-get install -y --no-install-recommends \\\n    autoconf \\\n    automake \\\n    ca-certificates \\\n    curl \\\n    environment-modules \\\n    git \\\n    build-essential \\\n    python \\\n    python-dev \\\n    python3-dev \\\n    vim \\\n    sudo \\\n    unzip \\\n    cmake \\\n    lcov \\\n    zlib1g-dev \\\n    libsdl2-dev \\\n    gfortran \\\n    graphviz \\\n    doxygen && rm -rf /var/lib/apt/lists/*;\n\nUSER $USER\n\nRUN sudo apt-get update -q\n\nENV HOME=/home/$USER\n\nENV PROJECT=$HOME/source\nENV INSTALL_DIR=$HOME/install\nENV SPACK_DIR=$HOME/spack\nENV MOCHI_DIR=$HOME/mochi\n\nRUN echo $INSTALL_DIR && mkdir -p $INSTALL_DIR\n\nRUN git clone https://github.com/spack/spack ${SPACK_DIR}\nRUN git clone https://github.com/mochi-hpc/mochi-spack-packages.git ${MOCHI_DIR}\nRUN git clone https://github.com/HDFGroup/hermes ${PROJECT}\n\nENV spack=${SPACK_DIR}/bin/spack\n\nRUN . ${SPACK_DIR}/share/spack/setup-env.sh\n\nRUN $spack repo add ${MOCHI_DIR}\nRUN $spack repo add $PROJECT/ci/hermes\n\nRUN $spack compiler find\n\nRUN $spack compiler list\n\nENV HERMES_VERSION=master\n\nENV HERMES_SPEC=\"hermes@${HERMES_VERSION}\"\nRUN $spack install --only dependencies ${HERMES_SPEC}\n\nRUN echo \"export PATH=${SPACK_DIR}/bin:$PATH\" >> /home/$USER/.bashrc\nRUN echo \". ${SPACK_DIR}/share/spack/setup-env.sh\" >> /home/$USER/.bashrc\n\nENV PATH=${INSTALL_DIR}/bin:$PATH\n\nWORKDIR $HOME\n"
}