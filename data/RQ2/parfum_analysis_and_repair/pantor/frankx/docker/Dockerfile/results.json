{
  "startTime": 1674219684424,
  "endTime": 1674219685139,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 22
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright (c) 2020, Danish Technological Institute.\n# All rights reserved.\n#\n# This source code is licensed under the GNU-style license found in the\n# LICENSE file in the root directory of this source tree.\n#\n# Original author: Nicolai Anton Lynnerup <nily@dti.dk>\n\nFROM ubuntu:20.04\n\nLABEL maintainer=\"Nicolai Anton Lynnerup <nily@dti.dk> & Lars Berscheid <lars.berscheid@kit.edu>\"\n\n# Set working directory\n\nRUN mkdir -p /code\nWORKDIR /code\n\n# ------------ #\n# Install deps #\n# ------------ #\n\nENV DEBIAN_FRONTEND=noninteractive\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n    git \\\n    build-essential \\\n    cmake \\\n    wget \\\n    iputils-ping \\\n    python3-dev \\\n    python3-pip \\\n    python3-setuptools \\\n    # Poco for libfranka \\\n    libpoco-dev \\\n    # Clear cache\n    && rm -rf /var/lib/apt/lists/*\n\nRUN pip3 install --no-cache-dir numpy\n\n# -------------- #\n# Install Eigen3 #\n# -------------- #\n\nRUN git clone https://github.com/eigenteam/eigen-git-mirror.git \\\n    && cd eigen-git-mirror \\\n    && git checkout 3.3.7 \\\n    && mkdir build && cd build \\\n    && cmake .. \\\n    && make install\n\n# -------------- #\n# Install Franka #\n# -------------- #\n\nARG libfranka_version=0.7.0\n\nRUN git clone --recursive https://github.com/frankaemika/libfranka.git \\\n    && cd libfranka \\\n    && git checkout $libfranka_version \\\n    && git submodule update \\\n    && mkdir build && cd build \\\n    && cmake -DBUILD_EXAMPLES=ON .. \\\n    && make -j$(nproc) \\\n    && make install\n\n# ---------------- #\n# Install PyBind11 #\n# ---------------- #\n\nRUN git clone https://github.com/pybind/pybind11.git \\\n    && cd pybind11 \\\n    && git checkout v2.6 \\\n    && mkdir build && cd build \\\n    && cmake -DPYBIND11_TEST=OFF .. \\\n    && make -j$(nproc) \\\n    && make install\n\n# ---------------- #\n# Install Catch2   #\n# ---------------- #\n\nRUN git clone https://github.com/catchorg/Catch2.git \\\n    && cd Catch2 \\\n    && git checkout v2.5.0 \\\n    && mkdir build && cd build \\\n    && cmake -DCATCH_BUILD_TESTING=OFF -DCATCH_ENABLE_WERROR=OFF -DCATCH_INSTALL_DOCS=OFF -DCATCH_INSTALL_HELPERS=OFF .. \\\n    && make install\n\n# ---------------- #\n# Build frankx     #\n# ---------------- #\n\nRUN git clone --recursive https://github.com/pantor/frankx.git \\\n  && mkdir -p frankx/build && cd frankx/build \\\n  && cmake .. \\\n  && make -j$(nproc) \\\n  && make install \\\n  && ./unit-test\n\nENV PYTHONPATH=$PYTHONPATH:/code/frankx/build/\n"
}