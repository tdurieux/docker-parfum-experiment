{
  "startTime": 1674215811616,
  "endTime": 1674215812234,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 9,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 24
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Environment to build and unit-test ngraph on centos74 for GPU backend\n# with gcc 4.8.5\n# with python 2.7\n# with pre-built cmake3\n\nFROM nvidia/cuda:8.0-cudnn7-devel-centos7\n\nRUN yum -y update && \\\n    yum -y --enablerepo=extras install epel-release && \\\n    yum -y install \\\n    gcc gcc-c++ \\\n    cmake3 make \\\n    git \\\n    wget patch diffutils zlib-devel ncurses-devel libtinfo-dev \\\n    python python-devel python-setuptools \\\n    doxygen graphviz \\\n    which \\\n    'perl(Data::Dumper)' && rm -rf /var/cache/yum\n\nRUN ln -s /usr/bin/cmake3 /usr/bin/cmake\nRUN ln -s /usr/local/cuda/include/cudnn.h /usr/local/cuda/include/cudnn_v7.h\n\nRUN cmake --version\nRUN make --version\nRUN gcc --version\nRUN c++ --version\n\nRUN easy_install pip\nRUN pip install --no-cache-dir virtualenv==16.7.10\n\n# Install some pip packages\n\n# need to use sphinx version 1.6 to build docs\n# installing with apt-get install python-sphinx installs sphinx version 1.3.6 only\n# added install for python-pip above and\n# installed sphinx with pip to get the updated version 1.6.5\n# allows for make html build under the doc/source directory as an interim build process\nRUN pip install --no-cache-dir sphinx\n\n# breathe package required to build documentation\nRUN pip install --no-cache-dir breathe\n\n# need numpy to successfully build docs for python_api\nRUN pip install --no-cache-dir numpy\n\n# RUN python3 -m pip install m2r\n\nWORKDIR /home\n"
}