{
  "startTime": 1674219906185,
  "endTime": 1674219907474,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 57,
        "columnEnd": 73
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 102,
        "lineEnd": 102,
        "columnStart": 4,
        "columnEnd": 25
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 77,
        "columnEnd": 93
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 40,
        "columnEnd": 56
      }
    }
  ],
  "repairedDockerfile": "# ruby build stage\nFROM ruby:2.7-alpine as ruby-build-env\nMAINTAINER mdouchement\n\n# Set the locale\nENV LANG c.UTF-8\n\n# App\nENV GEM_HOME /usr/src/app/vendor/gems\nENV GEM_PATH /usr/src/app/vendor/gems\nENV RAILS_ENV production\nENV RACK_ENV production\n# Namespace for the application. Necessary for the asset compilation\n# Update as needed\n# ENV RAILS_RELATIVE_URL_ROOT /mersea\nENV SECRET_KEY_BASE tmp_376ea25aaa66984733a90920c263ba138e1e571aaf3a1a54cd2b819cb06e8b7fb311027b639eb8f55d8d53c27cf2df378ceb36008462057861d824bd13a0\n\n# Install build dependencies\nRUN apk upgrade\nRUN apk add --update --no-cache \\\n    git \\\n    bash \\\n    build-base \\\n    postgresql-dev \\\n    icu-dev \\\n    libxml2-dev \\\n    libxslt-dev \\\n    tzdata \\\n    nodejs\n\n# Bundler 2.x.x\nRUN gem install bundler\n\nRUN mkdir -p /usr/src/app && rm -rf /usr/src/app\nWORKDIR /usr/src/app\n\nCOPY . /usr/src/app\n# throw errors if Gemfile has been modified since Gemfile.lock\nRUN bundle config build.nokogiri\nRUN bundle config --global frozen 1\nRUN bundle install --deployment --without development test\n\n# Admin assets\nRUN bundle exec rake assets:precompile\n\n# javascript build stage\nFROM node:fermium-alpine as js-build-env\nMAINTAINER mdouchement franckke\n\nRUN apk upgrade\nRUN apk add --update --no-cache \\\n    git\n\nCOPY --from=ruby-build-env /usr/src/app /usr/src/app\n\nENV NODE_ENV production\nENV VUE_APP_MAPBOX_TOKEN pk.eyJ1IjoiZnJhbmNrayIsImEiOiJjanNianhvM3owY2thNGJycGs4eTRtNmlmIn0.C-IMo3-GDK62hskzUEIJxA\nENV VUE_APP_BUGSNAG_TOKEN b4eb2302530535245e3e25639d385ea8\nENV VUE_APP_FATHOM_HOSTNAME=analytics.oceanplastictracker.com\nENV VUE_APP_FATHOM_SITE_ID=IIYJS\n\nWORKDIR /usr/src/app/frontend\n\nRUN yarn install --production=false --frozen-lockfile && yarn cache clean && yarn cache clean;\nRUN yarn run build --mode production && yarn cache clean;\n\nWORKDIR /usr/src/app\nRUN mv frontend/dist/* public/\n\n# Remove this huge folder to prepare the next stage.\nRUN rm -rf frontend .git\n\n\n# final stage\nFROM ruby:2.7-alpine\nMAINTAINER mdouchement\n\n# Set the locale\nENV LANG c.UTF-8\n\n# App\nENV GEM_HOME /usr/src/app/vendor/gems\nENV GEM_PATH /usr/src/app/vendor/gems\nENV RAILS_ENV production\nENV RACK_ENV production\nENV EXECJS_RUNTIME Disabled\n# Namespace for the application. Necessary for the asset compilation\n# Update as needed\n# ENV RAILS_RELATIVE_URL_ROOT /mersea\nENV SECRET_KEY_BASE tmp_376ea25aaa66984733a90920c263ba138e1e571aaf3a1a54cd2b819cb06e8b7fb311027b639eb8f55d8d53c27cf2df378ceb36008462057861d824bd13a0\n\n# Install build dependencies\nRUN apk upgrade\nRUN apk add --update --no-cache \\\n    postgresql-dev \\\n    libxml2-dev \\\n    libxslt-dev \\\n    icu-libs \\\n    tzdata \\\n    file \\\n    imagemagick\n\nRUN mkdir -p /usr/src/app && rm -rf /usr/src/app\nWORKDIR /usr/src/app\n\nCOPY --from=js-build-env /usr/src/app /usr/src/app\n\n# Bundler 2.x.x\nRUN gem install bundler\n\n# Resync bundler\nRUN bundle install --deployment --without development test\n\nCOPY dockerfiles/nginx.conf /etc/nginx/conf.d/default.conf\nVOLUME [\"/etc/nginx/conf.d\"]\n\nVOLUME [\"/usr/src/app/public\"]\nEXPOSE 3000\nCMD SECRET_KEY_BASE=$(bundle exec rake secret) \\\n    bundle exec puma -p 3000\n"
}