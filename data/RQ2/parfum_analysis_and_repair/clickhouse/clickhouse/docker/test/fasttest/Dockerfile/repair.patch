diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/clickhouse/clickhouse/docker/test/fasttest/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/clickhouse/clickhouse/docker/test/fasttest/Dockerfile/repaired.Dockerfile
index 03a79b4..f21b1f0 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/clickhouse/clickhouse/docker/test/fasttest/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/clickhouse/clickhouse/docker/test/fasttest/Dockerfile/repaired.Dockerfile
@@ -18,7 +18,7 @@ RUN apt-get update \
     && apt-key add /tmp/llvm-snapshot.gpg.key \
     && export CODENAME="$(lsb_release --codename --short | tr 'A-Z' 'a-z')" \
     && echo "deb [trusted=yes] https://apt.llvm.org/${CODENAME}/ llvm-toolchain-${CODENAME}-${LLVM_VERSION} main" >> \
-        /etc/apt/sources.list
+        /etc/apt/sources.list && rm -rf /var/lib/apt/lists/*;
 
 # initial packages
 RUN apt-get update \
@@ -28,7 +28,7 @@ RUN apt-get update \
         ccache \
         curl \
         software-properties-common \
-        --yes --no-install-recommends
+        --yes --no-install-recommends && rm -rf /var/lib/apt/lists/*;
 
 # Architecture of the image when BuildKit/buildx is used
 ARG TARGETARCH
@@ -37,7 +37,7 @@ ARG TARGETARCH
 # to compress files using pigz (https://zlib.net/pigz/) instead of gzip.
 # Significantly increase deb packaging speed and compatible with old systems
 RUN arch=${TARGETARCH:-amd64} \
-  && curl -Lo /usr/bin/dpkg-deb https://github.com/ClickHouse-Extras/dpkg/releases/download/1.21.1-clickhouse/dpkg-deb-${arch}
+  && curl -f -Lo /usr/bin/dpkg-deb https://github.com/ClickHouse-Extras/dpkg/releases/download/1.21.1-clickhouse/dpkg-deb-${arch}
 
 RUN apt-get update \
     && apt-get install \
@@ -71,9 +71,9 @@ RUN apt-get update \
         software-properties-common \
         tzdata \
         unixodbc \
-       --yes --no-install-recommends
+       --yes --no-install-recommends && rm -rf /var/lib/apt/lists/*;
 
-RUN pip3 install numpy scipy pandas Jinja2
+RUN pip3 install --no-cache-dir numpy scipy pandas Jinja2
 
 # This symlink required by gcc to find lld compiler
 RUN ln -s /usr/bin/lld-${LLVM_VERSION} /usr/bin/ld.lld