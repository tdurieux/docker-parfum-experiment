{
  "startTime": 1674248715892,
  "endTime": 1674248716676,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 5,
        "columnEnd": 126
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 13,
        "columnStart": 7,
        "columnEnd": 56
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 24,
        "lineEnd": 30,
        "columnStart": 7,
        "columnEnd": 37
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 42,
        "lineEnd": 73,
        "columnStart": 7,
        "columnEnd": 36
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# rebuild in #33610\n#  docker build -t clickhouse/fasttest .\nARG FROM_TAG=latest\nFROM clickhouse/test-util:$FROM_TAG\n\n# ARG for quick switch to a given ubuntu mirror\nARG apt_archive=\"http://archive.ubuntu.com\"\nRUN sed -i \"s|http://archive.ubuntu.com|$apt_archive|g\" /etc/apt/sources.list\n\nENV DEBIAN_FRONTEND=noninteractive LLVM_VERSION=14\n\nRUN apt-get update \\\n    && apt-get install ca-certificates lsb-release wget gnupg apt-transport-https \\\n        --yes --no-install-recommends --verbose-versions \\\n    && export LLVM_PUBKEY_HASH=\"bda960a8da687a275a2078d43c111d66b1c6a893a3275271beedf266c1ff4a0cdecb429c7a5cccf9f486ea7aa43fd27f\" \\\n    && wget -nv -O /tmp/llvm-snapshot.gpg.key https://apt.llvm.org/llvm-snapshot.gpg.key \\\n    && echo \"${LLVM_PUBKEY_HASH} /tmp/llvm-snapshot.gpg.key\" | sha384sum -c \\\n    && apt-key add /tmp/llvm-snapshot.gpg.key \\\n    && export CODENAME=\"$(lsb_release --codename --short | tr 'A-Z' 'a-z')\" \\\n    && echo \"deb [trusted=yes] https://apt.llvm.org/${CODENAME}/ llvm-toolchain-${CODENAME}-${LLVM_VERSION} main\" >> \\\n        /etc/apt/sources.list && rm -rf /var/lib/apt/lists/*;\n\n# initial packages\nRUN apt-get update \\\n    && apt-get install \\\n        bash \\\n        fakeroot \\\n        ccache \\\n        curl \\\n        software-properties-common \\\n        --yes --no-install-recommends && rm -rf /var/lib/apt/lists/*;\n\n# Architecture of the image when BuildKit/buildx is used\nARG TARGETARCH\n\n# Special dpkg-deb (https://github.com/ClickHouse-Extras/dpkg) version which is able\n# to compress files using pigz (https://zlib.net/pigz/) instead of gzip.\n# Significantly increase deb packaging speed and compatible with old systems\nRUN arch=${TARGETARCH:-amd64} \\\n  && curl -f -Lo /usr/bin/dpkg-deb https://github.com/ClickHouse-Extras/dpkg/releases/download/1.21.1-clickhouse/dpkg-deb-${arch}\n\nRUN apt-get update \\\n    && apt-get install \\\n        apt-transport-https \\\n        bash \\\n        brotli \\\n        build-essential \\\n        ca-certificates \\\n        ccache \\\n        clang-${LLVM_VERSION} \\\n        clang-tidy-${LLVM_VERSION} \\\n        cmake \\\n        curl \\\n        expect \\\n        fakeroot \\\n        gdb \\\n        git \\\n        gperf \\\n        lld-${LLVM_VERSION} \\\n        llvm-${LLVM_VERSION} \\\n        lsof \\\n        moreutils \\\n        ninja-build \\\n        psmisc \\\n        python3 \\\n        python3-lxml \\\n        python3-pip \\\n        python3-requests \\\n        python3-termcolor \\\n        rename \\\n        software-properties-common \\\n        tzdata \\\n        unixodbc \\\n       --yes --no-install-recommends && rm -rf /var/lib/apt/lists/*;\n\nRUN pip3 install --no-cache-dir numpy scipy pandas Jinja2\n\n# This symlink required by gcc to find lld compiler\nRUN ln -s /usr/bin/lld-${LLVM_VERSION} /usr/bin/ld.lld\n\nARG odbc_driver_url=\"https://github.com/ClickHouse/clickhouse-odbc/releases/download/v1.1.4.20200302/clickhouse-odbc-1.1.4-Linux.tar.gz\"\n\nRUN mkdir -p /tmp/clickhouse-odbc-tmp \\\n  && wget -nv -O - ${odbc_driver_url} | tar --strip-components=1 -xz -C /tmp/clickhouse-odbc-tmp \\\n  && cp /tmp/clickhouse-odbc-tmp/lib64/*.so /usr/local/lib/ \\\n  && odbcinst -i -d -f /tmp/clickhouse-odbc-tmp/share/doc/clickhouse-odbc/config/odbcinst.ini.sample \\\n  && odbcinst -i -s -l -f /tmp/clickhouse-odbc-tmp/share/doc/clickhouse-odbc/config/odbc.ini.sample \\\n  && rm -rf /tmp/clickhouse-odbc-tmp\n\nENV TZ=Europe/Moscow\nRUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone\n\nENV COMMIT_SHA=''\nENV PULL_REQUEST_NUMBER=''\nENV COPY_CLICKHOUSE_BINARY_TO_OUTPUT=0\n\nCOPY run.sh /\nCMD [\"/bin/bash\", \"/run.sh\"]\n"
}