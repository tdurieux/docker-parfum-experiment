{
  "startTime": 1674250517540,
  "endTime": 1674250518369,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 135
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# docker build -t clickhouse/testflows-runner .\nFROM ubuntu:20.04\n\n# ARG for quick switch to a given ubuntu mirror\nARG apt_archive=\"http://archive.ubuntu.com\"\nRUN sed -i \"s|http://archive.ubuntu.com|$apt_archive|g\" /etc/apt/sources.list\n\nRUN apt-get update \\\n    && env DEBIAN_FRONTEND=noninteractive apt-get install --yes \\\n    ca-certificates \\\n    bash \\\n    btrfs-progs \\\n    e2fsprogs \\\n    iptables \\\n    xfsprogs \\\n    tar \\\n    pigz \\\n    wget \\\n    git \\\n    iproute2 \\\n    cgroupfs-mount \\\n    python3-pip \\\n    tzdata \\\n    libicu-dev \\\n    bsdutils \\\n    curl \\\n    liblua5.1-dev \\\n    luajit \\\n    libssl-dev \\\n    libcurl4-openssl-dev \\\n    gdb \\\n    && rm -rf \\\n        /var/lib/apt/lists/* \\\n        /var/cache/debconf \\\n        /tmp/* \\\n    && apt-get clean\n\nENV TZ=Europe/Moscow\nRUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone\n\nRUN pip3 install --no-cache-dir urllib3 testflows==1.7.20 docker-compose==1.29.2 docker==5.0.0 dicttoxml kazoo tzlocal==2.1 pytz python-dateutil numpy\n\nENV DOCKER_CHANNEL stable\nENV DOCKER_VERSION 20.10.6\n\n# Architecture of the image when BuildKit/buildx is used\nARG TARGETARCH\n\n# Install docker\nRUN arch=${TARGETARCH:-amd64} \\\n  && case $arch in \\\n      amd64) rarch=x86_64 ;; \\\n      arm64) rarch=aarch64 ;; \\\n    esac \\\n  && set -eux \\\n  && if ! wget -nv -O docker.tgz \"https://download.docker.com/linux/static/${DOCKER_CHANNEL}/${rarch}/docker-${DOCKER_VERSION}.tgz\"; then \\\n    echo >&2 \"error: failed to download 'docker-${DOCKER_VERSION}' from '${DOCKER_CHANNEL}' for '${rarch}'\" \\\n    && exit 1; \\\n  fi \\\n  && tar --extract \\\n    --file docker.tgz \\\n    --strip-components 1 \\\n    --directory /usr/local/bin/ \\\n  && rm docker.tgz \\\n  && dockerd --version \\\n  && docker --version\n\nCOPY modprobe.sh /usr/local/bin/modprobe\nCOPY dockerd-entrypoint.sh /usr/local/bin/\nCOPY process_testflows_result.py /usr/local/bin/\n\nRUN set -x \\\n  && addgroup --system dockremap \\\n    && adduser --system dockremap \\\n  && adduser dockremap dockremap \\\n  && echo 'dockremap:165536:65536' >> /etc/subuid \\\n    && echo 'dockremap:165536:65536' >> /etc/subgid\n\nVOLUME /var/lib/docker\nEXPOSE 2375\nENTRYPOINT [\"dockerd-entrypoint.sh\"]\nCMD [\"sh\", \"-c\", \"python3 regression.py --no-color -o new-fails --local --clickhouse-binary-path ${CLICKHOUSE_TESTS_SERVER_BIN_PATH} --log test.log ${TESTFLOWS_OPTS}; cat test.log | tfs report results --format json > results.json; /usr/local/bin/process_testflows_result.py || echo -e 'failure\\tCannot parse results' > check_status.tsv; find * -type f | grep _instances | grep clickhouse-server | xargs -n1 tar -rvf clickhouse_logs.tar; gzip -9 clickhouse_logs.tar\"]\n"
}