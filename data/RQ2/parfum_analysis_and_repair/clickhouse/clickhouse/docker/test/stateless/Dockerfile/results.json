{
  "startTime": 1674253244146,
  "endTime": 1674253245631,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 42
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# rebuild in #33610\n# docker build -t clickhouse/stateless-test .\nARG FROM_TAG=latest\nFROM clickhouse/test-base:$FROM_TAG\n\nARG odbc_driver_url=\"https://github.com/ClickHouse/clickhouse-odbc/releases/download/v1.1.4.20200302/clickhouse-odbc-1.1.4-Linux.tar.gz\"\n\n# golang version 1.13 on Ubuntu 20 is enough for tests\nRUN apt-get update -y \\\n    && env DEBIAN_FRONTEND=noninteractive \\\n        apt-get install --yes --no-install-recommends \\\n            awscli \\\n            brotli \\\n            expect \\\n            golang \\\n            lsof \\\n            mysql-client=8.0* \\\n            ncdu \\\n            netcat-openbsd \\\n            openjdk-11-jre-headless \\\n            openssl \\\n            postgresql-client \\\n            protobuf-compiler \\\n            python3 \\\n            python3-lxml \\\n            python3-pip \\\n            python3-requests \\\n            python3-termcolor \\\n            qemu-user-static \\\n            sqlite3 \\\n            sudo \\\n            telnet \\\n            tree \\\n            unixodbc \\\n            wget \\\n            zstd \\\n    && apt-get clean\n\n\nRUN pip3 install --no-cache-dir numpy scipy pandas Jinja2\n\nRUN mkdir -p /tmp/clickhouse-odbc-tmp \\\n   && wget -nv -O - ${odbc_driver_url} | tar --strip-components=1 -xz -C /tmp/clickhouse-odbc-tmp \\\n   && cp /tmp/clickhouse-odbc-tmp/lib64/*.so /usr/local/lib/ \\\n   && odbcinst -i -d -f /tmp/clickhouse-odbc-tmp/share/doc/clickhouse-odbc/config/odbcinst.ini.sample \\\n   && odbcinst -i -s -l -f /tmp/clickhouse-odbc-tmp/share/doc/clickhouse-odbc/config/odbc.ini.sample \\\n   && rm -rf /tmp/clickhouse-odbc-tmp\n\nENV TZ=Europe/Moscow\nRUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone\n\nENV NUM_TRIES=1\nENV MAX_RUN_TIME=0\n\n# Unrelated to vars in setup_minio.sh, but should be the same there\n# to have the same binaries for local running scenario\nARG MINIO_SERVER_VERSION=2022-01-03T18-22-58Z\nARG MINIO_CLIENT_VERSION=2022-01-05T23-52-51Z\nARG TARGETARCH\n\n# Download Minio-related binaries\nRUN arch=${TARGETARCH:-amd64} \\\n    && wget \"https://dl.min.io/server/minio/release/linux-${arch}/archive/minio.RELEASE.${MINIO_SERVER_VERSION}\" -O ./minio \\\n    && wget \"https://dl.min.io/client/mc/release/linux-${arch}/archive/mc.RELEASE.${MINIO_CLIENT_VERSION}\" -O ./mc \\\n    && chmod +x ./mc ./minio\n\n\nRUN wget 'https://dlcdn.apache.org/hadoop/common/hadoop-3.3.1/hadoop-3.3.1.tar.gz' \\\n    && tar -xvf hadoop-3.3.1.tar.gz \\\n    && rm -rf hadoop-3.3.1.tar.gz\n\nENV MINIO_ROOT_USER=\"clickhouse\"\nENV MINIO_ROOT_PASSWORD=\"clickhouse\"\nENV EXPORT_S3_STORAGE_POLICIES=1\n\nCOPY run.sh /\nCOPY setup_minio.sh /\nCOPY setup_hdfs_minicluster.sh /\nCMD [\"/bin/bash\", \"/run.sh\"]\n"
}