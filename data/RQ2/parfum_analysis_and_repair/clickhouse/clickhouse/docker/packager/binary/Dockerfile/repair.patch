diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/clickhouse/clickhouse/docker/packager/binary/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/clickhouse/clickhouse/docker/packager/binary/Dockerfile/repaired.Dockerfile
index 1dff4b1..b6205d0 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/clickhouse/clickhouse/docker/packager/binary/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/clickhouse/clickhouse/docker/packager/binary/Dockerfile/repaired.Dockerfile
@@ -26,7 +26,7 @@ RUN apt-get update \
     && export CODENAME="$(lsb_release --codename --short | tr 'A-Z' 'a-z')" \
     && echo "deb [trusted=yes] https://apt.llvm.org/${CODENAME}/ llvm-toolchain-${CODENAME}-${LLVM_VERSION} main" >> \
         /etc/apt/sources.list \
-    && apt-get clean
+    && apt-get clean && rm -rf /var/lib/apt/lists/*;
 
 # initial packages
 RUN apt-get update \
@@ -52,7 +52,7 @@ RUN apt-get update \
         software-properties-common \
         tzdata \
         --yes --no-install-recommends \
-    && apt-get clean
+    && apt-get clean && rm -rf /var/lib/apt/lists/*;
 
 # This symlink required by gcc to find lld compiler
 RUN ln -s /usr/bin/lld-${LLVM_VERSION} /usr/bin/ld.lld
@@ -71,7 +71,7 @@ RUN git clone --depth 1 https://github.com/tpoechtrager/apple-libtapi.git \
 # Build and install tools for cross-linking to Darwin (x86-64)
 RUN git clone --depth 1 https://github.com/tpoechtrager/cctools-port.git \
     && cd cctools-port/cctools \
-    && ./configure --prefix=/cctools --with-libtapi=/cctools \
+    && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/cctools --with-libtapi=/cctools \
         --target=x86_64-apple-darwin \
     && make install \
     && cd ../.. \
@@ -80,7 +80,7 @@ RUN git clone --depth 1 https://github.com/tpoechtrager/cctools-port.git \
 # Build and install tools for cross-linking to Darwin (aarch64)
 RUN git clone --depth 1 https://github.com/tpoechtrager/cctools-port.git \
     && cd cctools-port/cctools \
-    && ./configure --prefix=/cctools --with-libtapi=/cctools \
+    && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/cctools --with-libtapi=/cctools \
         --target=aarch64-apple-darwin \
     && make install \
     && cd ../.. \
@@ -92,22 +92,22 @@ RUN wget -nv https://github.com/phracker/MacOSX-SDKs/releases/download/11.3/MacO
 # NOTE: Seems like gcc-11 is too new for ubuntu20 repository
 RUN add-apt-repository ppa:ubuntu-toolchain-r/test --yes \
     && apt-get update \
-    && apt-get install gcc-11 g++-11 --yes \
-    && apt-get clean
+    && apt-get install --no-install-recommends gcc-11 g++-11 --yes \
+    && apt-get clean && rm -rf /var/lib/apt/lists/*;
 
 # Architecture of the image when BuildKit/buildx is used
 ARG TARGETARCH
 ARG NFPM_VERSION=2.16.0
 
 RUN arch=${TARGETARCH:-amd64} \
-  && curl -Lo /tmp/nfpm.deb "https://github.com/goreleaser/nfpm/releases/download/v${NFPM_VERSION}/nfpm_${arch}.deb" \
+  && curl -f -Lo /tmp/nfpm.deb "https://github.com/goreleaser/nfpm/releases/download/v${NFPM_VERSION}/nfpm_${arch}.deb" \
   && dpkg -i /tmp/nfpm.deb \
   && rm /tmp/nfpm.deb
 
 ARG GO_VERSION=1.18.3
 # We need go for clickhouse-diagnostics
 RUN arch=${TARGETARCH:-amd64} \
-  && curl -Lo /tmp/go.tgz "https://go.dev/dl/go${GO_VERSION}.linux-${arch}.tar.gz" \
+  && curl -f -Lo /tmp/go.tgz "https://go.dev/dl/go${GO_VERSION}.linux-${arch}.tar.gz" \
   && tar -xzf /tmp/go.tgz -C /usr/local/ \
   && rm /tmp/go.tgz