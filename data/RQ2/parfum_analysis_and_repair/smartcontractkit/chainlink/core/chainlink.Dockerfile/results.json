{
  "startTime": 1674249157672,
  "endTime": 1674249158536,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 5,
        "columnEnd": 60
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 22,
        "columnEnd": 79
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 23,
        "columnEnd": 62
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 22,
        "columnEnd": 79
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 23,
        "columnEnd": 62
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# MAKE ALL CHANGES WITHIN THE DEFAULT WORKDIR FOR YARN AND GO DEP CACHE HITS\nFROM node:16-buster\nWORKDIR /chainlink\n\nCOPY GNUmakefile VERSION ./\nCOPY tools/bin/ldflags tools/bin/ldflags\nARG COMMIT_SHA\n\n# Install yarn dependencies\nCOPY yarn.lock package.json .yarnrc ./\nCOPY .yarn .yarn\nCOPY operator_ui/package.json ./operator_ui/\nCOPY contracts/package.json ./contracts/\nRUN make yarndep\n\nCOPY contracts ./contracts\nCOPY tsconfig.cjs.json ./\nCOPY core/web/schema core/web/schema\nCOPY operator_ui ./operator_ui\n\n# Create the directory that the operator-ui build assets will be placed in.\nRUN mkdir -p core/web\n\n# Build operator-ui and the smart contracts\nRUN make contracts-operator-ui-build\n\n# Build the golang binary\n\nFROM golang:1.18-buster\nWORKDIR /chainlink\n\nCOPY GNUmakefile VERSION ./\nCOPY tools/bin/ldflags ./tools/bin/\n\n# Env vars needed for chainlink build\nADD go.mod go.sum ./\nRUN go mod download\n\n# Env vars needed for chainlink build\nARG COMMIT_SHA\n\nCOPY core core\n# Copy over operator-ui build assets to the web module so that we embed them correctly\nCOPY --from=0 /chainlink/core/web/assets ./core/web/assets\n\nRUN make chainlink-build\n\n# Final layer: ubuntu with chainlink binary\nFROM ubuntu:20.04\n\nARG CHAINLINK_USER=root\nENV DEBIAN_FRONTEND noninteractive\nRUN apt-get update && apt-get install --no-install-recommends -y ca-certificates gnupg lsb-release curl && rm -rf /var/lib/apt/lists/*;\n\n# Install Postgres for CLI tools, needed specifically for DB backups\nRUN curl -f https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add - \\\n  && curl -f https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add - \\\n  && echo \"deb http://apt.postgresql.org/pub/repos/apt/ `lsb_release -cs`-pgdg main\" |tee /etc/apt/sources.list.d/pgdg.list \\\n  && apt-get update && apt-get install --no-install-recommends -y postgresql-client-14 \\\n  && apt-get clean all && rm -rf /var/lib/apt/lists/*;\n\nCOPY --from=1 /go/bin/chainlink /usr/local/bin/\n\n# dependency of terra-money/core\nCOPY --from=1 /go/pkg/mod/github.com/\\!cosm\\!wasm/wasmvm@v*/api/libwasmvm.so /usr/lib/libwasmvm.so\nRUN chmod 755 /usr/lib/libwasmvm.so\n\nRUN if [ ${CHAINLINK_USER} != root ]; then \\\n  useradd --uid 14933 --create-home ${CHAINLINK_USER}; \\\n  fi\nUSER ${CHAINLINK_USER}\nWORKDIR /home/${CHAINLINK_USER}\n\nEXPOSE 6688\nENTRYPOINT [\"chainlink\"]\n\nHEALTHCHECK CMD curl -f http://localhost:6688/health || exit 1\n\nCMD [\"local\", \"node\"]\n"
}