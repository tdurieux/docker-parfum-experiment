{
  "startTime": 1674250432646,
  "endTime": 1674250433495,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 25,
        "columnEnd": 43
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 47
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# -----------------------------------------------------------------------------\n# docker-pinry\n#\n# Builds a basic docker image that can run Pinry (http://getpinry.com) and serve\n# all of it's assets, there are more optimal ways to do this but this is the\n# most friendly and has everything contained in a single instance.\n#\n# Authors: Isaac Bythewood\n# Updated: Mar 29th, 2016\n# Require: Docker (http://www.docker.io/)\n# -----------------------------------------------------------------------------\n\n\n# Base system is the LTS version of Ubuntu.\nFROM python:3.6-stretch\n\nRUN groupadd -g 2300 tmpgroup && usermod -g tmpgroup www-data && groupdel www-data && groupadd -g 1000 www-data && usermod -g www-data www-data && usermod -u 1000 www-data && groupdel tmpgroup\n\nRUN apt-get update && apt-get -y --no-install-recommends install nginx nginx-extras pwgen && rm -rf /var/lib/apt/lists/*;\n\nRUN mkdir -p /srv/www/; cd /srv/www/; git clone https://github.com/pinry/pinry.git\nRUN mkdir /srv/www/pinry/logs; mkdir /data\nRUN cd /srv/www/pinry && pip install --no-cache-dir pipenv && pipenv install --three --system\nRUN pip install --no-cache-dir gunicorn\n\n# Fix permissions\nRUN chown -R www-data:www-data /srv/www\n\n\n# Load in all of our config files.\nADD ./nginx/nginx.conf /etc/nginx/nginx.conf\nADD ./nginx/sites-enabled/default /etc/nginx/sites-enabled/default\n\n# Fix permissions\nRUN mkdir /scripts/\nADD ./scripts/* /scripts/\nRUN chown -R www-data:www-data /data\nRUN mkdir /var/log/gunicorn\n\n# 80 is for nginx web, /data contains static files and database /start runs it.\nexpose 80\nvolume [\"/data\"]\ncmd    [\"/scripts/start.sh\"]\n"
}