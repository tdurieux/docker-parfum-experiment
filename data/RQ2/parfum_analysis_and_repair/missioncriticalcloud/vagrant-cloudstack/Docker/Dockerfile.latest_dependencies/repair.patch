diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/missioncriticalcloud/vagrant-cloudstack/Docker/Dockerfile.latest_dependencies b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/missioncriticalcloud/vagrant-cloudstack/Docker/Dockerfile.latest_dependencies/repaired.Dockerfile
index 5653fe2..b4810c4 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/missioncriticalcloud/vagrant-cloudstack/Docker/Dockerfile.latest_dependencies
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/missioncriticalcloud/vagrant-cloudstack/Docker/Dockerfile.latest_dependencies/repaired.Dockerfile
@@ -14,16 +14,16 @@ ENV USER VAC
 
 # Update before all package installations
 RUN apt-get update -y && \
-   apt-get install -y build-essential liblzma-dev zlib1g-dev git openssh-client curl && \
-   ln -sf bash /bin/sh
+   apt-get install --no-install-recommends -y build-essential liblzma-dev zlib1g-dev git openssh-client curl && \
+   ln -sf bash /bin/sh && rm -rf /var/lib/apt/lists/*;
 
 # Set the locale, seems to be required for all things gem
-RUN     apt-get install -y locales  && \
+RUN apt-get install --no-install-recommends -y locales && \
         dpkg-reconfigure -f noninteractive tzdata && \
         sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen && \
         echo 'LANG="en_US.UTF-8"'>/etc/default/locale && \
         dpkg-reconfigure --frontend=noninteractive locales && \
-        update-locale LANG=en_US.UTF-8
+        update-locale LANG=en_US.UTF-8 && rm -rf /var/lib/apt/lists/*;
 # Set environment variables AFTER configuration, else breaks
 ENV LANG en_US.UTF-8
 ENV LANGUAGE en_US:en
@@ -31,14 +31,14 @@ ENV LC_ALL en_US.UTF-8
 #
 
 # Install vagrant and the vagrant-cloudstack plugin
-RUN curl -L https://releases.hashicorp.com/vagrant/${VAGRANT_VERSION}/vagrant_${VAGRANT_VERSION}_x86_64.deb > /tmp/vagrant_x86_64.deb && \
+RUN curl -f -L https://releases.hashicorp.com/vagrant/${VAGRANT_VERSION}/vagrant_${VAGRANT_VERSION}_x86_64.deb > /tmp/vagrant_x86_64.deb && \
     dpkg -i /tmp/vagrant_x86_64.deb && \
     rm -f /tmp/vagrant_x86_64.deb && \
     vagrant plugin install vagrant-cloudstack && \
     vagrant plugin install vagrant-winrm --plugin-version 0.7.0
 
 # Install ChefDK
-RUN curl https://omnitruck.chef.io/install.sh | bash -s -- -c ${CHEFDK_CHANNEL} -P chefdk -v ${CHEFDK_VERSION} && \
+RUN curl -f https://omnitruck.chef.io/install.sh | bash -s -- -c ${CHEFDK_CHANNEL} -P chefdk -v ${CHEFDK_VERSION} && \
     echo 'eval "$(chef shell-init bash)"' >> ~/.bashrc && \
     /opt/chefdk/embedded/bin/bundler config --global path vendor/bundle && \
     /opt/chefdk/embedded/bin/bundler config --global bin vendor/bin && \