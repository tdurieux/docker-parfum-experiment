{
  "startTime": 1674253353233,
  "endTime": 1674253354419,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 112
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 18,
        "columnEnd": 30
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# ------------------------------------------------------------------------\n#\n# Copyright 2021 WSO2, Inc. (http://wso2.com)\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n# http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License\n#\n# ------------------------------------------------------------------------\n\n# set base docker image for golang first for compiling the source code.\nFROM golang:1.14-alpine as builder\n\n# build argument for version of apictl\nARG version\n\nRUN apk update && apk add --no-cache bash\n\nWORKDIR /import-export-cli\n\n# copy import-export-cli content to the docker image\nCOPY . .\n\n# build the source code with static linking\nRUN bash build.sh -c -v $version -t apictl.go\n\n# unzip the built distribution\nRUN tar -xvf /import-export-cli/build/target/apictl-$version-linux-x64.tar.gz -C /import-export-cli/build/target && rm /import-export-cli/build/target/apictl-$version-linux-x64.tar.gz\n\n# use a new base image as alpine/git because git is required for VCS support.\nFROM alpine/git:v2.26.2\n\n# copy the apictl into new base image\nCOPY --from=builder /import-export-cli/build/target/apictl/apictl /usr/bin/\n\nENTRYPOINT [\"apictl\"]\n"
}