{
  "startTime": 1674215643198,
  "endTime": 1674215644328,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 116,
        "lineEnd": 127,
        "columnStart": 4,
        "columnEnd": 10
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 129,
        "lineEnd": 129,
        "columnStart": 4,
        "columnEnd": 76
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 130,
        "lineEnd": 130,
        "columnStart": 4,
        "columnEnd": 119
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 131,
        "lineEnd": 131,
        "columnStart": 4,
        "columnEnd": 125
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 132,
        "lineEnd": 132,
        "columnStart": 4,
        "columnEnd": 129
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 133,
        "lineEnd": 133,
        "columnStart": 4,
        "columnEnd": 106
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 79,
        "lineEnd": 79,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 39,
        "columnStart": 22,
        "columnEnd": 18
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 88,
        "lineEnd": 113,
        "columnStart": 22,
        "columnEnd": 11
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 39,
        "columnStart": 22,
        "columnEnd": 18
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 88,
        "lineEnd": 113,
        "columnStart": 22,
        "columnEnd": 11
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nvidia/cuda:8.0-cudnn5-devel-ubuntu16.04\nMAINTAINER Benjamin Wild <b.w@fu-berlin.de>\n\n# makes sure deb-src in sources.list is not commented out\nRUN sed -i 's/^# deb-src/deb-src/' /etc/apt/sources.list\n\n\nRUN apt-get update && apt-get install --no-install-recommends -y --assume-yes --install-recommends \\\n        python \\\n        python-dev \\\n        python3 \\\n        python3-dev \\\n        python3-six \\\n        python3-tz \\\n        python3-babel \\\n        python3-roman \\\n        python3-docutils \\\n        python3-markupsafe \\\n        python3-jinja2 \\\n        python3-numpy \\\n        python3-pygments \\\n        checkinstall \\\n        git \\\n        build-essential \\\n        g++-4.9 \\\n        g++ \\\n        cmake \\\n        wget \\\n        libopenblas-dev \\\n        libavformat-dev \\\n        libavcodec-dev \\\n        libavdevice-dev \\\n        libavutil-dev \\\n        libswscale-dev \\\n        libavresample-dev \\\n        libavcodec-extra \\\n        libav-tools \\\n        qtbase5-dev \\\n        pkg-config \\\n        libbz2-dev \\\n        && rm -rf /var/lib/apt/lists && rm -rf /var/lib/apt/lists/*;\n\nRUN update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.9 20 && \\\n    update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-5 10 && \\\n    update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-4.9 20 && \\\n    update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-5 10 && \\\n    update-alternatives --install /usr/bin/cc cc /usr/bin/gcc 30 && \\\n    update-alternatives --set cc /usr/bin/gcc && \\\n    update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++ 30 && \\\n    update-alternatives --set c++ /usr/bin/g++\n\nRUN apt-get update && apt-get build-dep -y --assume-yes --no-install-recommends \\\n        libopencv-dev \\\n        libboost-all-dev && \\\n    rm -rf /var/lib/apt/lists\n\nRUN mkdir -p /tmp/source && \\\n    cd /tmp/source && \\\n    git clone --branch 3.1.0 --depth 1 https://github.com/Itseez/opencv.git && \\\n    mkdir -p /tmp/build/opencv && \\\n    cd /tmp/build/opencv && \\\n    cmake -DCMAKE_BUILD_TYPE=RELEASE \\\n          -DCMAKE_INSTALL_PREFIX=/usr/ \\\n          -DWITH_CUDA=OFF \\\n          -DWITH_CUFFT=OFF \\\n          -DWITH_CUBLAS=OFF \\\n          -DBUILD_opencv_java=OFF \\\n          -DBUILD_TESTS=OFF \\\n          -DBUILD_PERF_TESTS=OFF \\\n          -DBUILD_EXAMPLES=OFF \\\n          -DPYTHON_EXECUTABLE=/usr/bin/python3 \\\n          /tmp/source/opencv && \\\n    make -j `nproc`\n\nRUN cd /tmp/build/opencv && checkinstall\n\n\nRUN cd /tmp/source && \\\n    wget https://sourceforge.net/projects/boost/files/boost/1.61.0/boost_1_61_0.tar.bz2/download?use_mirror=netcologne -O boost.tar.bz2 && \\\n    tar -xf boost.tar.bz2 && \\\n    ls && \\\n    cd boost_1_61_0 && \\\n    ls && \\\n    ./bootstrap.sh --prefix=/usr --with-python=/usr/bin/python3 && rm boost.tar.bz2\n\nRUN cd /tmp/source/boost_1_61_0 && \\\n    ./b2 -j `nproc` install\n\nRUN apt-get update && apt-get install --no-install-recommends -y --assume-yes --install-recommends \\\n        python3-scipy \\\n        python3-setuptools \\\n        python3-pip \\\n        python3-nose \\\n        python3-pytest \\\n        python3-sklearn \\\n        python3-skimage \\\n        python3-h5py \\\n        python3-matplotlib \\\n        python3-seaborn \\\n        python3-cairocffi \\\n        tmux \\\n        gdb \\\n        capnproto \\\n        vim \\\n        vim-nox \\\n        libgflags-dev \\\n        libzmqpp-dev \\\n        libhdf5-dev \\\n        libhdf5-cpp-11 \\\n        hdf5-tools \\\n        libgoogle-glog-dev \\\n        jq \\\n        sshfs \\\n        zsh && \\\n    rm -rf /var/lib/apt/lists && rm -rf /var/lib/apt/lists/*;\n\nRUN pip3 install --no-cache-dir \\\n    Theano \\\n    jupyter \\\n    xgboost \\\n    pytest-cov \\\n    pytest-benchmark \\\n    pytest-flake8 \\\n    shyaml \\\n    more_itertools \\\n    scikit-image \\\n    click \\\n    pandas\n\nRUN pip3 install --no-cache-dir git+https://github.com/berleon/keras.git@losses#egg=Keras\nRUN pip3 install --no-cache-dir git+https://github.com/BioroboticsLab/diktya.git@c21788bc0fd51f16f920d1ee0f3ae6c88b183ad1#egg=diktya\nRUN pip3 install --no-cache-dir git+https://github.com/BioroboticsLab/bb_binary.git@c724a61d440878d6a44a43e1523c1cc8fb7c7de9#egg=bb-binary\nRUN pip3 install --no-cache-dir git+https://github.com/BioroboticsLab/bb_pipeline.git@fd74cbd8660d30a28f2e8e23fe4c0863b5b531c6#egg=bb-pipeline\nRUN pip3 install --no-cache-dir git+https://github.com/berleon/cfg.git@9484201fe0f80cb39fd26d7193477e400776d785#egg=cfg\n\nRUN git clone https://github.com/berleon/pybeesgrid.git /opt/pybeesgrid && \\\n    cd /opt/pybeesgrid && export PIP=pip3 && ./build_and_install.sh\n\nRUN ldconfig    # otherwise the cuda libaries are not found\n\nRUN locale-gen en_US.UTF-8  # fix utf-8 encoding\nENV LANG en_US.UTF-8\nENV LANGUAGE en_US:en\nENV LC_ALL en_US.UTF-8\n"
}