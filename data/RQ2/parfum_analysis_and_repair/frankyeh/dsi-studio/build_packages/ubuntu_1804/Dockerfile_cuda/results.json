{
  "startTime": 1674253084154,
  "endTime": 1674253084815,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 4,
        "columnEnd": 123
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nvidia/cuda:11.5.0-devel-ubuntu18.04 as builder-stage\n\nENV DEBIAN_FRONTEND noninteractive\n\n# Prepare environment\n# We use a ppa for the qt because 18.04 is tool old for DSI\nRUN apt update && apt full-upgrade -y && \\\n  apt install --no-install-recommends -y software-properties-common && \\\n  add-apt-repository -y ppa:beineri/opt-qt-5.12.8-bionic && \\\n  add-apt-repository -y ppa:ubuntu-toolchain-r/test && \\\n  apt install -y --no-install-recommends \\\n  unzip \\\n  curl \\\n  make \\\n  git \\\n  zlib1g-dev \\\n  ca-certificates \\\n  qt512base \\\n  qt512charts-no-lgpl \\\n  mesa-common-dev \\\n  libglu1-mesa-dev \\\n  gcc-9 \\\n  g++-9 && \\\n  apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\n\nRUN update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 \\\n                    99 \\\n                    --slave   /usr/bin/cc cc /usr/bin/gcc-9 \\\n                    --slave   /usr/bin/c++ c++ /usr/bin/g++-9 \\\n                    --slave   /usr/bin/g++ g++ /usr/bin/g++-9 \\\n                    --slave   /usr/bin/gcov gcov /usr/bin/gcov-9 \\\n                    --slave   /usr/bin/gcov-dump gcov-dump /usr/bin/gcov-dump-9 \\\n                    --slave   /usr/bin/gcov-tool gcov-tool /usr/bin/gcov-tool-9 \\\n                    --slave   /usr/bin/gcc-ar gcc-ar /usr/bin/gcc-ar-9 \\\n                    --slave   /usr/bin/gcc-nm gcc-nm /usr/bin/gcc-nm-9 \\\n                    --slave   /usr/bin/gcc-ranlib gcc-ranlib /usr/bin/gcc-ranlib-9\n\nRUN update-alternatives --auto gcc\n\n#Need to use a different shell so the QT ENV script works\nSHELL [\"/bin/bash\", \"-c\"]\n\nADD \"https://api.github.com/repos/frankyeh/DSI-Studio/commits?per_page=1\" latest_commit\nADD \"https://api.github.com/repos/frankyeh/TIPL/commits?per_page=1\" latest_commit\n\nENV PATH=\"$PATH:/opt/qt512/bin\"\n\nRUN source /opt/qt512/bin/qt512-env.sh \\\n  && mkdir /opt/dsi-studio \\\n  && cd /opt/dsi-studio \\\n  && git clone https://github.com/frankyeh/DSI-Studio.git \\\n  && mv DSI-Studio src \\\n  && git clone https://github.com/frankyeh/TIPL.git \\\n  && mv TIPL src/TIPL \\\n  && mkdir -p /opt/dsi-studio/build \\\n  && cd /opt/dsi-studio/build \\\n  && qmake ../src/dsi_studio.pro \\\n  && make\n\nRUN cd /opt/dsi-studio \\\n  && mv build/dsi_studio . \\\n  && chmod 755 dsi_studio \\\n  && cp -R src/other/* . \\\n  && rm -rf src build \\\n  && git clone https://github.com/frankyeh/DSI-Studio-atlas.git \\\n  && rm -fr DSI-Studio-atlas/.git \\\n  && mv DSI-Studio-atlas atlas\n\n\nRUN curl -f -sL https://github.com/probonopd/linuxdeployqt/releases/download/7/linuxdeployqt-7-x86_64.AppImage > linuxdeployqt \\\n  && chmod a+x linuxdeployqt \\\n  && ./linuxdeployqt --appimage-extract \\\n  && ./squashfs-root/AppRun /opt/dsi-studio/dsi_studio -unsupported-bundle-everything -no-translations -bundle-non-qt-libs \\\n  && rm -fr squashfs-root \\\n  && rm -fr linuxdeployqt\n\nENV PATH=\"$PATH:/opt/dsi-studio\"\n\n\n#Create an empty container and transfer only the compiled software out\nFROM scratch\nCOPY --from=builder-stage /opt/dsi-studio /\n"
}