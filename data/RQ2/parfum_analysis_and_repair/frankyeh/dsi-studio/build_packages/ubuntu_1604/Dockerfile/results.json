{
  "startTime": 1674252112561,
  "endTime": 1674252114047,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 95,
        "lineEnd": 95,
        "columnStart": 4,
        "columnEnd": 123
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04 as builder-stage\nENV DEBIAN_FRONTEND noninteractive\n# Prepare environment\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n                    curl \\\n                    ca-certificates \\\n                    xvfb \\\n                    build-essential \\\n                    autoconf \\\n                    libtool \\\n                    pkg-config \\\n                    libfontconfig1 \\\n                    libfreetype6 \\\n                    libgl1-mesa-dev \\\n                    libglu1-mesa-dev \\\n                    libgomp1 \\\n                    libice6 \\\n                    libxcursor1 \\\n                    libxft2 \\\n                    libxinerama1 \\\n                    libxrandr2 \\\n                    libxrender1 \\\n                    libxt6 \\\n                    wget \\\n                    zlib1g \\\n                    zlib1g-dev \\\n                    unzip \\\n                    libgl1-mesa-dev \\\n                    libglu1-mesa-dev \\\n                    freeglut3-dev \\\n                    mesa-utils \\\n                    make \\\n                    git \\\n                    software-properties-common \\\n\t\t    python-software-properties && \\\n    apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\n# update to g++9\n\nRUN add-apt-repository ppa:ubuntu-toolchain-r/test  \\\n    && apt-get update \\\n    && apt install -y --no-install-recommends \\\n\t\tg++-9 \\\n\t\tgcc-9 \\\n    && apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\nRUN update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 60 \\\n                         --slave /usr/bin/g++ g++ /usr/bin/g++-9\nRUN update-alternatives --config gcc\nRUN gcc --version\nRUN g++ --version\n\n\n# Get newer qt5\nRUN add-apt-repository ppa:beineri/opt-qt-5.12.2-xenial \\\n    && apt-get update \\\n    && apt install -y --no-install-recommends \\\n    freetds-common libclang1-5.0 libllvm5.0 libodbc1 libsdl2-2.0-0 libsndio6.1 \\\n    libsybdb5 libxcb-xinerama0 qt5123d qt512base qt512canvas3d \\\n    qt512connectivity qt512declarative qt512graphicaleffects \\\n    qt512imageformats qt512location qt512multimedia qt512scxml qt512svg \\\n    qt512wayland qt512x11extras qt512xmlpatterns qt512charts-no-lgpl \\\n    && apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\n# Install DSI Studio\nENV QT_BASE_DIR=\"/opt/qt512\"\nENV QTDIR=\"$QT_BASE_DIR\" \\\n    PATH=\"$QT_BASE_DIR/bin:$PATH:/opt/dsi-studio/dsi_studio_64\" \\\n    LD_LIBRARY_PATH=\"$QT_BASE_DIR/lib/x86_64-linux-gnu:$QT_BASE_DIR/lib:$LD_LIBRARY_PATH\" \\\n    PKG_CONFIG_PATH=\"$QT_BASE_DIR/lib/pkgconfig:$PKG_CONFIG_PATH\"\n\n\nADD \"https://api.github.com/repos/frankyeh/DSI-Studio/commits?per_page=1\" latest_commit\nADD \"https://api.github.com/repos/frankyeh/TIPL/commits?per_page=1\" latest_commit\n\n\nRUN mkdir /opt/dsi-studio \\\n  && cd /opt/dsi-studio \\\n  && git clone https://github.com/frankyeh/DSI-Studio.git \\\n  && mv DSI-Studio src \\\n  && git clone https://github.com/frankyeh/TIPL.git \\\n  && mv TIPL src/TIPL \\\n  && mkdir build && cd build \\\n  && /opt/qt512/bin/qmake ../src && make\n\nRUN cd /opt/dsi-studio \\\n  && mv build/dsi_studio . \\\n  && chmod 755 dsi_studio \\\n  && cp -R src/other/* . \\\n  && rm -rf src build \\\n  && git clone https://github.com/frankyeh/DSI-Studio-atlas.git \\\n  && rm -fr DSI-Studio-atlas/.git \\\n  && mv DSI-Studio-atlas atlas\n\nRUN curl -f -sL https://github.com/probonopd/linuxdeployqt/releases/download/7/linuxdeployqt-7-x86_64.AppImage > linuxdeployqt \\\n  && chmod a+x linuxdeployqt \\\n  && ./linuxdeployqt --appimage-extract \\\n  && ./squashfs-root/AppRun /opt/dsi-studio/dsi_studio -unsupported-bundle-everything -no-translations -bundle-non-qt-libs \\\n  && rm -fr squashfs-root \\\n  && rm -fr linuxdeployqt\n\nENV PATH=\"$PATH:/opt/dsi-studio\"\n\n#Create an empty container and transfer only the compiled software out\nFROM scratch\nCOPY --from=builder-stage /opt/dsi-studio /\n"
}