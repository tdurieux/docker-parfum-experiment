{
  "startTime": 1674215504968,
  "endTime": 1674215506525,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 7,
        "columnEnd": 26
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 7,
        "columnEnd": 92
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 7,
        "columnEnd": 35
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:latest\n\nRUN set -xe \\\n    # Install build tools, libraries and utilities\n    && apk add --no-cache --virtual .build-deps \\\n    gnupg \\\n    wget \\\n    # Contain file system pollution\n    && TMP=\"$(mktemp -d)\" && cd \"$TMP\" \\\n    # Check integrity of the signature by signing the public key\n    # retrieved from a key server imported using the key fingerprint \\\n    && gpg --batch --keyserver pgp.mit.edu --recv-keyserver B0F4253373F8F6F510D42178520A9993A1C052F8 \\\n    # Download, verify and unpack artifacts\n    && wget --show-progress http://download/file.tar.gz \\\n    && wget --show-progress http://download/file.tar.gz.asc \\\n    && gpg --batch --verify file.tar.gz.asc \\\n    && tar -xf file.tar.gz \\\n    # Build and install\n    # Clean up\n    && cd / && rm -rf \"$TMP\" \\\n    && apk del .build-deps \\\n    # Forward logs to Docker logs cli\n    && ln -sf /dev/stdout ...logs/output.log \\\n    ln -sf /dev/stderr ...logs/error.log && rm file.tar.gz\n\n# Copy static content and configuration from host to container\nCOPY from to\n\n# Stop the container gracefully\nSTOPSIGNAL SIGQUIT\n\n# Expose port\nEXPOSE 1234\n\n# Define entrypoint and default parameters\nENTRYPOINT [\"\"]\nCMD [\"\",\"\"]\n"
}