{
  "startTime": 1674219600813,
  "endTime": 1674219601529,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#-----------------BUILDER-----------------\n#-----------------------------------------\nFROM node:16-buster AS builder\nCOPY pigallery2-release /app\nWORKDIR /app\nRUN npm install --unsafe-perm && npm cache clean --force;\nRUN mkdir -p /app/data/config && \\\n    mkdir -p /app/data/db && \\\n    mkdir -p /app/data/images && \\\n    mkdir -p /app/data/tmp\n\n\n#-----------------MAIN--------------------\n#-----------------------------------------\nFROM node:16-buster-slim AS main\nWORKDIR /app\nENV NODE_ENV=production \\\n    # overrides only the default value of the settings (the actualy value can be overwritten through config.json)\n    default-Server-Database-dbFolder=/app/data/db \\\n    default-Server-Media-folder=/app/data/images \\\n    default-Server-Media-tempFolder=/app/data/tmp \\\n    # flagging dockerized environemnt\n    PI_DOCKER=true\n\nEXPOSE 80\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends ca-certificates wget ffmpeg \\\n    && apt-get clean -q -y \\\n    && rm -rf /var/lib/apt/lists/*\nCOPY --from=builder /app /app\nVOLUME [\"/app/data/config\", \"/app/data/db\", \"/app/data/images\", \"/app/data/tmp\"]\nHEALTHCHECK --interval=40s --timeout=30s --retries=3 --start-period=60s \\\n  CMD wget --quiet --tries=1 --no-check-certificate --spider \\\n  http://localhost:80/heartbeat || exit 1\n\n# after a extensive job (like video converting), pigallery calls gc, to clean up everthing as fast as possible\n# Exec form entrypoint is need otherwise (using shell form) ENV variables are not properly passed down to the app\nENTRYPOINT [\"node\", \"./src/backend/index\", \"--expose-gc\",  \"--config-path=/app/data/config/config.json\"]\n\n"
}