{
  "startTime": 1674215010718,
  "endTime": 1674215011356,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 8
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 14
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 12,
        "columnEnd": 28
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 18,
        "columnEnd": 34
      }
    }
  ],
  "repairedDockerfile": "# Build frontend dist.\nFROM node:16.15.0-alpine AS frontend\nWORKDIR /frontend-build\n\nCOPY ./web/ .\n\nRUN yarn && yarn cache clean;\nRUN yarn build && yarn cache clean;\n\n# Build backend exec file.\nFROM golang:1.18.3-alpine3.16 AS backend\nWORKDIR /backend-build\n\nRUN apk update\nRUN apk --no-cache add gcc musl-dev\n\nCOPY . .\nCOPY --from=frontend /frontend-build/dist ./server/dist\n\nRUN go build \\\n    -o memos \\\n    ./bin/server/main.go\n\n# Make workspace with above generated files.\nFROM alpine:3.16.0 AS monolithic\nWORKDIR /usr/local/memos\n\nCOPY --from=backend /backend-build/memos /usr/local/memos/\n\n# Directory to store the data, which can be referenced as the mounting point.\nRUN mkdir -p /var/opt/memos\n\nENTRYPOINT [\"./memos\"]\n"
}