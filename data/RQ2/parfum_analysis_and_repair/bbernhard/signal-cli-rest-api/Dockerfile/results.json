{
  "startTime": 1674217309306,
  "endTime": 1674217310609,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 73,
        "lineEnd": 73,
        "columnStart": 16,
        "columnEnd": 33
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 89,
        "lineEnd": 89,
        "columnStart": 5,
        "columnEnd": 23
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG SIGNAL_CLI_VERSION=0.10.8\nARG LIBSIGNAL_CLIENT_VERSION=0.17.0\nARG SIGNAL_CLI_NATIVE_PACKAGE_VERSION=0.10.8-1\n\nARG SWAG_VERSION=1.6.7\nARG GRAALVM_JAVA_VERSION=17\nARG GRAALVM_VERSION=22.1.0\n\nARG BUILD_VERSION_ARG=unset\n\nFROM golang:1.17-bullseye AS buildcontainer\n\nARG SIGNAL_CLI_VERSION\nARG LIBSIGNAL_CLIENT_VERSION\nARG SWAG_VERSION\nARG GRAALVM_JAVA_VERSION\nARG GRAALVM_VERSION\nARG BUILD_VERSION_ARG\nARG SIGNAL_CLI_NATIVE_PACKAGE_VERSION\n\nCOPY ext/libraries/libsignal-client/v${LIBSIGNAL_CLIENT_VERSION} /tmp/libsignal-client-libraries\n\n# use architecture specific libsignal_jni.so\nRUN arch=\"$(uname -m)\"; \\\n        case \"$arch\" in \\\n            aarch64) cp /tmp/libsignal-client-libraries/arm64/libsignal_jni.so /tmp/libsignal_jni.so ;; \\\n\t\t\tarmv7l) cp /tmp/libsignal-client-libraries/armv7/libsignal_jni.so /tmp/libsignal_jni.so ;; \\\n            x86_64) cp /tmp/libsignal-client-libraries/x86-64/libsignal_jni.so /tmp/libsignal_jni.so ;; \\\n\t\t\t*) echo \"Unknown architecture\" && exit 1 ;; \\\n        esac;\n\nRUN dpkg-reconfigure debconf --frontend=noninteractive \\\n\t&& apt-get -qq update \\\n\t&& apt-get -qqy install --no-install-recommends \\\n\t\twget openjdk-17-jre software-properties-common git locales zip unzip \\\n\t\tfile build-essential libz-dev zlib1g-dev < /dev/null > /dev/null \\\n\t&& rm -rf /var/lib/apt/lists/*\n\nRUN sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen && \\\n    dpkg-reconfigure --frontend=noninteractive locales && \\\n    update-locale LANG=en_US.UTF-8\n\nENV JAVA_OPTS=\"-Djdk.lang.Process.launchMechanism=vfork\"\n\nENV LANG en_US.UTF-8\n\nRUN cd /tmp/ \\\n\t&& git clone https://github.com/swaggo/swag.git swag-${SWAG_VERSION} \\\t\n\t&& cd swag-${SWAG_VERSION} \\\n\t&& git checkout -q v${SWAG_VERSION} \\\n\t&& make -s < /dev/null > /dev/null \\\n\t&& cp /tmp/swag-${SWAG_VERSION}/swag /usr/bin/swag \\\n\t&& rm -r /tmp/swag-${SWAG_VERSION}\n\nRUN cd /tmp/ \\\n\t&& wget -nv https://github.com/AsamK/signal-cli/releases/download/v${SIGNAL_CLI_VERSION}/signal-cli-${SIGNAL_CLI_VERSION}-Linux.tar.gz -O /tmp/signal-cli.tar.gz \\\n\t&& tar xf signal-cli.tar.gz && rm signal-cli.tar.gz\n\n# build native image with graalvm\n\nRUN arch=\"$(uname -m)\"; \\\n        case \"$arch\" in \\\n            aarch64) wget -nv https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-${GRAALVM_VERSION}/graalvm-ce-java${GRAALVM_JAVA_VERSION}-linux-aarch64-${GRAALVM_VERSION}.tar.gz -O /tmp/gvm.tar.gz ;; \\\n            armv7l) echo \"GRAALVM doesn't support 32bit\" ;; \\\n            x86_64) wget -nv https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-${GRAALVM_VERSION}/graalvm-ce-java${GRAALVM_JAVA_VERSION}-linux-amd64-${GRAALVM_VERSION}.tar.gz -O /tmp/gvm.tar.gz ;; \\ \n\t\t\t*) echo \"Invalid architecture\" ;; \\\n        esac;\n\nRUN if [ \"$(uname -m)\" = \"x86_64\" ]; then \\\n\t\tcd /tmp \\\n\t\t&& git clone https://github.com/AsamK/signal-cli.git signal-cli-${SIGNAL_CLI_VERSION}-source \\\n\t\t&& cd signal-cli-${SIGNAL_CLI_VERSION}-source \\\n\t\t&& git checkout -q v${SIGNAL_CLI_VERSION} \\\n\t\t&& cd /tmp && tar xf gvm.tar.gz \\\n\t\t&& export GRAALVM_HOME=/tmp/graalvm-ce-java${GRAALVM_JAVA_VERSION}-${GRAALVM_VERSION} \\\n\t\t&& export PATH=/tmp/graalvm-ce-java${GRAALVM_JAVA_VERSION}-${GRAALVM_VERSION}/bin:$PATH \\\n\t\t&& cd /tmp/signal-cli-${SIGNAL_CLI_VERSION}-source \\\n\t\t&& chmod +x /tmp/graalvm-ce-java${GRAALVM_JAVA_VERSION}-${GRAALVM_VERSION}/bin/gu \\ \n\t\t&& /tmp/graalvm-ce-java${GRAALVM_JAVA_VERSION}-${GRAALVM_VERSION}/bin/gu install native-image \\\n\t\t&& ./gradlew -q nativeCompile; rm gvm.tar.gz \\\n\telif [ \"$(uname -m)\" = \"aarch64\" ] ; then \\\n\t\techo \"Use native image from @morph027 (https://packaging.gitlab.io/signal-cli/) for arm64 - many thanks to @morph027\" \\\n\t\t&& curl -fsSL https://packaging.gitlab.io/signal-cli/gpg.key | apt-key add - \\\n\t\t&& echo \"deb https://packaging.gitlab.io/signal-cli focal main\" > /etc/apt/sources.list.d/morph027-signal-cli.list \\\n\t\t&& mkdir -p /tmp/signal-cli-native \\\n\t\t&& cd /tmp/signal-cli-native \\\n\t\t&& apt-get -qq update \\\n\t\t&& apt-get -qq download signal-cli-native=${SIGNAL_CLI_NATIVE_PACKAGE_VERSION} < /dev/null > /dev/null \\\n\t\t&& ar x *.deb \\\n\t\t&& tar xf data.tar.gz \\\n\t\t&& mkdir -p /tmp/signal-cli-${SIGNAL_CLI_VERSION}-source/build/native/nativeCompile \\\n\t\t&& cp /tmp/signal-cli-native/usr/bin/signal-cli-native  /tmp/signal-cli-${SIGNAL_CLI_VERSION}-source/build/native/nativeCompile/signal-cli; rm data.tar.gz \\\n    elif [ \"$(uname -m)\" = \"armv7l\" ] ; then \\\n\t\techo \"GRAALVM doesn't support 32bit\" \\\n\t\t&& echo \"Creating temporary file, otherwise the below copy doesn't work for armv7\" \\\n\t\t&& mkdir -p /tmp/signal-cli-${SIGNAL_CLI_VERSION}-source/build/native/nativeCompile \\\n\t\t&& touch /tmp/signal-cli-${SIGNAL_CLI_VERSION}-source/build/native/nativeCompile/signal-cli; \\\n    else \\\n\t\techo \"Unknown architecture\"; \\\n    fi;\n\n# replace libsignal-client\n\nRUN ls /tmp/signal-cli-${SIGNAL_CLI_VERSION}/lib/libsignal-client-${LIBSIGNAL_CLIENT_VERSION}.jar || (echo \"\\n\\nsignal-client jar file with version ${LIBSIGNAL_CLIENT_VERSION} not found. Maybe the version needs to be bumped in the signal-cli-rest-api Dockerfile?\\n\\n\" && echo \"Available version: \\n\" && ls /tmp/signal-cli-${SIGNAL_CLI_VERSION}/lib/libsignal-client-* && echo \"\\n\\n\" && exit 1)\n\nRUN cd /tmp/ \\\n\t&& zip -qu /tmp/signal-cli-${SIGNAL_CLI_VERSION}/lib/libsignal-client-${LIBSIGNAL_CLIENT_VERSION}.jar libsignal_jni.so \\\n\t&& zip -qr signal-cli-${SIGNAL_CLI_VERSION}.zip signal-cli-${SIGNAL_CLI_VERSION}/* \\\n    && unzip -q /tmp/signal-cli-${SIGNAL_CLI_VERSION}.zip -d /opt \\\n\t&& rm -f /tmp/signal-cli-${SIGNAL_CLI_VERSION}.zip\n\nCOPY src/api /tmp/signal-cli-rest-api-src/api\nCOPY src/client /tmp/signal-cli-rest-api-src/client\nCOPY src/utils /tmp/signal-cli-rest-api-src/utils\nCOPY src/scripts /tmp/signal-cli-rest-api-src/scripts\nCOPY src/main.go /tmp/signal-cli-rest-api-src/\nCOPY src/go.mod /tmp/signal-cli-rest-api-src/\nCOPY src/go.sum /tmp/signal-cli-rest-api-src/\n\n# build signal-cli-rest-api\nRUN cd /tmp/signal-cli-rest-api-src && swag init && go build\n\n# build supervisorctl_config_creator\nRUN cd /tmp/signal-cli-rest-api-src/scripts && go build -o jsonrpc2-helper\n\n# Start a fresh container for release container\nFROM eclipse-temurin:17-focal\n\nENV GIN_MODE=release\n\nENV PORT=8080\n\nARG SIGNAL_CLI_VERSION\nARG BUILD_VERSION_ARG\n\nENV BUILD_VERSION=$BUILD_VERSION_ARG\n\nRUN dpkg-reconfigure debconf --frontend=noninteractive \\\n\t&& apt-get -qq update \\\n\t&& apt-get -qq install -y --no-install-recommends util-linux supervisor netcat < /dev/null > /dev/null \\\n\t&& rm -rf /var/lib/apt/lists/*\n\nCOPY --from=buildcontainer /tmp/signal-cli-rest-api-src/signal-cli-rest-api /usr/bin/signal-cli-rest-api\nCOPY --from=buildcontainer /opt/signal-cli-${SIGNAL_CLI_VERSION} /opt/signal-cli-${SIGNAL_CLI_VERSION}\nCOPY --from=buildcontainer /tmp/signal-cli-${SIGNAL_CLI_VERSION}-source/build/native/nativeCompile/signal-cli /opt/signal-cli-${SIGNAL_CLI_VERSION}/bin/signal-cli-native\nCOPY --from=buildcontainer /tmp/signal-cli-rest-api-src/scripts/jsonrpc2-helper /usr/bin/jsonrpc2-helper\nCOPY entrypoint.sh /entrypoint.sh\n\n\nRUN groupadd -g 1000 signal-api \\\n\t&& useradd --no-log-init -M -d /home -s /bin/bash -u 1000 -g 1000 signal-api \\\n\t&& ln -s /opt/signal-cli-${SIGNAL_CLI_VERSION}/bin/signal-cli /usr/bin/signal-cli \\\n\t&& ln -s /opt/signal-cli-${SIGNAL_CLI_VERSION}/bin/signal-cli-native /usr/bin/signal-cli-native \\\n\t&& mkdir -p /signal-cli-config/ \\\n\t&& mkdir -p /home/.local/share/signal-cli\n\n# remove the temporary created signal-cli-native on armv7, as GRAALVM doesn't support 32bit\nRUN arch=\"$(uname -m)\"; \\\n        case \"$arch\" in \\\n            armv7l) echo \"GRAALVM doesn't support 32bit\" && rm /opt/signal-cli-${SIGNAL_CLI_VERSION}/bin/signal-cli-native /usr/bin/signal-cli-native  ;; \\\n\t\t\taarch64) echo \"GRAALVM temporarily disabled for aarch64\" && rm /opt/signal-cli-${SIGNAL_CLI_VERSION}/bin/signal-cli-native /usr/bin/signal-cli-native  ;; \\\n        esac;\n\nEXPOSE ${PORT}\n\nENV SIGNAL_CLI_CONFIG_DIR=/home/.local/share/signal-cli\nENV SIGNAL_CLI_UID=1000\nENV SIGNAL_CLI_GID=1000\n\nENTRYPOINT [\"/entrypoint.sh\"]\n\nHEALTHCHECK --interval=20s --timeout=10s --retries=3 \\\n    CMD curl -f http://localhost:${PORT}/v1/health || exit 1\n"
}