{
  "startTime": 1674252156913,
  "endTime": 1674252157435,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 89
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 9
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# pull official base image\nFROM fkrull/multi-python:focal\n\n# set working directory\nWORKDIR /app\n\n# add `/app/node_modules/.bin` to $PATH\nENV PATH /app/node_modules/.bin:$PATH\n\n# install curl\nRUN apt-get update && apt-get install -y --no-install-recommends curl && apt-get clean && rm -rf /var/lib/apt/lists/*\n\n# nvm environment variables\nENV NVM_DIR /usr/local/nvm\nENV NODE_VERSION 14.11.0\nRUN mkdir -p $NVM_DIR\n\n# install nvm\n# https://github.com/creationix/nvm#install-script\nRUN curl -f --silent -o- https://raw.githubusercontent.com/creationix/nvm/v0.35.3/install.sh | bash\n\n# install node and npm\nRUN . $NVM_DIR/nvm.sh \\\n    && nvm install $NODE_VERSION \\\n    && nvm alias default $NODE_VERSION \\\n    && nvm use default\n\n# add node and npm to path so the commands are available\nENV NODE_PATH $NVM_DIR/v$NODE_VERSION/lib/node_modules\nENV PATH $NVM_DIR/versions/node/v$NODE_VERSION/bin:$PATH\n\n# confirm installation\nRUN node -v\nRUN npm -v\n\n# export keys to env file\nADD \"https://www.random.org/cgi-bin/randbyte?nbytes=10&format=h\" skipcache\nRUN if [ -f \".env\" ]; then echo \"paste env var values to .env\"; else touch .env; fi;\n\nADD \"https://www.random.org/cgi-bin/randbyte?nbytes=10&format=h\" skipcache\nRUN if [ -f \"package-lock.json\" ]; then rm package-lock.json; fi;\nRUN if [ -d \"node_modules\" ]; then rm -rf node_modules; fi;\nRUN if [ -d \"~/.npm/_cacache\" ]; then rm -rf ~/.npm/_cacache; fi;\n\n# install packages\nCOPY package.json ./\nRUN npm i && npm cache clean --force;\n\n# add app\nCOPY public ./public\nCOPY src ./src\nCOPY .babelrc ./\nCOPY .jshintrc ./\nCOPY .whitesource ./\nCOPY tsconfig.json ./\n\n# build\nRUN npm run build\n\n# start app\nCMD [\"npm\", \"start\"]"
}