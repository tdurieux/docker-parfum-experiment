{
  "startTime": 1674249388035,
  "endTime": 1674249388714,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 78
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 27,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 10
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 48
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Specify the image architecture explicitly,\n# otherwise it will not work correctly on other architectures.\nFROM amd64/centos:centos7 as downloader\n\nUSER root\nWORKDIR /root/download\n\nCOPY ./scripts/download-integration-test-binaries.sh .\n# Download all binaries into bin dir.\nRUN ./download-integration-test-binaries.sh master\nRUN ls ./bin\n\n# Download go into /usr/local dir.\nENV GOLANG_VERSION 1.18\nENV GOLANG_DOWNLOAD_URL https://dl.google.com/go/go$GOLANG_VERSION.linux-amd64.tar.gz\nENV GOLANG_DOWNLOAD_SHA256 e85278e98f57cdb150fe8409e6e5df5343ecb13cebf03a5d5ff12bd55a80264f\nRUN curl -fsSL \"$GOLANG_DOWNLOAD_URL\" -o golang.tar.gz \\\n\t&& echo \"$GOLANG_DOWNLOAD_SHA256  golang.tar.gz\" | sha256sum -c - \\\n\t&& tar -C /usr/local -xzf golang.tar.gz \\\n\t&& rm golang.tar.gz\n\nFROM amd64/centos:centos7\n\nUSER root\nWORKDIR /root\n\n# Installing dependencies.\nRUN yum install -y \\\n\tgit \\\n\tbash-completion \\\n\twget \\\n    which \\\n\tgcc \\\n\tmake \\\n    curl \\\n    tar \\\n    musl-dev \\\n\tsudo \\\n\tpython3 \\\n    psmisc && rm -rf /var/cache/yum\nRUN wget https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm\nRUN yum install -y epel-release-latest-7.noarch.rpm && rm -rf /var/cache/yum\nRUN yum --enablerepo=epel install -y s3cmd && rm -rf /var/cache/yum\n# Install mysql client.\nRUN rpm -ivh https://repo.mysql.com/mysql57-community-release-el7-11.noarch.rpm\n# See: https://support.cpanel.net/hc/en-us/articles/4419382481815?input_string=gpg+keys+problem+with+mysql+5.7\nRUN rpm --import https://repo.mysql.com/RPM-GPG-KEY-mysql-2022\nRUN yum install mysql-community-client.x86_64 -y && rm -rf /var/cache/yum\n\n# Copy go form downloader.\nCOPY --from=downloader /usr/local/go /usr/local/go\nENV GOPATH /go\nENV GOROOT /usr/local/go\nENV PATH $GOPATH/bin:$GOROOT/bin:$PATH\n\nWORKDIR /go/src/github.com/pingcap/tiflow\nCOPY . .\n\n# Clean bin dir and build TiCDC.\n# We always need to clean before we build, please don't adjust its order.\nRUN make clean\nRUN make integration_test_build kafka_consumer cdc\nCOPY --from=downloader /root/download/bin/* ./bin/\nRUN make check_third_party_binary\n"
}