{
  "startTime": 1674255072386,
  "endTime": 1674255073651,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 18,
        "columnEnd": 78
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 42,
        "columnEnd": 61
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 42,
        "columnEnd": 61
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 18,
        "columnEnd": 78
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 42,
        "columnEnd": 61
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 42,
        "columnEnd": 85
      }
    }
  ],
  "repairedDockerfile": "#Stage 1 - Install dependencies and build the app\nFROM debian:latest AS build-env\n\nENV FLUTTER_CHANNEL=\"stable\"\nENV FLUTTER_VERSION=\"3.0.1\"\nENV FLUTTER_URL=\"https://storage.googleapis.com/flutter_infra_release/releases/$FLUTTER_CHANNEL/linux/flutter_linux_$FLUTTER_VERSION-$FLUTTER_CHANNEL.tar.xz\"\nENV FLUTTER_HOME=\"/opt/flutter\"\n\nENV PATH \"$PATH:$FLUTTER_HOME/bin\"\n\n# Prerequisites\nRUN apt update && apt install --no-install-recommends -y curl git unzip xz-utils zip gzip libglu1-mesa \\\n && mkdir -p $FLUTTER_HOME \\\n && curl -f -o flutter.tar.xz $FLUTTER_URL \\\n && tar xf flutter.tar.xz -C /opt \\\n && rm flutter.tar.xz \\\n && flutter doctor \\\n && rm -rf /var/lib/{apt,dpkg,cache,log} && rm -rf /var/lib/apt/lists/*;\n\n# Set directory to Copy App\nWORKDIR /app\n\nCOPY . .\n\n# Precompile tmail flutter\nRUN cd core \\\n  && flutter pub get \\\n  && cd ../model \\\n  && flutter pub get && flutter pub run build_runner build --delete-conflicting-outputs \\\n  && cd ../contact \\\n  && flutter pub get && flutter pub run build_runner build --delete-conflicting-outputs \\\n  && cd .. \\\n  && flutter pub get && flutter pub run build_runner build --delete-conflicting-outputs \\\n  && flutter pub get && flutter pub run intl_generator:extract_to_arb --output-dir=./lib/l10n lib/main/localizations/app_localizations.dart \\\n  && flutter pub get && flutter pub run intl_generator:generate_from_arb --output-dir=lib/l10n --no-use-deferred-loading lib/main/localizations/app_localizations.dart lib/l10n/intl*.arb \\\n  && flutter build web --profile \\\n  && gzip -r -k /app/build/web\n\n# Stage 2 - Create the run-time image\nFROM nginx:stable\nRUN chmod -R 755 /usr/share/nginx/html && apt install --no-install-recommends -y gzip && rm -rf /var/lib/apt/lists/*;\nCOPY --from=build-env /app/server/nginx.conf /etc/nginx\nCOPY --from=build-env /app/build/web /usr/share/nginx/html\n\n# Record the exposed port\nEXPOSE 80\n\nCMD gzip -k -f /usr/share/nginx/html/assets/env.file && nginx -g 'daemon off;'"
}