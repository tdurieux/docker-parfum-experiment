{
  "startTime": 1674253187090,
  "endTime": 1674253187943,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 22,
        "columnEnd": 46
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 22,
        "columnEnd": 46
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Common node machine\nFROM node:16-bullseye-slim as node-base\n\n### Install dependancies\n\n#Docker mac issue\nRUN apt-get update && apt-get install --no-install-recommends -y libc6 && rm -rf /var/lib/apt/lists/*;\nRUN ln -s /lib/libc.musl-x86_64.so.1 /lib/ld-linux-x86-64.so.2\n\n### Install Twake\n\nWORKDIR /usr/src/app\nCOPY backend/node/package*.json ./\n\n# Test Stage\nFROM node-base as test\n\nRUN npm install && npm cache clean --force;\nCOPY backend/node/ .\n\n# Development Stage\nFROM node-base as development\n\nRUN npm install -g pino-pretty && npm cache clean --force;\nRUN npm install -g tsc-watch && npm cache clean --force;\nRUN npm install && npm cache clean --force;\nCOPY backend/node/ .\n\nCMD [\"npm\", \"run\", \"dev\"]\n\n# Production Stage\nFROM node-base as production\n\nARG NODE_ENV=production\n\nENV NODE_ENV=development\nRUN npm install && npm cache clean --force; #Install dev dependancies for build\nCOPY backend/node/ .\nENV NODE_ENV=${NODE_ENV}\nRUN npm run build #Build in production mode\nRUN rm -R node_modules\nRUN npm install && npm cache clean --force; #Install prod dependancies after build\n\nEXPOSE 3000\n\nCMD [\"npm\", \"run\", \"serve\"]\n\n\n"
}