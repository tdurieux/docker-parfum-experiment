{
  "startTime": 1674249612570,
  "endTime": 1674249614009,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 71
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "gemUpdateSystemRmRootGem",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "gemUpdateNoDocument",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 27,
        "columnStart": 22,
        "columnEnd": 8
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 82,
        "lineEnd": 83,
        "columnStart": 4,
        "columnEnd": 1
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 82,
        "lineEnd": 83,
        "columnStart": 4,
        "columnEnd": 1
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 27,
        "columnStart": 22,
        "columnEnd": 8
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 82,
        "lineEnd": 83,
        "columnStart": 4,
        "columnEnd": 1
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 86,
        "lineEnd": 87,
        "columnStart": 4,
        "columnEnd": 1
      }
    }
  ],
  "repairedDockerfile": "ARG RAILSDOCK_RUBY_VERSION=2.6\n\nFROM ruby:$RAILSDOCK_RUBY_VERSION\n\nLABEL maintainer=\"Nate Vick <nate.vick@hint.io>\"\n\nARG DEBIAN_FRONTEND=noninteractive\n\n###############################################################################\n# Base Software Install\n###############################################################################\n\nARG RAILSDOCK_NODE_VERSION=12\n\nRUN curl -f -sL https://deb.nodesource.com/setup_$RAILSDOCK_NODE_VERSION.x | bash -\n\nRUN curl -f -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - && \\\n  echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    build-essential \\\n    nodejs \\\n    yarn \\\n    locales \\\n    git \\\n    netcat \\\n    vim \\\n    sudo && rm -rf /var/lib/apt/lists/*;\n\n###############################################################################\n# Railsdock non-root user\n###############################################################################\n\nARG RUBY_UID\nENV RUBY_UID $RUBY_UID\nARG RUBY_GID\nENV RUBY_GID $RUBY_GID\nARG USER=ruby\nENV USER $USER\n\nRUN groupadd -g $RUBY_GID $USER && \\\n    useradd -u $RUBY_UID -g $USER -m $USER && \\\n    usermod -p \"*\" $USER && \\\n    usermod -aG sudo $USER && \\\n    echo \"$USER ALL=NOPASSWD: ALL\" >> /etc/sudoers.d/50-$USER\n\n###############################################################################\n# Ruby, Rubygems, and Bundler Defaults\n###############################################################################\n\nENV LANG C.UTF-8\n\n# Update Rubygems to latest\nRUN mkdir -p /usr/local/etc \\\n  && { \\\n    echo 'install: --no-document'; \\\n    echo 'update: --no-document'; \\\n  } >> /usr/local/etc/gemrc;\nRUN gem update --system && rm -rf /root/.gem;\n\n# Increase how many threads Bundler uses when installing. Optional!\nARG RAILSDOCK_BUNDLE_JOBS=20\nENV BUNDLE_JOBS $RAILSDOCK_BUNDLE_JOBS\n\n# How many times Bundler will retry a gem download. Optional!\nARG RAILSDOCK_BUNDLE_RETRY=5\nENV BUNDLE_RETRY $RAILSDOCK_BUNDLE_RETRY\n\n# Where Rubygems will look for gems.\nENV GEM_HOME /gems\nENV GEM_PATH /gems\n\n# Add /gems/bin to the path so any installed gem binaries are runnable from bash.\nENV PATH ${GEM_HOME}/bin:${GEM_HOME}/gems/bin:$PATH\n\n###############################################################################\n# Optional Software Install\n###############################################################################\n\n#------------------------------------------------------------------------------\n# Postgres Client:\n#------------------------------------------------------------------------------\n\nARG INSTALL_PG_CLIENT=false\n\nRUN if [ \"$INSTALL_PG_CLIENT\" = true ]; then \\\n    apt-get install --no-install-recommends -y postgresql-client \\\n; rm -rf /var/lib/apt/lists/*; fi\n\n###############################################################################\n# Final Touches\n###############################################################################\n\nRUN mkdir -p \"$GEM_HOME\" && chown $USER:$USER \"$GEM_HOME\"\nRUN mkdir -p /app && chown $USER:$USER /app\n\nWORKDIR /app\n\nRUN mkdir -p node_modules && chown $USER:$USER node_modules\nRUN mkdir -p public/packs && chown $USER:$USER public/packs\nRUN mkdir -p tmp/cache && chown $USER:$USER tmp/cache\n\nUSER $USER\n\n# Install latest bundler\nRUN gem install bundler\n"
}