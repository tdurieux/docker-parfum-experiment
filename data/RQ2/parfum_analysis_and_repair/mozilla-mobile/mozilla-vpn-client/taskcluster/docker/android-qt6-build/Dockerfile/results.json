{
  "startTime": 1674252775297,
  "endTime": 1674252776532,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 67
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 89
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 30,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 59
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# This Source Code Form is subject to the terms of the Mozilla Public\n# License, v. 2.0. If a copy of the MPL was not distributed with this\n# file, You can obtain one at http://mozilla.org/MPL/2.0/.\n\nFROM $DOCKER_IMAGE_PARENT\n\nMAINTAINER Sebastian Streich <sstreich@mozilla.com>\n\n# The build will be run as worker, which has no access\n# thus we should prep the folders\nRUN mkdir -p /builds/worker/.cache/go-build &&\\\n    chown -R worker:worker /builds/worker/.cache/ &&\\\n    chmod -R 777 /builds/worker/\n\n#NDK Version:\nARG NDK_VERSION=android-ndk-r23b\nARG NDK_FILE=${NDK_VERSION}-linux.zip\nARG QT_VERSION=6.2.1\nARG ANDROID_ARCH=android_armv7\nENV DEBIAN_FRONTEND=noninteractive\n\nRUN apt-get -q update &&\\\n    apt-get -yq install --no-install-recommends gnupg curl ca-certificates libglib2.0-dev &&\\\n    # add zulu-jdk to the \n    apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 0xB1998361219BD9C9 && \\\n    curl -f -O https://cdn.azul.com/zulu/bin/zulu-repo_1.0.0-3_all.deb && \\\n    apt-get -y --no-install-recommends install ./zulu-repo_1.0.0-3_all.deb && \\\n    # update the package sources \n    # install Azul Zulu JDK 11\n    apt-get update && \\\n    apt-get -y --no-install-recommends install zulu11-jdk unzip \\\n               python3-pip wget git rsync ccache make patch && \\\n    #Install QT\n    python3 -m pip install aqtinstall && rm -rf /var/lib/apt/lists/*;\nRUN python3 -m aqt install-qt --outputdir /opt linux desktop ${QT_VERSION} gcc_64\nRUN python3 -m aqt install-qt --outputdir /opt linux android ${QT_VERSION} ${ANDROID_ARCH} -m all &&\\\n    #Download Additional stuff that is not in a repo\n    wget -q https://dl.google.com/android/repository/${NDK_FILE} &&\\\n    wget https://dl.google.com/android/repository/commandlinetools-linux-7583922_latest.zip &&\\\n    wget -q https://raw.githubusercontent.com/mozilla-mobile/mozilla-vpn-client/main/requirements.txt && \\\n    pip install --no-cache-dir -r requirements.txt && \\\n    unzip commandlinetools-linux-7583922_latest.zip -d /opt && \\\n    unzip ${NDK_FILE} -d /opt/NDK/ && \\\n    echo y | /opt/cmdline-tools/bin/sdkmanager --sdk_root=/opt/android/sdk --install \"platforms;android-30\" && \\\n    # :qtBindings:compileDebugAidl requires build-tools;29.0.2\n    echo y | /opt/cmdline-tools/bin/sdkmanager --sdk_root=/opt/android/sdk --install \"build-tools;29.0.2\" && \\\n    echo y | /opt/cmdline-tools/bin/sdkmanager --sdk_root=/opt/android/sdk --install \"build-tools;30.0.3\" && \\\n    echo y | /opt/cmdline-tools/bin/sdkmanager --sdk_root=/opt/android/sdk --install \"cmake;3.10.2.4988404\" && \\\n            # Note: Not sure why we need emulator, need to investiage the gradle dependencies\n    echo y | /opt/cmdline-tools/bin/sdkmanager --sdk_root=/opt/android/sdk --install \"emulator\" && \\\n    echo y | /opt/cmdline-tools/bin/sdkmanager --sdk_root=/opt/android/sdk --install \"patcher;v4\" && \\\n    echo y | /opt/cmdline-tools/bin/sdkmanager --sdk_root=/opt/android/sdk --install \"platform-tools\" && \\\n    # Cleanup\n    rm -rf /opt/cmdline-tools && \\\n    rm commandlinetools-linux-7583922_latest.zip && \\\n    rm ${NDK_FILE} && \\\n    rm zulu-repo_1.0.0-3_all.deb && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    mkdir /opt/ccache\n\nENV QTPATH=/opt/${QT_VERSION}/${ANDROID_ARCH}\nENV ANDROID_SDK_ROOT=\"/opt/android/sdk\"\nENV ANDROID_NDK_ROOT=\"/opt/NDK/${NDK_VERSION}\"\nENV ANDROID_NDK_HOME=\"/opt/NDK/${NDK_VERSION}\"\n\nENV PATH=\"/opt/${QT_VERSION}/gcc_64/bin:${QTPATH}/bin:/opt/cmdline-tools/bin:${PATH}\"\nENV XDG_CACHE_HOME =\"/opt/\"\n\nVOLUME /builds/worker/checkouts\nVOLUME /builds/worker/.cache\n\n"
}