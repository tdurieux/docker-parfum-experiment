{
  "startTime": 1674252970115,
  "endTime": 1674252970626,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 11,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 20
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG BASE_IMAGE=alpine:latest\n\n# image0\nFROM ${BASE_IMAGE}\nWORKDIR /srv/handlebars.c\n\nRUN apk update && \\\n    apk --no-cache add alpine-sdk automake autoconf libtool talloc-dev json-c-dev yaml-dev \\\n        pcre-dev check-dev bats\nADD . .\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n        --prefix /usr/local/ \\\n        --enable-lto \\\n        --enable-static \\\n        --enable-hardening \\\n        --disable-shared \\\n        --disable-debug \\\n        --disable-code-coverage \\\n        --disable-lmdb \\\n        --disable-pthread \\\n        --disable-valgrind \\\n        --disable-testing-exports \\\n        RANLIB=gcc-ranlib \\\n        AR=gcc-ar \\\n        NM=gcc-nm \\\n        LD=gcc \\\n        CFLAGS=\"-O3\"\nRUN make\nRUN make check\nRUN make install\n\n# image1\nFROM ${BASE_IMAGE}\nWORKDIR /srv/\nRUN apk --no-cache add talloc json-c yaml\nCOPY --from=0 /usr/local/bin/handlebarsc /usr/local/bin/handlebarsc\nENTRYPOINT [\"/usr/local/bin/handlebarsc\"]\n"
}