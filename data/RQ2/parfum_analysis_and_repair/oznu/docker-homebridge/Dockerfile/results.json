{
  "startTime": 1674246132234,
  "endTime": 1674246133898,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 5,
        "columnEnd": 26
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 5,
        "columnEnd": 49
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 5,
        "columnEnd": 53
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 21,
        "lineEnd": 22,
        "columnStart": 5,
        "columnEnd": 75
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 25,
        "lineEnd": 26,
        "columnStart": 5,
        "columnEnd": 47
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:20.04\n\nLABEL org.opencontainers.image.title=\"Homebridge in Docker\"\nLABEL org.opencontainers.image.description=\"Official Homebridge Docker Image\"\nLABEL org.opencontainers.image.authors=\"oznu\"\nLABEL org.opencontainers.image.url=\"https://github.com/oznu/docker-homebridge\"\nLABEL org.opencontainers.image.licenses=\"GPL-3.0\"\n\nENV S6_OVERLAY_VERSION=3.1.1.2 \\\n S6_CMD_WAIT_FOR_SERVICES_MAXTIME=0 \\\n S6_KEEP_ENV=1 \\\n ENABLE_AVAHI=1 \\\n USER=root \\\n HOMEBRIDGE_APT_PACKAGE=1 \\\n UIX_CUSTOM_PLUGIN_PATH=\"/var/lib/homebridge/node_modules\" \\\n PATH=\"/opt/homebridge/bin:/var/lib/homebridge/node_modules/.bin:$PATH\" \\\n HOME=\"/home/homebridge\" \\\n npm_config_prefix=/opt/homebridge\n\nRUN set -x \\\n  && apt-get update \\\n  && apt-get install --no-install-recommends -y curl wget tzdata locales psmisc procps iputils-ping logrotate \\\n    libatomic1 apt-transport-https apt-utils jq openssl sudo nano net-tools \\\n  && locale-gen en_US.UTF-8 \\\n  && ln -snf /usr/share/zoneinfo/Etc/GMT /etc/localtime && echo Etc/GMT > /etc/timezone \\\n  && apt-get install --no-install-recommends -y python3 python3-pip python3-setuptools git python make g++ libnss-mdns \\\n    avahi-discover libavahi-compat-libdnssd-dev \\\n  && pip3 install --no-cache-dir tzupdate \\\n  && chmod 4755 /bin/ping \\\n  && apt-get clean \\\n  && rm -rf /tmp/* /var/lib/apt/lists/* /var/tmp/* \\\n  && rm -rf /etc/cron.daily/apt-compat /etc/cron.daily/dpkg /etc/cron.daily/passwd /etc/cron.daily/exim4-base\n\nRUN case \"$(uname -m)\" in \\\n    x86_64) S6_ARCH='x86_64';; \\\n    armv7l) S6_ARCH='armhf';; \\\n    aarch64) S6_ARCH='aarch64';; \\\n    *) echo \"unsupported architecture\"; exit 1 ;; \\\n    esac \\\n  && cd /tmp \\\n  && set -x \\\n  && curl -SLOf https://github.com/just-containers/s6-overlay/releases/download/v${S6_OVERLAY_VERSION}/s6-overlay-noarch.tar.xz \\\n  && tar -C / -Jxpf /tmp/s6-overlay-noarch.tar.xz \\\n  && curl -SLOf  https://github.com/just-containers/s6-overlay/releases/download/v${S6_OVERLAY_VERSION}/s6-overlay-${S6_ARCH}.tar.xz \\\n  && tar -C / -Jxpf /tmp/s6-overlay-${S6_ARCH}.tar.xz && rm /tmp/s6-overlay-noarch.tar.xz\n\nRUN case \"$(uname -m)\" in \\\n    x86_64) FFMPEG_ARCH='x86_64';; \\\n    armv7l) FFMPEG_ARCH='armv7l';; \\\n    aarch64) FFMPEG_ARCH='aarch64';; \\\n    *) echo \"unsupported architecture\"; exit 1 ;; \\\n    esac \\\n  && set -x \\\n  && curl -Lfs https://github.com/homebridge/ffmpeg-for-homebridge/releases/download/v0.1.0/ffmpeg-debian-${FFMPEG_ARCH}.tar.gz | tar xzf - -C / --no-same-owner\n\nENV HOMEBRIDGE_PKG_VERSION=1.0.27\n\nRUN case \"$(uname -m)\" in \\\n    x86_64) DEB_ARCH='amd64';; \\\n    armv7l) DEB_ARCH='armhf';; \\\n    aarch64) DEB_ARCH='arm64';; \\\n    *) echo \"unsupported architecture\"; exit 1 ;; \\\n    esac \\\n  && set -x \\\n  && curl -sSLf -o /homebridge_${HOMEBRIDGE_PKG_VERSION}.deb https://github.com/homebridge/homebridge-apt-pkg/releases/download/${HOMEBRIDGE_PKG_VERSION}/homebridge_${HOMEBRIDGE_PKG_VERSION}_${DEB_ARCH}.deb \\\n  && dpkg -i /homebridge_${HOMEBRIDGE_PKG_VERSION}.deb \\\n  && rm -rf /homebridge_${HOMEBRIDGE_PKG_VERSION}.deb \\\n  && chown -R root:root /opt/homebridge \\\n  && rm -rf /var/lib/homebridge\n\nCOPY rootfs /\n\nEXPOSE 8581/tcp\nVOLUME /homebridge\nWORKDIR /homebridge\n\nENTRYPOINT [ \"/init\" ]\n"
}