{
  "startTime": 1674248591303,
  "endTime": 1674248591923,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 26,
        "columnEnd": 58
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 26,
        "columnEnd": 58
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG SOURCE_IMAGE\n\n# Copy assets from the main ETModel image. We need to use FROM to create an alias because COPY's\n# --from won't expand a build arg.\nFROM ${SOURCE_IMAGE} as source\n\n# Base image\nFROM nginx:latest\n\n# Install dependencies\nRUN apt-get update -qq && apt-get -y --no-install-recommends install apache2-utils && rm -rf /var/lib/apt/lists/*;\n\n# Log to stdout and stderr.\nRUN ln -sf /dev/stdout /var/log/nginx/access.log && ln -sf /dev/stderr /var/log/nginx/error.log\n\n# Set our working directory inside the image\nWORKDIR /html\n\n# create log directory\nRUN mkdir log\n\n# copy over static assets\n# COPY public public/\n\n# Copy Nginx config template\nCOPY .docker/nginx/nginx.conf.template /etc/nginx/templates/default.conf.template\n\nARG SOURCE_IMAGE\n\n# Copy the ETModel assets.\nCOPY --from=source /app/public /html/public\n\nEXPOSE 80\n\n# Use the \"exec\" form of CMD so Nginx shuts down gracefully on SIGTERM (i.e. `docker stop`)\nCMD [ \"nginx\", \"-g\", \"daemon off;\" ]\n"
}