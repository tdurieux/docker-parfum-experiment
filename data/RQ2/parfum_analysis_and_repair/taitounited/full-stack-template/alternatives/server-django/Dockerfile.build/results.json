{
  "startTime": 1674253140615,
  "endTime": 1674253141565,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 34,
        "columnEnd": 70
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 3,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 13
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 62
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Builder and tester container for production build\nFROM python:3.9-alpine3.13 as builder\n\nRUN apk add --no-cache --update-cache \\\n  g++ \\\n  libffi-dev \\\n  postgresql-dev \\\n  python3-dev\n\nRUN mkdir -p /develop\nWORKDIR /develop\n\nARG SERVICE_DIR=.\nCOPY ${SERVICE_DIR}/requirements* /develop/\nRUN pip3 install --no-cache-dir --upgrade pip && pip3 install --no-cache-dir -r requirements-dev.txt\nCOPY ${SERVICE_DIR} /develop\n\nRUN flake8\nRUN mypy --ignore-missing-imports src\n# RUN pytest src # TODO: use pytest-django ?\n\n\n# Production runtime container\nFROM python:3.9-alpine3.13\nARG BUILD_VERSION\nLABEL version=${BUILD_VERSION} \\\n      company=companyname \\\n      project=full-stack-template \\\n      role=server\n\nENV PYTHON_ENV production\nRUN apk add --no-cache --update-cache g++ libffi-dev nginx postgresql-dev\n\nRUN mkdir -p /service\nWORKDIR /service\nCOPY --from=builder /develop/src ./src\nCOPY --from=builder /develop/requirements-prod.txt .\n\nRUN pip3 install --no-cache-dir --upgrade pip && \\\n    pip3 install --no-cache-dir -r requirements-prod.txt\nRUN apk del g++ libffi-dev\n\nCOPY ${SERVICE_DIR}/uwsgi.ini .\nCOPY ${SERVICE_DIR}/nginx.conf /etc/nginx/conf.d/default.conf\n\n# Make due for the nginx pid file and unix socket\nRUN mkdir -p /var/run/nginx\nRUN chown nginx:nginx /var/run/nginx\n\nEXPOSE 8080\nCMD nginx -s stop; nginx; nginx -s reload; uwsgi --ini uwsgi.ini\n"
}