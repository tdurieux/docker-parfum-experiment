{
  "startTime": 1674251203778,
  "endTime": 1674251204558,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 4,
        "columnEnd": 60
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Builder and tester container for production build\nFROM node:lts-alpine as builder\nRUN apk add --no-cache --update-cache build-base python3 git fontconfig\n\nRUN mkdir -p /develop\nWORKDIR /develop\n\nARG SERVICE_DIR=.\nCOPY ${SERVICE_DIR}/package.json \\\n     ${SERVICE_DIR}/package-lock.* \\\n     /develop/\n\nENV NODE_ENV development\nRUN npm ci --loglevel warn\n\nCOPY ${SERVICE_DIR} /develop\n\nRUN npm run lint\nRUN npm run unit\nRUN npm run build:prod\n\n# Production runtime container\nFROM node:lts-alpine\nARG BUILD_VERSION\nLABEL version=${BUILD_VERSION} \\\n      company=companyname \\\n      project=full-stack-template \\\n      role=server\n\nRUN mkdir -p /service\nWORKDIR /service\nCOPY --from=builder /build .\nCOPY --from=builder /develop/cli.sh .\nCOPY --from=builder /develop/package.json .\nCOPY --from=builder /develop/package-lock.json .\nCOPY --from=builder /develop/node_modules ./node_modules\n\n# Delete development libraries and create node user if it doesn't exist\nRUN npm prune --production && \\\n    addgroup -S -g 74839 node || \\\n    adduser -S -u 74276 -s /bin/false node || \\\n    addgroup node node || \\\n    su node -s /bin/sh -c \"node --version\"\n\nENV BUILD_VERSION ${BUILD_VERSION}\nENV NODE_ENV production\nENV BASE_PATH /api\n\nUSER node\nEXPOSE 8080\nCMD [\"node\", \"./index.js\"]\n"
}