{
  "startTime": 1674220677598,
  "endTime": 1674220679690,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 39
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM full-stack-template-www-tester:latest as builder\nLABEL version=${BUILD_VERSION} \\\n      company=taito \\\n      project=full-stack-template \\\n      role=webhook\n\nUSER root\n\n# Prepare webhook, curl, and git pull\nRUN apt-get -y update && \\\n    apt-get -y --no-install-recommends install git curl webhook && rm -rf /var/lib/apt/lists/*;\nRUN mkdir -p /etc/webhook && \\\n    ln -s /develop/hooks.json /etc/webhook/hooks.json\n\n# Prepare preview\nRUN cp -rp /develop /preview && \\\n    cp -rp /build/public /build/preview\n\n# Build preview\n# TODO: do full build?\nUSER node\nRUN ( cd /preview && npm run publish:preview )\n\n# Move orig build (/build is replaced with a shared mount)\nUSER root\nRUN mv /build /build-orig && \\\n    mkdir -p /build && \\\n    chown -R node:root /build\n\n# Start webhook\nUSER node\nEXPOSE 9000\nCMD . ~/.bashrc && \\\n    ./webhook.sh deployment && \\\n    webhook -verbose -port 9000 -urlprefix \"$(cat /run/secrets/WEBHOOK_URL_PREFIX)\"\n"
}