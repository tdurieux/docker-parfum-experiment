diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/h2oai/h2o4gpu/Dockerfile-build b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/h2oai/h2o4gpu/Dockerfile-build/repaired.Dockerfile
index c0281dc..d69b980 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/h2oai/h2o4gpu/Dockerfile-build
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/h2oai/h2o4gpu/Dockerfile-build/repaired.Dockerfile
@@ -26,19 +26,19 @@ ENV GIT_VERSION=2.17.0
 #
 # Install necessary libraries and dependencies
 #
-RUN yum install -y epel-release
+RUN yum install -y epel-release && rm -rf /var/cache/yum
 
 RUN yum update -y
 
-RUN yum install centos-release-scl-rh -y
+RUN yum install centos-release-scl-rh -y && rm -rf /var/cache/yum
 
 # Setup gcc etc.
-RUN yum install -y gcc gcc-c++ libgcc libstdc++ libgomp glibc
+RUN yum install -y gcc gcc-c++ libgcc libstdc++ libgomp glibc && rm -rf /var/cache/yum
 
 # Git & gcc requirements
-RUN yum install -y libcurl-devel zlib-devel asciidoc xmlto wget make autoconf gettext gmp-devel mpfr-devel libmpc-devel
+RUN yum install -y libcurl-devel zlib-devel asciidoc xmlto wget make autoconf gettext gmp-devel mpfr-devel libmpc-devel && rm -rf /var/cache/yum
 
-RUN yum install -y devtoolset-7
+RUN yum install -y devtoolset-7 && rm -rf /var/cache/yum
 
 # Compile from source because yum's latest version is 1.8.3
 # --depth for submodule update which we use was added in 1.8.4
@@ -47,9 +47,9 @@ RUN \
     tar xf git-${GIT_VERSION}.tar.xz && \
     cd git-${GIT_VERSION} && \
     make configure && \
-    ./configure --prefix=/usr && \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/usr && \
     make all && \
-    make install;
+    make install; rm git-${GIT_VERSION}.tar.xz
 
 #H2O4GPU requirements
 RUN yum install -y \
@@ -64,7 +64,7 @@ RUN yum install -y \
     epel-release \
     zeromq-devel \
     openblas-devel \
-    libffi-devel
+    libffi-devel && rm -rf /var/cache/yum
 
 RUN \
     git clone https://github.com/NVIDIA/nccl.git && \
@@ -78,14 +78,14 @@ RUN wget https://github.com/Kitware/CMake/releases/download/v3.16.8/cmake-3.16.8
     cd cmake-3.16.8 && \
     ./bootstrap && \
     make -j`nproc` && \
-    make install
+    make install && rm cmake-3.16.8.tar.gz
 
 RUN mkdir -p /opt/h2oai/h2o4gpu
 
 RUN wget https://s3.amazonaws.com/artifacts.h2o.ai/releases/ai/h2o/dai-thirdparty-deps/1.0-master-22/`arch`-centos7/llvm.tar.bz2 && \
     tar xvf llvm.tar.bz2 && \
     cp -r llvm/* /opt/h2oai/h2o4gpu/ && \
-    rm -rf llvm*
+    rm -rf llvm* && rm llvm.tar.bz2
 
 ENV LLVM4=/opt/h2oai/h2o4gpu
 ENV PATH=$LLVM4/bin:$PATH
@@ -141,11 +141,11 @@ RUN \
     wget https://0xdata-public.s3.amazonaws.com/swig/swig-${SWIG_VERSION}.tar.gz && \
     tar -zxvf swig-${SWIG_VERSION}.tar.gz && \
     cd swig-${SWIG_VERSION} && \
-    ./configure --prefix=/usr && \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/usr && \
     make -j $(nproc) && \
     make install && \
     cd $HOME && \
-    rm -rf swig-3*
+    rm -rf swig-3* && rm swig-${SWIG_VERSION}.tar.gz
 
 #
 # PPC64 specific - certain libs/whl don't support PPC64LE
@@ -171,13 +171,13 @@ RUN bash -c 'if [ `arch` = "ppc64le" ]; then \
 #
 RUN echo ${python_version}
 
-RUN pip install -U pip==20.1.1
+RUN pip install --no-cache-dir -U pip==20.1.1
 
-RUN pip install numpy==1.19.2 scipy==1.5.2 setuptools==49.2.0
+RUN pip install --no-cache-dir numpy==1.19.2 scipy==1.5.2 setuptools==49.2.0
 
 COPY src/interface_py/requirements_buildonly.txt requirements_buildonly.txt
 
-RUN pip install -r requirements_buildonly.txt
+RUN pip install --no-cache-dir -r requirements_buildonly.txt
 
 RUN mkdir -p /etc/OpenCL/vendors && \
     echo "libnvidia-opencl.so.1" > /etc/OpenCL/vendors/nvidia.icd
@@ -200,11 +200,11 @@ RUN \
     export PYTHONPATH=/opt/h2oai/h2o4gpu/python/ && \
     ./bootstrap.sh --prefix=/opt/boost/ --with-python=python3 && \
     export CPPFLAGS="-I/opt/h2oai/h2o4gpu/python/include/python${python_version}m/ -fPIC" && \
-    export C_INCLUDE_PATH="/opt/h2oai/h2o4gpu/python/include/python${python_version}m/" ; export CPLUS_INCLUDE_PATH="/opt/h2oai/h2o4gpu/python/include/python${python_version}m/" && \
+    export C_INCLUDE_PATH="/opt/h2oai/h2o4gpu/python/include/python${python_version}m/" ; rm -rf /var/cache/yum rm boost_1_72_0.tar.bz2 export CPLUS_INCLUDE_PATH="/opt/h2oai/h2o4gpu/python/include/python${python_version}m/" && \
     ./b2 link=static -a -d0 install --prefix=/opt/boost/ --with=all -j 20 cxxflags="-fPIC -I /opt/h2oai/h2o4gpu/python/include/python${python_version}m/" && \
     cd /usr/include ; rm -rf boost ; ln -s /opt/boost/include/boost . && \
     cd /usr/lib64/ ; rm -rf libboost* ; cp -a /opt/boost/lib/* . && \
-    cd / 
+    cd /
 
 #	yum install -y boost boost-devel boost-system boost-filesystem boost-thread
 
@@ -212,7 +212,7 @@ ENV LD_LIBRARY_PATH=/opt/boost/lib/:$LD_LIBRARY_PATH
 
 RUN chmod -R o+rwx /opt/h2oai/h2o4gpu/python
 RUN chmod -R o+rwx /root
-RUN yum install -y hdf5-devel
+RUN yum install -y hdf5-devel && rm -rf /var/cache/yum
 RUN bash -c 'if [ `arch` == "ppc64le" ]; then \
 	yum install -y ocl-icd; \
     fi'