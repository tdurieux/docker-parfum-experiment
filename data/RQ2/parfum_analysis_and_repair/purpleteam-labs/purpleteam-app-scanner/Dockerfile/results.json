{
  "startTime": 1674249179039,
  "endTime": 1674249180701,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 19,
        "columnEnd": 30
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright (C) 2017-2022 BinaryMist Limited. All rights reserved.\n\n# Use of this software is governed by the Business Source License\n# included in the file /licenses/bsl.md\n\n# As of the Change Date specified in that file, in accordance with\n# the Business Source License, use of this software will be governed\n# by the Apache License, Version 2.0\n\nFROM node:17-alpine\n\nARG LOCAL_USER_ID\nARG LOCAL_GROUP_ID\n\n# Create an environment variable in our image for the non-root user we want to use.\n# ENV USER 1000\nENV USER app_scanner\nENV GROUP purpleteam\nRUN echo user is: ${USER}, LOCAL_USER_ID is: ${LOCAL_USER_ID}, group is: ${GROUP}, LOCAL_GROUP_ID is: ${LOCAL_GROUP_ID}\n\n# Used for testing zap access manually (usefull for cloud env).\n#RUN apk update\n#RUN apk add wget\n\n#RUN apk add --no-cache git\n# Following taken from: https://github.com/mhart/alpine-node/issues/48#issuecomment-430902787\nRUN apk add --no-cache shadow && \\\n    if [ -z \"`getent group $LOCAL_GROUP_ID`\" ]; then \\\n      addgroup -S -g $LOCAL_GROUP_ID $GROUP; \\\n    else \\\n      groupmod -n $GROUP `getent group $LOCAL_GROUP_ID | cut -d: -f1`; \\\n    fi && \\\n    if [ -z \"`getent passwd $LOCAL_USER_ID`\" ]; then \\\n      adduser -S -u $LOCAL_USER_ID -G $GROUP -s /bin/sh $USER; \\\n    else \\\n      usermod -l $USER -g $LOCAL_GROUP_ID -d /home/$USER -m `getent passwd $LOCAL_USER_ID | cut -d: -f1`; \\\n    fi\n\n# Useful for running commands as root in development\n# RUN apk add --no-cache sudo && \\\n#     echo \"$USER ALL=(root) NOPASSWD:ALL\" > /etc/sudoers.d/$USER && \\\n#     chmod 0440 /etc/sudoers.d/$USER\n\nENV WORKDIR /usr/src/app/\nENV EMISSARY_OUTPUT_TRANSITION_DIR /usr/emissaryOutputTransition/\n\n# Home is required for npm install. System account with no ability to login to shell\n# For standard node image:\n#RUN useradd --create-home --system --shell /bin/false $USER\n# For node alpine:\n# RUN addgroup -S $USER && adduser -S $USER -G $GROUP\n\nRUN mkdir -p $WORKDIR && chown $USER:$GROUP -R $WORKDIR \\\n  && mkdir $EMISSARY_OUTPUT_TRANSITION_DIR && chown $USER:$GROUP -R $EMISSARY_OUTPUT_TRANSITION_DIR && chmod -R 770 $EMISSARY_OUTPUT_TRANSITION_DIR\n\n#RUN cat /etc/resolv.conf\n#RUN echo \"\" > /etc/resolv.conf\n#RUN cat /etc/resolv.conf\n#RUN ping dl-cdn.alpinelinux.org\n\n#RUN apk add --no-cache --virtual .gyp python make g++\n#RUN apk add --no-cache --virtual .gyp python\n\nWORKDIR $WORKDIR\n# For npm@5 or later, copy the automatically generated package-lock.json instead.\nCOPY package*.json $WORKDIR\n\n# Required if posix needed, for winston-syslog-posix\n#RUN apk add --no-cache --virtual .gyp python make g++\n\n# In a cloud build, add the --cloud flag, as in:\n#RUN cd $WORKDIR; npm install --cloud\nRUN cd $WORKDIR && npm install && npm cache clean --force;\n\n# Required if posix needed, for winston-syslog-posix\n#User root\n#RUN apk del .gyp python make g++\n#USER $USER\n\n# String expansion doesn't work currently: https://github.com/moby/moby/issues/35018\n# COPY --chown=${USER}:GROUP . $WORKDIR\nCOPY --chown=app_scanner:purpleteam . $WORKDIR\n\n# Here I used to chown and chmod as shown here: http://f1.holisticinfosecforwebdevelopers.com/chap03.html#vps-countermeasures-docker-the-default-user-is-root\n# Problem is, each of these commands creates another layer of all the files modified and thus adds over 100MB to the image: https://www.datawire.io/not-engineer-running-3-5gb-docker-images/\n# In a prod environment, it may? make sense to do the following, similar to the similar commented out line in the NodeGoat Dockerfile.\n#RUN chmod -R g-s,o-rx /home/$USER && chmod -R o-wrx $WORKDIR\n\n# Then all further actions including running the containers should\n# be done under non-root user, unless root is actually required.\nUSER $USER\n\nEXPOSE 3000\n\nCMD [\"npm\", \"start\"]\n"
}