{
  "startTime": 1674248318345,
  "endTime": 1674248319510,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 67
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 22,
        "columnEnd": 42
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 22,
        "columnEnd": 97
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 5,
        "columnEnd": 41
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 80,
        "columnEnd": 105
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 22,
        "columnEnd": 42
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 80,
        "columnEnd": 105
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 22,
        "columnEnd": 97
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 5,
        "columnEnd": 41
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 80,
        "columnEnd": 105
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 22,
        "columnEnd": 42
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 83,
        "columnEnd": 132
      }
    }
  ],
  "repairedDockerfile": "FROM phusion/baseimage:0.9.19\n\n# Set basic ENV vars\nENV HOME=/root TERM=xterm-color\n\n# Elixir requires UTF-8\nRUN locale-gen en_US.UTF-8\nENV LANG=en_US.UTF-8 \\\n  LANGUAGE=en_US:en \\\n  LC_ALL=en_US.UTF-8\n\nWORKDIR $HOME\n\n# Use baseimage-docker's init process.\nCMD [\"/sbin/my_init\"]\n\n# Install packages needed later\nRUN apt-get update && apt-get install --no-install-recommends -y wget git inotify-tools postgresql-client build-essential && rm -rf /var/lib/apt/lists/*;\n\n# Download and install Erlang and Elixir\nRUN wget https://packages.erlang-solutions.com/erlang-solutions_1.0_all.deb \\\n  && dpkg -i erlang-solutions_1.0_all.deb \\\n  && apt-get update \\\n  && apt-get install --no-install-recommends -y esl-erlang elixir && rm -rf /var/lib/apt/lists/*;\nRUN rm erlang-solutions*.deb\n\n# Install Node.js\nENV NODE_VERSION_MAJOR=7\nRUN curl -f -sL https://deb.nodesource.com/setup_$NODE_VERSION_MAJOR.x | bash - && apt-get install --no-install-recommends -y nodejs && rm -rf /var/lib/apt/lists/*;\n\n# Install Yarn\nRUN curl -f -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -\nRUN echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list\nRUN apt-get update && apt-get install -y --no-install-recommends yarn && rm -rf /var/lib/apt/lists/*;\n\n# Create app user and set WORKDIR to its home dir\nRUN adduser --ingroup staff --disabled-password --gecos \"\" app\nENV APP_HOME=/home/app\nENV UMBRELLA_ROOT=/home/app/pwr2\nRUN mkdir $UMBRELLA_ROOT $UMBRELLA_ROOT/ui\nWORKDIR $APP_HOME\n\n# Install Hex, Phoenix and Rebar\nRUN setuser app mix local.hex --force\nRUN setuser app mix local.rebar --force\n\n# Create Elixir deps and node_modules dirs outside UMBRELLA_ROOT and symlink\n# from inside to keep them \"safe\" when mounting a source volume from HOST\n# into UMBRELLA_ROOT.\nRUN mkdir $APP_HOME/deps $APP_HOME/node_modules\nRUN cd $UMBRELLA_ROOT && ln -s $APP_HOME/deps deps\nRUN cd $UMBRELLA_ROOT/ui && ln -s $APP_HOME/node_modules node_modules\n\n# Add app's node_modules to PATH so they can be found by npm\nENV PATH=\"/home/app/node_modules/.bin:$PATH\"\n\n# Copy source code\nCOPY . $UMBRELLA_ROOT\n\n# Set ownership and permissions\nRUN chown -R app:staff /home/app && chmod -R g+s /home/app\n\n# Uninstall some \"heavy\" packages and clean up apt-get\nRUN apt-get remove build-essential -y\nRUN apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\n# Enable SSH (Authorized keys must be copied in each specific project/environment)\nRUN rm -f /etc/service/sshd/down\nRUN /etc/my_init.d/00_regen_ssh_host_keys.sh\n\nMAINTAINER Iporaitech\n"
}