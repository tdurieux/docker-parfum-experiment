{
  "startTime": 1674221192108,
  "endTime": 1674221192726,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 86,
        "lineEnd": 86,
        "columnStart": 2,
        "columnEnd": 40
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 95,
        "lineEnd": 95,
        "columnStart": 2,
        "columnEnd": 53
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 136,
        "lineEnd": 136,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 143,
        "lineEnd": 143,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 151,
        "lineEnd": 151,
        "columnStart": 4,
        "columnEnd": 21
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 85,
        "lineEnd": 85,
        "columnStart": 44,
        "columnEnd": 60
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 94,
        "lineEnd": 94,
        "columnStart": 57,
        "columnEnd": 73
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 135,
        "lineEnd": 135,
        "columnStart": 32,
        "columnEnd": 48
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 142,
        "lineEnd": 142,
        "columnStart": 25,
        "columnEnd": 41
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 150,
        "lineEnd": 150,
        "columnStart": 25,
        "columnEnd": 41
      }
    }
  ],
  "repairedDockerfile": "#              +------------------+\n#              |                  |\n#              |  builder-base    |\n#              |                  |\n#              +---------+--------+\n#                        ^\n#                        |\n#                        |\n#              +---------+--------+\n#              |                  |\n#              |  yarn-base       +<------------------------------------------------+\n#              |                  |                                                 |\n#              +---------+--------+                                                 |\n#                        ^                                                          |\n#                        |                                                          |\n#                        |                                                          |\n#              +---------+--------+                                      +----------+-------+\n#              |                  |                                      |                  |\n#              |  yarn-deps       |                                      |  yarn-deps-prod  |\n#              |                  |                                      |                  |\n#              +---------+--------+                                      +----------+-------+\n#                        ^                                                          ^\n#                        |                                                          |\n#                        |                                                          |\n#              +---------+--------+                                                 |\n#              |                  |                                                 |\n#              |  builder-src     |<------------------------------+                 |\n#              |                  |                               |                 |\n#              +---+-----------+--+                               |                 |\n#                  ^           ^                                  |                 |\n#                  |           |                                  |                 |\n#                  |           |                                  |                 |\n#  +---------------+--+    +---+--------------+    +-------------------------+      |\n#  |                  |    |                  |    |                         |      |\n#  |  builder-assets  |    |  builder-server  |    |  builder-assets-legacy  |      |\n#  |                  |    |                  |    |                         |      |\n#  +---------------+--+    +---+--------------+    +------------------------ +      |\n#                  ^           ^                                  ^                 |\n#                  |           |                                  |                 |\n#                  |           |                                  |                 |\n#              +---+-----------+--+                               |                 |\n#              |                  |-------------------------------+                 |\n#              |  builder         +<------------------------------------------+     |\n#              |                  |                                           |     |\n#              +--------+---------+                                           |     |\n#                       ^                                                     |     |\n#                       |                                                     |     |\n#                       |                                                     |     |\n#              +--------+---------+                                       +---+-----+--------+\n#              |                  |                                       |                  |\n#              |  electron-runner |                                       |  production      |\n#              |                  |                                       |                  |\n#              +------------------+                                       +------------------+\n\n# ---------------------------------------------------------\n# Base build dependencies\n# ---------------------------------------------------------\nFROM node:14.17.5-alpine3.11 as builder-base\n\nWORKDIR /app\n\n# Install system dependencies\nRUN apk --no-cache --quiet add \\\n  bash \\\n  build-base \\\n  curl \\\n  git \\\n  python\n\n# ---------------------------------------------------------\n# Yarn base\n# ---------------------------------------------------------\nFROM builder-base as yarn-base\n\n# Copy files required for installation of application dependencies\nCOPY package.json yarn.lock ./\nCOPY patches ./patches\n\n# ---------------------------------------------------------\n# Yarn dependencies\n# ---------------------------------------------------------\nFROM yarn-base as yarn-deps\n\nRUN --mount=type=cache,id=yarndev,target=/usr/local/share/.cache \\\n  --mount=type=cache,id=cypress,sharing=locked,target=/root/.cache/Cypress \\\n  yarn install --frozen-lockfile --quiet && yarn cache clean;\n\n# ---------------------------------------------------------\n# Yarn dependencies\n# ---------------------------------------------------------\nFROM yarn-base as yarn-deps-prod\n\nRUN --mount=type=cache,id=yarnprod,target=/usr/local/share/.cache \\\n  --mount=type=cache,id=cypress,sharing=locked,target=/root/.cache/Cypress \\\n  yarn install --production --frozen-lockfile --quiet && yarn cache clean;\n\n# ---------------------------------------------------------\n# Builder with source code\n# ---------------------------------------------------------\nFROM yarn-deps as builder-src\n\n# Copy application code\nCOPY __mocks__ ./__mocks__\nCOPY cypress ./cypress\nCOPY data ./data\nCOPY packages ./packages\nCOPY patches ./patches\nCOPY src ./src\nCOPY webpack ./webpack\nCOPY .env.oss \\\n  .env.test \\\n  .eslintrc.js \\\n  .nvmrc \\\n  .prettierignore \\\n  apollo.config.js \\\n  babel.config.js \\\n  coffeelint.json \\\n  cypress.json \\\n  dangerfile.ts \\\n  jest.config.legacy.js \\\n  jest.config.v2.js \\\n  package.json \\\n  relay.config.js \\\n  test.config.js \\\n  test.mocha.js \\\n  tsconfig.json \\\n  yarn.lock \\\n  ./\n\n# ---------------------------------------------------------\n# Compile legacy assets\n# ---------------------------------------------------------\nFROM builder-src as builder-assets-legacy\n\n# Build legacy application\nRUN yarn build:assets:legacy && yarn cache clean;\n\n# ---------------------------------------------------------\n# Compile assets\n# ---------------------------------------------------------\nFROM builder-src as builder-assets\n\nRUN yarn build:assets && yarn cache clean;\n\n# ---------------------------------------------------------\n# Compile server\n# ---------------------------------------------------------\nFROM builder-src as builder-server\n\n# Build application\nRUN yarn build:server && yarn cache clean;\n\n# ---------------------------------------------------------\n# All development assets\n# ---------------------------------------------------------\nFROM builder-src as builder\n\n# Scripts\nCOPY ./scripts ./scripts\n\n# Client assets\nCOPY --from=builder-assets-legacy /app/manifest.json .\nCOPY --from=builder-assets-legacy /app/public ./public\nCOPY --from=builder-assets-legacy /app/src ./src\n\n# Client (Novo) assets\nCOPY --from=builder-assets /app/manifest-novo.json .\nCOPY --from=builder-assets /app/public ./public\n\n# Server assets\nCOPY --from=builder-server /app/server.dist.js .\nCOPY --from=builder-server /app/server.dist.js.map .\n\n# ---------------------------------------------------------\n# Image with xvfb to run Electron with a virtual display\n# ---------------------------------------------------------\nFROM node:14.17.5-stretch-slim as electron-runner\n\nWORKDIR /app\n\n# Install electron deps\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n  curl \\\n  libgtk2.0-0 \\\n  libgtk-3-0 \\\n  libgbm-dev \\\n  libnotify-dev \\\n  libgconf-2-4 \\\n  libnss3 \\\n  libxss1 \\\n  libasound2 \\\n  libxtst6 \\\n  xauth \\\n  xvfb \\\n  && rm -rf /var/lib/apt/lists/*\n\nCOPY --from=builder /app /app\n\n# ---------------------------------------------------------\n# Release image\n# ---------------------------------------------------------\n#\n# Release stage. This stage creates the final docker iamge that will be\n# released. It contains only production dependencies and artifacts.\n#\nFROM node:14.17.5-alpine3.11 as production\n\nRUN apk --no-cache --quiet add \\\n  bash \\\n  dumb-init \\\n  && adduser -D -g '' deploy\n\nWORKDIR /app\nRUN chown deploy:deploy $(pwd)\n\nUSER deploy\n\n# Production node modules.\nCOPY --chown=deploy:deploy --from=yarn-deps-prod /app/node_modules ./node_modules\n\n# Base code\nCOPY --chown=deploy:deploy --from=builder /app/data ./data\nCOPY --chown=deploy:deploy --from=builder /app/package.json .\nCOPY --chown=deploy:deploy --from=builder /app/packages ./packages\nCOPY --chown=deploy:deploy --from=builder /app/scripts ./scripts\nCOPY --chown=deploy:deploy --from=builder /app/webpack ./webpack\nCOPY --chown=deploy:deploy --from=builder /app/yarn.lock .\n\n# Client assets\nCOPY --chown=deploy:deploy --from=builder /app/manifest.json .\nCOPY --chown=deploy:deploy --from=builder /app/manifest-novo.json .\nCOPY --chown=deploy:deploy --from=builder /app/public ./public\nCOPY --chown=deploy:deploy --from=builder /app/src ./src\n\n# Server assets\nCOPY --chown=deploy:deploy --from=builder /app/server.dist.js .\nCOPY --chown=deploy:deploy --from=builder /app/server.dist.js.map .\n\nENTRYPOINT [\"/usr/bin/dumb-init\", \"--\"]\n\n# TODO: Reduce production memory, this is not a concern\nCMD [\"node\", \"--max_old_space_size=3072\", \"--heapsnapshot-signal=SIGUSR2\", \"./server.dist.js\"]\n"
}