{
  "startTime": 1674217692981,
  "endTime": 1674217694065,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 34
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 38,
        "columnEnd": 54
      }
    }
  ],
  "repairedDockerfile": "FROM node:14-alpine\n\nENV PATH=\"${PATH}:/app/node_modules/.bin\" \\\n  # Defines version of dependencies for apk add\n  APK_BRANCH=3.10 \\\n  # Installs Chromium (77) package.\n  CHROME_BIN=/usr/bin/chromium-browser \\\n  # We don't pass real value here, workaround to bypass npm check on from .npmrc\n  NPM_TOKEN=''\n\nRUN printf \"http://nl.alpinelinux.org/alpine/v$APK_BRANCH/%s\\n\" community main > /etc/apk/repositories && \\\n  apk add --no-cache \\\n  harfbuzz \\\n  nss \\\n  git \\\n  curl \\\n  jq \\\n  chromium \\\n  openssh-client \\\n  bash \\\n  sed \\\n  shadow\n\n# Change default 'node' user id to match jenkins CI user id\n# so when we will be running container from CI it would have\n# all necessary rights for npm/yarn publish\nRUN groupmod -g 469 node && usermod -u 469 -g 469 node\n\nWORKDIR /app\n\n# Fix permissions to a workdir\nRUN chown -R node /app\n\nUSER node\n\n# Enables layer caching\nCOPY --chown=node:node package.json yarn.lock ./\n\n# Copy package.json to restore symlinks in a single yarn install\nCOPY --chown=node:node packages/picasso/package.json ./packages/picasso/package.json\nCOPY --chown=node:node packages/picasso-charts/package.json ./packages/picasso-charts/package.json\nCOPY --chown=node:node packages/picasso-forms/package.json ./packages/picasso-forms/package.json\nCOPY --chown=node:node packages/shared/package.json ./packages/shared/package.json\nCOPY --chown=node:node packages/picasso-codemod/package.json ./packages/picasso-codemod/package.json\nCOPY --chown=node:node packages/topkit-analytics-charts/package.json ./packages/topkit-analytics-charts/package.json\nCOPY --chown=node:node packages/picasso-provider/package.json ./packages/picasso-provider/package.json\n\n# Install node_modules\nRUN yarn install --frozen-lockfile && yarn cache clean;\n\n# COPY sources to workdir\nCOPY --chown=node:node . /app\n\n# Need this file for publishing packages to npm\nRUN printf '//registry.npmjs.org/:_authToken=${NPM_TOKEN}\\nalways-auth=true\\n' > .npmrc\n"
}