{
  "startTime": 1674220607772,
  "endTime": 1674220608860,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 91
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 126
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 449
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 91
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 126
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 449
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 31
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM php:8.1-apache\n\nRUN set -eux \\\n && apt-get update -y \\\n && apt-get upgrade -y \\\n && curl -fsSL https://deb.nodesource.com/setup_16.x | bash - \\\n && apt-get install --no-install-recommends -y git autoconf g++ libtool make mariadb-client wget vim inetutils-ping \\\n && apt-get install --no-install-recommends -y libzip-dev libpng-dev libjpeg62-turbo-dev libfreetype6-dev libicu-dev locales ssl-cert libfreetype6-dev \\\n && apt-get install --no-install-recommends -y nodejs \\\n && apt-get install --no-install-recommends -y libgbm-dev gconf-service libxext6 libxfixes3 libxi6 libxrandr2 libxrender1 libcairo2 libcups2 libdbus-1-3 libexpat1 libfontconfig1 libgcc1 libgconf-2-4 libgdk-pixbuf2.0-0 libglib2.0-0 libgtk-3-0 libnspr4 libpango-1.0-0 libpangocairo-1.0-0 libstdc++6 libx11-6 libx11-xcb1 libxcb1 libxcomposite1 libxcursor1 libxdamage1 libxss1 libxtst6 libnss3 libasound2 libatk1.0-0 libc6 ca-certificates fonts-liberation lsb-release xdg-utils \\\n # bellow 2 lines are tweak for Arm64 support. Wanna be remove in future.\n && apt-get install --no-install-recommends -y chromium \\\n && ln -s /usr/bin/chromium /usr/bin/chromium-browser \\\n && sed -i -E 's/# (ja_JP.UTF-8)/\\1/' /etc/locale.gen \\\n && locale-gen \\\n && docker-php-ext-configure gd --with-jpeg=/usr --with-freetype=/usr \\\n && docker-php-ext-configure opcache --enable-opcache \\\n && docker-php-ext-install opcache bcmath pdo_mysql gd exif zip gettext intl \\\n && pecl install xdebug \\\n && docker-php-ext-enable xdebug \\\n && rm -rf /tmp/* && rm -rf /var/lib/apt/lists/*;\n\nARG PUID=1000\nARG PGID=1000\n\nRUN echo \"-> $PUID\"\nRUN echo \"-> $PGID\"\n\nRUN groupmod -o -g $PGID www-data && \\\n    usermod -o -u $PUID -g www-data www-data && \\\n    usermod --shell /bin/bash www-data\n\nCOPY ./etc/apache2/sites-available/001-blog.conf /etc/apache2/sites-available/\nCOPY ./usr/local/etc/php/conf.d/docker-php-ext-xdebug-debug-enable.ini /usr/local/etc/php/conf.d/docker-php-ext-xdebug-debug-enable.ini\nCOPY ./usr/local/etc/php/conf.d/php-error-settings.ini /usr/local/etc/php/conf.d/php-error-settings.ini\nCOPY ./etc/apache2/apache2.conf /etc/apache2\n\nRUN make-ssl-cert generate-default-snakeoil --force-overwrite\n\nRUN a2enmod rewrite \\\n && a2enmod ssl \\\n && a2dissite default-ssl \\\n && a2dissite 000-default \\\n && a2ensite 001-blog.conf\n\n"
}