{
  "startTime": 1674219338361,
  "endTime": 1674219341112,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 105
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 2,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 105
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 105
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 2,
        "columnEnd": 45
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 4,
        "columnEnd": 47
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 129
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 4,
        "columnEnd": 69
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 4,
        "columnEnd": 71
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:14.04\nMAINTAINER xenron <xenron@hotmail.com>\n\n# init wheezy docker\nRUN apt-get clean -y && apt-get autoclean -y && apt-get autoremove -y && \\\n  rm -rf /var/cache/debconf/*-old && rm -rf /var/lib/apt/lists/* && rm -rf /usr/share/doc/* && \\\n  apt-get update -y && \\\n  echo \"`cat /etc/issue.net` Docker Image - philcryer/min-wheezy - `date +'%Y/%m/%d'`\" > /etc/motd\n\nRUN apt-get install --no-install-recommends -y vim tar unzip wget net-tools software-properties-common python-software-properties && \\\n  apt-get clean -y && apt-get autoclean -y && apt-get autoremove -y && rm -rf /var/lib/apt/lists/*;\n#  rm -rf /var/lib/{apt,dpkg,cache,log}/ && \\\n#  rm -rf /tmp\n\n# dnsmasq configuration\n# ADD dnsmasq/* /etc/\n\n# install serf\n#RUN  wget -q -o out.log -P /tmp/ https://releases.hashicorp.com/serf/0.7.0/serf_0.7.0_linux_amd64.zip && \\\n#  rm -rf /bin/serf\n\n#RUN unzip /tmp/serf_0.7.0_linux_amd64.zip -d /bin && \\\n#  rm /tmp/serf_0.7.0_linux_amd64.zip\n\n# configure serf\n#ENV SERF_CONFIG_DIR /etc/serf\n#ADD serf/* $SERF_CONFIG_DIR/\n#ADD handlers $SERF_CONFIG_DIR/handlers\n#RUN chmod +x  $SERF_CONFIG_DIR/event-router.sh $SERF_CONFIG_DIR/start-serf-agent.sh\n\n# install openssh-server\nRUN apt-get update && \\\n  apt-get install --no-install-recommends -y curl openssh-server nano && \\\n  apt-get clean -y && apt-get autoclean -y && apt-get autoremove -y && rm -rf /var/lib/apt/lists/*;\n#  rm -rf /var/lib/{apt,dpkg,cache,log}/\n\n# Java Version\n# ENV JAVA_VERSION_MAJOR 8\n# ENV JAVA_VERSION_MINOR 111\n# ENV JAVA_VERSION_BUILD 14\n# ENV JAVA_PACKAGE       jdk\n\n# Download and unarchive Java\n# RUN mkdir -p /opt &&\\\n#     curl -jksSLH \"Cookie: oraclelicense=accept-securebackup-cookie\"\\\n#     http://download.oracle.com/otn-pub/java/jdk/${JAVA_VERSION_MAJOR}u${JAVA_VERSION_MINOR}-b${JAVA_VERSION_BUILD}/${JAVA_PACKAGE}-${JAVA_VERSION_MAJOR}u${JAVA_VERSION_MINOR}-linux-x64.tar.gz | gunzip -c - | tar -xf - -C /opt &&\\\n#     ln -s /opt/jdk1.${JAVA_VERSION_MAJOR}.0_${JAVA_VERSION_MINOR} /opt/jdk &&\\\n#     rm -rf /opt/jdk/*src.zip \\\n#          /opt/jdk/lib/missioncontrol \\\n#          /opt/jdk/lib/visualvm \\\n#          /opt/jdk/lib/*javafx* \\\n#          /opt/jdk/jre/lib/plugin.jar \\\n#          /opt/jdk/jre/lib/ext/jfxrt.jar \\\n#          /opt/jdk/jre/bin/javaws \\\n#          /opt/jdk/jre/lib/javaws.jar \\\n#          /opt/jdk/jre/lib/desktop \\\n#          /opt/jdk/jre/plugin \\\n#          /opt/jdk/jre/lib/deploy* \\\n#          /opt/jdk/jre/lib/*javafx* \\\n#          /opt/jdk/jre/lib/*jfx* \\\n#          /opt/jdk/jre/lib/amd64/libdecora_sse.so \\\n#          /opt/jdk/jre/lib/amd64/libprism_*.so \\\n#          /opt/jdk/jre/lib/amd64/libfxplugins.so \\\n#          /opt/jdk/jre/lib/amd64/libglass.so \\\n#          /opt/jdk/jre/lib/amd64/libgstreamer-lite.so \\\n#          /opt/jdk/jre/lib/amd64/libjavafx*.so \\\n#          /opt/jdk/jre/lib/amd64/libjfx*.so\n\n# Set environment\n# ENV JAVA_HOME /opt/jdk\n# ENV PATH ${PATH}:${JAVA_HOME}/bin\n\nRUN add-apt-repository ppa:webupd8team/java\nRUN apt-get update\nRUN echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true | sudo /usr/bin/debconf-set-selections\nRUN apt-get install --no-install-recommends -y oracle-java8-installer && rm -rf /var/lib/apt/lists/*;\nRUN apt-get install --no-install-recommends -y oracle-java8-set-default && rm -rf /var/lib/apt/lists/*;\nRUN echo \"JAVA_HOME=/usr/lib/jvm/java-8-oracle\" >> /etc/environment\nRUN echo \"JRE_HOME=/usr/lib/jvm/java-8-oracle/jre\" >> /etc/environment\n\n# move all configuration files into container\nADD files/* /usr/local/\n\n# set jave environment variable\nENV JAVA_HOME /usr/lib/jvm/java-8-oracle\nENV PATH $PATH:$JAVA_HOME/bin\n\n#configure ssh free key access\nRUN mkdir /var/run/sshd && \\\n  ssh-keygen -t rsa -f ~/.ssh/id_rsa -P '' && \\\n  cat ~/.ssh/id_rsa.pub >> ~/.ssh/authorized_keys && \\\n  mv /usr/local/ssh_config ~/.ssh/config && \\\n  sed 's@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd\n\n# RUN sysv-rc-conf sshd on\n# RUN sed -i '/exit 0/ i /etc/init.d/ssh start' /etc/rc.local\n\n"
}