diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/sp7-ritmare/starterkit/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/sp7-ritmare/starterkit/Dockerfile/repaired.Dockerfile
index 617601f..919c4f9 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/sp7-ritmare/starterkit/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/sp7-ritmare/starterkit/Dockerfile/repaired.Dockerfile
@@ -10,23 +10,23 @@ RUN mkdir -p /usr/share/man/man1; mkdir -p /usr/share/man/man7
 RUN echo "Updating apt-get" && \
         apt-get update && \
         echo "Installing build dependencies" && \
-        apt-get install -y git gcc make libc-dev musl-dev libpcre3 libpcre3-dev g++ && \
+        apt-get install --no-install-recommends -y git gcc make libc-dev musl-dev libpcre3 libpcre3-dev g++ && \
         echo "Installing database dependencies" && \
-        apt-get install -y postgresql-client libpq-dev sqlite3 && \
+        apt-get install --no-install-recommends -y postgresql-client libpq-dev sqlite3 && \
         echo "Installing Pillow dependencies" && \
         # RUN apt-get install -y NOTHING ?? It was probably added in other packages... ALPINE needed jpeg-dev zlib-dev && \
         echo "Installing GDAL dependencies" && \
-        apt-get install -y libgeos-dev libgdal-dev && \
+        apt-get install --no-install-recommends -y libgeos-dev libgdal-dev && \
         echo "Installing Psycopg2 dependencies" && \
         # RUN apt-get install -y NOTHING ?? It was probably added in other packages... ALPINE needed postgresql-dev && \
         echo "Installing other dependencies" && \
-        apt-get install -y libxml2-dev libxslt-dev gettext zip libmemcached-dev libsasl2-dev zlib1g-dev && \
+        apt-get install --no-install-recommends -y libxml2-dev libxslt-dev gettext zip libmemcached-dev libsasl2-dev zlib1g-dev && \
         echo "Installing GeoIP dependencies" && \
-        apt-get install -y geoip-bin geoip-database && \
+        apt-get install --no-install-recommends -y geoip-bin geoip-database && \
         echo "Installing healthceck dependencies" && \
-        apt-get install -y curl && \
+        apt-get install --no-install-recommends -y curl && \
         echo "Python server" && \
-        pip install uwsgi && \
+        pip install --no-cache-dir uwsgi && \
         echo "Removing build dependencies and cleaning up" && \
         # TODO : cleanup apt-get with something like apt-get -y --purge autoremove gcc make libc-dev musl-dev libpcre3 libpcre3-dev g++ && \
         rm -rf /var/lib/apt/lists/* && \
@@ -34,16 +34,16 @@ RUN echo "Updating apt-get" && \
 
 # Install python dependencies
 RUN echo "Geonode python dependencies"
-RUN pip install celery==4.1.0 # see https://github.com/GeoNode/geonode/pull/3714
+RUN pip install --no-cache-dir celery==4.1.0# see https://github.com/GeoNode/geonode/pull/3714
 
-RUN mkdir -p /usr/src/app
+RUN mkdir -p /usr/src/app && rm -rf /usr/src/app
 COPY . /usr/src/app/
 WORKDIR /usr/src/app
 
 RUN mkdir -p /var/log/uwsgi/app/
 RUN touch /var/log/uwsgi/app/geosk.log
 
-RUN apt-get update && apt-get -y install cron
+RUN apt-get update && apt-get -y --no-install-recommends install cron && rm -rf /var/lib/apt/lists/*;
 COPY monitoring-cron /etc/cron.d/monitoring-cron
 RUN chmod 0644 /etc/cron.d/monitoring-cron
 RUN crontab /etc/cron.d/monitoring-cron
@@ -55,13 +55,13 @@ RUN chmod +x /usr/bin/wait-for-databases
 RUN chmod +x /usr/src/app/tasks.py \
     && chmod +x /usr/src/app/entrypoint.sh
 
-RUN mkdir -p /usr/src/app/geosk/uploaded
-RUN mkdir -p /usr/src/app/geosk/static_root
+RUN mkdir -p /usr/src/app/geosk/uploaded && rm -rf /usr/src/app/geosk/uploaded
+RUN mkdir -p /usr/src/app/geosk/static_root && rm -rf /usr/src/app/geosk/static_root
 RUN chmod -Rf 775 /usr/src/app/geosk/uploaded
 RUN chmod -Rf 775 /usr/src/app/geosk/static_root
 
 # Upgrade pip
-RUN pip install pip==20.1
+RUN pip install --no-cache-dir pip==20.1
 
 # To understand the next section (the need for requirements.txt and setup.py)
 # Please read: https://packaging.python.org/requirements/
@@ -71,9 +71,9 @@ RUN ln -fs /usr/lib/python2.7/plat-x86_64-linux-gnu/_sysconfigdata*.py /usr/lib/
 
 # app-specific requirements
 RUN pip install --upgrade --no-cache-dir --src /usr/src -r requirements.txt
-RUN pip install --upgrade -e .
+RUN pip install --no-cache-dir --upgrade -e .
 
 # Install pygdal (after requirements for numpy 1.16)
-RUN pip install pygdal==$(gdal-config --version).*
+RUN pip install --no-cache-dir pygdal==$(gdal-config --version).*
 
 ENTRYPOINT service cron restart && /usr/src/app/entrypoint.sh