{
  "startTime": 1674251737339,
  "endTime": 1674251738387,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 131
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 7,
        "columnStart": 18,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 112
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 16,
        "columnStart": 18,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 18,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 112
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 7,
        "columnStart": 18,
        "columnEnd": 34
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 18,
        "columnEnd": 40
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 112
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:20.04\n\nENV DEBIAN_FRONTEND=noninteractive\n\n# apt install\n## for docker image\nRUN apt update && apt install --no-install-recommends -y \\\n    git python3.8 sudo dialog wget && rm -rf /var/lib/apt/lists/*;\n## for stip-rs & stip-sns\nRUN apt install --no-install-recommends -y \\\n    python3-pip apache2 libapache2-mod-wsgi-py3 libmysqlclient-dev mysql-client python3-dev libpq-dev libssl-dev \\\n && apt clean \\\n && rm -rf /var/lib/apt/lists/*\nRUN wget -qO - https://www.mongodb.org/static/pgp/server-4.4.asc | apt-key add -\nRUN echo \"deb [ arch=amd64 ] https://repo.mongodb.org/apt/ubuntu focal/mongodb-org/4.4 multiverse\" | tee /etc/apt/sources.list.d/mongodb-org-4.4.list\nRUN apt update && apt install --no-install-recommends -y \\\n    mongodb-org \\\n && apt clean \\\n && rm -rf /var/lib/apt/lists/*\nRUN apt update && apt install --no-install-recommends -y systemd && rm -rf /var/lib/apt/lists/*;\n\n# env\nENV INSTALL_DIR=/opt/s-tip \\\n    COMMON_DIR=/stip-common\nENV SCRIPTS_DIR ${COMMON_DIR}/install_scripts\n\n# pip install\nWORKDIR /\nRUN git clone https://github.com/s-tip/stip-common.git\nRUN pip3 install --no-cache-dir -r ${SCRIPTS_DIR}/requirements_rs.txt -r -r\n\n# stip-common setup\nRUN mkdir -p ${INSTALL_DIR}/common\nRUN ln -s ${COMMON_DIR}/src ${INSTALL_DIR}/common/src && ln -s ${COMMON_DIR}/img ${INSTALL_DIR}/common/img\n\n# stip-rs setup\nWORKDIR /stip-common\nRUN git clone https://github.com/s-tip/stip-rs.git\nRUN mkdir -p ${INSTALL_DIR}/rs/bin ${INSTALL_DIR}/rs/community ${INSTALL_DIR}/rs/data ${INSTALL_DIR}/rs/staticfiles\nRUN ln -s ${COMMON_DIR}/stip-rs/src ${INSTALL_DIR}/rs/src\nRUN cp -p ${COMMON_DIR}/stip-rs/bin/* ${INSTALL_DIR}/rs/bin/ && cp -p ${COMMON_DIR}/stip-rs/data/* ${INSTALL_DIR}/rs/data/&& cp -p ${SCRIPTS_DIR}/env ${INSTALL_DIR}/.env\nRUN ln -s ${INSTALL_DIR}/.env ${INSTALL_DIR}/rs/.env\nRUN ${INSTALL_DIR}/rs/bin/setup_env.py ${INSTALL_DIR}/.env\nRUN cp -p ${SCRIPTS_DIR}/apache/ports.conf /etc/apache2/ && cp -p ${SCRIPTS_DIR}/apache/stip-rs-ssl.conf /etc/apache2/sites-available\nRUN sh -c \"echo ServerName `hostname` > /etc/apache2/conf-available/fqdn.conf\"\nRUN a2enconf fqdn\nRUN a2enmod ssl\nRUN a2ensite stip-rs-ssl\n\n# stip-gv setup\nWORKDIR /stip-common\nRUN git clone https://github.com/s-tip/stip-gv.git\nRUN mkdir -p ${INSTALL_DIR}/gv/bin ${INSTALL_DIR}/gv/conf ${INSTALL_DIR}/gv/staticfiles ${INSTALL_DIR}/gv/stix\nRUN ln -s ${COMMON_DIR}/stip-gv/src ${INSTALL_DIR}/gv/src\nRUN cp -p ${COMMON_DIR}/stip-gv/bin/* ${INSTALL_DIR}/gv/bin/ && cp -p ${COMMON_DIR}/stip-gv/conf/* ${INSTALL_DIR}/gv/conf\nRUN ln -s ${INSTALL_DIR}/.env ${INSTALL_DIR}/gv/.env\nRUN cp -p ${SCRIPTS_DIR}/apache/stip-gv-ssl.conf /etc/apache2/sites-available\nRUN a2ensite stip-gv-ssl\n\n# stip-sns setup\nWORKDIR /stip-common\nRUN git clone https://github.com/s-tip/stip-sns.git\nRUN mkdir -p ${INSTALL_DIR}/sns/bin ${INSTALL_DIR}/sns/media/cache ${INSTALL_DIR}/sns/staticfiles\nRUN cp -pr ${COMMON_DIR}/stip-sns/bin ${INSTALL_DIR}/sns && cp -pr ${COMMON_DIR}/stip-sns/media ${INSTALL_DIR}/sns && cp -p ${SCRIPTS_DIR}/apache/stip-sns-ssl.conf /etc/apache2/sites-available\nRUN ln -s ${INSTALL_DIR}/.env ${INSTALL_DIR}/sns/.env\nRUN ln -s ${COMMON_DIR}/stip-sns/src ${INSTALL_DIR}/sns/src\nRUN a2ensite stip-sns-ssl\n\n# stip-txs2 setup\nWORKDIR /stip-common\nRUN git clone https://github.com/s-tip/stip-txs2.git\nRUN mkdir -p ${INSTALL_DIR}/txs2/bin ${INSTALL_DIR}/txs2/staticfiles\nRUN cp -pr ${COMMON_DIR}/stip-txs2/bin ${INSTALL_DIR}/txs2 && cp -p ${SCRIPTS_DIR}/apache/stip-txs2-ssl.conf /etc/apache2/sites-available && cp -p ${SCRIPTS_DIR}/apache/stip-txs2-console-ssl.conf /etc/apache2/sites-available\nRUN ln -s ${INSTALL_DIR}/.env ${INSTALL_DIR}/txs2/.env\nRUN ln -s ${COMMON_DIR}/stip-txs2/src ${INSTALL_DIR}/txs2/src\nRUN a2ensite stip-txs2-ssl\nRUN a2ensite stip-txs2-console-ssl\n\n# modification for docker image\n## mysql/mongo hostname\nRUN echo \"MYSQL_HOST=mysql\" >> ${INSTALL_DIR}/.env\nRUN sed -i\".org\" 's/\"host\": \"localhost\"/\"host\": \"mongo\"/g' ${COMMON_DIR}/stip-rs/src/ctirs/fixtures/mongo.json\nRUN sed -i\".org\" 's/\"circl_mongo_host\": \"localhost\"/\"circl_mongo_host\": \"mongo\"/g' ${COMMON_DIR}/stip-rs/src/ctirs/models/sns/config/fixture/sns_config.json\nRUN sed -i 's/\"attck_mongo_host\": \"localhost\"/\"attck_mongo_host\": \"mongo\"/g' ${COMMON_DIR}/stip-rs/src/ctirs/models/sns/config/fixture/sns_config.json\n\n# create stip user\nRUN adduser --disabled-password --gecos \"\" stip && adduser stip stip\nRUN gpasswd -a stip sudo && gpasswd -a stip adm\nRUN chown -R stip:stip ${INSTALL_DIR}\nRUN chown -R stip:stip ${COMMON_DIR}\n"
}