{
  "startTime": 1674249742606,
  "endTime": 1674249743605,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 22,
        "columnEnd": 67
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 9,
        "columnStart": 22,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 79,
        "lineEnd": 79,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 79,
        "lineEnd": 79,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 22,
        "columnEnd": 67
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 9,
        "columnStart": 22,
        "columnEnd": 12
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 79,
        "lineEnd": 79,
        "columnStart": 4,
        "columnEnd": 33
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 4,
        "columnEnd": 83
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 79,
        "lineEnd": 79,
        "columnStart": 4,
        "columnEnd": 57
      }
    }
  ],
  "repairedDockerfile": "# Creates environment to build python binaries\nFROM ubuntu:16.04 as seedsync_build_pyinstaller_env\nRUN apt-get update && apt-get install --no-install-recommends -y software-properties-common && rm -rf /var/lib/apt/lists/*;\nRUN add-apt-repository ppa:deadsnakes/ppa && \\\n    apt-get update && apt-get install --no-install-recommends -y \\\n    python3.8 \\\n    python3.8-dev \\\n    python3.8-distutils \\\n    curl \\\n    binutils && rm -rf /var/lib/apt/lists/*;\n# Switch to Python 3.8\nRUN update-alternatives --install /usr/bin/python python /usr/bin/python3.8 1\nRUN update-alternatives --set python /usr/bin/python3.8\nRUN update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.8 1\nRUN update-alternatives --set python3 /usr/bin/python3.8\n# Install Poetry\nRUN curl -f -s https://bootstrap.pypa.io/get-pip.py -o get-pip.py && \\\n    python get-pip.py --force-reinstall && \\\n    rm get-pip.py\nRUN pip3 install --no-cache-dir poetry\nRUN poetry config virtualenvs.create false\nCOPY src/python/pyproject.toml /app/python/\nCOPY src/python/poetry.lock /app/python/\nWORKDIR /python\nENV LC_ALL=C.UTF-8\nENV LANG=C.UTF-8\nRUN cd /app/python && poetry install\n\n\n# Builds seedsync with pyinstaller\n# Output is in /build/dist/seedsync/\nFROM seedsync_build_pyinstaller_env as seedsync_build_pyinstaller\nCOPY src/python /python\nCOPY src/pyinstaller_hooks /pyinstaller_hooks\nRUN mkdir -p /build\nRUN pyinstaller /python/seedsync.py \\\n    -y \\\n    -p /python \\\n    --distpath /build/dist \\\n    --workpath /build/work \\\n    --specpath /build \\\n    --additional-hooks-dir /pyinstaller_hooks/ \\\n    --hidden-import=\"pkg_resources.py2_warn\" \\\n    --name seedsync\n\n\n# Builds scanfs with pyinstaller\n# Output is in /build/dist/\nFROM seedsync_build_pyinstaller_env as seedsync_build_scanfs\nCOPY src/python /python\nRUN mkdir -p /build\nRUN\tpyinstaller /python/scan_fs.py \\\n    -y \\\n    --onefile \\\n    -p /python \\\n    --distpath /build/dist \\\n    --workpath /build/work \\\n    --specpath /build \\\n    --name scanfs\n\n\n# Creates environment for angular\nFROM node:12.16 as seedsync_build_angular_env\nCOPY src/angular/package*.json /app/\nWORKDIR /app\nRUN npm install && npm cache clean --force;\n\n# Builds angular app into html\n# Output is in /build/dist/\nFROM seedsync_build_angular_env as seedsync_build_angular\nCOPY src/angular /app\nWORKDIR /app\nRUN node_modules/@angular/cli/bin/ng build -prod --output-path /build/dist/\n\n\n# Creates environment to build deb packages\nFROM ubuntu:16.04 as seedsync_build_deb_env\nRUN apt-get update\nRUN apt-get install --no-install-recommends -y build-essential dh-systemd debhelper && rm -rf /var/lib/apt/lists/*;\nRUN apt-get install --no-install-recommends -y devscripts && rm -rf /var/lib/apt/lists/*;\n\n\n# Builds debian package\n# Output is in /build/dist/\nFROM seedsync_build_deb_env as seedsync_build_deb\nRUN mkdir -p /build/work\nCOPY src/debian /build/work/debian\nCOPY --from=seedsync_build_pyinstaller /build/dist/seedsync /build/work/seedsync\nCOPY --from=seedsync_build_scanfs /build/dist/scanfs /build/work/seedsync/\nCOPY --from=seedsync_build_angular /build/dist /build/work/seedsync/html\nWORKDIR /build/work\nRUN dpkg-buildpackage -B -uc -us\nRUN ls /build/*.deb && echo \"----\" && ls /build/work\n\n\n# Exports deb package to host\nFROM scratch AS seedsync_build_deb_export\nCOPY --from=seedsync_build_deb /build/*.deb .\n\n# Exports scanfs to host\nFROM scratch AS seedsync_build_scanfs_export\nCOPY --from=seedsync_build_scanfs /build/dist/scanfs .\n\n# Exports html to host\nFROM scratch AS seedsync_build_angular_export\nCOPY --from=seedsync_build_angular /build/dist ./html\n"
}