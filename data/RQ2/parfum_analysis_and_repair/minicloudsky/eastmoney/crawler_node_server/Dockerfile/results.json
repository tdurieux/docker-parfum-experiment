{
  "startTime": 1674219261051,
  "endTime": 1674219261572,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 9
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# if you're doing anything beyond your local machine, please pin this to a specific version at https://hub.docker.com/_/node/\nFROM node:lts\n\n# set our node environment, either development or production\n# defaults to production, compose overrides this to development on build and run\n\nWORKDIR /code\n\n# default to port 80 for node, and 9229 and 9230 (tests) for debug\nARG PORT=3000\nENV PORT $PORT\nEXPOSE $PORT 3000\n\nCOPY package.json /code/package.json\nRUN npm i && npm cache clean --force;\n\n\n# copy in our source code last, as it changes the most\nCOPY . /code\n\n# if you want to use npm start instead, then use `docker run --init in production`\n# so that signals are passed properly. Note the code in index.js is needed to catch Docker signals\n# using node here is still more graceful stopping then npm with --init afaik\n# I still can't come up with a good production way to run with npm and graceful shutdown\nCMD [ \"node\", \"index.js\"  ]\n"
}