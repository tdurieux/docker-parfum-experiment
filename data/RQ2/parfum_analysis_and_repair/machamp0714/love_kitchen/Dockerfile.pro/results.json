{
  "startTime": 1674216444959,
  "endTime": 1674216445606,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 52
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 29,
        "columnEnd": 45
      }
    }
  ],
  "repairedDockerfile": "FROM ruby:2.5.3\n\nARG RAILS_MASTER_KEY\nARG RAILS_ENV\nARG CHIRORU_ACCESS_ID\nARG CHIRORU_SECRET_KEY\nARG CHIRORU_REGION\n\nENV APP_ROOT /app\nENV RAILS_MASTER_KEY ${RAILS_MASTER_KEY}\nENV RAILS_ENV ${RAILS_ENV}\nENV CHIRORU_ACCESS_ID ${CHIRORU_ACCESS_ID}\nENV CHIRORU_SECRET_KEY ${CHIRORU_SECRET_KEY}\nENV CHIRORU_REGION ${CHIRORU_REGION}\n\nWORKDIR $APP_ROOT\n\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends apt-transport-https libssl-dev && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/*\n\nRUN curl -f -s -L git.io/nodebrew | perl - setup\nENV PATH /root/.nodebrew/current/bin:$PATH\nRUN nodebrew install-binary v10.16.0\nRUN nodebrew use v10.16.0\n\nRUN curl -f -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -\nRUN echo \"deb http://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends yarn && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/*\n\nADD Gemfile $APP_ROOT\nADD Gemfile.lock $APP_ROOT\n\nRUN bundle install && \\\n    rm -rf ~/.gem\n\nADD . $APP_ROOT\n\nRUN yarn add package.json && yarn cache clean;\n\nRUN if [ \"${RAILS_ENV}\" = \"production\" ]; then bundle exec rails assets:precompile; fi\n\nEXPOSE 3000\nCMD [\"rails\", \"server\", \"-b\", \"0.0.0.0\"]\n"
}