{
  "startTime": 1674216118146,
  "endTime": 1674216119534,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 116
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 97
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 97
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:20.04 as builder\n\nENV LIBVIPS_VERSION 8.11.2\nENV GOLANG_VERSION 1.16.6\nARG TARGETARCH amd64\nARG TAG 'dev'\nARG COMMIT \"master\"\nARG DATE \"now\"\n\n# Installs libvips + required libraries\nRUN apt-get update && \\\n    DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y \\\n    ca-certificates \\\n    automake build-essential curl \\\n    gobject-introspection gtk-doc-tools libglib2.0-dev libjpeg-turbo8-dev libpng-dev \\\n    libwebp-dev libtiff5-dev libgif-dev libexif-dev libxml2-dev libpoppler-glib-dev \\\n    swig libmagickwand-dev libpango1.0-dev libmatio-dev libopenslide-dev libcfitsio-dev \\\n    libgsf-1-dev fftw3-dev liborc-0.4-dev librsvg2-dev libimagequant-dev libaom-dev libbrotli-dev && rm -rf /var/lib/apt/lists/*;\nRUN cd /tmp && \\\n    curl -f -OL https://github.com/libvips/libvips/releases/download/v${LIBVIPS_VERSION}/vips-${LIBVIPS_VERSION}.tar.gz && \\\n    tar zvxf vips-${LIBVIPS_VERSION}.tar.gz && \\\n    cd /tmp/vips-${LIBVIPS_VERSION} && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-debug=no --without-python $1 && \\\n    make -j 4 && \\\n    make install && \\\n    ldconfig && \\\n    apt-get autoremove -y && \\\n    apt-get autoclean && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* && rm vips-${LIBVIPS_VERSION}.tar.gz\n\n# gcc for cgo\nRUN apt-get update && apt-get install -y \\\n    gcc curl git libc6-dev make ca-certificates \\\n    --no-install-recommends \\\n  && rm -rf /var/lib/apt/lists/*\n\nENV GOLANG_DOWNLOAD_URL https://golang.org/dl/go$GOLANG_VERSION.linux-$TARGETARCH.tar.gz\n\nRUN curl -fsSL --insecure \"$GOLANG_DOWNLOAD_URL\" -o golang.tar.gz \\\n  && tar -C /usr/local -xzf golang.tar.gz \\\n  && rm golang.tar.gz\n\nENV WORKDIR /workspace\nENV PATH /usr/local/go/bin:$PATH\n\n\nWORKDIR $WORKDIR\nCOPY go.mod  ./\nCOPY go.sum ./\nRUN go mod  download\n\nCOPY cmd/  $WORKDIR/cmd\nCOPY .godir ${WORKDIR}/.godir\nCOPY configuration/ ${WORKDIR}/configuration\nCOPY etc/ ${WORKDIR}/etc\nCOPY pkg/ ${WORKDIR}/pkg\nCOPY scripts/ ${WORKDIR}/scripts\nCOPY Makefile ${WORKDIR}/Makefile\n\n"
}