{
  "startTime": 1674220449194,
  "endTime": 1674220449877,
  "originalSmells": [
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 35,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 97
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ghcr.io/aldor007/mort-base as builder\n\nENV GOLANG_VERSION 1.16.6\nARG TARGETARCH amd64\nARG TAG 'dev'\nARG COMMIT \"master\"\nARG DATE \"now\"\n\nENV GOLANG_DOWNLOAD_URL https://golang.org/dl/go$GOLANG_VERSION.linux-$TARGETARCH.tar.gz\n\nRUN curl -fsSL --insecure \"$GOLANG_DOWNLOAD_URL\" -o golang.tar.gz \\\n  && tar -C /usr/local -xzf golang.tar.gz \\\n  && rm golang.tar.gz\n\nENV WORKDIR /workspace\nENV PATH /usr/local/go/bin:$PATH\n\n\nWORKDIR $WORKDIR\nCOPY go.mod  ./\nCOPY go.sum ./\nRUN go mod  download\n\nCOPY cmd/  $WORKDIR/cmd\nCOPY .godir ${WORKDIR}/.godir\nCOPY configuration/ ${WORKDIR}/configuration\nCOPY etc/ ${WORKDIR}/etc\nCOPY pkg/ ${WORKDIR}/pkg\n\nRUN go build -ldflags=\"-X 'main.version=${TAG}' -X 'main.commit=${COMMIT}' -X 'main.date=${DATE}'\" -o /go/mort ./cmd/mort/mort.go\n\n\nFROM ubuntu:20.04\n\nRUN apt-get update && \\\n    DEBIAN_FRONTEND=noninteractive apt-get install --no-install-recommends -y \\\n    libglib2.0-0 libjpeg-turbo8 libpng16-16 libopenexr24  ca-certificates  \\\n    libwebp6 libwebpmux3 libwebpdemux2 libtiff5 libgif7 libexif12 libxml2 libpoppler-glib8 \\\n    libmagickwand-6.q16-6 libpango1.0-0 libmatio-dev libopenslide0 \\\n    libgsf-1-114 fftw3 liborc-0.4-0 librsvg2-2 libcfitsio8 libimagequant0 libheif1  libbrotli-dev && \\\n    apt-get autoremove -y && \\\n    apt-get autoclean && \\\n    apt-get clean && \\\n    ldconfig /usr/local/lib && \\\n    rm -rf /tmp/* /var/tmp/* && rm -rf /var/lib/apt/lists/*;\n\nRUN mkdir -p /etc/mort/\n# clean up\nRUN rm -rf /go/src; rm -rf /usr/include/\n\nCOPY --from=builder /usr/local/lib /usr/local/lib\nRUN ldconfig\nCOPY --from=builder /go/mort /go/mort\nCOPY --from=builder /workspace/configuration/config.yml /etc/mort/mort.yml\nCOPY --from=builder /workspace/configuration/parse.tengo /etc/mort/parse.tengo\nENV MORT_CONFIG_DIR /etc/mort\n# add mime types\nADD http://svn.apache.org/viewvc/httpd/httpd/branches/2.2.x/docs/conf/mime.types?view=co /etc/mime.types\n\nRUN /go/mort -version\n# Run the outyet command by default when the container starts.\nENTRYPOINT [\"/go/mort\"]\n# Expose the server TCP port\nEXPOSE 8080 8081\n"
}