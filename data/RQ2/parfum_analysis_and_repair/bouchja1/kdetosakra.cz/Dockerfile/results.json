{
  "startTime": 1674252994200,
  "endTime": 1674252994855,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# building the image\nFROM mhart/alpine-node:10.19.0 AS build-stage\n\nMAINTAINER Jan Bouchner <jan.bouchner@gmail.com>\n\nWORKDIR /usr/src/app\n\nCOPY package*.json ./\n\n# Install all the dependencies, this will be cached until we change the package.json file\nRUN npm install && npm cache clean --force;\n\n# copy our source code\nCOPY . .\n\n# build the react app\nRUN npm run build\n\n# DEVSERVER SETUP =\n# https://create-react-app.dev/docs/deployment\n# https://dev.to/zivka51084113/dockerize-create-react-app-in-3-minutes-3om3\n\nFROM nginx:1.16.1-alpine\nWORKDIR /var/www\nCOPY --from=build-stage /usr/src/app/build .\n# Copy the default nginx.conf\nCOPY --from=build-stage /usr/src/app/nginx.conf /etc/nginx/nginx.conf\n# Copy .env file and shell script to container\nCOPY --from=build-stage /usr/src/app/env-config.sh .\nCOPY --from=build-stage /usr/src/app/.env .\n\n# Add bash\nRUN apk add --no-cache bash\n\n# Make our shell script executable\nRUN chmod +x env-config.sh\n\nEXPOSE 80\n\n# Start Nginx server\nCMD [\"/bin/bash\", \"-c\", \"/var/www/env-config.sh && nginx -g \\\"daemon off;\\\"\"]\n\n"
}