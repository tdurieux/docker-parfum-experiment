{
  "startTime": 1674217294412,
  "endTime": 1674217295407,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 30
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:latest\nMAINTAINER Patrowl.io \"getsupport@patrowl.io\"\nLABEL Name=\"OpenVAS\\ \\(Patrowl engine\\)\" Version=\"1.4.31\"\n\nENV CRYPTOGRAPHY_DONT_BUILD_RUST=1\n\n# Create the target repo\nRUN mkdir -p /opt/patrowl-engines/openvas\nRUN mkdir -p /opt/patrowl-engines/openvas/libs\nRUN mkdir -p /opt/patrowl-engines/openvas/results\nRUN mkdir -p /opt/patrowl-engines/openvas/scripts\n\n# Set the working directory\nWORKDIR /opt/patrowl-engines/openvas\n\n# Copy the current directory contents into the container at /\nCOPY __init__.py .\nCOPY engine-openvas.py .\nCOPY openvas.json.sample openvas.json\nCOPY requirements.txt .\nCOPY README.md .\nCOPY VERSION .\n\nCOPY scripts/crontab.txt /opt/patrowl-engines/openvas/scripts/crontab.txt\nCOPY scripts/cron.sh /opt/patrowl-engines/openvas/scripts/scripts/cron.sh\nRUN chmod 755 /opt/patrowl-engines/openvas/scripts/scripts/cron.sh\nRUN /usr/bin/crontab /opt/patrowl-engines/openvas/scripts/crontab.txt\n\n# Install any needed packages specified in requirements.txt\nRUN mkdir -p results\nRUN apk add --update --no-cache \\\n    build-base \\\n    libffi-dev openssl-dev \\\n    libxml2 libxml2-dev \\\n    python3 python3-dev py3-pip \\\n    git curl \\\n  && apk add libxslt libxslt-dev py3-lxml \\\n  && rm -rf /var/cache/apk/*\n\nRUN pip3 install --no-cache-dir --upgrade pip\n\n# WORKDIR /opt/patrowl-engines/openvas/libs\n# RUN git clone https://github.com/greenbone/python-gvm.git\n# RUN wget https://raw.githubusercontent.com/greenbone/python-gvm/v1.3.0/setup.py -O python-gvm/setup.py\n# RUN pip3 install -e python-gvm\n\nWORKDIR /opt/patrowl-engines/openvas\nRUN pip3 install --no-cache-dir --trusted-host pypi.python.org -r requirements.txt --ignore-installed\n# RUN pip3 install --trusted-host pypi.python.org -r requirements.txt\nRUN pip3 freeze\n# TCP port exposed by the container (NAT)\nEXPOSE 5016\n\n# Run app.py when the container launches\nCMD [\"gunicorn\", \"engine-openvas:app\", \"-b\", \"0.0.0.0:5016\", \"--access-logfile\", \"-\", \"--timeout\", \"200\", \"-w\", \"1\"]\n"
}