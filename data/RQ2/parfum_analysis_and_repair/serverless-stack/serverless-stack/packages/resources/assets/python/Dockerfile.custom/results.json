{
  "startTime": 1674248982581,
  "endTime": 1674248983492,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 47,
        "columnEnd": 67
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# The correct AWS SAM build image based on the runtime of the function will be\n# passed as build arg. The default allows to do `docker build .` when testing.\nARG IMAGE=amazon/aws-sam-cli-build-image-python3.7\nFROM $IMAGE\n\n# Ensure rsync is installed\nRUN yum -q list installed rsync & >/dev/null || yum install -y rsync && rm -rf /var/cache/yum\n\n# Upgrade pip (required by cryptography v3.4 and above, which is a dependency of poetry)\nRUN pip install --no-cache-dir --upgrade pip\n\n# Install pipenv and poetry so we can create a requirements.txt if we detect pipfile or poetry.lock respectively\nRUN pip install --no-cache-dir pipenv poetry\n\n# Install the dependencies in a cacheable layer\nWORKDIR /var/dependencies\nCOPY Pipfile* pyproject* poetry* requirements.tx[t] sst-deps-install-command.sh ./\n\nRUN ./sst-deps-install-command.sh\n\nCMD [ \"python\" ]\n"
}