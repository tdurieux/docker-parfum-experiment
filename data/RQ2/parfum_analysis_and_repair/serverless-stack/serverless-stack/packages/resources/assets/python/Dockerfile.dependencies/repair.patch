diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/serverless-stack/serverless-stack/packages/resources/assets/python/Dockerfile.dependencies b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/serverless-stack/serverless-stack/packages/resources/assets/python/Dockerfile.dependencies/repaired.Dockerfile
index 051545a..8455b60 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/serverless-stack/serverless-stack/packages/resources/assets/python/Dockerfile.dependencies
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/serverless-stack/serverless-stack/packages/resources/assets/python/Dockerfile.dependencies/repaired.Dockerfile
@@ -4,13 +4,13 @@ ARG IMAGE=amazon/aws-sam-cli-build-image-python3.7
 FROM $IMAGE
 
 # Ensure rsync is installed
-RUN yum -q list installed rsync &>/dev/null || yum install -y rsync
+RUN yum -q list installed rsync & >/dev/null || yum install -y rsync && rm -rf /var/cache/yum
 
 # Upgrade pip (required by cryptography v3.4 and above, which is a dependency of poetry)
-RUN pip install --upgrade pip
+RUN pip install --no-cache-dir --upgrade pip
 
 # Install pipenv and poetry so we can create a requirements.txt if we detect pipfile or poetry.lock respectively
-RUN pip install pipenv poetry
+RUN pip install --no-cache-dir pipenv poetry
 
 # Install the dependencies in a cacheable layer
 WORKDIR /var/dependencies
@@ -21,6 +21,7 @@ COPY Pipfile* pyproject* poetry* requirements.tx[t] ./
 #       that's not the same as the Lambda Python version (ie. Python3.8)
 RUN if [ -f 'Pipfile' ]; then pipenv lock -r > requirements.txt; else echo "Pipfile not found"; fi
 RUN if [ -f 'poetry.lock' ]; then poetry export --with-credentials --format requirements.txt --output requirements.txt; else echo "poetry.lock not found"; fi
-RUN if [ -f 'requirements.txt' ]; then pip install -r requirements.txt -t .; else echo "requirements.txt not found"; fi
+RUN if [ -f 'requirements.txt' ]; then \
+ pip install --no-cache-dir -r requirements.txt -t .; else echo "requirements.txt not found"; fi
 
 CMD [ "python" ]