{
  "startTime": 1674255881229,
  "endTime": 1674255882499,
  "originalSmells": [
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 1,
        "columnEnd": 41
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM dpokidov/imagemagick:7.1.0-10-buster AS build\n\nRUN apt-get update && apt-get upgrade -y && apt-get install -y --no-install-recommends \\\n\t\tg++ \\\n\t\tgcc \\\n\t\tlibc6-dev \\\n\t\tmake \\\n\t\tpkg-config \\\n\t\tdirmngr \\\n\t\tgpg \\\n\t\tgpg-agent \\\n\t\twget \\\n\t\tgit \\\n\t&& rm -rf /var/lib/apt/lists/*\n\n#Installing golang\nENV PATH /usr/local/go/bin:$PATH\n\nENV GOLANG_VERSION 1.16.8\n\nRUN set -eux; \\\n\tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \\\n\turl=; \\\n\tcase \"$arch\" in \\\n\t\t'amd64') \\\n\t\t\turl='https://dl.google.com/go/go1.16.8.linux-amd64.tar.gz'; \\\n\t\t\tsha256='f32501aeb8b7b723bc7215f6c373abb6981bbc7e1c7b44e9f07317e1a300dce2'; \\\n\t\t\t;; \\\n\t\t'armel') \\\n\t\t\texport GOARCH='arm' GOARM='5' GOOS='linux'; \\\n\t\t\t;; \\\n\t\t'armhf') \\\n\t\t\turl='https://dl.google.com/go/go1.16.8.linux-armv6l.tar.gz'; \\\n\t\t\tsha256='9c03d32e6b9622de4f4ce6e46bc1b7f8c738389ab70e1270282f488cd89079ee'; \\\n\t\t\t;; \\\n\t\t'arm64') \\\n\t\t\turl='https://dl.google.com/go/go1.16.8.linux-arm64.tar.gz'; \\\n\t\t\tsha256='430dbe185417204f6788913197ab3b189b6deae9c9b524f262858e53dab239c2'; \\\n\t\t\t;; \\\n\t\t'i386') \\\n\t\t\turl='https://dl.google.com/go/go1.16.8.linux-386.tar.gz'; \\\n\t\t\tsha256='ae5efe038fdc5d9f5bcef82389af8d070c3e753dc3ba3711d9368a9d5f9c957f'; \\\n\t\t\t;; \\\n\t\t'mips64el') \\\n\t\t\texport GOARCH='mips64le' GOOS='linux'; \\\n\t\t\t;; \\\n\t\t'ppc64el') \\\n\t\t\turl='https://dl.google.com/go/go1.16.8.linux-ppc64le.tar.gz'; \\\n\t\t\tsha256='ab379b6c87e2940a54f63f1a55b4ad2fad486e5d804fa8a6d8b595e8dd6ccb8c'; \\\n\t\t\t;; \\\n\t\t's390x') \\\n\t\t\turl='https://dl.google.com/go/go1.16.8.linux-s390x.tar.gz'; \\\n\t\t\tsha256='d311d0637b49c0debb34efb229ab0272f26709bc64e27fda2c3470a55426f980'; \\\n\t\t\t;; \\\n\t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \\\n\tesac; \\\n\tbuild=; \\\n\tif [ -z \"$url\" ]; then \\\n# https://github.com/golang/go/issues/38536#issuecomment-616897960\n\t\tbuild=1; \\\n\t\turl='https://dl.google.com/go/go1.16.8.src.tar.gz'; \\\n\t\tsha256='8f2a8c24b793375b3243df82fdb0c8387486dcc8a892ca1c991aa99ace086b98'; \\\n\t\techo >&2; \\\n\t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \\\n\t\techo >&2; \\\n\tfi; \\\n\n\twget -O go.tgz.asc \"$url.asc\"; \\\n\twget -O go.tgz \"$url\" --progress=dot:giga; \\\n\techo \"$sha256  *go.tgz\" | sha256sum -c -; \\\n\n# https://github.com/golang/go/issues/14739#issuecomment-324767697\n\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \\\n# https://www.google.com/linuxrepositories/\n\tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \\\n\tgpg --batch --verify go.tgz.asc go.tgz; \\\n\tgpgconf --kill all; \\\n\trm -rf \"$GNUPGHOME\" go.tgz.asc; \\\n\n\ttar -C /usr/local -xzf go.tgz; \\\n\trm go.tgz; \\\n\n\tif [ -n \"$build\" ]; then \\\n\t\tsavedAptMark=\"$(apt-mark showmanual)\"; \\\n\t\tapt-get update; \\\n\t\tapt-get install -y --no-install-recommends golang-go; \\\n\t\t\\\n\t\t( \\\n\t\t\tcd /usr/local/go/src; \\\n# set GOROOT_BOOTSTRAP + GOHOST* such that we can build Go successfully\n\t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \\\n\t\t\t./make.bash; \\\n\t\t); \\\n\t\t\\\n\t\tapt-mark auto '.*' > /dev/null; \\\n\t\tapt-mark manual $savedAptMark > /dev/null; \\\n\t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \\\n\t\trm -rf /var/lib/apt/lists/*; \\\n\t\t\\\n# pre-compile the standard library, just like the official binary release tarballs do\n\t\tgo install std; \\\n# go install: -race is only supported on linux/amd64, linux/ppc64le, linux/arm64, freebsd/amd64, netbsd/amd64, darwin/amd64 and windows/amd64\n#\t\tgo install -race std; \\\n\t\t\\\n# remove a few intermediate / bootstrapping files the official binary release tarballs do not contain\n\t\trm -rf \\\n\t\t\t/usr/local/go/pkg/*/cmd \\\n\t\t\t/usr/local/go/pkg/bootstrap \\\n\t\t\t/usr/local/go/pkg/obj \\\n\t\t\t/usr/local/go/pkg/tool/*/api \\\n\t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \\\n\t\t\t/usr/local/go/src/cmd/dist/dist \\\n\t\t; \\\n\tfi; \\\n\n\tgo version\n\nENV GOPATH /go\nENV PATH $GOPATH/bin:$PATH\nRUN mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\"\nWORKDIR $GOPATH\n\nRUN mkdir -p /go/src/github.com/Pixboost/\nWORKDIR /go/src/github.com/Pixboost/\nRUN git clone https://github.com/Pixboost/transformimgs.git\n\nWORKDIR /go/src/github.com/Pixboost/transformimgs/\nRUN go mod vendor\n\nWORKDIR /go/src/github.com/Pixboost/transformimgs/cmd\n\nRUN go build -o /transformimgs\n\nFROM dpokidov/imagemagick:7.1.0-10-buster\n\nENV IM_HOME /usr/local/bin\n\nCOPY --from=build /transformimgs /transformimgs\n\nENTRYPOINT [\"/transformimgs\", \"-imConvert=/usr/local/bin/convert\", \"-imIdentify=/usr/local/bin/identify\"]\n"
}