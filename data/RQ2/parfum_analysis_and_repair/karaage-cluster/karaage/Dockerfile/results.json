{
  "startTime": 1674220716907,
  "endTime": 1674220717991,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 7,
        "columnStart": 5,
        "columnEnd": 26
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG SLURM_VER=20.11\nFROM brianmay/slurm:${SLURM_VER}\nMAINTAINER brian@linuxpenguins.xyz\n\n# Install OS dependencies\nRUN apt-get update \\\n  && apt-get install --no-install-recommends -y \\\n    gcc sudo libcrack2-dev \\\n  && rm -rf /var/lib/apt/lists/*\n\n# Make application directory\nRUN mkdir /opt/karaage /opt/karaage/requirements\nWORKDIR /opt/karaage\n\n# Install our requirements.\nRUN pip install --no-cache-dir poetry\nADD pyproject.toml poetry.lock /opt/karaage/\nRUN poetry config virtualenvs.create false\nRUN poetry install --no-dev --no-root\n\n# Copy all our files into the image.\nCOPY . /opt/karaage/\nRUN chmod go+rX -R /opt/karaage/\n\n# Setup access to version information\nARG VERSION=\nARG BUILD_DATE=\nARG VCS_REF=\nENV VERSION=${VERSION}\nENV BUILD_DATE=${BUILD_DATE}\nENV VCS_REF=${VCS_REF}\n\n# Specify the command to run when the image is run.\nEXPOSE 8000\nVOLUME '/etc/karaage3' '/var/log' '/var/lib/karaage3'\nCMD /opt/karaage/scripts/docker.sh\n"
}