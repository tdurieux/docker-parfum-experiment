diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/bobanetwork/boba/ops/docker/Dockerfile.monorepo b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/bobanetwork/boba/ops/docker/Dockerfile.monorepo/repaired.Dockerfile
index 460aa75..954b870 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/bobanetwork/boba/ops/docker/Dockerfile.monorepo
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/bobanetwork/boba/ops/docker/Dockerfile.monorepo/repaired.Dockerfile
@@ -10,18 +10,18 @@ FROM node:16-buster-slim as node
 ARG BUILDPLATFORM
 RUN echo "Build Platform: $BUILDPLATFORM"
 
-RUN  if echo $BUILDPLATFORM | grep -i "amd64" ; then \
+RUN if echo $BUILDPLATFORM | grep -i "amd64" ; then \
           echo "Building for x86_64" ; \
-          apt-get update -y && apt-get install -y git ; \
+          apt-get update -y && apt-get install --no-install-recommends -y git; rm -rf /var/lib/apt/lists/*; \
      elif echo $BUILDPLATFORM | grep -i "arm64" ; then \
           echo "Building for Mac ($BUILDPLATFORM)" ; \
-          apt-get update -y && apt-get install -y git python3 build-essential ; \
+          apt-get update -y && apt-get install --no-install-recommends -y git python3 build-essential; rm -rf /var/lib/apt/lists/*; \
      elif echo "\"`uname -a`\"" | grep -q -E -i "aarch" ; then \
-          apt-get update -y && apt-get install -y git python make gcc libudev-dev libusb-1.0-0-dev g++ pkg-config ; \
+          apt-get update -y && apt-get install --no-install-recommends -y git python make gcc libudev-dev libusb-1.0-0-dev g++ pkg-config; rm -rf /var/lib/apt/lists/*; \
           echo "Building for aarch64 GNU/Linux" ; \
      else \
          echo "Building for something else" ; \
-         apt-get update -y && apt-get install -y git ; \
+         apt-get update -y && apt-get install --no-install-recommends -y git; rm -rf /var/lib/apt/lists/*; \
      fi
 
 # Pre-download the compilers so that they do not need to be downloaded inside
@@ -58,7 +58,7 @@ COPY packages/boba/turing/package.json ./packages/boba/turing/package.json
 # needs to happen before `yarn` otherwise patch-packages does not apply the patches
 COPY ./patches ./patches
 
-RUN yarn install --frozen-lockfile
+RUN yarn install --frozen-lockfile && yarn cache clean;
 
 ### BUILDER: Builds the typescript
 FROM node
@@ -89,7 +89,7 @@ COPY --from=downloader solc-v0.8.9+commit.e5eed63a  /root/.cache/hardhat-nodejs/
 RUN yarn build
 
 # build integration tests' contracts
-RUN yarn workspace @eth-optimism/integration-tests build
+RUN yarn workspace @eth-optimism/integration-tests build && yarn cache clean;
 
 # TODO: Consider thinning up the container by trimming non-production
 # dependencies