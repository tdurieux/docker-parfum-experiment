{
  "startTime": 1674218980779,
  "endTime": 1674218981897,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 14
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 38,
        "columnEnd": 54
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 18,
        "columnEnd": 34
      }
    }
  ],
  "repairedDockerfile": "FROM node:17-alpine AS deps\n\n# Check https://github.com/nodejs/docker-node/tree/b4117f9333da4138b03a546ec926ef50a31506c3#nodealpine to understand why libc6-compat might be needed.\nRUN apk add --no-cache libc6-compat\n\nWORKDIR /app\n\nCOPY package.json yarn.lock ./\n\nRUN yarn install --frozen-lockfile && yarn cache clean;\n\nFROM node:17-alpine AS builder\n\nWORKDIR /app\n\nCOPY --from=deps /app/node_modules ./node_modules\nCOPY . .\n\nARG API_URL\n\nENV NEXT_TELEMETRY_DISABLED=1\nENV API_URL=${API_URL:-http://localhost:3000}\n\nRUN yarn build && yarn cache clean;\n\nFROM node:17-alpine AS runner\n\nWORKDIR /app\n\nARG NODE_ENV\n\nENV NEXT_TELEMETRY_DISABLED=1\nENV NODE_ENV=${NODE_ENV:-production}\n\nRUN addgroup --system --gid 1001 nodejs\nRUN adduser --system --uid 1001 nextjs\n\nCOPY --from=builder /app/next.config.mjs ./\nCOPY --from=builder /app/public ./public\nCOPY --from=builder /app/package.json ./package.json\nCOPY --from=builder --chown=nextjs:nodejs /app/.next/standalone ./\nCOPY --from=builder --chown=nextjs:nodejs /app/.next/static ./.next/static\n\nUSER nextjs\n\nENV PORT=3001\n\nEXPOSE 3001\n\nCMD [\"node\", \"server.js\"]\n"
}