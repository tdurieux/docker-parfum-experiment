{
  "startTime": 1674254311399,
  "endTime": 1674254312250,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 34
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:17-alpine AS deps\n\n# Check https://github.com/nodejs/docker-node/tree/b4117f9333da4138b03a546ec926ef50a31506c3#nodealpine to understand why libc6-compat might be needed.\nRUN apk add --no-cache libc6-compat git\n\nWORKDIR /app\n\nCOPY package.json yarn.lock tsconfig.json tslint.json ./\n\nRUN yarn install --frozen-lockfile && yarn cache clean;\n\nFROM node:17-alpine AS builder\n\nWORKDIR /app\n\nCOPY --from=deps /app/node_modules ./node_modules\nCOPY . .\n\nARG NODE_ENV\n\nENV NODE_ENV=${NODE_ENV:-production}\n\nRUN apk add --no-cache git\nRUN yarn build:docker\n\nFROM node:17-alpine AS runner\n\nWORKDIR /app\n\nARG NODE_ENV\n\nENV NODE_ENV=${NODE_ENV:-production}\n\nRUN addgroup --system --gid 1001 nodejs\nRUN adduser --system --uid 1001 drift\n\nCOPY --from=builder /app/dist ./dist\nCOPY --from=builder /app/node_modules ./node_modules\n\nUSER drift\n\nENV PORT=3000\n\nEXPOSE 3000\n\nCMD [\"node\", \"dist/index.js\"]\n"
}