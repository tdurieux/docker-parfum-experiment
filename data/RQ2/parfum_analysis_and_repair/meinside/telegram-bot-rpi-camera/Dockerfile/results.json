{
  "startTime": 1674219588711,
  "endTime": 1674219589310,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 2,
        "columnEnd": 64
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 2,
        "columnEnd": 64
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Dockerfile for Golang application\n\n# https://www.balena.io/docs/reference/base-images/base-images-ref/\nARG RPI=raspberrypi3\n\nFROM balenalib/$RPI-debian-golang:latest AS builder\n\n# Working directory outside $GOPATH\nWORKDIR /src\n\n# Copy go module files and download dependencies\nCOPY ./go.mod ./go.sum ./\nRUN go mod download\n\n# Copy source files\nCOPY ./ ./\n\n# Build source files statically\nRUN go build \\\n\t\t-installsuffix 'static' \\\n\t\t-o /app \\\n\t\t.\n\n# Minimal image for running the application\nFROM balenalib/$RPI-debian:latest AS final\n\n# for sqlite3 and rpi binaries\nRUN apt-get update -y && \\\n\t\tapt-get install --no-install-recommends -y apt-utils libsqlite3-dev libraspberrypi-bin && rm -rf /var/lib/apt/lists/*;\n\n# Copy files from temporary image\nCOPY --from=builder /app /\n\n# Copy config file\nCOPY ./config.json /\n\n# Open ports (if needed)\n#EXPOSE 8080\n#EXPOSE 80\n#EXPOSE 443\n\n# Entry point for the built application\nENTRYPOINT [\"/app\"]\n"
}