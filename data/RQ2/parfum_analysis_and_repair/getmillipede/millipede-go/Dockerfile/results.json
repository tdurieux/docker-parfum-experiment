{
  "startTime": 1674251795162,
  "endTime": 1674251795908,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 53
      }
    }
  ],
  "repairedDockerfile": "FROM golang:cross\n\nENV CGO_ENABLED 0\n\n# Recompile the standard library without CGO\nRUN go install -a std\n\nRUN apt-get install --no-install-recommends -y -q git && rm -rf /var/lib/apt/lists/*;\n\n# Declare the maintainer\nMAINTAINER Millipede Team <business@millipede.io>\n\n# For convenience, set an env variable with the path of the code\nENV APP_DIR /go/src/github.com/getmillipede/millipede-go\nWORKDIR $APP_DIR\n\nADD . /go/src/github.com/getmillipede/millipede-go\n\n\n# Compile the binary and statically link\nRUN  GOOS=darwin   GOARCH=amd64          go build -a -v -ldflags '-d -w -s' -o /go/bin/millipede-go-Darwin-x86_64 ./cmd/millipede-go\nRUN  GOOS=darwin   GOARCH=386            go build -a -v -ldflags '-d -w -s' -o /go/bin/millipede-go-Darwin-i386 ./cmd/millipede-go\nRUN  GOOS=linux    GOARCH=386            go build -a -v -ldflags '-d -w -s' -o /go/bin/millipede-go-Linux-i386 ./cmd/millipede-go\nRUN cp /go/bin/millipede-go-Linux-i386 /go/bin/millipede-go-Linux-x86_64\nRUN  GOOS=linux    GOARCH=arm   GOARM=5  go build -a -v -ldflags '-d -w -s' -o /go/bin/millipede-go-Linux-arm ./cmd/millipede-go\nRUN  GOOS=linux    GOARCH=arm   GOARM=6  go build -a -v -ldflags '-d -w -s' -o /go/bin/millipede-go-Linux-armv6 ./cmd/millipede-go\nRUN  GOOS=linux    GOARCH=arm   GOARM=7  go build -a -v -ldflags '-d -w -s' -o /go/bin/millipede-go-Linux-armv7 ./cmd/millipede-go\nRUN  GOOS=freebsd  GOARCH=amd64          go build -a -v -ldflags '-w -s'    -o /go/bin/millipede-go-Freebsd-x86_64 ./cmd/millipede-go\nRUN  GOOS=freebsd  GOARCH=386            go build -a -v -ldflags '-d -w -s' -o /go/bin/millipede-go-Freebsd-i386 ./cmd/millipede-go\nRUN  GOOS=freebsd  GOARCH=arm   GOARM=5  go build -a -v -ldflags '-d -w -s' -o /go/bin/millipede-go-Freebsd-arm ./cmd/millipede-go\nRUN  GOOS=windows  GOARCH=amd64          go build -a -v -ldflags '-w -s'    -o /go/bin/millipede-go-Windows-x86_64.exe ./cmd/millipede-go\nRUN  GOOS=linux    GOARCH=amd64          go build -a -v -ldflags '-w -s'    -o /go/bin/millipede-go-Linux-x86_64 ./cmd/millipede-go\n\n#RUN GOOS=openbsd  GOARCH=amd64          go build -a -v -ldflags '-w -s'    -o /go/bin/millipede-go-Openbsd-x86_64 ./cmd/millipede-go\n#RUN GOOS=openbsd  GOARCH=386            go build -a -v -ldflags '-d -w -s' -o /go/bin/millipede-go-Openbsd-i386 ./cmd/millipede-go\n#RUN GOOS=openbsd  GOARCH=arm   GOARM=5  go build -a -v -ldflags '-d -w -s' -o /go/bin/millipede-go-Openbsd-arm ./cmd/millipede-go\n#RUN GOOS=windows  GOARCH=386            go build -a -v -ldflags '-d -w -s' -o /go/bin/millipede-go-Windows-i386.exe ./cmd/millipede-go\n#RUN GOOS=windows  GOARCH=arm   GOARM=5  go build -a -v -ldflags '-d -w -s' -o /go/bin/millipede-go-Windows-arm.exe ./cmd/millipede-go\n"
}