{
  "startTime": 1674252557961,
  "endTime": 1674252558819,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 3,
        "columnEnd": 82
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 3,
        "columnEnd": 86
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 43,
        "lineEnd": 63,
        "columnStart": 3,
        "columnEnd": 24
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 3,
        "columnEnd": 73
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 3,
        "columnEnd": 71
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 3,
        "columnEnd": 57
      }
    },
    {
      "rule": "gpgUseHaPools",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 3,
        "columnEnd": 73
      }
    },
    {
      "rule": "gpgUseHaPools",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 3,
        "columnEnd": 71
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.10 AS builder\n\nARG FLAVOUR\n\nARG PDNS_VERSION=4.2.0\nWORKDIR /src\nRUN set -xe; \\\n  case \"${FLAVOUR}\" in \\\n    mysql) build_deps='mariadb-dev' ;; \\\n    pgsql) build_deps='postgresql-dev' ;; \\\n    sqlite3) build_deps='sqlite-dev' ;; \\\n    *) echo \"unsupported flavour ${FLAVOUR}\"; exit 1 ;; \\\n  esac \\\n  && apk add --no-cache \\\n    build-base \\\n    gnupg \\\n    curl \\\n    file \\\n    libsodium-dev \\\n    libressl-dev \\\n    boost-dev \\\n    luajit-dev \\\n    p11-kit-dev \\\n    ${build_deps} \\\n&& curl -f -sSLO https://downloads.powerdns.com/releases/pdns-${PDNS_VERSION}.tar.bz2 \\\n&& curl -f -sSLO https://downloads.powerdns.com/releases/pdns-${PDNS_VERSION}.tar.bz2.asc \\\n&& keys='16E12866B7738C73976A57436FFC33439B0D04DF \\\n  FBAE0323821C7706A5CA151BDCF513FA7EED19F3 \\\n  162890D0689DD12DD33E46961C5EE990D2E71575 \\\n  B76CD4671C0968BAA87DE61C5E50715BF2FFE1A7' \\\n&& export GNUPGHOME=\"$(mktemp -d)\" \\\n&& gpg --batch --keyserver hkp://p80.ha.pool.sks-keyservers.net:80 --recv-keys $keys \\\n|| gpg --batch --keyserver hkp://ipv4.ha.pool.sks-keyservers.net --recv-keys $keys \\\n|| gpg --batch --keyserver hkp://pgp.mit.edu:80 --recv-keys $keys \\\n&& gpg --batch --verify pdns-${PDNS_VERSION}.tar.bz2.asc pdns-${PDNS_VERSION}.tar.bz2 \\\n&& rm -rf \"$GNUPGHOME\" pdns-${PDNS_VERSION}.tar.bz2.asc \\\n&& tar -xjf pdns-${PDNS_VERSION}.tar.bz2 \\\n&& rm pdns-${PDNS_VERSION}.tar.bz2 \\\n&& cd pdns-${PDNS_VERSION} \\\n&& LDFLAGS='-Wl,--as-needed' \\\n&& CFLAGS='-Os -fomit-frame-pointer' \\\n&& CPPFLAGS=\"$CFLAGS\" \\\n&& CXXFLAGS=\"$CFLAGS\" \\\n&& ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr \\\n  --sysconfdir=/etc/pdns \\\n  --mandir=/usr/share/man \\\n  --infodir=/usr/share/info \\\n  --localstatedir=/var \\\n  --libdir=/usr/lib \\\n  --with-modules=\"g${FLAVOUR}\" \\\n  --with-dynmodules=\"\" \\\n  --enable-static \\\n  --disable-shared \\\n  --enable-tools \\\n  --enable-experimental-pkcs11 \\\n  --disable-dependency-tracking \\\n  --disable-silent-rules \\\n  --disable-lua-records \\\n  --enable-reproducible \\\n  'CC=gcc' \\\n  \"LDFLAGS=${LDFLAGS}\" \\\n  \"CFLAGS=${CFLAGS}\" \\\n  \"CPPFLAGS=${CPPFLAGS}\" \\\n  \"CXXFLAGS=${CXXFLAGS}\" \\\n&& make -j$(nproc) \\\n&& make DESTDIR=\"/app\" install-strip\n\nFROM alpine:3.10\n\nARG FLAVOUR\n\nARG PDNS_VERSION=4.2.0\nENV PDNS_VERSION=${PDNS_VERSION}\nENV PDNS_HOME=/etc/pdns\nRUN set -xe; \\\n  addgroup -S pdns \\\n  && adduser -S -D -H -h ${PDNS_HOME} -s /sbin/nologin -G pdns pdns \\\n  && case \"${FLAVOUR}\" in \\\n    mysql) run_deps='mariadb-client mariadb-connector-c' ;; \\\n    pgsql) run_deps='postgresql-client postgresql-libs' ;; \\\n    sqlite3) run_deps='sqlite sqlite-libs' ;; \\\n    *) echo \"unsupported flavour ${FLAVOUR}\"; exit 1 ;; \\\n  esac \\\n  && apk add --no-cache \\\n    boost-program_options \\\n    libsodium \\\n    libressl \\\n    libstdc++ \\\n    libgcc \\\n    luajit \\\n    p11-kit \\\n    ${run_deps} \\\n  && mkdir -p \\\n    ${PDNS_HOME}/conf.d\n\nWORKDIR ${PDNS_HOME}\nEXPOSE 53 53/udp 53000 8081\n\nCOPY --from=builder /app/usr/sbin/ \\\n  /usr/sbin/\nCOPY --from=builder /app/usr/bin/ \\\n  /usr/bin/\nCOPY --from=builder /app/usr/share/doc/pdns/ \\\n  /usr/share/doc/pdns/\n# core essentials which harmonize with the Dockerfile settings\nCOPY pdns.conf \\\n  ${PDNS_HOME}/\nCOPY ${FLAVOUR}.bin/ \\\n  /usr/local/bin/\n\nVOLUME [ \\\n  \"${PDNS_HOME}/conf.d\", \\\n  \"/var/run/pdns\" \\\n]\nHEALTHCHECK --interval=1m --timeout=3s --start-period=10s \\\n  CMD /usr/bin/pdns_control --config-dir=${PDNS_HOME} rping || exit 1\nENTRYPOINT [\"/usr/local/bin/docker-entrypoint.sh\"]\nCMD [ \"pdns_server\" ]\n\nARG BUILD_DATE=\"1970-01-01T00:00:00Z\"\nARG REVISION=\"0\"\nARG VCS_URL=\"http://localhost/\"\nARG VCS_REF=\"master\"\nLABEL org.opencontainers.image.created=$BUILD_DATE \\\n    org.opencontainers.image.title=\"PowerDNS Authoritative Nameserver (${FLAVOUR} Backend)\" \\\n    org.opencontainers.image.description=\"The PowerDNS Authoritative Server is a versatile nameserver which supports a large number of backends.\" \\\n    org.opencontainers.image.url=\"https://www.powerdns.com/\" \\\n    org.opencontainers.image.source=$VCS_URL \\\n    org.opencontainers.image.revision=$VCS_REF \\\n    org.opencontainers.image.vendor=\"PowerDNS.COM BV\" \\\n    org.opencontainers.image.version=\"${PDNS_VERSION}-${REVISION}\" \\\n    com.microscaling.docker.dockerfile=\"/powerdns/Dockerfile\" \\\n    org.opencontainers.image.licenses=\"GPL-2.0\"\n"
}