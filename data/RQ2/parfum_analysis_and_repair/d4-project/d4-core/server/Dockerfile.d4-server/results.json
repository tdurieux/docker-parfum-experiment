{
  "startTime": 1674250285053,
  "endTime": 1674250285988,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 22,
        "columnEnd": 48
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 22,
        "columnEnd": 48
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3\n\n\n# that doesn't work on windows docker due to linefeeds\n# WORKDIR /usr/src/d4-server\n# COPY . .\n\n## alternate solution\nWORKDIR /usr/src/tmp\n# RUN git clone https://github.com/trolldbois/d4-core.git\nRUN git clone https://github.com/D4-project/d4-core.git\nRUN mv d4-core/server/ /usr/src/d4-server\nWORKDIR /usr/src/d4-server\n\nENV D4_HOME=/usr/src/d4-server\nRUN pip install --no-cache-dir -r requirement.txt\n\n# move to tls proxy ?\nWORKDIR /usr/src/d4-server/gen_cert\nRUN ./gen_root.sh\nRUN ./gen_cert.sh\n\n# setup a lots of files\nWORKDIR /usr/src/d4-server/web\nRUN ./update_web.sh\n\nWORKDIR /usr/src/d4-server\n\n# Should be using configs instead. but not supported until docker 17.06+\nRUN cp configs/server.conf.sample configs/server.conf\n\n# workers need tcpdump\nRUN apt-get update && apt-get install --no-install-recommends -y tcpdump && rm -rf /var/lib/apt/lists/*;\n\nENTRYPOINT [\"python\", \"server.py\", \"-v\", \"10\"]\n\n# CMD bash -l"
}