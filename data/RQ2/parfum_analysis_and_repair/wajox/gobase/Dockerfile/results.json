{
  "startTime": 1674253221101,
  "endTime": 1674253222197,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 45
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# image for compiling binary\nARG BUILDER_IMAGE=\"golang:1.16-alpine\"\n# here we'll run binary app\nARG RUNNER_IMAGE=\"alpine:3.12\"\n\nFROM ${BUILDER_IMAGE} as builder\n### variables\n# disable golang package proxying for this modules. necessary for private repos. Example: github.com/company-name\nARG GOPRIVATE=\"\"\n# ssh key for accessing private repos\nARG SSH_KEY\n\nENV GO111MODULE on\nENV GOPRIVATE ${GOPRIVATE}\n\nRUN apk add --no-cache --update gcc g++ openssh git make\n\n# configure git to work with private repos\nRUN mkdir -p ~/.ssh/ &&\\\n    echo \"${SSH_KEY}\" >> ~/.ssh/id_rsa && chmod 600 ~/.ssh/id_rsa && ssh-keyscan github.com >> ~/.ssh/known_hosts &&\\\n    git config --global url.\"git@github.com:\".insteadOf \"https://github.com/\"\n\n### copying project files\nWORKDIR /go/src/github.com/wajox/gobase\n# copy gomod\nCOPY go.mod go.sum ./\n# Get dependancies. Also will be cached if we won't change mod/sum\nRUN go mod download\n# COPY the source code as the last step\nCOPY . .\n\n# creates build/main files\nRUN make build\n\nFROM ${RUNNER_IMAGE}\n\nRUN echo \"http://dl-cdn.alpinelinux.org/alpine/edge/community\" >> /etc/apk/repositories &&\\\n    apk update &&\\\n    apk add --no-cache\\\n    ca-certificates\n\nRUN mkdir -p ./api\nRUN mkdir -p ./db/migrations\n\nCOPY --from=builder /go/src/github.com/wajox/gobase/api ./api\nCOPY --from=builder /go/src/github.com/wajox/gobase/db/migrations ./db/migrations\n\nCOPY --from=builder /go/src/github.com/wajox/gobase/build/app .\n\nCMD [\"./app\", \"s\"]\n"
}