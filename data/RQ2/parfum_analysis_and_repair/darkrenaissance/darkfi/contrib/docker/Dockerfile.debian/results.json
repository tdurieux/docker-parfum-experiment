{
  "startTime": 1674246310504,
  "endTime": 1674246311695,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 14,
        "columnStart": 22,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 25,
        "columnEnd": 62
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 14,
        "columnStart": 22,
        "columnEnd": 51
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Use: docker build . -t darkfi:debian -f ./contrib/docker/Dockerfile.debian\n#   optionally with: --build-arg BUILD_OS_VER=slim-buster --build-arg RUN_OS_VER=buster-slim --build-arg RUST_VER=1.60\n#   rust nightly with: BUILD_OS_VER=bullseye-slim RUN_OS_VER=bullseye-slim RUST_VER=nightly REPOSITORY=rustlang/rust\n\nARG RUST_VER=1.62  # 1.60 1.61\nARG BUILD_OS_VER=slim-bullseye  # slim-buster\nARG RUN_OS_VER=bullseye-slim    # buster-slim\nARG REPOSITORY=rust             # rustlang/rust\n\nFROM ${REPOSITORY}:${RUST_VER}-${BUILD_OS_VER} as builder\n\nRUN apt-get update && apt-get install --no-install-recommends -y build-essential cmake jq wget \\\n  pkg-config clang libclang-dev llvm-dev libudev-dev libfreetype6-dev \\\n  libexpat1-dev curl gcc make libssl-dev fonts-lato && rm -rf /var/lib/apt/lists/*;\n\nRUN mkdir /opt/darkfi\n\nCOPY . /opt/darkfi\n\nWORKDIR /opt/darkfi\n\nRUN make clean\n\nRUN rm -rf ./target/*\n\nRUN bash -c 'make -j test &&  make -j all'\n\n# 2. stage\nFROM debian:${RUN_OS_VER}\n\nRUN apt-get -y update && apt-get install --no-install-recommends -y openssl fonts-lato \\\n  && rm -rf /var/lib/apt/lists/*\n\nCOPY --from=builder /opt/darkfi/darkfid /opt/darkfi/\nCOPY --from=builder /opt/darkfi/dnetview /opt/darkfi/\nCOPY --from=builder /opt/darkfi/drk /opt/darkfi/\nCOPY --from=builder /opt/darkfi/ircd /opt/darkfi/\nCOPY --from=builder /opt/darkfi/tau /opt/darkfi/\nCOPY --from=builder /opt/darkfi/taud /opt/darkfi/\nCOPY --from=builder /opt/darkfi/zkas /opt/darkfi/\n\nWORKDIR /opt/darkfi\n"
}