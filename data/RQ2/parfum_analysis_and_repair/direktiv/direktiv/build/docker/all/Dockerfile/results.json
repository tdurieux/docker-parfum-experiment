{
  "startTime": 1674215935787,
  "endTime": 1674215936953,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 115
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 42,
        "columnEnd": 89
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 85,
        "columnEnd": 112
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 22,
        "columnEnd": 68
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 23,
        "columnEnd": 90
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 94,
        "columnEnd": 180
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 22,
        "columnEnd": 68
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 23,
        "columnEnd": 90
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 94,
        "columnEnd": 180
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:21.10 as build-env\n\nRUN apt-get update && apt-get install --no-install-recommends -y ca-certificates curl golang && rm -rf /var/lib/apt/lists/*;\n\nRUN curl -fsSL -o /helm.tar.gz https://get.helm.sh/helm-v3.5.3-linux-amd64.tar.gz && tar -C / -xvzf /helm.tar.gz && rm /helm.tar.gz\n\nRUN mkdir /app\nCOPY app/go.mod /app\nCOPY app/go.sum /app\nRUN cd /app && go mod download\n\nCOPY app/main.go /app\n\nRUN cd /app && CGO_LDFLAGS=\"-static -w -s\"  go build  -tags osusergo,netgo  -o /dlapp /app/main.go\n\n\n# FROM rancher/k3s:v1.22.3-rc2-k3s1\nFROM ubuntu:21.10\n\nRUN apt-get update && DEBIAN_FRONTEND=noninteractive TZ=Etc/UTC apt-get --no-install-recommends -y install tzdata && apt-get install --no-install-recommends -y ca-certificates curl iproute2 dnsutils wget bash-completion git vim && rm -rf /var/lib/apt/lists/*;\n\n# install kubectl\nRUN curl -f -LO \"https://dl.k8s.io/release/$( curl -f -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl\"\nRUN install -o 0 -g 0 -m 0755 kubectl /usr/local/bin/kubectl\n\n# add k3s\nCOPY k3s /\nRUN chmod 755 /k3s\n\nCOPY --from=build-env /linux-amd64/helm /helm\nRUN git clone https://github.com/direktiv/direktiv-charts.git\nRUN cd direktiv-charts/charts/direktiv && /helm dependencies update\n\nCOPY broker.yaml /\nCOPY profile /\nRUN cat profile >> /root/.bashrc\n\nCOPY debug.yaml /\nCOPY registry.yaml /\n\nCOPY pg /pg\n# COPY config-deployment.yaml /config-deployment.yaml\n\n# k3s stuff\nVOLUME /var/lib/kubelet\nVOLUME /var/lib/rancher/k3s\nVOLUME /var/lib/cni\nVOLUME /var/log\n\nENV PATH=\"$PATH:/bin/aux\"\nENV CRI_CONFIG_FILE=\"/var/lib/rancher/k3s/agent/etc/crictl.yaml\"\nENV KUBECONFIG=/etc/rancher/k3s/k3s.yaml\n\n# get containerd stuff\nRUN wget https://github.com/containerd/containerd/releases/download/v1.5.7/containerd-1.5.7-linux-amd64.tar.gz\nRUN tar xvf containerd-1.5.7-linux-amd64.tar.gz bin/ctr\n\nCOPY images.tar.gz /\nCOPY --from=build-env /dlapp /dlapp\nRUN chmod 755 /dlapp\n\n\nENTRYPOINT [\"/dlapp\"]\n"
}