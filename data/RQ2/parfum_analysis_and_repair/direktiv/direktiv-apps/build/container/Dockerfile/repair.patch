diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/direktiv/direktiv-apps/build/container/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/direktiv/direktiv-apps/build/container/Dockerfile/repaired.Dockerfile
index 21fffe0..b05d8a2 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/direktiv/direktiv-apps/build/container/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/direktiv/direktiv-apps/build/container/Dockerfile/repaired.Dockerfile
@@ -7,7 +7,7 @@
 
 # FROM ubuntu:21.10 as runner
 # RUN apt-get update && apt-get install ca-certificates net-tools iproute2 buildah -y
-# RUN echo "unqualified-search-registries = ['docker.io']" >> /etc/containers/registries.conf 
+# RUN echo "unqualified-search-registries = ['docker.io']" >> /etc/containers/registries.conf
 # COPY --from=builder /manager /runner
 
 # FROM ubuntu:21.10 as linux
@@ -23,10 +23,10 @@
 # CMD ["cp", "/out/linux", "/build/linux"]
 
 # FROM golang:1.17-buster as coredns
-# RUN apt-get update 
+# RUN apt-get update
 # RUN apt-get install git make -y
 # RUN git clone -b v1.9.0 --depth 1 https://github.com/coredns/coredns
-# RUN cd coredns && echo fanout:github.com/networkservicemesh/fanout >> plugin.cfg && \ 
+# RUN cd coredns && echo fanout:github.com/networkservicemesh/fanout >> plugin.cfg && \
 #   make
 
 # FROM ubuntu:21.10 as application
@@ -69,28 +69,28 @@ RUN cd src && GO_ENABLED=0 go build -o /runner -ldflags=" -s -w" cmd/runner/*.go
 RUN cd src && GO_ENABLED=0 go build -o /builder -ldflags=" -s -w" cmd/builder/*.go
 
 FROM ubuntu:21.10 as base
-RUN apt-get update && apt-get install net-tools qemu slirp
-RUN apt-get install ca-certificates curl iptables gnupg lsb-release -y
-RUN curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
+RUN apt-get update && apt-get install -y --no-install-recommends net-tools qemu slirp && rm -rf /var/lib/apt/lists/*;
+RUN apt-get install --no-install-recommends ca-certificates curl iptables gnupg lsb-release -y && rm -rf /var/lib/apt/lists/*;
+RUN curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --batch --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
 RUN echo \
   "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \
   $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null
-RUN apt-get update && apt-get install -y docker-ce docker-ce-cli containerd.io
+RUN apt-get update && apt-get install --no-install-recommends -y docker-ce docker-ce-cli containerd.io && rm -rf /var/lib/apt/lists/*;
 COPY --from=builder /runner /runner
 CMD ["/runner"]
 
 FROM base
 ARG BASE_IMAGE=gerke74/base
-RUN apt-get update && apt-get install wget -y
+RUN apt-get update && apt-get install --no-install-recommends wget -y && rm -rf /var/lib/apt/lists/*;
 RUN wget https://github.com/vorteil/vorteil/releases/latest/download/vorteil_linux-x86.tar.gz && \
       tar -xzf vorteil_linux-x86.tar.gz && \
-        ./vorteil version
+        ./vorteil version && rm vorteil_linux-x86.tar.gz
 
 RUN ./vorteil projects convert-container $BASE_IMAGE /tmp/base
 
 ENV DOCKER_HOST=tcp://127.0.0.1:2375
 RUN mkdir -p /tmp/tars
 
-RUN apt-get install qemu-system-x86 -y
+RUN apt-get install --no-install-recommends qemu-system-x86 -y && rm -rf /var/lib/apt/lists/*;
 COPY --from=builder /builder /builder
 CMD ["/builder"]