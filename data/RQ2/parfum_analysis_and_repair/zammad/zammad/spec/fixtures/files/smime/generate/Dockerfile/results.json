{
  "startTime": 1674254118518,
  "endTime": 1674254119289,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 22,
        "columnEnd": 53
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 22,
        "columnEnd": 53
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 33
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 57
      }
    }
  ],
  "repairedDockerfile": "FROM debian:buster as builder\n# See https://brendonmatheson.com/2020/08/27/manipulating-time-inside-a-docker-container.html\n\nRUN apt-get update && apt-get install --no-install-recommends -y make gcc git && rm -rf /var/lib/apt/lists/*;\n\n# Get the sources and checkout at stable release 0.98\n# see https://github.com/wolfcw/libfaketime/releases\nRUN git clone https://github.com/wolfcw/libfaketime.git && \\\n    cd libfaketime && \\\n    git checkout dc2ae5eef31c7a64ce3a976487d8e57d50b8d594 && \\\n    make\n\nFROM debian:buster as final\n\nCOPY --from=builder /libfaketime/src/libfaketime.so.1 /usr/local/lib\nENV LD_PRELOAD=/usr/local/lib/libfaketime.so.1\n\nENV CERT_DIR \"/etc/ssl/certs\"\n\n# install openssl\nRUN apt-get update\nRUN apt-get -q --no-install-recommends -y install openssl && rm -rf /var/lib/apt/lists/*;\n\n# move base files to the container\nCOPY config/* /\nCOPY docker-entrypoint.sh /\n\n# enable volume to generate certificates into the hosts FS\nVOLUME [\"$CERT_DIR\"]\n\n# start\nENTRYPOINT [\"/docker-entrypoint.sh\"]\n"
}