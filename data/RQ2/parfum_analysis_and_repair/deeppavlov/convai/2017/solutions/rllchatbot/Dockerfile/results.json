{
  "startTime": 1674220821497,
  "endTime": 1674220822545,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 80,
        "lineEnd": 80,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 144,
        "lineEnd": 144,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 22,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 71,
        "columnStart": 22,
        "columnEnd": 9
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 92,
        "lineEnd": 101,
        "columnStart": 22,
        "columnEnd": 14
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 22,
        "columnEnd": 44
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:14.04\n\nARG THEANO_VERSION=rel-0.8.2\nARG TENSORFLOW_VERSION=0.12.1\nARG TENSORFLOW_ARCH=cpu\n\nRUN apt-get update && apt-get install --no-install-recommends -y git && rm -rf /var/lib/apt/lists/*;\n\n# Install some dependencies\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n\t\tbc \\\n\t\tbuild-essential \\\n\t\tcmake \\\n\t\tcurl \\\n\t\tg++ \\\n\t\tgfortran \\\n\t\tgit \\\n\t\tlibffi-dev \\\n\t\tlibfreetype6-dev \\\n\t\tlibhdf5-dev \\\n\t\tlibjpeg-dev \\\n\t\tliblcms2-dev \\\n\t\tlibopenblas-dev \\\n\t\tliblapack-dev \\\n\t\tlibopenjpeg2 \\\n\t\tlibpng12-dev \\\n\t\tlibssl-dev \\\n\t\tlibtiff5-dev \\\n\t\tlibwebp-dev \\\n\t\tlibzmq3-dev \\\n\t\tnano \\\n\t\tpkg-config \\\n\t\tpython-dev \\\n\t\tsoftware-properties-common \\\n\t\tunzip \\\n\t\tvim \\\n\t\twget \\\n\t\tzlib1g-dev \\\n\t\tqt5-default \\\n\t\tlibvtk6-dev \\\n\t\tzlib1g-dev \\\n\t\tlibjpeg-dev \\\n\t\tlibwebp-dev \\\n\t\tlibpng-dev \\\n\t\tlibtiff5-dev \\\n\t\tlibjasper-dev \\\n\t\tlibopenexr-dev \\\n\t\tlibgdal-dev \\\n\t\tlibdc1394-22-dev \\\n\t\tlibavcodec-dev \\\n\t\tlibavformat-dev \\\n\t\tlibswscale-dev \\\n\t\tlibtheora-dev \\\n\t\tlibvorbis-dev \\\n\t\tlibxvidcore-dev \\\n\t\tlibx264-dev \\\n\t\tyasm \\\n\t\tlibopencore-amrnb-dev \\\n\t\tlibopencore-amrwb-dev \\\n\t\tlibv4l-dev \\\n\t\tlibxine2-dev \\\n\t\tlibtbb-dev \\\n\t\tlibeigen3-dev \\\n\t\tpython-dev \\\n\t\tpython-tk \\\n\t\tpython-numpy \\\n\t\tpython3-dev \\\n\t\tpython3-tk \\\n\t\tpython3-numpy \\\n\t\tant \\\n\t\tdefault-jdk \\\n\t\tdoxygen \\\n\t\t&& \\\n\tapt-get clean && \\\n\tapt-get autoremove && \\\n\trm -rf /var/lib/apt/lists/* && \\\n# Link BLAS library to use OpenBLAS using the alternatives mechanism (https://www.scipy.org/scipylib/building/linux.html#debian-ubuntu)\n\tupdate-alternatives --set libblas.so.3 /usr/lib/openblas-base/libblas.so.3\n\n# Install pip\nRUN curl -f -O https://bootstrap.pypa.io/get-pip.py && \\\n\tpython get-pip.py && \\\n\trm get-pip.py\n\n# Add SNI support to Python\nRUN pip --no-cache-dir install \\\n\t\tpyopenssl \\\n\t\tndg-httpsclient \\\n\t\tpyasn1\n\n# Install useful Python packages using apt-get to avoid version incompatibilities with Tensorflow binary\n# especially numpy, scipy, skimage and sklearn (see https://github.com/tensorflow/tensorflow/issues/2034)\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n\t\tpython-numpy \\\n\t\tpython-scipy \\\n\t\tpython-nose \\\n\t\tpython-h5py \\\n\t\tpython-skimage \\\n\t\tpython-matplotlib \\\n\t\tpython-pandas \\\n\t\tpython-sklearn \\\n\t\tpython-sympy \\\n\t\t&& \\\n\tapt-get clean && \\\n\tapt-get autoremove && \\\n\trm -rf /var/lib/apt/lists/*\n\n# Install other useful Python packages using pip\nRUN pip --no-cache-dir install --upgrade ipython && \\\n\tpip --no-cache-dir install \\\n\t\tCython \\\n\t\tipykernel \\\n\t\tjupyter \\\n\t\tpath.py \\\n\t\tPillow \\\n\t\tpygments \\\n\t\tsix \\\n\t\tsphinx \\\n\t\twheel \\\n\t\tzmq \\\n\t\t&& \\\n\tpython -m ipykernel.kernelspec\n\n# install Tensorflow and Theano\nRUN pip --no-cache-dir install \\\n    https://storage.googleapis.com/tensorflow/linux/${TENSORFLOW_ARCH}/tensorflow-${TENSORFLOW_VERSION}-cp27-none-linux_x86_64.whl\n# Install Theano and set up Theano config (.theanorc) OpenBLAS\nRUN pip --no-cache-dir install git+git://github.com/Theano/Theano.git@${THEANO_VERSION} && \\\n    \\\n        echo \"[global]\\ndevice=cpu\\nfloatX=float32\\nmode=FAST_RUN \\\n                \\n[lib]\\ncnmem=0.95 \\\n                \\n[nvcc]\\nfastmath=True \\\n                \\n[blas]\\nldflag = -L/usr/lib/openblas-base -lopenblas \\\n                \\n[DebugMode]\\ncheck_finite=1\" \\\n        > /root/.theanorc\n\n# Install Pytorch\nRUN pip --no-cache-dir install http://download.pytorch.org/whl/cu75/torch-0.1.12.post2-cp27-none-linux_x86_64.whl\nRUN pip --no-cache-dir install torchvision\n\n# copy the current repository\nCOPY . /root/convai\n\n# Install dependencies\nRUN pip install --no-cache-dir -r /root/convai/requirements.txt\n\n# clone the models\nRUN cd /root/convai/models && ./setup\n\n# download the data\nRUN cd /root/convai/data && ./setup\n\nEXPOSE 8000\n\n# run the bot\nCMD python /root/convai/bot.py\n\n"
}