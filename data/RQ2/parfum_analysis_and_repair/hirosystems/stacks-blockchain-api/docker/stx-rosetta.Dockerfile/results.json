{
  "startTime": 1674220947864,
  "endTime": 1674220949094,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 104,
        "lineEnd": 104,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 106,
        "lineEnd": 106,
        "columnStart": 7,
        "columnEnd": 53
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 27,
        "lineEnd": 31,
        "columnStart": 7,
        "columnEnd": 13
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 48,
        "lineEnd": 50,
        "columnStart": 7,
        "columnEnd": 10
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 96,
        "lineEnd": 103,
        "columnStart": 7,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 108,
        "lineEnd": 111,
        "columnStart": 7,
        "columnEnd": 14
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 27,
        "lineEnd": 31,
        "columnStart": 7,
        "columnEnd": 13
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 48,
        "lineEnd": 50,
        "columnStart": 7,
        "columnEnd": 10
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 96,
        "lineEnd": 103,
        "columnStart": 7,
        "columnEnd": 15
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 108,
        "lineEnd": 111,
        "columnStart": 7,
        "columnEnd": 14
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG STACKS_API_VERSION=v0.71.2\nARG STACKS_NODE_VERSION=2.05.0.0.0\nARG STACKS_API_REPO=blockstack/stacks-blockchain-api\nARG STACKS_NODE_REPO=blockstack/stacks-blockchain\nARG PG_VERSION=12\nARG STACKS_NETWORK=mainnet\nARG STACKS_LOG_DIR=/var/log/stacks-node\nARG STACKS_SVC_DIR=/etc/service\nARG STACKS_BLOCKCHAIN_DIR=/stacks-blockchain\nARG STACKS_BLOCKCHAIN_API_DIR=/stacks-blockchain-api\nARG V2_POX_MIN_AMOUNT_USTX=90000000260\nARG PG_DATA=/data/postgres\nARG PG_DATABASE=postgres\nARG PG_HOST=127.0.0.1\nARG PG_PORT=5432\nARG PG_USER=postgres\nARG PG_PASSWORD=postgres\n\n#######################################################################\n## Build the stacks-blockchain-api\nFROM node:lts-buster as stacks-blockchain-api-build\nARG STACKS_API_REPO\nARG STACKS_API_VERSION\nENV STACKS_API_REPO=${STACKS_API_REPO}\nENV STACKS_API_VERSION=${STACKS_API_VERSION}\nWORKDIR /app\nRUN apt-get update -y \\\n    && apt-get install --no-install-recommends -y \\\n        curl \\\n        jq \\\n        openjdk-11-jre-headless \\\n        cmake \\\n    && git clone -b ${STACKS_API_VERSION} --depth 1 https://github.com/${STACKS_API_REPO} . \\\n    && echo \"GIT_TAG=$(git tag --points-at HEAD)\" >> .env \\\n    && npm config set unsafe-perm true \\\n    && npm ci \\\n    && npm run build \\\n    && npm prune --production && rm -rf /var/lib/apt/lists/*;\n\n#######################################################################\n## Build the stacks-blockchain\nFROM rust:buster as stacks-blockchain-build\nARG STACKS_NODE_REPO\nARG STACKS_NODE_VERSION\nENV STACKS_NODE_REPO=${STACKS_NODE_REPO}\nENV STACKS_NODE_VERSION=${STACKS_NODE_VERSION}\nWORKDIR /src\nRUN apt-get update -y \\\n    && apt-get install --no-install-recommends -y \\\n        curl \\\n        jq \\\n    && mkdir -p /out \\\n    && git clone -b ${STACKS_NODE_VERSION} --depth 1 https://github.com/${STACKS_NODE_REPO} . \\\n    && cd testnet/stacks-node \\\n    && cargo build --features monitoring_prom,slog_json --release \\\n    && cp /src/target/release/stacks-node /out && rm -rf /var/lib/apt/lists/*;\n\n#######################################################################\n## Build the final image with all components from build stages\nFROM debian:buster\nARG STACKS_NETWORK\nARG STACKS_LOG_DIR\nARG STACKS_SVC_DIR\nARG STACKS_BLOCKCHAIN_DIR\nARG STACKS_BLOCKCHAIN_API_DIR\nARG PG_DATA\nARG PG_VERSION\nARG V2_POX_MIN_AMOUNT_USTX\nARG PG_HOST\nARG PG_PORT\nARG PG_USER\nARG PG_PASSWORD\nARG PG_DATABASE\nENV PG_HOST=${PG_HOST}\nENV PG_PORT=${PG_PORT}\nENV PG_USER=${PG_USER}\nENV PG_PASSWORD=${PG_PASSWORD}\nENV PG_DATABASE=${PG_DATABASE}\nENV PG_DATA=${PG_DATA}\nENV STACKS_SVC_DIR=${STACKS_SVC_DIR}\nENV STACKS_BLOCKCHAIN_DIR=${STACKS_BLOCKCHAIN_DIR}\nENV STACKS_BLOCKCHAIN_API_DIR=${STACKS_BLOCKCHAIN_API_DIR}\nENV STACKS_NETWORK=${STACKS_NETWORK}\nENV STACKS_LOG_DIR=${STACKS_LOG_DIR}\nENV STACKS_CORE_EVENT_PORT=3700\nENV STACKS_CORE_EVENT_HOST=127.0.0.1\nENV STACKS_EVENT_OBSERVER=127.0.0.1:3700\nENV STACKS_BLOCKCHAIN_API_PORT=3999\nENV STACKS_BLOCKCHAIN_API_HOST=0.0.0.0\nENV STACKS_CORE_RPC_HOST=127.0.0.1\nENV STACKS_CORE_RPC_PORT=20443\nENV STACKS_CORE_P2P_PORT=20444\nENV MAINNET_STACKS_CHAIN_ID=0x00000001\nENV TESTNET_STACKS_CHAIN_ID=0x80000000\nENV V2_POX_MIN_AMOUNT_USTX=${V2_POX_MIN_AMOUNT_USTX}\nRUN apt-get update \\\n    && apt install --no-install-recommends -y \\\n        gnupg2 \\\n        lsb-release \\\n        curl procps \\\n        netcat \\\n        gosu \\\n        runit-init \\\n        rsyslog && rm -rf /var/lib/apt/lists/*;\nRUN curl -f -sL https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add - \\\n    && echo \"deb http://apt.postgresql.org/pub/repos/apt/ `lsb_release -cs`-pgdg main\" > /etc/apt/sources.list.d/pgsql.list \\\n    && curl -f -sL https://deb.nodesource.com/setup_16.x | bash -\nRUN apt-get update \\\n    && apt-get install --no-install-recommends -y \\\n        postgresql-${PG_VERSION} \\\n        postgresql-client-${PG_VERSION} \\\n        nodejs \\\n    && echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections && rm -rf /var/lib/apt/lists/*;\nRUN mkdir -p \\\n        ${STACKS_SVC_DIR}/postgresql/log \\\n        ${STACKS_SVC_DIR}/stacks-blockchain-api/log \\\n        ${STACKS_SVC_DIR}/stacks-blockchain \\\n        ${STACKS_LOG_DIR}/postgresql \\\n        ${STACKS_LOG_DIR}/stacks-blockchain-api/log \\\n    && apt-get clean \\\n    && rm -rf /var/cache/apt/* /var/lib/apt/lists/* /tmp/* ${STACKS_SVC_DIR}/getty*\nCOPY --from=stacks-blockchain-build /out ${STACKS_BLOCKCHAIN_DIR}\nCOPY --from=stacks-blockchain-api-build /app ${STACKS_BLOCKCHAIN_API_DIR}\nCOPY stacks-blockchain/Stacks-*.toml ${STACKS_BLOCKCHAIN_DIR}/\n\n###################################\n##  runit service files\nRUN printf '#!/bin/sh\\nexec 2>&1\\n[ ! -d %s ] && mkdir -p %s && chown -R postgres:postgres %s && gosu postgres /usr/lib/postgresql/%s/bin/pg_ctl init -D %s\\nexec gosu postgres /usr/lib/postgresql/%s/bin/postmaster -D %s' ${PG_DATA} ${PG_DATA} ${PG_DATA} ${PG_VERSION} ${PG_DATA} ${PG_VERSION} ${PG_DATA} > ${STACKS_SVC_DIR}/postgresql/run \\\n    && printf '#!/bin/sh\\nrm -rf %s' ${PG_DATA} > ${STACKS_SVC_DIR}/postgresql/finish \\\n    && printf '#!/bin/sh\\nexec svlogd -tt %s/postgresql' ${STACKS_LOG_DIR} > ${STACKS_SVC_DIR}/postgresql/log/run \\\n    && printf '#!/bin/sh\\nexec 2>&1\\ncase $STACKS_NETWORK in\\n    testnet)\\n        exec %s/stacks-node start --config=%s/Stacks-testnet.toml 2>&1\\n        ;;\\n    mocknet)\\n        exec %s/stacks-node start --config=%s/Stacks-mocknet.toml 2>&1\\n        ;;\\n    *)\\n        exec %s/stacks-node start --config=%s/Stacks-mainnet.toml 2>&1\\n        ;;\\nesac' ${STACKS_BLOCKCHAIN_DIR} ${STACKS_BLOCKCHAIN_DIR} ${STACKS_BLOCKCHAIN_DIR} ${STACKS_BLOCKCHAIN_DIR} ${STACKS_BLOCKCHAIN_DIR} ${STACKS_BLOCKCHAIN_DIR} > ${STACKS_SVC_DIR}/stacks-blockchain/run \\\n    && printf '#!/bin/bash\\nexec 2>&1\\nsv start postgresql stacks-blockchain || exit 1\\nif [ $STACKS_NETWORK != \"mainnet\" ]; then\\n    export STACKS_CHAIN_ID=%s\\nelse\\n    export STACKS_CHAIN_ID=%s\\n    export V2_POX_MIN_AMOUNT_USTX=%s\\nfi\\ncd %s && exec node ./lib/index.js 2>&1' ${TESTNET_STACKS_CHAIN_ID} ${MAINNET_STACKS_CHAIN_ID} ${V2_POX_MIN_AMOUNT_USTX} ${STACKS_BLOCKCHAIN_API_DIR} > ${STACKS_SVC_DIR}/stacks-blockchain-api/run \\\n    && printf '#!/bin/sh\\nexec svlogd -tt %s/stacks-blockchain-api' ${STACKS_LOG_DIR} > ${STACKS_SVC_DIR}/stacks-blockchain-api/log/run \\\n    && printf '#!/bin/sh\\n/usr/bin/runsvdir %s' ${STACKS_SVC_DIR} > /entrypoint.sh \\\n    && chmod 755 \\\n        ${STACKS_SVC_DIR}/postgresql/run \\\n        ${STACKS_SVC_DIR}/postgresql/finish \\\n        ${STACKS_SVC_DIR}/postgresql/log/run \\\n        ${STACKS_SVC_DIR}/stacks-blockchain/run \\\n        ${STACKS_SVC_DIR}/stacks-blockchain-api/run \\\n        ${STACKS_SVC_DIR}/stacks-blockchain-api/log/run \\\n        /entrypoint.sh\n\nEXPOSE ${STACKS_BLOCKCHAIN_API_PORT} ${STACKS_CORE_RPC_PORT} ${STACKS_CORE_P2P_PORT}\nVOLUME /data\nCMD [\"/entrypoint.sh\"]\n"
}