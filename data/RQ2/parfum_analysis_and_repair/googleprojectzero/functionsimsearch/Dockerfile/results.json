{
  "startTime": 1674251769033,
  "endTime": 1674251772024,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 88
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 148
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 88
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 148
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 88
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 148
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 112
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 172
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:bionic\n\nRUN chmod 777 /tmp\nRUN apt-get update && apt-get -y upgrade\nRUN apt-get install --no-install-recommends -y git wget cmake sudo gcc-7 g++-7 python3-pip zlib1g-dev googletest && rm -rf /var/lib/apt/lists/*;\nRUN apt-get install --no-install-recommends -y libgtest-dev libgflags-dev libz-dev libelf-dev g++ python3-pip libboost-system-dev libboost-thread-dev libboost-date-time-dev && rm -rf /var/lib/apt/lists/*;\n\nRUN mkdir /code\n\n# build functionsimsearch\nRUN cd /code && \\\n    git clone https://github.com/google/functionsimsearch.git && \\\n    cd functionsimsearch && \\\n    chmod +x ./build_dependencies.sh && \\\n    ./build_dependencies.sh && \\\n    make -j 16\n\n# dispatch via entrypoint script\n# recommend mapping the /pwd volume, probably like (for ELF file):\n#\n#    docker run -it --rm -v $(pwd):/pwd functionsimsearch disassemble ELF /pwd/someexe\nVOLUME /pwd\nWORKDIR /code/functionsimsearch\nRUN chmod +x /code/functionsimsearch/entrypoint.sh\nENTRYPOINT [\"/code/functionsimsearch/entrypoint.sh\"]\n"
}