{
  "startTime": 1674247998845,
  "endTime": 1674248000202,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 23
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Step 1: Get dependencies\nFROM elixir:1.5.2 as asset-builder-mix-getter\n\nENV HOME=/opt/app\n\nRUN mix do local.hex --force, local.rebar --force\n# Cache elixir deps\nCOPY config/ $HOME/config/\nCOPY mix.exs mix.lock $HOME/\n\nWORKDIR $HOME\nRUN mix deps.get\n\n########################################################################\n# Step 2: Build node assets\nFROM node:6 as asset-builder\n\nENV HOME=/opt/app\nWORKDIR $HOME\n\nCOPY --from=asset-builder-mix-getter $HOME/deps $HOME/deps\n\nWORKDIR $HOME/assets\nCOPY assets/ ./\nRUN npm install && npm cache clean --force;\nRUN ./node_modules/.bin/brunch build --production\n\n########################################################################\n# Step 3: Build elixir release\nFROM bitwalker/alpine-elixir:1.5.2 as releaser\n\nENV HOME=/opt/app\n\n# Install Hex + Rebar\nRUN mix do local.hex --force, local.rebar --force\n\n# Cache elixir deps\nCOPY config/ $HOME/config/\nCOPY mix.exs mix.lock $HOME/\n\nENV MIX_ENV=prod\nRUN mix do deps.get --only $MIX_ENV, deps.compile\n\nCOPY . $HOME/\n\n# Digest precompiled assets\nCOPY --from=asset-builder $HOME/priv/static/ $HOME/priv/static/\n\nWORKDIR $HOME\nRUN mix phx.digest\nRUN mix release --env=$MIX_ENV --verbose\nRUN mv $HOME/_build/prod/rel/*/releases/*/*.tar.gz $HOME/app.tar.gz\n\n########################################################################\n# Step 4: Get minimal container with elixir release\nFROM alpine:3.6\n\nENV LANG=en_US.UTF-8 HOME=/opt/app/ TERM=xterm\n\nRUN apk add --no-cache bash openssl\n\nEXPOSE 4000\nENV PORT=4000 MIX_ENV=prod REPLACE_OS_VARS=true SHELL=/bin/sh\n\nCOPY --from=releaser $HOME/app.tar.gz $HOME\nWORKDIR $HOME\nRUN tar -xzf app.tar.gz && rm app.tar.gz\n\nENTRYPOINT [\"/opt/app/bin/pricey\"]\nCMD [\"foreground\"]\n"
}