{
  "startTime": 1674249016431,
  "endTime": 1674249017334,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 21,
        "columnEnd": 98
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:16.16.0-alpine3.15 AS base\n\n# Install dependencies only when needed\nFROM base AS deps\n# Check https://github.com/nodejs/docker-node/tree/b4117f9333da4138b03a546ec926ef50a31506c3#nodealpine to understand why libc6-compat might be needed.\nRUN apk add --no-cache libc6-compat\nWORKDIR /app\nCOPY package.json package-lock.json ./\nCOPY npm npm\nRUN npm install --legacy-peer-deps && npm cache clean --force;\n\n# Rebuild the source code only when needed\nFROM base AS builder\nWORKDIR /app\nCOPY . .\nCOPY --from=deps /app/npm ./npm\nCOPY --from=deps /app/node_modules ./node_modules\nRUN npm run build && npm install --legacy-peer-deps --production --ignore-scripts --prefer-offline && npm cache clean --force;\n\n# Production image, copy all the files and run next\nFROM base AS runner\nWORKDIR /app\n\nENV NODE_OPTIONS=\"--max-http-header-size=81920\"\nENV NODE_ENV production\n\nRUN addgroup -g 1001 -S nodejs\nRUN adduser -S nextjs -u 1001\n\nCOPY --from=builder /app/public ./public\nCOPY --from=builder --chown=nextjs:nodejs /app/.next ./.next\nCOPY --from=builder /app/npm ./npm\nCOPY --from=builder /app/node_modules ./node_modules\nCOPY --from=builder /app/package.json ./package.json\n\nUSER nextjs\n\nEXPOSE 5225\n\n# Next.js collects completely anonymous telemetry data about general usage.\n# Learn more here: https://nextjs.org/telemetry\n# Uncomment the following line in case you want to disable telemetry.\nENV NEXT_TELEMETRY_DISABLED 1\n\nCMD [\"npm\", \"start\"]\n"
}