{
  "startTime": 1674256130709,
  "endTime": 1674256131376,
  "originalSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 81
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 81
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 81
      }
    }
  ],
  "repairedDockerfile": "ARG dist=debian\nARG flavor=sid\n\nFROM ${dist}:${flavor} as builder\n\nENV DEBIAN_FRONTEND=noninteractive\n\nRUN apt-get update\nRUN apt-get -y upgrade\nRUN apt-get install -y --no-install-recommends autoconf make gcc \\\n                     automake autotools-dev \\\n                     ocaml-nox camlidl coccinelle \\\n                     libocamlnet-ocaml-dev libocamlnet-ocaml-bin \\\n                     libocamlnet-ssl-ocaml libocamlnet-ssl-ocaml-dev \\\n                     libssl-dev gnutls-dev \\\n                     libconfig-file-ocaml-dev camlp4 \\\n                     git-buildpackage debhelper \\\n                     dh-exec dh-autoreconf build-essential && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get install -y --no-install-recommends ca-certificates fakeroot debhelper && rm -rf /var/lib/apt/lists/*;\n\nFROM builder\n\nWORKDIR /build/git\nCOPY . .\n\nRUN mkdir /tmp/output\n"
}