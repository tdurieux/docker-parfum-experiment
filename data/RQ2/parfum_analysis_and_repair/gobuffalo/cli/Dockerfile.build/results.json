{
  "startTime": 1674248165181,
  "endTime": 1674248165741,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 7,
        "columnEnd": 70
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 7,
        "columnEnd": 55
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 22,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 7,
        "columnEnd": 92
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 22,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 7,
        "columnEnd": 68
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 7,
        "columnEnd": 92
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 22,
        "columnEnd": 44
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM golang:1.18\n\nEXPOSE 3000\n\nENV GOPROXY=https://proxy.golang.org\n\nRUN apt-get update \\\n    && apt-get install --no-install-recommends -y -q build-essential sqlite3 libsqlite3-dev postgresql libpq-dev vim && rm -rf /var/lib/apt/lists/*;\n\n# Installing Node 12\nRUN curl -f -sL https://deb.nodesource.com/setup_12.x | bash\nRUN apt-get update && apt-get install -y --no-install-recommends nodejs && rm -rf /var/lib/apt/lists/*;\n\n# Installing Postgres\nRUN sh -c 'echo \"deb http://apt.postgresql.org/pub/repos/apt/ `lsb_release -cs`-pgdg main\" >> /etc/apt/sources.list.d/pgdg.list' \\\n    && wget -q https://www.postgresql.org/media/keys/ACCC4CF8.asc -O - | apt-key add - \\\n    && apt-get update \\\n    && apt-get install --no-install-recommends -y -q postgresql postgresql-contrib libpq-dev \\\n    && rm -rf /var/lib/apt/lists/* \\\n    && service postgresql start && \\\n    # Setting up password for postgres\n    su -c \"psql -c \\\"ALTER USER postgres  WITH PASSWORD 'postgres';\\\"\" - postgres\n\n# Installing yarn\nRUN npm install -g --no-progress yarn \\\n    && yarn config set yarn-offline-mirror /npm-packages-offline-cache \\\n    && yarn config set yarn-offline-mirror-pruning true && npm cache clean --force; && yarn cache clean;\n\n# Install golangci\nRUN curl -sfL https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | sh -s -- -b $(go env GOPATH)/bin v1.24.0\n\n# Installing buffalo binary\nWORKDIR /cli\nADD . .\nRUN go install ./cmd/buffalo\n\nWORKDIR /\nRUN go install github.com/gobuffalo/buffalo-pop/v3@latest\n\nRUN mkdir /src\nWORKDIR /src"
}