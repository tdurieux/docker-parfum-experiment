{
  "startTime": 1674215435143,
  "endTime": 1674215436134,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 7,
        "columnEnd": 70
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 7,
        "columnEnd": 55
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM golang:1.18-alpine\n\nEXPOSE 3000\n\nENV GOPROXY=https://proxy.golang.org\n\nRUN apk add --no-cache --upgrade apk-tools \\\n    && apk add --no-cache bash curl openssl git build-base nodejs npm sqlite sqlite-dev mysql-client vim postgresql libpq postgresql-contrib libc6-compat\n\n# Installing linter\nRUN curl -sfL https://install.goreleaser.com/github.com/golangci/golangci-lint.sh \\\n    | sh -s -- -b $(go env GOPATH)/bin v1.24.0\n\n# Installing Yarn\nRUN npm i -g --no-progress yarn \\\n    && yarn config set yarn-offline-mirror /npm-packages-offline-cache \\\n    && yarn config set yarn-offline-mirror-pruning true && npm cache clean --force; && yarn cache clean;\n\n# Installing buffalo binary\nWORKDIR /cli\nADD . .\nRUN go install ./cmd/buffalo\n\nWORKDIR /\nRUN go install github.com/gobuffalo/buffalo-pop/v3@latest\n\nRUN mkdir /src\nWORKDIR /src"
}