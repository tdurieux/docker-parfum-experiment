{
  "startTime": 1674251170548,
  "endTime": 1674251170946,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 30
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM gobuffalo/buffalo:{{.opts.Version}}\n\nRUN mkdir -p {{.opts.App.PackagePkg}}\nWORKDIR {{.opts.App.PackagePkg}}\n\n{{if .opts.App.AsWeb -}}\n{{if .opts.App.WithWebpack -}}\n# this will cache the npm install step, unless package.json changes\nADD package.json .\n{{if .opts.App.WithYarn -}}\nADD yarn.lock .\nRUN yarn install --no-progress && yarn cache clean;\n{{else -}}\nRUN npm install --no-progress && npm cache clean --force;\n{{end -}}\n{{end -}}\n{{end -}}\n\nADD . .\nRUN buffalo build --static -o /bin/app\n\n# Uncomment to run the binary in \"production\" mode:\n# ENV GO_ENV=production\n\n# Bind the app to 0.0.0.0 so it can be seen from outside the container\nENV ADDR=0.0.0.0\n\nEXPOSE 3000\n\n# Uncomment to run the migrations before running the binary:\n# CMD /bin/app migrate; /bin/app\nCMD exec /bin/app\n"
}