{
  "startTime": 1674251086037,
  "endTime": 1674251087283,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 42,
        "columnEnd": 54
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 22,
        "columnEnd": 47
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 22,
        "columnEnd": 47
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# This dockerfile will build dendritejs and hook it up to riot-web, build that then dump the\n# resulting HTML/JS onto an nginx container for hosting. It requires no specific build context\n# as it pulls archives straight from github branches.\n#\n# $ docker build -t dendritejs -f DendriteJS.Dockerfile .\n# $ docker run --rm -p 8888:80 dendritejs\n# Then visit http://localhost:8888\nFROM golang:1.14-alpine AS gobuild\n\n# Download and build dendrite\nWORKDIR /build\nADD https://github.com/matrix-org/dendrite/archive/main.tar.gz /build/main.tar.gz\nRUN tar xvfz main.tar.gz && rm main.tar.gz\nWORKDIR /build/dendrite-main\nRUN GOOS=js GOARCH=wasm go build -o main.wasm ./cmd/dendritejs\n\n\nFROM node:14-stretch AS jsbuild\n# apparently some deps require python\nRUN apt-get update && apt-get -y --no-install-recommends install python && rm -rf /var/lib/apt/lists/*;\n\n# Download riot-web and libp2p repos\nWORKDIR /build\nADD https://github.com/matrix-org/go-http-js-libp2p/archive/main.tar.gz /build/libp2p.tar.gz\nRUN tar xvfz libp2p.tar.gz && rm libp2p.tar.gz\nADD https://github.com/vector-im/element-web/archive/matthew/p2p.tar.gz /build/p2p.tar.gz\nRUN tar xvfz p2p.tar.gz && rm p2p.tar.gz\n\n# Install deps for element-web, symlink in libp2p repo and build that too\nWORKDIR /build/element-web-matthew-p2p\nRUN yarn install && yarn cache clean;\nRUN ln -s /build/go-http-js-libp2p-master /build/element-web-matthew-p2p/node_modules/go-http-js-libp2p\nRUN ( cd node_modules/go-http-js-libp2p && yarn install) && yarn cache clean;\nCOPY --from=gobuild /build/dendrite-main/main.wasm ./src/vector/dendrite.wasm\n# build it all\nRUN yarn build:p2p\n\nSHELL [\"/bin/bash\", \"-c\"]\nRUN echo $'\\ \n    { \\n\\\n    \"default_server_config\": { \\n\\\n    \"m.homeserver\": { \\n\\\n    \"base_url\": \"https://p2p.riot.im\", \\n\\\n    \"server_name\": \"p2p.riot.im\" \\n\\\n    }, \\n\\\n    \"m.identity_server\": { \\n\\\n    \"base_url\": \"https://vector.im\" \\n\\\n    } \\n\\\n    }, \\n\\\n    \"disable_custom_urls\": false, \\n\\\n    \"disable_guests\": true, \\n\\\n    \"disable_login_language_selector\": false, \\n\\\n    \"disable_3pid_login\": true, \\n\\\n    \"brand\": \"Riot\", \\n\\\n    \"integrations_ui_url\": \"https://scalar.vector.im/\", \\n\\\n    \"integrations_rest_url\": \"https://scalar.vector.im/api\", \\n\\\n    \"integrations_widgets_urls\": [ \\n\\\n    \"https://scalar.vector.im/_matrix/integrations/v1\", \\n\\\n    \"https://scalar.vector.im/api\", \\n\\\n    \"https://scalar-staging.vector.im/_matrix/integrations/v1\", \\n\\\n    \"https://scalar-staging.vector.im/api\", \\n\\\n    \"https://scalar-staging.riot.im/scalar/api\" \\n\\\n    ], \\n\\\n    \"integrations_jitsi_widget_url\": \"https://scalar.vector.im/api/widgets/jitsi.html\", \\n\\\n    \"bug_report_endpoint_url\": \"https://riot.im/bugreports/submit\", \\n\\\n    \"defaultCountryCode\": \"GB\", \\n\\\n    \"showLabsSettings\": false, \\n\\\n    \"features\": { \\n\\\n    \"feature_pinning\": \"labs\", \\n\\\n    \"feature_custom_status\": \"labs\", \\n\\\n    \"feature_custom_tags\": \"labs\", \\n\\\n    \"feature_state_counters\": \"labs\" \\n\\\n    }, \\n\\\n    \"default_federate\": true, \\n\\\n    \"default_theme\": \"light\", \\n\\\n    \"roomDirectory\": { \\n\\\n    \"servers\": [ \\n\\\n    \"matrix.org\" \\n\\\n    ] \\n\\\n    }, \\n\\\n    \"welcomeUserId\": \"\", \\n\\\n    \"piwik\": { \\n\\\n    \"url\": \"https://piwik.riot.im/\", \\n\\\n    \"whitelistedHSUrls\": [\"https://matrix.org\"], \\n\\\n    \"whitelistedISUrls\": [\"https://vector.im\", \"https://matrix.org\"], \\n\\\n    \"siteId\": 1 \\n\\\n    }, \\n\\\n    \"enable_presence_by_hs_url\": { \\n\\\n    \"https://matrix.org\": false, \\n\\\n    \"https://matrix-client.matrix.org\": false \\n\\\n    }, \\n\\\n    \"settingDefaults\": { \\n\\\n    \"breadcrumbs\": true \\n\\\n    } \\n\\\n    }' > webapp/config.json\n\nFROM nginx\n# Add \"Service-Worker-Allowed: /\" header so the worker can sniff traffic on this domain rather\n# than just the path this gets hosted under. NB this newline echo syntax only works on bash.\nSHELL [\"/bin/bash\", \"-c\"]\nRUN echo $'\\\n    server { \\n\\\n    listen 80; \\n\\\n    add_header \\'Service-Worker-Allowed\\' \\'/\\'; \\n\\\n    location / { \\n\\\n    root   /usr/share/nginx/html; \\n\\\n    index  index.html index.htm; \\n\\\n    } \\n\\\n    }' > /etc/nginx/conf.d/default.conf\nRUN sed -i 's/}/    application\\/wasm  wasm;\\n}/g' /etc/nginx/mime.types\nCOPY --from=jsbuild /build/element-web-matthew-p2p/webapp /usr/share/nginx/html\n"
}