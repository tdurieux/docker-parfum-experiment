{
  "startTime": 1674251050768,
  "endTime": 1674251051323,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 22,
        "columnEnd": 48
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 22,
        "columnEnd": 48
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# A local development Complement dockerfile, to be used with host mounts\n# /cache -> Contains the entire dendrite code at Dockerfile build time. Builds binaries but only keeps the generate-* ones. Pre-compilation saves time.\n# /dendrite -> Host-mounted sources\n# /runtime -> Binaries and config go here and are run at runtime\n# At runtime, dendrite is built from /dendrite and run in /runtime.\n#\n# Use these mounts to make use of this dockerfile:\n# COMPLEMENT_HOST_MOUNTS='/your/local/dendrite:/dendrite:ro;/your/go/path:/go:ro'\nFROM golang:1.18-stretch\nRUN apt-get update && apt-get install --no-install-recommends -y sqlite3 && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /runtime\n\nENV SERVER_NAME=localhost\nEXPOSE 8008 8448\n\n# This script compiles Dendrite for us.\nRUN echo '\\\n    #!/bin/bash -eux \\n\\\n    if test -f \"/runtime/dendrite-monolith-server\"; then \\n\\\n    echo \"Skipping compilation; binaries exist\" \\n\\\n    exit 0 \\n\\\n    fi \\n\\\n    cd /dendrite \\n\\\n    go build -v -o /runtime /dendrite/cmd/dendrite-monolith-server \\n\\\n    ' > compile.sh && chmod +x compile.sh\n\n# This script runs Dendrite for us. Must be run in the /runtime directory.\nRUN echo '\\\n    #!/bin/bash -eu \\n\\\n    ./generate-keys --private-key matrix_key.pem \\n\\\n    ./generate-keys --server $SERVER_NAME --tls-cert server.crt --tls-key server.key --tls-authority-cert /complement/ca/ca.crt --tls-authority-key /complement/ca/ca.key \\n\\\n    ./generate-config -server $SERVER_NAME --ci > dendrite.yaml \\n\\\n    cp /complement/ca/ca.crt /usr/local/share/ca-certificates/ && update-ca-certificates \\n\\\n    ./dendrite-monolith-server --really-enable-open-registration --tls-cert server.crt --tls-key server.key --config dendrite.yaml \\n\\\n    ' > run.sh && chmod +x run.sh\n\n\nWORKDIR /cache\n# Pre-download deps; we don't need to do this if the GOPATH is mounted.\nCOPY go.mod .\nCOPY go.sum .\nRUN go mod download\n\n# Build the monolith in /cache - we won't actually use this but will rely on build artifacts to speed\n# up the real compilation. Build the generate-* binaries in the true /runtime locations.\n# If the generate-* source is changed, this dockerfile needs re-running.\nCOPY . .\nRUN go build ./cmd/dendrite-monolith-server && go build -o /runtime ./cmd/generate-keys && go build -o /runtime ./cmd/generate-config\n\n\nWORKDIR /runtime\nCMD /runtime/compile.sh && /runtime/run.sh\n"
}