{
  "startTime": 1674218677310,
  "endTime": 1674218678059,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 22,
        "columnEnd": 54
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 22,
        "columnEnd": 54
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:14 AS builder\n\nWORKDIR /usr/src/app\n\nCOPY package*.json ./\n\nRUN npm install && npm cache clean --force;\n\nFROM node:14-slim\n\n# `secure-delete` adds the `srm` utility to securely delete files.\n# This is a better alternative to Node's `unlink`. The default config in\n# `docker/docker.config.yaml` is already configured to use `srm` as the\n# utility to delete the scanned files, which is why we add it to the base image.\nRUN apt-get update && apt-get install --no-install-recommends -y secure-delete && apt-get clean && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /usr/src/app\n\nCOPY config config\nCOPY example* ./\nCOPY package.json .\nCOPY src src\nCOPY test test\nCOPY --from=builder /usr/src/app/node_modules node_modules\n\nEXPOSE 8080\n\nCMD [ \"npm\", \"start\", \"--\", \"config/docker.config.yaml\" ]\n"
}