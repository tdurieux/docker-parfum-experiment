{
  "startTime": 1674248155300,
  "endTime": 1674248156067,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 27
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:latest\n\n# Set proxie if required\n\n# Install required packages\nENV DEBIAN_FRONTEND=noninteractive\nRUN apt-get update --fix-missing && apt-get install --no-install-recommends -y bzip2 \\\n                       cmake \\\n                       g++ \\\n                       gcc \\\n                       git \\\n                       locales \\\n                       make \\\n                       patch \\\n                       wget && rm -rf /var/lib/apt/lists/*;\n\nENV HOME=/work\nRUN mkdir $HOME\nWORKDIR $HOME\n\n# Install miniconda3 to $HOME/miniconda3\n# Source link: https://repo.anaconda.com/miniconda/\nRUN wget https://repo.anaconda.com/miniconda/Miniconda3-py37_4.9.2-Linux-x86_64.sh -O $HOME/miniconda.sh\nRUN bash $HOME/miniconda.sh -b -p $HOME/miniconda3\nENV PATH=$HOME/miniconda3/bin:$PATH\n\n# Install base conda packages\nRUN /bin/bash -c \"source $HOME/miniconda3/bin/activate &&\\\n    conda list &&\\\n    conda install -q -y -c anaconda --override-channels\\\n        conda-build\\\n        conda-verify &&\\\n    conda list\"\n\n# LLVM build\nRUN git clone https://github.com/IntelPython/mlir-llvm-recipe.git &&\\\n    export SHA=$(cat mlir-llvm-recipe/llvm-sha.txt) &&\\\n    git clone https://github.com/llvm/llvm-project.git &&\\\n    cd llvm-project &&\\\n    git checkout $SHA &&\\\n    cmake --version &&\\\n    cmake ../llvm-project/llvm -DLLVM_ENABLE_PROJECTS=mlir -DLLVM_BUILD_EXAMPLES=ON -DLLVM_TARGETS_TO_BUILD=\"host\" -DCMAKE_BUILD_TYPE=Release -DLLVM_ENABLE_ASSERTIONS=ON -DLLVM_ENABLE_RTTI=ON -DCMAKE_INSTALL_PREFIX=../mlir-llvm &&\\\n    make -j$(nproc --all) all &&\\\n    cmake --install .\n\n# Dpcomp build\n# Use git clone https://<token>@github.com/IntelPython/dpcomp.git to clone with token\nRUN git clone https://github.com/IntelPython/dpcomp.git &&\\\n    wget -O tbb.tgz \"https://github.com/oneapi-src/oneTBB/releases/download/v2021.1.1/oneapi-tbb-2021.1.1-lin.tgz\" &&\\\n    mkdir tbb &&\\\n    tar -xf \"tbb.tgz\" -C tbb --strip-components=1 && \\\n    /bin/bash -c \"source $HOME/miniconda3/bin/activate &&\\\n    conda install -y numba=0.53 scipy pybind11 pytest -c conda-forge &&\\\n    cmake --version &&\\\n    chmod -R 777 mlir-llvm &&\\\n    export LLVM_PATH=$(pwd)/mlir-llvm &&\\\n    export TBB_PATH=$(pwd)/tbb &&\\\n    cd dpcomp &&\\\n    python setup.py develop\" && rm \"tbb.tgz\"\n\n# Run tests\nRUN cd /work/dpcomp &&\\\n    /bin/bash -c \"source $HOME/miniconda3/bin/activate &&\\\n    source $(pwd)/../tbb/env/vars.sh &&\\\n    pytest\"\n"
}