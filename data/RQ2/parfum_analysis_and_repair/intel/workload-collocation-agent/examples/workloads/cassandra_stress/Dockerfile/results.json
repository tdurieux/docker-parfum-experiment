{
  "startTime": 1674252914236,
  "endTime": 1674252915057,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 30
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright (c) 2018 Intel Corporation\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n\nFROM cassandra:3.11\n\n# library tzdata start interactive dialog, in docker this must be turned off\nENV DEBIAN_FRONTEND=noninteractive\n\nRUN ln -sfn /usr/bin/python2 /usr/bin/python\nRUN apt-get update && \\\n    apt-get --no-install-recommends -y install build-essential=12.4ubuntu1 \\\n    libssl-dev=1.1.1-1ubuntu2.1~18.04.5 zlib1g-dev=1:1.2.11.dfsg-0ubuntu2 \\\n    libncurses5-dev=6.1-1ubuntu1.18.04 libncursesw5-dev=6.1-1ubuntu1.18.04 \\\n    libreadline-dev=7.0-3 libsqlite3-dev=3.22.0-1ubuntu0.3 \\\n    libgdbm-dev=1.14.1-6 libdb5.3-dev=5.3.28-13.1ubuntu1.1 \\\n    libbz2-dev=1.0.6-8.1ubuntu0.2 libexpat1-dev=2.2.5-3ubuntu0.2 \\\n    liblzma-dev=5.2.2-1.3 tk-dev=8.6.0+9 wget=1.19.4-1ubuntu2.2 \\\n    netcat=1.10-41.1 && \\\n    apt-get clean && rm -rf /var/lib/apt/lists/*\nRUN wget https://www.python.org/ftp/python/3.6.6/Python-3.6.6.tar.xz\nRUN tar xf Python-3.6.6.tar.xz && rm Python-3.6.6.tar.xz\nWORKDIR /Python-3.6.6\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-optimizations\nRUN make -j 8\nRUN make altinstall\nWORKDIR /\nRUN mkdir -p /stress\n"
}