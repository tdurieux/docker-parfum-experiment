{
  "startTime": 1674215554692,
  "endTime": 1674215555664,
  "originalSmells": [
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 21,
        "columnEnd": 75
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 81,
        "lineEnd": 81,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 88,
        "lineEnd": 88,
        "columnStart": 4,
        "columnEnd": 73
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright (c) 2018 Intel Corporation\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n#### Multistage Dockerfile\n# to build wca in three flavors:\n# 1. devel: development version (without version)\n# 2. pex: pex based Dockerfile that includes version number based on .git repo\n# 3. standalone: empty image with just and not any development tools\n\n## Testing\n# 1. Build\n# docker build -t wca:latest .\n\n# 2. Run\n# sudo docker run -it --privileged --rm wca -c /wca/configs/extra/static_measurements.yaml -0\n# should output some metrics\n\n# ------------------------ devel ----------------------\nFROM centos:7 AS devel\n\nRUN yum -y update && yum -y install python36 python-pip which make git wget && rm -rf /var/cache/yum\n\n# The official way to build impctl is used below,\n# based on instruction from https://github.com/intel/ipmctl#build,\n# where ndctl, libsafec is dependency of ipmctl\nWORKDIR /etc/yum.repos.d\nRUN wget https://copr.fedorainfracloud.org/coprs/jhli/ipmctl/repo/epel-7/jhli-ipmctl-epel-7.repo\nRUN wget https://copr.fedorainfracloud.org/coprs/jhli/safeclib/repo/epel-7/jhli-safeclib-epel-7.repo\nRUN yum install -y ndctl ndctl-libs ndctl-devel libsafec ipmctl dmidecode && rm -rf /var/cache/yum\n# --- TODO: consider moving that to init container just responsible for preparing this data\n\nWORKDIR /wca\n\n\nENV LANG=en_US.UTF-8\nENV LC_ALL=en_US.UTF-8\n\n\n# note: Cache will be propably invalidated here.\nCOPY configs ./configs\n\nCOPY examples/external_package.py ./examples\nCOPY examples/hello_world_runner.py ./examples\nCOPY examples/hello_world_runner_with_dateutil.py ./examples\nCOPY examples/http_storage.py ./examples\nCOPY examples/__init__.py ./examples\nCOPY Makefile .\nCOPY requirements.txt .\n\nRUN make venv\n\nENV PYTHONPATH=/wca\n\nCOPY wca ./wca\n\nENTRYPOINT [\"/wca/env/bin/python\", \"wca/main.py\"]\n\n# ------------------------ pex ----------------------\n# \"pex\" stage includes pex file in /usr/bin/\nFROM devel AS pex\nCOPY . .\nRUN make clean\nRUN make venv\nRUN make wca_package\nRUN cp /wca/dist/wca.pex /usr/bin/\nENTRYPOINT [\"/usr/bin/wca.pex\"]\n\n## ------------------------ standalone ----------------------\n## Building final container that consists of wca only.\nFROM centos:7 AS standalone\nRUN yum -y install python36 which wget && rm -rf /var/cache/yum\n# The official way to build impctl is used below,\n# based on instruction from https://github.com/intel/ipmctl#build,\n# where ndctl, libsafec is dependency of ipmctl\nWORKDIR /etc/yum.repos.d\nRUN wget https://copr.fedorainfracloud.org/coprs/jhli/ipmctl/repo/epel-7/jhli-ipmctl-epel-7.repo\nRUN wget https://copr.fedorainfracloud.org/coprs/jhli/safeclib/repo/epel-7/jhli-safeclib-epel-7.repo\nRUN yum install -y ndctl ndctl-libs ndctl-devel libsafec ipmctl dmidecode && rm -rf /var/cache/yum\nCOPY --from=pex /wca/dist/wca.pex /usr/bin/\nENTRYPOINT [\"/usr/bin/wca.pex\"]\n"
}