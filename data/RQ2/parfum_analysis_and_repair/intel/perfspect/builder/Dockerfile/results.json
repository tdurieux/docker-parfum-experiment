{
  "startTime": 1674250706715,
  "endTime": 1674250707449,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 54
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 22,
        "columnEnd": 80
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 171
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 22,
        "columnEnd": 82
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 22,
        "columnEnd": 60
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 171
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 22,
        "columnEnd": 80
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 171
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 22,
        "columnEnd": 82
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 22,
        "columnEnd": 60
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 195
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 61
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:18.04\n# if using proxy please uncomment and edit proxy config below\n#ENV http_proxy <http_proxy:port>\n#ENV https_proxy <https_proxy:port>\n\nENV LANG en_US.UTF-8\nRUN rm -rf /etc/apt/sources.list.d/ubuntu-esm-infra-trusty.list\nARG DEBIAN_FRONTEND=noninteractive\nRUN apt-get update && apt-get install --no-install-recommends -y sudo software-properties-common locales && rm -rf /var/lib/apt/lists/*;\nRUN locale-gen en_US.UTF-8\nRUN echo \"LANG=en_US.UTF-8\" > /etc/default/locale\n\nARG USERNAME\nARG USERID\nRUN adduser --disabled-password --uid ${USERID} --gecos '' ${USERNAME} \\\n    && adduser ${USERNAME} sudo                        \\\n    && echo \"${USERNAME} ALL=(ALL) NOPASSWD: ALL\" >> /etc/sudoers\n\n# set up volumes\nVOLUME /scripts\nVOLUME /workdir\n\n\n# USER root\nRUN apt-get update --fix-missing\nRUN apt-get install --no-install-recommends -y software-properties-common curl git wget build-essential autotools-dev automake gawk zlib1g-dev libtool libaio-dev libaio1 pandoc pkgconf libcap-dev && rm -rf /var/lib/apt/lists/*;\nRUN add-apt-repository -y ppa:deadsnakes/ppa\nRUN apt-get update && apt-get install --no-install-recommends -y python3.7 python3.7-dev python3-distutils && rm -rf /var/lib/apt/lists/*;\nRUN apt-get install --no-install-recommends -y netcat-openbsd && rm -rf /var/lib/apt/lists/*;\nRUN wget https://golang.org/dl/go1.13.4.linux-amd64.tar.gz\nRUN tar -C /usr/local -xzf go1.13.4.linux-amd64.tar.gz && rm go1.13.4.linux-amd64.tar.gz\nENV PATH=\"$PATH:/usr/local/go/bin\"\nRUN wget https://storage.googleapis.com/shellcheck/shellcheck-v0.7.0.linux.x86_64.tar.xz\nRUN tar -xf shellcheck-v0.7.0.linux.x86_64.tar.xz && rm shellcheck-v0.7.0.linux.x86_64.tar.xz\nRUN cp shellcheck-v0.7.0/shellcheck /usr/bin/\nRUN go get github.com/mrtazz/checkmake\nENV BUILDER_NAME=\"builder\"\nENV BUILDER_EMAIL=\"builder@company.com\"\nRUN cd /root/go/src/github.com/mrtazz/checkmake && make && cp checkmake /usr/local/bin/\nRUN curl -f https://bootstrap.pypa.io/get-pip.py | python3.7\nRUN rm -rf /usr/lib/python3/dist-packages/yaml\nRUN rm -rf /usr/lib/python3/dist-packages/PyYAML-*\nRUN pip3 install --no-cache-dir PyYaml >=5.1.2\nRUN pip3 install --no-cache-dir pandas\nRUN pip3 install --no-cache-dir pyinstaller==4.5.1\nRUN pip3 install --no-cache-dir black\nRUN pip3 install --no-cache-dir bandit\nRUN pip3 install --no-cache-dir flake8\nRUN pip3 install --no-cache-dir mypy\nRUN pip3 install --no-cache-dir pytype\nRUN pip3 install --no-cache-dir pytest\nRUN pip3 install --no-cache-dir xlsxwriter\nRUN pip3 install --no-cache-dir python-dateutil\nRUN pip3 install --no-cache-dir --upgrade 'setuptools<45.0.0'\nRUN apt-get update && apt-get install --no-install-recommends -y linux-tools-generic && rm -rf /var/lib/apt/lists/*;\nRUN go get github.com/markbates/pkger/cmd/pkger\nRUN cd /root/go/bin && cp pkger /usr/local/bin/\nENV GOCACHE=/tmp\nENV GOPATH=/tmp\n\n# Run container as non-root user from here onwards\n# so that build output files have the correct owner\nUSER ${USERNAME}\n\n# run bash script and process the input command\nENTRYPOINT [ \"/bin/bash\", \"/scripts/entrypoint\"]\n"
}