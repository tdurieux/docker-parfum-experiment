{
  "startTime": 1674247924523,
  "endTime": 1674247925168,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 104
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 75
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 100
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 127
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 89
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 75
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 100
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 127
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#Copyright (c) 2021, Intel Corporation.\n#SPDX-License-Identifier: BSD-3-Clause\n\n\nFROM sysstacks/dlrs-tensorflow2-ubuntu:latest\n#FROM ubuntu:focal\n\nCOPY . /workspace\n\n# Set the PYTHONPATH to finish installing the API\nENV PYTHONPATH=$PYTHONPATH:/models/research/object_detection\nENV PYTHONPATH=$PYTHONPATH:/models/research/slim\nENV PYTHONPATH=$PYTHONPATH:/models/research\nENV POETRY_VIRTUALENVS_CREATE=false\n\n# docker image stub\nRUN DEBIAN_FRONTEND=\"noninteractive\" apt-get update && apt-get -y upgrade && \\\n    DEBIAN_FRONTEND=\"noninteractive\" apt-get install -y --no-install-recommends apt-utils && \\\n    DEBIAN_FRONTEND=\"noninteractive\" apt-get --no-install-recommends install -y libgl1-mesa-glx git && \\\n    DEBIAN_FRONTEND=\"noninteractive\" apt-get --no-install-recommends install -y build-essential protobuf-compiler curl unzip && \\\n    DEBIAN_FRONTEND=\"noninteractive\" apt-get --no-install-recommends install -y python-pil python-lxml python-tk python3-dev python3-opencv python3-pip && rm -rf /var/lib/apt/lists/*;\n\n# clone the repository\nRUN git clone --depth 1 https://github.com/tensorflow/models.git\n\n# Get protoc 3.0.0, rather than the old version already in the container\nRUN curl -f -OL \"https://github.com/google/protobuf/releases/download/v3.0.0/protoc-3.0.0-linux-x86_64.zip\" && \\\n    unzip protoc-3.0.0-linux-x86_64.zip -d proto3 && \\\n    mv proto3/bin/* /usr/local/bin && \\\n    mv proto3/include/* /usr/local/include && \\\n    rm -rf proto3 protoc-3.0.0-linux-x86_64.zip\n\n# Run protoc on the object detection repo\nRUN cd models/research && \\\n    protoc object_detection/protos/*.proto --python_out=. && \\\n    cp -r object_detection /workspace/src/effects_service\n\n# set model detection utils in python path\nRUN echo \"export PYTHONPATH=$PYTHONPATH:/models/research/object_detection\" >> ~/.bashrc &&\\\n    echo \"export PYTHONPATH=$PYTHONPATH:/models/research/slim\" >> ~/.bashrc &&\\\n    echo \"PYTHONPATH=$PYTHONPATH:/models/research\" >> ~/.bashrc\n\nWORKDIR /workspace/src/effects_service\n\n# install deps for the object detection model as well\nRUN cd /workspace && \\\n    pip install --no-cache-dir -U poetry && \\\n    poetry install\n\nENTRYPOINT [ \"poetry\", \"run\", \"python3\", \"api.py\" ]\n"
}