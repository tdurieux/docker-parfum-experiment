{
  "startTime": 1674254363840,
  "endTime": 1674254364148,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 18,
        "columnEnd": 51
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 18,
        "columnEnd": 51
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# This Dockerfile demonstrates how to build the openvino bindings using an installation of OpenVINO.\n# For instructions to install OpenVINO see the OpenVINO documentation, e.g.\n# https://docs.openvinotoolkit.org/latest/openvino_docs_install_guides_installing_openvino_apt.html.\nARG OS=ubuntu18\nARG VERSION=2020.4\nFROM openvino/${OS}_runtime:${VERSION} AS builder\n\n# OpenVINO's images use a default user, `openvino`, that disallows root access.\nUSER root\n\n# Install Rust.\nRUN curl https://sh.rustup.rs -sSf | sh -s -- -y --profile minimal\nENV PATH=/root/.cargo/bin:$PATH\nRUN rustup component add rustfmt\n\n# Install build dependencies (for bindgen).\nRUN apt update && apt install --no-install-recommends -y clang libclang-dev && rm -rf /var/lib/apt/lists/*;\n\n# Copy in source code.\nWORKDIR /usr/src/openvino-rs\nCOPY . .\n\n# Build openvino libraries.\nRUN OPENVINO_INSTALL_DIR=/opt/intel/openvino cargo build -vv\n\n# Test; note that we need to setup the library paths before using them since the\n# OPENVINO_INSTALL_DIR can only affect the build library search path.\nRUN [\"/bin/bash\", \"-c\", \"source /opt/intel/openvino/setupvars.sh && OPENVINO_INSTALL_DIR=/opt/intel/openvino cargo test -v\"]\n"
}