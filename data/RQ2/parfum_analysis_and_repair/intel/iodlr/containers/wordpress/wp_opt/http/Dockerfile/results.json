{
  "startTime": 1674249871223,
  "endTime": 1674249872717,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 74
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright (C) 2021 Intel Corporation\n#\n# Permission is hereby granted, free of charge, to any person obtaining a\n# copy of this software and associated documentation files\n# (the \"Software\"), to deal in the Software without restriction,\n# including without limitation the rights to use, copy, modify, merge,\n# publish, distribute, sublicense, and/or sell copies of the Software,\n# and to permit persons to whom the Software is furnished to do so,\n# subject to the following conditions:\n#\n# The above copyright notice and this permission notice shall be included\n# in all copies or substantial portions of the Software.\n#\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n# OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES\n# OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,\n# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE\n# OR OTHER DEALINGS IN THE SOFTWARE.\n#\n# SPDX-License-Identifier: MIT\nARG baseimage=wp_base\nFROM $baseimage\nLABEL authors=\"nitin.tekchandani@intel.com,lin.a.yang@intel.com,uttam.c.pawar@intel.com\"\n\nSHELL [\"/bin/bash\", \"-c\"]\n\nCOPY files/perf.fdata /home/${USERNAME}/oss-performance\n\nARG zendlp=1\nARG bolt=1\nARG iodlrlp=1\nARG query=1\n\n# Optimization: Set environment variable to have zend use large pages\nENV USE_ZEND_ALLOC_HUGE_PAGES=\"$zendlp\"\n\n# Build php 7.4.16 for bolting\n\nRUN if [[ \"$bolt\" == \"1\" ]] ; then \\\n    sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-7 7 && \\\n    sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-7 7 && \\\n    cd /home/${USERNAME}/oss-performance && \\\n    git clone https://github.com/php/php-src.git && \\\n    cd /home/${USERNAME}/oss-performance/php-src && \\\n    git checkout PHP-7.4.16 && \\ \n    ./buildconf --force && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-fpm --with-mysqli --with-pdo-mysql --enable-pcntl && \\\n    EXTRA_CFLAGS=\"-g\" LDFLAGS=\"-Wl,--emit-relocs,-znow\" make -j && \\\n    sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 9 && \\\n    sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 9 && \\\n# Build llvm-bolt\n    cd /home/${USERNAME}/oss-performance && \\\n    git clone https://github.com/llvm-mirror/llvm llvm && \\\n    cd llvm/tools && \\\n    git checkout -b llvm-bolt f137ed238db11440f03083b1c88b7ffc0f4af65e && \\\n    git clone https://github.com/facebookincubator/BOLT llvm-bolt && \\\n    cd llvm-bolt && \\\n    git checkout tags/v1.0.1 && \\\n    cd .. && \\\n    cd .. && \\\n    patch -p 1 < tools/llvm-bolt/llvm.patch && \\\n    cd .. && \\\n    mkdir build && \\\n    cd build && \\\n    cmake -G Ninja ../llvm -DLLVM_TARGETS_TO_BUILD=\"X86;AArch64\" -DCMAKE_BUILD_TYPE=Release -DLLVM_ENABLE_ASSERTIONS=ON && \\\n    ninja && \\\n# Optimization: Bolt php-fpm binary\n    cd /home/${USERNAME}/oss-performance && \\\n    cp ./build/bin/llvm-bolt /home/${USERNAME}/oss-performance && \\\n    cp ./php-src/sapi/fpm/php-fpm /home/${USERNAME}/oss-performance && \\\n    cp /home/${USERNAME}/oss-performance/php-src/modules/opcache.so /home/${USERNAME}/oss-performance && \\\n    ./llvm-bolt ./php-fpm -o ./php-fpm.bolt -data=perf.fdata -reorder-blocks=cache+ -reorder-functions=hfsort+ -split-functions=3 -split-all-cold -split-eh -dyno-stats && \\\n    sed -i \"s/\\/usr\\/sbin\\/php-fpm7\\.4/\\/home\\/${USERNAME}\\/oss-performance\\/php-fpm\\.bolt/\" quickrun.sh && \\\n    sed -i \"s/zend_extension\\=opcache\\.so/zend_extension\\=\\/home\\/${USERNAME}\\/oss-performance\\/opcache.so/\" conf/php.ini && \\\n# Cleanup: Remove llvm build and perf.fdata\n    rm -rf /home/${USERNAME}/oss-performance/llvm && \\\n    rm -rf /home/${USERNAME}/oss-performance/build && \\\n# Cleanup: move php binaries and remove php clone and build files\n    rm -rf /home/${USERNAME}/oss-performance/php-src; \\\n    fi\n\n# Optimization: Build and install iodlr huge pages library (commit_id: 01f4985) for use with mariadb\nRUN if [[ \"$iodlrlp\" == \"1\" ]] ; then \\\n    cd /home/${USERNAME} && \\\n    git clone https://github.com/intel/iodlr && \\\n    cd iodlr && \\\n    git checkout 01f4985 && \\\n    cd large_page-c && \\\n    make -f Makefile.preload && \\\n    sudo cp liblppreload.so /usr/lib/ && \\\n    sudo sed -i 's/\\/usr\\/bin\\/mysqld_safe/LD_PRELOAD=\\/usr\\/lib\\/liblppreload.so \\/usr\\/bin\\/mysqld_safe/' /etc/init.d/mysql && \\\n    rm -rf /home/${USERNAME}/iodlr/ ; \\\n    fi\n\nARG mariadbconf=1s\n# Optimization: Query cache optimization for single socket operation (unless over-ridden)\nRUN if [[ \"$query\" == \"1\" ]] ; then sudo cp /home/${USERNAME}/${mariadbconf}-bkm.j2 /etc/mysql/my.cnf ; fi\n\nWORKDIR /home/${USERNAME}/oss-performance\n"
}