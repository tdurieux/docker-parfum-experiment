diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/intel/stacks/mers/ubuntu/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/intel/stacks/mers/ubuntu/Dockerfile/repaired.Dockerfile
index e51f375..b7bd417 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/intel/stacks/mers/ubuntu/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/intel/stacks/mers/ubuntu/Dockerfile/repaired.Dockerfile
@@ -17,7 +17,7 @@ ARG CXXFLAGS="$CXXFLAGS -mfma -msse -msse2 -msse3 -mssse3 -mcx16 -msahf -mmovbe
 ARG GCC_IGNORE_WERROR=1
 ARG CMAKE_CXX_FLAGS="Wno-error=deprecated-declarations -Wno-error=redundant-move -Wno-error=pessimizing-move -Wno-error=unused-function -Wno-error=parentheses -Wno-error=implicit-function-declaration"
 
-RUN apt-get update && apt-get install -y -q --no-install-recommends build-essential autoconf make git wget pciutils cpio libtool lsb-release ca-certificates pkg-config bison flex libcurl4-gnutls-dev zlib1g-dev
+RUN apt-get update && apt-get install -y -q --no-install-recommends build-essential autoconf make git wget pciutils cpio libtool lsb-release ca-certificates pkg-config bison flex libcurl4-gnutls-dev zlib1g-dev && rm -rf /var/lib/apt/lists/*;
 # Install cmake
 ARG CMAKE_VER=3.16.3
 ARG CMAKE_REPO=https://cmake.org/files
@@ -31,16 +31,16 @@ RUN wget -O - ${CMAKE_REPO}/v${CMAKE_VER%.*}/cmake-${CMAKE_VER}.tar.gz | tar xz
 ARG AUTOMAKE_VER=1.14
 ARG AUTOMAKE_REPO=https://ftp.gnu.org/pub/gnu/automake/automake-${AUTOMAKE_VER}.tar.xz
 
-RUN apt-get install -y -q automake
+RUN apt-get install --no-install-recommends -y -q automake && rm -rf /var/lib/apt/lists/*;
 
 # Build NASM
 ARG NASM_VER=2.14.02
 ARG NASM_REPO=https://www.nasm.us/pub/nasm/releasebuilds/${NASM_VER}/nasm-${NASM_VER}.tar.bz2
-RUN  wget ${NASM_REPO} && \
+RUN wget ${NASM_REPO} && \
      tar -xaf nasm* && \
      cd nasm-${NASM_VER} && \
      ./autogen.sh && \
-     ./configure --prefix=/usr/local --libdir=/usr/local/lib/x86_64-linux-gnu && \
+     ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/usr/local --libdir=/usr/local/lib/x86_64-linux-gnu && \
      make -j $(nproc) && \
      make install
 
@@ -48,14 +48,14 @@ RUN  wget ${NASM_REPO} && \
 ARG YASM_VER=1.3.0
 ARG YASM_REPO=https://www.tortall.net/projects/yasm/releases/yasm-${YASM_VER}.tar.gz
 
-RUN  wget -O - ${YASM_REPO} | tar xz && \
+RUN wget -O - ${YASM_REPO} | tar xz && \
      cd yasm-${YASM_VER} && \
      sed -i "s/) ytasm.*/)/" Makefile.in && \
-     ./configure --prefix=/usr/local --libdir=/usr/local/lib/x86_64-linux-gnu && \
+     ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/usr/local --libdir=/usr/local/lib/x86_64-linux-gnu && \
      make -j $(nproc) && \
      make install
 
-RUN apt-get update -y && apt-get install -y python3-pip ninja-build
+RUN apt-get update -y && apt-get install --no-install-recommends -y python3-pip ninja-build && rm -rf /var/lib/apt/lists/*;
 ARG MESON_VER=0.53.1
 ARG MESON_REPO=https://github.com/mesonbuild/meson
 
@@ -75,7 +75,7 @@ RUN \
   meson build --prefix=/usr/local --libdir /usr/local/lib/x86_64-linux-gnu --buildtype=plain && \
   cd build && \
   ninja install && \
-  DESTDIR=/home/build ninja install
+  DESTDIR=/home/build ninja install && rm dav1d.tar.gz
 
 # X264_DOT=OS
 ARG X264_VER=b3aadb76329d3c2aedac85142441476bbe5f002c
@@ -85,7 +85,7 @@ RUN \
   git clone ${X264_REPO} && \
   cd x264 && \
   git checkout ${X264_VER} && \
-  ./configure --prefix=/usr/local --libdir=/usr/local/lib/x86_64-linux-gnu --enable-shared && \
+  ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/usr/local --libdir=/usr/local/lib/x86_64-linux-gnu --enable-shared && \
   make -j $(nproc) && \
 	make install DESTDIR=/home/build && \
 	make install
@@ -130,7 +130,7 @@ RUN \
    cmake .. -DCMAKE_BUILD_TYPE=release && \
    make -j $(nproc) && \
    make install DESTDIR=/home/build && \
-   make install;
+   make install; rm ${GMMLIB_VER}.tar.gz
 
 
 # LIBVA_DOT=OS;color=red
@@ -139,7 +139,7 @@ ARG LIBVA_REPO=https://github.com/intel/libva/archive/${LIBVA_VER}.tar.gz
 
 RUN apt-get remove libva*
 
-RUN apt-get update && apt-get install -y -q --no-install-recommends libdrm-dev libx11-dev xorg-dev libgl1-mesa-dev openbox
+RUN apt-get update && apt-get install -y -q --no-install-recommends libdrm-dev libx11-dev xorg-dev libgl1-mesa-dev openbox && rm -rf /var/lib/apt/lists/*;
 RUN \
   wget -O ${LIBVA_VER} ${LIBVA_REPO} && \
   tar zxf ${LIBVA_VER} && \
@@ -166,7 +166,7 @@ RUN \
 ARG MEDIA_DRIVER_VER=intel-media-20.4.5
 ARG MEDIA_DRIVER_REPO=https://github.com/intel/media-driver/archive/${MEDIA_DRIVER_VER}.tar.gz
 
-RUN apt-get update && apt-get install -y -q --no-install-recommends libdrm-dev libpciaccess-dev libx11-dev xorg-dev libgl1-mesa-dev
+RUN apt-get update && apt-get install -y -q --no-install-recommends libdrm-dev libpciaccess-dev libx11-dev xorg-dev libgl1-mesa-dev && rm -rf /var/lib/apt/lists/*;
 RUN \
   wget -O ${MEDIA_DRIVER_VER} ${MEDIA_DRIVER_REPO} && \
   tar zxf ${MEDIA_DRIVER_VER} && mv media-driver-${MEDIA_DRIVER_VER} media-driver && \
@@ -257,7 +257,7 @@ ARG MERS_ENABLE_PARSERS=h264
 ARG MERS_ENABLES="--enable-libsvthevc --enable-libsvtav1 --enable-nonfree --enable-gpl --enable-libx264 --enable-libdav1d "
 ARG MERS_OTHERS="--enable-ffprobe"
 
-RUN apt-get update && apt-get install -y -q --no-install-recommends libass-dev libsdl2-dev libssl-dev libvdpau-dev librtmp-dev libv4l-dev libvorbis-dev libvpx-dev
+RUN apt-get update && apt-get install -y -q --no-install-recommends libass-dev libsdl2-dev libssl-dev libvdpau-dev librtmp-dev libv4l-dev libvorbis-dev libvpx-dev && rm -rf /var/lib/apt/lists/*;
 
 RUN \
   git clone ${FFMPEG_REPO} && \
@@ -278,7 +278,7 @@ RUN \
 # Compile FFmpeg (base on http://kojiclear.jf.intel.com/cgit/packages/not-ffmpeg/plain/configure + MeRS codecs and tools)
 RUN \
   cd FFmpeg && \
-  ./configure \
+  ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
     --prefix=/usr/local \
     --disable-static \
     --extra-ldflags='-ldl' \
@@ -348,7 +348,7 @@ ARG LLVM_PATCHES_REPO=https://github.com/intel/llvm-patches.git
 
 RUN \
     apt-get -y update && apt-get --no-install-recommends install -y \
-    ccache flex bison flex bison libz-dev patch git
+    ccache flex bison flex bison libz-dev patch git && rm -rf /var/lib/apt/lists/*;
 
 RUN \
     mkdir -p /home/intel-compute-runtime/workspace/build_igc
@@ -374,7 +374,7 @@ ARG LEVEL_ZERO_REPO=https://github.com/oneapi-src/level-zero/archive/v${LEVEL_ZE
 
 RUN \
   apt-get update && apt-get install -y -q --no-install-recommends \
-  ccache
+  ccache && rm -rf /var/lib/apt/lists/*;
 
 RUN \
   wget -O - ${LEVEL_ZERO_REPO} | tar xz && \
@@ -392,7 +392,7 @@ ARG OCL_REPO=https://github.com/intel/compute-runtime/archive/${OCL_VER}.tar.gz
 
 RUN \
     apt-get -y update && apt-get --no-install-recommends install -y \
-    cmake make g++ pkg-config
+    cmake make g++ pkg-config && rm -rf /var/lib/apt/lists/*;
 
 RUN \
     wget -O - ${OCL_REPO} | tar xz && \
@@ -409,7 +409,7 @@ RUN \
 # GST_DOT=OS,X264;color=red,style=dashed
 ARG GST_VER=1.18.2
 ARG GST_REPO=https://gstreamer.freedesktop.org/src/gstreamer/gstreamer-${GST_VER}.tar.xz
-RUN apt-get update && apt-get install -y -q --no-install-recommends libglib2.0-dev gobject-introspection libgirepository1.0-dev libpango-1.0-0 libpangocairo-1.0-0 autopoint libcurl3-gnutls
+RUN apt-get update && apt-get install -y -q --no-install-recommends libglib2.0-dev gobject-introspection libgirepository1.0-dev libpango-1.0-0 libpangocairo-1.0-0 autopoint libcurl3-gnutls && rm -rf /var/lib/apt/lists/*;
 RUN \
   wget -O - ${GST_REPO} | tar xJ && \
   cd gstreamer-${GST_VER} &&  \
@@ -426,7 +426,7 @@ RUN \
 # GST_PLUGIN_ORC_DOT=GST
 ARG GST_ORC_VER=0.4.32
 ARG GST_PLUGIN_ORC_REPO=https://gstreamer.freedesktop.org/src/orc/orc-${GST_ORC_VER}.tar.xz
-RUN apt-get update && apt-get install -y -q --no-install-recommends gtk-doc-tools
+RUN apt-get update && apt-get install -y -q --no-install-recommends gtk-doc-tools && rm -rf /var/lib/apt/lists/*;
 RUN \
   wget -O - ${GST_PLUGIN_ORC_REPO} | tar xJ && \
   cd orc-${GST_ORC_VER} &&  \
@@ -442,7 +442,7 @@ RUN \
 
 # GST_PLUGIN_BASE_DOT=GST
 ARG GST_PLUGIN_BASE_REPO=https://gstreamer.freedesktop.org/src/gst-plugins-base/gst-plugins-base-${GST_VER}.tar.xz
-RUN apt-get update && apt-get install -y -q --no-install-recommends libxv-dev libtheora-dev libglib2.0-dev libasound2-dev libgl1-mesa-dev libpango1.0-dev libxrandr-dev libegl1-mesa-dev autopoint bison flex libudev-dev
+RUN apt-get update && apt-get install -y -q --no-install-recommends libxv-dev libtheora-dev libglib2.0-dev libasound2-dev libgl1-mesa-dev libpango1.0-dev libxrandr-dev libegl1-mesa-dev autopoint bison flex libudev-dev && rm -rf /var/lib/apt/lists/*;
 RUN \
   wget -O - ${GST_PLUGIN_BASE_REPO} | tar xJ && \
   cd gst-plugins-base-${GST_VER} &&  \
@@ -460,7 +460,7 @@ RUN \
 # GST_PLUGIN_GOOD_DOT=GST
 ARG GST_PLUGIN_GOOD_REPO=https://gstreamer.freedesktop.org/src/gst-plugins-good/gst-plugins-good-${GST_VER}.tar.xz
 
-RUN  apt-get update && apt-get install -y -q --no-install-recommends libcurl3-gnutls 
+RUN apt-get update && apt-get install -y -q --no-install-recommends libcurl3-gnutls && rm -rf /var/lib/apt/lists/*;
 RUN \
   wget -O - ${GST_PLUGIN_GOOD_REPO} | tar xJ && \
   cd gst-plugins-good-${GST_VER} &&  \
@@ -491,7 +491,7 @@ RUN \
 # GST_MSDKH264DEC_DOT=GST_MSDK;color=blue
 ARG GST_PLUGIN_BAD_REPO=https://gstreamer.freedesktop.org/src/gst-plugins-bad/gst-plugins-bad-${GST_VER}.tar.xz
 
-RUN  apt-get update && apt-get install -y -q --no-install-recommends libssl-dev librtmp-dev
+RUN apt-get update && apt-get install -y -q --no-install-recommends libssl-dev librtmp-dev && rm -rf /var/lib/apt/lists/*;
 RUN \
   wget -O - ${GST_PLUGIN_BAD_REPO} | tar xJ && \
   cd gst-plugins-bad-${GST_VER} &&  \
@@ -593,13 +593,13 @@ ARG OPENCV_REPO=https://github.com/opencv/opencv/archive/${OPENCV_VER}.tar.gz
 
 RUN \
   wget ${OPENCV_REPO} && \
-  tar -zxvf ${OPENCV_VER}.tar.gz
+  tar -zxvf ${OPENCV_VER}.tar.gz && rm ${OPENCV_VER}.tar.gz
 
 
 RUN apt-get update && apt-get install -y -q --no-install-recommends \
     pkg-config \
     # Parallelism and linear algebra libraries: \
-    libeigen3-dev
+    libeigen3-dev && rm -rf /var/lib/apt/lists/*;
 
 RUN \
   cd opencv-${OPENCV_VER} && \
@@ -631,7 +631,7 @@ ARG CLDNN__OUTPUT_LIB_DIR=/home/dldt/bin/intel64/Release/lib
 
 RUN \
   apt-get update && apt-get install -y -q --no-install-recommends \
-  cmake gcc g++ git libboost-all-dev libgtk2.0-dev libgtk-3-dev libtool libusb-1.0-0-dev make python python-yaml xz-utils
+  cmake gcc g++ git libboost-all-dev libgtk2.0-dev libgtk-3-dev libtool libusb-1.0-0-dev make python python-yaml xz-utils && rm -rf /var/lib/apt/lists/*;
 RUN \
   git clone -b ${DLDT_VER} ${DLDT_REPO} && \
   cd dldt && \
@@ -733,7 +733,7 @@ ENV LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:/opt/intel/dldt/inference-engine/lib:/opt
 ENV InferenceEngine_DIR=/opt/intel/dldt/inference-engine/share
 ENV OpenCV_DIR=/opt/intel/dldt/inference-engine/external/opencv/cmake
 
-RUN apt-get install -y -q --no-install-recommends gtk-doc-tools uuid-dev python-gi-dev python3-dev libtool-bin
+RUN apt-get install -y -q --no-install-recommends gtk-doc-tools uuid-dev python-gi-dev python3-dev libtool-bin && rm -rf /var/lib/apt/lists/*;
 
 ARG CMAKE_PREFIX_PATH="/home/dldt/inference-engine/build/ngraph/:${CMAKE_PREFIX_PATH}"
 
@@ -753,7 +753,7 @@ RUN \
     -DENABLE_PAHO_INSTALLATION=${ENABLE_PAHO_INSTALLATION} \
     -DENABLE_RDKAFKA_INSTALLATION=${ENABLE_RDKAFKA_INSTALLATION} \
     -DBUILD_SHARED_LIBS=ON -DCMAKE_INSTALL_PREFIX=/usr/local .. && \
-  make -j $(nproc)
+  make -j $(nproc) && rm ${VA_GSTREAMER_PLUGIN_DEST_NAME}.tar.gz
 
 RUN \
   mkdir -p /home/build//usr/local/lib/x86_64-linux-gnu/gstreamer-1.0 && \
@@ -792,7 +792,7 @@ ENV XDG_RUNTIME_DIR=/home/mers-user
 ARG DEBIAN_FRONTEND=noninteractive
 ARG TZ='GST-1'
 
-COPY --from=build /home/build / 
+COPY --from=build /home/build /
 RUN \
   apt-get update && \
   apt-get install -y -q --no-install-recommends \
@@ -802,7 +802,7 @@ RUN \
   libeigen3-dev \
   ocl-icd-libopencl1  && \
   apt clean && \
-  rm -rf /var/lib/apt/lists/* 
+  rm -rf /var/lib/apt/lists/*
 ENV LIBVA_DRIVERS_PATH=/usr/local/lib/x86_64-linux-gnu/dri
 ENV LIBVA_DRIVER_NAME=iHD
 ENV LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:/usr/local/lib/x86_64-linux-gnu/gstreamer-1.0