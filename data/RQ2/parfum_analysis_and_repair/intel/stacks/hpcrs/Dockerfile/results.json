{
  "startTime": 1674254954587,
  "endTime": 1674254956199,
  "originalSmells": [
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 7,
        "columnEnd": 92
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 7,
        "lineEnd": 8,
        "columnStart": 7,
        "columnEnd": 45
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 7,
        "columnEnd": 92
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 7,
        "columnEnd": 81
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#---------------------------------------------------------------------------\n# Builder stage on Centos OS\n#---------------------------------------------------------------------------\nFROM centos:8 as base\n\nRUN yum update -y \\\n    && yum install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm \\\n    && yum install -y jemalloc-devel wget curl git \\\n    python3-pip python3 python36-devel.x86_64 \\\n    && ln -s /usr/bin/python3 /usr/bin/python \\\n    && ln -s /usr/bin/pip3 /usr/bin/pip && rm -rf /var/cache/yum\n\nENV PATH=/opt/rh/gcc-toolset-9/root/usr/bin:$PATH\n\n\n# Set up environment\nWORKDIR /workspace\nCOPY ./components/*.sh components/\n\n# Add oneapi repo\nCOPY ./components/oneapi/ components/oneapi\nRUN /workspace/components/oneapi/add_repo_centos.sh\n\n# Add oneapi components\nRUN /workspace/components/oneapi/components.sh\n\n# install recipe builder\nCOPY ./components/spack components/spack\nRUN ./components/spack/install.sh\n\n# Cleanup\nRUN find /opt/intel/ -name \"*.deb*\" | xargs rm -rf \\\n    && find /opt/intel/ -name \"*.rpm*\" | xargs rm -rf \\\n    && rm -rf /opt/intel/oneapi/intelpython/ \\\n    && rm -rf /opt/intel/oneapi/conda_channel/ \\\n    && rm -rf /opt/intel/oneapi/dal/ \\\n    && rm -rf /opt/intel/oneapi/ipp/ \\\n    && rm -rf /opt/intel/oneapi/dev-utilities/ \\\n    && rm -rf /opt/intel/oneapi/mpi/latest/lib/debug* \\\n    && rm -rf /opt/intel/oneapi/mpi/latest/lib/release_mt \\\n    && rm -rf /opt/intel/oneapi/compiler/2021.1.2/linux/lib/oclfpga/ \\\n    && find /opt/intel/ -name \"*.tgz*\" | xargs rm -rf || true \\\n    && find /opt/intel/ -name \"*.tar.bz2*\" | xargs rm -rf || true \\\n    && find /opt/intel/ -name \"*.log\" | xargs rm -rf || true \\\n    && find /opt/intel/ -name \"*.jar\" | xargs rm -rf || true \\\n    && find /opt/intel/ -type d -name \"benchmark*\" | xargs rm -rf || true \\\n    && find /opt/intel/oneapi/mkl/ -name \"*.a\" | xargs rm -rf || true \\\n    && find /opt/intel/oneapi/mpi/latest/lib/release -name \"*.a\" | xargs rm -rf || true\n\n\n#---------------------------------------------------------------------------\n# Deployment image\n#---------------------------------------------------------------------------\nFROM centos:8 as final\n\nLABEL authors=\"otc-swstacks@intel.com\"\nLABEL repo=\"https://github.com/intel/stacks\"\n\nCOPY --from=base /opt/ /opt/\n\nWORKDIR /workspace\n# add core components\nCOPY ./components components/\nRUN yum update -y \\\n    && yum install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm \\\n    && yum install -y which cpio wget openssh-server git make python3-pip python3 \\\n    && dnf install -y gcc-gfortran gcc gcc-c++ \\\n    && dnf upgrade -y \\\n    && ln -s /usr/bin/python3 /usr/bin/python \\\n    && ln -s /usr/bin/pip3 /usr/bin/pip \\\n    && ./components/oneapi/add_repo_centos.sh \\\n    && ./components/pytorch/install.sh \\\n    && ./components/horovod/install.sh \\\n    && ./components/omnipath/drivers.sh \\\n    && mkdir -p /etc/profile.d \\\n    && cp components/config_vars.sh /etc/profile.d \\\n    && cp components/sources.sh /etc/profile.d \\\n    && mkdir -p /tmp/intel_shm/4k/ /tmp/intel_shm/2m /tmp/intel_shm/1g \\\n    && echo \"export I_MPI_SHM_FILE_PREFIX_4K=/tmp/intel_shm/4k\" >> /etc/profile.d/sources.sh \\\n    && echo \"export I_MPI_SHM_FILE_PREFIX_2M=/tmp/intel_shm/2m\" >> /etc/profile.d/sources.sh \\\n    && echo \"export I_MPI_SHM_FILE_PREFIX_1G=/tmp/intel_shm/1g\" >> /etc/profile.d/sources.sh \\\n    && echo \"export I_MPI_SHM=skx_avx512\" >> /etc/profile.d/sources.sh \\\n    && echo \"export I_MPI_FABRICS=shm:ofi\" >> /etc/profile.d/sources.sh \\\n    && echo \"source /opt/spack/share/spack/setup-env.sh\" >> /etc/profile.d/sources.sh \\\n    && mkdir -p /etc/security \\\n    && touch /etc/security/limits.conf \\\n    && echo \"root hard memlock unlimited\" >> /etc/security/limits.conf \\\n    && echo \"root soft memlock unlimited\" >> /etc/security/limits.conf \\\n    && cp components/licenses/third-party-programs_v3.txt   /workspace/ \\\n    && rm -rf /workspace/components \\\n    && find /opt/intel/ -name \"*.deb*\" | xargs rm -rf || true \\\n    && find /opt/intel/ -name \"*.rpm*\" | xargs rm -rf || true\\\n    && find /usr/lib/ -follow -type f -name '*.pyc' -delete \\\n    && find /usr/lib/ -follow -type f -name '*.js.map' -delete \\\n    && find /opt/intel/ -name \"*.tgz*\" | xargs rm -rf || true \\\n    && find /opt/intel/ -name \"*.tar.bz2*\" | xargs rm -rf || true \\\n    && find /opt/intel/ -name \"*.log\" | xargs rm -rf || true \\\n    && find /opt/intel/ -type d -name \"benchmark*\" | xargs rm -rf \\\n    && find /opt/intel/oneapi/mkl/ -name \"*.a\" | xargs rm -rf || true \\\n    && find /opt/intel/oneapi/mpi/latest/lib/release -name \"*.a\" | xargs rm -rf || true \\\n    && rm -rf /opt/intel/oneapi/intelpython/ || true \\\n    && rm -rf /opt/intel/oneapi/conda_channel/ || true \\\n    && rm -rf /opt/intel/oneapi/dal/ || true \\\n    && rm -rf /opt/intel/oneapi/ipp/ || true \\\n    && rm -rf /opt/intel/oneapi/dev-utilities/ || true \\\n    && rm -rf /opt/intel/oneapi/mpi/latest/lib/debug* \\\n    && rm -rf /opt/intel/oneapi/mpi/latest/lib/release_mt \\\n    && rm -rf /opt/intel/oneapi/compiler/2021.1.2/linux/lib/oclfpga/ \\\n    && dnf clean all && rm -rf /var/cache/yum\n\nSHELL [\"/bin/bash\",  \"-c\"]\n"
}