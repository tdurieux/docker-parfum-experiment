{
  "startTime": 1674247969774,
  "endTime": 1674247970531,
  "originalSmells": [
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 11,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 13
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 34
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# pull in base + a minimal set of useful packages\nFROM centos:7 as centos-7-build\n\nARG GOLANG_VERSION=x.yz\nARG GOLANG_URLDIR=https://dl.google.com/go\nARG GIT_VERSION=2.27.0\nARG GIT_URLDIR=https://github.com/git/git/archive\nARG CREATE_USER=\"build\"\nARG USER_OPTIONS=\"\"\nENV PATH /go/bin:/usr/local/go/bin:$PATH\n\nRUN yum install -y --nogpgcheck rpm-build \\\n    kernel-devel clang gcc \\ clang gcc \\\n    curl-devel zlib-devel openssl-devel expat-devel \\\n    make wget && rm -rf /var/cache/yum\n\n# fetch and build go from sources\nRUN arch=\"$(rpm --eval %{_arch})\"; \\\n    case \"${arch}\" in \\\n        x86_64) goarch=linux-amd64;; \\\n        i386) goarch=linux-386;; \\\n        armhf) goarch=linux-armv6l;; \\\n        ppc64el) goarch=linux-ppc64le;; \\\n        s390x) goarch=linux-s390x;; \\\n    esac; \\\n    \\\n    wget $GOLANG_URLDIR/go$GOLANG_VERSION.$goarch.tar.gz -O go.tgz && \\\n    tar -C /usr/local -xvzf go.tgz && rm go.tgz && \\\n    \\\n    export PATH=\"/usr/local/go/bin:$PATH\" && \\\n    echo \"PATH=/usr/local/go/bin:$PATH\" > /etc/profile.d/go.sh && \\\n    go version\n\n# fetch and build a recent git from sources, anything below 1.9.5 is known to not work for us\nRUN mkdir /git && cd /git && wget $GIT_URLDIR/v$GIT_VERSION.tar.gz && \\\n    tar -xvzf v$GIT_VERSION.tar.gz && cd git-$GIT_VERSION && \\\n    make -j8 NO_TCLTK=1 NO_GETTEXT=1 prefix=/usr all && \\\n    yum remove -y git && \\\n    make -j8 NO_TCLTK=1 NO_GETTEXT=1 prefix=/usr install && rm v$GIT_VERSION.tar.gz\n\nRUN [ -n \"$CREATE_USER\" -a \"$CREATE_USER\" != \"root\" ] && \\\n    useradd -m -s /bin/bash $CREATE_USER $USER_OPTIONS\n"
}