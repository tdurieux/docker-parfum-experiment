{
  "startTime": 1674250485968,
  "endTime": 1674250486546,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 83
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 73,
        "columnEnd": 126
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 81
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 34
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# To build:\n#  docker build --rm -t vpp-centos-userspace-cni .\n#\n\n\n# -------- Builder stage.\nFROM centos:7\n\nSHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\n\n# Install VPP - Needed by CNI-VPP\nRUN curl -f -s https://packagecloud.io/install/repositories/fdio/release/script.rpm.sh | bash\nRUN yum install -y epel-release && rm -rf /var/cache/yum\nRUN yum install -y epel-release vpp-plugins vpp-devel vpp-api-python vpp-api-lua; rm -rf /var/cache/yum yum clean all\n\n#\n# Download and Build Container usrsp-app\n#\n\n# Pull in GO\nRUN rpm --import https://mirror.go-repo.io/centos/RPM-GPG-KEY-GO-REPO && curl -f -s https://mirror.go-repo.io/centos/go-repo.repo | tee /etc/yum.repos.d/go-repo.repo\nRUN yum install -y git golang make && rm -rf /var/cache/yum\n\n# Build the usrsp-app\nWORKDIR /root/go/src/\nRUN go get github.com/intel/userspace-cni-network-plugin > /tmp/UserspaceDockerBuild.log 2>&1 || echo \"Can ignore no GO files.\"\nWORKDIR /root/go/src/github.com/intel/userspace-cni-network-plugin\nRUN make extras\nRUN cp docker/usrsp-app/usrsp-app /usr/sbin/usrsp-app\n\n\n# -------- Import stage.\n# Docker 17.05 or higher, remove ##\n##FROM centos\n\n# Install UserSpace CNI\n##COPY --from=0 /usr/sbin/usrsp-app /usr/sbin/usrsp-app\n\n\n# Install VPP\n##RUN curl -s https://packagecloud.io/install/repositories/fdio/release/script.rpm.sh | bash\n##RUN yum install -y epel-release\n##RUN yum install -y vpp-plugins vpp-devel vpp-api-python vpp-api-lua; yum clean all\n\n# Overwrite VPP systemfiles\nCOPY startup.conf /etc/vpp/startup.conf\nCOPY 80-vpp.conf /etc/sysctl.d/80-vpp.conf\n\n\n# Install script to start both VPP and usrsp-app\nCOPY vppcni.sh vppcni.sh\n\n\n# Setup VPP UserGroup and User\n#RUN useradd --no-log-init -r -g vpp vpp\n#USER vpp\n\n\n# For Development, overwrite repo generated usrsp-app with local development binary.\n# Needs to be commented out before each merge.\n#COPY usrsp-app /usr/sbin/usrsp-app\n\n\nCMD [\"bash\", \"-C\", \"./vppcni.sh\"]\n#CMD [ \"./vppcni.sh\" ]\n"
}