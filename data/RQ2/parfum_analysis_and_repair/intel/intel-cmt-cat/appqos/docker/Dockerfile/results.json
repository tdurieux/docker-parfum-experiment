{
  "startTime": 1674249707240,
  "endTime": 1674249709045,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 24,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 47,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 24,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 47,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 12
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 24,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 47,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 12
      }
    }
  ],
  "repairedDockerfile": "################################################################################\n#       Base                                                                   #\n################################################################################\nFROM ubuntu:22.04 AS base\nENV DEBIAN_FRONTEND noninteractive\n\n# update base image\nRUN apt-get update -q && \\\n    apt-get upgrade -y --no-install-recommends && \\\n    apt-get install -y --no-install-recommends \\\n        python3-minimal \\\n        libpython3-stdlib && \\\n    apt-get clean && rm -rf /var/lib/apt/lists/*;\n\n# copy all intel-cmt-cat sources\nCOPY . /appqos_workspace\n\n################################################################################\n#       Build libpqos                                                          #\n################################################################################\nFROM base AS build-libpqos\nENV DEBIAN_FRONTEND noninteractive\n\n# install libpqos dependencies\nRUN apt-get install -y --no-install-recommends \\\n        make \\\n        gcc \\\n        libc-dev && \\\n    apt-get clean && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /appqos_workspace\nRUN make && make install\n\n################################################################################\n#       Prepare python environment                                             #\n################################################################################\nFROM base AS build-python\nENV DEBIAN_FRONTEND noninteractive\n\n# python click dependency requires UTF charsets to be used\nARG LANG=C.UTF-8\nARG LC_ALL=C.UTF-8\nENV LANG=C.UTF-8\nENV LC_ALL=C.UTF-8\nENV WORKON_HOME=/venv/\n\n# install dependencies\nRUN apt-get install -y --no-install-recommends \\\n        python3-pip \\\n        git \\\n        make && \\\n    apt-get clean && \\\n    pip3 install --no-cache-dir pipenv && rm -rf /var/lib/apt/lists/*;\n\nRUN mkdir -p /python && \\\n    PYTHONUSERBASE=/python PIP_USER=1 PIPENV_SYSTEM=1 VENV_DIR=/venv/ make -C /appqos_workspace/appqos setup\n\n################################################################################\n#       Final image                                                            #\n################################################################################\nFROM base\nENV DEBIAN_FRONTEND noninteractive\n\n# python click dependency requires UTF charsets to be used\nARG LANG=C.UTF-8\nARG LC_ALL=C.UTF-8\nENV LANG=C.UTF-8\nENV LC_ALL=C.UTF-8\nENV PYTHONUSERBASE=/python\nENV APPQOS_PORT=5000\nENV APPQOS_CONF_PATH=ca/appqos.conf\nENV APPQOS_ADDRESS=0.0.0.0\n\n# copy libpqos\nCOPY --from=build-libpqos /usr/local/lib/libpqos.so* /lib/\n\n# copy App QoS dependencies\nCOPY --from=build-python /python /python\n\n# cleanup base packages\nRUN apt-get -y purge --auto-remove \\\n        dirmngr \\\n        gpg-agent \\\n        libc-dev \\\n        libc-dev-bin && \\\n    apt-get -y purge --auto-remove --allow-remove-essential \\\n        grep \\\n        libpcre3 && \\\n    dpkg --force-depends -r libsqlite3-0 && \\\n    dpkg --force-depends -r libdb5.3 && \\\n    rm -rf /usr/bin/iconv && \\\n    rm -rf /usr/bin/nscd && \\\n    rm -rf /usr/sbin/chroot && \\\n    rm -rf /var/lib/apt/lists/*\n\nWORKDIR /appqos_workspace/appqos\nCMD ./appqos.py -c ${APPQOS_CONF_PATH} --port ${APPQOS_PORT}\n"
}