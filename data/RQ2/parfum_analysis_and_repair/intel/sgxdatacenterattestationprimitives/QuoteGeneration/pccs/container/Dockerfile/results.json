{
  "startTime": 1674215767641,
  "endTime": 1674215769323,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 85
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 85
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:20.04 AS builder\n\n# DCAP version (github repo branch, tag or commit hash)\nARG DCAP_VERSION=DCAP_1.14\n\n# update and install packages\nRUN DEBIAN_FRONTEND=noninteractive \\\n    apt-get update -yq && \\\n    apt-get upgrade -yq && \\\n    apt-get install -yq --no-install-recommends \\\n            build-essential \\\n            ca-certificates \\\n            curl \\\n            git \\\n            zip && rm -rf /var/lib/apt/lists/*;\n\n# install node.js\nRUN curl -f -sL https://deb.nodesource.com/setup_16.x | bash -\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -yq --no-install-recommends nodejs && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get clean && rm -rf /var/lib/apt/lists/*\n\n# clone DCAP repo\nRUN git clone https://github.com/intel/SGXDataCenterAttestationPrimitives.git -b ${DCAP_VERSION} --depth 1\n\n# set PWD to PCKCertSelection dir\nWORKDIR /SGXDataCenterAttestationPrimitives/tools/PCKCertSelection/\n\n# build libPCKCertSelection library and copy to lib folder\nRUN make && \\\n    mkdir -p ../../QuoteGeneration/pccs/lib && \\\n    cp ./out/libPCKCertSelection.so ../../QuoteGeneration/pccs/lib/ && \\\n    make clean\n\n# set PWD to PCCS dir\nWORKDIR /SGXDataCenterAttestationPrimitives/QuoteGeneration/pccs/\n\n# build pccs\nRUN npm config set proxy $http_proxy && \\\n    npm config set http-proxy $http_proxy && \\\n    npm config set https-proxy $https_proxy && \\\n    npm config set engine-strict true && \\\n    npm install && npm cache clean --force;\n\n# build final image\nFROM ubuntu:20.04\n\nARG USER=pccs\nARG UID=65333\n\n# create user and a group\nRUN useradd -M -U ${USER} --uid=${UID} -s /bin/false\n\nCOPY --from=builder /usr/bin/node /usr/bin/node\nCOPY --from=builder --chown=${USER}:${USER} /SGXDataCenterAttestationPrimitives/QuoteGeneration/pccs/ /opt/intel/pccs/\n\nWORKDIR /opt/intel/pccs/\nUSER ${USER}\n\n# entrypoint to start pccs\nENTRYPOINT [\"/usr/bin/node\",  \"-r\", \"esm\", \"pccs_server.js\"]\n"
}