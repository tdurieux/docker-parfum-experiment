{
  "startTime": 1674217651397,
  "endTime": 1674217653032,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 51,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 57,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 26
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:20.04 as builder\n\nARG QATLIB_VERSION=\"21.11.0\"\nARG QAT_ENGINE_VERSION=\"v0.6.12\"\nARG ASYNC_NGINX_VERSION=\"v0.4.7\"\nARG IPSEC_MB_VERSION=\"v1.2\"\nARG IPP_CRYPTO_VERSION=\"ippcp_2021.5\"\n\nRUN apt update && \\\n    env DEBIAN_FRONTEND=noninteractive apt install -y \\\n    libudev-dev \\\n    make \\\n    gcc \\\n    g++ \\\n    nasm \\\n    pkg-config \\\n    libssl-dev \\\n    zlib1g-dev \\\n    wget \\\n    git \\\n    yasm \\\n    autoconf \\\n    cmake \\\n    libtool && \\\n    git clone --depth 1 -b $ASYNC_NGINX_VERSION https://github.com/intel/asynch_mode_nginx.git && \\\n    git clone --depth 1 -b $QAT_ENGINE_VERSION https://github.com/intel/QAT_Engine && \\\n    git clone --depth 1 -b $IPP_CRYPTO_VERSION https://github.com/intel/ipp-crypto && \\\n    git clone --depth 1 -b $IPSEC_MB_VERSION https://github.com/intel/intel-ipsec-mb && \\\n    git clone --depth 1 -b $QATLIB_VERSION https://github.com/intel/qatlib\n\nRUN cd /qatlib && \\\n    sed -i -e '79,87d' configure.ac && \\\n    ./autogen.sh && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr && \\\n    make -j && \\\n    make install samples-install\n\nRUN cd /ipp-crypto/sources/ippcp/crypto_mb && \\\n    cmake . -B\"../build\" \\\n    -DOPENSSL_INCLUDE_DIR=/usr/include/openssl \\\n    -DOPENSSL_LIBRARIES=/usr/lib64 \\\n    -DOPENSSL_ROOT_DIR=/usr/bin/openssl && \\\n    cd ../build && \\\n    make crypto_mb && make install\n\nRUN cd /intel-ipsec-mb && \\\n    make && make install LIB_INSTALL_DIR=/usr/lib64\n\nRUN cd /QAT_Engine && \\\n    sed -i -e '258,258 {s/ -a.*//}' configure.ac && \\\n    ./autogen.sh && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n    --enable-qat_sw \\\n    --with-qat_sw_install_dir=/usr/local && \\\n    make && make install\n\nRUN cd /asynch_mode_nginx && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n    --prefix=/var/www \\\n    --conf-path=/usr/share/nginx/conf/nginx.conf \\\n    --sbin-path=/usr/bin/nginx \\\n    --pid-path=/run/nginx.pid \\\n    --lock-path=/run/lock/nginx.lock \\\n    --modules-path=/usr/lib64/nginx \\\n    --without-http_rewrite_module \\\n    --with-http_ssl_module \\\n    --add-dynamic-module=modules/nginx_qat_module/ \\\n    --with-cc-opt=\"-DNGX_SECURE_MEM -I/include -Wno-error=deprecated-declarations\" \\\n    --with-ld-opt=\"-L/src\" && \\\n    make && make install\n\nFROM ubuntu:20.04\n\nCOPY --from=builder /usr/bin/*_sample* /usr/bin/\nCOPY --from=builder /usr/lib/libqat.so.2.0.0 /usr/lib/\nCOPY --from=builder /usr/lib/libusdm.so.0.0.1 /usr/lib/\nCOPY --from=builder /usr/lib64/libIPSec_MB.so.1 /usr/lib/x86_64-linux-gnu/\nCOPY --from=builder /usr/local/lib/libcrypto_mb.so.11.3 /usr/lib/x86_64-linux-gnu/\nCOPY --from=builder /usr/lib/x86_64-linux-gnu/engines-1.1/qatengine.so /usr/lib/x86_64-linux-gnu/engines-1.1/qatengine.so\nCOPY --from=builder /var/www/ /var/www/\nCOPY --from=builder /usr/lib64/nginx/* /usr/lib64/nginx/\nCOPY --from=builder /usr/bin/nginx /usr/bin\nCOPY --from=builder /usr/share/nginx/conf/* /usr/share/nginx/conf/\nCOPY --from=builder /qatlib/LICENSE /usr/share/package-licenses/qatlib/LICENSE\nCOPY --from=builder /QAT_Engine/LICENSE /usr/share/package-licenses/QAT_Engine/LICENSE\nCOPY --from=builder /ipp-crypto/LICENSE /usr/share/package-licenses/ipp-crypto/LICENSE\nCOPY --from=builder /asynch_mode_nginx/LICENSE /usr/share/package-licenses/asynch_mode_nginx/LICENSE\nCOPY --from=builder /intel-ipsec-mb/LICENSE /usr/share/package-licenses/intel-ipsec-mb/LICENSE\nRUN ldconfig && apt update && env DEBIAN_FRONTEND=noninteractive apt install -y openssl haproxy\n"
}