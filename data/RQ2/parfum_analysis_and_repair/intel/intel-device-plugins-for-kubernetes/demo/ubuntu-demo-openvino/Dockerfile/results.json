{
  "startTime": 1674252604803,
  "endTime": 1674252605423,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 83
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 28
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 28
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:18.04 as builder\nARG INSTALL_DIR=/opt/intel/openvino\nARG VERSION=2020.2.130\nRUN apt update\nRUN apt install --no-install-recommends -y gnupg2 curl sudo && rm -rf /var/lib/apt/lists/*;\nRUN curl -f https://apt.repos.intel.com/openvino/2020/GPG-PUB-KEY-INTEL-OPENVINO-2020 | apt-key add -\nRUN echo 'deb https://apt.repos.intel.com/openvino/2020 all main' > /etc/apt/sources.list.d/intel-openvino.list\nRUN apt update \nRUN apt install -y --no-install-recommends \\\n\tintel-openvino-ie-rt-hddl-ubuntu-bionic-$VERSION \\\n\tintel-openvino-ie-samples-$VERSION \\\n\tintel-openvino-setupvars-$VERSION \\\n\tintel-openvino-omz-dev-$VERSION \\\n\tintel-openvino-omz-tools-$VERSION \\\n\tintel-openvino-model-optimizer-$VERSION \\\n\tintel-openvino-ie-rt-cpu-ubuntu-bionic-$VERSION \\\n\tintel-openvino-opencv-etc-$VERSION \\\n\tintel-openvino-opencv-generic-$VERSION \\\n\tintel-openvino-opencv-lib-ubuntu-bionic-$VERSION \\\n\tintel-openvino-pot-$VERSION && rm -rf /var/lib/apt/lists/*;\n\nRUN $INSTALL_DIR/install_dependencies/install_openvino_dependencies.sh\n# build Inference Engine samples\nRUN $INSTALL_DIR/deployment_tools/inference_engine/samples/cpp/build_samples.sh\nRUN $INSTALL_DIR/deployment_tools/demo/demo_squeezenet_download_convert_run.sh\nRUN  cp /opt/intel/openvino/deployment_tools/demo/car.png /root && \\\n     cp /opt/intel/openvino/deployment_tools/inference_engine/lib/intel64/plugins.xml /root/inference_engine_samples_build/intel64/Release/lib/ && \\\n     cp /opt/intel/openvino/deployment_tools/inference_engine/lib/intel64/libHDDLPlugin.so /root/inference_engine_samples_build/intel64/Release/lib/ && \\\n     cp /lib/x86_64-linux-gnu/libusb-1.0.so.0 /root/inference_engine_samples_build/intel64/Release/lib/ && \\\n     cp -r /opt/intel/openvino/deployment_tools/inference_engine/external/hddl /root && \\\n     /bin/bash -c \"source /opt/intel/openvino/bin/setupvars.sh && \\\n     ldd /root/inference_engine_samples_build/intel64/Release/classification_sample_async\" | grep opt | awk '{print $3}' | xargs -Iaaa cp aaa /root/inference_engine_samples_build/intel64/Release/lib/ && \\\n     /bin/bash -c \"source /opt/intel/openvino/bin/setupvars.sh && \\\n     ldd /opt/intel/openvino/deployment_tools/inference_engine/lib/intel64/libHDDLPlugin.so\" | grep opt | awk '{print $3}' | xargs -Iaaa cp aaa /root/inference_engine_samples_build/intel64/Release/lib/\n\nFROM ubuntu:18.04\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n    libjson-c3 \\\n    libboost-filesystem1.65 \\\n    libboost-thread1.65 && \\\n    apt-get clean && rm -rf /var/lib/apt/lists/*\n\nCOPY do_classification.sh /\nCOPY --from=builder /root/ /root/\n"
}