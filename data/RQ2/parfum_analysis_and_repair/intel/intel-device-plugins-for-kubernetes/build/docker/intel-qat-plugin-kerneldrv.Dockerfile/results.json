{
  "startTime": 1674253928478,
  "endTime": 1674253929187,
  "originalSmells": [
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 130,
        "columnEnd": 199
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 207,
        "columnEnd": 222
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 200,
        "columnEnd": 215
      }
    }
  ],
  "repairedDockerfile": "## This is a generated file, do not edit directly. Edit build/docker/templates/intel-qat-plugin-kerneldrv.Dockerfile.in instead.\n##\n## Copyright 2022 Intel Corporation. All Rights Reserved.\n##\n## Licensed under the Apache License, Version 2.0 (the \"License\");\n## you may not use this file except in compliance with the License.\n## You may obtain a copy of the License at\n##\n## http://www.apache.org/licenses/LICENSE-2.0\n##\n## Unless required by applicable law or agreed to in writing, software\n## distributed under the License is distributed on an \"AS IS\" BASIS,\n## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n## See the License for the specific language governing permissions and\n## limitations under the License.\n###\n## FINAL_BASE can be used to configure the base image of the final image.\n##\n## This is used in two ways:\n## 1) make <image-name> BUILDER=<docker|buildah>\n## 2) docker build ... -f <image-name>.Dockerfile\n##\n## The project default is 1) which sets FINAL_BASE=gcr.io/distroless/static\n## (see build-image.sh).\n## 2) and the default FINAL_BASE is primarily used to build Redhat Certified Openshift Operator container images that must be UBI based.\n## The RedHat build tool does not allow additional image build parameters.\nARG FINAL_BASE=registry.access.redhat.com/ubi8-micro\n###\n##\n## GOLANG_BASE can be used to make the build reproducible by choosing an\n## image by its hash:\n## GOLANG_BASE=golang@sha256:9d64369fd3c633df71d7465d67d43f63bb31192193e671742fa1c26ebc3a6210\n##\n## This is used on release branches before tagging a stable version.\n## The main branch defaults to using the latest Golang base image.\nARG GOLANG_BASE=golang:1.18-bullseye\n###\nFROM ${GOLANG_BASE} as builder\nARG DIR=/intel-device-plugins-for-kubernetes\nARG GO111MODULE=on\nARG BUILDFLAGS=\"-ldflags=-w -s\"\nARG GOLICENSES_VERSION\nARG EP=/usr/local/bin/intel_sgx_device_plugin\nARG CMD=qat_plugin\nWORKDIR $DIR\nCOPY . .\nARG QAT_DRIVER_RELEASE=\"qat1.7.l.4.14.0-00031\"\nARG QAT_DRIVER_SHA256=\"a68dfaea4308e0bb5f350b7528f1a076a0c6ba3ec577d60d99dc42c49307b76e\"\nRUN mkdir -p /usr/src/qat && cd /usr/src/qat && wget https://downloadmirror.intel.com/30178/eng/$QAT_DRIVER_RELEASE.tar.gz && echo \"$QAT_DRIVER_SHA256  $QAT_DRIVER_RELEASE.tar.gz\" | sha256sum -c - && tar xf *.tar.gz && cd /usr/src/qat/quickassist/utilities/adf_ctl && make KERNEL_SOURCE_DIR=/usr/src/qat/quickassist/qat && install -D adf_ctl /install_root/usr/local/bin/adf_ctl && rm -rf /usr/src/qat\nRUN cd cmd/$CMD; GO111MODULE=${GO111MODULE} CGO_ENABLED=1 go install -tags kerneldrv; cd -\nRUN chmod a+x /go/bin/$CMD && install -D /go/bin/$CMD /install_root/usr/local/bin/intel_qat_device_plugin\nRUN install -D ${DIR}/LICENSE /install_root/licenses/intel-device-plugins-for-kubernetes/LICENSE \\\n    && if [ ! -d \"licenses/$CMD\" ] ; then \\\n    GO111MODULE=on go run github.com/google/go-licenses@${GOLICENSES_VERSION} save \"./cmd/$CMD\" \\\n    --save_path /install_root/licenses/$CMD/go-licenses ; \\\n    else mkdir -p /install_root/licenses/$CMD/go-licenses/ && cd licenses/$CMD && cp -r * /install_root/licenses/$CMD/go-licenses/ ; fi\nFROM debian:unstable-slim\nLABEL vendor='Intel®'\nLABEL version='devel'\nLABEL release='1'\nLABEL name='intel-qat-plugin-kerneldrv'\nLABEL summary='Intel® QAT device plugin kerneldrv for Kubernetes'\nCOPY --from=builder /install_root /\nENV PATH=/usr/local/bin\nENTRYPOINT [\"/usr/local/bin/intel_qat_device_plugin\"]\n"
}