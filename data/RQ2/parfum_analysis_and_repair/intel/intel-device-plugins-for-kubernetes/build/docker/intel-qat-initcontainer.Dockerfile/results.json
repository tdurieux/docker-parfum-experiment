{
  "startTime": 1674246205477,
  "endTime": 1674246206134,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 104
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 7,
        "columnEnd": 59
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 18,
        "columnEnd": 57
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 18,
        "columnEnd": 57
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "## This is a generated file, do not edit directly. Edit build/docker/templates/intel-qat-initcontainer.Dockerfile.in instead.\n##\n## Copyright 2022 Intel Corporation. All Rights Reserved.\n##\n## Licensed under the Apache License, Version 2.0 (the \"License\");\n## you may not use this file except in compliance with the License.\n## You may obtain a copy of the License at\n##\n## http://www.apache.org/licenses/LICENSE-2.0\n##\n## Unless required by applicable law or agreed to in writing, software\n## distributed under the License is distributed on an \"AS IS\" BASIS,\n## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n## See the License for the specific language governing permissions and\n## limitations under the License.\n###\n## FINAL_BASE can be used to configure the base image of the final image.\n##\n## This is used in two ways:\n## 1) make <image-name> BUILDER=<docker|buildah>\n## 2) docker build ... -f <image-name>.Dockerfile\n##\n## The project default is 1) which sets FINAL_BASE=gcr.io/distroless/static\n## (see build-image.sh).\n## 2) and the default FINAL_BASE is primarily used to build Redhat Certified Openshift Operator container images that must be UBI based.\n## The RedHat build tool does not allow additional image build parameters.\nARG FINAL_BASE=registry.access.redhat.com/ubi8-micro\n###\n##\n## GOLANG_BASE can be used to make the build reproducible by choosing an\n## image by its hash:\n## GOLANG_BASE=golang@sha256:9d64369fd3c633df71d7465d67d43f63bb31192193e671742fa1c26ebc3a6210\n##\n## This is used on release branches before tagging a stable version.\n## The main branch defaults to using the latest Golang base image.\nARG GOLANG_BASE=golang:1.18-bullseye\n###\nFROM ${GOLANG_BASE} as builder\nARG DIR=/intel-device-plugins-for-kubernetes\nWORKDIR $DIR\nCOPY . .\nARG TOYBOX_VERSION=\"0.8.7\"\nARG TOYBOX_SHA256=\"b6f43d5738df54623ed21c32f430d1d5c5ac7ef465a6a883890f104b59d5d9e4\"\nARG ROOT=/install_root\nRUN apt update && apt -y --no-install-recommends install musl musl-tools musl-dev && rm -rf /var/lib/apt/lists/*;\nRUN curl -f -SL https://github.com/landley/toybox/archive/refs/tags/$TOYBOX_VERSION.tar.gz -o toybox.tar.gz \\\n    && echo \"$TOYBOX_SHA256  toybox.tar.gz\" | sha256sum -c - \\\n    && tar -xzf toybox.tar.gz \\\n    && rm toybox.tar.gz \\\n    && cd toybox-$TOYBOX_VERSION \\\n    && KCONFIG_CONFIG=${DIR}/build/docker/toybox-config LDFLAGS=\"--static\" CC=musl-gcc PREFIX=$ROOT V=2 make toybox install \\\n    && install -D LICENSE $ROOT/licenses/toybox \\\n    && cp -r /usr/share/doc/musl $ROOT/licenses/\n###\nFROM ${FINAL_BASE}\nLABEL vendor='Intel®'\nLABEL version='devel'\nLABEL release='1'\nLABEL name='intel-qat-initcontainer'\nLABEL summary='Intel® QAT initcontainer for Kubernetes'\nLABEL description='Intel QAT initcontainer initializes devices'\nCOPY --from=builder /install_root /\nADD demo/qat-init.sh /usr/local/bin/\nENTRYPOINT /usr/local/bin/qat-init.sh\n"
}