{
  "startTime": 1674251487693,
  "endTime": 1674251489240,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 115,
        "lineEnd": 115,
        "columnStart": 4,
        "columnEnd": 71
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 98,
        "lineEnd": 98,
        "columnStart": 5,
        "columnEnd": 65
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 146,
        "lineEnd": 146,
        "columnStart": 5,
        "columnEnd": 34
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 25,
        "lineEnd": 35,
        "columnStart": 5,
        "columnEnd": 9
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 43,
        "lineEnd": 62,
        "columnStart": 5,
        "columnEnd": 50
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 83,
        "lineEnd": 88,
        "columnStart": 5,
        "columnEnd": 12
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright 2021 Intel Corporation. All Rights Reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# Build the manager binary\nFROM ubuntu:focal as builder\n\nARG GO_VERSION=\"1.17.1\"\nARG SDK_VERSION=\"2.15.100.3\"\nARG SGX_SDK_INSTALLER=sgx_linux_x64_sdk_${SDK_VERSION}.bin\nARG DCAP_VERSION=\"1.12.100.3\"\nENV DEBIAN_FRONTEND=noninteractive\n# SGX prerequisites\n# hadolint ignore=DL3005,DL3008\nRUN apt-get update \\\n  && apt-get install --no-install-recommends -y \\\n    ca-certificates \\\n    curl \\\n    linux-tools-generic \\\n    wget \\\n    unzip \\\n    protobuf-compiler \\\n    libprotobuf-dev \\\n    build-essential \\\n    git \\\n    gnupg \\\n  && update-ca-certificates \\\n# Add 01.org to apt for SGX packages\n# hadolint ignore=DL4006\n  && echo \"deb [arch=amd64] https://download.01.org/intel-sgx/sgx_repo/ubuntu focal main\" >> /etc/apt/sources.list.d/intel-sgx.list \\\n  && wget -qO - https://download.01.org/intel-sgx/sgx_repo/ubuntu/intel-sgx-deb.key | apt-key add - \\\n# Install SGX PSW\n  && apt-get update \\\n  && apt-get install --no-install-recommends -y \\\n    libsgx-enclave-common=${SDK_VERSION}-focal1 \\\n    libsgx-launch=${SDK_VERSION}-focal1 \\\n    libsgx-launch-dev=${SDK_VERSION}-focal1 \\\n    libsgx-epid=${SDK_VERSION}-focal1 \\\n    libsgx-epid-dev=${SDK_VERSION}-focal1 \\\n    libsgx-quote-ex=${SDK_VERSION}-focal1 \\\n    libsgx-quote-ex-dev=${SDK_VERSION}-focal1 \\\n    libsgx-urts=${SDK_VERSION}-focal1 \\\n    libsgx-uae-service=${SDK_VERSION}-focal1 \\\n    libsgx-ae-epid=${SDK_VERSION}-focal1 \\\n    libsgx-ae-le=${SDK_VERSION}-focal1 \\\n    libsgx-ae-pce=${SDK_VERSION}-focal1 \\\n    libsgx-ae-qe3=${DCAP_VERSION}-focal1 \\\n    libsgx-ae-qve=${DCAP_VERSION}-focal1 \\\n    libsgx-dcap-ql=${DCAP_VERSION}-focal1 \\\n    libsgx-dcap-ql-dev=${DCAP_VERSION}-focal1 \\\n    libsgx-pce-logic=${DCAP_VERSION}-focal1 \\\n    libsgx-qe3-logic=${DCAP_VERSION}-focal1 \\\n    libsgx-dcap-default-qpl=${DCAP_VERSION}-focal1 \\\n  && apt-get clean \\\n  && ln -s /usr/lib/x86_64-linux-gnu/libsgx_enclave_common.so.1 /usr/lib/x86_64-linux-gnu/libsgx_enclave_common.so && rm -rf /var/lib/apt/lists/*;\n\n# SGX SDK is installed in /opt/intel directory.\nWORKDIR /opt/intel\n\n# Install SGX SDK\n# hadolint ignore=DL4006\nRUN wget https://download.01.org/intel-sgx/sgx-linux/2.15/distro/ubuntu20.04-server/$SGX_SDK_INSTALLER \\\n  && chmod +x  $SGX_SDK_INSTALLER \\\n  && echo \"yes\" | ./$SGX_SDK_INSTALLER \\\n  && rm $SGX_SDK_INSTALLER \\\n  && ls -l /opt/intel/\n\n# Tag/commit-id/branch to use for bulding CTK\nARG CTK_TAG=\"master\"\n\n# Intel crypto-api-toolkit prerequisites\n#https://github.com/intel/crypto-api-toolkit#software-requirements\nRUN set -x && apt-get update \\\n  && apt-get install --no-install-recommends -y \\\n    dkms libprotobuf17 autoconf \\\n    autotools-dev libc6-dev \\\n    libtool build-essential \\\n    opensc sudo \\\n    automake \\\n  && apt-get clean \\\n  && git clone https://github.com/intel/crypto-api-toolkit.git \\\n  && cd /opt/intel/crypto-api-toolkit \\\n  && git checkout ${CTK_TAG} -b v${CTK_TAG} \\\n  # disable building tests\n  && sed -i -e 's;test;;g' ./src/Makefile.am \\\n  # disable enclave signing inside CTK\n  && sed -i -e '/libp11SgxEnclave.signed.so/d' ./src/p11/trusted/Makefile.am \\\n  && ./autogen.sh \\\n  && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-dcap --with-token-path=/home/tcs-issuer \\\n  && make && make install && rm -rf /var/lib/apt/lists/*;\n\n# Sign the enclave with custom config.\nCOPY enclave-config enclave-config\nENV SGX_SIGN=/opt/intel/sgxsdk/bin/x64/sgx_sign\nRUN set -x; cd /opt/intel/crypto-api-toolkit/src/p11/trusted \\\n  && ${SGX_SIGN} gendata -enclave ./.libs/libp11SgxEnclave.so.0.0.0 -out /tmp/libp11SgxEnclave.unsigned -config /opt/intel/enclave-config/p11Enclave.config.xml \\\n  && /opt/intel/enclave-config/sign-enclave.sh -in /tmp/libp11SgxEnclave.unsigned -out /tmp/libp11SgxEnclave.signature -keyout /opt/intel/enclave-config/enclave-publickey.pem \\\n  && ${SGX_SIGN} catsig -enclave ./.libs/libp11SgxEnclave.so.0.0.0 \\\n                 -config /opt/intel/enclave-config/p11Enclave.config.xml \\\n                 -sig /tmp/libp11SgxEnclave.signature -key /opt/intel/enclave-config/enclave-publickey.pem \\\n                 -unsigned /tmp/libp11SgxEnclave.unsigned \\\n                 -out /usr/local/lib/libp11SgxEnclave.signed.so \\\n  && echo \"----- Generated signed enclave! ----\"\n\nWORKDIR /workspace\nRUN curl -f -L https://dl.google.com/go/go${GO_VERSION}.linux-amd64.tar.gz | tar -zxf - -C / \\\n  && mkdir -p /usr/local/bin/ \\\n  && for i in /go/bin/*; do ln -s $i /usr/local/bin/; done\n\n# Copy the Go Modules manifests\nCOPY go.mod go.mod\nCOPY go.sum go.sum\n# Copy the go sources\nCOPY main.go main.go\nCOPY internal/ internal/\nCOPY controllers/ controllers/\nCOPY api/ api/\nCOPY vendor/ vendor/\nCOPY LICENSE LICENSE\n\nRUN CGO_ENABLED=1 CGO_LDFLAGS=\"-L/usr/local/lib\" GOOS=linux GOARCH=amd64 GO111MODULE=on go build -a -o /manager main.go\nRUN mkdir -p /usr/local/share/package-licenses \\\n  && cp /go/LICENSE /usr/local/share/package-licenses/go.LICENSE \\\n  && cp LICENSE /usr/local/share/package-licenses/tcs-issuer.LICENSE \\\n  && cp /opt/intel/crypto-api-toolkit/LICENSE.md /usr/local/share/package-licenses/crypto-api-toolkit.LICENSE\n\n###\n# Clean runtime image which supposed to\n# contain all runtime dependecy packages\n###\nFROM ubuntu:focal as runtime\n\nARG SDK_VERSION=\"2.15.100.3\"\nARG DCAP_VERSION=\"1.12.100.3\"\n\nRUN apt-get update \\\n  && apt-get install --no-install-recommends -y wget gnupg \\\n  && echo \"deb [arch=amd64] https://download.01.org/intel-sgx/sgx_repo/ubuntu focal main\" >> /etc/apt/sources.list.d/intel-sgx.list \\\n  && wget -qO - https://download.01.org/intel-sgx/sgx_repo/ubuntu/intel-sgx-deb.key | apt-key add - \\\n  && sed -i '/deb-src/s/^# //' /etc/apt/sources.list \\\n  && apt-get update \\\n  && apt-get remove -y wget gnupg && apt-get autoremove -y \\\n  && bash -c 'set -o pipefail; apt-get install --no-install-recommends -y \\\n    libprotobuf17 \\\n    libsgx-enclave-common=${SDK_VERSION}-focal1 \\\n    libsgx-epid=${SDK_VERSION}-focal1 \\\n    libsgx-quote-ex=${SDK_VERSION}-focal1 \\\n    libsgx-urts=${SDK_VERSION}-focal1 \\\n    libsgx-ae-epid=${SDK_VERSION}-focal1 \\\n    libsgx-ae-qe3=${DCAP_VERSION}-focal1 \\\n    libsgx-dcap-ql=${DCAP_VERSION}-focal1 \\\n    libsgx-pce-logic=${DCAP_VERSION}-focal1 \\\n    libsgx-qe3-logic=${DCAP_VERSION}-focal1 \\\n    libsgx-dcap-default-qpl=${DCAP_VERSION}-focal1 \\\n    libsofthsm2 \\\n    # required for pkcs11-tool\n    opensc | tee --append /usr/local/share/package-install.log' \\\n  && rm -rf /var/cache/* \\\n  && rm -rf  /var/log/*log /var/lib/apt/lists/* /var/log/apt/* /var/lib/dpkg/*-old /var/cache/debconf/*-old \\\n  && ln -s /usr/lib/x86_64-linux-gnu/libsgx_enclave_common.so.1 /usr/lib/x86_64-linux-gnu/libsgx_enclave_common.so\n\n###\n# Image that downloads the source packages for\n#  the runtime GPL packages.\n###\nFROM ubuntu:focal as sources\n\nCOPY --from=runtime /usr/local/share/package-install.log /usr/local/share/package-install.log\nCOPY --from=runtime /usr/share/doc /tmp/runtime-doc\n\nRUN sed -i '/deb-src/s/^# //' /etc/apt/sources.list \\\n  && apt-get update \\\n  # Install sources of GPL packages\n  && mkdir /usr/local/share/package-sources && cd /usr/local/share/package-sources \\\n  && grep ^Get: /usr/local/share/package-install.log | grep -v sgx | cut -d ' ' -f 5,7 | \\\n      while read pkg version; do \\\n       if ! [ -f /tmp/runtime-doc/$pkg/copyright ]; then \\\n           echo \"ERROR: missing copyright file for $pkg\"; \\\n       fi; \\\n       if matches=$(grep -w -e MPL -e GPL -e LGPL /tmp/runtime-doc/$pkg/copyright); then \\\n          echo \"INFO: downloading source of $pkg because of the following licenses:\"; \\\n          echo \"$matches\" | sed -e 's/^/    /'; \\\n          apt-get source --download-only $pkg=$version || exit 1; \\\n       else \\\n          echo \"INFO: not downloading source of $pkg, found no copyleft license\"; \\\n       fi; \\\n      done \\\n  && apt-get clean\n\n###\n# Final trusted-certificate-issuer Image\n###\nFROM runtime as final\n\nWORKDIR /\nRUN useradd --create-home --home-dir /home/tcs-issuer --shell /bin/bash --uid 5000 --user-group tcs-issuer\n\nCOPY --from=builder /manager /tcs-issuer\nCOPY --from=builder /usr/local/lib/libp11* /usr/local/lib/\nCOPY --from=builder /opt/intel/enclave-config/enclave-publickey.pem /usr/local/share/enclave-publickey.pem\nCOPY --from=builder /usr/local/share/package-licenses /usr/local/share/package-licenses\nCOPY --from=sources /usr/local/share/package-sources /usr/local/share/package-sources\n\nUSER 5000:5000\n\nENV LD_LIBRARY_PATH=\"/usr/local/lib\"\n\nENTRYPOINT [\"/tcs-issuer\"]\n"
}