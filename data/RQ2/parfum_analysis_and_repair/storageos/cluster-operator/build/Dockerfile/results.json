{
  "startTime": 1674248978346,
  "endTime": 1674248978871,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 35
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG BUILD_IMAGE=golang:1.15.2\nARG BASE_IMAGE=registry.access.redhat.com/ubi8/ubi-minimal\nARG OPERATOR_IMAGE=storageos/cluster-operator:test\n\nFROM ${BUILD_IMAGE} AS build\n# OPERATOR_IMAGE needs to be passed to operator make target for constructing\n# the ldflags.\nARG OPERATOR_IMAGE\nWORKDIR /go/src/github.com/storageos/cluster-operator/\nCOPY . /go/src/github.com/storageos/cluster-operator/\n# Temporarily clone code-gen because the new version of the vendored tools\n# expect it to be in the $GOPATH. Code generation will be removed for dynamic\n# client in the future.\nRUN git clone https://github.com/kubernetes/code-generator $GOPATH/src/k8s.io/code-generator/\nRUN make operator-sdk\nRUN make go-gen\nRUN make operator OPERATOR_IMAGE=$OPERATOR_IMAGE\n\nFROM ${BASE_IMAGE}\nLABEL name=\"StorageOS Cluster Operator\" \\\n    maintainer=\"support@storageos.com\" \\\n    vendor=\"StorageOS\" \\\n    version=\"v2.4.4\" \\\n    release=\"2\" \\\n    distribution-scope=\"public\" \\\n    architecture=\"x86_64\" \\\n    url=\"https://docs.storageos.com\" \\\n    io.k8s.description=\"The StorageOS Cluster Operator installs and manages StorageOS within a cluster.\" \\\n    io.k8s.display-name=\"StorageOS Cluster Operator\" \\\n    io.openshift.tags=\"storageos,storage,operator,pv,pvc,storageclass,persistent,csi\" \\\n    summary=\"Highly-available persistent block storage for containerized applications.\" \\\n    description=\"StorageOS transforms commodity server or cloud based disk capacity into enterprise-class storage to run persistent workloads such as databases in containers. Provides high availability, low latency persistent block storage. No other hardware or software is required.\"\n\n# Create a working directory that's writable by non-root users. This is needed\n# for writing the certificate generation.\nWORKDIR /home/operator\nRUN chmod -R g+rwX /home/operator\n\n# Docker is required by the upgrader to pre-load images.  Only `docker pull` is\n# used.  `podman` would be preferred but it's not available in the package repo,\n# and there isn't a binary release that we can easily download into the image.\nRUN microdnf update && \\\n    microdnf install gzip openssl tar wget\nRUN \\\n    wget --no-check-certificate -q https://download.docker.com/linux/static/stable/x86_64/docker-17.03.0-ce.tgz && \\\n    tar -xvzf docker-17.03.0-ce.tgz && \\\n    cp docker/docker /bin/ && \\\n    rm -rf docker* && \\\n    chmod +x /bin/docker && rm docker-17.03.0-ce.tgz\nRUN mkdir -p /licenses\nCOPY --from=build /go/src/github.com/storageos/cluster-operator/LICENSE /licenses/\nCOPY --from=build /go/src/github.com/storageos/cluster-operator/build/_output/bin/cluster-operator /usr/local/bin/cluster-operator\nCOPY --from=build /go/src/github.com/storageos/cluster-operator/build/_output/bin/upgrader /usr/local/bin/upgrader\nCOPY --from=build /go/src/github.com/storageos/cluster-operator/cmd/image-puller/docker-puller.sh /usr/local/bin/docker-puller.sh\n\n# Set a non-root default user.\nUSER 1001\n"
}