{
  "startTime": 1674255271274,
  "endTime": 1674255272170,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 90,
        "lineEnd": 90,
        "columnStart": 4,
        "columnEnd": 177
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 125,
        "lineEnd": 125,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 130,
        "lineEnd": 130,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 133,
        "lineEnd": 133,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 136,
        "lineEnd": 136,
        "columnStart": 4,
        "columnEnd": 59
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# ***** BEGIN LICENSE BLOCK *****\n#\n# Copyright (C) 2017-2019 Olof Hagsand\n# Copyright (C) 2020-2022 Olof Hagsand and Rubicon Communications, LLC(Netgate)\n#\n# This file is part of CLIXON\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n# Alternatively, the contents of this file may be used under the terms of\n# the GNU General Public License Version 3 or later (the \"GPL\"),\n# in which case the provisions of the GPL are applicable instead\n# of those above. If you wish to allow use of your version of this file only\n# under the terms of the GPL, and not to allow others to\n# use your version of this file under the terms of Apache License version 2,\n# indicate your decision by deleting the provisions above and replace them with\n# the notice and other provisions required by the GPL. If you do not delete\n# the provisions above, a recipient may use your version of this file under\n# the terms of any one of the Apache License version 2 or the GPL.\n#\n# ***** END LICENSE BLOCK *****\n#\n\nFROM alpine\nMAINTAINER Olof Hagsand <olof@hagsand.se>\n\n# For clixon and cligen\nRUN apk add --no-cache --update git make build-base gcc flex bison curl-dev\n\n# nghttp2 dependencies\nRUN apk add --no-cache --update nghttp2\n\n# Checkut models\nWORKDIR /usr/local/share/\n\n# Checkout standard YANG models for tests (note >1G for full repo)\nRUN mkdir yang\n\nWORKDIR /usr/local/share/yang\n\nRUN git config --global init.defaultBranch master\nRUN git init;\nRUN git remote add -f origin https://github.com/YangModels/yang;\nRUN git config core.sparseCheckout true\nRUN echo \"standard/\" >> .git/info/sparse-checkout\nRUN echo \"experimental/\" >> .git/info/sparse-checkout\n\nRUN git pull origin main\n\nRUN mkdir /usr/local/share/openconfig\nWORKDIR /usr/local/share/openconfig\n\n# Checkut Openconfig models for tests\nRUN git clone https://github.com/openconfig/public\n\n# Create a directory to hold source-code, dependencies etc\nRUN mkdir /clixon\n\nRUN mkdir /clixon/build\nWORKDIR /clixon\n\n# Clone cligen\nRUN git clone https://github.com/clicon/cligen.git\n\n# Build cligen\nWORKDIR /clixon/cligen\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/clixon/build\nRUN make\nRUN make install\n\n# Need to add www user manually\nRUN adduser -D -H -G www-data www-data\n\n# Copy Clixon from local dir\nRUN mkdir /clixon/clixon\nWORKDIR /clixon/clixon\nCOPY clixon .\n\n# Configure, build and install clixon\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/clixon/build --with-cligen=/clixon/build --with-restconf=native --enable-nghttp2 --enable-http1 --with-yang-standard-dir=/usr/local/share/yang/standard\n\nRUN make\nRUN make install\n\n# Install utils (for tests)\nWORKDIR /clixon/clixon/util\nRUN make\nRUN make install\n\n# Build and install the clixon example\nWORKDIR /clixon/clixon/example/main\nRUN make\nRUN make install\nRUN install example.xml /clixon/build/etc/clixon.xml\n\n# Copy tests (why not everything?)\nWORKDIR /clixon/clixon/test\nRUN install -d /clixon/build/bin/test\nRUN install *.sh /clixon/build/bin/test\nRUN install *.exp /clixon/build/bin/test\nRUN install clixon.png /clixon/build/bin/test\n\n# Copy startscript\nWORKDIR /clixon\nCOPY startsystem_native.sh startsystem.sh\nRUN install startsystem.sh /clixon/build/bin/\n\n#\n# Stage 2\n# The second step skips the development environment and builds a runtime system\nFROM alpine\nMAINTAINER Olof Hagsand <olof@hagsand.se>\n\n# For clixon and cligen\nRUN apk add --no-cache --update flex bison\n\n# need to add www user manually\nRUN adduser -D -H -G www-data www-data\n\nRUN apk add --no-cache --update openssl\n\n# nghttp2 dependencies\nRUN apk add --no-cache --update nghttp2\n\n# Test-specific (for test scripts)\nRUN apk add --no-cache --update sudo curl procps grep make bash expect\n\n# Expose https port for restconf\nEXPOSE 80/tcp\nEXPOSE 443/tcp\n\n# Create clicon user and group\nRUN adduser -D -H clicon\n\nCOPY --from=0 /clixon/build/ /usr/local/\nCOPY --from=0 /usr/local/share/yang/* /usr/local/share/yang/standard/\nCOPY --from=0 /usr/local/share/yang/* /usr/local/share/yang/experimental/\nCOPY --from=0 /usr/local/share/openconfig/* /usr/local/share/openconfig/\n\n# Start the backend and restconf deamons\nCMD /usr/local/bin/startsystem.sh\n"
}