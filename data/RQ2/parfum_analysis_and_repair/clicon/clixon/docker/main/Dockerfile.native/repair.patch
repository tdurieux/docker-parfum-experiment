diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/clicon/clixon/docker/main/Dockerfile.native b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/clicon/clixon/docker/main/Dockerfile.native/repaired.Dockerfile
index 228f9af..ae714a1 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/clicon/clixon/docker/main/Dockerfile.native
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/clicon/clixon/docker/main/Dockerfile.native/repaired.Dockerfile
@@ -1,6 +1,6 @@
 #
 # ***** BEGIN LICENSE BLOCK *****
-# 
+#
 # Copyright (C) 2017-2019 Olof Hagsand
 # Copyright (C) 2020-2022 Olof Hagsand and Rubicon Communications, LLC(Netgate)
 #
@@ -23,7 +23,7 @@
 # in which case the provisions of the GPL are applicable instead
 # of those above. If you wish to allow use of your version of this file only
 # under the terms of the GPL, and not to allow others to
-# use your version of this file under the terms of Apache License version 2, 
+# use your version of this file under the terms of Apache License version 2,
 # indicate your decision by deleting the provisions above and replace them with
 # the notice and other provisions required by the GPL. If you do not delete
 # the provisions above, a recipient may use your version of this file under
@@ -36,10 +36,10 @@ FROM alpine
 MAINTAINER Olof Hagsand <olof@hagsand.se>
 
 # For clixon and cligen
-RUN apk add --update git make build-base gcc flex bison curl-dev
+RUN apk add --no-cache --update git make build-base gcc flex bison curl-dev
 
 # nghttp2 dependencies
-RUN apk add --update nghttp2
+RUN apk add --no-cache --update nghttp2
 
 # Checkut models
 WORKDIR /usr/local/share/
@@ -75,7 +75,7 @@ RUN git clone https://github.com/clicon/cligen.git
 
 # Build cligen
 WORKDIR /clixon/cligen
-RUN ./configure --prefix=/clixon/build
+RUN ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/clixon/build
 RUN make
 RUN make install
 
@@ -88,7 +88,7 @@ WORKDIR /clixon/clixon
 COPY clixon .
 
 # Configure, build and install clixon
-RUN ./configure --prefix=/clixon/build --with-cligen=/clixon/build --with-restconf=native --enable-nghttp2 --enable-http1 --with-yang-standard-dir=/usr/local/share/yang/standard
+RUN ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/clixon/build --with-cligen=/clixon/build --with-restconf=native --enable-nghttp2 --enable-http1 --with-yang-standard-dir=/usr/local/share/yang/standard
 
 RUN make
 RUN make install
@@ -113,7 +113,7 @@ RUN install clixon.png /clixon/build/bin/test
 
 # Copy startscript
 WORKDIR /clixon
-COPY startsystem_native.sh startsystem.sh 
+COPY startsystem_native.sh startsystem.sh
 RUN install startsystem.sh /clixon/build/bin/
 
 #
@@ -123,18 +123,18 @@ FROM alpine
 MAINTAINER Olof Hagsand <olof@hagsand.se>
 
 # For clixon and cligen
-RUN apk add --update flex bison
+RUN apk add --no-cache --update flex bison
 
 # need to add www user manually
 RUN adduser -D -H -G www-data www-data
 
-RUN apk add --update openssl 
+RUN apk add --no-cache --update openssl
 
 # nghttp2 dependencies
-RUN apk add --update nghttp2
+RUN apk add --no-cache --update nghttp2
 
 # Test-specific (for test scripts)
-RUN apk add --update sudo curl procps grep make bash expect 
+RUN apk add --no-cache --update sudo curl procps grep make bash expect
 
 # Expose https port for restconf
 EXPOSE 80/tcp