{
  "startTime": 1674252501010,
  "endTime": 1674252502657,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 5,
        "columnEnd": 30
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 66
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 66
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 88
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 77
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 211
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Dockerfile to build an image able to compile flashlight for a variety of\n# platforms.\n#\n# > make docker\n\nFROM fedora:21\nMAINTAINER \"Jos√© Carlos Nieto\" <xiam@getlantern.org>\n\nENV GO_VERSION go1.4.2\nENV GOROOT_BOOTSTRAP /go1.4\nENV GOROOT /go\nENV GOPATH /\n\nENV PATH $PATH:$GOROOT/bin\nENV WORKDIR /flashlight-build\n\n# Go binary for bootstrapping.\nENV GO_PACKAGE_URL https://storage.googleapis.com/golang/go1.4.2.linux-amd64.tar.gz\n\n# Updating system.\nRUN yum -y update && yum clean all\n\n# Requisites for building Go.\nRUN yum install -y git tar gzip curl hostname pcre-devel mercurial && yum clean all && rm -rf /var/cache/yum\n\n# Compilers and tools for CGO.\nRUN yum install -y gcc gcc-c++ libgcc.i686 gcc-c++.i686 pkg-config && yum clean all && rm -rf /var/cache/yum\n\n# Getting Go.\nRUN ( curl -f -sSL $GO_PACKAGE_URL | tar -xvz -C /tmp) && \\\n  mv /tmp/go $GOROOT_BOOTSTRAP\n\n# Getting Go source.\nRUN mkdir -p $GOROOT && \\\n  git clone https://go.googlesource.com/go $GOROOT && \\\n  cd $GOROOT && \\\n  git checkout -b go1.4 origin/release-branch.go1.4\n\n# Bootstrapping Go.\nRUN cd $GOROOT/src && CGO_ENABLED=1 ./all.bash\n\n# Requisites for bootstrapping.\nRUN yum install -y glibc-devel glibc-static && yum clean all && rm -rf /var/cache/yum\nRUN yum install -y glibc-devel.i686 glib2-static.i686 glibc-2.20-8.fc21.i686 libgcc.i686 && yum clean all && rm -rf /var/cache/yum\n\n# Requisites for windows.\nRUN yum install -y mingw32-gcc.x86_64 && yum clean all && rm -rf /var/cache/yum\n\n# Boostrapping Go for different platforms.\nRUN cd $GOROOT/src && CGO_ENABLED=1 GOOS=linux GOARCH=amd64 ./make.bash --no-clean\nRUN cd $GOROOT/src && CGO_ENABLED=1 GOOS=linux GOARCH=386 ./make.bash --no-clean\nRUN cd $GOROOT/src && CXX_FOR_TARGET=i686-w64-mingw32-g++ CC_FOR_TARGET=i686-w64-mingw32-gcc CGO_ENABLED=1 GOOS=windows GOARCH=386 ./make.bash --no-clean\n\nRUN cd $GOROOT/src && GOARCH=386 ./make.bash --no-clean\n\n# Requisites for building Lantern on Linux.\nRUN yum install -y gtk3-devel libappindicator-gtk3 libappindicator-gtk3-devel && yum clean all && rm -rf /var/cache/yum\nRUN yum install -y pango.i686 pango-devel.i686 gtk3-devel.i686 gdk-pixbuf2-devel.i686 cairo-gobject-devel.i686 atk-devel.i686 libappindicator-gtk3-devel.i686 libdbusmenu-devel.i686 dbus-devel.i686 pkgconfig.i686 && yum clean all && rm -rf /var/cache/yum\n\n# Requisites for packing Lantern for Debian.\n# The fpm packer. (https://rubygems.org/gems/fpm)\nRUN yum install -y ruby ruby-devel make && yum clean all && rm -rf /var/cache/yum\nRUN gem install fpm\n\n# Requisites for packing Lantern for Windows.\nRUN yum install -y osslsigncode mingw32-nsis && yum clean all && rm -rf /var/cache/yum\n\n# Requisites for genassets.\nRUN yum install -y nodejs npm && yum clean all && rm -rf /var/cache/yum\nRUN npm install -g gulp && npm cache clean --force;\n\n# Expect the $WORKDIR volume to be mounted.\nENV SECRETS /secrets\n\nRUN mkdir -p $WORKDIR\nRUN mkdir -p $SECRETS\n\nVOLUME [ \"$WORKDIR\" ]\n\nWORKDIR $WORKDIR\n"
}