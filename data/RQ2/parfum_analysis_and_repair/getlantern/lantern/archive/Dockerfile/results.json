{
  "startTime": 1674253962270,
  "endTime": 1674253964004,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 66
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 88
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 2,
        "columnEnd": 89
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 77
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 39,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 102
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 25
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# This docker machine is able to compile and sign Lantern for Linux and\n# Windows.\n\nFROM fedora:21\nMAINTAINER \"The Lantern Team\" <team@getlantern.org>\n\nENV WORKDIR /lantern\nENV SECRETS /secrets\n\nRUN mkdir -p $WORKDIR\nRUN mkdir -p $SECRETS\n\n# Updating system.\nRUN yum install -y deltarpm && yum update -y && yum clean packages && rm -rf /var/cache/yum\n\n# Requisites for building Go.\nRUN yum install -y git tar gzip curl hostname && yum clean packages && rm -rf /var/cache/yum\n\n# Compilers and tools for CGO.\nRUN yum install -y gcc gcc-c++ libgcc.i686 gcc-c++.i686 pkg-config && yum clean packages && rm -rf /var/cache/yum\n\n# Requisites for bootstrapping.\nRUN yum install -y glibc-devel glibc-static && yum clean packages && rm -rf /var/cache/yum\nRUN yum install -y glibc-devel.i686 glib2-static.i686 glibc-2.20-8.fc21.i686 libgcc.i686 && yum clean packages && rm -rf /var/cache/yum\n\n# Requisites for ARM\n# ARM EABI toolchain must be grabbed from an contributor repository, such as:\n# https://copr.fedoraproject.org/coprs/lantw44/arm-linux-gnueabi-toolchain/\nRUN yum install -y yum-utils && \\\n  rpm --import https://copr-be.cloud.fedoraproject.org/results/lantw44/arm-linux-gnueabi-toolchain/pubkey.gpg && \\\n  yum-config-manager --add-repo=https://copr.fedoraproject.org/coprs/lantw44/arm-linux-gnueabi-toolchain/repo/fedora-21/lantw44-arm-linux-gnueabi-toolchain-fedora-21.repo && \\\n  yum install -y arm-linux-gnueabi-gcc arm-linux-gnueabi-binutils arm-linux-gnueabi-glibc && \\\n  yum clean packages && rm -rf /var/cache/yum\n\n# Requisites for windows.\nRUN yum install -y mingw32-gcc.x86_64 && yum clean packages && rm -rf /var/cache/yum\n\n# Requisites for building Lantern on Linux.\nRUN yum install -y gtk3-devel libappindicator-gtk3 libappindicator-gtk3-devel && yum clean packages && rm -rf /var/cache/yum\nRUN yum install -y pango.i686 pango-devel.i686 gtk3-devel.i686 gdk-pixbuf2-devel.i686 cairo-gobject-devel.i686 \\\n  atk-devel.i686 libappindicator-gtk3-devel.i686 libdbusmenu-devel.i686 dbus-devel.i686 pkgconfig.i686 && \\\n  yum clean packages && rm -rf /var/cache/yum\n\n# Requisites for packing Lantern for Debian.\n# The fpm packer. (https://rubygems.org/gems/fpm)\nRUN yum install -y ruby ruby-devel make && yum clean packages && rm -rf /var/cache/yum\nRUN gem install fpm\n\n# Requisites for packing Lantern for Windows.\nRUN yum install -y osslsigncode mingw32-nsis && yum clean packages && rm -rf /var/cache/yum\n\n# Required for compressing update files\nRUN yum install -y bzip2 && yum clean packages && rm -rf /var/cache/yum\n\n# Requisites for genassets.\nRUN curl -f --silent --location https://rpm.nodesource.com/setup_5.x | bash -\nRUN yum -y install nodejs && yum clean packages && rm -rf /var/cache/yum\nRUN npm install -g gulp && npm cache clean --force;\n\n# Getting Go.\nENV GOROOT /usr/local/go\nENV GOPATH /\n\nENV PATH $PATH:$GOROOT/bin\n\nENV GO_PACKAGE_URL https://s3-eu-west-1.amazonaws.com/uaalto/go1.6.2_lantern_20160503_linux_amd64.tar.gz\nRUN curl -f -sSL $GO_PACKAGE_URL | tar -xvzf - -C /usr/local\n\n# Expect the $WORKDIR volume to be mounted.\nVOLUME [ \"$WORKDIR\" ]\n\nWORKDIR $WORKDIR\n"
}