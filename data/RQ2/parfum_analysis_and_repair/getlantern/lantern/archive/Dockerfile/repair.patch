diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/getlantern/lantern/archive/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/getlantern/lantern/archive/Dockerfile/repaired.Dockerfile
index d04be62..0baa017 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/getlantern/lantern/archive/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/getlantern/lantern/archive/Dockerfile/repaired.Dockerfile
@@ -11,17 +11,17 @@ RUN mkdir -p $WORKDIR
 RUN mkdir -p $SECRETS
 
 # Updating system.
-RUN yum install -y deltarpm && yum update -y && yum clean packages
+RUN yum install -y deltarpm && yum update -y && yum clean packages && rm -rf /var/cache/yum
 
 # Requisites for building Go.
-RUN yum install -y git tar gzip curl hostname && yum clean packages
+RUN yum install -y git tar gzip curl hostname && yum clean packages && rm -rf /var/cache/yum
 
 # Compilers and tools for CGO.
-RUN yum install -y gcc gcc-c++ libgcc.i686 gcc-c++.i686 pkg-config && yum clean packages
+RUN yum install -y gcc gcc-c++ libgcc.i686 gcc-c++.i686 pkg-config && yum clean packages && rm -rf /var/cache/yum
 
 # Requisites for bootstrapping.
-RUN yum install -y glibc-devel glibc-static && yum clean packages
-RUN yum install -y glibc-devel.i686 glib2-static.i686 glibc-2.20-8.fc21.i686 libgcc.i686 && yum clean packages
+RUN yum install -y glibc-devel glibc-static && yum clean packages && rm -rf /var/cache/yum
+RUN yum install -y glibc-devel.i686 glib2-static.i686 glibc-2.20-8.fc21.i686 libgcc.i686 && yum clean packages && rm -rf /var/cache/yum
 
 # Requisites for ARM
 # ARM EABI toolchain must be grabbed from an contributor repository, such as:
@@ -30,32 +30,32 @@ RUN yum install -y yum-utils && \
   rpm --import https://copr-be.cloud.fedoraproject.org/results/lantw44/arm-linux-gnueabi-toolchain/pubkey.gpg && \
   yum-config-manager --add-repo=https://copr.fedoraproject.org/coprs/lantw44/arm-linux-gnueabi-toolchain/repo/fedora-21/lantw44-arm-linux-gnueabi-toolchain-fedora-21.repo && \
   yum install -y arm-linux-gnueabi-gcc arm-linux-gnueabi-binutils arm-linux-gnueabi-glibc && \
-  yum clean packages
+  yum clean packages && rm -rf /var/cache/yum
 
 # Requisites for windows.
-RUN yum install -y mingw32-gcc.x86_64 && yum clean packages
+RUN yum install -y mingw32-gcc.x86_64 && yum clean packages && rm -rf /var/cache/yum
 
 # Requisites for building Lantern on Linux.
-RUN yum install -y gtk3-devel libappindicator-gtk3 libappindicator-gtk3-devel && yum clean packages
+RUN yum install -y gtk3-devel libappindicator-gtk3 libappindicator-gtk3-devel && yum clean packages && rm -rf /var/cache/yum
 RUN yum install -y pango.i686 pango-devel.i686 gtk3-devel.i686 gdk-pixbuf2-devel.i686 cairo-gobject-devel.i686 \
   atk-devel.i686 libappindicator-gtk3-devel.i686 libdbusmenu-devel.i686 dbus-devel.i686 pkgconfig.i686 && \
-  yum clean packages
+  yum clean packages && rm -rf /var/cache/yum
 
 # Requisites for packing Lantern for Debian.
 # The fpm packer. (https://rubygems.org/gems/fpm)
-RUN yum install -y ruby ruby-devel make && yum clean packages
+RUN yum install -y ruby ruby-devel make && yum clean packages && rm -rf /var/cache/yum
 RUN gem install fpm
 
 # Requisites for packing Lantern for Windows.
-RUN yum install -y osslsigncode mingw32-nsis && yum clean packages
+RUN yum install -y osslsigncode mingw32-nsis && yum clean packages && rm -rf /var/cache/yum
 
 # Required for compressing update files
-RUN yum install -y bzip2 && yum clean packages
+RUN yum install -y bzip2 && yum clean packages && rm -rf /var/cache/yum
 
 # Requisites for genassets.
-RUN curl --silent --location https://rpm.nodesource.com/setup_5.x | bash -
-RUN yum -y install nodejs && yum clean packages
-RUN npm install -g gulp
+RUN curl -f --silent --location https://rpm.nodesource.com/setup_5.x | bash -
+RUN yum -y install nodejs && yum clean packages && rm -rf /var/cache/yum
+RUN npm install -g gulp && npm cache clean --force;
 
 # Getting Go.
 ENV GOROOT /usr/local/go
@@ -64,7 +64,7 @@ ENV GOPATH /
 ENV PATH $PATH:$GOROOT/bin
 
 ENV GO_PACKAGE_URL https://s3-eu-west-1.amazonaws.com/uaalto/go1.6.2_lantern_20160503_linux_amd64.tar.gz
-RUN curl -sSL $GO_PACKAGE_URL | tar -xvzf - -C /usr/local
+RUN curl -f -sSL $GO_PACKAGE_URL | tar -xvzf - -C /usr/local
 
 # Expect the $WORKDIR volume to be mounted.
 VOLUME [ "$WORKDIR" ]