{
  "startTime": 1674249235031,
  "endTime": 1674249235939,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 18,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 75
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 39
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:16-alpine AS web_builder\nWORKDIR /app\nCOPY web-frontend .\nRUN npm install && npm run build && npm cache clean --force;\n\nFROM python:3.9-slim as base\n\nENV VIRTUAL_ENV=/opt/venv\nRUN python3 -m venv $VIRTUAL_ENV\nENV PATH=\"$VIRTUAL_ENV/bin:$PATH\"\nENV PYTHONUNBUFFERED=1\n\nFROM base as builder\nWORKDIR /app\n\n# copy requirements over first so this layer is cached and we don't have to reinstall deps when editing src\nCOPY requirements-server.txt requirements-formats.txt requirements-dataframe.txt requirements-array.txt requirements-xarray.txt requirements-compression.txt docker/requirements-docker.txt /tmp/\nRUN pip install --no-cache-dir --upgrade pip\nRUN pip install --no-cache-dir \\\n  -r /tmp/requirements-server.txt \\\n  -r /tmp/requirements-formats.tx \\\n  -r /tmp/requirements-dataframe. \\\n  -r /tmp/requirements-array.txt \\\n  -r /tmp/requirements-xarray.txt \\\n  -r /tmp/requirements-compressio \\\n  -r /tmp/requirements-docker.txt\n\nCOPY --from=web_builder /app/build /app/share/tiled/ui\nCOPY . .\n\n# note requirements listed here but all deps should be already satisfied\nRUN pip install --no-cache-dir '.[server, formats, dataframe, array, xarray, compression]'\n\nFROM builder as test\n\nRUN pip install --no-cache-dir '.[client]'\nRUN pip install --no-cache-dir -r requirements-dev.txt\nRUN pytest -v\n\nFROM base as app\n\nCOPY --from=builder $VIRTUAL_ENV $VIRTUAL_ENV\nCOPY --from=builder /app /app\n\nWORKDIR /deploy\n\nEXPOSE 8000\n\nENTRYPOINT [\"/app/docker/entrypoint.sh\"]\n"
}