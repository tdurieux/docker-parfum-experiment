{
  "startTime": 1674255163571,
  "endTime": 1674255163920,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 58
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:alpine as uibuild\nRUN apk add --no-cache yarn\n\nWORKDIR /workspace\n\nCOPY ui/package.json .\nRUN yarn install --no-lockfile --silent --cache-folder .yc && yarn cache clean;\n\nCOPY ui/ .\nRUN yarn build\n\n# Build the manager binary\nFROM golang:1.16-alpine as controller-builder\n\nWORKDIR /workspace\n# Copy the Go Modules manifests\nCOPY go.mod go.mod\nCOPY go.sum go.sum\n# cache deps before building and copying source so that we don't need to re-download as much\n# and so that source changes don't invalidate our downloaded layer\nRUN go mod download\n\n# Copy the go source\nCOPY main.go main.go\nCOPY pkg/ pkg/\nCOPY controllers/ controllers/\n\n# Copy UI build\nCOPY --from=uibuild /workspace/build/ pkg/webserver/build/\n\n# Build\nRUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -a -o manager main.go\n\nFROM golang:1.16-alpine as pod-simulator-builder\nWORKDIR /build\nCOPY pod-simulator /build\nRUN go build -o pod-simulator main.go\n\n# Use distroless as minimal base image to package the manager binary\n# Refer to https://github.com/GoogleContainerTools/distroless for more details\nFROM gcr.io/distroless/static:nonroot\nCOPY --from=pod-simulator-builder /build/pod-simulator /usr/local/bin/pod-simulator\nCOPY --from=controller-builder /workspace/manager /usr/local/bin/controller\nUSER 65532:65532\n"
}