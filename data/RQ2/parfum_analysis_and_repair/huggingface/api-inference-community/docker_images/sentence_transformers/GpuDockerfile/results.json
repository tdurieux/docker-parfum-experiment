{
  "startTime": 1674216292862,
  "endTime": 1674216293819,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 25,
        "columnEnd": 62
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 25,
        "columnEnd": 62
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM tiangolo/uvicorn-gunicorn:python3.9 as builder\n\n\nFROM nvcr.io/nvidia/pytorch:21.02-py3\nLABEL maintainer=\"Nicolas Patry <nicolas@huggingface.co>\"\nCOPY --from=builder /start.sh /\nCOPY --from=builder /gunicorn_conf.py /\nCOPY --from=builder /app /\n# Necessary on GPU environment docker\n# /etc/shinit_v2 somehow overwrites TIMEOUT env variable, so we rename them UV_TIMEOUT\n# To distinguish the UVICORN TIMEOUT variable.\nRUN sed -i 's/TIMEOUT/UV_TIMEOUT/g' /gunicorn_conf.py\n\nENV DEBIAN_FRONTEND=noninteractive\nENV TZ=America/New_York\nRUN apt-get update -y && apt-get install --no-install-recommends libsndfile1 ffmpeg -y && rm -rf /var/lib/apt/lists/*;\nRUN pip install --no-cache-dir uvloop gunicorn httptools uvicorn\nRUN ln -fs /usr/share/zoneinfo/Europe/Dublin /etc/localtime\n\nWORKDIR /app/\nRUN pip3 install --no-cache-dir torch==1.12.0 --extra-index-url https://download.pytorch.org/whl/cu116\nCOPY ./requirements.txt /app/\nRUN pip install --no-cache-dir -r /app/requirements.txt\n\nENV HUGGINGFACE_HUB_CACHE=/data\nENV SENTENCE_TRANSFORMERS_HOME=/data\nENV TRANSFORMERS_CACHE=/data\n\n\n# This is model downloading. Put it *before* copying the source files\n# that means later builds will be cached if you don't change this one file\n# which should not happen very often\nCOPY ./prestart.sh /app/\n\nENV PYTHONPATH \"${PYTHONPATH}:/app/\"\nARG model_id\nENV MODEL=$model_id\nRUN echo $MODEL\n\nARG max_workers=1\nENV MAX_WORKERS=$max_workers\n\nCOPY ./app /app/app\n\n\nENV PYTHONPATH=/app\n\nEXPOSE 80\n\n# Run the start script, it will check for an /app/prestart.sh script (e.g. for migrations)\n# And then will start Gunicorn with Uvicorn\nCMD [\"/start.sh\"]\n"
}