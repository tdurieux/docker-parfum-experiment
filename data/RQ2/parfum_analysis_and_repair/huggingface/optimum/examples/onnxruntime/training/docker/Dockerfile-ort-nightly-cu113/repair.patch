diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/huggingface/optimum/examples/onnxruntime/training/docker/Dockerfile-ort-nightly-cu113 b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/huggingface/optimum/examples/onnxruntime/training/docker/Dockerfile-ort-nightly-cu113/repaired.Dockerfile
index 624afd7..b6e0f92 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/huggingface/optimum/examples/onnxruntime/training/docker/Dockerfile-ort-nightly-cu113
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/huggingface/optimum/examples/onnxruntime/training/docker/Dockerfile-ort-nightly-cu113/repaired.Dockerfile
@@ -11,28 +11,28 @@ SHELL ["/bin/bash", "-c"]
 
 # Temporary fix until NVDIA finish the update of its docker images
 RUN apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/3bf863cc.pub
-RUN apt-get update && apt-get install -y --no-install-recommends apt-utils
+RUN apt-get update && apt-get install -y --no-install-recommends apt-utils && rm -rf /var/lib/apt/lists/*;
 
 # Install and update tools to minimize security vulnerabilities
 RUN apt-get update
-RUN apt-get install -y software-properties-common wget apt-utils patchelf git libprotobuf-dev protobuf-compiler cmake \
+RUN apt-get install --no-install-recommends -y software-properties-common wget apt-utils patchelf git libprotobuf-dev protobuf-compiler cmake \
     bzip2 ca-certificates libglib2.0-0 libxext6 libsm6 libxrender1 mercurial subversion libopenmpi-dev && \
-    apt-get clean
+    apt-get clean && rm -rf /var/lib/apt/lists/*;
 RUN unattended-upgrade
 RUN apt-get autoremove -y
 
 # Install Pythyon (3.8 as default)
 RUN update-alternatives --install /usr/bin/python python /usr/bin/python3 1
-RUN apt-get install -y python3-pip
+RUN apt-get install --no-install-recommends -y python3-pip && rm -rf /var/lib/apt/lists/*;
 RUN update-alternatives --install /usr/bin/pip pip /usr/bin/pip3 1
-RUN pip install --upgrade pip
+RUN pip install --no-cache-dir --upgrade pip
 
 # Install onnxruntime-training dependencies
 # This version doesn't support training gpt2 with fp16
-RUN pip install onnx==1.11.0 ninja
-RUN pip install torch==1.11.0+cu113 -f https://download.pytorch.org/whl/torch_stable.html
-RUN pip install onnxruntime-training==1.12.0.dev20220523001+cu113 -f https://download.onnxruntime.ai/onnxruntime_nightly_cu113.html
-RUN pip install torch-ort
+RUN pip install --no-cache-dir onnx==1.11.0 ninja
+RUN pip install --no-cache-dir torch==1.11.0+cu113 -f https://download.pytorch.org/whl/torch_stable.html
+RUN pip install --no-cache-dir onnxruntime-training==1.12.0.dev20220523001+cu113 -f https://download.onnxruntime.ai/onnxruntime_nightly_cu113.html
+RUN pip install --no-cache-dir torch-ort
 # RUN python -m torch_ort.configure
 
 WORKDIR .