diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/huggingface/optimum/examples/onnxruntime/training/docker/Dockerfile-ort1.11.0-cu102 b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/huggingface/optimum/examples/onnxruntime/training/docker/Dockerfile-ort1.11.0-cu102/repaired.Dockerfile
index 70d805e..c131a7f 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/huggingface/optimum/examples/onnxruntime/training/docker/Dockerfile-ort1.11.0-cu102
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/huggingface/optimum/examples/onnxruntime/training/docker/Dockerfile-ort1.11.0-cu102/repaired.Dockerfile
@@ -8,22 +8,22 @@ SHELL ["/bin/bash", "-c"]
 
 # Temporary fix until NVDIA finish the update of its docker images
 RUN apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/3bf863cc.pub
-RUN apt-get update && apt-get install -y --no-install-recommends apt-utils
+RUN apt-get update && apt-get install -y --no-install-recommends apt-utils && rm -rf /var/lib/apt/lists/*;
 
 # Install and update tools to minimize security vulnerabilities
 RUN apt-get update
-RUN apt-get install -y software-properties-common wget apt-utils patchelf git libprotobuf-dev protobuf-compiler cmake \
+RUN apt-get install --no-install-recommends -y software-properties-common wget apt-utils patchelf git libprotobuf-dev protobuf-compiler cmake \
     bzip2 ca-certificates libglib2.0-0 libxext6 libsm6 libxrender1 mercurial subversion libopenmpi-dev && \
-    apt-get clean
+    apt-get clean && rm -rf /var/lib/apt/lists/*;
 RUN unattended-upgrade
 RUN apt-get autoremove -y
 
 # Install conda
 RUN apt-get update
-RUN apt-get install -y wget bzip2 ca-certificates libglib2.0-0 libxext6 libsm6 libxrender1 git mercurial subversion && \
-        apt-get clean
-RUN apt-get install sox ffmpeg libcairo2 libcairo2-dev
-RUN apt-get install texlive-full
+RUN apt-get install --no-install-recommends -y wget bzip2 ca-certificates libglib2.0-0 libxext6 libsm6 libxrender1 git mercurial subversion && \
+        apt-get clean && rm -rf /var/lib/apt/lists/*;
+RUN apt-get install -y --no-install-recommends sox ffmpeg libcairo2 libcairo2-dev && rm -rf /var/lib/apt/lists/*;
+RUN apt-get install -y --no-install-recommends texlive-full && rm -rf /var/lib/apt/lists/*;
 RUN wget --quiet https://repo.anaconda.com/archive/Anaconda3-2021.11-Linux-x86_64.sh -O ~/anaconda.sh && \
         /bin/bash ~/anaconda.sh -b -p /opt/conda && \
         rm ~/anaconda.sh && \
@@ -44,12 +44,12 @@ ENV PATH /opt/conda/envs/venv_ort/bin:$PATH
 ENV CONDA_DEFAULT_ENV $venv_ort
 
 # Install onnxruntime-training dependencies
-RUN pip install --upgrade pip
-RUN pip install manimlib manimce
-RUN pip install onnx==1.10.2 ninja
-RUN pip install torch==1.9.0+cu102 torchvision==0.10.0+cu102 torchaudio==0.9.0 -f https://download.pytorch.org/whl/torch_stable.html
-RUN pip install onnxruntime-training==1.11.0 -f https://download.onnxruntime.ai/onnxruntime_stable_cu102.html
-RUN pip install torch-ort
+RUN pip install --no-cache-dir --upgrade pip
+RUN pip install --no-cache-dir manimlib manimce
+RUN pip install --no-cache-dir onnx==1.10.2 ninja
+RUN pip install --no-cache-dir torch==1.9.0+cu102 torchvision==0.10.0+cu102 torchaudio==0.9.0 -f https://download.pytorch.org/whl/torch_stable.html
+RUN pip install --no-cache-dir onnxruntime-training==1.11.0 -f https://download.onnxruntime.ai/onnxruntime_stable_cu102.html
+RUN pip install --no-cache-dir torch-ort
 # RUN python -m torch_ort.configure
 
 WORKDIR .