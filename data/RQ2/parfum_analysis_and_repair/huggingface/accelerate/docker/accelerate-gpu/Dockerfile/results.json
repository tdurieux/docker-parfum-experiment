{
  "startTime": 1674220719830,
  "endTime": 1674220720906,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 36
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Builds GPU docker image of PyTorch\n# Uses multi-staged approach to reduce size\n# Stage 1\n# Use base conda image to reduce time\nFROM continuumio/miniconda3:latest AS compile-image\n# Specify py version\nENV PYTHON_VERSION=3.7.3\n# Install apt libs\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y curl git wget && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists*\n\n# Create our conda env\nRUN conda create --name accelerate python=${PYTHON_VERSION} ipython jupyter pip\n# We don't install pytorch here yet since CUDA isn't available\n# instead we use the direct torch wheel\nENV PATH /opt/conda/envs/accelerate/bin:$PATH\n# Activate our bash shell\nRUN chsh -s /bin/bash\nSHELL [\"/bin/bash\", \"-c\"]\n# Activate the conda env and install torch + accelerate\nRUN source activate accelerate && \\\n    python3 -m pip install --no-cache-dir \\\n    git+https://github.com/huggingface/accelerate#egg=accelerate[test,test_trackers] \\\n    --extra-index-url https://download.pytorch.org/whl/cu113\n\n# Stage 2\nFROM nvidia/cuda:11.2.2-cudnn8-devel-ubuntu20.04 AS build-image\nCOPY --from=compile-image /opt/conda /opt/conda\nENV PATH /opt/conda/bin:$PATH\n\n# Install apt libs\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y curl git wget && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists*\n\nRUN echo \"source activate accelerate\" >> ~/.profile\n\n# Activate the virtualenv\nCMD [\"/bin/bash\"]"
}