{
  "startTime": 1674250646973,
  "endTime": 1674250647874,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 61
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 60
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 60
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 60
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 20,
        "columnStart": 26,
        "columnEnd": 7
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 84
      }
    }
  ],
  "repairedDockerfile": "FROM node:lts-buster-slim AS jsdeps\n\nRUN apt-get update -y --fix-missing\nRUN apt-get install --no-install-recommends -y g++ build-essential python3 libmagic1 && rm -rf /var/lib/apt/lists/*;\n\nCOPY . .\n\nRUN npm install && npm run build && npm cache clean --force;\n\n\nFROM python:3.8-buster\n\nLABEL maintainer=\"webops@digital.trade.gov.uk\"\n\nENV DJANGO_SETTINGS_MODULE \"settings\"\n\n# add git client\nRUN apt-get -qq update && apt-get install --no-install-recommends -qqy \\\n    curl \\\n    ca-certificates \\\n    git && rm -rf /var/lib/apt/lists/*;\n\n# don't run as root\nRUN groupadd -g 1000 tamato && \\\n    useradd -u 1000 -g tamato -m tamato\n\nWORKDIR /home/tamato/app\n\n# Extend PATH for dev ease-of-use and to stop pip complaining.\nENV PATH=\"${PATH}:/home/tamato/.local/bin\"\n\n# install python dependencies\nCOPY requirements.txt ./\nRUN pip install --no-cache-dir -U pip && \\\n    pip install --no-cache-dir -r requirements.txt --no-warn-script-location\n\n# Copying an empty file works while the directory is mounted as a volume.\nCOPY --chown=tamato:tamato .empty .env\nCOPY --chown=tamato:tamato . .\nCOPY --chown=tamato:tamato --from=jsdeps node_modules/govuk-frontend/govuk node_modules/govuk-frontend/govuk\nCOPY --chown=tamato:tamato --from=jsdeps static/webpack_bundles static/webpack_bundles\nCOPY --chown=tamato:tamato --from=jsdeps webpack-stats.json ./\n\n# collect static files for deployment\nRUN python manage.py collectstatic --noinput\n\nUSER tamato\n\nEXPOSE 8000\nCMD [\"/home/tamato/.local/bin/gunicorn\", \"-b\", \"0.0.0.0:8000\", \"-w\", \"1\", \"wsgi:application\"]\n"
}