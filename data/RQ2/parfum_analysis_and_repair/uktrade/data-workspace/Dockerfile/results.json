{
  "startTime": 1674251011432,
  "endTime": 1674251012511,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 95
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:bullseye-20220509-slim AS base\n\nENV \\\n\tLC_ALL=en_US.UTF-8 \\\n\tLANG=en_US.UTF-8 \\\n\tLANGUAGE=en_US.UTF-8 \\\n\tPYTHONPATH=/dataworkspace \\\n\tDJANGO_SETTINGS_MODULE=dataworkspace.settings.base\n\nRUN apt-get update && \\\n    apt-get update && \\\n    apt-get install -y --no-install-recommends curl bzip2 make ca-certificates && \\\n    curl -f https://ftp.gnu.org/gnu/parallel/parallel-20190522.tar.bz2 > parallel-20190522.tar.bz2 && \\\n    tar xjf parallel-20190522.tar.bz2 && \\\n    cd parallel-20190522 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make && make install && \\\n    cd / && \\\n    rm -rf parallel-20190522 parallel-20190522.tar.bz2 && \\\n    apt-get install -y --no-install-recommends \\\n        locales \\\n        git \\\n        nginx \\\n        nginx-extras \\\n        openssl \\\n        build-essential \\\n        procps \\\n        python3 \\\n        python3-dev \\\n        python3-pip \\\n        python3-setuptools && \\\n    echo \"en_US.UTF-8 UTF-8\" >> /etc/locale.gen && \\\n    locale-gen en_US.utf8 && \\\n    rm /etc/nginx/nginx.conf && \\\n    rm -rf /tmp/* && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    useradd -m django && \\\n    chown -R django /var/log/nginx\n\nCOPY requirements.txt requirements.txt\nRUN python3 -m pip install --upgrade pip wheel && \\\n\tpython3 -m pip install -r requirements.txt\n\nFROM base AS test\n\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        gcc \\\n        musl-dev \\\n        chromium \\\n        chromium-driver \\\n        libxml2-dev \\\n        libxslt1-dev && \\\n    echo \"en_US.UTF-8 UTF-8\" >> /etc/locale.gen && \\\n    locale-gen en_US.utf8 && \\\n    rm -rf /tmp/* && \\\n    rm -rf /var/lib/apt/lists/*\n\nCOPY requirements-dev.txt requirements-dev.txt\nRUN pip3 install --no-cache-dir -r requirements-dev.txt\n\nCOPY dataworkspace /dataworkspace\nRUN cd dataworkspace\n\nCOPY etc /etc\n\nUSER django\n\nCOPY test /test\n\nFROM test as dev\n\nUSER root\n\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends nodejs npm && \\\n    rm -rf /tmp/* && \\\n    rm -rf /var/lib/apt/lists/*\n\nRUN npm install --global --unsafe-perm nodemon && npm cache clean --force;\n\nUSER django\n\nCMD [\"/dataworkspace/start-dev.sh\"]\n\nFROM base AS live\n\nCOPY dataworkspace /dataworkspace\n\nRUN cd dataworkspace\n\nCOPY etc /etc\n\nCMD [\"/dataworkspace/start.sh\"]\n\nUSER django\n"
}