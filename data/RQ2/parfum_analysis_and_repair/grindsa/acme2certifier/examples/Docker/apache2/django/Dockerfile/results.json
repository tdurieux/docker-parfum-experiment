{
  "startTime": 1674252775688,
  "endTime": 1674252776567,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 45,
        "columnEnd": 75
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 62
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 86
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 16
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:20.04\nLABEL maintainer=\"grindelsack@gmail.com\"\n\nARG BRANCH\nRUN apt-get update\nRUN DEBIAN_FRONTEND=\"noninteractive\" apt-get --no-install-recommends -y install tzdata && rm -rf /var/lib/apt/lists/*;\nRUN apt-get install --no-install-recommends -y \\\n    python3-pip \\\n    apache2 \\\n    apache2-data \\\n    libapache2-mod-wsgi-py3 \\\n    curl \\\n    python3-django \\\n    python3-mysqldb \\\n    python3-pymysql \\\n    python3-psycopg2 \\\n    python3-yaml \\\n && rm -rf /var/lib/apt/lists/*\n\n# install python requirements\nCOPY requirements.txt /tmp/requirements.txt\nRUN pip3 install --no-cache-dir -r /tmp/requirements.txt && pip3 install --no-cache-dir django_rename_app\n\nENV APACHE_RUN_USER www-data\nENV APACHE_RUN_GROUP www-data\nENV APACHE_LOG_DIR /var/log/apache2\n\n# create folders for acme2certifier\nRUN mkdir -p /var/www/acme2certifier/volume && \\\n    mkdir -p /var/www/acme2certifier/examples /var/www/acme2certifier/examples/\n\nCOPY examples/apache_django.conf /etc/apache2/sites-enabled/acme2certifier.conf\nCOPY examples/django/ /var/www/acme2certifier/\nCOPY examples/django/ /var/www/acme2certifier/examples/django\nCOPY examples/ca_handler/ /var/www/acme2certifier/examples/ca_handler\nCOPY examples/eab_handler/ /var/www/acme2certifier/examples/eab_handler\nCOPY examples/hooks/ /var/www/acme2certifier/examples/hooks\nCOPY examples/acme_srv.cfg /var/www/acme2certifier/examples/\nCOPY examples/apache_django_ssl.conf /var/www/acme2certifier/examples/\nCOPY acme_srv/ /var/www/acme2certifier/acme_srv\nCOPY tools/ /var/www/acme2certifier/tools\nCOPY examples/db_handler/django_handler.py /var/www/acme2certifier/acme_srv/db_handler.py\nRUN chown -R www-data:www-data /var/www/acme2certifier/\nRUN rm /var/www/acme2certifier/acme2certifier/settings.py\n\n\n# final apache2 changes\nRUN sed -i \"s/\\${APACHE_LOG_DIR}\\/error.log/\\/dev\\/stderr/g\" /etc/apache2/apache2.conf && \\\n    a2enmod ssl && \\\n    rm /etc/apache2/sites-enabled/000-default.conf\n\nCOPY examples/Docker/apache2/django/docker-entrypoint.sh /docker-entrypoint.sh\nRUN chmod a+rx /docker-entrypoint.sh\n\nWORKDIR /var/www/acme2certifier/\n\nENTRYPOINT [\"/docker-entrypoint.sh\"]\n\n# CMD [\"bash\"]\nCMD [\"/usr/sbin/apache2ctl\", \"-D\", \"FOREGROUND\"]\n\nEXPOSE 80 443\n"
}