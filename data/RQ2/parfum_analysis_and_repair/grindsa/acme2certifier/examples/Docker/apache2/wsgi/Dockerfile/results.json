{
  "startTime": 1674217853746,
  "endTime": 1674217854635,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 5,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 8
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 62
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 86
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 5,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 8
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:20.04\nLABEL maintainer=\"grindelsack@gmail.com\"\n\nRUN apt-get update\nRUN DEBIAN_FRONTEND=\"noninteractive\" apt-get --no-install-recommends -y install tzdata && rm -rf /var/lib/apt/lists/*;\nRUN apt-get install --no-install-recommends -y \\\n    python3-pip \\\n    apache2 \\\n    apache2-data \\\n    libapache2-mod-wsgi-py3 \\\n    curl \\\n && rm -rf /var/lib/apt/lists/*\n\n# install python requirements\nCOPY requirements.txt /tmp/requirements.txt\nRUN pip3 install --no-cache-dir -r /tmp/requirements.txt\n\nENV APACHE_RUN_USER www-data\nENV APACHE_RUN_GROUP www-data\nENV APACHE_LOG_DIR /var/log/apache2\n\n# create folders for acme2certifier\nRUN mkdir -p /var/www/acme2certifier/volume && \\\n    mkdir -p /var/www/acme2certifier/examples /var/www/acme2certifier/examples/\n\nCOPY examples/apache_wsgi.conf /etc/apache2/sites-enabled/acme2certifier.conf\nCOPY examples/acme2certifier_wsgi.py /var/www/acme2certifier/acme2certifier_wsgi.py\nCOPY examples/ca_handler/ /var/www/acme2certifier/examples/ca_handler\nCOPY examples/eab_handler/ /var/www/acme2certifier/examples/eab_handler\nCOPY examples/hooks/ /var/www/acme2certifier/examples/hooks\nCOPY examples/acme_srv.cfg /var/www/acme2certifier/examples/\nCOPY examples/apache_wsgi_ssl.conf /var/www/acme2certifier/examples/\nCOPY examples/db_handler/wsgi_handler.py /var/www/acme2certifier/acme_srv/db_handler.py\nCOPY acme_srv/ /var/www/acme2certifier/acme_srv\nCOPY tools/ /var/www/acme2certifier/tools\nRUN chown -R www-data:www-data /var/www/acme2certifier/\n\n# final apache2 changes\nRUN sed -i \"s/\\${APACHE_LOG_DIR}\\/error.log/\\/dev\\/stderr/g\" /etc/apache2/apache2.conf && \\\n    a2enmod ssl && \\\n    rm /etc/apache2/sites-enabled/000-default.conf\n\nCOPY examples/Docker/apache2/wsgi/docker-entrypoint.sh /docker-entrypoint.sh\nRUN chmod a+rx /docker-entrypoint.sh\n\nWORKDIR /var/www/acme2certifier/\n\nENTRYPOINT [\"/docker-entrypoint.sh\"]\n\nCMD [\"/usr/sbin/apache2ctl\", \"-D\", \"FOREGROUND\"]\n\nEXPOSE 80 443\n"
}