{
  "startTime": 1674254141192,
  "endTime": 1674254141906,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 22,
        "columnEnd": 68
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 13,
        "columnStart": 1,
        "columnEnd": 7
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 22,
        "columnEnd": 78
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 22,
        "columnEnd": 68
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 13,
        "columnStart": 1,
        "columnEnd": 7
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 22,
        "columnEnd": 78
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:bionic\n\n# shared layers with second stage image, faster build by caching layers!\nRUN apt-get update && apt-get install --no-install-recommends -y libssl1.0.0 libpcre3 zlib1g && apt-get purge && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get update && \\\n\tapt-get install --no-install-recommends -y \\\n\t\tbuild-essential \\\n\t\tlibssl-dev \\\n\t\tlibpcre3-dev \\\n\t\tzlib1g-dev \\\n\t\twget \\\n                openssl \\\n\t\tunzip && apt-get purge && rm -rf /var/lib/apt/lists/*;\n\nRUN mkdir /build\nWORKDIR /build\nADD build.sh /build/build.sh\nRUN /build/build.sh\n\n# Generate a fake CA + certs for epic games so that we can put some fake certificates in to the image\n# so that the epic games config file can be loaded without error\nRUN \\\n   openssl genrsa -out rootca.key 2048 && \\\n   openssl req -batch -x509 -new -nodes -key rootca.key -sha256 -days 10000 -out rootca.pem && \\\n   openssl genrsa -out client.key 2048 && \\\n   cat /etc/ssl/openssl.cnf > /build/openssl.conf && \\\n   echo \"[SAN]\" >> /build/openssl.conf && \\\n   echo \"subjectAltName=DNS:download1.epicgames.com,DNS:download2.epicgames.com,DNS:download3.epicgames.com,DNS:download4.epicgames.com,DNS:cdn1.epicgames.com,DNS:cdn2.epicgames.com,DNS:cdn1.unrealengine.com,DNS:cdn2.unrealengine.com,DNS:cdn3.unrealengine.com,DNS:static-assets-prod.epicgames.com,DNS:epicgames-download1.akamaized.net\" >> /build/openssl.conf && \\\n   openssl req -new -key client.key -out client.csr -subj \"/C=US/ST=CA/O=Acme, Inc./CN=download.epicgames.com\" -reqexts SAN -config /build/openssl.conf -out client.csr && \\\n   openssl x509 -req -in client.csr -CA rootca.pem  -CAkey rootca.key  -CAcreateserial -out client.pem -days 10000 -sha256\n\nFROM ubuntu:bionic\nRUN apt-get update && apt-get install --no-install-recommends -y libssl1.0.0 libssl1.1 libpcre3 zlib1g && apt-get purge && rm -rf /var/lib/apt/lists/*;\n\nCOPY --from=0 /usr/sbin/nginx /usr/sbin/nginx\nCOPY --from=0 /etc/nginx/mime.types /etc/nginx/mime.types\n\nRUN mkdir -p \\\n\t/etc/nginx/conf.d \\\n        /etc/nginx/ssl/epic \\\n\t/var/lib/nginx/body \\\n\t/var/lib/nginx/fastcgi \\\n\t/cache/cache_data \\\n\t/cache/static \\\n\t/var/log/nginx\n\n\nADD \\\n\torigin.conf \\\n\tsteam.conf \\\n\tblizzard.conf \\\n\tleague.conf \\\n\twargaming.conf \\\n\tsony.conf \\\n\tmicrosoft.conf \\\n\thirez.conf \\\n\tcatch_all.conf \\\n\tstatic.conf \\\n        uplay.conf \\\n        epic.conf \\\n\t/etc/nginx/conf.d/\n\nADD nginx.conf /etc/nginx/nginx.conf\n\n# Epic games fake CA to allow epic config file to be loaded\nCOPY --from=0 /build/client.key /build/client.pem /etc/nginx/ssl/epic/\n\nCMD nginx -g \"daemon off;\" -c /etc/nginx/nginx.conf\nVOLUME [\"/cache\", \"/var/log/nginx\"]\n"
}