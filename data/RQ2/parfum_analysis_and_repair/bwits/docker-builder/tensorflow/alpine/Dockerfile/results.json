{
  "startTime": 1674216653229,
  "endTime": 1674216653996,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 78
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 111
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.2\n\n# Here we use several hacks collected from https://github.com/gliderlabs/docker-alpine/issues/11:\n# 1. install GLibc (which is not the cleanest solution at all)\n# 2. hotfix /etc/nsswitch.conf, which is apperently required by glibc and is not used in Alpine Linux\n\n# Install glibc\nRUN apk add --update wget ca-certificates && \\\n    export ALPINE_GLIBC_BASE_URL=\"https://circle-artifacts.com/gh/andyshinn/alpine-pkg-glibc/6/artifacts/0/home/ubuntu/alpine-pkg-glibc/packages/x86_64\" && \\\n    export ALPINE_GLIBC_PACKAGE=\"glibc-2.21-r2.apk\" && \\\n    export ALPINE_GLIBC_BIN_PACKAGE=\"glibc-bin-2.21-r2.apk\" && \\\n    wget \"$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE\" \"$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_BIN_PACKAGE\" && \\\n    apk add --allow-untrusted \"$ALPINE_GLIBC_PACKAGE\" \"$ALPINE_GLIBC_BIN_PACKAGE\" && \\\n    /usr/glibc/usr/bin/ldconfig \"/lib\" \"/usr/glibc/usr/lib\" && \\\n    echo 'hosts: files mdns4_minimal [NOTFOUND=return] dns mdns4' >> /etc/nsswitch.conf && \\\n    apk del wget ca-certificates && \\\n    rm \"$ALPINE_GLIBC_PACKAGE\" \"$ALPINE_GLIBC_BIN_PACKAGE\" /var/cache/apk/*\n\n# Install python compiled for glibc\nRUN apk add --update bash wget ca-certificates && \\\n    wget \"https://repo.continuum.io/miniconda/Miniconda-latest-Linux-x86_64.sh\" && \\\n    bash ./Miniconda-latest-Linux-x86_64.sh -b -p /usr/local/miniconda && \\\n    rm ./Miniconda-latest-Linux-x86_64.sh && \\\n    ln -s ../miniconda/bin/* /usr/local/bin/ && \\\n    apk del bash wget && \\\n    rm /var/cache/apk/*\n\n#RUN /usr/glibc/usr/bin/ldconfig /lib /usr/local/miniconda/lib\nENV PATH /usr/local/miniconda/bin:$PATH\nRUN conda install -y numpy libgcc freetype pyzmq swig scipy jupyter matplotlib requests ipykernel\nRUN python -m ipykernel.kernelspec\nRUN pip install --no-cache-dir https://storage.googleapis.com/tensorflow/linux/cpu/tensorflow-0.5.0-cp27-none-linux_x86_64.whl\n\nADD jupyter_notebook_config.py /root/.jupyter/\nADD run_jupyter.sh  /\nEXPOSE 6006/tcp\nEXPOSE 8888/tcp\nCMD [\"/bin/sh\"]\n"
}