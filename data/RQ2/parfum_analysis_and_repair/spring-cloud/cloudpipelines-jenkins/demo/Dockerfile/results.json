{
  "startTime": 1674217346734,
  "endTime": 1674217347889,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 78
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 27,
        "columnEnd": 103
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 144
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Useful:\n#   http://www.catosplace.net/blog/2015/02/11/running-jenkins-in-docker-containers/\n#   https://github.com/jenkinsci/docker#preinstalling-plugins\n#   https://engineering.riotgames.com/news/jenkins-docker-proxies-and-compose\n\nFROM jenkins/jenkins:2.178-jdk11\n\nLABEL maintainer \"Marcin Grzejszczak <mgrzejszczak@pivotal.io>\"\n\nSHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\n\nENV DEBIAN_FRONTEND=noninteractive\nENV ANSIBLE_VERSION 2.6.3\nENV JAVA_OPTS -Djenkins.install.runSetupWizard=false \\\n              -Djava.awt.headless=true \\\n              -Dhudson.model.ParametersAction.keepUndefinedParameters=true \\\n              -Dpermissive-script-security.enabled=no_security\n\nARG gituser=changeme\nARG gitpass=changeme\nARG gitsshkey=\nARG dockerRegistryOrg=changeme\nARG dockerRegistryUser=changeme\nARG dockerRegistryPass=changeme\nARG dockerRegistryEmail=changeme\n\nCOPY seed/init.groovy /usr/share/jenkins/ref/init.groovy\nCOPY seed/jenkins_pipeline.groovy /usr/share/jenkins/jenkins_pipeline.groovy\nCOPY seed/settings.xml /usr/share/jenkins/settings.xml\nCOPY plugins.txt /usr/share/jenkins/plugins.txt\nCOPY seed/k8s/* /usr/share/jenkins/cert/\n\nUSER root\n\n# Generated via `start.sh`. If you don't want to provide it just put empty\n# files there\nRUN echo -n \"${gituser}\" > /usr/share/jenkins/gituser && \\\n    echo -n \"${gitpass}\" > /usr/share/jenkins/gitpass && \\\n    echo -n \"${gitsshkey}\" > /usr/share/jenkins/gitsshkey && \\\n    echo -n \"${dockerRegistryUser}\" > /usr/share/jenkins/dockerRegistryUser && \\\n    echo -n \"${dockerRegistryPass}\" > /usr/share/jenkins/dockerRegistryPass && \\\n    echo -n \"${dockerRegistryEmail}\" > /usr/share/jenkins/dockerRegistryEmail && \\\n    chmod 400 /usr/share/jenkins/gitsshkey\n\n# Default mysql credentials - you can modify them as you please. You can\n# parametrize them so that values are not hardcoded\nRUN echo -n rootpassword > /usr/share/jenkins/mySqlRootPass && \\\n    echo -n username > /usr/share/jenkins/mySqlPass && \\\n    echo -n password > /usr/share/jenkins/mySqlUser\n\n# Install tools needed by the master worker for building apps\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends ruby curl jq apt-transport-https ca-certificates && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/*\n\n# Install cf-cli\nRUN curl -f -sL https://packages.cloudfoundry.org/debian/cli.cloudfoundry.org.key | apt-key add - && \\\n    echo \"deb https://packages.cloudfoundry.org/debian stable main\" | tee /etc/apt/sources.list.d/cloudfoundry-cli.list && \\\n    apt-get update && \\\n    apt-get install -y --no-install-recommends cf-cli && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/*\n\n# Install kubectl\nRUN KUBERNETES_VERSION=\"$( curl -f -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)\" && \\\n    curl -f -o /usr/local/bin/kubectl -LO \"https://storage.googleapis.com/kubernetes-release/release/${KUBERNETES_VERSION}/bin/linux/amd64/kubectl\" && \\\n    chmod 755 /usr/local/bin/kubectl\n\n# Install Ansible\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends python-dev python-pip python-setuptools && \\\n    pip install --no-cache-dir ansible==${ANSIBLE_VERSION} && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/*\n\n# Making docker in docker possible\nRUN echo \"deb https://apt.dockerproject.org/repo debian-jessie main\" | tee /etc/apt/sources.list.d/docker.list && \\\n\techo \"deb https://packages.docker.com/1.12/apt/repo/ ubuntu-xenial main\" | tee /etc/apt/sources.list.d/docker.list && \\\n    # apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 58118E89F3A912897C070ADBF76221572C52609D && \\\n    apt-get update && \\\n    apt-get install -y --no-install-recommends --allow-unauthenticated docker-engine && \\\n    echo \"jenkins ALL=NOPASSWD: /usr/bin/docker\" >> /etc/sudoers && \\\n    echo \"jenkins ALL=NOPASSWD: /usr/local/bin/docker-compose\" >> /etc/sudoers && \\\n    echo 'Defaults  env_keep += \"HOME\"' >> /etc/sudoers && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/*\n\n# You can use Jenkins API to generate the list of plugins from a running\n# Jenkins instance:\n#\n#  $ JENKINS_URL=\"https://user:pass@localhost:8080\"\n#  $ curl -sSL \"${JENKINS_URL}/pluginManager/api/json?depth=1\" | \\\n#    jq -r '.plugins[] | .shortName +\":\"+ .version' | sort > plugins.txt\n#\n# You have to install the plugins manually\n# RUN install-plugins.sh $( paste -sd' ' /usr/share/jenkins/plugins.txt )\n"
}