{
  "startTime": 1674248084285,
  "endTime": 1674248085651,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 7,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 11,
        "columnStart": 22,
        "columnEnd": 56
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 11,
        "columnStart": 22,
        "columnEnd": 56
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM continuumio/miniconda3:latest\nMAINTAINER Kael Dai <kaeld@alleninstitute.org>\n\nRUN apt-get update && apt-get install --no-install-recommends -y automake \\\n                                         libtool \\\n                                         build-essential \\\n                                         libncurses5-dev \\\n                                         git \\\n                                         software-properties-common \\\n                                         dpkg-dev \\\n                                         cmake \\\n                                         libopenblas-dev && rm -rf /var/lib/apt/lists/*;\n\nENV BUILD_DIR=/home/build\nENV HOME_DIR=/home/shared\nENV WORK_DIR=${HOME_DIR}/workspace\nENV PYTHON_VER=3.9\nENV PYTHON_ENV=python${PYTHON_VER}\n\nENV GIT_REPO=https://github.com/AllenInstitute/bmtk.git\nENV GIT_BRANCH=develop\n\nRUN mkdir -p ${BUILD_DIR}\nRUN mkdir -p ${HOME_DIR}\nRUN mkdir -p ${WORK_DIR}\n\n#RUN conda update -n base -c defaults conda \\\n#    && conda install python=3.6\nRUN conda install -y numpy h5py lxml pandas matplotlib jsonschema scipy sympy jupyter # cmake #  anaconda mpi4py mpich-mpicc\n\n\n### Install NEURON for BioNet\nRUN pip install --no-cache-dir neuron\n\n\n### Install NEST for PointNet\n#RUN conda install -c conda-forge nest-simulator==2.20.0\n#RUN add-apt-repository --enable-source ppa:nest-simulator/nest && \\\n#    apt-get update && \\\n#    apt-clean && \\\n#    apt-get install -y nest\nENV NEST_VER=2.20.0\nENV NEST_INSTALL_DIR=${BUILD_DIR}/nest/build\n\nRUN cd ${BUILD_DIR} \\\n    && conda install -y gsl cython \\\n    && wget --quiet https://github.com/nest/nest-simulator/archive/v${NEST_VER}.tar.gz -O nest.tar.gz \\\n    && tar xfz nest.tar.gz \\\n    && cd nest-simulator-${NEST_VER} \\\n    && mkdir build && cd build \\\n    && cmake -DCMAKE_INSTALL_PREFIX=${NEST_INSTALL_DIR} -Dwith-gsl=ON -Dwith-python=ON -Dwith-ltdl=ON .. \\\n    && make \\\n    && make install && rm nest.tar.gz\n\n# Taken from /home/shared/nest/bin/nest_vars.sh, needed to run nest and pynest in jupyter\nENV NEST_DATA_DIR \"${NEST_INSTALL_DIR}/share/nest\"\nENV NEST_DOC_DIR \"${NEST_INSTALL_DIR}/share/doc/nest\"\nENV NEST_MODULE_PATH \"${NEST_INSTALL_DIR}/lib/nest\"\nENV NEST_PYTHON_PREFIX \"${NEST_INSTALL_DIR}/lib/${PYTHON_ENV}/site-packages\"\nENV PYTHONPATH \"${NEST_PYTHON_PREFIX}:${PYTHONPATH}\"\nENV PATH \"${NEST_INSTALL_DIR}/bin:${PATH}\"\n\n\n### Install DiPDE for PopNet\nRUN cd ${BUILD_DIR}; \\\n    git clone https://github.com/AllenInstitute/dipde.git dipde; \\\n    pwd; \\\n    cd dipde; \\\n    pip install --no-cache-dir -e .;\n\n\n### Install AllenSDK (Not used by bmtk, but used by some notebooks to fetch cell-types files)\n# RUN pip install allensdk\n\n\n### Install the bmtk\nRUN cd ${BUILD_DIR} \\\n#    && git clone --branch feature/modeling_tutorial https://github.com/kaeldai/bmtk.git \\\n    && git clone --branch ${GIT_BRANCH} ${GIT_REPO} \\\n    && cd bmtk \\\n    && python setup.py install\n\n\n# Setup the examples and tutorials\nRUN cd ${BUILD_DIR}/bmtk; \\\n    cp -R examples ${HOME_DIR}; \\\n    cp -R docs/tutorial ${HOME_DIR}\n\n\n#### Setup components directories for tutorials, including compiling neuron modfiles\n#RUN cd ${HOME_DIR}/tutorial; \\\n#    cp -R ../../examples/*_components .; \\\n#    cd bio_components/mechanisms; \\\n#    nrnivmodl modfiles/\n\n### Pre-compile mechanisms for BioNet examples\nRUN cd ${HOME_DIR}/examples/bio_components/mechanisms; \\\n    nrnivmodl modfiles/\n\n\n### Pre-compile mechanisms for BioNet examples\n# COPY ../docs/tutorial/modeling_tut_2021 ${HOME_DIR}/modeling_tut_2021\n\n\n# RUN cd ${HOME_DIR}/tutorial/modeling_tut_2021\nRUN cd ${HOME_DIR}/tutorial/modeling_tut_2021/components/mechanisms \\\n    && nrnivmodl modfiles/\n\n\n# Create an entry point for running the image\nCOPY entry_script.sh ${BUILD_DIR}\nRUN chmod +x ${BUILD_DIR}/entry_script.sh\n\n\nENTRYPOINT [\"/home/build/entry_script.sh\"]\n"
}