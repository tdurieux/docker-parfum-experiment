{
  "startTime": 1674251051107,
  "endTime": 1674251051692,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 129
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 23
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM rust:1.61.0-slim AS wasm\n\nWORKDIR /wasm\nCOPY ./src/lib .\n\nRUN sed -i -e 's/deb.debian.org/mirrors.tuna.tsinghua.edu.cn/g' -e 's/security.debian.org/mirrors.tuna.tsinghua.edu.cn/g' /etc/apt/sources.list\nRUN apt update && apt install --no-install-recommends -y curl && rm -rf /var/lib/apt/lists/*;\n\nRUN curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh\nRUN wasm-pack build\n\nFROM node:18 AS builder\n\nWORKDIR /app\n\n# RUN yarn global add @sentry/cli\nRUN curl -f -L https://github.com/getsentry/sentry-cli/releases/download/1.63.1/sentry-cli-Linux-x86_64 -o /usr/local/bin/sentry-cli\nRUN chmod +x /usr/local/bin/sentry-cli\n\nADD package.json .\nADD yarn.lock .\nRUN yarn install --frozen-lockfile && yarn cache clean;\nCOPY --from=wasm /wasm/pkg /app/src/lib/pkg\n\nADD . .\n\nRUN ln -s config.example.js src/config.js\nARG backend\nARG sentry\nARG base\n\nARG commit_sha\nRUN PUBLIC_URL=$base CI_COMMIT_SHA=$commit_sha REACT_APP_BACKEND=$backend REACT_APP_SENTRY=$sentry yarn build\n\nARG sentry_config\nRUN echo $sentry_config | base64 -d > .sentryclirc\nRUN sentry-cli releases new $commit_sha\nRUN sentry-cli releases files $commit_sha upload-sourcemaps /app/build --url-prefix ~$base --validate\nRUN sentry-cli releases finalize $commit_sha\n\nFROM nginx:1.18-alpine\nENV TZ=Asia/Shanghai\nCOPY nginx.conf /etc/nginx/conf.d/default.conf\nCOPY mime.types /etc/nginx/mime.types\nCOPY --from=builder /app/build /usr/share/nginx/html/jie\n"
}