{
  "startTime": 1674219040223,
  "endTime": 1674219041340,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 2,
        "columnEnd": 65
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 82
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 82
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 17,
        "columnStart": 2,
        "columnEnd": 76
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 17,
        "columnStart": 2,
        "columnEnd": 76
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# FROM python:3.6-alpine\nFROM matthewfeickert/docker-python3-ubuntu:3.6.8\n\nENV PYTHONUNBUFFERED 1\n\nUSER root\n\nRUN apt-get -qq -y update && \\\n  apt-get -qq -y upgrade && \\\n  apt-get -qq --no-install-recommends -y install \\\n  # Pip dependencies\n  python3-pip \\\n  # Postgres dependencies\n  libpq-dev postgresql-client python-psycopg2 \\\n  # Tesseract dependencies\n  libjpeg-turbo8 libtiff5 \\\n  # LibreOffice dependencies\n  libnss3-dev libcurl4-nss-dev libxslt1-dev libpixman-1-0 libxcb-render0-dev && \\\n  # Symlink bash and python\n  ln -sf bash /bin/sh && rm -f /usr/bin/python && \\\n  ln -s /usr/bin/python3 /usr/bin/python && \\\n  curl -f https://bootstrap.pypa.io/pip/3.6/get-pip.py -o get-pip.py && \\\n  python3 get-pip.py --force-reinstall && rm -rf /var/lib/apt/lists/*;\n\n# set up makecert root CA\nRUN curl -f https://localhost/rootCA.pem > /usr/local/share/ca-certificates/rootCA.crt && update-ca-certificates\n\n# Requirements are installed here to ensure they will be cached.\nCOPY ./requirements /requirements\n# RUN pip install --upgrade pip && pip install -r /requirements/local.txt\nRUN pip install --no-cache-dir -r /requirements/local.txt\n\nCOPY ./compose/production/django/entrypoint /entrypoint\nRUN sed -i 's/\\r//' /entrypoint && chmod +x /entrypoint\n\nCOPY ./compose/local/django/start /start\nRUN sed -i 's/\\r//' /start && chmod +x /start\n\nCOPY ./compose/local/django/celery/worker/start /start-celeryworker\nRUN sed -i 's/\\r//' /start-celeryworker && chmod +x /start-celeryworker\n\nCOPY ./compose/local/django/celery/beat/start /start-celerybeat\nRUN sed -i 's/\\r//' /start-celerybeat && chmod +x /start-celerybeat\n\nCOPY ./compose/local/django/celery/flower/start /start-flower\nRUN sed -i 's/\\r//' /start-flower && chmod +x /start-flower\n\n# =-=-=-=-=-=\n# Entry point\n# =-=-=-=-=-=\n\n# Temporary measure to get pip-compile to work\n# RUN pip install 'pip<19.2'\n\nWORKDIR /app\n\nENV LD_LIBRARY_PATH /app/documentcloud/documents/processing/ocr/tesseract\n\nENTRYPOINT [\"/entrypoint\"]\n"
}