diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/muckrock/muckrock/compose/local/django/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/muckrock/muckrock/compose/local/django/Dockerfile/repaired.Dockerfile
index bd28547..bfba2b4 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/muckrock/muckrock/compose/local/django/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/muckrock/muckrock/compose/local/django/Dockerfile/repaired.Dockerfile
@@ -1,4 +1,3 @@
-# syntax = docker/dockerfile:experimental
 FROM python:3.8
 
 ENV PYTHONUNBUFFERED 1
@@ -22,22 +21,22 @@ RUN apt-get update && apt-get install -y --no-install-recommends \
   # for numpy / scipy
   #&& apt-get install openblas-dev gfortran g++ \
   # memcahced
-  libmemcached-dev
+  libmemcached-dev && rm -rf /var/lib/apt/lists/*;
   # for imagediet
   #&& apt-get install libmagic
 
 # set up makecert root CA
-RUN curl http://localhost/rootCA.pem > /usr/local/share/ca-certificates/rootCA.crt && update-ca-certificates
+RUN curl -f https://localhost/rootCA.pem > /usr/local/share/ca-certificates/rootCA.crt && update-ca-certificates
 
 # heroku cli
-RUN curl https://cli-assets.heroku.com/install.sh | sh
+RUN curl -f https://cli-assets.heroku.com/install.sh | sh
 
 # install NVM
 ENV NVM_DIR /usr/local/nvm
 ENV NODE_VERSION 5.6.0
 
 RUN mkdir $NVM_DIR
-RUN curl https://raw.githubusercontent.com/creationix/nvm/v0.34.0/install.sh | bash \
+RUN curl -f https://raw.githubusercontent.com/creationix/nvm/v0.34.0/install.sh | bash \
     && . $NVM_DIR/nvm.sh \
     && nvm install $NODE_VERSION \
     && nvm alias default $NODE_VERSION \
@@ -48,8 +47,8 @@ ENV PATH      $NVM_DIR/versions/node/v$NODE_VERSION/bin:$PATH
 
 # Requirements are installed here to ensure they will be cached.
 COPY ./pip /pip
-RUN --mount=type=cache,target=/root/.cache/pip pip install -r /pip/requirements.txt
-RUN --mount=type=cache,target=/root/.cache/pip pip install -r /pip/dev-requirements.txt
+RUN --mount=type=cache,target=/root/.cache/pip pip install --no-cache-dir -r /pip/requirements.txt
+RUN --mount=type=cache,target=/root/.cache/pip pip install --no-cache-dir -r /pip/dev-requirements.txt
 
 COPY ./compose/production/django/entrypoint /entrypoint
 RUN sed -i 's/\r//' /entrypoint