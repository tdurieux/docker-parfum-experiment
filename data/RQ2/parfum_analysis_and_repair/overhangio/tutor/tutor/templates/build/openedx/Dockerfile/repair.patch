diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/overhangio/tutor/tutor/templates/build/openedx/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/overhangio/tutor/tutor/templates/build/openedx/Dockerfile/repaired.Dockerfile
index e86afce..8d5739b 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/overhangio/tutor/tutor/templates/build/openedx/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/overhangio/tutor/tutor/templates/build/openedx/Dockerfile/repaired.Dockerfile
@@ -4,7 +4,7 @@ LABEL maintainer="Overhang.io <contact@overhang.io>"
 
 ENV DEBIAN_FRONTEND=noninteractive
 RUN apt update && \
-    apt install -y build-essential curl git language-pack-en
+    apt install --no-install-recommends -y build-essential curl git language-pack-en && rm -rf /var/lib/apt/lists/*;
 ENV LC_ALL en_US.UTF-8
 {{ patch("openedx-dockerfile-minimal") }}
 
@@ -12,9 +12,9 @@ ENV LC_ALL en_US.UTF-8
 FROM minimal as python
 # https://github.com/pyenv/pyenv/wiki/Common-build-problems#prerequisites
 RUN apt update && \
-    apt install -y libssl-dev zlib1g-dev libbz2-dev \
+    apt install --no-install-recommends -y libssl-dev zlib1g-dev libbz2-dev \
     libreadline-dev libsqlite3-dev wget curl llvm libncurses5-dev libncursesw5-dev \
-    xz-utils tk-dev libffi-dev liblzma-dev python-openssl git
+    xz-utils tk-dev libffi-dev liblzma-dev python-openssl git && rm -rf /var/lib/apt/lists/*;
 ARG PYTHON_VERSION=3.8.12
 ENV PYENV_ROOT /opt/pyenv
 RUN git clone https://github.com/pyenv/pyenv $PYENV_ROOT --branch v2.2.2 --depth 1
@@ -69,18 +69,18 @@ FROM minimal as locales
 # ARG OPENEDX_I18N_VERSION={{ OPENEDX_COMMON_VERSION }}
 ARG OPENEDX_I18N_VERSION=open-release/nutmeg.master
 RUN cd /tmp \
-    && curl -L -o openedx-i18n.tar.gz https://github.com/openedx/openedx-i18n/archive/$OPENEDX_I18N_VERSION.tar.gz \
+    && curl -f -L -o openedx-i18n.tar.gz https://github.com/openedx/openedx-i18n/archive/$OPENEDX_I18N_VERSION.tar.gz \
     && tar xzf /tmp/openedx-i18n.tar.gz \
     && mkdir -p /openedx/locale/contrib \
     && mv openedx-i18n-*/edx-platform/locale /openedx/locale/contrib \
-    && rm -rf openedx-i18n*
+    && rm -rf openedx-i18n* && rm /tmp/openedx-i18n.tar.gz
 
 ###### Install python requirements in virtualenv
 FROM python as python-requirements
 ENV PATH /openedx/venv/bin:${PATH}
 ENV VIRTUAL_ENV /openedx/venv/
 
-RUN apt update && apt install -y software-properties-common libmysqlclient-dev libxmlsec1-dev libgeos-dev
+RUN apt update && apt install --no-install-recommends -y software-properties-common libmysqlclient-dev libxmlsec1-dev libgeos-dev && rm -rf /var/lib/apt/lists/*;
 
 # Note that this means that we need to reinstall all requirements whenever there is a
 # change in edx-platform, which sucks. But there is no obvious alternative, as we need
@@ -92,18 +92,18 @@ WORKDIR /openedx/edx-platform
 # https://pypi.org/project/setuptools/
 # https://pypi.org/project/pip/
 # https://pypi.org/project/wheel/
-RUN pip install setuptools==62.1.0 pip==22.0.4 wheel==0.37.1
+RUN pip install --no-cache-dir setuptools==62.1.0 pip==22.0.4 wheel==0.37.1
 
 # Install base requirements
-RUN pip install -r ./requirements/edx/base.txt
+RUN pip install --no-cache-dir -r ./requirements/edx/base.txt
 
 # Install django-redis for using redis as a django cache
 # https://pypi.org/project/django-redis/
-RUN pip install django-redis==5.2.0
+RUN pip install --no-cache-dir django-redis==5.2.0
 
 # Install uwsgi
 # https://pypi.org/project/uWSGI/
-RUN pip install uwsgi==2.0.20
+RUN pip install --no-cache-dir uwsgi==2.0.20
 
 {{ patch("openedx-dockerfile-post-python-requirements") }}
 
@@ -111,7 +111,7 @@ RUN pip install uwsgi==2.0.20
 COPY ./requirements/ /openedx/requirements
 RUN cd /openedx/requirements/ \
   && touch ./private.txt \
-  && pip install -r ./private.txt
+  && pip install --no-cache-dir -r ./private.txt
 
 {% for extra_requirements in OPENEDX_EXTRA_PIP_REQUIREMENTS %}RUN pip install '{{ extra_requirements }}'
 {% endfor %}
@@ -121,7 +121,7 @@ FROM python as nodejs-requirements
 ENV PATH /openedx/nodeenv/bin:/openedx/venv/bin:${PATH}
 
 # Install nodeenv with the version provided by edx-platform
-RUN pip install nodeenv==1.6.0
+RUN pip install --no-cache-dir nodeenv==1.6.0
 RUN nodeenv /openedx/nodeenv --node=12.13.0 --prebuilt
 
 # Install nodejs requirements
@@ -136,7 +136,7 @@ FROM minimal as production
 
 # Install system requirements
 RUN apt update && \
-    apt install -y gettext gfortran graphviz graphviz-dev libffi-dev libfreetype6-dev libgeos-dev libjpeg8-dev liblapack-dev libmysqlclient-dev libpng-dev libsqlite3-dev libxmlsec1-dev lynx ntp pkg-config rdfind && \
+    apt install --no-install-recommends -y gettext gfortran graphviz graphviz-dev libffi-dev libfreetype6-dev libgeos-dev libjpeg8-dev liblapack-dev libmysqlclient-dev libpng-dev libsqlite3-dev libxmlsec1-dev lynx ntp pkg-config rdfind && \
     rm -rf /var/lib/apt/lists/*
 
 # From then on, run as unprivileged "app" user
@@ -160,7 +160,7 @@ ENV VIRTUAL_ENV /openedx/venv/
 WORKDIR /openedx/edx-platform
 
 # Re-install local requirements, otherwise egg-info folders are missing
-RUN pip install -r requirements/edx/local.in
+RUN pip install --no-cache-dir -r requirements/edx/local.in
 
 # Create folder that will store lms/cms.env.yml files, as well as
 # the tutor-specific settings files.
@@ -230,13 +230,13 @@ FROM production as development
 # Install useful system requirements (as root)
 USER root
 RUN apt update && \
-    apt install -y vim iputils-ping dnsutils telnet \
+    apt install --no-install-recommends -y vim iputils-ping dnsutils telnet \
     && rm -rf /var/lib/apt/lists/*
 USER app
 
 # Install dev python requirements
-RUN pip install -r requirements/edx/development.txt
-RUN pip install ipdb==0.13.4 ipython==7.27.0
+RUN pip install --no-cache-dir -r requirements/edx/development.txt
+RUN pip install --no-cache-dir ipdb==0.13.4 ipython==7.27.0
 
 # Add ipdb as default PYTHONBREAKPOINT
 ENV PYTHONBREAKPOINT=ipdb.set_trace