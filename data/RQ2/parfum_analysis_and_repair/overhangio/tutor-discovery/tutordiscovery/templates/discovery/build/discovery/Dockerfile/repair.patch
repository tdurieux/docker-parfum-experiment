diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/overhangio/tutor-discovery/tutordiscovery/templates/discovery/build/discovery/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/overhangio/tutor-discovery/tutordiscovery/templates/discovery/build/discovery/Dockerfile/repaired.Dockerfile
index dc74092..885f17f 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/overhangio/tutor-discovery/tutordiscovery/templates/discovery/build/discovery/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/overhangio/tutor-discovery/tutordiscovery/templates/discovery/build/discovery/Dockerfile/repaired.Dockerfile
@@ -2,8 +2,8 @@ FROM docker.io/ubuntu:20.04
 
 ENV DEBIAN_FRONTEND=noninteractive
 RUN apt update && \
-  apt install -y curl git-core language-pack-en python3 python3-pip python3-venv \
-  build-essential libffi-dev libmysqlclient-dev libxml2-dev libxslt-dev libjpeg-dev libssl-dev
+  apt install --no-install-recommends -y curl git-core language-pack-en python3 python3-pip python3-venv \
+  build-essential libffi-dev libmysqlclient-dev libxml2-dev libxslt-dev libjpeg-dev libssl-dev && rm -rf /var/lib/apt/lists/*;
 ENV LC_ALL en_US.UTF-8
 
 ARG APP_USER_ID=1000
@@ -26,10 +26,10 @@ ENV PATH "/openedx/venv/bin:$PATH"
 # https://pypi.org/project/setuptools/
 # https://pypi.org/project/pip/
 # https://pypi.org/project/wheel/
-RUN pip install setuptools==62.1.0 pip==22.0.4 wheel==0.37.1
+RUN pip install --no-cache-dir setuptools==62.1.0 pip==22.0.4 wheel==0.37.1
 
 # Install a recent version of nodejs
-RUN pip install nodeenv
+RUN pip install --no-cache-dir nodeenv
 # nodejs version picked from https://github.com/openedx/course-discovery/blob/master/Dockerfile
 RUN nodeenv /openedx/nodeenv --node=16.14.2 --prebuilt
 ENV PATH /openedx/nodeenv/bin:${PATH}
@@ -37,18 +37,18 @@ ENV PATH /openedx/nodeenv/bin:${PATH}
 # Install python and nodejs requirements
 # This is identical to "make production-requirements" but it was split in multiple
 # instructions to benefit from docker image caching
-RUN pip install -r requirements.txt
+RUN pip install --no-cache-dir -r requirements.txt
 ARG NPM_REGISTRY=https://registry.npmjs.org/
-RUN npm install --verbose --registry=$NPM_REGISTRY --production
+RUN npm install --verbose --registry=$NPM_REGISTRY --production && npm cache clean --force;
 RUN ./node_modules/.bin/bower install --allow-root --production
 
 # Install django-redis for using redis as a django cache
 # https://pypi.org/project/django-redis/
-RUN pip install django-redis==5.2.0
+RUN pip install --no-cache-dir django-redis==5.2.0
 
 # Install uwsgi
 # https://pypi.org/project/uWSGI/
-RUN pip install uwsgi==2.0.20
+RUN pip install --no-cache-dir uwsgi==2.0.20
 
 # Collect static assets
 COPY --chown=app:app assets.py ./course_discovery/settings/assets.py