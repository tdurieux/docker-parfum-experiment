{
  "startTime": 1674255909165,
  "endTime": 1674255909877,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 27
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 51
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:20.04\nENV BUILD_THREADS=4\n\nENV TZ=Europe/London\nRUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone\n\nCOPY ./environment/apt-list /opt/apt-list\n\n# install all deps. We use a single apt call to improve first-build speed\n# bash line removes lines with comments and newlines.\nRUN apt-get update && \\\n    cat /opt/apt-list | \\\n    sed 's/#.*$//g' | \\\n    sed '/^$/d' | \\\n    tr '\\n' ' ' | \\\n    xargs apt-get install -y\n\n\n# python packages\nCOPY ./environment/dev_requirements.txt /opt/\nCOPY ./environment/install_requirements.txt /opt/\nRUN pip install --no-cache-dir --upgrade pip\n# Installing first pip-licenses so we can track what licenses/versions of packages\nRUN pip install --no-cache-dir -U pip-licenses\nRUN pip install --no-cache-dir -r /opt/dev_requirements.txt\nRUN pip install --no-cache-dir -r /opt/install_requirements.txt\n\n\n# User credentials:\nARG USERNAME\nARG USER_UID\nARG USER_GID\n\n# Create the user\nRUN (groupadd --gid $USER_GID $USERNAME; exit 0) && \\\n    useradd --uid $USER_UID --gid $USER_GID -m $USERNAME && \\\n    mkdir -p /home/$USERNAME/.vscode-server /home/$USERNAME/.vscode-server-insiders && \\\n    chown ${USER_UID}:${USER_GID} /home/$USERNAME/.vscode-server*\n\n# Add sudo support to install extra software if needed\nRUN apt-get install --no-install-recommends -y sudo && \\\n    echo $USERNAME ALL=\\(root\\) NOPASSWD:ALL > /etc/sudoers.d/$USERNAME && \\\n    chmod 0440 /etc/sudoers.d/$USERNAME && rm -rf /var/lib/apt/lists/*;\n\n# Clean up\nRUN apt-get autoremove -y && \\\n    apt-get clean -y && \\\n    rm -rf /var/lib/apt/lists/*\n\n# Switch to the user\nUSER $USERNAME\n\nENV DEBIAN_FRONTEND=dialog\nENV PYTHONPATH=${PYTHONPATH}:/workdir\n\n\nCMD [ \"/bin/bash\" ]\n"
}