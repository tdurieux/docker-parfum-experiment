{
  "startTime": 1674251571195,
  "endTime": 1674251572163,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 83
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 22,
        "columnEnd": 47
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 22,
        "columnEnd": 84
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 22,
        "columnEnd": 47
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 22,
        "columnEnd": 84
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# poetry-build: export poetry deps to requirements.txt\n# this is seperate from backend-build so that poetry deps don't end\n# among the python modules that will be copied to the final image\nFROM python:3.9.0-slim as poetry-build\nRUN python -m pip install -U pip poetry\nWORKDIR /build\nCOPY oas_worker/pyproject.toml pyproject.toml\nCOPY oas_worker/poetry.lock poetry.lock\nRUN poetry export -f requirements.txt --without-hashes -o /build/requirements.txt\n\n# backend-build: install all python deps from requirements.txt to /build/pip\nFROM python:3.9.0-slim as backend-build\nRUN apt-get update && apt-get install --no-install-recommends -q -y gcc && rm -rf /var/lib/apt/lists/*;\nWORKDIR /build\nCOPY --from=poetry-build /build/requirements.txt .\nRUN pip install --no-cache-dir --prefix=\"/build/pip\" --no-warn-script-location -r requirements.txt\n\n# python-base: base image with a few utilities installed\nFROM python:3.9.0-slim as python-base\nRUN apt-get update && apt-get install --no-install-recommends -q -y wget curl xz-utils iputils-ping iproute2 && rm -rf /var/lib/apt/lists/*;\n\n# build main image\nFROM python-base\nCOPY --from=backend-build /build/pip/ /usr/local\n# copy a static build of ffmpeg (this leads to a much smaller image\n# than installing ffmpeg via apt)\nCOPY --from=mwader/static-ffmpeg:4.4.1 /ffmpeg /usr/local/bin/\nCOPY --from=mwader/static-ffmpeg:4.4.1 /ffprobe /usr/local/bin/\nCOPY oas_worker /app\nWORKDIR /app\nENV STORAGE_PATH=\"/data\"\nCMD [\"./start-worker-docker.sh\"]\n"
}