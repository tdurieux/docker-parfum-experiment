{
  "startTime": 1674252901813,
  "endTime": 1674252904170,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 22,
        "columnEnd": 45
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 22,
        "columnEnd": 45
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# frontend-build: build frontend with yarn\nFROM node:14-alpine as frontend-build\nWORKDIR /app/frontend\nCOPY frontend /app/frontend\nRUN yarn && yarn run build\n\n# use the cargo-chef base image\nFROM lukemathwalker/cargo-chef:latest-rust-1.56-slim-buster as base\n\n# prepare the cargo-chef build\nFROM base as planner\nWORKDIR app\nCOPY Cargo.toml .\nCOPY rust rust\nRUN cargo chef prepare  --recipe-path recipe.json\n\n# build dependencies with cargo-chef\nFROM base as cacher\nWORKDIR app\nCOPY --from=planner /app/recipe.json recipe.json\nRUN cargo chef cook --release --recipe-path recipe.json\n\n# build the main binary\nFROM base as builder\nWORKDIR app\nCOPY Cargo.toml .\nCOPY rust rust\nCOPY config config\n# copy the built frontend\nCOPY --from=frontend-build /app/frontend/dist frontend/dist\n# copy the built dependencies from previous image\nCOPY --from=cacher /app/target target\nCOPY --from=cacher /usr/local/cargo /usr/local/cargo\nENV BUILD_FRONTEND=\"0\"\nRUN cargo build --release --bin oas\n\n# build the main image\nFROM debian:buster-slim as runtime\nRUN apt-get update && apt-get install --no-install-recommends -y curl && rm -rf /var/lib/apt/lists/*;\nWORKDIR app\nCOPY --from=builder /app/target/release/oas /usr/local/bin\nCMD [\"/usr/local/bin/oas\", \"run\"]\n"
}