diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/papenfusslab/gridss/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/papenfusslab/gridss/Dockerfile/repaired.Dockerfile
index 15a38f8..b91adac 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/papenfusslab/gridss/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/papenfusslab/gridss/Dockerfile/repaired.Dockerfile
@@ -5,7 +5,7 @@ RUN sed -i -e 's/http:\/\/archive\.ubuntu\.com\/ubuntu\//mirror:\/\/mirrors\.ubu
 
 # Set up a C build environment for gridsstools, samtools, and R packages
 FROM gridss_base_closest_mirror AS gridss_c_build_environment
-RUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y \
+RUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y \
 	libssl-dev \
 	libcurl4-openssl-dev \
 	libxml2-dev \
@@ -29,9 +29,9 @@ ARG GRIDSS_VERSION
 COPY src/main/c /opt/gridss/src/main/c
 COPY src/test/resources /opt/gridss/src/test/resources
 RUN cd /opt/gridss/src/main/c/gridsstools/htslib && \
-	autoreconf -i && ./configure && make -j 8 && \
+	autoreconf -i && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" && make -j 8 && \
 	cd .. && \
-	autoreconf -i && ./configure && make -j 8 && \
+	autoreconf -i && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" && make -j 8 && \
 	cp gridsstools /opt/gridss/
 
 # compile GRIDSS Java code
@@ -52,7 +52,7 @@ RUN mvn -T 1C -Drevision=${GRIDSS_VERSION} package && \
 FROM gridss_c_build_environment AS gridss
 # Setup CRAN ubuntu package repository
 # apt-get clean not required for ubuntu images
-RUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y \
+RUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y \
 		apt-transport-https \
 		software-properties-common \
 		dirmngr \
@@ -61,7 +61,7 @@ RUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y \
 	--keyserver hkp://keyserver.ubuntu.com:80 \
 	--recv-keys 0xE298A3A825C0D65DFD57CBB651716619E084DAB9 && \
 	add-apt-repository 'deb https://cloud.r-project.org/bin/linux/ubuntu focal-cran40/' && \
-	apt-get update && apt-get install -y \
+	apt-get update && apt-get install --no-install-recommends -y \
 		apt-utils \
 		gawk \
 		openjdk-11-jre-headless \
@@ -86,24 +86,24 @@ RUN mkdir /opt/samtools && \
 	cd samtools-1.14 && \
 	autoheader && \
 	autoconf -Wno-syntax && \
-	./configure && \
+	./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" && \
 	make install && \
 	cd ~ && \
-	rm -rf /opt/samtools
+	rm -rf /opt/samtools && rm samtools-1.14.tar.bz2
 ### Repeat Masker and dependencies
 RUN mkdir /opt/trf && \
 	cd /opt/trf && \
-	wget http://tandem.bu.edu/trf/downloads/trf407b.linux64 && \
+	wget https://tandem.bu.edu/trf/downloads/trf407b.linux64 && \
 	chmod +x trf*.linux64 && \
 	ln -s trf*.linux64 trf
 # Turns out we need makeblastdb as well as rmblastn (https://github.com/PapenfussLab/gridss/issues/535)
 RUN mkdir /opt/rmblast && \
 	cd /opt/rmblast && \
-	wget http://www.repeatmasker.org/rmblast-2.11.0+-x64-linux.tar.gz && \
+	wget https://www.repeatmasker.org/rmblast-2.11.0+-x64-linux.tar.gz && \
 	tar --no-anchored --strip-components 2 -xvzf rmblast-2.11.0+-x64-linux.tar.gz rmblastn makeblastdb && \
 	rm rmblast-2.11.0+-x64-linux.tar.gz
 RUN cd /opt/ && \
-	wget http://www.repeatmasker.org/RepeatMasker/RepeatMasker-4.1.2-p1.tar.gz && \
+	wget https://www.repeatmasker.org/RepeatMasker/RepeatMasker-4.1.2-p1.tar.gz && \
 	tar zxf RepeatMasker-*.tar.gz && \
 	rm RepeatMasker-*.tar.gz
 ### Kraken2 and dependencies
@@ -113,7 +113,7 @@ RUN mkdir /opt/blast && \
 	wget https://ftp.ncbi.nlm.nih.gov/blast/executables/blast+/2.11.0/ncbi-blast-2.11.0+-x64-linux.tar.gz && \
 	tar zxf ncbi-blast-*.tar.gz && \
 	mv ncbi-blast-*/bin/* . && \
-	rm -r ncbi-blast-*
+	rm -r ncbi-blast-* && rm ncbi-blast-*.tar.gz
 ENV KRAKEN_VERSION=2.1.2
 RUN mkdir /opt/kraken2 && \
 	cd /opt/kraken2 && \