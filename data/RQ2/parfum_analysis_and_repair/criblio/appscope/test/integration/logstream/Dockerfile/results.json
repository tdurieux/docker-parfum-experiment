{
  "startTime": 1674248151200,
  "endTime": 1674248151928,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 53
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM cribl/cribl:3.4.1\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y \\\n        net-tools \\\n        python3.8 \\\n        python3-setuptools \\\n        python3-pip \\\n    && apt-get autoremove && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/*\n\nCOPY logstream/http_status.csv /opt/cribl/data/lookups/http_status.csv\nCOPY logstream/scripts/ /opt/cribl/scripts/\nCOPY logstream/cribl/ /opt/cribl/local/cribl/\n\nRUN mkdir -p /opt/test-runner/logs/\n\nENV SCOPE_CRIBL_ENABLE=false\nENV SCOPE_METRIC_DEST=udp://localhost:8125\nENV SCOPE_LOG_LEVEL=info\nENV SCOPE_LOG_DEST=file:///opt/test-runner/logs/scope.log\nENV SCOPE_METRIC_VERBOSITY=4\nENV SCOPE_EVENT_LOGFILE=true\nENV SCOPE_EVENT_CONSOLE=true\nENV SCOPE_EVENT_METRIC=true\nENV SCOPE_EVENT_HTTP=true\n#ENV SCOPE_EVENT_DEST=tcp://172.16.198.132:9109\n\nCOPY ./test_runner/requirements.txt /opt/test-runner/requirements.txt\nRUN pip3 install --no-cache-dir wheel\nRUN pip3 install --no-cache-dir -r /opt/test-runner/requirements.txt\n\nCOPY ./test_runner/ /opt/test-runner/\n\n# Switching to Python 3.8 required this hack. Not sure where the kafka packages are coming from.\nRUN sed -i 's/\\basync\\b/is_async/g' /usr/local/lib/python3.8/dist-packages/kafka/producer/*.py\n\nENV PATH=\"/usr/local/scope:/usr/local/scope/bin:${PATH}\"\nCOPY scope-profile.sh /etc/profile.d/scope.sh\nCOPY gdbinit /root/.gdbinit\n\nRUN  mkdir /usr/local/scope && \\\n     mkdir /usr/local/scope/bin && \\\n     mkdir /usr/local/scope/lib && \\\n     ln -s /opt/appscope/bin/linux/$(uname -m)/scope /usr/local/scope/bin/scope && \\\n     ln -s /opt/appscope/bin/linux/$(uname -m)/ldscope /usr/local/scope/bin/ldscope && \\\n     ln -s /opt/appscope/lib/linux/$(uname -m)/libscope.so /usr/local/scope/lib/libscope.so\n\nCOPY logstream/scope-test /usr/local/scope/scope-test\n\nCOPY docker-entrypoint.sh /\nENTRYPOINT [\"/docker-entrypoint.sh\"]\nCMD [\"test\"]\n\n"
}