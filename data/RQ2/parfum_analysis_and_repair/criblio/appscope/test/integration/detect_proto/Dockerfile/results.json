{
  "startTime": 1674247965664,
  "endTime": 1674247966658,
  "originalSmells": [
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 37,
        "columnEnd": 63
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM quay.io/centos/centos:stream8\n\nCOPY detect_proto/mongodb.repo /etc/yum.repos.d/.\nRUN yum -y update && \\\n    yum -y install epel-release && \\\n    yum -y install redis wget gdb openssl net-tools && rm -rf /var/cache/yum\nRUN [ \"aarch64\" = \"$(uname -m)\" ] || yum -y install mongodb-org && rm -rf /var/cache/yum\n\nRUN mkdir /opt/test-runner/\nRUN mkdir /opt/test-runner/logs/\nRUN mkdir /opt/test-runner/bin\n\nCOPY detect_proto/mongod.conf /etc/.\nCOPY detect_proto/scope.yml /opt/test-runner/bin/.\nCOPY detect_proto/mongo.js /opt/test-runner/bin/.\n\nCOPY detect_proto/test_protocols.sh /opt/test-runner/bin/test_protocols.sh\nRUN chmod +x /opt/test-runner/bin/test_protocols.sh\n\nADD detect_proto/loaddata.sh /sbin/loaddata.sh\nADD detect_proto/session.csv /data/session.csv\n\nRUN /usr/lib/systemd/systemd --system &\nCMD [\"start\"]\n\nENV SCOPE_CRIBL_ENABLE=false\nENV SCOPE_LOG_LEVEL=info\nENV SCOPE_LOG_DEST=file:///tmp/scope.log\nENV SCOPE_TAG_service=redis\n#ENV SCOPE_EVENT_ENABLE=true\nENV SCOPE_EVENT_LOGFILE=false\nENV SCOPE_EVENT_CONSOLE=false\n#ENV SCOPE_EVENT_METRIC=true\nENV SCOPE_EVENT_HTTP=false\nENV SCOPE_EVENT_DEST=file:///opt/test-runner/logs/events.log\n#ENV SCOPE_METRIC_ENABLE=false\n#ENV SCOPE_METRIC_VERBOSITY=4\n#ENV SCOPE_METRIC_DEST=udp://localhost:8125\nENV SCOPE_LOG_DEST=file:///opt/test-runner/logs/scope.log\nENV SCOPE_HOME=/opt/test-runner/bin\n\nENV PATH=\"/usr/local/scope:/usr/local/scope/bin:${PATH}\"\nCOPY scope-profile.sh /etc/profile.d/scope.sh\nCOPY gdbinit /root/.gdbinit\n\nRUN  mkdir /usr/local/scope && \\\n     mkdir /usr/local/scope/bin && \\\n     mkdir /usr/local/scope/lib && \\\n     ln -s /opt/appscope/bin/linux/$(uname -m)/scope /usr/local/scope/bin/scope && \\\n     ln -s /opt/appscope/bin/linux/$(uname -m)/ldscope /usr/local/scope/bin/ldscope && \\\n     ln -s /opt/appscope/lib/linux/$(uname -m)/libscope.so /usr/local/scope/lib/libscope.so\n\nCOPY detect_proto/scope-test /usr/local/scope/scope-test\n\nCOPY docker-entrypoint.sh /\nENTRYPOINT [\"/docker-entrypoint.sh\"]\nCMD [\"test\"]\n\n"
}