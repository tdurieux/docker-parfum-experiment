{
  "startTime": 1674253139446,
  "endTime": 1674253140450,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 53
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG GO_IMAGE_VER=golang:1.14\nFROM $GO_IMAGE_VER\n\nRUN apt-get -o Acquire::Check-Valid-Until=false update && \\\n    apt-get install --no-install-recommends -y vim curl file bsdmainutils gdb && rm -rf /var/lib/apt/lists/*;\n\nCOPY ./go/test_go.sh /go\nCOPY ./go/test_go_struct.sh /go\n\nRUN mkdir /go/thread\nCOPY ./go/thread/fileThread.go /go/thread\nRUN cd /go/thread && CGO_ENABLED=0 go build fileThread.go\n\nRUN mkdir /go/syscalls\nCOPY ./go/syscalls/unlinkat.go /go/syscalls\nRUN cd /go/syscalls && \\\n    go build -o unlinkat unlinkat.go\nCOPY ./go/syscalls/opfalse.go /go/syscalls\nRUN cd /go/syscalls && \\\n    go build -o opfalse opfalse.go\nCOPY ./go/syscalls/readdir.go /go/syscalls\nRUN cd /go/syscalls && \\\n    go build -o readdir readdir.go\n\nRUN mkdir /go/net\nCOPY ./go/net/plainServer.go /go/net\nRUN cd /go/net && \\\n    go build -buildmode=pie -o plainServerDynamicPie plainServer.go\nRUN cd /go/net && \\\n    go build -o plainServerDynamic plainServer.go\nRUN cd /go/net && \\\n    CGO_ENABLED=0 go build -o plainServerStatic plainServer.go\nCOPY ./go/net/tlsServer.go /go/net\nRUN cd /go/net && \\\n    go build -o tlsServerDynamic tlsServer.go\nRUN cd /go/net && \\\n    CGO_ENABLED=0 go build -o tlsServerStatic tlsServer.go\nRUN cd /go/net && \\\n    openssl genrsa -out server.key 2048 && \\\n    openssl ecparam -genkey -name secp384r1 -out server.key && \\\n    openssl req -new -x509 -sha256 \\\n      -key server.key \\\n      -out server.crt \\\n      -days 3650 \\\n      -subj \"/C=US/ST=California/L=San Francisco/O=Cribl/OU=Cribl/CN=localhost\"\nCOPY ./go/net/plainClient.go /go/net\nRUN cd /go/net &&\\\n    go build -o plainClientDynamic plainClient.go\nRUN cd /go/net && \\\n    CGO_ENABLED=0 go build -o plainClientStatic plainClient.go\nRUN cd /go/net && \\\n    CGO_ENABLED=0 go build -ldflags='-s' -o plainClientStaticStripped plainClient.go\nCOPY ./go/net/tlsClient.go /go/net\nRUN cd /go/net && \\\n    go build -o tlsClientDynamic tlsClient.go\nRUN cd /go/net && \\\n    CGO_ENABLED=0 go build -o tlsClientStatic tlsClient.go\n\nRUN mkdir /go/signals\nCOPY ./go/signals/signalHandler.go /go/signals\nRUN cd /go/signals && \\\n    go build -o signalHandlerDynamic signalHandler.go && \\\n    CGO_ENABLED=0 go build -o signalHandlerStatic signalHandler.go && \\\n    CGO_ENABLED=0 go build -ldflags=\"-s -w\" -o signalHandlerStaticStripped signalHandler.go\n\nRUN mkdir /go/cgo\nCOPY ./go/cgo/Makefile /go/cgo\nCOPY ./go/cgo/myc.c /go/cgo\nCOPY ./go/cgo/myc.h /go/cgo\nCOPY ./go/cgo/mygo.go /go/cgo\nRUN cd /go/cgo && make all\n\nRUN mkdir -p /go/influx\nCOPY ./go/influx/* /go/influx/\nCOPY ./go/influx/influxdb-selfsigned.key /etc/ssl/.\nCOPY ./go/influx/influxdb-selfsigned.crt /etc/ssl/.\n\nENV SCOPE_CRIBL_ENABLE=false\nENV SCOPE_LOG_LEVEL=warning\nENV SCOPE_LOG_DEST=file:///tmp/scope.log\nENV SCOPE_METRIC_VERBOSITY=4\nENV SCOPE_EVENT_LOGFILE=true\nENV SCOPE_EVENT_CONSOLE=true\nENV SCOPE_EVENT_METRIC=true\nENV SCOPE_EVENT_HTTP=true\nENV SCOPE_EVENT_DEST=file:///go/events.log\n\nRUN echo \"export PATH=/usr/local/scope:/usr/local/scope/bin:${PATH}\" >/etc/profile.d/path.sh\nCOPY scope-profile.sh /etc/profile.d/scope.sh\nCOPY gdbinit /root/.gdbinit\n\nRUN  mkdir /usr/local/scope && \\\n     mkdir /usr/local/scope/bin && \\\n     mkdir /usr/local/scope/lib && \\\n     ln -s /opt/appscope/bin/linux/$(uname -m)/scope /usr/local/scope/bin/scope && \\\n     ln -s /opt/appscope/bin/linux/$(uname -m)/ldscope /usr/local/scope/bin/ldscope && \\\n     ln -s /opt/appscope/lib/linux/$(uname -m)/libscope.so /usr/local/scope/lib/libscope.so\n\nCOPY go/scope-test /usr/local/scope/scope-test\n\nCOPY docker-entrypoint.sh /\nENTRYPOINT [\"/docker-entrypoint.sh\"]\nCMD [\"test\"]\n\n"
}