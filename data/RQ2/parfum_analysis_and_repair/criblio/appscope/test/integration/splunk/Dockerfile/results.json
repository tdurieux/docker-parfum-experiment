{
  "startTime": 1674251801838,
  "endTime": 1674251802577,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 67
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 89
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 55
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 55
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 36
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 36
      }
    }
  ],
  "repairedDockerfile": "FROM cribl/splunk:8.0.0\n\nARG CRIBL_DISTRO=cribl-splunk-app-linux-x64\nARG DEBIAN_FRONTEND=noninteractive\n\nRUN sh -c 'echo dash dash/sh boolean false | debconf-set-selections' && \\\n    sh -c 'DEBIAN_FRONTEND=noninteractive dpkg-reconfigure dash' && \\\n    apt-get -o Acquire::Check-Valid-Until=false update && \\\n    apt-get install --no-install-recommends -y vim nano curl ca-certificates jq && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get --no-install-recommends install -y \\\n    gcc make build-essential checkinstall libreadline-gplv2-dev \\\n    libncursesw5-dev libssl-dev libsqlite3-dev tk-dev libgdbm-dev libc6-dev \\\n    libbz2-dev libffi-dev zlib1g-dev && rm -rf /var/lib/apt/lists/*;\n\n# manual installation of python 3.6 as default distro version is 3.4\nRUN curl -f https://www.python.org/ftp/python/3.6.5/Python-3.6.5.tgz | tar xvz\n\nRUN cd Python-3.6.5 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-optimizations --prefix=/usr && \\\n    make altinstall && \\\n    cd .. && \\\n    rm -r Python-3.6.5\nRUN curl -f https://bootstrap.pypa.io/pip/3.6/get-pip.py -o get-pip.py && \\\n    python3.6 get-pip.py && \\\n    rm -f get-pip.py\n\n# removing all intermediate dependencies. All the stuff below comes up to 200+MB\nRUN apt-get remove -y --purge \\\n    gcc make build-essential checkinstall libreadline-gplv2-dev \\\n    libncursesw5-dev libssl-dev libsqlite3-dev tk-dev libgdbm-dev libc6-dev \\\n    libbz2-dev libffi-dev zlib1g-dev && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/*\n\n# RUN VERSION=$(curl -s https://cdn.cribl.io/versions.json | jq -r .version) && \\\n#     curl -Lso /tmp/${CRIBL_DISTRO}.tgz https://cdn.cribl.io/dl/$(echo ${VERSION} | cut -d '-' -f 1)/${CRIBL_DISTRO}-${VERSION}.tgz && \\\nRUN curl -f -Lso /tmp/${CRIBL_DISTRO}.tgz https://cdn.cribl.io/dl/latest/${CRIBL_DISTRO}.tgz && \\\n    tar -zxvf /tmp/${CRIBL_DISTRO}.tgz -C /var/opt/splunk/etc/apps && \\\n    rm /tmp/${CRIBL_DISTRO}.tgz\n\nCOPY splunk/hack/splunk/etc /var/opt/splunk/etc\nCOPY splunk/config.sh /var/opt/splunk/etc/apps/cribl/bin/config.sh\nCOPY splunk/cribldemo/ /var/opt/splunk/etc/apps/cribl/\n\nRUN cp /var/opt/splunk/etc/splunk-launch.conf.default /var/opt/splunk/etc/splunk-launch.conf\n\nENV DEMOUSER_NAME \"Demo User\"\nENV DEMOUSER_EMAIL \"demo@cribl.io\"\nENV SPLUNK_USER root\nENV SPLUNK_START_ARGS \"--accept-license --answer-yes --seed-passwd cribldemo\"\nENV SPLUNK_BEFORE_START_CMD \"version ${SPLUNK_START_ARGS}\"\nENV SPLUNK_BEFORE_START_CMD_1 \"cmd /bin/bash /opt/splunk/etc/apps/cribl/bin/timeout.sh &\"\nENV SPLUNK_BEFORE_START_CMD_2 \"cmd /bin/bash /opt/splunk/etc/apps/cribl/bin/intercom.sh\"\nENV SPLUNK_BEFORE_START_CMD_3 \"cmd /bin/bash /opt/splunk/etc/apps/cribl/bin/config.sh\"\n\nRUN mkdir -p /opt/test-runner/logs/\n\nENV SCOPE_CRIBL_ENABLE=false\nENV SCOPE_METRIC_DEST=udp://localhost:8125\nENV SCOPE_LOG_LEVEL=info\nENV SCOPE_LOG_DEST=file:///opt/test-runner/logs/scope.log\nENV SCOPE_METRIC_VERBOSITY=4\nENV SCOPE_EVENT_LOGFILE=true\nENV SCOPE_EVENT_CONSOLE=true\nENV SCOPE_EVENT_METRIC=true\nENV SCOPE_EVENT_HTTP=true\n#ENV SCOPE_EVENT_DEST=tcp://172.16.198.132:9109\n\nCOPY ./test_runner/requirements.txt /opt/test-runner/requirements.txt\nRUN pip3.6 install -r /opt/test-runner/requirements.txt\n\nCOPY ./test_runner/ /opt/test-runner/\n\nENV PATH=\"/usr/local/scope:/usr/local/scope/bin:${PATH}\"\nCOPY scope-profile.sh /etc/profile.d/scope.sh\nCOPY gdbinit /root/.gdbinit\n\nRUN  mkdir /usr/local/scope && \\\n     mkdir /usr/local/scope/bin && \\\n     mkdir /usr/local/scope/lib && \\\n     ln -s /opt/appscope/bin/linux/$(uname -m)/scope /usr/local/scope/bin/scope && \\\n     ln -s /opt/appscope/bin/linux/$(uname -m)/ldscope /usr/local/scope/bin/ldscope && \\\n     ln -s /opt/appscope/lib/linux/$(uname -m)/libscope.so /usr/local/scope/lib/libscope.so\n\nCOPY splunk/scope-test /usr/local/scope/scope-test\n\nCOPY docker-entrypoint.sh /\nENTRYPOINT [\"/docker-entrypoint.sh\"]\nCMD [\"test\"]\n\n"
}