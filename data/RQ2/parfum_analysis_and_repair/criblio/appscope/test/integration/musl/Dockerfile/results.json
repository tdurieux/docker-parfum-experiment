{
  "startTime": 1674248614519,
  "endTime": 1674248615040,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 4,
        "columnEnd": 61
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:latest\n\nRUN apk add --no-cache bash binutils curl gcc gdb musl-dev openssl socat\n\nRUN mkdir -p /opt/fwrite\nCOPY ./musl/fwrite.c /opt/fwrite/fwrite.c\nRUN gcc -o /opt/fwrite/fwrite /opt/fwrite/fwrite.c\n\nRUN mkdir -p /opt/fault_test\nCOPY ./musl/hello_fault.c /opt/fault_test/hello_fault.c\nRUN gcc -O0 -g -o /opt/fault_test/fault_test /opt/fault_test/hello_fault.c -lrt\n\nRUN mkdir -p /opt/extract_scope && \\\n    mkdir -p /opt/patch_libscope\n\nENV SCOPE_CRIBL_ENABLE=false\nENV SCOPE_LOG_LEVEL=error\nENV SCOPE_METRIC_VERBOSITY=4\nENV SCOPE_EVENT_LOGFILE=true\nENV SCOPE_EVENT_CONSOLE=true\nENV SCOPE_EVENT_METRIC=true\nENV SCOPE_EVENT_HTTP=true\nENV SCOPE_EVENT_NET=true\nENV SCOPE_EVENT_FS=false\nENV SCOPE_LOG_DEST=file:///opt/test-runner/logs/scope.log\nENV SCOPE_EVENT_DEST=file:///opt/test-runner/logs/events.log\nENV SCOPE_ALLOW_MUSL_ATTACH=true\n\nENV PATH=\"/usr/local/scope:/usr/local/scope/bin:${PATH}\"\nCOPY scope-profile.sh /etc/profile.d/scope.sh\nCOPY gdbinit /root/.gdbinit\n\nRUN  mkdir /usr/local/scope && \\\n     mkdir /usr/local/scope/bin && \\\n     mkdir /usr/local/scope/lib && \\\n     mkdir -p /opt/test-runner/logs/ && \\\n     ln -s /opt/appscope/bin/linux/$(uname -m)/scope /usr/local/scope/bin/scope && \\\n     ln -s /opt/appscope/bin/linux/$(uname -m)/ldscope /usr/local/scope/bin/ldscope && \\\n     ln -s /opt/appscope/lib/linux/$(uname -m)/libscope.so /usr/local/scope/lib/libscope.so\n\nCOPY musl/scope-test /usr/local/scope/scope-test\n\n\nRUN (cd /usr/local/scope &&  \\\n     openssl req -nodes -x509 -newkey rsa:4096 -keyout key.pem -out cert.pem \\\n      -subj \"/C=US/ST=MN/L=Excelsior/O=Cribl/OU=Engineering/CN=cribl.io\")\n\n\nCOPY docker-entrypoint.sh /\nENTRYPOINT [\"/docker-entrypoint.sh\"]\nCMD [\"test\"]\n"
}