{
  "startTime": 1674220550349,
  "endTime": 1674220551001,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 30
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM docker.elastic.co/elasticsearch/elasticsearch:8.0.0\nENV discovery.type=single-node\nENV xpack.security.enabled=false\nUSER root\n\nRUN apt update && \\\n    apt install --no-install-recommends python3-pip -y && rm -rf /var/lib/apt/lists/*;\nRUN pip3 install --no-cache-dir virtualenv\n\nRUN chown elasticsearch:elasticsearch /opt/ /usr/local\n\nUSER elasticsearch\n\nRUN mkdir /opt/test-runner/ /opt/test-runner/logs/\n\nRUN virtualenv -p $(which python3) /opt/test-runner/\n\nENV SCOPE_CRIBL_ENABLE=false\nENV SCOPE_OUT_DEST=udp://localhost:8125\nENV SCOPE_LOG_LEVEL=info\nENV SCOPE_LOG_DEST=file:///opt/test-runner/logs/scope.log\nENV SCOPE_OUT_VERBOSITY=4\nENV SCOPE_EVENT_LOGFILE=true\nENV SCOPE_EVENT_CONSOLE=true\nENV SCOPE_EVENT_METRIC=true\nENV SCOPE_EVENT_HTTP=true\n\nCOPY ./test_runner/requirements.txt /opt/test-runner/requirements.txt\nRUN /opt/test-runner/bin/pip install -r /opt/test-runner/requirements.txt\n\nCOPY ./test_runner/ /opt/test-runner/\n\n# Switching to Python 3.8 required this hack. Not sure where the kafka packages are coming from.\nRUN sed -i 's/\\basync\\b/is_async/g' /opt/test-runner/lib/python3.8/site-packages/kafka/producer/*.py\n\nENV PATH=\"/usr/local/scope:/usr/local/scope/bin:${PATH}\"\nCOPY scope-profile.sh /etc/profile.d/scope.sh\nCOPY gdbinit /root/.gdbinit\n\nRUN  mkdir /usr/local/scope && \\\n     mkdir /usr/local/scope/bin && \\\n     mkdir /usr/local/scope/lib && \\\n     ln -s /opt/appscope/bin/linux/$(uname -m)/scope /usr/local/scope/bin/scope && \\\n     ln -s /opt/appscope/bin/linux/$(uname -m)/ldscope /usr/local/scope/bin/ldscope && \\\n     ln -s /opt/appscope/lib/linux/$(uname -m)/libscope.so /usr/local/scope/lib/libscope.so\n\nCOPY elastic/scope-test /usr/local/scope/scope-test\n\nCOPY docker-entrypoint.sh /\nENTRYPOINT [\"/docker-entrypoint.sh\"]\nCMD [\"test\"]\n\n"
}