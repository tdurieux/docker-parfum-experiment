{
  "startTime": 1674253403965,
  "endTime": 1674253404655,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 116
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 21,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 26,
        "columnStart": 7,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 7,
        "columnEnd": 35
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 26,
        "columnStart": 7,
        "columnEnd": 22
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 7,
        "columnEnd": 35
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG K_COMMIT\nFROM runtimeverificationinc/kframework-k:ubuntu-bionic-${K_COMMIT}\n\nRUN apt-get update           \\\n    && apt-get upgrade --yes \\\n    && apt-get install --no-install-recommends --yes \\\n            cmake \\\n            curl \\\n            debhelper \\\n            jq \\\n            libboost-test-dev \\\n            libcrypto++-dev \\\n            libgflags-dev \\\n            libprocps-dev \\\n            libsecp256k1-dev \\\n            libssl-dev \\\n            libyaml-dev \\\n            maven \\\n            netcat-openbsd \\\n            openjdk-11-jdk \\\n            pkg-config \\\n            python3 \\\n            python-pygments \\\n            python-recommonmark \\\n            python-sphinx \\\n            rapidjson-dev \\\n            zlib1g-dev && rm -rf /var/lib/apt/lists/*;\n\nRUN    git clone 'https://github.com/z3prover/z3' --branch=z3-4.8.7 \\\n    && cd z3                                                        \\\n    && python scripts/mk_make.py                                    \\\n    && cd build                                                     \\\n    && make -j8                                                     \\\n    && make install                                                 \\\n    && cd ../..                                                     \\\n    && rm -rf z3\n\nRUN curl -f -sL https://deb.nodesource.com/setup_10.x | bash -\nRUN apt-get update               \\\n    && apt-get upgrade --yes \\\n    && apt-get install --no-install-recommends --yes nodejs && rm -rf /var/lib/apt/lists/*;\n\nRUN curl -f -sSL https://get.haskellstack.org/ | sh\n\nARG USER_ID=1000\nARG GROUP_ID=1000\nRUN groupadd -g $GROUP_ID user && useradd -m -u $USER_ID -s /bin/sh -g user user\n\nUSER user:user\nWORKDIR /home/user\n\nRUN curl -f -L https://github.com/github/hub/releases/download/v2.14.0/hub-linux-amd64-2.14.0.tgz -o /home/user/hub.tgz\nRUN cd /home/user && tar xzf hub.tgz && rm hub.tgz\n\nENV PATH=/home/user/hub-linux-amd64-2.14.0/bin:$PATH\n\nRUN    git config --global user.email 'admin@runtimeverification.com' \\\n    && git config --global user.name  'RV Jenkins'                    \\\n    && mkdir -p ~/.ssh                                                \\\n    && echo 'host github.com'                       > ~/.ssh/config   \\\n    && echo '    hostname github.com'              >> ~/.ssh/config   \\\n    && echo '    user git'                         >> ~/.ssh/config   \\\n    && echo '    identityagent SSH_AUTH_SOCK'      >> ~/.ssh/config   \\\n    && echo '    stricthostkeychecking accept-new' >> ~/.ssh/config   \\\n    && chmod go-rwx -R ~/.ssh\n"
}