{
  "startTime": 1674249167514,
  "endTime": 1674249168355,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 126,
        "lineEnd": 128,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 100,
        "lineEnd": 100,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 96,
        "lineEnd": 96,
        "columnStart": 4,
        "columnEnd": 61
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 22,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 19
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 47,
        "lineEnd": 78,
        "columnStart": 4,
        "columnEnd": 8
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG base_image=ubuntu:18.04\n\nARG cli11_tag=farmng/build-cli11:latest\nARG libfmt_tag=farmng/build-libfmt:latest\nARG apriltag_tag=farmng/build-apriltag:latest\nARG ceres_tag=farmng/build-ceres:latest\nARG grpc_tag=farmng/build-grpc:latest\nARG opencv_tag=farmng/build-opencv:latest\nARG sophus_tag=farmng/build-sophus:latest\n\nFROM $libfmt_tag AS libfmt\nFROM $cli11_tag AS cli11\nFROM $apriltag_tag AS apriltag\nFROM $ceres_tag AS ceres\nFROM $grpc_tag AS grpc\nFROM $opencv_tag AS opencv\nFROM $sophus_tag AS sophus\n\n\nFROM $base_image AS devel\n\nRUN apt-get update --fix-missing && \\\n    apt-get install -y --no-install-recommends \\\n    apt-transport-https \\\n    apt-utils \\\n    curl \\\n    gnupg2 \\\n    lsb-release \\\n    software-properties-common \\\n    wget \\\n    ca-certificates \\\n    && \\\n    apt-get clean && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-key adv --keyserver keys.gnupg.net --recv-key F6E65AC044F831AC80A06380C8B3A55A6F3EFCDE || apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-key && \\\n    add-apt-repository \"deb https://librealsense.intel.com/Debian/apt-repo bionic main\" -u\n\nRUN curl -f -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - && \\\n    echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list\n\nRUN NODEREPO=\"node_12.x\" && \\\n    DISTRO=$(lsb_release -c -s) && \\\n    curl -f -s https://deb.nodesource.com/gpgkey/nodesource.gpg.key | apt-key add - && \\\n    echo \"deb https://deb.nodesource.com/${NODEREPO} ${DISTRO} main\" > /etc/apt/sources.list.d/nodesource.list && \\\n    echo \"deb-src https://deb.nodesource.com/${NODEREPO} ${DISTRO} main\" >> /etc/apt/sources.list.d/nodesource.list\n\nRUN apt-get update --fix-missing && \\\n    apt-get install -y --no-install-recommends \\\n    build-essential \\\n    clang \\\n    clang-format \\\n    cython \\\n    ccache \\\n    dirmngr \\\n    doxygen \\\n    git \\\n    graphviz \\\n    gstreamer1.0-libav \\\n    gstreamer1.0-plugins-bad \\\n    gstreamer1.0-plugins-base \\\n    gstreamer1.0-plugins-good \\\n    gstreamer1.0-plugins-ugly \\\n    gstreamer1.0-tools \\\n    libboost-filesystem-dev \\\n    libboost-regex-dev \\\n    libboost-system-dev \\\n    libdbus-glib-1-dev \\\n    libeigen3-dev \\\n    libgoogle-glog-dev \\\n    librealsense2-dev \\\n    librealsense2-utils \\\n    libsuitesparse-dev \\\n    nodejs \\\n    network-manager \\\n    python3-dev \\\n    python3-pip \\\n    python3-numpy \\\n    sudo \\\n    yarn \\\n    && \\\n    apt-get clean && rm -rf /var/lib/apt/lists/*;\n\nRUN update-alternatives --install /usr/bin/python python /usr/bin/python3 10\n\nARG PREFIX=/farm_ng/env\n\nENV FARM_NG_PREFIX=$PREFIX\nENV PYTHONPATH=$FARM_NG_PREFIX/lib/python3.6/site-packages:$FARM_NG_PREFIX/lib/python3.6/dist-packages\nENV LD_LIBRARY_PATH=$FARM_NG_PREFIX/lib\n\nENV FARM_NG_GOPATH=$FARM_NG_PREFIX/go\nENV GOPATH=$FARM_NG_GOPATH:$GOPATH\nENV PATH=$FARM_NG_GOPATH/bin:$FARM_NG_PREFIX/bin:/usr/local/go/bin:$PATH\n\nRUN arch=`dpkg --print-architecture` && \\\n    wget https://golang.org/dl/go1.15.1.linux-${arch}.tar.gz -P /tmp/ && \\\n    tar -C /usr/local -xzf /tmp/go1.15.1.linux-${arch}.tar.gz && \\\n    /usr/local/go/bin/go version && rm /tmp/go1.15.1.linux-${arch}.tar.gz\n\nRUN nodejs --version && \\\n    npm install -g long ts-proto@^1.37.0 && npm cache clean --force;\n\nRUN FARM_NG_GOPATH=$PREFIX/go && \\\n    export GOPATH=$FARM_NG_GOPATH:$GOPATH && \\\n    export PATH=$FARM_NG_GOPATH/bin:$PREFIX/bin:/usr/local/go/bin:/usr/bin:$PATH && \\\n    go get -u github.com/golang/protobuf/protoc-gen-go && \\\n    go get -u github.com/twitchtv/twirp/protoc-gen-twirp\n\nRUN python -m pip install --upgrade pip setuptools && python -m pip install \\\n    git+https://github.com/alex-eri/python-networkmanager.git@ec5d10ef7e18f27b24b439d888cea89c1f802f5c \\\n    git+https://github.com/utiasSTARS/liegroups.git@11e0203048def0345097cb42c664aa91435c3dd0 \\\n    breathe==4.25.1 \\\n    cmake==3.18.4.post1 \\\n    grpcio==1.34.0 \\\n    linuxfd==1.5 \\\n    pre-commit==2.9.3 \\\n    protobuf==3.14.0 \\\n    sphinx-rtd-theme==0.5.0 \\\n    sphinx-tabs==1.3.0\n\n# Substitute BIN for your bin directory.\n# Substitute VERSION for the current released version.\n# Substitute BINARY_NAME for \"buf\", \"protoc-gen-buf-breaking\", or \"protoc-gen-buf-lint\".\nRUN BIN=\"/usr/local/bin\" && \\\n    VERSION=\"0.35.1\" && \\\n    BINARY_NAME=\"buf\" && \\\n    curl -f -sSL \\\n      \"https://github.com/bufbuild/buf/releases/download/v${VERSION}/${BINARY_NAME}-$(uname -s)-$(uname -m)\" \\\n      -o \"${BIN}/${BINARY_NAME}\" && \\\n\t\t\t\tchmod +x \"${BIN}/${BINARY_NAME}\"\n\n# [docs] copy_third_party\nCOPY --from=libfmt $PREFIX $PREFIX\nCOPY --from=cli11 $PREFIX $PREFIX\nCOPY --from=apriltag $PREFIX $PREFIX\nCOPY --from=ceres $PREFIX $PREFIX\nCOPY --from=grpc $PREFIX $PREFIX\nCOPY --from=opencv $PREFIX $PREFIX\nCOPY --from=sophus $PREFIX $PREFIX\n# [docs] copy_third_party\n\nARG WORKSPACE_DIR=/workspace/tractor\nENV FARM_NG_ROOT=$WORKSPACE_DIR\nENV GOPATH=$FARM_NG_ROOT/.go:$GOPATH\n\nENV PYTHONPATH=$FARM_NG_ROOT/modules/core/python:$FARM_NG_ROOT/build/modules/core/protos/python:$PYTHONPATH\nENV PYTHONPATH=$FARM_NG_ROOT/modules/perception/python:$FARM_NG_ROOT/build/modules/perception/protos/python:$PYTHONPATH\nENV PYTHONPATH=$FARM_NG_ROOT/modules/calibration/python:$FARM_NG_ROOT/build/modules/calibration/protos/python:$PYTHONPATH\nENV PYTHONPATH=$FARM_NG_ROOT/modules/frontend/python:$FARM_NG_ROOT/build/modules/frontend/protos/python:$PYTHONPATH\nENV PYTHONPATH=$FARM_NG_ROOT/modules/tractor/python:$FARM_NG_ROOT/build/modules/tractor/protos/python:$PYTHONPATH\n"
}