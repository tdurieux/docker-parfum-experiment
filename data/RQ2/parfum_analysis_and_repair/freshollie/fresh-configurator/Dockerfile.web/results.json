{
  "startTime": 1674254213987,
  "endTime": 1674254214960,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 8,
        "columnEnd": 38
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 8,
        "columnEnd": 76
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# This docker image is used to deploy @betaflight/api-server\n# in mocked mode to heroku. Used to allow the demo app to\n# use the API\nFROM node:16 as build\n\nWORKDIR /build\nCOPY packages packages\nCOPY tools/demo-api-server tools/demo-api-server\nCOPY types types\nCOPY scripts scripts\nCOPY .yarn .yarn\nCOPY tsconfig.build.json \\\n        tsconfig.base.json \\\n        tsconfig.build.json \\\n        yarn.lock package.json \\\n        codegen.yml \\\n        .gitignore \\\n        .yarnrc.yml \\\n        ./\n\n# Build the minimum required to make a functional mock server\nRUN rm packages/configurator/package.json && \\\n        yarn install --mode=skip-build && \\\n        yarn codegen && yarn build:lib && rm -r packages/configurator && yarn cache clean;\n\nRUN yarn cache clean && \\\n        yarn workspaces focus @betaflight-tools/demo-api-server --production && yarn cache clean;\n\n# Deployed layer\nFROM node:16-alpine\n\nWORKDIR /mock-server\nCOPY --from=build /build /mock-server\nRUN yarn node scripts/substitute-publish-config.js --write\n\nWORKDIR /mock-server/tools/demo-api-server\nCMD yarn start\n"
}