{
  "startTime": 1674254834278,
  "endTime": 1674254835835,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 138
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 93
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 95
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 105
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 93
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 95
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 105
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 74
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 23,
        "columnStart": 22,
        "columnEnd": 4
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 23,
        "columnStart": 22,
        "columnEnd": 4
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 30
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 54
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:18.04\n\n\n# Install build-essential, git, wget, python-dev, pip, BLAS + LAPACK and other dependencies\nRUN apt-get update && apt-get install --no-install-recommends -y \\\nbuild-essential \\\ngfortran \\\ngit \\\nwget \\\nliblapack-dev \\\nlibopenblas-dev \\\npython-dev \\\npython-pip \\\npython-nose \\\npython-numpy \\\npython-scipy \\\npython3-dev \\\npython3-pip \\\npython3-nose \\\npython3-numpy \\\npython3-scipy \\\ndefault-jre \\\ndefault-jdk \\\ncurl && rm -rf /var/lib/apt/lists/*;\n\n# Set locale to get file encodings right\nRUN apt-get install --no-install-recommends -y locales && rm -rf /var/lib/apt/lists/*;\nRUN locale-gen en_US.UTF-8\nENV LANG en_US.UTF-8\nENV LANGUAGE en_US:en\nENV LC_ALL en_US.UTF-8\n\nENV workdir /usr/src/myapp\nRUN mkdir -p $workdir\nWORKDIR $workdir\n\nRUN curl -f -o $workdir/apache-opennlp-1.8.4-bin.tar.xz https://archive.apache.org/dist/opennlp/opennlp-1.8.4/apache-opennlp-1.8.4-bin.tar.gz\nRUN tar xzf apache-opennlp-1.8.4-bin.tar.xz && rm apache-opennlp-1.8.4-bin.tar.xz\nRUN rm apache-opennlp-1.8.4-bin.tar.xz\nRUN mv apache-opennlp-1.8.4/ /usr/bin/\n\nENV OPENNLP /usr/bin/apache-opennlp-1.8.4\n\nRUN mkdir -p $OPENNLP/models\nRUN curl -f -o $OPENNLP/models/en-sent.bin https://opennlp.sourceforge.net/models-1.5/en-sent.bin\nRUN curl -f -o $OPENNLP/models/en-token.bin https://opennlp.sourceforge.net/models-1.5/en-token.bin\nRUN curl -f -o $OPENNLP/models/en-pos-maxent.bin https://opennlp.sourceforge.net/models-1.5/en-pos-maxent.bin\n\n\n# Install bleeding-edge Theano\nRUN pip install --no-cache-dir --upgrade pip\nRUN pip install --no-cache-dir --upgrade six\nRUN pip install --no-cache-dir --upgrade --no-deps git+git://github.com/Theano/Theano.git\nRUN pip install --no-cache-dir joblib gunicorn flask pexpect\n\nRUN pip3 install --no-cache-dir pexpect tqdm lxml beautifulsoup4\n\n\n\nEXPOSE 5000:5000\n\n"
}