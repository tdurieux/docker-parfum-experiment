{
  "startTime": 1674250131553,
  "endTime": 1674250132290,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 7,
        "columnEnd": 48
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 7,
        "columnEnd": 42
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "################################################################################\n# BASE\n# This is the stage that the other stages in this file are based on.\n# - defines the Node version\n# - set global configuration\n# - set default work dir\n################################################################################\nFROM node:16.14-alpine as base\n\nRUN apk add --update --no-cache git\n\nENV HUSKY=0\n\n# Apply Yarn settings\nRUN yarn config set cache-folder ~/.yarn \\\n    && yarn config set network-timeout 300000 -g \\\n    && yarn config set prefer-offline true && yarn cache clean;\n\n# Create app directory\nWORKDIR /workspace\n\n################################################################################\n# BUILDER\n# This is the stage where the app is built\n# - copy over package.json and yarn.lock\n# - install all dependencies\n# - copy over source files\n# - run build command\n################################################################################\nFROM base as builder\n\n# Copy package.json and the lock file\nCOPY package.json yarn.lock /workspace/\n\n# Install app dependencies\nRUN yarn\n\n# Copy source files\nCOPY . .\n\n# Build apps\nRUN yarn build\n\n\n#################################################################################\n## NODE_MODULES\n## This is the stage where the production node_modules is built\n## - copy over package.json and yarn.lock\n## - install production dependencies\n#################################################################################\nFROM base as node_modules\n\n# Copy package.json and the lock file\nCOPY package.json yarn.lock /workspace/\n\n# Install production dependencies\nRUN yarn install --production && yarn cache clean;\n\n\n################################################################################\n# FINAL\n# This is the stage where the final production image is built\n# - copy the dist folder from the builder image\n# - copy the node_modules folder from the node_modules image\n################################################################################\nFROM base as final\n\n#RUN apk --no-cache add krb5-libs\n\nCOPY libs/api/core/data-access/src/prisma/schema.prisma /workspace/libs/api/core/data-access/src/prisma/schema.prisma\n\n# Copy over artifacts from builder image\nCOPY --from=builder /workspace/dist /workspace/dist\n\n# Copy over node_modules from node_modules image\nCOPY --from=node_modules /workspace/node_modules /workspace/node_modules\n\n# Copy package.json and the lock file\nCOPY package.json yarn.lock /workspace/\n\n# Expose default port\nEXPOSE 3000\n\n# Start server\nCMD [\"yarn\", \"start\"]\n"
}