{
  "startTime": 1674246905253,
  "endTime": 1674246910299,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 37,
        "lineEnd": 45,
        "columnStart": 7,
        "columnEnd": 32
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 56,
        "lineEnd": 58,
        "columnStart": 7,
        "columnEnd": 32
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 6,
        "lineEnd": 30,
        "columnStart": 7,
        "columnEnd": 23
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM centos:centos7\nLABEL maintainer='Doug Smith <info@laboratoryb.org>' contributors='Christophe Langenberg <christophe@langenberg.be>'\nENV build_date 2016-05-15\nENV AUTOBUILD_UNIXTIME 123124\n\nRUN yum update -y \\\n    && yum install -y \\\n                epel-release \\\n                git \\\n                kernel-headers \\\n                wget \\\n                gcc \\\n                gcc-c++ \\\n                cpp \\\n                ncurses \\\n                ncurses-devel \\\n                libxml2 \\\n                libxml2-devel \\\n                sqlite \\\n                sqlite-devel \\\n                openssl-devel \\\n                newt-devel \\\n                kernel-devel \\\n                libuuid-devel \\\n                net-snmp-devel \\\n                xinetd \\\n                tar \\\n                jansson-devel \\\n                make \\\n                bzip2 \\\n                gettext \\\n    && yum clean all \\\n    && cd /tmp \\\n    # Get pj project\n    && git clone -b pjproject-2.4.5 --depth 1 https://github.com/asterisk/pjproject.git \\\n    # Build pj project\n    && cd pjproject \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n            --prefix=/usr \\\n            --libdir=/usr/lib64 \\\n            --enable-shared \\\n            --disable-sound \\\n            --disable-resample \\\n            --disable-video \\\n            --disable-opencore-amr \\\n                    1> /dev/null \\\n    && make -j$(nproc) dep 1> /dev/null \\\n    && make -j$(nproc) 1> /dev/null \\\n    && make -j$(nproc) install \\\n    && ldconfig \\\n    && ldconfig -p | grep pj \\\n    && cd .. \\\n    # Download asterisk.\n    && git clone -b certified/13.8 --depth 1 https://gerrit.asterisk.org/asterisk \\\n    && cd asterisk \\\n    # Configure\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n            --libdir=/usr/lib64 \\\n                    1> /dev/null \\\n    # Remove the native build option\n    # from: https://wiki.asterisk.org/wiki/display/AST/Building+and+Installing+Asterisk\n    && make -j$(nproc) menuselect.makeopts \\\n    && menuselect/menuselect \\\n                  --disable BUILD_NATIVE \\\n                  --enable cdr_csv \\\n                  --enable chan_sip \\\n                  --enable res_snmp \\\n                  --enable res_http_websocket \\\n                  --enable res_hep_pjsip \\\n                  --enable res_hep_rtcp \\\n          menuselect.makeopts \\\n    # Continue with a standard make.\n    && make -j$(nproc) 1> /dev/null \\\n    && make -j$(nproc) install 1> /dev/null \\\n    && make -j$(nproc) samples 1> /dev/null \\\n    && make dist-clean \\\n    # Update max number of open files.\n    && sed -i -e 's/# MAXFILES=/MAXFILES=/' /usr/sbin/safe_asterisk \\\n    # Create and configure asterisk for running asterisk user.\n    && useradd -m asterisk -s /sbin/nologin \\\n    && chown -R asterisk:asterisk /var/run/asterisk \\\n                                  /etc/asterisk/ \\\n                                  /var/lib/asterisk \\\n                                  /var/log/asterisk \\\n                                  /var/spool/asterisk \\\n                                  /usr/lib64/asterisk/ && rm -rf /var/cache/yum\n\n# And run asterisk in the foreground.\nUSER asterisk\nCMD /usr/sbin/asterisk -f"
}