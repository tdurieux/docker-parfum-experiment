{
  "startTime": 1674215672575,
  "endTime": 1674215673482,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 7,
        "columnEnd": 51
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 7,
        "lineEnd": 27,
        "columnStart": 7,
        "columnEnd": 19
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM centos:centos7\nLABEL maintainer='Doug Smith <info@laboratoryb.org>' contributors='Christophe Langenberg <christophe@langenberg.be>'\nENV build_date 2016-05-14\nENV AUTOBUILD_UNIXTIME 1418234402\nENV rebuild_date 2015-05-15\n\nRUN yum update -y \\\n    && yum install -y \\\n                kernel-headers \\\n                wget \\\n                gcc \\\n                gcc-c++ \\\n                cpp \\\n                ncurses \\\n                ncurses-devel \\\n                libxml2 \\\n                libxml2-devel \\\n                sqlite \\\n                sqlite-devel \\\n                openssl-devel \\\n                newt-devel \\\n                kernel-devel \\\n                libuuid-devel \\\n                net-snmp-devel \\\n                xinetd \\\n                tar \\\n                make \\\n                git \\\n    && yum clean all \\\n    && cd /tmp \\\n    # Download asterisk.\n    && git clone -b certified/11.6 --depth 1 https://gerrit.asterisk.org/asterisk \\\n    && cd asterisk \\\n    # make asterisk.\n    # Configure \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --libdir=/usr/lib64 1> /dev/null \\\n    # Remove the native build option\n    && make -j$(nproc) menuselect.makeopts \\\n    && menuselect/menuselect \\\n                          --disable BUILD_NATIVE \\\n                          --enable cdr_csv \\\n                          --enable chan_sip \\\n                          --enable res_snmp \\\n                          --enable res_http_websocket \\\n                      menuselect.makeopts \\\n    # Continue with a standard make.\n    && make -j$(nproc) 1> /dev/null \\\n    && make -j$(nproc) install 1> /dev/null \\\n    && make -j$(nproc) samples 1> /dev/null \\\n    # clean up the cached make files\n    && make dist-clean \\\n    # Update max number of open files.\n    && sed -i -e 's/# MAXFILES=/MAXFILES=/' /usr/sbin/safe_asterisk \\\n    # Set tty\n    && sed -i 's/TTY=9/TTY=/g' /usr/sbin/safe_asterisk \\\n    # Create and configure asterisk for running asterisk user.\n    && useradd -m asterisk -s /sbin/nologin \\\n    && chown -R asterisk:asterisk /var/run/asterisk \\\n                                  /etc/asterisk/ \\\n                                  /var/lib/asterisk \\\n                                  /var/log/asterisk \\\n                                  /var/spool/asterisk \\\n                                  /usr/lib64/asterisk/ && rm -rf /var/cache/yum\n\n# Running asterisk with user asterisk.\nUSER asterisk\nCMD /usr/sbin/asterisk -fvvvvv\n"
}