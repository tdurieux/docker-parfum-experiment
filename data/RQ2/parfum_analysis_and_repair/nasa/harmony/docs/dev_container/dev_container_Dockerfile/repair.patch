diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/nasa/harmony/docs/dev_container/dev_container_Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/nasa/harmony/docs/dev_container/dev_container_Dockerfile/repaired.Dockerfile
index e4056a3..905ff55 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/nasa/harmony/docs/dev_container/dev_container_Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/nasa/harmony/docs/dev_container/dev_container_Dockerfile/repaired.Dockerfile
@@ -10,7 +10,7 @@ SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
 #
 # Update and install system packages; runs before certificate work below because we must have ca-certificates package installed first
 #
-RUN apt update && apt upgrade -y && apt install -y bind9-host bsdmainutils ca-certificates curl git iputils-ping libpq-dev postgresql sqlite3 sudo unzip vim
+RUN apt update && apt upgrade -y && apt install --no-install-recommends -y bind9-host bsdmainutils ca-certificates curl git iputils-ping libpq-dev postgresql sqlite3 sudo unzip vim && rm -rf /var/lib/apt/lists/*;
 
 #
 # OPTIONAL: fake root CA for e.g. USGS / DOI networks
@@ -36,7 +36,7 @@ RUN mkdir ~/downloads
 WORKDIR /home/dockeruser
 ENV NODE_VERSION 12.19.0
 RUN bash -c 'mkdir ~/.nvm' \
-    && curl -o - https://raw.githubusercontent.com/creationix/nvm/v0.36.0/install.sh | bash
+    && curl -f -o - https://raw.githubusercontent.com/creationix/nvm/v0.36.0/install.sh | bash
 ENV NODE_PATH /home/dockeruser/.nvm/versions/node/v$NODE_VERSION/lib/modules
 ENV PATH      /home/dockeruser/.nvm/versions/node/v$NODE_VERSION/bin:$PATH
 RUN bash -c "npm config set registry http://registry.npmjs.org/"
@@ -45,7 +45,7 @@ RUN bash -c "npm config set registry http://registry.npmjs.org/"
 # AWS cli
 #
 WORKDIR /home/dockeruser/downloads
-RUN curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip" \
+RUN curl -f "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip" \
     && unzip -q awscliv2.zip \
     && sudo ./aws/install
 
@@ -53,24 +53,24 @@ RUN curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2
 # Python and python environment
 #
 WORKDIR /home/dockeruser/venv
-RUN sudo apt-get install -y python3-pip python3-venv \
+RUN sudo apt-get install --no-install-recommends -y python3-pip python3-venv \
     && python3 -m venv harmony \
     && source ./harmony/bin/activate \
-    && pip install awscli-local boto3 ipykernel wheel
+    && pip install --no-cache-dir awscli-local boto3 ipykernel wheel && rm -rf /var/lib/apt/lists/*;
 
 #
 # Docker in Docker; allows containers to start sibling containers
 #
-RUN sudo apt-get install -y apt-transport-https ca-certificates curl software-properties-common \
+RUN sudo apt-get install --no-install-recommends -y apt-transport-https ca-certificates curl software-properties-common \
     && curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add - \
     && sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable" \
-    && sudo apt-get install -y docker-ce-cli docker-compose
+    && sudo apt-get install --no-install-recommends -y docker-ce-cli docker-compose && rm -rf /var/lib/apt/lists/*;
 
 #
 # Kubectl, CLI command for interfacing with Kubernetes
 #
 WORKDIR /home/dockeruser/downloads
-RUN curl -LO "https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl" \
+RUN curl -f -LO "https://storage.googleapis.com/kubernetes-release/release/$( curl -f -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl" \
     && chmod +x ./kubectl \
     && sudo mv ./kubectl /usr/local/bin/kubectl \
     && echo alias kubectl=\"kubectl -s $KUBERNETES_URL\" >> ~/.bash_aliases
@@ -85,9 +85,9 @@ ENV CPLUS_INCLUDE_PATH=/usr/include/gdal
 ENV C_INCLUDE_PATH=/usr/include/gdal
 RUN sudo add-apt-repository ppa:ubuntugis/ubuntugis-unstable \
     && sudo apt update \
-    && sudo apt install -y gdal-bin libgdal-dev
+    && sudo apt install --no-install-recommends -y gdal-bin libgdal-dev && rm -rf /var/lib/apt/lists/*;
 RUN source ./harmony/bin/activate \
-    && pip install --global-option=build_ext --global-option="-I/usr/include/gdal" GDAL==`gdal-config --version`
+    && pip install --no-cache-dir --global-option=build_ext --global-option="-I/usr/include/gdal" GDAL==`gdal-config --version` --global-option="-I/usr/include/gdal" GDAL==`gdal-config --version`
 
 
 WORKDIR /home/dockeruser