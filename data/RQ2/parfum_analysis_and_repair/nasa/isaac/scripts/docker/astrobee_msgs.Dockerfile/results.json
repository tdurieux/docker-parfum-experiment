{
  "startTime": 1674248299952,
  "endTime": 1674248300524,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 5,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 34,
        "lineEnd": 39,
        "columnStart": 5,
        "columnEnd": 6
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 49,
        "lineEnd": 53,
        "columnStart": 5,
        "columnEnd": 30
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright (c) 2021, United States Government, as represented by the\n# Administrator of the National Aeronautics and Space Administration.\n#\n# All rights reserved.\n#\n# The \"ISAAC - Integrated System for Autonomous and Adaptive Caretaking\n# platform\" software is licensed under the Apache License, Version 2.0\n# (the \"License\"); you may not use this file except in compliance with the\n# License. You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n# License for the specific language governing permissions and limitations\n# under the License.\n\n# This will set up an Astrobee docker container using the non-NASA install instructions.\n# You must set the docker context to be the repository root directory\n\nARG UBUNTU_VERSION=16.04\nFROM ubuntu:${UBUNTU_VERSION}\n\nARG ROS_VERSION=kinetic\nARG PYTHON=\"\"\n\n# try to suppress certain warnings during apt-get calls\nARG DEBIAN_FRONTEND=noninteractive\nRUN echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections\n\n# install of apt-utils suppresses bogus warnings later\nRUN apt-get update \\\n  && apt-get install --no-install-recommends -y apt-utils 2>&1 | grep -v \"debconf: delaying package configuration, since apt-utils is not installed\" \\\n  && apt-get install --no-install-recommends -y \\\n  build-essential \\\n  git \\\n  lsb-release \\\n  sudo \\\n  wget \\\n  && rm -rf /var/lib/apt/lists/*\n\n# Install ROS\n\n# this command is expected to have output on stderr, so redirect to suppress warning\nRUN sh -c 'echo \"deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main\" > /etc/apt/sources.list.d/ros-latest.list' >/dev/null 2>&1 \\\n  && apt-key adv --keyserver 'hkp://keyserver.ubuntu.com:80' --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654\n\nRUN apt-get update \\\n  && apt-get install --no-install-recommends -y \\\n  libtinyxml-dev \\\n  ros-${ROS_VERSION}-ros-base \\\n  python${PYTHON}-rosdep \\\n  python${PYTHON}-catkin-tools \\\n  && rm -rf /var/lib/apt/lists/*\n\n# Add the entrypoint for docker\nRUN echo \"#!/bin/bash\\nset -e\\n\\nsource \\\"/opt/ros/${ROS_VERSION}/setup.bash\\\"\\nexec \\\"\\$@\\\"\" > /ros_entrypoint.sh && \\\n  chmod +x /ros_entrypoint.sh && \\\n  rosdep init && \\\n  rosdep update 2>&1 | egrep -v 'as root|fix-permissions'\n\n\n# Copy over the ff_msgs\nCOPY communications/ff_msgs /src/msgs/src/ff_msgs/ff_msgs/\nCOPY communications/ff_hw_msgs /src/msgs/src/ff_msgs/ff_hw_msgs/\n"
}