{
  "startTime": 1674249202518,
  "endTime": 1674249203006,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:14.19.1 as build\nWORKDIR /cumulus-dashboard\nCOPY package.json package-lock.json ./\nRUN npm install --no-optional && npm cache clean --force;\n\nARG APIROOT\nARG AUTH_METHOD\nARG AWS_REGION\nARG DAAC_NAME\nARG ENABLE_RECOVERY\nARG HIDE_PDR\nARG KIBANAROOT\nARG LABELS\nARG SERVED_BY_CUMULUS_API\nARG STAGE\n\nCOPY . ./\n\nRUN bash -c \"echo -e API ROOT IS : $APIROOT\"\n\nRUN \\\n APIROOT=$APIROOT \\\n AUTH_METHOD=$AUTH_METHOD \\\n AWS_REGION=$AWS_REGION \\\n DAAC_NAME=$DAAC_NAME \\\n ENABLE_RECOVERY=$ENABLE_RECOVERY \\\n HIDE_PDR=$HIDE_PDR \\\n KIBANAROOT=$KIBANAROOT \\\n LABELS=$LABELS \\\n SERVED_BY_CUMULUS_API=$SERVED_BY_CUMULUS_API \\\n STAGE=$STAGE \\\n npm run build\n\nFROM nginx:alpine as app\nSTOPSIGNAL SIGQUIT\n\nCOPY docker/nginx.conf /etc/nginx/nginx.conf\nCOPY docker/run-nginx.sh /usr/local/sbin/run-nginx.sh\n\nCMD [\"/usr/local/sbin/run-nginx.sh\"]\n\nCOPY --from=build /cumulus-dashboard/dist/ /usr/share/nginx/html/\n"
}