{
  "startTime": 1674253134653,
  "endTime": 1674253136152,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 8,
        "columnEnd": 74
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 130,
        "lineEnd": 131,
        "columnStart": 8,
        "columnEnd": 95
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 135,
        "lineEnd": 136,
        "columnStart": 12,
        "columnEnd": 102
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 141,
        "lineEnd": 142,
        "columnStart": 8,
        "columnEnd": 97
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 146,
        "lineEnd": 147,
        "columnStart": 12,
        "columnEnd": 104
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 152,
        "lineEnd": 153,
        "columnStart": 8,
        "columnEnd": 95
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 157,
        "lineEnd": 158,
        "columnStart": 13,
        "columnEnd": 102
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 101,
        "lineEnd": 108,
        "columnStart": 8,
        "columnEnd": 19
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 18,
        "lineEnd": 21,
        "columnStart": 8,
        "columnEnd": 21
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 22,
        "columnEnd": 79
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 8,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 35,
        "lineEnd": 36,
        "columnStart": 8,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 51,
        "lineEnd": 92,
        "columnStart": 8,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 114,
        "lineEnd": 114,
        "columnStart": 8,
        "columnEnd": 47
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 118,
        "lineEnd": 118,
        "columnStart": 8,
        "columnEnd": 47
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 128,
        "lineEnd": 128,
        "columnStart": 22,
        "columnEnd": 79
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 18,
        "lineEnd": 21,
        "columnStart": 8,
        "columnEnd": 21
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 22,
        "columnEnd": 79
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 8,
        "columnEnd": 27
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 35,
        "lineEnd": 36,
        "columnStart": 8,
        "columnEnd": 49
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 45,
        "lineEnd": 48,
        "columnStart": 8,
        "columnEnd": 27
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 51,
        "lineEnd": 92,
        "columnStart": 8,
        "columnEnd": 22
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 114,
        "lineEnd": 114,
        "columnStart": 8,
        "columnEnd": 47
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 118,
        "lineEnd": 118,
        "columnStart": 8,
        "columnEnd": 47
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 128,
        "lineEnd": 128,
        "columnStart": 22,
        "columnEnd": 79
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM lsiobase/ubuntu:focal\n\nARG VERSION\nARG MODULE\n\nENV \\\n LIBVA_DRIVERS_PATH=\"/usr/lib/x86_64-linux-gnu/dri\" \\\n LD_LIBRARY_PATH=\"/usr/lib/x86_64-linux-gnu\" \\\n NVIDIA_DRIVER_CAPABILITIES=\"compute,video,utility\" \\\n NVIDIA_VISIBLE_DEVICES=\"all\" \\\n HANDBRAKE=1.5.1\n\nENV WEB_UI_PORT=\"8265\" SERVER_PORT=\"8266\" NODE_PORT=\"8267\" PUID=\"1000\" PGID=\"1000\" UMASK=\"002\" TZ=\"Etc/UTC\" HOME=\"/home/Tdarr\"\n\nCOPY root/ /\n\n# handle deps\nRUN apt-get update && \\\n        apt-get install --no-install-recommends -y \\\n            software-properties-common \\\n            git \\\n            trash-cli && \\\n    mkdir -p \\\n    /app \\\n    /logs \\\n    /temp \\\n    \"${HOME}\" && \\\n    useradd -u ${PUID} -U -d ${HOME} -s /bin/false Tdarr && \\\n    usermod -G users Tdarr && \\\n\n    apt-get update && apt-get install --no-install-recommends -y curl unzip mkvtoolnix libtesseract-dev && \\\n    if uname -m | grep -q x86; then \\\n        apt install --no-install-recommends -y wget && \\\n        wget https://repo.jellyfin.org/releases/server/ubuntu/versions/jellyfin-ffmpeg/4.3.2-1/jellyfin-ffmpeg_4.3.2-1-focal_amd64.deb && \\\n        apt install --no-install-recommends -y \\\n        ./jellyfin-ffmpeg_4.3.2-1-focal_amd64.deb && \\\n        ln -s /usr/lib/jellyfin-ffmpeg/ffmpeg /usr/local/bin/ffmpeg && \\\n        ln -s /usr/lib/jellyfin-ffmpeg/ffmpeg /usr/local/bin/tdarr-ffmpeg && \\\n        # apt-get install -y ffmpeg && \\\n\n        # Intel deps\n        curl -f -s https://repositories.intel.com/graphics/intel-graphics.key | apt-key add - && \\\n        echo 'deb [arch=amd64] https://repositories.intel.com/graphics/ubuntu focal main' > /etc/apt/sources.list.d/intel-graphics.list && \\\n        apt-get update && \\\n        apt-get install -y --no-install-recommends \\\n            intel-media-va-driver-non-free \\\n            vainfo \\\n            mesa-va-drivers && \\\n\n        # HandBrake deps\n        apt-get install --no-install-recommends -y \\\n            autoconf \\\n            automake \\\n            autopoint \\\n            appstream \\\n            build-essential \\\n            cmake \\\n            git \\\n            libass-dev \\\n            libbz2-dev \\\n            libfontconfig1-dev \\\n            libfreetype6-dev \\\n            libfribidi-dev \\\n            libharfbuzz-dev \\\n            libjansson-dev \\\n            liblzma-dev \\\n            libmp3lame-dev \\\n            libnuma-dev \\\n            libogg-dev \\\n            libopus-dev \\\n            libsamplerate-dev \\\n            libspeex-dev \\\n            libtheora-dev \\\n            libtool \\\n            libtool-bin \\\n            libturbojpeg0-dev \\\n            libvorbis-dev \\\n            libx264-dev \\\n            libxml2-dev \\\n            libvpx-dev \\\n            m4 \\\n            make \\\n            meson \\\n            nasm \\\n            ninja-build \\\n            patch \\\n            pkg-config \\\n            python \\\n            tar \\\n            zlib1g-dev \\\n            libva-dev \\\n            libdrm-dev && \\\n\n        rm -rdf /tmp/handbrake && \\\n        mkdir -p /tmp/handbrake && \\\n        git clone \\\n            --branch ${HANDBRAKE} \\\n            --depth 1 https://github.com/HandBrake/HandBrake.git \\\n            /tmp/handbrake && \\\n        cd /tmp/handbrake && \\\n        ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n            --enable-nvenc \\\n            --enable-qsv \\\n            --enable-x265 \\\n            --disable-gtk \\\n            --launch-jobs=14 \\\n            --launch \\\n            --force && \\\n        make --directory=build install && \\\n        cp /tmp/handbrake/build/HandBrakeCLI /usr/local/bin/HandBrakeCLI && \\\n        rm -rdf /tmp/handbrake/; \\\n    fi && \\\n    if uname -m | grep -q aarch64; then \\\n        apt-get install --no-install-recommends -y handbrake-cli ffmpeg && \\\n        ln -s /usr/bin/ffmpeg /usr/local/bin/tdarr-ffmpeg; \\\n    fi && \\\n    if uname -m | grep -q armv7l; then \\\n        apt-get install --no-install-recommends -y handbrake-cli ffmpeg && \\\n        ln -s /usr/bin/ffmpeg /usr/local/bin/tdarr-ffmpeg; \\\n    fi && rm -rf /var/lib/apt/lists/*;\n\n# handle tdarr binaries\nRUN if [ \"$MODULE\" = \"Tdarr_Node\" ]; then \\\n        echo removing /tdarr_server && \\\n        rm -rdf /etc/services.d/tdarr_server ; \\\n    fi && \\\n    \n    apt-get update && apt-get install --no-install-recommends -y curl unzip mkvtoolnix libtesseract-dev && \\\n    if uname -m | grep -q x86; then \\\n        curl -f --connect-timeout 120 --retry 5 -o /tmp/$MODULE.zip -L \\\n        \"https://tdarrs.s3.us-west-000.backblazeb2.com/versions/$VERSION/linux_x64/$MODULE.zip\" && \\\n        unzip -q /tmp/$MODULE.zip -d /app/$MODULE -x *.exe && \\\n\n        if [ \"$MODULE\" = \"Tdarr_Server\" ]; then \\\n            curl -f --connect-timeout 120 --retry 5 -o /tmp/Tdarr_Node.zip -L \\\n            \"https://tdarrs.s3.us-west-000.backblazeb2.com/versions/$VERSION/linux_x64/Tdarr_Node.zip\" && \\\n            unzip -q /tmp/Tdarr_Node.zip -d /app/Tdarr_Node -x *.exe; \\\n        fi; \\\n    fi && \\\n    if uname -m | grep -q aarch64; then \\\n        curl -f --connect-timeout 120 --retry 5 -o /tmp/$MODULE.zip -L \\\n        \"https://tdarrs.s3.us-west-000.backblazeb2.com/versions/$VERSION/linux_arm64/$MODULE.zip\" && \\\n        unzip -q /tmp/$MODULE.zip -d /app/$MODULE -x *.exe && \\\n\n        if [ \"$MODULE\" = \"Tdarr_Server\" ]; then \\\n            curl -f --connect-timeout 120 --retry 5 -o /tmp/Tdarr_Node.zip -L \\\n            \"https://tdarrs.s3.us-west-000.backblazeb2.com/versions/$VERSION/linux_arm64/Tdarr_Node.zip\" && \\\n            unzip -q /tmp/Tdarr_Node.zip -d /app/Tdarr_Node -x *.exe; \\\n        fi; \\\n    fi && \\\n    if uname -m | grep -q armv7l; then \\\n        curl -f --connect-timeout 120 --retry 5 -o /tmp/$MODULE.zip -L \\\n        \"https://tdarrs.s3.us-west-000.backblazeb2.com/versions/$VERSION/linux_arm/$MODULE.zip\" && \\\n        unzip -q /tmp/$MODULE.zip -d /app/$MODULE -x *.exe && \\\n\n        if [ \"$MODULE\" = \"Tdarr_Server\" ]; then \\\n             curl -f --connect-timeout 120 --retry 5 -o /tmp/Tdarr_Node.zip -L \\\n            \"https://tdarrs.s3.us-west-000.backblazeb2.com/versions/$VERSION/linux_arm/Tdarr_Node.zip\" && \\\n            unzip -q /tmp/Tdarr_Node.zip -d /app/Tdarr_Node -x *.exe; \\\n        fi; \\\n    fi && \\\n\n    rm -rdf /tmp/$MODULE.zip && \\\n    rm -rdf /tmp/Tdarr_Node.zip && \\\n    trash-empty && \\\n    apt-get autoremove -y && rm -rf /var/lib/apt/lists/*;\n\nEXPOSE ${NODE_PORT}\nEXPOSE ${WEB_UI_PORT}\nEXPOSE ${SERVER_PORT}\nENTRYPOINT [\"/init\"]"
}