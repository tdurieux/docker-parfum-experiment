{
  "startTime": 1674249796402,
  "endTime": 1674249797846,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 2,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 2,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 2,
        "columnEnd": 27
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 2,
        "columnEnd": 51
      }
    }
  ],
  "repairedDockerfile": "# This Source Code Form is licensed MPL-2.0: http://mozilla.org/MPL/2.0\n\n# == Distribution preparation ==\nFROM ubuntu:bionic\nENV DEBIAN_FRONTEND noninteractive\n\n# Use BASH(1) as shell, affects the RUN commands below\nRUN ln -sf bash /bin/sh && ls -al /bin/sh\n\n# Keep all steps + cleanups in one layer to reduce the resulting size\nRUN \\\n\n  echo '## Provide /bin/retry' && \\\n  echo -e '#!/bin/bash\\n\"$@\" || { sleep 15 ; \"$@\" ; } || { sleep 90 ; \"$@\" ; }' > /bin/retry && chmod +x /bin/retry && \\\n  \\\n  echo '## Avoid unused documentation' && \\\n  mkdir mkdir  /etc/dpkg/dpkg.conf.d && \\\n  echo -e > /etc/dpkg/dpkg.conf.d/01_nodoc \\\n       'path-exclude=/usr/share/locale/*\\npath-exclude=/usr/share/man/*\\npath-exclude=/usr/share/info/*\\npath-exclude=/usr/share/groff/*\\n' \\\n       'path-exclude=/usr/share/lintian/*\\npath-exclude=/usr/share/doc/*\\npath-include=/usr/share/doc/*/copyright\\n' && \\\n  \\\n  echo '## Upgrade packages' && \\\n  retry apt-get update && retry apt-get -y install eatmydata && \\\n  retry eatmydata apt-get -y upgrade && \\\n  \\\n  echo '## Build stripped down fluidsynth version without drivers' && \\\n  retry eatmydata apt-get install -y build-essential curl cmake libglib2.0-dev && \\\n  mkdir -p /tmp/fluid/build && cd /tmp/fluid/ && \\\n  curl -sfSOL https://github.com/FluidSynth/fluidsynth/archive/v2.0.9.tar.gz && \\\n  tar xf v2.0.9.tar.gz && rm v2.0.9.tar.gz && cd build && \\\n  cmake ../fluidsynth-2.0.9 \\\n\t-DCMAKE_INSTALL_PREFIX=/usr/ \\\n\t-DLIB_SUFFIX=\"/`dpkg-architecture -qDEB_HOST_MULTIARCH`\" \\\n\t-Denable-libsndfile=1 \\\n\t-Denable-dbus=0 \\\n\t-Denable-ipv6=0 \\\n\t-Denable-jack=0 \\\n\t-Denable-midishare=0 \\\n\t-Denable-network=0 \\\n\t-Denable-oss=0 \\\n\t-Denable-pulseaudio=0 \\\n\t-Denable-readline=0 \\\n\t-Denable-alsa=0 \\\n\t-Denable-lash=0 && \\\n  make && make install && cd / && rm -rf /tmp/fluid/ && \\\n  eatmydata apt-get --purge remove -y cmake && \\\n  \\\n  echo '## Provide Beast dependencies, add libXss.so for electron' && \\\n  V=9 && \\\n  retry eatmydata apt-get install -y \\\n\tbuild-essential automake autoconf autoconf-archive libtool \\\n\tcurl doxygen graphviz texlive-binaries git libxml2-utils g++-8 \\\n\tlibxml2-dev gawk python2.7-dev python3 libboost-system-dev \\\n\tcppcheck clang-$V clang-tidy-$V clang-tools-$V python3-pandocfilters \\\n\tlibasound2-dev libflac-dev libvorbis-dev libmad0-dev libjack-dev \\\n\tgettext imagemagick libgconf-2-4 nodejs unzip libxss1 \\\n\tlibgtk-3-bin libgdk-pixbuf2.0-dev && \\\n  update-alternatives \\\n    --install /usr/bin/gcc                 gcc                 /usr/bin/gcc-8 900 \\\n    --slave   /usr/bin/g++                 g++                 /usr/bin/g++-8 && \\\n  update-alternatives \\\n    --install /usr/bin/clang               clang               /usr/bin/clang-$V 900 \\\n    --slave   /usr/bin/asan_symbolize      asan_symbolize      /usr/bin/asan_symbolize-$V \\\n    --slave   /usr/bin/clang++             clang++             /usr/bin/clang++-$V  \\\n    --slave   /usr/bin/clang-check         clang-check         /usr/bin/clang-check-$V \\\n    --slave   /usr/bin/clang-cpp           clang-cpp           /usr/bin/clang-cpp-$V \\\n    --slave   /usr/bin/clang-tidy          clang-tidy          /usr/bin/clang-tidy-$V \\\n    --slave   /usr/bin/scan-build          scan-build          /usr/bin/scan-build-$V && \\\n\n  curl -f -sL https://deb.nodesource.com/setup_12.x | bash - && \\\n  apt-get install --no-install-recommends -y nodejs && \\\n\n  echo '## Provide recent Pandoc' && \\\n  retry curl -ROL 'https://github.com/jgm/pandoc/releases/download/2.9/pandoc-2.9-1-amd64.deb' && \\\n  dpkg -i pandoc-2.9-1-amd64.deb && \\\n  rm pandoc-2.9-1-amd64.deb && \\\n\n  echo '## Cleanup' && \\\n  eatmydata apt-get --purge remove -y cmake python2.7-dev && \\\n  eatmydata apt-get autoremove -y && \\\n  apt-get clean && rm -rf /var/lib/apt/lists/* && \\\n  find /usr/share/locale/ -mindepth 1 -maxdepth 1 ! -name 'en*' | xargs rm -r && \\\n  find /usr/share/doc/ -depth -type f ! -name copyright | xargs rm -f && \\\n  rm -rf /usr/share/man/* /usr/share/groff/* /usr/share/info/* /usr/share/lintian/* && \\\n  :\n"
}