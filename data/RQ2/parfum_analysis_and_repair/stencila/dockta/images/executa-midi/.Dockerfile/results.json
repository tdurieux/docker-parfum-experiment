{
  "startTime": 1674255316561,
  "endTime": 1674255317543,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 66
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 30,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 32
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Generated by Dockta 0.22.2 at 2021-03-18T06:07:04.315Z\n# To stop Dockta generating this file and start editing it yourself,\n# rename it to \"Dockerfile\".\n\n# This tells Docker which base image to use.\nFROM stencila/executa-all\n\n# All installation commands are run as the root user\nUSER root\n\n# This section installs system packages needed to add extra system repositories.\nRUN apt-get update \\\n && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y \\\n      apt-transport-https \\\n      ca-certificates \\\n      curl \\\n      software-properties-common && rm -rf /var/lib/apt/lists/*;\n\n# This section adds system repositories required to install extra system packages.\nRUN curl -f -sSL https://deb.nodesource.com/gpgkey/nodesource.gpg.key | apt-key add - \\\n && apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 51716619E084DAB9\nRUN apt-add-repository \"deb https://deb.nodesource.com/node_14.x focal main\" \\\n && apt-add-repository \"deb https://mran.microsoft.com/snapshot/2021-03-16/bin/linux/ubuntu focal-cran40/\"\n\n# This section sets environment variables within the image.\nENV TZ=\"Etc/UTC\"\n\n# This section installs system packages required for your project\n# If you need extra system packages add them here.\nRUN apt-get update \\\n && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y \\\n      gdal-bin \\\n      git-core \\\n      libcurl4-openssl-dev \\\n      libgdal-dev \\\n      libgeos-dev libgeos++-dev \\\n      libgit2-dev \\\n      libicu-dev \\\n      libpng-dev \\\n      libssl-dev \\\n      libudunits2-dev \\\n      libxml2-dev \\\n      make \\\n      nodejs \\\n      pandoc pandoc-citeproc \\\n      python3 \\\n      python3-pip \\\n      r-base \\\n      zlib1g-dev \\\n && apt-get autoremove -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n\n# It's good practice to run Docker images as a non-root user.\n# This section creates a guest user (if necessary) and sets its home directory as the default working directory.\nRUN id -u guest >/dev/null 2>&1 || useradd --create-home --uid 1000 -s /bin/bash guest\nWORKDIR /home/guest\n\n# This is a special comment to tell Dockta to manage the build from here on\n# dockta\n\n# This section copies package requirement files into the image\nCOPY package.json package.json\nCOPY requirements.txt requirements.txt\nCOPY DESCRIPTION DESCRIPTION\n\n# This section runs commands to install the packages specified in the requirement file/s\nRUN npm install package.json \\\n && pip3 install --no-cache-dir --requirement requirements.txt \\\n && bash -c \"Rscript <(curl -sL https://unpkg.com/@stencila/dockta/src/install.R)\" && npm cache clean --force;\n\n# This sets the default user when the container is run\nUSER guest\n"
}