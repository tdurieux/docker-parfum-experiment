{
  "startTime": 1674255409594,
  "endTime": 1674255410966,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 26,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 10
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 53
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:20.04\n\n# Install system dependencies\nARG DEBIAN_FRONTEND=noninteractive\nRUN apt-get update \\\n && apt-get install --no-install-recommends -y \\\n      curl \\\n      python3 \\\n      python3-pip \\\n      software-properties-common && rm -rf /var/lib/apt/lists/*;\n\n# Install recent Node.js from NodeSource\nRUN curl -f -sL https://deb.nodesource.com/setup_14.x | bash \\\n && apt-get install --no-install-recommends -y nodejs \\\n && npm config --global set user root && rm -rf /var/lib/apt/lists/*;\n\n# Install recent R from CRAN\nRUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E298A3A825C0D65DFD57CBB651716619E084DAB9 \\\n && add-apt-repository 'deb https://cloud.r-project.org/bin/linux/ubuntu focal-cran40/' \\\n && apt-get update \\\n && apt-get install --no-install-recommends -y r-base \\\n && rm -rf /var/lib/apt/lists/*\n\n# Install necessary libs for Encoda\n# See https://github.com/stencila/encoda/blob/master/Dockerfile\nRUN apt-get update \\\n && apt-get install --no-install-recommends -y \\\n      libasound2 \\\n      libatk-bridge2.0-0 \\\n      libatk1.0-0 \\\n      libcups2 \\\n      libgbm1 \\\n      libgconf-2-4 \\\n      libgtk-3-0 \\\n      libgtk2.0-0 \\\n      libnotify-dev \\\n      libnss3 \\\n      libpangocairo-1.0-0 \\\n      libxcomposite1 \\\n      libxrandr2 \\\n      libxss1 \\\n      libxtst6 \\\n      xauth \\\n      xvfb \\\n && apt-get autoremove -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n\n# Install executors\n# The EXECUTORS_LATEST argument can be set at the current time e.g.\n#    docker build --build-arg EXECUTORS_LATEST=$(date --iso=seconds) ...\n# to force a reinstall of the latest version of executors where the version is not pinned\n# (by busting the Docker cache with a new RUN layer)\nARG EXECUTORS_LATEST=false\nRUN echo \"Forcing install of latest executors: ${EXECUTORS_LATEST}\"\nRUN npm install --global @stencila/executa && npm cache clean --force;\nRUN npm install --global @stencila/encoda@0.116.1 && npm cache clean --force;\nRUN npm install --global @stencila/basha && npm cache clean --force;\nRUN npm install --global @stencila/jupita && npm cache clean --force;\nRUN R -e 'install.packages(\"remotes\"); remotes::install_github(\"stencila/rasta\")'\n\n# Temporary fix. Install Typscript to avoid this\n# https://dev.azure.com/stencila/stencila/_build/results?buildId=2035&view=logs&j=1b7bf37f-59a6-5457-eae3-62ce29cb19a4&t=9d3843fb-f716-59bf-683b-829e70871150&l=3860\n# which seems to be caused by TS being a peer dependency of Typedoc\nRUN npm install --global typescript && npm cache clean --force;\n\n# Install Jupyter kernels\nRUN python3 -m pip install ipykernel\n\n# Setup container user prior to registering executors\nRUN useradd --create-home guest\nWORKDIR /home/guest\nUSER guest\n\n# Register executors so that they can be discovered by Executa\nRUN basha register\nRUN node /usr/lib/node_modules/@stencila/encoda/dist/encoda.js register\nRUN jupita register\nRUN R -e 'rasta::register()'\n\n# Register Jupyter kernels so that they can be discovered by Jupita\nRUN python3 -m ipykernel install --user\n\n# Serve Executa on external address so that host can connect\nCMD executa serve --ws=0.0.0.0:9000 --debug\n"
}