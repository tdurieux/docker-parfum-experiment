diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/stencila/dockta/images/executa-all/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/stencila/dockta/images/executa-all/Dockerfile/repaired.Dockerfile
index 4a2f75a..d48d27a 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/stencila/dockta/images/executa-all/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/stencila/dockta/images/executa-all/Dockerfile/repaired.Dockerfile
@@ -3,28 +3,28 @@ FROM ubuntu:20.04
 # Install system dependencies
 ARG DEBIAN_FRONTEND=noninteractive
 RUN apt-get update \
- && apt-get install -y \
+ && apt-get install --no-install-recommends -y \
       curl \
       python3 \
       python3-pip \
-      software-properties-common
+      software-properties-common && rm -rf /var/lib/apt/lists/*;
 
 # Install recent Node.js from NodeSource
-RUN curl -sL https://deb.nodesource.com/setup_14.x | bash \
- && apt-get install -y nodejs \
- && npm config --global set user root
+RUN curl -f -sL https://deb.nodesource.com/setup_14.x | bash \
+ && apt-get install --no-install-recommends -y nodejs \
+ && npm config --global set user root && rm -rf /var/lib/apt/lists/*;
 
 # Install recent R from CRAN
 RUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E298A3A825C0D65DFD57CBB651716619E084DAB9 \
  && add-apt-repository 'deb https://cloud.r-project.org/bin/linux/ubuntu focal-cran40/' \
  && apt-get update \
- && apt-get install -y r-base \
+ && apt-get install --no-install-recommends -y r-base \
  && rm -rf /var/lib/apt/lists/*
 
 # Install necessary libs for Encoda
 # See https://github.com/stencila/encoda/blob/master/Dockerfile
 RUN apt-get update \
- && apt-get install -y \
+ && apt-get install --no-install-recommends -y \
       libasound2 \
       libatk-bridge2.0-0 \
       libatk1.0-0 \
@@ -53,16 +53,16 @@ RUN apt-get update \
 # (by busting the Docker cache with a new RUN layer)
 ARG EXECUTORS_LATEST=false
 RUN echo "Forcing install of latest executors: ${EXECUTORS_LATEST}"
-RUN npm install --global @stencila/executa
-RUN npm install --global @stencila/encoda@0.116.1
-RUN npm install --global @stencila/basha
-RUN npm install --global @stencila/jupita
+RUN npm install --global @stencila/executa && npm cache clean --force;
+RUN npm install --global @stencila/encoda@0.116.1 && npm cache clean --force;
+RUN npm install --global @stencila/basha && npm cache clean --force;
+RUN npm install --global @stencila/jupita && npm cache clean --force;
 RUN R -e 'install.packages("remotes"); remotes::install_github("stencila/rasta")'
 
 # Temporary fix. Install Typscript to avoid this
 # https://dev.azure.com/stencila/stencila/_build/results?buildId=2035&view=logs&j=1b7bf37f-59a6-5457-eae3-62ce29cb19a4&t=9d3843fb-f716-59bf-683b-829e70871150&l=3860
 # which seems to be caused by TS being a peer dependency of Typedoc
-RUN npm install --global typescript
+RUN npm install --global typescript && npm cache clean --force;
 
 # Install Jupyter kernels
 RUN python3 -m pip install ipykernel