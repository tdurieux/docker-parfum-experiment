{
  "startTime": 1674252568871,
  "endTime": 1674252570199,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 19
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 24,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 10
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 19
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:20.04\n\nARG DEBIAN_FRONTEND=noninteractive\nARG APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=1\n\n# Install system dependencies\nRUN apt-get update \\\n && apt-get install --no-install-recommends -y \\\n        curl \\\n        python3 \\\n        python3-pip && rm -rf /var/lib/apt/lists/*;\n\n# Install Node.js and npm.\nRUN curl -f -sL https://deb.nodesource.com/setup_14.x | bash - \\\n && apt-get update \\\n && apt-get install --no-install-recommends -y \\\n        nodejs \\\n && apt-get autoremove -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n\n# Install necessary libs for Encoda\n# See https://github.com/stencila/encoda/blob/master/Dockerfile\nRUN apt-get update \\\n && apt-get install --no-install-recommends -y \\\n      libasound2 \\\n      libatk-bridge2.0-0 \\\n      libatk1.0-0 \\\n      libcups2 \\\n      libgbm1 \\\n      libgconf-2-4 \\\n      libgtk-3-0 \\\n      libgtk2.0-0 \\\n      libnotify-dev \\\n      libnss3 \\\n      libpangocairo-1.0-0 \\\n      libxcomposite1 \\\n      libxrandr2 \\\n      libxss1 \\\n      libxtst6 \\\n      xauth \\\n      xvfb \\\n && apt-get autoremove -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n\n# Create non-root `worker` user and use it's home dir\n# to copy files into\nRUN useradd --create-home worker\nWORKDIR /home/worker\n\n# Install Python dependencies\nCOPY requirements.txt ./ \nRUN pip3 install --no-cache-dir -r requirements.txt\n\n# Install Node.js dependencies and add the binaries dir to PATH\nCOPY package*.json ./\nRUN npm ci\nENV PATH=\"${PATH}:./node_modules/.bin\"\n\n# Copy worker files over (see .dockerignore for what is included)\nCOPY . ./\n\n# Ensure Celery startup banner is printed\n# See https://www.distributedpython.com/2018/10/01/celery-docker-startup/\nENV PYTHONUNBUFFERED=1\n\n# Run as non-root user\nUSER worker\n\n# Use the array form of CMD to ensure that the celery process has PID 1\n# so that it will receive SIGTERM for graceful shutdown\nCMD [\"celery\", \"--app=worker\", \"worker\", \"--heartbeat-interval=60\"]\n"
}