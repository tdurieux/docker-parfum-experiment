{
  "startTime": 1674251356624,
  "endTime": 1674251357638,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 22,
        "columnEnd": 52
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 22,
        "columnEnd": 52
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.7\n\nARG kafka_version=2.13-2.5.0\nARG braai_version=d6_m9\nARG acai_h_version=d1_dnn_20201130\nARG acai_v_version=d1_dnn_20201130\nARG acai_o_version=d1_dnn_20201130\nARG acai_n_version=d1_dnn_20201130\nARG acai_b_version=d1_dnn_20201130\n\n# Install vim, git, cron, and jdk\n#RUN apt-get update && apt-get -y install apt-file && apt-file update && apt-get -y install vim && \\\n#    apt-get -y install git && apt-get install -y default-jdk\n\n# Install jdk, mkdirs, fetch and install Kafka\nRUN apt-get update && apt-get install --no-install-recommends -y default-jdk && \\\n    mkdir -p /app /app/models_pgir /data /data/logs /_tmp /kafka && \\\n    wget https://storage.googleapis.com/ztf-fritz/kafka_$kafka_version.tgz -O /kafka/kafka_$kafka_version.tgz && \\\n    tar -xzf /kafka/kafka_$kafka_version.tgz && rm /kafka/kafka_$kafka_version.tgz && rm -rf /var/lib/apt/lists/*;\n\n# Kafka:\n#ADD http://apache.claz.org/kafka/2.5.0/kafka_$kafka_version.tgz /kafka\n#RUN tar -xzf /kafka/kafka_$kafka_version.tgz\n\n# Kafka test-server properties:\nCOPY kowalski/server.properties /kafka_$kafka_version/config/\n\n# ML models <model_name>.<tag>.<extensions>:\nADD https://github.com/dmitryduev/braai/raw/master/models/braai_$braai_version.h5 /app/models/braai.$braai_version.h5\nADD https://github.com/dmitryduev/acai/raw/master/models/acai_h.$acai_h_version.h5 /app/models/\nADD https://github.com/dmitryduev/acai/raw/master/models/acai_v.$acai_v_version.h5 /app/models/\nADD https://github.com/dmitryduev/acai/raw/master/models/acai_o.$acai_o_version.h5 /app/models/\nADD https://github.com/dmitryduev/acai/raw/master/models/acai_n.$acai_n_version.h5 /app/models/\nADD https://github.com/dmitryduev/acai/raw/master/models/acai_b.$acai_b_version.h5 /app/models/\n\n# copy over the test data\nCOPY data/ztf_alerts/ /app/data/ztf_alerts/\nCOPY data/pgir_alerts/ /app/data/pgir_alerts/\nCOPY data/catalogs/ /app/data/catalogs/\nCOPY data/ztf_matchfiles/ /app/data/ztf_matchfiles/\nCOPY data/ztf_source_features/ /app/data/ztf_source_features/\nCOPY data/ztf_source_classifications/ /app/data/ztf_source_classifications/\n\n# copy over the config and the code\nCOPY [\"config.yaml\", \"version.txt\", \"kowalski/generate_supervisord_conf.py\", \"kowalski/utils.py\",\\\n      \"kowalski/dask_cluster.py\",\\\n      \"kowalski/alert_broker.py\",\\\n      \"kowalski/alert_broker_ztf.py\",\\\n      \"kowalski/ops_watcher_ztf.py\",\\\n      \"kowalski/tns_watcher.py\",\\\n      \"kowalski/alert_broker_pgir.py\",\\\n      \"kowalski/dask_cluster_pgir.py\",\\\n      \"kowalski/performance_reporter.py\",\\\n      \"kowalski/requirements_ingester.txt\",\\\n      \"tests/test_alert_broker_ztf.py\",\\\n      \"tests/test_alert_broker_pgir.py\",\\\n      \"tests/test_ingester.py\",\\\n      \"tests/test_ingester_pgir.py\",\\\n      \"tests/test_tns_watcher.py\",\\\n      \"tests/test_tools.py\",\\\n      \"tools/fetch_ztf_matchfiles.py\",\\\n      \"tools/ingest_ztf_matchfiles.py\",\\\n      \"tools/ingest_ztf_source_features.py\",\\\n      \"tools/ingest_ztf_source_classifications.py\",\\\n      \"tools/istarmap.py\",\\\n      \"tools/ingest_vlass.py\",\\\n      \"tools/ingest_igaps.py\",\\\n      \"tools/ingest_ztf_public.py\",\\\n      \"tools/ingest_ptf_matchfiles.py\",\\\n      \"/app/\"]\n\n# change working directory to /app\nWORKDIR /app\n\n# install python libs and generate supervisord config file\nRUN pip install -r /app/requirements_ingester.txt --no-cache-dir && \\\n    python generate_supervisord_conf.py ingester\n\n# run container\nCMD /usr/local/bin/supervisord -n -c supervisord_ingester.conf\n"
}