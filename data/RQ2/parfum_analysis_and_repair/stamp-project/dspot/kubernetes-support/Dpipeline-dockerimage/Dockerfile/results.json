{
  "startTime": 1674250763091,
  "endTime": 1674250763976,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 33
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 57
      }
    }
  ],
  "repairedDockerfile": "FROM maven:3.6.1-jdk-8\n\n# Download the jar file from dspot releases\nADD https://github.com/STAMP-project/dspot/releases/download/dspot-2.2.0/dspot-2.2.0-jar-with-dependencies.jar /root/dspot.jar\n\n# Add customisable Maven settings file.\n# It can be used, for instance, to pass corporate proxy settings,\n# otherwise download dependencies from Maven repositories will fail\nCOPY settings.xml /root/.m2/\n\nCOPY Dpipeline_worker.py /root/\n\nRUN apt-get update\nRUN apt-get install --no-install-recommends cloc -y && rm -rf /var/lib/apt/lists/*;\nRUN apt-get install --no-install-recommends python-pip -y && rm -rf /var/lib/apt/lists/*;\nRUN pip install --no-cache-dir stomp.py gitpython travispy pymongo\n\n# this is the run option for dspot allowing different dspot run setup.\n# Down here is a variant when running jar and a variant when running with maven.\n# Both should be filled out and functionally be identical. \n# If nothing specify then it will just run as \"java -jar JAR -p PROPERTIES_FILE\",\n# which is the minimal required. If value is \"-p JacocoCoverageSelector\", then\n# the final command is \"java -jar JAR -p PROPERTIES_FILE -p JacocoCoverageSelector\".\n# The identical options for maven plugin is \"-Dtest-criterion=JacocoCoverageSelector\"\n# Otherwise as basic as \"mvn eu.stamp-project:dspot-maven:amplify-unit-tests\".\n\nENV RUN_OPTIONS_JAR=\nENV RUN_OPTIONS_MAVEN=\nENV RUN_TIMEOUT=10\n# number of hours before connection is renewed (mean for Kubernetes).\nENV RECONNECT_TIME=24\n## If 1 then it will expect receiving repo slug and branch name instead. Otherwise it will be build id.\nENV RESTFUL=1\nENV SLUG_MODE=1\n\n# SMTP , for emailing result to the user when finish.\nENV SMTP_ADDRESS=\nENV SMTP_PASSWORD=\nENV SMTP_HOST=\nENV SMTP_PORT=\nENV SMTP_AUTH=1\nENV SMTP_TLS=1\n\n# RESTFUL should be 1 if runing with dspot.\nENV MONGO_URL=mongodb://localhost:27017\nENV MONGO_DBNAME=Dspot\nENV MONGO_COLNAME=AmpRecords\n\n## Optional for pushing to the repo related to the push url, Also can be specified later.\nENV GITHUB_OAUTH=\nENV GITHUB_USEREMAIL=\nENV PUSH_URL=\n\n## Fixed values no need to change\nENV ACTIVEMQ_HOST=localhost\nENV ACTIVEMQ_QUEUE=/queue/Dpipeline\nENV GITHUB_USERNAME=dspot\n\nWORKDIR /root/\n\nENTRYPOINT [\"python\",\"Dpipeline_worker.py\"]\n"
}