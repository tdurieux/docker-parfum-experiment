diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/stamp-project/dspot/kubernetes-support/Dpipeline-dockerimage/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/stamp-project/dspot/kubernetes-support/Dpipeline-dockerimage/Dockerfile/repaired.Dockerfile
index addaf2f..60e3409 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/stamp-project/dspot/kubernetes-support/Dpipeline-dockerimage/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/stamp-project/dspot/kubernetes-support/Dpipeline-dockerimage/Dockerfile/repaired.Dockerfile
@@ -1,7 +1,7 @@
 FROM maven:3.6.1-jdk-8
 
 # Download the jar file from dspot releases
-ADD https://github.com/STAMP-project/dspot/releases/download/dspot-2.2.0/dspot-2.2.0-jar-with-dependencies.jar /root/dspot.jar 
+ADD https://github.com/STAMP-project/dspot/releases/download/dspot-2.2.0/dspot-2.2.0-jar-with-dependencies.jar /root/dspot.jar
 
 # Add customisable Maven settings file.
 # It can be used, for instance, to pass corporate proxy settings,
@@ -11,13 +11,13 @@ COPY settings.xml /root/.m2/
 COPY Dpipeline_worker.py /root/
 
 RUN apt-get update
-RUN apt-get install cloc -y
-RUN apt-get install python-pip -y
-RUN pip install stomp.py gitpython travispy pymongo
+RUN apt-get install --no-install-recommends cloc -y && rm -rf /var/lib/apt/lists/*;
+RUN apt-get install --no-install-recommends python-pip -y && rm -rf /var/lib/apt/lists/*;
+RUN pip install --no-cache-dir stomp.py gitpython travispy pymongo
 
 # this is the run option for dspot allowing different dspot run setup.
 # Down here is a variant when running jar and a variant when running with maven.
-# Both should be filled out and functionally be identical.  
+# Both should be filled out and functionally be identical. 
 # If nothing specify then it will just run as "java -jar JAR -p PROPERTIES_FILE",
 # which is the minimal required. If value is "-p JacocoCoverageSelector", then
 # the final command is "java -jar JAR -p PROPERTIES_FILE -p JacocoCoverageSelector".
@@ -28,7 +28,7 @@ ENV RUN_OPTIONS_JAR=
 ENV RUN_OPTIONS_MAVEN=
 ENV RUN_TIMEOUT=10
 # number of hours before connection is renewed (mean for Kubernetes).
-ENV RECONNECT_TIME=24 
+ENV RECONNECT_TIME=24
 ## If 1 then it will expect receiving repo slug and branch name instead. Otherwise it will be build id.
 ENV RESTFUL=1
 ENV SLUG_MODE=1