diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/springload/madewithwagtail/docker/application/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/springload/madewithwagtail/docker/application/Dockerfile/repaired.Dockerfile
index 4d709e4..5957601 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/springload/madewithwagtail/docker/application/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/springload/madewithwagtail/docker/application/Dockerfile/repaired.Dockerfile
@@ -7,13 +7,13 @@ COPY package.json yarn.lock /madewithwagtail/
 
 WORKDIR /madewithwagtail
 
-RUN apk update && apk add --virtual make \
+RUN apk update && apk add --no-cache --virtual make \
     gcc \
     g++ \
     musl-dev \
     python3 \
     && yarn install --frozen-lockfile --production=true \
-    && apk del gcc g++ musl-dev python3
+    && apk del gcc g++ musl-dev python3 && yarn cache clean;
 
 COPY . /madewithwagtail/
 RUN yarn dist
@@ -26,15 +26,15 @@ ARG REQUIREMENTS=production.txt
 
 ENV PYCURL_SSL_LIBRARY openssl
 
-RUN apk update && apk add postgresql-libs libevent libjpeg openjpeg tiff zlib freetype tk libcurl su-exec git
+RUN apk update && apk add --no-cache postgresql-libs libevent libjpeg openjpeg tiff zlib freetype tk libcurl su-exec git
 
 WORKDIR /madewithwagtail
 
 COPY requirements /madewithwagtail/requirements
 COPY docker/requirements.txt /madewithwagtail/docker/requirements.txt
 
-RUN apk update && apk add --virtual build-deps make gcc g++ musl-dev && \
-  apk add --virtual build-headers postgresql-dev \
+RUN apk update && apk add --no-cache --virtual build-deps make gcc g++ musl-dev && \
+  apk add --no-cache --virtual build-headers postgresql-dev \
   jpeg-dev \
   zlib-dev \
   freetype-dev \
@@ -48,8 +48,8 @@ RUN apk update && apk add --virtual build-deps make gcc g++ musl-dev && \
   libevent-dev \
   curl-dev && \
   cd /madewithwagtail && \
-    pip3 install -r docker/requirements.txt && \
-    pip3 install -r requirements/${REQUIREMENTS} && \
+    pip3 install --no-cache-dir -r docker/requirements.txt && \
+    pip3 install --no-cache-dir -r requirements/${REQUIREMENTS} && \
     apk del build-deps build-headers
 
 COPY --from=frontend /madewithwagtail/ /madewithwagtail/
@@ -83,9 +83,9 @@ ENV DJANGO_SETTINGS_MODULE madewithwagtail.settings.dev
 ADD https://raw.githubusercontent.com/mrako/wait-for/d9699cb9fe8a4622f05c4ee32adf2fd93239d005/wait-for /usr/local/bin/
 RUN chmod +rx /usr/local/bin/wait-for
 
-RUN apk add --virtual build-deps make g++ musl-dev && \
+RUN apk add --no-cache --virtual build-deps make g++ musl-dev && \
     cd /madewithwagtail && \
-    pip3 install -r requirements/${REQUIREMENTS} && \
+    pip3 install --no-cache-dir -r requirements/${REQUIREMENTS} && \
     apk del build-deps
 
 ENTRYPOINT ["/usr/local/bin/wait-for", "database:5432", "--"]
@@ -94,6 +94,6 @@ CMD ["/usr/local/bin/gunicorn", "--config", "/madewithwagtail/docker/gunicorn.py
 FROM app-dev as app-test
 ARG REQUIREMENTS=test.txt
 ENV DJANGO_SETTINGS_MODULE madewithwagtail.settings.test
-RUN cd /madewithwagtail &&\
-    pip install -r requirements/${REQUIREMENTS}
+RUN cd /madewithwagtail && \
+    pip install --no-cache-dir -r requirements/${REQUIREMENTS}
 CMD ["/bin/sh", "/madewithwagtail/test.sh"]