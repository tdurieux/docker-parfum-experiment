{
  "startTime": 1674255637151,
  "endTime": 1674255637867,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 10
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 10
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Project: gmacario/easy-jenkins\n#\n# Extend the standard Jenkins LTS Docker image with:\n# - Jenkins workflow plugins\n# - Docker\n#\n# Based on https://github.com/camiloribeiro/cdeasy\n\nFROM jenkins/jenkins\n# FROM jenkins/jenkins:lts\n# FROM jenkins/jenkins-experimental:latest-jdk10-incrementals\n\nUSER root\nRUN apt-get update -qq && \\\n    apt-cache search groovy && \\\n    apt-get install --no-install-recommends -qqy \\\n    apt-transport-https \\\n    ca-certificates \\\n    curl \\\n    wget \\\n    lxc \\\n    iptables \\\n    dos2unix \\\n    groovy && rm -rf /var/lib/apt/lists/*;\n\n# Install gosu\nRUN curl -o /usr/local/bin/gosu -fsSL \\\n    \"https://github.com/tianon/gosu/releases/download/1.7/gosu-$(dpkg --print-architecture)\" && \\\n    chmod +x /usr/local/bin/gosu\n\n# Install Docker\nRUN wget -qO- https://get.docker.com/ | sh\nRUN usermod -aG docker jenkins\n\n# Add user \"jenkins\" to group \"docker\" of the Docker host\n# (on boot2docker, group \"docker\" has gid=100)\nRUN usermod -aG 100 jenkins\n\n# Install docker-compose\nRUN curl -o /usr/local/bin/docker-compose -fsSL \\\n    \"https://github.com/docker/compose/releases/download/1.22.0/docker-compose-$(uname -s)-$(uname -m)\" && \\\n    chmod +x /usr/local/bin/docker-compose\n\n# Workaround to prevent install-plugins.sh to fail\nRUN mkdir -p /usr/share/jenkins/ref/plugins/tmp\n\nENV JENKINS_UC_EXPERIMENTAL=https://updates.jenkins.io/experimental\n\n# Install additional Jenkins plugins\nRUN install-plugins.sh \\\n    ansicolor \\\n    ant \\\n    antisamy-markup-formatter \\\n    blueocean \\\n    blueocean-pipeline-editor \\\n    build-timeout \\\n    command-launcher \\\n    configuration-as-code \\\n    configuration-as-code-support \\\n    delivery-pipeline-plugin \\\n    docker-build-publish \\\n    docker-custom-build-environment \\\n    docker-plugin \\\n    email-ext \\\n    ez-templates \\\n    git \\\n    git-client \\\n    github-branch-source \\\n    github-oauth \\\n    github-organization-folder \\\n    github-pullrequest \\\n    gradle \\\n    greenballs \\\n    groovy \\\n    htmlpublisher \\\n    jenkins-multijob-plugin \\\n    job-dsl \\\n    jobConfigHistory \\\n    join \\\n    kubernetes \\\n    kubernetes-cli \\\n    ldap \\\n    mailer \\\n    mapdb-api \\\n    matrix-auth \\\n    matrix-project \\\n    mercurial \\\n    mock-slave \\\n    pam-auth \\\n    pipeline-github-lib \\\n    publish-over-ssh \\\n    resource-disposer \\\n    run-condition \\\n    sectioned-view \\\n    ssh-slaves \\\n    subversion \\\n    timestamper \\\n    translation \\\n    view-job-filters \\\n    windows-slaves \\\n    workflow-aggregator \\\n    workflow-job \\\n    workflow-support \\\n    ws-cleanup\n\n#    \"workflow-support:incrementals;org.jenkins-ci.plugins.workflow;2.19-rc295.e017dc58c0a3\" \\\n\nCOPY seed.groovy /usr/share/jenkins/ref/init.groovy.d/seed.groovy\n\nRUN touch /var/run/docker.sock\n\nUSER jenkins\n\n# EOF\n"
}