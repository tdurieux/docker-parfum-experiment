diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/acrossfw/vpnet/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/acrossfw/vpnet/Dockerfile/repaired.Dockerfile
index 5b97bc7..13397c2 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/acrossfw/vpnet/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/acrossfw/vpnet/Dockerfile/repaired.Dockerfile
@@ -20,41 +20,41 @@ ENV DEBIAN_FRONTEND noninteractive
 #
 
 #	module-init-tools \ operation not permitted inside docker
-RUN apt-get update -qq && apt-get -qqy install \
+RUN apt-get update -qq && apt-get -qqy --no-install-recommends install \
       apt-utils \
-    	curl \
-    	dnsmasq \
-    	dnsutils \
-    	inetutils-ping \
-    	inetutils-traceroute \
-    	iperf \
-    	iptables \
-    	jq \
-    	lsof \
-    	lua5.1 \
-    	man \
-    	net-tools \
-    	netcat \
-    	nload \
-    	screen \
-    	shellcheck \
-    	speedtest-cli \
-    	tcpdump \
-    	tinc \
-    	vim \
-    	wget \
-      \
+     curl \
+     dnsmasq \
+     dnsutils \
+     inetutils-ping \
+     inetutils-traceroute \
+     iperf \
+     iptables \
+     jq \
+     lsof \
+     lua5.1 \
+     man \
+     net-tools \
+     netcat \
+     nload \
+     screen \
+     shellcheck \
+     speedtest-cli \
+     tcpdump \
+     tinc \
+     vim \
+     wget \
+
     && apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
 
 #    && sed -i 's/files dns/files/g' /etc/nsswitch.conf \
 
 ENV BATS_VERSION 0.4.0
-RUN curl -s -o "/tmp/v${BATS_VERSION}.tar.gz" -L \
+RUN curl -f -s -o "/tmp/v${BATS_VERSION}.tar.gz" -L \
       "https://github.com/sstephenson/bats/archive/v${BATS_VERSION}.tar.gz" \
     && tar -xzf "/tmp/v${BATS_VERSION}.tar.gz" -C /tmp/ \
     && bash "/tmp/bats-${BATS_VERSION}/install.sh" /usr/local \
-    \
-    && rm -rf /tmp/*
+
+    && rm -rf /tmp/* && rm "/tmp/v${BATS_VERSION}.tar.gz"
 
 ENV ADMIN_NAME vpnet
 ENV ADMIN_PASS vpnet.io
@@ -81,8 +81,8 @@ RUN ln -s /etc/service /service \
 #
 # Node.JS
 #
-RUN curl -sL https://deb.nodesource.com/setup_7.x | bash - \
-  && apt-get install -qqy nodejs
+RUN curl -f -sL https://deb.nodesource.com/setup_7.x | bash - \
+  && apt-get install --no-install-recommends -qqy nodejs && rm -rf /var/lib/apt/lists/*;
 
 ENV PORT_WEB 10080
 EXPOSE ${PORT_WEB}/tcp
@@ -90,7 +90,7 @@ EXPOSE ${PORT_WEB}/tcp
 COPY service/vpnet/package.json service/vpnet/
 
 RUN cd service/vpnet \
-  && npm install
+  && npm install && npm cache clean --force;
 
 #
 #
@@ -125,7 +125,7 @@ ENV SSH_AUTHORIZED_KEYS "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC6GRsnNc1judMmIFe
 
 # Inspired by https://github.com/gaomd/docker-ikev2-vpn-server/blob/master/Dockerfile
 #
-RUN apt-get update && apt-get -y install \
+RUN apt-get update && apt-get -y --no-install-recommends install \
       iptables \
       ndppd \
       openssl \
@@ -133,7 +133,7 @@ RUN apt-get update && apt-get -y install \
       uuid-runtime \
     && rm /etc/ipsec.secrets \
     && ln -s ${ACROSSFW_HOME}/service/ipsec /service/ipsec \
-    \
+
     && apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
 
 # IPSec Port must be standard(should not change?)
@@ -155,12 +155,12 @@ EXPOSE 1723/tcp
 # inspired by https://github.com/vimagick/dockerfiles/tree/master/pptpd
 #
 # `rm pptpd.postinst` is a workaround of `no bus` error with systemd
-RUN apt-get update -qq && apt-get install -qqy \
+RUN apt-get update -qq && apt-get install --no-install-recommends -qqy \
       pptpd \
       || true \
     && rm -f rm /var/lib/dpkg/info/pptpd.postinst \
     && ln -s ${ACROSSFW_HOME}/service/pptp /service/pptp \
-    \
+
     && apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
 
 
@@ -174,11 +174,11 @@ RUN apt-get update -qq && apt-get install -qqy \
 ENV PORT_SQUID 13128
 EXPOSE ${PORT_SQUID}/tcp
 
-RUN apt-get update -qq && apt-get install -qqy \
+RUN apt-get update -qq && apt-get install --no-install-recommends -qqy \
       apache2-utils \
       squid \
     && ln -s ${ACROSSFW_HOME}/service/squid /service/squid \
-    \
+
     && apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
 
 #
@@ -197,9 +197,9 @@ ENV SHADOWSOCKS_ENCRYPT_METHOD salsa20
 
 RUN echo 'deb http://archive.ubuntu.com/ubuntu yakkety main universe' > /etc/apt/sources.list \
       && apt-get update -qq \
-      && apt-get install -qqy shadowsocks-libev \
+      && apt-get install --no-install-recommends -qqy shadowsocks-libev \
       && ln -s ${ACROSSFW_HOME}/service/shadowsocks /service/shadowsocks \
-      \
+
       && apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
 
 #
@@ -224,7 +224,7 @@ ENV KCPTUN_NOCOMP 1
 ENV KCPTUN_RCVWND 1024
 ENV KCPTUN_SNDWND 1024
 
-RUN URL=$(curl -s https://api.github.com/repos/xtaci/kcptun/releases/latest | jq -r '.assets[] | select(.name | contains("linux-amd64")) .browser_download_url') \
+RUN URL=$( curl -f -s https://api.github.com/repos/xtaci/kcptun/releases/latest | jq -r '.assets[] | select(.name | contains("linux-amd64")) .browser_download_url') \
       && wget --quiet -O /tmp/kcptun.tgz "$URL" \
       && [ -e "${ACROSSFW_HOME}/service/kcptun/bin/" ] || mkdir -p ${ACROSSFW_HOME}/service/kcptun/bin/ \
       && tar zxvf /tmp/kcptun.tgz -C ${ACROSSFW_HOME}/service/kcptun/bin/ \
@@ -269,7 +269,7 @@ COPY . .
 
 RUN cat /dev/null                                      > ${ACROSSFW_HOME}/ENV.build \
   && echo "BUILD_HOST=\"$(hostname -f)\""             >> ${ACROSSFW_HOME}/ENV.build \
-  && echo "BUILD_IP=\"$(curl -Ss ifconfig.io)\""      >> ${ACROSSFW_HOME}/ENV.build \
+  && echo "BUILD_IP=\"$( curl -f -Ss ifconfig.io)\"" >> ${ACROSSFW_HOME}/ENV.build \
   && echo "BUILD_DATE=\"$(date)\""                    >> ${ACROSSFW_HOME}/ENV.build \
   && echo "VERSION_HASH=\"$(./bin/version.sh hash)\"" >> ${ACROSSFW_HOME}/ENV.build