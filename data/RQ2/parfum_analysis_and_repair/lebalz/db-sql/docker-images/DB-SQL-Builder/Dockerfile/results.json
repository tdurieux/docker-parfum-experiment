{
  "startTime": 1674246714016,
  "endTime": 1674246714990,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 6,
        "columnEnd": 52
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 6,
        "columnEnd": 55
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 6,
        "columnEnd": 89
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 27,
        "lineEnd": 32,
        "columnStart": 6,
        "columnEnd": 67
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 30,
        "columnEnd": 52
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 30,
        "columnEnd": 52
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 6,
        "columnEnd": 89
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 27,
        "lineEnd": 32,
        "columnStart": 6,
        "columnEnd": 67
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 30,
        "columnEnd": 52
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 30
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 30,
        "columnEnd": 76
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 57
      }
    }
  ],
  "repairedDockerfile": "FROM lebalz/ubuntu-ruby:latest\nLABEL maintainer=\"lebalz@outlook.com\"\n\n# build with\n# cd docker-images/DB-SQL-Builder\n# cp ../../{package.json,yarn.lock,Gemfile,Gemfile.lock} .\n# docker build . -t lebalz/rails-full-builder\n# docker push lebalz/rails-full-builder:latest\n\n\n# For tzdata\nENV DEBIAN_FRONTEND=noninteractive\nENV TZ=Europe/Zurich\n\nRUN echo \"# Essentials\" && \\\n      apt-get update && \\\n      apt install --no-install-recommends -y curl wget git rsync patch build-essential software-properties-common && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get install --no-install-recommends -my gnupg && rm -rf /var/lib/apt/lists/*;\nRUN echo \"# Generate locales\" && \\\n      echo \"# Upgrade apt\" && \\\n      sed -i 's/main$/main contrib/g' /etc/apt/sources.list && \\\n      curl -f -sL https://deb.nodesource.com/setup_16.x | bash - && \\\n      curl -f -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - && \\\n      echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list\nRUN apt-get update && apt-get upgrade -y && \\\n      echo \"# Install common dev dependencies via apt\" && \\\n      apt-get install --no-install-recommends -y \\\n      openssl libreadline-dev libyaml-dev zlib1g zlib1g-dev libssl-dev libyaml-dev libpq-dev libxml2-dev libxslt-dev libc6-dev libmsgpack-dev \\\n      xvfb bzip2 \\\n      mysql-server mysql-client \\\n      nodejs yarn \\\n      libxrender-dev gdebi apt-utils cmake tzdata postgresql-client && \\\n      ln -s /usr/bin/nodejs /usr/local/bin/node && \\\n      ln -sf /usr/share/zoneinfo/Europe/Berlin /etc/localtime && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /app\n\nRUN echo \"# Update bundler\" && \\\n      gem install bundler:2.2.27 --no-document\n\nRUN echo \"Install python2\" && apt install --no-install-recommends -y python2 && rm -rf /var/lib/apt/lists/*;\n# Install standard Node modules\nCOPY package.json yarn.lock /app/\nRUN yarn install && yarn cache clean;\n\n# Install standard gems\nCOPY Gemfile* /app/\n\nENV BUNDLE_PATH=/usr/local/bundle/gems/\n\n# Increase node heap\nENV NODE_OPTIONS='--max-old-space-size=8192'\n\nRUN apt install -y --no-install-recommends libsqlite3-dev && rm -rf /var/lib/apt/lists/*;\n\nRUN bundle config --global frozen 1 && \\\n      bundle config --local build.sassc --disable-march-tune-native && \\\n      bundle install -j4 --retry 3\n\n# Install Ruby gems (for production only)\nONBUILD COPY Gemfile* /app/\nONBUILD RUN bundle install -j4 --retry 3 --without development:test && \\\n      # Remove unneeded gems\n      bundle clean --force && \\\n      # Remove unneeded files from installed gems (cached *.gem, *.o, *.c)\n      rm -rf /usr/local/bundle/cache/*.gem && \\\n      find /usr/local/bundle/gems/ -name \"*.c\" -delete && \\\n      find /usr/local/bundle/gems/ -name \"*.o\" -delete\n\n# Copy the whole application folder into the image\nONBUILD COPY . /app\n\n\n# Compile assets with webpacker\nONBUILD RUN RAILS_ENV=production \\\n      SECRET_KEY_BASE=dummy \\\n      bundle exec rails assets:precompile\n\n# Remove folders not needed in resulting image\nONBUILD RUN rm -rf node_modules tmp/cache vendor/bundle test spec\n"
}