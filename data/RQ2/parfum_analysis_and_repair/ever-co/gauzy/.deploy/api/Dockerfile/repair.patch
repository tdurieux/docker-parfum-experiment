diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/ever-co/gauzy/.deploy/api/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/ever-co/gauzy/.deploy/api/Dockerfile/repaired.Dockerfile
index baca6a9..1380cc1 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/ever-co/gauzy/.deploy/api/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/ever-co/gauzy/.deploy/api/Dockerfile/repaired.Dockerfile
@@ -63,15 +63,15 @@ LABEL org.opencontainers.image.source https://github.com/ever-co/ever-gauzy
 
 ENV CI=true
 
-RUN apk --update add bash \
-    && apk add libexecinfo libexecinfo-dev \
+RUN apk --update --no-cache add bash \
+    && apk add --no-cache libexecinfo libexecinfo-dev \
 	&& npm i -g npm \
     && apk add --no-cache --virtual build-dependencies build-base \
     snappy libheif dos2unix gcc g++ snappy-dev git libgcc libstdc++ linux-headers autoconf automake make nasm python2 py2-setuptools vips-dev vips \
     && npm install --quiet node-gyp -g \
 	&& npm config set python /usr/bin/python \
 	&& npm install yarn -g --force \
-    && mkdir /srv/gauzy && chown -R node:node /srv/gauzy
+    && mkdir /srv/gauzy && chown -R node:node /srv/gauzy && npm cache clean --force;
 
 COPY wait .deploy/api/entrypoint.prod.sh .deploy/api/entrypoint.compose.sh /
 RUN chmod +x /wait /entrypoint.compose.sh /entrypoint.prod.sh && dos2unix /entrypoint.prod.sh && dos2unix /entrypoint.compose.sh
@@ -99,20 +99,20 @@ COPY --chown=node:node packages/plugins/changelog/package.json ./packages/plugin
 
 COPY --chown=node:node decorate-angular-cli.js lerna.json package.json yarn.lock ./
 
-RUN yarn install --network-timeout 1000000 --frozen-lockfile && yarn cache clean
+RUN yarn install --network-timeout 1000000 --frozen-lockfile && yarn cache clean && yarn cache clean;
 # RUN apk del build-dependencies make gcc g++ python2 py2-setuptools vips-dev
 
 FROM node:16-alpine3.14 AS prodDependencies
 
-RUN apk --update add bash \
-    && apk add libexecinfo libexecinfo-dev \
+RUN apk --update --no-cache add bash \
+    && apk add --no-cache libexecinfo libexecinfo-dev \
 	&& npm i -g npm \
     && apk add --no-cache --virtual build-dependencies build-base \
     snappy libheif dos2unix gcc g++ snappy-dev git libgcc libstdc++ linux-headers autoconf automake make nasm python2 py2-setuptools vips-dev vips \
     && npm install --quiet node-gyp -g \
 	&& npm config set python /usr/bin/python \
 	&& npm install yarn -g --force \
-    && mkdir /srv/gauzy && chown -R node:node /srv/gauzy
+    && mkdir /srv/gauzy && chown -R node:node /srv/gauzy && npm cache clean --force;
 
 USER node:node
 
@@ -135,7 +135,7 @@ COPY --chown=node:node packages/plugins/changelog/package.json ./packages/plugin
 
 COPY --chown=node:node package.json yarn.lock ./
 
-RUN yarn install --network-timeout 1000000 --frozen-lockfile --production && yarn cache clean
+RUN yarn install --network-timeout 1000000 --frozen-lockfile --production && yarn cache clean && yarn cache clean;
 # RUN apk del build-dependencies make gcc g++ python2 py2-setuptools vips-dev
 
 RUN rm -r node_modules/@angular
@@ -164,8 +164,8 @@ ENV DEMO=${DEMO:-false}
 
 ENV IS_DOCKER=true
 
-RUN yarn build:package:api
-RUN yarn build:api:prod
+RUN yarn build:package:api && yarn cache clean;
+RUN yarn build:api:prod && yarn cache clean;
 
 FROM node:16-alpine3.14 AS production
 
@@ -191,7 +191,7 @@ COPY --chown=node:node --from=build /srv/gauzy/dist/apps/api .
 RUN npm install pm2 -g && \
     mkdir /import && chown node:node /import && \
     touch ormlogs.log && chown node:node ormlogs.log && chown node:node wait && \
-    chmod +x wait entrypoint.compose.sh entrypoint.prod.sh && chown -R node:node apps/
+    chmod +x wait entrypoint.compose.sh entrypoint.prod.sh && chown -R node:node apps/ && npm cache clean --force;
 
 USER node:node