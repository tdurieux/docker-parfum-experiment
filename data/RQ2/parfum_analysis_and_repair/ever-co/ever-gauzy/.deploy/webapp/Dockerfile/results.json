{
  "startTime": 1674218867651,
  "endTime": 1674218868934,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 64,
        "columnEnd": 80
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 88,
        "lineEnd": 88,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 89,
        "lineEnd": 89,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 25
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 84,
        "columnEnd": 100
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 88,
        "lineEnd": 88,
        "columnStart": 32,
        "columnEnd": 48
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 89,
        "lineEnd": 89,
        "columnStart": 29,
        "columnEnd": 45
      }
    }
  ],
  "repairedDockerfile": "# Ever Gauzy Platform UI\n\nARG NODE_OPTIONS\nARG NODE_ENV\nARG API_BASE_URL\nARG API_HOST\nARG API_PORT\nARG CLIENT_BASE_URL\nARG GAUZY_CLOUD_APP\nARG SENTRY_DSN\nARG CHATWOOT_SDK_TOKEN\nARG CHAT_MESSAGE_GOOGLE_MAP\nARG CLOUDINARY_CLOUD_NAME\nARG CLOUDINARY_API_KEY\nARG GOOGLE_MAPS_API_KEY\nARG GOOGLE_PLACE_AUTOCOMPLETE\nARG HUBSTAFF_REDIRECT_URI\nARG DEFAULT_LATITUDE\nARG DEFAULT_LONGITUDE\nARG DEFAULT_CURRENCY\nARG DEFAULT_COUNTRY\nARG DEMO\nARG WEB_HOST\nARG WEB_PORT\n\nFROM node:16-alpine3.14 AS dependencies\n\nLABEL maintainer=\"ever@ever.co\"\nLABEL org.opencontainers.image.source https://github.com/ever-co/ever-gauzy\n\nENV CI=true\n\nRUN apk --update --no-cache add bash && \\\n    apk add --no-cache --virtual build-dependencies dos2unix gcc g++ git make python2 py2-setuptools vips-dev && \\\n    mkdir /srv/gauzy && chown -R node:node /srv/gauzy\n\nCOPY wait .deploy/webapp/entrypoint.compose.sh .deploy/webapp/entrypoint.prod.sh /\n\nRUN chmod +x /wait /entrypoint.compose.sh /entrypoint.prod.sh && dos2unix /entrypoint.compose.sh && dos2unix /entrypoint.prod.sh\n\nUSER node:node\n\nWORKDIR /srv/gauzy\n\nCOPY --chown=node:node apps/gauzy/package.json ./apps/gauzy/\n\nCOPY --chown=node:node packages/common/package.json ./packages/common/\nCOPY --chown=node:node packages/common-angular/package.json ./packages/common-angular/\nCOPY --chown=node:node packages/config/package.json ./packages/config/\nCOPY --chown=node:node packages/contracts/package.json ./packages/contracts/\nCOPY --chown=node:node packages/auth/package.json ./packages/auth/\nCOPY --chown=node:node packages/core/package.json ./packages/core/\nCOPY --chown=node:node packages/plugin/package.json ./packages/plugin/\nCOPY --chown=node:node packages/plugins/integration-ai/package.json ./packages/plugins/integration-ai/\nCOPY --chown=node:node packages/plugins/integration-hubstaff/package.json ./packages/plugins/integration-hubstaff/\nCOPY --chown=node:node packages/plugins/integration-upwork/package.json ./packages/plugins/integration-upwork/\nCOPY --chown=node:node packages/plugins/product-reviews/package.json ./packages/plugins/product-reviews/\nCOPY --chown=node:node packages/plugins/knowledge-base/package.json ./packages/plugins/knowledge-base/\nCOPY --chown=node:node packages/plugins/changelog/package.json ./packages/plugins/changelog/\n\nCOPY --chown=node:node decorate-angular-cli.js lerna.json package.json yarn.lock ./\n\nRUN yarn install --network-timeout 1000000 --frozen-lockfile && yarn cache clean && yarn cache clean;\n# RUN apk del build-dependencies make gcc g++ python2 py2-setuptools vips-dev\n\nFROM node:16-alpine3.14 AS development\n\nUSER node:node\n\nWORKDIR /srv/gauzy\n\nCOPY --chown=node:node --from=dependencies /wait /entrypoint.compose.sh /entrypoint.prod.sh /\nCOPY --chown=node:node --from=dependencies /srv/gauzy .\nCOPY . .\n\nFROM node:16-alpine3.14 AS build\n\nWORKDIR /srv/gauzy\n\nRUN mkdir dist\n\nCOPY --chown=node:node --from=development /srv/gauzy .\n\nENV NODE_OPTIONS=${NODE_OPTIONS:-\"--max-old-space-size=2048\"}\nENV NODE_ENV=${NODE_ENV:-production}\n\nENV IS_DOCKER=true\n\nRUN yarn build:package:gauzy && yarn cache clean;\nRUN yarn build:gauzy:prod && yarn cache clean;\n\nFROM nginx:alpine AS production\n\n# USER nginx:nginx\n\nWORKDIR /srv/gauzy\n\nCOPY --chown=nginx:nginx --from=dependencies /wait /entrypoint.compose.sh /entrypoint.prod.sh ./\nCOPY --chown=nginx:nginx .deploy/webapp/nginx.compose.conf /etc/nginx/conf.d/compose.conf.template\nCOPY --chown=nginx:nginx .deploy/webapp/nginx.prod.conf /etc/nginx/conf.d/prod.conf.template\nCOPY --chown=nginx:nginx --from=build /srv/gauzy/dist/apps/gauzy .\n\nRUN chmod +x wait entrypoint.compose.sh entrypoint.prod.sh && \\\n    chmod a+rw /etc/nginx/conf.d/compose.conf.template /etc/nginx/conf.d/prod.conf.template\n\nENV API_HOST=${API_HOST:-api}\nENV API_PORT=${API_PORT:-3000}\n\nENV API_BASE_URL=${API_BASE_URL:-http://localhost:3000}\nENV CLIENT_BASE_URL=${CLIENT_BASE_URL:-http://localhost:4200}\nENV WEB_HOST=${WEB_HOST:-0.0.0.0}\nENV WEB_PORT=${WEB_PORT:-4200}\nENV DEMO=${DEMO:-false}\n\nENV SENTRY_DSN=${SENTRY_DSN}\nENV CHATWOOT_SDK_TOKEN=${CHATWOOT_SDK_TOKEN}\nENV CLOUDINARY_CLOUD_NAME=${CLOUDINARY_CLOUD_NAME}\nENV CLOUDINARY_API_KEY=${CLOUDINARY_API_KEY}\nENV GOOGLE_MAPS_API_KEY=${GOOGLE_MAPS_API_KEY}\nENV GOOGLE_PLACE_AUTOCOMPLETE=${GOOGLE_PLACE_AUTOCOMPLETE:-false}\nENV DEFAULT_LATITUDE=${DEFAULT_LATITUDE:-42.6459136}\nENV DEFAULT_LONGITUDE=${DEFAULT_LONGITUDE:-23.3332736}\nENV DEFAULT_CURRENCY=${DEFAULT_CURRENCY:-USD}\nENV DEFAULT_COUNTRY=${DEFAULT_COUNTRY}\nENV GAUZY_CLOUD_APP=${GAUZY_CLOUD_APP}\nENV CHAT_MESSAGE_GOOGLE_MAP=${CHAT_MESSAGE_GOOGLE_MAP}\nENV HUBSTAFF_REDIRECT_URI=${HUBSTAFF_REDIRECT_URI}\n\nEXPOSE ${WEB_PORT}\n\nENTRYPOINT [ \"./entrypoint.prod.sh\" ]\n\nCMD [ \"nginx\", \"-g\", \"daemon off;\" ]\n"
}