{
  "startTime": 1674248810651,
  "endTime": 1674248811271,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 137
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 27
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "####################################\n# Build book\n####################################\nFROM debian:bullseye as build-book\n\nRUN apt-get update && apt-get install --no-install-recommends -y curl && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /app/book\nCOPY book/ .\n\n# Download mdbook\n\nRUN curl -f -L -o mdbook.tar.gz https://github.com/rust-lang/mdBook/releases/download/v0.4.15/mdbook-v0.4.15-x86_64-unknown-linux-gnu.tar.gz\nRUN tar xvf mdbook.tar.gz && rm mdbook.tar.gz\n\n# Build book\nRUN ./mdbook build\n\n####################################\n# Build docs\n####################################\nFROM node:16-alpine as build-docs\n\nWORKDIR /app/components/runtime/docgen\nENV PATH /app/node_modules/.bin:$PATH\n\n# grab deps\nCOPY components/runtime/docgen/package.json ./\nCOPY components/runtime/docgen/package-lock.json ./\n\nRUN npm ci\n\n# copy the  source\nCOPY components/runtime/ ../\n\nRUN npm run build\n\n####################################\n# Build frontend\n####################################\nFROM node:16-alpine as build-main\n\n# build .d.ts\nWORKDIR /app/types\n\nCOPY components/runtime/src/ts ./\n\nRUN npm install typescript && npm cache clean --force;\nRUN node node_modules/typescript/bin/tsc --build tsconfig.json\nRUN cp -r globals typings\nRUN tar -cf typings.tar typings/ && rm typings.tar\n\n# build frontend-common\nWORKDIR /app/frontend-common\n\nCOPY frontend-common/package.json ./\nCOPY frontend-common/package-lock.json ./\n\nRUN npm ci\n\nCOPY frontend-common/ ./\n\n# Build frontend\nWORKDIR /app/frontend\n\nCOPY frontend/package.json ./\nCOPY frontend/package-lock.json ./\n\nRUN npm ci\n\nCOPY frontend/ ./\nCOPY --from=build-docs /app/components/runtime/docgen/docs public/docs\nCOPY --from=build-book /app/book/book public/book\nRUN cp -r /app/types/typings.tar public/typings.tar\n\n# Build config\nARG BOTLOADER_API_BASE\nENV REACT_APP_BOTLOADER_API_BASE=$BOTLOADER_API_BASE\n\nARG BOTLOADER_CLIENT_ID\nENV REACT_APP_BOTLOADER_CLIENT_ID=$BOTLOADER_CLIENT_ID\n\nRUN npm run build\n\n####################################\n# Entrypoint\n####################################\nFROM nginx:stable-alpine\n\nCOPY frontend/nginx.conf /etc/nginx/conf.d/default.conf\nCOPY --from=build-main /app/frontend/build /usr/share/nginx/html\n\nEXPOSE 80\n\nENTRYPOINT [\"nginx\", \"-g\", \"daemon off;\"]"
}