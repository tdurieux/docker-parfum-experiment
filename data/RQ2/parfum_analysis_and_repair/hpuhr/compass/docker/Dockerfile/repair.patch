diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/hpuhr/compass/docker/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/hpuhr/compass/docker/Dockerfile/repaired.Dockerfile
index c55de08..bdbb921 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/hpuhr/compass/docker/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/hpuhr/compass/docker/Dockerfile/repaired.Dockerfile
@@ -1,43 +1,43 @@
 FROM ubuntu:14.04
 
-RUN groupadd -r someusers --gid=1000 
-RUN useradd -r -p "$(openssl passwd -1 sk)" -g someusers -G sudo --uid=1000 --create-home --shell /bin/bash sk 
+RUN groupadd -r someusers --gid=1000
+RUN useradd -r -p "$(openssl passwd -1 sk)" -g someusers -G sudo --uid=1000 --create-home --shell /bin/bash sk
 
 # Update and allow for apt over HTTPS
-RUN apt-get update && apt-get install -y apt-utils
-RUN apt-get install software-properties-common build-essential -y
-RUN add-apt-repository ppa:ubuntu-toolchain-r/test -y 
+RUN apt-get update && apt-get install --no-install-recommends -y apt-utils && rm -rf /var/lib/apt/lists/*;
+RUN apt-get install --no-install-recommends software-properties-common build-essential -y && rm -rf /var/lib/apt/lists/*;
+RUN add-apt-repository ppa:ubuntu-toolchain-r/test -y
 RUN add-apt-repository ppa:george-edison55/cmake-3.x
 #RUN add-apt-repository ppa:mhier/libboost-latest
 RUN apt-get update
-RUN apt-get install gcc g++ cmake -y
+RUN apt-get install --no-install-recommends gcc g++ cmake -y && rm -rf /var/lib/apt/lists/*;
 #RUN apt-get install gcc-9 g++-9 cmake -y
 #RUN sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 60 --slave /usr/bin/g++ g++ /usr/bin/g++-9
 #RUN update-alternatives --set gcc "/usr/bin/gcc-9"
 
-RUN apt-get install wget -y
+RUN apt-get install --no-install-recommends wget -y && rm -rf /var/lib/apt/lists/*;
 
 #install boost
 RUN wget -O boost_1_68_0.tar.gz https://sourceforge.net/projects/boost/files/boost/1.68.0/boost_1_68_0.tar.gz/download --no-check-certificate
-RUN tar xzvf boost_1_68_0.tar.gz
+RUN tar xzvf boost_1_68_0.tar.gz && rm boost_1_68_0.tar.gz
 RUN cd boost_1_68_0/ && ./bootstrap.sh --prefix=/usr/
 RUN cd boost_1_68_0/ && ./b2
 RUN cd boost_1_68_0/ && ./b2 install
 
 # install atsdb deps
 #RUN apt-get install libboost-all-dev -y
-RUN apt-get install liblog4cpp5-dev libssl-dev libarchive-dev libmysql++-dev libeigen3-dev libgdal-dev  -y #libmysqlclient-dev libsqlite3-dev
+RUN apt-get install --no-install-recommends liblog4cpp5-dev libssl-dev libarchive-dev libmysql++-dev libeigen3-dev libgdal-dev -y && rm -rf /var/lib/apt/lists/*; #libmysqlclient-dev libsqlite3-dev
 # tools
-RUN apt-get install locate zip unzip qtchooser chrpath -y
+RUN apt-get install --no-install-recommends locate zip unzip qtchooser chrpath -y && rm -rf /var/lib/apt/lists/*;
 
-RUN apt-get install libtbb-dev -y
+RUN apt-get install --no-install-recommends libtbb-dev -y && rm -rf /var/lib/apt/lists/*;
 #RUN wget https://launchpad.net/ubuntu/+archive/primary/+files/libtbb2_2017~U7-8_amd64.deb
 #RUN dpkg -i libtbb2_2017~U7-8_amd64.deb
 #RUN wget https://launchpad.net/ubuntu/+archive/primary/+files/libtbb-dev_2017~U7-8_amd64.deb
 #RUN dpkg -i libtbb-dev_2017~U7-8_amd64.deb
 
 RUN wget https://sqlite.org/2022/sqlite-autoconf-3380000.tar.gz --no-check-certificate
-RUN tar xvzf sqlite-autoconf-3380000.tar.gz
+RUN tar xvzf sqlite-autoconf-3380000.tar.gz && rm sqlite-autoconf-3380000.tar.gz
 RUN cd sqlite-autoconf-3380000 && env CPPFLAGS='-O2 -DNDEBUG -DSQLITE_ENABLE_FTS5 -DSQLITE_ENABLE_STAT4 -DSQLITE_ENABLE_UPDATE_DELETE_LIMIT -DSQLITE_ENABLE_COLUMN_METADATA -DHAVE_ISNAN -DOMIT_LOOKASIDE -DUSE_URI -DSQLITE_DEFAULT_MEMSTATUS=0 -DSQLITE_DEFAULT_WAL_SYNCHRONOUS -DSQLITE_LIKE_DOESNT_MATCH_BLOBS -DSQLITE_MAX_EXPR_DEPTH=0 -DSQLITE_OMIT_DEPRECATED -DSQLITE_OMIT_PROGRESS_CALLBACK -DSQLITE_OMIT_SHARED_CACHE -DSQLITE_USE_ALLOCA -DENABLE_BYTECODE_VTAB -DENABLE_FTS3_PARENTHESIS -DENABLE_FTS3_TOKENIZER -DENABLE_PREUPDATE_HOOK -DENABLE_SESSION -DENABLE_PREUPDATE_HOOK -DENABLE_UNKNOWN_SQL_FUNCTION -DENABLE_UNLOCK_NOTIFY -DSOUNDEX -DDEFAULT_AUTOVACUUM=0 -DSQLITE_DEFAULT_WORKER_THREADS=8' ./configure --prefix=/usr/ --libdir=/usr/lib/x86_64-linux-gnu/
 RUN cd sqlite-autoconf-3380000 && make
 RUN cd sqlite-autoconf-3380000 && make install
@@ -51,14 +51,14 @@ RUN apt-get update
 
 RUN apt-get build-dep libopenscenegraph-dev -y
 RUN apt-get build-dep libosgearth-dev -y
-RUN apt-get install libgeos-dev -y
+RUN apt-get install --no-install-recommends libgeos-dev -y && rm -rf /var/lib/apt/lists/*;
 
 # remove libs since manually installed
-RUN apt-get remove qt4-qmake libqt4* qt4-dev-tools libopenscenegraph-dev libopenscenegraph99 openscenegraph openscenegraph-plugin-osgearth osgearth -y 
-#libopenthreads-dev libopenthreads14 
+RUN apt-get remove qt4-qmake libqt4* qt4-dev-tools libopenscenegraph-dev libopenscenegraph99 openscenegraph openscenegraph-plugin-osgearth osgearth -y
+#libopenthreads-dev libopenthreads14
 
-# gui/x11 
-RUN apt-get install gedit libgl1-mesa-dev libegl1-mesa-drivers libxkbcommon-x11-dev -y
+# gui/x11
+RUN apt-get install --no-install-recommends gedit libgl1-mesa-dev libegl1-mesa-drivers libxkbcommon-x11-dev -y && rm -rf /var/lib/apt/lists/*;
 
 # qt
 ENV QT_VERSION_A=5.8
@@ -70,7 +70,7 @@ ENV QT_VERSION_SCRIPT=580
 
 #RUN wget https://download.qt.io/archive/qt/${QT_VERSION_A}/${QT_VERSION_B}/qt-opensource-linux-x64-${QT_VERSION_B}.run
 RUN wget https://download.qt.io/new_archive/qt/${QT_VERSION_A}/${QT_VERSION_B}/qt-opensource-linux-x64-${QT_VERSION_B}.run
-RUN chmod +x qt-opensource-linux-x64-${QT_VERSION_B}.run 
+RUN chmod +x qt-opensource-linux-x64-${QT_VERSION_B}.run
 COPY qt-noninteractive.qs /qt-noninteractive.qs
 RUN ./qt-opensource-linux-x64-${QT_VERSION_B}.run --script qt-noninteractive.qs  -platform minimal
 
@@ -92,7 +92,7 @@ ENV QTLIBDIR="${QTDIR}/gcc_64/"
 #RUN cd OpenSceneGraph-OpenSceneGraph-3.4.1/build && make install
 
 RUN add-apt-repository ppa:ubuntugis/ppa
-RUN apt-get update && apt-get --only-upgrade install libgdal-dev  -y
+RUN apt-get update && apt-get --only-upgrade --no-install-recommends install libgdal-dev -y && rm -rf /var/lib/apt/lists/*;
 
 RUN wget https://github.com/openscenegraph/OpenSceneGraph/archive/OpenSceneGraph-3.6.5.zip
 RUN unzip OpenSceneGraph-3.6.5.zip
@@ -108,14 +108,14 @@ RUN cd osgQt-Qt4/build && cmake -DCMAKE_INSTALL_PREFIX=/usr --config Release ..
 RUN cd osgQt-Qt4/build && make -j 16
 RUN cd osgQt-Qt4/build && make install
 
-RUN apt-get install libgeos++-dev -y
+RUN apt-get install --no-install-recommends libgeos++-dev -y && rm -rf /var/lib/apt/lists/*;
 
-RUN apt-get install autoconf automake libtool curl -y
+RUN apt-get install --no-install-recommends autoconf automake libtool curl -y && rm -rf /var/lib/apt/lists/*;
 
 RUN wget https://github.com/protocolbuffers/protobuf/releases/download/v3.19.1/protobuf-cpp-3.19.1.zip
 RUN unzip protobuf-cpp-3.19.1.zip
 RUN cd protobuf-3.19.1 && ./autogen.sh
-RUN cd protobuf-3.19.1 && ./configure
+RUN cd protobuf-3.19.1 && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"
 RUN cd protobuf-3.19.1 && make
 RUN cd protobuf-3.19.1 && make check
 RUN cd protobuf-3.19.1 && make install