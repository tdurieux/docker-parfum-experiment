{
  "startTime": 1674249488130,
  "endTime": 1674249489123,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 18,
        "columnEnd": 29
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 23,
        "columnEnd": 34
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 30
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:6\n\nRUN mkdir -p /app && \\\n    mkdir -p /tmp/ui && \\\n    mkdir -p /tmp/service\n\nADD ./package.json ./npm-shrinkwrap.json /tmp/ui/\nADD ./mock-cds-backend/package.json /tmp/service/\n\nRUN npm install -g nodemon && npm cache clean --force;\nRUN cd /tmp/ui && npm install && npm cache clean --force;\nRUN cd /tmp/service && npm install && npm cache clean --force;\n\nADD . /app\nWORKDIR /app\n\nRUN mv docker/scripts/* /bin && \\\n    mv /tmp/ui/node_modules /app && \\\n    mv /tmp/service/node_modules /app/mock-cds-backend\n\nRUN npm install -g http-server && npm cache clean --force;\n\nENV HTTP_PORT_FRONTEND 8080\nENV HTTP_PORT_BACKEND 8081\n\nCMD run-frontend\n"
}