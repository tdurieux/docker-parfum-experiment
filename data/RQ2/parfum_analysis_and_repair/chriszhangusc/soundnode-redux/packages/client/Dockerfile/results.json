{
  "startTime": 1674220707763,
  "endTime": 1674220708572,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 21
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 37,
        "columnEnd": 53
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 25,
        "columnEnd": 41
      }
    }
  ],
  "repairedDockerfile": "FROM mhart/alpine-node:12 as base\n\nRUN npm i -g lerna && npm cache clean --force;\n\nWORKDIR /app\n\nFROM base as builder\n\nCOPY package.json .\nCOPY yarn.lock .\nCOPY lerna.json .\n\nCOPY packages/client/package.json ./packages/client/package.json\n\nRUN yarn install --pure-lock-file && yarn cache clean;\n\nCOPY packages/client ./packages/client\n\nENV NODE_ENV=production\nENV HOST=http://localhost:5000\n\nRUN yarn build:client && yarn cache clean;\n\nFROM nginx:1.16.0-alpine as server\n\nCOPY --from=builder /app/packages/client/build /usr/share/nginx/html\n\nCOPY packages/client/nginx.conf /etc/nginx/conf.d/default.conf\n"
}