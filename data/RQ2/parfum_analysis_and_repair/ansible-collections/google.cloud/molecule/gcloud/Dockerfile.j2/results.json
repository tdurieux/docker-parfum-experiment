{
  "startTime": 1674215635663,
  "endTime": 1674215636541,
  "originalSmells": [
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 23,
        "lineEnd": 24,
        "columnStart": 26,
        "columnEnd": 37
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 14,
        "columnStart": 5,
        "columnEnd": 13
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 18,
        "lineEnd": 20,
        "columnStart": 7,
        "columnEnd": 27
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 7,
        "columnEnd": 72
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 41,
        "lineEnd": 42,
        "columnStart": 7,
        "columnEnd": 59
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 50,
        "lineEnd": 51,
        "columnStart": 7,
        "columnEnd": 47
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Molecule managed\n\n{% if item.registry is defined %}\nFROM {{ item.registry.url }}/{{ item.image }}\n{% else %}\nFROM {{ item.image }}\n{% endif %}\nENV container=docker\n\n{# Initial Package Installs and Container Prep #}\n{% if item.image.split(':', 1)[0] in [\"ubuntu\"] %}\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends \\\n     locales software-properties-common rsyslog systemd systemd-cron sudo \\\n     iproute2 && rm -rf /var/lib/apt/lists/*;\nRUN sed -i 's/^\\($ModLoad imklog\\)/#\\1/' /etc/rsyslog.conf\n{% elif item.image.split(':', 1)[0] in [\"debian\"] %}\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n       sudo systemd systemd-sysv \\\n       build-essential wget && rm -rf /var/lib/apt/lists/*;\n{% elif item.image.split(':', 1)[0] in [\"centos\"] %}\n{% if item.image in [\"centos:7\"] %}\nRUN yum makecache fast && yum -y install deltarpm \\\n{% elif item.image in [\"centos:8\"] %} && rm -rf /var/cache/yum\nRUN yum makecache --timer \\\n{% endif %}\n    && yum -y install epel-release \\\n    && yum -y update \\\n    && yum -y install sudo which\n{% endif %}\n\n\n{# Install of Python2 #}\n{% if item.image in [\"ubuntu:16.04\"] %}\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends python-setuptools wget \\\n    && wget https://bootstrap.pypa.io/get-pip.py \\\n    && python get-pip.py && rm -rf /var/lib/apt/lists/*;\n{% elif item.image in [\"debian:9\"] %}\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends libffi-dev libssl-dev \\\n       python-pip python-dev python-setuptools python-wheel && rm -rf /var/lib/apt/lists/*;\n{% elif item.image in [\"centos:7\"] %}\nRUN yum -y install python-pip && rm -rf /var/cache/yum\n{% endif %}\n\n{# Install of Python3 #}\n{% if item.image in [\"ubuntu:18.04\", \"ubuntu:20.04\", \"debian:10\"] %}\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n       apt-utils python3-setuptools python3-pip && rm -rf /var/lib/apt/lists/*;\n{% endif %}\n{% if item.image in [\"centos:8\"] %}\nRUN yum -y install hostname python3 python3-pip && rm -rf /var/cache/yum\n{% endif %}\n\n{# Steps for cleanup #}\n{% if item.image.split(':', 1)[0] in [\"ubuntu\", \"debian\"] %}\nRUN rm -Rf /var/lib/apt/lists/* \\\n    && rm -Rf /usr/share/doc && rm -Rf /usr/share/man \\\n    && apt-get clean\n{% elif item.image.split(':', 1)[0] in [\"centos\"] %}\nRUN yum clean all\n{% endif %}\n\n{# Steps for clenaup of systemd #}\n{% if item.image in [\"centos:7\", \"centos:8\", \"debian:9\"] %}\nRUN (cd /lib/systemd/system/sysinit.target.wants/; for i in *; do [ $i == \\\n  systemd-tmpfiles-setup.service ] || rm -f $i; done); \\\n  rm -f /lib/systemd/system/multi-user.target.wants/*;\\\n  rm -f /etc/systemd/system/*.wants/*;\\\n  rm -f /lib/systemd/system/local-fs.target.wants/*; \\\n  rm -f /lib/systemd/system/sockets.target.wants/*udev*; \\\n  rm -f /lib/systemd/system/sockets.target.wants/*initctl*; \\\n  rm -f /lib/systemd/system/basic.target.wants/*;\\\n  rm -f /lib/systemd/system/anaconda.target.wants/*; \\\n  mkdir -p /run/systemd/system\n{% endif %}\n{% if item.image in [\"ubuntu:18.04\", \"ubuntu:20.04\"] %}\n# Remove unnecessary getty and udev targets that result in high CPU usage when using\n# multiple containers with Molecule (https://github.com/ansible/molecule/issues/1104)\nRUN rm -f /lib/systemd/system/systemd*udev* \\\n  && rm -f /lib/systemd/system/getty.target\n{% endif %}\n\n\n{% if item.image in [\"centos:7\", \"centos:8\"] %}\n# Disable requiretty.\nRUN sed -i -e 's/^\\(Defaults\\s*requiretty\\)/#--- \\1/'  /etc/sudoers\n{% endif %}\n\n{% if item.image.split(':', 1)[0] not in [\"centos\", \"debian\"] %}\n# Fix potential UTF-8 errors with ansible-test.\nRUN locale-gen en_US.UTF-8\n{% endif %}\n\n# Install Ansible inventory file.\nRUN mkdir -p /etc/ansible\nRUN echo \"[local]\\nlocalhost ansible_connection=local\" > /etc/ansible/hosts\n\n{% if item.image in [\"centos:7\", \"centos:8\", \"debian:9\", \"debian:10\"] %}\nVOLUME [\"/sys/fs/cgroup\"]\n{% elif item.image in [\"ubuntu:16.04\", \"ubuntu:18.04\", \"ubuntu:20.04\"] %}\nVOLUME [\"/sys/fs/cgroup\", \"/tmp\", \"/run\"]\n{% endif %}\n{% if item.image in [\"centos:7\", \"centos:8\"] %}\nCMD [\"/usr/sbin/init\"]\n{% elif item.image in [\"ubuntu:16.04\", \"ubuntu:18.04\", \"ubuntu:20.04\", \"debian:9\", \"debian:10\"] %}\nCMD [\"/lib/systemd/systemd\"]\n{% endif %}\n"
}