{
  "startTime": 1674249587929,
  "endTime": 1674249588544,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM composer:2 as vendor\nWORKDIR /app\n\nCOPY database/ /app/database/\nCOPY composer.json composer.lock /app/\nRUN composer install \\\n    --ignore-platform-reqs \\\n    --no-interaction \\\n    --no-plugins \\\n    --no-dev \\\n    --no-scripts \\\n    --prefer-dist\n\nCOPY . /app\nRUN composer dump-autoload --optimize --classmap-authoritative\n\nFROM node as frontend\nWORKDIR /app\n\nCOPY package.json webpack.mix.js package-lock.json tailwind.config.js /app/\nRUN npm install && npm cache clean --force;\n\nCOPY resources/ /app/resources/\nRUN npm run production\n\nFROM php:7.4-apache\n\nRUN a2enmod rewrite\n\nADD docker/apache.conf /etc/apache2/sites-available/000-default.conf\nADD docker/php.ini ${PHP_INI_DIR}/conf.d/99-overrides.ini\n\nWORKDIR /app\nCOPY --from=vendor /app /app\nCOPY --from=frontend /app/public /app/public\nRUN touch /app/database/database.sqlite\nRUN chgrp -R www-data /app/storage /app/bootstrap/cache && chmod -R ug+rwx /app/storage /app/bootstrap/cache\nRUN chmod -R 775 /app/database && chown -R :www-data /app/database\n\nRUN cp .env.example .env\nRUN [\"php\", \"artisan\", \"key:generate\"]\nRUN [\"php\", \"artisan\", \"migrate\"]\n"
}