{
  "startTime": 1674251294663,
  "endTime": 1674251295438,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 7,
        "columnEnd": 131
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG TAG=3.7.12-alpine3.15\n\nFROM python:${TAG} as build\n\nRUN apk add --no-cache \\\n    gcc \\\n    musl-dev \\\n    libffi-dev\n\nRUN python3 \\\n    -m pip \\\n    install \\\n    --prefix=/install \\\n    --no-cache-dir \\\n    -U \\\n    clearml-agent \\\n    cryptography>=2.9\n\nFROM python:${TAG} as target\n\nWORKDIR /app\n\nARG KUBECTL_VERSION=1.22.4\n\n# Not sure about these ENV vars\n# ENV LC_ALL=en_US.UTF-8\n# ENV LANG=en_US.UTF-8\n# ENV LANGUAGE=en_US.UTF-8\n# ENV PYTHONIOENCODING=UTF-8\n\nCOPY --from=build /install /usr/local\n\nADD https://storage.googleapis.com/kubernetes-release/release/v${KUBECTL_VERSION}/bin/linux/amd64/kubectl /usr/bin/\n\nRUN chmod +x /usr/bin/kubectl\n\nRUN apk add --no-cache \\\n    bash\n\nCOPY k8s_glue_example.py .\n\n# AWS CLI\n# https://github.com/kyleknap/aws-cli/blob/source-proposal/proposals/source-install.md#alpine-linux\n# https://github.com/aws/aws-cli/issues/4685\n# https://github.com/aws/aws-cli/pull/6352\n\n# https://github.com/GoogleCloudPlatform/cloud-sdk-docker/blob/master/alpine/Dockerfile\n\nFROM target as gcp\n\nARG CLOUD_SDK_VERSION=371.0.0\nENV CLOUD_SDK_VERSION=$CLOUD_SDK_VERSION\nENV PATH /google-cloud-sdk/bin:$PATH\n\nWORKDIR /\n\nRUN apk --no-cache add \\\n        curl \\\n        python3 \\\n        py3-crcmod \\\n        py3-openssl \\\n        bash \\\n        libc6-compat \\\n        openssh-client \\\n        git \\\n        gnupg \\\n    && curl -f -O https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-${CLOUD_SDK_VERSION}-linux-x86_64.tar.gz && \\\n    tar xzf google-cloud-sdk-${CLOUD_SDK_VERSION}-linux-x86_64.tar.gz && \\\n    rm google-cloud-sdk-${CLOUD_SDK_VERSION}-linux-x86_64.tar.gz && \\\n    gcloud config set core/disable_usage_reporting true && \\\n    gcloud config set component_manager/disable_update_check true && \\\n    gcloud config set metrics/environment github_docker_image && \\\n    gcloud --version\n\nWORKDIR /app"
}