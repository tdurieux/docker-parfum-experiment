{
  "startTime": 1674253260501,
  "endTime": 1674253261831,
  "originalSmells": [
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 7,
        "columnEnd": 26
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 77
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#-------------------------------------------------------------------------------------------------------------\n# Copyright (c) Microsoft Corporation. All rights reserved.\n# Licensed under the MIT License. See https://go.microsoft.com/fwlink/?linkid=2090316 for license information.\n#-------------------------------------------------------------------------------------------------------------\n\nFROM openjdk:14-jdk\n\n# This Dockerfile adds a non-root user with sudo access. Use the \"remoteUser\"\n# property in devcontainer.json to use it. On Linux, the container user's GID/UIDs\n# will be updated to match your local UID/GID (when using the dockerFile property).\n# See https://aka.ms/vscode-remote/containers/non-root-user for details.\nARG USERNAME=vscode\nARG USER_UID=1000\nARG USER_GID=$USER_UID\n\nRUN groupadd --gid $USER_GID $USERNAME \\\n    && useradd -s /bin/bash --uid $USER_UID --gid $USER_GID -m $USERNAME \\\n    # [Optional] Add sudo support for the non-root user\n    && yum install -y sudo \\\n    && echo $USERNAME ALL=\\(root\\) NOPASSWD:ALL > /etc/sudoers.d/$USERNAME \\\n    && chmod 0440 /etc/sudoers.d/$USERNAME && rm -rf /var/cache/yum\n\n# Verify git, needed tools installed\nRUN yum install -y git openssh-clients less net-tools which curl procps unzip && rm -rf /var/cache/yum\n\n#-------------------Uncomment the following steps to install Maven CLI Tools----------------------------------\n# ARG MAVEN_VERSION=3.6.3\n# ARG MAVEN_SHA=c35a1803a6e70a126e80b2b3ae33eed961f83ed74d18fcd16909b2d44d7dada3203f1ffe726c17ef8dcca2dcaa9fca676987befeadc9b9f759967a8cb77181c0\n# RUN mkdir -p /usr/share/maven /usr/share/maven/ref \\\n#   && curl -fsSL -o /tmp/apache-maven.tar.gz https://archive.apache.org/dist/maven/maven-3/${MAVEN_VERSION}/binaries/apache-maven-${MAVEN_VERSION}-bin.tar.gz \\\n#   && echo \"${MAVEN_SHA} /tmp/apache-maven.tar.gz\" | sha512sum -c - \\\n#   && tar -xzf /tmp/apache-maven.tar.gz -C /usr/share/maven --strip-components=1 \\\n#   && rm -f /tmp/apache-maven.tar.gz \\\n#   && ln -s /usr/share/maven/bin/mvn /usr/bin/mvn\n# COPY maven-settings.xml /usr/share/maven/ref/\n# ENV MAVEN_HOME /usr/share/maven\n# ENV MAVEN_CONFIG /root/.m2\n#-------------------------------------------------------------------------------------------------------------\n\n#-------------------Uncomment the following steps to install Gradle CLI Tools---------------------------------\n# ENV GRADLE_HOME /opt/gradle\n# ENV GRADLE_VERSION 5.4.1\n# ARG GRADLE_DOWNLOAD_SHA256=7bdbad1e4f54f13c8a78abc00c26d44dd8709d4aedb704d913fb1bb78ac025dc\n# RUN curl -sSL --output gradle.zip \"https://services.gradle.org/distributions/gradle-${GRADLE_VERSION}-bin.zip\" \\\n#     && echo \"${GRADLE_DOWNLOAD_SHA256} *gradle.zip\" | sha256sum --check - \\\n#     && unzip gradle.zip \\\n#     && rm gradle.zip \\\n#     && mv \"gradle-${GRADLE_VERSION}\" \"${GRADLE_HOME}/\" \\\n#     && ln -s \"${GRADLE_HOME}/bin/gradle\" /usr/bin/gradle\n#-------------------------------------------------------------------------------------------------------------\n\n# Clean yum cache\nRUN yum clean all\n\n# Allow for a consistent java home location for settings - image is changing over time\nRUN if [ ! -d \"/docker-java-home\" ]; then ln -s \"${JAVA_HOME}\" /docker-java-home; fi\n"
}