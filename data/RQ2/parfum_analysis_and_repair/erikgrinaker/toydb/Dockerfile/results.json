{
  "startTime": 1674254662123,
  "endTime": 1674254663205,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 25,
        "columnEnd": 55
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 25,
        "columnEnd": 55
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Initial build\nFROM rust:1.53-slim AS build\n\nARG TARGET=x86_64-unknown-linux-musl\nRUN apt-get -q update && apt-get -q --no-install-recommends install -y musl-dev && rm -rf /var/lib/apt/lists/*;\nRUN rustup target add $TARGET\n\n# FIXME: cargo does not have an option to only build dependencies, so we build\n# a dummy main.rs. See: https://github.com/rust-lang/cargo/issues/2644\nWORKDIR /usr/src/toydb\n\nCOPY Cargo.toml Cargo.lock ./\nRUN mkdir src \\\n    && echo \"fn main() {}\" >src/main.rs \\\n    && echo \"fn main() {}\" >build.rs\nRUN cargo fetch --target=$TARGET\nRUN cargo build --release --target=$TARGET \\\n    && rm -rf build.rs src target/$TARGET/release/toydb*\n\nCOPY . .\nRUN cargo install --bin toydb --locked --offline --path . --target=$TARGET\n\n# Runtime image\nFROM alpine:3.14\nCOPY --from=build /usr/local/cargo/bin/toydb /usr/local/bin/toydb\nCOPY --from=build /usr/src/toydb/config/toydb.yaml /etc/toydb.yaml\nCMD [\"toydb\"]\n"
}