{
  "startTime": 1674255725138,
  "endTime": 1674255725780,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 6,
        "columnEnd": 41
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 157
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 157
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 6,
        "columnEnd": 41
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 157
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 181
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:20.04\nMAINTAINER cylondata@googlegroups.com\n\nRUN DEBIAN_FRONTEND=noninteractive TZ=America/New_York apt-get update -y  && apt-get upgrade -y \\\n   && apt-get install --no-install-recommends -y apt-utils tzdata && rm -rf /var/lib/apt/lists/*;\nRUN dpkg-reconfigure tzdata\n\nRUN DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y python3 python3-dev python3-venv python3-pip git build-essential libopenmpi-dev vim cmake libbrotli-dev && rm -rf /var/lib/apt/lists/*;\n\nENV CYLON_HOME=/cylon\nENV CYLON_BUILD=$CYLON_HOME/build\nENV CYLON_ENV=$CYLON_HOME/ENV\n\nWORKDIR $CYLON_HOME\n\nRUN git clone https://github.com/cylondata/cylon.git $CYLON_HOME\nRUN cd $CYLON_HOME && python3 -m venv --system-site-packages $CYLON_ENV\n\nRUN echo 'alias build_cylon=\"cd $CYLON_HOME && ./build.sh -pyenv $CYLON_ENV -bpath $CYLON_BUILD --cpp --python --release --cmake-flags -DCYLON_PARQUET=ON\"' >> $HOME/.bashrc\nRUN echo 'alias build_cylon_test=\"cd $CYLON_HOME && ./build.sh -pyenv $CYLON_ENV -bpath $CYLON_BUILD --cpp --test --python --pytest --release --cmake-flags -DCYLON_PARQUET=ON\"' >> $HOME/.bashrc\n\nRUN cd $CYLON_HOME && /bin/bash build.sh -pyenv $CYLON_ENV -bpath $CYLON_BUILD --cpp --python --release  --cmake-flags -DCYLON_PARQUET=ON\n\n# Activating PyCylon Env\nENV LD_LIBRARY_PATH=$CYLON_BUILD/lib/:$CYLON_BUILD/arrow/install/lib/\nENV PATH=\"$CYLON_ENV/bin:$PATH\"\n\n# Adding Cylon User\nRUN useradd -ms /bin/bash cylon\n\n# Creating folder for the applications\nRUN mkdir /code && chown cylon /code\n\nUSER cylon\nWORKDIR /home/cylon\n\nENTRYPOINT [\"/bin/bash\"]\n"
}