{
  "startTime": 1674255841272,
  "endTime": 1674255842134,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 8,
        "columnEnd": 90
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 8,
        "columnEnd": 62
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 28,
        "lineEnd": 75,
        "columnStart": 7,
        "columnEnd": 60
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 7,
        "columnEnd": 88
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:jessie\nMAINTAINER Jonathan Gautheron \"jgautheron@neverblend.in\"\n\nENV DEBIAN_FRONTEND noninteractive\n\n# Define versions\nENV OPENRESTY_VERSION 1.9.7.2\nENV PAGESPEED_VERSION 1.10.33.5-beta\nENV PAGESPEED_PSOL_VERSION 1.10.33.5\nENV OPENSSL_VERSION 1.0.2f\nENV PCRE_VERSION 8.38\nENV ZLIB_VERSION 1.2.8\n\n# Default environment\n# Can be overridden at runtime using -e ENVIRONMENT=...\nENV ENVIRONMENT development\n\nRUN apt-get update -qq \\\n    && apt-get install -yqq build-essential wget ca-certificates --no-install-recommends && rm -rf /var/lib/apt/lists/*;\n\nRUN (wget -qO - https://github.com/pagespeed/ngx_pagespeed/archive/v${PAGESPEED_VERSION}.tar.gz | tar zxf - -C /tmp) \\\n    && (wget --no-check-certificate -qO - https://dl.google.com/dl/page-speed/psol/${PAGESPEED_PSOL_VERSION}.tar.gz | tar zxf - -C /tmp/ngx_pagespeed-${PAGESPEED_VERSION}/) \\\n    && ( wget -qO - https://openresty.org/download/ngx_openresty-${OPENRESTY_VERSION}.tar.gz | tar zxf - -C /tmp) \\\n    && (wget -qO - https://www.openssl.org/source/openssl-${OPENSSL_VERSION}.tar.gz | tar zxf - -C /tmp) \\\n    && (wget -qO - ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/pcre-${PCRE_VERSION}.tar.gz | tar zxf - -C /tmp) \\\n    && ( wget -qO - https://zlib.net/zlib-${ZLIB_VERSION}.tar.gz | tar zxf - -C /tmp)\n\nRUN cd /tmp/ngx_openresty-${OPENRESTY_VERSION} \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/share/nginx \\\n        --user=www-data \\\n        --group=www-data \\\n        --with-luajit \\\n        --sbin-path=/usr/sbin/nginx \\\n        --conf-path=/etc/nginx/nginx.conf \\\n        --error-log-path=/var/log/nginx/error.log \\\n        --http-client-body-temp-path=/var/lib/nginx/body \\\n        --http-fastcgi-temp-path=/var/lib/nginx/fastcgi \\\n        --http-log-path=/var/log/nginx/access.log \\\n        --http-proxy-temp-path=/var/lib/nginx/proxy \\\n        --lock-path=/var/lock/nginx.lock \\\n        --pid-path=/var/run/nginx.pid \\\n        --with-ipv6 \\\n        --with-http_ssl_module \\\n        --with-http_v2_module \\\n        --with-pcre=/tmp/pcre-${PCRE_VERSION} \\\n        --with-zlib=/tmp/zlib-${ZLIB_VERSION} \\\n        --with-openssl=/tmp/openssl-${OPENSSL_VERSION} \\\n        --with-md5=/tmp/openssl-${OPENSSL_VERSION} \\\n        --with-md5-asm \\\n        --with-sha1=/tmp/openssl-${OPENSSL_VERSION} \\\n        --with-sha1-asm \\\n        --with-pcre-jit \\\n        --with-http_stub_status_module \\\n        --with-http_secure_link_module \\\n        --with-http_gzip_static_module \\\n        --with-http_gunzip_module \\\n        --without-http_uwsgi_module \\\n        --without-http_scgi_module \\\n        --without-http_memc_module \\\n        --without-http_memcached_module \\\n        --without-http_coolkit_module \\\n        --without-http_form_input_module \\\n        --without-http_rds_json_module \\\n        --without-http_rds_csv_module \\\n        --without-http_empty_gif_module \\\n        --without-http_browser_module \\\n        --without-http_userid_module \\\n        --without-http_autoindex_module \\\n        --without-http_geo_module \\\n        --without-http_split_clients_module \\\n        --without-mail_pop3_module \\\n        --without-mail_imap_module \\\n        --without-mail_smtp_module \\\n        --without-http_encrypted_session_module \\\n        --without-lua_resty_memcached \\\n        --add-module=/tmp/ngx_pagespeed-${PAGESPEED_VERSION} \\\n    && make \\\n    && make install\n\n# Cleanup\nRUN rm -Rf /tmp/* \\\n    && apt-get purge -yqq build-essential wget ca-certificates \\\n    && apt-get autoremove -yqq \\\n    && apt-get clean all\n\n# Create folders required by nginx & set proper permissions\nRUN mkdir /var/lib/nginx \\\n    && chown -R www-data:www-data /var/lib/nginx \\\n    && mkdir /var/lib/nginx/proxy \\\n    && mkdir /var/lib/nginx/body \\\n    && mkdir /var/lib/nginx/fastcgi \\\n    && chmod 777 /var/log/nginx\n\n# Add full write permissions to the pagespeed cache folder\nRUN mkdir /var/ngx_pagespeed_cache \\\n    && chmod 777 /var/ngx_pagespeed_cache\n\n# Copy our custom configuration\nADD nginx /etc/nginx/\n\n# Define mountable directories.\nVOLUME [\"/etc/nginx/sites-enabled\", \"/etc/nginx/certs\", \"/etc/nginx/conf\", \"/var/www\"]\n\n# Define working directory.\nWORKDIR /etc/nginx\n\n# Run nginx\nCMD [\"nginx\"]\n\nEXPOSE 80 443\n"
}