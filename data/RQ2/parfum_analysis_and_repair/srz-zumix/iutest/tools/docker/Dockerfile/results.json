{
  "startTime": 1674255982895,
  "endTime": 1674255984087,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 24
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Usage\n# docker build tools/docker --build-arg VERSION=latest -t iutest\n# docker run -it -v $(pwd):/iutest iutest bash\n\nARG VERSION=latest\nFROM ubuntu:$VERSION\nARG VERSION\nARG CLANG_VERSION=9\nRUN echo ${VERSION} > image_version\n\nLABEL maintainer \"srz_zumix <https://github.com/srz-zumix>\"\n\nENV DEBIAN_FRONTEND=noninteractive\nSHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\nRUN apt-get update -q -y && \\\n    apt-get install -y --no-install-recommends software-properties-common apt-transport-https && \\\n    apt-get update -q -y && \\\n    apt-get install --no-install-recommends -y \\\n        make cmake build-essential libssl-dev zlib1g-dev libbz2-dev \\\n        libreadline-dev libsqlite3-dev wget curl llvm libncurses5-dev libncursesw5-dev \\\n        xz-utils tk-dev libffi-dev liblzma-dev python-openssl git \\\n        linux-tools-common linux-tools-generic \\\n        vim gdb iputils-ping \\\n        cppcheck \\\n        subversion \\\n        python3 python3-pip \\\n        doxygen graphviz && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/*\n\n# pyenv\nRUN update-alternatives --install /usr/bin/python  python  /usr/bin/python3 1000 \\\n                        --slave   /usr/bin/pip  pip  /usr/bin/pip3 && \\\n    pip install --no-cache-dir virtualenv virtualenvwrapper\nENV PYENV_ROOT $HOME/.pyenv\nENV PATH $HOME/.pyenv/shims:$HOME/.pyenv/bin:$PATH\nRUN wget https://raw.githubusercontent.com/yyuu/pyenv-installer/master/bin/pyenv-installer -O - | bash && \\\n    pyenv --version && \\\n    pyenv install 3.5.9 && \\\n    pyenv install 3.8.2\nRUN pyenv local 3.5.9 && \\\n    pip install --no-cache-dir --upgrade pip && \\\n    pip install --no-cache-dir --upgrade setuptools tox requests && \\\n    pyenv local --unset\nRUN pyenv local 3.8.2 && \\\n    pip install --no-cache-dir --upgrade pip && \\\n    pip install --no-cache-dir --upgrade setuptools tox requests && \\\n    pyenv local --unset\nRUN pyenv local 3.5.9 3.8.2 && \\\n    pip install --no-cache-dir virtualenv\n\n# gcc\nRUN add-apt-repository -y ppa:ubuntu-toolchain-r/test && \\\n    apt-get update && \\\n    apt-get install -y --no-install-recommends g++-8 gcc-8 && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    update-alternatives --install /usr/bin/gcc  gcc  /usr/bin/gcc-8 1000 \\\n                        --slave   /usr/bin/g++  g++  /usr/bin/g++-8 \\\n                        --slave   /usr/bin/gcov gcov /usr/bin/gcov-8\n\n# clang\nRUN . /etc/os-release && \\\n    wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \\\n    apt-add-repository \"deb http://apt.llvm.org/${VERSION_CODENAME}/ llvm-toolchain-${VERSION_CODENAME}-${CLANG_VERSION} main\" && \\\n    apt-get update && \\\n    apt-get install -y --no-install-recommends clang-${CLANG_VERSION} && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-${CLANG_VERSION} 1000 \\\n                        --slave   /usr/bin/clang clang /usr/bin/clang-${CLANG_VERSION}\n\n# perf\nRUN rm -f /usr/bin/perf && \\\n    update-alternatives --install /usr/bin/perf perf $(find /usr/lib/linux-tools -name *generic)/perf 1000\n\nRUN mkdir /iutest\nVOLUME [ \"/iutest\" ]\nWORKDIR /iutest\n"
}