{
  "startTime": 1674248757830,
  "endTime": 1674248758800,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 7,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 33,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 22,
        "columnEnd": 62
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 115,
        "lineEnd": 115,
        "columnStart": 7,
        "columnEnd": 90
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM tomcat:9-jdk11-openjdk as mother\nLABEL maintainer=\"Alessandro Parma <alessandro.parma@geosolutionsgroup.com>\"\nSHELL [\"/bin/bash\", \"-c\"]\n\n# download and install libjpeg-2.0.6 from sources.\nARG DEBIAN_FRONTEND=noninteractive\nARG CMAKE_BUILD_PARALLEL_LEVEL=8\nARG APP_LOCATION=\"geoserver\"\nRUN apt-get update && apt-get install --no-install-recommends -y unzip wget cmake nasm \\\n    && wget https://nav.dl.sourceforge.net/project/libjpeg-turbo/2.0.6/libjpeg-turbo-2.0.6.tar.gz \\\n    && tar -zxf ./libjpeg-turbo-2.0.6.tar.gz \\\n    && cd libjpeg-turbo-2.0.6 && cmake -G\"Unix Makefiles\" && make deb \\\n    && dpkg -i ./libjpeg*.deb && apt-get -f -y install \\\n    && apt-get -y purge cmake nasm \\\n    && apt-get clean \\\n    && apt-get -y autoclean \\\n    && apt-get -y autoremove \\\n    && rm -rf /var/lib/apt/lists/* \\\n    && rm -rf /usr/share/man/* \\\n    && rm -rf /usr/share/doc/* && rm ./libjpeg-turbo-2.0.6.tar.gz\n\n# accepts local files and URLs. Tar(s) are automatically extracted\nWORKDIR /output/datadir\nARG GEOSERVER_DATA_DIR_SRC=\"./.placeholder\"\nADD \"${GEOSERVER_DATA_DIR_SRC}\" \"./\"\n\n# accepts local files and URLs. Tar(s) are automatically extracted\nWORKDIR /output/webapp\nARG GEOSERVER_WEBAPP_SRC=\"./.placeholder\"\nADD \"${GEOSERVER_WEBAPP_SRC}\" \"./\"\n\n# zip files require explicit extracion\nRUN \\\n    if [ -f \"./download\" ] ; then \\\n      mv download geoserver.war.zip && unzip geoserver.war.zip -d geoserver.war && mkdir -p ./geoserver && unzip ./geoserver.war/geoserver.war -d ./geoserver && rm -rf ./geoserver.war;\\\n    fi\n\n# zip files require explicit extracion\nRUN \\\n    if [ \"${GEOSERVER_WEBAPP_SRC##*.}\" = \"zip\" ]; then \\\n        unzip \"./*zip\"; \\\n        rm ./*zip; \\\n    fi \\\n    && [ -d \"./geoserver\" ] || (mkdir -p ./geoserver && unzip ./geoserver.war -d ./geoserver && rm ./geoserver.war)\n\nWORKDIR /output/plugins\nARG PLUG_IN_URLS=\"\"\nARG PLUG_IN_PATHS=\"\"\nADD .placeholder ${PLUG_IN_PATHS} /output/plugins/\nCOPY geoserver-plugin-download.sh /usr/local/bin/geoserver-plugin-download.sh\nRUN /usr/local/bin/geoserver-plugin-download.sh /output/plugins/ ${PLUG_IN_URLS}\nRUN \\\n    if [ -f *.zip ] ; then \\\n       unzip -o \"./*.zip\"; \\\n    fi\n\nWORKDIR /output/webapp\nRUN \\\n    if [ \"${APP_LOCATION}\" != \"geoserver\" ]; then \\\n      mv /output/webapp/geoserver /output/webapp/${APP_LOCATION}; \\\n    fi\n\nFROM tomcat:9-jdk11-openjdk\n\nARG UID=1000\nARG GID=1000\nARG UNAME=tomcat\nARG CUSTOM_FONTS=\"./.placeholder\"\nENV ADMIN_PASSWORD=\"\"\nENV APP_LOCATION=\"geoserver\"\n\nENV CATALINA_BASE \"$CATALINA_HOME\"\n# set externalizations\nENV GEOSERVER_HOME=\"/var/geoserver\"\nENV GEOSERVER_LOG_DIR=\"${GEOSERVER_HOME}/logs\"\nENV GEOSERVER_DATA_DIR=\"${GEOSERVER_HOME}/datadir\"\nENV GEOSERVER_LOG_LOCATION=\"${GEOSERVER_LOG_DIR}/geoserver.log\"\nENV GEOWEBCACHE_CONFIG_DIR=\"${GEOSERVER_DATA_DIR}/gwc\"\nENV GEOWEBCACHE_CACHE_DIR=\"${GEOSERVER_HOME}/gwc_cache_dir\"\nENV NETCDF_DATA_DIR=\"${GEOSERVER_HOME}/netcdf_data_dir\"\nENV GRIB_CACHE_DIR=\"${GEOSERVER_HOME}/grib_cache_dir\"\n# override at run time as needed JAVA_OPTS\nENV INITIAL_MEMORY=\"2G\"\nENV MAXIMUM_MEMORY=\"4G\"\nENV LD_LIBRARY_PATH=\"/opt/libjpeg-turbo/lib64\"\nENV JAIEXT_ENABLED=\"true\"\nENV PLUGIN_DYNAMIC_URLS=\"\"\nENV GEOSERVER_OPTS=\" \\\n  -Dorg.geotools.coverage.jaiext.enabled=${JAIEXT_ENABLED} \\\n  -Duser.timezone=UTC \\\n  -Dorg.geotools.shapefile.datetime=true \\\n  -DGEOSERVER_LOG_LOCATION=${GEOSERVER_LOG_LOCATION} \\\n  -DGEOWEBCACHE_CONFIG_DIR=${GEOWEBCACHE_CONFIG_DIR} \\\n  -DGEOWEBCACHE_CACHE_DIR=${GEOWEBCACHE_CACHE_DIR} \\\n  -DNETCDF_DATA_DIR=${NETCDF_DATA_DIR} \\\n  -DGRIB_CACHE_DIR=${GRIB_CACHE_DIR}\"\n\nENV JAVA_OPTS=\"-Xms${INITIAL_MEMORY} -Xmx${MAXIMUM_MEMORY} \\\n  -Djava.awt.headless=true -server \\\n  -Dfile.encoding=UTF8 \\\n  -Djavax.servlet.request.encoding=UTF-8 \\\n  -Djavax.servlet.response.encoding=UTF-8 \\\n  -XX:SoftRefLRUPolicyMSPerMB=36000 -XX:+UseG1GC \\\n  -XX:MaxGCPauseMillis=200 -XX:ParallelGCThreads=20 -XX:ConcGCThreads=5 \\\n  ${GEOSERVER_OPTS}\"\n\n# added for git hash\nARG GIT_HASH=\"\"\nENV GIT_HASH \"$GIT_HASH\"\n\nCOPY run_tests.sh /docker/tests/run_tests.sh\n\n# install needed packages and create externalized dirs\nARG DEBIAN_FRONTEND=noninteractive\nRUN apt-get update \\\n    && apt-get install --no-install-recommends --yes git vim gdal-bin postgresql-client fontconfig libfreetype6 jq \\\n    && apt-get clean \\\n    && apt-get -y autoclean \\\n    && apt-get -y autoremove \\\n    && rm -rf /var/lib/apt/lists/* \\\n    && rm -rf /usr/share/man/* \\\n    && rm -rf /usr/share/doc/* \\\n    && mkdir -p \\\n    \"${GEOSERVER_DATA_DIR}\" \\\n    \"${GEOSERVER_LOG_DIR}\"  \\\n    \"${GEOWEBCACHE_CONFIG_DIR}\" \\\n    \"${GEOWEBCACHE_CACHE_DIR}\" \\\n    \"${NETCDF_DATA_DIR}\" \\\n    \"${GRIB_CACHE_DIR}\"\n\n# copy from mother\nCOPY --from=mother \"/opt/libjpeg-turbo\" \"/opt/libjpeg-turbo\"\nCOPY --from=mother \"/output/datadir\" \"${GEOSERVER_DATA_DIR}\"\nCOPY --from=mother \"/output/webapp/geoserver\" \"${CATALINA_BASE}/webapps/geoserver\"\nCOPY --from=mother \"/output/plugins\" \"${CATALINA_BASE}/webapps/geoserver/WEB-INF/lib\"\n\nCOPY geoserver-plugin-download.sh /usr/local/bin/geoserver-plugin-download.sh\nCOPY geoserver-rest-config.sh /usr/local/bin/geoserver-rest-config.sh\nCOPY geoserver-rest-reload.sh /usr/local/bin/geoserver-rest-reload.sh\nCOPY entrypoint.sh /entrypoint.sh\nCOPY ${CUSTOM_FONTS} $GEOSERVER_DATA_DIR/styles/\nRUN groupadd -g $GID $UNAME\nRUN useradd -m -u $UID -g $GID --system $UNAME\nRUN chown -R $UID:$GID $GEOSERVER_LOG_DIR $CATALINA_BASE $GEOWEBCACHE_CACHE_DIR $GEOWEBCACHE_CONFIG_DIR $NETCDF_DATA_DIR $GRIB_CACHE_DIR $GEOSERVER_DATA_DIR\n\nRUN if [ ! -f \"${GEOSERVER_DATA_DIR}/logging.xml\" ]; then cp -a ${CATALINA_BASE}/webapps/geoserver/data/* ${GEOSERVER_DATA_DIR};fi\n\nWORKDIR \"$CATALINA_BASE\"\nUSER $UNAME\n\nENV TERM xterm\nEXPOSE 8080/tcp\nCMD [\"/entrypoint.sh\"]\n"
}