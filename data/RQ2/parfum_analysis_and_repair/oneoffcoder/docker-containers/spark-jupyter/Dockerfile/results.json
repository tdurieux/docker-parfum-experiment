{
  "startTime": 1674255245105,
  "endTime": 1674255245991,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 116
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 7,
        "columnEnd": 48
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 7,
        "columnEnd": 55
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 7,
        "columnEnd": 65
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 7,
        "columnEnd": 78
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 7,
        "columnEnd": 45
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 7,
        "columnEnd": 78
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 7,
        "columnEnd": 45
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:latest\nLABEL org=\"One-Off Coder\"\nLABEL author=\"Jee Vang, Ph.D.\"\nLABEL email=\"info@oneoffcoder.com\"\nLABEL website=\"https://www.oneoffcoder.com\"\nLABEL facebook=\"https://www.facebook.com/oneoffcoder\"\nLABEL twitter=\"https://twitter.com/oneoffcoder\"\nLABEL instagram=\"https://www.instagram.com/oneoffcoder/\"\nLABEL youtube=\"https://www.youtube.com/channel/UCCCv8Glpb2dq2mhUj5mcHCQ\"\nLABEL linkedin=\"https://www.linkedin.com/company/one-off-coder\"\n\nENV JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64\nENV HDFS_NAMENODE_USER=root\nENV HDFS_DATANODE_USER=root\nENV HDFS_SECONDARYNAMENODE_USER=root\nENV YARN_RESOURCEMANAGER_USER=root\nENV YARN_NODEMANAGER_USER=root\nENV YARN_PROXYSERVER_USER=root\nENV HADOOP_HOME=/usr/local/hadoop\nENV HADOOP_YARN_HOME=${HADOOP_HOME}\nENV HADOOP_CONF_DIR=${HADOOP_HOME}/etc/hadoop\nENV HADOOP_LOG_DIR=${HADOOP_YARN_HOME}/logs\nENV HADOOP_IDENT_STRING=root\nENV HADOOP_MAPRED_IDENT_STRING=root\nENV HADOOP_MAPRED_HOME=${HADOOP_HOME}\nENV SPARK_HOME=/usr/local/spark\nENV CONDA_HOME=/usr/local/conda\nENV PYSPARK_MASTER=yarn\nENV PATH=${CONDA_HOME}/bin:${SPARK_HOME}/bin:${HADOOP_HOME}/bin:${PATH}\nENV NOTEBOOK_PASSWORD=\"\"\n\n# setup ubuntu\nRUN apt-get update -y \\\n    && apt-get upgrade -y \\\n    && apt-get -y --no-install-recommends install openjdk-8-jdk wget openssh-server sshpass supervisor \\\n    && apt-get -y --no-install-recommends install nano net-tools lynx \\\n    && apt-get clean && rm -rf /var/lib/apt/lists/*;\n\n# setup ssh\nRUN ssh-keygen -t rsa -P \"\" -f /root/.ssh/id_rsa \\\n    && cat /root/.ssh/id_rsa.pub >> /root/.ssh/authorized_keys \\\n    && chmod 0600 /root/.ssh/authorized_keys\nCOPY ubuntu/root/.ssh/config /root/.ssh/config\n\n# setup hadoop\nRUN wget -q https://apache.mirrors.tds.net/hadoop/common/hadoop-3.2.1/hadoop-3.2.1.tar.gz -O /tmp/hadoop-3.2.1.tar.gz \\\n    && tar -xzf /tmp/hadoop-3.2.1.tar.gz -C /usr/local/ \\\n    && ln -s /usr/local/hadoop-3.2.1 /usr/local/hadoop \\\n    && rm -fr /usr/local/hadoop/etc/hadoop/* \\\n    && mkdir /usr/local/hadoop/extras \\\n    && mkdir /var/hadoop \\\n\t&& mkdir /var/hadoop/hadoop-datanode \\\n\t&& mkdir /var/hadoop/hadoop-namenode \\\n\t&& mkdir /var/hadoop/mr-history \\\n\t&& mkdir /var/hadoop/mr-history/done \\\n\t&& mkdir /var/hadoop/mr-history/tmp && rm /tmp/hadoop-3.2.1.tar.gz\nCOPY ubuntu/usr/local/hadoop/etc/hadoop/* /usr/local/hadoop/etc/hadoop/\nCOPY ubuntu/usr/local/hadoop/extras/* /usr/local/hadoop/extras/\nRUN $HADOOP_HOME/bin/hdfs namenode -format oneoffcoder\n\n# setup spark\nRUN wget -q https://archive.apache.org/dist/spark/spark-2.4.4/spark-2.4.4-bin-hadoop2.7.tgz -O /tmp/spark-2.4.4-bin-hadoop2.7.tgz \\\n    && tar -xzf /tmp/spark-2.4.4-bin-hadoop2.7.tgz -C /usr/local/ \\\n    && ln -s /usr/local/spark-2.4.4-bin-hadoop2.7 /usr/local/spark \\\n    && rm /usr/local/spark/conf/*.template && rm /tmp/spark-2.4.4-bin-hadoop2.7.tgz\nCOPY ubuntu/usr/local/spark/conf/* /usr/local/spark/conf/\n\n# setup conda\nCOPY ubuntu/root/.jupyter /root/.jupyter/\nCOPY ubuntu/root/ipynb/environment.yml /tmp/environment.yml\nRUN wget -q https://repo.anaconda.com/archive/Anaconda3-2020.02-Linux-x86_64.sh -O /tmp/anaconda.sh \\\n    && /bin/bash /tmp/anaconda.sh -b -p $CONDA_HOME \\\n    && $CONDA_HOME/bin/conda env update -n base --file /tmp/environment.yml \\\n    && $CONDA_HOME/bin/conda update -n root conda -y \\\n    && $CONDA_HOME/bin/conda update --all -y \\\n    && $CONDA_HOME/bin/pip install --no-cache-dir --upgrade pip\n\n# setup volumes\nRUN mkdir /root/ipynb\nVOLUME [ \"/root/ipynb\" ]\n\n# setup supervisor\nCOPY ubuntu/etc/supervisor/supervisor.conf /etc/supervisor/supervisor.conf\nCOPY ubuntu/etc/supervisor/conf.d/all.conf /etc/supervisor/conf.d/all.conf\nCOPY ubuntu/usr/local/bin/start-all.sh /usr/local/bin/start-all.sh\n\n# clean up\nRUN rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \\\n    && mkdir /tmp/spark-events\n\nCMD [\"/usr/bin/supervisord\", \"-c\", \"/etc/supervisor/supervisord.conf\", \"-n\"]"
}