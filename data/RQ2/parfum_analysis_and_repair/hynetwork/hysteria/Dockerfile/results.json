{
  "startTime": 1674219982206,
  "endTime": 1674219983563,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 7,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM golang:alpine AS builder\n\nLABEL maintainer=\"mritd <mritd@linux.com>\"\n\n# GOPROXY is disabled by default, use:\n# docker build --build-arg GOPROXY=\"https://goproxy.io\" ...\n# to enable GOPROXY.\nARG GOPROXY=\"\"\n\nENV GOPROXY ${GOPROXY}\n\nCOPY . /go/src/github.com/hynetwork/hysteria\n\nWORKDIR /go/src/github.com/hynetwork/hysteria/cmd\n\nRUN set -ex \\\n    && apk add --no-cache git build-base \\\n    && export VERSION=$(git describe --tags) \\\n    && export COMMIT=$(git rev-parse HEAD) \\\n    && export TIMESTAMP=$(date \"+%F %T\") \\\n    && go build -trimpath -o /go/bin/hysteria -ldflags \\\n        \"-w -s -X 'main.appVersion=${VERSION}' \\\n        -X 'main.appCommit=${COMMIT}' \\\n        -X 'main.appDate=${TIMESTAMP}'\"\n\n# multi-stage builds to create the final image\nFROM alpine AS dist\n\nLABEL maintainer=\"mritd <mritd@linux.com>\"\n\n# set up nsswitch.conf for Go's \"netgo\" implementation\n# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275\n# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf\nRUN [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf\n\n# bash is used for debugging, tzdata is used to add timezone information.\n# Install ca-certificates to ensure no CA certificate errors.\n#\n# Do not try to add the \"--no-cache\" option when there are multiple \"apk\"\n# commands, this will cause the build process to become very slow.\nRUN set -ex \\\n    && apk upgrade \\\n    && apk add bash tzdata ca-certificates \\\n    && rm -rf /var/cache/apk/*\n\nCOPY --from=builder /go/bin/hysteria /usr/local/bin/hysteria\n\nENTRYPOINT [\"hysteria\"]\n"
}