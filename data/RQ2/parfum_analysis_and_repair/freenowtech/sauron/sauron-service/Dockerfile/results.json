{
  "startTime": 1674249489461,
  "endTime": 1674249490246,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 51,
        "columnEnd": 85
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 28,
        "columnStart": 22,
        "columnEnd": 16
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 22,
        "columnEnd": 71
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM openjdk:11-jre-slim\n\nENV JAVA_TOOL_OPTIONS=\"-XX:+UseContainerSupport -XX:MaxRAMPercentage=80\"\n\nLABEL maintainer=\"upscaler@free-now.com\"\n\nRUN ln -s $(which java) /usr/bin/java\n\nRUN mkdir -p /usr/share/man/man1\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n      curl \\\n      bash \\\n      procps \\\n      maven \\\n      git \\\n      ssh \\\n      apt-utils \\\n      wget \\\n      build-essential \\\n      libncursesw5-dev \\\n      libssl-dev \\\n      libsqlite3-dev \\\n      tk-dev \\\n      libgdbm-dev \\\n      libc6-dev \\\n      libbz2-dev \\\n      libffi-dev \\\n      zlib1g-dev && rm -rf /var/lib/apt/lists/*;\n\n# Installing NodeJS\nRUN curl -f -sL https://deb.nodesource.com/setup_12.x | bash -\n\nRUN apt-get update && apt-get install -y nodejs --no-install-recommends && rm -rf /var/lib/apt/lists/*;\n\n# Installing Python3.9\nRUN wget https://www.python.org/ftp/python/3.9.6/Python-3.9.6.tgz\n\nRUN tar xzf Python-3.9.6.tgz && cd Python-3.9.6 && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-optimizations && make altinstall && rm Python-3.9.6.tgz\n\nRUN update-alternatives --install /usr/bin/python python /usr/local/bin/python3.9 10\n\nRUN cd .. && rm -rf Python-3.9.6*\n\nRUN rm -rf /var/lib/apt/lists/*\n\n# Installing Poetry\nRUN python -m pip install poetry==1.1.7\n\nRUN mkdir /root/.m2\n\nVOLUME /root/.m2\n\nRUN mkdir /root/.gradle\n\nVOLUME /root/.gradle\n\nRUN mkdir /root/.pip\n\nVOLUME /root/.pip\n\nRUN mkdir -p /sauron/plugins\n\nVOLUME /sauron/plugins\n\nENV TINI_VERSION v0.18.0\n\nADD https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini /usr/bin/tini\n\nRUN chmod a+x /usr/bin/tini\n\nCOPY docker/entrypoint.sh /usr/local/bin/entrypoint\n\nCOPY target/sauron-service.jar /sauron\n\nEXPOSE 8080\n\nWORKDIR /sauron\n\nENTRYPOINT [\"/usr/bin/tini\", \"--\"]\n\nCMD [\"/usr/local/bin/entrypoint\"]\n"
}