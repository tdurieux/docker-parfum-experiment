{
  "startTime": 1674251935106,
  "endTime": 1674251936147,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Fully qualified container name prevents public registry typosquatting\nFROM docker.io/library/python:3-alpine\n\nARG UID=1012\nARG GID=1012\n\nRUN addgroup -S -g $GID vuegraf\nRUN adduser  -S -g $GID -u $UID -h /opt/vuegraf vuegraf\n\nWORKDIR /opt/vuegraf\n\n# Install pip dependencies with minimal container layer size growth\nCOPY src/requirements.txt ./\nRUN set -x && \\\n    apk add --no-cache build-base libffi-dev rust cargo openssl-dev && \\\n    pip install --no-cache-dir --upgrade pip && \\\n    pip install --no-cache-dir -r requirements.txt && \\\n    apk del build-base libffi-dev rust cargo openssl-dev && \\\n    rm -rf /var/cache/apk /opt/vuegraf/requirements.txt\n\n# Copying code in after requirements are built optimizes rebuild\n# time, with only a marginal increate in image layer size; chmod\n# is superfluous if \"git update-index --chmod=+x ...\" is done.\nCOPY src/vuegraf/*.py ./\nRUN  chmod a+x *.py\n\n# A numeric UID is required for runAsNonRoot=true to succeed\nUSER $UID\n\nVOLUME /opt/vuegraf/conf\n\nENTRYPOINT [\"/opt/vuegraf/vuegraf.py\" ]\nCMD [\"/opt/vuegraf/conf/vuegraf.json\"]\n\n"
}