{
  "startTime": 1674250030503,
  "endTime": 1674250031241,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 18,
        "lineEnd": 19,
        "columnStart": 7,
        "columnEnd": 19
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# base stage for all environment variables\nFROM python:3.7.9 as python-base\nENV PYTHONUNBUFFERED=1 \\\n    PYTHONDONTWRITEBYTECODE=1\\\n    PIP_NO_CACHE_DIR=off\\\n    PIP_DISABLE_PIP_VERSION_CHECK=on\\\n    PIP_DEFAULT_TIMEOUT=100\\\n    POETRY_VERSION=1.0.10\\\n    POETRY_HOME=\"/opt/poetry\" \\\n    POETRY_VIRTUALENVS_IN_PROJECT=true \\\n    POETRY_NO_INTERACTION=1 \\\n    PYSETUP_PATH=\"/opt/pysetup\" \\\n    VENV_PATH=\"/opt/pysetup/.venv\"\nENV PATH=\"$POETRY_HOME/bin:$VENV_PATH/bin:$PATH\"\n\n# stage for building python dependencies\nFROM python-base as builder-base\nRUN apt-get update \\\n    && apt-get install --no-install-recommends -y \\\n    build-essential && rm -rf /var/lib/apt/lists/*;\n# install poetry - respects $POETRY_VERSION & $POETRY_HOME\nRUN curl -f -sSL https://raw.githubusercontent.com/sdispater/poetry/master/get-poetry.py | python\n# copy project requirement files here to ensure they will be cached.\nWORKDIR $PYSETUP_PATH\nCOPY poetry.lock pyproject.toml ./\n# install runtime deps - uses $POETRY_VIRTUALENVS_IN_PROJECT internally\nRUN poetry install --no-dev\n\n# stage for running everything\nFROM python-base as production\nCOPY --from=builder-base $PYSETUP_PATH $PYSETUP_PATH\nRUN mkdir /app\nWORKDIR /app\nCOPY . /app/\n"
}