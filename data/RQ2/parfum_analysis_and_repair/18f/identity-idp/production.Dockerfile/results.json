{
  "startTime": 1674255821307,
  "endTime": 1674255821749,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 124
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Use build to install our required Gems\nFROM logindotgov/build as build\n\n# Everything happens here from now on\nWORKDIR /idp\n\n# Prod Gems\nCOPY Gemfile Gemfile.lock ./\nRUN bundle install --deployment --clean --without development test\n\n# Prod NPM packages\nCOPY package.json yarn.lock ./\nRUN NODE_ENV=production yarn install --force \\\n    && yarn cache clean\n\n# Switch to base image\nFROM logindotgov/base\nWORKDIR /idp\n\n# Copy Gems, NPMs, and other relevant items from build layer\nCOPY --chown=appuser:appuser --from=build /idp .\n\n# Copy in whole source (minus items matched in .dockerignore)\nCOPY --chown=appuser:appuser . .\nCOPY --chown=appuser:appuser --from=build /usr/local/bundle/config /usr/local/bundle\nRUN mkdir -p /idp/log /usr/local/share/aws ; chown appuser /idp/log\n\n# update CA certs so that we can trust RDS\nRUN curl -f https://s3.amazonaws.com/rds-downloads/rds-combined-ca-bundle.pem > /usr/local/share/aws/rds-combined-ca-bundle.pem && grep 'END CERTIFICATE' /usr/local/share/aws/rds-combined-ca-bundle.pem >/dev/null\n\n# Up to this point we've been root, change to a lower priv. user\nUSER appuser\n\nEXPOSE 3000\nCMD [\"bundle\", \"exec\", \"rackup\", \"config.ru\", \"--host\", \"0.0.0.0\", \"--port\", \"3000\"]\n"
}