{
  "startTime": 1674250565740,
  "endTime": 1674250566682,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 66
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 7,
        "columnEnd": 46
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Use build image first for heavy lifting\nFROM logindotgov/build as build\n\n# Everything happens here from now on\nWORKDIR /idp\n\n# Set MAKEFLAGS to scale with compute capacity\nENV MAKEFLAGS \"-j$(nproc)\"\n\n# Install dev and test gems\nCOPY Gemfile Gemfile.lock ./\nRUN bundle install -j $(nproc) --system --with development test\n\n# Install NPM packages\nCOPY package.json yarn.lock ./\nRUN NODE_ENV=development yarn install --force \\\n    && yarn cache clean\n\n# Switch to base image and add in Gems\nFROM logindotgov/build\nWORKDIR /idp\n\n# Copy system Gems into base container\nCOPY --from=build /usr/local/bundle /usr/local/bundle\n\n# Set alternate node module path and copy NPMs in - Avoids conflict\n# with local node_modules for dev\nENV NODE_PATH=/usr/local/node_modules\nCOPY --from=build /idp/node_modules /usr/local/node_modules\n\n# Install Chrome for integration tests\nRUN curl -f -sS https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - \\\n    && sh -c 'echo \"deb https://dl.google.com/linux/chrome/deb/ stable main\" >> /etc/apt/sources.list.d/google.list' \\\n    && apt-get update \\\n    && apt-get install --no-install-recommends -y google-chrome-stable \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Copy in whole source (minus items matched in .dockerignore)\nCOPY --chown=appuser:appuser . .\n\n# Up to this point we've been root, change to a lower priv. user\nUSER appuser\n\nEXPOSE 3000\nCMD [\"bundle\", \"exec\", \"rackup\", \"config.ru\", \"--host\", \"0.0.0.0\", \"--port\", \"3000\"]\n"
}