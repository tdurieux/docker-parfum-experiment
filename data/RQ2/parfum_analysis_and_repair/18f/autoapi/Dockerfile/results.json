{
  "startTime": 1674251316383,
  "endTime": 1674251317053,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 15,
        "columnEnd": 26
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 48
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM amancevice/pandas:0.19-python3\n\n# alpine base image is lacking some repositories, frequently causing\n# downtime when updating packages\n# RUN cp apk_repositories /etc/apk/repositories\nRUN apk update\n\nRUN apk add --no-cache gcc g++ make libffi-dev openssl-dev python3-dev build-base --update-cache\nRUN apk add --no-cache nodejs git postgresql postgresql-dev\nRUN mkdir /ve\nRUN pyvenv --system-site-packages /ve/std\n\nCOPY requirements.txt /\n\nRUN pip install --no-cache-dir -r /requirements.txt\n\n# http://bitjudo.com/blog/2014/03/13/building-efficient-dockerfiles-node-dot-js/\nCOPY package.json /tmp/package.json\nRUN cd /tmp && npm install && npm cache clean --force;\nRUN mkdir -p /autoapi && cp -a /tmp/node_modules /autoapi/\n\nCOPY . /autoapi\n\nWORKDIR /autoapi\nCMD /autoapi/run_in_docker.sh\n"
}