{
  "startTime": 1674250332758,
  "endTime": 1674250334314,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 8,
        "columnStart": 9,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 8,
        "columnStart": 9,
        "columnEnd": 32
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 23
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:20.04\n\nRUN apt-get update \\\n      && apt-get install --no-install-recommends -qy \\\n      apt-transport-https \\\n      ca-certificates \\\n      curl \\\n      gnupg \\\n      software-properties-common \\\n      && curl -fL https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - \\\n      && apt-add-repository -y 'deb http://apt.llvm.org/focal/ llvm-toolchain-focal main' \\\n      && apt-get update && rm -rf /var/lib/apt/lists/*;\nRUN apt-get install --no-install-recommends -qy \\\n      ccache \\\n      clang++-10 \\\n      clang-10 \\\n      clang-format-10 \\\n      clang-tidy-10 \\\n      cmake \\\n      g++-9 \\\n      gcc-9 \\\n      git \\\n      gosu \\\n      libfmt-dev \\\n      libopenmpi-dev \\\n      llvm-10-dev \\\n      python3-pip \\\n      python-is-python3 \\\n      && update-alternatives --verbose --install /usr/bin/gcc gcc /usr/bin/gcc-9 90 \\\n      && update-alternatives --verbose --install /usr/bin/g++ g++ /usr/bin/g++-9 90 \\\n      && update-alternatives --verbose --install /usr/bin/clang clang /usr/bin/clang-10 90 \\\n      && update-alternatives --verbose --install /usr/bin/clang++ clang++ /usr/bin/clang++-10 90 \\\n      && rm -rf /var/lib/apt/lists/*\nRUN pip3 install --upgrade --no-cache-dir pip setuptools \\\n      && pip3 install --no-cache-dir conan==1.24\nRUN conan profile new --detect --force default \\\n    && conan profile update settings.compiler.libcxx=libstdc++11 default \\\n    && conan remote add kmaragon https://api.bintray.com/conan/kmaragon/conan\n\n# Make it a little more convenient when USER is not root\nRUN find /root -type f -print0 | xargs -0 chmod 666 \\\n      && find /root -type d -print0 | xargs -0 chmod 777\nRUN echo \"export PS1='\\\\W$ '\" >> /root/.bashrc\nENV HOME=/root\n# Yes, allow anyone to run as root with gosu\nRUN chmod gu+s `which gosu`\n\nVOLUME /root/.conan/data\nVOLUME /root/.ccache\nVOLUME /source\nWORKDIR /source\n"
}