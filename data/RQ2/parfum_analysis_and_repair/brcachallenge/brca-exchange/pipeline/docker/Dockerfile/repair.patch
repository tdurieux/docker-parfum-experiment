diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/brcachallenge/brca-exchange/pipeline/docker/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/brcachallenge/brca-exchange/pipeline/docker/Dockerfile/repaired.Dockerfile
index ac01e00..0b59127 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/brcachallenge/brca-exchange/pipeline/docker/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/brcachallenge/brca-exchange/pipeline/docker/Dockerfile/repaired.Dockerfile
@@ -2,7 +2,7 @@ FROM python:3.8-buster
 
 RUN chmod 1777 /tmp
 
-RUN apt-get update && apt-get install -y \
+RUN apt-get update && apt-get install --no-install-recommends -y \
     curl \
     git \
     libmariadb-dev-compat \
@@ -19,7 +19,7 @@ RUN apt-get update && apt-get install -y \
     vim \
     wget \
     zlib1g-dev \
-    netcat
+    netcat && rm -rf /var/lib/apt/lists/*;
 
 # Get the Docker binary
 RUN curl -fsSL get.docker.com -o get-docker.sh \
@@ -31,22 +31,22 @@ COPY pipeline/requirements.txt .
 COPY test-requirements.txt .
 
 # pip 20.3+ uses strict dependency resolver that causes biocommons/bioutils and hgvs/ipython errors
-RUN pip install pip==20.2
+RUN pip install --no-cache-dir pip==20.2
 
 # install numpy first to avoid issues with bio python and bx-python (see also https://github.com/LUMC/vep2lovd/issues/1)
-RUN pip install $(grep numpy requirements.txt)
+RUN pip install --no-cache-dir $(grep numpy requirements.txt)
 
-RUN pip install $(grep -i cython requirements.txt)
-RUN pip install -r requirements.txt -r test-requirements.txt
+RUN pip install --no-cache-dir $(grep -i cython requirements.txt)
+RUN pip install --no-cache-dir -r requirements.txt -r
 
 # install vcf tools
 RUN wget https://github.com/vcftools/vcftools/releases/download/v0.1.16/vcftools-0.1.16.tar.gz
-RUN tar zxf vcftools*.tar.gz
-RUN cd vcftools* && ./configure && make && make install && cd .. && rm -r vcftools*
+RUN tar zxf vcftools*.tar.gz && rm vcftools*.tar.gz
+RUN cd vcftools* && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" && make && make install && cd .. && rm -r vcftools*
 
 # install tabix
 RUN wget https://downloads.sourceforge.net/project/samtools/tabix/tabix-0.2.6.tar.bz2
-RUN tar jxf tabix*.tar.bz2
+RUN tar jxf tabix*.tar.bz2 && rm tabix*.tar.bz2
 RUN cd tabix* && make && cp tabix /usr/local/bin && cd .. && rm -r tabix*
 
 ARG res=/files/resources