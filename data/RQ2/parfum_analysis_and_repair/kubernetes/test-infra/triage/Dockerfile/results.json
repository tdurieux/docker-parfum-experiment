{
  "startTime": 1674250669425,
  "endTime": 1674250670507,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 50
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright 2020 The Kubernetes Authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# This Dockerfile uses multi-stage builds. The first stage builds Triage and gathers the Google\n# Cloud SDK, and the resulting files are then used in the second stage.\n\n# Stage 1\nFROM golang:1.18 AS build\n\n# Install the Google Cloud SDK\nRUN curl -f -o installer https://sdk.cloud.google.com \\\n    && bash installer --disable-prompts --install-dir=/ \\\n    && rm installer\n\n# Build Triage\nCOPY . /test-infra/triage\nWORKDIR /test-infra/triage\nRUN env GOOS=linux \\\n         CGO_ENABLED=0 \\\n         GO111MODULE=on \\\n         GOPROXY=https://proxy.golang.org \\\n         GOSUMDB=sum.golang.org \\\n         go build -v -o triage ./main.go\n\n\n# Stage 2\nFROM alpine:3.12.0\n\n# Google Cloud SDK requires python 2.7.9+ (https://cloud.google.com/python/setup#installing_the_cloud_sdk).\n# update_summaries.sh requires bash.\nRUN apk add --no-cache \\\n    python2 \\\n    bash\n\n# Copy the Google Cloud SDK and link the binaries\nCOPY --from=build /google-cloud-sdk/ /google-cloud-sdk/\nRUN ln -s /google-cloud-sdk/bin/* /bin/\n\n# Copy over the triage binary and shell script that orchestrates everything\nCOPY --from=build /test-infra/triage/triage /\nCOPY --from=build /test-infra/triage/update_summaries.sh /\n\nENTRYPOINT [\"timeout\", \"10800\", \"/update_summaries.sh\"]\n"
}