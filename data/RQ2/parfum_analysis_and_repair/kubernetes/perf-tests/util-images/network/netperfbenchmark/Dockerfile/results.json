{
  "startTime": 1674248999346,
  "endTime": 1674249000009,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 71
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 103
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 22,
        "columnEnd": 77
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 33,
        "columnEnd": 44
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 75,
        "columnEnd": 108
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 107,
        "columnEnd": 144
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 7,
        "columnEnd": 47
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM golang:1.15.2 AS build-env\nARG gopkg=k8s.io/perf-tests/util-images/network/netperfbenchmark\n\nADD [\".\", \"/go/src/$gopkg\"]\n\n#ENV GO111MODULE on\nWORKDIR /go/src/$gopkg\nRUN CGO_ENABLED=0 go build -o /workspace/network ./cmd\n\nFROM  golang:1.15.2-alpine3.12\nENV LD_LIBRARY_PATH=/usr/local/lib\n\nRUN apk update \\\n    && apk add --no-cache curl wget net-tools gcc g++ make \\\n    && rm -rf /var/lib/apt/lists/*\nRUN mkdir -p /tmp\n\nRUN curl -f -LO https://iperf.fr/download/source/iperf-2.0.9-source.tar.gz && tar zxf iperf-2.0.9-source.tar.gz && rm iperf-2.0.9-source.tar.gz\nRUN rm -rf iperf-2.0.9-source.tar.gz\nRUN cd iperf-2.0.9 && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/local --bindir /usr/local/bin && make && make install\n\nENV SIEGE_VERSION=3.1.4\n\nRUN curl -f -LO http://download.joedog.org/siege/siege-$SIEGE_VERSION.tar.gz > siege-$SIEGE_VERSION.tar.gz && tar -xf siege-${SIEGE_VERSION}.tar.gz && rm siege-${SIEGE_VERSION}.tar.gz\nRUN rm -rf siege-${SIEGE_VERSION}.tar.gz\nRUN cd siege-${SIEGE_VERSION} && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make install\n\nWORKDIR /workspace\nCOPY --from=build-env /workspace/network .\nENTRYPOINT [\"/workspace/network\"]\n"
}