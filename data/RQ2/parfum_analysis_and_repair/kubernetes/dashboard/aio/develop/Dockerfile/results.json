{
  "startTime": 1674256268554,
  "endTime": 1674256269394,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 108
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 4,
        "columnEnd": 174
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 73,
        "columnEnd": 149
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 26,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 6
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 26,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 6
      }
    }
  ],
  "repairedDockerfile": "# Copyright 2017 The Kubernetes Authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# This is a Dockerfile for running and building Kubernetes dashboard\n# It installs all deps in the container and adds the dashboard source\n# This way it abstracts all required build tools away\n\n# golang is based on debian:jessie\n# Specify version to clarify which version we use.\nFROM golang:1.17.0-bullseye\n\n# Install Node.js. Go is already installed.\n# A small tweak, apt-get update is already run by the nodejs setup script,\n# so there's no need to run it again.\nRUN curl -f -sL https://deb.nodesource.com/setup_16.x | bash - \\\n\t&& apt-get install -y --no-install-recommends \\\n\tnodejs \\\n\tpatch \\\n\tchromium \\\n\tbc \\\n\tsudo \\\n\tgit \\\n\tgosu \\\n\tnano \\\n\tless \\\n\txvfb \\\n\tlibgtk-3-0 \\\n\tlibgconf-2-4 \\\n\tbzip2 \\\n\t&& rm -rf /var/lib/apt/lists/* \\\n\t&& apt-get clean\n\nENV GIT_EDITOR=nano\n\n# Install firefox from Mozilla binaries\nRUN mkdir -p /usr/local/lib/firefox\nRUN wget \"https://download.mozilla.org/?product=firefox-latest-ssl&os=linux64&lang=en-US\" -O /tmp/firefox.tar.bz2\nRUN tar -xjf /tmp/firefox.tar.bz2 -C /usr/local/lib && rm /tmp/firefox.tar.bz2\nRUN ln -s /usr/local/lib/firefox/firefox /usr/local/bin/firefox\n\n# Set environment variable for JavaScript tests.\nENV CHROME_BIN=/usr/bin/chromium\n\n# Set environment variable for terminal\nENV TERM=xterm\n\n# Add ${GOPATH}/bin into ${PATH}\nENV PATH=${GOPATH}/bin:${PATH}\n\n# For testing, etc., to know if this environment is on container.\nENV K8S_DASHBOARD_CONTAINER=TRUE\n\n# Suppress angular analytics dialog\nENV NG_CLI_ANALYTICS=false\n\n# Download a statically linked docker client,\n# so the container is able to build images on the host.\nRUN curl -f -sSL https://download.docker.com/linux/static/stable/x86_64/docker-18.06.1-ce.tgz > /tmp/docker.tgz && \\\n\tcd /tmp/ && \\\n\ttar xzvf docker.tgz && \\\n\trm docker.tgz && \\\n\tmv /tmp/docker/docker /usr/bin/docker && \\\n\trm -rf /tmp/docker/ && \\\n\tchmod +x /usr/bin/docker\n\n# Install kubectl\nRUN curl -f -LO https://storage.googleapis.com/kubernetes-release/release/$( curl -f -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl\nRUN chmod +x ./kubectl\nRUN mv ./kubectl /usr/local/bin/kubectl\n\n# Install golangci for ckecking or fixing go format.\n# `npm ci` installs golangci, but this installation is needed\n# for running `npm run check` singlely, like\n# `aio/develop/run-npm-on-container.sh run check`.\nRUN curl -sfL https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | sh -s -- -b $(go env GOPATH)/bin v1.41.1\n\n# Enable go mod.\nENV GO111MODULE=on\n\n# Install delve for debuging go files.\nRUN go install github.com/go-delve/delve/cmd/dlv@v1.7.1\n\n# Set GOPROXY to ensure download modules\nENV GOPROXY=https://proxy.golang.org\n\n# Set NODE_OPTIONS to increase NodeJS heap size\nENV NODE_OPTIONS=--max-old-space-size=8192\n\n# To install go modules by user, add write access to $GOPATH (default: 755)\n# `chmod +w` does not work, so set 777.\nRUN chmod 777 -R /go\n\n# Volume for source code\nVOLUME [\"/go/src/github.com/kubernetes/dashboard\"]\n\n# Mount point for kubeconfig\nRUN mkdir -p /home/user/.kube\n\n# Current directory is always dashboard source directory.\nWORKDIR /go/src/github.com/kubernetes/dashboard\n\n# Expose port for frontend, backend and remote debuging\nEXPOSE 8080 8443 9090 2345\n\n# Run gosu command in container.\nCMD ./aio/develop/gosu-command.sh\n"
}