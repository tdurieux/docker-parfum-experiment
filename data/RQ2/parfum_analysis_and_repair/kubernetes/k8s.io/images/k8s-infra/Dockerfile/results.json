{
  "startTime": 1674246880370,
  "endTime": 1674246886044,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 11,
        "columnEnd": 69
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 87,
        "lineEnd": 87,
        "columnStart": 11,
        "columnEnd": 77
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 133,
        "lineEnd": 133,
        "columnStart": 11,
        "columnEnd": 25
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 11,
        "columnEnd": 54
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright 2021 The Kubernetes Authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# Intended to hold all dependencies needed to build, test and run all tools\n# used by sig-k8s-infra. With sufficient credentials mounted in, should be\n# capable of running those tools to test and deploy all kubernetes project\n# infrastructure managed by sig-k8s-infra.\n\n# base image\nFROM debian:bullseye\n\n# build args\n\n# unless otherwise stated, versions were arbitrarily chosen to whatever was\n# latest at the time, and package-based installs from debian-maintained repos\n# are not pinned to a specific version\n\nARG CONFTEST_VERSION=0.30.0\nARG GCLOUD_VERSION=376.0.0\nARG GH_VERSION=2.5.2\nARG GO_VERSION=1.17.8\nARG JQ_VERSION=1.6\n# K8S_VERSION should be within +/- 1 minor version of our clusters\n# ref: https://kubernetes.io/releases/version-skew-policy/#kubectl\nARG K8S_VERSION=1.21.10\nARG OPA_VERSION=0.38.0\nARG SHELLCHECK_VERSION=0.8.0\nARG TFSWITCH_VERSION=0.13.1218\n\n# build everything in /build\nWORKDIR /build\n\n# multiple ENV assignments in one layer\n# - put $(go env GOROOT)/bin on PATH\n# - disable interactive prompts for gcloud commands (use defaults, or error if unable)\nENV PATH=/usr/local/go/bin:${PATH} \\\n    CLOUDSDK_CORE_DISABLE_PROMPTS=1\n\n# used to pip install: yamllint, yq\nCOPY requirements.txt .\n\n# use bash for pipefail and pushd/popd\nSHELL [\"/bin/bash\", \"-c\"]\nRUN set -o errexit nounset pipefail \\\n    && echo \"Installing Packages ...\" \\\n        && apt-get update \\\n        && apt-get install -y --no-install-recommends \\\n            curl \\\n            gcc \\\n            git \\\n            gnupg2 \\\n            make \\\n            libc6-dev \\\n            python3 \\\n            python3-pip \\\n            xz-utils \\\n    && echo \"Installing python tools ...\" \\\n        && pip3 install --no-cache-dir --requirement requirements.txt \\\n    && echo \"Installing go ...\" \\\n        && export GO_TARBALL=\"go${GO_VERSION}.linux-amd64.tar.gz\" \\\n        && curl -fsSL \"https://golang.org/dl/${GO_TARBALL}\" --output tarball.tar.gz \\\n        && tar xf tarball.tar.gz -C /usr/local \\\n        && rm tarball.tar.gz \\\n    && echo \"Installing Google Cloud SDK ...\" \\\n        && echo \"deb [signed-by=/usr/share/keyrings/cloud.google.gpg] http://packages.cloud.google.com/apt cloud-sdk main\" \\\n            | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list \\\n        && curl -f https://packages.cloud.google.com/apt/doc/apt-key.gpg \\\n            | apt-key --keyring /usr/share/keyrings/cloud.google.gpg add - \\\n        && apt-get update -o Dir::Etc::sourcelist=\"sources.list.d/google-cloud-sdk.list\" \\\n            -o Dir::Etc::sourceparts=\"-\" -o APT::Get::List-Cleanup=\"0\" \\\n        && apt-get install -y --no-install-recommends \\\n            \"google-cloud-sdk=${GCLOUD_VERSION}-0\" \\\n            python3-crcmod \\\n    && echo \"Installing gh ...\" \\\n        && echo \"deb [signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main\" \\\n            | tee -a /etc/apt/sources.list.d/github-cli.list \\\n        && curl -f https://cli.github.com/packages/githubcli-archive-keyring.gpg \\\n            | apt-key --keyring /usr/share/keyrings/githubcli-archive-keyring.gpg add - \\\n        && apt-get update -o Dir::Etc::sourcelist=\"sources.list.d/github-cli.list\" \\\n            -o Dir::Etc::sourceparts=\"-\" -o APT::Get::List-Cleanup=\"0\" \\\n        && apt-get install -y --no-install-recommends \\\n            \"gh=${GH_VERSION}\" \\\n    && echo \"Installing conftest ...\" \\\n        && export BASE_URL=\"https://github.com/open-policy-agent/conftest/releases/download\" \\\n        && export URL=\"${BASE_URL}/v${CONFTEST_VERSION}/conftest_${CONFTEST_VERSION}_Linux_x86_64.tar.gz\" \\\n        && curl -fsSL \"${URL}\" --output tarball.tar.gz \\\n        && tar xf tarball.tar.gz -C /usr/local/bin \\\n        && rm tarball.tar.gz \\\n    && echo \"Installing jq ...\" \\\n        && curl -fsSL \"https://github.com/stedolan/jq/releases/download/jq-${JQ_VERSION}/jq-linux64\" --output /usr/local/bin/jq \\\n        && chmod +x /usr/local/bin/jq \\\n    && echo \"Installing kubectl ...\" \\\n        && curl -fsSL \"https://dl.k8s.io/release/v${K8S_VERSION}/bin/linux/amd64/kubectl\" --output /usr/local/bin/kubectl \\\n        && chmod +x /usr/local/bin/kubectl \\\n    && echo \"Installing opa ...\" \\\n        && curl -fsSL \"https://openpolicyagent.org/downloads/v${OPA_VERSION}/opa_linux_amd64\" --output /usr/local/bin/opa \\\n        && chmod +x /usr/local/bin/opa \\\n    && echo \"Installing shellcheck ...\" \\\n        && export BASE_URL=\"https://github.com/koalaman/shellcheck/releases/download\" \\\n        && export URL=\"${BASE_URL}/v${SHELLCHECK_VERSION}/shellcheck-v${SHELLCHECK_VERSION}.linux.x86_64.tar.xz\" \\\n        && curl -fsSL \"${URL}\" --output tarball.tar.xz \\\n        && tar xf tarball.tar.xz -C /usr/local/bin --strip-components 1 \"shellcheck-v${SHELLCHECK_VERSION}/shellcheck\" \\\n        && rm tarball.tar.xz \\\n    && echo \"Installing tfswitch ...\" \\\n        && export BASE_URL=https://github.com/warrensbox/terraform-switcher/releases/download \\\n        && export URL=\"${BASE_URL}/${TFSWITCH_VERSION}/terraform-switcher_${TFSWITCH_VERSION}_linux_amd64.tar.gz\" \\\n        && curl -fsSL \"${URL}\" --output tarball.tar.gz \\\n        && tar xf tarball.tar.gz -C /usr/local/bin tfswitch \\\n        && rm tarball.tar.gz \\\n    && echo \"Installing terraform ...\" \\\n        && tfswitch --latest-stable=0.14 \\\n        && tfswitch --latest-stable=0.15 \\\n        && tfswitch --latest-stable=1.0 \\\n    && echo \"Installing pr-creator\" \\\n        && git clone --depth 1 https://github.com/kubernetes/test-infra \\\n        && pushd ./test-infra \\\n        && go build -o /usr/local/bin/pr-creator ./robots/pr-creator \\\n        && popd \\\n    && echo \"Outputting version info to confirm installation of expected tools ...\" \\\n        && apt list --installed         | tee apt-list.txt \\\n        && bq version                   | tee bq-version.txt \\\n        && conftest --version           | tee conftest-version.txt \\\n        && curl -f --version | tee curl-version.txt \\\n        && gcloud info                  | tee gcloud-info.txt \\\n        $$ git --version                | tee git-version.txt \\\n        && gh --version                 | tee gh-version.txt \\\n        && go version                   | tee go-version.txt \\\n        && gsutil --version             | tee gsutil-version.txt \\\n        && jq --version                 | tee jq-version.txt \\\n        && kubectl version --client     | tee kubectl-version.txtl \\\n        && opa version                  | tee opa-version.txt \\\n        && pr-creator --help            | tee pr-creator-help.txt \\\n        && git -C test-infra log -n1    | tee pr-creator-version.txt \\\n        && python3 --version            | tee python-version.txt \\\n        && shellcheck --version         | tee shellcheck-version.txt \\\n        && terraform --version          | tee terraform-version.txt \\\n        && tfswitch --version           | tee tfswitch-version.txt \\\n        && yamllint --version           | tee yamllint-verison.txt \\\n        && yq --version                 | tee yq-version.txt \\\n    && echo \"Cleaning up ...\" \\\n        && rm -rf /var/lib/apt/lists/* \\\n        && rm -rf /root/.cache \\\n        && rm -rf /root/go/pkg \\\n        && rm -rf ./test-infra\n\n\n# run everything in /workspace\nWORKDIR /workspace\n\nCMD /bin/bash\n"
}