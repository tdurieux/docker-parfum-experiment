{
  "startTime": 1674246751706,
  "endTime": 1674246752982,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 83,
        "lineEnd": 83,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 11,
        "columnEnd": 40
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 11,
        "columnEnd": 40
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 11,
        "columnEnd": 82
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# note: [8 Protips to Start Killing It When Dockerizing Node.js](https://nodesource.com/blog/8-protips-to-start-killing-it-when-dockerizing-node-js/)\n# TODO: if I can fix memory usage by yarn switch back to `flyctl scale memory 256` ? [ref](https://community.fly.io/t/using-yarn-2-causes-enomem/999)\n# check for namespacing https://github.com/puppeteer/puppeteer/issues/290#issuecomment-322885826\n# check for namespacing https://stackoverflow.com/questions/39215025/how-to-check-if-linux-user-namespaces-are-supported-by-current-os-kernel\n# # RUN sysctl -w kernel.unprivileged_userns_clone=1\n# from https://superuser.com/questions/1094597/enable-user-namespaces-in-debian-kernel#comment2256770_1122977\n# # RUN sysctl -w kernel.userns_restrict=0\n# # from https://unix.stackexchange.com/a/303214/441072\n# # RUN echo 0 > /proc/sys/kernel/userns_restrict\n# from https://unix.stackexchange.com/questions/303213/how-to-enable-user-namespaces-in-the-kernel-for-unprivileged-unshare#comment814829_303214\n# # RUN echo 'kernel.unprivileged_userns_clone=1' > /etc/sysctl.d/userns.conf\n# https://unix.stackexchange.com/a/602409/441072\n# RUN echo \"kernel.unprivileged_userns_clone=1\" >> /etc/sysctl.conf\n# RUN /app/namespacing.sh\n\n# BASE\nFROM node:16-bullseye-slim as base\n\nARG COMMIT_SHA\n\n# update linux deps\nRUN apt-get update \\\n        && apt-get install --no-install-recommends -y -q openssl \\\n        # install deps needed for [skia-canvas](https://github.com/samizdatco/skia-canvas#running-in-docker)\n        && apt-get install -y -q --no-install-recommends libfontconfig1 fontconfig && rm -rf /var/lib/apt/lists/*;\n\n# RUN wget https://github.com/samuelngs/apple-emoji-linux/releases/download/ios-15.4/AppleColorEmoji.ttf\n# RUN echo \"__FONTS BEFORE\" && ls -lAFh ~/.local/share/fonts\n# RUN mv AppleColorEmoji.ttf ~/.local/share/fonts\n# RUN echo \"__FONTS AFTER\" && ls -lAFh ~/.local/share/fonts\n\n# https://github.com/eosrei/twemoji-color-font\n# https://linoxide.com/install-emojione-color-svginot-font-ubuntu/\n# RUN fc-cache -vfrs\n# RUN apt-get install -y -q \\\n#         # https://github.com/eosrei/twemoji-color-font\n# ttf-bitstream-vera \\\n# fonts-liberation2 fonts-noto-color-emoji \\\n#         # https://itsfoss.com/add-apt-repository-command-not-found/\n#         software-properties-common\n# RUN fc-cache -vfrs\n# && apt-add-repository ppa:eosrei/fonts \\\n# && apt-get update \\\n# && apt-get install -y fonts-twemoji-svginot\n# RUN apt-get install fonts-noto-core fonts-noto-mono fonts-noto-extra fonts-noto-ui-core fonts-noto-color-emoji\n\n# 1. Download the latest version\n# RUN wget https://github.com/eosrei/twemoji-color-font/releases/download/v13.1.0/TwitterColorEmoji-SVGinOT-Linux-13.1.0.tar.gz\n# # 2. Uncompress the file\n# RUN tar zxf TwitterColorEmoji-SVGinOT-Linux-13.1.0.tar.gz\n# # 3. Run the installer\n# RUN cd TwitterColorEmoji-SVGinOT-Linux-13.1.0\n# RUN ./install.sh\n\n# DEPS - Install all node_modules, including dev dependencies\nFROM base as deps\n\nARG COMMIT_SHA\n\nRUN mkdir -p /home/node/app/node_modules && chown -R node:node /home/node/app\nWORKDIR /home/node/app\n\nADD package.json yarn.lock .yarnrc.yml ./\n# note: ADD copies the contents of a folder instead of the folder 🤷‍♂️ [SO](https://stackoverflow.com/a/54616645/3484824)\nCOPY .yarn .yarn\n# keeping because I using Puppeteer only locally at the moment\nENV PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true\n# RUN du -sh * | sort -h\nRUN yarn install && yarn cache clean;\n# RUN du -sh * | sort -h\n\n# PRODUCTION-DEPS - Setup production node_modules\nFROM base as production-deps\n\nARG COMMIT_SHA\n\nRUN mkdir -p /home/node/app/node_modules && chown -R node:node /home/node/app\nWORKDIR /home/node/app\n\nCOPY --from=deps /home/node/app/node_modules /home/node/app/node_modules\nCOPY --from=deps /home/node/app/.yarn /home/node/app/.yarn\nADD package.json yarn.lock .yarnrc.yml /home/node/app/\n# RUN du -sh * | sort -h\nRUN yarn workspaces focus --all --production && yarn cache clean;\n# RUN du -sh * | sort -h\n\n# BUILD the app\nFROM base as build\n\nARG COMMIT_SHA\n\n# todo: KCD sets it only in last step?\nENV NODE_ENV=production\n\nRUN mkdir -p /home/node/app/node_modules && chown -R node:node /home/node/app\nWORKDIR /home/node/app\nUSER node\n\n# note: COPY --chown [found at DO](https://www.digitalocean.com/community/tutorials/how-to-build-a-node-js-application-with-docker)\nCOPY --from=deps --chown=node:node /home/node/app/node_modules /home/node/app/node_modules\n# COPY --from=deps ./package.json ./package.json\n# COPY --from=deps ./.yarn ./.yarn\n# COPY --from=deps ./yarn.lock ./yarn.lock\n# COPY --from=deps ./.yarnrc.yml ./.yarnrc.yml\n\n# RUN du -sh * | sort -h\nADD --chown=node:node . .\n# RUN du -sh * | sort -h\nRUN yarn build\n\n# Finally, build the production image with minimal footprint\nFROM base\nRUN mkdir -p /home/node/app/node_modules && chown -R node:node /home/node/app\nWORKDIR /home/node/app\n\n# from https://github.com/puppeteer/puppeteer/blob/main/docs/troubleshooting.md#running-puppeteer-in-docker\nADD https://github.com/Yelp/dumb-init/releases/download/v1.2.5/dumb-init_1.2.5_x86_64 /usr/local/bin/dumb-init\nRUN chmod +x /usr/local/bin/dumb-init\nENTRYPOINT [\"dumb-init\", \"--\"]\nRUN echo \"kernel.unprivileged_userns_clone=1\" >> /etc/sysctl.conf\n# todo: get `USER node` working\n\nARG COMMIT_SHA\nENV COMMIT_SHA=$COMMIT_SHA\n# ENV CSRF_KEY=$CSRF_KEY\n\nENV NODE_ENV=production\nENV OS_ENV=container\n\nCOPY --chown=node:node --from=production-deps /home/node/app/node_modules /home/node/app/node_modules\nCOPY --chown=node:node --from=build /home/node/app/build /home/node/app/build\nCOPY --chown=node:node --from=build /home/node/app/public /home/node/app/public\n# RUN ls -lAFh\n# RUN du -sh * | sort -h\nADD --chown=node:node . .\n# RUN ls -lAFh\n# RUN du -sh * | sort -h\n\nUSER node\n\nCMD [\"./node_modules/.bin/remix-serve\", \"build\"]"
}