{
  "startTime": 1674218610451,
  "endTime": 1674218612215,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 1,
        "columnEnd": 34
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 109,
        "columnEnd": 142
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 32,
        "columnEnd": 100
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 32,
        "columnEnd": 100
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright (c) Facebook, Inc. and its affiliates.\n# This file defines a container that compiles the C++ examples of detectron2.\n# See docker/README.md for usage.\n\n# Depends on the image produced by \"./Dockerfile\"\nFROM detectron2:v0\n\nUSER appuser\nENV HOME=/home/appuser\nWORKDIR $HOME\n\nENV CMAKE_PREFIX_PATH=$HOME/.local/lib/python3.8/site-packages/torch/\n\nRUN sudo apt-get update && sudo apt-get install --no-install-recommends libgflags-dev libgoogle-glog-dev libopencv-dev --yes && rm -rf /var/lib/apt/lists/*;\nRUN pip install --no-cache-dir mkl-include\n\n# Install the correct version of protobuf:\nRUN wget https://github.com/protocolbuffers/protobuf/releases/download/v3.11.4/protobuf-cpp-3.11.4.tar.gz && tar xf protobuf-cpp-3.11.4.tar.gz && rm protobuf-cpp-3.11.4.tar.gz\nRUN export CXXFLAGS=-D_GLIBCXX_USE_CXX11_ABI=$(python3 -c 'import torch; print(int(torch.compiled_with_cxx11_abi()))'); \\\n\tcd protobuf-3.11.4 && \\\n\t./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=$HOME/.local && make && make install\n\n# install libtorchvision\nRUN git clone --branch v0.10.0 https://github.com/pytorch/vision/\nRUN mkdir vision/build && cd vision/build && \\\n\tcmake .. -DCMAKE_INSTALL_PREFIX=$HOME/.local -DCMAKE_BUILD_TYPE=Release -DWITH_CUDA=on -DTORCH_CUDA_ARCH_LIST=$TORCH_CUDA_ARCH_LIST && \\\n\tmake && make install\n\n# make our installation take effect\nENV CPATH=$HOME/.local/include \\\n\t  LIBRARY_PATH=$HOME/.local/lib \\\n\t  LD_LIBRARY_PATH=$HOME/.local/lib\n\n\n# build C++ examples of detectron2\nRUN cd detectron2_repo/tools/deploy && mkdir build && cd build && \\\n\t cmake -DTORCH_CUDA_ARCH_LIST=$TORCH_CUDA_ARCH_LIST .. && make\n# binaries will be available under tools/deploy/build\n"
}