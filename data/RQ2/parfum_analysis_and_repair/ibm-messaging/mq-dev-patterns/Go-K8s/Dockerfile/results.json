{
  "startTime": 1674250908125,
  "endTime": 1674250908805,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 4,
        "columnEnd": 34
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Â© Copyright IBM Corporation 2020\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n# http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nARG BASE_IMAGE=ubuntu:19.10\nFROM $BASE_IMAGE\n\nARG GOPATH_ARG=\"/go\"\n\nENV GOVERSION=1.13 \\\n    GOPATH=$GOPATH_ARG \\\n    ORG=\"github.com/ibm-messaging\"\n\n\n# Install the Go compiler and Git\nRUN export DEBIAN_FRONTEND=noninteractive \\\n  && bash -c 'source /etc/os-release; \\\n     echo \"deb http://archive.ubuntu.com/ubuntu/ ${UBUNTU_CODENAME} main restricted\" > /etc/apt/sources.list; \\\n     echo \"deb http://archive.ubuntu.com/ubuntu/ ${UBUNTU_CODENAME}-updates main restricted\" >> /etc/apt/sources.list; \\\n     echo \"deb http://archive.ubuntu.com/ubuntu/ ${UBUNTU_CODENAME}-backports main restricted universe\" >> /etc/apt/sources.list; \\\n     echo \"deb http://archive.ubuntu.com/ubuntu/ ${UBUNTU_CODENAME} universe\" >> /etc/apt/sources.list; \\\n     echo \"deb http://archive.ubuntu.com/ubuntu/ ${UBUNTU_CODENAME}-updates universe\" >> /etc/apt/sources.list;' \\\n  && apt-get update \\\n  && apt-get install -y --no-install-recommends \\\n    golang-${GOVERSION} \\\n    git \\\n    ca-certificates \\\n    curl \\\n    tar \\\n    bash \\\n    go-dep \\\n    build-essential \\\n    dos2unix \\\n  && rm -rf /var/lib/apt/lists/*\n\n# Create location for the git clone and MQ installation\nRUN mkdir -p $GOPATH/src $GOPATH/bin $GOPATH/pkg \\\n  && chmod -R 777 $GOPATH \\\n  && mkdir -p $GOPATH/src/$ORG \\\n  && mkdir -p /opt/mqm \\\n  && chmod a+rx /opt/mqm\n\n# Location of the downloadable MQ client package \\\nENV RDURL=\"https://public.dhe.ibm.com/ibmdl/export/pub/software/websphere/messaging/mqdev/redist\" \\\n    RDTAR=\"IBM-MQC-Redist-LinuxX64.tar.gz\" \\\n    VRMF=9.2.0.0\n\n# Install the MQ client from the Redistributable package. This also contains the\n# header files we need to compile against. Setup the subset of the package\n# we are going to keep - the genmqpkg.sh script removes unneeded parts\nENV genmqpkg_incnls=1 \\\n    genmqpkg_incsdk=1 \\\n    genmqpkg_inctls=1\n\nRUN cd /opt/mqm \\\n && curl -f -LO \"$RDURL/$VRMF-$RDTAR\" \\\n && tar -zxf ./*.tar.gz \\\n && rm -f ./*.tar.gz \\\n && bin/genmqpkg.sh -b /opt/mqm\n\n ###########\nWORKDIR /src\nCOPY . .\n\n# Insert the script that will do the build\nCOPY buildInDocker.sh $GOPATH\nRUN chmod 777 $GOPATH/buildInDocker.sh\n\n# Copy the rest of the source tree from this directory into the container\n# And make sure it's readable by the id that will run the compiles (not just root)\nENV  REPO=\"mq-golang\"\nCOPY . $GOPATH/src/$ORG/$REPO\nRUN chmod -R a+rx $GOPATH/src\n\n# Set the entrypoint to the script that will do the compilation\nRUN dos2unix $GOPATH/buildInDocker.sh\nRUN $GOPATH/buildInDocker.sh\n\nENTRYPOINT /src/receive"
}