{
  "startTime": 1674248025169,
  "endTime": 1674248026043,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 66
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 66
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 2,
        "lineEnd": 3,
        "columnStart": 22,
        "columnEnd": 83
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 66
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 90
      }
    }
  ],
  "repairedDockerfile": "FROM nvidia/cudagl:9.2-runtime-ubuntu18.04\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n    python3 python3-dev ipython3 module-init-tools curl build-essential python3-pip && rm -rf /var/lib/apt/lists/*;\n\n# OpenCV's runtime dependencies\nRUN apt-get install --no-install-recommends -y libglib2.0-0 libsm6 libxrender-dev libxext6 && rm -rf /var/lib/apt/lists/*;\n\nRUN pip3 install --no-cache-dir -U pip setuptools wheel\n\nRUN pip3 install --no-cache-dir numpy posix_ipc holodeck pytest opencv-python\n\nRUN adduser --disabled-password --gecos \"\" holodeckuser\n\nWORKDIR /home/holodeckuser/source/holodeck/\n\n# This should be COPY ../ but docker doesn't allow copying files outside the context\n# To copy the project files either run the build command in this directory with the\n# previous directory as the context: docker build -t pccl/holodeck[:tag] -f ./Dockerfile ..\n# or run it from the parent directory and provide the docekr file location\n# docker build -t pccl/holodeck[:tag] -f ./docker/Dockerfile .\nCOPY ./ .\n\nUSER holodeckuser\n\nCMD [\"/bin/bash\"]\n"
}