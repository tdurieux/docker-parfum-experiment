diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/adap/flower/examples/embedded_devices/base_images/cpu/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/adap/flower/examples/embedded_devices/base_images/cpu/Dockerfile/repaired.Dockerfile
index 2f68406..594c7b6 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/adap/flower/examples/embedded_devices/base_images/cpu/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/adap/flower/examples/embedded_devices/base_images/cpu/Dockerfile/repaired.Dockerfile
@@ -6,12 +6,12 @@ FROM arm64v8/ubuntu:18.04
 
 # basics
 RUN apt-get update
-RUN apt-get install libopenblas-dev libopenmpi-dev python3-pip cmake -y
+RUN apt-get install --no-install-recommends libopenblas-dev libopenmpi-dev python3-pip cmake -y && rm -rf /var/lib/apt/lists/*;
 
 # update pip
 RUN python3 -m pip install --upgrade pip
 
-RUN pip3 install Cython numpy
+RUN pip3 install --no-cache-dir Cython numpy
 
 RUN mkdir /app
 WORKDIR /app
@@ -19,15 +19,15 @@ WORKDIR /app
 ## Installing Pytorch + Torchvision
 RUN mkdir build
 WORKDIR build
-RUN apt-get install git bzip2 -y
-RUN pip3 install scikit-build ninja
+RUN apt-get install --no-install-recommends git bzip2 -y && rm -rf /var/lib/apt/lists/*;
+RUN pip3 install --no-cache-dir scikit-build ninja
 
 # PyTorch
 RUN git clone https://github.com/pytorch/pytorch.git
 WORKDIR pytorch
 RUN git checkout v1.6.0 && git submodule update --init --recursive
 ENV USE_NCCL=0 USE_QNNPACK=0 USE_PYTORCH_QNNPACK=0
-RUN pip3 install -r requirements.txt
+RUN pip3 install --no-cache-dir -r requirements.txt
 RUN python3 setup.py install
 
 # torchvision
@@ -36,7 +36,7 @@ RUN git clone https://github.com/pytorch/vision.git
 # checkout v0.7.0 (the one compatible with PyTorch 1.6)
 WORKDIR vision
 RUN git checkout v0.7.0 && git submodule update --recursive
-RUN apt-get install libavcodec-dev libavformat-dev libswscale-dev libjpeg8-dev zlib1g-dev -y
+RUN apt-get install --no-install-recommends libavcodec-dev libavformat-dev libswscale-dev libjpeg8-dev zlib1g-dev -y && rm -rf /var/lib/apt/lists/*;
 RUN python3 setup.py install
 
 WORKDIR /app