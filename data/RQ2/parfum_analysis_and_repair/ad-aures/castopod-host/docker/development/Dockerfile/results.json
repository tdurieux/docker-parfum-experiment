{
  "startTime": 1674250225313,
  "endTime": 1674250226177,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 7,
        "columnEnd": 33
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 7,
        "columnEnd": 58
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 7,
        "columnEnd": 59
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 27,
        "lineEnd": 45,
        "columnStart": 7,
        "columnEnd": 10
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "####################################################\n# Castopod development Docker file\n####################################################\n# ⚠️ NOT optimized for production\n# should be used only for development purposes\n#---------------------------------------------------\nFROM php:8.1-fpm\n\nLABEL maintainer=\"Yassine Doghri <yassine@doghri.fr>\"\n\nCOPY . /castopod\nWORKDIR /castopod\n\n# Install composer\nCOPY --from=composer:2 /usr/bin/composer /usr/bin/composer\n\n# Install server requirements\nRUN apt-get update \\\n    # gnupg to sign commits with gpg\n    && apt-get install --yes --no-install-recommends gnupg \\\n    # npm through the nodejs package\n    && curl -fsSL https://deb.nodesource.com/setup_16.x | bash - \\\n    && apt-get update \\\n    && apt-get install --yes --no-install-recommends nodejs \\\n    # update npm\n    && npm install --global npm@8 \\\n    && apt-get update \\\n    && apt-get install --yes --no-install-recommends \\\n    git \\\n    openssh-client \\\n    vim \\\n    # cron for scheduled tasks\n    cron \\\n    # unzip used by composer\n    unzip \\\n    # required libraries to install php extensions using\n    # https://github.com/mlocati/docker-php-extension-installer (included in php's docker image)\n    libicu-dev \\\n    libpng-dev \\\n    libwebp-dev \\\n    libjpeg-dev \\\n    libfreetype6-dev \\\n    zlib1g-dev \\\n    libzip-dev \\\n    # ffmpeg for video encoding\n    ffmpeg \\\n    # intl for Internationalization\n    && docker-php-ext-install intl  \\\n    && docker-php-ext-install zip \\\n    # gd for image processing\n    && docker-php-ext-configure gd --with-webp --with-jpeg --with-freetype \\\n    && docker-php-ext-install gd \\\n    && docker-php-ext-install exif \\\n    && docker-php-ext-enable exif \\\n    # redis extension for cache\n    && pecl install -o -f redis \\\n    && rm -rf /tmp/pear \\\n    && docker-php-ext-enable redis \\\n    # mysqli for database access\n    && docker-php-ext-install mysqli \\\n    && docker-php-ext-enable mysqli \\\n    # configure php \\\n    && echo \"file_uploads = On\\n\" \\\n         \"memory_limit = 512M\\n\" \\\n         \"upload_max_filesize = 500M\\n\" \\\n         \"post_max_size = 512M\\n\" \\\n         \"max_execution_time = 300\\n\" \\\n         > /usr/local/etc/php/conf.d/uploads.ini && npm cache clean --force; && rm -rf /var/lib/apt/lists/*;"
}