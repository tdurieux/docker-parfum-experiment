diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/m-reimer/wine-lol/contrib/docker/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/m-reimer/wine-lol/contrib/docker/Dockerfile/repaired.Dockerfile
index 9db0ab5..dd5ff73 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/m-reimer/wine-lol/contrib/docker/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/m-reimer/wine-lol/contrib/docker/Dockerfile/repaired.Dockerfile
@@ -4,7 +4,7 @@
 #   # This lets us cache this process
 FROM archlinux:latest as glibc-builder
 # Dependencies for building packages with makepkg
-RUN pacman -Sy --noconfirm --needed sudo base-devel 
+RUN pacman -Sy --noconfirm --needed sudo base-devel
 # Dependencies for wine-lol-glibc
 RUN pacman -Sy --noconfirm --needed git gd lib32-gcc-libs python
 # make makepkg multithreaded
@@ -19,14 +19,14 @@ RUN mkdir -p /glibc-builds && chmod 777 -R /glibc-builds
 #   # Environment preparation is done, build glibc
 # Build glibc
 RUN sudo -u nobody bash -c 'makepkg --syncdeps'
-# Copy to build folder 
+# Copy to build folder
 RUN cp ./wine-lol-glibc-*.pkg.tar.zst /glibc-builds/.
 
 # Second stage, building wine itself
 #   # Let's us copy glibc package from glibc-builder without rebuilding it, nice.
 FROM archlinux:latest as wine-builder
 # Dependencies for building packages with makepkg, again
-RUN pacman -Sy --noconfirm --needed sudo base-devel 
+RUN pacman -Sy --noconfirm --needed sudo base-devel
 # We need to enable lib32 and multiarch for the wine dependencies
 RUN echo '[multilib]' >> /etc/pacman.conf
 RUN echo 'Include = /etc/pacman.d/mirrorlist' >> /etc/pacman.conf
@@ -69,8 +69,8 @@ RUN mkdir -p /packages/wine /packages/glibc /binaries/wine /binaries/glibc
 COPY --from=glibc-builder /glibc-builds/ /packages/glibc/.
 COPY --from=wine-builder /wine-builds/ /packages/wine/.
 # Extract package tarfiles
-RUN cd /packages/glibc && tar -xf wine-lol-glibc-*.pkg.tar.zst
-RUN cd /packages/wine && tar -xf wine-lol-*.pkg.tar.zst
+RUN cd /packages/glibc && tar -xf wine-lol-glibc-*.pkg.tar.zst && rm wine-lol-glibc-*.pkg.tar.zst
+RUN cd /packages/wine && tar -xf wine-lol-*.pkg.tar.zst && rm wine-lol-*.pkg.tar.zst
 # Copy binaries to their own folder
 #   # Folder structure should look like this
 #   # /binaries > /wine > /opt > /wine-lol > ...
@@ -127,13 +127,13 @@ RUN cp /build_dir/*.deb /debian-packages/.
 # Create dir structs
 #RUN cd /build_dir/wine-lol && mkdir BUILD RPMS SOURCES SPECS SRPMS
 #RUN cd /build_dir/wine-lol-glibc && mkdir BUILD RPMS SOURCES SPECS SRPMS
-# Copy binaries over 
+# Copy binaries over
 #RUN mkdir -p /binaries/wine /binaries/glibc
 #COPY --from=extract-binaries /binaries/ /binaries/.
 #ADD contrib/docker/fedora/wine-lol-glibc.spec /build_dir/glibc/SPECS/.
 #ADD contrib/docker/fedora/wine-lol.spec /build_dir/wine/SPECS/.
 # Build packages
-#RUN cd /build_dir/wine-lol-glibc && rpmbuild -v -bb 
+#RUN cd /build_dir/wine-lol-glibc && rpmbuild -v -bb
 #RUN ls /build_dir/wine-lol-glibc/RPMS/
 
 # Temporary fpm packager for RPM packages