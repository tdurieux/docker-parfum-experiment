diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/chc/openspy-core-v2/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/chc/openspy-core-v2/Dockerfile/repaired.Dockerfile
index 0706a4c..845532e 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/chc/openspy-core-v2/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/chc/openspy-core-v2/Dockerfile/repaired.Dockerfile
@@ -1,49 +1,49 @@
 FROM ubuntu:16.04 AS build
 ENV DEBIAN_FRONTEND noninteractive
 RUN apt-get update && apt-get -y dist-upgrade
-RUN apt-get install -y build-essential cmake openssl libcurl4-openssl-dev libssl-dev curl
+RUN apt-get install --no-install-recommends -y build-essential cmake openssl libcurl4-openssl-dev libssl-dev curl && rm -rf /var/lib/apt/lists/*;
 
 RUN mkdir /root/fs-out
 
 WORKDIR /root/
 
-RUN curl -L http://www.digip.org/jansson/releases/jansson-2.11.tar.gz > jansson.tar.gz
+RUN curl -f -L https://www.digip.org/jansson/releases/jansson-2.11.tar.gz > jansson.tar.gz
 RUN mkdir jansson-src
-RUN tar -xvzf jansson.tar.gz --strip 1 -C jansson-src
+RUN tar -xvzf jansson.tar.gz --strip 1 -C jansson-src && rm jansson.tar.gz
 WORKDIR jansson-src
-RUN ./configure CFLAGS="-fPIC" --disable-shared
+RUN ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" CFLAGS="-fPIC" --disable-shared
 RUN make install DESTDIR=/root/fs-out
 
 WORKDIR /root/
-RUN curl -L https://www.openssl.org/source/openssl-1.0.2p.tar.gz > openssl.tar.gz
+RUN curl -f -L https://www.openssl.org/source/openssl-1.0.2p.tar.gz > openssl.tar.gz
 RUN mkdir openssl-src
-RUN tar -xvzf openssl.tar.gz --strip 1 -C openssl-src
+RUN tar -xvzf openssl.tar.gz --strip 1 -C openssl-src && rm openssl.tar.gz
 WORKDIR openssl-src
 RUN ./Configure linux-x86_64 --prefix=/usr/local enable-ssl3 enable-ssl2 enable-shared -fPIC
 RUN make install INSTALL_PREFIX=/root/fs-out
 
 WORKDIR /root/
-RUN curl -L https://curl.haxx.se/download/curl-7.61.1.tar.gz > curl.tar.gz
+RUN curl -f -L https://curl.haxx.se/download/curl-7.61.1.tar.gz > curl.tar.gz
 RUN mkdir curl-src
-RUN tar -xvzf curl.tar.gz --strip 1 -C curl-src
+RUN tar -xvzf curl.tar.gz --strip 1 -C curl-src && rm curl.tar.gz
 WORKDIR curl-src
-RUN ./configure --without-ssl --disable-shared
+RUN ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --without-ssl --disable-shared
 RUN make
 RUN make DESTDIR=/root/fs-out install
 
 WORKDIR /root/
-RUN curl -L https://codeload.github.com/alanxz/rabbitmq-c/tar.gz/v0.9.0 > rabbitmq.tar.gz
+RUN curl -f -L https://codeload.github.com/alanxz/rabbitmq-c/tar.gz/v0.9.0 > rabbitmq.tar.gz
 RUN mkdir rabbitmq-src rabbitmq-bin
-RUN tar -xvzf rabbitmq.tar.gz --strip 1 -C rabbitmq-src
+RUN tar -xvzf rabbitmq.tar.gz --strip 1 -C rabbitmq-src && rm rabbitmq.tar.gz
 WORKDIR rabbitmq-bin
 RUN cmake -DCMAKE_BUILD_TYPE="Release" -DENABLE_SSL_SUPPORT="OFF"  ../rabbitmq-src
 RUN make
 RUN make DESTDIR=/root/fs-out install
 
 WORKDIR /root/
-RUN curl -L http://github.com/zeux/pugixml/releases/download/v1.9/pugixml-1.9.tar.gz > pugixml.tar.gz
+RUN curl -f -L https://github.com/zeux/pugixml/releases/download/v1.9/pugixml-1.9.tar.gz > pugixml.tar.gz
 RUN mkdir pugixml-src pugixml-bin
-RUN tar -xvzf pugixml.tar.gz --strip 1 -C pugixml-src
+RUN tar -xvzf pugixml.tar.gz --strip 1 -C pugixml-src && rm pugixml.tar.gz
 WORKDIR pugixml-bin
 RUN cmake -DCMAKE_BUILD_TYPE="Release" ../pugixml-src
 RUN make
@@ -66,16 +66,16 @@ COPY docker-support/run.sh /root/fs-out/opt/openspy/run.sh
 RUN chmod a+x /root/fs-out/opt/openspy/run.sh
 
 WORKDIR /root/fs-out
-RUN tar -cvzf /fs-out.tar.gz *
+RUN tar -cvzf /fs-out.tar.gz * && rm /fs-out.tar.gz
 #RUN cp -rv /root/fs-out/* /
 
 
 FROM ubuntu:16.04
 ENV DEBIAN_FRONTEND noninteractive
 RUN apt-get update && apt-get -y dist-upgrade
-RUN apt-get install -y libjemalloc-dev
+RUN apt-get install --no-install-recommends -y libjemalloc-dev && rm -rf /var/lib/apt/lists/*;
 COPY --from=build /fs-out.tar.gz /root/fs.tar.gz
-RUN tar -xvzf /root/fs.tar.gz -C /
+RUN tar -xvzf /root/fs.tar.gz -C / && rm /root/fs.tar.gz
 RUN echo /opt/openspy/lib >> /etc/ld.so.conf.d/openspy.conf
 RUN echo /usr/local/lib/x86_64-linux-gnu  >> /etc/ld.so.conf.d/usr_libs.conf
 RUN echo LD_PRELOAD=/usr/lib/x86_64-linux-gnu/libjemalloc.so.1 >> /etc/environment