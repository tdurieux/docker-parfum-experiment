{
  "startTime": 1674249455131,
  "endTime": 1674249456083,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 86
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 81
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 74
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 89
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 101
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 86
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 101
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 55
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 89
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 89
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 89
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 4,
        "columnEnd": 38
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 113
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 4,
        "columnEnd": 62
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:16.04 AS build\nENV DEBIAN_FRONTEND noninteractive\nRUN apt-get update && apt-get -y dist-upgrade\nRUN apt-get install --no-install-recommends -y build-essential cmake openssl libcurl4-openssl-dev libssl-dev curl && rm -rf /var/lib/apt/lists/*;\n\nRUN mkdir /root/fs-out\n\nWORKDIR /root/\n\nRUN curl -f -L https://www.digip.org/jansson/releases/jansson-2.11.tar.gz > jansson.tar.gz\nRUN mkdir jansson-src\nRUN tar -xvzf jansson.tar.gz --strip 1 -C jansson-src && rm jansson.tar.gz\nWORKDIR jansson-src\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" CFLAGS=\"-fPIC\" --disable-shared\nRUN make install DESTDIR=/root/fs-out\n\nWORKDIR /root/\nRUN curl -f -L https://www.openssl.org/source/openssl-1.0.2p.tar.gz > openssl.tar.gz\nRUN mkdir openssl-src\nRUN tar -xvzf openssl.tar.gz --strip 1 -C openssl-src && rm openssl.tar.gz\nWORKDIR openssl-src\nRUN ./Configure linux-x86_64 --prefix=/usr/local enable-ssl3 enable-ssl2 enable-shared -fPIC\nRUN make install INSTALL_PREFIX=/root/fs-out\n\nWORKDIR /root/\nRUN curl -f -L https://curl.haxx.se/download/curl-7.61.1.tar.gz > curl.tar.gz\nRUN mkdir curl-src\nRUN tar -xvzf curl.tar.gz --strip 1 -C curl-src && rm curl.tar.gz\nWORKDIR curl-src\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --without-ssl --disable-shared\nRUN make\nRUN make DESTDIR=/root/fs-out install\n\nWORKDIR /root/\nRUN curl -f -L https://codeload.github.com/alanxz/rabbitmq-c/tar.gz/v0.9.0 > rabbitmq.tar.gz\nRUN mkdir rabbitmq-src rabbitmq-bin\nRUN tar -xvzf rabbitmq.tar.gz --strip 1 -C rabbitmq-src && rm rabbitmq.tar.gz\nWORKDIR rabbitmq-bin\nRUN cmake -DCMAKE_BUILD_TYPE=\"Release\" -DENABLE_SSL_SUPPORT=\"OFF\"  ../rabbitmq-src\nRUN make\nRUN make DESTDIR=/root/fs-out install\n\nWORKDIR /root/\nRUN curl -f -L https://github.com/zeux/pugixml/releases/download/v1.9/pugixml-1.9.tar.gz > pugixml.tar.gz\nRUN mkdir pugixml-src pugixml-bin\nRUN tar -xvzf pugixml.tar.gz --strip 1 -C pugixml-src && rm pugixml.tar.gz\nWORKDIR pugixml-bin\nRUN cmake -DCMAKE_BUILD_TYPE=\"Release\" ../pugixml-src\nRUN make\nRUN make DESTDIR=/root/fs-out install\n\nCOPY code /root/code\nRUN mkdir /root/os-bin /root/os-make\nWORKDIR /root/os-make\nrun cmake -DCMAKE_BINARY_DIR=\"/root/os-bin\" -DCMAKE_CXX_FLAGS=\"-I/root/fs-out/usr/local/include -L/root/fs-out/usr/local/lib -lz -L/root/fs-out/usr/local/lib/x86_64-linux-gnu/\"  -DBUILD_SHARED_LIBS:BOOL=ON -DCMAKE_BUILD_TYPE=\"Release\" ../code\nrun make\nRUN mkdir -p /root/fs-out/opt/openspy/bin /root/fs-out/opt/openspy/lib\nRUN mv /root/os-make/bin/* /root/fs-out/opt/openspy/bin\nRUN mv /root/os-make/lib/* /root/fs-out/opt/openspy/lib\nCOPY docker-support/openspy.xml /root/fs-out/opt/openspy/openspy.xml\nCOPY docker-support/x509.pem /root/fs-out/opt/openspy/x509.pem\nCOPY docker-support/rsa_priv.pem /root/fs-out/opt/openspy/rsa_priv.pem\nCOPY docker-support/password_key.pem /root/fs-out/opt/openspy/password_key.pem\nCOPY docker-support/tos_battlefield.txt /root/fs-out/opt/openspy/tos_battlefield.txt\nCOPY docker-support/run.sh /root/fs-out/opt/openspy/run.sh\nRUN chmod a+x /root/fs-out/opt/openspy/run.sh\n\nWORKDIR /root/fs-out\nRUN tar -cvzf /fs-out.tar.gz * && rm /fs-out.tar.gz\n#RUN cp -rv /root/fs-out/* /\n\n\nFROM ubuntu:16.04\nENV DEBIAN_FRONTEND noninteractive\nRUN apt-get update && apt-get -y dist-upgrade\nRUN apt-get install --no-install-recommends -y libjemalloc-dev && rm -rf /var/lib/apt/lists/*;\nCOPY --from=build /fs-out.tar.gz /root/fs.tar.gz\nRUN tar -xvzf /root/fs.tar.gz -C / && rm /root/fs.tar.gz\nRUN echo /opt/openspy/lib >> /etc/ld.so.conf.d/openspy.conf\nRUN echo /usr/local/lib/x86_64-linux-gnu  >> /etc/ld.so.conf.d/usr_libs.conf\nRUN echo LD_PRELOAD=/usr/lib/x86_64-linux-gnu/libjemalloc.so.1 >> /etc/environment\nRUN /sbin/ldconfig\nWORKDIR /opt/openspy\nCMD [\"/bin/bash\", \"/opt/openspy/run.sh\"]"
}