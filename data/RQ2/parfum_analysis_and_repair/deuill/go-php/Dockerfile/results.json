{
  "startTime": 1674250108154,
  "endTime": 1674250109074,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 22,
        "columnEnd": 78
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 22,
        "columnEnd": 78
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 22,
        "columnEnd": 80
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM golang:1.10-stretch\n\n# The full PHP version to target, i.e. \"7.1.10\".\nARG PHP_VERSION\n\n# Whether or not to build PHP as a static library.\nARG STATIC=false\n\n# Environment variables used across the build.\nENV PHP_URL=\"https://secure.php.net/get/php-${PHP_VERSION}.tar.xz/from/this/mirror\"\nENV PHP_BASE_DIR=\"/tmp/php\"\nENV PHP_SRC_DIR=\"${PHP_BASE_DIR}/src\"\n\n# Build variables.\nENV PHP_LDFLAGS=\"-Wl,-O1 -Wl,--hash-style=both -pie\"\nENV PHP_CFLAGS=\"-fstack-protector-strong -fpic -fpie -O2\"\nENV PHP_CPPFLAGS=\"${PHP_CFLAGS}\"\n\n# Fetch PHP source code. This step does not currently validate keys or checksums, as this process\n# will eventually transition to using the base `php` Docker images.\nENV FETCH_DEPS=\"ca-certificates wget\"\nRUN set -xe && \\\n    apt-get update && apt-get install -y --no-install-recommends ${FETCH_DEPS} && \\\n    mkdir -p ${PHP_BASE_DIR} && cd ${PHP_BASE_DIR} && \\\n    wget -O php.tar.xz ${PHP_URL} && \\\n    apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false ${FETCH_DEPS} && rm -rf /var/lib/apt/lists/*;\n\n# Build PHP library from source.\nENV BUILD_DEPS=\"build-essential file libpcre3-dev dpkg-dev libcurl4-openssl-dev libedit-dev libsqlite3-dev libssl1.0-dev libxml2-dev zlib1g-dev\"\nRUN set -xe && \\\n    apt-get update && apt-get install -y --no-install-recommends ${BUILD_DEPS}; rm -rf /var/lib/apt/lists/*; \\\n    export CFLAGS=\"${PHP_CFLAGS}\" CPPFLAGS=\"${PHP_CPPFLAGS}\" LDFLAGS=\"${PHP_LDFLAGS}\"; \\\n    arch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && multiarch=\"$(dpkg-architecture --query DEB_BUILD_MULTIARCH)\"; \\\n    [ \"x$STATIC\" = \"xfalse\" ] \\\n        && options=\"--enable-embed\" \\\n        || options=\"--enable-embed=static --enable-static\"; \\\n    [ ! -d /usr/include/curl ] && ln -sT \"/usr/include/$multiarch/curl\" /usr/local/include/curl; \\\n    mkdir -p ${PHP_SRC_DIR} && cd ${PHP_SRC_DIR} && \\\n    tar -xJf ${PHP_BASE_DIR}/php.tar.xz -C . --strip-components=1 && \\\n    ./configure \\\n        --prefix=/usr --build=\"$arch\" \\\n        --with-libdir=\"lib/$multiarch\" \\\n        --with-pcre-regex=/usr \\\n        --disable-cgi --disable-fpm \\\n        --enable-ftp --enable-mbstring \\\n        --with-curl --with-libedit --with-openssl --with-zlib \\\n        $options \\\n        && \\\n    make -j \"$(nproc)\" && \\\n    apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false ${BUILD_DEPS} && rm ${PHP_BASE_DIR}/php.tar.xz\n\n# Install runtime dependencies for testing, building packages etc, and clean up source.\nENV RUNTIME_DEPS=\"build-essential git curl libssl1.0 libpcre3-dev libcurl4-openssl-dev libedit-dev libxml2-dev zlib1g-dev\"\nRUN set -xe && \\\n    apt-get update && apt-get install -y --no-install-recommends ${RUNTIME_DEPS} && \\\n    cd ${PHP_SRC_DIR} && make -j \"$(nproc)\" PHP_SAPI=embed install-sapi install-headers && \\\n    cd / && rm -Rf ${PHP_BASE_DIR} ${PHP_SRC_DIR} && rm -rf /var/lib/apt/lists/*;\n\nENTRYPOINT [\"/bin/sh\", \"-c\"]\n"
}