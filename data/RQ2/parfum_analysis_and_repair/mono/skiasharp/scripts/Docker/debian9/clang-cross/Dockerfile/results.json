{
  "startTime": 1674248432340,
  "endTime": 1674248433543,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 7,
        "columnEnd": 57
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 7,
        "columnEnd": 161
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 7,
        "columnEnd": 153
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 7,
        "columnEnd": 28
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 7,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 7,
        "columnEnd": 93
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 7,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 44,
        "lineEnd": 47,
        "columnStart": 7,
        "columnEnd": 35
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM amd64/debian:9\n\n# Arguments:\n#   DOTNET_SDK_VERSION   - the version of dotnet for the Cake script        [ 3.1.412 | * ]\n#   CLANG_VERSION        - the version of clang/llvm tools                  [ 12 | * ]\n#   TOOLCHAIN_VERSION    - the version of the GCC toolchain                 [ 6 | * ]\n#   TOOLCHAIN_ARCH       - the architecture of the GCC toolchain            [ arm-linux-gnueabihf | aarch64-linux-gnu]\n#   TOOLCHAIN_ARCH_SHORT - the short form architecture of the GCC toolchain [ armhf | arm64 ]\n#   FONTCONFIG_VERSION   - the exact version of libfontconfig1 to use       [ 2.11.0-6.7+b1 | * ]\n#\n# To build a arm image:\n#   --build-arg TOOLCHAIN_ARCH=arm-linux-gnueabihf --build-arg TOOLCHAIN_ARCH_SHORT=armhf\n# To build a arm64 image:\n#   --build-arg TOOLCHAIN_ARCH=aarch64-linux-gnu --build-arg TOOLCHAIN_ARCH_SHORT=arm64\n\n# pre-requisites for building (python, git)\nARG CLANG_VERSION=12\nRUN apt-get update \\\n    && apt-get install --no-install-recommends -y apt-transport-https curl wget python python3 git make dirmngr gnupg \\\n    && curl -f -L https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - \\\n    && echo \"deb http://apt.llvm.org/stretch/ llvm-toolchain-stretch-${CLANG_VERSION} main\" | tee /etc/apt/sources.list.d/llvm.list \\\n    && apt-get update \\\n    && apt-get install --no-install-recommends -y clang-${CLANG_VERSION} \\\n    && rm -rf /var/lib/apt/lists/*\n\nARG DOTNET_SDK_VERSION=3.1.412\n\nRUN wget -O dotnet.tar.gz https://dotnetcli.azureedge.net/dotnet/Sdk/$DOTNET_SDK_VERSION/dotnet-sdk-$DOTNET_SDK_VERSION-linux-x64.tar.gz \\\n    && dotnet_sha512='1ed0c1ab48723cef834906a55fb1889b29dd810cd2bc66cbd345a0baf8a2796045b5b7f4beef3c48bd56bef3ffed690b6fae4a5f017ad8687817b25a76fbd9be' \\\n    && echo \"$dotnet_sha512  dotnet.tar.gz\" | sha512sum -c - \\\n    && mkdir -p /usr/share/dotnet \\\n    && tar -C /usr/share/dotnet -xzf dotnet.tar.gz \\\n    && ln -s /usr/share/dotnet/dotnet /usr/bin/dotnet \\\n    && rm dotnet.tar.gz\n\nENV DOTNET_SYSTEM_GLOBALIZATION_INVARIANT 1\n\nRUN dotnet help\n\n# toolchain (gcc/g++)\nARG TOOLCHAIN_VERSION=6\nARG TOOLCHAIN_ARCH=arm-linux-gnueabihf\nARG TOOLCHAIN_ARCH_SHORT=armhf\nRUN apt-get update \\\n    && apt-get install --no-install-recommends -y \\\n         libstdc++-${TOOLCHAIN_VERSION}-dev-${TOOLCHAIN_ARCH_SHORT}-cross \\\n         libgcc-${TOOLCHAIN_VERSION}-dev-${TOOLCHAIN_ARCH_SHORT}-cross \\\n         binutils-${TOOLCHAIN_ARCH} \\\n    && rm -rf /var/lib/apt/lists/*\n\n# make it easier for the build script\nRUN ln -s /usr/${TOOLCHAIN_ARCH}/include/c++/${TOOLCHAIN_VERSION}.* /usr/${TOOLCHAIN_ARCH}/include/c++/current \\\n    && sed -i \"s/\\/usr\\/${TOOLCHAIN_ARCH}\\/lib\\///g\" /usr/${TOOLCHAIN_ARCH}/lib/libpthread.so \\\n    && sed -i \"s/\\/usr\\/${TOOLCHAIN_ARCH}\\/lib\\///g\" /usr/${TOOLCHAIN_ARCH}/lib/libc.so\n\n# skia dependencies (fontconfig)\nARG FONTCONFIG_VERSION=2.11.0-6.7+b1\nRUN ( mkdir -p /skia-utils/libfontconfig1-dev \\\n    && cd /skia-utils/libfontconfig1-dev \\\n    && wget -O libfontconfig1-dev.deb https://ftp.nl.debian.org/debian/pool/main/f/fontconfig/libfontconfig1-dev_${FONTCONFIG_VERSION}_${TOOLCHAIN_ARCH_SHORT}.deb \\\n    && ar vx libfontconfig1-dev.deb \\\n    && tar -xJvf data.tar.xz \\\n    && rm libfontconfig1-dev.deb \\\n    && cp -R usr/lib/*/* /usr/${TOOLCHAIN_ARCH}/lib/ \\\n    && cp -R usr/include/* /usr/${TOOLCHAIN_ARCH}/include/) && rm data.tar.xz\nRUN ( mkdir -p /skia-utils/libfontconfig1 \\\n    && cd /skia-utils/libfontconfig1 \\\n    && wget -O libfontconfig1.deb https://ftp.nl.debian.org/debian/pool/main/f/fontconfig/libfontconfig1_${FONTCONFIG_VERSION}_${TOOLCHAIN_ARCH_SHORT}.deb \\\n    && ar vx libfontconfig1.deb \\\n    && tar -xJvf data.tar.xz \\\n    && rm libfontconfig1.deb \\\n    && cp -R usr/lib/*/* /usr/${TOOLCHAIN_ARCH}/lib/) && rm data.tar.xz\n\n# container environment\nENV CC=clang-${CLANG_VERSION} CXX=clang++-${CLANG_VERSION}\n\nWORKDIR /work\n"
}