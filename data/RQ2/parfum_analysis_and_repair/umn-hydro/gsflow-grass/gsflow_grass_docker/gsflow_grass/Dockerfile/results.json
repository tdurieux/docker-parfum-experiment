{
  "startTime": 1674218040795,
  "endTime": 1674218042420,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 5,
        "columnEnd": 34
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 5,
        "columnEnd": 84
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 76,
        "lineEnd": 104,
        "columnStart": 5,
        "columnEnd": 23
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 22,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 22,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 130,
        "lineEnd": 130,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 130,
        "lineEnd": 130,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 22,
        "columnEnd": 44
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 130,
        "lineEnd": 130,
        "columnStart": 4,
        "columnEnd": 50
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 130,
        "lineEnd": 130,
        "columnStart": 4,
        "columnEnd": 74
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:16.04\nUSER root\n\nRUN useradd -m -s /bin/bash dgketchum\n\nRUN apt-get update && apt-get install -y --no-install-recommends tzdata && rm -rf /var/lib/apt/lists/*;\nRUN apt-get install --no-install-recommends -y apt-utils && rm -rf /var/lib/apt/lists/*;\n\nARG CURL_VERSION=7.59.0\nARG GDAL_VERSION=2.3.2\nARG LIBJPEG_TURBO_VERSION=1.5.90\nARG NGHTTP2_VERSION=1.32.0\nARG OPENJPEG_VERSION=2.3.0\nARG ZSTD_VERSION=1.3.5\n\nENV DEBIAN_FRONTEND noninteractive\nRUN apt-get update \\\n  && apt-get upgrade -y \\\n  && apt-get install -y --no-install-recommends \\\n    build-essential \\\n    ca-certificates \\\n    curl \\\n    debhelper \\\n    dh-autoreconf \\\n    autotools-dev \\\n    zlib1g-dev \\\n    libcrypto++-dev \\\n    libjasper-dev \\\n    libpng-dev \\\n    libgif-dev \\\n    libwebp-dev \\\n    libhdf5-dev \\\n    libpcre3-dev \\\n    libxerces-c-dev \\\n    d-shlibs \\\n    libgeos-dev \\\n    python-all-dev \\\n    python-numpy \\\n    libsqlite3-dev \\\n    libexpat1-dev \\\n    libproj-dev \\\n    libxml2-dev \\\n    libspatialite-dev \\\n    liblzma-dev \\\n    libarmadillo-dev \\\n    liburiparser-dev \\\n    pkg-config \\\n    libgnutls-dev \\\n    cmake \\\n    nasm \\\n  && mkdir /tmp/nghttp2 \\\n  && curl -sfL https://github.com/nghttp2/nghttp2/releases/download/v${NGHTTP2_VERSION}/nghttp2-${NGHTTP2_VERSION}.tar.gz | tar zxf - -C /tmp/nghttp2 --strip-components=1 \\\n  && cd /tmp/nghttp2 \\\n  && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-lib-only \\\n  && make -j $(nproc) install \\\n  && mkdir /tmp/curl \\\n  && curl -sfL https://curl.haxx.se/download/curl-${CURL_VERSION}.tar.gz | tar zxf - -C /tmp/curl --strip-components=1 \\\n  && cd /tmp/curl \\\n  && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/opt/curl --disable-manual --disable-cookies --with-gnutls \\\n  && make -j $(nproc) install \\\n  && mkdir /tmp/zstd \\\n  && curl -sfL https://github.com/facebook/zstd/archive/v${ZSTD_VERSION}.tar.gz | tar zxf - -C /tmp/zstd --strip-components=1 \\\n  && cd /tmp/zstd \\\n  && make -j $(nproc) install \\\n  && mkdir -p /tmp/libjpeg-turbo \\\n  && curl -sfL https://github.com/libjpeg-turbo/libjpeg-turbo/archive/${LIBJPEG_TURBO_VERSION}.tar.gz | tar zxf - -C /tmp/libjpeg-turbo --strip-components=1 \\\n  && cd /tmp/libjpeg-turbo \\\n  && cmake -G\"Unix Makefiles\" -DCMAKE_INSTALL_PREFIX=/usr . \\\n  && make -j $(nproc) install \\\n  && cd / \\\n  && rm -rf /tmp/curl /tmp/libjpeg-turbo /tmp/nghttp2 /tmp/zstd \\\n  && curl -sfL https://github.com/uclouvain/openjpeg/releases/download/v${OPENJPEG_VERSION}/openjpeg-v${OPENJPEG_VERSION}-linux-x86_64.tar.gz | tar zxf - -C /usr/local --strip-components=1 \\\n  && ldconfig \\\n  && mkdir -p /tmp/gdal \\\n  && curl -sfL https://github.com/OSGeo/gdal/archive/v${GDAL_VERSION}.tar.gz | tar zxf - -C /tmp/gdal --strip-components=2 \\\n  && cd /tmp/gdal \\\n  && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n    --prefix=/usr \\\n    --mandir=/usr/share/man \\\n    --includedir=/usr/include/gdal \\\n    --with-threads \\\n    --with-grass=no \\\n    --with-hide-internal-symbols=yes \\\n    --with-rename-internal-libtiff-symbols=yes \\\n    --with-rename-internal-libgeotiff-symbols=yes \\\n    --with-libtiff=internal \\\n    --with-geotiff=internal \\\n    --with-webp \\\n    --with-jasper \\\n    --with-jpeg=/usr \\\n    --with-hdf5=/usr/lib/x86_64-linux-gnu/hdf5/serial \\\n    --with-xerces \\\n    --with-geos \\\n    --with-sqlite3 \\\n    --with-curl=/opt/curl/bin/curl-config \\\n    --with-proj=yes \\\n    --with-spatialite=/usr \\\n    --with-cfitsio=no \\\n    --with-ecw=no \\\n    --with-mrsid=no \\\n    --with-openjpeg=yes \\\n    --with-armadillo=yes \\\n    --with-liblzma=yes \\\n    --with-zstd \\\n    --with-cryptopp=yes \\\n  && make -j $(nproc) \\\n  && make -j $(nproc) install \\\n  && cd / \\\n  && rm -rf /tmp/gdal \\\n  && apt-get clean \\\n  && rm -rf /var/lib/apt/lists/*\n\nENV CURL_CA_BUNDLE /etc/ssl/certs/ca-certificates.crt\nENV GDAL_DATA=/usr/share/gdal\nENV GDAL_HTTP_VERSION 2\n\nADD install_gsflow_grass /install_gsflow_grass\n\nRUN apt update && \\\n    chmod +x /install_gsflow_grass && /install_gsflow_grass\n\nADD install_grass_package /install_grass_package\nRUN chmod +x /install_grass_package && /install_grass_package\n\n#ADD install_binaries_grass /install_binaries_grass\n#RUN chmod +x /install_binaries_grass && /install_binaries_grass\n\nADD install_kit /home/dgketchum/install_kit\nRUN chmod +x /home/dgketchum/install_kit\n\nRUN apt install --no-install-recommends -y libgl1-mesa-glx libgl1-mesa-dri && rm -rf /var/lib/apt/lists/*;\nUSER dgketchum\nWORKDIR /home/dgketchum\nRUN ./install_kit\n\n\nENV TERM xterm-256color\nCMD sh -c \"echo You need to run grass from a shell created by a docker exec invocation; sleep 5d\"\n"
}