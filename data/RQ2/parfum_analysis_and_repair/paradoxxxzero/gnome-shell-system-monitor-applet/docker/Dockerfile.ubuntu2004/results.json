{
  "startTime": 1674250729628,
  "endTime": 1674250730732,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 116,
        "lineEnd": 116,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 7,
        "columnEnd": 68
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 21,
        "lineEnd": 22,
        "columnStart": 26,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 5,
        "columnEnd": 92
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 5,
        "columnEnd": 76
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 5,
        "columnEnd": 135
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 70,
        "lineEnd": 71,
        "columnStart": 26,
        "columnEnd": 19
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 86,
        "lineEnd": 86,
        "columnStart": 26,
        "columnEnd": 53
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 113,
        "lineEnd": 113,
        "columnStart": 12,
        "columnEnd": 46
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 7,
        "columnEnd": 68
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 5,
        "columnEnd": 76
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Courtesy of https://github.com/darkdragon-001/Dockerfile-Ubuntu-Gnome\nFROM ubuntu:20.04\n\nENV container docker\n\n# Ensure apt doesn't block waiting to prompt us.\nENV DEBIAN_FRONTEND noninteractive\nENV DISPLAY ${DISPLAY:-:1}\n\n# Install locale.\nRUN apt-get -qq update \\\n    && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends -qq install -y locales \\\n    && sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen \\\n    && dpkg-reconfigure --frontend=noninteractive locales \\\n    && update-locale LANG=en_US.UTF-8 && rm -rf /var/lib/apt/lists/*;\nENV LANG en_US.UTF-8\nENV LANGUAGE en_US:en\nENV LC_ALL en_US.UTF-8\nENV LC_CTYPE en_US.UTF-8\n\n# Install systemd.\nRUN apt-get -qq update && apt-get -qq --no-install-recommends install -y \\\n    dbus dbus-x11 systemd nano && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    dpkg-divert --local --rename --add /sbin/udevadm && \\\n    ln -s /bin/true /sbin/udevadm\n# TODO maybe disable other targets: https://developers.redhat.com/blog/2014/05/05/running-systemd-within-docker-container/\nRUN systemctl disable systemd-resolved\nVOLUME [\"/sys/fs/cgroup\"]\nSTOPSIGNAL SIGRTMIN+3\nCMD [ \"/sbin/init\" ]\n#ADD ./docker/start.sh /\n#RUN chmod +x /start.sh\n#CMD [\"/start.sh\"]\n\n# Install GNOME.\n# NOTE if you want plain gnome, use: apt-get -qq install -y --no-install-recommends gnome-session gnome-terminal and remove the modification of /etc/gdm3/custom.conf\nRUN apt-get -yq update \\\n  && apt-get -qq --no-install-recommends install -y ubuntu-desktop fcitx-config-gtk gnome-tweak-tool gnome-usage git \\\n  && apt-get clean \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && sed -i 's/\\[daemon\\]/[daemon]\\nInitialSetupEnable=false/' /etc/gdm3/custom.conf\n\n# Install applet dependencies.\nRUN apt-get -qq update \\\n  && apt-get -qq --no-install-recommends install -y gir1.2-gtop-2.0 gir1.2-nm-1.0 gir1.2-clutter-1.0 && rm -rf /var/lib/apt/lists/*;\n\n# Install TigerVNC server.\n# TODO set VNC port in service file > exec command\n# TODO check if it works with default config file\n# NOTE tigervnc because of XKB extension: https://github.com/i3/i3/issues/1983\nRUN apt-get -qq update \\\n  && apt-get -qq --no-install-recommends install -y tigervnc-common tigervnc-scraping-server tigervnc-standalone-server tigervnc-viewer tigervnc-xorg-extension \\\n  && apt-get clean \\\n  && rm -rf /var/lib/apt/lists/*\n# TODO fix PID problem: Type=forking would be best, but system daemon is run as root on startup\n#   ERROR tigervnc@:1.service: New main PID 233 does not belong to service, and PID file is not owned by root. Refusing.\n#   https://www.freedesktop.org/software/systemd/man/systemd.service.html#Type=\n#   https://www.freedesktop.org/software/systemd/man/systemd.unit.html#Specifiers\n#   https://wiki.archlinux.org/index.php/TigerVNC#Starting_and_stopping_vncserver_via_systemd\n# -> this should be fixed by official systemd file once released: https://github.com/TigerVNC/tigervnc/pull/838\n# TODO specify options like geometry as environment variables -> source variables in service via EnvironmentFile=/path/to/env\n# NOTE logout will stop tigervnc service -> need to manually start (gdm for graphical login is not working)\nCOPY ./docker/ubuntu/tigervnc@.service /etc/systemd/system/tigervnc@.service\nRUN systemctl enable tigervnc@:1\nEXPOSE 5901\n\n# Install noVNC.\n# TODO novnc depends on net-tools until version 1.1.0: https://github.com/novnc/noVNC/issues/1075\nRUN apt-get -qq update && apt-get -qq --no-install-recommends install -y \\\n    net-tools novnc \\\n    && apt-get clean -y \\\n    && rm -rf /var/lib/apt/lists/*\nRUN ln -s /usr/share/novnc/vnc_lite.html /usr/share/novnc/index.html\n# TODO specify options like ports as environment variables -> source variables in service via EnvironmentFile=/path/to/env\nCOPY ./docker/ubuntu/novnc.service /etc/systemd/system/novnc.service\nRUN systemctl enable novnc\nEXPOSE 6901\n\n# Create unprivileged user.\n# NOTE user hardcoded in tigervnc.service\n# NOTE alternative is to use libnss_switch and create user at runtime -> use entrypoint script\nARG UID=1000\nARG USER=default\nRUN useradd ${USER} -u ${UID} -U -d /home/${USER} -m -s /bin/bash\nRUN apt-get -qq update && apt-get -qq --no-install-recommends install -y sudo && apt-get clean && rm -rf /var/lib/apt/lists/* && \\\n    echo \"${USER} ALL=(ALL) NOPASSWD: ALL\" > \"/etc/sudoers.d/${USER}\" && \\\n    chmod 440 \"/etc/sudoers.d/${USER}\"\nUSER \"${USER}\"\nENV USER=\"${USER}\" \\\n    HOME=\"/home/${USER}\"\nWORKDIR \"/home/${USER}\"\n\n# Disable annoying Gnome welcome screen.\nRUN sudo bash -c 'echo \"X-GNOME-Autostart-enabled=false\" >> /etc/xdg/autostart/gnome-initial-setup-first-login.desktop'\n\n# Required by Dogtail for interaction with Gnome.\nRUN /usr/bin/dbus-run-session /usr/bin/gsettings set org.gnome.desktop.interface toolkit-accessibility true\n\n# Install extension.\nRUN mkdir -p $HOME/.local/share/gnome-shell/extensions\nCOPY ./system-monitor@paradoxxx.zero.gmail.com $HOME/.local/share/gnome-shell/extensions/system-monitor@paradoxxx.zero.gmail.com\nRUN gnome-extensions enable system-monitor@paradoxxx.zero.gmail.com\n#TODO: gnome-extensions enable doesn't seem to work since dbus isn't running\n\n# Set up VNC.\nRUN mkdir -p $HOME/.vnc\nCOPY ./docker/ubuntu/xstartup $HOME/.vnc/xstartup\nRUN echo \"password\" | vncpasswd -f >> $HOME/.vnc/passwd && chmod 600 $HOME/.vnc/passwd\n\n# Set up GUI testing environment\nRUN sudo apt-get -qq update \\\n    && sudo apt-get -qq --no-install-recommends install -y python3-pip \\\n    && sudo apt-get clean -y \\\n    && sudo rm -rf /var/lib/apt/lists/*\nRUN pip3 install --no-cache-dir --user dogtail\nRUN chmod +x \"/home/${USER}/.local/bin\"/*\nRUN echo \"export PATH=\\\"\\$PATH:/home/${USER}/.local/bin\\\"\" >> \"/home/${USER}/.bashrc\"\n\n# Run our test script at user start.\n# RUN echo \"cd /home/default/shared; ./run_gui_tests.sh\" >> \"/home/${USER}/.profile\"\n\n# Switch back to root to start systemd.\nUSER root\n"
}