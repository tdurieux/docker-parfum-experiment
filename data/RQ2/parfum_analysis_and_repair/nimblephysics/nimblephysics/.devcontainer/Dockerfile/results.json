{
  "startTime": 1674219549200,
  "endTime": 1674219550408,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 4,
        "columnEnd": 25
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM keenon/diffdart:base\n\n# Re-Install PerfUtils - This needs to be rebuilt on each machine individually, since otherwise it breaks binaries.\nRUN git clone https://github.com/PlatformLab/PerfUtils.git && \\\n    pushd PerfUtils && \\\n    sed -i 's/3.11/3.6.1/g' CMakeLists.txt && \\\n    sed -i '94,$d' CMakeLists.txt && \\\n    sed -i '30,33d' CMakeLists.txt && \\\n    sed -i '2iset(CMAKE_POSITION_INDEPENDENT_CODE ON)' CMakeLists.txt && \\\n    sed -i '36i\\ \\ \\ \\ CXX_STANDARD 11' CMakeLists.txt && \\\n    sed -i '36i\\ \\ \\ \\ CXX_STANDARD_REQUIRED YES' CMakeLists.txt && \\\n    sed -i '36i\\ \\ \\ \\ CXX_EXTENSIONS NO' CMakeLists.txt && \\\n    mkdir build && \\\n    pushd build && \\\n    cmake .. && \\\n    make install && \\\n    popd && \\\n    popd && \\\n    rm -rf PerfUtils\n\n# Re-Install tinyxml2 - Just like PerfUtils, this needs to be built on each machine individually, since otherwise it can be incompatible\nRUN git clone https://github.com/leethomason/tinyxml2.git && \\\n    pushd tinyxml2 && \\\n    sed -i '20iset(CMAKE_POSITION_INDEPENDENT_CODE ON)' CMakeLists.txt && \\\n    mkdir build && \\\n    pushd build && \\\n    cmake .. && \\\n    make install -j10 && \\\n    popd && \\\n    popd && \\\n    rm -rf tinyxml2\n\n# This is allowed to be empty string, but if it's not it must be prefixed by\nARG VERSION\n\nRUN mkdir /wheelhouse\n\n# Build Python 3.8\n\nENV PYTHON=\"/opt/python/cp38-cp38/bin/python3.8\"\nENV PATH=\"/opt/python/cp38-cp38/bin/:${PATH}\"\nENV PYTHON_VERSION=\"cp38-cp38\"\nENV PYTHON_INCLUDE=\"/opt/python/cp38-cp38/include/python3.8/\"\nENV PYTHON_LIB=\"/opt/python/cp38-cp38/lib/python3.8\"\nENV PYTHON_VERSION_NUMBER=\"3.8\"\n\n# Install pybind11\nENV CPATH=\"${PYTHON_INCLUDE}\"\nRUN git clone https://github.com/pybind/pybind11.git && \\\n    pushd pybind11 && \\\n    mkdir build && \\\n    pushd build && \\\n    cmake .. && \\\n    make install -j10\n# Install pytest\nRUN ${PYTHON} -m pip install pytest\nRUN ${PYTHON} -m pip install auditwheel\nRUN git clone https://github.com/keenon/diffdart\nRUN cd diffdart\n\n# Install some extra tools that we don't typically need in CI, but are nice in development\nRUN yum install -y gdb && rm -rf /var/cache/yum\nRUN curl -f -sL https://rpm.nodesource.com/setup_10.x | bash -\nRUN yum install -y nodejs && rm -rf /var/cache/yum\nRUN protoc --version\n\n# Expose common ports for the web GUI server\nEXPOSE 9000\nEXPOSE 8080\n# Expose port for WebSocket updates for the GUI\nEXPOSE 8070"
}