{
  "startTime": 1674251366411,
  "endTime": 1674251367216,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 44,
        "lineEnd": 45,
        "columnStart": 7,
        "columnEnd": 122
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 46,
        "lineEnd": 47,
        "columnStart": 7,
        "columnEnd": 126
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 7,
        "columnEnd": 42
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 7,
        "columnEnd": 64
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 7,
        "columnEnd": 69
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG RCLONE_VERSION=\"v1.58.0\"\nARG OVERLAY_VERSION=\"v2.2.0.3\"\nARG OVERLAY_ARCH=\"amd64\"\nARG OVERLAY_KEY=\"6101B2783B2FD161\"\n\n\n# Builder\nFROM golang:alpine AS builder\n\nARG RCLONE_VERSION\n\nWORKDIR /go/src/github.com/rclone/rclone/\n\nENV GOPATH=\"/go\" \\\n    GO111MODULE=\"on\"\n\nRUN apk add --no-cache --update ca-certificates go git \\\n    && git clone https://github.com/rclone/rclone.git \\\n    && cd rclone \\\n    && git checkout tags/${RCLONE_VERSION} \\\n    && go build\n\n\n## Image\nFROM alpine:latest\n\nARG OVERLAY_VERSION\nARG OVERLAY_ARCH\nARG OVERLAY_KEY\n\nENV DEBUG=\"false\" \\\n    AccessFolder=\"/mnt\" \\\n    RemotePath=\"mediaefs:\" \\\n    MountPoint=\"/mnt/mediaefs\" \\\n    ConfigDir=\"/config\" \\\n    ConfigName=\".rclone.conf\" \\\n    MountCommands=\"--allow-other --allow-non-empty\" \\\n    UnmountCommands=\"-u -z\"\n\nCOPY --from=builder /go/src/github.com/rclone/rclone/rclone /usr/local/sbin/\n\nRUN apk --no-cache upgrade \\\n    && apk add --no-cache --update ca-certificates fuse fuse-dev curl gnupg \\\n    && echo \"Installing S6 Overlay\" \\\n    && curl -f -o /tmp/s6-overlay.tar.gz -L \\\n    \"https://github.com/just-containers/s6-overlay/releases/download/${OVERLAY_VERSION}/s6-overlay-${OVERLAY_ARCH}.tar.gz\" \\\n    && curl -f -o /tmp/s6-overlay.tar.gz.sig -L \\\n    \"https://github.com/just-containers/s6-overlay/releases/download/${OVERLAY_VERSION}/s6-overlay-${OVERLAY_ARCH}.tar.gz.sig\" \\\n    && gpg --batch --keyserver pgp.surfnet.nl --recv-keys ${OVERLAY_KEY} \\\n    && gpg --batch --verify /tmp/s6-overlay.tar.gz.sig /tmp/s6-overlay.tar.gz \\\n    && tar xzf /tmp/s6-overlay.tar.gz -C / \\\n    && apk del curl gnupg \\\n    && rm -rf /tmp/* /var/cache/apk/* /var/lib/apk/lists/* && rm /tmp/s6-overlay.tar.gz\n\nCOPY rootfs/ /\n\nVOLUME [\"/mnt\"]\n\nENTRYPOINT [\"/init\"]\n\n# Use this docker Options in run\n# --cap-add SYS_ADMIN --device /dev/fuse --security-opt apparmor:unconfined\n# -v /path/to/config/.rclone.conf:/config/.rclone.conf\n# -v /mnt/mediaefs:/mnt/mediaefs:shared\n"
}