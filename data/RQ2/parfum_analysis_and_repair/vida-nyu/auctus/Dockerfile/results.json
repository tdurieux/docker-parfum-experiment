{
  "startTime": 1674250646720,
  "endTime": 1674250647529,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 89
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 30
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.8 AS geo-data\n\nRUN mkdir /usr/src/app && rm -rf /usr/src/app\nCOPY lib_geo /usr/src/app/lib_geo\nRUN pip --disable-pip-version-check --no-cache-dir install /usr/src/app/lib_geo\nENV DATAMART_GEO_DATA /usr/src/app/geo_data\nRUN python -m datamart_geo --update /usr/src/app/geo_data && \\\n    ls -l /usr/src/app/geo_data\n\nFROM python:3.8 AS sources\n# If only there was a way to do this copy directly with Docker...\n# https://github.com/moby/moby/issues/33551\nRUN mkdir /usr/src/app && rm -rf /usr/src/app\nCOPY lib_core /usr/src/app/lib_core\nCOPY lib_fslock /usr/src/app/lib_fslock\nCOPY lib_geo /usr/src/app/lib_geo\nCOPY lib_materialize /usr/src/app/lib_materialize\nCOPY lib_augmentation /usr/src/app/lib_augmentation\nCOPY lib_profiler /usr/src/app/lib_profiler\nCOPY apiserver /usr/src/app/apiserver\nCOPY coordinator /usr/src/app/coordinator\nCOPY profiler /usr/src/app/profiler\nCOPY cache_cleaner /usr/src/app/cache_cleaner\nCOPY snapshotter /usr/src/app/snapshotter\nCOPY discovery/test_discovery.py /usr/src/app/discovery/\nCOPY discovery/noaa /usr/src/app/discovery/noaa\nCOPY discovery/isi /usr/src/app/discovery/isi\nCOPY discovery/socrata /usr/src/app/discovery/socrata\nCOPY discovery/zenodo /usr/src/app/discovery/zenodo\nCOPY discovery/ckan /usr/src/app/discovery/ckan\nCOPY discovery/worldbank /usr/src/app/discovery/worldbank\nCOPY discovery/uaz_indicators /usr/src/app/discovery/uaz_indicators\nCOPY tests/data /usr/src/app/tests/data\n\nFROM python:3.8\n\nCOPY --from=geo-data /usr/src/app/geo_data /usr/src/app/geo_data\n\nENV TINI_VERSION v0.18.0\nRUN curl -f -Lo /tini https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini && \\\n    chmod +x /tini\n\nENV PYTHONFAULTHANDLER=1\n\nRUN mkdir -p /usr/src/app/home && \\\n    useradd -d /usr/src/app/home -s /usr/sbin/nologin -u 998 appuser && \\\n    chown appuser /usr/src/app/home && rm -rf /usr/src/app/home\nWORKDIR /usr/src/app\nRUN pip --disable-pip-version-check --no-cache-dir install toml\nCOPY docker/install_deps.py poetry.lock /usr/src/app/\nRUN python install_deps.py poetry.lock  # NOTCI\n# CI: RUN python install_deps.py --dev poetry.lock\n# CI: RUN pip --disable-pip-version-check install coverage==5.5\n# CI: COPY docker/coveragerc /usr/src/app/.coveragerc\n\nCOPY --chown=appuser --from=sources /usr/src/app /usr/src/app/\nRUN sh -c \"pip --disable-pip-version-check --no-cache-dir install --no-deps \\$(for pkg in \\\"\\$@\\\"; do printf -- \\\" -e ./%s\\\" \\$pkg; done)\" -- \\\n    lib_core lib_fslock lib_geo lib_materialize lib_augmentation lib_profiler \\\n    apiserver coordinator profiler cache_cleaner snapshotter \\\n    discovery/noaa discovery/isi discovery/isi discovery/socrata \\\n    discovery/zenodo discovery/ckan discovery/worldbank discovery/uaz_indicators\n\nENV DATAMART_GEO_DATA /usr/src/app/geo_data\n\nRUN python -m compileall /usr/src/app/\nARG version\nENV DATAMART_VERSION ${version}\nRUN test -n \"${DATAMART_VERSION}\"\nUSER 998\nENTRYPOINT [ \\\n    \"/tini\", \"--\", \"/bin/bash\", \"-c\", \\\n    \"if [ x\\\"$OTEL_TRACES_EXPORTER\\\" != x ]; then OTEL_RESOURCE_ATTRIBUTES=service.name=$AUCTUS_OTEL_SERVICE OTEL_PYTHON_TORNADO_EXCLUDED_URLS=/health exec opentelemetry-instrument \\\"$@\\\"; else exec \\\"$@\\\"; fi\", \"--\"]\nCMD [\"false\"]\n"
}