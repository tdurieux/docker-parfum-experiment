{
  "startTime": 1674219558662,
  "endTime": 1674219559246,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 8,
        "columnEnd": 12
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 16,
        "columnEnd": 32
      }
    }
  ],
  "repairedDockerfile": "# 构建基础镜像\n    FROM iamccc/alpine-node:14.19.0 AS base\n\n    # 设置时区\n    RUN apk --update --no-cache add tzdata \\\n        && cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime \\\n        && echo \"Asia/Shanghai\" > /etc/timezone \\\n        && apk del tzdata\n\n    # 设置环境变量\n    ENV NODE_ENV=production \\\n        APP_PATH=/node/app\n\n    # 设置工作目录\n    WORKDIR $APP_PATH\n\n# 使用基础镜像 装依赖阶段\n    FROM base AS install\n\n    # 拷贝 package.json 到工作跟目录下\n    COPY package.json .\n\n    # 安装依赖\n    RUN yarn && yarn cache clean;\n\n# 最终阶段，也就是输出的镜像是这个阶段构建的，前面的阶段都是为这个阶段做铺垫\n    FROM base\n\n    # 拷贝 装依赖阶段 生成的 node_modules 文件夹到工作目录下\n    COPY --from=install $APP_PATH/node_modules ./node_modules\n\n    # 将当前目录下的所有文件（除了.dockerignore排除的路径），都拷贝进入镜像的工作目录下\n    COPY . .\n\n    # 启动\n    CMD yarn start"
}