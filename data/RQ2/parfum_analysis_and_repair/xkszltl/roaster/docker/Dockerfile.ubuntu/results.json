{
  "startTime": 1674253646114,
  "endTime": 1674253647146,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 59
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG LABEL_BUILD_ID='Undefined'\nARG IMAGE_REGISTRY='docker.codingcafe.org/xkszltl/roaster'\nARG IMAGE_REPO=\"$IMAGE_REGISTRY/ubuntu\"\nARG STAGE_PREFIX=''\n# ARG STAGE_PREFIX=\"$IMAGE_REPO:\"\n\nFROM ubuntu:18.04 AS stage-init\n\nLABEL BUILD_ID=$LABEL_BUILD_ID\n\n# Cache invalidation.\nRUN LABEL_BUILD_ID=\"$LABEL_BUILD_ID\"\n\nSHELL [\"/bin/bash\", \"-c\"]\n\nENV LANG=C.UTF-8\n\n# systemd\nRUN set -xe; \\\n    apt-get update -y; \\\n    apt-get upgrade -y; \\\n    DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y sudo; rm -rf /var/lib/apt/lists/*; \\\n    sudo DEBIAN_FRONTEND=noninteractive apt-get install -y systemd; \\\n    (cd /lib/systemd/system/sysinit.target.wants/; for i in *; do [ \"_$i\" = '_systemd-tmpfiles-setup.service' ] || sudo rm -f \"$i\"; done); \\\n    sudo rm -f /lib/systemd/system/multi-user.target.wants/*; \\\n    sudo rm -f /etc/systemd/system/*.wants/*; \\\n    sudo rm -f /lib/systemd/system/local-fs.target.wants/*; \\\n    sudo rm -f /lib/systemd/system/sockets.target.wants/*udev*; \\\n    sudo rm -f /lib/systemd/system/sockets.target.wants/*initctl*; \\\n    sudo rm -f /lib/systemd/system/basic.target.wants/*; \\\n    sudo rm -f /lib/systemd/system/anaconda.target.wants/*; \\\n    sudo apt-get autoremove -y; \\\n    sudo apt-get clean; \\\n    truncate -s0 ~/.bash_history;\n\n# man\nRUN rm -rf /etc/dpkg/dpkg.cfg.d/excludes\n\nVOLUME [ \"/sys/fs/cgroup\" ]\nCMD [\"/sbin/init\"]\n\n# nvidia-docker\nENV PATH=/usr/local/nvidia/bin:/usr/local/cuda/bin:${PATH}\nENV LD_LIBRARY_PATH=/usr/local/nvidia/lib64:/usr/local/nvidia/lib:${LD_LIBRARY_PATH}\nENV NVIDIA_DRIVER_CAPABILITIES=compute,graphics,utility,video\nENV NVIDIA_VISIBLE_DEVICES=all\n\nVOLUME [\"/var/log\"]\n\nCOPY [\".\", \"/etc/roaster/scripts\"]\n\nFROM \"$STAGE_PREFIX\"stage-init AS stage-repo\n\nLABEL BUILD_ID=$LABEL_BUILD_ID\nCOPY [\".\", \"/etc/roaster/scripts\"]\nRUN /etc/roaster/scripts/setup.sh repo\n\nFROM \"$STAGE_PREFIX\"stage-repo AS stage-font\n\nLABEL BUILD_ID=$LABEL_BUILD_ID\nCOPY [\".\", \"/etc/roaster/scripts\"]\nRUN set -e; \\\n    export DEB_MAX_ATTEMPT=10; \\\n    for attempt in $(seq \"$DEB_MAX_ATTEMPT\" -1 0); do \\\n        [ \"$attempt\" -gt 0 ]; \\\n        ( \\\n            set -e; \\\n            sudo apt-get update -y; \\\n            sudo DEBIAN_FRONTEND=noninteractive apt-get upgrade -y; \\\n        ) && break; \\\n        echo \"Retrying... $(expr \"$attempt\" - 1) chance(s) left.\"; \\\n    done; \\\n    for attempt in $(seq \"$DEB_MAX_ATTEMPT\" -1 0); do \\\n        [ \"$attempt\" -gt 0 ]; \\\n        ( \\\n            set -e; \\\n            sudo DEBIAN_FRONTEND=noninteractive apt-get install -y $(apt-cache --names-only search '^fonts-*' | cut -d' ' -f1 | grep -v mathematica); \\\n        ) && break; \\\n        echo \"Retrying... $(expr \"$attempt\" - 1) chance(s) left.\"; \\\n    done; \\\n    sudo apt-get autoremove -y; \\\n    sudo apt-get clean; \\\n    truncate -s0 ~/.bash_history;\n\nFROM \"$STAGE_PREFIX\"stage-font AS stage-pkg\n\nLABEL BUILD_ID=$LABEL_BUILD_ID\nCOPY [\".\", \"/etc/roaster/scripts\"]\nRUN set -e; \\\n    export DEB_MAX_ATTEMPT=10; \\\n    for attempt in $(seq \"$DEB_MAX_ATTEMPT\" -1 0); do \\\n        [ \"$attempt\" -gt 0 ]; \\\n        ( \\\n            set -e; \\\n            sudo apt-get update -y; \\\n            sudo DEBIAN_FRONTEND=noninteractive apt-get upgrade -y; \\\n        ) && break; \\\n        echo \"Retrying... $(expr \"$attempt\" - 1) chance(s) left.\"; \\\n    done; \\\n    for attempt in $(seq \"$DEB_MAX_ATTEMPT\" -1 0); do \\\n        [ \"$attempt\" -gt 0 ]; \\\n        sudo DEBIAN_FRONTEND=noninteractive apt-get install -y \\\n            asciidoc \\\n            apcupsd \\\n            apt-mirror \\\n            auditd \\\n            autoconf{,-archive} automake autopoint \\\n            axel \\\n            bash-completion \\\n            bc \\\n            binutils \\\n            bison \\\n            bmon \\\n            bsdmainutils \\\n            byacc{,-j} \\\n            bzip2 pbzip2 \\\n            ccache \\\n            cmake{,-curses-gui} \\\n            coreutils \\\n            cpio \\\n            curl \\\n            debmirror \\\n            default-jdk ant maven \\\n            diffutils \\\n            dnsutils \\\n            docker-{ce,compose} \\\n            dos2unix \\\n            dstat \\\n            expect \\\n            firewalld \\\n            flex \\\n            fuse libfuse-dev \\\n            g++{,-{4,5,6,7,8}} \\\n            gawk \\\n            gcc{,-{5,6,7,8}}-multilib \\\n            gdb \\\n            gettext \\\n            gfortran{,-{5,6,7,8}} \\\n            giflib-tools libgif-dev \\\n            git{,-{extras,lfs}} \\\n            glances \\\n            gnome-keyring{,'-*'} \\\n            gnuplot \\\n            gperf \\\n            gstreamer1.0-tools libgstreamer1.0-dev \\\n            gzip \\\n            hdf5-{helpers,tools} h5utils libhdf5-{{,{mpi,mpich,openmpi}-}dev,doc} \\\n            htop \\\n            httping \\\n            ibutils infiniband-diags \\\n            icu-devtools \\\n            ifenslave \\\n            ifstat \\\n            iftop \\\n            imagemagick \\\n            iotop \\\n            iperf{,3} libiperf-dev \\\n            iproute2{,-doc} \\\n            'iputils-*' \\\n            jq \\\n            language-pack-{ar,de,en,es,fr,it,ja,ko,pt,ru,zh-han{s,t}} \\\n            lcov \\\n            ldap-utils slapd \\\n            lib{asan{0,2,3,4,5},lsan0,tsan0,ubsan{0,1}} \\\n            lib{atlas-base,boost-all,bz2,cairo2,c-ares,edit,eigen3,ev,ffi,gflags,gif,google-glog,grpc++,gtest,harfbuzz,hiredis,hwloc,jemalloc,jpeg{,-turbo8},jsoncpp,lapack,leveldb,lmdb,lzma,mbedtls,ncurses5,openblas,opencv,pango1.0,pcre{2,3},png,rados,re2,rocksdb,snappy,sodium,ssl,tiff,utf8proc,yaml}-dev \\\n            libevent-dev \\\n            libfreetype6{,-dev} \\\n            liblz4-dev liblz4-tool \\\n            libnuma-dev numactl numad \\\n            libpapi-dev papi-tools \\\n            libprotobuf-dev protobuf-compiler \\\n            libpugixml-dev pugixml-doc\\\n            libteam-{dev,utils} \\\n            libtool \\\n            libudns-dev udns-utils \\\n            llvm-10{,-tools} {clang{,-{format,tidy,tools}},lld,lldb}-10 lib{c++{,abi},omp}-10-dev \\\n            locales \\\n            locate \\\n            lshw \\\n            lsof \\\n            ltrace \\\n            m4 \\\n            make \\\n            moreutils \\\n            mtr \\\n            net-tools \\\n            ninja-build \\\n            nvidia-container-runtime \\\n            openssh-{client,server} \\\n            pandoc \\\n            parallel \\\n            pass \\\n            pax-utils \\\n            pciutils \\\n            pigz \\\n            powertop \\\n            prelink \\\n            procps \\\n            pstack \\\n            pv \\\n            pybind11-dev \\\n            python3{,-pip} \\\n            qt5-default qtbase5-dev \\\n            rapidjson-dev \\\n            redis{,-tools} \\\n            rdma-core rdmacm-utils librdmacm{1,-dev} \\\n            rng-tools5 \\\n            rsync \\\n            ruby-all-dev \\\n            samba{,-dev} smbclient smbldap-tools \\\n            sed \\\n            {selinux-basics,{selinux-policy,policycoreutils}'-*'} se{manage,module}-utils \\\n            snmp \\\n            snmp-mibs-downloader \\\n            socat \\\n            strace \\\n            software-properties-common \\\n            subversion-tools \\\n            sysfsutils \\\n            sysstat \\\n            tar \\\n            telnet{,-ssl} tftp \\\n            time \\\n            tmux{,-plugin-manager} \\\n            tree \\\n            tuned{,'-*'} \\\n            txt2man \\\n            usbutils \\\n            util-linux \\\n            uuid-{dev,runtime} \\\n            valgrind{,-mpi} \\\n            vim{,-gtk3} \\\n            wget \\\n            whois \\\n            winbind \\\n            xz-utils pxz \\\n            zstd libzstd-dev \\\n        && break; \\\n        echo \"Retrying... $(expr \"$attempt\" - 1) chance(s) left.\"; \\\n    done; \\\n    sudo apt-get autoremove -y; \\\n    sudo apt-get clean; \\\n    sudo update-alternatives --set libblas.so.3-x86_64-linux-gnu /usr/lib/x86_64-linux-gnu/atlas/libblas.so.3; \\\n    sudo update-alternatives --set liblapack.so.3-x86_64-linux-gnu /usr/lib/x86_64-linux-gnu/atlas/liblapack.so.3; \\\n    if which parallel 2>/dev/null; then \\\n        sudo parallel --citation <<< 'will cite' || sudo parallel --will-cite < /dev/null; \\\n    fi; \\\n    truncate -s0 ~/.bash_history;\nRUN /etc/roaster/scripts/setup.sh fpm firewall\n\nFROM \"$STAGE_PREFIX\"stage-pkg AS stage-auth\n\nLABEL BUILD_ID=$LABEL_BUILD_ID\nCOPY [\".\", \"/etc/roaster/scripts\"]\nRUN /etc/roaster/scripts/setup.sh auth vim tmux\n\nFROM \"$STAGE_PREFIX\"stage-auth AS stage-ss\n\nLABEL BUILD_ID=$LABEL_BUILD_ID\nCOPY [\".\", \"/etc/roaster/scripts\"]\nRUN --mount=type=secret,id=env-cred-usr,target=/etc/roaster/scripts/cred/env-cred-usr.sh,mode=500 \\\n    /etc/roaster/scripts/setup.sh ss\n\nFROM \"$STAGE_PREFIX\"stage-ss AS stage-intel\n\nLABEL BUILD_ID=$LABEL_BUILD_ID\nCOPY [\".\", \"/etc/roaster/scripts\"]\nRUN --mount=type=cache,id=roaster-ubuntu18.04-ccache,target=/root/.ccache,mode=0755 /etc/roaster/scripts/setup.sh intel\n\nFROM \"$STAGE_PREFIX\"stage-intel AS stage-infra\n\nLABEL BUILD_ID=$LABEL_BUILD_ID\nCOPY [\".\", \"/etc/roaster/scripts\"]\nRUN --mount=type=cache,id=roaster-ubuntu18.04-ccache,target=/root/.ccache,mode=0755 /etc/roaster/scripts/setup.sh lz4\nRUN --mount=type=cache,id=roaster-ubuntu18.04-ccache,target=/root/.ccache,mode=0755 /etc/roaster/scripts/setup.sh zstd\nRUN --mount=type=cache,id=roaster-ubuntu18.04-ccache,target=/root/.ccache,mode=0755 /etc/roaster/scripts/setup.sh cmake\nRUN --mount=type=cache,id=roaster-ubuntu18.04-ccache,target=/root/.ccache,mode=0755 /etc/roaster/scripts/setup.sh hiredis\nRUN --mount=type=cache,id=roaster-ubuntu18.04-ccache,target=/root/.ccache,mode=0755 /etc/roaster/scripts/setup.sh ccache\nRUN --mount=type=cache,id=roaster-ubuntu18.04-ccache,target=/root/.ccache,mode=0755 /etc/roaster/scripts/setup.sh c-ares\nRUN --mount=type=cache,id=roaster-ubuntu18.04-ccache,target=/root/.ccache,mode=0755 /etc/roaster/scripts/setup.sh axel\nRUN --mount=type=cache,id=roaster-ubuntu18.04-ccache,target=/root/.ccache,mode=0755 /etc/roaster/scripts/setup.sh ipt\nRUN --mount=type=cache,id=roaster-ubuntu18.04-ccache,target=/root/.ccache,mode=0755 /etc/roaster/scripts/setup.sh cuda\nRUN --mount=type=cache,id=roaster-ubuntu18.04-ccache,target=/root/.ccache,mode=0755 /etc/roaster/scripts/setup.sh ucx\nRUN --mount=type=cache,id=roaster-ubuntu18.04-ccache,target=/root/.ccache,mode=0755 /etc/roaster/scripts/setup.sh ompi\n\nFROM \"$STAGE_PREFIX\"stage-infra AS stage-llvm\n\nLABEL BUILD_ID=$LABEL_BUILD_ID\nCOPY [\".\", \"/etc/roaster/scripts\"]\nRUN --mount=type=cache,id=roaster-ubuntu18.04-ccache,target=/root/.ccache,mode=0755 /etc/roaster/scripts/setup.sh llvm-gcc llvm-clang\n\nFROM \"$STAGE_PREFIX\"stage-llvm AS stage-util\n\nLABEL BUILD_ID=$LABEL_BUILD_ID\nCOPY [\".\", \"/etc/roaster/scripts\"]\nRUN --mount=type=cache,id=roaster-ubuntu18.04-ccache,target=/root/.ccache,mode=0755 /etc/roaster/scripts/setup.sh boost\nRUN --mount=type=cache,id=roaster-ubuntu18.04-ccache,target=/root/.ccache,mode=0755 /etc/roaster/scripts/setup.sh jemalloc\nRUN --mount=type=cache,id=roaster-ubuntu18.04-ccache,target=/root/.ccache,mode=0755 /etc/roaster/scripts/setup.sh eigen\nRUN --mount=type=cache,id=roaster-ubuntu18.04-ccache,target=/root/.ccache,mode=0755 /etc/roaster/scripts/setup.sh openblas\nRUN --mount=type=cache,id=roaster-ubuntu18.04-ccache,target=/root/.ccache,mode=0755 /etc/roaster/scripts/setup.sh gtest\nRUN --mount=type=cache,id=roaster-ubuntu18.04-ccache,target=/root/.ccache,mode=0755 /etc/roaster/scripts/setup.sh benchmark\nRUN --mount=type=cache,id=roaster-ubuntu18.04-ccache,target=/root/.ccache,mode=0755 /etc/roaster/scripts/setup.sh gflags\nRUN --mount=type=cache,id=roaster-ubuntu18.04-ccache,target=/root/.ccache,mode=0755 /etc/roaster/scripts/setup.sh glog\nRUN --mount=type=cache,id=roaster-ubuntu18.04-ccache,target=/root/.ccache,mode=0755 /etc/roaster/scripts/setup.sh snappy\nRUN --mount=type=cache,id=roaster-ubuntu18.04-ccache,target=/root/.ccache,mode=0755 /etc/roaster/scripts/setup.sh protobuf\nRUN --mount=type=cache,id=roaster-ubuntu18.04-ccache,target=/root/.ccache,mode=0755 /etc/roaster/scripts/setup.sh nsync\n\nFROM \"$STAGE_PREFIX\"stage-util AS stage-misc\n\nLABEL BUILD_ID=$LABEL_BUILD_ID\nCOPY [\".\", \"/etc/roaster/scripts\"]\nRUN --mount=type=cache,id=roaster-ubuntu18.04-ccache,target=/root/.ccache,mode=0755 /etc/roaster/scripts/setup.sh catch2\nRUN --mount=type=cache,id=roaster-ubuntu18.04-ccache,target=/root/.ccache,mode=0755 /etc/roaster/scripts/setup.sh jsoncpp\nRUN --mount=type=cache,id=roaster-ubuntu18.04-ccache,target=/root/.ccache,mode=0755 /etc/roaster/scripts/setup.sh rapidjson\nRUN --mount=type=cache,id=roaster-ubuntu18.04-ccache,target=/root/.ccache,mode=0755 /etc/roaster/scripts/setup.sh simdjson\nRUN --mount=type=cache,id=roaster-ubuntu18.04-ccache,target=/root/.ccache,mode=0755 /etc/roaster/scripts/setup.sh utf8proc\nRUN --mount=type=cache,id=roaster-ubuntu18.04-ccache,target=/root/.ccache,mode=0755 /etc/roaster/scripts/setup.sh pugixml\nRUN --mount=type=cache,id=roaster-ubuntu18.04-ccache,target=/root/.ccache,mode=0755 /etc/roaster/scripts/setup.sh pybind\nRUN --mount=type=cache,id=roaster-ubuntu18.04-ccache,target=/root/.ccache,mode=0755 /etc/roaster/scripts/setup.sh grpc\nRUN --mount=type=cache,id=roaster-ubuntu18.04-ccache,target=/root/.ccache,mode=0755 /etc/roaster/scripts/setup.sh libpng\nRUN --mount=type=cache,id=roaster-ubuntu18.04-ccache,target=/root/.ccache,mode=0755 /etc/roaster/scripts/setup.sh libgdiplus\nRUN --mount=type=cache,id=roaster-ubuntu18.04-ccache,target=/root/.ccache,mode=0755 /etc/roaster/scripts/setup.sh mkl-dnn\nRUN --mount=type=cache,id=roaster-ubuntu18.04-ccache,target=/root/.ccache,mode=0755 /etc/roaster/scripts/setup.sh opencv\nRUN --mount=type=cache,id=roaster-ubuntu18.04-ccache,target=/root/.ccache,mode=0755 /etc/roaster/scripts/setup.sh leveldb\nRUN --mount=type=cache,id=roaster-ubuntu18.04-ccache,target=/root/.ccache,mode=0755 /etc/roaster/scripts/setup.sh rocksdb\nRUN --mount=type=cache,id=roaster-ubuntu18.04-ccache,target=/root/.ccache,mode=0755 /etc/roaster/scripts/setup.sh lmdb\n\nFROM \"$STAGE_PREFIX\"stage-misc AS stage-dl\n\nLABEL BUILD_ID=$LABEL_BUILD_ID\nCOPY [\".\", \"/etc/roaster/scripts\"]\nRUN --mount=type=cache,id=roaster-ubuntu18.04-ccache,target=/root/.ccache,mode=0755 /etc/roaster/scripts/setup.sh onnx\nRUN --mount=type=cache,id=roaster-ubuntu18.04-ccache,target=/root/.ccache,mode=0755 /etc/roaster/scripts/setup.sh pytorch\nRUN --mount=type=cache,id=roaster-ubuntu18.04-ccache,target=/root/.ccache,mode=0755 /etc/roaster/scripts/setup.sh torchvision\nRUN --mount=type=cache,id=roaster-ubuntu18.04-ccache,target=/root/.ccache,mode=0755 /etc/roaster/scripts/setup.sh apex\n\nFROM \"$STAGE_PREFIX\"stage-dl AS stage-ort\n\nLABEL BUILD_ID=$LABEL_BUILD_ID\nCOPY [\".\", \"/etc/roaster/scripts\"]\nRUN --mount=type=cache,id=roaster-ubuntu18.04-ccache,target=/root/.ccache,mode=0755 /etc/roaster/scripts/setup.sh ort\n\nFROM \"$STAGE_PREFIX\"stage-ort AS stage-edit\n\nLABEL BUILD_ID=$LABEL_BUILD_ID\nCOPY [\".\", \"/etc/roaster/scripts\"]\n\n# Drop mirrors used in build.\nRUN set -e; \\\n    rm -rf ~/.m2/settings.xml;\n\nRUN updatedb\n\nFROM \"$IMAGE_REPO:breakpoint\" AS resume\n\nCOPY [\".\", \"/etc/roaster/scripts\"]\nRUN --mount=type=cache,id=roaster-ubuntu18.04-ccache,target=/root/.ccache,mode=0755 /etc/roaster/scripts/setup.sh\n\nFROM stage-edit\n"
}