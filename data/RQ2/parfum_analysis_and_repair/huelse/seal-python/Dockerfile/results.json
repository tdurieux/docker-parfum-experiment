{
  "startTime": 1674250568251,
  "endTime": 1674250568954,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 76
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 76
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:21.04\n\n# define the folder where our src should exist/ be deposited\nARG SRC=/python-seal\n\n# prevents update and install asking for tz\nENV DEBIAN_FRONTEND=noninteractive\n\n# install dependencies\nRUN apt update && \\\n    apt install --no-install-recommends -y git build-essential cmake python3 python3-dev python3-pip && \\\n    mkdir -p ${SRC} && rm -rf /var/lib/apt/lists/*;\n\n# copy into container requirements and install them before rest of code\nCOPY ./requirements.txt ${SRC}/.\nRUN pip3 install --no-cache-dir -r ${SRC}/requirements.txt\n\n# copy everything into container now that requirements stage is complete\nCOPY . ${SRC}\n\n# setting our default directory to the one specified above\nWORKDIR ${SRC}\n\n# update submodules\nRUN cd ${SRC} && \\\n    git submodule update --init --recursive\n    # git submodule update --remote\n\n# build and install seal + bindings\nRUN cd ${SRC}/SEAL && \\\n    cmake -S . -B build -DSEAL_USE_MSGSL=OFF -DSEAL_USE_ZLIB=OFF -DSEAL_USE_ZSTD=OFF && \\\n    cmake --build build && \\\n    cd ${SRC} && \\\n    python3 setup.py build_ext -i\n\nCMD [\"/usr/bin/python3\"]\n"
}