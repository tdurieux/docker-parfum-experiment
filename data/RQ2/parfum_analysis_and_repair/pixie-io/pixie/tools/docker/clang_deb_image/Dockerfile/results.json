{
  "startTime": 1674255953885,
  "endTime": 1674255955024,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 61
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 23,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 61
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 23,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 61
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 23,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 14
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 23,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 14
      }
    }
  ],
  "repairedDockerfile": "# Copyright 2018- The Pixie Authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n# SPDX-License-Identifier: Apache-2.0\n\nFROM ubuntu:22.04\n\nENV DEBIAN_FRONTEND=noninteractive\nRUN apt-get update -y --fix-missing\nRUN apt-get install --no-install-recommends -y ruby ruby-dev rubygems build-essential && rm -rf /var/lib/apt/lists/*;\nRUN gem install --no-document fpm\n\nRUN apt-get install --no-install-recommends -y bison build-essential cmake flex git libedit-dev \\\n  clang libclang-dev llvm llvm-dev \\\n  python3 python3-distutils swig libncurses5-dev zlib1g-dev libelf-dev subversion \\\n  gcc-multilib && rm -rf /var/lib/apt/lists/*;\n\nENV CC=clang\nENV CXX=clang++\n\nWORKDIR /llvm_all\nRUN git clone --branch llvmorg-14.0.4 --depth 1 https://github.com/llvm/llvm-project.git\n\nWORKDIR /llvm_all/build\nRUN triple=$(gcc -v 2>&1 | grep \"^Target:\" | cut -d ' ' -f 2) && \\\n    cmake -G \"Unix Makefiles\" -DCMAKE_BUILD_TYPE=Release \\\n    -DLLVM_BUILD_DOCS=OFF -DCMAKE_INSTALL_PREFIX=/opt/clang-14.0 \\\n    -DLLVM_INCLUDE_EXAMPLES=OFF \\\n    -DLLVM_BUILD_32_BITS=OFF \\\n    -DLLVM_TARGETS_TO_BUILD=\"BPF;X86;AArch64\" \\\n    -DLLVM_ENABLE_PER_TARGET_RUNTIME_DIR=OFF \\\n    -DLLVM_ENABLE_SPHINX=OFF \\\n    -DLLVM_ENABLE_DOXYGEN=OFF \\\n    -DLLVM_ENABLE_RTTI=ON \\\n    -DCLANG_INCLUDE_TESTS=OFF \\\n    -DLIBCLANG_BUILD_STATIC=ON \\\n    -DLLVM_INCLUDE_TESTS=OFF \\\n    -DLLVM_DEFAULT_TARGET_TRIPLE=${triple} \\\n    -DLLVM_ENABLE_PROJECTS=\"clang;clang-tools-extra;polly;lld;lldb;openmp;libcxx;libcxxabi;compiler-rt\" \\\n    ../llvm-project/llvm\n\n\nRUN make -j $(nproc)\nRUN make -j $(nproc) runtimes\nRUN make install\n\n## We need libclang.a, but the clang build system excludes it during make install.\n#RUN cp -a /llvm_all/build/lib/libclang.a /opt/clang-14.0/lib\n\n\n#######################################################\n# This installs Clang/LLVM with libc++.\n#\n# Since we link Clang/LLVM with our own source code we\n# need it to be built with the same underlying C++\n# library.\n#######################################################\nENV PATH=/opt/clang-14.0/bin:${PATH}\nENV CC=clang\nENV CXX=clang++\n\nWORKDIR /llvm_all/build_libc++\nRUN triple=$(gcc -v 2>&1 | grep \"^Target:\" | cut -d ' ' -f 2) && \\\n    CXXFLAGS=\"-stdlib=libc++\" \\\n    cmake -G \"Unix Makefiles\" -DCMAKE_BUILD_TYPE=Release \\\n    -DLLVM_BUILD_DOCS=OFF -DCMAKE_INSTALL_PREFIX=/opt/clang-14.0-libc++ \\\n    -DLLVM_INCLUDE_EXAMPLES=OFF \\\n    -DLLVM_BUILD_32_BITS=OFF \\\n    -DLLVM_TARGETS_TO_BUILD=\"BPF;X86;AArch64\" \\\n    -DLLVM_ENABLE_PER_TARGET_RUNTIME_DIR=OFF \\\n    -DLLVM_ENABLE_SPHINX=OFF \\\n    -DLLVM_ENABLE_DOXYGEN=OFF \\\n    -DLLVM_ENABLE_RTTI=ON \\\n    -DCLANG_INCLUDE_TESTS=OFF \\\n    -DLIBCLANG_BUILD_STATIC=ON \\\n    -DLLVM_INCLUDE_TESTS=OFF \\\n    -DLLVM_DEFAULT_TARGET_TRIPLE=${triple} \\\n    -DLLVM_ENABLE_PROJECTS=\"clang;clang-tools-extra;polly;lld;lldb;openmp;libcxx;libcxxabi;compiler-rt\" \\\n  ../llvm-project/llvm\n\nRUN make -j $(nproc)\nRUN make -j $(nproc) runtimes\nRUN make install\n\n# LSIF is broken with clang-14\n# # Add clang-lsif for our image. This needs to be patched for the version of clang being used.\n# WORKDIR /tmp\n# RUN git clone https://github.com/pixie-io/lsif-clang.git\n#\n# WORKDIR /tmp/lsif-clang\n# RUN git checkout llvm-11\n# RUN cmake -B build -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/opt/clang-14.0\n# RUN make -C build -j $(nproc)\n# RUN make -C build install\n\nWORKDIR /opt\nVOLUME /image\nENV deb_name clang-14.0-pl1.deb\nCMD [\"sh\", \"-c\",  \"fpm -p /image/${deb_name} \\\n        -s dir -t deb -n clang-14.0 -v 14.0-pl1 --prefix /opt clang-14.0 clang-14.0-libc++\"]\n"
}