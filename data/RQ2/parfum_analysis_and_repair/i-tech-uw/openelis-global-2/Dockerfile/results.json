{
  "startTime": 1674216132716,
  "endTime": 1674216134308,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 40
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "##\n# Build Stage\n#\nFROM maven:3-jdk-11 as build\n\nRUN apt-get -y update && apt-get -y --no-install-recommends install git apache2-utils && rm -rf /var/lib/apt/lists/*;\n\n##\n# Copy Source Code\n#\nADD .git /build/.git\nADD .gitmodules /build/.gitmodules\nADD ./pom.xml /build/pom.xml\nADD ./tools /build/tools\nADD ./src /build/src\nADD ./install /build/install\nADD ./dev /build/dev\n\nWORKDIR /build\n\n##\n# Checkout Dependencies\n#\nRUN git submodule update --init --recursive\n\nARG DEFAULT_PW=\"adminADMIN!\"\n\n# OE Default Password\nRUN ./install/createDefaultPassword.sh -c -p ${DEFAULT_PW}\n\n##\n# Build DataExport\n#\nWORKDIR /build/dataexport\n\nRUN mvn clean install -DskipTests\n\nWORKDIR /build\n\nRUN\tmvn clean install -DskipTests\n\n##\n# Run Stage\n#\nFROM tomcat:8.5-jdk11\n\nADD install/createDefaultPassword.sh ./\n\n\n#Clean out unneccessary files from tomcat (especially pre-existing applications)\nRUN rm -rf /usr/local/tomcat/webapps/* \\ \n    /usr/local/tomcat/conf/Catalina/localhost/manager.xml\n\n#Deploy the war into tomcat image and point root to it\nADD install/tomcat-resources/ROOT.war /usr/local/tomcat/webapps/ROOT.war\nCOPY --from=build /build/target/OpenELIS-Global.war /usr/local/tomcat/webapps/OpenELIS-Global.war\n\n#rewrite cataline.properties with our catalina.properties so it contains:\n#    org.apache.catalina.STRICT_SERVLET_COMPLIANCE=true\n#    org.apache.catalina.connector.RECYCLE_FACADES=true\n#    org.apache.catalina.connector.CoyoteAdapter.ALLOW_BACKSLASH=false\n#    org.apache.tomcat.util.buf.UDecoder.ALLOW_ENCODED_SLASH=false\n#    org.apache.coyote.USE_CUSTOM_STATUS_MSG_IN_HEADER=false\nADD install/tomcat-resources/catalina.properties /usr/local/tomcat/conf/catalina.properties\n\n#replace ServerInfo.properties with a less informative one\nRUN mkdir -p /usr/local/tomcat/lib/org/apache/catalina/util\nADD install/tomcat-resources/ServerInfo.properties /usr/local/tomcat/lib/org/apache/catalina/util/ServerInfo.properties\n\n#restrict files\n#GID AND UID must be kept the same as setupTomcat.sh (if using default certificate group)\nRUN groupadd tomcat; \\\n    groupadd tomcat-ssl-cert -g 8443; \\ \n    useradd -M -s /bin/bash -u 8443 tomcat_admin; \\\n    usermod -a -G tomcat,tomcat-ssl-cert tomcat_admin; \\\n    chown -R tomcat_admin:tomcat $CATALINA_HOME; \\\n    chmod g-w,o-rwx $CATALINA_HOME; \\\n    chmod g-w,o-rwx $CATALINA_HOME/conf; \\\n    chmod o-rwx $CATALINA_HOME/logs; \\\n    chmod o-rwx $CATALINA_HOME/temp; \\\n    chmod g-w,o-rwx $CATALINA_HOME/bin; \\\n    chmod g-w,o-rwx $CATALINA_HOME/webapps; \\\n    chmod 770 $CATALINA_HOME/conf/catalina.policy; \\\n    chmod g-w,o-rwx $CATALINA_HOME/conf/catalina.properties; \\\n    chmod g-w,o-rwx $CATALINA_HOME/conf/context.xml; \\\n    chmod g-w,o-rwx $CATALINA_HOME/conf/logging.properties; \\\n    chmod g-w,o-rwx $CATALINA_HOME/conf/server.xml; \\\n    chmod g-w,o-rwx $CATALINA_HOME/conf/tomcat-users.xml; \\\n    chmod g-w,o-rwx $CATALINA_HOME/conf/web.xml\n\nADD install/openelis_healthcheck.sh /healthcheck.sh\nRUN chown tomcat_admin:tomcat /healthcheck.sh; \\\n    chmod 770 /healthcheck.sh; \n\nADD install/docker-entrypoint.sh /docker-entrypoint.sh\nRUN chown tomcat_admin:tomcat /docker-entrypoint.sh; \\\n    chmod 770 /docker-entrypoint.sh;\nUSER tomcat_admin\n\nENTRYPOINT [ \"/docker-entrypoint.sh\" ]\n\n"
}