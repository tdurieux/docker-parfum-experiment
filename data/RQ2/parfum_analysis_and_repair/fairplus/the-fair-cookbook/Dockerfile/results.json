{
  "startTime": 1674251525966,
  "endTime": 1674251527630,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 6,
        "lineEnd": 118,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 134,
        "lineEnd": 134,
        "columnStart": 4,
        "columnEnd": 67
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 146,
        "lineEnd": 146,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 157,
        "lineEnd": 157,
        "columnStart": 4,
        "columnEnd": 83
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 176,
        "lineEnd": 176,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 189,
        "lineEnd": 189,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "## ------------ first stage: --------------\n##\n\n# Use a small linux with Python\nFROM python:3.7.8-slim-buster AS jupyterbookbuilder-base-image\n\nRUN pip install --no-cache-dir \\\n            alabaster==0.7.12 \\\n            anyio==2.2.0 \\\n            argon2-cffi==20.1.0 \\\n            async-generator==1.10 \\\n            attrs==20.3.0 \\\n            Babel==2.9.0 \\\n            backcall==0.2.0 \\\n            beautifulsoup4==4.9.3 \\\n            bleach==3.3.0 \\\n            certifi==2020.12.5 \\\n            cffi==1.14.5 \\\n            chardet==4.0.0 \\\n            click==7.1.2 \\\n            colorama==0.4.4 \\\n            decorator==5.0.7 \\\n            defusedxml==0.7.1 \\\n            deprecation==2.1.0 \\\n            docutils==0.16 \\\n            entrypoints==0.3 \\\n            gitdb==4.0.7 \\\n            GitPython==3.1.14 \\\n            idna==2.10 \\\n            imagesize==1.2.0 \\\n            importlib-metadata==4.0.1 \\\n            ipykernel==5.5.3 \\\n            ipython==7.31.1 \\\n            ipython-genutils==0.2.0 \\\n            ipywidgets==7.6.3 \\\n            jedi==0.18.0 \\\n            Jinja2==2.11.3 \\\n            jsonschema==3.2.0 \\\n            jupyter-book==0.10.2 \\\n            jupyter-cache==0.4.2 \\\n            jupyter-client==6.1.12 \\\n            jupyter-core==4.7.1 \\\n            jupyter-packaging==0.9.2 \\\n            jupyter-server==1.15.4 \\\n            jupyter-server-mathjax==0.2.2 \\\n            jupyter-sphinx==0.3.1 \\\n            jupyterbook-latex==0.2.0 \\\n            jupyterlab-widgets==1.0.0 \\\n            jupytext==1.10.3 \\\n            latexcodec==2.0.1 \\\n            linkify-it-py==1.0.1 \\\n            markdown-it-py==0.6.2 \\\n            MarkupSafe==1.1.1 \\\n            mdit-py-plugins==0.2.6 \\\n            mistune==0.8.4 \\\n            myst-nb==0.12.0 \\\n            myst-parser==0.13.6 \\\n            nbclient==0.5.3 \\\n            nbconvert==5.6.1 \\\n            nbdime==3.1.1 \\\n            nbformat==5.1.3 \\\n            nest-asyncio==1.5.1 \\\n            nested-lookup==0.2.22 \\\n            notebook >=6.4.1 \\\n            packaging==20.9 \\\n            pandocfilters==1.4.3 \\\n            parso==0.8.2 \\\n            pexpect==4.8.0 \\\n            pickleshare==0.7.5 \\\n            prometheus-client==0.10.1 \\\n            prompt-toolkit==3.0.18 \\\n            ptyprocess==0.7.0 \\\n            pybtex==0.24.0 \\\n            pybtex-docutils==1.0.0 \\\n            pycparser==2.20 \\\n            pydata-sphinx-theme==0.4.3 \\\n            Pygments==2.8.1 \\\n            pyparsing==2.4.7 \\\n            pyrsistent==0.17.3 \\\n            python-dateutil==2.8.1 \\\n            pytz==2021.1 \\\n            PyYAML==5.4.1 \\\n            pyzmq==22.0.3 \\\n            requests==2.25.1 \\\n            Send2Trash==1.5.0 \\\n            six==1.15.0 \\\n            smmap==4.0.0 \\\n            sniffio==1.2.0 \\\n            snowballstemmer==2.1.0 \\\n            soupsieve==2.2.1 \\\n            Sphinx==3.5.4 \\\n            sphinx-book-theme==0.0.42 \\\n            sphinx-comments==0.0.3 \\\n            sphinx-copybutton==0.3.1 \\\n            sphinx-panels==0.5.2 \\\n            sphinx-thebe==0.0.8 \\\n            sphinx-togglebutton==0.2.3 \\\n            sphinxcontrib-applehelp==1.0.2 \\\n            sphinxcontrib-bibtex==2.1.0 \\\n            sphinxcontrib-devhelp==1.0.2 \\\n            sphinxcontrib-htmlhelp==1.0.3 \\\n            sphinxcontrib-jsmath==1.0.1 \\\n            sphinxcontrib-qthelp==1.0.3 \\\n            sphinxcontrib-serializinghtml==1.1.4 \\\n            sphinx-sitemap==2.2.0 \\\n            SQLAlchemy==1.3.24 \\\n            terminado==0.9.4 \\\n            testpath==0.4.4 \\\n            toml==0.10.2 \\\n            tomlkit==0.7.0 \\\n            tornado==6.1 \\\n            traitlets==5.0.5 \\\n            uc-micro-py==1.0.1 \\\n            urllib3==1.26.4 \\\n            wcwidth==0.2.5 \\\n            webencodings==0.5.1 \\\n            widgetsnbextension==3.5.1 \\\n            zipp==3.4.1 \\\n            pygments-csv-lexer==0.1.3\n\n# Document\nRUN pip freeze > /pip_freeze_actual.txt\n\n# Print\nRUN cat /pip_freeze_actual.txt\n\n## ------------ next stage: --------------\n## build the images from mermaid files\n\nFROM alpine as orchestrator\n\nCOPY ./ ./\n\nRUN find . -iname \"*.mmd\" > list_of_all_mermaid_files.txt\nRUN tar c -f all_mermaid_files.tar -T list_of_all_mermaid_files.txt && rm all_mermaid_files.tar\nRUN ls -lh all_mermaid_files.tar\n\n## ------------ next stage: --------------\n## build the images from mermaid files\n\nFROM minlag/mermaid-cli:8.13.4 as imageconverter\nWORKDIR /home/mermaidcli\n\nRUN echo \"{\\\"args\\\": [ \\\"--no-sandbox\\\" ] }\" > puppeteer-config.json\n\nCOPY --from=orchestrator all_mermaid_files.tar list_of_all_mermaid_files.txt ./\nRUN tar -xf all_mermaid_files.tar && rm all_mermaid_files.tar\nRUN cat list_of_all_mermaid_files.txt | while read line; do echo $line && ./node_modules/.bin/mmdc -p puppeteer-config.json -i $line -w 800 -o $line.png ; done\nRUN cat list_of_all_mermaid_files.txt | while read line; do echo $line && ./node_modules/.bin/mmdc -p puppeteer-config.json -i $line -w 1600 -o $line.hi-res.png ; done\nRUN cat list_of_all_mermaid_files.txt | while read line; do echo $line && ./node_modules/.bin/mmdc -p puppeteer-config.json -i $line -w 400 -o $line.lo-res.png  ; done\nRUN cat list_of_all_mermaid_files.txt | while read line; do echo $line && ./node_modules/.bin/mmdc -p puppeteer-config.json -i $line -o $line.svg                ; done\n\nRUN cp list_of_all_mermaid_files.txt list_of_files_to_copy.txt\nRUN sed 's/$/.png/' list_of_all_mermaid_files.txt >> list_of_files_to_copy.txt\nRUN sed 's/$/.hi-res.png/' list_of_all_mermaid_files.txt >> list_of_files_to_copy.txt\nRUN sed 's/$/.lo-res.png/' list_of_all_mermaid_files.txt >> list_of_files_to_copy.txt\nRUN sed 's/$/.svg/' list_of_all_mermaid_files.txt >> list_of_files_to_copy.txt\nRUN tar -cf ./all_raw_and_converted_mermaid_images.tar -T list_of_files_to_copy.txt && rm ./all_raw_and_converted_mermaid_images.tar\n\n\n## ------------ next stage: --------------\n## load the content\n\nFROM jupyterbookbuilder-base-image AS jupyterbookbuilder\n\n# Set the working directory. You can customize this path to be equivalent to your computer's\n# directory structure, e.g. if you use an Integrated Development Environment (IDE) which allows you\n# to click on file names from a terminal...  \nWORKDIR /Users/philippe/Documents/git/FAIRplus-org/the-fair-cookbook\n\n# Create an empty folder to prevent failure later on\nRUN mkdir -p ./_build/html\n\n# Copy files\nCOPY ./   ./\nCOPY --from=imageconverter /home/mermaidcli/all_raw_and_converted_mermaid_images.tar .\nRUN tar -xf all_raw_and_converted_mermaid_images.tar && rm all_raw_and_converted_mermaid_images.tar\n\n# Start the actual build\nRUN python -u -c \"import jupyter_book.commands; jupyter_book.commands.main()\" build ./ 2>&1 | tee ./_build/build.log\n\n# Let the build fail if there are errors in the build of the jupyter_book\nRUN grep \"There was an error in building your book. Look above for the cause.\" ./_build/build.log; test $? -eq 1\n\n# Clean the build log from all escape characters used for highlighting text (e.g. bold, red) and the\n# \"interactive\" feel (i.e. going back to start of line and overwrite to create a up-counting progress bar)\nRUN sed \"s,\\x1B\\[[0-9;]*[a-zA-Z],,g\" ./_build/build.log > ./_build/cleaned_build.log\n\n# pack the whole build folder into a gzipped tar file\nRUN tar -cf /out.tar ./_build && rm /out.tar\n\n# output what's in the _build folder, just for the sake of it.\nRUN ls -alh ./_build\n\n## ... all content was converted to html now and sits in WORKDIR/_build\n## ... a build log can be found in WORKDIR/_build/build.log\n"
}