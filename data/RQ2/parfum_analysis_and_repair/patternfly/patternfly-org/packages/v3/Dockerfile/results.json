{
  "startTime": 1674250336293,
  "endTime": 1674250337003,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 37,
        "columnEnd": 52
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 70
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM centos:centos7\n\nRUN yum -y install centos-release-scl; rm -rf /var/cache/yum yum clean all\nRUN yum -y update; yum clean all\nRUN yum install -y rh-git29 rh-ruby23 rh-ruby23-ruby-devel rh-nodejs4; rm -rf /var/cache/yum yum clean all\n\nRUN source /opt/rh/rh-nodejs4/enable \\\n    && if [[ `npm -v` != 3* ]]; then \\\n    npm i -g npm@3; npm cache clean --force; fi \\\n    && npm --version\n\nRUN useradd -ms /bin/bash patternfly\n\nSHELL [\"/bin/bash\", \"--login\", \"-c\"]\nUSER patternfly\nENV HOME /home/patternfly\nWORKDIR $HOME\n\nRUN mkdir $HOME/.ssh \\\n    && chmod 700 $HOME/.ssh \\\n    && ssh-keyscan -t rsa github.com >> $HOME/.ssh/known_hosts\n\nRUN echo 'source /opt/rh/rh-git29/enable' >> $HOME/.bash_profile\nRUN echo 'source /opt/rh/rh-ruby23/enable' >> $HOME/.bash_profile\nRUN echo 'source /opt/rh/rh-nodejs4/enable' >> $HOME/.bash_profile\n\nRUN gem install bundler --no-ri --no-rdoc\n\n# Create app directory\nRUN mkdir patternfly-org\nWORKDIR $HOME/patternfly-org\n\nCOPY Gemfile Gemfile.lock ./\nRUN bundle install\n\nCOPY package.json ./\nRUN npm install && npm cache clean --force;\n\nCOPY . .\n\nRUN npm run grunt -- build\n\nEXPOSE 9002\n\nENTRYPOINT [\"/bin/bash\", \"-l\", \"-c\"]\nCMD [ \"npm run grunt -- connect:staging watch\" ]\n"
}