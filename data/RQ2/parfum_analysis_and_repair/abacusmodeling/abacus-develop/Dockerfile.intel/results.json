{
  "startTime": 1674248653434,
  "endTime": 1674248654146,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 22,
        "columnEnd": 95
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 22,
        "columnEnd": 95
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 24
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:bullseye-slim\n\nRUN apt-get update && apt-get install --no-install-recommends -y bc cmake git gnupg gcc g++ python3 sudo wget vim unzip && rm -rf /var/lib/apt/lists/*;\n\n# Following steps by https://software.intel.com/content/www/us/en/develop/documentation/installation-guide-for-intel-oneapi-toolkits-linux/top/installation/install-using-package-managers/apt.html .\nRUN cd /tmp && \\\n\twget https://apt.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB && \\\n\tapt-key add GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB && \\\n\trm GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB && \\\n\techo \"deb https://apt.repos.intel.com/oneapi all main\" | sudo tee /etc/apt/sources.list.d/oneAPI.list\n\n# To save disk space, only install the required components, but not the whole intel-hpckit.\nRUN apt-get update --allow-unauthenticated \\\n\t&& apt-get install --no-install-recommends -y \\\n\t\tintel-oneapi-compiler-dpcpp-cpp-and-cpp-classic \\\n\t\tintel-oneapi-compiler-fortran \\\n\t\tintel-oneapi-mkl-devel \\\n\t\tintel-oneapi-mpi-devel && rm -rf /var/lib/apt/lists/*;\n\n# These environment variables are the most essential part generated by `source /opt/intel/oneapi/setvars.sh`.\n# It is recommended to do it again if this docker image is used for development.\nENV I_MPI_ROOT=/opt/intel/oneapi/mpi/latest \\\n\tLIBRARY_PATH=/opt/intel/oneapi/tbb/latest/env/../lib/intel64/gcc4.8:/opt/intel/oneapi/mpi/latest//libfabric/lib:/opt/intel/oneapi/mpi/latest//lib/release:/opt/intel/oneapi/mpi/latest//lib:/opt/intel/oneapi/mkl/latest/lib/intel64:/opt/intel/oneapi/compiler/latest/linux/compiler/lib/intel64_lin:/opt/intel/oneapi/compiler/latest/linux/lib \\\n\tLD_LIBRARY_PATH=/opt/intel/oneapi/tbb/latest/env/../lib/intel64/gcc4.8:/opt/intel/oneapi/mpi/latest//libfabric/lib:/opt/intel/oneapi/mpi/latest//lib/release:/opt/intel/oneapi/mpi/latest//lib:/opt/intel/oneapi/mkl/latest/lib/intel64:/opt/intel/oneapi/debugger/10.1.2/gdb/intel64/lib:/opt/intel/oneapi/debugger/10.1.2/libipt/intel64/lib:/opt/intel/oneapi/debugger/10.1.2/dep/lib:/opt/intel/oneapi/compiler/latest/linux/lib:/opt/intel/oneapi/compiler/latest/linux/lib/x64:/opt/intel/oneapi/compiler/latest/linux/lib/emu:/opt/intel/oneapi/compiler/latest/linux/compiler/lib/intel64_lin \\\n\tPATH=/opt/intel/oneapi/mpi/latest//libfabric/bin:/opt/intel/oneapi/mpi/latest//bin:/opt/intel/oneapi/mkl/latest/bin/intel64:/opt/intel/oneapi/dev-utilities/latest/bin:/opt/intel/oneapi/debugger/10.1.2/gdb/intel64/bin:/opt/intel/oneapi/compiler/latest/linux/bin/intel64:/opt/intel/oneapi/compiler/latest/linux/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin \\\n\tMKLROOT=/opt/intel/oneapi/mkl/latest \\\n\tI_MPI_ROOT=/opt/intel/oneapi/mpi/latest\n\n# Using the Intel Compilers with mpi wrapper.\n# Further test on oneAPI Compilers needed: icx, icpx, ifx\nENV CC=/opt/intel/oneapi/mpi/latest/bin/mpiicc \\\n\tCXX=/opt/intel/oneapi/mpi/latest/bin/mpiicpc \\\n\tFC=/opt/intel/oneapi/mpi/latest/bin/mpiifort\n\nSHELL [\"/bin/bash\", \"-c\"]\nRUN source /opt/intel/oneapi/setvars.sh \\\n\t&& cd /tmp \\\n\t&& wget https://elpa.mpcdf.mpg.de/software/tarball-archive/Releases/2021.05.002/elpa-2021.05.002.tar.gz \\\n\t&& tar xzf elpa-2021.05.002.tar.gz  && rm elpa-2021.05.002.tar.gz \\\n\t&& cd elpa-2021.05.002 && mkdir build && cd build \\\n\t&& ../configure FCFLAGS=\"-qmkl=cluster\" \\\n\t&& make -j8 \\\n\t&& make PREFIX=/usr/local install \\\n\t&& ln -s /usr/local/include/elpa-2021.05.002/elpa /usr/local/include/ \\\n\t&& cd /tmp && rm -rf elpa-2021.05.002\n\nRUN cd /tmp \\\n\t&& git clone https://github.com/USCiLab/cereal.git \\\n\t&& cp -r cereal/include /usr/local \\\n\t&& rm -rf cereal\n"
}