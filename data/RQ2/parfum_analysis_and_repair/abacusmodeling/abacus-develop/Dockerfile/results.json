{
  "startTime": 1674255850754,
  "endTime": 1674255851366,
  "originalSmells": [
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 18,
        "columnEnd": 192
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# To build this Dockerfile, run `docker build -t abacus - < Dockerfile`.\n# Pull image with `docker pull ghcr.io/deepmodeling/abacus:latest`.\nFROM ubuntu:latest\nRUN apt update && apt install -y --no-install-recommends libopenblas-dev liblapack-dev libscalapack-mpi-dev libelpa-dev libfftw3-dev libcereal-dev libxc-dev g++ make cmake bc time sudo vim git && rm -rf /var/lib/apt/lists/*;\n# If you wish to use the LLVM compiler, replace 'g++' above with 'clang libomp-dev'.\nRUN GIT_SSL_NO_VERIFY=true git clone https://github.com/deepmodeling/abacus-develop.git --depth 1 && cd abacus-develop && cmake -B build && cmake --build build -j`nproc` && cmake --install build && cd .. && rm -rf abacus-develop\n# If you have trouble cloning repo, replace \"github.com\" with \"gitee.com\".\nENV OMPI_ALLOW_RUN_AS_ROOT=1 OMPI_ALLOW_RUN_AS_ROOT_CONFIRM=1 OMPI_MCA_btl_vader_single_copy_mechanism=none\nCMD mpirun --use-hwthread-cpus abacus\n\n# To run ABACUS built by this image with all available threads, execute `docker run -v <host>:<wd> -w <wd/input> abacus`.\n# Replace '<host>' with the path to all files(including pseudopotential files), '<wd>' with a path to working directory, and '<wd/input>' with the path to input folder(containing 'INPUT', 'STRU', etc.).\n# e.g. after clone the repo to `$HOME` and pulled this image, execute `docker run -v ~/abacus-develop/tests/integrate:/workspace -w /workspace/101_PW_15_f_pseudopots abacus`.\n# To run ABACUS with a given MPI process number, execute `docker run -v <host>:<wd> -w <wd/input> -it --entrypoint mpirun abacus -np <processes> abacus`. Note: the first \"abacus\" is the name of the image, the second \"abacus\" is the name of the executable file. Do not use '--cpus' flag of 'docker run' to specify the number of processes.\n\n# To use this image as developing environment, execute `docker run -it --entrypoint /bin/bash abacus`.\n# Please refer to https://docs.docker.com/engine/reference/commandline/run/ for more details.\n"
}