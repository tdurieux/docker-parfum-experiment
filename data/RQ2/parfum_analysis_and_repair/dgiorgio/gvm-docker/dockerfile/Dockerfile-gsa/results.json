{
  "startTime": 1674246724322,
  "endTime": 1674246725342,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 5,
        "columnEnd": 72
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 21,
        "columnEnd": 60
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG gvmlibs_version\nFROM dgiorgio/gvmlibs:${gvmlibs_version}\n\n# yarn nodejs\nRUN apt update -y && apt install --no-install-recommends -y curl apt-transport-https \\\n  && curl -f --silent --show-error https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \\\n  && echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list \\\n  && curl -fsSL https://deb.nodesource.com/setup_14.x | bash - \\\n  && apt update -y && apt install -y --no-install-recommends --fix-missing \\\n  git cmake gcc g++ make clang-format pkg-config curl libglib2.0-dev \\\n  libgnutls28-dev libmicrohttpd-dev gettext python-polib libxml2-dev \\\n  doxygen xmltoman ssh texlive-latex-extra texlive-fonts-recommended \\\n  && apt install -y --no-install-recommends nodejs yarn \\\n  && rm -rf /var/lib/apt/lists/*\n\n\nARG STAGE\nENV STAGE ${STAGE}\nARG gsad_version\nENV gsad_version ${gsad_version}\nARG gsa_version\nENV gsa_version ${gsa_version}\n\n# gsad\nRUN mkdir -p /root/gvm-src/gsad\nWORKDIR /root/gvm-src/gsad\nCOPY ./src/gsad/commit/${STAGE} ./src/gsad/build.sh ./\nRUN chmod +x ./build.sh && ./build.sh ${STAGE}\n\n# gsa\nRUN mkdir -p /root/gvm-src/gsa\nWORKDIR /root/gvm-src/gsa\nCOPY ./src/gsa/commit/${STAGE} ./src/gsa/build.sh ./\nRUN chmod +x ./build.sh && ./build.sh ${STAGE} \\\n  && apt remove -y git cmake gcc g++ make pkg-config \\\n  && rm -rf /var/lib/apt/lists/*\n\nWORKDIR /\nRUN rm -rf /root/gvm-src\n\nCOPY ./entrypoint/gsa/docker-entrypoint.sh /usr/local/bin\nRUN chmod +x /usr/local/bin/docker-entrypoint.sh\n\nUSER gvm\nWORKDIR /home/gvm\nENTRYPOINT [\"/tini\", \"--\", \"/usr/local/bin/docker-entrypoint.sh\"]\n\nEXPOSE 80 443\n"
}