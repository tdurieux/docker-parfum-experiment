{
  "startTime": 1674246256659,
  "endTime": 1674246258443,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 5,
        "columnEnd": 45
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 7,
        "columnStart": 21,
        "columnEnd": 13
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG gvmlibs_version\nARG openvas_scanner_version\n\nFROM dgiorgio/openvas-scanner:${openvas_scanner_version} AS openvas\nFROM dgiorgio/gvmlibs:${gvmlibs_version}\n\nRUN apt update -y && apt install -y --no-install-recommends --fix-missing \\\n  wget gnupg2 \\\n  && echo 'deb http://apt.postgresql.org/pub/repos/apt/ buster-pgdg main' > /etc/apt/sources.list.d/pgdg.list \\\n  && wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add - && rm -rf /var/lib/apt/lists/*;\nRUN apt update -y && DEBIAN_FRONTEND=noninteractive apt install -y --no-install-recommends --fix-missing \\\n  git cmake gcc make clang-format pkg-config libglib2.0-dev libgnutls28-dev \\\n  libical-dev xml-twig-tools gnutls-bin doxygen xmltoman xsltproc sqlfairy \\\n  libsqlite3-dev texlive-latex-base texlive-latex-extra xmlstarlet zip rpm dpkg \\\n  fakeroot nsis gnupg wget sshpass ssh-client socat snmp smbclient python3 python3-lxml \\\n  haveged cron libpq-dev postgresql-client-11 postgresql-server-dev-11 rsync \\\n  python3-pip dma \\\n  && apt install --no-install-recommends -y texlive-fonts-recommended \\\n  && rm -rf /var/lib/apt/lists/*\n\n# gvmd\nARG STAGE\nENV STAGE ${STAGE}\nARG gvmd_version\nENV gvmd_version ${gvmd_version}\n\nRUN mkdir -p /root/gvm-src/gvmd\nWORKDIR /root/gvm-src/gvmd\nCOPY ./src/gvmd/commit/${STAGE} ./src/gvmd/build.sh ./\nRUN chmod +x ./build.sh && ./build.sh ${STAGE} \\\n  && apt remove -y git cmake gcc make clang-format pkg-config \\\n  && rm -rf /var/lib/apt/lists/*\n\nWORKDIR /\nRUN rm -rf /root/gvm-src\n\n# install https://github.com/kolypto/j2cli\nRUN python3 -m pip install --upgrade pip \\\n  && python3 -m pip install --upgrade j2cli setuptools\n# config smtp\nCOPY ./src/gvmd/config/dma.conf.j2 ./src/gvmd/config/auth.conf.j2 /etc/dma/\n\nCOPY ./entrypoint/gvmd/docker-entrypoint.sh ./src/gvmd/scripts/* /usr/local/bin/\nRUN chmod 755 /usr/local/bin/*\n\nCOPY --from=openvas /usr/local/bin/greenbone-nvt-sync /usr/local/bin/\n\nUSER gvm\nWORKDIR /home/gvm\nENTRYPOINT [\"/tini\", \"--\", \"/usr/local/bin/docker-entrypoint.sh\"]\n\nVOLUME [\"/var/lib/gvm\"]\nEXPOSE 9390\n"
}