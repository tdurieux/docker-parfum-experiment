{
  "startTime": 1674215499296,
  "endTime": 1674215500063,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 95
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 95
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM pypy:2.7-jessie\n\nWORKDIR /app\n\nRUN addgroup -gid 1001 app && useradd -g app --shell /usr/sbin/nologin --uid 1001 app\n# run the server by default\nENTRYPOINT [\"/app/docker-entrypoint.sh\"]\nCMD [\"server\"]\n\nCOPY ./requirements.txt /app/requirements.txt\nCOPY ./dev-requirements.txt /app/dev-requirements.txt\n\n# install dependencies, cleanup and add libstdc++ back in since\n# we the app needs to link to it\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y build-essential ca-certificates libffi-dev libssl-dev libmysqlclient-dev && \\\n    pip install --no-cache-dir -r dev-requirements.txt && \\\n    apt-get remove -y build-essential gcc && rm -rf /var/lib/apt/lists/*;\n\n# Copy in the whole app after dependencies have been installed & cached\nCOPY . /app\nRUN pypy ./setup.py develop\n\n# run as non priviledged user\nUSER app\n"
}