{
  "startTime": 1674248606919,
  "endTime": 1674248607674,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 21
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:2.7-alpine\n\nWORKDIR /app\n\nRUN addgroup -g 10001 app && \\\n    adduser -D -u 10001 -G app -h /app -s /sbin/nologin app\n\n\n# run the server by default\nENTRYPOINT [\"/app/docker-entrypoint.sh\"]\nCMD [\"server\"]\n\n# install / cache dependencies first\nCOPY requirements.txt /app/requirements.txt\n\n# install dependencies, cleanup and add libstdc++ back in since\n# we the app needs to link to it\nRUN apk add --no-cache --update build-base ca-certificates && \\\n    pip install --no-cache-dir -r requirements.txt && \\\n    apk del --purge build-base gcc && \\\n    apk add --no-cache libstdc++\n\n\n# Copy in the whole app after dependencies have been installed & cached\nCOPY . /app\nRUN python setup.py develop\n\n# De-escalate from root privileges with app user\nUSER app\n"
}