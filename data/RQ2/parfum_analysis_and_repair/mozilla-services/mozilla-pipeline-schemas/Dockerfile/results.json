{
  "startTime": 1674255898124,
  "endTime": 1674255899054,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 60
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 13
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 13
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# --platform=linux/amd64 added to prevent pulling ARM images when run on Apple Silicon\nFROM --platform=linux/amd64 python:3.8-slim-bullseye\nLABEL maintainer=\"Mozilla Data Platform\"\n\n# man directory is removed in upstream debian:slim, but needed by jdk install\nRUN mkdir -p /usr/share/man/man1 && \\\n    apt-get update -qqy && \\\n    apt-get install --no-install-recommends -qqy \\\n        cmake \\\n        diffutils \\\n        gcc \\\n        g++ \\\n        jq \\\n        make \\\n        wget \\\n        git \\\n        openjdk-11-jdk-headless \\\n        maven \\\n        cargo && rm -rf /var/lib/apt/lists/*;\n\n# Install jsonschema-transpiler\nENV PATH=$PATH:/root/.cargo/bin\nRUN cargo install jsonschema-transpiler --version 1.9.0\n\n# Configure git for testing\nRUN git config --global user.email \"mozilla-pipeline-schemas@mozilla.com\"\nRUN git config --global user.name \"Mozilla Pipeline Schemas\"\n\nWORKDIR /app\n\nCOPY --from=mozilla/ingestion-sink:latest /app/ingestion-sink/target /app/target\n\n# Install python dependencies\nCOPY requirements.txt requirements-dev.txt ./\nRUN pip3 install --no-cache-dir --upgrade pip setuptools && \\\n    pip3 install --no-cache-dir -r requirements.txt -r\n\n# Install Java dependencies\nCOPY pom.xml .\nRUN mvn dependency:copy-dependencies\n\nCOPY . /app\n\nRUN pip3 install --no-cache-dir .\nRUN mkdir release && \\\n    cd release && \\\n    cmake .. && \\\n    make\n\nCMD pytest -v\n"
}