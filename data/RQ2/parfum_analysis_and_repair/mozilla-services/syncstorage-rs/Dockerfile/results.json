{
  "startTime": 1674217031398,
  "endTime": 1674217033012,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 186
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM rust:1.60-buster as builder\nWORKDIR /app\nADD . /app\nENV PATH=$PATH:/root/.cargo/bin\n# temp removed --no-install-recommends due to CI docker build issue\nRUN apt-get -q update && \\\n    apt-get -q install -y --no-install-recommends default-libmysqlclient-dev cmake golang-go python3-dev python3-pip python3-setuptools python3-wheel && \\\n    pip3 install --no-cache-dir -r requirements.txt && \\\n    rm -rf /var/lib/apt/lists/*\n\nRUN \\\n    cargo --version && \\\n    rustc --version && \\\n    cargo install --path ./syncstorage --locked --root /app && \\\n    cargo install --path ./syncstorage --locked --root /app --bin purge_ttl\n\nFROM debian:buster-slim\nWORKDIR /app\nCOPY --from=builder /app/requirements.txt /app\n# Due to a build error that occurs with the Python cryptography package, we\n# have to set this env var to prevent the cryptography package from building\n# with Rust. See this link for more information:\n# https://pythonshowcase.com/question/problem-installing-cryptography-on-raspberry-pi\nENV CRYPTOGRAPHY_DONT_BUILD_RUST=1\nRUN \\\n    groupadd --gid 10001 app && \\\n    useradd --uid 10001 --gid 10001 --home /app --create-home app && \\\n    apt-get -q update && \\\n    apt-get -q --no-install-recommends install -y build-essential default-libmysqlclient-dev libssl-dev libffi-dev ca-certificates libcurl4 python3-dev python3-pip python3-setuptools python3-wheel cargo curl jq && \\\n    # The python3-cryptography debian package installs version 2.6.1, but we\n    # we want to use the version specified in requirements.txt. To do this,\n    # we have to remove the python3-cryptography package here.\n    apt-get -q remove -y python3-cryptography && \\\n    pip3 install --no-cache-dir -r /app/requirements.txt && \\\n    rm -rf /var/lib/apt/lists/*\n\nCOPY --from=builder /app/bin /app/bin\nCOPY --from=builder /app/syncstorage/version.json /app\nCOPY --from=builder /app/spanner_config.ini /app\nCOPY --from=builder /app/tools/spanner /app/tools/spanner\nCOPY --from=builder /app/tools/integration_tests /app/tools/integration_tests\nCOPY --from=builder /app/tools/tokenserver/process_account_events.py /app/tools/tokenserver/process_account_events.py\nCOPY --from=builder /app/tools/tokenserver/requirements.txt /app/tools/tokenserver/requirements.txt\nCOPY --from=builder /app/scripts/prepare-spanner.sh /app/scripts/prepare-spanner.sh\nCOPY --from=builder /app/syncstorage/src/db/spanner/schema.ddl /app/schema.ddl\n\nRUN chmod +x /app/scripts/prepare-spanner.sh\nRUN pip3 install --no-cache-dir -r /app/tools/integration_tests/requirements.txt\nRUN pip3 install --no-cache-dir -r /app/tools/tokenserver/requirements.txt\n\nUSER app:app\n\nENTRYPOINT [\"/app/bin/syncstorage\", \"--config=spanner_config.ini\"]\n"
}