{
  "startTime": 1674254241255,
  "endTime": 1674254242551,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 1,
        "columnEnd": 18
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 1,
        "columnEnd": 21
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 86,
        "lineEnd": 86,
        "columnStart": 1,
        "columnEnd": 12
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 100,
        "lineEnd": 100,
        "columnStart": 1,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 20
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "############################################################\n# Dockerfile to build proatac\n############################################################\n\nFROM ubuntu:16.04\n\nMAINTAINER Caleb Lareau; caleblareau@g.harvard.edu\n\n# apt update and install global requirements\nRUN apt-get clean all &&\\\n    apt-get update &&\\\n    apt-get upgrade -y && \\\n    apt-get install --no-install-recommends -y -qq \\\n        autotools-dev \\\n        automake \\\n        cmake \\\n        curl \\\n        fuse \\\n        git \\\n        wget \\\n        zip \\\n        unzip \\\n        libtbb-dev \\\n        openjdk-8-jdk \\\n        build-essential \\\n        r-base \\\n        pkg-config \\\n        python \\\n        python-dev \\\n        python-pip \\\n        python3 \\\n        python3-dev \\\n        python3-pip \\\n        zlib1g-dev \\\n        libncurses5-dev \\\n        libbz2-dev \\\n        liblzma-dev \\\n        libmagic-dev && \\\n    apt-get clean && \\\n    apt-get purge && \\\n\n    # Install python packages\n    pip install --no-cache-dir python-magic && \\\n    pip install --no-cache-dir numpy && \\\n    pip install --no-cache-dir wheel && \\\n    pip install --no-cache-dir setuptools && \\\n\tpip install --no-cache-dir macs2 && \\\n\tpip3 install --no-cache-dir proatac && \\\n\n\trm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* /usr/share/doc/*\n\n### Installing necessary R packages\nRUN Rscript -e 'install.packages(\"devtools\", repos = \"http://cran.us.r-project.org\"); \\\n\t\t\t\tdevtools::install_github(\"caleblareau/BuenColors\")'\n\n### Installing bowtie2\n\nENV VERSION 2.3.0\nENV NAME bowtie2\nENV URL \"https://github.com/BenLangmead/bowtie2/archive/v${VERSION}.tar.gz\"\n\nRUN wget -q -O - $URL | tar -zxv && \\\n    cd ${NAME}-${VERSION} && \\\n    make -j 4 && \\\n    cd .. && \\\n    cp ./${NAME}-${VERSION}/${NAME} /usr/local/bin/ && \\\n    cp ./${NAME}-${VERSION}/${NAME}-* /usr/local/bin/ && \\\n    strip /usr/local/bin/*; true && \\\n\trm -rf ./${NAME}-${VERSION}/\n\n\n\n### Installing samtools/htslib/tabix/bgzip\n\nENV VERSIONH 1.4\nENV NAMEH htslib\nENV URLH \"https://github.com/samtools/${NAMEH}/releases/download/${VERSIONH}/${NAMEH}-${VERSIONH}.tar.bz2\"\n\nENV VERSION 1.4\nENV NAME \"samtools\"\nENV URL \"https://github.com/samtools/${NAME}/releases/download/${VERSION}/${NAME}-${VERSION}.tar.bz2\"\n\nRUN wget -q $URLH && \\\n\tbzip2 -d ${NAMEH}-${VERSIONH}.tar.bz2 && \\\n\ttar -xf ${NAMEH}-${VERSIONH}.tar && \\\n\tcd ${NAMEH}-${VERSIONH} && \\\n\t./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n\tmake -j 4 && \\\n\tcd .. && \\\n\tcp ./${NAMEH}-${VERSIONH}/tabix /usr/local/bin/ && \\\n\tcp ./${NAMEH}-${VERSIONH}/bgzip /usr/local/bin/ && \\\n\tcp ./${NAMEH}-${VERSIONH}/htsfile /usr/local/bin/ && \\\n\tstrip /usr/local/bin/tabix; true && \\\n\tstrip /usr/local/bin/bgzip; true && \\\n\tstrip /usr/local/bin/htsfile; true && \\\n\n\twget -q $URL && \\\n\tbzip2 -d ${NAME}-${VERSION}.tar.bz2 && \\\n\ttar -xf ${NAME}-${VERSION}.tar && \\\n\tcd ${NAME}-${VERSION} && \\\n\t./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n\tmake -j 4 && \\\n\tcd .. && \\\n\tcp ./${NAME}-${VERSION}/${NAME} /usr/local/bin/ && \\\n\tstrip /usr/local/bin/${NAME}; true && \\\n\n\trm -rf ./${NAME}-${VERSION}/ && \\\n\trm -rf ./${NAME}-${VERSION}.tar && \\\n\trm -rf ./${NAMEH}-${VERSIONH}/ && \\\n\trm -rf ./${NAMEH}-${VERSIONH}.tar\n\n\n\n### Installing bedtools\n\nENV VERSION 2.26.0\nENV NAME bedtools2\nENV URL \"https://github.com/arq5x/bedtools2/releases/download/v${VERSION}/bedtools-${VERSION}.tar.gz\"\n\nRUN wget -q -O - $URL | tar -zxv && \\\n\tcd ${NAME} && \\\n\tmake -j 4 && \\\n\tcd .. && \\\n\tcp ./${NAME}/bin/bedtools /usr/local/bin/ && \\\n\tstrip /usr/local/bin/*; true && \\\n\trm -rf ./${NAME}/\n\n# Shouldn't need to update the working directory or copy anything. Maybe do a test like in Ariadne"
}