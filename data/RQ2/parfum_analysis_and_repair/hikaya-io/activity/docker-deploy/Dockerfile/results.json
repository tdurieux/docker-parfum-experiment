{
  "startTime": 1674250803808,
  "endTime": 1674250804958,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 89
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 51
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Set base image\nFROM python:3.7-alpine\n\n# Set working directory\nWORKDIR /app\n\n# Prevents Python from writing pyc files to disc\n# and prevents Python from buffering stdout and stderr\nENV PYTHONDONTWRITEBYTECODE 1\nENV PYTHONUNBUFFERED 1\n\n# Update default packages and install application dependancies\nRUN apk -U update --no-cache\n\n# https://github.com/pyca/cryptography/blob/main/docs/installation.rst#alpine\nRUN apk add --no-cache openssl-dev cargo\n\nRUN apk add --no-cache bash gcc musl-dev jpeg-dev zlib-dev libffi-dev cairo-dev pango-dev gdk-pixbuf && \\\n    apk add --no-cache postgresql-dev gcc python3-dev musl-dev && \\\n    pip install --no-cache-dir --upgrade pip\n\n# Copy all project files\nCOPY . /app\n\n# Fix of https://github.com/pyca/cryptography/issues/5771\n# starting cryptography>=3.5, Rust is required to build it (or a later version of PIP for wheel download)\n# Updating cryptography requries Rust installation\n# In cryptography < 3.5, which we use, it can be disabled using the below env var\nENV CRYPTOGRAPHY_DONT_BUILD_RUST=1\n\n# Make the start file executable and delete installation cache, reduces image size\nRUN pip install --no-cache-dir -r requirements.txt && \\\n    chmod 777  docker-deploy/start_app.sh && \\\n    rm -rf /root/.cache && \\\n    sed -i \"s/EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'/EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'/\" activity/settings/local-sample.py && \\\n    mv /app/activity/settings/local-sample.py /app/activity/settings/local.py\n\n# Set the entry point where the application can be started on\nENTRYPOINT [\"docker-deploy/start_app.sh\"]\n"
}