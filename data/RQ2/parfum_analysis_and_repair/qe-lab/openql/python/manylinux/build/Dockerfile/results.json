{
  "startTime": 1674248406050,
  "endTime": 1674248407175,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 57
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 57
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 93
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 79,
        "lineEnd": 79,
        "columnStart": 4,
        "columnEnd": 101
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Manylinux version to use.\nARG MANYLINUX=2014\nFROM quay.io/pypa/manylinux${MANYLINUX}_x86_64\n\n# Max number of parallel processes to use.\nARG NPROCS=100\nENV NPROCS ${NPROCS}\n\n# Install flex from source (dependency for libqasm and tree-gen).\nRUN mkdir -p flex && \\\n    curl -f -L https://github.com/westes/flex/files/981163/flex-2.6.4.tar.gz | tar xz -C /flex/ --strip-components=1 && \\\n    cd flex && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n    make -j $NPROCS && \\\n    make install && \\\n    cd .. && \\\n    rm -rf flex\n\n# Install bison from source (dependency for libqasm and tree-gen).\nRUN mkdir -p bison && \\\n    curl -f -L ftp://ftp.gnu.org/gnu/bison/bison-3.5.tar.gz | tar xz -C /bison/ --strip-components=1 && \\\n    cd bison && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n    make -j $NPROCS && \\\n    make install && \\\n    cd .. && \\\n    rm -rf bison\n\n# Install glpk from source (dependency for lemon, which is itself a submodule).\nRUN mkdir -p glpk && \\\n    curl -f -L https://ftp.gnu.org/gnu/glpk/glpk-4.35.tar.gz | tar xz -C /glpk/ --strip-components=1 && \\\n    cd glpk && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n    make -j $NPROCS && \\\n    make install && \\\n    cd .. && \\\n    rm -rf glpk\n\n# Install pcre from source (dependency for swig).\nRUN mkdir -p pcre && \\\n    curl -f -L ftp://ftp.pcre.org/pub/pcre/pcre-8.41.tar.bz2 | tar xj -C /pcre/ --strip-components=1 && \\\n    cd pcre && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n    make -j $NPROCS && \\\n    make install && \\\n    cd .. && \\\n    rm -rf pcre\n\n# Install swig from source (python binding generator).\nRUN mkdir -p swig && \\\n    curl -f -L https://netix.dl.sourceforge.net/project/swig/swig/swig-3.0.12/swig-3.0.12.tar.gz | tar xz -C /swig/ --strip-components=1 && \\\n    cd swig && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n    make -j $NPROCS && \\\n    make install && \\\n    cd .. && \\\n    rm -rf swig\n\n# Install auditwheel and patch it with some fixes.\nARG PYTHON_VERSION=36\nENV PYBIN /opt/python/cp${PYTHON_VERSION}-cp${PYTHON_VERSION}*/bin\nRUN ${PYBIN}/pip3 install -U pip auditwheel==3.0.0 && \\\n    echo \"214a215\" > auditwheel.patch && \\\n    echo \">         remove_platforms = list(remove_platforms)\" >> auditwheel.patch && \\\n    echo \"225a227,229\" >> auditwheel.patch && \\\n    echo \">     mod_pyver = os.environ.get('AUDITWHEEL_MOD_PYVER', None)\" >> auditwheel.patch && \\\n    echo \">     if mod_pyver:\" >> auditwheel.patch && \\\n    echo \">         fparts['pyver'] = mod_pyver\" >> auditwheel.patch && \\\n    patch /opt/_internal/cpython-3.6.10/lib/python3.6/site-packages/auditwheel/policy/policy.json auditwheel.patch && \\\n    echo '74a75,80' > auditwheel.patch && \\\n    echo \">             elif pkg_root.endswith('.data'):\" >> auditwheel.patch && \\\n    echo '>                 # If this is a file in the .data section of the wheel, using' >> auditwheel.patch && \\\n    echo '>                 # .libs will not work. In order to not make assumptions about' >> auditwheel.patch && \\\n    echo '>                 # the data dir we place the libs in a subdir of where the' >> auditwheel.patch && \\\n    echo '>                 # binary resides, named `<binary>.libs`.' >> auditwheel.patch && \\\n    echo \">                 dest_dir = pjoin(fn + '.libs')\" >> auditwheel.patch && \\\n    patch /opt/_internal/cpython-3.6.10/lib/python3.6/site-packages/auditwheel/repair.py auditwheel.patch\n\n# Install CMake from a binary package.\nRUN curl -f -L https://github.com/Kitware/CMake/releases/download/v3.1.3/cmake-3.1.3-Linux-x86_64.tar.gz | tar xz -C /usr/ --strip-components=1\n# RUN curl -L https://github.com/Kitware/CMake/releases/download/v3.16.0/cmake-3.16.0-Linux-x86_64.tar.gz | tar xz -C /usr/ --strip-components=1\n\nWORKDIR /src\n\nADD . .\n"
}