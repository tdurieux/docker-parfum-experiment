{
  "startTime": 1674249508455,
  "endTime": 1674249509710,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 2,
        "columnEnd": 48
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 2,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 2,
        "columnEnd": 25
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 2,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 7,
        "columnEnd": 30
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM rpy2/rpy2:latest\n\nMAINTAINER Laurent Gautier <lgautier@gmail.com>\n\nARG DEBIAN_FRONTEND=noninteractive\n\nUSER root\n\n# Installing nodejs and npm is somewhat convoluted.\nRUN \\\n  apt-get update -qq && \\\n  apt-get install --no-install-recommends -y curl && \\\n  apt-get remove -y --purge nodejs npm && \\\n  curl -f -sL https://deb.nodesource.com/setup_11.x | bash - && \\\n  apt-get install --no-install-recommends -y nodejs && \\\n  wget -O - https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - && \\\n  apt-get update -qq && \\\n  sudo apt-get install --no-install-recommends -y yarn && \\\n  rm -rf /var/lib/apt/lists/*\n\nUSER ${NB_USER}\n\n# note: installing ipywidgets requires a follow-up \"jupyter nbextension enable\"\nRUN \\\n  npm install -g configurable-http-proxy && \\\n  pip3 --no-cache-dir install jupyter notebook && \\\n  pip3 --no-cache-dir install jupyterlab && \\\n  jupyter serverextension enable --py jupyterlab --sys-prefix && \\\n  pip3 --no-cache-dir install bokeh && \\\n  pip3 --no-cache-dir install ipywidgets && \\\n  jupyter nbextension enable --py --sys-prefix widgetsnbextension && \\\n  jupyter labextension install @jupyter-widgets/jupyterlab-manager && \\\n  pip3 --no-cache-dir install jupyterhub && \\\n  rm -rf /root/.cache && npm cache clean --force;\n\nENV SHELL /bin/bash\nENV NB_USER jupyteruser\nENV HOME /home/${NB_USER}\nENV NB_UID 1000\n\n# Create user\nRUN useradd -m -s /bin/bash -N -u $NB_UID $NB_USER\n\n# Grant sudo rights to install packages\nRUN echo ${NB_USER} 'ALL=(ALL) NOPASSWD: /usr/bin/apt-get' >> /etc/sudoers\n\n# Add Tini\nARG TINI_VERSION=v0.15.0\nRUN wget --quiet https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini && \\\n    mv tini /usr/local/bin/tini && \\\n    chmod +x /usr/local/bin/tini\n\nUSER $NB_USER\n\n# Setup  home directory and notebook config\nRUN mkdir /home/$NB_USER/work && \\\n    mkdir /home/$NB_USER/.jupyter && \\\n    mkdir /home/$NB_USER/.local && \\\n    echo \"cacert=/etc/ssl/certs/ca-certificates.crt\" > /home/$NB_USER/.curlrc && \\\n    echo \"c.NotebookApp.ip = '0.0.0.0'\" >> /home/$NB_USER/.jupyter/jupyter_notebook_config.py && \\\n    python3.6 -m venv /home/$NB_USER/py36_env && \\\n    echo \"source /home/$NB_USER/py36_env/bin/activate\" >> /home/$NB_USER/.bashrc && \\\n    echo \"echo Python virtual environment activated. Write \\\"deactivate\\\" to exit it.\" >> /home/$NB_USER/.bash\n\nUSER root\n\nWORKDIR ${HOME}\n\nEXPOSE 8888\n\nENTRYPOINT [\"/usr/local/bin/tini\", \"--\"]\nCMD [\"start-notebook.sh\"]\n\n# Add Jupyter script(s) emerging as ad hoc interface\nRUN \\\n  git clone --depth=1 https://github.com/jupyter/docker-stacks.git && \\\n  cd docker-stacks/base-notebook && \\\n  cp start.sh /usr/local/bin/ && \\\n  cp start-notebook.sh /usr/local/bin/ && \\\n  cp start-singleuser.sh /usr/local/bin/ && \\\n  mkdir -p /etc/jupyter/ && \\\n  cp jupyter_notebook_config.py /etc/jupyter/ && \\\n  chown -R \"${NB_USER}\":users /etc/jupyter/ && \\\n  cd ../../ && \\\n  rm -rf docker-stacks\n\nUSER $NB_USER"
}