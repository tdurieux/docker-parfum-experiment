{
  "startTime": 1674253976819,
  "endTime": 1674253977762,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 42,
        "columnEnd": 72
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 37
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:lts as staticfiles\n\nARG BUILD_EXTRAS=production\n\nRUN echo \"\\nℹ️  Building staticfiles with \"${BUILD_EXTRAS}\" dependencies.\\n\"\n\nWORKDIR /app\n\n# Install the JS dependencies\nCOPY package.json package-lock.json Makefile ./\n\nRUN if [ \"$BUILD_EXTRAS\" = \"dev\" ] ; then \\\n npm install --ignore-scripts ; npm cache clean --force; else npm ci --ignore-scripts ; fi\n\n# Copy the client/ directory and compile them. The Python application\n# doesn't need to exist yet.\nCOPY client ./client\n\nRUN mkdir -p dpaste/static\nRUN make css\nRUN make js\n\n# ------------------------------------------------\n\nFROM python:3.6 as build\n\nARG BUILD_EXTRAS=production\n\nENV PORT=8000\n\nRUN echo \"\\nℹ️  Building Django project with \"${BUILD_EXTRAS}\" dependencies.\\n\"\n\nWORKDIR /app\n\n# Upgrade pip, the Image one is quite old.\nRUN pip install --no-cache-dir -U pip\n\n# Copy the dpaste staticfiles to this image\nCOPY --from=staticfiles /app /app/\n\n# Copy only the files necessary to install the dpaste project as an editable\n# package. This improves caching.\nCOPY setup.py setup.cfg ./\nCOPY dpaste/__init__.py dpaste/\nRUN pip install --no-cache-dir -e .[${BUILD_EXTRAS}]\n\n# Copy the rest of the application code\nCOPY . .\n\n# Collect all static files once.\nRUN ./manage.py collectstatic --noinput\n\n# By default run it with pyuwsgi, which is a great production ready\n# server. For development, docker-compose will override it to use the\n# regular Django runserver.\nCMD ./manage.py migrate --noinput && ./manage.py pyuwsgi --http=:${PORT} --logger file:/var/log/uwsgi.log\n\nEXPOSE ${PORT}\n"
}