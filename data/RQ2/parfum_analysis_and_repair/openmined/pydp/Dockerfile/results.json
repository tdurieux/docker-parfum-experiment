{
  "startTime": 1674252120013,
  "endTime": 1674252120937,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 21,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 21,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 14
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Pull base image\nARG PYTHON_VERSION=3.9\nFROM python:${PYTHON_VERSION}-slim-buster\n\n# must be redefined after FROM\nARG PYTHON_VERSION=$PYTHON_VERSION\nARG BAZELISK_VERSION=v1.8.1\nARG BAZELISK_BINARY=bazelisk-linux-amd64\nARG BAZELISK_DOWNLOAD_URL=https://github.com/bazelbuild/bazelisk/releases/download/\n\n# Set environment variables\nENV HOME=/root\nENV PROJECT_DIR=\"${HOME}/PyDP\"\nENV PATH=\"/root/bin:${PATH}\"\nENV DP_SHA=\"5e7cf28bf55ebac52fc65419364388c33ebc01a4\"\n\n# Define working directory\nWORKDIR ${HOME}\n\n# Install apt-get packages\nRUN apt-get update && \\\n    apt-get -y --no-install-recommends install \\\n    sudo \\\n    wget \\\n    zip \\\n    git \\\n    software-properties-common \\\n    gcc \\\n    g++ \\\n    clang-format \\\n    build-essential \\\n    python3-distutils \\\n    pkg-config \\\n    zlib1g-dev && rm -rf /var/lib/apt/lists/*;\n\n# Download and Install Bazelisk\nRUN wget \"${BAZELISK_DOWNLOAD_URL}/${BAZELISK_VERSION}/${BAZELISK_BINARY}\" && \\\r\n    chmod +x ${BAZELISK_BINARY}\n\nRUN ./${BAZELISK_BINARY} --version\n\n# Update pip and setuptools and install poetry\nRUN pip install --no-cache-dir --upgrade pip setuptools wheel && \\\n    pip install --no-cache-dir poetry\n\n# Change working dir\nWORKDIR ${PROJECT_DIR}\n\n# Copy local source over\nCOPY . ${PROJECT_DIR}\n\n# Get google dp dependency\nRUN mkdir -p third_party && \\\r\n    cd third_party && \\\r\n    git clone https://github.com/google/differential-privacy.git && \\\r\n    cd differential-privacy && \\\r\n    git checkout ${DP_SHA}\n\n# Remove unused java code\nRUN rm -rf third_party/differential-privacy/java && \\\r\n    rm -rf third_party/differential-privacy/examples/java\n\nRUN sed -i -e 's/@com_google_cc_differential_privacy//g' third_party/differential-privacy/cc/algorithms/BUILD\n\n# This makes poetry's virtual environment in the project dir\nRUN poetry config virtualenvs.in-project true\n\n# Build the bindings using Bazel and create a python wheel\nRUN poetry env use ${PYTHON_VERSION} && \\\r\n    ${HOME}/${BAZELISK_BINARY} build --config linux src/python:pydp  --verbose_failures\n\nRUN cp -f ./bazel-bin/src/bindings/_pydp.so ./pydp && \\\r\n    rm -rf dist/ && \\\r\n    poetry run python setup.py bdist_wheel && \\\r\n    poetry add dist/*.whl\n\n# This `activates` the virtual env\nENV VIRTUAL_ENV=$PROJECT_DIR/.venv\nENV PATH=\"$VIRTUAL_ENV/bin:$PATH\"\n# Default entrypoint\nCMD [\"/bin/bash\"]\n"
}