{
  "startTime": 1674246097568,
  "endTime": 1674246098659,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 5,
        "columnEnd": 78
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 5,
        "columnEnd": 78
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG boost_version=latest\nFROM build_env_boost:${boost_version}\n\nMAINTAINER Quaternion Risk Management\nLABEL Description=\"Build QuantLib and add to the Boost build environment\"\n\n# Argument for number of cores to use while building\nARG num_cores\n\n# Exclusions are performed by .dockerignore\nCOPY QuantLib /ore/QuantLib\n\nRUN apt-get update \\\n  && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y doxygen graphviz ccache \\\n  && apt-get clean && rm -rf /var/lib/apt/lists/*;\n\nENV PATH=\"/usr/lib/ccache:$PATH\"\nENV CCACHE_DIR=\"/ccache\"\n\n# Need the dos2unix all if building from Windows because the shell\n# scripts fail if there are CRLF present in the files\nRUN cd /ore/QuantLib \\\n  && find -regex \".*\\.\\(sh\\|in\\|ac\\|am\\)\" -exec dos2unix {} ';' \\\n  && mkdir -p build.ql && cd build.ql \\\n  && cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_STANDARD=11 -DCMAKE_CXX_FLAGS=\"-D BOOST_ENABLE_ASSERT_HANDLER\" -DQL_ENABLE_SESSIONS=ON\n\nWORKDIR /ore/QuantLib/build.ql\nRUN --mount=type=cache,target=/ccache/ make -j ${num_cores} \\\n  && make install \\\n  && cd / \\\n  && rm -rf ore \\\n  && ldconfig\n\nCMD bash\n"
}