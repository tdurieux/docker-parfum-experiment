diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/thesys-lab/parity-models/clipper-parm/dockerfiles/ClipperDevDockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/thesys-lab/parity-models/clipper-parm/dockerfiles/ClipperDevDockerfile/repaired.Dockerfile
index dbad27e..d8266c2 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/thesys-lab/parity-models/clipper-parm/dockerfiles/ClipperDevDockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/thesys-lab/parity-models/clipper-parm/dockerfiles/ClipperDevDockerfile/repaired.Dockerfile
@@ -10,8 +10,8 @@ RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-ins
       && curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add - \
       && add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/debian $(lsb_release -cs) stable" \
       && apt-get update \
-      && apt-get install -y docker-ce \
-      && apt-get install -y python python-dev python-pip libsodium18 \
+      && apt-get install --no-install-recommends -y docker-ce \
+      && apt-get install --no-install-recommends -y python python-dev python-pip libsodium18 \
       && rm -rf /var/lib/apt/lists/*
 
 # Install Java using https://github.com/docker-library/openjdk/blob/1506887e16eba85b37dcf0a5ff8c9c2abe3fa9b7/8-jdk/slim/Dockerfile
@@ -41,22 +41,22 @@ ENV JAVA_DEBIAN_VERSION 8u171-b11-1~deb9u1
 # and https://github.com/docker-library/java/issues/19#issuecomment-70546872
 ENV CA_CERTIFICATES_JAVA_VERSION 20170531+nmu1
 RUN set -ex; \
-	\
+
 # deal with slim variants not having man page directories (which causes "update-alternatives" to fail)
 	if [ ! -d /usr/share/man/man1 ]; then \
 		mkdir -p /usr/share/man/man1; \
 	fi; \
-	\
+
 	apt-get update; \
-	apt-get install -y \
+	apt-get install --no-install-recommends -y \
 		openjdk-8-jdk-headless="$JAVA_DEBIAN_VERSION" \
 		ca-certificates-java="$CA_CERTIFICATES_JAVA_VERSION" \
 	; \
 	rm -rf /var/lib/apt/lists/*; \
-	\
+
 # verify that "docker-java-home" returns what we expect
 	[ "$(readlink -f "$JAVA_HOME")" = "$(docker-java-home)" ]; \
-	\
+
 # update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java
 	update-alternatives --get-selections | awk -v home="$(readlink -f "$JAVA_HOME")" 'index($3, home) == 1 { $2 = "manual"; print | "update-alternatives --set-selections" }'; \
 # ... and verify that it actually worked for one of the alternatives we care about
@@ -65,13 +65,13 @@ RUN set -ex; \
 # see CA_CERTIFICATES_JAVA_VERSION notes above
 RUN /var/lib/dpkg/info/ca-certificates-java.postinst configure
 
-RUN pip install cloudpickle==0.5.* pyzmq==17.0.* requests==2.18.* subprocess32==3.2.* scikit-learn==0.19.* \
+RUN pip install --no-cache-dir cloudpickle==0.5.* pyzmq==17.0.* requests==2.18.* subprocess32==3.2.* scikit-learn==0.19.* \
   numpy==1.14.* pyyaml==3.12.* docker==3.1.* kubernetes==6.0.* tensorflow==1.6.* mxnet==1.1.* pyspark==2.3.* \
   xgboost==0.7.* jsonschema==2.6.* psutil==5.4.* prometheus_client
 
 # install PyTorch
-RUN pip install http://download.pytorch.org/whl/cu80/torch-0.3.1-cp27-cp27mu-linux_x86_64.whl \
-      && pip install torchvision 
+RUN pip install --no-cache-dir http://download.pytorch.org/whl/cu80/torch-0.3.1-cp27-cp27mu-linux_x86_64.whl \
+      && pip install --no-cache-dir torchvision
 
 # Install maven
 ARG MAVEN_VERSION=3.5.0
@@ -87,7 +87,7 @@ RUN mkdir -p /usr/share/maven /usr/share/maven/ref \
   && git clone https://github.com/zeromq/jzmq.git /root/jzmq \
   && cd /root/jzmq/jzmq-jni \
   && ./autogen.sh \
-  && ./configure \
+  && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
   && make \
   && make install
 
@@ -96,7 +96,7 @@ ENV MAVEN_CONFIG /root/.m2
 ENV JZMQ_HOME /usr/local/lib/
 
 # Install kubectl
-RUN curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl \
+RUN curl -f -LO https://storage.googleapis.com/kubernetes-release/release/$( curl -f -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl \
       && chmod +x kubectl \
       && mv kubectl /usr/local/bin/