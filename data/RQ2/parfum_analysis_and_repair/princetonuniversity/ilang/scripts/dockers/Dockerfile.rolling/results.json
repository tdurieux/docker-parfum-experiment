{
  "startTime": 1674255885262,
  "endTime": 1674255886279,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 4,
        "columnEnd": 39
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:bionic as builder\n\n# var\nENV VIRT_ENV ilang-env\nENV BUILD_ROOT /ibuild\nENV BUILD_PREF $BUILD_ROOT/$VIRT_ENV\n\n# root dir\nWORKDIR $BUILD_ROOT\n\n# build packages\nRUN apt update && DEBIAN_FRONTEND=noninteractive apt install --yes --no-install-recommends \\\n    bison \\\n    build-essential \\\n    cmake \\\n    curl \\\n    expect \\\n    flex \\\n    gawk \\\n    git \\\n    graphviz \\\n    libboost-all-dev \\\n    libgmp-dev \\\n    libreadline-dev \\\n    libffi-dev \\\n    libmpfr-dev \\\n    libmpc-dev \\\n    pkg-config \\\n    python3 \\\n    python3-pip \\\n    python3-setuptools \\\n    tcl-dev \\\n    vim \\\n    wget \\\n    xdot \\\n    && rm -rf /var/lib/apt/lists/*\n\n# portable build result\nWORKDIR $BUILD_ROOT\nRUN pip3 install --no-cache-dir virtualenv\nRUN virtualenv $VIRT_ENV\n\n# z3\nENV Z3_DIR $BUILD_ROOT/z3\nWORKDIR $BUILD_ROOT\nADD https://api.github.com/repos/Z3Prover/z3/git/refs/heads/master z3_version.json\nRUN git clone https://github.com/Z3Prover/z3.git $Z3_DIR\nWORKDIR $Z3_DIR\nRUN python scripts/mk_make.py --prefix $BUILD_PREF\nWORKDIR $Z3_DIR/build\nRUN make -j\"$(nproc)\" && \\\n    make install\n\n# Yosys\nENV YOSYS_DIR $BUILD_ROOT/yosys\nWORKDIR $BUILD_ROOT\nADD https://api.github.com/repos/cliffordwolf/yosys/git/refs/heads/master yosys_version.json\nRUN git clone https://github.com/YosysHQ/yosys.git $YOSYS_DIR\nWORKDIR $YOSYS_DIR\nRUN make config-gcc && \\\n    make -j\"$(nproc)\" && \\\n    PREFIX=$BUILD_PREF make install\n\n# CoSA\nENV COSA_DIR $BUILD_ROOT/CoSA\nWORKDIR $BUILD_ROOT\nADD https://api.github.com/repos/cristian-mattarei/CoSA/git/refs/heads/master cosa_version.json\nRUN git clone https://github.com/cristian-mattarei/CoSA.git $COSA_DIR\nWORKDIR $COSA_DIR\nRUN $BUILD_PREF/bin/pip3 install --no-cache-dir -e .\n\n# PySMT - Boolector\nWORKDIR $BUILD_ROOT\nRUN wget https://raw.githubusercontent.com/Bo-Yuan-Huang/pysmt/master/pysmt/cmd/installers/btor.py\nRUN mv btor.py $BUILD_PREF/lib/python3.6/site-packages/pysmt/cmd/installers/btor.py\nRUN wget https://raw.githubusercontent.com/Bo-Yuan-Huang/pysmt/master/pysmt/solvers/btor.py\nRUN mv btor.py $BUILD_PREF/lib/python3.6/site-packages/pysmt/solvers/btor.py\nRUN $BUILD_PREF/bin/pip3 install --no-cache-dir cython\n\n# ILAng\nENV ILANG_DIR $BUILD_ROOT/ILAng\nWORKDIR $BUILD_ROOT\nADD https://api.github.com/repos/Bo-Yuan-Huang/ILAng/git/refs/heads/master ilang_version.json\nRUN git clone --depth=1 https://github.com/Bo-Yuan-Huang/ILAng.git $ILANG_DIR\nWORKDIR $ILANG_DIR\nRUN mkdir -p build\nWORKDIR $ILANG_DIR/build\nRUN cmake .. -DCMAKE_INSTALL_PREFIX=\"$BUILD_PREF\" -DILANG_INSTALL_DEV=ON && \\\n    make -j\"$(nproc)\" && \\\n    make install\n\n# template-ila (example)\nENV EXAMPLE_DIR $BUILD_ROOT/example\nWORKDIR $BUILD_ROOT\nADD https://api.github.com/repos/PrincetonUniversity/template-ila/git/refs/heads/master template_version.json\nRUN git clone --depth=1 https://github.com/PrincetonUniversity/template-ila.git $EXAMPLE_DIR\nWORKDIR $EXAMPLE_DIR\nRUN $BUILD_PREF/bin/python3 script/init.py example\nRUN rm -rf template\n\n#\n# Deployment\n#\nFROM ubuntu:bionic\n\nRUN apt update && DEBIAN_FRONTEND=noninteractive apt install --yes --no-install-recommends \\\n    bison \\\n    build-essential \\\n    cmake \\\n    curl \\\n    flex \\\n    git \\\n    libboost-all-dev \\\n    libgmp-dev \\\n    libgomp1 \\\n    libmpfr-dev \\\n    libmpc-dev \\\n    pkg-config \\\n    python3 \\\n    python3-pip \\\n    tcl-dev \\\n    vim \\\n    wget \\\n    && rm -rf /var/lib/apt/lists/*\n\nENV VIRT_ENV ilang-env\nENV BUILD_ROOT /ibuild\nENV BUILD_PREF $BUILD_ROOT/$VIRT_ENV\n\nWORKDIR /root/workspace\n\nRUN echo \"source $BUILD_PREF/bin/activate\" >> init.sh\nRUN echo \"export CMAKE_PREFIX_PATH=$BUILD_PREF:\\$CMAKE_PREFIX_PATH\" >> init.sh\nRUN echo \"cd $(pwd)\" >> init.sh\n\n# configure files\nCOPY --from=builder $BUILD_PREF $BUILD_PREF\nCOPY --from=builder $BUILD_ROOT/CoSA/ $BUILD_ROOT/CoSA/\nCOPY --from=builder $BUILD_ROOT/example/ ./example/\n\n# done\nCMD echo \"run 'source init.sh' to start\" && /bin/bash\n"
}