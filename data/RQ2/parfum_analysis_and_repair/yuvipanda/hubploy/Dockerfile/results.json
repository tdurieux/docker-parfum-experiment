{
  "startTime": 1674255183474,
  "endTime": 1674255184100,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 117
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 95
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 103
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 64
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.8-slim-buster\n\n# Software in Dockerfile to manually bump versions on:\n# - gcloud: https://cloud.google.com/sdk/docs/downloads-versioned-archives\n# - helm: https://github.com/helm/helm/releases\n# - sops: https://github.com/mozilla/sops/releases\n\nRUN apt-get update \\\n && apt-get install --yes --no-install-recommends \\\n        amazon-ecr-credential-helper \\\n        curl \\\n        file \\\n        git \\\n        git-crypt \\\n        unzip \\\n && rm -rf /var/lib/apt/lists/*\n\n# Install gcloud CLI\n# Force gcloud to run on python3 ugh\nENV CLOUDSDK_PYTHON python3\nENV PATH=/opt/google-cloud-sdk/bin:${PATH}\nRUN curl -f -sSL https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-298.0.0-linux-x86_64.tar.gz | tar -xzf - -C /opt/\n\n# Install aws CLI\nENV PATH=/opt/awscli/bin:${PATH}\nRUN cd /tmp && \\\n    curl -f -sSL https://d1vvhvl2y92vvt.cloudfront.net/awscli-exe-linux-x86_64.zip -o awscliv2.zip && \\\n    unzip -qq awscliv2.zip && \\\n    ./aws/install -i /opt/awscli -b /opt/awscli/bin\n\n# Install SOPS\nRUN cd /tmp && \\\n    curl -f -sSL https://github.com/mozilla/sops/releases/download/v3.6.1/sops_3.6.1_amd64.deb -o sops.deb && \\\n    dpkg -i ./sops.deb && \\\n    rm sops.deb\n\n# Download helm v2/v3 to helm2/helm3 and symlink helm2 to helm. Make hubploy use\n# a specific binary with HELM_EXECUTABLE environment variable.\nRUN cd /tmp && mkdir helm && \\\n    curl -f -sSL https://get.helm.sh/helm-v2.17.0-linux-amd64.tar.gz | tar -xzf - -C helm && \\\n    mv helm/linux-amd64/helm /usr/local/bin/helm2 && \\\n    curl -f -sSL https://get.helm.sh/helm-v3.4.1-linux-amd64.tar.gz | tar -xzf - -C helm && \\\n    mv helm/linux-amd64/helm /usr/local/bin/helm3 && \\\n    rm -rf helm && \\\n    ln -s /usr/local/bin/helm2 /usr/local/bin/helm\n\n# Setup a virtual environment\nENV VENV_PATH=/opt/venv\nENV PATH=${VENV_PATH}:${PATH}\nRUN python3 -m venv ${VENV_PATH}\n\n# Install hubploy\nCOPY . /srv/repo\nRUN python3 -m pip install --no-cache-dir /srv/repo\n\nENTRYPOINT [\"hubploy\"]\n"
}