{
  "startTime": 1674249837371,
  "endTime": 1674249838492,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 94
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 149
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 88
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 6,
        "columnEnd": 43
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 6,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 6,
        "columnEnd": 43
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 6,
        "columnEnd": 43
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 6,
        "columnEnd": 32
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 6,
        "columnEnd": 43
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# By Andrew Alexander | Source at https://github.com/adrw/docker-cs350-os161\nFROM debian:7\nLABEL Andrew Alexander <me@andrewparadi.com>\n# sets up a Docker image according to the instructions on https://www.student.cs.uwaterloo.ca/~build/common/Install161NonCS.html\n\n# preliminary setup\nRUN apt-get update && \\\n      apt-get install --no-install-recommends build-essential --yes && \\\n      apt-get install --no-install-recommends wget --yes && \\\n      apt-get install --no-install-recommends libncurses5-dev --yes && rm -rf /var/lib/apt/lists/*;\n\n# step 1: downloads all of the files listed in the Step 1 table on the instructions page\nWORKDIR /root/cs350\nRUN bash -c \"wget -r -l 1 -nd -nH -A gz --no-check-certificate https://www.student.cs.uwaterloo.ca/~cs350/common/Install161NonCS.html\" && \\\n      for file in $(ls *.tar.gz); do tar -xf $file; done; rm *.tar.gz && \\\n      apt-get remove wget --yes\n\n# step 2: install binutils for os161\nWORKDIR /root/cs350/binutils-2.17+os161-2.0.1\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --nfp --disable-werror --target=mips-harvard-os161 --prefix=/root/sys161/tools && \\\n      make && \\\n      make install\n\n# step 3: put sys161 stuff on the PATH\nRUN mkdir /root/sys161/bin\nENV PATH /root/sys161/bin:/root/sys161/tools/bin:$PATH\nRUN echo \"export PATH=$PATH\" > $HOME/.bashrc\n\n# step 4: install GCC MIPS cross-compiler\nWORKDIR /root/cs350/gcc-4.1.2+os161-2.0\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" -nfp --disable-shared --disable-threads --disable-libmudflap --disable-libssp --target=mips-harvard-os161 --prefix=/root/sys161/tools && \\\n      make && \\\n      make install\n\n# step 5: install GDB for os161\nWORKDIR /root/cs350/gdb-6.6+os161-2.0\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --target=mips-harvard-os161 --prefix=/root/sys161/tools --disable-werror && \\\n      make && \\\n      make install\n\n# step 6: install bmake for os161\nWORKDIR /root/cs350/bmake\nRUN ./boot-strap --prefix=/root/sys161/tools | sed '1,/Commands to install into \\/root\\/sys161\\/tools\\//d' | bash\n\n# step 7: set up links for toolchain binaries\nRUN mkdir --parents /root/sys161/bin\nWORKDIR /root/sys161/tools/bin\nRUN bash -c 'for i in mips-*; do ln -s /root/sys161/tools/bin/$i /root/sys161/bin/cs350-`echo $i | cut -d- -f4-`; done' && \\\n      ln -s /root/sys161/tools/bin/bmake /root/sys161/bin/bmake\n\n# step 8: install sys161\nWORKDIR /root/cs350/sys161-1.99.06\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/root/sys161 mipseb && \\\n      make && \\\n      make install && \\\n      ln -s /root/sys161/share/examples/sys161/sys161.conf.sample /root/sys161/sys161.conf\n\n# step 9: install os161\n# extracting the archive should be done on the host side\nVOLUME /root/cs350-os161\n\n# cleanup\nRUN bash -c \"rm -rf /root/cs350; mkdir -p /root/cs350\"\n\n# make sure to start commands in the os161 folder\nWORKDIR /root/cs350-os161\n"
}