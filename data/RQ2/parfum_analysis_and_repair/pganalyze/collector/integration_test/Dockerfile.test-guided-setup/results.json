{
  "startTime": 1674254570394,
  "endTime": 1674254571563,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 92
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 26,
        "columnEnd": 55
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 26,
        "columnEnd": 72
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 75
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 75
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 26,
        "columnEnd": 55
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 26,
        "columnEnd": 72
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 75
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 99
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:18.04\n\nARG TARGETARCH\n\n# Systemd-based container setup\nENV container=docker\nRUN apt-get update -qq && apt-get install --no-install-recommends -y -q systemd && rm -rf /var/lib/apt/lists/*;\nCOPY integration_test/container.target /etc/systemd/system/container.target\nRUN ln -sf /etc/systemd/system/container.target /etc/systemd/system/default.target\nSTOPSIGNAL SIGRTMIN+3\nENTRYPOINT [\"/sbin/init\"]\nCMD [\"--log-level=info\"]\n\nENV GOVERSION 1.17\nENV CODE_DIR /collector\nENV PATH $PATH:/usr/local/go/bin\n\n# Packages required for both building and packaging\nRUN apt-get update -qq && apt-get install --no-install-recommends -y -q build-essential git curl && rm -rf /var/lib/apt/lists/*;\n\n# Golang\nRUN curl -f -o go.tar.gz -sSL \"https://golang.org/dl/go${GOVERSION}.linux-${TARGETARCH}.tar.gz\"\nRUN tar -C /usr/local -xzf go.tar.gz && rm go.tar.gz\n\n# Build the collector\nCOPY . $CODE_DIR\nWORKDIR $CODE_DIR\nRUN make build_dist\n\n# Make sure collector state can be saved\nRUN mkdir /var/lib/pganalyze-collector/\n\nRUN cp $CODE_DIR/pganalyze-collector /usr/bin/\nRUN cp $CODE_DIR/pganalyze-collector-helper /usr/bin/\nRUN cp $CODE_DIR/pganalyze-collector-setup /usr/bin/\nRUN cp $CODE_DIR/contrib/pganalyze-collector.conf /etc/pganalyze-collector.conf\n\nRUN sh $CODE_DIR/packages/src/deb-systemd/after-install.sh\n\n# install postgres\nRUN DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install --yes --quiet postgresql && rm -rf /var/lib/apt/lists/*;\nENV PATH $PATH:/usr/lib/postgresql/10/bin\n\n# fake some shared_preload_libraries so we can verify we do not clobber them\nRUN echo 'shared_preload_libraries = sepgsql' >> /etc/postgresql/10/main/postgresql.conf\nRUN echo 'shared_preload_libraries = auth_delay' >> /etc/postgresql/10/main/postgresql.conf\n"
}