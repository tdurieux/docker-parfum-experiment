{
  "startTime": 1674249199235,
  "endTime": 1674249200268,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 92
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 5,
        "columnEnd": 65
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 5,
        "columnEnd": 65
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:stretch\n\nARG TARGETARCH\nENV GOPATH /go\nENV GOVERSION 1.17\nENV CODE_DIR $GOPATH/src/github.com/pganalyze/collector\nENV PATH $PATH:/usr/local/go/bin\nENV ROOT_DIR /root\nENV SOURCE_DIR /source\n\n# Packages required for both building and packaging\nRUN apt-get update -qq \\\n  && apt-get install --no-install-recommends -y -q build-essential curl git ruby ruby-dev && rm -rf /var/lib/apt/lists/*;\n\n# FPM\nRUN gem install fpm -v 1.14.1\n\n# Golang\nRUN curl -f -o go.tar.gz -sSL \"https://golang.org/dl/go${GOVERSION}.linux-${TARGETARCH}.tar.gz\"\nRUN tar -C /usr/local -xzf go.tar.gz && rm go.tar.gz\n\n# Build arguments\nARG VERSION\nARG GIT_VERSION\nENV NAME pganalyze-collector\n\n# Build the collector\nCOPY . $CODE_DIR\nWORKDIR $CODE_DIR\nRUN git checkout ${GIT_VERSION}\nRUN make build_dist\n\n# Update contrib and packages directory beyond the tagged release\nCOPY ./contrib $CODE_DIR/contrib\nCOPY ./packages $CODE_DIR/packages\n\n# Prepare the package source\nRUN mkdir -p $SOURCE_DIR/usr/bin/\nRUN cp $CODE_DIR/pganalyze-collector $SOURCE_DIR/usr/bin/\nRUN cp $CODE_DIR/pganalyze-collector-helper $SOURCE_DIR/usr/bin/\nRUN cp $CODE_DIR/pganalyze-collector-setup $SOURCE_DIR/usr/bin/\nRUN chmod +x $SOURCE_DIR/usr/bin/pganalyze-collector\nRUN chmod +x $SOURCE_DIR/usr/bin/pganalyze-collector-helper\nRUN chmod +x $SOURCE_DIR/usr/bin/pganalyze-collector-setup\nRUN mkdir -p $SOURCE_DIR/etc/\nRUN cp $CODE_DIR/contrib/pganalyze-collector.conf $SOURCE_DIR/etc/pganalyze-collector.conf\nRUN mkdir -p $SOURCE_DIR/usr/share/pganalyze-collector/sslrootcert\nRUN cp $CODE_DIR/contrib/sslrootcert/* $SOURCE_DIR/usr/share/pganalyze-collector/sslrootcert\n\n# Build the package\nWORKDIR $ROOT_DIR\nRUN fpm \\\n  -n $NAME -v ${VERSION} -t deb \\\n  --deb-systemd $CODE_DIR/contrib/systemd/pganalyze-collector.service \\\n  --after-upgrade $CODE_DIR/packages/src/deb-systemd/after-install.sh \\\n  --after-install $CODE_DIR/packages/src/deb-systemd/after-install.sh \\\n  --deb-maintainerscripts-force-errorchecks \\\n  --deb-systemd-enable \\\n  --deb-systemd-auto-start \\\n  --deb-systemd-restart-after-upgrade \\\n  -m \"<team@pganalyze.com>\" --url \"https://pganalyze.com/\" \\\n  --description \"pganalyze statistics collector\" \\\n\t--vendor \"pganalyze\" --license=\"BSD\" \\\n  -s dir -C $SOURCE_DIR etc usr\n\nVOLUME [\"/out\"]\n"
}