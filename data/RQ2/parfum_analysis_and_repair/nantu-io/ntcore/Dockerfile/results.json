{
  "startTime": 1674254002770,
  "endTime": 1674254003548,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 32
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# App Dockerfile\n# Version: 0.0.1\n#\n# Author: NTCore\n# Date: 2020-08-21\n\nFROM node:16 as BUILD_IMAGE\n\n# Install python runtime\nRUN apt update && \\\n    apt install -y --no-install-recommends python3 make g++ && rm -rf /var/lib/apt/lists/*;\n\n# Create app directory\nWORKDIR /usr/src/app\n\n# Bundle app source\nCOPY . .\n\n# Build frontend assets\nWORKDIR /usr/src/app/webapp\nRUN npm install && npm cache clean --force;\nRUN npm run build\n\n# Build server artifact\nWORKDIR /usr/src/app\nRUN npm install && npm cache clean --force;\nRUN npm run build\n\n# Prune the npm dev packages\nRUN npm prune --production\n\n# Stage build\nFROM node:16-slim\n\n# Create app directory\nWORKDIR /usr/src/app\n\nCOPY package*.json ./\n\n# copy from build image\nCOPY --from=BUILD_IMAGE /usr/src/app/dist ./dist\nCOPY --from=BUILD_IMAGE /usr/src/app/webapp/build ./webapp/build\nCOPY --from=BUILD_IMAGE /usr/src/app/node_modules ./node_modules\n\nEXPOSE 8180\n\nCMD [ \"npm\", \"run\", \"prod\" ]\n"
}