{
  "startTime": 1674253455677,
  "endTime": 1674253456807,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 7,
        "columnEnd": 49
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 7,
        "columnEnd": 32
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM php:8-fpm-alpine\n\nRUN apk update && apk add --no-cache \\\n    zip \\\n    libzip-dev \\\n    mysql-client \\\n    pcre-dev ${PHPIZE_DEPS} \\\n    make \\\n    shadow \\\n    bash \\\n    tzdata \\\n    nano \\\n    pcre-dev ${PHPIZE_DEPS} \\\n    nodejs npm \\\n    && pecl install redis \\\n    && docker-php-ext-enable redis \\\n    && docker-php-ext-install zip pdo_mysql exif opcache \\\n    && curl -f -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer --quit \\\n    && npm --global install yarn \\\n    && rm -rf /var/cache/apk/* /tmp/* /var/tmp/* && npm cache clean --force;\n\nRUN mv $PHP_INI_DIR/php.ini-production $PHP_INI_DIR/php.ini\n\nCOPY ./.docker/production/php/local.ini $PHP_INI_DIR/conf.d\nCOPY ./.docker/production/php/xlaravel.pool.conf /usr/local/etc/php-fpm.d/\n\nCOPY . /var/www/\n\nRUN chown -R www-data /var/www\n\nWORKDIR /var/www\n\nRUN composer install --optimize-autoloader --no-dev\n\nRUN rm -rf /root/.composer/cache\n\nRUN yarn install && yarn cache clean\n\nRUN yarn prod\n\nCOPY .docker/production/php/Makefile ./Makefile\n\nRUN make install\n\nRUN php artisan config:cache && php artisan route:cache && php artisan view:cache\n\nARG PUID=1000\nENV PUID ${PUID}\nARG PGID=1000\nENV PGID ${PGID}\n\nRUN groupmod -o -g ${PGID} www-data && \\\n    usermod -o -u ${PUID} -g www-data www-data\n"
}