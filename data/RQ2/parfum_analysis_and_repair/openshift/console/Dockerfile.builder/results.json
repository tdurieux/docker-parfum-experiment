{
  "startTime": 1674252622681,
  "endTime": 1674252623545,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 102
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 113
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 27,
        "lineEnd": 29,
        "columnStart": 7,
        "columnEnd": 111
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 60,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 40
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Used for testing OpenShift console in CI. After editing this file:\n#\n# * Bump the builder version in `Dockerfile` and `builder-run.sh`\n# * Commit the changes\n# * Run `DOCKER_TAG=<new-tag> ./push-builder.sh` to update the image on quay\n#   (requires edit permission to the quay.io/coreos/tectonic-console-builder repo)\n#\n# You can test the image using `./builder-run.sh`. For instance:\n#   $ ./builder-run.sh ./build-backend.sh\n\nFROM golang:1.18-stretch\n\nMAINTAINER Ed Rooth - CoreOS\n\n### For golang testing stuff\nRUN go install github.com/jstemmer/go-junit-report@latest\n\n### Install NodeJS and yarn\nENV NODE_VERSION=\"v14.16.0\"\nENV YARN_VERSION=\"v1.22.10\"\n\n# yarn needs a home writable by any user running the container\nENV HOME /opt/home\nRUN mkdir -p ${HOME}\nRUN chmod 777 -R ${HOME}\n\nRUN apt-get update \\\n    && apt-get install --no-install-recommends -y -q \\\n    curl wget git unzip bzip2 jq expect \\\n    libgtk2.0-0 libgtk-3-0 libgbm-dev libnotify-dev libgconf-2-4 libnss3 libxss1 libasound2 libxtst6 xauth xvfb && rm -rf /var/lib/apt/lists/*;\n    # ^^ additional Cypress dependencies: https://docs.cypress.io/guides/guides/continuous-integration.html#Dependencies\n\nRUN curl -f -LO https://storage.googleapis.com/kubernetes-release/release/v1.20.4/bin/linux/amd64/kubectl && \\\n    chmod +x ./kubectl && \\\n    mv ./kubectl /usr/local/bin/kubectl\n\nRUN cd /tmp && \\\n    wget --quiet -O /tmp/node.tar.gz https://nodejs.org/dist/${NODE_VERSION}/node-${NODE_VERSION}-linux-x64.tar.gz && \\\n    tar xf node.tar.gz && \\\n    rm -f /tmp/node.tar.gz && \\\n    cd node-* && \\\n    cp -r lib/node_modules /usr/local/lib/node_modules && \\\n    cp bin/node /usr/local/bin && \\\n    ln -s /usr/local/lib/node_modules/npm/bin/npm-cli.js /usr/local/bin/npm\n# so any container user can install global node modules if needed\nRUN chmod 777 /usr/local/lib/node_modules\n# cleanup\nRUN rm -rf /tmp/node-v*\n\nRUN cd /tmp && \\\n    wget --quiet -O /tmp/yarn.tar.gz https://github.com/yarnpkg/yarn/releases/download/${YARN_VERSION}/yarn-${YARN_VERSION}.tar.gz && \\\n    tar xf yarn.tar.gz && \\\n    rm -f /tmp/yarn.tar.gz && \\\n    mv /tmp/yarn-${YARN_VERSION} /usr/local/yarn && \\\n    ln -s /usr/local/yarn/bin/yarn /usr/local/bin/yarn\n\n# Install Chrome for installer gui tests\nRUN wget --quiet -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - && \\\n    sh -c 'echo \"deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main\" >> /etc/apt/sources.list.d/google-chrome.list' && \\\n    apt-get update && \\\n    apt-get install --no-install-recommends -y -q \\\n    google-chrome-stable ca-certificates && rm -rf /var/lib/apt/lists/*;\n"
}