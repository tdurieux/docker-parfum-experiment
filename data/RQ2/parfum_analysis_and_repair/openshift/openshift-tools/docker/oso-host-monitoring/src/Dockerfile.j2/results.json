{
  "startTime": 1674248986427,
  "endTime": 1674248987154,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 27,
        "columnEnd": 170
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 43,
        "lineEnd": 76,
        "columnStart": 4,
        "columnEnd": 24
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "{% if base_os == \"rhel7\" %}\nFROM oso-rhel7-ops-base:latest\n{% elif base_os == \"centos7\" %}\nFROM openshifttools/oso-centos7-ops-base:latest\n{% endif %}\n{{ generated_header }}\n\n# Pause indefinitely if asked to do so.\nARG OO_PAUSE_ON_BUILD\nRUN test \"$OO_PAUSE_ON_BUILD\" = \"true\" && while sleep 10; do true; done || :\n\n# denote this as a container environment, for rc scripts\nENV PCP_CONTAINER_IMAGE pcp-collector\nENV NAME pcp-collector\nENV IMAGE pcp-collector\nENV PATH /usr/share/pcp/lib:/usr/libexec/pcp/bin:$PATH\n\n# script to watch health of pmcd\nCOPY check-pmcd-status.sh /usr/local/bin/check-pmcd-status.sh\n##################\n\n{% if base_os == \"rhel7\" %}\n# /usr/bin/oc workaround\n# python-openshift-tools-monitoring-openshift depends on /usr/bin/oc\n# since origin-clients and atomic-openshift-clients provide the binary\n# for Origin/OpenShift respectively. yum isn't happy that a package named 'openshift'\n# used to provide /usr/bin/oc, and 'openshift' has been replaced by\n# 'atomic-openshift', but 'atomic-openshift' doesn't provide /usr/bin/oc.\n# So just install atomic-openshift-clients before python-openshift-tools-monitoring-openshift\n# until the yum repo is cleared of the older packages.\nRUN yum-install-check.sh -y atomic-openshift-clients openshift-hypercc && yum clean metadata\n\n{% endif %}\n\n\n# Add google-cloud-sdk repo\nCOPY google-cloud-sdk.repo /etc/yum.repos.d/\n{% if base_os == \"centos7\" %}\n\n# Add copr repo for python-hawkular-client rpm\nRUN cd /etc/yum.repos.d && curl -f -O https://copr.fedorainfracloud.org/coprs/g/Hawkular/python-hawkular-client/repo/epel-7/group_Hawkular-python-hawkular-client-epel-7.repo\n{% endif %}\n\nRUN yum -y install python2-pip python2-requests pcp pcp-conf \\\n        pyOpenSSL python-openshift-tools \\\n        python-openshift-tools-monitoring-pcp \\\n        python-openshift-tools-monitoring-docker \\\n        python-openshift-tools-monitoring-zagg \\\n        python-openshift-tools-monitoring-openshift \\\n        python-openshift-tools-ansible \\\n        python-openshift-tools-web \\\n        openshift-tools-scripts-cloud-aws \\\n        openshift-tools-scripts-cloud-gcp \\\n        openshift-tools-scripts-monitoring-pcp \\\n        openshift-tools-scripts-monitoring-docker \\\n        openshift-tools-scripts-monitoring-aws \\\n        openshift-tools-scripts-monitoring-gcp \\\n        openshift-tools-scripts-monitoring-openshift \\\n        openshift-tools-scripts-monitoring-autoheal \\\n        python-httplib2 \\\n        python2-pyasn1 python2-pyasn1-modules python2-rsa \\\n        python-configobj \\\n        python2-psutil \\\n        pylint \\\n        tito \\\n        python-devel \\\n        libyaml-devel \\\n        oso-simplesamlphp \\\n        python2-ruamel-yaml \\\n        rpm-sign \\\n        createrepo \\\n        python2-boto3 \\\n        python-lxml \\\n        rkhunter \\\n        python-hawkular-client \\\n        python-docker pcp-manager pcp-webapi\\\n        python-pcp patch && yum clean all && rm -rf /var/cache/yum\n\n# Run in the container as root - avoids PCP_USER mismatches\nRUN sed -i -e 's/PCP_USER=.*$/PCP_USER=root/' -e 's/PCP_GROUP=.*$/PCP_GROUP=root/' /etc/pcp.conf\n\n# Disable service advertising - no avahi daemon in the container\n# (dodges warnings from pmcd attempting to connect during startup)\nRUN . /etc/pcp.conf && echo \"-A\" >> $PCP_PMCDOPTIONS_PATH\n\n{# This is installed for gsutil and calculating the size of the gcs #}\n{# centos users should install this from https://cloud.google.com/sdk/downloads and follow the instructions #}\n{# disabling releases-optional repo as the filelist_db metadata file is over 1GB #}\n{% if base_os == 'rhel7' %}\nRUN yum-install-check.sh -y google-cloud-sdk python2-uritemplate python2-google-api-client python2-oauth2client --disablerepo=\"rhel-server-releases-optional\" --enablerepo=\"google-cloud-sdk\" && yum clean all\n{% endif %}\n\n\nCOPY urllib3-connectionpool-patch /root/\nRUN cd /usr/lib/python2.7/site-packages/ && patch -p1 < /root/urllib3-connectionpool-patch\n\n# make mount points for security update count check, and make a circular symlink because yum is dumb about its root\nRUN mkdir -p /host \\\n             /var/local/hostpkg/etc/rhsm/ca \\\n             /var/local/hostpkg/etc/rpm \\\n             /var/local/hostpkg/etc/pki/entitlement \\\n             /var/local/hostpkg/etc/pki/rpm-gpg \\\n             /var/local/hostpkg/var/local \\\n             /var/local/hostpkg/var/cache/yum \\\n             /var/local/hostpkg/var/lib/yum && \\\n    ln -s /var/local/hostpkg /var/local/hostpkg/var/local/hostpkg\n\n# Make mount points for rkhunter files, and configure rkhunter to work with this structure\nRUN mkdir -p /var/local/rkhunter_chroot \\\n             /var/local/rkhunter_tmp \\\n             /var/local/rkhunter_tmp/rkhunter \\\n             /var/local/rkhunter_tmp/rkhunter/bin \\\n             /var/local/rkhunter_tmp/rkhunter/db \\\n             /var/local/rkhunter_tmp/rkhunter/etc \\\n             /var/local/rkhunter_tmp/rkhunter/scripts && \\\n    sed -i 's/\\/var\\/log\\/rkhunter\\/rkhunter.log/\\/var\\/local\\/rkhunter_tmp\\/rkhunter\\/rkhunter.log/' /etc/logrotate.d/rkhunter && \\\n    sed -r -e 's%^(SCRIPTDIR)=.*%\\1=/tmp/rkhunter/scripts%; s%^(LOGFILE)=.*%\\1=/tmp/rkhunter/rkhunter.log%' /etc/rkhunter.conf > /var/local/rkhunter_tmp/rkhunter/etc/rkhunter.conf\n\n# Ansible startup configuration playbook\nCOPY root /root\n\nRUN cat bash_aliases >> /root/.bashrc\n\n# FIXME: These are vendor libs that need to be packaged and installed via RPM.\nCOPY vendor/prometheus_client /usr/lib/python2.7/site-packages/prometheus_client/\n\n# Create ops-runner.log file with proper permissions\nRUN touch /var/log/ops-runner.log && chmod 664 /var/log/ops-runner.log\n\n# Setup the AWS credentials file so that we can populate it on startup.\nRUN mkdir -p /root/.aws && \\\n    touch /root/.aws/credentials && \\\n    chmod g+rw /root/.aws/credentials\n\n# Add container-build-env-fingerprint\nCOPY container-build-env-fingerprint.output /etc/oso-container-build-env-fingerprint\n\n# Add the start script and tell the container to run it by default\nCOPY start.sh /usr/local/bin/\nCMD /usr/local/bin/start.sh\n"
}