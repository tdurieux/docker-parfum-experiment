{
  "startTime": 1674250645665,
  "endTime": 1674250646820,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 120
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 191
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 214
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 113
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 87
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# NOTE: Forked temporarily from Dockerfile.upi.ci to port to rhel8\n# This Dockerfile is used by CI to test UPI platforms for OpenShift Installer\n# It builds an image containing binaries like jq, terraform, awscli, oc, etc. to allow bringing up UPI infrastructure.\n# It also contains the `upi` directory that contains various terraform and cloud formation templates that are used to create infrastructure resources.\n\nFROM registry.ci.openshift.org/ocp/builder:rhel-8-golang-1.17-openshift-4.10 AS builder\nARG TAGS=\"\"\nWORKDIR /go/src/github.com/openshift/installer\nCOPY . .\nRUN DEFAULT_ARCH=\"$(go env GOHOSTARCH)\" hack/build.sh\n\nFROM registry.ci.openshift.org/ocp/4.10:cli as cli\n\nFROM registry.ci.openshift.org/ocp/4.10:base\nCOPY --from=cli /usr/bin/oc /bin/oc\nCOPY --from=builder /go/src/github.com/openshift/installer/bin/openshift-install /bin/openshift-install\nCOPY --from=builder /go/src/github.com/openshift/installer/upi /var/lib/openshift-install/upi\n\nRUN rpm --import https://packages.microsoft.com/keys/microsoft.asc && \\\n    sh -c 'echo -e \"[azure-cli]\\nname=Azure CLI\\nbaseurl=https://packages.microsoft.com/yumrepos/azure-cli\\nenabled=1\\ngpgcheck=1\\ngpgkey=https://packages.microsoft.com/keys/microsoft.asc\" >/etc/yum.repos.d/azure-cli.repo' && \\\n    sh -c 'echo -e \"[google-cloud-sdk]\\nname=Google Cloud SDK\\nbaseurl=https://packages.cloud.google.com/yum/repos/cloud-sdk-el7-x86_64\\nenabled=1\\ngpgcheck=1\\nrepo_gpgcheck=1\\ngpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg\\n       https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg\" > /etc/yum.repos.d/google-cloud-sdk.repo'\n\nRUN yum update -y && \\\n    yum install --setopt=tsflags=nodocs -y \\\n      azure-cli \\\n      gettext \\\n      google-cloud-sdk \\\n      gzip \\\n      jq \\\n      unzip \\\n      openssh-clients \\\n      openssl \\\n      python3-pyOpenSSL \\\n      python2-pyyaml \\\n      python3-pyyaml \\\n      util-linux && \\\n    yum clean all && \\\n    rm -rf /var/cache/yum/* && \\\n    chmod g+w /etc/passwd\n\n# Not packaged for Python 2, but required by gcloud.  See https://cloud.google.com/sdk/crypto\nRUN pip-2 install pyopenssl\nENV CLOUDSDK_PYTHON=/usr/bin/python\n\nENV TERRAFORM_VERSION=1.0.11\nRUN curl -f -O https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip && \\\n    unzip terraform_${TERRAFORM_VERSION}_linux_amd64.zip -d /bin/\nENV MATCHBOX_PROVIDER_VERSION=0.5.0\nRUN curl -f -L -O https://github.com/poseidon/terraform-provider-matchbox/releases/download/v${MATCHBOX_PROVIDER_VERSION}/terraform-provider-matchbox_${MATCHBOX_PROVIDER_VERSION}_linux_amd64.zip && \\\n    unzip terraform-provider-matchbox_${MATCHBOX_PROVIDER_VERSION}_linux_amd64.zip -d /bin/ && \\\n    mv /bin/terraform-provider-matchbox_v${MATCHBOX_PROVIDER_VERSION} /bin/terraform-provider-matchbox\nENV IGNITION_PROVIDER_VERSION=v2.1.0\nRUN curl -f -L -O https://github.com/community-terraform-providers/terraform-provider-ignition/releases/download/${IGNITION_PROVIDER_VERSION}/terraform-provider-ignition-${IGNITION_PROVIDER_VERSION}-linux-amd64.tar.gz && \\\n    tar xzf terraform-provider-ignition-${IGNITION_PROVIDER_VERSION}-linux-amd64.tar.gz && \\\n    mv terraform-provider-ignition-${IGNITION_PROVIDER_VERSION}-linux-amd64/terraform-provider-ignition /bin/terraform-provider-ignition && rm terraform-provider-ignition-${IGNITION_PROVIDER_VERSION}-linux-amd64.tar.gz\nRUN curl -f -L -o - \"https://github.com/vmware/govmomi/releases/latest/download/govc_$(uname -s)_$(uname -m).tar.gz\" | tar -C /bin -xvzf - govc\nRUN curl -f \"https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip\" -o \"awscliv2.zip\" && \\\n    unzip awscliv2.zip && \\\n    ./aws/install -b /bin && \\\n    rm -rf ./aws awscliv2.zip\n\nRUN mkdir /output && chown 1000:1000 /output\nUSER 1000:1000\nENV PATH /bin\nENV HOME /output\nWORKDIR /output\n"
}