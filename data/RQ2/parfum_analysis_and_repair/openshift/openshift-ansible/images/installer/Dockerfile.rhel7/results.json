{
  "startTime": 1674248744374,
  "endTime": 1674248744890,
  "originalSmells": [
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 117
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM rhel7.3:7.3-released\n\nMAINTAINER OpenShift Team <dev@lists.openshift.redhat.com>\n\nUSER root\n\n# Playbooks, roles, and their dependencies are installed from packages.\nRUN INSTALL_PKGS=\"openshift-ansible atomic-openshift-clients python-boto python2-boto3 python2-crypto openssl iproute httpd-tools java-1.8.0-openjdk-headless\" \\\n && x86_EXTRA_RPMS=$(if [ \"$(uname -m)\" == \"x86_64\" ]; then echo -n google-cloud-sdk ; fi) \\\n && yum repolist > /dev/null \\\n && yum-config-manager --enable rhel-7-server-ose-3.7-rpms \\\n && yum-config-manager --enable rhel-7-server-rh-common-rpms \\\n && yum install -y --setopt=skip_missing_names_on_install=False --setopt=tsflags=nodocs $INSTALL_PKGS $x86_EXTRA_RPMS \\\n && yum clean all && rm -rf /var/cache/yum\n\nLABEL name=\"openshift3/ose-ansible\" \\\n      summary=\"OpenShift's installation and configuration tool\" \\\n      description=\"A containerized openshift-ansible image to let you run playbooks to install, upgrade, maintain and check an OpenShift cluster\" \\\n      url=\"https://github.com/openshift/openshift-ansible\" \\\n      io.k8s.display-name=\"openshift-ansible\" \\\n      io.k8s.description=\"A containerized openshift-ansible image to let you run playbooks to install, upgrade, maintain and check an OpenShift cluster\" \\\n      io.openshift.expose-services=\"\" \\\n      io.openshift.tags=\"openshift,install,upgrade,ansible\" \\\n      com.redhat.component=\"aos3-installation-docker\" \\\n      atomic.run=\"once\"\n\nENV USER_UID=1001 \\\n    HOME=/opt/app-root/src \\\n    WORK_DIR=/usr/share/ansible/openshift-ansible \\\n    ANSIBLE_CONFIG=/usr/share/ansible/openshift-ansible/ansible.cfg \\\n    OPTS=\"-v\"\n\n# Add image scripts and files for running as a system container\nCOPY root /\n\nRUN /usr/local/bin/user_setup \\\n && mv /usr/local/bin/usage{.ocp,}\n\nUSER ${USER_UID}\n\nWORKDIR ${WORK_DIR}\nENTRYPOINT [ \"/usr/local/bin/entrypoint\" ]\nCMD [ \"/usr/local/bin/run\" ]\n"
}