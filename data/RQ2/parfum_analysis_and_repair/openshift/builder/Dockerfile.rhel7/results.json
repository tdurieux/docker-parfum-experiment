{
  "startTime": 1674248603432,
  "endTime": 1674248604235,
  "originalSmells": [
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 77
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM registry.svc.ci.openshift.org/ocp/builder:golang-1.13 AS builder\nWORKDIR /go/src/github.com/openshift/builder\nCOPY . .\nRUN hack/build.sh\n\nFROM registry.svc.ci.openshift.org/ocp/4.0:base\n# TODO: Add fuse-overlayfs once we build off of RHEL-8 UBI\nRUN INSTALL_PKGS=\" \\\n      bind-utils bsdtar findutils git hostname lsof runc socat \\\n      sysvinit-tools tar tree util-linux wget which \\\n      \" && \\\n    yum install -y --setopt=skip_missing_names_on_install=False $INSTALL_PKGS && \\\n    yum clean all && rm -rf /var/cache/yum\nRUN rpm --setcaps shadow-utils\nCOPY --from=builder /go/src/github.com/openshift/builder/openshift-builder /usr/bin/\nCOPY imagecontent/bin /usr/bin\nCOPY imagecontent/etc/containers /etc/containers\nCOPY imagecontent/usr/share/containers /usr/share/containers\nRUN mkdir -p /var/cache/blobs \\\n    /var/lib/shared/overlay-images \\\n    /var/lib/shared/overlay-layers \\\n    /etc/pki/tls/certs /etc/docker/certs.d && \\\n    chmod g+w /etc/pki/tls/certs /etc/docker/certs.d && \\\n    touch /var/lib/shared/overlay-images/images.lock \\\n    /var/lib/shared/overlay-layers/layers.lock\n\nRUN ln -s /usr/bin/openshift-builder /usr/bin/openshift-sti-build && \\\n    ln -s /usr/bin/openshift-builder /usr/bin/openshift-docker-build && \\\n    ln -s /usr/bin/openshift-builder /usr/bin/openshift-git-clone && \\\n    ln -s /usr/bin/openshift-builder /usr/bin/openshift-manage-dockerfile && \\\n    ln -s /usr/bin/openshift-builder /usr/bin/openshift-extract-image-content\nLABEL io.k8s.display-name=\"OpenShift Builder\" \\\n      io.k8s.description=\"This is a component of OpenShift and is responsible for executing image builds.\" \\\n      io.openshift.tags=\"openshift,builder\"\nENTRYPOINT [ \"/usr/bin/entrypoint.sh\" ]\n"
}