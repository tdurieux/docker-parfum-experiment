{
  "startTime": 1674252575663,
  "endTime": 1674252576815,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 5,
        "columnEnd": 107
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 41
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM openshift/origin-release:golang-1.13 AS builder\n\nENV GO111MODULE=on \\\n    GOFLAGS=-mod=vendor\n\nCOPY . /go/src/github.com/operator-framework/operator-sdk\nRUN cd /go/src/github.com/operator-framework/operator-sdk \\\n && rm -rf vendor/github.com/operator-framework/operator-sdk \\\n && make build/ansible-operator\n\nFROM registry.access.redhat.com/ubi8/ubi\n\nRUN mkdir -p /etc/ansible \\\n    && echo \"localhost ansible_connection=local\" > /etc/ansible/hosts \\\n    && echo '[defaults]' > /etc/ansible/ansible.cfg \\\n    && echo 'roles_path = /opt/ansible/roles' >> /etc/ansible/ansible.cfg \\\n    && echo 'library = /usr/share/ansible/openshift' >> /etc/ansible/ansible.cfg\n\nENV HOME=/opt/ansible \\\n    USER_NAME=ansible \\\n    USER_UID=1001\n\n# Install python dependencies\n# Ensure fresh metadata rather than cached metadata in the base by running\n# yum clean all && rm -rf /var/yum/cache/* first\nRUN yum clean all && rm -rf /var/cache/yum/* \\\n && yum -y update \\\n && yum install -y libffi-devel openssl-devel python3 python3-devel gcc python3-pip python3-setuptools \\\n && pip3 install --no-cache-dir --upgrade setuptools pip \\\n && pip3 install --no-cache-dir \\\n      ipaddress \\\n      ansible-runner==1.3.4 \\\n      ansible-runner-http==1.0.0 \\\n      openshift~=0.10.0 \\\n      ansible~=2.9 \\\n      jmespath \\\n && yum remove -y gcc libffi-devel openssl-devel python3-devel \\\n && yum clean all \\\n && rm -rf /var/cache/yum\n\nCOPY --from=builder /go/src/github.com/operator-framework/operator-sdk/build/ansible-operator /usr/local/bin/ansible-operator\nCOPY release/ansible/bin /usr/local/bin\n\nCOPY release/ansible/ansible_collections ${HOME}/.ansible/collections/ansible_collections\n\n\n# Ensure directory permissions are properly set\nRUN /usr/local/bin/user_setup\nRUN mkdir -p ${HOME}/.ansible/tmp \\\n && chown -R ${USER_UID}:0 ${HOME} \\\n && chmod -R ug+rwx ${HOME}\n\nRUN TINIARCH=$(case $(arch) in x86_64) echo -n amd64 ;; ppc64le) echo -n ppc64el ;; *) echo -n $(arch) ;; esac) \\\n  && curl -f -L -o /usr/local/bin/tini https://github.com/krallin/tini/releases/latest/download/tini-$TINIARCH \\\n  && chmod +x /usr/local/bin/tini\n\nWORKDIR ${HOME}\nUSER ${USER_UID}\nENTRYPOINT [\"/usr/local/bin/tini\", \"--\", \"/usr/local/bin/ansible-operator\", \"run\", \"--watches-file=./watches.yaml\"]\n"
}