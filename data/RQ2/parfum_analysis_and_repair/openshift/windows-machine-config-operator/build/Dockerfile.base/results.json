{
  "startTime": 1674254248091,
  "endTime": 1674254248827,
  "originalSmells": [
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 27
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM registry.ci.openshift.org/openshift/release:golang-1.18 as build\nLABEL stage=build\n\n# dos2unix is needed to build CNI plugins\nRUN yum install -y dos2unix && rm -rf /var/cache/yum\n\nWORKDIR /build/windows-machine-config-operator/\nCOPY .git .git\n\n# Build WMCB\nWORKDIR /build/windows-machine-config-operator/windows-machine-config-bootstrapper/\nCOPY windows-machine-config-bootstrapper/ .\nRUN make build\n\n# Build hybrid-overlay\nWORKDIR /build/windows-machine-config-operator/ovn-kubernetes/\nCOPY ovn-kubernetes/ .\nWORKDIR /build/windows-machine-config-operator/ovn-kubernetes/go-controller/\nRUN make windows\n\n# Build promu utility tool, needed to build the windows_exporter.exe metrics binary\nWORKDIR /build/windows-machine-config-operator/promu/\nCOPY promu/ .\n# Explicitly set the $GOBIN path for promu installation\nRUN GOBIN=/build/windows-machine-config-operator/windows_exporter/ go install .\n\n# Build windows_exporter\nWORKDIR /build/windows-machine-config-operator/windows_exporter/\nCOPY windows_exporter/ .\nRUN GOOS=windows ./promu build -v\n\n# Build containerd\nWORKDIR /build/windows-machine-config-operator/containerd/\nCOPY containerd/ .\nRUN GOOS=windows make\n\n# Build containerd shim\nWORKDIR /build/windows-machine-config-operator/hcsshim/\nCOPY hcsshim/ .\nRUN GOOS=windows go build ./cmd/containerd-shim-runhcs-v1\n\n# Build kubelet\nWORKDIR /build/windows-machine-config-operator/kubelet/\nCOPY kubelet/ .\nENV KUBE_BUILD_PLATFORMS windows/amd64\nRUN make WHAT=cmd/kubelet\n\n# Build kube-proxy\nWORKDIR /build/windows-machine-config-operator/kube-proxy/\nCOPY kube-proxy/ .\nENV KUBE_BUILD_PLATFORMS windows/amd64\nRUN make WHAT=cmd/kube-proxy\n\n# Build azure-cloud-node-manager\nWORKDIR /build/windows-machine-config-operator/cloud-provider-azure/\nCOPY cloud-provider-azure/ .\nRUN GOOS=windows go build -o azure-cloud-node-manager.exe ./cmd/cloud-node-manager\n\n# Build CNI plugins\nWORKDIR /build/windows-machine-config-operator/containernetworking-plugins/\nCOPY containernetworking-plugins/ .\nENV CGO_ENABLED=0\nRUN ./build_windows.sh\n\nFROM registry.access.redhat.com/ubi8/ubi-minimal:latest\nLABEL stage=base\n\n# Copy wmcb.exe\nWORKDIR /payload/\nCOPY --from=build /build/windows-machine-config-operator/windows-machine-config-bootstrapper/wmcb.exe .\n\n# Copy hybrid-overlay-node.exe\nCOPY --from=build /build/windows-machine-config-operator/ovn-kubernetes/go-controller/_output/go/bin/windows/hybrid-overlay-node.exe .\n\n# Copy windows_exporter.exe\nCOPY --from=build /build/windows-machine-config-operator/windows_exporter/windows_exporter.exe .\n\n# Copy azure-cloud-node-manager.exe\nCOPY --from=build /build/windows-machine-config-operator/cloud-provider-azure/azure-cloud-node-manager.exe .\n\n# Copy containerd.exe, containerd-shim-runhcs-v1.exe and containerd config containerd_conf.toml\nWORKDIR /payload/containerd/\nCOPY --from=build /build/windows-machine-config-operator/containerd/bin/containerd.exe .\nCOPY --from=build /build/windows-machine-config-operator/hcsshim/containerd-shim-runhcs-v1.exe .\nCOPY pkg/internal/containerd_conf.toml .\n\n# Copy kubelet.exe and kube-proxy.exe\nWORKDIR /payload/kube-node/\nCOPY --from=build /build/windows-machine-config-operator/kubelet/_output/local/bin/windows/amd64/kubelet.exe .\nCOPY --from=build /build/windows-machine-config-operator/kube-proxy/_output/local/bin/windows/amd64/kube-proxy.exe .\n\n# Copy CNI plugin binaries and CNI config template cni-conf-template.json\nWORKDIR /payload/cni/\nCOPY --from=build /build/windows-machine-config-operator/containernetworking-plugins/bin/host-local.exe .\nCOPY --from=build /build/windows-machine-config-operator/containernetworking-plugins/bin/win-bridge.exe .\nCOPY --from=build /build/windows-machine-config-operator/containernetworking-plugins/bin/win-overlay.exe .\nCOPY pkg/internal/cni-conf-template.json .\n"
}