{
  "startTime": 1674215684114,
  "endTime": 1674215685537,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 21,
        "columnEnd": 62
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 8,
        "columnEnd": 71
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# docker build -f Dockerfile -t local/go-toolset .\n# docker run -it --rm --privileged -v ${PWD}:/build:z local/go-toolset\n#################################################################################\n# Builder Image\nFROM registry.access.redhat.com/ubi8/ubi\n\n#################################################################################\n# DNF Package Install List\nARG DNF_LIST=\"\\\n  jq \\\n  tar \\\n  gcc \\\n  make \\\n  git \\\n\"\n\n#################################################################################\n# Build UBI8 Builder\nRUN set -ex \\\n     && dnf install -y --nodocs --setopt=install_weak_deps=false ${DNF_LIST}    \\\n     && dnf clean all -y \\\n     && GO_VERSION=$( curl -f -sL https://golang.org/dl/?mode=json \\\n                     | jq -r '.[].files[] | select(.os == \"linux\").version' \\\n                     | grep -v -E 'go[0-9\\.]+(beta|rc)' \\\n                     | sort -V | tail -1) \\\n     && curl -f -sL https://golang.org/dl/${GO_VERSION}.linux-amd64.tar.gz \\\n        | tar xzvf - --directory /usr/local/ \\\n     && /usr/local/go/bin/go version \\\n     && ln -f /usr/local/go/bin/go /usr/bin/go\n\nWORKDIR /build\nENTRYPOINT [\"make\"]\nCMD []\n\nENV PATH=\"/root/platform/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\"\n\nLABEL \\\n  name=\"go-toolset\"                                                             \\\n  license=GPLv3                                                                 \\\n  distribution-scope=\"public\"                                                   \\\n  io.openshift.tags=\"go-toolset\"                                                \\\n  summary=\"oc-mirror compiler image\"                                            \\\n  io.k8s.display-name=\"go-toolset\"                                              \\\n  build_date=\"`date +'%Y%m%d%H%M%S'`\"                                           \\\n  project=\"https://github.com/openshift/oc-mirror\"                              \\\n  description=\"oc-mirror is an OpenShift Client (oc) plugin that manages OpenShift release, operator catalog, helm charts, and associated container images. This image is designed to build the binary.\" \\\n  io.k8s.description=\"oc-mirror is an OpenShift Client (oc) plugin that manages OpenShift release, operator catalog, helm charts, and associated container images. This image is designed to build the binary.\"\n"
}