{
  "startTime": 1674255800433,
  "endTime": 1674255802423,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 6,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 81
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 24,
        "columnEnd": 92
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM fedora:34\n\n# Trust the Red Hat IT Root CA and set up rcm-tools repo\nRUN curl -o /etc/pki/ca-trust/source/anchors/RH-IT-Root-CA.crt --fail -L \\\n         https://password.corp.redhat.com/RH-IT-Root-CA.crt \\\n && update-ca-trust extract \\\n && curl -f -o /etc/yum.repos.d/rcm-tools-fedora.repo \\\n         https://download.devel.redhat.com/rel-eng/RCMTOOLS/rcm-tools-fedora.repo\n\nRUN dnf install -y \\\n    # runtime dependencies\n    krb5-workstation git tig rsync koji skopeo podman docker tito \\\n    python36 python3-certifi python3-rpm python3-kobo-rpmlib \\\n    # provides en_US.UTF-8 locale required by tito\n    glibc-langpack-en \\\n    # development dependencies\n    gcc krb5-devel \\\n    python3-devel python3-pip python3-wheel \\\n    # other tools for development and troubleshooting\n    bash-completion vim tmux procps-ng psmisc wget net-tools iproute socat \\\n    # install rcm-tools\n    koji brewkoji rhpkg \\\n && dnf clean all\n\n# include oc client\nARG OC_VERSION=latest\nRUN wget -O /tmp/openshift-client-linux-\"$OC_VERSION\".tar.gz https://mirror.openshift.com/pub/openshift-v4/clients/ocp/\"$OC_VERSION\"/openshift-client-linux.tar.gz \\\n  && tar -C /usr/local/bin -xzf  /tmp/openshift-client-linux-\"$OC_VERSION\".tar.gz oc kubectl \\\n  && rm /tmp/openshift-client-linux-\"$OC_VERSION\".tar.gz\n\n# change default locale to en_US.UTF-8 - tito requires this\nRUN echo 'LANG=\"en_US.UTF-8\"' > /etc/locale.conf\n\n# Create a non-root user - see https://aka.ms/vscode-remote/containers/non-root-user.\nARG USERNAME=dev\n# On Linux, replace with your actual UID, GID if not the default 1000\nARG USER_UID=1000\nARG USER_GID=$USER_UID\n\n# Create the \"dev\" user\nRUN groupadd --gid \"$USER_GID\" \"$USERNAME\" \\\n    && useradd --uid \"$USER_UID\" --gid \"$USER_GID\" -m \"$USERNAME\" \\\n    && mkdir -p /home/\"$USERNAME\"/.vscode-server /home/\"$USERNAME\"/.vscode-server-insiders \\\n       /workspaces/doozer /workspaces/doozer-working-dir \\\n    && chown -R \"${USER_UID}:${USER_GID}\" /home/\"$USERNAME\" /workspaces \\\n    && chmod 0755 /home/\"$USERNAME\" \\\n    && echo \"$USERNAME\" ALL=\\(root\\) NOPASSWD:ALL > /etc/sudoers.d/\"$USERNAME\" \\\n    && chmod 0440 /etc/sudoers.d/\"$USERNAME\"\n\n# Configure Kerberos\nCOPY .devcontainer/krb5-redhat.conf /etc/krb5.conf.d/\n\n# Preinstall dependencies\nCOPY ./ /tmp/doozer/\nRUN chown \"$USERNAME\" -R /tmp/doozer \\\n && pushd /tmp/doozer \\\n && sudo -u \"$USERNAME\" pip3 install --no-cache-dir --user -r -r ./requirements.txt requirements-dev.txt ./ -r \\\n && popd && rm -rf /tmp/doozer\n\nUSER \"$USER_UID\"\nWORKDIR /workspaces/doozer\n"
}