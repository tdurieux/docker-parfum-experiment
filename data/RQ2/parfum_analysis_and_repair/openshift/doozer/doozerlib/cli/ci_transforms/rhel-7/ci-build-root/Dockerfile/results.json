{
  "startTime": 1674252575824,
  "endTime": 1674252577162,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 97
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 89
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 32
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM replaced-by-buildconfig\n# Serves as a standard build environment for OpenShift builds. It is ultimately based on the\n# ART golang builder and has packages layered on top of support CI only use cases\n# (e.g. compiling test cases) that simply don't occur downstream.\n# Used as a template for 'images:streams gen-buildconfigs'\n\nENV OPENSHIFT_CI=true\n\n# Install common CI tools and epel for packages like tito.\nRUN yum install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm && \\\n    INSTALL_PKGS=\"bc bind-utils bsdtar bzr ceph-common createrepo device-mapper device-mapper-persistent-data e2fsprogs ethtool file findutils gcc git glibc-static glib2-devel gpgme gpgme-devel hostname iptables jq krb5-devel libassuan libassuan-devel libseccomp-devel libvirt-devel lsof make mercurial nmap-ncat openssl protobuf-compiler protobuf-devel rsync socat systemd-devel sysvinit-tools tar tito tree util-linux wget which xfsprogs zip goversioninfo gettext\" && \\\n    yum install -y $INSTALL_PKGS && \\\n    rpm -V $INSTALL_PKGS && \\\n    yum clean all && \\\n    touch /os-build-image && \\\n    git config --system user.name origin-release-container && \\\n    git config --system user.email origin-release@redhat.com && rm -rf /var/cache/yum\n\n# Install common go tools upstream devs are expecting in CI.\n# Pure cargo culting from https://github.com/openshift/release/blob/51d92eb6a6d730e932a5daf68829ca7936739904/projects/origin-release/golang-1.13/Dockerfile#L41\nRUN go get golang.org/x/tools/cmd/cover \\\n        github.com/Masterminds/glide \\\n        golang.org/x/tools/cmd/goimports \\\n        github.com/tools/godep \\\n        golang.org/x/lint/golint \\\n        gotest.tools/gotestsum \\\n        github.com/openshift/release/tools/gotest2junit \\\n        github.com/openshift/imagebuilder/cmd/imagebuilder && \\\n    GO111MODULE=on go get gotest.tools/gotestsum@v0.5.2 && \\\n    mv $GOPATH/bin/* /usr/bin/ && \\\n    rm -rf $GOPATH/* $GOPATH/.cache && \\\n    mkdir $GOPATH/bin && \\\n    mkdir -p /go/src/github.com/openshift/origin && \\\n    ln -s /usr/bin/imagebuilder $GOPATH/bin/imagebuilder && \\\n    ln -s /usr/bin/goimports $GOPATH/bin/goimports && \\\n    curl -f -L https://github.com/golang/dep/releases/download/v0.5.4/dep-linux-amd64 > /usr/bin/dep && \\\n    chmod +x /usr/bin/dep\n\nRUN chmod g+xw -R $GOPATH && \\\n    chmod g+xw -R $(go env GOROOT)\n\n# Some image building tools don't create a missing WORKDIR\nRUN mkdir -p /go/src/github.com/openshift/origin\nWORKDIR /go/src/github.com/openshift/origin\n"
}