{
  "startTime": 1674246584206,
  "endTime": 1674246585059,
  "originalSmells": [
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 129
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 89
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 32
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM replaced-by-buildconfig\n# Serves as a standard build environment for OpenShift builds. It is based on the\n# ART golang builder and has packages layered on top of support CI only use cases\n# (e.g. compiling test cases) that simply don't occur downstream.\n# Used as a template for 'images:streams gen-buildconfigs'\n\n# Install protobuf-3.0.0 (used by upstream k8s) for CI only testing\n# Context: https://coreos.slack.com/archives/CB95J6R4N/p1600340218406400\nENV PATH=/opt/google/protobuf/bin:$PATH\nRUN set -euxo pipefail && \\\n    f=$( mktemp ) && \\\n    curl --fail -L https://mirror.openshift.com/pub/openshift-static-ci-deps/protobuf-3.0.0/protoc-3.0.0-linux-x86_64.zip > \"${f}\" && \\\n    mkdir -p /opt/google/protobuf && \\\n    unzip \"${f}\" -d /opt/google/protobuf && \\\n    curl --fail -L https://github.com/coreos/etcd/releases/download/v3.4.13/etcd-v3.4.13-linux-amd64.tar.gz | tar -f - -xz --no-same-owner -C /usr/local/bin --strip-components=1 etcd-v3.4.13-linux-amd64/etcd\n\n# Install common CI tools and epel for packages like tito.\nRUN yum install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm && \\\n    INSTALL_PKGS=\"bc procps-ng util-linux bind-utils bsdtar createrepo_c device-mapper device-mapper-persistent-data e2fsprogs ethtool file findutils gcc git glib2-devel gpgme gpgme-devel hostname iptables jq krb5-devel libassuan libassuan-devel libseccomp-devel libvirt-devel lsof make mercurial nmap-ncat openssl rsync socat systemd-devel tar tito tree wget which xfsprogs zip goversioninfo gettext python3 iproute\" && \\\n    yum install -y $INSTALL_PKGS && \\\n    alternatives --set python /usr/bin/python3 && \\\n    yum clean all && \\\n    touch /os-build-image && \\\n    git config --system user.name origin-release-container && \\\n    git config --system user.email origin-release@redhat.com && rm -rf /var/cache/yum\n\n# Install common go tools upstream devs are expecting in CI.\n# Pure cargo culting from https://github.com/openshift/release/blob/51d92eb6a6d730e932a5daf68829ca7936739904/projects/origin-release/golang-1.13/Dockerfile#L41\n# Clear GOFLAGS temporarily for 1.12  bug:https://github.com/golang/go/issues/32502\nRUN GOFLAGS='' go get golang.org/x/tools/cmd/cover \\\n        github.com/Masterminds/glide \\\n        golang.org/x/tools/cmd/goimports \\\n        github.com/tools/godep \\\n        golang.org/x/lint/golint \\\n        gotest.tools/gotestsum \\\n        github.com/openshift/release/tools/gotest2junit \\\n        github.com/openshift/imagebuilder/cmd/imagebuilder && \\\n    GOFLAGS='' GO111MODULE=on go get gotest.tools/gotestsum@v0.5.2 && \\\n    mv $GOPATH/bin/* /usr/bin/ && \\\n    rm -rf $GOPATH/* $GOPATH/.cache && \\\n    mkdir $GOPATH/bin && \\\n    mkdir -p /go/src/github.com/openshift/origin && \\\n    ln -s /usr/bin/imagebuilder $GOPATH/bin/imagebuilder && \\\n    ln -s /usr/bin/goimports $GOPATH/bin/goimports && \\\n    curl --fail -L https://github.com/golang/dep/releases/download/v0.5.4/dep-linux-amd64 > /usr/bin/dep && \\\n    chmod +x /usr/bin/dep\n\n# make go related directories writeable since builds in CI will run as non-root.\nRUN mkdir -p $GOPATH && \\\n    chmod g+xw -R $GOPATH && \\\n    chmod g+xw -R $(go env GOROOT)\n\n# Assert packages in separate RUN block so we are sure env variables are set up correctly\nRUN set -euxo pipefail && \\\n    command -v protoc && protoc --version && [ \"$( protoc --version )\" = \"libprotoc 3.0.0\" ] && \\\n    command -v etcd && etcd --version && [ \"$( etcd --version | head -n1 )\" = \"etcd Version: 3.4.13\" ]\n\n# Some image building tools don't create a missing WORKDIR\nRUN mkdir -p /go/src/github.com/openshift/origin\nWORKDIR /go/src/github.com/openshift/origin\n"
}