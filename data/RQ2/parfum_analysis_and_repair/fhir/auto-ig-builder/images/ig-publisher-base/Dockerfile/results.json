{
  "startTime": 1674248623792,
  "endTime": 1674248624563,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 5,
        "columnEnd": 68
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 134
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 22,
        "columnEnd": 87
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 22,
        "columnEnd": 87
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM openjdk:11-jdk-buster\nMAINTAINER Josh Mandel\n\nRUN apt-get update && apt-get -y --no-install-recommends install python3 python3-pip gosu openssl wget graphviz && rm -rf /var/lib/apt/lists/*;\n\nENV PATH=\"/usr/local/rvm/bin:/usr/local/rvm/rubies/ruby-2.5.1/bin:${PATH}\"\nRUN gpg --batch --keyserver keyserver.ubuntu.com --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3 7D2BAF1CF37B13E2069D6956105BD0E739499BDB && \\\n    curl -f -L get.rvm.io | bash -s stable && \\\n    rvm install 2.5.1 && \\\n    gem install jekyll jekyll-asciidoc\n\nRUN cd /tmp && \\\n     wget --quiet https://nodejs.org/dist/v16.4.2/node-v16.4.2-linux-x64.tar.xz && \\\n     cd /usr/local && \\\n     tar --strip-components 1 -xf /tmp/node-v16.4.2-linux-x64.tar.xz && rm /tmp/node-v16.4.2-linux-x64.tar.xz\n\nRUN useradd -d /home/publisher -m publisher\n\nUSER publisher\nRUN mkdir /home/publisher/ig\nENV PATH=\"/home/publisher/bin:/home/publisher/bin/ig-publisher-scripts:/home/publisher/.node/bin:${PATH}\"\nENV NODE_PATH=\"/home/publisher/.node/lib/node_modules:${PATH}\"\n\nRUN mkdir /home/publisher/.node && \\\n    echo \"prefix = /home/publisher/.node\" > /home/publisher/.npmrc\n\n\n# Latest fsh and ig-publisher-scripts each time we start\nRUN mkdir /home/publisher/bin && \\\n    cd /home/publisher/bin && \\\n    git clone https://github.com/HL7/ig-publisher-scripts && \\\n    printf \"#!/bin/sh\\n\\\n    which sushi > /dev/null || (npm install -g fsh-sushi\\n\\\n    cd /home/publisher/bin/ig-publisher-scripts && git pull)\\\n    \" >>  /home/publisher/bin/with-latest-sushi.sh && \\\n    chmod +x /home/publisher/bin/with-latest-sushi.sh && \\\n    /home/publisher/bin/with-latest-sushi.sh\n\n# Following technique from https://gist.github.com/yogeek/bc8dc6dadbb72cb39efadf83920077d3\nWORKDIR /home/publisher/ig\nVOLUME /home/publisher/ig\n\nUSER root\nCOPY docker-entrypoint.sh /usr/local/bin/docker-entrypoint.sh\n\nENTRYPOINT [\"/usr/local/bin/docker-entrypoint.sh\"]\nCMD [\"bash\"]\n"
}