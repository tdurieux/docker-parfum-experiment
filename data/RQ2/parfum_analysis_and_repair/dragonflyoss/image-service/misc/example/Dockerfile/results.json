{
  "startTime": 1674219146023,
  "endTime": 1674219146789,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 36,
        "columnEnd": 110
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 4,
        "columnEnd": 23
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:latest AS base\nRUN apt update && apt install --no-install-recommends -y wget && rm -rf /var/lib/apt/lists/*;\nRUN wget https://github.com/containerd/containerd/releases/download/v1.4.3/cri-containerd-cni-1.4.3-linux-amd64.tar.gz\nRUN mkdir -p /opt/containerd-cri && tar xzf cri-containerd-cni-1.4.3-linux-amd64.tar.gz -C /opt/containerd-cri && rm cri-containerd-cni-1.4.3-linux-amd64.tar.gz\n# upstream containerd is not statically linked. Let's use the dind one instead.\nRUN rm -f /opt/containerd-cri/usr/local/bin/containerd\n\nFROM golang:1.17 AS go\nRUN go get github.com/containerd/containerd\nRUN cd $GOPATH/src/github.com/containerd/containerd && git checkout v1.4.3\nRUN cd $GOPATH/src/github.com/containerd/containerd && make EXTRA_FLAGS=\"-buildmode pie\" EXTRA_LDFLAGS='-linkmode external -extldflags \"-fno-PIC -static\"' BUILDTAGS=\"no_btrfs netgo osusergo static_build\"\nRUN cd $GOPATH/src/github.com/containerd/containerd && mv bin /opt/\n\nFROM docker:dind\nCOPY --from=base /opt/containerd-cri/etc/cni/net.d/* /etc/cni/net.d/\nCOPY --from=base /opt/containerd-cri/opt/cni/bin/* /opt/cni/bin/\nCOPY --from=base /opt/containerd-cri/usr/local/bin/* /usr/local/bin/\nCOPY --from=go /opt/bin/* /opt/bin/\nCOPY containerd-config.toml  /opt/etc/containerd/config.toml\nCOPY crictl.yaml /etc/\nCOPY nydusd-config.json crictl.yaml /opt/etc/\nCOPY nydusd nydusify containerd-nydus-grpc nydus-image /opt/bin/\nCOPY containerd-entrypoint.sh container-config.yaml pod-config.yaml run.sh /\nENTRYPOINT [\"/containerd-entrypoint.sh\"]\n"
}