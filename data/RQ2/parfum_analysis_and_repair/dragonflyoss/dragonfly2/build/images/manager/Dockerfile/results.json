{
  "startTime": 1674217605533,
  "endTime": 1674217606281,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 48
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG BASE_IMAGE=alpine:3.16\n\nFROM golang:1.18.3-alpine3.16 as server-builder\n\nARG GOPROXY\nARG GOTAGS\nARG GOGCFLAGS\n\nWORKDIR /go/src/d7y.io/dragonfly/v2\n\nRUN apk --no-cache add bash make gcc libc-dev git\n\nCOPY . /go/src/d7y.io/dragonfly/v2\n\nRUN make build-manager && make install-manager\n\nFROM node:12-alpine as console-builder\n\nWORKDIR /build\n\nCOPY ./manager/console/package.json /build\n\nRUN npm install --loglevel warn --progress false && npm cache clean --force;\n\nCOPY ./manager/console /build\n\nRUN npm run build\n\nFROM ${BASE_IMAGE} as health\n\nENV GRPC_HEALTH_PROBE_VERSION v0.4.11\n\nRUN wget -qO/bin/grpc_health_probe https://github.com/grpc-ecosystem/grpc-health-probe/releases/download/${GRPC_HEALTH_PROBE_VERSION}/grpc_health_probe-linux-amd64 && \\\n    chmod +x /bin/grpc_health_probe\n\nFROM ${BASE_IMAGE}\n\nWORKDIR /opt/dragonfly\n\nENV PATH=/opt/dragonfly/bin:$PATH\n\nRUN mkdir -p /opt/dragonfly/bin/manager/console \\\n    && echo \"hosts: files dns\" > /etc/nsswitch.conf\n\nCOPY --from=server-builder /opt/dragonfly/bin/manager /opt/dragonfly/bin/server\nCOPY --from=console-builder /build/dist /opt/dragonfly/manager/console/dist\nCOPY --from=health /bin/grpc_health_probe /bin/grpc_health_probe\n\nEXPOSE 8080 65003\n\nENTRYPOINT [\"/opt/dragonfly/bin/server\"]\n"
}