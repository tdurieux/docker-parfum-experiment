{
  "startTime": 1674252855363,
  "endTime": 1674252855885,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:8-alpine AS web\n\nWORKDIR /opt/blocks/\n\nCOPY web ./\n\nRUN npm install \\\n  && export PATH=\"$PATH:./node_modules/.bin\" \\\n  && webpack --mode production && npm cache clean --force;\n\nFROM containers.intersystems.com/intersystems/iris-community:2020.3.0.200.0\n\nWORKDIR /opt/blocks\n\nUSER root\n\nRUN chown ${ISC_PACKAGE_MGRUSER}:${ISC_PACKAGE_IRISGROUP} ${PWD} && \\\n    apt-get -y update && \\\n    DEBIAN_FRONTEND=noninteractive apt-get -y install imagemagick --no-install-recommends && \\\n    rm -rf /var/lib/apt/lists/*\n\nUSER irisowner\n\nCOPY ./server/src/ ./src\nCOPY --from=web /opt/blocks/build/ /usr/irissys/csp/blocks/\n\nRUN iris start $ISC_PACKAGE_INSTANCENAME quietly \\\n  && /bin/echo -e \"do ##class(%SYSTEM.OBJ).Load(\\\"/opt/blocks/src/DevInstaller.cls\\\",\\\"cdk\\\")\\n\" \\\n  \"set sc=##class(Blocks.DevInstaller).setupWithVars(\\\"/opt/blocks/\\\")\\n\" \\\n  \"do:'sc \\$zu(4,\\$j,1)\\n\" \\\n  \"Halt\\n\" \\\n  | iris session ${ISC_PACKAGE_INSTANCENAME} \\\n  && iris stop $ISC_PACKAGE_INSTANCENAME quietly\n\nVOLUME [ \"/opt/blocks/db\" ]\n\nCOPY entrypoint.sh /\n\nENTRYPOINT [ \"/entrypoint.sh\" ]\n"
}