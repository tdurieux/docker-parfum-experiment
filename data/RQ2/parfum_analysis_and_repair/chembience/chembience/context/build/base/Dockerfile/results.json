{
  "startTime": 1674255007043,
  "endTime": 1674255008095,
  "originalSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 12,
        "columnStart": 49,
        "columnEnd": 112
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 12,
        "columnStart": 49,
        "columnEnd": 112
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 12,
        "columnStart": 49,
        "columnEnd": 112
      }
    }
  ],
  "repairedDockerfile": "FROM debian:bullseye-slim\nLABEL maintainer=\"markus.sitzmann@gmail.com \"\nARG conda_py\nARG conda_package\nARG rdkit_version\nARG cuid\nARG cgid\n\nENV PATH /opt/conda/bin:$PATH\n\nRUN apt-get --allow-releaseinfo-change update && apt-get -y --no-install-recommends install \\\n    ca-certificates \\\n    curl wget gosu sudo unzip tar bzip2 git gnupg2 joe postgresql-client-13 libfontconfig1 libxrender1 \tlibxext6 && rm -rf /var/lib/apt/lists/*;\n\nCOPY docker-entrypoint.sh /docker-entrypoint.sh\n\nRUN cd /tmp && \\\n    git clone https://github.com/chembience/pychembience.git && \\\n    cp -r pychembience /opt && \\\n    rm -rf pychembience\n\nRUN mkdir -p /opt/python\nCOPY requirements.txt /opt/python\n\nRUN echo 'export PATH=/opt/conda/bin:$PATH' > /etc/profile.d/conda.sh && \\\n    wget --quiet https://repo.continuum.io/miniconda/$conda_package && \\\n    /bin/bash /$conda_package -b -p /opt/conda && \\\n    rm $conda_package && \\\n    CONDA_PY=$conda_py conda install --freeze-installed anaconda-client --yes && \\\n    CONDA_PY=$conda_py conda config --add channels conda-forge && \\\n    CONDA_PY=$conda_py conda create --verbose --yes -n chembience && \\\n    /bin/bash -c \"source activate chembience\" && \\\n    CONDA_PY=$conda_py conda install pip && \\\n    CONDA_PY=$conda_py conda install --freeze-installed --yes --file /opt/python/requirements.txt && \\\n    CONDA_PY=$conda_py conda install cairo && \\\n    CONDA_PY=$conda_py conda install -c rdkit rdkit=$rdkit_version && \\\n    conda clean -afy && \\\n    find /opt/conda/ -follow -type f -name '*.a' -delete && \\\n    find /opt/conda/ -follow -type f -name '*.pyc' -delete && \\\n    find /opt/conda/ -follow -type f -name '*.js.map' -delete\n\nENTRYPOINT [\"/docker-entrypoint.sh\"]\n"
}