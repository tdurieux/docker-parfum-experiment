{
  "startTime": 1674250495898,
  "endTime": 1674250496952,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 55,
        "columnEnd": 89
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 51,
        "columnEnd": 85
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 11,
        "columnStart": 7,
        "columnEnd": 8
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 11,
        "columnStart": 7,
        "columnEnd": 8
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG VERSION=latest\nFROM connectedhomeip/chip-build:${VERSION}\n\n# JDK 8 access\n# JDK 8 is required because Android `sdkmanager`\n# doesn't work with JDK 11.\nRUN set -x \\\n    && apt-get update \\\n    && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -fy \\\n    openjdk-8-jdk \\\n    rsync \\\n    swig \\\n    && rm -rf /var/lib/apt/lists/ \\\n    && : && rm -rf /var/lib/apt/lists/*;\n\n# Download and install android SDK\nRUN set -x \\\n    && wget -O /tmp/android-21.zip https://dl.google.com/android/repository/android-21_r02.zip \\\n    && mkdir -p /opt/android/sdk/platforms \\\n    && cd /opt/android/sdk/platforms \\\n    && unzip /tmp/android-21.zip \\\n    && mv android-5.0.1 android-21 \\\n    && rm -f /tmp/android-21.zip \\\n    && chmod -R a+rX /opt/android/sdk \\\n    && test -d /opt/android/sdk/platforms/android-21 \\\n    && : # last line\n\n# Download and install android command line tool (for installing `sdkmanager`)\nRUN set -x \\\n    && wget -O /tmp/android-tools.zip https://dl.google.com/android/repository/sdk-tools-linux-3859397.zip \\\n    && cd /opt/android/sdk \\\n    && unzip /tmp/android-tools.zip \\\n    && rm -f /tmp/android-tools.zip \\\n    && test -d /opt/android/sdk/tools \\\n    && : # last line\n\n# Download and install android NDK\nRUN set -x \\\n    && cd /tmp \\\n    && wget https://dl.google.com/android/repository/android-ndk-r21b-linux-x86_64.zip \\\n    && mkdir -p /opt/android \\\n    && cd /opt/android \\\n    && unzip /tmp/android-ndk-r21b-linux-x86_64.zip \\\n    && rm -f /tmp/android-ndk-r21b-linux-x86_64.zip \\\n    && : # last line\n\n# Install specific release of openssl and compile for x86/armv7-a\n# Leaves compiled .so's in /usr/local/src/{arch}/openssl-1.1.1g dirs\n# CHIP builds may configure with --with-openssl using one of the arch dirs\n# NOTE: CHIP builds will also need to either link or copy libc++_shared.so from\n# the NDK and libcrypto.so (and any other deps) into the jniLibs for any APK that\n# is to be built with this image.\nRUN set -x \\\n    && export OPENSSL_ARMV7=/usr/local/src/armeabi-v7a \\\n    && export OPENSSL_X86=/usr/local/src/x86 \\\n    && export ANDROID_NDK_HOME=/opt/android/android-ndk-r21b \\\n    && export PATH=$ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin:$PATH \\\n    && cd /tmp && wget https://www.openssl.org/source/openssl-1.1.1g.tar.gz \\\n    && mkdir -p $OPENSSL_ARMV7 && cd $OPENSSL_ARMV7 && tar xfz /tmp/openssl-1.1.1g.tar.gz \\\n    && cd $OPENSSL_ARMV7/openssl-1.1.1g && CC=clang ANDROID_API=21 ./Configure android-arm -D__ANDROID_API__=21 && make SHLIB_VERSION_NUMBER= SHLIB_EXT=.so \\\n    && mkdir -p $OPENSSL_X86 && cd $OPENSSL_X86 && tar xfz /tmp/openssl-1.1.1g.tar.gz \\\n    && cd $OPENSSL_X86/openssl-1.1.1g && CC=clang ANDROID_API=21 ./Configure android-x86 -D__ANDROID_API__=21 && make SHLIB_VERSION_NUMBER= SHLIB_EXT=.so \\\n    && rm -rf /tmp/OpenSSL_1_1_1g.zip \\\n    && : && rm /tmp/openssl-1.1.1g.tar.gz\n\nENV ANDROID_HOME=/opt/android/sdk\nENV ANDROID_NDK_HOME=/opt/android/android-ndk-r21b\n"
}