{
  "startTime": 1674248265595,
  "endTime": 1674248267284,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 41,
        "lineEnd": 45,
        "columnStart": 7,
        "columnEnd": 96
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 65,
        "lineEnd": 67,
        "columnStart": 7,
        "columnEnd": 112
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 84,
        "lineEnd": 86,
        "columnStart": 7,
        "columnEnd": 120
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG VERSION=latest\nFROM connectedhomeip/chip-build:${VERSION}\n\n# ------------------------------------------------------------------------------\n# Add group/user for tizen\nARG USER_NAME=tizen\nARG USER_UID=1000\nARG USER_GID=$USER_UID\nENV USER_HOME /home/$USER_NAME\n\nRUN set -x \\\n    && groupadd -g $USER_GID $USER_NAME \\\n    && useradd -m $USER_NAME -s /bin/bash -u $USER_UID -g $USER_GID -G sudo -l \\\n    && : # last line\n\n# ------------------------------------------------------------------------------\n# Install dependencies\nRUN set -x \\\n    && apt-get update \\\n    && DEBIAN_FRONTEND=noninteractive apt-get install -fy --no-install-recommends \\\n    cpio=2.13+dfsg-2 \\\n    obs-build=20180831-3ubuntu1 \\\n    openjdk-8-jre-headless \\\n    zip \\\n    # Cleanup\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/* \\\n    && : # last line\n\n# ------------------------------------------------------------------------------\n# Install tizen SDK\nENV TIZEN_SDK_ROOT /opt/tizen-sdk\nENV TIZEN_VERSION 6.0\n\nWORKDIR /tmp/workdir\n\n# ------------------------------------------------------------------------------\n# Get tizen studio CLI\nRUN set -x \\\n    && mkdir -p $TIZEN_SDK_ROOT \\\n    # Download \\\n    && wget --progress=dot:giga \\\n    https://download.tizen.org/sdk/tizenstudio/official/binary/certificate-encryptor_1.0.7_ubuntu-64.zip \\\n    https://download.tizen.org/sdk/tizenstudio/official/binary/certificate-generator_0.1.3_ubuntu-64.zip \\\n    https://download.tizen.org/sdk/tizenstudio/official/binary/new-common-cli_2.5.7_ubuntu-64.zip \\\n    https://download.tizen.org/sdk/tizenstudio/official/binary/new-native-cli_2.5.7_ubuntu-64.zip \\\n    # Install tizen studio CLI\n    && unzip -o '*.zip' \\\n    && cp -rf data/* $TIZEN_SDK_ROOT \\\n    && echo \"TIZEN_SDK_INSTALLED_PATH=$TIZEN_SDK_ROOT\" > $TIZEN_SDK_ROOT/sdk.info \\\n    && echo \"TIZEN_SDK_DATA_PATH=$USER_HOME/tizen-sdk-data\" >> $TIZEN_SDK_ROOT/sdk.info \\\n    && ln -sf $USER_HOME/.tizen-cli-config $TIZEN_SDK_ROOT/tools/.tizen-cli-config \\\n    # Cleanup\n    && rm -rf /tmp/workdir \\\n    && :\n\nCOPY secret-tool.py $TIZEN_SDK_ROOT/tools/certificate-encryptor/secret-tool\nRUN chmod 0755 $TIZEN_SDK_ROOT/tools/certificate-encryptor/secret-tool\nENV PATH=\"$TIZEN_SDK_ROOT/tools/ide/bin:$PATH\"\n\n# ------------------------------------------------------------------------------\n# Get toolchain\nRUN set -x \\\n    && mkdir -p $TIZEN_SDK_ROOT \\\n    # Download \\\n    && wget --progress=dot:giga \\\n    https://download.tizen.org/sdk/tizenstudio/official/binary/cross-arm-gcc-9.2_0.1.9_ubuntu-64.zip \\\n    https://download.tizen.org/sdk/tizenstudio/official/binary/sbi-toolchain-gcc-9.2.cpp.app_2.2.16_ubuntu-64.zip \\\n    # Install toolchain\n    && unzip -o '*.zip' \\\n    && cp -rf data/* $TIZEN_SDK_ROOT \\\n    # Cleanup\n    && rm -rf /tmp/workdir \\\n    && :\n\nENV TIZEN_SDK_TOOLCHAIN $TIZEN_SDK_ROOT/tools/arm-linux-gnueabi-gcc-9.2\nENV PATH=\"$TIZEN_SDK_TOOLCHAIN/bin:$PATH\"\n\n# ------------------------------------------------------------------------------\n# Get tizen sysroot\nENV TIZEN_SDK_SYSROOT \\\n    $TIZEN_SDK_ROOT/platforms/tizen-$TIZEN_VERSION/mobile/rootstraps/mobile-$TIZEN_VERSION-device.core\nRUN set -x \\\n    # Base sysroot \\\n    && wget --progress=dot:giga \\\n    https://download.tizen.org/sdk/tizenstudio/official/binary/mobile-$TIZEN_VERSION-core-add-ons_0.0.262_ubuntu-64.zip \\\n    https://download.tizen.org/sdk/tizenstudio/official/binary/mobile-$TIZEN_VERSION-rs-device.core_0.0.123_ubuntu-64.zip \\\n    # Base packages\n    && wget --progress=dot:mega -r -nd --no-parent \\\n    http://download.tizen.org/releases/milestone/tizen/base/latest/repos/standard/packages/armv7l/ \\\n    -A 'iniparser-*.armv7l.rpm' \\\n    -A 'libblkid-devel-*.armv7l.rpm' \\\n    -A 'libcap-*.armv7l.rpm' \\\n    -A 'libffi-devel-*.armv7l.rpm' \\\n    -A 'liblzma-*.armv7l.rpm' \\\n    -A 'libmount-devel-*.armv7l.rpm' \\\n    -A 'libuuid-*.armv7l.rpm' \\\n    -A 'pcre-devel-*.armv7l.rpm' \\\n    -A 'xdgmime-*.armv7l.rpm' \\\n    # Unified packages\n    && wget --progress=dot:mega -r -nd --no-parent \\\n    http://download.tizen.org/releases/milestone/tizen/unified/latest/repos/standard/packages/armv7l/ \\\n    -A 'aul-0*.armv7l.rpm' \\\n    -A 'aul-devel-*.armv7l.rpm' \\\n    -A 'bundle-0*.armv7l.rpm' \\\n    -A 'bundle-devel-*.armv7l.rpm' \\\n    -A 'buxton2-*.armv7l.rpm' \\\n    -A 'cynara-devel-*.armv7l.rpm' \\\n    -A 'dbus-1*.armv7l.rpm' \\\n    -A 'dbus-devel-*.armv7l.rpm' \\\n    -A 'dbus-libs-1*.armv7l.rpm' \\\n    -A 'glib2-devel-2*.armv7l.rpm' \\\n    -A 'json-glib-devel-*.armv7l.rpm' \\\n    -A 'libcynara-client-*.armv7l.rpm' \\\n    -A 'libcynara-commons-*.armv7l.rpm' \\\n    -A 'libdns_sd-*.armv7l.rpm' \\\n    -A 'libjson-glib-*.armv7l.rpm' \\\n    -A 'libsystemd-*.armv7l.rpm' \\\n    -A 'libtzplatform-config-*.armv7l.rpm' \\\n    -A 'parcel-0*.armv7l.rpm' \\\n    -A 'parcel-devel-*.armv7l.rpm' \\\n    -A 'pkgmgr-info-*.armv7l.rpm' \\\n    -A 'vconf-compat-*.armv7l.rpm' \\\n    -A 'vconf-internal-keys-devel-*.armv7l.rpm' \\\n    # Unified packages (snapshots)\n    && wget --progress=dot:mega -r -nd --no-parent \\\n    http://download.tizen.org/snapshots/tizen/unified/latest/repos/standard/packages/armv7l/ \\\n    -A 'capi-network-nsd-*.armv7l.rpm' \\\n    -A 'capi-network-thread-*.armv7l.rpm' \\\n    -A 'libnsd-dns-sd-*.armv7l.rpm' \\\n    # Install base sysroot\n    && unzip -o '*.zip' \\\n    && cp -rf data/* $TIZEN_SDK_ROOT \\\n    # Install packages\n    && unrpm *.rpm \\\n    && cp -rf lib usr $TIZEN_SDK_SYSROOT \\\n    # Fix some symbolic links\n    && ln -sf libcap.so.2 $TIZEN_SDK_SYSROOT/usr/lib/libcap.so \\\n    && ln -sf libdns_sd.so.878.70.2 $TIZEN_SDK_SYSROOT/usr/lib/libdns_sd.so \\\n    && ln -sf libdns_sd.so.878.70.2 $TIZEN_SDK_SYSROOT/usr/lib/libdns_sd.so.878 \\\n    && ln -sf openssl1.1.pc $TIZEN_SDK_SYSROOT/usr/lib/pkgconfig/openssl.pc \\\n    # Cleanup\n    && rm -rf /tmp/workdir \\\n    && :\n\n# ------------------------------------------------------------------------------\n# Switch to the non-root user\nUSER $USER_NAME\nWORKDIR $USER_HOME\n\n# ------------------------------------------------------------------------------\n# Setup tizen studio CLI\nRUN set -x \\\n    # Generate author certificate\n    && tizen certificate --alias=CHIP --name=CHIP --email=chip@tizen.org --password=chiptizen \\\n    # Add new security profile\n    && tizen security-profiles add --active --name=CHIP --author=$HOME/tizen-sdk-data/keystore/author/author.p12 --password=chiptizen \\\n    # Cleanup\n    && : # last line\n"
}