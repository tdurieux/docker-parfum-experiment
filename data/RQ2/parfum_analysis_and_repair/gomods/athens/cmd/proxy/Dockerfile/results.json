{
  "startTime": 1674249994082,
  "endTime": 1674249995034,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 87
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Links to compare against to ensure we have all VCS's setup in this build\n# https://github.com/docker-library/buildpack-deps/blob/1845b3f918f69b4c97912b0d4d68a5658458e84f/stretch/scm/Dockerfile\n# https://github.com/golang/go/blob/f082dbfd4f23b0c95ee1de5c2b091dad2ff6d930/src/cmd/go/internal/get/vcs.go#L90\n#\n# You can override the Go version used to build the image.\n# See project Makefile if using make.\n# See docker --build-arg if building directly.\nARG GOLANG_VERSION=1.18\nARG ALPINE_VERSION=3.15\n\nFROM golang:${GOLANG_VERSION}-alpine AS builder\n\nWORKDIR $GOPATH/src/github.com/gomods/athens\n\nCOPY . .\n\nARG VERSION=\"unset\"\n\nRUN DATE=\"$(date -u +%Y-%m-%d-%H:%M:%S-%Z)\" && GO111MODULE=on CGO_ENABLED=0 GOPROXY=\"https://proxy.golang.org\" go build -ldflags \"-X github.com/gomods/athens/pkg/build.version=$VERSION -X github.com/gomods/athens/pkg/build.buildDate=$DATE\" -o /bin/athens-proxy ./cmd/proxy\n\nFROM alpine:${ALPINE_VERSION}\n\nENV GO111MODULE=on\n\nCOPY --from=builder /bin/athens-proxy /bin/athens-proxy\nCOPY --from=builder /go/src/github.com/gomods/athens/config.dev.toml /config/config.toml\nCOPY --from=builder /usr/local/go/bin/go /bin/go\n\nRUN chmod 644 /config/config.toml\n\n# Add tini, see https://github.com/gomods/athens/issues/1155 for details.\nRUN apk add --no-cache --update git git-lfs mercurial openssh-client subversion procps fossil tini && \\\n\tmkdir -p /usr/local/go\n\nEXPOSE 3000\n\nENTRYPOINT [ \"/sbin/tini\", \"--\" ]\n\nCMD [\"athens-proxy\", \"-config_file=/config/config.toml\"]\n"
}