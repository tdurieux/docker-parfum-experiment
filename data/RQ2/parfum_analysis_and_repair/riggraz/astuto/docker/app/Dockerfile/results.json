{
  "startTime": 1674252141193,
  "endTime": 1674252141695,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 26,
        "columnEnd": 69
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 26,
        "columnEnd": 69
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ruby:2.6.6\n\nRUN curl -f -sL https://deb.nodesource.com/setup_14.x | bash -\nRUN apt-get update -qq && apt-get install --no-install-recommends -y nodejs postgresql-client && rm -rf /var/lib/apt/lists/*;\nRUN npm install -g yarn && npm cache clean --force;\n\n# Install Chrome (only needed for Capybara tests)\n# Uncomment following lines if you need to run integration tests\n# RUN wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb\n# RUN dpkg -i /google-chrome-stable_current_amd64.deb; apt-get -fy install\n# RUN rm /google-chrome-stable_current_amd64.deb\n\nENV APP_ROOT /astuto\nRUN mkdir ${APP_ROOT}\nWORKDIR ${APP_ROOT}\n\n# Launch processes in Procfile\nRUN gem install foreman\n\n# Copy Gemfile and install gems\nCOPY Gemfile Gemfile.lock ${APP_ROOT}/\nRUN bundle install\n\n# Copy package.json and install packages\nCOPY package.json yarn.lock ${APP_ROOT}/\nRUN yarn install --check-files && yarn cache clean;\n\nCOPY . ${APP_ROOT}\n\n# Add a script to be executed every time the container starts.\nENTRYPOINT [\"./docker-entrypoint.sh\"]\n\nEXPOSE 3000\n\n# No default CMD is provided in Dockerfile"
}