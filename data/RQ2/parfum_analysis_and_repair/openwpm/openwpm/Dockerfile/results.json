{
  "startTime": 1674220633865,
  "endTime": 1674220634862,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 7,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 7,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 7,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 7,
        "columnEnd": 39
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 7,
        "columnEnd": 40
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 7,
        "columnEnd": 39
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM krallin/ubuntu-tini:bionic\n\nSHELL [\"/bin/bash\", \"-c\"]\n\n# Update ubuntu and setup conda\n# adapted from: https://hub.docker.com/r/conda/miniconda3/dockerfile\nRUN sed -i'' 's/archive\\.ubuntu\\.com/us\\.archive\\.ubuntu\\.com/' /etc/apt/sources.list\nRUN apt-get clean -qq \\\n    && rm -r /var/lib/apt/lists/* -vf \\\n    && apt-get clean -qq \\\n    && apt-get update -qq \\\n    && apt-get upgrade -qq \\\n    # git and make for `npm install`, wget for `install-miniconda` \\\n    && apt-get install -y --no-install-recommends wget git make -qq \\\n    # deps to run firefox inc. with xvfb\n    && apt-get install -y --no-install-recommends firefox xvfb -qq && rm -rf /var/lib/apt/lists/*;\n\nENV HOME /opt\nCOPY scripts/install-miniconda.sh .\nRUN ./install-miniconda.sh\nENV PATH $HOME/miniconda/bin:$PATH\n\n# Install OpenWPM\nWORKDIR /opt/OpenWPM\nCOPY . .\nRUN ./install.sh\nENV PATH $HOME/miniconda/envs/openwpm/bin:$PATH\n\n# Move the firefox binary away from the /opt/OpenWPM root so that it is available if\n# we mount a local source code directory as /opt/OpenWPM\nRUN mv firefox-bin /opt/firefox-bin\nENV FIREFOX_BINARY /opt/firefox-bin/firefox-bin\n\n# Setting demo.py as the default command\nCMD [ \"python\", \"demo.py\"]\n"
}