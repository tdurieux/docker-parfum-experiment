{
  "startTime": 1674252578389,
  "endTime": 1674252579423,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 5,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 5,
        "columnEnd": 42
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 5,
        "columnEnd": 58
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 5,
        "columnEnd": 27
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3-alpine\n\nRUN mkdir -p /data/microservice\n\n# We copy just the requirements.txt first to leverage Docker cache\nCOPY [\"requirements.txt\",\"app.py\", \"/data/\"]\nCOPY [\"microservice/\", \"/data/microservice/\"]\n\nRUN apk update \\\n  && apk add --no-cache --virtual build-deps gcc python3-dev musl-dev \\\n  && apk add --no-cache postgresql-dev \\\n  && pip install --no-cache-dir --upgrade pip \\\n  && pip install --no-cache-dir -r /data/requirements.txt \\\n  && apk del build-deps\n\nWORKDIR /data\n\nENTRYPOINT [\"gunicorn\"]\n\nCMD [\"--bind\", \"0.0.0.0:8000\", \"app:app\"]\n\n# cd backend/ && export FLASK_APP=app && flask run  # port 5000  \n# docker build -t <account>/microservice:v0.0.1 .\n# docker run --rm --name micro-service -it -e PSQL_DB_ADDRESS=192.168.1.45 -p 5001:8000 -d <account>/microservice:v0.0.1\n"
}