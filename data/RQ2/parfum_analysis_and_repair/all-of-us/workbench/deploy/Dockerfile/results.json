{
  "startTime": 1674250552721,
  "endTime": 1674250553591,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 31
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Image used for deployment. The Circle image is not used here as it does not\n# have an ARM build (M1 chip requires emulation).\n# Keep synchronized with ci/Dockerfile.circle_build\nFROM openjdk:8-buster\n\nRUN apt-get update \\\n  && apt-get install --no-install-recommends -yq \\\n  gettext \\\n  ruby \\\n  default-mysql-client \\\n  python3 \\\n  python3-pip \\\n  nodejs \\\n  npm \\\n  wait-for-it \\\n  && apt-get clean \\\n  && rm -rf /var/lib/apt/lists/*\n\nRUN npm install --global yarn n && npm cache clean --force;\n# Upgrade to Node 14, above installs 10.\nRUN n 14\n\nENV CLOUD_SDK_VERSION 392.0.0\n\nWORKDIR /root\nRUN wget https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-${CLOUD_SDK_VERSION}-linux-x86_64.tar.gz -O gcloud.tgz && \\\n  tar -xf gcloud.tgz && \\\n  ./google-cloud-sdk/install.sh  --quiet && \\\n  ./google-cloud-sdk/bin/gcloud components install app-engine-java && \\\n  rm -rf gcloud.tgz\n\nENV PATH=~/node/bin:~/google-cloud-sdk/bin:$PATH\n\nRUN wget https://dl.google.com/cloudsql/cloud_sql_proxy.linux.amd64 -O /tmp/cloud_sql_proxy \\\n  && mv /tmp/cloud_sql_proxy /usr/local/bin && chmod +x /usr/local/bin/cloud_sql_proxy\n\n# It never makes sense for Gradle to run a daemon within a docker container.\nENV GRADLE_OPTS=\"-Dorg.gradle.daemon=false\"\n\nENV GRADLE_VERSION 6.7.1\n\nRUN wget \"https://services.gradle.org/distributions/gradle-${GRADLE_VERSION}-bin.zip\" -O /tmp/gradle.zip \\\n  && unzip /tmp/gradle.zip -d /opt/gradle\nENV PATH=\"/opt/gradle/gradle-${GRADLE_VERSION}/bin:${PATH}\"\n\n# Force a lower concurrent-ruby version, as we only have Ruby 2.3.\nRUN gem install activesupport -v 6.1.4.6\nRUN gem install jira-ruby\n"
}