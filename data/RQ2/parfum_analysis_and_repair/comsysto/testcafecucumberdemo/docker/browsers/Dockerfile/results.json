{
  "startTime": 1674246000600,
  "endTime": 1674246001651,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 7,
        "columnEnd": 52
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 100,
        "lineEnd": 100,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 101,
        "lineEnd": 101,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 32,
        "lineEnd": 39,
        "columnStart": 7,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 7,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 63,
        "lineEnd": 64,
        "columnStart": 5,
        "columnEnd": 43
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 84,
        "lineEnd": 84,
        "columnStart": 5,
        "columnEnd": 33
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 7,
        "columnEnd": 34
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "##########################################################\n# Build this if you want to run UI tests on Chrome and Firefox browser with xvfb server\n############################################################\n\nFROM ubuntu:latest\nMAINTAINER Renato Curic \"r.curic@reply.de\"\n# Run stuff as root\n\nUSER root\n\n# Create global npm folder so we can install npm into it (There were problems with permissions)\n\nRUN mkdir /opt/.npm-global\n\n# Set npm env variable so we use the custom npm folder\n\nENV NPM_CONFIG_PREFIX=/opt/.npm-global\n\n# Create node user\n\nRUN useradd -ms /bin/sh node\n\n# Give write permissions to folder\n\nRUN chown node /opt/.npm-global\n\n# Install with apt\n\n###################################################################################################\n# Possible problem when building on AWS amazon linux: add gpg-agent to list of programs to install\n###################################################################################################\nRUN apt-get update -qqy \\\n    && apt-get -qqy --no-install-recommends install \\\n        wget \\\n        curl \\\n        ca-certificates \\\n        bzip2 \\\n        apt-transport-https \\\n        software-properties-common \\\n        xvfb \\\n    && rm -rf /var/lib/apt/lists/*\n\n\n\n# Download node installation and install\nRUN curl -fsSL https://deb.nodesource.com/gpgkey/nodesource.gpg.key | apt-key add - \\\n    && curl -f -sL https://deb.nodesource.com/setup_8.x | bash 2>/dev/null \\\n    && apt-get update -qqy \\\n    && apt-get install --no-install-recommends -qqy nodejs && rm -rf /var/lib/apt/lists/*;\n\n# Install Chrome Browser\n\n# You can specify versions by CHROME_VERSION;\n#  e.g. google-chrome-stable\n#       google-chrome-beta\n#       google-chrome-unstable\n#       latest (equivalent to google-chrome-stable)\n#       google-chrome-beta (pull latest beta)\n\nARG CHROME_VERSION=\"google-chrome-stable\"\nRUN wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - \\\n  && echo \"deb http://dl.google.com/linux/chrome/deb/ stable main\" >> /etc/apt/sources.list.d/google-chrome.list \\\n  && apt-get update -qqy \\\n  && apt-get -qqy --no-install-recommends install \\\n    ${CHROME_VERSION:-google-chrome-stable} \\\n  && rm /etc/apt/sources.list.d/google-chrome.list \\\n  && rm -rf /var/lib/apt/lists/* /var/cache/apt/*\n\n\n# Chrome Launch Script Modification\n\nCOPY docker/browsers/bin/chrome_launcher.sh /opt/google/chrome/google-chrome\nRUN chmod +x /opt/google/chrome/google-chrome\n\n# Install Firefox Browser\n\n# You can specify versions by FIREFOX_VERSION;\n#  e.g.  latest\n#        nightly-latest\n#        devedition-latest\n\nARG FIREFOX_VERSION=latest\nRUN FIREFOX_DOWNLOAD_URL=$(echo \"https://download.mozilla.org/?product=firefox-$FIREFOX_VERSION&os=linux64&lang=en-US\") \\\n  && apt-get update -qqy \\\n  && apt-get -qqy --no-install-recommends install firefox \\\n  && rm -rf /var/lib/apt/lists/* /var/cache/apt/* \\\n  && wget --no-verbose -O /tmp/firefox.tar.bz2 $FIREFOX_DOWNLOAD_URL \\\n  && apt-get -y purge firefox \\\n  && rm -rf /opt/firefox \\\n  && tar -C /opt -xjf /tmp/firefox.tar.bz2 \\\n  && rm /tmp/firefox.tar.bz2 \\\n  && mv /opt/firefox /opt/firefox-$FIREFOX_VERSION \\\n  && ln -fs /opt/firefox-$FIREFOX_VERSION/firefox /usr/bin/firefox\n\n# Install as node (npm does not recommend to install npm as root, also had problems while doing so)\n\nUSER node\n\n# Install npm\n\nRUN npm install -g npm@latest && npm cache clean --force;\nRUN npm install -g @angular/cli 2>/dev/null && npm cache clean --force;\n\n# Fix problems with npm\n\nRUN npm update\nRUN npm rebuild node-sass"
}