{
  "startTime": 1674255244982,
  "endTime": 1674255245850,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 34
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Build SPA\nFROM node:16 as SPA\n\nCOPY ./ui /ui\nWORKDIR /ui\n\nRUN npm install --no-optional && npm cache clean --force;\nRUN npm run build\n\n# Build binary\nFROM golang:1.17 as builder\n\nCOPY . $GOPATH/src/github.com/AlbinoDrought/creamy-videos\nWORKDIR $GOPATH/src/github.com/AlbinoDrought/creamy-videos\n\n# compress source for later downloading\nRUN tar -zcvf /tmp/source.tar.gz . && rm /tmp/source.tar.gz\n\n# copy built SPA\nCOPY --from=SPA /ui/dist $GOPATH/src/github.com/AlbinoDrought/creamy-videos/ui/dist\n# shove compressed source into SPA dist\nRUN cp /tmp/source.tar.gz ui/dist\n\nENV CGO_ENABLED=0 \\\n  GOOS=linux \\\n  GOARCH=amd64\n\n# install dependencies\nRUN go get -d -v\n# install go.rice buildtool\nRUN go get github.com/GeertJohan/go.rice/rice\n\n# create embedded SPA files\nRUN cd cmd && rice embed-go\n# build full binary\nRUN go build -a -installsuffix cgo -o /go/bin/creamy-videos\n\n# start from ffmpeg for thumbnail gen\nFROM jrottenberg/ffmpeg:4.0-alpine\n\nRUN apk add --no-cache tini\n\n# Copy our static executable\nCOPY --from=builder /go/bin/creamy-videos /go/bin/creamy-videos\n\nENTRYPOINT [\"/sbin/tini\"]\nCMD [\"/go/bin/creamy-videos\", \"serve\"]\n"
}