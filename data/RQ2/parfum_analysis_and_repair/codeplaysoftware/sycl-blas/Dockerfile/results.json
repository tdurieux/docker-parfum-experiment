{
  "startTime": 1674246974080,
  "endTime": 1674246979124,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 89
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 24,
        "lineEnd": 26,
        "columnStart": 47,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 29,
        "lineEnd": 31,
        "columnStart": 43,
        "columnEnd": 16
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 34,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 78
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 89
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 24,
        "lineEnd": 26,
        "columnStart": 47,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 29,
        "lineEnd": 31,
        "columnStart": 43,
        "columnEnd": 16
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 34,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 78
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 89
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 24,
        "lineEnd": 26,
        "columnStart": 47,
        "columnEnd": 26
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 29,
        "lineEnd": 31,
        "columnStart": 43,
        "columnEnd": 16
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 34,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 78
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 89
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 25,
        "lineEnd": 27,
        "columnStart": 1,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 31,
        "lineEnd": 33,
        "columnStart": 1,
        "columnEnd": 16
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 36,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 78
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:xenial\n\n# Default values for the build\nARG git_branch\nARG git_slug\nARG c_compiler\nARG cxx_compiler\nARG impl\nARG target\n\nRUN apt-get -yq update\n\n# Utilities\nRUN apt-get install --no-install-recommends -yq --allow-downgrades --allow-remove-essential \\\n    --allow-change-held-packages git wget python-pip apt-utils cmake unzip \\\n    libboost-all-dev software-properties-common python-software-properties libcompute-dev && rm -rf /var/lib/apt/lists/*;\n\nRUN add-apt-repository -y ppa:ubuntu-toolchain-r/test\n\nRUN apt-get -yq update\n\nRUN pip install --no-cache-dir enum34\n\n# Clang 6.0\nRUN if [ \"${c_compiler}\" = 'clang-6.0' ]; then \\\n apt-get install --no-install-recommends -yq \\\n    --allow-downgrades --allow-remove-essential --allow-change-held-packages \\\n     clang-6.0 libomp-dev; rm -rf /var/lib/apt/lists/*; fi\n\n# GCC 7\nRUN if [ \"${c_compiler}\" = 'gcc-7' ]; then \\\n apt-get install --no-install-recommends -yq \\\n    --allow-downgrades --allow-remove-essential --allow-change-held-packages \\\n    g++-7 gcc-7; rm -rf /var/lib/apt/lists/*; fi\n\n# OpenCL ICD Loader\nRUN apt-get install --no-install-recommends -yq --allow-downgrades --allow-remove-essential \\\n    --allow-change-held-packages ocl-icd-opencl-dev ocl-icd-dev opencl-headers && rm -rf /var/lib/apt/lists/*;\n\nRUN git clone https://github.com/${git_slug}.git --recursive -b ${git_branch} /sycl-blas\n\n#OpenBLAS\nRUN bash /sycl-blas/.scripts/build_OpenBLAS.sh\n# Intel OpenCL Runtime\nRUN if [ \"${target}\" = 'opencl' ]; then bash /sycl-blas/.scripts/install_intel_opencl.sh; fi\n\n# SYCL\nRUN if [ \"${impl}\" = 'triSYCL' ]; then cd /sycl-blas && bash /sycl-blas/.scripts/build_triSYCL.sh; fi\nRUN if [ \"${impl}\" = 'COMPUTECPP' ]; then cd /sycl-blas && bash /sycl-blas/.scripts/build_computecpp.sh; fi\n\nENV CC=${c_compiler}\nENV CXX=${cxx_compiler}\nENV SYCL_IMPL=${impl}\nENV TARGET=${target}\n\nCMD cd /sycl-blas && \\\n    export CMAKE_ARGS='-DBLAS_ENABLE_STATIC_LIBRARY=ON -DGEMM_TALL_SKINNY_SUPPORT=OFF' && \\\n    if [ \"${SYCL_IMPL}\" = 'triSYCL' ]; then \\\n      ./build.sh --trisycl -DTRISYCL_INCLUDE_DIR=/tmp/triSYCL-master/include; \\\n    elif [ \"${SYCL_IMPL}\" = 'COMPUTECPP' ]; then \\\n      if [ \"${TARGET}\" = 'host' ]; then \\\n        COMPUTECPP_TARGET=\"host\" ./build.sh /tmp/ComputeCpp-latest /tmp/OpenBLAS/build; \\\n      else \\\n        /tmp/ComputeCpp-latest/bin/computecpp_info && \\\n        COMPUTECPP_TARGET=\"intel:cpu\" ./build.sh /tmp/ComputeCpp-latest /tmp/OpenBLAS/build; \\\n      fi \\\n    else \\\n      echo \"Unknown SYCL implementation ${SYCL_IMPL}\"; return 1; \\\n    fi\n"
}