{
  "startTime": 1674254649764,
  "endTime": 1674254650433,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 5,
        "columnEnd": 86
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 5,
        "columnEnd": 61
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 28,
        "columnStart": 44,
        "columnEnd": 5
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 28,
        "columnStart": 44,
        "columnEnd": 5
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:latest\n\n# This Dockerfile contains the entire development environment\n# Some of this is potentially best effort\n\nARG USERNAME=dev\nARG USERPASSWORD=dev\nARG GOVERSION=1.16.5\n\n# pull down some dependencies\nRUN apt-get update && apt-get upgrade -y && apt-get install --no-install-recommends -y \\\n  build-essential \\\n  curl \\\n  exa \\\n  fzf \\\n  git \\\n  jq \\\n  libreadline-dev \\\n  libsqlite3-dev \\\n  libssl-dev \\\n  locales \\\n  sqlite3 \\\n  tree \\\n  tmux \\\n  unzip \\\n  vim \\\n  wget \\\n  zlib1g-dev \\\n  zsh && rm -rf /var/lib/apt/lists/*;\n\n# Set up a message of the day to tell the user about this container\nCOPY motd /etc/\n\n# install golang manually\nRUN cd /tmp \\\n  && wget -q https://dl.google.com/go/go${GOVERSION}.linux-amd64.tar.gz \\\n  && tar -C /usr/local -xzf go${GOVERSION}.linux-amd64.tar.gz && rm go${GOVERSION}.linux-amd64.tar.gz\n\n# install the rust toolchain installer too\nRUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh\n\n# install the AWS CLI v2\nRUN cd /tmp \\\n  && curl -f \"https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip\" -o \"awscliv2.zip\" \\\n  && unzip awscliv2.zip \\\n  && ./aws/install\n\n# set up home directory for users\nRUN mkdir -p /home\n\n# create a new user inside the docker container\nRUN adduser --quiet --disabled-password --shell /bin/zsh --home /home/${USERNAME} --gecos \"User\" ${USERNAME} \\\n  && echo \"${USERNAME}:${USERPASSWORD}\" | chpasswd && usermod -aG sudo ${USERNAME}\n\n# switch to the user so that everything is installed for it\nUSER ${USERNAME}\n\n# make some directories\nRUN mkdir -p /home/${USERNAME}/git-projects \\\n  && mkdir -p /home/${USERNAME}/tmp \\\n  && mkdir -p /home/${USERNAME}/go\n\n# setup our env - user, goroot, and path\nENV \\\n  USER=${USERNAME} \\\n  USERNAME=${USERNAME} \\\n  GOROOT=\"/usr/local/go/bin\" \\\n  PATH=\"/home/${USERNAME}/.rbenv/bin:/home/${USERNAME}/.rbenv/shims:${PATH}:/home/${USERNAME}/.cargo/bin\"\n\n# run a quick rust update to get the latest stable version\nRUN rustup update\n\n# install oh-my-zsh and a couple of added tools, because otherwise, what's the point\nRUN wget https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh -O - | zsh || true\nRUN git clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions\nRUN git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting\nRUN git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm\n\n# install some other tools\nRUN wget -qO- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.3/install.sh | bash\nRUN wget -qO- https://github.com/rbenv/rbenv-installer/raw/master/bin/rbenv-installer | bash\n\n# copy the files that need to be in place\nCOPY linux/.zshrc linux/.tmux.conf linux/.vimrc /home/${USERNAME}/\n\n# install the vim plugins\nRUN vim +PlugInstall +qall > /dev/null\n\n# set our working directory as the git projects directory\nWORKDIR /home/${USERNAME}/git-projects\n\n# start in zsh instead of bash\nCMD [ \"zsh\" ]\n"
}