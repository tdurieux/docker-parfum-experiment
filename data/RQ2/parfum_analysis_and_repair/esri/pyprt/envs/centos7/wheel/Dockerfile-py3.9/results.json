{
  "startTime": 1674219520634,
  "endTime": 1674219521249,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 78
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 28
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG REGISTRY=''\nARG BASE_TAG=''\nFROM ${REGISTRY}pyprt-base:${BASE_TAG}\n\n# no RPM repos yet, we manually build Python 3.9 with default CentOS 7 toolchain\nWORKDIR /tmp\nADD https://www.python.org/ftp/python/3.9.6/Python-3.9.6.tar.xz python_src.tar.xz\nRUN yum install -y gcc make openssl-devel libffi-devel bzip2-devel liblzma-dev && rm -rf /var/cache/yum\nRUN tar xf python_src.tar.xz && \\\n    pushd Python-3.9.6 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-optimizations && \\\n    CPU_COUNT=$(grep -c ^processor /proc/cpuinfo) && \\\n    make -j$CPU_COUNT altinstall && \\\n    popd && \\\n    python3.9 -V && rm python_src.tar.xz\n\n## this container works with mounted host directories\n## we create a user with matching uid/gid to avoid permissions issues\n## inspired by https://vsupalov.com/docker-shared-permissions/\nARG USER_ID\nARG GROUP_ID\nRUN groupadd --gid $GROUP_ID user\nRUN useradd --uid $USER_ID --gid $GROUP_ID user\nUSER user\n\n## also see https://github.com/sclorg/devtoolset-container\nRUN echo \"unset BASH_ENV PROMPT_COMMAND ENV && source scl_source enable devtoolset-9\" >> /tmp/scl_enable\nENV BASH_ENV=/tmp/scl_enable ENV=/tmp/scl_enable PROMPT_COMMAND=\". /tmp/scl_enable\"\n\nWORKDIR /tmp/pyprt/docker\nCOPY envs/centos7/wheel/requirements-py3.9.txt ./requirements.txt\n\nENV VIRTUAL_ENV=/tmp/pyprt-venv\nRUN python3.9 -m venv $VIRTUAL_ENV\nENV PATH=\"$VIRTUAL_ENV/bin:$PATH\"\n\nRUN python -V && \\\n    python -m pip install --no-cache-dir --upgrade pip && python -m pip install --no-cache-dir --upgrade wheel && \\\n    python -m pip install --no-cache-dir -r requirements.txt\n"
}