{
  "startTime": 1674255573195,
  "endTime": 1674255574149,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 61
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 6,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 16,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 11
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM centos:7\n\nRUN yum update -y\n\n# Add packages for EH build\nRUN yum install -y \\\n    bzip2-devel \\\n    git \\\n    libcurl-devel \\\n    libstdc++-static \\\n    openssl-devel \\\n    xz-devel \\\n    zlib-devel && rm -rf /var/cache/yum\n\n# Add packages for cmake build\nRUN yum install -y \\\n    curl \\\n    gcc \\\n    gcc-c++ \\\n    make \\\n    openssl && rm -rf /var/cache/yum\n\n# Build newer cmake from source\nRUN mkdir -p /download/cmake && cd /download/cmake && \\\n    curl -f -s https://cmake.org/files/v3.20/cmake-3.20.5.tar.gz | tar xz && \\\n    mkdir build && cd build && \\\n    ../cmake-3.20.5/configure && \\\n    make -j8 && make install && \\\n    cd && rm -rf /download\n\n# Build gcc9 from src\nRUN yum install -y bzip2 wget && rm -rf /var/cache/yum\nRUN mkdir -p /download/gcc && cd /download/gcc && \\\n    curl -f -s ftp://ftp.gnu.org/gnu/gcc/gcc-9.4.0/gcc-9.4.0.tar.xz | tar xJ && \\\n    cd gcc-9.4.0 && ./contrib/download_prerequisites && cd .. && \\\n    mkdir -p build && cd build && \\\n    ../gcc-9.4.0/configure \\\n        --prefix=/opt/gcc-9.4.0 \\\n        --disable-bootstrap \\\n        --disable-multilib \\\n        --enable-lto \\\n        --with-system-zlib \\\n        --enable-languages=c,c++ && \\\n    make -j8 && make install && \\\n    cd && rm -rf /download\n\n# Set CC/CXX to new gcc version:\nENV CC /opt/gcc-9.4.0/bin/gcc\nENV CXX /opt/gcc-9.4.0/bin/g++\n\n"
}