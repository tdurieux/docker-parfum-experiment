{
  "startTime": 1674251132385,
  "endTime": 1674251133871,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 85,
        "lineEnd": 85,
        "columnStart": 4,
        "columnEnd": 128
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Generated by Neurodocker version 0.5.0\n# Timestamp: 2019-09-28 17:57:57 UTC\n#\n# Thank you for using Neurodocker. If you discover any issues\n# or ways to improve this software, please submit an issue or\n# pull request on our GitHub repository:\n#\n#     https://github.com/kaczmarj/neurodocker\n\nFROM neurodebian:stretch-non-free\n\nARG DEBIAN_FRONTEND=\"noninteractive\"\n\nENV LANG=\"en_US.UTF-8\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    ND_ENTRYPOINT=\"/neurodocker/startup.sh\"\nRUN export ND_ENTRYPOINT=\"/neurodocker/startup.sh\" \\\n    && apt-get update -qq \\\n    && apt-get install -y -q --no-install-recommends \\\n           apt-utils \\\n           bzip2 \\\n           ca-certificates \\\n           curl \\\n           locales \\\n           unzip \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/* \\\n    && sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen \\\n    && dpkg-reconfigure --frontend=noninteractive locales \\\n    && update-locale LANG=\"en_US.UTF-8\" \\\n    && chmod 777 /opt && chmod a+s /opt \\\n    && mkdir -p /neurodocker \\\n    && if [ ! -f \"$ND_ENTRYPOINT\" ]; then \\\n         echo '#!/usr/bin/env bash' >> \"$ND_ENTRYPOINT\" \\\n    &&   echo 'set -e' >> \"$ND_ENTRYPOINT\" \\\n    &&   echo 'export USER=\"${USER:=`whoami`}\"' >> \"$ND_ENTRYPOINT\" \\\n    &&   echo 'if [ -n \"$1\" ]; then \"$@\"; else /usr/bin/env bash; fi' >> \"$ND_ENTRYPOINT\"; \\\n    fi \\\n    && chmod -R 777 /neurodocker && chmod a+s /neurodocker\n\nENTRYPOINT [\"/neurodocker/startup.sh\"]\n\nRUN apt-get update -qq \\\n    && apt-get install -y -q --no-install-recommends \\\n           gcc \\\n           g++ \\\n           graphviz \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/*\n\nRUN test \"$(getent passwd neuro)\" || useradd --no-user-group --create-home --shell /bin/bash neuro\nUSER neuro\n\nWORKDIR /home/neuro\n\nENV CONDA_DIR=\"/opt/miniconda-latest\" \\\n    PATH=\"/opt/miniconda-latest/bin:$PATH\"\nRUN export PATH=\"/opt/miniconda-latest/bin:$PATH\" \\\n    && echo \"Downloading Miniconda installer ...\" \\\n    && conda_installer=\"/tmp/miniconda.sh\" \\\n    && curl -fsSL --retry 5 -o \"$conda_installer\" https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh \\\n    && bash \"$conda_installer\" -b -p /opt/miniconda-latest \\\n    && rm -f \"$conda_installer\" \\\n    && conda update -yq -nbase conda \\\n    && conda config --system --prepend channels conda-forge \\\n    && conda config --system --set auto_update_conda false \\\n    && conda config --system --set show_channel_urls true \\\n    && sync && conda clean --all && sync \\\n    && conda create -y -q --name neuro_py36 \\\n    && conda install -y -q --name neuro_py36 \\\n           'python=3.6' \\\n    && sync && conda clean --all && sync \\\n    && bash -c \"source activate neuro_py36 \\\n    &&   pip install --no-cache-dir  \\\n             'jupyter' \\\n             'seaborn' \\\n             'tox'\" \\\n    && rm -rf ~/.cache/pip/* \\\n    && sync \\\n    && sed -i '$isource activate neuro_py36' $ND_ENTRYPOINT\n\nCOPY [\".\", \"/src/nibetaseries\"]\n\nUSER root\n\nRUN curl -f -o pandoc-2.2.2.1-1-amd64.deb -sSL 'https://github.com/jgm/pandoc/releases/download/2.2.2.1/pandoc-2.2.2.1-1-amd64.deb' && dpkg -i pandoc-2.2.2.1-1-amd64.deb && rm pandoc-2.2.2.1-1-amd64.deb\n\nRUN chown -R neuro:users /src/nibetaseries\n\nUSER neuro\n\nWORKDIR /src/nibetaseries\n\nRUN conda run -n neuro_py36 pip install --no-cache-dir -e .\n\nRUN mkdir -p ~/.jupyter && echo c.NotebookApp.ip = \\\"0.0.0.0\\\" > ~/.jupyter/jupyter_notebook_config.py\n\nWORKDIR /home/neuro\n\nRUN echo '{ \\\n    \\n  \"pkg_manager\": \"apt\", \\\n    \\n  \"instructions\": [ \\\n    \\n    [ \\\n    \\n      \"base\", \\\n    \\n      \"neurodebian:stretch-non-free\" \\\n    \\n    ], \\\n    \\n    [ \\\n    \\n      \"install\", \\\n    \\n      [ \\\n    \\n        \"gcc\", \\\n    \\n        \"g++\", \\\n    \\n        \"graphviz\" \\\n    \\n      ] \\\n    \\n    ], \\\n    \\n    [ \\\n    \\n      \"user\", \\\n    \\n      \"neuro\" \\\n    \\n    ], \\\n    \\n    [ \\\n    \\n      \"workdir\", \\\n    \\n      \"/home/neuro\" \\\n    \\n    ], \\\n    \\n    [ \\\n    \\n      \"miniconda\", \\\n    \\n      { \\\n    \\n        \"conda_install\": [ \\\n    \\n          \"python=3.6\" \\\n    \\n        ], \\\n    \\n        \"pip_install\": [ \\\n    \\n          \"jupyter\", \\\n    \\n          \"seaborn\", \\\n    \\n          \"tox\" \\\n    \\n        ], \\\n    \\n        \"create_env\": \"neuro_py36\", \\\n    \\n        \"activate\": true \\\n    \\n      } \\\n    \\n    ], \\\n    \\n    [ \\\n    \\n      \"copy\", \\\n    \\n      [ \\\n    \\n        \".\", \\\n    \\n        \"/src/nibetaseries\" \\\n    \\n      ] \\\n    \\n    ], \\\n    \\n    [ \\\n    \\n      \"user\", \\\n    \\n      \"root\" \\\n    \\n    ], \\\n    \\n    [ \\\n    \\n      \"run\", \\\n    \\n      \"curl -o pandoc-2.2.2.1-1-amd64.deb -sSL '\"'\"'https://github.com/jgm/pandoc/releases/download/2.2.2.1/pandoc-2.2.2.1-1-amd64.deb'\"'\"' && dpkg -i pandoc-2.2.2.1-1-amd64.deb && rm pandoc-2.2.2.1-1-amd64.deb\" \\\n    \\n    ], \\\n    \\n    [ \\\n    \\n      \"run\", \\\n    \\n      \"chown -R neuro:users /src/nibetaseries\" \\\n    \\n    ], \\\n    \\n    [ \\\n    \\n      \"user\", \\\n    \\n      \"neuro\" \\\n    \\n    ], \\\n    \\n    [ \\\n    \\n      \"workdir\", \\\n    \\n      \"/src/nibetaseries\" \\\n    \\n    ], \\\n    \\n    [ \\\n    \\n      \"run\", \\\n    \\n      \"pip install --no-cache-dir .\" \\\n    \\n    ], \\\n    \\n    [ \\\n    \\n      \"run\", \\\n    \\n      \"mkdir -p ~/.jupyter && echo c.NotebookApp.ip = \\\\\\\"0.0.0.0\\\\\\\" > ~/.jupyter/jupyter_notebook_config.py\" \\\n    \\n    ], \\\n    \\n    [ \\\n    \\n      \"workdir\", \\\n    \\n      \"/home/neuro\" \\\n    \\n    ] \\\n    \\n  ] \\\n    \\n}' > /neurodocker/neurodocker_specs.json\n"
}