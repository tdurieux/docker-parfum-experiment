{
  "startTime": 1674249383095,
  "endTime": 1674249385655,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 157
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 38,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 76
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM hbclab/nibetaseries:unstable\n\nUSER root\n\nARG DEBIAN_FRONTEND=\"noninteractive\"\n\n# net-tools needed for code-server\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y \\\n        net-tools \\\n        git \\\n        nano && rm -rf /var/lib/apt/lists/*;\n\nENV SHELL=/bin/bash\n\n# necessary to find nibetaseries in /src/nibetaseries\nENV PYTHONNOUSERSITE=0\n\nUSER neuro\n\nRUN /bin/bash -c \"cd /src/nibetaseries &&\\\n    conda init bash &&\\\n    source /home/neuro/.bashrc &&\\\n    source activate neuro_py36 &&\\\n    pip install --no-use-pep517 -e .[test,dev,doc,nb]\"\n\nUSER root\n\nRUN cp -R /src/nibetaseries/src/nibetaseries.egg-info /src/\n\n# set up code-server (need net-tools for initialization)\nRUN curl -f -o /tmp/code-server.tar.gz -SL https://github.com/cdr/code-server/releases/download/2.1523-vsc1.38.1/code-server2.1523-vsc1.38.1-linux-x86_64.tar.gz\n\nRUN mkdir /src/codeserver && \\\n    tar -xvf /tmp/code-server.tar.gz -C /src/codeserver --strip-components=1 && rm /tmp/code-server.tar.gz\n\nRUN curl -f -sL https://deb.nodesource.com/setup_12.x | bash - && \\\n    apt-get install --no-install-recommends -y nodejs && \\\n    npm i \\\n        vscode-nls@4.0.0 \\\n        mkdirp@0.5.1 \\\n        getos@3.1.1 \\\n        http-proxy-agent@2.1.0 \\\n        https-proxy-agent@2.2.1 \\\n        lodash.throttle@4.1.1 \\\n        meaw@4.1.0 \\\n        tmp@0.0.33 \\\n        vscode-languageclient@3.5.0 \\\n        yauzl@2.10.0 && npm cache clean --force; && rm -rf /var/lib/apt/lists/*;\n\nUSER neuro\n\nRUN /src/codeserver/code-server --install-extension eamodio.gitlens &&\\\n    /src/codeserver/code-server --install-extension ms-python.python &&\\\n    /src/codeserver/code-server --install-extension lextudio.restructuredtext\n\nENTRYPOINT [\"/src/codeserver/code-server\", \"/src/nibetaseries\"]\n\n# usage example (assuming in local nibetaseries directory):\n#\n# docker run -it \\\n# -p 127.0.0.1:8445:8080 \\\n# -v ${PWD}:/src/nibetaseries \\\n# nibetaseries_devel:latest\n#\n# then type 127.0.0.1:8445 in your browser address bar\n"
}