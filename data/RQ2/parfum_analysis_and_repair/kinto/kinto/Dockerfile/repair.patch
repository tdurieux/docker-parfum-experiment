diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/kinto/kinto/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/kinto/kinto/Dockerfile/repaired.Dockerfile
index 36f2c3a..9d770cb 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/kinto/kinto/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/kinto/kinto/Dockerfile/repaired.Dockerfile
@@ -1,7 +1,7 @@
 # Mozilla Kinto server
 
 FROM node:lts-bullseye-slim as node-builder
-RUN apt-get update && apt-get install -y --no-install-recommends ca-certificates curl
+RUN apt-get update && apt-get install -y --no-install-recommends ca-certificates curl && rm -rf /var/lib/apt/lists/*;
 COPY scripts/build-kinto-admin.sh .
 COPY /kinto/plugins/admin ./kinto/plugins/admin
 RUN bash build-kinto-admin.sh
@@ -9,14 +9,14 @@ RUN bash build-kinto-admin.sh
 FROM python:3.10-slim-bullseye as python-builder
 RUN python -m venv /opt/venv
 ENV PATH="/opt/venv/bin:$PATH"
-RUN apt-get update && apt-get install -y --no-install-recommends build-essential libpq-dev
+RUN apt-get update && apt-get install -y --no-install-recommends build-essential libpq-dev && rm -rf /var/lib/apt/lists/*;
 COPY requirements.txt .
-RUN pip install --upgrade pip && \
-    pip install -r requirements.txt && \
-    pip install kinto-attachment kinto-emailer kinto-elasticsearch kinto-portier kinto-redis httpie
+RUN pip install --no-cache-dir --upgrade pip && \
+    pip install --no-cache-dir -r requirements.txt && \
+    pip install --no-cache-dir kinto-attachment kinto-emailer kinto-elasticsearch kinto-portier kinto-redis httpie
 
 FROM python:3.10-slim-bullseye
-RUN apt-get update && apt-get install -y --no-install-recommends libpq-dev
+RUN apt-get update && apt-get install -y --no-install-recommends libpq-dev && rm -rf /var/lib/apt/lists/*;
 RUN groupadd --gid 10001 app && \
     useradd --uid 10001 --gid 10001 --home /app --create-home app
 
@@ -30,7 +30,7 @@ ENV KINTO_INI=/etc/kinto/kinto.ini \
     PATH="/opt/venv/bin:$PATH"
 
 RUN \
-    pip install -e /app[postgresql,memcached,monitoring] -c /app/requirements.txt && \
+    pip install --no-cache-dir -e /app[postgresql,memcached,monitoring] -c /app/requirements.txt && \
     kinto init --ini $KINTO_INI --host 0.0.0.0 --backend=memory --cache-backend=memory
 
 USER app