{
  "startTime": 1674218832939,
  "endTime": 1674218834344,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 53
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:latest\n\nENV CLAMAV_VERSION=0.103.2\nENV DEBIAN_FRONTEND=noninteractive\n\n# Install dependencies\n\nRUN apt-get update && \\\n    apt-get upgrade -y && \\\n    apt-get install --no-install-recommends -y \\\n        build-essential \\\n        gnupg \\\n        dirmngr \\\n        openssl \\\n        libssl-dev \\\n        libxml2-dev \\\n        libxml2 \\\n        libbz2-dev \\\n        bzip2 \\\n        zlib1g \\\n        zlib1g-dev \\\n        gettext \\\n        autoconf \\\n        libjson-c-dev \\\n        ncurses-dev \\\n        libpcre3-dev \\\n        check \\\n        valgrind \\\n        libcurl4-openssl-dev \\\n        ca-certificates \\\n        wget && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/*\n\nCOPY talos.pub /tmp/talos.pub\n\n# Download and build ClamAV\n\nRUN wget -nv https://www.clamav.net/downloads/production/clamav-${CLAMAV_VERSION}.tar.gz && \\\n    wget -nv https://www.clamav.net/downloads/production/clamav-${CLAMAV_VERSION}.tar.gz.sig && \\\n    gpg --batch --import /tmp/talos.pub && \\\n    gpg --batch --decrypt clamav-${CLAMAV_VERSION}.tar.gz.sig && \\\n    tar xzf clamav-${CLAMAV_VERSION}.tar.gz && \\\n    cd clamav-${CLAMAV_VERSION} && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n    make && make install && \\\n    rm -rf /clamav-${CLAMAV_VERSION} && \\\n    rm -rf /tmp/talos.pub && rm clamav-${CLAMAV_VERSION}.tar.gz\n\n# Add ClamAV user\n\nRUN groupadd -r clamav && \\\n    useradd -r -g clamav -u 1000 clamav -d /var/lib/clamav && \\\n    mkdir -p /var/lib/clamav && \\\n    mkdir /usr/local/share/clamav && \\\n    chown -R clamav:clamav /var/lib/clamav /usr/local/share/clamav\n\n# Configure ClamAV\n\nRUN chown clamav:clamav -R /usr/local/etc/\nCOPY --chown=clamav:clamav ./*.conf /usr/local/etc/\n\nRUN cp /usr/local/lib/libclamav.so.* /usr/lib/x86_64-linux-gnu && \\\n    cp /usr/local/lib/libfreshclam.so.* /usr/lib/x86_64-linux-gnu && \\\n    cp /usr/local/lib/libclammspack.so.* /usr/lib/x86_64-linux-gnu && \\\n    cp /usr/local/lib/libclamunrar_iface.so.* /usr/lib/x86_64-linux-gnu && \\\n    cp /usr/local/lib/libclamunrar.so.* /usr/lib/x86_64-linux-gnu\n\nRUN freshclam && \\\n    chown clamav:clamav /var/lib/clamav/*.cvd\n\n# Add permissions\n\nRUN mkdir /var/run/clamav && \\\n    chown clamav:clamav /var/run/clamav && \\\n    chmod 750 /var/run/clamav\n\nUSER 1000\n\nVOLUME /var/lib/clamav\n\nCOPY --chown=clamav:clamav docker-entrypoint.sh /\n\nENTRYPOINT [\"/docker-entrypoint.sh\"]\n\nEXPOSE 3310\n"
}