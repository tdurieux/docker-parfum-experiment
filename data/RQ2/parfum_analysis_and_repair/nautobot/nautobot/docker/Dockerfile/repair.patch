diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/nautobot/nautobot/docker/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/nautobot/nautobot/docker/Dockerfile/repaired.Dockerfile
index 5ddab9d..4ebce03 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/nautobot/nautobot/docker/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/nautobot/nautobot/docker/Dockerfile/repaired.Dockerfile
@@ -27,7 +27,7 @@ ARG PYUWSGI_VER
 #      dev     final-dev
 #
 #  The design philosphy for this image hierarchy is:
-#  
+# 
 #  - pyproject.toml is the source of truth for dependencies
 #  - Non-intermediate image targets (final, final-dev, dev) will not contain files they don't need
 #      - EX: No dev dependencies in final image
@@ -73,7 +73,7 @@ ARG PYUWSGI_VER
 #
 # dependencies-dev (intermediate build target)
 #   copies built Nautobot wheel and files from build-nautobot
-#   installs Markdownlint 
+#   installs Markdownlint
 #   adds files and configuration for Nautobot development server to run
 #
 # dev (development environment for Nautobot core)
@@ -136,7 +136,7 @@ RUN apt-get update && \
 # if we instead used "pip install poetry" it would install its own dependencies globally which may conflict with ours.
 # https://python-poetry.org/docs/master/#installing-with-the-official-installer
 # This also makes it so that Poetry will *not* be included in the "final" image since it's not installed to /usr/local/
-RUN curl -sSL https://install.python-poetry.org -o /tmp/install-poetry.py && \
+RUN curl -f -sSL https://install.python-poetry.org -o /tmp/install-poetry.py && \
     python /tmp/install-poetry.py && \
     rm -f /tmp/install-poetry.py
 
@@ -204,12 +204,12 @@ RUN poetry build
 FROM dependencies-dev-python as dependencies-dev-platform-amd64
 
 # Install hadolint for linting Dockerfiles
-RUN curl -Lo /usr/bin/hadolint https://github.com/hadolint/hadolint/releases/download/v2.10.0/hadolint-Linux-x86_64 && \
+RUN curl -f -Lo /usr/bin/hadolint https://github.com/hadolint/hadolint/releases/download/v2.10.0/hadolint-Linux-x86_64 && \
     chmod +x /usr/bin/hadolint
 
 # Install NodeJS for installing markdownlint-cli
 
-RUN curl -Lo /tmp/node.tar.xz https://nodejs.org/dist/v17.9.0/node-v17.9.0-linux-x64.tar.xz && \
+RUN curl -f -Lo /tmp/node.tar.xz https://nodejs.org/dist/v17.9.0/node-v17.9.0-linux-x64.tar.xz && \
     mkdir -p /usr/local/lib/nodejs && \
     tar -xf /tmp/node.tar.xz -C /usr/local/lib/nodejs && \
     rm -rf /tmp/node.tar.xz
@@ -219,12 +219,12 @@ ENV PATH="${PATH}:/usr/local/lib/nodejs/node-v17.9.0-linux-x64/bin"
 FROM dependencies-dev-python as dependencies-dev-platform-arm64
 
 # Install hadolint for linting Dockerfiles
-RUN curl -Lo /usr/bin/hadolint https://github.com/hadolint/hadolint/releases/download/v2.10.0/hadolint-Linux-arm64 && \
+RUN curl -f -Lo /usr/bin/hadolint https://github.com/hadolint/hadolint/releases/download/v2.10.0/hadolint-Linux-arm64 && \
     chmod +x /usr/bin/hadolint
 
 # Install NodeJS for installing markdownlint-cli
 
-RUN curl -Lo /tmp/node.tar.xz https://nodejs.org/dist/v17.9.0/node-v17.9.0-linux-arm64.tar.xz && \
+RUN curl -f -Lo /tmp/node.tar.xz https://nodejs.org/dist/v17.9.0/node-v17.9.0-linux-arm64.tar.xz && \
     mkdir -p /usr/local/lib/nodejs && \
     tar -xf /tmp/node.tar.xz -C /usr/local/lib/nodejs && \
     rm -rf /tmp/node.tar.xz
@@ -236,7 +236,7 @@ ENV PATH="${PATH}:/usr/local/lib/nodejs/node-v17.9.0-linux-arm64/bin"
 # hadolint ignore=DL3006
 FROM dependencies-dev-platform-$TARGETARCH as dependencies-dev
 
-RUN npm install --global markdownlint-cli@0.31.1
+RUN npm install --global markdownlint-cli@0.31.1 && npm cache clean --force;
 
 # Nautobot wheel build is no longer a direct previous layer
 # /source from build-nautobot will include docs from build-docs as well