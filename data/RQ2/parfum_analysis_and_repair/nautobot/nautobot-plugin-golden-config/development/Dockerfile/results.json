{
  "startTime": 1674252022540,
  "endTime": 1674252023148,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 44
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG PYTHON_VER\nARG NAUTOBOT_VER\nFROM ghcr.io/nautobot/nautobot-dev:${NAUTOBOT_VER}-py${PYTHON_VER}\n\nWORKDIR /source\n\n# Copy in only pyproject.toml/poetry.lock to help with caching this layer if no updates to dependencies\nCOPY poetry.lock pyproject.toml /source/\n# --no-root declares not to install the project package since we're wanting to take advantage of caching dependency installation\n# and the project is copied in and installed after this step\nRUN poetry install --no-interaction --no-ansi --no-root\n\n# Copy in the rest of the source code and install local Nautobot plugin\nCOPY . /source\nRUN poetry install --no-interaction --no-ansi\n\nRUN apt update && apt install --no-install-recommends -y libmariadb-dev-compat gcc && rm -rf /var/lib/apt/lists/*;\nRUN pip install --no-cache-dir mysqlclient\n\nCOPY development/nautobot_config.py /opt/nautobot/nautobot_config.py\n"
}