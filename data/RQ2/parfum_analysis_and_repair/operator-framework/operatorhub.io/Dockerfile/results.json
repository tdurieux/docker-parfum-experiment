{
  "startTime": 1674219303199,
  "endTime": 1674219304211,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 29,
        "columnEnd": 40
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 7,
        "columnEnd": 18
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM registry.access.redhat.com/ubi8/nodejs-10:1-66\n\nARG OPERATORS_REPO=https://github.com/operator-framework/community-operators\nARG OPERATORS_BRANCH=master\n\nENV APP_ROOT=/app\n\nWORKDIR ${APP_ROOT}\n\n# root for build stages\nUSER root\n\n# frontent\nCOPY frontend/ ${APP_ROOT}/frontend\nRUN cd ${APP_ROOT}/frontend; npm install \\\n    && npm run-script build \\\n    && rm -rdf ${APP_ROOT}/frontend/node_modules ${APP_ROOT}/frontend/.cache-loader /opt/app-root/src/.npm /tmp/v8-compile-cache-0 && npm cache clean --force;\n\n# server\nCOPY server/ ${APP_ROOT}/server\nRUN cd ${APP_ROOT}/server \\\n    && npm install \\\n    && npm run tsc \\\n    && rm -rdf /opt/app-root/src/.npm /tmp/v8-compile-cache-0 && npm cache clean --force;\n\n# prepare upstream operators for server processing\nRUN mkdir -p ${APP_ROOT}/server/data/community-operators \\\n    && mkdir -p /tmp/community-operators \\\n    && git clone -b $OPERATORS_BRANCH $OPERATORS_REPO /tmp/community-operators \\\n    && cp -a /tmp/community-operators/upstream-community-operators ${APP_ROOT}/server/data/community-operators/upstream-community-operators \\\n    && rm -rfd /tmp/community-operators\n\n### Setup user for build execution and application runtime\nENV APP_ROOT=/app\nENV HOME=${APP_ROOT}\nRUN chmod -R u+x ${APP_ROOT}/server/bin && \\\n    chgrp -R 0 ${APP_ROOT} && \\\n    chmod -R g=u ${APP_ROOT} /etc/passwd\n\nENV DOCKERIZE_VERSION v0.6.1\nRUN wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz \\\n    && tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz \\\n    && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz\n\n### Containers should NOT run as root as a good practice\nUSER 1001\n\n# Finalize\nWORKDIR ${APP_ROOT}/server\nENTRYPOINT [ \"/app/server/bin/uid_entrypoint\" ]\nEXPOSE 8080\n"
}