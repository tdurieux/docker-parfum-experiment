{
  "startTime": 1674253368888,
  "endTime": 1674253370273,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 18,
        "columnEnd": 70
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 116
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 135
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 41
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 65
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:16.04\n\nMAINTAINER Jeff Jasper jasper1918@gmail.com\n\nRUN apt-get -y update --fix-missing && \\\n    apt-get install --no-install-recommends -y curl wget gzip bzip2 unzip git \\\n    g++ make libboost-dev libboost-thread-dev libboost-system-dev zlib1g-dev ncurses-dev locales \\\n    libglib2.0-0 libxext6 libsm6 libxrender1 libxml2-dev libxslt-dev ca-certificates git gcc libdb5.3 libdb5.3-dev libcurl4-openssl-dev && \\\n    apt-get clean && dpkg-reconfigure locales && locale-gen en_US.UTF-8 && \\\n    apt-get autoremove && \\\n    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\n# Install miniconda to /opt/conda\nRUN echo 'export PATH=/opt/conda/bin:$PATH' > /etc/profile.d/conda.sh && \\\n    wget --quiet https://repo.continuum.io/miniconda/Miniconda2-4.1.11-Linux-x86_64.sh -O ~/miniconda.sh && \\\n    /bin/bash ~/miniconda.sh -b -p /opt/conda && \\\n    rm ~/miniconda.sh\n\n# Use Tini\nRUN apt-get install --no-install-recommends -y curl grep sed dpkg && \\\n    TINI_VERSION=$( curl -f https://github.com/krallin/tini/releases/latest | grep -o \"/v.*\\\"\" | sed 's:^..\\(.*\\).$:\\1:') && \\\n    curl -f -L \"https://github.com/krallin/tini/releases/download/v${TINI_VERSION}/tini_${TINI_VERSION}.deb\" > tini.deb && \\\n    dpkg -i tini.deb && \\\n    rm tini.deb && rm -rf /var/lib/apt/lists/*;\n\n# Set envinroment\nENV PATH /opt/conda/bin:$PATH\nENTRYPOINT [ \"/usr/bin/tini\", \"--\" ]\nCMD [ \"/bin/bash\" ]\n\n# Install dependencies for STAR-SEQR\nWORKDIR /opt\n\n# Install dependencies\nRUN conda config --add channels conda-forge && \\\n    conda config --add channels defaults && \\\n    conda config --add channels r && \\\n    conda config --add channels bioconda && \\\n    conda install -y pip nose coverage cython pysam pandas samtools biobambam velvet ucsc-gtftogenepred salmon star gffread && \\\n    conda clean -ilty\n\n# Install STAR-SEQR\nENV STARSEQR_VERSION  0.6.6\nRUN wget https://github.com/ExpressionAnalysis/STAR-SEQR/archive/v${STARSEQR_VERSION}.tar.gz  && \\\n    tar -zxvf v${STARSEQR_VERSION}.tar.gz && \\\n    cd STAR-SEQR-${STARSEQR_VERSION} && \\\n    python setup.py build && \\\n    python setup.py install && \\\n    python setup.py clean && \\\n    nosetests --with-coverage --cover-package=starseqr_utils && rm v${STARSEQR_VERSION}.tar.gz\n\nWORKDIR /data\nRUN chmod 777 /data\n"
}