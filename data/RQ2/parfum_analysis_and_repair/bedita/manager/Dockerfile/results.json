{
  "startTime": 1674248647004,
  "endTime": 1674248649181,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 105
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 80
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 23
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 47
      }
    }
  ],
  "repairedDockerfile": "ARG PHP_VERSION=7.2\nFROM chialab/php:${PHP_VERSION}-apache\n\n# Install Wait-for-it and configure PHP\nRUN curl -f -o /wait-for-it.sh https://raw.githubusercontent.com/vishnubob/wait-for-it/master/wait-for-it.sh \\\n    && chmod +x /wait-for-it.sh \\\n    && echo \"[PHP]\\noutput_buffering = 4096\\nmemory_limit = -1\" > /usr/local/etc/php/php.ini\n\n# Copy files\nCOPY . /var/www/html\n\n# Set APP_NAME to avoid .env load\nENV APP_NAME BE4-MANAGER\nARG DEBUG\nENV DEBUG ${DEBUG:-false}\n\n# Install libraries\nWORKDIR /var/www/html\nRUN chown -R www-data:www-data /var/www/html\nUSER www-data:www-data\n\nRUN if [ ! \"$DEBUG\" = \"true\" ]; then export COMPOSER_ARGS='--no-dev'; fi \\\n    && composer install $COMPOSER_ARGS --optimize-autoloader --no-interaction --quiet\n\n# Restore user `root` to install node & yarn and to make sure we can bind to address 0.0.0.0:80\nUSER root:root\n\n# Install node and yarn\nENV NODE_VERSION=12.6.0\nRUN apt install --no-install-recommends -y curl && rm -rf /var/lib/apt/lists/*;\nRUN curl -f -o- https://raw.githubusercontent.com/creationix/nvm/v0.34.0/install.sh | bash\nENV NVM_DIR=/root/.nvm\nRUN . \"$NVM_DIR/nvm.sh\" && nvm install ${NODE_VERSION}\nRUN . \"$NVM_DIR/nvm.sh\" && nvm use v${NODE_VERSION}\nRUN . \"$NVM_DIR/nvm.sh\" && nvm alias default v${NODE_VERSION}\nENV PATH=\"/root/.nvm/versions/node/v${NODE_VERSION}/bin/:${PATH}\"\nRUN npm install -g yarn && npm cache clean --force;\nRUN yarn && yarn build\n\nENV LOG_DEBUG_URL=\"console:///?stream=php://stdout\" \\\n    LOG_ERROR_URL=\"console:///?stream=php://stderr\"\n\nHEALTHCHECK --interval=30s --timeout=3s --start-period=1m \\\n    CMD curl -f http://localhost/login || exit 1\n\nCMD [\"apache2-foreground\"]\n"
}