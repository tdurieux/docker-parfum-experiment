diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/brefphp/bref/runtime/base/base.Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/brefphp/bref/runtime/base/base.Dockerfile/repaired.Dockerfile
index 190c1a9..aa58e06 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/brefphp/bref/runtime/base/base.Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/brefphp/bref/runtime/base/base.Dockerfile/repaired.Dockerfile
@@ -29,7 +29,7 @@ RUN set -xe \
 #
 # Needed to build:
 # - libzip: minimum required CMAKE version 3.0.
-RUN LD_LIBRARY_PATH= yum install -y cmake3
+RUN LD_LIBRARY_PATH= yum install -y cmake3 && rm -rf /var/cache/yum
 RUN ln -s /usr/bin/cmake3 /usr/bin/cmake
 
 # Use the bash shell, instead of /bin/sh
@@ -89,7 +89,7 @@ ENV ZLIB_BUILD_DIR=${BUILD_DIR}/xml2
 RUN set -xe; \
     mkdir -p ${ZLIB_BUILD_DIR}; \
 # Download and upack the source code
-    curl -Ls  http://zlib.net/zlib-${VERSION_ZLIB}.tar.xz \
+    curl -f -Ls https://zlib.net/zlib-${VERSION_ZLIB}.tar.xz \
   | tar xJC ${ZLIB_BUILD_DIR} --strip-components=1
 
 # Move into the unpackaged code directory
@@ -101,7 +101,10 @@ RUN set -xe; \
  && CFLAGS="" \
     CPPFLAGS="-I${INSTALL_DIR}/include  -I/usr/include" \
     LDFLAGS="-L${INSTALL_DIR}/lib64 -L${INSTALL_DIR}/lib" \
-    ./configure \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
+
+
+
     --prefix=${INSTALL_DIR} \
     --64
 
@@ -126,7 +129,7 @@ ENV CA_BUNDLE="${INSTALL_DIR}/ssl/cert.pem"
 RUN set -xe; \
     mkdir -p ${OPENSSL_BUILD_DIR}; \
 # Download and upack the source code
-    curl -Ls  https://github.com/openssl/openssl/archive/OpenSSL_${VERSION_OPENSSL//./_}.tar.gz \
+    curl -f -Ls https://github.com/openssl/openssl/archive/OpenSSL_${VERSION_OPENSSL//./_}.tar.gz \
   | tar xzC ${OPENSSL_BUILD_DIR} --strip-components=1
 
 # Move into the unpackaged code directory
@@ -148,7 +151,7 @@ RUN set -xe; \
 
 RUN set -xe; \
     make install \
- && curl -Lk -o ${CA_BUNDLE} ${CA_BUNDLE_SOURCE}
+ && curl -f -Lk -o ${CA_BUNDLE} ${CA_BUNDLE_SOURCE}
 
 ###############################################################################
 # LIBSSH2 Build
@@ -164,7 +167,7 @@ ENV LIBSSH2_BUILD_DIR=${BUILD_DIR}/libssh2
 RUN set -xe; \
     mkdir -p ${LIBSSH2_BUILD_DIR}/bin; \
     # Download and upack the source code
-    curl -Ls https://github.com/libssh2/libssh2/releases/download/libssh2-${VERSION_LIBSSH2}/libssh2-${VERSION_LIBSSH2}.tar.gz \
+    curl -f -Ls https://github.com/libssh2/libssh2/releases/download/libssh2-${VERSION_LIBSSH2}/libssh2-${VERSION_LIBSSH2}.tar.gz \
   | tar xzC ${LIBSSH2_BUILD_DIR} --strip-components=1
 
 # Move into the unpackaged code directory
@@ -200,7 +203,7 @@ ENV NGHTTP2_BUILD_DIR=${BUILD_DIR}/nghttp2
 
 RUN set -xe; \
     mkdir -p ${NGHTTP2_BUILD_DIR}; \
-    curl -Ls https://github.com/nghttp2/nghttp2/releases/download/v${VERSION_NGHTTP2}/nghttp2-${VERSION_NGHTTP2}.tar.gz \
+    curl -f -Ls https://github.com/nghttp2/nghttp2/releases/download/v${VERSION_NGHTTP2}/nghttp2-${VERSION_NGHTTP2}.tar.gz \
     | tar xzC ${NGHTTP2_BUILD_DIR} --strip-components=1
 
 WORKDIR  ${NGHTTP2_BUILD_DIR}/
@@ -209,7 +212,10 @@ RUN set -xe; \
     CFLAGS="" \
     CPPFLAGS="-I${INSTALL_DIR}/include  -I/usr/include" \
     LDFLAGS="-L${INSTALL_DIR}/lib64 -L${INSTALL_DIR}/lib" \
-    ./configure \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
+
+
+
     --enable-lib-only \
     --prefix=${INSTALL_DIR}
 
@@ -231,7 +237,7 @@ ENV CURL_BUILD_DIR=${BUILD_DIR}/curl
 
 RUN set -xe; \
             mkdir -p ${CURL_BUILD_DIR}/bin; \
-curl -Ls https://github.com/curl/curl/archive/curl-${VERSION_CURL//./_}.tar.gz \
+ curl -f -Ls https://github.com/curl/curl/archive/curl-${VERSION_CURL//./_}.tar.gz \
 | tar xzC ${CURL_BUILD_DIR} --strip-components=1
 
 
@@ -242,7 +248,10 @@ RUN set -xe; \
  && CFLAGS="" \
     CPPFLAGS="-I${INSTALL_DIR}/include  -I/usr/include" \
     LDFLAGS="-L${INSTALL_DIR}/lib64 -L${INSTALL_DIR}/lib" \
-    ./configure \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
+
+
+
     --prefix=${INSTALL_DIR} \
     --with-ca-bundle=${CA_BUNDLE} \
     --enable-shared \
@@ -252,9 +261,9 @@ RUN set -xe; \
     --disable-dependency-tracking \
     --with-zlib \
     --enable-http \
-    --enable-ftp  \
+    --enable-ftp \
     --enable-file \
-    --enable-proxy  \
+    --enable-proxy \
     --enable-tftp \
     --enable-ipv6 \
     --enable-openssl-auto-load-config \
@@ -281,7 +290,7 @@ ENV XML2_BUILD_DIR=${BUILD_DIR}/xml2
 RUN set -xe; \
     mkdir -p ${XML2_BUILD_DIR}; \
 # Download and upack the source code
-    curl -Ls https://download.gnome.org/sources/libxml2/2.9/libxml2-${VERSION_XML2}.tar.xz \
+    curl -f -Ls https://download.gnome.org/sources/libxml2/2.9/libxml2-${VERSION_XML2}.tar.xz \
   | tar xJC ${XML2_BUILD_DIR} --strip-components=1
 
 # Move into the unpackaged code directory
@@ -292,7 +301,10 @@ RUN set -xe; \
     CFLAGS="" \
     CPPFLAGS="-I${INSTALL_DIR}/include  -I/usr/include" \
     LDFLAGS="-L${INSTALL_DIR}/lib64 -L${INSTALL_DIR}/lib" \
-    ./configure \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
+
+
+
     --prefix=${INSTALL_DIR} \
     --with-sysroot=${INSTALL_DIR} \
     --enable-shared \
@@ -319,7 +331,7 @@ ENV ZIP_BUILD_DIR=${BUILD_DIR}/zip
 RUN set -xe; \
     mkdir -p ${ZIP_BUILD_DIR}/bin/; \
 # Download and upack the source code
-    curl -Ls https://github.com/nih-at/libzip/releases/download/v${VERSION_ZIP}/libzip-${VERSION_ZIP}.tar.gz \
+    curl -f -Ls https://github.com/nih-at/libzip/releases/download/v${VERSION_ZIP}/libzip-${VERSION_ZIP}.tar.gz \
   | tar xzC ${ZIP_BUILD_DIR} --strip-components=1
 
 # Move into the unpackaged code directory
@@ -350,7 +362,7 @@ ENV LIBSODIUM_BUILD_DIR=${BUILD_DIR}/libsodium
 RUN set -xe; \
     mkdir -p ${LIBSODIUM_BUILD_DIR}; \
    # Download and unpack the source code
-    curl -Ls https://github.com/jedisct1/libsodium/archive/${VERSION_LIBSODIUM}.tar.gz \
+    curl -f -Ls https://github.com/jedisct1/libsodium/archive/${VERSION_LIBSODIUM}.tar.gz \
   | tar xzC ${LIBSODIUM_BUILD_DIR} --strip-components=1
 
 # Move into the unpackaged code directory
@@ -362,7 +374,7 @@ RUN set -xe; \
     CPPFLAGS="-I${INSTALL_DIR}/include  -I/usr/include" \
     LDFLAGS="-L${INSTALL_DIR}/lib64 -L${INSTALL_DIR}/lib" \
     ./autogen.sh \
-&& ./configure --prefix=${INSTALL_DIR}
+&& ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=${INSTALL_DIR}
 
 RUN set -xe; \
     make install
@@ -379,7 +391,7 @@ ENV POSTGRES_BUILD_DIR=${BUILD_DIR}/postgres
 
 RUN set -xe; \
     mkdir -p ${POSTGRES_BUILD_DIR}/bin; \
-    curl -Ls https://github.com/postgres/postgres/archive/REL_${VERSION_POSTGRES//./_}.tar.gz \
+    curl -f -Ls https://github.com/postgres/postgres/archive/REL_${VERSION_POSTGRES//./_}.tar.gz \
     | tar xzC ${POSTGRES_BUILD_DIR} --strip-components=1
 
 
@@ -389,7 +401,10 @@ RUN set -xe; \
     CFLAGS="" \
     CPPFLAGS="-I${INSTALL_DIR}/include  -I/usr/include" \
     LDFLAGS="-L${INSTALL_DIR}/lib64 -L${INSTALL_DIR}/lib" \
-    ./configure --prefix=${INSTALL_DIR} --with-openssl --without-readline
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
+
+
+    --prefix=${INSTALL_DIR} --with-openssl --without-readline
 
 RUN set -xe; cd ${POSTGRES_BUILD_DIR}/src/interfaces/libpq && make -j $(nproc) && make install
 RUN set -xe; cd ${POSTGRES_BUILD_DIR}/src/bin/pg_config && make -j $(nproc) && make install
@@ -402,7 +417,7 @@ RUN set -xe; cd ${POSTGRES_BUILD_DIR}/src/include && make install
 # libicu-devel : needed for
 # libxslt-devel : needed for the XSL extension
 # sqlite-devel : Since PHP 7.4 this must be installed (https://github.com/php/php-src/blob/99b8e67615159fc600a615e1e97f2d1cf18f14cb/UPGRADING#L616-L619)
-RUN LD_LIBRARY_PATH= yum install -y readline-devel gettext-devel libicu-devel libxslt-devel sqlite-devel
+RUN LD_LIBRARY_PATH= yum install -y readline-devel gettext-devel libicu-devel libxslt-devel sqlite-devel && rm -rf /var/cache/yum
 
 RUN cp -a /usr/lib64/libgcrypt.so* ${INSTALL_DIR}/lib64/