{
  "startTime": 1674220248114,
  "endTime": 1674220251002,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 91,
        "lineEnd": 92,
        "columnStart": 4,
        "columnEnd": 10
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 109,
        "lineEnd": 109,
        "columnStart": 4,
        "columnEnd": 77
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 87,
        "lineEnd": 87,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 87,
        "lineEnd": 87,
        "columnStart": 55,
        "columnEnd": 71
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG  NODEBASE=node\nFROM composer:latest AS composer-builder\n\nARG BUID=1000\nARG BGID=1000\n\nRUN sed -E -i \"s/:x:${BUID}:/:x:1919:/g\" /etc/passwd \\\n    && sed -E -i \"s/:x:([0-9]+):${BGID}:/:x:\\1:1919:/g\" /etc/passwd \\\n    && sed -E -i \"s/:x:${BUID}:/:x:1919:/g\" /etc/group \\\n    && sed -E -i \"s/www-data:x:[0-9]+:[0-9]+:/www-data:x:${BUID}:${BGID}:/g\" /etc/passwd \\\n    && sed -E -i \"s/www-data:x:[0-9]+:/www-data:x:${BGID}:/g\" /etc/group \\\n    && echo 'memory_limit = -1' | tee -a /usr/local/etc/php/conf.d/docker-php-memlimit.ini\n    # && find /var/www -not -user $(id -u www-data) -not -group $(id -g www-data) -print0 | xargs -P 0 -0 --no-run-if-empty chown --no-dereference www-data:www-data\n\nCOPY --chown=www-data:www-data composer.json /var/www/composer.json\nCOPY --chown=www-data:www-data composer.lock /var/www/composer.lock\nCOPY --chown=www-data:www-data patches /var/www/patches\n\n# pulled from composer.json installer-paths\nRUN mkdir -p /var/www \\\n    && mkdir -p /var/www/vendor \\\n    && mkdir -p /var/www/web \\\n    && mkdir -p /var/www/web/core \\\n    && mkdir -p /var/www/web/libraries \\\n    && mkdir -p /var/www/web/modules \\\n    && mkdir -p /var/www/web/modules/contrib \\\n    && mkdir -p /var/www/web/modules/custom \\\n    && mkdir -p /var/www/web/profiles \\\n    && mkdir -p /var/www/web/profiles/contrib \\\n    && mkdir -p /var/www/web/profiles/custom \\\n    && mkdir -p /var/www/web/themes \\\n    && mkdir -p /var/www/web/themes/contrib \\\n    && mkdir -p /var/www/web/themes/custom \\\n    && mkdir -p /var/www/drush \\\n    && mkdir -p /var/www/drush/Commands \\\n    && mkdir -p /var/www/drush/Commands/contrib \\\n    && chown www-data:www-data /var/www \\\n    && chown www-data:www-data /var/www/vendor \\\n    && chown www-data:www-data /var/www/web \\\n    && chown www-data:www-data /var/www/web/core \\\n    && chown www-data:www-data /var/www/web/libraries \\\n    && chown www-data:www-data /var/www/web/modules \\\n    && chown www-data:www-data /var/www/web/modules/contrib \\\n    && chown www-data:www-data /var/www/web/modules/custom \\\n    && chown www-data:www-data /var/www/web/profiles \\\n    && chown www-data:www-data /var/www/web/profiles/contrib \\\n    && chown www-data:www-data /var/www/web/profiles/custom \\\n    && chown www-data:www-data /var/www/web/themes \\\n    && chown www-data:www-data /var/www/web/themes/contrib \\\n    && chown www-data:www-data /var/www/web/themes/custom \\\n    && chown www-data:www-data /var/www/drush \\\n    && chown www-data:www-data /var/www/drush/Commands \\\n    && chown www-data:www-data /var/www/drush/Commands/contrib\n\nWORKDIR /var/www\n\nUSER www-data\n\nRUN composer -n config --global allow-plugins true \\\n    && composer global require --dev drupal/coder php-parallel-lint/php-parallel-lint \\\n    && COMPOSER_DIR=$(composer -n config --global home) && echo $COMPOSER_DIR \\\n    && $COMPOSER_DIR/vendor/bin/phpcs --config-set installed_paths $COMPOSER_DIR/vendor/drupal/coder/coder_sniffer,$COMPOSER_DIR/vendor/sirbrillig/phpcs-variable-analysis,$COMPOSER_DIR/vendor/slevomat/coding-standard\nRUN COMPOSER_MEMORY_LIMIT=-1 composer install --ignore-platform-reqs --no-interaction --optimize-autoloader \\\n    && chown www-data:www-data /var/www/composer.json /var/www/composer.lock\n\n# USER www-data\n###############################################################\nFROM ${NODEBASE}:18-alpine3.16 AS theme-builder\n\nARG BUID=1000\nARG BGID=1000\n\nRUN sed -E -i \"s/:x:${BUID}:/:x:1919:/g\" /etc/passwd \\\n    && sed -E -i \"s/:x:([0-9]+):${BGID}:/:x:\\1:1919:/g\" /etc/passwd \\\n    && sed -E -i \"s/:x:${BGID}:/:x:1919:/g\" /etc/group \\\n    && sed -E -i \"s/node:x:[0-9]+:[0-9]+:/node:x:${BUID}:${BGID}:/g\" /etc/passwd \\\n    && sed -E -i \"s/node:x:[0-9]+:/node:x:${BGID}:/g\" /etc/group\n# RUN apk upgrade --update \\\n#     && apk add --no-cache --virtual .persistent-deps \\\n#       ca-certificates \\\n#       curl \\\n#       git \\\n#       openssh \\\n#       python3 \\\n#       py3-pip \\\n#       && ln -sf python3 /usr/bin/python\n\nRUN apk --update --no-cache add python3 nodejs npm git openssh && apk add --no-cache g++ make\n\nCOPY bin/src/phantomjs.sh /local/phantomjs.sh\nRUN . /local/phantomjs.sh\nRUN npm install --global \\\n      gulp \\\n    && chown -R node:node /home/node/ && npm cache clean --force;\n\n#      gulp-cli \\\n\nCOPY --chown=node:node web/themes/custom/ /var/www/web/themes/custom/\nCOPY --chown=node:node web/libraries/ /var/www/web/libraries/\nCOPY --chown=node:node --from=composer-builder /var/www/web/themes/ /var/www/web/themes/\nCOPY --chown=node:node --from=composer-builder /var/www/web/libraries/ /var/www/web/libraries/\n\nWORKDIR /var/www/web/themes/custom/usagov\n\nRUN chown -R node:node /var/www/web/themes \\\n    && chown -R node:node /home/node/\n\nUSER node\n\nRUN npm install --production=false --prefix /var/www/web/themes/custom/usagov \\\n    && npm rebuild node-sass --prefix /var/www/web/themes/custom/usagov \\\n    && npm run build --prefix /var/www/web/themes/custom/usagov \\\n    && chown -R node:node /var/www/web/themes && npm cache clean --force;\n\n###############################################################\n\n\nFROM alpine:3.16 AS cms\nLABEL MAINTAINER=dan@mobomo.com\n\nARG S6_VERSION\nENV S6_VERSION ${S6_VERSION:-v2.2.0.3}\n\nARG GITBRANCH\nENV GITBRANCH ${GITBRANCH:-none}\n\nARG GITCOMMIT\nENV GITCOMMIT ${GITCOMMIT:-none}\n\nARG GITTAG\nENV GITTAG ${GITTAG:-none}\n\nARG BUID=1000\nARG BGID=1000\n\nADD https://github.com/just-containers/s6-overlay/releases/download/${S6_VERSION}/s6-overlay-amd64.tar.gz /tmp/s6overlay.tar.gz\n\n# Dependancies\nRUN sed -E -i \"s/:x:${BUID}:/:x:1919:/g\" /etc/passwd \\\n    && sed -E -i \"s/:x:([0-9]+):${BGID}:/:x:\\1:1919:/g\" /etc/passwd \\\n    && sed -E -i \"s/:x:${BGID}:/:x:1919:/g\" /etc/group \\\n    && sed -E -i \"s/nginx:x:[0-9]+:[0-9]+:/nginx:x:${BUID}:${BGID}:/g\" /etc/passwd \\\n    && sed -E -i \"s/nginx:x:[0-9]+:/nginx:x:${BGID}:/g\" /etc/group \\\n    && addgroup -S -g $BGID nginx \\\n    && adduser -S -G nginx -D -H -u $BUID nginx \\\n    && apk upgrade --update \\\n    && apk add --no-cache --virtual .persistent-deps \\\n      aws-cli \\\n      ca-certificates \\\n      curl \\\n      gettext \\\n      git \\\n      inotify-tools \\\n      jq \\\n      moreutils \\\n      pv \\\n      tar \\\n      xz \\\n      vim \\\n      mysql-client \\\n      mariadb-connector-c \\\n      nginx \\\n      nginx-mod-http-lua \\\n      php8 \\\n      php8-fpm \\\n      php8-bcmath \\\n      php8-bz2 \\\n      php8-calendar \\\n      php8-curl \\\n      php8-ctype \\\n      php8-dom \\\n      php8-fileinfo \\\n      php8-ftp \\\n      php8-gd \\\n      php8-intl \\\n      php8-iconv \\\n      php8-imap \\\n      php8-intl \\\n      php8-json \\\n      php8-ldap \\\n      php8-mbstring \\\n      php8-mysqlnd \\\n      php8-openssl \\\n      php8-opcache \\\n      php8-pcntl \\\n      php8-pdo \\\n      php8-pdo_mysql \\\n      php8-pdo_sqlite \\\n      php8-pear \\\n      php8-pecl-imagick \\\n      php8-pecl-xdebug \\\n      php8-phar \\\n      php8-posix \\\n      php8-session \\\n      php8-simplexml \\\n      php8-shmop \\\n      php8-soap \\\n      php8-sockets \\\n      php8-sodium \\\n      php8-sqlite3 \\\n      php8-sysvmsg \\\n      php8-sysvsem \\\n      php8-sysvshm \\\n      php8-tokenizer \\\n      php8-tidy \\\n      php8-xsl \\\n      php8-xml \\\n      php8-xmlreader \\\n      php8-xmlwriter \\\n      php8-zip \\\n      php8-zlib \\\n    && mkdir -p /var/www/web/sites/default/files \\\n    # s6 supervisor setup\n    && tar xzf /tmp/s6overlay.tar.gz -C / \\\n    && rm /tmp/s6overlay.tar.gz \\\n    && mkdir -p /var/run/s6 \\\n    && chown -R nginx:nginx /var/run/s6 \\\n    # webserver setup\n    && mkdir -p /var/www/ \\\n    && chown -R nginx:nginx /var/www \\\n    && mkdir -p /var/log/nginx \\\n    && chown -R nginx:nginx /var/log/nginx \\\n    && ln -s /dev/stderr /var/log/nginx/error.log \\\n    && ln -s /dev/stdout /var/log/nginx/access.log \\\n    && mkdir -p /run/nginx/ \\\n    && touch /run/nginx/nginx.pid \\\n    # php setup\n    && ln -s /usr/sbin/php-fpm8 /usr/sbin/php-fpm\n\n    # new relic setup\nCOPY bin/src/newrelic.sh /local/newrelic.sh\nRUN . /local/newrelic.sh\n\n    # cron setup\nRun mkdir -p /etc/periodic/30min \\\n    && echo \"*/30    *       *       *       *       run-parts /etc/periodic/30min\" >> /etc/crontabs/root \\\n    # cleanup\n    && rm -rf /var/cache/apk/*\n\nENV PATH=/var/www/vendor/bin:$PATH\n\nCOPY .docker/src-cms/etc /etc\nCOPY .docker/motd /etc/motd\nCOPY --chown=nginx:nginx composer.json /var/www/composer.json\nCOPY --chown=nginx:nginx composer.lock /var/www/composer.lock\nCOPY --chown=nginx:nginx scripts /var/www/scripts\nCOPY --chown=nginx:nginx config /var/www/config\nCOPY --chown=nginx:nginx patches /var/www/patches\nCOPY --chown=nginx:nginx web/libraries /var/www/web/libraries\nCOPY --chown=nginx:nginx web/modules /var/www/web/modules\nCOPY --chown=nginx:nginx web/themes /var/www/web/themes\nCOPY --chown=nginx:nginx web/sites/default /var/www/web/sites/default\nCOPY --from=composer-builder --chown=nginx:nginx /var/www/vendor /var/www/vendor\nCOPY --from=composer-builder --chown=nginx:nginx /var/www/web /var/www/web\nCOPY --from=theme-builder --chown=nginx:nginx /var/www/web/themes/custom /var/www/web/themes/custom\n\nRUN chmod -R +x /etc/periodic \\\n    && rm -f /var/www/web/sites/default/settings.local.php \\\n    && rm -rf /var/www/web/sites/default/files/* \\\n    && rm -rf /var/www/web/themes/custom/usagov/node_modules \\\n    && chown nginx:nginx /var/www \\\n    && find /var/www -not -user $(id -u nginx) -not -group $(id -g nginx) -print0 | xargs -P 0 -0 --no-run-if-empty chown --no-dereference nginx:nginx \\\n    && echo \"    built:\" $(date) >> /etc/motd \\\n    && echo \"    branch: \" $GITBRANCH >> /etc/motd \\\n    && echo \"    gittag: \" $GITTAG >> /etc/motd \\\n    && echo \"    commit: \" $GITCOMMIT >> /etc/motd \\\n    && echo >> /etc/motd \\\n    && cp /etc/motd /var/www/web/version.txt \\\n    && echo \"PATH=$PATH\" > /etc/profile.d/drupal.sh\n\nEXPOSE 80\n\nWORKDIR /var/www\n\n# Init s6\nENTRYPOINT [ \"/init\" ]\n"
}