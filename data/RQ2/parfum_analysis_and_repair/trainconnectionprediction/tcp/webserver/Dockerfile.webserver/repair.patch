diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/trainconnectionprediction/tcp/webserver/Dockerfile.webserver b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/trainconnectionprediction/tcp/webserver/Dockerfile.webserver/repaired.Dockerfile
index 65a1dab..3b069d0 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/trainconnectionprediction/tcp/webserver/Dockerfile.webserver
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/trainconnectionprediction/tcp/webserver/Dockerfile.webserver/repaired.Dockerfile
@@ -1,4 +1,3 @@
-# In order for this to work please set the BUILDKIT env variable using "export DOCKER_BUILDKIT=1"
 # To test the container locally you can run:
 # docker build -f webserver/Dockerfile.webserver . -t webserver
 # docker run -p 5000:5000 -v $(pwd)/config_docker.py:/mnt/config/config.py-v $(pwd)/cache:/usr/src/app/cache webserver
@@ -14,8 +13,8 @@ FROM python:3.10 AS compile-image
 
 # Install dependencies (libgeos in order for cartopy to work)
 RUN apt-get update
-RUN apt-get install -y gcc build-essential 
-RUN apt-get install -y libgeos-dev
+RUN apt-get install --no-install-recommends -y gcc build-essential && rm -rf /var/lib/apt/lists/*;
+RUN apt-get install --no-install-recommends -y libgeos-dev && rm -rf /var/lib/apt/lists/*;
 
 COPY --from=proj  /usr/share/proj/ /usr/share/proj/
 COPY --from=proj  /usr/include/ /usr/include/
@@ -28,16 +27,16 @@ RUN python3 -m venv $VIRTUAL_ENV
 ENV PATH="$VIRTUAL_ENV/bin:$PATH"
 
 ## Add and install requirements
-RUN pip install --upgrade pip && pip install pip-tools
+RUN pip install --no-cache-dir --upgrade pip && pip install --no-cache-dir pip-tools
 COPY ./webserver/requirements.txt requirements.txt
-RUN pip install -r requirements.txt
+RUN pip install --no-cache-dir -r requirements.txt
 
 
 # Complie website
 FROM node:14-alpine as node-image
 WORKDIR /app
 COPY ./webserver/website/package*.json ./
-RUN npm install
+RUN npm install && npm cache clean --force;
 COPY ./webserver/website/ .
 RUN npm run build
 
@@ -52,7 +51,7 @@ COPY --from=proj  /usr/lib/ /usr/lib/
 
 # Install dependencies (libgeos in order for cartopy to work)
 RUN apt-get update
-RUN apt-get install -y libgeos-dev
+RUN apt-get install --no-install-recommends -y libgeos-dev && rm -rf /var/lib/apt/lists/*;
 
 ## Virtualenv
 ENV VIRTUAL_ENV=/opt/venv