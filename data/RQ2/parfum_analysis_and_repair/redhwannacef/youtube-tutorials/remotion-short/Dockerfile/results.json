{
  "startTime": 1674216297073,
  "endTime": 1674216298655,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 9
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# This is a dockerized version of a server that you can easily deploy somewhere.\n# If you don't want server rendering, you can safely delete this file.\n\nFROM node:alpine\n\n# Installs latest Chromium (85) package.\nRUN apk add --no-cache \\\n  chromium \\\n  nss \\\n  freetype \\\n  freetype-dev \\\n  harfbuzz \\\n  ca-certificates \\\n  ttf-freefont \\\n  ffmpeg\n\n# Tell Puppeteer to skip installing Chrome. We'll be using the installed package.\nENV PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true \\\n  PUPPETEER_EXECUTABLE_PATH=/usr/bin/chromium-browser\n\nCOPY package*.json ./\nCOPY tsconfig.json ./\nCOPY src src\nCOPY *.ts .\nCOPY *.tsx .\n\nRUN npm i && npm cache clean --force;\n\n# Add user so we don't need --no-sandbox.\nRUN addgroup -S pptruser && adduser -S -g pptruser pptruser \\\n  && mkdir -p /home/pptruser/Downloads /app \\\n  && chown -R pptruser:pptruser /home/pptruser \\\n  && chown -R pptruser:pptruser /app\n# Run everything after as non-privileged user.\nUSER pptruser\n\nEXPOSE 8000\n\nCMD [\"npm\", \"run\", \"server\"]\n"
}