{
  "startTime": 1674253302376,
  "endTime": 1674253303510,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 95,
        "columnEnd": 114
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 22,
        "columnEnd": 55
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 21,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 67
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 95,
        "columnEnd": 114
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 21,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 67
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 22,
        "columnEnd": 55
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 21,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 67
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 95,
        "columnEnd": 114
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 21,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 67
      }
    }
  ],
  "repairedDockerfile": "# Approximately 15 min to build\n\nFROM nvidia/cuda:11.5.0-cudnn8-runtime-ubuntu20.04\nARG SSH_PASSWORD=password\n\n# https://docs.docker.com/engine/examples/running_ssh_service/\n# Last is SSH login fix. Otherwise user is kicked off after login\nRUN apt-get update && apt-get install --no-install-recommends -y openssh-server && \\\n    mkdir /var/run/sshd && echo \"root:$SSH_PASSWORD\" | chpasswd && \\\n    sed -i 's/#PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config && \\\n    sed 's@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd && \\\n    sed -i 's/#PasswordAuthentication yes/PasswordAuthentication no/' /etc/ssh/sshd_config && \\\n    echo \"export VISIBLE=now\" >> /etc/profile && \\\n    mkdir /root/.ssh && chmod 700 /root/.ssh && touch /root/.ssh/authorized_keys && \\\n    chmod 644 /root/.ssh/authorized_keys && rm -rf /var/lib/apt/lists/*;\n\nENV NOTVISIBLE \"in users profile\"\nENV CONDA_DIR /opt/conda\nENV PATH $CONDA_DIR/bin:$PATH\n\n# Install essentials + awscli + DVC\nRUN apt-get install --no-install-recommends -y wget git vim htop zip libhdf5-dev g++ graphviz libgtk2.0-dev libgl1-mesa-glx \\\n    openmpi-bin nano cmake libopenblas-dev liblapack-dev libx11-dev && \\\n    wget \"https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip\" -O \"awscliv2.zip\" && \\\n    unzip awscliv2.zip && ./aws/install && rm -r aws && rm awscliv2.zip && \\\n    wget https://dvc.org/deb/dvc.list -O /etc/apt/sources.list.d/dvc.list && apt-get update && apt-get install -y --no-install-recommends dvc && rm -rf /var/lib/apt/lists/*;\n\n# Install Miniconda\nRUN mkdir -p $CONDA_DIR && \\\n    apt-get update && \\\n    wget --quiet https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh && \\\n    /bin/bash /Miniconda3-latest-Linux-x86_64.sh -f -b -p $CONDA_DIR && \\\n    rm Miniconda3-latest-Linux-x86_64.sh\n\nCOPY ./environment.yml /torchok/environment.yml\n\n# Install TorchOk dependencies\nRUN conda config --set remote_read_timeout_secs 100000.0 && \\\n    conda init && \\\n    conda update -n base -c defaults conda && \\\n    conda env create -f torchok/environment.yml && \\\n    conda clean -yt && \\\n    echo \"conda activate torchok\" >> /root/.bashrc && \\\n    echo \"cd /\" >> /root/.bashrc\n\nENV LD_LIBRARY_PATH /usr/local/cuda/lib64:/lib/x86_64-linux-gnu:$LD_LIBRARY_PATH\nENV LIBRARY_PATH /usr/local/cuda/lib64:/lib/x86_64-linux-gnu:$LIBRARY_PATH\nENV CUDA_HOME /usr/local/cuda\n\n# aws cli configuration\nENV AWS_ACCESS_KEY_ID \"\"\nENV AWS_SECRET_ACCESS_KEY \"\"\nENV AWS_DEFAULT_REGION \"eu-west-1\"\nENV AWS_DEFAULT_OUTPUT \"json\"\n\n# To access the container from the outer world\nENV SSH_PUBLIC_KEY \"\"\n\n# To be able to add SSH key on docker run --env ... and to get important environment variables in SSH's bash\n# writing env variables to /etc/profile as mentioned here:\n# https://docs.docker.com/engine/examples/running_ssh_service/#environment-variables\nRUN echo '#!/bin/bash\\n \\\necho $SSH_PUBLIC_KEY >> /root/.ssh/authorized_keys\\n \\\necho \"export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID\" >> /etc/profile\\n \\\necho \"export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY\" >> /etc/profile\\n \\\necho \"export AWS_DEFAULT_REGION=$AWS_DEFAULT_REGION\" >> /etc/profile\\n \\\necho \"export AWS_DEFAULT_OUTPUT=$AWS_DEFAULT_OUTPUT\" >> /etc/profile\\n \\\necho \"export CONDA_DIR=$CONDA_DIR\" >> /etc/profile\\n \\\necho \"export PATH=$CONDA_DIR/bin:$PATH\" >> /etc/profile\\n \\\necho \"export LD_LIBRARY_PATH=/usr/local/cuda/lib64:/lib/x86_64-linux-gnu:$LD_LIBRARY_PATH\" >> /etc/profile\\n \\\necho \"export LIBRARY_PATH=/usr/local/cuda/lib64:/lib/x86_64-linux-gnu:$LIBRARY_PATH\" >> /etc/profile\\n \\\necho \"export CUDA_HOME=/usr/local/cuda\" >> /etc/profile\\n \\\necho \"alias juplabstart=\\\"nohup jupyter lab --ip 0.0.0.0 --allow-root > jup.log 2>&1 &\\\"\" >> /etc/profile\\n \\\necho \"alias jupnotestart=\\\"nohup jupyter notebook --ip 0.0.0.0 --allow-root > jup.log 2>&1 &\\\"\" >> /etc/profile\\n \\\necho \"alias jupkill=\\\"kill -9 \\$(pgrep -f jupyter)\\\"\" >> /etc/profile\\n \\\necho \"alias tbkill=\\\"kill -9 \\$(pgrep -f tensorboard)\\\"\" >> /etc/profile\\n \\\n/usr/sbin/sshd -D' \\\n>> /bin/start.sh\n\nRUN echo '#!/bin/bash\\n \\\nnohup tensorboard --bind_all --logdir=$1 > tb.log 2>&1 & echo \"see tb.log for address\"' \\\n>> /bin/tbstart.sh && chmod +x /bin/tbstart.sh\n\nCOPY . /torchok\n\nEXPOSE 8888 6006 22\nENTRYPOINT bash /bin/start.sh\n"
}