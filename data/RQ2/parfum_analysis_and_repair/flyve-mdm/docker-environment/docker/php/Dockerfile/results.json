{
  "startTime": 1674248564433,
  "endTime": 1674248565809,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 58,
        "columnEnd": 88
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 49,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 49,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 58,
        "columnEnd": 88
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 49,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 58
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 49,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 82
      }
    }
  ],
  "repairedDockerfile": "#ARGS\nARG PHP_TAG=${PHP_TAG}\nFROM php:${PHP_TAG}\n\nARG GLPI_DB_NAME_TEST=${GLPI_DB_NAME_TEST}\nARG GLPI_DB_NAME_UPGRADE_TEST=${GLPI_DB_NAME_UPGRADE_TEST}\nARG MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}\nARG GLPI_DB_NAME=${GLPI_DB_NAME}\nARG GLPIPATH=${GLPIPATH}\nARG GLPI_BRANCH=${GLPI_BRANCH}\nARG GLPI_SOURCE=${GLPI_SOURCE}\nARG FLYVEMDM_BRANCH=${FLYVEMDM_BRANCH}\nARG FLYVEMDM_SOURCE=${FLYVEMDM_SOURCE}\nARG FLYVEMDM_PATH=${FLYVEMDM_PATH}\nARG FUSIONINVENTORY_BRANCH=${FUSIONINVENTORY_BRANCH}\nARG FUSIONINVENTORY_SOURCE=${FUSIONINVENTORY_SOURCE}\nARG FUSIONINVENTORY_PATH=${FUSIONINVENTORY_PATH}\nARG HOST_SERVER_MOSQUITTO_PORT=${HOST_SERVER_MOSQUITTO_PORT}\nARG HOST_SERVER_MOSQUITTO_PORT_TLS=${HOST_SERVER_MOSQUITTO_PORT_TLS}\nARG HOST_SERVER_NAME=${HOST_SERVER_NAME}\n\n# Environment variables\nENV GLPI_DB_NAME_TEST ${GLPI_DB_NAME_TEST}\nENV GLPI_DB_NAME_UPGRADE_TEST ${GLPI_DB_NAME_UPGRADE_TEST}\nENV MYSQL_ROOT_PASSWORD ${MYSQL_ROOT_PASSWORD}\nENV GLPI_DB_NAME ${GLPI_DB_NAME}\nENV GLPIPATH ${GLPIPATH}\nENV GLPI_BRANCH ${GLPI_BRANCH}\nENV GLPI_SOURCE ${GLPI_SOURCE}\nENV CLONNING_METHOD ${CLONNING_METHOD}\nENV DEFAULT_TIME_ZONE ${DEFAULT_TIME_ZONE}\nENV FLYVEMDM_BRANCH ${FLYVEMDM_BRANCH}\nENV FLYVEMDM_SOURCE ${FLYVEMDM_SOURCE}\nENV FLYVEMDM_PATH ${FLYVEMDM_PATH}\nENV FUSIONINVENTORY_BRANCH ${FUSIONINVENTORY_BRANCH}\nENV FUSIONINVENTORY_SOURCE ${FUSIONINVENTORY_SOURCE}\nENV FUSIONINVENTORY_PATH ${FUSIONINVENTORY_PATH}\nENV HOST_SERVER_MOSQUITTO_PORT ${HOST_SERVER_MOSQUITTO_PORT}\nENV HOST_SERVER_MOSQUITTO_PORT_TLS ${HOST_SERVER_MOSQUITTO_PORT_TLS}\nENV HOST_SERVER_NAME ${HOST_SERVER_NAME}\n\nRUN apt-get update --fix-missing && apt-get upgrade -y && apt-get install --no-install-recommends -my wget gnupg && rm -rf /var/lib/apt/lists/*;\n\n# here is the installation NodeJS and Bower\n#RUN curl -s https://deb.nodesource.com/setup_6.x | bash -\n#RUN apt-get install -y nodejs \\\n#    && npm install -g bower\n\n# Install iconv, mcrypt, gd\nRUN apt-get install --no-install-recommends -y cron libfreetype6-dev libjpeg62-turbo-dev libmcrypt-dev \\\n        git default-mysql-client libldb-dev libldap2-dev libbz2-dev unzip \\\n    && docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \\\n    && docker-php-ext-install -j$(nproc) gd iconv mcrypt && rm -rf /var/lib/apt/lists/*;\n\n# Install memcached\nRUN apt-get install --no-install-recommends -y libmemcached-dev nano curl dos2unix \\\n  && git clone https://github.com/php-memcached-dev/php-memcached /usr/src/php/ext/memcached \\\n  && cd /usr/src/php/ext/memcached && git checkout -b php7 origin/php7 \\\n  && docker-php-ext-configure memcached \\\n  && docker-php-ext-install memcached opcache mbstring && rm -rf /var/lib/apt/lists/*;\n\n# Install php extensions\nRUN docker-php-ext-install zip json pdo_mysql mysqli ctype fileinfo sockets bz2\nRUN ln -fs /usr/lib/x86_64-linux-gnu/libldap.so /usr/lib/\nRUN docker-php-ext-configure ldap\n## APCu\nRUN yes | pecl install apcu \\\n    && docker-php-ext-enable apcu\n\n# Composer\nRUN curl -f -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer\n\n# Xdebug\n# here is the installation\nRUN pecl install xdebug\nRUN docker-php-ext-enable xdebug\n\n#Enable Mysqli extension\nRUN docker-php-ext-enable mysqli\n\nWORKDIR $GLPIPATH\n# Add www-data user to sudo group\nRUN adduser www-data sudo\n# Add permission to the folder\nRUN chown -R www-data:www-data $GLPIPATH /var/www\n# Add permission to the volume\nRUN usermod -u 1000 www-data && usermod -d $GLPIPATH www-data\n# Giving a shell to www-data\nRUN chsh -s /bin/bash www-data\n#Install/configure GLPI\nRUN mkdir /opt/dev-tools\nADD ./cliinstall.sh /opt/dev-tools/\nADD ./flyvemdm-test /usr/local/bin/\nRUN chmod +x /opt/dev-tools/cliinstall.sh /usr/local/bin/flyvemdm-test\nRUN dos2unix /opt/dev-tools/cliinstall.sh /usr/local/bin/flyvemdm-test"
}