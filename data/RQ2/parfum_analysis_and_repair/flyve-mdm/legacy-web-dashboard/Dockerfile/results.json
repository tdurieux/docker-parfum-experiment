{
  "startTime": 1674256012591,
  "endTime": 1674256013318,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 2,
        "columnEnd": 47
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 2,
        "columnEnd": 22
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 2,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 2,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 2,
        "columnEnd": 25
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 2,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 2,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 2,
        "columnEnd": 41
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 2,
        "columnEnd": 34
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:8\n# Install Nginx.\nRUN \\\n  apt-get update && \\\n  apt-get install --no-install-recommends -y nginx && \\\n  apt-get install --no-install-recommends -y curl && \\\n  apt-get install --no-install-recommends -y git-core && \\\n  curl -f -sL https://deb.nodesource.com/setup_6.x | bash - && \\\n  apt-get install --no-install-recommends -y nodejs && \\\n  apt-get install --no-install-recommends -y gcc build-essential && \\\n  apt-get install --no-install-recommends -y ruby ruby-dev && \\\n  gem install --no-rdoc --no-ri sass && \\\n  gem install compass && \\\n  npm install bower -g && \\\n  npm install grunt -g && \\\n  rm -rf /var/lib/apt/lists/* && \\\n  echo \"\\ndaemon off;\" >> /etc/nginx/nginx.conf && \\\n  chown -R www-data:www-data /var/lib/nginx && \\\n  mkdir -p /var/cache/nginx && \\\n  chmod -R 777 /var/cache/nginx && npm cache clean --force;\n\n# Define mountable directories.\nVOLUME [\"/etc/nginx/sites-enabled\", \"/etc/nginx/certs\", \"/etc/nginx/conf.d\", \"/var/log/nginx\"]\n\n### COPY DIST STUFF TO var/www/html\nADD . /sourcebuild\nRUN cd /sourcebuild && chmod +x ./build-dist.sh && ./build-dist.sh && rm -Rf /var/www/html && mv /sourcebuild/dist /var/www/html\n\nADD tools /tools\nRUN chmod +x /tools/*.sh && \\\n   chmod -R 777 /var/www/html && \\\n   chmod -R 777 /var/log/nginx && \\\n   chown -R www-data:www-data /var/www/\n\n# Define working directory.\nWORKDIR /etc/nginx\n\nENV GLPI_API_URL http://flyve-glpi:8090/api\nENV GLPI_API_TOKEN j8lth8dqvgky79f0dyf4jc59p353u34eao9rwlis3\n# Define default command.\nCMD [\"/tools/run-nginx.sh\"]\n\n# Expose ports.\nEXPOSE 80"
}