{
  "startTime": 1674216102984,
  "endTime": 1674216104005,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 5,
        "columnEnd": 48
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 5,
        "columnEnd": 21
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 5,
        "columnEnd": 17
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 52,
        "columnEnd": 68
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 21,
        "columnEnd": 37
      }
    }
  ],
  "repairedDockerfile": "## Dependencies (production)\nFROM node:14-alpine AS dependencies\n\nWORKDIR /app\n\nCOPY package.json yarn.lock ./\nRUN apk add --no-cache python make gcc g++ \\\n  && yarn install --frozen-lockfile --production && yarn cache clean;\n\n## Builder\nFROM dependencies AS builder\n\nWORKDIR /app\n\nCOPY tsconfig.json ./\nCOPY ./config/ ./config/\nCOPY ./lib/ ./lib/\nCOPY ./src/ ./src/\n\nRUN yarn install --frozen-lockfile --slient \\\n  && yarn cache clean \\\n  && yarn compile && yarn cache clean;\n\n## Runner\nFROM node:14-alpine\n\nWORKDIR /app\nRUN chown node:node .\n\nCOPY --from=dependencies /app/node_modules/ ./node_modules/\nCOPY --from=builder /app/ ./\nCOPY ./.git/ ./.git\nCOPY words.txt ./\n\nENV NODE_ENV production\nENV BOOT_SINGLE true\nENV WS_PORT 1336\nENV REST_PORT 1337\nENV POSTGRES_USER postgres\n\nUSER node\nCMD [\"node\", \"dist/src/index.js\"]\n"
}