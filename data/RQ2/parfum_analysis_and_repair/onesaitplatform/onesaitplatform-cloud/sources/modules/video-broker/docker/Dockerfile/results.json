{
  "startTime": 1674249507494,
  "endTime": 1674249508719,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 31,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 9
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 42,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 6
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 49,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 42,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 6
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 49,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 31,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 9
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 42,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 6
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 49,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 14
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 42,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 6
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 49,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 14
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:16.04\n\n# metadata\nLABEL module.maintainer=\"onesaitplatform@indra.es\" \\\n\t  module.name=\"video-broker\"\t\n\n# logs folder and opencv\nRUN mkdir -p /var/log/platform-logs && \\\n\tmkdir -p /usr/local/opencv && \\\n\tmkdir -p /usr/local/app/resources && \\\n\tmkdir ./target\n\nADD resources /usr/local/app/resources\n\n# create onesait user/group\nRUN addgroup --system onesait --gecos 433 && adduser --gecos 431 --system --ingroup onesait --home /usr/local --disabled-login onesait\n\nRUN chown -R onesait:onesait /usr/local && \\\n    chown -R onesait:onesait /var/log/platform-logs && \\\n    chown -R onesait:onesait ./target && \\\n    chmod -R 777 ./target && \\\n    chmod -R 777 /var/log && \\\n    chmod -R 777 /usr/local\n\nENV OPENCV_VERSION 3.4.2\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y software-properties-common && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get update && \\\n    apt-get upgrade -y && \\\n    apt-get install --no-install-recommends -y openjdk-8-jdk \\\n    openjdk-8-jre \\\n    ant \\\n    python \\\n    cmake \\\n    make \\\n    wget \\\n    g++ \\\n    linux-headers-generic \\\n    libc6 && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get install --no-install-recommends -y zip \\\n\tunzip && \\\n    wget https://github.com/opencv/opencv/archive/$OPENCV_VERSION.zip \\\n    && unzip -d /usr/local $OPENCV_VERSION.zip \\\n    && rm $OPENCV_VERSION.zip && rm -rf /var/lib/apt/lists/*;\n\n\nRUN apt-get install --no-install-recommends -y ffmpeg \\\n    libavcodec-dev \\\n    libavformat-dev \\\n    libavdevice-dev \\\n    libv4l-dev \\\n    libpng-dev \\\n    pkg-config && rm -rf /var/lib/apt/lists/*;\n\nENV PKG_CONFIG_PATH=/usr/local/x86_64-linux-gnu/pkgconfig:/usr/local/lib/pkg-config\n\nENV JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64\n\nRUN cd /usr/local/opencv \\\n\t&& cmake /usr/local/opencv-$OPENCV_VERSION \\\n\t-DBUILD_SHARED_LIBS:BOOL=OFF \\\n\t-DCMAKE_BUILD_TYPE:STRING=Release \\\n\t-DBUILD_opencv_python2:BOOL=OFF \\\n\t-DBUILD_PERF_TESTS:BOOL=OFF \\\n\t-DBUILD_TESTS:BOOL=OFF \\\n\t-DWITH_FFMPEG=ON \\\n\t-DWITH_TBB=ON \\\n\t-DWITH_GTK=ON \\\n\t-DWITH_V4L=ON \\\n\t-DWITH_OPENGL=ON \\\n\t-DWITH_CUBLAS=ON \\\n\t-DWITH_QT=OFF \\\n\t-DCUDA_NVCC_FLAGS=\"-D_FORCE_INLINES\" \\\n\t&& cmake /usr/local/opencv-$OPENCV_VERSION \\\n\t&& make -j \\\n\t&& make install\n\nRUN rm -R /usr/local/opencv-$OPENCV_VERSION\n\nADD *-exec.jar app.jar\n\nRUN chown onesait:onesait app.jar\n\nVOLUME [\"/tmp\",\"/var/log/platform-logs\"]\n\nUSER onesait\n\nEXPOSE 24000\n\n#HZ_SERVICE_DISCOVERY_STRATEGY can take values: service or zookeeper\n\nENV JAVA_OPTS=\"$JAVA_OPTS -Xms1G -Xmx3G\" \\\n    SERVER_NAME=localhost \\\n    KAFKAENABLED=true \\\n    KAFKABROKERS=none \\    \n    KAFKAHOST=kafka \\\n    KAFKAPORT=9095 \\\n    KAFKAUSER=VideoBrokerClient\\\n    KAFKAPASSWORD=54986d1088d24dd48605a93e85665e1c\\\n    CONFIGDBSERVERS=configdb:3306 \\\n    JDBCPROTOCOL=\"jdbc:mysql:\" \\\n    AUDITGLOBALNOTIFY=true \\    \n    DBADDPROPS=\"\" \\\n    LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/lib64:/usr/local/opencv/lib \\\n    HZ_SERVICE_DISCOVERY_STRATEGY=service \\\n    HZ_ZOOKEEPER_URL=zookeeper:2181 \\\n    CONFIGDBUSER=root \\\n    CONFIGDBPASS=changeIt! \\\n    CONFIGDB_MAX_ACTIVE=2 \\\n    CONFIGDB_MAX_IDLE=2 \\\n    JDBCPROTOCOL=\"jdbc:mysql:\" \\\n    DBADDPROPS=\"\" \\\n    AUDITGLOBALNOTIFY=true \\\n    MAXCONN=100 \\\n    MAXCONNROUTE=100 \\\n    OP_LOG_LEVEL=INFO  \\\n    GRAYLOG_ENABLED=false \\\n    GRAYLOG_HOST=log-centralizer \\\n    GRAYLOG_PORT=12201\n\n\nENTRYPOINT java $JAVA_OPTS -Djava.library.path=/usr/local/opencv/lib -Djava.security.egd=file:/dev/./urandom -Dspring.profiles.active=docker -jar /app.jar\n"
}