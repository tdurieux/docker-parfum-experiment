diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/onesaitplatform/onesaitplatform-cloud/devops/build-deploy/docker/dockerfiles/zeppelin-py3/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/onesaitplatform/onesaitplatform-cloud/devops/build-deploy/docker/dockerfiles/zeppelin-py3/Dockerfile/repaired.Dockerfile
index d478926..e91afba 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/onesaitplatform/onesaitplatform-cloud/devops/build-deploy/docker/dockerfiles/zeppelin-py3/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/onesaitplatform/onesaitplatform-cloud/devops/build-deploy/docker/dockerfiles/zeppelin-py3/Dockerfile/repaired.Dockerfile
@@ -28,89 +28,89 @@ ENV LOG_TAG="[ZEPPELIN_${Z_VERSION}]:" \
 
 RUN echo "$LOG_TAG update and install basic packages" && \
     apt-get -y update && \
-    apt-get install -y locales && \
+    apt-get install --no-install-recommends -y locales && \
     locale-gen $LANG && \
-    apt-get install -y software-properties-common && \
+    apt-get install --no-install-recommends -y software-properties-common && \
     apt -y autoclean && \
     apt -y dist-upgrade && \
-    apt-get install -y build-essential
+    apt-get install --no-install-recommends -y build-essential && rm -rf /var/lib/apt/lists/*;
 
 RUN echo "$LOG_TAG install tini related packages" && \
-    apt-get install -y wget curl grep sed dpkg && \
-    TINI_VERSION=`curl https://github.com/krallin/tini/releases/latest | grep -o "/v.*\"" | sed 's:^..\(.*\).$:\1:'` && \
-    curl -L "https://github.com/krallin/tini/releases/download/v${TINI_VERSION}/tini_${TINI_VERSION}.deb" > tini.deb && \
+    apt-get install --no-install-recommends -y wget curl grep sed dpkg && \
+    TINI_VERSION=$( curl -f https://github.com/krallin/tini/releases/latest | grep -o "/v.*\"" | sed 's:^..\(.*\).$:\1:') && \
+    curl -f -L "https://github.com/krallin/tini/releases/download/v${TINI_VERSION}/tini_${TINI_VERSION}.deb" > tini.deb && \
     dpkg -i tini.deb && \
-    rm tini.deb
+    rm tini.deb && rm -rf /var/lib/apt/lists/*;
 
 ENV JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64
 RUN echo "$LOG_TAG Install java8" && \
     apt-get -y update && \
-    apt-get install -y openjdk-8-jdk && \
+    apt-get install --no-install-recommends -y openjdk-8-jdk && \
     rm -rf /var/lib/apt/lists/*
 
 # should install conda first before numpy, matploylib since pip and python will be installed by conda
 RUN echo "$LOG_TAG Install miniconda3 related packages" && \
     apt-get -y update && \
-    apt-get install -y bzip2 ca-certificates \
+    apt-get install --no-install-recommends -y bzip2 ca-certificates \
     libglib2.0-0 libgit2-dev libxext6 libsm6 libxrender1 \
     git mercurial subversion && \
     echo 'export PATH=/opt/conda/bin:$PATH' > /etc/profile.d/conda.sh && \
     wget --quiet https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O ~/miniconda.sh && \
     /bin/bash ~/miniconda.sh -b -p /opt/conda && \
-    rm ~/miniconda.sh
+    rm ~/miniconda.sh && rm -rf /var/lib/apt/lists/*;
 ENV PATH /opt/conda/bin:$PATH
 
 RUN echo "$LOG_TAG Install python related packages" && \
     apt-get -y update && \
-    apt-get install -y python-dev python-pip && \
-    apt-get install -y gfortran && \
+    apt-get install --no-install-recommends -y python-dev python-pip && \
+    apt-get install --no-install-recommends -y gfortran && \
     # numerical/algebra packages
-    apt-get install -y libblas-dev libatlas-dev liblapack-dev && \
+    apt-get install --no-install-recommends -y libblas-dev libatlas-dev liblapack-dev && \
     # font, image for matplotlib
-    apt-get install -y libpng-dev libfreetype6-dev libxft-dev && \
+    apt-get install --no-install-recommends -y libpng-dev libfreetype6-dev libxft-dev && \
     # for tkinter
-    apt-get install -y python-tk libxml2-dev libxslt-dev zlib1g-dev && \
+    apt-get install --no-install-recommends -y python-tk libxml2-dev libxslt-dev zlib1g-dev && \
     conda config --set always_yes yes --set changeps1 no && \
     conda update -q conda && \
     conda info -a && \
     conda config --add channels conda-forge && \
     conda install -q numpy pandas matplotlib pandasql scikit-learn ipython jupyter_client ipykernel bokeh tensorflow keras && \
-    pip install -q scipy ggplot grpcio bkzep selenium bs4 scrapy networkX gensim seaborn && \
-    pip install -q scipy ggplot grpcio bkzep  && \
-	pip install onesaitplatform-client-services
+    pip install --no-cache-dir -q scipy ggplot grpcio bkzep selenium bs4 scrapy networkX gensim seaborn && \
+    pip install --no-cache-dir -q scipy ggplot grpcio bkzep && \
+	pip install --no-cache-dir onesaitplatform-client-services && rm -rf /var/lib/apt/lists/*;
 
 RUN echo "$LOG_TAG Install R related packages" && \
     echo "deb http://cran.rstudio.com/bin/linux/ubuntu xenial/" | tee -a /etc/apt/sources.list && \
-    gpg --keyserver keyserver.ubuntu.com --recv-key E084DAB9 && \
-    gpg -a --export E084DAB9 | apt-key add - && \
+    gpg --batch --keyserver keyserver.ubuntu.com --recv-key E084DAB9 && \
+    gpg --batch -a --export E084DAB9 | apt-key add - && \
     apt-get -y update && \
-    apt-get -y --allow-unauthenticated install r-base r-base-dev && \
+    apt-get -y --no-install-recommends --allow-unauthenticated install r-base r-base-dev && \
     R -e "install.packages('knitr', repos='http://cran.us.r-project.org')" && \
     R -e "install.packages('ggplot2', repos='http://cran.us.r-project.org')" && \
     R -e "install.packages('googleVis', repos='http://cran.us.r-project.org')" && \
     R -e "install.packages('data.table', repos='http://cran.us.r-project.org')" && \
     # for devtools, Rcpp
-    apt-get -y install libcurl4-gnutls-dev libssl-dev && \
+    apt-get -y --no-install-recommends install libcurl4-gnutls-dev libssl-dev && \
     add-apt-repository ppa:cran/libgit2 && \
     apt-get update && \
-    apt-get -y install libssh2-1-dev libgit2-dev && \
+    apt-get -y --no-install-recommends install libssh2-1-dev libgit2-dev && \
     R -e "install.packages('gert')" && \
     R -e "install.packages('devtools', repos='http://cran.us.r-project.org')" && \
     R -e "install.packages('Rcpp', repos='http://cran.us.r-project.org')" && \
-    Rscript -e "library('devtools'); library('Rcpp'); install_github('ramnathv/rCharts')"
+    Rscript -e "library('devtools'); library('Rcpp'); install_github('ramnathv/rCharts')" && rm -rf /var/lib/apt/lists/*;
 
 ENV GRAYLOG_ENABLED=false \
     GRAYLOG_HOST=graylog \
     GRAYLOG_PORT=12201 \
     GRAYLOG_APP_NAME=Zeppelin-server-1
-    
+
 RUN echo "$LOG_TAG Download Zeppelin binary" && \
-    wget -O /tmp/zeppelin-${Z_VERSION}-bin-all.tgz http://archive.apache.org/dist/zeppelin/zeppelin-${Z_VERSION}/zeppelin-${Z_VERSION}-bin-all.tgz && \
+    wget -O /tmp/zeppelin-${Z_VERSION}-bin-all.tgz https://archive.apache.org/dist/zeppelin/zeppelin-${Z_VERSION}/zeppelin-${Z_VERSION}-bin-all.tgz && \
     tar -zxvf /tmp/zeppelin-${Z_VERSION}-bin-all.tgz && \
     rm -rf /tmp/zeppelin-${Z_VERSION}-bin-all.tgz && \
     mv /zeppelin-${Z_VERSION}-bin-all ${Z_HOME} && \
     echo "$LOG_TAG Download Graylog appender" && \
-    curl -L -X GET  https://search.maven.org/classic/remotecontent?filepath=biz/paluch/logging/logstash-gelf/1.14.1/logstash-gelf-1.14.1.jar --output ${Z_HOME}/lib/logstash-gelf-1.14.1.jar
+    curl -f -L -X GET https://search.maven.org/classic/remotecontent?filepath=biz/paluch/logging/logstash-gelf/1.14.1/logstash-gelf-1.14.1.jar --output ${Z_HOME}/lib/logstash-gelf-1.14.1.jar
 
 RUN echo "$LOG_TAG Cleanup" && \
     apt-get autoclean && \
@@ -125,12 +125,12 @@ RUN chgrp root /etc/passwd && chmod ug+rw /etc/passwd
 
 COPY shiro.ini ${Z_HOME}/conf/
 # Bug in zeppelin (search in /zeppelin for zeppelin-site.xml)
-#COPY zeppelin-site.xml ${Z_HOME}/conf/ 
-COPY zeppelin-site.xml ${Z_HOME} 
-COPY zeppelin-onesait-platform*.jar ${Z_HOME}/interpreter/onesaitplatform/  
+#COPY zeppelin-site.xml ${Z_HOME}/conf/
+COPY zeppelin-site.xml ${Z_HOME}
+COPY zeppelin-onesait-platform*.jar ${Z_HOME}/interpreter/onesaitplatform/ 
 COPY zeppelin-onesait-platform*.jar ${Z_HOME}/lib/interpreter/
 COPY authenticator*.jar ${Z_HOME}/lib/
-COPY zeppelin.sh ${Z_HOME}/bin/    
+COPY zeppelin.sh ${Z_HOME}/bin/   
 COPY log4j.properties ${Z_HOME}/conf/
 COPY log4j-graylog.properties ${Z_HOME}/conf/
 
@@ -141,12 +141,12 @@ RUN echo "$LOG_TAG Download Spark binary" && \
     wget -O /tmp/spark-2.4.5-bin-hadoop2.7.tgz https://archive.apache.org/dist/spark/spark-2.4.5/spark-2.4.5-bin-hadoop2.7.tgz && \ 
     #try at https://archive.apache.org/dist/spark/spark-2.4.5/
     tar -zxvf /tmp/spark-2.4.5-bin-hadoop2.7.tgz && \
-    rm -rf /tmp/spark-2.4.5-bin-hadoop2.7.tgz 
-	
+    rm -rf /tmp/spark-2.4.5-bin-hadoop2.7.tgz
+
 ENV SPARK_HOME=/spark-2.4.5-bin-hadoop2.7
-    
+
 RUN apt-get -y update && \
-	apt-get install -y libmysqlclient-dev    
+	apt-get install --no-install-recommends -y libmysqlclient-dev && rm -rf /var/lib/apt/lists/*;
 
 RUN cp -r /zeppelin/conf /tmp && \
     chmod -R 777 /tmp/conf && \