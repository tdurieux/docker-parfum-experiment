diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/abstract-tech/derex.runner/docker-definition/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/abstract-tech/derex.runner/docker-definition/Dockerfile/repaired.Dockerfile
index 6480bb3..99889d3 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/abstract-tech/derex.runner/docker-definition/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/abstract-tech/derex.runner/docker-definition/Dockerfile/repaired.Dockerfile
@@ -1,5 +1,3 @@
-# syntax = docker/dockerfile:experimental
-
 # Debugging a Dockerfile can be difficult. A good pattern is to put a breakpoint, enter
 # the build container and have a look. To do this, put the command
 # sleep infinity
@@ -15,7 +13,7 @@ FROM docker.io/python:${PYTHON_VERSION}-${ALPINE_VERSION} as base
 
 RUN wget -q -O - "https://github.com/jwilder/dockerize/releases/download/v0.6.1/dockerize-linux-amd64-v0.6.1.tar.gz" | tar xzf - --directory /usr/local/bin
 
-RUN --mount=type=cache,target=/var/cache/apk apk add \
+RUN --mount=type=cache,target=/var/cache/apk apk add --no-cache \
     gettext \
     git \
     graphviz \
@@ -40,7 +38,7 @@ ENV NO_PREREQ_INSTALL=True
 ENV NO_PYTHON_UNINSTALL=True
 
 ARG PIP_VERSION=20.2.3
-RUN pip install -U pip==${PIP_VERSION}
+RUN pip install --no-cache-dir -U pip==${PIP_VERSION}
 
 FROM base as sourceonly
 ARG EDX_PLATFORM_RELEASE=lilac
@@ -78,7 +76,7 @@ RUN cp /openedx/edx-platform/requirements/edx/base.txt /openedx/requirements/ope
 
 FROM sourceonly as wheels
 
-RUN --mount=type=cache,target=/var/cache/apk apk add \
+RUN --mount=type=cache,target=/var/cache/apk apk add --no-cache \
     alpine-sdk \
     blas-dev \
     freetype-dev \
@@ -129,8 +127,8 @@ RUN --mount=type=cache,target=/root/.cache/pip \
     pip wheel --wheel-dir=/wheelhouse -r /openedx/requirements/overrides.txt
 
 FROM wheels as rmlint
-RUN pip install scons && \
-    apk add \
+RUN pip install --no-cache-dir scons && \
+    apk add --no-cache \
     glib-dev \
     json-glib
 
@@ -143,18 +141,18 @@ FROM sourceonly as notranslations
 
 COPY --from=rmlint /usr/local/bin/rmlint /usr/local/bin/rmlint
 
-RUN --mount=type=cache,target=/root/.cache/pip --mount=type=bind,source=/wheelhouse,from=wheels,target=/wheelhouse \
-    pip install -r /openedx/requirements/openedx_base_fixed.txt --find-links /wheelhouse
+RUN --mount=type=cache,target=/root/.cache/pip--mount=type=bind,source=/wheelhouse,from=wheels,target=/wheelhouse \
+    pip install --no-cache-dir -r /openedx/requirements/openedx_base_fixed.txt --find-links /wheelhouse
 
-RUN --mount=type=cache,target=/root/.cache/pip --mount=type=bind,source=/wheelhouse,from=wheels,target=/wheelhouse \
-    pip install -U -r /openedx/requirements/derex.txt --find-links /wheelhouse -c /openedx/requirements/openedx_constraints.txt
+RUN --mount=type=cache,target=/root/.cache/pip--mount=type=bind,source=/wheelhouse,from=wheels,target=/wheelhouse \
+    pip install --no-cache-dir -U -r /openedx/requirements/derex.txt --find-links /wheelhouse -c /openedx/requirements/openedx_constraints.txt
 
-RUN --mount=type=cache,target=/root/.cache/pip --mount=type=bind,source=/wheelhouse,from=wheels,target=/wheelhouse \
-    pip install -U -r /openedx/requirements/overrides.txt --find-links /wheelhouse
+RUN --mount=type=cache,target=/root/.cache/pip--mount=type=bind,source=/wheelhouse,from=wheels,target=/wheelhouse \
+    pip install --no-cache-dir -U -r /openedx/requirements/overrides.txt --find-links /wheelhouse
 
 COPY derex_django/ /openedx/derex_django
-RUN --mount=type=cache,target=/root/.cache/pip --mount=type=bind,source=/wheelhouse,from=wheels,target=/wheelhouse \
-    pip install /openedx/derex_django --find-links /wheelhouse
+RUN --mount=type=cache,target=/root/.cache/pip--mount=type=bind,source=/wheelhouse,from=wheels,target=/wheelhouse \
+    pip install --no-cache-dir /openedx/derex_django --find-links /wheelhouse
 
 COPY scripts/* scripts/assets/* /tmp/
 
@@ -164,7 +162,7 @@ FROM notranslations as translations
 
 RUN --mount=type=cache,target=/root/.cache/pip \
     --mount=type=secret,id=transifex,dst=/root/.transifexrc-orig \
-    pip install transifex-client -c /openedx/requirements/openedx_constraints.txt && \
+    pip install --no-cache-dir transifex-client -c /openedx/requirements/openedx_constraints.txt && \
     export DJANGO_SETTINGS_MODULE="derex_django.settings.build.translations" && \
     derex_update_openedx_translations
 
@@ -186,9 +184,9 @@ RUN --mount=type=cache,target=/root/.npm \
     --mount=type=cache,target=/usr/local/share/.cache \
     --mount=type=cache,target=/var/cache/apk \
     --mount=type=cache,target=/root/.cache/pip \
-    apk add g++ make coreutils vim mariadb-client && \
+    apk add --no-cache g++ make coreutils vim mariadb-client && \
     wget ${NODE_URL} -O - | tar --directory / -xJf - && ln -s /node-*/bin/* /usr/local/bin/ && \
-    npm install --unsafe-perm
+    npm install --unsafe-perm && npm cache clean --force;
 
 FROM nostatic-dev as dev-nodump
 RUN derex_update_assets && derex_cleanup_assets