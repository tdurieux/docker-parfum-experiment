{
  "startTime": 1674255692339,
  "endTime": 1674255693339,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 190,
        "lineEnd": 190,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 131,
        "lineEnd": 131,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 146,
        "lineEnd": 146,
        "columnStart": 4,
        "columnEnd": 88
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 149,
        "lineEnd": 149,
        "columnStart": 4,
        "columnEnd": 127
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 152,
        "lineEnd": 152,
        "columnStart": 4,
        "columnEnd": 82
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 156,
        "lineEnd": 156,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 166,
        "lineEnd": 166,
        "columnStart": 4,
        "columnEnd": 81
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 17,
        "lineEnd": 33,
        "columnStart": 45,
        "columnEnd": 12
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 80,
        "lineEnd": 106,
        "columnStart": 45,
        "columnEnd": 8
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 132,
        "lineEnd": 134,
        "columnStart": 4,
        "columnEnd": 13
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 188,
        "lineEnd": 188,
        "columnStart": 4,
        "columnEnd": 49
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Debugging a Dockerfile can be difficult. A good pattern is to put a breakpoint, enter\n# the build container and have a look. To do this, put the command\n# sleep infinity\n# in the place you want to examine. When execution stops there, run\n# sudo nsenter --target $(pgrep sleep) --mount --uts --ipc --net --pid sh\n\nARG ALPINE_VERSION=alpine3.14\nARG PYTHON_VERSION=3.8\n\nFROM docker.io/python:${PYTHON_VERSION}-${ALPINE_VERSION} as base\n# This image will be used to build all other images in this Dockerfile\n# The base image is defined later, and it has rmlint added to this base\n\nRUN wget -q -O - \"https://github.com/jwilder/dockerize/releases/download/v0.6.1/dockerize-linux-amd64-v0.6.1.tar.gz\" | tar xzf - --directory /usr/local/bin\n\nRUN --mount=type=cache,target=/var/cache/apk apk add --no-cache \\\n    gettext \\\n    git \\\n    graphviz \\\n    freetype \\\n    graphviz \\\n    openblas \\\n    lapack \\\n    libstdc++ \\\n    libjpeg \\\n    libxslt \\\n    mariadb-connector-c \\\n    sqlite \\\n    xmlsec \\\n    wget \\\n    bash \\\n    geos-dev\n\nRUN geos-config --cflags\n\n# we want to use paver without remembering to specify these\nENV NO_PREREQ_INSTALL=True\nENV NO_PYTHON_UNINSTALL=True\n\nARG PIP_VERSION=20.2.3\nRUN pip install --no-cache-dir -U pip==${PIP_VERSION}\n\nFROM base as sourceonly\nARG EDX_PLATFORM_RELEASE=lilac\nARG EDX_PLATFORM_VERSION=open-release/lilac.master\nARG EDX_PLATFORM_REPOSITORY=https://github.com/edx/edx-platform.git\n\nRUN mkdir -p /openedx/themes /openedx/locale /openedx/bin/ /openedx/requirements/ && \\\n    git clone ${EDX_PLATFORM_REPOSITORY} --branch ${EDX_PLATFORM_VERSION} --depth 1 /openedx/edx-platform\n# Copy derex overrides to edx-platform source code\nCOPY openedx_customizations/${EDX_PLATFORM_RELEASE} /openedx/edx-platform\n\nWORKDIR /openedx/edx-platform\nCOPY requirements/${EDX_PLATFORM_RELEASE}/* /openedx/requirements/\n# The following layer is going to produce 3 requirements file:\n# * edx base requirements with some fixes which will be installed (openedx_base_fixed.txt)\n# * edx base requirements with relative paths converted to absolute paths which will be\n#   used to create wheels (openedx_wheels.txt)\n# * edx base requirements without links and extras to be used as constraints (openedx_constraints.txt)\nRUN cp /openedx/edx-platform/requirements/edx/base.txt /openedx/requirements/openedx_base_fixed.txt && \\\n    `# Versioning of this package is wrong at the pinned commit` \\\n    sed -e \"s|django-oauth-plus.git@01ec2a161dfc3465f9d35b9211ae790177418316|django-oauth-plus.git@6218624ef19aea37c5abec35b4ea2e049dc8ee4e|\" -i /openedx/requirements/openedx_base_fixed.txt && \\\n    `# Without the following line pip produces an error:` \\\n    `# Generating metadata for package <package> produced metadata for project name django-ratelimit. Fix your #egg=ratelimit fragments.` \\\n    sed -e \"s|#egg=ratelimit|#egg=django-ratelimit|\" -i /openedx/requirements/openedx_base_fixed.txt && \\\n    sed -e \"s|#egg=pystache_custom-dev|#egg=pystache-custom|\" -i /openedx/requirements/openedx_base_fixed.txt && \\\n    `# On lilac xmlsec==1.3.9 required by python-saml suffers from a bug wich was solved only in version 1.3.10` \\\n    `# https://github.com/mehcode/python-xmlsec/commit/ce45868701220368f156114978c784cc5200d80c` \\\n    sed -e \"s|xmlsec==1.3.9|xmlsec==1.3.10|\" -i /openedx/requirements/openedx_base_fixed.txt && \\\n    cat /openedx/requirements/openedx_base_fixed.txt | sed -e \"/git+https/!s/-e /-e \\/openedx\\/edx-platform\\//\" > /openedx/requirements/openedx_wheels.txt && \\\n    `# scipy 1.4.1 has a problem and does not build. Our fork includes a fix` \\\n    sed -e \"s|.*scipy==1.4.1.*|https://github.com/Abstract-Tech/scipy/tarball/maintenance/1.4.x#egg=scipy|\" -i /openedx/requirements/openedx_wheels.txt && \\\n    `# From version 20.3 pip use a new dependency resolver which doesn t accept extras or links as constraints` \\\n    `# Read more at https://github.com/pypa/pip/issues/8210` \\\n    cat /openedx/requirements/openedx_wheels.txt | grep -v github | grep -v ^-e | sed -e \"s|\\[.*\\]||\" > /openedx/requirements/openedx_constraints.txt\n\nFROM sourceonly as wheels\n\nRUN --mount=type=cache,target=/var/cache/apk apk add --no-cache \\\n    alpine-sdk \\\n    blas-dev \\\n    freetype-dev \\\n    gettext \\\n    gfortran \\\n    graphviz-dev \\\n    jpeg-dev \\\n    lapack-dev \\\n    libffi-dev \\\n    libpng-dev \\\n    libxml2-dev \\\n    libxslt-dev \\\n    linux-headers \\\n    mariadb-connector-c-dev \\\n    mariadb-dev \\\n    openblas-dev \\\n    pkgconfig \\\n    sqlite-dev \\\n    swig \\\n    xmlsec \\\n    xmlsec-dev \\\n    # The following are needed just to compile gevent\n    make \\\n    gcc \\\n    musl-dev \\\n    file && \\\n    `# From https://github.com/jfloff/alpine-python/issues/32` \\\n    sed '/st_mysql_options options;/a unsigned int reconnect;' /usr/include/mysql/mysql.h -i\n\n# Latest versions of cryptography requires the newest version of Rust to build successfully\n# Unfortunately alpine versions prior to 3.13 doesn't include it\nENV CRYPTOGRAPHY_DONT_BUILD_RUST=1\n\nRUN --mount=type=cache,target=/root/.cache/pip \\\n    export PIP_FIND_LINKS=\"https://wheels.derex.page/alpine-$(cat /etc/alpine-release)\" && \\\n    `# xmlsec is a dependecy of python-saml.` \\\n    `# We need to build it with this flag in order to avoid this error on import:` \\\n    `# xmlsec.Error: (19, 'xmlsec library version mismatch.')` \\\n    export CFLAGS=-DXMLSEC_NO_SIZE_T && \\\n    `# We need to add the --no-verify option due to django-oauth-plus metadata` \\\n    `# violating PEP 440 (https://www.python.org/dev/peps/pep-0440/)` \\\n    pip wheel --wheel-dir=/wheelhouse -r /openedx/requirements/openedx_wheels.txt --no-verify\nRUN --mount=type=cache,target=/root/.cache/pip \\\n    export PIP_FIND_LINKS=\"https://wheels.derex.page/alpine-$(cat /etc/alpine-release)\" && \\\n    pip wheel --wheel-dir=/wheelhouse -r /openedx/requirements/derex.txt -c /openedx/requirements/openedx_constraints.txt\nRUN --mount=type=cache,target=/root/.cache/pip \\\n    export PIP_FIND_LINKS=\"https://wheels.derex.page/alpine-$(cat /etc/alpine-release)\" && \\\n    pip wheel --wheel-dir=/wheelhouse -r /openedx/requirements/overrides.txt\n\nFROM wheels as rmlint\nRUN pip install --no-cache-dir scons && \\\n    apk add --no-cache \\\n    glib-dev \\\n    json-glib\n\nRUN wget -q https://github.com/sahib/rmlint/tarball/29bd07e29edf6879be933dc0e7275a90a154c00e -O - | tar xvzf - && \\\n    cd sahib-rmlint* && \\\n    scons && \\\n    mv rmlint /usr/local/bin/\n\nFROM sourceonly as notranslations\n\nCOPY --from=rmlint /usr/local/bin/rmlint /usr/local/bin/rmlint\n\nRUN --mount=type=cache,target=/root/.cache/pip--mount=type=bind,source=/wheelhouse,from=wheels,target=/wheelhouse \\\n    pip install --no-cache-dir -r /openedx/requirements/openedx_base_fixed.txt --find-links /wheelhouse\n\nRUN --mount=type=cache,target=/root/.cache/pip--mount=type=bind,source=/wheelhouse,from=wheels,target=/wheelhouse \\\n    pip install --no-cache-dir -U -r /openedx/requirements/derex.txt --find-links /wheelhouse -c /openedx/requirements/openedx_constraints.txt\n\nRUN --mount=type=cache,target=/root/.cache/pip--mount=type=bind,source=/wheelhouse,from=wheels,target=/wheelhouse \\\n    pip install --no-cache-dir -U -r /openedx/requirements/overrides.txt --find-links /wheelhouse\n\nCOPY derex_django/ /openedx/derex_django\nRUN --mount=type=cache,target=/root/.cache/pip--mount=type=bind,source=/wheelhouse,from=wheels,target=/wheelhouse \\\n    pip install --no-cache-dir /openedx/derex_django --find-links /wheelhouse\n\nCOPY scripts/* scripts/assets/* /tmp/\n\nRUN cp /tmp/derex* /usr/local/bin/ && chmod +x /usr/local/bin/*\n\nFROM notranslations as translations\n\nRUN --mount=type=cache,target=/root/.cache/pip \\\n    --mount=type=secret,id=transifex,dst=/root/.transifexrc-orig \\\n    pip install --no-cache-dir transifex-client -c /openedx/requirements/openedx_constraints.txt && \\\n    export DJANGO_SETTINGS_MODULE=\"derex_django.settings.build.translations\" && \\\n    derex_update_openedx_translations\n\nFROM notranslations as nostatic\n# This image contains the Open edX source code and all necessary python packages installed.\n# It's still missing the static files, hence the name.\n\nRUN --mount=type=bind,from=translations,target=/translations \\\n    cp -avu /translations/openedx/edx-platform/conf/locale/ conf/\n\nFROM nostatic as nostatic-dev\n# This image has node dependencies installed, and can be used to compile assets\n\nARG NODE_VERSION=v12.13.1\nENV NODE_URL=https://unofficial-builds.nodejs.org/download/release/${NODE_VERSION}/node-${NODE_VERSION}-linux-x64-musl.tar.xz\n\nWORKDIR /openedx/edx-platform\nRUN --mount=type=cache,target=/root/.npm \\\n    --mount=type=cache,target=/usr/local/share/.cache \\\n    --mount=type=cache,target=/var/cache/apk \\\n    --mount=type=cache,target=/root/.cache/pip \\\n    apk add --no-cache g++ make coreutils vim mariadb-client && \\\n    wget ${NODE_URL} -O - | tar --directory / -xJf - && ln -s /node-*/bin/* /usr/local/bin/ && \\\n    npm install --unsafe-perm && npm cache clean --force;\n\nFROM nostatic-dev as dev-nodump\nRUN derex_update_assets && derex_cleanup_assets\n\nFROM dev-nodump as dev\n# This image will be used to compile themes and collect assets\n\n# TODO: fixtures should not be included in the image\nCOPY fixtures /openedx/fixtures/\nRUN --mount=type=tmpfs,target=/mysql/var/lib/mysql \\\n    --mount=type=bind,from=docker.io/mysql:5.7.34,target=/mysql,rw=true \\\n    set -ex; \\\n    cp -a /dev/ /mysql; \\\n    export MYSQL_ALLOW_EMPTY_PASSWORD=1; \\\n    echo -e '[mysqld]\\nport=3399\\ncollation-server = utf8_general_ci\\ncharacter-set-server = utf8' >> /mysql/etc/mysql/conf.d/custom_port.cnf; \\\n    chroot /mysql /usr/local/bin/docker-entrypoint.sh mysqld > /mysql/mysqld.out 2>&1 & \\\n    until grep \"mysqld: ready for connections.\" /mysql/mysqld.out ; do sleep 1; done; \\\n    until chroot /mysql mysqladmin -P 3399 create edxapp ; do sleep 1; done; \\\n    export DJANGO_SETTINGS_MODULE=\"derex_django.settings.build.migration\"; \\\n    export DEREX_OPENEDX_VERSION=${EDX_PLATFORM_RELEASE}; \\\n    SERVICE_VARIANT=\"lms\" python manage.py lms migrate; \\\n    SERVICE_VARIANT=\"cms\" python manage.py cms migrate; \\\n    chroot /mysql mysqldump edxapp | bzip2 -9 - > /openedx/empty_dump.sql.bz2;\n\nENV DJANGO_SETTINGS_MODULE=derex_django.settings.default\nENV SERVICE_VARIANT=lms\nENV DEREX_VERSION=0.3.4.dev2\n"
}