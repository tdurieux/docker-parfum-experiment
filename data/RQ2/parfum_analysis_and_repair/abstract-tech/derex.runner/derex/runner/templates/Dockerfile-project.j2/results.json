{
  "startTime": 1674218000119,
  "endTime": 1674218000645,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 38,
        "columnEnd": 124
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "{% block base %}\nFROM {{ project.base_image }} as base\nENV DJANGO_SETTINGS_MODULE={{ project.settings.value }}\nENV SERVICE_VARIANT=lms\nENV DEREX_PROJECT={{ project.name }}\nENV DEREX_OPENEDX_VERSION={{ project.openedx_version.name }}\nENV DEREX_VERSION=0.3.4.dev2\nENV MYSQL_DB_NAME={{ project.mysql_db_name }}\nENV MYSQL_USER={{ project.mysql_user }}\nENV MYSQL_PASSWORD={{ project.secret(\"mysql\") }}\nENV MONGODB_DB_NAME={{ project.mongodb_db_name }}\nENV MONGODB_USER={{ project.mongodb_user }}\nENV MONGODB_PASSWORD={{ project.secret(\"mongodb\") }}\nENV DEREX_MINIO_SECRET={{ project.secret(\"minio\") }}\n{%- for key, value in project.get_container_env().items() %}\nENV {{ key }}={{ value | tojson }}\n{%- endfor %}\n{% endblock %}\n\n{% block themes %}\nFROM {{ project.base_image }} as themes\n{% if project.themes_dir -%}\n    COPY themes/ /openedx/themes/\n    {% for theme in project.get_themes() -%}\n        {% if theme.is_lms_theme() and theme.has_lms_static() -%}\n            RUN sh -c \"mkdir -p /openedx/staticfiles/{{ theme.root.name }}/; cp -r /openedx/themes/{{ theme.root.name }}/lms/static/* /openedx/staticfiles/{{ theme.root.name }}/\"\n        {% endif -%}\n        {% if theme.is_cms_theme() and theme.has_cms_static() -%}\n            RUN sh -c \"mkdir -p /openedx/staticfiles/studio/{{ theme.root.name }}/; cp -r /openedx/themes/{{ theme.root.name }}/cms/static/* /openedx/staticfiles/studio/{{ theme.root.name }}/\"\n        {% endif -%}\n    {% endfor -%}\n    {% if project.config.get(\"update_assets\", None) -%}\n        RUN sh -c 'set -e; rm -rf /openedx/staticfiles; derex_update_assets;'\n    {% elif project.config.get(\"collect_assets\", None) -%}\n        RUN sh -c 'set -e; derex_collect_assets;'\n    {% endif -%}\n{% endif -%}\n{% endblock %}\n\n{% block requirements %}\nFROM base as requirements\n{% if project.requirements_dir -%}\n    COPY {{ project.requirements_dir.name }} /derex/requirements/\n    {% for requirement_file in project.get_openedx_requirements_files() -%}\n        RUN cd /derex/requirements && pip install --no-cache-dir -r {{ requirement_file }} -c /openedx/requirements/openedx_constraints.txt\n    {% endfor -%}\n{% endif -%}\n{% endblock %}\n\n{% block openedx_customizations %}\nFROM requirements as openedx_customizations\n{% if project.openedx_customizations_dir -%}\n{% for path in project.get_openedx_customizations() -%}\n    COPY openedx_customizations/{{ path }} /openedx/edx-platform/{{ path }}\n{% endfor -%}\n{% endif %}\n{% endblock %}\n\n{% block scripts %}\nFROM base as scripts\n{% if project.scripts_dir -%}\n    COPY {{ project.scripts_dir.name }} /derex/scripts\n{% endif -%}\n{% endblock %}\n\n{% block settings %}\nFROM openedx_customizations as settings\n{% if project.settings_dir -%}\n    COPY {{ project.settings_dir.name }} /openedx/edx-platform/derex_settings\n{% endif -%}\n{% endblock %}\n\n{% block translations %}\nFROM settings as translations\n{% if project.translations_dir -%}\n    COPY {{ project.translations_dir.name }} /derex/translations\n    # TODO: replace the following commands with a call to derex_update_translations script\n    RUN SERVICE_VARIANT=lms python manage.py lms compilemessages\n    RUN SERVICE_VARIANT=cms python manage.py cms compilemessages\n    RUN SERVICE_VARIANT=lms python manage.py lms compilejsi18n\n    RUN SERVICE_VARIANT=cms python manage.py cms compilejsi18n\n    RUN sh -c 'mkdir -p /openedx/staticfiles/js/i18n/; cp -rf /openedx/edx-platform/lms/static/js/i18n/ /openedx/staticfiles/js/i18n/'\n    RUN sh -c 'apk add gzip; gzip -rkf /openedx/staticfiles/js/i18n/*/*.js; apk del gzip'\n    RUN sh -c 'apk add brotli; brotli -f /openedx/staticfiles/js/i18n/*/*.js; apk del brotli'\n{% endif -%}\n{% endblock %}\n\n{% block final %}\nFROM openedx_customizations as final\nCOPY --from={{ project.base_image }} /openedx/empty_dump.sql.bz2 /openedx/\n{% if project.scripts_dir -%}\n    COPY --from=scripts /derex/scripts /derex/scripts\n{% endif -%}\n{% if project.settings_dir -%}\n    COPY --from=settings /openedx/edx-platform/derex_settings /openedx/edx-platform/derex_settings\n{% endif -%}\n{% if project.themes_dir -%}\n    COPY --from=themes /openedx/staticfiles /openedx/staticfiles\n    COPY --from=themes /openedx/edx-platform/common/static /openedx/edx-platform/common/static\n    COPY --from=themes /openedx/themes/ /openedx/themes/\n{% endif -%}\n{% if project.translations_dir -%}\n    COPY --from=translations /derex/translations /derex/translations\n    COPY --from=translations /openedx/staticfiles/js/i18n/ /openedx/staticfiles/js/i18n/\n{% endif -%}\nRUN derex_cleanup_assets\n{% endblock %}\n\n# TODO: read a project dockerfile and have it's contents here\n"
}