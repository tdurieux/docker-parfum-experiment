{
  "startTime": 1674253412876,
  "endTime": 1674253413842,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 15,
        "columnEnd": 51
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 39
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ghost:3.20.1 as base\n\nWORKDIR current/\nRUN npm install && npm cache clean --force;\n\nRUN npm install aws-serverless-express wait-until && npm cache clean --force;\n\nRUN cd /tmp && npm install ghost-storage-adapter-s3 && npm cache clean --force;\n\nRUN mv /tmp/node_modules/ghost-storage-adapter-s3/ core/server/adapters/storage/s3/\n\nFROM python:3.8-alpine\n\nRUN apk add --no-cache gcc musl-dev patch zip\n\nENV SAM_CLI_TELEMETRY 0\n\nWORKDIR /app\n\nRUN pip3 install --no-cache-dir \"aws-sam-cli<1\" awscli\n\nCOPY --from=base /var/lib/ghost/versions/3.20.1/ src\n\nRUN mkdir nodejs && mv src/node_modules nodejs/node_modules\n\n# remove some unneeded files that make the package size exceed lambda limit\nRUN rm -rf nodejs/node_modules/gscan/test/fixtures/ \\\n  nodejs/node_modules/sharp/vendor/lib/ \\\n  nodejs/node_modules/gscan/app/uploads && \\\n\n  find . -type f -name '*.map' -delete && \\\n  find . -type f -name '*.min.js' -delete && \\\n  find | grep test/ | xargs rm -rf && \\\n  find | grep tests/ | xargs rm -rf\n\nRUN mkdir node-modules && mv nodejs node-modules/\nRUN cd node-modules && zip -qr ../node-modules.zip *\n\nCOPY index.js.patch .\nRUN patch src/index.js index.js.patch\nRUN cd src/ && zip -qr ../src.zip *\n\nCOPY scripts scripts\nCOPY samconfig.toml vpc-privatepublic.yaml template.yaml ./\nENTRYPOINT [\"scripts/sam-deploy.sh\"]\n"
}