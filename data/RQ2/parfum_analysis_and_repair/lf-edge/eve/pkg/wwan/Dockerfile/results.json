{
  "startTime": 1674218252862,
  "endTime": 1674218253728,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 45,
        "columnEnd": 56
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 20,
        "columnEnd": 45
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 58,
        "columnEnd": 117
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 46,
        "columnEnd": 71
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM lfedge/eve-alpine:6.7.0 as build\nENV BUILD_PKGS automake autoconf gettext gettext-dev git pkgconfig \\\n               libtool libc-dev linux-headers gcc make glib-dev \\\n               autoconf-archive patch cmake\nENV PKGS alpine-baselayout musl-utils ppp jq glib\nRUN eve-alpine-deploy.sh\n\nWORKDIR /\nRUN git clone https://git.openwrt.org/project/libubox.git\nRUN git clone https://github.com/json-c/json-c.git\nRUN git clone https://gitlab.freedesktop.org/mobile-broadband/libqmi\nRUN git clone https://gitlab.freedesktop.org/mobile-broadband/libmbim\nRUN git clone https://github.com/inotify-tools/inotify-tools\nRUN git clone https://github.com/npat-efault/picocom.git\n\nWORKDIR /json-c\nRUN git checkout ed54353d && ./autogen.sh && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make install\n\nWORKDIR /libubox\nRUN git checkout 7da66430 && cmake . -DBUILD_LUA=OFF -DBUILD_EXAMPLES=OFF && make install\n\nWORKDIR /libmbim\nRUN git checkout 1.24.2\nCOPY 0001-produce-json-output.patch .\nRUN patch -p1 < 0001-produce-json-output.patch\nRUN ./autogen.sh && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr && make && make install\n\nWORKDIR /libqmi\nRUN git checkout 1.26.2 && ./autogen.sh --without-udev && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr --without-udev --enable-mbim-qmux && make && make install\n\nWORKDIR /inotify-tools\nRUN git checkout 3.20.11.0 && ./autogen.sh && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr && make && make install\n\nWORKDIR /picocom\n# Need this patch to build with musl: https://github.com/npat-efault/picocom/commit/1acf1ddabaf3576b4023c4f6f09c5a3e4b086fb8\nRUN git checkout 1acf1ddabaf3576b && make && strip picocom && cp picocom /usr/bin/\n\nRUN strip /usr/bin/*cli /usr/libexec/*proxy /usr/lib/libmbim*.so.* /usr/lib/libqmi*.so.* /usr/lib/libinotifytools*.so.*\n\n# second stage (new-ish Docker feature) for smaller image\nFROM scratch\n\nENTRYPOINT []\nWORKDIR /\nCOPY --from=build /out/ /\nCOPY --from=build /usr/bin/qmicli /usr/bin/mbimcli /usr/bin/inotify* /usr/bin/picocom /bin/\nCOPY --from=build /usr/lib/libmbim*.so.[0-9] /usr/lib/libqmi*.so.[0-9] /usr/lib/\nCOPY --from=build /usr/lib/libinotifytools*.so.[0-9] /usr/lib/\nCOPY --from=build /usr/libexec/*proxy /usr/libexec/\nCOPY usr/ /usr/\nCOPY etc/ /etc/\nCMD [\"/usr/bin/wwan-init.sh\"]\n"
}