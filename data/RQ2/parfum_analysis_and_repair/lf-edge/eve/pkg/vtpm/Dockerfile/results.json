{
  "startTime": 1674252309155,
  "endTime": 1674252310068,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 19,
        "columnEnd": 30
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 47
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#There are four parts:\n# a) building tpm2-tss\n# b) building tpm2-tools\n# c) building the vtpm server from local source\n# d) extracting only required bits from tpm2-tss and tpm2-tools\n#    and the server\n\n#Build TPM2-TSS and TPM2-TOOLS\nFROM lfedge/eve-alpine:6.7.0 as build\nENV BUILD_PKGS linux-headers git gcc g++ autoconf automake libtool doxygen make \\\n               openssl-dev protobuf-dev gnupg curl-dev patch\nENV PKGS alpine-baselayout musl-utils\nRUN eve-alpine-deploy.sh\n\nWORKDIR /\nRUN wget https://ftpmirror.gnu.org/autoconf-archive/autoconf-archive-2019.01.06.tar.xz && \\\n    wget https://ftpmirror.gnu.org/autoconf-archive/autoconf-archive-2019.01.06.tar.xz.sig && \\\n    gpg2 -q --keyserver keyserver.ubuntu.com --recv-keys 99089D72 && \\\n    gpg2 -q --verify autoconf-archive-2019.01.06.tar.xz.sig\n\n#Build autoconf-archive\nRUN tar -xvf autoconf-archive-2019.01.06.tar.xz && rm autoconf-archive-2019.01.06.tar.xz\nWORKDIR /autoconf-archive-2019.01.06\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --datarootdir=/usr/share/ && \\\n    make && make install\n\nWORKDIR /\nRUN git clone --branch=2.3.1 https://github.com/tpm2-software/tpm2-tss\nWORKDIR /tpm2-tss\nRUN ./bootstrap && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --disable-dependency-tracking && \\\n    make && \\\n    make install\n\nWORKDIR /\nRUN git clone --branch=4.0.1-rc0 https://github.com/tpm2-software/tpm2-tools\nWORKDIR /tpm2-tools\nCOPY patch-tpm2-tools.diff .\nRUN patch -p1 < patch-tpm2-tools.diff && \\\n    ./bootstrap && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make\n\nRUN mkdir -p /out/usr/local/lib\nRUN cp lib/.libs/libcommon.so* /out/usr/local/lib/\nRUN cp tools/.libs/tpm2_* /out/usr/bin/\n\n#The vTPM server\nCOPY ./ /vtpm_server\nWORKDIR /vtpm_server\nRUN make && cp vtpm_server /out/usr/bin/\n\n# install dependencies\nWORKDIR /usr/lib\nRUN cp libstdc++.so.6 libgcc_s.so.1 libprotobuf.so.24.0.0 /out/usr/lib/\nRUN ln -s libprotobuf.so.24.0.0 /out/usr/lib/libprotobuf.so.24\nWORKDIR /usr/local/lib\nRUN cp libtss2-tctildr.so.0 libtss2-rc.so.0 libtss2-mu.so.0 libtss2-esys.so.0 \\\n       libtss2-sys.so.0.0.0 libtss2-sys.so.0 libtss2-tcti-device.so.0 /out/usr/local/lib/\n\n#Pull a selected set of artifacts into the final stage.\nFROM scratch\n\nCOPY --from=build /out/ /\nCOPY init.sh /usr/bin/\nENTRYPOINT []\nWORKDIR /\nCMD [\"/usr/bin/init.sh\"]\n"
}