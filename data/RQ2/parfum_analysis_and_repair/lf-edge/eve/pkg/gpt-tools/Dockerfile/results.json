{
  "startTime": 1674251391093,
  "endTime": 1674251391967,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 51
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG EVE_BUILDER_IMAGE=lfedge/eve-alpine:6.7.0\n# hadolint ignore=DL3006\nFROM ${EVE_BUILDER_IMAGE} as build\nENV BUILD_PKGS gcc make file patch libc-dev util-linux-dev linux-headers openssl-dev g++ tar\nRUN eve-alpine-deploy.sh\n\nENV POPT_VERSION 1.16\nENV GPTFDISK_VERSION 1.0.3\nENV VBOOT_REPO https://chromium.googlesource.com/chromiumos/platform/vboot_reference\nENV VBOOT_COMMIT e0b3841863281a3fc3b188bfbab55d401fabdc73\n\n#\n# Step 1: Install SGDISK\n#\n\nWORKDIR /\nRUN mkdir /popt\nCOPY popt-${POPT_VERSION}.tar.gz /popt\n\nWORKDIR /popt\nRUN tar xvzf popt-${POPT_VERSION}.tar.gz && rm popt-${POPT_VERSION}.tar.gz\nWORKDIR /popt/popt-${POPT_VERSION}\nCOPY patches/popt* /popt\nRUN for patch in /popt/*patch ; do patch -p1 < $patch ; done\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make && make install\n\n\nWORKDIR /\nRUN mkdir -p /sgdisk/patches\nCOPY gptfdisk-${GPTFDISK_VERSION}.tar.gz /sgdisk\nCOPY patches/* /sgdisk/patches/\n\nWORKDIR /sgdisk\nRUN tar xvzf gptfdisk-${GPTFDISK_VERSION}.tar.gz && rm gptfdisk-${GPTFDISK_VERSION}.tar.gz\n\nWORKDIR /sgdisk/gptfdisk-${GPTFDISK_VERSION}\nRUN set -e && for patch in ../patches/sgdisk-*.patch; do \\\n        echo \"Applying $patch\"; \\\n        patch -p1 < \"$patch\"; \\\n    done\nRUN make LDFLAGS=-static sgdisk\nRUN strip sgdisk\nRUN cp sgdisk /out/sgdisk\n\n\n#\n# Step 2: Fetch and compile CGPT\n#\n\nWORKDIR /\nCOPY vboot_reference-${VBOOT_COMMIT}.tar.gz /\nRUN tar xvzf vboot_reference-${VBOOT_COMMIT}.tar.gz && rm vboot_reference-${VBOOT_COMMIT}.tar.gz\n\nWORKDIR /vboot_reference\nRUN [ -d host/arch/riscv64 ] || cp -r host/arch/arm host/arch/riscv64\nRUN make cgpt LDFLAGS=-static CFLAGS=-Wno-error=address-of-packed-member\nRUN cp build/cgpt/cgpt /out/cgpt\n\nFROM scratch\nCOPY --from=build /out/sgdisk /usr/bin/sgdisk\nCOPY --from=build /out/cgpt /usr/bin/cgpt\nCOPY files/zboot /usr/bin/zboot\n"
}