{
  "startTime": 1674249726095,
  "endTime": 1674249727361,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 5,
        "columnEnd": 81
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 17
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 27,
        "columnEnd": 57
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 27,
        "columnEnd": 52
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 56,
        "columnEnd": 126
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 5,
        "columnEnd": 39
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 5,
        "columnEnd": 39
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.9.7-slim-bullseye as base\n# Install node\nENV NODE_VERSION=16.16.0\nENV PATH=\"/root/.nvm/versions/node/v${NODE_VERSION}/bin/:${PATH}\"\nRUN apt update \\\n  && apt install --no-install-recommends -y curl git libgbm-dev \\\n  && curl -f -o- https://raw.githubusercontent.com/creationix/nvm/v0.34.0/install.sh | bash \\\n  && apt clean && rm -rf /var/lib/apt/lists/*;\nENV NVM_DIR=/root/.nvm\nRUN . \"$NVM_DIR/nvm.sh\" && nvm install ${NODE_VERSION} \\\n  && . \"$NVM_DIR/nvm.sh\" && nvm use v${NODE_VERSION} \\\n  && . \"$NVM_DIR/nvm.sh\" && nvm alias default v${NODE_VERSION}\n\n# Install yarn\nRUN npm i -g yarn && npm cache clean --force;\n\n# Setup Python and Black for the formatters\nRUN python -m ensurepip && pip install --no-cache-dir --upgrade pip && pip install --no-cache-dir --no-cache setuptools wheel black==21.7b0 guesslang==2.2.1\n\nRUN mkdir /app\nCOPY package.json jest.config.js yarn.lock tsconfig.json app/\n\nCOPY src/ /app/src\nCOPY tests/ /app/tests\nWORKDIR /app\n\nRUN rm -rf node_modules && yarn install --frozen-lockfile && yarn cache clean;\n\nFROM base as test\nCMD yarn jest\n\nFROM base as build\nRUN yarn build\nEXPOSE 3000\nCMD [\"node\", \"./build/main/src/index.js\"]\n"
}