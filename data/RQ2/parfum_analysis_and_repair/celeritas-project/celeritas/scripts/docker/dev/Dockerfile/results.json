{
  "startTime": 1674217196759,
  "endTime": 1674217197513,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 80
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 22
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG CONFIG\nFROM base-${CONFIG} as builder\nLABEL maintainer=\"Seth Johnson <johnsonsr@ornl.gov>\" \\\n      description=\"Celeritas prerequisites built with Spack\"\n\n###############################################################################\n# From spack dockerfile:\n# https://hub.docker.com/r/spack/ubuntu-bionic/dockerfile\n# BUT replacing \"COPY\" commands with curl (and hard-wiring version)\n###############################################################################\n\n# General environment for docker\nENV DEBIAN_FRONTEND=noninteractive    \\\n    SPACK_ROOT=/opt/spack             \\\n    DEBIAN_FRONTEND=noninteractive    \\\n    CURRENTLY_BUILDING_DOCKER_IMAGE=1 \\\n    container=docker\n\nRUN apt-get -yqq update \\\n && apt-get -yqq install --no-install-recommends \\\n        build-essential \\\n        ca-certificates \\\n        curl \\\n        file \\\n        g++ \\\n        gcc \\\n        gfortran \\\n        git \\\n        gnupg2 \\\n        iproute2 \\\n        lmod \\\n        locales \\\n        lua-posix \\\n        make \\\n        python3 \\\n        python3-pip \\\n        python3-setuptools \\\n        tcl \\\n        unzip \\\n        vim \\\n && locale-gen en_US.UTF-8 \\\n && pip3 install --no-cache-dir boto3 \\\n && rm -rf /var/lib/apt/lists/*\n\n# XXX replaced COPY commands with this\nARG SPACK_VERSION\nRUN mkdir -p $SPACK_ROOT \\\n && curl -f -s -L https://api.github.com/repos/spack/spack/tarball/${SPACK_VERSION} \\\n | tar xzC $SPACK_ROOT --strip 1\n\nRUN ln -s $SPACK_ROOT/share/spack/docker/entrypoint.bash \\\n          /usr/local/bin/docker-shell \\\n && ln -s $SPACK_ROOT/share/spack/docker/entrypoint.bash \\\n          /usr/local/bin/interactive-shell \\\n && ln -s $SPACK_ROOT/share/spack/docker/entrypoint.bash \\\n          /usr/local/bin/spack-env\n\n# Add LANG default to en_US.UTF-8\nENV LANGUAGE en_US.UTF-8\nENV LANG en_US.UTF-8\nENV LC_ALL en_US.UTF-8\n\nRUN mkdir -p /root/.spack \\\n && cp $SPACK_ROOT/share/spack/docker/modules.yaml \\\n        /root/.spack/modules.yaml \\\n && rm -rf /root/*.* /run/nologin $SPACK_ROOT/.git\n\nWORKDIR /root\nSHELL [\"docker-shell\"]\n\nENTRYPOINT [\"/bin/bash\", \"/opt/spack/share/spack/docker/entrypoint.bash\"]\nCMD [\"interactive-shell\"]\n\n# Bootstrap spack\nRUN spack spec zlib\n\n###############################################################################\n# Install\n###############################################################################\n\nARG CONFIG\nCOPY ${CONFIG}.yaml /opt/spack-environment/spack.yaml\nRUN cd /opt/spack-environment && spack env activate . \\\n    && spack install --fail-fast\n\n# Modifications to the environment that are necessary to run\nRUN cd /opt/spack-environment && \\\n    spack env activate --sh -d . >> /etc/profile.d/celeritas_spack_env.sh\n\n# TODO: revert to default entrypoint so that commands\n# (e.g. `docker run celeritas/dev:prereq bash`) work correctly\nENTRYPOINT [\"/bin/bash\", \"--rcfile\", \"/etc/profile\", \"-l\"]\n"
}