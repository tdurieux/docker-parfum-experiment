{
  "startTime": 1674250925917,
  "endTime": 1674250927426,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 100
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 74
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 100
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 98
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 74
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 100
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 98
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 74
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 124
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 98
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 98
      }
    }
  ],
  "repairedDockerfile": "# build:\n#   $ cd CIMApplication; mvn -DskipTests install; docker build --file OpenLiberty.Dockerfile --tag derrickoswald/cimapplication .\n# run:\n#   $ docker run --rm --publish 9080:9080 --net spark_default --link=\"spark_master:sandbox\" derrickoswald/cimapplication start-openliberty sandbox beach\n# access:\n#   http://localhost:8080/cimweb/cim/ping\n#   http://localhost:8080/cimweb/cim/list\n\nFROM derrickoswald/spark-docker:latest\nLABEL maintainer = \"Derrick.Oswald@9code.ch\"\n\n# Install Cassandra\nRUN echo \"deb http://www.apache.org/dist/cassandra/debian 311x main\" | tee -a /etc/apt/sources.list.d/cassandra.sources.list\nRUN curl -f https://downloads.apache.org/cassandra/KEYS | apt-key add -\nRUN DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install --yes --quiet apt-transport-https ca-certificates && rm -rf /var/lib/apt/lists/*;\nRUN apt-get update \\\n  && apt-key adv --keyserver pool.sks-keyservers.net --recv-key A278B781FE4B2BDA\nRUN DEBIAN_FRONTEND=noninteractive apt-get install --yes --quiet --no-install-recommends cassandra && rm -rf /var/lib/apt/lists/*;\nRUN apt-get clean\nRUN  sed --in-place 's/enable_user_defined_functions: false/enable_user_defined_functions: true/g' /etc/cassandra/cassandra.yaml \\\n  && sed --in-place 's/enable_scripted_user_defined_functions: false/enable_scripted_user_defined_functions: true/g' /etc/cassandra/cassandra.yaml \\\n  && sed --in-place 's/read_request_timeout_in_ms: 5000/read_request_timeout_in_ms: 100000/g' /etc/cassandra/cassandra.yaml \\\n  && sed --in-place 's/range_request_timeout_in_ms: 10000/range_request_timeout_in_ms: 100000/g' /etc/cassandra/cassandra.yaml \\\n  && sed --in-place 's/write_request_timeout_in_ms: 2000/write_request_timeout_in_ms: 100000/g' /etc/cassandra/cassandra.yaml \\\n  && sed --in-place 's/INFO/WARN/g' /etc/cassandra/logback.xml \\\n  && sed --in-place 's/level=\"DEBUG\"/level=\"WARN\"/g' /etc/cassandra/logback.xml \\\n  && sed --in-place 's/level=\"ERROR\"/level=\"WARN\"/g' /etc/cassandra/logback.xml\n\n# Cassandra ports\n# Cassandra storage_port\nEXPOSE 7000\n# Cassandra ssl_storage_port\nEXPOSE 7001\n# Cassandra JMX monitoring port\n# EXPOSE 7199\n# Cassandra native_transport_port\nEXPOSE 9042\n# Cassandra rpc_port\nEXPOSE 9160\n\nENV PATH /usr/local/openliberty/bin:$PATH\nRUN mkdir -p /usr/local/openliberty\n\nWORKDIR /usr/local/openliberty\n\nRUN DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install --yes --quiet execstack && rm -rf /var/lib/apt/lists/*;\nRUN set -x \\\n\t&& export OPENLIBERTY_VERSION=20.0.0.3 \\\n\t&& export OPENLIBERTY_RELEASE=2020-03-05_1433 \\\n\t&& curl --fail --show-error --location https://public.dhe.ibm.com/ibmdl/export/pub/software/openliberty/runtime/release/${OPENLIBERTY_RELEASE}/openliberty-javaee8-${OPENLIBERTY_VERSION}.zip --output openliberty.zip \\\n\t&& unzip openliberty.zip \\\n\t&& mv wlp/* /usr/local/openliberty \\\n\t&& rm --recursive --force wlp \\\n\t&& rm openliberty.zip\n\n# Default web UI\nEXPOSE 9080\nEXPOSE 9443\n\n# layers added for CIMApplication (do this last to speed up Docker build)\n\n# copy start script\nCOPY CIMEar/start-openliberty /opt/util/bin/start-openliberty\n\n# set up CIMApplication\nRUN bin/server create cimapplication\n# copy server configuration doesn't work\n# COPY CIMEar/server.xml /usr/local/openliberty/usr/servers/cimapplication/server.xml\n# so we edit the file:\nRUN sed --in-place \"s|<server description=\\\"new server\\\">|<server description=\\\"cimapplication\\\">\\n\\n    <variable name=\\\"spark_host\\\" value=\\\"\\${NAMENODE}\\\" defaultValue=\\\"sandbox\\\" />\\n    <variable name=\\\"cassandra_host\\\" value=\\\"\\${CASSANDRANODE}\\\" defaultValue=\\\"beach\\\" />|g\" /usr/local/openliberty/usr/servers/cimapplication/server.xml\nRUN sed --in-place \"s|<httpEndpoint|<httpEndpoint host=\\\"*\\\"|g\" /usr/local/openliberty/usr/servers/cimapplication/server.xml\nRUN sed --in-place \"s|<\\!-- <user name=\\\"yourUserName\\\" password=\\\"\\\" />  -->|<user name=\\\"admin\\\" password=\\\"Green1antern\\\" />|g\" /usr/local/openliberty/usr/servers/cimapplication/server.xml\nRUN sed --in-place \"s|</server>|    <connectionFactory jndiName=\\\"eis/SparkConnectionFactory\\\">\\n        <interface-name>ch.ninecode.cim.connector.CIMConnectionFactory</interface-name>\\n        <resource-adapter>#CIMConnector</resource-adapter>\\n        <properties.CIMApplication.CIMConnector ConnectionURL=\\\"spark://\\${spark_host}:7077\\\"/>\\n        <properties.CIMApplication.CIMConnector ServerName=\\\"\\${cassandra_host}\\\"/>\\n    </connectionFactory>\\n\\n</server>|g\" /usr/local/openliberty/usr/servers/cimapplication/server.xml\nRUN sed --in-place \"s|</server>|    <cors\\n        domain=\\\"/cimweb\\\"\\n        allowedOrigins=\\\"*\\\"\\n        allowedMethods=\\\"GET, POST, HEAD, OPTIONS, PUT, DELETE\\\"\\n        allowCredentials=\\\"true\\\"/>\\n\\n</server>|g\" /usr/local/openliberty/usr/servers/cimapplication/server.xml\nRUN sed --in-place \"s|</server>|    <transaction totalTranLifetimeTimeout=\\\"10m\\\"/>\\n\\n</server>|g\" /usr/local/openliberty/usr/servers/cimapplication/server.xml\n\n# copy the .ear to dropins to install it\nADD CIMEar/target/CIMApplication.ear /usr/local/openliberty/usr/servers/cimapplication/dropins/\n"
}