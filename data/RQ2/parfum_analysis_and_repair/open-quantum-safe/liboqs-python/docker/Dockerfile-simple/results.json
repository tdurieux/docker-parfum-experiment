{
  "startTime": 1674253181302,
  "endTime": 1674253182157,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 19
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Multi-stage build: First the full builder image:\n\n# liboqs build type variant; maximum portability of image; no openssl dependency:\nARG LIBOQS_BUILD_DEFINES=\"-DOQS_DIST_BUILD=ON -DBUILD_SHARED_LIBS=ON -DOQS_USE_OPENSSL=OFF\"\n\nFROM alpine:3.11 as intermediate\n# Take in all global args\nARG LIBOQS_BUILD_DEFINES\n\nLABEL version=\"2\"\n\nENV DEBIAN_FRONTEND noninteractive\n\nRUN apk update && apk upgrade\n\n# Get all software packages required for builing all components:\nRUN apk add --no-cache build-base linux-headers cmake ninja git\n\n# get all sources\nWORKDIR /opt\nRUN git clone --depth 1 --branch main https://github.com/open-quantum-safe/liboqs && \\\n    git clone --depth 1 --branch main https://github.com/open-quantum-safe/liboqs-python.git\n\n# build liboqs\nWORKDIR /opt/liboqs\nRUN mkdir build && cd build && cmake -G\"Ninja\" .. ${LIBOQS_BUILD_DEFINES} && ninja install\n\n## second stage: Only create minimal image without build tooling and intermediate build results generated above:\nFROM alpine:3.11\n\nRUN apk update && apk upgrade\n\n# Get all software packages required for running all components:\nRUN apk add --no-cache python3\n\n# Only retain the binary contents in the final image\nCOPY --from=intermediate /usr/local /usr/local\nCOPY --from=intermediate /opt/liboqs-python /opt/liboqs-python\n\nENV PYTHONPATH=/opt/liboqs-python\n\nWORKDIR /opt/liboqs-python\n\n# Enable a normal user\nRUN addgroup -g 1000 -S oqs && adduser --uid 1000 -S oqs -G oqs\n\nUSER oqs\n\n\n"
}