{
  "startTime": 1674219973579,
  "endTime": 1674219974625,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 7,
        "columnEnd": 18
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 7,
        "columnEnd": 25
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 7,
        "columnEnd": 39
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:lts-alpine\nARG REPO=gitee\nARG REPO_URL=$REPO.com\nARG JD_SHELL=jd_shell\nARG JD_SHELL_BRANCH=master\nARG JD_SHELL_HOST=jd_shell_$REPO\nARG JD_SCRIPTS=jd_scripts\nARG JD_SCRIPTS_BRANCH=master\nARG JD_SCRIPTS_HOST=jd_scripts_$REPO\nENV PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin \\\n    LANG=zh_CN.UTF-8 \\\n    SHELL=/bin/bash \\\n    PS1='\\u@\\h:\\w $ ' \\\n    JD_DIR=/jd \\\n    ENABLE_TG_BOT=false \\\n    ENABLE_HANGUP=false \\\n    ENABLE_RESET_REPO_URL=true \\\n    JD_SHELL_URL=git@$JD_SHELL_HOST:highdimen/$JD_SHELL.git \\\n    JD_SCRIPTS_URL=git@$JD_SCRIPTS_HOST:highdimen/$JD_SCRIPTS.git\nWORKDIR $JD_DIR\nRUN sed -i 's/dl-cdn.alpinelinux.org/mirrors.aliyun.com/g' /etc/apk/repositories \\\n    && apk update -f \\\n    && apk upgrade \\\n    && apk --no-cache add -f bash \\\n                             coreutils \\\n                             git \\\n                             wget \\\n                             curl \\\n                             nano \\\n                             tzdata \\\n                             perl \\\n                             openssh-client \\\n                             python3 \\\n                             zlib-dev \\\n                             gcc \\\n                             jpeg-dev \\\n                             python3-dev \\\n                             musl-dev \\\n    && rm -rf /var/cache/apk/* \\\n    && ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime \\\n    && echo \"Asia/Shanghai\" > /etc/timezone \\\n    && mkdir -p /root/.ssh \\\n    && echo -e $JD_SHELL_KEY > /root/.ssh/$JD_SHELL \\\n    && echo -e $JD_SCRIPTS_KEY > /root/.ssh/$JD_SCRIPTS \\\n    && chmod 600 /root/.ssh/$JD_SHELL /root/.ssh/$JD_SCRIPTS \\\n    && echo -e \"Host $JD_SHELL_HOST\\n\\tHostname $REPO_URL\\n\\tIdentityFile=/root/.ssh/$JD_SHELL\\n\\nHost $JD_SCRIPTS_HOST\\n\\tHostname $REPO_URL\\n\\tIdentityFile=/root/.ssh/$JD_SCRIPTS\" > /root/.ssh/config \\\n    && echo -e \"\\n\\nHost *\\n  StrictHostKeyChecking no\\n\" >> /etc/ssh/ssh_config \\\n    && chmod 644 /root/.ssh/config \\\n    && ssh-keyscan $REPO_URL > /root/.ssh/known_hosts \\\n    && git clone -b $JD_SHELL_BRANCH $JD_SHELL_URL $JD_DIR \\\n    && git clone -b $JD_SCRIPTS_BRANCH $JD_SCRIPTS_URL $JD_DIR/scripts \\\n    && cd $JD_DIR/scripts \\\n    && npm install \\\n    && npm install -g pm2 \\\n    && ln -sf $JD_DIR/jd.sh /usr/local/bin/jd \\\n    && cp -f $JD_DIR/docker/docker-entrypoint.sh /usr/local/bin/docker-entrypoint.sh \\\n    && chmod 777 /usr/local/bin/docker-entrypoint.sh \\\n    && chmod 777 $JD_DIR/*.sh \\\n    && rm -rf /root/.npm \\\n    && ln -sf /usr/bin/python3 /usr/bin/python \\\n    && cd $JD_DIR/bot \\\n    && pip3 install --no-cache-dir -r requirements.txt && npm cache clean --force;\nENTRYPOINT bash $JD_DIR/docker/docker-bot/docker-entrypoint.sh"
}