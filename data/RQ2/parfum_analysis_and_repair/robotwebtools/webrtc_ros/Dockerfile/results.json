{
  "startTime": 1674252310824,
  "endTime": 1674252311868,
  "originalSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 177
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 80
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 177
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 80
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 177
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 80
      }
    }
  ],
  "repairedDockerfile": "FROM ros:noetic-perception\n\n\n# ROS dependencies\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        ros-noetic-cv-bridge \\\n    && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/*\n\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        git\\\n        curl && rm -rf /var/lib/apt/lists/*;\n\n\nRUN apt-get install -y --no-install-recommends python2 gmodule-2.0 libgtk-3-dev libglib2.0-dev pulseaudio libasound2-dev libpulse-dev ros-noetic-image-transport ninja-build stow && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get install -y --no-install-recommends libjpeg-turbo8 libjpeg-turbo8-dev && rm -rf /var/lib/apt/lists/*;\n\nRUN update-alternatives --install /usr/bin/python python /usr/bin/python2 1\n\nWORKDIR /home/3rdparty/jsoncpp/\nRUN git clone https://github.com/open-source-parsers/jsoncpp.git . && \\\n    mkdir build && \\\n    cd build && \\\n    cmake -DCMAKE_BUILD_TYPE=Release -DBUILD_STATIC_LIBS=ON -DBUILD_SHARED_LIBS=OFF -DARCHIVE_INSTALL_DIR=. -G \"Unix Makefiles\" .. &&  \\\n    make && \\\n    make install\n\nENV LD_LIBRARY_PATH /usr/local/lib/:$LD_LIBRARY_PATH\n\nWORKDIR /home/webrtc_ws\nCOPY . /home/webrtc_ws/src/\n\nRUN git clone https://github.com/GT-RAIL/async_web_server_cpp.git /home/webrtc_ws/src/async_web_server_cpp/\n\nRUN /ros_entrypoint.sh catkin_make_isolated --install --install-space \"/usr/local/webrtc/\" \\\n    && sed -i '$isource \"/usr/local/webrtc/setup.bash\"' /ros_entrypoint.sh \\\n    && rm -rf /home/webrtc_ws/\n\nENTRYPOINT [\"/ros_entrypoint.sh\"]\n"
}