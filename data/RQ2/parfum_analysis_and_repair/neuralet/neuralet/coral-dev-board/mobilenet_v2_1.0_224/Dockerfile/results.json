{
  "startTime": 1674255520688,
  "endTime": 1674255521706,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 22,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 22,
        "columnEnd": 79
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 22,
        "columnEnd": 51
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 22,
        "columnEnd": 79
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 35
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 59
      }
    }
  ],
  "repairedDockerfile": "# docker can be installed on the dev board following these instructions:\n# https://docs.docker.com/install/linux/docker-ce/debian/#install-using-the-repository , step 4: arm64\n# 1) build: docker build -t \"neuralet/coral-dev-board:mobilenet_v2_1.0_224\" .\n# 2) run: docker run -it --privileged --net=host -v /PATH_TO_CLONED_REPO_ROOT/:/repo neuralet/coral-dev-board:mobilenet_v2_1.0_224\n\nFROM arm64v8/debian:buster\n\nVOLUME  /repo\n\nRUN apt-get update && apt-get install --no-install-recommends -y wget gnupg \\\n    && rm /etc/apt/sources.list && rm -rf /var/lib/apt/lists \\\n    && wget -qO - https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add - && rm -rf /var/lib/apt/lists/*;\n\nCOPY data/multistrap* /etc/apt/sources.list.d/\n\nRUN apt-get update && apt-get install --no-install-recommends -y python3-pip pkg-config libedgetpu1-std && rm -rf /var/lib/apt/lists/*;\n# Also if you needed tensorflow: python-dev python3-dev libhdf5-dev python3-h5py python3-scipy\n# Also python3-opencv may be needed, but it brings lots of dependencies (even x11-common !)\n\nRUN python3 -m pip install --upgrade pip==19.3.1 setuptools==41.0.0 && python3 -m pip install https://dl.google.com/coral/python/tflite_runtime-2.1.0.post1-cp37-cp37m-linux_aarch64.whl \n#if you needed tensorflow: grpcio==1.26.0  keras==2.2.4 protobuf https://github.com/lhelontra/tensorflow-on-arm/releases/download/v2.0.0/tensorflow-2.0.0-cp37-none-linux_aarch64.whl\n\nRUN apt-get install --no-install-recommends -y python3-wget && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /repo/coral-dev-board/mobilenet_v2_1.0_224\n# Also if you use opencv: LD_PRELOAD=\"/usr/lib/aarch64-linux-gnu/libgomp.so.1.0.0\"\n\nENTRYPOINT [\"python3\", \"src/server-example.py\"]\n"
}