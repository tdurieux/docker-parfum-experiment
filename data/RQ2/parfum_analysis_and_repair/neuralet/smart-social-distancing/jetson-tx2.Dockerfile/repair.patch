diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/neuralet/smart-social-distancing/jetson-tx2.Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/neuralet/smart-social-distancing/jetson-tx2.Dockerfile/repaired.Dockerfile
index 4563b23..fc209d8 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/neuralet/smart-social-distancing/jetson-tx2.Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/neuralet/smart-social-distancing/jetson-tx2.Dockerfile/repaired.Dockerfile
@@ -10,7 +10,7 @@ RUN apt-get update && apt-get install -y --no-install-recommends \
         build-essential \
         cmake \
         curl \
-        git 
+        git && rm -rf /var/lib/apt/lists/*;
 RUN apt-get update && apt-get install -y --no-install-recommends \
 	ca-certificates \ 
 	gstreamer1.0-plugins-bad \
@@ -18,7 +18,7 @@ RUN apt-get update && apt-get install -y --no-install-recommends \
         gstreamer1.0-plugins-ugly \
         gstreamer1.0-vaapi \
         libavcodec-dev \
-        libavformat-dev 
+        libavformat-dev && rm -rf /var/lib/apt/lists/*;
 RUN apt-get update && apt-get install -y --no-install-recommends libgstreamer-plugins-base1.0-dev \
         libgstreamer1.0-dev \
         libsm6 \
@@ -30,7 +30,7 @@ RUN apt-get update && apt-get install -y --no-install-recommends libgstreamer-pl
         python3-numpy \
     && rm -rf /var/lib/apt/lists/* \
     && cd /tmp/ \
-    && curl -L https://github.com/opencv/opencv/archive/${OPENCV_VERSION}.tar.gz -o opencv.tar.gz \
+    && curl -f -L https://github.com/opencv/opencv/archive/${OPENCV_VERSION}.tar.gz -o opencv.tar.gz \
     && tar zxvf opencv.tar.gz && rm opencv.tar.gz \
     && cd /tmp/opencv-${OPENCV_VERSION} \
     && mkdir build \
@@ -75,23 +75,23 @@ RUN apt-get update && apt-get install -y --no-install-recommends \
         python3-scipy \
         python3-wget \
         supervisor \
-    && rm -rf /var/lib/apt/lists/* 
+    && rm -rf /var/lib/apt/lists/*
 
 RUN ln -sf $(which gcc) /usr/local/bin/gcc-aarch64-linux-gnu \
     && ln -sf $(which g++) /usr/local/bin/g++-aarch64-linux-gnu \
-    && python3 -m pip install --upgrade pip setuptools==41.0.0 wheel && pip install -r /requirements.txt \
+    && python3 -m pip install --upgrade pip setuptools==41.0.0 wheel && pip install --no-cache-dir -r /requirements.txt \
     && apt-get purge -y \
         pkg-config \
     && apt-get autoremove -y
 
-RUN pip3 install openpifpaf==0.12a4 
+RUN pip3 install --no-cache-dir openpifpaf==0.12a4
 
-RUN apt update && apt-get install -y pkg-config libhdf5-100 libhdf5-serial-dev hdf5-tools libhdf5-dev zlib1g-dev zip libjpeg8-dev liblapack-dev libblas-dev gfortran \
-    && pip3 install -U pip testresources setuptools==49.6.0 \
-    && pip3 install -U numpy==1.16.1 future==0.18.2 mock==3.0.5 h5py==2.10.0 keras_preprocessing==1.1.1 keras_applications==1.0.8 gast==0.2.2 futures protobuf pybind11 \
-    && pip3 install --pre --extra-index-url https://developer.download.nvidia.com/compute/redist/jp/v44 tensorflow==2.1.0
+RUN apt update && apt-get install --no-install-recommends -y pkg-config libhdf5-100 libhdf5-serial-dev hdf5-tools libhdf5-dev zlib1g-dev zip libjpeg8-dev liblapack-dev libblas-dev gfortran \
+    && pip3 install --no-cache-dir -U pip testresources setuptools==49.6.0 \
+    && pip3 install --no-cache-dir -U numpy==1.16.1 future==0.18.2 mock==3.0.5 h5py==2.10.0 keras_preprocessing==1.1.1 keras_applications==1.0.8 gast==0.2.2 futures protobuf pybind11 \
+    && pip3 install --no-cache-dir --pre --extra-index-url https://developer.download.nvidia.com/compute/redist/jp/v44 tensorflow==2.1.0 && rm -rf /var/lib/apt/lists/*;
 
-RUN apt-get update && apt install -y git autoconf automake libtool curl make g++ unzip supervisor
+RUN apt-get update && apt install --no-install-recommends -y git autoconf automake libtool curl make g++ unzip supervisor && rm -rf /var/lib/apt/lists/*;
 
 
 RUN git clone https://github.com/protocolbuffers/protobuf.git \
@@ -99,17 +99,17 @@ RUN git clone https://github.com/protocolbuffers/protobuf.git \
 && git submodule update --init --recursive \
 && chmod +x autogen.sh \
 && ./autogen.sh \
-&& ./configure \
+&& ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
 && make -j$(nproc) \
 && make install \
-&& ldconfig 
+&& ldconfig
 
-RUN apt update && apt-get install -y libssl-dev && wget https://github.com/Kitware/CMake/releases/download/v3.19.1/cmake-3.19.1.tar.gz \
+RUN apt update && apt-get install --no-install-recommends -y libssl-dev && wget https://github.com/Kitware/CMake/releases/download/v3.19.1/cmake-3.19.1.tar.gz \
     && tar -xf cmake-3.19.1.tar.gz \
     && cd cmake-3.19.1 \
     && ./bootstrap \
     && make -j$(nproc) \
-    && make install
+    && make install && rm cmake-3.19.1.tar.gz && rm -rf /var/lib/apt/lists/*;
 
 
 RUN git clone https://github.com/onnx/onnx-tensorrt.git \
@@ -121,7 +121,7 @@ RUN git clone https://github.com/onnx/onnx-tensorrt.git \
 && cmake .. -DTENSORRT_ROOT=/usr/src/tensorrt/ \
 && make -j$(nproc) \
 && make install && cd ../.. \
-&& rm -rf onnx-tensorrt 
+&& rm -rf onnx-tensorrt
 
 
 ENV DEV_ALLOW_ALL_ORIGINS=true