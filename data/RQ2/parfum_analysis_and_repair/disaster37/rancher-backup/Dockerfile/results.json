{
  "startTime": 1674218466117,
  "endTime": 1674218466930,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 88
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 152
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 110
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 49
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.5\nMAINTAINER Sebastien LANGOUREAUX <linuxworkgroup@hotmail.com>\n\n# Application settings\nENV CONFD_PREFIX_KEY=\"/backup\" \\\n    CONFD_BACKEND=\"env\" \\\n    CONFD_INTERVAL=\"60\" \\\n    CONFD_NODES=\"\" \\\n    S6_BEHAVIOUR_IF_STAGE2_FAILS=2 \\\n    APP_HOME=\"/opt/backup\" \\\n    APP_DATA=\"/backup\" \\\n    USER=backup \\\n    LANG=C.UTF-8 \\\n    CONTAINER_NAME=\"rancher-backup\" \\\n    CONTAINER_AUHTOR=\"Sebastien LANGOUREAUX <linuxworkgroup@hotmail.com>\" \\\n    CONTAINER_SUPPORT=\"https://github.com/disaster37/rancher-backup/issues\" \\\n    APP_WEB=\"https://github.com/disaster37/rancher-backup\"\n\n\n# Add libs & tools\nCOPY backup/requirements.txt /${APP_HOME}/\nRUN apk update && \\\n    apk add python2 py-pip bash tar curl docker duplicity lftp ncftp py-paramiko py-gobject py-boto py-lockfile ca-certificates librsync py-cryptography py-cffi && \\\n    pip install --no-cache-dir --upgrade pip && \\\n    pip install --no-cache-dir -r \"${APP_HOME}/requirements.txt\" && \\\n    rm /var/cache/apk/*\n\n\n# Install go-cron\nRUN curl -f -sL https://github.com/michaloo/go-cron/releases/download/v0.0.2/go-cron.tar.gz \\\n    | tar -x -C /usr/local/bin\n\n# Install confd\nENV CONFD_VERSION=\"0.14.0\" \\\n    CONFD_HOME=\"/opt/confd\"\nRUN mkdir -p \"${CONFD_HOME}/etc/conf.d\" \"${CONFD_HOME}/etc/templates\" \"${CONFD_HOME}/log\" \"${CONFD_HOME}/bin\" && \\\n    curl -f -Lo \"${CONFD_HOME}/bin/confd\" \"https://github.com/kelseyhightower/confd/releases/download/v${CONFD_VERSION}/confd-${CONFD_VERSION}-linux-amd64\" && \\\n    chmod +x \"${CONFD_HOME}/bin/confd\"\n\n# Install s6-overlay\nRUN curl -f -sL https://github.com/just-containers/s6-overlay/releases/download/v1.19.1.1/s6-overlay-amd64.tar.gz \\\n    | tar -zx -C /\n\n\n# Copy files\nCOPY root /\nCOPY backup/src/ /${APP_HOME}/\nCOPY backup/config /${APP_HOME}/config\nRUN mkdir -p /var/log/backup ${APP_DATA} &&\\\n    adduser -D -h ${APP_HOME} -G docker -s /bin/sh ${USER} &&\\\n    chown -R ${USER} ${APP_HOME} &&\\\n    chown -R ${USER} ${APP_DATA} &&\\\n    chown -R ${USER} /var/log/backup\n\n# CLEAN Image\nRUN rm -rf /tmp/* /var/tmp/*\n\nVOLUME [\"${APP_DATA}\"]\nWORKDIR \"${APP_HOME}\"\nCMD [\"/init\"]\n"
}