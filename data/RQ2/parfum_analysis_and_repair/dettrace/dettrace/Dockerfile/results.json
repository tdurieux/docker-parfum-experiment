{
  "startTime": 1674255750079,
  "endTime": 1674255750966,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 34,
        "columnStart": 26,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 25,
        "columnEnd": 78
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 34,
        "columnStart": 26,
        "columnEnd": 12
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 25,
        "columnEnd": 78
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# STAGE 1: Build the tool.\nFROM ubuntu:18.04\n\nENV DEBIAN_FRONTEND=noninteractive\n\nRUN apt-get -qq update && apt-get install --no-install-recommends -y \\\n    clang++-6.0 \\\n    clang-6.0 \\\n    clang-format-6.0 \\\n    clang-tidy-6.0 \\\n    cpio \\\n    fuse \\\n    git \\\n    less \\\n    libacl1-dev \\\n    libarchive-dev \\\n    libbz2-dev \\\n    libfuse-dev \\\n    liblz4-dev \\\n    liblzma-dev \\\n    liblzo2-dev \\\n    libseccomp-dev \\\n    libssl-dev \\\n    libxml2-dev \\\n    lld-6.0 \\\n    lldb-6.0 \\\n    make \\\n    nettle-dev \\\n    openssh-server \\\n    pkg-config \\\n    python3 \\\n    software-properties-common \\\n    strace \\\n    sudo \\\n    valgrind && rm -rf /var/lib/apt/lists/*;\n\nRUN update-alternatives --install /usr/bin/clang clang /usr/bin/clang-6.0 60 \\\n    --slave /usr/bin/clang++ clang++ /usr/bin/clang++-6.0 \\\n    --slave /usr/bin/clang-cpp clang-cpp /usr/bin/clang-cpp-6.0 \\\n    --slave /usr/bin/lldb lldb /usr/bin/lldb-6.0 \\\n    --slave /usr/bin/clang-format clang-format /usr/bin/clang-format-6.0 \\\n    --slave /usr/bin/clang-tidy clang-tidy /usr/bin/clang-tidy-6.0\n\nWORKDIR /code\n\nADD ./ ./\n\nARG BUILDID=0\n\nRUN make -j deb \"BUILDID=${BUILDID}\"\n\n# STAGE 2:\n# Copy only the deployment files into the final image:\nFROM ubuntu:18.04\nRUN apt-get update -y && apt-get install --no-install-recommends -y python3 bsdmainutils dnsutils curl && rm -rf /var/lib/apt/lists/*;\n\nCOPY --from=0 /code/*.deb /root/\nRUN dpkg --install /root/*.deb\nWORKDIR /usr/share/dettrace/examples\n\nRUN echo 'export PS1=\"\\w \\[\\033[1;36m\\]$ \\[\\033[0m\\]\"' >> /root/.bashrc\n"
}