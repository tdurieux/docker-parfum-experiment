{
  "startTime": 1674255543663,
  "endTime": 1674255544252,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 44,
        "columnStart": 26,
        "columnEnd": 12
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 44,
        "columnStart": 26,
        "columnEnd": 12
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# This is meant to be used to create a Docker-based development environment such\n# that you can compile inside this container but edit files outside.\n#\n# Use `make env` to activate this environment.\nFROM ubuntu:18.04\n\n# We need these user IDs and group IDs in order to give the same permissions to\n# the user inside the container as outside.\nARG USER_ID=1000\nARG GROUP_ID=1000\n\nENV DEBIAN_FRONTEND=noninteractive\n\nRUN apt-get -qq update && apt-get install --no-install-recommends -y \\\n    clang++-6.0 \\\n    clang-6.0 \\\n    clang-format-6.0 \\\n    clang-tidy-6.0 \\\n    cpio \\\n    fuse \\\n    git \\\n    less \\\n    libacl1-dev \\\n    libarchive-dev \\\n    libbz2-dev \\\n    libfuse-dev \\\n    liblz4-dev \\\n    liblzma-dev \\\n    liblzo2-dev \\\n    libseccomp-dev \\\n    libssl-dev \\\n    libxml2-dev \\\n    lld-6.0 \\\n    lldb-6.0 \\\n    make \\\n    nettle-dev \\\n    openssh-server \\\n    pkg-config \\\n    python3 \\\n    software-properties-common \\\n    strace \\\n    sudo \\\n    valgrind && rm -rf /var/lib/apt/lists/*;\n\nRUN update-alternatives --install /usr/bin/clang clang /usr/bin/clang-6.0 60 \\\n    --slave /usr/bin/clang++ clang++ /usr/bin/clang++-6.0 \\\n    --slave /usr/bin/clang-cpp clang-cpp /usr/bin/clang-cpp-6.0 \\\n    --slave /usr/bin/lldb lldb /usr/bin/lldb-6.0 \\\n    --slave /usr/bin/clang-format clang-format /usr/bin/clang-format-6.0 \\\n    --slave /usr/bin/clang-tidy clang-tidy /usr/bin/clang-tidy-6.0\n\nRUN groupadd --force --gid ${GROUP_ID} dev && \\\n    useradd --shell /bin/bash --create-home --uid=${USER_ID} -G sudo --gid ${GROUP_ID} dev\n\nRUN echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers\n\nUSER dev\n\nRUN echo 'export PS1=\"dev-env:\\w \\[\\033[1;36m\\]$ \\[\\033[0m\\]\"' >> /home/dev/.bashrc\n\nWORKDIR /code\n"
}