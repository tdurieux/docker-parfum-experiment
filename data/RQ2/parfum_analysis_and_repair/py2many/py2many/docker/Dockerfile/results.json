{
  "startTime": 1674255527943,
  "endTime": 1674255528747,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 19,
        "columnEnd": 93
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# docker buildx create --use --name insecure-builder --buildkitd-flags '--allow-insecure-entitlement security.insecure'\n# docker buildx build -t archlinux:py2many --allow security.insecure -o type=docker --build-arg RUST=1 --build-arg CPP=1 .\n#\n# Edit the list of languages above based on what you're interested in\nFROM archlinux:base-devel\n\nMAINTAINER Arun Sharma <arun@sharma-home.net>\n\nARG RUST\nARG CPP\nARG GOLANG\nARG JULIA\nARG NIM\nARG KOTLIN\nARG DART\nARG VLANG\n\nRUN pacman -Syu --noconfirm python python-pip unzip\n\n# C++\nRUN test -z \"$CPP\" || pacman -Syu --noconfirm clang libc++\n\n# Go\nRUN test -z \"$GOLANG\" || pacman -Syu --noconfirm go\n\n# Julia\nRUN test -z \"$JULIA\" || pacman -Syu --noconfirm julia\n\n# Nim\nRUN test -z \"$NIM\" || pacman -Syu --noconfirm nim\n\n# Kotlin\nRUN test -z \"$KOTLIN\" || pacman -Syu --noconfirm kotlin\n\n# Vlang:\nRUN test -z \"$VLANG\" || ( RUNNER_OS=Linux RELEASE=weekly.2021.29 \\\n    FILE=v_$(echo ${RUNNER_OS} | tr '[:upper:]' '[:lower:]').zip \\\n    && ( cd /tmp && curl -f -sSLO https://github.com/vlang/v/releases/download/${RELEASE}/${FILE}) \\\n    && (cd /tmp && unzip ${FILE} && rm ${FILE}) \\\n    && ln -s /tmp/v/v /usr/bin)\n\n# TODO: add flutter\n# TODO: Add all formatters and other auxilliary setup from main.yml\n\n# Tools for checking out code and running tests\nRUN pacman -Syu --noconfirm git python-tox\n\nRUN useradd --create-home --comment \"Arch Build User\" build\nENV HOME /home/build\nENV PATH \"$PATH:/home/build/.local/bin:/home/build/.cargo/bin:/home/build/bin\"\n\nUSER build\nRUN mkdir -p /home/build/bin\n\n# Per user package setup. Note that /root is inaccessible to user build\n\n# Rust\nRUN test -z \"$RUST\" || (curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | \\\n   sh -s -- -y  && \\\n   cargo install cargo-script)\n\n# Julia\nRUN test -z \"$JULIA\" || (julia -e 'using Pkg; Pkg.add(\"JuliaFormatter\")' && \\\n    julia -e 'using Pkg; Pkg.add(\"SuperEnum\")' && \\\n    (cd /home/build/bin && ln -s $(find ~/.julia -name format.jl)))\n"
}