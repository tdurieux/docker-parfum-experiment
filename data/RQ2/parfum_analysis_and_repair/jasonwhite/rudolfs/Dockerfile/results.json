{
  "startTime": 1674215329771,
  "endTime": 1674215330903,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 1,
        "columnEnd": 46
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 1,
        "columnEnd": 46
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM rust:1.55 as build\n\nENV CARGO_BUILD_TARGET=x86_64-unknown-linux-musl\n\nENV DEBIAN_FRONTEND=noninteractive\nRUN \\\n\tapt-get update && \\\n\tapt-get -y --no-install-recommends install ca-certificates musl-tools && \\\n\trustup target add ${CARGO_BUILD_TARGET} && rm -rf /var/lib/apt/lists/*;\n\nENV PKG_CONFIG_ALLOW_CROSS=1\n\n# Use Tini as our PID 1. This will enable signals to be handled more correctly.\n#\n# Note that this can't be downloaded inside the scratch container as we have no\n# chmod command.\n#\n# TODO: Use `--init` instead when it is more well-supported (this should be the\n# case by Jan 1, 2020).\nENV TINI_VERSION v0.18.0\nADD https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini-static /tini\nRUN chmod +x /tini\n\n# Build the real project.\nCOPY ./ ./\n\nRUN cargo build --release\n\nRUN \\\n\tmkdir -p /build && \\\n\tcp target/${CARGO_BUILD_TARGET}/release/rudolfs /build/ && \\\n\tstrip /build/rudolfs\n\n# Use scratch so we can get an itty-bitty-teeny-tiny image. This requires us to\n# use musl when building the application.\nFROM scratch\n\nEXPOSE 8080\nVOLUME [\"/data\"]\n\nCOPY --from=build /tini /tini\n\nCOPY --from=build /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/ca-certificates.crt\n\nCOPY --from=build /build/ /\n\nENTRYPOINT [\"/tini\", \"--\", \"/rudolfs\"]\nCMD [\"--cache-dir\", \"/data\"]\n"
}