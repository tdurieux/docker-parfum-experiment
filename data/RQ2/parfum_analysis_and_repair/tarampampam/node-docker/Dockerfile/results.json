{
  "startTime": 1674218316506,
  "endTime": 1674218317374,
  "originalSmells": [
    {
      "rule": "npmCacheCleanUseForce",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 50,
        "columnEnd": 65
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 7,
        "columnEnd": 15
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 73,
        "columnEnd": 80
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 15,
        "columnEnd": 58
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# e.g.: `docker build --rm --build-arg \"NODE_VERSION=latest\" -f ./Dockerfile .`\n# e.g.: `docker build --rm --build-arg \"NODE_VERSION=11.8-alpine\" -f ./Dockerfile .`\nARG NODE_VERSION\n\nFROM node:${NODE_VERSION:-alpine}\n\nRUN set -x \\\n    && . /etc/os-release \\\n    && case \"$ID\" in \\\n        alpine) \\\n            apk add --no-cache bash git openssh \\\n            ;; \\\n        debian \\\n            apt-get update \\\n            && apt-get -yq --no-install-recommends install bash git openssh-server \\\n            && apt-get -yq clean \\\n            && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \\\n            ;; \\\n          esac \\\n    # install yarn, if needed (only applies to older versions, like 6 or 7)\n    && yarn bin || ( npm install --global yarn && npm cache clean --force) \\\n    # show installed application versions\n    && git --version && bash --version && ssh -V && npm -v && node -v && yarn -v && yarn cache clean;\n"
}