{
  "startTime": 1674252587772,
  "endTime": 1674252589023,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 96
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 96
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 96
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 96
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 96
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 96
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 96
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 10,
        "columnStart": 18,
        "columnEnd": 76
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 10,
        "columnStart": 18,
        "columnEnd": 76
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:22.04 as ovs-builder\n\nARG ARCH\nARG DEBIAN_FRONTEND=noninteractive\nENV SRC_DIR='/usr/src'\n\nRUN apt update && apt install --no-install-recommends build-essential git libnuma-dev autoconf curl \\\n    python3 libmnl-dev libpcap-dev libtool libcap-ng-dev libssl-dev pkg-config \\\n    python3-six libunbound-dev libunwind-dev dh-make fakeroot debhelper dh-python \\\n    flake8 python3-sphinx graphviz groff wget libjemalloc-dev python3-pip -y && rm -rf /var/lib/apt/lists/*;\n\nRUN pip3 install --no-cache-dir meson ninja\n\nRUN cd /usr/src/ && \\\n    wget https://fast.dpdk.org/rel/dpdk-20.11.1.tar.xz && \\\n    tar xf dpdk-20.11.1.tar.xz && \\\n    export DPDK_DIR=/usr/src/dpdk-stable-20.11.1 && \\\n    export DPDK_BUILD=$DPDK_DIR/build && \\\n    cd $DPDK_DIR && \\\n    meson build && \\\n    ninja -C build && \\\n    ninja -C build install && \\\n    ldconfig && rm dpdk-20.11.1.tar.xz\n\n\nRUN cd /usr/src/ && \\\n    git clone -b branch-2.16 --depth=1 https://github.com/openvswitch/ovs.git && \\\n    cd ovs && \\\n    curl -f -s https://github.com/kubeovn/ovs/commit/22ea22c40b46ee5adeae977ff6cfca81b3ff25d7.patch | git apply && \\\n    ./boot.sh && \\\n    rm -rf .git && \\\n    export DPDK_DIR=/usr/src/dpdk-stable-20.11.1 && \\\n    CONFIGURE_OPTS='LIBS=-ljemalloc' && \\\n    if [ \"$ARCH\" = \"amd64\" ]; then CONFIGURE_OPTS='LIBS=-ljemalloc CFLAGS=\"-O2 -g -msse4.2 -mpopcnt\"'; fi && \\\n    DATAPATH_CONFIGURE_OPTS='--prefix=/usr  --with-dpdk=static' EXTRA_CONFIGURE_OPTS=$CONFIGURE_OPTS DEB_BUILD_OPTIONS='parallel=8 nocheck' fakeroot debian/rules binary\n\nRUN dpkg -i /usr/src/python3-openvswitch*.deb /usr/src/libopenvswitch*.deb\n\nRUN cd /usr/src/ && git clone -b branch-21.06 --depth=1 https://github.com/ovn-org/ovn.git && \\\n    cd ovn && \\\n    curl -f -s https://github.com/kubeovn/ovn/commit/e24734913d25c0bffdf1cfd79e14ef43d01e1019.patch | git apply && \\\n    curl -f -s https://github.com/kubeovn/ovn/commit/8f4e4868377afb5e980856755b9f6394f8b649e2.patch | git apply && \\\n    curl -f -s https://github.com/kubeovn/ovn/commit/23a87cabb76fbdce5092a6b3d3b56f3fa8dd61f5.patch | git apply && \\\n    curl -f -s https://github.com/kubeovn/ovn/commit/89ca60989df4af9a96cc6024e04f99b9b77bad22.patch | git apply && \\\n    curl -f -s https://github.com/kubeovn/ovn/commit/aeafa43fc51be8ea1c7abfbe779c69205c1c5aa4.patch | git apply && \\\n    curl -f -s https://github.com/kubeovn/ovn/commit/71f831b9cc5a6dc923af4ca90286857e2cf8b1d3.patch | git apply && \\\n    sed -i 's/OVN/ovn/g' debian/changelog && \\\n    rm -rf .git && \\\n    ./boot.sh && \\\n    CONFIGURE_OPTS='LIBS=-ljemalloc' && \\\n    if [ \"$ARCH\" = \"amd64\" ]; then CONFIGURE_OPTS='LIBS=-ljemalloc CFLAGS=\"-O2 -g -msse4.2 -mpopcnt\"'; fi && \\\n    OVSDIR=/usr/src/ovs EXTRA_CONFIGURE_OPTS=$CONFIGURE_OPTS DEB_BUILD_OPTIONS='parallel=8 nocheck' fakeroot debian/rules binary\n\nRUN mkdir /packages/ && \\\n     cp /usr/src/libopenvswitch*.deb /packages && \\\n     cp /usr/src/openvswitch-*.deb /packages && \\\n     cp /usr/src/python3-openvswitch*.deb /packages && \\\n     cp /usr/src/ovn-*.deb /packages && \\\n     cd /packages && rm -f *dbg* *datapath* *docker* *vtep* *ipsec* *test* *dev*\n\nFROM ubuntu:22.04\n\nARG DEBIAN_FRONTEND=noninteractive\nRUN apt update && apt upgrade -y && apt install ca-certificates python3 hostname libunwind8 netbase \\\n        ethtool iproute2 ncat libunbound-dev procps libatomic1 kmod iptables \\\n        tcpdump ipset curl uuid-runtime openssl inetutils-ping arping ndisc6 \\\n        logrotate libjemalloc2 dnsutils  libnuma-dev -y --no-install-recommends && \\\n        rm -rf /var/lib/apt/lists/* && \\\n        cd /usr/sbin && \\\n        ln -sf /usr/sbin/iptables-legacy iptables && \\\n        ln -sf /usr/sbin/ip6tables-legacy ip6tables && \\\n        rm -rf /etc/localtime\n\nRUN mkdir -p /var/run/openvswitch && \\\n    mkdir -p /var/run/ovn && \\\n    mkdir -p /etc/cni/net.d && \\\n    mkdir -p /opt/cni/bin\n\nARG ARCH\nENV CNI_VERSION=v1.0.1\nRUN curl -sSf -L --retry 5 https://github.com/containernetworking/plugins/releases/download/${CNI_VERSION}/cni-plugins-linux-${ARCH}-${CNI_VERSION}.tgz | tar -xz -C . ./loopback ./portmap ./macvlan\n\nRUN --mount=type=bind,target=/packages,from=ovs-builder,source=/packages  \\\n    dpkg -i /packages/libopenvswitch*.deb && \\\n    dpkg -i /packages/openvswitch-*.deb && \\\n    dpkg -i /packages/python3-openvswitch*.deb &&\\\n    dpkg -i --ignore-depends=openvswitch-switch,openvswitch-common /packages/ovn-*.deb\n"
}