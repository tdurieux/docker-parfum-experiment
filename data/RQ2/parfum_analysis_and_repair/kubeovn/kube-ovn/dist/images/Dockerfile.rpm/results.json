{
  "startTime": 1674255013092,
  "endTime": 1674255014435,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 131
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 8,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 55
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 24,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 31
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM centos:8 as ovs-rpm\nENV BUILD_DATE 20200930\nARG RPM_ARCH\nARG ARCH\n\nRUN yum install dnf-plugins-core -y && \\\n    yum config-manager --set-enabled powertools && \\\n    yum install python36 git wget openssl-devel gcc \\\n    make python3-devel openssl-devel kernel-devel kernel-debug-devel \\\n    autoconf automake rpm-build redhat-rpm-config libtool libcap-ng-devel \\\n    checkpolicy selinux-policy-devel unbound unbound-devel gcc-c++ \\\n    desktop-file-utils graphviz groff python3-sphinx -y && rm -rf /var/cache/yum\nCOPY build.sh /root/build.sh\nRUN bash /root/build.sh && \\\n    mkdir /rpms/ && \\\n    cp /ovs/rpm/rpmbuild/RPMS/${RPM_ARCH}/* /ovn/rpm/rpmbuild/RPMS/${RPM_ARCH}/* /rpms && \\\n    cd /rpms && rm -f *debug* *docker* *vtep* *ipsec* && \\\n    rm -rf /ovs /ovn /jemalloc-5.2.1\n\n\nFROM centos:8\nENV BUILD_DATE 20200930\nRUN yum remove -y bind-export-libs && yum update -y && \\\n    yum install -y \\\n        firewalld-filesystem openssl \\\n        libatomic \\\n        libpcap \\\n        hostname ethtool \\\n        iproute nc \\\n        unbound-devel \\\n        tcpdump ipset logrotate && \\\n    yum clean all && rm -rf /var/cache/yum\nARG RPM_ARCH\nRUN rpm -ivh --nodeps https://archives.fedoraproject.org/pub/archive/fedora/linux/releases/30/Everything/${RPM_ARCH}/os/Packages/i/iptables-1.8.0-5.fc30.${RPM_ARCH}.rpm\n\nRUN mkdir -p /var/run/openvswitch && \\\n    mkdir -p /var/run/ovn && \\\n    mkdir -p /etc/cni/net.d && \\\n    mkdir -p /opt/cni/bin\n\nARG ARCH\nENV CNI_VERSION=v1.0.1\nRUN curl -sSf -L --retry 5 https://github.com/containernetworking/plugins/releases/download/${CNI_VERSION}/cni-plugins-linux-${ARCH}-${CNI_VERSION}.tgz | tar -xz -C . ./loopback ./portmap\n\nENV KUBE_VERSION=\"v1.13.2\"\nRUN curl -f -L https://storage.googleapis.com/kubernetes-release/release/${KUBE_VERSION}/bin/linux/${ARCH}/kubectl -o /usr/bin/kubectl \\\n && chmod +x /usr/bin/kubectl\n\nRUN --mount=type=bind,target=/rpms,from=ovs-rpm,source=/rpms rpm -ivh --nodeps /rpms/*.rpm && \\\n    sed '/su ovn ovn/d' /etc/logrotate.d/ovn\n\nCOPY *.sh /kube-ovn/\nCOPY grace_stop_ovn_controller /usr/share/ovn/scripts/grace_stop_ovn_controller\nCOPY 01-kube-ovn.conflist /kube-ovn/01-kube-ovn.conflist\nRUN rpm -e --nodeps sqlite-libs\n\nWORKDIR /kube-ovn\nCOPY kube-ovn /kube-ovn/kube-ovn\nCOPY kube-ovn-cmd /kube-ovn/kube-ovn-cmd\nRUN ln -s /kube-ovn/kube-ovn-cmd /kube-ovn/kube-ovn-controller && \\\n    ln -s /kube-ovn/kube-ovn-cmd /kube-ovn/kube-ovn-daemon && \\\n    ln -s /kube-ovn/kube-ovn-cmd /kube-ovn/kube-ovn-monitor && \\\n    ln -s /kube-ovn/kube-ovn-cmd /kube-ovn/kube-ovn-pinger && \\\n    ln -s /kube-ovn/kube-ovn-cmd /kube-ovn/kube-ovn-speaker && \\\n    ln -s /kube-ovn/kube-ovn-cmd /kube-ovn/kube-ovn-webhook\n"
}