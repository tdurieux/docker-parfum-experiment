{
  "startTime": 1674220439498,
  "endTime": 1674220440948,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 96
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 60,
        "columnEnd": 152
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 96
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 96
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 96
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 74,
        "lineEnd": 74,
        "columnStart": 4,
        "columnEnd": 84
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 11,
        "columnStart": 18,
        "columnEnd": 64
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 11,
        "columnStart": 18,
        "columnEnd": 64
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:22.04 as ovs-builder\n\nARG ARCH\nARG NO_AVX512=false\nARG DEBIAN_FRONTEND=noninteractive\nENV SRC_DIR='/usr/src'\n\nRUN apt update && apt install --no-install-recommends build-essential git libnuma-dev autoconf curl \\\n    python3 libmnl-dev libpcap-dev libtool libcap-ng-dev libssl-dev pkg-config \\\n    python3-six libunbound-dev libunwind-dev dh-make fakeroot debhelper dh-python \\\n    flake8 python3-sphinx graphviz groff wget libjemalloc-dev -y && rm -rf /var/lib/apt/lists/*;\n\nRUN cd /usr/src/ && \\\n    git clone -b ovn-22.03.1 --depth=1 https://github.com/kubeovn/ovs.git && \\\n    cd ovs && \\\n    # increase election timer\n    curl -f -s https://github.com/kubeovn/ovs/commit/22ea22c40b46ee5adeae977ff6cfca81b3ff25d7.patch | git apply && \\\n    # compile without avx512\n    if [ \"$ARCH\" = \"amd64\" -a \"$NO_AVX512\" = \"true\" ]; then \\\n    curl -f -s https://github.com/kubeovn/ovs/commit/38c59e078d69b343f56ab0f380fb9f42b94b7c02.patch | git apply; fi && \\\n    ./boot.sh && \\\n    rm -rf .git && \\\n    CONFIGURE_OPTS='LIBS=-ljemalloc' && \\\n    if [ \"$ARCH\" = \"amd64\" ]; then CONFIGURE_OPTS='LIBS=-ljemalloc CFLAGS=\"-O2 -g -msse4.2 -mpopcnt\"'; fi && \\\n    DATAPATH_CONFIGURE_OPTS='--prefix=/usr' EXTRA_CONFIGURE_OPTS=$CONFIGURE_OPTS DEB_BUILD_OPTIONS='parallel=8 nocheck' fakeroot debian/rules binary\n\nRUN dpkg -i /usr/src/python3-openvswitch*.deb /usr/src/libopenvswitch*.deb\n\nRUN cd /usr/src/ && git clone -b v22.03.1 --depth=1 https://github.com/ovn-org/ovn.git && \\\n    cd ovn && \\\n    # do not send traffic that not designate to svc to conntrack\n    curl -f -s https://github.com/kubeovn/ovn/commit/d26ae4de0ab070f6b602688ba808c8963f69d5c4.patch | git apply && \\\n    # change hash type from dp_hash to hash with field src_ip\n    curl -f -s https://github.com/kubeovn/ovn/commit/ab923b252271cbbcccc8091e338ee7efe75e5fcd.patch | git apply && \\\n    # set ether dst addr for dnat on logical switch\n    curl -f -s https://github.com/kubeovn/ovn/commit/94b73d939cd33b0531fa9a3422c999cd83ead087.patch | git apply && \\\n    sed -i 's/OVN/ovn/g' debian/changelog && \\\n    rm -rf .git && \\\n    ./boot.sh && \\\n    CONFIGURE_OPTS='LIBS=-ljemalloc' && \\\n    if [ \"$ARCH\" = \"amd64\" ]; then CONFIGURE_OPTS='LIBS=-ljemalloc CFLAGS=\"-O2 -g -msse4.2 -mpopcnt\"'; fi && \\\n    OVSDIR=/usr/src/ovs EXTRA_CONFIGURE_OPTS=$CONFIGURE_OPTS DEB_BUILD_OPTIONS='parallel=8 nocheck' fakeroot debian/rules binary\n\nRUN mkdir /packages/ && \\\n     cp /usr/src/libopenvswitch*.deb /packages && \\\n     cp /usr/src/openvswitch-*.deb /packages && \\\n     cp /usr/src/python3-openvswitch*.deb /packages && \\\n     cp /usr/src/ovn-*.deb /packages && \\\n     cd /packages && rm -f *dbg* *datapath* *docker* *vtep* *ipsec* *test* *dev*\n\nFROM ubuntu:22.04\n\nARG DEBIAN_FRONTEND=noninteractive\nRUN apt update && apt upgrade -y && apt install ca-certificates python3 hostname libunwind8 netbase \\\n        ethtool iproute2 ncat libunbound-dev procps libatomic1 kmod iptables \\\n        tcpdump ipset curl uuid-runtime openssl inetutils-ping arping ndisc6 \\\n        logrotate libjemalloc2 dnsutils net-tools nmap -y --no-install-recommends && \\\n        rm -rf /var/lib/apt/lists/* && \\\n        cd /usr/sbin && \\\n        ln -sf /usr/sbin/iptables-legacy iptables && \\\n        ln -sf /usr/sbin/ip6tables-legacy ip6tables && \\\n        rm -rf /etc/localtime\n\nRUN mkdir -p /var/run/openvswitch && \\\n    mkdir -p /var/run/ovn && \\\n    mkdir -p /etc/cni/net.d && \\\n    mkdir -p /opt/cni/bin\n\nARG ARCH\nENV CNI_VERSION=v1.0.1\nRUN curl -sSf -L --retry 5 https://github.com/containernetworking/plugins/releases/download/${CNI_VERSION}/cni-plugins-linux-${ARCH}-${CNI_VERSION}.tgz | tar -xz -C . ./loopback ./portmap ./macvlan\n\nENV KUBE_VERSION=\"v1.21.1\"\n\nRUN curl -f -L https://dl.k8s.io/${KUBE_VERSION}/kubernetes-client-linux-${ARCH}.tar.gz | tar -xz -C . && cp ./kubernetes/client/bin/kubectl /usr/bin/kubectl \\\n && chmod +x /usr/bin/kubectl && rm -rf ./kubernetes\n\nRUN --mount=type=bind,target=/packages,from=ovs-builder,source=/packages  \\\n    dpkg -i /packages/libopenvswitch*.deb && \\\n    dpkg -i /packages/openvswitch-*.deb && \\\n    dpkg -i /packages/python3-openvswitch*.deb &&\\\n    dpkg -i --ignore-depends=openvswitch-switch,openvswitch-common /packages/ovn-*.deb\n\nENV DUMB_INIT_VERSION=\"1.2.5\"\nRUN dump_arch=\"x86_64\"; \\\n    if [ \"$ARCH\" = \"arm64\" ]; then dump_arch=\"aarch64\"; fi; \\\n    curl -sSf -L --retry 5 -o /usr/bin/dumb-init https://github.com/Yelp/dumb-init/releases/download/v${DUMB_INIT_VERSION}/dumb-init_${DUMB_INIT_VERSION}_${dump_arch} && \\\n    chmod +x /usr/bin/dumb-init\n\nENTRYPOINT [\"/usr/bin/dumb-init\", \"--\"]\n"
}