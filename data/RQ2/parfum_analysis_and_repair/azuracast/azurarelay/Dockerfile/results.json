{
  "startTime": 1674251299198,
  "endTime": 1674251299961,
  "originalSmells": [
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 7,
        "columnEnd": 61
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# Icecast build stage (for later copy)\n#\nFROM ghcr.io/azuracast/icecast-kh-ac:2.4.0-kh15-ac2 AS icecast\n\n#\n# Dockerize build stage\n#\nFROM golang:1.17-buster AS dockerize\n\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends openssl git && rm -rf /var/lib/apt/lists/*;\n\nRUN go install github.com/jwilder/dockerize@latest\n\n#\n# Base image\n#\nFROM ubuntu:focal\n\n# Set time zone\nENV TZ=\"UTC\"\n\n# Import Icecast-KH from build container\nCOPY --from=icecast /usr/local/bin/icecast /usr/local/bin/icecast\nCOPY --from=icecast /usr/local/share/icecast /usr/local/share/icecast\n\n# Add Dockerize\nCOPY --from=dockerize /go/bin/dockerize /usr/local/bin\n\n# Run base build process\nCOPY ./build/ /bd_build\n\nRUN chmod a+x /bd_build/*.sh \\\n    && /bd_build/prepare.sh \\\n    && /bd_build/add_user.sh \\\n    && /bd_build/setup.sh \\\n    && /bd_build/cleanup.sh \\\n    && rm -rf /bd_build\n\n#\n# START Operations as `azurarelay` user\n#\nUSER azurarelay\n\n# Clone repo and set up repo\nWORKDIR /var/azurarelay/www\nVOLUME [\"/var/azurarelay/stations\", \"/var/azurarelay/www_tmp\", \"/etc/letsencrypt\"]\n\nCOPY --chown=azurarelay:azurarelay ./www/composer.json ./www/composer.lock ./\nRUN composer install  \\\n    --ignore-platform-reqs \\\n    --no-ansi \\\n    --no-autoloader \\\n    --no-interaction \\\n    --no-scripts\n\n# We need to copy our whole application so that we can generate the autoload file inside the vendor folder.\nCOPY --chown=azurarelay:azurarelay ./www .\n\nRUN composer dump-autoload --optimize --classmap-authoritative\n\n#\n# END Operations as `azurarelay` user\n#\n\nUSER root\n\nEXPOSE 80 8000 8010 8020 8030 8040 8050 8060 8070 8090 \\\n        8100 8110 8120 8130 8140 8150 8160 8170 8180 8190 \\\n        8200 8210 8220 8230 8240 8250 8260 8270 8280 8290 \\\n        8300 8310 8320 8330 8340 8350 8360 8370 8380 8390 \\\n        8400 8410 8420 8430 8440 8450 8460 8470 8480 8490\n\n# Nginx Proxy environment variables.\nENV HTTPS_METHOD=\"noredirect\" \\\n    APPLICATION_ENV=\"production\"\n\nCMD [\"/usr/local/bin/my_init\"]\n"
}