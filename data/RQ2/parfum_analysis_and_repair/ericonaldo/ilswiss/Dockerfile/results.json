{
  "startTime": 1674255208482,
  "endTime": 1674255209110,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 4,
        "columnEnd": 132
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 40,
        "columnStart": 22,
        "columnEnd": 8
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nvidia/cudagl:11.0-base-ubuntu20.04\n\nENV DEBIAN_FRONTEND noninteractive\n\nENV CUDNN_VERSION=8.0.5.39-1+cuda11.1\n\nARG python=3.8\nENV PYTHON_VERSION=${python}\n\n# Set default shell to /bin/bash\nSHELL [\"/bin/bash\", \"-cu\"]\n\nRUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys A4B469963BF863CC\n\nRUN apt-get update && apt-get install -y --allow-downgrades \\\n    --allow-change-held-packages --no-install-recommends \\\n    --allow-unauthenticated \\\n    build-essential \\\n    cmake \\\n    git \\\n    curl \\\n    vim \\\n    wget \\\n    ca-certificates \\\n    libcudnn8=${CUDNN_VERSION} \\\n    libjpeg-dev \\\n    libpng-dev \\\n    python${PYTHON_VERSION} \\\n    python${PYTHON_VERSION}-dev \\\n    python${PYTHON_VERSION}-distutils \\\n    librdmacm1 \\\n    libibverbs1 \\\n    ibverbs-providers \\ \n    libosmesa6 \\ \n    libosmesa6-dev \\ \n    patchelf \\\n    libglew-dev \\\n    libgl1-mesa-glx \\\n    xorg \\\n    openbox \\\n    tmux && rm -rf /var/lib/apt/lists/*;\n\nRUN ln -s /usr/bin/python${PYTHON_VERSION} /usr/bin/python\n\nRUN curl -f -O https://bootstrap.pypa.io/get-pip.py && \\\n    python get-pip.py && \\\n    rm get-pip.py\n\nRUN /usr/bin/python -m pip install --upgrade pip\n\nRUN adduser --disabled-password --gecos '' docker && \\\n    adduser docker sudo && \\\n    echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers\n\nRUN mkdir -p /.cache/pip\nRUN mkdir -p /.local/share\nRUN chown -R docker:docker /.cache/pip\nRUN chown -R docker:docker /.local\n\nUSER docker\n\nWORKDIR /home/docker/\n\nRUN chmod a+rwx /home/docker/ && \\\n    wget https://repo.anaconda.com/miniconda/Miniconda3-py39_4.9.2-Linux-x86_64.sh && \\\n    bash Miniconda3-py39_4.9.2-Linux-x86_64.sh -b && rm Miniconda3-py39_4.9.2-Linux-x86_64.sh\n\nENV PATH /home/docker/miniconda3/bin:$PATH\nRUN conda config --set allow_conda_downgrades true && conda config --env --set always_yes true && conda install conda=4.9.2 && conda install -c anaconda cudatoolkit=11.0\n\n# Install pytorch for A100\nRUN pip install --no-cache-dir torch==1.9.0+cu111 torchvision==0.10.0+cu111 torchaudio==0.9.0 -f https://download.pytorch.org/whl/torch_stable.html\n\nRUN mkdir /home/docker/.mujoco\nCOPY .mujoco /home/docker/.mujoco/\n\nCOPY requirements.txt /tmp\nWORKDIR /tmp\nRUN pip install --no-cache-dir -r ./requirements.txt\n\n## git clone before doing this. No need when can do with pip\n# RUN mkdir /tmp/dmc2gym\n# COPY dmc2gym /tmp/dmc2gym\n# WORKDIR /tmp/dmc2gym\n# RUN pip install -e .\n\nUSER docker\nWORKDIR /home/docker/app\n\nENV LD_LIBRARY_PATH=\"$LD_LIBRARY_PATH:/home/docker/.mujoco/mujoco210/bin\""
}