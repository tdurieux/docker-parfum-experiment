diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/cronos-so/cronos/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/cronos-so/cronos/Dockerfile/repaired.Dockerfile
index 8d38e24..1515a36 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/cronos-so/cronos/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/cronos-so/cronos/Dockerfile/repaired.Dockerfile
@@ -1,14 +1,14 @@
 # This Dockerfile provides a Linux-based environment, pre-installed with Solana dev tooling
 # such as Rust, the Solana CLI, and the latest Soteria code scanner.
-# 
+#
 # You can pull the latest published image from Dockerhub (https://hub.docker.com/r/cronoslabs/dev)
 # Or you can build an image from source using the Docker CLI:
 #  ```sh
 #  docker build -t cronoslabs/dev .
 #  ```
-# 
+#
 # Note: When building Docker images on an M1 Mac, you should use the `--platform linux/amd64` flag.
-# 
+#
 
 FROM ubuntu:18.04
 
@@ -25,8 +25,8 @@ ENV PATH="${HOME}/soteria-linux-develop/bin/:${PATH}"
 RUN mkdir -p /workdir && \
     mkdir -p /tmp && \
     apt-get update && \
-    apt-get upgrade && \ 
-    apt-get install -y build-essential git curl wget jq pkg-config libssl-dev libudev-dev
+    apt-get upgrade && \
+    apt-get install --no-install-recommends -y build-essential git curl wget jq pkg-config libssl-dev libudev-dev && rm -rf /var/lib/apt/lists/*;
 
 # Move into root.
 WORKDIR ${HOME}
@@ -40,7 +40,7 @@ RUN curl "https://sh.rustup.rs" -sfo rustup.sh && \
 RUN sh -c "$(curl -sSfL https://release.solana.com/${SOLANA_VERSION}/install)"
 
 # Install Soteria.
-RUN sh -c "$(curl -k https://supercompiler.xyz/install)"
+RUN sh -c "$( curl -f -k https://supercompiler.xyz/install)" -f
 
 # Set workdir.
 WORKDIR /workdir