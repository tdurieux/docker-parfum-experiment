{
  "startTime": 1674253774950,
  "endTime": 1674253775480,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 79,
        "lineEnd": 79,
        "columnStart": 4,
        "columnEnd": 55
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 82,
        "lineEnd": 82,
        "columnStart": 4,
        "columnEnd": 79
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 85,
        "lineEnd": 85,
        "columnStart": 4,
        "columnEnd": 140
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 23,
        "columnStart": 5,
        "columnEnd": 7
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 23,
        "columnStart": 5,
        "columnEnd": 7
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# This file is automatically generated. Do not edit directly.\n#\n\nFROM php:7.0-cli\n\nMAINTAINER Nick Jones <nick@nicksays.co.uk>\n\n# Install dependencies\nRUN apt-get update \\\n  && apt-get install --no-install-recommends -y \\\n    libfreetype6-dev \\\n    libicu-dev \\\n    libjpeg62-turbo-dev \\\n    libmcrypt-dev \\\n    libpng-dev \\\n    libxslt1-dev \\\n    sendmail-bin \\\n    sendmail \\\n    sudo \\\n    cron \\\n    rsyslog \\\n    mysql-client \\\n    git && rm -rf /var/lib/apt/lists/*;\n\n# Configure the gd library\nRUN docker-php-ext-configure \\\n  gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/\n\n# Install required PHP extensions\n\nRUN docker-php-ext-install \\\n  dom \\ \n  gd \\ \n  intl \\ \n  mbstring \\ \n  pdo_mysql \\ \n  xsl \\ \n  zip \\ \n  soap \\ \n  bcmath \\ \n  pcntl \\ \n  sockets \\ \n  mcrypt\n\n# Install Xdebug (but don't enable)\nRUN pecl install -o -f xdebug-2.8.1\n\nENV PHP_MEMORY_LIMIT 2G\nENV PHP_ENABLE_XDEBUG false\nENV MAGENTO_ROOT /var/www/magento\n\nENV DEBUG false\nENV UPDATE_UID_GID false\n\nADD etc/php-xdebug.ini /usr/local/etc/php/conf.d/zz-xdebug-settings.ini\nADD etc/mail.ini /usr/local/etc/php/conf.d/zz-mail.ini\n\nADD docker-entrypoint.sh /docker-entrypoint.sh\n\nRUN [\"chmod\", \"+x\", \"/docker-entrypoint.sh\"]\n\nENTRYPOINT [\"/docker-entrypoint.sh\"]\n\nENV COMPOSER_ALLOW_SUPERUSER 1\nENV COMPOSER_GITHUB_TOKEN \"\"\nENV COMPOSER_MAGENTO_USERNAME \"\"\nENV COMPOSER_MAGENTO_PASSWORD \"\"\nENV COMPOSER_BITBUCKET_KEY \"\"\nENV COMPOSER_BITBUCKET_SECRET \"\"\n\nVOLUME /root/.composer/cache\n\nADD etc/php-cli.ini /usr/local/etc/php/conf.d/zz-magento.ini\n\n# Get composer installed to /usr/local/bin/composer\nRUN curl -f -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer\n\n# Install n98-magerun2.phar and move to /usr/local/bin/\nRUN curl -f -O https://files.magerun.net/n98-magerun2.phar && chmod +x ./n98-magerun2.phar && mv ./n98-magerun2.phar /usr/local/bin/\n\n# Install magedbm2.phar and move to /usr/local/bin\nRUN curl -f -LO https://s3.eu-west-2.amazonaws.com/magedbm2-releases/magedbm2.phar && chmod +x ./magedbm2.phar && mv ./magedbm2.phar /usr/local/bin\n\n# Install mageconfigsync and move to /usr/local/bin\nRUN curl -f -L https://github.com/punkstar/mageconfigsync/releases/download/0.5.0-beta.1/mageconfigsync-0.5.0-beta.1.phar > mageconfigsync.phar && chmod +x ./mageconfigsync.phar && mv ./mageconfigsync.phar /usr/local/bin\n\nADD bin/* /usr/local/bin/\n\nRUN [\"chmod\", \"+x\", \"/usr/local/bin/magento-installer\"]\nRUN [\"chmod\", \"+x\", \"/usr/local/bin/magento-command\"]\nRUN [\"chmod\", \"+x\", \"/usr/local/bin/magerun2\"]\nRUN [\"chmod\", \"+x\", \"/usr/local/bin/run-cron\"]\n\nCMD [\"bash\"]\n"
}