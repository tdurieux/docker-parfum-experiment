{
  "startTime": 1674248732619,
  "endTime": 1674248733325,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 25
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM rust:1-buster\nENV PATH=\"/root/.cargo/bin:${PATH}\"\n\n#install native/circleci/build dependancies\nRUN apt update &&\\\n    apt install -y --no-install-recommends git ssh tar gzip ca-certificates default-jre&&\\\n    echo \"deb [trusted=yes] https://apt.fury.io/caddy/ /\" \\\n    | tee -a /etc/apt/sources.list.d/caddy-fury.list &&\\\n    wget -qO - https://artifacts.crowdin.com/repo/GPG-KEY-crowdin | apt-key add - &&\\\n    echo \"deb https://artifacts.crowdin.com/repo/deb/ /\" > /etc/apt/sources.list.d/crowdin.list &&\\\n    apt update &&\\\n    apt install -y --no-install-recommends binutils-dev build-essential cmake curl gcc gettext git libcurl4-openssl-dev libdw-dev libelf-dev libiberty-dev libpq-dev libsqlite3-dev libssl-dev make openssl pkg-config postgresql postgresql-contrib python zlib1g-dev python3-dev python3-pip python3-setuptools zip unzip libclang-dev clang caddy crowdin3 &&\\\n    rm -rf /var/lib/apt/lists/*\n\n#stick rust environment\nCOPY rust-toolchain ./\n\n#compile some deps\nRUN cargo install wasm-pack &&\\\n    cargo install grcov &&\\\n    rm -fr ~/.cargo/registry\n\n#set some compilation parametters\nCOPY cargo_config /root/.cargo/config\n\n#install selenium for front end tests\nRUN pip3 install --no-cache-dir selenium\n\n#configure caddy\nCOPY Caddyfile /Caddyfile\n"
}