diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/burningion/nvidia-accelerated-pytorch-ffmpeg-opencv/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/burningion/nvidia-accelerated-pytorch-ffmpeg-opencv/Dockerfile/repaired.Dockerfile
index b26c951..ba152f4 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/burningion/nvidia-accelerated-pytorch-ffmpeg-opencv/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/burningion/nvidia-accelerated-pytorch-ffmpeg-opencv/Dockerfile/repaired.Dockerfile
@@ -1,10 +1,10 @@
 #FROM nvcr.io/nvidia/pytorch:18.11-py3
 FROM nvcr.io/nvidia/pytorch:19.02-py3
-RUN apt-get update && apt-get -y install autoconf automake build-essential libass-dev libtool  pkg-config texinfo zlib1g-dev cmake mercurial libjpeg-dev libpng-dev libtiff-dev libavcodec-dev libavformat-dev libswscale-dev libv4l-dev  libxvidcore-dev libx264-dev libx265-dev libnuma-dev libatlas-base-dev libopus-dev libvpx-dev gfortran unzip 
+RUN apt-get update && apt-get -y --no-install-recommends install autoconf automake build-essential libass-dev libtool pkg-config texinfo zlib1g-dev cmake mercurial libjpeg-dev libpng-dev libtiff-dev libavcodec-dev libavformat-dev libswscale-dev libv4l-dev libxvidcore-dev libx264-dev libx265-dev libnuma-dev libatlas-base-dev libopus-dev libvpx-dev gfortran unzip && rm -rf /var/lib/apt/lists/*;
 RUN git clone https://git.videolan.org/git/ffmpeg/nv-codec-headers.git
 RUN cd nv-codec-headers && make && make install
 RUN git clone https://git.ffmpeg.org/ffmpeg.git
-RUN cd ffmpeg &&  ./configure  --enable-shared --disable-static --enable-cuda --enable-cuvid --enable-libnpp --enable-libvpx --enable-libopus --enable-libx264  --enable-gpl --enable-pic --enable-libass --enable-nvenc --enable-nonfree --enable-libx265 --extra-cflags="-I/usr/local/cuda/include/ -fPIC" --extra-ldflags="-L/usr/local/cuda/lib64/ -Wl,-Bsymbolic"  && make -j4  && make install
+RUN cd ffmpeg && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --enable-shared --disable-static --enable-cuda --enable-cuvid --enable-libnpp --enable-libvpx --enable-libopus --enable-libx264 --enable-gpl --enable-pic --enable-libass --enable-nvenc --enable-nonfree --enable-libx265 --extra-cflags="-I/usr/local/cuda/include/ -fPIC" --extra-ldflags="-L/usr/local/cuda/lib64/ -Wl,-Bsymbolic" && make -j4 && make install
 RUN wget -O opencv.zip https://github.com/opencv/opencv/archive/4.0.0.zip && unzip opencv.zip && mv opencv-4.0.0 opencv
 RUN wget -O opencv_contrib.zip https://github.com/opencv/opencv_contrib/archive/4.0.0.zip && unzip opencv_contrib.zip && mv opencv_contrib-4.0.0 opencv_contrib
 RUN cd opencv && mkdir build && cd build && cmake -D CMAKE_BUILD_TYPE=RELEASE \
@@ -25,7 +25,7 @@ RUN cd opencv && mkdir build && cd build && cmake -D CMAKE_BUILD_TYPE=RELEASE \
 	-D BUILD_EXAMPLES=ON .. && make -j8 && make install
 RUN cd /workspace/opencv/build/modules/python3 && make && make install
 RUN ln -s /usr/local/python/python-3.6/cv2.cpython-36m-x86_64-linux-gnu.so /opt/conda/lib/python3.6/site-packages/cv2.so
-RUN pip install pandas jupyter ipywidgets
+RUN pip install --no-cache-dir pandas jupyter ipywidgets
 RUN jupyter nbextension enable --py widgetsnbextension
 RUN git clone https://github.com/ayooshkathuria/pytorch-yolo-v3 && cd pytorch-yolo-v3 && wget https://pjreddie.com/media/files/yolov3.weights
 # Add Tini. Tini operates as a process subreaper for jupyter. This prevents