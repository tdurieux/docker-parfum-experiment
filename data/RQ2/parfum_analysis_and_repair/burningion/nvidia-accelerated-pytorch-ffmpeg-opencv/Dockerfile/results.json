{
  "startTime": 1674218994981,
  "endTime": 1674218996443,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 18,
        "columnEnd": 358
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 22,
        "columnEnd": 341
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 22,
        "columnEnd": 341
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#FROM nvcr.io/nvidia/pytorch:18.11-py3\nFROM nvcr.io/nvidia/pytorch:19.02-py3\nRUN apt-get update && apt-get -y --no-install-recommends install autoconf automake build-essential libass-dev libtool pkg-config texinfo zlib1g-dev cmake mercurial libjpeg-dev libpng-dev libtiff-dev libavcodec-dev libavformat-dev libswscale-dev libv4l-dev libxvidcore-dev libx264-dev libx265-dev libnuma-dev libatlas-base-dev libopus-dev libvpx-dev gfortran unzip && rm -rf /var/lib/apt/lists/*;\nRUN git clone https://git.videolan.org/git/ffmpeg/nv-codec-headers.git\nRUN cd nv-codec-headers && make && make install\nRUN git clone https://git.ffmpeg.org/ffmpeg.git\nRUN cd ffmpeg && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-shared --disable-static --enable-cuda --enable-cuvid --enable-libnpp --enable-libvpx --enable-libopus --enable-libx264 --enable-gpl --enable-pic --enable-libass --enable-nvenc --enable-nonfree --enable-libx265 --extra-cflags=\"-I/usr/local/cuda/include/ -fPIC\" --extra-ldflags=\"-L/usr/local/cuda/lib64/ -Wl,-Bsymbolic\" && make -j4 && make install\nRUN wget -O opencv.zip https://github.com/opencv/opencv/archive/4.0.0.zip && unzip opencv.zip && mv opencv-4.0.0 opencv\nRUN wget -O opencv_contrib.zip https://github.com/opencv/opencv_contrib/archive/4.0.0.zip && unzip opencv_contrib.zip && mv opencv_contrib-4.0.0 opencv_contrib\nRUN cd opencv && mkdir build && cd build && cmake -D CMAKE_BUILD_TYPE=RELEASE \\\n\t-D CMAKE_INSTALL_PREFIX=/usr/local \\\n\t-D INSTALL_PYTHON_EXAMPLES=ON \\\n\t-D INSTALL_C_EXAMPLES=OFF \\\n\t-D OPENCV_ENABLE_NONFREE=ON \\\n\t-D OPENCV_EXTRA_MODULES_PATH=/workspace/opencv_contrib/modules \\\n  -D OPENCV_SKIP_PYTHON_LOADER=ON \\\n  -D PYTHON_LIBRARY=/opt/conda/lib/python3.6 \\\n  -D PYTHON_EXECUTABLE=/opt/conda/bin/python3 \\\n  -D PYTHON2_EXECUTABLE=/usr/bin/python2 \\\n  -D WITH_CUDA=ON \\\n  -D ENABLE_FAST_MATH=1 \\\n  -D CUDA_FAST_MATH=1 \\\n  -D WITH_CUBLAS=1 \\\n  -D WITH_FFMPEG=ON \\\n\t-D BUILD_EXAMPLES=ON .. && make -j8 && make install\nRUN cd /workspace/opencv/build/modules/python3 && make && make install\nRUN ln -s /usr/local/python/python-3.6/cv2.cpython-36m-x86_64-linux-gnu.so /opt/conda/lib/python3.6/site-packages/cv2.so\nRUN pip install --no-cache-dir pandas jupyter ipywidgets\nRUN jupyter nbextension enable --py widgetsnbextension\nRUN git clone https://github.com/ayooshkathuria/pytorch-yolo-v3 && cd pytorch-yolo-v3 && wget https://pjreddie.com/media/files/yolov3.weights\n# Add Tini. Tini operates as a process subreaper for jupyter. This prevents\n# kernel crashes.\nENV TINI_VERSION v0.6.0\nADD https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini /usr/bin/tini\nRUN chmod +x /usr/bin/tini\nENTRYPOINT [\"/usr/bin/tini\", \"--\"]\nCOPY requirements.txt .\nRUN python3 -m pip install -r requirements.txt\nCOPY app.py .\nCOPY video-to-json.py /workspace/pytorch-yolo-v3\nCOPY splitter.py .\nCOPY joiner.py .\nCOPY video-edges.py .\nCOPY test-video.mov .\nEXPOSE 5007\nENV NVIDIA_VISIBLE_DEVICES all\nCMD [\"ddtrace-run\", \"python3\", \"app.py\"]\n# uncomment below and comment above to reenable jupyter notebook\n#EXPOSE 8888\n#CMD [\"jupyter\", \"notebook\", \"--port=8888\", \"--no-browser\", \"--ip=0.0.0.0\", \"--allow-root\"]\n"
}