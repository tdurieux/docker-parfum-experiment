{
  "startTime": 1674255621949,
  "endTime": 1674255622882,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Even though we're not building but only installing, we're still doing multi-stage because grafana does not have NPM\nFROM node:18 as builder\n\n# Copy all source files over to our working directory\nWORKDIR /app\nCOPY . .\n\n# The queries are stored separately from the dashboard definitions, for maintainability reasons.\n# The insertqueries script replaces the placeholders in the dashboard files with the actual KQL queries\nWORKDIR /app/config\nRUN chmod +x insertqueries.sh && ./insertqueries.sh\n\n# The healthmodel panel is a third party component, published on NPM.\n# It contains only the built solution, so there is nothing to build, only install.\n# We set the workdir before installing to give us an easy way to copy everything out to the Grafana container.\nWORKDIR /app/healthmodelpanel\nRUN npm install && npm cache clean --force;\n\n# We're using Grafana 8.3.4 now since later versions give us issues with the header settings behind Front Door.\n# As soon as that is resolved, we'll get back on the latest version.\nFROM grafana/grafana:8.3.4\n\n# In order to run unsigned plugins such as our health model panel, we need to explicitly allow them in an env variable.\nENV GF_PLUGINS_ALLOW_LOADING_UNSIGNED_PLUGINS=\"healthmodelpanel\"\n\n# Copy the files from the build container to the Grafana container.\nWORKDIR /var/lib/grafana/plugins/alwayson-healthmodelpanel/\nCOPY --from=builder /app/healthmodelpanel/* ./\nCOPY --from=builder /app/config/grafana.ini /etc/grafana/\nCOPY --from=builder /app/config/provisioning /etc/grafana/provisioning/\n\n# Web server runs on 3000, we'll tell AppService to redirect traffic there.\nEXPOSE 3000/tcp"
}