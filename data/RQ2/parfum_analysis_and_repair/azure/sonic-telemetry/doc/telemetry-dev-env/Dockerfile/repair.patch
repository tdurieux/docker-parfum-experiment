diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/azure/sonic-telemetry/doc/telemetry-dev-env/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/azure/sonic-telemetry/doc/telemetry-dev-env/Dockerfile/repaired.Dockerfile
index 7259c7e..b9e56fd 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/azure/sonic-telemetry/doc/telemetry-dev-env/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/azure/sonic-telemetry/doc/telemetry-dev-env/Dockerfile/repaired.Dockerfile
@@ -2,36 +2,36 @@ FROM ubuntu:18.04
 
 # fundemantals
 RUN apt-get update
-RUN apt-get install -y wget
-RUN apt-get install -y ssh xinetd rsync patch
-RUN apt-get install -y iproute2
-RUN apt-get install -y gcc
-RUN apt-get install -y cmake
-RUN apt-get install -y make
-RUN apt-get install -y openssh-server
-RUN apt-get install -y python3 python3-pip
-RUN apt-get install -y tmux
+RUN apt-get install --no-install-recommends -y wget && rm -rf /var/lib/apt/lists/*;
+RUN apt-get install --no-install-recommends -y ssh xinetd rsync patch && rm -rf /var/lib/apt/lists/*;
+RUN apt-get install --no-install-recommends -y iproute2 && rm -rf /var/lib/apt/lists/*;
+RUN apt-get install --no-install-recommends -y gcc && rm -rf /var/lib/apt/lists/*;
+RUN apt-get install --no-install-recommends -y cmake && rm -rf /var/lib/apt/lists/*;
+RUN apt-get install --no-install-recommends -y make && rm -rf /var/lib/apt/lists/*;
+RUN apt-get install --no-install-recommends -y openssh-server && rm -rf /var/lib/apt/lists/*;
+RUN apt-get install --no-install-recommends -y python3 python3-pip && rm -rf /var/lib/apt/lists/*;
+RUN apt-get install --no-install-recommends -y tmux && rm -rf /var/lib/apt/lists/*;
 
 # install go and configure
 RUN wget https://golang.org/dl/go1.14.14.linux-amd64.tar.gz -O /tmp/go1.14.14.linux-amd64.tar.gz
-RUN tar -C /usr/local -xzf /tmp/go1.14.14.linux-amd64.tar.gz
+RUN tar -C /usr/local -xzf /tmp/go1.14.14.linux-amd64.tar.gz && rm /tmp/go1.14.14.linux-amd64.tar.gz
 RUN mkdir /usr/gopath
 ENV GOPATH="/usr/gopath"
 ENV GOROOT="/usr/local/go"
 ENV PATH="${GOPATH}/bin:${GOROOT}/bin:${PATH}"
 
 # Dev libs required for libyang
-RUN apt-get install -y bison
-RUN apt-get install -y flex
-RUN apt-get install -y libpcre3 libpcre3-dev
+RUN apt-get install --no-install-recommends -y bison && rm -rf /var/lib/apt/lists/*;
+RUN apt-get install --no-install-recommends -y flex && rm -rf /var/lib/apt/lists/*;
+RUN apt-get install --no-install-recommends -y libpcre3 libpcre3-dev && rm -rf /var/lib/apt/lists/*;
 
 # Download libyang and install.
-RUN pip3 install pyang
+RUN pip3 install --no-cache-dir pyang
 RUN wget https://github.com/CESNET/libyang/archive/v1.0.184.tar.gz -O /tmp/libyang-v1.0.184.tar.gz
-RUN tar -C /tmp -xzf /tmp/libyang-v1.0.184.tar.gz
+RUN tar -C /tmp -xzf /tmp/libyang-v1.0.184.tar.gz && rm /tmp/libyang-v1.0.184.tar.gz
 RUN mkdir /tmp/libyang-1.0.184/build && cd /tmp/libyang-1.0.184/build && cmake ..  && make && make install
 
-RUN apt-get install -y redis
+RUN apt-get install --no-install-recommends -y redis && rm -rf /var/lib/apt/lists/*;
 
 RUN sed -i "s/bind .*/bind 127.0.0.1/g" /etc/redis/redis.conf
 RUN echo "unixsocket /var/run/redis/redis.sock" >> /etc/redis/redis.conf