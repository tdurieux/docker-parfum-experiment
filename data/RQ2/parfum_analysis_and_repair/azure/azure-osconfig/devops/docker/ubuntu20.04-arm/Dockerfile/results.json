{
  "startTime": 1674255676480,
  "endTime": 1674255677308,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 21,
        "columnEnd": 66
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 22,
        "columnStart": 21,
        "columnEnd": 6
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 21,
        "columnEnd": 66
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 22,
        "columnStart": 21,
        "columnEnd": 6
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM multiarch/qemu-user-static:x86_64-arm as qemu\nFROM arm32v7/ubuntu:20.04\nCOPY --from=qemu /usr/bin/qemu-arm-static /usr/bin\nARG DEBIAN_FRONTEND=noninteractive\nRUN apt -y update && apt-get -y --no-install-recommends install software-properties-common && rm -rf /var/lib/apt/lists/*;\nRUN apt -y update && apt-get -y --no-install-recommends install \\\n    apt-transport-https \\\n    git \\\n    cmake \\\n    build-essential \\\n    curl \\\n    openssl \\\n    libcurl4-openssl-dev \\\n    libssl-dev \\\n    uuid-dev \\\n    libgtest-dev \\\n    libgmock-dev \\\n    liblttng-ust-dev \\\n    rapidjson-dev \\\n    ninja-build \\\n    wget \\\n    jq \\\n    bc && rm -rf /var/lib/apt/lists/*;\n\nENV OPENSSL_ROOT_DIR=/usr/lib/arm-linux-gnueabihf/\n\nWORKDIR /git\nRUN git clone https://github.com/Kitware/CMake --recursive -b v3.22.0-rc1\nRUN cd CMake && ./bootstrap && make -j$(nproc) && make install && hash -r && rm -rf /git/CMake\nWORKDIR /git\nRUN git clone https://github.com/Tencent/rapidjson --recursive\nRUN cd rapidjson && cmake . -G Ninja && cmake --build . --target install && rm -rf /git/rapidjson"
}