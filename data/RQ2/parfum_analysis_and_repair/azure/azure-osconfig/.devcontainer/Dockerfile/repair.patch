diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/azure/azure-osconfig/.devcontainer/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/azure/azure-osconfig/.devcontainer/Dockerfile/repaired.Dockerfile
index 8b606d5..9ef8174 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/azure/azure-osconfig/.devcontainer/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/azure/azure-osconfig/.devcontainer/Dockerfile/repaired.Dockerfile
@@ -2,8 +2,8 @@
 # Creates an image, pre-provisioned with all necessary SDKs and tools for working with OSConfig
 FROM ubuntu:20.04
 ARG DEBIAN_FRONTEND=noninteractive
-RUN apt -y update && apt-get -y install software-properties-common
-RUN apt -y update && apt-get -y install \
+RUN apt -y update && apt-get -y --no-install-recommends install software-properties-common && rm -rf /var/lib/apt/lists/*;
+RUN apt -y update && apt-get -y --no-install-recommends install \
     apt-transport-https \
     build-essential \
     ca-certificates \
@@ -18,21 +18,21 @@ RUN apt -y update && apt-get -y install \
     libgtest-dev \
     liblttng-ust-dev \
     libssl-dev \
-    ninja-build\
+    ninja-build \
     rapidjson-dev \
     uuid-dev \
-    wget
+    wget && rm -rf /var/lib/apt/lists/*;
 
 # CMake
 RUN git clone https://github.com/Kitware/CMake --recursive -b v3.21.7
 RUN cd CMake && ./bootstrap && make -j$(nproc) && make install && hash -r && rm -rf /git/CMake
 
 # .NET Install
-RUN curl https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > microsoft.gpg && \
+RUN curl -f https://packages.microsoft.com/keys/microsoft.asc | gpg --batch --dearmor > microsoft.gpg && \
     cp ./microsoft.gpg /etc/apt/trusted.gpg.d/ && \
-    curl https://packages.microsoft.com/config/ubuntu/20.04/prod.list > ./microsoft-prod.list && \
+    curl -f https://packages.microsoft.com/config/ubuntu/20.04/prod.list > ./microsoft-prod.list && \
     cp ./microsoft-prod.list /etc/apt/sources.list.d/ && \
-    apt update -y && apt install -y dotnet-sdk-6.0
+    apt update -y && apt install --no-install-recommends -y dotnet-sdk-6.0 && rm -rf /var/lib/apt/lists/*;
 
 # ZSH
 ENV SHELL /bin/zsh
@@ -42,4 +42,4 @@ RUN sh -c "$(wget -O- https://github.com/deluan/zsh-in-docker/releases/download/
 # Terraform
 RUN curl -fsSL https://apt.releases.hashicorp.com/gpg | apt-key add - && \
     apt-add-repository "deb [arch=$(dpkg --print-architecture)] https://apt.releases.hashicorp.com $(lsb_release -cs) main" && \
-    apt-get -y install terraform
\ No newline at end of file
+    apt-get -y --no-install-recommends install terraform && rm -rf /var/lib/apt/lists/*;
\ No newline at end of file