{
  "startTime": 1674216064065,
  "endTime": 1674216065137,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 82
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 82
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 82
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG base_image=ubuntu:xenial\nFROM ${base_image} AS build-env\n\n# Update APT packages\nRUN apt-get update && apt-get install --no-install-recommends -y libssl-dev libffi-dev python3-dev debhelper zlib1g-dev wget && rm -rf /var/lib/apt/lists/*;\n\n# Download Python source code\nARG python_version=\"3.10.4\"\nENV PYTHON_SRC_DIR=/usr/src/python\nRUN mkdir -p ${PYTHON_SRC_DIR} && \\\n    wget -qO- https://www.python.org/ftp/python/${python_version}/Python-${python_version}.tgz \\\n    | tar -xz -C \"${PYTHON_SRC_DIR}\"\n\nWORKDIR /azure-cli\nRUN ${PYTHON_SRC_DIR}/*/configure --srcdir ${PYTHON_SRC_DIR}/* --prefix $(pwd)/python_env &&\\\n    make && \\\n    make install && \\\n    ln /azure-cli/python_env/bin/python3 /azure-cli/python_env/bin/python && \\\n    ln /azure-cli/python_env/bin/pip3 /azure-cli/python_env/bin/pip\n\nENV PATH=/azure-cli/python_env/bin:$PATH\n\nRUN pip install --no-cache-dir wheel\n\nCOPY . .\n\nRUN mkdir -p ./bin/pypi && \\\n    BUILD_STAGINGDIRECTORY=/azure-cli/bin/pypi ./scripts/release/pypi/build.sh && \\\n    if [ -d ./privates ]; then find ./privates -name '*.whl' | xargs pip install; fi && \\\n    find ./bin/pypi -name '*.whl' | xargs pip install &&\n\nARG cli_version=0.0.0-dev\nARG cli_version_revision=1\n\nRUN mkdir -p ./debian && \\\n    CLI_VERSION=${cli_version} CLI_VERSION_REVISION=${cli_version_revision} ./scripts/release/debian/prepare.sh ./debian ./az.completion ./ && \\\n    dpkg-buildpackage -us -uc && \\\n    cp /azure-cli_${cli_version}-${cli_version_revision}_all.deb /azure-cli_all.deb\n\nFROM $base_image AS execution-env\n\nCOPY --from=build-env /azure-cli_all.deb /azure-cli_all.deb\n\nRUN dpkg -i /azure-cli_all.deb && \\\n    rm /azure-cli_all.deb\n"
}