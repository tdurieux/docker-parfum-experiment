{
  "startTime": 1674215929048,
  "endTime": 1674215929692,
  "originalSmells": [
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 16,
        "columnStart": 5,
        "columnEnd": 15
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 5,
        "columnEnd": 101
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM aztk/spark:v0.1.0-spark1.6.3-base\n\nARG R_VERSION=3.4.4\nARG R_BASE_VERSION=${R_VERSION}-1xenial0\nARG BUILD_DATE\n\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends apt-transport-https \\\n        libxml2-dev \\\n        libcairo2-dev \\\n        libsqlite-dev \\\n        libmariadbd-dev \\\n        libmariadb-client-lgpl-dev \\\n        libpq-dev \\\n        libssh2-1-dev \\\n        libcurl4-openssl-dev \\\n        locales \\\n  && apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E298A3A825C0D65DFD57CBB651716619E084DAB9 \\\n  && add-apt-repository 'deb [arch=amd64,i386] https://cran.rstudio.com/bin/linux/ubuntu xenial/' \\\n  && apt-get update \\\n  && apt-get install -y --no-install-recommends r-base=${R_BASE_VERSION} r-base-dev=${R_BASE_VERSION} && rm -rf /var/lib/apt/lists/*;\n\nRUN  mkdir -p /usr/lib/R/etc/ \\\n  && echo \"options(repos = c(CRAN = 'https://cran.rstudio.com/'), download.file.method = 'libcurl')\" >> /usr/lib/R/etc/Rprofile.site \\\n  ## Add a library directory (for user-installed packages)\n  && mkdir -p /usr/lib/R/site-library \\\n  ## Fix library path\n  && echo \"R_LIBS_USER='/usr/lib/R/site-library'\" >> /usr/lib/R/etc/Renviron \\\n  && echo \"R_LIBS=\\${R_LIBS-'/usr/lib/R/site-library:/usr/lib/R/library:/usr/lib/R/library'}\" >> /usr/lib/R/etc/Renviron \\\n  ## install packages from date-locked MRAN snapshot of CRAN\n  && [ -z \"$BUILD_DATE\" ] && BUILD_DATE=$(TZ=\"America/Los_Angeles\" date -I) || true \\\n  && MRAN=https://mran.microsoft.com/snapshot/${BUILD_DATE} \\\n  && echo MRAN=$MRAN >> /etc/environment \\\n  && export MRAN=$MRAN \\\n  && echo \"options(repos = c(CRAN='$MRAN'), download.file.method = 'libcurl'); Sys.setenv(SPARK_HOME ='\"$SPARK_HOME\"')\" >> /usr/lib/R/etc/Rprofile.site \\\n  ## Use littler installation scripts\n  && Rscript -e \"install.packages(c('dplyr', 'docopt', 'tidyverse', 'sparklyr'), repo = '$MRAN', dependencies=TRUE)\" \\\n  && chown -R root:staff /usr/lib/R/site-library \\\n  && chmod -R g+wx /usr/lib/R/site-library \\\n  && ln -s /usr/lib/R/site-library/littler/examples/install2.r /usr/local/bin/install2.r \\\n  && ln -s /usr/lib/R/site-library/littler/examples/installGithub.r /usr/local/bin/installGithub.r \\\n  && ln -s /usr/lib/R/site-library/littler/bin/r /usr/local/bin/r \\\n  ## Clean up from R source install\n  && cd / \\\n  && rm -rf /tmp/* \\\n  && apt-get autoremove -y \\\n  && apt-get autoclean -y\n\nRUN rm /usr/bin/python \\\n  && ln -s /usr/bin/python3.5 /usr/bin/python\n\nRUN echo \"en_US.UTF-8 UTF-8\" >> /etc/locale.gen \\\n  && locale-gen en_US.utf8 \\\n  && /usr/sbin/update-locale LANG=en_US.UTF-8\n\nCMD [\"/bin/bash\"]\n"
}