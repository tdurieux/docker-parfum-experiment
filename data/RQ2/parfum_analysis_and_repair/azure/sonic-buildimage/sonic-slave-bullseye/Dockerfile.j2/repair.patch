diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/azure/sonic-buildimage/sonic-slave-bullseye/Dockerfile.j2 b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/azure/sonic-buildimage/sonic-slave-bullseye/Dockerfile.j2/repaired.Dockerfile
index edac99a..2bffef9 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/azure/sonic-buildimage/sonic-slave-bullseye/Dockerfile.j2
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/azure/sonic-buildimage/sonic-slave-bullseye/Dockerfile.j2/repaired.Dockerfile
@@ -52,7 +52,7 @@ RUN echo "deb [arch=arm64] http://deb.debian.org/debian bullseye main contrib no
 ## Make apt-get non-interactive
 ENV DEBIAN_FRONTEND=noninteractive
 
-RUN apt-get update && apt-get install -y \
+RUN apt-get update && apt-get install --no-install-recommends -y \
         apt-utils \
         default-jre-headless \
         openssh-server \
@@ -86,7 +86,7 @@ RUN apt-get update && apt-get install -y \
         libzmq3-dev \
         jq \
         cron \
-# For quagga build
+
         libreadline-dev \
         texlive-latex-base \
         texlive-plain-generic \
@@ -100,7 +100,7 @@ RUN apt-get update && apt-get install -y \
         libpcre3-dev \
         gawk \
         chrpath \
-# For frr build
+
         libc-ares-dev \
         libsnmp-dev \
         libjson-c-dev \
@@ -111,13 +111,13 @@ RUN apt-get update && apt-get install -y \
         python3-all-dbg \
         install-info \
         logrotate \
-# For libnl3 (local) build
+
         cdbs \
-# For SAI meta build
+
         libxml-simple-perl \
         graphviz \
         aspell \
-# For linux build
+
         bc \
         fakeroot \
         build-essential \
@@ -125,9 +125,9 @@ RUN apt-get update && apt-get install -y \
         quilt \
         stgit \
         sbsigntool \
-# For platform-modules build
+
         module-assistant \
-# For thrift build\
+
         gem2deb \
         libevent-dev \
         libglib2.0-dev \
@@ -143,7 +143,7 @@ RUN apt-get update && apt-get install -y \
         libslf4j-java \
         libservlet3.1-java \
         pkg-php-tools \
-# For mellanox sdk build
+
         libpcre3 \
         libpcre3-dev \
         byacc \
@@ -156,22 +156,22 @@ RUN apt-get update && apt-get install -y \
         libdb-dev \
         libiptc-dev \
         libxtables-dev \
-# For mellanox sai build
+
         libtool-bin \
         libxml2-dev \
-# For BFN sdk build
+
         libusb-1.0-0-dev \
         libcurl3-nss-dev \
         libunwind8-dev \
         telnet \
         libc-ares2 \
         libgoogle-perftools4 \
-# For build image
+
         cpio \
         squashfs-tools \
         zip \
-# For broadcom sdk build
-{%- if CONFIGURED_ARCH == "amd64" %}
+
+{%- if CONFIGURED_ARCH == "amd64" %} && rm -rf /var/lib/apt/lists/*;
         linux-compiler-gcc-10-x86 \
 {%- endif %}
 {%- if CONFIGURED_ARCH == "armhf" %}
@@ -371,8 +371,8 @@ RUN apt upgrade -y base-files
 # Build fix for ARMHF bullseye libsairedis
 {%- if CONFIGURED_ARCH == "armhf" %}
        # Install doxygen build dependency packages
-       RUN apt install -y libxapian-dev yui-compressor texlive-extra-utils \
-           texlive-font-utils rdfind llvm-11-dev libclang-11-dev sassc faketime mat2
+       RUN apt install --no-install-recommends -y libxapian-dev yui-compressor texlive-extra-utils \
+           texlive-font-utils rdfind llvm-11-dev libclang-11-dev sassc faketime mat2 && rm -rf /var/lib/apt/lists/*;
 
        # Update doxygen with 64bit file offset patch
        RUN dget -u http://deb.debian.org/debian/pool/main/d/doxygen/doxygen_1.9.1-2.dsc && \
@@ -385,7 +385,7 @@ RUN apt upgrade -y base-files
 
        # Aspell is unable to locate the language dictionaries.
        # Re-installing aspell-en dictionary to fix it.
-       RUN apt-get install --reinstall -y aspell-en
+       RUN apt-get install --no-install-recommends --reinstall -y aspell-en && rm -rf /var/lib/apt/lists/*;
 
        # workaround because of https://bugs.launchpad.net/qemu/+bug/1805913, just disable aspell
        # Issue now being tracked here - https://gitlab.com/qemu-project/qemu/-/issues/263
@@ -404,7 +404,7 @@ RUN sudo augtool --autosave "set /files/etc/dpkg/dpkg.cfg/force-confold"
 RUN apt-get -y build-dep linux
 
 # For gobgp and telemetry build
-RUN apt-get install -y golang-1.15 && ln -s /usr/lib/go-1.15 /usr/local/go
+RUN apt-get install --no-install-recommends -y golang-1.15 && ln -s /usr/lib/go-1.15 /usr/local/go && rm -rf /var/lib/apt/lists/*;
 {%- if ENABLE_FIPS_FEATURE == "y" %}
 RUN wget -O golang-go.deb 'https://sonicstorage.blob.core.windows.net/public/fips/bullseye/0.1/{{ CONFIGURED_ARCH }}/golang-1.15-go_1.15.15-1~deb11u4%2Bfips_{{ CONFIGURED_ARCH }}.deb' \
  && wget -O golang-src.deb 'https://sonicstorage.blob.core.windows.net/public/fips/bullseye/0.1/{{ CONFIGURED_ARCH }}/golang-1.15-src_1.15.15-1~deb11u4%2Bfips_{{ CONFIGURED_ARCH }}.deb' \
@@ -413,23 +413,23 @@ RUN wget -O golang-go.deb 'https://sonicstorage.blob.core.windows.net/public/fip
  && rm golang-go.deb golang-src.deb
 {%- endif %}
 
-RUN pip3 install --upgrade pip
+RUN pip3 install --no-cache-dir --upgrade pip
 RUN apt-get purge -y python3-pip python3-yaml
 
 # For building Python packages
-RUN pip3 install setuptools==49.6.00
-RUN pip3 install wheel==0.35.1
+RUN pip3 install --no-cache-dir setuptools==49.6.00
+RUN pip3 install --no-cache-dir wheel==0.35.1
 
 # For building sonic-utilities
-RUN pip3 install fastentrypoints mock
+RUN pip3 install --no-cache-dir fastentrypoints mock
 
 # For running Python unit tests
-RUN pip3 install pytest-runner==5.2
-RUN pip3 install nose==1.3.7
-RUN pip3 install mockredispy==2.9.3
+RUN pip3 install --no-cache-dir pytest-runner==5.2
+RUN pip3 install --no-cache-dir nose==1.3.7
+RUN pip3 install --no-cache-dir mockredispy==2.9.3
 
 # For p4 build
-RUN pip3 install \
+RUN pip3 install --no-cache-dir \
          ctypesgen==1.0.2 \
          crc16
 
@@ -437,43 +437,43 @@ RUN pip3 install \
 # Install pyangbind here, outside sonic-config-engine dependencies, as pyangbind causes enum34 to be installed.
 # enum34 causes Python 're' package to not work properly as it redefines an incompatible enum.py module
 # https://github.com/robshakir/pyangbind/issues/232
-RUN pip3 install pyangbind==0.8.1
+RUN pip3 install --no-cache-dir pyangbind==0.8.1
 RUN pip3 uninstall -y enum34
 
 # For templating
-RUN pip3 install j2cli==0.3.10
+RUN pip3 install --no-cache-dir j2cli==0.3.10
 
 # For sonic-mgmt-framework
-RUN pip3 install "PyYAML==5.4.1"
-RUN pip3 install "lxml==4.6.2"
+RUN pip3 install --no-cache-dir "PyYAML==5.4.1"
+RUN pip3 install --no-cache-dir "lxml==4.6.2"
 
 # For sonic-platform-common testing
-RUN pip3 install redis
+RUN pip3 install --no-cache-dir redis
 
 # For vs image build
-RUN pip3 install pexpect==4.8.0
+RUN pip3 install --no-cache-dir pexpect==4.8.0
 
 # For sonic-swss-common testing
-RUN pip3 install Pympler==0.8
+RUN pip3 install --no-cache-dir Pympler==0.8
 
 # For sonic_yang_model build
-RUN pip3 install pyang==2.4.0
+RUN pip3 install --no-cache-dir pyang==2.4.0
 
 # For mgmt-framework build
-RUN pip3 install mmh3==2.5.1
+RUN pip3 install --no-cache-dir mmh3==2.5.1
 
-RUN pip3 install parameterized==0.8.1
+RUN pip3 install --no-cache-dir parameterized==0.8.1
 
-RUN apt-get install -y xsltproc
+RUN apt-get install --no-install-recommends -y xsltproc && rm -rf /var/lib/apt/lists/*;
 
 # Install dependencies for isc-dhcp-relay build
 RUN apt-get -y build-dep isc-dhcp
 
 # Install vim
-RUN apt-get install -y vim
+RUN apt-get install --no-install-recommends -y vim && rm -rf /var/lib/apt/lists/*;
 
 # Install rsyslog
-RUN apt-get install -y rsyslog
+RUN apt-get install --no-install-recommends -y rsyslog && rm -rf /var/lib/apt/lists/*;
 
 RUN cd /usr/src/gtest && cmake . && make -C /usr/src/gtest
 
@@ -485,17 +485,17 @@ RUN git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git /
 ENV PATH /usr/share/depot_tools:$PATH
 
 # Install dependencies for dhcp relay test
-RUN pip3 install parameterized==0.8.1
-RUN pip3 install pyfakefs
+RUN pip3 install --no-cache-dir parameterized==0.8.1
+RUN pip3 install --no-cache-dir pyfakefs
 
 # Install docker engine 20.10 inside docker and enable experimental feature
 RUN apt-get update
-RUN apt-get install -y \
+RUN apt-get install --no-install-recommends -y \
            apt-transport-https \
            ca-certificates \
            curl \
            gnupg2 \
-           software-properties-common
+           software-properties-common && rm -rf /var/lib/apt/lists/*;
 {%- if CONFIGURED_ARCH == "armhf" %}
     RUN update-ca-certificates --fresh
 {%- endif %}
@@ -505,20 +505,20 @@ RUN add-apt-repository \
            $(lsb_release -cs) \
            stable"
 RUN apt-get update
-RUN apt-get install -y docker-ce=5:20.10.14~3-0~debian-bullseye docker-ce-cli=5:20.10.14~3-0~debian-bullseye containerd.io=1.5.11-1
+RUN apt-get install --no-install-recommends -y docker-ce=5:20.10.14~3-0~debian-bullseye docker-ce-cli=5:20.10.14~3-0~debian-bullseye containerd.io=1.5.11-1 && rm -rf /var/lib/apt/lists/*;
 RUN echo "DOCKER_OPTS=\"--experimental --storage-driver=vfs {{ DOCKER_EXTRA_OPTS }}\"" >> /etc/default/docker
 RUN update-alternatives --set iptables /usr/sbin/iptables-legacy
 
 # Install m2crypto package, needed by SWI tools
-RUN pip3 install m2crypto==0.36.0
+RUN pip3 install --no-cache-dir m2crypto==0.36.0
 
 # Install swi tools
-RUN pip3 install git+https://github.com/aristanetworks/swi-tools.git@bead66bf261770237f7dd21ace3774ba04a017e9
+RUN pip3 install --no-cache-dir git+https://github.com/aristanetworks/swi-tools.git@bead66bf261770237f7dd21ace3774ba04a017e9
 
 {% if CONFIGURED_ARCH != "amd64" -%}
 # Install node.js for azure pipeline
-RUN curl -sL https://deb.nodesource.com/setup_14.x | bash -
-RUN apt-get install -y nodejs
+RUN curl -f -sL https://deb.nodesource.com/setup_14.x | bash -
+RUN apt-get install --no-install-recommends -y nodejs && rm -rf /var/lib/apt/lists/*;
 
 # Tell azure pipeline to use node.js in the docker
 LABEL "com.azure.dev.pipelines.agent.handler.node.path"="/usr/bin/node"
@@ -531,5 +531,5 @@ ARG bazelisk_url=https://github.com/bazelbuild/bazelisk/releases/latest/download
 RUN curl -fsSL -o /usr/local/bin/bazel ${bazelisk_url} && chmod 755 /usr/local/bin/bazel
 # Bazel requires "python"
 # TODO(PINS): remove when Bazel is okay with "python3" binary name
-RUN apt install -y python-is-python3
+RUN apt install --no-install-recommends -y python-is-python3 && rm -rf /var/lib/apt/lists/*;
 {% endif -%}