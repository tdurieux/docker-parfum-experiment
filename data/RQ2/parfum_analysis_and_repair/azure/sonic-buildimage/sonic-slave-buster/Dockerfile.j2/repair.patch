diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/azure/sonic-buildimage/sonic-slave-buster/Dockerfile.j2 b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/azure/sonic-buildimage/sonic-slave-buster/Dockerfile.j2/repaired.Dockerfile
index 2f3cadf..148c533 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/azure/sonic-buildimage/sonic-slave-buster/Dockerfile.j2
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/azure/sonic-buildimage/sonic-slave-buster/Dockerfile.j2/repaired.Dockerfile
@@ -49,7 +49,7 @@ RUN echo "deb [arch=arm64] http://deb.debian.org/debian buster main contrib non-
 ## Make apt-get non-interactive
 ENV DEBIAN_FRONTEND=noninteractive
 
-RUN apt-get update && apt-get install -y \
+RUN apt-get update && apt-get install --no-install-recommends -y \
         apt-utils \
         default-jre-headless \
         openssh-server \
@@ -82,7 +82,7 @@ RUN apt-get update && apt-get install -y \
         libzmq5 \
         libzmq3-dev \
         jq \
-# For quagga build
+
         libreadline-dev \
         texlive-latex-base \
         texlive-generic-recommended \
@@ -96,7 +96,7 @@ RUN apt-get update && apt-get install -y \
         libpcre2-dev \
         gawk \
         chrpath \
-# For frr build
+
         libc-ares-dev \
         libsnmp-dev \
         libjson-c3 \
@@ -108,20 +108,20 @@ RUN apt-get update && apt-get install -y \
         python3-all-dbg \
         install-info \
         logrotate \
-# For libnl3 (local) build
+
         cdbs \
-# For SAI meta build
+
         libxml-simple-perl \
         graphviz \
         aspell \
-# For SAI meta rpc build - make rpc
+
         libgetopt-long-descriptive-perl \
         libconst-fast-perl \
         libtemplate-perl \
         libnamespace-autoclean-perl \
         libmoose-perl \
         libmoosex-aliases-perl \
-# For linux build
+
         bc \
         fakeroot \
         build-essential \
@@ -129,9 +129,9 @@ RUN apt-get update && apt-get install -y \
         quilt \
         stgit \
         sbsigntool \
-# For platform-modules build
+
         module-assistant \
-# For thrift build\
+
         gem2deb \
         libevent-dev \
         libglib2.0-dev \
@@ -149,7 +149,7 @@ RUN apt-get update && apt-get install -y \
         libservlet3.1-java \
         qt5-default \
         pkg-php-tools \
-# For mellanox sdk build
+
         libpcre3 \
         libpcre3-dev \
         byacc \
@@ -162,22 +162,22 @@ RUN apt-get update && apt-get install -y \
         libdb-dev \
         iptables-dev \
         ctags \
-# For mellanox sai build
+
         libtool-bin \
         libxml2-dev \
-# For BFN sdk build
+
         libusb-1.0-0-dev \
         libcurl3-nss-dev \
         libunwind8-dev \
         telnet \
         libc-ares2 \
         libgoogle-perftools4 \
-# For build image
+
         cpio \
         squashfs-tools \
         zip \
-# For broadcom sdk build
-{%- if CONFIGURED_ARCH == "amd64" %}
+
+{%- if CONFIGURED_ARCH == "amd64" %} && rm -rf /var/lib/apt/lists/*;
         linux-compiler-gcc-8-x86 \
 {%- endif %}
 {%- if CONFIGURED_ARCH == "armhf" %}
@@ -370,18 +370,18 @@ RUN apt-get update && apt-get install -y \
         auditd
 
 # For iproute2
-RUN apt-get install -y -t buster-backports \
+RUN apt-get install --no-install-recommends -y -t buster-backports \
         libbpf-dev \
         dwz \
-        debhelper
+        debhelper && rm -rf /var/lib/apt/lists/*;
 
 RUN apt-get -y build-dep openssh
 
 # Build fix for ARMHF buster libsairedis
 {%- if CONFIGURED_ARCH == "armhf" %}
        # Install doxygen build dependency packages
-       RUN apt install -y libxapian-dev yui-compressor libclang-3.9-dev texlive-extra-utils \
-           texlive-font-utils  rdfind llvm-6.0-dev libclang-6.0-dev sassc
+       RUN apt install --no-install-recommends -y libxapian-dev yui-compressor libclang-3.9-dev texlive-extra-utils \
+           texlive-font-utils rdfind llvm-6.0-dev libclang-6.0-dev sassc && rm -rf /var/lib/apt/lists/*;
 
        # Update doxygen with 64bit file offset patch
        RUN dget -u http://deb.debian.org/debian/pool/main/d/doxygen/doxygen_1.8.13-10.dsc && \
@@ -394,7 +394,7 @@ RUN apt-get -y build-dep openssh
 
        # Aspell is unable to locate the language dictionaries.
        # Re-installing aspell-en dictionary to fix it.
-       RUN apt-get install --reinstall -y aspell-en
+       RUN apt-get install --no-install-recommends --reinstall -y aspell-en && rm -rf /var/lib/apt/lists/*;
 
        # workaround because of https://bugs.launchpad.net/qemu/+bug/1805913, just disable aspell
        RUN cp /bin/true /usr/bin/aspell
@@ -427,35 +427,35 @@ RUN export VERSION=1.14.2 \
  && echo 'export PATH=$PATH:$GOROOT/bin' >> /etc/bash.bashrc \
  && rm go$VERSION.linux-*.tar.gz
 
-RUN pip3 install --upgrade pip
-RUN pip2 install --upgrade 'pip<21'
+RUN pip3 install --no-cache-dir --upgrade pip
+RUN pip2 install --no-cache-dir --upgrade 'pip<21'
 RUN apt-get purge -y python-pip python3-pip python3-yaml
 
 # For building Python packages
-RUN pip2 install setuptools==40.8.0
-RUN pip2 install wheel==0.35.1
-RUN pip3 install setuptools==49.6.00
-RUN pip3 install wheel==0.35.1
+RUN pip2 install --no-cache-dir setuptools==40.8.0
+RUN pip2 install --no-cache-dir wheel==0.35.1
+RUN pip3 install --no-cache-dir setuptools==49.6.00
+RUN pip3 install --no-cache-dir wheel==0.35.1
 
 # For building sonic-utilities
-RUN pip2 install fastentrypoints
-RUN pip3 install fastentrypoints
+RUN pip2 install --no-cache-dir fastentrypoints
+RUN pip3 install --no-cache-dir fastentrypoints
 
 # For running Python unit tests
-RUN pip2 install pytest-runner==4.4
-RUN pip3 install pytest-runner==5.2
-RUN pip2 install nose==1.3.7
-RUN pip3 install nose==1.3.7
-RUN pip2 install mockredispy==2.9.3
-RUN pip3 install mockredispy==2.9.3
+RUN pip2 install --no-cache-dir pytest-runner==4.4
+RUN pip3 install --no-cache-dir pytest-runner==5.2
+RUN pip2 install --no-cache-dir nose==1.3.7
+RUN pip3 install --no-cache-dir nose==1.3.7
+RUN pip2 install --no-cache-dir mockredispy==2.9.3
+RUN pip3 install --no-cache-dir mockredispy==2.9.3
 
 # For Python 2 unit tests, we need 'mock'. The last version of 'mock'
 # which supports Python 2 is 3.0.5. In Python 3, 'mock' is part of 'unittest'
 # in the standard library
-RUN pip2 install mock==3.0.5
+RUN pip2 install --no-cache-dir mock==3.0.5
 
 # For p4 build
-RUN pip2 install \
+RUN pip2 install --no-cache-dir \
          ctypesgen==1.0.2 \
          crc16
 
@@ -463,51 +463,51 @@ RUN pip2 install \
 # Install pyangbind here, outside sonic-config-engine dependencies, as pyangbind causes enum34 to be installed.
 # enum34 causes Python 're' package to not work properly as it redefines an incompatible enum.py module
 # https://github.com/robshakir/pyangbind/issues/232
-RUN pip3 install pyangbind==0.8.1
+RUN pip3 install --no-cache-dir pyangbind==0.8.1
 RUN pip3 uninstall -y enum34
 
 # For templating
-RUN pip2 install j2cli==0.3.10
+RUN pip2 install --no-cache-dir j2cli==0.3.10
 # Note: Jinja2 depends on MarkupSafe, however markupsafe 2.1.0 breaks Jinja2 2.10
 # Debian buster dist-packages include python3-markupsafe (1.1.0-1) and python3-jinja2 (2.10-2)
 # If not pinning the versions, any requirement like `MarkupSafe>=2.0` will pull latest into site-packages and mess up.
-RUN pip3 install MarkupSafe==2.0.1
-RUN pip3 install Jinja2==3.0.3
+RUN pip3 install --no-cache-dir MarkupSafe==2.0.1
+RUN pip3 install --no-cache-dir Jinja2==3.0.3
 
 # For sonic-mgmt-framework
-RUN pip2 install "PyYAML==5.4.1"
-RUN pip3 install "PyYAML==5.4.1"
-RUN pip2 install "lxml==4.6.5"
-RUN pip3 install "lxml==4.6.5"
+RUN pip2 install --no-cache-dir "PyYAML==5.4.1"
+RUN pip3 install --no-cache-dir "PyYAML==5.4.1"
+RUN pip2 install --no-cache-dir "lxml==4.6.5"
+RUN pip3 install --no-cache-dir "lxml==4.6.5"
 
 # For sonic-platform-common testing
-RUN pip3 install redis
+RUN pip3 install --no-cache-dir redis
 
 # For vs image build
-RUN pip2 install pexpect==4.6.0
-RUN pip3 install pexpect==4.8.0
+RUN pip2 install --no-cache-dir pexpect==4.6.0
+RUN pip3 install --no-cache-dir pexpect==4.8.0
 
 # For sonic-swss-common testing
-RUN pip2 install Pympler==0.8
-RUN pip3 install Pympler==0.8
+RUN pip2 install --no-cache-dir Pympler==0.8
+RUN pip3 install --no-cache-dir Pympler==0.8
 
 # For sonic_yang_model build
-RUN pip3 install pyang==2.4.0
+RUN pip3 install --no-cache-dir pyang==2.4.0
 
 # For mgmt-framework build
-RUN pip2 install mmh3==2.5.1
-RUN pip3 install mmh3==2.5.1
+RUN pip2 install --no-cache-dir mmh3==2.5.1
+RUN pip3 install --no-cache-dir mmh3==2.5.1
 
-RUN apt-get install -y xsltproc
+RUN apt-get install --no-install-recommends -y xsltproc && rm -rf /var/lib/apt/lists/*;
 
 # Install dependencies for isc-dhcp-relay build
 RUN apt-get -y build-dep isc-dhcp
 
 # Install vim
-RUN apt-get install -y vim
+RUN apt-get install --no-install-recommends -y vim && rm -rf /var/lib/apt/lists/*;
 
 # Install rsyslog
-RUN apt-get install -y rsyslog
+RUN apt-get install --no-install-recommends -y rsyslog && rm -rf /var/lib/apt/lists/*;
 
 RUN cd /usr/src/gtest && cmake . && make -C /usr/src/gtest
 
@@ -518,18 +518,18 @@ EXPOSE 22
 RUN git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git /usr/share/depot_tools
 ENV PATH /usr/share/depot_tools:$PATH
 
-# Install dependencies for dhcp relay test 
-RUN pip3 install parameterized==0.8.1
-RUN pip3 install pyfakefs
+# Install dependencies for dhcp relay test
+RUN pip3 install --no-cache-dir parameterized==0.8.1
+RUN pip3 install --no-cache-dir pyfakefs
 
 # Install docker engine 17.03.2~ce-0 inside docker and enable experimental feature
 RUN apt-get update
-RUN apt-get install -y \
+RUN apt-get install --no-install-recommends -y \
            apt-transport-https \
            ca-certificates \
            curl \
            gnupg2 \
-           software-properties-common
+           software-properties-common && rm -rf /var/lib/apt/lists/*;
 {%- if CONFIGURED_ARCH == "armhf" %}
     RUN update-ca-certificates --fresh
 {%- endif %}
@@ -539,20 +539,20 @@ RUN add-apt-repository \
            $(lsb_release -cs) \
            stable"
 RUN apt-get update
-RUN apt-get install -y docker-ce=5:18.09.5~3-0~debian-buster docker-ce-cli=5:18.09.5~3-0~debian-buster
+RUN apt-get install --no-install-recommends -y docker-ce=5:18.09.5~3-0~debian-buster docker-ce-cli=5:18.09.5~3-0~debian-buster && rm -rf /var/lib/apt/lists/*;
 RUN echo "DOCKER_OPTS=\"--experimental --storage-driver=vfs {{ DOCKER_EXTRA_OPTS }}\"" >> /etc/default/docker
 RUN update-alternatives --set iptables /usr/sbin/iptables-legacy
 
 # Install m2crypto package, needed by SWI tools
-RUN pip2 install m2crypto==0.36.0
+RUN pip2 install --no-cache-dir m2crypto==0.36.0
 
 # Install swi tools
-RUN pip3 install git+https://github.com/aristanetworks/swi-tools.git@bead66bf261770237f7dd21ace3774ba04a017e9
+RUN pip3 install --no-cache-dir git+https://github.com/aristanetworks/swi-tools.git@bead66bf261770237f7dd21ace3774ba04a017e9
 
 {% if CONFIGURED_ARCH != "amd64" -%}
 # Install node.js for azure pipeline
-RUN curl -sL https://deb.nodesource.com/setup_14.x | bash -
-RUN apt-get install -y nodejs
+RUN curl -f -sL https://deb.nodesource.com/setup_14.x | bash -
+RUN apt-get install --no-install-recommends -y nodejs && rm -rf /var/lib/apt/lists/*;
 
 # Tell azure pipeline to use node.js in the docker
 LABEL "com.azure.dev.pipelines.agent.handler.node.path"="/usr/bin/node"