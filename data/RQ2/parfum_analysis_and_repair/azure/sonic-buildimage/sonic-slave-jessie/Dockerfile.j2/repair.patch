diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/azure/sonic-buildimage/sonic-slave-jessie/Dockerfile.j2 b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/azure/sonic-buildimage/sonic-slave-jessie/Dockerfile.j2/repaired.Dockerfile
index 1d98e6d..ec5090f 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/azure/sonic-buildimage/sonic-slave-jessie/Dockerfile.j2
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/azure/sonic-buildimage/sonic-slave-jessie/Dockerfile.j2/repaired.Dockerfile
@@ -34,7 +34,7 @@ RUN echo "deb [arch=arm64] http://archive.debian.org/debian jessie main contrib
 ## Make apt-get non-interactive
 ENV DEBIAN_FRONTEND=noninteractive
 
-RUN apt-get update && apt-get install -y \
+RUN apt-get update && apt-get install --no-install-recommends -y \
         apt-utils \
         default-jre-headless \
         openssh-server \
@@ -65,7 +65,7 @@ RUN apt-get update && apt-get install -y \
         libswitch-perl \
         dh-systemd \
         jq \
-# For quagga build
+
         libreadline-dev \
         texlive-latex-base \
         texlive-generic-recommended \
@@ -79,7 +79,7 @@ RUN apt-get update && apt-get install -y \
         libpcre3-dev \
         gawk \
         chrpath \
-# For frr build
+
         libc-ares-dev \
         hardening-wrapper \
         libsnmp-dev \
@@ -88,22 +88,22 @@ RUN apt-get update && apt-get install -y \
         libsystemd-dev \
         python-ipaddr \
         install-info \
-# For libnl3 (local) build
+
         cdbs \
-# For SAI meta build
+
         libxml-simple-perl \
         graphviz \
         aspell \
-# For linux build
+
         bc \
         fakeroot \
         build-essential \
         devscripts \
         quilt \
         stgit \
-# For platform-modules build
+
         module-assistant \
-# For thrift build\
+
         gem2deb \
         libboost-all-dev \
         libevent-dev \
@@ -124,7 +124,7 @@ RUN apt-get update && apt-get install -y \
         libservlet3.1-java \
         qt5-default \
         pkg-php-tools \
-# For mellanox sdk build
+
         libpcre3 \
         libpcre3-dev \
         byacc \
@@ -138,21 +138,21 @@ RUN apt-get update && apt-get install -y \
         iptables-dev \
         swig \
         ctags \
-# For mellanox sai build
+
         libtool-bin \
         libxml2-dev \
-# For BFN sdk build
+
         libusb-1.0-0-dev \
         libcurl3-nss-dev \
         libunwind8-dev \
         telnet \
         libc-ares2 \
         libgoogle-perftools4 \
-# For build image
+
         cpio \
         squashfs-tools \
         zip \
-{%- if CONFIGURED_ARCH == "amd64" %}
+{%- if CONFIGURED_ARCH == "amd64" %} && rm -rf /var/lib/apt/lists/*;
 # For broadcom sdk build
         linux-compiler-gcc-4.9-x86 \
 {%- endif %}
@@ -281,37 +281,37 @@ RUN export VERSION=1.14.2 \
 RUN python2 -m pip install -U pip==9.0.3
 
 # For p4 build
-RUN pip install \
+RUN pip install --no-cache-dir \
         ctypesgen==0.r125 \
         crc16
 
 # For sonic config engine testing
-RUN pip install pyangbind==0.6.0
+RUN pip install --no-cache-dir pyangbind==0.6.0
 # Note: force upgrade debian packaged jinja2, if installed
-RUN pip install --force-reinstall --upgrade "jinja2>=2.10"
+RUN pip install --no-cache-dir --force-reinstall --upgrade "jinja2>=2.10"
 
 # For templating (requiring jinja2)
-RUN pip install j2cli==0.3.10
+RUN pip install --no-cache-dir j2cli==0.3.10
 
 # For vs image build
-RUN pip install pexpect==4.6.0
+RUN pip install --no-cache-dir pexpect==4.6.0
 
 # For sonic-utilities build
-RUN pip install mockredispy==2.9.3
-RUN pip install pytest-runner==4.4
-RUN pip install setuptools==40.8.0
+RUN pip install --no-cache-dir mockredispy==2.9.3
+RUN pip install --no-cache-dir pytest-runner==4.4
+RUN pip install --no-cache-dir setuptools==40.8.0
 
 # For sonic-swss-common testing
-RUN pip install Pympler==0.8
+RUN pip install --no-cache-dir Pympler==0.8
 
 # Install dependencies for isc-dhcp-relay build
 RUN apt-get -y build-dep isc-dhcp
 
 # Install vim
-RUN apt-get install -y vim
+RUN apt-get install --no-install-recommends -y vim && rm -rf /var/lib/apt/lists/*;
 
 # Install rsyslog
-RUN apt-get install -y rsyslog
+RUN apt-get install --no-install-recommends -y rsyslog && rm -rf /var/lib/apt/lists/*;
 
 RUN cd /usr/src/gtest && cmake . && make -C /usr/src/gtest
 
@@ -324,12 +324,12 @@ ENV PATH /usr/share/depot_tools:$PATH
 
 # Install docker engine 17.03.2~ce-0 inside docker and enable experimental feature
 RUN apt-get update
-RUN apt-get install -y \
+RUN apt-get install --no-install-recommends -y \
            apt-transport-https \
            ca-certificates \
            curl \
            gnupg2 \
-           software-properties-common
+           software-properties-common && rm -rf /var/lib/apt/lists/*;
 RUN curl -fsSL https://download.docker.com/linux/debian/gpg | sudo apt-key add -
 RUN add-apt-repository \
            "deb [arch={{ CONFIGURED_ARCH }}] https://download.docker.com/linux/debian \
@@ -337,21 +337,21 @@ RUN add-apt-repository \
            stable"
 RUN apt-get update
 {%- if CONFIGURED_ARCH == "amd64" %}
-RUN apt-get install -y docker-ce=17.03.2~ce-0~debian-jessie
+RUN apt-get install --no-install-recommends -y docker-ce=17.03.2~ce-0~debian-jessie && rm -rf /var/lib/apt/lists/*;
 {%- elif CONFIGURED_ARCH == "arm64" %}
-RUN apt-get install -y docker-ce=18.03.1~ce-0~debian
+RUN apt-get install --no-install-recommends -y docker-ce=18.03.1~ce-0~debian && rm -rf /var/lib/apt/lists/*;
 {%- elif CONFIGURED_ARCH == "armhf" %}
-RUN apt-get install -y docker-ce=18.06.3~ce~3-0~debian
+RUN apt-get install --no-install-recommends -y docker-ce=18.06.3~ce~3-0~debian && rm -rf /var/lib/apt/lists/*;
 {%- endif %}
 RUN echo "DOCKER_OPTS=\"--experimental --storage-driver=vfs {{ DOCKER_EXTRA_OPTS }}\"" >> /etc/default/docker
 
 # For jenkins slave
 RUN echo "deb [arch={{ CONFIGURED_ARCH }}] http://archive.debian.org/debian jessie-backports main" >> /etc/apt/sources.list
 RUN apt-get -o Acquire::Check-Valid-Until=false update
-RUN apt-get -y -o Acquire::Check-Valid-Until=false install ca-certificates-java=20161107~bpo8+1 openjdk-8-jdk
+RUN apt-get -y --no-install-recommends -o Acquire::Check-Valid-Until=false install ca-certificates-java=20161107~bpo8+1 openjdk-8-jdk && rm -rf /var/lib/apt/lists/*;
 
 # Install m2crypto package, needed by SWI tools
-RUN pip install m2crypto==0.36.0
+RUN pip install --no-cache-dir m2crypto==0.36.0
 
 # Install swi tools
 RUN python -m pip install git+https://github.com/aristanetworks/swi-tools.git@d51761ec0bb93c73039233f3c01ed48235ffad00