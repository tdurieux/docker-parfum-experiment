{
  "startTime": 1674248645139,
  "endTime": 1674248646145,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 125
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 125
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 80,
        "lineEnd": 80,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 81,
        "lineEnd": 81,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 82,
        "lineEnd": 82,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 83,
        "lineEnd": 83,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 28,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 28,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 25
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 21
      }
    }
  ],
  "repairedDockerfile": "##\n## Copyright (c) 2016-2021 NVIDIA CORPORATION & AFFILIATES.\n## Apache-2.0\n##\n## Licensed under the Apache License, Version 2.0 (the \"License\");\n## you may not use this file except in compliance with the License.\n## You may obtain a copy of the License at\n##\n## http://www.apache.org/licenses/LICENSE-2.0\n##\n## Unless required by applicable law or agreed to in writing, software\n## distributed under the License is distributed on an \"AS IS\" BASIS,\n## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n## See the License for the specific language governing permissions and\n## limitations under the License.\n##\n{% from \"dockers/dockerfile-macros.j2\" import install_debian_packages, install_python_wheels, copy_files %}\nFROM docker-syncd-mlnx-{{DOCKER_USERNAME}}:{{DOCKER_USERTAG}}\n\n## Make apt-get non-interactive\nENV DEBIAN_FRONTEND=noninteractive\n\nRUN mkdir -p /var/run/sx_sdk\n\nRUN apt-get purge -y syncd\n\n## Pre-install the fundamental packages\nRUN apt-get update \\\n && apt-get -y --no-install-recommends install \\\n    net-tools \\\n    python-setuptools \\\n    build-essential \\\n    libssl-dev \\\n    libffi-dev \\\n    python-dev \\\n    wget \\\n    cmake \\\n    libqt5core5a \\\n    libqt5network5 \\\n    libboost-atomic1.74.0 && rm -rf /var/lib/apt/lists/*;\n\n# Build and install python-scapy\nRUN curl -f https://ftp.us.debian.org/debian/pool/main/s/scapy/python-scapy_2.4.0-2_all.deb --output python-scapy_2.4.0-2_all.deb \\\n && dpkg -i python-scapy_2.4.0-2_all.deb \\\n && apt install -y -f\n\n{% if docker_syncd_mlnx_rpc_debs.strip() -%}\n# Copy locally-built Debian package dependencies\n{{ copy_files(\"debs/\", docker_syncd_mlnx_rpc_debs.split(' '), \"/debs/\") }}\n{% endif %}\n\n{% if docker_syncd_mlnx_rpc_pydebs.strip() -%}\n# Copy locally-built Debian package dependencies\n{{ copy_files(\"python-debs/\", docker_syncd_mlnx_rpc_pydebs.split(' '), \"/debs/\") }}\n{% endif %}\n\n{% if docker_syncd_mlnx_rpc_debs.strip() -%}\n# Install locally-built Debian packages and implicitly install their dependencies\n{{ install_debian_packages(docker_syncd_mlnx_rpc_debs.split(' ')) }}\n{% endif %}\n\n{% if docker_syncd_mlnx_rpc_pydebs.strip() -%}\n# Install locally-built Debian packages and implicitly install their dependencies\n{{ install_debian_packages(docker_syncd_mlnx_rpc_pydebs.split(' ')) }}\n{% endif %}\n\n# Install pip2 since it is no longer in the APT upstream\nRUN curl -f https://bootstrap.pypa.io/pip/2.7/get-pip.py --output get-pip.py \\\n && python2 get-pip.py\n\nRUN wget https://github.com/nanomsg/nanomsg/archive/1.0.0.tar.gz \\\n && tar xvfz 1.0.0.tar.gz \\\n && cd nanomsg-1.0.0    \\\n && mkdir -p build      \\\n && cmake .             \\\n && make install        \\\n && ldconfig            \\\n && cd ..               \\\n && rm -fr nanomsg-1.0.0 \\\n && rm -f 1.0.0.tar.gz \\\n && pip2 install --no-cache-dir cffi==1.7.0 \\\n && pip2 install --no-cache-dir --upgrade cffi==1.7.0 \\\n && pip2 install --no-cache-dir wheel \\\n && pip2 install --no-cache-dir nnpy \\\n && mkdir -p /opt \\\n && cd /opt \\\n && wget https://raw.githubusercontent.com/p4lang/ptf/master/ptf_nn/ptf_nn_agent.py \\\n && apt-get clean -y; apt-get autoclean -y; apt-get autoremove -y \\\n && rm -rf /root/deps\n\nCOPY [\"ptf_nn_agent.conf\", \"/etc/supervisor/conf.d/\"]\n\n## Clean up\nRUN apt-get clean -y && \\\n    apt-get autoclean -y && \\\n    apt-get autoremove -y && \\\n    rm -rf /debs\n\nENTRYPOINT [\"/usr/local/bin/supervisord\"]\n"
}