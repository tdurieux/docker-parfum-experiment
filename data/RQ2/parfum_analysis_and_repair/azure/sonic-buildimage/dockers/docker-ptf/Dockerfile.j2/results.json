{
  "startTime": 1674246803431,
  "endTime": 1674246805679,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 86,
        "lineEnd": 86,
        "columnStart": 7,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 87,
        "lineEnd": 87,
        "columnStart": 7,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 88,
        "lineEnd": 88,
        "columnStart": 7,
        "columnEnd": 33
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 121,
        "lineEnd": 121,
        "columnStart": 7,
        "columnEnd": 23
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 122,
        "lineEnd": 122,
        "columnStart": 7,
        "columnEnd": 23
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 123,
        "lineEnd": 123,
        "columnStart": 7,
        "columnEnd": 23
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 124,
        "lineEnd": 124,
        "columnStart": 7,
        "columnEnd": 28
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 125,
        "lineEnd": 125,
        "columnStart": 7,
        "columnEnd": 31
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 126,
        "lineEnd": 126,
        "columnStart": 7,
        "columnEnd": 27
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 127,
        "lineEnd": 127,
        "columnStart": 7,
        "columnEnd": 24
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 128,
        "lineEnd": 128,
        "columnStart": 7,
        "columnEnd": 33
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 129,
        "lineEnd": 129,
        "columnStart": 7,
        "columnEnd": 24
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 130,
        "lineEnd": 130,
        "columnStart": 7,
        "columnEnd": 43
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 131,
        "lineEnd": 131,
        "columnStart": 7,
        "columnEnd": 41
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 132,
        "lineEnd": 132,
        "columnStart": 7,
        "columnEnd": 27
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 133,
        "lineEnd": 133,
        "columnStart": 7,
        "columnEnd": 27
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 151,
        "lineEnd": 151,
        "columnStart": 7,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 152,
        "lineEnd": 152,
        "columnStart": 7,
        "columnEnd": 34
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 153,
        "lineEnd": 153,
        "columnStart": 7,
        "columnEnd": 26
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 154,
        "lineEnd": 154,
        "columnStart": 7,
        "columnEnd": 24
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 155,
        "lineEnd": 155,
        "columnStart": 7,
        "columnEnd": 24
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 156,
        "lineEnd": 156,
        "columnStart": 7,
        "columnEnd": 24
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 157,
        "lineEnd": 157,
        "columnStart": 7,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 158,
        "lineEnd": 158,
        "columnStart": 7,
        "columnEnd": 32
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 159,
        "lineEnd": 159,
        "columnStart": 7,
        "columnEnd": 28
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 160,
        "lineEnd": 160,
        "columnStart": 7,
        "columnEnd": 25
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 161,
        "lineEnd": 161,
        "columnStart": 7,
        "columnEnd": 26
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 162,
        "lineEnd": 162,
        "columnStart": 7,
        "columnEnd": 25
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 163,
        "lineEnd": 163,
        "columnStart": 7,
        "columnEnd": 44
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 164,
        "lineEnd": 164,
        "columnStart": 7,
        "columnEnd": 42
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 165,
        "lineEnd": 165,
        "columnStart": 7,
        "columnEnd": 28
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 166,
        "lineEnd": 166,
        "columnStart": 7,
        "columnEnd": 34
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 167,
        "lineEnd": 167,
        "columnStart": 7,
        "columnEnd": 26
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 168,
        "lineEnd": 168,
        "columnStart": 7,
        "columnEnd": 26
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 169,
        "lineEnd": 169,
        "columnStart": 7,
        "columnEnd": 32
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 170,
        "lineEnd": 170,
        "columnStart": 7,
        "columnEnd": 28
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 171,
        "lineEnd": 171,
        "columnStart": 7,
        "columnEnd": 31
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 172,
        "lineEnd": 172,
        "columnStart": 7,
        "columnEnd": 32
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 173,
        "lineEnd": 173,
        "columnStart": 7,
        "columnEnd": 28
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 174,
        "lineEnd": 174,
        "columnStart": 7,
        "columnEnd": 26
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 175,
        "lineEnd": 175,
        "columnStart": 7,
        "columnEnd": 32
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 210,
        "lineEnd": 210,
        "columnStart": 7,
        "columnEnd": 38
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 97,
        "lineEnd": 97,
        "columnStart": 7,
        "columnEnd": 18
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 105,
        "lineEnd": 105,
        "columnStart": 7,
        "columnEnd": 18
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 26,
        "lineEnd": 75,
        "columnStart": 7,
        "columnEnd": 16
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 26,
        "lineEnd": 75,
        "columnStart": 7,
        "columnEnd": 16
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "{% set prefix = DEFAULT_CONTAINER_REGISTRY %}\n{% if CONFIGURED_ARCH == \"armhf\" and MULTIARCH_QEMU_ENVIRON == \"y\" %}\nFROM {{ prefix }}multiarch/debian-debootstrap:armhf-stretch\n{% elif CONFIGURED_ARCH == \"arm64\" and MULTIARCH_QEMU_ENVIRON == \"y\" %}\nFROM {{ prefix }}multiarch/debian-debootstrap:arm64-stretch\n{% else %}\nFROM {{ prefix }}debian:buster\n{% endif %}\n\n{% from \"dockers/dockerfile-macros.j2\" import install_python_wheels, copy_files %}\n\nUSER root\nWORKDIR /root\n\nMAINTAINER Pavel Shirshov\n\nRUN echo \"deb [arch=amd64] http://debian-archive.trafficmanager.net/debian buster-backports main\" >> /etc/apt/sources.list\n## Make apt-get non-interactive\nENV DEBIAN_FRONTEND=noninteractive\n\n## Set the apt source, update package cache and install necessary packages\n## TODO: Clean up this step\nRUN sed --in-place 's/httpredir.debian.org/debian-archive.trafficmanager.net/' /etc/apt/sources.list \\\n    && apt-get update          \\\n    && apt-get upgrade -y   \\\n    && apt-get dist-upgrade -y \\\n    && apt-get install --no-install-recommends -y \\\n        autoconf \\\n        openssh-server \\\n        vim \\\n        telnet \\\n        net-tools \\\n        traceroute \\\n        lsof \\\n        tcpdump \\\n        ethtool \\\n        unzip \\\n        pkg-config \\\n        binutils \\\n        build-essential \\\n        libssl-dev \\\n        libffi-dev \\\n        wget \\\n        cmake \\\n        libqt5core5a \\\n        libqt5network5 \\\n        libboost-atomic1.71.0 \\\n        less \\\n        git \\\n        iputils-ping \\\n        hping3 \\\n        curl \\\n        tmux \\\n        python \\\n        python-dev \\\n        python-libpcap \\\n        python-scapy \\\n        python-six \\\n        python3 \\\n        python3-venv \\\n        python3-pip \\\n        python3-dev \\\n        python3-scapy \\\n        python3-six \\\n        libpcap-dev \\\n        tacacs+ \\\n        rsyslog \\\n        ntp \\\n        ntpstat \\\n        ntpdate \\\n        arping \\\n        bridge-utils \\\n        libteam-utils \\\n        gdb \\\n        automake \\\n        iproute2 && rm -rf /var/lib/apt/lists/*;\n\n# Install all python modules from pypi. python-scapy is exception, ptf debian package requires python-scapy\n# TODO: Clean up this step\nRUN rm -rf /debs \\\n    && apt-get -y autoclean \\\n    && apt-get -y autoremove \\\n    && rm -rf /var/lib/apt/lists/* \\\n    && wget --https-only https://bootstrap.pypa.io/pip/2.7/get-pip.py \\\n    && python get-pip.py \\\n    && rm -f get-pip.py \\\n    && pip install --no-cache-dir setuptools \\\n    && pip install --no-cache-dir supervisor \\\n    && pip install --no-cache-dir ipython==5.4.1 \\\n    && git clone https://github.com/p4lang/scapy-vxlan.git \\\n    && cd scapy-vxlan \\\n    && python setup.py install \\\n    && cd .. \\\n    && rm -fr scapy-vxlan \\\n    && git clone https://github.com/sflow/sflowtool \\\n    && cd sflowtool \\\n    && ./boot.sh \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n    && make \\\n    && make install \\\n    && cd  .. \\\n    && rm -fr sflowtool \\\n    && git clone https://github.com/dyninc/OpenBFDD.git \\\n    && cd OpenBFDD \\\n    && ./autogen.sh \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n    && make \\\n    && make install \\\n    && cd  .. \\\n    && rm -fr OpenBFDD \\\n    && wget https://github.com/nanomsg/nanomsg/archive/1.0.0.tar.gz \\\n    && tar xvfz 1.0.0.tar.gz \\\n    && cd nanomsg-1.0.0 \\\n    && mkdir -p build \\\n    && cd build \\\n    && cmake .. \\\n    && make install \\\n    && ldconfig \\\n    && cd ../.. \\\n    && rm -fr nanomsg-1.0.0 \\\n    && rm -f 1.0.0.tar.gz \\\n    && pip install --no-cache-dir cffi \\\n    && pip install --no-cache-dir nnpy \\\n    && pip install --no-cache-dir dpkt \\\n    && pip install --no-cache-dir ipaddress \\\n    && pip install --no-cache-dir pysubnettree \\\n    && pip install --no-cache-dir paramiko \\\n    && pip install --no-cache-dir flask \\\n    && pip install --no-cache-dir exabgp==3.4.17 \\\n    && pip install --no-cache-dir pyaml \\\n    && pip install --no-cache-dir pybrctl pyro4 rpyc yabgp \\\n    && pip install --no-cache-dir unittest-xml-reporting \\\n    && pip install --no-cache-dir pyrasite \\\n    && pip install --no-cache-dir retrying \\\n    && mkdir -p /opt \\\n    && cd /opt \\\n    && wget https://raw.githubusercontent.com/p4lang/ptf/master/ptf_nn/ptf_nn_agent.py\n\nRUN python3 -m venv env-python3\n\n# Activating a virtualenv. The virtualenv automatically works for RUN, ENV and CMD.\nENV VIRTUAL_ENV=/root/env-python3\nARG BACKUP_OF_PATH=\"$PATH\"\nENV PATH=\"$VIRTUAL_ENV/bin:$PATH\"\n\nENV LANG=C.UTF-8 LC_ALL=C.UTF-8 PYTHONIOENCODING=UTF-8\n\nRUN python3 -m pip install --upgrade --ignore-installed pip\n\n# Install all python modules from pypi. python3-scapy is exception, ptf debian package requires python3-scapy\nRUN python3 -m pip install setuptools \\\n    && pip3 install --no-cache-dir supervisor \\\n    && pip3 install --no-cache-dir ipython==5.4.1 \\\n    && pip3 install --no-cache-dir Cython \\\n    && pip3 install --no-cache-dir cffi \\\n    && pip3 install --no-cache-dir nnpy \\\n    && pip3 install --no-cache-dir dpkt \\\n    && pip3 install --no-cache-dir ipaddress \\\n    && pip3 install --no-cache-dir pysubnettree \\\n    && pip3 install --no-cache-dir paramiko \\\n    && pip3 install --no-cache-dir Flask \\\n    && pip3 install --no-cache-dir exabgp \\\n    && pip3 install --no-cache-dir pyaml \\\n    && pip3 install --no-cache-dir pybrctl pyro4 rpyc yabgp \\\n    && pip3 install --no-cache-dir unittest-xml-reporting \\\n    && pip3 install --no-cache-dir pyrasite \\\n    && pip3 install --no-cache-dir python-libpcap \\\n    && pip3 install --no-cache-dir enum34 \\\n    && pip3 install --no-cache-dir grpcio \\\n    && pip3 install --no-cache-dir grpcio-tools \\\n    && pip3 install --no-cache-dir protobuf \\\n    && pip3 install --no-cache-dir six==1.16.0 \\\n    && pip3 install --no-cache-dir itsdangerous \\\n    && pip3 install --no-cache-dir retrying \\\n    && pip3 install --no-cache-dir jinja2 \\\n    && pip3 install --no-cache-dir scapy==2.4.5\n\n{% if docker_ptf_whls.strip() -%}\n# Copy locally-built Python wheel dependencies\n{{ copy_files(\"python-wheels/\", docker_ptf_whls.split(' '), \"/python-wheels/\") }}\n\n# Install locally-built Python wheel dependencies\n{{ install_python_wheels(docker_ptf_whls.split(' ')) }}\n{% endif %}\n\n# Deactivating a virtualenv.\nENV PATH=\"$BACKUP_OF_PATH\"\n\n## Adjust sshd settings\nRUN mkdir /var/run/sshd \\\n    && echo 'root:root' | chpasswd \\\n    && sed -ri '/^#?PermitRootLogin/c\\PermitRootLogin yes' /etc/ssh/sshd_config \\\n    && sed -ri '/^#?UsePAM/c\\UsePAM no' /etc/ssh/sshd_config \\\n    && sed -ri '/^#?UseDNS/c\\UseDNS no' /etc/ssh/sshd_config\n\nCOPY supervisord.conf /etc/supervisor/\nCOPY conf.d/ /etc/supervisor/conf.d/\nCOPY ptf_tgen.sh /ptf_tgen/\n\n# Move tcpdump into /usr/bin Otherwise it's impossible to run tcpdump due to a docker bug\nRUN mv /usr/sbin/tcpdump /usr/bin/tcpdump\nRUN ln -s /usr/bin/tcpdump /usr/sbin/tcpdump\n\nRUN mkdir -p /var/log/supervisor\n\n# Install Python-based GNMI client\nRUN git clone https://github.com/lguohan/gnxi.git \\\n    && cd gnxi \\\n    && git checkout 53901ab \\\n    && cd gnmi_cli_py \\\n    && pip install --no-cache-dir -r requirements.txt\n\nCOPY \\\n{% for deb in docker_ptf_debs.split(' ') -%}\ndebs/{{ deb }}{{' '}}\n{%- endfor -%}\ndebs/\n\nRUN dpkg -i \\\n{% for deb in docker_ptf_debs.split(' ') -%}\ndebs/{{ deb }}{{' '}}\n{%- endfor %}\n\nCOPY [\"*.ini\", \"/etc/ptf/\"]\nEXPOSE 22 8009\n\nENTRYPOINT [\"/usr/local/bin/supervisord\", \"-c\", \"/etc/supervisor/supervisord.conf\"]\n"
}