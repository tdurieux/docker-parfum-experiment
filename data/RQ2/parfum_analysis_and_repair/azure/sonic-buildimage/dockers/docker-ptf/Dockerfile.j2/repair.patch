diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/azure/sonic-buildimage/dockers/docker-ptf/Dockerfile.j2 b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/azure/sonic-buildimage/dockers/docker-ptf/Dockerfile.j2/repaired.Dockerfile
index bf22ba9..87a990e 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/azure/sonic-buildimage/dockers/docker-ptf/Dockerfile.j2
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/azure/sonic-buildimage/dockers/docker-ptf/Dockerfile.j2/repaired.Dockerfile
@@ -23,57 +23,57 @@ ENV DEBIAN_FRONTEND=noninteractive
 RUN sed --in-place 's/httpredir.debian.org/debian-archive.trafficmanager.net/' /etc/apt/sources.list \
     && apt-get update          \
     && apt-get upgrade -y   \
-    && apt-get dist-upgrade -y  \
-    && apt-get install -y   \
-        autoconf            \
-        openssh-server      \
-        vim                 \
-        telnet              \
-        net-tools           \
-        traceroute          \
-        lsof                \
-        tcpdump             \
-        ethtool             \
-        unzip               \
-        pkg-config          \
-        binutils            \
-        build-essential     \
-        libssl-dev          \
-        libffi-dev          \
-        wget                \
-        cmake               \
-        libqt5core5a        \
-        libqt5network5      \
+    && apt-get dist-upgrade -y \
+    && apt-get install --no-install-recommends -y \
+        autoconf \
+        openssh-server \
+        vim \
+        telnet \
+        net-tools \
+        traceroute \
+        lsof \
+        tcpdump \
+        ethtool \
+        unzip \
+        pkg-config \
+        binutils \
+        build-essential \
+        libssl-dev \
+        libffi-dev \
+        wget \
+        cmake \
+        libqt5core5a \
+        libqt5network5 \
         libboost-atomic1.71.0 \
-        less                \
-        git                 \
-        iputils-ping        \
-        hping3              \
-        curl                \
-        tmux                \
-        python              \
-        python-dev          \
-        python-libpcap      \
-        python-scapy        \
-        python-six          \
-        python3             \
-        python3-venv        \
-        python3-pip         \
-        python3-dev         \
-        python3-scapy       \
-        python3-six         \
-        libpcap-dev         \
-        tacacs+             \
-        rsyslog             \
-        ntp                 \
-        ntpstat             \
-        ntpdate             \
-        arping              \
-        bridge-utils        \
-        libteam-utils       \
-        gdb                 \
-        automake            \
-        iproute2
+        less \
+        git \
+        iputils-ping \
+        hping3 \
+        curl \
+        tmux \
+        python \
+        python-dev \
+        python-libpcap \
+        python-scapy \
+        python-six \
+        python3 \
+        python3-venv \
+        python3-pip \
+        python3-dev \
+        python3-scapy \
+        python3-six \
+        libpcap-dev \
+        tacacs+ \
+        rsyslog \
+        ntp \
+        ntpstat \
+        ntpdate \
+        arping \
+        bridge-utils \
+        libteam-utils \
+        gdb \
+        automake \
+        iproute2 && rm -rf /var/lib/apt/lists/*;
 
 # Install all python modules from pypi. python-scapy is exception, ptf debian package requires python-scapy
 # TODO: Clean up this step
@@ -84,9 +84,9 @@ RUN rm -rf /debs \
     && wget --https-only https://bootstrap.pypa.io/pip/2.7/get-pip.py \
     && python get-pip.py \
     && rm -f get-pip.py \
-    && pip install setuptools \
-    && pip install supervisor \
-    && pip install ipython==5.4.1 \
+    && pip install --no-cache-dir setuptools \
+    && pip install --no-cache-dir supervisor \
+    && pip install --no-cache-dir ipython==5.4.1 \
     && git clone https://github.com/p4lang/scapy-vxlan.git \
     && cd scapy-vxlan \
     && python setup.py install \
@@ -95,7 +95,7 @@ RUN rm -rf /debs \
     && git clone https://github.com/sflow/sflowtool \
     && cd sflowtool \
     && ./boot.sh \
-    && ./configure \
+    && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
     && make \
     && make install \
     && cd  .. \
@@ -103,37 +103,37 @@ RUN rm -rf /debs \
     && git clone https://github.com/dyninc/OpenBFDD.git \
     && cd OpenBFDD \
     && ./autogen.sh \
-    && ./configure \
+    && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
     && make \
     && make install \
     && cd  .. \
     && rm -fr OpenBFDD \
     && wget https://github.com/nanomsg/nanomsg/archive/1.0.0.tar.gz \
     && tar xvfz 1.0.0.tar.gz \
-    && cd nanomsg-1.0.0    \
-    && mkdir -p build      \
-    && cd build            \
-    && cmake ..            \
-    && make install        \
-    && ldconfig            \
-    && cd ../..            \
+    && cd nanomsg-1.0.0 \
+    && mkdir -p build \
+    && cd build \
+    && cmake .. \
+    && make install \
+    && ldconfig \
+    && cd ../.. \
     && rm -fr nanomsg-1.0.0 \
-    && rm -f 1.0.0.tar.gz  \
-    && pip install cffi    \
-    && pip install nnpy    \
-    && pip install dpkt    \
-    && pip install ipaddress \
-    && pip install pysubnettree \
-    && pip install paramiko \
-    && pip install flask   \
-    && pip install exabgp==3.4.17\
-    && pip install pyaml   \
-    && pip install pybrctl pyro4 rpyc yabgp \
-    && pip install unittest-xml-reporting \
-    && pip install pyrasite \
-    && pip install retrying \
-    && mkdir -p /opt       \
-    && cd /opt             \
+    && rm -f 1.0.0.tar.gz \
+    && pip install --no-cache-dir cffi \
+    && pip install --no-cache-dir nnpy \
+    && pip install --no-cache-dir dpkt \
+    && pip install --no-cache-dir ipaddress \
+    && pip install --no-cache-dir pysubnettree \
+    && pip install --no-cache-dir paramiko \
+    && pip install --no-cache-dir flask \
+    && pip install --no-cache-dir exabgp==3.4.17 \
+    && pip install --no-cache-dir pyaml \
+    && pip install --no-cache-dir pybrctl pyro4 rpyc yabgp \
+    && pip install --no-cache-dir unittest-xml-reporting \
+    && pip install --no-cache-dir pyrasite \
+    && pip install --no-cache-dir retrying \
+    && mkdir -p /opt \
+    && cd /opt \
     && wget https://raw.githubusercontent.com/p4lang/ptf/master/ptf_nn/ptf_nn_agent.py
 
 RUN python3 -m venv env-python3
@@ -149,31 +149,31 @@ RUN python3 -m pip install --upgrade --ignore-installed pip
 
 # Install all python modules from pypi. python3-scapy is exception, ptf debian package requires python3-scapy
 RUN python3 -m pip install setuptools \
-    && pip3 install supervisor \
-    && pip3 install ipython==5.4.1 \
-    && pip3 install Cython \
-    && pip3 install cffi    \
-    && pip3 install nnpy    \
-    && pip3 install dpkt    \
-    && pip3 install ipaddress \
-    && pip3 install pysubnettree \
-    && pip3 install paramiko \
-    && pip3 install Flask   \
-    && pip3 install exabgp \
-    && pip3 install pyaml   \
-    && pip3 install pybrctl pyro4 rpyc yabgp \
-    && pip3 install unittest-xml-reporting \
-    && pip3 install pyrasite \
-    && pip3 install python-libpcap \
-    && pip3 install enum34 \
-    && pip3 install grpcio \
-    && pip3 install grpcio-tools \
-    && pip3 install protobuf \
-    && pip3 install six==1.16.0 \
-    && pip3 install itsdangerous \
-    && pip3 install retrying \
-    && pip3 install jinja2 \
-    && pip3 install scapy==2.4.5
+    && pip3 install --no-cache-dir supervisor \
+    && pip3 install --no-cache-dir ipython==5.4.1 \
+    && pip3 install --no-cache-dir Cython \
+    && pip3 install --no-cache-dir cffi \
+    && pip3 install --no-cache-dir nnpy \
+    && pip3 install --no-cache-dir dpkt \
+    && pip3 install --no-cache-dir ipaddress \
+    && pip3 install --no-cache-dir pysubnettree \
+    && pip3 install --no-cache-dir paramiko \
+    && pip3 install --no-cache-dir Flask \
+    && pip3 install --no-cache-dir exabgp \
+    && pip3 install --no-cache-dir pyaml \
+    && pip3 install --no-cache-dir pybrctl pyro4 rpyc yabgp \
+    && pip3 install --no-cache-dir unittest-xml-reporting \
+    && pip3 install --no-cache-dir pyrasite \
+    && pip3 install --no-cache-dir python-libpcap \
+    && pip3 install --no-cache-dir enum34 \
+    && pip3 install --no-cache-dir grpcio \
+    && pip3 install --no-cache-dir grpcio-tools \
+    && pip3 install --no-cache-dir protobuf \
+    && pip3 install --no-cache-dir six==1.16.0 \
+    && pip3 install --no-cache-dir itsdangerous \
+    && pip3 install --no-cache-dir retrying \
+    && pip3 install --no-cache-dir jinja2 \
+    && pip3 install --no-cache-dir scapy==2.4.5
 
 {% if docker_ptf_whls.strip() -%}
 # Copy locally-built Python wheel dependencies
@@ -208,7 +208,7 @@ RUN git clone https://github.com/lguohan/gnxi.git \
     && cd gnxi \
     && git checkout 53901ab \
     && cd gnmi_cli_py \
-    && pip install -r requirements.txt
+    && pip install --no-cache-dir -r requirements.txt
 
 COPY \
 {% for deb in docker_ptf_debs.split(' ') -%}