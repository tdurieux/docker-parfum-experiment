{
  "startTime": 1674254436427,
  "endTime": 1674254437439,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 30
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 54
      }
    }
  ],
  "repairedDockerfile": "{% from \"dockers/dockerfile-macros.j2\" import install_debian_packages, install_python3_wheels, copy_files %}\nFROM docker-config-engine-buster-{{DOCKER_USERNAME}}:{{DOCKER_USERTAG}}\n\nARG docker_container_name\nARG image_version\nRUN [ -f /etc/rsyslog.conf ] && sed -ri \"s/%syslogtag%/$docker_container_name#%syslogtag%/;\" /etc/rsyslog.conf\n\n# Enable -O for all Python calls\nENV PYTHONOPTIMIZE 1\n\n# Make apt-get non-interactive\nENV DEBIAN_FRONTEND=noninteractive\n\n# Pass the image_version to container\nENV IMAGE_VERSION=$image_version\n\n# Update apt's cache of available packages\n# Install make/gcc which is required for installing hiredis\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y \\\n        python3-dev \\\n        gcc \\\n        make \\\n        ipmitool && rm -rf /var/lib/apt/lists/*;\n\n{% if docker_snmp_debs.strip() -%}\n# Copy locally-built Debian package dependencies\n{{ copy_files(\"debs/\", docker_snmp_debs.split(' '), \"/debs/\") }}\n\n# Install locally-built Debian packages and implicitly install their dependencies\n{{ install_debian_packages(docker_snmp_debs.split(' ')) }}\n{%- endif %}\n\n# Fix for hiredis compilation issues for ARM\n# python will throw for missing locale\nRUN apt-get install --no-install-recommends -y locales && rm -rf /var/lib/apt/lists/*;\nRUN locale-gen \"en_US.UTF-8\"\nRUN dpkg-reconfigure --frontend noninteractive locales\nENV LC_CTYPE=en_US.UTF-8\nRUN sed -i '/^#.* en_US.* /s/^#//' /etc/locale.gen\nRUN locale-gen\n\n# Install dependencies used by some plugins\nRUN pip3 install --no-cache-dir \\\n        hiredis                             \\\n        pyyaml                              \\\n        smbus\n\n{% if docker_snmp_whls.strip() -%}\n# Copy locally-built Python wheel dependencies\n{{ copy_files(\"python-wheels/\", docker_snmp_whls.split(' '), \"/python-wheels/\") }}\n\n# Install locally-built Python wheel dependencies\n{{ install_python3_wheels(docker_snmp_whls.split(' ')) }}\n{% endif %}\n\nRUN python3 -m sonic_ax_impl install\n\n# Clean up\nRUN apt-get -y purge     \\\n        python3-dev      \\\n        gcc              \\\n        make                && \\\n    apt-get clean -y        && \\\n    apt-get autoclean -y    && \\\n    apt-get autoremove -y --purge && \\\n    find / | grep -E \"__pycache__\" | xargs rm -rf && \\\n    rm -rf /debs /python-wheels ~/.cache\n\nCOPY [\"start.sh\", \"/usr/bin/\"]\nCOPY [\"snmp_yml_to_configdb.py\", \"/usr/bin/\"]\nCOPY [\"supervisord.conf\", \"/etc/supervisor/conf.d/\"]\nCOPY [\"*.j2\", \"/usr/share/sonic/templates/\"]\nCOPY [\"files/supervisor-proc-exit-listener\", \"/usr/bin\"]\nCOPY [\"critical_processes\", \"/etc/supervisor\"]\n\n# Although exposing ports is not needed for host net mode, keep it for possible bridge mode\nEXPOSE 161/udp 162/udp\n\nENTRYPOINT [\"/usr/local/bin/supervisord\"]\n"
}