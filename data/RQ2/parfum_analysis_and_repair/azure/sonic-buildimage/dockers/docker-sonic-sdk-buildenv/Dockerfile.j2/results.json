{
  "startTime": 1674248061742,
  "endTime": 1674248062916,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 23
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "{% from \"dockers/dockerfile-macros.j2\" import install_debian_packages, install_python_wheels, copy_files %}\nFROM sonic-sdk-{{DOCKER_USERNAME}}:{{DOCKER_USERTAG}}\n\nARG base_os_version\nARG docker_database_version\nARG docker_swss_version\nARG docker_syncd_version\nARG image_version\n\n# Make apt-get non-interactive\nENV DEBIAN_FRONTEND=noninteractive\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -f -y \\\n        build-essential && rm -rf /var/lib/apt/lists/*;\n\n{% if docker_sonic_sdk_buildenv_debs.strip() -%}\n# Copy locally-built Debian package dependencies\n{{ copy_files(\"debs/\", docker_sonic_sdk_buildenv_debs.split(' '), \"/debs/\") }}\n\n# Install locally-built Debian packages and implicitly install their dependencies\n{{ install_debian_packages(docker_sonic_sdk_buildenv_debs.split(' ')) }}\n{%- endif %}\n\n{% if docker_sonic_sdk_buildenv_whls.strip() %}\n# Copy locally-built Python wheel dependencies\n{{ copy_files(\"python-wheels/\", docker_sonic_sdk_buildenv_whls.split(' '), \"/python-wheels/\") }}\n\n# Install locally-built Python wheel dependencies\n{{ install_python_wheels(docker_sonic_sdk_buildenv_whls.split(' ')) }}\n{% endif %}\n\n# Clean up\nRUN apt-get clean -y       && \\\n    apt-get autoclean -y   && \\\n    apt-get autoremove -y  && \\\n    rm -rf /debs /python-wheels/\n\nLABEL com.azure.sonic.sdk.versions.base-os=$base_os_version\nLABEL com.azure.sonic.sdk.versions.database=$docker_database_version\nLABEL com.azure.sonic.sdk.versions.swss=$docker_swss_version\nLABEL com.azure.sonic.sdk.versions.syncd=$docker_syncd_version\nLABEL com.azure.sonic.sdk.version.image_hash=$image_version\n"
}