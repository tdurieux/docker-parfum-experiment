{
  "startTime": 1674218829303,
  "endTime": 1674218830581,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 79,
        "lineEnd": 79,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 82,
        "lineEnd": 82,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 42,
        "lineEnd": 65,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 42,
        "lineEnd": 65,
        "columnStart": 4,
        "columnEnd": 16
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 42,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 16
      }
    }
  ],
  "repairedDockerfile": "{% set prefix = DEFAULT_CONTAINER_REGISTRY %}\n{% from \"dockers/dockerfile-macros.j2\" import install_debian_packages, install_python_wheels, copy_files %}\n{% if CONFIGURED_ARCH == \"armhf\" and MULTIARCH_QEMU_ENVIRON == \"y\" %}\nFROM {{ prefix }}multiarch/debian-debootstrap:armhf-bullseye\n{% elif CONFIGURED_ARCH == \"arm64\" and MULTIARCH_QEMU_ENVIRON == \"y\" %}\nFROM {{ prefix }}multiarch/debian-debootstrap:arm64-bullseye\n{% else %}\nFROM {{ prefix }}{{DOCKER_BASE_ARCH}}/debian:bullseye\n{% endif %}\n\n# Clean documentation in FROM image\nRUN find /usr/share/doc -depth \\( -type f -o -type l \\) ! -name copyright | xargs rm || true\n\n# Clean doc directories that are empty or only contain empty directories\nRUN while [ -n \"$(find /usr/share/doc -depth -type d -empty -print -exec rmdir {} +)\" ]; do :; done && \\\n    rm -rf               \\\n    /usr/share/man/*     \\\n    /usr/share/groff/*   \\\n    /usr/share/info/*    \\\n    /usr/share/lintian/* \\\n    /usr/share/linda/*   \\\n    /var/cache/man/*     \\\n    /usr/share/locale/*\n\n# Make apt-get non-interactive\nENV DEBIAN_FRONTEND=noninteractive\n\n# Configure data sources for apt/dpkg\nCOPY [\"dpkg_01_drop\", \"/etc/dpkg/dpkg.cfg.d/01_drop\"]\n{% if CONFIGURED_ARCH == \"armhf\" %}\nCOPY [\"sources.list.armhf\", \"/etc/apt/sources.list\"]\n{% elif CONFIGURED_ARCH == \"arm64\" %}\nCOPY [\"sources.list.arm64\", \"/etc/apt/sources.list\"]\n{% else %}\nCOPY [\"sources.list\", \"/etc/apt/sources.list\"]\n{% endif %}\nCOPY [\"no_install_recommend_suggest\", \"/etc/apt/apt.conf.d\"]\nCOPY [\"no-check-valid-until\", \"/etc/apt/apt.conf.d\"]\n\n# Update apt cache and\n# pre-install fundamental packages\nRUN apt-get update && \\\n    apt-get -y --no-install-recommends install \\\n        curl \\\n        less \\\n        perl \\\n        procps \\\n        python3 \\\n        python3-distutils \\\n        python3-pip \\\n        rsyslog \\\n        vim-tiny \\\n\n        redis-tools \\\n\n        libdaemon0 \\\n        libdbus-1-3 \\\n        libjansson4 \\\n\n        iproute2 \\\n        net-tools \\\n\n        jq \\\n\n        libzmq5 \\\n        libwrap0 && rm -rf /var/lib/apt/lists/*;\n\n# Upgrade pip via PyPI and uninstall the Debian version\nRUN pip3 install --no-cache-dir --upgrade pip\nRUN apt-get purge -y python3-pip\n\n# setuptools and wheel are necessary for installing some Python wheel packages\nRUN pip3 install --no-cache-dir setuptools==49.6.00\nRUN pip3 install --no-cache-dir wheel==0.35.1\n\n# For templating\nRUN pip3 install --no-cache-dir j2cli\n\n# Install supervisor\nRUN pip3 install --no-cache-dir supervisor==4.2.1\n\n# Add support for supervisord to handle startup dependencies\nRUN pip3 install --no-cache-dir supervisord-dependent-startup==1.4.0\n\nRUN mkdir -p /etc/supervisor /var/log/supervisor\n\nRUN apt-get -y purge   \\\n    exim4              \\\n    exim4-base         \\\n    exim4-config       \\\n    exim4-daemon-light\n\n{% if docker_base_bullseye_debs.strip() -%}\n# Copy locally-built Debian package dependencies\n{{ copy_files(\"debs/\", docker_base_bullseye_debs.split(' '), \"/debs/\") }}\n\n# Install built Debian packages and implicitly install their dependencies\n{{ install_debian_packages(docker_base_bullseye_debs.split(' ')) }}\n{%- endif %}\n\n# Clean up apt\n# Remove /var/lib/apt/lists/*, could be obsoleted for derived images\nRUN apt-get clean -y                     && \\\n    apt-get autoclean -y                 && \\\n    apt-get autoremove -y                && \\\n    rm -rf /var/lib/apt/lists/* /tmp/* ~/.cache\n\nCOPY [\"etc/rsyslog.conf\", \"/etc/rsyslog.conf\"]\nCOPY [\"etc/rsyslog.d/*\", \"/etc/rsyslog.d/\"]\nCOPY [\"root/.vimrc\", \"/root/.vimrc\"]\n\nRUN ln /usr/bin/vim.tiny /usr/bin/vim\n\nCOPY [\"etc/supervisor/supervisord.conf\", \"/etc/supervisor/\"]\n"
}