{
  "startTime": 1674219040036,
  "endTime": 1674219041046,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 47
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "{% from \"dockers/dockerfile-macros.j2\" import install_debian_packages, install_python_wheels, copy_files %}\nFROM docker-config-engine-bullseye-{{DOCKER_USERNAME}}:{{DOCKER_USERTAG}}\n\nARG docker_container_name\nRUN [ -f /etc/rsyslog.conf ] && sed -ri \"s/%syslogtag%/$docker_container_name#%syslogtag%/;\" /etc/rsyslog.conf\n\n# Make apt-get non-interactive\nENV DEBIAN_FRONTEND=noninteractive\n\n# Update apt's cache of available packages\nRUN apt-get update && apt-get install --no-install-recommends -y redis-tools redis-server && rm -rf /var/lib/apt/lists/*; # Install redis-server\n\n\n{% if docker_database_debs.strip() -%}\n# Copy locally-built Debian package dependencies\n{{ copy_files(\"debs/\", docker_database_debs.split(' '), \"/debs/\") }}\n\n# Install locally-built Debian packages and implicitly install their dependencies\n{{ install_debian_packages(docker_database_debs.split(' ')) }}\n{%- endif %}\n\n# Clean up\nRUN apt-get clean -y                                  && \\\n    apt-get autoclean -y                              && \\\n    apt-get autoremove -y                             && \\\n    rm -rf /debs ~/.cache                             && \\\n    sed -ri 's/^(save .*$)/# \\1/g;                       \\\n             s/^daemonize yes$/daemonize no/;            \\\n             s/^logfile .*$/logfile \"\"/;                 \\\n             s/^# syslog-enabled no$/syslog-enabled no/; \\\n             s/^# unixsocket/unixsocket/;                \\\n             s/redis-server.sock/redis.sock/g;           \\\n             s/^client-output-buffer-limit pubsub [0-9]+mb [0-9]+mb [0-9]+/client-output-buffer-limit pubsub 0 0 0/ \\\n            ' /etc/redis/redis.conf\n\nCOPY [\"supervisord.conf.j2\", \"/usr/share/sonic/templates/\"]\nCOPY [\"docker-database-init.sh\", \"/usr/local/bin/\"]\nCOPY [\"database_config.json.j2\", \"/usr/share/sonic/templates/\"]\nCOPY [\"database_global.json.j2\", \"/usr/share/sonic/templates/\"]\nCOPY [\"files/supervisor-proc-exit-listener\", \"/usr/bin\"]\nCOPY [\"files/sysctl-net.conf\", \"/etc/sysctl.d/\"]\nCOPY [\"critical_processes\", \"/etc/supervisor\"]\nCOPY [\"files/update_chassisdb_config\", \"/usr/local/bin/\"]\nCOPY [\"flush_unused_database\", \"/usr/local/bin/\"]\n\nENTRYPOINT [\"/usr/local/bin/docker-database-init.sh\"]\n"
}