{
  "startTime": 1674246861313,
  "endTime": 1674246864969,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 22,
        "columnEnd": 81
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 46,
        "columnEnd": 67
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 22,
        "columnEnd": 81
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 40
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 83
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 46,
        "columnEnd": 67
      }
    }
  ],
  "repairedDockerfile": "FROM docker-config-engine-buster-{{DOCKER_USERNAME}}:{{DOCKER_USERTAG}}\n\nARG docker_container_name\nENV PYTHONPATH=/usr/share/sonic/platform\n\nRUN [ -f /etc/rsyslog.conf ] && sed -ri \"s/%syslogtag%/$docker_container_name#%syslogtag%/;\" /etc/rsyslog.conf\n\n# Make apt-get non-interactive\nENV DEBIAN_FRONTEND=noninteractive\n\n{% if ARTIFACTORY_URL is defined and ARTIFACTORY_URL|length -%}\n# Insert Artifactory URL references\nCOPY [\"files/03_stretch_af.list\", \"/etc/apt/sources.list.d/\"]\n{%- endif %}\n\n# Update apt's cache of available packages\nRUN apt-get update && apt-get install --no-install-recommends -y ipmitool telnet busybox kmod libpcap-dev && rm -rf /var/lib/apt/lists/*;\n\n# Packages for benchmark tool - nench.sh\nRUN apt-get install --no-install-recommends -y bzip2 curl ioping openssl bc sysstat && rm -rf /var/lib/apt/lists/*;\n\n# Packages for PDDF\n\nRUN apt-get install --no-install-recommends -y python-jsonschema && rm -rf /var/lib/apt/lists/*;\n\nRUN pip3 install --no-cache-dir pytest pexpect\n\n{% if docker_pde_debs.strip() -%}\n# Copy locally-built Debian package dependencies\nCOPY \\\n{% for deb in docker_pde_debs.split(' ') -%}\ndebs/{{ deb }}{{' '}}\n{%- endfor -%}\n/debs/\n\n# Install locally-built Debian packages and implicitly install their dependencies\nRUN dpkg_apt() { [ -f $1 ] && { dpkg -i $1 || apt-get -y install -f; } || return 1; }{%- for deb in docker_pde_debs.split(' ') %}; \\\ndpkg_apt /debs/{{ deb }}\n{%- endfor %}\n{%- endif %}\n\n{% if docker_pde_pydebs.strip() -%}\n# Copy locally-built Debian package dependencies\nCOPY \\\n{% for deb in docker_pde_pydebs.split(' ') -%}\npython-debs/{{ deb }}{{' '}}\n{%- endfor -%}\n/debs/\n\n# Install locally-built Debian packages and implicitly install their dependencies\n{%- for deb in docker_pde_pydebs.split(' ') %}\nRUN dpkg_apt() { [ -f $1 ] && { dpkg -i $1 || apt-get -y install -f; } || return 1; }; dpkg_apt /debs/{{ deb }}\n{%- endfor %}\n{%- endif %}\n\n{% if docker_pde_whls.strip() -%}\n# Copy locally-built Python wheel dependencies\nCOPY \\\n{% for whl in docker_pde_whls.split(' ') -%}\npython-wheels/{{ whl }}{{' '}}\n{%- endfor -%}\n/python-wheels/\n\n# Install locally-built Python wheel dependencies\n\nRUN pip3  install \\\n\n\n{% for whl in docker_pde_whls.split(' ') -%}\n/python-wheels/{{ whl }}{{' '}}\n{%- endfor %}\n{% endif %}\n\n{% if ARTIFACTORY_URL is defined and ARTIFACTORY_URL|length -%}\n# Remove Artifactory URL references\nRUN rm -f /etc/apt/sources.list.d/03_stretch_af.list && apt-get update\n{%- endif %}\n\n# Clean up\nRUN apt-get clean -y; \\\n    apt-get autoclean -y; \\\n    apt-get autoremove -y\nRUN rm -rf /debs ~/.cache\n\nRUN mkdir -p /home/pde\n\nCOPY [\"bench.sh\", \"/usr/bin/\"]\nCOPY [\"stress-sfp-i2c.py\", \"/home/pde\"]\nCOPY [\"supervisord.conf\", \"/etc/supervisor/conf.d/\"]\nCOPY [\"syseeprom.py\", \"/usr/bin/\"]\nCOPY [\"docker_init.sh\", \"/usr/bin/\"]\nCOPY [\"cancun_files/cancun_4.5.0/*\", \"cancun_files/cancun_6.6.1/*\", \"cancun_files/cancun_4.3.0/*\", \"/usr/lib/cancun/\"]\nCOPY [\"syncd_init_common.sh\", \"/usr/bin/\"]\n\nENTRYPOINT [\"/usr/bin/docker_init.sh\"]\n"
}