diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/azure/sonic-buildimage/sonic-slave-stretch/Dockerfile.j2 b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/azure/sonic-buildimage/sonic-slave-stretch/Dockerfile.j2/repaired.Dockerfile
index e3815ea..c1eae4f 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/azure/sonic-buildimage/sonic-slave-stretch/Dockerfile.j2
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/azure/sonic-buildimage/sonic-slave-stretch/Dockerfile.j2/repaired.Dockerfile
@@ -48,7 +48,7 @@ RUN echo "deb [arch=arm64] http://deb.debian.org/debian stretch main contrib non
 ## Make apt-get non-interactive
 ENV DEBIAN_FRONTEND=noninteractive
 
-RUN apt-get update && apt-get install -y \
+RUN apt-get update && apt-get install --no-install-recommends -y \
         apt-utils \
         default-jre-headless \
         openssh-server \
@@ -81,7 +81,7 @@ RUN apt-get update && apt-get install -y \
         libzmq5 \
         libzmq3-dev \
         jq \
-# For quagga build
+
         libreadline-dev \
         texlive-latex-base \
         texlive-generic-recommended \
@@ -95,7 +95,7 @@ RUN apt-get update && apt-get install -y \
         libpcre3-dev \
         gawk \
         chrpath \
-# For frr build
+
         libc-ares-dev \
         libsnmp-dev \
         libjson-c3 \
@@ -107,22 +107,22 @@ RUN apt-get update && apt-get install -y \
         python3-all-dbg \
         install-info \
         logrotate \
-# For libnl3 (local) build
+
         cdbs \
-# For SAI meta build
+
         libxml-simple-perl \
         graphviz \
         aspell \
-# For linux build
+
         bc \
         fakeroot \
         build-essential \
         devscripts \
         quilt \
         stgit \
-# For platform-modules build
+
         module-assistant \
-# For thrift build\
+
         gem2deb \
         libboost-all-dev \
         libevent-dev \
@@ -142,7 +142,7 @@ RUN apt-get update && apt-get install -y \
         libservlet3.1-java \
         qt5-default \
         pkg-php-tools \
-# For mellanox sdk build
+
         libpcre3 \
         libpcre3-dev \
         byacc \
@@ -155,22 +155,22 @@ RUN apt-get update && apt-get install -y \
         libdb-dev \
         iptables-dev \
         ctags \
-# For mellanox sai build
+
         libtool-bin \
         libxml2-dev \
-# For BFN sdk build
+
         libusb-1.0-0-dev \
         libcurl3-nss-dev \
         libunwind8-dev \
         telnet \
         libc-ares2 \
         libgoogle-perftools4 \
-# For build image
+
         cpio \
         squashfs-tools \
         zip \
-# For broadcom sdk build
-{%- if CONFIGURED_ARCH == "amd64" %}
+
+{%- if CONFIGURED_ARCH == "amd64" %} && rm -rf /var/lib/apt/lists/*;
         linux-compiler-gcc-6-x86 \
 {%- endif %}
 {%- if CONFIGURED_ARCH == "armhf" %}
@@ -302,11 +302,11 @@ RUN apt-get update && apt-get install -y \
         auditd
 
 # For gmock
-RUN apt-get install -y libgmock-dev -t stretch-backports
+RUN apt-get install --no-install-recommends -y libgmock-dev -t stretch-backports && rm -rf /var/lib/apt/lists/*;
 
-# Install dependencies for dhcp relay test 
-RUN pip3 install parameterized==0.8.1
-RUN pip3 install pyfakefs
+# Install dependencies for dhcp relay test
+RUN pip3 install --no-cache-dir parameterized==0.8.1
+RUN pip3 install --no-cache-dir pyfakefs
 
 ## Config dpkg
 ## install the configuration file if itâ€™s currently missing
@@ -335,85 +335,85 @@ RUN export VERSION=1.14.2 \
  && echo 'export PATH=$PATH:$GOROOT/bin' >> /etc/bash.bashrc \
  && rm go$VERSION.linux-*.tar.gz
 
-RUN pip3 install --upgrade pip
-RUN pip2 install --upgrade 'pip<21'
+RUN pip3 install --no-cache-dir --upgrade pip
+RUN pip2 install --no-cache-dir --upgrade 'pip<21'
 RUN apt-get purge -y python-pip python3-pip
 
 # For p4 build
-RUN pip2 install \
+RUN pip2 install --no-cache-dir \
          ctypesgen==0.r125 \
          crc16
 
 # Note: Stick with Jinja2 2.x branch as the 3.x dropped support for Python 2.7
-RUN pip2 install --force-reinstall --upgrade "Jinja2<3.0.0"
+RUN pip2 install --no-cache-dir --force-reinstall --upgrade "Jinja2<3.0.0"
 
 # For sonic config engine testing
 # Install pyangbind here, outside sonic-config-engine dependencies, as pyangbind causes enum34 to be installed.
 # enum34 causes Python 're' package to not work properly as it redefines an incompatible enum.py module
 # https://github.com/robshakir/pyangbind/issues/232
-RUN pip3 install pyangbind==0.8.1
+RUN pip3 install --no-cache-dir pyangbind==0.8.1
 RUN pip3 uninstall -y enum34
 
 # For templating
-RUN pip2 install j2cli==0.3.10
+RUN pip2 install --no-cache-dir j2cli==0.3.10
 
 # For sonic snmpagent mock testing
-RUN pip3 install nose==1.3.7
-RUN pip3 install mockredispy==2.9.3
+RUN pip3 install --no-cache-dir nose==1.3.7
+RUN pip3 install --no-cache-dir mockredispy==2.9.3
 
 # For sonic-mgmt-framework
-RUN pip2 install "PyYAML==5.3.1"
-RUN pip3 install "PyYAML==5.3.1"
-RUN pip2 install "lxml==4.6.5"
-RUN pip3 install "lxml==4.6.5"
+RUN pip2 install --no-cache-dir "PyYAML==5.3.1"
+RUN pip3 install --no-cache-dir "PyYAML==5.3.1"
+RUN pip2 install --no-cache-dir "lxml==4.6.5"
+RUN pip3 install --no-cache-dir "lxml==4.6.5"
 
 
 # For sonic-platform-common testing
-RUN pip3 install redis
+RUN pip3 install --no-cache-dir redis
 
 # For vs image build
-RUN pip2 install pexpect==4.6.0
+RUN pip2 install --no-cache-dir pexpect==4.6.0
 
 # For sonic-utilities build
-RUN pip2 install nose==1.3.7
-RUN pip2 install mockredispy==2.9.3
-RUN pip2 install pytest-runner==4.4
-RUN pip2 install setuptools==40.8.0
+RUN pip2 install --no-cache-dir nose==1.3.7
+RUN pip2 install --no-cache-dir mockredispy==2.9.3
+RUN pip2 install --no-cache-dir pytest-runner==4.4
+RUN pip2 install --no-cache-dir setuptools==40.8.0
 
 # For sonic-swss-common testing
-RUN pip2 install Pympler==0.8
+RUN pip2 install --no-cache-dir Pympler==0.8
 
 # For sonic_yang_model build
-RUN pip3 install pyang==2.4.0
+RUN pip3 install --no-cache-dir pyang==2.4.0
 
 # For mgmt-framework build
-RUN pip2 install mmh3
+RUN pip2 install --no-cache-dir mmh3
 
 # Install dependencies for isc-dhcp-relay build
 RUN apt-get -y build-dep isc-dhcp
 
 # Install vim
-RUN apt-get install -y vim
+RUN apt-get install --no-install-recommends -y vim && rm -rf /var/lib/apt/lists/*;
 
 # Install rsyslog
-RUN apt-get install -y rsyslog
+RUN apt-get install --no-install-recommends -y rsyslog && rm -rf /var/lib/apt/lists/*;
 
-RUN apt-get install -y libgtest-dev
-RUN apt-get install -y libarchive13 librhash0
-RUN apt-get -t stretch-backports install -y libuv1
+RUN apt-get install --no-install-recommends -y libgtest-dev && rm -rf /var/lib/apt/lists/*;
+RUN apt-get install --no-install-recommends -y libarchive13 librhash0 && rm -rf /var/lib/apt/lists/*;
+RUN apt-get -t stretch-backports --no-install-recommends install -y libuv1 && rm -rf /var/lib/apt/lists/*;
 # Install cmake/cmake-data 3.13.2-1_bpo9+1
 # latest cmake 3.16.3 break the build libyang 1.0.73
 RUN wget -O cmake-data_3.13.2-1_bpo9+1_all.deb "https://sonicstorage.blob.core.windows.net/packages/cmake/cmake-data_3.13.2-1_bpo9%2B1_all.deb?st=2020-03-27T02%3A22%3A24Z&se=2100-03-26T19%3A00%3A00Z&sp=rl&sv=2018-03-28&sr=b&sig=Xby%2Bm3OZOjPB%2FSlDbHD65yDcPzAgoys%2FA3vK8RB4BzA%3D"
-RUN dpkg -i cmake-data_3.13.2-1_bpo9+1_all.deb || apt-get install -f
+RUN dpkg -i cmake-data_3.13.2-1_bpo9+1_all.deb || apt-get install -y -f
 {% if CONFIGURED_ARCH == "armhf" %}
 RUN wget -O cmake_3.13.2-1_bpo9+1_armhf.deb "https://sonicstorage.blob.core.windows.net/packages/cmake/cmake_3.13.2-1_bpo9%2B1_armhf.deb?st=2020-03-27T02%3A29%3A41Z&se=2100-03-26T19%3A00%3A00Z&sp=rl&sv=2018-03-28&sr=b&sig=sWt7kxrFumn020d2GeutGJ716cuQsFwmAmgU%2BJ0kqnk%3D"
-RUN dpkg -i cmake_3.13.2-1_bpo9+1_armhf.deb || apt-get install -f
+RUN dpkg -i cmake_3.13.2-1_bpo9+1_armhf.deb || apt-get install -y -f
 {% elif CONFIGURED_ARCH == "arm64" %}
 RUN wget -O cmake_3.13.2-1_bpo9+1_arm64.deb "https://sonicstorage.blob.core.windows.net/packages/cmake/cmake_3.13.2-1_bpo9%2B1_arm64.deb?st=2020-03-27T02%3A28%3A38Z&se=2100-03-26T19%3A00%3A00Z&sp=rl&sv=2018-03-28&sr=b&sig=rrHMkLi29aI8yH6s52ILCY8VcEbNFrzYT2DmC5RwOgs%3D"
-RUN dpkg -i cmake_3.13.2-1_bpo9+1_arm64.deb || apt-get install -f
+RUN dpkg -i cmake_3.13.2-1_bpo9+1_arm64.deb || apt-get install -y -f
 {% else %}
 RUN wget -O cmake_3.13.2-1_bpo9+1_amd64.deb "https://sonicstorage.blob.core.windows.net/packages/cmake/cmake_3.13.2-1_bpo9%2B1_amd64.deb?st=2020-03-27T02%3A27%3A21Z&se=2100-03-26T19%3A00%3A00Z&sp=rl&sv=2018-03-28&sr=b&sig=4MvmmDBQuicFEJYakLm7xCNU19yJ8GIP4ankFSnITKY%3D"
-RUN dpkg -i cmake_3.13.2-1_bpo9+1_amd64.deb || apt-get install -f
+RUN dpkg -i cmake_3.13.2-1_bpo9+1_amd64.deb || apt-get install -y -f
 {% endif %}
 RUN cd /usr/src/gtest && cmake . && make -C /usr/src/gtest
 
@@ -426,12 +426,12 @@ ENV PATH /usr/share/depot_tools:$PATH
 
 # Install docker engine 17.03.2~ce-0 inside docker and enable experimental feature
 RUN apt-get update
-RUN apt-get install -y \
+RUN apt-get install --no-install-recommends -y \
            apt-transport-https \
            ca-certificates \
            curl \
            gnupg2 \
-           software-properties-common
+           software-properties-common && rm -rf /var/lib/apt/lists/*;
 RUN curl -fsSL https://download.docker.com/linux/debian/gpg | sudo apt-key add -
 RUN add-apt-repository \
            "deb [arch={{ CONFIGURED_ARCH }}] https://download.docker.com/linux/debian \
@@ -439,22 +439,22 @@ RUN add-apt-repository \
            stable"
 RUN apt-get update
 {%- if CONFIGURED_ARCH == "amd64" %}
-RUN apt-get install -y docker-ce=5:18.09.5~3-0~debian-stretch docker-ce-cli=5:18.09.5~3-0~debian-stretch
+RUN apt-get install --no-install-recommends -y docker-ce=5:18.09.5~3-0~debian-stretch docker-ce-cli=5:18.09.5~3-0~debian-stretch && rm -rf /var/lib/apt/lists/*;
 {%- else %}
-RUN apt-get install -y docker-ce=18.06.3~ce~3-0~debian
+RUN apt-get install --no-install-recommends -y docker-ce=18.06.3~ce~3-0~debian && rm -rf /var/lib/apt/lists/*;
 {%- endif %}
 RUN echo "DOCKER_OPTS=\"--experimental --storage-driver=vfs {{ DOCKER_EXTRA_OPTS }}\"" >> /etc/default/docker
 
 # Install m2crypto package, needed by SWI tools
-RUN pip install m2crypto==0.36.0
+RUN pip install --no-cache-dir m2crypto==0.36.0
 
 # Install swi tools
-RUN pip2 install git+https://github.com/aristanetworks/swi-tools.git@d51761ec0bb93c73039233f3c01ed48235ffad00
+RUN pip2 install --no-cache-dir git+https://github.com/aristanetworks/swi-tools.git@d51761ec0bb93c73039233f3c01ed48235ffad00
 
 {% if CONFIGURED_ARCH != "amd64" -%}
 # Install node.js for azure pipeline
-RUN curl -sL https://deb.nodesource.com/setup_10.x | bash -
-RUN apt-get install -y nodejs
+RUN curl -f -sL https://deb.nodesource.com/setup_10.x | bash -
+RUN apt-get install --no-install-recommends -y nodejs && rm -rf /var/lib/apt/lists/*;
 
 # Tell azure pipeline to use node.js in the docker
 LABEL "com.azure.dev.pipelines.agent.handler.node.path"="/usr/bin/node"