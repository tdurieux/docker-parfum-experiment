{
  "startTime": 1674216549440,
  "endTime": 1674216550429,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 124
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 7,
        "columnEnd": 51
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 7,
        "columnEnd": 56
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 7,
        "columnEnd": 102
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 6,
        "lineEnd": 10,
        "columnStart": 7,
        "columnEnd": 25
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM centos:7.6.1810\n\n# set up base\nCOPY ssh_config /root/.ssh/config\nRUN yum install -y epel-release \\\n    && yum groupinstall -y \"Development tools\" \\\n    && yum install -y \\\n        ca-certificates wget openssh-server openssh-clients net-tools \\\n        numactl-devel gtk2 atk cairo tcsh libnl3 tcl libmnl tk cmake3 \\\n        libXt-devel qt-devel qt5-qtbase-devel qt5-qtx11extras-devel \\\n        qt5-qttools-devel && rm -rf /var/cache/yum\nENV PATH=$PATH:/usr/lib64/qt5/bin\n\n# configure cmake alias\nRUN alternatives --install /usr/local/bin/cmake cmake /usr/bin/cmake3 10 \\\n        --slave /usr/local/bin/ctest ctest /usr/bin/ctest3 \\\n        --slave /usr/local/bin/cpack cpack /usr/bin/cpack3 \\\n        --slave /usr/local/bin/ccmake ccmake /usr/bin/ccmake3 \\\n        --family cmake\n\n# set up ssh keys\nRUN mkdir -p /var/run/sshd \\\n    && ssh-keygen -A \\\n    && sed -i 's/UsePAM yes/UsePAM no/g' /etc/ssh/sshd_config \\\n    && sed -i 's/#PermitRootLogin yes/PermitRootLogin yes/g' /etc/ssh/sshd_config \\\n    && sed -i 's/#RSAAuthentication yes/RSAAuthentication yes/g' /etc/ssh/sshd_config \\\n    && sed -i 's/#PubkeyAuthentication yes/PubkeyAuthentication yes/g' /etc/ssh/sshd_config \\\n    && ssh-keygen -f /root/.ssh/id_rsa -t rsa -N '' \\\n    && chmod 600 /root/.ssh/config \\\n    && chmod 700 /root/.ssh \\\n    && cp /root/.ssh/id_rsa.pub /root/.ssh/authorized_keys\n\n# download and install mlnx\nRUN wget -q -O - https://www.mellanox.com/downloads/ofed/MLNX_OFED-4.6-1.0.1.1/MLNX_OFED_LINUX-4.6-1.0.1.1-rhel7.6-x86_64.tgz | tar -xzf - \\\n    && ./MLNX_OFED_LINUX-4.6-1.0.1.1-rhel7.6-x86_64/mlnxofedinstall --user-space-only --without-fw-update --all --force \\\n    && rm -rf MLNX_OFED_LINUX-4.6-1.0.1.1-rhel7.6-x86_64\n\n# download and install HPC-X\nENV HPCX_VERSION=\"v2.4.1\"\nRUN cd /opt && \\\n    wget -q -O - ftp://bgate.mellanox.com/uploads/hpcx-${HPCX_VERSION}-gcc-MLNX_OFED_LINUX-4.6-1.0.1.1-redhat7.6-x86_64.tbz | tar -xjf - \\\n    && HPCX_PATH=/opt/hpcx-${HPCX_VERSION}-gcc-MLNX_OFED_LINUX-4.6-1.0.1.1-redhat7.6-x86_64 \\\n    && HCOLL_PATH=${HPCX_PATH}/hcoll \\\n    && UCX_PATH=${HPCX_PATH}/ucx\n\n# download and install OpenMPI\nENV OMPI_VERSION=\"4.0.1\"\nRUN wget -q -O - https://download.open-mpi.org/release/open-mpi/v4.0/openmpi-${OMPI_VERSION}.tar.gz | tar -xzf - \\\n    && cd openmpi-${OMPI_VERSION} \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-ucx=${UCX_PATH} --with-hcoll=${HCOLL_PATH} --enable-mpirun-prefix-by-default \\\n    && make -j 8 && make install \\\n    && cd .. \\\n    && rm -rf openmpi-${OMPI_VERSION}\n\n# download and isntall OpenFOAM\nRUN mkdir -p /opt/OpenFOAM \\\n    && cd /opt/OpenFOAM \\\n    && wget -q -O - https://dl.openfoam.org/source/7 | tar xz \\\n    && wget -q -O - https://dl.openfoam.org/third-party/7 | tar xz \\\n    && mv OpenFOAM-7-version-7 OpenFOAM-7 \\\n    && mv ThirdParty-7-version-7 ThirdParty-7 \\\n    && sed -i 's/FOAM_INST_DIR=$HOME\\/\\$WM_PROJECT/FOAM_INST_DIR=\\/opt\\/\\$WM_PROJECT/' /opt/OpenFOAM/OpenFOAM-7/etc/bashrc \\\n    && source /opt/OpenFOAM/OpenFOAM-7/etc/bashrc \\\n    # install OpenFOAM dependency - Scotch/PT-Scotch\n    && /opt/OpenFOAM/ThirdParty-7/Allwmake \\\n    # install OpenFOAM dependency - ParaView\n    && /opt/OpenFOAM/ThirdParty-7/makeParaView -config \\\n    && sed -i '/DOCUMENTATION_DIR \"\\${CMAKE_CURRENT_SOURCE_DIR}\\/doc\"/d' /opt/OpenFOAM/ThirdParty-7/ParaView-5.6.0/Plugins/MOOSETools/CMakeLists.txt \\\n    && sed -i '/DOCUMENTATION_DIR \"\\${CMAKE_CURRENT_SOURCE_DIR}\\/doc\"/d' /opt/OpenFOAM/ThirdParty-7/ParaView-5.6.0/Plugins/SurfaceLIC/CMakeLists.txt \\\n    && /opt/OpenFOAM/ThirdParty-7/makeParaView \\\n    # install OpenFOAM\n    && wmRefresh \\\n    && /opt/OpenFOAM/OpenFOAM-7/Allwmake -j \\\n    # hack to make sure that sourcing /opt/OpenFOAM/OpenFOAM-7/etc/bashrc does not fail with `set -e`\n    && sed -i 's/unalias wmRefresh 2> \\/dev\\/null/unalias wmRefresh 2> \\/dev\\/null || true/' /opt/OpenFOAM/OpenFOAM-7/etc/config.sh/aliases \\\n    # remove intermediate build files\n    && rm -rf \\\n        /opt/OpenFOAM/OpenFOAM-7/platforms/*/applications \\\n        /opt/OpenFOAM/OpenFOAM-7/platforms/*/src \\\n        /opt/OpenFOAM/ThirdParty-7/build \\\n        /opt/OpenFOAM/ThirdParty-7/gcc-* \\\n        /opt/OpenFOAM/ThirdParty-7/gmp-* \\\n        /opt/OpenFOAM/ThirdParty-7/mpfr-* \\\n        /opt/OpenFOAM/ThirdParty-7/binutils-* \\\n        /opt/OpenFOAM/ThirdParty-7/boost* \\\n        /opt/OpenFOAM/ThirdParty-7/ParaView-* \\\n        /opt/OpenFOAM/ThirdParty-7/qt-*\n\n# set up sshd on port 23\nEXPOSE 23\nCMD [\"/usr/sbin/sshd\", \"-D\", \"-p\", \"23\"]\n"
}