diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/azure/batch-shipyard/recipes/mpiBench-Infiniband-MPICH/docker/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/azure/batch-shipyard/recipes/mpiBench-Infiniband-MPICH/docker/Dockerfile/repaired.Dockerfile
index ca5df4e..7772e45 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/azure/batch-shipyard/recipes/mpiBench-Infiniband-MPICH/docker/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/azure/batch-shipyard/recipes/mpiBench-Infiniband-MPICH/docker/Dockerfile/repaired.Dockerfile
@@ -1,12 +1,12 @@
 FROM centos:7.6.1810
- 
+
 # set up base
 COPY ssh_config /root/.ssh/config
 RUN yum install -y epel-release \
     && yum groupinstall -y "Development tools" \
     && yum install -y \
         ca-certificates wget openssh-server openssh-clients net-tools \
-        numactl-devel gtk2 atk cairo tcsh libnl3 tcl libmnl tk
+        numactl-devel gtk2 atk cairo tcsh libnl3 tcl libmnl tk && rm -rf /var/cache/yum
 
 # set up ssh keys
 RUN mkdir -p /var/run/sshd \
@@ -24,8 +24,8 @@ RUN mkdir -p /var/run/sshd \
 ENV INSTALL_PREFIX=/opt
 WORKDIR /tmp/mpi
 
-# download and install mlnx 
-RUN wget -q -O - http://www.mellanox.com/downloads/ofed/MLNX_OFED-4.6-1.0.1.1/MLNX_OFED_LINUX-4.6-1.0.1.1-rhel7.6-x86_64.tgz | tar -xzf - \
+# download and install mlnx
+RUN wget -q -O - https://www.mellanox.com/downloads/ofed/MLNX_OFED-4.6-1.0.1.1/MLNX_OFED_LINUX-4.6-1.0.1.1-rhel7.6-x86_64.tgz | tar -xzf - \
     && ./MLNX_OFED_LINUX-4.6-1.0.1.1-rhel7.6-x86_64/mlnxofedinstall --user-space-only --without-fw-update --all --force \
     && rm -rf MLNX_OFED_LINUX-4.6-1.0.1.1-rhel7.6-x86_64
 
@@ -41,7 +41,7 @@ RUN cd ${INSTALL_PREFIX} && \
 ENV MPICH_VERSION="3.3"
 RUN wget -q -O - wget https://www.mpich.org/static/downloads/${MPICH_VERSION}/mpich-${MPICH_VERSION}.tar.gz | tar -xzf - \
     && cd mpich-${MPICH_VERSION} \
-    && ./configure --with-ucx=${UCX_PATH} --with-hcoll=${HCOLL_PATH} --enable-mpirun-prefix-by-default --with-device=ch4:ucx \
+    && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --with-ucx=${UCX_PATH} --with-hcoll=${HCOLL_PATH} --enable-mpirun-prefix-by-default --with-device=ch4:ucx \
     && make -j 8 && make install \
     && cd .. \
     && rm -rf mpich-${MPICH_VERSION}