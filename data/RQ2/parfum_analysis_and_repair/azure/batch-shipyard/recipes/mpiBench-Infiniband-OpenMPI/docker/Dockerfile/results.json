{
  "startTime": 1674253062708,
  "endTime": 1674253063670,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 124
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 7,
        "columnEnd": 102
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 6,
        "lineEnd": 8,
        "columnStart": 7,
        "columnEnd": 62
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM centos:7.6.1810\n\n# set up base\nCOPY ssh_config /root/.ssh/config\nRUN yum install -y epel-release \\\n    && yum groupinstall -y \"Development tools\" \\\n    && yum install -y \\\n        ca-certificates wget openssh-server openssh-clients net-tools \\\n        numactl-devel gtk2 atk cairo tcsh libnl3 tcl libmnl tk && rm -rf /var/cache/yum\n\n# set up ssh keys\nRUN mkdir -p /var/run/sshd \\\n    && ssh-keygen -A \\\n    && sed -i 's/UsePAM yes/UsePAM no/g' /etc/ssh/sshd_config \\\n    && sed -i 's/#PermitRootLogin yes/PermitRootLogin yes/g' /etc/ssh/sshd_config \\\n    && sed -i 's/#RSAAuthentication yes/RSAAuthentication yes/g' /etc/ssh/sshd_config \\\n    && sed -i 's/#PubkeyAuthentication yes/PubkeyAuthentication yes/g' /etc/ssh/sshd_config \\\n    && ssh-keygen -f /root/.ssh/id_rsa -t rsa -N '' \\\n    && chmod 600 /root/.ssh/config \\\n    && chmod 700 /root/.ssh \\\n    && cp /root/.ssh/id_rsa.pub /root/.ssh/authorized_keys\n\n# set up workdir\nENV INSTALL_PREFIX=/opt\nWORKDIR /tmp/mpi\n\n# download and install mlnx\nRUN wget -q -O - https://www.mellanox.com/downloads/ofed/MLNX_OFED-4.6-1.0.1.1/MLNX_OFED_LINUX-4.6-1.0.1.1-rhel7.6-x86_64.tgz | tar -xzf - \\\n    && ./MLNX_OFED_LINUX-4.6-1.0.1.1-rhel7.6-x86_64/mlnxofedinstall --user-space-only --without-fw-update --all --force \\\n    && rm -rf MLNX_OFED_LINUX-4.6-1.0.1.1-rhel7.6-x86_64\n\n# download and install HPC-X\nENV HPCX_VERSION=\"v2.4.1\"\nRUN cd ${INSTALL_PREFIX} && \\\n    wget -q -O - ftp://bgate.mellanox.com/uploads/hpcx-${HPCX_VERSION}-gcc-MLNX_OFED_LINUX-4.6-1.0.1.1-redhat7.6-x86_64.tbz | tar -xjf - \\\n    && HPCX_PATH=${INSTALL_PREFIX}/hpcx-${HPCX_VERSION}-gcc-MLNX_OFED_LINUX-4.6-1.0.1.1-redhat7.6-x86_64 \\\n    && HCOLL_PATH=${HPCX_PATH}/hcoll \\\n    && UCX_PATH=${HPCX_PATH}/ucx\n\n# download and install OpenMPI\nENV OMPI_VERSION=\"4.0.1\"\nRUN wget -q -O - https://download.open-mpi.org/release/open-mpi/v4.0/openmpi-${OMPI_VERSION}.tar.gz | tar -xzf - \\\n    && cd openmpi-${OMPI_VERSION} \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-ucx=${UCX_PATH} --with-hcoll=${HCOLL_PATH} --enable-mpirun-prefix-by-default \\\n    && make -j 8 && make install \\\n    && cd .. \\\n    && rm -rf openmpi-${OMPI_VERSION}\n\n# download and install mpiBench\nRUN wget -q -O - https://codeload.github.com/LLNL/mpiBench/tar.gz/master | tar -xzf - \\\n    && mv ./mpiBench-master /mpiBench \\\n    && cd /mpiBench \\\n    && make\n\n# set up sshd on port 23\nEXPOSE 23\nCMD [\"/usr/sbin/sshd\", \"-D\", \"-p\", \"23\"]\n"
}