{
  "startTime": 1674254550727,
  "endTime": 1674254551861,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 116
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Dockerfile for mxnet-cpu for use with Batch Shipyard on Azure Batch\n\nFROM ubuntu:16.04\nMAINTAINER Fred Park <https://github.com/Azure/batch-shipyard>\n\n# install base system\nCOPY ssh_config /root/.ssh/config\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n        build-essential git libssl-dev libcurl4-openssl-dev wget curl unzip \\\n        openssh-server openssh-client ca-certificates && \\\n    apt-get install -y --no-install-recommends \\\n        python-pip python-setuptools && \\\n    apt-get install -y --no-install-recommends \\\n        gfortran libopenblas-dev && \\\n    apt-get install -y --no-install-recommends \\\n        libopencv-core-dev && \\\n    apt-get install -y --no-install-recommends \\\n        libopencv-dev && \\\n    apt-get install -y --no-install-recommends \\\n        python-numpy python-opencv && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    # configure ssh server and keys\n    mkdir /var/run/sshd && \\\n    ssh-keygen -A && \\\n    sed -i 's/PermitRootLogin without-password/PermitRootLogin yes/' /etc/ssh/sshd_config && \\\n    sed 's@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd && \\\n    ssh-keygen -f /root/.ssh/id_rsa -t rsa -N '' && \\\n    chmod 600 /root/.ssh/config && \\\n    chmod 700 /root/.ssh && \\\n    cp /root/.ssh/id_rsa.pub /root/.ssh/authorized_keys\n\n# install Microsoft R Open\nRUN curl -f -L --retry 10 --retry-max-time 0 https://mran.microsoft.com/install/mro/3.3.1/microsoft-r-open-3.3.1.tar.gz | tar -zxvpf - && \\\n    cd microsoft-r-open && \\\n    ./install.sh -a -u && \\\n    cd .. && \\\n    rm -rf microsoft-r-open && \\\n    Rscript -e \"install.packages(c('devtools'), repo = 'https://cran.rstudio.com')\" && \\\n    Rscript -e \"install.packages(c('argparse', 'Rcpp', 'DiagrammeR', 'data.table', 'jsonlite', 'magrittr', 'stringr', 'roxygen2'), repos = 'https://cran.rstudio.com')\"\n\n# install mxnet with both python and R backends\nENV PYTHONPATH /mxnet/python\nRUN git clone --recursive https://github.com/dmlc/mxnet/ && \\\n    cd mxnet && \\\n    cp make/config.mk . && \\\n    echo \"USE_BLAS=openblas\" >> config.mk && \\\n    echo \"USE_DIST_KVSTORE=1\" >> config.mk && \\\n    make -j$(nproc) && \\\n    cd R-package && \\\n    Rscript -e \"library(devtools); library(methods); options(repos=c(CRAN='https://cran.rstudio.com')); install_deps(dependencies = TRUE)\" && \\\n    cd .. && \\\n    make rpkg && \\\n    R CMD INSTALL mxnet_*.tar.gz && \\\n    cd python && \\\n    python setup.py install\n\n# copy in sample run script\nCOPY run_mxnet.sh /mxnet\n\n# set ssh command\nEXPOSE 23\nCMD [\"/usr/sbin/sshd\", \"-D\", \"-p\", \"23\"]\n"
}