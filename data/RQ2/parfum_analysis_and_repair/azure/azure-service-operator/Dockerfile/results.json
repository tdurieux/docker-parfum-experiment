{
  "startTime": 1674219405479,
  "endTime": 1674219406137,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 99
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Build the manager binary\nFROM golang:1.18 as builder\n\n# need jq for running the Makefile\nRUN curl -f -L -o /usr/local/bin/jq https://github.com/stedolan/jq/releases/download/jq-1.6/jq-linux64 && chmod +x /usr/local/bin/jq\n\nWORKDIR /workspace/\n# Copy the Go Modules manifests\nCOPY go.mod go.mod\nCOPY go.sum go.sum\n# cache deps before building and copying source so that we don't need to re-download as much\n# and so that source changes don't invalidate our downloaded layer\nRUN go mod download\n\n# Copy the go source\nCOPY . ./\n\n# Generate CRD manifests with controller-gen\nRUN make generate\n\n# Build\nRUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 GO111MODULE=on go build -a -o manager main.go\n\n# Use distroless as minimal base image to package the manager binary\n# Refer to https://github.com/GoogleContainerTools/distroless for more details\nFROM gcr.io/distroless/static:nonroot\nENV AZURE_CLIENT_ID \"${AZURE_CLIENT_ID}\"\nENV AZURE_CLIENT_SECRET \"{AZURE_CLIENT_SECRET}\"\nENV AZURE_SUBSCRIPTION_ID \"${AZURE_SUBSCRIPTION_ID}\"\nENV AZURE_TENANT_ID \"${AZURE_TENANT_ID}\"\nENV REQUEUE_AFTER \"30\"\nENV AZURE_OPERATOR_KEYVAULT \"${AZURE_OPERATOR_KEYVAULT}\"\nWORKDIR /\nCOPY --from=builder /workspace/manager .\nUSER nonroot:nonroot\nENTRYPOINT [\"/manager\"]\n"
}