{
  "startTime": 1674253559676,
  "endTime": 1674253560796,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 81,
        "lineEnd": 81,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 94,
        "lineEnd": 94,
        "columnStart": 4,
        "columnEnd": 115
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 82,
        "lineEnd": 82,
        "columnStart": 4,
        "columnEnd": 17
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 28,
        "lineEnd": 38,
        "columnStart": 7,
        "columnEnd": 14
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 91,
        "lineEnd": 91,
        "columnStart": 22,
        "columnEnd": 71
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 28,
        "lineEnd": 38,
        "columnStart": 7,
        "columnEnd": 14
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 7,
        "columnEnd": 91
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 28,
        "lineEnd": 38,
        "columnStart": 7,
        "columnEnd": 14
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 91,
        "lineEnd": 91,
        "columnStart": 22,
        "columnEnd": 71
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 28,
        "lineEnd": 38,
        "columnStart": 7,
        "columnEnd": 14
      }
    }
  ],
  "repairedDockerfile": "# Copyright (c) Microsoft Corporation.\n# Licensed under the MIT License.\nFROM ubuntu:20.04\n\n# Instructs apt-get to run without a terminal\nENV DEBIAN_FRONTEND=noninteractive\n\n# Terraform, providers and tflint versions\nARG TERRAFORM_VERSION=1.1.2\nARG AZURERM_VERSION=2.90.0\nARG RANDOM_VERSION=3.1.0\nARG TIME_VERSION=0.7.2\nARG TFLINT_VERSION=0.34.0\nARG TFLINT_AZURERM=0.14.0\n\n# Azure CLI version\nARG AZURE_CLI_VERSION=2.31.0-1~focal\n\n# Bicep version\nARG BICEP_VERSION=v0.4.1272\n\n# Update distro (software-properties-common installs the add-apt-repository command)\nRUN apt-get update \\\n    && apt-get -y install --no-install-recommends apt-utils software-properties-common 2>&1 \\\n    && apt-get dist-upgrade -y && rm -rf /var/lib/apt/lists/*;\n\n# Install prerequisites\nRUN add-apt-repository ppa:git-core/ppa \\\n    && apt-get install --no-install-recommends -y \\\n    apt-transport-https \\\n    wget \\\n    unzip \\\n    git \\\n    ca-certificates \\\n    curl \\\n    lsb-release \\\n    gnupg \\\n    sudo \\\n    shellcheck && rm -rf /var/lib/apt/lists/*;\n\n# Install Terraform and tflint\nRUN wget -O terraform.zip https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip \\\n    && wget -O tflint.zip https://github.com/terraform-linters/tflint/releases/download/v${TFLINT_VERSION}/tflint_linux_amd64.zip \\\n    && unzip ./terraform.zip -d /usr/local/bin/ \\\n    && unzip ./tflint.zip -d /usr/local/bin/ \\\n    && rm terraform.zip \\\n    && rm tflint.zip\n\n# Download Terraform providers (plugins)\n# Setting the TF_PLUGIN_CACHE_DIR environment variable instructs Terraform to search that folder for plugins first\nENV TF_PLUGIN_CACHE_DIR=/usr/lib/tf-plugins\nENV TFLINT_PLUGIN_DIR=/usr/lib/tflint-plugins\nARG AZURERM_LOCAL_PATH=\"${TF_PLUGIN_CACHE_DIR}/registry.terraform.io/hashicorp/azurerm/${AZURERM_VERSION}/linux_amd64\"\nARG RANDOM_LOCAL_PATH=\"${TF_PLUGIN_CACHE_DIR}/registry.terraform.io/hashicorp/random/${RANDOM_VERSION}/linux_amd64\"\nARG TIME_LOCAL_PATH=\"${TF_PLUGIN_CACHE_DIR}/registry.terraform.io/hashicorp/time/${TIME_VERSION}/linux_amd64\"\nARG AZURERM_PROVIDER=https://releases.hashicorp.com/terraform-provider-azurerm/${AZURERM_VERSION}/terraform-provider-azurerm_${AZURERM_VERSION}_linux_amd64.zip\nARG RANDOM_PROVIDER=https://releases.hashicorp.com/terraform-provider-random/${RANDOM_VERSION}/terraform-provider-random_${RANDOM_VERSION}_linux_amd64.zip\nARG TIME_PROVIDER=https://releases.hashicorp.com/terraform-provider-time/${TIME_VERSION}/terraform-provider-time_${TIME_VERSION}_linux_amd64.zip\nARG AZURERM_TFLINT_PLUGIN=https://github.com/terraform-linters/tflint-ruleset-azurerm/releases/download/v${TFLINT_AZURERM}/tflint-ruleset-azurerm_linux_amd64.zip\nRUN wget -O azurerm.zip ${AZURERM_PROVIDER} \\\n    && wget -O random.zip ${RANDOM_PROVIDER} \\\n    && wget -O time.zip ${TIME_PROVIDER} \\\n    && wget -O tflintazurerm.zip ${AZURERM_TFLINT_PLUGIN} \\\n    && mkdir -p ${AZURERM_LOCAL_PATH} \\\n    && mkdir -p ${RANDOM_LOCAL_PATH} \\\n    && mkdir -p ${TIME_LOCAL_PATH} \\\n    && unzip azurerm.zip -d ${AZURERM_LOCAL_PATH} \\\n    && unzip random.zip -d ${RANDOM_LOCAL_PATH} \\\n    && unzip time.zip -d ${TIME_LOCAL_PATH} \\\n    && unzip tflintazurerm.zip -d ${TFLINT_PLUGIN_DIR} \\\n    && rm azurerm.zip \\\n    && rm random.zip \\\n    && rm time.zip \\\n    && rm tflintazurerm.zip\n\n# Install the Microsoft package key\nRUN wget -q https://packages.microsoft.com/config/ubuntu/20.04/packages-microsoft-prod.deb -O packages-microsoft-prod.deb \\\n    && dpkg -i packages-microsoft-prod.deb \\\n    && rm packages-microsoft-prod.deb\n\n# Install the Microsoft signing key\nRUN curl -f -sL https://packages.microsoft.com/keys/microsoft.asc | \\\n    gpg --batch --dearmor | \\\n    tee /etc/apt/trusted.gpg.d/microsoft.gpg > /dev/null\n\n# Install the AZ CLI repository\nRUN AZ_REPO=$(lsb_release -cs) \\\n    && echo \"deb [arch=amd64] https://packages.microsoft.com/repos/azure-cli/ $AZ_REPO main\" | \\\n    tee /etc/apt/sources.list.d/azure-cli.list\n\n# Install AZ CLI\nRUN apt-get update && apt-get install --no-install-recommends -y azure-cli=${AZURE_CLI_VERSION} && rm -rf /var/lib/apt/lists/*;\n\n# Install Bicep\nRUN curl -f -Lo /usr/local/bin/bicep https://github.com/Azure/bicep/releases/download/${BICEP_VERSION}/bicep-linux-x64 \\\n    && chmod +x /usr/local/bin/bicep\n\n# Clean up\nRUN apt-get autoremove -y \\\n    && apt-get clean -y \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Add the vscode user\nARG USERNAME=vscode\nARG USER_UID=1000\nARG USER_GID=$USER_UID\nRUN groupadd --gid $USER_GID $USERNAME \\\n    && useradd -s /bin/bash --uid $USER_UID --gid $USERNAME -m $USERNAME \\\n    && echo $USERNAME ALL=\\(root\\) NOPASSWD:ALL > /etc/sudoers.d/$USERNAME \\\n    && chmod 0440 /etc/sudoers.d/$USERNAME\n\n# Reset to the default value\nENV DEBIAN_FRONTEND=dialog\n"
}