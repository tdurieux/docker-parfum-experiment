{
  "startTime": 1674248055708,
  "endTime": 1674248056683,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 65
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM erlang:24.2-alpine as builder\n\nRUN apk add --update tar curl git bash make libc-dev gcc g++ && \\\n    rm -rf /var/cache/apk/*\n\nRUN set -xe \\\n    && curl -fSL -o rebar3 \"https://s3.amazonaws.com/rebar3/rebar3\" \\\n    && chmod +x ./rebar3 \\\n    && ./rebar3 local install \\\n    && rm ./rebar3\n\nWORKDIR /usr/src/app\nCOPY . /usr/src/app\n\nENV PATH \"$PATH:/root/.cache/rebar3/bin\"\nRUN rebar3 as prod tar\n\nRUN mkdir -p /opt/rel\nRUN tar -zxvf /usr/src/app/_build/prod/rel/*/*.tar.gz -C /opt/rel && rm /usr/src/app/_build/prod/rel/*/*.tar.gz\n\nRUN relname=$(ls _build/prod/rel) ; echo $relname > /opt/rel/__relname\n\nFROM alpine:3.15\n\nRUN apk add --no-cache openssl-dev ncurses libstdc++ libgcc\n\nWORKDIR /opt/rel\n\nENV RELX_REPLACE_OS_VARS true\nENV HTTP_PORT {{PORT}}\n\nCOPY --from=builder /opt/rel /opt/rel\n\nEXPOSE {{PORT}} {{PORT}}\n\nRUN ln -s /opt/rel/bin/$(cat /opt/rel/__relname) /opt/rel/bin/start_script\nENTRYPOINT [\"/opt/rel/bin/start_script\"]\n\nCMD [\"foreground\"]\n\n"
}