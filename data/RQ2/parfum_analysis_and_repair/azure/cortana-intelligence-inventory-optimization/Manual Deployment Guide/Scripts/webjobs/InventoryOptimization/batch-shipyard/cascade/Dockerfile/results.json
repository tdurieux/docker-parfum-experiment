{
  "startTime": 1674216954245,
  "endTime": 1674216955391,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 7,
        "columnEnd": 201
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 7,
        "columnEnd": 107
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Dockerfile for Azure/batch-shipyard (Cascade)\n\nFROM gliderlabs/alpine:3.4\nMAINTAINER Fred Park <https://github.com/Azure/batch-shipyard>\n\n# set environment variables\n# currently libtorrent-rasterbar 1.1.0+ DHT implementations are broken\nENV libtorrent_version=1.0.11 \\\n    CFLAGS=-lstdc++ PYTHON=/usr/bin/python3 PYTHON_VERSION=3.5\n\n# add base packages, python dependencies, create script directory,\n# build libtorrent-rasterbar for python3 and cleanup packaging\nRUN apk update \\\n    && apk add --update --no-cache \\\n        musl build-base python3 python3-dev openssl-dev libffi-dev \\\n        ca-certificates boost boost-dev boost-python3 file curl tar pigz \\\n        docker bash \\\n    && pip3 install --no-cache-dir --upgrade pip \\\n    && pip3 install --no-cache-dir --upgrade azure-storage==0.34.2 \\\n    && curl -f -SL https://github.com/arvidn/libtorrent/releases/download/libtorrent-${libtorrent_version//./_}/libtorrent-rasterbar-${libtorrent_version}.tar.gz -o libtorrent-${libtorrent_version}.tar.gz \\\n    && tar zxvpf libtorrent-${libtorrent_version}.tar.gz \\\n    && cd libtorrent-rasterbar-${libtorrent_version} \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr --enable-debug=no --enable-python-binding --with-boost-system=boost_system \\\n    && make -j2 install \\\n    && ldconfig /usr/lib \\\n    && cd .. \\\n    && rm -rf libtorrent-rasterbar-${libtorrent_version} \\\n    && rm -f libtorrent-${libtorrent_version}.tar.gz \\\n    && apk del --purge \\\n        build-base python3-dev openssl-dev libffi-dev python boost-dev \\\n        file curl \\\n    && apk add --no-cache boost-random \\\n    && rm /var/cache/apk/* \\\n    && mkdir -p /opt/batch-shipyard\n\n# copy in files\nCOPY cascade.py setup_private_registry.py perf.py docker_cascade.sh /opt/batch-shipyard/\n\n# pre-compile files\nRUN python3 -m compileall -f /opt/batch-shipyard\n\n# set command\nCMD [\"/opt/batch-shipyard/docker_cascade.sh\"]\n\n"
}