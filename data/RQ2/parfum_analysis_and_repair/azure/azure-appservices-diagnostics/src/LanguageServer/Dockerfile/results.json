{
  "startTime": 1674250727710,
  "endTime": 1674250728456,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 142
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 190
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 28,
        "columnEnd": 65
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 31,
        "columnEnd": 74
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:8.16.0-stretch-slim\n\n# Omnisharp\nENV OMNISHARP_VERSION 1.37.0\nRUN curl -f -L -o omnisharp.tar.gz https://github.com/OmniSharp/omnisharp-roslyn/releases/download/v$OMNISHARP_VERSION/omnisharp-linux-x64.tar.gz\nRUN curl -f -L -o dotnet.tar.gz https://download.visualstudio.microsoft.com/download/pr/d731f991-8e68-4c7c-8ea0-fad5605b077a/49497b5420eecbd905158d86d738af64/dotnet-sdk-3.1.100-linux-x64.tar.gz\nRUN mkdir -p /opt/dotnet && tar -zxf dotnet.tar.gz -C /opt/dotnet && rm dotnet.tar.gz\nRUN mkdir -p /opt/omnisharp && tar -zxf omnisharp.tar.gz -C /opt/omnisharp && rm omnisharp.tar.gz\n\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n        libc6 \\\n        libgcc1 \\\n        libgssapi-krb5-2 \\\n        libicu57 \\\n        liblttng-ust0 \\\n        libssl1.0.2 \\\n        libstdc++6 \\\n        zlib1g \\\n        ca-certificates \\\n    && rm -rf /var/lib/apt/lists/*\n\nRUN ln -s /opt/dotnet/dotnet /usr/bin/dotnet\nENV DOTNET_RUNNING_IN_CONTAINER=true \\\n  NUGET_XMLDOC_MODE=skip \\\n  DOTNET_USE_POLLING_FILE_WATCHER=true\n# Trigger first run experience by running arbitrary cmd to populate local package cache\nRUN dotnet help\n\n# Copy artifacts\nRUN mkdir /workspace\nRUN mkdir /workspace/customdlls\nCOPY workspace/customdlls /workspace/customdlls\nCOPY workspace/Solution.csproj /workspace/\n\nWORKDIR /app\nCOPY package.json package.json\nCOPY src src\nRUN npm install && npm cache clean --force;\nEXPOSE 3000\n# Entrypoint\nCMD npm run start:ext\n"
}