{
  "startTime": 1674256251583,
  "endTime": 1674256253164,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 106,
        "lineEnd": 113,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 175,
        "lineEnd": 206,
        "columnStart": 4,
        "columnEnd": 13
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 103,
        "lineEnd": 103,
        "columnStart": 4,
        "columnEnd": 55
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 152,
        "lineEnd": 152,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 232,
        "lineEnd": 232,
        "columnStart": 4,
        "columnEnd": 65
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# Dockerfile for Apache/PHP/MySQL\n#\nFROM alpine:3.6\nMAINTAINER Azure App Service Container Images <appsvc-images@microsoft.com>\n# ========\n# ENV vars\n# ========\n#apache httpd\nENV HTTPD_VERSION \"2.4.33\"\nENV HTTPD_DOWNLOAD_URL \"http://archive.apache.org/dist/httpd/httpd-\"$HTTPD_VERSION\".tar.gz\"\nENV HTTPD_SHA256 \"cd34636caf03c9a897ddfc928fc866c965f23d909b9612880563a7ad0d1a7e5b\"\nENV HTTPD_SOURCE \"/usr/src/httpd\"\nENV HTTPD_HOME \"/usr/local/httpd\"\nENV HTTPD_CONF_DIR \"$HTTPD_HOME/conf\"\nENV HTTPD_CONF_FILE \"$HTTPD_CONF_DIR/httpd.conf\"\nENV HTTPD_LOG_DIR \"/home/LogFiles/httpd\"\nENV PATH \"$HTTPD_HOME/bin\":$PATH\n# mariadb\nENV MARIADB_DATA_DIR \"/home/data/mysql\"\nENV MARIADB_LOG_DIR \"/home/LogFiles/mysql\"\n# supervisor\nENV SUPERVISOR_LOG_DIR \"/home/LogFiles/supervisor\"\n# php\nENV PHP_VERSION \"7.2.4\"\nENV PHP_DOWNLOAD_URL \"https://secure.php.net/get/php-\"$PHP_VERSION.tar.gz\"/from/this/mirror\"\nENV PHP_SHA256 \"58e28e978baea0fe9009432bcb436934eaacccfdcb5f5409c7526431a595857b\"\nENV PHP_SOURCE \"/usr/src/php\"\nENV PHP_HOME \"/usr/local/php\"\nENV PHP_CONF_DIR $PHP_HOME\"/etc\"\nENV PHP_CONF_FILE $PHP_CONF_DIR\"/php.ini\"\nENV PHP_CONF_DIR_SCAN $PHP_CONF_DIR\"/conf.d\"\nENV PATH \"$PHP_HOME/bin\":$PATH\n# phpmyadmin\nENV PHPMYADMIN_VERSION \"4.8.0\"\nENV PHPMYADMIN_DOWNLOAD_URL \"https://files.phpmyadmin.net/phpMyAdmin/$PHPMYADMIN_VERSION/phpMyAdmin-$PHPMYADMIN_VERSION-all-languages.tar.gz\"\nENV PHPMYADMIN_SHA256 \"1e83d60627d8036261af71220eae9ffd8d3150778702720905bcfa85c40ce346\"\nENV PHPMYADMIN_SOURCE \"/usr/src/phpmyadmin\"\nENV PHPMYADMIN_HOME \"/home/phpmyadmin\"\n# ssh\nENV SSH_PASSWD \"root:Docker!\"\n# app\nENV APP_HOME \"/home/site/wwwroot\"\nENV PHPIZE_DEPS \"\\\n\t\tautoconf \\\n\t\tdpkg-dev dpkg \\\n\t\tfile \\\n\t\tg++ \\\n\t\tgcc \\\n\t\tlibc-dev \\\n\t\tmake \\\n\t\tpcre-dev \\\n\t\tpkgconf \\\n        re2c\"\n#\nENV DOCKER_BUILD_HOME \"/dockerbuild\"\n    # ---------------\n\t# 2. apache httpd\n\t# ---------------\nRUN mkdir -p \"$DOCKER_BUILD_HOME\"\nWORKDIR $DOCKER_BUILD_HOME\nRUN set -x \\\n    # ensure www-data user exists\n\t&& addgroup -g 82 -S www-data \\\n\t&& adduser -u 82 -D -S -G www-data www-data\n# 82 is the standard uid/gid for \"www-data\" in Alpine\n# http://git.alpinelinux.org/cgit/aports/tree/main/apache2/apache2.pre-install?h=v3.3.2\n# http://git.alpinelinux.org/cgit/aports/tree/main/lighttpd/lighttpd.pre-install?h=v3.3.2\n# http://git.alpinelinux.org/cgit/aports/tree/main/nginx-initscripts/nginx-initscripts.pre-install?h=v3.3.2\n#\nRUN mkdir -p \"$HTTPD_HOME\" \\\n\t&& chown www-data:www-data \"$HTTPD_HOME\" \\\n    && mkdir -p \"$HTTPD_SOURCE\" \\\n\t&& runDeps=' \\\n\t\tapr-dev \\\n\t\tapr-util-dev \\\n\t\tapr-util-ldap \\\n\t\tperl \\\n\t' \\\n\t&& apk add --no-cache --virtual .build-deps \\\n\t\t$runDeps \\\n\t\tca-certificates \\\n\t\tcoreutils \\\n\t\tdpkg-dev dpkg \\\n\t\tgcc \\\n\t\tgnupg \\\n\t\tlibc-dev \\\n\t\t# mod_session_crypto\n\t\tlibressl \\\n\t\tlibressl-dev \\\t\t\n\t\t# mod_proxy_html mod_xml2enc\n\t\tlibxml2-dev \\\n\t\t# mod_lua\n        lua-dev \\\n  \t\tmake \\\n\t\t# mod_http2\n\t\tnghttp2-dev \\\n        pcre-dev \\\n\t\ttar \\\n\t\t# mod_deflate\n        zlib-dev \\\t\t\n\t&& cd $DOCKER_BUILD_HOME \\\n\t&& wget -O httpd.tar.gz $HTTPD_DOWNLOAD_URL --no-check-certificate \\\n\t&& echo \"$HTTPD_SHA256  *httpd.tar.gz\" | sha256sum -c - \\\n\t&& tar -xf httpd.tar.gz -C $HTTPD_SOURCE --strip-components=1 \\\n\t&& cd \"$HTTPD_SOURCE\" \\\n\t&& ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n\t\t--prefix=$HTTPD_HOME \\\n\t\t### using prefork for PHP. see http://php.net/manual/en/install.unix.apache2.php\n\t\t--with-mpm=prefork \\\n\t\t--enable-mods-shared=reallyall \\\n\t\t--enable-ssl \\\n                --enable-so \\\n\t\t--enable-deflate \\\n        # https://httpd.apache.org/docs/2.2/programs/configure.html\n\t&& make -j \"$(nproc)\" \\\n\t&& make install \\\n\t&& make clean \\\n\t## clean up\n\t&& rm -rf $HTTPD_SOURCE \\\n\t\t$HTTPD_HOME/man \\\n\t\t$HTTPD_HOME/manual \\\n\t&& rm $DOCKER_BUILD_HOME/httpd.tar.gz \\\n\t&& runDeps=\"$runDeps $( \\\n\t\tscanelf --needed --nobanner --format '%n#p' --recursive /usr/local \\\n\t\t\t| tr ',' '\\n' \\\n\t\t\t| sort -u \\\n\t\t\t| awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \\\n\t)\" \\\n\t&& apk add --virtual .httpd-rundeps $runDeps \\\n\t&& apk del .build-deps \\\n\t# ----------\n\t# 3. mariadb\n\t# ----------\n    && apk add --update mariadb mariadb-client \\\n\t# ------\n\t# 4. php\n\t# ------\n\t### see http://php.net/manual/en/install.unix.apache2.php\n\t### see http://linuxfromscratch.org/blfs/view/svn/general/php.html\n\t&& mkdir -p $PHP_SOURCE \\\n\t&& mkdir -p $PHP_HOME \\\n\t&& apk add --no-cache --virtual .persistent-deps \\\n\t\tca-certificates \\\n\t\tcurl \\\n\t\ttar \\\n\t\txz \\\n\t\t# https://github.com/docker-library/php/issues/494\n        libressl \\\n\t&& mkdir -p $PHP_CONF_DIR_SCAN \\\n\t&& cd $DOCKER_BUILD_HOME \\\n\t&& wget -O php.tar.gz \"$PHP_DOWNLOAD_URL\" --no-check-certificate \\\n\t&& echo \"$PHP_SHA256  *php.tar.gz\" | sha256sum -c - \\\n\t&& tar -xf php.tar.gz -C $PHP_SOURCE --strip-components=1 \\\n\t## configure, make, install\n\t&& apk add --no-cache --virtual .build-deps \\\n\t\t$PHPIZE_DEPS \\\n\t\tcoreutils \\\n\t\tcurl-dev \\\n\t\tlibedit-dev \\\n\t\tlibressl-dev \\\n\t\tlibxml2-dev \\\n\t\tsqlite-dev \\\n\t\tbzip2-dev \\\n\t\tlibjpeg-turbo-dev \\\n\t\tlibpng-dev \\\n\t\tgmp-dev \\\n        icu-dev \\\n        openldap-dev \\\n        libmcrypt-dev \\\t\n\t\tlibxslt-dev \\\n        apr-dev \\\n        apr-util-dev \\\n        apr-util-ldap \\\n\t&& cd $PHP_SOURCE \\\n\t&& ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n\t\t--prefix=$PHP_HOME \\\n\t\t### we don't need CGI version of PHP here\n\t\t--disable-cgi \\\n\t\t--enable-bcmath \\\n\t\t--enable-intl \\\n\t\t--enable-ftp \\\n\t\t--enable-mbstring \\\n\t\t--enable-soap \\\n\t\t--enable-zip \\\n\t\t--with-apxs2=$HTTPD_HOME/bin/apxs \\\n\t\t--with-bz2 \\\n\t\t--with-config-file-path=$PHP_CONF_DIR \\\n\t\t--with-config-file-scan-dir=$PHP_CONF_DIR_SCAN \\\n\t\t--with-curl \\\n\t\t--with-gd \\\n\t\t--with-jpeg-dir \\\n\t\t--with-png-dir \\\n\t\t--with-gmp \\\n\t\t--with-ldap \\\n\t\t--with-mcrypt \\\n\t\t--with-mhash \\\n\t\t### for phpmyadmin\n\t\t--with-mysqli=mysqlnd \\\n\t\t--with-mysql=mysqlnd \\\n\t\t--with-libedit \\\n        --with-pcre-regex=/usr \\\n\t\t--with-openssl \\\n\t\t### see http://php.net/manual/en/mysqlinfo.library.choosing.php\n\t\t--with-pdo-mysql=mysqlnd \\\n\t\t--with-xsl \\\n\t\t--with-zlib \\\n\t&& make -j \"$(nproc)\" \\\n\t&& make install \\\n\t&& make clean \\\n\t## clean up\n\t&& rm -rf $PHP_SOURCE \\\n\t&& rm -rf $PHP_HOME/php/man \\\n\t&& rm $DOCKER_BUILD_HOME/php.tar.gz \\\n\t&& runDeps=\"$( \\\n\t\tscanelf --needed --nobanner --format '%n#p' --recursive /usr/local \\\n\t\t\t| tr ',' '\\n' \\\n\t\t\t| sort -u \\\n\t\t\t| awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \\\n\t)\" \\\n\t&& apk add --no-cache --virtual .php-rundeps $runDeps \\\n\t&& pecl update-channels \\\n\t&& pecl install xdebug-beta \\\n\t&& apk del .build-deps \\\n\t# https://github.com/docker-library/php/issues/443\n    && rm -rf /tmp/pear ~/.pearrc \\\n\t# -------------\n\t# 5. phpmyadmin\n\t# -------------\n\t&& mkdir -p $PHPMYADMIN_SOURCE \\\n\t&& cd $PHPMYADMIN_SOURCE \\\n\t&& wget -O phpmyadmin.tar.gz \"$PHPMYADMIN_DOWNLOAD_URL\" --no-check-certificate \\\n\t&& echo \"$PHPMYADMIN_SHA256  *phpmyadmin.tar.gz\" | sha256sum -c - \\\n\t# ------\n\t# 6. ssh\n\t# ------\n    && apk add --update openssh-server \\\n\t&& echo \"$SSH_PASSWD\" | chpasswd \\\n\t#---------------\n\t# openrc service\n\t#---------------\n    && apk update && apk add openrc \\\n    # can't do cgroups\n    && sed -i 's/\"cgroup_add_service/\" # cgroup_add_service/g' /lib/rc/sh/openrc-run.sh \\\n\t#---------------\n\t# supervisor service\n\t#---------------\n    && apk update && apk add supervisor \\\n  # -----------\n\t# ~. clean up\n\t# -----------\n\t&& rm -rf /var/cache/apk/* /tmp/*\n# =========\n# Configure\n# =========\n#\n# httpd\nCOPY httpd.conf $HTTPD_CONF_DIR/\nCOPY httpd-modules.conf $HTTPD_CONF_DIR/\nCOPY httpd-php.conf $HTTPD_CONF_DIR/\n# php\nCOPY php.ini $PHP_CONF_DIR/\nCOPY xdebug.ini $PHP_CONF_DIR_SCAN/\nCOPY php-opcache.ini $PHP_CONF_DIR_SCAN/\n# phpmyadmin\nCOPY httpd-phpmyadmin.conf $HTTPD_CONF_DIR/\nCOPY phpmyadmin-config.inc.php $PHPMYADMIN_SOURCE/\nCOPY mariadb.cnf /etc/mysql/\n# ssh\nCOPY sshd_config /etc/ssh/\nRUN set -ex \\\n\t&& echo 'Include conf/httpd-php.conf' >> $HTTPD_CONF_FILE \\\n\t&& test ! -d /var/lib/php/sessions && mkdir -p /var/lib/php/sessions \\\n\t&& chown www-data:www-data /var/lib/php/sessions \\\n\t##\n\t&& test ! -d /var/www && mkdir -p /var/www \\\n\t&& chown -R www-data:www-data /var/www \\\n\t##\n\t&& rm -rf /var/log/httpd \\\n\t&& ln -s $HTTPD_LOG_DIR /var/log/httpd \\\n\t##\n\t&& rm -rf /var/log/mysql \\\n\t&& ln -s $MARIADB_LOG_DIR /var/log/mysql \\\n\t##\n\t&& rm -rf /var/log/supervisor \\\n\t&& ln -s $SUPERVISOR_LOG_DIR /var/log/supervisor \\\n\t##\n\t&& ln -s $PHPMYADMIN_HOME /var/www/phpmyadmin \\\n\t&& ln -s $APP_HOME /var/www/wwwroot \\\n\t##\n\t&& rm -f /etc/supervisord.conf \t\n#\n# =====\n# final\n# =====\nCOPY supervisord.conf /etc/\nCOPY entrypoint.sh /usr/local/bin/\nRUN chmod u+x /usr/local/bin/entrypoint.sh\nEXPOSE 2222 80\nENTRYPOINT [\"entrypoint.sh\"]\n\n\n\n"
}