{
  "startTime": 1674254748977,
  "endTime": 1674254750000,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 74,
        "lineEnd": 74,
        "columnStart": 4,
        "columnEnd": 35
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM appsvcorg/nginx-fpm:php7.3.4\nLABEL maintainer =\"Azure App Service Container Images <appsvc-images@microsoft.com>\"\n# ========\n# ENV vars\n# ========\n#\nENV DOCKER_BUILD_HOME \"/dockerbuild\"\n# drupal\nENV DRUPAL_HOME \"/home/site/wwwroot\"\nENV DRUPAL_PRJ \"/home/drupal_prj\"\n# mariadb\nENV MARIADB_DATA_DIR \"/home/data/mysql\"\nENV MARIADB_LOG_DIR \"/home/LogFiles/mysql\"\n# phpmyadmin\nENV PHPMYADMIN_SOURCE \"/usr/src/phpmyadmin\"\nENV PHPMYADMIN_HOME \"/home/phpmyadmin\"\n# drupal\nENV DRUPAL_SOURCE \"/usr/src/drupal\"\n#nginx\nENV NGINX_LOG_DIR \"/home/LogFiles/nginx\"\n#varnish\nENV VARNISH_LOG_DIR \"/home/LogFiles/varnish\"\n#php\nENV PHP_CONF_FILE \"/usr/local/etc/php/php.ini\"\n# Composer\n# Updation: https://getcomposer.org/download/\nENV COMPOSER_DOWNLOAD_URL \"https://getcomposer.org/installer\"\n# ====================\n# Download and Install\n# ~. essentials\n# 1. Drupal\n# ====================\nRUN mkdir -p $DOCKER_BUILD_HOME\nWORKDIR $DOCKER_BUILD_HOME\nRUN set -ex \\\n# --------\n# ~. essentials\n# --------\n# ~. PHP extensions\n# --------\n# install the PHP extensions we need\n# postgresql-dev is needed for https://bugs.alpinelinux.org/issues/3642\n    && docker-php-source extract \\\n    && apk add --no-cache --virtual .build-deps \\\n\t\tlibjpeg-turbo-dev \\\n\t\tlibpng-dev \\\n        libzip-dev \\\n        freetype-dev \\\t\t\t                  \n\t&& docker-php-ext-configure gd \\\n\t\t--with-freetype-dir=/usr/include/ \\\n\t\t--with-jpeg-dir=/usr/include/ \\\n\t\t--with-png-dir=/usr/include/ \\\n\t&& docker-php-ext-install -j \"$(nproc)\" \\\n\t\tgd \\\t\t\n\t\tzip \\\t\t\n\t&& runDeps=\"$( \\\n\t\tscanelf --needed --nobanner --format '%n#p' --recursive /usr/local \\\n\t\t\t| tr ',' '\\n' \\\n\t\t\t| sort -u \\\n\t\t\t| awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \\\n\t)\" \\\n\t&& apk add --virtual .drupal-phpexts-rundeps $runDeps \\\n\t&& apk del .build-deps \\\t\n\t&& docker-php-source delete \\\n    # session_save_path\n    && mkdir -p /usr/local/php/tmp \\\n    && chmod 777 /usr/local/php/tmp \\\t\n# -------------\n# 1. Drupal\n# -------------\n    && mkdir -p ${DRUPAL_SOURCE}\\\n# ----------\n# 2. composer\n# ---------- \\\n\t&& curl -f -sS $COMPOSER_DOWNLOAD_URL | php -- --install-dir=/usr/bin --filename=composer \\\n\t&& composer self-update \\\n# ----------\n# 3. drush\n# ----------\n    && rm -rf /home/.composer && export COMPOSER_HOME='/root/.composer/' \\\n    && composer global require consolidation/cgr \\\n\t&& composer_home=$(find / -name .composer) \\\n    && ln -s $composer_home/vendor/bin/cgr /usr/local/bin/cgr \\\n\t&& cgr drush/drush \\\n    && ln -s $composer_home/vendor/bin/drush /usr/local/bin/drush \\\n# ----------\n# 4. varnish\n# ----------\n    && apk update \\\n    && apk add --no-cache varnish \\\n    && rm -rf /var/log/varnish \\\n\t&& ln -s $VARNISH_LOG_DIR /var/log/varnish \\\n# ----------\n# ~. clean up\n# ----------\n\t&& apk upgrade \\\n\t&& rm -rf /var/cache/apk/* \\\n\t&& rm -rf $DOCKER_BUILD_HOME \\\n\t&& rm -rf /etc/nginx/conf.d/default.conf\n# =========\n# Configure\n# =========\nWORKDIR $DRUPAL_HOME\n# mariadb\nCOPY my.cnf /etc/mysql/\n# nginx\nCOPY spec-settings.conf /etc/nginx/conf.d/\nCOPY nginx.conf /etc/nginx/\n# php\nCOPY php.ini $PHP_CONF_FILE\n# drupal\nCOPY drupal-database-install-tasks.php ${DRUPAL_SOURCE}\n# phpmyadmin\nCOPY phpmyadmin_src/. $PHPMYADMIN_SOURCE/\n# Varinish\nCOPY default.vcl /etc/varnish/default.vcl\n# =====\n# final\n# =====\nCOPY entrypoint.sh /usr/local/bin/\nRUN chmod +x /usr/local/bin/entrypoint.sh\nEXPOSE 2222 80\nENTRYPOINT [\"entrypoint.sh\"]\n"
}