diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/azure/app-service-quickstart-docker-images/nginx-fpm/php7.2.13/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/azure/app-service-quickstart-docker-images/nginx-fpm/php7.2.13/Dockerfile/repaired.Dockerfile
index 58a1b08..bb03d77 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/azure/app-service-quickstart-docker-images/nginx-fpm/php7.2.13/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/azure/app-service-quickstart-docker-images/nginx-fpm/php7.2.13/Dockerfile/repaired.Dockerfile
@@ -33,11 +33,11 @@ RUN set -ex \
     && apk update \
     && apk add --no-cache openssl git net-tools tcpdump tcptraceroute vim curl wget bash\
 	&& cd /usr/bin \
-	&& wget http://www.vdberg.org/~richard/tcpping \
+	&& wget https://www.vdberg.org/~richard/tcpping \
 	&& chmod 777 tcpping \
 # ========
 # install the PHP extensions we need and xdebug
-# ======== 
+# ========
     && apk add --no-cache                  \
             --virtual .build-dependencies   \
                 $PHPIZE_DEPS                \
@@ -64,7 +64,7 @@ RUN set -ex \
             imagemagick-dev                 \
             libssh2                         \
             libssh2-dev                     \
-            libxslt-dev                     \    
+            libxslt-dev \
     && docker-php-source extract \
     && pecl install xdebug-beta apcu \
     && docker-php-ext-install -j "$(nproc)" \
@@ -80,8 +80,8 @@ RUN set -ex \
 			| sort -u \
 			| awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }' \
 	)" \
-	&& apk add --virtual .drupal-phpexts-rundeps $runDeps \
-	&& apk del .build-dependencies \	
+	&& apk add --no-cache --virtual .drupal-phpexts-rundeps $runDeps \
+	&& apk del .build-dependencies \
 	&& docker-php-source delete \
 	&& mkdir -p /usr/local/php/tmp \
 	&& chmod 777 /usr/local/php/tmp \
@@ -97,7 +97,7 @@ RUN set -ex \
    && sed -i 's/"cgroup_add_service/" # cgroup_add_service/g' /lib/rc/sh/openrc-run.sh
 # ----------
 # Nginx
-# ----------   
+# ----------  
 RUN GPG_KEYS=B0F4253373F8F6F510D42178520A9993A1C052F8 \
 	&& CONFIG="\
 		--prefix=/etc/nginx \
@@ -167,10 +167,10 @@ RUN GPG_KEYS=B0F4253373F8F6F510D42178520A9993A1C052F8 \
 		ha.pool.sks-keyservers.net \
 		hkp://keyserver.ubuntu.com:80 \
 		hkp://p80.pool.sks-keyservers.net:80 \
-		pgp.mit.edu \
-	; do \
+		pgp.mit.edu; \
+	do \
 		echo "Fetching GPG key $GPG_KEYS from $server"; \
-		gpg --keyserver "$server" --keyserver-options timeout=10 --recv-keys "$GPG_KEYS" && found=yes && break; \
+		gpg --batch --keyserver "$server" --keyserver-options timeout=10 --recv-keys "$GPG_KEYS" && found=yes && break; \
 	done; \
 	test -z "$found" && echo >&2 "error: failed to fetch GPG key $GPG_KEYS" && exit 1; \
 	gpg --batch --verify nginx.tar.gz.asc nginx.tar.gz \
@@ -179,14 +179,14 @@ RUN GPG_KEYS=B0F4253373F8F6F510D42178520A9993A1C052F8 \
 	&& tar -zxC /usr/src -f nginx.tar.gz \
 	&& rm nginx.tar.gz \
 	&& cd /usr/src/nginx-$NGINX_VERSION \
-	&& ./configure $CONFIG --with-debug \
+	&& ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" $CONFIG --with-debug \
 	&& make -j$(getconf _NPROCESSORS_ONLN) \
 	&& mv objs/nginx objs/nginx-debug \
 	&& mv objs/ngx_http_xslt_filter_module.so objs/ngx_http_xslt_filter_module-debug.so \
 	&& mv objs/ngx_http_image_filter_module.so objs/ngx_http_image_filter_module-debug.so \
 	&& mv objs/ngx_http_geoip_module.so objs/ngx_http_geoip_module-debug.so \
 	&& mv objs/ngx_stream_geoip_module.so objs/ngx_stream_geoip_module-debug.so \
-	&& ./configure $CONFIG \
+	&& ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" $CONFIG \
 	&& make -j$(getconf _NPROCESSORS_ONLN) \
 	&& make install \
 	&& rm -rf /etc/nginx/html/ \
@@ -203,14 +203,14 @@ RUN GPG_KEYS=B0F4253373F8F6F510D42178520A9993A1C052F8 \
 	&& strip /usr/sbin/nginx* \
 	&& strip /usr/lib/nginx/modules/*.so \
 	&& rm -rf /usr/src/nginx-$NGINX_VERSION \
-	\
+
 	# Bring in gettext so we can get `envsubst`, then throw
 	# the rest away. To do this, we need to install `gettext`
 	# then move `envsubst` out of the way so `gettext` can
 	# be deleted completely, then move `envsubst` back.
 	&& apk add --no-cache --virtual .gettext gettext \
 	&& mv /usr/bin/envsubst /tmp/ \
-	\
+
 	&& runDeps="$( \
 		scanelf --needed --nobanner --format '%n#p' /usr/sbin/nginx /usr/lib/nginx/modules/*.so /tmp/envsubst \
 			| tr ',' '\n' \
@@ -221,11 +221,11 @@ RUN GPG_KEYS=B0F4253373F8F6F510D42178520A9993A1C052F8 \
 	&& apk del .build-deps \
 	&& apk del .gettext \
 	&& mv /tmp/envsubst /usr/local/bin/ \
-	\
+
 	# Bring in tzdata so users could set the timezones through the environment
 	# variables
 	&& apk add --no-cache tzdata \
-	\
+
 	# forward request and error logs to docker log collector
 	&& ln -sf /dev/stdout /var/log/nginx/access.log \
 	&& ln -sf /dev/stderr /var/log/nginx/error.log \
@@ -254,18 +254,18 @@ RUN GPG_KEYS=B0F4253373F8F6F510D42178520A9993A1C052F8 \
     # Add group and user for mysql
     && addgroup -S -g 500 mysql \
     && adduser -S -D -H -u 500 -G mysql -g "MySQL" mysql \
-    # Unpack mariadb    
+    # Unpack mariadb   
 	# http://ftp.hosteurope.de/mirror/archive.mariadb.org//mariadb-10.1.26/source/mariadb-10.1.26.tar.gz
 	&& mkdir -p /opt/src \
-	&& wget -O /opt/src/mdb.tar.gz http://ftp.hosteurope.de/mirror/archive.mariadb.org//mariadb-$MARIADB_VER/source/mariadb-$MARIADB_VER.tar.gz \
+	&& wget -O /opt/src/mdb.tar.gz https://ftp.hosteurope.de/mirror/archive.mariadb.org//mariadb-$MARIADB_VER/source/mariadb-$MARIADB_VER.tar.gz \
     && mkdir -p /etc/mysql \
     && cd /opt/src && tar -xf mdb.tar.gz && rm mdb.tar.gz \
     # Download and unpack Judy (needed for OQGraph)
-    && wget -O /opt/src/judy.tar.gz http://downloads.sourceforge.net/project/judy/judy/Judy-${JUDY_VER}/Judy-${JUDY_VER}.tar.gz \
+    && wget -O /opt/src/judy.tar.gz https://downloads.sourceforge.net/project/judy/judy/Judy-${JUDY_VER}/Judy-${JUDY_VER}.tar.gz \
     && cd /opt/src && tar -xf judy.tar.gz && rm judy.tar.gz \
     # Build Judy
     && cd /opt/src/judy-${JUDY_VER} \
-    && CFLAGS="-O2 -s" CXXFLAGS="-O2 -s" ./configure \
+    && CFLAGS="-O2 -s" CXXFLAGS="-O2 -s" ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
     && make \
     && make install \
     # Build maridb
@@ -353,13 +353,13 @@ RUN GPG_KEYS=B0F4253373F8F6F510D42178520A9993A1C052F8 \
     && mkdir -p /opt/mariadb/pre-exec.d \
     # Set permissions
     && chown -R mysql:mysql /var/lib/mysql \
-    && chown -R mysql:mysql /run/mysqld\
+    && chown -R mysql:mysql /run/mysqld \
     && chmod -R 755 /opt/mariadb \
 # -------------
 # log rotate & supervisor
 # -------------
 	&& apk update \
-	&& apk add logrotate supervisor \	
+	&& apk add logrotate supervisor \
 	# check log files once every minute, triaged by crond.
 	&& echo "*       *       *       *       *       sh /usr/local/bin/triage-rotate.sh" >> /etc/crontabs/root \
 # -------------
@@ -371,7 +371,7 @@ RUN GPG_KEYS=B0F4253373F8F6F510D42178520A9993A1C052F8 \
 # ----------
 	&& apk upgrade \
 	&& rm -rf /var/cache/apk/* \
-    && rm -rf /tmp/* 
+    && rm -rf /tmp/*
 # =========
 # Configure
 # =========
@@ -384,9 +384,9 @@ RUN set -ex\
 	&& ln -s $NGINX_LOG_DIR /var/log/nginx \
 	##
 	&& rm -rf /var/log/supervisor \
-	&& ln -s $SUPERVISOR_LOG_DIR /var/log/supervisor 
+	&& ln -s $SUPERVISOR_LOG_DIR /var/log/supervisor
 # ssh
-COPY sshd_config /etc/ssh/ 
+COPY sshd_config /etc/ssh/
 # php
 COPY php.ini /usr/local/etc/php/php.ini
 COPY php_conf/. /usr/local/etc/php/conf.d/