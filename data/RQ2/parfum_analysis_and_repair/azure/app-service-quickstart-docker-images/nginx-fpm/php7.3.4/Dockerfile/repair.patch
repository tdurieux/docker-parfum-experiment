diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/azure/app-service-quickstart-docker-images/nginx-fpm/php7.3.4/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/azure/app-service-quickstart-docker-images/nginx-fpm/php7.3.4/Dockerfile/repaired.Dockerfile
index 6139ee8..c4841d9 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/azure/app-service-quickstart-docker-images/nginx-fpm/php7.3.4/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/azure/app-service-quickstart-docker-images/nginx-fpm/php7.3.4/Dockerfile/repaired.Dockerfile
@@ -33,11 +33,11 @@ RUN set -ex \
     && apk update \
     && apk add --no-cache openssl git net-tools tcpdump tcptraceroute vim curl wget bash\
 	&& cd /usr/bin \
-	&& wget http://www.vdberg.org/~richard/tcpping \
+	&& wget https://www.vdberg.org/~richard/tcpping \
 	&& chmod 777 tcpping \
 # ========
 # install the PHP extensions we need and xdebug
-# ======== 
+# ========
     && apk add --no-cache                  \
             --virtual .build-dependencies   \
                 $PHPIZE_DEPS                \
@@ -64,7 +64,7 @@ RUN set -ex \
             imagemagick-dev                 \
             libssh2                         \
             libssh2-dev                     \
-            libxslt-dev                     \    
+            libxslt-dev \
     && docker-php-source extract \
     && pecl install xdebug-beta apcu \
     && docker-php-ext-install -j "$(nproc)" \
@@ -81,7 +81,7 @@ RUN set -ex \
 			| awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }' \
 	)" \
 	&& apk add --virtual .drupal-phpexts-rundeps $runDeps \
-	&& apk del .build-dependencies \	
+	&& apk del .build-dependencies \
 	&& docker-php-source delete \
 	&& mkdir -p /usr/local/php/tmp \
 	&& chmod 777 /usr/local/php/tmp \
@@ -98,7 +98,7 @@ RUN set -ex \
 # ----------
 # Nginx
 # ----------
-# RUN set -ex\ 
+# RUN set -ex\
 	&& GPG_KEYS=B0F4253373F8F6F510D42178520A9993A1C052F8 \
 	&& CONFIG="\
 		--prefix=/etc/nginx \
@@ -170,10 +170,10 @@ RUN set -ex \
 		ha.pool.sks-keyservers.net \
 		hkp://keyserver.ubuntu.com:80 \
 		hkp://p80.pool.sks-keyservers.net:80 \
-		pgp.mit.edu \
-	; do \
+		pgp.mit.edu; \
+	do \
 		echo "Fetching GPG key $GPG_KEYS from $server"; \
-		gpg --keyserver "$server" --keyserver-options timeout=10 --recv-keys "$GPG_KEYS" && found=yes && break; \
+		gpg --batch --keyserver "$server" --keyserver-options timeout=10 --recv-keys "$GPG_KEYS" && found=yes && break; \
 	done; \
 	test -z "$found" && echo >&2 "error: failed to fetch GPG key $GPG_KEYS" && exit 1; \
 	gpg --batch --verify nginx.tar.gz.asc nginx.tar.gz \
@@ -184,14 +184,14 @@ RUN set -ex \
 	&& unzip ngx_cache_purge-2.3.zip -d /usr/src \
 	&& rm ngx_cache_purge-2.3.zip \
 	&& cd /usr/src/nginx-$NGINX_VERSION \
-	&& ./configure $CONFIG --with-debug \
+	&& ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" $CONFIG --with-debug \
 	&& make -j$(getconf _NPROCESSORS_ONLN) \
 	&& mv objs/nginx objs/nginx-debug \
 	&& mv objs/ngx_http_xslt_filter_module.so objs/ngx_http_xslt_filter_module-debug.so \
 	&& mv objs/ngx_http_image_filter_module.so objs/ngx_http_image_filter_module-debug.so \
 	&& mv objs/ngx_http_geoip_module.so objs/ngx_http_geoip_module-debug.so \
 	&& mv objs/ngx_stream_geoip_module.so objs/ngx_stream_geoip_module-debug.so \
-	&& ./configure $CONFIG \
+	&& ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" $CONFIG \
 	&& make -j$(getconf _NPROCESSORS_ONLN) \
 	&& make install \
 	&& rm -rf /etc/nginx/html/ \
@@ -209,14 +209,14 @@ RUN set -ex \
 	&& strip /usr/lib/nginx/modules/*.so \
 	&& rm -rf /usr/src/nginx-$NGINX_VERSION \
 	&& rm -rf /usr/src/ngx_cache_purge-c7345057ad5429617fc0823e92e3fa8043840cef \
-	\
+
 	# Bring in gettext so we can get `envsubst`, then throw
 	# the rest away. To do this, we need to install `gettext`
 	# then move `envsubst` out of the way so `gettext` can
 	# be deleted completely, then move `envsubst` back.
 	&& apk add --no-cache --virtual .gettext gettext \
 	&& mv /usr/bin/envsubst /tmp/ \
-	\
+
 	&& runDeps="$( \
 		scanelf --needed --nobanner --format '%n#p' /usr/sbin/nginx /usr/lib/nginx/modules/*.so /tmp/envsubst \
 			| tr ',' '\n' \
@@ -227,11 +227,11 @@ RUN set -ex \
 	&& apk del .build-deps \
 	&& apk del .gettext \
 	&& mv /tmp/envsubst /usr/local/bin/ \
-	\
+
 	# Bring in tzdata so users could set the timezones through the environment
 	# variables
 	&& apk add --no-cache tzdata \
-	\
+
 	# forward request and error logs to docker log collector
 	&& ln -sf /dev/stdout /var/log/nginx/access.log \
 	&& ln -sf /dev/stderr /var/log/nginx/error.log \
@@ -244,7 +244,7 @@ RUN set -ex \
 # ------
 # mariadb
 # ------
-# RUN set -ex\ 
+# RUN set -ex\
     #export CPU=`cat /proc/cpuinfo | grep -c processor` \
     # Add testing repo
     && echo http://nl.alpinelinux.org/alpine/edge/testing >> /etc/apk/repositories \
@@ -252,7 +252,7 @@ RUN set -ex \
     #&& apk add --no-cache \
         # Install utils
     #    openssl ca-certificates \
-    &&	apk add --update --no-cache -t .mariadb-run-deps \
+    && apk add --update --no-cache -t .mariadb-run-deps \
         libaio \
         libstdc++ \
         make \
@@ -261,7 +261,7 @@ RUN set -ex \
         tzdata \
 		# MariaDB 10.1 does not support OpenSSL 1.1.
         $(test "${MARIADB_VER:0:4}" = "10.1" && echo 'libressl-dev' || echo 'openssl-dev') \
-    \
+
     && apk add --update --no-cache -t .mariadb-build-deps \
         attr \
         autoconf \
@@ -276,25 +276,25 @@ RUN set -ex \
         patch \
         readline-dev \
         zlib-dev \
-    \
+
     # Update CA certs
     && update-ca-certificates \
     # Add group and user for mysql
     && addgroup -S -g 500 mysql \
     && adduser -S -D -H -u 500 -G mysql -g "MySQL" mysql \
-# RUN set -ex\ 
-    # Unpack mariadb    
+# RUN set -ex\
+    # Unpack mariadb   
 	# http://ftp.hosteurope.de/mirror/archive.mariadb.org//mariadb-10.1.26/source/mariadb-10.1.26.tar.gz
 	&& mkdir -p /opt/src \
-	&& wget -O /opt/src/mdb.tar.gz http://ftp.hosteurope.de/mirror/archive.mariadb.org//mariadb-$MARIADB_VER/source/mariadb-$MARIADB_VER.tar.gz \
+	&& wget -O /opt/src/mdb.tar.gz https://ftp.hosteurope.de/mirror/archive.mariadb.org//mariadb-$MARIADB_VER/source/mariadb-$MARIADB_VER.tar.gz \
     && mkdir -p /etc/mysql \
     && cd /opt/src && tar -xf mdb.tar.gz && rm mdb.tar.gz \
     # Download and unpack Judy (needed for OQGraph)
-    && wget -O /opt/src/judy.tar.gz http://downloads.sourceforge.net/project/judy/judy/Judy-${JUDY_VER}/Judy-${JUDY_VER}.tar.gz \
+    && wget -O /opt/src/judy.tar.gz https://downloads.sourceforge.net/project/judy/judy/Judy-${JUDY_VER}/Judy-${JUDY_VER}.tar.gz \
     && cd /opt/src && tar -xf judy.tar.gz && rm judy.tar.gz \
     # Build Judy
     && cd /opt/src/judy-${JUDY_VER} \
-    && CFLAGS="-O2 -s" CXXFLAGS="-O2 -s" ./configure \
+    && CFLAGS="-O2 -s" CXXFLAGS="-O2 -s" ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
     && make \
     && make install \
     # Build maridb
@@ -360,7 +360,7 @@ RUN set -ex \
     && rm -rf /usr/data \
     && rm -rf /usr/lib/python2.7 \
     && rm -rf /usr/bin/mysql_client_test \
-    && rm -rf /usr/bin/mysqltest \	
+    && rm -rf /usr/bin/mysqltest \
     # Remove packages
     #&& apk del \
     #    ca-certificates \
@@ -373,9 +373,9 @@ RUN set -ex \
     && mkdir -p /opt/mariadb/pre-exec.d \
     # Set permissions
     && chown -R mysql:mysql /var/lib/mysql \
-    && chown -R mysql:mysql /run/mysqld\
+    && chown -R mysql:mysql /run/mysqld \
     && chmod -R 755 /opt/mariadb \
-	\
+
     # Clean up.
     && apk del --purge .mariadb-build-deps \
 #
@@ -383,7 +383,7 @@ RUN set -ex \
 # log rotate & supervisor
 # -------------
 	&& apk update \
-	&& apk add logrotate supervisor \	
+	&& apk add logrotate supervisor \
 	# check log files once every minute, triaged by crond.
 	&& echo "*       *       *       *       *       sh /usr/local/bin/triage-rotate.sh" >> /etc/crontabs/root \
 # -------------
@@ -411,9 +411,9 @@ RUN set -ex \
 	&& ln -s $SUPERVISOR_LOG_DIR /var/log/supervisor \
 	## Just take care of nginx and php logs
 	&& rm -rf /etc/logrotate.d \
-	&& mkdir -p /etc/logrotate.d 
+	&& mkdir -p /etc/logrotate.d
 # ssh
-COPY sshd_config /etc/ssh/ 
+COPY sshd_config /etc/ssh/
 # php
 COPY php.ini /usr/local/etc/php/php.ini
 COPY php_conf/. /usr/local/etc/php/conf.d/