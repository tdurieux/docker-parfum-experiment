{
  "startTime": 1674251850235,
  "endTime": 1674251851060,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 7,
        "columnEnd": 30
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 7,
        "columnEnd": 30
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "################################\n# STEP 1 build executable binary\n################################\n\nFROM golang:1.17-alpine AS build-stage\n\nENV VENDOR drweb\n\n# Install git + SSL ca certificates.\n# Git is required for fetching the dependencies.\n# Ca-certificates is required to call HTTPS endpoints.\nRUN apk update && apk add --no-cache git ca-certificates tzdata \\\n\t&& update-ca-certificates 2>/dev/null || true\n\n# Set the Current Working Directory inside the container.\nWORKDIR $GOPATH/src/saferwall/$VENDOR/\n\n# Copy go mod and sum files.\nCOPY go.mod go.sum ./\n\n# Download all dependencies. Dependencies will be cached if the go.mod\n# and go.sum files are not changed.\nRUN go mod download\n\n# Copy our go files.\nCOPY . .\n\n# Build the binary.\nRUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 \\\n\tgo build -a -installsuffix cgo -ldflags '-extldflags \"-static\"' \\\n\t-o /go/bin/$VENDOR-svc cmd/services/multiav/$VENDOR/main.go\n\n############################\n# STEP 2 build a small image\n############################\n\nFROM saferwall/drweb:latest\nLABEL maintainer=\"https://github.com/saferwall\"\nLABEL version=\"0.0.3\"\nLABEL description=\"drweb linux version with nsq consumer\"\n\n# Environment variables.\nENV DR_WEB_DB_UPDATE_DATE    /av_db_update_date.txt\n\n# Set the Current Working Directory inside the container.\nWORKDIR /saferwall\n\n# Install requirements.\nRUN apt-get update \\\n    && apt-get install --no-install-recommends sudo -y && rm -rf /var/lib/apt/lists/*;\n\n# Update virus definition file.\nRUN /opt/drweb.com/bin/drweb-configd -d \\\n    && echo \"Updating the database ...\" \\\n    && /bin/bash -c 'while /opt/drweb.com/bin/drweb-ctl baseinfo | grep -q  \\\n    \"Last successful update: unknown\"; do sleep 5; done' \\\n    && $DR_WEB_CTL baseinfo \\\n    && $DR_WEB_CTL appinfo \\\n    && echo -n \"$(date +%s)\" >> $DR_WEB_DB_UPDATE_DATE\n\n# Create an app user so our program doesn't run as root.\nRUN groupadd -r saferwall \\\n\t&& useradd --no-log-init -r -g saferwall saferwall\n\n# Copy our static executable.\nCOPY --from=build-stage /go/bin/drweb-svc .\n\n# Copy the config files.\nCOPY configs/services/multiav/drweb conf/\n\n# Update permissions.\nRUN usermod -u 101 saferwall \\\n    && chown -R saferwall:saferwall . \\\n\t&& groupmod -g 102 saferwall \\\n    && usermod -aG sudo saferwall \\\n\t&& echo 'saferwall    ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers\n\n# Switch to our user.\nUSER saferwall\n\nENTRYPOINT [\"/saferwall/drweb-svc\", \"-config\", \"/saferwall/conf\"]\n"
}