{
  "startTime": 1674215182136,
  "endTime": 1674215183068,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 23,
        "columnStart": 26,
        "columnEnd": 14
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 23,
        "columnStart": 26,
        "columnEnd": 14
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:20.04\nENV DEBIAN_FRONTEND=noninteractive\n\nRUN apt-get update -qq && apt-get install --no-install-recommends -qq -y \\\n    bison \\\n    curl \\\n    flex \\\n    genisoimage \\\n    git \\\n    libfdt-dev \\\n    libglib2.0-dev \\\n    libgmp3-dev \\\n    libmpc-dev \\\n    libmpfr-dev \\\n    libpixman-1-dev \\\n    libwayland-cursor0 \\\n    libwayland-dev \\\n    libxkbcommon-dev \\\n    ninja-build \\\n    python3-pip \\\n    python3-setuptools \\\n    qemu-system-arm \\\n    qemu-system-x86 \\\n    zlib1g-dev && rm -rf /var/lib/apt/lists/*;\n\nENV PATH=$PATH:/root/.cargo/bin\nWORKDIR /build\n\nCOPY 3rdparty/toolchain-binary 3rdparty/toolchain-binary\nRUN make -s -C 3rdparty/toolchain-binary && rm -rf 3rdparty/toolchain-binary/{src,build}\nRUN 3rdparty/target/bin/arm-eabi-gcc --version\nRUN 3rdparty/target/bin/arm-eabi-ld --version\nRUN 3rdparty/target/bin/x86_64-elf-gcc --version\nRUN 3rdparty/target/bin/x86_64-elf-ld --version\n\nCOPY 3rdparty/newlib 3rdparty/newlib\nRUN make -s -C 3rdparty/newlib && rm -rf 3rdparty/newlib/{src,build}\n\nCOPY 3rdparty/zlib 3rdparty/zlib\nRUN make -s -C 3rdparty/zlib && rm -rf 3rdparty/zlib/{src,build}\n\nCOPY 3rdparty/libpng 3rdparty/libpng\nRUN make -s -C 3rdparty/libpng && rm -rf 3rdparty/libpng/{src,build}\n\nCOPY 3rdparty/freetype 3rdparty/freetype\nRUN make -s -C 3rdparty/freetype && rm -rf 3rdparty/freetype/{src,build}\n\nCOPY 3rdparty/pixman 3rdparty/pixman\nRUN make -s -C 3rdparty/pixman && rm -rf 3rdparty/pixman/{src,build}\n\nCOPY 3rdparty/cairo 3rdparty/cairo\nRUN make -s -C 3rdparty/cairo && rm -rf 3rdparty/cairo/{src,build}\n\nCOPY requirements.txt .\nRUN pip3 install --no-cache-dir --user -r requirements.txt\n\nRUN curl https://sh.rustup.rs -sSf | sh -s -- -y --profile minimal\nRUN cargo install --vers 0.3.20 xargo\n\nCOPY src src\nRUN rustup toolchain install $(cat src/rust-toolchain) --component rust-src\n\nENV PATH=$PATH:/build/3rdparty/target/bin\n"
}