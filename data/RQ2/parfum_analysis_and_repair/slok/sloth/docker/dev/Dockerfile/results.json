{
  "startTime": 1674217165933,
  "endTime": 1674217166745,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 13,
        "columnStart": 22,
        "columnEnd": 7
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 13,
        "columnStart": 22,
        "columnEnd": 7
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM golang:1.18.3\n\nLABEL org.opencontainers.image.source https://github.com/slok/sloth\n\nARG GOLANGCI_LINT_VERSION=\"1.43.0\"\nARG MOCKERY_VERSION=\"2.5.1\"\nARG GOMARKDOC_VERSION=\"0.1.3\"\nARG HELM_VERSION=\"3.6.3\"\nARG ostype=Linux\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    git \\\n    bash \\\n    zip && rm -rf /var/lib/apt/lists/*;\n\n\nRUN wget https://github.com/golangci/golangci-lint/releases/download/v${GOLANGCI_LINT_VERSION}/golangci-lint-${GOLANGCI_LINT_VERSION}-linux-amd64.tar.gz && \\\n    tar zxvf golangci-lint-${GOLANGCI_LINT_VERSION}-linux-amd64.tar.gz --strip 1 -C /usr/local/bin/ && \\\n    rm golangci-lint-${GOLANGCI_LINT_VERSION}-linux-amd64.tar.gz && \\\n    \\\n    wget https://github.com/vektra/mockery/releases/download/v${MOCKERY_VERSION}/mockery_${MOCKERY_VERSION}_Linux_x86_64.tar.gz && \\\n    tar zxvf mockery_${MOCKERY_VERSION}_Linux_x86_64.tar.gz -C /tmp && \\\n    mv /tmp/mockery /usr/local/bin/ && \\\n    rm mockery_${MOCKERY_VERSION}_Linux_x86_64.tar.gz && \\\n    \\\n    wget https://github.com/princjef/gomarkdoc/releases/download/v${GOMARKDOC_VERSION}/gomarkdoc_${GOMARKDOC_VERSION}_linux_amd64.tar.gz && \\\n    tar zxvf gomarkdoc_${GOMARKDOC_VERSION}_linux_amd64.tar.gz -C /tmp && \\\n    mv /tmp/gomarkdoc_${GOMARKDOC_VERSION}_linux_amd64/gomarkdoc /usr/local/bin/ && \\\n    rm -rf gomarkdoc_${GOMARKDOC_VERSION}_linux_amd64.tar.gz /tmp/gomarkdoc_${GOMARKDOC_VERSION}_linux_amd64 && \\\n    \\\n    wget https://get.helm.sh/helm-v${HELM_VERSION}-linux-amd64.tar.gz && \\\n    tar zxvf helm-v${HELM_VERSION}-linux-amd64.tar.gz -C /tmp && \\\n    mv /tmp/linux-amd64/helm /usr/local/bin/ && \\\n    rm -rf helm-v${HELM_VERSION}-linux-amd64.tar.gz /tmp/linux-amd64\n\n\n# Create user.\nARG uid=1000\nARG gid=1000\n\nRUN bash -c 'if [ ${ostype} == Linux ]; then addgroup -gid $gid app; else addgroup app; fi && \\\n    adduser --disabled-password -uid $uid --ingroup app --gecos \"\" app && \\\n    chown app:app -R /go'\n\n# Fill Go apps cache:\n# Main app.\nRUN mkdir -p /tmp/cache\nCOPY go.mod /tmp/cache\nCOPY go.sum /tmp/cache\nRUN chown app:app -R /tmp/cache\nUSER app\nRUN cd /tmp/cache && \\\n    go mod download\n\n# Helm testing app.\nUSER root\nRUN mkdir -p /tmp/cache\nCOPY deploy/kubernetes/helm/sloth/tests/go.mod /tmp/cache\nCOPY deploy/kubernetes/helm/sloth/tests/go.sum /tmp/cache\nRUN chown app:app -R /tmp/cache\nUSER app\nRUN cd /tmp/cache && \\\n    go mod download\n\nUSER app\nWORKDIR /src\n"
}