{
  "startTime": 1674251357131,
  "endTime": 1674251358032,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 7,
        "columnEnd": 82
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 11,
        "columnStart": 7,
        "columnEnd": 10
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 7,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 7,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 11,
        "columnStart": 7,
        "columnEnd": 10
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 7,
        "columnEnd": 33
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 7,
        "columnEnd": 48
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 73
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:16.04\n\n# Update the APT cache\n# prepare for Java download\nRUN apt-get update \\\n    && apt-get upgrade -y \\\n    && apt-get install --no-install-recommends -y \\\n    python-software-properties \\\n    software-properties-common \\\n    git \\\n    vim \\\n    telnet \\\n    && apt-get clean && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get install -y --no-install-recommends software-properties-common \\\n    && apt-add-repository ppa:ansible/ansible \\\n    && apt-get update \\\n    && apt-get install --no-install-recommends -y ansible && rm -rf /var/lib/apt/lists/*;\n\n# grab oracle java (auto accept licence)\nRUN add-apt-repository -y ppa:webupd8team/java \\\n    && apt-get update \\\n    && echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true | /usr/bin/debconf-set-selections \\\n    && apt-get install --no-install-recommends -y oracle-java8-installer && rm -rf /var/lib/apt/lists/*;\n\n# install Consonance services\nENV consonance_version={{ CONSONANCE_BINARY_VERSION }}\n\nRUN wget --no-verbose https://github.com/Consonance/consonance/releases/download/${consonance_version}/consonance-arch-${consonance_version}.jar\n\n# install dockerize\nENV DOCKERIZE_VERSION v0.2.0\n\nRUN wget --no-verbose https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz \\\n    && tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz\n\n# the web and Consonance config\nCOPY config .\nADD init_provisioner.sh .\n\nRUN git clone https://github.com/Consonance/container-host-bag.git  /container-host-bag\n# we need the branch that is compatible with Ansible 2\n#RUN (cd /container-host-bag && git checkout develop_2)\nRUN (cd /container-host-bag && git checkout {{ CONSONANCE_HOST_BAG_VERSION }})\n\nRUN chmod u+x init_provisioner.sh\n# TODO: make sure you create these from the .template files and customize them\nRUN mkdir -p /root/.youxia /root/.consonance /root/.consonance/self-installs /root/.ssh\nCOPY youxia_config /root/.youxia/config\nCOPY config /root/.consonance/config\nCOPY key.pem /root/.ssh/key.pem\nRUN chmod 600 /root/.ssh/key.pem\nCOPY aws.config /root/.aws/config\nRUN mkdir /consonance_logs && chmod a+rx /consonance_logs\n\n# the Ansible-based setup\nCOPY bag_params.json /container-host-bag/example_params.json\nCOPY example_tags.json /container-host-bag/example_tags.json\n\n# patch for Ansible\nCOPY ssh.py /usr/lib/python2.7/dist-packages/ansible/plugins/connection/ssh.py\nRUN rm -f /usr/lib/python2.7/dist-packages/ansible/plugins/connection/ssh.pyc\n\n# TODO: 1) update the above to have my AWS creds in it and 2) create the admin user in postgres db\n# Waiting for postgres and rabbitmq services\nCMD [\"dockerize\", \"-wait\", \"tcp://webservice:8080\", \"-timeout\", \"60s\", \"./init_provisioner.sh\"]\n"
}