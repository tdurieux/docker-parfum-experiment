{
  "startTime": 1674249327165,
  "endTime": 1674249347661,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 99
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 7,
        "columnEnd": 82
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 15,
        "columnStart": 7,
        "columnEnd": 21
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 7,
        "columnEnd": 48
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 15,
        "columnStart": 7,
        "columnEnd": 21
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 7,
        "columnEnd": 48
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04\n\n# Update the APT cache\n# prepare for Java download\nRUN apt-get update \\\n    && apt-get upgrade -y \\\n    && apt-get install --no-install-recommends -y \\\n    python-software-properties \\\n    software-properties-common \\\n    tree \\\n    vim \\\n    sudo \\\n    less \\\n    telnet \\\n    python-pip \\\n    postgresql-client \\\n    && apt-get clean && rm -rf /var/lib/apt/lists/*;\n\n# grab oracle java (auto accept licence)\nRUN add-apt-repository -y ppa:webupd8team/java \\\n    && apt-get update \\\n    && echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true | /usr/bin/debconf-set-selections \\\n    && apt-get install --no-install-recommends -y oracle-java8-installer && rm -rf /var/lib/apt/lists/*;\n\n# setup cwltool to support Dockstore\nRUN pip install --no-cache-dir setuptools==34.2.0\nRUN pip install --no-cache-dir cwl-runner cwltool==1.0.20170217172322 schema-salad==2.2.20170222151604 avro==1.8.1\n\n# install Consonance services\nENV consonance_version={{ CONSONANCE_BINARY_VERSION }}\n\nRUN wget --no-verbose https://github.com/Consonance/consonance/releases/download/${consonance_version}/consonance-arch-${consonance_version}.jar\n\nRUN useradd -ms /bin/bash ubuntu\n# the web and Consonance config\nWORKDIR /home/ubuntu\n\n# install dockerize\nENV DOCKERIZE_VERSION v0.2.0\n\nRUN wget --no-verbose https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz \\\n    && tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz\n\n\n# TODO: make sure you create these from the .template files and customize them\nRUN mkdir -p /home/ubuntu/.youxia /home/ubuntu/.consonance /home/ubuntu/.consonance/self-installs /home/ubuntu/.ssh /home/ubuntu/bin\nCOPY config /home/ubuntu/.consonance/config\nCOPY key.pem /home/ubuntu/.ssh/key.pem\nCOPY init_client.sh /home/ubuntu/init_client.sh\n\nRUN chmod 600 /home/ubuntu/.ssh/key.pem\nRUN chmod a+wrx /home/ubuntu/init_client.sh\nRUN chown -R ubuntu /home/ubuntu\nUSER ubuntu\nRUN echo \"postgres:5432:*:*:postgres\" > /home/ubuntu/.pgpass && chmod 600 /home/ubuntu/.pgpass\n\n\n# for youxia and the consonance command line on the main box\nRUN wget --no-verbose https://github.com/Consonance/consonance/releases/download/${consonance_version}/consonance && mv consonance /home/ubuntu/bin && chmod a+x /home/ubuntu/bin/consonance\nRUN wget --no-verbose --no-check-certificate https://github.com/Consonance/consonance/releases/download/${consonance_version}/consonance-client-${consonance_version}.jar && mv consonance-client-*.jar /home/ubuntu/.consonance/self-installs/consonance-client-${consonance_version}.jar\nRUN mkdir /home/ubuntu/.dockstore && printf \"server-url: https://dockstore.org:8443\\ntoken: dummy-token\" > /home/ubuntu/.dockstore/config\nRUN mkdir /home/ubuntu/.dockstore/self-installs && wget --no-verbose --no-check-certificate https://artifacts.oicr.on.ca/artifactory/collab-release/io/dockstore/dockstore-client/{{ CONSONANCE_DOCKSTORE_VERSION }}/dockstore-client-{{ CONSONANCE_DOCKSTORE_VERSION }}.jar && mv dockstore-client-*.jar /home/ubuntu/.dockstore/self-installs/dockstore-client-{{ CONSONANCE_DOCKSTORE_VERSION }}.jar\nRUN wget --no-verbose https://github.com/ga4gh/dockstore/releases/download/{{ CONSONANCE_DOCKSTORE_VERSION }}/dockstore && mv dockstore /home/ubuntu/bin && chmod a+x /home/ubuntu/bin/dockstore\n\n# now get a sample CWL and test JSON\nRUN wget --no-verbose https://raw.githubusercontent.com/CancerCollaboratory/dockstore-tool-bamstats/1.25-6_1.0/Dockstore.cwl\nRUN wget --no-verbose https://raw.githubusercontent.com/CancerCollaboratory/dockstore-tool-bamstats/1.25-6_1.0/sample_configs.json\n\nENV PATH=\"/home/ubuntu/bin:${PATH}\"\n\nCMD [\"dockerize\", \"-wait\", \"tcp://webservice:8080\", \"-timeout\", \"60s\", \"/home/ubuntu/init_client.sh\"]\n"
}