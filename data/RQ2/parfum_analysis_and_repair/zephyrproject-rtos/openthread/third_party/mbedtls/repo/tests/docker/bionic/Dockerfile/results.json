{
  "startTime": 1674254302263,
  "endTime": 1674254303230,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 99,
        "lineEnd": 99,
        "columnStart": 7,
        "columnEnd": 42
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 109,
        "lineEnd": 109,
        "columnStart": 7,
        "columnEnd": 136
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 120,
        "lineEnd": 120,
        "columnStart": 7,
        "columnEnd": 42
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 130,
        "lineEnd": 132,
        "columnStart": 7,
        "columnEnd": 54
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 143,
        "lineEnd": 143,
        "columnStart": 7,
        "columnEnd": 42
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 153,
        "lineEnd": 155,
        "columnStart": 7,
        "columnEnd": 54
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 7,
        "columnEnd": 52
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 36,
        "lineEnd": 59,
        "columnStart": 7,
        "columnEnd": 14
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 7,
        "columnEnd": 52
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Dockerfile\n#\n# Purpose\n# -------\n# Defines a Docker container suitable to build and run all tests (all.sh),\n# except for those that use a proprietary toolchain.\n\n# Copyright The Mbed TLS Contributors\n# SPDX-License-Identifier: Apache-2.0\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\"); you may\n# not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#  http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\nARG MAKEFLAGS_PARALLEL=\"\"\nARG MY_REGISTRY=\n\nFROM ${MY_REGISTRY}ubuntu:bionic\n\n\nENV DEBIAN_FRONTEND noninteractive\n\nRUN apt-get update \\\n    && apt-get -y --no-install-recommends install software-properties-common \\\n    && rm -rf /var/lib/apt/lists && rm -rf /var/lib/apt/lists/*;\n\nRUN add-apt-repository -y ppa:team-gcc-arm-embedded/ppa\n\nRUN apt-get update \\\n    && apt-get -y --no-install-recommends install \\\n    # mbedtls build/test dependencies\n    build-essential \\\n    clang \\\n    cmake \\\n    doxygen \\\n    gcc-arm-none-eabi \\\n    gcc-mingw-w64-i686 \\\n    gcc-multilib \\\n    g++-multilib \\\n    gdb \\\n    git \\\n    graphviz \\\n    lsof \\\n    python \\\n    python3-pip \\\n    python3 \\\n    pylint3 \\\n    valgrind \\\n    wget \\\n    # libnettle build dependencies\n    libgmp-dev \\\n    m4 \\\n    pkg-config \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Build a static, legacy openssl from sources with sslv3 enabled\n# Based on https://gist.github.com/bmaupin/8caca3a1e8c3c5686141 (build-openssl.sh)\n# Note: openssl-1.0.2 and earlier has known build issues with parallel make.\nRUN cd /tmp \\\n    && wget https://www.openssl.org/source/old/1.0.1/openssl-1.0.1j.tar.gz -qO- | tar xz \\\n    && cd openssl-1.0.1j \\\n    && ./config --openssldir=/usr/local/openssl-1.0.1j no-shared \\\n    && (make ${MAKEFLAGS_PARALLEL} || make -j 1) \\\n    && make install_sw \\\n    && rm -rf /tmp/openssl*\nENV OPENSSL_LEGACY=/usr/local/openssl-1.0.1j/bin/openssl\n\n# Build OPENSSL as 1.0.2g\nRUN cd /tmp \\\n    && wget https://www.openssl.org/source/old/1.0.2/openssl-1.0.2g.tar.gz -qO- | tar xz \\\n    && cd openssl-1.0.2g \\\n    && ./config --openssldir=/usr/local/openssl-1.0.2g no-shared \\\n    && (make ${MAKEFLAGS_PARALLEL} || make -j 1) \\\n    && make install_sw \\\n    && rm -rf /tmp/openssl*\nENV OPENSSL=/usr/local/openssl-1.0.2g/bin/openssl\n\n# Build a new openssl binary for ARIA/CHACHA20 support\n# Based on https://gist.github.com/bmaupin/8caca3a1e8c3c5686141 (build-openssl.sh)\nRUN cd /tmp \\\n    && wget https://www.openssl.org/source/openssl-1.1.1a.tar.gz -qO- | tar xz \\\n    && cd openssl-1.1.1a \\\n    && ./config --prefix=/usr/local/openssl-1.1.1a -Wl,--enable-new-dtags,-rpath,'${LIBRPATH}' no-shared \\\n    && make ${MAKEFLAGS_PARALLEL} \\\n    && make install_sw \\\n    && rm -rf /tmp/openssl*\nENV OPENSSL_NEXT=/usr/local/openssl-1.1.1a/bin/openssl\n\n# Build libnettle 2.7.1 (needed by legacy gnutls)\nRUN cd /tmp \\\n    && wget https://ftp.gnu.org/gnu/nettle/nettle-2.7.1.tar.gz -qO- | tar xz \\\n    && cd nettle-2.7.1 \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --disable-documentation \\\n    && make ${MAKEFLAGS_PARALLEL} \\\n    && make install \\\n    && /sbin/ldconfig \\\n    && rm -rf /tmp/nettle*\n\n# Build legacy gnutls (3.3.8)\nRUN cd /tmp \\\n    && wget https://www.gnupg.org/ftp/gcrypt/gnutls/v3.3/gnutls-3.3.8.tar.xz -qO- | tar xJ \\\n    && cd gnutls-3.3.8 \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/local/gnutls-3.3.8 --exec_prefix=/usr/local/gnutls-3.3.8 --disable-shared --disable-guile --disable-doc \\\n    && make ${MAKEFLAGS_PARALLEL} \\\n    && make install \\\n    && rm -rf /tmp/gnutls*\nENV GNUTLS_LEGACY_CLI=/usr/local/gnutls-3.3.8/bin/gnutls-cli\nENV GNUTLS_LEGACY_SERV=/usr/local/gnutls-3.3.8/bin/gnutls-serv\n\n# Build libnettle 3.1 (needed by gnutls)\nRUN cd /tmp \\\n    && wget https://ftp.gnu.org/gnu/nettle/nettle-3.1.tar.gz -qO- | tar xz \\\n    && cd nettle-3.1 \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --disable-documentation \\\n    && make ${MAKEFLAGS_PARALLEL} \\\n    && make install \\\n    && /sbin/ldconfig \\\n    && rm -rf /tmp/nettle*\n\n# Build gnutls (3.4.10)\nRUN cd /tmp \\\n    && wget https://www.gnupg.org/ftp/gcrypt/gnutls/v3.4/gnutls-3.4.10.tar.xz -qO- | tar xJ \\\n    && cd gnutls-3.4.10 \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/local/gnutls-3.4.10 --exec_prefix=/usr/local/gnutls-3.4.10 \\\n        --with-included-libtasn1 --without-p11-kit \\\n        --disable-shared --disable-guile --disable-doc \\\n    && make ${MAKEFLAGS_PARALLEL} \\\n    && make install \\\n    && rm -rf /tmp/gnutls*\nENV GNUTLS_CLI=/usr/local/gnutls-3.4.10/bin/gnutls-cli\nENV GNUTLS_SERV=/usr/local/gnutls-3.4.10/bin/gnutls-serv\n\n# Build libnettle 3.4 (needed by gnutls next)\nRUN cd /tmp \\\n    && wget https://ftp.gnu.org/gnu/nettle/nettle-3.4.1.tar.gz -qO- | tar xz \\\n    && cd nettle-3.4.1 \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --disable-documentation \\\n    && make ${MAKEFLAGS_PARALLEL} \\\n    && make install \\\n    && /sbin/ldconfig \\\n    && rm -rf /tmp/nettle*\n\n# Build gnutls next (3.6.5)\nRUN cd /tmp \\\n    && wget https://www.gnupg.org/ftp/gcrypt/gnutls/v3.6/gnutls-3.6.5.tar.xz -qO- | tar xJ \\\n    && cd gnutls-3.6.5 \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/local/gnutls-3.6.5 --exec_prefix=/usr/local/gnutls-3.6.5 \\\n        --with-included-libtasn1 --with-included-unistring --without-p11-kit \\\n        --disable-shared --disable-guile --disable-doc \\\n    && make ${MAKEFLAGS_PARALLEL} \\\n    && make install \\\n    && rm -rf /tmp/gnutls*\n\nENV GNUTLS_NEXT_CLI=/usr/local/gnutls-3.6.5/bin/gnutls-cli\nENV GNUTLS_NEXT_SERV=/usr/local/gnutls-3.6.5/bin/gnutls-serv\n"
}