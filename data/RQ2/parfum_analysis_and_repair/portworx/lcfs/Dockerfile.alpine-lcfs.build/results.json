{
  "startTime": 1674249960529,
  "endTime": 1674249961100,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 66,
        "columnEnd": 118
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 21,
        "columnEnd": 49
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 74
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 226
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# lcfs build Docker file [201701.06MeV]\n# NOTE: this dockerfile does NOT create a runnable container\n# it builds the lcfs and docker plugin binaries which will be copied out\n# and run in it's own container with a private version of docker\n\nFROM alpine\nMAINTAINER Jose Rivera <jrivera@portworx.com>\nARG VERSION\nENV VERSION ${VERSION}\n\nARG REVISION\nENV REVISION ${REVISION}\n\nARG BUILD_FLAGS\nENV BUILD_FLAGS ${BUILD_FLAGS}\n\n# tools to build libfuse for lcfs\nRUN apk update && \\\n    apk add --no-cache build-base gcc abuild binutils binutils-doc gcc-doc util-linux pciutils usbutils coreutils binutils findutils grep alpine-sdk automake m4 autoconf libtool linux-headers zlib-dev userspace-rcu-dev libunwind-dev gdb\n\nADD . /go/src/github.com/portworx/lcfs\n\nWORKDIR /go/src/github.com/portworx/lcfs\nRUN wget -q https://github.com/libfuse/libfuse/releases/download/fuse-3.0.2/fuse-3.0.2.tar.gz && \\\n    tar -xzf fuse-3.0.2.tar.gz && rm fuse-3.0.2.tar.gz\n\nWORKDIR fuse-3.0.2\nRUN cp -a ../fuse/fusermount.c util && cp -a ../fuse/lib/* lib && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" CFLAGS=-D__MUSL__ --bindir=/opt/lcfs/bin && make -j8 && make install && cp -a /opt/lcfs/bin/fusermount3 /go/src/github.com/portworx/lcfs/lcfs\n\nWORKDIR /go/src/github.com/portworx/lcfs/gperftools\nRUN ./autogen.sh && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-minimal && make install\n\nWORKDIR /go/src/github.com/portworx/lcfs/lcfs\nRUN make STATIC=y BUILD_FLAGS=\"${BUILD_FLAGS}\" VERSION=\"${VERSION}\" REVISION=\"${REVISION}\" clean all\n\nWORKDIR /go/src/github.com/portworx/lcfs\nRUN mkdir -p /opt/lcfs/services && \\\n    \\cp lcfs-setup.sh /opt/lcfs/bin && \\\n    \\cp lcfs/lcfs /opt/lcfs/bin && \\\n    \\cp lcfs.system* /opt/lcfs/services && \\\n    tar -C / -czvf /lcfs-$(lcfs/version_gen.sh -p)-alpine.binaries.tgz opt && rm /lcfs-$( lcfs/version_gen.sh -p)-alpine.binaries.tgz\n"
}