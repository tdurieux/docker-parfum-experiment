{
  "startTime": 1674251216812,
  "endTime": 1674251217782,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 97,
        "lineEnd": 97,
        "columnStart": 2,
        "columnEnd": 32
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "### BEG SCRIPT INFO\n#\n# Header:\n#\n#         fname : \"Dockerfile\"\n#         cdate : \"12.07.2018\"\n#        author : \"Michał Żurawski <trimstray@gmail.com>\"\n#      tab_size : \"2\"\n#     soft_tabs : \"yes\"\n#\n# Description:\n#\n#   This Dockerfile builds a static htrace.sh in a Docker container.\n#\n#   - converted Dockerfile to Alpine Linux\n#     author: https://github.com/davidneudorfer\n#\n#   For build:\n#     cd htrace.sh && build/build.sh\n#\n#   For init:\n#     docker run --rm -it --name htrace.sh htrace.sh -u https://nmap.org -h\n#\n#   For debug:\n#     docker exec -it htrace.sh /bin/bash\n#     docker run --rm -it --entrypoint /bin/bash --name htrace.sh htrace.sh\n#\n# License:\n#\n#   htrace.sh, Copyright (C) 2018  Michał Żurawski\n#\n#   This program is free software: you can redistribute it and/or modify\n#   it under the terms of the GNU General Public License as published by\n#   the Free Software Foundation, either version 3 of the License, or\n#   (at your option) any later version.\n#\n#   This program is distributed in the hope that it will be useful,\n#   but WITHOUT ANY WARRANTY; without even the implied warranty of\n#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n#   GNU General Public License for more details.\n#\n#   You should have received a copy of the GNU General Public License\n#   along with this program. If not, see <http://www.gnu.org/licenses/>.\n#\n### END SCRIPT INFO\n\nFROM golang:alpine AS golang\nRUN apk add --no-cache git\nRUN go install github.com/ssllabs/ssllabs-scan@latest\nRUN go install github.com/maxmind/geoipupdate/cmd/geoipupdate@latest\nRUN go install github.com/projectdiscovery/subfinder/v2/cmd/subfinder@latest\n\nFROM drwetter/testssl.sh:3.0 AS testssl\n\nFROM alpine:3.14\n\nLABEL org.opencontainers.image.authors=\"trimstray@gmail.com\"\n\nRUN \\\n  apk add --no-cache \\\n  bash \\\n  bc \\\n  bind-tools \\\n  ca-certificates \\\n  coreutils \\\n  curl \\\n  drill \\\n  git \\\n  gnupg \\\n  ncurses \\\n  openssl \\\n  procps \\\n  unzip \\\n  wget \\\n  jq \\\n  libmaxminddb \\\n  python3 \\\n  py3-pip \\\n  rsync \\\n  nghttp2\n\nRUN apk add --no-cache nmap nmap-nselibs nmap-scripts\n\nRUN \\\n  git clone --depth 1 https://github.com/scipag/vulscan /opt/scipag_vulscan && \\\n  ln -s /opt/scipag_vulscan /usr/share/nmap/scripts/vulscan\n\nRUN apk add --no-cache php php7-curl php7-xml php7-dom\n\nRUN \\\n  apk add --no-cache composer && \\\n  composer global require bramus/mixed-content-scan && \\\n  ln -s /root/.composer/vendor/bramus/mixed-content-scan/bin/mixed-content-scan /usr/bin/mixed-content-scan\n\nRUN \\\n  apk add --no-cache nodejs npm && \\\n  npm config set unsafe-perm true && \\\n  npm install -g observatory-cli && npm cache clean --force;\n\nRUN \\\n  git clone --depth 1 https://github.com/EnableSecurity/wafw00f /opt/wafw00f && \\\n  cd /opt/wafw00f && \\\n  python3 setup.py install\n\nCOPY --from=golang /go/bin/ssllabs-scan /usr/bin/ssllabs-scan\nCOPY --from=golang /go/bin/geoipupdate /usr/bin/geoipupdate\nCOPY --from=golang /go/bin/subfinder /usr/bin/subfinder\nCOPY --from=testssl /usr/local/bin/testssl.sh /usr/bin/testssl.sh\nCOPY --from=testssl /home/testssl/etc/ /etc/testssl/etc/\n\nARG GEOIP_ACCOUNT=0\nARG GEOIP_LICENSE=000000000000\nRUN \\\n  mkdir -p /usr/local/etc/ && \\\n  echo -en \"AccountID ${GEOIP_ACCOUNT}\\\\nLicenseKey ${GEOIP_LICENSE}\\\\nEditionIDs GeoLite2-Country GeoLite2-City\" > /usr/local/etc/GeoIP.conf\n\nRUN \\\n  mkdir -p /usr/local/share/GeoIP/ && \\\n  geoipupdate || true # skip error if fails due account\n\nRUN \\\n  ln -s /usr/local/share/GeoIP /usr/share/\n\nENV TESTSSL_INSTALL_DIR /etc/testssl\n\nWORKDIR /opt/htrace.sh\n\nCOPY bin /opt/htrace.sh/bin/\nCOPY lib /opt/htrace.sh/lib/\nCOPY src /opt/htrace.sh/src/\nCOPY static /opt/htrace.sh/static/\nCOPY dependencies.sh setup.sh config /opt/htrace.sh/\n\nRUN ./setup.sh install\n\nENTRYPOINT [\"/usr/local/bin/htrace.sh\"]\nCMD [\"--help\"]\n"
}