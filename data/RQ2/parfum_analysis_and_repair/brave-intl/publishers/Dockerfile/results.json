{
  "startTime": 1674249657123,
  "endTime": 1674249658039,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 86
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 26,
        "columnEnd": 60
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 4,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 26,
        "columnEnd": 60
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 14
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 4,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 14
      }
    }
  ],
  "repairedDockerfile": "FROM ruby:3.0-slim\n\nRUN apt-get update -qq && apt-get install --no-install-recommends -y build-essential && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get install --no-install-recommends -y nodejs \\\n  libpq-dev \\\n  git \\\n  curl \\\n  libjemalloc2 && rm -rf /var/lib/apt/lists/*;\n\nRUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y\n\n\nRUN [\"rm\", \"-rf\", \"/var/lib/apt/lists/*\"]\nENV LD_PRELOAD=/usr/lib/x86_64-linux-gnu/libjemalloc.so.2\n\nSHELL [ \"/bin/bash\", \"-l\", \"-c\" ]\n\nENV PATH=\"/root/.cargo/bin:${PATH}\"\nRUN curl -f --silent -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.3/install.sh | bash\nRUN gem install bundler\n\nRUN NODE_ENV=production\nRUN RAILS_ENV=production\n\n\nWORKDIR /var/www/\n\n# We are copying the Gemfile first, so we can install\n# all the dependencies without any issues\n# Rails will be installed once you load it from the Gemfile\n# This will also ensure that gems are cached and only updated when they change.\nCOPY Gemfile ./\nCOPY Gemfile.lock ./\nCOPY package.json yarn.lock .nvmrc ./\n\n# Install the dependencies.\nRUN nvm install && nvm use\nRUN bundle check || PATH=\"/root/.cargo/bin:${PATH}\" bundle install --without test development --jobs 20 --retry 5\nRUN node --version\nRUN npm install -g yarn && npm cache clean --force;\nRUN yarn install --frozen-lockfile && yarn cache clean;\n\n# We copy all the files from the current directory to our\n# /app directory\n# Pay close attention to the dot (.)\n# The first one will select ALL The files of the current directory,\n# The second dot will copy it to the WORKDIR!\nCOPY . .\n\nRUN RAILS_ENV=production CREATORS_FULL_HOST=\"1\" SECRET_KEY_BASE=\"1\" bundle exec rails assets:precompile DB_ADAPTER=nulldb DATABASE_URL='nulldb://nohost'\n\nEXPOSE 3000\nENTRYPOINT [ \"./scripts/entrypoint.sh\" ]\nCMD [\"bundle\", \"exec\", \"puma\", \"-C\", \"config/puma.rb\", \"-e\",\"${RACK_ENV:-development}\"]\n"
}