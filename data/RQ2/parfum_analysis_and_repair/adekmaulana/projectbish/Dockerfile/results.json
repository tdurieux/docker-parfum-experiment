{
  "startTime": 1674218335062,
  "endTime": 1674218336559,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 7,
        "columnEnd": 44
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 7,
        "columnEnd": 25
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 74,
        "lineEnd": 74,
        "columnStart": 4,
        "columnEnd": 36
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# We're using Alpine Edge\nFROM alpine:edge\n\n#\n# We have to uncomment Community repo for some packages\n#\nRUN sed -e 's;^#http\\(.*\\)/edge/community;http\\1/edge/community;g' -i /etc/apk/repositories\n\n#\n# Installing Packages\n#\nRUN apk add --no-cache=true --update \\\n    coreutils \\\n    bash \\\n    build-base \\\n    bzip2-dev \\\n    curl \\\n    figlet \\\n    gcc \\\n    g++ \\\n    git \\\n    aria2 \\\n    util-linux \\\n    libevent \\\n    jpeg-dev \\\n    libffi-dev \\\n    libpq \\\n    libwebp-dev \\\n    libxml2 \\\n    libxml2-dev \\\n    libxslt-dev \\\n    linux-headers \\\n    musl \\\n    neofetch \\\n    openssl-dev \\\n    postgresql \\\n    postgresql-client \\\n    postgresql-dev \\\n    openssl \\\n    pv \\\n    jq \\\n    wget \\\n    python3 \\\n    python3-dev \\\n    readline-dev \\\n    sqlite \\\n    ffmpeg \\\n    sqlite-dev \\\n    sudo \\\n    chromium \\\n    chromium-chromedriver \\\n    zlib-dev \\\n    jpeg \\\n    zip \\\n    freetype-dev\n\nRUN python3 -m ensurepip \\\n    && pip3 install --no-cache-dir --upgrade pip setuptools \\\n    && pip3 install --no-cache-dir wheel \\\n    && rm -r /usr/lib/python*/ensurepip && \\\n    if [ ! -e /usr/bin/pip ]; then ln -s pip3 /usr/bin/pip ; fi && \\\n    if [[ ! -e /usr/bin/python ]]; then ln -sf /usr/bin/python3 /usr/bin/python; fi && \\\n    rm -r /root/.cache\n\n#\n# Clone repo and prepare working directory\n#\nRUN git clone -b master https://github.com/adekmaulana/ProjectBish /home/projectbish/\nRUN mkdir /home/projectbish/bin/\nWORKDIR /home/projectbish/\n\n#\n# Install requirements\n#\nRUN pip3 install --no-cache-dir -r requirements.txt\nRUN rm /bin/sh && ln -s /bin/bash /bin/sh\nCMD [\"python3\",\"-m\",\"userbot\"]\n"
}