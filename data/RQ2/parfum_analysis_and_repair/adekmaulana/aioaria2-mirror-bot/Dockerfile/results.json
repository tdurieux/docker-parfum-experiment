{
  "startTime": 1674246778424,
  "endTime": 1674246779487,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 86
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 4,
        "columnEnd": 102
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 17
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Build Python package and dependencies\nFROM python:3.9-alpine AS python-build\nRUN apk add --no-cache \\\n        git \\\n        libffi-dev \\\n        musl-dev \\\n        gcc \\\n        g++ \\\n        make \\\n        zlib-dev \\\n        openssl-dev \\\n        libxml2-dev \\\n        libxslt-dev\nRUN mkdir -p /opt/venv\nWORKDIR /opt/venv\nRUN python3 -m venv /opt/venv\nENV PATH=\"/opt/venv/bin:$PATH\"\n\nRUN mkdir -p /src\nWORKDIR /src\n\n# Install bot package and dependencies\nCOPY . .\nRUN pip install --no-cache-dir --upgrade pip\nRUN pip install --no-cache-dir wheel\nRUN pip install --no-cache-dir aiohttp[speedups]\nRUN pip install --no-cache-dir uvloop\nRUN pip install --no-cache-dir .\n\n\n# Package everything\nFROM python:3.9-alpine AS final\n# Update system first\nRUN apk update\n\n# Install optional native tools (for full functionality)\nRUN apk add --no-cache \\\n        curl \\\n        neofetch \\\n        git \\\n        nss\n# Install native dependencies\nRUN apk add --no-cache \\\n        libffi \\\n        musl \\\n        gcc \\\n        g++ \\\n        make \\\n        libwebp \\\n        openssl \\\n        zlib \\\n        busybox \\\n        sqlite \\\n        libxml2 \\\n        libxslt \\\n        libssh2 \\\n        ca-certificates \\\n        ffmpeg\n\n# Create bot user\nRUN adduser -D bot\n\n# Copy Python venv\nENV PATH=\"/opt/venv/bin:$PATH\"\nCOPY --from=python-build /opt/venv /opt/venv\n\n# Download aria with sftp and gzip support\nARG ARIA2=aria2-1.36.0-r0.apk\nRUN curl -f -LJO https://raw.githubusercontent.com/adekmaulana/docker/master/aria2/$ARIA2\nRUN apk add --allow-untrusted --no-cache $ARIA2\n\n# Certs for aria2 https websocket\nRUN mkdir -p /home/bot/.cache/bot/.certs\n\n# Initialize mkcert\nRUN curl -f -LJO https://github.com/FiloSottile/mkcert/releases/download/v1.4.3/mkcert-v1.4.3-linux-amd64\nRUN mv mkcert-v1.4.3-linux-amd64 /usr/local/bin/mkcert\nRUN chmod +x /usr/local/bin/mkcert\n\nRUN mkcert -install\nRUN mkcert -key-file /home/bot/.cache/bot/.certs/key.pem -cert-file /home/bot/.cache/bot/.certs/cert.pem localhost 127.0.0.1\n\n# Change permission of home folder\nRUN chown -hR bot /home/bot\n\n# Set runtime settings\nUSER bot\nWORKDIR /home/bot\nCMD [\"bot\"]\n"
}