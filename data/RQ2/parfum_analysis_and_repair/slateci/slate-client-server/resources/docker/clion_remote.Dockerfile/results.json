{
  "startTime": 1674255623707,
  "endTime": 1674255624521,
  "originalSmells": [
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 57,
        "lineEnd": 93,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 94,
        "lineEnd": 94,
        "columnStart": 6,
        "columnEnd": 33
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# CLion remote docker environment (How to build docker container, run and stop it)\n#\n# Build and run:\n#   docker build -t clion/centos7-cpp-env:0.1 -f Dockerfile.centos7-cpp-env .\n#   docker run -d --cap-add sys_ptrace -p127.0.0.1:2222:22 clion/centos7-cpp-env:0.1\n#   ssh-keygen -f \"$HOME/.ssh/known_hosts\" -R \"[localhost]:2222\"\n#\n# stop:\n#   docker stop clion_remote_env\n#\n# ssh credentials (test user):\n#   user@password\n\n\n#FROM centos:7\n# FROM hub.opensciencegrid.org/slate/slate-client-server:1.0.7\nARG baseimage=hub.opensciencegrid.org/slate/slate-client-server:1.0.7\nARG port=18080\nFROM ${baseimage} as local-stage\n\n# Docker image build arguments:\nARG awssdkversion=1.7.25\n\n\n# Docker image build arguments:\nARG port\n\n# Docker container environmental variables:\nENV VERSION_OVERRIDE=\"localdev\"\n\n# Ports:\nEXPOSE ${port}\n\n# Volumes:\nVOLUME [ \"/slate\" ]\n\n# Run once the container has started:\nENTRYPOINT [ \"/bin/bash\" ]\n\n#######################################\n## Build Stage                        #\n#######################################\nFROM ${baseimage} as build-stage\n\n# Docker image build arguments:\nARG versionoverride=\"X.Y.Z\"\n\n# Docker container environmental variables:\nENV VERSION_OVERRIDE=${versionoverride}\n\n# Set up custom yum repos:\n# COPY ./yum.repos.d/aws-sdk.repo /etc/yum.repos.d/aws-sdk.repo\n\n# Package installs/updates:\nRUN yum install epel-release -y && rm -rf /var/cache/yum\n\nRUN yum -y update \\\n && yum -y install aws-sdk-cpp-dynamodb-libs-${awssdkversion} \\\n  aws-sdk-cpp-route53-libs-${awssdkversion} \\\n  openssh-server \\\n  make \\\n  autoconf \\\n  automake \\\n  dos2unix \\\n  ninja-build \\\n  gcc \\\n  gcc-c++ \\\n  gdb \\\n  clang \\\n  cmake \\\n  rsync \\\n  tar \\\n  passwd \\\n  python \\\n  aws-sdk-cpp-dynamodb-libs-${awssdkversion} \\\n  aws-sdk-cpp-route53-libs-${awssdkversion} \\\n  boost \\\n  boost-devel \\\n  groff \\\n  less \\\n  which \\\n  cmake3 \\\n  zlib-devel \\\n  zlib \\\n  yaml-cpp\\\n  yaml-cpp-devel \\\n  openssl \\\n  openssl-static \\\n  openssl-devel \\\n  libcurl-devel \\\n  libcurl \\\n  cryptopp \\\n  strace \\\n  centos-release-scl \\\n  &&  yum install -y devtoolset-7 \\\n  && yum clean all && rm -rf /var/cache/yum\n\n# Install AWS CLI\nRUN ln -s /usr/local/aws-cli/v2/current/bin/aws aws && \\\n    ln -s /usr/local/aws-cli/v2/current/bin/aws_completer aws_completer\n\nRUN ssh-keygen -A\n\nRUN ( \\\n    echo 'LogLevel DEBUG2'; \\\n    echo 'PermitRootLogin yes'; \\\n    echo 'PasswordAuthentication yes'; \\\n    echo 'Subsystem sftp /usr/libexec/openssh/sftp-server'; \\\n  ) > /etc/ssh/sshd_config_test_clion\n\nRUN useradd -m clionremote \\\n  && yes password | passwd clionremote\n\nCMD [\"/usr/sbin/sshd\", \"-D\", \"-e\", \"-f\", \"/etc/ssh/sshd_config_test_clion\"]"
}