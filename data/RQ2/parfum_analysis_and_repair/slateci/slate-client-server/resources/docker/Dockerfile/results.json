{
  "startTime": 1674248813813,
  "endTime": 1674248814801,
  "originalSmells": [
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 62,
        "lineEnd": 73,
        "columnStart": 4,
        "columnEnd": 13
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Docker image build arguments:\nARG baseimage=hub.opensciencegrid.org/slate/slate-client-server:1.0.7\nARG port=18080\n\n#######################################\n## Local Stage                        #\n#######################################\nFROM ${baseimage} as local-stage\n\n# Docker image build arguments:\nARG port\n\n# Docker container environmental variables:\nENV VERSION_OVERRIDE=\"localdev\"\n\n# Ports:\nEXPOSE ${port}\n\n# Volumes:\nVOLUME [ \"/slate\" ]\n\n# Run once the container has started:\nENTRYPOINT [ \"/bin/bash\" ]\n\n#######################################\n## Build Stage                        #\n#######################################\nFROM ${baseimage} as build-stage\n\n# Docker image build arguments:\nARG versionoverride=\"X.Y.Z\"\n\n# Docker container environmental variables:\nENV VERSION_OVERRIDE=${versionoverride}\n\n# Change working directory:\nWORKDIR /slate\n\n# Copy in all source material:\nCOPY ./ .\n\n# Remove any existing build artifacts:\nRUN rm -rf /slate/build/*\n\n# Build slate-service:\nRUN chmod +x ./resources/docker/scripts/build.sh && \\\n    . ./resources/docker/scripts/build.sh\n\n#######################################\n## Release Stage                      #\n#######################################\n\nFROM centos:7 as release-stage\n\n# Docker image build arguments:\nARG awssdkversion=1.7.345\nARG port\n\n# Package installs/updates:\nRUN yum install -y epel-release && rm -rf /var/cache/yum\nRUN yum install -y boost-devel \\\n   cmake3 \\\n   gcc-c++.x86_64 \\\n   less \\\n   libcurl-devel \\\n   make \\\n   openssl-devel \\\n   perl-Digest-SHA \\\n   unzip \\\n   which \\\n   yaml-cpp-devel \\\n   zlib-devel && rm -rf /var/cache/yum\nRUN yum clean all && rm -rf /var/cache/yum\n\n# Install AWS C++ SDK\nCOPY --from=build-stage /aws-sdk-cpp-${awssdkversion} /aws-sdk-cpp-${awssdkversion}\nCOPY --from=build-stage /build /build\nRUN cd ./build && \\\n    make install && \\\n    make clean\nRUN rm -rf /aws-sdk-cpp-${awssdkversion} /build\n\n# Change working directory:\nWORKDIR /usr/local/bin\n\n# Install AWS CLI\nCOPY --from=build-stage /usr/local/aws-cli /usr/local/aws-cli\nRUN ln -s /usr/local/aws-cli/v2/current/bin/aws aws && \\\n    ln -s /usr/local/aws-cli/v2/current/bin/aws_completer aws_completer\n\n# Install Helm\nCOPY --from=build-stage /usr/local/bin/helm helm\n\n# Change working directory:\nWORKDIR /usr/bin\n\n# Install Kubectl:\nCOPY --from=build-stage /usr/bin/kubectl kubectl\n\n# Install slate-service:\nCOPY --from=build-stage /slate/build/slate-service slate-service\n\n# Change working directory:\nWORKDIR /slate\n\n# Create slate directories:\nRUN mkdir ./conf ./keys ./users\n\n# Change working directory:\nWORKDIR /\n\n# Prepare entrypoint:\nCOPY --from=build-stage /slate/resources/docker/scripts/docker-entrypoint.sh /\nRUN chmod +x /docker-entrypoint.sh\n\n# Ports:\nEXPOSE ${port}\n\n# Run once the container has started:\nENTRYPOINT [ \"/docker-entrypoint.sh\" ]\n"
}