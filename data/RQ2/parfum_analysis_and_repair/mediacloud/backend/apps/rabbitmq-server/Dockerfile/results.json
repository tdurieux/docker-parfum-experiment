{
  "startTime": 1674252277873,
  "endTime": 1674252278573,
  "originalSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 29,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 29,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 73
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 29,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 73
      }
    }
  ],
  "repairedDockerfile": "#\n# RabbitMQ server\n#\n\nFROM gcr.io/mcback/base:latest\n\n# Add RabbitMQ APT repository\nRUN \\\n    #\n    # Erlang\n    curl -fsSL https://packages.erlang-solutions.com/ubuntu/erlang_solutions.asc | apt-key add - && \\\n    echo \"deb https://packages.erlang-solutions.com/ubuntu focal contrib\" \\\n        > /etc/apt/sources.list.d/rabbitmq-erlang.list && \\\n    #\n    # RabbitMQ\n    curl -fsSL https://packagecloud.io/rabbitmq/rabbitmq-server/gpgkey | apt-key add - && \\\n    echo \"deb https://packagecloud.io/rabbitmq/rabbitmq-server/ubuntu focal main\" \\\n        > /etc/apt/sources.list.d/rabbitmq.list && \\\n    #\n    apt-get -y update && \\\n    true\n\n# Install and hold a specific version of Erlang\n# (will be pinned by APT because not all version pairs are compatible; please\n# consult the compatibility table in https://www.rabbitmq.com/which-erlang.html\n# and check \"apt-cache policy erlang-nox | rabbitmq-server\" for available\n# versions)\nRUN \\\n    export ERLANG_APT_PACKAGE_VERSION=\"1:23.2.3-1\" && \\\n    apt-get -y --no-install-recommends install \\\n        \"erlang-asn1=$ERLANG_APT_PACKAGE_VERSION\" \\\n        \"erlang-base=$ERLANG_APT_PACKAGE_VERSION\" \\\n        \"erlang-crypto=$ERLANG_APT_PACKAGE_VERSION\" \\\n        \"erlang-eldap=$ERLANG_APT_PACKAGE_VERSION\" \\\n        \"erlang-ftp=$ERLANG_APT_PACKAGE_VERSION\" \\\n        \"erlang-inets=$ERLANG_APT_PACKAGE_VERSION\" \\\n        \"erlang-mnesia=$ERLANG_APT_PACKAGE_VERSION\" \\\n        \"erlang-os-mon=$ERLANG_APT_PACKAGE_VERSION\" \\\n        \"erlang-parsetools=$ERLANG_APT_PACKAGE_VERSION\" \\\n        \"erlang-public-key=$ERLANG_APT_PACKAGE_VERSION\" \\\n        \"erlang-runtime-tools=$ERLANG_APT_PACKAGE_VERSION\" \\\n        \"erlang-snmp=$ERLANG_APT_PACKAGE_VERSION\" \\\n        \"erlang-ssl=$ERLANG_APT_PACKAGE_VERSION\" \\\n        \"erlang-syntax-tools=$ERLANG_APT_PACKAGE_VERSION\" \\\n        \"erlang-tftp=$ERLANG_APT_PACKAGE_VERSION\" \\\n        \"erlang-tools=$ERLANG_APT_PACKAGE_VERSION\" \\\n        \"erlang-xmerl=$ERLANG_APT_PACKAGE_VERSION\" \\\n    && \\\n    apt-mark hold erlang* && \\\n    true && rm -rf /var/lib/apt/lists/*;\n\n# Install and hold a specific version of RabbitMQ\nRUN \\\n    apt-get -y --no-install-recommends install \"rabbitmq-server=3.8.12-1\" && \\\n    apt-mark hold rabbitmq-server && \\\n    rm -rf /etc/rabbitmq/ && \\\n    true && rm -rf /var/lib/apt/lists/*;\n\n# Copy configuration\nCOPY --chown=rabbitmq:rabbitmq conf/ /etc/rabbitmq/\n\nENV \\\n    #\n    # Set node name\n    RABBITMQ_NODENAME=\"mediacloud@localhost\" \\\n    #\n    # Increase I/O thread pool size to accommodate for a bigger number of connections\n    RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS=\"+A 512\"\n\n# Create an initial database that we can use to initialize a fresh copy of\n# RabbitMQ more quickly\n# If a new empty volume gets mounted to /var/lib/rabbitmq/mnesia/ upon\n# container start, Docker will copy the files from the container to the volume\nCOPY bin/initialize_rabbitmq_db.sh /\nRUN \\\n    echo \"Creating initial database...\" && \\\n    /initialize_rabbitmq_db.sh && \\\n    echo \"Done creating initial database.\" && \\\n    rm /initialize_rabbitmq_db.sh && \\\n    true\n\n# Mnesia database\nVOLUME /var/lib/rabbitmq/\n\n# Server\nEXPOSE 5672\n\n# Web management\nEXPOSE 15672\n\n# No USER because RabbitMQ changes its user itself\n\n# Run RabbitMQ\nCMD [\"rabbitmq-server\"]\n"
}