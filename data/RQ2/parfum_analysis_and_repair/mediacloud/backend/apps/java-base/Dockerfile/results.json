{
  "startTime": 1674255143568,
  "endTime": 1674255144515,
  "originalSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 54
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 68
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 54
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 68
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 54
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 68
      }
    }
  ],
  "repairedDockerfile": "#\n# Base image for apps that use Java\n#\n\nFROM gcr.io/mcback/base:latest\n\nENV JAVA_HOME=/usr/lib/jvm/java-16-amazon-corretto/\n\n# Install OpenJDK 16 with Docker support improvements:\n#\n# * https://bugs.openjdk.java.net/browse/JDK-8146115\n# * https://github.com/corretto/corretto-jdk/releases\n#\nRUN \\\n    apt-get -y --no-install-recommends install p11-kit && \\\n    /dl_to_stdout.sh \"https://corretto.aws/downloads/resources/16.0.2.7.1/java-16-amazon-corretto-jdk_16.0.2.7-1_$(dpkg --print-architecture).deb\" > /var/tmp/corretto.deb && \\\n    apt-get -y --no-install-recommends install /var/tmp/corretto.deb && \\\n    rm /var/tmp/corretto.deb && \\\n    #\n    # Remove source code\n    #\n    find \"$JAVA_HOME\" -name src.zip -delete && \\\n    #\n    # https://github.com/docker-library/openjdk/issues/331#issuecomment-498834472\n    #\n    find \"$JAVA_HOME/lib\" -name '*.so' -exec dirname '{}' ';' | \\\n        sort -u > /etc/ld.so.conf.d/docker-openjdk.conf && \\\n    ldconfig && \\\n    #\n    # https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840\n    # https://openjdk.java.net/jeps/341\n    java -Xshare:dump && \\\n    #\n    true && rm -rf /var/lib/apt/lists/*;\n\n# * Use cgroup's memory / CPU limits\n# * Install our own security profile\n# * Mitigate Log4Shell (CVE-2021-44228)\nCOPY mediacloud-java.security /\nENV \\\n    JDK_JAVA_OPTIONS=\"-XX:+UseContainerSupport -Djava.security.properties=/mediacloud-java.security\" \\\n    LOG4J_FORMAT_MSG_NO_LOOKUPS=\"true\"\n\n# Add script that will keep system and Java certificates up-to-date and in sync\nCOPY docker-openjdk.update.d.sh /etc/ca-certificates/update.d/openjdk\nRUN \\\n    chmod +x /etc/ca-certificates/update.d/openjdk && \\\n    /etc/ca-certificates/update.d/openjdk\n\n# Test if Java is working\nRUN \\\n    echo 'public class Main { public static void main(String[] args) { System.out.println(\"Java works!\"); } }' > /var/tmp/Main.java && \\\n    javac /var/tmp/Main.java && \\\n    java -classpath /var/tmp/ Main && \\\n    rm /var/tmp/Main.* && \\\n    true\n"
}