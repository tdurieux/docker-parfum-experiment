{
  "startTime": 1674248345902,
  "endTime": 1674248347057,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 50
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# Temporal webapp\n#\n\nFROM gcr.io/mcback/base:latest\n\nRUN \\\n\n\n    curl -fsSL https://deb.nodesource.com/gpgkey/nodesource.gpg.key | apt-key add - && \\\n    echo \"deb https://deb.nodesource.com/node_14.x focal main\" \\\n        > /etc/apt/sources.list.d/nodesource.list && \\\n    apt-get -y update && \\\n    #\n    # Install Node.js\n    apt-get -y --no-install-recommends install nodejs && \\\n    #\n    true && rm -rf /var/lib/apt/lists/*;\n\n# FIXME Vue.js still gets built in development mode\nENV NODE_ENV=production \\\n    NPM_CONFIG_PRODUCTION=true \\\n    TEMPORAL_GRPC_ENDPOINT=temporal-server:7233 \\\n    TEMPORAL_PERMIT_WRITE_API=true\n\nRUN \\\n\n\n    apt-get -y --no-install-recommends install git && \\\n    #\n    # Create target directory\n    mkdir -p /opt/temporal-webapp/ && \\\n    #\n    # Download Temporal webapp\n    # * We use Git instead of building a released package because we need\n    #   the submodules for the build too;\n    # * We check out a specific commit hash instead of a version tag to prevent\n    #   dependency confusion\n    #   (https://medium.com/@alex.birsan/dependency-confusion-4a5d60fec610);\n    # * We do some extra trickery to do a shallow copy of just a single commit\n    #   hash to save space + time (https://stackoverflow.com/a/43136160/200603);\n    # * Submodule is referred to as a SSH URI, so we need to make Git's SSH\n    #   work first too.\n    #\n    cd /opt/temporal-webapp/ && \\\n    git init && \\\n    git remote add origin https://github.com/temporalio/web.git && \\\n    # HEAD of \"v1.9.0\" tag:\n    git fetch --depth 1 origin 6ed16d0dc07b4baf43e091028d98fa1fe7a29c06 && \\\n    git checkout FETCH_HEAD && \\\n    # SSH checkout doesn't work with the build container's public key not\n    # registered with GitHub\n    sed -i 's/git@github.com:/https:\\/\\/github.com\\//g' .gitmodules && \\\n    git submodule init && \\\n    git submodule sync && \\\n    git submodule update --init --recursive --depth 1 && \\\n    #\n    # Build the webapp\n    npm install --production && \\\n    npm run build-production && \\\n    #\n    # Remove build dependencies\n    apt-get -y remove git && \\\n    apt-get -y autoremove && \\\n    apt-get -y clean && \\\n    #\n    # Remove Git history as we won't need it\n    rm -rf .git/ && \\\n    #\n    # Add unprivileged user the service will run as\n    useradd -ms /bin/bash temporal && \\\n    #\n    true && npm cache clean --force; && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /opt/temporal-webapp/\n\n# Webapp port\nEXPOSE 8088\n\nUSER temporal\n\nCMD [\"node\", \"server.js\"]\n"
}