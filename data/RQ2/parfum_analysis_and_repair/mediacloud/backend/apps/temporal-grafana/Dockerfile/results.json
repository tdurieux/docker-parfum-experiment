{
  "startTime": 1674250772849,
  "endTime": 1674250773610,
  "originalSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 22
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 22
      }
    }
  ],
  "repairedDockerfile": "#\n# Grafana for Temporal stats\n#\n\nFROM gcr.io/mcback/base:latest\n\n# Install dependencies\nRUN \\\n    apt-get -y --no-install-recommends install \\\n        libfontconfig1 \\\n    && \\\n    true && rm -rf /var/lib/apt/lists/*;\n\n# Install Grafana\nRUN \\\n    mkdir -p /opt/grafana/ && \\\n    /dl_to_stdout.sh \"https://dl.grafana.com/oss/release/grafana-7.5.5.linux-$(dpkg --print-architecture).tar.gz\" | \\\n        tar -zx -C /opt/grafana/ --strip 1 && \\\n    true\n\nRUN \\\n\t#\n\t# Remove sample provisioning\n\trm -rf /opt/grafana/conf/provisioning/ && \\\n\t#\n\t# Add unprivileged user the service will run as\n    useradd -ms /bin/bash temporal && \\\n    mkdir -p \\\n    \t/var/lib/grafana/ \\\n    \t/var/lib/grafana/logs/ \\\n    \t/var/lib/grafana/plugins/ \\\n    && \\\n    chown temporal:temporal /var/lib/grafana/ && \\\n    #\n    # Create directory for provisioning dashboards\n    mkdir -p /opt/grafana/dashboards/ && \\\n    #\n    true\n\nCOPY provisioning/ /opt/grafana/conf/provisioning/\nCOPY dashboards/dashboards/* /opt/grafana/dashboards/\n\n# Test if submodules were checked out\nRUN \\\n    if [ ! -f \"/opt/grafana/dashboards/temporal.json\" ]; then \\\n        echo && \\\n        echo \"Git submodules haven't been checked out, please run:\" && \\\n        echo && \\\n        echo \"    git submodule update --init --recursive\" && \\\n        echo && \\\n        echo \"and then rebuild this image.\" && \\\n        echo && \\\n        exit 1; \\\n    fi\n\nWORKDIR /opt/grafana/\n\nENV PATH=\"/opt/grafana/bin:${PATH}\"\n\nEXPOSE 3000\n\nVOLUME /var/lib/grafana/\n\nUSER temporal\n\nCOPY grafana.ini /opt/grafana/conf/\n\nCMD [\"grafana-server\", \"-config\", \"/opt/grafana/conf/grafana.ini\"]\n"
}