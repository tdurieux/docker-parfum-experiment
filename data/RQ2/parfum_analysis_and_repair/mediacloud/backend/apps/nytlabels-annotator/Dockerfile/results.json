{
  "startTime": 1674256003443,
  "endTime": 1674256004878,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 93,
        "lineEnd": 93,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 72,
        "lineEnd": 78,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 90,
        "lineEnd": 90,
        "columnStart": 4,
        "columnEnd": 55
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 72,
        "lineEnd": 78,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 90,
        "lineEnd": 90,
        "columnStart": 4,
        "columnEnd": 55
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 72,
        "lineEnd": 78,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 90,
        "lineEnd": 90,
        "columnStart": 4,
        "columnEnd": 55
      }
    }
  ],
  "repairedDockerfile": "#\n# NYT-based news tagger service\n#\n\nFROM gcr.io/mcback/base:latest\n\nRUN \\\n\n    apt-get -y update && \\\n    #\n    # Install model fetch dependencies\n    apt-get -y --no-install-recommends install brotli && \\\n    #\n    # Create directory for annotator\n    mkdir -p /usr/src/crappy-predict-news-labels/models/ && \\\n    #\n    true && rm -rf /usr/src/crappy-predict-news-labels/models/ && rm -rf /var/lib/apt/lists/*;\n\n# Download and extract models\n# (get them first so that every code change doesn't trigger huge model redownload)\nWORKDIR /usr/src/crappy-predict-news-labels/models/\nENV MODEL_URL=\"https://mediacloud-nytlabels-data.s3.amazonaws.com/predict-news-labels-onnx\"\n\nRUN /dl_to_stdout.sh \"$MODEL_URL/GoogleNews-vectors-negative300.stripped.shelve.br\" | \\\n        brotli -d > GoogleNews-vectors-negative300.stripped.shelve\n\nRUN /dl_to_stdout.sh \"$MODEL_URL/scaler.onnx\" > scaler.onnx\n\nRUN /dl_to_stdout.sh \"$MODEL_URL/all_descriptors.onnx.br\" | \\\n        brotli -d > allDescriptors.onnx\nRUN /dl_to_stdout.sh \"$MODEL_URL/all_descriptors.txt.br\" | \\\n        brotli -d > allDescriptors.txt\n\nRUN /dl_to_stdout.sh \"$MODEL_URL/descriptors_3000.onnx.br\" | \\\n        brotli -d > descriptors3000.onnx\nRUN /dl_to_stdout.sh \"$MODEL_URL/descriptors_3000.txt.br\" | \\\n        brotli -d > descriptors3000.txt\n\nRUN /dl_to_stdout.sh \"$MODEL_URL/descriptors_600.onnx.br\" | \\\n        brotli -d > descriptors600.onnx\nRUN /dl_to_stdout.sh \"$MODEL_URL/descriptors_600.txt.br\" | \\\n        brotli -d > descriptors600.txt\n\nRUN /dl_to_stdout.sh \"$MODEL_URL/descriptors_with_taxonomies.onnx.br\" | \\\n        brotli -d > descriptorsAndTaxonomies.onnx\nRUN /dl_to_stdout.sh \"$MODEL_URL/descriptors_with_taxonomies.txt.br\" | \\\n        brotli -d > descriptorsAndTaxonomies.txt\n\nRUN /dl_to_stdout.sh \"$MODEL_URL/just_taxonomies.onnx.br\" | \\\n        brotli -d > taxonomies.onnx\nRUN /dl_to_stdout.sh \"$MODEL_URL/just_taxonomies.txt.br\" | \\\n        brotli -d > taxonomies.txt\n\n# Install NLTK data\nRUN \\\n    apt-get -y --no-install-recommends install unzip && \\\n    mkdir -p /usr/local/share/nltk_data/tokenizers/punkt/PY3/ && \\\n    /dl_to_stdout.sh \"https://raw.githubusercontent.com/nltk/nltk_data/gh-pages/packages/tokenizers/punkt.zip\" \\\n        > /var/tmp/punkt.zip && \\\n    cd /var/tmp/ && \\\n    unzip punkt.zip && \\\n    rm punkt.zip && \\\n    cd /var/tmp/punkt/ && \\\n    cp english.pickle /usr/local/share/nltk_data/tokenizers/punkt/ && \\\n    cp PY3/english.pickle /usr/local/share/nltk_data/tokenizers/punkt/PY3/ && \\\n    cd / && \\\n    rm -rf /var/tmp/punkt/ && \\\n    apt-get -y remove unzip && \\\n    true && rm -rf /var/lib/apt/lists/*;\n\n# Install Python\nRUN \\\n    apt-get -y --no-install-recommends install \\\n        python3 \\\n        python3-dev \\\n        python3-pip \\\n        #\n        # Needed by \"shelve\" module:\n        python3-gdbm \\\n    && \\\n    true && rm -rf /var/lib/apt/lists/*;\n\n# Install requirements\n# (do this first so that minor changes in the annotator's code don't trigger a\n# full module reinstall)\nWORKDIR /usr/src/crappy-predict-news-labels/\nCOPY src/crappy-predict-news-labels/requirements.txt /usr/src/crappy-predict-news-labels/\nRUN \\\n\n\n    apt-get -y --no-install-recommends install libgomp1 && \\\n    #\n    # The rest\n    pip3 install --no-cache-dir -r requirements.txt && \\\n    rm -rf /root/.cache/ && \\\n    true && rm -rf /var/lib/apt/lists/*;\n\n# Copy the rest of the source\nCOPY src/crappy-predict-news-labels/ /usr/src/crappy-predict-news-labels/\n\n# Set PYTHONPATH and PATH so that PyCharm is able to resolve dependencies\nENV PYTHONPATH=\"/usr/src/crappy-predict-news-labels:${PYTHONPATH}\" \\\n    PATH=\"/usr/src/crappy-predict-news-labels:${PATH}\"\n\n# Tagger port\nEXPOSE 8080\n\n# We can just kill -9 the thing\nSTOPSIGNAL SIGTERM\n\nUSER nobody\n\nCMD [\"nytlabels.sh\"]\n"
}