{
  "startTime": 1674251296920,
  "endTime": 1674251298167,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 34
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 58
      }
    }
  ],
  "repairedDockerfile": "FROM php:7-fpm\n\n# Install modules\nRUN apt-get update; \\\n    apt-get install --no-install-recommends -y \\\n        libmcrypt-dev \\\n        zlib1g-dev \\\n        curl \\\n        wget \\\n        git \\\n        zlib1g-dev \\\n        libpng-dev \\\n        gnupg \\\n        gnupg2 \\\n        gnupg1 && rm -rf /var/lib/apt/lists/*;\n\nRUN docker-php-ext-install bcmath\nRUN docker-php-ext-install mbstring\nRUN docker-php-ext-install pdo\nRUN docker-php-ext-install pdo_mysql\nRUN docker-php-ext-install tokenizer\nRUN docker-php-ext-install gd\n#RUN docker-php-ext-install mcrypt\nRUN docker-php-ext-install pcntl\nRUN docker-php-ext-install zip\n\n# Possible values for docker-php-ext-install:\n# bcmath bz2 calendar ctype curl dba dom enchant exif fileinfo filter ftp gd\n# gettext gmp hash iconv imap interbase intl json ldap mbstring mcrypt mssql\n# mysql mysqli oci8 odbc opcache pcntl pdo pdo_dblib pdo_firebird pdo_mysql\n# pdo_oci pdo_odbc pdo_pgsql pdo_sqlite pgsql phar posix pspell readline recode\n# reflection session shmop simplexml snmp soap sockets spl standard sybase_ct sysvmsg\n# sysvsem sysvshm tidy tokenizer wddx xml xmlreader xmlrpc xmlwriter xsl zip\n\n# Install composer\nRUN curl -f -sS https://getcomposer.org/installer | php\nRUN mv composer.phar /usr/local/bin/composer\nRUN curl -f -sL https://deb.nodesource.com/setup_10.x | bash\nRUN curl -f -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -\nRUN echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list\nRUN apt-get update\nRUN apt-get install --no-install-recommends -y nodejs yarn && rm -rf /var/lib/apt/lists/*;\n\n# Install dockerize. Needed to make php container wait for services it depends on.\n# Using wget instead of ADD command to utilize docker cache\nENV DOCKERIZE_VERSION v0.3.0\nRUN wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz \\\n    && tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz \\\n    && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz\n\nENV TERM xterm\n\n# This directive is used to prevent permission issues when using shared volumes. Do not use in production!\nRUN adduser www-data root"
}