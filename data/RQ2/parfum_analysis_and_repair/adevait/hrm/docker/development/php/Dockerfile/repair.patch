diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/adevait/hrm/docker/development/php/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/adevait/hrm/docker/development/php/Dockerfile/repaired.Dockerfile
index 45a42a4..7e77e91 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/adevait/hrm/docker/development/php/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/adevait/hrm/docker/development/php/Dockerfile/repaired.Dockerfile
@@ -2,7 +2,7 @@ FROM php:7-fpm
 
 # Install modules
 RUN apt-get update; \
-    apt-get install -y \
+    apt-get install --no-install-recommends -y \
         libmcrypt-dev \
         zlib1g-dev \
         curl \
@@ -12,7 +12,7 @@ RUN apt-get update; \
         libpng-dev \
         gnupg \
         gnupg2 \
-        gnupg1
+        gnupg1 && rm -rf /var/lib/apt/lists/*;
 
 RUN docker-php-ext-install bcmath
 RUN docker-php-ext-install mbstring
@@ -33,13 +33,13 @@ RUN docker-php-ext-install zip
 # sysvsem sysvshm tidy tokenizer wddx xml xmlreader xmlrpc xmlwriter xsl zip
 
 # Install composer
-RUN curl -sS https://getcomposer.org/installer | php
+RUN curl -f -sS https://getcomposer.org/installer | php
 RUN mv composer.phar /usr/local/bin/composer
-RUN curl -sL https://deb.nodesource.com/setup_10.x | bash
-RUN curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -
+RUN curl -f -sL https://deb.nodesource.com/setup_10.x | bash
+RUN curl -f -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -
 RUN echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list
 RUN apt-get update
-RUN apt-get install -y nodejs yarn
+RUN apt-get install --no-install-recommends -y nodejs yarn && rm -rf /var/lib/apt/lists/*;
 
 # Install dockerize. Needed to make php container wait for services it depends on.
 # Using wget instead of ADD command to utilize docker cache
@@ -47,7 +47,7 @@ ENV DOCKERIZE_VERSION v0.3.0
 RUN wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz \
     && tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz \
     && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
-    
+
 ENV TERM xterm
 
 # This directive is used to prevent permission issues when using shared volumes. Do not use in production!