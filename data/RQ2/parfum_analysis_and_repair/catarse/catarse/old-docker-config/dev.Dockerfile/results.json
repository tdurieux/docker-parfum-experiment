{
  "startTime": 1674246413461,
  "endTime": 1674246414130,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 57
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 35
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine\nMAINTAINER Catarse <contato@catarse.me>\n\nENV BUILD_PACKAGES postgresql-dev libxml2-dev libxslt-dev imagemagick imagemagick-dev openssl libpq libffi-dev bash curl-dev libstdc++ tzdata bash ca-certificates build-base ruby-dev libc-dev linux-headers postgresql-client postgresql git nodejs\nENV RUBY_PACKAGES ruby ruby-io-console ruby-bundler ruby-irb ruby-bigdecimal ruby-json\n\n# Update and install all of the required packages.\n# At the end, remove the apk cache\nRUN apk update && \\\n    apk upgrade && \\\n    apk --update --no-cache add --virtual build_deps $BUILD_PACKAGES && \\\n    apk --update --no-cache add $RUBY_PACKAGES\n\nRUN mkdir /usr/app\nWORKDIR /usr/app\n\nCOPY Gemfile /usr/app/\nCOPY Gemfile.lock /usr/app/\n\nRUN bundle install\nCOPY . /usr/app\n\nRUN cp /usr/share/zoneinfo/America/Sao_Paulo /etc/localtime && echo \"America/Sao_Paulo\" >  /etc/timezone\n\n# ==================================================================================================\n# 7: Copy the rest of the application code, install nodejs as a build dependency, then compile the\n# app assets, and finally change the owner of the code to 'nobody':\nRUN set -ex \\\n  && mkdir -p /usr/app/tmp/cache \\\n  && mkdir -p /usr/app/tmp/pids \\\n  && mkdir -p /usr/app/tmp/sockets\n#  && chown -R nobody /usr/app\n\n# ==================================================================================================\n# 8: Set the container user to 'nobody':\n#USER nobody"
}