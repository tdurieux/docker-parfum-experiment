{
  "startTime": 1674255532258,
  "endTime": 1674255532951,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "############################\n# STEP 1 build web dist\n############################\nFROM node:13.8.0-slim as webBuilder\nWORKDIR /web\nCOPY ./web /web/\n\nRUN npm install && npm cache clean --force;\nRUN npm run build\n\n\n############################\n# STEP 2 build executable binary\n############################\n# FROM golang:alpine AS builder\nFROM public.ecr.aws/docker/library/golang:1.18 as builder\nARG VERSION\nARG COMMIT_HASH\nARG BUILD_DATE\n\nRUN update-ca-certificates\n# RUN apk update && apk add --no-cache git\n# Create appuser.\nENV USER=appuser\nENV UID=10001\n# See https://stackoverflow.com/a/55757473/12429735RUN\nRUN adduser \\\n    --disabled-password \\\n    --gecos \"\" \\\n    --home \"/nonexistent\" \\\n    --shell \"/sbin/nologin\" \\\n    --no-create-home \\\n    --uid \"${UID}\" \\\n    \"${USER}\"\nWORKDIR $GOPATH/src/github.com/zinclabs/zinc/\nCOPY . .\nCOPY --from=webBuilder /web/dist web/dist\n\n# Fetch dependencies.\n# Using go get.\nRUN go mod tidy\n# Using go mod.\n# RUN go mod download\n# RUN go mod verify\n# Build the binary.\n# to tackle error standard_init_linux.go:207: exec user process caused \"no such file or directory\" set CGO_ENABLED=0.\n# CGO_ENABLED=0 builds a statically linked binary.\n# docs for -ldflags at https://pkg.go.dev/cmd/link\n#       -w : Omit the DWARF symbol table.\n#       -s : Omit the symbol table and debug information.\n#       Omit the symbol table and debug information will reduce the binary size.\n# RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -ldflags=\"-w -s\" -o zinc cmd/zinc/main.go\nENV VERSION=$VERSION\nENV COMMIT_HASH=$COMMIT_HASH\nENV BUILD_DATE=$BUILD_DATE\n\nRUN CGO_ENABLED=0 go build -ldflags=\"-s -w -X github.com/zinclabs/zinc/pkg/meta.Version=${VERSION} -X github.com/zinclabs/zinc/pkg/meta.CommitHash=${COMMIT_HASH} -X github.com/zinclabs/zinc/pkg/meta.BuildDate=${BUILD_DATE}\" -o zinc cmd/zinc/main.go\n############################\n# STEP 3 build a small image\n############################\n# FROM public.ecr.aws/lts/ubuntu:latest\nFROM scratch\n# Import the user and group files from the builder.\nCOPY --from=builder /etc/passwd /etc/passwd\nCOPY --from=builder /etc/group /etc/group\n\n# Copy the ssl certificates\nCOPY --from=builder /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/ca-certificates.crt\n\n# Copy our static executable.\nCOPY --from=builder  /go/src/github.com/zinclabs/zinc/zinc /go/bin/zinc\n\n# Use an unprivileged user.\nUSER appuser:appuser\n# Port on which the service will be exposed.\nEXPOSE 4080\n# Run the zinc binary.\nENTRYPOINT [\"/go/bin/zinc\"]\n"
}