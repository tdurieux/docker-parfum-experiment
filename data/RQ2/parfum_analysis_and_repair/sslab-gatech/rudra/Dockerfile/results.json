{
  "startTime": 1674246732548,
  "endTime": 1674246733904,
  "originalSmells": [
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 57
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 58
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copied and modified from the rust official image\n# https://github.com/rust-lang/docker-rust/blob/bbc7feb12033da3909dced4e88ddbb6964fbc328/1.50.0/buster/Dockerfile\nFROM buildpack-deps:buster\n\nENV RUSTUP_HOME=/usr/local/rustup \\\n    CARGO_HOME=/usr/local/cargo \\\n    PATH=/usr/local/cargo/bin:$PATH \\\n    RUST_VERSION=nightly-2021-08-20 \\\n    SCCACHE_VERSION=v0.2.15\n\nENV RUSTFLAGS=\"-L ${RUSTUP_HOME}/toolchains/${RUST_VERSION}-x86_64-unknown-linux-gnu/lib\" \\\n    LD_LIBRARY_PATH=\"${RUSTUP_HOME}/toolchains/${RUST_VERSION}-x86_64-unknown-linux-gnu/lib\"\n\n# Install Rust\nRUN set -eux; \\\n    dpkgArch=\"$(dpkg --print-architecture)\"; \\\n    case \"${dpkgArch##*-}\" in \\\n        amd64) rustArch='x86_64-unknown-linux-gnu'; rustupSha256='ed7773edaf1d289656bdec2aacad12413b38ad0193fff54b2231f5140a4b07c5' ;; \\\n        # arm64) rustArch='aarch64-unknown-linux-gnu'; rustupSha256='f80a0a792b3ab905ab4919474daf4d3f60e574fc6987e69bfba2fd877241a8de' ;; \\\n        *) echo >&2 \"unsupported architecture: ${dpkgArch}\"; exit 1 ;; \\\n    esac; \\\n    url=\"https://static.rust-lang.org/rustup/archive/1.23.1/${rustArch}/rustup-init\"; \\\n    wget \"$url\"; \\\n    echo \"${rustupSha256}  *rustup-init\" | sha256sum -c -; \\\n    chmod +x rustup-init; \\\n    ./rustup-init -y --no-modify-path --profile minimal --default-toolchain $RUST_VERSION --default-host ${rustArch}; \\\n    rm rustup-init; \\\n    chmod -R a+w $RUSTUP_HOME $CARGO_HOME; \\\n    rustup component add rustc-dev; \\\n    rustup --version; \\\n    cargo --version; \\\n    rustc --version;\n\n# Install sccache\nRUN set -eux; \\\n    dpkgArch=\"$(dpkg --print-architecture)\"; \\\n    case \"${dpkgArch##*-}\" in \\\n        amd64) sccacheArch='x86_64'; sccacheSha256='e5d03a9aa3b9fac7e490391bbe22d4f42c840d31ef9eaf127a03101930cbb7ca' ;; \\\n        # arm64) sccacheArch='aarch64'; sccacheSha256='90d91d21a767e3f558196dbd52395f6475c08de5c4951a4c8049575fa6894489' ;; \\\n        *) echo >&2 \"unsupported architecture: ${dpkgArch}\"; exit 1 ;; \\\n    esac; \\\n    dirname=\"sccache-${SCCACHE_VERSION}-${sccacheArch}-unknown-linux-musl\"; \\\n    filename=\"${dirname}.tar.gz\"; \\\n    url=\"https://github.com/mozilla/sccache/releases/download/${SCCACHE_VERSION}/${filename}\"; \\\n    wget \"$url\"; \\\n    echo \"${sccacheSha256}  *${filename}\" | sha256sum -c -; \\\n    tar -xvzf ${filename}; \\\n    mv ${dirname}/sccache /usr/local/bin/sccache; \\\n    chmod +x /usr/local/bin/sccache; \\\n    rm -rf ${filename} ${dirname};\n\n# Install Rudra\nCOPY rust-toolchain.toml /tmp/rust-toolchain.toml\nCOPY crawl /tmp/crawl\nRUN set -eux; \\\n    cargo install --locked --path /tmp/crawl --bin rudra-runner --bin unsafe-counter; \\\n    rm -rf /tmp/rust-toolchain.toml /tmp/crawl;\n\nCOPY . /tmp/rudra/\nRUN set -eux; \\\n    cd /tmp/rudra; \\\n    ./install-release.sh; \\\n    rm -rf /tmp/rudra/;\n"
}