{
  "startTime": 1674250360498,
  "endTime": 1674250361537,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 22
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# ---\n# --- Builder image\n# ---\n\nFROM python:3.10-alpine as builder\n\n# Install build dependancies\nRUN apk update && apk add --upgrade --no-cache g++ make\n\n# Install pipenv\nRUN pip install --no-cache-dir --upgrade pip\nRUN pip install --no-cache-dir pipenv\n\nWORKDIR /usr/local/src\n\n# Build a venv with dependancies in current directory\nCOPY Pipfile.lock Pipfile* /usr/local/src/\nRUN PIPENV_VENV_IN_PROJECT=1 pipenv sync\n\n# ---\n# --- Application image\n# ---\n\nFROM python:3.10-alpine as runtime\n\n# Create the user idunn\nRUN addgroup --gid 1000 idunn\nRUN adduser --disabled-password --home /home/idunn --ingroup idunn \\\n            --uid 1000 idunn\n\nENV PYTHONUNBUFFERED=1\n\n# Set the multiprocess mode for gunicorn\nENV IDUNN_PROMETHEUS_MULTIPROC=1\nENV PROMETHEUS_MULTIPROC_DIR=/home/idunn/prometheus_multiproc\n\n# Install lib dependancies\nRUN apk update && apk add --upgrade --no-cache geos\n\nUSER idunn\nWORKDIR /home/idunn\nRUN mkdir -p /home/idunn/prometheus_multiproc\n\n# Add files into images\nCOPY app.py /home/idunn\nCOPY idunn /home/idunn/idunn\nCOPY --from=builder /usr/local/src/.venv /home/idunn/.venv\n\nEXPOSE 5000\n\n# You can set the number of workers by passing --workers=${NB_WORKER} to the docker run command.\n# For some reason, an array is required here to accept other params on run.\nENTRYPOINT [                                           \\\n    \"./.venv/bin/python\", \"-m\", \"gunicorn\", \"app:app\", \\\n    \"--bind=0.0.0.0:5000\",                             \\\n    \"--pid=/tmp/gunicorn.pid\",                         \\\n    \"-k\", \"uvicorn.workers.UvicornWorker\",             \\\n    \"--preload\"                                        \\\n]\n"
}