{
  "startTime": 1674216328858,
  "endTime": 1674216329799,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 7,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 23
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:14-buster-slim\n\nRUN apt-get update && \\\n    DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y \\\n        git \\\n        unzip \\\n        curl \\\n        libpq-dev \\\n        libproj-dev \\\n        liblua5.2-dev \\\n        libgeos++-dev \\\n        nmap \\\n        netcat \\\n        redis-tools \\\n        python3-pip \\\n        locales \\\n        python3.6 \\\n        build-essential \\\n    && apt-get clean \\\n    && npm i npm@latest -g && npm cache clean --force; && rm -rf /var/lib/apt/lists/*;\n\nRUN git clone https://github.com/Qwant/kartotherian.git /opt/kartotherian \\\n    && cd /opt/kartotherian \\\n    && git checkout 46dedb6d0c46d0f1dbf6ad4e029d676c63fc5eab \\\n    && npm ci --production\n\n# install openmaptiles-tools\nRUN python3 -m pip install --upgrade pip \\\n    && python3 -m pip install git+https://github.com/openmaptiles/openmaptiles-tools@v0.12.0\n\n# install openmaptiles\nCOPY openmaptiles /opt/openmaptiles\n# setup needed directories\nRUN mkdir -p /opt/config/imposm\nRUN mkdir -p /opt/config/tilerator\n# needed for sql script, else the BOM in the file makes the query impossible\nRUN locale-gen en_US.UTF-8\nENV LANG C.UTF-8\nENV LANGUAGE en_US:en\nENV LC_ALL C.UTF-8\n# generate config files\nRUN cd /opt/openmaptiles \\\n    && CONFIG_DIR=/opt/config make qwant\n\nRUN mkdir -p /etc/tilerator\nCOPY tilerator/config*.yaml /etc/tilerator/\nCOPY tilerator/gen_tiles.sh /gen_tiles.sh\n\nCOPY tilerator/sources.yaml /etc/tilerator/\nRUN ln -sf /opt/config/tilerator/data_tm2source_base.yml /etc/tilerator\nRUN ln -sf /opt/config/tilerator/data_tm2source_poi.yml /etc/tilerator\nRUN ln -sf /opt/config/tilerator/data_tm2source_lite.yml /etc/tilerator\n\nRUN chmod +x /gen_tiles.sh\n\nCOPY tilerator/runserver.sh /runserver.sh\nRUN chmod +x /runserver.sh\n\nENV TILERATOR_PORT=80\nENV TILERATOR_OSMDB_HOST=postgres\nENV TILERATOR_OSMDB_USER=gis\nENV TILERATOR_OSMDB_PSWD=gis\nENV TILERATOR_CASSANDRA_SERVERS=cassandra\nENV TILERATOR_CASSANDRA_USER=gis\nENV TILERATOR_CASSANDRA_PSWD=\nENV TILERATOR_REDIS_URL=redis://redis:6379\n\nCMD [\"/runserver.sh\"]\n"
}