{
  "startTime": 1674217027025,
  "endTime": 1674217027744,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 24
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:16.14.2-stretch-slim as base\n\nENV PROJECT_DIR=/srv/maps-tileview/\n\nRUN apt-get update && apt-get -y install --no-install-recommends \\\n    gettext git python3 build-essential ca-certificates \\\n  && rm -rf /var/lib/apt/lists/*\n\nRUN npm i npm@\"8.5.0\" -g && npm cache clean --force;\nRUN mkdir -p $PROJECT_DIR\nRUN chown node $PROJECT_DIR\n\nUSER node\nWORKDIR $PROJECT_DIR\n\n###########################################################\n\nFROM base as builder\nCOPY --chown=node package*.json $PROJECT_DIR\nCOPY --chown=node build $PROJECT_DIR/build\nCOPY --chown=node local_modules $PROJECT_DIR/local_modules\n\n# Install with dev and build dependencies\n# 'npm prepare' is called after install\nRUN npm ci\n\nCOPY --chown=node . $PROJECT_DIR\n\nRUN NODE_ENV=production npm run-script build -- --mode=production\n\n# Pre-build gzipped versions of static files\n# They will be served directly by express-static-gzip\nRUN cd public && find . -type f ! -name '*.gz' ! -name '*.jpg' ! -name '*.png' ! -name '*.woff*' -exec gzip -k \"{}\" \\;\n\n###########################################################\n\nFROM base\n\nENV NODE_ENV=production\n\nCOPY local_modules $PROJECT_DIR/local_modules\nCOPY package*.json $PROJECT_DIR\n\n# As all static files will be copied from the previous step, 'prepare' script is not needed\nRUN IGNORE_PREPARE=true npm ci --production\n\nCOPY config $PROJECT_DIR/config\nCOPY language $PROJECT_DIR/language\nCOPY views $PROJECT_DIR/views\nCOPY bin $PROJECT_DIR/bin\nCOPY --from=builder $PROJECT_DIR/public $PROJECT_DIR/public\n\nCMD node $PROJECT_DIR/bin/index.js\n"
}