{
  "startTime": 1674249217398,
  "endTime": 1674249218104,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 80,
        "lineEnd": 81,
        "columnStart": 4,
        "columnEnd": 139
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:11.1-slim\n\nRUN printf '%s\\n' \\\n    \"deb    [check-valid-until=no, trusted=yes] http://snapshot.debian.org/archive/debian/20211101T024700Z/ bullseye main contrib non-free\" \\\n    \"deb-src [check-valid-until=no, trusted=yes] http://snapshot.debian.org/archive/debian/20211101T024700Z/ bullseye main contrib non-free\" \\\n    \"deb     [check-valid-until=no, trusted=yes] http://snapshot.debian.org/archive/debian/20211101T024700Z/ bullseye-updates main contrib non-free\" \\\n    \"deb-src [check-valid-until=no, trusted=yes] http://snapshot.debian.org/archive/debian/20211101T024700Z/ bullseye-updates main contrib non-free\" > /etc/apt/sources.list \\\n&& \\\n    apt-get -o Acquire::Check-Valid-Until=false update \\\n&& \\\n    apt-get install -y --no-install-recommends \\\n# R\n    r-base-core \\\n    r-cran-ggplot2 \\\n    r-cran-dplyr \\\n    r-cran-irkernel \\\n    r-cran-quantreg \\\n# simgrid dependencies\n    g++ \\\n    gcc \\\n    git \\\n    valgrind \\\n    gfortran \\\n    libboost-dev \\\n    libboost-all-dev \\\n    libeigen3-dev \\\n    cmake \\\n    dpkg-dev \\\n# misc tools\n    curl \\\n# python\n    python3-dev \\\n    python3-pip \\\n    python3-setuptools \\\n    python3-pandas \\\n    python3-matplotlib \\\n# jupyterlab dependencies\n    libffi-dev \\\n    pandoc \\\n&& \\\n    apt-get clean \\\n    && rm -rf /var/lib/apt/lists/*\n\n# pycewise\nRUN pip install --no-cache-dir --no-dependencies \\\n    pycewise==0.1.4 \\\n    plotnine==0.8.0 \\\n    patsy==0.5.2 \\\n    mizani==0.7.3 \\\n    palettable==3.3.0 \\\n    scipy==1.7.2 \\\n    statsmodels==0.13.0 \\\n    descartes==1.1.0\n\n# R package not available at debian's cran\nRUN R -e \"install.packages('remotes', dependencies=TRUE, repos='http://cran.rstudio.com/')\" && \\\n    R -e \"require(remotes); install_version('Ckmeans.1d.dp','4.3.3', dependencies=TRUE, repos='http://cran.rstudio.com/')\"\n\n# python jupyterlab packages\nRUN pip install --no-cache-dir --upgrade pip && \\\n    pip install --no-cache-dir \\\n    jupyterlab==3.2.3 \\\n    papermill==2.3.3 \\\n    ipywidgets==7.6.5\n\n# simgrid\nRUN mkdir -p /source && cd /source && git clone --depth=1 https://framagit.org/simgrid/simgrid.git simgrid.git && \\\n    cd simgrid.git && \\\n    cmake -DCMAKE_INSTALL_PREFIX=/usr/ -Denable_documentation=OFF -Denable_smpi=ON -Denable_compile_optimizations=ON . && \\\n    make -j4 install\n\n# platform-calibration\nRUN cd /source && git clone --depth=1 https://framagit.org/simgrid/platform-calibration.git && \\\n    cd platform-calibration && \\\n    git checkout 899f044658246fb86f24e4efc96489df546ad3d3 && \\\n    cd src/calibration && \\\n    sed -i -e 's/#define NB_RUNS .*/#define NB_RUNS 1/g' calibrate.c && \\\n    make CC=smpicc\n\n# get old calibration data for dahu cluster\nRUN curl -f -s -L -o /source/simgrid.git/docs/source/tuto_network_calibration/grenoble_2018-08-29_1808878.zip \\\n    https://github.com/Ezibenroc/calibration_analysis/raw/4837a5d841380ab3dfdbfbc919eab485c08890e9/dahu/mpi/grenoble_2018-08-29_1808878.zip\n\n# tuto_network_calibration compilation\nRUN cd /source/simgrid.git/docs/source/tuto_network_calibration && \\\n    cmake . && \\\n    make\n\n# prepare files for execution\nRUN cd /source/simgrid.git/docs/source/tuto_network_calibration && \\\n    cp grenoble_2018-08-29_1808878.zip /tmp/ && \\\n    cd /tmp/ && unzip grenoble_2018-08-29_1808878.zip && \\\n    sed -i 1d exp.csv\n\nWORKDIR /source/simgrid.git/docs/source/tuto_network_calibration/\nENTRYPOINT [\"jupyter\", \"lab\", \"--ip=0.0.0.0\", \"--allow-root\"]\n"
}