{
  "startTime": 1674251357725,
  "endTime": 1674251358648,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 174
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 89
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 174
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 89
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 174
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 89
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 198
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 113
      }
    }
  ],
  "repairedDockerfile": "# Rebuild with this image with the following commande:\n#    docker build -f Dockerfile.tuto-mc -t simgrid/tuto-mc .\n# Launch it as follows:\n#    docker run -it simgrid/tuto-mc bash\n\n# Base image\nFROM debian:testing\n\nRUN apt update && apt -y upgrade\n\n# - Install SimGrid's dependencies\n# - Compile and install SimGrid itself.\n# - Get the tutorial files (with an empty makefile advising to run cmake before make, just in case)\n# - Remove everything that was installed, and re-install what's needed by the SimGrid libraries before the Gran Final Cleanup\n# - Keep g++ gcc gfortran as any MC user will use (some of) them\nRUN apt install --no-install-recommends -y g++ gcc git valgrind gfortran libboost-dev libeigen3-dev libboost-stacktrace-dev cmake dpkg-dev libunwind-dev libdw-dev libelf-dev libevent-dev python3-dev && \\\n    mkdir /source/ && cd /source && git clone --depth=1 https://framagit.org/simgrid/simgrid.git simgrid.git && \\\n    cd simgrid.git && \\\n    cmake -DCMAKE_INSTALL_PREFIX=/usr/ -Denable_model-checking=ON -Denable_documentation=OFF -Denable_java=OFF -Denable_smpi=ON -Denable_compile_optimizations=ON . && \\\n    make -j6 install && \\\n    git clone --depth=1 https://framagit.org/simgrid/tutorial-model-checking /source/tuto-mc.git && \\\n    printf \"ndet-receive-s4u:\\n\\t@echo \\\"Please run the following command before make:\\\";echo \\\"    cmake .\\\"; exit 1\" > /source/tuto-mc.git/Makefile && \\\n    mkdir debian/ && touch debian/control && dpkg-shlibdeps --ignore-missing-info lib/*.so -llib/ -O/tmp/deps && \\\n    apt remove -y dpkg-dev libunwind-dev libdw-dev libelf-dev libevent-dev && \\\n    apt install --no-install-recommends -y `sed -e 's/shlibs:Depends=//' -e 's/([^)]*)//g' -e 's/,//g' /tmp/deps` && rm /tmp/deps && \\\n    apt autoremove -y && apt autoclean && apt clean && rm -rf /var/lib/apt/lists/*;\n\n# The build and dependencies are not cleaned in this image since it's it's experimental so far\n#    git reset --hard master && git clean -dfx && \\\n\n\nCMD [\"/bin/bash\"]\n"
}