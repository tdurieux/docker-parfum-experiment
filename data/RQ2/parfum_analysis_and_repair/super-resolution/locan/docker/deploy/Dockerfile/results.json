{
  "startTime": 1674217945524,
  "endTime": 1674217946606,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 104,
        "lineEnd": 104,
        "columnStart": 4,
        "columnEnd": 17
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 92
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 69
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 28
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Dockerfile for deploying jupyter lab, locan, napari and others in a conda environment as non-root user.\n#\n# This dockerfile is in parts adapted from dockerfiles by the Jupyter Development Team\n# https://hub.docker.com/r/jupyter/base-notebook/dockerfile\n# and from Continuum Analytics, Inc.\n# https://github.com/ContinuumIO/docker-images/blob/master/miniconda3/debian/Dockerfile\n#\nFROM debian:buster-slim\n\nARG PYTHON_VERSION=3.8\nARG MINICONDA_VERSION=latest\nARG USER=asterix\nARG UID=1000\nARG GID=100\n\nENV PYTHON_VERSION=$PYTHON_VERSION \\\n    ENVIRONMENT_NAME=locan \\\n    MINICONDA_VERSION=$MINICONDA_VERSION \\\n    LANG=C.UTF-8 \\\n    LC_ALL=C.UTF-8 \\\n    USER=$USER \\\n    UID=$UID \\\n    GID=$GID \\\n    HOME=/home/$USER \\\n    CONDA_DIR=/home/$USER/miniconda \\\n    # path to new conda environment\n    PATH=$CONDA_DIR/bin:$PATH \\\n    PATH=$CONDA_DIR/envs/$ENVIRONMENT_NAME/bin:$PATH \\\n    # Variables required to install libglib2.0-0 non-interactively (for napari)\n    TZ=Europe/Amsterdam \\\n    DEBIAN_FRONTEND=noninteractive\n\nLABEL maintainer=\"LocanDevelopers\" \\\n      project=\"locan\" \\\n      python_version=${PYTHON_VERSION}\n\nRUN apt-get update --fix-missing && \\\n    # set time zone to local time\n    ln -sf /usr/share/zoneinfo/Europe/Amsterdam /etc/localtime && \\\n    # install libraries for miniconda installer\n    apt-get install --no-install-recommends -qqy wget bzip2 ca-certificates libglib2.0-0 libxext6 libsm6 libxrender1 && \\\n    # install GL library (including GLX and DRI)\n    apt-get install --no-install-recommends -qqy libgl1-mesa-dev && \\\n    # install libraries for napari\n    # apt-get install -qqy libxi6 libglib2.0-0 fontconfig libfontconfig1 libxrender1 libdbus-1-3 && \\\n    apt-get install --no-install-recommends -qqy libxi6 fontconfig libfontconfig1 libdbus-1-3 && \\\n    # install git for setuptools_scm to deal with locan source distribution versioning\n    apt-get install --no-install-recommends -qqy git && \\\n    # remove package manager cache\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    # Create a non-root user\n    adduser --disabled-password \\\n         --gecos \"Non-root user\" \\\n         --uid $UID \\\n         --gid $GID \\\n         --home $HOME \\\n         $USER\n\n#Activate bash shell for correct use of conda commands\nSHELL [ \"/bin/bash\", \"--login\", \"-c\" ]\n\nUSER $USER\n\n# install miniconda3 according to https://github.com/ContinuumIO/docker-images/blob/master/miniconda3/debian/Dockerfile\nRUN wget --quiet -O ~/miniconda.sh  \\\n        https://repo.anaconda.com/miniconda/Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh && \\\n    chmod +x ~/miniconda.sh && \\\n    ~/miniconda.sh -b -p $CONDA_DIR && \\\n    rm ~/miniconda.sh && \\\n    # make conda activate command available from /bin/bash shells\n    echo \". $CONDA_DIR/etc/profile.d/conda.sh\" >> ~/.bashrc && \\\n    # make conda activate command available from /bin/bash --login shells\n    echo \". $CONDA_DIR/etc/profile.d/conda.sh\" >> ~/.profile && \\\n    # conda configuration\n    echo \"conda ${MINICONDA_VERSION}\" >> $CONDA_DIR/conda-meta/pinned && \\\n    $CONDA_DIR/bin/conda config --system --prepend channels conda-forge && \\\n    $CONDA_DIR/bin/conda config --system --set auto_update_conda false && \\\n    $CONDA_DIR/bin/conda config --system --set show_channel_urls true && \\\n    $CONDA_DIR/bin/conda config --system --set channel_priority strict && \\\n    # update\n    $CONDA_DIR/bin/conda update -n base --all && \\\n    # clean up\n    find $CONDA_DIR -follow -type f -name '*.a' -delete && \\\n    find $CONDA_DIR -follow -type f -name '*.js.map' -delete && \\\n    $CONDA_DIR/bin/conda clean -afy && \\\n    rm -rf $HOME/.cache/yarn\n\n# Copy the current directory contents into the container\nCOPY --chown=$UID:$GID jupyter $HOME/locan\n\nWORKDIR $HOME/locan\n\n# create new environment\nRUN conda init bash && \\\n    # conda create -n $ENVIRONMENT_NAME python=$PYTHON_VERSION -c conda-forge && \\\n    # conda env update -n $ENVIRONMENT_NAME --file environment.yml && \\\n    # conda activate $ENVIRONMENT_NAME && \\\n    # alternatively: use mamba to speed up installation\n    conda install mamba -c conda-forge && \\\n    mamba create -n $ENVIRONMENT_NAME python=$PYTHON_VERSION -c conda-forge && \\\n    mamba env update -n $ENVIRONMENT_NAME --file environment.yml && \\\n    conda activate $ENVIRONMENT_NAME && \\\n    # install locan\n    pip install --no-cache-dir . && \\\n       # clean up\n\techo \"conda activate $ENVIRONMENT_NAME\" >> ~/.bashrc && \\\n\trm -rf $HOME/locan/* && \\\n\tconda clean -afy && \\\n    rm -rf $HOME/.cache/yarn\n\n# install jupyter\nRUN conda activate $ENVIRONMENT_NAME && \\\n    conda install -c conda-forge \\\n        nodejs \\\n        jupyterlab && \\\n    # install extensions\n    conda activate $ENVIRONMENT_NAME && \\\n    jupyter notebook --generate-config && \\\n    # activate ipywidgets extension in the environment that runs the notebook server\n    jupyter nbextension enable --py widgetsnbextension --sys-prefix && \\\n    # activate ipywidgets extension for JupyterLab\n    jupyter labextension install \\\n        @jupyter-widgets/jupyterlab-manager \\\n        jupyter-matplotlib \\\n        --no-build && \\\n    # clean up\n    jupyter lab build -y && \\\n    jupyter lab clean -y && \\\n    npm cache clean --force && \\\n    conda clean -afy && \\\n    rm -rf $HOME/.cache/yarn\n\n# Volume for data\nVOLUME [\"$HOME/shared\"]\n\nWORKDIR $HOME\n\n# Provide a test and environment file for reference:\nRUN conda activate $ENVIRONMENT_NAME && \\\n    mkdir $HOME/reports && \\\n    today=$(date +\"%Y-%m-%d\") && \\\n    base=${ENVIRONMENT_NAME}_$today && \\\n    conda env export > \"$HOME/reports/environment_$base.yml\" && \\\n    date > \"$HOME/reports/test_results_$base.txt\" && \\\n    locan test >> \"$HOME/reports/test_results_$base.txt\"\n\nEXPOSE 8888\n\n# Copy locan documentation\nCOPY --chown=$UID:$GID ./docs/_build $HOME/locan/docs\n\nCMD conda activate $ENVIRONMENT_NAME && \\\n    jupyter lab --no-browser --ip 0.0.0.0\n"
}