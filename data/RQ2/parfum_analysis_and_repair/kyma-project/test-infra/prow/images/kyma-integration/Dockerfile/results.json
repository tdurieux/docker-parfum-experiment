{
  "startTime": 1674251569757,
  "endTime": 1674251571049,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 91,
        "lineEnd": 91,
        "columnStart": 4,
        "columnEnd": 71
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 128,
        "lineEnd": 128,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 128,
        "lineEnd": 128,
        "columnStart": 65,
        "columnEnd": 78
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 99,
        "lineEnd": 99,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 99,
        "lineEnd": 99,
        "columnStart": 4,
        "columnEnd": 53
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 99,
        "lineEnd": 99,
        "columnStart": 4,
        "columnEnd": 53
      }
    }
  ],
  "repairedDockerfile": "# Basic setup for Prow jobs\n\nFROM debian:11\n\n# Commit details\n\nARG commit\nENV IMAGE_COMMIT=$commit\nLABEL io.kyma-project.test-infra.commit=$commit\n\n#################################################################\n###################### Basic Bootstrap ##########################\n#################################################################\nARG K8S_VERSION=1.18\nARG commit\nENV IMAGE_COMMIT=$commit\nLABEL io.kyma-project.test-infra.commit=$commit\nWORKDIR /workspace\nRUN mkdir -p /workspace\nENV WORKSPACE=/workspace \\\n    TERM=xterm\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n    build-essential \\\n    ca-certificates \\\n    curl \\\n    git \\\n    jq \\\n    dnsutils \\\n    openssh-client \\\n    python2 \\\n    python-is-python2 \\\n    wget \\\n    apt-transport-https \\\n    gnupg2 \\\n    shellcheck \\\n    software-properties-common \\\n    lsb-release \\\n    gettext \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Docker-in-docker\nSHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\n# hadolint ignore=SC1091\nRUN . /etc/os-release && \\\n    curl -fsSL \"https://download.docker.com/linux/$ID/gpg\" | apt-key add - && \\\n    add-apt-repository \\\n    \"deb [arch=amd64] https://download.docker.com/linux/$ID $VERSION_CODENAME stable\"\n\nENV DOCKER_VERSION=5:20.10.14*\n\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n    docker-ce=${DOCKER_VERSION} docker-ce-cli=${DOCKER_VERSION} containerd.io && \\\n    sed -i 's/cgroupfs_mount$/#cgroupfs_mount\\n/' /etc/init.d/docker && \\\n    rm -rf /var/lib/apt/lists/*\n\n# Move Docker's storage location\n# hadolint ignore=SC2016\nRUN echo 'DOCKER_OPTS=\"${DOCKER_OPTS} --data-root=/docker-graph\"' | \\\n    tee --append /etc/default/docker && \\\n    mkdir /docker-graph\n\n#Use iptables instead of nftables\n\nRUN update-alternatives --set iptables /usr/sbin/iptables-legacy && \\\n    update-alternatives --set ip6tables /usr/sbin/ip6tables-legacy\n\n#################################################################\n###################### GOLANG ###################################\n#################################################################\n\n# Versions\n\nENV GO_VERSION 1.18.3\nENV DEP_RELEASE_TAG v0.5.4\n\n# Install Go\nENV GOPATH /workspace/go\nENV PATH $GOPATH/bin:/usr/local/go/bin:$PATH\n\nRUN curl -fsSL -o go.tar.gz \"https://dl.google.com/go/go${GO_VERSION}.linux-amd64.tar.gz\" && \\\n    tar xzf go.tar.gz && \\\n    rm go.tar.gz && \\\n    mv go /usr/local && \\\n    mkdir -p \"${GOPATH}/bin\" && \\\n    mkdir -p \"${GOPATH}/src\"\n\n# Install Dep\n\nRUN curl -f https://raw.githubusercontent.com/golang/dep/master/install.sh | sh\n\n\n#################################################################\n###################### Node.js ##################################\n#################################################################\n\nRUN curl -fLSs https://deb.nodesource.com/setup_14.x | bash -\nRUN apt-get -y --no-install-recommends install nodejs && rm -rf /var/lib/apt/lists/*;\n\n#################################################################\n###################### Cluster Integration ######################\n#################################################################\n\n#Install helm\n\nENV HELM_VERSION=\"v3.7.1\"\n\nRUN curl -fLSs https://get.helm.sh/helm-${HELM_VERSION}-linux-amd64.tar.gz | tar -xzO linux-amd64/helm > /usr/local/bin/helm && \\\n\t  chmod +x /usr/local/bin/helm && \\\n      rm -rf helm-${HELM_VERSION}-linux-amd64.tar.gz linux-amd64\n\n# Install Azure CLI\n# If you receive error related to recv-keys please make sure you have latest signing key\n# https://docs.microsoft.com/en-us/cli/azure/install-azure-cli-apt?view=azure-cli-latest#signingKey\n# Install packages required by az\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n    apt-transport-https \\\n    lsb-release \\\n    software-properties-common \\\n    dirmngr \\\n    gnupg2 && \\\n    rm -rf /var/lib/apt/lists/*\n\nENV AZURE_CLI_VERSION=\"2.34.1-1*\"\n\nRUN curl -f -sL https://packages.microsoft.com/keys/microsoft.asc | gpg --batch --dearmor | \\\n    tee /etc/apt/trusted.gpg.d/microsoft.asc.gpg > /dev/null && \\\n    echo \"deb [arch=amd64] https://packages.microsoft.com/repos/azure-cli/ $(lsb_release -cs) main\" | \\\n    tee /etc/apt/sources.list.d/azure-cli.list && \\\n    apt-get update && \\\n    apt-get install -y --no-install-recommends \"azure-cli=${AZURE_CLI_VERSION}\" && \\\n    rm -rf /var/lib/apt/lists/*\n\n#################################################################\n########################## Prow Tools ###########################\n#################################################################\n\n# hadolint ignore=DL3022\nCOPY --from=eu.gcr.io/kyma-project/test-infra/prow-tools:v20220105-4e0c3c9e /prow-tools /prow-tools\n# for better access to prow-tools\nENV PATH=$PATH:/prow-tools\n\n\n#################################################################\n######################## Install gcloud #########################\n#################################################################\n\nENV CLOUD_SDK_VERSION=324.0.0 \\\n    PATH=/google-cloud-sdk/bin:/workspace:${PATH} \\\n    CLOUDSDK_CORE_DISABLE_PROMPTS=1 \\\n    CLUSTER_VERSION=$K8S_VERSION\n\nRUN curl -fLSs -o gc-sdk.tar.gz https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-${CLOUD_SDK_VERSION}-linux-x86_64.tar.gz && \\\n    tar xzf gc-sdk.tar.gz -C / && \\\n    rm gc-sdk.tar.gz && \\\n    /google-cloud-sdk/install.sh \\\n    --disable-installation-options \\\n    --bash-completion=false \\\n    --path-update=false \\\n    --usage-reporting=false && \\\n    gcloud components install alpha beta kubectl docker-credential-gcr && \\\n    gcloud info | tee /workspace/gcloud-info.txt && \\\n    mv /google-cloud-sdk/bin/kubectl.${CLUSTER_VERSION} /google-cloud-sdk/bin/kubectl\n\n#################################################################\n################ Install Benchmark utilities ####################\n#################################################################\n\nRUN go install golang.org/x/perf/cmd/...\n\n#################################################################\n####################### Install smctl ###########################\n#################################################################\n\nENV SMCTL_VERSION=v1.11.12\nRUN curl -fLSs -o smctl.tar.gz https://github.com/Peripli/service-manager-cli/releases/download/${SMCTL_VERSION}/smctl-${SMCTL_VERSION}-linux-amd64.tar.gz && \\\n    tar xzf smctl.tar.gz && \\\n    rm smctl.tar.gz && \\\n    mv smctl /usr/local/go/bin\n\n#################################################################\n################ Install Cosign #################################\n#################################################################\nENV COSIGN_VERSION=1.0.0\nRUN curl -fLSs -o /usr/local/bin/cosign https://github.com/sigstore/cosign/releases/download/v${COSIGN_VERSION}/cosign-linux-amd64 &&\\\n    chmod +x /usr/local/bin/cosign\n\n#################################################################\n################ Install kcp-cli ################################\n#################################################################\n\n# Note: kcp-cli doesn't provide releases\nENV KCPCLI_VERSION=master-1208b417\nRUN curl -fLSs -o /usr/local/bin/kcp https://storage.googleapis.com/kyma-development-artifacts/kcp/${KCPCLI_VERSION}/kcp-linux &&\\\n    chmod +x /usr/local/bin/kcp\n\n#################################################################\n################ Install yq (yaml tool) #########################\n#################################################################\nENV YQ_VERSION=v4.15.1\nRUN curl -fLSs -o /usr/local/bin/yq https://github.com/mikefarah/yq/releases/download/${YQ_VERSION}/yq_linux_amd64 &&\\\n    chmod +x /usr/local/bin/yq\n\n#################################################################\n################ Install gh (github-cli) ########################\n#################################################################\nENV GH_VERSION=2.2.0\nRUN curl -fsSL https://github.com/cli/cli/releases/download/v${GH_VERSION}/gh_${GH_VERSION}_linux_amd64.tar.gz -o - | tar -xz &&\\\n  mv gh_${GH_VERSION}_linux_amd64/bin/gh /usr/local/bin/gh &&\\\n  chmod +x /usr/local/bin/gh &&\\\n  rm -r gh_${GH_VERSION}_linux_amd64\n"
}