{
  "startTime": 1674248329970,
  "endTime": 1674248330806,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 81,
        "lineEnd": 81,
        "columnStart": 4,
        "columnEnd": 81
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Basic setup for Prow jobs\n\nFROM debian:11\n\n# Add commit details\n\nARG commit\nENV IMAGE_COMMIT=$commit\nLABEL io.kyma-project.test-infra.commit=$commit\n\n\nWORKDIR /workspace\nRUN mkdir -p /workspace\nENV WORKSPACE=/workspace \\\n    TERM=xterm\n\nSHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n    build-essential \\\n    ca-certificates \\\n    curl \\\n    git \\\n    jq \\\n    dnsutils \\\n    openssh-client \\\n    python2 \\\n    python-is-python2 \\\n    wget \\\n    apt-transport-https \\\n    gnupg2 \\\n    software-properties-common \\\n    lsb-release \\\n    gettext \\\n    libpcsclite1 \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Install gcloud\nENV CLOUD_SDK_VERSION=358.0.0\nENV PATH=/google-cloud-sdk/bin:/workspace:${PATH} \\\n    CLOUDSDK_CORE_DISABLE_PROMPTS=1\n\nRUN curl -fLSs -o gc-sdk.tar.gz https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-${CLOUD_SDK_VERSION}-linux-x86_64.tar.gz && \\\n    tar xzf gc-sdk.tar.gz -C / && \\\n    rm gc-sdk.tar.gz && \\\n    /google-cloud-sdk/install.sh \\\n    --disable-installation-options \\\n    --bash-completion=false \\\n    --path-update=false \\\n    --usage-reporting=false && \\\n    gcloud components install alpha beta kubectl docker-credential-gcr && \\\n    gcloud info | tee /workspace/gcloud-info.txt\n\n# Cluster Version\nENV CLUSTER_VERSION=1.21\n\n# Kubectl 1.21\nRUN mv /google-cloud-sdk/bin/kubectl.${CLUSTER_VERSION} /google-cloud-sdk/bin/kubectl\n\n# Docker-in-docker\n# hadolint ignore=SC1091\nRUN . /etc/os-release && \\\n    curl -fsSL \"https://download.docker.com/linux/$ID/gpg\" \\\n    | apt-key add - && \\\n    add-apt-repository \\\n    \"deb [arch=amd64] https://download.docker.com/linux/$ID $VERSION_CODENAME stable\"\n\nENV DOCKER_VERSION=5:20.10.14*\n\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends docker-ce=${DOCKER_VERSION} && \\\n    sed -i 's/cgroupfs_mount$/#cgroupfs_mount\\n/' /etc/init.d/docker && \\\n    rm -rf /var/lib/apt/lists/*\n\n# Move Docker's storage location\n# hadolint ignore=SC2016\nRUN echo 'DOCKER_OPTS=\"${DOCKER_OPTS} --data-root=/docker-graph\"' | \\\n    tee --append /etc/default/docker\nRUN mkdir /docker-graph\n\n#spectral openapi validator\nRUN curl -f -L https://raw.github.com/stoplightio/spectral/v6.0.0/scripts/install.sh | sh\n\n# Prow Tools\n# hadolint ignore=DL3022\nCOPY --from=eu.gcr.io/kyma-project/test-infra/prow-tools:v20210401-294e46e5 /prow-tools /prow-tools\n# for better access to prow-tools\nENV PATH=$PATH:/prow-tools\n\n#################################################################\n################ Install Cosign ####################\n#################################################################\nENV COSIGN_VERSION=1.0.0\nRUN curl -fLSs -o /usr/local/bin/cosign https://github.com/sigstore/cosign/releases/download/v${COSIGN_VERSION}/cosign-linux-amd64 &&\\\n    chmod +x /usr/local/bin/cosign\n\n# The following lines needed for using dind since debian is using nftables by default\nRUN update-alternatives --set iptables /usr/sbin/iptables-legacy && \\\n    update-alternatives --set ip6tables /usr/sbin/ip6tables-legacy\n\nRUN curl -fLSs -o shellcheck.tar.xz https://github.com/koalaman/shellcheck/releases/download/v0.5.0/shellcheck-v0.5.0.linux.x86_64.tar.xz \\\n    && tar xvf shellcheck.tar.xz \\\n    && mv shellcheck-v0.5.0/shellcheck /usr/bin/ \\\n    && rm -rf shellcheck-v0.5.0 shellcheck.tar.xz\n\nRUN curl -fLSs -o /usr/local/bin/hadolint https://github.com/hadolint/hadolint/releases/download/v2.7.0/hadolint-Linux-x86_64 && \\\n    chmod +x /usr/local/bin/hadolint\n\n#Install yq\nENV YQ_VERSION=v4.2.0 \\\n    YQ_BINARY=yq_linux_amd64\nRUN curl -fLS -o /usr/bin/yq https://github.com/mikefarah/yq/releases/download/${YQ_VERSION}/${YQ_BINARY} && chmod +x /usr/bin/yq\n"
}