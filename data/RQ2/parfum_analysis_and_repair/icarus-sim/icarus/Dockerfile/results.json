{
  "startTime": 1674218623299,
  "endTime": 1674218624045,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 24,
        "lineEnd": 32,
        "columnStart": 5,
        "columnEnd": 14
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Docker container for running Icarus\n#\n# Some useful commands:\n#\n# Build:        docker build [--build-arg PYTHON_VERSION=<python-version>] -t icarus .\n# Open shell:   docker run --rm -it icarus\n# Run command:  docker run icarus <COMMAND>\n#\n# To run a simulation with Icarus it is advisable to mount in the container\n# the directories where the config file is located and where you intend\n# to store results and access them from the container.\n#\n# For example, to use config.py and store the result file in the root of the project\n# you could run the container with the following command:\n#\n# docker run -v `pwd`:/data icarus icarus run -r /data/results.pickle /data/config.py\n#\nARG PYTHON_VERSION=3.8\nFROM python:${PYTHON_VERSION}\n\n# Uncomment the following line to use pypy3. Building numpy and scipy on pypy3 is very slow.\n# FROM pypy:3\n\nRUN apt-get update \\\n  && apt-get install --no-install-recommends -y -q \\\n    gfortran \\\n    graphviz \\\n    libatlas-base-dev \\\n    libatlas-dev \\\n    libgdal-dev \\\n    liblapack-dev \\\n    libsuitesparse-dev \\\n    mono-devel \\\n  && rm -rf /var/lib/apt/lists/*\n\nCOPY . /icarus\nWORKDIR /icarus\n\nRUN make install\n\nCMD [\"bash\"]\n"
}