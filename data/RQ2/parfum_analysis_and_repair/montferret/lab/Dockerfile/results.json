{
  "startTime": 1674253498418,
  "endTime": 1674253499233,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 22,
        "columnEnd": 50
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 22,
        "columnEnd": 50
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM golang:alpine AS builder\n\n\n# Install git.\n# Git is required for fetching the dependencies.\n# Make is requiered for build.\nRUN apk update && apk add --no-cache git make ca-certificates\n\nWORKDIR /go/src/github.com/MontFerret/lab\n\nCOPY . .\n\n# Build the binary.\nRUN CGO_ENABLED=0 GOOS=linux make compile\n\n# Build the final container. And install\nFROM montferret/chromium:99.0.4844.0\n\nRUN apt-get update && apt-get install --no-install-recommends -y dumb-init && rm -rf /var/lib/apt/lists/*;\n\n# Add in certs\nCOPY --from=builder /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/ca-certificates.c\n\n# Add the binary\nCOPY --from=builder /go/src/github.com/MontFerret/lab/bin/lab .\n\nVOLUME test\n\nEXPOSE 8080\n\nENTRYPOINT [\"dumb-init\", \"--\"]\nCMD [\"/bin/sh\", \"-c\", \"./entrypoint.sh & ./lab --wait http://127.0.0.1:9222/json/version --files=file:///test\"]"
}