{
  "startTime": 1674252265797,
  "endTime": 1674252266831,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 60
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 113
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM tozd/runit:ubuntu-xenial\n\nMAINTAINER Jernej Kos <jernej@kos.mx>\n\n# Update packages\nRUN apt-get update -q -q && \\\n    apt-get install --no-install-recommends -y git python python-dev python-pip python-setuptools build-essential && rm -rf /var/lib/apt/lists/*;\n\n# Install code dependencies\nADD ./packages.txt /code/packages.txt\nRUN cat /code/packages.txt | xargs apt-get --no-install-recommends -y install && \\\n    chmod 4755 /usr/bin/fping && \\\n    chmod 4755 /usr/bin/fping6\n\n# Install Python package dependencies (do not use pip install -r here!)\nADD ./requirements.txt /code/requirements.txt\nADD ./requirements-readthedocs.txt /code/requirements-readthedocs.txt\nRUN pip install --no-cache-dir --upgrade --force-reinstall pip six requests && \\\n    sed -i 's/^-r.*$//g' /code/requirements.txt && \\\n    cat /code/requirements-readthedocs.txt /code/requirements.txt | xargs -n 1 sh -c 'CPLUS_INCLUDE_PATH=/usr/include/gdal C_INCLUDE_PATH=/usr/include/gdal pip install $0 || exit 255'\n\n# Remove unneeded build-time dependencies\nRUN apt-get purge python-dev build-essential -y && \\\n    apt-get autoremove -y && \\\n    rm -f /code/packages.txt /code/requirements.txt\n\n# Add the current version of the code (needed for production deployments)\nWORKDIR /code\nADD . /code\n\n"
}