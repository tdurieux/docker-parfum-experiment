{
  "startTime": 1674217446155,
  "endTime": 1674217446854,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 22,
        "columnEnd": 108
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 22,
        "columnEnd": 108
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Use the standard Nginx image from Docker Hub\nFROM nginx\n\nENV HOME=/opt/repo\n\n# install python, uwsgi, and supervisord\nRUN apt-get update && apt-get install --no-install-recommends -y supervisor uwsgi python3 python3-pip procps vim curl wget net-tools && rm -rf /var/lib/apt/lists/*;\nRUN pip3 install --no-cache-dir --upgrade pip\nRUN pip3 install --no-cache-dir uwsgi==2.0.17 flask==1.0.2 pymongo prometheus_client psutil requests\n\n# Source code file\nCOPY ./src ${HOME}/src\nADD ./src/data ${HOME}/src/data\n\n# Copy the configuration file from the current directory and paste\n# it inside the container to use it as Nginx's default config.\nCOPY ./deployment/nginx.conf /etc/nginx/nginx.conf\n\n# setup NGINX config\nRUN mkdir -p /spool/nginx /run/pid && \\\n    chmod -R 777 /var/log/nginx /var/cache/nginx /etc/nginx /var/run /run /run/pid /spool/nginx && \\\n    chgrp -R 0 /var/log/nginx /var/cache/nginx /etc/nginx /var/run /run /run/pid /spool/nginx && \\\n    chmod -R g+rwX /var/log/nginx /var/cache/nginx /etc/nginx /var/run /run /run/pid /spool/nginx && \\\n    rm /etc/nginx/conf.d/default.conf\n# Copy the base uWSGI ini file to enable default dynamic uwsgi process\nCOPY ./deployment/uwsgi.ini /etc/uwsgi/apps-available/uwsgi.ini\nRUN ln -s /etc/uwsgi/apps-available/uwsgi.ini /etc/uwsgi/apps-enabled/uwsgi.ini\n\nCOPY ./deployment/supervisord.conf /etc/supervisor/conf.d/supervisord.conf\nRUN touch /var/log/supervisor/supervisord.log\n\nEXPOSE 5000\n\n# setup entrypoint\nCOPY ./deployment/docker-entrypoint.sh /usr/local/bin/docker-entrypoint.sh\n\n# https://github.com/moby/moby/issues/31243#issuecomment-406879017\nRUN ln -s /usr/local/bin/docker-entrypoint.sh / && \\\n    chmod 777 /usr/local/bin/docker-entrypoint.sh && \\\n    chgrp -R 0 /usr/local/bin/docker-entrypoint.sh && \\\n    chown -R nginx:root /usr/local/bin/docker-entrypoint.sh\n\n# https://docs.openshift.com/container-platform/3.3/creating_images/guidelines.html\n#RUN chgrp -R 0 /var/log /var/cache /run/pid /spool/nginx /var/run /run /tmp /etc/uwsgi /etc/nginx && \\\n#    chmod -R g+rwX /var/log /var/cache /run/pid /spool/nginx /var/run /run /tmp /etc/uwsgi /etc/nginx && \\\n#    chown -R nginx:root ${HOME} && \\\n#    chmod -R 777 ${HOME} /etc/passwd\n# enter\nWORKDIR ${HOME}\nENTRYPOINT [\"docker-entrypoint.sh\"]\nCMD [\"supervisord\"]\n"
}