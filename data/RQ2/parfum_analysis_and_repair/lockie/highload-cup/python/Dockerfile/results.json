{
  "startTime": 1674249512048,
  "endTime": 1674249512919,
  "originalSmells": [
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 9,
        "columnEnd": 63
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 7,
        "columnEnd": 52
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# -*- docker-image-name: \"highload\" -*-\n\nFROM python:alpine3.6\n\nENV PYTHONUNBUFFERED 1\n\nENV LANG en_US.utf8\nENV PG_MAJOR 9.6\nENV PG_VERSION 9.6.4\nENV PG_SHA256 2b3ab16d82e21cead54c08b95ce3ac480696944a68603b6c11b3205b7376ce13\nENV PATH /usr/lib/postgresql/$PG_MAJOR/bin:$PATH\nENV PGDATA /var/lib/postgresql/data\nENV POSTGRES_USER root\nENV POSTGRES_DB default\nENV MEMCACHED_VERSION 1.5.0\nENV MEMCACHED_SHA1 e12af93e63c05ab7e89398e4cfd0bfc7b7bff1c5\n\nRUN apk add --no-cache dumb-init && \\\n    # install memcached, see docker-libary memcached/alpine/Dockerfile\n    adduser -D memcache && \\\n    set -x \\\n    \\\n    && apk add --no-cache --virtual .memcached-build-deps \\\n        ca-certificates \\\n        coreutils \\\n        cyrus-sasl-dev \\\n        dpkg-dev dpkg \\\n        gcc \\\n        libc-dev \\\n        libevent-dev \\\n        libressl \\\n        linux-headers \\\n        make \\\n        perl \\\n        perl-utils \\\n        tar \\\n    \\\n    && wget -O memcached.tar.gz \"https://memcached.org/files/memcached-$MEMCACHED_VERSION.tar.gz\" \\\n    && echo \"$MEMCACHED_SHA1  memcached.tar.gz\" | sha1sum -c - \\\n    && mkdir -p /usr/src/memcached \\\n    && tar -xzf memcached.tar.gz -C /usr/src/memcached --strip-components=1 \\\n    && rm memcached.tar.gz \\\n    \\\n    && cd /usr/src/memcached \\\n    \\\n    && ./configure \\\n        --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n        --enable-sasl \\\n    && make -j \"$(nproc)\" \\\n    \\\n    && make install \\\n    \\\n    && cd / && rm -rf /usr/src/memcached \\\n    \\\n    && runDeps=\"$( \\\n        scanelf --needed --nobanner --recursive /usr/local \\\n            | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }' \\\n            | sort -u \\\n            | xargs -r apk info --installed \\\n            | sort -u \\\n    )\" \\\n    && apk add --no-cache --virtual .memcached-rundeps $runDeps \\\n    && \\\n    # install postgres, see docker-library postgres/9.6/alpine/Dockerfile\n    set -ex; \\\n    postgresHome=\"$(getent passwd postgres)\"; \\\n    postgresHome=\"$(echo \"$postgresHome\" | cut -d: -f6)\"; \\\n    [ \"$postgresHome\" = '/var/lib/postgresql' ]; \\\n    mkdir -p \"$postgresHome\"; \\\n    chown -R postgres:postgres \"$postgresHome\" ; \\\n    mkdir /docker-entrypoint-initdb.d \\\n      && apk add --no-cache --virtual .fetch-deps \\\n          ca-certificates \\\n          openssl \\\n          tar \\\n      \\\n      && wget -O postgresql.tar.bz2 \"https://ftp.postgresql.org/pub/source/v$PG_VERSION/postgresql-$PG_VERSION.tar.bz2\" \\\n      && echo \"$PG_SHA256  *postgresql.tar.bz2\" | sha256sum -c - \\\n      && mkdir -p /usr/src/postgresql \\\n      && tar \\\n          --extract \\\n          --file postgresql.tar.bz2 \\\n          --directory /usr/src/postgresql \\\n          --strip-components 1 \\\n      && rm postgresql.tar.bz2 \\\n\n      && apk add --no-cache --virtual .postgres-build-deps \\\n          bison \\\n          coreutils \\\n          dpkg-dev dpkg \\\n          flex \\\n          gcc \\\n          libc-dev \\\n          libedit-dev \\\n          libxml2-dev \\\n          libxslt-dev \\\n          make \\\n          openssl-dev \\\n          perl \\\n          perl-utils \\\n          perl-ipc-run \\\n          util-linux-dev \\\n          zlib-dev \\\n\n      && cd /usr/src/postgresql \\\n      && awk '$1 == \"#define\" && $2 == \"DEFAULT_PGSOCKET_DIR\" && $3 == \"\\\"/tmp\\\"\" { $3 = \"\\\"/var/run/postgresql\\\"\"; print; next } { print }' src/include/pg_config_manual.h > src/include/pg_config_manual.h.new \\\n      && grep '/var/run/postgresql' src/include/pg_config_manual.h.new \\\n      && mv src/include/pg_config_manual.h.new src/include/pg_config_manual.h \\\n      && gnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n      && wget -O config/config.guess 'https://git.savannah.gnu.org/cgit/config.git/plain/config.guess?id=7d3d27baf8107b630586c962c057e22149653deb' \\\n      && wget -O config/config.sub 'https://git.savannah.gnu.org/cgit/config.git/plain/config.sub?id=7d3d27baf8107b630586c962c057e22149653deb' \\\n      && ./configure \\\n          --build=\"$gnuArch\" \\\n          --enable-integer-datetimes \\\n          --enable-thread-safety \\\n          --enable-tap-tests \\\n          --disable-rpath \\\n          --with-uuid=e2fs \\\n          --with-gnu-ld \\\n          --with-pgport=5432 \\\n          --with-system-tzdata=/usr/share/zoneinfo \\\n          --prefix=/usr/local \\\n          --with-includes=/usr/local/include \\\n          --with-libraries=/usr/local/lib \\\n          \\\n          --with-openssl \\\n          --with-libxml \\\n          --with-libxslt \\\n      && make -j \"$(nproc)\" world \\\n      && make install-world \\\n      && make -C contrib install \\\n\n      && runDeps=\"$( \\\n          scanelf --needed --nobanner --recursive /usr/local \\\n              | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }' \\\n              | sort -u \\\n              | xargs -r apk info --installed \\\n              | sort -u \\\n      )\" \\\n      && apk add --no-cache --virtual .postgresql-rundeps \\\n          $runDeps \\\n          bash \\\n          su-exec \\\n          tzdata \\\n      && apk del .fetch-deps \\\n      && cd / \\\n      && rm -rf \\\n          /usr/src/postgresql \\\n          /usr/local/share/man \\\n          /usr/local/share/doc \\\n          || true \\\n    && find /usr/local -name '*.a' -delete || true && \\\n    sed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/local/share/postgresql/postgresql.conf.sample && \\\n    mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 2777 /var/run/postgresql && \\\n    mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 777 \"$PGDATA\"\n\n\nEXPOSE 80\n\nENTRYPOINT [\"/usr/bin/dumb-init\", \"--\"]\nCMD ./start.sh\n\nCOPY requirements.txt /usr/src/app/\n\nRUN pip install --no-cache-dir -r /usr/src/app/requirements.txt && \\\n    python -O -m compileall -q /usr/src/app /usr/local/lib/python3.6 && \\\n    apk del .postgres-build-deps .memcached-build-deps\n\n\nCOPY . /usr/src/app\nWORKDIR /usr/src/app\n"
}