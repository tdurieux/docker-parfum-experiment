{
  "startTime": 1674249435368,
  "endTime": 1674249436239,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 22
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Build Go programs (only corrupter at the moment)\nFROM golang:1-alpine AS go-build\nRUN apk add --no-cache git\nRUN go get github.com/r00tman/corrupter\n\n\n# Build Python package and dependencies\nFROM python:3-alpine AS python-build\nRUN apk add --no-cache \\\n        git \\\n        libffi-dev \\\n        musl-dev \\\n        gcc \\\n        g++ \\\n        leveldb-dev \\\n        make \\\n        zlib-dev \\\n        tiff-dev \\\n        freetype-dev \\\n        libpng-dev \\\n        libjpeg-turbo-dev \\\n        lcms2-dev \\\n        libwebp-dev \\\n        openssl-dev \\\n        cargo\nRUN mkdir -p /opt/venv\nWORKDIR /opt/venv\nRUN python3 -m venv /opt/venv\nENV PATH=\"/opt/venv/bin:$PATH\"\n\nRUN mkdir -p /src\nWORKDIR /src\n\n# Install bot package and dependencies\nCOPY . .\nRUN pip install --no-cache-dir wheel\nRUN pip install --no-cache-dir .[fast]\nRUN pip install --no-cache-dir uvloop\n\n\n# Package everything\nFROM python:3-alpine AS final\n# Install optional native tools (for full functionality)\nRUN apk add --no-cache neofetch\n# Install native dependencies\nRUN apk add --no-cache \\\n        libffi \\\n        leveldb \\\n        zlib \\\n        tiff \\\n        freetype \\\n        libpng \\\n        libjpeg-turbo \\\n        lcms2 \\\n        libwebp\n\n# Create bot user\nRUN adduser -D pyrobud\n\n# Create data directory for the bot user\nRUN mkdir -p /data\nRUN chown pyrobud:pyrobud /data\n\n# Ensure we a volume is mounted even if the user doesn't explicitly specify it,\n# to prevent unintentional data loss\nVOLUME [ \"/data\" ]\n\n# Copy Go programs\nCOPY --from=go-build /go/bin/corrupter /usr/local/bin\n\n# Copy Python venv\nENV PATH=\"/opt/venv/bin:$PATH\"\nCOPY --from=python-build /opt/venv /opt/venv\n\n# Set runtime settings\nUSER pyrobud\nWORKDIR /data\nCMD [\"pyrobud\"]\n"
}