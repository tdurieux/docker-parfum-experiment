{
  "startTime": 1674216459479,
  "endTime": 1674216460503,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 23,
        "columnStart": 5,
        "columnEnd": 28
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Using nodejs since it's debian by default and we can script easily.\nFROM node:14-buster\n\n# https://trinitycore.atlassian.net/wiki/spaces/tc/pages/10977309/Linux+Core+Installation\n# Plus jq for scripting\n\nRUN apt-get update \\\n  && apt-get install --no-install-recommends -y \\\n  git \\\n  clang \\\n  cmake \\\n  make \\\n  gcc \\\n  g++ \\\n  libmariadbclient-dev \\\n  libssl-dev \\\n  libbz2-dev \\\n  libreadline-dev \\\n  libncurses-dev \\\n  libboost-all-dev \\\n  jq \\\n  mariadb-server \\\n  p7zip-full \\\n  default-libmysqlclient-dev \\\n  && update-alternatives --install /usr/bin/cc cc /usr/bin/clang 100 \\\n  && update-alternatives --install /usr/bin/c++ c++ /usr/bin/clang 100 \\\n  && rm -rf /var/lib/apt/lists/*\n\n# Used to help worldserver and authserver wait for the database to be ready\nRUN npm install -g wait-port && npm cache clean --force;\n\n# Reasonable defaults\nENV PATH=\"/hostfs/bin:$PATH\"\nWORKDIR /hostfs\nENTRYPOINT [ \"/hostfs/bin/_bash-entrypoint\" ]"
}