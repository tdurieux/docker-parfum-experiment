{
  "startTime": 1674247975781,
  "endTime": 1674247976398,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 42,
        "columnEnd": 102
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 31
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:16.13.0-alpine\n\n# Yarn will not install any package listed in devDependencies if the NODE_ENV\n# environment variable is set to production. Use this flag to instruct Yarn to\n# ignore NODE_ENV and take its production-or-not status from this flag instead.\nARG NODE_ENV=production\n\n# Note layers should be ordered from less to more likely to change.\n\n# Update & install required packages\nRUN apk add --no-cache --update bash curl;\n\n# Needed for Gcloud Storage resumable file uploads\nRUN mkdir -p /root/.config\n\n# Set work directory\nWORKDIR /service\n\n# Install dependencies and store yarn cache\nCOPY package.json yarn.lock ./\nRUN --mount=type=cache,target=/root/.yarn YARN_CACHE_FOLDER=/root/.yarn yarn install --frozen-lockfile && yarn cache clean;\n\n# Copy app source\nCOPY . .\n\n# Set your port\nENV PORT 2300\n\n# Expose the port to outside world\nEXPOSE 2300\n\n# Start production server\nCMD [\"yarn\", \"start:production\"]\n"
}