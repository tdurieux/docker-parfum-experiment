{
  "startTime": 1674219340147,
  "endTime": 1674219341329,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 18,
        "columnEnd": 34
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "######\n# Build Client\n####################\nFROM node:14.17.0-alpine as client\n\nRUN apk update && apk --no-cache --virtual build-dependencies add make git bash python3 gcc g++\n\n# build package manifest layer\nRUN mkdir -p /ratel/client\nWORKDIR /ratel/client\nCOPY ./client/package.json /ratel/client\nRUN npm install --legacy-peer-deps && npm cache clean --force;\n\n# copy all assets and build\nCOPY . /ratel\nRUN npm run build:prod\n\n######\n# Build Server\n####################\nFROM golang:1.16.4-alpine as server\n\nRUN apk update && apk add --no-cache git bash\nCOPY . /ratel\n\nWORKDIR /ratel\nENV CGO_ENABLED=0\nCOPY --from=client /ratel/client/build /ratel/client/build\n# instal go-bindata\nRUN go get -u github.com/go-bindata/go-bindata/...\nRUN ./scripts/build.prod.sh --server\n\n######\n# Final Image\n####################\nFROM alpine:latest as final\n\nRUN apk add --no-cache ca-certificates\nRUN addgroup -g 1000 dgraph && \\\n    adduser -u 1000 -G dgraph -s /bin/sh -D dgraph\n# copy server artifact w/ embedded client artifact (bindata) to final stage\nCOPY --from=server /ratel/build/ratel /usr/local/bin/dgraph-ratel\nEXPOSE 8000\nUSER dgraph\n\nCMD [\"/usr/local/bin/dgraph-ratel\"]\n"
}