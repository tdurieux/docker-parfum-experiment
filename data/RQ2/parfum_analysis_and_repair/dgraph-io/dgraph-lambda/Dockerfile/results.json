{
  "startTime": 1674247932456,
  "endTime": 1674247933519,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 194,
        "columnEnd": 219
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 4,
        "columnEnd": 28
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:14-alpine as build\n\nRUN apk add --no-cache python3 make g++\nWORKDIR /app\nCOPY package.json package-lock.json ./\nRUN npm install && npm cache clean --force;\n\nCOPY . .\nARG nodeEnv=production\nENV NODE_ENV $nodeEnv\nRUN npm run build && if [[ \"$nodeEnv\" == \"production\" ]]; then \\\n mv node_modules/node-webcrypto-ossl tmp && rm -rf node_modules && mkdir node_modules && mv tmp node_modules/node-webcrypto-ossl && npm install --no-optional; npm cache clean --force; fi\n\n# Used just for tests\nENTRYPOINT [ \"npm\", \"run\" ]\n\nFROM node:14-alpine\nENV NODE_ENV production\nRUN adduser app -h /app -D\nUSER app\nWORKDIR /app\nCOPY --from=build --chown=app /app /app\nCMD [\"npm\", \"start\"]\n"
}