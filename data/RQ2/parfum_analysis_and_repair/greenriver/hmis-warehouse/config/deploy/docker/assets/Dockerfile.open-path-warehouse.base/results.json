{
  "startTime": 1674219735480,
  "endTime": 1674219738759,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 5,
        "columnEnd": 9
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 13,
        "columnEnd": 29
      }
    }
  ],
  "repairedDockerfile": "# Move less frequently changing things higher in this file.\n\n########################\n## Stage for the code ##\n########################\nFROM ruby:2.7.6-alpine3.15 AS code\n\nRUN mkdir -p /app /app/shape_files/CoC /etc/ssl/certs \\\n    /app/shape_files/CoC /app/shape_files/zip_codes.census.2018 \\\n    /app/shape_files/block_groups /app/shape_files/states /app/shape_files/counties\n\nWORKDIR /app\n\nCOPY Gemfile Gemfile.lock Rakefile config.ru package.json ./\nCOPY bin ./bin\nCOPY public ./public\nCOPY config/deploy/docker/lib ./bin\nCOPY config/deploy/docker/assets/deploy_tasks.open-path-warehouse.sh ./bin/deploy_tasks.sh\n\n# We don't copy the whole directory so that local developer builds don't pull\n# in all the shape files and zip files\nCOPY shape_files/sync.from.s3 ./shape_files\nCOPY shape_files/CoC/make.inserts ./shape_files/CoC\nCOPY shape_files/zip_codes.census.2018/make.inserts ./shape_files/zip_codes.census.2018\nCOPY shape_files/counties/make.inserts ./shape_files/counties\nCOPY shape_files/states/make.inserts ./shape_files/states\nCOPY shape_files/block_groups/make.inserts ./shape_files/block_groups\n\nCOPY lib ./lib\nCOPY config ./config\n#COPY spec ./spec\nCOPY db ./db\nCOPY app ./app\nCOPY vendor ./vendor\nCOPY drivers ./drivers\nCOPY locale ./locale\n\nCOPY config/deploy/docker/assets/REVISION ./\n\n##################\n## Actual Build ##\n##################\n\nFROM open-path-warehouse:latest--pre-cache\nARG GITHASH\nARG BUILDER\n\n#############################################\n# START Remove after pre-cache gets rebuilt #\n#############################################\n#\n###########################################\n# END Remove after pre-cache gets rebuilt #\n###########################################\n\nLABEL \"app\"=open-path-warehouse\nLABEL \"ruby-version\"=2.7.6\n\nCOPY config/deploy/docker/assets/entrypoint.sh /usr/bin/\nCOPY --from=code --chown=app:app /app /app/\n\nRUN chmod +x /usr/bin/entrypoint.sh \\\n  && bundle config without development test doc \\\n  && bundle install \\\n  && find /usr/local/bundle -name \"*.o\" -exec rm {} \\; \\\n  && find /usr/local/bundle -name \"*.c\" -exec rm {} \\; \\\n  && cp config/deploy/docker/assets/database.open-path-warehouse.yml config/database.yml \\\n  && rm -rf tmp/* \\\n  && rm .env \\\n  && mkdir tmp/pids \\\n  && yarn && yarn cache clean;\n\nRUN touch /etc/timezone\nRUN ln -sf /app/etc-localtime /etc/localtime\nRUN chown -R app:app tmp\nRUN chown -R app:app node_modules\nRUN chown -R app:app /usr/local/bundle\nRUN chown app:app /etc/timezone\n\nRUN touch config/database.yml\nRUN chown app:app config/database.yml\n\nUSER app\n\n# Expose the GITHASH to entrypoint.sh for downloading precompiled assets.\nENV GITHASH=${GITHASH}\n\nENTRYPOINT [\"entrypoint.sh\"]\n"
}