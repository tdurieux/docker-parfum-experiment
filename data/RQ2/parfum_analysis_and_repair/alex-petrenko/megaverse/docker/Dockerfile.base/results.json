{
  "startTime": 1674248938187,
  "endTime": 1674248939043,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 81
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 104,
        "columnEnd": 152
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 13,
        "columnStart": 30,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nvidia/cudagl:10.2-devel-ubuntu18.04\n# FROM nvidia/cudagl:11.0-devel-ubuntu20.04\n# FROM nvidia/cuda:10.2-cudnn7-devel-ubuntu18.04\n\n# Set up locale to prevent bugs with encoding\nENV LC_ALL=C.UTF-8 LANG=C.UTF-8\n\nRUN apt-get update || true && apt-get install --no-install-recommends -y \\\n    libcudnn8 \\\n    libglvnd0 libgl1 libglx0 libegl1 \\\n    libglvnd-dev libgl1-mesa-dev libegl1-mesa-dev \\\n    wget curl git zlib1g-dev \\\n    libglib2.0-0 libsm6 libxext6 libxrender-dev \\\n    python3 python3-pip cmake \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\nWORKDIR /vulkan\nRUN wget https://sdk.lunarg.com/sdk/download/1.2.162.0/linux/vulkansdk-linux-x86_64-1.2.162.0.tar.gz && tar -xzf vulkansdk-linux-x86_64-1.2.162.0.tar.gz && rm vulkansdk-linux-x86_64-1.2.162.0.tar.gz\n\nENV VULKAN_SDK=/vulkan/1.2.162.0/x86_64\nENV PATH=${VULKAN_SDK}/bin:${PATH}\nENV LD_LIBRARY_PATH=${VULKAN_SDK}/lib:${LD_LIBRARY_PATH:-}\nENV VK_LAYER_PATH=${VULKAN_SDK}/etc/vulkan/explicit_layer.d\n\nRUN vulkaninfo\n\nWORKDIR /\n\nRUN cd /usr/bin \\\n    && ln -s python3 python \\\n    && ln -s pip3 pip\n\nRUN curl -f -LO http://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh && \\\n    bash Miniconda3-latest-Linux-x86_64.sh -p /miniconda -b && \\\n    rm Miniconda3-latest-Linux-x86_64.sh\n\nENV PATH=/miniconda/bin:${PATH}\nRUN conda update -y conda && conda --version\n\nWORKDIR /workspace\n\nRUN git clone https://github.com/alex-petrenko/sample-factory.git\nRUN git clone https://github.com/alex-petrenko/megaverse.git\nWORKDIR sample-factory\n\nRUN conda env create -f environment.yml\nRUN conda init bash\nSHELL [\"conda\", \"run\", \"-n\", \"sample-factory\", \"/bin/bash\", \"-c\"]\nRUN conda install -n sample-factory -c anaconda cudatoolkit cmake\nRUN conda install -n sample-factory -c conda-forge opencv bullet cudatoolkit-dev\nRUN pip install --no-cache-dir -e .\n\nWORKDIR /workspace/megaverse\n\nRUN git submodule update --init --recursive\n\nRUN pip install --no-cache-dir -e .\n\n"
}