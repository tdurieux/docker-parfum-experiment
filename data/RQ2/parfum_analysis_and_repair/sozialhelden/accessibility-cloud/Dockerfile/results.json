{
  "startTime": 1674218314274,
  "endTime": 1674218315164,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 5,
        "columnStart": 7,
        "columnEnd": 23
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 28,
        "lineEnd": 33,
        "columnStart": 7,
        "columnEnd": 23
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 54,
        "lineEnd": 57,
        "columnStart": 7,
        "columnEnd": 17
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# The tag here should match the Meteor version of your app, per .meteor/release\nFROM sozialhelden/meteor-base:1.4.4.2-new-ca-certs\n\nRUN apt-get -yqq update \\\n    && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends -yqq install \\\n        ca-certificates \\\n    && apt-get clean && rm -rf /var/lib/apt/lists/*\n\n# Copy app package.json and package-lock.json into container\nCOPY ./app/package*.json $APP_SOURCE_FOLDER/\n\nRUN bash $SCRIPTS_FOLDER/build-app-npm-dependencies.sh\n\n# Copy app source into container\nCOPY ./app $APP_SOURCE_FOLDER/\nENV TOOL_NODE_FLAGS \"--max-old-space-size=4096 --optimize_for_size --gc-interval=100\"\nENV METEOR_DISABLE_OPTIMISTIC_CACHING \"1\"\nENV NODE_TLS_REJECT_UNAUTHORIZED \"0\"\nRUN bash $SCRIPTS_FOLDER/build-meteor-bundle.sh\n\n\n# Use the specific version of Node expected by your Meteor release, per https://docs.meteor.com/changelog.html; this is expected for Meteor 1.10.2\nFROM node:4.8.2-slim\n\nENV APP_BUNDLE_FOLDER /opt/bundle\nENV SCRIPTS_FOLDER /docker\n\nRUN apt-get -yqq update \\\n    && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends -yqq install \\\n        curl \\\n        g++ \\\n        make \\\n        python \\\n        ca-certificates \\\n    && apt-get clean && rm -rf /var/lib/apt/lists/*\n\n# Copy in entrypoint\nCOPY --from=0 $SCRIPTS_FOLDER $SCRIPTS_FOLDER/\n\n# Copy in app bundle\nCOPY --from=0 $APP_BUNDLE_FOLDER/bundle $APP_BUNDLE_FOLDER/bundle/\n\nENV NODE_TLS_REJECT_UNAUTHORIZED \"0\"\nRUN bash $SCRIPTS_FOLDER/build-meteor-npm-dependencies.sh --build-from-source\n\n\n# Start another Docker stage, so that the final image doesnâ€™t contain the layer with the build dependencies\n# See previous FROM line; this must match\nFROM node:4.8.2-slim\n\nENV APP_BUNDLE_FOLDER /opt/bundle\nENV SCRIPTS_FOLDER /docker\n# Install OS runtime dependencies\nRUN apt-get -yqq update \\\n    && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends -yqq install \\\n        curl \\\n\t\tbash \\\n\t\tca-certificates \\\n    && apt-get clean && rm -rf /var/lib/apt/lists/*\n\n# Copy in entrypoint with the built and installed dependencies from the previous image\nCOPY --from=1 $SCRIPTS_FOLDER $SCRIPTS_FOLDER/\n\n# Copy in app bundle with the built and installed dependencies from the previous image\nCOPY --from=1 $APP_BUNDLE_FOLDER/bundle $APP_BUNDLE_FOLDER/bundle/\n\nENV NODE_TLS_REJECT_UNAUTHORIZED \"0\"\n\n# Start app\nENTRYPOINT [\"/docker/entrypoint.sh\"]\n\nCMD [\"node\", \"main.js\"]"
}