{
  "startTime": 1674215150968,
  "endTime": 1674215151972,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 5,
        "columnEnd": 49
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 112,
        "columnEnd": 125
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 47,
        "columnEnd": 139
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 47,
        "columnEnd": 139
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:16-bullseye\n\nARG ENV\n\nRUN apt-get update -y && apt-get upgrade -y && apt-get install --no-install-recommends -y clang-9 cmake build-essential perl6 golang ninja-build protobuf-compiler && rm -rf /var/lib/apt/lists/*;\n\n\nWORKDIR /usr/src/webtransport\n\nCOPY package*.json ./\n\nCOPY . .\n\n\nRUN npm install --production=false --unsafe-perm && npm cache clean --force;\n\n\n\n#debug\nRUN --mount=type=secret,id=GH_TOKEN export GH_TOKEN=`cat /run/secrets/GH_TOKEN`; if [ \"$ENV\" = \"debug\" ] ; then \\\n npm install ; npm cache clean --force; else  npm ci --only=production; fi\n\n\n\nEXPOSE 8080/udp\n\n#CMD [ \"node\", \"src/main.js\" ]\n"
}