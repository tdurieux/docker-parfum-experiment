diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/ofa/connect/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/ofa/connect/Dockerfile/repaired.Dockerfile
index f7ab877..cddb452 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/ofa/connect/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/ofa/connect/Dockerfile/repaired.Dockerfile
@@ -9,14 +9,14 @@ ENV PORT 8000
 # We need ruby to compile our nginx config, libmemcache to compile connect,
 # node to compile static assets, and gifsicle to resize animated gifs
 # The node build script runs `apt-get update`, saving us that step
-RUN curl -sL https://deb.nodesource.com/setup_5.x | bash - && \
-    apt-get install -y nodejs build-essential libmemcached-dev ruby gifsicle && \
-    apt-get clean
+RUN curl -f -sL https://deb.nodesource.com/setup_5.x | bash - && \
+    apt-get install --no-install-recommends -y nodejs build-essential libmemcached-dev ruby gifsicle && \
+    apt-get clean && rm -rf /var/lib/apt/lists/*;
 
 
 # Install `grunt` and `bower`, command-line node packages which handle
 # dependency management and tasks such as compilation
-RUN npm install -g bower grunt-cli
+RUN npm install -g bower grunt-cli && npm cache clean --force;
 
 
 # Create a script called "proclaunch" that will let you launch a line from the
@@ -68,7 +68,7 @@ RUN git clone https://github.com/ofa/heroku-buildpack-pgbouncer.git pgbouncer-bu
 # process.
 ADD package.json /app/package.json
 RUN npm install && rm -r ~/.npm && npm uninstall phantomjs && \
-    chown -R --from=root:root appuser:appuser /app
+    chown -R --from=root:root appuser:appuser /app && npm cache clean --force;
 
 
 # We run pip as root so that python packages are available for all (and thus
@@ -76,7 +76,7 @@ RUN npm install && rm -r ~/.npm && npm uninstall phantomjs && \
 # Because we're adding requirements.txt separately Docker is smart and will
 # cache this entire step until you change requirements.txt (or clear the cache)
 ADD *requirements.txt /app/
-RUN pip install -r requirements.txt && rm -r ~/.cache
+RUN pip install --no-cache-dir -r requirements.txt && rm -r ~/.cache
 
 
 # Install bower packages. Change this file to break the built-in cache.