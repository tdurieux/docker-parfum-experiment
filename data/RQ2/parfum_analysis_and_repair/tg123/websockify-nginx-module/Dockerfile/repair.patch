diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/tg123/websockify-nginx-module/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/tg123/websockify-nginx-module/Dockerfile/repaired.Dockerfile
index bb727bf..63846b9 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/tg123/websockify-nginx-module/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/tg123/websockify-nginx-module/Dockerfile/repaired.Dockerfile
@@ -72,19 +72,21 @@ RUN GPG_KEYS=B0F4253373F8F6F510D42178520A9993A1C052F8 \
 		libxslt-dev \
 		gd-dev \
 		geoip-dev \
-	&& curl -fSL http://nginx.org/download/nginx-$NGINX_VERSION.tar.gz -o nginx.tar.gz \
-	&& curl -fSL http://nginx.org/download/nginx-$NGINX_VERSION.tar.gz.asc  -o nginx.tar.gz.asc \
+	&& curl -fSL https://nginx.org/download/nginx-$NGINX_VERSION.tar.gz -o nginx.tar.gz \
+	&& curl -fSL https://nginx.org/download/nginx-$NGINX_VERSION.tar.gz.asc -o nginx.tar.gz.asc \
 	&& export GNUPGHOME="$(mktemp -d)" \
-	&& found=''; \
+	&& found=''; rm -rf -d \
 	for server in \
 		ha.pool.sks-keyservers.net \
 		hkp://keyserver.ubuntu.com:80 \
 		hkp://p80.pool.sks-keyservers.net:80 \
-		pgp.mit.edu \
-	; do \
+		pgp.mit.edu; do \
+			
+	
 		echo "Fetching GPG key $GPG_KEYS from $server"; \
-		gpg --keyserver "$server" --keyserver-options timeout=10 --recv-keys "$GPG_KEYS" && found=yes && break; \
-	done; \
+		gpg --batch --keyserver "$server" --keyserver-options timeout=10 --recv-keys "$GPG_KEYS" && found=yes && break; \
+	done \
+	; \
 	test -z "$found" && echo >&2 "error: failed to fetch GPG key $GPG_KEYS" && exit 1; \
 	gpg --batch --verify nginx.tar.gz.asc nginx.tar.gz \
 	&& rm -r "$GNUPGHOME" nginx.tar.gz.asc \
@@ -92,26 +94,26 @@ RUN GPG_KEYS=B0F4253373F8F6F510D42178520A9993A1C052F8 \
 	&& tar -zxC /usr/src -f nginx.tar.gz \
 	&& rm nginx.tar.gz \
 
-	# LuaJit & nginx-lua-module
-	&& curl -fSL https://github.com/openresty/luajit2/archive/v${LUAJIT_VERSION}.tar.gz  -o LuaJIT.tar.gz \
-	&& tar zxvf LuaJIT.tar.gz \
+	# uaJi -f  & n inx-lua-module \
+	&& curl -fSL https://gith \
+	&& tar -f xvf uaJIT.tar.gz \
 
-	&& curl -fSL https://github.com/openresty/lua-nginx-module/archive/v${LUA_NGINX_MODULE_VERSION}.tar.gz  -o lua-nginx-module.tar.gz \
+	&& curl -fSL https://github.com/openresty/lua- \
 	&& tar zxvf lua-nginx-module.tar.gz \
 
-	&& rm -f LuaJIT.tar.gz lua-nginx-module.tar.gz \
-
+	&& rm -f LuaJIT.tar.gz lua-nginx-mo \
+	--build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
 	&& make -C /luajit2-${LUAJIT_VERSION} \
-	&& make -C /luajit2-${LUAJIT_VERSION} install \
+	&& make -C /luajit2-${LUAJIT_VERS \
 
 	&& cd /usr/src/nginx-$NGINX_VERSION \
 	&& ./configure $CONFIG --with-debug \
 	&& make -j$(getconf _NPROCESSORS_ONLN) \
-	&& mv objs/nginx objs/nginx-debug \
-	&& mv objs/ngx_http_xslt_filter_module.so objs/ngx_http_xslt_filter_module-debug.so \
-	&& mv objs/ngx_http_image_filter_module.so objs/ngx_http_image_filter_module-debug.so \
-	&& mv objs/ngx_http_geoip_module.so objs/ngx_http_geoip_module-debug.so \
-	&& mv objs/ngx_stream_geoip_module.so objs/ngx_stream_geoip_module-debug.so \
+	&& mv objs/ngi --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" x objs/ \
+	&& mv objs/ngx_http_xslt_filter_module \
+	&& mv objs/ngx_ \
+	&& mv objs/ngx_http_geoip_ \
+	&& mv objs/ngx_stream_geoip \
 	&& ./configure $CONFIG \
 	&& make -j$(getconf _NPROCESSORS_ONLN) \
 	&& make install \
@@ -121,41 +123,36 @@ RUN GPG_KEYS=B0F4253373F8F6F510D42178520A9993A1C052F8 \
 	&& install -m644 html/index.html /usr/share/nginx/html/ \
 	&& install -m644 html/50x.html /usr/share/nginx/html/ \
 	&& install -m755 objs/nginx-debug /usr/sbin/nginx-debug \
-	&& install -m755 objs/ngx_http_xslt_filter_module-debug.so /usr/lib/nginx/modules/ngx_http_xslt_filter_module-debug.so \
-	&& install -m755 objs/ngx_http_image_filter_module-debug.so /usr/lib/nginx/modules/ngx_http_image_filter_module-debug.so \
-	&& install -m755 objs/ngx_http_geoip_module-debug.so /usr/lib/nginx/modules/ngx_http_geoip_module-debug.so \
-	&& install -m755 objs/ngx_stream_geoip_module-debug.so /usr/lib/nginx/modules/ngx_stream_geoip_module-debug.so \
+	&& install -m755 objs/ngx \
+	&& install -m755 objs/ngx_http_image \
+	&& install -m755 objs/ngx_http_geoip_mo \
+
 	&& ln -s ../../usr/lib/nginx/modules /etc/nginx/modules \
 	&& strip /usr/sbin/nginx* \
 	&& strip /usr/lib/nginx/modules/*.so \
 	&& rm -rf /usr/src/nginx-$NGINX_VERSION \
 	\
-	# Bring in gettext so we can get `envsubst`, then throw
-	# the rest away. To do this, we need to install `gettext`
-	# then move `envsubst` out of the way so `gettext` can
+	# ring in gettext so we can \
+
+	# hen move `envsubst` out of the way so `gettext` can
 	# be deleted completely, then move `envsubst` back.
 	&& apk add --no-cache --virtual .gettext gettext \
 	&& mv /usr/bin/envsubst /tmp/ \
 	\
-	&& runDeps="$( \
-		scanelf --needed --nobanner --format '%n#p' /usr/sbin/nginx /usr/lib/nginx/modules/*.so /tmp/envsubst \
-			| tr ',' '\n' \
-			| sort -u \
-			| awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }' \
-	)" \
+	&& \
+			s anelf --needed --nobanner --format '%n#p' /usr/sbin/ \
+					 tr ',' '\n' \
+					 sort -u \
+					 awk 'system("[ -e /usr/local/li \
+
 	&& apk add --no-cache --virtual .nginx-rundeps $runDeps \
-	&& apk del .build-deps \
+	&& apk del .b
 	&& apk del .gettext \
-	&& mv /tmp/envsubst /usr/local/bin/ \
-	\
-	# Bring in tzdata so users could set the timezones through the environment
-	# variables
-	&& apk add --no-cache tzdata libgcc \
+
 	\
-	# forward request and error logs to docker log collector
-	&& ln -sf /dev/stdout /var/log/nginx/access.log \
-	&& ln -sf /dev/stderr /var/log/nginx/error.log \
-	&& rm -rf /src /lua-nginx-module-${LUA_NGINX_MODULE_VERSION} /luajit2-${LUAJIT_VERSION}
+	# ring in tzdata so users could set the timezo \
+	# ariables \
+	&& apk add --no-cache tzdata libgcc \ && rm -rf /usr/src
 
 COPY nginx.conf /etc/nginx/nginx.conf
 COPY nginx.vh.default.conf /etc/nginx/conf.d/default.conf