{
  "startTime": 1674256285751,
  "endTime": 1674256286343,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 111
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 22,
        "columnEnd": 78
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Demo docker, not tested for production\n\n# Inspired by\n# Detectron2 Dockerfile\n# https://github.com/facebookresearch/detectron2/blob/master/docker/Dockerfile\n\n# TextFuseNet step-by-step installation\n# https://github.com/ying09/TextFuseNet/blob/master/step-by-step%20installation.txt\n\n# Docker conda installation\n# https://stackoverflow.com/a/62674910/6760875\n\nFROM nvidia/cuda:10.1-cudnn7-devel\n\n# install conda\nENV PATH=\"/root/miniconda3/bin:${PATH}\"\nARG PATH=\"/root/miniconda3/bin:${PATH}\"\n\nRUN apt-get update && apt-get install --no-install-recommends -y wget git libgl1-mesa-glx libglib2.0-0 && rm -rf /var/lib/apt/lists/*\n\nRUN wget \\\n    https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh \\\n    && mkdir /root/.conda \\\n    && bash Miniconda3-latest-Linux-x86_64.sh -b \\\n    && rm -f Miniconda3-latest-Linux-x86_64.sh\nRUN conda --version\n\n# create environment\nRUN conda create --name textfusenet python=3.7.3\n\n# activate environment\nSHELL [\"conda\", \"run\", \"-n\", \"textfusenet\", \"/bin/bash\", \"-c\"]\n\n# force enable cuda\nENV FORCE_CUDA=\"1\"\nARG TORCH_CUDA_ARCH_LIST=\"Kepler;Kepler+Tesla;Maxwell;Maxwell+Tegra;Pascal;Volta;Turing\"\nENV TORCH_CUDA_ARCH_LIST=\"${TORCH_CUDA_ARCH_LIST}\"\n\n# install packages\nRUN conda install pytorch=1.3.1 torchvision cudatoolkit=10.1 -c pytorch\nRUN pip install --no-cache-dir opencv-python tensorboard yacs tqdm termcolor tabulate matplotlib cloudpickle wheel pycocotools\n\n# clone TextFuseNet\nRUN git clone https://github.com/ying09/TextFuseNet.git\n\n# set the working directory\nWORKDIR TextFuseNet\n\n# install fvcore\nRUN pip install --no-cache-dir fvcore-master.zip\n\n# build TextFuseNet\nRUN python setup.py build develop\n\n# activate environment for the user\nRUN echo \"source activate textfusenet\" > ~/.bashrc\n\n# use demo script as an entry point\nENTRYPOINT python demo/${DEMO_FILE} --weights model.pth --output ./output_images/"
}