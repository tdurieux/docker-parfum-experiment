{
  "startTime": 1674252405047,
  "endTime": 1674252406399,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 102
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 122
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 21,
        "columnEnd": 56
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 55
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM centos:7\n\n# update OS and install basic utils\nRUN yum -y update\nRUN yum -y install epel-release && rm -rf /var/cache/yum\nRUN yum -y install centos-release-scl && rm -rf /var/cache/yum\nRUN yum -y install git && rm -rf /var/cache/yum\nRUN yum -y install which && rm -rf /var/cache/yum\n\n# python\nRUN yum -y install python36 && rm -rf /var/cache/yum\nRUN python3 -V\nRUN pip3 install --no-cache-dir -U pip\nRUN pip3 install --no-cache-dir -U snowflake-connector-python\n\n# aws\nRUN pip3 install --no-cache-dir -U awscli\nRUN aws --version\n\n# zstd\nRUN yum -y install zstd && rm -rf /var/cache/yum\n\n# jq\nRUN yum -y install jq && rm -rf /var/cache/yum\n\n# gosu\nRUN curl -f -o /usr/local/bin/gosu -SL \"https://github.com/tianon/gosu/releases/download/1.11/gosu-amd64\"\nRUN chmod +x /usr/local/bin/gosu\n\n# Install build tools\nRUN yum -y groupinstall 'Development Tools'\nRUN yum -y install centos-release-scl && rm -rf /var/cache/yum\nRUN yum -y install devtoolset-8-gcc* && rm -rf /var/cache/yum\nSHELL [ \"/usr/bin/scl\", \"enable\", \"devtoolset-8\"]\n\n# node-fips environment variables\nENV NODE_HOME $HOME/node\nENV NODEJS_VERSION 8.16.2\nENV FIPSDIR $HOME/install-openssl-fips\nENV OPENSSL_VERSION 2.0.16\n\n# Install OpenSSL\nRUN cd $HOME\nRUN curl -f https://www.openssl.org/source/openssl-fips-$OPENSSL_VERSION.tar.gz -o $HOME/openssl-fips-$OPENSSL_VERSION.tar.gz\nRUN tar -xvf $HOME/openssl-fips-$OPENSSL_VERSION.tar.gz && rm $HOME/openssl-fips-$OPENSSL_VERSION.tar.gz\nRUN mv openssl-fips-$OPENSSL_VERSION $HOME/openssl-fips\nRUN cd $HOME/openssl-fips\n\n# You must run ONLY these commands when building the FIPS version of OpenSSL\nRUN cd $HOME/openssl-fips && ./config && make && make install\n\n# Download and build NodeJS\nRUN git clone --branch v$NODEJS_VERSION https://github.com/nodejs/node.git $NODE_HOME\nRUN gcc --version\nRUN g++ --version\nRUN cd $NODE_HOME && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --openssl-fips=$FIPSDIR && make -j2 & > /dev/null && make install\n# Should be $NODEJS_VERSION\nRUN node --version\n# Should be $OPENSSL_VERSION\nRUN node -p \"process.versions.openssl\"\n\n# workspace\nRUN mkdir -p /home/user\nRUN chmod 777 /home/user\nWORKDIR /home/user\n\n# entry point\nCOPY scripts/entrypoint.sh /usr/local/bin/entrypoint.sh\nRUN chmod +x /usr/local/bin/entrypoint.sh\nENTRYPOINT [\"/usr/local/bin/entrypoint.sh\"]\n"
}