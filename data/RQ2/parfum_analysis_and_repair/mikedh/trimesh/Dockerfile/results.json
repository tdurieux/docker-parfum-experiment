{
  "startTime": 1674249349523,
  "endTime": 1674249350934,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 97
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.9-slim-bullseye\n\nLABEL maintainer=\"mikedh@kerfed.com\"\n\n# where should this image install `trimesh`\nARG TRIMESH_PATH=/opt/trimesh\n\n# Install the llvmpipe software renderer\n# and X11 for software offscreen rendering,\n# roughly 500mb of stuff.\nARG INCLUDE_X=false\n\n# Install binary APT dependencies.\nCOPY docker/builds/apt.bash /tmp/\nRUN bash /tmp/apt.bash ${INCLUDE_X}\n\n# Install `embree`, Intel's fast ray checking engine\nCOPY docker/builds/embree.bash /tmp/\nRUN bash /tmp/embree.bash\n\n# XVFB runs in the background if you start supervisor.\nCOPY docker/config/xvfb.supervisord.conf /etc/supervisor/conf.d/\n\n# Create a local non-root user.\nRUN useradd -m -s /bin/bash user\n\n# Copy minimal trimesh installation.\nRUN mkdir -p \"${TRIMESH_PATH}\"\nRUN chown user:user -R \"${TRIMESH_PATH}\"\nCOPY --chown=user:user trimesh/ \"${TRIMESH_PATH}/trimesh\"\nCOPY --chown=user:user tests/ \"${TRIMESH_PATH}/tests\"\nCOPY --chown=user:user setup.py \"${TRIMESH_PATH}/\"\n\n# Switch to non-root user.\nUSER user\n\n# Required for Python to be able to find libembree.\nENV LD_LIBRARY_PATH=\"/usr/local/lib:$LD_LIBRARY_PATH\"\n# So scripts installed from pip are in $PATH\nENV PATH=\"/home/user/.local/bin:$PATH\"\n\n# Install trimesh as `user`.\n# `supervisor` is for running xvfb\n# `cython` is to install embree\nRUN pip install --no-cache-dir -e \"${TRIMESH_PATH}[all]\" cython supervisor\nRUN pip install --no-cache-dir https://github.com/scopatz/pyembree/releases/download/0.1.6/pyembree-0.1.6.tar.gz\n\n# Set environment variables for software rendering.\nENV XVFB_WHD=\"1920x1080x24\"\\\n    DISPLAY=\":99\" \\\n    LIBGL_ALWAYS_SOFTWARE=\"1\" \\\n    GALLIUM_DRIVER=\"llvmpipe\"\n"
}