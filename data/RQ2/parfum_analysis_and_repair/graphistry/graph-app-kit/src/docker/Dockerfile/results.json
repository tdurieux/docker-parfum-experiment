{
  "startTime": 1674218966696,
  "endTime": 1674218967375,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 47,
        "columnEnd": 85
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 47,
        "columnEnd": 82
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Default to big image, but allow thin cpu override\nARG DOCKER_TAG=latest\nARG GRAPHISTRY_FORGE_BASE_VERSION=v2.39.14-11.4\nARG PYTHON_VERSION=3.8\nARG BASE_IMAGE=graphistry/graphistry-forge-base:${GRAPHISTRY_FORGE_BASE_VERSION}\nFROM python:$PYTHON_VERSION as cpu_base\n\nARG DOCKER_TAG=latest\nARG GRAPHISTRY_FORGE_BASE_VERSION=v2.39.14-11.4\nARG BASE_IMAGE=graphistry/graphistry-forge-base:${GRAPHISTRY_FORGE_BASE_VERSION}\nFROM $BASE_IMAGE\n\nEXPOSE 8501\n\n# making directory of app\nWORKDIR /app\n\nCOPY python/conda-app.sh ./\nRUN { source activate rapids || echo ok ; } && ./conda-app.sh\n\nCOPY python/requirements-system.txt ./\nRUN --mount=type=cache,target=/root/.cache \\\n    { source activate rapids || echo ok ; } && pip install --no-cache-dir -r requirements-system.txt\n\nCOPY python/requirements-app.txt ./\nRUN --mount=type=cache,target=/root/.cache \\\n    { source activate rapids || echo ok ; } && pip install --no-cache-dir -r requirements-app.txt\n\nENV LC_ALL=C.UTF-8\nENV LANG=C.UTF-8\nRUN mkdir -p /root/.streamlit \\\n&& bash -c 'echo -e \"\\\n[general]\\n\\\nemail = \\\"\\\"\\n\\\n\" > /root/.streamlit/credentials.toml' \\\n&& bash -c 'echo -e \"\\\n[server]\\n\\\nenableXsrfProtection = false\\n\\ \nenableCORS = false\\n\\\n[browser]\\n\\\ngatherUsageStats = false\\n\\\n\" > /root/.streamlit/config.toml'\n\n#Note no trailing slash\nENV BASE_URL=http://localhost:8501/dashboard\nENV BASE_PATH=dashboard/\nENV LOG_LEVEL=ERROR\nCOPY python/ /apps/\n\nCOPY docker/entrypoint.sh /entrypoint.sh\nENTRYPOINT [\"/entrypoint.sh\"]\nCMD [\"/apps/entrypoint.py\"]\n\n#Assume volume mount src/python as /apps/ (hot module reloading)"
}