{
  "startTime": 1674218141385,
  "endTime": 1674218141931,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 7,
        "columnEnd": 32
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 7,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 12,
        "columnStart": 7,
        "columnEnd": 11
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 12,
        "columnStart": 7,
        "columnEnd": 11
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#NOTE: context is ..\n\nARG PYTHON_VERSION=3.6\nFROM python:${PYTHON_VERSION}-slim\nARG PIP_DEPS=\"-e .[dev]\"\nSHELL [\"/bin/bash\", \"-c\"]\n\nRUN --mount=type=cache,target=/var/cache/apt--mount=type=cache,target=/var/lib/apt \\\n    apt-get update \\\n    && apt-get install --no-install-recommends -y \\\n        unzip \\\n        wget \\\n        zip && rm -rf /var/lib/apt/lists/*;\n\nRUN mkdir /opt/pygraphistry\nWORKDIR /opt/pygraphistry\n\nRUN --mount=type=cache,target=/root/.cache \\\n    python -m venv pygraphistry \\\n    && source pygraphistry/bin/activate \\\n    && pip install --no-cache-dir --upgrade pip\n\n#install tests with stubbed package\nCOPY README.md setup.py setup.cfg versioneer.py MANIFEST.in ./\nCOPY graphistry/_version.py ./graphistry/_version.py\nRUN --mount=type=cache,target=/root/.cache \\\n    source pygraphistry/bin/activate \\\n    && pip list \\\n    && touch graphistry/__init__.py \\\n    && echo \"PIP_DEPS: $PIP_DEPS\" \\\n    && pip install --no-cache-dir $PIP_DEPS \\\n    && pip list\n\nARG SENTENCE_TRANSFORMER=\"\"\nRUN --mount=type=cache,target=/root/.cache \\\n    source pygraphistry/bin/activate \\\n    && mkdir -p /models \\\n    && cd /models \\\n    && if [[ \"${SENTENCE_TRANSFORMER}\" == \"\" ]]; then \\\n        echo \"No sentence transformer specified, skipping\"; \\\n    else \\\n        ( \\\n            wget --no-check-certificate \\\n            \"https://public.ukp.informatik.tu-darmstadt.de/reimers/sentence-transformers/v0.2/${SENTENCE_TRANSFORMER}.zip\" \\\n            && unzip \"${SENTENCE_TRANSFORMER}.zip\" -d \"${SENTENCE_TRANSFORMER}\" \\\n        ) ; \\\n    fi\n# paraphrase-albert-small-v2  : 40mb\n# paraphrase-MiniLM-L3-v2 (default): 60mb\n# average_word_embeddings_komninos: 300mb\n\nCOPY docker/test-cpu-entrypoint.sh /entrypoint/test-cpu-entrypoint.sh\nCOPY bin ./bin\nCOPY mypy.ini .\nCOPY pytest.ini .\nCOPY graphistry ./graphistry\nCOPY demos/data ./demos/data\n\nENV RAPIDS=0\nENV TEST_CUDF=0\nENV TEST_DASK=0\nENV TEST_DASK_CUDF=0\nENV TEST_PANDAS=1\n\nENTRYPOINT [\"/entrypoint/test-cpu-entrypoint.sh\"]"
}