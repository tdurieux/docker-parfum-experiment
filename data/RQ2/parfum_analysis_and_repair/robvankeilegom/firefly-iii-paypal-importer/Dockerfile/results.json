{
  "startTime": 1674248807483,
  "endTime": 1674248808354,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 21,
        "columnStart": 22,
        "columnEnd": 8
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 21,
        "columnStart": 22,
        "columnEnd": 8
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Build frontend assets\nFROM node:16 as frontend\n\nRUN mkdir -p /app/public /public/ /public/css/\n\nCOPY package.json webpack.mix.js yarn.lock tailwind.config.js /app/\n\nCOPY resources/ /app/resources/\n\nWORKDIR /app\n\nRUN yarn install && yarn production && yarn cache clean;\n\n# Start actual container\nFROM php:8.1.3-apache\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    git \\\n    curl \\\n    zip \\\n    unzip \\\n    cron && rm -rf /var/lib/apt/lists/*;\n\nRUN docker-php-ext-install pdo pdo_mysql\n\n# Change the document root to /var/www/html/public\nRUN sed -i -e \"s/html/html\\/public/g\" /etc/apache2/sites-enabled/000-default.conf\n\nRUN a2enmod rewrite\n\n# Copy Composer binary from the Composer official Docker image\nCOPY --from=composer:latest /usr/bin/composer /usr/bin/composer\n\nCOPY docker/000-default.conf /etc/apache2/sites-available/000-default.conf\n\n# Set up data folder\nRUN mkdir -p /data\n\n# Define volumes\nVOLUME /data\nVOLUME /var/www/html\n\n# Set the working directory\nWORKDIR /var/www/html\n\n# Copy source files\nCOPY . .\n\n# Copy build assets\nCOPY --from=frontend /app/public/js/ /var/www/html/public/js/\nCOPY --from=frontend /app/public/css/ /var/www/html/public/css/\nCOPY --from=frontend /app/public/mix-manifest.json /var/www/html/public/mix-manifest.json\n\n# Make sure the scheduler works\nRUN echo \"* * * * * root php /var/www/html/artisan schedule:run >> /var/log/cron.log 2>&1\" >> /etc/crontab\n\n# Set up the entrypoint script\nCOPY docker/entrypoint.sh /usr/local/bin/docker-entrypoint.sh\nRUN chmod u+x /usr/local/bin/docker-entrypoint.sh\n\nENTRYPOINT [\"docker-entrypoint.sh\"]\n\n# Expose port 80\nEXPOSE 80\n\n# Start apache\nCMD [\"apache2-foreground\"]\n\n"
}