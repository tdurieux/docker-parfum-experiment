{
  "startTime": 1674252821303,
  "endTime": 1674252822140,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 38,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 43,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 79,
        "lineEnd": 79,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 80,
        "lineEnd": 80,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 81,
        "lineEnd": 81,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 83,
        "lineEnd": 83,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 85,
        "lineEnd": 85,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 87,
        "lineEnd": 87,
        "columnStart": 4,
        "columnEnd": 55
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 92,
        "lineEnd": 92,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 94,
        "lineEnd": 94,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 96,
        "lineEnd": 96,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 32,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 8
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 59,
        "lineEnd": 70,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 99,
        "lineEnd": 99,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 99,
        "lineEnd": 99,
        "columnStart": 4,
        "columnEnd": 38
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM kalilinux/kali-linux-docker:latest as development\n\nARG GO_INSTALL_DIR_PREFIX=\"/usr/local\"\nARG GOPATH=\"/go\"\nARG GOBIN=\"${GOPATH}/bin\"\nARG UNAME_S=\"Linux\"\nARG GOARCH=\"amd64\"\nARG TEMP_DL_DIR=\"/tmp/downloads\"\nARG GOLANG_DL_BASE_URL=\"https://dl.google.com/go/go\"\nARG GO_DEP_INSTALL_SCRIPT=\"https://raw.githubusercontent.com/golang/dep/master/install.sh\"\nARG GO_DEP_RELEASE_TAG=\"v0.5.1\"\n\nARG GOLANG_VERSION=\"1.12.1\"\nARG GO_CHECKSUM=\"2a3fdabf665496a0db5f41ec6af7a9b15a49fbe71a85a50ca38b1f13a103aeec\"\nARG YOUR_GITHUB_HANDLE=\"stevenaldinger\"\nARG APP_NAME=\"decker\"\n\nENV \\\n GOLANG_VERSION=\"${GOLANG_VERSION}\" \\\n DEP_RELEASE_TAG=\"${GO_DEP_RELEASE_TAG}\" \\\n GOPATH=\"/go\" \\\n GOBIN=\"/go/bin\" \\\n GOARCH=\"amd64\" \\\n GOROOT=\"${GO_INSTALL_DIR_PREFIX}/go\" \\\n GO_BIN_PATH_HOST=\"${TEMP_DL_DIR}/go${GOLANG_VERSION}.${UNAME_S}-${GOARCH}.tar.gz\" \\\n PATH=\"$PATH:/go/bin:${GO_INSTALL_DIR_PREFIX}/go/bin\"\n\nENV GO_BIN_URL_REMOTE=\"${GOLANG_DL_BASE_URL}${GOLANG_VERSION}.${UNAME_S}-${GOARCH}.tar.gz\"\n\n# Install golang and dep\n# Find versions and DL links here: https://golang.org/dl/\nRUN apt-get update \\\n && apt-get -y --no-install-recommends install \\\n     build-essential \\\n     ca-certificates \\\n     curl \\\n     git \\\n && mkdir -p \"${GOBIN}\" \"${TEMP_DL_DIR}\" \"${GO_INSTALL_DIR_PREFIX}/go\" \\\n && curl -f -L \"${GO_BIN_URL_REMOTE}\" \\\n      --output \"${GO_BIN_PATH_HOST}\" \\\n      --silent \\\n && tar -C \"${GO_INSTALL_DIR_PREFIX}\" -zxf \"${GO_BIN_PATH_HOST}\" \\\n && go version \\\n && curl -f \"${GO_DEP_INSTALL_SCRIPT}\" \\\n      --output \"${TEMP_DL_DIR}/install-dep.sh\" \\\n      --silent \\\n && chmod a+x \"${TEMP_DL_DIR}/install-dep.sh\" \\\n && cat \"${TEMP_DL_DIR}/install-dep.sh\" \\\n && \"${TEMP_DL_DIR}/install-dep.sh\" \\\n && rm \"${TEMP_DL_DIR}/install-dep.sh\" \\\n && go get -u golang.org/x/lint/golint \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \"${TEMP_DL_DIR}\"\n\n# install ruby, bundler, nokogiri(necessary for bundler install)\n# zlib (necessary for nokogiri install)\n# install wpscan and nmap as decker dependencies at runtime\n# dnsutils - nslookup, dig, host\nRUN apt-get update \\\n && apt-get install --no-install-recommends -y \\\n      ca-certificates \\\n      dnsutils \\\n      git \\\n      nmap \\\n      python3 \\\n      python3-pip \\\n      python-pip \\\n      ruby-full \\\n      sslscan \\\n      whois \\\n      zlib1g-dev \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \\\n # && gem install nokogiri -v '1.8.5' --source 'https://rubygems.org/' \\\n # && gem install bundler -v '1.17' \\\n # && git clone https://github.com/wpscanteam/wpscan /usr/bin/wpscan \\\n # && cd /usr/bin/wpscan/ \\\n # && bundle install \\\n # && rake install \\\n && pip install --no-cache-dir --upgrade setuptools \\\n && pip install --no-cache-dir --upgrade sslyze \\\n && pip3 install --no-cache-dir --upgrade setuptools \\\n && git clone https://github.com/laramies/theHarvester.git /usr/bin/theHarvester \\\n && pip3 install --no-cache-dir -r /usr/bin/theHarvester/requirements.txt \\\n && git clone https://github.com/darkoperator/dnsrecon.git /usr/bin/dnsrecon \\\n && pip install --no-cache-dir -r /usr/bin/dnsrecon/requirements.txt \\\n && git clone https://github.com/aboul3la/Sublist3r.git /usr/bin/Sublist3r \\\n && pip3 install --no-cache-dir -r /usr/bin/Sublist3r/requirements.txt \\\n && git clone https://github.com/EnableSecurity/wafw00f.git /usr/bin/wafw00f \\\n && cd /usr/bin/wafw00f \\\n && python setup.py install \\\n && git clone https://github.com/khalilbijjou/WAFNinja /usr/bin/WAFNinja \\\n && pip install --no-cache-dir -r /usr/bin/WAFNinja/requirements.txt \\\n && git clone https://github.com/faizann24/XssPy.git /usr/bin/XssPy \\\n && pip install --no-cache-dir mechanize \\\n && git clone https://github.com/hahwul/a2sv.git /usr/bin/a2sv \\\n && pip install --no-cache-dir -r /usr/bin/a2sv/requirements.txt\n\nRUN apt-get update \\\n && apt-get install --no-install-recommends -y kali-linux-full && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /go/src/github.com/${YOUR_GITHUB_HANDLE}/${APP_NAME}\n\nCOPY . .\n\nRUN dep ensure -v \\\n && make build_all \\\n && chmod a+x ./$APP_NAME\n\nCMD [\"bash\"]\n"
}