{
  "startTime": 1674221097092,
  "endTime": 1674221098087,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 129
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 129
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 129
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 153
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:20.04\n\nMAINTAINER Josh Ellithorpe <quest@mac.com>\n\nARG GOLANG_VERSION=\"1.18\"\n\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN apt-get -y update && apt-get -y upgrade\nRUN apt-get -y --no-install-recommends install gcc-8 g++-8 gcc g++ libgflags-dev libsnappy-dev zlib1g-dev libbz2-dev liblz4-dev libzstd-dev wget make git && rm -rf /var/lib/apt/lists/*;\n\nRUN mkdir /build\nWORKDIR /build\nRUN wget https://dl.google.com/go/go${GOLANG_VERSION}.linux-amd64.tar.gz\nRUN tar zxvf go${GOLANG_VERSION}.linux-amd64.tar.gz && rm go${GOLANG_VERSION}.linux-amd64.tar.gz\nRUN mv go /usr/local\nRUN mkdir -p /go/bin\nRUN wget https://github.com/facebook/rocksdb/archive/refs/tags/v5.18.4.tar.gz\nRUN tar zxvf v5.18.4.tar.gz && rm v5.18.4.tar.gz\n\nENV GOROOT=/usr/local/go\nENV GOPATH=/go\nENV PATH=$GOPATH/bin:$GOROOT/bin:$PATH\n\nWORKDIR /build/rocksdb-5.18.4\nRUN make CC=gcc-8 CXX=g++-8 shared_lib\n\nENV ROCKSDB_PATH=\"/build/rocksdb-5.18.4\"\nENV CGO_CFLAGS=\"-I/$ROCKSDB_PATH/include\"\nENV CGO_LDFLAGS=\"-L/$ROCKSDB_PATH -lrocksdb -lstdc++ -lm -lz -lbz2 -lsnappy -llz4 -lzstd\"\nENV LD_LIBRARY_PATH=$ROCKSDB_PATH\n\nRUN mkdir /smart_bch\nWORKDIR /smart_bch\nRUN git clone https://github.com/smartbch/moeingevm.git\nRUN git clone https://github.com/smartbch/smartbch.git\n\nWORKDIR /smart_bch/moeingevm/evmwrap\nRUN make\n\nENV EVMWRAP=/smart_bch/moeingevm/evmwrap/host_bridge/libevmwrap.so\n\nWORKDIR /smart_bch/smartbch\nRUN go install -tags cppbtree github.com/smartbch/smartbch/cmd/smartbchd\n\nVOLUME [\"/root/.smartbchd\"]\n\nENTRYPOINT [\"smartbchd\"]\nEXPOSE 8545 8546\n"
}