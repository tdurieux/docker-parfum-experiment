{
  "startTime": 1674249096962,
  "endTime": 1674249098094,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 80,
        "lineEnd": 80,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 88
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 88
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 88
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 112
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:20.04\n\nMAINTAINER Josh Ellithorpe <quest@mac.com>\n\nARG SMARTBCH_VERSION=\"v0.4.4-p2\"\nARG MOEINGEVM_VERSION=\"v0.4.2\"\nARG CONFIG_VERSION=\"v0.0.6\"\n\nARG GOLANG_VERSION=\"1.18\"\nARG PATCH_CGO_VERSION=\"0.1.2\"\nARG ROCKSDB_VERSION=\"5.18.4\"\nARG SNAPPY_VERSION=\"1.1.8\"\n\nARG GCC_VERSION=\"9\"\nENV GV=${GCC_VERSION}\n\n# Install apt based dependencies\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN apt-get -y update && apt-get -y upgrade\nRUN apt-get -y --no-install-recommends install software-properties-common && add-apt-repository -y ppa:ubuntu-toolchain-r/test && rm -rf /var/lib/apt/lists/*;\nRUN apt-get -y --no-install-recommends install cmake gcc-${GV} g++-${GV} g++ gcc git libgflags-dev make vim wget && rm -rf /var/lib/apt/lists/*;\n\n# Setup build directory\nRUN mkdir /build\nWORKDIR /build\n\n# Install Go\nRUN wget https://dl.google.com/go/go${GOLANG_VERSION}.linux-amd64.tar.gz\nRUN tar zxvf go${GOLANG_VERSION}.linux-amd64.tar.gz && rm go${GOLANG_VERSION}.linux-amd64.tar.gz\nRUN mv go /usr/local\nRUN mkdir -p /go/bin\n\nENV GOROOT=/usr/local/go\nENV GOPATH=/go\nENV PATH=$GOPATH/bin:$GOROOT/bin:$PATH\n\n# Patch Go for larger cgo stack size\nRUN wget https://github.com/smartbch/patch-cgo-for-golang/archive/refs/tags/v${PATCH_CGO_VERSION}.tar.gz\nRUN tar zxvf v${PATCH_CGO_VERSION}.tar.gz && rm v${PATCH_CGO_VERSION}.tar.gz\nRUN rm v${PATCH_CGO_VERSION}.tar.gz\nRUN cd patch-cgo-for-golang-${PATCH_CGO_VERSION} && cp *.c $GOROOT/src/runtime/cgo/\n\n# Build libsnappy\nRUN wget https://github.com/google/snappy/archive/refs/tags/${SNAPPY_VERSION}.tar.gz\nRUN tar zxvf ${SNAPPY_VERSION}.tar.gz && rm ${SNAPPY_VERSION}.tar.gz\nRUN cd snappy-${SNAPPY_VERSION} && mkdir build && cd build && \\\n    CXX=g++-${GV} cmake ../ && make CC=gcc-${GV} CXX=g++-${GV} && make install\n\n# Build rocksdb\nRUN wget https://github.com/facebook/rocksdb/archive/refs/tags/v${ROCKSDB_VERSION}.tar.gz\nRUN tar zxvf v${ROCKSDB_VERSION}.tar.gz && rm v${ROCKSDB_VERSION}.tar.gz\nRUN cd rocksdb-${ROCKSDB_VERSION} && \\\n    wget -O - https://raw.githubusercontent.com/smartbch/artifacts/main/patches/rocksdb.gcc11.patch | git apply -v && \\\n    CXXFLAGS=-Wno-range-loop-construct make -j4 CC=gcc-${GV} CXX=g++-${GV} static_lib\n\n# Create smartbch directory\nRUN mkdir /smart_bch\nWORKDIR /smart_bch\n\n# Ugly hack: force compiling libevmwrap and smartbchd with gcc-${GV} and g++-${GV}\nRUN ln -s /usr/bin/gcc-${GV} /usr/local/bin/gcc\nRUN ln -s /usr/bin/g++-${GV} /usr/local/bin/g++\n\n# Build libevmwrap\nRUN git clone -b ${MOEINGEVM_VERSION} --depth 1 https://github.com/smartbch/moeingevm\nRUN cd moeingevm/evmwrap && make\n\n# Build smartbchd\nENV ROCKSDB_PATH=\"/build/rocksdb-${ROCKSDB_VERSION}\"\nENV CGO_CFLAGS=\"-I$ROCKSDB_PATH/include\"\nENV CGO_LDFLAGS=\"-L$ROCKSDB_PATH -L/smart_bch/moeingevm/evmwrap/host_bridge/ -l:librocksdb.a -lstdc++ -lm -lsnappy\"\nRUN cd /smart_bch\nRUN git clone -b ${SMARTBCH_VERSION} --depth 1 https://github.com/smartbch/smartbch\nRUN cd smartbch && go build -tags cppbtree github.com/smartbch/smartbch/cmd/smartbchd\n\n# Setup smartbchd\nRUN cp /smart_bch/smartbch/smartbchd /build/smartbchd\nWORKDIR /root\nRUN /build/smartbchd init mynode --chain-id 0x2710\nRUN wget https://github.com/smartbch/artifacts/releases/download/${CONFIG_VERSION}/dot.smartbchd.tgz\nRUN tar zxvf dot.smartbchd.tgz && rm dot.smartbchd.tgz\nRUN cp -rf dot.smartbchd/* .smartbchd/\n\n# Go back to main workdir.\nWORKDIR /build\n\nVOLUME [\"/root/.smartbchd\"]\n\nENTRYPOINT [\"/build/smartbchd\"]\nEXPOSE 8545 8546\n"
}