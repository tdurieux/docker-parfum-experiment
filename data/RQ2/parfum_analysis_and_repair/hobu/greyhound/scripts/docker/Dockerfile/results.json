{
  "startTime": 1674216909648,
  "endTime": 1674216910291,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 25
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM connormanning/entwine\nMAINTAINER Connor Manning <connor@hobu.co>\n\nRUN \\\n    echo \"http://dl-cdn.alpinelinux.org/alpine/edge/testing\" >> \\\n        /etc/apk/repositories; \\\n    apk update; \\\n    apk add --no-cache --virtual .build-deps \\\n        alpine-sdk \\\n        libexecinfo-dev \\\n        libunwind-dev \\\n        boost-dev \\\n        laz-perf-dev \\\n        curl-dev \\\n        git openssh; \\\n    apk add --no-cache \\\n        nodejs-npm \\\n        libexecinfo \\\n        libunwind \\\n        boost \\\n        curl \\\n        nodejs; \\\n    npm install -g mocha; npm cache clean --force; \\\n    git clone https://github.com/eidheim/Simple-Web-Server.git /var/simple-web; \\\n    /var/simple-web ; \\\n    cd /var/simple-web && mkdir build && cd build ; \\\n    cmake -G \"Unix Makefiles\" \\\n        -DCMAKE_INSTALL_PREFIX=/usr \\\n        -DCMAKE_BUILD_TYPE=Release .. ; \\\n    make -j4 ; \\\n    make install; \\\n    git clone https://github.com/hobu/greyhound.git /var/greyhound ; \\\n    cd /var/greyhound && mkdir build && cd build ; \\\n    cmake -G \"Unix Makefiles\" \\\n        -DCMAKE_INSTALL_PREFIX=/usr \\\n        -DCMAKE_BUILD_TYPE=RelWithDebInfo .. ; \\\n    make install; \\\n    apk del .build-deps;\n\nEXPOSE 8080\nEXPOSE 8443\n\nENTRYPOINT [\"greyhound\"]\n\n# Sample invocation:\n#       docker run -it -p 8080:8080 -v ~/greyhound:/opt/data \\\n#           connormanning/greyhound\n\n"
}