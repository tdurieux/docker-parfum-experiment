{
  "startTime": 1674250782025,
  "endTime": 1674250783606,
  "originalSmells": [
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 55
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 55,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 13
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 77,
        "lineEnd": 101,
        "columnStart": 5,
        "columnEnd": 16
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Louis BAYLE, 2018-10-11\n\n# 2020-05-24: update to PHP v7.4\n# 2021-11-11: do not include CodevTT: make it a volume for dev purpose\n# 2021-11-11: update to PHP v8.1\n\nFROM centos:centos7\nMAINTAINER Louis BAYLE <lbayle.work@gmail.com>\n\n# ====================================================\n# Container with Apache, PHP8.1, Mantis, CodevTT\n# ====================================================\n# https://hub.docker.com/r/lbayle/codevtt/\n\n# ====================================================\n# build\n# ====================================================\n# docker build --rm -t codevtt:dev8 .\n\n# ====================================================\n# run with docker-compose\n# ====================================================\n\n# docker-compose.yml is here:\n# https://github.com/lbayle/codev/blob/master/doc/docker/docker-compose.yml\n\n# run:\n# git clone https://github.com/lbayle/codev.git /data/docker/codevtt/src\n# docker-compose up -d\n# docker exec -i docker-mariadb-1 mysql -uroot -pmy_password --force bugtracker < mantis_codevtt_freshInstall.sql\n\n# ====================================================\n\n# Set ATOS proxy\n#ENV http_proxy=http://193.56.47.8:8080\n#ENV https_proxy=http://193.56.47.8:8080\n#RUN sed -i '2iproxy=http:\\/\\/193.56.47.8:8080' /etc/yum.conf\n\n# ------------------\n# Add Epel & Remi repositories\nRUN yum -y update && \\\n    yum -y install --setopt=tsflags=nodocs epel-release && \\\n    rpm -Uvh https://rpms.remirepo.net/enterprise/remi-release-7.rpm && \\\n    yum clean all && rm -rf /var/cache/yum\n\n# ------------------\nRUN rpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY-EPEL-7 /etc/pki/rpm-gpg/RPM-GPG-KEY-remi /etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7\n\n# ------------------\n# Reinstall glibc-common for i18n.\n# -> this fixes the case where only english is available in CodevTT\nRUN yum -y --setopt=override_install_langs=all reinstall glibc-common && yum clean all\n\n# ------------------\n# install tools\nRUN yum -y install \\\n        vim-enhanced \\\n        wget \\\n        git \\\n        git-gui \\\n        unzip \\\n        p7zip && \\\n    yum clean all && rm -rf /var/cache/yum\n\n# ------------------\n# install MySQL command-line client (for debug purpose)\n#RUN yum -y --setopt=tsflags=nodocs install mariadb && yum clean all\n\n# ------------------\n# install Apache\nRUN yum -y --setopt=tsflags=nodocs install \\\n        httpd \\\n        mod_ssl \\\n        openssl && \\\n    yum clean all\n\n# Installing PHP 8.1\nRUN yum -y --enablerepo=remi-php81 install \\\n        php-cli \\\n        php \\\n        php-fpm \\\n        php-common \\\n        php-mysqlnd \\\n        php-xml \\\n        php-adodb \\\n        php-curl \\\n        php-gd \\\n        php-mcrypt \\\n        php-ldap \\\n        php-imap \\\n        php-soap \\\n        php-mbstring \\\n        php-pecl-memcache \\\n        php-pecl-memcached \\\n        php-pecl-zip \\\n        php-pecl-xdebug \\\n        php-pear \\\n        php-pdo \\\n        php-bcmath \\\n        php-process \\\n        php-tidy \\\n        php-intl && \\\n    yum clean all && rm -rf /var/cache/yum\n\n# ------------------\n\n# set system timezone\nENV TZ=Europe/Paris\nRUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone\n\n# set PHP timezone\nRUN echo 'date.timezone=Europe/Paris' > /etc/php.d/00-docker-php-date-timezone.ini\n#RUN sed -i \"s/^;date.timezone =.*$/date.timezone = \\\"Europe\\/Paris\\\"/\" /etc/php.ini\n\n# set PHP session lifetime (1 day)\nRUN echo \"session.gc_maxlifetime = 86400\" > /etc/php.d/00-docker-php-session.ini\n\n# ------------------\n# install MantisBT\n\nENV MANTIS_VER 2.25.2\nENV MANTIS_URL https://downloads.sourceforge.net/project/mantisbt/mantis-stable/${MANTIS_VER}/mantisbt-${MANTIS_VER}.tar.gz\nENV MANTIS_FILE mantisbt-${MANTIS_VER}.tar.gz\n\nRUN set -xe \\\n    && cd /var/www/html \\\n    && wget ${MANTIS_URL} \\\n    && tar -xvf ${MANTIS_FILE} \\\n    && rm ${MANTIS_FILE} \\\n    && mv mantisbt-${MANTIS_VER} mantis \\\n    && chown -R apache:apache mantis \\\n    && chmod -R g+w mantis\n\n# ------------------\n# install CodevTT\n\n# no CodevTT install, we want a volume to a local install\n# this is usefull for developping and/or pulling latest changes from gitlab\n\n# add mantis plugin (in case you don't mount a volume for /var/www/html/mantis/plugins)\nRUN set -xe \\\n    && cd /var/www/html/mantis/plugins \\\n    && ln -s /var/www/html/codevtt/mantis_plugin/mantis_2_0/CodevTT \\\n    && mkdir -p /var/www/html/codevtt \\\n    && mkdir -p /tmp/codevtt \\\n    && chown -R apache:apache /tmp/codevtt \\\n    && chown -R apache:apache /var/www/html/codevtt\n\n# ------------------\n# Update httpd.conf in order to restrict access as defined by .htaccess file.\n# .htaccess files are not evaluated since a default apache install does not allow to override directives in /var/www\nRUN set -xe \\\n    && echo \"#Mantis specific access policy\" > /etc/httpd/conf.d/mantis.conf \\\n    && echo \"#CodevTT specific access policy\" > /etc/httpd/conf.d/codevtt.conf \\\n    && for f in $(find /var/www/html/mantis -name .htaccess) ; do \\\n    echo \"<Directory $(dirname $f)>\" >> /etc/httpd/conf.d/mantis.conf \\\n    && cat $f >> /etc/httpd/conf.d/mantis.conf \\\n    && echo -e \"\\n</Directory>\\n\" >> /etc/httpd/conf.d/mantis.conf \\\n    ; done \\\n    && for f in $(find /var/www/html/codevtt -name .htaccess) ; do \\\n    echo \"<Directory $(dirname $f)>\" >> /etc/httpd/conf.d/codevtt.conf \\\n    && cat $f >> /etc/httpd/conf.d/codevtt.conf \\\n    && echo -e \"\\n</Directory>\\n\" >> /etc/httpd/conf.d/codevtt.conf \\\n    ; done\n\n# ------------------\n# Adding config files (bugtracker)\nADD httpd_config/ssl.conf                      /etc/httpd/conf.d/ssl.conf\nADD httpd_config/php.ini                       /etc\nADD mantis_config/config_inc.php               /var/www/html/mantis/config\nADD mantis_config/custom_constants_inc.php     /var/www/html/mantis/config\nADD mantis_config/custom_relationships_inc.php /var/www/html/mantis/config\nADD mantis_config/custom_strings_inc.php       /var/www/html/mantis/config\nADD codevtt_config/config.ini                  /var/www/html/codevtt/config\nADD codevtt_config/log4php.xml                 /var/www/html/codevtt\nADD index.html                                 /var/www/html/index.html\n\n# ------------------\n\nEXPOSE 80\nENTRYPOINT [\"/usr/sbin/httpd\"]\nCMD [\"-D\", \"FOREGROUND\"]\n"
}