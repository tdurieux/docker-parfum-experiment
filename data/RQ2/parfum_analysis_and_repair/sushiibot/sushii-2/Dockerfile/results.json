{
  "startTime": 1674255136610,
  "endTime": 1674255137357,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 22,
        "columnEnd": 67
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Generic Dockerfile which can build any sushii-2 packages\n# docker build --build-arg TARGET=sushii-2 .\n\nFROM rust:1.52 as build\n\n# Which package to build\nARG TARGET\n\nWORKDIR /usr/src/sushii\n# Create a new empty shell project\nRUN USER=root cargo new ${TARGET} --bin\n\n# Copy over root manifests, Cargo.lock\nCOPY ./Cargo.lock ./Cargo.toml ./\n\n# Copy local dependencies, this might be unused by some\nCOPY ./sushii-model ./sushii-model\n\n# switch to target workspace project to run following commands in target dir\nWORKDIR /usr/src/sushii/${TARGET}\n\n# If there's a build.rs required in Cargo.toml\n# This requires first file to always exist, 2nd one with * as optional\nCOPY ./${TARGET}/Cargo.toml ./${TARGET}/build.rs* ./\n\n# Cache dependencies\nRUN cargo build --release\nRUN rm src/*.rs\n\n# Copy source tree, migrations, queries, sqlx data\nCOPY ./${TARGET}/ ./\n\n# Remove dummy compiled files (in workspace root)\nRUN rm ../target/release/deps/*sushii*\n\n# Test and build the actual package\nRUN cargo test --release --locked\nRUN cargo build --release --locked\n\n## Final base image with only the built binary\nFROM debian:buster-slim\nARG TARGET\nENV TARGET ${TARGET}\n\nWORKDIR /config\n\n# Fix sentry HTTPS calls with ca-certificates:\n# https://github.com/getsentry/sentry-rust/issues/239\nRUN apt-get update && apt-get install --no-install-recommends -y libssl-dev ca-certificates && rm -rf /var/lib/apt/lists/*\n\n# Target dir is still in workspace root\nCOPY --from=build /usr/src/sushii/target/release/${TARGET} /usr/local/bin/${TARGET}\n\nEXPOSE 9888\nENTRYPOINT \"${TARGET}\"\n"
}