diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/librephotos/librephotos-docker/backend/base/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/librephotos/librephotos-docker/backend/base/Dockerfile/repaired.Dockerfile
index abac32d..fb0aabb 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/librephotos/librephotos-docker/backend/base/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/librephotos/librephotos-docker/backend/base/Dockerfile/repaired.Dockerfile
@@ -4,10 +4,10 @@ ENV DEBIAN_FRONTEND=noninteractive
 
 # Install python
 RUN apt-get update \
-  && apt-get install -y python3-pip python3-dev \
+  && apt-get install --no-install-recommends -y python3-pip python3-dev \
   && cd /usr/local/bin \
   && ln -s /usr/bin/python3 python \
-  && pip3 install --upgrade pip
+  && pip3 install --no-cache-dir --upgrade pip && rm -rf /var/lib/apt/lists/*;
 
 # system packages installation
 RUN apt-get update && \
@@ -53,7 +53,7 @@ RUN apt-get update && \
 		unzip && \
     apt-get clean && \
     rm -rf /var/lib/apt/lists/*
-    
+
 RUN if [ "$TARGETPLATFORM" = "linux/arm64" ]; then pip3 install --no-cache-dir torch torchvision -f https://torch.kmtea.eu/whl/stable.html; else pip3 install --no-cache-dir torch torchvision; fi
 
 RUN pip3 install --no-cache-dir pyvips==2.1.15 cmake==3.21.2
@@ -63,25 +63,25 @@ WORKDIR /tmp/builds
 RUN git clone https://github.com/LibRaw/LibRaw && \
 	cd LibRaw && \ 
 	autoreconf --install && \
-	./configure && \
+	./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" && \
 	make && \
 	make install
 
 #Build and install imagemagick
 WORKDIR /tmp/builds
 ARG IMAGEMAGICK_VERSION=7.1.0-17
-RUN curl -SL https://www.imagemagick.org/download/releases/ImageMagick-${IMAGEMAGICK_VERSION}.tar.gz | tar -zx && \
+RUN curl -f -SL https://www.imagemagick.org/download/releases/ImageMagick-${IMAGEMAGICK_VERSION}.tar.gz | tar -zx && \
 	cd ImageMagick-${IMAGEMAGICK_VERSION} && \
-	./configure --with-modules && \
+	./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --with-modules && \
 	make install && \
 	ldconfig /usr/local/lib
 
 # Build and install libvips
 WORKDIR /tmp/builds
 ARG VIPSVERSION=8.11.0
-RUN curl -SL https://github.com/libvips/libvips/releases/download/v${VIPSVERSION}/vips-${VIPSVERSION}.tar.gz | tar -xz \ 
-	&& cd vips-${VIPSVERSION} \ 
-	&& ./configure \ 
-	&& make V=0 \ 
-	&& make install \ 
+RUN curl -f -SL https://github.com/libvips/libvips/releases/download/v${VIPSVERSION}/vips-${VIPSVERSION}.tar.gz | tar -xz \
+	&& cd vips-${VIPSVERSION} \
+	&& ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
+	&& make V=0 \
+	&& make install \
 	&& ldconfig