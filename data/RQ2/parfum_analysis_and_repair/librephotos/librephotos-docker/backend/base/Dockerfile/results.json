{
  "startTime": 1674255216006,
  "endTime": 1674255218050,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 4,
        "columnEnd": 100
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 81,
        "lineEnd": 81,
        "columnStart": 4,
        "columnEnd": 108
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 5,
        "columnEnd": 31
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 1,
        "columnEnd": 12
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 74,
        "lineEnd": 74,
        "columnStart": 1,
        "columnEnd": 27
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 83,
        "lineEnd": 83,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 5,
        "columnEnd": 47
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 5,
        "columnEnd": 47
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:hirsute\nARG TARGETPLATFORM\nENV DEBIAN_FRONTEND=noninteractive\n\n# Install python\nRUN apt-get update \\\n  && apt-get install --no-install-recommends -y python3-pip python3-dev \\\n  && cd /usr/local/bin \\\n  && ln -s /usr/bin/python3 python \\\n  && pip3 install --no-cache-dir --upgrade pip && rm -rf /var/lib/apt/lists/*;\n\n# system packages installation\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n\t\tbuild-essential \\\n\t\tbzip2 \\\n\t\tcurl \\\n\t\tffmpeg \\\n\t\tgit \\\n\t\tlibboost-all-dev \\\n\t\tlibcfitsio-dev \\ \n\t\tlibexif-dev \\\n\t\tlibexpat-dev \\\n\t\tlibexpat1-dev \\ \n\t\tlibgif-dev \\\n\t\tlibgl1-mesa-glx \\\n\t\tlibglib2.0-dev \\\n\t\tlibgsf-1-dev \\ \n\t\tlibheif-dev \\\n\t\tlibimage-exiftool-perl \\\n\t\tlibimagequant-dev \\\n\t\tlibjpeg-dev \\\n\t\tliblapack-dev \\\n\t\tliblcms2-dev \\\n\t\tlibmagic1 \\\n\t\tlibopenblas-dev \\\n\t\tlibopenexr-dev \\ \n\t\tliborc-dev \\\n\t\tlibpng-dev \\\n\t\tlibpq-dev \\\n\t\tlibraw-dev \\\n\t\tlibrsvg2-dev \\\n\t\tlibsm6 \\\n\t\tlibtiff5-dev \\ \n\t\tlibtool \\ \n\t\tlibtool-bin \\\n\t\tlibwebp-dev \\\n\t\tlibxrender-dev \\\n\t\tpkg-config \\ \n\t\trustc \\ \n\t\tlibtinfo5 \\\n\t\tswig \\\n\t\tunzip && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/*\n\nRUN if [ \"$TARGETPLATFORM\" = \"linux/arm64\" ]; then pip3 install --no-cache-dir torch torchvision -f https://torch.kmtea.eu/whl/stable.html; else pip3 install --no-cache-dir torch torchvision; fi\n\nRUN pip3 install --no-cache-dir pyvips==2.1.15 cmake==3.21.2\n\n#Build and install libraw\nWORKDIR /tmp/builds\nRUN git clone https://github.com/LibRaw/LibRaw && \\\n\tcd LibRaw && \\ \n\tautoreconf --install && \\\n\t./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n\tmake && \\\n\tmake install\n\n#Build and install imagemagick\nWORKDIR /tmp/builds\nARG IMAGEMAGICK_VERSION=7.1.0-17\nRUN curl -f -SL https://www.imagemagick.org/download/releases/ImageMagick-${IMAGEMAGICK_VERSION}.tar.gz | tar -zx && \\\n\tcd ImageMagick-${IMAGEMAGICK_VERSION} && \\\n\t./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-modules && \\\n\tmake install && \\\n\tldconfig /usr/local/lib\n\n# Build and install libvips\nWORKDIR /tmp/builds\nARG VIPSVERSION=8.11.0\nRUN curl -f -SL https://github.com/libvips/libvips/releases/download/v${VIPSVERSION}/vips-${VIPSVERSION}.tar.gz | tar -xz \\\n\t&& cd vips-${VIPSVERSION} \\\n\t&& ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n\t&& make V=0 \\\n\t&& make install \\\n\t&& ldconfig\n"
}