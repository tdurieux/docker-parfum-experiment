{
  "startTime": 1674248144147,
  "endTime": 1674248144693,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 25
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Extending image\nFROM node:carbon as builder\n\n# RUN apt-get update\n# RUN apt-get upgrade -y\n# RUN apt-get -y install autoconf automake libtool nasm make pkg-config git apt-utils\n\n# Create app directory\nRUN mkdir -p /usr/src/app && rm -rf /usr/src/app\nWORKDIR /usr/src/app\n\n# Versions\nRUN npm -v\nRUN node -v\n\n# Install app dependencies\nCOPY package.json /usr/src/app/\nCOPY package-lock.json /usr/src/app/\n\nRUN npm install && npm cache clean --force;\n\n# Bundle app source\nCOPY . /usr/src/app\nRUN npm run build:dev\n\nFROM nginx:1.13.9-alpine\n# nginx의 기본 설정을 삭제하고 앱에서 설정한 파일을 복사\nRUN rm -rf /etc/nginx/conf.d\nCOPY conf /etc/nginx\n\n# 위에서 생성한 앱의 빌드산출물을 nginx의 샘플 앱이 사용하던 폴더로 이동\nCOPY --from=builder /usr/src/app/build /usr/share/nginx/html\n\n# 80포트 오픈하고 nginx 실행\nEXPOSE 80\nCMD [\"nginx\", \"-g\", \"daemon off;\"]\n"
}