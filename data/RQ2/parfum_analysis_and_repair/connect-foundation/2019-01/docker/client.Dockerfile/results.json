{
  "startTime": 1674216446353,
  "endTime": 1674216447293,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 28
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# 1. Build react app\nFROM node:10.16.0-alpine as build-react\n\nARG REACT_APP_LOCAL_CLIENT_ID\nARG REACT_APP_PRODUCTION_CLIENT_ID\nARG REACT_APP_JWT_SECRET_KEY\nARG REACT_APP_JWT_ALGORITHM\n\nENV REACT_APP_LOCAL_CLIENT_ID ${REACT_APP_LOCAL_CLIENT_ID}\nENV REACT_APP_PRODUCTION_CLIENT_ID ${REACT_APP_PRODUCTION_CLIENT_ID}\nENV REACT_APP_JWT_SECRET_KEY ${REACT_APP_JWT_SECRET_KEY}\nENV REACT_APP_JWT_ALGORITHM ${REACT_APP_JWT_ALGORITHM}\n\nWORKDIR /usr/src/client\n\nCOPY package.json ./\nRUN npm install --production && npm cache clean --force;\nCOPY . .\n\nRUN npm run build\n\n\n# 2. Move built react files & Set nginx\nFROM nginx:1.17.5-alpine\n\nWORKDIR /usr/src/nginx\n\nCOPY ./nginx.conf /etc/nginx/conf.d/default.conf\nCOPY --from=build-react /usr/src/client/build ./code-avengers\n\nEXPOSE 443\nCMD [\"nginx\", \"-g\", \"daemon off;\"]\n\n# 참고: https://docs.docker.com/develop/develop-images/multistage-build/"
}