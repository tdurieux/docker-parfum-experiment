{
  "startTime": 1674249116829,
  "endTime": 1674249118899,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 24,
        "columnStart": 18,
        "columnEnd": 16
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:buster-slim as builder\n\nARG proxy=\n\nENV http_proxy=${proxy}\nENV https_proxy=${proxy}\nENV ftp_proxy=${proxy}\n\n# Environnement de compilation\n\nRUN apt update && apt -y --no-install-recommends install \\\n    build-essential cmake \\\n    libfcgi-dev \\\n    libtinyxml-dev \\\n    libopenjp2-7-dev \\\n    gettext \\\n    zlib1g-dev \\\n    libtiff5-dev \\\n    libpng-dev \\\n    libcurl4-openssl-dev \\\n    libssl-dev \\\n    libturbojpeg0-dev \\\n    libjpeg-dev \\\n    libc6-dev \\\n    librados-dev \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Compilation et installation\n\nCOPY ./CMakeLists.txt /sources/CMakeLists.txt\nCOPY ./cmake /sources/cmake\nCOPY ./lib /sources/lib\nCOPY ./rok4server /sources/rok4server\nCOPY ./README.md /sources/README.md\nCOPY ./rok4version.h.in /sources/rok4version.h.in\nCOPY ./config/proj /sources/config/proj\nCOPY ./config/styles /sources/config/styles\nCOPY ./config/tileMatrixSet /sources/config/tileMatrixSet\n\nRUN mkdir -p /build\nWORKDIR /build\n\nRUN cmake -DCMAKE_INSTALL_PREFIX=/ -DBUILD_OBJECT=1 -DBUILD_DOC=0 -DUNITTEST=0 -DDEBUG_BUILD=0 -DBUILD_BE4=0 /sources/ && make && make install && rm -r /sources /build\n\nRUN apt remove -y build-essential cmake libfcgi-dev libtinyxml-dev libopenjp2-7-dev zlib1g-dev libtiff5-dev libpng-dev libcurl4-openssl-dev libssl-dev libturbojpeg0-dev libjpeg-dev libc6-dev librados-dev\n\nFROM builder\n\nENV PROJ_LIB=/etc/rok4/config/proj\n\nWORKDIR /\n\n# Configuration\n\nCOPY ./config/server.conf.docker /etc/rok4/config/server.conf\nCOPY ./config/services.conf.docker /etc/rok4/config/services.conf\nCOPY ./config/restrictedCRSList.txt.docker /etc/rok4/config/restrictedCRSList.txt\n\nCOPY ./docker/rok4server/start_rok4server.sh /start_rok4server.sh\nRUN chmod +x /start_rok4server.sh\nCOPY ./docker/rok4server/defaults /etc/default/rok4server\n\nRUN mkdir /layers /pyramids\n\nVOLUME /layers\nVOLUME /pyramids\n\nEXPOSE 9000\n\nCMD /start_rok4server.sh\n"
}