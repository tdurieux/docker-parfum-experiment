{
  "startTime": 1674255438336,
  "endTime": 1674255438730,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 7,
        "columnEnd": 18
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 7,
        "columnEnd": 18
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 7,
        "columnEnd": 85
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 7,
        "columnEnd": 85
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 49
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 73
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu\n\n# because tzdata still is stupid\nENV DEBIAN_FRONTEND=noninteractive\n\nRUN apt-get update \\\n    && apt-get install --no-install-recommends -yq curl libudev-dev git build-essential libssl-dev pkg-config && rm -rf /var/lib/apt/lists/*;\n\n# make sure the setup.sh script can work\nWORKDIR /app/bin/\nCOPY bin/setup.sh .\nRUN ./setup.sh\n\n# use the .profile and .bashrc files setup above\nSHELL [\"/bin/bash\", \"-c\"]\n\n# node-gyp needs python...\nRUN apt-get install --no-install-recommends -yq python3 python-is-python3 && rm -rf /var/lib/apt/lists/*;\nWORKDIR /app/\n# and now the source\n#COPY [\"package.json\", \"package-lock.json*\", \".erb\", \"./\"]\nCOPY . .\nRUN rm -rf node_modules src/node_modules release/app/node_modules\nRUN source /root/.profile && source $HOME/.nvm/nvm.sh \\\n    && npm install && npm cache clean --force;\n\n# more DEBUG build info\nENV DEBUG=electron-rebuild\n\nWORKDIR /app/release/app/\n#COPY [\"package.json\", \"package-lock.json*\", \"./\"]\nRUN source /root/.profile && source $HOME/.nvm/nvm.sh \\\n    && npm install && npm cache clean --force;\n\nWORKDIR /app/\n#COPY . .\nRUN source /root/.profile && source $HOME/.nvm/nvm.sh \\\n    && npm run package\n"
}