{
  "startTime": 1674250721920,
  "endTime": 1674250722602,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 7,
        "columnEnd": 32
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 7,
        "columnEnd": 12
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:11-alpine\n\nWORKDIR /opt/app\n\n# copy requirements\nCOPY package*.json ./\n\n# install build tools\nRUN apk add -qU --no-cache -t .fetch-deps git make python g++ \\\n    && npm install -g npm@latest \\\n    && npm i \\\n    && apk del -q .fetch-deps && npm cache clean --force;\n\n# copy the code\nCOPY . .\n\n# transpile typescript\nRUN npm run transpile\n\n# set build meta data\nARG BUILD_COMMIT\nARG BUILD_TIMESTAMP\n\nENV BUILD_COMMIT $BUILD_COMMIT\nENV BUILD_TIMESTAMP $BUILD_TIMESTAMP\n\nEXPOSE 80\nHEALTHCHECK --interval=1m --timeout=5s --retries=3 CMD wget localhost/status -q -O - > /dev/null 2>&1\n\n# run the api server\nCMD [ \"npm\", \"run\", \"start\" ]\n"
}