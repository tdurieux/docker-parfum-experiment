{
  "startTime": 1674250960038,
  "endTime": 1674250961391,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 65
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 53
      }
    }
  ],
  "repairedDockerfile": "FROM python:3.6.15\nENV DEBIAN_FRONTEND=noninteractive\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y wget build-essential curl nginx supervisor && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /app\n\nCOPY requirements.txt nltk_setup.py /app/\n\nRUN touch /app/config && \\\n    pip install --no-cache-dir -U pip &&  \\\n    pip install --no-cache-dir -r /app/requirements.txt && \\\n    pip check && \\\n    python /app/nltk_setup.py\n\nCOPY docker/supervisord.conf /etc/supervisor/conf.d/supervisord.conf\nCOPY docker/nginx.conf /etc/nginx/nginx.conf\nCOPY docker/default.site.conf /etc/nginx/sites-available/default\n\n# TODO: Separate this out to a dev/test docker image\nRUN curl -f -sL https://deb.nodesource.com/setup_12.x | bash && \\\n    apt-get install -y --no-install-recommends nodejs && \\\n    npm install -g newman && \\\n    npm install -g newman-reporter-htmlextra && \\\n    rm -rf /tmp/* ~/.cache/pip /var/lib/apt/lists/* && npm cache clean --force;\n\n\nENV NAME=\"chatbot_ner\"\nENV DJANGODIR=/app\nENV NUM_WORKERS=4\nENV DJANGO_SETTINGS_MODULE=chatbot_ner.settings\nENV PORT=8081\nENV TIMEOUT=600\n# Important change this via .env (the file copied from .env.example)\nENV SECRET_KEY=!yqqcz-v@(s@kpygpvomcuu3il0q1&qtpz)e_g0ulo-sdv%c0c\n\nADD . /app\nEXPOSE 8081\n# entrypoint/cmd script\nCMD /app/docker/cmd.sh\n"
}