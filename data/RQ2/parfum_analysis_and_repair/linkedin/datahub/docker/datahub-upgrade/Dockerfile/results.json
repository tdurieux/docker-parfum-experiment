{
  "startTime": 1674217764600,
  "endTime": 1674217765515,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 7,
        "columnEnd": 136
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Defining environment\nARG APP_ENV=prod\n\nFROM adoptopenjdk/openjdk8:alpine-jre as base\nENV DOCKERIZE_VERSION v0.6.1\nRUN apk --no-cache add curl tar \\\n    && curl -f -L https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz | tar -C /usr/local/bin -xzv\n\n# Workaround alpine issue with /lib64 not being in the ld library path\n# https://gitlab.alpinelinux.org/alpine/aports/-/issues/10140\nENV LD_LIBRARY_PATH=/lib64\n\nFROM openjdk:8 as prod-build\nCOPY . datahub-src\nRUN cd datahub-src && ./gradlew :datahub-upgrade:build\nRUN cd datahub-src && cp datahub-upgrade/build/libs/datahub-upgrade.jar ../datahub-upgrade.jar\n\nFROM base as prod-install\nCOPY --from=prod-build /datahub-upgrade.jar /datahub/datahub-upgrade/bin/\nCOPY --from=prod-build /datahub-src/metadata-models/src/main/resources/entity-registry.yml /datahub/datahub-gms/resources/entity-registry.yml\n\nFROM base as dev-install\n# Dummy stage for development. Assumes code is built on your machine and mounted to this image.\n# See this excellent thread https://github.com/docker/cli/issues/1134\n\nFROM ${APP_ENV}-install as final\n\nRUN addgroup -S datahub && adduser -S datahub -G datahub\nUSER datahub\n\nENTRYPOINT [\"java\", \"-jar\", \"/datahub/datahub-upgrade/bin/datahub-upgrade.jar\"]\n"
}