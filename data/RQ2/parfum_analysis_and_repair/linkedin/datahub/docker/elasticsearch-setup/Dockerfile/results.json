{
  "startTime": 1674252663509,
  "endTime": 1674252664486,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 7,
        "columnEnd": 136
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# This \"container\" is a workaround to pre-create search indices\n\n# Defining environment\nARG APP_ENV=prod\n\nFROM alpine:3 as base\nENV DOCKERIZE_VERSION v0.6.1\nRUN apk add --no-cache curl jq tar bash coreutils \\\n    && curl -f -L https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz | tar -C /usr/local/bin -xzv\n\nFROM base AS prod-install\n\nCOPY docker/elasticsearch-setup/create-indices.sh /\nRUN chmod 755 create-indices.sh\nCOPY metadata-service/restli-servlet-impl/src/main/resources/index /index\n\nFROM base AS dev-install\n# Dummy stage for development. Use local files for setup\n# See this excellent thread https://github.com/docker/cli/issues/1134\n\nFROM ${APP_ENV}-install AS final\nCMD if [ \"$ELASTICSEARCH_USE_SSL\" == \"true\" ]; then ELASTICSEARCH_PROTOCOL=https; else ELASTICSEARCH_PROTOCOL=http; fi \\\n    && if [[ -n \"$ELASTICSEARCH_USERNAME\" ]]; then ELASTICSEARCH_HTTP_HEADERS=\"Authorization: Basic $(echo -ne \"$ELASTICSEARCH_USERNAME:$ELASTICSEARCH_PASSWORD\" | base64)\"; else ELASTICSEARCH_HTTP_HEADERS=\"Accept: */*\"; fi \\\n    && if [[ \"$SKIP_ELASTICSEARCH_CHECK\" != \"true\" ]]; then \\\n        dockerize -wait $ELASTICSEARCH_PROTOCOL://$ELASTICSEARCH_HOST:$ELASTICSEARCH_PORT -wait-http-header \"${ELASTICSEARCH_HTTP_HEADERS}\" -timeout 120s /create-indices.sh; \\\n    else /create-indices.sh; fi\n"
}