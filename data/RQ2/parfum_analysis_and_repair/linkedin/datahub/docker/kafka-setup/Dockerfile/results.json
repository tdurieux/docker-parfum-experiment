{
  "startTime": 1674219254869,
  "endTime": 1674219255976,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 14,
        "columnEnd": 87
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 5,
        "columnEnd": 92
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 5,
        "columnEnd": 110
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Using as a base image because to get the needed jars for confluent utils\nFROM confluentinc/cp-base-new:6.1.4 as confluent_base\n\n# Based on https://github.com/blacktop's alpine kafka build\nFROM python:3-alpine\n\nENV KAFKA_VERSION 2.8.1\nENV SCALA_VERSION 2.13\n\n# Set the classpath for JARs required by `cub`\nENV CUB_CLASSPATH='\"/usr/share/java/cp-base-new/*\"'\n\n# Confluent Docker Utils Version (Namely the tag or branch to grab from git to install)\nARG PYTHON_CONFLUENT_DOCKER_UTILS_VERSION=\"v0.0.49\"\n\n# This can be overriden for an offline/air-gapped builds\nARG PYTHON_CONFLUENT_DOCKER_UTILS_INSTALL_SPEC=\"git+https://github.com/confluentinc/confluent-docker-utils@${PYTHON_CONFLUENT_DOCKER_UTILS_VERSION}\"\n\nLABEL name=\"kafka\" version=${KAFKA_VERSION}\n\nRUN apk add --no-cache openjdk8-jre bash coreutils\nRUN apk add --no-cache -t .build-deps git curl ca-certificates jq gcc musl-dev libffi-dev zip\nRUN mkdir -p /opt \\\n  && mirror=$( curl -f --stderr /dev/null https://www.apache.org/dyn/closer.cgi\\?as_json\\=1 | jq -r '.preferred') \\\n  && curl -f -sSL \"${mirror}kafka/${KAFKA_VERSION}/kafka_${SCALA_VERSION}-${KAFKA_VERSION}.tgz\" \\\n  | tar -xzf - -C /opt \\\n  && mv /opt/kafka_${SCALA_VERSION}-${KAFKA_VERSION} /opt/kafka \\\n  && adduser -DH -s /sbin/nologin kafka \\\n  && chown -R kafka: /opt/kafka \\\n  && echo \"===> Installing python packages ...\" \\\n  && pip install --no-cache-dir jinja2 requests \\\n  && pip install --no-cache-dir --prefer-binary --prefix=/usr/local --upgrade \"${PYTHON_CONFLUENT_DOCKER_UTILS_INSTALL_SPEC}\" \\\n  && echo \"===> Applying log4j log4shell fix based on https://www.slf4j.org/log4shell.html ...\" \\\n  && zip -d /opt/kafka/libs/log4j-1.2.17.jar org/apache/log4j/net/JMSAppender.class \\\n  && rm -rf /tmp/* \\\n  && apk del --purge .build-deps\n\nENV PATH /sbin:/opt/kafka/bin/:$PATH\n\nWORKDIR /opt/kafka\n\nRUN ls -la\nCOPY --from=confluent_base /usr/share/java/cp-base-new/ /usr/share/java/cp-base-new/\n\nENV METADATA_AUDIT_EVENT_NAME=\"MetadataAuditEvent_v4\"\nENV METADATA_CHANGE_EVENT_NAME=\"MetadataChangeEvent_v4\"\nENV FAILED_METADATA_CHANGE_EVENT_NAME=\"FailedMetadataChangeEvent_v4\"\nENV DATAHUB_USAGE_EVENT_NAME=\"DataHubUsageEvent_v1\"\nENV METADATA_CHANGE_LOG_VERSIONED_TOPIC=\"MetadataChangeLog_Versioned_v1\"\nENV METADATA_CHANGE_LOG_TIMESERIES_TOPIC=\"MetadataChangeLog_Timeseries_v1\"\nENV METADATA_CHANGE_PROPOSAL_TOPIC=\"MetadataChangeProposal_v1\"\nENV FAILED_METADATA_CHANGE_PROPOSAL_TOPIC=\"FailedMetadataChangeProposal_v1\"\nENV PLATFORM_EVENT_TOPIC_NAME=\"PlatformEvent_v1\"\n\nCOPY ./kafka-setup.sh ./kafka-setup.sh\n\nCMD ./kafka-setup.sh\n"
}