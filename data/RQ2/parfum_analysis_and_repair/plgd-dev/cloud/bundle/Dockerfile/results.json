{
  "startTime": 1674253278303,
  "endTime": 1674253279562,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 4,
        "columnEnd": 135
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 4,
        "columnEnd": 115
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 87,
        "lineEnd": 87,
        "columnStart": 15,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 91,
        "lineEnd": 91,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 97,
        "lineEnd": 97,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 91,
        "lineEnd": 91,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 97,
        "lineEnd": 97,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 91,
        "lineEnd": 91,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 97,
        "lineEnd": 97,
        "columnStart": 4,
        "columnEnd": 53
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 91,
        "lineEnd": 91,
        "columnStart": 4,
        "columnEnd": 109
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 97,
        "lineEnd": 97,
        "columnStart": 4,
        "columnEnd": 77
      }
    }
  ],
  "repairedDockerfile": "FROM golang:1.18.1-alpine AS build\nRUN apk add --no-cache curl git build-base\nWORKDIR $GOPATH/src/github.com/plgd-dev/hub\nCOPY go.mod go.sum ./\nRUN go mod download\nCOPY . .\nRUN ( cd /usr/local/go && patch -p1 < $GOPATH/src/github.com/plgd-dev/hub/tools/docker/patches/shrink_tls_conn.patch )\nARG root_directory=$GOPATH/src/github.com/plgd-dev/hub\n\n#coap-gateway\nARG service=coap-gateway\nWORKDIR $root_directory/$service\nRUN go build -ldflags \"-linkmode external -extldflags -static\" -o /go/bin/$service ./cmd/service\n\n#grpc-gateway\nARG service=grpc-gateway\nWORKDIR $root_directory/$service\nRUN go build -ldflags \"-linkmode external -extldflags -static\" -o /go/bin/$service ./cmd/service\n\n#http-gateway\nARG service=http-gateway\nWORKDIR $root_directory/$service\nRUN go build -ldflags \"-linkmode external -extldflags -static\" -o /go/bin/$service ./cmd/service\n\n#resource-directory\nARG service=resource-directory\nWORKDIR $root_directory/$service\nRUN go build -ldflags \"-linkmode external -extldflags -static\" -o /go/bin/$service ./cmd/service\n\n#resource-aggregate\nARG service=resource-aggregate\nWORKDIR $root_directory/$service\nRUN go build -ldflags \"-linkmode external -extldflags -static\" -o /go/bin/$service ./cmd/service\n\n#identity-store\nARG service=identity-store\nWORKDIR $root_directory/$service\nRUN go build -ldflags \"-linkmode external -extldflags -static\" -o /go/bin/$service ./cmd/service\n\n#certificate-authority\nARG service=certificate-authority\nWORKDIR $root_directory/$service\nRUN go build -ldflags \"-linkmode external -extldflags -static\" -o /go/bin/$service ./cmd/service\n\n#oauth-server\nARG service=oauth-server\nWORKDIR $root_directory/test/$service\nRUN go build -ldflags \"-linkmode external -extldflags -static\" -o /go/bin/$service ./cmd/service\n\n#cloud2cloud-gateway\nARG service=cloud2cloud-gateway\nWORKDIR $root_directory/$service\nRUN go build -ldflags \"-linkmode external -extldflags -static\" -o /go/bin/$service ./cmd/service\n\n#cloud2cloud-connector\nARG service=cloud2cloud-connector\nWORKDIR $root_directory/$service\nRUN go build -ldflags \"-linkmode external -extldflags -static\" -o /go/bin/$service ./cmd/service\n\n\n#certificate-generator\nARG service=kit\nWORKDIR /\nRUN cd $GOPATH/pkg/mod/github.com/plgd-dev/kit/v2* && go build -ldflags \"-linkmode external -extldflags -static\" -o /go/bin/certificate-generator ./cmd/certificate-generator\n\n#nats\nWORKDIR $root_directory\nRUN apkArch=\"$(apk --print-arch)\"; \\\n    case \"$apkArch\" in \\\n        armhf) ARCH='arm' ;; \\\n        aarch64) ARCH='arm64' ;; \\\n        x86) ARCH='386' ;; \\\n        x86_64) ARCH='amd64' ;; \\\n        *) echo >&2 \"error: unsupported architecture: $apkArch\"; exit 1 ;; \\\n    esac; \\\n    curl -f -L https://github.com/nats-io/nats-server/releases/download/v2.3.1/nats-server-v2.3.1-linux-${ARCH}.zip -o ./nats-server.zip; \\\n    curl -f -L https://github.com/nats-io/natscli/releases/download/0.0.24/nats-0.0.24-linux-${ARCH}.zip -o ./nats.zip\nRUN mkdir -p ./nats-server\nRUN unzip ./nats-server.zip -d ./nats-server\nRUN cp ./nats-server/*/nats-server /go/bin/nats-server\n\nRUN mkdir -p ./nats\nRUN unzip ./nats.zip -d ./nats\nRUN cp ./nats/*/nats /go/bin/nats\n\nFROM node:12 AS build-web\nCOPY --from=build /go/src/github.com/plgd-dev/hub/http-gateway/web /web\nRUN cd /web && npm install && npm run build && npm cache clean --force;\n\nFROM ubuntu:20.04 as service\nRUN apt update\nRUN apt install --no-install-recommends -y wget gnupg iproute2 systemctl openssl nginx ca-certificates netcat && rm -rf /var/lib/apt/lists/*;\nRUN wget -qO - https://www.mongodb.org/static/pgp/server-4.4.asc | apt-key add -\nRUN ARCH=\"$(dpkg --print-architecture)\" ; \\\n    wget https://github.com/mikefarah/yq/releases/download/v4.6.3/yq_linux_${ARCH} -O /usr/bin/yq && chmod +x /usr/bin/yq ; \\\n    echo \"deb [ arch=${ARCH} ] https://repo.mongodb.org/apt/ubuntu focal/mongodb-org/4.4 multiverse\" | tee /etc/apt/sources.list.d/mongodb-org-4.4.list\nRUN apt update\nRUN apt-get install --no-install-recommends -y mongodb-org-server mongodb-org && rm -rf /var/lib/apt/lists/*;\nCOPY --from=build /go/bin/coap-gateway /usr/local/bin/coap-gateway\nCOPY --from=build /go/src/github.com/plgd-dev/hub/coap-gateway/config.yaml /configs/coap-gateway.yaml\nCOPY --from=build /go/bin/grpc-gateway /usr/local/bin/grpc-gateway\nCOPY --from=build /go/src/github.com/plgd-dev/hub/grpc-gateway/config.yaml /configs/grpc-gateway.yaml\nCOPY --from=build /go/bin/http-gateway /usr/local/bin/http-gateway\nCOPY --from=build /go/src/github.com/plgd-dev/hub/http-gateway/config.yaml /configs/http-gateway.yaml\nCOPY --from=build /go/bin/resource-directory /usr/local/bin/resource-directory\nCOPY --from=build /go/src/github.com/plgd-dev/hub/resource-directory/config.yaml /configs/resource-directory.yaml\nCOPY --from=build /go/bin/resource-aggregate /usr/local/bin/resource-aggregate\nCOPY --from=build /go/src/github.com/plgd-dev/hub/resource-aggregate/config.yaml /configs/resource-aggregate.yaml\nCOPY --from=build /go/bin/identity-store /usr/local/bin/identity-store\nCOPY --from=build /go/src/github.com/plgd-dev/hub/identity-store/config.yaml /configs/identity-store.yaml\nCOPY --from=build /go/bin/certificate-authority /usr/local/bin/certificate-authority\nCOPY --from=build /go/src/github.com/plgd-dev/hub/certificate-authority/config.yaml /configs/certificate-authority.yaml\nCOPY --from=build /go/bin/certificate-generator /usr/local/bin/certificate-generator\nCOPY --from=build /go/bin/nats-server /usr/local/bin/nats-server\nCOPY --from=build /go/bin/nats /usr/local/bin/nats\nCOPY --from=build /go/src/github.com/plgd-dev/hub/bundle/jetstream.json /configs/jetstream.json\nCOPY --from=build /go/bin/oauth-server /usr/local/bin/oauth-server\nCOPY --from=build /go/src/github.com/plgd-dev/hub/test/oauth-server/config.yaml /configs/oauth-server.yaml\nCOPY --from=build-web /web/build /usr/local/var/www\nCOPY --from=build /go/bin/cloud2cloud-gateway /usr/local/bin/cloud2cloud-gateway\nCOPY --from=build /go/src/github.com/plgd-dev/hub/cloud2cloud-gateway/config.yaml /configs/cloud2cloud-gateway.yaml\nCOPY --from=build /go/bin/cloud2cloud-connector /usr/local/bin/cloud2cloud-connector\nCOPY --from=build /go/src/github.com/plgd-dev/hub/cloud2cloud-connector/config.yaml /configs/cloud2cloud-connector.yaml\nCOPY --from=build /go/src/github.com/plgd-dev/hub/bundle/run.sh /usr/local/bin/run.sh\nCOPY --from=build /go/src/github.com/plgd-dev/hub/bundle/nginx /nginx\n\n# global\nENV FQDN=\"localhost\"\nENV LOG_DEBUG=false\nENV JETSTREAM=false\n\n# global - open telemetry collector client\nENV OPEN_TELEMETRY_EXPORTER_ENABLED=false\nENV OPEN_TELEMETRY_EXPORTER_ADDRESS=\"localhost:4317\"\nENV OPEN_TELEMETRY_EXPORTER_CERT_FILE=\"/certs/otel/cert.crt\"\nENV OPEN_TELEMETRY_EXPORTER_KEY_FILE=\"/certs/otel/cert.key\"\nENV OPEN_TELEMETRY_EXPORTER_CA_POOL=\"/certs/otel/rootca.crt\"\n\n# coap-gateway\nENV COAP_GATEWAY_UNSECURE_PORT=5683\nENV COAP_GATEWAY_UNSECURE_ADDRESS=\"0.0.0.0:$COAP_GATEWAY_UNSECURE_PORT\"\nENV COAP_GATEWAY_UNSECURE_ENABLED=true\nENV COAP_GATEWAY_PORT=5684\nENV COAP_GATEWAY_ADDRESS=\"0.0.0.0:$COAP_GATEWAY_PORT\"\nENV COAP_GATEWAY_HUB_ID=\"00000000-0000-0000-0000-000000000001\"\nENV COAP_GATEWAY_LOG_MESSAGES=true\n\n# ports\nENV NGINX_PORT=443\nENV CERTIFICATE_AUTHORITY_PORT=9087\nENV MOCK_OAUTH_SERVER_PORT=9088\nENV RESOURCE_AGGREGATE_PORT=9083\nENV RESOURCE_DIRECTORY_PORT=9082\nENV IDENTITY_STORE_PORT=9081\nENV GRPC_GATEWAY_PORT=9084\nENV HTTP_GATEWAY_PORT=9086\nENV CLOUD2CLOUD_GATEWAY_PORT=9085\nENV CLOUD2CLOUD_CONNECTOR_PORT=9089\nENV MONGO_PORT=10000\nENV NATS_PORT=10001\n\n# OAuth\nENV DEVICE_PROVIDER=plgd\nENV DEVICE_OAUTH_SCOPES=\"offline_access\"\nENV OWNER_CLAIM=\"sub\"\nENV MOCK_OAUTH_SERVER_ACCESS_TOKEN_LIFETIME=\"0s\"\n\nENTRYPOINT [\"/usr/local/bin/run.sh\"]\n"
}