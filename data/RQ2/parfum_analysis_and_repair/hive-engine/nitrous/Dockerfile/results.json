{
  "startTime": 1674249530633,
  "endTime": 1674249531554,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 70
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 83
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:12.16.2 as development\n\nWORKDIR /var/app\n\nCOPY package.json yarn.lock ./\nCOPY patches ./patches\n\nRUN yarn install --non-interactive --frozen-lockfile --ignore-optional && yarn cache clean;\n\nCOPY . .\n\nRUN mkdir tmp && yarn build\n\nCMD [ \"yarn\", \"run\", \"start\" ]\n\n### REMOVE DEV DEPENDENCIES ##\nFROM development as dependencies\n\nRUN yarn install --non-interactive --frozen-lockfile --ignore-optional --production && yarn cache clean;\n\n### BUILD MINIFIED PRODUCTION ##\nFROM node:12.16.2-alpine as production\n\nWORKDIR /var/app\n\nARG SOURCE_COMMIT\nENV SOURCE_COMMIT ${SOURCE_COMMIT}\nARG DOCKER_TAG\nENV DOCKER_TAG ${DOCKER_TAG}\n\nCOPY --from=dependencies /var/app/package.json /var/app/package.json\nCOPY --from=dependencies /var/app/config /var/app/config\nCOPY --from=dependencies /var/app/dist /var/app/dist\nCOPY --from=dependencies /var/app/lib /var/app/lib\nCOPY --from=dependencies /var/app/src /var/app/src\nCOPY --from=dependencies /var/app/tmp /var/app/tmp\nCOPY --from=dependencies /var/app/webpack /var/app/webpack\nCOPY --from=dependencies /var/app/node_modules /var/app/node_modules\n\nCOPY --from=dependencies /var/app/healthcheck.js /var/app/healthcheck.js\n\nHEALTHCHECK --interval=30s --timeout=5s --start-period=30s --retries=5 CMD node /var/app/healthcheck.js\n\nCMD [ \"yarn\", \"run\", \"production\" ]\n"
}