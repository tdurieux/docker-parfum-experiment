{
  "startTime": 1674255133694,
  "endTime": 1674255134426,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 395
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 9,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 9,
        "columnEnd": 27
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 9,
        "columnEnd": 27
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 9,
        "columnEnd": 51
      }
    }
  ],
  "repairedDockerfile": "# -*- mode: dockerfile -*-\n#\n# An example Dockerfile showing how to add new static C libraries using\n# musl-gcc.\n\nFROM ekidd/rust-musl-builder:1.49.0\n\n# https://rtfm.co.ua/en/docker-configure-tzdata-and-timezone-during-build/\nENV TZ=Europe/Ljubljana\nRUN sudo sh -c \"ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone\"\n\nRUN sudo apt update\n\nRUN sudo apt install --no-install-recommends tcl -y && rm -rf /var/lib/apt/lists/*;\n\n# Build a static copy of sqlcipher.\n# https://github.com/sqlcipher/sqlcipher/issues/132#issuecomment-122908672\n# also related https://discuss.zetetic.net/t/cross-compile-sqlicipher-for-arm/2104/4\n# https://github.com/sqlcipher/sqlcipher/issues/276\n# https://github.com/rust-lang/rust/issues/40049\nRUN VERS=4.4.1 && \\\n    cd /home/rust/libs && \\\n    curl -f -LO https://github.com/sqlcipher/sqlcipher/archive/v$VERS.tar.gz && \\\n    tar xzf v$VERS.tar.gz && cd sqlcipher-$VERS && \\\n    CC=musl-gcc ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --host=x86_64-pc-linux-gnu --target=x86_64-linux-musl --prefix=/usr/local/musl --disable-tcl --disable-shared --with-crypto-lib=none --enable-static=yes --enable-tempstore=yes CFLAGS=\"-DSQLITE_HAS_CODEC -DSQLCIPHER_CRYPTO_OPENSSL -I/usr/include/x86_64-linux-musl -I/usr/local/musl/include -I/usr/local/musl/include/openssl\" LDFLAGS=\" /usr/local/musl/lib/libcrypto.a\" && \\\n    make && sudo make install && \\\n    cd .. && rm -rf v$VERS.tar.gz sqlcipher-$VERS\n\nADD --chown=rust:rust ./ .\n\n# https://stackoverflow.com/questions/40695010/how-to-compile-a-static-musl-binary-of-a-rust-project-with-native-dependencies\n# https://github.com/rust-lang/rust/issues/54243\n\nENV RUSTFLAGS='-L/usr/local/musl/lib  -L/usr/lib/x86_64-linux-musl  -L/lib/x86_64-linux-musl -C linker=musl-gcc -Clink-arg=/usr/local/musl/lib/libcrypto.a -Clink-arg=/usr/local/musl/lib/libsqlcipher.a -Clink-arg=/usr/lib/x86_64-linux-musl/libc.a'\nCMD cargo build --target x86_64-unknown-linux-musl --release --bin ppcli && cp /home/rust/src/target/x86_64-unknown-linux-musl/release/ppcli /host\n"
}