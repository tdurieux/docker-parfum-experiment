{
  "startTime": 1674220057450,
  "endTime": 1674220058659,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 22,
        "columnEnd": 54
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 22,
        "columnEnd": 54
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:10\n\n# https://github.com/GoogleChrome/puppeteer/blob/master/docs/troubleshooting.md#running-puppeteer-in-docker\n\n# See https://crbug.com/795759\nRUN apt-get update && apt-get install --no-install-recommends -yq libgconf-2-4 && rm -rf /var/lib/apt/lists/*;\n\n# Install latest chrome dev package and fonts to support major charsets (Chinese, Japanese, Arabic, Hebrew, Thai and a few others)\n# Note: this installs the necessary libs to make the bundled version of Chromium that Puppeteer\n# installs, work.\nRUN apt-get update && apt-get install -y wget --no-install-recommends \\\n    && wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - \\\n    && sh -c 'echo \"deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main\" >> /etc/apt/sources.list.d/google.list' \\\n    && apt-get update \\\n    && apt-get install -y google-chrome-unstable fonts-ipafont-gothic fonts-wqy-zenhei fonts-thai-tlwg fonts-kacst ttf-freefont \\\n      fonts-noto fonts-noto-cjk fonts-ocr-b \\\n      --no-install-recommends \\\n    && rm -rf /var/lib/apt/lists/* \\\n    && apt-get purge --auto-remove -y curl \\\n    && rm -rf /src/*.deb\n\n# It's a good idea to use dumb-init to help prevent zombie chrome processes.\nADD https://github.com/Yelp/dumb-init/releases/download/v1.2.0/dumb-init_1.2.0_amd64 /usr/local/bin/dumb-init\nRUN chmod +x /usr/local/bin/dumb-init\n\n# Uncomment to skip the chromium download when installing puppeteer. If you do,\n# you'll need to launch puppeteer with:\n#     browser.launch({executablePath: 'google-chrome-unstable'})\nENV PUPPETEER_SKIP_CHROMIUM_DOWNLOAD true\n\n\n\n# Build and deploy the app.\nCOPY . /build\nWORKDIR /build\nRUN bash ./scripts/ci-install.sh \\\n    && bash ./scripts/build.sh \\\n    && mkdir -p /home/pptruser/user-data/Downloads \\\n    && mkdir -p \"/home/pptruser/user-data/Default/Code Cache/js\" \\\n    && mkdir -p /home/pptruser/user-data/Default/GPUCache \\\n    && mkdir -p /home/pptruser/user-data/Default/Cache \\\n    && mv ./packages/_debug_app /home/pptruser/app \\\n    && cd /home/pptruser/app \\\n    && rm -rf ./node_modules \\\n    && npm ci --production \\\n    && rm -rf /build \\\n    && npm cache clean --force \\\n    && rm -rf /tmp/*\n\n\n\n# Add user so we don't need --no-sandbox.\nRUN groupadd -r pptruser \\\n    && useradd -r -g pptruser -G audio,video pptruser \\\n    && mkdir -p /home/pptruser/Downloads \\\n    && chown -R pptruser:pptruser /home/pptruser\n\n# Run everything after as non-privileged user.\nUSER pptruser\n\n# Set chromium executable path for puppeteer.\nENV PUPPETEER_EXECUTABLE_PATH=/usr/bin/google-chrome-unstable\n\nWORKDIR /home/pptruser/app\nEXPOSE 3000\nENTRYPOINT [ \"dumb-init\", \"--\" ]\nCMD [ \"node\", \"dist/app.js\", \"--express-docker\" ]\n"
}