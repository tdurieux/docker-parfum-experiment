{
  "startTime": 1674250281095,
  "endTime": 1674250282455,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 92
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 100
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 34
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.7\n\nMAINTAINER Tommy Lau <tommy@gen-new.com>\n\nENV OC_VERSION=0.12.1\n\nRUN buildDeps=\" \\\n\t\tcurl \\\n\t\tg++ \\\n\t\tgnutls-dev \\\n\t\tgpgme \\\n\t\tlibev-dev \\\n\t\tlibnl3-dev \\\n\t\tlibseccomp-dev \\\n\t\tlinux-headers \\\n\t\tlinux-pam-dev \\\n\t\tlz4-dev \\\n\t\tmake \\\n\t\treadline-dev \\\n\t\ttar \\\n\t\txz \\\n\t\"; \\\n\tset -x \\\n\t&& apk add --update --virtual .build-deps $buildDeps \\\n\t&& curl -f -SL \"ftp://ftp.infradead.org/pub/ocserv/ocserv-$OC_VERSION.tar.xz\" -o ocserv.tar.xz \\\n\t&& curl -f -SL \"ftp://ftp.infradead.org/pub/ocserv/ocserv-$OC_VERSION.tar.xz.sig\" -o ocserv.tar.xz.sig \\\n\t&& gpg --batch --keyserver pgp.mit.edu --recv-key 7F343FA7 \\\n\t&& gpg --batch --keyserver pgp.mit.edu --recv-key 96865171 \\\n\t&& gpg --batch --verify ocserv.tar.xz.sig \\\n\t&& mkdir -p /usr/src/ocserv \\\n\t&& tar -xf ocserv.tar.xz -C /usr/src/ocserv --strip-components=1 \\\n\t&& rm ocserv.tar.xz* \\\n\t&& cd /usr/src/ocserv \\\n\t&& ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n\t&& make \\\n\t&& make install \\\n\t&& mkdir -p /etc/ocserv \\\n\t&& cp /usr/src/ocserv/doc/sample.config /etc/ocserv/ocserv.conf \\\n\t&& cd / \\\n\t&& rm -fr /usr/src/ocserv \\\n\t&& runDeps=\"$( \\\n\t\tscanelf --needed --nobanner /usr/local/sbin/ocserv \\\n\t\t\t| awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }' \\\n\t\t\t| xargs -r apk info --installed \\\n\t\t\t| sort -u \\\n\t\t)\" \\\n\t&& apk add --virtual .run-deps $runDeps gnutls-utils iptables libnl3 readline \\\n\t&& apk del .build-deps \\\n\t&& rm -rf /var/cache/apk/*\n\n# Setup config\nCOPY groupinfo.txt /tmp/\nRUN set -x \\\n\t&& sed -i 's/\\.\\/sample\\.passwd/\\/etc\\/ocserv\\/ocpasswd/' /etc/ocserv/ocserv.conf \\\n\t&& sed -i 's/\\(max-same-clients = \\)2/\\110/' /etc/ocserv/ocserv.conf \\\n\t&& sed -i 's/\\.\\.\\/tests/\\/etc\\/ocserv/' /etc/ocserv/ocserv.conf \\\n\t&& sed -i 's/#\\(compression.*\\)/\\1/' /etc/ocserv/ocserv.conf \\\n\t&& sed -i '/^ipv4-network = /{s/192.168.1.0/192.168.99.0/}' /etc/ocserv/ocserv.conf \\\n\t&& sed -i 's/192.168.1.2/8.8.8.8/' /etc/ocserv/ocserv.conf \\\n\t&& sed -i 's/^route/#route/' /etc/ocserv/ocserv.conf \\\n\t&& sed -i 's/^no-route/#no-route/' /etc/ocserv/ocserv.conf \\\n\t&& sed -i '/\\[vhost:www.example.com\\]/,$d' /etc/ocserv/ocserv.conf \\\n\t&& mkdir -p /etc/ocserv/config-per-group \\\n\t&& cat /tmp/groupinfo.txt >> /etc/ocserv/ocserv.conf \\\n\t&& rm -fr /tmp/cn-no-route.txt \\\n\t&& rm -fr /tmp/groupinfo.txt\n\nWORKDIR /etc/ocserv\n\nCOPY All /etc/ocserv/config-per-group/All\nCOPY cn-no-route.txt /etc/ocserv/config-per-group/Route\n\nCOPY docker-entrypoint.sh /entrypoint.sh\nENTRYPOINT [\"/entrypoint.sh\"]\n\nEXPOSE 443\nCMD [\"ocserv\", \"-c\", \"/etc/ocserv/ocserv.conf\", \"-f\"]\n"
}