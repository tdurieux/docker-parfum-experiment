{
  "startTime": 1674254693357,
  "endTime": 1674254694681,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 7,
        "columnEnd": 53
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 7,
        "columnEnd": 128
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 15,
        "columnEnd": 123
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 95,
        "columnEnd": 108
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 66,
        "columnEnd": 91
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 66,
        "columnEnd": 91
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 66,
        "columnEnd": 91
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 69,
        "columnEnd": 118
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:20.04\nSHELL [\"/bin/bash\", \"-c\"]\n\nARG RUST_VERSION=nightly\nARG DEBIAN_FRONTEND=noninteractive\n\nENV RUSTUP_HOME=/usr/local/rustup \\\n    CARGO_HOME=/usr/local/cargo \\\n    PATH=/usr/local/cargo/bin:$PATH\n\n# Install prerequisites\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n        ca-certificates \\\n        git \\\n        curl \\\n        build-essential \\\n        software-properties-common \\\n        pkg-config \\\n        python-is-python3 \\\n        python-markdown \\\n        && add-apt-repository ppa:mozillateam/ppa \\\n        && apt-get update \\\n        && apt-get install -y --no-install-recommends firefox-esr \\\n        && ln -s /usr/bin/firefox-esr /usr/bin/firefox \\\n        && rm -rf /var/lib/apt/lists/*\n\nRUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- --default-toolchain none -y \\\n    && rustup toolchain install $RUST_VERSION --allow-downgrade --profile minimal --component rustfmt clippy \\\n    && curl -f -sL https://deb.nodesource.com/setup_16.x | bash - && apt-get install --no-install-recommends -y nodejs && npm i -g solc \\\n    && curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh \\\n    && curl -f -sL https://raw.githubusercontent.com/Sarcasm/run-clang-format/master/run-clang-format.py > /opt/run-clang-format.py \\\n    && chmod +x /opt/run-clang-format.py \\\n    && ln -s /opt/run-clang-format.py /usr/bin \\\n    && rustup --version; npm cache clean --force; rm -rf /var/lib/apt/lists/*; cargo --version; rustc --version; wasm-pack --version; echo nodejs $(node -v);\n\nRUN cd /opt && curl -f -LO https://github.com/mozilla/geckodriver/releases/download/v0.28.0/geckodriver-v0.28.0-linux64.tar.gz \\\n    && tar -xzf geckodriver-v0.28.0-linux64.tar.gz geckodriver \\\n    && ln -s /opt/geckodriver /usr/bin \\\n    && geckodriver --version \\\n    && rm -rf geckodriver-v0.28.0-linux64.tar.gz\n"
}