diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/dontshavetheyak/cf2tf/.devcontainer/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/dontshavetheyak/cf2tf/.devcontainer/Dockerfile/repaired.Dockerfile
index 2d61427..04a669d 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/dontshavetheyak/cf2tf/.devcontainer/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/dontshavetheyak/cf2tf/.devcontainer/Dockerfile/repaired.Dockerfile
@@ -13,27 +13,27 @@ RUN groupadd --gid $USER_GID $USERNAME \
     #
     # [Optional] Add sudo support. Omit if you don't need to install software after connecting.
     && apt-get update \
-    && apt-get install -y sudo \
+    && apt-get install --no-install-recommends -y sudo \
     && echo $USERNAME ALL=\(root\) NOPASSWD:ALL > /etc/sudoers.d/$USERNAME \
-    && chmod 0440 /etc/sudoers.d/$USERNAME
+    && chmod 0440 /etc/sudoers.d/$USERNAME && rm -rf /var/lib/apt/lists/*;
 
 RUN rm -f /etc/apt/apt.conf.d/docker-clean; echo 'Binary::apt::APT::Keep-Downloaded-Packages "true";' > /etc/apt/apt.conf.d/keep-cache
 
 # Install dependencies.
-RUN --mount=type=cache,target=/var/cache/apt --mount=type=cache,target=/var/lib/apt \
+RUN --mount=type=cache,target=/var/cache/apt--mount=type=cache,target=/var/lib/apt \
     apt-get update && apt-get -y install --no-install-recommends \
     build-essential make libssl-dev zlib1g-dev libbz2-dev \
     libreadline-dev libsqlite3-dev curl llvm libncursesw5-dev \
     xz-utils tk-dev libxml2-dev libxmlsec1-dev libffi-dev liblzma-dev \
     wget ca-certificates apt-utils locales git openssh-client && \
-    locale-gen en_US.UTF-8
+    locale-gen en_US.UTF-8 && rm -rf /var/lib/apt/lists/*;
 
 ENV DEBIAN_FRONTEND=dialog
 
 USER $USERNAME
 
 # Install pyenv to manage multiple python installations
-RUN curl -L https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer | bash && \
+RUN curl -f -L https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer | bash && \
     echo 'export PATH="$HOME/.pyenv/bin:$PATH"' >> ~/.bashrc && \
     echo 'eval "$(pyenv init --path)"' >> ~/.bashrc && \
     echo 'eval "$(pyenv virtualenv-init -)"' >> ~/.bashrc
@@ -57,7 +57,7 @@ RUN --mount=type=cache,target=/home/vscode/.pyenv/cache,uid=1000 \
     pyenv rehash
 
 # Install poetry to manage our python project
-RUN curl -sSL https://install.python-poetry.org | python3 -
+RUN curl -f -sSL https://install.python-poetry.org | python3 -
 
 # Install nox and pre-commit to automate CI stuff
-RUN pip install --user --upgrade nox nox_poetry pre-commit
+RUN pip install --no-cache-dir --user --upgrade nox nox_poetry pre-commit