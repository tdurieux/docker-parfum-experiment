{
  "startTime": 1674249274951,
  "endTime": 1674249275967,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 21,
        "columnEnd": 32
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 4,
        "columnEnd": 89
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 4,
        "lineEnd": 11,
        "columnStart": 7,
        "columnEnd": 21
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM amazonlinux:2018.03\n\nRUN yum install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-6.noarch.rpm \\\n    && yum update -y && yum group install -y 'Development Tools' \\\n    && yum install -y \\\n        git \\\n        indent \\\n        libcurl-devel \\\n        jansson-devel \\\n        pam-devel \\\n        openssl-devel \\\n        libuuid-devel && rm -rf /var/cache/yum\n\nWORKDIR /tmp\nRUN git clone https://github.com/benmcollins/libjwt && \\\n    cd libjwt && git checkout tags/v1.10.1 && \\\n    autoreconf -i && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make && make install\n\n# See: https://github.com/antirez/sds/issues/97\nWORKDIR /tmp\nRUN git clone https://github.com/antirez/sds libsds && \\\n    cd libsds && git checkout tags/2.0.0 && \\\n    echo \"typedef int sdsvoid;\" >> sdsalloc.h && \\\n    gcc -fPIC -fstack-protector -std=c99 -pedantic -Wall \\\n        -Werror -shared -o libsds.so.2.0.0 -Wl,-soname=libsds.so.2.0.0 \\\n        sds.c sds.h sdsalloc.h && \\\n    cp -a libsds.so.2.0.0 /usr/local/lib/ && \\\n    ln -s /usr/local/lib/libsds.so.2.0.0 /usr/local/lib/libsds.so && \\\n    ln -s /usr/local/lib/libsds.so.2.0.0 /usr/local/lib/libsds.so.2 && \\\n    ldconfig && mkdir -p /usr/local/include/sds && \\\n    cp -a sds.h /usr/local/include/sds/\n\nWORKDIR /usr/src/pam_aad\nCOPY . /usr/src/pam_aad\n\nENV PAMDIR=\"/lib64/security\" \\\n    LD_LIBRARY_PATH=\"${LD_LIBRARY_PATH}:/usr/local/lib:/usr/local/lib64\"\nRUN ./bootstrap.sh && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-pam-dir=\"${PAMDIR}\" && \\\n    make && make install\n"
}