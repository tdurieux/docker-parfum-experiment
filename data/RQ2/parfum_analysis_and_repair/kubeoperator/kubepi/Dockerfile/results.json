{
  "startTime": 1674252733194,
  "endTime": 1674252734572,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 81
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 108,
        "columnEnd": 141
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 156,
        "columnEnd": 211
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 131,
        "columnEnd": 187
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 18
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 66
      }
    }
  ],
  "repairedDockerfile": "FROM node:14.18.1 as stage-web-build\n\nLABEL stage=stage-web-build\n\nRUN apt-get install --no-install-recommends -y make python gcc g++ && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /build/kubepi/web\n\nCOPY . .\n\nRUN make build_web\n\nRUN rm -fr web\n\nFROM golang:1.16 as stage-bin-build\n\nENV GOPROXY=\"https://goproxy.cn,direct\"\n\nENV CGO_ENABLED=0\n\nENV GO111MODULE=on\n\nLABEL stage=stage-bin-build\n\nWORKDIR /build/kubepi/bin\n\nCOPY --from=stage-web-build /build/kubepi/web .\n\nRUN go mod download\n\nRUN make build_gotty\nRUN make build_bin\n\nFROM alpine:3.14\n\nWORKDIR /\n\nCOPY --from=stage-bin-build /build/kubepi/bin/dist/usr /usr\n\nRUN ARCH=$(uname -m) && case $ARCH in aarch64) ARCH=\"arm64\";; x86_64) ARCH=\"amd64\";; esac && echo \"ARCH: \" $ARCH && \\\n    apk update && apk upgrade && apk add --update --no-cache bash bash-completion curl git wget openssl iputils busybox-extras vim && sed -i \"s/nobody:\\//nobody:\\/nonexistent/g\" /etc/passwd && \\\n    curl -sLf https://storage.googleapis.com/kubernetes-release/release/v1.22.1/bin/linux/${ARCH}/kubectl > /usr/bin/kubectl && chmod +x /usr/bin/kubectl && \\\n    git clone --branch master --depth 1 https://github.com/ahmetb/kubectl-aliases /opt/kubectl-aliases && chmod -R 755 /opt/kubectl-aliases && \\\n    git clone --branch 0.21.0 --depth 1 https://github.com/junegunn/fzf /opt/fzf && chmod -R 755 /opt/fzf && yes | /opt/fzf/install && ln -s /opt/fzf/bin/fzf /usr/local/bin/fzf && \\\n    ARCH=$(uname -m) && case $ARCH in aarch64) ARCH=\"arm64\";; x86_64) ARCH=\"x86_64\";; esac && echo \"ARCH: \" $ARCH && \\\n    cd /tmp/ && wget https://github.com/derailed/k9s/releases/download/v0.24.14/k9s_Linux_${ARCH}.tar.gz && tar -xvf k9s_Linux_${ARCH}.tar.gz && chmod +x k9s && mv k9s /usr/bin && \\\n    KUBECTX_VERSION=v0.9.4 && wget https://github.com/ahmetb/kubectx/releases/download/${KUBECTX_VERSION}/kubens_${KUBECTX_VERSION}_linux_${ARCH}.tar.gz && tar -xvf kubens_${KUBECTX_VERSION}_linux_${ARCH}.tar.gz && chmod +x kubens && mv kubens /usr/bin && \\\n    wget https://github.com/ahmetb/kubectx/releases/download/${KUBECTX_VERSION}/kubectx_${KUBECTX_VERSION}_linux_${ARCH}.tar.gz && tar -xvf kubectx_${KUBECTX_VERSION}_linux_${ARCH}.tar.gz && chmod +x kubectx && mv kubectx /usr/bin && \\\n    curl -f -L https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash && \\\n    chmod +x /usr/local/bin/gotty && chmod 555 /bin/busybox && \\\n    rm -rf /tmp/* /var/tmp/* /var/cache/apk/* && \\\n    chmod -R 755 /tmp && mkdir -p /opt/webkubectl && rm k9s_Linux_${ARCH}.tar.gz\n\nRUN apk add --no-cache tzdata && cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime \\\n    && echo \"Asia/Shanghai\" > /etc/timezone \\\n    && apk del tzdata\n\nCOPY vimrc.local /etc/vim\n\nEXPOSE 80\n\nUSER root\n\nCMD [\"kubepi-server\"]\n"
}