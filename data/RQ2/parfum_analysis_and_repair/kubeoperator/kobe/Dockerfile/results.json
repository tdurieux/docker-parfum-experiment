{
  "startTime": 1674252642890,
  "endTime": 1674252643454,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 7,
        "columnEnd": 27
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 7,
        "columnEnd": 27
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 5,
        "columnEnd": 16
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 5,
        "columnEnd": 17
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 19
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 7,
        "columnEnd": 20
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 7,
        "columnEnd": 22
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM golang:1.14-alpine as stage-build\nLABEL stage=stage-build\nWORKDIR /build/kobe\nARG GOPROXY\nARG GOARCH\n\nENV GO111MODULE=on \\\n    GOPROXY=$GOPROXY \\\n    CGO_ENABLED=0 \\\n    GOOS=linux \\\n    GOARCH=$GOARCH\n\nRUN apk update \\\n  && apk add --no-cache git \\\n  && apk add --no-cache make\n\nCOPY go.mod go.sum ./\nRUN go mod download\nCOPY . .\nRUN make build_server_linux GOARCH=$GOARCH\n\nFROM alpinelinux/ansible:latest\n\nRUN apk add --no-cache sshpass \\\n    && apk add --no-cache rsync \\\n    && apk add --no-cache openssl \\\n    && pip3 install --no-cache-dir netaddr \\\n    && pip3 install --no-cache-dir pywinrm\n\nRUN mkdir /root/.ssh  \\\n    && touch /root/.ssh/config \\\n    && echo -e \"Host *\\n\\tStrictHostKeyChecking no\\n\\tUserKnownHostsFile /dev/null\" > /root/.ssh/config\n\nCOPY --from=stage-build /build/kobe/dist/etc /etc/\nCOPY --from=stage-build /build/kobe/dist/usr /usr/\nCOPY --from=stage-build /build/kobe/dist/var /var/\n\nRUN echo 'kobe-server' >> /root/entrypoint.sh\n\nVOLUME [\"/var/kobe/data\"]\n\nEXPOSE 8080\n\nCMD [\"sh\",\"/root/entrypoint.sh\"]\n"
}