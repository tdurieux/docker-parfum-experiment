{
  "startTime": 1674255388892,
  "endTime": 1674255390207,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 81
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 108,
        "columnEnd": 141
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 156,
        "columnEnd": 211
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 131,
        "columnEnd": 187
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM golang:1.16-alpine as gotty-build\n\nENV CGO_ENABLED=0\nENV GOOS=linux\nENV GO111MODULE=on\n\nWORKDIR /tmp\nCOPY gotty gotty\nRUN apk add --no-cache --update git make && \\\n  cd gotty && \\\n  make gotty && cp gotty / && ls -l /gotty && /gotty -v\n\n\nFROM alpine:3.15.4\n\nUSER root\n\nCOPY --from=gotty-build /gotty /usr/bin/\nRUN ARCH=$(uname -m) && case $ARCH in aarch64) ARCH=\"arm64\";; x86_64) ARCH=\"amd64\";; esac && echo \"ARCH: \" $ARCH && \\\n    echo > /etc/apk/repositories && echo -e \"https://dl-cdn.alpinelinux.org/alpine/latest-stable/main\\nhttps://dl-cdn.alpinelinux.org/alpine/latest-stable/community\" >> /etc/apk/repositories && \\\n    apk update && apk upgrade && apk add --update --no-cache bash bash-completion curl git wget openssl iputils busybox-extras vim && sed -i \"s/nobody:\\//nobody:\\/nonexistent/g\" /etc/passwd && \\\n    curl -sLf https://storage.googleapis.com/kubernetes-release/release/v1.23.5/bin/linux/${ARCH}/kubectl > /usr/bin/kubectl && chmod +x /usr/bin/kubectl && \\\n    git clone --branch master --depth 1 https://github.com/ahmetb/kubectl-aliases /opt/kubectl-aliases && chmod -R 755 /opt/kubectl-aliases && \\\n    git clone --branch 0.21.0 --depth 1 https://github.com/junegunn/fzf /opt/fzf && chmod -R 755 /opt/fzf && /opt/fzf/install && ln -s /opt/fzf/bin/fzf /usr/local/bin/fzf && \\\n    ARCH=$(uname -m) && case $ARCH in aarch64) ARCH=\"arm64\";; x86_64) ARCH=\"x86_64\";; esac && echo \"ARCH: \" $ARCH && \\\n    cd /tmp/ && wget https://github.com/derailed/k9s/releases/download/v0.25.18/k9s_Linux_${ARCH}.tar.gz && tar -xvf k9s_Linux_${ARCH}.tar.gz && chmod +x k9s && mv k9s /usr/bin && \\\n    KUBECTX_VERSION=v0.9.4 && wget https://github.com/ahmetb/kubectx/releases/download/${KUBECTX_VERSION}/kubens_${KUBECTX_VERSION}_linux_${ARCH}.tar.gz && tar -xvf kubens_${KUBECTX_VERSION}_linux_${ARCH}.tar.gz && chmod +x kubens && mv kubens /usr/bin && \\\n    wget https://github.com/ahmetb/kubectx/releases/download/${KUBECTX_VERSION}/kubectx_${KUBECTX_VERSION}_linux_${ARCH}.tar.gz && tar -xvf kubectx_${KUBECTX_VERSION}_linux_${ARCH}.tar.gz && chmod +x kubectx && mv kubectx /usr/bin && \\\n    curl -f -L https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash && \\\n    chmod +x /usr/bin/gotty && chmod 555 /bin/busybox && \\\n    apk del git curl && rm -rf /tmp/* /var/tmp/* /var/cache/apk/* && \\\n    chmod -R 755 /tmp && mkdir -p /opt/webkubectl && rm k9s_Linux_${ARCH}.tar.gz\n\nCOPY vimrc.local /etc/vim\nCOPY start-webkubectl.sh /opt/webkubectl\nCOPY start-session.sh /opt/webkubectl\nCOPY init-kubectl.sh /opt/webkubectl\nRUN chmod -R 700 /opt/webkubectl /usr/bin/gotty\n\n\nENV SESSION_STORAGE_SIZE=10M\nENV WELCOME_BANNER=\"Welcome to Web Kubectl, try kubectl --help.\"\nENV KUBECTL_INSECURE_SKIP_TLS_VERIFY=true\nENV GOTTY_OPTIONS=\"--port 8080 --permit-write --permit-arguments\"\n\nCMD [\"sh\",\"/opt/webkubectl/start-webkubectl.sh\"]\n"
}