{
  "startTime": 1674251620449,
  "endTime": 1674251621993,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 71
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 71
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 71
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 71
      }
    }
  ],
  "repairedDockerfile": "# docker file for static mapping\n\nFROM ros:kinetic-ros-core-xenial\n\nLABEL author=\"edward\" email=\"liuyongchuan@outook.com\"\n\n# COPY ./setup/tshinghua_source.xenial.txt /etc/apt/sources.list\n\n# RUN sh -c '. /etc/lsb-release && echo \"deb http://mirrors.tuna.tsinghua.edu.cn/ros/ubuntu/ `lsb_release -cs` main\" > /etc/apt/sources.list.d/ros1-latest.list'\n\nRUN apt-get -y update && apt-get -y upgrade\nRUN apt-get -y --no-install-recommends install cmake gcc g++ libboost-all-dev libeigen3-dev libpng-dev libgoogle-glog-dev libatlas-base-dev \\\n  libsuitesparse-dev libpcl-dev wget libmetis-dev \\\n  vim.tiny imagemagick git libtbb-dev \\\n  ros-kinetic-tf* ros-kinetic-pcl* ros-kinetic-opencv* ros-kinetic-urdf && rm -rf /var/lib/apt/lists/*;\n\n# Enable tab completion by uncommenting it from /etc/bash.bashrc\n# The relevant lines are those below the phrase \"enable bash completion in interactive shells\"\nRUN export SED_RANGE=\"$(($(sed -n '\\|enable bash completion in interactive shells|=' /etc/bash.bashrc)+1)),$(($(sed -n '\\|enable bash completion in interactive shells|=' /etc/bash.bashrc)+7))\" && \\\n  sed -i -e \"${SED_RANGE}\"' s/^#//' /etc/bash.bashrc && \\\n  unset SED_RANGE\n\n# Create user \"docker\" with sudo powers\nRUN useradd -m docker && \\\n  usermod -aG sudo docker && \\\n  echo '%sudo ALL=(ALL) NOPASSWD: ALL' >> /etc/sudoers && \\\n  cp /root/.bashrc /home/docker/ && \\\n  mkdir -p /home/docker/src/StaticMapping && \\\n  chown -R --from=root docker /home/docker\n\n# Use C.UTF-8 locale to avoid issues with ASCII encoding\nENV LC_ALL=C.UTF-8\nENV LANG=C.UTF-8\n\nWORKDIR /home/docker/src\nENV HOME /home/docker\nENV USER docker\nUSER docker\nENV PATH /home/docker/.local/bin:$PATH\n# Avoid first use of sudo warning. c.f. https://askubuntu.com/a/22614/781671\nRUN touch $HOME/.sudo_as_admin_successful\n\nCOPY setup/* $HOME/src/\nRUN sudo chmod +x $HOME/src/install_libnabo.sh && $HOME/src/install_libnabo.sh\nRUN sudo chmod +x install_libpointmatcher.sh && $HOME/src/install_libpointmatcher.sh\nRUN sudo chmod +x install_geographiclib.sh && $HOME/src/install_geographiclib.sh\nRUN sudo chmod +x install_gtsam.sh && $HOME/src/install_gtsam.sh"
}