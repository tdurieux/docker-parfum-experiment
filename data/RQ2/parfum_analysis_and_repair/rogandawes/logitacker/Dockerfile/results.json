{
  "startTime": 1674250653430,
  "endTime": 1674250654425,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 22,
        "columnEnd": 82
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 84,
        "columnEnd": 110
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 84,
        "columnEnd": 110
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 22,
        "columnEnd": 82
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 84,
        "columnEnd": 110
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 84,
        "columnEnd": 134
      }
    }
  ],
  "repairedDockerfile": "FROM kalilinux/kali-rolling\n\nWORKDIR /root\nRUN apt-get update && apt-get -y --no-install-recommends install wget git gcc-arm-none-eabi unzip sed make && rm -rf /var/lib/apt/lists/*;\n# fetch nRF5 SDK 15.3.0\nRUN wget https://www.nordicsemi.com/-/media/Software-and-other-downloads/SDKs/nRF5/Binaries/nRF5SDK153059ac345.zip && unzip nRF5SDK153059ac345.zip && git clone https://github.com/RoganDawes/LOGITacker\n\n# install python3 and download uf2conv.py for AprBrother image conversion (Intel HEX to UF2)\nRUN wget https://raw.githubusercontent.com/microsoft/uf2/master/utils/uf2conv.py && apt-get -y --no-install-recommends install python3 && rm -rf /var/lib/apt/lists/*;\nRUN wget https://raw.githubusercontent.com/microsoft/uf2/master/utils/uf2families.json\n\n# patch SDK to use Kali's arm-none-eabi toolchain (SED's delimiter changed to allow inline path)\nRUN sed -i \"s#^GNU_INSTALL_ROOT.*#GNU_INSTALL_ROOT \\?= /usr/bin/#g\" nRF5_SDK_15.3.0_59ac345/components/toolchain/gcc/Makefile.posix\n\n# patch Nordic nRF52840 dongle Makefile for correct download path of SDK path and build\nWORKDIR /root/LOGITacker/pca10059/blank/armgcc\nRUN sed -i \"s#^SDK_ROOT.*#SDK_ROOT := /root/nRF5_SDK_15.3.0_59ac345#g\" Makefile && make\n\n# patch AprBrother nRF52840 dongle Makefile for correct download path of SDK path and build\nWORKDIR /root/LOGITacker/apr-dongle/blank/armgcc\nRUN sed -i \"s#^SDK_ROOT.*#SDK_ROOT := /root/nRF5_SDK_15.3.0_59ac345#g\" Makefile && make\n\n# patch MakerDiary MDK DevBoard Makefile for correct download path of SDK path and build\nWORKDIR /root/LOGITacker/mdk/blank/armgcc\nRUN sed -i \"s#^SDK_ROOT.*#SDK_ROOT := /root/nRF5_SDK_15.3.0_59ac345#g\" Makefile && make\n\n# patch MakerDiary MDK Dongle Makefile for correct download path of SDK path and build\nWORKDIR /root/LOGITacker/mdk-dongle/blank/armgcc\nRUN sed -i \"s#^SDK_ROOT.*#SDK_ROOT := /root/nRF5_SDK_15.3.0_59ac345#g\" Makefile && make\n\n\n# collect results into /root/build directory\n# could be accessed interactively with `docker run -ti <resulting image name> /bin/bash`\nWORKDIR /root\nRUN mkdir build && \\\n    cp LOGITacker/pca10059/blank/armgcc/_build/logitacker_pca10059.hex build && \\\n    cp LOGITacker/mdk/blank/armgcc/_build/logitacker_mdk.hex build && \\\n    cp LOGITacker/mdk-dongle/blank/armgcc/_build/logitacker_mdk_dongle.hex build && \\\n    python3 uf2conv.py LOGITacker/apr-dongle/blank/armgcc/_build/logitacker_aprdongle.hex -c -f 0xADA52840 -o build/logitacker_aprdongle.uf2 && \\\n    python3 uf2conv.py build/logitacker_mdk.hex -c -f 0xADA52840 -o build/logitacker_mdk.uf2 && \\\n    python3 uf2conv.py build/logitacker_mdk_dongle.hex -c -f 0xADA52840 -o build/logitacker_mdk_dongle.uf2\n\n"
}