{
  "startTime": 1674246162462,
  "endTime": 1674246163728,
  "originalSmells": [
    {
      "rule": "gemUpdateSystemRmRootGem",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 5,
        "columnEnd": 31
      }
    },
    {
      "rule": "gemUpdateNoDocument",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 5,
        "columnEnd": 31
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 41,
        "lineEnd": 57,
        "columnStart": 5,
        "columnEnd": 13
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Make managed in .env-build\nARG COSMOS_REGISTRY=docker.io\nARG ALPINE_BUILD\nARG ALPINE_VERSION\n\n# Should be loaded from ARG\nFROM ${COSMOS_REGISTRY}/alpine:${ALPINE_VERSION}.${ALPINE_BUILD}\n\n# An ARG declared before a FROM is outside of a build stage, so it canâ€™t be\n# used in any instruction after a FROM. So we need to re-ARG ALPINE_VERSION\n\nARG ALPINE_VERSION\nARG APK_URL\nARG RUBYGEMS_URL\n\nENV ALPINE_VERSION=${ALPINE_VERSION}\nENV APK_URL=${APK_URL}\nENV RUBYGEMS_URL=${RUBYGEMS_URL}\n\n# NOTE: This must match the alpine image used above in FROM\nRUN echo \"${APK_URL}/alpine/v${ALPINE_VERSION}/main\" > /etc/apk/repositories \\\n  && echo \"${APK_URL}/alpine/v${ALPINE_VERSION}/community\" >> /etc/apk/repositories\n\nLABEL maintainer=\"cosmos@ballaerospace.com\"\n\n# We require a local certificate file so set that up.\n# You must place a valid cacert.pem file in your COSMOS development folder for this work\n# Comment out these lines if this is not required in your environment\nCOPY cacert.pem /devel/cacert.pem\nENV SSL_CERT_FILE=/devel/cacert.pem\nENV CURL_CA_BUNDLE=/devel/cacert.pem\nENV REQUESTS_CA_BUNDLE=/devel/cacert.pem\nENV NODE_EXTRA_CA_CERTS=/devel/cacert.pem\n\nENV NOKOGIRI_USE_SYSTEM_LIBRARIES=1\n\nADD .gemrc /root/.gemrc\nRUN sed -i \"s|RUBYGEMS_URL|${RUBYGEMS_URL}|g\" /root/.gemrc\nRUN cp /root/.gemrc /etc/.gemrc\nRUN mkdir -p /usr/local/etc \\\n  && { \\\n    echo 'install: --no-document'; \\\n    echo 'update: --no-document'; \\\n  } >> /usr/local/etc/gemrc;\n\nRUN apk update \\\n  && apk add --no-cache ruby \\\n  build-base \\\n  ruby-dev \\\n  libressl-dev \\\n  ruby-etc \\\n  ruby-bigdecimal \\\n  ruby-io-console \\\n  ruby-irb \\\n  ca-certificates \\\n  curl \\\n  libc6-compat \\\n  libressl \\\n  less \\\n  tini \\\n  git \\\n  libxml2-dev \\\n  libxslt-dev \\\n  && gem update --system 3.3.14 \\\n  && gem install rake \\\n  && gem cleanup \\\n  && bundle config build.nokogiri --use-system-libraries \\\n  && bundle config git.allow_insecure true && rm -rf /root/.gem;\n\n# Set user and group\nENV IMAGE_USER=cosmos\nENV IMAGE_GROUP=cosmos\nENV USER_ID=1000\nENV GROUP_ID=1000\nRUN addgroup -g ${GROUP_ID} -S ${IMAGE_GROUP}\nRUN adduser -u ${USER_ID} -G ${IMAGE_GROUP} -s /bin/ash -S ${IMAGE_USER}\n\n# Switch to user\nUSER ${USER_ID}:${GROUP_ID}\n\nENTRYPOINT [ \"/sbin/tini\", \"--\" ]\n"
}