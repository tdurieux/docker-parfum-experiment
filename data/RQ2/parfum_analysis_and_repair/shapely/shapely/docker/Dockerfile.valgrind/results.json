{
  "startTime": 1674217134307,
  "endTime": 1674217135158,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 70
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 70
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 57
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 22,
        "columnEnd": 94
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# This docker is used for memory leak testing of pygeos. To use it, first build:\n# docker build . -f ./docker/Dockerfile.valgrind -t pygeos/valgrind\n# Then run the pytest suite with valgrind enabled:\n# docker run --rm pygeos/valgrind:latest valgrind --show-leak-kinds=definite --log-file=/tmp/valgrind-output python -m pytest -vv --valgrind --valgrind-log=/tmp/valgrind-output > valgrind.log\n\n\nFROM python:3.9-slim-buster\n\nRUN apt-get update && apt-get install -y build-essential valgrind curl --no-install-recommends && rm -rf /var/lib/apt/lists/*;\n\nRUN pip install --no-cache-dir cmake numpy Cython pytest pytest-valgrind\n\nWORKDIR /code\n\nENV PYTHONMALLOC malloc\n\nENV LD_LIBRARY_PATH /usr/local/lib\n\n# Build GEOS\nRUN export GEOS_VERSION=3.10.3 && \\\n    mkdir /code/geos && cd /code/geos && \\\n    curl -f -OL https://download.osgeo.org/geos/geos-$GEOS_VERSION.tar.bz2 && \\\n    tar xfj geos-$GEOS_VERSION.tar.bz2 && \\\n    cd geos-$GEOS_VERSION && mkdir build && cd build && \\\n    cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_LIBDIR=lib .. && \\\n    cmake --build . -j 4 && \\\n    cmake --install . && \\\n    cd /code && rm geos-$GEOS_VERSION.tar.bz2\n\nCOPY . /code\n\n# Build pygeos\nRUN python setup.py build_ext --inplace && python setup.py install\n"
}