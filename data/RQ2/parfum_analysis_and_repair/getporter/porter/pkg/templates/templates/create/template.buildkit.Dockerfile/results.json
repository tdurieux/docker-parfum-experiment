{
  "startTime": 1674214894054,
  "endTime": 1674214895001,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 22,
        "columnEnd": 56
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 22,
        "columnEnd": 56
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# This is a template Dockerfile for the bundle's invocation image\n# You can customize it to use different base images, install tools and copy configuration files.\n#\n# Porter will use it as a template and append lines to it for the mixins\n# and to set the CMD appropriately for the CNAB specification.\n#\n# Add the following line to porter.yaml to instruct Porter to use this template\n# dockerfile: template.Dockerfile\n\n# You can control where the mixin's Dockerfile lines are inserted into this file by moving the \"# PORTER_*\" tokens\n# another location in this file. If you remove a token, its content is appended to the end of the Dockerfile.\nFROM debian:stretch-slim\n\n# PORTER_INIT\n\nRUN rm -f /etc/apt/apt.conf.d/docker-clean; echo 'Binary::apt::APT::Keep-Downloaded-Packages \"true\";' > /etc/apt/apt.conf.d/keep-cache\nRUN --mount=type=cache,target=/var/cache/apt--mount=type=cache,target=/var/lib/apt \\\n    apt-get update && apt-get install --no-install-recommends -y ca-certificates && rm -rf /var/lib/apt/lists/*;\n\n# PORTER_MIXINS\n\n# Use the BUNDLE_DIR build argument to copy files into the bundle's working directory\nCOPY --link . ${BUNDLE_DIR}\n"
}