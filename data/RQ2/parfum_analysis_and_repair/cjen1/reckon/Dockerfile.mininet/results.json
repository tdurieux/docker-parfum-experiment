{
  "startTime": 1674215932486,
  "endTime": 1674215933794,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 15,
        "columnStart": 26,
        "columnEnd": 14
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 28,
        "columnStart": 22,
        "columnEnd": 14
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 15,
        "columnStart": 26,
        "columnEnd": 14
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 28,
        "columnStart": 22,
        "columnEnd": 14
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# cloned from https://github.com/mininet/mininet/pull/968\nFROM debian:stretch-slim\n\nUSER root\nWORKDIR /root\n\nENV DEBIAN_FRONTEND=noninteractive\nRUN apt-get update -yq && apt-get install --no-install-recommends -yq \\\n    arping \\\n    git \\\n    hping3 \\\n    iputils-ping \\\n    net-tools \\\n    sudo \\\n    openssl \\\n    traceroute && rm -rf /var/lib/apt/lists/*;\n\nRUN apt update -yq && apt install --no-install-recommends -yq \\\n    build-essential \\\n    zlib1g-dev \\\n    libncurses5-dev \\\n    libgdbm-dev \\\n    libnss3-dev \\\n    libssl-dev \\\n    libreadline-dev \\\n    libffi-dev \\\n    libsqlite3-dev \\\n    wget \\\n    libbz2-dev && rm -rf /var/lib/apt/lists/*;\n\nRUN mkdir /python && \\\n    cd /python && \\\n    wget https://www.python.org/ftp/python/3.9.10/Python-3.9.10.tgz && \\\n    tar -xf Python-3.9.10.tgz && \\\n    cd Python-3.9.10 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-optimizations --with-ssl && \\\n    make -j 4 && \\\n    sudo make install && rm Python-3.9.10.tgz\n\nRUN bash -c \"ln -s `which python3` /usr/local/bin/python\"\n\nARG INSTALL_FLAGS=\"-fnv\"\nCOPY ./vendor/mininet /root/mininet\nRUN sh -c \"PYTHON=python /root/mininet/util/install.sh ${INSTALL_FLAGS}\"\n\nRUN apt-get clean\n\nCOPY ./scripts/ENTRYPOINT.sh /root/mininet/util/ENTRYPOINT.sh\nRUN chmod +x /root/mininet/util/ENTRYPOINT.sh\n\nENTRYPOINT [ \"/root/mininet/util/ENTRYPOINT.sh\"]\nCMD [\"mn\"]\n"
}