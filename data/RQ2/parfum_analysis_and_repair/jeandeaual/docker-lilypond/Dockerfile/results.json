{
  "startTime": 1674254782776,
  "endTime": 1674254787561,
  "originalSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 102,
        "lineEnd": 112,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 128,
        "lineEnd": 143,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 155,
        "lineEnd": 170,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 20,
        "lineEnd": 28,
        "columnStart": 5,
        "columnEnd": 21
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 69,
        "lineEnd": 86,
        "columnStart": 5,
        "columnEnd": 8
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 102,
        "lineEnd": 112,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 128,
        "lineEnd": 143,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 155,
        "lineEnd": 170,
        "columnStart": 4,
        "columnEnd": 14
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 102,
        "lineEnd": 112,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 128,
        "lineEnd": 143,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 155,
        "lineEnd": 170,
        "columnStart": 4,
        "columnEnd": 14
      }
    }
  ],
  "repairedDockerfile": "# ARGs used in FROM need to be declared before the first FROM\n# See https://docs.docker.com/engine/reference/builder/#understand-how-arg-and-from-interact\nARG SUFFIX=\"\"\nARG LILYPOND_VERSION=\"2.22.0\"\nARG USERNAME=lilypond\nARG USER_UID=1000\nARG USER_GID=$USER_UID\n\n\n\nFROM debian:bullseye-slim AS build\n\nSHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\n\nRUN printf 'LANG=\"C\"\\nLANGUAGE=\"C\"\\nLC_ALL=\"C\"\\n' > /etc/default/locale \\\n  && . /etc/default/locale \\\n  && echo \"deb-src http://deb.debian.org/debian bullseye main\" >> /etc/apt/sources.list \\\n  && apt-get update \\\n  # Install the LilyPond build dependencies\n  && apt-get build-dep -y lilypond \\\n  && apt-get install -y --no-install-recommends \\\n    ca-certificates \\\n    # To get newer config.sub and config.guess\n    autotools-dev \\\n    # Additional LilyPond build dependencies\n    git \\\n    guile-2.2-dev \\\n    install-info \\\n    python-is-python3 && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /build\n\nARG LILYPOND_VERSION\n\n# Install LilyPond\nRUN git clone --no-tags --single-branch --branch \"v${LILYPOND_VERSION}\" https://git.savannah.gnu.org/git/lilypond.git \\\n  # Old tag format\n  || git clone --no-tags --single-branch --branch \"release/${LILYPOND_VERSION}-1\" https://git.savannah.gnu.org/git/lilypond.git\n\nWORKDIR /build/lilypond\n\nRUN ./autogen.sh --noconfigure \\\n  # Update the configure script (required to build on arm64)\n  && cp /usr/share/misc/config.sub /usr/share/misc/config.guess ./config/ \\\n  && mkdir build\n\nWORKDIR /build/lilypond/build\n\nRUN if [[ \"2.23.4\" = \"$(echo -e \"2.23.4\\n${LILYPOND_VERSION}\" | sort -V | head -n1)\" ]]; then \\\n  # Enable the experimental Cairo backend if the version is >= 2.23.4\n  export additional_flags=\"--enable-cairo-backend\"; else \\\n  export additional_flags=\"\"; fi \\\n  && mkdir /lilypond \\\n  && ../configure \\\n  --prefix /lilypond \\\n  --disable-debugging \\\n  --disable-documentation \\\n  \"${additional_flags}\" \\\n  && make -j\"$(nproc)\" \\\n  && make install\n\n\n\nFROM debian:bullseye-slim AS lilypond\n\n# hadolint ignore=DL3009\nRUN printf 'LANG=\"C\"\\nLANGUAGE=\"C\"\\nLC_ALL=\"C\"\\n' > /etc/default/locale \\\n  && . /etc/default/locale \\\n  && apt-get update \\\n  && apt-get install -y --no-install-recommends \\\n    ca-certificates \\\n    # LilyPond run dependencies\n    libglib2.0-0 \\\n    guile-2.2 \\\n    libpangoft2-1.0-0 \\\n    fontconfig \\\n    fonts-dejavu \\\n    # Remove if / when Ghostscript gets replaced by Cairo\n    ghostscript \\\n    # Required when building with --enable-cairo-backend\n    libcairo2 \\\n    # For convert-ly\n    python-is-python3 \\\n    # LilyPond optional dependencies\n    extractpdfmark \\\n    # To transform PDFs (e.g. rotate)\n    qpdf && rm -rf /var/lib/apt/lists/*;\n\nCOPY --from=build /lilypond /lilypond\n\nENV PATH \"/lilypond/bin:${PATH}\"\n\n\n\n# Image with the fonts\nFROM lilypond AS lilypond-fonts\n\nCOPY install-lilypond-fonts.sh install-system-fonts.sh /tmp/\n\nARG LILYPOND_VERSION\n\n# Install fonts for LilyPond\nRUN apt-get install -y --no-install-recommends \\\n  fontconfig \\\n  # Required by install-lilypond-fonts.sh and install-system-fonts.sh\n  wget \\\n  xz-utils \\\n  # System font installation through the repositories\n  fonts-ipafont \\\n  fonts-ipaexfont \\\n  fonts-hanazono \\\n  fonts-noto-core \\\n  fonts-noto-cjk \\\n  # Manual system font installation (not in the repositories)\n  && /tmp/install-system-fonts.sh \\\n  # LilyPond font installation\n  && /tmp/install-lilypond-fonts.sh \"/lilypond/share/lilypond/${LILYPOND_VERSION}\" \\\n  && rm /tmp/install-system-fonts.sh /tmp/install-lilypond-fonts.sh \\\n  && fc-cache -fv && rm -rf /var/lib/apt/lists/*;\n\n\n\n# Image with ly2video\nFROM lilypond AS lilypond-ly2video\n\nCOPY install-ly2video.sh /tmp/\n\n# Install ly2video\nRUN apt-get install -y --no-install-recommends \\\n    git \\\n    # Required by ly2video\n    ffmpeg \\\n    timidity \\\n    fluid-soundfont-gm \\\n    fluid-soundfont-gs \\\n    build-essential \\\n    python3-pip \\\n    python3-pil \\\n    python3-dev \\\n    swig \\\n    libasound-dev \\\n    # Required by Pillow\n    libjpeg-dev \\\n    zlib1g-dev \\\n  && /tmp/install-ly2video.sh \\\n  && rm /tmp/install-ly2video.sh && rm -rf /var/lib/apt/lists/*;\n\n\n\n# Image with both the fonts and ly2video\nFROM lilypond-fonts AS lilypond-fonts-ly2video\n\nCOPY install-ly2video.sh /tmp/\n\n# Install ly2video\nRUN apt-get install -y --no-install-recommends \\\n    git \\\n    # Required by ly2video\n    ffmpeg \\\n    timidity \\\n    fluid-soundfont-gm \\\n    fluid-soundfont-gs \\\n    build-essential \\\n    python3-pip \\\n    python3-pil \\\n    python3-dev \\\n    swig \\\n    libasound-dev \\\n    # Required by Pillow\n    libjpeg-dev \\\n    zlib1g-dev \\\n  && /tmp/install-ly2video.sh \\\n  && rm /tmp/install-ly2video.sh && rm -rf /var/lib/apt/lists/*;\n\n\n\n# Final image\n# hadolint ignore=DL3006\nFROM lilypond${SUFFIX} AS final\n\nLABEL maintainer=\"alexis.jeandeau@gmail.com\"\n\n# Cleanup\nRUN apt-get remove -y bzip2 wget xz-utils build-essential python3-dev libasound-dev libjpeg-dev zlib1g-dev \\\n  && apt-get autoremove -y \\\n  && apt-get clean -y \\\n  && rm -rf /var/lib/apt/lists/*\n\nWORKDIR /app\n\nARG USERNAME\nARG USER_UID\nARG USER_GID\n\n# Add application (non-root) user and group\nRUN groupadd --gid \"${USER_GID}\" \"${USERNAME}\" \\\n    && useradd --uid \"${USER_UID}\" --gid \"${USER_GID}\" -m \"${USERNAME}\" \\\n    && chown -R \"${USER_UID}:${USER_GID}\" /app\n\nUSER $USERNAME\n\nCMD [\"lilypond\", \"-v\"]\n"
}