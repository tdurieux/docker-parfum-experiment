{
  "startTime": 1674250323376,
  "endTime": 1674250324030,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 8,
        "columnEnd": 114
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 57,
        "columnEnd": 120
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG VARIANT=11\nFROM openjdk:${VARIANT}-jdk-buster\n\n# Options for setup script\nARG INSTALL_ZSH=\"true\"\nARG UPGRADE_PACKAGES=\"false\"\nARG USERNAME=vscode\nARG USER_UID=1000\nARG USER_GID=$USER_UID\n\n# Install needed packages and setup non-root user. Use a separate RUN statement to add your own dependencies.\nCOPY library-scripts/*.sh /tmp/library-scripts/\nRUN apt-get update \\\n    && /bin/bash /tmp/library-scripts/common-debian.sh \"${INSTALL_ZSH}\" \"${USERNAME}\" \"${USER_UID}\" \"${USER_GID}\" \"${UPGRADE_PACKAGES}\" \\\n    && apt-get autoremove -y && apt-get clean -y && rm -rf /var/lib/apt/lists/* /tmp/library-scripts\n\n# [Optional] Install Maven\nARG INSTALL_MAVEN=\"false\"\nARG MAVEN_VERSION=3.6.3\nARG MAVEN_DOWNLOAD_SHA=\"dev-mode\"\nENV MAVEN_HOME /usr/share/maven \\\n    MAVEN_CONFIG /root/.m2\nCOPY maven-settings.xml /usr/share/maven/ref/\nRUN if [ \"${INSTALL_MAVEN}\" = \"true\" ]; then \\\n        mkdir -p /usr/share/maven /usr/share/maven/ref \\\n        && curl -fsSL -o /tmp/apache-maven.tar.gz https://archive.apache.org/dist/maven/maven-3/${MAVEN_VERSION}/binaries/apache-maven-${MAVEN_VERSION}-bin.tar.gz \\\n        && ([ \"${MAVEN_DOWNLOAD_SHA}\" = \"dev-mode\" ] || echo \"${MAVEN_DOWNLOAD_SHA} */tmp/apache-maven.tar.gz\" | sha512sum -c - ) \\\n        && tar -xzf /tmp/apache-maven.tar.gz -C /usr/share/maven --strip-components=1 \\\n        && rm -f /tmp/apache-maven.tar.gz \\\n        && ln -s /usr/share/maven/bin/mvn /usr/bin/mvn; \\\n    fi\n\n# [Optional] Install Gradle\nARG INSTALL_GRADLE=\"false\"\nARG GRADLE_VERSION=5.4.1\nARG GRADLE_DOWNLOAD_SHA=\"dev-mode\"\nENV GRADLE_HOME=/opt/gradle\nRUN if [ \"${INSTALL_GRADLE}\" = \"true\" ]; then \\\n        curl -f -sSL --output gradle.zip \"https://services.gradle.org/distributions/gradle-${GRADLE_VERSION}-bin.zip\" \\\n        && ( [ \"${GRADLE_DOWNLOAD_SHA}\" = \"dev-mode\" ] || echo \"${GRADLE_DOWNLOAD_SHA}  *gradle.zip\" | sha256sum --check -) \\\n        && unzip gradle.zip \\\n        && rm gradle.zip \\\n        && mv \"gradle-${GRADLE_VERSION}\" \"${GRADLE_HOME}/\" \\\n        && ln -s \"${GRADLE_HOME}/bin/gradle\" /usr/bin/gradle; \\\n    fi\n\n# Allow for a consistant java home location for settings - image is changing over time\nRUN if [ ! -d \"/docker-java-home\" ]; then ln -s \"${JAVA_HOME}\" /docker-java-home; fi\n\n# [Optional] Install Node.js for use with web applications - update the INSTALL_NODE arg in devcontainer.json to enable.\nARG INSTALL_NODE=\"false\"\nARG NODE_VERSION=\"lts/*\"\nENV NVM_DIR=/usr/local/share/nvm \\\n    NVM_SYMLINK_CURRENT=true \\\n    PATH=${NVM_DIR}/current/bin:${PATH}\nCOPY library-scripts/node-debian.sh /tmp/library-scripts/\nRUN if [ \"$INSTALL_NODE\" = \"true\" ]; then \\\n        /bin/bash /tmp/library-scripts/node-debian.sh \"${NVM_DIR}\" \"${NODE_VERSION}\" \"${USERNAME}\" \\\n        && apt-get clean -y && rm -rf /var/lib/apt/lists/*; \\\n    fi \\\n    && rm -rf /tmp/library-scripts\n\n# [Optional] Uncomment this section to install additional OS packages.\n# RUN apt-get update \\\n#     && export DEBIAN_FRONTEND=noninteractive \\\n#     && apt-get -y install --no-install-recommends <your-package-list-here>"
}