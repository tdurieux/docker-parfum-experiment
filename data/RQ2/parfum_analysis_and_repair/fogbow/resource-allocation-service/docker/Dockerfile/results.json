{
  "startTime": 1674219205801,
  "endTime": 1674219207075,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 2,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 2,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 2,
        "columnEnd": 47
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 2,
        "columnEnd": 65
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 2,
        "columnEnd": 43
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM openjdk:8\n\nARG COMMON_BRANCH\nARG AS_BRANCH\nARG RAS_BRANCH\n\n# Install.\nRUN \\\n  sed -i 's/# \\(.*multiverse$\\)/\\1/g' /etc/apt/sources.list && \\\n  apt-get update -y && \\\n  apt-get upgrade -y && \\\n  apt-get install --no-install-recommends -y build-essential && \\\n  apt-get install --no-install-recommends openjfx -y && \\\n  apt-get install --no-install-recommends -y software-properties-common && \\\n  apt-get install --no-install-recommends -y byobu curl git htop man unzip vim wget maven && \\\n  apt-get install --no-install-recommends -y net-tools iputils-ping && \\\n  rm -rf /var/lib/apt/lists/*\n\n# Set environment variables.\nENV HOME /root\n\n# Define working directory.\nWORKDIR /root\n\n# Installing Common\nRUN \\\n  git clone https://github.com/fogbow/common.git && \\\n  (cd common && git checkout $COMMON_BRANCH && mvn install -Dmaven.test.skip=true)\n\n# Installing Authentication Service\nRUN \\\n  git clone https://github.com/fogbow/authentication-service.git && \\\n  (cd authentication-service && git checkout $AS_BRANCH && mvn install -Dmaven.test.skip=true)\n\n# Downloading Resource Allocation Service\nRUN \\\n  git clone https://github.com/fogbow/resource-allocation-service.git && \\\n  (cd resource-allocation-service && git checkout $RAS_BRANCH && mvn install -Dmaven.test.skip=true)\n\n# Define working directory.\nWORKDIR /root/resource-allocation-service\n\n# Generates the build number based on the commit checksum\nRUN \\\n    (ras_build_number=$(git rev-parse --short 'HEAD') && \\\n    cd ../authentication-service && as_build_number=$(git rev-parse --short 'HEAD') && \\\n    cd ../common && common_build_number=$(git rev-parse --short 'HEAD') && \\\n    cd /root/resource-allocation-service && \\ \n    echo \"build_number=ras-$ras_build_number-as-$as_build_number-common-$common_build_number\" > build)\n\nRUN \\\n  mvn dependency:sources\n\n"
}