{
  "startTime": 1674254110852,
  "endTime": 1674254111381,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 125
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# ----------------------------------------------\n# Stage 1:  Minimal java image with sdkman + Ubuntu LTS\n# ----------------------------------------------\nFROM ubuntu:20.04 as base-builder\n\nWORKDIR /srv\n\n# Defining default Java, can be any java provided by sdkman\nARG JAVA_VERSION=\"11.0.15.9.1-amzn\"\n\nENV JAVA_OUTPUT_DIR=\"/java\"\nENV DEBIAN_FRONTEND=noninteractive\nENV PATH=\"$PATH:/java/bin\"\n\n# Installing basic packages\nRUN apt update && \\\n    apt upgrade -y && \\\n    apt install -y --no-install-recommends zip unzip wget libtcnative-1 tzdata tini ca-certificates openssl libapr1 libpq-dev && rm -rf /var/lib/apt/lists/*;\n\n\n# Install curl\nRUN wget -O - https://repo.dotcms.com/artifactory/ext-release-local/com/dotcms/curl-static/curl-`uname -m` | install /dev/stdin /usr/bin/curl && \\\n    chmod a+x /usr/bin/curl\n\n# Downloading sdkman\nRUN curl -f -sL \"https://get.sdkman.io\" | bash\n\n# Installing Java via sdkman\n    # Modules included\n    # java.naming - javax/naming/NamingException\n    # java.desktop - java/beans/PropertyEditorSupport\n    # java.management - javax/management/MBeanServer\n    # java.security.jgss - org/ietf/jgss/GSSException\n    # java.instrument - java/lang/instrument/IllegalClassFormatException\n    # jdk.unsupported - sun/misc/Unsafe, needed by caffine\n    # java.scripting - Nashhorn, needed by log4j\n    # java.rmi needed by Quartz\n    # jdk.compiler needed to build\n    # jdk.zipfs needed for gradle\n\nRUN bash -c \"source /root/.sdkman/bin/sdkman-init.sh && \\\n    sdk list java && \\\n    yes | sdk install java $JAVA_VERSION \" && \\\n    # Create a java runtime image to run dotCMS\n    /root/.sdkman/candidates/java/$JAVA_VERSION/bin/jlink \\\n    --verbose \\\n    --add-modules \\\n        java.base,jdk.crypto.ec,jdk.jdwp.agent,jdk.management,java.sql,java.naming,java.desktop,java.management,java.security.jgss,java.instrument,jdk.unsupported,java.scripting,java.rmi,jdk.compiler,jdk.zipfs,jdk.naming.dns \\\n    --compress 2 \\\n    --no-header-files \\\n    --no-man-pages \\\n    --output \"$JAVA_OUTPUT_DIR\"\n\n# Cleanup\nRUN rm -rf /root/.sdkman && \\\n    apt purge -y zip unzip wget && \\\n    apt autoremove -y && \\\n    apt clean && \\\n    rm -rf /var/lib/apt/lists/*\n\n# ----------------------------------------------\n# Stage 2:  Flatten everything to 1 layer\n# ----------------------------------------------\nFROM scratch\nCOPY --from=base-builder / /"
}