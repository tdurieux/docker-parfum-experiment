{
  "startTime": 1674255179383,
  "endTime": 1674255180251,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 120,
        "lineEnd": 120,
        "columnStart": 11,
        "columnEnd": 34
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 122,
        "lineEnd": 122,
        "columnStart": 11,
        "columnEnd": 30
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# This Source Code Form is subject to the terms of the Mozilla Public\n# License, v. 2.0. If a copy of the MPL was not distributed with this\n# file, You can obtain one at http://mozilla.org/MPL/2.0/.\n\n#\n#  FLOWDB\n#  -----\n#\n#\n#  This image is based on the official\n#  PostgreSQL image, which is based\n#  on the official Debian Stretch (9) image.\n#\n\nFROM postgres:12.11@sha256:8bff0179347982a6c083e1ed69cf4b65f12b8ae76e61f63b238c8c1ba4714c86\n\n\nARG POSTGIS_MAJOR=3\nENV POSTGIS_MAJOR=$POSTGIS_MAJOR\nARG POSTGIS_VERSION=3.2.1+dfsg-1.pgdg110+1\nARG PGROUTING_VERSION=3.3.0-2.pgdg110+1\nARG PG_MEDIAN_UTILS_VERSION=0.0.7\nARG OGR_FDW_VERSION=1.1.1-1~exp1.pgdg110+1\nENV POSTGIS_VERSION=$POSTGIS_VERSION\nENV POSTGRES_DB=flowdb\nARG POSTGRES_USER=flowdb\nENV POSTGRES_USER=$POSTGRES_USER\nENV LC_ALL=en_US.UTF-8\nENV LC_CTYPE=en_US.UTF-8\nENV TDS_FDW_VERSION=2.0.2-3.pgdg110+1\n\nRUN apt-get update && apt-get install -y --no-install-recommends ca-certificates \\\n    && echo \"deb http://apt-archive.postgresql.org/pub/repos/apt bullseye-pgdg-archive main\" > /etc/apt/sources.list.d/pgdg-archive.list \\\n    && echo \"deb-src http://apt-archive.postgresql.org/pub/repos/apt bullseye-pgdg-archive main\" >> /etc/apt/sources.list.d/pgdg-archive.list \\\n    && apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n    postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR=$POSTGIS_VERSION  \\\n    postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR-scripts=$POSTGIS_VERSION \\\n    postgresql-$PG_MAJOR-pgrouting=$PGROUTING_VERSION \\\n    postgresql-$PG_MAJOR-ogr-fdw=$OGR_FDW_VERSION \\\n    postgresql-$PG_MAJOR-tds-fdw=$TDS_FDW_VERSION \\\n    postgresql-server-dev-$PG_MAJOR=$PG_VERSION \\\n    postgis=$POSTGIS_VERSION \\\n    && rm -rf /var/lib/apt/lists/* \\\n    && apt-get purge -y --auto-remove\n\n#\n#  Setting up locale settings. This will\n#  eventually fix encoding issues.\n#\nRUN apt-get update && apt-get install -y --no-install-recommends locales locales-all \\\n        && localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8 \\\n        && locale-gen && rm -rf /var/lib/apt/lists/*\n\n#\n#  INSTALLING DEPENDENCIES\n#  -----------------------\n#\n#  In this section we install the dependencies\n#  that the database will use when analysing\n#  data.\n\n#\n# Install some useful extras & python dependencies\n#\nRUN apt-get update \\\n        && apt-get install -y --no-install-recommends \\\n        unzip curl make postgresql-plpython3-$PG_MAJOR \\\n        libaio1  \\\n        parallel nano vim python3-pip wget python3-setuptools\\\n        && apt purge -y --auto-remove \\\n        && rm -rf /var/lib/apt/lists/*\n\n# add requirements for pg_admin debugging\nENV USE_PGXS=1\nRUN apt-get update \\\n        && apt-get install -y --no-install-recommends libssl-dev \\\n        libkrb5-dev \\ \n        build-essential \\\n        git \\\n        && git clone https://github.com/EnterpriseDB/pldebugger.git \\\n        && mv pldebugger /usr/local/src \\\n        && make -C /usr/local/src/pldebugger \\\n        && make -C /usr/local/src/pldebugger install \\\n        && apt-get remove -y libssl-dev \\\n        libkrb5-dev \\\n        build-essential \\\n        git \\\n        && apt purge -y --auto-remove \\\n        && rm -rf /var/lib/apt/lists/*\n\n\n\n#\n#  CONFIGURATION\n#  -------------\n#\n#  In this section packages installed in previous\n#  steps are properly configured. That happens by\n#  either modifying configuration files (*.config)\n#  or by loading *.sh scripts that will gradually\n#  do that.\n#\nRUN mkdir -p /docker-entrypoint-initdb.d\n\n#\n#  Let's now install the `flowdb-cli` program\n#  and run its automatic configuration command.\n#\n#  pipenv uses the first pip and python found in the\n#  PATH so we need to force the right python version\n#  together with the appropriate headers, otherwise\n#  psutil fails to install.\n#\n# We'll also install useful postgres extensions distributed via PGXN.\n#\nCOPY ./flowdb/Pipfile* /tmp/\nRUN apt-get update \\\n        && apt-get install -y --no-install-recommends python3-dev gcc m4 libxml2-dev libaio-dev \\\n        postgresql-server-dev-$PG_MAJOR=$PG_VERSION \\\n        && pip3 install --no-cache-dir pgxnclient \\\n        && pgxnclient install \"pg_median_utils=$PG_MEDIAN_UTILS_VERSION\" \\\n        && pip3 install --no-cache-dir pipenv \\\n        && PIPENV_PIPFILE=/tmp/Pipfile pipenv install --system --deploy --three \\\n        && apt-get remove -y python3-dev gcc m4 libxml2-dev libaio-dev \\\n        && apt purge -y --auto-remove \\\n        && rm -rf /var/lib/apt/lists/*\n\n# Version Information\n# Set the version & release date\nARG FLOWDB_VERSION=v1.7.2\nENV FLOWDB_VERSION=$FLOWDB_VERSION\nARG FLOWDB_RELEASE_DATE='3000-12-12'\nENV FLOWDB_RELEASE_DATE=$FLOWDB_RELEASE_DATE\n\n# Default users\nENV FLOWAPI_FLOWDB_USER=flowapi\n\n# Default location table\nENV LOCATION_TABLE=infrastructure.cells\n\n#\n#  Copy file spinup build scripts to be execed.\n#\nCOPY --chown=postgres ./flowdb/bin/build/* /docker-entrypoint-initdb.d/\n\n#\n#  Add local data to PostgreSQL data ingestion\n#  directory. Files in that directory will be\n#  ingested by PostgreSQL on build-time.\n#\nADD --chown=postgres ./flowdb/data/* /docker-entrypoint-initdb.d/data/csv/\n# Need to make postgres owner\nRUN chown -R postgres /docker-entrypoint-initdb.d\n\nEXPOSE 5432\n"
}