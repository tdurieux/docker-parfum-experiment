{
  "startTime": 1674255133808,
  "endTime": 1674255134783,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 7,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 7,
        "columnEnd": 182
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 7,
        "columnEnd": 138
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:18.04 as build\n# Build ISCE as root with development libraries\n# --------------------------------\nLABEL maintainer=\"scottyh@uw.edu\"\n\nENV ISCE_VERSION=2.3.3\n\nWORKDIR /tmp\n\nCOPY SConfigISCE /tmp/\n\n# Update Base Ubuntu installation\nENV DEBIAN_FRONTEND noninteractive\nRUN apt-get update \\\n    && apt-get install --no-install-recommends -y wget gfortran libmotif-dev libhdf5-dev libfftw3-dev libgdal-dev scons python3 cython3 python3-scipy python3-matplotlib python3-h5py python3-gdal python3-pip \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Install ISCE and remove files from /tmp folder\nRUN wget https://github.com/isce-framework/isce2/archive/v${ISCE_VERSION}.tar.gz \\\n    && tar -zxf v${ISCE_VERSION}.tar.gz \\\n    && cd isce2-${ISCE_VERSION} \\\n    && export PYTHONPATH=/tmp/isce2-${ISCE_VERSION}/configuration \\\n    && export SCONS_CONFIG_DIR=/tmp \\\n    && scons install --skipcheck \\\n    && rm -rf /tmp/* && rm v${ISCE_VERSION}.tar.gz\n\n\n# Multistage build reduces size (no need for compilers and development libraries)\n# ----------------------------------\nFROM ubuntu:18.04 as run\n\nENV USER ubuntu\nENV UID 1000\n\n# Install run-time libraries\nENV DEBIAN_FRONTEND noninteractive\nRUN apt-get update \\\n    && apt-get install --no-install-recommends -y zip curl libfftw3-3 python3 cython3 python3-scipy python3-matplotlib python3-h5py python3-gdal python3-pip aria2 \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Don't run container as root user\nRUN groupadd --gid ${UID} ${USER}  \\\n    && useradd --create-home --gid ${UID} --no-log-init  --shell /bin/bash --uid ${UID} ${USER} \\\n    && chown -R ${USER}:${USER} /opt\n\nUSER ubuntu\nWORKDIR /home/ubuntu\n\n# Copy ISCE installation files and entrypoint script\nCOPY --chown=ubuntu:ubuntu --from=build /opt /opt\nCOPY --chown=ubuntu:ubuntu entrypoint.sh /opt/entrypoint.sh\n\n# Install aws cli, ensure entrypoint is executable\nRUN pip3 install awscli==1.18.25 --no-cache-dir \\\n    && chmod +x /opt/entrypoint.sh\n\n# Setup ISCE environment\nENV ISCE_ROOT /opt/isce2-${ISCE_VERSION}\nENV ISCE_HOME $ISCE_ROOT/isce\nENV PATH $ISCE_HOME/bin:$ISCE_HOME/applications:$PATH\nENV PYTHONPATH $ISCE_ROOT:$ISCE_HOME/applications:$ISCE_HOME/component\n\n# Placeholders for NASA URS AUTH\nENV NASAUSER runtimeenv\nENV NASAPASS runtimeenv\n\nENTRYPOINT [\"/opt/entrypoint.sh\"]\nCMD [\"/bin/bash\"]\n"
}