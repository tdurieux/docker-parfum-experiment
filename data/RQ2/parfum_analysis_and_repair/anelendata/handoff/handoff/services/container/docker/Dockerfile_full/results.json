{
  "startTime": 1674249304740,
  "endTime": 1674249305819,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 88,
        "lineEnd": 88,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 34,
        "lineEnd": 52,
        "columnStart": 7,
        "columnEnd": 18
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Pull base image.\nFROM ubuntu:18.04\n\nMAINTAINER Daigo Tanaka <daigo.tanaka@gmail.com>\n\n# upgrade is not recommended by the best practice page\n# RUN apt-get -y upgrade\n\n# Never prompts the user for choices on installation/configuration of packages\nENV DEBIAN_FRONTEND noninteractive\n\n# Define locale\nENV LANGUAGE en_US.UTF-8\nENV LANG en_US.UTF-8\nENV LC_ALL en_US.UTF-8\nENV LC_CTYPE en_US.UTF-8\nENV LC_MESSAGES en_US.UTF-8\n\n# Install dependencies via apt-get\n# Note: Always combine apt-get update and install\nRUN set -ex \\\n    && buildDeps=' \\\n        python3-dev \\\n        libkrb5-dev \\\n        libsasl2-dev \\\n        libssl-dev \\\n        libffi-dev \\\n        build-essential \\\n        libblas-dev \\\n        liblapack-dev \\\n        libpq-dev \\\n        cmake \\\n    ' \\\n    && apt-get update -yqq \\\n    && apt-get install -yqq --no-install-recommends \\\n        $buildDeps \\\n        sudo \\\n        apparmor-utils \\\n        python3-requests \\\n        python3-setuptools \\\n        python3-pip \\\n        python3-venv \\\n        apt-utils \\\n        curl \\\n        rsync \\\n        netcat \\\n        locales \\\n        wget \\\n        git \\\n        python3-pygit2 \\\n        openssh-server \\\n        openssh-client \\\n        gdebi-core \\\n    && sed -i 's/^# en_US.UTF-8 UTF-8$/en_US.UTF-8 UTF-8/g' /etc/locale.gen \\\n    && locale-gen \\\n    && update-locale LANG=en_US.UTF-8 LC_ALL=en_US.UTF-8 && rm -rf /var/lib/apt/lists/*;\n\n##############\n# libgit2 make\nRUN wget https://github.com/libgit2/libgit2/archive/v1.1.0.tar.gz && \\\n    tar xzf v1.1.0.tar.gz && \\\n    cd libgit2-1.1.0/ && \\\n    cmake . && \\\n    make && \\\n    make install && \\\n    sudo ldconfig && rm v1.1.0.tar.gz\n\n#######\n#  Add tini\nENV TINI_VERSION v0.18.0\nADD https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini /tini\nRUN chmod +x /tini\n\n########\n# SSH stuff\n\nRUN mkdir -p /var/run/sshd\n\n# SSH login fix. Otherwise user is kicked off after login\nRUN sed 's@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd\n# Or do this?\n# RUN sed -i 's/PermitRootLogin without-password/PermitRootLogin yes/' /etc/ssh/sshd_config\n\nCOPY . /app/\nRUN chmod 777 -R /app\n\nWORKDIR /app\n\nRUN pip3 install --no-cache-dir wheel\n\nRUN ./script/install_handoff\n\n# It is recommended to make virtual envs for each process\nRUN handoff workspace install -p project -w workspace\n\n# Make sure to delete these directories in case sensitive information was accidentally copied.\nRUN rm -fr project\nRUN rm -fr workspace/config\nRUN rm -fr workspace/files\nRUN rm -fr workspace/artifacts\n\nRUN chmod a+x /usr/local/bin/*\n\nENTRYPOINT [ \"/tini\", \"--\" ]\nCMD handoff ${COMMAND:-run} -w workspace -a -v $(eval echo ${__VARS:-\"dummy=1\"}) -s ${HO_STAGE:-\"dev\"} -a\n"
}