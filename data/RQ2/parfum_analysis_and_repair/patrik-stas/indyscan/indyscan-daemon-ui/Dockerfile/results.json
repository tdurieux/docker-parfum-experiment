{
  "startTime": 1674249973898,
  "endTime": 1674249974582,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "################## build api-client, prepare dirs and basic files\nFROM node:12.14.0-alpine3.9 as BASE\n\nRUN apk update && apk upgrade && \\\n    apk add --no-cache bash git openssh python make g++\nRUN mkdir -p /home/node/indyscan-daemon-ui && chown -R node:node /home/node/indyscan-daemon-ui\n\n################## build the app\n\n# For some reason, using the commende bellow creates /home/node/indyscan-daemon-api-client directory owned by root ....\n#USER node\n#COPY --chown=node:node ./indyscan-daemon-api-client ./\n\n# .... hence following awkward workaround instead...\nWORKDIR /home/node/indyscan-daemon-api-client\nCOPY ./indyscan-daemon-api-client ./\nRUN chown -R node:node /home/node/indyscan-daemon-api-client\n\nUSER node\n\nWORKDIR /home/node/indyscan-daemon-ui\nCOPY --chown=node:node ./indyscan-daemon-ui/package.json ./\nCOPY --chown=node:node ./indyscan-daemon-ui/package-lock.json ./\nCOPY --chown=node:node ./indyscan-daemon-ui/public ./public\nCOPY --chown=node:node ./indyscan-daemon-ui/src ./src\nRUN npm install && npm cache clean --force;\nRUN npm run build\nRUN npm prune --production\n\n################## serve the app\nFROM node:8.11.3-alpine as PROD\nUSER node\nWORKDIR /home/node/indyscan-daemon-ui\n\nCOPY --from=BASE --chown=node:node /home/node/indyscan-daemon-ui/build ./build\nCOPY --from=BASE --chown=node:node /home/node/indyscan-daemon-ui/node_modules ./node_modules\nCOPY --from=BASE --chown=node:node /home/node/indyscan-daemon-ui/package.json ./\n\nENV PORT ${PORT:-\"3710\"}\nENV PROXY_API_URL ${PROXY_API_URL:-\"http://host.docker.internal:3001\"}\n\nEXPOSE ${PORT}\n\nCMD npm run serve\n"
}