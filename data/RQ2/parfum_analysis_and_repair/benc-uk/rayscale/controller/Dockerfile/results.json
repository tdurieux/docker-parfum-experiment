{
  "startTime": 1674218173005,
  "endTime": 1674218173784,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 18,
        "columnEnd": 30
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 34,
        "columnEnd": 48
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# ** CONTROLLER ** Dockerfile\n#\n\nFROM node:12-alpine AS build\n\nWORKDIR /build\n\n# NPM install packages\nCOPY controller/package*.json ./controller/\nWORKDIR /build/controller\nRUN npm install --silent && npm cache clean --force;\n\n# Now we need source, for both components\nCOPY controller/src/ /build/controller/src\nCOPY tracer/src/ /build/tracer/src\nCOPY controller/tsconfig.json /build/controller/tsconfig.json\n\n# Compile TypeScript\nWORKDIR /build/controller\nRUN node node_modules/typescript/bin/tsc\n\n##############################################################\n\nFROM node:12-alpine\nLABEL org.label-schema.name=\"RayScale: Controller\" \\\r\n      org.label-schema.description=\"Controller microservice for RayScale app\" \\    \r\n      org.label-schema.version=\"2.0.1\" \\\r\n      org.label-schema.vcs-url=https://github.com/benc-uk/rayscale\n\nWORKDIR /app/controller\nENV PORT 9000\nENV HEALTH_CHECK_INTERVAL 90\nENV JOB_OUTPUT /app/controller/jobs\nENV NODE_ENV production\n\n# NPM install packages\nCOPY controller/package*.json ./\nRUN npm install --production --silent && npm cache clean --force;\n\n# NPM is done, copy in transpiled JS from dist\nCOPY --from=build /build/controller/dist/ ./dist\n\n# Also need the WebUI, assets and jobs directories\nCOPY controller/webui/ ./webui\nCOPY controller/assets/ ./assets\nRUN mkdir jobs\n\n# Install bash inside for debugging, ffmeg also needed now\nRUN apk update && apk add --no-cache bash && apk add --no-cache ffmpeg\n\nEXPOSE 9000\nCMD npm start"
}