{
  "startTime": 1674253464943,
  "endTime": 1674253465575,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 52,
        "columnEnd": 72
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# ===================================================================================\n# === Stage 1: Build the Go service code into 'server' exe ==========================\n# ===================================================================================\nFROM golang:1.18-alpine as go-build\n\nARG SERVICE_NAME=\"SET_ON_COMMAND_LINE\"\nARG VERSION=\"0.0.1\"\nARG BUILD_INFO=\"Not provided\"\nARG CGO_ENABLED=0\n\nWORKDIR /build\n\n# Install system dependencies, if CGO_ENABLED=1\nRUN if [[ $CGO_ENABLED -eq 1 ]]; then \\\n apk update && apk add --no-cache gcc musl-dev; fi\n\n# Fetch and cache Go modules\nCOPY go.mod .\nCOPY go.sum .\nRUN go mod download\n\n# Copy in Go source files\nCOPY cmd/ ./cmd/\nCOPY pkg/ ./pkg/\n\n# Now run the build\n# Inject version and build details, to be available at runtime\nRUN GO111MODULE=on CGO_ENABLED=$CGO_ENABLED GOOS=linux \\\n  go build \\\n  -ldflags \"-X main.version=$VERSION -X 'main.buildInfo=$BUILD_INFO'\" \\\n  -o server github.com/benc-uk/dapr-store/cmd/${SERVICE_NAME}\n\n# ================================================================================================\n# === Stage 2: Get server binary into a lightweight container ====================================\n# ================================================================================================\nFROM alpine\nWORKDIR /app\n\nARG SERVICE_NAME=\"SET_ON_COMMAND_LINE\"\nARG SERVICE_PORT=9000\n\n# Copy the Go server binary\nCOPY --from=go-build /build/server .\n\nEXPOSE $SERVICE_PORT\nENV PORT=$SERVICE_PORT\n\n# This is a trick, we don't really need run.sh\n# But some services might have .db files, some don't\nCOPY cmd/$SERVICE_NAME/readme.md cmd/$SERVICE_NAME/*.db ./\n\n# That's it! Just run the server\nCMD [ \"./server\"]"
}