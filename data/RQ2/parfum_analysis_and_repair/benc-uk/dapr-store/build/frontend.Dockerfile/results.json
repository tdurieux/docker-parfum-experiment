{
  "startTime": 1674218211359,
  "endTime": 1674218212211,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 24
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# ===================================================================================\n# === Stage 1: Build static serving host ============================================\n# ===================================================================================\nFROM golang:1.18-alpine as server-build\n\nWORKDIR /build\n\n# Install system dependencies\n#RUN apk update && apk add git gcc musl-dev\n\n# Fetch and cache Go modules\nCOPY go.mod .\nCOPY go.sum .\nRUN go mod download\n\n# Copy in Go source files\nCOPY cmd/frontend-host/ ./service\nCOPY pkg/ ./pkg\n\n# Now run the build\nRUN GO111MODULE=on CGO_ENABLED=0 GOOS=linux go build \\\n  -o server ./service\n\n# ================================================================================================\n# === Stage 2: Build and bundle the Vue.js app with Vue CLI 3 ====================================\n# ================================================================================================\nFROM node:16-alpine as frontend-build\n\nARG VERSION=\"0.0.1\"\nARG BUILD_INFO=\"Not provided\"\n\nENV VUE_APP_BUILD_INFO=${BUILD_INFO}\nWORKDIR /build\n\n# Install all the Vue.js dev tools & CLI, and our app dependencies\nCOPY web/frontend/package*.json ./\n# We inject and update the version in package.json at build time from the $VERSION build arg\nRUN npm version $VERSION --allow-same-version\nRUN npm install --silent && npm cache clean --force;\n\n# Copy in the Vue.js app source\nCOPY web/frontend/.eslintrc.js .\nCOPY web/frontend/public ./public\nCOPY web/frontend/src ./src\n\n# Now main Vue CLI build & bundle, this will output to ./dist\nRUN npm run build\n\n# ================================================================================================\n# === Stage 3: Bundle server exe and Vue dist in runtime image ===================================\n# ================================================================================================\nFROM scratch\nWORKDIR /app\n\n# Copy in output from Vue bundle (the dist)\nCOPY --from=frontend-build /build/dist ./dist\n# Copy the Go server binary\nCOPY --from=server-build /build/server .\n\nEXPOSE 8000\n\n# That's it! Just run the server\nCMD [ \"./server\"]"
}