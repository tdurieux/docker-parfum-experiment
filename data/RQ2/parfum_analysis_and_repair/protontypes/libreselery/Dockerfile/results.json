{
  "startTime": 1674217554199,
  "endTime": 1674217555094,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 74
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.7.5-slim-stretch\n\nARG UID=1001\nARG GID=1002\n\n########### D E P S  ###########\nRUN groupadd -g $GID selery && \\\n    useradd -m -u $UID -g $GID --shell /bin/bash selery\n\n## RUBY\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y git ruby ruby-dev ruby-bundler build-essential curl && \\\n    rm -rf /var/lib/apt/lists/*\n\nWORKDIR /\n\nCOPY Gemfile .\n\nRUN bundle install\n\n########### P R E P ###########\n### Copy libreselery into the image for installation\nCOPY . /home/selery/libreselery/\n### create other useful dirs\nRUN mkdir -p /home/selery/results\nRUN mkdir -p /home/selery/config\n\nWORKDIR /home/selery/libreselery\n\n\n### permissions so someone can reinstall libreselery from inside the container\nRUN chown -R selery:selery /usr/local/lib/python3.7/site-packages/\nRUN chown -R selery:selery /usr/local/bin\n### prepare selery user permissions\nRUN chown -R selery:selery /home/selery/libreselery\nRUN chown -R selery:selery /home/selery/results\nRUN chown -R selery:selery /home/selery/config\n\n### change user\nUSER selery\n\n\n########### I N S T A L L ###########\n### Install libreselery and it's dependencies\nRUN python setup.py install\n\n\n########### P O S T ###########\n### set image entrypoint to be libreselery executable\nENTRYPOINT [\"selery\", \"run\"]\n"
}