{
  "startTime": 1674246367053,
  "endTime": 1674246367714,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 22,
        "columnEnd": 62
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 22,
        "columnEnd": 62
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# -------------------\n# Build Stage 1 (npm)\n# -------------------\nFROM node:alpine AS appbuild\n\nRUN apk add --update --no-cache p7zip\n\nWORKDIR /usr/src/app\n\nCOPY ./package.json ./\nRUN npm install && npm cache clean --force;\n\nCOPY . ./\nRUN npm run build:prod\n# RUN npm run build\n\n\n# ------------------------\n# Build Stage 2 (composer)\n# ------------------------\nFROM composer AS apibuild\n\nWORKDIR /app\n\nCOPY ./src/api ./\nRUN composer install\n\n\n# --------------------------\n# Build Stage 3 (php-apache)\n# This build takes the production build from staging builds\n# --------------------------\nFROM php:7.3-apache\n\nENV PROJECT /var/www/html\n\nRUN apt-get update && apt-get install --no-install-recommends -y sqlite3 php7.3-sqlite && rm -rf /var/lib/apt/lists/*;\nRUN a2enmod rewrite expires\n# RUN docker-php-ext-install pdo_mysql\n\n# RUN pecl install xdebug && docker-php-ext-enable xdebug\n# COPY xdebug.ini /usr/local/etc/php/conf.d/xdebug.ini\n\nWORKDIR $PROJECT\nCOPY --from=appbuild /usr/src/app/dist ./\nRUN rm -rf ./api/*\nCOPY --from=apibuild /app ./api/\nRUN chmod 777 ./api\nEXPOSE 80\n"
}