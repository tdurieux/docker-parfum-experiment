diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/openvinotoolkit/cvat/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/openvinotoolkit/cvat/Dockerfile/repaired.Dockerfile
index 1f6410f..15aaa50 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/openvinotoolkit/cvat/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/openvinotoolkit/cvat/Dockerfile/repaired.Dockerfile
@@ -30,17 +30,17 @@ ENV FFMPEG_VERSION=4.3.1 \
     OPENH264_VERSION=2.1.1
 
 WORKDIR /tmp/openh264
-RUN curl -sL https://github.com/cisco/openh264/archive/v${OPENH264_VERSION}.tar.gz --output openh264-${OPENH264_VERSION}.tar.gz && \
+RUN curl -f -sL https://github.com/cisco/openh264/archive/v${OPENH264_VERSION}.tar.gz --output openh264-${OPENH264_VERSION}.tar.gz && \
     tar -zx --strip-components=1 -f openh264-${OPENH264_VERSION}.tar.gz && \
-    make -j5 && make install PREFIX=${PREFIX} && make clean
+    make -j5 && make install PREFIX=${PREFIX} && make clean && rm openh264-${OPENH264_VERSION}.tar.gz
 
 WORKDIR /tmp/ffmpeg
-RUN curl -sL https://ffmpeg.org/releases/ffmpeg-${FFMPEG_VERSION}.tar.bz2 --output - | \
+RUN curl -f -sL https://ffmpeg.org/releases/ffmpeg-${FFMPEG_VERSION}.tar.bz2 --output - | \
     tar -jx --strip-components=1 && \
-    ./configure --disable-nonfree --disable-gpl --enable-libopenh264 --enable-shared --disable-static --prefix="${PREFIX}" && \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --disable-nonfree --disable-gpl --enable-libopenh264 --enable-shared --disable-static --prefix="${PREFIX}" && \
     # make clean keeps the configuration files that let to know how the original sources were used to create the binary
     make -j5 && make install && make clean && \
-    tar -zcf "/tmp/ffmpeg-$FFMPEG_VERSION.tar.gz" . && mv "/tmp/ffmpeg-$FFMPEG_VERSION.tar.gz" .
+    tar -zcf "/tmp/ffmpeg-$FFMPEG_VERSION.tar.gz" . && mv "/tmp/ffmpeg-$FFMPEG_VERSION.tar.gz" . && rm "/tmp/ffmpeg-$FFMPEG_VERSION.tar.gz"
 
 # Install requirements
 RUN python3 -m venv /opt/venv