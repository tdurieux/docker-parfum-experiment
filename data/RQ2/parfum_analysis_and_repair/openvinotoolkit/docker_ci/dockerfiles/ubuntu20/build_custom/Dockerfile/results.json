{
  "startTime": 1674253086072,
  "endTime": 1674253087662,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 86
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 4,
        "columnEnd": 47
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright (C) 2020-2022 Intel Corporation\n# SPDX-License-Identifier: Apache-2.0\nFROM ubuntu:20.04 AS setup_openvino\n\nLABEL description=\"This is the dev image for Intel(R) Distribution of OpenVINO(TM) toolkit on Ubuntu 20.04 LTS\"\nLABEL vendor=\"Intel Corporation\"\n\n# hadolint ignore=DL3008\nRUN apt-get update; \\\n    DEBIAN_FRONTEND=noninteractive \\\n    apt-get install -y --no-install-recommends \\\n        apt-utils \\\n        git \\\n        git-lfs \\\n        ca-certificates \\\n        sudo \\\n        tzdata; \\\n    rm -rf /var/lib/apt/lists/*\n\nARG OPENVINO_FORK=\"openvinotoolkit\"\nARG OPENVINO_BRANCH=\"master\"\nARG OMZ_BRANCH\n\n# hadolint ignore=DL3003\nRUN git-lfs install; \\\n    git clone https://github.com/${OPENVINO_FORK}/openvino.git \\\n    --recurse-submodules --shallow-submodules --depth 1 -b ${OPENVINO_BRANCH} /opt/intel/repo/openvino; \\\n    if [ -n \"$OMZ_BRANCH\" ]; then  \\\n      cd /opt/intel/repo/openvino/thirdparty/open_model_zoo && \\\n      git remote set-branches origin '*' && \\\n      git fetch --depth 1 origin \"$OMZ_BRANCH\" && \\\n      git checkout \"$OMZ_BRANCH\"; \\\n    fi\n\nWORKDIR /opt/intel/repo/openvino\nRUN chmod +x install_build_dependencies.sh; \\\n    ./install_build_dependencies.sh\n\nRUN chmod +x scripts/install_dependencies/install_NEO_OCL_driver.sh; \\\n    ./scripts/install_dependencies/install_NEO_OCL_driver.sh -y --no_numa\n\n# hadolint ignore=DL3013\nRUN chmod +x scripts/install_dependencies/install_openvino_dependencies.sh; \\\n    ./scripts/install_dependencies/install_openvino_dependencies.sh -y -c=python; \\\n    python3 -m pip install --no-cache-dir --upgrade pip; \\\n    python3 -m pip install --no-cache-dir -r src/bindings/python/src/compatibility/openvino/requirements-dev.txt\n\nWORKDIR /opt/intel/repo\nCMD [\"/bin/bash\"]\n# -------------------------------------------------------------------------------------------------\nFROM setup_openvino AS build_openvino\n\nLABEL description=\"This is the dev image for Intel(R) Distribution of OpenVINO(TM) toolkit on Ubuntu 20.04 LTS\"\nLABEL vendor=\"Intel Corporation\"\n\nCOPY openvino_cmake.txt /opt/intel/repo\n\nRUN python3 -m pip install --no-cache-dir -r /opt/intel/repo/openvino/src/bindings/python/wheel/requirements-dev.txt\n\nWORKDIR /opt/intel/repo/openvino/build\n# hadolint ignore=SC2046\nRUN cmake $(cat /opt/intel/repo/openvino_cmake.txt) /opt/intel/repo/openvino; \\\n    make \"-j$(nproc)\"; \\\n    make install\n\nWORKDIR /tmp\nRUN curl -f -L https://github.com/libusb/libusb/archive/v1.0.22.zip --output v1.0.22.zip; \\\n    unzip v1.0.22.zip; \\\n    rm -rf v1.0.22.zip\n\nWORKDIR /tmp/libusb-1.0.22\nRUN ./bootstrap.sh; \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --disable-udev --enable-shared; \\\n    make \"-j$(nproc)\"\n\nWORKDIR /opt/intel/repo\nCMD [\"/bin/bash\"]\n# -------------------------------------------------------------------------------------------------\nFROM ubuntu:20.04 AS copy_openvino\n\nLABEL description=\"This is the dev image for Intel(R) Distribution of OpenVINO(TM) toolkit on Ubuntu 20.04 LTS\"\nLABEL vendor=\"Intel Corporation\"\n\nENV INTEL_OPENVINO_DIR=\"/opt/intel/openvino\"\n\nCOPY --from=build_openvino /opt/intel/repo/openvino/build/install ${INTEL_OPENVINO_DIR}\nCOPY --from=build_openvino /tmp/libusb-1.0.22 /opt/libusb-1.0.22\n\nWORKDIR ${INTEL_OPENVINO_DIR}\nCMD [\"/bin/bash\"]\n# -------------------------------------------------------------------------------------------------\nFROM copy_openvino AS openvino\n\nLABEL description=\"This is the dev image for Intel(R) Distribution of OpenVINO(TM) toolkit on Ubuntu 20.04 LTS\"\nLABEL vendor=\"Intel Corporation\"\n\n# hadolint ignore=DL3008\nRUN apt-get update; \\\n    DEBIAN_FRONTEND=noninteractive \\\n    apt-get install -y --no-install-recommends \\\n        apt-utils \\\n        wget \\\n        udev \\\n        sudo \\\n        gdb \\\n        tzdata; \\\n    rm -rf /var/lib/apt/lists/*\n\nWORKDIR ${INTEL_OPENVINO_DIR}\nRUN chmod +x install_dependencies/install_openvino_dependencies.sh; \\\n    ./install_dependencies/install_openvino_dependencies.sh -y -c=python -c=dev\n\nRUN chmod +x install_dependencies/install_NEO_OCL_driver.sh; \\\n    ./install_dependencies/install_NEO_OCL_driver.sh -y --no_numa\n\nWORKDIR /opt/libusb-1.0.22\nRUN ./libtool --mode=install install -c libusb/libusb-1.0.la /usr/local/lib/; \\\n    mkdir -p /usr/local/include/libusb-1.0; \\\n    install -c -m 644 libusb/libusb.h /usr/local/include/libusb-1.0; \\\n    mkdir -p /usr/local/lib/pkgconfig; \\\n    install -c -m 644 libusb-1.0.pc /usr/local/lib/pkgconfig\n\nWORKDIR ${INTEL_OPENVINO_DIR}\nRUN chmod +x install_dependencies/install_NCS_udev_rules.sh; \\\n    ./install_dependencies/install_NCS_udev_rules.sh\n\n# hadolint ignore=DL3013\nRUN python3 -m pip install --no-cache-dir --upgrade pip; \\\n    python3 -m pip install --no-cache-dir -r python/python3.8/requirements.txt; \\\n    python3 -m pip install --no-cache-dir openvino --find-links=tools/ ; \\\n    python3 -m pip install --no-cache-dir 'openvino_dev[caffe,kaldi,mxnet,onnx,pytorch,tensorflow2]' --find-links=tools/\n\nRUN printf \"\\nsource \\${INTEL_OPENVINO_DIR}/setupvars.sh\\n\" >> /root/.bashrc\n\nCMD [\"/bin/bash\"]\n# -------------------------------------------------------------------------------------------------\nFROM openvino AS opencv\n\nLABEL description=\"This is the dev image for Intel(R) Distribution of OpenVINO(TM) toolkit on Ubuntu 20.04 LTS\"\nLABEL vendor=\"Intel Corporation\"\n\nSHELL [\"/bin/bash\", \"-xo\", \"pipefail\", \"-c\"]\n\n# hadolint ignore=DL3008\nRUN apt-get update; \\\n    apt-get install -y --no-install-recommends \\\n        git \\\n        libva-dev \\\n        libgtk-3-dev \\\n        libavcodec-dev \\\n        libavformat-dev \\\n        libavutil-dev \\\n        libswscale-dev \\\n        libavresample-dev \\\n        libgstreamer1.0-dev \\\n        libgstreamer-plugins-base1.0-dev \\\n        libgstreamer-plugins-good1.0-dev \\\n        libgstreamer-plugins-bad1.0-dev; \\\n    rm -rf /var/lib/apt/lists/*\n\nARG OPENCV_BRANCH=\"master\"\n\nARG BUILD_OPENCV_CONTRIB=\"no\"\nARG OPENCV_CONTRIB_BRANCH=\"master\"\n\nWORKDIR /opt/intel/repo\nRUN git clone https://github.com/opencv/opencv.git --depth 1 -b ${OPENCV_BRANCH} && \\\n    if [ \"$BUILD_OPENCV_CONTRIB\" = \"yes\" ]; then \\\n    git clone https://github.com/opencv/opencv_contrib.git --depth 1 -b ${OPENCV_CONTRIB_BRANCH}; fi\n\nCOPY opencv_cmake.txt /opt/intel/repo\n\nWORKDIR /opt/intel/repo/opencv/build\n# hadolint ignore=SC2046\nRUN . \"${INTEL_OPENVINO_DIR}/setupvars.sh\"; \\\n    if [ \"$BUILD_OPENCV_CONTRIB\" = \"yes\" ]; then \\\n      apt-get update && \\\n      apt-get install -y --no-install-recommends libtesseract-dev && \\\n      cmake $(cat /opt/intel/repo/opencv_cmake.txt) -D OPENCV_EXTRA_MODULES_PATH=/opt/intel/repo/opencv_contrib/modules /opt/intel/repo/opencv && \\\n      rm -rf /var/lib/apt/lists/* ; \\\n    else \\\n      cmake $(cat /opt/intel/repo/opencv_cmake.txt) /opt/intel/repo/opencv; \\\n    fi; \\\n    make \"-j$(nproc)\"; \\\n    make install\n\nWORKDIR /opt/intel/repo/opencv/build/install\nRUN mkdir \"${INTEL_OPENVINO_DIR}/extras\"; \\\n    cp -r . \"${INTEL_OPENVINO_DIR}/extras/opencv\"; \\\n    cp -r \"${INTEL_OPENVINO_DIR}/extras/opencv/python/python3\" \"${INTEL_OPENVINO_DIR}/python\"; \\\n    rm -r \"${INTEL_OPENVINO_DIR}/extras/opencv/python\"; \\\n    echo \"export OpenCV_DIR=${INTEL_OPENVINO_DIR}/extras/opencv/cmake\" | tee -a \"${INTEL_OPENVINO_DIR}/extras/opencv/setupvars.sh\"; \\\n    echo \"export LD_LIBRARY_PATH=${INTEL_OPENVINO_DIR}/extras/opencv/lib:\\$LD_LIBRARY_PATH\" | tee -a \"${INTEL_OPENVINO_DIR}/extras/opencv/setupvars.sh\"; \\\n    python3 -m pip uninstall -y opencv-python; \\\n    rm -rf /opt/intel/repo/opencv/build/install\n\nWORKDIR ${INTEL_OPENVINO_DIR}\nCMD [\"/bin/bash\"]\n# -------------------------------------------------------------------------------------------------\nFROM opencv as openvino_repo\n\nLABEL description=\"This is the dev image for Intel(R) Distribution of OpenVINO(TM) toolkit on Ubuntu 20.04 LTS\"\nLABEL vendor=\"Intel Corporation\"\n\nENV INTEL_OPENVINO_DIR=\"/opt/intel/openvino\"\n\nCOPY --from=build_openvino /opt/intel/repo /opt/intel/repo\n\n# hadolint ignore=DL3013\nRUN ln --symbolic /opt/intel/repo/openvino/thirdparty/open_model_zoo/ ${INTEL_OPENVINO_DIR}/open_model_zoo && \\\n    python3 -m pip install --no-cache-dir --no-deps open_model_zoo/demos/common/python\n\nWORKDIR ${INTEL_OPENVINO_DIR}\nCMD [\"/bin/bash\"]"
}