{
  "startTime": 1674248428917,
  "endTime": 1674248430000,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 71
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 23,
        "columnEnd": 34
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 4,
        "columnEnd": 31
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#This Dockerfile is for x86 and should be used for OpenVINO ARM plugin cross-compilation\n#https://github.com/openvinotoolkit/openvino_contrib/tree/master/modules/arm_plugin#how-to-build\n\nFROM ubuntu:20.04\n\nENV DEBIAN_FRONTEND noninteractive\nENV PAKAGE_UPDATES_OF 20220126\n\n#Prerequisite installation\nRUN apt-get update && \\\n    apt-get -y upgrade && \\\n    echo deb [arch=amd64] http://archive.ubuntu.com/ubuntu/ focal main restricted > /etc/apt/sources.list && \\\n    echo deb [arch=amd64] http://archive.ubuntu.com/ubuntu/ focal-updates main restricted >> /etc/apt/sources.list && \\\n    echo deb [arch=amd64] http://archive.ubuntu.com/ubuntu/ focal universe >> /etc/apt/sources.list && \\\n    echo deb [arch=amd64] http://archive.ubuntu.com/ubuntu/ focal-updates universe >> /etc/apt/sources.list && \\\n    echo deb [arch=amd64] http://archive.ubuntu.com/ubuntu/ focal multiverse >> /etc/apt/sources.list && \\\n    echo deb [arch=amd64] http://archive.ubuntu.com/ubuntu/ focal-updates multiverse >> /etc/apt/sources.list && \\\n    echo deb [arch=amd64] http://archive.ubuntu.com/ubuntu/ focal-backports main restricted universe multiverse >> /etc/apt/sources.list && \\\n    echo deb [arch=amd64] http://security.ubuntu.com/ubuntu/ focal-security main restricted >> /etc/apt/sources.list && \\\n    echo deb [arch=amd64] http://security.ubuntu.com/ubuntu/ focal-security universe >> /etc/apt/sources.list && \\\n    echo deb [arch=amd64] http://security.ubuntu.com/ubuntu/ focal-security multiverse >> /etc/apt/sources.list && \\\n    echo deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports/ focal main >> /etc/apt/sources.list && \\\n    echo deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports/ focal universe >> /etc/apt/sources.list && \\\n    echo deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports/ focal-updates main >> /etc/apt/sources.list && \\\n    echo deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports/ focal-security main >> /etc/apt/sources.list && \\\n    dpkg --add-architecture arm64 && \\\n    apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        locales \\\n        apt-transport-https \\\n        debian-archive-keyring \\\n        software-properties-common \\\n        gnupg \\\n        p7zip-full \\\n        chrpath \\\n        curl \\\n        wget \\\n        git \\\n        scons \\\n        cmake \\\n        build-essential \\\n        crossbuild-essential-arm64 \\\n        python3-dev \\\n        python3-numpy \\\n        python3-pip \\\n        libpython3-dev:arm64 \\\n        libprotoc-dev \\\n        protobuf-compiler \\\n        libffi-dev \\\n        libssl-dev \\\n        libusb-1.0-0-dev:arm64 \\\n        libgtk-3-dev:arm64 \\\n        libavcodec-dev:arm64 \\\n        libavformat-dev:arm64 \\\n        libswscale-dev:arm64 \\\n    && \\\n    locale-gen en_US.UTF-8 && \\\n    pip3 install --no-cache-dir cython && \\\n    rm -rf /var/lib/apt/lists/*\n\n# To cross-compile Python3.7 we need to first compile it for the host\nRUN curl -f -O https://www.python.org/ftp/python/3.7.9/Python-3.7.9.tar.xz && \\\n    tar -xf Python-3.7.9.tar.xz && \\\n    cd Python-3.7.9 && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make -j4 && make altinstall && \\\n    curl -f https://bootstrap.pypa.io/get-pip.py | python3.7 - --no-cache-dir pip==20.2.2 numpy==1.19.5 cython && rm Python-3.7.9.tar.xz\n\n# Cross-compile Python3.7 for ARM\nRUN cd Python-3.7.9 && make distclean && \\\n    ./configure \\\n        --host=aarch64-linux-gnu \\\n        --build=x86_64-linux-gnu \\\n        --disable-ipv6 \\\n        --enable-shared \\\n        --prefix=/opt/python3.7_arm \\\n        ac_cv_file__dev_ptmx=no \\\n        ac_cv_file__dev_ptc=no && \\\n    make -j4 && make altinstall\n\n# Replace exceptional Python version. It's used in case of failed test check which we\n# have in our case because CMake tries to run cross-compiled python to detect version.\nRUN sed -i -E 's|PYTHON_VERSION_STRING \"1.4\"|PYTHON_VERSION_STRING \"3.7\"|' /usr/share/cmake-3.16/Modules/FindPythonInterp.cmake && \\\n    sed -i -E 's|PYTHON_VERSION_MAJOR \"1\"|PYTHON_VERSION_MAJOR \"3\"|' /usr/share/cmake-3.16/Modules/FindPythonInterp.cmake && \\\n    sed -i -E 's|PYTHON_VERSION_MINOR \"4\"|PYTHON_VERSION_MINOR \"7\"|' /usr/share/cmake-3.16/Modules/FindPythonInterp.cmake && \\\n    sed -i -E 's|PYTHON_VERSION_PATCH \"0\"|PYTHON_VERSION_PATCH \"9\"|' /usr/share/cmake-3.16/Modules/FindPythonInterp.cmake\n\nRUN rm -f /usr/bin/python3 && ln -s /usr/local/bin/python3.7 /usr/bin/python3\nRUN rm /usr/bin/lsb_release\n\nRUN git config --global user.name \"Your Name\" && \\\n    git config --global user.email \"you@example.com\"\n\nENV ARCH_NAME aarch64-linux-gnu\nENV TOOLCHAIN_DEFS arm64.toolchain.cmake\nCOPY scripts/arm_cpu_plugin_build.sh /arm_cpu_plugin_build.sh\n\n#configure paths\nRUN mkdir -p /arm_cpu_plugin\nWORKDIR /arm_cpu_plugin/\n\nCMD [\"sh\", \"/arm_cpu_plugin_build.sh\"]\n"
}