{
  "startTime": 1674246666580,
  "endTime": 1674246667166,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 22,
        "columnStart": 18,
        "columnEnd": 18
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:20.04\n\nARG PIP_EXTRA_INDEX_URL\nARG PIP_TRUSTED_HOST\nARG http_proxy\nARG https_proxy\nARG no_proxy\n\nRUN echo \"PIP_EXTRA_INDEX_URL=${PIP_EXTRA_INDEX_URL}\"\nRUN echo \"PIP_TRUSTED_HOST=${PIP_TRUSTED_HOST}\"\nRUN echo \"http_proxy=${http_proxy}\"\nRUN echo \"https_proxy=${https_proxy}\"\nRUN echo \"no_proxy=${no_proxy}\"\n\nARG DEBIAN_FRONTEND=noninteractive\nARG TZ=Etc/UTC\n\nRUN apt update && apt install --no-install-recommends -y \\\n    git \\\n    build-essential \\\n    python3.8-dev \\\n    python3.8-venv \\\n    python3-opencv \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Add user\nARG BUILD_UID=1001\nARG BUILD_USER=onnxruntimedev\n\nRUN adduser --uid $BUILD_UID $BUILD_USER\nRUN usermod -a -G video,users ${BUILD_USER}\nENV WORKDIR_PATH /home/${BUILD_USER}\n\n# Copy nncf\nWORKDIR ${WORKDIR_PATH}/nncf\nADD nncf nncf\nADD examples examples\nADD tests tests\nADD setup.py ./\nADD README.md ./\nADD Makefile ./\n\nWORKDIR ${WORKDIR_PATH}\nRUN chown -R ${BUILD_USER}:${BUILD_USER} nncf\n\nUSER ${BUILD_USER}\n\n# Create & activate venv\nENV VIRTUAL_ENV=${WORKDIR_PATH}/venv\nRUN python3 -m venv $VIRTUAL_ENV\nENV PATH=\"$VIRTUAL_ENV/bin:$PATH\"\n\nWORKDIR ${WORKDIR_PATH}/nncf\nRUN make install-onnx-dev\n\nWORKDIR ${WORKDIR_PATH}\n"
}