{
  "startTime": 1674253598518,
  "endTime": 1674253599677,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 81,
        "lineEnd": 81,
        "columnStart": 24,
        "columnEnd": 117
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 90,
        "lineEnd": 90,
        "columnStart": 62,
        "columnEnd": 179
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 106,
        "lineEnd": 107,
        "columnStart": 18,
        "columnEnd": 18
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# Copyright (c) 2021 Intel Corporation\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\nFROM ubuntu:20.04 as base_build\n\nARG CLIENT=all\nENV DEBIAN_FRONTEND=noninteractive\n\nRUN apt update && apt install -y --no-install-recommends \\\n        automake \\\n        build-essential \\\n        ca-certificates \\\n        curl \\\n        cmake \\\n        git \\\n        libcurl3-dev \\\n        libfreetype6-dev \\\n        libpng-dev \\\n        libtbb-dev \\\n        libtool \\\n        libzmq3-dev \\\n        mlocate \\\n        ninja-build \\\n        openjdk-8-jdk\\\n        openjdk-8-jre-headless \\\n        pkg-config \\\n        python-dev \\\n        software-properties-common \\\n        swig \\\n        unzip \\\n        wget \\\n        zip \\\n        zlib1g-dev \\\n        python3-distutils \\\n        && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/*\n\nRUN curl -fSsL -O https://bootstrap.pypa.io/get-pip.py && \\\n    python3 get-pip.py && \\\n    rm get-pip.py\n\nRUN pip3 --no-cache-dir install \\\n    future>=0.17.1 \\\n    grpcio \\\n    h5py \\\n    keras_applications>=1.0.8 \\\n    keras_preprocessing>=1.1.0 \\\n    mock \\\n    numpy \\\n    requests \\\n    --ignore-installed setuptools \\\n    --ignore-installed six\n\n# Set up Bazel\nENV BAZEL_VERSION 3.7.2\nWORKDIR /\nRUN mkdir /bazel && \\\n    cd /bazel && \\\n    curl -H \"User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.133 Safari/537.36\" -fSsL -O https://github.com/bazelbuild/bazel/releases/download/$BAZEL_VERSION/bazel-$BAZEL_VERSION-installer-linux-x86_64.sh && \\\n    curl -H \"User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.133 Safari/537.36\" -fSsL -o /bazel/LICENSE.txt https://raw.githubusercontent.com/bazelbuild/bazel/master/LICENSE && \\\n    chmod +x bazel-*.sh && \\\n    ./bazel-$BAZEL_VERSION-installer-linux-x86_64.sh && \\\n    cd / && \\\n    rm -f /bazel/bazel-$BAZEL_VERSION-installer-linux-x86_64.sh\n\nWORKDIR /input/images\nRUN cd /input/ && wget https://raw.githubusercontent.com/openvinotoolkit/model_server/v2021.4.1/example_client/input_images.txt && \\\n    cd /input/images && curl -f -sS https://github.com/openvinotoolkit/model_server/tree/v2021.4.1/example_client/images | \\\n    grep -oh \"\\/images.*jpeg\" | cut -c 9- | cut -f1 -d\"\\\"\" | \\\n    xargs -I %s wget https://raw.githubusercontent.com/openvinotoolkit/model_server/v2021.4.1/example_client/images/%s\n\nWORKDIR /build\nCOPY .bazelrc WORKSPACE /build/\nCOPY external /build/external/\nCOPY third_party /build/third_party/\n\nRUN mkdir -p /opt/intel/openvino && cd /opt/intel/openvino && curl -f -s https://storage.openvinotoolkit.org/repositories/openvino/packages/2022.1/opencv/openvino_opencv_ubuntu20.tgz | tar -xzf - && cd /build\n\nRUN bazel build \\\n    @tensorflow_serving//tensorflow_serving/apis:prediction_service_cc_proto \\\n    @com_github_grpc_grpc//:grpc++ \\\n    @com_google_protobuf//:protobuf_lite \\\n    @org_tensorflow//tensorflow/core:framework \\\n    @org_tensorflow//tensorflow/core:lib \\\n    @opencv//:opencv\n\nCOPY src/ /build/src/\n\nRUN bazel build //src:$CLIENT\n\nFROM ubuntu:20.04 as release\nENV DEBIAN_FRONTEND=noninteractive\nRUN apt update && apt install -y --no-install-recommends \\\n        libtbb-dev && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /clients/\n\nRUN mkdir -p /clients/libs/ && mkdir -p /clients/images\nCOPY --from=base_build \\\n    /build/bazel-bin/src \\\n    /clients\nCOPY --from=base_build /input/images/*.jpeg /clients/images/\nCOPY --from=base_build /input/input_images.txt /clients/\nCOPY --from=base_build /opt/intel/openvino/extras/opencv/lib/* /lib/x86_64-linux-gnu/\n"
}