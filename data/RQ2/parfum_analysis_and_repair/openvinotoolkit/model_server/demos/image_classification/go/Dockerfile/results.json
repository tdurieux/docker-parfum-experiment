{
  "startTime": 1674253661607,
  "endTime": 1674253662202,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 99
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 99
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 27
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 51
      }
    }
  ],
  "repairedDockerfile": "#\n# Copyright (c) 2021 Intel Corporation\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\nFROM golang:latest\nARG http_proxy\n\nRUN echo \"Acquire::http::Proxy \\\"$http_proxy\\\";\" > /etc/apt/apt.conf.d/proxy.conf\nRUN apt-get update && \\\n    apt-get -y --no-install-recommends install git unzip build-essential autoconf libtool protobuf-compiler libprotobuf-dev && rm -rf /var/lib/apt/lists/*;\nRUN go get google.golang.org/grpc\nRUN go get github.com/golang/protobuf/protoc-gen-go\n\n# Install Go OpenCV (to simplify postprocessing)\nRUN apt-get install --no-install-recommends -y sudo && \\\n    git clone https://github.com/hybridgroup/gocv.git && \\\n    cd gocv && \\\n    make install && rm -rf /var/lib/apt/lists/*;\n\nRUN mkdir /app\nCOPY . /app\nWORKDIR /app\n\n# Compile API\nRUN protoc -I apis/ apis/tensorflow_serving/apis/*.proto --go_out=plugins=grpc:.\nRUN protoc -I apis/ apis/tensorflow/core/framework/*.proto --go_out=plugins=grpc:.\n\n# Move compiled protos under GOROOT\nRUN mv tensorflow /usr/local/go/src/\nRUN mv tensorflow_serving /usr/local/go/src/\n\n## we run go build to compile the binary\nRUN go mod init ovmsclient\nRUN go mod tidy\nRUN go build .\n\n\nENTRYPOINT [\"/app/ovmsclient\"]"
}