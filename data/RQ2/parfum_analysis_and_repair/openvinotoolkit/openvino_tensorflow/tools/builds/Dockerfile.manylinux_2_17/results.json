{
  "startTime": 1674252582074,
  "endTime": 1674252583062,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 46
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright (C) 2021-2022 Intel Corporation\n# SPDX-License-Identifier: Apache-2.0\n\nFROM quay.io/pypa/manylinux2014_x86_64 AS base\n\nLABEL Description=\"This is the manylinux2014 based dockerfile that builds Python 3.x whl packages \\\n                   for Intel(R) OpenVINO(TM) integration with TensorFlow\"\nLABEL Vendor=\"Intel Corporation\"\n\nARG OVTF_BRANCH\n\nUSER root\nWORKDIR /\nSHELL [\"/bin/bash\", \"-xo\", \"pipefail\", \"-c\"]\n\n# yum dependencies\nRUN yum update -y && \\\n    yum group install -y \"Development Tools\" && \\\n    yum clean all && rm -rf /var/cache/yum\n\nRUN yum install -y zlib-devel libffi-devel \\\n    openssl-devel wget python-virtualenv libusb libusb-devel curl ca-certificates opencl-headers \\\n    ocl-icd numactl-libs jq devtoolset-7 && \\\n    yum clean all && rm -rf /var/cache/yum\n\n# install bazelisk\nRUN wget https://github.com/bazelbuild/bazelisk/releases/download/v1.7.5/bazelisk-linux-amd64 && \\\n    chmod 700 bazelisk-linux-amd64 && chmod +x bazelisk-linux-amd64 &&  \\\n    cp bazelisk-linux-amd64 /usr/local/bin/bazel\n\n# install cmake-3.18.4\n\n# remove pre-installed cmake\nRUN rm /usr/local/bin/cmake /usr/local/bin/cpack /usr/local/bin/ctest && \\\n    rm -rf /opt/_internal/pipx/venvs/cmake\n\nRUN wget https://github.com/Kitware/CMake/releases/download/v3.18.4/cmake-3.18.4-Linux-x86_64.tar.gz && \\\n    tar -xzvf cmake-3.18.4-Linux-x86_64.tar.gz && \\\n    cp cmake-3.18.4-Linux-x86_64/bin/* /usr/local/bin/ && \\\n    cp -r cmake-3.18.4-Linux-x86_64/share/cmake-3.18 /usr/local/share/ && rm cmake-3.18.4-Linux-x86_64.tar.gz\n\n# install libusb\nWORKDIR /opt\nRUN curl -f -L https://github.com/libusb/libusb/archive/v1.0.22.zip --output v1.0.22.zip && \\\n    unzip v1.0.22.zip && rm -rf v1.0.22.zip\n\nWORKDIR /opt/libusb-1.0.22\nRUN ./bootstrap.sh && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --disable-udev --enable-shared && \\\n    make -j4\n\nWORKDIR /opt/libusb-1.0.22/libusb\nRUN /bin/mkdir -p '/usr/local/lib' && \\\n    /bin/bash ../libtool   --mode=install /usr/bin/install -c libusb-1.0.la '/usr/local/lib' && \\\n    /bin/mkdir -p '/usr/local/include/libusb-1.0' && \\\n    /usr/bin/install -c -m 644 libusb.h '/usr/local/include/libusb-1.0'\n\n# clone & build\nRUN mkdir -p /opt/intel/openvino_tensorflow/\n\nRUN git clone https://github.com/openvinotoolkit/openvino_tensorflow \\\n    /opt/intel/openvino_tensorflow\n\nWORKDIR /opt/intel/openvino_tensorflow/\n\nRUN git checkout ${OVTF_BRANCH} && git submodule update --init --recursive\n\nRUN mkdir -p /whl/abi0/\n\nRUN scl enable devtoolset-7 bash\n\n# # Build ABI-0 Wheels\nRUN for py_ver in cp37-cp37m cp38-cp38 cp39-cp39; do \\\n        PYBIN=/opt/python/${py_ver}/bin; \\\n        \"${PYBIN}/pip\" install psutil virtualenv; \\\n        sed -i \"s#\\\"python3\\\", \\\"-m\\\", \\\"venv\\\"#\\\"$PYBIN/python\\\", \\\"-m\\\", \\\"venv\\\"#g\" tools/build_utils.py; \\\n        \"${PYBIN}/python\" build_ovtf.py --python_executable=\"${PYBIN}/python\" --cxx11_abi_version=0; \\\n        cp build_cmake/artifacts/*.whl /whl/abi0/; \\\n        git reset --hard HEAD; \\\n        rm -rf build_cmake/; \\\n    done\n"
}