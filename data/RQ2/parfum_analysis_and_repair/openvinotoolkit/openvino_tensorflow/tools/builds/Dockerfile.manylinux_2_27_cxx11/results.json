{
  "startTime": 1674248499697,
  "endTime": 1674248500460,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 8,
        "columnEnd": 49
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 8,
        "columnEnd": 49
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 8,
        "columnEnd": 49
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 8,
        "columnEnd": 41
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright (C) 2021-2022 Intel Corporation\n# SPDX-License-Identifier: Apache-2.0\n\nARG OV_TAG=\"2022.1.0\"\n\n################################################################################\nFROM nncv-harbor.inn.intel.com/openvino/ubuntu18_dev:${OV_TAG}\n################################################################################\n\nLABEL description=\"This is the Ubuntu based dockerfile that builds CXX11 Python 3.x wheels \\\n                   for Intel(R) OpenVINO(TM) integration with TensorFlow\"\nLABEL vendor=\"Intel Corporation\"\n\nUSER root\n\nENV DEBIAN_FRONTEND=noninteractive\n\nSHELL [\"/bin/bash\", \"-xo\", \"pipefail\", \"-c\"]\n\nARG OVTF_BRANCH=\"releases/2.0.0\"\n\nADD rename_wheel.sh /\n\nRUN apt-get update; \\\n    apt install -y --no-install-recommends software-properties-common && \\\n    add-apt-repository ppa:deadsnakes/ppa; \\\n    apt-get install -y --no-install-recommends \\\n    git \\\n    zip \\\n    unzip \\\n    build-essential \\\n    ccache \\\n    python3.7-venv \\\n    python3.8-venv \\\n    python3.9-venv; \\\n    rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get update; \\\n    apt install -y --no-install-recommends software-properties-common && \\\n    add-apt-repository ppa:deadsnakes/ppa; \\\n    apt-get install -y --no-install-recommends \\\n        python3.6-dev python3.7-dev python3.8-dev python3.9-dev && \\\n        curl -f https://bootstrap.pypa.io/get-pip.py | python3.7 - --no-cache-dir pip==22.0.4 && \\\n        curl -f https://bootstrap.pypa.io/get-pip.py | python3.8 - --no-cache-dir pip==22.0.4 && \\\n        curl -f https://bootstrap.pypa.io/get-pip.py | python3.9 - --no-cache-dir pip==22.0.4 && \\\n    rm -rf /var/lib/apt/lists/*;\n\n# clone & build\nRUN mkdir -p /opt/intel/openvino_tensorflow/\n\nRUN git clone --quiet https://github.com/openvinotoolkit/openvino_tensorflow \\\n    /opt/intel/openvino_tensorflow\n\nWORKDIR /opt/intel/openvino_tensorflow/\n\nRUN git checkout ${OVTF_BRANCH} && git submodule update --init --recursive\n\n# artifacts dir\nRUN mkdir -p /whl/abi1/\n\nRUN for py_ver in 3.7 3.8 3.9; do \\\n        python${py_ver} -m venv venv_${py_ver}; \\\n        source venv_${py_ver}/bin/activate; \\\n        # install build requirements\n        pip3 install --no-cache-dir -r requirements.txt; \\\n        # start build\n        python build_ovtf.py --python_executable=`which python` \\\n                             --cxx11_abi_version=1 \\\n                             --disable_packaging_openvino_libs \\\n                             --use_openvino_from_location=/opt/intel/openvino/ \\\n                             --build_dir=build_venv_${py_ver}; \\\n        # rename wheel to openvino_tensorflow_abi1\n        source /rename_wheel.sh && \\\n        whl_rename build_venv_${py_ver}/artifacts/*.whl openvino_tensorflow_abi1 && \\\n        # copy to artifacts dir\n        cp build_venv_${py_ver}/artifacts/openvino_tensorflow_abi1*.whl /whl/abi1/; \\\n        rm -rf build_venv_${py_ver}; \\\n        deactivate; \\\n    done\n"
}