{
  "startTime": 1674256128555,
  "endTime": 1674256129718,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 22,
        "columnEnd": 76
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 83,
        "lineEnd": 83,
        "columnStart": 22,
        "columnEnd": 87
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 90,
        "lineEnd": 90,
        "columnStart": 22,
        "columnEnd": 86
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 96,
        "lineEnd": 96,
        "columnStart": 22,
        "columnEnd": 99
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 100,
        "lineEnd": 100,
        "columnStart": 22,
        "columnEnd": 83
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 101,
        "lineEnd": 101,
        "columnStart": 22,
        "columnEnd": 91
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 106,
        "lineEnd": 106,
        "columnStart": 22,
        "columnEnd": 101
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 107,
        "lineEnd": 107,
        "columnStart": 22,
        "columnEnd": 89
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 122,
        "lineEnd": 122,
        "columnStart": 22,
        "columnEnd": 59
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 22,
        "columnEnd": 109
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 22,
        "columnEnd": 76
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 83,
        "lineEnd": 83,
        "columnStart": 22,
        "columnEnd": 87
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 90,
        "lineEnd": 90,
        "columnStart": 22,
        "columnEnd": 86
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 96,
        "lineEnd": 96,
        "columnStart": 22,
        "columnEnd": 99
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 100,
        "lineEnd": 100,
        "columnStart": 22,
        "columnEnd": 83
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 101,
        "lineEnd": 101,
        "columnStart": 22,
        "columnEnd": 91
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 106,
        "lineEnd": 106,
        "columnStart": 22,
        "columnEnd": 101
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 107,
        "lineEnd": 107,
        "columnStart": 22,
        "columnEnd": 89
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 122,
        "lineEnd": 122,
        "columnStart": 22,
        "columnEnd": 59
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 107,
        "lineEnd": 107,
        "columnStart": 22,
        "columnEnd": 113
      }
    }
  ],
  "repairedDockerfile": "# ==============================================================================\n# Copyright (C) 2022 Intel Corporation\n#\n# SPDX-License-Identifier: MIT\n# ==============================================================================\n\nARG http_proxy\nARG https_proxy\nARG no_proxy\nARG DOCKER_PRIVATE_REGISTRY\n\nARG UBUNTU_VERSION=20.04\nARG BASE_IMAGE=${DOCKER_PRIVATE_REGISTRY}ubuntu:${UBUNTU_VERSION}\nFROM ${BASE_IMAGE}\nARG UBUNTU_CODENAME=focal\nARG PYTHON_VERSION=python3.8\n\nLABEL Description=\"This is the runtime image of Intel® Deep Learning Streamer (Intel® DL Streamer) Pipeline Framework for Ubuntu ${UBUNTU_VERSION}\"\nLABEL Vendor=\"Intel Corporation\"\n\nARG INSTALL_RECOMMENDED_OPENCL_DRIVER=true\nARG INSTALL_RECOMMENDED_MEDIA_DRIVER=true\nARG INSTALL_KAFKA_CLIENT=true\nARG INSTALL_MQTT_CLIENT=true\nARG INSTALL_DPCPP=true\n\nARG DLSTREAMER_APT_VERSION=\"*\"\nENV DLSTREAMER_DIR=/opt/intel/dlstreamer\nARG OPENVINO_VERSION=2022.1.0\nENV INTEL_OPENVINO_DIR=/opt/intel/openvino_2022\n\nWORKDIR /root\nUSER root\nSHELL [\"/bin/bash\", \"-xo\", \"pipefail\", \"-c\"]\nARG DEBIAN_FRONTEND=noninteractive\n\n# Install curl and apt-key dependencies\nRUN apt-get update && apt-get install -y -q --no-install-recommends curl gpg-agent software-properties-common && rm -rf /var/lib/apt/lists/*;\n\n# Add public key\nARG INTEL_GPG_KEY=https://apt.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB\nRUN curl -fsSL ${INTEL_GPG_KEY} | apt-key add -\n\n# Add Intel® Graphics repository\nARG GRAPHICS_APT_REPO=https://repositories.intel.com/graphics\nARG GRAPHICS_KEY=${GRAPHICS_APT_REPO}/intel-graphics.key\nARG GRAPHICS_REPO=\"deb [arch=amd64] ${GRAPHICS_APT_REPO}/ubuntu ${UBUNTU_CODENAME} main\"\nRUN curl -fsSL ${GRAPHICS_KEY} | apt-key add -\nRUN if [ \"${GRAPHICS_REPO}\" != \"\" ] ; then \\\n    echo \"${GRAPHICS_REPO}\" > /etc/apt/sources.list.d/intel-graphics.list ; \\\n    fi\n\n# Add OpenVINO™ toolkit repository\nARG OPENVINO_APT_REPO=https://apt.repos.intel.com/openvino/2022\nARG OPENVINO_REPO=\"deb ${OPENVINO_APT_REPO} ${UBUNTU_CODENAME} main\"\nRUN if [ \"${OPENVINO_REPO}\" != \"\" ] ; then \\\n    echo \"${OPENVINO_REPO}\" > /etc/apt/sources.list.d/intel-openvino.list ; \\\n    fi\n\n# Add Intel® DL Streamer repository\nARG DLSTREAMER_APT_REPO=https://apt.repos.intel.com/openvino/2022\nARG DLSTREAMER_APT_REPO_COMPONENT=main\nARG DLSTREAMER_REPO=\"deb ${DLSTREAMER_APT_REPO} ${UBUNTU_CODENAME} ${DLSTREAMER_APT_REPO_COMPONENT}\"\nRUN if [ \"${DLSTREAMER_REPO}\" != \"${OPENVINO_REPO}\" ] ; then \\\n    echo \"${DLSTREAMER_REPO}\" > /etc/apt/sources.list.d/intel-dlstreamer.list ; \\\n    fi\n\n# Add Intel® oneAPI repository if INSTALL_DPCPP=true\nARG ONEAPI_APT_REPO=https://apt.repos.intel.com/oneapi\nARG ONEAPI_REPO=\"deb ${ONEAPI_APT_REPO} all main\"\nRUN if [ \"$INSTALL_DPCPP\" = \"true\" ] ; then \\\n    echo \"${ONEAPI_REPO}\" > /etc/apt/sources.list.d/intel-oneapi.list ; \\\n    fi\n\n# If INSTALL_RECOMMENDED_OPENCL_DRIVER set to true, run script from openvino-dev package\nRUN if [ \"${INSTALL_RECOMMENDED_OPENCL_DRIVER}\" = \"true\" ] ; then \\\n    apt-get update && apt-get install --no-install-recommends -y libopenvino-dev-${OPENVINO_VERSION}; rm -rf /var/lib/apt/lists/*; \\\n    ${INTEL_OPENVINO_DIR}/install_dependencies/install_NEO_OCL_driver.sh -y ; \\\n    apt-get remove -y libopenvino-dev-${OPENVINO_VERSION} ; \\\n    fi\n\n# If INSTALL_RECOMMENDED_MEDIA_DRIVER set to true, run script from dlstreamer-env package\nRUN if [ \"${INSTALL_RECOMMENDED_MEDIA_DRIVER}\" = \"true\" ] ; then \\\n    apt-get update && apt-get install --no-install-recommends -y intel-dlstreamer-env=${DLSTREAMER_APT_VERSION}; rm -rf /var/lib/apt/lists/*; \\\n    ${DLSTREAMER_DIR}/install_dependencies/install_media_driver.sh ; \\\n    fi\n\n# Install specific OpenCL driver version, if specified\nARG OPENCL_DRIVER_APT_VERSION=\nRUN if [ \"${OPENCL_DRIVER_APT_VERSION}\" != \"\" ] ; then \\\n    apt-get update && apt-get install --no-install-recommends -y intel-opencl-icd=${OPENCL_DRIVER_APT_VERSION}; rm -rf /var/lib/apt/lists/*; \\\n    fi\n\n# Install specific media driver version, if specified\nARG MEDIA_DRIVER_APT_VERSION=\nRUN if [ \"${MEDIA_DRIVER_APT_VERSION}\" != \"\" ] ; then \\\n    apt-get update && apt-get install --no-install-recommends -y intel-media-va-driver-non-free=${MEDIA_DRIVER_APT_VERSION}; rm -rf /var/lib/apt/lists/*; \\\n    fi\n\n# Install Intel® DL Streamer runtime package and Python bindings\nRUN apt-get update && apt-get install --no-install-recommends -y intel-dlstreamer=${DLSTREAMER_APT_VERSION} && rm -rf /var/lib/apt/lists/*;\nRUN apt-get update && apt-get install --no-install-recommends -y python3-intel-dlstreamer=${DLSTREAMER_APT_VERSION} && rm -rf /var/lib/apt/lists/*;\n\n# If INSTALL_DPCPP set to true, install Intel® DL Streamer package with DPC++ based elements\nARG DPCPP_APT_VERSION=*\nRUN if [ \"${INSTALL_DPCPP}\" = \"true\" ] ; then \\\n    apt-get update && apt-get install --no-install-recommends -y intel-oneapi-compiler-dpcpp-cpp-runtime=${DPCPP_APT_VERSION}; rm -rf /var/lib/apt/lists/*; \\\n    apt-get update && apt-get install --no-install-recommends -y intel-dlstreamer-dpcpp=${DLSTREAMER_APT_VERSION}; \\\n    fi\n\nARG INSTALL_METAPUBLISH_DEPENDENCIES=\n# If INSTALL_KAFKA_CLIENT set to true, run post-install script from DL Streamer\nRUN if [ \"${INSTALL_KAFKA_CLIENT}\" = \"true\" ] || [ \"${INSTALL_METAPUBLISH_DEPENDENCIES}\" = \"true\" ] ; then \\\n    ${DLSTREAMER_DIR}/install_dependencies/install_kafka_client.sh ; \\\n    fi\n\n# If INSTALL_MQTT_CLIENT set to true, run post-install script from DL Streamer\nRUN if [ \"${INSTALL_MQTT_CLIENT}\" = \"true\" ] || [ \"${INSTALL_METAPUBLISH_DEPENDENCIES}\" = \"true\" ] ; then \\\n    ${DLSTREAMER_DIR}/install_dependencies/install_mqtt_client.sh ; \\\n    fi\n\n# Install additional OpenVINO™ toolkit plugins\nRUN apt-get update && apt-get install --no-install-recommends -y openvino-libraries && rm -rf /var/lib/apt/lists/*;\n\n# Remove Intel® Graphics APT repository\nRUN rm -f /etc/ssl/certs/Intel*\n#RUN rm /etc/apt/sources.list.d/intel.list\nRUN rm -rf /etc/apt/sources.list.d/intel-graphics.list\nRUN apt-get update\n\nARG DLS_HOME=/home/dlstreamer\n\n# Set environment\nENV HDDL_INSTALL_DIR=\"$INTEL_OPENVINO_DIR/runtime/3rdparty/hddl\"\nENV TBB_DIR=\"$INTEL_OPENVINO_DIR/runtime/3rdparty/tbb/cmake\"\n\nENV OpenVINO_DIR=\"$INTEL_OPENVINO_DIR/runtime/cmake\"\nENV InferenceEngine_DIR=\"$INTEL_OPENVINO_DIR/runtime/cmake\"\nENV ngraph_DIR=\"$INTEL_OPENVINO_DIR/runtime/cmake\"\nENV OpenCV_DIR=\"$INTEL_OPENVINO_DIR/extras/opencv/cmake\"\n\nENV LD_LIBRARY_PATH=\"${DLSTREAMER_DIR}/lib:${DLSTREAMER_DIR}/gstreamer/lib:$INTEL_OPENVINO_DIR/tools/compile_tool:$INTEL_OPENVINO_DIR/runtime/3rdparty/tbb/lib:$INTEL_OPENVINO_DIR/runtime/3rdparty/hddl/lib:$INTEL_OPENVINO_DIR/extras/opencv/lib/:$INTEL_OPENVINO_DIR/runtime/lib/intel64:/usr/lib:$LD_LIBRARY_PATH\"\nENV PYTHONPATH=\"$INTEL_OPENVINO_DIR/python/${PYTHON_VERSION}:$INTEL_OPENVINO_DIR/extras/opencv/python:$PYTHONPATH\"\n\nENV LIBDIR=\"${DLSTREAMER_DIR}/lib\"\nENV GST_PLUGIN_PATH=\"${DLSTREAMER_DIR}/lib:${DLSTREAMER_DIR}/gstreamer/lib/gstreamer-1.0:${GST_PLUGIN_PATH}\"\nENV LIBRARY_PATH=\"${DLSTREAMER_DIR}/lib:${DLSTREAMER_DIR}/gstreamer/lib:/usr/lib:${LIBRARY_PATH}\"\nENV PKG_CONFIG_PATH=\"${DLSTREAMER_DIR}/lib/pkgconfig:${DLSTREAMER_DIR}/gstreamer/lib/pkgconfig:/usr/lib/x86_64-linux-gnu/pkgconfig:${PKG_CONFIG_PATH}\"\nENV MODELS_PATH=\"${MODELS_PATH:-${DLS_HOME}/intel/dl_streamer/models}\"\nENV LC_NUMERIC=\"C\"\nENV LIBVA_DRIVER_NAME=\"iHD\"\n\nENV PATH=\"${DLSTREAMER_DIR}/gstreamer/bin:${DLSTREAMER_DIR}/gstreamer/bin/gstreamer-1.0:${PATH}\"\n\nENV GI_TYPELIB_PATH=\"${DLSTREAMER_DIR}/gstreamer/lib/girepository-1.0\"\nENV GST_PLUGIN_SCANNER=\"${DLSTREAMER_DIR}/gstreamer/bin/gstreamer-1.0/gst-plugin-scanner\"\n\nRUN useradd -ms /bin/bash -u 1000 -G video dlstreamer\nWORKDIR ${DLS_HOME}\nUSER dlstreamer\nCOPY ./docker/third-party-programs.txt ${DLSTREAMER_DIR}/\n\nCMD [\"/bin/bash\"]\n"
}