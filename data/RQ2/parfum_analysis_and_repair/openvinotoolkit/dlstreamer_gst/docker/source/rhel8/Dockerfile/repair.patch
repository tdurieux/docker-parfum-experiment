diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/openvinotoolkit/dlstreamer_gst/docker/source/rhel8/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/openvinotoolkit/dlstreamer_gst/docker/source/rhel8/Dockerfile/repaired.Dockerfile
index f8f3c39..4031225 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/openvinotoolkit/dlstreamer_gst/docker/source/rhel8/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/openvinotoolkit/dlstreamer_gst/docker/source/rhel8/Dockerfile/repaired.Dockerfile
@@ -41,7 +41,7 @@ RUN yum update -y && \
     python3-pip \
     python3-setuptools && \
     yum clean all && \
-    pip3 install --upgrade pip
+    pip3 install --no-cache-dir --upgrade pip && rm -rf /var/cache/yum
 
 
 ARG DLSTREAMER_INSTALL_DIR="/opt/intel/dlstreamer"
@@ -70,8 +70,8 @@ RUN python3 -m pip install --no-cache-dir meson ninja
 # Install GStreamer
 # GStreamer core
 ARG GST_REPO=https://gstreamer.freedesktop.org/src/gstreamer/gstreamer-${GST_VERSION}.tar.xz
-RUN curl --location ${GST_REPO} --output build/src/gstreamer-${GST_VERSION}.tar.xz && \
-    tar xvf build/src/gstreamer-${GST_VERSION}.tar.xz
+RUN curl -f --location ${GST_REPO} --output build/src/gstreamer-${GST_VERSION}.tar.xz && \
+    tar xvf build/src/gstreamer-${GST_VERSION}.tar.xz && rm build/src/gstreamer-${GST_VERSION}.tar.xz
 
 RUN yum install -y \
     gmp-devel \
@@ -80,7 +80,7 @@ RUN yum install -y \
     libcap-devel \
     libcap \
     gettext-devel && \
-    yum clean all
+    yum clean all && rm -rf /var/cache/yum
 
 RUN cd gstreamer-${GST_VERSION} && \
     PKG_CONFIG_PATH=$PWD/build/pkgconfig:${PKG_CONFIG_PATH} meson \
@@ -99,8 +99,8 @@ RUN cd gstreamer-${GST_VERSION} && \
 # ORC Acceleration
 ARG GST_ORC_VERSION=0.4.31
 ARG GST_ORC_REPO=https://gstreamer.freedesktop.org/src/orc/orc-${GST_ORC_VERSION}.tar.xz
-RUN curl --location ${GST_ORC_REPO} --output build/src/orc-${GST_ORC_VERSION}.tar.xz && \
-    tar xvf build/src/orc-${GST_ORC_VERSION}.tar.xz
+RUN curl -f --location ${GST_ORC_REPO} --output build/src/orc-${GST_ORC_VERSION}.tar.xz && \
+    tar xvf build/src/orc-${GST_ORC_VERSION}.tar.xz && rm build/src/orc-${GST_ORC_VERSION}.tar.xz
 
 RUN cd orc-${GST_ORC_VERSION} && \
     meson \
@@ -132,24 +132,24 @@ RUN yum install -y \
     libvisual-devel \
     libXv-devel \
     opus-devel && \
-    yum clean all
+    yum clean all && rm -rf /var/cache/yum
 
 # Build vorbis
 ARG VORBIS_URL=https://downloads.xiph.org/releases/vorbis/libvorbis-1.3.7.tar.xz
 RUN mkdir -p build/src/vorbis && \
-    curl --location ${VORBIS_URL} --output build/src/vorbis/libvorbis-1.3.7.tar.xz && \
-    tar xvf build/src/vorbis/libvorbis-1.3.7.tar.xz
+    curl -f --location ${VORBIS_URL} --output build/src/vorbis/libvorbis-1.3.7.tar.xz && \
+    tar xvf build/src/vorbis/libvorbis-1.3.7.tar.xz && rm build/src/vorbis/libvorbis-1.3.7.tar.xz
 
 RUN cd libvorbis-1.3.7 && \
     ./autogen.sh && \
-    ./configure && \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" && \
     make && \
     make install
 
 # Build the GStreamer Plugin Base
 ARG GST_PLUGIN_BASE_REPO=https://gstreamer.freedesktop.org/src/gst-plugins-base/gst-plugins-base-${GST_VERSION}.tar.xz
-RUN curl --location ${GST_PLUGIN_BASE_REPO} --output build/src/gst-plugins-base-${GST_VERSION}.tar.xz && \
-    tar xvf build/src/gst-plugins-base-${GST_VERSION}.tar.xz
+RUN curl -f --location ${GST_PLUGIN_BASE_REPO} --output build/src/gst-plugins-base-${GST_VERSION}.tar.xz && \
+    tar xvf build/src/gst-plugins-base-${GST_VERSION}.tar.xz && rm build/src/gst-plugins-base-${GST_VERSION}.tar.xz
 
 RUN cd gst-plugins-base-${GST_VERSION} && \
     PKG_CONFIG_PATH=$PWD/build/pkgconfig:${PKG_CONFIG_PATH} meson \
@@ -184,11 +184,11 @@ RUN yum install -y \
     libsoup-devel \
     speex-devel \
     wavpack-devel && \
-    yum clean all
+    yum clean all && rm -rf /var/cache/yum
 
 ARG GST_PLUGIN_GOOD_REPO=https://gstreamer.freedesktop.org/src/gst-plugins-good/gst-plugins-good-${GST_VERSION}.tar.xz
-RUN curl --location ${GST_PLUGIN_GOOD_REPO} --output build/src/gst-plugins-good-${GST_VERSION}.tar.xz && \
-    tar xvf build/src/gst-plugins-good-${GST_VERSION}.tar.xz
+RUN curl -f --location ${GST_PLUGIN_GOOD_REPO} --output build/src/gst-plugins-good-${GST_VERSION}.tar.xz && \
+    tar xvf build/src/gst-plugins-good-${GST_VERSION}.tar.xz && rm build/src/gst-plugins-good-${GST_VERSION}.tar.xz
 
 RUN cd gst-plugins-good-${GST_VERSION}  && \
     PKG_CONFIG_PATH=$PWD/build/pkgconfig:${PKG_CONFIG_PATH} meson \
@@ -209,7 +209,7 @@ RUN cd gst-plugins-good-${GST_VERSION}  && \
 RUN rpm --import http://li.nux.ro/download/nux/RPM-GPG-KEY-nux.ro
 
 RUN yum install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm && \
-    subscription-manager repos --enable "codeready-builder-for-rhel-8-$(arch)-rpms"
+    subscription-manager repos --enable "codeready-builder-for-rhel-8-$(arch)-rpms" && rm -rf /var/cache/yum
 
 RUN rpm -Uvh http://li.nux.ro/download/nux/dextop/el7/x86_64/nux-dextop-release-0-5.el7.nux.noarch.rpm && \
     rpm -Uvh https://download1.rpmfusion.org/free/el/rpmfusion-free-release-7.noarch.rpm
@@ -249,11 +249,11 @@ RUN yum install -y \
     wildmidi-devel \
     libnice-devel \
     libxkbcommon-devel && \
-    yum clean all
+    yum clean all && rm -rf /var/cache/yum
 
 ARG GST_PLUGIN_BAD_REPO=https://gstreamer.freedesktop.org/src/gst-plugins-bad/gst-plugins-bad-${GST_VERSION}.tar.xz
-RUN curl --location ${GST_PLUGIN_BAD_REPO} --output build/src/gst-plugins-bad-${GST_VERSION}.tar.xz && \
-    tar xvf build/src/gst-plugins-bad-${GST_VERSION}.tar.xz
+RUN curl -f --location ${GST_PLUGIN_BAD_REPO} --output build/src/gst-plugins-bad-${GST_VERSION}.tar.xz && \
+    tar xvf build/src/gst-plugins-bad-${GST_VERSION}.tar.xz && rm build/src/gst-plugins-bad-${GST_VERSION}.tar.xz
 
 RUN mkdir ${PATCHES_ROOT}/gst_plugins_bad_patch_license && \
     cp gst-plugins-bad-${GST_VERSION}/COPYING ${PATCHES_ROOT}/gst_plugins_bad_patch_license/LICENSE
@@ -290,10 +290,10 @@ RUN cd gst-plugins-bad-${GST_VERSION} && \
 
 # Build the GStreamer Plugin Ugly set
 ARG GST_PLUGIN_UGLY_REPO=https://gstreamer.freedesktop.org/src/gst-plugins-ugly/gst-plugins-ugly-${GST_VERSION}.tar.xz
-RUN curl --location ${GST_PLUGIN_UGLY_REPO} --output build/src/gst-plugins-ugly-${GST_VERSION}.tar.xz && \
-    tar xvf build/src/gst-plugins-ugly-${GST_VERSION}.tar.xz
+RUN curl -f --location ${GST_PLUGIN_UGLY_REPO} --output build/src/gst-plugins-ugly-${GST_VERSION}.tar.xz && \
+    tar xvf build/src/gst-plugins-ugly-${GST_VERSION}.tar.xz && rm build/src/gst-plugins-ugly-${GST_VERSION}.tar.xz
 
-RUN yum install -y libmpeg2-devel && yum clean all
+RUN yum install -y libmpeg2-devel && yum clean all && rm -rf /var/cache/yum
 
 RUN cd gst-plugins-ugly-${GST_VERSION}  && \
     PKG_CONFIG_PATH=$PWD/build/pkgconfig:${PKG_CONFIG_PATH} meson \
@@ -315,12 +315,12 @@ RUN cd gst-plugins-ugly-${GST_VERSION}  && \
     meson install -C build/
 
 # FFmpeg
-RUN yum install -y bzip2
+RUN yum install -y bzip2 && rm -rf /var/cache/yum
 RUN mkdir ffmpeg_sources && cd ffmpeg_sources && \
-    curl --output - --location https://www.nasm.us/pub/nasm/releasebuilds/2.14.02/nasm-2.14.02.tar.bz2 | tar xj && \
+    curl -f --output - --location https://www.nasm.us/pub/nasm/releasebuilds/2.14.02/nasm-2.14.02.tar.bz2 | tar xj && \
     cd nasm-2.14.02 && \
     ./autogen.sh && \
-    ./configure --prefix=${PREFIX} --bindir="${PREFIX}/bin" && \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=${PREFIX} --bindir="${PREFIX}/bin" && \
     make && make install
 
 # Download patch
@@ -328,13 +328,14 @@ RUN git clone -n https://github.com/FFmpeg/FFmpeg.git && \
     cd FFmpeg && \
     git format-patch -1 26d3c81bc5ef2f8c3f09d45eaeacfb4b1139a777 --stdout > ${PATCHES_ROOT}/ffmpeg_check_dc_count.patch
 
-RUN curl --location https://ffmpeg.org/releases/ffmpeg-4.4.tar.gz --output build/src/ffmpeg-4.4.tar.gz
+RUN curl -f --location https://ffmpeg.org/releases/ffmpeg-4.4.tar.gz --output build/src/ffmpeg-4.4.tar.gz
 RUN cd ffmpeg_sources && \
     tar xvf /home/build/src/ffmpeg-4.4.tar.gz && \
     cd ffmpeg-4.4 && \
     cat ${PATCHES_ROOT}/ffmpeg_check_dc_count.patch | git apply && \
     PATH="${PREFIX}/bin:$PATH" PKG_CONFIG_PATH="${PREFIX}/lib/pkgconfig" \
-    ./configure \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
+
     --disable-gpl \
     --enable-pic \
     --disable-shared \
@@ -347,16 +348,16 @@ RUN cd ffmpeg_sources && \
     --bindir="${PREFIX}/bin" \
     --disable-vaapi && \
     make -j $(nproc) && \
-    make install
+    make install && rm /home/build/src/ffmpeg-4.4.tar.gz
 
 # Download gstreamer-libav patch, can be removed with 1.19 transition
 ARG GSTREAMER_LIBAV_PATCH_URL=https://github.com/GStreamer/gst-libav/commit/75fb364bf435d80a51f1ecba6afc999b5f36292e.patch
-RUN curl --location ${GSTREAMER_LIBAV_PATCH_URL} --output ${PATCHES_ROOT}/gst-libav-fix-performance.patch
+RUN curl -f --location ${GSTREAMER_LIBAV_PATCH_URL} --output ${PATCHES_ROOT}/gst-libav-fix-performance.patch
 
 # Build gst-libav
 ARG GST_PLUGIN_LIBAV_REPO=https://gstreamer.freedesktop.org/src/gst-libav/gst-libav-${GST_VERSION}.tar.xz
-RUN curl --location ${GST_PLUGIN_LIBAV_REPO} --output build/src/gst-libav-${GST_VERSION}.tar.xz && \
-    tar xvf build/src/gst-libav-${GST_VERSION}.tar.xz
+RUN curl -f --location ${GST_PLUGIN_LIBAV_REPO} --output build/src/gst-libav-${GST_VERSION}.tar.xz && \
+    tar xvf build/src/gst-libav-${GST_VERSION}.tar.xz && rm build/src/gst-libav-${GST_VERSION}.tar.xz
 
 RUN cd gst-libav-${GST_VERSION} && \
     cat ${PATCHES_ROOT}/gst-libav-fix-performance.patch | git apply && \
@@ -377,7 +378,7 @@ ARG GST_PLUGIN_VAAPI_REPO=https://gstreamer.freedesktop.org/src/gstreamer-vaapi/
 RUN yum install -y \
     libva-devel \
     systemd-devel \
-    libpciaccess-devel
+    libpciaccess-devel && rm -rf /var/cache/yum
 
 # Install libdrm-2.4.98
 RUN git clone -b libdrm-2.4.98 https://gitlab.freedesktop.org/mesa/drm.git && \
@@ -385,13 +386,13 @@ RUN git clone -b libdrm-2.4.98 https://gitlab.freedesktop.org/mesa/drm.git && \
     ninja -C build/ install
 
 # Download gstreamer-vaapi & patches
-RUN curl --location ${GST_PLUGIN_VAAPI_REPO} --output build/src/gstreamer-vaapi-${GST_VERSION}.tar.xz && \
-    tar xvf build/src/gstreamer-vaapi-${GST_VERSION}.tar.xz
+RUN curl -f --location ${GST_PLUGIN_VAAPI_REPO} --output build/src/gstreamer-vaapi-${GST_VERSION}.tar.xz && \
+    tar xvf build/src/gstreamer-vaapi-${GST_VERSION}.tar.xz && rm build/src/gstreamer-vaapi-${GST_VERSION}.tar.xz
 
 ARG GSTREAMER_VAAPI_PATCH_URL=https://gitlab.freedesktop.org/gstreamer/gstreamer-vaapi/-/merge_requests/435.patch
 ARG GSTREAMER_VAAPI_PATCH_DMA_URL=https://raw.githubusercontent.com/dlstreamer/dlstreamer/master/patches/gstreamer-vaapi/dma-vaapiencode.patch
-RUN curl --location ${GSTREAMER_VAAPI_PATCH_URL} --output ${PATCHES_ROOT}/gst-vaapi-peek-vadisplay.patch
-RUN curl --location ${GSTREAMER_VAAPI_PATCH_DMA_URL} --output ${PATCHES_ROOT}/dma-vaapiencode.patch
+RUN curl -f --location ${GSTREAMER_VAAPI_PATCH_URL} --output ${PATCHES_ROOT}/gst-vaapi-peek-vadisplay.patch
+RUN curl -f --location ${GSTREAMER_VAAPI_PATCH_DMA_URL} --output ${PATCHES_ROOT}/dma-vaapiencode.patch
 
 # Put gstreamer-vaapi license along with the patch
 RUN mkdir ${PATCHES_ROOT}/gstreamer_vaapi_patch_license && \
@@ -418,10 +419,10 @@ RUN cd gstreamer-vaapi-${GST_VERSION} && \
 RUN yum install -y \
     pygobject3-devel \
     python3-devel && \
-    yum clean all
+    yum clean all && rm -rf /var/cache/yum
 
 ARG GST_PYTHON_REPO=https://gstreamer.freedesktop.org/src/gst-python/gst-python-${GST_VERSION}.tar.xz
-RUN curl --location ${GST_PYTHON_REPO} --output build/src/gst-python-${GST_VERSION}.tar.xz
+RUN curl -f --location ${GST_PYTHON_REPO} --output build/src/gst-python-${GST_VERSION}.tar.xz
 RUN tar xvf build/src/gst-python-${GST_VERSION}.tar.xz && \
     cd gst-python-${GST_VERSION} && \
     PKG_CONFIG_PATH=$PWD/build/pkgconfig:${PKG_CONFIG_PATH} meson \
@@ -432,13 +433,13 @@ RUN tar xvf build/src/gst-python-${GST_VERSION}.tar.xz && \
     --libexecdir=${LIBEXECDIR} \
     build/ && \
     ninja -C build && \
-    meson install -C build/
+    meson install -C build/ && rm build/src/gst-python-${GST_VERSION}.tar.xz
 
 ENV GI_TYPELIB_PATH=${GSTREAMER_LIB_DIR}/girepository-1.0
 ENV PYTHONPATH=${PREFIX}/lib/python3.6/site-packages:${PYTHONPATH}
 
 ARG GST_RTSP_SERVER_REPO=https://gstreamer.freedesktop.org/src/gst-rtsp-server/gst-rtsp-server-${GST_VERSION}.tar.xz
-RUN curl --location ${GST_RTSP_SERVER_REPO} --output build/src/gst-rtsp-server-${GST_VERSION}.tar.xz
+RUN curl -f --location ${GST_RTSP_SERVER_REPO} --output build/src/gst-rtsp-server-${GST_VERSION}.tar.xz
 RUN tar xf build/src/gst-rtsp-server-${GST_VERSION}.tar.xz && \
     cd gst-rtsp-server-${GST_VERSION} && \
     PKG_CONFIG_PATH=$PWD/build/pkgconfig:${PKG_CONFIG_PATH} meson \
@@ -451,7 +452,7 @@ RUN tar xf build/src/gst-rtsp-server-${GST_VERSION}.tar.xz && \
     --libexecdir=${LIBEXECDIR} \
     build/ && \
     ninja -C build && \
-    meson install -C build/
+    meson install -C build/ && rm build/src/gst-rtsp-server-${GST_VERSION}.tar.xz
 
 
 # Building DL Streamer image
@@ -509,7 +510,7 @@ RUN yum update -y --nobest && \
     gnupg2 \
     vim \
     gdb \
-    opencl-headers
+    opencl-headers && rm -rf /var/cache/yum
 
 
 # Register Intel® Graphics repository
@@ -541,11 +542,11 @@ repo_gpgcheck=1 \n\
 gpgkey=https://yum.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB ' > /etc/yum.repos.d/openvino-2022.repo
 
 RUN yum list -y openvino*
-RUN yum install -y openvino openvino-opencv
+RUN yum install -y openvino openvino-opencv && rm -rf /var/cache/yum
 RUN /opt/intel/openvino_2022/install_dependencies/install_openvino_dependencies.sh -y
 
 ARG EXTRA_PYPI_INDEX_URL
-RUN yum install -y python3-pip && pip3 install --upgrade pip
+RUN yum install -y python3-pip && pip3 install --no-cache-dir --upgrade pip && rm -rf /var/cache/yum
 RUN if [ -n "$EXTRA_PYPI_INDEX_URL"  ] ; then \
     python3 -m pip config set global.extra-index-url ${EXTRA_PYPI_INDEX_URL} ;\
     fi
@@ -577,7 +578,7 @@ RUN if [[ "$ENABLE_PAHO_INSTALLATION" = "ON" || "$ENABLE_RDKAFKA_INSTALLATION" =
 
 RUN rpm --import http://li.nux.ro/download/nux/RPM-GPG-KEY-nux.ro
 RUN yum install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm && \
-    subscription-manager repos --enable "codeready-builder-for-rhel-8-$(arch)-rpms"
+    subscription-manager repos --enable "codeready-builder-for-rhel-8-$(arch)-rpms" && rm -rf /var/cache/yum
 RUN rpm -Uvh http://li.nux.ro/download/nux/dextop/el7/x86_64/nux-dextop-release-0-5.el7.nux.noarch.rpm && \
     rpm -Uvh https://download1.rpmfusion.org/free/el/rpmfusion-free-release-7.noarch.rpm
 RUN yum install -y \
@@ -598,7 +599,7 @@ RUN yum install -y \
     openal-soft OpenEXR-devel openjpeg2 librsvg2 \
     libsndfile soundtouch spandsp libsrtp zvbi \
     wildmidi libnice libxkbcommon numactl && \
-    yum clean all
+    yum clean all && rm -rf /var/cache/yum
 
 # Build DL Streamer
 ARG GIT_INFO