{
  "startTime": 1674255423710,
  "endTime": 1674255424636,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 69,
        "columnEnd": 95
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 70
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 87,
        "lineEnd": 87,
        "columnStart": 22,
        "columnEnd": 87
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 23,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 8
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 22,
        "columnEnd": 172
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 70
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 87,
        "lineEnd": 87,
        "columnStart": 22,
        "columnEnd": 87
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 89
      }
    }
  ],
  "repairedDockerfile": "# ==============================================================================\n# Copyright (C) 2018-2022 Intel Corporation\n#\n# SPDX-License-Identifier: MIT\n# ==============================================================================\n\nARG http_proxy\nARG https_proxy\nARG no_proxy\nARG DOCKER_PRIVATE_REGISTRY\n\nFROM ${DOCKER_PRIVATE_REGISTRY}ubuntu:20.04\n\nLABEL Description=\"This is the development image of Intel® Deep Learning Streamer Pipeline Framework (Intel® DL Streamer Pipeline Framework) for Ubuntu 20.04 LTS\"\nLABEL Vendor=\"Intel Corporation\"\n\nWORKDIR /root\nUSER root\n\nSHELL [\"/bin/bash\", \"-xo\", \"pipefail\", \"-c\"]\n\n# Prerequisites\nRUN DEBIAN_FRONTEND=noninteractive apt-get update && \\\n    DEBIAN_FRONTEND=noninteractive apt-get install -y -q --no-install-recommends \\\n    cmake \\\n    build-essential \\\n    sudo \\\n    curl \\\n    numactl \\\n    gnupg2 \\\n    git \\\n    software-properties-common \\\n    pkg-config \\\n    libva-dev \\\n    python-gi-dev \\\n    vim \\\n    wget && rm -rf /var/lib/apt/lists/*;\n\n# Register Intel® Graphics repository\nARG GRAPHICS_APT_REPO=https://repositories.intel.com/graphics/\nRUN curl -f ${GRAPHICS_APT_REPO}intel-graphics.key | \\\n    apt-key add - && \\\n    apt-add-repository \"deb [arch=amd64] ${GRAPHICS_APT_REPO}ubuntu/ focal main\"\n\n# Install Intel® Media Driver for VAAPI\nARG MEDIA_DRIVER_VERSION=21.4.1+i643~u20.04\nRUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y -q --allow-downgrades --no-install-recommends intel-media-va-driver-non-free=${MEDIA_DRIVER_VERSION} && rm -rf /var/lib/apt/lists/*;\n\n# Install GPG key\nARG GPG_PUBLIC_KEY=https://apt.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB\nRUN curl -f -sSL ${GPG_PUBLIC_KEY} | apt-key add -\n\n# Register DL Streamer repository\nARG DLSTREAMER_APT_REPO=https://apt.repos.intel.com/openvino/2022\nARG DLSTREAMER_APT_REPO_COMPONENT=main\nRUN sh -c \"echo 'deb ${DLSTREAMER_APT_REPO} focal ${DLSTREAMER_APT_REPO_COMPONENT}' >> /etc/apt/sources.list\"\n\n# Install GStreamer\nRUN DEBIAN_FRONTEND=noninteractive apt-get update && \\\n    apt-get install --no-install-recommends -y intel-dlstreamer-gst intel-dlstreamer-gst-vaapi && rm -rf /var/lib/apt/lists/*;\n\n# Install Intel® OpenVINO\nRUN DEBIAN_FRONTEND=noninteractive apt-get update && \\\n    apt-get install --no-install-recommends -y openvino openvino-opencv && /opt/intel/openvino_2022/install_dependencies/install_openvino_dependencies.sh -y && rm -rf /var/lib/apt/lists/*;\n\n# Install python modules\nRUN DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y python3-pip && pip3 install --no-cache-dir --upgrade pip && rm -rf /var/lib/apt/lists/*;\nARG EXTRA_PYPI_INDEX_URL\nRUN if [ -n \"$EXTRA_PYPI_INDEX_URL\" ] ; then \\\n    python3 -m pip config set global.extra-index-url ${EXTRA_PYPI_INDEX_URL} ;\\\n    fi\nRUN python3 -m pip install openvino-dev[onnx,tensorflow2,pytorch,mxnet]\n\n# Add local user\nRUN useradd -ms /bin/bash -u 1000 -G video dlstreamer\nARG DLS_HOME=/home/dlstreamer\nWORKDIR ${DLS_HOME}\n\n# Install DL Streamer\nCOPY . ./dlstreamer/\nRUN cd ./dlstreamer \\\n    && python3 -m pip install --no-cache-dir -r requirements.txt\n\n# Install Intel® oneAPI DPC++/C++ Compiler\nARG ENABLE_DPCPP_INSTALLATION=OFF\nRUN if [[ \"$ENABLE_DPCPP_INSTALLATION\" == \"ON\" ]] ; then \\\n    add-apt-repository \"deb https://apt.repos.intel.com/oneapi all main\" && \\\n    apt-get update && apt-get install --no-install-recommends -y intel-oneapi-compiler-dpcpp-cpp level-zero-dev; rm -rf /var/lib/apt/lists/*; \\\n    fi\n\nARG ENABLE_PAHO_INSTALLATION=ON\nARG ENABLE_RDKAFKA_INSTALLATION=ON\nRUN if [[ \"${ENABLE_PAHO_INSTALLATION}\" == \"ON\" ]] || [[ \"${ENABLE_RDKAFKA_INSTALLATION}\" == \"ON\" ]]; then \\\n    ./dlstreamer/scripts/install_metapublish_dependencies.sh; \\\n    fi\n\nRUN /opt/intel/openvino_2022/install_dependencies/install_NEO_OCL_driver.sh -y\n\n# Set environment\nENV ACL_BOARD_VENDOR_PATH=/opt/Intel/OpenCLFPGA/oneAPI/Boards\nENV CPATH=/opt/intel/oneapi/compiler/latest/linux/include:${CPATH}\nENV INTELFPGAOCLSDKROOT=/opt/intel/oneapi/compiler/latest/linux/lib/oclfpga\nENV LD_LIBRARY_PATH=/opt/intel/oneapi/compiler/latest/linux/lib:/opt/intel/oneapi/compiler/latest/linux/lib/x64:/opt/intel/oneapi/compiler/latest/linux/lib/emu:/opt/intel/oneapi/compiler/latest/linux/lib/oclfpga/host/linux64/lib:/opt/intel/oneapi/compiler/latest/linux/lib/oclfpga/linux64/lib:/opt/intel/oneapi/compiler/latest/linux/compiler/lib/intel64_lin:/opt/intel/oneapi/compiler/latest/linux/compiler/lib:${LD_LIBRARY_PATH}\nENV LIBRARY_PATH=/opt/intel/oneapi/compiler/latest/linux/compiler/lib/intel64_lin:/opt/intel/oneapi/compiler/latest/linux/lib:${LIBRARY_PATH}\nENV MANPATH=/opt/intel/oneapi/compiler/latest/documentation/en/man/common:${MANPATH}\nENV OCL_ICD_FILENAMES=libintelocl_emu.so:libalteracl.so:/opt/intel/oneapi/compiler/latest/linux/lib/x64/libintelocl.so\nENV PATH=/opt/intel/oneapi/compiler/latest/linux/lib/oclfpga/llvm/aocl-bin:/opt/intel/oneapi/compiler/latest/linux/lib/oclfpga/bin:/opt/intel/oneapi/compiler/latest/linux/bin/intel64:/opt/intel/oneapi/compiler/latest/linux/bin:/opt/intel/oneapi/compiler/latest/linux/ioc/bin:${PATH}\n\nENV DLSTREAMER_DIR=\"/opt/intel/dlstreamer\"\nENV INTEL_OPENVINO_DIR=\"/opt/intel/openvino_2022\"\nENV HDDL_INSTALL_DIR=\"$INTEL_OPENVINO_DIR/runtime/3rdparty/hddl\"\nENV TBB_DIR=\"$INTEL_OPENVINO_DIR/runtime/3rdparty/tbb/cmake\"\n\nENV OpenCV_DIR=\"$INTEL_OPENVINO_DIR/extras/opencv/cmake\"\nENV OpenVINO_DIR=\"$INTEL_OPENVINO_DIR/runtime/cmake\"\nENV InferenceEngine_DIR=\"$INTEL_OPENVINO_DIR/runtime/cmake\"\nENV ngraph_DIR=\"$INTEL_OPENVINO_DIR/runtime/cmake\"\n\nENV LD_LIBRARY_PATH=\"${DLSTREAMER_DIR}/lib:${DLSTREAMER_DIR}/lib/gstreamer-1.0:${DLSTREAMER_DIR}/gstreamer/lib:${DLSTREAMER_DIR}/gstreamer/lib/gstreamer-1.0:$INTEL_OPENVINO_DIR/tools/compile_tool:$INTEL_OPENVINO_DIR/runtime/3rdparty/tbb/lib:$INTEL_OPENVINO_DIR/runtime/3rdparty/hddl/lib:$INTEL_OPENVINO_DIR/extras/opencv/lib/:$INTEL_OPENVINO_DIR/runtime/lib/intel64:/usr/lib:$LD_LIBRARY_PATH\"\nENV PYTHONPATH=\"${DLSTREAMER_DIR}/python:${DLSTREAMER_DIR}/gstreamer/lib/python3.8/site-packages:$INTEL_OPENVINO_DIR/python/python3.8:$INTEL_OPENVINO_DIR/python/python3:$PYTHONPATH\"\n\nENV GST_PLUGIN_PATH=\"${DLSTREAMER_DIR}/lib:${DLSTREAMER_DIR}/gstreamer/lib/gstreamer-1.0:${GST_PLUGIN_PATH}\"\nENV LIBRARY_PATH=\"${DLSTREAMER_DIR}/lib:${DLSTREAMER_DIR}/gstreamer/lib:$INTEL_OPENVINO_DIR/tools/compile_tool:$INTEL_OPENVINO_DIR/runtime/3rdparty/tbb/lib:$INTEL_OPENVINO_DIR/runtime/3rdparty/hddl/lib:$INTEL_OPENVINO_DIR/extras/opencv/lib/:$INTEL_OPENVINO_DIR/runtime/lib/intel64:/usr/lib:${LIBRARY_PATH}\"\nENV PKG_CONFIG_PATH=\"${DLSTREAMER_DIR}/lib/pkgconfig:${DLSTREAMER_DIR}/gstreamer/lib/pkgconfig:/usr/lib/x86_64-linux-gnu/pkgconfig:${PKG_CONFIG_PATH}\"\nENV MODELS_PATH=\"${MODELS_PATH:-${DLS_HOME}/intel/dl_streamer/models}\"\nENV LC_NUMERIC=\"C\"\nENV LIBVA_DRIVER_NAME=\"iHD\"\n\nENV PATH=\"${DLSTREAMER_DIR}/gstreamer/bin:${DLSTREAMER_DIR}/gstreamer/bin/gstreamer-1.0:${PATH}\"\n\nENV GI_TYPELIB_PATH=\"${DLSTREAMER_DIR}/gstreamer/lib/girepository-1.0\"\nENV GST_PLUGIN_SCANNER=\"${DLSTREAMER_DIR}/gstreamer/bin/gstreamer-1.0/gst-plugin-scanner\"\n\n# Build DL Streamer\nARG BUILD_TYPE=Release\nARG EXTERNAL_DLS_BUILD_FLAGS\nARG GIT_INFO\n\nRUN mkdir ./dlstreamer/build \\\n    && cd ./dlstreamer/build \\\n    && cmake \\\n    -DCMAKE_BUILD_TYPE=${BUILD_TYPE} \\\n    -DCMAKE_INSTALL_PREFIX=${DLSTREAMER_DIR} \\\n    -DGIT_INFO=${GIT_INFO} \\\n    -DENABLE_PAHO_INSTALLATION=${ENABLE_PAHO_INSTALLATION} \\\n    -DENABLE_RDKAFKA_INSTALLATION=${ENABLE_RDKAFKA_INSTALLATION} \\\n    -DENABLE_VAAPI=ON \\\n    ${EXTERNAL_DLS_BUILD_FLAGS} \\\n    .. \\\n    && make -j $(nproc) \\\n    && make install \\\n    && ldconfig \\\n    && chown -R dlstreamer ${DLS_HOME}/dlstreamer\n\nUSER dlstreamer\n\nWORKDIR ${DLSTREAMER_DIR}/samples\nCMD [\"/bin/bash\"]\n"
}