{
  "startTime": 1674249297531,
  "endTime": 1674249298730,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 31
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Build GoChain in a stock Go builder container\nFROM golang:1.16-alpine3.13 as backend_builder\nRUN apk --no-cache add build-base git mercurial gcc linux-headers g++ make\nENV D=/explorer\nWORKDIR $D\n# cache dependencies\nADD go.mod $D\nADD go.sum $D\nRUN go mod download\nADD . $D\n# build\nRUN cd $D && make backend && mkdir -p /tmp/gochain && cp $D/server/server /tmp/gochain/ && cp $D/grabber/grabber /tmp/gochain/ && cp $D/admin/admin /tmp/gochain/\n\nFROM node:10-alpine as frontend_builder\nWORKDIR /explorer\nRUN apk add --no-cache make git gcc g++ python\nADD . /explorer\nRUN npm install -g @angular/cli && npm cache clean --force;\nRUN make frontend\n\nFROM alpine:latest\nWORKDIR /explorer\nRUN apk add --no-cache ca-certificates docker\nCOPY --from=backend_builder /tmp/gochain/* /usr/local/bin/\nCOPY --from=frontend_builder /explorer/front/dist/* /explorer/\n\nEXPOSE 8080\n\nCMD [ \"server\",\"-d\", \"/explorer/\" ]\n"
}