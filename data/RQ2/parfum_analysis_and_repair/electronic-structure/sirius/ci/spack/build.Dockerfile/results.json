{
  "startTime": 1674248456001,
  "endTime": 1674248456883,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 74
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# This is mainly to provide CUDA, so you can extend e.g.\n# - nvidia/cuda:10.2-devel-ubuntu18.04\n# - nvidia/cuda:11.0-devel-ubuntu20.04\n# - ubuntu:20.04\n# e.g. --build-arg BASE_IMAGE=nvidia/cuda:10.2-devel-ubuntu18.04\nARG BASE_IMAGE=ubuntu:20.04\n\nFROM $BASE_IMAGE\n\n# Set this to a spack.yaml file which contains a spec\n# e.g. --build-arg SPACK_ENVIRONMENT=ci/spack/my-env.yaml\nARG SPACK_ENVIRONMENT\nARG SPACK_SHA\nARG COMPILER_CONFIG\nENV DEBIAN_FRONTEND=noninteractive \\\n    PATH=\"$PATH:/opt/spack/bin:/opt/libtree\" \\\n    SPACK_COLOR=always\nSHELL [\"/bin/bash\", \"-c\"]\n\nRUN apt-get -yqq update \\\n && apt-get -yqq install --no-install-recommends \\\n        build-essential \\\n        ca-certificates \\\n        clang \\\n        curl \\\n        file \\\n        g++ \\\n        gcc \\\n        gfortran \\\n        git \\\n        gnupg2 \\\n        iproute2 \\\n        jq \\\n        libomp-dev \\\n        lmod \\\n        locales \\\n        lua-posix \\\n        make \\\n        parallel \\\n        patchelf \\\n        python3 \\\n        tar \\\n        tcl \\\n        unzip \\\n && locale-gen en_US.UTF-8 \\\n && rm -rf /var/lib/apt/lists/*\n\n# Install libtree for packaging\nRUN mkdir -p /opt/libtree && \\\n    curl -Lfso /opt/libtree/libtree https://github.com/haampie/libtree/releases/download/v2.0.0/libtree_x86_64 && \\\n    chmod +x /opt/libtree/libtree\n\n# This is the spack version we want to have\nENV SPACK_SHA=$SPACK_SHA\n\n# Install the specific ref of Spack provided by the user\nRUN mkdir -p /opt/spack && \\\n    curl -f -Ls \"https://api.github.com/repos/spack/spack/tarball/$SPACK_SHA\" | tar --strip-components=1 -xz -C /opt/spack\n\n# \"Install\" compilers\nCOPY \"$COMPILER_CONFIG\" /opt/spack/etc/spack/compilers.yaml\n\n# Set up the binary cache and trust the public part of our signing key\nCOPY ./ci/spack/public_key.asc ./public_key.asc\nRUN spack mirror add --scope site cscs https://spack.cloud && \\\n    spack gpg trust ./public_key.asc\n\n# Add our custom spack repo from here\nCOPY ./spack /user_repo\n\nRUN spack repo add --scope site /user_repo\n\n# Build dependencies\n# 1. Create a spack environment named `ci` from the input spack.yaml file\n# 2. Install only the dependencies of this (top level is our package)\nCOPY $SPACK_ENVIRONMENT /spack_environment/spack.yaml\nRUN spack env create --without-view ci /spack_environment/spack.yaml\nRUN spack -e ci install --fail-fast --only=dependencies --require-full-hash-match\n"
}