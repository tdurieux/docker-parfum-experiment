{
  "startTime": 1674256213098,
  "endTime": 1674256214086,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 38
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM golang:1.13.4\n\n# --- Variables --\n\n# NOTE: Careful not to put sensitive info in ARG or ENV, someone can run docker history on\n#       the image. Use a multi-stage docker build process.\n\n# Build-time arguments.\nARG APP_USER=\"golang\"\nARG APP_GROUP=${APP_USER}\nARG SRC_DIR=\"/src/long-poll\"\nARG APP_DIR=\"/app\"\nARG APP_NAME=\"long-poll\"\n\n# --- Install system packages ---\n\nRUN export DEBIAN_FRONTEND=noninteractive && \\\n    apt-get update && \\\n    apt-get upgrade -y && \\\n    apt-get install --no-install-recommends -y ca-certificates && rm -rf /var/lib/apt/lists/*;\n\n# --- Set up the build directory ---\n\nWORKDIR ${SRC_DIR}\n\n# Third-party modules.\nCOPY go.mod ./\nENV GO111MODULE=on\nRUN go mod download\nRUN go mod verify\n\n# App source.\nCOPY pkg pkg\nCOPY main.go ./\n\n# --- Build ---\n\nRUN go build -o ${APP_DIR}/${APP_NAME}\n\n# --- Run container as non-privileged user ---\n\n# See https://stackoverflow.com/a/55757473/12429735\nRUN adduser \\\n    --disabled-password \\\n    --gecos \"\" \\\n    --home \"${APP_DIR}\" \\\n    --shell \"/sbin/nologin\" \\\n    --no-create-home \\\n    \"${APP_USER}\"\n\n# --- Runtime configurations ---\n\nEXPOSE 8000\nUSER ${APP_USER}\n# ARG variables are only available in build-time, so you can't use ARG variables in\n# ENTRYPOINT or CMD commands.\nENTRYPOINT [ \"/app/long-poll\" ]\n"
}