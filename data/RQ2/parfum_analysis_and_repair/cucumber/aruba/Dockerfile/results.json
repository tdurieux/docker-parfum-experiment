{
  "startTime": 1674250419820,
  "endTime": 1674250420837,
  "originalSmells": [
    {
      "rule": "gemUpdateSystemRmRootGem",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "gemUpdateNoDocument",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 22
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Instructions\n# ------------\n#\n# This Dockerfile will always target the lowest version of Ruby supported by\n# Aruba. This is currently version 2.4.0.\n#\n# Build the Docker image using:\n#\n#   docker build -t test-aruba .\n#\n# You can pick any image name instead of test-aruba, of course. After the\n# build is done, run bash interactively inside the image like so:\n#\n#   docker run -v $PWD:/aruba --rm -it test-aruba:latest bash\n#\n# The `-v $PWD:/aruba` will make the container pick up any changes to the\n# code, so you can edit and re-run the tests.\n\nFROM ruby:2.4\n\n# Create aruba user\nRUN useradd -m -s /bin/bash aruba\n\nRUN mkdir /aruba\nRUN chown aruba:aruba /aruba\n\n# Run the rest of the steps as non-root\nUSER aruba\nWORKDIR /aruba\n\n# Ensure Bundler 2.x is installed\nRUN mkdir -p /usr/local/etc \\\n  && { \\\n    echo 'install: --no-document'; \\\n    echo 'update: --no-document'; \\\n  } >> /usr/local/etc/gemrc;\nRUN gem update bundler && rm -rf /root/.gem;\n\n# Add just the files needed for running bundle install\nADD Gemfile aruba.gemspec Manifest.txt /aruba/\nADD lib/aruba/version.rb /aruba/lib/aruba/version.rb\nADD exe/aruba /aruba/exe/aruba\n\n# Install dependencies\nRUN bundle\n\n# Add the full source code\nADD . /aruba\n"
}