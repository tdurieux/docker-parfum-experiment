{
  "startTime": 1674254848383,
  "endTime": 1674254849088,
  "originalSmells": [
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 59,
        "columnEnd": 84
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 96
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 21,
        "columnEnd": 53
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 96
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 96
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 21,
        "columnEnd": 53
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 120
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:20.04 as multinet-tools\n\nENV DEBIAN_FRONTEND=noninteractive\nRUN apt -y update\nRUN apt -y --no-install-recommends install tzdata && rm -rf /var/lib/apt/lists/*;\nRUN apt -y --no-install-recommends install build-essential git protobuf-compiler golang python3 cmake wget curl gnupg jq && rm -rf /var/lib/apt/lists/*;\n\nRUN curl -fsSL https://bazel.build/bazel-release.pub.gpg | gpg --batch --dearmor > bazel.gpg\nRUN mv bazel.gpg /etc/apt/trusted.gpg.d/\nRUN echo \"deb [arch=amd64] https://storage.googleapis.com/bazel-apt stable jdk1.8\" | tee /etc/apt/sources.list.d/bazel.list\nRUN apt -y update && apt -y --no-install-recommends install bazel bazel-3.2.0 && rm -rf /var/lib/apt/lists/*;\n\nENV RUSTUP_HOME=/usr/local/rustup\nENV CARGO_HOME=/usr/local/cargo\nENV PATH=/usr/local/cargo/bin:$PATH\n\nRUN set -eux; \\\n    url=\"https://static.rust-lang.org/rustup/dist/x86_64-unknown-linux-gnu/rustup-init\"; \\\n    wget \"$url\"; \\\n    chmod +x rustup-init; \\\n    ./rustup-init -y --no-modify-path --default-toolchain stable; \\\n    rm rustup-init; \\\n    chmod -R a+w $RUSTUP_HOME $CARGO_HOME; \\\n    rustup --version; \\\n    cargo --version; \\\n    rustc --version;\n\nRUN rustup toolchain install nightly\n\nWORKDIR /root/multinet/repo\nENV HOME=/root/multinet\n\nWORKDIR /root/multinet\n\nENV ETH2_TOOLS_COMMIT b1d4db5ef0fbee2cd6e132c04a6f9b8890043cc7\nRUN git clone https://github.com/protolambda/eth2-val-tools.git\nWORKDIR /root/multinet/eth2-val-tools\n\nRUN git checkout ${ETH2_TOOLS_COMMIT}\n\nRUN go install . && \\\ncd .. && \\\nGO111MODULE=on go get github.com/wealdtech/ethereal\n\nWORKDIR /root/multinet\n\nCOPY ./scripts/vars.sh /root/multinet/repo\nRUN wget -O /root/multinet/repo/mainnet.yaml https://raw.githubusercontent.com/ethereum/eth2.0-specs/v0.12.3/configs/mainnet/phase0.yaml\nRUN wget -O /root/multinet/repo/minimal.yaml https://raw.githubusercontent.com/ethereum/eth2.0-specs/v0.12.3/configs/minimal/phase0.yaml\n\nWORKDIR /root/multinet/repo\n\nFROM multinet-tools as multinet-nimbus\n\nCOPY ./scripts/build_genesis.sh /root/multinet/repo\nRUN [\"/bin/bash\", \"build_genesis.sh\"]\n\nCOPY ./scripts/build_nimbus.sh /root/multinet/repo\nRUN [\"/bin/bash\", \"build_nimbus.sh\"]\n\nCOPY ./scripts/run_nimbus.sh /root/multinet/repo\nRUN chmod +x /root/multinet/repo/run_nimbus.sh\n\nCOPY ./scripts/make_genesis.sh /root/multinet/repo\nRUN chmod +x /root/multinet/repo/make_genesis.sh\n\nCOPY ./scripts/wait_for.sh /root/multinet/repo\nRUN chmod +x /root/multinet/repo/wait_for.sh\n\nFROM multinet-tools as multinet-lighthouse\n\nCOPY ./scripts/build_lighthouse.sh /root/multinet/repo\nRUN [\"/bin/bash\", \"build_lighthouse.sh\"]\nCOPY ./scripts/run_lighthouse.sh /root/multinet/repo\nRUN chmod +x /root/multinet/repo/run_lighthouse.sh\n\nCOPY ./scripts/wait_for.sh /root/multinet/repo\nRUN chmod +x /root/multinet/repo/wait_for.sh\n\nFROM multinet-tools as multinet-prysm\n\nCOPY ./scripts/build_prysm.sh /root/multinet/repo\nRUN [\"/bin/bash\", \"build_prysm.sh\"]\nCOPY ./scripts/run_prysm.sh /root/multinet/repo\nRUN chmod +x /root/multinet/repo/run_prysm.sh\n\nCOPY ./scripts/wait_for.sh /root/multinet/repo\nRUN chmod +x /root/multinet/repo/wait_for.sh\n"
}