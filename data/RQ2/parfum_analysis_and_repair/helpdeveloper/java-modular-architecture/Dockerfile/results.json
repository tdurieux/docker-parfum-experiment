{
  "startTime": 1674247923584,
  "endTime": 1674247924547,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 7,
        "columnEnd": 151
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 188
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "####\n# This Dockerfile is used in order to build a container that runs the Quarkus application in JVM mode\n#\n# Before building the container image run:\n#\n# ./mvnw package\n#\n# Then, build the image with:\n#\n# docker build  -t helpdev/app-quarkus-jvm .\n#\n# Then run the container using:\n#\n# docker run -i --rm -p 8080:8080 helpdev/app-quarkus-jvm\n#\n# If you want to include the debug port into your docker image\n# you will have to expose the debug port (default 5005) like this :  EXPOSE 8080 5050\n#\n# Then run the container using :\n#\n# docker run -i --rm -p 8080:8080 -p 5005:5005 -e JAVA_ENABLE_DEBUG=\"true\" helpdev/app-quarkus-jvm\n#\n# Sample to run Flyway migration :\n#\n# docker run --rm --workdir=\"/flyway\" --entrypoint /flyway/flyway helpdev/app-quarkus-jvm -url=jdbc:mysql://172.17.0.1:3306 -schemas=app -user=root -password=test123 -connectRetries=60 migrate\n#\n###\nFROM registry.access.redhat.com/ubi8/ubi-minimal:8.3\n\nARG JAVA_PACKAGE=java-17-openjdk-headless\nARG RUN_JAVA_VERSION=1.3.8\nENV FLYWAY_VERSION 7.5.2\nENV LANG='en_US.UTF-8' LANGUAGE='en_US:en'\n\n# Install java and the run-java script\n# Also set up permissions for user `1001`\nRUN microdnf install curl ca-certificates ${JAVA_PACKAGE} tar gzip \\\n    && microdnf update \\\n    && microdnf clean all \\\n    && mkdir /deployments \\\n    && mkdir /flyway \\\n    && chown 1001 /deployments \\\n    && chmod \"g+rwX\" /deployments \\\n    && chown 1001:root /deployments \\\n    && curl -f https://repo1.maven.org/maven2/io/fabric8/run-java-sh/${RUN_JAVA_VERSION}/run-java-sh-${RUN_JAVA_VERSION}-sh.sh -o /deployments/run-java.sh \\\n    && chown 1001 /deployments/run-java.sh \\\n    && chmod 540 /deployments/run-java.sh \\\n    && echo \"securerandom.source=file:/dev/urandom\" >> /etc/alternatives/jre/lib/security/java.security\n\n# Install and configure Flyway\nRUN curl -f https://repo1.maven.org/maven2/org/flywaydb/flyway-commandline/${FLYWAY_VERSION}/flyway-commandline-${FLYWAY_VERSION}.tar.gz -o /flyway/flyway-commandline-${FLYWAY_VERSION}.tar.gz \\\n    && tar -xzf /flyway/flyway-commandline-${FLYWAY_VERSION}.tar.gz --strip-components=1 -C /flyway \\\n    && rm /flyway/flyway-commandline-${FLYWAY_VERSION}.tar.gz \\\n    && chown 1001 /flyway/flyway \\\n    && chmod 540 /flyway/flyway\n\n# Configure the JAVA_OPTIONS, you can add -XshowSettings:vm to also display the heap size.\nENV JAVA_OPTIONS=\"-Dquarkus.http.host=0.0.0.0 -Djava.util.logging.manager=org.jboss.logmanager.LogManager\"\nENV JAVA_APP_JAR=\"quarkus-run.jar\"\nCOPY app/quarkus-app/target/quarkus-app/ /deployments/\nCOPY resources/flyway/db/migration /flyway/sql\n\nEXPOSE 8080\nUSER 1001\n\nENTRYPOINT [ \"/deployments/run-java.sh\" ]\n"
}