{
  "startTime": 1674248447781,
  "endTime": 1674248448697,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 79,
        "lineEnd": 79,
        "columnStart": 26,
        "columnEnd": 71
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 102,
        "lineEnd": 102,
        "columnStart": 4,
        "columnEnd": 74
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 107,
        "lineEnd": 107,
        "columnStart": 4,
        "columnEnd": 83
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "### THIS FILE GENERATED BY https://github.com/michaelmcandrew/civicrm-docker/blob/master/generate.py ###\n\nFROM php:{{ php }}-apache\n\n# libc-client-dev and libkrb5-dev required for the imap php extension\n# libicu-dev required for the intl php extension\n# libmagickwand-dev required for the imagick php extension\n{% if php not in ['7.2', '7.3'] %}# libmcrypt-dev required for the mcrypt php extension\n{% endif %}# libjpeg62-turbo-dev and libpng-dev required for the gd php extension\n# libxml2-dev required for the soap php extension\n# iproute2 is required to get the host ip at runtime for XDEBUG_REMOTE_HOST environment variable\n# msmtp-mta allows us to globally redirect email via SMTP\n# unzip is required for composer\n\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends \\\n  iproute2 \\\n  less \\\n  libc-client-dev \\\n  libicu-dev \\\n  libjpeg62-turbo-dev \\\n  libkrb5-dev \\\n  libmagickwand-dev \\\n  {% if php not in ['7.2', '7.3'] %}libmcrypt-dev \\\n  {% endif %}libpng-dev \\\n  libxml2-dev \\\n  libzip-dev \\\n  msmtp-mta \\\n  mariadb-client \\\n  unzip \\\n  wget \\\n  && rm -r /var/lib/apt/lists/*\n\n# CiviCRM requires the following PHP extensions (some of which are already\n# enabled in the Docker image:\n#\n# * curl (already enabled)\n# * gd\n# * gettext\n# * imap\n# * intl\n# * json (already enabled)\n# * mbstring (already enabled)\n{% if php not in ['7.2', '7.3'] %}# * mcrypt\n{% endif %}# * mysqli\n# * openssl (already enabled)\n# * pdo_mysql\n# * phar (already enabled)\n# * posix (already enabled)\n# * soap\n# * zip\n\n# Configure and install php extensions (not configuration comes before installation)\n\nRUN docker-php-ext-install bcmath \\\n  && docker-php-ext-configure gd --with-jpeg-dir=/usr/include/ --with-png-dir=/usr/include/ \\\n  && docker-php-ext-install gd \\\n  && docker-php-ext-install gettext \\\n  && docker-php-ext-configure imap --with-kerberos --with-imap-ssl \\\n  && docker-php-ext-install imap \\\n  && docker-php-ext-install intl \\\n  {% if php not in ['7.2', '7.3'] %}&& docker-php-ext-install mcrypt \\\n  {% endif %}{% if php == '5.6' %}&& docker-php-ext-install mysql \\\n  {% endif %}&& docker-php-ext-install mysqli \\\n  && docker-php-ext-install opcache \\\n  && docker-php-ext-install pdo_mysql \\\n  && docker-php-ext-install soap \\\n  && docker-php-ext-install zip\n\n# Install and enable imagick PECL extensions\n\nRUN pecl install imagick \\\n  && docker-php-ext-enable imagick\n\n# Install xdebug PECL extension\n{% if php == '5.6' %}RUN pecl install xdebug-2.5.5\n{% else %}RUN pecl install xdebug\n{% endif %}\n# Install composer using the method described at https://getcomposer.org/download/ (TODO consider whether this is really necessary - we could remove from this image)\nRUN EXPECTED_SIGNATURE=\"$( curl -f https://composer.github.io/installer.sig)\" \\\n  && php -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\" \\\n  && ACTUAL_SIGNATURE=\"$(php -r \"echo hash_file('sha384', 'composer-setup.php');\")\" \\\n  && if [ \"$EXPECTED_SIGNATURE\" != \"${ACTUAL_SIGNATURE}\" ]; then >&2 echo 'ERROR: Invalid installer signature'; rm composer-setup.php; exit 1; fi \\\n  && php composer-setup.php --install-dir=/usr/local/bin --filename=composer \\\n  && rm composer-setup.php\n\n# Create civicrm user\n\nRUN useradd civicrm --home-dir /home/civicrm --create-home\n\nRUN chown -R civicrm:civicrm /var/www\n\nENV APACHE_RUN_USER=civicrm\n\nUSER civicrm\n\nRUN composer global require consolidation/cgr\n\nUSER root\n\n# Download cv\n\nRUN curl -f -LsS https://download.civicrm.org/cv/cv.phar -o /usr/local/bin/cv \\\n  && chmod +x /usr/local/bin/cv\n\n# Download civix\n\nRUN curl -f -LsS https://download.civicrm.org/civix/civix.phar -o /usr/local/bin/civix \\\n  && chmod +x /usr/local/bin/civix\n\n# Configure apache\n\nRUN a2enmod rewrite headers\n\nCOPY ./apache.conf /etc/apache2/conf-available/civicrm.conf\n\nRUN a2enconf civicrm\n\n# Configure php\n\nRUN cp /usr/local/etc/php/php.ini-production /usr/local/etc/php/php.ini\n\nCOPY ./civicrm-docker-load /usr/local/bin\n\nCOPY ./civicrm_dump.php /usr/local/src/civicrm_dump.php\n\nRUN mkdir /usr/local/etc/civicrm\n\nENTRYPOINT [ \"civicrm-docker-entrypoint\" ]\n\nCMD [\"apache2-foreground\"]\n\n{% include cms + '.Dockerfile' %}\n"
}