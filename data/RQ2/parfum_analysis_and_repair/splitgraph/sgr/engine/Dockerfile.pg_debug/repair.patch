diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/splitgraph/sgr/engine/Dockerfile.pg_debug b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/splitgraph/sgr/engine/Dockerfile.pg_debug/repaired.Dockerfile
index 948d08d..4f66643 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/splitgraph/sgr/engine/Dockerfile.pg_debug
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/splitgraph/sgr/engine/Dockerfile.pg_debug/repaired.Dockerfile
@@ -1,5 +1,3 @@
-# syntax = docker/dockerfile:1.3-labs
-
 # Base PostgreSQL debug image, where we compile and install it from source with
 # full debugging capabilities. For more details see:
 # https://wiki.postgresql.org/wiki/Developer_FAQ#Compile-time
@@ -19,7 +17,7 @@ FROM postgres:12.3
 ARG use_valgrind
 RUN rm -rf /usr/lib/postgresql/12/* && \
     apt-get update -qq && \
-    apt-get install -y --allow-downgrades \
+    apt-get install --no-install-recommends -y --allow-downgrades \
         build-essential \
         curl \
         wget \
@@ -64,8 +62,7 @@ RUN rm -rf /usr/lib/postgresql/12/* && \
     # Download PG source
     git clone -b REL_12_STABLE https://github.com/postgres/postgres.git && \
     # Download Valgrind source, compile and install
-    test -z "${use_valgrind}" || (\
-        # Make a switcheroo in the image entrypoint, so that instead of starting plain
+    test -z "${use_valgrind}" || (# Make a switcheroo in the image entrypoint, so that instead of starting plain
         # postgres we start it under Valgrind
         sed -i -e 's/"$BASH_SOURCE"/"$BASH_SOURCE" valgrind --leak-check=full --show-leak-kinds=definite,indirect \
 --num-callers=25 --log-file=\/pg-valgrind\/valgrind-%p.log --trace-children=yes \
@@ -75,26 +72,26 @@ RUN rm -rf /usr/lib/postgresql/12/* && \
         # Configure PG with Valgrind support
         sed -i -e 's=/\*\s#define\sUSE_VALGRIND\s\*/=#define USE_VALGRIND=' postgres/src/include/pg_config_manual.h && \
         # Download Python Valgrind suppressions and make folder for output files
-        curl https://svn.python.org/projects/python/trunk/Misc/valgrind-python.supp --output valgrind-python.supp && \
+        curl -f https://svn.python.org/projects/python/trunk/Misc/valgrind-python.supp --output valgrind-python.supp && \
         mkdir -p /pg-valgrind && sudo chmod a+w /pg-valgrind && \
         # Build Valgrind
-        curl https://sourceware.org/pub/valgrind/valgrind-3.18.1.tar.bz2 --output valgrind-3.18.1.tar.bz2 && \
+        curl -f https://sourceware.org/pub/valgrind/valgrind-3.18.1.tar.bz2 --output valgrind-3.18.1.tar.bz2 && \
         tar xf valgrind-3.18.1.tar.bz2 && \
         cd valgrind-3.18.1 && \
-        ./configure && \
+        ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" && \
         make && \
         make install && \
         cd ..) && \
     # Compile and install PG from source
     cd /postgres && \
     mkdir -p /usr/lib/postgresql/12 && \
-    ./configure \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
         --enable-cassert \
         --enable-debug \
         CFLAGS="-ggdb -Og -g3 -fno-omit-frame-pointer" \
         -prefix=/usr/lib/postgresql/12 && \
     make && \
-    make install
+    make install && rm valgrind-3.18.1.tar.bz2
     # Extensions are not installed automatically; install extensions so that
     # we can step through them in GDB (but otherwise they work fine without this).
     # cd contrib && \