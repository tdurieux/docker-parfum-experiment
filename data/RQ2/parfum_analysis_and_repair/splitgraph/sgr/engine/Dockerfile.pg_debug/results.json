{
  "startTime": 1674249966494,
  "endTime": 1674249967243,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 8,
        "columnEnd": 113
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 80,
        "lineEnd": 80,
        "columnStart": 8,
        "columnEnd": 105
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 83,
        "lineEnd": 83,
        "columnStart": 8,
        "columnEnd": 19
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 90,
        "lineEnd": 94,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 81,
        "lineEnd": 81,
        "columnStart": 8,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 21,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 21
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Base PostgreSQL debug image, where we compile and install it from source with\n# full debugging capabilities. For more details see:\n# https://wiki.postgresql.org/wiki/Developer_FAQ#Compile-time\n# Note that we use the pre-built PG image from:\n# https://github.com/docker-library/postgres/blob/master/12/bullseye/Dockerfile\n# and just swap out the binaries and shared libs with the ones installed below.\n\n\n#####\n##### toolchain\n#####\n\nFROM postgres:12.3\n\n# Compile and install PG in debug mode\n\nARG use_valgrind\nRUN rm -rf /usr/lib/postgresql/12/* && \\\n    apt-get update -qq && \\\n    apt-get install --no-install-recommends -y --allow-downgrades \\\n        build-essential \\\n        curl \\\n        wget \\\n        git \\\n        vim \\\n        libssl-dev \\\n        libsasl2-dev \\\n        pkgconf \\\n        autoconf \\\n        libtool \\\n        # https://github.com/docker-library/postgres/issues/678#issuecomment-586888013\n        postgresql-server-dev-$PG_MAJOR \\\n        protobuf-c-compiler \\\n        libprotobuf-c-dev \\\n        libpython3.7-dev \\\n        python3.7 \\\n        python3-setuptools \\\n        cmake \\\n        clang-7 \\\n        # Debugging tools\n        sudo \\\n        gdb \\\n        procps \\\n        # PG source installation reqs\n        bison \\\n        flex \\\n        build-essential \\\n        libreadline-dev \\\n        libffi6-dbg \\\n        libgcc1-dbg \\\n        libkrb5-dbg \\\n        libstdc++6-8-dbg \\\n        libxml2-dbg \\\n        zlib1g-dbg \\\n        zlib1g \\\n        zlib1g-dev \\\n        xsltproc \\\n        libxml2-utils && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    # pgprint command for GDB\n    git clone https://github.com/tvesely/gdbpg.git && \\\n    # Download PG source\n    git clone -b REL_12_STABLE https://github.com/postgres/postgres.git && \\\n    # Download Valgrind source, compile and install\n    test -z \"${use_valgrind}\" || (# Make a switcheroo in the image entrypoint, so that instead of starting plain\n        # postgres we start it under Valgrind\n        sed -i -e 's/\"$BASH_SOURCE\"/\"$BASH_SOURCE\" valgrind --leak-check=full --show-leak-kinds=definite,indirect \\\n--num-callers=25 --log-file=\\/pg-valgrind\\/valgrind-%p.log --trace-children=yes \\\n--gen-suppressions=all --suppressions=postgres\\/src\\/tools\\/valgrind.supp \\\n--suppressions=valgrind-python.supp --verbose --time-stamp=yes \\\n--error-markers=VALGRINDERROR-BEGIN,VALGRINDERROR-END/' /usr/local/bin/docker-entrypoint.sh && \\\n        # Configure PG with Valgrind support\n        sed -i -e 's=/\\*\\s#define\\sUSE_VALGRIND\\s\\*/=#define USE_VALGRIND=' postgres/src/include/pg_config_manual.h && \\\n        # Download Python Valgrind suppressions and make folder for output files\n        curl -f https://svn.python.org/projects/python/trunk/Misc/valgrind-python.supp --output valgrind-python.supp && \\\n        mkdir -p /pg-valgrind && sudo chmod a+w /pg-valgrind && \\\n        # Build Valgrind\n        curl -f https://sourceware.org/pub/valgrind/valgrind-3.18.1.tar.bz2 --output valgrind-3.18.1.tar.bz2 && \\\n        tar xf valgrind-3.18.1.tar.bz2 && \\\n        cd valgrind-3.18.1 && \\\n        ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n        make && \\\n        make install && \\\n        cd ..) && \\\n    # Compile and install PG from source\n    cd /postgres && \\\n    mkdir -p /usr/lib/postgresql/12 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n        --enable-cassert \\\n        --enable-debug \\\n        CFLAGS=\"-ggdb -Og -g3 -fno-omit-frame-pointer\" \\\n        -prefix=/usr/lib/postgresql/12 && \\\n    make && \\\n    make install && rm valgrind-3.18.1.tar.bz2\n    # Extensions are not installed automatically; install extensions so that\n    # we can step through them in GDB (but otherwise they work fine without this).\n    # cd contrib && \\\n    # make all && \\\n    # make install\n\n# Configure GDB: enable pgprint, disable confirmation and dynamic load prompt\nCOPY <<EOF /etc/gdb/gdbinit\nsource /gdbpg/gdbpg.py\nset confirm off\nset breakpoint pending on\nEOF\n"
}