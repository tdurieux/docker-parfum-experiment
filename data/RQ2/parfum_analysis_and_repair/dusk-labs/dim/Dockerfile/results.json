{
  "startTime": 1674218018223,
  "endTime": 1674218019430,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 67
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 67
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 37,
        "lineEnd": 41,
        "columnStart": 22,
        "columnEnd": 11
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 62,
        "lineEnd": 71,
        "columnStart": 22,
        "columnEnd": 17
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 37,
        "lineEnd": 41,
        "columnStart": 22,
        "columnEnd": 11
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 20,
        "columnEnd": 36
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 22,
        "columnEnd": 38
      }
    }
  ],
  "repairedDockerfile": "FROM node:bullseye AS web\nWORKDIR /ui\nCOPY ui/package*.json ./\nRUN yarn install && yarn cache clean;\nCOPY ui ./\nENV NODE_OPTIONS=--openssl-legacy-provider\nRUN yarn run build && yarn cache clean;\n\nFROM debian:bullseye AS ffmpeg\nARG DEBIAN_FRONTEND=noninteractive\nWORKDIR /static\n\nARG TARGETARCH=amd64\nRUN if [ \"$TARGETARCH\" = \"amd64\" ]; then \\\n    apt-get update && \\\n    apt-get install --no-install-recommends -y wget unzip && \\\n    wget https://github.com/Dusk-Labs/ffmpeg-static/releases/download/ffmpeg-all-0.0.1/ffmpeg && \\\n    wget https://github.com/Dusk-Labs/ffmpeg-static/releases/download/ffmpeg-all-0.0.1/ffprobe && \\\n    ls -la . && \\\n    pwd \\\n    ; rm -rf /var/lib/apt/lists/*; fi\nRUN if [ \"$TARGETARCH\" = \"arm64\" ]; then \\\n    apt-get update && \\\n    apt-get install --no-install-recommends -y wget tar xz-utils && \\\n    wget https://johnvansickle.com/ffmpeg/releases/ffmpeg-release-arm64-static.tar.xz && \\\n    tar --strip-components 1 -xf ffmpeg-release-arm64-static.tar.xz \\\n    ; rm ffmpeg-release-arm64-static.tar.xz rm -rf /var/lib/apt/lists/*; fi\nRUN if [ \"$TARGETARCH\" = \"arm\" ]; then \\\n    apt-get update && \\\n    apt-get install --no-install-recommends -y wget tar xz-utils && \\\n    wget https://johnvansickle.com/ffmpeg/releases/ffmpeg-release-armhf-static.tar.xz && \\\n    tar --strip-components 1 -xf ffmpeg-release-armhf-static.tar.xz \\\n    ; rm ffmpeg-release-armhf-static.tar.xz rm -rf /var/lib/apt/lists/*; fi\nRUN chmod +x /static/ffmpeg && chmod +x /static/ffprobe\n\nFROM rust:bullseye AS dim\nARG DEBIAN_FRONTEND=noninteractive\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    libva-dev \\\n    libva-drm2 \\\n    libva2 \\\n    sqlite3 && rm -rf /var/lib/apt/lists/*;\nWORKDIR /dim\nCOPY . ./\nCOPY --from=web /ui/build ui/build\nARG DATABASE_URL=\"sqlite://dim_dev.db\"\n\n# Sometimes we may need to quickly build a test image\nARG RUST_BUILD=release\nRUN if [ \"$RUST_BUILD\" = \"debug\" ]; then \\\n        cargo build --features vaapi && \\\n        mv ./target/debug/dim ./target/dim \\\n    ; fi\n\nRUN if [ \"$RUST_BUILD\" = \"release\" ]; then \\\n        cargo build --features vaapi --release && \\\n        mv ./target/release/dim ./target/dim \\\n    ; fi\n\nFROM debian:bullseye\nENV RUST_BACKTRACE=full\nENV DEBIAN_FRONTEND=noninteractive\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    ca-certificates \\\n    libfontconfig \\\n    libfribidi0 \\\n    libharfbuzz0b \\\n    libtheora0 \\\n    libva-drm2 \\\n    libva2 \\\n    libvorbis0a \\\n    libvorbisenc2 \\\n    && rm -rf /var/lib/apt/lists/*\nCOPY --from=ffmpeg /static/ffmpeg /opt/dim/utils/ffmpeg\nCOPY --from=ffmpeg /static/ffprobe /opt/dim/utils/ffprobe\nCOPY --from=dim /dim/target/dim /opt/dim/dim\n\nEXPOSE 8000\nVOLUME [\"/opt/dim/config\"]\n\nENV RUST_LOG=info\nWORKDIR /opt/dim\nCMD [\"./dim\"]\n"
}