{
  "startTime": 1674217453469,
  "endTime": 1674217454569,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 82,
        "lineEnd": 82,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 82,
        "lineEnd": 82,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 82,
        "lineEnd": 82,
        "columnStart": 4,
        "columnEnd": 27
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 82,
        "lineEnd": 82,
        "columnStart": 4,
        "columnEnd": 51
      }
    }
  ],
  "repairedDockerfile": "#########################\n#\n# This docker file creates an Image with an environment\n# for running the KG website.\n#\n# The \"docker build\" command used to build this file\n# into a Image should be run from the website directory.\n# See the README for more details.\n#\n#########################\n\n##### Build configuration #####\n# First (build) stage downloads the animated Marie video\n\nFROM maven:3.6-openjdk-11-slim as build\n\n# Copy all files into root's home directory\nADD . /root\n\n# Populate settings templates with credentials, repo name\nWORKDIR /root/.m2\n\nRUN sed -i \"s|MASTER_PASSWORD|$(mvn --encrypt-master-password master_password)|\" settings-security.xml\nRUN sed -i \"s|REPO_USERNAME|$(cat ../credentials/repo_username.txt)|;s|REPO_PASSWORD|$(cat ../credentials/repo_password.txt|xargs mvn --encrypt-password)|\" settings.xml\n\n# Build the project\nWORKDIR /root/docker\nRUN mvn package\n\n\n##### Base configuration #####\n# Second (base) stage installs required tools\n\nFROM php:7.4-apache as base\n\n# Enable Apache Rewrite + Expires Module\nRUN a2enmod rewrite expires && \\\n    sed -i 's/ServerTokens OS/ServerTokens ProductOnly/g' \\\n    /etc/apache2/conf-available/security.conf\n\n# Install dependencies\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n    unzip \\\n    libfreetype6-dev \\\n    libjpeg62-turbo-dev \\\n    libpng-dev \\\n    libyaml-dev \\\n    libzip4 \\\n    libzip-dev \\\n    zlib1g-dev \\\n    libicu-dev \\\n    g++ \\\n    git \\\n    cron \\\n    vim \\\n    && docker-php-ext-install opcache \\\n    && docker-php-ext-configure intl \\\n    && docker-php-ext-install intl \\\n    && docker-php-ext-configure gd --with-freetype --with-jpeg \\\n    && docker-php-ext-install -j$(nproc) gd \\\n    && docker-php-ext-install zip \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Set recommended PHP.ini settings\nRUN { \\\n    echo 'opcache.memory_consumption=128'; \\\n    echo 'opcache.interned_strings_buffer=8'; \\\n    echo 'opcache.max_accelerated_files=4000'; \\\n    echo 'opcache.revalidate_freq=2'; \\\n    echo 'opcache.fast_shutdown=1'; \\\n    echo 'opcache.enable_cli=1'; \\\n    echo 'upload_max_filesize=128M'; \\\n    echo 'post_max_size=128M'; \\\n    echo 'expose_php=off'; \\\n    } > /usr/local/etc/php/conf.d/php-recommended.ini\n\n# Install user cache and YAML support\nRUN pecl install apcu \\\n    && pecl install yaml-2.0.4 \\\n    && docker-php-ext-enable apcu yaml\n\n# Install bash\nRUN apt-get install --no-install-recommends -y bash && rm -rf /var/lib/apt/lists/*;\n\n# Copy in site files\nCOPY site /var/www/html/\n\n# Update permissions\nRUN chown -R www-data:www-data /var/www/\nRUN chmod -R 775 /var/www/\n\n# Location for access logs\nRUN mkdir /var/log/apache2/daily-access\nRUN chown -R www-data:www-data /var/log/apache2/\nRUN chmod -R 775 /var/log/apache2/\n\n# Copy in custom configuration file(s)\nCOPY docker/rotate-logs.conf /etc/apache2/conf-available/rotate-logs.conf\nRUN ln -s /etc/apache2/conf-available/rotate-logs.conf /etc/apache2/conf-enabled/rotate-logs.conf\nRUN chown -R www-data:www-data /etc/apache2/conf-available/rotate-logs.conf\nRUN chown -R www-data:www-data /etc/apache2/conf-enabled/rotate-logs.conf\nRUN chmod -R 775 /etc/apache2/conf-available/rotate-logs.conf\nRUN chmod -R 775 /etc/apache2/conf-enabled/rotate-logs.conf\n\n# Copy in the downloaded Marie video\nCOPY --from=build /root/docker/output/animated-marie.mp4 ./user/videos/animated-marie.mp4\n\n# Expose port 80\nEXPOSE 80\n\n\n##### Dev configuration #####\nFROM base as dev\n# Set the Google Tag Manager container ID\nRUN sed -i \"s/GTM_CONTAINER_ID/GTM-NWD7GLT/\" ./user/themes/quark/templates/partials/gtm-header.html.twig\nRUN sed -i \"s/GTM_CONTAINER_ID/GTM-NWD7GLT/\" ./user/themes/quark/templates/partials/gtm-noscript.html.twig\n\n\n##### Dev configuration #####\nFROM base as prod\n# Set the Google Tag Manager container ID\nRUN sed -i \"s/GTM_CONTAINER_ID/GTM-NM7K5Z2/\" ./user/themes/quark/templates/partials/gtm-header.html.twig\nRUN sed -i \"s/GTM_CONTAINER_ID/GTM-NM7K5Z2/\" ./user/themes/quark/templates/partials/gtm-noscript.html.twig"
}