{
  "startTime": 1674250140149,
  "endTime": 1674250141192,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 22,
        "columnEnd": 52
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 22,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 22,
        "columnEnd": 54
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 22,
        "columnEnd": 52
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 22,
        "columnEnd": 48
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 22,
        "columnEnd": 54
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Base image\n#==================================================================================================\nFROM nginx:1.19.6 as base\n\n# Install cron\nRUN apt-get update && apt-get install --no-install-recommends -y cron procps && rm -rf /var/lib/apt/lists/*;\n\n# Install python3\nRUN apt-get update && apt-get install --no-install-recommends -y python3 && rm -rf /var/lib/apt/lists/*;\n\n# Install password creation utility\nRUN apt-get update && apt-get install --no-install-recommends -y apache2-utils && rm -rf /var/lib/apt/lists/*;\n\n# Add the contents of conf.d\nADD conf.d /etc/nginx/conf.d/\n\n# Rotate nginx logs daily\nRUN mkdir /var/log/nginx/daily\nCOPY logrotate /etc/cron.daily/logrotate\nRUN chmod 755 /etc/cron.daily/logrotate\nCOPY nginx /etc/logrotate.d/nginx\nRUN chmod 644 /etc/logrotate.d/nginx\n\n# Add cron.daily script\nCOPY parse-logs.sh /etc/cron.daily/parse-logs\nRUN chmod 755 /etc/cron.daily/parse-logs\n\n# Add python script\nCOPY log-parser.py /usr/local/log-parser.py\nRUN chmod 777 /usr/local/log-parser.py\n\n# Create 'credo-user' account (currently disabled)\n#COPY credentials/* /usr/local/\n#COPY setup-credo.sh /usr/local/setup-credo.sh\n#RUN chmod 755 /usr/local/setup-credo.sh\n#RUN /usr/local/setup-credo.sh\n\nRUN mkdir -p /var/www/certbot/.well-known\n\n# Run both nginx and cron together on boot\nCMD [ \"sh\", \"-c\", \"cron && nginx -g 'daemon off;'\" ]\n#==================================================================================================\n\n# Dev image\n#==================================================================================================\nFROM base as dev\n\n# Copy in dev configuration file - includes dev-specific servers (doesn't use SSL)\nCOPY nginx.dev.conf /etc/nginx/nginx.conf\n#==================================================================================================\n\n# Prod image\n#==================================================================================================\nFROM base as prod\n\n# Copy in prod configuration file - includes prod-specific servers and enables SSL\nCOPY nginx.prod.conf /etc/nginx/nginx.conf\n#=================================================================================================="
}