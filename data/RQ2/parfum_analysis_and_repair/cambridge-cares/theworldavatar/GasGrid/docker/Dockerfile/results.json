{
  "startTime": 1674220360961,
  "endTime": 1674220361783,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 18,
        "columnEnd": 102
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 18,
        "columnEnd": 55
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 18,
        "columnEnd": 40
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 18,
        "columnEnd": 102
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 18,
        "columnEnd": 55
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 18,
        "columnEnd": 40
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#########################\n#\n# This Dockerfile creates an image with an environment appropriate for running the Gas Grid Agent.\n# It builds on the Python agent example located at '/Deploy/examples/python_agent'.\n#\n# See the README for more details.\n#\n#########################\n\n\n#====================== Common configuration shared by 'dev' and 'prod' images ====================\nFROM python:3.7.10 as common\n\n# Meta data\nLABEL authors = \"trs53@cam.ac.uk, support@cmclinnovations.com\"\nLABEL version = \"1.0.0-SNAPSHOT\"\nLABEL description = \"Gas Grid Agent\"\n\n# Install utilities\nRUN apt update && apt-get install --no-install-recommends -y rsyslog cron procps nano dos2unix wget software-properties-common && rm -rf /var/lib/apt/lists/*;\n\n# Install Java 8\nRUN wget -qO - https://adoptopenjdk.jfrog.io/adoptopenjdk/api/gpg/key/public | apt-key add -\nRUN add-apt-repository --yes https://adoptopenjdk.jfrog.io/adoptopenjdk/deb/\nRUN apt update && apt install --no-install-recommends -y adoptopenjdk-8-hotspot && rm -rf /var/lib/apt/lists/*;\n\n# Install web server (to host geojson files for download)\nRUN apt update && apt install --no-install-recommends -y apache2 && rm -rf /var/lib/apt/lists/*;\nCOPY docker/httpd.conf /usr/local/apache2/conf/httpd.conf\nRUN mkdir -p /var/www/html/gas-grid\nRUN chown -R www-data:www-data /var/www/\nRUN chmod -R 775 /var/www/\n\n# Keeps Python from generating .pyc files in the container\nENV PYTHONDONTWRITEBYTECODE=1\n\n# Turns off buffering for easier container logging\nENV PYTHONUNBUFFERED=1\n\n# Install the required Python libraries\nCOPY docker/requirements.txt .\nRUN python -m pip install -r requirements.txt\n\n# Set the default working directory, then copy the Python source code into it\nWORKDIR /app\nCOPY docker/start-up.sh /app/start-up.sh\nRUN chmod 755 /app/start-up.sh\nRUN dos2unix /app/start-up.sh\n\nCOPY docker/env-test.sh /app/env-test.sh\nRUN chmod 755 /app/env-test.sh\nRUN dos2unix /app/env-test.sh\n\n# Copy in the cron jobs file\nCOPY docker/cron-jobs cron-jobs\nRUN chmod 755 cron-jobs\nRUN dos2unix cron-jobs\n\n# Scripts relating to gathering data and inputting it to the KG\nRUN mkdir input\nCOPY OntoGasGrid/real_time_terminal_population/terminal-update.py input/terminal-update.py\nRUN chmod +x input/terminal-update.py\n\n# Scripts relating to querying data in the KG and formatting it\nRUN mkdir output\nCOPY docker/run-outputs.sh /app/output/run-outputs.sh\nRUN dos2unix /app/output/run-outputs.sh\nCOPY OntoGasGrid/flow_data_generator/output_flow_data.py output/output_flow_data.py\nCOPY OntoGasGrid/geoJSON_output_agent/all_offtakes_to_geojson.py output/all_offtakes_to_geojson.py\nCOPY OntoGasGrid/geoJSON_output_agent/all_pipes_query_to_geojson.py output/all_pipes_query_to_geojson.py\nCOPY OntoGasGrid/geoJSON_output_agent/all_terminals_to_geojson.py output/all_terminals_to_geojson.py\nRUN chmod -R 755 ./output\n\n# Make a directory for the gas-grid logs\nRUN mkdir /var/log/gas-grid\nRUN chmod 777 /var/log/gas-grid\n\n# Set environment variables\n# TODO: Read this from the docker-compose file in future.\nENV TARGET_MODE=\"CMCL\"\nENV PYTHONPATH=/usr/local/lib/python3.7/site-packages\n\n# Expose port for HTTP server\nEXPOSE 80\n\n# Run cron daemon and boot script at start\nCMD [ \"sh\", \"-c\", \"rsyslogd && /app/start-up.sh\" ]\n\n\n#===================================== Development configuration ==================================\nFROM common as dev\nENV KG_LOCATION=\"http://kg.cmclinnovations.com:81/blazegraph_geo\"\n\n#===================================== Production configuration ===================================\nFROM common as prod\nENV KG_LOCATION=\"https://kg.cmclinnovations.com/blazegraph_geo\"\n"
}