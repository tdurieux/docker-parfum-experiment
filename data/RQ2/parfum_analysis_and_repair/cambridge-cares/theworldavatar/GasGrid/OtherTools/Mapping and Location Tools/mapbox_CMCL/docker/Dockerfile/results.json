{
  "startTime": 1674249788520,
  "endTime": 1674249789195,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 18,
        "columnEnd": 76
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 18,
        "columnEnd": 46
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#########################\n#\n# This docker file creates an image for the UK Gas Grid visualisation.\n#\n# NOTE: The \"docker build\" command used to build this file\n# into a image should be run from the mapbox_CMCL folder,\n# not from within the \"docker\" directory. See the README\n# for more details.\n#\n# Stages:\n#\t- dev:\tcopies in download-dev.sh\n#\t- prod:\tcopies in download-prod.sh\n#\n#########################\n\n##### DEVELOPMENT STAGE #####\n# Using Alpine as the base\nFROM  alpine:3.14.0 as dev\n\n# Meta data\nLABEL authors = \"trs53@cam.ac.uk, support@cmclinnovations.com\"\nLABEL version = \"1.0.0-SNAPSHOT\"\nLABEL description = \"Gas Grid Visualisation\"\n\n# Install utilities\nRUN apk update && apk add --no-cache procps nano wget bash busybox-initscripts dos2unix\n\n# Install Apache and PHP\nRUn apk update && apk add --no-cache apache2 php7-apache2\n\n# Make a directory for the gas-grid logs\nRUN mkdir /var/log/gas-grid\n\n# Copy in the download script specific to the DEVELOPMENT setup\nCOPY docker/download-dev.sh /usr/local/download.sh\nRUN chmod 755 /usr/local/download.sh\nRUN dos2unix /usr/local/download.sh\n\n# Copy in the start-up script\nCOPY docker/start-up.sh /usr/local/start-up.sh\nRUN chmod 777 /usr/local/start-up.sh\nRUN chmod +x /usr/local/start-up.sh\nRUN dos2unix /usr/local/start-up.sh\n\n# Copy in the cron-jobs file\nCOPY docker/cron-jobs /usr/local/cron-jobs\nRUN chmod 755 /usr/local/cron-jobs\nRUN dos2unix /usr/local/cron-jobs\n\n# Copy in the files\nRUN mkdir -p /var/www/html\nWORKDIR /var/www/html\nCOPY . .\n\n# Copy in the head.html specific to the DEVELOPMENT setup\nCOPY head-dev.html head.html\n\n# Custom HTTPD configuration\nCOPY docker/httpd.conf /etc/apache2/httpd.conf\n\n# Permissions\n#RUN chown -R www-data:www-data /var/www/\nRUN chmod -R 775 /var/www/\n\n# Expose port 80\nEXPOSE 80\n\n# Run cron daemon and boot script at start\nCMD [ \"/bin/bash\", \"-c\", \"/usr/local/start-up.sh\" ]\n\n\n##### PRODUCTION STAGE #####\n# Using development image as the base\nFROM dev as prod\n\n# Copy in the download script specific to the PRODUCTION setup\nCOPY docker/download-prod.sh /usr/local/download.sh\nRUN chmod 755 /usr/local/download.sh\nRUN dos2unix /usr/local/download.sh\n\n# Copy in the head.html specific to the PRODUCTION setup\nCOPY head-prod.html head.html\n"
}