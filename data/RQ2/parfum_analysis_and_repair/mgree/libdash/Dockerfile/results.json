{
  "startTime": 1674252207721,
  "endTime": 1674252208375,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 9,
        "columnEnd": 80
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 9,
        "columnEnd": 80
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 9,
        "columnEnd": 80
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 9,
        "columnEnd": 104
      }
    }
  ],
  "repairedDockerfile": "# start with a reasonable image. Debian 9 stretch is what's on the POSIX testing VM\nFROM ocaml/opam2:debian-stable\n\n# silence apt\n# TODO this still isn't silencing it :(\nENV DEBIAN_FRONTEND=noninteractive\n\n# system support for libdash; libgmp for zarith for lem\nRUN sudo apt-get install --no-install-recommends -y autoconf autotools-dev libtool pkg-config libffi-dev && rm -rf /var/lib/apt/lists/*;\n\nRUN opam update\n\nRUN opam switch 4.07\n\n# make sure we have ocamlfind and ocamlbuild\nRUN opam install ocamlfind ocamlbuild\n\n# set up FFI for libdash; num library for lem; extunix for shell syscalls\nRUN opam pin add -n ctypes 0.11.5\nRUN opam install ctypes-foreign ctypes\n\nWORKDIR /home/opam\n\n# copy in repo files for libdash to the WORKDIR (should be /home/opam)\n# we do this as late as possible so we don't have to redo the slow stuff above\nADD --chown=opam:opam . libdash\n\n# build libdash, expose shared object\n#RUN cd libdash; ./autogen.sh && ./configure --prefix=/usr --libdir=/usr/lib/x86_64-linux-gnu\n#RUN cd libdash; make\n#RUN cd libdash; sudo make install\n# build ocaml bindings\n#RUN cd libdash/ocaml; opam config exec -- make && opam config exec -- make install\n\nRUN (cd libdash; eval $(opam env); opam install -v -t .)\n\n# system test\nRUN cd libdash/test; opam config exec -- make && opam config exec make test\n\nENTRYPOINT [ \"opam\", \"exec\", \"--\" ]\nCMD [ \"bash\" ]\n"
}