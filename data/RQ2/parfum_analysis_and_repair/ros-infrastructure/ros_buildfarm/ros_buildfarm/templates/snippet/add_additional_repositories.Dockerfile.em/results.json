{
  "startTime": 1674254589299,
  "endTime": 1674254590305,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 41,
        "columnEnd": 82
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 41,
        "columnEnd": 82
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "@[if os_name == 'ubuntu']@\n@{\nfrom itertools import product\n}@\n@[  if arch in ['amd64', 'i386']]@\n@{\narchive_commands = []\nold_releases_commands = []\nfor distribution, archive_type in product((os_code_name, os_code_name + '-updates', os_code_name + '-security'), ('deb', 'deb-src')):\n    archive_entry = '%s http://archive.ubuntu.com/ubuntu/ %s multiverse' % (archive_type, distribution)\n    archive_pattern = '%s http://archive\\.ubuntu\\.com/ubuntu/? %s ([-a-z]+ )*multiverse( [-a-z])*' % (archive_type, distribution)\n    old_releases_entry = '%s http://old-releases.ubuntu.com/ubuntu/ %s multiverse' % (archive_type, distribution)\n    old_releases_pattern = '%s http://old-releases\\.ubuntu\\.com/ubuntu/? %s ([-a-z]+ )*multiverse( [-a-z]+)*' % (archive_type, distribution)\n    archive_commands.append('(grep -q -E -x -e \"%s\" /etc/apt/sources.list || echo \"%s\" >> /etc/apt/sources.list)' % (archive_pattern, archive_entry))\n    old_releases_commands.append('(grep -q -E -x -e \"%s\" /etc/apt/sources.list || echo \"%s\" >> /etc/apt/sources.list)' % (old_releases_pattern, old_releases_entry))\n}@\nRUN grep -q -F -e \"deb http://old-releases.ubuntu.com\" /etc/apt/sources.list && (@(' && '.join(old_releases_commands))) || (@(' && '.join(archive_commands)))\n@[  elif arch in ['armhf', 'armv8']]@\n@{\ncommands = []\nfor distribution, archive_type in product((os_code_name, os_code_name + '-updates', os_code_name + '-security'), ('deb', 'deb-src')):\n    entry = '%s http://ports.ubuntu.com/ %s multiverse' % (archive_type, distribution)\n    pattern = '%s http://ports\\.ubuntu\\.com/? %s ([-a-z]+ )*multiverse( [-a-z])*' % (archive_type, distribution)\n    commands.append('(grep -q -E -x -e \"%s\" /etc/apt/sources.list || echo \"%s\" >> /etc/apt/sources.list)' % (pattern, entry))\n}@\nRUN @(' && '.join(commands))\n@[  end if]@\n@[else if os_name == 'debian']@\n# Add contrib and non-free to debian images\n# Using httpredir here to match mirror used in osrf image\n# (https://github.com/osrf/multiarch-docker-image-generation/blob/d251b9a/build-image.sh#L46)\n@{\ncommands = []\nfor component in ('contrib', 'non-free'):\n    entry = 'deb http://httpredir.debian.org/debian %s %s' % (os_code_name, component)\n    pattern = 'deb http://httpredir\\.debian\\.org/debian/? %s ([-a-z] )*%s( [-a-z])*' % (os_code_name, component)\n    commands.append('(grep -q -E -x -e \"%s\" /etc/apt/sources.list || echo \"%s\" >> /etc/apt/sources.list)' % (pattern, entry))\n}@\nRUN @(' && '.join(commands))\n# Make sure to install apt-transport-https since some CloudFront mirrors are currently being redirected to https\nRUN for i in 1 2 3; do apt-get update && apt-get install --no-install-recommends -q -y apt-transport-https && apt-get clean && break || if [ $i -lt 3 ]; then sleep 5; else false; fi; done && rm -rf /var/lib/apt/lists/*;\n# Hit cloudfront mirror because of corrupted packages on fastly mirrors (https://github.com/ros-infrastructure/ros_buildfarm/issues/455)\n# You can remove this line to target the default mirror or replace this to use the mirror of your preference\nRUN sed -i 's/httpredir\\.debian\\.org/cloudfront.debian.net/' /etc/apt/sources.list\n@[end if]@\n"
}