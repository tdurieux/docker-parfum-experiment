{
  "startTime": 1674247910186,
  "endTime": 1674247910656,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 83,
        "lineEnd": 83,
        "columnStart": 4,
        "columnEnd": 170
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 30
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# generated from @template_name\n\n@(TEMPLATE(\n    'snippet/from_base_image.Dockerfile.em',\n    os_name=os_name,\n    os_code_name=os_code_name,\n    arch=arch,\n))@\n\nVOLUME [\"/var/cache/apt/archives\"]\n\nENV DEBIAN_FRONTEND noninteractive\n\n@(TEMPLATE(\n    'snippet/old_release_set.Dockerfile.em',\n    os_name=os_name,\n    os_code_name=os_code_name,\n))@\n\n@(TEMPLATE(\n    'snippet/setup_locale.Dockerfile.em',\n    timezone=timezone,\n))@\n\nRUN useradd -u @uid -l -m buildfarm\n\n@(TEMPLATE(\n    'snippet/set_environment_variables.Dockerfile.em',\n    environment_variables=environment_variables,\n))@\n\n@(TEMPLATE(\n    'snippet/add_distribution_repositories.Dockerfile.em',\n    distribution_repository_keys=distribution_repository_keys,\n    distribution_repository_urls=distribution_repository_urls,\n    os_name=os_name,\n    os_code_name=os_code_name,\n    add_source=False,\n))@\n\n@(TEMPLATE(\n    'snippet/add_additional_repositories.Dockerfile.em',\n    os_name=os_name,\n    os_code_name=os_code_name,\n    arch=arch,\n))@\n\n@(TEMPLATE(\n    'snippet/add_wrapper_scripts.Dockerfile.em',\n    wrapper_scripts=wrapper_scripts,\n))@\n\n# automatic invalidation once every day\nRUN echo \"@today_str\"\n\n@(TEMPLATE(\n    'snippet/install_python3.Dockerfile.em',\n    os_name=os_name,\n    os_code_name=os_code_name,\n))@\n\n@[if build_tool == 'colcon']@\nRUN python3 -u /tmp/wrapper_scripts/apt.py update-install-clean -q -y python3-pip\n@# colcon-core.package_identification.python needs at least version 30.3.0\nRUN pip3 install --no-cache-dir -U setuptools\n@[end if]@\n\n@(TEMPLATE(\n    'snippet/install_dependencies.Dockerfile.em',\n    dependencies=dependencies,\n    dependency_versions=dependency_versions,\n))@\n\n@(TEMPLATE(\n    'snippet/install_dependencies_from_file.Dockerfile.em',\n    install_lists=install_lists,\n))@\n\n@[if os_name == 'ubuntu' and os_code_name[0] == 't']@\n# Doxygen version 1.8.6 seems to generate excessive tagfiles when cross referencing,\n# overriding with older package (1.7.6) from Precise\nRUN python3 -u /tmp/wrapper_scripts/apt.py update-install-clean -q -y wget\nRUN rm /usr/bin/doxygen\nRUN wget --no-verbose https://us.archive.ubuntu.com/ubuntu/pool/main/d/doxygen/doxygen_1.7.6.1-2ubuntu1_amd64.deb --output-document=/tmp/doxygen_1.7.6.1-2ubuntu1_amd64.deb\nRUN dpkg -i /tmp/doxygen_1.7.6.1-2ubuntu1_amd64.deb\nRUN doxygen --version\n@[end if]@\n\nUSER buildfarm\nENTRYPOINT [\"sh\", \"-c\"]\n@{\n# empy fails using rosdoc_config_files in a list comprehension\npkg_tuples = []\nfor pkg_path, pkg in ordered_pkg_tuples:\n    pkg_tuples.append('%s:%s:%s' % (pkg.name, pkg_path, rosdoc_config_files.get(pkg.name, '')))\ncmd = 'PYTHONPATH=/tmp/ros_buildfarm:$PYTHONPATH python3 -u' + \\\n    ' /tmp/ros_buildfarm/scripts/doc/build_doc.py' + \\\n    ' --rosdistro-name ' + rosdistro_name + \\\n    ' --os-code-name ' + os_code_name + \\\n    ' --arch ' + arch + \\\n    ' --build-tool ' + build_tool + \\\n    ' --workspace-root /tmp/ws' + \\\n    ' --rosdoc-lite-dir /tmp/rosdoc_lite' + \\\n    ' --catkin-sphinx-dir /tmp/catkin-sphinx' + \\\n    ' --rosdoc-index /tmp/rosdoc_index' + \\\n    (' --canonical-base-url ' + canonical_base_url if canonical_base_url else '') + \\\n    ' --output-dir /tmp/generated_documentation' + \\\n    ' ' + ' '.join(pkg_tuples)\n}@\nCMD [\"@cmd\"]\n"
}