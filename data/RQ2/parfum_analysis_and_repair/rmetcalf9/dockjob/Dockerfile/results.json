{
  "startTime": 1674248848278,
  "endTime": 1674248849732,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 46
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nginx:1.15.12-alpine\n\nMAINTAINER Robert Metcalf\n\n##https://vladikk.com/2013/09/12/serving-flask-with-nginx-on-ubuntu/\n\nENV APP_DIR /app\n##APIAPP_FRONTEND is also configured in nginx conf\nENV APIAPP_FRONTEND /webfrontend\n\n\nENV APIAPP_APIURL http://localhost:80/dockjobapi\nENV APIAPP_APIDOCSURL http://localhost:80/apidocs\nENV APIAPP_FRONTENDURL http://localhost:80/frontend\nENV APIAPP_APIACCESSSECURITY '[]'\nENV APIAPP_USERFORJOBS=dockjobuser\nENV APIAPP_GROUPFORJOBS=dockjobgroup\n\n# APIAPP_MODE is not definable here as it is hardcoded to DOCKER in the shell script\n# APIAPP_VERSION is not definable here as it is read from the VERSION file inside the image\n\nEXPOSE 80\n\n\nRUN apk add --no-cache bash python3 curl python3-dev build-base linux-headers pcre-dev libffi-dev && \\\n    python3 -m ensurepip && \\\n    rm -r /usr/lib/python*/ensurepip && \\\n    pip3 install --no-cache-dir --upgrade pip setuptools && \\\n    rm -r /root/.cache && \\\n    pip3 install --no-cache-dir --upgrade pip && \\\n    mkdir ${APP_DIR} && \\\n    mkdir ${APIAPP_FRONTEND} && \\\n    addgroup -S ${APIAPP_GROUPFORJOBS} && \\\n    adduser -S -G ${APIAPP_GROUPFORJOBS} ${APIAPP_USERFORJOBS} && \\\n    mkdir /var/log/uwsgi && \\\n    pip3 install --no-cache-dir uwsgi && \\\n    pip3 install --no-cache-dir cffi\n\nCOPY ./app/src ${APP_DIR}\nRUN pip3 install --no-cache-dir -r ${APP_DIR}/requirments.txt\n\nCOPY ./webfrontend/dist/pwa ${APIAPP_FRONTEND}\nCOPY ./VERSION /VERSION\nCOPY ./app/run_app_docker.sh /run_app_docker.sh\nCOPY ./nginx_default.conf /etc/nginx/conf.d/default.conf\nCOPY ./uwsgi.ini /uwsgi.ini\n\nSTOPSIGNAL SIGTERM\n\n\nCMD [\"/run_app_docker.sh\"]\n\n# Regular checks. Docker won't send traffic to container until it is healthy\n#  and when it first starts it won't check the health until the interval so I can't have\n#  a higher value without increasing the startup time\nHEALTHCHECK --interval=30s --timeout=3s \\\n  CMD curl -f http://127.0.0.1:80/frontend/index.html?healthcheck=true || exit 1\n\n##docker run --name dockjob -p 80:80 -d metcarob/dockjob:latest\n"
}