{
  "startTime": 1674250238743,
  "endTime": 1674250240377,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 111,
        "lineEnd": 111,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 122,
        "lineEnd": 122,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 137,
        "lineEnd": 137,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 89,
        "lineEnd": 89,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 100,
        "lineEnd": 100,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 115,
        "lineEnd": 115,
        "columnStart": 4,
        "columnEnd": 70
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 126,
        "lineEnd": 126,
        "columnStart": 4,
        "columnEnd": 110
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 27,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 60
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 96,
        "lineEnd": 96,
        "columnStart": 4,
        "columnEnd": 26
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM centos:7\nMAINTAINER John Halley Gotway <johnhg@ucar.edu>\n\n#\n# Define the compilers.\n#\nENV CC  /usr/bin/gcc\nENV CXX /usr/bin/g++\nENV FC  /usr/bin/gfortran\nENV F77 /usr/bin/gfortran\n\n#\n# Define package URL's.\n#\nENV HDF4_URL       http://www.hdfgroup.org/ftp/HDF/releases/HDF4.2r3/src/HDF4.2r3.tar.gz\nENV HDFEOS_URL     https://dtcenter.ucar.edu/dfiles/code/METplus/MET/docker_data/HDF-EOS2.16v1.00.tar.Z\n\nENV NETCDF4C_URL   https://github.com/Unidata/netcdf-c/archive/v4.4.1.1.zip\nENV NETCDF4CXX_URL https://github.com/Unidata/netcdf-cxx4/archive/v4.3.0.tar.gz\n\nENV BUFRLIB_URL    https://dtcenter.ucar.edu/dfiles/code/METplus/MET/docker_data/BUFRLIB_v10-2-3.tar\nENV GSFONT_URL     https://dtcenter.ucar.edu/dfiles/code/METplus/MET/docker_data/ghostscript-fonts-std-8.11.tar.gz\n\n#\n# Install the required packages.\n#\nRUN yum -y update \\\n && yum -y install file gcc gcc-gfortran gcc-c++ glibc.i686 libgcc.i686 \\\n                   libpng-devel jasper jasper-devel zlib zlib-devel \\\n                   cairo-devel freetype-devel epel-release \\\n                   hostname m4 make tar tcsh ksh time wget which \\\n                   flex flex-devel bison bison-devel unzip \\\n && yum -y install git g2clib-devel hdf5-devel.x86_64 gsl-devel \\\n && yum -y install gv ncview wgrib wgrib2 ImageMagick ps2pdf \\\n && yum -y install python3 python3-devel python3-pip \\\n && pip3 install --no-cache-dir --upgrade pip \\\n && python3 -m pip install numpy xarray netCDF4 && rm -rf /var/cache/yum\n\n#\n# Set the working directory.\n#\nWORKDIR /met\n\n#\n# Setup the environment for interactive bash/csh container shells.\n#\nRUN echo export MET_BASE=/usr/local/share/met >> /etc/bashrc \\\n && echo setenv MET_BASE /usr/local/share/met >> /etc/csh.cshrc \\\n && echo export MET_FONT_DIR=/usr/local/share/met/fonts >> /etc/bashrc \\\n && echo setenv MET_FONT_DIR /usr/local/share/met/fonts >> /etc/csh.cshrc \\\n && echo export RSCRIPTS_BASE=/usr/local/share/met/Rscripts >> /etc/bashrc \\\n && echo setenv RSCRIPTS_BASE /usr/local/share/met/Rscripts >> /etc/csh.cshrc \\\n && echo export LD_LIBRARY_PATH=/usr/local/lib >> /etc/bashrc \\\n && echo setenv LD_LIBRARY_PATH /usr/local/lib >> /etc/csh.cshrc\nENV LD_LIBRARY_PATH /usr/local/lib\nENV MET_FONT_DIR /usr/local/share/met/fonts\n\n#\n# Download and install BUFRLIB.\n#\nRUN mkdir -p /met/logs \\\n && mkdir -p /met/external_libs/BUFRLIB \\\n && cd /met/external_libs/BUFRLIB \\\n && echo \"Downloading BUFRLIB from ${BUFRLIB_URL}\" \\\n && curl -f -SL ${BUFRLIB_URL} | tar xC /met/external_libs/BUFRLIB \\\n && cat preproc.sh | sed 's/cpp /cpp -traditional-cpp /g' > preproc_patch.sh \\\n && chmod +x preproc_patch.sh \\\n && LOG_FILE=/met/logs/BUFRLIB_build.log \\\n && echo \"Compiling BUFRLIB and writing log file ${LOG_FILE}\" \\\n && ./preproc_patch.sh *.F > ${LOG_FILE} \\\n && ${CC} -c -DUNDERSCORE *.c >> ${LOG_FILE} \\\n && ${FC} -c -fno-second-underscore *.f >> ${LOG_FILE} \\\n && ar crv libbufr.a *.o >> ${LOG_FILE} \\\n && rm -f /usr/local/lib/libbufr.a \\\n && cp  *.a /usr/local/lib \\\n && cd /met/external_libs \\\n && rm -rf BUFRLIB\n\n#\n# Download and install NetCDF4 (C and C++).\n#\nRUN mkdir -p /met/external_libs/netcdf \\\n && cd /met/external_libs/netcdf \\\n && echo \"Downloading netcdf-c-4.4.1.1 from ${NETCDF4C_URL}\" \\\n && wget ${NETCDF4C_URL} \\\n && unzip v4.4.1.1.zip \\\n && cd netcdf-c-4.4.1.1 \\\n && LOG_FILE=/met/logs/netcdf-c-4.4.1.1_configure.log \\\n && echo \"Configuring netcdf-c-4.4.1.1 and writing log file ${LOG_FILE}\" \\\n && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" > ${LOG_FILE} \\\n && LOG_FILE=/met/logs/netcdf-c-4.4.1.1_make_install.log \\\n && echo \"Compiling netcdf-c-4.4.1.1 and writing log file ${LOG_FILE}\" \\\n && make install > ${LOG_FILE} \\\n && echo \"Downloading  from ${NETCDF4CXX_URL}\" \\\n && cd /met/external_libs/netcdf \\\n && wget ${NETCDF4CXX_URL} \\\n && tar -xzf v4.3.0.tar.gz \\\n && cd netcdf-cxx4-4.3.0 \\\n && LOG_FILE=/met/logs/netcdf-cxx4-4.3.0_configure.log \\\n && echo \"Configuring netcdf-cxx4-4.3.0 and writing log file ${LOG_FILE}\" \\\n && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" > ${LOG_FILE} \\\n && LOG_FILE=/met/logs/netcdf-cxx4-4.3.0_make_install.log \\\n && echo \"Compiling netcdf-cxx4-4.3.0 and writing log file ${LOG_FILE}\" \\\n && make install > ${LOG_FILE} \\\n && cd /met/external_libs \\\n && rm -rf netcdf && rm v4.3.0.tar.gz\n\n#\n# Download and install HDF4 and HDFEOS.\n#\nRUN echo \"Downloading HDF4.2r3 from ${HDF4_URL}\" \\\n && curl -f -SL ${HDF4_URL} | tar zxC /met/external_libs \\\n && cd /met/external_libs/HDF4.2r3 \\\n && LOG_FILE=/met/logs/HDF4.2r3_configure.log \\\n && echo \"Configuring HDF4.2r3 and writing log file ${LOG_FILE}\" \\\n && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/local/hdf --disable-netcdf > ${LOG_FILE} \\\n && cat mfhdf/hdiff/Makefile | sed 's/LIBS = -ljpeg -lz/LIBS = -ljpeg -lz -lm/g' > Makefile_NEW \\\n && mv -f Makefile_NEW mfhdf/hdiff/Makefile \\\n && LOG_FILE=/met/logs/HDF4.2r3_make_install.log \\\n && echo \"Compiling HDF4.2r3 and writing log file ${LOG_FILE}\" \\\n && make install > ${LOG_FILE} \\\n && echo \"Downloading hdfeos from ${HDFEOS_URL}\" \\\n && curl -f -SL ${HDFEOS_URL} | tar zxC /met/external_libs \\\n && cd /met/external_libs/hdfeos \\\n && LOG_FILE=/met/logs/hdfeos_configure.log \\\n && echo \"Configuring hdfeos and writing log file ${LOG_FILE}\" \\\n && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/local/hdfeos --with-hdf4=/usr/local/hdf CC=/usr/local/hdf/bin/h4cc > ${LOG_FILE} \\\n && LOG_FILE=/met/logs/hdfeos_make_install.log \\\n && echo \"Compiling hdfeos and writing log file ${LOG_FILE}\" \\\n && make install > ${LOG_FILE} \\\n && mkdir /usr/local/hdfeos/include \\\n && cp include/*.h /usr/local/hdfeos/include/. \\\n && cd /met/external_libs \\\n && rm -rf HDF4.2r3 hdfeos\n\nRUN echo \"Downloading GhostScript fonts from ${GSFONT_URL} into /usr/local/share/met\" \\\n && mkdir -p /usr/local/share/met \\\n && curl -f -SL ${GSFONT_URL} | tar zxC /usr/local/share/met\n"
}