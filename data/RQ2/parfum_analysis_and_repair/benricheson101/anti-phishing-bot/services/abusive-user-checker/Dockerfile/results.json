{
  "startTime": 1674255077454,
  "endTime": 1674255078717,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 45
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# FROM golang:alpine AS builder\n\n# RUN apk add protoc\n\nFROM golang:bullseye AS builder\n\nRUN apt-get update -y && apt-get install --no-install-recommends -y protobuf-compiler curl && rm -rf /var/lib/apt/lists/*;\nRUN go install github.com/golang/protobuf/protoc-gen-go@latest\nRUN go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@latest\nRUN curl -fsSL -o /usr/local/bin/dbmate https://github.com/amacneil/dbmate/releases/latest/download/dbmate-linux-amd64 \\\n  && chmod +x /usr/local/bin/dbmate\n\nWORKDIR /usr/src/app\n\nCOPY ./services/abusive-user-checker/. .\nCOPY ./protos ./protos\n\nRUN mkdir -p pkg/protos\nRUN protoc \\\n  -I=./protos \\\n  --go_out=\".\" \\\n  --go-grpc_out=\".\" \\\n  ./protos/*.proto\n\nRUN go build -o abusive-user-checker cmd/server/main.go\n\nFROM debian:stable-slim AS runtime\nCOPY --from=builder /usr/src/app/abusive-user-checker /bin\n# this is such a hack -- idk how i should do db migrations\nCOPY --from=builder /usr/local/bin/dbmate /usr/local/bin/dbmate\nCOPY --from=builder /usr/src/app/db /db\nENTRYPOINT [ \"/bin/abusive-user-checker\" ]\n"
}