{
  "startTime": 1674252601865,
  "endTime": 1674252602605,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 16
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ghcr.io/peon-dev/php:main as composer\n\nENV APP_ENV=\"prod\"\nENV APP_DEBUG=0\n\nUSER root\n\n# Unload xdebug extension by deleting config\nRUN rm /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini\n\nRUN mkdir -p /peon/var/cache && chown -R peon /peon\n\nUSER peon\nWORKDIR /peon\n\n# Intentionally split into multiple steps to leverage docker layer caching\nCOPY --chown=peon composer.json composer.lock symfony.lock ./\n\nRUN composer install --no-dev --no-interaction --no-scripts\n\n\n\nFROM node:14 as js-builder\n\nWORKDIR /build\n\n# We need /vendor here\nCOPY --from=composer /peon .\n\n# Install npm packages\nCOPY package.json yarn.lock webpack.config.js ./\nRUN yarn install && yarn cache clean;\n\n# Production yarn build\nCOPY ./assets ./assets\n\nRUN yarn run build\n\n\n\nFROM composer as prod\n\nENV PHP_OPCACHE_VALIDATE_TIMESTAMPS=0\n\nCOPY --chown=peon .docker/nginx-unit /docker-entrypoint.d/\n\n# Copy js build\nCOPY --chown=peon --from=js-builder /build .\n\n# Copy application source code\nCOPY --chown=peon . .\n\n# Need to run again to trigger scripts with application code present\nRUN composer install --no-dev --no-interaction --classmap-authoritative\n\nCOPY --chown=peon .docker/opcache-preload.ini /usr/local/etc/php/conf.d/98-opcache-preload.ini\n"
}