{
  "startTime": 1674254842693,
  "endTime": 1674254843544,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 34
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# We use the oyente image as a base because it has a lot of dependencies and it also comes with nodejs and npm already.\n# We then simply install utilities, tools, testrpc (ganache-cli) and truffle on top.\n\n# oyente is an static analysis tool for smart contracts\n# evaluate a local solidity contract: python oyente.py -s <contract filename>\n# evaluate a local solidity with option -a to verify assertions in the contract: python oyente.py -a -s <contract filename>\n# evaluate a local evm contract: python oyente.py -s <contract filename> -b\n# evaluate a remote contract python oyente.py -ru https://gist.githubusercontent.com/loiluu/d0eb34d473e421df12b38c12a7423a61/raw/2415b3fb782f5d286777e0bcebc57812ce3786da/puzzle.sol\nFROM luongnguyen/oyente\n\n# Node.js version management\nRUN npm install -g n && npm cache clean --force;\nRUN n stable\n\n# Install solcjs\nRUN npm install -g solc && npm cache clean --force;\n\n# Testrpc, now ganache-cli\nRUN npm install -g ganache-cli && npm cache clean --force;\n\nRUN npm install -g truffle && npm cache clean --force;\n# Hardhat is used as local dependency, e.g in your local project run npm install --save-dev harthat\n\n# @0x/abi-gen enables the generation of TypeScript or Python contract wrappers from ABI files\nRUN npm install -g @0x/abi-gen && npm cache clean --force;\n\n# SmartCheck is an extensible static analysis tool for discovering vulnerabilities and other code issues in Ethereum smart contracts written in the Solidity programming language.\n# e.g. smartcheck -p .\nRUN npm install -g @smartdec/smartcheck && npm cache clean --force;\n\n# solgraph generating DOT graph that visualizes function control flow of a Solidity contract\n# e.g. solgraph MyContract.sol > MyContract.dot\nRUN npm install -g solgraph --unsafe-perm=true --allow-root && npm cache clean --force;\n\n# solhint is a solidity linter\nRUN npm install -g solhint && npm cache clean --force;\n\n# solidity-docgen is used to generate documentation from solidity files\nRUN npm install -g solidity-docgen && npm cache clean --force;\n"
}