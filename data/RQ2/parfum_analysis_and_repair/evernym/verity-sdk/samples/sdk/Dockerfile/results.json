{
  "startTime": 1674248096527,
  "endTime": 1674248097808,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 8,
        "columnEnd": 134
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 8,
        "columnEnd": 68
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 8,
        "columnEnd": 131
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 80
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 11
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 8,
        "columnEnd": 63
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 8,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 8,
        "columnEnd": 41
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 8,
        "columnEnd": 40
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:18.04\n\nENV VERITY_SERVER https://vas.pps.evernym.com\nENV LANG=C.UTF-8\n\nRUN echo LANG=C.UTF-8 > /etc/default/locale\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y \\\n        apt-transport-https \\\n        build-essential \\\n        curl \\\n        default-jdk \\\n        iproute2 \\\n        jq \\\n        maven \\\n        python3 \\\n        python3-pip \\\n        software-properties-common \\\n        unzip \\\n        vim && \\\n        # Install libvdrtools\n        curl -f https://gitlab.com/evernym/verity/vdr-tools/-/package_files/27311920/download --output libvdrtools_0.8.4-bionic_amd64.deb && \\\n        apt-get install --no-install-recommends -y ./libvdrtools_0.8.4-bionic_amd64.deb && \\\n        # Install NodeJS\n        curl -f -s https://deb.nodesource.com/gpgkey/nodesource.gpg.key | apt-key add - && \\\n        echo \"deb https://deb.nodesource.com/node_12.x bionic main\\ndeb-src https://deb.nodesource.com/node_12.x bionic main\" > /etc/apt/sources.list.d/nodesource.list && \\\n        apt-get update && \\\n        apt-get install --no-install-recommends -y nodejs && \\\n        # Install DotNet and Mono\n        curl -f -sL https://packages.microsoft.com/config/ubuntu/18.04/packages-microsoft-prod.deb -o /tmp/packages-microsoft-prod.deb && \\\n        dpkg -i /tmp/packages-microsoft-prod.deb && \\\n        apt-get update && \\\n        apt-get install --no-install-recommends -y dotnet-sdk-3.1 && \\\n        apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF && \\\n        add-apt-repository \"deb https://download.mono-project.com/repo/ubuntu stable-bionic main\" && \\\n        apt-get update && \\\n        apt-get install --no-install-recommends -y mono-complete && \\\n        rm -rf /var/lib/apt/lists/*\n\n\n# Install Ngrok\nRUN curl -f -O -s https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-amd64.zip && \\\n    unzip ngrok-stable-linux-amd64.zip && \\\n    cp ngrok /usr/local/bin/.\n\n\n# Copy SDKs into the container\nCOPY /samples/ /samples\n\n\n# Install Python3 packages\nWORKDIR /samples/sdk/python-example-app\nRUN pip3 install --no-cache-dir -r requirements.txt\n\n\n# Install Java packages\nENV JAVA_HOME /usr/lib/jvm/java-1.11.0-openjdk-amd64/\nWORKDIR /samples/sdk/java-example-app\nRUN mvn test\nRUN mvn exec:help # pre-download plug-in dependencies\n\n\n# Install npm packages\nWORKDIR /samples/sdk/nodejs-example-app\nRUN npm install 2>/dev/null && npm cache clean --force;\nRUN npm rebuild 2>/dev/null\nWORKDIR /samples/sdk/oob-with-request-attach\nRUN npm install 2>/dev/null && npm cache clean --force;\nRUN npm rebuild 2>/dev/null\n\n\n# Install .NET packages\nWORKDIR /samples/sdk/dotnet-example-app\nRUN dotnet build -c Release\n\n\n# Install static HTTP server to serve generated QR code\nRUN npm install -g http-server && npm cache clean --force;\nWORKDIR /samples/sdk\nEXPOSE 4000\n\n\n# Start Ngrok tunnel for webhook URL in docker entrypoint\nENTRYPOINT [\"/samples/sdk/entrypoint.sh\"]\n\n"
}