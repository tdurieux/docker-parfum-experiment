diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/evernym/verity-sdk/samples/sdk/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/evernym/verity-sdk/samples/sdk/Dockerfile/repaired.Dockerfile
index 5297849..0faa1a0 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/evernym/verity-sdk/samples/sdk/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/evernym/verity-sdk/samples/sdk/Dockerfile/repaired.Dockerfile
@@ -6,7 +6,7 @@ ENV LANG=C.UTF-8
 RUN echo LANG=C.UTF-8 > /etc/default/locale
 
 RUN apt-get update && \
-    apt-get install -y \
+    apt-get install --no-install-recommends -y \
         apt-transport-https \
         build-essential \
         curl \
@@ -20,27 +20,27 @@ RUN apt-get update && \
         unzip \
         vim && \
         # Install libvdrtools
-        curl https://gitlab.com/evernym/verity/vdr-tools/-/package_files/27311920/download --output libvdrtools_0.8.4-bionic_amd64.deb && \
-        apt-get install -y ./libvdrtools_0.8.4-bionic_amd64.deb && \
+        curl -f https://gitlab.com/evernym/verity/vdr-tools/-/package_files/27311920/download --output libvdrtools_0.8.4-bionic_amd64.deb && \
+        apt-get install --no-install-recommends -y ./libvdrtools_0.8.4-bionic_amd64.deb && \
         # Install NodeJS
-        curl -s https://deb.nodesource.com/gpgkey/nodesource.gpg.key | apt-key add - && \
+        curl -f -s https://deb.nodesource.com/gpgkey/nodesource.gpg.key | apt-key add - && \
         echo "deb https://deb.nodesource.com/node_12.x bionic main\ndeb-src https://deb.nodesource.com/node_12.x bionic main" > /etc/apt/sources.list.d/nodesource.list && \
         apt-get update && \
-        apt-get install -y nodejs && \
+        apt-get install --no-install-recommends -y nodejs && \
         # Install DotNet and Mono
-        curl -sL https://packages.microsoft.com/config/ubuntu/18.04/packages-microsoft-prod.deb -o /tmp/packages-microsoft-prod.deb && \
+        curl -f -sL https://packages.microsoft.com/config/ubuntu/18.04/packages-microsoft-prod.deb -o /tmp/packages-microsoft-prod.deb && \
         dpkg -i /tmp/packages-microsoft-prod.deb && \
         apt-get update && \
-        apt-get install -y dotnet-sdk-3.1 && \
+        apt-get install --no-install-recommends -y dotnet-sdk-3.1 && \
         apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF && \
         add-apt-repository "deb https://download.mono-project.com/repo/ubuntu stable-bionic main" && \
         apt-get update && \
-        apt-get install -y mono-complete && \
+        apt-get install --no-install-recommends -y mono-complete && \
         rm -rf /var/lib/apt/lists/*
 
 
 # Install Ngrok
-RUN curl -O -s https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-amd64.zip && \
+RUN curl -f -O -s https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-amd64.zip && \
     unzip ngrok-stable-linux-amd64.zip && \
     cp ngrok /usr/local/bin/.
 
@@ -51,7 +51,7 @@ COPY /samples/ /samples
 
 # Install Python3 packages
 WORKDIR /samples/sdk/python-example-app
-RUN pip3 install -r requirements.txt
+RUN pip3 install --no-cache-dir -r requirements.txt
 
 
 # Install Java packages
@@ -63,10 +63,10 @@ RUN mvn exec:help # pre-download plug-in dependencies
 
 # Install npm packages
 WORKDIR /samples/sdk/nodejs-example-app
-RUN npm install 2>/dev/null
+RUN npm install 2>/dev/null && npm cache clean --force;
 RUN npm rebuild 2>/dev/null
 WORKDIR /samples/sdk/oob-with-request-attach
-RUN npm install 2>/dev/null
+RUN npm install 2>/dev/null && npm cache clean --force;
 RUN npm rebuild 2>/dev/null
 
 
@@ -76,7 +76,7 @@ RUN dotnet build -c Release
 
 
 # Install static HTTP server to serve generated QR code
-RUN npm install -g http-server
+RUN npm install -g http-server && npm cache clean --force;
 WORKDIR /samples/sdk
 EXPOSE 4000