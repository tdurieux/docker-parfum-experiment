{
  "startTime": 1674248574667,
  "endTime": 1674248575375,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 22,
        "columnEnd": 79
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 22,
        "columnEnd": 79
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 90
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 22,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 90
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 22,
        "columnEnd": 79
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 90
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 22,
        "columnEnd": 50
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 114
      }
    }
  ],
  "repairedDockerfile": "FROM occlum/occlum:OCCLUM_VERSION-ubuntu18.04\n\nLABEL maintainer=\"Shirong Hao <shirong@linux.alibaba.com>\"\n\nENV APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=1\nENV DEBIAN_FRONTEND noninteractive\n\nRUN apt-get update && apt-get install -y --no-install-recommends libseccomp-dev libprotoc-dev binutils-dev && rm -rf /var/lib/apt/lists/*;\n\nRUN wget https://github.com/protobuf-c/protobuf-c/archive/v1.3.1.tar.gz &&\\\n    tar -zxvf v1.3.1.tar.gz && cd protobuf-c-1.3.1 &&  ./autogen.sh && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make && make install && \\\n    apt-get remove -y libprotobuf-dev && apt -y autoremove && rm v1.3.1.tar.gz\n\n# install go\nRUN wget https://dl.google.com/go/go1.14.2.linux-amd64.tar.gz && \\\n    tar -zxvf go1.14.2.linux-amd64.tar.gz -C /usr/lib && rm go1.14.2.linux-amd64.tar.gz\n\nENV GOROOT          /usr/lib/go\nENV GOPATH          /root/gopath\nENV PATH            $GOROOT/bin:$PATH:$GOPATH/bin\nENV GOPROXY         \"https://mirrors.aliyun.com/goproxy,direct\"\nENV GO111MODULE     on\n\nWORKDIR /root\n\n# copy binary and configure files\nCOPY Dockerfile-occlum                                      /root\nCOPY Dockerfile-skeleton                                    /root\nCOPY hello_world.c                                          /root\n\n# install docker-ce\nRUN apt-get install --no-install-recommends -y apt-transport-https ca-certificates curl software-properties-common && \\\n    curl -fsSL https://mirrors.aliyun.com/docker-ce/linux/ubuntu/gpg | apt-key add - && \\\n    add-apt-repository 'deb [arch=amd64] https://mirrors.ustc.edu.cn/docker-ce/linux/ubuntu bionic stable' && \\\n    apt-get update && apt-get install --no-install-recommends -y docker-ce && rm -rf /var/lib/apt/lists/*;\n\n\n# configure docker\nRUN mkdir -p /etc/docker && \\\n    echo \"{\\n\\t\\\"runtimes\\\": {\\n\\t\\t\\\"rune\\\": {\\n\\t\\t\\t\\\"path\\\": \\\"/usr/local/bin/rune\\\",\\n\\t\\t\\t\\\"runtimeArgs\\\": []\\n\\t\\t}\\n\\t},\\n\\t\\\"storage-driver\\\": \\\"vfs\\\"\\n}\" >> /etc/docker/daemon.json\n"
}