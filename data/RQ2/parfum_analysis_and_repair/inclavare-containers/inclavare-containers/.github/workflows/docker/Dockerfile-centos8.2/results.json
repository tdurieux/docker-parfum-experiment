{
  "startTime": 1674254167347,
  "endTime": 1674254168347,
  "originalSmells": [
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 76
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 21,
        "columnEnd": 45
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 53
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM inclavarecontainers/test:crictl-bin-centos8.2 AS crictl-src\n\nFROM occlum/occlum:OCCLUM_VERSION-centos8.2\n\nLABEL maintainer=\"Shirong Hao <shirong@linux.alibaba.com>\"\n\nRUN yum install -y libseccomp-devel iptables openssl openssl-devel wget make && rm -rf /var/cache/yum\n\nRUN dnf --enablerepo=PowerTools install -y binutils-devel protobuf-devel protobuf-c-devel glibc-static\n\nWORKDIR /root\n\nRUN mkdir -p /usr/local/go                                  \\\n    /etc/containerd                                         \\\n    /etc/cni/net.d                                          \\\n    /opt/cni                                                \\\n    /root/samples                                           \\\n    /tmp/hello_world\n\n# copy binary and configure files\nCOPY --from=crictl-src /opt/cni                             /opt/cni\nCOPY --from=crictl-src /etc/containerd/config.toml          /etc/containerd\nCOPY --from=crictl-src /usr/local/bin                       /usr/local/bin\n\nCOPY 10-mynet.conf                                          /etc/cni/net.d\nCOPY 99-loopback.conf                                       /etc/cni/net.d\nCOPY crictl.yaml                                            /etc\nCOPY samples                                                /root/samples\nCOPY Dockerfile-occlum                                      /root\nCOPY Dockerfile-skeleton                                    /root\nCOPY hello_world.c                                          /root\n\n# install docker-ce\nRUN yum install -y yum-utils device-mapper-persistent-data lvm2 && \\\n    yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo && \\\n    yum makecache && yum -y install docker-ce && rm -rf /var/cache/yum\n\n# configure docker\nRUN mkdir -p /etc/docker && \\\n    echo -e \"{\\n\\t\\\"runtimes\\\": {\\n\\t\\t\\\"rune\\\": {\\n\\t\\t\\t\\\"path\\\": \\\"/usr/local/bin/rune\\\",\\n\\t\\t\\t\\\"runtimeArgs\\\": []\\n\\t\\t}\\n\\t}\\n}\" >> /etc/docker/daemon.json\n\n# install go\nRUN wget https://dl.google.com/go/go1.14.2.linux-amd64.tar.gz && \\\n    tar -zxvf go1.14.2.linux-amd64.tar.gz -C /usr/lib && rm go1.14.2.linux-amd64.tar.gz\n\nENV GOROOT          /usr/lib/go\nENV GOPATH          /root/gopath\nENV PATH            $GOROOT/bin:$PATH:$GOPATH/bin\nENV GOPROXY         \"https://mirrors.aliyun.com/goproxy,direct\"\nENV GO111MODULE     on\n"
}