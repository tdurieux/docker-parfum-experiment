{
  "startTime": 1674252883750,
  "endTime": 1674252885120,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 4,
        "columnEnd": 87
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 21,
        "columnEnd": 64
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 15,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 86
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 55,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 38
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM registry.cn-hangzhou.aliyuncs.com/alinux/aliyunlinux\n\nLABEL maintainer=\"Shirong Hao <shirong@linux.alibaba.com>\"\n\n# Install alinux-release-experimentals prior to others to work around\n# the issue \"Error: Package: glibc-2.17-323.1.al7.i686 (updates)\"\nRUN yum clean all && yum install -y alinux-release-experimentals && rm -rf /var/cache/yum\n\nENV PROTOBUF_VERSION 2.5.0\nENV PROTOBUF_C_VERSION 1.0.2\n\n# Use mirrors.aliyun.com instead of mirrors.cloud.aliyuncs.com to work\n# around unknown name or service error when retrieving key\nRUN rpm --import http://mirrors.aliyun.com/epel/RPM-GPG-KEY-EPEL-7\n\nRUN yum install -y \\\n    autoconf libtool rpm-build devtoolset-9-toolchain protobuf-c-$PROTOBUF_C_VERSION cmake3 \\\n    wget make openssl git clang yum-utils file which vim \\\n    libseccomp-devel openssl-devel binutils-devel protobuf-c-devel-$PROTOBUF_C_VERSION && rm -rf /var/cache/yum\n\nRUN echo \"source /opt/rh/devtoolset-9/enable\" > /root/.bashrc\n\nWORKDIR /root\n\nRUN mkdir /root/gopath\n\n# install golang\nRUN wget https://dl.google.com/go/go1.14.2.linux-amd64.tar.gz && \\\n    tar -zxvf go1.14.2.linux-amd64.tar.gz -C /usr/lib && \\\n    rm -f go1.14.2.linux-amd64.tar.gz\n\n# configure GOPATH and GOROOT\nENV GOROOT       /usr/lib/go\nENV GOPATH       /root/gopath\nENV PATH         $PATH:$GOROOT/bin:$GOPATH/bin\nENV GO111MODULE  on\n\n# install rust\nRUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --no-modify-path\nENV PATH         /root/.cargo/bin:$PATH\n\n# install docker\nRUN yum install -y iptables && \\\n    wget https://download.docker.com/linux/static/stable/x86_64/docker-19.03.8.tgz && \\\n    tar -zxvf docker-19.03.8.tgz && mv docker/* /usr/bin && rm -rf docker && rm -f docker-19.03.8.tgz && rm -rf /var/cache/yum\n\n# configure the rune runtime of docker\nRUN mkdir -p /etc/docker && \\\n    echo -e \"{\\n\\t\\\"runtimes\\\": {\\n\\t\\t\\\"rune\\\": {\\n\\t\\t\\t\\\"path\\\": \\\"/usr/local/bin/rune\\\",\\n\\t\\t\\t\\\"runtimeArgs\\\": []\\n\\t\\t}\\n\\t}\\n}\" >> /etc/docker/daemon.json\n\n# configure Alibaba Cloud TEE SDK yum repo\nRUN yum-config-manager --add-repo \\\n    https://enclave-cn-beijing.oss-cn-beijing.aliyuncs.com/repo/alinux/enclave-expr.repo\n\n# install Intel SGX SDK and DCAP\nRUN yum install --nogpgcheck -y \\\n    libsgx-uae-service libsgx-dcap-default-qpl \\\n    libsgx-dcap-quote-verify libsgx-dcap-ql && rm -rf /var/cache/yum\n\n# install Alibaba Cloud TEE SDK\nRUN yum install --nogpgcheck -y teesdk && rm -rf /var/cache/yum\n\nRUN echo \"source /opt/alibaba/teesdk/intel/sgxsdk/environment\" >> /root/.bashrc\nRUN ln -sf /usr/bin/cmake3 /usr/bin/cmake\n\n# install OPA go dependencies\nRUN go get github.com/open-policy-agent/opa@v0.30.2\nRUN curl -f -L -o opa https://openpolicyagent.org/downloads/v0.30.2/opa_linux_amd64_static\nRUN chmod 755 ./opa && mv opa /usr/local/bin/\n"
}