diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/inclavare-containers/inclavare-containers/tools/docker/Dockerfile-inclavare-dev-alinux2 b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/inclavare-containers/inclavare-containers/tools/docker/Dockerfile-inclavare-dev-alinux2/repaired.Dockerfile
index d29ee08..04dadf2 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/inclavare-containers/inclavare-containers/tools/docker/Dockerfile-inclavare-dev-alinux2
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/inclavare-containers/inclavare-containers/tools/docker/Dockerfile-inclavare-dev-alinux2/repaired.Dockerfile
@@ -4,7 +4,7 @@ LABEL maintainer="Shirong Hao <shirong@linux.alibaba.com>"
 
 # Install alinux-release-experimentals prior to others to work around
 # the issue "Error: Package: glibc-2.17-323.1.al7.i686 (updates)"
-RUN yum clean all && yum install -y alinux-release-experimentals
+RUN yum clean all && yum install -y alinux-release-experimentals && rm -rf /var/cache/yum
 
 ENV PROTOBUF_VERSION 2.5.0
 ENV PROTOBUF_C_VERSION 1.0.2
@@ -16,7 +16,7 @@ RUN rpm --import http://mirrors.aliyun.com/epel/RPM-GPG-KEY-EPEL-7
 RUN yum install -y \
     autoconf libtool rpm-build devtoolset-9-toolchain protobuf-c-$PROTOBUF_C_VERSION cmake3 \
     wget make openssl git clang yum-utils file which vim \
-    libseccomp-devel openssl-devel binutils-devel protobuf-c-devel-$PROTOBUF_C_VERSION
+    libseccomp-devel openssl-devel binutils-devel protobuf-c-devel-$PROTOBUF_C_VERSION && rm -rf /var/cache/yum
 
 RUN echo "source /opt/rh/devtoolset-9/enable" > /root/.bashrc
 
@@ -42,7 +42,7 @@ ENV PATH         /root/.cargo/bin:$PATH
 # install docker
 RUN yum install -y iptables && \
     wget https://download.docker.com/linux/static/stable/x86_64/docker-19.03.8.tgz && \
-    tar -zxvf docker-19.03.8.tgz && mv docker/* /usr/bin && rm -rf docker && rm -f docker-19.03.8.tgz
+    tar -zxvf docker-19.03.8.tgz && mv docker/* /usr/bin && rm -rf docker && rm -f docker-19.03.8.tgz && rm -rf /var/cache/yum
 
 # configure the rune runtime of docker
 RUN mkdir -p /etc/docker && \
@@ -55,15 +55,15 @@ RUN yum-config-manager --add-repo \
 # install Intel SGX SDK and DCAP
 RUN yum install --nogpgcheck -y \
     libsgx-uae-service libsgx-dcap-default-qpl \
-    libsgx-dcap-quote-verify libsgx-dcap-ql
+    libsgx-dcap-quote-verify libsgx-dcap-ql && rm -rf /var/cache/yum
 
 # install Alibaba Cloud TEE SDK
-RUN yum install --nogpgcheck -y teesdk
+RUN yum install --nogpgcheck -y teesdk && rm -rf /var/cache/yum
 
 RUN echo "source /opt/alibaba/teesdk/intel/sgxsdk/environment" >> /root/.bashrc
 RUN ln -sf /usr/bin/cmake3 /usr/bin/cmake
 
 # install OPA go dependencies
 RUN go get github.com/open-policy-agent/opa@v0.30.2
-RUN curl -L -o opa https://openpolicyagent.org/downloads/v0.30.2/opa_linux_amd64_static
+RUN curl -f -L -o opa https://openpolicyagent.org/downloads/v0.30.2/opa_linux_amd64_static
 RUN chmod 755 ./opa && mv opa /usr/local/bin/