diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/inclavare-containers/inclavare-containers/tools/docker/Dockerfile-inclavare-dev-ubuntu18.04 b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/inclavare-containers/inclavare-containers/tools/docker/Dockerfile-inclavare-dev-ubuntu18.04/repaired.Dockerfile
index 44c3fe4..455da24 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/inclavare-containers/inclavare-containers/tools/docker/Dockerfile-inclavare-dev-ubuntu18.04
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/inclavare-containers/inclavare-containers/tools/docker/Dockerfile-inclavare-dev-ubuntu18.04/repaired.Dockerfile
@@ -5,11 +5,11 @@ LABEL maintainer="Shirong Hao <shirong@linux.alibaba.com>"
 ENV APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=1
 ENV DEBIAN_FRONTEND noninteractive
 
-RUN apt-get update && apt-get install -y \
+RUN apt-get update && apt-get install --no-install-recommends -y \
     make git vim clang-format-9 gcc pkg-config protobuf-compiler debhelper cmake \
     wget net-tools curl file gnupg tree \
     libbinutils \
-    libseccomp-dev libssl-dev binutils-dev libprotoc-dev
+    libseccomp-dev libssl-dev binutils-dev libprotoc-dev && rm -rf /var/lib/apt/lists/*;
 
 WORKDIR /root
 
@@ -18,7 +18,7 @@ RUN mkdir /root/gopath
 # build and install prortobuf-c
 RUN wget https://github.com/protobuf-c/protobuf-c/archive/v1.3.1.tar.gz && \
     tar -zxvf v1.3.1.tar.gz && cd protobuf-c-1.3.1 && ./autogen.sh && \
-    ./configure && make && make install && rm -f ../v1.3.1.tar.gz
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" && make && make install && rm -f ../v1.3.1.tar.gz
 
 # install golang
 RUN wget https://dl.google.com/go/go1.14.2.linux-amd64.tar.gz && \
@@ -55,9 +55,9 @@ RUN containerd config default > config.toml && \
 
 # build and install skopeo
 RUN git clone https://github.com/containers/skopeo $GOPATH/src/github.com/containers/skopeo && \
-    apt-get install -y libdevmapper-dev build-essential nghttp2 libnghttp2-dev libssl-dev libfftw3-dev libsndfile1-dev libgpgme-dev && \
+    apt-get install --no-install-recommends -y libdevmapper-dev build-essential nghttp2 libnghttp2-dev libssl-dev libfftw3-dev libsndfile1-dev libgpgme-dev && \
     cd $GOPATH/src/github.com/containers/skopeo && make bin/skopeo && \
-    cp -f $GOPATH/src/github.com/containers/skopeo/bin/skopeo /usr/local/bin/
+    cp -f $GOPATH/src/github.com/containers/skopeo/bin/skopeo /usr/local/bin/ && rm -rf /var/lib/apt/lists/*;
 
 # configue crictl
 RUN echo "runtime-endpoint: unix:///run/containerd/containerd.sock\nimage-endpoint: unix:///run/containerd/containerd.sock\ntimeout: 2\ndebug: true" > /etc/crictl.yaml
@@ -73,9 +73,9 @@ RUN wget https://download.01.org/intel-sgx/sgx-linux/$SGX_SDK_VERSION/as.ld.objd
      rm -rf external && rm -rf as.ld.objdump.gold.r3.tar.gz
 
 # install docker
-RUN apt-get install -y iptables && \
+RUN apt-get install --no-install-recommends -y iptables && \
     wget https://download.docker.com/linux/static/stable/x86_64/docker-18.09.7.tgz && \
-    tar -zxvf docker-18.09.7.tgz && mv docker/* /usr/bin && rm -rf docker && rm -f docker-18.09.7.tgz
+    tar -zxvf docker-18.09.7.tgz && mv docker/* /usr/bin && rm -rf docker && rm -f docker-18.09.7.tgz && rm -rf /var/lib/apt/lists/*;
 
 # configure the rune runtime of docker
 RUN mkdir -p /etc/docker && \
@@ -90,16 +90,16 @@ RUN [ ! -f sgx_linux_x64_sdk_$SGX_SDK_RELEASE_NUMBER.bin ] && \
 RUN echo "deb [arch=amd64] https://download.01.org/intel-sgx/sgx_repo/ubuntu bionic main" | tee /etc/apt/sources.list.d/intel-sgx.list && \
     wget -qO - https://download.01.org/intel-sgx/sgx_repo/ubuntu/intel-sgx-deb.key | apt-key add -
 
-RUN apt-get update -y && apt-get install -y \
+RUN apt-get update -y && apt-get install --no-install-recommends -y \
     libsgx-uae-service libsgx-dcap-default-qpl \
-    libsgx-dcap-quote-verify-dev libsgx-dcap-ql-dev
+    libsgx-dcap-quote-verify-dev libsgx-dcap-ql-dev && rm -rf /var/lib/apt/lists/*;
 
 # install the packages need by skopeo
-RUN apt-get install -y libdevmapper-dev libgpgme-dev
+RUN apt-get install --no-install-recommends -y libdevmapper-dev libgpgme-dev && rm -rf /var/lib/apt/lists/*;
 
 # install OPA go dependencies
 RUN go get github.com/open-policy-agent/opa@v0.30.2
-RUN curl -L -o opa https://openpolicyagent.org/downloads/v0.30.2/opa_linux_amd64_static
+RUN curl -f -L -o opa https://openpolicyagent.org/downloads/v0.30.2/opa_linux_amd64_static
 RUN chmod 755 ./opa && mv opa /usr/local/bin/
 
 # copy binary and configure files