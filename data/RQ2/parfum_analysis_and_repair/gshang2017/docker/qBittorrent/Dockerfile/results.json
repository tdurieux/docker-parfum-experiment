{
  "startTime": 1674255295241,
  "endTime": 1674255296915,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 79,
        "lineEnd": 79,
        "columnStart": 3,
        "columnEnd": 55
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 3,
        "columnEnd": 78
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#compiling qB\nFROM alpine:3.16 as compilingqB\n\nARG LIBTORRENT_VER=2.0.6\nARG QBITTORRENT_VER=4.4.3.1\nARG QBITTORRENT_EE_VER=4.4.3.12\n\nRUN apk add --no-cache ca-certificates cmake build-base boost-dev python3-dev \\\n         py3-setuptools samurai qt6-qttools-dev libexecinfo-dev \\\n#libtorrent-rasterbar\n&& mkdir /qbbuild \\\n&& wget -P /qbbuild https://github.com/arvidn/libtorrent/releases/download/v${LIBTORRENT_VER}/libtorrent-rasterbar-${LIBTORRENT_VER}.tar.gz \\\n&& tar -zxf /qbbuild/libtorrent-rasterbar-${LIBTORRENT_VER}.tar.gz -C /qbbuild \\\n# fix armv7 build\n&& wget -O /qbbuild/libtorrent-rasterbar-${LIBTORRENT_VER}/test/test_copy_file.cpp https://raw.githubusercontent.com/arvidn/libtorrent/fac8d18e72cdd16a56a34dd805df9fefe46d8f0a/test/test_copy_file.cpp \\\n&& cd /qbbuild/libtorrent-rasterbar-${LIBTORRENT_VER} \\\n&& cmake -B build -DCMAKE_BUILD_TYPE=None -DCMAKE_CXX_STANDARD=17 -DCMAKE_VERBOSE_MAKEFILE=ON \\\n         -DCMAKE_INSTALL_PREFIX=/usr -Dbuild_tests=ON -Dpython-bindings=ON -Dpython-egg-info=ON \\\n&& cmake --build build -- -j 2 \\\n&& cmake --install build \\\n&& strip /usr/lib/libtorrent-rasterbar.so.2.0 \\\n#qBittorrent-Enhanced-Edition\n&& wget -P /qbbuild https://github.com/c0re100/qBittorrent-Enhanced-Edition/archive/release-${QBITTORRENT_EE_VER}.zip \\\n&& unzip /qbbuild/release-${QBITTORRENT_EE_VER}.zip -d /qbbuild \\\n&& cd /qbbuild/qBittorrent-Enhanced-Edition-release-${QBITTORRENT_EE_VER} \\\n&& cmake -B build-nox -G Ninja -D CMAKE_CXX_STANDARD_LIBRARIES=\"/usr/lib/libexecinfo.so\" \\\n         -D CMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=Release -DQT6=ON -DGUI=OFF \\\n&& cmake --build build-nox -- -j 2 \\\n&& cmake --install build-nox \\\n&& strip /usr/local/bin/qbittorrent-nox \\\n&& mv /usr/local/bin/qbittorrent-nox /usr/local/bin/qbittorrentee-nox \\\n#qBittorrent\n&& wget -P /qbbuild https://github.com/qbittorrent/qBittorrent/archive/release-${QBITTORRENT_VER}.zip \\\n&& unzip /qbbuild/release-${QBITTORRENT_VER}.zip -d /qbbuild \\\n&& cd /qbbuild/qBittorrent-release-${QBITTORRENT_VER} \\\n# fix Qt 6.3\n&& wget -O /qbbuild/qBittorrent-release-${QBITTORRENT_VER}/src/base/net/downloadhandlerimpl.cpp https://raw.githubusercontent.com/qbittorrent/qBittorrent/af07a987849de7180226596f878203c6ea3070b2/src/base/net/downloadhandlerimpl.cpp \\\n&& cmake -B build-nox -G Ninja -D CMAKE_CXX_STANDARD_LIBRARIES=\"/usr/lib/libexecinfo.so\" \\\n         -D CMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=Release -DQT6=ON -DGUI=OFF \\\n&& cmake --build build-nox -- -j 2 \\\n&& cmake --install build-nox \\\n&& strip /usr/local/bin/qbittorrent-nox \\\n&& mkdir /qbittorrent \\\n&& cp --parents /usr/local/bin/qbittorrent-nox /qbittorrent \\\n&& cp --parents /usr/local/bin/qbittorrentee-nox /qbittorrent \\\n&& cp --parents /usr/lib/libtorrent-rasterbar.so.2.0 /qbittorrent && rm /qbbuild/libtorrent-rasterbar-${LIBTORRENT_VER}.tar.gz\n\n# docker qB\nFROM alpine:3.16\n\nARG S6_VER=2.2.0.3\n\nENV UID=1000\nENV GID=1000\nENV UMASK=022\nENV TZ=Asia/Shanghai\nENV QB_WEBUI_PORT=8989\nENV QB_EE_BIN=false\nENV QB_TRACKERS_UPDATE_AUTO=true\nENV QB_TRACKERS_LIST_URL=https://raw.githubusercontent.com/ngosang/trackerslist/master/trackers_all.txt\n\nCOPY root /\nCOPY --from=compilingqB /qbittorrent /\n\n#install bash curl tzdata python3 shadow qt6\nRUN apk add --no-cache bash curl ca-certificates tzdata python3 shadow qt6-qtbase-sqlite qt6-qtbase libexecinfo \\\n#install s6-overlay\n&& if [ \"$(uname -m)\" = \"x86_64\" ];then s6_arch=amd64;elif [ \"$(uname -m)\" = \"aarch64\" ];then s6_arch=aarch64;elif [ \"$(uname -m)\" = \"armv7l\" ];then s6_arch=arm; fi \\\n&& wget --no-check-certificate https://github.com/just-containers/s6-overlay/releases/download/v${S6_VER}/s6-overlay-${s6_arch}.tar.gz \\\n&& tar -xvzf s6-overlay-${s6_arch}.tar.gz \\\n#create qbittorrent user\n&& useradd -u 1000 -U -d /config -s /bin/false qbittorrent \\\n&& usermod -G users qbittorrent \\\n#install Search\n&& wget -P /tmp https://github.com/qbittorrent/search-plugins/archive/refs/heads/master.zip \\\n&& unzip /tmp/master.zip -d /tmp \\\n&& mkdir -p /usr/local/qbittorrent/defaults/Search \\\n&& cp /tmp/search-plugins-master/nova3/engines/*.py /usr/local/qbittorrent/defaults/Search \\\n#conf trackers \\\n&& curl -f -so /tmp/trackers_all.txt $QB_TRACKERS_LIST_URL \\\n&& Newtrackers=\"Session\\AdditionalTrackers=$(awk '{if(!NF){next}}1' /tmp/trackers_all.txt|sed ':a;N;s/\\n/\\\\n/g;ta' )\" \\\n&& echo $Newtrackers >/tmp/Newtrackers.txt \\\n&& sed -i '/Session\\\\AdditionalTrackers=/r /tmp/Newtrackers.txt' /usr/local/qbittorrent/defaults/qBittorrent.conf \\\n&& sed -i '1,/^Session\\\\AdditionalTrackers=.*/{//d;}' /usr/local/qbittorrent/defaults/qBittorrent.conf \\\n#clear\n&& rm s6-overlay-${s6_arch}.tar.gz \\\n&& rm -rf /var/cache/apk/* /tmp/* \\\n&& chmod a+x /usr/local/qbittorrent/updatetrackers.sh \\\n&& chmod a+x /usr/local/bin/qbittorrent-nox \\\n&& chmod a+x /usr/local/bin/qbittorrentee-nox\n\nVOLUME /Downloads /config\nEXPOSE 8989 6881 6881/udp\nENTRYPOINT [ \"/init\" ]\n"
}