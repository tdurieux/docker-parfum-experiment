{
  "startTime": 1674250656310,
  "endTime": 1674250657567,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 3,
        "columnEnd": 60
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 54,
        "columnEnd": 148
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 3,
        "columnEnd": 72
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 3,
        "columnEnd": 72
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:20.04\n\nARG ANKI_SYNC_SERVER=2.4.0\nARG S6_VER=2.2.0.3\nARG ANKI_VER=2.1.49\n\nENV ANKI_SYNC_SERVER_USER=\nENV ANKI_SYNC_SERVER_PASSWORD=\nENV ENABLE_NGINX_PROXY_SERVER=true\nENV UID=1000\nENV GID=1000\nENV PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION=python\n\nCOPY root /\n\nRUN apt-get update -q -y \\\n&& ln -snf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime \\\n&& echo Asia/Shanghai > /etc/timezone \\\n&& apt-get install --no-install-recommends -q -y expect python3 python3-pip wget unzip nginx git \\\n&& if [ \"$(uname -m)\" = \"x86_64\" ];then anki_arch=x86_64;elif [ \"$(uname -m)\" = \"aarch64\" ];then anki_arch=aarch64;elif [ \"$(uname -m)\" = \"armv7l\" ];then anki_arch=armv7l; fi \\\n&& wget -P /tmp https://github.com/gshang2017/anki-build/releases/download/v${ANKI_VER}/anki-${ANKI_VER}-${anki_arch}.tar.gz --no-check-certificate \\\n&& tar xzf /tmp/anki-${ANKI_VER}-${anki_arch}.tar.gz -C /tmp \\\n&& pip install --no-cache-dir /tmp/anki*.whl \\\n#install anki-sync-server\n&& mkdir -p /usr/local/anki-sync-server \\\n&& if [ \"$ANKI_SYNC_SERVER\" = \"develop\" ]; then git clone -b develop --depth 1 https://github.com/ankicommunity/anki-sync-server.git /usr/local/anki-sync-server; fi \\\n&& if [ \"$ANKI_SYNC_SERVER\" != \"develop\" ]; then wget -P /tmp https://github.com/ankicommunity/anki-sync-server/archive/refs/tags/v${ANKI_SYNC_SERVER}.tar.gz --no-check-certificate; fi \\\n&& if [ -f \"/tmp/v${ANKI_SYNC_SERVER}.tar.gz\" ]; then tar -zxf /tmp/v${ANKI_SYNC_SERVER}.tar.gz --strip-components 1 -C /usr/local/anki-sync-server; fi \\\n&& sed -i 's/anki==*.*.*;/anki;/g' /usr/local/anki-sync-server/src/requirements.txt \\\n&& pip install --no-cache-dir -r /usr/local/anki-sync-server/src/requirements.txt \\\n#install s6-overlay\n&& if [ \"$(uname -m)\" = \"x86_64\" ];then s6_arch=amd64;elif [ \"$(uname -m)\" = \"aarch64\" ];then s6_arch=aarch64;elif [ \"$(uname -m)\" = \"armv7l\" ];then s6_arch=arm; fi \\\n&& wget -P /tmp https://github.com/just-containers/s6-overlay/releases/download/v${S6_VER}/s6-overlay-${s6_arch}-installer --no-check-certificate \\\n&& chmod +x /tmp/s6-overlay-${s6_arch}-installer \\\n&& /tmp/s6-overlay-${s6_arch}-installer / \\\n#defaults ankisyncd.conf\n&& mkdir -p /usr/local/anki-sync-server/defaults \\\n&& mv /usr/local/anki-sync-server/src/ankisyncd.conf /usr/local/anki-sync-server/defaults/ankisyncd.conf \\\n&& sed -i 's/\\.\\//\\/config\\//g' /usr/local/anki-sync-server/defaults/ankisyncd.conf \\\n#defaults nginx.conf\n&& cp -rf /usr/local/anki-sync-server/docs/src/nginx/nginx.example.conf /usr/local/anki-sync-server/defaults/nginx.conf \\\n&& sed -i \"`grep -wn proxy_pass /usr/local/anki-sync-server/defaults/nginx.conf \\\n          |awk -F: '{print $1}'`a\\            client_max_body_size 222M;\" /usr/local/anki-sync-server/defaults/nginx.conf \\\n&& sed -i 's/default;/localhost;/g' /usr/local/anki-sync-server/defaults/nginx.conf \\\n#ankisyncd路径\n&& echo \"/usr/local/anki-sync-server/src/\" > /usr/local/lib/python3.8/dist-packages/ankisyncd.pth \\\n#create ankisync user\n&& mkdir /config \\\n&& useradd -u 1000 -U -d /config -s /bin/false ankisync \\\n&& usermod -G users ankisync \\\n#\n&& apt-get clean \\\n&& rm -rf /tmp/* \\\n\nEXPOSE 27701 && rm /tmp/anki-${ANKI_VER}-${anki_arch}.tar.gz && rm -rf /var/lib/apt/lists/*;\nENTRYPOINT [ \"/init\" ]\n"
}