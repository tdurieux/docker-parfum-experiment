{
  "startTime": 1674216496080,
  "endTime": 1674216497754,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 19,
        "columnEnd": 30
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 11,
        "columnStart": 0,
        "columnEnd": 35
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# import base image\nFROM ubuntu:bionic\n\n# install system-wide dependencies,\n# python3 and the build-time dependencies for c modules\nRUN apt-get update && \\\nDEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \\\npython3 python3-dev python3-pip python3-lxml \\\nbuild-essential libffi-dev git locales \\\nlibtiff5-dev libjpeg8-dev zlib1g-dev libmagic-dev \\\nlibfreetype6-dev liblcms2-dev libwebp-dev \\\ncurl libfontconfig nodejs npm nginx \\\n&& echo \"\\ndaemon off;\" >> /etc/nginx/nginx.conf \\\n&& rm /etc/nginx/sites-enabled/default && rm -rf /var/lib/apt/lists/*;\n\n# Set the locale\nRUN locale-gen en_US.UTF-8\nENV LANG en_US.UTF-8\nENV LANGUAGE en_US:en\nENV LC_ALL en_US.UTF-8\n\n# setup the environment\nWORKDIR /opt/server/\nCOPY ./docker/nginx.conf /etc/nginx/nginx.conf\nCOPY ./docker/superdesk_vhost.conf /etc/nginx/sites-enabled/superdesk.conf\nCOPY ./docker/start.sh ./start.sh\n\n# client ports\nEXPOSE 9000\nEXPOSE 80\n# server ports\nEXPOSE 5000\nEXPOSE 5100\n\n# set env vars for the server\nENV PYTHONUNBUFFERED 1\nENV C_FORCE_ROOT \"False\"\nENV CELERYBEAT_SCHEDULE_FILENAME /tmp/celerybeatschedule.db\nENV TZ Europe/London\n\nRUN python3 -m pip install --upgrade pip setuptools wheel\nRUN npm install -g npm grunt-cli && npm cache clean --force;\n\n# install server dependencies\nCOPY ./server/requirements.txt /tmp/requirements.txt\nRUN cd /tmp && python3 -m pip install -U -r /tmp/requirements.txt\n\n# install client dependencies\nCOPY ./client/package.json ./client/\nRUN cd ./client && npm install && npm cache clean --force;\n\n# copy server sources\nCOPY ./server .\n\n# copy client sources\nCOPY ./client ./client\n\n# TODO: this is hack to update basic themes during bamboo deployment\nCOPY ./server/liveblog/themes/themes_assets/ ./themes_assets/\n\nCMD /opt/server/start.sh\n"
}