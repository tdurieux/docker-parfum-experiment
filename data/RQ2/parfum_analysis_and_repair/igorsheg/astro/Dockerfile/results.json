{
  "startTime": 1674252756950,
  "endTime": 1674252757784,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 14,
        "columnEnd": 26
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 36
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM golang:1.17.3-alpine3.14 AS builder\n\nWORKDIR /app\n\nRUN apk add --no-cache sqlite yarn gcc libc-dev\n\nCOPY . .\n\nRUN cd web && yarn install && NODE_ENV=production yarn build && yarn cache clean;\nRUN cd server && go build -o astroserver.sh cmd/astro/main.go\n\n######################################################\n\nFROM alpine:3.14 as prod\n\n\nWORKDIR /app\n\nCOPY --from=builder /app/web/statics ./web/statics\nCOPY --from=builder /app/web/public ./web/public\nCOPY --from=builder /app/web/index.html ./web/index.html\nCOPY --from=builder /app/server/astroserver.sh ./server/astroserver.sh\nCOPY --from=builder /app/server/data ./server/data\nCOPY --from=builder /app/.env .\n\nWORKDIR /app/server\nENV GIN_MODE=release\nEXPOSE 8088\n\nCMD [\"./astroserver.sh\"]\n\n\n"
}