{
  "startTime": 1674215953935,
  "endTime": 1674215954942,
  "originalSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 27,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 4,
        "columnEnd": 80
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 27,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 4,
        "columnEnd": 80
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 27,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 4,
        "columnEnd": 80
      }
    }
  ],
  "repairedDockerfile": "ARG ruby_version=2.7.6\nARG base_image=bitnami/ruby:$ruby_version\n\nFROM $base_image AS builder\n\n# TODO: remove these once they're set in the base image.\nENV RAILS_ENV=production\nENV NODE_ENV=production\nENV GEM_HOME=/usr/local/bundle\nENV BUNDLE_PATH=$GEM_HOME\nENV BUNDLE_BIN=$GEM_HOME/bin\nENV PATH=$BUNDLE_BIN/bin:$PATH\nENV BUNDLE_WITHOUT=\"development test\"\n\n# TODO: set these in the builder image.\nENV BUNDLE_IGNORE_MESSAGES=1\nENV BUNDLE_SILENCE_ROOT_WARNING=1\nENV BUNDLE_JOBS=12\nENV MAKEFLAGS=-j12\n\nENV ASSETS_PREFIX=/assets/signon\nENV BOOTSNAP_CACHE_DIR=/var/cache/bootsnap\nENV GOVUK_APP_DOMAIN=unused\nENV GOVUK_WEBSITE_ROOT=unused\n\n# TODO: have a separate builder image which already contains the build-only deps.\nRUN apt-get update -qy\nRUN apt-get install -y --no-install-suggests --no-install-recommends \\\n    nodejs libmariadb-dev-compat && rm -rf /var/lib/apt/lists/*;\n\nRUN ln -fs /tmp /app/tmp\nWORKDIR /app\nCOPY Gemfile Gemfile.lock .ruby-version /app/\nRUN echo 'install: --no-document' >> /etc/gemrc && bundle install\nCOPY . /app\nRUN bundle exec bootsnap precompile --gemfile .\nRUN DEVISE_PEPPER=unused DEVISE_SECRET_KEY=unused bundle exec rails assets:precompile\n\n\nFROM $base_image\n\n# TODO: set these in the base image.\nENV RAILS_ENV=production\nENV NODE_ENV=production\nENV GEM_HOME=/usr/local/bundle\nENV BUNDLE_PATH=$GEM_HOME\nENV BUNDLE_BIN=$GEM_HOME/bin\nENV PATH=$GEM_HOME/bin:$PATH\nENV BUNDLE_WITHOUT=\"development test\"\n\nENV GOVUK_APP_NAME=signon\nENV ASSETS_PREFIX=/assets/signon\nENV BOOTSNAP_CACHE_DIR=/var/cache/bootsnap\nENV GOVUK_PROMETHEUS_EXPORTER=true\n\nWORKDIR /app\n\nRUN echo 'IRB.conf[:HISTORY_FILE] = \"/tmp/irb_history\"' > irb.rc\nRUN ln -fs /tmp /app/tmp\n\n# TODO: include libmariadb3 in the base image and stop running apt-get install here.\nCOPY --from=builder /var/lib/apt/lists/ /var/lib/apt/lists/\nRUN apt-get install -y --no-install-suggests --no-install-recommends libmariadb3 && rm -rf /var/lib/apt/lists/*;\n\nCOPY --from=builder /usr/bin/node* /usr/bin/\nCOPY --from=builder /usr/local/bundle/ /usr/local/bundle/\nCOPY --from=builder /var/cache/bootsnap/ /var/cache/\nCOPY --from=builder /app ./\n\nRUN groupadd -g 1001 app && \\\n    useradd -u 1001 -g app app\nUSER 1001\nCMD bundle exec puma\n"
}