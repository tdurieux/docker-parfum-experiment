{
  "startTime": 1674248088383,
  "endTime": 1674248089138,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 36
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM golang:1.13 as builder\n\n# install dep (required when not vendored)\nRUN wget https://github.com/golang/dep/releases/download/v0.5.3/dep-linux-amd64 \\\n\t&& mv dep-linux-amd64 /bin/dep \\\n\t&& chmod +x /bin/dep\n\n# install kubebuilder (required for tests)\nRUN wget https://github.com/kubernetes-sigs/kubebuilder/releases/download/v1.0.7/kubebuilder_1.0.7_linux_amd64.tar.gz \\\n\t&& tar xvzf kubebuilder_1.0.7_linux_amd64.tar.gz \\\n\t&& mkdir -p /usr/local \\\n\t&& mv kubebuilder_1.0.7_linux_amd64 /usr/local/kubebuilder && rm kubebuilder_1.0.7_linux_amd64.tar.gz\nENV PATH=\"${PATH}:/usr/local/kubebuilder/bin\"\n\n# setup context\nWORKDIR /go/src/github.com/alphagov/gsp/components/concourse-operator\nENV CGO_ENABLED=0\nENV GOOS=linux\nENV GOARCH=amd64\nCOPY . .\n\n# install dependencies\nRUN sh -c 'if [ -e ./vendor ]; then echo skipping dep ensure as found vendor dir 1>&2; else dep ensure -vendor-only; fi'\n\n# run unit tests\nENV KUBEBUILDER_CONTROLPLANE_START_TIMEOUT=1m\nENV KUBEBUILDER_CONTROLPLANE_STOP_TIMEOUT=1m\nRUN go test -v ./pkg/... ./cmd/...\n\n# build manager\nRUN go build -a -o manager ./cmd/manager\n\n# CA certs\nFROM alpine:3.2 as certs\nRUN apk add --no-cache ca-certificates --update\n\n# Minimal image for controller\nFROM alpine:3.2\nWORKDIR /root/\nCOPY --from=builder /go/src/github.com/alphagov/gsp/components/concourse-operator/manager /manager\nCOPY --from=certs /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/\nENTRYPOINT [\"/manager\"]\n"
}