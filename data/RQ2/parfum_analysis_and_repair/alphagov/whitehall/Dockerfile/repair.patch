diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/alphagov/whitehall/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/alphagov/whitehall/Dockerfile/repaired.Dockerfile
index 5a1ab1e..2312408 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/alphagov/whitehall/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/alphagov/whitehall/Dockerfile/repaired.Dockerfile
@@ -8,20 +8,20 @@ ENV RAILS_ENV=production
 # TODO: have a separate build image which already contains the build-only deps.
 
 # Add yarn to apt sources
-RUN curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -
+RUN curl -f -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -
 RUN echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list
 
 RUN apt-get update -qy && \
     apt-get upgrade -y && \
-    apt-get install -y build-essential nodejs yarn && \
-    apt-get clean
+    apt-get install --no-install-recommends -y build-essential nodejs yarn && \
+    apt-get clean && rm -rf /var/lib/apt/lists/*;
 RUN mkdir /app
 WORKDIR /app
 COPY Gemfile Gemfile.lock .ruby-version package.json yarn.lock /app/
 RUN bundle config set deployment 'true' && \
     bundle config set without 'development test' && \
     bundle install --jobs 4 --retry=2
-RUN yarn install --production --frozen-lockfile
+RUN yarn install --production --frozen-lockfile && yarn cache clean;
 COPY . /app
 # TODO: We probably don't want assets in the image; remove this once we have a proper deployment process which uploads to (e.g.) S3.
 RUN GOVUK_ASSET_ROOT=https://assets.publishing.service.gov.uk \
@@ -37,7 +37,7 @@ ENV RAILS_ENV=production GOVUK_APP_NAME=whitehall
 # TODO: apt-get upgrade in the base image
 RUN apt-get update -qy && \
     apt-get upgrade -y && \
-    apt-get install -y nodejs
+    apt-get install --no-install-recommends -y nodejs && rm -rf /var/lib/apt/lists/*;
 WORKDIR /app
 COPY --from=builder /usr/local/bundle/ /usr/local/bundle/
 COPY --from=builder /app ./