{
  "startTime": 1674249172643,
  "endTime": 1674249173514,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 58,
        "columnEnd": 63
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 117,
        "columnEnd": 139
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:8-alpine as builder\n\nCOPY package.json  ./\n\nRUN npm set progress=false && npm config set depth 0 && npm cache clean --force\n\n## Storing node modules on a separate layer will prevent unnecessary npm installs at each build\nRUN apk add --no-cache --virtual .gyp python make g++ && npm i && mkdir /ng-app && cp -R ./node_modules ./ng-app && npm i -g ionic cordova && npm cache clean --force;\n\nWORKDIR /ng-app\n\nCOPY . .\n\n## Build the angular app in production mode and store the artifacts in dist folder\nRUN ionic cordova build browser\n\nFROM nginx:1.13.3-alpine\n\n## Copy our default nginx config\nCOPY nginx/default.conf /etc/nginx/conf.d/\n\n## Remove default nginx website\nRUN rm -rf /usr/share/nginx/html/*\n\n## From 'builder' stage copy over the artifacts in dist folder to default nginx public folder\nCOPY --from=builder /ng-app/platforms/browser /usr/share/nginx/html\n\nCMD [\"nginx\", \"-g\", \"daemon off;\"]"
}