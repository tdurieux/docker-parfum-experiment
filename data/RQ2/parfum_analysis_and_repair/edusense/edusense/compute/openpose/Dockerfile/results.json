{
  "startTime": 1674251183364,
  "endTime": 1674251184193,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 122
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 2,
        "columnEnd": 26
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright (c) 2017-2019 Carnegie Mellon University. All rights reserved.\n# Use of this source code is governed by BSD 3-clause license.\n\nARG CUDA_VERSION=10.0\nARG CUDNN_VERSION=7\nARG UBUNTU_VERSION=18.04\nFROM nvidia/cuda:${CUDA_VERSION}-cudnn${CUDNN_VERSION}-devel-ubuntu${UBUNTU_VERSION} AS builder\n\nWORKDIR /openpose\nCOPY third_party/openpose /openpose\nENV DEBIAN_FRONTEND=noninteractive\nRUN apt-get update && apt-get -y --no-install-recommends install \\\n    ca-certificates \\\n    curl \\\n    git \\\n    build-essential \\\n    libatlas-base-dev \\\n    libprotobuf-dev \\\n    libleveldb-dev \\\n    libsnappy-dev \\\n    libhdf5-serial-dev \\\n    protobuf-compiler \\\n    libboost-all-dev \\\n    libgflags-dev \\\n    libgoogle-glog-dev \\\n    liblmdb-dev \\\n    python-setuptools \\\n    python-dev \\\n    python3-setuptools \\\n    python3-dev \\\n    python3-pip \\\n    libopencv-dev \\\n    libssl-dev && \\\n    rm -rf /var/lib/apt/lists/*\n\nRUN curl -f -o install_cmake.sh -SL \"https://github.com/Kitware/CMake/releases/download/v3.15.4/cmake-3.15.4-Linux-x86_64.sh\" && \\\n  /bin/bash install_cmake.sh --skip-license --prefix=/usr/local && \\\n  rm install_cmake.sh\n\nCOPY edusense examples/edusense\nRUN patch examples/tutorial_api_cpp/16_synchronous_custom_output.cpp -i examples/edusense/edusense.cpp.patch -o examples/edusense/edusense.cpp && \\\n    patch examples/user_code/CMakeLists.txt -i examples/edusense/CMakeLists.txt.patch -o examples/edusense/CMakeLists.txt\n\nCOPY third_party/base64 examples/edusense/base64\nCOPY third_party/rapidjson/include/rapidjson examples/edusense/rapidjson\nRUN echo \"add_subdirectory(edusense)\" >> examples/CMakeLists.txt\n\nWORKDIR /app/build\nRUN cmake /openpose && make -j 8 && make install\n\nFROM nvidia/cuda:${CUDA_VERSION}-cudnn${CUDNN_VERSION}-runtime-ubuntu${UBUNTU_VERSION}\n\nENV DEBIAN_FRONTEND=noninteractive\n# The following gosu setup procedure is derived from\n# https://github.com/tianon/gosu.\nRUN set -eux; \\\n  apt-get update; \\\n  apt-get install --no-install-recommends -y gosu; \\\n  rm -rf /var/lib/apt/lists/*; \\\n# verify that the binary works\n  gosu nobody true\n\nRUN apt-get update && apt-get -y --no-install-recommends install \\\n    ca-certificates \\\n    libboost-all-dev \\\n    libatlas-base-dev \\\n    libgflags-dev \\\n    libgoogle-glog-dev \\\n    libprotobuf-dev \\\n    libopencv-dev && \\\n    rm -rf /var/lib/apt/lists/*\n\nWORKDIR /app\nENV LD_LIBRARY_PATH=\"/usr/local/lib:${LD_LIBRARY_PATH}\"\nCOPY --from=builder /usr/local/lib /usr/local/lib/\nCOPY --from=builder /app/build/examples/edusense/edusense.bin /app/\nCOPY --from=builder /openpose/models /app/models\nCOPY entrypoint.sh /app\nRUN chmod +x entrypoint.sh\n\nENTRYPOINT [\"./entrypoint.sh\"]\n"
}