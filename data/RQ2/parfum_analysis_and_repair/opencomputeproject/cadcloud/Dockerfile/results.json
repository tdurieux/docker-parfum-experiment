{
  "startTime": 1674252239909,
  "endTime": 1674252240931,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 145
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 22,
        "columnEnd": 185
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 145
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 145
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 22,
        "columnEnd": 185
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 26
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 169
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 50
      }
    }
  ],
  "repairedDockerfile": "# MIT License\n#\n# Copyright (c) 2020 CADCloud\n#\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n# of this software and associated documentation files (the \"Software\"), to deal\n# in the Software without restriction, including without limitation the rights\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n# copies of the Software, and to permit persons to whom the Software is\n# furnished to do so, subject to the following conditions:\n#\n# The above copyright notice and this permission notice shall be included in all\n# copies or substantial portions of the Software.\n#\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n# SOFTWARE.\n\n# Dockerfile References: https://docs.docker.com/engine/reference/builder/\n\n# Start from the latest golang base image\n# FROM golang:latest\nFROM ubuntu:18.04\n\n# Add Maintainer Info\nLABEL maintainer=\"Jean-Marie Verdun <jmverdun3@gmail.com>\"\n\n# Set the Current Working Directory inside the container\nWORKDIR /app\n\n# Copy the source from the current directory to the Working Directory inside the container\nCOPY . .\n\nENV GOPATH=$GOPATH:/go/src/base:/app\nENV TLS_KEY_PATH=/app/src/tools/certificat.key.unlock\nENV TLS_CERT_PATH=/app/src/tools/certificat.crt\nENV STATIC_ASSETS_DIR=/app/src/static/\nENV TEMPLATES_DIR=/app/src/templates/\nENV CREDENTIALS_TCPPORT=:9100\nENV CREDENTIALS_URI=127.0.0.1\nENV STORAGE_TCPPORT=:9200\nENV MINIO_TCPPORT=:9300\nENV FREECAD_URI=127.0.0.1\nENV FREECAD_TCPPORT=:9210\nENV FREECAD_BINARY=/snap/bin/freecad\nENV FREECAD_TEMPLATE=/app/freecad/\nENV FREECAD_TEMP=/app/root/freecad/\nENV PROJECT_URI=127.0.0.1\nENV PROJECT_TCPPORT=:9211\nENV PROJECT_MINIO_TCPPORT=:9212\nENV PROJECT_TEMP=/app/root/projects/\nENV container docker\nENV PATH /snap/bin:$PATH\n# let's build\nRUN apt-get --allow-unauthenticated update --allow-insecure-repositories\nRUN apt install --no-install-recommends -y apt-utils && rm -rf /var/lib/apt/lists/*;\nRUN apt install --no-install-recommends -y golang-1.10 golang-1.10-go golang-1.10-race-detector-runtime golang-1.10-src golang-go golang-race-detector-runtime golang-src && rm -rf /var/lib/apt/lists/*;\nRUN apt-get update && apt-get install --no-install-recommends -y ca-certificates && rm -rf /var/lib/apt/lists/*\nRUN cat /etc/apt/sources.list\nRUN apt-get update && apt install --no-install-recommends -qq -y build-essential libssl-dev libcurl4-gnutls-dev libexpat1-dev gettext unzip wget xvfb snapd squashfuse fuse snap-confine sudo fontconfig vim rand && rm -rf /var/lib/apt/lists/*;\nRUN apt-get -y --no-install-recommends install git && rm -rf /var/lib/apt/lists/*;\nRUN go get golang.org/x/crypto/bcrypt\nRUN go get golang.org/x/net/idna\nRUN mkdir bin\nRUN go build -o bin/storage src/backend/storage.go\nRUN go build -o bin/freecad  src/backend/freecad.go\nRUN go build -o bin/cacheServer src/backend/cacheServer.go\nRUN go build -o bin/minioServer src/backend/minioServer.go\nRUN go build -o bin/users src/credential/users.go\nRUN go build -o bin/projects src/credential/projects.go\nRUN go build -o bin/master src/frontend/master.go\nRUN /bin/bash scripts/generate_certificates\n\nRUN chmod 777 /app/start_container\nRUN systemctl enable snapd\nSTOPSIGNAL SIGRTMIN+3\n\n# Expose port 8080 to the outside world\nEXPOSE 443\n\n# Command to run the executable\n# CMD /app/start_container\nCMD [ \"/sbin/init\" ]\n\n"
}