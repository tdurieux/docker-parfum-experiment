{
  "startTime": 1674217167488,
  "endTime": 1674217168251,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 23
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.8.7-alpine3.11\n\nLABEL MAINTAINER=\"Anand Tiwari\"\n\nENV DJANGO_SETTINGS_MODULE=archerysecurity.settings.base\n\n# Set archerysec as a work directory.\nWORKDIR /home/archerysec/app\n\n# Copy all file to archerysec folder.\nCOPY . .\n\nADD ./docker-files/init.sh /home/archerysec/app/init.sh\n\nRUN echo \"http://dl-3.alpinelinux.org/alpine/edge/main\" >> /etc/apk/repositories &&\\\n    apk add --update --no-cache bash netcat-openbsd && \\\n    adduser -h  /home/archerysec/app -s /bin/bash archerysec -D archerysec && \\\n    rm -rf /var/cache/apk/* && \\\n    chown archerysec /home/archerysec/app && \\\n    chgrp archerysec /home/archerysec/app && \\\n    chown -R archerysec:archerysec /home/archerysec/app\n\nRUN apk add --update --no-cache --virtual .build-deps \\\n        g++ \\\n        python-dev \\\n        libxml2 \\\n        bash \\\n        libxml2-dev && \\\n    apk add --no-cache libxslt-dev && \\\n    apk del .build-deps\n\nRUN apk add --no-cache --virtual .build-deps \\\n    ca-certificates gcc postgresql-dev linux-headers musl-dev \\\n    libffi-dev jpeg-dev zlib-dev\nRUN pip install --no-cache-dir -r requirements.txt\n\n#Change to the archerysec user so things get done as the right person (apart from copy)\nUSER archerysec\n\nEXPOSE 8000\n\nCMD [\"/home/archerysec/app/init.sh\"]"
}