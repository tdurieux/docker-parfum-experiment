{
  "startTime": 1674250306287,
  "endTime": 1674250307591,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 74,
        "lineEnd": 74,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#Ubuntu base OS\nFROM ubuntu:18.04\n# Labels and Credits\nLABEL \\\n    name=\"ArcherySec\" \\\n    author=\"Anand Tiwari <anandtiwarics@gmail.com>\" \\\n    maintainer=\"Anand Tiwari <anandtiwarics@gmail.com>\" \\\n    description=\"Archery is an opensource vulnerability assessment and management tool which helps developers and pentesters to perform scans and manage vulnerabilities. Archery uses popular opensource tools to perform comprehensive scanning for web application and network. It also performs web application dynamic authenticated scanning and covers the whole applications by using selenium. The developers can also utilize the tool for implementation of their DevOps CI/CD environment.\"\n\n\nENV DJANGO_SETTINGS_MODULE=\"archerysecurity.settings.base\" \\\n    DJANGO_WSGI_MODULE=\"archerysecurity.wsgi\"\n\n# Update & Upgrade Ubuntu. Install packages\nRUN \\\n    apt-get update && \\\n    DEBIAN_FRONTEND=noninteractive \\\n    apt-get --no-install-recommends install --quiet --yes --fix-missing \\\n    make \\\n    default-jre \\\n    postgresql-client-10 \\\n    sslscan \\\n    nikto \\\n    nmap \\\n    wget \\\n    curl \\\n    unzip \\\n    git \\\n    python3-setuptools \\\n    python3-wheel \\\n    python3-pip \\\n    virtualenv \\\n    gunicorn \\\n    postgresql \\\n    python-psycopg2 \\\n    postgresql-server-dev-all \\\n    libpq-dev \\\n    python3-dev \\\n    && \\\n    DEBIAN_FRONTEND=noninteractive \\\n    apt-get autoremove --purge -y && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/*\n\n# Set locales\nRUN locale-gen en_US.UTF-8\nENV LANG='en_US.UTF-8' LANGUAGE='en_US:en' LC_ALL='en_US.UTF-8'\n\n# Create archerysec user and group\nRUN groupadd -r archerysec && useradd -r -m -g archerysec archerysec\n\n# Include init script\nADD ./docker-files/init.sh /usr/local/bin/init.sh\n\nRUN chmod +x /usr/local/bin/init.sh\n\n# Set user to archerysec to execute rest of commands\nUSER archerysec\n\n# Create archerysec folder.\nRUN mkdir /home/archerysec/app\n\n# Set archerysec as a work directory.\nWORKDIR /home/archerysec/app\n\nRUN virtualenv -p python3 /home/archerysec/app/venv\n\n# Copy all file to archerysec folder.\nCOPY . .\n\nRUN mkdir nikto_result\n\nRUN wget https://github.com/zaproxy/zaproxy/releases/download/2.7.0/ZAP_2.7.0_Linux.tar.gz\n\nRUN tar -xvzf ZAP_2.7.0_Linux.tar.gz && rm ZAP_2.7.0_Linux.tar.gz\n\nRUN mkdir zap\n\nRUN cp -r ZAP_2.7.0/* /home/archerysec/app/zap\n\nCOPY zap_config/policies /home/archerysec/app/zap\n\nCOPY zap_config/ascanrulesBeta-beta-24.zap /home/archerysec/app/zap/plugin/ascanrulesBeta-beta-24.zap\n\nRUN rm -rf ZAP_2.7.0_Linux.tar.gz && \\\n    rm -rf ZAP_2.7.0\n\n# Install requirements\nRUN . venv/bin/activate && python3 -m pip install --no-cache-dir -r requirements.txt && \\\n    rm -rf /home/archerysec/.cache\n\nRUN . venv/bin/activate && python3 -m pip install git+https://github.com/archerysec/openvas_lib.git && python3 /home/archerysec/app/manage.py collectstatic --noinput\n\n# Exposing port.\nEXPOSE 8000\n\n# UP & RUN application.\nCMD [\"/usr/local/bin/init.sh\"]\n"
}