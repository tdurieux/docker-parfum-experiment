{
  "startTime": 1674220192410,
  "endTime": 1674220193203,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 4,
        "columnEnd": 32
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 89,
        "columnEnd": 105
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 66,
        "columnEnd": 82
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 26,
        "columnEnd": 42
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 18,
        "columnEnd": 34
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 27,
        "columnEnd": 43
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 90,
        "columnEnd": 106
      }
    }
  ],
  "repairedDockerfile": "FROM node:14.17.3-alpine AS node-base\n\nRUN apk update && apk add gettext nginx && rm -rf /var/cache/apk/* && \\\n    wget -q -O- https://gobinaries.com/tj/node-prune | sh\n\nFROM node-base AS builder\nWORKDIR /app\n\nCOPY [\"package.json\", \"yarn.lock\", \"lerna.json\", \"./\"]\nCOPY packages/throttle/package.json packages/throttle/package.json\nCOPY packages/styled/package.json packages/styled/package.json\nCOPY packages/types/package.json packages/types/package.json\nCOPY packages/backend/package.json packages/backend/package.json\nCOPY packages/frontend/package.json packages/frontend/package.json\n\nRUN yarn --silent --frozen-lockfile --ignore-scripts install --network-timeout 300000 && yarn cache clean;\n\nCOPY packages/types/ packages/types/\nCOPY tsconfig.json ./\nRUN yarn build:types && \\\n    yarn --silent --frozen-lockfile --ignore-scripts bootstrap && yarn cache clean;\n\n\nFROM builder AS backend-builder\nWORKDIR /app\n\nCOPY packages/backend/ packages/backend/\nRUN yarn build:backend && yarn cache clean;\n\nRUN yarn --prod --silent && \\\n    yarn --silent cache clean && \\\n    node-prune && yarn cache clean;\n\nFROM builder AS frontend-builder\nWORKDIR /app\n\nCOPY packages/ packages/\n\nARG API_URL\nARG CLIENT_ID\nENV REACT_APP_API_URL=$API_URL\nENV REACT_APP_CLIENT_ID=$CLIENT_ID\n\nENV GENERATE_SOURCEMAP=false\nRUN yarn build:frontend && yarn cache clean;\n\n\nFROM node-base AS production\n\nARG PM2_PUBLIC_KEY\nARG PM2_SECRET_KEY\nENV PM2_PUBLIC_KEY=$PM2_PUBLIC_KEY\nENV PM2_SECRET_KEY=$PM2_SECRET_KEY\n\nWORKDIR /app\n\nCOPY --from=builder /app/packages/types/dist/ ./packages/types/dist/\nCOPY --from=builder /app/packages/types/package.json ./packages/types/package.json\nCOPY --from=backend-builder /app/packages/backend/dist/ ./packages/backend/dist/\nCOPY --from=frontend-builder /app/packages/frontend/build /var/www/html\nCOPY --from=backend-builder /app/node_modules ./node_modules\nCOPY --from=backend-builder /app/packages/backend/package.json ./packages/backend/package.json\nCOPY --from=builder /app/package.json ./package.json\n\nARG API_HOST\nARG API_PORT\nENV API_HOST=$API_HOST\nENV API_PORT=${API_PORT:-3001}\n\nCOPY nginx.conf.template ./nginx.conf.template\nRUN yarn --silent global add pm2 && \\\n    envsubst '${API_HOST} ${API_PORT}' < ./nginx.conf.template > /etc/nginx/nginx.conf && yarn cache clean;\n\nEXPOSE 80\n\nENV NODE_ENV=production\nCMD [\"sh\", \"-c\", \"nginx -g 'daemon on;' && yarn start:prod\"]\n"
}