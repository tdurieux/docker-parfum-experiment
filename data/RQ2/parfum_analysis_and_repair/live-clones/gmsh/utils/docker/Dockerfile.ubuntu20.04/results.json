{
  "startTime": 1674220052447,
  "endTime": 1674220053470,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 89
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 93,
        "columnEnd": 121
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 22,
        "columnEnd": 615
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 22,
        "columnEnd": 615
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:20.04\n\nENV DEBIAN_FRONTEND noninteractive\n\nRUN apt-get update && apt-get install --no-install-recommends -y apt-utils git curl cmake g++ gfortran python3 python3-numpy python3-scipy python3-pip swig clang-tidy emacs-nox valgrind texlive texlive-latex-recommended texlive-latex-extra texinfo libreoffice fonts-cmu libpetsc-complex-dev libslepc-complex3.12-dev python3-dev libopenblas-dev libfltk1.3-dev libfreetype6-dev libgl1-mesa-dev libxi-dev libxmu-dev mesa-common-dev tcl-dev tk-dev libhdf5-dev libcgns-dev libxft-dev libxinerama-dev libxcursor-dev libxfixes-dev libocct-foundation-dev libocct-data-exchange-dev libocct-ocaf-dev libopenmpi-dev libboost-dev cargo clang gcovr ftp && apt-get clean && rm -rf /var/lib/apt/lists/*;\n\nRUN pip3 install --no-cache-dir twine\n\n# to convert a .fodt document, simply run\n# soffice --headless --convert-to pdf Tutorials.fodt\n\nRUN cargo install --root /opt/cargo mdbook --version \"^0.3.7\"\n\n# mmg\nRUN git clone https://github.com/MmgTools/mmg.git && cd mmg && mkdir build && cd build && cmake -DBUILD_SHARED_LIBS=1 .. && make -j8 && make install && cd .. && rm -rf mmg\n\n# libomp with ThreadSanitizer support (see https://gitlab.onelab.info/gmsh/gmsh/-/issues/1250)\nRUN curl -f -LO https://github.com/llvm/llvm-project/archive/refs/tags/llvmorg-12.0.0.tar.gz && tar xf llvmorg-12.0.0.tar.gz && cd llvm-project-llvmorg-12.0.0 && mkdir build && cd build && cmake -DLIBOMP_TSAN_SUPPORT=1 ../openmp && cmake --build . --target install && cd .. && rm -rf llvm-project-llvmorg-12.0.0 && rm llvmorg-12.0.0.tar.gz\n\n# \"docker build --build-arg REBUILD_GMSH=somethingnew\"\nARG REBUILD_GMSH=\n\nRUN git clone https://gitlab.onelab.info/gmsh/gmsh.git && cd gmsh && mkdir build && cd build && cmake -DCMAKE_BUILD_TYPE=Release -DENABLE_BUILD_SHARED=1 -DENABLE_PRIVATE_API=1 .. && make -j8 shared && make install/fast && cd .. && rm -rf gmsh\n\nVOLUME [\"/etc/gitlab-runner\"]\nRUN useradd -ms /bin/bash validator\nUSER validator\nWORKDIR /home/validator\nRUN mkdir -p ~/.ssh\nRUN chmod 700 ~/.ssh\nENV PATH=\"/opt/cargo/bin:${PATH}\"\n"
}