{
  "startTime": 1674254994283,
  "endTime": 1674254996097,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 71
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 75
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 88
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 83
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 87,
        "lineEnd": 87,
        "columnStart": 4,
        "columnEnd": 72
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 103,
        "lineEnd": 103,
        "columnStart": 4,
        "columnEnd": 77
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 109,
        "lineEnd": 109,
        "columnStart": 4,
        "columnEnd": 112
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 109,
        "lineEnd": 109,
        "columnStart": 4,
        "columnEnd": 112
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 106,
        "columnEnd": 150
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 131,
        "columnEnd": 175
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 148,
        "columnEnd": 221
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 136,
        "columnEnd": 184
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 23,
        "columnEnd": 431
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 23,
        "columnEnd": 434
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 23,
        "columnEnd": 431
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 81,
        "lineEnd": 81,
        "columnStart": 23,
        "columnEnd": 434
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 91,
        "lineEnd": 91,
        "columnStart": 23,
        "columnEnd": 34
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 93,
        "lineEnd": 93,
        "columnStart": 23,
        "columnEnd": 34
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 95,
        "lineEnd": 95,
        "columnStart": 23,
        "columnEnd": 34
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 97,
        "lineEnd": 97,
        "columnStart": 23,
        "columnEnd": 34
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 103,
        "lineEnd": 103,
        "columnStart": 125,
        "columnEnd": 279
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 115,
        "lineEnd": 115,
        "columnStart": 81,
        "columnEnd": 157
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 88,
        "lineEnd": 88,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 58,
        "columnEnd": 303
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 58,
        "columnEnd": 303
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM amd64/debian:stretch\n\nENV DEBIAN_FRONTEND noninteractive\n\n# in preparation for when stretch will not be supported anymore...\n# RUN echo \"deb http://archive.debian.org/debian stretch main\" > /etc/apt/sources.list\n# RUN echo \"deb http://archive.debian.org/debian-security stretch/updates main\" >> /etc/apt/sources.list\n\nRUN apt-get -o Acquire::Check-Valid-Until=false update && apt-get install --no-install-recommends -y git make autoconf python curl wget bzip2 gcc g++ texlive texinfo valgrind libgl1-mesa-dev libxi-dev libxmu-dev libxft-dev libxinerama-dev libxcursor-dev libxfixes-dev mesa-common-dev libglu1-mesa-dev zlib1g-dev cmake emacs-nox && apt-get clean && rm -rf /var/lib/apt/lists/*;\n\n# -----------------------\n# GCC with PIC\n# -----------------------\n\n# this allows to build a static libgfortran that we can embed in dynamic libraries\nENV CFLAGS=-fPIC\nENV CXXFLAGS=-fPIC\nENV FFLAGS=-fPIC\n\nRUN curl -f -L -O https://ftpmirror.gnu.org/gcc/gcc-6.5.0/gcc-6.5.0.tar.gz && tar xf gcc-6.5.0.tar.gz && cd gcc-6.5.0 && ./contrib/download_prerequisites && cd .. && mkdir gccbuild && cd gccbuild && ../gcc-6.5.0/configure -v --build=x86_64-linux-gnu --host=x86_64-linux-gnu --target=x86_64-linux-gnu --prefix=/usr/local --enable-checking=release --enable-languages=c,c++,fortran --disable-multilib --with-pic && make -j 4 > ./build_log.txt && make install && cd .. && rm -rf gcc-6.5.0.tar.gz gcc-6.5.0 gccbuild\n\nENV PATH=/usr/local/bin:${PATH}\nENV LD_LIBRARY_PATH=/usr/local/lib64:${LD_LIBRARY_PATH}\nENV CC=/usr/local/bin/gcc\nENV CXX=/usr/local/bin/g++\nENV FC=/usr/local/bin/gfortran\n\n# -----------------------\n# OpenBLAS\n# -----------------------\n\nRUN git clone https://github.com/xianyi/OpenBLAS.git && cd OpenBLAS && git checkout v0.3.15 && make NUM_THREADS=32 TARGET=CORE2 && cp libopenblas_core2p-r0.3.15.a /usr/local/lib/libopenblas.a && cd .. && rm -rf OpenBLAS\n\n# -----------------------\n# JPEG\n# -----------------------\n\nRUN curl -f -L -O http://www.ijg.org/files/jpegsrc.v9d.tar.gz && tar zxf jpegsrc.v9d.tar.gz && cd jpeg-9d && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-static --disable-shared && make && make install && cd .. && rm -rf jpeg-9d jpegsrc.v9d.tar.gz\n\n# -----------------------\n# PNG\n# -----------------------\n\nRUN curl -f -L -O https://download.sourceforge.net/libpng/libpng-1.6.37.tar.gz && tar zxf libpng-1.6.37.tar.gz && cd libpng-1.6.37 && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-static --disable-shared && make && make install && cd .. && rm -rf libpng-1.6.37 libpng-1.6.37.tar.gz\n\n# -----------------------\n# Freetype\n# -----------------------\n\nRUN curl -f -L -O http://download.savannah.gnu.org/releases/freetype/freetype-2.10.4.tar.gz && tar zxf freetype-2.10.4.tar.gz && cd freetype-2.10.4 && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --disable-shared --with-png=no --with-zlib=no --with-bzip2=no && make && make install && cd .. && rm -rf freetype-2.10.4.tar.gz freetype-2.10.4\n\n# -----------------------\n# HDF5\n# -----------------------\n\nRUN curl -f -L -O https://support.hdfgroup.org/ftp/HDF5/current/src/hdf5-1.10.5.tar.gz && tar zxvf hdf5-1.10.5.tar.gz && cd hdf5-1.10.5 && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --disable-shared --prefix=/usr/local && make && make install && cd .. && rm -rf hdf5-1.10.5.tar.gz hdf5-1.10.5\n\n# -----------------------\n# CGNS\n# -----------------------\n\nRUN git clone https://github.com/CGNS/CGNS.git && cd CGNS && git checkout v3.4.0 && mkdir build && cd build && cmake -DCGNS_BUILD_SHARED=0 -DCGNS_ENABLE_HDF5=1 -DHDF5_VERSION=1.10.5 .. && make && make install && cd ../.. && rm -rf CGNS\n\n# -----------------------\n# PETSc\n# -----------------------\n\nRUN curl -f -L -O http://ftp.mcs.anl.gov/pub/petsc/release-snapshots/petsc-3.14.4.tar.gz\nRUN tar zxf petsc-3.14.4.tar.gz && rm petsc-3.14.4.tar.gz\nENV PETSC_DIR ${PWD}/petsc-3.14.4\n\nENV PETSC_ARCH real_mumps_seq\nRUN cd ${PETSC_DIR} && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" CC=$CC CXX=$CXX FC=$FC CFLAGS=$CFLAGS CXXFLAGS=$CXXFLAGS FFLAGS=$FFLAGS --with-clanguage=cxx --with-debugging=0 --with-mpi=0 --with-mpiuni-fortran-binding=0 --download-mumps=yes --with-mumps-serial --with-shared-libraries=0 --with-x=0 --with-ssl=0 --with-scalar-type=real --with-blaslapack-lib=\"/usr/local/lib/libopenblas.a /usr/local/lib64/libgfortran.a /usr/local/lib64/libquadmath.a -lpthread\" && make\n\nENV PETSC_ARCH complex_mumps_seq\nRUN cd ${PETSC_DIR} && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" CC=$CC CXX=$CXX FC=$FC CFLAGS=$CFLAGS CXXFLAGS=$CXXFLAGS FFLAGS=$FFLAGS --with-clanguage=cxx --with-debugging=0 --with-mpi=0 --with-mpiuni-fortran-binding=0 --download-mumps=yes --with-mumps-serial --with-shared-libraries=0 --with-x=0 --with-ssl=0 --with-scalar-type=complex --with-blaslapack-lib=\"/usr/local/lib/libopenblas.a /usr/local/lib64/libgfortran.a /usr/local/lib64/libquadmath.a -lpthread\" && make\n\nENV PETSC_ARCH real_mumps_seq_shared\nRUN cd ${PETSC_DIR} && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" CC=$CC CXX=$CXX FC=$FC CFLAGS=$CFLAGS CXXFLAGS=$CXXFLAGS FFLAGS=$FFLAGS --with-clanguage=cxx --with-debugging=0 --with-mpi=0 --with-mpiuni-fortran-binding=0 --download-mumps=yes --with-mumps-serial --with-shared-libraries=1 --with-x=0 --with-ssl=0 --with-scalar-type=real --with-blaslapack-lib=\"/usr/local/lib/libopenblas.a /usr/local/lib64/libgfortran.a /usr/local/lib64/libquadmath.a -lpthread\" && make\n\nENV PETSC_ARCH complex_mumps_seq_shared\nRUN cd ${PETSC_DIR} && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" CC=$CC CXX=$CXX FC=$FC CFLAGS=$CFLAGS CXXFLAGS=$CXXFLAGS FFLAGS=$FFLAGS --with-clanguage=cxx --with-debugging=0 --with-mpi=0 --with-mpiuni-fortran-binding=0 --download-mumps=yes --with-mumps-serial --with-shared-libraries=1 --with-x=0 --with-ssl=0 --with-scalar-type=complex --with-blaslapack-lib=\"/usr/local/lib/libopenblas.a /usr/local/lib64/libgfortran.a /usr/local/lib64/libquadmath.a -lpthread\" && make\n\n# -----------------------\n# SLEPc\n# -----------------------\n\nRUN curl -f -L -O https://slepc.upv.es/download/distrib/slepc-3.14.1.tar.gz\nRUN tar zxf slepc-3.14.1.tar.gz && rm slepc-3.14.1.tar.gz\nENV SLEPC_DIR ${PWD}/slepc-3.14.1\nENV PETSC_ARCH real_mumps_seq\nRUN cd ${SLEPC_DIR} && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make\nENV PETSC_ARCH complex_mumps_seq\nRUN cd ${SLEPC_DIR} && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make\nENV PETSC_ARCH real_mumps_seq_shared\nRUN cd ${SLEPC_DIR} && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make\nENV PETSC_ARCH complex_mumps_seq_shared\nRUN cd ${SLEPC_DIR} && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make\n\n# -----------------------\n# MED\n# -----------------------\n\nRUN curl -f -L -O http://files.salome-platform.org/Salome/other/med-4.1.0.tar.gz && tar zxf med-4.1.0.tar.gz && cd med-4.1.0 && LIBS=-ldl ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-hdf5=/usr/local --enable-build-static --disable-shared --disable-python --disable-fortran --disable-tests --with-med_int=long && make -i install && cd .. && rm -rf med-4.1.0.tar.gz med-4.1.0\n\n# -----------------------\n# OpenCASCADE\n# -----------------------\n\nRUN curl -f -L -o occt.tgz \"https://git.dev.opencascade.org/gitweb/?p=occt.git;a=snapshot;h=refs/tags/V7_6_1;sf=tgz\" && tar xf occt.tgz && cd occt-* && mkdir build && cd build && CXXFLAGS=\"-fPIC -DIGNORE_NO_ATOMICS\" cmake -DCMAKE_BUILD_TYPE=Release -DBUILD_LIBRARY_TYPE=Static -DBUILD_MODULE_Draw=0 -DBUILD_MODULE_Visualization=0 -DBUILD_MODULE_ApplicationFramework=0 .. && make -j 4 && make install && cd ../.. && rm -rf occt.tgz occt-*\n\n# -----------------------\n# FLTK\n# -----------------------\n\nRUN git clone https://github.com/fltk/fltk.git && cd fltk && make makeinclude && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-localpng=no --enable-localzlib=no --enable-localjpeg=no && make -j 4 && make install && cd ../.. && rm -rf fltk\n\n# -----------------------\n# MMG\n# -----------------------\n\nRUN git clone https://github.com/MmgTools/mmg.git && cd mmg && mkdir build && cd build && cmake .. && make -j 4 && make install && cd .. && rm -rf mmg\n\n# -----------------------\n# Tweaks for static\n# -----------------------\n\n# instead of modifying the build scripts, hide the shared libs we don't want to\n# link to\n\nRUN mv /usr/local/lib64/libgfortran.so /usr/local/lib64/libgfortran_DISABLED_FOR_GMSH_STATIC_LINKING.so\nRUN mv /usr/local/lib64/libquadmath.so /usr/local/lib64/libquadmath_DISABLED_FOR_GMSH_STATIC_LINKING.so\n\n# don't statically link with libgomp - see #1467\n# RUN mv /usr/local/lib64/libgomp.so /usr/local/lib64/libgomp_DISABLED_FOR_GMSH_STATIC_LINKING.so\n\n# -----------------------\n# Minimal Gmsh library\n# -----------------------\n\n# \"docker build --build-arg REBUILD_GMSH=somethingnew\"\nARG REBUILD_GMSH=\n\nRUN git clone https://gitlab.onelab.info/gmsh/gmsh.git && cd gmsh && mkdir build && cd build && cmake -DDEFAULT=0 -DENABLE_PARSER=1 -DENABLE_POST=1 -DENABLE_PLUGINS=1 -DENABLE_ANN=1 -DENABLE_BLAS_LAPACK=1 -DENABLE_BUILD_LIB=1 -DENABLE_PRIVATE_API=1 .. && make -j 4 lib && make install/fast && cd ../.. && rm -rf gmsh\n\nVOLUME [\"/etc/gitlab-runner\"]\nRUN useradd -ms /bin/bash geuzaine\nUSER geuzaine\nWORKDIR /home/geuzaine\nRUN mkdir -p ~/.ssh\nRUN chmod 700 ~/.ssh\n"
}