{
  "startTime": 1674253424212,
  "endTime": 1674253425056,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 161
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 26,
        "columnEnd": 37
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.15.0\n\nLABEL maintainer=\"Adrien Ferrand <ferrand.ad@gmail.com>\"\n\nARG BACKUPPC_VERSION=\"4.4.0\"\nARG BACKUPPC_XS_VERSION=\"0.62\"\nARG RSYNC_BPC_VERSION=\"3.1.3.0\"\n\nENV BACKUPPC_VERSION=\"${BACKUPPC_VERSION}\"\nENV BACKUPPC_XS_VERSION=\"${BACKUPPC_XS_VERSION}\"\nENV RSYNC_BPC_VERSION=\"${RSYNC_BPC_VERSION}\"\n\n# Install backuppc runtime dependencies\nRUN apk --no-cache --update add \\\n        rsync tar bash shadow ca-certificates \\\n        supervisor \\\n        perl perl-archive-zip perl-xml-rss perl-cgi perl-file-listing perl-json-xs \\\n        expat samba-client iputils openssh openssl rrdtool ttf-dejavu \\\n        msmtp lighttpd lighttpd-mod_auth apache2-utils tzdata libstdc++ libgomp \\\n        gzip pigz \\\n && apk --no-cache --update -X http://dl-cdn.alpinelinux.org/alpine/edge/community add par2cmdline \\\n# Install backuppc build dependencies\n && apk --no-cache --update --virtual build-dependencies add \\\n        gcc g++ autoconf automake make git perl-dev acl-dev curl \\\n# Compile and install BackupPC:XS\n && git clone https://github.com/backuppc/backuppc-xs.git /root/backuppc-xs --branch $BACKUPPC_XS_VERSION \\\n && cd /root/backuppc-xs \\\n && perl Makefile.PL && make && make test && make install \\\n# Compile and install Rsync (BPC version)\n && git clone https://github.com/backuppc/rsync-bpc.git /root/rsync-bpc --branch $RSYNC_BPC_VERSION \\\n && cd /root/rsync-bpc && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make reconfigure && make && make install \\\n# Configure MSMTP for mail delivery (initially sendmail is a sym link to busybox)\n && rm -f /usr/sbin/sendmail \\\n && ln -s /usr/bin/msmtp /usr/sbin/sendmail \\\n# Disable strict host key checking\n && sed -i -e 's/^# Host \\*/Host */g' /etc/ssh/ssh_config \\\n && sed -i -e 's/^#   StrictHostKeyChecking ask/    StrictHostKeyChecking no/g' /etc/ssh/ssh_config \\\n# Get BackupPC, it will be installed at runtime to allow dynamic upgrade of existing config/pool\n && curl -f -o /root/BackupPC-$BACKUPPC_VERSION.tar.gz -L https://github.com/backuppc/backuppc/releases/download/$BACKUPPC_VERSION/BackupPC-$BACKUPPC_VERSION.tar.gz \\\n# Prepare backuppc home\n && mkdir -p /home/backuppc && cd /home/backuppc \\\n# Mark the docker as not run yet, to allow entrypoint to do its stuff\n && touch /firstrun \\\n# Clean\n && rm -rf /root/backuppc-xs /root/rsync-bpc /root/par2cmdline \\\n && apk del build-dependencies\n\nCOPY files/lighttpd.conf /etc/lighttpd/lighttpd.conf\nCOPY files/auth.conf /etc/lighttpd/auth.conf\nCOPY files/auth-ldap.conf /etc/lighttpd/auth-ldap.conf\nCOPY files/entrypoint.sh /entrypoint.sh\nCOPY files/supervisord.conf /etc/supervisord.conf\n\nEXPOSE 8080\n\nWORKDIR /home/backuppc\n\nVOLUME [\"/etc/backuppc\", \"/home/backuppc\", \"/data/backuppc\"]\n\nENTRYPOINT [\"/entrypoint.sh\"]\n\nCMD [\"/usr/bin/supervisord\", \"-c\", \"/etc/supervisord.conf\"]\n"
}