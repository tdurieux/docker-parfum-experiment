{
  "startTime": 1674248370616,
  "endTime": 1674248371745,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 89
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 34
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# All in one (monolith) Dockerfile, FastAPI serves static assets\n# NOTE: Keep steps in this Dockerfile synced with the individual frontend and backend Dockerfiles\n\nFROM ghcr.io/nocookie-analytics/nca-tracker:main as tracker-build-stage\n\nFROM node:15 as frontend-build-stage\n\nWORKDIR /app\n\nCOPY frontend/package.json frontend/yarn.lock /app/\n\nRUN yarn install --frozen-lockfile && yarn cache clean;\n\nCOPY ./frontend /app/\n\nARG FRONTEND_ENV=production\n\nENV VUE_APP_ENV=${FRONTEND_ENV}\n\nRUN NODE_ENV=production yarn build\n\n\nFROM tiangolo/uvicorn-gunicorn-fastapi:python3.8\n\nWORKDIR /app/\n\nRUN curl -f -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | POETRY_HOME=/opt/poetry python && \\\n    cd /usr/local/bin && \\\n    ln -s /opt/poetry/bin/poetry && \\\n    poetry config virtualenvs.create false\n\nCOPY ./backend/app/pyproject.toml ./backend/app/poetry.lock* /app/\n\nRUN poetry install --no-root --no-dev\n\nCOPY ./backend/app /app\n\nCOPY --from=frontend-build-stage /app/dist /app/assets\n\nCOPY --from=tracker-build-stage /usr/share/nginx/html/latest.js /app/assets\n\nENV PYTHONPATH=/app\n"
}