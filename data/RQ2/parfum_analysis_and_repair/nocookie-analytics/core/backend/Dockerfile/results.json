{
  "startTime": 1674248218838,
  "endTime": 1674248219379,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 89
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# NOTE: Keep steps in this file in sync with the monolith Dockerfile in the root directory\nFROM tiangolo/uvicorn-gunicorn-fastapi:python3.8\n\n# Allow installing dev dependencies to run tests\nARG INSTALL_DEV=false\n\n# For development, Jupyter remote kernel, Hydrogen\n# Using inside the container:\n# jupyter lab --ip=0.0.0.0 --allow-root --NotebookApp.custom_display_url=http://127.0.0.1:8888\nARG INSTALL_JUPYTER=false\n\nWORKDIR /app/\n\n# Install Poetry\nRUN curl -f -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | POETRY_HOME=/opt/poetry python && \\\n    cd /usr/local/bin && \\\n    ln -s /opt/poetry/bin/poetry && \\\n    poetry config virtualenvs.create false\n\n# Copy poetry.lock* in case it doesn't exist in the repo\nCOPY ./app/pyproject.toml ./app/poetry.lock* /app/\n\nRUN bash -c \"if [ $INSTALL_DEV == 'true' ] ; then poetry install --no-root ; else poetry install --no-root --no-dev ; fi\"\n\nRUN bash -c \"if [ $INSTALL_JUPYTER == 'true' ] ; then pip install jupyterlab ; fi\"\n\nCOPY ./app /app\nENV PYTHONPATH=/app\n"
}