{
  "startTime": 1674255742005,
  "endTime": 1674255743202,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 81
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 6,
        "columnEnd": 64
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 25,
        "columnEnd": 134
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 27,
        "columnEnd": 62
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 25,
        "columnEnd": 134
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 27,
        "columnEnd": 62
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM golang:1.18-stretch\n\nRUN echo \"deb http://deb.debian.org/debian stretch-backports main\" >> /etc/apt/sources.list && \\\n    apt-get update -y && apt-get install --no-install-recommends -y apt-transport-https ca-certificates gnupg unzip git openssl curl zsh emacs vim locales-all && \\\n    apt-get install --no-install-recommends -t stretch-backports -y tmux && rm -rf /var/lib/apt/lists/*;\n\nARG HELM_VERSION=3.7.0\nARG TERRAFORM_VERSION=1.0.7\n\n# install kubectl, helm and terraform\n# ENV BASE_URL=\"https://storage.googleapis.com/kubernetes-helm\"\nENV BASE_URL=\"https://get.helm.sh\"\nENV TAR_FILE=\"helm-v${HELM_VERSION}-linux-amd64.tar.gz\"\n\nARG KUBECTL_VERSION='1.22.1'\nADD https://storage.googleapis.com/kubernetes-release/release/v${KUBECTL_VERSION}/bin/linux/amd64/kubectl /usr/local/bin/kubectl\n\nRUN curl -f -L ${BASE_URL}/${TAR_FILE} | tar xvz && \\\n    mv linux-amd64/helm /usr/local/bin/helm && \\\n    wget https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip && \\\n    unzip terraform_${TERRAFORM_VERSION}_linux_amd64.zip -d /usr/local/bin && \\\n    chmod +x /usr/local/bin/helm && \\\n    chmod +x /usr/local/bin/terraform && \\\n    chmod +x /usr/local/bin/kubectl && \\\n    kubectl --help && terraform version && helm version\n\n# install azure cli\nRUN curl -f -sL https://aka.ms/InstallAzureCLIDeb | bash -s -- -y && \\\n      az --help\n\n# install awscli\nRUN curl -f https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip -o awscliv2.zip && \\\n      unzip awscliv2.zip && \\\n      ./aws/install -i /usr/local/aws-cli -b /usr/local/bin && \\\n      aws --version\n\n# install gcloud\nRUN echo \"deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main\" | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list && \\\n      curl -f https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key --keyring /usr/share/keyrings/cloud.google.gpg add - && \\\n      apt-get update -y && apt-get install --no-install-recommends -y google-cloud-sdk && \\\n      gcloud --help && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /root\n\nENV TERM=xterm-256color\nENV LC_ALL=en_US.UTF-8\nENV LANG=en_US.UTF-8\nRUN git clone https://github.com/powerline/fonts.git --depth=1 && \\\n      sh fonts/install.sh && \\\n      rm -rf fonts\n\nWORKDIR $GOPATH/src/plural/\nRUN useradd -ms /bin/bash plural\n\nCOPY . .\nRUN make build-cli OUTFILE=/go/bin/plural && \\\n      cp /go/bin/plural /usr/local/bin/plural && \\\n      plural --help && \\\n      cp start-session.sh /usr/local/bin/start-session.sh && \\\n      chmod +x /usr/local/bin/start-session.sh\n\nWORKDIR /home/plural\nUSER plural\n\nCOPY tmux /home/plural/tmux\nCOPY welcome.txt /home/plural/welcome.txt\nRUN sh -c \"$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)\" && \\ \n      cp tmux/.tmux.conf /home/plural/.tmux.conf && \\ \n      cp tmux/.tmux.conf.local /home/plural/.tmux.conf.local && \\\n      cat tmux/.zshrc.local >> /home/plural/.zshrc && \\\n      helm plugin install https://github.com/pluralsh/helm-push && \\\n      helm plugin install https://github.com/databus23/helm-diff\n\nENV GIT_SSH_COMMAND=\"ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no\"\nENV GOOGLE_APPLICATION_CREDENTIALS=/home/plural/gcp.json\nCMD eval $(ssh-agent -s); plural serve\n"
}