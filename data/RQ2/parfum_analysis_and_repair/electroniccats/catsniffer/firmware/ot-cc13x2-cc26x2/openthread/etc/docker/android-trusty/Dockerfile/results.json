{
  "startTime": 1674253942681,
  "endTime": 1674253943486,
  "originalSmells": [
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 42,
        "lineEnd": 49,
        "columnStart": 25,
        "columnEnd": 12
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n#  Copyright (c) 2020, The OpenThread Authors.\n#  All rights reserved.\n#\n#  Redistribution and use in source and binary forms, with or without\n#  modification, are permitted provided that the following conditions are met:\n#  1. Redistributions of source code must retain the above copyright\n#     notice, this list of conditions and the following disclaimer.\n#  2. Redistributions in binary form must reproduce the above copyright\n#     notice, this list of conditions and the following disclaimer in the\n#     documentation and/or other materials provided with the distribution.\n#  3. Neither the name of the copyright holder nor the\n#     names of its contributors may be used to endorse or promote products\n#     derived from this software without specific prior written permission.\n#\n#  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n#  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n#  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n#  ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n#  LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n#  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n#  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n#  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n#  CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n#  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n#  POSSIBILITY OF SUCH DAMAGE.\n#\n\n#\n# Ubuntu 14.04 with tools required to run OpenThread Android check\n#\n\nFROM ubuntu:14.04\n\nENV DEBIAN_FRONTEND noninteractive\nENV ANDROID_JAVA_HOME=/usr/lib/jvm/java-6-openjdk-amd64\nENV OPT_BIN=/opt/bin\nENV PATH=$OPT_BIN:$PATH\nENV ANDROID_NDK_PATH=/opt/ndk-bundle\n\nWORKDIR /build\n\nRUN apt-get -y update && apt-get --no-install-recommends install -y \\\n        gcc-multilib \\\n        g++-multilib \\\n        git \\\n        make \\\n        python \\\n        unzip \\\n        wget && rm -rf /var/lib/apt/lists/*;\n\nRUN wget https://dl.google.com/android/repository/android-ndk-r17c-linux-x86_64.zip \\\n        && unzip android-ndk-r17c-linux-x86_64.zip > /dev/null \\\n        && mv android-ndk-r17c $ANDROID_NDK_PATH \\\n        && rm android-ndk-r17c-linux-x86_64.zip\n\n# Android build system\nRUN mkdir build && cd build && git init && git pull --depth 1 https://android.googlesource.com/platform/build 2db32730e79cafcf13e1f898a7bee7f82b0449d6\nRUN ln -s build/core/main.mk Makefile\n\nRUN mkdir /opt/bin\n\n# Workarounds for java checking\nRUN printf '#!/bin/sh\\n\\\necho java version \\\\\"1.6\\\\\"'\\\n> $OPT_BIN/java \\\n    && printf '#!/bin/sh\\n\\\necho javac \\\\\"1.6\\\\\"'\\\n> $OPT_BIN/javac \\\n    && chmod a+x $OPT_BIN/java $OPT_BIN/javac \\\n    && mkdir -p /usr/lib/jvm/java-6-openjdk-amd64/lib/ \\\n    && touch /usr/lib/jvm/java-6-openjdk-amd64/lib/tools.jar\n\n# Files for building ndk\n# The default libstdc++.so does not contain full stl implementation, see https://developer.android.com/ndk/guides/cpp-support\nRUN mkdir -p system/core/include/arch/linux-arm \\\n    && touch system/core/include/arch/linux-arm/AndroidConfig.h \\\n    && mkdir -p system/core/include/arch/linux-x86 \\\n    && touch system/core/include/arch/linux-x86/AndroidConfig.h \\\n    && mkdir -p bionic/libc/ \\\n    && cp -r \"$ANDROID_NDK_PATH\"/sysroot/usr/include bionic/libc/include \\\n    && mv bionic/libc/include/arm-linux-androideabi/asm bionic/libc/include/asm \\\n    && mkdir -p out/target/product/generic/obj/ \\\n    && cp -r \"$ANDROID_NDK_PATH\"/platforms/android-27/arch-arm/usr/lib out/target/product/generic/obj/ \\\n    && mkdir -p bionic/libstdc++ \\\n    && cp -r \"$ANDROID_NDK_PATH\"/sources/cxx-stl/gnu-libstdc++/4.9/include bionic/libstdc++ \\\n    && cp -r \"$ANDROID_NDK_PATH\"/sources/cxx-stl/gnu-libstdc++/4.9/libs/armeabi-v7a/include/* bionic/libstdc++/include \\\n    && cp \"$ANDROID_NDK_PATH\"/sources/cxx-stl/gnu-libstdc++/4.9/libs/armeabi-v7a/libgnustl_shared.so out/target/product/generic/obj/lib/libstdc++.so \\\n    && printf \"TARGET_PRODUCT := generic\\n\\\nTARGET_BUILD_VARIANT := eng\\n\\\nTARGET_BUILD_TYPE := release\\n\\\nTARGET_TOOLS_PREFIX := $ANDROID_NDK_PATH/toolchains/arm-linux-androideabi-4.9/prebuilt/linux-x86_64/bin/arm-linux-androideabi-\"\\\n> buildspec.mk\n\nRUN rm -rf \"$ANDROID_NDK_PATH\"/platforms\nRUN rm -rf \"$ANDROID_NDK_PATH\"/prebuilt\nRUN rm -rf \"$ANDROID_NDK_PATH\"/shader-tools\nRUN rm -rf \"$ANDROID_NDK_PATH\"/sources\nRUN rm -rf \"$ANDROID_NDK_PATH\"/sysroot\nRUN rm -rf \"$ANDROID_NDK_PATH\"/simpleperf\nRUN cd \"$ANDROID_NDK_PATH\"/toolchains && rm -rf aarch64-linux-android-4.9 llvm mips64el-linux-android-4.9 mipsel-linux-android-4.9 x86-4.9 x86_64-4.9\nRUN apt-get purge -y unzip wget git && apt-get -y autoremove && apt-get -y clean && rm -rf /var/lib/apt/lists/*\n\nCMD [\"bash\"]\n\n"
}