{
  "startTime": 1674248927261,
  "endTime": 1674248928696,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 7,
        "columnEnd": 114
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 7,
        "columnEnd": 52
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 7,
        "columnEnd": 31
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 7,
        "columnEnd": 92
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 7,
        "columnEnd": 81
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 7,
        "columnEnd": 62
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 7,
        "columnEnd": 59
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 7,
        "columnEnd": 92
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 7,
        "columnEnd": 81
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 7,
        "columnEnd": 62
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 7,
        "columnEnd": 92
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 7,
        "columnEnd": 81
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 7,
        "columnEnd": 62
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Neurodocker version 0.4.0\nFROM neurodebian:stretch-non-free\n\nARG DEBIAN_FRONTEND=\"noninteractive\"\n\n# Libraries needed to compile python\nRUN apt-get update -qq \\\n    && apt-get install -y --no-install-recommends -qq build-essential libbz2-dev zlib1g-dev libncurses5-dev libgdbm-dev \\\n    && apt-get install -y --no-install-recommends -qq libnss3-dev libssl-dev libreadline-dev libffi-dev wget \\\n    && apt-get install -y --no-install-recommends -qq software-properties-common git curl && rm -rf /var/lib/apt/lists/*;\n\n# Compiling python 3.7\nRUN cd /usr/src \\\n    && wget -q https://www.python.org/ftp/python/3.7.9/Python-3.7.9.tgz \\\n    && tar xzf Python-3.7.9.tgz \\\n    && cd Python-3.7.9 \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-optimizations >/dev/null \\\n    && make install > /dev/null && rm Python-3.7.9.tgz\n\n# Install fsl (needed for bet and flirt)\nRUN apt-get update -qq \\\n    && apt-get install -y -qq --no-install-recommends fsl-core \\\n    && apt-get clean -qq \\\n    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\nRUN pip3.7 install -q --upgrade pip \\\n    && pip3.7 install -q wheel numpy scipy nilearn matplotlib scikit-image nibabel dipy fury joblib seaborn cython \\\n    && pip3.7 install -q torch==1.6.0+cpu -f https://download.pytorch.org/whl/torch_stable.html\n\nRUN mkdir -p ~/.tractseg \\\n    && mkdir -p /code \\\n    && curl -f -sSL -o /code/mrtrix3_RC3.tar.gz https://zenodo.org/record/1415322/files/mrtrix3_RC3.tar.gz?download=1\n\nRUN tar -zxf /code/mrtrix3_RC3.tar.gz -C code \\\n    && /code/mrtrix3/set_path && rm /code/mrtrix3_RC3.tar.gz\n\n# Uncomment if we want to rebuild the following commands (otherwise using cache)\n#RUN echo \"rebuild\"\n\nRUN pip3.7 install -q --upgrade https://github.com/MIC-DKFZ/TractSeg/archive/master.zip\n\n# Sometimes fails if running everything from cache -> uncomment line \"RUN echo 'rebuild'\"\nRUN download_all_pretrained_weights\n\n# Setup environment (make all commands available)\nENV ND_ENTRYPOINT=\"/code/startup.sh\"\nRUN touch \"$ND_ENTRYPOINT\" \\\n    && echo '#!/bin/bash' >> \"$ND_ENTRYPOINT\"  \\\n    && echo 'set -e' >> \"$ND_ENTRYPOINT\" \\\n    && echo 'source /etc/fsl/fsl.sh' >> \"$ND_ENTRYPOINT\" \\\n    && echo 'export PATH=/code/mrtrix3/bin:$PATH' >> \"$ND_ENTRYPOINT\" \\\n    && echo 'exec \"$@\"' >> \"$ND_ENTRYPOINT\" \\\n    && chmod -R 777 /code && chmod a+s /code\n\n# This will be executed. Arguments passed on the command line will be passed as arguments to this\n# script. So in this script we first setup the environment and then we execute (using exec) the\n# commands which were provided on the command line (available via $@)\nENTRYPOINT [\"/code/startup.sh\"]\n"
}