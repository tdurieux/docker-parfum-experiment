{
  "startTime": 1674251012770,
  "endTime": 1674251013962,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 49
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# First stage: build front app\nFROM node:12.14-alpine AS node\n\nWORKDIR /code\n\nCOPY ./frontend/package.json ./frontend/yarn.lock /code/\nRUN yarn install --pure-lockfile --ignore-scripts && yarn cache clean;\n\nCOPY ./frontend/ /code/\nRUN yarn build\n\n# Second stage: build base backend\nFROM python:3.8-alpine AS backend\n\n\n\n# Allow heroku exec\nRUN apk add --no-cache curl postgresql-dev openssh bash\n\n\nADD ./.profile.d /app/.profile.d\nADD ./sh-wrapper.sh /bin/sh-wrapper.sh\nCOPY ./*.sh /code/\n\nRUN chmod a+x /app/.profile.d/heroku-exec.sh && \\\n  chmod a+x /bin/sh-wrapper.sh && \\\n  chmod a+x /code/*.sh && \\\n  rm /bin/sh && \\\n  ln -s /bin/sh-wrapper.sh /bin/sh\n\nENV DJANGO_SETTINGS_MODULE root.settings.prod\nENV PYTHONPATH /code\nENV PIP_NO_CACHE_DIR true\n\nRUN pip3 install --no-cache-dir pipenv gunicorn\n\nWORKDIR /code\n\nCOPY ./backend/Pipfile* /code/\nRUN apk add --no-cache --virtual build-dependencies gcc musl-dev python3-dev libffi-dev openssl-dev cargo curl-dev && \\\n  pipenv install --system --deploy && \\\n  apk del build-dependencies\n\nRUN addgroup -S pythongroup && \\\n  adduser -S pythonuser -G pythongroup --uid 2000 && \\\n  chown -R pythonuser:pythongroup /code\nUSER pythonuser\n\nCOPY --from=node /code/build /code/front/static/front\n\nCOPY ./backend /code/\n\n# Collect statics\nRUN mkdir -p /code/static && SECRET_KEY=notused python ./manage.py collectstatic --no-input\n"
}