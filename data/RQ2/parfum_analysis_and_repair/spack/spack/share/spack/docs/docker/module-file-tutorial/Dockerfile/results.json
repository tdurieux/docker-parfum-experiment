{
  "startTime": 1674215909253,
  "endTime": 1674215910187,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 71
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04\n\n# General environment for docker\nENV DEBIAN_FRONTEND=noninteractive \\\n    SPACK_ROOT=/usr/local\n\n# Install system packages\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n       autoconf \\\n       build-essential \\\n       ca-certificates \\\n       coreutils \\\n       curl man less \\\n       emacs-nox vim nano \\\n       git \\\n       openmpi-bin openmpi-common libopenmpi-dev \\\n       python \\\n       unzip \\\n    &&  rm -rf /var/lib/apt/lists/*\n\n# Load spack environment on login\nCOPY spack.sh /etc/profile\n\n# Install spack\nRUN curl -f -s -L https://api.github.com/repos/spack/spack/tarball/develop \\\n    | tar xzC $SPACK_ROOT --strip 1\n\n# Copy configuration for external packages\nCOPY packages.yaml $SPACK_ROOT/etc/spack/\n\n# Build lmod\nRUN spack install lmod && spack clean -a\n\n# Build a compiler\nRUN spack install gcc@7.2.0 && spack clean -a\nRUN /bin/bash -l -c ' \\\n    spack compiler add $(spack location -i gcc@7.2.0)/bin'\n\n# Build the software on top of the compiler\nRUN spack install netlib-scalapack ^openmpi ^openblas %gcc@7.2.0 \\\n    && spack install netlib-scalapack ^mpich ^openblas %gcc@7.2.0 \\\n    && spack install netlib-scalapack ^openmpi ^netlib-lapack %gcc@7.2.0 \\\n    && spack install netlib-scalapack ^mpich ^netlib-lapack %gcc@7.2.0 \\\n    && spack install py-scipy ^openblas \\\n    && spack clean -a\n\n# image run hook: the -l will make sure /etc/profile environments are loaded\nCMD /bin/bash -l\n"
}