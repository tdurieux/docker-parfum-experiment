{
  "startTime": 1674219008530,
  "endTime": 1674219009844,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 74,
        "lineEnd": 74,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 102,
        "lineEnd": 102,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 66,
        "lineEnd": 71,
        "columnStart": 4,
        "columnEnd": 11
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 20,
        "lineEnd": 25,
        "columnStart": 22,
        "columnEnd": 11
      }
    }
  ],
  "repairedDockerfile": "#\n# SPDX-License-Identifier: BSD-3-Clause\n# Copyright 2016-2022, Intel Corporation\n#\n\n#\n# Dockerfile - a 'recipe' for Docker to build an image of ubuntu-based\n#              environment prepared for running tests of librpma.\n#\n\n# Pull base image\nFROM ubuntu:21.10\nMAINTAINER tomasz.gromadzki@intel.com\n\nENV DEBIAN_FRONTEND noninteractive\n\n# Additional parameters to build docker without building components\nARG SKIP_SCRIPTS_DOWNLOAD\n\n# Update the Apt cache and install basic tools\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n\t$BASE_DEPS \\\n\t$EXAMPLES_DEPS \\\n\t$TOOLS_DEPS \\\n\t$TESTS_DEPS \\\n\t$RPMA_DEPS \\\n&& rm -rf /var/lib/apt/lists/*# base deps\nENV BASE_DEPS \"\\\n\tapt-utils \\\n\tbuild-essential \\\n\tclang \\\n\tdevscripts \\\n\tgit \\\n\tpkg-config \\\n\tsudo \\\n\twhois\"\n\nENV EXAMPLES_DEPS \"\\\n\tlibpmem-dev \\\n\tlibprotobuf-c-dev\"\n\nENV TOOLS_DEPS \"\\\n\tpython3-jinja2\"\n\nENV TESTS_DEPS \"\\\n\tpylint3 \\\n\tpython3-pip \\\n\tpython3-pytest\"\n\nENV PYTHON_DEPS \"\\\n\tcoverage \\\n\tdeepdiff \\\n\tmarkdown2 \\\n\tmatplotlib \\\n\tparamiko \\\n\tscp\"\n\n# RPMA deps\nENV RPMA_DEPS \"\\\n\tcmake \\\n\tcurl \\\n\tgawk \\\n\tgroff \\\n\tgraphviz \\\n\tlibibverbs-dev \\\n\tlibrdmacm-dev \\\n\tlibunwind-dev \\\n\tpandoc\"\n\n# Install all required packages\n\n\n\n\n\n\n\n\nRUN pip3 install --no-cache-dir --upgrade pip\n\n# Install cmocka\nCOPY install-cmocka.sh install-cmocka.sh\nRUN ./install-cmocka.sh\n\n# Install txt2man\nCOPY install-txt2man.sh install-txt2man.sh\nRUN ./install-txt2man.sh\n\n# Download scripts required in run-*.sh\nCOPY download-scripts.sh download-scripts.sh\nCOPY 0001-fix-generating-gcov-files-and-turn-off-verbose-log.patch 0001-fix-generating-gcov-files-and-turn-off-verbose-log.patch\nRUN ./download-scripts.sh\n\n# Add user\nENV USER user\nENV USERPASS p1a2s3s4\nRUN useradd -m $USER -g sudo -p `mkpasswd $USERPASS`\nUSER $USER\n\n# Set required environment variables\nENV OS ubuntu\nENV OS_VER 21.10\nENV PACKAGE_MANAGER deb\nENV NOTTY 1\n\n# install python modules for the default user\nRUN pip3 install --no-cache-dir --user $PYTHON_DEPS\n"
}