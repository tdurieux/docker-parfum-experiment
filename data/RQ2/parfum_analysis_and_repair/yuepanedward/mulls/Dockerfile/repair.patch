diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/yuepanedward/mulls/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/yuepanedward/mulls/Dockerfile/repaired.Dockerfile
index c722473..a4ebe70 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/yuepanedward/mulls/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/yuepanedward/mulls/Dockerfile/repaired.Dockerfile
@@ -2,30 +2,30 @@ ARG UBUNTU_VERSION=20.04
 FROM ubuntu:${UBUNTU_VERSION} AS prereqs
 
 RUN apt-get update && \
-      DEBIAN_FRONTEND=noninteractive apt-get -y install sudo python3-pip apt-utils build-essential git wget checkinstall \
+      DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends -y install sudo python3-pip apt-utils build-essential git wget checkinstall \
           protobuf-compiler libprotobuf-dev libgoogle-glog-dev libgflags-dev \
           libeigen3-dev libboost-thread-dev libpcl-dev libproj-dev libatlas-base-dev libsuitesparse-dev \
-          libgeotiff-dev libopencv-dev libhdf5-serial-dev libopenmpi-dev openmpi-bin libhdf5-openmpi-dev
+          libgeotiff-dev libopencv-dev libhdf5-serial-dev libopenmpi-dev openmpi-bin libhdf5-openmpi-dev && rm -rf /var/lib/apt/lists/*;
 
 RUN useradd -m docker && echo "docker:docker" | chpasswd && adduser docker sudo
 
 WORKDIR /mulls
 
 # install newest cmake
-RUN apt-get install -y apt-transport-https ca-certificates gnupg software-properties-common wget && \
-    wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null | gpg --dearmor - | tee /etc/apt/trusted.gpg.d/kitware.gpg >/dev/null && \
+RUN apt-get install --no-install-recommends -y apt-transport-https ca-certificates gnupg software-properties-common wget && \
+    wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null | gpg --batch --dearmor - | tee /etc/apt/trusted.gpg.d/kitware.gpg >/dev/null && \
     apt-add-repository "deb https://apt.kitware.com/ubuntu/ $(lsb_release -cs) main" && \
     apt-get update && \
-    apt-get install -y cmake cmake-curses-gui
+    apt-get install --no-install-recommends -y cmake cmake-curses-gui && rm -rf /var/lib/apt/lists/*;
 
 # install newest clang
 RUN wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \
     apt-add-repository "deb http://apt.llvm.org/$(lsb_release -cs)/ llvm-toolchain-$(lsb_release -cs) main" && \
     apt-get update && \
-    apt-get install -y clang
+    apt-get install --no-install-recommends -y clang && rm -rf /var/lib/apt/lists/*;
 
 # install newer Eigen for TEASER++ and others
-RUN wget 'http://de.archive.ubuntu.com/ubuntu/pool/universe/e/eigen3/libeigen3-dev_3.3.7-2_all.deb' && \
+RUN wget 'https://de.archive.ubuntu.com/ubuntu/pool/universe/e/eigen3/libeigen3-dev_3.3.7-2_all.deb' && \
     dpkg -i libeigen3-dev_3.3.7-2_all.deb && \
     rm *.deb
 
@@ -53,7 +53,7 @@ RUN rm -rf build && \
     cmake .. -DBUILD_WITH_SOPHUS=ON -DBUILD_WITH_PROJ4=ON -DBUILD_WITH_LIBLAS=ON -DCMAKE_CXX_COMPILER=${CXX_COMPILER} && \
     make -j${NPROC}
 
-RUN apt-get install -y xvfb
+RUN apt-get install --no-install-recommends -y xvfb && rm -rf /var/lib/apt/lists/*;
 RUN sed -i 's/real_time_viewer_on=1/real_time_viewer_on=0/g' script/run_mulls_slam.sh
 ENTRYPOINT ["/usr/bin/xvfb-run", "-a", "-s", "-screen 0 1024x768x24"]
 CMD ["script/run_mulls_slam.sh"]