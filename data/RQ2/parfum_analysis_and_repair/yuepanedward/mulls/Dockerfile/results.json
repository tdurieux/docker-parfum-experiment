{
  "startTime": 1674254059516,
  "endTime": 1674254060411,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 99
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 84,
        "columnEnd": 99
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 7,
        "columnStart": 6,
        "columnEnd": 104
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 96
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 96
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 7,
        "columnStart": 6,
        "columnEnd": 104
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 96
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 27
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 120
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 51
      }
    }
  ],
  "repairedDockerfile": "ARG UBUNTU_VERSION=20.04\nFROM ubuntu:${UBUNTU_VERSION} AS prereqs\n\nRUN apt-get update && \\\n      DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends -y install sudo python3-pip apt-utils build-essential git wget checkinstall \\\n          protobuf-compiler libprotobuf-dev libgoogle-glog-dev libgflags-dev \\\n          libeigen3-dev libboost-thread-dev libpcl-dev libproj-dev libatlas-base-dev libsuitesparse-dev \\\n          libgeotiff-dev libopencv-dev libhdf5-serial-dev libopenmpi-dev openmpi-bin libhdf5-openmpi-dev && rm -rf /var/lib/apt/lists/*;\n\nRUN useradd -m docker && echo \"docker:docker\" | chpasswd && adduser docker sudo\n\nWORKDIR /mulls\n\n# install newest cmake\nRUN apt-get install --no-install-recommends -y apt-transport-https ca-certificates gnupg software-properties-common wget && \\\n    wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null | gpg --batch --dearmor - | tee /etc/apt/trusted.gpg.d/kitware.gpg >/dev/null && \\\n    apt-add-repository \"deb https://apt.kitware.com/ubuntu/ $(lsb_release -cs) main\" && \\\n    apt-get update && \\\n    apt-get install --no-install-recommends -y cmake cmake-curses-gui && rm -rf /var/lib/apt/lists/*;\n\n# install newest clang\nRUN wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \\\n    apt-add-repository \"deb http://apt.llvm.org/$(lsb_release -cs)/ llvm-toolchain-$(lsb_release -cs) main\" && \\\n    apt-get update && \\\n    apt-get install --no-install-recommends -y clang && rm -rf /var/lib/apt/lists/*;\n\n# install newer Eigen for TEASER++ and others\nRUN wget 'https://de.archive.ubuntu.com/ubuntu/pool/universe/e/eigen3/libeigen3-dev_3.3.7-2_all.deb' && \\\n    dpkg -i libeigen3-dev_3.3.7-2_all.deb && \\\n    rm *.deb\n\nRUN if [ $(lsb_release -cs) = xenial ]; then \\\n        python3 -m pip install pip==20.3.4; \\\n    else \\\n        python3 -m pip install --upgrade pip; \\\n    fi\n\nADD script/tools/install_dep_lib.sh script/tools/install_dep_lib.sh\nADD python/requirements.txt python/requirements.txt\n\nARG NPROC=\"\"\n\nRUN DEBIAN_FRONTEND=noninteractive NPROC=${NPROC} bash script/tools/install_dep_lib.sh\n\nFROM prereqs\n\nADD . .\n\nARG CXX_COMPILER=clang++\nRUN rm -rf build && \\\n    mkdir build && \\\n    cd build && \\\n    cmake .. -DBUILD_WITH_SOPHUS=ON -DBUILD_WITH_PROJ4=ON -DBUILD_WITH_LIBLAS=ON -DCMAKE_CXX_COMPILER=${CXX_COMPILER} && \\\n    make -j${NPROC}\n\nRUN apt-get install --no-install-recommends -y xvfb && rm -rf /var/lib/apt/lists/*;\nRUN sed -i 's/real_time_viewer_on=1/real_time_viewer_on=0/g' script/run_mulls_slam.sh\nENTRYPOINT [\"/usr/bin/xvfb-run\", \"-a\", \"-s\", \"-screen 0 1024x768x24\"]\nCMD [\"script/run_mulls_slam.sh\"]\n\n# /usr/bin/xvfb-run -a -s '-screen 0 1024x768x24' script/run_mulls_slam.sh\n"
}