{
  "startTime": 1674215735665,
  "endTime": 1674215737048,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 5,
        "columnEnd": 37
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM dhermes/python-multi:latest\n\n# Install the current versions of CMake, nox and NumPy.\nRUN python3.10 -m pip install --no-cache-dir \\\n  \"cmake == 3.21.4\" \\\n  \"nox == 2021.10.1\" \\\n  \"numpy == 1.21.4\" \\\n  \"argcomplete==1.12.3\" \\\n  \"backports.entry-points-selectable==1.1.1\" \\\n  \"colorlog==6.6.0\" \\\n  \"distlib==0.3.3\" \\\n  \"filelock==3.3.2\" \\\n  \"packaging==21.2\" \\\n  \"platformdirs==2.4.0\" \\\n  \"py==1.11.0\" \\\n  \"pyparsing==2.4.7\" \\\n  \"six==1.16.0\" \\\n  \"virtualenv==20.10.0\"\n\n# Install `gfortran` (for building the Fortran code used by the binary\n# extension), `libatlas-base-dev`, `libblas-dev`, `liblapack-dev` (for SciPy)\n# and `lcov` for Fortran code coverage.\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends \\\n    gfortran \\\n    libatlas-base-dev \\\n    libblas-dev \\\n    liblapack-dev \\\n    lcov \\\n  && apt-get clean autoclean \\\n  && apt-get autoremove -y \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && rm -f /var/cache/apt/archives/*.deb\n\n# Build NumPy and SciPy wheels for PyPy 3 since it takes a bit of time.\nENV WHEELHOUSE=/wheelhouse\nRUN mkdir ${WHEELHOUSE}\nRUN set -ex \\\n  && virtualenv --python=pypy3 pypy3-env \\\n  && pypy3-env/bin/python -m pip install --upgrade pip wheel \\\n  && pypy3-env/bin/python -m pip wheel --wheel-dir=${WHEELHOUSE} \"numpy == 1.21.4\" \\\n  && pypy3-env/bin/python -m pip install ${WHEELHOUSE}/numpy*.whl \\\n  && pypy3-env/bin/python -m pip wheel --wheel-dir=${WHEELHOUSE} \"scipy == 1.7.2\" \\\n  && rm -fr pypy3-env\n\n# Install Docker CLI (used to build `manylinux` wheel for `nox --session doctest`).\n# Via: https://docs.docker.com/install/linux/docker-ce/ubuntu/\n# Includes a diagnostic-only use of `apt-key fingerprint`.\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends \\\n    apt-transport-https \\\n    ca-certificates \\\n    curl \\\n    gnupg-agent \\\n    software-properties-common \\\n  && curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add - \\\n  && apt-key fingerprint 0EBFCD88 \\\n  && add-apt-repository \\\n    \"deb [arch=amd64] https://download.docker.com/linux/ubuntu \\\n    $(lsb_release -cs) \\\n    stable\" \\\n  && apt-get update \\\n  && apt-get install --no-install-recommends -y docker-ce-cli \\\n  && apt-get clean autoclean \\\n  && apt-get autoremove -y \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && rm -f /var/cache/apt/archives/*.deb\n"
}