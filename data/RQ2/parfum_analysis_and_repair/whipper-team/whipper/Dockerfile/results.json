{
  "startTime": 1674252657289,
  "endTime": 1674252658252,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 82
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 100
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 7,
        "columnEnd": 103
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 7,
        "columnEnd": 89
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:buster\nARG optical_gid\nARG uid=1000\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    autoconf \\\n    automake \\\n    cdrdao \\\n    bzip2 \\\n    curl \\\n    eject \\\n    flac \\\n    gir1.2-glib-2.0 \\\n    git \\\n    libdiscid0 \\\n    libiso9660-dev \\\n    libsndfile1-dev \\\n    libtool \\\n    locales \\\n    make \\\n    pkgconf \\\n    python3-dev \\\n    python3-gi \\\n    python3-musicbrainzngs \\\n    python3-mutagen \\\n    python3-pil \\\n    python3-pip \\\n    python3-ruamel.yaml \\\n    python3-setuptools \\\n    sox \\\n    swig \\\n    && apt-get clean && rm -rf /var/lib/apt/lists/* \\\n    && pip3 --no-cache-dir install pycdio==2.1.0 discid\n\n# libcdio-paranoia / libcdio-utils are wrongfully packaged in Debian, thus built manually\n# see https://github.com/whipper-team/whipper/pull/237#issuecomment-367985625\nENV LIBCDIO_VERSION 2.1.0\nRUN curl -f -o - \"https://ftp.gnu.org/gnu/libcdio/libcdio-${LIBCDIO_VERSION}.tar.bz2\" | tar jxf - \\\n    && cd libcdio-${LIBCDIO_VERSION} \\\n    && autoreconf -fi \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --disable-dependency-tracking --disable-cxx --disable-example-progs --disable-static \\\n    && make install \\\n    && cd .. \\\n    && rm -rf libcdio-${LIBCDIO_VERSION}\n\n# Install cd-paranoia from tarball\nENV LIBCDIO_PARANOIA_VERSION 10.2+2.0.1\nRUN curl -f -o - \"https://ftp.gnu.org/gnu/libcdio/libcdio-paranoia-${LIBCDIO_PARANOIA_VERSION}.tar.bz2\" | tar jxf - \\\n    && cd libcdio-paranoia-${LIBCDIO_PARANOIA_VERSION} \\\n    && autoreconf -fi \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --disable-dependency-tracking --disable-example-progs --disable-static \\\n    && make install \\\n    && cd .. \\\n    && rm -rf libcdio-paranoia-${LIBCDIO_PARANOIA_VERSION}\n\nRUN ldconfig\n\n# add user (+ group workaround for ArchLinux)\nRUN useradd -m worker --uid ${uid} -G cdrom \\\n    && if [ -n \"${optical_gid}\" ]; then groupadd -f -g \"${optical_gid}\" optical \\\n    && usermod -a -G optical worker; fi \\\n    && mkdir -p /output /home/worker/.config/whipper \\\n    && chown worker: /output /home/worker/.config/whipper\nVOLUME [\"/home/worker/.config/whipper\", \"/output\"]\n\n# setup locales + cleanup\nRUN echo \"LC_ALL=en_US.UTF-8\" >> /etc/environment \\\n    && echo \"en_US.UTF-8 UTF-8\" >> /etc/locale.gen \\\n    && echo \"LANG=en_US.UTF-8\" > /etc/locale.conf \\\n    && locale-gen en_US.UTF-8\n\n# install whipper\nRUN mkdir /whipper\nCOPY . /whipper/\nRUN cd /whipper && python3 setup.py install \\\n    && rm -rf /whipper \\\n    && whipper -v\n\nENV LC_ALL=en_US.UTF-8\nENV LANG=en_US\nENV LANGUAGE=en_US.UTF-8\nENV PYTHONIOENCODING=utf-8\n\nUSER worker\nWORKDIR /output\nENTRYPOINT [\"whipper\"]\n"
}