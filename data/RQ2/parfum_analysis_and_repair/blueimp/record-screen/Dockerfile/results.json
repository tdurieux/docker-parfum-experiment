{
  "startTime": 1674253827569,
  "endTime": 1674253828363,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 17,
        "columnStart": 5,
        "columnEnd": 9
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM golang:alpine as build\nRUN apk --no-cache add git\n# Disable CGO to build a statically compiled binary.\n# ldflags explanation (see `go tool link`):\n#   -s  disable symbol table\n#   -w  disable DWARF generation\nRUN CGO_ENABLED=0 go get -ldflags='-s -w' github.com/blueimp/mjpeg-server\n\nFROM alpine:3.14\nCOPY --from=build /go/bin/mjpeg-server /usr/local/bin/\nRUN apk --no-cache add \\\n  tini \\\n  nodejs \\\n  npm \\\n  ffmpeg \\\n  && npm install -g \\\n  npm@latest \\\n  mocha@9 \\\n  # Clean up obsolete files: \\\n  && rm -rf \\\n  /tmp/* \\\n  /root/.npm && npm cache clean --force;\nUSER nobody\nWORKDIR /app\nCOPY wait-for-hosts.sh /usr/local/bin/wait-for-hosts\nENTRYPOINT [\"tini\", \"-g\", \"--\", \"wait-for-hosts\", \"--\"]\n"
}