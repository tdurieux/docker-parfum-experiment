{
  "startTime": 1674248079183,
  "endTime": 1674248079706,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 9,
        "columnStart": 5,
        "columnEnd": 12
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 28
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.14\n\nRUN apk --no-cache add \\\n  tini \\\n  nodejs \\\n  npm \\\n  ffmpeg \\\n  android-tools \\\n  && npm install -g \\\n  npm@latest \\\n  # Clean up obsolete files: \\\n  && rm -rf \\\n  /tmp/* \\\n  /root/.npm && npm cache clean --force;\n\nWORKDIR /usr/lib/wdio\nCOPY package.json package-lock.json ./\nRUN npm install --production \\\n  # Clean up obsolete files: \\\n  && rm -rf \\\n  /tmp/* \\\n  /root/.npm && npm cache clean --force;\n# Set NODE_PATH to be able to require installed packages:\nENV NODE_PATH=/usr/lib/wdio/node_modules\n# Extend path to be able to run installed binaries:\nENV PATH=$PATH:/usr/lib/wdio/node_modules/.bin\n\nCOPY bin/wait-for-hosts.sh /usr/local/bin/wait-for-hosts\n\nWORKDIR /app\n\n# Avoid permission issues with host mounts by assigning a user/group with\n# uid/gid 1000 (usually the ID of the first user account on GNU/Linux):\nRUN adduser -D -u 1000 wdio\nUSER wdio\n\nENTRYPOINT [\"tini\", \"-g\", \"--\", \"wait-for-hosts\", \"--\", \"wdio\"]\n"
}