{
  "startTime": 1674256058069,
  "endTime": 1674256059339,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 49,
        "columnEnd": 68
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 652
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 652
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 652
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM kalilinux/kali-rolling:latest\n# Properties\nLABEL description=\"Web Application Pentest customized toolbox based on a KALI image\"\nLABEL maintainer=\"dominique.righetto@gmail.com\"\n# Install system packages\n## Always needed\nENV DEBIAN_FRONTEND noninteractive\nRUN apt-get -y update && apt-get install --no-install-recommends -y aha autoconf automake bsdmainutils build-essential cewl curl dnsutils ftp-ssl git golang-go highlight iproute2 iputils-ping john jq libauthen-pam-perl libcurl4 libcurl4-openssl-dev libffi-dev libgeoip-dev libgmp3-dev libimage-exiftool-perl libio-pty-perl libmpc-dev libnet-ssleay-perl libsqlite3-dev libssl-dev libtool libxml2-utils libyaml-dev locales nano ncat net-tools nmap nodejs npm openjdk-11-jdk openssl pdfgrep python2-dev perl python3 python3-dev python3-gmpy2 python3-pip python3-pystache python3-wheel python3-yaml rpcbind ruby ruby-dev rustc ssh telnet tmux unicornscan unzip vim wget whois wpscan zlib1g-dev zip zsh && rm -rf /var/lib/apt/lists/*;\n## Remove unwanted packaged installed by default on KALI\nRUN apt-get purge -y seclists\n## Needed only for specific kind of assessments like internal network assessment\n# RUN apt-get update install -y binwalk exploitdb exploitdb-bin-sploits ldap-utils metasploit-framework nfs-common smbclient smbmap\n# Create the base folder of all tools\nRUN mkdir /tools\n# Install utility scripts\nCOPY scripts /tools/scripts\n# Install utility templates\nCOPY templates /tools/templates\n# Install static binaries folder\nCOPY static-binaries /tools/static-binaries\n# Install docs folder\nCOPY docs /tools/docs\n# Install misc folder\nCOPY misc /tools/misc\n# Install dictionaries\nCOPY dictionaries /tools/dictionaries\n# Install tools and extra materials\nCOPY build /tmp/build\nRUN for f in $(ls /tmp/build/*.sh); do chmod +x $f;bash $f; done\n# Install dependencies via PIP for tools as well as custom scripts\nRUN BUILD_LIB=1 pip3 --no-cache-dir install ssdeep\nRUN for f in $(ls /tools/*/requirements.txt); do pip3 install --no-cache-dir -r $f; done\nRUN tldextract --update\n# Misc\nRUN sh -c \"$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)\" \"\" --unattended\n# Set execute access right\nRUN chmod -R +x /tools/\n# Build the local favicon DB\nRUN mkdir /tools/favicon-db;cd /tools/favicon-db;bash /tools/scripts/generate-favicon-db.sh\n# Set final settings of the toolbox\nRUN cd /tools/jwt-tool; python3 jwt_tool.py eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJsb2dpbiI6InRpY2FycGkifQ.bsSwqj2c2uI9n7-ajmi3ixVGhPUiY7jO9SUn9dm15Po; echo 0\nRUN cd /tools/jwt-tool; python3 jwt_tool.py eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJsb2dpbiI6InRpY2FycGkifQ.bsSwqj2c2uI9n7-ajmi3ixVGhPUiY7jO9SUn9dm15Po; echo 0\nRUN /tools/kiterunner/kr scan http://righettod.eu/api -q -A=apiroutes-210328:10 --fail-status-codes 404 --preflight-depth 1\nRUN date > /root/image-build-datetime\nRUN echo \"export PATH=$PATH:/tools/scripts:/root/go/bin:/root/.cargo/bin\" >> /root/.zshrc\nRUN echo \"export NUCLEI_TPL_HOME=/root/nuclei-templates\" >> /root/.zshrc\nRUN echo \"export JWTTOOL_CONFIG_HOME=/root/.jwt_tool\" >> /root/.zshrc\nRUN echo \"alias list-http-scripts-nmap='ls /usr/share/nmap/scripts/http-*'\" >> /root/.zshrc\nRUN echo \"alias list-jwttool-config='cat /root/.jwt_tool/jwtconf.ini'\" >> /root/.zshrc\nRUN echo \"alias check-tls='bash /tools/testssl/testssl.sh -s -p -U --quiet '\" >> /root/.zshrc\nRUN echo \"alias cat_colorized='highlight -O ansi --force'\" >> /root/.zshrc\nRUN touch /root/.hushlogin\n# Setup SSH server for remove access\nRUN echo \"...:::TOOLBOX:::...\" > /etc/motd\nRUN rm -rf /etc/ssh/ssh_host_*\nRUN dpkg-reconfigure openssh-server\nCOPY ssh-public-key.pem /root/.ssh/\nRUN mv /root/.ssh/ssh-public-key.pem /root/.ssh/authorized_keys\nRUN chmod -R 700 /root/.ssh;mkdir -p /run/sshd;sshd -t\n# Final cleanup and tunning\nRUN mkdir -p /root/.config/ookla\nCOPY speedtest-cli.json /root/.config/ookla/\nRUN rm -rf /tmp/*\nRUN apt-get -y clean\nRUN apt-get -y autoremove\nWORKDIR /tools\nVOLUME /tools/reports\nEXPOSE 80\nEXPOSE 443\nEXPOSE 22\nCMD [\"/usr/sbin/sshd\",\"-e\",\"-D\"]\n"
}