{
  "startTime": 1674248919062,
  "endTime": 1674248919564,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 22,
        "columnEnd": 89
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 22,
        "columnEnd": 89
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.7\n\nWORKDIR /app\n\n# RUN set -x \\\n#     && add-apt-repository ppa:mc3man/trusty-media \\\n#     && apt-get update \\\n#     && apt-get dist-upgrade \\\n#     && apt-get install -y --no-install-recommends \\\n#         ffmpeg \\\n\n# RUN apt-get -y update\n# RUN apt-get -y upgrade\n# RUN apt-get install -y ffmpeg\n\nENV DEBIAN_FRONTEND=noninteractive\n\nRUN apt-get update && apt-get install --no-install-recommends -y ffmpeg cmake swig libavcodec-dev libavformat-dev && rm -rf /var/lib/apt/lists/*;\nRUN ln -s /usr/bin/ffmpeg /usr/local/bin/ffmpeg\n\nCOPY . .\nRUN make -C /app/threatexchange/tmk/cpp\nRUN cd chromaprint && cmake -DCMAKE_BUILD_TYPE=Release -DBUILD_TOOLS=ON .\nRUN cd chromaprint && make\nRUN cd chromaprint && make install\nRUN rm /usr/lib/x86_64-linux-gnu/libchromaprint.so.1.5.0\nRUN rm /usr/lib/x86_64-linux-gnu/libchromaprint.so.1\nRUN ln -s /usr/local/lib/libchromaprint.so.1.5.0 /usr/lib/x86_64-linux-gnu/libchromaprint.so.1.5.0\nRUN ln -s /usr/local/lib/libchromaprint.so.1 /usr/lib/x86_64-linux-gnu/libchromaprint.so.1\nRUN echo \"set enable-bracketed-paste off\" >> ~/.inputrc\nCOPY requirements.txt ./\nRUN pip install --no-cache-dir --upgrade pip\nRUN pip install --no-cache-dir pact-python\nRUN pip install --no-cache-dir -r requirements.txt\nRUN python3 -c 'import nltk; nltk.download(\"punkt\")'\n\nCMD [\"make\", \"run\"]\n"
}