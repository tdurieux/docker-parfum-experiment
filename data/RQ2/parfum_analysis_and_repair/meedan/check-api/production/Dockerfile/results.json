{
  "startTime": 1674215724542,
  "endTime": 1674215728861,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 26,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 37,
        "lineEnd": 38,
        "columnStart": 26,
        "columnEnd": 45
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 26,
        "columnEnd": 49
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 37,
        "lineEnd": 38,
        "columnStart": 26,
        "columnEnd": 45
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# check-api\nFROM ruby:2.6.6-slim\nMAINTAINER sysops@meedan.com\n\nENV DEPLOYUSER=checkdeploy \\\n    DEPLOYDIR=/app/current \\\n    RAILS_ENV=production \\\n    GITREPO=git@github.com:meedan/check-api.git \\\n    PRODUCT=check \\\n    APP=check-api \\\n    TERM=xterm \\\n    MIN_INSTANCES=4 \\\n    MAX_POOL_SIZE=4 \\\n    PERSIST_DIRS=\"uploads project_export memebuster team_dump\" \\\n    MALLOC_ARENA_MAX=2 \\\n    QT_QPA_PLATFORM=offscreen\n    # MALLOC_ARENA MAX is needed because of https://www.mikeperham.com/2018/04/25/taming-rails-memory-bloat/\n    # MIN_INSTANCES and MAX_POOL_SIZE control the pool size of passenger\n\n# Set a UTF-8 capable locale\nENV LC_ALL C.UTF-8\nENV LANG C.UTF-8\nENV LANGUAGE C.UTF-8\n\n#\n# USER CONFIG\n#\nRUN useradd ${DEPLOYUSER} -s /bin/bash -m\n\nRUN apt-get update -qq && apt-get install --no-install-recommends -y curl && rm -rf /var/lib/apt/lists/*;\n#\n# SYSTEM CONFIG\n#\nRUN curl -f -sL https://deb.nodesource.com/setup_12.x | bash -\n\n# dependencies\n#RUN add-apt-repository ppa:mc3man/trusty-media -y\nRUN apt-get update -qq && apt-get install --no-install-recommends -y libidn11-dev lsof nodejs git build-essential libpq-dev sqlite3 libsqlite3-dev graphicsmagick \\\n     ffmpegthumbnailer libtag1-dev lz4 ffmpeg && rm -rf /var/lib/apt/lists/*;\n\n# CMD and helper scripts\nCOPY --chown=root:root production/bin /opt/bin\n\n#\n# code deployment\n#\nRUN mkdir -p ${DEPLOYDIR} \\\n    && chown -R ${DEPLOYUSER}:www-data ${DEPLOYDIR} \\\n    && chmod -R 775 ${DEPLOYDIR} \\\n    && chmod g+s ${DEPLOYDIR}\n\nWORKDIR ${DEPLOYDIR}\n\n# install the gems\nUSER ${DEPLOYUSER}\n# COPY's `--chown` directive cannot utilize environmental variables\n# so we mimic `--chown=${DEPLOYUSER}:www-data`\nCOPY --chown=checkdeploy:www-data Gemfile ${DEPLOYDIR}/Gemfile\nCOPY --chown=checkdeploy:www-data Gemfile.lock ${DEPLOYDIR}/Gemfile.lock\nRUN bundle install --jobs 20 --retry 5 --deployment --without test development\n\n# copy in the code\n# COPY's `--chown` directive cannot utilize environmental variables\n# so we mimic `--chown=${DEPLOYUSER}:www-data`\nCOPY --chown=checkdeploy:www-data . ${DEPLOYDIR}\n\nUSER ${DEPLOYUSER}\nRUN cp production/config.yml.dockerfile config/config.yml && \\\n    printf \"production:\\n adapter: sqlite3\\n database: /tmp/db.sqlite\\n\" > config/database.yml && \\\n    AWS_REGION=null AWS_SECRET_ACCESS_KEY=null AWS_ACCESS_KEY_ID=null SECRET_KEY_BASE=bogus bundle exec rake assets:precompile && \\\n    rm config/config.yml\n\nEXPOSE 3300\nENTRYPOINT [\"/opt/bin/start.sh\"]\n"
}