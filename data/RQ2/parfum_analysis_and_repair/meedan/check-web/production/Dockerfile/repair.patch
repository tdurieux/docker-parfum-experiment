diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/meedan/check-web/production/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/meedan/check-web/production/Dockerfile/repaired.Dockerfile
index 58f41fa..5c741ac 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/meedan/check-web/production/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/meedan/check-web/production/Dockerfile/repaired.Dockerfile
@@ -29,16 +29,16 @@ ENV DEPLOYUSER=checkdeploy \
 
 # user config
 RUN useradd ${DEPLOYUSER} -s /bin/bash -d ${DEPLOYDIR}/latest
-RUN apt-get update -qq 
-RUN apt-get install -y dirmngr gnupg \
+RUN apt-get update -qq
+RUN apt-get install --no-install-recommends -y dirmngr gnupg \
     && apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 561F9B9CAC40B2F7 \
-    && apt-get install -y apt-transport-https ca-certificates 
-RUN apt-get install -y graphicsmagick awscli jq
-RUN apt-get install -y libgnutls-openssl27 libgnutls30
+    && apt-get install --no-install-recommends -y apt-transport-https ca-certificates && rm -rf /var/lib/apt/lists/*;
+RUN apt-get install --no-install-recommends -y graphicsmagick awscli jq && rm -rf /var/lib/apt/lists/*;
+RUN apt-get install --no-install-recommends -y libgnutls-openssl27 libgnutls30 && rm -rf /var/lib/apt/lists/*;
 RUN update-ca-certificates
-RUN echo 'deb https://oss-binaries.phusionpassenger.com/apt/passenger buster main' > /etc/apt/sources.list.d/passenger.list 
+RUN echo 'deb https://oss-binaries.phusionpassenger.com/apt/passenger buster main' > /etc/apt/sources.list.d/passenger.list
 RUN apt-get update -qq
-RUN apt-get install -y passenger 
+RUN apt-get install --no-install-recommends -y passenger && rm -rf /var/lib/apt/lists/*;
 
 # deployment scripts
 COPY production/bin /opt/bin
@@ -49,11 +49,11 @@ WORKDIR ${DEPLOYDIR}/latest
 
 COPY package.json ${DEPLOYDIR}/latest
 COPY package-lock.json ${DEPLOYDIR}/latest
-RUN npm install
+RUN npm install && npm cache clean --force;
 COPY . ${DEPLOYDIR}/latest
 
 # get the relay.json file from github.com/meedan/check-api that corresponds to the DEPLOY_BRANCH passed to build.
-RUN curl --silent https://raw.githubusercontent.com/meedan/check-api/${DEPLOYBRANCH}/public/relay.json -o ${DEPLOYDIR}/latest/relay.json
+RUN curl -f --silent https://raw.githubusercontent.com/meedan/check-api/${DEPLOYBRANCH}/public/relay.json -o ${DEPLOYDIR}/latest/relay.json
 RUN sed "s|/api/public/relay.json|${DEPLOYDIR}/latest/relay.json|" < config-build.js.example > ${DEPLOYDIR}/latest/config-build.js
 
 # Create default configs for build to succeed