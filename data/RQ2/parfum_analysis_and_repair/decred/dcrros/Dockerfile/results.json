{
  "startTime": 1674252744308,
  "endTime": 1674252745156,
  "originalSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 62
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# This is the recommended Dockerfile for production deployments of dcrros+dcrd\n# as of the commit this is on.\n#\n# It builds a docker image that includes dcrd, dcrctl and dcrros and runs\n# dcrros with dcrd in embedded mode (that is, dcrros controls the dcrd process).\n#\n# See the docs for alternative ways of running this.\n\n# Stage 1: Build the bins in a golang image.\nFROM golang:1.17-buster AS builder\n\n# Build dcrd and include dcrctl as well.\nRUN git clone https://github.com/decred/dcrd\nRUN (cd dcrd && git checkout release-v1.6.2)\nRUN (cd dcrd && go install .)\nRUN git clone https://github.com/decred/dcrctl\nRUN (cd dcrctl && git checkout release-v1.6.2)\nRUN (cd dcrctl && go install .)\nRUN git clone https://github.com/decred/dcrros\nRUN (cd dcrros && git checkout release-v0.1.1)\nRUN (cd dcrros && go install .)\n\n# Stage 2: Build the final image starting from a cleaner base.\nFROM ubuntu:latest\n\n# Install ca-certificates so dcrd can reach the network seeders.\nRUN apt-get update && apt-get install -y --no-install-recommends ca-certificates && rm -rf /var/lib/apt/lists/*;\nRUN update-ca-certificates\n\n# Copy the previously built bins.\nCOPY --from=builder /go/bin/dcrd bin/dcrd\nCOPY --from=builder /go/bin/dcrctl bin/dcrctl\nCOPY --from=builder /go/bin/dcrros bin/dcrros\n\n# According to Rosetta's documentation, all data should be in /data.\nWORKDIR /data\n\n# Expose dcrros and dcrd ports for mainnet, testnet and simnet. Each line is:\n# \tdcrros    dcrd-p2p  dcrd-rpc\nEXPOSE  9128/tcp  9108/tcp  9109/tcp\nEXPOSE 19128/tcp 19108/tcp 19109/tcp\nEXPOSE 29128/tcp 19556/tcp 18555/tcp\n\n# The main executable for this is dcrros, running dcrd in \"embedded\" mode:\n# dcrros runs dcrd and controls the lifetime of its process. Once dcrros is\n# commanded to stop, it stops the underlying dcrd.\nENTRYPOINT [\"dcrros\", \\\n\t\"--appdata=/data/dcrros\", \\\n\t\"--rundcrd=dcrd\", \\\n\t\"--dcrdextraarg=\\\"--appdata=/data/dcrd\\\"\", \\\n\t\"--dcrdcertpath=/data/dcrd/rpc.cert\" ]\n"
}