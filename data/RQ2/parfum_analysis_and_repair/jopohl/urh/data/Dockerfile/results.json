{
  "startTime": 1674246271048,
  "endTime": 1674246272411,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 101
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 13,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 118
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 118
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 118
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:18.04\n\nLABEL maintainer=\"Johannes.Pohl90@gmail.com\"\n\nENV TZ=Europe/Berlin\n\n# Debug QT plugins by exporting QT_DEBUG_PLUGINS=1 before running URH\n# To allow docker to connect to X run xhost +local:docker\n\nRUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone \\\n && apt-get -qq update \\\n && apt-get -qq -y --no-install-recommends install software-properties-common \\\n && add-apt-repository -y ppa:myriadrf/drivers && apt-get -qq update \\\n && apt-get -qq -y --no-install-recommends install wget gcc g++ git \\\n                       python3 python3-pip python3-pyaudio python3-pyqt5 python3-numpy python3-psutil \\\n                       fonts-dejavu-core libgles2-mesa libusb-1.0-0 \\\n                       gr-osmosdr \\\n                       libhackrf-dev liblimesuite-dev libbladerf-dev librtlsdr-dev libairspy-dev libuhd-dev libiio-dev \\\n && python3 -m pip install setuptools cython \\\n && mkdir /tmp/sdrplay \\\n && wget https://www.sdrplay.com/software/SDRplay_RSP_API-Linux-2.13.1.run -O /tmp/sdrplay/sdrplay.run \\\n && cd /tmp/sdrplay && bash sdrplay.run --tar xf \\\n && cp mirsdrapi-rsp.h /usr/local/include \\\n && cp x86_64/libmirsdrapi-rsp.so.2.13 /usr/lib/x86_64-linux-gnu/ \\\n && ln -s /usr/lib/x86_64-linux-gnu/libmirsdrapi-rsp.so.2.13 /usr/lib/x86_64-linux-gnu/libmirsdrapi-rsp.so \\\n && rm -rf /tmp/sdrplay \\\n\n && cd /tmp && git clone --depth=1 https://github.com/jopohl/urh \\\n && cd /tmp/urh \\\n && python3 setup.py install \\\n && rm -rf /tmp/urh \\\n\n && apt-get -qq remove wget gcc g++ git ttf-bitstream-vera \\\n && apt-get -qq autoremove \\\n && dbus-uuidgen > /var/lib/dbus/machine-id \\\n && apt-get -qq clean all \\\n && mkdir /tmp/runtime-root \\\n && chmod 0700 /tmp/runtime-root && rm -rf /var/lib/apt/lists/*;\n\nCMD XDG_RUNTIME_DIR=/tmp/runtime-root urh\n"
}