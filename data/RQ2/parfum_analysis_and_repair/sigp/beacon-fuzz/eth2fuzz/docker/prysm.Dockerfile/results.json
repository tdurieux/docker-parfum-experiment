{
  "startTime": 1674246754827,
  "endTime": 1674246756845,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 48,
        "lineEnd": 49,
        "columnStart": 1,
        "columnEnd": 7
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 56,
        "lineEnd": 60,
        "columnStart": 1,
        "columnEnd": 14
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 14,
        "columnStart": 1,
        "columnEnd": 5
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 38,
        "lineEnd": 43,
        "columnStart": 1,
        "columnEnd": 7
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 48,
        "lineEnd": 49,
        "columnStart": 1,
        "columnEnd": 7
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 56,
        "lineEnd": 60,
        "columnStart": 1,
        "columnEnd": 14
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:18.04 AS build\n\nARG RUST_TOOLCHAIN=\"nightly\"\nENV CARGO_HOME=/usr/local/rust\nENV RUSTUP_HOME=/usr/local/rust\nENV PATH=\"$PATH:$CARGO_HOME/bin\"\n\n# Update ubuntu\n# Install dependencies\nRUN apt-get update && \\\n\tapt-get install -y --no-install-recommends \\\n\t\tbuild-essential \\\n\t\tca-certificates \\\n\t\tcurl \\\n\t\tgit && rm -rf /var/lib/apt/lists/*;\n\n# Install Rust and Cargo\nRUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --default-toolchain \"$RUST_TOOLCHAIN\"\n\nWORKDIR /eth2fuzz\n\n# Copy all\nCOPY . .\n\n# Build the CLI tool\nRUN make -f eth2fuzz.mk build\n\n#####################################\n############ prysm #################\n\nFROM ubuntu:18.04\n\nARG GIT_BRANCH=\"master\"\nARG PRESET=\"preset_mainnet\"\nARG PRYSM_VERSION=\"v1.0.0-alpha.23\"\n\n# Update ubuntu\nRUN apt-get update && \\\n\tapt-get install -y --no-install-recommends \\\n\t\tca-certificates \\\n\t\tsoftware-properties-common \\\n\t\tcurl \\\n\t\tgit \\\n\t\tclang && rm -rf /var/lib/apt/lists/*;\n\n# Install golang\nRUN add-apt-repository ppa:longsleep/golang-backports\nRUN apt-get update && \\\n\tapt-get install --no-install-recommends -y \\\n\tgolang && rm -rf /var/lib/apt/lists/*;\n\n# Install Bazel\nRUN curl -f https://bazel.build/bazel-release.pub.gpg | \\\n\tapt-key add -\nRUN echo \"deb [arch=amd64] https://storage.googleapis.com/bazel-apt stable jdk1.8\" | tee /etc/apt/sources.list.d/bazel.list\nRUN apt-get update && \\\n\tapt-get install --no-install-recommends -y \\\n\t\tcmake \\\n\t\tgit \\\n\t\tbazel \\\n   bazel-3.7.0 && rm -rf /var/lib/apt/lists/*;\n\n\nWORKDIR /eth2fuzz\n\nENV GOPATH=\"/eth2fuzz\"\n\n# Install prysm\n# (Hacky way to get specific version in GOPATH mode)\nRUN mkdir -p /eth2fuzz/src/github.com/prysmaticlabs/\nRUN cd /eth2fuzz/src/github.com/prysmaticlabs/ && \\\n    git clone --branch \"$GIT_BRANCH\" \\\n    --recurse-submodules \\\n    --depth 1 \\\n    https://github.com/prysmaticlabs/prysm\nRUN go get github.com/herumi/bls-eth-go-binary/bls\n\n# Install go-fuzz 114\nRUN go get -u github.com/mdempsky/go114-fuzz-build\n\n# Build prysm with bazel\nRUN cd /eth2fuzz/src/github.com/prysmaticlabs/prysm/ && bazel build\n\n#####################################\n############ eth2fuzz ###############\n\n# COPY --from=build shared .\nCOPY --from=build /eth2fuzz/eth2fuzz .\n\n# Set env for eth2fuzz target listing\nENV CURRENT_CLIENT=\"PRYSM\"\n\nENTRYPOINT [\"/eth2fuzz/eth2fuzz\"]\n"
}