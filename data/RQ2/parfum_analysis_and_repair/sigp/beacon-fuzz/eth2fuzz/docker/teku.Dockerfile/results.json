{
  "startTime": 1674254025914,
  "endTime": 1674254027026,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 48,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 5
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 67,
        "lineEnd": 68,
        "columnStart": 1,
        "columnEnd": 16
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 48,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 5
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 14,
        "columnStart": 1,
        "columnEnd": 5
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 38,
        "lineEnd": 45,
        "columnStart": 1,
        "columnEnd": 7
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 48,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 5
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 67,
        "lineEnd": 68,
        "columnStart": 1,
        "columnEnd": 16
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 48,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 5
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:18.04 AS build\n\nARG RUST_TOOLCHAIN=\"nightly\"\nENV CARGO_HOME=/usr/local/rust\nENV RUSTUP_HOME=/usr/local/rust\nENV PATH=\"$PATH:$CARGO_HOME/bin\"\n\n# Update ubuntu\n# Install dependencies\nRUN apt-get update && \\\n\tapt-get install -y --no-install-recommends \\\n\t\tbuild-essential \\\n\t\tca-certificates \\\n\t\tcurl \\\n\t\tgit && rm -rf /var/lib/apt/lists/*;\n\n# Install Rust and Cargo\nRUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --default-toolchain \"$RUST_TOOLCHAIN\"\n\nWORKDIR /eth2fuzz\n\n# Copy all\nCOPY . .\n\n# Build the CLI tool\nRUN make -f eth2fuzz.mk build\n\n###################################\n############ teku #################\n\nFROM ubuntu:18.04\n\nARG GIT_BRANCH=\"master\"\nARG T_VERSION=\"0.12.5\"\nARG PRESET=\"preset_mainnet\"\n\n# Update ubuntu\nRUN apt-get update && \\\n\tapt-get install -y --no-install-recommends \\\n\t\tca-certificates \\\n\t\tgit \\\n\t\tunzip \\\n\t\tcurl \\\n\t\tmake \\\n\t\tbuild-essential \\\n\t\tmaven && rm -rf /var/lib/apt/lists/*;\n\n# Install afl++\nRUN apt-get install --no-install-recommends -y \\\n\tbuild-essential \\\n\tlibtool-bin python3-dev \\\n\tautomake flex bison \\\n\tlibglib2.0-dev libpixman-1-dev \\\n\tclang python3-setuptools \\\n\tllvm && rm -rf /var/lib/apt/lists/*;\n\nRUN git clone \\\n\t--branch \"$GIT_BRANCH\" \\\n\t--depth 1 \\\n\thttps://github.com/AFLplusplus/AFLplusplus\n\nRUN cd AFLplusplus && make distrib\nRUN cd AFLplusplus && make install\n\n\n# Install JAVA\nRUN apt-get update && \\\n\tapt-get install --no-install-recommends -y \\\n\t\topenjdk-11-jdk && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /eth2fuzz\n\n# TODO uncomment once a9abcb472cab80cda3652268aec2a03ee8bfc1d7 is part of a suitable Teku release\n#RUN git clone \\\n#\t--branch \"$TEKU_VERSION\" \\\n#\t--depth 1 \\\n#\thttps://github.com/PegaSysEng/teku.git\n\nRUN git clone \\\n\t--branch \"$T_VERSION\" \\\n\t--depth 1 \\\n\thttps://github.com/PegaSysEng/teku.git\n\n# Build Teku\nRUN cd teku && \\\n\t./gradlew distTar installDist\n\n# install JQF fuzzer\nRUN git clone --depth 1 \\\n\thttps://github.com/rohanpadhye/jqf\nRUN jqf/setup.sh\n\n\n#####################################\n############ eth2fuzz ###############\n\n# COPY --from=build shared .\nCOPY --from=build /eth2fuzz/eth2fuzz .\n\n# Set env for eth2fuzz target listing\nENV CURRENT_CLIENT=\"TEKU\"\n\nENTRYPOINT [\"/eth2fuzz/eth2fuzz\"]\n"
}