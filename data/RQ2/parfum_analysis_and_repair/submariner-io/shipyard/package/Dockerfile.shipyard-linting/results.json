{
  "startTime": 1674252579951,
  "endTime": 1674252581160,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 23
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine\n\nENV DAPPER_HOST_ARCH=amd64 SHELL=/bin/bash \\\n    SHIPYARD_DIR=/opt/shipyard\nENV HOST_ARCH=${DAPPER_HOST_ARCH} ARCH=${DAPPER_HOST_ARCH} \\\n    SCRIPTS_DIR=${SHIPYARD_DIR}/scripts\n\n# Requirements:\n# Component        | Usage\n# -------------------------------------------------------------------\n# bash             | Just your basic shell\n# findutils        | Finding executables to compress\n# gitlint          | Git commit message linting\n# grep             | For listing targets\n# make             | Running makefiles inside the container\n# markdownlint     | Markdown linting\n# nodejs           | Used by markdownlint\n# npm              | Installing markdownlint (Removed afterwards)\n# py3-pip          | Installing gitlint (Removed afterwards)\n# py3-six          | Required by gitlint\n# shellcheck       | Shell script linting\n# upx              | Compressing executables to get a smaller image\n# yamllint         | YAML linting\n# yq               | YAML processing\n\nRUN apk add --no-cache bash findutils git grep make nodejs py3-six shellcheck upx yamllint yq && \\\n    apk add --no-cache --virtual installers npm py3-pip && \\\n    npm install -g markdownlint-cli && \\\n    pip install --no-cache-dir gitlint && \\\n    find /usr/bin/ -type f -executable -newercc /proc -size +1M  \\( -execdir upx {} \\; -o -true \\) && \\\n    find /usr/lib/ -name __pycache__ -type d -exec rm -rf {} + && \\\n    apk del installers && npm cache clean --force;\n\n# Copy shared files so that downstream projects can use it\nCOPY Makefile.* .gitlint ${SHIPYARD_DIR}/\n\n# Copy the global dapper file so that we can make sure consuming projects are up to date\nCOPY Dockerfile.linting ${SHIPYARD_DIR}/\n\n# Copy shared scripts into image to share with all submariner-io/* projects\nWORKDIR $SCRIPTS_DIR\nCOPY scripts/shared/ .\n"
}