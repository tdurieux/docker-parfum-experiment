diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/submariner-io/shipyard/package/Dockerfile.shipyard-dapper-base b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/submariner-io/shipyard/package/Dockerfile.shipyard-dapper-base/repaired.Dockerfile
index fbc1c09..6b4e4c2 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/submariner-io/shipyard/package/Dockerfile.shipyard-dapper-base
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/submariner-io/shipyard/package/Dockerfile.shipyard-dapper-base/repaired.Dockerfile
@@ -44,14 +44,14 @@ RUN dnf -y install --nodocs --setopt=install_weak_deps=False \
                    findutils upx jq ShellCheck npm gitlint yamllint \
                    qemu-user-static python3-pip skopeo && \
     npm install -g markdownlint-cli && \
-    pip install j2cli[yaml] --user && \
+    pip install --no-cache-dir j2cli[yaml] --user && \
     rpm -e --nodeps containerd npm python3-pip && \
     rpm -qa "selinux*" | xargs -r rpm -e --nodeps && \
     dnf -y clean all && \
     rm -f /usr/bin/{dockerd,lto-dump} \
           /usr/libexec/gcc/x86_64-redhat-linux/10/lto1 && \
     find /usr/bin /usr/lib/golang /usr/libexec -type f -executable -newercc /proc -size +1M ! -name hyperkube \( -execdir upx ${UPX_LEVEL} {} \; -o -true \) && \
-    ln -f /usr/bin/kubectl /usr/bin/hyperkube
+    ln -f /usr/bin/kubectl /usr/bin/hyperkube && npm cache clean --force;
 
 ENV LINT_VERSION=v1.46.0 \
     HELM_VERSION=v3.9.0 \
@@ -64,16 +64,18 @@ ENV LINT_VERSION=v1.46.0 \
 # We temporarily install kind-0.12 and kind-0.14; kind-0.12 is the default, and kind-0.14 is used for K8s 1.24, until
 # all kind images are available with containerd 1.6.5 or later
 RUN curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin -d ${LINT_VERSION} && \
-    i=0; until curl "https://get.helm.sh/helm-${HELM_VERSION}-linux-${ARCH}.tar.gz" | tar -xzf -; do if ((++i > 5)); then break; fi; sleep 1; done && \
+    i=0; while curl -f "https://get.helm.sh/helm-${HELM_VERSION}-linux-${ARCH}.tar.gz" | tar -xzf -; ; do \
+     do if ((++i > 5)); then break; fi; sleep 1; \
+   done && \
     mv linux-${ARCH}/helm /go/bin/ && chmod a+x /go/bin/helm && rm -rf linux-${ARCH} && \
-    curl -Lo /go/bin/kind "https://github.com/kubernetes-sigs/kind/releases/download/v0.12.0/kind-linux-${ARCH}" && chmod a+x /go/bin/kind && \
-    curl -Lo /go/bin/kind-0.14 "https://github.com/kubernetes-sigs/kind/releases/download/v0.14.0/kind-linux-${ARCH}" && chmod a+x /go/bin/kind-0.14 && \
+    curl -f -Lo /go/bin/kind "https://github.com/kubernetes-sigs/kind/releases/download/v0.12.0/kind-linux-${ARCH}" && chmod a+x /go/bin/kind && \
+    curl -f -Lo /go/bin/kind-0.14 "https://github.com/kubernetes-sigs/kind/releases/download/v0.14.0/kind-linux-${ARCH}" && chmod a+x /go/bin/kind-0.14 && \
     GOFLAGS="" go install -v github.com/onsi/ginkgo/ginkgo@latest && \
     GOFLAGS="" go install -v github.com/mikefarah/yq/v4@v${YQ_VERSION} && \
     mkdir -p /usr/local/libexec/docker/cli-plugins && \
-    curl -L "https://github.com/docker/buildx/releases/download/${BUILDX_VERSION}/buildx-${BUILDX_VERSION}.linux-${ARCH}" -o /usr/local/libexec/docker/cli-plugins/docker-buildx && \
+    curl -f -L "https://github.com/docker/buildx/releases/download/${BUILDX_VERSION}/buildx-${BUILDX_VERSION}.linux-${ARCH}" -o /usr/local/libexec/docker/cli-plugins/docker-buildx && \
     chmod 755 /usr/local/libexec/docker/cli-plugins/docker-buildx && \
-    curl -L https://github.com/cli/cli/releases/download/v${GH_VERSION}/gh_${GH_VERSION}_linux_${ARCH}.tar.gz | tar xzf - && \
+    curl -f -L https://github.com/cli/cli/releases/download/v${GH_VERSION}/gh_${GH_VERSION}_linux_${ARCH}.tar.gz | tar xzf - && \
     mv gh_${GH_VERSION}_linux_${ARCH}/bin/gh /go/bin/ && \
     rm -rf gh_${GH_VERSION}_linux_${ARCH} && \
     find /go/bin /usr/local/libexec/docker/cli-plugins -type f -executable -newercc /proc -exec strip {} + && \