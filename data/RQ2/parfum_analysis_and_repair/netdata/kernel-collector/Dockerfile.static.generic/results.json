{
  "startTime": 1674249831362,
  "endTime": 1674249832597,
  "originalSmells": [
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 42
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 42
      }
    }
  ],
  "repairedDockerfile": "FROM alpine:3.16 AS build\n\nARG ARCH=x86\nENV ARCH=$ARCH\n\nARG KERNEL_VERSION=5.4.20\nENV KERNEL_VERSION=$KERNEL_VERSION\n\nENV _LIBC=static\n\n# hadolint ignore=DL3018\nRUN apk add --no-cache -U build-base autoconf automake coreutils pkgconfig \\\n                          bc elfutils-dev openssl-dev clang clang-dev llvm \\\n                          rsync bison flex tar xz bash linux-headers\n\n# hadolint ignore=DL3003,SC3009\nRUN mkdir -p /usr/src && \\\n    cd /usr/src && \\\n    wget -q https://cdn.kernel.org/pub/linux/kernel/v$(echo \"$KERNEL_VERSION\" | cut -f 1 -d '.').x/linux-${KERNEL_VERSION}.tar.xz && \\\n    tar -xf linux-${KERNEL_VERSION}.tar.xz && \\\n    ln -s linux-${KERNEL_VERSION} linux && rm -rf /usr/src\n\nWORKDIR /kernel-collector\n\nCOPY .dockerfiles/build.sh /build.sh\nCOPY . .\n\nCMD [\"/build.sh\"]\n"
}