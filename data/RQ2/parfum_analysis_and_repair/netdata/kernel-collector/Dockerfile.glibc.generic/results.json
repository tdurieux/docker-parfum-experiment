{
  "startTime": 1674248544257,
  "endTime": 1674248544950,
  "originalSmells": [
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 65
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 42
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:22.04 AS build\n\nARG ARCH=x86\nENV ARCH=$ARCH\n\nARG KERNEL_VERSION=5.4.20\nENV KERNEL_VERSION=$KERNEL_VERSION\n\nENV _LIBC=glibc\n\nENV DEBIAN_FRONTEND=noninteractive\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y build-essential autoconf automake coreutils pkg-config \\\n                       bc libelf-dev libssl-dev clang-tools-14 libclang-14-dev \\\n                       llvm-14 rsync bison flex tar xz-utils wget && rm -rf /var/lib/apt/lists/*;\n\nRUN mkdir -p /usr/src && \\\n    cd /usr/src && \\\n    wget -q https://cdn.kernel.org/pub/linux/kernel/v$(echo \"$KERNEL_VERSION\" | cut -f 1 -d '.').x/linux-${KERNEL_VERSION}.tar.xz && \\\n    tar -xf linux-${KERNEL_VERSION}.tar.xz && \\\n    ln -s linux-${KERNEL_VERSION} linux && rm -rf /usr/src\n\nCOPY kernel-patches/${KERNEL_VERSION} /usr/src/linux-${KERNEL_VERSION}-patches\nCOPY .dockerfiles/patch_kernel.sh /patch_kernel.sh\nRUN /patch_kernel.sh\n\nENV PATH=/usr/lib/llvm-14/bin:$PATH\n\nWORKDIR /kernel-collector\n\nCOPY .dockerfiles/build.sh /build.sh\nCOPY . .\n\nCMD [\"/build.sh\"]\n"
}