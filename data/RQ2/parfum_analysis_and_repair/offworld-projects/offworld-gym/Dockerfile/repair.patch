diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/offworld-projects/offworld-gym/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/offworld-projects/offworld-gym/Dockerfile/repaired.Dockerfile
index 1632396..05b435b 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/offworld-projects/offworld-gym/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/offworld-projects/offworld-gym/Dockerfile/repaired.Dockerfile
@@ -10,19 +10,19 @@ RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone
 
 # Install Ubuntu system level dependecies
 RUN apt-get update -y
-RUN apt-get install -y -q gnupg2 apt-utils lsb-core lsb-release software-properties-common dialog 
-RUN apt-get clean all 
-RUN apt-get install -y -q nano net-tools xvfb glew-utils mesa-utils
+RUN apt-get install --no-install-recommends -y -q gnupg2 apt-utils lsb-core lsb-release software-properties-common dialog && rm -rf /var/lib/apt/lists/*;
+RUN apt-get clean all
+RUN apt-get install --no-install-recommends -y -q nano net-tools xvfb glew-utils mesa-utils && rm -rf /var/lib/apt/lists/*;
 
 # Install ROS and other Python dependencies
 # RUN $OFFWORLD_GYM_ROOT/scripts/install-real-and-sim.sh install_ros_dep_lib
 ENV DEBIAN_FRONTEND=noninteractive
-RUN sh -c 'echo "deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main" > /etc/apt/sources.list.d/ros-latest.list' 
-RUN apt install -y curl 
-RUN curl -s https://raw.githubusercontent.com/ros/rosdistro/master/ros.asc | apt-key add - 
+RUN sh -c 'echo "deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main" > /etc/apt/sources.list.d/ros-latest.list'
+RUN apt install --no-install-recommends -y curl && rm -rf /var/lib/apt/lists/*;
+RUN curl -f -s https://raw.githubusercontent.com/ros/rosdistro/master/ros.asc | apt-key add -
 RUN apt update -y
-RUN apt install -y ros-noetic-desktop-full git
-RUN apt install -y python3-rosdep python3-rosinstall python3-rosinstall-generator python3-wstool build-essential
+RUN apt install --no-install-recommends -y ros-noetic-desktop-full git && rm -rf /var/lib/apt/lists/*;
+RUN apt install --no-install-recommends -y python3-rosdep python3-rosinstall python3-rosinstall-generator python3-wstool build-essential && rm -rf /var/lib/apt/lists/*;
 RUN rosdep init
 RUN sudo rosdep fix-permissions
 RUN rosdep update
@@ -30,24 +30,24 @@ ENV source /opt/ros/noetic/setup.bash
 
 # install additional ROS packages
 RUN apt-get update -y
-RUN apt install --allow-unauthenticated -y ros-noetic-rosbridge-suite ros-noetic-multirobot-map-merge ros-noetic-explore-lite \
+RUN apt install --no-install-recommends --allow-unauthenticated -y ros-noetic-rosbridge-suite ros-noetic-multirobot-map-merge ros-noetic-explore-lite \
                     ros-noetic-ros-controllers ros-noetic-rospack \
                     python3-tk libeigen3-dev \
-                    ros-noetic-roslint ros-noetic-catkin python3-catkin-tools  ros-noetic-robot-state-publisher
+                    ros-noetic-roslint ros-noetic-catkin python3-catkin-tools ros-noetic-robot-state-publisher && rm -rf /var/lib/apt/lists/*;
 
 ###########################################################################
 # Install Python3.8
 # RUN $OFFWORLD_GYM_ROOT/scripts/install-real-and-sim.sh install_python_dep_lib
 RUN add-apt-repository ppa:deadsnakes/ppa \
 	&& apt-get update \
-	&& apt-get install -y python3.8 python3.8-dev 
+	&& apt-get install --no-install-recommends -y python3.8 python3.8-dev && rm -rf /var/lib/apt/lists/*;
 
 # Install Offworld Client Library and Python dependecies
 RUN export OFFWORLD_GYM_ROOT=`pwd`/..
-RUN apt install -y libbullet-dev git curl wget python3-distutils
+RUN apt install --no-install-recommends -y libbullet-dev git curl wget python3-distutils && rm -rf /var/lib/apt/lists/*;
 ENV LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/python3/bin
 ENV PATH=$PATH:/root/.local/bin
-RUN curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py
+RUN curl -f https://bootstrap.pypa.io/get-pip.py -o get-pip.py
 RUN python3.8 get-pip.py
 
 RUN python3.8 -m pip install --upgrade pip
@@ -59,7 +59,7 @@ RUN pip3.8 install --user --upgrade opencv-python==4.5.5.64
 RUN pip3.8 install --user --upgrade catkin_pkg==0.4.24
 RUN pip3.8 install --user --upgrade empy==3.3.4
 RUN pip3.8 install --user --upgrade requests==2.27.1
-RUN pip3.8 install --user --upgrade defusedxml==0.7.1 
+RUN pip3.8 install --user --upgrade defusedxml==0.7.1
 RUN pip3.8 install --user --upgrade rospkg==1.4.0
 RUN pip3.8 install --user --upgrade matplotlib==3.5.1
 RUN pip3.8 install --user --upgrade netifaces==0.11.0
@@ -79,20 +79,20 @@ RUN pip3.8 install --user --upgrade importlib-metadata==4.11.2
 RUN rm /bin/sh && ln -s /bin/bash /bin/sh
 
 
-RUN curl -sSL http://get.gazebosim.org | sh
-RUN apt-get install -y libjansson-dev npm libboost-dev imagemagick libtinyxml-dev mercurial cmake build-essential 
-RUN apt install ros-noetic-gazebo-ros-pkgs ros-noetic-gazebo-ros-control
+RUN curl -f -sSL https://get.gazebosim.org | sh
+RUN apt-get install --no-install-recommends -y libjansson-dev npm libboost-dev imagemagick libtinyxml-dev mercurial cmake build-essential && rm -rf /var/lib/apt/lists/*;
+RUN apt install -y --no-install-recommends ros-noetic-gazebo-ros-pkgs ros-noetic-gazebo-ros-control && rm -rf /var/lib/apt/lists/*;
 
 ENV NVM_DIR=/usr/local/nvm
 RUN mkdir -p $NVM_DIR
 ENV NODE_VERSION=9.11.2
 
-# # Install nvm 
-RUN curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.0/install.sh | bash \
+# # Install nvm
+RUN curl -f -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.0/install.sh | bash \
     && source $NVM_DIR/nvm.sh \
     && nvm install $NODE_VERSION \
     && nvm alias default $NODE_VERSION \
-    && nvm use default 
+    && nvm use default
 
 ENV NODE_PATH=$NVM_DIR/v$NODE_VERSION/lib/node_modules
 ENV PATH=$NVM_DIR/versions/node/v$NODE_VERSION/bin:$PATH
@@ -103,7 +103,7 @@ ENV  OFFWORLD_GYM_ROOT='/offworld-gym'
 COPY . /offworld-gym
 WORKDIR /offworld-gym
 
-# Install gzweb 
+# Install gzweb
 WORKDIR /
 # RUN mv $OFFWORLD_GYM_ROOT/offworld_gym/envs/gazebo/catkin_ws/src/gzweb /
 RUN git clone https://github.com/offworld-projects/offworld-gzweb.git -b fix-camera-angle/gzweb_1.4.1
@@ -130,7 +130,7 @@ RUN /bin/bash -c "source /opt/ros/noetic/setup.bash && catkin_make"
 # RUN $OFFWORLD_GYM_ROOT/scripts/install-real-and-sim.sh build_gym_shell_script
 
 ###########################################################################
-# Setting environment variables 
+# Setting environment variables
 # Appended to the python system path at runtime to import ROS python modules regardless of existing env setup.
 ENV GAZEBO_GYM_PYTHON_DEPENDENCIES=/offworld-gym/offworld_gym/envs/gazebo/catkin_ws/devel/lib/python3/dist-packages:/opt/ros/noetic/lib/python3.8/dist-packages