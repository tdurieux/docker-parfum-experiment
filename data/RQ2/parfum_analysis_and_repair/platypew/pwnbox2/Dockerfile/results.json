{
  "startTime": 1674250264508,
  "endTime": 1674250266297,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 9,
        "columnEnd": 37
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 67,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 50
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM archlinux:latest\n\nENV USER pwnbox\nENV ZONE Asia\nENV SUBZONE Singapore\n\n# Installing yay\nRUN echo -e \"[multilib]\\nInclude = /etc/pacman.d/mirrorlist\" >> /etc/pacman.conf && \\\n    curl -fsSL \"https://repo.archlinuxcn.org/x86_64/glibc-linux4-2.35-2-x86_64.pkg.tar.zst\" | bsdtar -C / -xvf - && \\\n    pacman -Syyu --noconfirm && \\\n    pacman -S base-devel lib32-glibc git zsh reflector cmake vi man-db man-pages npm --noconfirm && \\\n    reflector -c $SUBZONE -a 24 -f 12 -l 10 -n 12 --save /etc/pacman.d/mirrorlist\nRUN sed -i 's/# %wheel ALL=(ALL) NOPASSWD: ALL/%wheel ALL=(ALL) NOPASSWD: ALL/g' /etc/sudoers && \\\n    useradd -m -g users -G wheel -s /usr/bin/zsh $USER && \\\n    touch /home/$USER/.zshrc && \\\n    ln -sf /usr/share/zoneinfo/$ZONE/$SUBZONE /etc/localtime\n\n# Enable systemd\nRUN sudo pacman -Sy --noconfirm systemd systemd-sysvcompat\nCOPY ./config/docker-entrypoint.sh /\n\nUSER $USER\nWORKDIR /home/$USER\nRUN git clone https://aur.archlinux.org/yay.git && \\\n    cd yay && \\\n    makepkg -si --noconfirm\n\n# Installing oh my zsh\nRUN sh -c \"$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)\" && \\\n    git clone https://github.com/zsh-users/zsh-autosuggestions.git /home/$USER/.oh-my-zsh/custom/plugins/zsh-autosuggestions && \\\n    git clone https://github.com/zsh-users/zsh-syntax-highlighting.git /home/$USER/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting && \\\n    git clone https://github.com/b4b4r07/zsh-vimode-visual.git /home/$USER/.oh-my-zsh/custom/plugins/zsh-vimode-visual && \\\n    git clone https://github.com/DarrinTisdale/zsh-aliases-exa.git /home/$USER/.oh-my-zsh/custom/plugins/zsh-aliases-exa && \\\n    git clone https://github.com/hlissner/zsh-autopair.git /home/$USER/.oh-my-zsh/custom/plugins/zsh-autopair\n\nCOPY ./config/zshrc /home/$USER/.zshrc\nCOPY ./config/agnoster-dracula.zsh-theme /home/$USER/.oh-my-zsh/custom/themes/agnoster-dracula.zsh-theme\nCOPY ./config/tmux.conf /home/$USER/.tmux.conf\n\n# Installing QoL stuff\nRUN yay -S neovim exa wget bat fzf ripgrep tmux autojump strace net-tools iputils wget ltrace mlocate python2-pip ufw \\\n    python-pip python-virtualenv unzip unrar pigz p7zip nodejs yarn ruby rubygems openssh reflector openvpn --noconfirm && \\\n    pip install --no-cache-dir --user --upgrade neovim && \\\n    sudo npm install -g arch-wiki-man && \\\n    curl -fLo ~/.local/share/nvim/site/autoload/plug.vim --create-dirs\\\n    https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim && \\\n    mkdir -p /home/$USER/.config/nvim && \\\n    sudo setcap cap_net_raw+ep /usr/sbin/ping && npm cache clean --force;\nCOPY ./config/init.vim /home/$USER/.config/nvim\nRUN sed '/call plug#end/q' /home/$USER/.config/nvim/init.vim > /home/$USER/.config/nvim/temp.vim && \\\n    nvim -u /home/$USER/.config/nvim/temp.vim --headless +PlugInstall +qall && \\\n    rm -f /home/$USER/.config/nvim/temp.vim && \\\n    sudo touch /usr/include/stropts.h\n\n# Change permissions\nRUN sudo chown $USER:users /home/$USER/.zshrc \\\n    /home/$USER/.oh-my-zsh/custom/themes/agnoster-dracula.zsh-theme \\\n    /home/$USER/.config/nvim/init.vim \\\n    /home/$USER/.tmux.conf\n\n# Install blackarch repo and tools\nRUN curl -fsSL https://blackarch.org/strap.sh | sudo sh && \\\n    yay -S afl r2ghidra ropper shellnoob wcc binwalk foremost gnu-netcat \\\n    python-gmpy2 xortool gobuster john exploitdb hexedit pwndbg \\\n    sqlmap z3 jad metasploit nmap perl-image-exiftool mitmproxy \\\n    factordb-pycli featherduster rsactftool ngrok autorecon rustscan --noconfirm && \\\n    echo \"source /usr/share/pwndbg/gdbinit.py\" >> /home/$USER/.gdbinit && \\\n    pip install --no-cache-dir --user --upgrade pycrypto sagemath pwntools \\\n    git+https://github.com/calebstewart/pwncat.git && \\\n    gem install zsteg one_gadget && \\\n    mkdir -p /home/$USER/.local/bin /home/$USER/.local/share && \\\n    ln -s /usr/bin/vendor_perl/exiftool /home/$USER/.local/bin && \\\n    git clone https://github.com/niklasb/libc-database.git /home/$USER/.local/share/libc-database && \\\n    mkdir -p /home/$USER/.local/share/yafu && \\\n    wget \"https://udomain.dl.sourceforge.net/project/yafu/1.34/yafu-1.34.zip?viasf=1\" -O /home/$USER/yafu-1.34.zip && \\\n    unzip /home/$USER/yafu-1.34.zip -d /home/$USER/.local/share/yafu && chmod +x /home/$USER/.local/share/yafu/yafu && \\\n    rm -f /home/$USER/yafu-1.34.zip /home/$USER/.local/share/yafu/*.exe && ln -sf /home/$USER/.local/share/yafu/yafu /home/$USER/.local/bin/yafu && \\\n    sudo setcap cap_net_raw,cap_net_admin,cap_net_bind_service+eip /usr/sbin/nmap\n\n# Create shared directories\nRUN sudo mkdir -p /mnt/shared && ln -s /mnt/shared /home/$USER/shared\n\n# Cleanup\nRUN yay -Scc --noconfirm && \\\n    yay -Rsc $(yay -Qtdq) --noconfirm && \\\n    sudo rm -rf /home/$USER/yay /home/$USER/.zshrc.pre-oh-my-zsh \\\n    /home/$USER/.zsh_history /home/$USER/.bash_profile \\\n    /home/$USER/.bash_logout /home/$USER/.cache /home/$USER/bin \\\n    /home/$USER/.cargo /home/$USER/.gem/ruby/2.7.0/cache /tmp/* /var/cache && \\\n    sudo updatedb\n\n# Start systemd\nUSER root\nENTRYPOINT [\"/docker-entrypoint.sh\"]\n"
}