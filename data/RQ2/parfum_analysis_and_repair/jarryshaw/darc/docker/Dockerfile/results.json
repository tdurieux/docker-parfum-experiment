{
  "startTime": 1674256036924,
  "endTime": 1674256037889,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 92,
        "lineEnd": 92,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 57,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 115,
        "lineEnd": 115,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 27,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 17
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 29,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 43,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 57,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 53
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 57,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 115,
        "lineEnd": 115,
        "columnStart": 4,
        "columnEnd": 62
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:focal\n\nLABEL org.opencontainers.image.title=\"darc\" \\\n      org.opencontainers.image.description=\"Darkweb Crawler Project\" \\\n      org.opencontainers.image.url=\"https://darc.jarryshaw.me/\" \\\n      org.opencontainers.image.source=\"https://github.com/JarryShaw/darc\" \\\n      org.opencontainers.image.version=\"1.0.0\" \\\n      org.opencontainers.image.licenses='BSD 3-Clause \"New\" or \"Revised\" License'\n\nSTOPSIGNAL SIGINT\nHEALTHCHECK --interval=1h --timeout=1m \\\n    CMD wget https://httpbin.org/get -O /dev/null || exit 1\n\nARG DARC_USER=\"darc\"\nENV LANG=\"C.UTF-8\" \\\n    LC_ALL=\"C.UTF-8\" \\\n    PYTHONIOENCODING=\"UTF-8\" \\\n    DEBIAN_FRONTEND=\"teletype\" \\\n    DARC_USER=\"${DARC_USER}\"\n    # DEBIAN_FRONTEND=\"noninteractive\"\n\nCOPY extra/retry.sh /usr/local/bin/retry\nCOPY extra/install.py /usr/local/bin/pty-install\n#COPY vendor/jdk-11.0.13_linux-x64_bin.tar.gz /var/cache/oracle-jdk11-installer-local/\n\nRUN set -x \\\n && apt-get update \\\n && apt-get install --yes --no-install-recommends \\\n        apt-utils \\\n && apt-get install --yes --no-install-recommends \\\n        gcc \\\n        g++ \\\n        libmagic1 \\\n        make \\\n        software-properties-common \\\n        tar \\\n        unzip \\\n        wget \\\n        zlib1g-dev \\\n && add-apt-repository ppa:deadsnakes/ppa --yes \\\n && add-apt-repository ppa:linuxuprising/java --yes \\\n && add-apt-repository ppa:i2p-maintainers/i2p --yes && rm -rf /var/lib/apt/lists/*;\nRUN apt-get update \\\n && apt-get install --yes --no-install-recommends \\\n        python3.9-dev \\\n        python3-pip \\\n        python3-setuptools \\\n        python3-wheel \\\n && ln -sf /usr/bin/python3.9 /usr/local/bin/python3 && rm -rf /var/lib/apt/lists/*;\n# workaround for Git LFS as Docker Hub not supporting yet\nRUN mkdir -p /var/cache/oracle-jdk11-installer-local/ \\\n && wget -O /var/cache/oracle-jdk11-installer-local/jdk-11.0.13_linux-x64_bin.tar.gz \\\n        https://github.com/JarryShaw/darc/raw/master/vendor/jdk-11.0.13_linux-x64_bin.tar.gz\nRUN pty-install --stdin '6\\n70' apt-get install --yes --no-install-recommends \\\n        tzdata \\\n && pty-install --stdin 'yes' apt-get install --yes \\\n        oracle-java11-installer-local\nRUN apt-get install --yes --no-install-recommends \\\n        sudo \\\n && adduser --disabled-password --gecos '' ${DARC_USER} \\\n && adduser ${DARC_USER} sudo \\\n && echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers && rm -rf /var/lib/apt/lists/*;\n\n## Tor\nRUN apt-get install --yes --no-install-recommends tor && rm -rf /var/lib/apt/lists/*;\nCOPY extra/torrc.focal /etc/tor/torrc\n\n## I2P\nRUN apt-get install --yes --no-install-recommends i2p && rm -rf /var/lib/apt/lists/*;\nCOPY extra/i2p.focal /etc/defaults/i2p\n\n## ZeroNet\nCOPY vendor/ZeroNet-linux-dist-linux64.tar.gz /tmp\nRUN set -x \\\n && cd /tmp \\\n && tar xvpfz ZeroNet-linux-dist-linux64.tar.gz \\\n && mv ZeroNet-linux-dist-linux64 /usr/local/src/zeronet && rm ZeroNet-linux-dist-linux64.tar.gz\nCOPY extra/zeronet.focal.conf /usr/local/src/zeronet/zeronet.conf\n\n## FreeNet\nUSER darc\nCOPY vendor/new_installer_offline.jar /tmp\nRUN set -x \\\n && cd /tmp \\\n && ( pty-install --stdin '/home/darc/freenet\\n1' java -jar new_installer_offline.jar || true ) \\\n && sudo mv /home/darc/freenet /usr/local/src/freenet\nUSER root\n\n## NoIP\nCOPY vendor/noip-duc-linux.tar.gz /tmp\nRUN set -x \\\n && cd /tmp \\\n && tar xvpfz noip-duc-linux.tar.gz \\\n && mv noip-2.1.9-1 /usr/local/src/noip \\\n && cd /usr/local/src/noip \\\n && make && rm noip-duc-linux.tar.gz\n # && make install\n\n# # set up timezone\n# RUN echo 'Asia/Shanghai' > /etc/timezone \\\n#  && rm -f /etc/localtime \\\n#  && ln -snf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime \\\n#  && dpkg-reconfigure -f noninteractive tzdata\n\nCOPY vendor/chromedriver_linux64.zip /tmp/\n     #vendor/google-chrome-stable_current_amd64.deb /tmp/\n# workaround for Git LFS as Docker Hub not supporting yet\nRUN wget -O /tmp/google-chrome-stable_current_amd64.deb \\\n        https://github.com/JarryShaw/darc/raw/master/vendor/google-chrome-stable_current_amd64.deb\nRUN set -x \\\n ## ChromeDriver\n && unzip -d /usr/bin /tmp/chromedriver_linux64.zip \\\n && which chromedriver \\\n ## Google Chrome\n && ( dpkg --install /tmp/google-chrome-stable_current_amd64.deb || true ) \\\n && apt-get install --fix-broken --yes --no-install-recommends \\\n && dpkg --install /tmp/google-chrome-stable_current_amd64.deb \\\n && which google-chrome\n\n# Using pip:\nCOPY requirements.txt /tmp\nRUN python3 -m pip install -r /tmp/requirements.txt --no-cache-dir\n\nRUN set -x \\\n && rm -rf \\\n        ## APT repository lists\n        /var/lib/apt/lists/* \\\n        ## Python dependencies\n        /tmp/requirements.txt \\\n        /tmp/pip \\\n        ## ChromeDriver\n        /tmp/chromedriver_linux64.zip \\\n        ## Google Chrome\n        /tmp/google-chrome-stable_current_amd64.deb \\\n        ## Vendors\n        /tmp/new_installer_offline.jar \\\n        /tmp/noip-duc-linux.tar.gz \\\n        /tmp/ZeroNet-linux-dist-linux64.tar.gz \\\n #&& apt-get remove --auto-remove --yes \\\n #       software-properties-common \\\n #       unzip \\\n && apt-get autoremove -y \\\n && apt-get autoclean \\\n && apt-get clean\n\nENTRYPOINT [ \"python3\", \"-m\", \"darc\" ]\n#ENTRYPOINT [ \"bash\", \"/app/run.sh\" ]\nCMD [ \"--help\" ]\n\nWORKDIR /app\nCOPY darc/ /app/darc/\nCOPY LICENSE \\\n     MANIFEST.in \\\n     README.rst \\\n     extra/run.sh \\\n     setup.cfg \\\n     setup.py \\\n     test_darc.py /app/\nRUN python3 -m pip install -e .\n"
}