{
  "startTime": 1674248751885,
  "endTime": 1674248753456,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 0,
        "columnEnd": 36
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 0,
        "columnEnd": 50
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 40,
        "columnEnd": 124
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 18,
        "columnEnd": 75
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 86
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 99,
        "lineEnd": 99,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 86
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 99,
        "lineEnd": 99,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 18,
        "columnEnd": 75
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 86
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 99,
        "lineEnd": 99,
        "columnStart": 4,
        "columnEnd": 35
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 68
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 110
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 99,
        "lineEnd": 99,
        "columnStart": 4,
        "columnEnd": 59
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:20.04\n\n# Install base utilities\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y build-essential && \\\n    apt-get install --no-install-recommends -y wget && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/*\n\n# Helios installation\nENV DEBIAN_FRONTEND=noninteractive\n\n# Update packages\nWORKDIR /home\nRUN apt update && apt install --no-install-recommends -y gcc g++ cmake make git wget unzip xz-utils && rm -rf /var/lib/apt/lists/*;\n\n\n# Clone repository\nARG branch\nRUN git clone --branch ${branch} https://github.com/3dgeo-heidelberg/helios.git && cd helios && git status\n\nWORKDIR /home/helios/lib\n\n# Download and extract needed libs\nRUN wget http://lastools.github.io/download/LAStools.zip \\\nhttp://download.osgeo.org/proj/proj-8.0.0.tar.gz \\\nhttps://github.com/OSGeo/gdal/releases/download/v3.3.0/gdal-3.3.0.tar.gz --no-check-certificate \\\nhttps://boostorg.jfrog.io/artifactory/main/release/1.76.0/source/boost_1_76_0.tar.gz \\\nhttps://github.com/g-truc/glm/releases/download/0.9.9.8/glm-0.9.9.8.zip \\\nhttp://sourceforge.net/projects/arma/files/armadillo-10.6.2.tar.xz && \\\nunzip LAStools.zip && rm LAStools.zip && tar -xzvf proj-8.0.0.tar.gz && \\\ntar -xzvf gdal-3.3.0.tar.gz && tar -xzvf boost_1_76_0.tar.gz && \\\nunzip glm-0.9.9.8.zip && rm glm-0.9.9.8.zip && \\\ntar xf armadillo-10.6.2.tar.xz && mv armadillo-10.6.2 armadillo && rm armadillo-10.6.2.tar.xz\n\n# Install LASTools\nWORKDIR /home/helios/lib/LAStools\nRUN cmake . && make\n\n# Install GLM\nWORKDIR /home/helios/lib\nRUN cd glm && cmake . && make -j 6\n\n# Install Armadillo\nWORKDIR /home/helios/lib/armadillo\nRUN apt install --no-install-recommends -y liblapack-dev libblas-dev && \\\n ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" -DCMAKE_INSTALL_PREFIX=. && make && make install && rm -rf /var/lib/apt/lists/*;\n\n# Install Proj\nWORKDIR /home/helios/lib\nRUN apt install --no-install-recommends -y pkg-config libsqlite3-dev sqlite3 libtiff5-dev libcurl4-openssl-dev && \\\nmv proj-8.0.0 proj && cd proj && \\\n ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/home/helios/lib/gdal/projlib && make -j 15 && make install && rm -rf /var/lib/apt/lists/*;\n\n# Install GDAL\nWORKDIR /home/helios/lib\nRUN mv gdal-3.3.0/* gdal/ && cd gdal && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/home/helios/lib/gdal --with-proj=/home/helios/lib/gdal/projlib && make -j 15 && make install\n\n# Manage Python Version\nARG pyv\nENV PYTHON_VERSION=$pyv\nENV ENV_NAME=pyhelios_env\n\n# Install miniconda\nENV CONDA_DIR /opt/conda\nRUN wget --quiet https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O ~/miniconda.sh && \\\n     /bin/bash ~/miniconda.sh -b -p /opt/conda\n\n# Put conda in path so we can use it\nENV PATH=$CONDA_DIR/bin:$PATH\n\n# Create the environment\n    # Get enviroment file\nCOPY conda-environment.yml .\n    # Get environment name from the conda-environment.yml file\nRUN ENV_NAME=$(grep name: conda-environment.yml | cut -d\\  -f2)\n    # Its easier to change the environment name that retrieve it and save it in a variable.\nRUN sed -i \"s/name:.*/name: ${ENV_NAME}/\" conda-environment.yml\n    # Change Python version in the environment\nRUN sed -i \"s/python=.*/python=$PYTHON_VERSION/\" conda-environment.yml\n\nRUN cat conda-environment.yml && conda config --set channel_priority strict\n    # Create the conda environment\nRUN conda env create -f conda-environment.yml\n\n# Define environment path\nENV CONDA_ENV_DIR ${CONDA_DIR}/envs/${ENV_NAME}\n\n# Install Boost\nWORKDIR /home/helios/lib\nRUN mv boost_1_76_0 boost\nRUN echo \"using python\\n\\t: ${PYTHON_VERSION}\\n\\t: ${CONDA_ENV_DIR}/bin/python\\n\\t: $(find \"${CONDA_ENV_DIR}\" -name \"Python.h\" -printf '%h\\n')\\n\\t: ${CONDA_ENV_DIR}/lib\\n;\\n\" >> ./boost/user-config.jam\nRUN cat ./boost/user-config.jam\nRUN cd boost && ./bootstrap.sh && ./b2 -j 15 --user-config=user-config.jam cxxflags=-fPIC python=${PYTHON_VERSION}\n\n# Set PYTHONPATH\nENV PYTHONPATH=/home/helios\n\n# Install PYHelios dependencies\nRUN apt install --no-install-recommends -y libglu1-mesa-dev && rm -rf /var/lib/apt/lists/*;\n\n# Compile Helios with PyBindings active\nWORKDIR /home/helios\nRUN cmake -DPYTHON_BINDING=1 -DPYTHON_VERSION=${PYTHON_VERSION} . && make -j 15\n\n# Install PyHelios dependencies\n\n# Clean\nWORKDIR /home/helios/lib\nRUN rm *.tar.gz\n\n# Make sure we use the new created Python environment\nENV PATH /opt/conda/envs/${ENV_NAME}/bin:$PATH\nWORKDIR /home/helios\n"
}