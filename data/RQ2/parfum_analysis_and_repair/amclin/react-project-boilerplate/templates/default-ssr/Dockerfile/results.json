{
  "startTime": 1674219279399,
  "endTime": 1674219280689,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Multistage build to optimize the final Docker image size\n\n###### Stage 1 - Install deps and compile the NextJS app\nFROM node:lts as build-stage\nLABEL author=\"%%AUTHOR%%\"\n\nCOPY . /app\nWORKDIR /app\n\n# We run npm install here instead of copying\n# in a compiled build from an external source\n# because node_modules often compiles with\n# CPU/OS-specific binaries\n# node_modules is deleted here. We can't exclude\n# it using .dockerignore because we need the\n# docker-compiled version in the docker image\nRUN rm -rf node_modules &&\\\n    npm install && \\\n    npm run build && npm cache clean --force;\n\n###### Stage 2 - Run production NextJS app server\nFROM node:lts\nARG PORT=3000\n\nENV NODE_ENV=production\n    PORT=$PORT\nEXPOSE $PORT\n\nCOPY --from=build-stage /app /app\nWORKDIR /app\n\nCMD [ \"npm\", \"start\" ]\n"
}