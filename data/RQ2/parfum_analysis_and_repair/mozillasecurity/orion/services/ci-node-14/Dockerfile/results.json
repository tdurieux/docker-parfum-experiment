{
  "startTime": 1674248670861,
  "endTime": 1674248672309,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 90,
        "lineEnd": 90,
        "columnStart": 7,
        "columnEnd": 27
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 45,
        "lineEnd": 53,
        "columnStart": 7,
        "columnEnd": 27
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# This Source Code Form is subject to the terms of the Mozilla Public\n# License, v. 2.0. If a copy of the MPL was not distributed with this\n# file, You can obtain one at https://mozilla.org/MPL/2.0/.\n\nFROM node:14-slim\n\nLABEL maintainer Jason Kratzer <jkratzer@mozilla.com>\n\nARG DEBIAN_FRONTEND=noninteractive\nARG PYTHON_VER=3.9.10\n\nCOPY services/orion-decision /src/orion-decision\nRUN retry() { \\\n    { i=0; while [ $i -lt 9 ]; do \"$@\" && return || sleep 30; i=\"${i+1}\"; done; \"$@\"; } \\\n    && retry apt-get update -qq \\\n    && retry apt-get install -y -qq --no-install-recommends --no-install-suggests \\\n        ca-certificates \\\n        curl \\\n        git \\\n        jshon \\\n        locales \\\n        openssh-client \\\n    && savedAptMark=\"$(apt-mark showmanual)\" \\\n    && retry apt-get install -y -qq --no-install-recommends --no-install-suggests \\\n        dpkg-dev \\\n        gcc \\\n        gnupg dirmngr \\\n        libbz2-dev \\\n        libc6-dev \\\n        libexpat1-dev \\\n        libffi-dev \\\n        libgdbm-dev \\\n        liblzma-dev \\\n        libncursesw5-dev \\\n        libreadline-dev \\\n        libsqlite3-dev \\\n        libssl-dev \\\n        make \\\n        uuid-dev \\\n        wget \\\n        xz-utils \\\n        zlib1g-dev \\\n    && retry curl -LO https://www.python.org/ftp/python/${PYTHON_VER}/Python-${PYTHON_VER}.tgz \\\n    && tar xzf Python-${PYTHON_VER}.tgz \\\n    && rm Python-${PYTHON_VER}.tgz \\\n    && cd Python-${PYTHON_VER} \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n        --enable-optimizations \\\n        --enable-loadable-sqlite-extensions \\\n        --enable-optimizations \\\n        --enable-option-checking=fatal \\\n        --enable-shared \\\n        --with-system-expat \\\n        --with-system-ffi \\\n        --without-ensurepip \\\n    && make -j \"$(nproc)\" LDFLAGS=\"-Wl,--strip-all\" \\\n    && make install \\\n    && cd .. \\\n    && rm -rf \"Python-${PYTHON_VER}\" \\\n    && rm -rf /usr/local/include/python* \\\n    && find /usr/local/lib/python* -depth \\\n        \\( \\\n            \\( -type d -a \\( -name test -o -name tests -o -name idle_test \\) \\) \\\n            -o \\( -type f -a \\( -name '*.pyc' -o -name '*.pyo' -o -name '*.a' \\) \\) \\\n        \\) -exec rm -rf '{}' + \\\n    && ldconfig \\\n    && apt-mark auto '.*' > /dev/null \\\n    && for p in $savedAptMark; do apt-mark manual \"$p\"; done \\\n    && find /usr/local -type f -executable -not \\( -name '*tkinter*' \\) -exec ldd '{}' ';' \\\n        | awk '/=>/ { print $(NF-1) }' \\\n        | sort -u \\\n        | xargs -r dpkg-query --search \\\n        | cut -d: -f1 \\\n        | sort -u \\\n        | xargs -r apt-mark manual \\\n    && apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false \\\n    && rm -rf /var/lib/apt/lists/* \\\n    && retry curl -LO https://github.com/pypa/get-pip/raw/38e54e5de07c66e875c11a1ebbdb938854625dd8/public/get-pip.py \\\n    && export PYTHONDONTWRITEBYTECODE=1 \\\n    && python3 get-pip.py \\\n        --disable-pip-version-check \\\n        --no-cache-dir \\\n        --no-compile \\\n    && retry pip install --no-build-isolation -e /src/orion-decision \\\n    && useradd -d /home/worker -s /bin/bash -m worker \\\n    && echo \"LANGUAGE=en\" >> /etc/environment \\\n    && echo \"LANG=en_US.UTF-8\" >> /etc/environment \\\n    && echo \"LC_ALL=en_US.UTF-8\" >> /etc/environment \\\n    && sed -i 's/# en_US.UTF-8/en_US.UTF-8/' /etc/locale.gen \\\n    && echo \"LANG=en_US.UTF-8\" > /etc/locale.conf \\\n    && locale-gen en_US.UTF-8 \\\n    && npm install -g npm@7 \\\n   } && npm cache clean --force;\n\nUSER worker\nWORKDIR /home/worker\n\nRUN retry () { i=0; while [ $i -lt 9 ]; do \"$@\" && return || sleep 30; i=\"${i+1}\"; done; \"$@\"; } \\\n    && mkdir .ssh \\\n    && retry ssh-keyscan github.com > .ssh/known_hosts\n"
}