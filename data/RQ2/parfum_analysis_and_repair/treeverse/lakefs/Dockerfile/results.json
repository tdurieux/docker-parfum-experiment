{
  "startTime": 1674251019467,
  "endTime": 1674251020201,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 26
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM golang:1.17.8-alpine AS build\n\nARG VERSION=dev\n\nWORKDIR /build\n\n# Packages required to build\nRUN apk add --no-cache build-base\n\n# Copy project deps first since they don't change often\nCOPY go.mod go.sum ./\nRUN go mod download\n\n# Copy project\nCOPY . ./\n\n# Build a binaries\nRUN go build -ldflags \"-X github.com/treeverse/lakefs/pkg/version.Version=${VERSION}\" -o lakefs ./cmd/lakefs\nRUN go build -ldflags \"-X github.com/treeverse/lakefs/pkg/version.Version=${VERSION}\" -o lakectl ./cmd/lakectl\n\n# lakectl image\nFROM alpine:3.15.0 AS lakectl\nWORKDIR /app\nENV PATH /app:$PATH\nCOPY --from=build /build/lakectl ./\nRUN addgroup -S lakefs && adduser -S lakefs -G lakefs\nUSER lakefs\nWORKDIR /home/lakefs\nENTRYPOINT [\"/app/lakectl\"]\n\n# lakefs image\nFROM alpine:3.15.0 AS lakefs\n\n# Be Docker compose friendly (i.e. support wait-for)\nRUN apk add --no-cache netcat-openbsd\n\nWORKDIR /app\nCOPY ./scripts/wait-for ./\nENV PATH /app:$PATH\nCOPY --from=build /build/lakefs /build/lakectl ./\n\nEXPOSE 8000/tcp\n\n# Setup user\nRUN addgroup -S lakefs && adduser -S lakefs -G lakefs\nUSER lakefs\nWORKDIR /home/lakefs\n\n# Configuration location\nVOLUME /etc/lakefs.yaml\n\nENTRYPOINT [\"/app/lakefs\"]\nCMD [\"run\"]\n\n"
}