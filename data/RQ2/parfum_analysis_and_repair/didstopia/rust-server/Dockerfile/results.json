{
  "startTime": 1674215032254,
  "endTime": 1674215032862,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 102
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM didstopia/base:nodejs-12-steamcmd-ubuntu-18.04\n\nLABEL maintainer=\"Didstopia <support@didstopia.com>\"\n\n# Fix apt-get warnings\nARG DEBIAN_FRONTEND=noninteractive\n\n# Install dependencies\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        nginx \\\n        expect \\\n        tcl \\\n\tlibsdl2-2.0-0:i386 \\\n        libgdiplus && \\\n    rm -rf /var/lib/apt/lists/*\n\n# Remove default nginx stuff\nRUN rm -fr /usr/share/nginx/html/* && \\\n\trm -fr /etc/nginx/sites-available/* && \\\n\trm -fr /etc/nginx/sites-enabled/*\n\n# Install webrcon (specific commit)\nCOPY nginx_rcon.conf /etc/nginx/nginx.conf\nRUN curl -f -sL https://github.com/Facepunch/webrcon/archive/24b0898d86706723d52bb4db8559d90f7c9e069b.zip | bsdtar -xvf- -C /tmp && \\\n\tmv /tmp/webrcon-24b0898d86706723d52bb4db8559d90f7c9e069b/* /usr/share/nginx/html/ && \\\n\trm -fr /tmp/webrcon-24b0898d86706723d52bb4db8559d90f7c9e069b\n\n# Customize the webrcon package to fit our needs\nADD fix_conn.sh /tmp/fix_conn.sh\n\n# Create the volume directories\nRUN mkdir -p /steamcmd/rust /usr/share/nginx/html /var/log/nginx\n\n# Setup proper shutdown support\nADD shutdown_app/ /app/shutdown_app/\nWORKDIR /app/shutdown_app\nRUN npm install && npm cache clean --force;\n\n# Setup restart support (for update automation)\nADD restart_app/ /app/restart_app/\nWORKDIR /app/restart_app\nRUN npm install && npm cache clean --force;\n\n# Setup scheduling support\nADD scheduler_app/ /app/scheduler_app/\nWORKDIR /app/scheduler_app\nRUN npm install && npm cache clean --force;\n\n# Setup rcon command relay app\nADD rcon_app/ /app/rcon_app/\nWORKDIR /app/rcon_app\nRUN npm install && npm cache clean --force;\nRUN ln -s /app/rcon_app/app.js /usr/bin/rcon\n\n# Add the steamcmd installation script\nADD install.txt /app/install.txt\n\n# Copy the Rust startup script\nADD start_rust.sh /app/start.sh\n\n# Copy the Rust update check script\nADD update_check.sh /app/update_check.sh\n\n# Copy extra files\nCOPY README.md LICENSE.md /app/\n\n# Set the current working directory\nWORKDIR /\n\n# Fix permissions\nRUN chown -R 1000:1000 \\\n    /steamcmd \\\n    /app \\\n    /usr/share/nginx/html \\\n    /var/log/nginx\n\n# Run as a non-root user by default\nENV PGID 1000\nENV PUID 1000\n\n# Expose necessary ports\nEXPOSE 8080\nEXPOSE 28015\nEXPOSE 28016\nEXPOSE 28082\n\n# Setup default environment variables for the server\nENV RUST_SERVER_STARTUP_ARGUMENTS \"-batchmode -load -nographics +server.secure 1\"\nENV RUST_SERVER_IDENTITY \"docker\"\nENV RUST_SERVER_PORT \"\"\nENV RUST_SERVER_SEED \"12345\"\nENV RUST_SERVER_NAME \"Rust Server [DOCKER]\"\nENV RUST_SERVER_DESCRIPTION \"This is a Rust server running inside a Docker container!\"\nENV RUST_SERVER_URL \"https://hub.docker.com/r/didstopia/rust-server/\"\nENV RUST_SERVER_BANNER_URL \"\"\nENV RUST_RCON_WEB \"1\"\nENV RUST_RCON_PORT \"28016\"\nENV RUST_RCON_PASSWORD \"docker\"\nENV RUST_APP_PORT \"28082\"\nENV RUST_UPDATE_CHECKING \"0\"\nENV RUST_UPDATE_BRANCH \"public\"\nENV RUST_START_MODE \"0\"\nENV RUST_OXIDE_ENABLED \"0\"\nENV RUST_OXIDE_UPDATE_ON_BOOT \"1\"\nENV RUST_RCON_SECURE_WEBSOCKET \"0\"\nENV RUST_SERVER_WORLDSIZE \"3500\"\nENV RUST_SERVER_MAXPLAYERS \"500\"\nENV RUST_SERVER_SAVE_INTERVAL \"600\"\n\n# Define directories to take ownership of\nENV CHOWN_DIRS \"/app,/steamcmd,/usr/share/nginx/html,/var/log/nginx\"\n\n# Expose the volumes\n# VOLUME [ \"/steamcmd/rust\" ]\n\n# Start the server\nCMD [ \"bash\", \"/app/start.sh\"]\n"
}