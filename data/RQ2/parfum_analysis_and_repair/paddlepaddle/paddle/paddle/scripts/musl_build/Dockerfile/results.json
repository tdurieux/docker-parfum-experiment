{
  "startTime": 1674255736045,
  "endTime": 1674255736722,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 8,
        "columnEnd": 52
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 12,
        "columnEnd": 59
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright (c) 2020 PaddlePaddle Authors. All Rights Reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\nARG PYTHON_VERSION=3.7\n\nFROM python:${PYTHON_VERSION}-alpine3.11\n\nUSER root\n\nWORKDIR /root\n\nVOLUME /root/.ccache\n\nVOLUME /root/.cache\n\nRUN apk update\n\nRUN apk add --no-cache \\\n    g++ gfortran make cmake patchelf git ccache\n\nARG package\n\nRUN if [ \"$package\" ]; then \\\n        set -e; \\\n        pkgs=$(echo \"$package\" | base64 -d -); \\\n        echo \">>> decode package:\"; \\\n        echo \"$pkgs\"; \\\n        for nm in $pkgs; do \\\n            echo \">>> intall package: $nm\"; \\\n            apk add --no-cache --force-overwrite \"$nm\"; \\\n        done; \\\n    fi\n\nARG requirement\nARG requirement_ut\nARG pip_index\n\nRUN if [ \"$requirement\" ]; then \\\n        set -e; \\\n        echo \"$requirement\" | base64 -d - > \"requirement.txt\"; \\\n        echo \">>> decode requirement:\"; \\\n        cat \"requirement.txt\"; \\\n        echo \">>> install python requirement:\"; \\\n        PIP_ARGS=\"--timeout 300\"; \\\n        if [ \"$pip_index\" ]; then \\\n            PIP_DOMAIN=$(echo \"$pip_index\" | awk -F/ '{print $3}'); \\\n            PIP_ARGS=\"$PIP_ARGS -i $pip_index --trusted-host $PIP_DOMAIN\"; \\\n            echo \">>> pip index: $pip_index\"; \\\n        fi; \\\n        pip3 install --no-cache-dir $PIP_ARGS -r \"requirement.txt\"; \\\n        rm -f \"requirement.txt\"; \\\n        if [ \"$requirement_ut\" ]; then \\\n            echo \"$requirement_ut\" | base64 -d - > \"requirement_ut.txt\"; \\\n            cat \"requirement_ut.txt\"; \\\n            pip3 install --no-cache-dir $PIP_ARGS -r \"requirement_ut.txt\"; \\\n            rm -f \"requirement_ut.txt\"; \\\n        fi; \\\n    fi\n\n\nENTRYPOINT [ \"/bin/sh\" ]\n"
}