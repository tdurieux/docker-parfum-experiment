{
  "startTime": 1674251718041,
  "endTime": 1674251719808,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 2,
        "columnEnd": 48
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 85,
        "lineEnd": 85,
        "columnStart": 25,
        "columnEnd": 36
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 133,
        "lineEnd": 133,
        "columnStart": 68,
        "columnEnd": 79
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 139,
        "lineEnd": 139,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 20,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 134
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 121,
        "lineEnd": 121,
        "columnStart": 4,
        "columnEnd": 30
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# A image for building paddle binaries\n# Use rocm-terminal base image for both rocm environment\n# When you modify it, please be aware of rocm version\n#\n# Build: ROCM 4.0.1\n# cd Paddle/tools/dockerfile\n# docker build -f Dockerfile.rocm  \\\n#        -t paddlepaddle/paddle-centos-rocm401-dev:latest .\n#\n# docker run -it --device=/dev/kfd --device=/dev/dri \\\n# --security-opt seccomp=unconfined --group-add video \\\n# paddlepaddle/paddle-centos-rocm401-dev:latest /bin/bash\n\nFROM centos:7.8.2003\nMAINTAINER PaddlePaddle Authors <paddle-dev@baidu.com>\n\nENV LC_ALL en_US.UTF-8\nENV LANG en_US.UTF-8\nENV LANGUAGE en_US.UTF-8\n\nRUN yum install -y epel-release deltarpm sudo openssh-server gettext-devel sqlite-devel \\\n        zlib-devel openssl-devel pcre-devel vim tk-devel tkinter libtool xz graphviz wget curl-devel \\\n        make bzip2 git patch unzip bison yasm diffutils automake which file kernel-headers kernel-devel \\\n        net-tools numactl-devel chrpath screen initscripts && rm -rf /var/cache/yum\n\n# Install devtoolset-7\nRUN yum install -y yum-utils centos-release-scl && \\\n    yum-config-manager --enable rhel-server-rhscl-7-rpms && \\\n    yum-config-manager --enable rhel-7-server-rpms && \\\n    yum-config-manager --enable rhel-7-server-optional-rpms && \\\n    INSTALL_PKGS=\"devtoolset-7-binutils devtoolset-7-gcc devtoolset-7-gcc-c++ devtoolset-7-gcc-gfortran devtoolset-7-gdb\" && \\\n    yum install -y --setopt=tsflags=nodocs $INSTALL_PKGS && \\\n    rpm -V $INSTALL_PKGS && \\\n    yum -y clean all --enablerepo='*' && rm -rf /var/cache/yum\nENV PATH=/opt/rh/devtoolset-7/root/usr/bin:$PATH\nENV LD_LIBRARY_PATH=/opt/rh/devtoolset-7/root/usr/lib64:/opt/rh/devtoolset-7/root/usr/lib:$LD_LIBRARY_PATH\nRUN echo \"source scl_source enable devtoolset-7\" > \"/etc/profile.d/devtoolset-7.sh\"\n\n# cmake 3.16.0\nWORKDIR /opt\nRUN wget -q https://cmake.org/files/v3.16/cmake-3.16.0-Linux-x86_64.tar.gz && \\\n    tar -zxvf cmake-3.16.0-Linux-x86_64.tar.gz && rm cmake-3.16.0-Linux-x86_64.tar.gz && \\\n    mv cmake-3.16.0-Linux-x86_64 cmake-3.16\nENV PATH=/opt/cmake-3.16/bin:${PATH}\n\n# ROCM\nRUN yum install -y kmod wget openblas-devel epel-release && rm -rf /var/cache/yum\nRUN echo \"[ROCm]\" > /etc/yum.repos.d/rocm.repo && \\\n    echo \"name=ROCm\" >> /etc/yum.repos.d/rocm.repo && \\\n    echo \"baseurl=http://repo.radeon.com/rocm/yum/4.0.1\" >> /etc/yum.repos.d/rocm.repo && \\\n    echo \"enabled=1\" >> /etc/yum.repos.d/rocm.repo && \\\n    echo \"gpgcheck=0\" >> /etc/yum.repos.d/rocm.repo\nRUN yum install -y rocm-dev rocm-utils rocfft miopen-hip rocblas hipsparse rocrand rccl hipcub rocthrust rocprofiler-dev roctracer-dev && rm -rf /var/cache/yum\n# fix rocthrust\nRUN sed -i '21 a #include <thrust/system/hip/config.h>' /opt/rocm/include/thrust/system/hip/detail/error.inl\n# export ROCM env\nENV ROCM_PATH=/opt/rocm\nENV HIP_PATH=/opt/rocm/hip\nENV HIP_CLANG_PATH=/opt/rocm/llvm/bin\nENV PATH=/opt/rocm/bin:$PATH\nENV PATH=/opt/rocm/opencl/bin:$PATH\nENV LD_LIBRARY_PATH=/opt/rocm/lib:$LD_LIBRARY_PATH\n\n# git 2.17.1\nRUN cd /opt && wget -q https://paddle-ci.gz.bcebos.com/git-2.17.1.tar.gz && \\\n  tar -xvf git-2.17.1.tar.gz && \\\n  cd git-2.17.1 && \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-openssl --prefix=/usr/local && \\\n  make -j8 && make install && \\\n  cd .. && rm -rf git-2.17.1.tar.gz && rm -rf git-2.17.1\n\nENV GOROOT=/usr/local/go\nENV GOPATH=/root/gopath\nENV PATH=${GOROOT}/bin:${GOPATH}/bin:${PATH}\n\n# go 1.8.1\nRUN wget --no-check-certificate -qO- https://storage.googleapis.com/golang/go1.8.1.linux-amd64.tar.gz | \\\n    tar -xz -C /usr/local && \\\n    mkdir /root/gopath && \\\n    mkdir /root/gopath/bin && \\\n    mkdir /root/gopath/src\n\n# protobuf 3.6.1\nRUN cd /opt && wget -q --no-check-certificate https://paddle-ci.cdn.bcebos.com/protobuf-cpp-3.6.1.tar.gz && \\\n    tar xzf protobuf-cpp-3.6.1.tar.gz && \\\n    cd protobuf-3.6.1 && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make -j4 && make install && \\\n    cd .. && rm -f protobuf-cpp-3.6.1.tar.gz && rm -rf protobuf-3.6.1\n\n# conda\nENV CONDA_FILE=Miniconda3-py37_4.9.2-Linux-x86_64.sh\nRUN cd /opt && wget https://repo.anaconda.com/miniconda/${CONDA_FILE} && chmod +x ${CONDA_FILE}\nRUN mkdir /opt/conda && ./${CONDA_FILE} -b -f -p \"/opt/conda\" && rm -rf ${CONDA_FILE}\nENV PATH=/opt/conda/bin:${PATH}\nRUN conda init bash && conda install -n base jupyter jupyterlab\n\n# install pylint and pre-commit\nRUN /opt/conda/bin/pip install pre-commit pylint pytest astroid isort protocol PyGithub\n\n# install Paddle requirement\nRUN wget https://raw.githubusercontent.com/PaddlePaddle/Paddle/develop/python/requirements.txt -O /root/requirements.txt\nRUN /opt/conda/bin/pip install -r /root/requirements.txt && \\\n    rm -rf /root/requirements.txt\n\nRUN wget https://raw.githubusercontent.com/PaddlePaddle/Paddle/develop/python/unittest_py/requirements.txt -O /root/requirements.txt\nRUN /opt/conda/bin/pip install -r /root/requirements.txt && rm -rf /root/requirements.txt\n\n# install PaddleClas requirement\nRUN wget https://raw.githubusercontent.com/PaddlePaddle/PaddleClas/develop/requirements.txt -O /root/requirements.txt\nRUN /opt/conda/bin/pip install -r /root/requirements.txt && rm -rf /root/requirements.txt\n\n# install PaddleDetection requirement\nRUN wget https://raw.githubusercontent.com/PaddlePaddle/PaddleDetection/develop/requirements.txt -O /root/requirements.txt\nRUN /opt/conda/bin/pip install -r /root/requirements.txt && rm -rf /root/requirements.txt\n\n# configure ssh\nRUN sed -i \"s/^#PermitRootLogin/PermitRootLogin/\" /etc/ssh/sshd_config && \\\n    sed -i \"s/^#PubkeyAuthentication/PubkeyAuthentication/\" /etc/ssh/sshd_config && \\\n    sed -i \"s/^#RSAAuthentication/RSAAuthentication/\" /etc/ssh/sshd_config\n\n# clang-format 3.8\nRUN wget https://copr.fedorainfracloud.org/coprs/alonid/llvm-3.8.0/repo/epel-7/alonid-llvm-3.8.0-epel-7.repo -P /etc/yum.repos.d/\nRUN yum install -y clang-3.8.0 && rm -rf /var/cache/yum\nENV PATH=/opt/llvm-3.8.0/bin:${PATH}\n\n# patchelf\nRUN yum install -y patchelf && \\\n    yum clean all && \\\n    rm -rf /var/cache/yum && \\\n    rm -rf /var/lib/yum/yumdb && \\\n    rm -rf /var/lib/yum/history\n\n# swig 2.0.12\nRUN wget -O /opt/swig-2.0.12.tar.gz https://sourceforge.net/projects/swig/files/swig/swig-2.0.12/swig-2.0.12.tar.gz/download && \\\n    cd /opt && tar xzf swig-2.0.12.tar.gz && cd /opt/swig-2.0.12 && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make && make install && \\\n    cd /opt && rm swig-2.0.12.tar.gz && rm -rf swig-2.0.12\n\n# ccache 3.7.9\nRUN cd /opt && wget https://paddle-ci.gz.bcebos.com/ccache-3.7.9.tar.gz && \\\n    tar xf ccache-3.7.9.tar.gz && mkdir /usr/local/ccache-3.7.9 && cd ccache-3.7.9 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" -prefix=/usr/local/ccache-3.7.9 && \\\n    make -j8 && make install && \\\n    ln -s /usr/local/ccache-3.7.9/bin/ccache /usr/local/bin/ccache && \\\n    cd .. && rm -rf ccache-3.7.9.tar.gz && rm -rf ccache-3.7.9\n\n# configure ssh\nRUN sed -i \"s/^#PermitRootLogin/PermitRootLogin/\" /etc/ssh/sshd_config && \\\n    sed -i \"s/^#PubkeyAuthentication/PubkeyAuthentication/\" /etc/ssh/sshd_config && \\\n    sed -i \"s/^#RSAAuthentication/RSAAuthentication/\" /etc/ssh/sshd_config && \\\n    sed -i \"s/#UseDNS .*/UseDNS no/\" /etc/ssh/sshd_config\n\nRUN ssh-keygen -A\n\nEXPOSE 22\n"
}