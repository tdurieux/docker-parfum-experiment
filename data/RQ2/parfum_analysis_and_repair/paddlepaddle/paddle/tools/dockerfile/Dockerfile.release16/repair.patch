diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/paddlepaddle/paddle/tools/dockerfile/Dockerfile.release16 b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/paddlepaddle/paddle/tools/dockerfile/Dockerfile.release16/repaired.Dockerfile
index 66974f4..6f7cb6a 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/paddlepaddle/paddle/tools/dockerfile/Dockerfile.release16
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/paddlepaddle/paddle/tools/dockerfile/Dockerfile.release16/repaired.Dockerfile
@@ -17,20 +17,20 @@ COPY paddle/scripts/docker/root/ /root/
 
 # Prepare packages for Python
 RUN apt-get update && \
-    apt-get install -y make build-essential libssl-dev zlib1g-dev libbz2-dev \
+    apt-get install --no-install-recommends -y make build-essential libssl-dev zlib1g-dev libbz2-dev \
     libreadline-dev libsqlite3-dev wget curl llvm libncurses5-dev libncursesw5-dev \
-    xz-utils tk-dev libffi-dev liblzma-dev
+    xz-utils tk-dev libffi-dev liblzma-dev && rm -rf /var/lib/apt/lists/*;
 
 RUN apt-get update && \
-    apt-get install -y --allow-downgrades --allow-change-held-packages \
+    apt-get install --no-install-recommends -y --allow-downgrades --allow-change-held-packages \
     patchelf git python-pip python-dev python-opencv openssh-server bison \
     wget unzip unrar tar xz-utils bzip2 gzip coreutils ntp \
-    curl sed grep graphviz libjpeg-dev zlib1g-dev  \
+    curl sed grep graphviz libjpeg-dev zlib1g-dev \
     python-matplotlib \
-    automake locales clang-format swig  \
+    automake locales clang-format swig \
     liblapack-dev liblapacke-dev \
     net-tools libtool module-init-tools vim && \
-    apt-get clean -y
+    apt-get clean -y && rm -rf /var/lib/apt/lists/*;
 
 RUN wget https://github.com/koalaman/shellcheck/releases/download/v0.7.1/shellcheck-v0.7.1.linux.x86_64.tar.xz -O shellcheck-v0.7.1.linux.x86_64.tar.xz && \
     tar -xf shellcheck-v0.7.1.linux.x86_64.tar.xz && cp  shellcheck-v0.7.1/shellcheck /usr/bin/shellcheck && \
@@ -48,10 +48,10 @@ ENV PATH=/home/cmake-3.16.0-Linux-x86_64/bin:$PATH
 # Install Python3.7
 RUN mkdir -p /root/python_build/ && wget -q https://paddle-ci.gz.bcebos.com/sqlite-autoconf-3250300.tar.gz && \
     tar -zxf sqlite-autoconf-3250300.tar.gz && cd sqlite-autoconf-3250300 && \
-    ./configure -prefix=/usr/local && make -j8 && make install && cd ../ && rm sqlite-autoconf-3250300.tar.gz && \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" -prefix=/usr/local && make -j8 && make install && cd ../ && rm sqlite-autoconf-3250300.tar.gz && \
     wget -q https://www.python.org/ftp/python/3.7.0/Python-3.7.0.tgz && \
     tar -xzf Python-3.7.0.tgz && cd Python-3.7.0 && \
-    CFLAGS="-Wformat" ./configure --prefix=/usr/local/python3.7.0 --enable-shared > /dev/null && \
+    CFLAGS="-Wformat" ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/usr/local/python3.7.0 --enable-shared > /dev/null && \
     make -j8 > /dev/null && make altinstall > /dev/null && ldconfig && \
     cd ../ && rm -rf Python-3.7.0 Python-3.7.0.tgz
 
@@ -66,11 +66,11 @@ RUN rm -r /root/python_build
 
 WORKDIR /home
 RUN python3.7 -m pip uninstall -y pip setuptools
-RUN wget https://files.pythonhosted.org/packages/a7/e0/30642b9c2df516506d40b563b0cbd080c49c6b3f11a70b4c7a670f13a78b/setuptools-50.3.2.zip && apt-get -y install unzip && unzip setuptools-50.3.2.zip
+RUN wget https://files.pythonhosted.org/packages/a7/e0/30642b9c2df516506d40b563b0cbd080c49c6b3f11a70b4c7a670f13a78b/setuptools-50.3.2.zip && apt-get -y --no-install-recommends install unzip && unzip setuptools-50.3.2.zip && rm -rf /var/lib/apt/lists/*;
 WORKDIR /home/setuptools-50.3.2
 RUN python3.7 setup.py build && python3.7 setup.py install
 WORKDIR /home
-RUN wget https://files.pythonhosted.org/packages/28/af/2c76c8aa46ccdf7578b83d97a11a2d1858794d4be4a1610ade0d30182e8b/pip-20.0.1.tar.gz && tar -zxvf pip-20.0.1.tar.gz
+RUN wget https://files.pythonhosted.org/packages/28/af/2c76c8aa46ccdf7578b83d97a11a2d1858794d4be4a1610ade0d30182e8b/pip-20.0.1.tar.gz && tar -zxvf pip-20.0.1.tar.gz && rm pip-20.0.1.tar.gz
 WORKDIR pip-20.0.1
 RUN python3.7 setup.py install
 
@@ -89,7 +89,7 @@ ENV GOROOT=/usr/local/go GOPATH=/root/gopath
 # should not be in the same line with GOROOT definition, otherwise docker build could not find GOROOT.
 ENV PATH=${PATH}:${GOROOT}/bin:${GOPATH}/bin
 # install glide
-RUN curl -s -q https://glide.sh/get | sh
+RUN curl -f -s -q https://glide.sh/get | sh
 
 # Install TensorRT
 # following TensorRT.tar.gz is not the default official one, we do two miny changes:
@@ -98,7 +98,7 @@ RUN curl -s -q https://glide.sh/get | sh
 # 2. Manually add ~IPluginFactory() in IPluginFactory class of NvInfer.h, otherwise, it couldn't work in paddle.
 #    See https://github.com/PaddlePaddle/Paddle/issues/10129 for details.
 
-# Downgrade TensorRT 
+# Downgrade TensorRT
 COPY tools/dockerfile/build_scripts /build_scripts
 RUN bash /build_scripts/install_nccl2.sh
 RUN rm -rf /build_scripts
@@ -129,9 +129,9 @@ RUN pip3.7 --no-cache-dir install -r /root/requirements.txt
 
 # To fix https://github.com/PaddlePaddle/Paddle/issues/1954, we use
 # the solution in https://urllib3.readthedocs.io/en/latest/user-guide.html#ssl-py2
-RUN apt-get install -y libssl-dev libffi-dev && apt-get clean -y && \
-    pip3.7 install --upgrade pip && \ 
-    pip3.7 --no-cache-dir install certifi urllib3[secure]
+RUN apt-get install --no-install-recommends -y libssl-dev libffi-dev && apt-get clean -y && \
+    pip3.7 install --upgrade pip && \
+    pip3.7 --no-cache-dir install certifi urllib3[secure] && rm -rf /var/lib/apt/lists/*;
 
 # ar mishandles 4GB files
 # https://sourceware.org/bugzilla/show_bug.cgi?id=14625
@@ -139,9 +139,9 @@ RUN apt-get install -y libssl-dev libffi-dev && apt-get clean -y && \
 RUN wget -q https://launchpad.net/ubuntu/+archive/primary/+sourcefiles/binutils/2.27-9ubuntu1/binutils_2.27.orig.tar.gz && \
     tar -xzf binutils_2.27.orig.tar.gz && \
     cd binutils-2.27 && \
-    ./configure && make -j && make install && cd .. && rm -rf binutils-2.27 binutils_2.27.orig.tar.gz
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" && make -j && make install && cd .. && rm -rf binutils-2.27 binutils_2.27.orig.tar.gz
 
-RUN apt-get install libprotobuf-dev -y
+RUN apt-get install --no-install-recommends libprotobuf-dev -y && rm -rf /var/lib/apt/lists/*;
 
 # Older versions of patchelf limited the size of the files being processed and were fixed in this pr.
 # https://github.com/NixOS/patchelf/commit/ba2695a8110abbc8cc6baf0eea819922ee5007fa
@@ -157,7 +157,7 @@ CMD source ~/.bashrc
 # ccache 3.7.9
 RUN wget https://paddle-ci.gz.bcebos.com/ccache-3.7.9.tar.gz && \
     tar xf ccache-3.7.9.tar.gz && mkdir /usr/local/ccache-3.7.9 && cd ccache-3.7.9 && \
-    ./configure -prefix=/usr/local/ccache-3.7.9 && \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" -prefix=/usr/local/ccache-3.7.9 && \
     make -j8 && make install && \
     ln -s /usr/local/ccache-3.7.9/bin/ccache /usr/local/bin/ccache && \
     cd ../ && rm -rf ccache-3.7.9 ccache-3.7.9.tar.gz