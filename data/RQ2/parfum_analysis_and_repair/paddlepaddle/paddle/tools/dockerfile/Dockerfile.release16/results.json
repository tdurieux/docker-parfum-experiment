{
  "startTime": 1674253934682,
  "endTime": 1674253936323,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 91,
        "lineEnd": 91,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 93
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 141,
        "lineEnd": 141,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 159,
        "lineEnd": 159,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 137,
        "columnEnd": 164
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 24,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 141,
        "columnEnd": 165
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 131,
        "lineEnd": 131,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 143,
        "lineEnd": 143,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 141,
        "columnEnd": 165
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 131,
        "lineEnd": 131,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 143,
        "lineEnd": 143,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 24,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 141,
        "columnEnd": 165
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 131,
        "lineEnd": 131,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 143,
        "lineEnd": 143,
        "columnStart": 4,
        "columnEnd": 38
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 141,
        "columnEnd": 189
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 131,
        "lineEnd": 131,
        "columnStart": 4,
        "columnEnd": 68
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 143,
        "lineEnd": 143,
        "columnStart": 4,
        "columnEnd": 62
      }
    }
  ],
  "repairedDockerfile": "# A image for building paddle binaries\n# Use cuda devel base image for both cpu and gpu environment\n# When you modify it, please be aware of cudnn-runtime version\nFROM nvidia/cuda:<baseimg>\nMAINTAINER PaddlePaddle Authors <paddle-dev@baidu.com>\n\n# ENV variables\nARG WITH_GPU\nARG WITH_AVX\n\nENV WITH_GPU=${WITH_GPU:-ON}\nENV WITH_AVX=${WITH_AVX:-ON}\n\nENV HOME /root\n# Add bash enhancements\nCOPY paddle/scripts/docker/root/ /root/\n\n# Prepare packages for Python\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y make build-essential libssl-dev zlib1g-dev libbz2-dev \\\n    libreadline-dev libsqlite3-dev wget curl llvm libncurses5-dev libncursesw5-dev \\\n    xz-utils tk-dev libffi-dev liblzma-dev && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y --allow-downgrades --allow-change-held-packages \\\n    patchelf git python-pip python-dev python-opencv openssh-server bison \\\n    wget unzip unrar tar xz-utils bzip2 gzip coreutils ntp \\\n    curl sed grep graphviz libjpeg-dev zlib1g-dev \\\n    python-matplotlib \\\n    automake locales clang-format swig \\\n    liblapack-dev liblapacke-dev \\\n    net-tools libtool module-init-tools vim && \\\n    apt-get clean -y && rm -rf /var/lib/apt/lists/*;\n\nRUN wget https://github.com/koalaman/shellcheck/releases/download/v0.7.1/shellcheck-v0.7.1.linux.x86_64.tar.xz -O shellcheck-v0.7.1.linux.x86_64.tar.xz && \\\n    tar -xf shellcheck-v0.7.1.linux.x86_64.tar.xz && cp  shellcheck-v0.7.1/shellcheck /usr/bin/shellcheck && \\\n    rm -rf shellcheck-v0.7.1.linux.x86_64.tar.xz shellcheck-v0.7.1\n\n# Downgrade gcc&&g++\n<install_gcc>\n\n# install cmake\nWORKDIR /home\nRUN wget -q https://cmake.org/files/v3.16/cmake-3.16.0-Linux-x86_64.tar.gz && tar -zxvf cmake-3.16.0-Linux-x86_64.tar.gz && rm cmake-3.16.0-Linux-x86_64.tar.gz\nENV PATH=/home/cmake-3.16.0-Linux-x86_64/bin:$PATH\n\n\n# Install Python3.7\nRUN mkdir -p /root/python_build/ && wget -q https://paddle-ci.gz.bcebos.com/sqlite-autoconf-3250300.tar.gz && \\\n    tar -zxf sqlite-autoconf-3250300.tar.gz && cd sqlite-autoconf-3250300 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" -prefix=/usr/local && make -j8 && make install && cd ../ && rm sqlite-autoconf-3250300.tar.gz && \\\n    wget -q https://www.python.org/ftp/python/3.7.0/Python-3.7.0.tgz && \\\n    tar -xzf Python-3.7.0.tgz && cd Python-3.7.0 && \\\n    CFLAGS=\"-Wformat\" ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/local/python3.7.0 --enable-shared > /dev/null && \\\n    make -j8 > /dev/null && make altinstall > /dev/null && ldconfig && \\\n    cd ../ && rm -rf Python-3.7.0 Python-3.7.0.tgz\n\nENV PATH=/usr/local/python3.7.0/include:${PATH}\nENV PATH=/usr/local/python3.7.0/bin:${PATH}\nENV LD_LIBRARY_PATH=/usr/local/python3.7.0/lib:${LD_LIBRARY_PATH}\nENV CPLUS_INCLUDE_PATH=/usr/local/python3.7.0/include/python3.7:$CPLUS_INCLUDE_PATH\nRUN ln -sf /usr/local/python3.7.0/bin/python3.7 /usr/local/bin/python3 && ln -sf /usr/local/python3.7.0/bin/python3.7 /usr/bin/python3\nRUN mv /usr/bin/python /usr/bin/python.bak && ln -s /usr/local/python3.7.0/bin/python3.7 /usr/local/bin/python && ln -s /usr/local/python3.7.0/bin/python3.7 /usr/bin/python\n\nRUN rm -r /root/python_build\n\nWORKDIR /home\nRUN python3.7 -m pip uninstall -y pip setuptools\nRUN wget https://files.pythonhosted.org/packages/a7/e0/30642b9c2df516506d40b563b0cbd080c49c6b3f11a70b4c7a670f13a78b/setuptools-50.3.2.zip && apt-get -y --no-install-recommends install unzip && unzip setuptools-50.3.2.zip && rm -rf /var/lib/apt/lists/*;\nWORKDIR /home/setuptools-50.3.2\nRUN python3.7 setup.py build && python3.7 setup.py install\nWORKDIR /home\nRUN wget https://files.pythonhosted.org/packages/28/af/2c76c8aa46ccdf7578b83d97a11a2d1858794d4be4a1610ade0d30182e8b/pip-20.0.1.tar.gz && tar -zxvf pip-20.0.1.tar.gz && rm pip-20.0.1.tar.gz\nWORKDIR pip-20.0.1\nRUN python3.7 setup.py install\n\nWORKDIR /home\nRUN rm setuptools-50.3.2.zip pip-20.0.1.tar.gz && \\\n    rm -r setuptools-50.3.2 pip-20.0.1\n\n# Install Go and glide\nWORKDIR /home\nRUN wget -qO- https://paddle-ci.gz.bcebos.com/go1.17.2.linux-amd64.tar.gz | \\\n    tar -xz -C /usr/local && \\\n    mkdir /root/gopath && \\\n    mkdir /root/gopath/bin && \\\n    mkdir /root/gopath/src\nENV GOROOT=/usr/local/go GOPATH=/root/gopath\n# should not be in the same line with GOROOT definition, otherwise docker build could not find GOROOT.\nENV PATH=${PATH}:${GOROOT}/bin:${GOPATH}/bin\n# install glide\nRUN curl -f -s -q https://glide.sh/get | sh\n\n# Install TensorRT\n# following TensorRT.tar.gz is not the default official one, we do two miny changes:\n# 1. Remove the unnecessary files to make the library small. TensorRT.tar.gz only contains include and lib now,\n#    and its size is only one-third of the official one.\n# 2. Manually add ~IPluginFactory() in IPluginFactory class of NvInfer.h, otherwise, it couldn't work in paddle.\n#    See https://github.com/PaddlePaddle/Paddle/issues/10129 for details.\n\n# Downgrade TensorRT\nCOPY tools/dockerfile/build_scripts /build_scripts\nRUN bash /build_scripts/install_nccl2.sh\nRUN rm -rf /build_scripts\n\n# git credential to skip password typing\nRUN git config --global credential.helper store\n\n# Fix locales to en_US.UTF-8\nRUN localedef -i en_US -f UTF-8 en_US.UTF-8\n\n# specify sphinx version as 1.5.6 and remove -U option for [pip install -U\n# sphinx-rtd-theme] since -U option will cause sphinx being updated to newest\n# version(1.7.1 for now), which causes building documentation failed.\nRUN pip3.7 --no-cache-dir install -U wheel py-cpuinfo==5.0.0 && \\\n    pip3.7 --no-cache-dir install -U docopt PyYAML sphinx==1.5.6 && \\\n    pip3.7 --no-cache-dir install sphinx-rtd-theme==0.1.9 recommonmark\n\nRUN pip3.7 --no-cache-dir install 'pre-commit==1.10.4' 'ipython==5.3.0' && \\\n    pip3.7 --no-cache-dir install 'ipykernel==4.6.0' 'jupyter==1.0.0'\n\n#For docstring checker\nRUN pip3.7 --no-cache-dir install pylint pytest astroid isort\n\nRUN pip3.7 --no-cache-dir install coverage\n\nCOPY ./python/requirements.txt /root/\nRUN pip3.7 --no-cache-dir install -r /root/requirements.txt\n\n# To fix https://github.com/PaddlePaddle/Paddle/issues/1954, we use\n# the solution in https://urllib3.readthedocs.io/en/latest/user-guide.html#ssl-py2\nRUN apt-get install --no-install-recommends -y libssl-dev libffi-dev && apt-get clean -y && \\\n    pip3.7 install --upgrade pip && \\\n    pip3.7 --no-cache-dir install certifi urllib3[secure] && rm -rf /var/lib/apt/lists/*;\n\n# ar mishandles 4GB files\n# https://sourceware.org/bugzilla/show_bug.cgi?id=14625\n# remove them when apt-get support 2.27 and higher version\nRUN wget -q https://launchpad.net/ubuntu/+archive/primary/+sourcefiles/binutils/2.27-9ubuntu1/binutils_2.27.orig.tar.gz && \\\n    tar -xzf binutils_2.27.orig.tar.gz && \\\n    cd binutils-2.27 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make -j && make install && cd .. && rm -rf binutils-2.27 binutils_2.27.orig.tar.gz\n\nRUN apt-get install --no-install-recommends libprotobuf-dev -y && rm -rf /var/lib/apt/lists/*;\n\n# Older versions of patchelf limited the size of the files being processed and were fixed in this pr.\n# https://github.com/NixOS/patchelf/commit/ba2695a8110abbc8cc6baf0eea819922ee5007fa\n# So install a newer version here.\nRUN wget -q https://paddle-ci.cdn.bcebos.com/patchelf_0.10-2_amd64.deb && \\\n    dpkg -i patchelf_0.10-2_amd64.deb && \\\n    rm -rf patchelf_0.10-2_amd64.deb\n\n# Configure OpenSSH server. c.f. https://docs.docker.com/engine/examples/running_ssh_service\nRUN mkdir /var/run/sshd && echo 'root:root' | chpasswd && sed -ri 's/^PermitRootLogin\\s+.*/PermitRootLogin yes/' /etc/ssh/sshd_config && sed -ri 's/UsePAM yes/#UsePAM yes/g' /etc/ssh/sshd_config\nCMD source ~/.bashrc\n\n# ccache 3.7.9\nRUN wget https://paddle-ci.gz.bcebos.com/ccache-3.7.9.tar.gz && \\\n    tar xf ccache-3.7.9.tar.gz && mkdir /usr/local/ccache-3.7.9 && cd ccache-3.7.9 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" -prefix=/usr/local/ccache-3.7.9 && \\\n    make -j8 && make install && \\\n    ln -s /usr/local/ccache-3.7.9/bin/ccache /usr/local/bin/ccache && \\\n    cd ../ && rm -rf ccache-3.7.9 ccache-3.7.9.tar.gz\n\n\nEXPOSE 22\n"
}