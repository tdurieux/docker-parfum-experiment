{
  "startTime": 1674250697356,
  "endTime": 1674250699167,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 88,
        "lineEnd": 88,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 113,
        "lineEnd": 113,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 112,
        "lineEnd": 112,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 22,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 22,
        "columnEnd": 67
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 25,
        "lineEnd": 28,
        "columnStart": 22,
        "columnEnd": 135
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 96,
        "lineEnd": 96,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 98,
        "lineEnd": 98,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 96,
        "lineEnd": 96,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 98,
        "lineEnd": 98,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 22,
        "columnEnd": 50
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 22,
        "columnEnd": 102
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 22,
        "columnEnd": 67
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 25,
        "lineEnd": 28,
        "columnStart": 22,
        "columnEnd": 135
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 96,
        "lineEnd": 96,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 98,
        "lineEnd": 98,
        "columnStart": 4,
        "columnEnd": 23
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 96,
        "lineEnd": 96,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 98,
        "lineEnd": 98,
        "columnStart": 4,
        "columnEnd": 47
      }
    }
  ],
  "repairedDockerfile": "# A image for building paddle binaries\n# Use cann 5.0.2.alpha005 and x86_64 for A300t-9000\n# Update CANN_VERSION if using other versions\n#\n# Build: CANN 5.0.2.alpha005\n# Download pkgs from https://www.hiascend.com/software/cann/community\n# and copy them to current dir first, then run build commands\n# cd Paddle/tools/dockerfile\n# docker build -f Dockerfile.npu_x86_64  \\\n# --build-arg CANN_VERSION=5.0.2.alpha005 \\\n# -t paddlepaddle/paddle:latest-dev-5.0.2.alpha005-gcc82-x86_64 .\n#\n# docker run -it --pids-limit 409600 \\\n# -v /usr/local/Ascend/driver:/usr/local/Ascend/driver \\\n# -v /usr/local/bin/npu-smi:/usr/local/bin/npu-smi \\\n# -v /usr/local/dcmi:/usr/local/dcmi \\\n# paddlepaddle/paddle:latest-dev-5.0.2.alpha005-gcc82-x86_64 /bin/bash\n\nFROM ubuntu:18.04\nMAINTAINER PaddlePaddle Authors <paddle-dev@baidu.com>\n\nRUN apt-get update && apt-get install --no-install-recommends -y apt-utils && rm -rf /var/lib/apt/lists/*;\nRUN ln -snf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime\nRUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends tzdata && rm -rf /var/lib/apt/lists/*;\nRUN apt-get update && apt-get install --no-install-recommends -y software-properties-common && add-apt-repository ppa:deadsnakes/ppa && add-apt-repository ppa:ubuntu-toolchain-r/test && rm -rf /var/lib/apt/lists/*;\nRUN apt-get update && apt-get install --no-install-recommends -y curl wget vim git unzip unrar tar xz-utils libssl-dev bzip2 gzip make libgcc-s1 sudo openssh-server \\\n            coreutils ntp language-pack-zh-hans python-qt4 libsm6 libxext6 libxrender-dev libgl1-mesa-glx libsqlite3-dev libopenblas-dev \\\n            bison graphviz libjpeg-dev zlib1g zlib1g-dev automake locales swig net-tools libtool module-init-tools numactl libnuma-dev \\\n            openssl libffi-dev pciutils libblas-dev gfortran libblas3 liblapack-dev liblapack3 default-jre screen tmux gdb lldb gcc g++ && rm -rf /var/lib/apt/lists/*;\n\n# GCC 8.2\nWORKDIR /opt\nRUN wget -q https://paddle-ci.gz.bcebos.com/gcc-8.2.0.tar.xz && \\\n    tar -xvf gcc-8.2.0.tar.xz && cd gcc-8.2.0 && \\\n    unset LIBRARY_PATH CPATH C_INCLUDE_PATH PKG_CONFIG_PATH CPLUS_INCLUDE_PATH INCLUDE && \\\n    ./contrib/download_prerequisites && \\\n    cd .. && mkdir temp_gcc82 && cd temp_gcc82 && \\\n    ../gcc-8.2.0/configure --prefix=/opt/compiler/gcc-8.2 --enable-threads=posix --disable-checking --disable-multilib && \\\n    make -j8 && make install && \\\n    cd .. && rm -rf temp_gcc82 && rm -rf gcc-8.2.0* && \\\n    cd /usr/lib/x86_64-linux-gnu && \\\n    mv libstdc++.so.6 libstdc++.so.6.bak && mv libstdc++.so.6.0.25 libstdc++.so.6.0.25.bak && \\\n    ln -s /opt/compiler/gcc-8.2/lib64/libgfortran.so.5 /usr/lib/x86_64-linux-gnu/libstdc++.so.5 && \\\n    ln -s /opt/compiler/gcc-8.2/lib64/libstdc++.so.6   /usr/lib/x86_64-linux-gnu/libstdc++.so.6 && \\\n    cp /opt/compiler/gcc-8.2/lib64/libstdc++.so.6.0.25 /usr/lib/x86_64-linux-gnu && \\\n    cd /usr/bin && mv gcc gcc.bak && mv g++ g++.bak && \\\n    ln -s /opt/compiler/gcc-8.2/bin/gcc /usr/bin/gcc && \\\n    ln -s /opt/compiler/gcc-8.2/bin/g++ /usr/bin/g++ && rm gcc-8.2.0.tar.xz\nENV PATH=/opt/compiler/gcc-8.2/bin:$PATH\nENV LD_LIBRARY_PATH=/opt/compiler/gcc-8.2/lib:/opt/compiler/gcc-8.2/lib64:$LD_LIBRARY_PATH\n\n# cmake 3.16\nWORKDIR /opt\nRUN wget -q https://cmake.org/files/v3.16/cmake-3.16.0-Linux-x86_64.tar.gz && \\\n    tar -zxvf cmake-3.16.0-Linux-x86_64.tar.gz && rm cmake-3.16.0-Linux-x86_64.tar.gz && \\\n    mv cmake-3.16.0-Linux-x86_64 cmake-3.16\nENV PATH=/opt/cmake-3.16/bin:${PATH}\n\n# conda 4.9.2\nWORKDIR /opt\nARG CONDA_FILE=Miniconda3-py37_4.9.2-Linux-x86_64.sh\nRUN cd /opt && wget -q https://repo.anaconda.com/miniconda/${CONDA_FILE} && chmod +x ${CONDA_FILE}\nRUN mkdir /opt/conda && ./${CONDA_FILE} -b -f -p \"/opt/conda\" && rm -rf ${CONDA_FILE}\nENV PATH=/opt/conda/bin:${PATH}\nRUN conda init bash && conda install -n base jupyter jupyterlab\n\n# install pylint and pre-commit\nRUN /opt/conda/bin/pip install pre-commit pylint pylint pytest astroid isort coverage qtconsole\n# install CANN 5.0.2 requirement\nRUN /opt/conda/bin/pip install 'numpy<1.20,>=1.13.3' 'decorator>=4.4.0' 'sympy>=1.4' 'cffi>=1.12.3' 'protobuf>=3.11.3'\nRUN /opt/conda/bin/pip install attrs pyyaml pathlib2 scipy requests psutil\n\n# install Paddle requirement\nRUN wget https://raw.githubusercontent.com/PaddlePaddle/Paddle/develop/python/requirements.txt -O /root/requirements.txt\nRUN /opt/conda/bin/pip install -r /root/requirements.txt && rm -rf /root/requirements.txt\nRUN wget https://raw.githubusercontent.com/PaddlePaddle/Paddle/develop/python/unittest_py/requirements.txt -O /root/requirements.txt\nRUN /opt/conda/bin/pip install -r /root/requirements.txt && rm -rf /root/requirements.txt\n\n# Install Go and glide\nRUN wget -qO- https://paddle-ci.cdn.bcebos.com/go1.8.1.linux-amd64.tar.gz | \\\n    tar -xz -C /usr/local && \\\n    mkdir /root/gopath && \\\n    mkdir /root/gopath/bin && \\\n    mkdir /root/gopath/src\nENV GOROOT=/usr/local/go GOPATH=/root/gopath\n# should not be in the same line with GOROOT definition, otherwise docker build could not find GOROOT.\nENV PATH=${PATH}:${GOROOT}/bin:${GOPATH}/bin\n# install glide\nRUN curl -f -s -q https://glide.sh/get | sh\n\n# git credential to skip password typing\nRUN git config --global credential.helper store\n\n# Fix locales to en_US.UTF-8\nRUN localedef -i en_US -f UTF-8 en_US.UTF-8\n\nRUN apt-get install --no-install-recommends libprotobuf-dev -y && rm -rf /var/lib/apt/lists/*;\n\nRUN apt install --no-install-recommends lsof -y && rm -rf /var/lib/apt/lists/*;\n\n# Older versions of patchelf limited the size of the files being processed and were fixed in this pr.\n# https://github.com/NixOS/patchelf/commit/ba2695a8110abbc8cc6baf0eea819922ee5007fa\n# So install a newer version here.\nRUN wget -q https://paddle-ci.cdn.bcebos.com/patchelf_0.10-2_amd64.deb && \\\n    dpkg -i patchelf_0.10-2_amd64.deb && rm -rf patchelf_0.10-2_amd64.deb\n\n# Configure OpenSSH server. c.f. https://docs.docker.com/engine/examples/running_ssh_service\nRUN mkdir /var/run/sshd && echo 'root:root' | chpasswd && sed -ri 's/^PermitRootLogin\\s+.*/PermitRootLogin yes/' /etc/ssh/sshd_config && sed -ri 's/UsePAM yes/#UsePAM yes/g' /etc/ssh/sshd_config\nCMD source ~/.bashrc\n\n# ccache 3.7.9\nRUN wget https://paddle-ci.gz.bcebos.com/ccache-3.7.9.tar.gz && \\\n    tar xf ccache-3.7.9.tar.gz && mkdir /usr/local/ccache-3.7.9 && cd ccache-3.7.9 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" -prefix=/usr/local/ccache-3.7.9 && \\\n    make -j8 && make install && cd .. && rm -rf ccache-3.7.9* && \\\n    ln -s /usr/local/ccache-3.7.9/bin/ccache /usr/local/bin/ccache && rm ccache-3.7.9.tar.gz\n\n# clang-form 3.8.0\nRUN wget https://paddle-ci.cdn.bcebos.com/clang+llvm-3.8.0-x86_64-linux-gnu-ubuntu-16.04.tar.xz && \\ \n    tar xf clang+llvm-3.8.0-x86_64-linux-gnu-ubuntu-16.04.tar.xz && cd clang+llvm-3.8.0-x86_64-linux-gnu-ubuntu-16.04 && \\\n    cp -r * /usr/local && cd .. && rm -rf clang+llvm-3.8.0-x86_64-linux-gnu-ubuntu-16.04 && \\\n    rm -rf clang+llvm-3.8.0-x86_64-linux-gnu-ubuntu-16.04.tar.xz\n\n# HwHiAiUser\nRUN groupadd HwHiAiUser && \\\n    useradd -g HwHiAiUser -m -d /home/HwHiAiUser HwHiAiUser\n\n# copy /etc/ascend_install.info to current dir fist\nCOPY ascend_install.info /etc/ascend_install.info\n\n# copy /usr/local/Ascend/driver/version.info to current dir fist\nRUN mkdir -p /usr/local/Ascend/driver\nCOPY version.info /usr/local/Ascend/driver/version.info\n\n# Download packages from https://www.hiascend.com/software/cann/community and copy them to current dir first\nWORKDIR /usr/local/Ascend\nARG CANN_VERSION=5.0.2.alpha005\n# update envs for driver\nENV LD_LIBRARY_PATH=/usr/local/Ascend/driver/lib64:$LD_LIBRARY_PATH\nENV LD_LIBRARY_PATH=/usr/local/Ascend/driver/lib64/common:$LD_LIBRARY_PATH\nENV LD_LIBRARY_PATH=/usr/local/Ascend/driver/lib64/driver:$LD_LIBRARY_PATH\n\n# Install Ascend toolkit\nCOPY Ascend-cann-toolkit_${CANN_VERSION}_linux-x86_64.run /usr/local/Ascend/\nRUN chmod +x Ascend-cann-toolkit_${CANN_VERSION}_linux-x86_64.run && \\\n    ./Ascend-cann-toolkit_${CANN_VERSION}_linux-x86_64.run --install --quiet && \\\n    rm -rf Ascend-cann-toolkit_${CANN_VERSION}_linux-x86_64.run\n# udpate envs for model transformation and operator develop\nENV PATH=/usr/local/Ascend/ascend-toolkit/latest/atc/bin:$PATH\nENV LD_LIBRARY_PATH=/usr/local/Ascend/ascend-toolkit/latest/atc/lib64:$LD_LIBRARY_PATH\nENV PYTHONPATH=/usr/local/Ascend/ascend-toolkit/latest/pyACL/python/site-packages/acl:$PYTHONPATH\nENV PYTHONPATH=/usr/local/Ascend/ascend-toolkit/latest/atc/python/site-packages:$PYTHONPATH\nENV PYTHONPATH=/usr/local/Ascend/ascend-toolkit/latest/toolkit/python/site-packages:$PYTHONPATH\nENV TOOLCHAIN_HOME=/usr/local/Ascend/ascend-toolkit/latest/toolkit\n\n# Install Ascend NNAE\nCOPY Ascend-cann-nnae_${CANN_VERSION}_linux-x86_64.run /usr/local/Ascend/\nRUN chmod +x Ascend-cann-nnae_${CANN_VERSION}_linux-x86_64.run && \\\n    ./Ascend-cann-nnae_${CANN_VERSION}_linux-x86_64.run --install --quiet && \\\n    rm -rf Ascend-cann-nnae_${CANN_VERSION}_linux-x86_64.run\n# update envs for third party AI framework develop\nENV PATH=/usr/local/Ascend/nnae/latest/fwkacllib/bin:$PATH\nENV PATH=/usr/local/Ascend/nnae/latest/fwkacllib/ccec_compiler/bin:$PATH\nENV LD_LIBRARY_PATH=/usr/local/Ascend/nnae/latest/fwkacllib/lib64:$LD_LIBRARY_PATH\nENV PYTHONPATH=/usr/local/Ascend/nnae/latest/fwkacllib/python/site-packages:$PYTHONPATH\nENV ASCEND_AICPU_PATH=/usr/local/Ascend/nnae/latest\nENV ASCEND_OPP_PATH=/usr/local/Ascend/nnae/latest/opp\n\n# DEV image should open error level log\n# 0 debug; 1 info; 2 warning; 3 error; 4 null\nENV ASCEND_GLOBAL_LOG_LEVEL=3\nRUN rm -rf /usr/local/Ascend/driver\n\n# Clean\nRUN apt-get clean -y\n\nEXPOSE 22\n"
}