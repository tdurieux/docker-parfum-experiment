{
  "startTime": 1674253588613,
  "endTime": 1674253590252,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 106,
        "lineEnd": 106,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 93,
        "lineEnd": 93,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 168,
        "lineEnd": 168,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 74,
        "lineEnd": 74,
        "columnStart": 137,
        "columnEnd": 164
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 2,
        "columnEnd": 47
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 28,
        "lineEnd": 30,
        "columnStart": 2,
        "columnEnd": 99
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 53,
        "lineEnd": 57,
        "columnStart": 2,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 141,
        "columnEnd": 165
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 141,
        "columnEnd": 165
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 141,
        "columnEnd": 165
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 141,
        "columnEnd": 165
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 2,
        "columnEnd": 47
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 28,
        "lineEnd": 30,
        "columnStart": 2,
        "columnEnd": 99
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 53,
        "lineEnd": 57,
        "columnStart": 2,
        "columnEnd": 45
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 141,
        "columnEnd": 165
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 141,
        "columnEnd": 165
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 141,
        "columnEnd": 189
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 141,
        "columnEnd": 189
      }
    }
  ],
  "repairedDockerfile": "# A image for building paddle binaries\n# Use cuda devel base image for both cpu and gpu environment\n# When you modify it, please be aware of cudnn-runtime version\nFROM <baseimg>\nMAINTAINER PaddlePaddle Authors <paddle-dev@baidu.com>\n\n# ENV variables\nARG WITH_GPU\nARG WITH_AVX\n\nENV WITH_GPU=${WITH_GPU:-ON}\nENV WITH_AVX=${WITH_AVX:-ON}\nENV DEBIAN_FRONTEND=noninteractive\n<setcuda>\n\nENV HOME /root\n# Add bash enhancements\nCOPY paddle/scripts/docker/root/ /root/\n\nRUN chmod 777 /tmp\n\nRUN apt-key del 7fa2af80\nRUN rm /etc/apt/sources.list.d/cuda.list && rm /etc/apt/sources.list.d/nvidia-ml.list\nRUN apt-key adv --fetch-keys https://developer.download.nvidia.cn/compute/cuda/repos/ubuntu1804/x86_64/3bf863cc.pub\n\nRUN apt-get update --allow-unauthenticated && \\\n  apt-get install --no-install-recommends -y software-properties-common && add-apt-repository ppa:deadsnakes/ppa && \\\n  apt-get update && \\\n  apt-get install --no-install-recommends -y curl wget vim git unzip unrar tar xz-utils libssl-dev bzip2 gzip \\\n    coreutils ntp language-pack-zh-hans python-qt4 libsm6 libxext6 libxrender-dev libgl1-mesa-glx \\\n    bison graphviz libjpeg-dev zlib1g-dev automake locales swig net-tools libtool module-init-tools && rm -rf /var/lib/apt/lists/*;\n<install_cpu_package>\n\n# Downgrade gcc&&g++\nWORKDIR /usr/bin\nCOPY tools/dockerfile/build_scripts /build_scripts\nRUN bash /build_scripts/install_trt.sh\nRUN bash /build_scripts/install_gcc.sh gcc82 && rm -rf /build_scripts\nRUN cp gcc gcc.bak && cp g++ g++.bak && rm gcc && rm g++\nRUN ln -s /usr/local/gcc-8.2/bin/gcc /usr/local/bin/gcc\nRUN ln -s /usr/local/gcc-8.2/bin/g++ /usr/local/bin/g++\nRUN ln -s /usr/local/gcc-8.2/bin/gcc /usr/bin/gcc\nRUN ln -s /usr/local/gcc-8.2/bin/g++ /usr/bin/g++\nENV PATH=/usr/local/gcc-8.2/bin:$PATH\n\n\n# install cmake\nWORKDIR /home\nRUN wget -q https://cmake.org/files/v3.16/cmake-3.16.0-Linux-x86_64.tar.gz && tar -zxvf cmake-3.16.0-Linux-x86_64.tar.gz && rm cmake-3.16.0-Linux-x86_64.tar.gz\nENV PATH=/home/cmake-3.16.0-Linux-x86_64/bin:$PATH\n\n\nRUN apt-get update && \\\n  apt-get install --no-install-recommends -y python2.7 python2.7-dev \\\n  python3.6 python3.6-dev \\\n  python3.7 python3.7-dev \\\n  python3.8 python3.8-dev python3.8-distutils \\\n  python3.9 python3.9-dev python3.9-distutils && \\\n  rm /usr/bin/python && ln -s /usr/bin/python3.7 /usr/bin/python && \\\n  rm /usr/bin/python3 && ln -s /usr/bin/python3.7 /usr/bin/python3 && rm -rf /var/lib/apt/lists/*;\n\n\nWORKDIR /home\nRUN wget https://files.pythonhosted.org/packages/a7/e0/30642b9c2df516506d40b563b0cbd080c49c6b3f11a70b4c7a670f13a78b/setuptools-50.3.2.zip && apt-get -y --no-install-recommends install unzip && unzip setuptools-50.3.2.zip && rm -rf /var/lib/apt/lists/*;\nWORKDIR /home/setuptools-50.3.2\nRUN python3.9 setup.py build && python3.9 setup.py install && \\\n  python3.8 setup.py build && python3.8 setup.py install && \\\n  python3.7 setup.py build && python3.7 setup.py install && \\\n  python3.6 setup.py build && python3.6 setup.py install\nWORKDIR /home\nRUN wget https://files.pythonhosted.org/packages/b0/d1/8acb42f391cba52e35b131e442e80deffbb8d0676b93261d761b1f0ef8fb/setuptools-40.6.2.zip && apt-get -y --no-install-recommends install unzip && unzip setuptools-40.6.2.zip && rm -rf /var/lib/apt/lists/*;\nWORKDIR /home/setuptools-40.6.2\nRUN python2.7 setup.py build && python2.7 setup.py install\nWORKDIR /home\nRUN wget https://files.pythonhosted.org/packages/28/af/2c76c8aa46ccdf7578b83d97a11a2d1858794d4be4a1610ade0d30182e8b/pip-20.0.1.tar.gz && tar -zxvf pip-20.0.1.tar.gz && rm pip-20.0.1.tar.gz\nWORKDIR pip-20.0.1\nRUN python2.7 setup.py install && \\\n  python3.9 setup.py install && \\\n  python3.8 setup.py install && \\\n  python3.7 setup.py install && \\\n  python3.6 setup.py install\n\nWORKDIR /home\nRUN rm setuptools-40.6.2.zip setuptools-50.3.2.zip pip-20.0.1.tar.gz && \\\n    rm -r setuptools-40.6.2 setuptools-50.3.2 pip-20.0.1\nRUN rm /usr/local/bin/pip && ln -s /usr/local/bin/pip3.7 /usr/local/bin/pip && \\\n  rm /usr/local/bin/pip3 && ln -s /usr/local/bin/pip3.7 /usr/local/bin/pip3\n\n\n# remove them when apt-get support 2.27 and higher version\nRUN wget -q https://ftp.gnu.org/gnu/binutils/binutils-2.33.1.tar.gz && \\ \n    tar -xzf binutils-2.33.1.tar.gz && \\ \n    cd binutils-2.33.1 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make -j && make install && cd .. && rm -rf binutils-2.33.1 binutils-2.33.1.tar.gz\n\n\n# Install Go and glide\nRUN wget --no-check-certificate -qO- https://paddle-ci.gz.bcebos.com/go1.17.2.linux-amd64.tar.gz | \\\n    tar -xz -C /usr/local && \\\n    mkdir /root/gopath && \\\n    mkdir /root/gopath/bin && \\\n    mkdir /root/gopath/src\nENV GOROOT=/usr/local/go GOPATH=/root/gopath\n# should not be in the same line with GOROOT definition, otherwise docker build could not find GOROOT.\nENV PATH=${PATH}:${GOROOT}/bin:${GOPATH}/bin\n# install glide\nRUN curl -f -s -q https://glide.sh/get | sh\n\n# git credential to skip password typing\nRUN git config --global credential.helper store\n\n# Fix locales to en_US.UTF-8\nRUN localedef -i en_US -f UTF-8 en_US.UTF-8\n\nRUN pip3.6 --no-cache-dir install ipython==5.3.0 && \\\n    pip3.6 --no-cache-dir install ipykernel==4.6.0 wheel && \\\n    pip3.7 --no-cache-dir install ipython==5.3.0 && \\\n    pip3.7 --no-cache-dir install ipykernel==4.6.0 wheel && \\\n    pip3.8 --no-cache-dir install ipython==5.3.0 && \\\n    pip3.8 --no-cache-dir install ipykernel==4.6.0 wheel && \\\n    pip3.9 --no-cache-dir install ipython==5.3.0 && \\\n    pip3.9 --no-cache-dir install ipykernel==4.6.0 wheel && \\\n    pip2.7 --no-cache-dir install pre-commit==1.10.4 ipython==5.3.0 && \\\n    pip2.7 --no-cache-dir install ipykernel==4.6.0 wheel\n\n#For docstring checker\nRUN pip3.6 --no-cache-dir install pytest astroid isort && \\\n    pip3.7 --no-cache-dir install pytest astroid isort && \\\n    pip3.8 --no-cache-dir install pytest astroid isort && \\\n    pip3.9 --no-cache-dir install pytest astroid isort && \\\n    pip2.7 --no-cache-dir install pytest astroid isort\n\n#For pre-commit\nRUN pip3.6 --no-cache-dir install --upgrade pip==20.3.3 && \\\n    pip3.7 --no-cache-dir install --upgrade pip && \\\n    pip3.8 --no-cache-dir install --upgrade pip && \\\n    pip3.9 --no-cache-dir install --upgrade pip\n\nRUN pip3.6 --no-cache-dir install pre-commit==2.1.1 pylint==2.12.0 && \\\n    pip3.7 --no-cache-dir install pre-commit==2.17.0 pylint==2.12.0 && \\\n    pip3.8 --no-cache-dir install pre-commit==2.17.0 pylint==2.12.0 && \\\n    pip3.9 --no-cache-dir install pre-commit==2.17.0 pylint==2.12.0 && \\\n    pip3.6 --no-cache-dir install cpplint==1.6.0 clang-format==13.0.0 && \\\n    pip3.7 --no-cache-dir install cpplint==1.6.0 clang-format==13.0.0 && \\\n    pip3.8 --no-cache-dir install cpplint==1.6.0 clang-format==13.0.0 && \\\n    pip3.9 --no-cache-dir install cpplint==1.6.0 clang-format==13.0.0\n\nCOPY ./python/requirements.txt /root/\nRUN pip3.6 --no-cache-dir install -r /root/requirements.txt && \\\n    pip3.7 --no-cache-dir install -r /root/requirements.txt && \\\n    pip3.8 --no-cache-dir install -r /root/requirements.txt && \\\n    pip3.9 --no-cache-dir install -r /root/requirements.txt\n\n\n# Older versions of patchelf limited the size of the files being processed and were fixed in this pr.\n# https://github.com/NixOS/patchelf/commit/ba2695a8110abbc8cc6baf0eea819922ee5007fa\n# So install a newer version here.\nRUN wget -q https://paddle-ci.cdn.bcebos.com/patchelf_0.10-2_amd64.deb && \\\n    dpkg -i patchelf_0.10-2_amd64.deb && \\\n    rm -rf patchelf_0.10-2_amd64.deb\n\n# Configure OpenSSH server. c.f. https://docs.docker.com/engine/examples/running_ssh_service\n#RUN mkdir /var/run/sshd && echo 'root:root' | chpasswd && sed -ri 's/^PermitRootLogin\\s+.*/PermitRootLogin yes/' /etc/ssh/sshd_config && sed -ri 's/UsePAM yes/#UsePAM yes/g' /etc/ssh/sshd_config\n#CMD source ~/.bashrc\n\n# ccache 3.7.9\nRUN wget https://paddle-ci.gz.bcebos.com/ccache-3.7.9.tar.gz && \\\n    tar xf ccache-3.7.9.tar.gz && mkdir /usr/local/ccache-3.7.9 && cd ccache-3.7.9 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" -prefix=/usr/local/ccache-3.7.9 && \\\n    make -j8 && make install && \\\n    ln -s /usr/local/ccache-3.7.9/bin/ccache /usr/local/bin/ccache && \\\n    cd ../ && rm -rf ccache-3.7.9 ccache-3.7.9.tar.gz\n\n# clang+llvm 3.8.0\nRUN wget https://paddle-ci.cdn.bcebos.com/clang+llvm-3.8.0-x86_64-linux-gnu-ubuntu-16.04.tar.xz && \\ \n    tar xf clang+llvm-3.8.0-x86_64-linux-gnu-ubuntu-16.04.tar.xz && cd clang+llvm-3.8.0-x86_64-linux-gnu-ubuntu-16.04 && \\\n    cp -rn * /usr/local && cd .. && rm -rf clang+llvm-3.8.0-x86_64-linux-gnu-ubuntu-16.04 && rm -rf clang+llvm-3.8.0-x86_64-linux-gnu-ubuntu-16.04.tar.xz\n\nEXPOSE 22\n"
}