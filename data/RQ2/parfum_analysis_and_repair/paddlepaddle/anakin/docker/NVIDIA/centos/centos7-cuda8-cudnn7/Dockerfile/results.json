{
  "startTime": 1674254367915,
  "endTime": 1674254368525,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 28,
        "columnEnd": 39
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nvidia/cuda:8.0-cudnn7-devel-centos7\n\n# anakin install ubuntu GPU env\nRUN yum-config-manager --disable cuda && yum -y install vim wget git make glibc-devel libstdc++-deve epel-release && rm -rf /var/cache/yum/*\n\nRUN yum -y install python-pip && rm -rf /var/cache/yum/*\n\nRUN pip install  --no-cache-dir --upgrade pip && \\\n    pip install --no-cache-dir \\\n        flask numpy pyyaml scipy pandas\n\n# set env\nENV LIBRARY_PATH /usr/lib64:$LIBRARY_PATH\n\n# install cmake\nRUN wget https://cmake.org/files/v3.2/cmake-3.2.0.tar.gz && tar xzf cmake-3.2.0.tar.gz && \\\n    cd cmake-3.2.0 && ./bootstrap && \\\n    make -j4 && make install && cd .. && rm -f cmake-3.2.0.tar.gz\n\n# install protobuf\nRUN wget --no-check-certificate https://mirror.sobukus.de/files/src/protobuf/protobuf-cpp-3.4.0.tar.gz \\\n    && tar -xvf protobuf-cpp-3.4.0.tar.gz \\\n    && cd protobuf-3.4.0 && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n    && make -j4 && make install && cd .. \\\n    && rm -f protobuf-cpp-3.4.0.tar.gz\n\n# set env\nENV CUDNN_ROOT /usr/local/cuda/include\n\n# build and install anakin\nRUN git clone --branch developing --recursive https://github.com/PaddlePaddle/Anakin.git\n"
}