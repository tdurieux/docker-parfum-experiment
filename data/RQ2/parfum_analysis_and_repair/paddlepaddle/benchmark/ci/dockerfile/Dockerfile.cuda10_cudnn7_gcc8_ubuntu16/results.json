{
  "startTime": 1674251659336,
  "endTime": 1674251661630,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 131,
        "lineEnd": 131,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 82
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 82
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 87,
        "lineEnd": 87,
        "columnStart": 4,
        "columnEnd": 99
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 147,
        "lineEnd": 147,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 220,
        "lineEnd": 220,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 228,
        "lineEnd": 228,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 2,
        "columnEnd": 27
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 85,
        "lineEnd": 85,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 110,
        "lineEnd": 110,
        "columnStart": 135,
        "columnEnd": 160
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 141,
        "lineEnd": 141,
        "columnStart": 4,
        "columnEnd": 91
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 146,
        "lineEnd": 146,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 227,
        "lineEnd": 227,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 233,
        "lineEnd": 233,
        "columnStart": 5,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 26,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 81
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 62,
        "lineEnd": 71,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 103,
        "lineEnd": 103,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 206,
        "lineEnd": 206,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 222,
        "lineEnd": 222,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 103,
        "lineEnd": 103,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 206,
        "lineEnd": 206,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 222,
        "lineEnd": 222,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 26,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 81
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 62,
        "lineEnd": 71,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 103,
        "lineEnd": 103,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 206,
        "lineEnd": 206,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 222,
        "lineEnd": 222,
        "columnStart": 4,
        "columnEnd": 38
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 103,
        "lineEnd": 103,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 206,
        "lineEnd": 206,
        "columnStart": 4,
        "columnEnd": 68
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 222,
        "lineEnd": 222,
        "columnStart": 4,
        "columnEnd": 62
      }
    }
  ],
  "repairedDockerfile": "# A image for building paddle binaries\n# Use cuda devel base image for both cpu and gpu environment\n# When you modify it, please be aware of cudnn-runtime version\nFROM nvidia/cuda:10.1-cudnn7-devel-ubuntu16.04\nMAINTAINER PaddlePaddle Authors <paddle-dev@baidu.com>\n\nARG UBUNTU_MIRROR\nRUN /bin/bash -c 'if [[ -n ${UBUNTU_MIRROR} ]]; then sed -i 's#http://archive.ubuntu.com/ubuntu#${UBUNTU_MIRROR}#g' /etc/apt/sources.list; fi'\n\n# ENV variables\nARG WITH_GPU\nARG WITH_AVX\n\nENV WITH_GPU=${WITH_GPU:-ON}\nENV WITH_AVX=${WITH_AVX:-ON}\n\nENV HOME /root\n# Add bash enhancements\nCOPY ./paddle/scripts/docker/root/ /root/\n\nENV PATH=/usr/local/gcc-8.2/bin:$PATH\nRUN rm -rf /temp_gcc82 && rm -rf /gcc-8.2.0.tar.xz && rm -rf /gcc-8.2.0\n\n# Prepare packages for Python\n# apt install openmpi: In order to run a single test of pslib coverage\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y make build-essential libssl-dev zlib1g-dev libbz2-dev \\\n    libreadline-dev libsqlite3-dev wget curl llvm libncurses5-dev libncursesw5-dev \\\n    xz-utils tk-dev libffi-dev liblzma-dev openmpi-bin openmpi-doc libopenmpi-dev && rm -rf /var/lib/apt/lists/*;\n\n# gcc8.2\nRUN wget -q https://paddle-docker-tar.bj.bcebos.com/home/users/tianshuo/bce-python-sdk-0.8.27/gcc-8.2.0.tar.xz && \\\n  tar -xvf gcc-8.2.0.tar.xz && \\\n  cd gcc-8.2.0 && \\\n  sed -i 's#ftp://gcc.gnu.org/pub/gcc/infrastructure/#https://paddle-ci.gz.bcebos.com/#g' ./contrib/download_prerequisites && \\\n  unset LIBRARY_PATH CPATH C_INCLUDE_PATH PKG_CONFIG_PATH CPLUS_INCLUDE_PATH INCLUDE && \\\n  ./contrib/download_prerequisites && \\\n  cd .. && mkdir temp_gcc82 && cd temp_gcc82 && \\\n  ../gcc-8.2.0/configure --prefix=/usr/local/gcc-8.2 --enable-threads=posix --disable-checking --disable-multilib && \\\n  make -j8 && make install && rm gcc-8.2.0.tar.xz\n\nENV PATH=/usr/local/gcc-8.2/bin:$PATH\nENV LD_LIBRARY_PATH=/usr/local/gcc-8.2/lib64:$LD_LIBRARY_PATH\nRUN rm -rf /temp_gcc82 && rm -rf /gcc-8.2.0.tar.xz && rm -rf /gcc-8.2.0\n\n# Install Python3.6\nRUN mkdir -p /root/python_build/ && wget -q https://www.sqlite.org/2018/sqlite-autoconf-3250300.tar.gz && \\\n    tar -zxf sqlite-autoconf-3250300.tar.gz && cd sqlite-autoconf-3250300 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" -prefix=/usr/local && make -j8 && make install && cd ../ && rm sqlite-autoconf-3250300.tar.gz && \\\n    wget -q https://www.python.org/ftp/python/3.6.0/Python-3.6.0.tgz && \\\n    tar -xzf Python-3.6.0.tgz && cd Python-3.6.0 && \\\n    CFLAGS=\"-Wformat\" ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/local/ --enable-shared > /dev/null && \\\n    make -j8 > /dev/null && make altinstall > /dev/null && rm Python-3.6.0.tgz\n\n# Install Python3.7\nRUN wget -q https://www.python.org/ftp/python/3.7.0/Python-3.7.0.tgz && \\\n    tar -xzf Python-3.7.0.tgz && cd Python-3.7.0 && \\\n    CFLAGS=\"-Wformat\" ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/local/ --enable-shared > /dev/null && \\\n    make -j8 > /dev/null && make altinstall > /dev/null && rm Python-3.7.0.tgz\nRUN rm -r /root/python_build\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y --allow-downgrades --allow-change-held-packages \\\n    patchelf python3 python3-dev python3-pip \\\n    git python-pip python-dev python-opencv openssh-server bison \\\n    wget unzip unrar tar xz-utils bzip2 gzip coreutils ntp \\\n    curl sed grep graphviz libjpeg-dev zlib1g-dev \\\n    python-matplotlib gcc-4.8 g++-4.8 \\\n    automake locales clang-format swig \\\n    liblapack-dev liblapacke-dev \\\n    clang-3.8 llvm-3.8 libclang-3.8-dev \\\n    net-tools libtool && \\\n    apt-get clean -y && rm -rf /var/lib/apt/lists/*;\n\n# install cmake\nWORKDIR /home\nRUN wget -q https://cmake.org/files/v3.16/cmake-3.16.0-Linux-x86_64.tar.gz\nRUN tar -zxvf cmake-3.16.0-Linux-x86_64.tar.gz && rm cmake-3.16.0-Linux-x86_64.tar.gz\nRUN rm cmake-3.16.0-Linux-x86_64.tar.gz\nENV PATH=/home/cmake-3.16.0-Linux-x86_64/bin:$PATH\n\n# Install Python2.7.15 to replace original python\nWORKDIR /home\nENV version=2.7.15\nRUN wget https://www.python.org/ftp/python/$version/Python-$version.tgz\nRUN tar -xvf Python-$version.tgz && rm Python-$version.tgz\nWORKDIR /home/Python-$version\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-unicode=ucs4 --enable-shared CFLAGS=-fPIC --prefix=/usr/local/python2.7.15\nRUN make && make install\n\nRUN echo \"export PATH=/usr/local/python2.7.15/include:${PATH}\" >> ~/.bashrc\nRUN echo \"export PATH=/usr/local/python2.7.15/bin:${PATH}\" >> ~/.bashrc\nRUN echo \"export LD_LIBRARY_PATH=/usr/local/python2.7.15/lib:${LD_LIBRARY_PATH}\" >> ~/.bashrc\nRUN echo \"export CPLUS_INCLUDE_PATH=/usr/local/python2.7.15/include/python2.7:$CPLUS_INCLUDE_PATH\" >> ~/.bashrc\nENV PATH=/usr/local/python2.7.15/include:${PATH}\nENV PATH=/usr/local/python2.7.15/bin:${PATH}\nENV LD_LIBRARY_PATH=/usr/local/python2.7.15/lib:${LD_LIBRARY_PATH}\nENV CPLUS_INCLUDE_PATH=/usr/local/python2.7.15/include/python2.7:$CPLUS_INCLUDE_PATH\nRUN mv /usr/bin/python /usr/bin/python.bak\nRUN ln -s /usr/local/python2.7.15/bin/python2.7 /usr/local/bin/python\nRUN ln -s /usr/local/python2.7.15/bin/python2.7 /usr/bin/python\nWORKDIR /home\nRUN wget https://files.pythonhosted.org/packages/b0/d1/8acb42f391cba52e35b131e442e80deffbb8d0676b93261d761b1f0ef8fb/setuptools-40.6.2.zip\nRUN apt-get -y --no-install-recommends install unzip && rm -rf /var/lib/apt/lists/*;\nRUN unzip setuptools-40.6.2.zip\nWORKDIR /home/setuptools-40.6.2\nRUN python setup.py build\nRUN python setup.py install\nWORKDIR /home\n\nRUN wget https://files.pythonhosted.org/packages/69/81/52b68d0a4de760a2f1979b0931ba7889202f302072cc7a0d614211bc7579/pip-18.0.tar.gz && tar -zxvf pip-18.0.tar.gz && rm pip-18.0.tar.gz\nWORKDIR pip-18.0\nRUN python setup.py install && \\\n  python3.7 setup.py install && \\\n  python3.6 setup.py install && \\\n  python3 setup.py install\n\nWORKDIR /home\nRUN rm Python-$version.tgz setuptools-40.6.2.zip pip-18.0.tar.gz && \\\n    rm -r Python-$version setuptools-40.6.2 pip-18.0\n\n# Install Go and glide\nRUN wget -qO- https://paddle-ci.cdn.bcebos.com/go1.8.1.linux-amd64.tar.gz | \\\n    tar -xz -C /usr/local && \\\n    mkdir /root/gopath && \\\n    mkdir /root/gopath/bin && \\\n    mkdir /root/gopath/src\nENV GOROOT=/usr/local/go GOPATH=/root/gopath\n# should not be in the same line with GOROOT definition, otherwise docker build could not find GOROOT.\nENV PATH=${PATH}:${GOROOT}/bin:${GOPATH}/bin\n# install glide\nRUN curl -f -s -q https://glide.sh/get | sh\n\n# Install TensorRT\n# following TensorRT.tar.gz is not the default official one, we do two miny changes:\n# 1. Remove the unnecessary files to make the library small. TensorRT.tar.gz only contains include and lib now,\n#    and its size is only one-third of the official one.\n# 2. Manually add ~IPluginFactory() in IPluginFactory class of NvInfer.h, otherwise, it couldn't work in paddle.\n#    See https://github.com/PaddlePaddle/Paddle/issues/10129 for details.\n\nRUN wget -q https://paddlepaddledeps.bj.bcebos.com/TensorRT-6.0.1.5.Ubuntu-16.04.x86_64-gnu.cuda-10.1.cudnn7.tar.gz --no-check-certificate && \\\n    tar -zxf TensorRT-6.0.1.5.Ubuntu-16.04.x86_64-gnu.cuda-10.1.cudnn7.tar.gz -C /usr/local && \\\n    cp -rf /usr/local/TensorRT-6.0.1.5/include/* /usr/include/ && cp -rf /usr/local/TensorRT-6.0.1.5/lib/* /usr/lib/ && rm TensorRT-6.0.1.5.Ubuntu-16.04.x86_64-gnu.cuda-10.1.cudnn7.tar.gz\n\n# Install patchelf-0.10\nRUN wget https://paddle-ci.gz.bcebos.com/patchelf-0.10.tar.gz && \\\n    tar -zxvf patchelf-0.10.tar.gz && cd patchelf-0.10 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make -j8 && make install && rm patchelf-0.10.tar.gz\n\n# git credential to skip password typing\nRUN git config --global credential.helper store\n\n# Fix locales to en_US.UTF-8\nRUN localedef -i en_US -f UTF-8 en_US.UTF-8\n\n# FIXME: due to temporary ipykernel dependency issue, specify ipykernel jupyter\n# version util jupyter fixes this issue.\n\n# specify sphinx version as 1.5.6 and remove -U option for [pip install -U\n# sphinx-rtd-theme] since -U option will cause sphinx being updated to newest\n# version(1.7.1 for now), which causes building documentation failed.\nRUN pip3 --no-cache-dir install -U wheel py-cpuinfo==5.0.0 && \\\n    pip3 --no-cache-dir install -U docopt PyYAML sphinx==1.5.6  && \\\n    pip3 --no-cache-dir install sphinx-rtd-theme==0.1.9 recommonmark  && \\\n    pip3.6 --no-cache-dir install -U wheel py-cpuinfo==5.0.0  && \\\n    pip3.6 --no-cache-dir install -U docopt PyYAML sphinx==1.5.6  && \\\n    pip3.6 --no-cache-dir install sphinx-rtd-theme==0.1.9 recommonmark  && \\\n    pip3.7 --no-cache-dir install -U wheel py-cpuinfo==5.0.0  && \\\n    pip3.7 --no-cache-dir install -U docopt PyYAML sphinx==1.5.6  && \\\n    pip3.7 --no-cache-dir install sphinx-rtd-theme==0.1.9 recommonmark  && \\\n    pip --no-cache-dir install -U wheel py-cpuinfo==5.0.0  && \\\n    pip --no-cache-dir install -U docopt PyYAML sphinx==1.5.6  && \\\n    pip --no-cache-dir install sphinx-rtd-theme==0.1.9 recommonmark\n\nRUN pip3 --no-cache-dir install pre-commit==1.10.4 ipython==5.3.0  && \\\n    pip3 --no-cache-dir install ipykernel==4.6.0 jupyter==1.0.0  && \\\n    pip3 --no-cache-dir install opencv-python  && \\\n    pip3.6 --no-cache-dir install pre-commit==1.10.4 ipython==5.3.0  && \\\n    pip3.6 --no-cache-dir install ipykernel==4.6.0 jupyter==1.0.0  && \\\n    pip3.6 --no-cache-dir install opencv-python  && \\\n    pip3.7 --no-cache-dir install pre-commit==1.10.4 ipython==5.3.0  && \\\n    pip3.7 --no-cache-dir install ipykernel==4.6.0 jupyter==1.0.0  && \\\n    pip3.7 --no-cache-dir install opencv-python  && \\\n    pip --no-cache-dir install pre-commit==1.10.4 ipython==5.3.0  && \\\n    pip --no-cache-dir install ipykernel==4.6.0 jupyter==1.0.0  && \\\n    pip --no-cache-dir install  opencv-python\n\n#For docstring checker\nRUN pip3 --no-cache-dir install pylint pytest astroid isort\nRUN pip3.6 --no-cache-dir install pylint pytest astroid isort\nRUN pip3.7 --no-cache-dir install pylint pytest astroid isort\nRUN pip --no-cache-dir install pylint pytest astroid isort LinkChecker\n\nRUN pip3 --no-cache-dir install coverage\nRUN pip3.6 --no-cache-dir install coverage\nRUN pip3.7 --no-cache-dir install coverage\nRUN pip --no-cache-dir install coverage\n\nCOPY ./python/requirements.txt /root/\nRUN pip3 --no-cache-dir install -r /root/requirements.txt\nRUN pip3.6 --no-cache-dir install -r /root/requirements.txt\nRUN pip3.7 --no-cache-dir install -r /root/requirements.txt\nRUN pip --no-cache-dir install -r /root/requirements.txt\n\n# To fix https://github.com/PaddlePaddle/Paddle/issues/1954, we use\n# the solution in https://urllib3.readthedocs.io/en/latest/user-guide.html#ssl-py2\nRUN apt-get install --no-install-recommends -y libssl-dev libffi-dev && apt-get clean -y && rm -rf /var/lib/apt/lists/*;\nRUN pip3 --no-cache-dir install certifi urllib3[secure]\nRUN pip3.6 --no-cache-dir install certifi urllib3[secure]\nRUN pip3.7 --no-cache-dir install certifi urllib3[secure]\nRUN pip --no-cache-dir install certifi urllib3[secure]\n\n\n\n# ar mishandles 4GB files\n# https://sourceware.org/bugzilla/show_bug.cgi?id=14625\n# remove them when apt-get support 2.27 and higher version\nRUN wget -q https://paddle-ci.gz.bcebos.com/binutils_2.27.orig.tar.gz && \\\n    tar -xzf binutils_2.27.orig.tar.gz && \\\n    cd binutils-2.27 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make -j && make install && cd .. && rm -rf binutils-2.27 binutils_2.27.orig.tar.gz\n\nRUN apt-get install --no-install-recommends libprotobuf-dev -y && rm -rf /var/lib/apt/lists/*;\nRUN pip --no-cache-dir install -U netifaces==0.10.9\n\n# ccache 3.7.9\nRUN wget https://paddle-ci.gz.bcebos.com/ccache-3.7.9.tar.gz && \\\n    tar xf ccache-3.7.9.tar.gz && mkdir /usr/local/ccache-3.7.9 && cd ccache-3.7.9 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" -prefix=/usr/local/ccache-3.7.9 && \\\n    make -j8 && make install && \\\n    ln -s /usr/local/ccache-3.7.9/bin/ccache /usr/local/bin/ccache && rm ccache-3.7.9.tar.gz\n\nRUN wget --no-check-certificate  -q https://paddle-edl.bj.bcebos.com/hadoop-2.7.7.tar.gz && \\\n     tar -xzf  hadoop-2.7.7.tar.gz && mv hadoop-2.7.7 /usr/local/ && rm hadoop-2.7.7.tar.gz\n\n# Configure OpenSSH server. c.f. https://docs.docker.com/engine/examples/running_ssh_service\nRUN mkdir /var/run/sshd\nRUN echo 'root:root' | chpasswd\nRUN sed -ri 's/^PermitRootLogin\\s+.*/PermitRootLogin yes/' /etc/ssh/sshd_config\nRUN sed -ri 's/UsePAM yes/#UsePAM yes/g' /etc/ssh/sshd_config\nCMD source ~/.bashrc\nEXPOSE 22\n"
}