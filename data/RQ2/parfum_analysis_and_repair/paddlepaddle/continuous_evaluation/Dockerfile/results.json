{
  "startTime": 1674252661357,
  "endTime": 1674252662891,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 119
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 80,
        "lineEnd": 80,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 81,
        "lineEnd": 81,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 82,
        "lineEnd": 82,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 85,
        "lineEnd": 85,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 90,
        "lineEnd": 90,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 99,
        "lineEnd": 99,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 100,
        "lineEnd": 100,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 101,
        "lineEnd": 101,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 112,
        "lineEnd": 112,
        "columnStart": 4,
        "columnEnd": 54
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 28,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 89,
        "lineEnd": 89,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 111,
        "lineEnd": 111,
        "columnStart": 22,
        "columnEnd": 89
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 114,
        "lineEnd": 114,
        "columnStart": 22,
        "columnEnd": 113
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 89,
        "lineEnd": 89,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 28,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 89,
        "lineEnd": 89,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 111,
        "lineEnd": 111,
        "columnStart": 22,
        "columnEnd": 89
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 114,
        "lineEnd": 114,
        "columnStart": 22,
        "columnEnd": 113
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 89,
        "lineEnd": 89,
        "columnStart": 4,
        "columnEnd": 68
      }
    }
  ],
  "repairedDockerfile": "# A image for building paddle binaries\n# Use cuda devel base image for both cpu and gpu environment\n\n# When you modify it, please be aware of cudnn-runtime version\n# and libcudnn.so.x in paddle/scripts/docker/build.sh\n# Because we use cuda9, otherwise bounch of this can be replaced with\n# paddlepaddle/paddle:latest-dev\nFROM nvidia/cuda:9.0-cudnn7-devel-ubuntu16.04\nMAINTAINER PaddlePaddle Authors <paddle-dev@baidu.com>\n\nARG UBUNTU_MIRROR\nRUN /bin/bash -c 'if [[ -n ${UBUNTU_MIRROR} ]]; then sed -i 's#http://archive.ubuntu.com/ubuntu#${UBUNTU_MIRROR}#g' /etc/apt/sources.list; fi'\n\n# ENV variables\nARG WITH_GPU\nARG WITH_AVX\nARG WITH_DOC\n\nENV WOBOQ OFF\nENV WITH_GPU=${WITH_GPU:-ON}\nENV WITH_AVX=${WITH_AVX:-ON}\nENV WITH_DOC=${WITH_DOC:-OFF}\n\nENV HOME /root\n# Add bash enhancements\nCOPY ./paddle/scripts/docker/root/ /root/\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y --allow-downgrades \\\n    git python-pip python-dev openssh-server bison \\\n    libnccl2 libnccl-dev \\\n    wget unzip unrar tar xz-utils bzip2 gzip coreutils ntp \\\n    curl sed grep graphviz libjpeg-dev zlib1g-dev \\\n    python-matplotlib gcc-4.8 g++-4.8 \\\n    automake locales clang-format swig doxygen cmake \\\n    liblapack-dev liblapacke-dev \\\n    clang-3.8 llvm-3.8 libclang-3.8-dev \\\n    net-tools libtool && \\\n    apt-get clean -y && rm -rf /var/lib/apt/lists/*;\n\n# Install Go and glide\nRUN wget -qO- https://storage.googleapis.com/golang/go1.8.1.linux-amd64.tar.gz | \\\n    tar -xz -C /usr/local && \\\n    mkdir /root/gopath && \\\n    mkdir /root/gopath/bin && \\\n    mkdir /root/gopath/src\nENV GOROOT=/usr/local/go GOPATH=/root/gopath\n# should not be in the same line with GOROOT definition, otherwise docker build could not find GOROOT.\nENV PATH=${PATH}:${GOROOT}/bin:${GOPATH}/bin\n# install glide\nRUN curl -f -s -q https://glide.sh/get | sh\n\n# Install TensorRT\n# following TensorRT.tar.gz is not the default official one, we do two miny changes:\n# 1. Remove the unnecessary files to make the library small. TensorRT.tar.gz only contains include and lib now,\n#    and its size is only one-third of the official one.\n# 2. Manually add ~IPluginFactory() in IPluginFactory class of NvInfer.h, otherwise, it couldn't work in paddle.\n#    See https://github.com/PaddlePaddle/Paddle/issues/10129 for details.\nRUN wget -qO- https://paddlepaddledeps.bj.bcebos.com/TensorRT-4.0.0.3.Ubuntu-16.04.4.x86_64-gnu.cuda-8.0.cudnn7.0.tar.gz | \\\n    tar -xz -C /usr/local && \\\n    cp -rf /usr/local/TensorRT/include /usr && \\\n    cp -rf /usr/local/TensorRT/lib /usr\n\n# git credential to skip password typing\nRUN git config --global credential.helper store\n\n# Fix locales to en_US.UTF-8\nRUN localedef -i en_US -f UTF-8 en_US.UTF-8\n\n# FIXME: due to temporary ipykernel dependency issue, specify ipykernel jupyter\n# version util jupyter fixes this issue.\n\n# specify sphinx version as 1.5.6 and remove -U option for [pip install -U\n# sphinx-rtd-theme] since -U option will cause sphinx being updated to newest\n# version(1.7.1 for now), which causes building documentation failed.\nRUN pip install --no-cache-dir --upgrade pip==9.0.3 && \\\n    pip install --no-cache-dir -U wheel && \\\n    pip install --no-cache-dir -U docopt PyYAML sphinx==1.5.6 && \\\n    pip install --no-cache-dir sphinx-rtd-theme==0.1.9 recommonmark\n\nRUN pip install --no-cache-dir pre-commit 'ipython==5.3.0' && \\\n    pip install --no-cache-dir 'ipykernel==4.6.0' 'jupyter==1.0.0' && \\\n    pip install --no-cache-dir opencv-python\n\nCOPY ./python/requirements.txt /root/\nRUN pip install --no-cache-dir -r /root/requirements.txt\n\n# To fix https://github.com/PaddlePaddle/Paddle/issues/1954, we use\n# the solution in https://urllib3.readthedocs.io/en/latest/user-guide.html#ssl-py2\nRUN apt-get install --no-install-recommends -y libssl-dev libffi-dev && rm -rf /var/lib/apt/lists/*;\nRUN pip install --no-cache-dir certifi urllib3[secure]\n\n\n# Install woboq_codebrowser to /woboq\nRUN git clone https://github.com/woboq/woboq_codebrowser /woboq && \\\n    (cd /woboq \\\n     cmake -DLLVM_CONFIG_EXECUTABLE=/usr/bin/llvm-config-3.8 \\\n           -DCMAKE_BUILD_TYPE=Release . \\\n     make)\nRUN pip install --no-cache-dir sklearn;\nRUN pip install --no-cache-dir pandas;\nRUN pip install --no-cache-dir wget;\n\n# Configure OpenSSH server. c.f. https://docs.docker.com/engine/examples/running_ssh_service\nRUN mkdir /var/run/sshd\nRUN echo 'root:root' | chpasswd\nRUN sed -ri 's/^PermitRootLogin\\s+.*/PermitRootLogin yes/' /etc/ssh/sshd_config\nRUN sed -ri 's/UsePAM yes/#UsePAM yes/g' /etc/ssh/sshd_config\nEXPOSE 22\n\n# build the app and host it\nRUN apt-get update && apt-get install --no-install-recommends -y python3 python3-pip mongodb openjdk-8-jdk ccache && rm -rf /var/lib/apt/lists/*;\nRUN pip3 install --no-cache-dir flask flask-cache pymongo xonsh numpy\n\nRUN apt-get update && apt install --no-install-recommends -y uwsgi nginx supervisor software-properties-common python-software-properties && rm -rf /var/lib/apt/lists/*;\n\nENV NGINX_MAX_UPLOAD 0\n\n# By default, Nginx listens on port 80.\n# To modify this, change LISTEN_PORT environment variable.\n# (in a Dockerfile or with an option for `docker run`)\nENV LISTEN_PORT 80\n\n# Which uWSGI .ini file should be used, to make it customizable\nENV UWSGI_INI /app/uwsgi.ini\n\n# URL under which static (not modified by Python) files will be requested\n# They will be served by Nginx directly, without being handled by uWSGI\nENV STATIC_URL /static\n# Absolute path in where the static files wil be\nENV STATIC_PATH /app/static\n\n# If STATIC_INDEX is 1, serve / with /static/index.html directly (or the static URL configured)\n# ENV STATIC_INDEX 1\nENV STATIC_INDEX 0\n\n# Add demo app\nRUN git clone --recursive https://github.com/PaddlePaddle/continuous_evaluation\n\n# Make /app/* available to be imported by Python globally to better support several use cases like Alembic migrations.\nENV PYTHONPATH=/app\nEXPOSE 80\n\n# development image default do build work\nWORKDIR /continuous_evaluation/web/\nCMD = [\"python3\", \"main.py\"]\n"
}