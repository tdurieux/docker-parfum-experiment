{
  "startTime": 1674255717157,
  "endTime": 1674255721537,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 87,
        "lineEnd": 87,
        "columnStart": 4,
        "columnEnd": 106
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 118,
        "lineEnd": 118,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 105,
        "lineEnd": 105,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 97,
        "lineEnd": 97,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 96,
        "lineEnd": 96,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 127,
        "lineEnd": 127,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 82,
        "lineEnd": 82,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 18,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 61
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 82,
        "lineEnd": 82,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 86,
        "lineEnd": 86,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 103,
        "lineEnd": 103,
        "columnStart": 4,
        "columnEnd": 84
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 119,
        "lineEnd": 119,
        "columnStart": 4,
        "columnEnd": 70
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 82,
        "lineEnd": 82,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 119,
        "lineEnd": 119,
        "columnStart": 4,
        "columnEnd": 70
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 18,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 61
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 82,
        "lineEnd": 82,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 86,
        "lineEnd": 86,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 103,
        "lineEnd": 103,
        "columnStart": 4,
        "columnEnd": 84
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 119,
        "lineEnd": 119,
        "columnStart": 4,
        "columnEnd": 70
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 82,
        "lineEnd": 82,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 119,
        "lineEnd": 119,
        "columnStart": 4,
        "columnEnd": 94
      }
    }
  ],
  "repairedDockerfile": "# A image for building paddle binaries\n# Use cuda devel base image for both cpu and gpu environment\n# When you modify it, please be aware of cudnn-runtime version\nFROM nvidia/cuda:10.1-cudnn7-devel-ubuntu18.04\nMAINTAINER PaddlePaddle Authors <paddle-dev@baidu.com>\n\n# ENV variables\nARG WITH_GPU\nARG WITH_AVX\n\nENV WITH_GPU=${WITH_GPU:-ON}\nENV WITH_AVX=${WITH_AVX:-ON}\nENV DEBIAN_FRONTEND=noninteractive\nENV HOME /root\n# Add bash enhancements\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y software-properties-common && add-apt-repository ppa:deadsnakes/ppa && \\\n    apt-get update && \\\n    apt-get install --no-install-recommends -y curl wget vim git unzip unrar tar xz-utils bzip2 gzip \\\n        coreutils ntp language-pack-zh-hans python-qt4 libsm6 libxext6 libxrender-dev && rm -rf /var/lib/apt/lists/*;\n\n\n# Downgrade gcc&&g++\nWORKDIR /usr/bin\nRUN apt-get update --fix-missing\nCOPY script_build /script_build\nRUN bash /script_build/install_gcc.sh gcc82 && rm -rf /script_build && \\\n    cp gcc gcc.bak && cp g++ g++.bak && rm gcc && rm g++ && \\\n    ln -s /usr/local/gcc-8.2/bin/gcc /usr/local/bin/gcc && \\\n    ln -s /usr/local/gcc-8.2/bin/g++ /usr/local/bin/g++ && \\\n    ln -s /usr/local/gcc-8.2/bin/gcc /usr/bin/gcc && \\\n    ln -s /usr/local/gcc-8.2/bin/g++ /usr/bin/g++\nENV PATH=/usr/local/gcc-8.2/bin:$PATH\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y python3.6 python3.6-dev python3.6-venv && \\\n    apt-get install --no-install-recommends -y python3-pip && rm -rf /var/lib/apt/lists/*;\n\n\n# install cmake\nWORKDIR /home\nRUN wget -q https://cmake.org/files/v3.20/cmake-3.20.0-linux-x86_64.tar.gz && tar -zxvf cmake-3.20.0-linux-x86_64.tar.gz && rm cmake-3.20.0-linux-x86_64.tar.gz\nENV PATH=/home/cmake-3.20.0-linux-x86_64/bin:$PATH\n\n# remove them when apt-get support 2.27 and higher version\nRUN wget -q https://ftp.gnu.org/gnu/binutils/binutils-2.33.1.tar.gz && \\ \n    tar -xzf binutils-2.33.1.tar.gz && \\ \n    cd binutils-2.33.1 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make -j && make install && cd .. && rm -rf binutils-2.33.1 binutils-2.33.1.tar.gz\n\n\n# Install Go and glide\nRUN wget -qO- https://paddle-ci.cdn.bcebos.com/go1.8.1.linux-amd64.tar.gz | \\\n    tar -xz -C /usr/local && \\\n    mkdir /root/gopath && \\\n    mkdir /root/gopath/bin && \\\n    mkdir /root/gopath/src\nENV GOROOT=/usr/local/go GOPATH=/root/gopath\n# should not be in the same line with GOROOT definition, otherwise docker build could not find GOROOT.\nENV PATH=${PATH}:${GOROOT}/bin:${GOPATH}/bin\n# install glide\nRUN curl -f -s -q https://glide.sh/get | sh\n\n# git credential to skip password typing\nRUN git config --global credential.helper store\n\n# Fix locales to en_US.UTF-8\nRUN localedef -i en_US -f UTF-8 en_US.UTF-8\n\nRUN pip3 --no-cache-dir install pre-commit==1.10.4 ipython==5.3.0 -i http://mirrors.aliyun.com/pypi/simple/ --trusted-host mirrors.aliyun.com && \\\n    pip3 --no-cache-dir install ipykernel==4.6.0 wheel -i http://mirrors.aliyun.com/pypi/simple/ --trusted-host mirrors.aliyun.com\n\n#For docstring checker\nRUN pip3 --no-cache-dir install pylint pytest astroid isort -i http://mirrors.aliyun.com/pypi/simple/ --trusted-host mirrors.aliyun.com\n\nCOPY requirements.txt /root/\nRUN pip3 --no-cache-dir install -r /root/requirements.txt -i http://mirrors.aliyun.com/pypi/simple/ --trusted-host mirrors.aliyun.com\n\n\n# Older versions of patchelf limited the size of the files being processed and were fixed in this pr.\n# https://github.com/NixOS/patchelf/commit/ba2695a8110abbc8cc6baf0eea819922ee5007fa\n# So install a newer version here.\nRUN apt-get install -y --no-install-recommends software-properties-common && \\\n    apt-get update && \\\n    add-apt-repository ppa:ubuntu-toolchain-r/test -y && \\\n    apt-get update -y && \\\n    apt install --no-install-recommends gcc-10 -y && \\\n    wget -q https://mirrors.edge.kernel.org/ubuntu/pool/universe/p/patchelf/patchelf_0.10-2build1_amd64.deb && \\\n    dpkg -i patchelf_0.10-2build1_amd64.deb && rm -rf /var/lib/apt/lists/*;\n\n# Configure OpenSSH server. c.f. https://docs.docker.com/engine/examples/running_ssh_service\n#RUN mkdir /var/run/sshd && echo 'root:root' | chpasswd && sed -ri 's/^PermitRootLogin\\s+.*/PermitRootLogin yes/' /etc/ssh/sshd_config && sed -ri 's/UsePAM yes/#UsePAM yes/g' /etc/ssh/sshd_config\n#CMD source ~/.bashrc\n\n# ccache 3.7.9\nRUN wget https://paddle-ci.gz.bcebos.com/ccache-3.7.9.tar.gz && \\\n    tar xf ccache-3.7.9.tar.gz && mkdir /usr/local/ccache-3.7.9 && cd ccache-3.7.9 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" -prefix=/usr/local/ccache-3.7.9 && \\\n    make -j8 && make install && \\\n    ln -s /usr/local/ccache-3.7.9/bin/ccache /usr/local/bin/ccache && rm ccache-3.7.9.tar.gz\n\n# For CINN environment\nRUN apt update --fix-missing && \\\n    apt install --no-install-recommends autoconf autogen libtool zlib1g-dev sudo libginac-dev clang cmake -y && \\\n    apt remove python3-six python-six -y && \\\n    pip3 install --no-cache-dir numpy pybind11 six matplotlib && \\\n    update-alternatives --install /usr/bin/python python /usr/bin/python2.7 1 && \\\n    update-alternatives --install /usr/bin/python python /usr/bin/python3.6 2 && \\\n    python3 -m pip install paddlepaddle-gpu==2.1.2.post101 -f https://www.paddlepaddle.org.cn/whl/linux/mkl/avx/stable.html && rm -rf /var/lib/apt/lists/*;\n\n# Install LLVM\nRUN echo deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic main >> /etc/apt/source.list && \\\n    echo deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic main >> /etc/apt/source.list && \\\n    echo deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-10 main >> /etc/apt/source.list && \\\n    echo deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-10 main >> /etc/apt/source.list\n\nRUN ln -s /usr/bin/llvm-config-6.0 /usr/bin/llvm-config && \\\n    printf \"deb http://apt.llvm.org/xenial/ llvm-toolchain-xenial-10 main\" |tee /etc/apt/sources.list.d/llvm-toolchain-xenial-10.list && \\\n    wget -q -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \\\n    apt install --no-install-recommends -y libclang-dev llvm-10 llvm-10-dev libclang-10-dev -y && rm -rf /var/lib/apt/lists/*;\n\n# set C++ Path, libcudnn.so and llvm11 with mlir\nENV CPLUS_INCLUDE_PATH=$CPLUS_INCLUDE_PATH:/usr/include/c++/7:/usr/include/x86_64-linux-gnu/c++/7\nRUN ln -s /usr/lib/x86_64-linux-gnu/libcudnn.so /usr/local/cuda/lib64/libcudnn.so && \\\n    mkdir /WorkSpace && \\\n    cd /WorkSpace && \\\n    wget -q https://paddle-inference-dist.bj.bcebos.com/CINN/llvm11-latest.tar && \\\n    tar -xvf llvm11-latest.tar && rm llvm11-latest.tar\nENV LLVM11_DIR=/WorkSpace/llvm11-latest\n\nWORKDIR /WorkSpace\nEXPOSE 22\n"
}