{
  "startTime": 1674251668249,
  "endTime": 1674251668857,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 145
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 145
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Dockerfile template\nFROM <<base_image>>\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y make build-essential && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y wget tar xz-utils bzip2 libcurl4-openssl-dev \\\n    curl sed grep zlib1g-dev libreadline-gplv2-dev libncursesw5-dev libssl-dev libsqlite3-dev tk-dev libgdbm-dev libc6-dev libbz2-dev libffi-dev && \\\n    apt-get clean -y && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /usr/bin\n      COPY tools/dockerfiles/build_scripts /build_scripts\n      RUN bash /build_scripts/install_gcc.sh gcc82 && rm -rf /build_scripts\n      RUN cp gcc gcc.bak && cp g++ g++.bak && rm gcc && rm g++\n      RUN ln -s /usr/local/gcc-8.2/bin/gcc /usr/local/bin/gcc\n      RUN ln -s /usr/local/gcc-8.2/bin/g++ /usr/local/bin/g++\n      RUN ln -s /usr/local/gcc-8.2/bin/gcc /usr/bin/gcc\n      RUN ln -s /usr/local/gcc-8.2/bin/g++ /usr/bin/g++\n      ENV PATH=/usr/local/gcc-8.2/bin:$PATH\n\n# install python\nWORKDIR /home\n      COPY tools/dockerfiles/build_scripts /build_scripts\n      RUN bash /build_scripts/install_python.sh <<python_version>> && rm -rf /build_scripts\n      # Other \n\n# install whl and bin\nWORKDIR /home\n      COPY tools/dockerfiles/build_scripts /build_scripts\n      RUN bash /build_scripts/install_whl.sh <<serving_version>> <<paddle_version>> <<run_env>> <<python_version>> && rm -rf /build_scripts\n\nWORKDIR /home\n      COPY tools/dockerfiles/build_scripts /build_scripts\n      RUN bash /build_scripts/soft_link.sh <<run_env>>\n\n# install tensorrt\nWORKDIR /home\n      COPY tools/dockerfiles/build_scripts /build_scripts\n      RUN bash /build_scripts/install_trt.sh <<run_env>> && rm -rf /build_scripts\n\n# install go\nRUN wget -qO- https://paddle-ci.cdn.bcebos.com/go1.17.2.linux-amd64.tar.gz | \\\n    tar -xz -C /usr/local && \\\n    mkdir /root/go && \\\n    mkdir /root/go/bin && \\\n    mkdir /root/go/src && \\\n    echo \"GOROOT=/usr/local/go\" >> /root/.bashrc && \\\n    echo \"GOPATH=/root/go\" >> /root/.bashrc && \\\n    echo \"PATH=/usr/local/go/bin:/root/go/bin:$PATH\" >> /root/.bashrc\n\nRUN wget https://paddle-serving.bj.bcebos.com/others/centos_ssl.tar && \\\n    tar xf centos_ssl.tar && rm -rf centos_ssl.tar && \\\n    mv libcrypto.so.1.0.2k /usr/lib/libcrypto.so.1.0.2k && mv libssl.so.1.0.2k /usr/lib/libssl.so.1.0.2k && \\\n    ln -sf /usr/lib/libcrypto.so.1.0.2k /usr/lib/libcrypto.so.10 && \\\n    ln -sf /usr/lib/libssl.so.1.0.2k /usr/lib/libssl.so.10 && \\\n    ln -sf /usr/lib/libcrypto.so.10 /usr/lib/libcrypto.so && \\\n    ln -sf /usr/lib/libssl.so.10 /usr/lib/libssl.so\n\nEXPOSE 22\n"
}