{
  "startTime": 1674256097550,
  "endTime": 1674256098877,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 7,
        "columnEnd": 42
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 24,
        "columnStart": 22,
        "columnEnd": 15
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 24,
        "columnStart": 22,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ruby:2.7-slim-buster\n\n# install apt dependencies\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    wget \\\n    subversion \\\n    rsync \\\n    build-essential \\\n    libsystemd-dev \\\n    python3 \\\n    python3-attr \\\n    python3-cairo \\\n    python3-gi \\\n    python3-gi-cairo \\\n    python3-lxml \\\n    python3-icu \\\n    python3-pyinotify \\\n    gir1.2-pangocairo-1.0 \\\n    ffmpeg \\\n    poppler-utils \\\n    imagemagick \\\n    supervisor \\\n    locales \\\n    locales-all && rm -rf /var/lib/apt/lists/*;\n# TODO: missing packages\n\nENV LC_ALL en_US.UTF-8\nENV LANG en_US.UTF-8\nENV LANGUAGE en_US.UTF-8\n\n# compile and install mkclean\nRUN cd /tmp \\\n    && wget https://netcologne.dl.sourceforge.net/project/matroska/mkclean/mkclean-0.8.10.tar.bz2 \\\n    && tar -xf /tmp/mkclean-0.8.10.tar.bz2 \\\n    && cd /tmp/mkclean-0.8.10 \\\n    && sed -i 's/\\r//g' ./mkclean/configure.compiled \\\n    && ./mkclean/configure.compiled \\\n    && make -C mkclean \\\n    && cp ./release/gcc_linux_x64/mkclean /usr/bin/mkclean \\\n    && rm -r /tmp/mkclean-* && rm /tmp/mkclean-0.8.10.tar.bz2\n\n# add dockerize\nENV DOCKERIZE_VERSION v0.6.1\nRUN wget -q https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz \\\n    && tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz \\\n    && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz\n\n# add yq for bbb-record\nRUN  wget -q https://github.com/mikefarah/yq/releases/download/3.4.1/yq_linux_amd64 -O /usr/bin/yq \\\n    && chmod +x /usr/bin/yq\n\nRUN mkdir -p \\\n    /usr/local/bigbluebutton \\\n    /usr/local/bigbluebutton/core \\\n    /etc/bigbluebutton\n\nARG TAG_RECORDINGS\n\n# add bbb-record-core (lib, scripts and Gemfile)\nRUN cd /usr/local/bigbluebutton/core \\\n    && svn checkout https://github.com/bigbluebutton/bigbluebutton/tags/$TAG_RECORDINGS/record-and-playback/core/lib \\\n    && svn checkout https://github.com/bigbluebutton/bigbluebutton/tags/$TAG_RECORDINGS/record-and-playback/core/scripts \\\n    && rm -rf /usr/local/bigbluebutton/core/*/.svn \\\n    && wget https://raw.githubusercontent.com/bigbluebutton/bigbluebutton/$TAG_RECORDINGS/record-and-playback/core/Gemfile.lock \\\n    && wget https://raw.githubusercontent.com/bigbluebutton/bigbluebutton/$TAG_RECORDINGS/record-and-playback/core/Gemfile \\\n    && wget https://raw.githubusercontent.com/bigbluebutton/bigbluebutton/$TAG_RECORDINGS/record-and-playback/core/Rakefile\n\n# add bbb-playback-presentation scripts\nRUN cd /tmp \\\n    && svn checkout https://github.com/bigbluebutton/bigbluebutton/tags/$TAG_RECORDINGS/record-and-playback/presentation/scripts \\\n    && rsync -av /tmp/scripts/ /usr/local/bigbluebutton/core/scripts/ \\\n    && rm -rf /tmp/scripts\n\n# install ruby dependencies\nRUN cd /usr/local/bigbluebutton/core \\\n    && gem install builder \\\n    && gem install bundler --no-document \\\n    && /usr/local/bin/bundle\n\n# log to file instead of journald\nRUN sed -i 's|Journald::Logger\\.new.*|Logger.new(\"/var/log/bigbluebutton/recording.log\")|g' /usr/local/bigbluebutton/core/lib/recordandplayback.rb && \\\n    sed -i 's|Journald::Logger\\.new.*|Logger.new(\"/var/log/bigbluebutton/recording.log\")|g' /usr/local/bigbluebutton/core/scripts/rap-caption-inbox.rb && \\\n    sed -i 's|Logger\\.new.*|Logger.new(\"/var/log/bigbluebutton/recording.log\")|g' /usr/local/bigbluebutton/core/scripts/rap-process-worker.rb && \\\n    sed -i 's|Logger\\.new.*|Logger.new(\"/var/log/bigbluebutton/recording.log\")|g' /usr/local/bigbluebutton/core/scripts/archive/archive.rb && \\\n    sed -i 's|Logger\\.new.*|Logger.new(\"/var/log/bigbluebutton/recording.log\")|g' /usr/local/bigbluebutton/core/scripts/publish/presentation.rb && \\\n    sed -i 's|Logger\\.new.*|Logger.new(\"/var/log/bigbluebutton/recording.log\")|g' /usr/local/bigbluebutton/core/scripts/utils/captions.rb && \\\n    sed -i 's|Logger\\.new.*|Logger.new(\"/var/log/bigbluebutton/recording.log\")|g' /usr/local/bigbluebutton/core/scripts/process/presentation.rb\n\n# add bbb-record with some adjustments so bbb-record works in this environment\nRUN cd /usr/bin \\\n    && wget https://raw.githubusercontent.com/bigbluebutton/bigbluebutton/$TAG_RECORDINGS/bigbluebutton-config/bin/bbb-record \\\n    && chmod +x /usr/bin/bbb-record \\\n    && sed -i 's/^BBB_WEB.*/BBB_WEB=\"\"/' /usr/bin/bbb-record \\\n    && sed -i 's/systemctl.*//' /usr/bin/bbb-record \\\n    && echo \"BIGBLUEBUTTON_RELEASE=$TAG_RECORDINGS\" > /etc/bigbluebutton/bigbluebutton-release\n\n# create user\n# the ID should match the one creating the files in `core`\nRUN groupadd -g 998 bigbluebutton && useradd -m -u 998 -g bigbluebutton bigbluebutton\n\n# change owner\n# https://github.com/alangecker/bigbluebutton-docker/issues/63\nRUN chown -R 998:998 /usr/local/bigbluebutton\n\nCOPY bbb-web.properties /etc/bigbluebutton/bbb-web.properties.tmpl\nCOPY bigbluebutton.yml /usr/local/bigbluebutton/core/scripts/bigbluebutton.yml.tmpl\nCOPY supervisord.conf /etc/supervisor/conf.d/supervisord.conf\nCOPY entrypoint.sh /entrypoint.sh\n\nENTRYPOINT /entrypoint.sh\n"
}