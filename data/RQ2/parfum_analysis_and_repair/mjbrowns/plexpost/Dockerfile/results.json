{
  "startTime": 1674250791014,
  "endTime": 1674250792187,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 91
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 91
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 115
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 26,
        "columnEnd": 82
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 115
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 26,
        "columnEnd": 110
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 115
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:latest\nENV DEBIAN_FRONTEND=\"noninteractive\"\n\nRUN ( . /etc/lsb-release; \\\n    echo \"Updating Base Ubuntu Image\"; \\\n    sed -ie \"s'http://archive.ubuntu.com'http://us.archive.ubuntu.com'\" /etc/apt/sources.list; \\\n    apt-get -qq update && apt-get -qq -y --no-install-recommends install apt-utils && apt-get -qq -y dist-upgrade; \\\n    apt-get -qq -y clean ;) && rm -rf /var/lib/apt/lists/*;\nRUN ( . /etc/lsb-release; \\\n    echo \"Installing prerequisites\"; \\\n    apt-get -qq -y --no-install-recommends install ffmpeg libargtable2-0 jq ssmtp curl ca-certificates tzdata gawk; \\\n    apt-get -qq -y clean ;) && rm -rf /var/lib/apt/lists/*;\nRUN ( . /etc/lsb-release; \\\n    echo \"deb http://ppa.launchpad.net/stebbins/handbrake-releases/ubuntu ${DISTRIB_CODENAME} main\" > /etc/apt/sources.list.d/handbrake.list; \\\n    echo \"deb-src http://ppa.launchpad.net/stebbins/handbrake-releases/ubuntu ${DISTRIB_CODENAME} main\" >> /etc/apt/sources.list.d/handbrake.list; \\\n    curl -f -s \"https://keyserver.ubuntu.com:11371/pks/lookup?op=get&search=0x8771ADB0816950D8\" | apt-key add -; \\\n    echo \"Installing handbrake\"; \\\n    apt-get -qq update && apt-get -qq -y --no-install-recommends --allow-unauthenticated install handbrake-cli; \\\n    apt-get -qq -y clean ;) && rm -rf /var/lib/apt/lists/*;\n\nVOLUME /postdata\n\n# Match the COMSKIP_* variables to your plex user\n# These tell the container where to found your TV and Movie plex trees.  You need to map them as volumes in your run statement/docker-compose.yml\n# QUEUEDIR tells the manager where to find the job queue.  Normally this is mapped via a volume.\n# QUEUETIMER tells the manager how long to sleep between each scan of the queue\n# QUEUEDAYS tells the manager how long to keep completed queue entries. \n# Note that if errors are detected, the queue is stored in a .save file and never deleted, nor is its workspace tree under the QUEUEDIR\n# COMCUT=1 uses the comcut processor; COMCUT=0 uses the comchap processor; COMCUT=-1 disables commercial processing altogether\n# REMOVETS=1 tells the processor to remove the .ts source files upon successful transcodes. \n# REMOVETS=0 tells the processor to rename the .ts source files to .ts-sav\n# TSCLEAN=1 tells the queue manager to scan the MOVIE and TV libraries for .ts-sav files and remove them once they are older than TSDAYS\n# MAILTO - if set to an email address will send alerts to that address when an error occurs in the processing.  This option REQUIRES MAIL* variables to be set\n# MAILDOMAIN - sets the domain name for from address rewriting\n# MAILHUB - name/ip address of mail relay.  This must be a relay server; does not support auth.\n# MAILFROM - sets email address that emails from this process should use\n# TRANSCODER - sets the path to the transcoder script you want to use\n# SLACK_HOOK - sets SLACK channel webhook for notifications\n# COMSKIP_INI - sets the directory where comskip.ini files are found.  Catchall comskip file will be comskip.ini.  Config is filters.cfg\nENV TZ=America/New_York \\\n    MANAGER_PORT=8080 \\\n    COMSKIP_UID=113 \\\n    COMSKIP_GID=123 \\\n    COMSKIP_USER=plex \\\n    COMSKIP_GROUP=plex \\\n    COMSKIP_INI=/config \\\n    TVDIR=/media/tv \\ \n    MVDIR=/media/movies \\\n    POSTDATA=/postdata \\\n    QUEUEDIR=/postdata/queue \\\n    QUEUETIMER=60 \\\n    QUEUEDAYS=60 \\\n    COMCUT=0 \\\n    REMOVETS=0 \\\n    TSCLEAN=1 \\\n    TSDAYS=60 \\\n    MAILTO=\"\" \\\n    MAILDOMAIN=\"\" \\\n    MAILHUB=\"\" \\\n    MAILFROM=\"\" \\\n    TRANSCODER=\"\" \\\n    SLACK_HOOK=\"\"\n\nENTRYPOINT [\"/init\"]\nCMD []\n\nARG WRKDIR\nARG SRCDIR\n\nCOPY ${WRKDIR} /\nCOPY ${SRCDIR} /\n\n"
}