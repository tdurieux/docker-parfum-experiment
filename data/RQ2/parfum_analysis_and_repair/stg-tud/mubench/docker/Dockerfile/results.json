{
  "startTime": 1674219180166,
  "endTime": 1674219181207,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 80,
        "lineEnd": 80,
        "columnStart": 4,
        "columnEnd": 61
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 19,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 28,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 10
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 46,
        "lineEnd": 62,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM openjdk:8-jdk-alpine\n\n\nMAINTAINER Sven Amann <amann@st.informatik.tu-darmstadt.de>\n\n# Install ca-certificates so that HTTPS works consistently\nRUN apk update \\\n && apk add --no-cache ca-certificates wget \\\n && update-ca-certificates\n\nENV LANG=C.UTF-8 \\\n    GRADLE_VERSION=4.0.2 \\\n    GRADLE_HOME=/usr/local/gradle\nENV PATH=${PATH}:${GRADLE_HOME}/bin\n\n# Setup pipeline environment\nRUN apk update \\\n \\\n # Install Python \\\n && apk add --no-cache \\\n      py3-psutil \\\n      python3 \\\n      yaml-dev \\\n && ln -s /usr/bin/python3 /usr/bin/python \\\n && ln -s /usr/bin/pip3 /usr/bin/pip \\\n && pip install --no-cache-dir --upgrade pip \\\n\n # Install runtime dependencies\n && apk add --no-cache \\\n      apache-ant \\\n      git \\\n      graphviz \\\n      maven \\\n      subversion \\\n      bash \\\n\n # Install gradle\n && wget -q https://services.gradle.org/distributions/gradle-$GRADLE_VERSION-bin.zip \\\n && unzip -q gradle-$GRADLE_VERSION-bin.zip -d /usr/local \\\n && rm -f gradle-$GRADLE_VERSION-bin.zip \\\n && ln -s /usr/local/gradle-$GRADLE_VERSION /usr/local/gradle\n\n# Setup reviewsite environment\nRUN apk update \\\n \\\n # Install PHP \\\n && apk add --no-cache \\\n      php7 \\\n      php7-ctype \\\n      php7-curl \\\n      php7-dom \\\n      php7-json \\\n      php7-mbstring \\\n      php7-openssl \\\n      php7-pdo \\\n      php7-pdo_sqlite \\\n      php7-phar \\\n      php7-session \\\n      php7-sqlite3 \\\n      php7-tokenizer \\\n      php7-xml \\\n      php7-xmlwriter \\\n      php7-zlib \\\n\n # Install Composer\n && wget -q https://getcomposer.org/installer -O composer-setup.php \\\n && php composer-setup.php --install-dir=/usr/local/bin --filename=composer \\\n && rm composer-setup.php\n\n# Install MUBench and configure interactive shell\nWORKDIR /mubench\nCOPY . .\nARG mubench_version=v???\nENV PATH=/mubench/mubench.bin:${PATH}\nCMD [\"bash\"]\n\nRUN \\\n ln -s /mubench/mubench.bin/bashrc /root/.bashrc \\\n && echo $mubench_version > VERSION \\\n # Setup pipeline \\\n && pip install --no-cache-dir -r /mubench/mubench.pipeline/requirements.txt \\\n\n # Setup reviewsite\n && composer install -d mubench.reviewsite --no-interaction --no-dev \\\n && mkdir -p mubench.reviewsite/upload \\\n && mkdir -p mubench.reviewsite/logs \\\n\n # Setup reviewsite standalone configuration\n && mkdir findings \\\n && touch findings/reviews.sqlite \\\n && mv mubench.reviewsite/settings.docker.php mubench.reviewsite/settings.php\n\n# Provide standalone reviewsite\nEXPOSE 80\nSTOPSIGNAL SIGTERM\n"
}