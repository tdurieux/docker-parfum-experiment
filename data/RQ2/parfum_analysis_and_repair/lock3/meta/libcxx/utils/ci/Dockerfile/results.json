{
  "startTime": 1674252413770,
  "endTime": 1674252414415,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 80,
        "lineEnd": 80,
        "columnStart": 12,
        "columnEnd": 93
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 80,
        "lineEnd": 80,
        "columnStart": 15,
        "columnEnd": 91
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 57
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 66
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 22,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 57
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 66
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 57
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 66
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 22,
        "columnEnd": 50
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 4,
        "columnEnd": 27
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 81
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 90
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 4,
        "columnEnd": 51
      }
    }
  ],
  "repairedDockerfile": "#===----------------------------------------------------------------------===##\n#\n# Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.\n# See https://llvm.org/LICENSE.txt for license information.\n# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception\n#\n#===----------------------------------------------------------------------===##\n\n#\n# This Dockerfile describes the base image used to run the various libc++\n# build bots. By default, the image runs the Buildkite Agent, however one\n# can also just start the image with a shell to debug CI failures.\n#\n# To start a Buildkite Agent, run it as:\n#   $ docker run --env-file secrets.env -it $(docker build -q .)\n#\n# The environment variables in `secrets.env` must be replaced by the actual\n# tokens for this to work. These should obviously never be checked in.\n#\n# To start a shell in the Docker image, use:\n#   $ docker run -it --volume \"$(git rev-parse --show-toplevel):/llvm\" --workdir \"/llvm\" $(docker build -q .) bash\n#\n# This will fire up the Docker container and mount the root of the monorepo\n# as /llvm in the container. Be careful, the state in /llvm is shared between\n# the container and the host machine.\n#\n# Finally, a pre-built version of this image is available on DockerHub as\n# ldionne/libcxx-builder. To use the pre-built version of the image, use\n#\n#   $ docker pull ldionne/libcxx-builder\n#   $ docker run -it <options> ldionne/libcxx-builder\n#\n# To update the image, rebuild it and push it to ldionne/libcxx-builder (which\n# will obviously only work if you have permission to do so).\n#\n#   $ docker build -t ldionne/libcxx-builder .\n#   $ docker push ldionne/libcxx-builder\n#\n\nFROM ubuntu:bionic\n\nRUN apt-get update\nRUN apt-get install --no-install-recommends -y bash curl && rm -rf /var/lib/apt/lists/*;\n\n# Install various tools used by the build or the test suite\nRUN apt-get install --no-install-recommends -y ninja-build python3 sphinx-doc git && rm -rf /var/lib/apt/lists/*;\n\n# Install the Phabricator Python module to allow uploading results to Phabricator.\n# This MUST be done before installing a recent GCC, otherwise /usr/bin/gcc is\n# overwritten to an older GCC.\nRUN apt-get install --no-install-recommends -y python3-pip && rm -rf /var/lib/apt/lists/*;\nRUN pip3 install --no-cache-dir phabricator\n\n# Install the most recently released LLVM\nRUN apt-get install --no-install-recommends -y lsb-release wget software-properties-common && rm -rf /var/lib/apt/lists/*;\nRUN bash -c \"$(wget -O - https://apt.llvm.org/llvm.sh)\"\nRUN ln -s $(find /usr/bin -regex '.+/clang\\+\\+-[a-zA-Z0-9.]+') /usr/bin/clang++\nRUN ln -s $(find /usr/bin -regex '.+/clang-[a-zA-Z0-9.]+') /usr/bin/clang\n\n# Install a recent GCC\nRUN add-apt-repository ppa:ubuntu-toolchain-r/test\nRUN apt-get update && apt install --no-install-recommends -y gcc-10 g++-10 && rm -rf /var/lib/apt/lists/*;\nRUN ln -f -s /usr/bin/g++-10 /usr/bin/g++\nRUN ln -f -s /usr/bin/gcc-10 /usr/bin/gcc\n\n# Install a recent CMake\nRUN wget https://github.com/Kitware/CMake/releases/download/v3.18.2/cmake-3.18.2-Linux-x86_64.sh -O /tmp/install-cmake.sh\nRUN bash /tmp/install-cmake.sh --prefix=/usr --exclude-subdir --skip-license\nRUN rm /tmp/install-cmake.sh\n\n# Change the user to a non-root user, since some of the libc++ tests\n# (e.g. filesystem) require running as non-root. Also setup passwordless sudo.\nRUN apt-get install --no-install-recommends -y sudo && rm -rf /var/lib/apt/lists/*;\nRUN echo \"ALL ALL = (ALL) NOPASSWD: ALL\" >> /etc/sudoers\nRUN useradd --create-home libcxx-builder\nUSER libcxx-builder\nWORKDIR /home/libcxx-builder\n\n# Install the Buildkite agent and dependencies. This must be done as non-root\n# for the Buildkite agent to be installed in a path where we can find it.\nRUN bash -c \"$( curl -f -sL https://raw.githubusercontent.com/buildkite/agent/master/install.sh)\" -f\nENV PATH=\"${PATH}:/home/libcxx-builder/.buildkite-agent/bin\"\n\n# By default, start the Buildkite agent (this requires a token).\nCMD buildkite-agent start --tags \"queue=libcxx-builders\"\n"
}