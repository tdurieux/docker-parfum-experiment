{
  "startTime": 1674251589576,
  "endTime": 1674251590391,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 24
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Build environment\nFROM node:12.16.1-alpine as build\nWORKDIR /app\nENV PATH /app/node_modules/.bin:$PATH\nCOPY package*.json /app/\nRUN npm install && npm cache clean --force;\n\nCOPY . /app\nRUN npm run build\n\n# Production environment\nFROM node:12.16.1-alpine\nCOPY --from=build /app/build /app/build\n\nRUN npm install -g serve && npm cache clean --force;\n\nHEALTHCHECK --interval=60s --timeout=3s --retries=3 \\\n    CMD wget -q http://localhost || exit 1\n\nEXPOSE 80\n\n# Add bash\nRUN apk add --no-cache bash\n\nWORKDIR /app/build\nCOPY ./env.sh .\nCOPY ./serve.json .\n\n# Convert dos line endings to unix file endings - problem with build on docker for windows\nRUN sed -i 's/\\r$//' env.sh\n\n# Make our shell script executable\nRUN chmod +x env.sh\n\n# Start server\nCMD [\"/bin/bash\", \"-c\", \"/app/build/env.sh && PORT=5002 serve\", \"-s\", \"/app/build\", \"-l\", \"5002\"]"
}