{
  "startTime": 1674216013364,
  "endTime": 1674216014287,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 49,
        "columnEnd": 74
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 80,
        "columnEnd": 92
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# base image\nFROM node:12-alpine\n\nARG ENVIRONMENT\n\nENV ENVIRONMENT ${ENVIRONMENT:-production}\nENV NODE_ENV ${ENVIRONMENT}\n\n# set working directory\nWORKDIR /code\n\n# add `/code/node_modules/.bin` to $PATH\nENV PATH /code/node_modules/.bin:${PATH}\n\n# install and cache app dependencies\nCOPY ./package*.json ./\nRUN if [ \"${ENVIRONMENT}\" = \"production\" ]; then \\\n npm install --production; npm cache clean --force; else npm install; npm cache clean --force; fi\n\nCOPY ./docker-entrypoint /\nCOPY ./ /code/\n\nENTRYPOINT [\"/docker-entrypoint\"]\n\n# start app\nCMD [\"npm\", \"start\"]\n"
}