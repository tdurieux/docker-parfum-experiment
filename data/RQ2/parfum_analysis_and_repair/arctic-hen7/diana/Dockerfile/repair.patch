diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/arctic-hen7/diana/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/arctic-hen7/diana/Dockerfile/repaired.Dockerfile
index 59ab218..003a6ca 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/arctic-hen7/diana/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/arctic-hen7/diana/Dockerfile/repaired.Dockerfile
@@ -8,7 +8,7 @@ RUN mkdir -p /app \
 # Set up ZSH and our preferred terminal environment for containers
 RUN apk --no-cache add zsh curl git
 RUN mkdir -p /home/node/.antigen
-RUN curl -L git.io/antigen > /home/node/.antigen/antigen.zsh
+RUN curl -f -L git.io/antigen > /home/node/.antigen/antigen.zsh
 # Use my starter Docker ZSH config file for this, or your own ZSH configuration file (https://gist.github.com/arctic-hen7/bbfcc3021f7592d2013ee70470fee60b)
 COPY .dockershell.sh /home/node/.zshrc
 RUN chown -R node:node /home/node/.antigen /home/node/.zshrc
@@ -38,7 +38,7 @@ USER root
 RUN apk add --no-cache openssl-dev
 # Install global dependencies with NPM
 # See https://answers.netlify.com/t/netlify-cli-fails-to-install/34508/3 for why we use `--unsafe-perm`
-RUN npm install -g --unsafe-perm netlify-cli
+RUN npm install -g --unsafe-perm netlify-cli && npm cache clean --force;
 
 # Rust Cacher Stage - caches all dependencies in the Rust code with `cargo vendor` to speed up builds massively
 # When your dependencies change, this will be re-executed, otherwise you get super-speed caching performance!
@@ -65,7 +65,7 @@ USER root
 FROM rust-cacher AS base
 WORKDIR /app
 # Disable telemetry of various tools for privacy
-RUN yarn config set --home enableTelemetry 0
+RUN yarn config set --home enableTelemetry 0 && yarn cache clean;
 # Copy the Netlify config file into the correct location
 # See `CONTRIBUTING.md` for how to set this up for the first time
 COPY --chown=node:node ./netlify-config.json /home/node/.config/netlify/config.json