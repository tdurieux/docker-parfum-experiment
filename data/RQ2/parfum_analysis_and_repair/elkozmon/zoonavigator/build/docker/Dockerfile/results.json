{
  "startTime": 1674249030026,
  "endTime": 1674249031346,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 20,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 138
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 5,
        "columnEnd": 16
      }
    },
    {
      "rule": "gpgVerifyAscRmAsc",
      "position": {
        "lineStart": 74,
        "lineEnd": 74,
        "columnStart": 5,
        "columnEnd": 67
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 5,
        "columnEnd": 50
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 73,
        "lineEnd": 73,
        "columnStart": 5,
        "columnEnd": 68
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 74,
        "lineEnd": 74,
        "columnStart": 5,
        "columnEnd": 67
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 5,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 5,
        "columnEnd": 43
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 5,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 5,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 127,
        "lineEnd": 127,
        "columnStart": 5,
        "columnEnd": 38
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 5,
        "columnEnd": 28
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 5,
        "columnEnd": 43
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 5,
        "columnEnd": 27
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 5,
        "columnEnd": 51
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG APP_VERSION\nARG SBT_VERSION=1.3.6\nARG SBT_GPG_KEY=99E82A75642AC823\nARG DOCKERIZE_VERSION=0.6.1\nARG DOCS_URL=\"https://zoonavigator.elkozmon.com/en/latest\"\nARG DEBUG=0\nARG VCS_URL=\"https://github.com/elkozmon/zoonavigator\"\nARG VCS_REF\nARG BUILD_DATE\n\nFROM ubuntu:18.04 as dockerize\nMAINTAINER Lubos Kozmon <contact@elkozmon.com>\n\nARG DOCKERIZE_VERSION\n\n# Install dependencies\nRUN apt-get update \\\n  && apt-get install --no-install-recommends -y curl && rm -rf /var/lib/apt/lists/*;\n\n# Get dockerize\nRUN curl -f \\\n    -Lo dockerize-alpine-linux-amd64-v${DOCKERIZE_VERSION}.tar.gz \\\n    https://github.com/jwilder/dockerize/releases/download/v${DOCKERIZE_VERSION}/dockerize-alpine-linux-amd64-v${DOCKERIZE_VERSION}.tar.gz \\\n  && tar xzvf dockerize-alpine-linux-amd64-v${DOCKERIZE_VERSION}.tar.gz -C /usr/local/bin \\\n  && rm dockerize-alpine-linux-amd64-v${DOCKERIZE_VERSION}.tar.gz\n\nFROM node:14.18.1-buster-slim as npm\n\nARG APP_VERSION\nARG DOCS_URL\nARG DEBUG\n\n# Copy source code\nWORKDIR /src\nCOPY /zoonavigator-web .\nCOPY /build/docker/files/zoonavigator-web .\n\n# Install required packages\nRUN apt-get update \\\n  && apt-get install --no-install-recommends -y python-dev make g++ && rm -rf /var/lib/apt/lists/*;\n\n# Get dockerize\nCOPY --from=dockerize /usr/local/bin/dockerize /usr/local/bin/dockerize\n\n# Create env config for web app\nRUN dockerize \\\n    -template ./environment.ts.template:./src/environments/environment.prod.ts\n\n# Install dependencies & build\nRUN npm install -g @angular/cli \\\n  && npm install \\\n  && ng build --prod \\\n  && mv dist /app && npm cache clean --force;\n\nFROM openjdk:11-jdk-slim as sbt\n\nARG SBT_VERSION\nARG SBT_GPG_KEY\n\n# Install required packages\nRUN apt-get update \\\n  && apt-get install --no-install-recommends -y zip && rm -rf /var/lib/apt/lists/*;\n\n# Copy source files\nWORKDIR /src\nCOPY /zoonavigator-api .\nCOPY --from=npm /app ./play/public\n\n# Install sbt\nRUN apt-get update \\\n  && apt-get install --no-install-recommends -y aria2 gnupg ca-certificates \\\n  && aria2c -x4 \"https://github.com/sbt/sbt/releases/download/v${SBT_VERSION}/sbt-${SBT_VERSION}.tgz\" \\\n  && aria2c -x4 \"https://github.com/sbt/sbt/releases/download/v${SBT_VERSION}/sbt-${SBT_VERSION}.tgz.asc\" \\\n  && gpg --batch --keyserver keyserver.ubuntu.com --recv-keys ${SBT_GPG_KEY} \\\n  && gpg --batch --verify sbt-${SBT_VERSION}.tgz.asc sbt-${SBT_VERSION}.tgz \\\n  && tar xvfz sbt-${SBT_VERSION}.tgz -C /usr/local \\\n  && ln -s /usr/local/sbt/bin/sbt /usr/bin/sbt && rm sbt-${SBT_VERSION}.tgz.asc && rm -rf /var/lib/apt/lists/*;\n\n# Build project\nRUN sbt play/dist \\\n  && VERSION=$(ls play/target/universal/zoonavigator-play-*.zip | sed -E 's/.*zoonavigator-play-(.*).zip$/\\1/') \\\n  && unzip play/target/universal/zoonavigator-play-$VERSION.zip \\\n  && mv zoonavigator-play-$VERSION /app\n\nFROM ubuntu:18.04 as ubuntu\n\nARG DOCS_URL\n\n# Get dockerize\nCOPY --from=dockerize /usr/local/bin/dockerize /usr/local/bin/dockerize\n\n# Copy app files\nWORKDIR /app\nCOPY --from=sbt /app .\nCOPY /build/docker/files/zoonavigator-web .\nCOPY /build/docker/files/zoonavigator-api .\nCOPY /zoonavigator-api/play/conf/application.conf ./conf/application.conf\n\n# Create scripts and make them executable\nRUN dockerize \\\n    -template ./run.sh.template:./run.sh \\\n  && chmod +x \\\n    ./run.sh \\\n    ./healthcheck.sh \\\n    ./conf/zoonavigator.conf.sh\n\n# Change permissions\nRUN chgrp -R 0 . \\\n  && chmod -R g=u .\n\nFROM openjdk:11-jdk-slim\n\nARG APP_VERSION\nARG DOCS_URL\nARG VCS_URL\nARG VCS_REF\nARG BUILD_DATE\n\n# Default config\nENV HTTP_PORT=9000 \\\n    REQUEST_MAX_SIZE_KB=10000 \\\n    REQUEST_TIMEOUT_MILLIS=10000 \\\n    ZK_CLIENT_TIMEOUT_MILLIS=5000 \\\n    ZK_CONNECT_TIMEOUT_MILLIS=5000\n\n# Install dependencies\nRUN apt-get update \\\n  && apt-get install --no-install-recommends -y curl krb5-user \\\n  && rm -rf /var/lib/apt/lists/*\n\n# Get dockerize\nCOPY --from=dockerize /usr/local/bin/dockerize /usr/local/bin/dockerize\n\n# Change working directory\nWORKDIR /app\n\n# Change permissions\nRUN chgrp -R 0 . \\\n  && chmod -R g=u .\n\n# Copy app files\nCOPY --from=ubuntu /app .\n\n# Add health check\nHEALTHCHECK --interval=30s --timeout=3s \\\n    CMD ./healthcheck.sh\n\n# Expose default HTTP port\nEXPOSE 9000\n\nENTRYPOINT [\"./run.sh\"]\nUSER 1000\n\nLABEL \\\n  org.label-schema.name=\"ZooNavigator\" \\\n  org.label-schema.description=\"Web-based ZooKeeper UI/editor/browser\" \\\n  org.label-schema.url=${DOCS_URL} \\\n  org.label-schema.vcs-url=${VCS_URL} \\\n  org.label-schema.vcs-ref=${VCS_REF} \\\n  org.label-schema.version=${APP_VERSION} \\\n  org.label-schema.build-date=${BUILD_DATE} \\\n  org.label-schema.docker.cmd=\"docker run -d -p 9000:9000 -e HTTP_PORT=9000 --name zoonavigator --restart unless-stopped elkozmon/zoonavigator:latest\"\n"
}