{
  "startTime": 1674254288342,
  "endTime": 1674254290681,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 164,
        "lineEnd": 164,
        "columnStart": 7,
        "columnEnd": 62
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 171,
        "lineEnd": 171,
        "columnStart": 7,
        "columnEnd": 91
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 112,
        "lineEnd": 112,
        "columnStart": 4,
        "columnEnd": 68
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 167,
        "lineEnd": 167,
        "columnStart": 7,
        "columnEnd": 44
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 69
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 26,
        "columnStart": 7,
        "columnEnd": 18
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 26,
        "columnStart": 7,
        "columnEnd": 18
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Authors:\n# Guilherme Caminha <gpkc@cin.ufpe.br>\n\nFROM phusion/baseimage\nMAINTAINER Guilherme Caminha <gpkc@cin.ufpe.br>\n\nENV HOME /home/scientific\n\nENV MOAB_DIR /usr\nENV VISIT_DIR /opt/visit\nENV MPI_HOME /usr\nENV PYTHONPATH /usr/lib/python3.6/site-packages\nENV PATH /usr/local/bin:$PATH\nENV LANG C.UTF-8\n\nRUN set -x \\\n    && apt-get update \\\n    && apt-get -qy --no-install-recommends install \\\n        wget pkg-config git libopenblas-dev liblapack-dev \\\n        make cmake autoconf automake libtool \\\n        clang gcc g++ gfortran \\\n        libhdf5-mpich-dev libnetcdf-c++4 \\\n        libeigen3-dev libmetis-dev doxygen \\\n        liboce-foundation-dev liboce-modeling-dev liboce-ocaf-dev liboce-visualization-dev oce-draw \\\n        netgen libnglib-dev \\\n        build-essential bzip2 tar m4 file swig \\\n\ttcl tk libssl-dev \\\n    && apt-get clean && rm -rf /var/lib/apt/lists/*;\n\n\nENV GPG_KEY 0D96DF4D4110E5C43FBFB17F2D347EA6AA65421D\nENV PYTHON_VERSION 3.6.3\n\n\n# Install Python3\nRUN set -ex \\\n\t&& buildDeps=' \\\n\t\tdpkg-dev \\\n\t\ttcl-dev \\\n\t\ttk-dev \\\n\t' \\\n\t&& apt-get update && apt-get install -y $buildDeps --no-install-recommends && rm -rf /var/lib/apt/lists/* \\\n\t\\\n\t&& wget -O python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\" \\\n\t&& wget -O python.tar.xz.asc \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\" \\\n\t&& export GNUPGHOME=\"$(mktemp -d)\" \\\n\t&& gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \"$GPG_KEY\" \\\n\t&& gpg --batch --verify python.tar.xz.asc python.tar.xz \\\n\t&& rm -rf \"$GNUPGHOME\" python.tar.xz.asc \\\n\t&& mkdir -p /usr/src/python \\\n\t&& tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \\\n\t&& rm python.tar.xz \\\n\n\t&& cd /usr/src/python \\\n\t&& gnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n\t&& ./configure \\\n\t\t--build=\"$gnuArch\" \\\n\t\t--enable-loadable-sqlite-extensions \\\n\t\t--enable-shared \\\n\t\t--with-system-expat \\\n\t\t--with-system-ffi \\\n\t\t--without-ensurepip \\\n\t&& make -j \"$(nproc)\" \\\n\t&& make install \\\n\t&& ldconfig \\\n\n\t&& apt-get purge -y --auto-remove $buildDeps \\\n\n\t&& find /usr/local -depth \\\n\t\t\\( \\\n\t\t\t\\( -type d -a \\( -name test -o -name tests \\) \\) \\\n\t\t\t-o \\\n\t\t\t\\( -type f -a \\( -name '*.pyc' -o -name '*.pyo' \\) \\) \\\n\t\t\\) -exec rm -rf '{}' + \\\n\t&& rm -rf /usr/src/python\n\n\n# make some useful symlinks that are expected to exist\nRUN cd /usr/local/bin \\\n\t&& ln -s idle3 idle \\\n\t&& ln -s pydoc3 pydoc \\\n\t&& ln -s python3 python \\\n\t&& ln -s python3-config python-config\n\n\n# if this is called \"PIP_VERSION\", pip explodes with \"ValueError: invalid truth value '<VERSION>'\"\n\nENV PYTHON_PIP_VERSION 9.0.1\n\n\nRUN set -ex; \\\n\t\\\n\twget -O get-pip.py 'https://bootstrap.pypa.io/get-pip.py'; \\\n\t\\\n\tpython get-pip.py \\\n\t\t--disable-pip-version-check \\\n\t\t--no-cache-dir \\\n\t\t\"pip==$PYTHON_PIP_VERSION\" \\\n\t; \\\n\tpip --version; \\\n\t\\\n\tfind /usr/local -depth \\\n\t\t\\( \\\n\t\t\t\\( -type d -a \\( -name test -o -name tests \\) \\) \\\n\t\t\t-o \\\n\t\t\t\\( -type f -a \\( -name '*.pyc' -o -name '*.pyo' \\) \\) \\\n\t\t\\) -exec rm -rf '{}' +; \\\n\trm -f get-pip.py\n\n\nCMD [\"/sbin/my_init\"]\n\nRUN pip install --no-cache-dir cython numpy pytest colorlog configobj pytest-runner\n# Install mpi4py\nWORKDIR $HOME\nRUN cd $HOME \\\n    && git clone https://bitbucket.org/mpi4py/mpi4py \\\n    && cd $HOME/mpi4py \\\n    && python setup.py build \\\n    && python setup.py install \\\n    && cd $HOME \\\n    && rm -rf mpi4py\n\n\n# Install MOAB\nWORKDIR $HOME\nRUN cd $HOME \\\n    && git clone https://bitbucket.org/fathomteam/moab.git \\\n    && cd $HOME/moab \\\n    && autoreconf -fi \\\n    && mkdir build \\\n    && cd $HOME/moab/build \\\n    && ../configure \\\n            --prefix=$MOAB_DIR \\\n            --with-mpi=/usr \\\n            --with-hdf5=/usr/lib/x86_64-linux-gnu/hdf5/mpich \\\n            --with-netcdf=/usr \\\n            --with-metis=/usr \\\n            --enable-optimize \\\n            --enable-debug \\\n            --enable-tools \\\n            --enable-pymoab \\\n            --enable-shared \\\n            CFLAGS='-O2 -fPIC -DPIC' \\\n            CXXFLAGS='-O2 -fPIC -DPIC' \\\n            FCFLAGS='-O2 -fPIC' \\\n            FFLAGS='-O2 -fPIC' \\\n    && make -j24\\\n    && make install \\\n    && cd $HOME/moab/build/pymoab \\\n    && python setup.py build \\\n    && python setup.py install \\\n    && cd $HOME \\\n    && rm -rf moab \\\n    && echo \"export MOAB_DIR=$MOAB_DIR\" >> $HOME/.bashrc \\\n    && echo \"export PATH=$PATH:$MOAB_DIR/bin\" >> $HOME/.bashrc \\\n    && echo \"export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$MOAB_DIR/lib\" >> $HOME/.bashrc\n\n\n\n# Install Trilinos\nENV TRILINOS_VER 12.12.1\nENV CPATH /usr/local/include/python3.6m:$CPATH\nRUN cd $HOME \\\n    && wget https://www.cmake.org/files/v3.2/cmake-3.2.2.tar.gz \\\n    && tar xzvf cmake-3.2.2.tar.gz \\\n    && cd $HOME/cmake-3.2.2 \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/local/cmake \\\n    && make -j24 && make install \\\n    && cd $HOME \\\n    && rm -rf cmake-3.2.2 && rm -f cmake-3.2.2.tar.gz \\\n    && wget https://trilinos.csbsju.edu/download/files/trilinos-$TRILINOS_VER-Source.tar.bz2 \\\n    && tar xjvf trilinos-$TRILINOS_VER-Source.tar.bz2 \\\n    && mkdir trilinos-$TRILINOS_VER-Source/build \\\n    && cd $HOME/trilinos-$TRILINOS_VER-Source/build/ \\\n    && /usr/local/cmake/bin/cmake -D CMAKE_INSTALL_PREFIX:PATH=/usr \\\n          \\\n          -D MPI_BASE_DIR:PATH=/usr \\\n          \\\n          -D CMAKE_BUILD_TYPE:STRING=Release \\\n          -D CMAKE_Fortran_COMPILER:FILEPATH=/usr/bin/mpif90 \\\n          -D BUILD_SHARED_LIBS:BOOL=ON \\\n          -D Trilinos_WARNINGS_AS_ERRORS_FLAGS:STRING=\"\" \\\n          \\\n          -D Trilinos_ENABLE_ALL_PACKAGES:BOOL=OFF \\\n          -D Trilinos_ENABLE_ALL_OPTIONAL_PACKAGES:BOOL=OFF \\\n          -D Trilinos_ENABLE_ALL_FORWARD_DEP_PACKAGES:BOOL=OFF \\\n          -D Trilinos_ENABLE_Teuchos:BOOL=ON \\\n          -D Trilinos_ENABLE_Epetra:BOOL=ON \\\n          -D Trilinos_ENABLE_AztecOO:BOOL=ON \\\n          -D Trilinos_ENABLE_Amesos:BOOL=ON \\\n          -D Trilinos_ENABLE_PyTrilinos:BOOL=ON \\\n          \\\n          -D PyTrilinos_DISABLE_STRONG_WARN:BOOL=OFF\\\n          -D PyTrilinos_DOCSTRINGS:BOOL=OFF \\\n          -D PyTrilinos_ENABLE_EXAMPLES:BOOL=OFF \\\n          -D PyTrilinos_ENABLE_TESTS:BOOL=OFF\\\n          \\\n          -D Trilinos_ENABLE_EXAMPLES:BOOL=OFF \\\n          -D Trilinos_ENABLE_TESTS:BOOL=OFF \\\n          \\\n          -D TPL_ENABLE_MATLAB:BOOL=OFF \\\n          -D TPL_ENABLE_Matio:BOOL=OFF \\\n          -D TPL_ENABLE_MPI:BOOL=ON \\\n          -D TPL_ENABLE_BLAS:BOOL=ON \\\n          -D TPL_ENABLE_LAPACK:BOOL=ON \\\n          -D TPL_ENABLE_QT:BOOL=OFF \\\n          -D TPL_ENABLE_X11:BOOL=OFF \\\n          -D TPL_ENABLE_MPI4PY:BOOL=ON \\\n          \\\n          -D CMAKE_VERBOSE_MAKEFILE:BOOL=OFF \\\n          -D Trilinos_VERBOSE_CONFIGURE:BOOL=OFF \\\n          .. \\\n    && make -j24 \\\n    && cd $HOME/trilinos-$TRILINOS_VER-Source/build/packages/PyTrilinos/src/PyTrilinos \\\n    && python -m compileall -b -l -f . \\\n    && cd $HOME/trilinos-$TRILINOS_VER-Source/build \\\n    && make install \\\n    && cd $HOME \\\n    && rm -rf trilinos-$TRILINOS_VER-Source trilinos-$TRILINOS_VER-Source.tar.bz2\n"
}