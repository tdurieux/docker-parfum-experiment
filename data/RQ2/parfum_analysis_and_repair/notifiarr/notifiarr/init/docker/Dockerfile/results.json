{
  "startTime": 1674254351997,
  "endTime": 1674254352993,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 129
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 18,
        "columnEnd": 65
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 18,
        "columnEnd": 65
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# This is part of Application Builder.\n# https://github.com/golift/application-builder\n#\n\nARG BUILD_DATE=0\nARG COMMIT=0\nARG VERSION=unknown\nARG BINARY=application-builder\n\nFROM golang:1-buster as builder\nARG TARGETOS\nARG BINARY\nARG TARGETARCH\nARG BUILD_FLAGS\nRUN mkdir -p $GOPATH/pkg/mod $GOPATH/bin $GOPATH/src /${BINARY}\nCOPY . /${BINARY}\nWORKDIR /${BINARY}\n\n# For megacli. All the *'s are to deal with multiarch. :(\nRUN apt update && apt install --no-install-recommends -y libncurses5 libstdc++6 libtinfo5 && \\\n    curl -f -sSo /notifiarr.tgz https://raw.githubusercontent.com/Notifiarr/build-dependencies/main/notifiarr-docker-$TARGETARCH.tgz && \\\n    tar -zxf /notifiarr.tgz -C / && \\\n    mkdir -p /tmp/lib_link /tmp$(ls -d /lib/*-linux-gnu*) && cp /usr/lib/*-linux-gnu*/libstdc++.so* \\\n    /lib/*-linux-gnu*/ld-2.*.so /lib/*-linux-gnu*/libpthread.so.0 /lib/*-linux-gnu*/libpthread-2.*.so \\\n    /lib/*-linux-gnu*/libm.so.6 /lib/*-linux-gnu*/libm-2.*.so /lib/*-linux-gnu*/libgcc_s.so.1 \\\n    /lib/*-linux-gnu*/libdl.so.2 /lib/*-linux-gnu*/libdl-2.*.so /lib/*-linux-gnu*/libc.so.6 \\\n    /lib/*-linux-gnu*/libc-2.*.so /lib/*-linux-gnu*/libncurses.so.5 \\\n    /lib/*-linux-gnu*/libtinfo.so.5 /tmp$(ls -d /lib/*-linux-gnu*) && \\\n    ln -s /lib/*-linux-gnu*/ld-2.*.so /tmp/lib/ld-linux-x86-64.so.2 && \\\n    ln -s /lib/*-linux-gnu*/ld-2.*.so /tmp/lib/ld-linux-aarch64.so.1 && \\\n    ln -s /usr/lib /tmp/lib_link/lib64 && \\\n    ln -s /usr/lib /tmp/lib_link/lib && rm /notifiarr.tgz && rm -rf /var/lib/apt/lists/*;\n\n# Build the app.\nRUN CGO_ENABLED=1 make clean ${BINARY}.${TARGETARCH}.${TARGETOS}\n\nFROM scratch\nARG TARGETOS\nARG TARGETARCH\nARG BUILD_DATE\nARG COMMIT\nARG VERSION\nARG LICENSE=MIT\nARG BINARY\nARG SOURCE_URL=http://github.com/golift/application-builder\nARG DESC=application-builder\nARG VENDOR=golift\nARG AUTHOR=golift\nARG CONFIG_FILE=config.conf\n\n# Build-time metadata as defined at https://github.com/opencontainers/image-spec/blob/master/annotations.md\nLABEL org.opencontainers.image.created=\"${BUILD_DATE}\" \\\n      org.opencontainers.image.title=\"${BINARY}\" \\\n      org.opencontainers.image.documentation=\"${SOURCE_URL}/wiki/Docker\" \\\n      org.opencontainers.image.description=\"${DESC}\" \\\n      org.opencontainers.image.url=\"${SOURCE_URL}\" \\\n      org.opencontainers.image.revision=\"${COMMIT}\" \\\n      org.opencontainers.image.source=\"${SOURCE_URL}\" \\\n      org.opencontainers.image.vendor=\"${VENDOR}\" \\\n      org.opencontainers.image.authors=\"${AUTHOR}\" \\\n      org.opencontainers.image.architecture=\"${TARGETOS} ${TARGETARCH}\" \\\n      org.opencontainers.image.licenses=\"${LICENSE}\" \\\n      org.opencontainers.image.version=\"${VERSION}\"\n\nCOPY --from=builder /${BINARY}/${BINARY}.${TARGETARCH}.${TARGETOS} /image\n\n# For megacli.\nCOPY --from=builder /MegaCli* /libstorelibir-2.so.14.07-0 /smartctl /\nCOPY --from=builder /tmp/lib /usr/lib\nCOPY --from=builder /tmp/lib_link/ /\n\n# Make sure we have an ssl cert chain and timezone data.\nCOPY --from=builder /etc/ssl /etc/ssl\nCOPY --from=builder /usr/share/zoneinfo /usr/share/zoneinfo\n\nENV TZ=UTC\n\n# Notifiarr specific.\nENV PATH=/\nENV USER=root\nENV NOTIFIARR_IN_DOCKER=true\n\nEXPOSE 5454\nENTRYPOINT [ \"/image\" ]\n"
}