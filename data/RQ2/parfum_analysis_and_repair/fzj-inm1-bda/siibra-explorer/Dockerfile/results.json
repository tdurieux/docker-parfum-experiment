{
  "startTime": 1674215217108,
  "endTime": 1674215219122,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 9
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 81,
        "lineEnd": 81,
        "columnStart": 4,
        "columnEnd": 9
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 36,
        "columnEnd": 54
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 36,
        "columnEnd": 54
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 36,
        "columnEnd": 54
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:14 as builder\n\nARG BACKEND_URL\nENV BACKEND_URL=${BACKEND_URL}\n\nARG BS_REST_URL\nENV BS_REST_URL=${BS_REST_URL:-https://siibra-api-stable.apps.hbp.eu/v1_0}\n\nARG STRICT_LOCAL\nENV STRICT_LOCAL=${STRICT_LOCAL:-false}\n\nARG KIOSK_MODE\nENV KIOSK_MODE=${KIOSK_MODE:-false}\n\nARG MATOMO_URL\nENV MATOMO_URL=${MATOMO_URL}\n\nARG MATOMO_ID\nENV MATOMO_ID=${MATOMO_ID}\n\nARG EXPERIMENTAL_FEATURE_FLAG\nENV EXPERIMENTAL_FEATURE_FLAG=${EXPERIMENTAL_FEATURE_FLAG:-false}\n\nARG GIT_HASH\nENV GIT_HASH=${GIT_HASH:-unknownhash}\n\nARG VERSION\nENV VERSION=${VERSION:-unknownversion}\n\nCOPY . /iv\nWORKDIR /iv\n\n# angular 12 echo the env var into src/environments/environment.prod.ts\nRUN node ./src/environments/parseEnv.js\n\n# When building in local, where node_module already exist, prebuilt binary may throw an error\nRUN rm -rf ./node_modules\n\n\nRUN npm i && npm cache clean --force;\nRUN npm run build\nRUN npm run build-storybook\n\n# gzipping container\nFROM ubuntu:22.04 as compressor\nRUN apt upgrade -y && apt update && apt install -y --no-install-recommends brotli && rm -rf /var/lib/apt/lists/*;\n\nRUN mkdir /iv\nCOPY --from=builder /iv/dist/aot /iv\nCOPY --from=builder /iv/storybook-static /iv/storybook-static\n\n# Remove duplicated assets. Use symlink instead.\nWORKDIR /iv/storybook-static\nRUN rm -rf ./assets\nRUN ln -s ../assets ./assets\n\nWORKDIR /iv\n\nRUN for f in $(find . -type f); do gzip < $f > $f.gz && brotli < $f > $f.br; done\n\n# prod container\nFROM node:14-alpine\n\nENV NODE_ENV=production\n\nRUN apk --no-cache add ca-certificates\nRUN mkdir /iv-app\nWORKDIR /iv-app\n\n# Copy common folder\nCOPY --from=builder /iv/common /common\n\n# Copy the express server\nCOPY --from=builder /iv/deploy .\n\n# Copy built interactive viewer\nCOPY --from=compressor /iv ./public\n\nRUN chown -R node:node /iv-app\n\nUSER node\nRUN npm i && npm cache clean --force;\n\nEXPOSE 8080\nENV PORT 8080\nENTRYPOINT [ \"node\", \"server.js\" ]\n"
}