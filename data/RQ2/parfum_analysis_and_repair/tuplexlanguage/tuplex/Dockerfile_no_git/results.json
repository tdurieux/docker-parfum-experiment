{
  "startTime": 1674254696308,
  "endTime": 1674254697238,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 104
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#########\n# Stage 1 - fetch build tools, fetch Tuplex source, and build it\nFROM ubuntu:20.04 as builder\n\nLABEL maintainer \"Maintainer <tuplex@chervil.se>\"\nLABEL description=\"This is a Ubuntu Docker image for building the Tuplex compiler\"\n\n# Install general build tools\n# Install software to fetch the Tuplex source, and needed LLVM components\nRUN apt-get update && apt-get install -y \\\n    bison \\\n    cmake \\\n    make \\\n    gcc \\\n    g++ \\\n    curl \\\n    ca-certificates \\\n    unzip \\\n    libllvm11 \\\n    llvm-11-dev \\\n    --no-install-recommends \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Add LLVM to path\nENV PATH $PATH:/usr/lib/llvm-11/bin\n\n# Fetch the Tuplex source\nRUN curl -f -sSL https://github.com/TuplexLanguage/tuplex/archive/master.zip --output /usr/local/master.zip && \\\n     unzip -q /usr/local/master.zip -d /usr/local && \\\n     ln -s /usr/local/tuplex-master /usr/local/tuplex && \\\n     rm /usr/master.zip\n\n# Build tuplex\n# Create a Tuplex release bundle (without sources and build files)\nRUN mkdir /usr/local/tuplex/compiler/build-release && \\\n    cd /usr/local/tuplex/compiler/build-release && \\\n    cmake .. && \\\n    make -j7 && \\\n    ../scripts/copytxrelease -nozip\n\n\n#########\n# Stage 2 - produce a minimal release image with build results\nFROM ubuntu:20.04\n\nLABEL maintainer \"Maintainer <tuplex@chervil.se>\"\nLABEL description=\"This is a Ubuntu Docker image for running the Tuplex compiler\"\n\n# Install software to fetch the Tuplex source, and needed LLVM components\nRUN apt-get update && apt-get install -y \\\n    python3-minimal \\\n    libllvm11 \\\n    nano-tiny \\\n    --no-install-recommends \\\n    && rm -rf /var/lib/apt/lists/*\n\nCOPY --from=builder /usr/local/tuplex/compiler/build-release/releases/latest /usr/local/tuplex/compiler\n\n# Add Tuplex bin and scripts to path\nENV PATH /usr/local/tuplex/compiler/scripts:/usr/local/tuplex/compiler/bin:$PATH\n\n# Set Tuplex' source path var\nENV TUPLEX_HOME /usr/local/tuplex/compiler\nENV TUPLEX_MODULE_PATHS .\n\nWORKDIR /usr/local/tuplex/compiler\n"
}