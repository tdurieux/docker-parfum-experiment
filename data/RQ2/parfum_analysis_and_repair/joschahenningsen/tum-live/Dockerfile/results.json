{
  "startTime": 1674246726113,
  "endTime": 1674246726989,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 18
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:18 as node\n\nWORKDIR /app\nCOPY web web\n\n## remove generated files in case the developer build with npm before\nRUN rm -rf web/assets/ts-dist\nRUN rm -rf web/assets/css-dist\n\nWORKDIR /app/web\nRUN npm i --no-dev && npm cache clean --force;\n\nFROM golang:1.18-alpine as build-env\nRUN mkdir /gostuff\nWORKDIR /gostuff\nCOPY go.mod .\nCOPY go.sum .\n\n# Get dependencies - will also be cached if we won't change mod/sum\nRUN go mod download\n\nWORKDIR /go/src/app\nCOPY . .\nCOPY --from=node /app/web/assets ./web/assets\nCOPY --from=node /app/web/node_modules ./web/node_modules\n\n# bundle version into binary if specified in build-args, dev otherwise.\nARG version=dev\nRUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -ldflags \"-w -extldflags '-static' -X main.VersionTag=${version}\" -o /go/bin/tumlive cmd/tumlive/tumlive.go\n\nFROM alpine:3.16\nRUN apk add --no-cache tzdata\nWORKDIR /app\nCOPY --from=build-env /go/bin/tumlive .\nCMD [\"sh\", \"-c\", \"sleep 3 && ./tumlive\"]\n"
}