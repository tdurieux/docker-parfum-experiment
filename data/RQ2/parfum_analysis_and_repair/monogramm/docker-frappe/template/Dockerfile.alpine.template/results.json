{
  "startTime": 1674248190186,
  "endTime": 1674248191670,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 121,
        "lineEnd": 134,
        "columnStart": 4,
        "columnEnd": 5
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 135,
        "lineEnd": 139,
        "columnStart": 36,
        "columnEnd": 13
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 93,
        "lineEnd": 93,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 117,
        "lineEnd": 117,
        "columnStart": 41,
        "columnEnd": 63
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 135,
        "lineEnd": 139,
        "columnStart": 36,
        "columnEnd": 13
      }
    }
  ],
  "repairedDockerfile": "##\n##    Docker image for Frappe applications.\n##    Copyright (C) 2021 Monogramm\n##\n##    This program is free software: you can redistribute it and/or modify\n##    it under the terms of the GNU Affero General Public License as published\n##    by the Free Software Foundation, either version 3 of the License, or\n##    (at your option) any later version.\n##\n##    This program is distributed in the hope that it will be useful,\n##    but WITHOUT ANY WARRANTY; without even the implied warranty of\n##    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n##    GNU Affero General Public License for more details.\n##\n##    You should have received a copy of the GNU Affero General Public License\n##    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n##\nFROM madnight/alpine-wkhtmltopdf-builder:0.12.5-alpine3.10-606718795 AS wkhtmltopdf-builder\n\nFROM python:%%PYTHON_VERSION%%-%%VARIANT%%\n\nCOPY --from=wkhtmltopdf-builder \\\n    /bin/wkhtmltopdf /bin/wkhtmltopdf\n\nARG DOCKERIZE_VERSION=v0.6.1\n\n# Frappe base environment\nRUN set -ex; \\\n    apk add --update \\\n        alpine-sdk \\\n        busybox-suid \\\n        dbus \\\n        git \\\n        glib \\\n        linux-headers \\\n        libgcc \\\n        libintl \\\n        libstdc++ \\\n        libxslt \\\n        libxslt-dev \\\n        nodejs \\\n        nodejs-npm \\\n        openntpd \\\n        py-setuptools \\\n        py-openssl \\\n        py-ldap3 \\\n        python-dev \\\n        wget \\\n        zlib-dev \\\n    ; \\\n    git --version; \\\n    node --version; \\\n    npm --version; \\\n    npm install -g --unsafe-perm yarn; npm cache clean --force; \\\n    yarn --version; \\\n    apk add --update \\\n        mariadb-client \\\n        mariadb-common \\\n        mariadb-dev \\\n        postgresql-client \\\n        postgresql-dev \\\n        postgresql-libs \\\n    ; \\\n    apk add --update \\\n        jpeg-dev \\\n        lcms2-dev \\\n        libffi-dev \\\n        libwebp-dev \\\n        tiff-dev \\\n    ; \\\n    apk add --update \\\n        freetype-dev \\\n        fontconfig \\\n        libx11 \\\n        libxext \\\n        libxrender \\\n        screen \\\n        ttf-freefont \\\n        ttf-dejavu \\\n        ttf-droid \\\n        ttf-liberation \\\n        ttf-ubuntu-font-family \\\n        xvfb \\\n    ; \\\n    mkdir /tmp/.X11-unix; \\\n    chmod 777 /tmp/.X11-unix; \\\n    chown root:root /tmp/.X11-unix; \\\n    rm -rf /var/cache/apk/*; \\\n    echo 'Set disable_coredump false' > /etc/sudo.conf; \\\n    wkhtmltopdf --version; \\\n    wget \"https://github.com/jwilder/dockerize/releases/download/${DOCKERIZE_VERSION}/dockerize-linux-amd64-${DOCKERIZE_VERSION}.tar.gz\"; \\\n    tar -C /usr/local/bin -xzvf \"dockerize-linux-amd64-${DOCKERIZE_VERSION}.tar.gz\"; \\\n    rm \"dockerize-linux-amd64-${DOCKERIZE_VERSION}.tar.gz\"; \\\n    pip install --no-cache-dir --upgrade setuptools pip pip-tools; \\\n    pip --version\n\nARG VERSION=%%VERSION%%\nARG FRAPPE_USER=frappe\nARG FRAPPE_UID=1000\nARG FRAPPE_GID=1000\nARG FRAPPE_PATH=https://github.com/frappe/frappe.git\n\n# Build environment variables\nENV FRAPPE_USER=${FRAPPE_USER} \\\n    BENCH_BRANCH=%%BENCH_BRANCH%% \\\n    FRAPPE_BRANCH=${VERSION}\n\nRUN set -ex; \\\n    addgroup -S \"${FRAPPE_USER}\" -g \"${FRAPPE_GID}\"; \\\n    adduser -D -G \"${FRAPPE_USER}\" -u \"${FRAPPE_UID}\" \"${FRAPPE_USER}\"; \\\n    echo 'frappe ALL=(ALL) NOPASSWD: ALL' > /etc/sudoers\n\nUSER $FRAPPE_USER\nWORKDIR /home/$FRAPPE_USER\n\n# Setup Bench and Frappe\nRUN set -ex; \\\n    test \"$BENCH_BRANCH\" = \"4.1\" && sudo pip install --no-cache-dir pip==9.0.3; \\\n    git clone -b \"$BENCH_BRANCH\" --depth 1 'https://github.com/frappe/bench' bench-repo; \\\n    sudo pip%%PIP_VERSION%% install -e \"/home/$FRAPPE_USER/bench-repo\" --no-cache-dir; \\\n    bench --version; \\\n    npm install \\\n        chalk \\\n        rollup \\\n        rollup-plugin-multi-entry \\\n        rollup-plugin-commonjs \\\n        rollup-plugin-node-resolve \\\n        rollup-plugin-uglify \\\n        rollup-plugin-postcss \\\n        rollup-plugin-buble \\\n        rollup-plugin-terser \\\n        rollup-plugin-vue \\\n        vue-template-compiler \\\n        moment \\\n    ; npm cache clean --force; \\\n    test \"$BENCH_BRANCH\" = \"4.1\" && npm install \\\n        babel-core \\\n        babel-plugin-transform-object-rest-spread \\\n        babel-preset-env \\\n        touch \\\n    ; \\\n    bench setup socketio; \\\n    bench init \\\n        --frappe-path \"$FRAPPE_PATH\" \\\n        --frappe-branch \"$FRAPPE_BRANCH\" \\\n        --python $(which python%%PYTHON_VERSION%%) \\\n        %%BENCH_OPTIONS%% frappe-bench \\\n    ; \\\n    bench --version; \\\n    rm -rf node_modules; \\\n    cd frappe-bench; \\\n    mkdir -p apps logs sites config; \\\n    sed -i -e \"s|^werkzeug$|werkzeug==0.16.1|g\" apps/frappe/requirements.txt; \\\n    grep 'ldap3==2.7' apps/frappe/requirements.txt || echo 'ldap3==2.7' >> apps/frappe/requirements.txt; \\\n    test ! \"$FRAPPE_BRANCH\" = \"v10.x.x\" && bench setup env --python $(which python%%PYTHON_VERSION%%) ; \\\n    sudo bench setup sudoers \"$FRAPPE_USER\"\n\n# Alternative: replace previous run by this for manual install\n#RUN set -ex; \\\n#    mkdir -p frappe-bench; \\\n#    cd frappe-bench; \\\n#    mkdir -p apps logs sites config; \\\n#    bench setup env; \\\n#    sudo bench setup sudoers \"$FRAPPE_USER\"; \\\n#    bench get-app frappe 'https://github.com/frappe/frappe' --branch \"$FRAPPE_BRANCH\"; \\\n#    cd \"/home/$FRAPPE_USER/frappe-bench/apps/frappe\"; \\\n#    npm install; \\\n#    cd \"/home/$FRAPPE_USER/frappe-bench\"; \\\n#    npm install babel-preset-env; \\\n#    rm -rf \"/home/$FRAPPE_USER/bench-repo/.git\"; \\\n#    rm -rf \"/home/$FRAPPE_USER/frappe-bench/apps/frappe/.git\"\n\n# Runtime environment variables\nENV DOCKER_DB_TIMEOUT=240 \\\n    DOCKER_DB_ALLOWED_HOSTS= \\\n    DOCKER_SITES_TIMEOUT=600 \\\n    DOCKER_APPS_TIMEOUT=720 \\\n    DOCKER_INIT_TIMEOUT=300 \\\n    DOCKER_DEBUG= \\\n    DOCKER_GUNICORN_BIND_ADDRESS=0.0.0.0 \\\n    DOCKER_GUNICORN_PORT=8000 \\\n    DOCKER_GUNICORN_WORKERS=4 \\\n    DOCKER_GUNICORN_TIMEOUT=240 \\\n    DOCKER_GUNICORN_LOGLEVEL=info \\\n    FRAPPE_APP_INIT= \\\n    FRAPPE_APP_RESET= \\\n    FRAPPE_APP_PROTECTED=frappe \\\n    FRAPPE_DEFAULT_PROTOCOL=http \\\n    FRAPPE_DEFAULT_SITE= \\\n    FRAPPE_HTTP_PORT=80 \\\n    FRAPPE_WEBSERVER_PORT=80 \\\n    FRAPPE_SOCKETIO_PORT=3000 \\\n    FRAPPE_RESET_SITES= \\\n    FRAPPE_REINSTALL_DATABASE= \\\n    FRAPPE_BUILD_OPTIONS= \\\n    FRAPPE_LOGGING=1 \\\n    GOOGLE_ANALYTICS_ID= \\\n    SERVER_SCRIPT_ENABLED=0 \\\n    ALLOW_TESTS=0 \\\n    DEVELOPER_MODE=0 \\\n    ADMIN_PASSWORD=frappe \\\n    ENCRYPTION_KEY= \\\n    DB_TYPE=mariadb \\\n    DB_HOST=db \\\n    DB_PORT=3306 \\\n    DB_NAME=frappe \\\n    DB_PASSWORD=youshouldoverwritethis \\\n    DB_ROOT_LOGIN=root \\\n    DB_ROOT_PASSWORD=mariadb_root_password \\\n    MAIL_MUTED=false \\\n    MAIL_HOST=mail \\\n    MAIL_PORT=587 \\\n    MAIL_USE_SSL=1 \\\n    MAIL_USE_TLS=1 \\\n    MAIL_LOGIN=frappe-mail \\\n    MAIL_PASSWORD=youshouldoverwritethis \\\n    MAIL_EMAIL_ID= \\\n    MAIL_SENDER_NAME=Notifications \\\n    MAIL_ALWAYS_EMAIL_ID_AS_SENDER=0 \\\n    MAIL_ALWAYS_NAME_AS_SENDER_NAME=0 \\\n    REDIS_CACHE_HOST=redis_cache \\\n    REDIS_QUEUE_HOST=redis_queue \\\n    REDIS_SOCKETIO_HOST=redis_socketio\n\n# Copy docker entrypoint\nCOPY ./entrypoint.sh /\n\n# Set permissions\nRUN set -ex; \\\n    sudo mkdir -p \"/home/$FRAPPE_USER\"/frappe-bench/logs; \\\n    sudo touch \"/home/$FRAPPE_USER\"/frappe-bench/logs/bench.log; \\\n    sudo chmod +rw \\\n        \"/home/$FRAPPE_USER\"/frappe-bench/logs \\\n        \"/home/$FRAPPE_USER\"/frappe-bench/logs/* \\\n    ; \\\n    sudo chown -R \"${FRAPPE_USER}:${FRAPPE_USER}\" \\\n        \"/home/$FRAPPE_USER/frappe-bench\" \\\n    ;\n\n#VOLUME /home/$FRAPPE_USER/bench-repo \\\n#    /home/$FRAPPE_USER/frappe-bench/logs \\\n#    /home/$FRAPPE_USER/frappe-bench/sites \\\n#    /home/$FRAPPE_USER/frappe-bench/apps/frappe/frappe/public\n\nWORKDIR /home/$FRAPPE_USER/frappe-bench\n\nENTRYPOINT [\"/entrypoint.sh\"]\nCMD [\"app\"]\n\nARG TAG\nARG VCS_REF\nARG BUILD_DATE\n\n# Docker built environment variables\nENV DOCKER_TAG=${TAG} \\\n    DOCKER_VCS_REF=${VCS_REF} \\\n    DOCKER_BUILD_DATE=${BUILD_DATE}\n\nLABEL maintainer=\"Monogramm Maintainers <opensource at monogramm dot io>\" \\\n      product=\"Frappe\" \\\n      version=$VERSION \\\n      org.label-schema.vcs-ref=$VCS_REF \\\n      org.label-schema.vcs-url=\"https://github.com/Monogramm/docker-frappe\" \\\n      org.label-schema.build-date=$BUILD_DATE \\\n      org.label-schema.name=\"Frappe\" \\\n      org.label-schema.description=\"Python + JS based metadata driven, full-stack web-application framework.\" \\\n      org.label-schema.url=\"https://frappe.io/\" \\\n      org.label-schema.vendor=\"Frappé Technologies Pvt. Ltd\" \\\n      org.label-schema.version=$VERSION \\\n      org.label-schema.schema-version=\"1.0\"\n"
}