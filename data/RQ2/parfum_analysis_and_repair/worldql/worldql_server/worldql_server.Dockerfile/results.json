{
  "startTime": 1674253563342,
  "endTime": 1674253563947,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 11,
        "columnStart": 2,
        "columnEnd": 4
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 11,
        "columnStart": 2,
        "columnEnd": 4
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# ---\n# Build Time\nFROM rust AS builder\n\n# Install build dependencies\nWORKDIR /app\nRUN apt-get update && \\\n  apt-get install --no-install-recommends \\\n    cmake \\\n  -y && rm -rf /var/lib/apt/lists/*;\n\n# Build application\nCOPY ./.git ./.git\nCOPY ./Cargo.toml ./Cargo.lock ./\nCOPY ./worldql_server ./worldql_server\nRUN cargo install --path worldql_server\n\n# ---\n# Runtime\nFROM debian:11-slim\nWORKDIR /\n\n# Setup non-root user\nRUN \\\n  groupadd -g 1001 worldql && \\\n  useradd -mu 1001 -g worldql worldql\n\n# Copy application\nCOPY --from=builder --chown=1001:1001 /usr/local/cargo/bin/worldql_server .\n\n# Define repo label\nARG GIT_REPO\nLABEL org.opencontainers.image.source=${GIT_REPO}\n\n# Expose default ports\nEXPOSE 5555\nEXPOSE 8080\nEXPOSE 8081\n\n# Define user and entrypoint\nUSER worldql\nENTRYPOINT [\"/worldql_server\"]\n"
}