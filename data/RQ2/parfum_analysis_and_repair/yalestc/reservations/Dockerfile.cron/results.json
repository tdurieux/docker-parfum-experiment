{
  "startTime": 1674255778522,
  "endTime": 1674255779507,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 51
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ruby:2.6.5\n\n# Add NodeJS repo\nRUN curl -f -sL https://deb.nodesource.com/setup_12.x | bash -\nRUN curl -f -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -\nRUN echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list\n\n# Install dependencies and remove unneeded packages/files\nRUN apt-get update -qq && apt-get install -y --no-install-recommends cron \\\n                                               nodejs \\\n                                               git \\\n                                               unzip \\\n                                               xvfb \\\n                                               libxi6 \\\n                                               libgconf-2-4 \\\n                                               apt-transport-https \\\n                                               yarn && rm -rf /var/lib/apt/lists/*;\n# Install packages\nWORKDIR /usr/src/app\nCOPY Gemfile* /usr/src/app/\nCOPY Gemfile.lock* /usr/src/app/\nRUN gem install bundler --no-document\nRUN bundle install --without development test\n\n# Setup app files\nCOPY . /usr/src/app/\nWORKDIR /usr/src/app\nCOPY config/database.yml.example.production config/database.yml\n\n# Create log file and link to stdout\nRUN touch /var/log/cron.log\n\n# Add entrypoint\nCOPY entrypoint-cron.sh /usr/bin/\nRUN chmod +x /usr/bin/entrypoint-cron.sh\nENTRYPOINT [\"entrypoint-cron.sh\"]\n\n# Update and cleanup container\nRUN apt-get upgrade -y && apt-get autoclean \\\n                       && apt-get autoremove -y \\\n                       && rm -rf /var/lib/apt \\\n                                 /var/lib/dpkg \\\n                                 /var/lib/cache \\\n                                 /var/lib/log\n\n# App startup\nCMD [\"cron\", \"-f\"]\n"
}