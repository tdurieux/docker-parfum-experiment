{
  "startTime": 1674251877001,
  "endTime": 1674251877977,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 32
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Based on https://www.jmoisio.eu/en/blog/2020/06/01/building-cpp-containers-using-docker-and-cmake/\n#\n# The new base image to contain runtime dependencies\n\nFROM debian:buster-slim AS base\n\n\n    RUN apt-get update && set -ex; \\\n    apt-get install --no-install-recommends -y g++ make; rm -rf /var/lib/apt/lists/*; \\\n    mkdir -p /app;# The first stage will install build dependencies on top of the\n# runtime dependencies, and then compile\n\nFROM base AS builder\n\n\n\n\n\nCOPY . /app\n\nRUN set -ex;                        \\\n    cd /app;                        \\\n    make distclean; make\n\n# The second stage will already contain all dependencies, just copy\n# the compiled executables\n\nFROM base AS runtime\n\nCOPY --from=builder /app/agent /usr/local/bin\n\nENTRYPOINT sleep 1; /usr/local/bin/agent"
}