{
  "startTime": 1674251396627,
  "endTime": 1674251397841,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 31,
        "columnEnd": 102
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 9,
        "columnEnd": 170
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 6,
        "columnEnd": 123
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 22,
        "columnStart": 6,
        "columnEnd": 38
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 6,
        "columnEnd": 123
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 22,
        "columnStart": 6,
        "columnEnd": 38
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG BASE_DEV_IMAGE=ubuntu:20.04\nFROM $BASE_DEV_IMAGE\n\n#Configurations for the general environment\nARG UNAME=oai-spgwu\nARG DEBIAN_FRONTEND=noninteractive\nENV TZ=America/Sao_Paulo\nENV LANG=en_US.UTF-8\n\nWORKDIR /tmp/$UNAME\n\n#Install basic software to update repository list\nRUN apt-get update && \\\n      apt-get install --no-install-recommends -y apt-transport-https ca-certificates curl gnupg-agent gnupg2 software-properties-common lsb-release && \\\n      curl -fsSL https://download.docker.com/linux/$(lsb_release -is | tr '[:upper:]' '[:lower:]')/gpg | apt-key add - 2>/dev/null && \\\n      add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/$(lsb_release -is | tr '[:upper:]' '[:lower:]') $(lsb_release -cs) stable\" && rm -rf /var/lib/apt/lists/*;\n\n#Install deps packages\nRUN apt-get update && \\\n      apt-get -y --no-install-recommends install sudo tzdata git cmake gcc g++ libconfig++ iproute2 iptables iputils-ping wget \\\n      python3-pip locales ethtool docker-ce-cli libssl-dev rsync gdb bash-completion tmux \\\n      tcpdump libelf-dev zlib1g clang llvm libasan5 linux-tools-common linux-headers-generic \\\n      g++-multilib libc6-dev-i386 gosu && rm -rf /var/lib/apt/lists/*;\n\nRUN pip3 install --no-cache-dir numpy\n\n#Downloading Docker Compose\nRUN LATEST_COMPOSE_VERSION=$( curl -f -sSL \"https://api.github.com/repos/docker/compose/releases/latest\" | grep -o -P '(?<=\"tag_name\": \").+(?=\")') \\\n      && curl -f -sSL \"https://github.com/docker/compose/releases/download/${LATEST_COMPOSE_VERSION}/docker-compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-compose \\\n      && chmod +x /usr/local/bin/docker-compose\n\n# Ubuntu 20.04 already support cmake 3.19.\nRUN if [ $BASE_DEV_IMAGE != \"ubuntu:20.04\" ];  then \\\n      wget -c  https://github.com/Kitware/CMake/releases/download/v3.19.2/cmake-3.19.2.tar.gz -O - | tar -xz && \\\n      cd cmake-3.19.2 && ./bootstrap && make -j4 && make install; fi\n\n# Locales for Yocto\nRUN echo \"$LANG UTF-8\" > /etc/locale.gen && \\\n    dpkg-reconfigure --frontend=noninteractive locales && \\\n    update-locale LANG=$LAN\n\n# Copy Entrypoint Script to Container\nCOPY entrypoint.sh /entrypoint.sh\n\nCMD [\"/bin/bash\"]\nENTRYPOINT [\"/entrypoint.sh\"]\n"
}