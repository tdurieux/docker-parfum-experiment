{
  "startTime": 1674250116006,
  "endTime": 1674250117376,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 101
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 132
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 157
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 136,
        "columnEnd": 188
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 9,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM blacklabelops/jobber\nMAINTAINER Steffen Bleul <sbl@blacklabelops.com>\n\n# Image Build Date By Buildsystem\nARG BUILD_DATE=undefined\n\nUSER root\n\n# install tools\nRUN apk add --no-cache --update \\\n      gnupg \\\n      wget \\\n      curl \\\n      tar \\\n      gzip \\\n      bzip2 \\\n      zip \\\n      unzip \\\n      rsync \\\n      py-pip \\\n      git \\\n      mercurial && \\\n    pip install --no-cache-dir --upgrade pip\n\n# Cloud Envs\nENV SCRIPT_HOME=/opt/cloud\n\n# install Amazon WS Cli\nRUN pip install --no-cache-dir awscli && \\\n    curl -f -o /usr/local/bin/ecs-cli https://s3.amazonaws.com/amazon-ecs-cli/ecs-cli-linux-amd64-latest && \\\n    chmod +x /usr/local/bin/ecs-cli\n\n# install gcloud\nENV PATH /opt/google-cloud-sdk/bin:$PATH\nRUN mkdir -p /opt/gcloud && \\\n    wget --no-check-certificate --directory-prefix=/tmp/ https://dl.google.com/dl/cloudsdk/release/google-cloud-sdk.zip && \\\n    unzip /tmp/google-cloud-sdk.zip -d /opt/ && \\\n    /opt/google-cloud-sdk/install.sh --usage-reporting=true --path-update=true --bash-completion=true --rc-path=/opt/gcloud/.bashrc --disable-installation-options && \\\n    gcloud --quiet components update alpha beta app-engine-python kubectl bq core gsutil gcloud && \\\n    rm -rf /tmp/*\n\n# install tutum\nRUN pip install --no-cache-dir tutum\n\n# install Docker cli\nENV DOCKER_VERSION=17.09.0-ce\nENV DOCKER_MACHINE_VERSION=v0.13.0\n\nRUN curl -f -L -o /tmp/docker-${DOCKER_VERSION}.tgz https://download.docker.com/linux/static/stable/x86_64/docker-${DOCKER_VERSION}.tgz && tar -xz -C /tmp -f /tmp/docker-${DOCKER_VERSION}.tgz && mv /tmp/docker/docker /usr/local/bin && \\\n    chmod +x /usr/local/bin/docker && \\\n    pip install --no-cache-dir docker-compose docker-cloud && \\\n    curl -f -L https://github.com/docker/machine/releases/download/${DOCKER_MACHINE_VERSION}/docker-machine-`uname -s`-`uname -m` >/usr/local/bin/docker-machine && \\\n    chmod +x /usr/local/bin/docker-machine && \\\n    # Cleanup\n    rm -rf /var/cache/apk/* && rm -rf /tmp/* && rm -rf /var/log/* && rm /tmp/docker-${DOCKER_VERSION}.tgz\n\n# Image Metadata\nLABEL com.blacklabelops.application.jobber-cloud.docker.version=$DOCKER_VERSION \\\n      com.blacklabelops.application.jobber-cloud.docker-machine.version=$DOCKER_MACHINE_VERSION \\\n      com.blacklabelops.image.builddate.jobber-cloud=${BUILD_DATE}\n\nCOPY imagescripts /opt/cloud\nENTRYPOINT [\"/opt/cloud/docker-entrypoint.sh\"]\nCMD [\"jobberd\"]\n"
}