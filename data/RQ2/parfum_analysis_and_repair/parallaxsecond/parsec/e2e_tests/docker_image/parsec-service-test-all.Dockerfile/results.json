{
  "startTime": 1674249358701,
  "endTime": 1674249360033,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 138,
        "lineEnd": 138,
        "columnStart": 4,
        "columnEnd": 114
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 94,
        "lineEnd": 94,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 79,
        "lineEnd": 79,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 67
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 123
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 57
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 70
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 83
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 67
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 123
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 57
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 70
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 83
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 67
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 123
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 57
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 70
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 83
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 91
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 147
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 81
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 94
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 107
      }
    }
  ],
  "repairedDockerfile": "# Copyright 2021 Contributors to the Parsec project.\n# SPDX-License-Identifier: Apache-2.0\nFROM ubuntu:18.04\n\n# The specific version of libraries used in this Dockerfile should not change without having\n# carefully checked that this is not breaking stability.\n# See https://github.com/parallaxsecond/parsec/issues/397\n# and https://parallaxsecond.github.io/parsec-book/parsec_service/stability.html\n\nENV PKG_CONFIG_PATH /usr/local/lib/pkgconfig\n\nRUN apt update\nRUN apt install --no-install-recommends -y autoconf-archive libcmocka0 libcmocka-dev procps && rm -rf /var/lib/apt/lists/*;\nRUN apt install --no-install-recommends -y iproute2 build-essential git pkg-config gcc libtool automake libssl-dev uthash-dev doxygen libjson-c-dev && rm -rf /var/lib/apt/lists/*;\nRUN apt install --no-install-recommends -y --fix-missing wget python3 cmake clang && rm -rf /var/lib/apt/lists/*;\nRUN apt install --no-install-recommends -y libini-config-dev libcurl4-openssl-dev curl libgcc1 && rm -rf /var/lib/apt/lists/*;\nRUN apt install --no-install-recommends -y python3-distutils libclang-6.0-dev protobuf-compiler python3-pip && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /tmp\n\n# Download and install TSS 2.0\nRUN git clone https://github.com/tpm2-software/tpm2-tss.git --branch 2.3.3\nRUN cd tpm2-tss \\\n\t&& ./bootstrap \\\n\t&& ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n\t&& make -j$(nproc) \\\n\t&& make install \\\n\t&& ldconfig\nRUN rm -rf tpm2-tss\n\n# Download and install TPM 2.0 Tools verison 4.1.1\nRUN git clone https://github.com/tpm2-software/tpm2-tools.git --branch 4.1.1\nRUN cd tpm2-tools \\\n\t&& ./bootstrap \\\n\t&& ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr \\\n\t&& make -j$(nproc) \\\n\t&& make install\nRUN rm -rf tpm2-tools\n\n# Download and install software TPM\nARG ibmtpm_name=ibmtpm1637\nRUN wget -L \"https://downloads.sourceforge.net/project/ibmswtpm2/$ibmtpm_name.tar.gz\"\nRUN sha256sum $ibmtpm_name.tar.gz | grep ^dd3a4c3f7724243bc9ebcd5c39bbf87b82c696d1c1241cb8e5883534f6e2e327\nRUN mkdir -p $ibmtpm_name \\\n\t&& tar -xvf $ibmtpm_name.tar.gz -C $ibmtpm_name \\\n\t&& chown -R root:root $ibmtpm_name \\\n\t&& rm $ibmtpm_name.tar.gz\nWORKDIR $ibmtpm_name/src\nRUN sed -i 's/-DTPM_NUVOTON/-DTPM_NUVOTON $(CFLAGS)/' makefile\nRUN CFLAGS=\"-DNV_MEMORY_SIZE=32768 -DMIN_EVICT_OBJECTS=7\" make -j$(nproc) \\\n\t&& cp tpm_server /usr/local/bin\nRUN rm -rf $ibmtpm_name/src $ibmtpm_name\n\n# Download and install SoftHSMv2\nWORKDIR /tmp\nRUN git clone https://github.com/opendnssec/SoftHSMv2.git \\\n\t&& cd SoftHSMv2 \\\n\t&& git reset --hard 35938595f83923504751b40535570342f706a634\n\nRUN cd SoftHSMv2 \\\n\t&& sh autogen.sh \\\n\t# Autogen might fail because of some limitations of autoconf, see:\n\t# https://bugzilla.redhat.com/show_bug.cgi?id=1826935#c3\n\t|| sh autogen.sh\nRUN cd SoftHSMv2 \\\n\t&& ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --disable-gost \\\n\t&& make \\\n\t&& make install\nRUN rm -rf SoftHSMv2\n\n# Install dependencies for Trusted Services\n# Install cmake v 3.18\nRUN wget https://cmake.org/files/v3.18/cmake-3.18.0-Linux-x86_64.sh\nRUN chmod +x cmake-3.18.0-Linux-x86_64.sh\nRUN ./cmake-3.18.0-Linux-x86_64.sh --prefix=/usr/local --exclude-subdir --skip-license\nRUN rm cmake-3.18.0-Linux-x86_64.sh\n\n# Install nanopb\nRUN wget https://jpa.kapsi.fi/nanopb/download/nanopb-0.4.4-linux-x86.tar.gz\nRUN tar -xzvf nanopb-0.4.4-linux-x86.tar.gz && rm nanopb-0.4.4-linux-x86.tar.gz\nRUN cd nanopb-0.4.4-linux-x86 \\\n\t&& cmake . \\\n\t&& make \\\n\t&& make install\nRUN rm -rf nanopb-0.4.4-linux-x86 nanopb-0.4.4-linux-x86.tar.gz\n\n# Install mock Trusted Services\n# Setup git config for patching dependencies\nRUN git config --global user.email \"some@email.com\"\nRUN git config --global user.name \"Parsec Team\"\nRUN git clone https://git.trustedfirmware.org/TS/trusted-services.git --branch integration \\\n\t&& cd trusted-services \\\n\t&& git reset --hard 389b50624f25dae860bbbf8b16f75b32f1589c8d\n# Install correct python dependencies\nRUN pip3 install --no-cache-dir -r trusted-services/requirements.txt\nRUN cd trusted-services/deployments/libts/linux-pc/ \\\n\t&& cmake . \\\n\t&& make \\\n\t&& cp libts.so* nanopb_install/lib/libprotobuf-nanopb.a mbedtls_install/lib/libmbedcrypto.a /usr/local/lib/\nRUN rm -rf trusted-services\n\n# Create a new token in a new slot. The slot number assigned will be random\n# and is found with the find_slot_number script.\nRUN softhsm2-util --init-token --slot 0 --label \"Parsec Tests\" --pin 123456 --so-pin 123456\n\n# Install Rust toolchain for all users\n# This way of installing allows all users to call the same binaries, but non-root\n# users cannot modify the toolchains or install new ones.\n# See: https://github.com/rust-lang/rustup/issues/1085\nENV RUSTUP_HOME /opt/rust\nENV CARGO_HOME /opt/rust\nRUN curl https://sh.rustup.rs -sSf | sh -s -- -y --no-modify-path\nENV PATH=\"/root/.cargo/bin:/opt/rust/bin:${PATH}\"\n\n# Install the wrappers for the Rust binaries installed earlier\nCOPY _exec_wrapper /usr/local/bin/\nRUN ls /opt/rust/bin | xargs -n1 -I% ln -s /usr/local/bin/_exec_wrapper /usr/local/bin/$(basename %)\n\n# Add users for multitenancy tests\nRUN useradd -m parsec-client-1\nRUN useradd -m parsec-client-2\n\n# Add `/usr/local/lib` to library path for Trusted service provider\nENV LD_LIBRARY_PATH=\"/usr/local/lib\"\n\n# During end-to-end tests, Parsec is configured with the socket in /tmp/\n# Individual tests might change that, but set the default after.\nENV PARSEC_SERVICE_ENDPOINT=\"unix:/tmp/parsec.sock\"\n\n# Generate keys for the key mappings test\nCOPY generate-keys.sh /tmp/\nRUN ./generate-keys.sh\n\n# Import an old version of the e2e tests\nCOPY import-old-e2e-tests.sh /tmp/\nRUN ./import-old-e2e-tests.sh\n\n# Download the SPIRE server and agent\nRUN curl -f -s -N -L https://github.com/spiffe/spire/releases/download/v0.11.1/spire-0.11.1-linux-x86_64-glibc.tar.gz | tar xz\nENV SPIFFE_ENDPOINT_SOCKET=\"unix:///tmp/agent.sock\"\n"
}