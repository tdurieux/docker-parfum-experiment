diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/bluxmit/alnoda-workspaces/workspaces/ubuntu-workspace/Dockerfile-18.04-minimal b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/bluxmit/alnoda-workspaces/workspaces/ubuntu-workspace/Dockerfile-18.04-minimal/repaired.Dockerfile
index db9c95c..01907be 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/bluxmit/alnoda-workspaces/workspaces/ubuntu-workspace/Dockerfile-18.04-minimal
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/bluxmit/alnoda-workspaces/workspaces/ubuntu-workspace/Dockerfile-18.04-minimal/repaired.Dockerfile
@@ -7,12 +7,12 @@ COPY zsh-in-docker.sh /tmp/zsh-in-docker.sh
 
 
 # Systemctl within Docker and Python 3.9
-RUN DEBIAN_FRONTEND=noninteractive apt-get update \ 
-    && apt-get install -y wget \
-    && wget https://raw.githubusercontent.com/gdraheim/docker-systemctl-replacement/master/files/docker/systemctl.py -O /usr/local/bin/systemctl  \
-    && chmod 0777 /usr/local/bin/systemctl \ 
-    && apt-get install -y software-properties-common \
-    && apt-get install -y zip gzip tar \
+RUN DEBIAN_FRONTEND=noninteractive apt-get update \
+    && apt-get install --no-install-recommends -y wget \
+    && wget https://raw.githubusercontent.com/gdraheim/docker-systemctl-replacement/master/files/docker/systemctl.py -O /usr/local/bin/systemctl \
+    && chmod 0777 /usr/local/bin/systemctl \
+    && apt-get install --no-install-recommends -y software-properties-common \
+    && apt-get install --no-install-recommends -y zip gzip tar \
     && echo "------------------------------------------------------ User" \
     && useradd -u 8877 abc \
     && chmod -R 777 /home \
@@ -20,29 +20,29 @@ RUN DEBIAN_FRONTEND=noninteractive apt-get update \
     && chown -R abc /home/abc \
     && echo "------------------------------------------------------ Python" \
     && add-apt-repository ppa:deadsnakes/ppa \
-    && apt-get install -y python3.9 \ 
+    && apt-get install --no-install-recommends -y python3.9 \
     && update-alternatives --install /usr/bin/python python /usr/bin/python3.9 10 \
     && update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.9 10 \
-    && apt-get install -y python3-distutils \
-    && apt-get install -y python3.9-distutils \
-    && apt-get install -y python3-pip \
-    && apt-get install python3.9-venv \
-    && pip3 install --upgrade pip \
-    && pip3 install --upgrade setuptools \
-    && pip3 install --upgrade distlib \
+    && apt-get install --no-install-recommends -y python3-distutils \
+    && apt-get install --no-install-recommends -y python3.9-distutils \
+    && apt-get install --no-install-recommends -y python3-pip \
+    && apt-get install -y --no-install-recommends python3.9-venv \
+    && pip3 install --no-cache-dir --upgrade pip \
+    && pip3 install --no-cache-dir --upgrade setuptools \
+    && pip3 install --no-cache-dir --upgrade distlib \
     && update-alternatives --install /usr/bin/pip pip /usr/bin/pip3 1 \
     && echo "------------------------------------------------------ Common Packages" \
-    && apt-get install -y sudo git curl wget telnet jq \
-    && apt-get install -y mc ncdu htop \
-    && apt-get install -y nano vim \
-    && apt-get install -y git git-flow \
+    && apt-get install --no-install-recommends -y sudo git curl wget telnet jq \
+    && apt-get install --no-install-recommends -y mc ncdu htop \
+    && apt-get install --no-install-recommends -y nano vim \
+    && apt-get install --no-install-recommends -y git git-flow \
     && echo "# Allow non-admin users to install packages" >> /etc/sudoers \
     && echo "abc ALL = NOPASSWD : /usr/bin/apt, /usr/bin/apt-get, /usr/bin/aptitude, /usr/local/bin/pip, /usr/local/bin/systemctl, /usr/bin/dpkg, /usr/sbin/dpkg-reconfigure" >> /etc/sudoers \
     && echo "------------------------------------------------------ Nodeenv" \
-    && pip install nodeenv \
-    && apt-get install -y yarn \
+    && pip install --no-cache-dir nodeenv \
+    && apt-get install --no-install-recommends -y yarn \
     && echo "------------------------------------------------------ Cron" \
-    && apt-get install -y cron \
+    && apt-get install --no-install-recommends -y cron \
     && mkdir -p /var/log/supervisord/ \
     && chmod -R 777 /var/spool/cron/crontabs \
     && chmod -R 777 /var/log \
@@ -52,10 +52,10 @@ RUN DEBIAN_FRONTEND=noninteractive apt-get update \
     && echo "abc ALL = NOPASSWD : /usr/sbin/cron " >> /etc/sudoers \
     && echo "------------------------------------------------------ Supervisor" \
     && apt-get remove -y cmdtest \
-    && apt-get install -y supervisor \
-    && pip3 install supervisor==4.2.2 \
+    && apt-get install --no-install-recommends -y supervisor \
+    && pip3 install --no-cache-dir supervisor==4.2.2 \
     && apt-get update \
-    && apt-get install -y systemd \
+    && apt-get install --no-install-recommends -y systemd \
     && chmod -R 777 /etc/supervisord/ \
     && chmod -R 777 /var/log/supervisord/ \
     && echo "------------------------------------------------------ ZSH root" \
@@ -114,15 +114,15 @@ RUN DEBIAN_FRONTEND=noninteractive apt-get update \
     && echo "------------------------------------------------------ User" \
     && chown abc /home/project \
     && chmod 777 /etc/supervisord/ \
-    && mkdir -p /home/abc/.local/bin \ 
+    && mkdir -p /home/abc/.local/bin \
     && chmod 755 /home/abc/.local && chmod 755 /home/abc/.local/bin \
-    && chown abc /home/abc/.local && chown abc /home/abc/.local/bin  \
+    && chown abc /home/abc/.local && chown abc /home/abc/.local/bin \
     && find /home -type d | xargs -I{} chown -R abc {} \
     && find /home -type f | xargs -I{} chown abc {} \
     && echo "------------------------------------------------------ Clean" \
     && apt-get -y autoremove \
     && apt-get -y clean \
-    && apt-get -y autoclean
+    && apt-get -y autoclean && rm -rf /var/lib/apt/lists/*;
 
 
 USER abc
@@ -132,8 +132,8 @@ ENV PATH="/home/abc/.local/bin:${PATH}"
 
 ###### ENTRY
 
-# note! this will have consequences only when started as root (docker run ... --user root ...)  
-# systemctl start systemd-journald 
+# note! this will have consequences only when started as root (docker run ... --user root ...) 
+# systemctl start systemd-journald
 
 # this entrypoint should be the same for all images that are built on top of this one
 ENTRYPOINT /etc/init.d/cron start; systemctl start systemd-journald; supervisord -c "/etc/supervisord/unified-supervisord.conf"