{
  "startTime": 1674218620361,
  "endTime": 1674218622886,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 111,
        "lineEnd": 111,
        "columnStart": 7,
        "columnEnd": 32
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 105,
        "lineEnd": 105,
        "columnStart": 7,
        "columnEnd": 39
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 114,
        "lineEnd": 114,
        "columnStart": 7,
        "columnEnd": 84
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 143,
        "lineEnd": 143,
        "columnStart": 7,
        "columnEnd": 38
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 163,
        "lineEnd": 163,
        "columnStart": 7,
        "columnEnd": 82
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 164,
        "lineEnd": 164,
        "columnStart": 7,
        "columnEnd": 61
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 7,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 7,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 7,
        "columnEnd": 41
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 7,
        "columnEnd": 41
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 110,
        "lineEnd": 110,
        "columnStart": 7,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 113,
        "lineEnd": 113,
        "columnStart": 7,
        "columnEnd": 43
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 120,
        "lineEnd": 120,
        "columnStart": 7,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 121,
        "lineEnd": 121,
        "columnStart": 7,
        "columnEnd": 87
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 7,
        "columnEnd": 35
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 7,
        "columnEnd": 29
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 7,
        "columnEnd": 41
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 42,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 7
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 7,
        "columnEnd": 41
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 110,
        "lineEnd": 110,
        "columnStart": 7,
        "columnEnd": 32
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 113,
        "lineEnd": 113,
        "columnStart": 7,
        "columnEnd": 43
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 120,
        "lineEnd": 120,
        "columnStart": 7,
        "columnEnd": 32
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 121,
        "lineEnd": 121,
        "columnStart": 7,
        "columnEnd": 87
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 24,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 74
      }
    }
  ],
  "repairedDockerfile": "ARG docker_registry=docker.io/alnoda\nARG image_tag=2.2-3.8\n\n## Images used:\nARG BUILD_IMAGE=node:12.18.3\nARG DEPLOY_IMAGE=${docker_registry}/python-workspace:${image_tag}\n\n################################################################################ BUILD THEIA\n\nARG THEIA_VERSION=1.15.0\nFROM ${BUILD_IMAGE} as theia-builder\n\nARG THEIA_VERSION\n\nRUN apt-get update \\\n    && apt-get upgrade -y \\\n    && apt-get install --no-install-recommends -y apt-utils \\\n    && apt-get install --no-install-recommends -y git \\\n    && apt-get install --no-install-recommends -y libsecret-1-dev \\\n    && mkdir /opt/theia && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /opt/theia\nADD ${THEIA_VERSION}.package.json ./package.json\nARG GITHUB_TOKEN\nRUN yarn --pure-lockfile && \\\n    NODE_OPTIONS=\"--max_old_space_size=8192\" yarn theia build && \\\n    yarn theia download:plugins && \\\n    yarn --production && \\\n    yarn autoclean --init && \\\n    echo *.ts >> .yarnclean && \\\n    echo *.ts.map >> .yarnclean && \\\n    echo *.spec.* >> .yarnclean && \\\n    yarn autoclean --force && \\\n    yarn cache clean && yarn cache clean;\n\n################################################################################ BUILD NBVIEWER\n\nFROM python:3.8-buster as nbviewerbuilder\n\nENV DEBIAN_FRONTEND=noninteractive\nENV LANG=C.UTF-8\nRUN apt-get update \\\n && apt-get install -yq --no-install-recommends \\\n    ca-certificates \\\n    libcurl4-gnutls-dev \\\n    git \\\n    nodejs \\\n    npm && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get install --no-install-recommends -y libmemcached-dev zlib1g-dev && rm -rf /var/lib/apt/lists/*;\n\n# Python requirements\nCOPY nbviewer/requirements-dev.txt /srv/nbviewer/\nCOPY nbviewer/requirements.txt /srv/nbviewer/\nRUN python3 -mpip install -r /srv/nbviewer/requirements-dev.txt\nRUN python3 -mpip install -r /srv/nbviewer/requirements.txt\n\nWORKDIR /srv/nbviewer\n\n# Copy source tree in\nCOPY nbviewer /srv/nbviewer\nRUN python3 setup.py build && \\\n    python3 -mpip wheel -vv . -w /wheels\n\n################################################################################ IMAGE\n\nFROM ${DEPLOY_IMAGE}\n\nUSER root\n\nRUN apt-get update \\\n    && rm -rf /opt/theia \\\n    && mkdir -p -m 777 /opt/theia \\\n    && cd /opt/theia && nodeenv --node=12.18.3 env && . env/bin/activate \\\n    && mkdir -p -m 777 /home/project \\\n    && apt-get install --no-install-recommends -y libsecret-1-dev && rm -rf /var/lib/apt/lists/*;\n\nCOPY --from=theia-builder /opt/theia /opt/theia\n\nCOPY --from=nbviewerbuilder /wheels /wheels\n# To change the number of threads use env var NBVIEWER_THREADS\nENV LANG=C.UTF-8 NBVIEWER_THREADS=2\n\nCOPY supervisord-notebooks.conf /etc/supervisord/\n\nCOPY notebooks-requirements.txt /home/abc/installed-python-packages\nCOPY jupyter-requirements.txt /home/abc/installed-python-packages\nCOPY luigi/ /home/abc/luigi/\nCOPY examples/ /home/examples/\nCOPY tutorials/ /home/project/tutorials/\n\nCOPY ./mkdocs/mkdocs.yml /home/docs/mkdocs.yml\nCOPY ./mkdocs/img/* /home/docs/docs/assets/home/\nCOPY ./mkdocs/helpers.py /home/docs/macros\nCOPY ./mkdocs/README.md /home/docs/docs/README.md\nCOPY ./mkdocs/results.md /home/docs/docs/pages/results.md\nCOPY ./mkdocs/results /home/docs/docs/pages/results\nCOPY settings.json /home/abc/.theia/settings.json\n\nRUN echo \"------------------------------------------------------ Nbviewer\" \\\n    && apt-get -y update \\\n    && apt-get install -yq --no-install-recommends ca-certificates libcurl4 \\\n    && apt-get clean && rm -rf /var/lib/apt/lists/* \\\n    && mkdir /opt/nbviewer \\\n    && cd /opt/nbviewer && python3 -m venv venv && . venv/bin/activate \\\n    && pip install --no-cache-dir --no-cache /wheels/* && deactivate \\\n    && rm -rf /wheels \\\n    && mkdir -p /home/project/nbviewer \\\n    && echo \"------------------------------------------------------ system nodejs-18\" \\\n    && curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash - \\\n    && apt-get install --no-install-recommends -y nodejs \\\n    && npm install --global yarn \\\n    && echo \"------------------------------------------------------ Packages, prep\" \\\n    && apt-get install --no-install-recommends -y python-is-python3 \\\n    && pip install --no-cache-dir -r /home/abc/installed-python-packages/notebooks-requirements.txt \\\n    && mkdir /var/log/jupyter \\\n    && echo \"------------------------------------------------------ Luigi\" \\\n    && mkdir -p /etc/service/luigid/ \\\n    && mkdir /var/log/luigi \\\n    && echo \"------------------------------------------------------ Pandoc (notebooks to PDF)\" \\\n    && apt-get install --no-install-recommends -y pandoc \\\n    && apt-get install --no-install-recommends -y texlive-xetex texlive-fonts-recommended texlive-plain-generic \\\n    && echo \"------------------------------------------------------ user\" \\\n    && mkdir -p /usr/local/share/jupyter && chown -R abc /usr/local/share/jupyter \\\n    && chown -R abc /opt/theia \\\n    && chown -R abc /opt/nbviewer \\\n    && chown -R abc /home/project/nbviewer \\\n    && chown -R abc /etc/service/luigid/ \\\n    && chown -R abc /var/log/jupyter \\\n    && chown -R abc /var/log/luigi \\\n    && mkdir /usr/etc && chmod -R 777 /usr/etc \\\n    && find /home -type d | xargs -I{} chown -R abc {} \\\n    && find /home -type f | xargs -I{} chown abc {} && npm cache clean --force; && rm -rf /var/lib/apt/lists/*;\n\nUSER abc\n\nRUN echo \"------------------------------------------------------ Pipx\" \\\n    && python3 -m pip install --user pipx \\\n    && echo \"------------------------------------------------------ Voila\" \\\n    && mkdir /home/project/voila \\\n    && echo \"------------------------------------------------------ Notebooks in terminal\" \\\n    && pipx install nbterm \\\n    && pipx install nbclient \\\n    && pip install --no-cache-dir \"nbconvert[webpdf]\" \\\n    && echo \"------------------------------------------------------ Jupyter-lux\" \\\n    && jupyter nbextension install --py luxwidget \\\n    && jupyter nbextension enable --py luxwidget \\\n    && jupyter labextension install @jupyter-widgets/jupyterlab-manager \\\n    && jupyter labextension install luxwidget \\\n    && echo \"------------------------------------------------------ Jupyter-qgrid (Jupyter only)\" \\\n    && jupyter nbextension enable --py --sys-prefix widgetsnbextension \\\n    && jupyter nbextension enable --py --sys-prefix qgrid \\\n    && echo \"------------------------------------------------------ lite/dark toggler\" \\\n    && jupyter labextension install jupyterlab-topbar-extension jupyterlab-theme-toggle \\\n    && echo \"------------------------------------------------------ Jupytext\" \\\n    && jupyter serverextension enable jupytext \\\n    && jupyter nbextension install --py jupytext \\\n    && jupyter nbextension enable --py jupytext \\\n    && jupyter labextension install jupyterlab-jupytext \\\n    && jupyter labextension enable jupyterlab-jupytext\n\nCOPY mercury/mercury-requirements.txt /home/abc/installed-python-packages\nRUN echo \"------------------------------------------------------ Mercury\" \\\n    && pip install --no-cache-dir -r /home/abc/installed-python-packages/mercury-requirements.txt \\\n    && pip install --no-cache-dir mljar-mercury --ignore-installed --no-deps\n\nENV PATH=\"/home/abc/miniconda3/bin:$PATH\" \\\n    LUIGI_CONFIG_PATH=\"/home/abc/luigi/luigi.conf\"\n\n\n\n"
}