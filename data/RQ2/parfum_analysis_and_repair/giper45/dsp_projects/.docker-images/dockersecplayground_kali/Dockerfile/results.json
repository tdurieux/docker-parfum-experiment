{
  "startTime": 1674248096974,
  "endTime": 1674248098155,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 22,
        "columnEnd": 68
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 22,
        "columnEnd": 68
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Docker container with metasploit.\nFROM daindragon2/kali:latest\n\nCOPY adduser.sh /adduser.sh\nCOPY setgw.sh /setgw.sh\nCOPY addctf.sh /addctf.sh\nCOPY exec.sh /exec.sh\nCOPY addroute.sh  /addroute.sh\n\nRUN apt-key adv --keyserver hkp://keys.gnupg.net --recv-keys 7D8D0BF6\nRUN apt-get update && apt-get install --no-install-recommends -y netcat iproute nikto knockd && rm -rf /var/lib/apt/lists/*;\n\n\n\nLABEL \\\n  type=\"entry_point\" \\\n    caps_add=\"ALL\" \\\n    privileged=true \\\n    actions.exec.command=\"/exec.sh \" \\ \n    actions.exec.description=\"Execute a command in the container\" \\ \n    actions.exec.args.command.val=\"mkdir hello\" \\\n    actions.exec.args.command.type=\"text\" \\\n    actions.adduser.command=\"/adduser.sh\" \\ \n    actions.adduser.description=\"Add a new username : <name> <password> \" \\ \n    actions.adduser.args.name.val=\"user\" \\\n    actions.adduser.args.name.type=\"text\" \\\n    actions.adduser.args.name.rule.pattern=\"^[a-zA-Z0-9_-]+$\" \\\n    actions.adduser.args.password.val=\"password\" \\\n    actions.adduser.args.password.type=\"text\" \\\n    actions.adduser.args.password.rule.pattern=\"^[a-zA-Z0-9_-]+$\" \\\n    actions.addctf.command=\"/addctf.sh\" \\ \n    actions.addctf.description=\"Add a ctf in /home/<username> directory inside a secret file\" \\ \n    actions.addctf.args.username.val=\"\" \\\n    actions.addctf.args.username.type=\"text\" \\\n    actions.addctf.args.username.rule.pattern=\"^[a-zA-Z0-9_-]+$\" \\\n    actions.addctf.args.ctf.val=\"\" \\\n    actions.addctf.args.ctf.type=\"text\" \\\n    actions.setgw.command=\"/setgw.sh\" \\ \n    actions.setgw.description=\"Set default gateway  <name container gateway> \" \\ \n    actions.setgw.args.gateway.val=\"\" \\\n    actions.setgw.args.gateway.type=\"text\" \\\n    actions.setgw.args.gateway.rule.pattern=\"^[a-zA-Z0-9_-]+$\" \\\n\n    actions.addroute.command=\"/addroute.sh\" \\ \n    actions.addroute.description=\"Add a new route for the subnet : set router ip and subnet \" \\ \n    actions.addroute.args.subnet.val=\"192.168.1.0/24\" \\\n    actions.addroute.args.subnet.rule.name=\"subnet\" \\\n    actions.addroute.args.subnet.type=\"text\" \\\n    actions.addroute.args.router_ip.val=\"\" \\\n    actions.addroute.args.router_ip.rule.name=\"ip\" \\\n    actions.addroute.args.router_ip.type=\"text\"\n\nCMD bash\n"
}