{
  "startTime": 1674216607112,
  "endTime": 1674216607928,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 22,
        "columnEnd": 89
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 22,
        "columnEnd": 89
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM linode/lamp\n\nRUN apt-get update && apt-get install --no-install-recommends -y php5-mysql php5-gd python vsftpd xinetd ftp wget && rm -rf /var/lib/apt/lists/*;\nRUN rm -rf /var/www/example/example.com && rm /etc/apache2/sites-available/* && rm /etc/apache2/sites-enabled/*\n\nCOPY setgw.sh /setgw.sh\nCOPY mysql_start.sh /mysql_start.sh\nCOPY apache_start.sh /apache_start.sh\nCOPY apache_start_debug.sh /apache_start_debug.sh\nCOPY create_db.sh /create_db.sh\nCOPY exec.sh /exec.sh\nCOPY sed.sh /sed.sh\nCOPY sql_to_db.sh /sql_to_db.sh\nCOPY allow_url_include.sh /allow_url_include.sh\nCOPY set_listening_port.sh /set_listening_port.sh\nCOPY set_logs_readable.sh /set_logs_readable.sh\nCOPY mysql_remote_access.sh /mysql_remote_access.sh\nCOPY mysql_set_root_user.sh /mysql_set_root_user.sh\nCOPY ftp_start.sh /ftp_start.sh\nCOPY ftp_stop.sh /ftp_stop.sh\nCOPY adduser.sh /adduser.sh\nCOPY addctf.sh /addctf.sh\nCOPY addrootctf.sh /addrootctf.sh\n\nCOPY vsftpd /etc/xinetd.d/vsftpd\nCOPY vsftpd.conf /etc/vsftpd.conf\n# COPY pure-ftpd_1.0.36-1.1ubuntu0.1_amd64.deb /pure-ftpd_1.0.36-1.1ubuntu0.1_amd64.deb\n\n# RUN dpkg -i /pure-ftpd_1.0.36-1.1ubuntu0.1_amd64.deb\n\nLABEL \\\n      type=\"server\" \\ caps_add=\"NET_ADMIN\" \\ \n      actions.sed.command=\"/sed.sh \" \\ \n      actions.sed.description=\"Replace a string with another inside a file\" \\ actions.sed.args.filename.val=\"\" \\\n      actions.sed.args.filename.type=\"text\" \\\n      actions.sed.args.string_one.val=\"\" \\\n      actions.sed.args.string_one.type=\"text\" \\\n      actions.sed.args.string_two.val=\"\" \\\n      actions.sed.args.string_two.type=\"text\" \\\n\n      actions.adduser.command=\"/adduser.sh\" \\ \n      actions.adduser.description=\"Add a new username : <name> <password> \" \\ \n      actions.adduser.args.name.val=\"user\" \\\n      actions.adduser.args.name.type=\"text\" \\\n      actions.adduser.args.name.rule.pattern=\"^[a-zA-Z0-9_-]+$\" \\\n      actions.adduser.args.password.val=\"password\" \\\n      actions.adduser.args.password.type=\"text\" \\\n      actions.adduser.args.password.rule.pattern=\"^[a-zA-Z0-9_-]+$\" \\\n\n      actions.exec.command=\"/exec.sh \" \\ \n      actions.exec.description=\"Execute a command in the container\" \\ \n      actions.exec.args.command.val=\"mkdir hello\" \\\n      actions.exec.args.command.type=\"text\" \\\n\n      actions.start_apache.command=\"/apache_start.sh\" \\ \n      actions.start_apache.description=\"Start web server\" \\ \n\n      actions.start_apache_debug.command=\"/apache_start_debug.sh\" \\ \n      actions.start_apache_debug.description=\"Start web server in debug mode (all errors reported)\" \\ \n\n      actions.start_mysql.command=\"/mysql_start.sh\" \\ \n      actions.start_mysql.description=\"Start sql server\" \\ \n\n\n      actions.create_db.command=\"/create_db.sh\" \\ \n      actions.create_db.description=\"Create a new db, insert a name for new db\" \\ \n      actions.create_db.args.db_name.rule.pattern=\"^[a-zA-Z0-9_-]+$\" \\ \n      actions.create_db.args.db_name.val=\"\" \\ \n      actions.create_db.args.db_name.type=\"text\" \\ \n\n      actions.sql_to_db.command=\"/sql_to_db.sh\" \\ \n      actions.sql_to_db.description=\"Execute a sql file into a db (you must load a sql file in container first! ) \" \\ \n      actions.sql_to_db.args.db_name.val=\"\" \\ \n      actions.sql_to_db.args.db_name.type=\"text\" \\ \n      actions.sql_to_db.args.sql_file.val=\"\" \\ \n      actions.sql_to_db.args.sql_file.type=\"text\" \\ \n\n      actions.setgw.command=\"/setgw.sh\" \\ \n      actions.setgw.description=\"Set default gateway  <name container gateway> \" \\ \n      actions.setgw.args.gateway.val=\"\" \\\n      actions.setgw.args.gateway.type=\"text\" \\\n      actions.setgw.args.gateway.rule.pattern=\"^[a-zA-Z0-9_-]+$\" \\\n\n      actions.allow_url_include.command=\"/allow_url_include.sh\" \\ \n      actions.allow_url_include.description=\"Set allow url include to On\" \\ \n\n      actions.set_logs_readable.command=\"/set_logs_readable.sh\" \\ \n      actions.set_logs_readable.description=\"Set Readable Logs\" \\ \n\n      actions.mysql_remote_access.command=\"/mysql_remote_access.sh\" \\ \n      actions.mysql_remote_access.description=\"Enable mysql remote access\" \\ \n\n      actions.mysql_set_root_user.command=\"/mysql_set_root_user.sh\" \\ \n      actions.mysql_set_root_user.description=\"Set root user \" \\ \n\n      actions.set_listening_port.command=\"/set_listening_port.sh \" \\ \n      actions.set_listening_port.description=\"Set Listening Port\" \\ \n      actions.set_listening_port.args.listening_port.val=\"80\" \\\n      actions.set_listening_port.args.listening_port.type=\"text\" \\\n\n      actions.ftp_start.command=\"/ftp_start.sh\" \\ \n      actions.ftp_start.description=\"Start ftp service\" \\ \n\n      actions.ftp_stop.command=\"/ftp_stop.sh\" \\ \n      actions.ftp_stop.description=\"Stop ftp service\" \\ \n\n      actions.addctf.command=\"/addctf.sh\" \\ \n      actions.addctf.description=\"Add a ctf in /home/<username> directory inside a secret file\" \\ \n      actions.addctf.args.username.val=\"\" \\\n      actions.addctf.args.username.type=\"text\" \\\n      actions.addctf.args.username.rule.pattern=\"^[a-zA-Z0-9_-]+$\" \\\n      actions.addctf.args.ctf.val=\"\" \\\n      actions.addctf.args.ctf.type=\"text\" \\\n\n      actions.addrootctf.command=\"/addrootctf.sh\" \\ \n      actions.addrootctf.description=\"Add a ctf in /root directory inside a secret file\" \\ \n      actions.addrootctf.args.ctf.val=\"\" \\\n      actions.addrootctf.args.ctf.type=\"text\" \\\n"
}