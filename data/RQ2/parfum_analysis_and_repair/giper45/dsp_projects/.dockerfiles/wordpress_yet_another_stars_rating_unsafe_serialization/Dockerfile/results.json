{
  "startTime": 1674248050989,
  "endTime": 1674248052622,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 35
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Base image\nFROM php:5.6-apache\n\n# Install the mysqli extension\nRUN docker-php-ext-install mysqli\n\n# Update repo\nRUN apt-get update -y && apt-get install --no-install-recommends mysql-client -y && rm -rf /var/lib/apt/lists/*; # Install mysql-client\n\n\n# Install wp-cli as wp\nRUN curl -f -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar && \\\n  chmod +x wp-cli.phar && \\\n  mv wp-cli.phar /usr/local/bin/wp\n\n# Download and extract WordPress files on /var/www/html\nRUN wp core download --allow-root\n\n# Get args from docker-composer.yml\nARG WORDPRESS_DB_NAME\nARG WORDPRESS_DB_USER\nARG WORDPRESS_DB_PASSWORD\nARG WORDPRESS_DB_HOST\n\n# Creating wp-config.php file on /var/www/html\nRUN wp config create --dbname=${WORDPRESS_DB_NAME} --dbuser=${WORDPRESS_DB_USER} --dbpass=${WORDPRESS_DB_PASSWORD} --dbhost=${WORDPRESS_DB_HOST} --allow-root --skip-check\n\nCOPY entrypoint.sh /entrypoint.sh\n\n# makes the script executable\nRUN chmod +x /entrypoint.sh\n\nENTRYPOINT [\"/entrypoint.sh\"]\n\nCMD [\"apache2-foreground\"]"
}