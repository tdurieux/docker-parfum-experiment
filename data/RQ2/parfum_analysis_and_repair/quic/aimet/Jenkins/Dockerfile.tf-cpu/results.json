{
  "startTime": 1674251201910,
  "endTime": 1674251203477,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 232,
        "lineEnd": 232,
        "columnStart": 4,
        "columnEnd": 55
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 190,
        "lineEnd": 190,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 85,
        "lineEnd": 85,
        "columnStart": 22,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 199,
        "lineEnd": 199,
        "columnStart": 22,
        "columnEnd": 55
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 202,
        "lineEnd": 202,
        "columnStart": 22,
        "columnEnd": 66
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 204,
        "lineEnd": 204,
        "columnStart": 22,
        "columnEnd": 53
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 231,
        "lineEnd": 231,
        "columnStart": 22,
        "columnEnd": 47
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 233,
        "lineEnd": 233,
        "columnStart": 57,
        "columnEnd": 111
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 231,
        "lineEnd": 231,
        "columnStart": 22,
        "columnEnd": 47
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# =============================================================================\n#  @@-COPYRIGHT-START-@@\n# \n#  Copyright (c) 2021, Qualcomm Innovation Center, Inc. All rights reserved.\n# \n#  Redistribution and use in source and binary forms, with or without\n#  modification, are permitted provided that the following conditions are met:\n# \n#  1. Redistributions of source code must retain the above copyright notice,\n#     this list of conditions and the following disclaimer.\n# \n#  2. Redistributions in binary form must reproduce the above copyright notice,\n#     this list of conditions and the following disclaimer in the documentation\n#     and/or other materials provided with the distribution.\n# \n#  3. Neither the name of the copyright holder nor the names of its contributors\n#     may be used to endorse or promote products derived from this software\n#     without specific prior written permission.\n# \n#  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n#  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n#  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n#  ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n#  LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n#  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n#  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n#  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n#  CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n#  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n#  POSSIBILITY OF SUCH DAMAGE.\n# \n#  SPDX-License-Identifier: BSD-3-Clause\n# \n#  @@-COPYRIGHT-END-@@\n# =============================================================================\n\n# Docker image file to build and test AIMET for Tensorflow in a CPU environment\n\nFROM ubuntu:bionic\n\nRUN apt-get update > /dev/null && \\\n    apt-get install --no-install-recommends -y \\\n        # Bare minimum Packages\n        ca-certificates \\\n        git \\\n        ssh \\\n        sudo \\\n        wget \\\n        xterm \\\n        xauth > /dev/null && \\\n        rm -rf /var/lib/apt/lists/*\n\n# Install certificates\nRUN sudo update-ca-certificates\n\n# Modified version of bash.bashrc that adjusts the prompt\n### COPY bash.bashrc /etc/\n### RUN chmod 644 /etc/bash.bashrc\n\n### COPY profile.global /usr/local/etc/\n### RUN chmod 555 /usr/local/etc/profile.global\n\n# Add sudo support\nRUN echo \"%users ALL = (ALL) NOPASSWD: ALL\" >> /etc/sudoers\n\nRUN apt-get update -y > /dev/null && \\\n    apt-get install --no-install-recommends -y \\\n\n        # Python\n        python3.8 \\\n        python3.8-dev \\\n        python3-pip \\\n        python3-setuptools \\\n        build-essential \\\n\n        # lmdb dependency\n        libffi-dev && \\\n        rm -rf /var/lib/apt/lists/*\n\n# Register the version in alternatives\nRUN update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.8 1\n# Set python 3.8 as the default python\nRUN update-alternatives --set python3 /usr/bin/python3.8\n\n# Python 2 pip installation\nRUN apt-get update && apt-get install --no-install-recommends -y python-pip && rm -rf /var/lib/apt/lists/* && \\\n    python2.7 -m pip --no-cache-dir install --upgrade \\\n        pip==20.3.4 \\\n        restkit\n\n# Upgrade Python3 pip and install some more packages\nRUN python3 -m pip --no-cache-dir install --upgrade \\\n        pip \\\n        numpy==1.19.5 \\\n        setuptools==41.0.1 \\\n        wheel==0.33.4\n\nENV DEBIAN_FRONTEND=noninteractive\n\n# Ubuntu packages for tensorflow aimet\nRUN dpkg --add-architecture i386\nRUN apt-get update > /dev/null && \\\n    apt-get install --no-install-recommends -y \\\n        build-essential \\\n        emacs \\\n        environment-modules \\\n        less \\\n        libavcodec-dev \\\n        libavformat-dev \\\n        libgtest-dev \\\n        libgtk2.0-dev \\\n        libsox-dev \\\n        libsox-fmt-all \\\n        libstdc++6:i386 \\\n        libswscale-dev \\\n        libxtst6 \\\n        lsb-release \\\n        meld \\\n        nano \\\n        pkg-config \\\n        python3-tk \\\n        sox \\\n        tree \\\n        vim && \\\n        rm -rf /var/lib/apt/lists/*\n\n# Python3 Packages\nRUN python3 -m pip --no-cache-dir install \\\n        astroid==2.5.3 \\\n        attrs==19.1.0 \\\n        behave==1.2.6 \\\n        bert-tensorflow \\\n        blosc==1.8.1 \\\n        cffi==1.12.3 \\\n        click \\\n        cython==0.29.12 \\\n        dataclasses \\\n        Deprecated \\\n        docutils==0.16 \\\n        h5py==2.10.0 \\\n        ipykernel \\\n        Jinja2==3.0.3 \\\n        jupyter \\\n        keras==2.2.4 \\\n        lmdb==0.95 \\\n        opencv-python \\\n        Pillow==8.4.0 \\\n        pluggy==0.12.0 \\\n        progressbar2 \\\n        protobuf==3.20.1 \\\n        psutil \\\n        ptflops \\\n        pybind11 \\\n        pyDOE2 \\\n        pylint==2.3.1 \\\n        pymoo==0.4.1 \\\n        pytest==4.6.5 \\\n        pytest-cov==2.6.1 \\\n        scikit-learn \\\n        'scipy>=1.2.1' \\\n        sphinx==2.1.1 \\\n        sphinx-jinja==1.1.1 \\\n        sphinx-autodoc-typehints==1.6.0 \\\n        tensorboard==2.4.0 \\\n        tensorboardX==1.7 \\\n        tensorflow-cpu==2.4.3 \\\n        tensorflow-hub \\\n        tensorflow-model-optimization \\\n        tensorlayer==2.2.1 \\\n        timm==0.3.1 \\\n        tqdm \\\n        transformers==4.10.3 \\\n        wget && \\\n    python3 -m ipykernel.kernelspec\n\nRUN cd /tmp && \\\n    wget https://github.com/Kitware/CMake/releases/download/v3.19.3/cmake-3.19.3-Linux-x86_64.sh && \\\n    mkdir /opt/cmake && \\\n    sh cmake-3.19.3-Linux-x86_64.sh --prefix=/opt/cmake --skip-license\n\nRUN ln -s /opt/cmake/bin/cmake /usr/local/bin/cmake\nRUN ln -s /opt/cmake/bin/ctest /usr/local/bin/ctest\nRUN ln -s /opt/cmake/bin/cpack /usr/local/bin/cpack\n\nENV PATH=/usr/local/bin:$PATH\n\n# Opencv\n# Ref: https://docs.opencv.org/3.2.0/d7/d9f/tutorial_linux_install.html\nCOPY opencv_320_python38.patch /tmp\nRUN wget -q https://github.com/Itseez/opencv/archive/3.2.0.tar.gz -O /tmp/3.2.0.tar.gz > /dev/null && \\\n    tar -C /tmp -xvf /tmp/3.2.0.tar.gz > /dev/null && \\\n    patch /tmp/opencv-3.2.0/modules/python/src2/cv2.cpp /tmp/opencv_320_python38.patch && \\\n    cd /tmp/opencv-3.2.0 && mkdir release && cd release && \\\n    cmake -DCMAKE_POSITION_INDEPENDENT_CODE=ON -DBUILD_SHARED_LIBS=OFF -DCMAKE_BUILD_TYPE=release -DWITH_FFMPEG=OFF -DBUILD_TESTS=OFF -DWITH_CUDA=OFF -DBUILD_PERF_TESTS=OFF -DWITH_IPP=OFF -DENABLE_PRECOMPILED_HEADERS=OFF .. > /dev/null && \\\n    make -j16 > /dev/null && \\\n    make -j16 install > /dev/null && \\\n    rm -rf /tmp/opencv-3.2.0* && rm /tmp/3.2.0.tar.gz\n\nEXPOSE 25000\nRUN apt-get update && apt-get install --no-install-recommends -y openssh-server && rm -rf /var/lib/apt/lists/*\nRUN mkdir /var/run/sshd\n\nRUN apt-get update && apt-get install --no-install-recommends -y liblapacke liblapacke-dev && rm -rf /var/lib/apt/lists/*\n\nRUN apt-get update && apt-get install --no-install-recommends -y libjpeg8-dev && \\\n    rm -rf /var/lib/apt/lists/*\n\n# Set up symlink to point to the correct python version\nRUN ln -sf /usr/bin/python3.8 /usr/bin/python\nRUN ln -s /usr/lib/x86_64-linux-gnu/libjpeg.so /usr/lib\n\nRUN sed -i 's/PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config && \\\n    sed -i 's/Port 22/Port 25000/' /etc/ssh/sshd_config\n\n# SSH login fix. Otherwise user is kicked off after login\nRUN sed 's@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd\n\n# Clone the tensorflow repo to enable development\nRUN cd / && git clone --depth 1 --single-branch --branch v2.4.3 https://github.com/tensorflow/tensorflow.git\n\nRUN python3 -m pip install git-pylint-commit-hook osqp onnx==1.8.1\n\n# NOTE: We need to pin the holoviews version to this since the latest version has a circular dependency on bokeh 2.0.0 through the panel package\nRUN python3 -m pip install holoviews==1.12.7 netron jsonschema pandas\n\nRUN python3 -m pip install bokeh==1.2.0 hvplot==0.4.0\n\n# Remove existing Pillow & Pillow-SIMD and replace with correct version of Pillow-SIMD.\nRUN python3 -m pip uninstall -y Pillow Pillow-SIMD\nRUN python3 -m pip --no-cache-dir install Pillow-SIMD==7.0.0.post3\n\nRUN apt-get update && apt-get install --no-install-recommends -y gnupg2 && rm -rf /var/lib/apt/lists/*;\nRUN wget -O - https://llvm.org/apt/llvm-snapshot.gpg.key | sudo apt-key add - && echo \"deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-11 main\" >> /etc/apt/sources.list\nRUN apt-get update --fix-missing -y && apt upgrade -y && apt-get install --no-install-recommends -y clang-11 clang-format clang-tidy-11 && \\\n   rm -rf /var/lib/apt/lists/*\n\n# Create a version-less symbolic link for clang-tidy\nRUN ln -s /usr/bin/run-clang-tidy-11.py /usr/bin/run-clang-tidy.py\n"
}