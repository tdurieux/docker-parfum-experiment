{
  "startTime": 1674256116740,
  "endTime": 1674256117677,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 23
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# This Dockerfile builds an Ergo server that also serves the web app.\nARG RUST_VERSION=1.54.0\nARG NODE_VERSION=14.17.6\n\nFROM rust:$RUST_VERSION as planner\nWORKDIR app\nRUN cargo install cargo-chef\nCOPY . .\nRUN cargo chef prepare  --recipe-path recipe.json\n\nFROM rust:$RUST_VERSION as cacher\nWORKDIR app\nRUN cargo install cargo-chef\nCOPY --from=planner /app/recipe.json recipe.json\nRUN cargo chef cook --release --recipe-path recipe.json\n\nFROM rust:$RUST_VERSION as server-builder\nWORKDIR app\nCOPY . .\n# Copy over the cached dependencies\nCOPY --from=cacher /app/target target\nCOPY --from=cacher $CARGO_HOME $CARGO_HOME\nRUN cargo build --release --bin app\n\nFROM node:$NODE_VERSION AS web-base\nWORKDIR app\nRUN npm -g i pnpm@~6.10 && npm cache clean --force;\nCOPY web .\nRUN pnpm install\n\nFROM node:$NODE_VERSION AS web-builder\nWORKDIR app\nRUN pnpm build:svelte\n\nFROM debian:buster-slim as runtime\nWORKDIR app\nCOPY --from=server-builder /app/target/release/app /usr/local/bin\nCOPY --from=web-builder /app/build /app/web\nENV SERVE=/app/web\nENTRYPOINT [\"/usr/local/bin/app\"]\nCMD [\"server\"]\n"
}