{
  "startTime": 1674219212823,
  "endTime": 1674219213479,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 5,
        "columnEnd": 79
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM --platform=$BUILDPLATFORM tonistiigi/xx:1.1.0 AS xx\n\nFROM --platform=$BUILDPLATFORM golang:1.18.1-alpine3.15 AS base\nENV GO111MODULE=auto\nENV CGO_ENABLED=0\n\nCOPY --from=xx / /\nRUN apk add --update --no-cache build-base coreutils git\nWORKDIR /src\n\nFROM base AS build\nARG TARGETPLATFORM\n\nRUN --mount=type=bind,target=/src,rw \\\n    --mount=type=cache,target=/root/.cache/go-build \\\n    --mount=target=/go/pkg/mod,type=cache \\\n    GO_BINARY=xx-go WAIT4X_BUILD_OUTPUT=/usr/bin make build \\\n    && xx-verify --static /usr/bin/wait4x\n\nFROM scratch AS binary\nCOPY --from=build /usr/bin/wait4x /\n\nFROM base AS releaser\nARG TARGETOS\nARG TARGETARCH\nARG TARGETVARIANT\n\nWORKDIR /work\nRUN --mount=from=binary,target=/build \\\n  --mount=type=bind,target=/src \\\n  mkdir -p /out \\\n  && cp /build/wait4x /src/README.md /src/LICENSE . \\\n  && tar -czvf \"/out/wait4x-${TARGETOS}-${TARGETARCH}${TARGETVARIANT}.tar.gz\" * \\\n  # Change dir to \"/out\" to prevent adding \"/out\" in the sha256sum command output.\n  && cd /out \\\n  && sha256sum -z \"wait4x-${TARGETOS}-${TARGETARCH}${TARGETVARIANT}.tar.gz\" > \"wait4x-${TARGETOS}-${TARGETARCH}${TARGETVARIANT}.tar.gz.sha256sum\" && rm \"/out/wait4x-${TARGETOS}-${TARGETARCH}${TARGETVARIANT}.tar.gz\"\n\nFROM scratch AS artifact\nCOPY --from=releaser /out /\n\nFROM alpine:3.15\nRUN apk add --no-cache ca-certificates\n\nCOPY --from=binary /wait4x /usr/bin/wait4x\n\nENTRYPOINT [\"wait4x\"]\nCMD [\"help\"]\n"
}