{
  "startTime": 1674218283726,
  "endTime": 1674218285034,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 17
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG RUST_BUILDER_IMAGE=clux/muslrust:1.59.0\n\nFROM $RUST_BUILDER_IMAGE as chef\nUSER root\nRUN cargo install cargo-chef\nWORKDIR /app\n\n# Cargo chef plan\nFROM chef as planner\nENV RUSTFLAGS=\"--cfg tokio_unstable\"\n\n# Copy dirs\nCOPY . .\n\nRUN cargo chef prepare --recipe-path recipe.json\n\nFROM chef as builder\nARG CARGO_BUILD_TARGET=x86_64-unknown-linux-musl\nARG RUSTRELEASEDIR=\"debug\"\nENV RUSTFLAGS=\"--cfg tokio_unstable\"\n\nCOPY --from=planner /app/recipe.json ./recipe.json\nRUN cargo chef cook --recipe-path recipe.json --target ${CARGO_BUILD_TARGET}\n\n# Copy the rest of the dirs\nCOPY . .\n\n# Build the project\nRUN echo \"pub const VERSION: &str = \\\"$(git describe --tag)\\\";\" > \"crates/utils/src/version.rs\"\nRUN cargo build --target ${CARGO_BUILD_TARGET}\n\n# reduce binary size\nRUN strip ./target/$CARGO_BUILD_TARGET/$RUSTRELEASEDIR/lemmy_server\n\nRUN cp ./target/$CARGO_BUILD_TARGET/$RUSTRELEASEDIR/lemmy_server /app/lemmy_server\n\n# The alpine runner\nFROM alpine:3 as lemmy\n\n# Install libpq for postgres\nRUN apk add --no-cache libpq\n\n# Copy resources\nCOPY --from=builder /app/lemmy_server /app/lemmy\n\nEXPOSE 8536\nCMD [\"/app/lemmy\"]\n"
}