{
  "startTime": 1674215553878,
  "endTime": 1674215555204,
  "originalSmells": [
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 32,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 144
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Pleroma Docker setup taken from\n# https://github.com/jordemort/docker-pleroma\n\nFROM ubuntu:20.04 AS unzip\n\nENV DEBIAN_FRONTEND=noninteractive\n\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends unzip && rm -rf /var/lib/apt/lists/*;\n\n# docker buildx will fill these in\nARG TARGETARCH=amd64\nARG TARGETVARIANT=\n\n# Clone the release build into a temporary directory and unpack it\n# We use ADD here to bust the cache if the pleroma release changes\n# We use a separate layer for extraction so we don't end up with junk\n# from ADD left over in the final image.\nADD https://git.pleroma.social/api/v4/projects/2/jobs/artifacts/stable/download?job=${TARGETARCH}${TARGETVARIANT:+${TARGETVARIANT}l} /tmp/pleroma.zip\n\nRUN mkdir -p /opt/pleroma && \\\n    unzip /tmp/pleroma.zip -d /tmp/ && \\\n    mv /tmp/release/* /opt/pleroma\n\n# Ok, really build the container now\nFROM ubuntu:20.04 AS pleroma\n\nENV DEBIAN_FRONTEND=noninteractive\n\nARG SOAPBOXVERSION=1.2.3\n\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n      ca-certificates curl dumb-init ffmpeg gnupg imagemagick libimage-exiftool-perl libmagic-dev libncurses5 locales postgresql-client-12 unzip && \\\n    apt-get clean && rm -rf /var/lib/apt/lists/*;\n\nRUN echo 'en_US.UTF-8 UTF-8' > /etc/locale.gen && \\\n    locale-gen\n\nENV LANG en_US.UTF-8\nENV LANGUAGE en_US:en\nENV LC_ALL en_US.UTF-8\n\nRUN mkdir -p /etc/pleroma /var/lib/pleroma/static /var/lib/pleroma/uploads && \\\n    adduser --system --shell /bin/false --home /opt/pleroma --group pleroma && \\\n    chown -vR pleroma /etc/pleroma /var/lib/pleroma\n\nCOPY --chown=pleroma:pleroma --from=unzip /opt/pleroma/ /opt/pleroma/\n\nVOLUME [ \"/etc/pleroma\", \"/var/lib/pleroma/uploads\", \"/var/lib/pleroma/static\" ]\n\nADD https://gitlab.com/soapbox-pub/soapbox-fe/-/jobs/artifacts/v${SOAPBOXVERSION}/download?job=build-production /tmp/soapbox-fe.zip\nRUN chown pleroma /tmp/soapbox-fe.zip\n\nUSER pleroma\n\nCOPY run-pleroma.sh /opt/pleroma/bin/\n\nENTRYPOINT [ \"/usr/bin/dumb-init\" ]\n\nWORKDIR /opt/pleroma\n\nENV PATH=/opt/pleroma/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\nENV PLEROMA_CONFIG_PATH=/etc/pleroma/config.exs\n\nEXPOSE 4000\n\nSTOPSIGNAL SIGTERM\n\nHEALTHCHECK \\\n    --start-period=2m \\\n    --interval=5m \\\n    CMD curl --fail http://localhost:4000/api/v1/instance || exit 1\n\nCMD [ \"run-pleroma.sh\" ]\n"
}