{
  "startTime": 1674254950939,
  "endTime": 1674254951991,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 68
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 68
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 68
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 44
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 92
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 68
      }
    }
  ],
  "repairedDockerfile": "# Builder image\n# =============\n\nFROM rust:1.60-buster as builder\n\nWORKDIR /home\n\nENV DEBIAN_FRONTEND noninteractive\n\nRUN apt-get update\nRUN apt-get install --no-install-recommends -y pkg-config make libsqlite3-dev libssl-dev git && rm -rf /var/lib/apt/lists/*;\nRUN apt-get clean\nRUN rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*;\n\nRUN USER=root cargo new mimirsbrunn\n\nWORKDIR /home/mimirsbrunn\n\nCOPY ./Cargo.toml ./Cargo.toml\nCOPY ./Cargo.lock ./Cargo.lock\nCOPY ./src ./src\nCOPY ./libs ./libs\nCOPY ./config ./config\nCOPY ./docker ./docker\nCOPY ./build.rs ./build.rs\nCOPY ./tests ./tests\nCOPY ./benches ./benches\n\nRUN --mount=type=cache,target=/usr/local/cargo/registry \\\n    --mount=type=cache,target=/home/mimirsbrunn/target  \\\n    cargo build --profile production --bin bragi --locked --features db-storage\n\n# Extract binary from build cache\nRUN mkdir bin\nRUN --mount=type=cache,target=/home/mimirsbrunn/target \\\n    cp target/production/bragi bin/\n\n\n# Target image\n# ============\n\nFROM debian:buster-slim\n\nWORKDIR /srv\n\nENV DEBIAN_FRONTEND noninteractive\n\nRUN apt-get update\n# curl required for healthchecks\nRUN apt-get install --no-install-recommends -y curl libcurl4 sqlite3 && rm -rf /var/lib/apt/lists/*;\nRUN apt-get clean\nRUN rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\nCOPY config /etc/bragi\nCOPY docker/run_with_default_config.sh .\nCOPY --from=builder /home/mimirsbrunn/bin/bragi /usr/bin/bragi\n\nEXPOSE 4000\n\nENV CONFIG_DIR  /etc/bragi\nENV RUST_LOG    info,hyper=info\n\nENTRYPOINT [ \"./run_with_default_config.sh\", \"bragi\" ]\n"
}