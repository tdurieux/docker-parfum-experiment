{
  "startTime": 1674219230157,
  "endTime": 1674219230715,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 16,
        "columnStart": 8,
        "columnEnd": 11
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 16,
        "columnStart": 8,
        "columnEnd": 11
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM navitia/python\n\nWORKDIR /usr/src/app\nCOPY navitia/source/jormungandr/requirements.txt /usr/src/app\nCOPY navitia/source/jormungandr/jormungandr /usr/src/app/jormungandr\nCOPY navitia/source/navitiacommon/navitiacommon /usr/src/app/navitiacommon\n\nRUN apt-get update --fix-missing \\\n    &&  apt-get upgrade -y \\\n    && apt-get install --no-install-recommends -y \\\n        build-essential \\\n        python-dev \\\n        libgeos-c1 \\\n        libpq-dev \\\n        python-setuptools \\\n        curl \\\n        git \\\n    && pip install --no-cache-dir -r requirements.txt \\\n    && apt-get autoremove -y \\\n        build-essential \\\n        python-dev \\\n        python-setuptools \\\n        git && rm -rf /var/lib/apt/lists/*;\n\n# ....\n# I don't see a better way, geos try to find libc and fail, so ugly hack to give it\nRUN ln -s /lib/ld-musl-x86_64.so.1 /usr/lib/libc.so\n\nWORKDIR /usr/src/app/\n\nHEALTHCHECK CMD curl -f http://localhost/v1 || exit 1\nENV PYTHONPATH=.\nENV PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION=cpp\nENV PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION_VERSION=2\nCMD [\"uwsgi\", \"--master\", \"--lazy-apps\", \"--mount\", \"/=jormungandr:app\", \"--http\", \"0.0.0.0:80\"]\n"
}