{
  "startTime": 1674220178224,
  "endTime": 1674220179261,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 23
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:18.5.0-alpine AS build\n\nENV CI=true\n\n# First copy only package.json and yarn.lock to make the dependency fetching step optional.\nCOPY website/package.json \\\n    website/package-lock.json \\\n    /go/src/go.nlx.io/nlx/docs/website/\n\nWORKDIR /go/src/go.nlx.io/nlx/docs/website\nRUN npm ci --no-progress --color=false --quiet\n\n# Now copy the whole workdir for the build step.\nCOPY . /go/src/go.nlx.io/nlx/docs\n\nRUN npm run build\n\n# Create version.json\nFROM alpine:3.16.0 AS version\n\nRUN apk add --no-cache --update jq\n\nARG GIT_TAG_NAME=undefined\nARG GIT_COMMIT_HASH=undefined\nRUN jq -ncM --arg tag $GIT_TAG_NAME --arg commit $GIT_COMMIT_HASH  '{tag: $tag, commit: $commit}' | tee /version.json\n\n# Copy static docs to alpine-based nginx container.\nFROM nginx:alpine\nEXPOSE 8080\n\n# Add non-privileged user\nRUN adduser -D -u 1001 appuser\n\n# Set ownership nginx.pid and cache folder in order to run nginx as non-root user\nRUN touch /var/run/nginx.pid && \\\n    chown -R appuser /var/run/nginx.pid && \\\n    chown -R appuser /var/cache/nginx\n\n# Copy nginx configuration\nCOPY docker/nginx.conf /etc/nginx/nginx.conf\nCOPY docker/default.conf /etc/nginx/conf.d/default.conf\n\nCOPY --from=build /go/src/go.nlx.io/nlx/docs/website/build /usr/share/nginx/html\n\n# This is a workaround to https://github.com/moby/moby/issues/37965\nRUN true\n\nCOPY --from=version /version.json /usr/share/nginx/html/\n\nUSER appuser\n"
}