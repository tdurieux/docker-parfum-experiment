{
  "startTime": 1674255918149,
  "endTime": 1674255919130,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 23
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:18.5.0-alpine AS build\n\nENV CI=true\n# Don't inlne scripts, troublesome with CSP headers\n# See https://create-react-app.dev/docs/advanced-configuration/\nENV INLINE_RUNTIME_CHUNK=false\n\n# First copy only package.json and yarn.lock to make the dependency fetching step optional.\nCOPY package.json \\\n    package-lock.json \\\n    /go/src/go.nlx.io/nlx/directory-ui/\n\nWORKDIR /go/src/go.nlx.io/nlx/directory-ui\nRUN npm ci --no-progress --color=false --quiet\n\n# Now copy the whole workdir for the build step.\nCOPY . /go/src/go.nlx.io/nlx/directory-ui\n\nRUN npm run build\n\n# Create version.json\nFROM alpine:3.16.0 AS version\n\nRUN apk add --no-cache --update jq\n\nARG GIT_TAG_NAME=undefined\nARG GIT_COMMIT_HASH=undefined\nRUN jq -ncM --arg tag $GIT_TAG_NAME --arg commit $GIT_COMMIT_HASH  '{tag: $tag, commit: $commit}' | tee /version.json\n\n# Copy static docs to alpine-based nginx container.\nFROM nginx:alpine\n\n# Add non-privileged user\n# Note: `USER appuser` is not present in Dockerfile, because nginx.conf includes `user appuser;`\nRUN adduser -D -u 1001 appuser\n\n# Copy nginx configuration\nCOPY docker/nginx.conf /etc/nginx/nginx.conf\nCOPY docker/default.conf /etc/nginx/conf.d/default.conf\n\nCOPY --from=build /go/src/go.nlx.io/nlx/directory-ui/build /usr/share/nginx/html\nCOPY --from=version /version.json /usr/share/nginx/html\n"
}