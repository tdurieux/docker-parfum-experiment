{
  "startTime": 1674218218043,
  "endTime": 1674218219172,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 37
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:18.5.0-alpine AS node-build\n\nRUN apk add --no-cache --update git jq python3 make g++\n\nENV CI=true\n\n# Only copy package.json and package-lock.json so we can use Docker's caching mechanism.\nCOPY management-ui/package.json \\\n    management-ui/package-lock.json \\\n    /go/src/go.nlx.io/nlx/management-ui/\n\nWORKDIR /go/src/go.nlx.io/nlx/management-ui\n\nRUN npm ci --no-progress --color=false --quiet\n\n# Now copy the whole workdir for the build step.\nCOPY management-ui /go/src/go.nlx.io/nlx/management-ui\n\nRUN npm run build\n\n# Use go 1.x based on alpine image.\nFROM golang:1.18.4-alpine AS go-build\n\n# Install build tools.\nRUN apk add --no-cache --update git gcc musl-dev\n\n# Cache dependencies\nCOPY go.mod /go/src/go.nlx.io/nlx/go.mod\nCOPY go.sum /go/src/go.nlx.io/nlx/go.sum\nENV GO111MODULE on\nWORKDIR /go/src/go.nlx.io/nlx\nRUN go mod download\n\n# Only add code that we use for building directory\nCOPY management-ui  /go/src/go.nlx.io/nlx/management-ui\nCOPY common  /go/src/go.nlx.io/nlx/common\n\nWORKDIR /go/src/go.nlx.io/nlx/management-ui\n\nARG GIT_TAG_NAME=undefined\nARG GIT_COMMIT_HASH=undefined\n\nRUN go build \\\n        -ldflags=\"-X 'go.nlx.io/nlx/common/version.BuildSourceHash=$GIT_COMMIT_HASH' -X 'go.nlx.io/nlx/common/version.BuildVersion=$GIT_TAG_NAME'\" \\\n        -o dist/bin/nlx-management-ui ./cmd/nlx-management-ui\n\nFROM alpine:3.16.0\n\nCOPY --from=go-build /go/src/go.nlx.io/nlx/management-ui/dist/bin/nlx-management-ui /usr/local/bin/nlx-management-ui\nCOPY --from=node-build /go/src/go.nlx.io/nlx/management-ui/build /app/public\n\nWORKDIR /app\n\n# Add non-privileged user\nRUN adduser -D -u 1001 appuser && \\\n    chown -R 1001 /app\n\nUSER appuser\n\nCMD [\"/usr/local/bin/nlx-management-ui\"]\n"
}