{
  "startTime": 1674253490003,
  "endTime": 1674253490806,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 46
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Stage 1 - Compile needed python dependencies\nFROM python:3.6-alpine AS build\nRUN apk --no-cache add \\\n    gcc \\\n    musl-dev \\\n    pcre-dev \\\n    linux-headers \\\n    postgresql-dev \\\n    python3-dev \\\n    # libraries installed using git\n    git \\\n    # lxml dependencies\n    libxslt-dev \\\n    # pillow dependencies\n    jpeg-dev \\\n    openjpeg-dev \\\n    zlib-dev\n\nWORKDIR /app\n\nCOPY ./requirements /app/requirements\nRUN pip install --no-cache-dir pip setuptools -U\nRUN pip install --no-cache-dir -r requirements/production.txt\n\n\n# # Stage 2 - build frontend\n# FROM mhart/alpine-node:10 AS frontend-build\n\n# WORKDIR /app\n\n# COPY ./*.json /app/\n# RUN npm install\n\n# COPY ./Gulpfile.js /app/\n# COPY ./build /app/build/\n\n# COPY src/deploy_bot/sass/ /app/src/deploy_bot/sass/\n# RUN npm run build\n\n\n# # Stage 3 - Prepare jenkins tests image\n# FROM build AS jenkins\n\n# RUN apk --no-cache add \\\n#     postgresql-client\n\n# # Stage 3.1 - Set up the needed testing/development dependencies\n# COPY --from=build /usr/local/lib/python3.6 /usr/local/lib/python3.6\n# COPY --from=build /app/requirements /app/requirements\n\n# RUN pip install -r requirements/jenkins.txt --exists-action=s\n\n# # Stage 3.2 - Set up testing config\n# COPY ./setup.cfg /app/setup.cfg\n# COPY ./bin/runtests.sh /runtests.sh\n\n# # Stage 3.3 - Copy source code\n# COPY ./src /app/src\n# CMD [\"/runtests.sh\"]\n\n\n# Stage 4 - Build docker image suitable for execution and deployment\nFROM python:3.6-alpine AS production\nRUN apk --no-cache add \\\n    ca-certificates \\\n    mailcap \\\n    musl \\\n    pcre \\\n    postgresql \\\n    # lxml dependencies\n    libxslt \\\n    # pillow dependencies\n    jpeg \\\n    openjpeg \\\n    zlib\n\n# Stage 4.1 - Set up dependencies\nCOPY --from=build /usr/local/lib/python3.6 /usr/local/lib/python3.6\nCOPY --from=build /usr/local/bin/uwsgi /usr/local/bin/uwsgi\n\n# Stage 4.2 - Copy source code\nWORKDIR /app\nCOPY ./bin/docker_start.sh /start.sh\nRUN mkdir /app/log\n\nCOPY ./src /app/src\n\nENV DJANGO_SETTINGS_MODULE=deploy_bot.conf.docker\n\nARG SECRET_KEY=dummy\n\n# Run collectstatic, so the result is already included in the image\nRUN python src/manage.py collectstatic --noinput\n\nEXPOSE 8000\nCMD [\"/start.sh\"]\n"
}