{
  "startTime": 1674253006912,
  "endTime": 1674253007843,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 7,
        "columnEnd": 25
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 14,
        "columnStart": 7,
        "columnEnd": 18
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.9-slim\nLABEL maintainer=\"furious.luke@gmail.com\"\n\nENV PYTHONDONTWRITEBYTECODE=1 \\\n    PYTHONUNBUFFERED=1 \\\n    PYTHONIOENCODING=utf-8 \\\n    LANG=C.UTF-8\n\nRUN apt-get -qq update \\\n    && apt-get -y --no-install-recommends install \\\n        bash \\\n        locales \\\n        git \\\n        build-essential \\\n        libssl-dev \\\n    && pip install --no-cache-dir poetry \\\n    && rm -rf /var/lib/apt/lists/* \\\n    && ln -sf /usr/share/zoneinfo/Etc/UTC /etc/localtime \\\n    && locale-gen C.UTF-8 || true\n\nARG USER_ID\nARG GROUP_ID\nRUN    addgroup --gid $GROUP_ID user || true \\\n    && useradd -M -u $USER_ID -g $GROUP_ID user || true \\\n    && usermod -d /code user || true\n\nRUN mkdir -p /code\nWORKDIR /code\n\nCOPY ./example_site/pyproject.toml ./example_site/poetry.lock /code/\nRUN    poetry config virtualenvs.create false \\\n    && poetry install --no-interaction --no-ansi\n\nCOPY ./example_site /code/\nCOPY ./address /code/address\nRUN chown -R user:user /code\nUSER user\n\nEXPOSE 8000\n\nCMD ./manage.py migrate && ./manage.py runserver 0.0.0.0:8000\n"
}