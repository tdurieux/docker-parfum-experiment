{
  "startTime": 1674221107392,
  "endTime": 1674221108487,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 104
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 77
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 16,
        "columnEnd": 51
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG BUILD_FROM=\"fredrikbaberg/addon-octoprint-next-amd64:0.4.5\"\n\nFROM ${BUILD_FROM} AS octoklipper\n\nRUN echo \"Extract Python install\" && \\\n    tar -zxf /root/python.tar.gz -C /data/ && \\\n    rm -rf /root/python.tar.gz && \\\n    echo \"Add OctoKlipper\" && \\\n    pip install --no-cache-dir ${PIP_FLAGS} \"https://github.com/thelastWallE/OctoprintKlipperPlugin/archive/master.zip\" && \\\n    echo \"Cleanup and archive\" && \\\n    find /data/python | grep -E \"(__pycache__|\\.pyc|\\.pyo$)\" | xargs rm -rf && \\\n    find /usr/lib/python* | grep -E \"(__pycache__|\\.pyc|\\.pyo$)\" | xargs rm -rf && \\\n    rm -rf /root/.cache && \\\n    cd /data && tar -zcf /root/python.tar.gz python && \\\n    rm -rf /data/python && rm /root/python.tar.gz\n\n\nFROM ${BUILD_FROM} AS klipperbase\n\nRUN echo \"Get Klipper code\" && \\\n    apk add --no-cache git && \\\n    git clone https://github.com/KevinOConnor/klipper /root/klipper\nCOPY rootfs/root/klipper/.config /root/klipper/.config\n\n\nFROM ${BUILD_FROM} AS final\n\nENV PIP_FLAGS=\"--no-cache-dir --extra-index-url https://www.piwheels.org/simple\"\nENV CFLAGS=\"-fcommon\"\n\nCOPY --from=klipperbase /root/klipper /root/klipper\n\nRUN echo \"Install build dependencies.\" && \\\n    apk add --no-cache --virtual .build-dependencies-klipper \\\n        build-base \\\n        python2-dev \\\n        python3-dev \\\n        py3-virtualenv \\\n        libffi-dev \\\n        gcc-avr \\\n        freetype-dev \\\n    && \\\n    echo \"Install run dependencies.\" && \\\n    apk add --no-cache --virtual .run-dependencies-klipper \\\n        python2 \\\n        libffi \\\n        avrdude \\\n        libgpiod \\\n        git \\\n        libpng \\\n    && \\\n    echo \"Setup virtual environment.\" && \\\n    virtualenv --python=python2.7 /root/klippy-env && \\\n    source /root/klippy-env/bin/activate && \\\n    /root/klippy-env/bin/python -m pip install ${PIP_FLAGS} --upgrade pip && \\\n    echo \"Install Klipper\" && \\\n    pip install --no-cache-dir ${PIP_FLAGS} -r /root/klipper/scripts/klippy-requirements.txt && \\\n    echo \"Install numpy and matplotlib\" && \\\n    /root/klippy-env/bin/python -m pip install ${PIP_FLAGS} numpy matplotlib && \\\n    echo \"Compile for Linux MCU\" && \\\n    cd /root/klipper && \\\n    make clean && make && \\\n    ./scripts/flash-linux.sh && \\\n    echo \"Final cleanup\" && \\\n    apk del --no-cache .build-dependencies-klipper && \\\n    find /root/klippy-env | grep -E \"(__pycache__|\\.pyc|\\.pyo$)\" | xargs rm -rf && \\\n    find /usr/lib/python* | grep -E \"(__pycache__|\\.pyc|\\.pyo$)\" | xargs rm -rf && \\\n    rm -rf /root/.cache\n\nCOPY --from=octoklipper /root/python.tar.gz /root/python.tar.gz\n\nCOPY rootfs/ /\nWORKDIR /\n"
}