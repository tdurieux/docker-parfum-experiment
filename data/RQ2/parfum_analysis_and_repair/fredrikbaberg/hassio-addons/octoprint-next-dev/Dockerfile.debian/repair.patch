diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/fredrikbaberg/hassio-addons/octoprint-next-dev/Dockerfile.debian b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/fredrikbaberg/hassio-addons/octoprint-next-dev/Dockerfile.debian/repaired.Dockerfile
index b40fee7..c9529e2 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/fredrikbaberg/hassio-addons/octoprint-next-dev/Dockerfile.debian
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/fredrikbaberg/hassio-addons/octoprint-next-dev/Dockerfile.debian/repaired.Dockerfile
@@ -7,13 +7,13 @@ ENV LANG C.UTF-8
 ENV PIP_FLAGS="--no-cache-dir --extra-index-url https://www.piwheels.org/simple"
 
 RUN echo "Install core build dependencies" \
-    && apt update && apt install -y \
+    && apt update && apt install --no-install-recommends -y \
         git \
         python3-dev \
         python2-dev \
         virtualenv \
         build-essential \
-        cmake
+        cmake && rm -rf /var/lib/apt/lists/*;
 
 
 
@@ -25,20 +25,20 @@ ENV PATH=${PATH}:/data/python/OctoPrint/bin
 RUN echo "Install OctoPrint" \
     && virtualenv --python=python3 /data/python/OctoPrint \
     && source /data/python/OctoPrint/bin/activate \
-    && pip install ${PIP_FLAGS} --upgrade pip wheel \
-    && pip install ${PIP_FLAGS} --upgrade OctoPrint
+    && pip install --no-cache-dir ${PIP_FLAGS} --upgrade pip wheel \
+    && pip install --no-cache-dir ${PIP_FLAGS} --upgrade OctoPrint
 
 
 
 FROM build-base AS mjpg-streamer
 RUN echo "Install mjpg-streamer" \
-    && apt update && apt install -y \
+    && apt update && apt install --no-install-recommends -y \
         libjpeg-dev \
     && git clone --depth 1 https://github.com/jacksonliam/mjpg-streamer \
     && cd mjpg-streamer/mjpg-streamer-experimental/ \
     && make --silent \
     && make install --silent \
-    && mv www/ /www_mjpg
+    && mv www/ /www_mjpg && rm -rf /var/lib/apt/lists/*;
 
 
 
@@ -48,14 +48,14 @@ ENV PYTHONUSERBASE=/data/python/Klipper
 ENV PATH=${PATH}:/data/python/Klipper/bin
 
 RUN echo "Install Klipper" \
-    && apt update && apt install -y \
+    && apt update && apt install --no-install-recommends -y \
         libffi-dev \
     && virtualenv --python=python2.7 /data/python/Klipper \
     && source /data/python/Klipper/bin/activate \
-    && pip install ${PIP_FLAGS} --upgrade pip wheel \
+    && pip install --no-cache-dir ${PIP_FLAGS} --upgrade pip wheel \
     && git clone --depth 1 https://github.com/Klipper3d/klipper.git /data/klipper \
-    && pip install ${PIP_FLAGS} -r /data/klipper/scripts/klippy-requirements.txt \
-    && pip install ${PIP_FLAGS} --upgrade numpy
+    && pip install --no-cache-dir ${PIP_FLAGS} -r /data/klipper/scripts/klippy-requirements.txt \
+    && pip install --no-cache-dir ${PIP_FLAGS} --upgrade numpy && rm -rf /var/lib/apt/lists/*;
 COPY rootfs/data/klipper/.config /data/klipper/.config
 # Need to make two changes to /data/klipper/src/linux/main.c due to sched_setscheduler not being available in Alpine:
 # - Add #include<pthread.h>
@@ -120,7 +120,7 @@ ENV PIP_FLAGS="--no-cache-dir --extra-index-url https://www.piwheels.org/simple"
 ENV PATH=${PATH}:/data/python/OctoPrint/bin:/data/python/Klipper/bin
 
 RUN echo "Install required packages for running." \
-    && apt update && apt install -y \
+    && apt update && apt install --no-install-recommends -y \
         python2 \
         python3 \
         python3-distutils \
@@ -130,7 +130,7 @@ RUN echo "Install required packages for running." \
     && curl -1sLf 'https://dl.cloudsmith.io/public/caddy/stable/gpg.key' | tee /etc/apt/trusted.gpg.d/caddy-stable.asc \
     && curl -1sLf 'https://dl.cloudsmith.io/public/caddy/stable/debian.deb.txt' | tee /etc/apt/sources.list.d/caddy-stable.list \
     && apt update \
-    && apt install caddy \
+    && apt install -y --no-install-recommends caddy \
     && apt clean \
     && rm -rf /var/lib/apt/lists/*
 RUN echo "Install additional packages" \
@@ -189,4 +189,4 @@ RUN echo "Cleanup and move output" \
     && cd /data/config && tar -zcf /root/OctoPrint-config.tar.gz octoprint \
     && cd /data/python && tar -zcf /root/Klipper-python.tar.gz Klipper \
     && cd /data && tar -zcf /root/Klipper-src.tar.gz klipper \
-    && rm -rf /data/*
+    && rm -rf /data/* && rm /root/OctoPrint-python.tar.gz