{
  "startTime": 1674215422321,
  "endTime": 1674215423256,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 7,
        "columnEnd": 90
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 8,
        "columnEnd": 53
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 22,
        "columnStart": 8,
        "columnEnd": 61
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 8,
        "columnEnd": 53
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 22,
        "columnStart": 8,
        "columnEnd": 61
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:22.04\n\n# LABEL\nMAINTAINER HuzunluArtemis huzunluartemis@tuta.io\nLABEL org.opencontainers.image.source=\"https://github.com/HuzunluArtemis/QMirrorLeechBot\"\nLABEL org.opencontainers.image.description=\"Docker for QMirrorLeechBot\"\n\nARG TARGETPLATFORM BUILDPLATFORM\nENV DEBIAN_FRONTEND=\"noninteractive\"\n\nRUN apt-get -y update && apt-get -y upgrade && \\\n        apt-get install --no-install-recommends -y software-properties-common && \\\n        add-apt-repository -y ppa:qbittorrent-team/qbittorrent-stable && \\\n        add-apt-repository universe && \\\n\t\t\t\t\tadd-apt-repository multiverse && \\\n\t\t\t\t\tadd-apt-repository restricted && \\\n        apt-get install --no-install-recommends -y python3 python3-pip python3-lxml aria2 \\\n        qbittorrent-nox tzdata p7zip-full p7zip-rar xz-utils curl pv jq \\\n        ffmpeg locales neofetch git make g++ gcc automake unzip \\\n        autoconf libtool libcurl4-openssl-dev \\\n        libsodium-dev libssl-dev libcrypto++-dev libc-ares-dev \\\n        libsqlite3-dev libfreeimage-dev swig libboost-all-dev \\\n        libpthread-stubs0-dev zlib1g-dev libpq-dev libffi-dev && rm -rf /var/lib/apt/lists/*;\n\n# Installing Mega SDK Python Binding\nENV PYTHONWARNINGS=ignore\nENV MEGA_SDK_VERSION=\"3.12.2\"\nRUN git clone https://github.com/meganz/sdk.git --depth=1 -b v$MEGA_SDK_VERSION ~/home/sdk \\\n    && cd ~/home/sdk && rm -rf .git \\\n    && autoupdate -fIv && ./autogen.sh \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --disable-silent-rules --enable-python --with-sodium --disable-examples \\\n    && make -j$(nproc --all) \\\n    && cd bindings/python/ && python3 setup.py bdist_wheel \\\n    && cd dist && ls && pip3 install --no-cache-dir megasdk-*.whl\n\n# Installing Mirror-Bot Requirements\nCOPY . .\nRUN pip3 install --no-cache-dir -r requirements.txt\n\nRUN apt-get -y update && apt-get -y upgrade && apt-get -y autoremove && apt-get -y autoclean\n\nWORKDIR /usr/src/app\nRUN chmod 777 /usr/src/app\n\nRUN locale-gen en_US.UTF-8\nENV LANG en_US.UTF-8\nENV LANGUAGE en_US:en\nENV LC_ALL en_US.UTF-8\n\nCMD [\"bash\", \"start.sh\"]"
}