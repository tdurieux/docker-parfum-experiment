{
  "startTime": 1674254737773,
  "endTime": 1674254738619,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 7,
        "columnEnd": 18
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "########################################################################################################################\n#                                                       DEV                                                            #\n########################################################################################################################\nFROM maven:3.6.1-jdk-8 as dev\n\n##########################\n#  install dependencies  #\n##########################\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n       curl=7.52.1-5+deb9u9 \\\n       g++=4:6.3.0-4 \\\n       make=4.1-9.1 \\\n       unzip=6.0-21+deb9u1 \\\n    && rm -rf /var/lib/apt/lists/*\n\n#######################\n#  install protobuf 2.5.0  #\n#######################\nRUN curl -fsSL --insecure -o /tmp/protobuf-2.5.0.tar.gz https://github.com/protocolbuffers/protobuf/releases/download/v2.5.0/protobuf-2.5.0.tar.gz \\\n    && tar -xzf /tmp/protobuf-2.5.0.tar.gz -C /tmp \\\n    && rm -rf /tmp/protobuf-2.5.0.tar.gz  \\\n    && mv /tmp/protobuf-* /tmp/protobuf \\\n    && cd /tmp/protobuf \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n    && make -j4 \\\n    && make install \\\n    && rm -rf /tmp/protobuf\n\nENV PATH /usr/local/bin/:$PATH\nENV LD_LIBRARY_PATH /usr/local/lib:$LD_LIBRARY_PATH\n\n########################################################################################################################\n#                                                     JAVA BUILDER                                                     #\n########################################################################################################################\nFROM dev as java_builder\n\nWORKDIR /app\n\nCOPY ./ /app\n\nRUN mvn -e -B -Dmaven.test.skip=true package\n\n########################################################################################################################\n#                                                       Artifacts                                                      #\n########################################################################################################################\nFROM alpine:3.10 as artifacts\n\nWORKDIR /dist\nCOPY --from=java_builder /app/dist/target/*.zip ./\n\nVOLUME /output\n\nCMD [ \"/bin/sh\", \"-c\", \"cp ./* /output\" ]"
}