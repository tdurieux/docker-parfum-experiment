{
  "startTime": 1674249436540,
  "endTime": 1674249437634,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 89
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 61,
        "columnEnd": 72
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 18,
        "columnEnd": 28
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:10-alpine\n\nRUN apk update && apk add --no-cache jq\nRUN mkdir -p /usr/src/app && rm -rf /usr/src/app\nWORKDIR /usr/src/app\n\n# This is okay, as it's only the builder image. This will not work on Jenkins otherwise.\nRUN npm config set unsafe-perm true\nRUN npm install -g npm-cli-login typescript@$(jq .devDependencies.typescript | tr -d '\"') && npm cache clean --force;\nCOPY package.json /usr/src/app\nCOPY . /usr/src/app\n\nARG NPM_USER\nARG NPM_PASS\nARG NPM_EMAIL\n\nRUN echo User: $NPM_USER, Email: $NPM_EMAIL\nRUN npm-cli-login -u $NPM_USER -p $NPM_PASS -e $NPM_EMAIL && npm install && tsc && npm publish && npm logout && npm cache clean --force;\n"
}