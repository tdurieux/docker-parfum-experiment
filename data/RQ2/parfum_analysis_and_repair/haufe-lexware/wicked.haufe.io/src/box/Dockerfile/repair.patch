diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/haufe-lexware/wicked.haufe.io/src/box/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/haufe-lexware/wicked.haufe.io/src/box/Dockerfile/repaired.Dockerfile
index c10124e..d6a2af0 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/haufe-lexware/wicked.haufe.io/src/box/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/haufe-lexware/wicked.haufe.io/src/box/Dockerfile/repaired.Dockerfile
@@ -1,7 +1,7 @@
 FROM node:10-alpine AS env_builder
 
 RUN apk update && \
-    apk add jq bash
+    apk add --no-cache jq bash
 
 COPY wicked.haufe.io/src/node-sdk /usr/src/app/node-sdk
 RUN cd /usr/src/app/node-sdk && \
@@ -9,14 +9,14 @@ RUN cd /usr/src/app/node-sdk && \
     npm install -g typescript@$(jq .devDependencies.typescript package.json | tr -d '"') && \
     npm install --production && \
     tsc && \
-    cp $(npm pack) ../wicked-sdk.tgz
+    cp $(npm pack) ../wicked-sdk.tgz && npm cache clean --force;
 
 COPY wicked.haufe.io/src/env /usr/src/app/env
 WORKDIR /usr/src/app/env
 RUN npm pack && cp portal-env*.tgz ../portal-env.tgz
 RUN cp package.all.json package.json && \
     cp ../wicked-sdk.tgz . && \
-    npm install --production
+    npm install --production && npm cache clean --force;
 
 COPY wicked.haufe.io/src/kong-adapter /usr/src/app/kong-adapter
 WORKDIR /usr/src/app/kong-adapter
@@ -59,7 +59,7 @@ RUN ln -sf /proc/1/fd/1 /tmp/stdout && \
 RUN apk add --no-cache --virtual .build-deps wget tar ca-certificates \
 	&& apk add --no-cache libgcc openssl pcre perl tzdata curl bash dumb-init redis \
 	&& wget -O kong.tar.gz "https://bintray.com/kong/kong-community-edition-alpine-tar/download_file?file_path=kong-community-edition-$KONG_VERSION.apk.tar.gz" \
-	&& echo "$KONG_SHA256 *kong.tar.gz" | sha256sum -c - \
+	&& echo "$KONG_SHA256  *kong.tar.gz" | sha256sum -c - \
 	&& tar -xzf kong.tar.gz -C /tmp \
 	&& rm -f kong.tar.gz \
 	&& cp -R /tmp/usr / \
@@ -68,8 +68,8 @@ RUN apk add --no-cache --virtual .build-deps wget tar ca-certificates \
 	&& rm -rf /tmp/etc \
 	&& apk del .build-deps
 
-RUN npm config set unsafe-perm true 
-RUN npm install -g pm2
+RUN npm config set unsafe-perm true
+RUN npm install -g pm2 && npm cache clean --force;
 
 # This does not work on Jenkins, and I do not know why. It was downloaded manually and
 # put into the "resources" sub directory.