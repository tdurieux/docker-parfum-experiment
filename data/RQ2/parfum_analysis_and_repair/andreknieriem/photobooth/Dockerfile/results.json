{
  "startTime": 1674253275528,
  "endTime": 1674253276764,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 7,
        "columnEnd": 56
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 7,
        "columnEnd": 54
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 7,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 25,
        "columnEnd": 48
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 7,
        "columnEnd": 54
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 7,
        "columnEnd": 44
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 25,
        "columnEnd": 48
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:buster-slim\n\n# Usage:\n# (1) Build image (only required once or after this file was changed):\n#     $ docker build -t photobooth .\n# (2) Start the container:\n#     $ docker run --name photobooth --rm -v \"$(pwd):/var/www/html/\" -p 8080:80 photobooth\n# (3) Go to: http://localhost:8080\n#\n# If you would like to connect to the running container:\n# $ docker exec -it photobooth /bin/bash\n\nRUN set -x \\\n    && apt-get update \\\n    && apt-get dist-upgrade -y \\\n    && apt-get install --no-install-recommends -y nginx php-fpm php-gd gphoto2 && rm -rf /var/lib/apt/lists/*;\n\nRUN set -x \\\n    && apt-get update \\\n    && apt-get install --no-install-recommends -y curl vim gnupg git && rm -rf /var/lib/apt/lists/*;\n\nRUN set -x \\\n    && sed -i 's/^\\(\\s*\\)index index\\.html\\(.*\\)/\\1index index\\.php index\\.html\\2/g' /etc/nginx/sites-available/default \\\n    && sed -i '/location ~ \\\\.php$ {/s/^\\(\\s*\\)#/\\1/g' /etc/nginx/sites-available/default \\\n    && sed -i '/include snippets\\/fastcgi-php.conf/s/^\\(\\s*\\)#/\\1/g' /etc/nginx/sites-available/default \\\n    && sed -i '/fastcgi_pass unix:\\/run\\/php\\//s/^\\(\\s*\\)#/\\1/g' /etc/nginx/sites-available/default \\\n    && sed -i '/.*fastcgi_pass unix:\\/run\\/php\\//,// { /}/s/^\\(\\s*\\)#/\\1/g; }' /etc/nginx/sites-available/default \\\n    && sed -i 's/^\\(\\s*listen \\[::\\]:80 default_server;\\)/#\\1/g' /etc/nginx/sites-enabled/default \\\n    && echo 'client_max_body_size 4M;' >> /etc/nginx/conf.d/custom.conf \\\n    && /usr/sbin/nginx -t -c /etc/nginx/nginx.conf\n\nRUN set -x \\\n    && curl -f -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \\\n    && echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list \\\n    && apt-get update && apt-get install --no-install-recommends -y yarn && rm -rf /var/lib/apt/lists/*;\n\nRUN set -x \\\n    && mkdir /run/php \\\n    && echo '#!/bin/bash -xe' > /start.sh \\\n    && echo 'cd /var/www/html && yarn install && yarn build' >> /start.sh \\\n    && echo '/usr/sbin/php-fpm7.3 -D' >> /start.sh \\\n    && echo 'exec /usr/sbin/nginx -g \"daemon off;\"' >> /start.sh \\\n    && chmod +x /start.sh\n\nEXPOSE 80\n\nSTOPSIGNAL SIGTERM\n\nENTRYPOINT [ \"/start.sh\" ]"
}