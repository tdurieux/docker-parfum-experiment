{
  "startTime": 1674216848693,
  "endTime": 1674216849502,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 134
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 7,
        "columnEnd": 82
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# TODO: log setup log and boot.log to stdout only\n# TODO: fix gpg key warnings\n# TODO: make sure unicode is used\n# TODO: give ovirt user a well known gid and uid\n# TODO: fix redirect from http to https (port is missing)\n\nFROM {{ tag \"base\" }}\n\nMAINTAINER Redhat Inc.\n\n# Database\nENV POSTGRES_USER engine\nENV POSTGRES_PASSWORD engine\nENV POSTGRES_DB engine\nENV POSTGRES_HOST postgres\nENV POSTGRES_PORT 5432\n\n# oVirt\nENV OVIRT_FQDN localhost\n\nEXPOSE 8700 8701\n\nUSER root\n\nRUN yum -y install ovirt-engine patch rh-postgresql95-postgresql \\\n    && yum -y clean all && rm -rf /var/cache/yum\n\n# dockerize helps us waiting for postgres being ready\nENV DOCKERIZE_VERSION v0.2.0\nRUN curl -f -OL https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz \\\n    && tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz\n\n# engine-setup needs the link to initctl\nRUN ln -s /usr/sbin/service /usr/bin/initctl\n\n#oVirt\nENV OVIRT_PASSWORD engine\nENV OVIRT_PKI_ORGANIZATION oVirt\n\nCOPY entrypoint.sh answers.conf.in setup.patch /\nCOPY 999-ovirt-engine.conf /etc/ovirt-engine/engine.conf.d/\n\n# patch engine-setup so that it does not try to start or stop services with systemd\nRUN patch -p0 < setup.patch\n\n# For kubernetes copy pki template files to a backup directory\nRUN cp -a /etc/pki/ovirt-engine /etc/pki/ovirt-engine.tmpl\n\n# Persist this folder to keep the generated TLS certificates on the first start\nVOLUME /etc/pki/ovirt-engine\n# Persist this folder to keep the database backups\nVOLUME /var/lib/ovirt-engine/backups\n\n# Encrypt host communication\nENV HOST_ENCRYPT=true\n# Try to provision hosts when they are added\nENV HOST_INSTALL=true\n# Use host identifier when talking with the host, so that the host sees who it is from the engines view.\n# This is valuable when working with ovirt-vdsmfake\nENV HOST_USE_IDENTIFIER=false\n# HACK: Config BlockMigrationOnSwapUsagePercentage so that the vm will start in ovirt-engine\n# For some reason this check fails the start vm - this should be figured out instead of this hack\nENV BLOCK_MIGRATION_ON_SWAP_USAGE_PERCENTAGE=9999\n\n# Public reachable HTTPS port\nENV HTTPS_PORT 8701\nENV SSO_ALTERNATE_ENGINE_FQDNS=\"localhost:8701 127.0.0.1:8701\"\n\nCMD bash /entrypoint.sh\n"
}