{
  "startTime": 1674251008890,
  "endTime": 1674251009566,
  "originalSmells": [
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 100
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 55
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 71
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM {{ tag \"base\" }}\nMAINTAINER \"Yaniv Bronhaim\" <ybronhei@redhat.com>\n\nENV container docker\n\nRUN echo \"root:root\" | chpasswd\nRUN echo \"options kvm-intel nested=1\" > /etc/modprobe.d/kvm-intel.conf\nRUN ln -s ../boot/grub2/grub.cfg /etc/grub2.cfg\n\n# copied from http://developers.redhat.com/blog/2014/05/05/running-systemd-within-docker-container/\nRUN yum -y update; yum clean all\nRUN yum -y install systemd; rm -rf /var/cache/yum yum clean all; \\\n(cd /lib/systemd/system/sysinit.target.wants/; for i in *; do [ $i == systemd-tmpfiles-setup.service ] || rm -f $i; done); \\\nrm -f /lib/systemd/system/multi-user.target.wants/*; \\\nrm -f /etc/systemd/system/*.wants/*; \\\nrm -f /lib/systemd/system/local-fs.target.wants/*; \\\nrm -f /lib/systemd/system/sockets.target.wants/*udev*; \\\nrm -f /lib/systemd/system/sockets.target.wants/*initctl*; \\\nrm -f /lib/systemd/system/basic.target.wants/*; \\\nrm -f /lib/systemd/system/anaconda.target.wants/*;\nVOLUME [ \"/sys/fs/cgroup\" ]\n# http://developers.redhat.com/blog/2014/05/05/running-systemd-within-docker-container/\n\n# copied from ovirt-container-node\nRUN yum -y install libvirt-daemon-driver-* libvirt-daemon libvirt-daemon-kvm qemu-kvm qemu-kvm-tools && rm -rf /var/cache/yum\nRUN localedef -i en_US -c -f UTF-8 en_US.UTF-8\nRUN rm -rf /etc/sysconfig/network-scripts/ifcfg-*\nRUN yum install -y tuned kexec-tools iptables-services; rm -rf /var/cache/yum yum clean all\nRUN mkdir -p /etc/iscsi;\n# ovirt-container-node\n\nRUN yum install -y epel-release && rm -rf /var/cache/yum\nRUN yum install -y vdsm vdsm-cli vdsm-hook-faqemu; rm -rf /var/cache/yum yum clean all;\nRUN yum install -y dhclient rsyslog iproute grub2-tools openssh-server; rm -rf /var/cache/yum yum clean all;\n\n# conf for host-deploy to avoid upgrading packages check\nRUN mkdir /etc/ovirt-host-deploy.conf.d\nADD confs/50-offline-packager.conf /etc/ovirt-host-deploy.conf.d/\nADD confs/vdsm.conf /etc/vdsm/vdsm.conf\n\n# set logging to local syslog\nADD confs/logger.conf /etc/vdsm/logger.conf\nADD confs/svdsm.logger.conf /etc/vdsm/svdsm.logger.conf\n\n# disable sanlock wdmd\nADD confs/sanlock.conf /etc/sanlock/sanlock.conf\n\nADD confs/rsyslog.conf /etc/rsyslog.conf\n\n# for some reason this file is missing when running vdsm-tool configure\nRUN touch /etc/libvirt/qemu-sanlock.conf\n\n# removing multipath and iscsi dependency\nRUN sed -i 's/multipathd.service //g' /usr/lib/systemd/system/vdsmd.service\nRUN sed -i 's/iscsid.service //g' /usr/lib/systemd/system/vdsmd.service\n\n# we need to enable vdsm and supervdsm to start. not part of configure yet, but should\nRUN systemctl enable vdsmd.service supervdsmd.service sshd.service rsyslog.service\n\n# set version for host-deploy\nRUN echo $(date -u +%Y%m%d%H%M%S) > /etc/ovirt-container-node-release\n\n# COPYING SCRIPT AND ENABLE DEPLOY SYSTEMD SCRIPT RUN\nADD scripts/* /root/\nRUN mv /root/vdsm-deploy.service /usr/lib/systemd/system/\nRUN systemctl enable vdsm-deploy.service\n\nEXPOSE 54321\n\nCMD [ \"/usr/sbin/init\" ]\n"
}