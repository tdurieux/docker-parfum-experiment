{
  "startTime": 1674248486646,
  "endTime": 1674248487319,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 44
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:16-alpine as builder\n\nARG build\n\nWORKDIR /usr/builder\n\nCOPY package.json package-lock.json ./\n\nRUN npm set progress=false && npm config set depth 0 && npm cache clean --force\nRUN HUSKY_SKIP_INSTALL=1 npm install --force && npm cache clean --force;\n\nCOPY NOTICE LICENSE ./\nCOPY src ./src\nCOPY *.json ./\nCOPY *.js ./\nCOPY docker/config.json ./src/assets/config.json\n\nRUN npm run build:${build}\n\nFROM nginx:alpine\n\nRUN [ -e /etc/nginx/conf.d/default.conf ] && mv /etc/nginx/conf.d/default.conf /etc/nginx/conf.d/default.conf-disabled\nCOPY docker/nginx-dashboard.conf /etc/nginx/conf.d/dashboard.conf\n\nWORKDIR /usr/share/nginx/html\nCOPY --from=builder /usr/builder/dist ./\n\nCOPY docker/autoconfig.sh /autoconfig.sh\nRUN chmod +x /autoconfig.sh\n\nCMD /autoconfig.sh && nginx -g 'daemon off;'\n"
}