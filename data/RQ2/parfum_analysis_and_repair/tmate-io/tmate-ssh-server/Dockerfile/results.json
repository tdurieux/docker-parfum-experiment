{
  "startTime": 1674255050353,
  "endTime": 1674255051466,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 1,
        "columnEnd": 50
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.13 AS build\n\nRUN apk add --no-cache msgpack-c ncurses-libs libevent libexecinfo openssl zlib\n\nRUN apk add --no-cache \\\n\tautoconf \\\n\tautomake \\\n\tcmake \\\n\tg++ \\\n\tgcc \\\n\tgit \\\n\tlibevent-dev \\\n\tlibexecinfo-dev \\\n\tlinux-headers \\\n\tmake \\\n\tmsgpack-c-dev \\\n\tncurses-dev \\\n\topenssl-dev \\\n\tzlib-dev\n\nRUN apk add --no-cache libssh-dev\n\nRUN mkdir -p /src/tmate-ssh-server\nCOPY . /src/tmate-ssh-server\n\nRUN set -ex; \\\n\tcd /src/tmate-ssh-server; \\\n\t./autogen.sh; \\\n\t./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr CFLAGS=\"-D_GNU_SOURCE\"; \\\n\tmake -j \"$(nproc)\"; \\\n\tmake install\n\n### Minimal run-time image\nFROM alpine:3.13\n\nRUN apk add --no-cache \\\n\tbash \\\n\tgdb \\\n\tlibevent \\\n\tlibexecinfo \\\n\tlibssh \\\n\tmsgpack-c \\\n\tncurses-libs \\\n\topenssl \\\n\tzlib\n\nCOPY --from=build /usr/lib/libssh.so.* /usr/lib/\nCOPY --from=build /usr/bin/tmate-ssh-server /usr/bin/\n\n# TODO not run as root. Instead, use capabilities.\n\nCOPY docker-entrypoint.sh /usr/local/bin\n\nEXPOSE 2200\nENTRYPOINT [\"docker-entrypoint.sh\"]\n"
}