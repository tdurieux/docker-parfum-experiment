{
  "startTime": 1674255610885,
  "endTime": 1674255611917,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 20,
        "columnEnd": 47
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 12,
        "columnEnd": 70
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG PLATFORM=amd64\nFROM ${PLATFORM}/alpine:3.10 AS build\n\nWORKDIR /build\n\nRUN apk add --no-cache wget cmake make gcc g++ linux-headers zlib-dev openssl-dev \\\n            automake autoconf libevent-dev ncurses-dev msgpack-c-dev libexecinfo-dev \\\n            ncurses-static libexecinfo-static libevent-static msgpack-c ncurses-libs \\\n            libevent libexecinfo openssl zlib\n\nRUN set -ex; \\\n            mkdir -p /src/libssh/build; \\\n            cd /src; \\\n            wget -O libssh.tar.xz https://www.libssh.org/files/0.9/libssh-0.9.0.tar.xz; \\\n            tar -xf libssh.tar.xz -C /src/libssh --strip-components=1; rm libssh.tar.xz \\\n            cd /src/libssh/build; \\\n            cmake -DCMAKE_INSTALL_PREFIX:PATH=/usr \\\n            -DWITH_SFTP=OFF -DWITH_SERVER=OFF -DWITH_PCAP=OFF \\\n            -DWITH_STATIC_LIB=ON -DWITH_GSSAPI=OFF ..; \\\n            make -j $(nproc); \\\n            make install\n\nCOPY compat ./compat\nCOPY *.c *.h autogen.sh Makefile.am configure.ac ./\n\nRUN ./autogen.sh && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-static\nRUN make -j $(nproc)\nRUN objcopy --only-keep-debug tmate tmate.symbols && chmod -x tmate.symbols && strip tmate\nRUN ./tmate -V\n\nFROM alpine:3.9\n\nRUN apk --no-cache add bash\nRUN mkdir /build\nENV PATH=/build:$PATH\nCOPY --from=build /build/tmate.symbols /build\nCOPY --from=build /build/tmate /build\n"
}