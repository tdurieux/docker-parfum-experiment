{
  "startTime": 1674255719268,
  "endTime": 1674255720494,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 70
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ruby:2.5.0-alpine3.7\n\nARG UID=991\nARG GID=991\n\nENV RAILS_SERVE_STATIC_FILES=true \\\n    RAILS_ENV=development NODE_ENV=development \\\n    LOCAL_HTTPS=false\n\nARG YARN_VERSION=1.3.2\nARG YARN_DOWNLOAD_SHA256=6cfe82e530ef0837212f13e45c1565ba53f5199eec2527b85ecbcd88bf26821d\nARG LIBICONV_VERSION=1.15\nARG LIBICONV_DOWNLOAD_SHA256=ccf536620a45458d26ba83887a983b96827001e92a13847b45e4925cc8913178\n\nEXPOSE 3000 4000\n\nWORKDIR /mastodon\n\nRUN apk -U upgrade \\\n && apk add -t build-dependencies \\\n    build-base \\\n    icu-dev \\\n    libidn-dev \\\n    libressl \\\n    libtool \\\n    postgresql-dev \\\n    protobuf-dev \\\n    python \\\n && apk add \\\n    ca-certificates \\\n    ffmpeg \\\n    file \\\n    git \\\n    icu-libs \\\n    imagemagick \\\n    libidn \\\n    libpq \\\n    nodejs \\\n    nodejs-npm \\\n    protobuf \\\n    su-exec \\\n    tini \\\n    tzdata \\\n && update-ca-certificates \\\n && mkdir -p /tmp/src /opt \\\n && wget -O yarn.tar.gz \"https://github.com/yarnpkg/yarn/releases/download/v$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz\" \\\n && echo \"$YARN_DOWNLOAD_SHA256  *yarn.tar.gz\" | sha256sum -c - \\\n && tar -xzf yarn.tar.gz -C /tmp/src \\\n && rm yarn.tar.gz \\\n && mv /tmp/src/yarn-v$YARN_VERSION /opt/yarn \\\n && ln -s /opt/yarn/bin/yarn /usr/local/bin/yarn \\\n && wget -O libiconv.tar.gz \"https://ftp.gnu.org/pub/gnu/libiconv/libiconv-$LIBICONV_VERSION.tar.gz\" \\\n && echo \"$LIBICONV_DOWNLOAD_SHA256  *libiconv.tar.gz\" | sha256sum -c - \\\n && tar -xzf libiconv.tar.gz -C /tmp/src \\\n && rm libiconv.tar.gz \\\n && cd /tmp/src/libiconv-$LIBICONV_VERSION \\\n && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/local \\\n && make -j$(getconf _NPROCESSORS_ONLN) \\\n && make install \\\n && libtool --finish /usr/local/lib \\\n && cd /mastodon \\\n && rm -rf /tmp/* /var/cache/apk/*\n\nRUN addgroup -g ${GID} mastodon && adduser -h /mastodon -s /bin/sh -D -G mastodon -u ${UID} mastodon\n\nRUN git clone https://github.com/tootsuite/mastodon.git /mastodon\nRUN chown -R mastodon:mastodon /mastodon\n\nUSER mastodon\nRUN bundle config build.nokogiri --with-iconv-lib=/usr/local/lib --with-iconv-include=/usr/local/include\nRUN bundle install --without test\nRUN yarn install --pure-lockfile && yarn cache clean;\n\n# XXX workaround for ruby goldfinger gem\n# adds the ability to search profiles via http\n# (see https://github.com/tootsuite/goldfinger/pull/2)\nRUN sed -i 's/https/http/' \\\n  /usr/local/bundle/gems/goldfinger-*/lib/goldfinger/client.rb\n\n# XXX disable redis; redis received all jobs but\n# didn't execute them. bypassing it now till\n# someone with more knowledge comes around\nRUN echo -e \"if Rails.env.development?\\n\"\\\n  \"require 'sidekiq/testing'\\n\"\\\n  \"Sidekiq::Testing.inline!\\n\"\\\n  \"end\" >> config/initializers/sidekiq.rb\n\nCOPY .env /mastodon/.env\nCOPY start.sh /start.sh\n\nCMD [\"/bin/bash\", \"/start.sh\"]\n"
}