diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/juniper/jp4agent/tools/docker/Dockerfile_p4 b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/juniper/jp4agent/tools/docker/Dockerfile_p4/repaired.Dockerfile
index 5690bd4..e7ce602 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/juniper/jp4agent/tools/docker/Dockerfile_p4
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/juniper/jp4agent/tools/docker/Dockerfile_p4/repaired.Dockerfile
@@ -35,7 +35,7 @@ LABEL maintainer "Sandesh Kumar Sodhi"
 
 ARG DEBIAN_FRONTEND=noninteractive
 
-# 
+#
 # Note:
 # While adding new package to the list, maintain the alphanumeric sorted order.
 #
@@ -83,13 +83,13 @@ RUN apt-get update && apt-get install -y --no-install-recommends \
  tree \
  unzip \
  vim \
- wget
+ wget && rm -rf /var/lib/apt/lists/*;
 
 
 # Clang related packages
 RUN wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add -
 RUN apt-add-repository -y "deb http://apt.llvm.org/xenial/ llvm-toolchain-xenial-6.0 main"
-RUN apt-get update && apt-get install -y --no-install-recommends clang-6.0 clang-format-6.0 clang-tidy-6.0
+RUN apt-get update && apt-get install -y --no-install-recommends clang-6.0 clang-format-6.0 clang-tidy-6.0 && rm -rf /var/lib/apt/lists/*;
 RUN update-alternatives --install /usr/bin/clang clang /usr/bin/clang-6.0 10
 RUN update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-6.0 10
 RUN update-alternatives --install /usr/bin/clang-format clang-format /usr/bin/clang-format-6.0 10
@@ -104,41 +104,41 @@ RUN apt-get update && apt-get install -y --no-install-recommends \
  flex \
  libgc-dev \
  libgmp-dev \
- libfl-dev
+ libfl-dev && rm -rf /var/lib/apt/lists/*;
 
 RUN apt-get update && apt-get install -y --no-install-recommends \
  python \
  pylint \
  python-pip \
  python3-pip \
- python-scapy
+ python-scapy && rm -rf /var/lib/apt/lists/*;
 
-RUN pip install --upgrade pip
-RUN pip install -U setuptools
-RUN pip install scapy
-RUN pip install ipaddr
-RUN pip install gcovr
-RUN pip install lxml
-RUN pip3 install grpcio-tools
-RUN pip3 install prompt-toolkit
+RUN pip install --no-cache-dir --upgrade pip
+RUN pip install --no-cache-dir -U setuptools
+RUN pip install --no-cache-dir scapy
+RUN pip install --no-cache-dir ipaddr
+RUN pip install --no-cache-dir gcovr
+RUN pip install --no-cache-dir lxml
+RUN pip3 install --no-cache-dir grpcio-tools
+RUN pip3 install --no-cache-dir prompt-toolkit
 
 RUN apt-get update && apt-get install -y --no-install-recommends \
  curl \
- git
+ git && rm -rf /var/lib/apt/lists/*;
 
 RUN mkdir -p /root/downloads
-RUN cd /root/downloads && git clone -b $(curl -L https://grpc.io/release) https://github.com/grpc/grpc
+RUN cd /root/downloads && git clone -b $( curl -f -L https://grpc.io/release) https://github.com/grpc/grpc
 RUN cd /root/downloads/grpc && git fetch && git checkout v1.8.1
 RUN cd /root/downloads/grpc && git submodule update --init
 RUN cd /root/downloads/grpc && make
 RUN cd /root/downloads/grpc && make install
-RUN cd /root/downloads/grpc/third_party/protobuf/ && ./autogen.sh && ./configure && make && make install
+RUN cd /root/downloads/grpc/third_party/protobuf/ && ./autogen.sh && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" && make && make install
 
 #
 # GTEST
 #
 RUN cd /root/downloads && wget https://github.com/google/googletest/archive/release-1.8.0.tar.gz
-RUN cd /root/downloads && tar xzf release-1.8.0.tar.gz
+RUN cd /root/downloads && tar xzf release-1.8.0.tar.gz && rm release-1.8.0.tar.gz
 
 #
 # pyang
@@ -150,7 +150,7 @@ RUN cd /root/downloads/pyang && python setup.py install
 # GO
 #
 RUN cd /root/downloads && wget https://redirector.gvt1.com/edgedl/go/go1.9.2.linux-amd64.tar.gz
-RUN cd /root/downloads && tar -C /usr/local -xzf go1.9.2.linux-amd64.tar.gz
+RUN cd /root/downloads && tar -C /usr/local -xzf go1.9.2.linux-amd64.tar.gz && rm go1.9.2.linux-amd64.tar.gz
 RUN mkdir -p /root/go
 ENV PATH=$PATH:/usr/local/go/bin
 ENV GOPATH=/root/go
@@ -186,7 +186,7 @@ RUN cd /root/downloads/opentracing-cpp/.build && make install
 RUN cd /root/downloads && git clone https://github.com/apache/thrift
 RUN cd /root/downloads/thrift && git checkout 0.9.3
 RUN cd /root/downloads/thrift && ./bootstrap.sh
-RUN cd /root/downloads/thrift && ./configure --with-cpp --with-java=no --with-python=no \
+RUN cd /root/downloads/thrift && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --with-cpp --with-java=no --with-python=no \
 --with-lua=no --with-perl=no --enable-shared=yes --enable-static=no --enable-tutorial=no --with-qt4=no
 RUN cd /root/downloads/thrift && make -s
 RUN cd /root/downloads/thrift && make install