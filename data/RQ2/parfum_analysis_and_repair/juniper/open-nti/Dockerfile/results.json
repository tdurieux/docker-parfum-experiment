{
  "startTime": 1674246452634,
  "endTime": 1674246453832,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 8,
        "columnEnd": 132
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 91,
        "lineEnd": 91,
        "columnStart": 8,
        "columnEnd": 132
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 8,
        "columnEnd": 40
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 8,
        "columnEnd": 28
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 8,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 8,
        "columnEnd": 27
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 8,
        "columnEnd": 24
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 8,
        "columnEnd": 34
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 8,
        "columnEnd": 26
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 8,
        "columnEnd": 24
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 8,
        "columnEnd": 39
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 8,
        "columnEnd": 37
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 8,
        "columnEnd": 24
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 11,
        "columnStart": 8,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 24,
        "lineEnd": 39,
        "columnStart": 8,
        "columnEnd": 22
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM phusion/baseimage:0.9.22\nMAINTAINER Damien Garros <dgarros@gmail.com>\n\nRUN     apt-get -y update && \\\n        apt-get -y upgrade && \\\n        apt-get clean   &&\\\n        rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\n# dependencies\nRUN apt-get -y update && \\\n        apt-get -y --no-install-recommends install \\\n        git adduser libfontconfig wget make curl && \\\n        apt-get clean && \\\n        rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\nRUN     rm -f /etc/service/sshd/down\nRUN     /usr/sbin/enable_insecure_key\n\n# Latest version\nENV GRAFANA_VERSION 5.1.3\nENV INFLUXDB_VERSION 1.5.1\nENV TELEGRAF_VERSION 1.5.3-1\n\nRUN apt-get -y update && \\\n        apt-get -y --no-install-recommends install \\\n            build-essential \\\n            python-simplejson \\\n            python-dev \\\n            python-yaml \\\n            python-pip \\\n            python-dev \\\n            libxml2-dev \\\n            libxslt-dev \\\n            tcpdump \\\n            tree \\\n            nginx-light \\\n            snmp \\\n            zlib1g-dev \\\n            libffi-dev \\\n            libssl-dev && \\\n        apt-get clean && \\\n        rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\n\nRUN pip install --no-cache-dir --upgrade setuptools\n\n# # Install some python modules\nRUN pip install --no-cache-dir influxdb && \\\n        pip install --no-cache-dir xmltodict && \\\n        pip install --no-cache-dir pexpect && \\\n        easy_install pysnmp && \\\n        pip install --no-cache-dir lxml && \\\n        pip install --no-cache-dir python-crontab && \\\n        pip install --no-cache-dir pytest && \\\n        pip install --no-cache-dir mock && \\\n        pip install --no-cache-dir cryptography==2.1.2 && \\\n        pip install --no-cache-dir junos-eznc==2.1.7 && \\\n        pip install --no-cache-dir enum\n\nRUN     mkdir /src\n\n########################\n### Install Grafana\n########################\nRUN     mkdir /src/grafana                                                                                    &&\\\n        mkdir /opt/grafana                                                                                    &&\\\n        wget https://s3-us-west-2.amazonaws.com/grafana-releases/release/grafana-${GRAFANA_VERSION}.linux-x64.tar.gz -O /src/grafana.tar.gz &&\\\n        tar -xzf /src/grafana.tar.gz -C /opt/grafana --strip-components=1                                     &&\\\n        rm /src/grafana.tar.gz\n\nRUN     /opt/grafana/bin/grafana-cli plugins install grafana-piechart-panel\n\n########################\n### Install InfluxDB ###\n########################\n\nRUN curl -f -s -o /tmp/influxdb_latest_amd64.deb https://dl.influxdata.com/influxdb/releases/influxdb_${INFLUXDB_VERSION}_amd64.deb && \\\n        dpkg -i /tmp/influxdb_latest_amd64.deb && \\\n        rm /tmp/influxdb_latest_amd64.deb\n\nADD     docker/influxdb/types.db /usr/share/collectd/types.db\nADD     docker/influxdb/influxdb-config.toml /config/config.toml\nADD     docker/influxdb/influxdbrun.sh /influxdbrun.sh\n\nRUN     mkdir /etc/service/influxdb\nADD     docker/influxdb/influxdb.launcher.sh /etc/service/influxdb/run\n\n########################\n### Install telegraf ###\n########################\n\nRUN curl -f -s -o /tmp/telegraf_latest_amd64.deb https://dl.influxdata.com/telegraf/releases/telegraf_${TELEGRAF_VERSION}_amd64.deb && \\\n        dpkg -i /tmp/telegraf_latest_amd64.deb && \\\n        rm /tmp/telegraf_latest_amd64.deb\n\nADD     docker/telegraf/telegraf.conf /etc/telegraf/telegraf.conf\n\nRUN     mkdir /etc/service/telegraf\nADD     docker/telegraf/telegraf.launcher.sh /etc/service/telegraf/run\n\n########################\n### Configuration    ###\n########################\n\n### Configure Grafana ###\nADD     docker/grafana/custom.ini /opt/grafana/conf/custom.ini\nADD     docker/grafana/run.sh /etc/service/grafana/run\n#ADD     docker/grafana/grafana.init.sh /etc/my_init.d/grafana.init.sh\n\n## Add the default dashboards\n#RUN     mkdir /src/dashboards && \\\nRUN      mkdir /opt/grafana/data && \\\n         chown -R www-data /opt/grafana/data\n\n### Configure nginx ###\nADD     docker/nginx/nginx.conf /etc/nginx/nginx.conf\nADD     docker/nginx/run.sh /etc/service/nginx/run\n\n### open-nti python scripts (for gathering informatino from server to router)  ###\nADD     open-nti/open-nti.py /opt/open-nti/open-nti.py\nADD     open-nti/startcron.py /opt/open-nti/startcron.py\nADD     tests/main/pyez_mock.py /opt/open-nti/pyez_mock.py\n\n### Add test files\nRUN     mkdir /opt/open-nti/tests\n\n# ################\n\nRUN     chmod +x /etc/service/nginx/run         &&\\\n        chmod +x /etc/service/grafana/run       &&\\\n        #chmod +x /etc/my_init.d/grafana.init.sh &&\\\n        chmod +x /etc/service/influxdb/run      &&\\\n        chmod +x /etc/service/telegraf/run      &&\\\n        chmod +x /influxdbrun.sh\n\nWORKDIR /\nENV HOME /root\nENV SSL_SUPPORT **False**\nENV SSL_CERT **None**\nRUN chmod -R 777 /var/log/\n\n# ## Graphana\nEXPOSE 80\nEXPOSE 3000\n\n# # Influxdb Admin server WebUI\nEXPOSE 8083\nEXPOSE 8086\n\nCMD [\"/sbin/my_init\"]\n"
}