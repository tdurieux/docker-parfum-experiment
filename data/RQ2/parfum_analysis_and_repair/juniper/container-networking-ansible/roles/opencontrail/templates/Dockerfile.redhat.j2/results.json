{
  "startTime": 1674248000112,
  "endTime": 1674248001000,
  "originalSmells": [
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 68
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 88
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 24
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM {{ ansible_distribution | lower }}:{{ ansible_distribution_major_version }}\n{%if opencontrail_build_http_proxy %}\nRUN sh -c \"echo proxy={{ opencontrail_build_http_proxy }}\" >> /etc/yum.conf\n{% endif %}\nRUN {{ ansible_pkg_mgr }} install -y git make\n{%if opencontrail_build_http_proxy %}\nRUN git config --global http.proxy {{ opencontrail_build_http_proxy }}\nRUN git config --global https.proxy {{ opencontrail_build_http_proxy }}\n{% endif %}\nRUN {{ ansible_pkg_mgr }} install -y automake flex bison gcc gcc-c++ boost boost-devel libxml2-devel python-lxml\nRUN yum install -y yum-utils && rm -rf /var/cache/yum\n# When the running system is an older version compared to the container install the vault repository\nRUN release=$(awk '{print $4;}' /etc/redhat-release); if [ $release != \"{{ ansible_distribution_version }} \" ]; then yum-config-manager --enable C{{ ansible_distribution_version }}-base; fi\n# On centos the kernel package name does not match the kernel name\nRUN yum install -y kernel-devel-{{ opencontrail_host_kernel_devel }} && rm -rf /var/cache/yum\n{% if ansible_distribution != \"Fedora\" %}\nRUN yum -y install http://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm && rm -rf /var/cache/yum\n{% endif %}\nRUN {{ ansible_pkg_mgr }} install -y scons\nRUN mkdir -p src/vrouter\nWORKDIR src/vrouter\nRUN git clone -b R2.20 https://github.com/Juniper/contrail-vrouter vrouter\nRUN mkdir tools\nRUN (cd tools && git clone https://github.com/Juniper/contrail-build build)\nRUN (cd tools && git clone -b R2.20 https://github.com/Juniper/contrail-sandesh sandesh)\nRUN cp tools/build/SConstruct .\n{% if opencontrail_host_kmod_patches is defined %}\nRUN yum install -y patch && rm -rf /var/cache/yum\n{% for patch in opencontrail_host_kmod_patches %}\nADD \"{{ patch }}\" /src/vrouter/vrouter/\nRUN (cd vrouter && patch -p1 -i \"{{ patch }}\")\n{% endfor %}\n{% endif %}"
}