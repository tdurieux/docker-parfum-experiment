{
  "startTime": 1674220390703,
  "endTime": 1674220391693,
  "originalSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 25,
        "lineEnd": 26,
        "columnStart": 7,
        "columnEnd": 75
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 12,
        "columnStart": 25,
        "columnEnd": 31
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 25,
        "lineEnd": 26,
        "columnStart": 7,
        "columnEnd": 75
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 25,
        "columnEnd": 80
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 25,
        "lineEnd": 26,
        "columnStart": 7,
        "columnEnd": 75
      }
    }
  ],
  "repairedDockerfile": "# Copyright (c) 2018, Juniper Networks, Inc.\n# All rights reserved.\n\nFROM ubuntu:14.04\n\nRUN export DEBIAN_FRONTEND=noninteractive \\\n    && dpkg --add-architecture i386 \\\n    && apt-get update && apt-get install -y -q qemu-kvm qemu-utils dosfstools pwgen \\\n        openssh-client bridge-utils ethtool bsdmainutils wget ca-certificates patch \\\n        netbase rsh-client psmisc libpcap0.8 iputils-arping tcpdump macchanger \\\n        util-linux libc6:i386 libncurses5:i386 libstdc++6:i386 gettext-base bc \\\n        sudo pciutils \\\n        --no-install-recommends \\\n    && echo \"dash dash/sh boolean false\" | debconf-set-selections \\\n    && dpkg-reconfigure dash \\\n    && ln -sf /usr/lib/x86_64-linux-gnu/libpcap.so.1.5.3 /usr/lib/x86_64-linux-gnu/libpcap.so.1 \\\n    && mv /usr/sbin/tcpdump /sbin/ \\\n    && mkdir -p /home/pfe/junos /home/pfe/riot /usr/share/pfe /etc/riot /etc/vmxt \\\n    && mkdir -p /var/pfe /var/riot /var/jnx /var/tmp/vmx /var/tmp/gcov \\\n    && touch /etc/riot/runtime.conf && rm -rf /var/lib/apt/lists/*;\n\n# Required for docker client, so we can fix the network interface ordering issue,\n# documented in https://github.com/docker/compose/issues/4645\n\nRUN export DEBIAN_FRONTEND=noninteractive \\\n    && apt-get install -y -q --no-install-recommends \\\n        apt-transport-https ca-certificates curl software-properties-common \\\n    && curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add - \\\n    && add-apt-repository \\\n       \"deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs)  stable\" \\\n    && apt-get update && apt-get -y -q --no-install-recommends install docker-ce && rm -rf /var/lib/apt/lists/*;\n\nCOPY riot.patch create_config_drive.sh launch.sh \\\n  create_apply_group.sh create_ephemeral_db.sh \\\n  system_check.sh start_pfe.sh fix_network_order.sh update_core_mapping.sh /\n\nCOPY riot_init.conf /etc/riot/\nCOPY vmxt_init.conf /etc/vmxt/\n\nRUN chmod a+rx /*.sh\n\nVOLUME /u /var/run/docker.sock\n\nEXPOSE 22\nEXPOSE 830\n\nENTRYPOINT [\"/launch.sh\"]\n"
}