{
  "startTime": 1674216561195,
  "endTime": 1674216562466,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 11,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 57
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 154
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# FROM jinwoo/centosbase:7\nFROM centos:7\nLABEL maintainer=\"JINWOO <jinwoo@iconloop.com>\"\n\nENV TZ \"Asia/Seoul\"\nENV TERM \"xterm-256color\"\nENV USERID 24988\n#RUN unset VERSION\n#RUN unset NAME\n#RUN unset PS1\n#ENV APP_VERSION $APP_VERSION\n#ENV VERSION $VERSION\n#ENV NAME $NAME\n#ENV APP $APP\n\nENV LANG=\"en_US.UTF-8\"\nENV LC_ALL=\"en_US.UTF-8\"\n# if you ignore certificate validation\n#ENV PIP_TRUST_OPT \"--trusted-host=pypi.org --trusted-host=pypi.python.org --trusted-host=files.pythonhosted.org\"\nENV YUM_COMPILIE=\" gcc-c++ gcc autoconf make automake git nc net-tools \\\n                   iproute ntpdate  moreutils jq libtool unzip lsof libffi-devel openssl-devel \\\n                   python36.x86_64 python36-libs.x86_64 python36-devel.x86_64 python36-tools.x86_64 file\"\n\nARG NAME=\"prep-node\"\nARG ICON_RC_VERSION\nARG DOWNLOAD_PACKAGE\nARG APP_VERSION\nARG VERSION\nARG DOWNLOAD_PACKAGE=$DOWNLOAD_PACKAGE\nARG RABBITMQ_VERSION=\"3.7.17\"\nARG GO_VERSION=\"1.12.7\"\nARG DOCKERIZE_VERSION=\"v0.6.1\"\n\nENV APP_VERSION ${NAME}_${VERSION}\nENV RABBITMQ_VERSION $RABBITMQ_VERSION\nENV GO_VERSION $GO_VERSION\nENV DOCKERIZE_VERSION $DOCKERIZE_VERSION\n\nENV APP_DIR \"prep_peer\"\n\nCOPY src /src\nRUN sed -i 's/enabled\\=1/enabled\\=0/g' /etc/yum/pluginconf.d/fastestmirror.conf\nRUN echo \"sslverify=false\" >> /etc/yum.conf\nRUN yum install -y epel-release && rm -rf /var/cache/yum\nRUN yum install -y ${YUM_COMPILIE} && rm -rf /var/cache/yum\nRUN curl -f -k https://bootstrap.pypa.io/get-pip.py -o get-pip.py; python get-pip.py; python get-pip.py\nRUN curl -f -k https://bootstrap.pypa.io/get-pip.py -o get-pip.py; python3.6 get-pip.py; python3.6 get-pip.py\n#https://www.rabbitmq.com/install-rpm.html#package-dependencies\nRUN yum install -y /src/erlang-solutions-1.0-1.noarch.rpm && rm -rf /var/cache/yum\n#RUN yum install -y /src/rabbitmq-server-3.7.7-1.el7.noarch.rpm\nRUN yum install -y https://github.com/rabbitmq/rabbitmq-server/releases/download/v${RABBITMQ_VERSION}/rabbitmq-server-${RABBITMQ_VERSION}-1.el7.noarch.rpm && rm -rf /var/cache/yum\n# RUN cp -rf /bin/python3.6 /bin/python3\n\nCOPY src/pip.conf /etc/\nRUN rm -rf $APP_DIR/*\nRUN mkdir -p $APP_DIR/whl\nRUN mkdir -p $APP_DIR/cert\nCOPY conf $APP_DIR/conf\nCOPY conf $APP_DIR/conf_back\nRUN if [ \"x$DOWNLOAD_PACKAGE\" != \"x\" ] ; then  \\\n        ls /$APP_DIR/whl/ ; \\\n        wget $DOWNLOAD_PACKAGE -O /$APP_DIR/whl/DOWNLOAD.tar.gz ; \\        \n        tar zxvf /$APP_DIR/whl/*.gz --strip 1 -C /$APP_DIR/whl/  ; \\\n    fi\nRUN pip install --no-cache-dir --upgrade pip\nRUN WHL_LIST=`find /$APP_DIR/ -name \"*.whl\"` && \\\n    for FILE in $WHL_LIST; do \\\n    \n        pip3 install --no-cache-dir $FILE; \\\n        if [ $? != 0 ]; \\\n            then exit 127; \\\n        fi; \\\n       done\nRUN pip3 install --no-cache-dir tbears iconsdk\nRUN wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz \\  \n    && tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz \\\n    && rm -f dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz\n\nENV GOPATH=/go \\\n    GOROOT=/usr/local/go\nENV PATH $GOROOT/bin:$GOPATH:$PATH\n\nRUN wget https://dl.google.com/go/go${GO_VERSION}.linux-amd64.tar.gz && \\\n    tar zxf go${GO_VERSION}.linux-amd64.tar.gz && \\\n    rm go${GO_VERSION}.linux-amd64.tar.gz && \\\n    mv go /usr/local/  && \\\n    git clone https://github.com/icon-project/rewardcalculator && \\\n    cd rewardcalculator && \\\n    git checkout ${ICON_RC_VERSION}  && \\\n    make linux && \\\n    make install DST_DIR=/usr/local/bin && \\\n    cd .. && rm -rf rewardcalculator /usr/local/go\nRUN echo 'export PS1=\" \\[\\e[00;32m\\]${APP_VERSION}\\[\\e[0m\\]\\[\\e[00;37m\\]@\\[\\e[0m\\]\\[\\e[00;31m\\]\\H :\\\\$\\[\\e[0m\\] \"' >> /root/.bashrc\n\nEXPOSE 9000\nEXPOSE 7100\n\nHEALTHCHECK --retries=4 --interval=30s --timeout=20s --start-period=60s \\  \n    CMD python3 /src/healthcheck.py\n\nENTRYPOINT [ \"/src/entrypoint.sh\" ]"
}