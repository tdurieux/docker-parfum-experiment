{
  "startTime": 1674216819415,
  "endTime": 1674216820195,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 11,
        "columnEnd": 30
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG BASE_IMAGE\nFROM ${BASE_IMAGE} AS build_stage\nARG BUILD_DATE\nARG VERSION\nARG NAME\nARG TAGNAME\nARG IS_STATIC=$IS_STATIC\n\nLABEL org.label-schema.build-date=$BUILD_DATE \\\n      org.label-schema.version=$VERSION \\\n      org.label-schema.is_static=$IS_STATIC\n\nENV TZ=\"Asia/Seoul\"  \\\n    TERM=\"xterm-256color\" \\\n    USERID=24988 \\\n    APP_DIR=\"prep_peer\" \\\n    APP_VERSION=${NAME}_${TAGNAME} \\\n    GOPATH=/go \\\n    GOROOT=/usr/local/go \\\n    PATH=$GOROOT/bin:$GOPATH:/src/:$PATH \\\n    IS_LOCAL=true \\\n    INSTALL_PACKAGE=\"make gcc libssl-dev zlib1g-dev \\\n    libbz2-dev libreadline-dev libsqlite3-dev \\\n    wget curl llvm libncurses5-dev libncursesw5-dev \\\n    xz-utils tk-dev libffi-dev liblzma-dev automake \\\n    libtool unzip jq netcat moreutils libsecp256k1-dev \\\n    git gnupg2 socat ntp  logrotate ntpdate vim procps \\\n    iproute2 lsof jq pigz axel monit gawk libcurl4-openssl-dev\" \\\n    ERLANG_PACKAGE=\"erlang-base erlang-asn1 erlang-crypto \\\n    erlang-eldap erlang-ftp erlang-inets \\\n    erlang-mnesia erlang-os-mon erlang-parsetools \\\n    erlang-public-key  erlang-runtime-tools erlang-snmp \\\n    erlang-ssl  erlang-syntax-tools erlang-tftp \\\n    erlang-tools erlang-xmerl\"\\\n    DELETE_PACKAGE=\"gcc gcc-6 g++* g++-6* make git automake\"\\\n    S6_KILL_FINISH_MAXTIME=10000 \\\n    PYTHONUNBUFFERED=1\n\nCOPY src /src\nCOPY src/pip.conf /etc/\nCOPY conf $APP_DIR/conf\nRUN echo \"IS_STATIC = $IS_STATIC\"; \\\n    echo \"Starting static build\" ; \\\n    /usr/local/bin/python -m pip install --upgrade pip ; \\\n    /src/static_builder.py -o /${APP_DIR}/whl ; \\\n    WHL_LIST=`find /$APP_DIR/ -name \"*.whl\"` && \\\n    ICON_RC=`find /$APP_DIR/ -name \"icon_rc\"` && \\\n    if [ \"x${ICON_RC}\" != \"x\" ]; then \\\n        cp $ICON_RC /usr/local/bin  || exit 1;\\\n    fi; \\\n    if [ ! -f \"/usr/local/bin/icon_rc\" ]; then \\\n        echo \"icon_rc not found\"; \\\n        exit 127;\\\n    fi; \\\n    for FILE in $WHL_LIST; do \\\n    \n        pip3 install --no-cache-dir $FILE; \\\n        if [ $? != 0 ]; \\\n            then exit 127; \\\n        fi; \\\n       done \\\n    ;\n#FROM python:3.7.3-slim-stretch\n#COPY --from=build_stage /usr/bin /usr/bin\n#COPY --from=build_stage /lib /lib\n#COPY --from=build_stage /usr/lib /usr/lib\n#COPY --from=build_stage /usr/sbin /usr/sbin\n#COPY --from=build_stage /usr/local/bin /usr/local/bin\n#COPY --from=build_stage /usr/local/lib/python3.7 /usr/local/lib/python3.7\n#COPY --from=build_stage /prep_peer /prep_peer\n#COPY --from=build_stage /src /src\n\nADD https://github.com/just-containers/s6-overlay/releases/download/v2.2.0.1/s6-overlay-amd64-installer /tmp/\nRUN chmod +x /tmp/s6-overlay-amd64-installer && /tmp/s6-overlay-amd64-installer /\nRUN cp /src/graceful_shutdown.sh /etc/cont-finish.d/\n\nEXPOSE 9000\nEXPOSE 7100\nHEALTHCHECK --retries=4 --interval=30s --timeout=20s --start-period=60s \\\n    CMD python3 /src/healthcheck.py\nRUN echo 'export PS1=\" \\[\\e[00;32m\\]${APP_VERSION}\\[\\e[0m\\]\\[\\e[00;37m\\]@\\[\\e[0m\\]\\[\\e[00;31m\\]\\H :\\\\$\\[\\e[0m\\] \"' >> /root/.bashrc\nENTRYPOINT [ \"/src/entrypoint.sh\" ]\n\n"
}