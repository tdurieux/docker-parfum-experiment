{
  "startTime": 1674218375711,
  "endTime": 1674218376903,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 113,
        "lineEnd": 113,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 96,
        "lineEnd": 96,
        "columnStart": 11,
        "columnEnd": 30
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 4,
        "columnEnd": 124
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 4,
        "columnEnd": 35
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 4,
        "columnEnd": 59
      }
    }
  ],
  "repairedDockerfile": "FROM arm64v8/python:3.7\nARG BUILD_DATE\nARG VCS_REF\nARG VERSION\nLABEL maintainer=\"JINWOO <jinwoo@iconloop.com>\" \\\n      org.label-schema.build-date=$BUILD_DATE \\\n      org.label-schema.name=\"prep-node\" \\\n      org.label-schema.description=\"This project was created to help ICON's PRep-node.\" \\\n      org.label-schema.url=\"https://www.iconloop.com/\" \\\n      org.label-schema.vcs-ref=$VCS_REF \\\n      org.label-schema.vcs-url=\"https://github.com/jinwoo-j/prep_docker\" \\\n      org.label-schema.vendor=\"ICONLOOP Inc.\" \\\n      org.label-schema.version=$VERSION \\\n      org.label-schema.schema-version=\"1.0\"\nARG ICON_RC_VERSION\nARG DOWNLOAD_PACKAGE\nARG NAME\nARG TAGNAME\nARG IS_LOCAL\nARG IS_STATIC_BUILD\nARG DOWNLOAD_PACKAGE=$DOWNLOAD_PACKAGE\nARG RABBITMQ_VERSION=\"3.7.17\"\nARG GO_VERSION=\"1.12.7\"\nARG DOCKERIZE_VERSION=\"v0.6.1\"\nARG REMOVE_BUILD_PACKAGE=\"true\"\nENV TZ=\"Asia/Seoul\"  \\\n    TERM=\"xterm-256color\" \\\n    USERID=24988 \\\n    APP_DIR=\"prep_peer\" \\\n    APP_VERSION=${NAME}_${TAGNAME} \\\n    RABBITMQ_VERSION=$RABBITMQ_VERSION \\\n    GO_VERSION=$GO_VERSION \\\n    DOCKERIZE_VERSION=$DOCKERIZE_VERSION \\\n    GOPATH=/go \\\n    GOROOT=/usr/local/go \\\n    PATH=$GOROOT/bin:$GOPATH:/src/:$PATH \\\n    INSTALL_PACKAGE=\"make gcc libssl-dev zlib1g-dev \\\n    libbz2-dev libreadline-dev libsqlite3-dev \\\n    wget curl llvm libncurses5-dev libncursesw5-dev \\\n    xz-utils tk-dev libffi-dev liblzma-dev automake \\\n    libtool unzip jq netcat moreutils libsecp256k1-dev \\\n    git gnupg2 socat ntp  logrotate ntpdate vim procps \\\n    iproute2 lsof jq pigz axel gawk libcurl4-openssl-dev rabbitmq-server libleveldb-dev\" \\\n    DELETE_PACKAGE=\"gcc gcc-6 g++* g++-6* make git automake\" \\\n    PIP3_PACKAGE=\"secp256k1 tbears iconsdk python-hosts halo termcolor pycurl\" \\\n    IS_STATIC_BUILD=${IS_STATIC_BUILD} \\\n    REMOVE_BUILD_PACKAGE=${REMOVE_BUILD_PACKAGE}\n\nCOPY src /src\nCOPY src/pip.conf /etc/\nCOPY src/erlang /etc/apt/preferences.d/erlang\nCOPY conf $APP_DIR/conf\nRUN ln -s /usr/local/bin/python3.7 /usr/local/bin/python3.6 ; \\\n    if [ \"${IS_LOCAL}\" = \"true\" ]; then \\\n        echo \"-- KR mirror\" ;\\\n#        sed -i.bak -re \"s/([a-z]{2}.)?archive.ubuntu.com|security.ubuntu.com|deb.debian.org|security\\-cdn.debian.org|security.debian.org/mirror.kakao.com/g\" /etc/apt/sources.list; \\\n    else \\\n        echo \"-- Global mirror\" ;\\\n        rm -f /etc/pip.conf ; \\\n    fi; \\\n    mkdir -p /usr/share/man/man1 /usr/share/man/man7 && \\\n    apt update && \\\n    apt install --no-install-recommends -y $INSTALL_PACKAGE && \\\n    dpkg -i /src/erlang-solutions_1.0_all.deb || exit 1; \\\n#    # Fix mirror for erlang\n#    echo \"99.84.224.112 binaries.erlang-solutions.com \">> /etc/hosts ;\\\n    git clone https://github.com/jonasnick/secp256k1.git libsecp256k1 ; \\\n    cd libsecp256k1  && \\\n    ./autogen.sh && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-tests=no --enable-benchmark=no --enable-experimental --enable-module-ecdh --enable-module-recovery && \\\n    make -j$(nproc) && make install && \\\n    rm -rf libsecp256k1 && \\\n    mkdir -p $APP_DIR && \\\n    mkdir -p $APP_DIR/whl && \\\n    mkdir -p $APP_DIR/cert && \\\n    pip install --no-cache-dir --upgrade pip && \\\n    pip install --no-cache-dir $PIP3_PACKAGE && \\\n    if [ \"$IS_STATIC_BUILD\" = \"true\" ];then \\\n        echo \"start static build\" ;\\\n        /src/static_builder.py -o /${APP_DIR}/whl ;\\\n    elif [ \"x$DOWNLOAD_PACKAGE\" != \"x\" ]; then  \\\n        ls /$APP_DIR/whl/ ; \\\n        wget $DOWNLOAD_PACKAGE -O /$APP_DIR/whl/DOWNLOAD.tar.gz || exit 1; \\\n        tar zxvf /$APP_DIR/whl/*.gz --strip 1 -C /$APP_DIR/whl/ ; \\\n#        cp /$APP_DIR/whl/icon_rc /usr/local/bin ; \\\n    fi; \\\n    WHL_LIST=`find /$APP_DIR/ -name \"*.whl\"` && \\\n    ICON_RC=`find /$APP_DIR/ -name \"icon_rc\"` && \\\n    if [ \"x${ICON_RC}\" != \"x\" ]; then \\\n        cp $ICON_RC /usr/local/bin  || exit 1;\\\n    fi; \\\n    if [ ! -f \"/usr/local/bin/icon_rc\" ]; then \\\n        echo \"icon_rc not found\"; \\\n        exit 127;\\\n    fi; \\\n    for FILE in $WHL_LIST; do \\\n    \n        pip3 install --no-cache-dir $FILE; \\\n        if [ $? != 0 ]; \\\n            then exit 127; \\\n        fi; \\\n       done \\\n    && \\\n    if [ \"x$RC_BUILD\" != \"x\" ];then \\\n        wget https://dl.google.com/go/go${GO_VERSION}.linux-arm64.tar.gz ; \\\n        tar zxf go${GO_VERSION}.linux-arm64.tar.gz ; \\\n        rm go${GO_VERSION}.linux-arm64.tar.gz ; \\\n        mv go /usr/local/ ; \\\n        git clone https://github.com/icon-project/rewardcalculator ; \\\n        cd rewardcalculator ; \\\n        git checkout ${ICON_RC_VERSION} ; \\\n        make linux ; \\\n        make install DST_DIR=/usr/local/bin ; \\\n        cd .. && rm -rf rewardcalculator /usr/local/go ; \\\n    fi; \\\n    pip3 install --no-cache-dir msgpack==0.6.2; \\\n    if [ \"$REMOVE_BUILD_PACKAGE\" = \"true\" ]; then \\\n        apt-get purge -y --auto-remove $DELETE_PACKAGE && \\\n        rm -rf /var/lib/apt/lists/* ; \\\n        #TODO CHANGE temporary function\n        rm -rf /build ;\\\n    fi;\n\n\n\nEXPOSE 9000\nEXPOSE 7100\nHEALTHCHECK --retries=4 --interval=30s --timeout=20s --start-period=60s \\\n    CMD python3 /src/healthcheck.py\nRUN echo 'export PS1=\" \\[\\e[00;32m\\]${APP_VERSION}\\[\\e[0m\\]\\[\\e[00;37m\\]@\\[\\e[0m\\]\\[\\e[00;31m\\]\\H :\\\\$\\[\\e[0m\\] \"' >> /root/.bashrc\nENTRYPOINT [ \"/src/entrypoint.sh\" ]\n"
}