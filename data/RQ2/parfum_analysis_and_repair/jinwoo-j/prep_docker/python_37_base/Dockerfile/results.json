{
  "startTime": 1674248273549,
  "endTime": 1674248274923,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 83,
        "lineEnd": 83,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 84,
        "lineEnd": 84,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 4,
        "columnEnd": 38
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 4,
        "columnEnd": 62
      }
    }
  ],
  "repairedDockerfile": "FROM python:3.7.3-slim-stretch\nARG BUILD_DATE\nARG VCS_REF\nARG VERSION\nARG REMOVE_BUILD_PACKAGE=\"true\"\nLABEL maintainer=\"JINWOO <jinwoo@iconloop.com>\" \\\n      org.label-schema.build-date=$BUILD_DATE \\\n      org.label-schema.name=\"prep-node\" \\\n      org.label-schema.description=\"This project was created to help ICON's PRep-node.\" \\\n      org.label-schema.url=\"https://www.iconloop.com/\" \\\n      org.label-schema.vcs-ref=$VCS_REF \\\n      org.label-schema.vcs-url=\"https://github.com/jinwoo-j/prep_docker\" \\\n      org.label-schema.vendor=\"ICONLOOP Inc.\" \\\n      org.label-schema.version=$VERSION \\\n      org.label-schema.schema-version=\"1.0\"\nARG ICON_RC_VERSION\nARG DOWNLOAD_PACKAGE\nARG NAME\nARG TAGNAME\nARG IS_LOCAL\nARG IS_STATIC_BUILD\nARG DOWNLOAD_PACKAGE=$DOWNLOAD_PACKAGE\nARG RABBITMQ_VERSION=\"3.7.17\"\nARG GO_VERSION=\"1.12.7\"\nARG DOCKERIZE_VERSION=\"v0.6.1\"\nENV TZ=\"Asia/Seoul\"  \\\n    TERM=\"xterm-256color\" \\\n    USERID=24988 \\\n    APP_DIR=\"prep_peer\" \\\n    APP_VERSION=${NAME}_${TAGNAME} \\\n    RABBITMQ_VERSION=$RABBITMQ_VERSION \\\n    GO_VERSION=$GO_VERSION \\\n    DOCKERIZE_VERSION=$DOCKERIZE_VERSION \\\n    GOPATH=/go \\\n    GOROOT=/usr/local/go \\\n    PATH=$GOROOT/bin:$GOPATH:/src/:$PATH \\\n    INSTALL_PACKAGE=\"make gcc libssl-dev zlib1g-dev \\\n    libbz2-dev libreadline-dev libsqlite3-dev \\\n    wget curl llvm libncurses5-dev libncursesw5-dev \\\n    xz-utils tk-dev libffi-dev liblzma-dev automake \\\n    libtool unzip jq netcat moreutils libsecp256k1-dev \\\n    git gnupg2 socat ntp  logrotate ntpdate vim procps \\\n    iproute2 lsof jq pigz axel monit gawk libcurl4-openssl-dev\" \\\n    ERLANG_PACKAGE=\"erlang-base erlang-asn1 erlang-crypto \\\n    erlang-eldap erlang-ftp erlang-inets \\\n    erlang-mnesia erlang-os-mon erlang-parsetools \\\n    erlang-public-key  erlang-runtime-tools erlang-snmp \\\n    erlang-ssl  erlang-syntax-tools erlang-tftp \\\n    erlang-tools erlang-xmerl\"\\\n    DELETE_PACKAGE=\"gcc gcc-6 g++* g++-6* make git automake\" \\\n    PIP3_PACKAGE=\"iconsdk python-hosts halo termcolor pycurl secp256k1==0.13.2 cryptography==2.8\" \\\n    IS_STATIC_BUILD=${IS_STATIC_BUILD} \\\n    REMOVE_BUILD_PACKAGE=${REMOVE_BUILD_PACKAGE}\n\nCOPY src /src\nCOPY src/pip.conf /etc/\nCOPY src/erlang /etc/apt/preferences.d/erlang\nCOPY conf $APP_DIR/conf\nRUN ln -s /usr/local/bin/python3.7 /usr/local/bin/python3.6 ; \\\n    if [ \"${IS_LOCAL}\" = \"true\" ]; then \\\n        echo \"-- KR mirror\" ;\\\n#        sed -i.bak -re \"s/([a-z]{2}.)?archive.ubuntu.com|security.ubuntu.com|deb.debian.org|security\\-cdn.debian.org|security.debian.org/mirror.kakao.com/g\" /etc/apt/sources.list; \\\n        sed -i.bak -re \"s/([a-z]{2}.)?archive.ubuntu.com|security.ubuntu.com|deb.debian.org|security\\-cdn.debian.org/mirror.kakao.com/g\" /etc/apt/sources.list; \\\n    else \\\n        echo \"-- Global mirror\" ;\\\n        rm -f /etc/pip.conf ; \\\n    fi; \\\n    mkdir -p /usr/share/man/man1 /usr/share/man/man7 && \\\n    apt update && \\\n    apt install --no-install-recommends -y $INSTALL_PACKAGE && \\\n    dpkg -i /src/erlang-solutions_1.0_all.deb || exit 1; rm -rf /var/lib/apt/lists/*; \\\n    if [ ! -f \"/src/rabbitmq-server_${RABBITMQ_VERSION}-1_all.deb\" ]; then \\\n        wget https://github.com/rabbitmq/rabbitmq-server/releases/download/v${RABBITMQ_VERSION}/rabbitmq-server_${RABBITMQ_VERSION}-1_all.deb -P /src/ ; \\\n    fi; \\\n#    # Fix mirror for erlang\n#    echo \"99.84.224.112 binaries.erlang-solutions.com \">> /etc/hosts ;\\\n    apt update && \\\n    apt-get install --no-install-recommends -y $ERLANG_PACKAGE && \\\n    dpkg -i /src/rabbitmq-server_${RABBITMQ_VERSION}-1_all.deb || exit 1; \\\n    rm -f /src/rabbitmq-server* ; \\\n    mkdir -p $APP_DIR && \\\n    mkdir -p $APP_DIR/whl && \\\n    mkdir -p $APP_DIR/cert && \\\n    pip install --no-cache-dir --upgrade pip && \\\n    pip install --no-cache-dir $PIP3_PACKAGE && \\\n    wget https://dl.google.com/go/go${GO_VERSION}.linux-amd64.tar.gz; \\\n    tar zxf go${GO_VERSION}.linux-amd64.tar.gz ; \\\n    rm go${GO_VERSION}.linux-amd64.tar.gz ; \\\n    mv go /usr/local/\n\nEXPOSE 9000\nEXPOSE 7100\nHEALTHCHECK --retries=4 --interval=30s --timeout=20s --start-period=60s \\\n    CMD python3 /src/healthcheck.py\nRUN echo 'export PS1=\" \\[\\e[00;32m\\]${APP_VERSION}\\[\\e[0m\\]\\[\\e[00;37m\\]@\\[\\e[0m\\]\\[\\e[00;31m\\]\\H :\\\\$\\[\\e[0m\\] \"' >> /root/.bashrc\n#ENTRYPOINT [ \"/src/entrypoint.sh\" ]\n"
}