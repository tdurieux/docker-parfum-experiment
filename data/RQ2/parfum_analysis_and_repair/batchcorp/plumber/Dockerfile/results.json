{
  "startTime": 1674249908745,
  "endTime": 1674249909819,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 46
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# This Dockerfile utilizes a multi-stage builds\nARG ALPINE_VERSION=3.12\n\nFROM golang:1.16-alpine$ALPINE_VERSION AS builder\n\n# Install necessary build tools\nRUN apk --update --no-cache add make bash curl git\n\n# Switch workdir, otherwise we end up in /go (default)\nWORKDIR /\n\n# Copy everything into build container\nCOPY . .\n\n# Build the application\nRUN make build/linux\n\n# Now in 2nd build stage\nFROM library/alpine:$ALPINE_VERSION\n\n# Necessary depedencies\nRUN apk --update --no-cache add bash curl ca-certificates && update-ca-certificates\n\n# Install binary\nCOPY --from=builder /build/plumber-linux /plumber-linux\nCOPY --from=builder /docker-entrypoint.sh /docker-entrypoint.sh\nRUN ln -s /plumber-linux /usr/bin/plumber\n\nENTRYPOINT [\"/docker-entrypoint.sh\"]\n\nCMD [\"/plumber-linux\", \"server\"]\n"
}