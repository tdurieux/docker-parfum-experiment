{
  "startTime": 1674254115287,
  "endTime": 1674254116366,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 5,
        "columnEnd": 16
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 6
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:20.04\n\nARG SQUIDCLAMAV_GIT_URL=https://github.com/darold/squidclamav.git\nARG DEBIAN_FRONTEND=noninteractive\n\nRUN apt-get update \\\n\t&& apt-get install -y --no-install-recommends \\\n\t\tgit \\\n\t\tc-icap \\\n\t\tca-certificates \\\n\t\tpatch \\\n\t\tlibicapapi5 \\\n\t\tlibicapapi-dev \\\n\t\tlibc-icap-mod-virus-scan \\\n\t\tlibc-dev \\\n\t\tlibssl-dev \\\n\t\tgcc \\\n\t\tmake \\\n\t\tfile \\\n\t&& apt-mark auto \\\n\t\tgit \\\n\t\tca-certificates \\\n\t\tpatch \\\n\t\tlibicapapi-dev \\\n\t\tlibc-dev \\\n\t\tgcc \\\n\t\tmake \\\n\t\tfile \\\n\\\n\t&& git clone --recursive \"${SQUIDCLAMAV_GIT_URL}\" \"/usr/src/squidclamav\" \\\n\t&& ( cd /usr/src/squidclamav \\\n\t\t&& ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n\t\t&& make -j$(nproc) \\\n\t\t&& make install) \\\n\n\t&& rm -rf /usr/src/squidclamav \\\n\n\t&& apt-get autoremove --purge -y \\\n\t&& apt-get clean \\\n\t&& rm -rf /var/tmp/* /tmp/* /var/lib/apt/cache/* \\\n\n&& sed -i 's,clamd_local ,#clamd_local ,' /etc/c-icap/squidclamav.conf \\\n\t&& sed -i 's,#clamd_ip .\\+,clamd_ip clamav,' /etc/c-icap/squidclamav.conf \\\n\t&& sed -i 's,#clamd_port ,clamd_port ,' /etc/c-icap/squidclamav.conf \\\n\t&& (echo \"acl all src 0.0.0.0/0.0.0.0\" \\\n\t\t&& echo \"icap_access allow all\" \\\n\t\t&& echo \"Include virus_scan.conf\") >> /etc/c-icap/c-icap.conf \\\n\n&& echo \"Include clamav_mod.conf\" >> /etc/c-icap/virus_scan.conf \\\n\n&& freshclam && rm -rf /var/lib/apt/lists/*;\n\nCOPY entrypoint.sh /usr/local/bin/docker-entrypoint\nRUN chmod +x /usr/local/bin/* \\\n\t&& sed -i 's,\\r,,g' /usr/local/bin/*\n\nENTRYPOINT [\"docker-entrypoint\"]\n"
}