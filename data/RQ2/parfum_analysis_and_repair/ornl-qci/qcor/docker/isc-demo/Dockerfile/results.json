{
  "startTime": 1674250415711,
  "endTime": 1674250416311,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 7,
        "columnStart": 25,
        "columnEnd": 69
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 22,
        "columnEnd": 80
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 7,
        "columnStart": 25,
        "columnEnd": 69
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 22,
        "columnEnd": 80
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:18.04\n\nENV DEBIAN_FRONTEND noninteractive\n\n#Common deps\nRUN apt-get -y update && apt-get -y --no-install-recommends install vim curl xz-utils \\\n      wget gpg software-properties-common git libblas-dev liblapack-dev \\\n      gcc g++ libcurl4-openssl-dev libpython3-dev python3 python3-pip && rm -rf /var/lib/apt/lists/*;\n\nRUN wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \\\n    echo \"deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic main\" > /etc/apt/sources.list.d/llvm.list && \\\n    apt-get update && apt-get install --no-install-recommends -y clang-tools-9 libclang-9-dev llvm-9-dev && \\\n    ln -s /usr/bin/clangd-9 /usr/bin/clangd && \\\n    ln -s /usr/bin/llvm-config-9 /usr/bin/llvm-config && rm -rf /var/lib/apt/lists/*;\n\nRUN python3 -m pip install cmake pyquil numpy ipopo\n\nRUN git clone --recursive https://github.com/eclipse/xacc && cd xacc && mkdir build && cd build \\\n    && cmake .. -DPYTHON_INCLUDE_DIR=/usr/include/python3.6m -DPYTHON_LIBRARY=/usr/lib/x86_64-linux-gnu/libpython3.6m.so \\\n    && make -j2 install\n\nRUN git clone --recursive https://code.ornl.gov/qci/qcor && cd qcor && mkdir build && cd build \\\n    && cmake .. -DXACC_DIR=/root/.xacc && make -j2 install\n\nRUN echo \"export PATH=$PATH:/root/.xacc/bin\" >> /root/.bashrc\nRUN echo \"export PYTHONPATH=$PYTHONPATH:/root/.xacc\" >> /root/.bashrc\nADD .forest_config /root/"
}