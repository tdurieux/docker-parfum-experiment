{
  "startTime": 1674254648026,
  "endTime": 1674254648667,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 46
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# SPDX-FileCopyrightText: 2017-2021 City of Espoo\n#\n# SPDX-License-Identifier: LGPL-2.1-or-later\n\nARG BASE_IMAGE=library/postgres\nARG BASE_IMAGE_VERSION=14-alpine\n\n\nFROM ${BASE_IMAGE}:${BASE_IMAGE_VERSION} AS ext_builder\n# Extension whitelisting to simulate the RDS behaviour\n# Build https://github.com/dimitri/pgextwlist package from source, transfer it to target installation\nRUN apk add --no-cache --update alpine-sdk postgresql-dev\nRUN git clone https://github.com/dimitri/pgextwlist.git /tmp/pgextwlist\nWORKDIR /tmp/pgextwlist\nRUN make && make install\n\n\nFROM ${BASE_IMAGE}:${BASE_IMAGE_VERSION}\n\nCOPY --from=ext_builder /tmp/pgextwlist/pgextwlist.so /tmp/pgextwlist/pgextwlist.so\nRUN mkdir \"$(pg_config --pkglibdir)/plugins\" \\\n && install /tmp/pgextwlist/pgextwlist.so \"$(pg_config --pkglibdir)/plugins/pgextwlist.so\"\nCOPY postgresql.conf /var/lib/postgresql/\n\n# Add the initialisation scripts\nCOPY entry/* /docker-entrypoint-initdb.d/\n\n# Force the modified postgres configuration ito use\nCMD [\"-c\", \"config_file=/var/lib/postgresql/postgresql.conf\"]\n"
}