{
  "startTime": 1674254838307,
  "endTime": 1674254839972,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 143
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 103,
        "lineEnd": 103,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 105,
        "lineEnd": 105,
        "columnStart": 7,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 26,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 8
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 43,
        "lineEnd": 77,
        "columnStart": 4,
        "columnEnd": 8
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 104,
        "lineEnd": 104,
        "columnStart": 25,
        "columnEnd": 50
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 26,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 8
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Operator\nFROM golang:1.16.0 AS builder\nRUN mkdir -p /src\nADD Makefile /\n\nCOPY src/ /src/\nWORKDIR /\n\nRUN make build-monitor\n\nFROM ubuntu:18.04\n\nWORKDIR /home/linuxgsm/linuxgsm\n\n# Stop apt-get asking to get Dialog frontend\nENV DEBIAN_FRONTEND noninteractive\nENV TERM xterm\n\nENV LGSM_CONSOLE_STDOUT=true\nENV LGSM_SCRIPT_STDOUT=true\nENV LGSM_ALERT_STDOUT=true\nENV LGSM_GAME_STDOUT=true\n\nENV LGSM_STOP_ON_FAILURE=true\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y \\\n    curl && rm -rf /var/lib/apt/lists/*;\n\n# https://adoptium.net/releases.html?variant=openjdk16&jvmVariant=hotspot\nRUN mkdir -p /bin/java && \\\n    curl -f -sL 'https://github.com/adoptium/temurin16-binaries/releases/download/jdk-16.0.2%2B7/OpenJDK16U-jdk_x64_linux_hotspot_16.0.2_7.tar.gz' | tar zxvf - -C /bin/java\n\nENV PATH=\"/bin/java/jdk-16.0.2+7/bin:${PATH}\"\n\n# Install dependencies and clean\n# RUN echo steam steam/question select \"I AGREE\" | debconf-set-selections && \\\nRUN curl -f -sL https://deb.nodesource.com/setup_12.x | bash - && \\\n    apt-get update && \\\n    apt-get install --no-install-recommends -y software-properties-common && \\\n    add-apt-repository multiverse && \\\n    dpkg --add-architecture i386 && \\\n    apt-get update && \\\n    apt-get install --no-install-recommends -y \\\n    bc \\\n    binutils \\\n    bsdmainutils \\\n    bzip2 \\\n    # This default-jre isn't used, The above jdk is used instead. linuxGSM still looks for this to be installed\n    default-jre \\\n    expect \\\n    file \\\n    git \\\n    gzip \\\n    iproute2 \\\n    jq \\\n    lib32gcc1 \\\n    lib32z1 \\\n    libc6 \\\n    libstdc++6 \\\n    libstdc++6:i386 \\\n    lib32stdc++6 \\\n    libtinfo5:i386 \\\n    libsdl2-2.0-0:i386 \\\n    libstdc++5:i386 \\\n    libgconf-2-4 \\\n    mailutils \\\n    net-tools \\\n    netcat \\\n    postfix \\\n    python \\\n    # steamcmd \\\n    tmux \\\n    telnet \\\n    util-linux \\\n    unzip \\\n    wget \\\n    xvfb \\\n    # Cleanup\n    && apt-get -y autoremove \\\n    && apt-get -y clean \\\n    && rm -rf /var/lib/apt/lists/* \\\n    && rm -rf /tmp/* \\\n    && rm -rf /var/tmp/*\n\n# Install steamcmd\nSHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\nRUN echo steam steam/question select \"I AGREE\" | debconf-set-selections \\\n    && echo steam steam/license note '' | debconf-set-selections \\\n    && dpkg --add-architecture i386 \\\n    && apt-get update -y \\\n    && apt-get install -y --no-install-recommends ca-certificates locales steamcmd \\\n    # Cleanup\n    && apt-get -y autoremove \\\n    && apt-get -y clean \\\n    && rm -rf /var/lib/apt/lists/* \\\n    && rm -rf /tmp/* \\\n    && rm -rf /var/tmp/* \\\n    # Final setup\n    && ln -s /usr/games/steamcmd /usr/bin/steamcmd \\\n    && steamcmd +quit\n\n# Install Gamedig https://docs.linuxgsm.com/requirements/gamedig\nRUN curl -f -sL https://deb.nodesource.com/setup_12.x | bash - \\\n    && apt-get update && apt-get install --no-install-recommends -y nodejs \\\n    && npm install -g gamedig \\\n    # Cleanup\n    && apt-get -y autoremove \\\n    && apt-get -y clean \\\n    && rm -rf /var/lib/apt/lists/* \\\n    && rm -rf /tmp/* \\\n    && rm -rf /var/tmp/* && npm cache clean --force;\n\nCOPY --from=joshhsoj1902/parse-env:1.0.3 /go/src/github.com/joshhsoj1902/parse-env/main /usr/bin/parse-env\nCOPY --from=hairyhenderson/gomplate:v3.9.0-alpine /bin/gomplate /usr/bin/gomplate\n\n# Add the linuxgsm user\nRUN adduser \\\n    --disabled-login \\\n    --disabled-password \\\n    --shell /bin/bash \\\n    --gecos \"\" \\\n    linuxgsm \\\n    && usermod -G tty linuxgsm \\\n    && chown -R linuxgsm:linuxgsm /home/linuxgsm\n\n# Switch to the user linuxgsm\nUSER linuxgsm\n\n# Install LinuxGSM\nRUN git clone \"https://github.com/GameServerManagers/LinuxGSM.git\" /home/linuxgsm/linuxgsm \\\n    && git checkout tags/v21.2.5 \\\n    && rm -rf /home/linuxgsm/linuxgsm/.git \\\n    # Install GameConfigs\n    && git clone \"https://github.com/GameServerManagers/Game-Server-Configs.git\" /home/linuxgsm/linuxgsm/lgsm/config-default/config-game/ \\\n    && rm -rf /home/linuxgsm/linuxgsm-config/.git\n\n# Install LinuxGSM\n# RUN git clone \"https://github.com/joshhsoj1902/LinuxGSM.git\" /home/linuxgsm/linuxgsm \\\n#  && git checkout joshhsoj1902-changes-4-docker \\\n#  && rm -rf /home/linuxgsm/linuxgsm/.git \\\n# # Install GameConfigs\n#  && git clone \"https://github.com/GameServerManagers/Game-Server-Configs.git\" /home/linuxgsm/linuxgsm/lgsm/config-default/config-game/ \\\n#  && rm -rf /home/linuxgsm/linuxgsm-config/.git\n\n# ADD --chown=linuxgsm:linuxgsm src /home/linuxgsm/linuxgsm\n# RUN git clone \"https://github.com/GameServerManagers/Game-Server-Configs.git\" /home/linuxgsm/linuxgsm/lgsm/config-default/config-game/ \\\n#  && rm -rf /home/linuxgsm/linuxgsm-config/.git\n\nUSER root\n\nRUN find /home/linuxgsm/linuxgsm -type f -name \"*.sh\" -exec chmod u+x {} \\; \\\n    && find /home/linuxgsm/linuxgsm -type f -name \"*.py\" -exec chmod u+x {} \\; \\\n    && chmod u+x /home/linuxgsm/linuxgsm/lgsm/functions/README.md\n\nADD --chown=linuxgsm:linuxgsm common.cfg.tmpl ./lgsm/config-default/config-lgsm/\nADD --chown=linuxgsm:linuxgsm docker-runner.sh ./\n# ADD --chown=linuxgsm:linuxgsm lgsm/ /home/linuxgsm/linuxgsm/lgsm/\nADD --chown=linuxgsm:linuxgsm config-game-template/ /home/linuxgsm/linuxgsm/lgsm/config-default/config-game-template/\n\n# This file isn't always created when running in docker. Ideally we shouldn't need it.\nRUN touch /.dockerenv\n\nUSER linuxgsm\n\nCOPY --chown=linuxgsm:linuxgsm --from=builder /monitor monitor\n\nRUN mkdir logs serverfiles\n\n# This dir shouldn't be used anymore, use Saves instead\nRUN mkdir serverfiles/Saves\n\n# serverfiles/Saves is meant to be a common place to put save files when a server supports putting the files somewhere.\n# Creating this folder now works around https://github.com/docker/compose/issues/3270\nRUN mkdir Saves\n\nARG OS=linux\nARG ARCH=amd64\n\nHEALTHCHECK --start-period=60s --timeout=300s --interval=60s --retries=3 CMD curl -f http://localhost:28080/live || exit 1\n\nENTRYPOINT [\"bash\", \"./docker-runner.sh\"]\n"
}