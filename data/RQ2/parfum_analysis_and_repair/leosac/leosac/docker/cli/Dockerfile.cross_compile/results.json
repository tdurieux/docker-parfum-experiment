{
  "startTime": 1674248947342,
  "endTime": 1674248948679,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 70
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 5,
        "columnEnd": 70
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 5,
        "columnEnd": 104
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 69
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 5,
        "columnEnd": 70
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 71,
        "lineEnd": 72,
        "columnStart": 5,
        "columnEnd": 61
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 78,
        "lineEnd": 79,
        "columnStart": 5,
        "columnEnd": 61
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 85,
        "lineEnd": 86,
        "columnStart": 5,
        "columnEnd": 61
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 98,
        "lineEnd": 98,
        "columnStart": 4,
        "columnEnd": 69
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 68,
        "columnEnd": 96
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 5,
        "columnEnd": 38
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 5,
        "columnEnd": 32
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 5,
        "columnEnd": 38
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 5,
        "columnEnd": 38
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 84,
        "lineEnd": 84,
        "columnStart": 5,
        "columnEnd": 39
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 97,
        "lineEnd": 97,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 103,
        "lineEnd": 103,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 111,
        "lineEnd": 111,
        "columnStart": 4,
        "columnEnd": 55
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 114,
        "lineEnd": 114,
        "columnStart": 57,
        "columnEnd": 72
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 10,
        "columnStart": 22,
        "columnEnd": 72
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 10,
        "columnStart": 22,
        "columnEnd": 72
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Build an image with all the required compiler infrastructure\n# to cross-compile Leosac for Raspberry Pi.\n\n# We recommend you use leosaccli to use this container.\n\nFROM debian:bullseye\n\nRUN echo 'deb-src http://deb.debian.org/debian bullseye main' >> /etc/apt/sources.list\n\nRUN apt-get update && apt-get install --no-install-recommends -y emacs-nox vim wget git cmake build-essential \\\ng++-arm-linux-gnueabihf libtool-bin autoconf automake pkg-config python3 && rm -rf /var/lib/apt/lists/*;\n\nADD cross-compile-resources /cross-compile-resources\n\n# Boost libraries.\n\n# Create custom configuration to be able to use the cross compiling toolchain\nRUN echo 'using gcc : arm : arm-linux-gnueabihf-g++ ;' > /root/user-config.jam\n\n# Extract configure build and install\nRUN ( cd tmp && cp /cross-compile-resources/boost_1_63_0.tar.gz . && tar xvfz boost_1_63_0.tar.gz && \\\n    cd boost_1_63_0 && ./bootstrap.sh && \\\n    ./b2 --without-coroutine --without-coroutine2 --without-fiber --without-context --reconfigure  \\\n         toolset=gcc-arm cxxflags='-std=c++14' -j6 \\\n    ./b2 --prefix=/opt/rpi_fakeroot install) && rm boost_1_63_0.tar.gz\n\n# ZeroMQ\nRUN ( cd /opt/rpi_fakeroot && git clone https://github.com/zeromq/libzmq.git && \\\n    cd libzmq && git checkout v4.2.1 && \\\n    ./autogen.sh && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/opt/rpi_fakeroot --host=arm-linux-gnueabihf && \\\n    make -j6 && make install)\n\n# TClap\nRUN ( cd /tmp && apt-get update && apt-get source libtclap-dev && \\\n     cd tclap-1.2.1 && \\\n     ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/opt/rpi_fakeroot --host=arm-linux-gnueabihf && \\\n     make -j6 && make install)\n\n#PostgreSQL native library\nRUN ( cd /tmp && cp /cross-compile-resources/postgresql-9.4.10.tar.gz . && \\\n     tar xvfz postgresql-9.4.10.tar.gz && cd postgresql-9.4.10 && \\\n     ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --without-readline --without-zlib --prefix=/opt/rpi_fakeroot --host=arm-linux-gnueabihf && \\\n     make -j6 && make install) && rm postgresql-9.4.10.tar.gz\n\n#SQLite native library\nRUN ( cd /tmp && cp /cross-compile-resources/sqlite-autoconf-3190300.tar.gz . && \\\n    tar xvfz sqlite-autoconf-3190300.tar.gz && cd sqlite-autoconf-3190300 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/opt/rpi_fakeroot --host=arm-linux-gnueabihf && \\\n    make -j6 && make install) && rm sqlite-autoconf-3190300.tar.gz\n\n######################################################\n#     ODB - Database Object Relational Mapper        #\n######################################################\n\n# ODB compiler (amd64 version as code generation is run using a native\n# odb binary).\nRUN (cd /tmp && cp /cross-compile-resources/odb_2.4.0-1_amd64.deb . && \\\n     dpkg -i odb_2.4.0-1_amd64.deb)\n\n\n# ODB common runtime\nRUN ( cd /tmp && cp /cross-compile-resources/libodb-2.4.0.tar.gz . && \\\n     tar xvf libodb-2.4.0.tar.gz && cd libodb-2.4.0 && \\\n     ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/opt/rpi_fakeroot --host=arm-linux-gnueabihf && \\\n     make -j6 && make install) && rm libodb-2.4.0.tar.gz\n\n\n# ODB Boost Profile\nRUN ( cd /tmp && cp /cross-compile-resources/libodb-boost-2.4.0.tar.gz . && \\\n     tar xvf libodb-boost-2.4.0.tar.gz && cd libodb-boost-2.4.0 && \\\n     ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" CPPFLAGS=\"-I/opt/rpi_fakeroot/include\" LDFLAGS=\"-L/opt/rpi_fakeroot/lib\" \\\n        --prefix=/opt/rpi_fakeroot --host=arm-linux-gnueabihf && \\\n     make -j6 && make install) && rm libodb-boost-2.4.0.tar.gz\n\n# ODB PGSQL runtime\nRUN ( cd /tmp && cp /cross-compile-resources/libodb-pgsql-2.4.0.tar.gz . && \\\n     tar xvf libodb-pgsql-2.4.0.tar.gz && cd libodb-pgsql-2.4.0 && \\\n     ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" CPPFLAGS=\"-I/opt/rpi_fakeroot/include\" LDFLAGS=\"-L/opt/rpi_fakeroot/lib\" \\\n        --prefix=/opt/rpi_fakeroot --host=arm-linux-gnueabihf && \\\n     make -j6 && make install) && rm libodb-pgsql-2.4.0.tar.gz\n\n# ODB SQLITE runtime\nRUN ( cd /tmp && cp /cross-compile-resources/libodb-sqlite-2.4.0.tar.gz . && \\\n     tar xvf libodb-sqlite-2.4.0.tar.gz && cd libodb-sqlite-2.4.0 && \\\n     ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" CPPFLAGS=\"-I/opt/rpi_fakeroot/include\" LDFLAGS=\"-L/opt/rpi_fakeroot/lib\" \\\n        --prefix=/opt/rpi_fakeroot --host=arm-linux-gnueabihf && \\\n     make -j6 && make install) && rm libodb-sqlite-2.4.0.tar.gz\n\n# LibScrypt\nRUN (cd /tmp && git clone https://github.com/technion/libscrypt.git && cd libscrypt && \\\n     CC=arm-linux-gnueabihf-gcc make && cp libscrypt.h /opt/rpi_fakeroot/include && \\\n     cp libscrypt.so.0 /opt/rpi_fakeroot/lib && \\\n     ln -s /opt/rpi_fakeroot/lib/libscrypt.so.0 /opt/rpi_fakeroot/lib/libscrypt.so)\n\n# CURL\nRUN ( cd /tmp && cp /cross-compile-resources/curl-7.52.1.tar.gz . && \\\n    tar xvfz curl-7.52.1.tar.gz && cd curl-7.52.1 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/opt/rpi_fakeroot --host=arm-linux-gnueabihf && \\\n    make -j6 && make install) && rm curl-7.52.1.tar.gz\n\n# OpenSSL\nRUN ( cd /tmp && cp /cross-compile-resources/openssl-1.1.0d.tar.gz . && \\\n    tar xvfz openssl-1.1.0d.tar.gz && cd openssl-1.1.0d && \\\n    export cross=arm-linux-gnueabihf- && \\\n    ./Configure linux-generic32 shared --prefix=/opt/rpi_fakeroot && \\\n    make CC=\"${cross}gcc\" AR=\"${cross}ar r\" RANLIB=\"${cross}ranlib\" -j6 && \\\n    make install) && rm openssl-1.1.0d.tar.gz\n\n# PCSC Lite package with headers and libraries.\nRUN ( cd /tmp && cp /cross-compile-resources/pcsclite.tar . && \\\n    tar xvf pcsclite.tar --strip 1 -C /opt/rpi_fakeroot) && rm pcsclite.tar\n\n# LibLogicalAccess\nRUN ( cd /tmp && cp /cross-compile-resources/lla.tar . && tar xvf lla.tar && \\\n    cd liblogicalaccess && \\\n    mkdir build && cd build && \\\n    cmake -DCMAKE_INSTALL_PREFIX=/opt/rpi_fakeroot -DCMAKE_TOOLCHAIN_FILE=/cross-compile-resources/rpi-cross.cmake \\\n    -DPCSCLITE_INCLUDE_DIR=/opt/rpi_fakeroot/include/PCSC .. && \\\n    make -j6 && make install) && rm lla.tar\n\nADD docker_scripts /docker_scripts\n\n# Volume where the root of the Leosac repository lives.\nVOLUME /leosac\n\n# Optional volume that serves as build directory. Configuration\n# this volume allows for incremental compilation.\nVOLUME /leosac_arm_build\n\n# A volume that can be mounted to specify a private key to use\n# when using `leosaccli dev cc dev-push` to push development build\n# to raspberry pi\nVOLUME /ssh_deploy_key\n"
}