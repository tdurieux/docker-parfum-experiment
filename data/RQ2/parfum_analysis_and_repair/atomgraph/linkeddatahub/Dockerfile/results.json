{
  "startTime": 1674253753769,
  "endTime": 1674253754610,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 115,
        "lineEnd": 115,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 116,
        "lineEnd": 116,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 117,
        "lineEnd": 117,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 118,
        "lineEnd": 118,
        "columnStart": 4,
        "columnEnd": 35
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM maven:3.8.4-openjdk-17 as maven\n\n# download and extract Jena\n\nARG JENA_VERSION=4.3.2\n\nARG JENA_TAR_URL=\"https://archive.apache.org/dist/jena/binaries/apache-jena-${JENA_VERSION}.tar.gz\"\n\nRUN mkdir /jena && \\\n    curl -f -SL \"$JENA_TAR_URL\" | \\\n    tar -xzf - -C /jena\n\n# copy platform source code and POM\n\nWORKDIR /usr/src/platform\n\nCOPY src /usr/src/platform/src\n\nCOPY pom.xml /usr/src/platform/pom.xml\n\nRUN mvn -Pstandalone clean install\n\n# ==============================\n\nFROM atomgraph/letsencrypt-tomcat:00336f862d03d41a83a9077a98aa39955876c999\n\nLABEL maintainer=\"martynas@atomgraph.com\"\n\n# hash of the current commit\n\nARG SOURCE_COMMIT=\n\nARG UPLOAD_ROOT=/var/www/linkeddatahub/uploads\n\nARG UPLOAD_CONTAINER_PATH=uploads\n\nENV SOURCE_COMMIT=$SOURCE_COMMIT\n\nWORKDIR $CATALINA_HOME\n\n# add XSLT stylesheet that makes changes to ROOT.xml\n\nCOPY platform/context.xsl conf/context.xsl\n\nENV CACHE_MODEL_LOADS=true\n\nENV STYLESHEET=static/com/atomgraph/linkeddatahub/xsl/bootstrap/2.3.2/layout.xsl\n\nENV CACHE_STYLESHEET=true\n\nENV UPLOAD_ROOT=$UPLOAD_ROOT\n\nENV PROXY_HOST=\n\nENV PROXY_HTTP_PORT=\n\nENV PROXY_HTTPS_PORT=\n\nENV TIMEOUT=20\n\nENV PROTOCOL=https\n\nENV HOST=localhost\n\nENV ABS_PATH=/\n\nENV HTTP_REDIRECT_PORT=443\n\nENV HTTP_COMPRESSION=on\n\nENV HTTPS=false\n\nENV SERVER_CERT=/var/linkeddatahub/ssl/server/server.crt\n\nENV SECRETARY_CERT=/var/linkeddatahub/ssl/secretary/cert.pem\n\nENV SECRETARY_CERT_ALIAS=secretary\n\nENV CLIENT_KEYSTORE_MOUNT=/var/linkeddatahub/ssl/secretary/keystore.p12\n\nENV CLIENT_KEYSTORE=\"$CATALINA_HOME/webapps/ROOT/ssl/keystore.p12\"\n\nENV CLIENT_TRUSTSTORE=\"$CATALINA_HOME/webapps/ROOT/ssl/client.truststore\"\n\nENV OWNER_PUBLIC_KEY=/var/linkeddatahub/ssl/owner/public.pem\n\nENV LOAD_DATASETS=\n\nENV CONTEXT_DATASET_URL=file:///var/linkeddatahub/datasets/system.trig\n\nENV ADMIN_DATASET_URL=file:///var/linkeddatahub/datasets/admin.trig\n\nENV END_USER_DATASET_URL=file:///var/linkeddatahub/datasets/end-user.trig\n\nENV UPLOAD_CONTAINER_PATH=$UPLOAD_CONTAINER_PATH\n\nENV OIDC_REFRESH_TOKENS=/var/linkeddatahub/oidc/refresh_tokens.properties\n\nENV MAX_CONTENT_LENGTH=\n\nENV MAX_CONN_PER_ROUTE=40\n\nENV MAX_TOTAL_CONN=40\n\nENV IMPORT_KEEPALIVE=\n\nENV GOOGLE_CLIENT_ID=\n\nENV GOOGLE_CLIENT_SECRET=\n\n# HEALTHCHECK --start-period=80s CMD curl -f http://localhost:$HTTP_PORT || exit 1\n\n# remove default Tomcat webapps and install xmlstarlet (used for XPath queries) and envsubst (for variable substitution)\n\nRUN apt-get update --allow-releaseinfo-change && \\\n    apt-get install --no-install-recommends -y acl && \\\n    apt-get install --no-install-recommends -y xmlstarlet && \\\n    apt-get install --no-install-recommends -y gettext-base && \\\n    apt-get install --no-install-recommends -y uuid-runtime && \\\n    rm -rf webapps/* && \\\n    rm -rf /var/lib/apt/lists/*\n\n# copy entrypoint\n\nCOPY platform/entrypoint.sh entrypoint.sh\n\n# copy certificate import script\n\nCOPY platform/import-letsencrypt-stg-roots.sh import-letsencrypt-stg-roots.sh\n\n# copy SPARQL query used to get metadata of the root app service from the system dataset\n\nCOPY platform/select-root-services.rq select-root-services.rq\n\n# copy the metadata of the built-in secretary agent\n\nCOPY platform/root-secretary.trig.template root-secretary.trig.template\n\nCOPY platform/root-owner.trig.template root-owner.trig.template\n\n# copy default datasets\n\nCOPY platform/datasets/admin.trig /var/linkeddatahub/datasets/admin.trig\n\nCOPY platform/datasets/end-user.trig /var/linkeddatahub/datasets/end-user.trig\n\n# copy webapp config\n\nCOPY platform/conf/ROOT.xml conf/Catalina/localhost/ROOT.xml\n\n# copy platform webapp (exploded) from the maven stage of the build\n\nCOPY --from=maven /usr/src/platform/target/ROOT webapps/ROOT/\n\n# copy extracted Jena from the maven stage of the build\n\nCOPY --from=maven /jena/* /jena\n\n# setup Jena\n\nENV JENA_HOME=/jena\n\nENV PATH=\"${PATH}:${JENA_HOME}/bin\"\n\n# add non-root user \"ldh\" and give it access to $CATALINA_HOME\n\nRUN useradd --no-log-init -U ldh && \\\n    chown -R ldh:ldh . && \\\n    chown -R ldh:ldh /var/linkeddatahub && \\\n    mkdir -p \"${UPLOAD_ROOT}/${UPLOAD_CONTAINER_PATH}\" && \\\n    chown -R ldh:ldh \"$UPLOAD_ROOT\" && \\\n    mkdir -p /etc/letsencrypt/staging && \\\n    chown -R ldh:ldh /etc/letsencrypt/staging\n\nRUN ./import-letsencrypt-stg-roots.sh\n\nUSER ldh\n\nENTRYPOINT [\"/bin/bash\", \"entrypoint.sh\"]\n"
}