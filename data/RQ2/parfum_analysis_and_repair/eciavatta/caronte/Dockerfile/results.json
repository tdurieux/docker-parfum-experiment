{
  "startTime": 1674253213721,
  "endTime": 1674253215533,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 5,
        "lineEnd": 9,
        "columnStart": 1,
        "columnEnd": 17
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 40,
        "lineEnd": 42,
        "columnStart": 1,
        "columnEnd": 17
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 9,
        "columnStart": 1,
        "columnEnd": 17
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 40,
        "lineEnd": 42,
        "columnStart": 1,
        "columnEnd": 17
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 9,
        "columnStart": 1,
        "columnEnd": 17
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Build backend with go\nFROM golang:1.16 AS BACKEND_BUILDER\n\n# Install tools and libraries\nRUN apt-get update && \\\n\tDEBIAN_FRONTEND=noninteractive apt-get -y --no-install-recommends install -qq \\\n\tgit \\\n\tpkg-config \\\n\tlibpcap-dev \\\n\tlibhyperscan-dev && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /caronte\n\nCOPY . ./\n\nRUN export VERSION=$(git describe --tags --abbrev=0) && \\\n    go mod download && \\\n    go build -ldflags \"-X main.Version=$VERSION\" && \\\n\tmkdir -p build && \\\n\tcp -r caronte pcaps/ scripts/ shared/ test_data/ build/\n\n\n# Build frontend via yarn\nFROM node:16 as FRONTEND_BUILDER\n\nWORKDIR /caronte-frontend\n\nCOPY ./frontend ./\n\nRUN yarn install && yarn build --production=true && yarn cache clean;\n\n\n# LAST STAGE\nFROM ubuntu:20.04\n\nCOPY --from=BACKEND_BUILDER /caronte/build /opt/caronte\n\nCOPY --from=FRONTEND_BUILDER /caronte-frontend/build /opt/caronte/frontend/build\n\nRUN apt-get update && \\\n\tDEBIAN_FRONTEND=noninteractive apt-get -y --no-install-recommends install -qq \\\n\tlibpcap-dev \\\n\tlibhyperscan-dev && \\\n\trm -rf /var/lib/apt/lists/*\n\nENV GIN_MODE release\n\nENV MONGO_HOST mongo\n\nENV MONGO_PORT 27017\n\nWORKDIR /opt/caronte\n\nENTRYPOINT ./caronte -mongo-host ${MONGO_HOST} -mongo-port ${MONGO_PORT} -assembly_memuse_log\n"
}