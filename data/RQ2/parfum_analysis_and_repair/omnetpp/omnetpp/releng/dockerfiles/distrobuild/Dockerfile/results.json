{
  "startTime": 1674248363759,
  "endTime": 1674248364556,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 58
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM omnetpp/distrobuild-base:ubuntu20.04-macos11.3-210713\nLABEL maintainer=\"Rudolf Hornig <rudi@omnetpp.org>\"\n\n# during docker image builds, the 'tools' directory in the context dir should contain the Windows and macOS toolchains (i.e. ./tools/170717/...)\nSHELL [\"/bin/bash\", \"-c\"]\nENV TOOLS_DIR /root/tools\nENV TOOLS_VERSION 220331\nENV OMNETPP_DIR /root/omnetpp\n\n# clone the directory\nWORKDIR /root\n\n# clone the repository either remotely or from a local repo in the context directory\n#RUN git clone -n https://github.com/omnetpp/omnetpp.git $OMNETPP_DIR\n# optionally you can use local bare repo, called 'omnetpp-repo' from the context dir\n# use 'git clone -n ../../../.git omnetpp-repo' to create it\nCOPY omnetpp-repo/ $OMNETPP_DIR\n\n# copy the windows/macOS tools into the build image\nCOPY tools/$TOOLS_VERSION $TOOLS_DIR/$TOOLS_VERSION\n\n# update the eclipse build's MAVEN cache for faster builds\nWORKDIR $OMNETPP_DIR\n\n# getting only the dependnecies does not work correctly (not everything is cached unfortunately, so a full build is required)\n#RUN git checkout master && (cd $OMNETPP_DIR/ui && (mvn dependency:go-offline -Dwhat=omnetpp -fn || true)) ; rm -rf $OMNETPP_DIR\n\n# we dummy build the IDE and then delete the whole OMNeT++ source, so as a side effect the maven cache will be updated\nRUN git checkout master && \\\n    cp configure.user.dist configure.user && \\\n    source ./setenv -f && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" WITH_QTENV=no WITH_OSG=no WITH_OSGEARTH=no && \\\n    make MODE=release ui -j$(nproc) && \\\n    OFFLINE=no releng/ide/java/build-ide-java && \\\n    rm -rf $OMNETPP_DIR\n\n# while running this image you should either map a local OMNeT++ repo from the host to the /root/omnetpp-repo dir\n# or specify a remote OMNeT++ repo URL in the OMNETPP_REPO environment variable.\n# default variables controlling the OMNeT++ build\n\nENV OMNETPP_REPO /root/omnetpp-repo\nENV GIT_VERSION origin/master\nENV WHAT omnetpp\nENV BUILD_CORE_DISTRO true\nENV BUILD_LINUX_X86_64_DISTRO true\nENV BUILD_LINUX_AARCH64_DISTRO true\nENV BUILD_WIN32_X86_64_DISTRO true\nENV BUILD_MACOS_X86_64_DISTRO true\nENV BUILD_MACOS_AARCH64_DISTRO true\nCMD git clone -n $OMNETPP_REPO $OMNETPP_DIR && cd $OMNETPP_DIR && git checkout -f $GIT_VERSION && releng/makedist\n"
}