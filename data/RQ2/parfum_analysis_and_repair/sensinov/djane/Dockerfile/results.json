{
  "startTime": 1674217530998,
  "endTime": 1674217531510,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 90
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 28
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:latest AS build\nWORKDIR /build\n\nCOPY package*.json ./\nRUN npm install --production && npm cache clean --force;\n\n# Use the node:slim base image to save 600mb space\nFROM node:slim\nWORKDIR /usr/src/app\n\n# Copy the node modules and compiled C/C++ libraries\nCOPY --from=build /build /usr/src/app\n\n# Copy JavaScript and everything else\nCOPY . .\n\n# Download a wait program, used with docker-compose\nRUN curl -f -sO https://raw.githubusercontent.com/vishnubob/wait-for-it/master/wait-for-it.sh && chmod +x ./wait-for-it.sh\n\n# The SERVER_PORT is the port exposed by the service\nENV SERVER_PORT=3000\n\n# The mongodb is configured via the variables below\nENV DB_CONNECTION_URI=mongodb://mongo:27017\n\n# Use JWT authentication or not\nENV AUTH=true\n\n#CMD [ \"npm\", \"start\" ]\nCMD npm run migrate ; npm start\n"
}