{
  "startTime": 1674248571813,
  "endTime": 1674248573182,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 183
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#######################################################\n## Build miso-lims from current directory\n#######################################################\n\nFROM maven:3.6-openjdk-11 as builder\n# only re-initialize Maven when there's a POM change\nCOPY pom.xml /miso-lims/\nCOPY ./integration-tools/pom.xml /miso-lims/integration-tools/pom.xml\nCOPY ./core/pom.xml /miso-lims/core/pom.xml\nCOPY ./miso-web/pom.xml /miso-lims/miso-web/pom.xml\nCOPY ./miso-service/pom.xml /miso-lims/miso-service/pom.xml\nCOPY ./sqlstore/pom.xml /miso-lims/sqlstore/pom.xml\nCOPY ./miso-dto/pom.xml /miso-lims/miso-dto/pom.xml\nCOPY ./pinery-miso/pom.xml /miso-lims/pinery-miso/pom.xml\nWORKDIR /miso-lims\n# cache the .m2 repository so it doesn't have to download the internet\n# every single time it runs. It runs with --fail-never because this command\n# doesn't work well with modules. This is best-effort.\nRUN mvn dependency:go-offline --fail-never\n\n\n# this way the image only rebuilds when code changes\nCOPY ./integration-tools/ /miso-lims/integration-tools/\nCOPY ./core/ /miso-lims/core/\nCOPY ./miso-web/ /miso-lims/miso-web/\nCOPY ./miso-service/ /miso-lims/miso-service/\nCOPY ./sqlstore/ /miso-lims/sqlstore/\nCOPY ./miso-dto/ /miso-lims/miso-dto/\nCOPY ./pinery-miso/ /miso-lims/pinery-miso/\n\nRUN mvn clean && mvn package -DskipTests\n\n\n#######################################################\n## Flyway database migration\n## Adapted from https://github.com/flyway/flyway-docker/blob/v7.7.1/Dockerfile\n#######################################################\nFROM adoptopenjdk:11-jre-hotspot as flyway-migration\n\n# Add the flyway user and step in the directory\nRUN adduser --system --home /flyway --disabled-password --group flyway\nWORKDIR /flyway\n\n# Change to the flyway user\nUSER flyway\n\nENV FLYWAY_VERSION 5.2.4\n\nRUN curl -f -L https://repo1.maven.org/maven2/org/flywaydb/flyway-commandline/${FLYWAY_VERSION}/flyway-commandline-${FLYWAY_VERSION}.tar.gz -o flyway-commandline-${FLYWAY_VERSION}.tar.gz \\\n  && tar -xzf flyway-commandline-${FLYWAY_VERSION}.tar.gz --strip-components=1 \\\n  && rm flyway-commandline-${FLYWAY_VERSION}.tar.gz\n\nENV PATH=\"/flyway:${PATH}\"\n\nCOPY --from=builder /miso-lims/sqlstore/target/classes/db/migration/*.sql /flyway/sql/\nCOPY --from=builder /miso-lims/sqlstore/target/sqlstore*.jar /flyway/jars/\nCOPY ./.docker/run-flyway /\n\nENV MISO_DB_USER tgaclims\nENV MISO_DB lims\nENV MISO_DB_HOST_PORT db:3306\nENV MISO_DB_PASS_FILE /run/secrets/lims_password\nENV MISO_FILES_DIR /storage/miso/files/\n\nENTRYPOINT [\"/run-flyway\"]\n\n#######################################################\n## Tomcat webapp\n#######################################################\n\nFROM tomcat:9-jdk11-openjdk-slim as webapp\n\nCOPY ./.docker/tomcat/setenv.sh /usr/local/tomcat/bin/\nCOPY ./.docker/tomcat/logging.properties ${CATALINA_HOME}/conf/\nCOPY ./.docker/tomcat/ROOT.xml ${CATALINA_HOME}/conf/Catalina/localhost/\n\nRUN mkdir -p /storage/miso/log\nCOPY --from=builder /miso-lims/miso-web/src/main/resources/miso.properties  ${CATALINA_HOME}/conf/Catalina/localhost\nCOPY --from=builder /miso-lims/miso-web/src/main/resources/security.properties /storage/miso/\nCOPY --from=builder /miso-lims/miso-web/src/main/resources/submission.properties /storage/miso/\n\nCOPY --from=builder /miso-lims/miso-web/target/ROOT/WEB-INF/lib/mysql-connector-java-*.jar ${CATALINA_HOME}/lib/\nCOPY --from=builder /miso-lims/miso-web/target/ROOT.war ${CATALINA_HOME}/webapps/\n\nENV MISO_DB_USER tgaclims\nENV MISO_DB lims\nENV MISO_DB_HOST_PORT db:3306\nENV MISO_DB_PASS_FILE /run/secrets/lims_password\nENV MISO_FILES_DIR /storage/miso/files/\n\nCMD [\"catalina.sh\", \"run\"]\n"
}