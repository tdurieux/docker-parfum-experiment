{
  "startTime": 1674215843949,
  "endTime": 1674215844932,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 22,
        "columnEnd": 43
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 22,
        "columnEnd": 43
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright 2022 The KCP Authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# Build the binary\nFROM golang:1.17 AS builder\n\nWORKDIR /workspace\n# Copy the Go Modules manifests\nCOPY go.mod go.mod\nCOPY go.sum go.sum\nCOPY pkg/apis/go.mod pkg/apis/go.mod\nCOPY pkg/apis/go.sum pkg/apis/go.sum\n# cache deps before building and copying source so that we don't need to re-download as much\n# and so that source changes don't invalidate our downloaded layer\nUSER 0\nRUN go mod download\n\nCOPY Makefile Makefile\n\n# Copy the go source\nCOPY config/ config/\nCOPY pkg/ pkg/\nCOPY cmd/ cmd/\nCOPY third_party/ third_party/\nCOPY .git/ .git/\n\nRUN apt-get update && apt-get install --no-install-recommends -y jq && mkdir bin && rm -rf /var/lib/apt/lists/*;\nRUN CGO_ENABLED=0 make\n\n# Use distroless as minimal base image to package the manager binary\n# Refer to https://github.com/GoogleContainerTools/distroless for more details\n# FROM gcr.io/distroless/static:nonroot\nFROM alpine:3.15\nWORKDIR /\nCOPY --from=builder workspace/bin/kcp-front-proxy workspace/bin/kcp workspace/bin/virtual-workspaces /\nRUN mkdir -p /data && \\\n    chown 65532:65532 /data\nUSER 65532:65532\nWORKDIR /data\nVOLUME /data\nENTRYPOINT [\"/kcp\"]\nCMD [\"start\"]\n"
}