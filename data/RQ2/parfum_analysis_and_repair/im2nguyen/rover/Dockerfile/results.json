{
  "startTime": 1674251702083,
  "endTime": 1674251703102,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 56,
        "columnEnd": 67
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 20
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Prep base stage\nARG TF_VERSION=light\n\n# Build ui\nFROM node:16-alpine as ui\nWORKDIR /src\n# Copy specific package files\nCOPY ./ui/package-lock.json ./\nCOPY ./ui/package.json ./\nCOPY ./ui/babel.config.js ./\n# Set Progress, Config and install\nRUN npm set progress=false && npm config set depth 0 && npm install && npm cache clean --force;\n# Copy source\n# Copy Specific Directories\nCOPY ./ui/public ./public\nCOPY ./ui/src ./src\n# build (to dist folder)\nRUN npm run build\n\n# Build rover\nFROM golang:1.17 AS rover\nWORKDIR /src\n# Copy full source\nCOPY . .\n# Copy ui/dist from ui stage as it needs to embedded\nCOPY --from=ui ./src/dist ./ui/dist\n# Build rover\nRUN go get -d -v golang.org/x/net/html \nRUN CGO_ENABLED=0 GOOS=linux go build -o rover .\n\n# Release stage\nFROM hashicorp/terraform:$TF_VERSION AS release\n# Copy terraform binary to the rover's default terraform path\nRUN cp /bin/terraform /usr/local/bin/terraform\n# Copy rover binary\nCOPY --from=rover /src/rover /bin/rover\nRUN chmod +x /bin/rover\n\n# Install Google Chrome\nRUN apk add --no-cache chromium\n\nWORKDIR /src\n\nENTRYPOINT [ \"/bin/rover\" ]"
}