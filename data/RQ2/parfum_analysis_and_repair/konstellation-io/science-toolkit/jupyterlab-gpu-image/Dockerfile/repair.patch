diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/konstellation-io/science-toolkit/jupyterlab-gpu-image/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/konstellation-io/science-toolkit/jupyterlab-gpu-image/Dockerfile/repaired.Dockerfile
index 38deffa..acbaeb6 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/konstellation-io/science-toolkit/jupyterlab-gpu-image/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/konstellation-io/science-toolkit/jupyterlab-gpu-image/Dockerfile/repaired.Dockerfile
@@ -70,7 +70,7 @@ RUN apt-get update && \
     xz-utils \
     zip && \
   # Install Cloudera Impala driver
-  curl -s -O https://downloads.cloudera.com/connectors/ClouderaImpala_ODBC_2.6.4.1004/Debian/clouderaimpalaodbc_2.6.4.1004-2_amd64.deb && \
+  curl -f -s -O https://downloads.cloudera.com/connectors/ClouderaImpala_ODBC_2.6.4.1004/Debian/clouderaimpalaodbc_2.6.4.1004-2_amd64.deb && \
     dpkg -i clouderaimpalaodbc_2.6.4.1004-2_amd64.deb && \
   update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.7 1 && \
     update-alternatives --set python3 /usr/bin/python3.7 && \
@@ -79,25 +79,25 @@ RUN apt-get update && \
     update-alternatives --install /usr/bin/pip pip /usr/bin/pip3 3 && \
     update-alternatives --set pip /usr/bin/pip3 && \
   # Add Tini
-    curl -s -L -o /usr/local/bin/tini https://github.com/krallin/tini/releases/download/v0.18.0/tini && \
+    curl -f -s -L -o /usr/local/bin/tini https://github.com/krallin/tini/releases/download/v0.18.0/tini && \
     chmod +x /usr/local/bin/tini && \
   echo "en_US.UTF-8 UTF-8" > /etc/locale.gen && \
-    locale-gen
+    locale-gen && rm -rf /var/lib/apt/lists/*;
 
 # Install Node, Npm, Yarn & Go
-RUN curl -s -O https://nodejs.org/dist/v${NODE_VERSION}/node-v${NODE_VERSION}-linux-x64.tar.xz && \
+RUN curl -f -s -O https://nodejs.org/dist/v${NODE_VERSION}/node-v${NODE_VERSION}-linux-x64.tar.xz && \
     tar -xf node-v${NODE_VERSION}-linux-x64.tar.xz && \
     mv node-v${NODE_VERSION}-linux-x64 ${NODEJS_HOME} && \
-    curl -L -O https://yarnpkg.com/downloads/${YARN_VERSION}/yarn-v${YARN_VERSION}.tar.gz  && \
+    curl -f -L -O https://yarnpkg.com/downloads/${YARN_VERSION}/yarn-v${YARN_VERSION}.tar.gz && \
     tar zxf yarn-v${YARN_VERSION}.tar.gz && \
     mv yarn-v${YARN_VERSION} ${YARN_HOME} && \
     mkdir -p ${GOROOT} && \
     mkdir -p /home/$NB_USER/go && \
-    curl -s https://dl.google.com/go/go${GO_VERSION}.linux-amd64.tar.gz | tar xzf - -C ${GOROOT} --strip-components=1
-    
+    curl -f -s https://dl.google.com/go/go${GO_VERSION}.linux-amd64.tar.gz | tar xzf - -C ${GOROOT} --strip-components=1 && rm node-v${NODE_VERSION}-linux-x64.tar.xz
+
 
 # Install Minio client
-RUN curl -s -O https://dl.min.io/client/mc/release/linux-amd64/mc && \
+RUN curl -f -s -O https://dl.min.io/client/mc/release/linux-amd64/mc && \
     chmod +x mc && \
     mv mc /usr/local/bin/mc
 
@@ -110,14 +110,14 @@ RUN mkdir -p /opt/oracle && \
 	export LD_LIBRARY_PATH=$ORACLE_HOME:$LD_LIBRARY_PATH
 
 # Build unixodbx 2.3.7
-RUN curl -s -O http://www.unixodbc.org/unixODBC-2.3.7.tar.gz && \
+RUN curl -f -s -O http://www.unixodbc.org/unixODBC-2.3.7.tar.gz && \
     tar xvf unixODBC-2.3.7.tar.gz && \
     cd unixODBC-2.3.7/ && \
-    ./configure && \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" && \
     make && \
     make install && \
     make clean && \
-    cd ..
+    cd .. && rm unixODBC-2.3.7.tar.gz
 
 COPY fix-permissions /usr/local/bin/fix-permissions
 # Create jovyan user with UID=1000 and in the 'users' group
@@ -163,9 +163,9 @@ COPY ./requirements.txt requirements.txt
 
 RUN pip install --no-cache-dir setuptools wheel && \
     pip install --no-cache-dir cython thriftpy && \
-    pip install pip --upgrade && \
+    pip install --no-cache-dir pip --upgrade && \
     pip install --no-cache-dir -r requirements.txt --ignore-installed PyYAML && \
-    ln -s /usr/bin/llvm-config-10 /usr/bin/llvm-config  
+    ln -s /usr/bin/llvm-config-10 /usr/bin/llvm-config
 
 # Install Jupyterlab Extensions
 COPY ./jupyterlab_extensions.txt jupyterlab_extensions.txt