{
  "startTime": 1674254554028,
  "endTime": 1674254555032,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 2,
        "columnEnd": 134
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 81,
        "lineEnd": 81,
        "columnStart": 4,
        "columnEnd": 100
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 87,
        "lineEnd": 87,
        "columnStart": 4,
        "columnEnd": 94
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 90,
        "lineEnd": 90,
        "columnStart": 4,
        "columnEnd": 89
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 95,
        "lineEnd": 95,
        "columnStart": 4,
        "columnEnd": 71
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 99,
        "lineEnd": 99,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 112,
        "lineEnd": 112,
        "columnStart": 4,
        "columnEnd": 60
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 165,
        "lineEnd": 165,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 115,
        "lineEnd": 115,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 88,
        "lineEnd": 88,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 91,
        "lineEnd": 91,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 113,
        "lineEnd": 113,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 43,
        "lineEnd": 70,
        "columnStart": 2,
        "columnEnd": 7
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nvidia/cuda:10.2-cudnn7-runtime-ubuntu18.04\n\nARG GO_VERSION=1.14.2\nARG NODE_VERSION=14.4.0\nARG YARN_VERSION=1.19.1\nARG TINI_VERSION v0.18.0\nARG NB_USER=\"jovyan\"\nARG NB_UID=\"1000\"\nARG NB_GID=\"100\"\n\nUSER root\n\nWORKDIR /tmp\n\n# Configure environment\nENV SHELL=/bin/bash \\\n    NB_USER=$NB_USER \\\n    NB_UID=$NB_UID \\\n    NB_GID=$NB_GID \\\n    LC_ALL=en_US.UTF-8 \\\n    LANG=en_US.UTF-8 \\\n    LANGUAGE=en_US.UTF-8\nENV HOME=/home/$NB_USER\n\n# Set NodeJS environment variables\nENV NODEJS_HOME /opt/node\nENV YARN_HOME /opt/yarn\nENV PATH=$NODEJS_HOME/bin:$YARN_HOME/bin:$PATH\n\n# Set GO environment variables.\nENV GOROOT /usr/local/go\nENV GOPATH $HOME/go\nENV PATH $GOROOT/bin:$GOPATH/bin:$PATH\n\n# Oracle environment variables\nENV ORACLE_HOME /opt/oracle/instantclient_18_5\nENV LD_RUN_PATH=$ORACLE_HOME\n\n# Install all OS dependencies for notebook server that starts but lacks all\n# features (e.g., download as all possible file formats)\n\nENV DEBIAN_FRONTEND noninteractive\nRUN apt-get update && \\\n  apt-get install -yq --no-install-recommends \\\n    bzip2 \\\n    ca-certificates \\\n    curl \\\n    fonts-liberation \\\n    g++ \\\n    gcc \\\n    git \\\n    language-pack-es \\\n    less \\\n    libaio1 \\\n    libffi-dev  \\\n    libgtk2.0-dev \\\n    libllvm-10-ocaml-dev \\\n    llvm-10 \\\n    llvm-10-dev \\\n    llvm-10-runtime \\\n    llvm-10-tools \\\n    locales \\\n    odbcinst \\\n    openssh-client \\\n    python3.7 \\\n    python3.7-dev \\\n    python3-pip \\\n    sudo \\\n    unzip \\\n    xz-utils \\\n    zip && \\\n  # Install Cloudera Impala driver\n  curl -f -s -O https://downloads.cloudera.com/connectors/ClouderaImpala_ODBC_2.6.4.1004/Debian/clouderaimpalaodbc_2.6.4.1004-2_amd64.deb && \\\n    dpkg -i clouderaimpalaodbc_2.6.4.1004-2_amd64.deb && \\\n  update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.7 1 && \\\n    update-alternatives --set python3 /usr/bin/python3.7 && \\\n    update-alternatives --install /usr/bin/python python /usr/bin/python3.7 2 && \\\n    update-alternatives --set python /usr/bin/python3.7 && \\\n    update-alternatives --install /usr/bin/pip pip /usr/bin/pip3 3 && \\\n    update-alternatives --set pip /usr/bin/pip3 && \\\n  # Add Tini\n    curl -f -s -L -o /usr/local/bin/tini https://github.com/krallin/tini/releases/download/v0.18.0/tini && \\\n    chmod +x /usr/local/bin/tini && \\\n  echo \"en_US.UTF-8 UTF-8\" > /etc/locale.gen && \\\n    locale-gen && rm -rf /var/lib/apt/lists/*;\n\n# Install Node, Npm, Yarn & Go\nRUN curl -f -s -O https://nodejs.org/dist/v${NODE_VERSION}/node-v${NODE_VERSION}-linux-x64.tar.xz && \\\n    tar -xf node-v${NODE_VERSION}-linux-x64.tar.xz && \\\n    mv node-v${NODE_VERSION}-linux-x64 ${NODEJS_HOME} && \\\n    curl -f -L -O https://yarnpkg.com/downloads/${YARN_VERSION}/yarn-v${YARN_VERSION}.tar.gz && \\\n    tar zxf yarn-v${YARN_VERSION}.tar.gz && \\\n    mv yarn-v${YARN_VERSION} ${YARN_HOME} && \\\n    mkdir -p ${GOROOT} && \\\n    mkdir -p /home/$NB_USER/go && \\\n    curl -f -s https://dl.google.com/go/go${GO_VERSION}.linux-amd64.tar.gz | tar xzf - -C ${GOROOT} --strip-components=1 && rm node-v${NODE_VERSION}-linux-x64.tar.xz\n\n\n# Install Minio client\nRUN curl -f -s -O https://dl.min.io/client/mc/release/linux-amd64/mc && \\\n    chmod +x mc && \\\n    mv mc /usr/local/bin/mc\n\n# Install Oracle client\nCOPY instantclient-* /tmp/\nRUN mkdir -p /opt/oracle && \\\n\tunzip \"/tmp/instantclient*.zip\" -d /opt/oracle && \\\n\tsh -c \"echo $ORACLE_HOME > /etc/ld.so.conf.d/oracle-instantclient.conf\" && \\\n\tldconfig && \\\n\texport LD_LIBRARY_PATH=$ORACLE_HOME:$LD_LIBRARY_PATH\n\n# Build unixodbx 2.3.7\nRUN curl -f -s -O http://www.unixodbc.org/unixODBC-2.3.7.tar.gz && \\\n    tar xvf unixODBC-2.3.7.tar.gz && \\\n    cd unixODBC-2.3.7/ && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n    make && \\\n    make install && \\\n    make clean && \\\n    cd .. && rm unixODBC-2.3.7.tar.gz\n\nCOPY fix-permissions /usr/local/bin/fix-permissions\n# Create jovyan user with UID=1000 and in the 'users' group\n# and make sure these dirs are writable by the `users` group.\nRUN groupadd wheel -g 11 && \\\n    echo \"auth required pam_wheel.so use_uid\" >> /etc/pam.d/su && \\\n    useradd -m -s /bin/bash -N -u $NB_UID $NB_USER && \\\n    chmod g+w /etc/passwd && \\\n    fix-permissions $HOME && \\\n    # Fix apt user permissions\n    fix-permissions /usr/bin && \\\n    fix-permissions /usr/sbin && \\\n    fix-permissions /var/\n\n# Apt cleanup\nRUN apt-get clean && apt-get autoremove -y && \\\n    rm -rf /var/lib/{apt,dpkg,cache,log}/ && \\\n    rm -rf -- *\n\n\nUSER $NB_UID\n\n# Setup work directory for backward-compatibility\nRUN mkdir /home/$NB_USER/work && \\\n    fix-permissions /home/$NB_USER\n\n# Install Jupyter Notebook, Lab, and Hub\n# Generate a notebook server config\n# Cleanup temporary files\n# Correct permissions\n# Do all this in a single RUN command to avoid duplicating all of the\n# files across image layers when the permissions change\n\nRUN mkdir -p /home/$NB_USER/.local/bin && \\\n    fix-permissions /home/$NB_USER/.local/bin\n\nENV PATH /home/$NB_USER/.local/bin:$PATH\n\nUSER root\n\n# Install Python modules\nCOPY ./requirements.txt requirements.txt\n\nRUN pip install --no-cache-dir setuptools wheel && \\\n    pip install --no-cache-dir cython thriftpy && \\\n    pip install --no-cache-dir pip --upgrade && \\\n    pip install --no-cache-dir -r requirements.txt --ignore-installed PyYAML && \\\n    ln -s /usr/bin/llvm-config-10 /usr/bin/llvm-config\n\n# Install Jupyterlab Extensions\nCOPY ./jupyterlab_extensions.txt jupyterlab_extensions.txt\n\nRUN jupyter serverextension enable --py jupyterlab --sys-prefix && \\\n    jupyter notebook --generate-config && \\\n    jupyter labextension install `cat jupyterlab_extensions.txt | xargs` && \\\n    jupyter serverextension enable --py jupyterlab_git && \\\n    jupyter lab build && \\\n    fix-permissions /home/$NB_USER\n\nEXPOSE 8888\nWORKDIR $HOME\n\n# Add local files as late as possible to avoid cache busting\nCOPY start.sh /usr/local/bin/\nCOPY start-notebook.sh /usr/local/bin/\nCOPY start-singleuser.sh /usr/local/bin/\nCOPY jupyter_notebook_config.py /etc/jupyter/\nRUN fix-permissions /etc/jupyter/\n\n# Switch back to jovyan to avoid accidental container runs as root\nUSER $NB_UID\n\nENV PATH $PATH:/home/jovyan/.local/bin\n\n# Configure container startup\nENTRYPOINT [\"tini\", \"-g\", \"--\"]\nCMD [\"start-notebook.sh\"]\n"
}