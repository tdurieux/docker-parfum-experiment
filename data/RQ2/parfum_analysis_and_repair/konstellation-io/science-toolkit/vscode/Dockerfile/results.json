{
  "startTime": 1674215022471,
  "endTime": 1674215024011,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 103,
        "lineEnd": 103,
        "columnStart": 4,
        "columnEnd": 69
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 4,
        "columnEnd": 54
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 83,
        "lineEnd": 83,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 84,
        "lineEnd": 84,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 91,
        "lineEnd": 91,
        "columnStart": 4,
        "columnEnd": 54
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 98,
        "lineEnd": 98,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 100,
        "lineEnd": 100,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 21,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 4,
        "columnEnd": 31
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM codercom/code-server:3.10.2\n\nUSER root\n\nARG GO_VERSION=1.15.2\nARG GOLANGCI_VERSION=1.24.0\nENV GOROOT /usr/local/go\nENV GO111MODULE=on\nENV GOPATH /go\nENV PATH=$GOPATH/bin:$GOROOT/bin:$PATH\nENV LC_ALL C.UTF-8\nENV LANG C.UTF-8\nENV DEBIAN_FRONTEND noninteractive\n\nRUN mkdir /config && mkdir /go\n\nADD ./common-science-requirements/apt_get_libraries.txt /config/apt_get_libraries.txt\nADD ./config/apt_get_libraries.txt /tmp/custom_apt_get_libraries.txt\nRUN cat /tmp/custom_apt_get_libraries.txt >> /config/apt_get_libraries.txt\n\nRUN apt-get update && \\\n    apt-get install -yq --no-install-recommends \\\n        gcc \\\n        wget \\\n        jq \\\n        vim \\\n        curl \\\n        xz-utils \\\n        less \\\n        openssh-client \\\n        git \\\n        bzip2 \\\n        zip \\\n        unzip \\\n        ca-certificates \\\n        sudo \\\n        locales \\\n        fonts-liberation \\\n        libaio1 \\\n        build-essential libssl-dev libffi-dev \\\n        libxml2-dev libxslt1-dev zlib1g-dev \\\n        python3 \\\n        python3-pip \\\n        python3-dev \\\n        protobuf-compiler \\\n        `cat /config/apt_get_libraries.txt | xargs` && \\\n    update-alternatives --install /usr/bin/python python /usr/bin/python3 1 && \\\n    update-alternatives --set python /usr/bin/python3 && \\\n    update-alternatives --install /usr/bin/pip pip /usr/bin/pip3 2 && \\\n    update-alternatives --set pip /usr/bin/pip3 && rm -rf /var/lib/apt/lists/*;\n\n# Install Minio client\nRUN wget https://dl.min.io/client/mc/release/linux-amd64/mc && \\\n    chmod +x mc && \\\n    mv mc /usr/local/bin/mc\n\n# Install Oracle client\nENV ORACLE_HOME /opt/oracle/instantclient_18_5\nENV LD_RUN_PATH=$ORACLE_HOME\nCOPY instantclient-* /tmp/\nRUN mkdir -p /opt/oracle && \\\n\tunzip \"/tmp/instantclient*.zip\" -d /opt/oracle && \\\n\tsh -c \"echo /opt/oracle/instantclient_18_5 > /etc/ld.so.conf.d/oracle-instantclient.conf\" && \\\n\tldconfig && \\\n\texport LD_LIBRARY_PATH=/opt/oracle/instantclient_18_5:$LD_LIBRARY_PATH\n\n# Install Cloudera Impala driver\nRUN wget https://downloads.cloudera.com/connectors/ClouderaImpala_ODBC_2.6.4.1004/Debian/clouderaimpalaodbc_2.6.4.1004-2_amd64.deb && \\\n    dpkg -i clouderaimpalaodbc_2.6.4.1004-2_amd64.deb && \\\n    apt-get update && \\\n    apt-get install --no-install-recommends -y odbcinst && \\\n    rm clouderaimpalaodbc_2.6.4.1004-2_amd64.deb && rm -rf /var/lib/apt/lists/*;\n\n# Build unixodbx 2.3.7\nRUN cd /tmp && \\\n    wget https://www.unixodbc.org/unixODBC-2.3.7.tar.gz && \\\n    tar xvf unixODBC-2.3.7.tar.gz && \\\n    cd unixODBC-2.3.7/ && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n    make && \\\n    make install && \\\n    cd .. && rm unixODBC-2.3.7 -rf && rm unixODBC-2.3.7.tar.gz\n\nRUN pip install --no-cache-dir setuptools wheel && \\\n    pip install --no-cache-dir cython thriftpy\n\n# Install Libraries\nADD ./common-science-requirements/frameworks_requirements.txt /config/frameworks_requirements.txt\nADD ./config/frameworks_requirements.txt /tmp/custom_frameworks_requirements.txt\nRUN cat /tmp/custom_frameworks_requirements.txt >> /config/frameworks_requirements.txt\n\nRUN pip install --no-cache-dir -r /config/frameworks_requirements.txt\n\n# Install Libraries\nADD ./common-science-requirements/requirements.txt /config/requirements.txt\nADD ./config/requirements.txt /tmp/custom_requirements.txt\nRUN cat /tmp/custom_requirements.txt >> /config/requirements.txt\n\nRUN pip install --no-cache-dir --upgrade pip\n\nRUN pip install --no-cache-dir -r /config/requirements.txt\n\n# Golang\nRUN curl -f -O https://dl.google.com/go/go$GO_VERSION.linux-amd64.tar.gz \\\n    && tar -C /usr/local -xzf go$GO_VERSION.linux-amd64.tar.gz \\\n    && rm go$GO_VERSION.linux-amd64.tar.gz\n\nADD ./config/go_packages.txt /config/go_packages.txt\n\nCOPY default_user_settings.json /config/default_user_settings.json\n\n#\n# Install extensions\n#\nRUN mkdir /extensions\nRUN code-server \\\n      --install-extension christian-kohler.path-intellisense \\\n      --install-extension eamodio.gitlens \\\n      --install-extension gruntfuggly.todo-tree \\\n      --install-extension jithurjacob.nbpreviewer \\\n      --install-extension mechatroner.rainbow-csv \\\n      --install-extension mhutchie.git-graph \\\n      --install-extension ms-python.python \\\n      --install-extension golang.go \\\n      --install-extension njpwerner.autodocstring \\\n      --install-extension redhat.vscode-yaml \\\n      --install-extension tushortz.python-extended-snippets \\\n      --install-extension vscode-icons-team.vscode-icons \\\n      --install-extension wayou.vscode-todo-highlight \\\n      --install-extension yzhang.markdown-all-in-one \\\n      --install-extension zxh404.vscode-proto3 \\\n      --extensions-dir /extensions \\\n      /home/coder\n\nRUN chown coder:coder /go /home/coder /extensions -R && rm /tmp/* -rf\n\nUSER coder\n\n# Tools needed for VSCode Go Extension\nRUN go get -v $(cat /config/go_packages.txt)\nRUN go get -v golang.org/x/tools/gopls\n\nCOPY entrypoint.sh /entrypoint.sh\n\nENTRYPOINT [\"/entrypoint.sh\"]\n"
}