diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/konstellation-io/science-toolkit/vscode/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/konstellation-io/science-toolkit/vscode/Dockerfile/repaired.Dockerfile
index c035ccc..3ef93ab 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/konstellation-io/science-toolkit/vscode/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/konstellation-io/science-toolkit/vscode/Dockerfile/repaired.Dockerfile
@@ -47,7 +47,7 @@ RUN apt-get update && \
     update-alternatives --install /usr/bin/python python /usr/bin/python3 1 && \
     update-alternatives --set python /usr/bin/python3 && \
     update-alternatives --install /usr/bin/pip pip /usr/bin/pip3 2 && \
-    update-alternatives --set pip /usr/bin/pip3
+    update-alternatives --set pip /usr/bin/pip3 && rm -rf /var/lib/apt/lists/*;
 
 # Install Minio client
 RUN wget https://dl.min.io/client/mc/release/linux-amd64/mc && \
@@ -68,40 +68,40 @@ RUN mkdir -p /opt/oracle && \
 RUN wget https://downloads.cloudera.com/connectors/ClouderaImpala_ODBC_2.6.4.1004/Debian/clouderaimpalaodbc_2.6.4.1004-2_amd64.deb && \
     dpkg -i clouderaimpalaodbc_2.6.4.1004-2_amd64.deb && \
     apt-get update && \
-    apt-get install -y odbcinst && \
-    rm clouderaimpalaodbc_2.6.4.1004-2_amd64.deb
+    apt-get install --no-install-recommends -y odbcinst && \
+    rm clouderaimpalaodbc_2.6.4.1004-2_amd64.deb && rm -rf /var/lib/apt/lists/*;
 
 # Build unixodbx 2.3.7
 RUN cd /tmp && \
-    wget http://www.unixodbc.org/unixODBC-2.3.7.tar.gz && \
+    wget https://www.unixodbc.org/unixODBC-2.3.7.tar.gz && \
     tar xvf unixODBC-2.3.7.tar.gz && \
     cd unixODBC-2.3.7/ && \
-    ./configure && \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" && \
     make && \
     make install && \
-    cd .. && rm unixODBC-2.3.7 -rf
+    cd .. && rm unixODBC-2.3.7 -rf && rm unixODBC-2.3.7.tar.gz
 
-RUN pip install setuptools wheel && \
-    pip install cython thriftpy
+RUN pip install --no-cache-dir setuptools wheel && \
+    pip install --no-cache-dir cython thriftpy
 
 # Install Libraries
 ADD ./common-science-requirements/frameworks_requirements.txt /config/frameworks_requirements.txt
 ADD ./config/frameworks_requirements.txt /tmp/custom_frameworks_requirements.txt
 RUN cat /tmp/custom_frameworks_requirements.txt >> /config/frameworks_requirements.txt
 
-RUN pip install -r /config/frameworks_requirements.txt
+RUN pip install --no-cache-dir -r /config/frameworks_requirements.txt
 
 # Install Libraries
 ADD ./common-science-requirements/requirements.txt /config/requirements.txt
 ADD ./config/requirements.txt /tmp/custom_requirements.txt
 RUN cat /tmp/custom_requirements.txt >> /config/requirements.txt
 
-RUN pip install --upgrade pip
+RUN pip install --no-cache-dir --upgrade pip
 
-RUN pip install -r /config/requirements.txt
+RUN pip install --no-cache-dir -r /config/requirements.txt
 
 # Golang
-RUN curl -O https://dl.google.com/go/go$GO_VERSION.linux-amd64.tar.gz \
+RUN curl -f -O https://dl.google.com/go/go$GO_VERSION.linux-amd64.tar.gz \
     && tar -C /usr/local -xzf go$GO_VERSION.linux-amd64.tar.gz \
     && rm go$GO_VERSION.linux-amd64.tar.gz