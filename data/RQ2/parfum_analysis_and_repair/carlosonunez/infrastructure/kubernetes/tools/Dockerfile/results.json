{
  "startTime": 1674248820219,
  "endTime": 1674248820940,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 18,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 74
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 25,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 105
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 18,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 74
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 65
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine\nMAINTAINER Carlos Nunez <dev@carlosnunez.me>\n\nENV CERT_UTILS_VERSION=1.2\nENV KUBECTL_VERSION=1.10.2\nENV EXTRA_BINARIES=jq,bash,curl\n\n# Copy our kubectl initialization script\nCOPY entrypoint.sh /usr/local/bin/entrypoint.sh\nRUN chmod 755 /usr/local/bin/entrypoint.sh\n\n# Install additional useful utilities\nRUN apk add --no-cache --update-cache $(echo \"$EXTRA_BINARIES\" | tr ',' ' ')\n\n# Install cfssl and cfjson for creating a PKI and creating certificate with it.\nUSER root\nRUN for package in cfssl cfssljson; \\\n  do \\\n    curl -f --output \"/usr/local/bin/$package\" \\\n      --location \\\n      \"https://pkg.cfssl.org/R${CERT_UTILS_VERSION}/${package}_linux-amd64\" && \\\n    chmod +x \"/usr/local/bin/$package\"; \\\n  done\n\n# Install kubectl so you can do stuff with the k8s control plane\nRUN curl -f --output /usr/local/bin/kubectl \\\n    --location \\\n    https://storage.googleapis.com/kubernetes-release/release/v${KUBECTL_VERSION}/bin/linux/amd64/kubectl && \\\n  chmod +x /usr/local/bin/kubectl\n\n# Create a scratch directory\nRUN mkdir /scratch && chown 1000 /scratch\n\n# Make the entrypoint bash\nWORKDIR /scratch\nENTRYPOINT [ \"entrypoint.sh\" ]\n"
}