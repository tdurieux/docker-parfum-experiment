{
  "startTime": 1674216201142,
  "endTime": 1674216202443,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 1,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 1,
        "columnEnd": 27
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 1,
        "columnEnd": 51
      }
    }
  ],
  "repairedDockerfile": "FROM php:8.1-apache-bullseye\n\nRUN mv \"$PHP_INI_DIR/php.ini-development\" \"$PHP_INI_DIR/php.ini\"\n# Enable .htaccess files & mod_rewrite\nRUN sed -i '/<Directory \\/var\\/www\\/>/,/<\\/Directory>/ s/AllowOverride None/AllowOverride all/' /etc/apache2/apache2.conf\nRUN a2enmod rewrite\n\n#Most of this comes directly from the WordPress docker image\n#We don't inherit from it becase it has a VOLUME that causes issues\nRUN set -eux; \\\n\tapt-get update; \\\n\tapt-get install -y --no-install-recommends ghostscript git less ssh-client mariadb-client; \\\n\trm -rf /var/lib/apt/lists/*\n\n# install Node.js\nRUN curl -f -sL https://deb.nodesource.com/setup_12.x | bash -; \\\n\tapt-get install --no-install-recommends -y nodejs; \\\n\trm -rf /var/lib/apt/lists/*;\n\n# install the PHP extensions, including XDebug\nRUN set -ex; \\\n\tapt-get update; \\\n\tapt-get install -y --no-install-recommends \\\n\tlibfreetype6-dev \\\n\tlibjpeg-dev \\\n\tlibmagickwand-dev \\\n\tlibpng-dev \\\n\tlibzip-dev \\\n\t; \\\n\tdocker-php-ext-configure gd --with-freetype --with-jpeg; \\\n\tdocker-php-ext-install -j \"$(nproc)\" \\\n\tbcmath \\\n\texif \\\n\tgd \\\n\tmysqli \\\n\topcache \\\n\tzip \\\n\t; \\\n\tpecl install imagick; \\\n\tpecl install xdebug-3.1.4; \\\n\tdocker-php-ext-enable imagick xdebug;\\\n\trm -rf /var/lib/apt/lists/*\n\n#XDebug settings\nRUN echo \"[XDebug]\\nxdebug.mode = debug\\nxdebug.start_with_request = 1\" > $PHP_INI_DIR/conf.d/xdebug.ini\n\n#WP recommended PHP settings\nRUN { \\\n\techo 'opcache.memory_consumption=128'; \\\n\techo 'opcache.interned_strings_buffer=8'; \\\n\techo 'opcache.max_accelerated_files=4000'; \\\n\techo 'opcache.revalidate_freq=2'; \\\n\techo 'opcache.fast_shutdown=1'; \\\n\t} > /usr/local/etc/php/conf.d/opcache-recommended.ini\n\n#install WP-CLI\nRUN curl -f -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar \\\n\t&& chmod +x wp-cli.phar \\\n\t&& mv wp-cli.phar /usr/local/bin/wp\n\n#install Composer\nWORKDIR /tmp\nRUN php -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\" \\\n\t&& php composer-setup.php --quiet --install-dir=/usr/local/bin --filename=composer\n\n#add vscode user\nRUN useradd -ms /bin/bash vscode \\\n\t&& usermod -aG www-data vscode\n\nWORKDIR /var/www/html\nUSER www-data\n\n#Download WP\nRUN wp core download\n\n#add dirs for plugin and theme dev\nRUN mkdir -p /var/www/html/wp-content/plugins/anspress-question-answer;\n\nUSER root\nRUN chown -R www-data:www-data /var/www/html/\nRUN chmod g+w -R /var/www/html/\nRUN find /var/www/html/ -type d -exec chmod g+s {} \\;\n"
}