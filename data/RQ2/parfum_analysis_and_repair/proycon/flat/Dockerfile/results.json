{
  "startTime": 1674253184328,
  "endTime": 1674253185498,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 89,
        "lineEnd": 89,
        "columnStart": 24,
        "columnEnd": 37
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 18,
        "columnEnd": 186
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:latest\nLABEL org.opencontainers.image.authors=\"Maarten van Gompel <proycon@anaproy.nl>\"\nLABEL description=\"FLAT - FoLiA Linguistic Annotation Tool. A web-based annotation environment.\"\n\n\nENV FLAT_USER=\"flat\"\nENV FLAT_PASSWORD=\"flat\"\nENV FLAT_EMAIL=\"flat@example.org\"\n\n#The domain on which the site is accessible\nENV FLAT_DOMAIN=\"localhost\"\n\n#replace with your name\nENV FLAT_ADMIN_NAME=\"FLAT Administrator\"\n\n#Set this to 1 if you are behind a reverse proxy that handles HTTPS\n#(which you should be in production scenarios)\n##Make sure your reverse proxy sets and forwards the X-Forwarded-Proto header, and strips it from incoming user request\nENV FLAT_REVERSE_PROXY_HTTPS=0\n\nENV FLAT_DATABASE_ENGINE=\"django.db.backends.sqlite3\"\nENV FLAT_DATABASE=\"/data/flat.db\"\n#the following are not needed for sqlite:\nENV FLAT_DATABASE_USER=\"\"\nENV FLAT_DATABASE_PASSWORD=\"\"\nENV FLAT_DATABASE_HOST=\"\"\nENV FLAT_DATABASE_PORT=\"\"\n\nENV FOLIADOCSERVE_HOST=\"127.0.0.1\"\nENV FOLIADOCSERVE_PORT=8080\n\n#Directory where all documents are stored\nENV FLAT_DOCROOT=\"/data/flat.docroot\"\n\n#Change this to something that you don't publish publicly anywhere\nENV FLAT_SECRET_KEY=\"ki5^nfv01@1g7(+*#l_0fmi9h&cf^_lv6bs4j9^6mpr&(%o4zk\"\n\nENV FLAT_GIT_NAME=$FLAT_ADMIN_NAME\nENV FLAT_GIT_MAIL=$FLAT_EMAIL\n\n# For OpenID Connect Authentication, set FLAT_OIDC=1 and configure all of these:\nENV FLAT_OIDC=0\nENV FLAT_CLIENT_ID=\"\"\n# URL of the OIDC OP authorization endpoint\nENV FLAT_AUTH_ENDPOINT=\"\"\n#URL of the OIDC OP token endpoint\nENV FLAT_TOKEN_ENDPOINT=\"\"\n#URL of the OIDC OP userinfo endpoint\nENV FLAT_USER_ENDPOINT=\"\"\n\n\n\n#Leave as-is\nENV DJANGO_SETTINGS_MODULE=flat_settings\nENV UWSGI_UID=100\nENV UWSGI_GID=100\n\n#Sane defaults for light use\nENV UWSGI_PROCESSES=2\nENV UWSGI_THREADS=2\n\nRUN mkdir -p /data\n\n# Temporarily add the sources\nCOPY . /usr/src/flat\n\n# Install all global dependencies\nRUN apk update && apk add --no-cache git runit curl ca-certificates nginx uwsgi uwsgi-python3 py3-pip py3-yaml py3-lxml py3-requests py3-django py3-wheel py3-numpy py3-cryptography py3-openssl sudo\n\n# Prepare environment\nRUN mkdir -p /etc/service/nginx /etc/service/uwsgi /etc/service/foliadocserve\n\n# Patch to set proper mimetypes and maximum upload size\nRUN sed -i 's/txt;/txt log;/' /etc/nginx/mime.types &&\\\n    sed -i 's/xml;/xml xsl;/' /etc/nginx/mime.types &&\\\n    sed -i 's/client_max_body_size 1m;/client_max_body_size 1000M;/' /etc/nginx/nginx.conf\n\n# Configure webserver and uwsgi server\nRUN cp /usr/src/flat/runit.d/nginx.run.sh /etc/service/nginx/run &&\\\n    chmod a+x /etc/service/nginx/run &&\\\n    cp /usr/src/flat/runit.d/uwsgi.run.sh /etc/service/uwsgi/run &&\\\n    chmod a+x /etc/service/uwsgi/run &&\\\n    cp /usr/src/flat/runit.d/foliadocserve.run.sh /etc/service/foliadocserve/run &&\\\n    chmod a+x /etc/service/foliadocserve/run &&\\\n    cp /usr/src/flat/flat/wsgi.py /etc/flat.wsgi &&\\\n    chmod a+x /etc/flat.wsgi &&\\\n    cp -f /usr/src/flat/nginx.conf /etc/nginx/http.d/default.conf\n\n# Install FLAT\nRUN cd /usr/src/flat && pip install --no-cache-dir . && \\\n    ln -s /usr/lib/python3.*/site-packages/flat /opt/flat && \\\n    ln -s /usr/lib/python3.*/site-packages/django /opt/django && \\\n    sed '/remove me/d' settings.py > flat_settings.py && \\\n    cp flat_settings.py /usr/lib/python3.*/site-packages/ && \\\n    sudo -u nginx -- git config --global user.email \"$FLAT_GIT_MAIL\" && \\\n    sudo -u nginx -- git config --global user.name \"$FLAT_GIT_NAME\" && \\\n    rm -Rf /usr/src/flat\n\n\n# Database and document root will be created on first start\n\nVOLUME [\"/data\"]\nEXPOSE 80\nWORKDIR /\n\nENTRYPOINT [\"runsvdir\",\"-P\",\"/etc/service\"]\n"
}