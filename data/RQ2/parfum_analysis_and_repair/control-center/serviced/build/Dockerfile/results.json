{
  "startTime": 1674253007463,
  "endTime": 1674253009064,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 89,
        "lineEnd": 89,
        "columnStart": 28,
        "columnEnd": 56
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 92
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 26,
        "columnEnd": 82
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 26,
        "columnEnd": 67
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 26,
        "columnEnd": 83
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 26,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 26,
        "columnEnd": 61
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 26,
        "columnEnd": 79
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 26,
        "columnEnd": 52
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 26,
        "columnEnd": 86
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 26,
        "columnEnd": 80
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 22,
        "columnEnd": 64
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 26,
        "columnEnd": 73
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 26,
        "columnEnd": 82
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 26,
        "columnEnd": 67
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 26,
        "columnEnd": 83
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 26,
        "columnEnd": 51
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 26,
        "columnEnd": 61
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 26,
        "columnEnd": 79
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 26,
        "columnEnd": 52
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 26,
        "columnEnd": 86
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 26,
        "columnEnd": 80
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 22,
        "columnEnd": 64
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 26,
        "columnEnd": 73
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# This file describes the standard way to build serviced, using docker\n#\n# Usage:\n#\n# # Assemble the full dev environment. This is slow the first time.\n# docker build -t docker .\n# # Apparmor messes with privileged mode: disable it\n# /etc/init.d/apparmor stop ; /etc/init.d/apparmor teardown\n#\n# # Mount your source in an interactive container for quick testing:\n# docker run -v `pwd`:/go/src/github.com/zenoss/serviced -privileged -lxc-conf=lxc.aa_profile=unconfined -i -t serviced bash\n#\n\n# Please be careful when changing the 'FROM' line below - the packaging code\n# uses the output of 'lsb_release' to determine the version string of the\n# .deb pacakge, and if the base image changes here, then that string will\n# change accordingly.\nFROM ubuntu:xenial\n\nMAINTAINER Zenoss, Inc <dev@zenoss.com>\n\nRUN apt-get update -qq && apt-get install --no-install-recommends -qqy iptables ca-certificates aufs-tools && rm -rf /var/lib/apt/lists/*;\n\n# Build dependencies\n#RUN\tdpkg-divert --local --rename --add /sbin/initctl\n#RUN\tln -s /bin/true /sbin/initctl\nRUN apt-get update -qq && apt-get install --no-install-recommends -y -q wget curl git unzip && rm -rf /var/lib/apt/lists/*;\n\n# Install Go\nRUN curl -f -s https://dl.google.com/go/go1.14.4.linux-amd64.tar.gz | tar -v -C /usr/local -xz\nENV\tGOPATH  /go\nENV\tPATH $PATH:/go/bin:/usr/local/go/bin\nRUN\tgo get github.com/tools/godep\n\n# build dependencies\nRUN apt-get update -qq && apt-get install --no-install-recommends -y -q make gcc libpam0g-dev ruby ruby-dev && rm -rf /var/lib/apt/lists/*;\nRUN\tgem install fpm\nRUN apt-get update -qq && apt-get install --no-install-recommends -y -q rpm && rm -rf /var/lib/apt/lists/*;\nRUN apt-get update -qq && apt-get install --no-install-recommends -y -q mercurial bzr && rm -rf /var/lib/apt/lists/*;\nRUN apt-get update -qq && apt-get install --no-install-recommends -y -q libdevmapper-dev libsqlite3-dev && rm -rf /var/lib/apt/lists/*;\n\n# Install the xvfb for firefox and chrome so they can run on a headless system\nRUN apt-get update -qq && apt-get install --no-install-recommends -y -q xvfb && rm -rf /var/lib/apt/lists/*;\n\n# Install chromedriver that selenium needs to work with chrome\n# (from https://devblog.supportbee.com/2014/10/27/setting-up-cucumber-to-run-with-Chrome-on-Linux/)\nRUN wget -N https://chromedriver.storage.googleapis.com/2.24/chromedriver_linux64.zip -P /tmp\nRUN unzip /tmp/chromedriver_linux64.zip -d /tmp\nRUN mv /tmp/chromedriver /usr/bin\nRUN chmod +x /usr/bin/chromedriver\nRUN rm /tmp/chromedriver_linux64.zip\n\n# Install chrome - blend of info from several sources\n# General process info: http://askubuntu.com/questions/79280/how-to-install-chrome-browser-properly-via-command-line\n# Public Key info for safe download: http://www.google.com/linuxrepositories/\n# Info about differnet Chrome versions: http://www.ubuntuupdates.org/package/google_chrome/stable/main/base/google-chrome-stable\nRUN apt-get update -qq && apt-get install --no-install-recommends -y -q libxss1 libappindicator1 libindicator7 && rm -rf /var/lib/apt/lists/*;\nRUN wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -\nRUN echo \"deb http://dl.google.com/linux/chrome/deb/ stable main\" >> /etc/apt/sources.list.d/google-chrome.list\n\n# Tried a specific version like 41.0.2272.76-1, but specifying on the command line doesn't always work :-(\nRUN apt-get update -qq && apt-get install --no-install-recommends -y -q --force-yes google-chrome-stable && rm -rf /var/lib/apt/lists/*;\n\n\n# Install nodejs, npm, gulp, etc\nRUN curl -f -sL https://deb.nodesource.com/setup_10.x | bash -\nRUN apt update -qq && apt install --no-install-recommends -y nodejs=10.21.0-1nodesource1 && rm -rf /var/lib/apt/lists/*;\n#RUN apt-get update -qq && apt-get install -y -q nodejs=0.10.25~dfsg2-2ubuntu1 npm=1.3.10~dfsg-1\n# karma has dependencies that need to run native builds, so we need build-essential\nRUN apt-get update -qq && apt-get install --no-install-recommends -yq build-essential=12.1ubuntu2 && rm -rf /var/lib/apt/lists/*;\n\n# Setup Xvfb - FF and chrome will connect to this DISPLAY\n# (https://github.com/keyvanfatehi/docker-chrome-xvfb)\nENV DISPLAY :99\nADD xvfb_init /etc/init.d/xvfb\nRUN chmod a+x /etc/init.d/xvfb\n\n# install and use yarn instead of npm\nRUN npm install -g yarn@1.22.4 && npm cache clean --force;\n\n# make a place for yarn globals to live\nRUN mkdir /yarn-global\nRUN chmod 755 /yarn-global\nRUN yarn global add gulp@3.9.1 jshint@2.11.1 babel@6.23.0 --global-folder /yarn-global\n\n# Cache the NPM packages within the docker image\nRUN mkdir -p /npm-cache/serviced/node_modules\nADD package.json /npm-cache/serviced/package.json\nADD yarn.lock /npm-cache/serviced/yarn.lock\nRUN cd /npm-cache/serviced; yarn install --pure-lockfile && yarn cache clean;\n\n# HACK - yarn doesnt try to normalize permissions after\n# unpacking tar files so do it by hand. see\n# https://github.com/yarnpkg/yarn/pull/1490\nRUN chmod -R +r /npm-cache/serviced/node_modules\n\n# add a script that allows tasks to be\n# performed as a specific user\nADD userdo.sh /root/userdo.sh\n\nWORKDIR\t/go/src/github.com/control-center/serviced\n"
}