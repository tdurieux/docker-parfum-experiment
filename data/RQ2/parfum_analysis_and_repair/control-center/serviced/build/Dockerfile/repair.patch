diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/control-center/serviced/build/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/control-center/serviced/build/Dockerfile/repaired.Dockerfile
index f89b11e..23352f2 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/control-center/serviced/build/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/control-center/serviced/build/Dockerfile/repaired.Dockerfile
@@ -19,32 +19,32 @@ FROM ubuntu:xenial
 
 MAINTAINER Zenoss, Inc <dev@zenoss.com>
 
-RUN	apt-get update -qq && apt-get install -qqy iptables ca-certificates aufs-tools
+RUN apt-get update -qq && apt-get install --no-install-recommends -qqy iptables ca-certificates aufs-tools && rm -rf /var/lib/apt/lists/*;
 
 # Build dependencies
 #RUN	dpkg-divert --local --rename --add /sbin/initctl
 #RUN	ln -s /bin/true /sbin/initctl
-RUN	apt-get update -qq && apt-get install -y -q wget curl git unzip
+RUN apt-get update -qq && apt-get install --no-install-recommends -y -q wget curl git unzip && rm -rf /var/lib/apt/lists/*;
 
 # Install Go
-RUN	curl -s https://dl.google.com/go/go1.14.4.linux-amd64.tar.gz | tar -v -C /usr/local -xz
+RUN curl -f -s https://dl.google.com/go/go1.14.4.linux-amd64.tar.gz | tar -v -C /usr/local -xz
 ENV	GOPATH  /go
 ENV	PATH $PATH:/go/bin:/usr/local/go/bin
 RUN	go get github.com/tools/godep
 
 # build dependencies
-RUN	apt-get update -qq && apt-get install -y -q make gcc libpam0g-dev ruby ruby-dev
+RUN apt-get update -qq && apt-get install --no-install-recommends -y -q make gcc libpam0g-dev ruby ruby-dev && rm -rf /var/lib/apt/lists/*;
 RUN	gem install fpm
-RUN	apt-get update -qq && apt-get install -y -q rpm
-RUN	apt-get update -qq && apt-get install -y -q mercurial bzr
-RUN apt-get update -qq && apt-get install -y -q libdevmapper-dev libsqlite3-dev
+RUN apt-get update -qq && apt-get install --no-install-recommends -y -q rpm && rm -rf /var/lib/apt/lists/*;
+RUN apt-get update -qq && apt-get install --no-install-recommends -y -q mercurial bzr && rm -rf /var/lib/apt/lists/*;
+RUN apt-get update -qq && apt-get install --no-install-recommends -y -q libdevmapper-dev libsqlite3-dev && rm -rf /var/lib/apt/lists/*;
 
 # Install the xvfb for firefox and chrome so they can run on a headless system
-RUN apt-get update -qq && apt-get install -y -q xvfb
+RUN apt-get update -qq && apt-get install --no-install-recommends -y -q xvfb && rm -rf /var/lib/apt/lists/*;
 
 # Install chromedriver that selenium needs to work with chrome
 # (from https://devblog.supportbee.com/2014/10/27/setting-up-cucumber-to-run-with-Chrome-on-Linux/)
-RUN wget -N http://chromedriver.storage.googleapis.com/2.24/chromedriver_linux64.zip -P /tmp
+RUN wget -N https://chromedriver.storage.googleapis.com/2.24/chromedriver_linux64.zip -P /tmp
 RUN unzip /tmp/chromedriver_linux64.zip -d /tmp
 RUN mv /tmp/chromedriver /usr/bin
 RUN chmod +x /usr/bin/chromedriver
@@ -54,20 +54,20 @@ RUN rm /tmp/chromedriver_linux64.zip
 # General process info: http://askubuntu.com/questions/79280/how-to-install-chrome-browser-properly-via-command-line
 # Public Key info for safe download: http://www.google.com/linuxrepositories/
 # Info about differnet Chrome versions: http://www.ubuntuupdates.org/package/google_chrome/stable/main/base/google-chrome-stable
-RUN apt-get update -qq && apt-get install -y -q libxss1 libappindicator1 libindicator7
+RUN apt-get update -qq && apt-get install --no-install-recommends -y -q libxss1 libappindicator1 libindicator7 && rm -rf /var/lib/apt/lists/*;
 RUN wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -
 RUN echo "deb http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list
 
 # Tried a specific version like 41.0.2272.76-1, but specifying on the command line doesn't always work :-(
-RUN apt-get update -qq && apt-get install -y -q --force-yes google-chrome-stable
+RUN apt-get update -qq && apt-get install --no-install-recommends -y -q --force-yes google-chrome-stable && rm -rf /var/lib/apt/lists/*;
 
 
 # Install nodejs, npm, gulp, etc
-RUN curl -sL https://deb.nodesource.com/setup_10.x | bash -
-RUN apt update -qq && apt install -y nodejs=10.21.0-1nodesource1
+RUN curl -f -sL https://deb.nodesource.com/setup_10.x | bash -
+RUN apt update -qq && apt install --no-install-recommends -y nodejs=10.21.0-1nodesource1 && rm -rf /var/lib/apt/lists/*;
 #RUN apt-get update -qq && apt-get install -y -q nodejs=0.10.25~dfsg2-2ubuntu1 npm=1.3.10~dfsg-1
 # karma has dependencies that need to run native builds, so we need build-essential
-RUN apt-get update -qq && apt-get install -yq build-essential=12.1ubuntu2
+RUN apt-get update -qq && apt-get install --no-install-recommends -yq build-essential=12.1ubuntu2 && rm -rf /var/lib/apt/lists/*;
 
 # Setup Xvfb - FF and chrome will connect to this DISPLAY
 # (https://github.com/keyvanfatehi/docker-chrome-xvfb)
@@ -76,7 +76,7 @@ ADD xvfb_init /etc/init.d/xvfb
 RUN chmod a+x /etc/init.d/xvfb
 
 # install and use yarn instead of npm
-RUN npm install -g yarn@1.22.4
+RUN npm install -g yarn@1.22.4 && npm cache clean --force;
 
 # make a place for yarn globals to live
 RUN mkdir /yarn-global
@@ -87,7 +87,7 @@ RUN yarn global add gulp@3.9.1 jshint@2.11.1 babel@6.23.0 --global-folder /yarn-
 RUN mkdir -p /npm-cache/serviced/node_modules
 ADD package.json /npm-cache/serviced/package.json
 ADD yarn.lock /npm-cache/serviced/yarn.lock
-RUN cd /npm-cache/serviced; yarn install --pure-lockfile
+RUN cd /npm-cache/serviced; yarn install --pure-lockfile && yarn cache clean;
 
 # HACK - yarn doesnt try to normalize permissions after
 # unpacking tar files so do it by hand. see