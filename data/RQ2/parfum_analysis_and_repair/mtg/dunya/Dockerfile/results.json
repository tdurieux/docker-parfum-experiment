{
  "startTime": 1674252454097,
  "endTime": 1674252455621,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 22,
        "columnEnd": 61
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 20,
        "columnStart": 9,
        "columnEnd": 19
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 20,
        "columnStart": 9,
        "columnEnd": 19
      }
    }
  ],
  "repairedDockerfile": "FROM mtgupf/essentia:ubuntu20.04-v2.1_beta5\nENV PYTHONUNBUFFERED 1\nENV LANG C.UTF-8\n\nRUN apt-get update && apt-get install --no-install-recommends -y wget ca-certificates && rm -rf /var/lib/apt/lists/*\n\nRUN wget -q -O - https://deb.nodesource.com/setup_18.x | bash - \\\n      && apt-get install -y --no-install-recommends \\\n         cmake \\\n         libmad0-dev \\\n         libsndfile1-dev \\\n         libgd-dev \\\n         libboost-filesystem-dev \\\n         libboost-program-options-dev \\\n         libboost-regex-dev \\\n         nodejs \\\n         libsndfile1-dev \\\n         build-essential \\\n         libpython3.8-dev \\\n         lame \\\n         libffi-dev \\\n      && apt-get remove -y python3-yaml python3-six python3-numpy \\\n      && rm -rf /var/lib/apt/lists/*\n\nRUN wget -O get-pip.py 'https://bootstrap.pypa.io/get-pip.py' \\\n    && python3 get-pip.py --disable-pip-version-check --no-cache-dir \\\n    && rm -r get-pip.py\n\n\nRUN mkdir /code\nWORKDIR /code\n\nADD requirements.txt /code/\nRUN pip3 install --no-cache-dir numpy==1.19.5 six\nRUN pip3 install --no-cache-dir -r requirements.txt\n\nADD requirements_dev.txt /code/\nRUN pip3 install --no-cache-dir -r requirements_dev.txt\n\nRUN mkdir /sources\nWORKDIR /sources\nRUN git clone https://github.com/MTG/pycompmusic.git\nWORKDIR /sources/pycompmusic\nRUN pip3 install --no-cache-dir -e . -t /usr/local/lib/python3.8/dist-packages/\n\n\nADD package.json /code/\nWORKDIR /code\nRUN npm install && rm -r ~/.npm && npm cache clean --force;\n\nADD . /code/\n\nRUN npm run build\nWORKDIR /code\n# TODO: Could be made part of the frontend build script\nRUN bash build-less.sh\n\nRUN python3 manage.py collectstatic --settings dunya.build_settings\n"
}