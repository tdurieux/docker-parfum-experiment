{
  "startTime": 1674248721348,
  "endTime": 1674248722165,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 26,
        "columnEnd": 52
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 26,
        "columnEnd": 56
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 25,
        "columnEnd": 49
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 25,
        "columnEnd": 50
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 33,
        "columnEnd": 70
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 26,
        "columnEnd": 52
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 26,
        "columnEnd": 62
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 22,
        "columnStart": 22,
        "columnEnd": 7
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 24,
        "lineEnd": 40,
        "columnStart": 22,
        "columnEnd": 19
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 22,
        "columnStart": 22,
        "columnEnd": 7
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 24,
        "lineEnd": 40,
        "columnStart": 22,
        "columnEnd": 19
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.6.13\nENV PYTHONUNBUFFERED 1\nENV DEBIAN_FRONTEND noninteractive\nENV MESSAGELEVEL QUIET\n\nARG ENABLE_LDAP=false\nARG ENABLE_PAM=false\nARG ENABLE_PGP=false\nARG ENABLE_GOOGLEBUILD=false\nARG ENABLE_GLOBUS=false\nARG ENABLE_SAML=false\n\n################################################################################\n# CORE\n# Do not modify this section\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    pkg-config \\\n    cmake \\\n    openssl \\\n    wget \\\n    git \\\n    vim && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    anacron \\\n    autoconf \\\n    automake \\\n    libarchive-dev \\\n    libtool \\\n    libopenblas-dev \\\n    libglib2.0-dev \\\n    gfortran \\\n    libxml2-dev \\\n    libxmlsec1-dev \\\n    libhdf5-dev \\\n    libgeos-dev \\\n    libsasl2-dev \\\n    libldap2-dev \\\n    squashfs-tools \\\n    build-essential && rm -rf /var/lib/apt/lists/*;\n\n# Install Python requirements out of /tmp so not triggered if other contents of /code change\nCOPY requirements.txt /tmp/requirements.txt\nRUN pip install --no-cache-dir --upgrade pip\nRUN pip install --no-cache-dir -r /tmp/requirements.txt\n\nCOPY . /code/\n\n################################################################################\n# PLUGINS\n# You are free to uncomment the plugins that you want to use\n\n# Install LDAP (uncomment if wanted)\nRUN if $ENABLE_LDAP; then \\\n pip install --no-cache-dir python3-ldap; fi;\nRUN if $ENABLE_LDAP; then \\\n pip install --no-cache-dir django-auth-ldap; fi;\n\n# Install PAM Authentication (uncomment if wanted)\nRUN if $ENABLE_PAM; then \\\n pip install --no-cache-dir django-pam; fi;\n\n# PGP keystore dependencies\nRUN if $ENABLE_PGP; then \\\n pip install --no-cache-dir pgpdump >=1.4; fi;\n\n# Ensure Google Build Installed\nRUN if $ENABLE_GOOGLEBUILD; then \\\n pip install --no-cache-dir sregistry[google-build]; fi;\nENV SREGISTRY_GOOGLE_STORAGE_PRIVATE=true\n\n# Install Globus (uncomment if wanted)\nRUN if $ENABLE_GLOBUS; then /bin/bash /code/scripts/globus/globus-install.sh ; fi;\n\n# Install SAML (uncomment if wanted)\nRUN if $ENABLE_SAML; then \\\n pip install --no-cache-dir python3-saml; fi;\nRUN if $ENABLE_SAML; then \\\n pip install --no-cache-dir social-auth-core[saml]; fi;\n\n################################################################################\n# BASE\n\nRUN mkdir -p /code && mkdir -p /code/images\nRUN mkdir -p /var/www/images && chmod -R 0755 /code/images/\n\nWORKDIR /code\nRUN apt-get remove -y gfortran\n\nRUN apt-get autoremove -y\nRUN apt-get clean\nRUN rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\n# Install crontab to setup jobs\nRUN echo \"0 0 * * * /usr/local/bin/python /code/manage.py reset_container_limits > /var/log/reset_container_limits.log 2>&1 \" >> /code/cronjob\nRUN echo \"0 1 * * * /bin/bash /code/scripts/backup_db.sh > /var/log/backup_db.log 2>&1 \" >> /code/cronjob\nRUN echo \"0 2 * * * /usr/local/bin/python /code/manage.py cleanup_dummy > /var/log/cleanup_dummy.log 2>&1 \" >> /code/cronjob\nRUN crontab /code/cronjob\nRUN rm /code/cronjob\n\n# Create hashed temporary upload locations\nRUN mkdir -p /var/www/images/_upload/{0..9} && chmod 777 -R /var/www/images/_upload\n\nCMD /code/run_uwsgi.sh\n\nEXPOSE 3031\n"
}