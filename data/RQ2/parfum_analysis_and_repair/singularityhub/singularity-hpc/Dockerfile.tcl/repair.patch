diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/singularityhub/singularity-hpc/Dockerfile.tcl b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/singularityhub/singularity-hpc/Dockerfile.tcl/repaired.Dockerfile
index 1adc178..5ddd86a 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/singularityhub/singularity-hpc/Dockerfile.tcl
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/singularityhub/singularity-hpc/Dockerfile.tcl/repaired.Dockerfile
@@ -7,7 +7,7 @@ LABEL MAINTAINER @vsoch
 ENV DEBIAN_FRONTEND noninteractive
 
 RUN apt-get update && \
-    apt-get install -y build-essential \
+    apt-get install --no-install-recommends -y build-essential \
     gcc \
     tcl-dev \
     autoconf \
@@ -18,24 +18,24 @@ RUN apt-get update && \
     python3-pip \
     curl \
     less \
-    wget
+    wget && rm -rf /var/lib/apt/lists/*;
 
-RUN wget -O- http://neuro.debian.net/lists/xenial.us-ca.full | tee /etc/apt/sources.list.d/neurodebian.sources.list && \
+RUN wget -O- https://neuro.debian.net/lists/xenial.us-ca.full | tee /etc/apt/sources.list.d/neurodebian.sources.list && \
     apt-key adv --recv-keys --keyserver hkp://pool.sks-keyservers.net:80 0xA5D32F012649A5A9 && \
     apt-get update && \
-    apt-get install -y singularity-container
+    apt-get install --no-install-recommends -y singularity-container && rm -rf /var/lib/apt/lists/*;
 
-RUN curl -LJO https://github.com/cea-hpc/modules/releases/download/v4.7.0/modules-4.7.0.tar.gz && \
-    tar xfz modules-4.7.0.tar.gz  && \
+RUN curl -f -LJO https://github.com/cea-hpc/modules/releases/download/v4.7.0/modules-4.7.0.tar.gz && \
+    tar xfz modules-4.7.0.tar.gz && \
     cd modules-4.7.0 && \
-    ./configure && \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" && \
     make && \
-    make install
-    
-RUN pip3 install ipython
+    make install && rm modules-4.7.0.tar.gz
+
+RUN pip3 install --no-cache-dir ipython
 WORKDIR /code
 COPY . /code
-RUN pip3 install -e .[all]
+RUN pip3 install --no-cache-dir -e .[all]
 
 # If we don't run shpc through bash entrypoint, module commands not found
 ENTRYPOINT ["/code/entrypoint.sh"]