{
  "startTime": 1674219087297,
  "endTime": 1674219088340,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 18,
        "columnEnd": 83
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 18,
        "columnEnd": 43
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 18,
        "columnEnd": 83
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 18,
        "columnEnd": 43
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "####################################################################################################\n## Builder\n####################################################################################################\nFROM rust:1.62.0-bullseye AS builder\nRUN apt update && apt install --no-install-recommends -y libssl-dev pkg-config libz-dev libcurl4 postgresql && rm -rf /var/lib/apt/lists/*;\nRUN update-ca-certificates\n\n# Create appuser\nENV USER=bot\nENV UID=10001\n\nRUN adduser \\\n    --disabled-password \\\n    --gecos \"\" \\\n    --home \"/nonexistent\" \\\n    --shell \"/sbin/nologin\" \\\n    --no-create-home \\\n    --uid \"${UID}\" \\\n    \"${USER}\"\n\nWORKDIR /bot\n\nCOPY ./ .\n\nRUN cargo install diesel_cli --no-default-features --features postgres\n\nRUN cargo build --release\n\n####################################################################################################\n## Final image\n####################################################################################################\nFROM debian:bullseye-slim\n\nRUN apt update && apt install --no-install-recommends -y postgresql && rm -rf /var/lib/apt/lists/*;\n\n# Import from builder.\nCOPY --from=builder /etc/passwd /etc/passwd\nCOPY --from=builder /etc/group /etc/group\n\nWORKDIR /bot\n\n# Copy our build\nCOPY --from=builder /bot/target/release/el_monitorro ./\nCOPY --from=builder /bot/target/release/deliver ./\nCOPY --from=builder /bot/target/release/sync ./\nCOPY --from=builder /bot/target/release/cleaner ./\n\nCOPY --from=builder /bot/docker/start.sh ./\n\nCOPY --from=builder /usr/local/cargo/bin/diesel ./\nCOPY --from=builder /bot/migrations/ ./migrations/\n\n\n# Use an unprivileged user.\nUSER bot:bot\n\nCMD [\"bash\", \"/bot/start.sh\"]\n"
}