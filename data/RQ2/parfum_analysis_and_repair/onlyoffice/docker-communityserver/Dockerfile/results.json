{
  "startTime": 1674248702278,
  "endTime": 1674248703920,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 36,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 70,
        "lineEnd": 97,
        "columnStart": 4,
        "columnEnd": 53
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:18.04\n\nARG RELEASE_DATE=\"2016-06-21\"\nARG RELEASE_DATE_SIGN=\"\"\nARG VERSION=\"8.9.0.190\"\nARG SOURCE_REPO_URL=\"deb http://static.teamlab.com.s3.amazonaws.com/repo/debian squeeze main\"\nARG DEBIAN_FRONTEND=noninteractive\nARG PACKAGE_SYSNAME=\"onlyoffice\"\n\nARG LOG4J_VER=2.17.2\nARG LOG4J_BIN=apache-log4j-${LOG4J_VER}-bin\nARG LOG4J_ARCH=${LOG4J_BIN}.tar.gz\nARG LOG4J_DIR=./log4j\n\nARG ELK_DIR=/usr/share/elasticsearch\nARG ELK_LIB_DIR=${ELK_DIR}/lib\nARG ELK_MODULE_DIR=${ELK_DIR}/modules\n\nLABEL ${PACKAGE_SYSNAME}.community.release-date=\"${RELEASE_DATE}\" \\\n      ${PACKAGE_SYSNAME}.community.version=\"${VERSION}\" \\\n      description=\"Community Server is a free open-source collaborative system developed to manage documents, projects, customer relationship and emails, all in one place.\" \\\n      maintainer=\"Ascensio System SIA <support@${PACKAGE_SYSNAME}.com>\" \\\n      securitytxt=\"https://www.${PACKAGE_SYSNAME}.com/.well-known/security.txt\"\n\nENV LANG=en_US.UTF-8 \\\n    LANGUAGE=en_US:en \\\n    LC_ALL=en_US.UTF-8 \\\n    ELASTICSEARCH_VERSION=7.10.0\n\nRUN apt-get -y update && \\\n    apt-get -y upgrade && \\\n    apt-get -y dist-upgrade && \\\n    addgroup --system --gid 107 ${PACKAGE_SYSNAME} && \\\n    adduser -uid 104 --quiet --home /var/www/${PACKAGE_SYSNAME} --system --gid 107 ${PACKAGE_SYSNAME} && \\\n    addgroup --system --gid 104 elasticsearch && \\\n    adduser -uid 103 --quiet --home /nonexistent --system --gid 104 elasticsearch && \\\n    apt-get -yq --no-install-recommends install systemd \\\n                        systemd-sysv \\\n                        locales \\\n                        software-properties-common \\\n                        curl \\\n                        wget \\\n                        sudo && \\\n    cd /lib/systemd/system/sysinit.target.wants/ && ls | grep -v systemd-tmpfiles-setup | xargs rm -f $1 && \\\n    rm -f /lib/systemd/system/multi-user.target.wants/* \\\n    /etc/systemd/system/*.wants/* \\\n    /lib/systemd/system/local-fs.target.wants/* \\\n    /lib/systemd/system/sockets.target.wants/*udev* \\\n    /lib/systemd/system/sockets.target.wants/*initctl* \\\n    /lib/systemd/system/basic.target.wants/* \\\n    /lib/systemd/system/anaconda.target.wants/* \\\n    /lib/systemd/system/plymouth* \\\n    /lib/systemd/system/systemd-update-utmp* && \\\n    locale-gen en_US.UTF-8 && \\\n    echo \"#!/bin/sh\\nexit 0\" > /usr/sbin/policy-rc.d && \\\n    echo \"${SOURCE_REPO_URL}\" >> /etc/apt/sources.list && \\\n    echo \"deb https://download.mono-project.com/repo/ubuntu stable-bionic/snapshots/6.8.0.123 main\" | tee /etc/apt/sources.list.d/mono-official.list && \\\n    echo \"deb https://d2nlctn12v279m.cloudfront.net/repo/mono/ubuntu bionic main\" | tee /etc/apt/sources.list.d/mono-extra.list && \\\n    apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys CB2DE8E5 && \\\n    apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF && \\\n    wget https://nginx.org/keys/nginx_signing.key && \\\n    apt-key add nginx_signing.key && \\\n    echo \"deb http://nginx.org/packages/ubuntu/ bionic nginx\" >> /etc/apt/sources.list.d/nginx.list && \\\n    wget -qO - https://artifacts.elastic.co/GPG-KEY-elasticsearch | apt-key add - && \\\n    echo \"deb https://artifacts.elastic.co/packages/7.x/apt stable main\" | tee -a /etc/apt/sources.list.d/elastic-7.x.list && \\\n    add-apt-repository -y ppa:certbot/certbot && \\\n    add-apt-repository -y ppa:chris-lea/redis-server && \\\n    curl -f -sSL https://packages.microsoft.com/keys/microsoft.asc | apt-key add - && \\\n    echo \"deb [arch=amd64] https://packages.microsoft.com/ubuntu/18.04/prod bionic main\" >> /etc/apt/sources.list.d/microsoft-prod.list && \\\n    curl -f -sL https://deb.nodesource.com/setup_12.x | sudo -E bash - && \\\n    apt-get install --no-install-recommends -yq gnupg2 \\\n                        ca-certificates \\\n                        software-properties-common \\\n                        cron \\\n                        rsyslog \\\n\t\t\truby-dev \\\n\t\t\truby-god \\\n                        nodejs \\\n                        nginx \\\n                        gdb \\\n                        mono-complete \\\n                        ca-certificates-mono \\\n                        python-certbot-nginx \\\n                        htop \\\n                        nano \\\n                        dnsutils \\\n                        redis-server \\\n                        python3-pip \\\n                        multiarch-support \\\n                        iproute2 \\\n                        ffmpeg \\\n                        jq \\\n                        apt-transport-https \\\n                        elasticsearch=${ELASTICSEARCH_VERSION} \\\n                        mono-webserver-hyperfastcgi=0.4-7 \\\n                        dotnet-sdk-6.0 \\\n                        ${PACKAGE_SYSNAME}-communityserver \\\n                        ${PACKAGE_SYSNAME}-xmppserver && \\\n    rm -v ${ELK_LIB_DIR}/log4j-*.jar ${ELK_MODULE_DIR}/*/log4j-*.jar && \\\n    wget https://dlcdn.apache.org/logging/log4j/${LOG4J_VER}/${LOG4J_ARCH} && \\\n    mkdir ${LOG4J_DIR} && \\\n    tar -xf ${LOG4J_ARCH} -C ${LOG4J_DIR} && \\\n    cp -v ${LOG4J_DIR}/${LOG4J_BIN}/log4j-api-${LOG4J_VER}.jar ${ELK_LIB_DIR} && \\\n    cp -v ${LOG4J_DIR}/${LOG4J_BIN}/log4j-core-${LOG4J_VER}.jar ${ELK_LIB_DIR} && \\\n    cp -v ${LOG4J_DIR}/${LOG4J_BIN}/log4j-1.2-api-${LOG4J_VER}.jar ${ELK_MODULE_DIR}/x-pack-core && \\\n    cp -v ${LOG4J_DIR}/${LOG4J_BIN}/log4j-slf4j-impl-${LOG4J_VER}.jar ${ELK_MODULE_DIR}/x-pack-identity-provider && \\\n    cp -v ${LOG4J_DIR}/${LOG4J_BIN}/log4j-slf4j-impl-${LOG4J_VER}.jar ${ELK_MODULE_DIR}/x-pack-security && \\\n    rm -vr ${LOG4J_ARCH} ${LOG4J_DIR} && \\\n    zip -q -d ${ELK_LIB_DIR}/log4j-core-*.jar org/apache/logging/log4j/core/lookup/JndiLookup.class && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\nCOPY config /app/config/\nCOPY assets /app/assets/\nCOPY run-community-server.sh /app/run-community-server.sh\n\nRUN chmod -R 755 /app/*.sh\n\nVOLUME [\"/sys/fs/cgroup\",\"/var/log/${PACKAGE_SYSNAME}\", \"/var/www/${PACKAGE_SYSNAME}/Data\", \"/var/lib/mysql\", \"/etc/letsencrypt\"]\n\nEXPOSE 80 443 5222 3306 9865 9888 9866 9871 9882 5280\n\nCMD [\"/app/run-community-server.sh\"];\n"
}