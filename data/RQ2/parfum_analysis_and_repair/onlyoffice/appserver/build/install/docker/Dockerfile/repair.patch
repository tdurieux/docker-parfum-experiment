diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/onlyoffice/appserver/build/install/docker/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/onlyoffice/appserver/build/install/docker/Dockerfile/repaired.Dockerfile
index 51d78ab..5d103da 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/onlyoffice/appserver/build/install/docker/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/onlyoffice/appserver/build/install/docker/Dockerfile/repaired.Dockerfile
@@ -18,63 +18,63 @@ ENV LANG=en_US.UTF-8 \
 RUN apt-get -y update && \
     apt-get -y upgrade && \
     apt-get -y dist-upgrade && \
-    apt-get -yq install gnupg2 ca-certificates && \
-    apt-get install -yq sudo locales && \
+    apt-get -yq --no-install-recommends install gnupg2 ca-certificates && \
+    apt-get install --no-install-recommends -yq sudo locales && \
     addgroup --system --gid 107 onlyoffice && \
     adduser -uid 104 --quiet --home /var/www/onlyoffice --system --gid 107 onlyoffice && \
     addgroup --system --gid 104 elasticsearch && \
     adduser -uid 103 --quiet --home /nonexistent --system --gid 104 elasticsearch && \
     locale-gen en_US.UTF-8 && \
     apt-get -y update && \
-    apt-get install -yq software-properties-common wget curl cron rsyslog && \
-    curl -OL http://dev.mysql.com/get/mysql-apt-config_0.8.15-1_all.deb && \
+    apt-get install --no-install-recommends -yq software-properties-common wget curl cron rsyslog && \
+    curl -f -OL https://dev.mysql.com/get/mysql-apt-config_0.8.15-1_all.deb && \
     echo "mysql-apt-config mysql-apt-config/repo-codename select bionic" | sudo debconf-set-selections && \
     echo "mysql-apt-config mysql-apt-config/repo-distro select ubuntu" | sudo debconf-set-selections && \
     echo "mysql-apt-config mysql-apt-config/select-server select mysql-8.0" | sudo debconf-set-selections && \
     DEBIAN_FRONTEND=noninteractive dpkg -i mysql-apt-config_0.8.15-1_all.deb && \
     rm -f mysql-apt-config_0.8.15-1_all.deb && \
-    wget http://nginx.org/keys/nginx_signing.key && \
+    wget https://nginx.org/keys/nginx_signing.key && \
     apt-key add nginx_signing.key && \
     echo "deb http://nginx.org/packages/mainline/ubuntu/ bionic nginx" >> /etc/apt/sources.list.d/nginx.list && \
     echo "deb-src http://nginx.org/packages/mainline/ubuntu/ bionic nginx" >> /etc/apt/sources.list.d/nginx.list && \
-    apt-get install -yq openjdk-8-jre-headless && \
+    apt-get install --no-install-recommends -yq openjdk-8-jre-headless && \
     wget -qO - https://artifacts.elastic.co/GPG-KEY-elasticsearch | apt-key add - && \
-    apt-get install -yq apt-transport-https && \
+    apt-get install --no-install-recommends -yq apt-transport-https && \
     apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF && \
     echo "deb https://download.mono-project.com/repo/ubuntu stable-bionic main" | tee /etc/apt/sources.list.d/mono-official.list && \
     echo "deb https://artifacts.elastic.co/packages/7.x/apt stable main" | tee -a /etc/apt/sources.list.d/elastic-7.x.list && \
     apt-get -y update && \
-    apt-get install -yq elasticsearch=7.4.0 && \
+    apt-get install --no-install-recommends -yq elasticsearch=7.4.0 && \
     add-apt-repository -y ppa:certbot/certbot && \
-    curl -sL https://deb.nodesource.com/setup_12.x | sudo -E bash - && \
-    apt-get install -y nodejs && \
-    curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add - && \
+    curl -f -sL https://deb.nodesource.com/setup_12.x | sudo -E bash - && \
+    apt-get install --no-install-recommends -y nodejs && \
+    curl -f -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add - && \
     echo "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list && \
     wget -q https://packages.microsoft.com/config/ubuntu/18.04/packages-microsoft-prod.deb -O packages-microsoft-prod.deb && \
     dpkg -i packages-microsoft-prod.deb && \
     apt-get -y update && \
-    apt-get install -yq nginx && \
+    apt-get install --no-install-recommends -yq nginx && \
     cd ~ && \
     wget https://downloads.apache.org/kafka/2.5.0/kafka_2.12-2.5.0.tgz && \
     tar xzf kafka_2.12-2.5.0.tgz && \
     rm kafka_2.12-2.5.0.tgz && \
     echo "#!/bin/sh\nexit 0" > /usr/sbin/policy-rc.d && \
-    apt-get install -yq libgdiplus \
+    apt-get install --no-install-recommends -yq libgdiplus \
                         python-certbot-nginx \
                         htop \
                         nano \
                         dnsutils \
                         python3-pip \
-                        multiarch-support \ 
+                        multiarch-support \
                         iproute2 \
                         ffmpeg \
-                        jq \ 
-                        git \ 
+                        jq \
+                        git \
                         yarn \
                         dotnet-sdk-3.1 \
                         supervisor \
                         mysql-client \
-                        mysql-server
+                        mysql-server && rm -rf /var/lib/apt/lists/*;
 
 RUN git clone https://github.com/ONLYOFFICE/AppServer.git /app/onlyoffice/src/ && \
     cd /app/onlyoffice/src/ && \
@@ -83,14 +83,14 @@ RUN git clone https://github.com/ONLYOFFICE/AppServer.git /app/onlyoffice/src/ &
 
 RUN cd /app/onlyoffice/src/ && \
     yarn install --cwd web/ASC.Web.Components --frozen-lockfile > build/ASC.Web.Components.log && \
-    yarn pack --cwd web/ASC.Web.Components
-	
+    yarn pack --cwd web/ASC.Web.Components && yarn cache clean;
+
 RUN cd /app/onlyoffice/src/ && \
     component=$(ls web/ASC.Web.Components/asc-web-components-v1.*.tgz) && \
     yarn remove asc-web-components --cwd web/ASC.Web.Common --peer && \
     yarn add file:../../$component --cwd web/ASC.Web.Common --cache-folder ../../yarn --peer && \
     yarn install --cwd web/ASC.Web.Common --frozen-lockfile > build/ASC.Web.Common.log && \
-    yarn pack --cwd web/ASC.Web.Common
+    yarn pack --cwd web/ASC.Web.Common && yarn cache clean;
 
 RUN cd /app/onlyoffice/src/ && \
     npm run build:storybook --prefix web/ASC.Web.Components && \
@@ -107,7 +107,7 @@ RUN cd /app/onlyoffice/src/ && \
     npm run build --prefix web/ASC.Web.Client && \
     rm -rf /var/www/studio/client/* && \
     mkdir -p /var/www/studio/client && \
-    cp -rf web/ASC.Web.Client/build/* /var/www/studio/client
+    cp -rf web/ASC.Web.Client/build/* /var/www/studio/client && npm cache clean --force; && yarn cache clean;
 
 RUN cd /app/onlyoffice/src/ && \
     component=$(ls  web/ASC.Web.Components/asc-web-components-v1.*.tgz) && \
@@ -119,7 +119,7 @@ RUN cd /app/onlyoffice/src/ && \
     npm run build --prefix products/ASC.Files/Client && \
     mkdir -p /var/www/products/ASC.Files/client && \
     cp -Rf products/ASC.Files/Client/build/* /var/www/products/ASC.Files/client && \
-    mkdir -p /var/www/products/ASC.Files/client/products/files
+    mkdir -p /var/www/products/ASC.Files/client/products/files && npm cache clean --force; && yarn cache clean;
 
 RUN cd /app/onlyoffice/src/ && \
     component=$(ls  web/ASC.Web.Components/asc-web-components-v1.*.tgz) && \
@@ -131,7 +131,7 @@ RUN cd /app/onlyoffice/src/ && \
     npm run build --prefix products/ASC.People/Client && \
     mkdir -p /var/www/products/ASC.People/client && \
     cp -Rf products/ASC.People/Client/build/* /var/www/products/ASC.People/client && \
-    mkdir -p /var/www/products/ASC.People/client/products/people
+    mkdir -p /var/www/products/ASC.People/client/products/people && npm cache clean --force; && yarn cache clean;
 
 RUN cd /app/onlyoffice/src/ && \
     rm -f /etc/nginx/conf.d/* && \
@@ -178,7 +178,7 @@ RUN cd /app/onlyoffice/src/ && \
     yarn install --cwd common/ASC.UrlShortener --frozen-lockfile && \
     mkdir -p /var/www/services/urlshortener/client && cp -Rf common/ASC.UrlShortener/* /var/www/services/urlshortener/client && \
     cd common/services/ASC.Studio.Notify && \
-    dotnet -d publish --no-build --self-contained -r linux-x64 -o /var/www/services/studio.notify
+    dotnet -d publish --no-build --self-contained -r linux-x64 -o /var/www/services/studio.notify && yarn cache clean;
 
 COPY config/mysql/conf.d/mysql.cnf /etc/mysql/conf.d/mysql.cnf
 COPY config/supervisor/supervisord.conf /etc/supervisor/conf.d/supervisord.conf