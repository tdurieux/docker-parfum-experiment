{
  "startTime": 1674220339030,
  "endTime": 1674220341414,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 89,
        "lineEnd": 89,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 91,
        "lineEnd": 91,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 92,
        "lineEnd": 92,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 113,
        "lineEnd": 113,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 89,
        "lineEnd": 89,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 91,
        "lineEnd": 91,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 92,
        "lineEnd": 92,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 113,
        "lineEnd": 113,
        "columnStart": 4,
        "columnEnd": 27
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "### STAGE 1: Base image ######\nARG SRC_PATH=/app/onlyoffice/src\nARG BUILD_PATH=/var/www\nARG REPO_SDK=mcr.microsoft.com/dotnet/sdk\nARG REPO_SDK_TAG=6.0\nARG REPO_RUN=mcr.microsoft.com/dotnet/aspnet\nARG REPO_RUN_TAG=6.0\n\nFROM $REPO_SDK:$REPO_SDK_TAG AS base\nARG RELEASE_DATE=\"2016-06-21\"\nARG DEBIAN_FRONTEND=noninteractive\nARG PRODUCT_VERSION=0.0.0\nARG BUILD_NUMBER=0\nARG GIT_BRANCH=master\nARG SRC_PATH\nARG BUILD_PATH\nARG BUILD_ARGS=build\nARG DEPLOY_ARGS=deploy\nARG DEBUG_INFO=true\n\nLABEL onlyoffice.appserver.release-date=\"${RELEASE_DATE}\" \\\n      maintainer=\"Ascensio System SIA <support@onlyoffice.com>\"\n\nENV LANG=en_US.UTF-8 \\\n    LANGUAGE=en_US:en \\\n    LC_ALL=en_US.UTF-8\n\nRUN echo \"nameserver 8.8.8.8\" | tee /etc/resolv.conf > /dev/null && \\\n    apt-get -y update && \\\n    apt-get -y upgrade && \\\n    apt-get -y dist-upgrade && \\\n    apt-get install --no-install-recommends -yq sudo locales && \\\n    addgroup --system --gid 107 onlyoffice && \\\n    adduser -uid 104 --quiet --home /var/www/onlyoffice --system --gid 107 onlyoffice && \\\n    locale-gen en_US.UTF-8 && \\\n    apt-get -y update && \\\n    apt-get install --no-install-recommends -yq git apt-utils npm && \\\n    npm install --global yarn && \\\n    curl -fsSL https://deb.nodesource.com/setup_14.x | sudo -E bash - && \\\n    apt-get install --no-install-recommends -y nodejs && npm cache clean --force; && rm -rf /var/lib/apt/lists/*;\n\nRUN echo ${GIT_BRANCH}  && \\\n    git clone --recurse-submodules -b ${GIT_BRANCH} https://github.com/ONLYOFFICE/AppServer.git ${SRC_PATH}\n\nRUN cd ${SRC_PATH} && \\\n    mkdir -p /app/onlyoffice/config/ && cp -rf config/* /app/onlyoffice/config/ && \\\n    mkdir -p /etc/nginx/conf.d && cp -f config/nginx/onlyoffice*.conf /etc/nginx/conf.d/ && \\\n    mkdir -p /etc/nginx/includes/ && cp -f config/nginx/includes/onlyoffice*.conf /etc/nginx/includes/ && \\\n    sed -i \"s/\\\"number\\\".*,/\\\"number\\\": \\\"${PRODUCT_VERSION}.${BUILD_NUMBER}\\\",/g\" /app/onlyoffice/config/appsettings.json && \\\n    sed -e 's/#//' -i /etc/nginx/conf.d/onlyoffice.conf && \\\n    cd ${SRC_PATH}/build/install/common/ && \\\n    bash build-frontend.sh -sp \"${SRC_PATH}\" -ba \"${BUILD_ARGS}\" -da \"${DEPLOY_ARGS}\" -di \"${DEBUG_INFO}\" && \\\n    bash build-backend.sh -sp \"${SRC_PATH}\"  && \\\n    bash publish-backend.sh -sp \"${SRC_PATH}\" -bp \"${BUILD_PATH}\"  && \\\n    cp -rf ${SRC_PATH}/products/ASC.Files/Server/DocStore ${BUILD_PATH}/products/ASC.Files/server/ && \\\n    rm -rf ${SRC_PATH}/common/* && \\\n    rm -rf ${SRC_PATH}/web/ASC.Web.Core/* && \\\n    rm -rf ${SRC_PATH}/web/ASC.Web.Studio/* && \\\n    rm -rf ${SRC_PATH}/products/ASC.Calendar/Server/* && \\\n    rm -rf ${SRC_PATH}/products/ASC.CRM/Server/* && \\\n    rm -rf ${SRC_PATH}/products/ASC.Files/Server/* && \\\n    rm -rf ${SRC_PATH}/products/ASC.Files/Service/* && \\\n    rm -rf ${SRC_PATH}/products/ASC.Mail/Server/* && \\\n    rm -rf ${SRC_PATH}/products/ASC.People/Server/* && \\\n    rm -rf ${SRC_PATH}/products/ASC.Projects/Server/*\n\nCOPY config/mysql/conf.d/mysql.cnf /etc/mysql/conf.d/mysql.cnf\n\nRUN rm -rf /var/lib/apt/lists/*\n\n### STAGE 2: Build ###\nFROM $REPO_RUN:$REPO_RUN_TAG as builder\nARG BUILD_PATH\nENV BUILD_PATH=${BUILD_PATH}\n\nCOPY --from=base /app/onlyoffice/config/*.json /app/onlyoffice/config/\nCOPY --from=base /app/onlyoffice/config/*.config /app/onlyoffice/config/\n\n# add defualt user and group for no-root run\nRUN mkdir -p /var/log/onlyoffice && \\\n    mkdir -p /app/onlyoffice/data && \\\n    addgroup --system --gid 107 onlyoffice && \\\n    adduser -uid 104 --quiet --home /var/www/onlyoffice --system --gid 107 onlyoffice && \\\n    chown onlyoffice:onlyoffice /app/onlyoffice -R && \\\n    chown onlyoffice:onlyoffice /var/log -R  && \\\n    chown onlyoffice:onlyoffice /var/www -R\nRUN echo \"nameserver 8.8.8.8\" | tee /etc/resolv.conf > /dev/null && \\\n    apt-get -y update && \\\n    apt-get -y upgrade && \\\n    apt-get install --no-install-recommends -yq sudo nano curl vim && \\\n    curl -fsSL https://deb.nodesource.com/setup_14.x | sudo -E bash - && \\\n    apt-get install --no-install-recommends -y nodejs && \\\n    apt-get install --no-install-recommends -yq libgdiplus && rm -rf /var/lib/apt/lists/*;\n\n#USER onlyoffice\nEXPOSE 5050\n\nENTRYPOINT [\"./docker-entrypoint.sh\"]\n\n### STAGE 3: Run ###\n\n## Nginx image ##\nFROM nginx AS web\nARG SRC_PATH\nARG BUILD_PATH\nARG COUNT_WORKER_CONNECTIONS=1024\nENV DNS_NAMESERVER=127.0.0.11 \\\n    COUNT_WORKER_CONNECTIONS=$COUNT_WORKER_CONNECTIONS \\\n    MAP_HASH_BUCKET_SIZE=\"\"\n\nRUN echo \"nameserver 8.8.8.8\" | tee /etc/resolv.conf > /dev/null && \\ \n    apt-get -y update && \\\n    apt-get -y upgrade && \\\n    apt-get install --no-install-recommends -yq vim && \\\n    # Remove default nginx website\n    rm -rf /usr/share/nginx/html/* && rm -rf /var/lib/apt/lists/*;\n\n# copy static services files and config values\nCOPY --from=base /etc/nginx/conf.d /etc/nginx/conf.d\nCOPY --from=base /etc/nginx/includes /etc/nginx/includes\nCOPY --from=base ${SRC_PATH}/build/deploy/products ${BUILD_PATH}/products\nCOPY --from=base ${SRC_PATH}/build/deploy/public ${BUILD_PATH}/public\nCOPY --from=base ${SRC_PATH}/build/deploy/studio ${BUILD_PATH}/studio\nCOPY /config/nginx/templates/upstream.conf.template /etc/nginx/templates/upstream.conf.template\nCOPY /config/nginx/templates/nginx.conf.template /etc/nginx/nginx.conf.template\nCOPY prepare-nginx-proxy.sh /docker-entrypoint.d/prepare-nginx-proxy.sh\n\n# add defualt user and group for no-root run\nRUN chown nginx:nginx /etc/nginx/* -R && \\\n    chown nginx:nginx /docker-entrypoint.d/* && \\\n    # changes for upstream configure\n    sed -i 's/localhost:5010/$service_api_system/' /etc/nginx/conf.d/onlyoffice.conf && \\\n    sed -i 's/localhost:5012/$service_backup/' /etc/nginx/conf.d/onlyoffice.conf && \\\n    sed -i 's/localhost:5021/$service_crm/' /etc/nginx/conf.d/onlyoffice.conf && \\\n    sed -i 's/localhost:5007/$service_files/' /etc/nginx/conf.d/onlyoffice.conf && \\\n    sed -i 's/localhost:5004/$service_people_server/' /etc/nginx/conf.d/onlyoffice.conf && \\\n    sed -i 's/localhost:5020/$service_projects_server/' /etc/nginx/conf.d/onlyoffice.conf && \\\n    sed -i 's/localhost:5000/$service_api/' /etc/nginx/conf.d/onlyoffice.conf && \\\n    sed -i 's/localhost:5003/$service_studio/' /etc/nginx/conf.d/onlyoffice.conf && \\\n    sed -i 's/localhost:5023/$service_calendar/' /etc/nginx/conf.d/onlyoffice.conf && \\\n    sed -i 's/localhost:9899/$service_socket/' /etc/nginx/conf.d/onlyoffice.conf && \\\n    sed -i 's/localhost:5022/$service_mail/' /etc/nginx/conf.d/onlyoffice.conf && \\\n    sed -i 's/localhost:9999/$service_urlshortener/' /etc/nginx/conf.d/onlyoffice.conf && \\\n    sed -i 's/172.*/$document_server;/' /etc/nginx/conf.d/onlyoffice.conf\n\n## ASC.ApiSystem ##\nFROM builder AS api_system\nWORKDIR ${BUILD_PATH}/services/apisystem/\n\nCOPY --chown=onlyoffice:onlyoffice docker-entrypoint.sh .\nCOPY --from=base --chown=onlyoffice:onlyoffice ${BUILD_PATH}/services/ASC.ApiSystem/service .\n\nCMD [\"ASC.ApiSystem.dll\", \"ASC.ApiSystem\"]\n\n## ASC.Data.Backup ##\nFROM builder AS backup\nWORKDIR ${BUILD_PATH}/services/backup/\n\nCOPY --chown=onlyoffice:onlyoffice docker-entrypoint.sh .\nCOPY --from=base --chown=onlyoffice:onlyoffice ${BUILD_PATH}/services/ASC.Data.Backup/service .\n\nCMD [\"ASC.Data.Backup.dll\", \"ASC.Data.Backup\", \"core:products:folder=/var/www/products/\", \"core:products:subfolder=server\"]\n\n## ASC.Data.Storage.Encryption ##\nFROM builder AS data_storage_encryption\nWORKDIR ${BUILD_PATH}/services/storage.encryption/\n\nCOPY --chown=onlyoffice:onlyoffice docker-entrypoint.sh .\nCOPY --from=base --chown=onlyoffice:onlyoffice ${BUILD_PATH}/services/ASC.Data.Storage.Encryption/service/ .\n\nCMD [\"ASC.Data.Storage.Encryption.dll\", \"ASC.Data.Storage.Encryption\"]\n\n## ASC.Files ##\nFROM builder AS files\nWORKDIR ${BUILD_PATH}/products/ASC.Files/server/\n\nCOPY --chown=onlyoffice:onlyoffice docker-entrypoint.sh .\nCOPY --from=base --chown=onlyoffice:onlyoffice ${BUILD_PATH}/products/ASC.Files/server/ .\n\nCMD [\"ASC.Files.dll\", \"ASC.Files\"]\n\n## ASC.Files.Service ##\nFROM builder AS files_services\nWORKDIR ${BUILD_PATH}/products/ASC.Files/service/\n\nCOPY --chown=onlyoffice:onlyoffice docker-entrypoint.sh .\nCOPY --from=base --chown=onlyoffice:onlyoffice ${BUILD_PATH}/services/ASC.Files.Service/service/ .\n\nCMD [\"ASC.Files.Service.dll\", \"ASC.Files.Service\", \"core:products:folder=/var/www/products/\", \"core:products:subfolder=server\", \"disable_elastic=true\"]\n\n## ASC.Data.Storage.Migration ##\nFROM builder AS data_storage_migration\nWORKDIR ${BUILD_PATH}/services/storage.migration/service/\n\nCOPY --chown=onlyoffice:onlyoffice docker-entrypoint.sh .\nCOPY --from=base --chown=onlyoffice:onlyoffice ${BUILD_PATH}/services/ASC.Data.Storage.Migration/service/ .\n\nCMD [\"ASC.Data.Storage.Migration.dll\", \"ASC.Data.Storage.Migration\"]\n\n## ASC.Notify ##\nFROM builder AS notify\nWORKDIR ${BUILD_PATH}/services/notify/service\n\nCOPY --chown=onlyoffice:onlyoffice docker-entrypoint.sh .\nCOPY --from=base --chown=onlyoffice:onlyoffice ${BUILD_PATH}/services/ASC.Notify/service/ .\n\nCMD [\"ASC.Notify.dll\", \"ASC.Notify\", \"core:products:folder=/var/www/products/\", \"core:products:subfolder=server\"]\n\n## ASC.People ##\nFROM builder AS people_server\nWORKDIR ${BUILD_PATH}/products/ASC.People/server/\n\nCOPY --chown=onlyoffice:onlyoffice docker-entrypoint.sh .\nCOPY --from=base --chown=onlyoffice:onlyoffice ${BUILD_PATH}/products/ASC.People/server/ .\n\nCMD [\"ASC.People.dll\", \"ASC.People\"]\n\n## ASC.Socket.IO.Svc ##\nFROM builder AS socket\nWORKDIR ${BUILD_PATH}/services/socket.io.svc/\n\nCOPY --chown=onlyoffice:onlyoffice docker-entrypoint.sh .\nCOPY --from=base --chown=onlyoffice:onlyoffice ${BUILD_PATH}/services/ASC.Socket.IO.Svc/service/ .\nCOPY --from=base --chown=onlyoffice:onlyoffice ${BUILD_PATH}/services/ASC.Socket.IO/service/  ${BUILD_PATH}/ASC.Socket.IO/\n\nCMD [\"ASC.Socket.IO.Svc.dll\", \"ASC.Socket.IO.Svc\"]\n\n## ASC.Studio.Notify ##\nFROM builder AS studio_notify\nWORKDIR ${BUILD_PATH}/services/studio.notify/service/\n\nCOPY --chown=onlyoffice:onlyoffice docker-entrypoint.sh .\nCOPY --from=base --chown=onlyoffice:onlyoffice ${BUILD_PATH}/services/ASC.Studio.Notify/service/ .\n\nCMD [\"ASC.Studio.Notify.dll\", \"ASC.Studio.Notify\", \"core:products:folder=/var/www/products/\", \"core:products:subfolder=server\"]\n\n## ASC.TelegramService ##\nFROM builder AS telegram_service\nWORKDIR ${BUILD_PATH}/services/telegram/\n\nCOPY --chown=onlyoffice:onlyoffice docker-entrypoint.sh .\nCOPY --from=base --chown=onlyoffice:onlyoffice ${BUILD_PATH}/services/ASC.TelegramService/service/ .\n\nCMD [\"ASC.TelegramService.dll\", \"ASC.TelegramService\"]\n\n## ASC.Thumbnails.Svc ##\nFROM builder AS thumbnails\nWORKDIR ${BUILD_PATH}/services/thumb/service/\n\nCOPY --chown=onlyoffice:onlyoffice docker-entrypoint.sh .\nCOPY --from=base --chown=onlyoffice:onlyoffice ${BUILD_PATH}/services/ASC.Thumbnails.Svc/service/ .\nCOPY --from=base --chown=onlyoffice:onlyoffice ${BUILD_PATH}/services/ASC.Thumbnails/service/ ${BUILD_PATH}/services/thumb/client\n\nCMD [\"ASC.Thumbnails.Svc.dll\", \"ASC.Thumbnails.Svc\"]\n\n## ASC.UrlShortener.Svc ##\nFROM builder AS urlshortener\nWORKDIR  ${BUILD_PATH}/services/urlshortener/service/\n\nCOPY --chown=onlyoffice:onlyoffice docker-entrypoint.sh .\nCOPY --from=base --chown=onlyoffice:onlyoffice  ${BUILD_PATH}/services/ASC.UrlShortener.Svc/service/ .\nCOPY --from=base --chown=onlyoffice:onlyoffice  ${BUILD_PATH}/services/ASC.UrlShortener/service/ ${BUILD_PATH}/services/urlshortener/client\n\nCMD [\"ASC.UrlShortener.Svc.dll\", \"ASC.UrlShortener.Svc\"]\n\n## ASC.Web.Api ##\nFROM builder AS api\nWORKDIR ${BUILD_PATH}/studio/api/\n\nCOPY --chown=onlyoffice:onlyoffice docker-entrypoint.sh .\nCOPY --from=base --chown=onlyoffice:onlyoffice ${BUILD_PATH}/services/ASC.Web.Api/service/ .\n\nCMD [\"ASC.Web.Api.dll\", \"ASC.Web.Api\"]\n\n## ASC.Web.Studio ##\nFROM builder AS studio\nWORKDIR ${BUILD_PATH}/studio/server/\n\nCOPY --chown=onlyoffice:onlyoffice docker-entrypoint.sh .\nCOPY --from=base --chown=onlyoffice:onlyoffice ${BUILD_PATH}/services/ASC.Web.Studio/service/ .\n\nCMD [\"ASC.Web.Studio.dll\", \"ASC.Web.Studio\"]\n\n## ASC.SsoAuth ##\nFROM builder AS ssoauth\nWORKDIR ${BUILD_PATH}/services/ASC.SsoAuth.Svc/\n\nCOPY --chown=onlyoffice:onlyoffice docker-entrypoint.sh .\nCOPY --from=base --chown=onlyoffice:onlyoffice ${BUILD_PATH}/services/ASC.SsoAuth.Svc/service/ .\nCOPY --from=base --chown=onlyoffice:onlyoffice  ${BUILD_PATH}/services/ASC.SsoAuth/service/ ${BUILD_PATH}/ASC.SsoAuth/\n\nCMD [\"ASC.SsoAuth.Svc.dll\", \"ASC.SsoAuth.Svc\"]\n\n## image for k8s bin-share ##\nFROM busybox:latest AS bin_share\nRUN mkdir -p /app/appserver/ASC.Files/server && \\\n    mkdir -p /app/appserver/ASC.People/server/ && \\\n    mkdir -p /app/appserver/ASC.CRM/server/ && \\\n    mkdir -p /app/appserver/ASC.Projects/server/ && \\\n    mkdir -p /app/appserver/ASC.Calendar/server/ && \\\n    mkdir -p /app/appserver/ASC.Mail/server/ && \\\n    addgroup --system --gid 107 onlyoffice && \\\n    adduser -u 104 onlyoffice --home /var/www/onlyoffice --system -G onlyoffice\n\nCOPY bin-share-docker-entrypoint.sh /app/docker-entrypoint.sh\nCOPY --from=base /var/www/products/ASC.Files/server/ /app/appserver/ASC.Files/server/\nCOPY --from=base /var/www/products/ASC.People/server/ /app/appserver/ASC.People/server/\n# COPY --from=base /var/www/products/ASC.CRM/server/ /app/appserver/ASC.CRM/server/\n# COPY --from=base /var/www/products/ASC.Projects/server/ /app/appserver/ASC.Projects/server/\n# COPY --from=base /var/www/products/ASC.Calendar/server/ /app/appserver/ASC.Calendar/server/\n# COPY --from=base /var/www/products/ASC.Mail/server/ /app/appserver/ASC.Mail/server/\nENTRYPOINT [\"./app/docker-entrypoint.sh\"]\n\n## image for k8s wait-bin-share ##\nFROM busybox:latest AS wait_bin_share\nRUN mkdir /app\n\nCOPY wait-bin-share-docker-entrypoint.sh /app/docker-entrypoint.sh\nENTRYPOINT [\"./app/docker-entrypoint.sh\"]\n"
}