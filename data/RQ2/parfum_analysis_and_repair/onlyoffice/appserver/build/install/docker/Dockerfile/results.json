{
  "startTime": 1674247913886,
  "endTime": 1674247917115,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 71
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 105,
        "lineEnd": 105,
        "columnStart": 89,
        "columnEnd": 94
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 117,
        "lineEnd": 117,
        "columnStart": 103,
        "columnEnd": 108
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 129,
        "lineEnd": 129,
        "columnStart": 105,
        "columnEnd": 110
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 84,
        "lineEnd": 84,
        "columnStart": 4,
        "columnEnd": 94
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 85,
        "lineEnd": 85,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 89,
        "lineEnd": 89,
        "columnStart": 4,
        "columnEnd": 66
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 91,
        "lineEnd": 91,
        "columnStart": 4,
        "columnEnd": 86
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 92,
        "lineEnd": 92,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 102,
        "lineEnd": 102,
        "columnStart": 4,
        "columnEnd": 74
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 105,
        "lineEnd": 105,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 114,
        "lineEnd": 114,
        "columnStart": 4,
        "columnEnd": 81
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 117,
        "lineEnd": 117,
        "columnStart": 4,
        "columnEnd": 66
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 126,
        "lineEnd": 126,
        "columnStart": 4,
        "columnEnd": 82
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 129,
        "lineEnd": 129,
        "columnStart": 4,
        "columnEnd": 67
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 172,
        "lineEnd": 172,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 177,
        "lineEnd": 177,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 71
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 61,
        "lineEnd": 76,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 61,
        "lineEnd": 76,
        "columnStart": 4,
        "columnEnd": 36
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:18.04\n\nARG RELEASE_DATE=\"2016-06-21\"\nARG RELEASE_DATE_SIGN=\"\"\nARG VERSION=\"8.9.0.190\"\nARG SOURCE_REPO_URL=\"deb http://static.teamlab.com.s3.amazonaws.com/repo/debian squeeze main\"\nARG DEBIAN_FRONTEND=noninteractive\nARG GIT_BRANCH=\"develop\"\n\nLABEL onlyoffice.community.release-date=\"${RELEASE_DATE}\" \\\n      onlyoffice.community.version=\"${VERSION}\" \\\n      maintainer=\"Ascensio System SIA <support@onlyoffice.com>\"\n\nENV LANG=en_US.UTF-8 \\\n    LANGUAGE=en_US:en \\\n    LC_ALL=en_US.UTF-8\n\nRUN apt-get -y update && \\\n    apt-get -y upgrade && \\\n    apt-get -y dist-upgrade && \\\n    apt-get -yq --no-install-recommends install gnupg2 ca-certificates && \\\n    apt-get install --no-install-recommends -yq sudo locales && \\\n    addgroup --system --gid 107 onlyoffice && \\\n    adduser -uid 104 --quiet --home /var/www/onlyoffice --system --gid 107 onlyoffice && \\\n    addgroup --system --gid 104 elasticsearch && \\\n    adduser -uid 103 --quiet --home /nonexistent --system --gid 104 elasticsearch && \\\n    locale-gen en_US.UTF-8 && \\\n    apt-get -y update && \\\n    apt-get install --no-install-recommends -yq software-properties-common wget curl cron rsyslog && \\\n    curl -f -OL https://dev.mysql.com/get/mysql-apt-config_0.8.15-1_all.deb && \\\n    echo \"mysql-apt-config mysql-apt-config/repo-codename select bionic\" | sudo debconf-set-selections && \\\n    echo \"mysql-apt-config mysql-apt-config/repo-distro select ubuntu\" | sudo debconf-set-selections && \\\n    echo \"mysql-apt-config mysql-apt-config/select-server select mysql-8.0\" | sudo debconf-set-selections && \\\n    DEBIAN_FRONTEND=noninteractive dpkg -i mysql-apt-config_0.8.15-1_all.deb && \\\n    rm -f mysql-apt-config_0.8.15-1_all.deb && \\\n    wget https://nginx.org/keys/nginx_signing.key && \\\n    apt-key add nginx_signing.key && \\\n    echo \"deb http://nginx.org/packages/mainline/ubuntu/ bionic nginx\" >> /etc/apt/sources.list.d/nginx.list && \\\n    echo \"deb-src http://nginx.org/packages/mainline/ubuntu/ bionic nginx\" >> /etc/apt/sources.list.d/nginx.list && \\\n    apt-get install --no-install-recommends -yq openjdk-8-jre-headless && \\\n    wget -qO - https://artifacts.elastic.co/GPG-KEY-elasticsearch | apt-key add - && \\\n    apt-get install --no-install-recommends -yq apt-transport-https && \\\n    apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF && \\\n    echo \"deb https://download.mono-project.com/repo/ubuntu stable-bionic main\" | tee /etc/apt/sources.list.d/mono-official.list && \\\n    echo \"deb https://artifacts.elastic.co/packages/7.x/apt stable main\" | tee -a /etc/apt/sources.list.d/elastic-7.x.list && \\\n    apt-get -y update && \\\n    apt-get install --no-install-recommends -yq elasticsearch=7.4.0 && \\\n    add-apt-repository -y ppa:certbot/certbot && \\\n    curl -f -sL https://deb.nodesource.com/setup_12.x | sudo -E bash - && \\\n    apt-get install --no-install-recommends -y nodejs && \\\n    curl -f -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add - && \\\n    echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | sudo tee /etc/apt/sources.list.d/yarn.list && \\\n    wget -q https://packages.microsoft.com/config/ubuntu/18.04/packages-microsoft-prod.deb -O packages-microsoft-prod.deb && \\\n    dpkg -i packages-microsoft-prod.deb && \\\n    apt-get -y update && \\\n    apt-get install --no-install-recommends -yq nginx && \\\n    cd ~ && \\\n    wget https://downloads.apache.org/kafka/2.5.0/kafka_2.12-2.5.0.tgz && \\\n    tar xzf kafka_2.12-2.5.0.tgz && \\\n    rm kafka_2.12-2.5.0.tgz && \\\n    echo \"#!/bin/sh\\nexit 0\" > /usr/sbin/policy-rc.d && \\\n    apt-get install --no-install-recommends -yq libgdiplus \\\n                        python-certbot-nginx \\\n                        htop \\\n                        nano \\\n                        dnsutils \\\n                        python3-pip \\\n                        multiarch-support \\\n                        iproute2 \\\n                        ffmpeg \\\n                        jq \\\n                        git \\\n                        yarn \\\n                        dotnet-sdk-3.1 \\\n                        supervisor \\\n                        mysql-client \\\n                        mysql-server && rm -rf /var/lib/apt/lists/*;\n\nRUN git clone https://github.com/ONLYOFFICE/AppServer.git /app/onlyoffice/src/ && \\\n    cd /app/onlyoffice/src/ && \\\n    git checkout ${GIT_BRANCH} && \\\n    git pull\n\nRUN cd /app/onlyoffice/src/ && \\\n    yarn install --cwd web/ASC.Web.Components --frozen-lockfile > build/ASC.Web.Components.log && \\\n    yarn pack --cwd web/ASC.Web.Components && yarn cache clean;\n\nRUN cd /app/onlyoffice/src/ && \\\n    component=$(ls web/ASC.Web.Components/asc-web-components-v1.*.tgz) && \\\n    yarn remove asc-web-components --cwd web/ASC.Web.Common --peer && \\\n    yarn add file:../../$component --cwd web/ASC.Web.Common --cache-folder ../../yarn --peer && \\\n    yarn install --cwd web/ASC.Web.Common --frozen-lockfile > build/ASC.Web.Common.log && \\\n    yarn pack --cwd web/ASC.Web.Common && yarn cache clean;\n\nRUN cd /app/onlyoffice/src/ && \\\n    npm run build:storybook --prefix web/ASC.Web.Components && \\\n    mkdir -p /var/www/story/ && \\\n    cp -Rf web/ASC.Web.Components/storybook-static/* /var/www/story/\n\nRUN cd /app/onlyoffice/src/ && \\\n    component=$(ls web/ASC.Web.Components/asc-web-components-v1.*.tgz) && \\\n    common=$(ls web/ASC.Web.Common/asc-web-common-v1.*.tgz) && \\\n    yarn remove asc-web-components asc-web-common --cwd web/ASC.Web.Client && \\\n    yarn add ../../$component --cwd web/ASC.Web.Client --cache-folder ../../yarn && \\\n    yarn add ../../$common --cwd web/ASC.Web.Client --cache-folder ../../yarn && \\\n    yarn install --cwd web/ASC.Web.Client --frozen-lockfile || (cd web/ASC.Web.Client && npm i && cd ../../) && \\\n    npm run build --prefix web/ASC.Web.Client && \\\n    rm -rf /var/www/studio/client/* && \\\n    mkdir -p /var/www/studio/client && \\\n    cp -rf web/ASC.Web.Client/build/* /var/www/studio/client && npm cache clean --force; && yarn cache clean;\n\nRUN cd /app/onlyoffice/src/ && \\\n    component=$(ls  web/ASC.Web.Components/asc-web-components-v1.*.tgz) && \\\n    common=$(ls web/ASC.Web.Common/asc-web-common-v1.*.tgz) && \\\n    yarn remove asc-web-components asc-web-common --cwd products/ASC.Files/Client && \\\n    yarn add ../../../$component --cwd products/ASC.Files/Client --cache-folder ../../../yarn && \\\n    yarn add ../../../$common --cwd products/ASC.Files/Client --cache-folder ../../../yarn && \\\n    yarn install --cwd products/ASC.Files/Client --frozen-lockfile || (cd products/ASC.Files/Client && npm i && cd ../../../) && \\\n    npm run build --prefix products/ASC.Files/Client && \\\n    mkdir -p /var/www/products/ASC.Files/client && \\\n    cp -Rf products/ASC.Files/Client/build/* /var/www/products/ASC.Files/client && \\\n    mkdir -p /var/www/products/ASC.Files/client/products/files && npm cache clean --force; && yarn cache clean;\n\nRUN cd /app/onlyoffice/src/ && \\\n    component=$(ls  web/ASC.Web.Components/asc-web-components-v1.*.tgz) && \\\n    common=$(ls web/ASC.Web.Common/asc-web-common-v1.*.tgz) && \\\n    yarn remove asc-web-components asc-web-common --cwd products/ASC.People/Client && \\\n    yarn add ../../../$component --cwd products/ASC.People/Client --cache-folder ../../../yarn && \\\n    yarn add ../../../$common --cwd products/ASC.People/Client --cache-folder ../../../yarn && \\\n    yarn install --cwd products/ASC.People/Client --frozen-lockfile || (cd products/ASC.People/Client && npm i && cd ../../../) && \\\n    npm run build --prefix products/ASC.People/Client && \\\n    mkdir -p /var/www/products/ASC.People/client && \\\n    cp -Rf products/ASC.People/Client/build/* /var/www/products/ASC.People/client && \\\n    mkdir -p /var/www/products/ASC.People/client/products/people && npm cache clean --force; && yarn cache clean;\n\nRUN cd /app/onlyoffice/src/ && \\\n    rm -f /etc/nginx/conf.d/* && \\\n    mkdir -p /var/www/public/ && cp -f public/* /var/www/public/ && \\\n    mkdir -p /app/onlyoffice/config/ && cp -rf config/* /app/onlyoffice/config/ && \\\n    cp -f config/nginx/onlyoffice*.conf /etc/nginx/conf.d/ && \\\n    mkdir -p /etc/nginx/includes/ && cp -f config/nginx/includes/onlyoffice*.conf /etc/nginx/includes/ && \\\n    sed -e 's/#//' -i /etc/nginx/conf.d/onlyoffice.conf && \\\n    dotnet restore ASC.Web.sln && \\\n    dotnet build -r linux-x64 ASC.Web.sln && \\\n    cd products/ASC.People/Server && \\\n    dotnet -d publish --no-build --self-contained -r linux-x64 -o /var/www/products/ASC.People/server && \\\n    cd ../../../ && \\\n    cd products/ASC.Files/Server && \\\n    dotnet -d publish --no-build --self-contained -r linux-x64 -o /var/www/products/ASC.Files/server && \\\n    cp -avrf DocStore /var/www/products/ASC.Files/server/ && \\\n    cd ../../../ && \\\n    cd products/ASC.Files/Service && \\\n    dotnet -d publish --no-build --self-contained -r linux-x64 -o /var/www/products/ASC.Files/service && \\\n    cd ../../../ && \\\n    cd web/ASC.Web.Api && \\\n    dotnet -d publish --no-build --self-contained -r linux-x64 -o /var/www/studio/api && \\\n    cd ../../ && \\\n    cd web/ASC.Web.Studio && \\\n    dotnet -d publish --no-build --self-contained -r linux-x64 -o /var/www/studio/server && \\\n    cd ../../ && \\\n    cd common/services/ASC.Data.Backup && \\\n    dotnet -d publish --no-build --self-contained -r linux-x64 -o /var/www/services/backup && \\\n    cd ../../../ && \\\n    cd common/services/ASC.Notify && \\\n    dotnet -d publish --no-build --self-contained -r linux-x64 -o /var/www/services/notify && \\\n    cd ../../../ && \\\n    cd common/services/ASC.ApiSystem && \\\n    dotnet -d publish --no-build --self-contained -r linux-x64 -o /var/www/services/apisystem && \\\n    cd ../../../ && \\\n    cd common/services/ASC.Thumbnails.Svc && \\\n    dotnet -d publish --no-build --self-contained -r linux-x64 -o /services/thumb/service && \\\n    cd ../../../ && \\\n    yarn install --cwd common/ASC.Thumbnails --frozen-lockfile && \\\n    mkdir -p /var/www/services/thumb/client && cp -Rf common/ASC.Thumbnails/* /var/www/services/thumb/client && \\\n    cd common/services/ASC.UrlShortener.Svc && \\\n    dotnet -d publish --no-build --self-contained -r linux-x64 -o /services/urlshortener/service && \\\n    cd ../../../ && \\\n    yarn install --cwd common/ASC.UrlShortener --frozen-lockfile && \\\n    mkdir -p /var/www/services/urlshortener/client && cp -Rf common/ASC.UrlShortener/* /var/www/services/urlshortener/client && \\\n    cd common/services/ASC.Studio.Notify && \\\n    dotnet -d publish --no-build --self-contained -r linux-x64 -o /var/www/services/studio.notify && yarn cache clean;\n\nCOPY config/mysql/conf.d/mysql.cnf /etc/mysql/conf.d/mysql.cnf\nCOPY config/supervisor/supervisord.conf /etc/supervisor/conf.d/supervisord.conf\n\nCOPY config/createdb.sql /app/onlyoffice/createdb.sql\nCOPY config/onlyoffice.sql /app/onlyoffice/onlyoffice.sql\nCOPY config/onlyoffice.data.sql /app/onlyoffice/onlyoffice.data.sql\nCOPY config/onlyoffice.resources.sql /app/onlyoffice/onlyoffice.resources.sql\n\nRUN sed -i 's/Server=.*;Port=/Server=127.0.0.1;Port=/' /app/onlyoffice/config/appsettings.test.json\n\nRUN mkdir -p /var/mysqld/ && \\\n    chown -R mysql:mysql /var/lib/mysql /var/run/mysqld /var/mysqld/ && \\\n    sudo -u mysql bash -c \"/usr/bin/pidproxy /var/mysqld/mysqld.pid /usr/bin/mysqld_safe --pid-file=/var/mysqld/mysqld.pid &\" && \\\n    sleep 5s && \\\n    mysql -e \"CREATE DATABASE IF NOT EXISTS onlyoffice CHARACTER SET utf8 COLLATE 'utf8_general_ci'\" && \\\n    mysql -D \"onlyoffice\" < /app/onlyoffice/createdb.sql && \\\n    mysql -D \"onlyoffice\" < /app/onlyoffice/onlyoffice.sql && \\\n    mysql -D \"onlyoffice\" < /app/onlyoffice/onlyoffice.data.sql && \\\n    mysql -D \"onlyoffice\" < /app/onlyoffice/onlyoffice.resources.sql && \\\n    mysql -D \"onlyoffice\" -e 'CREATE USER IF NOT EXISTS \"onlyoffice_user\"@\"localhost\" IDENTIFIED WITH mysql_native_password BY \"onlyoffice_pass\";' && \\\n    mysql -D \"onlyoffice\" -e 'GRANT ALL PRIVILEGES ON *.* TO 'onlyoffice_user'@'localhost';' && \\\n    killall -u mysql -n mysql\n\nRUN rm -rf /var/lib/apt/lists/*\n\nVOLUME /var/lib/mysql\n\nEXPOSE 80 443 8092 8081\n\nENTRYPOINT [\"/usr/bin/supervisord\", \"--\"]\n"
}