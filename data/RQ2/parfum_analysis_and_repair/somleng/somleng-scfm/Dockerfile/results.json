{
  "startTime": 1674255830716,
  "endTime": 1674255831496,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 34
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ruby:2.7-alpine AS build-env\n\nARG APP_ROOT=\"/app\"\nENV BUNDLE_APP_CONFIG=\"/app/.bundle\"\n\nRUN apk update && \\\n    apk upgrade && \\\n    apk add --update --no-cache build-base git postgresql-dev nodejs yarn && \\\n    gem install bundler\n\nRUN mkdir -p $APP_ROOT\nWORKDIR $APP_ROOT\n\nCOPY Gemfile Gemfile.lock package.json yarn.lock $APP_ROOT/\n\nRUN bundle config --local deployment true && \\\n    bundle config --local path \"vendor/bundle\" && \\\n    bundle config --local without 'development test'\n\nRUN bundle install --jobs 20 --retry 5\nRUN yarn install --frozen-lockfile && yarn cache clean;\nCOPY . .\nRUN bundle exec rails assets:precompile\nRUN mkdir -p tmp/pids\nRUN rm -rf vendor/bundle/ruby/*/cache/ && find vendor/ -name \"*.o\" -delete && find vendor/ -name \"*.c\"\n\nFROM ruby:2.7-alpine\n\nARG APP_ROOT=\"/app\"\nENV BUNDLE_APP_CONFIG=\"/app/.bundle\"\n\nWORKDIR $APP_ROOT\n\nRUN apk update && \\\n    apk upgrade && \\\n    apk add --update --no-cache build-base postgresql-dev && \\\n    gem install bundler\n\nCOPY --from=build-env $APP_ROOT $APP_ROOT\n\nEXPOSE 3000\nCMD [\"bundle\", \"exec\", \"puma\", \"-C\", \"config/puma.rb\"]\n"
}