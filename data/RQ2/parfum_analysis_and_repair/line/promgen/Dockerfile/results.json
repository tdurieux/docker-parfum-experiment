{
  "startTime": 1674252150098,
  "endTime": 1674252151071,
  "originalSmells": [
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 26
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.6.9-alpine\nLABEL maintainer=paul.traylor@linecorp.com\n\nENV PYTHONDONTWRITEBYTECODE 1\nENV PYTHONUNBUFFERED 1\nENV PIP_NO_CACHE_DIR off\nENV PROMGEN_CONFIG_DIR=/etc/promgen\n\nRUN adduser -D -u 1000 promgen promgen\n\n# Upgrade Pip\nRUN pip install --no-cache-dir -U pip==20.0.2\n\n# Install MySQL Support\nRUN set -ex \\\n    && apk add --no-cache mariadb-dev \\\n    && apk add --no-cache --virtual build-deps build-base \\\n    && pip --no-cache-dir install mysqlclient \\\n    && apk del build-deps\n\n# Install Postgres Support\nRUN set -ex \\\n    && apk add --no-cache postgresql-dev \\\n    && apk add --no-cache --virtual build-deps build-base \\\n    && pip install --no-cache-dir psycopg2-binary \\\n    && apk del build-deps\n\nRUN mkdir -p /etc/prometheus; \\\n    mkdir -p /etc/promgen; \\\n    mkdir -p /usr/src/app; rm -rf /usr/src/app \\\n    chown promgen /etc/prometheus\n\n# Get needed prometheus binaries\nCOPY --from=prom/prometheus:v2.26.0 /bin/promtool /usr/local/bin/promtool\n\nCOPY docker/requirements.txt /tmp/requirements.txt\n\nRUN pip install --no-cache-dir -r /tmp/requirements.txt\n\nCOPY docker/docker-entrypoint.sh /\nCOPY setup.py /usr/src/app/setup.py\nCOPY setup.cfg /usr/src/app/setup.cfg\nCOPY promgen /usr/src/app/promgen\nCOPY promgen/tests/examples/promgen.yml /etc/promgen/promgen.yml\n\nWORKDIR /usr/src/app\nRUN pip install --no-cache-dir -e .\n\nUSER promgen\nEXPOSE 8000\n\nRUN SECRET_KEY=1 promgen collectstatic --noinput\n\nVOLUME [\"/etc/promgen\", \"/etc/prometheus\"]\nENTRYPOINT [\"/docker-entrypoint.sh\"]\nCMD [\"web\", \"--bind\", \"0.0.0.0:8000\", \"--workers\", \"4\"]\n"
}