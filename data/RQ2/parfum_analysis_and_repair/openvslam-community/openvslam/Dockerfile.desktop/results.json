{
  "startTime": 1674250115371,
  "endTime": 1674250116627,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 17,
        "columnStart": 2,
        "columnEnd": 9
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 22,
        "columnStart": 2,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 24,
        "lineEnd": 36,
        "columnStart": 2,
        "columnEnd": 21
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 2,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 40,
        "lineEnd": 43,
        "columnStart": 2,
        "columnEnd": 18
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:18.04\nENV DEBIAN_FRONTEND noninteractive\n\n# install dependencies via apt\nENV DEBCONF_NOWARNINGS yes\nRUN set -x && \\\n  apt-get update -y -qq && \\\n  apt-get upgrade -y -qq --no-install-recommends && \\\n  : \"basic dependencies\" && \\\n  apt-get install --no-install-recommends -y -qq \\\n    build-essential \\\n    pkg-config \\\n    cmake \\\n    git \\\n    wget \\\n    curl \\\n    tar \\\n    unzip && \\\n  : \"g2o dependencies\" && \\\n  apt-get install --no-install-recommends -y -qq \\\n    libatlas-base-dev \\\n    libsuitesparse-dev \\\n    libglew-dev && \\\n  : \"OpenCV dependencies\" && \\\n  apt-get install --no-install-recommends -y -qq \\\n    libgtk-3-dev \\\n    libjpeg-dev \\\n    libpng++-dev \\\n    libtiff-dev \\\n    libopenexr-dev \\\n    libwebp-dev \\\n    ffmpeg \\\n    libavcodec-dev \\\n    libavformat-dev \\\n    libavutil-dev \\\n    libswscale-dev \\\n    libavresample-dev && \\\n  : \"backward-cpp dependencies\" && \\\n  apt install --no-install-recommends -y -qq binutils-dev && \\\n  : \"other dependencies\" && \\\n  apt-get install --no-install-recommends -y -qq \\\n    libyaml-cpp-dev \\\n    sqlite3 \\\n    libsqlite3-dev && \\\n  : \"remove cache\" && \\\n  apt-get autoremove -y -qq && \\\n  rm -rf /var/lib/apt/lists/*\n\nARG CMAKE_INSTALL_PREFIX=/usr/local\nARG NUM_THREADS=1\n\nENV CPATH=${CMAKE_INSTALL_PREFIX}/include:${CPATH}\nENV C_INCLUDE_PATH=${CMAKE_INSTALL_PREFIX}/include:${C_INCLUDE_PATH}\nENV CPLUS_INCLUDE_PATH=${CMAKE_INSTALL_PREFIX}/include:${CPLUS_INCLUDE_PATH}\nENV LIBRARY_PATH=${CMAKE_INSTALL_PREFIX}/lib:${LIBRARY_PATH}\nENV LD_LIBRARY_PATH=${CMAKE_INSTALL_PREFIX}/lib:${LD_LIBRARY_PATH}\n\nENV NVIDIA_VISIBLE_DEVICES ${NVIDIA_VISIBLE_DEVICES:-all}\nENV NVIDIA_DRIVER_CAPABILITIES ${NVIDIA_DRIVER_CAPABILITIES:+$NVIDIA_DRIVER_CAPABILITIES,}graphics\n\n# Eigen\nARG EIGEN3_VERSION=3.3.7\nWORKDIR /tmp\nRUN set -x && \\\n  wget -q https://gitlab.com/libeigen/eigen/-/archive/${EIGEN3_VERSION}/eigen-${EIGEN3_VERSION}.tar.bz2 && \\\n  tar xf eigen-${EIGEN3_VERSION}.tar.bz2 && \\\n  rm -rf eigen-${EIGEN3_VERSION}.tar.bz2 && \\\n  cd eigen-${EIGEN3_VERSION} && \\\n  mkdir -p build && \\\n  cd build && \\\n  cmake \\\n    -DCMAKE_BUILD_TYPE=Release \\\n    -DCMAKE_INSTALL_PREFIX=${CMAKE_INSTALL_PREFIX} \\\n    .. && \\\n  make -j${NUM_THREADS} && \\\n  make install && \\\n  cd /tmp && \\\n  rm -rf *\nENV Eigen3_DIR=${CMAKE_INSTALL_PREFIX}/share/eigen3/cmake\n\n# g2o\nARG G2O_COMMIT=9b41a4ea5ade8e1250b9c1b279f3a9c098811b5a\nWORKDIR /tmp\nRUN set -x && \\\n  git clone https://github.com/RainerKuemmerle/g2o.git && \\\n  cd g2o && \\\n  git checkout ${G2O_COMMIT} && \\\n  mkdir -p build && \\\n  cd build && \\\n  cmake \\\n    -DCMAKE_BUILD_TYPE=Release \\\n    -DCMAKE_INSTALL_PREFIX=${CMAKE_INSTALL_PREFIX} \\\n    -DBUILD_SHARED_LIBS=ON \\\n    -DBUILD_UNITTESTS=OFF \\\n    -DG2O_USE_CHOLMOD=OFF \\\n    -DG2O_USE_CSPARSE=ON \\\n    -DG2O_USE_OPENGL=OFF \\\n    -DG2O_USE_OPENMP=OFF \\\n    -DG2O_BUILD_APPS=OFF \\\n    -DG2O_BUILD_EXAMPLES=OFF \\\n    -DG2O_BUILD_LINKED_APPS=OFF \\\n    .. && \\\n  make -j${NUM_THREADS} && \\\n  make install && \\\n  cd /tmp && \\\n  rm -rf *\nENV g2o_DIR=${CMAKE_INSTALL_PREFIX}/lib/cmake/g2o\n\n# OpenCV\nARG OPENCV_VERSION=4.5.5\nWORKDIR /tmp\nRUN set -x && \\\n  wget -q https://github.com/opencv/opencv/archive/${OPENCV_VERSION}.zip && \\\n  unzip -q ${OPENCV_VERSION}.zip && \\\n  rm -rf ${OPENCV_VERSION}.zip && \\\n  wget -q https://github.com/opencv/opencv_contrib/archive/refs/tags/${OPENCV_VERSION}.zip -O opencv_contrib-${OPENCV_VERSION}.zip && \\\n  unzip -q opencv_contrib-${OPENCV_VERSION}.zip && \\\n  rm -rf opencv_contrib-${OPENCV_VERSION}.zip && \\\n  mkdir extra && \\\n  mv opencv_contrib-${OPENCV_VERSION}/modules/aruco extra && \\\n  rm -rf opencv_contrib-${OPENCV_VERSION} && \\\n  cd opencv-${OPENCV_VERSION} && \\\n  mkdir -p build && \\\n  cd build && \\\n  cmake \\\n    -DCMAKE_BUILD_TYPE=Release \\\n    -DCMAKE_INSTALL_PREFIX=${CMAKE_INSTALL_PREFIX} \\\n    -DBUILD_DOCS=OFF \\\n    -DBUILD_EXAMPLES=OFF \\\n    -DBUILD_JASPER=OFF \\\n    -DBUILD_OPENEXR=OFF \\\n    -DBUILD_PERF_TESTS=OFF \\\n    -DBUILD_TESTS=OFF \\\n    -DBUILD_PROTOBUF=OFF \\\n    -DBUILD_opencv_apps=OFF \\\n    -DBUILD_opencv_dnn=OFF \\\n    -DBUILD_opencv_ml=OFF \\\n    -DBUILD_opencv_python_bindings_generator=OFF \\\n    -DENABLE_CXX11=ON \\\n    -DENABLE_FAST_MATH=ON \\\n    -DWITH_EIGEN=ON \\\n    -DWITH_FFMPEG=ON \\\n    -DWITH_OPENMP=ON \\\n    -DOPENCV_EXTRA_MODULES_PATH=/tmp/extra \\\n    .. && \\\n  make -j${NUM_THREADS} && \\\n  make install && \\\n  cd /tmp && \\\n  rm -rf *\nENV OpenCV_DIR=${CMAKE_INSTALL_PREFIX}/lib/cmake/opencv4\n\n# Pangolin\nARG PANGOLIN_COMMIT=ad8b5f83222291c51b4800d5a5873b0e90a0cf81\nWORKDIR /tmp\nRUN set -x && \\\n  git clone https://github.com/stevenlovegrove/Pangolin.git && \\\n  cd Pangolin && \\\n  git checkout ${PANGOLIN_COMMIT} && \\\n  sed -i -e \"193,198d\" ./src/utils/file_utils.cpp && \\\n  mkdir -p build && \\\n  cd build && \\\n  cmake \\\n    -DCMAKE_BUILD_TYPE=Release \\\n    -DCMAKE_INSTALL_PREFIX=${CMAKE_INSTALL_PREFIX} \\\n    -DBUILD_EXAMPLES=OFF \\\n    -DBUILD_PANGOLIN_DEPTHSENSE=OFF \\\n    -DBUILD_PANGOLIN_FFMPEG=OFF \\\n    -DBUILD_PANGOLIN_LIBDC1394=OFF \\\n    -DBUILD_PANGOLIN_LIBJPEG=OFF \\\n    -DBUILD_PANGOLIN_LIBOPENEXR=OFF \\\n    -DBUILD_PANGOLIN_LIBPNG=OFF \\\n    -DBUILD_PANGOLIN_LIBREALSENSE=OFF \\\n    -DBUILD_PANGOLIN_LIBREALSENSE2=OFF \\\n    -DBUILD_PANGOLIN_LIBTIFF=OFF \\\n    -DBUILD_PANGOLIN_LIBUVC=OFF \\\n    -DBUILD_PANGOLIN_LZ4=OFF \\\n    -DBUILD_PANGOLIN_OPENNI=OFF \\\n    -DBUILD_PANGOLIN_OPENNI2=OFF \\\n    -DBUILD_PANGOLIN_PLEORA=OFF \\\n    -DBUILD_PANGOLIN_PYTHON=OFF \\\n    -DBUILD_PANGOLIN_TELICAM=OFF \\\n    -DBUILD_PANGOLIN_TOON=OFF \\\n    -DBUILD_PANGOLIN_UVC_MEDIAFOUNDATION=OFF \\\n    -DBUILD_PANGOLIN_V4L=OFF \\\n    -DBUILD_PANGOLIN_VIDEO=OFF \\\n    -DBUILD_PANGOLIN_ZSTD=OFF \\\n    -DBUILD_PYPANGOLIN_MODULE=OFF \\\n    .. && \\\n  make -j${NUM_THREADS} && \\\n  make install && \\\n  cd /tmp && \\\n  rm -rf *\nENV Pangolin_DIR=${CMAKE_INSTALL_PREFIX}/lib/cmake/Pangolin\n\n# backward-cpp\nARG BACKWARD_CPP_COMMIT=5ffb2c879ebdbea3bdb8477c671e32b1c984beaa\nWORKDIR /tmp\nRUN set -x && \\\n  git clone https://github.com/bombela/backward-cpp.git && \\\n  cd backward-cpp && \\\n  git checkout ${BACKWARD_CPP_COMMIT} && \\\n  mkdir -p build && \\\n  cd build && \\\n  cmake \\\n    -DCMAKE_BUILD_TYPE=Release \\\n    -DCMAKE_INSTALL_PREFIX=${CMAKE_INSTALL_PREFIX} \\\n    .. && \\\n  make -j${NUM_THREADS} && \\\n  make install && \\\n  cd /tmp && \\\n  rm -rf *\n\n# stella_vslam\nCOPY . /stella_vslam/\nWORKDIR /stella_vslam/\nRUN set -x && \\\n  mkdir -p build && \\\n  cd build && \\\n  cmake \\\n    -DUSE_PANGOLIN_VIEWER=ON \\\n    -DBUILD_EXAMPLES=ON \\\n    -DUSE_STACK_TRACE_LOGGER=ON \\\n    -DCMAKE_BUILD_TYPE=RelWithDebInfo \\\n    .. && \\\n  make -j${NUM_THREADS} && \\\n  rm -rf CMakeCache.txt CMakeFiles Makefile cmake_install.cmake example src && \\\n  chmod -R 777 ./*\n\nWORKDIR /stella_vslam/build/\nENTRYPOINT [\"/bin/bash\"]\n"
}