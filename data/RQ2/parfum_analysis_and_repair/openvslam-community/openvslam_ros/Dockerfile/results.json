{
  "startTime": 1674220366203,
  "endTime": 1674220367541,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 127,
        "lineEnd": 128,
        "columnStart": 2,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 17,
        "columnStart": 2,
        "columnEnd": 9
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 22,
        "columnStart": 2,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 24,
        "lineEnd": 25,
        "columnStart": 2,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 27,
        "lineEnd": 31,
        "columnStart": 2,
        "columnEnd": 17
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 95,
        "lineEnd": 96,
        "columnStart": 2,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 122,
        "lineEnd": 126,
        "columnStart": 2,
        "columnEnd": 36
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ros:galactic\nENV DEBIAN_FRONTEND noninteractive\n\n# install dependencies via apt\nENV DEBCONF_NOWARNINGS yes\nRUN set -x && \\\n  apt-get update -y -qq && \\\n  apt-get upgrade -y -qq --no-install-recommends && \\\n  : \"basic dependencies\" && \\\n  apt-get install --no-install-recommends -y -qq \\\n    build-essential \\\n    pkg-config \\\n    cmake \\\n    git \\\n    wget \\\n    curl \\\n    tar \\\n    unzip && \\\n  : \"g2o dependencies\" && \\\n  apt-get install --no-install-recommends -y -qq \\\n    libgoogle-glog-dev \\\n    libatlas-base-dev \\\n    libsuitesparse-dev && \\\n  : \"Pangolin dependencies\" && \\\n  apt-get install --no-install-recommends -y -qq \\\n    libglew-dev && \\\n  : \"other dependencies\" && \\\n  apt-get install --no-install-recommends -y -qq \\\n    libgoogle-glog-dev \\\n    libyaml-cpp-dev \\\n    libopencv-dev \\\n    libeigen3-dev && \\\n  : \"remove cache\" && \\\n  apt-get autoremove -y -qq && \\\n  rm -rf /var/lib/apt/lists/*\n\nARG CMAKE_INSTALL_PREFIX=/usr/local\nARG NUM_THREADS=1\n\nENV CPATH=${CMAKE_INSTALL_PREFIX}/include:${CPATH}\nENV C_INCLUDE_PATH=${CMAKE_INSTALL_PREFIX}/include:${C_INCLUDE_PATH}\nENV CPLUS_INCLUDE_PATH=${CMAKE_INSTALL_PREFIX}/include:${CPLUS_INCLUDE_PATH}\nENV LIBRARY_PATH=${CMAKE_INSTALL_PREFIX}/lib:${LIBRARY_PATH}\nENV LD_LIBRARY_PATH=${CMAKE_INSTALL_PREFIX}/lib:${LD_LIBRARY_PATH}\n\nENV NVIDIA_VISIBLE_DEVICES ${NVIDIA_VISIBLE_DEVICES:-all}\nENV NVIDIA_DRIVER_CAPABILITIES ${NVIDIA_DRIVER_CAPABILITIES:+$NVIDIA_DRIVER_CAPABILITIES,}graphics\n\n# Pangolin\nARG PANGOLIN_COMMIT=ad8b5f83222291c51b4800d5a5873b0e90a0cf81\nWORKDIR /tmp\nRUN set -x && \\\n  git clone https://github.com/stevenlovegrove/Pangolin.git && \\\n  cd Pangolin && \\\n  git checkout ${PANGOLIN_COMMIT} && \\\n  sed -i -e \"193,198d\" ./src/utils/file_utils.cpp && \\\n  mkdir -p build && \\\n  cd build && \\\n  cmake \\\n    -DCMAKE_BUILD_TYPE=Release \\\n    -DCMAKE_INSTALL_PREFIX=${CMAKE_INSTALL_PREFIX} \\\n    -DBUILD_EXAMPLES=OFF \\\n    -DBUILD_PANGOLIN_DEPTHSENSE=OFF \\\n    -DBUILD_PANGOLIN_FFMPEG=OFF \\\n    -DBUILD_PANGOLIN_LIBDC1394=OFF \\\n    -DBUILD_PANGOLIN_LIBJPEG=OFF \\\n    -DBUILD_PANGOLIN_LIBOPENEXR=OFF \\\n    -DBUILD_PANGOLIN_LIBPNG=OFF \\\n    -DBUILD_PANGOLIN_LIBREALSENSE=OFF \\\n    -DBUILD_PANGOLIN_LIBREALSENSE2=OFF \\\n    -DBUILD_PANGOLIN_LIBTIFF=OFF \\\n    -DBUILD_PANGOLIN_LIBUVC=OFF \\\n    -DBUILD_PANGOLIN_LZ4=OFF \\\n    -DBUILD_PANGOLIN_OPENNI=OFF \\\n    -DBUILD_PANGOLIN_OPENNI2=OFF \\\n    -DBUILD_PANGOLIN_PLEORA=OFF \\\n    -DBUILD_PANGOLIN_PYTHON=OFF \\\n    -DBUILD_PANGOLIN_TELICAM=OFF \\\n    -DBUILD_PANGOLIN_TOON=OFF \\\n    -DBUILD_PANGOLIN_UVC_MEDIAFOUNDATION=OFF \\\n    -DBUILD_PANGOLIN_V4L=OFF \\\n    -DBUILD_PANGOLIN_VIDEO=OFF \\\n    -DBUILD_PANGOLIN_ZSTD=OFF \\\n    -DBUILD_PYPANGOLIN_MODULE=OFF \\\n    .. && \\\n  make -j${NUM_THREADS} && \\\n  make install && \\\n  cd /tmp && \\\n  rm -rf *\nENV Pangolin_DIR=${CMAKE_INSTALL_PREFIX}/lib/cmake/Pangolin\n\n# stella_vslam\nRUN set -x && \\\n  : \"stella_vslam dependencies\" && \\\n  apt-get update -y -qq && \\\n  apt-get install --no-install-recommends -y -qq \\\n    ros-${ROS_DISTRO}-libg2o && \\\n  : \"remove cache\" && \\\n  apt-get autoremove -y -qq && \\\n  rm -rf /var/lib/apt/lists/*\n\nRUN set -x && \\\n  git clone --depth 1 https://github.com/stella-cv/stella_vslam.git && \\\n  cd stella_vslam && \\\n  git submodule update -i --recursive && \\\n  mkdir -p build && \\\n  cd build && \\\n  CMAKE_PREFIX_PATH=/opt/ros/${ROS_DISTRO}/lib/cmake cmake \\\n    -DUSE_PANGOLIN_VIEWER=ON \\\n    -DUSE_SOCKET_PUBLISHER=OFF \\\n    -DINSTALL_PANGOLIN_VIEWER=ON \\\n    -DUSE_STACK_TRACE_LOGGER=ON \\\n    .. && \\\n  make -j${NUM_THREADS} && \\\n  make install && \\\n  rm -rf CMakeCache.txt CMakeFiles Makefile cmake_install.cmake example src && \\\n  chmod -R 777 ./*\n\n# ROS2\nRUN set -x && \\\n  apt-get update -y -qq && \\\n  : \"install ROS2 packages\" && \\\n  apt-get install --no-install-recommends -y -qq \\\n    ros-${ROS_DISTRO}-image-transport \\\n    ros-${ROS_DISTRO}-cv-bridge \\\n    python3-pip \\\n    python3-colcon-common-extensions && \\\n  pip3 install --no-cache-dir -U \\\n    argcomplete & && \\\n  : \"remove cache\" && \\\n  apt-get autoremove -y -qq && \\\n  rm -rf /var/lib/apt/lists/*\n\nWORKDIR /ros2_ws\nCOPY . /ros2_ws/src/stella_vslam_ros\n\nRUN set -x && \\\n  : \"build ROS2 packages\" && \\\n  bash -c \"source /opt/ros/${ROS_DISTRO}/setup.bash; \\\n  colcon build --parallel-workers ${NUM_THREADS} --cmake-args \\\n    -DUSE_PANGOLIN_VIEWER=ON \\\n    -DUSE_SOCKET_PUBLISHER=OFF \\\n    -DUSE_STACK_TRACE_LOGGER=ON\"\n\nRUN set -x && \\\n  sh -c \"echo '#'\\!'/bin/bash\\nset -e\\nsource /opt/ros/${ROS_DISTRO}/setup.bash\\nsource /ros2_ws/install/setup.bash\\nexec \\\"\\$@\\\"' > /ros_entrypoint.sh\" && \\\n  chmod u+x /ros_entrypoint.sh\n\nENTRYPOINT [\"/ros_entrypoint.sh\"]\nCMD [\"bash\"]\n"
}