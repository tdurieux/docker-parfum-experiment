{
  "startTime": 1674253449694,
  "endTime": 1674253450537,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 5,
        "columnEnd": 66
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 19,
        "columnStart": 5,
        "columnEnd": 5
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 19,
        "columnStart": 5,
        "columnEnd": 5
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:17.10\n\nRUN rm /bin/sh && ln -s /bin/bash /bin/sh\nRUN echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections\n\nRUN apt-get -y update \\\n  && apt-get -y --no-install-recommends install \\\n  build-essential \\\n  gcc \\\n  apt-utils \\\n  pkg-config \\\n  software-properties-common \\\n  apt-transport-https \\\n  libssl-dev \\\n  sudo \\\n  bash \\\n  curl \\\n  wget \\\n  tar \\\n  git \\\n  && apt-get -y update \\\n  && apt-get -y upgrade \\\n  && apt-get -y autoremove \\\n  && apt-get -y autoclean && rm -rf /var/lib/apt/lists/*;\n\nENV GOROOT /usr/local/go\nENV GOPATH /go\nENV PATH ${GOPATH}/bin:${GOROOT}/bin:${PATH}\nENV GO_VERSION REPLACE_ME_GO_VERSION\nENV GO_DOWNLOAD_URL https://storage.googleapis.com/golang\nRUN rm -rf ${GOROOT} \\\n  && curl -f -s ${GO_DOWNLOAD_URL}/go${GO_VERSION}.linux-amd64.tar.gz | tar -v -C /usr/local/ -xz \\\n  && mkdir -p ${GOPATH}/src ${GOPATH}/bin \\\n  && go version\n\nRUN mkdir -p ${GOPATH}/src/github.com/coreos/etcd\nADD . ${GOPATH}/src/github.com/coreos/etcd\n\nRUN go get -v github.com/coreos/gofail \\\n  && pushd ${GOPATH}/src/github.com/coreos/etcd \\\n  && GO_BUILD_FLAGS=\"-v\" ./build \\\n  && cp ./bin/etcd /etcd \\\n  && cp ./bin/etcdctl /etcdctl \\\n  && GO_BUILD_FLAGS=\"-v\" FAILPOINTS=1 ./build \\\n  && cp ./bin/etcd /etcd-failpoints \\\n  && ./tools/functional-tester/build \\\n  && cp ./bin/etcd-agent /etcd-agent \\\n  && cp ./bin/etcd-tester /etcd-tester \\\n  && cp ./bin/etcd-runner /etcd-runner \\\n  && go build -v -o /benchmark ./cmd/tools/benchmark \\\n  && go build -v -o /etcd-test-proxy ./cmd/tools/etcd-test-proxy \\\n  && popd \\\n  && rm -rf ${GOPATH}/src/github.com/coreos/etcd\n"
}