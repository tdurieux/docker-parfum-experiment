{
  "startTime": 1674251860384,
  "endTime": 1674251860995,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 36
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG APP_DIR=\"/app\"\nARG APP_VENV=\"/opt/venv\"\n\n# Build image\nFROM python:3.9-alpine as base\n\nARG APP_DIR\nARG APP_VENV\n\nRUN apk add --no-cache \\\n    autoconf \\\n    automake \\\n    bash \\\n    build-base \\\n    cmake \\\n    g++ \\\n    git \\\n    libexecinfo-dev \\\n    libffi-dev \\\n    libtool \\\n    libxml2-dev \\\n    libxslt-dev \\    \n    nodejs \\\n    npm \\    \n    make      \n\nRUN mkdir -p ${APP_DIR}\nWORKDIR ${APP_DIR}\n\nRUN python -m venv ${APP_VENV}\nENV PATH=\"${APP_VENV}/bin:$PATH\"\n\nRUN pip3 install --no-cache-dir awslambdaric\n\nCOPY requirements.txt ${APP_DIR}\nRUN python -m pip install wheel && \\\n    pip3 install --no-cache-dir -r requirements.txt\n\nCOPY package.json package-lock.json .snyk ${APP_DIR}\nRUN npm ci\n\nCOPY . ${APP_DIR}\nRUN npm run build && \\\n    rm -rf node_modules\n\nRUN make babel && \\\n    make generate-version-file\n\n# Final image\nFROM python:3.9-alpine as lambda\n\nARG APP_DIR\nARG APP_VENV\nARG GIT_SHA\nENV GIT_SHA ${GIT_SHA}\nENV PATH=\"${APP_VENV}/bin:$PATH\"\nENV PORT=6012\nENV PYTHONDONTWRITEBYTECODE 1\n\nRUN apk add --no-cache libstdc++\n\nWORKDIR ${APP_DIR}\n\nCOPY --from=base ${APP_DIR} ${APP_DIR}\nCOPY --from=base ${APP_VENV} ${APP_VENV}\nCOPY bin/entry.sh /\nCOPY bin/sync_lambda_envs.sh /\n\nENTRYPOINT [ \"/entry.sh\" ]\nCMD [ \"application.handler\" ]\n"
}