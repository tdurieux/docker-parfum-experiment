{
  "startTime": 1674249849159,
  "endTime": 1674249850157,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 78
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 87
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 199,
        "columnEnd": 224
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 228,
        "columnEnd": 258
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 19
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 36,
        "columnEnd": 178
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 36,
        "columnEnd": 178
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM --platform=linux/amd64 ubuntu:20.04\nARG DEBIAN_FRONTEND=noninteractive\n\n# libboost >= 1.68\n# libpython >= 3.6\n# llvm >= 12\n# cmake >= 3.20\nRUN apt update && apt upgrade -y && apt install --no-install-recommends -y build-essential clang curl git libboost-all-dev libgmp-dev libpython3-dev libpython3-stdlib llvm-12 llvm-12-dev python3-pip tar && apt-get clean && pip install --no-cache-dir --upgrade pip && pip3 install --no-cache-dir Cython lief cmake && rm -rf /var/lib/apt/lists/*;\n\n# libcapstone >= 4.0.x\nRUN cd /tmp && \\\n    curl -f -o cap.tgz -L https://github.com/aquynh/capstone/archive/4.0.2.tar.gz && \\\n    tar xvf cap.tgz && cd capstone-4.0.2/ && ./make.sh && make install && rm -rf /tmp/cap* \\\n    && ln -s /usr/lib/libcapstone.so.4 /usr/lib/x86_64-linux-gnu/libcapstone.so && rm cap.tgz\n\n# libbitwuzla\nRUN cd /tmp && \\ \n    git clone https://github.com/bitwuzla/bitwuzla && cd bitwuzla && \\\n    ./contrib/setup-cadical.sh && ./contrib/setup-btor2tools.sh && ./contrib/setup-symfpu.sh && \\\n    ./configure.sh production --only-cadical --no-symfpu --no-testing --shared && \\\n    make -C build install && rm -rf /tmp/bitwuzla\n\n# libz3 >= 4.6.0\nRUN cd /tmp && \\\n    curl -f -o z3.tgz -L https://github.com/Z3Prover/z3/archive/refs/tags/z3-4.8.14.tar.gz && \\\n    tar zxf z3.tgz && cd z3-z3-4.8.14 && mkdir build && cd build && \\\n    CC=clang CXX=clang++ cmake -DCMAKE_BUILD_TYPE=Release .. && make -j4 && make install && \\\n    pip3 install --no-cache-dir z3-solver && rm -rf /tmp/z3* && rm z3.tgz\n\n# Triton (LLVM for lifting; z3 or bitwuzla as SMT solver)\nRUN git clone https://github.com/JonathanSalwan/Triton && cd Triton && mkdir build && cd build && cmake -DLLVM_INTERFACE=ON -DCMAKE_PREFIX_PATH=$(/usr/lib/llvm-12/bin/llvm-config --prefix) -DZ3_INTERFACE=ON -DBITWUZLA_INTERFACE=ON .. && make -j4 && make install\n\nRUN PYV=`python3 -c \"import platform;print(platform.python_version()[:3])\"` && \\\n    PYP=\"/usr/lib/python$PYV/site-packages\" && \\ \n    echo export PYTHONPATH=\"$PYP:\\$PYTHONPATH\" >> /etc/bash.bashrc && \\\n    python3 -c \"import z3; print('Z3 version:', z3.get_version_string())\" && \\\n    # Next command fails if Triton has no z3 or bitwuzla support\n    PYTHONPATH=\"$PYP\" python3 -c \"from triton import *; ctx=TritonContext(ARCH.X86_64); ctx.setSolver(SOLVER.Z3); ctx.setSolver(SOLVER.BITWUZLA);\"\n\nENTRYPOINT /bin/bash\n"
}