{
  "startTime": 1674216959817,
  "endTime": 1674216960855,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 2,
        "columnEnd": 92
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 70,
        "lineEnd": 71,
        "columnStart": 2,
        "columnEnd": 32
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 2,
        "columnEnd": 13
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 69,
        "lineEnd": 70,
        "columnStart": 2,
        "columnEnd": 32
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 2,
        "columnEnd": 71
      }
    }
  ],
  "repairedDockerfile": "FROM debian:stable\n\nENV RUNNER_USER=runner\n\nENV BOOST_VER_MAJOR=1\nENV BOOST_VER_MINOR=79\nENV BOOST_VER_PATCH=0\n\nENV CURSES_VER_MAJOR=6\nENV CURSES_VER_MINOR=3\n\nENV LIBPCAP_VER_MAJOR=1\nENV LIBPCAP_VER_MINOR=10\nENV LIBPCAP_VER_PATCH=1\n\nENV LIBNL_VER_MAJOR=3\nENV LIBNL_VER_MINOR=5\nENV LIBNL_VER_PATCH=0\n\nRUN \\\n  useradd -m ${RUNNER_USER}                     && \\\n  apt-get update                                && \\\n  apt-get install -y  --no-install-recommends      \\\n    build-essential                                \\\n    wget                                           \\\n    ca-certificates                                \\\n    flex                                           \\\n    googletest                                     \\\n    byacc                                          \\\n    bison                                          \\\n    cmake                                          \\\n    libgtest-dev                                   \\\n    libgmock-dev                                   \\\n    google-mock                                    \\\n    git                                            \\\n    openssh-client                                \\\n    unzip                                          \\\n    graphviz                                       \\\n    pandoc                                         \\\n    texlive-latex-base                             \\\n    texlive-fonts-extra                            \\\n    texlive-latex-recommended                      \\\n    texlive-latex-extra                            \\\n    doxygen                                     && \\\n  apt-get clean                                 && \\\n  rm -rf /var/lib/apt/lists/*                   && \\\n  cd /home/${RUNNER_USER}                       && \\\n                                                   \\\n  wget https://boostorg.jfrog.io/artifactory/main/release/${BOOST_VER_MAJOR}.${BOOST_VER_MINOR}.${BOOST_VER_PATCH}/source/boost_${BOOST_VER_MAJOR}_${BOOST_VER_MINOR}_${BOOST_VER_PATCH}.tar.bz2 && \\\n  wget https://ftp.gnu.org/pub/gnu/ncurses/ncurses-${CURSES_VER_MAJOR}.${CURSES_VER_MINOR}.tar.gz && \\\n  wget https://www.tcpdump.org/release/libpcap-${LIBPCAP_VER_MAJOR}.${LIBPCAP_VER_MINOR}.${LIBPCAP_VER_PATCH}.tar.gz && \\\n  wget https://github.com/thom311/libnl/releases/download/libnl${LIBNL_VER_MAJOR}_${LIBNL_VER_MINOR}_${LIBNL_VER_PATCH}/libnl-${LIBNL_VER_MAJOR}.${LIBNL_VER_MINOR}.${LIBNL_VER_PATCH}.tar.gz && \\\n                                                                                                               \\\n  for f in *.tar.*; do tar -xvf \"$f\"; done                                                                  && \\\n  rm *.tar.*                                                                                                && \\\n                                                                                                               \\\n  mv *boost* boost                                                                                          && \\\n  cd boost                                                                                                  && \\\n  ./bootstrap.sh                                                                                            && \\\n  ./b2 link=static variant=release threading=multi runtime-link=static --with-system --with-program_options && \\\n  cd ..                                                                                                     && \\\n                                                                                                               \\\n  mv *libpcap* libpcap                                                                                      && \\\n  cd libpcap && \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-ipv6 --disable-usb --disable-dbus --without-libnl --disable-universal && \\\n  make -j`nproc` && \\\n  cd .. && \\\n\n  mv *ncurses* ncurses && \\\n  cd ncurses && \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-terminfo-dirs=\"/etc/terminfo:/lib/terminfo:/usr/share/terminfo:/usr/lib/terminfo\" \\\n  --without-debug --enable-widec && \\\n  make -j`nproc` && \\\n  cd .. && \\\n\n  mv *libnl* libnl && \\\n  cd libnl && \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n  make -j`nproc` && \\\n  cd ..\n"
}