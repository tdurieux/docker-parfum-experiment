{
  "startTime": 1674254548295,
  "endTime": 1674254549322,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 7,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 7,
        "columnEnd": 36
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 2,
        "lineEnd": 5,
        "columnStart": 22,
        "columnEnd": 64
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 7,
        "columnEnd": 36
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 7,
        "columnEnd": 60
      }
    }
  ],
  "repairedDockerfile": "FROM php:7.2-cli\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n        curl libcurl4-gnutls-dev locales imagemagick libmagickcore-dev libmagickwand-dev zip \\\n        ruby ruby-dev libpq-dev gnupg nano iputils-ping git \\\n        libfreetype6-dev libjpeg62-turbo-dev libpng-dev less vim && rm -rf /var/lib/apt/lists/*;\n\nRUN curl -f -sL https://deb.nodesource.com/setup_8.x | bash - \\\n    && apt-get install --no-install-recommends -y nodejs npm && rm -rf /var/lib/apt/lists/*;\n\nRUN rm -rf /var/lib/apt/lists\n\n# Install uglify and terser\nRUN npm install -g \\\n        terser \\\n        uglifycss \\\n        autoprefixer && npm cache clean --force;\n\n# Install sass\nRUN gem install sass -v 3.4.22\n\n# Install extensions\nRUN docker-php-ext-install opcache pdo_pgsql zip xml curl json\n\n# Install GD\nRUN docker-php-ext-install -j$(nproc) iconv \\\n    && docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \\\n    && docker-php-ext-install -j$(nproc) gd\n\n# Install APCu\nRUN pecl install apcu \\\n    && echo \"extension=apcu.so\" > /usr/local/etc/php/conf.d/apcu.ini\n\n# Install imagick\nRUN pecl install imagick-beta \\\n    && echo \"extension=imagick.so\" > /usr/local/etc/php/conf.d/ext-imagick.ini\n\n# Install xdebug\nRUN yes | pecl install xdebug \\\n    && echo \"zend_extension=$(find /usr/local/lib/php/extensions/ -name xdebug.so)\" > /usr/local/etc/php/conf.d/xdebug.ini \\\n    && echo \"xdebug.remote_enable=on\" >> /usr/local/etc/php/conf.d/xdebug.ini \\\n    && echo \"xdebug.remote_autostart=off\" >> /usr/local/etc/php/conf.d/xdebug.ini\n\n\n# Install GD\nRUN docker-php-ext-install -j$(nproc) iconv \\\n    && docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \\\n    && docker-php-ext-install -j$(nproc) gd\n\n# Install composer\nRUN php -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\" && \\\n    php composer-setup.php --version=1.10.16 --install-dir=/usr/local/bin && \\\n    rm composer-setup.php\n\n# Install redis\nRUN pecl install -o -f redis \\\n    &&  rm -rf /tmp/pear \\\n    &&  docker-php-ext-enable redis\n\n\n# Copy source\nCOPY src/index.php /var/www/html/index.php\nCOPY src/protected /var/www/html/protected\n\nRUN mkdir /var/www/html/protected/vendor /var/www/.composer && \\\n    chown -R www-data:www-data /var/www/html/protected/vendor /var/www/.composer\n\nRUN ln -s /var/www/html/protected/application/lib/postgis-restful-web-service-framework /var/www/html/geojson\n\nWORKDIR /var/www/html/protected\nRUN composer.phar install\n\nWORKDIR /var/www/html/protected/application/themes/\n\nRUN find . -maxdepth 1 -mindepth 1 -exec echo \"compilando sass do tema \" {} \\; -exec sass {}/assets/css/sass/main.scss {}/assets/css/main.css -E \"UTF-8\" \\;\n\nCOPY scripts /var/www/scripts\nCOPY compose/local/php.ini /usr/local/etc/php/php.ini\nCOPY compose/config.php /var/www/html/protected/application/conf/config.php\nCOPY compose/config.d /var/www/html/protected/application/conf/config.d\nRUN mkdir /var/www/SaaS\n\nRUN ln -s /var/www/html /var/www/src\n\nCOPY src/router.php /var/www/html/router.php\nRUN echo \"php -S 0.0.0.0:8001 -t /var/www/html /var/www/html/router.php\" > /mapas.sh && chmod +x /mapas.sh\n\nCOPY version.txt /var/www/version.txt\n\nCOPY compose/recreate-pending-pcache-cron.sh /recreate-pending-pcache-cron.sh\nCOPY compose/jobs-cron.sh /jobs-cron.sh\nCOPY compose/entrypoint.sh /entrypoint.sh\nENTRYPOINT [\"/entrypoint.sh\"]\n\nWORKDIR /var/www/html/\nEXPOSE 80\n\nCMD php -S 0.0.0.0:80 -t /var/www/html /var/www/html/router.php\n"
}