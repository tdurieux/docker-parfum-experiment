{
  "startTime": 1674214936588,
  "endTime": 1674214937495,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 62,
        "lineEnd": 70,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 32
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 16
      }
    }
  ],
  "repairedDockerfile": "FROM debian:jessie\n\nENV SHELL /bin/bash\n\n# Localize en_US.UTF-8\nRUN apt-get update -qq \\\n && echo \"en_US.UTF-8 UTF-8\" > /etc/locale.gen \\\n && apt-get install --no-install-recommends -yqq locales \\\n && update-locale LANG=en_US.UTF-8 && rm -rf /var/lib/apt/lists/*;\n\nENV LANG en_US.UTF-8\nENV LANGUAGE en_US.UTF-8\nENV LC_ALL en_US.UTF-8\nENV PYTHONIOENCODING UTF-8\n\n# A few packages\nRUN apt-get install --no-install-recommends -yqq \\\n      ack-grep \\\n      build-essential \\\n      bzip2 \\\n      ca-certificates \\\n      curl \\\n      fonts-dejavu \\\n      git \\\n      ldap-utils \\\n      less \\\n      libcurl4-openssl-dev \\\n      libffi-dev \\\n      libglib2.0-0 \\\n      libsm6 \\\n      libsqlite3-dev \\\n      libssl-dev \\\n      libxext6 \\\n      libxrender1 \\\n      libzmq3-dev \\\n      mercurial \\\n      openssh-server \\\n      pandoc \\\n      pkg-config \\\n      python3 \\\n      python3-dev \\\n      python3-pip \\\n      subversion \\\n      sqlite3 \\\n      sudo \\\n      tmux \\\n      tree \\\n      unzip \\\n      vim \\\n      wget \\\n      xsel \\\n      zip \\\n      zlib1g-dev \\\n && apt-get clean -yqq \\\n && rm -rf /var/lib/apt/lists/*\n\n# Add Tini\nRUN wget --quiet https://github.com/krallin/tini/releases/download/v0.9.0/tini \\\n && chmod +x /tini\n\n# Update python packages and install Jupyter\nRUN pip3 list --outdated | cut -d \" \" -f 1 | xargs pip3 install -q --upgrade \\\n && pip3 install --no-cache-dir -q --upgrade \\\n      cloudpickle \\\n      dill \\\n      ipyparallel \\\n      ipywidgets \\\n      jupyter \\\n      nose \\\n      notebook \\\n      requests[security] \\\n && rm -fr /root/.cache /tmp/*\n\nEXPOSE 2222 8888\nENTRYPOINT [\"/tini\", \"run\"]\n\nENV JUPYTER_ID=\"jovyan:1000:100\"\nENV JUPYTER_ENGINES_N=\"\"\nENV JUPYTER_CONTROLLER=\"\"\nCMD [\"console\"]\n\nCOPY run /usr/sbin/run\nCOPY commands /docker-commands\nRUN chmod u+x /usr/sbin/run \\\n && chmod +x /docker-commands/*\n"
}