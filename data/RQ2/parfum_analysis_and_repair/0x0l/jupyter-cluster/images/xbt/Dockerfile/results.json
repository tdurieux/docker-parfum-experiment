{
  "startTime": 1674246773279,
  "endTime": 1674246774695,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 87
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 40
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:9\n\nMAINTAINER 0x0L <0x0L@github.com>\n\nENV LANG=C.UTF-8 LC_ALL=C.UTF-8\nENV PATH /opt/conda/bin:$PATH\nENV QT_QPA_PLATFORM offscreen\n\nRUN apt-get update; apt-get dist-upgrade -y \\\n && apt-get install --no-install-recommends -y \\\n      ack build-essential bzip2 ca-certificates git graphviz \\\n      libglib2.0-0 libsm6 libxext6 libxrender1 \\\n      neovim procps tmux tree unzip wget \\\n && apt-get clean; rm -rf /var/lib/apt/lists/*; apt-get autoclean\n\nWORKDIR /tmp\n\nRUN wget --quiet https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh \\\n && bash Miniconda3-latest-Linux-x86_64.sh -b -p /opt/conda \\\n && echo 'export PATH=/opt/conda/bin:$PATH' > /etc/profile.d/conda.sh \\\n && conda config --system --set show_channel_urls true \\\n && conda config --system --set auto_update_conda false \\\n && conda update --all --yes \\\n && conda install \\\n      alembic beautifulsoup4 boto bottleneck cmake cython dask distributed \\\n      flask hdf4 hdf5 ipyparallel ipywidgets lxml matplotlib networkx nltk \\\n      nodejs nose notebook numba numexpr numpy pandas patsy pep8 pymc3 pyodbc \\\n      pytables pytest pywavelets scikit-learn scipy seaborn sqlalchemy sqlite \\\n      statsmodels sympy theano tqdm uvloop xarray xlrd xlsxwriter xlwt \\\n && conda install -c conda-forge ipympl jupyterhub jupyterlab netcdf4 \\\n && conda clean -ay; rm Miniconda3-latest-Linux-x86_64.sh\n\nRUN export CVXOPT_BLAS_EXTRA_LINK_ARGS=\"-L/opt/conda/lib;-Wl,-rpath,/opt/conda/lib,--no-as-needed;-lmkl_rt;-lpthread;-lm;-ldl\" \\\n && export CVXOPT_BLAS_LIB=mkl_rt \\\n && export CVXOPT_LAPACK_LIB=mkl_rt \\\n && wget --quiet https://faculty.cse.tamu.edu/davis/SuiteSparse/SuiteSparse-4.5.6.tar.gz \\\n && tar -xf SuiteSparse-4.5.6.tar.gz \\\n && export CVXOPT_SUITESPARSE_SRC_DIR=/tmp/SuiteSparse \\\n && pip install --no-cache-dir cvxopt --no-binary cvxopt \\\n && rm -fr /tmp/* && rm SuiteSparse-4.5.6.tar.gz\n\nRUN git clone --recursive https://github.com/dmlc/xgboost \\\n && cd xgboost; make -j4; make pypack; cd .. \\\n && pip install --no-cache-dir ./xgboost/python-package \\\n && rm -fr /tmp/*\n\nRUN pip install --no-cache-dir --no-binary :all: lightgbm\n\nRUN pip install --no-cache-dir \\\n      arch catboost deap GPy gplearn graphviz hmmlearn keras pykalman\n\nRUN sed -i 's/^backend.*//g' /opt/conda/lib/python3.6/site-packages/matplotlib/mpl-data/matplotlibrc\n\nRUN jupyter nbextension enable --system --py widgetsnbextension\n# RUN jupyter serverextension enable --system --py ipyparallel \\\n#  && jupyter nbextension install --system --py ipyparallel \\\n#  && jupyter nbextension enable --system --py ipyparallel\n\nADD https://github.com/krallin/tini/releases/download/v0.16.1/tini /usr/bin/tini\nRUN chmod +x /usr/bin/tini\n\nENTRYPOINT [ \"/usr/bin/tini\", \"--\" ]\nCMD [ \"/bin/bash\" ]\n\n# jupyterlab-hub\n\n# conda install ldap3\n# pip install git+https://github.com/jupyterhub/ldapauthenticator\n# jupyterhub --generate-config\n\n# c.JupyterHub.authenticator_class = 'ldapauthenticator.LDAPAuthenticator'\n#\n# c.LDAPAuthenticator.server_address = 'ldap.forumsys.com'\n#\n# c.LDAPAuthenticator.bind_dn_template = [\n#     'uid={username},dc=example,dc=com',\n# ]\n\n# spawner\n\n# matplotlib lib inline default backend\n# => ipython profile\n# => ipython completer\n\n# filterpy\n# edward\n# ZhuSuan\n\n# conda install protobuf\n# pip install tf-nightly\n\n# #https://github.com/tensorflow/tensorflow/issues/12935\n# #conda create -n tensorflow python=3.6\n# #source activate tensorflow\n# pip install --ignore-installed --upgrade \\\n#   https://storage.googleapis.com/tensorflow/linux/cpu/tensorflow-1.4.0-cp36-cp36m-linux_x86_64.whl\n\n# https://stackoverflow.com/questions/40407946/how-to-use-python-requests-to-perform-ntlm-sspi-authentication\n"
}