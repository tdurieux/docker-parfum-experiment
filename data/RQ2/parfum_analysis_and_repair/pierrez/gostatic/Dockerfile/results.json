{
  "startTime": 1674218967077,
  "endTime": 1674218967561,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 22,
        "columnEnd": 44
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 22,
        "columnEnd": 44
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 22,
        "columnEnd": 68
      }
    }
  ],
  "repairedDockerfile": "# stage 0\nFROM --platform=$BUILDPLATFORM golang:latest as builder\n\nARG TARGETPLATFORM\n\nWORKDIR /go/src/github.com/PierreZ/goStatic\nCOPY . .\n\nRUN mkdir ./bin && \\\n    apt-get update && apt-get install --no-install-recommends -y upx && \\\n    \n    # getting right vars from docker buildx\n    # especially to handle linux/arm/v6 for ex mp \\\n    GOOS=$(echo $TARGETPLATFORM | cut -f1 -d/) &  \\\n    GOARCH=$(echo $TARGETPLATFORM | cut -f2 -d/) && \\\n    GOARM=$(echo $TARGETPLATFORM | cut -f3 -d/ | sed \"s/v//\" ) && \\\n\n    CGO_ENABLED=0 GOOS=${GOOS} OA \\\n\n    mkdir ./ in \\\n    ID=$(shuf -i 100-9999 -n 1) && \\\n    upx -9 ./bin/goStatic && \\ && rm -rf /var/lib/apt/lists/*;\n\n# stage 1\nFROM scratch\nWORKDIR /\nCOPY --from=builder /go/src/github.com/PierreZ/goStatic/bin/ .\nUSER appuser\nENTRYPOINT [\"/goStatic\"]\n\n"
}