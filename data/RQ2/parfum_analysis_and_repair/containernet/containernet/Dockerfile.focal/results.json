{
  "startTime": 1674255979113,
  "endTime": 1674255979637,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 19,
        "columnStart": 7,
        "columnEnd": 8
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 19,
        "columnStart": 7,
        "columnEnd": 8
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:focal\n\nARG DEBIAN_FRONTEND=noninteractive\n\n# install required packages\nRUN apt-get clean\nRUN apt-get update \\\n    && apt-get install --no-install-recommends -y git \\\n    net-tools \\\n    aptitude \\\n    build-essential \\\n    python3-setuptools \\\n    python3-dev \\\n    python3-pip \\\n    software-properties-common \\\n    ansible \\\n    curl \\\n    iptables \\\n    iputils-ping \\\n    sudo && rm -rf /var/lib/apt/lists/*;\n\n# install containernet (using its Ansible playbook)\nCOPY . /containernet\nWORKDIR /containernet/ansible\nRUN ansible-playbook -i \"localhost,\" -c local --skip-tags \"notindocker\" install.yml\nWORKDIR /containernet\nRUN make develop\n\n# tell containernet that it runs in a container\nENV CONTAINERNET_NESTED 1\n\n# Important: This entrypoint is required to start the OVS service\nENTRYPOINT [\"util/docker/entrypoint.sh\"]\nCMD [\"python3\", \"examples/containernet_example.py\"]\n"
}