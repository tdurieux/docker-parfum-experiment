{
  "startTime": 1674215752662,
  "endTime": 1674215753379,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 2,
        "columnEnd": 42
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 2,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 2,
        "columnEnd": 42
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 2,
        "columnEnd": 42
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 2,
        "columnEnd": 36
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 2,
        "columnEnd": 66
      }
    }
  ],
  "repairedDockerfile": "FROM golang:buster AS build\nRUN export DEBIAN_FRONTEND=noninteractive && \\\n  apt-get install --no-install-recommends -y make gcc libc-dev git && rm -rf /var/lib/apt/lists/*;\nWORKDIR /app\nRUN go get -u github.com/jstemmer/go-junit-report\nRUN go get -u github.com/GeertJohan/go.rice/rice\nCOPY . .\nRUN go mod tidy\nRUN go mod vendor\nRUN rice embed-go\nRUN go build -tags netgo -ldflags '-extldflags \"-static\"'\n\nFROM debian:stable-slim\nENV HOMEDIR=/home/filebin2\nENV USER_ID=1024\nENV GROUP_ID=1024\nRUN apt-get update && \\\r\n  apt-get upgrade -y && \\\n  apt-get install --no-install-recommends ca-certificates -y && \\\n  update-ca-certificates && \\\n  mkdir -p $HOMEDIR && \\\n  mkdir -p /var/log/filebin && \\\n  addgroup --gid $GROUP_ID filebin2 && \\\n  useradd --system --uid $USER_ID --gid $GROUP_ID --shell /bin/bash \\\r\n    --home $HOMEDIR filebin2 && \\\n  chown -R filebin2:filebin2 $HOMEDIR && \\\n  chown -R filebin2:filebin2 /var/log/filebin && rm -rf /var/lib/apt/lists/*;\nCOPY --from=build --chown=filebin2:filebin2 /app/filebin2 \\\r\n  /usr/local/bin/filebin2\nCOPY --chown=filebin2:filebin2 ./static $HOMEDIR/static\nWORKDIR $HOMEDIR\nUSER filebin2\nENTRYPOINT [\"/usr/local/bin/filebin2\"]\n"
}