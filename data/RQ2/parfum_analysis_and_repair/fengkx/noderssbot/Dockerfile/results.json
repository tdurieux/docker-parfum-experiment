{
  "startTime": 1674255505510,
  "endTime": 1674255506035,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 16
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:16-alpine as ts-builder\nWORKDIR /app\nCOPY . /app\nRUN npm i -g npm && npm ci --ignore-scripts && npm run build && npm cache clean --force;\n\nFROM node:16-alpine as dep-builder\nWORKDIR /app\nCOPY package.json package-lock.json /app/\nCOPY tools /app/tools\nRUN apk add --no-cache --update build-base python3\nCOPY --from=ts-builder /app/dist /app/dist\nRUN npm i -g npm && npm ci && node tools/minify-docker.js && sh tools/clean-nm.sh && npm cache clean --force;\n\nFROM node:16-alpine as app\nWORKDIR /app\nENV NODE_PRODUTION true\nCOPY data /app/data\nCOPY logs /app/logs\nCOPY package.json /app/package.json\nCOPY --from=ts-builder /app/dist /app/dist\nCOPY --from=dep-builder /app/node_modules-minimal/node_modules /app/node_modules\nCMD npm run start-docker\n"
}