{
  "startTime": 1674220179045,
  "endTime": 1674220180157,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM --platform=$BUILDPLATFORM node:16-alpine AS frontend-build\nWORKDIR /tmp\nCOPY static/package*.json ./\nCOPY static/src ./src\nCOPY static/public ./public\nRUN npm install && npm cache clean --force;\nRUN PUBLIC_URL=/build npm run build\n\nFROM python:3.9.12-alpine3.15\nWORKDIR /tmp\nCOPY poetry.lock ./\nCOPY pyproject.toml ./\nCOPY feeder/ ./feeder\nCOPY --from=frontend-build /tmp/build ./static/build\nCOPY alembic.ini ./\nCOPY README.md ./\n# This has a hack with pip to get around the fact that poetry doesn't handle extra index URLs correctly yet\nRUN apk add --no-cache --virtual .build-deps \\\n        build-base \\\n        cargo \\\n        libffi-dev \\\n        musl-dev \\\n        openssl-dev \\\n        py3-pip \\\n        python3-dev \\\n        git \\\n        jq \\\n    && python -m pip install --no-cache-dir --upgrade pip \\\n    && pip install --no-cache-dir poetry yq --extra-index-url https://www.piwheels.org/simple \\\n    && cat poetry.lock | tomlq -r '.package[] | select(.category == \"main\") | select(.source == null) | \"\\(.name)==\\(.version)\"' | xargs poetry run pip install --no-cache-dir --extra-index-url https://www.piwheels.org/simple \\\n    && poetry install --no-dev -v \\\n    && apk del .build-deps \\\n    && rm -rf ~/.cache/pip \\\n    && rm -rf ~/.cache/pypoetry/{cache,artifacts}\nCMD poetry run alembic upgrade head && poetry run python -m feeder\nEXPOSE 1883/tcp\nEXPOSE 5000/tcp\nEXPOSE 8883/tcp\n"
}