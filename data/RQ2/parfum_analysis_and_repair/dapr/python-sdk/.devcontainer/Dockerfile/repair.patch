diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/dapr/python-sdk/.devcontainer/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/dapr/python-sdk/.devcontainer/Dockerfile/repaired.Dockerfile
index eecc43a..06095a6 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/dapr/python-sdk/.devcontainer/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/dapr/python-sdk/.devcontainer/Dockerfile/repaired.Dockerfile
@@ -33,14 +33,14 @@ ARG USER_GID=$USER_UID
 RUN apt-get update \
     && apt-get -y install --no-install-recommends apt-utils dialog 2>&1 \
     #
-    # Verify git, process tools, lsb-release (common in install instructions for CLIs) installed
-    && apt-get -y install git openssh-client less iproute2 procps lsb-release \
+    # Verify git, process tools, lsb-release (common in install instructions for CLIs) installed \
+    && apt-get -y --no-install-recommends install git openssh-client less iproute2 procps lsb-release \
     # Install Docker CE CLI
-    && apt-get install -y apt-transport-https ca-certificates curl gnupg-agent software-properties-common lsb-release \
+    && apt-get install --no-install-recommends -y apt-transport-https ca-certificates curl gnupg-agent software-properties-common lsb-release \
     && curl -fsSL https://download.docker.com/linux/$(lsb_release -is | tr '[:upper:]' '[:lower:]')/gpg | (OUT=$(apt-key add - 2>&1) || echo $OUT) \
     && add-apt-repository "deb [arch=$(dpkg --print-architecture)] https://download.docker.com/linux/$(lsb_release -is | tr '[:upper:]' '[:lower:]') $(lsb_release -cs) stable" \
     && apt-get update \
-    && apt-get install -y docker-ce-cli \
+    && apt-get install --no-install-recommends -y docker-ce-cli \
     #
     # Install pylint
     && pip --disable-pip-version-check --no-cache-dir install pylint \
@@ -55,8 +55,8 @@ RUN apt-get update \
     && groupadd --gid $USER_GID $USERNAME \
     && useradd -s /bin/bash --uid $USER_UID --gid $USER_GID -m $USERNAME \
     # [Optional] Add sudo support for the non-root user
-    && apt-get install -y sudo \
-    && echo $USERNAME ALL=\(root\) NOPASSWD:ALL > /etc/sudoers.d/$USERNAME\
+    && apt-get install --no-install-recommends -y sudo \
+    && echo $USERNAME ALL=\(root\) NOPASSWD:ALL > /etc/sudoers.d/$USERNAME \
     && chmod 0440 /etc/sudoers.d/$USERNAME \
     #
     # Clean up