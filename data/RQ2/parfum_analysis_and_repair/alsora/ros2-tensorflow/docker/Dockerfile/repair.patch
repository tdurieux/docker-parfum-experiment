diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/alsora/ros2-tensorflow/docker/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/alsora/ros2-tensorflow/docker/Dockerfile/repaired.Dockerfile
index f1dc242..db29a6f 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/alsora/ros2-tensorflow/docker/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/alsora/ros2-tensorflow/docker/Dockerfile/repaired.Dockerfile
@@ -15,7 +15,7 @@ ENV NVIDIA_DRIVER_CAPABILITIES \
     ${NVIDIA_DRIVER_CAPABILITIES:+$NVIDIA_DRIVER_CAPABILITIES,}graphics
 
 # general utilities
-RUN apt-get update && apt-get install -y \
+RUN apt-get update && apt-get install --no-install-recommends -y \
     wget \
     curl \
     git \
@@ -24,30 +24,30 @@ RUN apt-get update && apt-get install -y \
     nano \
     python-dev \
     python3-pip \
-    unzip
+    unzip && rm -rf /var/lib/apt/lists/*;
 
 # pip
-RUN pip3 install --upgrade pip
+RUN pip3 install --no-cache-dir --upgrade pip
 
 #### ROS2 SETUP
 
 # Locale options
-RUN apt-get install -y locales
+RUN apt-get install --no-install-recommends -y locales && rm -rf /var/lib/apt/lists/*;
 ENV LANG C.UTF-8
 ENV LC_ALL C.UTF-8
 
 # install development tools and ROS tools
-RUN apt-get install -y \
+RUN apt-get install --no-install-recommends -y \
   build-essential \
   cmake \
   python3-catkin-pkg-modules \
   python3-colcon-common-extensions \
   python3-rosdep \
-  python3-vcstool
+  python3-vcstool && rm -rf /var/lib/apt/lists/*;
 
 # install python packages
 # specify a version of flake8 as the latest (3.8 is not compatible with ament)
-RUN pip3 install -U \
+RUN pip3 install --no-cache-dir -U \
   argcomplete \
   flake8==3.7 \
   flake8-blind-except \
@@ -68,11 +68,11 @@ RUN pip3 install -U \
 # install Fast-RTPS dependencies
 RUN apt-get install --no-install-recommends -y \
   libasio-dev \
-  libtinyxml2-dev
+  libtinyxml2-dev && rm -rf /var/lib/apt/lists/*;
 
 # install CycloneDDS dependencies
 RUN apt-get install --no-install-recommends -y \
-  libcunit1-dev
+  libcunit1-dev && rm -rf /var/lib/apt/lists/*;
 
 #### TENSORFLOW
 
@@ -85,11 +85,11 @@ WORKDIR $HOME
 # tensorflow object detection dependencies from:
 # https://tensorflow-object-detection-api-tutorial.readthedocs.io/en/latest/install.html#install-prerequisites
 # https://github.com/tensorflow/models/blob/master/research/object_detection/g3doc/installation.md
-RUN apt-get install -y \
+RUN apt-get install --no-install-recommends -y \
   protobuf-compiler \
   python-lxml \
-  python-tk
-RUN pip install \
+  python-tk && rm -rf /var/lib/apt/lists/*;
+RUN pip install --no-cache-dir \
   Cython \
   contextlib2 \
   jupyter \
@@ -106,7 +106,7 @@ WORKDIR /usr/local/lib/python3.8/dist-packages/tensorflow/models/research
 RUN protoc object_detection/protos/*.proto --python_out=.
 
 # Tensorflow-Slim (required for image segmentation)
-RUN pip install tf_slim
+RUN pip install --no-cache-dir tf_slim
 
 # optional install COCO API for COCO metrics
 #RUN git clone https://github.com/cocodataset/cocoapi.git $HOME/cocoapi