diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/alsora/ros2-code-examples/docker/ros2_tensorflow_nvidia/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/alsora/ros2-code-examples/docker/ros2_tensorflow_nvidia/Dockerfile/repaired.Dockerfile
index 9dbc677..1f6ed7d 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/alsora/ros2-code-examples/docker/ros2_tensorflow_nvidia/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/alsora/ros2-code-examples/docker/ros2_tensorflow_nvidia/Dockerfile/repaired.Dockerfile
@@ -12,7 +12,7 @@ ENV NVIDIA_DRIVER_CAPABILITIES \
     ${NVIDIA_DRIVER_CAPABILITIES:+$NVIDIA_DRIVER_CAPABILITIES,}graphics
 
 # general utilities
-RUN apt-get update && apt-get install -y \
+RUN apt-get update && apt-get install --no-install-recommends -y \
     wget \
     curl \
     git \
@@ -20,28 +20,28 @@ RUN apt-get update && apt-get install -y \
     nano \
     python-dev \
     python3-pip \
-    ipython
+    ipython && rm -rf /var/lib/apt/lists/*;
 
 # pip
-RUN pip3 install --upgrade pip
+RUN pip3 install --no-cache-dir --upgrade pip
 
 
 #### ROS2 SETUP
 
 
 # Locale options
-RUN apt-get install -y locales
+RUN apt-get install --no-install-recommends -y locales && rm -rf /var/lib/apt/lists/*;
 RUN locale-gen en_US.UTF-8
 RUN update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8
 ENV LANG en_US.UTF-8
 
 # setup sources
-RUN apt-get install -y lsb-release
-RUN curl http://repo.ros2.org/repos.key | apt-key add -
+RUN apt-get install --no-install-recommends -y lsb-release && rm -rf /var/lib/apt/lists/*;
+RUN curl -f https://repo.ros2.org/repos.key | apt-key add -
 RUN sh -c 'echo "deb [arch=amd64,arm64] http://repo.ros2.org/ubuntu/main `lsb_release -cs` main" > /etc/apt/sources.list.d/ros2-latest.list'
 
 # ROS setup requirements
-RUN apt-get update && apt-get install -y \
+RUN apt-get update && apt-get install --no-install-recommends -y \
   build-essential \
   cmake \
   git \
@@ -49,7 +49,7 @@ RUN apt-get update && apt-get install -y \
   python3-pip \
   python-rosdep \
   python3-vcstool \
-  wget
+  wget && rm -rf /var/lib/apt/lists/*;
 
 RUN python3 -m pip install -U \
   argcomplete \
@@ -76,7 +76,7 @@ RUN python3 -m pip install -U \
 RUN apt-get install --no-install-recommends -y \
   libasio-dev \
   libtinyxml2-dev \
-  libopensplice67
+  libopensplice67 && rm -rf /var/lib/apt/lists/*;
 
 # create ros2 sdk workspace
 RUN mkdir -p $HOME/ros2_sdk/src
@@ -98,10 +98,10 @@ RUN colcon build --symlink-install
 
 # install tensorflow
 #RUN export LD_LIBRARY_PATH=${LD_LIBRARY_PATH:+${LD_LIBRARY_PATH}:}/usr/local/cuda/extras/CUPTI/lib64
-RUN pip install tensorflow
+RUN pip install --no-cache-dir tensorflow
 
-RUN apt-get install -y python3-tk
-RUN pip install matplotlib opencv-python
+RUN apt-get install --no-install-recommends -y python3-tk && rm -rf /var/lib/apt/lists/*;
+RUN pip install --no-cache-dir matplotlib opencv-python
 
 #### SET ENVIRONMENT