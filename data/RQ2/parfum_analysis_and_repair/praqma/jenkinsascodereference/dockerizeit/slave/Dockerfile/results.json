{
  "startTime": 1674248292264,
  "endTime": 1674248293480,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 266
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 266
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 41,
        "columnEnd": 102
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 138,
        "columnEnd": 208
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 18,
        "columnEnd": 38
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 42,
        "columnEnd": 54
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 18,
        "columnEnd": 52
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 18,
        "columnEnd": 37
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM openjdk:8u151-jdk-alpine\n\nENV JENKINS_SWARM_VERSION 2.0\nENV JAVA_HOME /usr/lib/jvm/java-1.8-openjdk\n\n# Add support for proxies.\n# Values should be passed as build args\n# http://docs.docker.com/engine/reference/builder/#arg\nENV http_proxy ${http_proxy:-}\nENV https_proxy ${https_proxy:-}\nENV no_proxy ${no_proxy:-}\nARG JAVA_PROXY\nENV JAVA_PROXY ${JAVA_PROXY}\n\n# install docker\n\nRUN apk update && apk --update --no-cache add tar && apk add --no-cache curl && curl -fsSLO https://get.docker.com/builds/Linux/x86_64/docker-17.05.0-ce.tgz && tar --strip-components=1 -xvzf docker-17.05.0-ce.tgz -C /usr/local/bin && rm -rf docker-* && rm docker-17.05.0-ce.tgz\n# install git, curl, ssh, bash\nRUN apk update && apk add --no-cache git curl openssh bash tini\n\n# install docker compose and other python deps\nRUN apk update && apk add --no-cache py-pip perl && pip install --no-cache-dir docker-compose==1.13.0 docopt==0.6.2 pyyaml==3.11\n\nRUN curl -f --create-dirs -sSLo /usr/share/jenkins/swarm-client-$JENKINS_SWARM_VERSION-jar-with-dependencies.jar https://repo.jenkins-ci.org/releases/org/jenkins-ci/plugins/swarm-client/$JENKINS_SWARM_VERSION/swarm-client-$JENKINS_SWARM_VERSION-jar-with-dependencies.jar \\\n  && chmod 755 /usr/share/jenkins\n\n#Install tool to do clean up of all unused docker layers and images\nRUN curl -f -s https://raw.githubusercontent.com/Praqma/docker-clean/master/docker-clean | tee /usr/local/bin/docker-clean > /dev/null && chmod +x /usr/local/bin/docker-clean\n\nCOPY start.sh /usr/local/bin/start.sh\nRUN chmod 755 /usr/local/bin/start.sh\n\nENTRYPOINT [\"/sbin/tini\", \"--\", \"/usr/local/bin/start.sh\"]\n\n"
}