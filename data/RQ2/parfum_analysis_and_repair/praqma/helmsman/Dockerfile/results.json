{
  "startTime": 1674219539343,
  "endTime": 1674219540651,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 145
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 82
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG GO_VERSION=\"1.18.2\"\nARG ALPINE_VERSION=\"3.15\"\nARG GLOBAL_KUBE_VERSION=\"v1.23.6\"\nARG GLOBAL_HELM_VERSION=\"v3.9.0\"\nARG GLOBAL_HELM_DIFF_VERSION=\"v3.5.0\"\nARG GLOBAL_HELM_GCS_VERSION=\"0.3.21\"\nARG GLOBAL_HELM_S3_VERSION=\"v0.10.0\"\nARG GLOBAL_HELM_SECRETS_VERSION=\"v3.13.0\"\nARG GLOBAL_SOPS_VERSION=\"v3.7.3\"\n\n### Helm Installer ###\nFROM alpine:${ALPINE_VERSION} as helm-installer\nARG GLOBAL_KUBE_VERSION\nARG GLOBAL_HELM_VERSION\nARG GLOBAL_HELM_DIFF_VERSION\nARG GLOBAL_HELM_GCS_VERSION\nARG GLOBAL_HELM_S3_VERSION\nARG GLOBAL_HELM_SECRETS_VERSION\nARG GLOBAL_SOPS_VERSION\nENV KUBE_VERSION=$GLOBAL_KUBE_VERSION\nENV HELM_VERSION=$GLOBAL_HELM_VERSION\nENV HELM_DIFF_VERSION=$GLOBAL_HELM_DIFF_VERSION\nENV HELM_GCS_VERSION=$GLOBAL_HELM_GCS_VERSION\nENV HELM_S3_VERSION=$GLOBAL_HELM_S3_VERSION\nENV HELM_SECRETS_VERSION=$GLOBAL_HELM_SECRETS_VERSION\nENV SOPS_VERSION=$GLOBAL_SOPS_VERSION\n\nRUN apk add --update --no-cache ca-certificates git openssh openssl ruby curl wget tar gzip make bash\n\nADD https://github.com/mozilla/sops/releases/download/${SOPS_VERSION}/sops-${SOPS_VERSION}.linux /usr/local/bin/sops\nRUN chmod +x /usr/local/bin/sops\n\nRUN curl -f --retry 5 -L https://storage.googleapis.com/kubernetes-release/release/${KUBE_VERSION}/bin/linux/amd64/kubectl -o /usr/local/bin/kubectl\nRUN chmod +x /usr/local/bin/kubectl\n\nRUN curl -f --retry 5 -Lk https://get.helm.sh/helm-${HELM_VERSION}-linux-amd64.tar.gz | tar zxv -C /tmp\nRUN mv /tmp/linux-amd64/helm /usr/local/bin/helm && rm -rf /tmp/linux-amd64\nRUN chmod +x /usr/local/bin/helm\n\nRUN helm plugin install https://github.com/hypnoglow/helm-s3.git --version ${HELM_S3_VERSION}\nRUN helm plugin install https://github.com/nouney/helm-gcs --version ${HELM_GCS_VERSION}\nRUN helm plugin install https://github.com/databus23/helm-diff --version ${HELM_DIFF_VERSION}\nRUN helm plugin install https://github.com/jkroepke/helm-secrets --version ${HELM_SECRETS_VERSION}\n\n### Go Builder & Tester ###\nFROM golang:${GO_VERSION}-alpine${ALPINE_VERSION} as builder\n\nRUN apk add --update --no-cache ca-certificates git openssh ruby bash make curl\nRUN gem install hiera-eyaml --no-doc\nRUN update-ca-certificates\n\nCOPY --from=helm-installer /usr/local/bin/kubectl /usr/local/bin/kubectl\nCOPY --from=helm-installer /usr/local/bin/helm /usr/local/bin/helm\nCOPY --from=helm-installer /root/.cache/helm/plugins/ /root/.cache/helm/plugins/\nCOPY --from=helm-installer /root/.local/share/helm/plugins/ /root/.local/share/helm/plugins/\n\nWORKDIR /go/src/github.com/Praqma/helmsman\n\nCOPY . .\nRUN make test \\\n    && LastTag=$(git describe --abbrev=0 --tags) \\\n    && TAG=$LastTag-$(date +\"%d%m%y\") \\\n    && LT_SHA=$(git rev-parse ${LastTag}^{}) \\\n    && LC_SHA=$(git rev-parse HEAD) \\\n    && if [ ${LT_SHA} != ${LC_SHA} ]; then TAG=latest-$(date +\"%d%m%y\"); fi \\\n    && make build\n\n### Final Image ###\nFROM alpine:${ALPINE_VERSION} as base\n\nRUN apk add --update --no-cache ca-certificates git openssh ruby curl bash gnupg\nRUN gem install hiera-eyaml --no-doc\nRUN update-ca-certificates\n\nCOPY --from=helm-installer /usr/local/bin/kubectl /usr/local/bin/kubectl\nCOPY --from=helm-installer /usr/local/bin/helm /usr/local/bin/helm\nCOPY --from=helm-installer /usr/local/bin/sops /usr/local/bin/sops\nCOPY --from=helm-installer /root/.cache/helm/plugins/ /root/.cache/helm/plugins/\nCOPY --from=helm-installer /root/.local/share/helm/plugins/ /root/.local/share/helm/plugins/\n\nCOPY --from=builder /go/src/github.com/Praqma/helmsman/helmsman /bin/helmsman\n"
}