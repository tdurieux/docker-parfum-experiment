{
  "startTime": 1674254634122,
  "endTime": 1674254635205,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 7,
        "columnEnd": 89
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 5,
        "columnEnd": 16
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 31
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Reference:\n# https://github.com/tdicola/caddy-docker/blob/master/Dockerfile.arm32v6\n# https://github.com/pengchujin/v2rayDocker/blob/master/Dockerfile\n# --------------\n\n# Build Caddy\nFROM {{ARCH.images.build_base}} as caddy_builder\n# Final stage\nFROM {{ARCH.images.base}}\n\n# Install V2ray\nENV V2RAY_VERSION {{IMAGE_VERSION}}\nENV V2RAY_LOG_DIR /var/log/v2ray\nENV V2RAY_CONFIG_DIR /etc/v2ray/\n\n{{#ARCH.is_amd}}\nENV V2RAY_PACKAGE_NAME v2ray-linux-64.zip\n{{/ARCH.is_amd}}\n{{#ARCH.is_arm}}\nENV V2RAY_PACKAGE_NAME v2ray-linux-arm.zip\n{{/ARCH.is_arm}}\n\nENV V2RAY_DOWNLOAD_URL https://github.com/v2ray/v2ray-core/releases/download/${V2RAY_VERSION}/${V2RAY_PACKAGE_NAME}\nENV TZ=\"Asia/Shanghai\"\n\nRUN apk upgrade --update \\\n    && apk add \\\n        bash \\\n        tzdata \\\n        curl \\\n    && mkdir -p \\ \n        ${V2RAY_LOG_DIR} \\\n        ${V2RAY_CONFIG_DIR} \\\n        /tmp/v2ray \\\n    && curl -f -L -H \"Cache-Control: no-cache\" -o /tmp/v2ray/v2ray.zip ${V2RAY_DOWNLOAD_URL} \\\n    && pwd \\\n    && unzip /tmp/v2ray/v2ray.zip -d /etc/v2ray/ \\\n    && ln -s /etc/v2ray/v2ray /usr/bin/v2ray \\\n    && ln -s /etc/v2ray/v2ctl /usr/bin/v2ctl \\\n    && mv /etc/v2ray/vpoint_vmess_freedom.json /etc/v2ray/config.json \\\n    && apk del curl \\\n    && ln -sf /usr/share/zoneinfo/${TZ} /etc/localtime \\\n    && echo ${TZ} > /etc/timezone \\\n    && rm -rf /tmp/v2ray /var/cache/apk/*\n\n# ADD entrypoint.sh /entrypoint.sh\nWORKDIR /srv\n\n# install node\nRUN apk add --no-cache util-linux\nRUN apk add --no-cache --update nodejs npm\nCOPY package.json /srv/package.json\nRUN npm install && npm cache clean --force;\nCOPY  v2ray.js /srv/v2ray.js\n\n\nRUN apk add --no-cache openssh-client git\n\n# install caddy\nCOPY --from=caddy_builder /usr/bin/caddy /usr/bin/caddy\n\n# validate caddy install\nRUN /usr/bin/caddy version\nRUN /usr/bin/caddy list-modules\n\nVOLUME /root/.caddy /srv\n\nCOPY Caddyfile /etc/Caddyfile\nCOPY index.html /srv/index.html\nCOPY package.json /etc/package.json\n\n# install process wrapper\nCOPY tmpl/ /etc/v2ray/tmpl/\nCOPY docker-entrypoint.sh /\n\n# validate v2ray install\nRUN /usr/bin/v2ray -version\n\nEXPOSE 443 80\nENTRYPOINT [\"/docker-entrypoint.sh\"]\n"
}