{
  "startTime": 1674219207158,
  "endTime": 1674219208343,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 90
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 109
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 105
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 94
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 105
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 4,
        "columnEnd": 106
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 2,
        "columnEnd": 85
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 2,
        "columnEnd": 51
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 2,
        "columnEnd": 40
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 2,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 7,
        "columnStart": 22,
        "columnEnd": 90
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 63,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 63,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 7,
        "columnStart": 22,
        "columnEnd": 90
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 63,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 41
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 63,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 41
      }
    }
  ],
  "repairedDockerfile": "# Redsocks docker image.\nFROM debian:buster-20200327\n\nENV DEBIAN_FRONTEND noninteractive\n\n# Install packages\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n      iptables curl perl ipset iproute2 dnsmasq make gcc libuv1-dev automake libtool unzip && rm -rf /var/lib/apt/lists/*;\n\n# https://forums.balena.io/t/unable-to-complete-the-sense-application-help-please/19698/6\nRUN c_rehash\n\n# Installation of chinadns-ng\nRUN curl -f -L https://github.com/zfl9/chinadns-ng/archive/master.zip -o /tmp/chinadns-ng.zip\nRUN unzip /tmp/chinadns-ng.zip -d /tmp/\nRUN mv /tmp/chinadns-ng-master /tmp/chinadns-ng\n\nWORKDIR /tmp/chinadns-ng\nRUN make && make install\n\n# Install libuv\nENV libuv_version=\"1.32.0\"\nRUN curl -f -L https://github.com/libuv/libuv/archive/v$libuv_version.tar.gz -o /tmp/libuv-$libuv_version.tar.gz && \\\n  tar xvf /tmp/libuv-$libuv_version.tar.gz -C /tmp/ && \\\n  mv /tmp/libuv-$libuv_version /tmp/libuv && rm /tmp/libuv-$libuv_version.tar.gz\n\nWORKDIR /tmp/libuv\nRUN ./autogen.sh && \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/opt/libuv --enable-shared=no --enable-static=yes CC=\"gcc -O3\" && \\\n  make && make install\n\n# Installation of ipt2socks\nENV ipt2socks_version=\"1.0.2\"\nRUN curl -f -L https://github.com/zfl9/ipt2socks/archive/v$ipt2socks_version.tar.gz -o /tmp/ipt2socks.tar.gz && \\\n  tar xvf /tmp/ipt2socks.tar.gz -C /tmp/ && \\\n  mv /tmp/ipt2socks-$ipt2socks_version /opt/ipt2socks && rm /tmp/ipt2socks.tar.gz\n\nWORKDIR /opt/ipt2socks\nRUN make INCLUDES=\"-I/opt/libuv/include\" LDFLAGS=\"-L/opt/libuv/lib\" && make install\n\n# Installation of dns2tcp\nENV dns2tcp_version=\"master\"\nRUN curl -f -L https://github.com/zfl9/dns2tcp/archive/${dns2tcp_version}.zip -o /tmp/dns2tcp.zip && \\\n  unzip /tmp/dns2tcp.zip -d /tmp/ && \\\n  mv /tmp/dns2tcp-${dns2tcp_version} /tmp/dns2tcp\n\nWORKDIR /tmp/dns2tcp\nRUN make && make install\n\n# Build ss-tproxy\nENV sstproxy_version=\"4.6\"\nRUN curl -f -L https://github.com/zfl9/ss-tproxy/archive/v${sstproxy_version}.tar.gz -o /tmp/sstproxy.tar.gz && \\\n  tar xvf /tmp/sstproxy.tar.gz -C /tmp/ && \\\n  mv /tmp/ss-tproxy-${sstproxy_version} /tmp/ss-tproxy && rm /tmp/sstproxy.tar.gz\n\nWORKDIR /tmp/ss-tproxy\nRUN chmod +x ss-tproxy && \\\n  cp -af ss-tproxy /usr/local/bin && \\\n  mkdir -p /etc/ss-tproxy && \\\n  cp -af ss-tproxy.conf gfwlist* chnroute* ignlist* /etc/ss-tproxy && \\\n  cp -af ss-tproxy.service /etc/systemd/system\n\n# Installation of redsocks2\nRUN apt-get install --no-install-recommends -y \\\n      git libevent-dev openssl libssl-dev && rm -rf /var/lib/apt/lists/*;\n\nENV redsocks2_version=\"master\"\nRUN curl -f -L https://github.com/semigodking/redsocks/archive/${redsocks2_version}.zip -o /tmp/redsocks2.zip && \\\n  unzip /tmp/redsocks2.zip -d /tmp/ && \\\n  mv /tmp/redsocks-${redsocks2_version} /tmp/redsocks2\n\nWORKDIR /tmp/redsocks2\nRUN make DISABLE_SHADOWSOCKS=true && \\\n  mv redsocks2 /usr/local/bin\n\n# Development\n# RUN apt-get install -y \\\n      # python netcat dnsutils procps\n\n# https://github.com/moby/moby/issues/38099\nRUN update-alternatives --set iptables /usr/sbin/iptables-legacy\n\nCOPY tmpl/ /etc/ss-tproxy/tmpl/\nCOPY docker-entrypoint.sh /\nCOPY README.md /\n\nENTRYPOINT [\"/docker-entrypoint.sh\"]\n"
}