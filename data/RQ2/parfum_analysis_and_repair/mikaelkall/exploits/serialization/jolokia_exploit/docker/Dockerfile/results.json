{
  "startTime": 1674216537137,
  "endTime": 1674216538355,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 51,
        "lineEnd": 56,
        "columnStart": 2,
        "columnEnd": 105
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 63,
        "lineEnd": 69,
        "columnStart": 2,
        "columnEnd": 106
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 71,
        "lineEnd": 77,
        "columnStart": 2,
        "columnEnd": 130
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:latest\n\nEXPOSE 8080 22222\n\nARG BUILD_DATE\nARG BUILD_VERSION\nARG TOMCAT_VERSION\nARG JOLOKIA_VERSION\nARG HAWTIO_VERSION\n\n\nENV \\\n  TERM=xterm \\\n  APACHE_MIRROR=archive.apache.org \\\n  CATALINA_HOME=/opt/tomcat \\\n  OPENJDK_VERSION=\"8.151.12\" \\\n  JAVA_HOME=/usr/lib/jvm/default-jvm \\\n  PATH=${PATH}:/opt/jdk/bin:${CATALINA_HOME}/bin \\\n  LANG=C.UTF-8\n\nLABEL \\\n  version=${BUILD_VERSION} \\\n  maintainer=\"Bodo Schulz <bodo@boone-schulz.de>\" \\\n  org.label-schema.build-date=${BUILD_DATE} \\\n  org.label-schema.name=\"Jolokia Docker Image\" \\\n  org.label-schema.description=\"Inofficial Jolokia Docker Image\" \\\n  org.label-schema.url=\"https://jolokia.org\" \\\n  org.label-schema.vcs-url=\"https://github.com/bodsch/docker-jolokia\" \\\n  org.label-schema.vendor=\"Bodo Schulz\" \\\n  org.label-schema.version=$JOLOKIA_VERSION \\\n  org.label-schema.schema-version=\"1.0\" \\\n  com.microscaling.docker.dockerfile=\"/Dockerfile\" \\\n  com.microscaling.license=\"GNU General Public License v3.0\"\n\n# ---------------------------------------------------------------------------------------------------------------------\n\nRUN \\\n  apk update --quiet --no-cache && \\\n  apk upgrade --quiet --no-cache && \\\n  apk add --quiet --no-cache \\\n    curl \\\n    openjdk8-jre-base \\\n    python2 \\\n    bash \\\n    tomcat-native && \\\n  echo \"export LANG=${LANG}\" > /etc/profile.d/locale.sh && \\\n  echo 'hosts: files mdns4_minimal [NOTFOUND=return] dns mdns4' >> /etc/nsswitch.conf && \\\n  sed -i 's,#networkaddress.cache.ttl=-1,networkaddress.cache.ttl=30,' ${JAVA_HOME}/jre/lib/security/java.security && \\\n  mkdir /opt && \\\n  echo \"download tomcat version $TOMCAT_VERSION (https://$APACHE_MIRROR/dist/tomcat/tomcat-9)\" && \\\n  curl -f \\\n    --silent \\\n    --location \\\n    --retry 3 \\\n    --cacert /etc/ssl/certs/ca-certificates.crt \\\n    https://$APACHE_MIRROR/dist/tomcat/tomcat-9/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz \\\n    | gunzip \\\n    | tar x -C /opt/ && \\\n  ln -s /opt/apache-tomcat-$TOMCAT_VERSION ${CATALINA_HOME} && \\\n  ln -s ${CATALINA_HOME}/logs /var/log/jolokia && \\\n  rm -rf ${CATALINA_HOME}/webapps/* && \\\n  echo \"download jolokia version $JOLOKIA_VERSION (https://repo1.maven.org/maven2/org/jolokia/jolokia-war)\" && \\\n  curl -f \\\n    --silent \\\n    --location \\\n    --retry 3 \\\n    --cacert /etc/ssl/certs/ca-certificates.crt \\\n    --output ${CATALINA_HOME}/webapps/jolokia.war \\\n  https://repo1.maven.org/maven2/org/jolokia/jolokia-war/$JOLOKIA_VERSION/jolokia-war-$JOLOKIA_VERSION.war && \\\n  echo \"download hawtio version $HAWTIO_VERSION (https://github.com/hawtio/hawtio/tags)\" && \\\n  curl -f \\\n    --silent \\\n    --location \\\n    --retry 3 \\\n    --cacert /etc/ssl/certs/ca-certificates.crt \\\n    --output ${CATALINA_HOME}/webapps/hawtio.war \\\n    https://oss.sonatype.org/content/repositories/public/io/hawt/hawtio-default/$HAWTIO_VERSION/hawtio-default-$HAWTIO_VERSION.war && \\\n  cd ${CATALINA_HOME}/webapps/ && \\\n  mkdir \\\n    jolokia hawtio && \\\n  unzip jolokia.war -d jolokia > /dev/null && \\\n  unzip hawtio.war -d hawtio > /dev/null && \\\n  rm -f *.war && \\\n  rm -f ${CATALINA_HOME}/LICENSE && \\\n  rm -f ${CATALINA_HOME}/NOTICE && \\\n  rm -f ${CATALINA_HOME}/RELEASE-NOTES && \\\n  rm -f ${CATALINA_HOME}/RUNNING.txt && \\\n  rm -f ${CATALINA_HOME}/bin/*.bat && \\\n  rm -rf \\\n    /tmp/* \\\n    /var/cache/apk/*\n\nWORKDIR ${CATALINA_HOME}/webapps/\n\nCOPY rootfs/ /\n\nHEALTHCHECK \\\n  --interval=5s \\\n  --timeout=2s \\\n  --retries=12 \\\n  CMD curl --silent --fail http://localhost:8080/jolokia || exit 1\n\nCMD [ \"/init/run.sh\" ]\n\n# ---------------------------------------------------------------------------------------------------------------------\n"
}