{
  "startTime": 1674249906443,
  "endTime": 1674249907491,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 124
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 19,
        "columnEnd": 136
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 30
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM golang:1.15-alpine3.12\nENV PROTO_VERSION 3.11.4\nENV GORELEASER_VERSION \"v0.149.0\"\n\nRUN apk add --update --no-cache \\\n  nodejs \\\n  yarn \\\n  netcat-openbsd \\\n  git \\\n  openssh-client \\\n  openssl \\\n  make \\\n  bash \\\n  gcc \\\n  g++ \\\n  jq \\\n  curl \\\n  docker \\\n  libffi-dev \\\n  openssl-dev \\\n  python-dev \\\n  py-pip\n\nRUN pip install --no-cache-dir docker-compose\nRUN yarn install -g yarn-cli-login && yarn cache clean;\n\nRUN curl -f -OL https://github.com/google/protobuf/releases/download/v${PROTO_VERSION}/protoc-${PROTO_VERSION}-linux-x86_64.zip\nRUN mkdir -p protobuf\nRUN unzip protoc-${PROTO_VERSION}-linux-x86_64.zip -d protobuf\nRUN cp protobuf/bin/protoc /usr/bin/protoc\nRUN rm -rf protobuf protoc-*\n\nRUN go get -u golang.org/x/tools/cmd/goimports\nRUN go get -u github.com/golang/protobuf/protoc-gen-go\nRUN go get -u golang.org/x/lint/golint\nENV GO111MODULE=on\n\nRUN cd /usr/bin && curl -f -L https://github.com/goreleaser/goreleaser/releases/download/$GORELEASER_VERSION/goreleaser_Linux_x86_64.tar.gz | tar xz goreleaser\n\n# install gcloud auth binaries\nRUN curl -f https://sdk.cloud.google.com | bash\nRUN ls /root/google-cloud-sdk/bin/\nENV PATH /root/google-cloud-sdk/bin/:$PATH\n\n"
}