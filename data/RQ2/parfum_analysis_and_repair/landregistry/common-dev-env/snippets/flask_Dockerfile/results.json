{
  "startTime": 1674218520011,
  "endTime": 1674218520859,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 2,
        "columnEnd": 42
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 38
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Set the base image to the base image\nFROM hmlandregistry/dev_base_python_flask:4\n\n# Uncomment if app will be using a database\n# ---- Database stuff start\nRUN yum install -y -q postgresql-devel && rm -rf /var/cache/yum\nENV SQL_HOST postgres\n# This must match the database created in postgres-init-fragment:\nENV SQL_DATABASE gadgetdb\n# This is the root user specified in the postgres Dockerfile:\nENV ALEMBIC_SQL_USERNAME root\n# (This will be temporarily overidden to yes when the alembic database upgrade is run)\nENV SQL_USE_ALEMBIC_USER no\n# The following entries must match the user created in the fragments/postgres-init-fragment.sql:\nENV APP_SQL_USERNAME gadgetuser\n# (This will be temporarily overidden to be the root password when the alembic database upgrade is run)\nENV SQL_PASSWORD gadgetpassword\n# ---- Database stuff end\n\n# ----\n# Put your app-specific stuff here\n# Needed for health route if using HMLR Flask skeleton\nENV APP_NAME=\"my-app-api\" \\\n MAX_HEALTH_CASCADE=\"6\" \\\n LOG_LEVEL=\"DEBUG\"\n\n# ----\n\n# The CMD to run the app is inherited from dev_base_python_flask\n# (if following HMLR Flask skeleton) otherwise add your own here\n\n# Get the python environment ready\n# Have this at the end so if the files change, all the other steps\n# don't need to be rerun. Same reason why _test is first.\nADD requirements_test.txt requirements_test.txt\nADD requirements.txt requirements.txt\nRUN pip3 install --no-cache-dir -q -r requirements.txt && \\\n  pip3 install --no-cache-dir -q -r requirements_test.txt\n"
}