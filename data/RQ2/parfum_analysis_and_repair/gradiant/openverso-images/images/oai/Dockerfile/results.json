{
  "startTime": 1674251590063,
  "endTime": 1674251590822,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 22,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 71,
        "lineEnd": 89,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 93,
        "lineEnd": 97,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 22,
        "columnEnd": 44
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 34
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 58
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:focal AS build\n\nARG version=2021.w32\n\nENV VERSION=$version\n\nARG NEEDED_GIT_PROXY\nENV DEBIAN_FRONTEND=noninteractive\nENV TZ=Europe\nRUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone\n\n#install developers pkg/repo\nRUN apt-get update && \\\n    DEBIAN_FRONTEND=noninteractive apt-get upgrade --yes && \\\n    DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install --yes \\\n\n       build-essential \\\n       psmisc \\\n       git \\\n       xxd \\\n\n       unzip && rm -rf /var/lib/apt/lists/*;\n\n# In some network environments, GIT proxy is required\nRUN /bin/bash -c \"if [[ -v NEEDED_GIT_PROXY ]]; then git config --global http.proxy $NEEDED_GIT_PROXY; fi\"\n\nRUN apt-get update && apt-get install --no-install-recommends -y git && rm -rf /var/lib/apt/lists/*;\n#create the WORKDIR\nWORKDIR /oai-ran\nRUN git clone https://gitlab.eurecom.fr/oai/openairinterface5g.git .\nRUN git checkout $VERSION\n\n\n#run build_oai -I to get the builder image\nRUN /bin/sh oaienv && \\ \n    cd cmake_targets && \\\n    mkdir -p log && \\\n    ./build_oai -I -w USRP\n\n#run build_oai to build the target image\nRUN /bin/sh oaienv && \\ \n    cd cmake_targets && \\\n    mkdir -p log && \\\n    ./build_oai --eNB --ninja -w USRP --verbose-ci\n\n\n\nRUN apt-get install --no-install-recommends -y python3-pip && \\\n    pip3 install --no-cache-dir --ignore-installed pyyaml && \\\n    python3 ./docker/scripts/generateTemplate.py ./docker/scripts/enb_parameters.yaml && rm -rf /var/lib/apt/lists/*;\n#run build_oai to build the target image\nRUN /bin/sh oaienv && \\ \n    cd cmake_targets && \\\n    ./build_oai --gNB --ninja -w USRP --verbose-ci\nRUN python3 ./docker/scripts/generateTemplate.py ./docker/scripts/gnb_parameters.yaml\n\n#run build_oai to build the target image\nRUN /bin/sh oaienv && \\ \n    cd cmake_targets && \\\n    mkdir -p log && \\\n    ./build_oai --nrUE --ninja -w USRP --verbose-ci\nRUN cp ci-scripts/conf_files/nr-ue-sim.conf docker/etc\n\n#start from scratch for target executable\nFROM ubuntu:focal as oai\nENV DEBIAN_FRONTEND=noninteractive\nENV TZ=Europe\nRUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone\n\nRUN apt-get update && \\\n    DEBIAN_FRONTEND=noninteractive apt-get upgrade --yes && \\\n    DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install --yes \\\n        libsctp1 \\\n        procps \\\n        tzdata \\\n        libnettle7 \\\n        liblapacke \\\n        libblas3 \\\n        libatlas3-base \\\n        libconfig9 \\\n        libprotobuf-c1 \\\n        openssl \\\n        net-tools \\\n        dnsutils \\\n        iputils-ping \\\n        iproute2 \\\n        iperf \\\n        libyaml-0-2 \\\n        libsctp1 \\\n        software-properties-common && \\\n    # Install UHD driver from ettus\n    add-apt-repository ppa:ettusresearch/uhd --yes && \\\n    apt-get update && \\\n    DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install --yes \\\n        python \\\n        libusb-1.0-0 \\\n        libuhd4.2.0 \\\n        uhd-host && \\\n    rm -rf /var/lib/apt/lists/*\n\nCOPY --from=build /oai-ran/targets/bin/* /opt/oai/bin/\nCOPY --from=build /oai-ran/docker/scripts/*.sh /\nCOPY --from=build /oai-ran/targets/bin/*.so.Rel15 /usr/local/lib/\nCOPY --from=build /oai-ran/targets/bin/*.so /usr/local/lib/\nCOPY --from=build /oai-ran/cmake_targets/ran_build/build/*.so /usr/local/lib/\n\nRUN /bin/bash -c \"ln -sf /usr/local/lib/liboai_eth_transpro.so.Rel15 /usr/local/lib/liboai_transpro.so\"\nRUN /bin/bash -c \"ln -sf /usr/local/lib/liboai_usrpdevif.so.Rel15 /usr/local/lib/liboai_device.so\"\nRUN /bin/bash -c \"ln -sf /usr/local/lib/librfsimulator.so.Rel15 /usr/local/lib/librfsimulator.so\"\n\nRUN ldconfig\n\n# Copy the relevant configuration files\nCOPY --from=build /oai-ran/docker/etc /opt/oai/etc\n\nWORKDIR /opt/oai\n\n#This is a patch to support IP extraction from interface names and host names\nCOPY entrypoint.sh /\n\nENTRYPOINT [\"/entrypoint.sh\"]\n\n"
}