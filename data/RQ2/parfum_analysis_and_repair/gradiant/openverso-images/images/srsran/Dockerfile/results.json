{
  "startTime": 1674252367030,
  "endTime": 1674252368210,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 80,
        "lineEnd": 87,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 97,
        "lineEnd": 98,
        "columnStart": 4,
        "columnEnd": 72
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:20.04 as builder\n\nARG version\nENV VERSION=$version\n\nLABEL org.opencontainers.image.authors=\"Carlos Giraldo <cgiraldo@gradiant.org>\" \\\n      org.opencontainers.image.vendor=\"Gradiant\" \\\n      org.opencontainers.image.licenses=\"Apache-2.0\" \\\n      org.opencontainers.image.version=\"$version\"\n\nRUN apt-get update && \\\n    DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y \\\n    git \\\n    build-essential \\\n    cmake \\\n    libfftw3-dev \\\n    libmbedtls-dev \\\n    libboost-program-options-dev \\\n    libconfig++-dev \\\n    libsctp-dev \\\n    libuhd-dev \\\n    libzmq3-dev && rm -rf /var/lib/apt/lists/*;\n\nRUN\tcd /opt && git clone https://github.com/srsran/srsRAN.git && \\\n\tcd srsRAN && git checkout release_$VERSION && \\\n    mkdir build && \\\n    cd build && \\\n    cmake -DCMAKE_INSTALL_PREFIX=/opt/srsRAN/target ../ && \\\n    make\n\nRUN cd /opt/srsRAN/build && make install\n\n# Move configuration\nRUN mkdir -p /opt/srsRAN/target/etc/srsran && \\\n    cd /opt/srsRAN/target/share/srsran/ && find  -name '*.example' | while read f; do mv \"$f\" \"/opt/srsRAN/target/etc/srsran/${f%.example}\"; done\n\n# Embed env variables in enb.conf files\nRUN cd /opt/srsRAN/target/etc/srsran && \\\n    sed -i 's/^enb_id =.*/enb_id = ${ENB_ID}/' enb.conf && \\\n    sed -i 's/^mcc =.*/mcc = ${MCC}/' enb.conf && \\\n    sed -i 's/^mnc =.*/mnc = ${MNC}/' enb.conf && \\\n    sed -i 's/^mme_addr =.*/mme_addr = ${MME_ADDR}/' enb.conf && \\\n    sed -i 's/^gtp_bind_addr =.*/gtp_bind_addr = ${GTP_BIND_ADDR}/' enb.conf && \\\n    sed -i 's/^s1c_bind_addr =.*/s1c_bind_addr = ${S1C_BIND_ADDR}/' enb.conf && \\\n    sed -i 's/#device_name = zmq/device_name = zmq\\ndevice_args = tx_port=tcp:\\/\\/*:2000,rx_port=tcp:\\/\\/${UE_ADDRESS}:2001,id=enb,base_srate=23.04e6/' enb.conf\n\n# Embed env variables in rr.conf files\nRUN cd /opt/srsRAN/target/etc/srsran && \\\n    sed -i 's/tac =.*/tac = ${TAC}/' rr.conf\n\n# Embed env variables in ue.conf files\nRUN cd /opt/srsRAN/target/etc/srsran && \\\n    sed -E -i 's/^algo +=.*/algo = ${ALGO}/' ue.conf && \\\n    sed -E -i 's/^#?opc +=.*/opc = ${OPC}/' ue.conf && \\\n    sed -E -i 's/^k +=.*/k = ${KEY}/' ue.conf && \\\n    sed -i 's/^imsi =.*/imsi = ${MCC}${MNC}${MSISDN}/' ue.conf && \\\n    sed -i 's/#device_name = zmq/device_name = zmq\\ndevice_args = tx_port=tcp:\\/\\/*:2001,rx_port=tcp:\\/\\/${ENB_ADDRESS}:2000,id=ue,base_srate=23.04e6/' ue.conf\n\n# Embed env variables in epc.conf files\nRUN cd /opt/srsRAN/target/etc/srsran && \\\n    sed -i 's/^tac =.*/tac = ${TAC}/' epc.conf && \\\n    sed -i 's/^mcc =.*/mcc = ${MCC}/' epc.conf && \\\n    sed -i 's/^mnc =.*/mnc = ${MNC}/' epc.conf && \\\n    sed -i 's/^mme_bind_addr =.*/mme_bind_addr = ${MME_BIND_ADDR}/' epc.conf && \\\n    sed -i 's/^gtpu_bind_addr =.*/gtpu_bind_addr = ${MME_BIND_ADDR}/' epc.conf && \\\n    sed -i 's/^sgi_if_name =.*/sgi_if_name = ${IPV4_TUN_ADDR}/' epc.conf\n\n\nFROM ubuntu:20.04\n\nARG version\nENV VERSION=$version\n\nLABEL org.opencontainers.image.authors=\"Carlos Giraldo <cgiraldo@gradiant.org>\" \\\n      org.opencontainers.image.vendor=\"Gradiant\" \\\n      org.opencontainers.image.licenses=\"Apache-2.0\" \\\n      org.opencontainers.image.version=\"$version\"\n\n# libraries\nRUN apt-get update && \\\n    DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y \\\n     libboost-program-options1.71.0 \\\n        libconfig++9v5 \\\n        libfftw3-single3 \\\n        libmbedtls12 \\\n        libsctp1 \\\n        libuhd3.15.0 \\\n        libzmq5 && \\\n    rm -rf /var/lib/apt/lists/*\n\nCOPY --from=builder /opt/srsRAN/target/bin/* /usr/bin/\nCOPY --from=builder /opt/srsRAN/target/etc/srsran/* /etc/srsran/\nCOPY --from=builder /opt/srsRAN/target/include/ /usr/include/\nCOPY --from=builder /opt/srsRAN/target/lib/ /usr/lib/\n\n#Tools\nRUN apt-get update && \\\n    DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y \\\n    gettext-base iproute2 dnsutils curl iptables iputils-ping traceroute && \\\n    rm -rf /var/lib/apt/lists/*\n\nENV ENB_ID=0x19B \\\n    MCC=001 \\\n    MNC=01 \\\n    TAC=0001 \\\n    GTP_BIND_INTERFACE=eth0 \\\n    S1C_BIND_INTERFACE=eth0 \\\n    MME_BIND_INTERFACE=eth0 \\\n    LOG_LEVEL=info \\\n    UE_HOSTNAME=ue \\\n    ENB_HOSTNAME=enodeb \\\n    MSISDN=0000000001 \\\n    ALGO=mil \\\n    KEY=465B5CE8B199B49FAA5F0A2EE238A6BC \\\n    OPC=E8ED289DEBA952E4283B54E88E6183CA\n\nENV IPV4_TUN_SUBNET=\"10.45.0.0/16\" \\\n    IPV4_TUN_ADDR=\"10.45.0.1\" \\\n    ENABLE_NAT=true\n\nCOPY entrypoint.sh /\n\nENTRYPOINT [\"/entrypoint.sh\"]\n"
}