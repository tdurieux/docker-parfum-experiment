{
  "startTime": 1674254904451,
  "endTime": 1674254905272,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 22,
        "columnEnd": 55
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 22,
        "columnEnd": 55
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 53
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:18.04 as builder\n\n# Install any needed packages\nRUN apt-get update && apt-get install --no-install-recommends -y curl git gnupg && rm -rf /var/lib/apt/lists/*;\n\n# install nodejs\nRUN curl -f -sL https://deb.nodesource.com/setup_10.x | bash -\nRUN apt-get install --no-install-recommends -y nodejs && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /apps\nCOPY . .\n\nRUN npm install yarn -g && npm cache clean --force;\nRUN yarn && NODE_ENV=production yarn build:www\nCMD [\"ls\", \"-al\", \"build\"]\n\n# ===========================================================\nFROM nginx:stable-alpine\n\n# The following is mainly for doc purpose to show which ENV is supported\nENV WS_URL=\n\nWORKDIR /usr/share/nginx/html\n\nCOPY env.sh .\n\nRUN apk add --no-cache bash; chmod +x env.sh\n\nCOPY docker/nginx.conf /etc/nginx/nginx.conf\nCOPY --from=builder /apps/packages/apps/build /usr/share/nginx/html\n\nEXPOSE 80\n\nCMD [\"/bin/bash\", \"-c\", \"/usr/share/nginx/html/env.sh && nginx -g \\\"daemon off;\\\"\"]\n"
}