{
  "startTime": 1674252141503,
  "endTime": 1674252142271,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 1,
        "columnEnd": 101
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 1,
        "columnEnd": 101
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# ===== BUILD ======\n\nFROM phusion/baseimage:0.11 as builder\n\nENV DEBIAN_FRONTEND=noninteractive\nENV RUST_TOOLCHAIN=nightly-2020-09-30\nENV PATH=\"$PATH:/root/.cargo/bin\"\nARG PROFILE=release\n\nRUN apt-get update && \\\n\tapt-get dist-upgrade -y -o Dpkg::Options::=\"--force-confold\" && \\\n\tapt-get install --no-install-recommends -y cmake pkg-config libssl-dev git clang llvm build-essential libclang-dev libc6-dev && rm -rf /var/lib/apt/lists/*;\n\n\nRUN curl https://sh.rustup.rs -sSf | sh -s -- -y\n# && \\\nRUN\trustup uninstall stable && \\\n    rustup install 1.46.0 && \\\n    rustup default 1.46.0-x86_64-unknown-linux-gnu && \\\n\trustup toolchain install $RUST_TOOLCHAIN && \\\n\trustup target add wasm32-unknown-unknown --toolchain $RUST_TOOLCHAIN && \\\n\trustup default $RUST_TOOLCHAIN\n\n# Get project and run it\n#RUN git clone https://github.com/uni-arts-chain/uni-arts-network.git /uniarts_chain\n\nRUN mkdir uniarts_chain\nWORKDIR /uniarts_chain\nCOPY bin  ./bin/\nCOPY pallets ./pallets/\nCOPY runtime ./runtime/\nCOPY scripts ./scripts/\nCOPY primitives ./primitives/\nCOPY README.md README.md\nCOPY Cargo* ./\n\nRUN\tcargo +nightly-2020-09-30 build \"--$PROFILE\"\n\n\n# ===== RUN ======\n\nFROM phusion/baseimage:0.11\nARG PROFILE=release\n\nCOPY --from=builder /uniarts_chain/target/$PROFILE/uart /usr/local/bin\n\nEXPOSE 30333 9933 9944\n\nVOLUME [\"/chain-data\"]\nWORKDIR /chain-data\n\n# Copy and run start script\nCOPY docker-entrypoint.sh /usr/local/bin/\nRUN chmod +x /usr/local/bin/docker-entrypoint.sh && ln -s /usr/local/bin/docker-entrypoint.sh /\nENTRYPOINT [\"docker-entrypoint.sh\"]\nCMD [\"uart\"]\n"
}