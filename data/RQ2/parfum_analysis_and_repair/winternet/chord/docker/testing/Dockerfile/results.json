{
  "startTime": 1674251803955,
  "endTime": 1674251804942,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 20,
        "columnStart": 7,
        "columnEnd": 22
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 20,
        "columnStart": 7,
        "columnEnd": 22
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:18.04 AS build\n\n#\n# install dependencies\n#\nRUN apt-get update \\\n    && apt-get -y --no-install-recommends install build-essential \\\n            git \\\n            gdb \\\n            cmake \\\n            autoconf \\\n            libtool \\\n            libboost-system-dev \\\n            libboost-serialization-dev \\\n            libleveldb-dev \\\n            librocksdb-dev \\\n            libyaml-cpp-dev \\\n            libgrpc++-dev \\\n            libboost-thread-dev \\\n            libboost-program-options-dev \\\n            libssl-dev && rm -rf /var/lib/apt/lists/*;\n\n#\n# install grpc\n#\nRUN git clone -b v1.20.1 https://github.com/grpc/grpc /opt/grpc && cd /opt/grpc \\\n    && git submodule update --init \\\n    && make -j$(nproc) CFLAGS='-Wno-error -Wno-expansion-to-defined' && make install CFLAGS='-Wno-error -Wno-expansion-to-defined'\n\n#\n# install protobuf\n#\nRUN git clone -b v3.6.1 https://github.com/google/protobuf.git /opt/protobuf && cd /opt/protobuf/cmake \\\n    && mkdir build && cd build \\\n    && cmake .. -DCMAKE_BUILD_TYPE=Release \\\n                -Dprotobuf_BUILD_EXAMPLES=OFF \\\n                -Dprotobuf_BUILD_SHARED_LIBS=ON \\\n                -Dprotobuf_BUILD_TESTS=OFF \\\n                -Dprotobuf_MSVC_STATIC_RUNTIME=OFF \\\n                -Dprotobuf_WITH_ZLIB=ON \\\n                -Dprotobuf_BUILD_PROTOC_BINARIES=ON \\\n    && make -j$(nproc) && make install \\\n    && ldconfig\n\n#\n# build project\n#\nRUN git clone https://github.com/winternet/chord.git /opt/chord \\\n    && cd /opt/chord && mkdir build && cd build \\\n    && cmake .. \\\n        -DBUILD_GMOCK=OFF \\\n        -DBUILD_TESTING=OFF \\\n        -DINSTALL_GTEST=OFF \\\n        -Dchord_BUILD_TESTS=OFF \\\n        -DCMAKE_BUILD_TYPE=Release \\\n    && cmake --build . -- -j$(nproc)\n\n#\n# create chroot env\n#\nRUN mkdir -p chroot/bin \\\n    && cp ./chord ./chroot/bin \\\n    && ldd ./chord | grep -oP '/[^ ]*' | xargs -I '{}' cp --parents -v '{}' ./chroot/\n\n#\n# node image\n#\nFROM scratch\n\nCOPY --from=build /opt/chord/build/chroot /\n\nEXPOSE 50050\n\nENTRYPOINT [\"/bin/chord\"]\nCMD [\"-b\"]\n"
}