{
  "startTime": 1674216200219,
  "endTime": 1674216201002,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 80
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 319
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:bullseye-slim\n\nENV NGINX_VERSION 1.20.2\n\n# Install fpm\nRUN apt update && \\\n    apt install -y --no-install-recommends ruby ruby-dev && \\\n    gem install fpm && rm -rf /var/lib/apt/lists/*;\n\n# Copy dependencies sources folder\nCOPY deps /tmp/bunkerweb/deps\n\n# Nginx\nRUN apt update && \\\n    apt-get install --no-install-recommends gnupg2 ca-certificates -y && \\\n    echo \"deb https://nginx.org/packages/debian/ bullseye nginx\" > /etc/apt/sources.list.d/nginx.list && \\\n    echo \"deb-src https://nginx.org/packages/debian/ bullseye nginx\" >> /etc/apt/sources.list.d/nginx.list && \\\n    apt-key adv --keyserver keyserver.ubuntu.com --recv-keys ABF5BD827BD9BF62 && \\\n    apt-get update && \\\n    apt-get install -y --no-install-recommends nginx=${NGINX_VERSION}-1~bullseye && rm -rf /var/lib/apt/lists/*;\n\n# Compile and install dependencies\nRUN apt update && \\\n    apt install --no-install-recommends bash python3-pip libssl-dev git libpcre++-dev zlib1g-dev libxml2-dev libyajl-dev pkgconf libcurl4-openssl-dev libgeoip-dev liblmdb-dev apt-utils bash build-essential autoconf libtool automake g++ gcc libxml2-dev make musl-dev gnupg patch libreadline-dev libpcre3-dev libgd-dev -y && \\\n    mkdir -p /opt/bunkerweb/deps && \\\n    chmod +x /tmp/bunkerweb/deps/install.sh && \\\n    bash /tmp/bunkerweb/deps/install.sh && \\\n    mkdir /opt/bunkerweb/deps/python && \\\n    pip install --no-cache-dir --require-hashes --target /opt/bunkerweb/deps/python -r /tmp/bunkerweb/deps/requirements.txt && rm -rf /var/lib/apt/lists/*;\n\n# Copy BW files\n# can't exclude deps from . so we are copying everything by hand\nCOPY api /opt/bunkerweb/api\nCOPY cli /opt/bunkerweb/cli\nCOPY confs /opt/bunkerweb/confs\nCOPY core /opt/bunkerweb/core\nCOPY gen /opt/bunkerweb/gen\nCOPY helpers /opt/bunkerweb/helpers\nCOPY job /opt/bunkerweb/job\nCOPY lua /opt/bunkerweb/lua\nCOPY misc /opt/bunkerweb/misc\nCOPY utils /opt/bunkerweb/utils\nCOPY ui /opt/bunkerweb/ui\nCOPY settings.json /opt/bunkerweb/settings.json\nCOPY VERSION /opt/bunkerweb/VERSION\n\n# Setup BW\nRUN cp /opt/bunkerweb/helpers/bwcli /usr/local/bin && \\\n    chmod 755 /usr/local/bin/bwcli && \\\n    mkdir /opt/bunkerweb/configs && \\\n    mkdir /opt/bunkerweb/cache && \\\n    mkdir /opt/bunkerweb/plugins && \\\n    mkdir /opt/bunkerweb/tmp && \\\n    find /opt/bunkerweb -path /opt/bunkerweb/deps -prune -o -type f -exec chmod 0740 {} \\; && \\\n    find /opt/bunkerweb -path /opt/bunkerweb/deps -prune -o -type d -exec chmod 0750 {} \\; && \\\n    chmod 770 /opt/bunkerweb/cache /opt/bunkerweb/tmp && \\\n    chmod 750 /opt/bunkerweb/gen/main.py /opt/bunkerweb/job/main.py /opt/bunkerweb/cli/main.py /opt/bunkerweb/helpers/*.sh /opt/bunkerweb/ui/main.py && \\\n    find /opt/bunkerweb/core/*/jobs/* -type f -exec chmod 750 {} \\; && \\\n    pip install --no-cache-dir --target /opt/bunkerweb/deps/python -r /opt/bunkerweb/ui/requirements.txt\n\n# Copy Linux files\nCOPY linux/variables.env /opt/bunkerweb/variables.env\nCOPY linux/bunkerweb-ui.env /opt/bunkerweb/bunkerweb-ui.env\nCOPY linux/scripts /opt/bunkerweb/scripts\nCOPY linux/fpm.sh /opt/fpm.sh\nRUN chmod +x /opt/bunkerweb/scripts/*.sh /opt/fpm.sh\nCOPY linux/fpm-debian /opt/.fpm\nCOPY linux/bunkerweb.service /opt/bunkerweb.service\nCOPY linux/bunkerweb-ui.service /opt/bunkerweb-ui.service\n\n\n# Generate DEB at startup\nVOLUME /data\nWORKDIR /opt\nENTRYPOINT [\"/opt/fpm.sh\", \"deb\"]\n"
}