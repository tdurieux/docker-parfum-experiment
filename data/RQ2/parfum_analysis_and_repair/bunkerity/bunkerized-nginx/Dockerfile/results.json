{
  "startTime": 1674250350541,
  "endTime": 1674250351775,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 1,
        "columnEnd": 18
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 4,
        "columnEnd": 33
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nginx:1.20.2-alpine AS builder\n\n# Copy dependencies sources folder\nCOPY deps /tmp/bunkerweb/deps\n\n# Compile and install dependencies\nRUN apk add --no-cache --virtual build bash build autoconf libtool automake geoip-dev g++ gcc curl-dev libxml2-dev pcre-dev make linux-headers musl-dev gd-dev gnupg brotli-dev openssl-dev patch readline-dev && \\\n\tmkdir -p /opt/bunkerweb/deps && \\\n\tchmod +x /tmp/bunkerweb/deps/install.sh && \\\n\tbash /tmp/bunkerweb/deps/install.sh && \\\n\tapk del build\n\n# Copy python requirements\nCOPY deps/requirements.txt /opt/bunkerweb/deps/requirements.txt\n\n# Install python requirements\nRUN apk add --no-cache --virtual build py3-pip gcc python3-dev musl-dev libffi-dev openssl-dev cargo && \\\n\tpip install --no-cache-dir wheel && \\\n\tmkdir /opt/bunkerweb/deps/python && \\\n\tpip install --no-cache-dir --require-hashes --target /opt/bunkerweb/deps/python -r /opt/bunkerweb/deps/requirements.txt && \\\n\tapk del build\n\nFROM nginx:1.20.2-alpine\n\n# Copy dependencies\nCOPY --from=builder /opt/bunkerweb /opt/bunkerweb\n\n# Copy files\n# can't exclude deps from . so we are copying everything by hand\nCOPY api /opt/bunkerweb/api\nCOPY cli /opt/bunkerweb/cli\nCOPY confs /opt/bunkerweb/confs\nCOPY core /opt/bunkerweb/core\nCOPY gen /opt/bunkerweb/gen\nCOPY helpers /opt/bunkerweb/helpers\nCOPY job /opt/bunkerweb/job\nCOPY lua /opt/bunkerweb/lua\nCOPY misc /opt/bunkerweb/misc\nCOPY utils /opt/bunkerweb/utils\nCOPY settings.json /opt/bunkerweb/settings.json\nCOPY VERSION /opt/bunkerweb/VERSION\n\n# Install runtime dependencies, pypi packages, move bwcli, create data folders and set permissions\nRUN apk add --no-cache bash python3 libgcc libstdc++ openssl git && \\\n\tchown root:nginx /opt/bunkerweb/modules && \\\n\tchmod 750 /opt/bunkerweb/modules && \\\n\tchmod 740 /opt/bunkerweb/modules/*.so && \\\n\tcp /opt/bunkerweb/helpers/bwcli /usr/local/bin && \\\n\tmkdir /opt/bunkerweb/configs && \\\n\tfor dir in $(echo \"cache configs configs/http configs/stream configs/server-http configs/server-stream configs/default-server-http configs/default-server-stream configs/modsec configs/modsec-crs letsencrypt plugins www\") ; do mkdir -p \"/data/${dir}\" && ln -s \"/data/${dir}\" \"/opt/bunkerweb/${dir}\" ; done && \\\n\tchown -R root:nginx /data && \\\n\tchmod -R 770 /data && \\\n\tmkdir /opt/bunkerweb/tmp && \\\n\tchown -R root:nginx /opt/bunkerweb && \\\n\tfind /opt/bunkerweb -type f -exec chmod 0740 {} \\; && \\\n\tfind /opt/bunkerweb -type d -exec chmod 0750 {} \\; && \\\n\tchmod 770 /opt/bunkerweb/cache /opt/bunkerweb/tmp && \\\n\tchmod 750 /opt/bunkerweb/gen/main.py /opt/bunkerweb/job/main.py /opt/bunkerweb/cli/main.py /opt/bunkerweb/helpers/*.sh /usr/local/bin/bwcli /opt/bunkerweb/deps/python/bin/* && \\\n\tfind /opt/bunkerweb/core/*/jobs/* -type f -exec chmod 750 {} \\; && \\\n\tchown root:nginx /usr/local/bin/bwcli && \\\n\tchown -R nginx:nginx /etc/nginx && \\\n\tln -s /data/letsencrypt /etc/letsencrypt && \\\n\tmkdir /var/log/letsencrypt /var/lib/letsencrypt && \\\n\tchown root:nginx /var/log/letsencrypt /var/lib/letsencrypt && \\\n\tchmod 770 /var/log/letsencrypt /var/lib/letsencrypt && \\\n\tchown -R root:nginx /etc/nginx && \\\n\tchmod -R 770 /etc/nginx && \\\n\trm -f /var/log/nginx/* && \\\n\tln -s /proc/1/fd/2 /var/log/nginx/error.log && \\\n\tln -s /proc/1/fd/2 /var/log/nginx/modsec_audit.log && \\\n\tln -s /proc/1/fd/1 /var/log/nginx/access.log && \\\n\tln -s /proc/1/fd/1 /var/log/nginx/jobs.log && \\\n\tln -s /proc/1/fd/1 /var/log/letsencrypt/letsencrypt.log\n\n# Fix CVE-2022-27405 and CVE-2022-27406\nRUN apk add --no-cache \"freetype>=2.10.4-r3\"\n\nVOLUME /data\n\nEXPOSE 8080/tcp 8443/tcp\n\nUSER nginx:nginx\n\nHEALTHCHECK --interval=10s --timeout=10s --start-period=30s --retries=6 CMD /opt/bunkerweb/helpers/healthcheck.sh\n\nENTRYPOINT [\"/opt/bunkerweb/helpers/entrypoint.sh\"]\n"
}