{
  "startTime": 1674220699632,
  "endTime": 1674220700419,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 31
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 55
      }
    }
  ],
  "repairedDockerfile": "# Re-use the phusion baseimage which runs an SSH server etc\nFROM phusion/baseimage\n\n# Some definitions\nENV SUDOFILE /etc/sudoers\nENV SSHKEYFILE vagrantssh.key\n\n# Do what?\nRUN rm -f /etc/service/sshd/down\n\n# Import the newly generated public key into the docker image\nADD keys/${SSHKEYFILE}.pub /tmp/${SSHKEYFILE}.pub\n\n# Install the public key for root user\nRUN cat /tmp/${SSHKEYFILE}.pub >> /root/.ssh/authorized_keys\n\n# Create vagrant user\nRUN useradd --shell /bin/bash --create-home --base-dir /home --user-group --groups sudo,ssh --password '' vagrant\n\n# Install the public key for vagrant user\nRUN mkdir -p /home/vagrant/.ssh\nRUN cat /tmp/${SSHKEYFILE}.pub >> /home/vagrant/.ssh/authorized_keys\nRUN chown -R vagrant:vagrant /home/vagrant/.ssh\n\n# Remove the temporary location for the key\nRUN rm -f /tmp/${SSHKEYFILE}.pub\n\n# Update apt-cache, so that stuff can be installed\nRUN apt-get -y update\n# Install python (otherwise ansible will not work)\nRUN apt-get -y --no-install-recommends install python && rm -rf /var/lib/apt/lists/*;\n# Install aptitude, since ansible needs it (only apt-get is installed)\nRUN apt-get -y --no-install-recommends install aptitude && rm -rf /var/lib/apt/lists/*;\n\n# Enable password-less sudo for all user (including the 'vagrant' user)\nRUN chmod u+w ${SUDOFILE}\nRUN echo '%sudo   ALL=(ALL:ALL) NOPASSWD: ALL' >> ${SUDOFILE}\nRUN chmod u-w ${SUDOFILE}\n"
}