{
  "startTime": 1674253290991,
  "endTime": 1674253291430,
  "originalSmells": [
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 109
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# all credit goes to https://fasterthanli.me/articles/remote-development-with-rust-on-fly-io#what-the-heck-is-fly-io-for-even\n# for an an awesome walkthrough of docker files for rust, this is more or less a direct copy pasta with a few minor tweaks\n\n# after containerization, this manages to come in at a whopping ~163mb, still a bit to we could optimize but this should do for now\n\n# stage one - copy over our build files for compilation, including workspace and .env files\nFROM rust:1.61.0-slim-bullseye AS build\n\nWORKDIR /app\n\nCOPY ./rust-toolchain ./\nCOPY ./Cargo.lock ./\nCOPY ./Cargo.toml ./\nCOPY ./.env.docker ./.env\nCOPY ./crates/conduit-bin ./crates/conduit-bin\nCOPY ./crates/conduit-web ./crates/conduit-web\nCOPY ./crates/conduit-api ./crates/conduit-api\nCOPY ./crates/conduit-core ./crates/conduit-core\nCOPY ./crates/conduit-domain ./crates/conduit-domain\nCOPY ./crates/conduit-infrastructure ./crates/conduit-infrastructure\n\n# on rebuilds, we explicitly cache our rust build dependencies to speed things up\nRUN --mount=type=cache,target=/app/target \\\r\n    --mount=type=cache,target=/usr/local/cargo/registry \\\r\n    --mount=type=cache,target=/usr/local/cargo/git \\\r\n    --mount=type=cache,target=/usr/local/rustup \\\r\n    set -eux; \\\r\n    rustup install stable; \\\r\n    cargo build --workspace --release; \\\r\n    objcopy --compress-debug-sections target/release/conduit-bin ./conduit\n\n# stage two - we'll utilize a second container to run our built binary from our first container - slim containers!\nFROM debian:11.3-slim as deploy\n\nRUN set -eux; \\\n    export DEBIAN_FRONTEND=noninteractive; \\\n    apt update; \\\n    apt install --yes --no-install-recommends bind9-dnsutils iputils-ping iproute2 curl ca-certificates htop; rm -rf /var/lib/apt/lists/*; \\\n    apt clean autoclean; \\\n    apt autoremove --yes; \\\n    rm -rf /var/lib/{apt,dpkg,cache,log}/;\n\nWORKDIR /deploy\n\nCOPY --from=build /app/conduit ./\n\nCMD [\"./conduit\"]"
}