{
  "startTime": 1674254689760,
  "endTime": 1674254690598,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 137
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 188
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 138
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 4,
        "columnEnd": 71
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 5,
        "columnEnd": 34
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 7,
        "columnEnd": 47
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 7,
        "columnEnd": 43
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM docker.pkg.github.com/nolte/vscode-devcontainers/k8s-operator:latest\n\n# https://github.com/bflad/tfproviderdocs/releases\nENV TFPROVIDERDOCS_VERSION=0.7.0\n\n# https://github.com/bats-core/bats-core\nENV BATS_VERSION=1.2.0\n\nUSER root\n\nCOPY --from=docker.pkg.github.com/nolte/vscode-devcontainers/devops:latest /usr/local/bin/swagger /usr/local/bin/swagger\nCOPY --from=docker.pkg.github.com/nolte/vscode-devcontainers/devops:latest /usr/local/bin/terraform /usr/local/bin/terraform_012\nCOPY --from=docker.pkg.github.com/nolte/vscode-devcontainers/devops:latest /usr/local/bin/terraform-doc  /usr/local/bin/terraform-doc\nCOPY --from=docker.pkg.github.com/nolte/vscode-devcontainers/devops:latest /usr/local/bin/shellcheck  /usr/local/bin/shellcheck\n\n# https://github.com/hashicorp/terraform/releases\nENV TERRAFORM_VERSION=0.13.4\n\nRUN curl -f -Lo ./terraform.zip https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip \\\n  && unzip ./terraform.zip \\\n  && mv ./terraform /usr/local/bin/terraform \\\n  && chmod +x /usr/local/bin/terraform \\\n  && rm ./terraform.zip\n\n\n\nRUN curl -f -sSL -k https://github.com/bflad/tfproviderdocs/releases/download/v${TFPROVIDERDOCS_VERSION}/tfproviderdocs_${TFPROVIDERDOCS_VERSION}_linux_amd64.tar.gz -o /tmp/tfproviderdocs.tgz \\\n    && tar -zxf /tmp/tfproviderdocs.tgz -C /tmp \\\n    && mv /tmp/tfproviderdocs /usr/local/bin/ && rm /tmp/tfproviderdocs.tgz\n\nRUN apk add --update-cache \\\n    nodejs npm \\\n    && rm -rf /var/cache/apk/*\n\nRUN mkdir -p /go/src && chown -R ${USER_UID}:${USER_GID} /go/src \\\n    && mkdir -p /go/pkg && chown -R ${USER_UID}:${USER_GID} /go/pkg\n\nRUN curl -f -sSL -k https://github.com/goreleaser/goreleaser/releases/download/v0.141.0/goreleaser_Linux_x86_64.tar.gz -o /tmp/goreleaser.tgz \\\n    && tar -zxf /tmp/goreleaser.tgz -C /tmp \\\n    && mv /tmp/goreleaser /usr/local/bin/ && rm /tmp/goreleaser.tgz\n\n\nUSER ${USERNAME}\n\n#COPY --chown=${USER_UID}:${USER_GID} --from=docker.pkg.github.com/nolte/vscode-devcontainers/devops:latest  /home/${USERNAME}/.zshrc-specific /home/${USERNAME}/.zshrc-specific\nCOPY --chown=${USER_UID}:${USER_GID} files/devops-zshrc-specific /home/${USERNAME}/.zshrc-specific\nCOPY --chown=${USER_UID}:${USER_GID} files/devops-welcome.sh /home/${USERNAME}/.welcome.sh\n\nRUN mkdir -p /home/${USERNAME}/.terraform.d/plugins/linux_amd64\n\nENV PATH=\"/usr/local/share/npm/bin:/usr/local/bin:/usr/local/sbin:~/bin:$PATH\"\n\nRUN mkdir \"/home/${USERNAME}/.npm-packages\"\nRUN npm config set prefix \"/home/${USERNAME}/.npm-packages\"\nRUN npm install swagger-merger --user -g && npm cache clean --force;\n\nRUN helm repo add harbor https://helm.goharbor.io\nRUN npm install swagger-merger -g && npm cache clean --force;\n\nRUN curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.27.0\n\nRUN curl -sfL https://raw.githubusercontent.com/securego/gosec/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v2.3.0\n\nRUN npm i markdown-spellcheck -g && npm cache clean --force;\n\nRUN curl -f https://raw.githubusercontent.com/nektos/act/master/install.sh | sudo bash\n\nRUN npm i madr adr-log -g && npm cache clean --force;\n\nRUN mkdir -p ${WORKON_HOME} \\\n  && virtualenv -p python3 ${WORKON_HOME}/development \\\n  && source ${WORKON_HOME}/development/bin/activate \\\n  && pip install --no-cache-dir MarkdownPP mkdocs \\\n  && deactivate\n"
}