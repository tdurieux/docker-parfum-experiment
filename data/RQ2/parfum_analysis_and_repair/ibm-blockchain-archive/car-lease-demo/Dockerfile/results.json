{
  "startTime": 1674251268570,
  "endTime": 1674251268953,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 25,
        "columnEnd": 50
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 25,
        "columnEnd": 50
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:argon\n\n# Install required prereqs.\nRUN apt-get -y update && apt-get -y --no-install-recommends install netcat && rm -rf /var/lib/apt/lists/*;\n\n# Create app directory\nRUN mkdir -p /usr/src/app && rm -rf /usr/src/app\nWORKDIR /usr/src/app\n\n# Update npm\nRUN npm install -g npm && npm cache clean --force;\n\n# Install app dependencies\nCOPY package.json /usr/src/app/\nRUN npm install --quiet && npm cache clean --force;\n\n# Bundle app source\nCOPY . /usr/src/app\n\nCMD [\"sh\", \"./Scripts/docker-startup.sh\"]\n\n# Expose the port.\nEXPOSE 8080\n"
}