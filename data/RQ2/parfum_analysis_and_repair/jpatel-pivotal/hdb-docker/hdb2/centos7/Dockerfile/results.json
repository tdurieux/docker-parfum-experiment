{
  "startTime": 1674251293485,
  "endTime": 1674251295278,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 4,
        "columnEnd": 120
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 4,
        "columnEnd": 120
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 1,
        "columnEnd": 53
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 1,
        "columnEnd": 114
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 1,
        "columnEnd": 95
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 1,
        "columnEnd": 137
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 1,
        "columnEnd": 125
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 109,
        "lineEnd": 110,
        "columnStart": 18,
        "columnEnd": 102
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 17,
        "lineEnd": 25,
        "columnStart": 1,
        "columnEnd": 63
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 21,
        "columnEnd": 52
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 79,
        "lineEnd": 79,
        "columnStart": 18,
        "columnEnd": 120
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM centos:7\n\nMAINTAINER  Jemish Patel <jpatel@pivotal.io>\n\n# install document with yum\nRUN sed -i 's/tsflags=nodocs//g' /etc/yum.conf\n\n# add yum repo for libhdfs3\n#RUN curl -L \"https://bintray.com/wangzw/rpm/rpm\" -o /etc/yum.repos.d/bintray-wangzw-rpm.repo\n\nRUN rpm -iUvh http://dl.fedoraproject.org/pub/epel/7/x86_64/e/epel-release-7-8.noarch.rpm && \\\n yum history sync && yum -y update  && yum clean all\n\n\n# install software we need to build\nRUN yum -y swap -- remove systemd-container systemd-container-libs -- install systemd systemd-libs && \\\n yum makecache && \\\n yum install -y man passwd sudo tar which git mlocate links make bzip2 net-tools \\\n autoconf automake libtool m4 gcc gcc-c++ gdb bison flex cmake3 gperf maven indent \\\n libuuid-devel krb5-devel libgsasl-devel expat-devel libxml2-devel \\\n perl-ExtUtils-Embed pam-devel python-devel libcurl-devel snappy-devel \\\n thrift-devel libyaml-devel libevent-devel bzip2-devel openssl-devel \\\n openldap-devel protobuf-devel readline-devel net-snmp-devel apr-devel \\\n libesmtp-devel xerces-c-devel python-pip json-c-devel libhdfs3-devel \\\n apache-ivy java-1.7.0-openjdk-devel libffi libffi-devel unzip\\\n openssh-clients openssh-server R tcpdump wget bsdtar perl-JSON && \\\n yum clean all && rm -rf /var/cache/yum\n\n\n# install python module\nRUN yum makecache && yum install -y postgresql-devel && \\\n pip --retries=50 --no-cache-dir --timeout=300 install --upgrade pip && \\\n pip --retries=50 --no-cache-dir --timeout=300 install pg8000 simplejson unittest2 pycrypto pygresql pyyaml lockfile paramiko psi && \\\n pip --retries=50 --no-cache-dir --timeout=300 install http://darcs.idyll.org/~t/projects/figleaf-0.6.1.tar.gz && \\\n pip --retries=50 --no-cache-dir --timeout=300 install http://sourceforge.net/projects/pychecker/files/pychecker/0.8.19/pychecker-0.8.19.tar.gz/download && \\\n pip --retries=50 --no-cache-dir --timeout=300 install numpy scipy matplotlib plotly psycopg2 queries pandas sqlalchemy redis python-dotenv && \\\n yum clean all && rm -rf /var/cache/yum\n\n# setup ssh server and keys for root\nRUN sshd-keygen && \\\n ssh-keygen -t rsa -N \"\" -f ~/.ssh/id_rsa && \\\n cat ~/.ssh/id_rsa.pub >> ~/.ssh/authorized_keys && \\\n chmod 0600 ~/.ssh/authorized_keys\n\n# setup JAVA_HOME for all users\nRUN echo \"#!/bin/sh\" > /etc/profile.d/java.sh && \\\n echo \"export JAVA_HOME=/etc/alternatives/java_sdk\" >> /etc/profile.d/java.sh && \\\n chmod a+x /etc/profile.d/java.sh\n\n#link correct cmake\nRUN cd /usr/bin/ && ln -s cmake3 cmake && ln -s ccmake3 ccmake && ln -s cpack3 cpack && ln -s ctest3 ctest\n\n# install libyarn\n#RUN mkdir -p /tmp/build && \\\n# cd /tmp/build && git clone --depth=1 https://github.com/apache/incubator-hawq.git . && cd depends/libyarn && mkdir build && cd build && \\\n# ../bootstrap --prefix=/usr && make -j4 && make install && ldconfig && \\\n# rm -rf /tmp/build\n\n# install libhdfs3\n#RUN mkdir -p /tmp/build && \\\n# cd /tmp/build && git clone --recursive --depth=1 https://github.com/apache/incubator-hawq.git . && cd depends/libhdfs3 && mkdir build && cd build && \\\n #../bootstrap --prefix=/data/hdb2 && make && make install && ldconfig && \\\n #rm -rf /tmp/build\n\n\n# sudo should not require tty\nRUN sed -i -e 's|Defaults    requiretty|#Defaults    requiretty|' /etc/sudoers\n\n# set USER env\nRUN echo \"#!/bin/bash\" > /etc/profile.d/user.sh && \\\n echo \"export USER=\\`whoami\\`\" >> /etc/profile.d/user.sh && \\\n chmod a+x /etc/profile.d/user.sh\nENV BASEDIR /data\nRUN mkdir -p /data && chmod 777 /data\n\nUSER root\n\n# install HDP 2.4.0.0\nRUN curl -f -L \"https://public-repo-1.hortonworks.com/HDP/centos7/2.x/updates/2.4.0.0/hdp.repo\" -o /etc/yum.repos.d/hdp.repo && \\\n yum -y update && yum install -y hadoop hadoop-hdfs hadoop-libhdfs hadoop-yarn hadoop-mapreduce hadoop-client hdp-select && \\\n yum clean all && rm -rf /var/cache/yum\n\nRUN ln -s /usr/hdp/current/hadoop-hdfs-namenode/../hadoop/sbin/hadoop-daemon.sh /usr/bin/hadoop-daemon.sh\n\n# create user gpadmin since HAWQ cannot run under root\nRUN groupadd -g 1000 gpadmin && \\\n useradd -u 1000 -g 1000 -G hdfs,hadoop gpadmin && \\\n echo \"gpadmin  ALL=(ALL)       NOPASSWD: ALL\" > /etc/sudoers.d/gpadmin\n\nCOPY conf/* /etc/hadoop/conf/\n\nCOPY entrypoint.sh /usr/bin/entrypoint.sh\nCOPY start-hdfs.sh /usr/bin/start-hdfs.sh\nCOPY start-hdb2.sh /usr/bin/start-hdb.sh\nCOPY start-zepp.sh /usr/bin/start-zepp.sh\nCOPY start-scdf.sh /usr/bin/start-scdf.sh\nCOPY madlib-1.9-1.x86_64.rpm /tmp/madlib-1.9-1.x86_64.rpm\n\n\n# Install HDB2\n\nUSER gpadmin\n\n# setup ssh client keys for gpadmin\nRUN ssh-keygen -t rsa -N \"\" -f ~/.ssh/id_rsa && \\\n cat ~/.ssh/id_rsa.pub >> ~/.ssh/authorized_keys && \\\n chmod 0600 ~/.ssh/authorized_keys\n\nRUN git clone https://github.com/apache/incubator-hawq.git /data/hawq && \\\n cd /data/hawq && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/data/hdb2 --with-python \\\n --with-r --with-ldap --with-pam --with-gssapi --with-openssl --with-krb5 --enable-orca --enable-debug \\\n && make -j4 && make install && make clean\n\n# Install PXf\nUSER root\n\nRUN cd /data/hawq/pxf && ./gradlew clean tomcatRpm release -x test -Dhd=hdp && \\\ncd /data/hawq/pxf/distributions/ && rpm -i *.rpm && \\\ncd /data/hawq/pxf/build/distributions/ && rpm -i --force --nodeps pxf*.rpm && \\\ncd /data/hawq/pxf/ && \\\n./gradlew clean && \\\nrm -rf /data/hawq/pxf/distributions && \\\nrm -rf /data/hawq && yum history sync && yum clean all\n\n# Adding PXF User to superuser group for HDFS access\n\nRUN groupadd supergroup && \\\n usermod -G supergroup -a pxf\n\n# Install SCDF\nRUN git clone https://github.com/spring-cloud/spring-cloud-dataflow.git /data/scdf && \\\ncd /data/scdf && ./mvnw clean install && \\\ncp /data/scdf/spring-cloud-dataflow-server-local/target/spring-cloud-dataflow-server-local-*.BUILD-SNAPSHOT.jar /data/ && \\\ncp /data/scdf/spring-cloud-dataflow-shell/target/spring-cloud-dataflow-shell-*.BUILD-SNAPSHOT.jar /data/ && \\\n./mvnw clean && \\\nrm -rf /data/scdf\n\nUSER gpadmin\n\nWORKDIR /data\n#EXPOSE 5432 22 8020 51200\nENTRYPOINT [\"entrypoint.sh\"]\nCMD [\"bash\"]\n"
}