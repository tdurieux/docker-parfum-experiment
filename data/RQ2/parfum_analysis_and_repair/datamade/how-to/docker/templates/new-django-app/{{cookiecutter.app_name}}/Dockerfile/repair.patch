diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/datamade/how-to/docker/templates/new-django-app/{{cookiecutter.app_name}}/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/datamade/how-to/docker/templates/new-django-app/{{cookiecutter.app_name}}/Dockerfile/repaired.Dockerfile
index c3b39fb..602db84 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/datamade/how-to/docker/templates/new-django-app/{{cookiecutter.app_name}}/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/datamade/how-to/docker/templates/new-django-app/{{cookiecutter.app_name}}/Dockerfile/repaired.Dockerfile
@@ -11,7 +11,7 @@ LABEL maintainer "DataMade <info@datamade.us>"
 
 # Add the NodeSource PPA
 # (see: https://github.com/nodesource/distributions/blob/master/README.md)
-RUN curl -sL https://deb.nodesource.com/setup_12.x | bash -
+RUN curl -f -sL https://deb.nodesource.com/setup_12.x | bash -
 
 # Install any additional OS-level packages you need via apt-get. RUN statements
 # add additional layers to your image, increasing its final size. Keep your
@@ -22,7 +22,7 @@ RUN curl -sL https://deb.nodesource.com/setup_12.x | bash -
 #
 # Read more on Dockerfile best practices at the source:
 # https://docs.docker.com/develop/develop-images/dockerfile_best-practices
-RUN apt-get install -y --no-install-recommends postgresql-client nodejs{% if cookiecutter.postgis == 'True' %} gdal-bin{% endif %}
+RUN apt-get install -y --no-install-recommends postgresql-client nodejs{% if cookiecutter.postgis == 'True' %} gdal-bin{% endif %} && rm -rf /var/lib/apt/lists/*;
 
 # Inside the container, create an app directory and switch into it
 RUN mkdir /app
@@ -39,7 +39,7 @@ RUN pip install --no-cache-dir -r requirements.txt
 
 # Install Node requirements
 COPY ./package.json /app/package.json
-RUN npm install
+RUN npm install && npm cache clean --force;
 
 # Copy the contents of the current host directory (i.e., our app code) into
 # the container.