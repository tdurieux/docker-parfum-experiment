{
  "startTime": 1674256199282,
  "endTime": 1674256200077,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 16
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "### Build stage for the website frontend\nFROM node:10 as website\nRUN apt-get update && apt-get install --no-install-recommends -y protobuf-compiler libprotobuf-dev && rm -rf /var/lib/apt/lists/*;\nWORKDIR /code\nCOPY ./website/package.json ./\nCOPY ./website/package-lock.json ./\nRUN npm ci --no-audit --prefer-offline\nCOPY ./proto/ ../proto/\nCOPY ./website/ ./\nRUN npm run codegen\nRUN npm run build\n\n### Build stage for the website backend server\nFROM golang:1.13.8-alpine as server\nRUN apk add --no-cache gcc musl-dev\nRUN apk add --no-cache protobuf\nRUN apk add --no-cache protobuf-dev\nWORKDIR /code\nENV GOOS=linux\nENV GARCH=amd64\nENV CGO_ENABLED=1\nENV GO111MODULE=on\nRUN go get github.com/golang/protobuf/protoc-gen-go@v1.3.5\nCOPY ./go.mod ./\nCOPY ./go.sum ./\nRUN go mod download\nCOPY ./proto/ ./proto/\nCOPY ./codegen.sh ./\nRUN ./codegen.sh\nCOPY ./main.go ./main.go\nCOPY ./cmd/ ./cmd/\nCOPY ./pkg/ ./pkg/\nCOPY ./internal/ ./internal/\nRUN go build -o wg-access-server\n\n### Server\nFROM alpine:3.10\nRUN apk add --no-cache iptables\nRUN apk add --no-cache wireguard-tools\nRUN apk add --no-cache curl\nENV WG_CONFIG=\"/config.yaml\"\nENV WG_STORAGE=\"sqlite3:///data/db.sqlite3\"\nCOPY --from=server /code/wg-access-server /usr/local/bin/wg-access-server\nCOPY --from=website /code/build /website/build\nCMD [\"wg-access-server\", \"serve\"]\n"
}