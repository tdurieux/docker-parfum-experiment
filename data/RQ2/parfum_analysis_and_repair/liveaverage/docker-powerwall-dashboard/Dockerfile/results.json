{
  "startTime": 1674249993013,
  "endTime": 1674249993709,
  "originalSmells": [
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 31
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM centos:8\nMAINTAINER JR Morgan <jr@shifti.us>\n\nLABEL Vendor=\"CentOS8\" \\\n      License=GPLv2 \\\n      Version=1.0\n\n## Supports x86_64 or aarch64\nARG TARGETARCH\nENV A_ARCH=$TARGETARCH \\\n    ARCH=$A_ARCH\n\nENV VERSION_INFLUXDB=1.8.6 \\\n    VERSION_TELEGRAF=1.19.0 \\\n    VERSION_GRAFANA=7.5.2-1\n\nENV POWERWALL_HOST=\"powerwall\" \\\n    POWERWALL_PASS=\"002D\" \\\n    POWERWALL_LOCATION=\"lat=36.2452052&lon=-113.7292593\" \\\n    DATABASE=\"PowerwallData\"\n\n## Install prerequisites\nRUN yum -y install epel-release \\\n    && yum -y --setopt=tsflags=nodocs install \\\n            initscripts \\\n            urw-fonts \\\n            cronie \\\n            jq \\\n            gettext && rm -rf /var/cache/yum\n\n## Install Grafana\nRUN export IARCH=$(([[ $A_ARCH == *\"arm\"* ]] && echo \"armhfp\") || ([[ $A_ARCH == *\"amd64\"* ]] && echo \"amd64\" )) && \\\n    echo \"A_ARCH=${A_ARCH} IARCH=${IARCH} ARCH=${ARCH} OS arch=$(arch)\" && \\\n    yum -y --setopt=tsflags=nodocs install https://dl.grafana.com/oss/release/grafana-${VERSION_GRAFANA}.$(arch).rpm && \\\n    yum -y clean all && \\\n    rm -rf /var/cache/yum\n\n## Install Telegraf + InfluxDB via binary (missing repo arm pkgs)\nRUN export IARCH=$(([[ $A_ARCH == *\"arm\"* ]] && echo \"armhf\") || ([[ $A_ARCH == *\"amd64\"* ]] && echo \"amd64\" )) \\\n    && echo \"A_ARCH=${A_ARCH} IARCH=${IARCH} ARCH=${ARCH} OS arch=$(arch)\" \\\n    && curl https://dl.influxdata.com/influxdb/releases/influxdb-${VERSION_INFLUXDB}_linux_${IARCH}.tar.gz -o influx.tar.gz \\\n    && curl https://dl.influxdata.com/telegraf/releases/telegraf-${VERSION_TELEGRAF}_linux_${IARCH}.tar.gz -o telegraf.tar.gz \\\n    && tar xvfz influx.tar.gz --strip=2 \\\n    && tar xvzf telegraf.tar.gz --strip=2\n\n## Cleanup tar files\nRUN rm -rf influx* telegraf*\n\n## Defaults for InfluxDB\nENV INFLUXDB_HTTP_ENABLED=true \\\n    INFLUXDB_HTTP_BIND_ADDRESS=\"127.0.0.1:8086\" \\\n    INFLUXDB_HTTP_AUTH_ENABLED=false \\\n    INFLUXDB_HTTP_LOG_ENABLED=true\n\n## InfluxDB stores data by default at /var/lib/influxdb/[data|wal]\n## which should be mapped to a docker/podman volume for persistence\n\nRUN mkdir -p /etc/telegraf && \\\n    mkdir -p /etc/grafana/provisioning/dashboards \\\n        /etc/grafana/provisioning/datasources \\\n        /var/lib/grafana \\\n        /var/log/grafana \\\n        /var/lib/grafana/dashboards && \\\n    chown grafana:grafana /var/lib/grafana/dashboards\n\nADD powerwall.conf graf_DS.yaml graf_DA.yaml powerwallcookie.sh.template run.sh /tmp/\n\nRUN mv /tmp/powerwall.conf /etc/telegraf/telegraf.d/powerwall.conf \\\n    && mv /tmp/graf_DS.yaml /etc/grafana/provisioning/datasources/graf_DS.yaml \\\n    && mv /tmp/graf_DA.yaml /etc/grafana/provisioning/dashboards/graf_DA.yaml \\\n    && mv /tmp/powerwallcookie.sh.template /etc/powerwallcookie.sh \\\n    && mv /tmp/run.sh /opt/run.sh \\\n    && rm -f /tmp/* \\\n    && chmod -v +x /opt/run.sh /etc/powerwallcookie.sh \\\n        && export $(grep -v \"#\" /etc/sysconfig/grafana-server | cut -d= -f1)\n\nEXPOSE 3000\n\nCMD [\"/opt/run.sh\"]\n"
}