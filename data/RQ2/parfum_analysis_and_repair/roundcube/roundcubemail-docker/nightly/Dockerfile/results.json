{
  "startTime": 1674255021502,
  "endTime": 1674255023096,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 73,
        "lineEnd": 73,
        "columnStart": 1,
        "columnEnd": 47
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 83,
        "lineEnd": 83,
        "columnStart": 1,
        "columnEnd": 99
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 1,
        "columnEnd": 21
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 1,
        "columnEnd": 26
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 1,
        "columnEnd": 22
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 1,
        "columnEnd": 38
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 79,
        "lineEnd": 79,
        "columnStart": 1,
        "columnEnd": 24
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 114,
        "lineEnd": 114,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 74,
        "lineEnd": 74,
        "columnStart": 1,
        "columnEnd": 27
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 1,
        "columnEnd": 64
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 74,
        "lineEnd": 74,
        "columnStart": 1,
        "columnEnd": 27
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 1,
        "columnEnd": 26
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 1,
        "columnEnd": 22
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 1,
        "columnEnd": 38
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 79,
        "lineEnd": 79,
        "columnStart": 1,
        "columnEnd": 24
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 74,
        "lineEnd": 74,
        "columnStart": 1,
        "columnEnd": 51
      }
    }
  ],
  "repairedDockerfile": "FROM php:8.0-apache AS base\nLABEL maintainer=\"Thomas Bruederli <thomas@roundcube.net>\"\n\nRUN set -ex; \\\n\tapt-get update; \\\n\t\\\n\tsavedAptMark=\"$(apt-mark showmanual)\"; \\\n\t\\\n\tapt-get install -y --no-install-recommends \\\n\t\tlibfreetype6-dev \\\n\t\tlibicu-dev \\\n\t\tlibjpeg62-turbo-dev \\\n\t\tlibldap2-dev \\\n\t\tlibmagickwand-dev \\\n\t\tlibpng-dev \\\n\t\tlibpq-dev \\\n\t\tlibsqlite3-dev \\\n\t\tlibzip-dev \\\n\t; \\\n\t\\\n\tdebMultiarch=\"$(dpkg-architecture --query DEB_BUILD_MULTIARCH)\"; \\\n\tdocker-php-ext-configure gd; \\\n\tdocker-php-ext-configure ldap --with-libdir=\"lib/$debMultiarch\"; \\\n\tdocker-php-ext-install \\\n\t\texif \\\n\t\tgd \\\n\t\tintl \\\n\t\tldap \\\n\t\tpdo_mysql \\\n\t\tpdo_pgsql \\\n\t\tpdo_sqlite \\\n\t\tzip \\\n\t; \\\n\tpecl install imagick redis; \\\n\tdocker-php-ext-enable imagick opcache redis; \\\n\t\\\n# reset apt-mark's \"manual\" list so that \"purge --auto-remove\" will remove all build dependencies\n\tapt-mark auto '.*' > /dev/null; \\\n\tapt-mark manual $savedAptMark; \\\n\tldd \"$(php -r 'echo ini_get(\"extension_dir\");')\"/*.so \\\n\t\t| awk '/=>/ { print $3 }' \\\n\t\t| sort -u \\\n\t\t| xargs -r dpkg-query -S \\\n\t\t| cut -d: -f1 \\\n\t\t| sort -u \\\n\t\t| xargs -rt apt-mark manual; \\\n\t\\\n\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \\\n\trm -rf /var/lib/apt/lists/*\n\n# installto.sh dependencies\nRUN set -ex; \\\n\t\\\n\tapt-get update; \\\n\tapt-get install -y --no-install-recommends \\\n\t\t\trsync \\\n\t; \\\n\trm -rf /var/lib/apt/lists/*\n\n# ... and composer.phar\nADD https://getcomposer.org/installer /tmp/composer-installer.php\n\nRUN php /tmp/composer-installer.php --install-dir=/usr/local/bin/; \\\n\trm /tmp/composer-installer.php\n\nRUN a2enmod rewrite\n\n### Temporary build image\nFROM base AS builder\n\n# install nodejs and lessc compiler\nRUN apt-get -qq update; \\\n\tapt-get install -y --no-install-recommends unzip gnupg dirmngr; rm -rf /var/lib/apt/lists/*; \\\n\tcurl -f -sL https://deb.nodesource.com/setup_14.x | bash -; \\\n\tapt-get install --no-install-recommends -y nodejs; \\\n\tnpm install -g less; npm cache clean --force; \\\n\tnpm install -g uglify-js; \\\n\tnpm install -g lessc; \\\n\tnpm install -g less-plugin-clean-css; \\\n\tnpm install -g csso-cli\n\n# Download source and build package into src directory\nRUN set -ex; \\\n\tcurl -f -o roundcubemail.tar.gz -SL https://github.com/roundcube/roundcubemail/archive/master.tar.gz; \\\n\ttar -xzf roundcubemail.tar.gz -C /usr/src/; \\\n\trm roundcubemail.tar.gz; \\\n\tmv /usr/src/roundcubemail-master /usr/src/roundcubemail; \\\n\tcd /usr/src/roundcubemail; \\\n\trm -rf installer tests public_html .ci .github .gitignore .editorconfig .tx .travis.yml; \\\n\t(cd /usr/src/roundcubemail/skins/elastic; \\\n\t\tlessc --clean-css=\"--s1 --advanced\" styles/styles.less > styles/styles.min.css; \\\n\t\tlessc --clean-css=\"--s1 --advanced\" styles/print.less > styles/print.css; \\\n\t\tlessc --clean-css=\"--s1 --advanced\" styles/embed.less > styles/embed.css); \\\n\tmv composer.json-dist composer.json; \\\n\tcomposer.phar require kolab/net_ldap3 --no-install; \\\n\tcomposer.phar require bjeavons/zxcvbn-php --no-install; \\\n\tcomposer.phar install --no-dev --prefer-dist; \\\n\tbin/install-jsdeps.sh; \\\n\tbin/updatecss.sh; \\\n\trm -rf vendor/masterminds/html5/test \\\n\t\tvendor/pear/*/tests vendor/*/*/.git* \\\n\t\tvendor/pear/crypt_gpg/tools \\\n\t\tvendor/pear/console_commandline/docs \\\n\t\tvendor/pear/mail_mime/scripts \\\n\t\tvendor/pear/net_ldap2/doc \\\n\t\tvendor/pear/net_smtp/docs \\\n\t\tvendor/pear/net_smtp/examples \\\n\t\tvendor/pear/net_smtp/README.rst \\\n\t\tvendor/endroid/qrcode/tests \\\n\t\ttemp/js_cache\n\n### Final image\nFROM base\n\nRUN mkdir -p /usr/src && rm -rf /usr/src\nCOPY --from=builder /usr/src/roundcubemail /usr/src/roundcubemail\n\n# include the wait-for-it.sh script\nRUN curl -fL https://raw.githubusercontent.com/vishnubob/wait-for-it/master/wait-for-it.sh > /wait-for-it.sh && chmod +x /wait-for-it.sh\n\n# use custom PHP settings\nCOPY php.ini /usr/local/etc/php/conf.d/roundcube-defaults.ini\n\nCOPY docker-entrypoint.sh /\n\nRUN mkdir -p /var/roundcube/config\n\nENTRYPOINT [\"/docker-entrypoint.sh\"]\nCMD [\"apache2-foreground\"]\n"
}