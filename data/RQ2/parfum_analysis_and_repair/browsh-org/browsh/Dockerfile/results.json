{
  "startTime": 1674220392550,
  "endTime": 1674220393662,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 76
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 128
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 27
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM bitnami/minideb:stretch as build\n\nRUN install_packages \\\n      curl \\\n      ca-certificates \\\n      git \\\n      autoconf \\\n      automake \\\n      g++ \\\n      protobuf-compiler \\\n      zlib1g-dev \\\n      libncurses5-dev \\\n      libssl-dev \\\n      pkg-config \\\n      libprotobuf-dev \\\n      make\n\n# Install Golang\nENV GOROOT=/go\nENV GOPATH=/go-home\nENV PATH=$GOROOT/bin:$GOPATH/bin:$PATH\nRUN curl -f -L -o go.tar.gz https://dl.google.com/go/go1.9.2.linux-amd64.tar.gz\nRUN mkdir -p $GOPATH/bin\nRUN tar -C / -xzf go.tar.gz && rm go.tar.gz\n\nENV BASE=$GOPATH/src/browsh/interfacer\nWORKDIR $BASE\nADD interfacer $BASE\n\n# Build Browsh\nRUN $BASE/contrib/build_browsh.sh\n\n\n###########################\n# Actual final Docker image\n###########################\nFROM bitnami/minideb:stretch\n\nENV HOME=/app\nWORKDIR /app\n\nCOPY --from=build /go-home/src/browsh/interfacer/browsh /app/browsh\n\nRUN install_packages \\\n      xvfb \\\n      libgtk-3-0 \\\n      curl \\\n      ca-certificates \\\n      bzip2 \\\n      libdbus-glib-1-2 \\\n      procps\n\n# Block ads, etc. This includes porn just because this image is also used on the\n# public SSH demo: `ssh brow.sh`.\nRUN curl -f -o /etc/hosts https://raw.githubusercontent.com/StevenBlack/hosts/master/alternates/fakenews-gambling-porn-social/hosts\n\n# Don't use root\nRUN useradd -m user --home /app\nRUN chown user:user /app\nUSER user\n\n# Setup Firefox\nENV PATH=\"${HOME}/bin/firefox:${PATH}\"\nADD .travis.yml .\nADD interfacer/contrib/setup_firefox.sh .\nRUN ./setup_firefox.sh\nRUN rm setup_firefox.sh && rm .travis.yml\n\n# Firefox behaves quite differently to normal on its first run, so by getting\n# that over and done with here when there's no user to be dissapointed means\n# that all future runs will be consistent.\nRUN TERM=xterm script \\\n  --return \\\n  -c \"/app/browsh\" \\\n  /dev/null \\\n  >/dev/null & \\\n  sleep 10\n\nCMD [\"/app/browsh\"]\n\n"
}