{
  "startTime": 1674215945446,
  "endTime": 1674215946092,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 10,
        "columnStart": 2,
        "columnEnd": 18
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.8-slim-bullseye AS builder\n\nLABEL maintainer=\"Juho Inkinen <juho.inkinen@helsinki.fi>\"\n\nSHELL [\"/bin/bash\", \"-c\"]\nARG optional_dependencies=dev,voikko,pycld3,fasttext,nn,omikuji,yake,spacy\n# Bulding fastText needs some system packages\nRUN if [[ $optional_dependencies =~ \"fasttext\" ]]; then \\\n\t\tapt-get update && \\\n\t\tapt-get install -y --no-install-recommends \\\n\t\t\tbuild-essential && \\\n\t\tpip install --upgrade pip setuptools wheel --no-cache-dir && \\\n\t\tpip install --no-cache-dir \\\n\t\t\tfasttext==0.9.2; rm -rf /var/lib/apt/lists/*; \\\n\tfi\n\n\nFROM python:3.8-slim-bullseye\n\nSHELL [\"/bin/bash\", \"-c\"]\nCOPY --from=builder /usr/local/lib/python3.8 /usr/local/lib/python3.8\n\nARG optional_dependencies=dev,voikko,pycld3,fasttext,nn,omikuji,yake,spacy\n# Install system dependencies needed at runtime:\nRUN apt-get update && \\\n\tif [[ $optional_dependencies =~ \"voikko\" ]]; then \\\n\t\tapt-get install -y --no-install-recommends \\\n\t\t\tlibvoikko1 \\\n\t\t\tvoikko-fi; \\\n\tfi && \\\n\t# curl for Docker healthcheck and rsync for model transfers:\n\tapt-get install -y --no-install-recommends curl rsync && \\\n\trm -rf /var/lib/apt/lists/* /usr/include/*\n\nWORKDIR /Annif\nRUN pip install --upgrade pip wheel --no-cache-dir\n\nCOPY setup.py README.md LICENSE.txt projects.cfg.dist /Annif/\nRUN echo \"Installing dependencies for optional features: $optional_dependencies\" \\\n\t&& pip install .[$optional_dependencies] --no-cache-dir\n\n# Download nltk data\nRUN python -m nltk.downloader punkt -d /usr/share/nltk_data\n\n# Download spaCy models, if the optional feature was selected\nARG spacy_models=en_core_web_sm\nRUN if [[ $optional_dependencies =~ \"spacy\" ]]; then \\\n\t\tfor model in $(echo $spacy_models | tr \",\" \"\\n\"); do \\\n\t\t\tpython -m spacy download $model; \\\n\t\tdone; \\\n\tfi\n\n# Install Annif by copying source and make the installation editable:\nCOPY annif /Annif/annif\nCOPY tests /Annif/tests\nRUN pip install --no-cache-dir -e .\n\nWORKDIR /annif-projects\n\n# Switch user to non-root:\nRUN groupadd -g 998 annif_user && \\\n    useradd -r -u 998 -g annif_user annif_user && \\\n    chown -R annif_user:annif_user /annif-projects\nUSER annif_user\n\nCMD annif\n"
}