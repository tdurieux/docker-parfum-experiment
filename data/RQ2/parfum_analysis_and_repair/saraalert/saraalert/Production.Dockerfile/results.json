{
  "startTime": 1674218568113,
  "endTime": 1674218569653,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 61
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 72
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 68
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 65,
        "columnEnd": 81
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 34,
        "columnEnd": 50
      }
    }
  ],
  "repairedDockerfile": "FROM ruby:2.7.3-alpine\n\nARG cert\n\nRUN echo \"${cert}\" > /usr/local/share/ca-certificates/ca-certificates.crt\nRUN update-ca-certificates\n\nRUN apk --update --no-cache add nodejs yarn mariadb-dev tzdata git shared-mime-info\nRUN apk --update --no-cache add --virtual build-dependencies make g++ patch npm\n\nRUN yarn config set cafile /etc/ssl/certs/ca-certificates.crt && yarn cache clean;\nRUN npm install node-gyp -g && npm cache clean --force;\n\nRUN mkdir -p /app/disease-trakker\nRUN mkdir -p /app/disease-trakker/app/assets/stylesheets\n\nCOPY Gemfile Gemfile.lock /app/disease-trakker/\nWORKDIR /app/disease-trakker\nRUN gem install bundler -v 2.2.19 && bundle config set without 'development test' && bundle config set deployment 'true'\nRUN bundle install --jobs $(nproc)\nRUN yarn install --no-optional && yarn cache clean;\n\nRUN addgroup -g 1000 -S app && adduser -u 1000 -S app -G app\nCOPY . /app/disease-trakker\nRUN RAILS_ENV=production SECRET_KEY_BASE=precompile_only bundle exec rake assets:precompile\n\nRUN apk del build-dependencies && \\\n    find /usr/local/bundle/gems/ -name \"*.c\" -delete && \\\n    rm -rf /usr/local/bundle/cache/*.gem /var/cache/apk/* node_modules tmp/ /tmp vendor/assets test/ /root/.bundle /root/.npm /usr/local/share/.cache\nENV RAILS_SERVE_STATIC_FILES true\nENV RAILS_LOG_TO_STDOUT true\nENV RAILS_ENV production\n\nCOPY docker-entrypoint.sh /usr/local/bin\nRUN chmod 755 /usr/local/bin/docker-entrypoint.sh\nRUN chmod +x /usr/local/bin/docker-entrypoint.sh\nRUN chown app:app /usr/local/bundle/config\nRUN chown -R app:app /app/disease-trakker\nUSER app\n\nENTRYPOINT [\"/usr/local/bin/docker-entrypoint.sh\"]\n"
}