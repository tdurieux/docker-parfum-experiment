{
  "startTime": 1674251227138,
  "endTime": 1674251227706,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 22,
        "columnEnd": 61
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 22,
        "columnEnd": 61
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# It makes tests much easier\n# It's just a Dockerfile that runs a single network monitoring job\n# because the main Dockerfile that's used in production wraps everything in a CRON job\n\nFROM node:16\n\nRUN apt-get update && apt-get -y --no-install-recommends install -qq --force-yes cron && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /network-monitoring\n\n# Install app dependencies from package.json. If modules are not included in the package.json file enter a RUN command. E.g. RUN npm install <module-name>\nCOPY package.json /network-monitoring/\nRUN npm install && npm cache clean --force;\n\nCOPY . .\n\nCMD [\"npm\", \"run\", \"staging\"]\n"
}