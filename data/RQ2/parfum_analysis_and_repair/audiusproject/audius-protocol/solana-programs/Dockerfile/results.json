{
  "startTime": 1674216997543,
  "endTime": 1674216998915,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 81
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 128
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 128
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:20.04\n\nENV NODE_VERSION=\"v14.18.1\"\nENV HOME=\"/root\"\nENV PATH=\"${HOME}/.nvm/versions/node/${NODE_VERSION}/bin:${PATH}\"\n\nWORKDIR /usr/src/app\n\nRUN ln -snf /usr/share/zoneinfo/UTC /etc/localtime && \\\n    echo UTC > /etc/timezone\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y jq curl build-essential libudev-dev libhidapi-dev pkg-config libssl-dev git python-is-python3 python3-pip && \\\n    pip3 install --no-cache-dir web3 && \\\n    curl -s --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y && rm -rf /var/lib/apt/lists/*;\n\nENV PATH=\"/root/.cargo/bin:${PATH}\"\n\nRUN rustup install 1.55.0 && \\\n    sh -c \"$(curl -sSfL https://release.solana.com/v1.9.13/install)\"\n\nENV PATH=\"/root/.cargo/bin:/root/.local/share/solana/install/active_release/bin:${PATH}\"\n\n# Install node / npm / yarn.\nRUN curl -f -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh | bash\nENV NVM_DIR=\"${HOME}/.nvm\"\nRUN . $NVM_DIR/nvm.sh && \\\n    nvm install ${NODE_VERSION} && \\\n    nvm use ${NODE_VERSION} && \\\n    nvm alias default node && \\\n    npm install -g yarn && npm cache clean --force;\n\n# Install anchor.\nRUN cargo install --git https://github.com/project-serum/anchor --tag v0.24.1 anchor-cli --locked\n\nCOPY audius_eth_registry audius_eth_registry\nCOPY track_listen_count track_listen_count\nCOPY cli cli\nCOPY claimable-tokens claimable-tokens\nCOPY reward-manager reward-manager\n\nRUN cd audius_eth_registry && \\\n    cargo build-bpf && \\\n    cd ../track_listen_count && \\\n    cargo build-bpf  && \\\n    cd ../cli && \\\n    cargo build && \\\n    cd ../claimable-tokens/program && \\\n    cargo build-bpf && \\\n    cd ../cli && \\\n    cargo build && \\\n    cd ../../reward-manager/program && \\\n    cargo build-bpf && \\\n    cd ../cli && \\\n    cargo build\n\nARG BUILD_ID\nLABEL prune=true\nLABEL build=$BUILD_ID\nCOPY anchor anchor\nRUN cd anchor/audius-data && \\\n    anchor build\n\nCOPY start.sh ./\n\nCMD [ \"bash\", \"start.sh\" ]\n"
}