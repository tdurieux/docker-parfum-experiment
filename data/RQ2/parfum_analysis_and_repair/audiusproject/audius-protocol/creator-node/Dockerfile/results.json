{
  "startTime": 1674249357654,
  "endTime": 1674249358586,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 76
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 17,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 33
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 51
      }
    }
  ],
  "repairedDockerfile": "FROM alpine:3.13 AS base\n\nWORKDIR /usr/src/app\n\nVOLUME \"/file_storage\"\nENV storagePath=/file_storage\n\nHEALTHCHECK --interval=5s --timeout=5s --start-period=5m --retries=12 \\\n    CMD curl -f http://localhost:${port}/health_check || exit 1\n\n# Add the wait script to the image\n# Script originally from https://github.com/ufoscout/docker-compose-wait/releases/download/2.4.0/wait /usr/bin/wait\nCOPY scripts/wait /usr/bin/wait\n\nRUN echo 'http://dl-cdn.alpinelinux.org/alpine/v3.10/main' \\\n        >> /etc/apk/repositories && \\\n    apk update && \\\n    apk add --no-cache \\\n        bash=5.1.16-r0 \\\n        curl \\\n        docker=20.10.3-r1 \\\n        libpq=11.12-r0 \\\n        nodejs=14.19.0-r0 \\\n        npm \\\n        postgresql-client=11.12-r0 \\\n        postgresql-contrib=11.12-r0 \\\n        postgresql-libs=11.12-r0 \\\n        postgresql=11.12-r0 \\\n        py3-pip \\\n        python3 \\\n        python3-dev \\\n        redis=6.0.16-r0 \\\n        rsyslog=8.2012.0-r3 \\\n        sudo=1.9.5p2-r0\n\n# Install openresty with public key\nRUN echo 'http://mirror.leaseweb.com/alpine/v3.13/community' \\\n        >> /etc/apk/repositories && \\\n    apk add --no-cache wget && \\\n    wget 'https://openresty.org/package/admin@openresty.com-5ea678a6.rsa.pub' && \\\n    mv 'admin@openresty.com-5ea678a6.rsa.pub' /etc/apk/keys/ && \\\n    source /etc/os-release && \\\n    MAJOR_VER=`echo $VERSION_ID | sed 's/\\.[0-9]\\+$//'` && \\\n    echo \"http://openresty.org/package/alpine/v$MAJOR_VER/main\" \\\n        | tee -a /etc/apk/repositories && \\\n    apk update && \\\n    apk add --no-cache openresty=1.19.3.2-r0 && \\\n    mkdir /usr/local/openresty/conf && \\\n    mkdir /usr/local/openresty/logs && \\\n    mkdir /usr/local/openresty/cache\n\nCOPY nginx_conf /usr/local/openresty/conf/\n\n# Create a db user if postgres in case it will be run inside this container\nCOPY scripts/init-db.sh scripts/init-db.sh\nRUN bash scripts/init-db.sh\n\n\n\nFROM node:14.16 AS builder\nRUN apt-get install -y --no-install-recommends make && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /app\nCOPY package*.json ./\nRUN npm install --loglevel verbose && npm cache clean --force;\n\n\n\nFROM base\n\n# overwrite locally copied node_modules with docker-built node_modules\nCOPY --from=builder /app/node_modules node_modules\nCOPY . .\n\n# Compile js code to typescript based on tsconfig.json\nRUN node_modules/.bin/tsc --project ./\n\nARG git_sha\nARG audius_loggly_disable\nARG audius_loggly_token\nARG audius_loggly_tags\n\nENV GIT_SHA=$git_sha\nENV logglyDisable=$audius_loggly_disable\nENV logglyToken=$audius_loggly_token\nENV logglyTags=$audius_loggly_tags\nENV port=4000\n\n# CMD [\"sh\", \"-c\", \"/usr/bin/wait && exec node src/index.js\"]\nCMD [\"bash\", \"scripts/start.sh\"]\n"
}