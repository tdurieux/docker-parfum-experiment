{
  "startTime": 1674253022554,
  "endTime": 1674253023510,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 18,
        "columnEnd": 59
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 15,
        "columnStart": 7,
        "columnEnd": 13
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:20.04\n\nRUN apt update && apt install --no-install-recommends -y software-properties-common \\\n    && add-apt-repository ppa:longsleep/golang-backports \\\n    && apt update \\\n    && apt install --no-install-recommends -y \\\n        curl \\\n        git \\\n        golang-go \\\n        graphviz \\\n        jq \\\n        parallel \\\n        python3-pip \\\n        sudo \\\n        tree \\\n        unzip \\\n    && rm -rf /var/lib/apt/lists/* \\\n    && ln -sv \"$(which python3)\" /usr/local/bin/python \\\n    && git config --system --add safe.directory /dud\n# safe.directory allows Git to parse and operate on the mounted source repo,\n# even if it is owned by a different user (which is likely, unless the UIDs\n# happen to match).\n# See: https://git-scm.com/docs/git-config#Documentation/git-config.txt-safedirectory\n\nCOPY integration/install_hyperfine_deb.sh ./\nRUN ./install_hyperfine_deb.sh\n\nRUN curl -f https://rclone.org/install.sh | bash\n\nRUN useradd --no-log-init -m user -G sudo \\\n    && echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers\n\nUSER user\n\nWORKDIR /home/user\n\n# Create a directory to mount a Docker volume to. If we don't create the mount\n# point now as the user, Docker will create it with root permissions when it\n# creates the container.\nRUN mkdir ~/dud-data\n\nENV PATH=$PATH:/home/user/go/bin:/home/user/.local/bin\n\nRUN pip install --no-cache-dir --no-cache --user dvc notebook \\\n    && dvc config --global core.analytics false \\\n    && dvc config --global core.check_update false \\\n    && dvc config --global cache.type symlink\n\n# Pre-download the Go dependencies for Dud.\nCOPY --chown=user go.mod go.sum ./\n\nRUN go mod download \\\n    && rm go.* \\\n    && go install mvdan.cc/gofumpt@latest \\\n    && go install golang.org/x/tools/cmd/goimports@latest \\\n    && go install honnef.co/go/tools/cmd/staticcheck@latest \\\n    && rm -rf /home/user/go/src\n\nWORKDIR /dud\n"
}