{
  "startTime": 1674218587997,
  "endTime": 1674218589526,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 50
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# SPDX-License-Identifier: Apache-2.0\n#\nFROM codercom/code-server:3.1.1\n# Revert back to root\nUSER root\n# Add essential build dependencies\nRUN apt-get update && \\\n    apt-get -y --no-install-recommends install build-essential python wget && \\\n    rm -rf /var/lib/apt/lists/*\n# Install Go and the various Go dependencies\nRUN wget -qO go1.13.6.linux-amd64.tar.gz https://dl.google.com/go/go1.13.6.linux-amd64.tar.gz && \\\n    tar xzvf go1.13.6.linux-amd64.tar.gz -C /usr/local && \\\n    rm go1.13.6.linux-amd64.tar.gz\nENV PATH /usr/local/go/bin:${PATH}\nRUN GOPATH=/tmp/go go get github.com/mdempsky/gocode \\\n    github.com/uudashr/gopkgs/cmd/gopkgs \\\n    github.com/ramya-rao-a/go-outline \\\n    github.com/acroca/go-symbols \\\n    golang.org/x/tools/cmd/guru \\\n    golang.org/x/tools/cmd/gorename \\\n    github.com/go-delve/delve/cmd/dlv \\\n    github.com/stamblerre/gocode \\\n    github.com/rogpeppe/godef \\\n    github.com/sqs/goreturns \\\n    golang.org/x/lint/golint \\\n    golang.org/x/tools/cmd/goimports \\\n    github.com/stamblerre/gocode \\\n    golang.org/x/tools/gopls && \\\n    tar cf - -C /tmp/go/bin . | tar xf - -C /usr/local/bin && \\\n    rm -rf /tmp/go\n# Install Java\nRUN mkdir /usr/local/java && \\\n    wget -qO OpenJDK8U-jdk_x64_linux_hotspot_8u232b09.tar.gz https://github.com/AdoptOpenJDK/openjdk8-binaries/releases/download/jdk8u232-b09/OpenJDK8U-jdk_x64_linux_hotspot_8u232b09.tar.gz && \\\n    tar xzvf OpenJDK8U-jdk_x64_linux_hotspot_8u232b09.tar.gz --strip 1 -C /usr/local/java && \\\n    rm OpenJDK8U-jdk_x64_linux_hotspot_8u232b09.tar.gz\nENV PATH /usr/local/java/bin:${PATH}\n# Install Node.js\nRUN mkdir /usr/local/node && \\\n    wget -qO node-v10.18.1-linux-x64.tar.xz https://nodejs.org/dist/v10.18.1/node-v10.18.1-linux-x64.tar.xz && \\\n    tar xJvf node-v10.18.1-linux-x64.tar.xz --strip 1 -C /usr/local/node && \\\n    rm node-v10.18.1-linux-x64.tar.xz\nENV PATH /usr/local/node/bin:${PATH}\n# Install other extensions for Visual Studio Code\nRUN code-server --extensions-dir /usr/local/extensions --install-extension golang.go && \\\n    code-server --extensions-dir /usr/local/extensions --install-extension redhat.java && \\\n    code-server --extensions-dir /usr/local/extensions --install-extension vscjava.vscode-java-debug && \\\n    chmod a+w /usr/local/extensions/redhat.java-*/server/config_linux\n# Install our extension for Visual Studio Code\nCOPY ibm-blockchain-platform-docker.vsix /tmp/\nRUN code-server --extensions-dir /usr/local/extensions --install-extension /tmp/ibm-blockchain-platform-docker.vsix && \\\n    cd /usr/local/extensions/ibmblockchain.ibm-blockchain-platform-* && \\\n    npm rebuild --update-binary --runtime=node --target=12.0.0\n# Install our settings for Visual Studio Code\nCOPY settings.json /etc/skel/.local/share/code-server/User/\nRUN for i in environments gateways packages wallets; do \\\n    mkdir -p /etc/skel/.fabric-vscode/$i; \\\n    touch /etc/skel/.fabric-vscode/$i/.keep; \\\n    done\n# Create a user which doesn't have sudo access\nRUN useradd -m -s /bin/bash vscode\nADD vscode.sh /usr/local/bin/\nUSER vscode\nWORKDIR /home/vscode\nENTRYPOINT [\"/usr/local/bin/vscode.sh\"]\n"
}