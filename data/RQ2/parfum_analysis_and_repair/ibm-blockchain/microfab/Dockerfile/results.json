{
  "startTime": 1674250595628,
  "endTime": 1674250596803,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 7,
        "columnEnd": 69
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 7,
        "columnEnd": 151
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 7,
        "columnEnd": 90
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 95
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 7,
        "columnEnd": 104
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 7,
        "columnEnd": 129
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 7,
        "columnEnd": 123
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 7,
        "columnEnd": 129
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 7,
        "columnEnd": 53
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# SPDX-License-Identifier: Apache-2.0\n#\nFROM registry.access.redhat.com/ubi8/ubi-minimal AS base\nADD docker/couchdb-rpm.repo /etc/yum.repos.d/couchdb-rpm.repo\nRUN microdnf install couchdb findutils gcc gcc-c++ git gzip make python3 shadow-utils tar unzip xz \\\n    && groupadd -g 7051 ibp-user \\\n    && useradd -u 7051 -g ibp-user -G root -s /bin/bash ibp-user \\\n    && microdnf remove shadow-utils \\\n    && microdnf clean all\nADD docker/local.ini /opt/couchdb/etc/local.d/local.ini\nENV PATH=/opt/couchdb/bin:${PATH}\nENV TINI_VERSION v0.19.0\nADD https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini /tini\nADD https://github.com/stedolan/jq/releases/download/jq-1.6/jq-linux64 /usr/local/bin/jq\nRUN chmod +x /tini /usr/local/bin/jq\nRUN mkdir -p /opt/go /opt/node /opt/java \\\n    && curl -f -sSL https://dl.google.com/go/go1.17.2.linux-amd64.tar.gz | tar xzf - -C /opt/go --strip-components=1 \\\n    && curl -f -sSL https://github.com/AdoptOpenJDK/openjdk11-binaries/releases/download/jdk-11.0.7%2B10/OpenJDK11U-jdk_x64_linux_hotspot_11.0.7_10.tar.gz | tar xzf - -C /opt/java --strip-components=1 \\\n    && curl -f -sSL https://nodejs.org/download/release/v16.4.0/node-v16.4.0-linux-x64.tar.xz | tar xJf - -C /opt/node --strip-components=1\nENV GOROOT=/opt/go\nENV GOCACHE=/tmp/gocache\nENV GOENV=/tmp/goenv\nENV GOPATH=/tmp/go\nENV JAVA_HOME=/opt/java\nENV MAVEN_OPTS=\"-Dmaven.repo.local=/tmp/maven\"\nENV npm_config_cache=/tmp/npm-cache\nENV npm_config_devdir=/tmp/npm-devdir\nENV PATH=/opt/go/bin:/opt/node/bin:/opt/java/bin:${PATH}\nRUN curl -f -sSL -o /tmp/gradle.zip https://services.gradle.org/distributions/gradle-5.6.4-bin.zip \\\n    && unzip -qq /tmp/gradle.zip -d /opt \\\n    && mkdir -p /opt/gradle/bin \\\n    && cd /opt/gradle/bin \\\n    && /opt/gradle-5.6.4/bin/gradle wrapper \\\n    && rm -f /tmp/gradle.zip \\\n    && rm -rf /opt/gradle-5.6.4 \\\n    && cd - \\\n    && curl -f -sSL https://downloads.apache.org/maven/maven-3/3.6.3/binaries/apache-maven-3.6.3-bin.tar.gz | tar xzf - -C /opt \\\n    && mv /opt/apache-maven-3.6.3 /opt/maven\nENV PATH=/opt/gradle/bin:/opt/maven/bin:${PATH}\nADD builders/java/pom.xml /opt/fabric-chaincode-java/\nRUN mkdir -p /opt/fabric \\\n    && curl -f -sSL https://hyperledger-fabric.jfrog.io/artifactory/fabric-binaries/hyperledger-fabric-linux-amd64-2.4-stable.tar.gz | tar xzf - -C /opt/fabric \\\n    && curl -f -sSL https://github.com/hyperledger/fabric/releases/download/v2.4.3/hyperledger-fabric-linux-amd64-2.4.3.tar.gz | tar xzf - -C /opt/fabric \\\n    && curl -f -sSL https://github.com/hyperledger/fabric-ca/releases/download/v1.5.2/hyperledger-fabric-ca-linux-amd64-1.5.2.tar.gz | tar xzf - -C /opt/fabric \\\n    && cd /opt/fabric-chaincode-java \\\n    && mvn -q dependency:copy-dependencies -DoutputDirectory=/opt/fabric-chaincode-java/lib \\\n    && npm install --unsafe-perm -g fabric-shim@2.4.1 \\\n    && rm -rf /tmp/gocache /tmp/goenv /tmp/go /tmp/maven /tmp/npm-cache /tmp/npm-devdir && npm cache clean --force;\nENV FABRIC_CFG_PATH=/opt/fabric/config\nENV PATH=/opt/fabric/bin:${PATH}\n\nFROM base AS builder\nADD . /tmp/microfab\nRUN cd /tmp/microfab \\\n    && mkdir -p /opt/microfab/bin /opt/microfab/data \\\n    && chgrp -R root /opt/microfab/data \\\n    && chmod -R g=u /opt/microfab/data \\\n    && go build -o /opt/microfab/bin/microfabd cmd/microfabd/main.go \\\n    && cp -rf builders /opt/microfab/builders\n\nFROM base\nCOPY --from=builder /opt/microfab /opt/microfab\nCOPY --from=base /opt/fabric/bin/ccaas_builder /opt/microfab/builders/ccaas\nCOPY docker/docker-entrypoint.sh /\nENV MICROFAB_HOME=/opt/microfab\nENV PATH=/opt/microfab/bin:${PATH}\nEXPOSE 8080\nUSER 7051\nVOLUME /opt/microfab/data\nENTRYPOINT [ \"/tini\", \"--\", \"/docker-entrypoint.sh\" ]\n"
}