{
  "startTime": 1674217906136,
  "endTime": 1674217907444,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 5,
        "columnEnd": 23
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:18-slim AS builder\n\nWORKDIR /app\nCOPY package*.json ./\nRUN npm install && npm cache clean --force;\nCOPY . ./\nRUN npm run build\n\nFROM node:18-slim AS runner\n\n# Required for python inside Docker containers\nENV LC_ALL C.UTF-8\nENV LANG C.UTF-8\n\nRUN apt-get update \\\n    && apt-get upgrade -y \\\n    && apt-get install -y --no-install-recommends python3 python3-pip python3-setuptools python3-wheel \\\n    # Slim down layer size\n    && apt-get autoremove -y \\\n    && apt-get autoclean -y \\\n    # Remove apt-get cache from the layer to reduce container size\n    && rm -rf /var/lib/apt/lists/*\n\nRUN npm install -g npm \\\n     && python3 -m pip install --no-cache-dir --upgrade pip && npm cache clean --force;\n\nWORKDIR /app\n\nCOPY requirements.txt ./\nRUN python3 -m pip install --no-cache-dir -r requirements.txt\n\nCOPY --from=builder /app/dist ./dist\nCOPY package*.json ./\nRUN npm ci --production \\\n    && npm cache clean --force\n\nENTRYPOINT [\"node\", \"/app/dist/main.js\"]\n"
}